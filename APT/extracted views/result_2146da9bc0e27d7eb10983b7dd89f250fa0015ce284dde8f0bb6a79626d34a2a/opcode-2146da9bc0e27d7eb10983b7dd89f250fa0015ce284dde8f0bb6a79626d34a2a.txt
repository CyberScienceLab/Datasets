push mov push lea push mov movl call movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl jmp int3 int3 int3 int3 int3 push mov push mov movl call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov lea mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub cmpb push mov mov jne jmp lea cmp jae mov jmp mov mov cmpb je mov cmp je cmp jb lea jmp mov lea pop cmp je lea mov call mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov lea mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub cmpb push mov mov jne jmp lea cmp jae mov jmp mov mov cmpb je mov cmp je cmp jb lea jmp mov lea pop cmp je lea mov call mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov movl mov mov push push lea mov call mov push call add mov mov pop pop pop mov pop ret int3 push mov push push push call push mov call add cmp jne or pop mov pop ret lea mov mov call lea mov movzbl pop mov pop ret push mov push push push call push mov call add cmp je lea mov mov call mov lea mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push call add ret int3 int3 int3 int3 int3 int3 mov mov sar sar mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movzbl movzbl movzbl shl or shl or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl cmpl jne movl mov cmp jl mov xor mov ret mov xor mov ret int3 int3 int3 int3 int3 int3 push push push xor xor mov xor mov mov add add cmp jl mov lea add mov cmp jne mov mov mov xor add mov cmp jne mov mov mov xor add mov cmp jne mov mov mov xor add mov cmp jne mov mov mov xor add mov cmp jne mov mov mov xor sub jne pop pop pop ret cmp jl mov jmp cmp jl mov jmp cmp jl mov jmp cmp jl mov jmp cmp jl mov jmp int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 int3 mov push push movzbl lea mov sar mov mov sar sub mov cmp jbe mov lea mov shl mov xor test sete pop pop add ret int3 int3 int3 int3 int3 mov cmp jae mov add jne mov add mov mov shl inc mov mov ret int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 movzbl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov movb pop ret movzbl shl movzwl ret int3 movzbl shl movzwl ret int3 movzbl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor push mov cmp je cmp jb mov incl cmpl jne mov mov cmp jl mov jmp mov xor mov mov movzbl shl cmp jb mov mov pop pop ret movzbl shl mov mov pop pop ret cmp jb mov incl cmpl jne mov mov cmp jl mov jmp mov xor mov mov movzbl shl cmp jb mov mov pop pop ret movzbl shl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov or mov xor push mov push mov push movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movw mov mov movl movw mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw mov mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw mov mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl movw mov mov movl movw mov mov mov movl mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movl mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov movw mov mov movl mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov movl movw mov movl movw mov movl movw mov mov movl movw mov mov movl movw mov movl movw mov movl movw mov mov movl movw mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov mov movl movw mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov movl movw mov movl movw mov movl movw mov movl movw mov mov movl mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov mov movl movw mov mov movl movw mov mov mov movl movw mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov mov mov lea mov mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov movl movw mov rep pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov xor mov mov movl movl mov mov mov mov lea call xor lea movb mov mov mov mov call push movb call xor add cmp je mov mov lea mov add dec jns jmp xor mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop pop pop mov pop ret int3 int3 push mov push mov mov push push call mov xor add cmp je push call add mov mov mov mov cmp je push call add testb mov mov mov movl je push call add pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push call mov xor add cmp je push call add mov mov mov mov cmp je push call add mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov movzbl push mov shl movzwl add mov movzbl shl movzwl mov add mov movzbl shl movzwl add add add mov movzbl shl movzwl add add add mov movzbl shl movzwl lea add mov movzbl shl movzwl lea add mov movzbl shl movzwl shl add mov movzbl shl movzwl shl add mov movzbl shl movzwl imul add mov movzbl shl movzwl imul add mov movzbl shl movzwl lea add add add mov movzbl shl movzwl lea add add add mov movzbl shl movzwl imul add mov movzbl shl movzwl imul add mov movzbl shl movzwl shl add mov movzbl shl movzwl shl add mov movzbl shl movzwl imul add mov movzbl shl movzwl imul add pop pop ret int3 push mov push push push push mov lea movl mov test je mov push call add decl jne mov mov lea mov cmp jl add mov mov lea mov cmp jl mov mov add mov imul mov add mov imul mov add mov imul mov add mov imul mov add mov imul mov add mov imul mov add imul mov add imul mov mov sub mov mov mov mov mov mov lea mov shl mov mov add lea mov lea mov mov mov shl add add lea push call mov add dec jne pop pop pop mov pop ret int3 push mov push push mov push push push push mov xor push lea mov mov xor mov lea movl mov mov mov call lea movb mov mov mov call mov mov mov mov mov mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 push mov mov push mov test je mov sub cmp jle mov jmp imul lea mov sub mov mov shr mov test jne mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov add xor mov add add push mov incl mov mov cmp je mov mov mov sub shr mov cmp je mov mov cmp jne mov mov imul mov mov movzbl lea inc mov mov mov sub cmp jne movl mov test je inc pop mov pop pop pop ret mov sub mov mov imul mov mov shr lea shr xor and lea add movzbl movzbl movzbl shl or shl or mov jle mov mov mov test jle lea lea test jle mov cmp je mov cmp jne mov dec dec dec mov mov test jg mov cmp jne xor mov mov mov mov sar mov mov mov sar mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push xor cmp je push call add mov mov mov mov cmp je push call add testb mov mov mov movl je push call add pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov push xor cmp je push call add mov mov mov mov cmp je push call add mov mov mov movl pop ret int3 int3 int3 push xor push push mov mov mov mov lea call add cmp je mov mov lea mov add dec jns jmp xor mov mov push xor mov mov mov call push xor mov call pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movzbl shl movzwl inc imul imul add mov movzbl shl movzwl imul add mov mov lea mov imul movzbl shl movzwl imul add mov movzbl shl movzwl imul add pop ret int3 push push mov mov push call mov push call mov mov lea lea mov mov cmp jl add mov cmp jl lea push mov call add mov test je mov push call add add imul mov sub add cmpl mov jle movl jmp mov xor cmp je mov mov mov mov mov mov mov mov mov mov mov imul mov imul add shl add add lea push mov call mov add push mov call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov mov mov ret int3 int3 int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov xor mov lea movl mov mov mov call movb push mov movl mov mov call add cmp je mov mov nop movw add dec jns jmp xor mov movb mov mov mov mov lea call lea push xor call mov mov mov movl mov mov mov pop pop pop pop mov pop ret int3 int3 int3 push mov cmpl jle mov movzbl mov shl movzwl shl add mov movzbl push shl movzwl mov shl add mov movzbl shl movzwl add add add mov movzbl shl movzwl add add add pop pop ret int3 push mov push push push mov incl mov xor cmp jl mov mov cmp jle dec mov cmp jne mov mov mov push call mov push call mov mov incl lea and lea lea mov mov mov lea cmp jne incl mov cmp jle cmp jle imul cmp jle mov mov cmp je mov cltd idiv mov mov jmp movl mov sub mov mov mov mov mov imul lea lea add push call mov mov mov and lea mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push xor cmp je push call add mov mov mov mov push call mov add cmp je push call add testb mov mov mov movl je push call add pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push xor cmp je push call add mov mov mov mov push call mov add cmp je push call add mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov mov mov mov lea push lea push mov call mov mov lea lea push lea push call mov mov movzbl lea imul shl movzwl imul add movzbl shl movzwl imul add mov lea mov imul movzbl shl movzwl imul add movzbl shl movzwl imul add mov mov lea lea push lea push call mov fildl add fnstcw movzwl fmull mov or fildl mov pop fdivrp fldcw fistpl mov fldcw mov pop ret int3 int3 int3 int3 int3 int3 int3 mov mov push push mov call mov mov lea push call lea mov call mov mov lea push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov lea push call mov xor mov mov mov mov mov movl mov mov mov mov mov mov mov call cmpl mov jne movl jmp jmp lea nop xor mov mov cmpb mov mov mov jne lea cmp jae mov jmp mov mov cmpb je cmp je cmp jb lea mov call mov mov mov cmpb mov mov jne cmp jae mov jmp mov mov cmpb je cmp je cmp jb lea mov call mov jmp xor cmp je lea mov mov call lea mov movzbl cmp jne xor incl jmp incl mov shl add decl mov jne lea mov mov jmp lea nop mov jmp lea mov mov mov movb mov mov add add cmp jl dec jne mov movl movl movl mov mov mov mov mov mov mov lea mov sar add mov inc add cmp jl mov lea nop mov sar add mov inc add cmp jl lea lea mov mov sub sub mov add dec jne mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 push mov push push mov push push push push push mov xor push lea mov mov push call xor lea mov mov movb lea movl mov mov mov call lea xor movb mov mov mov call xor mov mov mov mov mov lea movb call lea push movb call mov mov mov pop pop pop pop mov pop ret mov push xor cmp je push call add mov mov mov mov push call mov add cmp je push call add mov mov mov movl mov push call mov add cmp je push call add mov mov mov mov cmp je push call add mov mov mov movl mov push call mov add cmp je push call add mov mov mov mov cmp je push call add mov mov mov movl pop ret int3 int3 int3 int3 mov push call pop ret int3 int3 int3 int3 int3 push mov sub push push mov add lea call movzwl mov sub mov shr mov mov mov lea mov mov mov lea push lea push mov mov call mov mov xor lea cmp setg xor lea cmp setg xor add mov cmp mov setg mov mov mov add lea mov mov movzbl shl movzwl lea imul imul add mov movzbl shl movzwl imul mov add mov lea mov imul movzbl shl movzwl imul add mov movzbl shl movzwl imul mov add mov lea lea mov push lea push call mov mov xor lea cmp setg xor lea cmp setg xor add mov cmp setg add lea shl add movzbl mov lea mov sar mov mov sar sub mov cmp jbe mov add mov shl mov xor test sete add cmpl je mov movzbl inc mov sar sub mov cmpl jbe mov movzbl inc mov sar sub mov cmpl jae mov movzbl inc mov sar sub mov cmpl jae mov movzbl inc mov sar sub mov mov lea mov add mov sub shr cmp jb shr imul jmp cmp jb shr imul shr jmp cmp jb shr imul shr jmp cmp jb shr imul shr jmp imul shr add cmpl jne cmpl jne mov jmp cmp ja movl mov jmp movl inc mov mov mov mov lea push mov call mov mov mov lea push call mov add call mov mov mov lea push call test jne mov addl mov test je add cmp jbe add cmp jae add cmp jae add mov lea cmp jae lea mov add jne mov add mov mov shl inc mov mov mov xor test jne lea cmpl jne movzbl mov mov cmpb mov mov mov mov jne cmp jae mov jmp mov mov cmpb je mov cmp je cmp jb lea jmp mov lea cmp je lea mov call mov jmp xor mov mov cmpb mov mov jne cmp jae mov jmp mov mov cmpb je mov cmp je cmp jb lea jmp mov lea cmp je lea mov call mov jmp xor cmp je lea mov mov call mov lea mov mov incl mov shll shl add cmpl mov jne mov mov cmpb mov mov mov jne cmp jae mov jmp mov mov cmpb je mov cmp je cmp jb lea jmp mov lea cmp je lea mov call mov mov mov jmp movl mov mov cmpb mov mov jne cmp jae mov jmp mov mov cmpb je mov cmp je cmp jb lea jmp mov lea cmp je lea mov call mov mov jmp xor cmp je lea mov mov call mov lea mov movzbl cmp jne mov mov cmpb mov mov mov jne cmp jae mov jmp mov mov cmpb je mov cmp je cmp jb lea jmp mov lea cmp je lea mov call incl xor cmpl jle push call add mov call push call incl mov shl add mov mov xor test je mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov movl cmpl jne mov xor test jne movzbl mov mov mov mov cmpb mov mov jne lea cmp jae mov jmp mov mov cmpb je mov cmp je cmp jb lea jmp mov lea cmp je lea mov call mov jmp xor mov mov cmpb mov mov jne cmp jae mov jmp mov mov cmpb je mov cmp je cmp jb lea jmp mov lea cmp je lea mov call mov jmp xor cmp je lea mov mov call lea mov mov mov mov shll shl add mov mov xor test je movzbl mov push mov call push mov call add cmp je lea mov mov call mov lea mov mov cmpl jle mov push call mov mov mov fildl mov fildl fildl sub cltd and fdivl add sar fstpl fld fmull fdiv fstpl fxch fmull fdivp fstpl push push push call add lea call mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call mov mov mov test jle mov mov fildl mov sub fildl sub mov fildl cltd and add fdivl sar fstpl fld fmull fdiv fstpl fxch fmull fdivp fstpl push push push call add jmp push call add mov mov sub mov add add movl movl pop mov pop ret push mov and push push mov push xor push lea push call dec lea jne pop mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov push push mov mov mov shr and push call add dec jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push push mov xor push lea mov call mov lea mov mov call mov mov lea mov mov call mov movl test jne push call add mov mov test je push push push call jmp xor mov movl mov mov mov add mov cmp je jmp jmp lea nop mov movsbl mov jmp lea mov shr and push call add dec jne mov mov inc mov cmp jne mov test je push call push call add mov mov cmpb movl mov mov jne lea cmp jae mov jmp mov mov cmpb je mov cmp je cmp jb lea jmp mov lea cmp je lea mov call mov mov mov pop pop pop pop mov pop ret xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call push call add mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov mov push call add test je call jmp xor mov call lea mov mov call mov mov lea mov mov call movl mov test jne push call add mov movl test je push push push call jmp xor movl mov mov add cmp je mov call mov inc cmp jne mov mov test je push call push call add mov push call add movl mov mov pop pop pop mov pop ret int3 push mov sub push movl call add test je mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov mov mov cmpb mov jne mov lea cmp jae mov jmp mov mov cmpb je cmp je mov cmp jae mov push lea mov movl call push lea mov call mov pop pop add pop mov pop ret pop lea pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov movl mov mov push push lea mov call mov push call add mov mov pop pop pop mov pop ret int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov cmpb jne push mov cmp jae mov jmp mov mov cmpb je pop mov mov cmp je mov cmp jb lea mov mov pop mov pop ret mov lea mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 int3 int3 push mov push mov xor mov mov mov mov call mov pop pop ret int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call add test je mov mov jmp lea movw add dec jns mov mov ret xor mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret int3 int3 int3 int3 int3 int3 push mov xor mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 push mov xor mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub mov imul mov shr add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call add test je mov mov jmp lea movw add dec jns mov mov ret xor mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret int3 int3 int3 int3 int3 int3 push mov xor mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea lea ret int3 int3 int3 int3 int3 int3 int3 push call add test je mov mov jmp lea movw add dec jns mov mov ret xor mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret int3 int3 int3 int3 int3 int3 movw ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec js xor mov mov add dec jns ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push movl call add test je mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov cmpb jne push mov mov cmp jae mov jmp mov mov cmpb je pop mov pop ret push mov push mov mov push push push lea call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 mov push call pop ret int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp sbb neg ret int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov mov sub sar cmp jbe lea cmp je mov cmp je mov mov add add cmp jne mov pop mov pop ret jae mov sub mov call mov mov mov sub push sar mov sub call mov mov sub add sar sub lea mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov mov mov ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov sub cmp jbe push lea cmp je push mov sub push push push call add add mov pop pop ret jae sub add mov call mov mov sub add je push push push call add mov add mov ret int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov mov mov ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov sub mov imul mov shr add cmp jbe add cmp je mov cmp je mov mov mov mov add add cmp jne mov pop mov pop ret jae push mov sub mov call mov mov push mov sub mov imul mov shr add mov sub mov call mov mov sub mov imul mov shr add mov sub add lea add mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov mov mov ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov sub mov imul sar mov shr add cmp jbe lea cmp je mov cmp je lea mov mov mov mov mov mov add add cmp jne mov pop mov pop ret jae push mov sub mov call mov mov push mov sub mov imul sar mov shr add mov sub mov call mov mov sub mov imul sar mov shr add add mov sub lea lea mov pop pop mov pop ret int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov mov mov ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov mov cmp jne cmp jne call mov mov mov mov pop mov pop ret cmp je cmpb mov jne mov cmpb jne mov mov cmpb jne lea mov mov cmpb je mov jmp mov cmpb jne cmp jne mov mov mov cmpb je mov push lea push push call mov cmp jne mov mov pop mov pop ret int3 int3 int3 int3 mov mov cmpb jne mov mov cmp jae mov jmp mov mov cmpb je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push movl call add test je mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub sar ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp je push mov cmp je push jmp lea mov mov add add cmp jne pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push sub mov sar sub cmp jae push call add mov sub sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp je push mov push sub push push push mov call mov add add pop mov pop pop ret mov pop ret int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push or sub sub cmp jae push call add mov sub cmp jbe mov shr or sub cmp jae xor jmp add cmp jae mov push call pop pop ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp je push mov cmp je push jmp lea mov mov mov mov add add cmp jne pop mov pop pop ret int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov sub mov imul mov shr mov add sub cmp jae push call mov sub mov imul mov shr add add cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push call pop pop ret int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub mov imul sar mov shr add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp je push mov cmp je push mov mov mov mov mov mov add add cmp jne pop mov pop pop ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov sub mov imul sar mov shr mov add sub cmp jae push call mov sub mov imul sar mov shr add add cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push call pop pop ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add mov ret int3 int3 int3 int3 int3 mov add mov ret int3 int3 int3 int3 int3 mov add mov ret int3 int3 int3 int3 int3 push mov mov sub cmpb je push call push push mov push lea mov call mov cmpb je mov jmp mov cmpb je mov jmp mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp mov cmpb mov jne nop mov mov cmpb je mov mov mov mov cmp jne cmpb je mov mov jmp mov call mov mov mov jmp mov mov mov cmp jne mov jmp cmpb mov jne mov mov mov mov mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov cmp je cmp jne mov cmp jne mov cmpb jne mov push mov movb call mov mov cmpb jne mov cmp jne mov cmp je mov cmp jne mov mov push movb call mov mov mov mov mov mov mov push mov call jmp cmpb jne mov push mov movb call mov mov cmpb jne mov cmp jne mov cmp jne movb mov mov mov cmp jne jmp mov cmp jne mov mov push movb call mov mov mov mov mov mov mov push mov call mov mov push call mov mov add pop pop pop test je dec mov mov mov mov mov pop ret int3 int3 mov push mov cmpb push mov jne mov push mov call mov push call add cmpb mov je mov mov mov mov mov pop mov movl pop ret int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test jne mov lea push lea call push lea push movl call mov pop ret int3 int3 int3 int3 mov mov call mov ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov cmp jbe push call mov sub sar cmp jae call mov movl mov mov mov push mov mov call mov mov sub add sar test je push call add mov lea lea mov mov mov mov mov pop pop pop pop mov pop ret mov push call add push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub sar ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push sar mov shr mov sub cmp pop jae xor jmp add cmp jae mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 push mov mov cmp jbe push call mov sub cmp jae push push call mov mov mov sub push push push call mov mov add sub test je push call add mov add lea mov pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov or shr sub cmp pop jae xor jmp add cmp jae mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov cmp jbe push call mov sub mov imul mov shr add cmp jae call movl mov mov mov push mov call mov mov sub mov imul mov shr add add test je push call add mov mov lea add lea add mov mov mov mov mov pop pop pop pop mov pop ret mov push call add push push call int3 int3 int3 int3 mov sub mov imul mov shr add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub mov imul mov shr add mov shr mov sub cmp jae xor jmp add cmp jae mov ret int3 push call int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov cmp jbe push call mov sub mov imul sar mov shr add cmp jae call movl mov mov mov push mov call mov mov sub mov imul sar mov shr add add test je push call add mov lea mov lea lea mov lea mov mov mov mov pop pop pop pop mov pop ret mov push call add push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub mov imul sar mov shr add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub mov imul sar mov shr add mov shr mov sub cmp jae xor jmp add cmp jae mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 addl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 addl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 addl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 int3 int3 push mov push push push mov cmpb mov mov jne mov push mov call mov push call add cmpb mov je pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmpb jne mov mov mov mov mov cmp jne mov mov mov pop ret mov cmp jne mov mov mov pop ret mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmpb jne mov mov mov mov mov cmp jne mov mov mov pop ret mov cmp jne mov mov mov pop ret mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmpb jne lea mov mov cmpb je ret int3 int3 int3 int3 mov cmpb jne mov mov cmpb je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call mov ret int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea add add push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 addl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 addl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 addl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 int3 int3 mov cmpb jne mov cmpb jne mov cmpb jne lea mov mov cmpb je mov ret mov cmpb jne mov cmp jne mov mov cmpb je mov ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov and push mov shr push lea mov mov mov mov cmp jae mov lea nop movzbl test je movzbl cmp je cmp jge mov mov inc add cmp jb mov mov mov mov mov movb mov add mov mov add pop pop pop mov pop ret mov pop mov movb mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov and push mov shr push lea mov mov mov mov cmp jae mov lea nop movzbl test je movzbl cmp je cmp jge mov mov inc add cmp jb mov mov mov mov mov movb mov add mov mov add pop pop pop mov pop ret mov pop mov movb mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov and push mov shr push lea mov mov mov mov cmp jae mov lea nop movzbl test je movzbl cmp je cmp jge mov mov inc add cmp jb mov mov mov mov mov movb mov add mov mov add pop pop pop mov pop ret mov pop mov movb mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov call mov push mov mov call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je push mov push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp je push mov mov add add cmp jne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push sub mov push push push call add lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp je mov mov mov mov add add cmp jne ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp je push mov mov mov mov mov mov add add cmp jne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov pop ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmp ja lea add add add push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 push mov mov push mov call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 push mov mov push mov call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmp ja add push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub cmp ja lea add add push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 push mov mov push push mov call movl mov pop pop ret int3 int3 int3 int3 push mov sub push mov cmpl push mov jne mov push push push call pop mov pop mov pop ret mov mov cmp jne mov cmp jae push push push call pop mov pop mov pop ret cmp jne mov mov cmp jae push push push call pop mov pop mov pop ret mov cmp jae lea mov call mov mov cmp jae mov cmpb push jne mov push push call pop mov pop mov pop ret mov mov cmp jae lea mov call mov cmp je mov cmp jae mov mov cmpb push jne push push mov call pop mov pop mov pop ret push push lea call mov pop mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push push mov mov cmpb mov mov jne mov mov cmp mov setb mov test je mov jmp mov cmpb je mov mov test je mov cmp jne mov push push lea push mov mov call mov pop mov movb mov pop mov pop ret lea call mov mov mov mov push cmp jae mov push lea push mov mov call mov pop mov movb mov pop mov pop ret call add pop mov movb mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb mov push call add push call inc push mov mov mov mov xor cmp jne mov mov mov mov jmp cmp je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov cmp jne push mov mov cmp jne mov cmp jne movb movb mov mov mov mov mov jmp cmp jne mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov movb mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov mov jmp mov cmp jne mov mov jmp mov mov jmp mov cmp jne movb movb mov mov mov mov mov jmp cmp jne mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov movb mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov cmp je pop mov mov mov mov movb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call mov ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call mov ret int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmpb je mov mov ret mov cmpb jne mov cmpb jne nop mov mov cmpb je mov ret mov cmpb jne mov cmp jne mov mov cmpb je mov cmpb jne mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call xor add cmp je mov mov mov mov mov mov lea mov cmp je mov mov mov mov mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push xor cmp jbe push mov mov cmp je mov dec add cmp ja pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov test je push mov push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push xor cmp jbe push mov mov cmp je mov mov dec add cmp ja pop mov pop ret int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 test je push push xor xor xor lea test je mov mov mov add dec jne pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp je push mov mov add add cmp jne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push sub mov push push push call add lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp je mov mov mov mov add add cmp jne ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp je push mov mov mov mov mov mov add add cmp jne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 int3 int3 push mov push mov push mov call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call xor add cmp je mov mov mov mov mov mov mov mov pop ret lea mov push lea call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov ret int3 test je mov mov ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov inc dec jne ret int3 int3 int3 test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp je push test je mov mov add add cmp jne pop ret int3 int3 int3 int3 int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 int3 int3 cmp je test je mov mov mov mov add add cmp jne ret int3 cmp je push test je mov mov mov mov mov mov add add cmp jne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov ret int3 test je mov mov ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor cmp jae push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl test je mov test je mov ret int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov test je mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 test jne ret push call add ret push mov xor mov divl cmp je xor pop ret test je push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push call pop ret int3 int3 int3 xor mov mov mov ret int3 int3 int3 int3 push mov mov sub push mov xor sub mov mov cmp jbe mov mov mov inc mov mov push mov mov mov push mov mov mov sub movzbl dec mov movzbl shl xor movzbl shl xor mov imul shr and mov mov mov mov mov mov mov incl movzwl mov mov mov inc add test jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor mov mov mov mov mov mov cmp jne movl cmp jne movl mov movl cmp ja mov cmp ja lea cmp ja xor jmp push call add push push mov call mov add add mov lea je xor mov div cmp jne cmp jbe push call add jmp xor mov add mov lea je xor mov div cmp jne cmp jbe push call add jmp xor push mov call add mov cmp je cmp je cmp je cmp je cmp je push call add mov mov cmp je mov mov lea mov add movl mov mov mov cmp jb pop or pop mov pop ret mov push mov mov add push push mov call mov push push push call mov mov mov mov mov mov mov mov mov add sub mov je mov cmp jbe mov mov push mov push push call mov mov add add mov cmp jne movl mov movl test jne neg pop mov xor pop mov pop ret sub mov pop xor pop mov pop ret pop mov pop mov pop ret mov pop mov pop ret int3 int3 mov push xor cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov pop ret int3 int3 int3 mov mov push cmp jae mov movzbl inc mov test jns mov test je dec mov jmp mov mov mov cmp jae mov mov mov mov add cmp jne movl add cmp jne movl add pop cmp jne movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test jne mov movzbl add shl push movzbl xor movzbl shl xor mov imul shr and decl lea movzwl mov lea pop cmp jne movl ret dec mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl jbe mov mov inc push mov mov push mov push mov mov mov mov mov cmpl jne movzbl movzbl shl xor movzbl shl xor mov imul shr and decl movzwl mov cmp jne movl jmp decl movzbl movzbl shl xor movzbl shl xor mov imul shr and mov mov mov mov mov mov mov mov mov incl movzwl mov mov mov mov cmp jae movzbl inc mov test jns mov test je dec mov mov mov inc mov cmp jne xor mov inc cmp jne xor mov inc mov cmp jne xor mov decl jne mov mov pop mov pop mov mov pop mov pop ret mov mov cmp jae mov mov jmp int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov add cmpl mov mov jbe nop mov mov decl add cmp jne mov cmp jne mov cmp jne mov cmp jne lea add lea mov inc add cmp jae mov inc cmp je mov sub cmp jbe mov mov mov cmp je cmp jae mov cmp ja mov mov cmpl mov mov mov ja pop pop mov pop ret mov mov movzwl mov mov cmp jne xor ret mov cmp jae mov mov mov ret int3 int3 push mov sub push push mov mov mov lea movzbl push movzbl shl xor movzbl mov shl xor mov imul shr and lea mov mov mov mov mov lea mov lea mov mov cmp jbe test je mov mov mov mov movzbl mov mov mov cmp jb test jne movl mov mov inc movl mov jmp movzwl mov mov cmp je cmp jae movl mov cmp jb mov push push call add mov cmp jbe mov mov cmp jbe sub mov jmp mov sub add mov mov mov mov mov mov test jne mov movzbl lea movzbl shl xor movzbl shl xor mov imul shr and decl lea movzwl mov cmp lea jne movl mov movzwl mov pop pop mov pop mov pop ret dec mov mov movzwl mov pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push xor mov movl mov mov mov mov mov mov mov mov mov mov call mov cmp je call pop pop mov pop pop ret mov and pop mov pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub push mov call sub add inc jmp sub add mov movl call mov mov mov mov mov call xor cmp jge mov mov mov call jmp mov inc mov mov sub mov mov pop test je mov cmp jbe mov mov push mov push push push call add addl xor pop ret int3 int3 int3 int3 int3 push xor cmp je cmp je or pop ret mov cmp je cmp je cmp je cmp jne mov cltd and add sar mov mov mov mov mov xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov ret int3 int3 int3 int3 int3 mov push cmp jae test jne mov mov add mov mov mov lea inc mov mov pop ret mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov mov movl pop ret int3 int3 push mov mov mov mov incl pop ret mov test je push cmp je mov cmp jae test jne mov mov add mov mov mov add inc mov mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl movl mov cmp jne mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov xor mov mov pop ret movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp jb push add push mov mov lea add cmp jae shr mov shr mov and neg sbb neg cmp jae test jne mov mov add mov mov mov inc lea mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl mov mov cmp jae test jne mov mov add mov mov shll inc mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl movl mov cmp ja pop pop and call mov call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov push cmp jbe mov push add push push call mov mov sub add add cmp ja mov add cmp jbe mov mov mov cmp jbe mov xor mov call mov cmp jne mov call mov call jmp dec shr inc push mov call movzbl mov dec add mov incl mov cmp sbb neg or sub add cmp jb xor mov call call add push call mov add pop mov pop pop pop ret mov cmp sbb neg mov call mov and call mov pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov add cmp jbe mov push push mov mov cmp jae test jne mov mov add mov mov mov lea inc mov mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov mov mov mov mov mov mov add add sub mov jne pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 cmp jb jne cmp ja cmp ja push mov cmp sbb push neg mov sub add pop pop cmp jne mov jmp dec shr mov test je add shr jne add cmp jb sub add shr jne ret or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov mov push mov lea mov cmp ja push lea push sub lea push lea push mov call or lea push mov mov mov mov mov mov mov mov mov lea mov mov mov mov push push mov mov mov call mov or mov mov mov mov mov mov xor mov mov mov mov mov mov add lea movl movl call test jne mov mov mov mov mov mov cmp jae mov mov mov cmp jb mov mov mov mov mov cmp je mov cmp jae mov mov cmp jae mov cmp jae mov mov cmp jb cmp jb mov push lea lea call add test jne cmp je or pop pop pop mov xor call mov pop ret mov test je mov mov test je mov mov cmp jae mov mov test je mov mov push push push push call add push xor lea lea movl call add test jne cmp jbe mov jmp lea mov sub cmpl mov mov mov mov mov jne mov mov cmp jb jne cmp ja cmp ja mov xor cmp jbe cmp jae cmp je mov lea call mov mov mov dec mov cmp jbe mov cmp jbe mov jmp lea cmp jbe mov cmp jb mov shr mov jmp mov mov push mov lea lea call mov addl add inc cmp jb mov mov lea call test js mov mov sub add lea add mov add cmp jg mov cmp jb mov mov push lea call mov push lea push push movl call mov mov mov inc mov push lea lea call mov add jmp incl add mov jmp mov mov add push lea lea mov call add mov cmpl ja mov mov push lea call xor call push call mov movb incl add lea call mov sub mov mov mov mov mov test je mov push mov push push mov push call add lea call pop pop xor pop mov xor call mov pop ret pop pop mov pop mov xor call mov pop ret mov pop xor mov pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push mov xor xor xor movl lea test je add jmp movzbl lea inc test je mov mov inc inc jmp mov mov lea test je add jmp movzbl lea inc mov shr and lea test je add jmp movzbl lea inc test je cmp jne mov jmp movzbl add shl add inc cmp je inc mov test je add jmp movzbl lea inc mov shr and test je add jmp movzbl lea inc mov shr and lea test jne mov jmp lea test je add jmp movzbl lea inc mov shr and lea test je add jmp movzbl lea inc test je add mov cmp sbb neg add mov mov mov sub mov mov add mov inc inc mov mov mov inc inc decl jne mov jmp mov pop mov mov pop pop cmp jne xor mov pop ret sbb and add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor xor push xor movl add test jne movzbl movzbl add shl add lea mov shr and test je mov mov mov inc inc jmp mov nop add test jne movzbl movzbl add shl add lea mov shr and add lea test jne movzbl movzbl add shl add lea mov shr and test je cmp jne mov jmp movzbl add shl add inc cmp je inc mov add mov test jne movzbl movzbl add shl add lea mov shr add and test jne movzbl movzbl add shl add lea mov shr and lea test jne mov lea add test jne movzbl movzbl add shl add lea mov shr and add lea test jne movzbl movzbl add shl add lea mov shr and test je add mov cmp sbb neg add mov mov sub inc add mov mov mov incl mov jmp lea mov mov mov mov mov add add sub jne jmp mov mov mov pop pop cmp jne xor mov pop ret sbb and add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov xor xor xor xor movl jmp lea test je dec mov shr and jmp mov mov add mov shr test je mov mov mov mov inc inc jmp mov mov lea test je dec mov shr and jmp mov mov add mov shr lea test je dec mov shr and jmp mov mov add mov shr test je cmp jne mov jmp movzbl add shl add inc cmp je inc mov mov test je dec mov shr and test je dec mov shr and jmp mov mov dec mov shr mov add shr and jmp mov mov add mov shr lea test jne mov lea test je dec mov shr and jmp mov mov add mov shr lea test je dec mov shr and jmp mov mov add mov shr test je add mov mov cmp sbb neg add mov mov mov sub add inc mov mov mov incl mov mov mov mov mov mov add add sub jne mov jmp mov mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret int3 int3 push mov sub mov mov push push mov push mov xor xor xor movl mov mov test je add jmp movzbl lea inc test je cmp jae cmp jae mov mov inc inc jmp mov test je add jmp movzbl lea inc mov shr and lea cmp jae cmp ja test je add jmp movzbl lea inc test je cmp jne mov jmp cmp jae movzbl add shl add inc cmp je inc mov test je add jmp movzbl lea inc mov shr and test je add jmp movzbl lea inc mov shr and lea test jne mov jmp lea test je add jmp movzbl lea inc mov shr and lea cmp jae cmp jae test je add jmp movzbl lea inc test je add mov mov cmp sbb neg add mov add cmp ja cmp ja mov sub mov mov add mov inc inc nop mov mov inc inc decl jne mov jmp mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov pop pop mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push xor xor push xor movl mov lea add test jne movzbl movzbl add shl add lea mov shr and test je cmp jae cmp jae mov mov mov inc inc jmp mov lea add test jne movzbl movzbl add shl add lea mov shr and lea cmp jae cmp ja add test jne movzbl movzbl add shl add lea mov shr and test je cmp jne mov jmp cmp jae movzbl add shl add inc cmp je inc mov add mov test jne movzbl movzbl add shl add lea mov shr add and test jne movzbl movzbl add shl add lea mov shr and lea test jne mov add test jne movzbl movzbl add shl add lea mov shr and lea cmp jae cmp jae add test jne movzbl movzbl add shl add lea mov shr and test je add mov cmp sbb neg add mov add cmp ja mov cmp ja mov sub add inc mov mov mov incl mov lea mov mov mov mov mov add add sub jne jmp mov mov pop mov pop mov pop ret mov pop mov mov pop mov pop ret mov pop mov mov pop mov pop ret mov pop mov mov pop mov pop ret mov mov mov cmp jne pop xor pop mov pop ret sbb and pop add pop mov pop ret mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push push push mov xor xor xor xor movl mov mov test je dec mov shr and jmp mov mov add mov shr test je cmp jae cmp jae mov mov mov mov inc inc jmp mov nop test je dec mov shr and jmp mov mov add mov shr lea cmp jae cmp ja test je dec mov shr and jmp mov mov add mov shr test je cmp jne mov jmp cmp jae movzbl add shl add inc cmp je inc mov mov test je dec mov shr and test je dec mov shr and jmp mov mov dec mov shr mov add shr and jmp mov mov add mov shr lea test jne lea jmp mov test je dec mov shr and jmp mov mov add mov shr lea mov cmp jae cmp jae test je dec mov shr and jmp mov mov add mov shr test je addl mov mov mov cmp sbb neg add mov mov add cmp ja cmp ja mov sub inc add mov mov mov incl mov jmp lea mov mov incl mov inc decl jne mov jmp mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push mov add push xor xor mov movl mov mov cmp jb mov pop mov mov pop mov pop ret lea test je add jmp movzbl lea inc test je cmp jae cmp jae cmp ja inc mov inc jmp mov mov test je add jmp movzbl lea inc mov shr and lea cmp jae cmp ja test je add jmp movzbl lea inc test je cmp jne mov jmp cmp jae movzbl add shl add inc cmp je inc mov test je add jmp movzbl lea inc mov shr and test je add jmp movzbl lea inc mov shr and lea test jne mov test je add jmp movzbl lea inc mov shr and lea cmp jae cmp jae test je add jmp movzbl lea inc test je add mov cmp sbb neg add add cmp ja mov cmp ja inc mov cmp ja mov mov mov jmp mov mov pop mov pop mov pop ret mov mov pop mov pop mov pop ret mov mov pop mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov mov cmp jne pop xor pop mov pop ret sbb and pop add pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret mov pop mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov mov push mov add xor xor movl mov mov cmp jb mov pop pop mov mov pop mov pop ret lea add test jne movzbl movzbl add shl add lea mov shr and test je cmp jae cmp jae cmp ja inc inc jmp mov lea lea test jne movzbl movzbl add shl add lea mov shr and lea cmp jae cmp ja lea test jne movzbl movzbl add shl add lea mov shr and test je cmp jne mov jmp cmp jae movzbl add shl add inc cmp je inc mov add mov test jne movzbl movzbl add shl add lea mov shr add and test jne movzbl movzbl add shl add lea mov shr and lea test jne mov lea lea test jne movzbl movzbl add shl add lea mov shr and lea cmp jae cmp jae lea test jne movzbl movzbl add shl add lea mov shr and test je add mov cmp sbb neg add add cmp ja cmp ja lea cmp ja mov jmp mov pop pop mov mov pop mov pop ret mov pop mov pop mov pop mov pop ret mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov pop pop mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov mov add xor xor mov movl mov mov cmp jb mov pop mov mov pop mov pop ret lea test je dec mov shr and jmp mov mov add mov shr test je cmp jae mov cmp jae cmp ja inc mov inc jmp mov lea test je dec mov shr and jmp mov mov add mov shr lea cmp jae cmp ja test je dec mov shr and jmp mov mov add mov shr test je cmp jne mov jmp cmp jae movzbl add shl add inc cmp je inc mov mov test je dec mov shr and test je dec mov shr and jmp mov mov dec mov shr mov add shr and jmp mov mov add mov shr lea test jne mov test je dec mov shr and jmp mov mov add mov shr lea cmp jae cmp jae test je dec mov shr and jmp mov mov add mov shr test je add mov cmp sbb neg add mov add cmp ja mov cmp ja inc mov cmp ja mov jmp mov mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov mov mov cmp jne pop xor pop mov pop ret sbb and pop add pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov mov mov ret int3 int3 int3 int3 push mov mov sub push mov xor sub mov mov cmp jbe mov mov mov inc mov mov push mov mov mov push mov mov mov sub movzbl dec mov movzbl shl xor movzbl shl xor mov imul shr and mov mov mov mov mov mov mov incl movzwl mov mov mov inc add test jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor mov mov mov mov mov mov cmp jne movl cmp jne movl mov movl cmp ja mov cmp ja lea cmp ja xor jmp push call add push push mov call mov add add mov lea je xor mov div cmp jne cmp jbe push call add jmp xor mov add mov lea je xor mov div cmp jne cmp jbe push call add jmp xor push mov call add mov cmp je cmp je cmp je cmp je cmp je push call add mov mov cmp je mov mov lea mov add movl mov mov mov cmp jb pop or pop mov pop ret mov push mov mov add push push mov call mov push push push call mov mov mov mov mov mov mov mov mov add sub mov je mov cmp jbe mov mov push mov push push call mov mov add add mov cmp jne movl mov movl test jne neg pop mov xor pop mov pop ret sub mov pop xor pop mov pop ret pop mov pop mov pop ret mov pop mov pop ret int3 int3 mov push xor cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov pop ret int3 int3 int3 mov mov push cmp jae mov movzbl inc mov test jns mov test je dec mov jmp mov mov mov cmp jae mov mov mov mov add cmp jne movl add cmp jne movl add pop cmp jne movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test jne mov movzbl add shl push movzbl xor movzbl shl xor mov imul shr and decl lea movzwl mov lea pop cmp jne movl ret dec mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl jbe mov mov inc push mov mov push mov push mov mov mov mov mov cmpl jne movzbl movzbl shl xor movzbl shl xor mov imul shr and decl movzwl mov cmp jne movl jmp decl movzbl movzbl shl xor movzbl shl xor mov imul shr and mov mov mov mov mov mov mov mov mov incl movzwl mov mov mov mov cmp jae movzbl inc mov test jns mov test je dec mov mov mov inc mov cmp jne xor mov inc cmp jne xor mov inc mov cmp jne xor mov decl jne mov mov pop mov pop mov mov pop mov pop ret mov mov cmp jae mov mov jmp int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov add cmpl mov mov jbe nop mov mov decl add cmp jne mov cmp jne mov cmp jne mov cmp jne lea add lea mov inc add cmp jae mov inc cmp je mov sub cmp jbe mov mov mov cmp je cmp jae mov cmp ja mov mov cmpl mov mov mov ja pop pop mov pop ret mov mov movzwl mov mov cmp jne xor ret mov cmp jae mov mov mov ret int3 int3 push mov sub push push mov mov mov lea movzbl push movzbl shl xor movzbl mov shl xor mov imul shr and lea mov mov mov mov mov lea mov lea mov mov cmp jbe test je mov mov mov mov movzbl mov mov mov cmp jb test jne movl mov mov inc movl mov jmp movzwl mov mov cmp je cmp jae movl mov cmp jb mov push push call add mov cmp jbe mov mov cmp jbe sub mov jmp mov sub add mov mov mov mov mov mov test jne mov movzbl lea movzbl shl xor movzbl shl xor mov imul shr and decl lea movzwl mov cmp lea jne movl mov movzwl mov pop pop mov pop mov pop ret dec mov mov movzwl mov pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push xor mov movl mov mov mov mov mov mov mov mov mov mov call mov cmp je call pop pop mov pop pop ret mov and pop mov pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub push mov call sub add inc jmp sub add mov movl call mov mov mov mov mov call xor cmp jge mov mov mov call jmp mov inc mov mov sub mov mov pop test je mov cmp jbe mov mov push mov push push push call add addl xor pop ret int3 int3 int3 int3 int3 push xor cmp je cmp je or pop ret mov cmp je cmp je cmp je cmp jne mov cltd and add sar mov mov mov mov mov xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov ret int3 int3 int3 int3 int3 mov push cmp jae test jne mov mov add mov mov mov lea inc mov mov pop ret mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov mov movl pop ret int3 int3 push mov mov mov mov incl pop ret mov test je push cmp je mov cmp jae test jne mov mov add mov mov mov add inc mov mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl movl mov cmp jne mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov xor mov mov pop ret movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp jb push add push mov mov lea add cmp jae shr mov shr mov and neg sbb neg cmp jae test jne mov mov add mov mov mov inc lea mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl mov mov cmp jae test jne mov mov add mov mov shll inc mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl movl mov cmp ja pop pop and call mov call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp jb push push mov sub add add cmp jae mov mov shr mov and neg sbb neg cmp jae test jne mov mov add mov mov mov inc lea mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl mov mov cmp jae test jne mov mov add mov mov shll inc mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl movl mov shr mov and neg sbb neg cmp jae test jne mov mov add mov mov mov inc lea mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl mov mov cmp ja pop pop and call mov call pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov cmp jbe mov push add push push call mov mov sub add add cmp ja mov add cmp jbe mov mov mov cmp jbe mov push xor mov call mov mov cmp sbb neg or sub add cmp sbb and mov cmp jne xor mov call mov call mov cmp sbb neg call mov jmp dec shr inc push mov call mov mov dec add add cmp setbe or mov incl mov and call pop cmp jb add push mov call mov add mov pop pop pop ret mov mov pop pop pop ret int3 push mov push mov test je mov add cmp jbe mov push push mov mov cmp jae test jne mov mov add mov mov mov lea inc mov mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov mov mov mov mov mov mov add add sub mov jne pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 cmp jb jne cmp ja cmp ja push mov cmp sbb push neg mov sub add pop pop cmp jne mov jmp dec shr mov test je shr add test jne add cmp jb sub lea add shr jne ret or ret int3 int3 int3 int3 push mov sub mov xor mov mov push mov mov push mov lea mov cmp ja push lea push sub lea push lea push mov call or lea push mov mov mov mov mov mov mov mov mov lea mov mov mov mov push push mov mov mov call mov or mov mov mov mov mov mov xor mov mov mov mov mov mov add lea movl movl call test jne mov mov mov mov mov mov cmp jae mov mov mov cmp jb mov mov mov mov mov cmp je mov cmp jae mov mov cmp jae mov cmp jae mov mov cmp jb cmp jb mov push lea lea call add test jne cmp je or pop pop pop mov xor call mov pop ret mov test je mov mov test je mov mov cmp jae mov mov test je mov mov push push push push call add push xor lea lea movl call add test jne cmp jbe mov jmp lea mov sub cmpl mov mov mov mov mov jne mov mov cmp jb jne cmp ja cmp ja mov xor cmp jbe cmp jae cmp je mov lea call mov mov mov dec mov cmp jbe mov cmp jbe mov jmp lea cmp jbe mov cmp jb mov shr mov jmp mov mov push mov lea lea call mov addl add inc cmp jb mov mov lea call test js mov mov sub add lea add mov add cmp jg mov cmp jb mov mov push lea call mov push lea push push movl call mov mov mov inc mov push lea lea call mov add jmp incl add mov jmp mov mov add push lea lea mov call add mov cmpl ja mov mov push lea call xor call push call mov movb incl add lea call mov sub mov mov mov mov mov test je mov push mov push push mov push call add lea call pop pop xor pop mov xor call mov pop ret pop pop mov pop mov xor call mov pop ret mov pop xor mov pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov xor xor xor movl lea test je add jmp movzbl lea inc test je mov mov mov inc inc jmp mov mov nop test je add jmp movzbl lea inc mov shr and lea test je lea jmp movzbl lea inc test jne test je lea mov shr and lea jmp movzbl lea mov shr inc and lea jmp cmp jne mov test je add mov shr and jmp movzbl lea mov shr inc and jmp movzbl add shl add inc cmp je mov not and shr lea mov test je lea jmp movzbl lea inc mov shr and lea test jne mov lea test je add jmp movzbl lea inc mov shr and lea test je add jmp movzbl lea inc test je add mov mov cmp sbb neg add mov sub mov mov mov add mov inc inc mov mov mov inc inc decl jne mov mov mov jmp mov mov mov pop pop pop cmp jne xor mov pop ret sbb and add mov pop ret int3 int3 int3 push mov sub push xor xor push xor movl add test jne movzbl movzbl add shl add lea mov shr and test je mov mov mov inc inc jmp mov nop add test jne movzbl movzbl add shl add lea mov shr and lea lea test jne movzbl movzbl add shl add lea mov shr and test jne lea test jne movzbl movzbl add shl add lea mov shr and lea jmp cmp jne mov add mov test je mov shr and jmp movzbl movzbl add shl add lea mov shr and jmp movzbl add shl add inc cmp je mov not shr and inc mov mov lea test jne movzbl movzbl add shl add lea mov shr and lea test jne mov lea add test jne movzbl movzbl add shl add lea mov shr and add lea test jne movzbl movzbl add shl add lea mov shr and test je add mov cmp sbb neg add mov mov sub inc add mov mov mov incl mov jmp lea mov mov mov mov mov add add sub jne jmp mov mov mov pop pop cmp jne xor mov pop ret sbb and add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov xor xor xor xor movl jmp lea test je dec mov shr and jmp mov mov add mov shr test je mov mov mov mov inc inc jmp mov mov lea test je dec mov shr and jmp mov mov add mov shr lea mov test je dec mov shr and jmp mov mov add mov shr test jne test je dec mov shr and lea jmp mov mov add shr mov lea jmp cmp jne mov mov test je dec mov shr and jmp mov mov dec mov shr mov add shr and jmp mov movzbl add shl add inc cmp je mov not shr and inc mov mov test je dec mov shr and jmp mov mov add mov shr lea test jne mov test je dec mov shr and jmp mov mov add mov shr lea test je dec mov shr and jmp mov mov add mov shr test je add mov mov cmp sbb neg add mov mov mov sub add inc mov mov mov incl mov mov mov mov mov mov add add sub jne mov jmp mov mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push push push mov xor xor xor movl mov mov test je add jmp movzbl lea inc test je cmp jae cmp jae mov mov mov inc inc jmp mov test je add jmp movzbl lea inc mov mov shr and lea cmp jae cmp ja test je lea jmp movzbl lea inc test jne test je lea mov shr and lea jmp movzbl lea mov shr inc and lea jmp cmp jne mov test je add mov shr and jmp movzbl lea mov shr inc and jmp cmp jae movzbl add shl add inc cmp je mov not and shr lea mov test je lea jmp movzbl lea inc mov shr and lea test jne mov mov test je add jmp movzbl lea inc mov shr and lea cmp jae cmp jae test je add jmp movzbl lea inc test je add mov mov cmp sbb neg add mov add cmp ja cmp ja mov mov sub mov add mov inc inc mov mov inc inc decl jne mov mov mov jmp mov pop mov pop mov pop mov pop ret mov pop mov pop mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov pop mov pop ret mov mov pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push xor xor push xor movl mov lea add test jne movzbl movzbl add shl add lea mov shr and test je cmp jae cmp jae mov mov mov inc inc jmp mov lea add test jne movzbl movzbl add shl add lea mov shr and lea cmp jae cmp ja lea test jne movzbl movzbl add shl add lea mov shr and test jne lea test jne movzbl movzbl add shl add lea mov shr and lea jmp cmp jne mov add mov test je mov shr and jmp movzbl movzbl add shl add lea mov shr and jmp cmp jae movzbl add shl add inc cmp je mov not shr and inc mov mov lea test jne movzbl movzbl add shl add lea mov shr and lea test jne mov mov add test jne movzbl movzbl add shl add lea mov shr and lea cmp jae cmp jae add test jne movzbl movzbl add shl add lea mov shr and test je add mov cmp sbb neg add mov add cmp ja mov cmp ja mov sub add inc mov mov mov incl mov mov mov mov mov mov add add sub jne jmp mov mov pop mov pop mov pop ret mov pop mov mov pop mov pop ret mov pop mov mov pop mov pop ret mov pop mov mov pop mov pop ret mov mov mov cmp jne pop xor pop mov pop ret sbb and pop add pop mov pop ret mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push push push mov xor xor xor xor movl mov mov test je dec mov shr and jmp mov mov add mov shr test je cmp jae cmp jae mov mov mov mov inc inc jmp mov nop test je dec mov shr and jmp mov mov add mov shr lea mov mov cmp jae cmp ja test je dec mov shr and jmp mov mov add mov shr test jne test je mov dec mov shr and lea jmp mov mov mov add shr mov lea jmp cmpl jne mov mov test je dec mov shr and jmp mov mov dec mov shr mov add shr and jmp cmp jae mov movzbl add shl add inc cmp je mov not shr and inc mov mov test je dec mov shr and jmp mov mov add mov shr lea test jne lea jmp lea mov test je dec mov shr and jmp mov mov add mov shr lea mov cmp jae cmp jae test je dec mov shr and jmp mov mov add mov shr test je addl mov mov mov cmp sbb neg add mov mov add cmp ja cmp ja mov sub inc add mov mov mov incl mov mov mov incl mov inc decl jne mov jmp mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov pop mov pop mov pop mov pop ret int3 int3 int3 push mov sub mov mov push push mov add xor xor mov movl mov mov cmp jb mov pop mov mov pop mov pop ret lea test je add jmp movzbl lea inc test je cmp jae cmp jae cmp ja inc mov inc jmp mov mov test je add jmp movzbl lea inc mov shr and lea cmp jae cmp ja test je lea jmp movzbl lea inc test jne test je lea mov shr and lea jmp movzbl lea mov shr inc and lea jmp cmp jne mov test je add mov shr and jmp movzbl lea mov shr inc and jmp cmp jae movzbl add shl add inc cmp je mov not and shr lea mov test je lea jmp movzbl lea inc mov shr and lea test jne mov lea test je add jmp movzbl lea inc mov shr and lea cmp jae cmp jae test je add jmp movzbl lea inc test je add mov cmp sbb neg add add cmp ja mov cmp ja inc mov cmp ja mov mov mov jmp mov mov pop mov pop mov pop ret mov pop mov mov pop mov pop ret mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov mov cmp jne pop xor pop mov pop ret sbb and pop add pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret mov pop mov mov pop mov pop ret int3 int3 int3 push mov sub push push mov mov push mov add xor xor movl mov mov cmp jb mov pop pop mov mov pop mov pop ret lea add test jne movzbl movzbl add shl add lea mov shr and test je cmp jae cmp jae cmp ja inc inc jmp mov lea lea test jne movzbl movzbl add shl add lea mov shr and lea cmp jae cmp ja add test jne movzbl movzbl add shl add lea mov shr and test jne lea test jne movzbl movzbl add shl add lea mov shr and lea jmp cmp jne mov add mov test je mov shr and jmp movzbl movzbl add shl add lea mov shr and jmp cmp jae movzbl add shl add inc cmp je mov not shr and inc mov mov lea test jne movzbl movzbl add shl add lea mov shr and lea test jne mov mov lea test jne movzbl movzbl add shl add lea mov shr and lea cmp jae cmp jae lea test jne movzbl movzbl add shl add lea mov shr and test je add mov cmp sbb neg add add cmp ja cmp ja lea cmp ja mov jmp mov pop pop mov mov pop mov pop ret mov pop mov pop mov pop mov pop ret mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov pop pop mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov push mov add xor xor mov movl mov cmp jb mov pop mov mov pop mov pop ret lea test je dec mov shr and jmp mov mov add mov shr test je cmp jae mov cmp jae cmp ja inc mov inc jmp mov lea test je dec mov shr and jmp mov mov add mov shr lea mov cmp jae cmp ja test je dec mov shr and jmp mov mov add mov shr test jne test je dec mov shr and lea jmp mov mov add shr mov lea jmp cmp jne mov mov test je dec mov shr and jmp mov mov dec mov shr mov add shr and jmp cmp jae mov movzbl add shl add inc cmp je mov not shr and inc mov mov test je dec mov shr and jmp mov mov add mov shr lea test jne mov test je dec mov shr and jmp mov mov add mov shr lea cmp jae cmp jae test je dec mov shr and jmp mov mov add mov shr test je add mov cmp sbb neg add mov add cmp ja mov cmp ja inc mov cmp ja mov jmp mov mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov mov mov cmp jne pop xor pop mov pop ret sbb and pop add pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov mov mov ret int3 int3 int3 int3 push mov mov sub push mov xor sub mov mov cmp jbe mov mov mov inc mov mov push mov mov mov push mov mov mov sub movzbl dec mov movzbl shl xor movzbl shl xor mov imul shr and mov mov mov mov mov mov mov incl movzwl mov mov mov inc add test jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor mov mov mov mov mov mov cmp jne movl cmp jne movl mov movl cmp ja mov cmp ja lea cmp ja xor jmp push call add push push mov call mov add add mov lea je xor mov div cmp jne cmp jbe push call add jmp xor mov add mov lea je xor mov div cmp jne cmp jbe push call add jmp xor push mov call add mov cmp je cmp je cmp je cmp je cmp je push call add mov mov cmp je mov mov lea mov add movl mov mov mov cmp jb pop or pop mov pop ret mov push mov mov add push push mov call mov push push push call mov mov mov mov mov mov mov mov mov add sub mov je mov cmp jbe mov mov push mov push push call mov mov add add mov cmp jne movl mov movl test jne neg pop mov xor pop mov pop ret sub mov pop xor pop mov pop ret pop mov pop mov pop ret mov pop mov pop ret int3 int3 mov push xor cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov mov cmp je push call add mov pop ret int3 int3 int3 mov mov push cmp jae mov movzbl inc mov test jns mov test je dec mov jmp mov mov mov cmp jae mov mov mov mov add cmp jne movl add cmp jne movl add pop cmp jne movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test jne mov movzbl add shl push movzbl xor movzbl shl xor mov imul shr and decl lea movzwl mov lea pop cmp jne movl ret dec mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl jbe mov mov inc push mov mov push mov push mov mov mov mov mov cmpl jne movzbl movzbl shl xor movzbl shl xor mov imul shr and decl movzwl mov cmp jne movl jmp decl movzbl movzbl shl xor movzbl shl xor mov imul shr and mov mov mov mov mov mov mov mov mov incl movzwl mov mov mov mov cmp jae movzbl inc mov test jns mov test je dec mov mov mov inc mov cmp jne xor mov inc cmp jne xor mov inc mov cmp jne xor mov decl jne mov mov pop mov pop mov mov pop mov pop ret mov mov cmp jae mov mov jmp int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov add cmpl mov mov jbe nop mov mov decl add cmp jne mov cmp jne mov cmp jne mov cmp jne lea add lea mov inc add cmp jae mov inc cmp je mov sub cmp jbe mov mov mov cmp je cmp jae mov cmp ja mov mov cmpl mov mov mov ja pop pop mov pop ret mov mov movzwl mov mov cmp jne xor ret mov cmp jae mov mov mov ret int3 int3 push mov sub push push mov mov mov lea movzbl push movzbl shl xor movzbl mov shl xor mov imul shr and lea mov mov mov mov mov lea mov lea mov mov cmp jbe test je mov mov mov mov movzbl mov mov mov cmp jb test jne movl mov mov inc movl mov jmp movzwl mov mov cmp je cmp jae movl mov cmp jb mov push push call add mov cmp jbe mov mov cmp jbe sub mov jmp mov sub add mov mov mov mov mov mov test jne mov movzbl lea movzbl shl xor movzbl shl xor mov imul shr and decl lea movzwl mov cmp lea jne movl mov movzwl mov pop pop mov pop mov pop ret dec mov mov movzwl mov pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push xor mov movl mov mov mov mov mov mov mov mov mov mov call mov cmp je call pop pop mov pop pop ret mov and pop mov pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub push mov call sub add inc jmp sub add mov movl call mov mov mov mov mov call xor cmp jge mov mov mov call jmp mov inc mov mov sub mov mov pop test je mov cmp jbe mov mov push mov push push push call add addl xor pop ret int3 int3 int3 int3 int3 push xor cmp je cmp je or pop ret mov cmp je cmp je cmp je cmp jne mov cltd and add sar mov mov mov mov mov xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov ret int3 int3 int3 int3 int3 mov push cmp jae test jne mov mov add mov mov mov lea inc mov mov pop ret mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov mov movl pop ret int3 int3 push mov mov mov mov incl pop ret mov test je push cmp je mov cmp jae test jne mov mov add mov mov mov add inc mov mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl movl mov cmp jne mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov xor mov mov pop ret movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp jb push add push mov mov lea add cmp jae shr mov shr mov and neg sbb neg cmp jae test jne mov mov add mov mov mov inc lea mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl mov mov cmp jae test jne mov mov add mov mov shll inc mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl movl mov cmp ja pop pop and call mov call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp jb push push mov sub add add cmp jae mov mov shr mov and neg sbb neg cmp jae test jne mov mov add mov mov mov inc lea mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl mov mov cmp jae test jne mov mov add mov mov shll inc mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl movl mov shr mov and neg sbb neg cmp jae test jne mov mov add mov mov mov inc lea mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov movl mov mov cmp ja pop pop and call mov call pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov push cmp jbe mov push add push push call mov mov sub add add cmp ja mov add cmp jbe mov mov mov cmp jbe mov xor mov call mov mov cmp sbb or neg sub add mov cmp sbb inc mov mov cmp jne call mov call mov call jmp dec shr inc push call mov mov mov dec add xor or add mov incl cmpl mov je lea call mov pop mov pop pop pop ret cmp ja mov call lea call mov pop mov pop pop pop ret xor call add push call mov add pop mov pop pop pop ret int3 int3 push mov push mov test je mov add cmp jbe mov push push mov mov cmp jae test jne mov mov add mov mov mov lea inc mov mov jmp mov mov mov cmpl jb mov shr mov cmpl jne mov shr shr mov mov mov mov add mov mov mov mov mov mov mov mov add add sub mov jne pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 cmp jb jne cmp ja cmp ja push mov cmp sbb push neg mov sub add pop pop cmp jne mov jmp dec shr mov test je shr add test jne add cmp jb cmp jae inc ret sub add shr jne ret or ret int3 int3 int3 push mov sub mov xor mov mov push mov mov push mov lea mov cmp ja push lea push sub lea push lea push mov call or lea push mov mov mov mov mov mov mov mov mov lea mov mov mov mov push push mov mov mov call mov or mov mov mov mov mov mov xor mov mov mov mov mov mov add lea movl movl call test jne mov mov mov mov mov mov cmp jae mov mov mov cmp jb mov mov mov mov mov cmp je mov cmp jae mov mov cmp jae mov cmp jae mov mov cmp jb cmp jb mov push lea lea call add test jne cmp je or pop pop pop mov xor call mov pop ret mov test je mov mov test je mov mov cmp jae mov mov test je mov mov push push push push call add push xor lea lea movl call add test jne cmp jbe mov jmp lea mov sub cmpl mov mov mov mov mov jne mov mov cmp jb jne cmp ja cmp ja mov xor cmp jbe cmp jae cmp je mov lea call mov mov mov dec mov cmp jbe mov cmp jbe mov jmp lea cmp jbe mov cmp jb mov shr mov jmp mov mov push mov lea lea call mov addl add inc cmp jb mov mov lea call test js mov mov sub add lea add mov add cmp jg mov cmp jb mov mov push lea call mov push lea push push movl call mov mov mov inc mov push lea lea call mov add jmp incl add mov jmp mov mov add push lea lea mov call add mov cmpl ja mov mov push lea call xor call push call mov movb incl add lea call mov sub mov mov mov mov mov test je mov push mov push push mov push call add lea call pop pop xor pop mov xor call mov pop ret pop pop mov pop mov xor call mov pop ret mov pop xor mov pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov xor xor xor movl lea test je add jmp movzbl lea inc test je mov mov mov inc inc jmp mov mov nop test je add jmp movzbl lea inc mov shr and lea test je lea jmp movzbl lea inc test jne test je lea mov shr and lea jmp movzbl lea mov shr inc and lea jmp cmp jne mov test je add mov shr and jmp movzbl lea mov shr inc and jmp movzbl add shl add inc cmp je mov not and shr lea mov test je test je lea mov shr and inc jmp movzbl lea mov shr and inc inc jmp test je lea jmp movzbl lea inc test je test je add mov shr and jmp movzbl lea mov shr inc and jmp mov test je add jmp movzbl lea inc mov shr and lea test je add jmp movzbl lea inc test je add mov mov cmp sbb neg add mov sub mov mov mov add mov inc inc mov mov inc inc decl jne mov mov mov jmp mov mov mov pop pop pop cmp jne xor mov pop ret sbb and add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push xor xor xor movl add test jne movzbl movzbl add shl add lea mov shr and test je mov mov mov inc inc jmp mov mov add test jne movzbl movzbl add shl add lea mov shr and lea lea test jne movzbl movzbl add shl add lea mov shr and test jne lea test jne movzbl movzbl add shl add lea mov shr and lea jmp cmp jne mov add mov test je mov shr and jmp movzbl movzbl add shl add lea mov shr and jmp movzbl add shl add inc cmp je mov not shr and inc mov mov test lea je test jne movzbl movzbl add shl add lea mov shr and lea jmp test jne movzbl movzbl add shl add lea mov shr and test je add test jne movzbl movzbl add shl add lea mov shr and lea jmp mov add test jne movzbl movzbl add shl add lea mov shr and add lea test jne movzbl movzbl add shl add lea mov shr and test je add mov cmp sbb neg add mov mov mov sub inc add mov mov mov incl mov mov mov mov mov mov add add sub jne mov mov jmp mov mov mov mov pop pop cmp jne xor mov pop ret sbb and add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push push push mov xor xor xor xor movl jmp lea test je dec mov shr and jmp mov mov add mov shr test je mov mov mov mov inc inc jmp mov mov lea test je dec mov shr and jmp mov mov add mov shr lea test je dec mov shr and jmp mov mov add mov shr test jne test je dec mov shr and lea jmp mov mov add shr mov lea jmp cmp jne mov mov test je dec mov shr and jmp mov mov add mov shr jmp movzbl add shl add inc cmp je mov not shr and inc mov mov test je test je dec mov shr and lea jmp mov mov add shr mov lea jmp test je dec mov shr and jmp mov mov add mov shr test je test je dec mov shr and lea jmp mov mov add shr mov lea jmp mov lea test je dec mov shr and jmp mov mov add mov shr lea test je dec mov shr and jmp mov mov add mov shr test je mov add mov cmp sbb neg add mov mov mov sub add inc mov mov mov incl mov mov mov mov mov mov add add sub jne mov jmp mov mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret int3 int3 push mov sub mov mov push push push mov xor xor xor movl mov mov test je add jmp movzbl lea inc test je cmp jae cmp jae mov mov mov inc inc jmp mov test je add jmp movzbl lea inc mov mov shr and lea cmp jae cmp ja test je lea jmp movzbl lea inc test jne test je lea mov shr and lea jmp movzbl lea mov shr inc and lea jmp cmp jne mov test je add mov shr and jmp movzbl lea mov shr inc and jmp cmp jae movzbl add shl add inc cmp je mov not and shr lea mov test je test je lea mov shr and inc jmp movzbl lea mov shr and inc inc jmp test je lea jmp movzbl lea inc test je test je add mov shr and jmp movzbl lea mov shr inc and jmp mov lea test je add jmp movzbl lea inc mov shr and lea cmp jae cmp jae test je add jmp movzbl lea inc test je add mov cmp sbb neg add mov add cmp ja mov cmp ja mov sub add inc mov mov mov incl mov lea mov mov mov incl mov inc dec jne mov mov mov jmp mov pop mov pop mov pop mov pop ret mov pop mov pop mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov pop pop mov mov pop mov pop ret int3 int3 int3 int3 push mov sub mov mov push push xor xor xor movl mov mov add test jne movzbl movzbl add shl add lea mov shr and test je cmp jae cmp jae mov mov mov inc inc jmp mov lea add test jne movzbl movzbl add shl add lea mov shr and lea mov cmp jae cmp ja lea test jne movzbl movzbl add shl add lea mov shr and test jne lea test jne movzbl movzbl add shl add lea mov shr and lea jmp cmp jne mov add mov test je mov shr and jmp movzbl movzbl add shl add lea mov shr and jmp cmp jae movzbl add shl add inc cmp je mov not shr and inc mov mov test lea je test jne movzbl movzbl add shl add lea mov shr and lea jmp test jne movzbl movzbl add shl add lea mov shr and test je add test jne movzbl movzbl add shl add lea mov shr and lea jmp mov add test jne movzbl movzbl add shl add lea mov shr and lea cmp jae cmp jae add test jne movzbl movzbl add shl add lea mov shr and test je add mov mov cmp sbb neg add mov add cmp ja mov cmp ja mov sub add inc mov mov mov incl mov mov mov mov mov mov add add sub jne mov mov jmp mov mov pop mov pop mov pop ret mov mov pop mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov mov mov cmp jne pop xor pop mov pop ret sbb and pop add pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret mov pop mov mov pop mov pop ret int3 push mov sub mov mov push push push mov xor xor xor xor movl mov mov test je dec mov shr and jmp mov mov add mov shr test je cmp jae cmp jae mov mov mov mov inc inc jmp mov nop test je dec mov shr and jmp mov mov add mov shr lea cmp jae cmp ja test je dec mov shr and jmp mov mov add mov shr test jne test je dec mov shr and lea jmp mov mov add shr mov lea jmp cmp jne mov mov test je dec mov shr and jmp mov mov add mov shr jmp cmp jae movzbl add shl add inc cmp je mov not shr and inc mov mov test je test je dec mov shr and inc mov jmp mov mov shr add inc mov mov jmp test je dec mov shr and jmp mov mov add mov shr test je test je dec mov shr and add mov jmp mov mov shr add add mov mov jmp mov jmp mov test je dec mov shr and jmp mov mov add mov shr lea mov cmp jae cmp jae test je dec mov shr and jmp mov mov add mov shr test je addl mov mov cmp mov sbb neg add mov mov add cmp ja cmp ja mov sub add inc mov mov mov incl mov mov mov incl mov inc decl jne mov jmp mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov pop mov pop mov pop mov pop ret push mov sub mov mov push mov add push xor xor mov movl mov mov cmp jb mov pop mov mov pop mov pop ret lea test je add jmp movzbl lea inc test je cmp jae cmp jae cmp ja inc mov inc jmp mov mov test je add jmp movzbl lea inc mov shr and lea cmp jae cmp ja test je lea jmp movzbl lea inc test jne test je lea mov shr and lea jmp movzbl lea mov shr inc and lea jmp cmp jne mov test je add mov shr and jmp movzbl lea mov shr inc and jmp cmp jae movzbl add shl add inc cmp je mov not and shr lea mov test je test je lea mov shr and inc jmp movzbl lea mov shr and inc inc jmp test je lea jmp movzbl lea inc test je test je add mov shr and jmp movzbl lea mov shr inc and jmp mov test je add jmp movzbl lea inc mov shr and lea cmp jae cmp jae test je add jmp movzbl lea inc test je add mov cmp sbb neg add mov add cmp ja cmp ja inc mov cmp ja mov mov mov jmp mov mov pop mov pop mov pop ret mov mov pop mov pop mov pop ret mov mov pop mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov mov cmp jne pop xor pop mov pop ret sbb and pop add pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret mov pop mov mov pop mov pop ret int3 int3 int3 int3 push mov sub push push mov mov mov mov add push xor xor mov movl mov cmp jb pop mov pop mov pop mov pop ret lea add test jne movzbl movzbl add shl add lea mov shr and test je cmp jae cmp jae cmp ja inc mov inc jmp mov lea lea test jne movzbl movzbl add shl add lea mov shr and lea mov cmp jae cmp ja add test jne movzbl movzbl add shl add lea mov shr and test jne lea test jne movzbl movzbl add shl add lea mov shr and lea jmp cmp jne mov add mov test je mov shr and jmp movzbl movzbl add shl add lea mov shr and jmp cmp jae movzbl add shl add inc cmp je mov not shr and inc mov mov test lea je test jne movzbl movzbl add shl add lea mov shr and lea jmp test jne movzbl movzbl add shl add lea mov shr and test je add test jne movzbl movzbl add shl add lea mov shr and lea jmp mov lea test jne movzbl movzbl add shl add lea mov shr and lea cmp jae cmp jae lea test jne movzbl movzbl add shl add lea mov shr and test je add mov mov cmp sbb neg add add cmp ja cmp ja inc mov cmp ja mov mov jmp mov mov pop pop mov pop mov pop ret mov mov pop pop mov pop mov pop ret mov mov pop pop mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov mov mov mov cmp jne pop pop xor pop mov pop ret sbb pop and pop add pop mov pop ret mov mov pop pop mov mov pop mov pop ret mov pop mov pop mov pop mov pop ret mov pop pop mov mov pop mov pop ret mov pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov push mov add xor xor mov movl mov cmp jb mov pop mov mov pop mov pop ret lea test je dec mov shr and jmp mov mov add mov shr test je cmp jae mov cmp jae cmp ja inc mov inc jmp mov lea test je dec mov shr and jmp mov mov add mov shr lea mov cmp jae cmp ja test je dec mov shr and jmp mov mov add mov shr test jne test je dec mov shr and lea jmp mov mov add shr mov lea jmp cmp jne mov mov test je dec mov shr and jmp mov mov add mov shr jmp cmp jae mov movzbl add shl add inc cmp je mov not shr and inc mov mov test je test je dec mov shr and inc mov jmp mov mov shr add inc mov mov jmp test je dec mov shr and jmp mov mov add mov shr test je test je dec mov shr and add mov jmp mov mov shr add add mov mov jmp mov test je dec mov shr and jmp mov mov add mov shr lea cmp jae cmp jae test je dec mov shr and jmp mov mov add mov shr test je add mov mov cmp mov sbb neg add add mov cmp ja mov cmp ja mov inc mov cmp ja mov jmp mov mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov mov mov cmp jne pop xor pop mov pop ret sbb and pop add pop mov pop ret mov mov pop mov mov pop mov pop ret mov mov pop mov mov pop mov pop ret mov pop mov mov pop mov pop ret mov mov pop mov pop mov pop ret int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test jne xor ret push not cmp jb movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor movzbl xor and shr xor add sub cmp jae test je movzbl xor and shr xor inc dec jne not pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov xor mov inc cmp jl lea shr add add lea sub xor push or mov cmp sete xor cmp sete and xor cmp setl and xor test setns and and mov je mov and dec jne xor xor sete and cmp jne lea shr add add lea sub inc lea test mov sete lea cmp sbb inc and cmp sbb neg and cmp sbb inc and and lea cmp sbb neg and cmp jne xor cmp sbb neg xor cmp sbb neg and and mov xor pop call mov pop ret int3 int3 int3 int3 int3 push mov and sub mov xor mov xor movl push mov mov inc cmp jl xor mov cmp mov sete xor cmp sete and and je xor jmp lea mov mov inc cmp jl xor mov cmp mov sete xor cmp mov sete and xor cmp mov sete and xor cmp sete and and mov je xor nop mov mov inc cmp jl xor cmpl sete xor cmpl sete and xor cmpl sete and xor cmp sete and and je mov mov mov call xor cmp sete and mov je movl movl movl call and mov dec neg sbb pop xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov mov xor xor call mov pop ret int3 int3 cmpl jne cmpl jne cmpl jne xor ret mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl mov mov movl jne or pop ret cmp je cmp jne cmp je cmp jne cmp je cmp jne cmp je cmp jne cmp je cmp jne cmp je test jle mov cmp je cmp jne mov cmp je cmp jne mov cmp je cmp jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea shr add add sub ret int3 int3 int3 push mov push cmp jb lea mov cmp jne sub add add cmp jae test je movzbl movzbl sub jne cmp jbe movzbl movzbl sub jne cmp jbe movzbl movzbl sub jne cmp jbe movzbl movzbl sub sar pop or pop ret pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push call add ret int3 int3 int3 int3 push push push call add ret int3 int3 int3 int3 push push push call add ret int3 int3 int3 int3 push mov xor cmp setne pop ret int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov mov mov movzwl shr test je jmp lea mov cmp jb mov sub cmp jl lea movzbl add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add movzbl add add sub add add cmp jge test je movzbl add dec inc add test jg mov mul shr imul add mov mul shr imul add test jne mov pop shl pop or pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl ret int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl ret int3 int3 movl movl mov test je mov test je mov mov ret int3 int3 mov cmp je mov test je mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov test jne ret mov ret int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov movl mov add push push lea push call movl movl jmp mov add mov cmpl jge sub mov mov lea call mov sub mov mov lea call mov lea push call mov movb lea call sub mov mov lea call mov sub mov mov lea call mov lea lea call sub mov mov mov mov call mov lea push call call movb lea call jmp sub mov mov lea call mov sub mov mov lea call mov lea call mov movb mov mov mov xor push push mov sub push mov mov call add mov sub mov mov mov lea call add mov movl mov xor push push mov add mov sub push mov call add mov mov mov mov push push push push push push or mov mov mov call add test je movl movb lea call movl lea call mov jmp push call add mov mov mov mov mov movl mov add mov mov mov mov mov mov mov mov mov mov mov mov mov lea jmp dec dec dec dec movb lea call movl lea call mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push push lea mov addb lea mov lea mov lea mov lea mov lea mov mov mov push push push push call push push push push call mov call mov call push push call mov push push mov push lea push call test je mov mov lea push push push call test jne lea push call lea push call push push push lea push call test jne mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push push movl movl movl movl movl mov call push push mov call mov mov push push movl movl movl call lea push mov call pop mov pop ret int3 int3 int3 int3 int3 int3 mov call mov ret push mov and sub mov xor mov mov mov sub push mov je sub je sub je mov mov push push push push call pop mov xor call mov pop ret mov movzwl sub je dec je mov push push push push call pop mov xor call mov pop ret push call xor pop mov xor call mov pop ret mov push push push push push call xor pop mov xor call mov pop ret lea push push call lea push push call xor pop mov xor call mov pop ret push call mov pop xor xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub je dec jne mov cmp je cmp je xor pop ret mov movzwl push push call mov pop ret int3 int3 int3 int3 push mov call mov push call add movl pop ret int3 int3 int3 int3 int3 mov mov movl mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add mov movl mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov xor test je mov test je mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov mov mov pop ret mov mov mov mov pop ret mov mov mov mov pop ret int3 int3 int3 int3 push mov sub lea call mov xor test je mov test je mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov mov mov pop ret mov mov mov mov pop ret mov mov mov mov pop ret int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call mov push call add movl pop ret int3 int3 int3 int3 int3 push mov sub lea call mov xor test je mov test je mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov mov mov pop ret mov mov mov mov pop ret mov mov mov mov pop ret int3 int3 int3 int3 push mov sub lea call mov xor test je mov test je mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov mov mov pop ret mov mov mov mov pop ret mov mov mov mov pop ret int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push xor cmp je lea cmp je dec mov jne mov cmp jne push mov cmp jbe lea mov dec cmp lea je mov push call add cmp ja mov pop cmp je push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call add movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov pop ret mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl test je mov mov mov ret int3 int3 int3 int3 int3 int3 int3 mov mov movl mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add mov movl mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push xor cmp je lea cmp je dec mov jne mov cmp jne push mov cmp jbe lea mov dec cmp lea je mov push call add cmp ja mov pop cmp je push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call add movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov pop ret mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 xor cmp sete ret int3 int3 int3 int3 int3 int3 int3 mov test je dec mov jne movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl movl test je mov mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov mov movl movl test je mov test je mov mov mov mov pop ret mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor cmp sete ret int3 int3 int3 int3 int3 int3 int3 mov test je dec mov jne movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl movl test je mov mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov mov movl movl test je mov test je mov mov mov mov pop ret mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 movl movl test je mov mov mov ret int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov xor push mov call add cmp je mov xor mov xor mov mov mov mov mov mov mov mov mov mov mov push push push push call mov mov mov pop pop pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov xor push mov call add cmp je mov xor mov xor mov mov mov mov mov mov mov mov mov push sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov push mov call mov mov mov pop pop pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 push mov push mov push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push sub mov mov mov mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor push mov call add cmp je mov xor mov xor mov mov mov mov mov mov mov mov pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor push mov call add cmp je mov xor mov xor mov mov mov mov mov mov mov mov pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov mov mov ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test jne mov lea push lea call push lea push movl call mov pop ret int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov lea mov movl call mov xor test je mov test je mov mov mov push mov push sub mov mov movl movl test je mov test je mov mov mov push mov call mov mov pop pop pop pop mov pop ret mov call push push call int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov xor sub mov mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov lea mov call sub mov mov mov mov mov cmp je mov cmp je mov mov mov push mov call mov mov pop pop pop pop mov pop ret mov call xor push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov lea mov call mov mov mov sub mov lea lea mov call mov cmp sete test jne shr cmp ja movl jmp lea lea lea call cmp sete test jne mov xor test je mov test je mov lea test jne xor jmp mov mov mov shr and cmp ja sub mov mov mov lea mov push mov call mov dec mov jmp mov mov cmp jae nop mov call cmp jb push push call mov sub sub mov mov mov push lea mov call mov mov call sub mov mov mov call call mov add mov mov push mov push lea mov call mov lea call mov mov call sub mov mov mov push lea mov call mov mov call sub mov mov mov call lea jmp movl jmp lea lea lea call cmp sete test jne mov xor test je mov test je mov lea test jne xor jmp mov mov mov shr and cmp ja sub mov mov mov lea mov push mov call mov dec mov jmp mov mov cmp jae nop mov call cmp jb push push call sub mov mov mov call mov sub mov mov push lea mov call mov mov call mov sub mov mov push lea mov call mov mov call lea call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov xor mov mov mov mov xor mov cmp je mov cmp je mov mov mov xor cmp je mov cmp je mov mov mov push sub mov mov mov mov cmp je mov cmp je mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov mov push call mov mov pop pop pop pop mov pop ret mov call xor push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov ret int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test jne mov lea push lea call push lea push movl call mov pop ret int3 int3 int3 int3 push mov sub push mov testb push jne mov add shr cmp ja call mov test jne mov shl mov dec push mov shr cmpl jne push call add test je mov mov mov mov and add pop je mov mov mov incl mov pop pop mov pop ret lea push lea movl call push lea push movl call int3 mov test je incl push mov shl cmp pop ja movl dec mov jne movl ret int3 int3 int3 int3 push mov sub push mov mov mov add push test jne add shr cmp ja call mov add mov push mov shr cmp ja sub mov cmpl jne push call add test je mov mov mov and add pop je mov mov mov incl pop pop mov pop ret lea push lea movl call push lea push movl call int3 push mov mov xor test je mov test je mov mov add movl movl mov test je mov test je mov mov pop ret int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor test je mov test je mov mov dec test jne xor jmp mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov ret int3 push mov sub mov mov sub movl cmp jae push call mov shr cmp jae mov jmp cmp jbe mov sub cmp ja mov mov push push mov xor shr add mov mov cmp jbe cmp ja lea push call add mov cmp je mov mov add add lea lea sub add sar add add push push mov mov lea push call mov add mov add cmp ja sar mov mov mov add add push push push mov call mov add add sub je mov xor mov rep mov test je mov mov jmp lea mov sar add add push push push call mov lea sub add mov sar add add push push push call mov add lea test je xor rep mov pop pop test je push call add mov mov add mov mov pop ret lea push lea mov call push lea push movl call int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test jne xor jmp mov mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test jne xor jmp mov mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push sub mov movl movl mov mov test je mov test je mov mov mov mov mov mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov mov cmp sete mov pop ret int3 int3 push mov sub lea call mov mov xor cmp setne mov pop ret push mov and mov sub test je mov test je mov test jne xor jmp mov mov push mov push test je mov test je mov test jne xor jmp mov mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push mov cmp je cmp je mov test je mov test je mov test jne xor jmp mov mov test je mov test je mov test jne xor jmp mov mov test je mov test je mov test jne xor jmp mov pushl push push push push push call mov mov mov sub add add mov mov movl movl mov test je mov test je mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov mov mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov sub push sar lea mov push push push call add add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push xor mov rep pop ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov lea mov call mov mov sub mov mov mov mov cmp je shr cmp ja movl cmp je push mov call inc jmp mov mov cmp jae mov call cmp jb push push call mov sub sub mov mov mov push lea mov call mov mov call sub mov mov mov call call mov add mov mov push mov push lea mov call mov lea call mov mov call sub mov mov mov push lea mov call mov mov call sub mov mov mov call lea jmp movl mov cmp je push mov call inc jmp mov mov cmp jae jmp lea mov call cmp jb push push call sub mov mov mov call sub mov mov mov push lea mov call mov mov call mov sub mov mov push lea mov call mov mov call lea call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov lea mov call mov mov mov sub mov lea lea mov call mov cmp sete test jne shr cmp ja movl jmp lea lea lea call cmp sete test jne mov xor test je mov test je mov lea test jne xor jmp mov mov mov shr and cmp ja sub mov mov mov lea mov push mov call mov dec mov jmp mov mov cmp jae nop mov call cmp jb push push call mov sub sub mov mov mov push lea mov call mov mov call sub mov mov mov call call mov add mov mov push mov push lea mov call mov lea call mov mov call sub mov mov mov push lea mov call mov mov call sub mov mov mov call lea jmp movl jmp lea lea lea call cmp sete test jne mov xor test je mov test je mov lea test jne xor jmp mov mov mov shr and cmp ja sub mov mov mov lea mov push mov call mov dec mov jmp mov mov cmp jae nop mov call cmp jb push push call sub mov mov mov call mov sub mov mov push lea mov call mov mov call mov sub mov mov push lea mov call mov mov call lea call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov mov cmp sete mov pop ret push mov mov test jne mov mov mov pop ret mov mov mov mov pop ret push mov mov mov push push push cmp je dec mov cmp je mov mov mov shr and cmp ja sub mov mov and mov mov shr cmp ja sub mov mov mov add mov mov mov mov mov mov mov mov inc mov cmp jne pop pop pop pop ret push mov push mov mov mov push mov push mov push mov push push push call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub pop ret int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov sub mov mov test je mov mov mov sub dec cmp jae push call mov mov sub add sub cmp jae mov shr or sub cmp jae movl mov jmp add mov cmp jae mov mov call mov movl mov mov sub push push push mov call add add push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov call mov mov sub push push push call mov mov mov sub add add test je push call add mov add lea mov mov mov mov mov pop pop pop pop mov pop ret mov push call add push push call push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov call mov mov lea cmp je cmp je push mov call mov add add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov sub push sar lea mov push push push call add add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push xor mov rep pop ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test jne mov mov mov ret mov mov mov mov ret int3 int3 int3 int3 int3 int3 mov xor test je mov test je mov mov dec test jne xor jmp mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 push mov sub push mov testb push jne mov add shr cmp ja call mov test jne mov shl mov dec push mov shr cmpl jne push call add test je mov mov mov mov and add pop je mov mov mov incl mov pop pop mov pop ret lea push lea movl call push lea push movl call int3 mov test je incl push mov shl cmp pop ja movl dec mov jne movl ret int3 int3 int3 int3 push mov sub push mov mov mov add push test jne add shr cmp ja call mov add mov push mov shr cmp ja sub mov cmpl jne push call add test je mov mov mov and add pop je mov mov mov incl pop pop mov pop ret lea push lea movl call push lea push movl call int3 push mov mov xor test je mov test je mov mov add movl movl mov test je mov test je mov mov pop ret int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 mov movl movl test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov or shr sub cmp pop jae xor jmp add cmp jae mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 mov test jne xor jmp mov mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov sub movl cmp jae push call mov shr cmp jae mov jmp cmp jbe mov sub cmp ja mov mov push push mov xor shr add mov mov cmp jbe cmp ja lea push call add mov cmp je mov mov add add lea lea sub add sar add add push push mov mov lea push call mov add mov add cmp ja sar mov mov mov add add push push push mov call mov add add sub je mov xor mov rep mov test je mov mov jmp lea mov sar add add push push push call mov lea sub add mov sar add add push push push call mov add lea test je xor rep mov pop pop test je push call add mov mov add mov mov pop ret lea push lea mov call push lea push movl call int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 mov test jne xor jmp mov mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov mov cmp sete mov pop ret int3 int3 push mov sub lea call mov mov xor cmp setne mov pop ret push mov and mov sub test je mov test je mov test jne xor jmp mov mov push mov push test je mov test je mov test jne xor jmp mov mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push mov cmp je cmp je mov test je mov test je mov test jne xor jmp mov mov test je mov test je mov test jne xor jmp mov mov test je mov test je mov test jne xor jmp mov pushl push push push push push call mov mov mov sub add add mov mov movl movl mov test je mov test je mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov mov mov and push mov mov mov shr push push cmp ja sub mov mov mov mov shr and cmp ja sub mov mov mov mov mov add mov add mov pop mov pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov push push mov sub mov sub mov mov mov cmp jbe mov mov test je mov cltd idiv mov mov test jne mov cmp jge test jle jmp mov mov mov add mov add mov mov cmp jne lea mov mov jmp mov lea mov mov mov mov jmp mov mov mov mov shr and cmp ja sub mov and mov mov mov shr cmp ja sub mov mov mov add mov mov mov add mov mov mov mov mov mov mov sub mov cmp jge mov add mov mov lea jmp mov mov sub add mov mov mov lea mov mov cmp jne mov dec mov test jg pop pop pop mov pop ret push mov mov mov sub add pop ret int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub add pop ret int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 push mov push mov push xor push test je mov test je mov mov mov xor test je mov test je mov mov mov push sub mov mov movl movl test je mov test je mov mov sub mov mov mov movl movl test je mov test je mov mov mov mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je cmp je push mov call add sub lea pop pop ret pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push mov mov add dec jne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov sub push sar lea mov push push push call add add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push xor mov rep pop ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 mov mov and push mov mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov and push mov mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov mov cmp sete mov pop ret push mov mov test jne mov mov mov pop ret mov mov mov mov pop ret ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push push push cmp je dec mov cmp je mov mov mov shr and cmp ja sub mov mov and mov mov shr cmp ja sub mov mov mov add mov mov mov mov mov mov mov mov inc mov cmp jne pop pop pop pop ret push mov push mov mov mov push mov push mov push mov push push push call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub pop ret int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov mov sub add pop ret int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 int3 int3 push mov push mov push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov mov call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub pop ret int3 int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov sub push sar lea mov push push push call add add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push xor mov rep pop ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov movl movl test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test jne mov mov mov ret mov mov mov mov ret int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov and push mov mov mov shr push push cmp ja sub mov mov mov mov shr and cmp ja sub mov mov mov mov mov add mov add mov pop mov pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov push push mov sub mov sub mov mov mov cmp jbe mov mov test je mov cltd idiv mov mov test jne mov cmp jge test jle jmp mov mov mov add mov add mov mov cmp jne lea mov mov jmp mov lea mov mov mov mov jmp mov mov mov mov shr and cmp ja sub mov and mov mov mov shr cmp ja sub mov mov mov add mov mov mov add mov mov mov mov mov mov mov sub mov cmp jge mov add mov mov lea jmp mov mov sub add mov mov mov lea mov mov cmp jne mov dec mov test jg pop pop pop mov pop ret push mov mov mov sub add pop ret int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov cmp je push push mov mov test jne xor jmp mov mov mov mov shr and cmp ja sub test je mov mov mov mov inc inc mov cmp jne pop pop pop pop ret int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push push mov sub mov sub mov mov mov mov test je cltd idiv mov mov test jne mov mov cmp jge test jle mov neg mov mov neg mov mov neg lea mov mov jmp nop mov lea mov cmp jne mov mov neg movzbl mov movzbl mov mov mov lea mov mov cmp jge add add jmp sub mov add sub add add add mov mov cmp jne mov dec dec mov mov test jg pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub add pop ret int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push mov mov add dec jne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 mov mov and push mov mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov and push mov mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov pop ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push call add cmp jbe push call add push call add push call je cmpl jne push jmp add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov test je push mov push push push call add cmp je push push push call add push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push lea push push call add cmp jbe push call add push call add push call je push jmp incl movzbl mov pop ret int3 int3 push mov mov mov test je push push lea push push call add cmp je push push push call add push call add push call incl pop ret int3 int3 int3 int3 int3 push mov push push push lea push push call add cmp jbe push call add push call add push call je push jmp mov addl movzbl shl movzbl movzbl or movzbl shl or shl or mov pop ret int3 int3 int3 int3 int3 push mov push mov shr mov mov mov shr shr mov mov test je push push lea push push call add cmp je push push push call add push call add push call addl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmp je cmp je cmp je xor pop ret mov shr add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea movb cmp ja cmp jne push push jmp cmp jne push push jmp cmp jne push push push call add mov ret xor ret int3 int3 int3 int3 int3 int3 push mov sub push push xor push xor cmp mov sete mov mov mov cmp je push push push push call add cmp je push push push call add push call add push call addl mov mov call mov mov cmp je push push lea push push call add cmp je push push jmp incl mov mov cmp je push push lea push push call add cmp je push push jmp mov incl mov mov call movl cmp je cmp je cmp je xor jmp mov shr add push call add mov push call add mov test je test je mov mov push push push push call mov add cmp ja mov add test je testb je mov mov mov call mov call mov fildl mov or fdivl movl fstpl cmp jne mov mov push lea push push mov mov call jmp cmp jne mov mov push lea push push mov mov call jmp cmp jne mov mov push lea push push mov mov call add cmp je test jne mov cmp je cmp je cmp je xor jmp mov shr add add cmp ja call mov fildl mov mov fdivl fildl test jns faddl faddl mov shr mov fstpl shr mov fsubl shr mov mov faddl mov mov mov fstpl mov mov test je push push lea push push call add cmp jne mov mov addl cmp jae mov mov shr mov mov mov shr shr mov mov mov test je push push lea push push call add cmp jne mov addl test je push push mov push push call mov add cmp jne mov add jmp mov mov mov mov mov test je push push lea push push call add cmp jne addl test je push push push push call add cmp jne add mov mov push push push push call mov add cmp jbe push call add push call add jmp xor mov call testb je mov mov call xor jmp mov push push jmp push push jmp push push jmp push push jmp push push call mov jmp mov push push call mov add mov push call push call add pop mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub call cmpl mov fildl fdivl fstpl jbe fldl decl or mov cmp jne mov mov lea push push push push call jmp cmp jne mov mov lea push push push push call jmp cmp jne mov mov lea push push push push call add test jne cmp jne mov mov fildl test jns faddl cmpl faddp fstl ja fstp call mov fildl fdivl fsubl faddl fstpl mov pop ret mov fstp mov push push push push push push push call mov push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push push push mov push push xor lea push push mov mov mov mov mov call add cmp jbe push call add push call add push call add cmp jne xor jmp lea lea mov cmp jne sub add cmp jae push mov push lea push push call add cmp ja je push jmp mov movzbl add movzbl shl movzbl or movzbl shl or push push shl lea or push push mov call add cmp ja je push jmp incl movzbl push push lea push push call add cmp ja je push jmp incl push push lea push push call add cmp ja je push jmp add mov movzbl movzbl shl movzbl movzbl or shl or shl or mov cmp je cmp je cmp jne mov shr add mov je movzbl lea movb cmp ja cmp jne push push jmp cmp jne push push jmp cmp jne push push push call mov add lea push push cmp ja push call mov add cmpl lea movl mov jbe add mov push call mov add mov test jne mov push push call lea jmp mov call mov test je jmp mov mov call mov cmp ja mov cmp ja test je cmp ja mov mov push push sub add push push call add cmp ja jne add mov cmp jae movzbl mov cmp jne cmpl je lea push push push push call jmp lea push push push push call jmp cmp jne cmpl je lea push push push push call jmp lea push push push push call jmp cmp jne cmpl je lea push push push push call jmp lea push push push push call mov add test jne cmp jne mov mov test je push push push push call mov add cmp jne mov add testb je cmpl jne mov mov call mov mov mov test je push movzbl push push mov call mov add jmp mov test je push push push push call add cmp jne add testb je cmpl jne test jne movl jmp mov mov mov call mov mov call mov mov test jne testb je mov call cmpl jne cmp je mov push push call mov jmp xor jmp push push push call add push call add jmp mov push mov push movzbl push push push push push call add mov jmp push push jmp mov push push call mov jmp push call add mov jmp movzbl mov push push push push call add mov jmp mov push push call mov add mov push call mov add pop mov pop xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov push push call mov push push call mov push push call mov push push call push call push call push call push call push call push call push call add push call push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push call add test jne mov push push push call add push call ret int3 int3 push push call add test jne mov push push push call add push call ret int3 int3 push mov sub xor push mov mov mov mov mov mov mov push push mov mov mov mov mov mov mov test je inc cmp je cmp jne cmpb je mov mov inc test jne push push push call push call push call add mov call test je push call push call add push call movl cmp jle mov mov mov cmpb jne mov mov lea mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne movl jmp mov mov lea mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne movl jmp mov mov lea mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne movl jmp mov mov nop mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne lea jmp mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne lea jmp mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne lea jmp mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne lea jmp mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne lea jmp mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne lea jmp mov cmp jl cmp jg cmpb jne movsbl sub mov jmp mov mov nop mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne movl jmp mov mov lea mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne movl jmp cmp jne cmpb lea je push call lea add cmp ja mov jmp cmp jne cmpb lea je push call add cmp jle mov jmp mov mov lea mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne incl mov inc mov cmp jl mov cmpl mov je cmp jl call push mov push push call add push call mov push push push call add push call mov mov lea cmp je call cmpl je cmp jge nop cmpl jne mov mov mov inc push push mov call mov add test je mov fldz push fstl push fstpl mov call mov add mov test jne mov mov mov push push push push push push call add push call add test jne fldz fldl fcom fnstsw test jne fmull fldl fldl fcom fnstsw fstp test jne fstp fld fdiv fxch mov fxch sub fstpl fxch fstpl fstpl push push call add jmp fstp fstp mov cmp jl mov pop pop pop mov pop ret mov push push push call add push call cmpl je mov mov mov mov call mov mov call mov push push mov call add mov test jne mov mov mov push push push push call add jmp mov mov push push push call add mov mov call test jne mov push push push push call mov add pop pop pop mov pop ret mov mov mov mov call mov mov call mov mov mov mov push push push push mov call add mov test jne mov mov mov push push push push push call add cmpl jl fldz fldl fcom fnstsw test jne fmull fldl fldl fcom fnstsw fstp test jne fstp fld fdiv fxch sub fxch fstpl fxch fstpl fstpl push call add jmp fstp fstp mov push push push call add test je push call add test je push call add mov pop pop pop mov pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp cmp jne repz jmp mov andl movl movb ret mov push mov mov mov movl mov mov movb pop ret mov test jne mov ret mov push mov cmpl push mov je push pushl call lea push call pop pop mov test je pushl push push call add movb pop pop pop ret mov push mov cmpb je pushl call pop andl movb pop ret mov push mov mov push mov andl movl movb pushl call mov pop pop ret mov push mov push mov push mov cmp je call cmpb je pushl mov call jmp mov mov mov pop pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov andl movl movb call mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne jmp test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop adc inc add inc add add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea out inc add je add je add je add inc add inc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov add add jne add inc add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop mov jne add jne add mov sub shr sub cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea inc jbe add inc add inc add inc add inc add inc add inc add inc mov inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov pushf jbe add inc add jbe add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov push mov pop jmp mov push mov push push push mov push pushl call pushl mov mov call mov cmp jb mov sub lea cmp jb push call mov lea pop cmp jae mov cmp jae mov add cmp jb push pushl call pop pop test jne lea cmp jb push pushl call pop pop test je sar push lea call mov pushl mov call mov add push call mov mov jmp xor pop pop pop leave ret mov push push push call pop pop mov push call mov mov test jne push pop pop ret andl xor pop ret push push call call andl pushl call pop mov movl call mov call ret call ret mov push mov pushl call neg sbb neg pop dec pop ret mov push mov mov push mov movb test jne call mov mov mov mov mov mov cmp je mov test jne call mov mov cmp je mov mov test jne call mov mov testb jne orl movb jmp mov mov mov mov mov pop pop ret cmpb je mov andl ret mov ret mov push mov mov add pop ret mov push mov sub push push pushl lea call mov mov cmp jae mov cmpl jle lea push push push call mov add jmp mov movzwl and test je mov movzbl jmp cmpb je mov andl mov jmp mov cmpl jle mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp call movl xor mov movb inc mov push pushl lea push push push lea push push pushl lea push call add test je cmp movzbl je movzbl shl or cmpb je mov andl pop pop leave ret mov push mov cmpl jne mov lea cmp ja add pop ret push pushl call pop pop pop ret push push call xor xor cmp setne cmp jne call movl call or jmp call push pop add push push call pop pop mov call add push call pop mov lea push push pushl call add push call mov call add push push call add movl call mov call ret call add push push call pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov mov mov or xor cmp sete neg sbb and mov pop ret mov or xor cmp sete mov ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov cmpl sbb neg pop ret mov push mov mov and pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl call pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov movzbl push call pop test jne cmpb je pop ret xor inc pop ret mov push mov pop jmp mov push mov push push push lea push call mov xor sub sbb xor add push push adc push push call pop leave ret mov push mov push push push lea push call mov xor xor add adc mov mov xor pop leave ret pushl call test je call push call push push call add jmp mov push mov push pushl call pushl mov call mov mov pop pop ret pushl call ret mov push mov pop jmp mov push mov pushl push call pop pop pop ret mov push movl call pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push call pop ret mov push mov mov add push add push call neg pop sbb pop inc pop ret mov push mov mov add push add push call neg pop sbb pop neg pop ret mov push mov mov add push add push call pop pop xor test setg mov pop ret lea ret mov movl ret mov ret mov push mov push call test je push push call test je pushl call pop ret mov push mov pushl call pop pushl call int3 push call pop ret push call pop ret mov push call mov push call push call push call push call push call push call add pop ret mov push mov push mov jmp mov test je call add cmp jb pop pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret mov push mov mov test jne call movl call push pop pop ret mov test je mov xor pop ret mov push mov mov test jne call movl call push pop pop ret mov test je mov xor pop ret mov push mov cmpl je push call pop test je pushl call pop call push push call pop pop test jne push push push call mov mov pop mov cmp jae mov test je call add cmp jb cmpl pop pop je push call pop test je push push push call xor pop ret push push call push call pop andl xor inc cmp je mov mov mov cmpl jne pushl mov call mov mov test je pushl call mov mov mov mov sub mov cmp jb call cmp je cmp jb pushl call mov call mov call pushl call mov pushl call cmp jne cmp je mov mov mov mov mov mov jmp movl cmpl jae mov mov test je call addl jmp movl cmpl jae mov mov test je call addl jmp movl call cmpl jne movl push call pop pushl call cmpl je push call pop ret call ret mov push mov push push pushl call add pop ret mov push mov push push pushl call add pop ret push push push call add ret push push push call add ret mov push mov call pushl call pop push call int3 mov push mov push push push lea push mov movl call movl mov pop leave ret mov push mov sub jmp pushl call pop test je pushl call pop test je leave ret testb mov mov jne orl push lea push mov movl call push mov call pop push lea call push lea push mov call int3 mov push mov cmpl je pushl push pushl call test jne push call mov call push call pop mov pop pop ret mov push mov cmpl jne call push call push call pop pop mov test jne inc push push pushl call pop ret mov push mov push mov cmp ja push push cmpl jne call push call push call pop pop test je mov jmp xor inc push push pushl call mov test jne push pop cmp je push call pop test jne jmp call mov call mov mov pop pop jmp push call pop call movl xor pop pop ret mov push mov sub push push xor push xor pop lea mov rep cmp jne call movl call or jmp mov cmp je push mov mov lea push push pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop pop leave ret mov push mov lea push pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov ret mov push push pop test jne mov jmp cmp jge mov mov push push call pop pop mov test jne push push mov call pop pop mov test jne push pop pop ret xor mov jmp mov mov add add cmp jl push pop xor mov push mov sar mov mov and shl mov cmp je cmp je test jne mov add inc cmp jl pop xor pop ret call cmpb je call pushl call pop ret mov push mov push mov mov cmp jb cmp ja mov sub sar add push call orl pop jmp add push call pop pop ret mov push mov mov cmp jge add push call mov orl pop pop ret mov add push call pop ret mov push mov mov mov cmp jb cmp ja andl sub sar add push call pop pop ret add push call pop ret mov push mov mov mov cmp jge andl add push call pop pop ret add push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl call xor jmp xor mov cmp setne cmp je xor cmp setne cmp je call mov cmp jne call movl jmp mov cmp jne call movl push lea push push call add jmp push pushl push push call add mov movl call mov call ret pushl call pop ret mov push mov push pushl pushl call add pop ret mov push mov push mov test jne call push pop mov call mov jmp push pushl pushl call add mov test je xor jmp call mov pop pop ret mov push mov sub mov push mov push push mov mov mov test je cmpl je test jne call movl call xor pop pop pop leave ret mov test je or xor div cmp jbe cmp je push push push call add test je or xor div cmp ja imul testl mov mov je mov mov jmp movl test je testl je mov test je js mov cmp jb mov cmp ja push pushl pushl pushl call sub add add sub add sub mov jmp cmp jb cmpl je mov xor cmp jbe mov divl mov jmp mov divl mov sub jmp mov cmp ja mov cmp ja push pushl push call pop push call add test je cmp je add sub sub jmp push call pop cmp je cmpl je mov incl mov mov dec decl mov test jne mov jmp cmpl je pushl push pushl call add call movl jmp orl mov sub xor divl jmp orl jmp mov push mov pushl pushl pushl push pushl call add pop ret push push call xor mov cmp je cmp je cmp jne cmpl je pushl push pushl call add call movl call xor call ret pushl call pop mov pushl pushl pushl pushl pushl call add mov movl call mov jmp pushl call pop ret mov push mov pushl pushl pushl push pushl call add pop ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp xor cmp setne cmp je mov push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne push call mov lea push push pushl push call mov push push call add movl call mov call ret pushl call pop ret mov push mov lea push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl call add pop ret mov push mov lea push pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl call add pop ret mov push mov sub push push push mov test je cmpl je mov test jne call movl call xor pop pop pop leave ret mov test je or xor div cmp ja imul testl mov mov mov je mov mov jmp movl test je mov and je mov test je js mov cmp jb mov push pushl pushl call sub add add sub add jmp cmp jb test je push call pop test jne cmpl mov je xor mov divl sub push pushl push call pop push call add cmp je mov cmp ja mov add sub cmp jb mov jmp mov movsbl push push call pop pop cmp je incl mov dec mov test jg movl test jne mov jmp orl mov sub xor divl jmp orl mov jmp push push call xor cmp je cmp je xor cmp setne cmp jne call movl call xor call ret pushl call pop mov pushl pushl pushl pushl call add mov movl call mov jmp pushl call pop ret mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov pop jmp mov push mov pop jmp mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov push mov push or test jne call movl call or jmp testb je push call push mov call push call push call add test jns or jmp mov test je push call andl pop andl mov pop pop pop ret push push call orl xor mov test setne test jne call movl call or jmp testb je andl mov call ret push call pop andl push call pop mov movl call jmp mov push call pop ret mov push mov cmpl jne call pushl call push call pop pop pop ret mov cmp je xor ret mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov ret push push call lea push call xor cmp jne push push push push call mov cmp je mov jmp mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov call test jne push call pop call test jne push call pop call mov call test jns push call pop call mov call mov call test jns push call pop call test jns push call pop push call pop cmp je push call pop call testb je movzwl jmp push pop push push push push call mov cmp jne push call call jmp mov mov mov mov push push call pop pop ret mov mov mov cmpl jne push call call movl mov call ret call jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov call mov push call pop push call push call cmpl jne push call pop push call push call leave ret mov push mov mov push push test je mov test jne call push pop mov call mov jmp mov test jne mov jmp mov sub mov mov inc test je dec jne test jne movb call push pop mov mov jmp xor pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je mov add test je test jne add lea lea mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret push mov and test jne mov and shr je jmp lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqa movdqa lea lea dec jne and je mov shr je mov mov lea lea dec jne mov and je mov mov inc inc dec jne pop pop pop pop ret mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push call mov xor ret mov push mov push mov push call add cmp jbe or mov pop pop ret mov push mov mov mov mov pop ret mov push mov push push xor pushl call mov pop test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor push pushl pushl call mov add test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl call mov pop pop test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl pushl call mov add test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret int3 int3 int3 int3 int3 int3 int3 mov cmp je mov add xor call mov mov add xor jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov sub push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne mov lea mov mov mov mov cmp je lea lea mov lea mov mov mov test je mov call movb test js jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov mov call mov cmp je push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je push push mov call jmp sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret mov push push mov push xor lea push push call xor movzwl mov mov mov mov shl or lea stos stos stos mov add lea sub mov mov mov inc dec jne lea mov mov mov inc dec jne pop pop ret mov push mov sub mov xor mov push push lea push pushl call mov test je xor mov inc cmp jb mov movb test je lea movzbl movzbl cmp ja sub inc push lea push push call add mov add test jne push pushl lea pushl push push lea push push push call xor push pushl lea push push push lea push push pushl push call add push pushl lea push push push lea push push pushl push call add xor movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp lea movl xor sub mov lea add lea cmp ja orb lea jmp cmp ja orb lea mov jmp movb inc cmp jb mov pop xor pop call leave ret push push call call mov mov test je cmpl je mov test jne push call pop mov call ret push call pop andl mov mov cmp je test je push call test jne cmp je push call pop mov mov mov mov push call movl call jmp mov push call pop ret mov push mov sub push xor push lea call mov cmp jne movl call cmp je mov andl jmp cmp jne movl call jmp cmp jne mov mov movl jmp cmp je mov andl mov pop leave ret mov push mov sub mov xor mov push mov push mov push call mov xor mov cmp jne mov call xor jmp mov xor cmp je incl add cmp jb cmp je cmp je movzwl push call test je lea push push call test je push lea push push call xor inc add mov mov cmp jbe cmpb je lea mov test je movzbl movzbl jmp push lea push push call mov add imul mov lea mov jmp mov test je movzbl movzbl jmp mov mov or movzbl inc cmp jbe mov add cmpb jne mov incl add cmpl mov jb mov mov movl call push mov lea lea pop mov mov add add dec jne mov call jmp orb inc cmp jbe add cmpb jne lea mov orb inc dec jne mov call mov mov jmp mov xor movzwl mov shl or lea stos stos stos jmp cmp jne or mov pop pop xor pop call leave ret mov push mov sub push lea call mov cmpl je cmpb mov je mov andl leave ret cmpb je mov andl xor leave ret push push call orl call mov mov call mov mov call mov cmp je push call pop mov test je mov mov mov rep andl push pushl call pop pop mov test jne mov pushl call test jne mov cmp je push call pop mov push mov call testb jne testb jne push call pop andl mov mov mov mov mov mov xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp pushl call test jne mov cmp je push call pop mov push call movl call jmp push call pop ret jmp cmp jne cmp je push call pop call movl jmp andl mov call ret cmpl jne push call pop movl xor ret mov push mov push push mov push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop pop pop ret mov push mov push mov test je push push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop mov pop pop ret mov push mov push push mov mov xor push cmp je cmp je mov cmp je cmp jne mov cmp je cmp jne push call pushl call pop pop mov cmp je cmp jne push call pushl call pop pop pushl call pushl call pop pop mov cmp je cmp jne mov sub push call mov mov sub push call mov sub push call pushl call add mov cmp je cmp jne push call pushl call pop pop lea movl cmpl je mov cmp je cmp jne push call pop cmp je mov cmp je cmp jne push call pop add decl jne push call pop pop pop pop pop ret mov push mov push mov test je mov test je push mov cmp je push mov call pop test je push call cmpl pop jne cmp je push call pop mov pop jmp xor pop pop ret push push call call mov mov test je cmpl je call mov test jne push call pop mov call ret push call pop andl pushl add push call pop pop mov movl call jmp push call pop mov ret push call ret call ret mov push mov pushl pushl call call pop ret mov ret mov push pushl call mov test jne pushl call mov push pushl call mov pop ret mov push mov pushl pushl pushl call call pop ret mov cmp je push pushl call call orl mov cmp je push call orl jmp push push call push call mov movl andl xor inc mov mov movb movb movl push call pop andl pushl call movl call push call pop mov mov mov test jne mov mov pushl call pop movl call call ret xor inc mov push call pop ret push call pop ret mov push push call pushl mov call call mov test jne push push call mov pop pop test je push pushl pushl call call test je push push call pop pop call orl mov jmp push call pop xor push call pop mov pop ret mov push call mov test jne push call pop mov pop ret push push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop andl mov test je push call test jne cmp je push call pop movl call push call pop movl mov test je push call pop cmp je cmp je cmpl jne push call pop movl call push call pop call ret mov push call pop ret mov push call pop ret mov push mov cmpl je cmpl jne push pushl mov call test je pushl pushl call call mov pop push pushl pushl call call pushl call mov cmp je push push call pop ret jmp jmp mov push push call mov test jne call xor pop ret push mov push push call push push mov call push push mov call push push mov call cmpl mov mov je cmpl je cmpl je test jne mov mov mov movl mov mov call mov cmp je pushl push call test je call pushl mov call pushl mov call pushl mov call pushl mov call mov call test je mov push pushl call call mov cmp je push push call mov pop pop test je push pushl pushl call call test je push push call pop pop call orl mov xor inc jmp call xor pop pop ret mov push mov mov test je mov mov add pop ret mov push mov mov test je sub cmpl jne push call pop pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov mov push xor push push cmp jle mov mov dec cmp je inc cmp jne or mov sub dec cmp jge inc mov mov cmp jne mov mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov jmp mov cmp je push pushl pushl pushl push pushl call test je mov push push push pushl pushl pushl call mov cmp je mov test je mov cmp je cmp jg push pushl push pushl pushl pushl call jmp mov cmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl pushl pushl call test je push push cmp jne push push jmp pushl pushl pushl push push pushl call mov push call pop pushl call mov pop lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov mov xor cmp je inc cmp jb lea cmp ja push pop pop ret mov pop ret add push pop cmp sbb and add pop ret call test jne mov ret add ret call test jne mov ret add ret mov push mov push call mov push mov call pop mov call mov pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov test jne call push pop jmp call mov mov xor pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov test jne call push pop jmp call mov mov xor pop pop ret mov push mov sub pushl lea call movzbl mov mov movzwl and cmpb je mov andl leave ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov mov cmp sbb neg pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov sub push pushl lea call mov lea cmp ja mov mov movzwl jmp mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp xor mov movb inc mov push pushl pushl lea push push lea push lea push push call add test jne cmp je mov andl xor jmp movzwl and cmpb je mov andl pop leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl pushl call add pop ret mov push mov cmpl je pushl pushl pushl pushl pushl call pop ret mov ret mov ret mov push mov test je test je cmp je push push pop mov rep andl push call pop pop pop ret mov push mov push call mov push pop test sete lea mov cmp je test je cmp je cmp je call movl call or jmp and jmp or mov jmp orl mov pop pop ret mov mov mov mov mov mov mov ret push push call mov test je push call pop andl mov test je push call test jne mov cmp je push call pop movl call cmpl je push call pop movl pushl call pop mov test je cmpl jne cmp je push call pop movl call mov mov mov push call pop call ret mov push call pop ret mov push call pop ret mov push mov pop jmp push push call call mov push push call pop pop mov mov test jne call movl xor jmp call call mov mov mov mov push call pop andl pushl call pop movl call push call pop movl pushl call movl call mov call ret mov push call pop ret mov push call pop ret jmp xor ret mov push mov push push xor xor cmp jle push lea add pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov push push push mov push xor push push call mov mov add test jne xor jmp cmp jne lea cmp je push push lea push push call add test jne mov jmp push push push push push call push push mov call cmp jmp cmpl lea mov jne cmp jae cmp je push push push pushl jmp cmpl jne cmp jae cmp je push mov push push add jmp cmpl jne cmp jae test je cmp jne push mov push push sub push call add test jne cmp je test je incl lea push push call test pop pop jne or pop pop pop pop ret xor push push push push push jmp mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add lea cmp pop pop je push push push pushl pushl call add pop ret push push push push push call int3 mov push mov sub push xor inc push mov call pop mov test je push lea movb mov pushl mov push pushl push push push call lea add movl mov push push push call add test jne mov lea pushl mov pushl call pop pop test je andl mov pushl addl push mov mov pushl push push push call add cmpl jl cmpl jne mov mov test je push call test jne pushl call pop mov test je push call test jne pushl call pop mov andl andl mov mov mov jmp xor push push push push push call pushl call mov mov xor pop cmp je push call test jne pushl call pop mov cmp je push call test jne pushl call pop mov mov mov mov mov pop pop leave ret mov push mov sub mov xor mov mov push push mov push mov mov mov mov mov call lea mov lea lea add mov mov test je cmpl je cmpl je cmpb jne cmpb jne push pushl pushl call add test jne test je mov mov mov mov test je andl mov jmp xor push push push push push call push call mov pop mov cmp jae push pushl call pop pop test je push pushl call pop pop test je andl lea push push call pop pop test jne lea push push push call add test je movzwl mov mov lea push push pushl call add cmpb je mov cmp jb mov mov inc push push push pushl call add test jne xor cmp je push push pushl call add cmp je push pushl pushl call add pushl pushl pushl call add test jne mov jmp push push push push push jmp xor mov pop pop xor pop call leave ret mov push mov sub mov xor mov mov push mov push mov mov call mov push lea push lea push push lea push pushl call add test jne xor mov pop xor pop call leave ret shl add pushl lea push call pop pop test jne mov jmp lea push call add push mov call pop pop mov test je mov mov mov lea mov mov mov lea imul add push push mov lea push call mov lea push mov mov mov add add push push call add test jne mov mov add mov movzwl mov push lea push pushl call add cmpl jne mov andl mov mov mov mov lea mov cmp je mov incl mov mov mov mov mov mov add cmpl mov jl jmp mov test je lea mov mov mov mov mov mov mov cmpl jne push pushl lea pushl push push push push push call add test je xor mov and inc cmp jb push pushl lea push call add neg sbb inc mov jmp andl mov mov mov mov cmpl jne mov mov mov imul push call pop test je mov pushl mov call mov pop mov mov mov mov jmp cmpl je mov add add pushl call test jne pushl call pushl call andl pop pop mov mov add add movl mov jmp xor push push push push push call int3 mov push mov sub mov xor mov mov push push xor mov push mov cmp je cmp je push call pop jmp add mov jmp movl mov cmp je cmpb jne cmpb jne cmpb jne mov push push call mov pop pop test je sub mov je cmpb je movl mov jmp mov push push pushl call add test jne pushl call pop cmp je incl add cmp jle inc push push call mov xor pop pop cmp jne cmpb jne cmpl jg push push lea push push call add test jne mov mov mov lea push call pop test je incl add cmpb je inc cmpb jne xor cmp je mov jmp push push push push push call xor jmp push push push push lea push push call add cmp je lea test je pushl lea push call pop pop test je lea push mov call pop test jne and jmp incl inc add cmp jle xor cmp jne cmp je call mov pop pop xor pop call leave ret mov push mov cmpl push push ja cmpl je xor inc push push call mov pop pop test jne call movl xor pop pop pop ret push push call pop pop mov test jne push call pop jmp push push call pop pop mov test jne pushl call push call pop jmp mov mov call pushl mov mov call pop test jne pushl call pushl call push call add jmp pushl mov pushl call pop pop test je pushl call pushl call pushl call push call add xor jmp mov mov mov mov mov jmp mov push mov pop jmp push push call andl cmpl jbe call movl call xor jmp call mov mov call orl andl xor inc push push call pop pop mov mov test je push call pop mov mov mov call andl call pushl mov mov call pop mov test je cmpl je push pushl call pop pop test je mov push call pop movl lea push push call push call add testb jne testb jne pushl push call pop pop mov mov mov mov mov mov mov andl call jmp mov mov xor inc push call pop ret mov push call pop ret jmp push call push call pop pop movl call mov call ret mov andl ret mov push mov push mov push call push call pop pop test je call add cmp jne xor jmp call add cmp jne xor inc incl testl jne push push lea cmpl mov jne push call pop mov test jne lea push mov mov pop mov mov jmp mov mov mov mov mov orl xor pop inc pop jmp xor pop pop ret mov push mov cmpl je push mov testl je push call andl andl andl andl pop pop pop ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov mov addl mov mov pop ret mov push mov mov addl mov mov mov pop ret mov push mov mov addl mov mov pop ret mov push mov sub mov xor mov push mov push mov xor push pushl mov lea mov mov mov mov mov mov mov mov mov call test jne call movl call cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov xor mov mov mov mov test je inc mov cmp jl lea cmp ja movsbl movsbl and jmp xor movsbl push sar pop mov cmp ja jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov mov cmp jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne add mov mov mov cmp jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne add orl mov jmp cmp jne cmpb jne add andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov andl lea push movzbl push call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl lea mov mov mov cmp jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je cmp jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov cmp je mov cmp je testl movswl mov je cltd sub sar movl jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je mov mov add jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov test je mov mov mov jmp movl mov mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call call mov add and je cmpl jne lea push push pushl call call pop pop cmpb jne test jne lea push push pushl call call pop pop cmpb jne orl inc mov push jmp movl mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add mov mov mov cmp jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmp je add cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub mov test jne mov test jle mov lea mov dec call cmpl je test jg pushl mov lea lea call testb pop je testb jne jmp lea mov mov dec call cmpl je test jg cmpl mov je test jle mov movzwl push push lea push lea push dec add call add test jne cmp je pushl lea lea call pop test jne jmp orl jmp mov push lea call pop cmpl jl testb je mov jmp lea mov mov dec call cmpl je test jg cmpl je pushl call andl pop mov mov mov test je mov mov xor mov jmp cmpb je mov andl mov mov pop pop xor pop call leave ret mov pop enter movb movb movb movl mov inc add call in mov mov pop ret mov push mov sub mov xor mov push mov push cmp je push call pop andl push lea push push call lea mov lea add mov mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea mov movl mov mov mov mov mov mov mov mov call push mov call lea push call test jne test jne cmp je push call pop mov pop xor pop call leave ret mov push mov push pushl call pushl mov call mov mov pop pop ret pushl call ret mov push push mov push push call add push call push call pop ret mov push mov pushl pushl pushl pushl pushl call int3 mov push mov pushl call test je pop jmp pushl pushl pushl pushl pushl call int3 xor push push push push push call add ret xor push push push push push push call push mov push push call add push call push call int3 mov push mov pop jmp push push call call lea mov xor cmp setne test jne call movl call or jmp push call pop andl push call mov pushl pushl pushl push call mov push push call add movl call mov call ret mov push call pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret call test je push call pop testb je push push push call add push call int3 mov push mov mov mov mov and not and or mov pop ret mov push mov xor mov cmp je inc cmp jb xor pop ret mov pop ret mov push mov sub mov xor mov push push mov push push call mov xor pop mov cmp je push call pop cmp je push call pop test jne cmpl je cmp je push push mov push call add test jne push mov push push mov call mov test jne push push push call add test je xor push push push push push call push call inc pop cmp jbe push call lea mov sub push sar push sub push push call add test jne push mov push push call add test jne pushl push push call add test jne push push push call add jmp push push push push push jmp push call mov cmp je cmp je xor mov mov cmp je inc cmp jb push lea push lea push mov call pop push lea push push call mov pop pop xor pop call leave ret push call pop cmp je push call pop test jne cmpl jne push call push call pop pop ret mov push mov sub mov xor mov cmpl mov push push push mov mov jne andl push lea mov push pushl pushl push call mov add test jne call cmp jne push push pushl pushl pushl call add mov test je inc push push call mov pop pop test je pushl mov push pushl pushl pushl call mov add test je push push call mov xor pop pop cmp jne cmp je push call pop or mov pop pop xor pop call leave ret lea push push push push call add test jne cmp je push call pop xor jmp push push push push push call cmpl jne mov xor push push pushl mov pushl call mov test je push push call pop pop mov test je push push pushl pushl call test jne pushl call andl pop jmp cmpl jne andl push lea push mov or push pushl call test je mov mov jmp mov push mov mov mov pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret push push call mov xor cmp jne push push push push lea push push call add mov cmp jne xor jmp push call pop mov jmp dec mov cmpb jne mov cmp ja dec push call pop mov cmp jne push call pop mov test je add push call pop mov test je pushl push push call add xor cmp jne mov mov mov mov mov mov jmp push push push push push call push call pop pushl call pop movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret mov push mov cmpw jne movl pushl push push pushl pushl pushl call add pop ret push push call xor mov cmp jne push call pop mov cmp jne push push add push push call add mov mov cmp jne push lea push push call add xor jmp push call pop mov mov mov dec mov test je lea cmpb jne movb jmp push call pop mov cmp je lea push call pop mov test je pushl push push call add xor cmp jne mov mov mov mov mov mov mov jmp push push push push push call push call pop pushl call pop mov movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov pushl call push call pop pop mov jmp movl call call ret push call pop ret int3 int3 int3 int3 int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl add ret test je mov add cmp jne add or je test je mov add cmp jne or je cmp jne or je add jmp mov push push xor mov cmpl jne lea mov push pushl add call test je inc cmp jl xor inc pop pop ret andl xor jmp mov push mov push mov push mov test je cmpl je push call push call andl pop add cmp jl mov pop mov test je cmpl jne push call add cmp jl pop pop ret mov push mov mov pushl call pop ret pushl push call push call pop ret push push call xor inc mov xor cmp jne call push call push call pop pop mov lea cmp je mov jmp push call pop mov cmp jne call movl xor jmp push call pop mov cmp jne push push call test jne push call pop call movl mov jmp mov jmp push call pop movl call mov call ret push call pop ret mov push mov mov push lea cmpl jne push call pop test jne push call pop pushl call pop pop ret push push call call mov test je andl call jmp xor inc ret mov movl call call ret call mov test je call jmp push push call pushl call test je andl call jmp xor inc ret mov movl call int3 push call mov ret mov push mov mov mov mov mov mov pop ret push push call xor push call pop mov cmp jne mov pushl call mov movl jmp mov pushl call mov movl cmp je cmp je call mov movl call cmp jne xor jmp xor push call pop ret cmpl je pushl call pop xor inc call ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret pushl call ret call add ret call add ret push push call andl mov mov cmp je cmp je push pop cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne call mov test je mov cmp jne pushl call pop mov test je pushl push push call add pushl mov call pop test je mov mov mov cmp je add jmp mov add mov imul add lea cmp jae cmp je jmp push call pop andl cmp je cmp jne cmpl jne push push call xor inc cmp jne mov jmp call mov call mov movl mov mov sub je sub je sub je sub je dec jne pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov movl call cmpl jne mov jmp mov push call pop ret cmp je cmp je cmp je cmp jle cmp jle call movl call or call ret push push call xor mov mov mov cmp jg je mov push pop sub je sub je sub je sub jne call mov mov test jne or jmp mov mov jmp pushl mov call pop lea mov jmp mov sub je sub je dec je call movl call jmp mov mov jmp mov mov jmp mov mov movl push call mov xor cmpl je cmp jne push call cmp je push call pop xor mov cmp je cmp je cmp jne mov mov mov cmp jne mov mov movl cmp jne mov mov mov add cmp jge mov imul mov mov incl jmp call mov movl call cmp jne pushl push call pop jmp mov mov cmpl je push call pop ret push call pop cmp je cmp je cmp jne mov mov cmp jne mov mov xor call ret mov push mov mov mov pop ret mov push mov push push pushl call mov mov test jne call push pop mov call mov jmp andl push test jne push call mov test jne call push pop mov call mov jmp push push call mov test jne call mov mov call push call pop mov call call push call pop jmp push push call mov call push push mov call cmp pop je pushl call push pushl call test jne call movl call mov jmp xor pop pop leave ret mov push mov mov mov pop ret mov push mov push push call pop pushl call pushl mov call push mov call pop mov pop pop ret push call pop ret pushl call ret mov push mov pushl call test je pushl call pop test je xor inc pop ret xor pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push push xor pushl call mov add cmp jb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test je mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret mov push mov sub mov push push push pop mov lea rep mov mov pop mov pop test je testb je movl lea push pushl pushl pushl call leave ret push push push call xor test setne mov mov ret pushl call andl ret mov ret mov push mov push push mov push call mov mov pop test jne call movl orl or jmp test je call movl jmp push xor test je mov test je mov and mov mov mov and or mov mov mov test jne call add cmp je call add cmp jne pushl call pop test jne push call pop testl push je mov mov lea mov mov sub dec mov cmp jle push push pushl call add mov jmp or mov or jmp mov cmp je cmp je mov and mov sar shl add jmp mov testb je push push push push call and add cmp je mov mov mov jmp xor inc push lea push pushl call add mov cmp je orl or jmp mov and pop pop pop leave ret mov push mov sub andl push push pop xor lea rep pop cmp jne call movl call or leave ret mov test je push pushl mov pushl mov pushl lea push movl movl call add decl mov js mov movb jmp lea push push call pop pop mov pop leave ret mov push mov pushl push pushl pushl call add pop ret mov push mov sub push push xor pop xor lea mov rep pop cmp jne call movl call or leave ret pushl lea pushl movl pushl movl push mov mov call add leave ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov sub push push xor push xor pop lea mov rep cmp jne call movl call or jmp mov push mov cmp je cmp jne call movl call or jmp mov mov cmp ja mov pushl lea pushl movl pushl mov push mov call add mov cmp je cmp jl decl js mov mov jmp lea push push call pop pop cmp je mov jmp xor cmp mov setge sub pop pop pop leave ret mov push mov pushl push pushl pushl pushl push call add test jns or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jns or pop ret mov push mov cmpl jne call movl call or pop ret push mov test je cmpl ja call movl jmp pushl pushl pushl pushl push push call add test jns movb cmp jne call movl call or pop pop ret mov push mov pushl push pushl pushl pushl call add pop ret mov push mov cmpl jne call movl call or pop ret push mov push mov push test jne test jne cmp jne xor jmp test je mov test jne call movl jmp call pushl pushl pushl cmp jbe mov inc push push push call add cmp jne call cmpl jne call mov jmp mov push push push call add movb cmp jne cmpl jne call cmpl jne call mov jmp test jns movb cmp jne call movl call or pop pop pop pop ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov pushl push pushl pushl pushl push call add test jns or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jns or pop ret mov push mov sub push lea push call push push pop push call pop pop xor cmp jne or jmp lea mov mov cmp jae add orl movw mov movw movb mov mov mov add lea add cmp jb push push cmp je mov cmp je mov add mov add mov mov cmp jl mov cmp jge mov push push call pop pop test je addl lea mov cmp jae add orl andl andb andl movw movw movb mov add add lea cmp jb add cmp jl jmp mov xor test jle mov mov cmp je cmp je mov mov test je test jne push call test je mov and mov sar shl add mov mov mov mov mov mov push lea push call test je incl addl inc incl cmp jl xor mov shl add mov cmp je cmp je orb jmp movb test jne push pop jmp lea neg sbb add push call mov cmp je test je push call test je and mov cmp jne orb jmp cmp jne orb push lea push call test je incl jmp orb movl inc cmp jl pushl call xor pop pop pop leave ret or jmp mov push push mov mov test je lea cmp jae lea cmpl je push call mov add add lea cmp jb pushl call andl pop add cmp jl pop pop ret push push call xor mov push call pop mov push pop mov cmp jge mov mov cmp je mov testb je push call pop cmp je incl cmp jl mov mov add push call mov pushl call pop mov mov inc jmp movl call mov call ret push call pop ret mov push mov push push mov mov mov and xor cmp jne test je mov push mov sub test jle push push push call pop push call add cmp jne mov test jns and mov jmp orl or pop mov andl mov pop mov pop pop ret mov push mov push mov test jne push call pop jmp push call pop test je or jmp testl je push call push call pop neg pop sbb jmp xor pop pop ret push push call xor mov mov push call pop mov xor mov cmp jge mov lea cmp je mov testb je push push call pop pop xor inc mov mov mov mov test je cmp jne push call pop cmp je incl jmp cmp jne test je push call pop cmp jne or mov call inc jmp xor mov mov pushl push call pop pop ret movl call cmpl mov je mov call ret push call pop ret push push call xor cmp jne push call pop jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret push call pop ret mov push mov sub mov push xor push mov mov mov mov mov jmp inc cmpb je mov cmp je cmp je cmp je call movl call xor jmp mov jmp orl jmp mov orl xor inc inc mov push test je lea mov test je movsbl cmp jg je sub je sub je dec je sub je sub je sub jne cmp jne movl or jmp or jmp test jne or jmp movl jmp test jne mov and and or or mov jmp cmpl jne movl or jmp sub je sub je dec je sub je sub jne test jne or jmp cmpl jne andl movl jmp cmpl jne or movl jmp test jne or jmp mov test je xor jmp or inc mov test jne cmpl je jmp inc cmpb je push push push call add test jne add jmp inc cmpb je cmpb jne inc cmpb je push push push call add test jne add or jmp push push push call add test jne add or jmp push push push call add test jne add or jmp inc cmpb je cmpb je call movl call jmp push pushl lea push pushl push call add test je xor jmp incl mov mov mov xor mov mov mov mov mov mov pop pop pop leave ret push push call xor xor mov push call pop mov xor mov cmp jge mov lea cmp je mov mov test jne test jne lea cmp ja lea push call pop test je mov pushl push call pop pop mov mov testb je push push call pop pop inc jmp mov mov jmp push call pop mov mov cmp je push mov mov add push call test mov jne pushl call pop mov mov jmp mov add push call mov mov mov mov cmp je andl mov mov mov mov orl movl call mov call ret mov push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret mov push mov push mov test jne call movl call jmp mov test je test jne test je or mov jmp or mov test jne push call pop jmp mov mov pushl pushl push call pop push call add mov test je cmp je testb jne push call pop cmp je push call pop cmp je push push call sar push lea call and pop shl add pop pop jmp mov mov and cmp jne orl cmpl jne mov test je test jne movl mov decl movzbl inc mov jmp neg sbb and add or andl or pop pop ret mov push mov sub mov push mov push pop mov mov cmp jne call andl call movl or jmp push xor cmp jl cmp jb call mov call movl call or jmp mov sar push and lea mov shl mov test jne call mov call movl jmp cmp ja mov cmp je test jne cmp je mov add sar mov movsbl dec push pop je dec jne mov not test je and mov mov mov jmp mov not test jne call mov call movl call jmp mov shr mov cmp jb mov pushl call mov pop mov test jne call movl call movl or jmp push push push pushl call mov mov add mov mov add testb mov je mov cmp je cmpl je decl cmpb mov mov lea movl movb je mov mov cmp je cmpl je mov mov inc decl cmpb movl movb jne mov mov cmp je cmpl je mov mov inc decl movl movb push lea push pushl push mov pushl call test je mov test js cmp ja mov add lea testb je cmpb je test je cmpb jne orb jmp andb mov mov add mov mov cmp jae mov mov cmp je cmp je mov inc inc mov jmp mov dec cmp jae lea cmpb jne add mov movb jmp mov jmp incl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpb je movb mov mov mov jmp cmp jne cmpb je push push push pushl call add cmpb je movb inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc mov sub cmpb mov jne test je dec mov test js inc jmp xor inc movzbl jmp cmp jg cmp jb dec movzbl inc cmpb je mov movzbl movsbl test jne call movl jmp inc cmp jne add jmp mov testb je inc mov cmp jl mov mov mov inc cmp jne mov mov mov inc sub jmp neg cltd push push push pushl call add mov sub shr push pushl push pushl push push call mov test jne call push call pop orl mov cmp je push call pop mov cmp jne mov jmp mov mov xor cmp setne add mov mov jmp test je cmpw jne orb jmp andb mov mov add mov mov cmp jae mov movzwl cmp je cmp je mov add add mov jmp mov add cmp jae lea cmpw jne add mov push jmp mov jmp addl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpw je push pop mov mov mov mov mov mov mov mov movb jmp cmp jne cmpw je push push push pushl call add cmpw je push pop mov add mov cmp jb jmp mov lea testb jne orb jmp mov mov add sub mov jmp call push pop cmp jne call movl call mov jmp cmp jne andl jmp xor pop pop pop leave ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je mov cmp sbb inc jne call andl call movl jmp push call pop andl mov testb je pushl pushl push call add mov jmp call movl call andl orl movl call mov call ret mov push call pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov push mov push mov test jne xor jmp cmpl jne call push pop mov call mov jmp cmpl je cmp jb push pushl pushl call add jmp pushl push pushl call add cmpl je cmp jae call push pop mov mov jmp push pop pop pop ret int3 int3 int3 int3 mov mov test je xor mov test jne cmp jb cmpl je jmp push mov cmp jb neg and je sub mov add sub jne mov shl add mov shl add mov and shr je rep test je mov add sub jne mov pop ret mov ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp xor cmp setne cmp je mov push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne push call mov pushl pushl pushl push call mov push push call add movl call mov call ret pushl call pop ret mov push mov pushl pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl pushl push call add pop ret mov push mov pushl push pushl pushl push call add pop ret mov push mov pushl push pushl pushl push call add pop ret mov push mov pushl push pushl pushl push call add pop ret mov push mov mov call mov xor mov mov push mov push xor mov mov mov cmp jne xor jmp cmp jne call mov call movl call or jmp mov sar mov push lea mov and shl mov add sar mov mov cmp je cmp jne mov not test jne call andl call movl call jmp testb je push push push push call add push call pop test je mov testb je call mov xor cmp lea sete push mov pushl mov call xor cmp je cmp je cmp je call mov mov xor mov cmp jbe mov mov test jne mov mov xor cmp sete mov mov add cmpl je mov mov mov andl push lea push jmp movsbl push call pop test je mov sub add xor inc cmp jbe push lea push push call add cmp je inc incl jmp push push lea push call add cmp je xor push push push lea push push lea push push pushl inc incl call mov test je push lea push push lea push mov mov pushl call test je mov mov add mov cmp jl cmpl je push lea push push lea push mov mov movb pushl call test je cmpl jl incl incl jmp cmp je cmp jne movzwl xor cmp sete add addl mov mov cmp je cmp jne pushl call pop cmp jne addl cmpl je push pop push mov call pop cmp jne incl incl mov cmp jb jmp mov mov incl mov mov mov jmp xor mov testb je cmpb mov jne mov cmp jbe mov xor sub lea cmp jae mov inc inc mov cmp jne incl movb inc inc mov inc inc cmp jb mov lea sub push lea push push lea push mov mov pushl call test je mov add cmp jl mov sub cmp jb jmp cmpb jne mov cmp jbe andl mov sub push lea pop cmp jae movzwl add add mov cmp jne add push pop mov mov add add add mov add cmpl jb mov lea sub push lea push push lea push mov mov pushl call test je mov add cmp jl mov sub cmp jb jmp mov mov cmp jbe mov andl sub push lea pop cmp jae mov movzwl add add cmp jne push pop mov add add add mov add cmpl jb xor push push push lea push lea sub cltd sub sar push mov push push push call mov cmp je push lea push mov sub push lea push mov mov pushl call test je add cmp jg jmp call mov cmp jg mov sub mov cmp jb jmp push lea push pushl pushl pushl call test je mov andl mov jmp call mov cmpl jne cmpl je push pop cmp jne call movl call mov jmp pushl call pop jmp mov mov testb je mov cmpb jne xor jmp call movl call andl or jmp mov sub pop mov pop xor pop call leave ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl pushl push call add mov jmp call movl call andl orl movl call mov call ret mov push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne jmp test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop les inc add or adc inc add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea xchg or test inc add add add add add add add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov mov inc add or fmuls inc add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop push or add add add rorl add jmp cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea lock add or add or inc add or inc add or inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov dec or inc add add inc add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov push mov sub push pushl lea call mov mov test je mov test jne call movl call cmpb je mov andl xor jmp cmpl je cmpl jl cmpl jg andl mov push mov push lea cmpl jle lea push movzbl push push call mov add jmp mov movzbl movzwl and test je mov inc jmp cmp jne orl jmp cmp jne mov inc mov test js cmp je cmp jg test jne cmp je movl jmp mov cmp je cmp je movl jmp movl jmp cmp jne cmp jne mov cmp je cmp jne mov add or xor divl mov mov movzbl movzwl mov and je movsbl sub jmp and je lea cmp movsbl ja sub add cmp jae orl cmp jb jne cmp jbe orl cmpl jne mov dec test jne cmpl je mov andl jmp mov imul add mov mov inc jmp mov test jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp testb push pop setne add mov mov test je mov testb je negl cmpb je mov andl mov jmp mov test je mov cmpb je mov andl xor pop pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call mov mov xor cmp je mov cmp jne call movl call cmp je mov andl xor xor jmp cmp je cmpl jl cmpl jg mov push mov push mov mov mov lea cmpl jle lea push movzbl push push call mov add jmp movzbl mov movzwl and cmp je mov mov inc jmp cmpb mov jne orl jmp cmpb jne mov inc mov mov push pop cmp jne cmpb je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmpb jne mov cmp je cmp jne mov add mov mov mov cltd push mov push push push mov call mov mov mov mov mov mov movzbl movzwl mov and je movsbl sub jmp and je lea cmp movsbl ja sub lea cmp jae mov orl cmp jb ja mov cmp jb mov cmp jne cmp jne xor cmp jb ja cmp jbe orl cmpl jne mov decl test jne xor cmp je mov mov mov mov jmp push pushl pushl push call xor add adc mov mov mov mov incl mov jmp mov mov test jne test jne and je cmp ja jb cmpl ja test jne cmp jb ja cmpl jbe call testb movl je orl orl jmp testb je andl mov jmp orl mov mov pop pop test je mov mov testb je mov mov neg adc neg mov mov cmpb je mov andl mov mov pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov push mov push push call pop cmp je mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov jmp xor push call mov sar mov and shl pop movb test je push call pop or jmp xor pop pop pop ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je push call pop mov jmp call movl orl movl call mov call ret mov push call pop ret mov push mov push mov mov test je test je pushl call andl xor pop mov mov mov pop pop ret mov push mov mov mov cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne call xor pop ret push call xor ret mov push cmp je add lea cmp jb add pop cmp jae cmp je xor ret mov push mov push call mov test je mov mov mov push cmp je add lea cmp jb add cmp jae cmp je xor test je mov test jne xor jmp cmp jne andl xor inc jmp cmp je mov push mov mov mov cmp jne push pop mov andl add cmp jl mov mov cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl pushl push call pop mov jmp andl push call pop mov pop or pop pop pop ret mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push push xor cmp jne call mov test jne mov mov cmp ja test je test je cmp jne xor test sete mov movzbl push call pop test je inc inc jmp cmp ja inc mov test jne pop mov pop ret cmpl jne call push mov push xor test jne or jmp cmp je inc push call pop lea mov test jne push inc push call mov pop pop mov test je mov push jmp push call cmpb pop lea je push push call pop pop mov test je push push push call add test jne add add cmpb jne pushl call andl andl movl xor pop pop pop pop ret pushl call andl or jmp xor push push push push push call int3 mov push mov mov mov pop ret mov push mov push mov push xor push mov mov mov movl cmp je mov addl mov mov cmpb jne xor cmp mov sete inc mov jmp incl test je mov mov inc mov mov movzbl push inc call pop test je incl cmpl je mov mov incl mov inc mov mov test je cmpl jne cmp je cmp jne test je movb andl cmpb je mov cmp je cmp jne inc jmp dec jmp cmpb je cmpl je mov addl mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne cmpl je lea cmpb jne mov jmp xor xor cmp sete mov shr test je dec test je movb inc incl test jne mov mov test je cmpl jne cmp je cmp je test je movsbl push test je call pop test je mov mov incl mov inc incl mov mov incl mov jmp call pop test je inc incl incl mov inc jmp test je movb inc mov incl mov jmp mov pop pop test je andl incl leave ret mov push mov sub push xor push push cmp jne call push mov push push mov call mov mov cmp je mov cmp jne mov mov lea push push push lea call mov add cmp jae mov cmp jae mov shl lea cmp jb push call mov pop cmp je mov lea push add push push lea call mov add dec mov mov xor jmp or pop pop pop leave ret mov push mov sub push push call mov xor cmp jne xor jmp cmp je add cmp jne add cmp jne push mov push push push sub push sar inc push push push push mov call mov cmp je push call pop mov cmp je push push pushl push pushl push push push call test jne pushl call pop mov push call mov jmp push call xor pop pop pop leave ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp jne mov jmp test jne mov or shl or mov not mov pop pop pop leave ret andl ret mov push mov mov test je push xor pop div cmp jae call movl xor pop ret imul push mov test jne inc xor cmp ja push push pushl call test jne cmpl je push call pop test jne mov test je movl xor jmp mov test je movl pop pop ret mov push mov cmpl jne pushl call pop pop ret push mov test jne pushl call pop xor jmp push jmp test jne inc push pushl push pushl call mov test jne cmp je push call pop test je cmp jbe push call pop call movl xor pop pop pop ret call mov call push call pop mov jmp call mov call push call pop mov mov jmp mov push mov mov push xor cmp jbe push xor pop div cmp jae call movl xor jmp imul push push mov cmp je pushl call pop mov push pushl call mov pop pop test je cmp jae sub push push add push call add mov pop pop pop pop ret mov push mov push push mov xor mov push xor push push mov cmp jne mov mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp jne xor jmp jle cmp ja lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov test je lea push push push call add push push pushl pushl push pushl call test je pushl push push pushl call mov push call mov pop lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov sub push movzwl push mov movzwl mov test jne or jmp andl push mov lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call push push push or lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or mov add mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push push pop lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call add push push pushl or lea push push call add or pop pop pop leave ret mov push mov push mov test je pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl push mov je push push call mov pop pop test jne xor inc jmp mov mov call test je push call push call pop pop jmp movl jmp mov mov cmp je add push call mov xor pop pop pop pop ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov mov mov inc cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp mov push pop mov push rep call xor pop mov cmp jne push call pop jmp mov mov cmp je push call pop mov cmp jne xor inc push call pushl call pop pop mov jmp mov movzwl push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call add or je push call pop or jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov mov mov inc cmpb jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov xor inc mov mov test je mov mov mov test je push call mov test je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov mov mov inc cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp push call pop mov cmp jne push call pop jmp mov cmp je push call pop mov cmp jne push call pushl call pop jmp mov movzwl lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call add or je push call push call pushl call pushl call add jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov mov mov inc cmpb jne jmp push pop mov mov rep mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor inc xor mov cmp je mov mov mov cmp je push call mov cmp je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret call mov cmp je mov test jne call mov ret mov ret call mov mov cmp je mov test jne call mov ret int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp push lea sub and add sbb or pop jmp mov push mov push mov cmp jne xor leave ret mov cmp jae movzwl mov movzwl jmp lea push push lea push push call test jne and movzwl movzwl and leave ret mov push mov pop jmp mov push mov pushl pushl call pop pop pop ret mov push mov sub mov xor mov push xor push mov push mov mov mov mov mov mov mov cmp je lea cmp jne push movzwl push push lea push push call add test jne push call push mov push mov call push push mov call push push mov call push push mov call add mov cmp je cmp je cmp je cmp je cmp je mov mov xor mov mov inc cmp jl lea push pushl call test je cmpl ja movzwl mov cmp jle cmp je lea mov cmp je movzbl movzbl jmp mov movb movzbl inc cmp jle add cmp jne mov push push pushl add push push pushl mov push push call add test je mov mov push pushl mov push add push push inc push push pushl push call add test je mov push pushl add push push mov push inc push push pushl push call add test je mov mov lea xor cmpl mov mov mov lea mov mov mov mov lea mov mov jle cmp je lea mov mov cmp je movzbl movzbl mov cmp jg lea jmp mov incl mov mov add mov mov movzbl cmp jle mov add mov cmp jne push lea push push call push lea push push call mov push lea push push call mov add cmp je push call test jne mov sub push call mov mov sub push call mov sub push call pushl call add mov movl mov mov mov mov mov mov mov mov mov mov mov pushl call pop mov jmp pushl call pushl call pushl call pushl call xor add inc jmp mov cmp je push call mov mov movl movl movl movl xor mov pop pop xor pop call leave ret call mov mov cmp je mov test jne call mov ret mov push mov mov test jne pop jmp mov mov pop ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call add ret xor ret mov push mov mov push push test je mov test jne call push pop mov call mov jmp mov test jne movb jmp mov cmpb je inc dec jne test je sub mov mov inc test je dec jne test jne movb call push pop mov mov jmp xor pop pop pop ret int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret mov push mov mov push xor push push cmp jne cmp jne cmp jne xor pop pop pop pop ret cmp je mov cmp ja call push pop mov call mov jmp cmp jne mov jmp mov cmp jne mov jmp cmpl mov jne mov sub mov mov inc cmp je dec jne jmp mov sub mov mov inc cmp je dec je decl jne cmp jne mov cmp jne cmpl jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov xor push xor inc cmp jl push push test je mov add cltd sub mov mov sar lea pushl mov pushl call pop pop test jne mov add mov jmp jns dec mov jmp lea cmp jle pop pop xor test sete pop mov pop ret orl call mov mov ret mov push mov push test je cmpb je push push call pop pop test je push push call pop pop test jne push lea push push pushl call test je mov leave ret push call pop mov jmp push lea push push pushl call test jne xor leave ret cmpl jne call leave ret mov push mov xor mov cmp je add cmp jb xor inc pop ret xor pop ret mov push xor jmp lea inc cmp ja add jmp lea cmp ja add movsbl add lea mov test jne mov pop ret xor mov inc cmp jl cmp jle sub cmp ja inc jmp ret mov push mov sub mov xor mov push push mov call mov mov call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop xor pop call leave ret mov push mov push push mov push lea push mov and push or push call test jne xor jmp cmp je cmpl je mov mov push mov call push mov call pop cmp pop je xor inc pop leave ret mov push mov sub mov xor mov push push push mov call mov lea call mov mov push lea push mov neg sbb and add push push call test jne andl xor inc jmp lea push pushl call pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne mov test je push lea push pushl call add test jne pushl orl mov call pop cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je push lea push mov neg sbb and add push push call test je lea push pushl call pop xor pop test jne orl mov cmp je or mov jmp cmp je pushl call pop cmp jne push push jmp cmp jne cmp je lea push pushl call pop pop test jne push push mov call pop pop test je orl cmp jne mov mov shr not and mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call mov lea call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push mov call pop pop test je orl mov mov mov shr not and mov pop xor pop call leave ret pushl call sub neg pop sbb push inc push mov call testb jne andl ret pushl call pushl sub neg sbb inc mov call sub neg sbb andl inc cmpl pop pop mov je push pop jmp mov call push push mov call mov test je test je test jne andl ret pushl call sub neg sbb inc pop mov je push pop jmp mov call push push mov call testb jne andl ret mov push mov push push push call lea mov test jne orl jmp mov add lea mov je cmpb je push push push call add mov andl test je cmpb je mov test je cmpb je mov call jmp mov call cmpl jne push push push call add test je mov test je cmpb je mov call jmp mov call jmp mov test je cmpb je push call sub neg pop sbb push inc push mov call testb jne andl jmp movl call mov mov cmpl je mov mov sub neg sbb and call mov mov test je cmp je cmp je movzwl push call test je push pushl call test je mov test je mov mov mov mov mov mov test je mov mov cmp jne push push push call add test je xor push push push push push call push push push pushl call test je push lea push push pushl call test je push push sub push pushl call add xor inc jmp xor pop pop pop pop ret test je xor test setg lea ret movzbl movzbl sub je xor test setg lea ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea ret xor ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea ret xor ret mov push push mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne xor pop pop ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp nop or add dec inc add push inc add inc add push inc add push inc add dec inc add dec inc add inc add dec inc add push inc add inc inc add inc add inc add add dec inc add dec inc add push inc add inc inc add dec inc add inc inc add dec inc add dec inc add call in push push mov mov sub je dec je dec je dec je dec je mov mov push push pop jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne add add sub cmp jae add add cmp ja jmp mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test je mov jmp movzbl movzbl sub je xor test setg lea jmp xor test jne xor pop jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea test je mov jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl jmp mov mov movzbl movzbl jmp xor pop pop pop ret mov pop pop inc add popa inc add fs add push inc add fs add add add pusha inc add arpl lds add pop inc add arpl cmp pop inc add pop inc add bound mov inc add pop inc add add inc add inc add pop inc add pop inc add gs add pop inc add inc add popa inc add gs add push andl push mov test jne xor jmp push cmp jb lea test je mov mov mov add add test je cmp jne mov test je cmp jne mov test je cmp jne mov test je cmp jne addl cmp jb jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp mov mov mov jmp mov test je cmp jne inc inc inc cmp jb xor pop pop leave ret movzbl movzbl sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov mov cmp jne call movl xor pop ret test js cmp jb call movl call jmp mov and sar mov shl movsbl and pop ret mov push mov sub push push mov xor push mov cmp jne cmp jbe mov cmp je mov xor jmp mov cmp je orl cmp jbe call push pop mov call mov jmp pushl lea call mov cmp jne mov mov cmp jbe cmp je cmp jbe push push push call add call movl call mov cmp je mov andl pop pop pop leave ret cmp je cmp ja call push pop mov call cmp je mov andl jmp mov mov cmp je movl cmp je mov andl jmp lea push push push push push lea push push mov pushl call cmp je cmp jne mov cmp je mov jmp call cmp jne cmp je cmp jbe push push push call add jmp mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub pushl orl lea call lea push pushl mov pushl lea pushl push call add test jne mov jmp or cmpb je mov andl leave ret mov push mov push orl push pushl call push pushl lea push call add test jne mov leave ret or leave ret int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov sub mov xor mov push mov push mov xor push pushl mov lea mov mov mov mov mov mov mov mov mov call test jne call movl call cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov mov test je inc mov cmp jl lea cmp ja movsbl movzbl and jmp xor mov imul movzbl push shr pop mov cmp je push pop cmp ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne or jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov mov test jns orl negl jmp mov imul movsbl lea mov jmp andl jmp cmp jne add mov mov mov test jns orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne add orl mov jmp cmp jne cmpb jne add andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je andl andl lea push movzbl push call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmpl lea mov mov mov jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je test jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov test je mov test je testl movswl mov je cltd sub sar movl jmp andl jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb mov je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je add mov mov jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov test je mov mov mov jmp movl mov mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call call mov add and je cmpl jne lea push push pushl call call pop pop cmpb jne test jne lea push push pushl call call pop pop cmpb jne orl inc mov push jmp mov mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add mov mov mov cmp jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmpw je add test jne sub sar jmp test jne mov mov mov jmp dec cmpb je inc test jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub mov test jne mov test jle mov lea mov dec call cmpl je test jg pushl mov lea lea call testb pop je testb jne jmp lea mov mov dec call cmpl je test jg cmpl mov je test jle mov movzwl push push lea push lea push dec add call add test jne cmp je pushl lea lea call pop test jne jmp orl jmp mov push lea call pop cmpl jl testb je mov jmp lea mov mov dec call cmpl je test jg cmpl je pushl call andl pop mov mov mov test je mov xor mov jmp cmpl je cmpl jne cmpb je mov andl mov mov pop pop xor pop call leave ret nop lods jb add jo add jno add jno add jno add jae add push mov push mov mov cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je xor jmp xor inc test jne test jne mov cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp jne mov mov xor test jne xor test jne mov xor cmp sete jmp cmp jne mov mov mov and neg sbb and neg neg sbb neg cmp jne xor inc jmp xor jmp xor cmp sete mov pop pop pop ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov mov addl mov mov mov pop ret mov push mov sub mov xor mov mov push push mov push pushl mov xor lea mov mov mov mov mov mov mov call orl mov cmp jne call movl call cmp je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne cmp je mov mov mov cmpl jne cmp je xor mov orl orl orl mov mov mov mov mov mov mov test je mov jmp mov inc cmpl mov jl lea cmp ja movsbl movzbl and jmp xor mov imul movzbl xor shr inc xor mov cmp jne cmpb je cmpl jne push lea push push call add test jle mov cmpb jne cmpl jne push lea push push call add mov jmp andl xor cmp jne push lea push push call mov add dec cmpl lea mov mov jne test js cmpb jne cmp jge cmp jle mov xor mov mov mov jmp cmp je cmp ja jmp cmp jne cmp je cmp jne cmpl jne jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp or jmp orl jmp orl jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec cmpl lea mov jne test js cmpb jne cmpl jge cmp jle mov add lea cmpl je pushl push push jmp add mov mov xor mov cmp jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec cmpl lea mov je add mov mov xor mov cmp jge orl jmp mov movb mov mov jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne add orl mov jmp cmp jne cmpb jne add andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov andl lea push movzbl push call pop pop test je mov lea mov call mov mov incl mov test je mov mov lea mov call jmp orl jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add mov mov orl cmp jne cmp jne cmp ja mov add lea cmpl jne movl mov jmp testl jne orl jmp testl jne orl mov cmp jne mov xor cmp jne addl mov mov jmp sub je dec dec je sub je dec dec jne testl je cmp jne addl mov movzwl jmp cmp ja cmp jne mov add lea cmpl jne movl jmp pushl pushl push jmp add mov movzwl push push lea push lea push call add test je mov jmp cmp jne addl mov movzwl jmp cmp ja cmp jne mov add lea cmpl jne mov jmp pushl jmp add mov movzwl mov mov lea mov jmp cmp jne addl mov mov jmp cmp ja cmp je add mov mov cmp je mov test je testl movswl mov je cltd sub sar mov jmp andl jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne mov movl test jns or mov jmp cmp jne addl mov mov jmp cmp ja cmp jne mov add lea cmpl je pushl pushl push jmp add mov mov call test je testb je mov mov jmp mov mov mov jmp orl movl mov xor test je cmp jne mov mov mov add mov jmp pushl pushl push push call add test jne call movl call cmpb jmp cmpl lea mov mov mov jge movl jmp jne cmpb jne mov cmpl jne mov mov add mov mov mov jmp cmp jle mov mov cmp jle mov add push call pop mov test je mov mov mov jmp cmpl ja mov add mov mov mov mov mov mov lea push pushl movsbl pushl push pushl lea push push pushl call call mov add and je cmpl jne lea push push pushl call call pop pop cmpb jne test jne lea push push pushl call call pop pop cmpb jne orl inc mov push jmp movl movl jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp mov cmp ja add cmp jne lea cmp jne movl jmp push pushl push jmp test je cmp je mov cmp ja add cmp jne lea cmp jne movl jmp push pushl push jmp mov mov mov jmp test je test je cmp jne addl mov movswl jmp mov cmp ja add cmp je mov movswl jmp cmp jne addl mov movzwl jmp mov cmp ja add cmp je mov movzwl jmp test je cmp jne addl mov mov jmp mov cmp ja add cmp jne lea cmp je push pushl push push call add test je jmp mov mov cltd jmp cmp jne addl mov mov jmp mov cmp ja add cmp je mov mov xor test je cmp jg jl cmp jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp mov mov mov mov jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add mov mov mov cmp jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp cmp ja cmp jne mov add lea cmp jne movl mov mov mov jmp add mov mov testl mov je cmp jne mov mov mov mov jmp dec cmp je add cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne cmpl je cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb mov jne mov test jle mov lea mov dec call cmpl je test jg pushl mov lea lea call testb pop je testb jne jmp lea mov mov dec call cmpl je test jg cmpl mov je test jle mov movzwl push push lea push lea push dec add call add test jne cmp je pushl lea lea call pop test jne jmp orl jmp mov push lea call pop cmpl jl testb je mov jmp lea mov mov dec call cmpl je test jg cmpl je pushl call andl pop mov mov mov test jne xor cmp je cmpl jne cmpl jne cmp jne cmp jl mov lea mov dec je dec je dec je dec je dec je dec je dec dec jne mov add jmp mov add inc add mov cmp jle incl cmpl jge xor jmp cmpb je mov andl mov mov pop pop xor pop call leave ret xchg jg add jg add jg add inc add addl daa addl call in sub mov xor mov mov push mov mov push push mov call andl cmpl mov jne push call mov test je mov push push call test je mov push call push push mov call push call push push mov call push call push push mov call push call mov test je push push call push call mov mov mov mov cmp je cmp je push call pushl mov call mov test je test je call test je lea push push lea push push push call test je testb jne orl jmp mov cmp je push call test je call mov test je mov cmp je push call test je pushl call mov pushl call test je pushl pushl pushl pushl call jmp xor mov pop pop xor pop call leave ret mov push mov push mov push test je mov test jne call push pop mov call mov pop pop pop ret mov test jne xor mov jmp mov cmpw je add dec jne test je sub movzwl mov add test je dec jne xor test jne mov call push pop mov mov jmp mov push mov mov push mov push push test jne test jne cmp jne xor pop pop pop pop ret test je mov test jne call push pop mov call mov jmp test jne xor mov jmp mov test jne xor mov jmp mov cmp jne mov sub movzwl mov add test je dec jne jmp mov sub movzwl mov add test je dec je dec jne test jne xor mov test jne xor cmp jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov mov mov add test jne sub sar dec pop ret mov push mov push mov push test je mov test jne call push pop mov call mov pop pop pop ret mov test jne mov jmp mov sub movzwl mov add test je dec jne xor test jne mov call push pop mov mov jmp mov push mov mov test js cmp jle cmp jne mov pop ret mov mov pop ret call movl call or pop ret mov push mov mov mov pop ret mov push mov sub mov xor mov mov mov mov push push push mov xor push push pushl mov pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl call test je push push cmp jne push push jmp pushl pushl push push push pushl call mov push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl push call add cmpb je mov andl leave ret mov andl ret mov push mov mov mov mov mov xor mov mov mov pop ret mov push mov cmpl je jmp mov mov pushl mov call pop mov mov test jne pop ret mov mov test jne xor ret cmp jl cmp jg movsbl sub inc mov ret xor jmp test je cmp jl cmp jg movsbl add inc lea mov mov cmp jne mov inc mov cmp je or ret mov push push mov push xor cmpb jne inc mov mov mov cmp jl cmp jle cmp jne xor inc mov movsbl cmp jg je test je cmp jne cmpb jne inc inc mov movsbl cmp jg je sub je sub je dec dec jmp cmp jl cmp jle cmp jle cmp jne inc mov jmp movsbl sub mov inc or mov test je or jmp and cmp jge mov mov test je and or jmp and mov and je cmp je cmp je mov jmp test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or and sub je dec dec je dec dec je dec dec jne and or jmp and or jmp test je and or jmp and jmp cmp jle cmp jle cmp jne and or jmp mov jmp inc mov mov cmp jl cmp jg movsbl lea mov call or jmp mov jmp mov dec jmp or jmp sub je dec je dec je sub jne inc mov mov mov cmp jl cmp jg movsbl mov or sub mov test je and or jmp and test je and or jmp and or test je or jmp and and sub je dec dec je dec dec jne test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or jmp xor test sete lea jmp and or jmp and or jmp or inc mov jmp mov cmp jl cmp jg movsbl inc add and mov cmp ja jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and jmp and jmp and or jmp and or jmp and or jmp and or jmp and or jmp and or jmp cmp jne inc mov mov jmp xor test setne lea mov pop pop pop ret xchg cwtl inc add cwtl inc add inc add inc add inc add inc add inc add inc add xor inc add rolb xor inc add call add mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov and xor cmp setne mov ret mov shr not and ret mov shr not and ret mov shr not and ret mov and ret mov and ret mov and ret mov shr not and ret mov and ret mov shr not and ret mov push mov mov not test mov mov jne add pop ret mov push mov push push mov add and cmpl mov je push call pop jmp test jne push pop mov push cmp jae mov cmp ja push push mov call test je andl jmp xor test je mov test je mov jmp mov sub mov mov jmp xor jmp sub mov mov mov lea pop pop pop pop ret mov andl movb andl ret mov push mov mov mov mov mov mov mov pop ret xor cmpb setle ret xor cmp sete ret movsbl ret mov orl ret mov shr and ret xor cmp je testl je inc ret cmpl je orl ret xor cmp je testl je inc ret orl ret mov shr and ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov test jne xor ret mov jmp mov test jne xor ret mov jmp mov push mov mov test jne mov pop ret mov pop jmp mov push mov mov cmpb je mov mov cmp jle mov pop ret mov push mov mov mov mov mov mov mov pop ret xor cmpl sete ret mov orl ret mov movl ret mov push mov mov mov movl mov pop ret xor inc ret mov ret mov push mov mov cmp jae mov mov inc pop ret mov push mov mov mov movl test je mov cmp je cmp jne xor mov pop ret mov test je mov test je mov mov jmp xor ret mov test je mov test je mov mov jmp xor ret mov push mov mov test je mov test je mov mov pop jmp mov pop ret mov push mov mov mov mov dec neg sbb and add movl mov pop ret mov ret cmpl setne dec and ret mov push mov xor inc test jne or mov xor mov mov mov mov mov movl mov movl mov mov movl mov mov cmp ja imul add pop ret mov pop ret mov push mov mov mov orl mov mov movl mov pop ret mov push mov cmpl jge mov mov push push mov call mov mov mov call add pop mov pop mov pop ret mov push mov mov mov call test jne mov mov pop jmp pop ret mov push mov push pushl mov mov pushl mov call cmp jae pushl mov mov push call pop pop ret xor cmp je inc inc cmpb jne ret mov push mov test je sub mov mov inc dec jne pop ret mov push mov cmpl jne xor pop ret mov test je cmp jne inc inc decl jne movzbl movzbl sub pop ret mov push mov mov mov orl lea orl mov mov mov test je push mov mov mov pop jmp andl andl mov mov mov mov mov mov movb pop ret mov push mov sub xor mov and and push lea push push lea push pushl mov mov call mov add leave ret mov push mov sub andl andl mov and and push lea push push lea push pushl call mov add leave ret mov push mov pushl mov pushl call pop ret mov push mov mov push mov push mov sub cmp jle mov test je mov mov sub mov push mov mov inc dec jne pop lea pop pop pop ret mov push mov cmpl push mov je push push mov call test je pushl mov call jmp xor test mov setne dec and mov jmp andl movb andl mov pop pop ret mov push mov push mov mov andl cmp je cmp je xor jmp mov andl mov cmp jne push call pop mov test jne movb mov pop pop ret mov push mov push mov mov push mov push test je test jne mov call lea push push mov call mov test je jmp mov mov test jne mov jmp mov lea push push call movb jmp test je movb pop mov pop pop pop ret mov push mov push push mov mov test je push push mov call test je mov orl movl mov mov jmp xor mov test jne movb pop pop pop ret mov push mov push mov andl movb andl cmpl je push push mov call test je pushl mov call jmp xor mov test jne movb mov pop pop ret mov push mov mov push mov andl mov cmp jne push call pop mov test jne movb jmp andl mov pop pop ret mov push mov push mov cmpl je push mov cmpl je push push mov call test je mov mov mov mov jmp xor test je incl mov mov pop mov pop pop ret mov push mov mov cmp ja mov cmp je cmp jg mov mov mov mov mov mov jmp mov andl andl movb jmp mov push call mov pop ret mov push mov push push mov mov movl test je cmpl je push push mov call mov mov test je test je mov sub mov mov inc dec jne jmp andl andl pop mov pop pop ret mov ret mov test je mov mov ret xor ret mov push mov pushl pushl pushl pushl call add pop ret mov push mov cmpl jne push push pushl pushl call add jmp mov pop ret mov push mov mov cmpb pushl jne mov incl call jmp pushl call pop pop mov pop ret mov push mov pushl call mov pop pop ret mov push mov push mov cmpb jg cmpl mov je cmp je cmp je test je push call pop push mov call jmp push call mov pop pop ret mov push mov push push mov xor cmp je andl movb mov jmp push mov cmp je mov cmp je sub je dec push mov je push call cmp je pushl mov push call jmp push call cmp je mov movl mov jmp xor mov cmp jne movb jmp movb pop pop pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov cmp je xor cmp je inc cmp jne cmp jbe push push mov call mov pop pop ret mov push mov push mov xor push mov mov andl mov mov cmp je cmp je mov mov mov cmp je cmp je cmp je cmp je cmp je cmp je cmp jl cmp jle cmp jl cmp jle cmp jl cmp jle cmp jb cmp jbe testl je inc inc mov mov cmpb jne push pushl mov call mov mov test je inc mov cmp je andl movb jmp cmpb jne movb jmp movb mov pop pop pop ret mov push mov sub mov xor mov push xor push mov push mov andl lea mov mov push push pushl dec pushl call add mov or mov mov mov jne lea sub push push mov call mov pop mov pop xor pop call leave ret mov push mov sub mov xor mov mov push mov xor mov andl push lea mov mov mov cmp jg jl cmp jae mov neg adc movb neg mov push jmp xor push push push pushl dec call add mov mov mov mov or mov jne pop cmp je dec movb lea sub push push mov call mov pop mov xor pop call leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg mov mov test jne movsbl push mov call jmp cmpl jne mov mov mov jmp push mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp mov test je cmp je movsbl push call jmp push push mov call test je push mov call jmp xor push mov call pop mov pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push push mov mov test je movsbl sub incl cmp ja mov andl and push pop or mov mov shr not test je and sub je sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push jmp push jmp push call add push lea call mov mov mov mov mov leave ret mov andl andl movb leave ret mov push call mov leave ret mov push mov mov mov test je cmp je mov andl andl movb pop ret mov incl push call jmp mov push call mov pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp push push mov call test je movl mov jmp xor push mov call pop mov pop pop ret mov push mov push mov cmpb jg push push mov xor cmp je cmp je cmp jne push call jmp push push mov call cmp je xor cmp je inc cmp jne push push mov call jmp xor push mov call pop pop mov pop pop ret mov push mov sub push xor push mov mov andl movl mov cmp jne push mov mov cmp je cmp je cmp je mov jmp push mov call mov mov cmp je movsbl sub cmp ja mov push lea inc push mov call push mov call jmp andl lea push lea push mov call mov sub pop pop cmp jle mov cmpl je lea push call lea push mov call cmp jne andl movb mov cmp je jmp push mov call pop mov pop pop leave ret mov push mov push push mov mov push mov mov mov push mov mov call lea push call pop push mov call push mov call mov cmpb jne incl mov pop leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov sub push xor cmpb jne inc mov mov mov test jne mov push call mov jmp cmp jl cmp jg movsbl sub cltd inc push mov push test je lea call push lea push push call add jmp lea call mov mov mov mov mov mov jmp push push xor xor jmp test je cmp jl cmp jg movsbl shld sub cltd shl add adc inc mov mov mov cmp jne mov inc mov cmp je mov andl andl movb jmp mov push call mov jmp cmpb push push je test je lea call jmp lea call jmp test je lea call push lea push push call add jmp lea call mov mov mov mov mov mov pop pop pop leave ret mov push mov sub mov mov andl andl test je movsbl add cmp ja jmp push jmp push jmp push jmp push lea call mov movsbl incl sub je dec dec je dec dec je dec dec jne lea push lea push push lea call mov call mov mov jmp mov mov mov mov mov leave ret mov andl andl movb leave ret mov push call mov leave ret nop inc lods inc add inc add inc add inc add inc add add inc add inc add mov movsbl sub sub je dec dec je lea push call pop mov test jne mov mov test je cmp je cmp je mov andl andl movb leave ret mov incl shr not test mov jne mov push lea push lea call mov mov mov mov mov mov leave ret incl mov mov mov mov leave ret mov incl shr not test mov jne mov push jmp incl push mov call mov leave ret mov push mov mov mov sub test je cmp jne incl mov mov xor and mov mov leave ret lea push call pop push lea push push lea call mov call push pushl lea jmp push pushl lea push push push lea call mov call mov call mov leave ret mov push mov sub andl push xor xor incl mov mov movsbl push mov sub push mov je dec je dec je cmp je mov mov cmp je cmp je mov andl movb jmp addl add movsbl add lea cmp jbe andl andl push lea push lea movb mov call push push lea call push lea push lea call mov mov jmp mov mov push lea mov call mov cmpb mov mov mov mov jne incl jmp mov push lea mov call mov mov mov mov mov cmp je incl jmp push lea call mov mov mov or mov mov jmp mov push call mov jmp mov movl jmp cmp jne mov andl and movb push lea push lea movb mov call jmp cmp jne mov mov cmpb mov je mov mov mov incl mov and mov pop pop pop leave ret mov push mov mov sub push xor cmp je call mov cmp jge mov cmp jne lea push push lea lea jmp andl push push mov mov mov test je push lea call jmp mov decl test je mov cmp je lea push push call pop pop push lea push push lea call mov call mov mov mov push lea mov call lea push lea call cmpb jle cmp je test je lea push lea push mov call mov mov mov jmp push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov lea push lea push call mov mov pop pop mov or pop mov mov pop jmp mov cmp je push lea push push lea call mov call mov mov mov push lea mov call mov mov mov push lea mov call mov mov mov push lea mov call lea jmp lea push push lea lea push push push call mov call mov call push pushl call mov pop pop pop leave ret mov push mov sub lea push push call pop pop push lea push push lea call mov call push pushl lea call mov leave ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov mov mov sub push push mov xor mov mov inc mov cmp jg mov cmpb je lea push call mov pop mov mov push lea mov call push lea push lea call mov mov mov mov cmp jg mov cmpb je push jmp mov mov test je cmp je lea push call pop push lea push push lea call mov call mov mov mov push lea mov call lea push mov call mov cmpb jne inc mov cmp jg cmpb je push mov call cmp jle cmp jg mov cmpb jne push mov call push mov call mov cmpb jne incl jmp cmp jg push lea push push lea call mov call mov mov mov mov mov pop pop leave ret mov push mov sub pushl lea call mov mov incl cmp jne mov mov incl cmp jne incl lea push push call lea push push call mov mov add test je cmp je inc mov mov test jne cmpb jne mov dec push mov call mov leave ret mov inc mov mov mov mov mov leave ret mov andl andl movb leave ret mov push mov push push mov mov test jne mov push call jmp push cmp jne incl lea push call push push pushl call add jmp pushl call pop pop mov leave ret mov push mov sub mov xor mov mov push mov incl push mov push movsbl cmp jg je sub je sub je dec je dec jne lea push call lea push call cmpb pop pop jg cmpb jg push lea push lea call test jne andl andl movb jmp mov mov cmp jne mov mov movb jmp movb lea push push push lea push lea push lea call mov call mov call jmp mov cmpb jne incl push mov call jmp lea push call pop push push push lea call jmp push call jmp decl push mov call jmp cmp je jle cmp jle cmp je cmp jne push lea push push call lea push call mov mov mov add mov jmp lea push call testl pop je push lea push lea call lea push call push call pop pop test je push jmp lea push lea lea push cmp jne push call mov call push push lea call jmp push jmp push lea call cmp jl cmp jg lea push call pop push lea call push lea call sub je dec je dec je dec je dec jne lea push call pop push lea call push lea call lea push call pop push lea call push lea call lea push call pop push lea call push push lea call jmp push call pop mov pop mov pop xor pop call leave ret mov push mov mov xor sub cmp je cmp je cmpb jne inc mov mov cmp jne mov push call jmp push push pushl call jmp cmpb jne pushl inc pushl mov call pop pop jmp push mov lea push push call mov pop pop pop test je lea push lea push push lea call mov call mov mov jmp test je lea push lea push push jmp mov mov mov mov mov leave ret pushl push pushl call add mov leave ret mov push mov pushl pushl call mov pop pop pop ret mov push mov sub mov xor mov push xor push mov mov andl mov movb movl cmp jne push mov mov mov cmp je cmp je cmp je mov jmp push mov call mov mov movsbl sub cmp ja inc mov push mov lea push call jmp and mov mov cmp jne inc mov push lea call jmp cmp jne inc cmp je mov lea push call jmp cmp jne lea push call testl pop je push lea push lea call lea push call push call pop pop cmp je push jmp lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov jmp lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov jmp and lea push lea push mov call pop pop mov mov mov mov mov sub cmp jle mov cmpl je lea push call lea push mov call cmp je pop mov mov pop mov xor pop call leave ret mov push mov sub mov movsbl push xor mov and and push xor inc mov mov mov cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl lea call cmp je lea push lea push push lea call mov call mov mov mov mov mov mov mov mov mov pop pop leave ret and mov cmp je lea push call pop push lea push push lea call mov call lea push lea call mov cmp je mov call cmp jne push lea call push lea call mov cmp je movb mov cmp jne mov mov mov mov jmp inc mov push mov lea push push call mov mov add mov mov mov cmp je cmpb jne lea push lea push push lea call mov call mov mov mov mov cmp je lea push lea call jmp dec mov mov push call mov jmp cmp je jle cmp jle cmp jne movsbl inc mov cmp jg cmp jge cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl mov call jmp movsbl pushl jmp movsbl pushl lea call mov or mov mov mov jmp cmp je cmp jle cmp jle cmp jne push push lea push call mov add or jmp movsbl inc mov cmp je cmp jne push push jmp cmp jg cmp jge sub je dec je dec jne movsbl pushl lea call mov mov cmp jne push pushl lea call jmp movsbl sub js cmp jae pushl lea call mov movsbl incl cmp je cmp je add cmp jbe decl jmp mov mov mov mov lea push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push push call pop pop mov call push lea call push pushl lea call jmp lea push push call mov pop pop mov mov push lea mov call mov mov mov mov lea push lea call lea jmp movsbl pushl lea call push lea push push call mov mov add mov mov cmp je test je mov andl movb mov jmp lea lea push pushl call jmp cmp jl cmp jle cmp jle cmp jle cmp jne movsbl inc mov cmp jl cmp jle cmp jle cmp jg movsbl pushl jmp movsbl pushl lea call mov cmpb jne lea push call pop push lea call mov cmpb jne incl jmp lea push call pop push lea call push lea call mov mov mov mov jmp movsbl pushl jmp movsbl pushl jmp xor inc movsbl pushl lea call cmp je cmp je orl jmp mov push mov mov sub cmpb jne cmpb jne orl orl orl push mov push mov lea mov lea push mov mov add lea mov mov cmpb movb jne inc mov lea push lea push push call jmp push lea push push call mov mov add mov mov test jne movb cmpb jne lea push call pop push lea push push lea call mov call lea push lea call mov test je mov call cmp jne push lea call push lea call cmpb je mov cmpb je incl mov mov mov pop mov mov mov pop mov mov pop leave ret mov andl andl movb leave ret mov push mov sub mov xor mov push mov mov movsbl push mov sub mov cmp ja mov push inc push mov call mov jmp andl push mov and cmp jne lea push push call pop pop mov mov mov mov mov mov inc mov cmp je dec xor mov cmp setne inc push lea call jmp mov mov mov movl mov test je cmp jne inc inc decl jne movzbl movzbl sub jne add mov jmp mov push mov mov pop mov test je cmp jne inc inc dec jne movzbl movzbl sub jne addl mov lea push call testl pop je push lea push lea call lea push call push call pop pop lea test je push call jmp lea push call lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call jmp cmpb je mov cmpb jne mov xor and incl mov mov jmp push push lea call mov mov mov mov cmpb pop je mov cmpl je lea push call mov mov mov mov mov mov pop xor pop call leave ret mov push mov sub push push mov push xor push lea push mov mov and push mov call mov mov mov add mov cmp jne mov mov cmp je cmp je push lea push push lea push lea push call pop mov call mov call mov mov mov mov mov mov cmp jne incl jmp cmp je and movb mov jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call mov mov mov mov pop mov pop pop leave ret mov push mov pushl call mov pop pop ret mov push mov mov sub push push mov shr xor not inc and je test je xor mov movsbl andl mov and incl sub je sub je dec je dec je dec je dec je dec jne push jmp push jmp lea push mov call pop push lea push push lea call mov call mov mov mov mov jmp push jmp push jmp push lea call andl and test je mov mov mov mov lea push call pop lea push lea call mov mov mov mov mov jmp mov decl push call mov pop pop leave ret mov push mov mov cmpb jne inc cmpb jne push pushl call pop pop jmp push push pushl mov call jmp push push pushl call add mov pop ret mov push mov sub push call add push lea call mov cmpb je movsbl inc mov mov sub je dec dec je sub jne mov andl andl movb leave ret lea push call pop push lea call jmp push lea call jmp push lea call push lea call mov mov mov mov mov leave ret mov push mov sub push push push xor mov and mov call mov mov cmp je testl movl jne mov cmp jne mov andl movb mov jmp cmp jne push push pushl call add mov jmp cmp jne mov mov mov mov jmp mov andl mov mov je xor mov and cmpl sete mov test mov je and jmp and test je mov and cmp je cmpl mov je and jmp and test je mov and cmp je cmp je test je mov mov shr not test je shr not test je lea push call pop push lea push push lea call mov call mov mov mov mov jmp lea push call pop push lea call mov mov mov test je and jmp and test je cmp jne lea push push call pop pop mov lea push lea push push lea push call mov call push lea call lea push call mov pop test jne lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call push lea call lea push call mov pop mov shr not test je mov shr not test je test jne lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov jmp and and and and and xor mov mov mov mov mov mov cmp je and jmp and cmp je cmp je mov and cmp jne lea push push call mov mov mov mov lea push push call mov mov mov mov lea push push call add jmp cmp je mov and cmp jne lea push push call pop pop mov mov mov mov lea push push call mov mov mov pop pop mov xor cmp je cmpl je mov and cmp je mov and cmp lea push je call pop mov mov mov mov jmp call pop push lea call mov mov shr not test je shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call mov cmpl je cmpl je testl jne push lea push push lea call mov call lea push lea call jmp mov mov mov mov and xor mov cmp je lea push push call pop pop push lea push push lea call mov call lea push lea call testl je mov jmp xor push push mov call cmp je mov movb andl mov lea push push call pop pop mov mov mov mov mov mov test je and jmp and test je test je mov and cmp jne lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov push lea mov call mov mov mov mov lea push lea call jmp test je mov and cmp jne lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call jmp push lea call mov mov mov push lea mov call lea push lea call lea push call pop push lea push push lea call mov call mov mov mov push lea mov call lea push lea call test je mov and cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call mov shr not test je test je mov mov mov mov mov mov mov mov jmp pushl lea call mov mov test jne mov and cmp jne lea push pushl call pop pop jmp test jne mov and cmp je test jne mov and cmp jne push lea push call mov pop pop mov mov push lea mov call mov mov mov mov lea push lea call push pushl lea call jmp test jne mov and cmp jne lea push pushl call jmp test je mov and sub jmp mov and neg sbb inc test mov mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push lea call jmp cmpl jne mov and cmp je cmpl je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov mov and xor cmp sete neg sbb test jne mov xor cmp sete neg sbb test je lea push lea push push lea call mov call mov mov jmp lea push lea push call pop pop mov mov mov jmp mov mov xor mov mov cmp je and sub jmp and neg sbb inc cmp je mov shr not test je mov cmp je and sub jmp and neg sbb inc cmp je cmp je mov and sub neg sbb inc jmp xor inc cmp je lea push lea push push lea call mov call mov mov mov mov mov test je mov and cmp je test je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp jne lea push lea push push lea call mov call mov mov mov mov mov shr not test je cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl je push test pop sete jmp mov and neg sbb inc test je lea push lea push push lea call mov call mov mov mov mov cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je testl jne lea push lea push push lea call mov call mov mov mov mov test je lea push lea push push lea call mov call mov mov mov mov mov mov mov pop pop pop leave ret mov push mov sub push push mov push test je andl lea push push call or pop pop mov mov mov mov mov jmp mov mov cmp jne inc mov cmp jne cmp jne lea push call mov pop jmp inc mov cmpb jne jmp lea push call mov mov xor inc pop test je test je mov jmp andl mov shr and cmp jle mov mov mov jmp mov mov test je cmp je lea push call mov pop test je cmpb je lea push lea movb mov mov call mov cmpb mov mov mov mov je lea push call mov mov mov mov mov mov mov lea mov movl call mov mov mov mov lea push lea call mov mov jmp mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov cmpl je test je or mov mov test je or mov test je mov test jne mov mov test je cmp je mov andl andl movb jmp incl test je cmpl jne test jne andl andl lea push lea push call pop pop jmp lea push pushl call pop pop jmp test jne mov push call mov pop pop pop leave ret mov push mov sub push push mov xor push mov mov and mov mov jmp mov mov cmp je cmp je cmp je cmp je cmp je push lea push push lea call mov call mov mov mov mov cmp je push lea push push lea call mov call mov mov mov mov mov mov cmpb jne inc mov movsbl sub je dec je sub je dec dec je sub push je lea push lea push call pop jmp lea push push lea push push lea inc push push mov call add mov call mov call movb jmp lea cmpb jne cmpb jne mov push lea push push lea push push call add mov call mov mov mov mov mov cmpb jne incl jmp lea push call pop push lea push push lea call mov call mov mov mov push lea mov call push lea push lea jmp push push lea call push lea push push lea call mov call mov mov mov mov mov cmpl je lea push call jmp lea push dec push mov lea jmp lea push push lea push push push call add mov call mov mov mov mov cmp je mov mov cmp je cmp je and movb mov jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call mov mov mov mov pop mov pop pop leave ret mov push mov mov mov sub test jne pushl push pushl call mov add leave ret cmp jl cmp jle cmp je mov andl andl movb leave ret push movsbl sub inc mov cmp jne mov test je movsbl sub inc mov cmp jl cmp jmp pushl push pushl call mov add jmp test js cmp jle or cmp jne mov andl andl movb jmp andl andl push mov mov push mov mov mov and mov je lea push lea push push lea call mov call mov mov mov mov mov cmpb je lea push call pop push lea push push lea call mov call mov mov mov mov lea push lea call mov mov mov jmp lea push lea push push lea call mov call mov mov mov mov mov mov test je cmp jne mov incl and cmp lea push je call pop mov mov mov mov test je mov shr not test lea push je call pop push lea push push lea call mov call mov mov mov mov lea push lea call mov mov mov mov jmp call pop push lea call jmp mov andl andl movb jmp lea push pushl lea push call mov call jmp call pop push lea call mov shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call xor cmp je lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov push push mov call cmp je mov andl mov mov jmp xor lea push push call lea push call add push lea push push lea call mov call mov mov mov push lea mov call lea push lea call mov and cmp je cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call cmp je mov mov mov mov mov mov mov mov mov jmp mov push call mov pop pop pop leave ret mov push mov sub mov mov push push mov and push xor movb test je cmp jne pushl lea push lea push lea push call mov add cmp je mov mov mov mov jmp mov mov xor cmp setl and movsbl mov dec and add sub xor and mov mov sub je dec je sub jne mov shr not test je test je mov push lea mov mov call push call add push lea lea jmp push jmp mov shr not test je test je mov push lea mov mov call push call add push lea push lea call mov mov mov mov jmp push call add push lea call mov jmp mov mov shr not test je shr not test je test je mov push lea mov mov call push call add push lea lea push call mov mov mov mov jmp push call add push lea call incl mov cmpb jne pushl lea push lea push lea push call mov add test jne mov mov xor cmp setl movsbl dec and add sub mov jmp mov mov mov jmp cmpb je inc mov cmp ja mov push lea call xor mov mov mov lea push lea call cmpl mov mov mov mov je mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov test je mov push lea mov mov call mov mov mov mov lea push lea call mov mov mov mov test je cmpl je mov andl andl movb jmp cmpb je lea push lea push push lea call mov call mov mov mov mov mov cmpb lea push je lea push lea push call pop mov call mov mov mov jmp lea push push lea call mov call mov mov mov mov jmp mov cmpb je lea push call pop push lea call mov mov test jne push lea call jmp incl cmp jne mov shr not test mov je and cmp jne cmpl jne lea push lea push lea push call pop mov call mov mov mov mov jmp and cmp jne lea push call pop push lea call test je lea push lea push push lea call mov call mov mov mov mov test je lea push lea push push lea call mov call mov mov mov mov xor mov cmp jne mov cmp je mov test jne mov cmp je push lea push push lea call mov call mov mov mov push lea mov call push lea push lea call jmp test je mov mov mov mov jmp push jmp mov cmp je push lea push push lea call mov call lea push lea call mov or cmpb je or mov mov mov jmp cmp jne mov cmp je testl jne mov cmp je push lea push push lea call mov call mov mov mov push lea mov call push pushl lea call jmp push push pushl call add jmp mov cmp je push jmp mov push call mov pop pop pop leave ret mov push mov sub mov mov and xor and and mov test je cmpb jne mov cmp jne addl lea push call pop push lea push push lea call mov call mov mov jmp cmp jne lea push push call pop pop mov mov cmp jne mov mov lea push call pop mov mov cmp jne xor leave ret cmp je testl jne mov cmpb jne mov mov jmp pushl lea call mov test jne mov test je mov call inc mov add and push call pop mov test je pushl lea push call mov mov jmp cmp jne inc mov inc jmp inc cmpb je jmp mov inc inc mov test jne mov mov mov leave ret mov push mov push push mov mov push xor push cmp je cmp jl cmp jle cmp jne pushl lea call mov mov cmp je cmp je testl jne push lea call cmp je push lea call lea push pushl call pop pop mov jmp mov push pushl lea push pushl push call xor cmpb sete push lea push pushl call add jmp push lea call pushl lea call mov cmp je push lea call push mov cmp je cmp je push lea call push lea call mov mov mov mov mov pop pop pop leave ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov pushl pushl pushl pushl call mov add pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov movzwl push push pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov pushl pushl pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret mov push mov mov mov sub push push push test je incl andl movzbl mov and mov or movb cmp jg je sub cmp ja movzbl jmp push jmp push jmp push jmp push jmp push jmp cmp je jle cmp jle cmp je cmp jne mov mov incl mov movzbl cmp jg cmp jge cmp jg cmp jge test je cmp je add cmp ja push jmp pushl lea push call push push pushl call add jmp decl push lea call jmp push jmp cmp jl cmp jle cmp jg push jmp push jmp push jmp cmp je cmp je cmp je cmp je add cmp ja lea decl push call mov pop mov mov mov test jne mov mov mov jmp push jmp push jmp push jmp push pop mov mov andl and mov mov mov cmp jne push lea push lea push lea mov or push call add test jne push lea call mov mov mov mov jmp push jmp push lea call jmp mov and jmp lea jmp push lea call push lea call cmp jne mov sub je push pop sub je sub je sub je sub je sub jne movzbl sub je sub je sub je sub je sub jne lea push lea push push jmp lea push lea push push lea call mov call mov mov mov mov mov cmpl je push lea push push lea call mov call lea push lea call mov mov mov mov mov jmp cmpl jne test je push lea call test je push lea call jmp test je push lea call push lea push lea push pushl call add jmp pushl push pushl call add mov pop pop pop leave ret mov mov inc add out add out add out add out add add add add add add mov sub mov movsbl push xor mov and sub push mov je sub je sub mov je dec je push pushl call pop pop jmp push lea call cmp je push lea call push mov mov incl mov lea push lea push pushl or mov call add jmp mov mov cmp je cmp je mov andl movb mov jmp addl mov movsbl mov cmp jg je sub je sub je dec je dec jne incl and push lea push push lea push push mov call push pushl call add jmp incl push push pushl call jmp incl push pushl call jmp push jmp sub je dec je dec jne mov incl push call jmp incl jmp push lea call cmp je push lea call push jmp pushl push pushl call add mov pop pop leave ret mov push mov sub pushl lea call mov mov xor cmp je cmp je cmp je lea push pushl call pop pop jmp incl cmp jne mov push call jmp lea push pushl lea push call jmp incl andl push lea push push lea push lea push mov call mov mov mov mov lea push pushl call add jmp lea push pushl lea push call mov call mov leave ret mov push mov sub push push push mov call test je andl movb andl mov jmp xor push pushl call lea push call mov add mov mov push lea mov call pushl lea push lea call mov mov mov mov mov pop leave ret push call pop ret mov push mov push push mov push mov mov mov push push mov call or pop cmp jne call movl mov mov jmp pushl lea push pushl push call mov cmp jne call test je push call pop jmp mov sar mov and shl lea andb mov mov pop pop leave ret push push call or mov mov mov cmp jne call andl call movl mov mov jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl pushl pushl pushl call add mov mov jmp call movl call andl mov mov movl call mov mov call ret pushl call pop ret mov push mov incl push call pop mov mov test je orl movl jmp orl lea mov movl mov andl mov pop ret push push call mov cmp jne call movl or jmp test js cmp jb call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je push call pop push call test jne call mov jmp andl cmpl je call mov mov call movl orl movl call mov call ret mov push call pop ret mov push mov sub push xor testb push mov mov mov mov movl mov je mov movb jmp movl mov lea push call pop test jne mov test jne testl jne cmp je orb mov and sub mov mov je dec je dec je call mov orl call push pop mov call mov jmp mov jmp testb je testl jne movl jmp mov mov push pop sub je sub je sub je sub je sub jne cmp sete mov jmp movl jmp movl jmp movl jmp mov mov mov and mov push mov cmp jg je cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp cmp je cmp je cmp je call mov orl call push pop mov call mov pop pop pop leave ret movl jmp movl mov movl test je mov not and test js movl test je orl orl orl test je or test je orl jmp test je orl call or mov cmp jne call andl mov call movl call mov jmp mov mov push pushl movl pushl lea push pushl pushl pushl call mov cmp jne mov mov and cmp jne testb je andl push pushl lea pushl push pushl pushl pushl call mov cmp jne mov mov sar mov and shl lea andb call push call pop call mov mov jmp pushl call test jne mov mov sar mov and shl lea andb call mov push call pop pushl call test jne call movl jmp cmp jne orb jmp cmp jne orb pushl pushl call mov mov and sar mov pop shl pop mov or mov mov mov and sar mov shl lea andb mov andb mov jne test je testb je push push pushl call mov add cmp jne call cmpl je pushl call jmp push lea push pushl movb call add test jne cmpb jne mov cltd push push pushl call add cmp je push push pushl call add cmp je testb je mov mov test jne mov and jne or jmp or mov and cmp je cmp je cmp je cmp je cmp je cmp je cmp jne movb jmp mov mov and cmp jne movb jmp movb testl je xor testb mov jne mov mov and cmp je cmp je cmp jne mov cmp jbe cmp jbe cmp jbe cmp jne movsbl xor dec je dec jne movl push jmp push push push pushl call add or je push push push pushl call and add cmp je push lea push pushl call add cmp je cmp je cmp jne cmpl jne movb jmp mov cmp jbe cmp jbe cmp ja push push push pushl call add or je push push push pushl call add and cmp jne jmp mov and cmp jne pushl call pop call push pop mov mov jmp cmp jne push push pushl call add cmp je movb jmp push push pushl call add jmp movl push pop mov sub push lea push pushl call add cmp je add cmp jg or mov mov sar mov and shl lea mov xor and xor mov mov sar mov and shl lea mov mov shr shl and or cmpb mov jne testb je mov mov and sar mov shl lea orb mov mov and cmp jne testb je pushl call push pushl lea push push pushl mov and push pushl call cmp jne call push call mov mov and sar mov shl lea andb pushl call pop jmp mov mov sar mov and shl mov mov jmp push push push push push call int3 push push call orl xor mov xor cmp setne cmp jne call movl call or jmp mov pushl push pushl pushl lea push lea call add mov movl call mov cmp je call mov jmp xor cmp je cmp je mov sar mov and shl mov lea andb pushl call pop ret mov call ret push push call xor mov xor mov cmp setne cmp jne call push pop mov call mov jmp orl xor cmp setne cmp je cmp je mov and neg sbb inc je mov pushl pushl pushl pushl lea push mov call add mov movl call mov cmp je orl call ret xor mov cmp je cmp je mov mov sar and shl mov lea andb pushl call pop ret mov push mov push orl push lea push pushl pushl pushl pushl call add test je or leave ret mov leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call xor cmp jne cmp je mov andl xor jmp mov cmp jne pushl pushl pushl call add cmp je mov andl jmp cmp jne call movl call cmp je mov andl mov jmp push mov cmp jne call movl call cmp je mov andl mov jmp push mov movzbl decl incl movzbl testb mov je cmp jne movzbl testb mov jne mov jmp mov mov cmp jne mov jmp shl movzbl or incl movzwl mov mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbl jmp mov mov mov movzbl movzbl inc testb mov je cmp jne mov jmp mov decl cmp je shl movzbl or movzwl inc mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbl jmp mov mov mov cmp jne cmp je cmp jne cmp je mov andl xor pop pop pop leave ret sbb and dec cmp je mov andl jmp mov push mov push pushl pushl pushl call add pop ret mov push mov sub cmpl jne xor leave ret push pushl lea call mov cmpl jne pushl pushl pushl call add cmpb je mov andl jmp push mov test jne call movl call cmp je mov andl mov jmp push mov test jne call movl call cmpb je mov andl mov jmp movzbl decl movzbl inc testb je cmpl jne movzbl xor testb je cmpb je mov andl xor pop pop pop leave ret mov test jne xor jmp shl movzbl or movzwl inc movzbl movzbl inc testb je cmpl jne xor jmp mov decl test je shl movzbl or movzwl inc cmp jne test je cmpl jne jmp sbb and dec cmpb je mov andl jmp mov push mov push pushl pushl pushl call add pop ret int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret mov push mov mov push push test js cmp jae mov sar mov and lea mov shl cmpl jne cmpl push mov jne sub je dec je dec jne push push jmp push push jmp push push call mov mov xor pop jmp call movl call andl or pop pop pop ret mov push mov mov push xor push push cmp jl cmp jae mov sar mov and lea mov shl testb je cmpl je cmpl jne sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call mov or pop pop pop pop ret mov push mov mov cmp jne call andl call movl or pop ret test js cmp jb call andl call movl call jmp mov sar mov and shl testb je mov pop ret push push call mov mov sar mov and shl add movl xor cmp jne push call pop mov cmp jne push lea push call test jne mov incl movl call cmp je mov sar and shl mov lea push call mov call ret xor mov push call pop ret mov push mov mov mov and sar mov shl lea push call pop ret push push call orl xor mov push call pop test jne or jmp push call pop mov mov cmp jge mov test je mov mov add cmp jae testb jne cmpl jne push call pop xor inc mov cmpl jne push lea push call test jne mov jmp incl andl call cmpl jne lea push call testb je push call add jmp mov mov push call pop ret cmpl jne movb orl sub sar mov shl add mov cmpl jne inc jmp push push call pop pop mov test je lea mov addl mov add cmp jae movb orl movb andl add mov jmp shl mov mov sar mov and shl mov movb push call pop test jne orl movl call mov call ret push call pop ret push push call xor mov xor testb je add testl je or testb je or pushl call cmp jne call push call pop or call ret cmp jne or jmp cmp jne or call mov mov cmp jne call movl call mov jmp mov pushl push call pop pop or mov sar lea mov and shl mov mov mov lea andb mov lea andb movl movl call cmp je mov jmp mov xor cmp jne mov sar mov and shl mov lea andb push call pop ret pxor push push mov and test jne mov and shr je lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea dec jne test je mov shr je jmp lea movdqa lea dec jne and je mov xor shr je mov lea dec jne and je mov inc dec jne pop pop ret mov neg add sub xor push mov and je mov inc dec jne shr je mov lea dec jne pop jmp mov push mov push cmpl jne call mov cmp jne mov leave ret push lea push push lea push push call test je mov leave ret push push call push call pop andl pushl call pop movzwl mov movl call mov call ret push call pop ret mov push mov sub push push mov xor cmp je cmp je cmp jne mov cmp je xor mov xor pop pop leave ret pushl lea call mov cmp jne mov cmp je movzbl mov cmp je mov andl xor inc jmp lea push movzbl push call pop pop test je mov mov cmp jle cmp jl xor cmp setne push pushl push push push pushl call test mov jne mov cmp jb cmp je mov cmp je mov andl jmp call movl cmp je mov andl or jmp xor cmp setne push pushl mov push push push pushl call test jne jmp mov push mov push pushl pushl pushl call add pop ret int3 int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp int3 int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret mov push mov sub pushl lea call movzbl mov mov test jne cmpl je mov mov movzwl and jmp xor test je xor inc cmpb je mov andl leave ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov sub pushl lea call mov test je cmpl jne push push pushl pushl call add cmpb je mov andl leave ret cmpb je mov andl xor leave ret mov push mov push pushl call pop pop pop ret mov push mov mov push mov push movzbl lea inc cmp ja add movzbl lea inc cmp ja add test je cmp je pop sub pop pop ret mov push mov sub push pushl lea call mov test jne call movl call cmp je mov andl mov jmp push mov test jne call movl call cmpb je mov andl mov jmp mov cmpl jne push push call pop pop jmp sub push movzbl lea push push call mov movzbl lea push push call add inc test je cmp je sub mov pop cmpb je mov andl pop pop leave ret mov push mov xor cmp jne cmp jne call movl call mov pop ret cmp je pop jmp push pushl pushl call add pop ret mov push mov sub cmpl push push push je pushl lea call mov test jne call movl call cmpb je mov andl mov jmp mov test je mov cmp jbe call movl call cmpb je mov andl mov jmp mov cmpl jne pushl push push call add cmpb je mov andl jmp sub movzbl lea push push call mov movzbl lea push push call add inc decl je test je cmp je sub mov jmp xor pop pop pop leave ret mov push mov xor cmp jne cmp jne call movl call mov pop ret cmp je cmpl ja pop jmp push pushl pushl pushl call add pop ret mov push mov push push mov xor cmp jne call push pop mov call mov jmp push cmp ja call push pop mov call mov jmp xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov cmp je xor inc movb lea neg mov xor divl cmp jbe add jmp add mov inc inc test je cmp jb cmp jb movb jmp movb dec mov mov mov dec mov inc cmp jb xor pop pop pop pop ret mov push mov cmpl mov jne test jns push push jmp push pushl pushl mov call pop ret mov push mov xor cmpl jne cmp jge inc mov push pushl mov pushl call pop ret mov push mov mov mov push pushl pushl call pop ret mov push mov sub xor push cmp jne call push pop mov call mov jmp cmp jbe xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov push mov mov mov cmp je neg adc movb lea movl neg mov mov pushl pushl push push call mov mov mov cmp jbe add jmp add mov mov inc inc mov test jne test je cmp jb mov pop cmp jb movb call push pop mov mov jmp movb dec mov mov mov mov dec mov inc mov cmp jb xor pop leave ret mov push mov xor cmpl jne cmp jg jl cmp jae xor inc push mov push pushl pushl pushl pushl call pop pop ret mov push mov push mov push pushl pushl pushl pushl call pop pop ret mov push mov sub push push push xor push push push pushl mov mov call mov and add mov cmp je push push push pushl call mov and add cmp je mov mov sub sbb js jg cmp jbe mov push push call push call mov test jne call movl call mov pop pop pop leave ret push pushl call pop pop mov test jl jg cmp jb mov jmp mov push pushl pushl call add cmp je cltd sub sbb js jg test jne mov pushl pushl call pop pop pushl push call push call xor jmp call cmpl jne call movl or mov jmp cmp jg jl cmp jae push pushl pushl pushl call and add cmp je pushl call pop push call neg sbb neg dec cltd mov and mov cmp jne call movl call mov call mov mov and cmp je push pushl pushl pushl call and add cmp je xor jmp push push call mov cmp jne call andl push pop jmp test js cmp jb call andl call push pop mov call mov jmp mov sar lea mov and shl mov movsbl and je cmpl jg jl cmpl jae call andl call push pop mov mov jmp push call pop andl mov testb je pushl pushl push call add mov jmp call push pop mov mov movl call mov call ret mov push call pop ret mov push mov mov cltd push push pushl call add neg sbb pop ret mov push mov push mov push call pop cmp jne call movl or jmp push pushl push pushl push call mov cmp jne call jmp xor test je push call pop or jmp mov sar mov and shl lea andb mov pop pop pop ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl pushl push call add mov jmp call movl call andl orl movl call mov call ret mov push call pop ret mov push mov push mov push mov mov sar lea mov and shl add mov add push movzbl movsbl and sar cmp je cmp je cmp je cmp je cmp jne orb mov lea mov and or mov jmp orb mov lea mov and or jmp andb jmp orb mov lea andb test pop pop pop jne mov pop ret neg sbb and add pop ret mov push mov mov cmp je cmp je cmp je call movl call push pop pop ret push push call xor pop ret mov push mov mov test jne call movl call push pop pop ret mov mov xor pop ret push push call mov cmp je cmp je cmp je cmp je cmp je call movl call or jmp mov cmp jne call movl jmp test js cmp jb call movl jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl push call pop pop mov jmp call movl orl movl call mov call ret mov push call pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret mov push mov push lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov push lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push pushl mov call movl mov pop pop ret mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push pushl mov call movl mov pop pop ret mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push pushl mov call movl mov pop pop ret mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push pushl mov call movl mov pop pop ret mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret int3 jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp mov mov movl movl movl movl mov movl movl movl movl ret mov push mov mov mov mov pop ret mov push mov call cmpl je call fnclex pop ret mov push mov push push mov add mov mov mov mov mov mov mov mov jmp pop leave ret pop pop xchg jmp pop pop xchg jmp pop pop xchg jmp mov push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop leave ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret mov push mov mov pushl pushl push pushl call add pop ret mov push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret mov push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop leave ret mov push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop leave ret mov push mov push push push push mov mov mov mov mov jmp cmp jne call mov dec mov imul add cmp jge cmp jle cmp jne decl mov mov cmpl jge mov inc mov mov mov cmp ja cmp jbe call mov imul add pop pop pop leave ret mov push mov mov push mov mov call mov mov call mov mov pop pop ret mov push mov call mov jmp mov cmp je mov test jne inc pop ret xor pop ret mov push mov push call mov cmp jne call mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne pop pop jmp mov mov jmp mov push mov sub mov andl lea xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov leave ret mov push mov pop jmp mov push mov sub push pushl lea call mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov inc mov mov mov mov inc test jne pop cmp je mov andl leave ret mov push mov sub push pushl lea call mov mov mov test je mov mov mov cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je mov mov push mov cmp pop jne dec mov inc inc mov test jne cmpb pop je mov andl leave ret mov push mov fldz mov fcompl fnstsw test jp xor inc pop ret xor pop ret mov push mov push push cmpl pushl pushl je lea push call mov mov mov mov mov jmp lea push call mov mov mov add leave ret mov push mov push pushl pushl pushl call add pop ret mov push mov test je push call inc push push add push call add pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov sub push push pushl lea mov call xor cmp jne call push pop mov call cmpb je mov andl mov pop pop leave ret cmp jbe cmp jle mov jmp xor add cmp ja call push jmp push cmp je mov xor cmp setg xor cmpl sete mov add mov call mov cmpl mov jne movb lea cmpl jle mov mov mov mov mov mov inc mov xor cmp sete add add cmpl jne or jmp sub add push push push call add test jne lea cmp je movb mov cmpb je mov dec jns neg movb cmp jl cltd push pop idiv add mov cmp jl cltd push pop idiv add mov add testb pop je cmpb jne push lea push push call add cmpb je mov andl xor jmp xor push push push push push call int3 mov push mov sub mov xor mov mov push push mov push mov push pop push lea push lea push pushl pushl call add test jne call mov call mov jmp mov test je cmp jne or jmp xor cmpl sete sub xor test setg sub lea push lea push push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl mov push pushl call add mov pop pop xor pop call leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov sub push push pushl lea movl xor movl call cmp jge mov mov cmp jne call push pop mov call cmpb je mov andl mov jmp cmp jbe mov add movb cmp ja call push jmp mov mov mov mov mov shr mov push and xor cmp jne test jne mov cmp jne or jmp add push pushl lea push push push call add test je cmpb movb je mov andl jmp cmpb jne movb inc cmpl movb sete dec and add mov push add push call pop pop test je cmpl sete dec and add mov movb jmp and xor or je movb inc mov test sete dec and add neg sbb movb mov mov and and xor add xor or jne movb mov mov and add or jne mov jmp movl jmp movb add mov inc mov cmp jne mov jmp mov mov mov mov mov mov mov and mov ja cmp jbe mov movl cmpl jle mov and mov movswl and and call add movzwl cmp jbe add mov subl mov mov shrd shr inc decl cmpw mov mov jge cmpw jl mov and mov movswl and and call cmp jbe lea mov cmp je cmp jne movb dec jmp cmp je mov cmp jne add mov jmp inc mov jmp incb cmpl jle pushl push push call add add mov cmpb jne mov cmpl mov sete dec and add mov mov mov call xor and and sub push pop sbb js jg cmp jb movb add jmp movb add neg adc neg mov movb cmp jl mov jg cmp jb push push push push call add mov inc mov mov mov cmp jne test jl jg cmp jb push push push push call add mov mov inc mov mov cmp jne test jl jg cmp jb push push push push call add mov mov inc mov mov add mov movb cmpb je mov andl xor pop pop pop leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov sub push push push pushl mov mov mov lea dec call test jne call push pop mov call cmpb je mov andl mov jmp cmpl jbe cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push lea call inc push push push call movb add mov jmp add cmpl jle push lea call inc push push push call mov mov mov mov mov mov add test jns neg cmpb jne cmp jl mov mov mov call push push push call add cmpb je mov andl xor pop pop pop leave ret mov push mov sub mov xor mov mov push push mov push pop push lea push lea push pushl pushl call add test jne call mov call mov jmp push mov test jne call mov call mov jmp or cmp je xor cmpl mov sete sub mov lea push mov add push push xor cmpl sete add push call add test je movb jmp pushl lea push push push mov call add pop mov pop xor pop call leave ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub mov xor mov mov push mov push push pop push lea push lea push pushl pushl call add test jne call mov call mov jmp mov test je push mov xor dec cmpl sete lea cmp jne or jmp sub lea push pushl push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push pushl mov pushl call add jmp pushl lea push push pushl mov pushl pushl call add pop mov pop xor pop call leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov mov cmp je cmp je cmp jne pushl pushl pushl pushl pushl call add pop ret cmp je cmp je pushl pushl pushl pushl pushl pushl call jmp pushl pushl pushl pushl pushl pushl call jmp pushl pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl pushl pushl pushl pushl pushl call add pop ret mov push push push xor push call add test je push push push push push call pop ret mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push push mov mov test je lea cmpb je mov mov cmp je add push push call pop pop test je xor jmp testb je testb je mov mov test je testb je test je testb je xor inc pop pop pop ret mov push mov mov mov mov cmp je cmp je cmp jne call andl jmp call cmpl jle call decl xor pop ret push push call mov mov cmpl jg movsbl jmp mov mov call incl andl cmp je cmp jle cmp jl call mov mov mov mov movl cmpl je mov push push mov pushl call andl jmp pushl call pop ret mov andl mov mov mov mov jmp movl call cmp je call mov call ret mov mov call cmpl jle call decl ret mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call xor inc mov mov ret xor ret push push call mov test je cmpl jne mov test je mov test je andl push pushl call movl call ret xor cmp setne ret mov call int3 mov push mov mov mov push mov add cmpl jl mov mov mov mov add add pop pop ret call xor cmp setne ret mov push mov mov push push mov test je mov test je cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call mov pushl push call pop pop call mov mov call mov mov call mov jmp orl orl call decl call cmpl pop pop jge call andl xor inc pop ret mov push mov mov test je mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call incl xor inc pop ret xor pop ret mov push mov push mov cmpl je push push push call cmpl pop mov mov jne call mov cmp jne call mov cmpl jne call mov cmp je call mov cmpl je call mov cmpl jne call mov pushl call pop test je push call pushl call pop pop call mov cmp jne call mov cmpl jne call mov cmp je call mov cmpl je call mov cmpl jne cmpl je call decl call mov mov call mov pop mov pop pop pop ret push pop ret push push call andl mov call jmp pushl call pop ret mov movl call ret push push call andl pushl call pop jmp pushl call pop ret mov movl call ret push push call andl pushl call jmp pushl call pop ret mov movl call ret push push call andl pushl pushl pushl pushl call jmp pushl call pop ret mov movl call ret mov push mov xor sub cmp jne call call mov mov cmp jle push mov push mov mov mov mov lea jmp mov pushl mov push mov add push call add test jne dec add test jg jmp movb incl mov addl cmp jl pop pop mov leave ret push mov call call cmpl je call andl call orl call call mov push push mov call int3 mov push push xor xor cmp jle mov mov push call test jne inc add cmp jl xor pop pop ret mov jmp mov push mov push mov push test jne call mov test jne call cmpl jne cmpl jne mov cmp je cmp je cmp je call mov mov mov lea jmp mov mov mov add push call push call pop pop test je dec add test jg xor pop pop pop ret xor inc jmp push push call mov mov mov mov andl mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl push pushl push call add mov andl jmp mov call ret mov call andl mov mov cmpl jg movsbl jmp mov mov andl mov cmp jae imul mov cmp jle cmp jg mov mov push push push push call add andl andl mov movl movl call mov call ret incl jmp mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne cmpl je pushl call pop test je pushl push call pop pop ret push push call xor mov mov mov cmp je cmp je mov cmp jne testl je mov mov test js lea mov xor inc push test je mov pushl call pop pop test je push push call pop pop test je mov mov mov add push push call pop pop mov jmp mov mov pushl test je call pop pop test je push push call pop pop test je pushl mov pushl push call add cmpl jne mov test je add push jmp cmp jne call pop pop test je push push call pop pop test je pushl add push mov pushl call pop pop push push call add jmp call pop pop test je push push call pop pop test je pushl call pop test je testb push pop setne inc mov jmp call movl mov jmp xor inc ret mov call xor call ret push push call mov testl je mov jmp mov mov lea andl mov push push pushl mov push call add dec je dec jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 mov push mov mov sub test jne leave ret push mov push mov push mov test je cmpb jne mov cmp je cmp je test je cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call cmpl je call mov mov mov or mov mov mov lea jmp mov pushl mov push lea push call add test jne dec add test jg jmp call incl cmpl je pushl lea push pushl push call add jmp cmp jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call cmpl jne xor jmp call incl xor inc pop pop pop leave ret mov push mov cmpl je pushl push push pushl call add cmpl pushl jne push jmp pushl call pushl pushl pushl push call mov push pushl inc pushl mov pushl mov push pushl call add test je push push call pop ret mov push mov sub push mov cmpl je push call cmpl je call lea call cmp je mov cmp je cmp je pushl pushl pushl pushl pushl pushl push call add test jne mov cmpl jne call mov lea push lea push push pushl push call mov add cmp jae add mov push lea cmp jl cmp jg mov shl add mov test je cmpb jne lea testb jne pushl mov pushl push pushl pushl pushl pushl call mov mov add incl mov add mov cmp jb pop pop pop leave ret mov push mov sub mov push mov mov push push movb cmp jg movsbl jmp mov mov cmp jl cmp jl call mov mov cmp jne cmpl mov jne mov cmp je cmp je cmp jne cmpl jne call cmpl je call mov mov call mov push push mov call pop pop test jne call cmp jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call call cmpl je call mov call pushl xor mov call pop test jne xor cmp jle mov mov push call test jne inc add cmp jl call push pushl call pop pop lea push lea movl call push lea push movl call mov mov cmp jne cmpl jne mov cmp je cmp je cmp jne mov cmpl jbe lea push lea push pushl pushl push call mov add cmp jae lea mov mov lea mov cmp jg cmp jg mov mov mov mov test jle mov mov lea mov mov test jle pushl mov push pushl mov call add test jne decl add cmp jg decl addl cmpl jg jmp pushl mov pushl mov pushl movb pushl pushl pushl push mov call mov mov add incl mov add mov cmp jb mov cmpb je push push call pop pop cmpb jne mov and cmp jb mov test je push call pop test jne call call call mov call cmpl mov mov push jne pushl jmp pushl call mov push push pushl pushl call add pushl call mov cmpl jbe cmpb jne pushl pushl pushl push pushl pushl pushl push call add call cmpl je call pop pop pop leave ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push push push call cmpl mov mov mov mov mov jne mov cmp je cmp je mov and cmp jb testb jne testb je cmpl je cmpl jne push push pushl pushl call add jmp cmpl jne mov and cmp jb cmpl je cmp jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl pushl pushl push call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call pop pop mov pop mov push mov cmp jne mov push call pop pop pop leave ret int3 int3 int3 int3 push mov push mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret mov push mov sub mov xor mov push push mov push pushl mov lea call lea push xor push push push push push lea push lea push call mov lea push push call add testb jne cmp jne cmp je mov andl push pop jmp cmp jne cmp je mov andl push jmp testb jne testb jne cmp je mov andl xor mov pop pop xor pop call leave ret mov push mov push pushl pushl call add pop ret mov push mov sub mov xor mov push push mov push pushl mov lea call lea push xor push push push push push lea push lea push call mov lea push push call add testb jne cmp jne cmp je mov andl push pop jmp cmp jne cmp je mov andl push jmp testb jne testb jne cmp je mov andl xor mov pop pop xor pop call leave ret mov push mov push pushl pushl call add pop ret mov push mov sub mov xor mov push push mov push pushl mov lea call lea push xor push push push push push lea push lea push call mov lea push push call add testb jne cmp jne cmp je mov andl push pop jmp cmp jne cmp je mov andl push jmp testb jne testb jne cmp je mov andl xor mov pop pop xor pop call leave ret mov push mov push pushl pushl call add pop ret mov push mov mov push mov test je call movl call jmp mov mov pop pop ret mov ret mov push mov mov push mov push mov xor cmp jne call push pop mov call mov jmp cmp jbe mov mov cmp jle mov inc cmp ja call push pop mov mov jmp push lea movb mov test jle mov test je movsbl inc jmp push pop mov inc dec test jg mov movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp push call inc push push push call add xor pop pop pop pop ret mov push mov push mov movzwl push mov shr and push mov and push mov mov mov movzwl mov and mov test je cmp je add jmp mov jmp xor cmp jne cmp jne mov mov mov mov jmp add mov movzwl mov shr shl or or mov shl jmp mov mov shr add or add add mov mov test je mov or pop pop mov pop leave ret mov push mov sub mov xor mov mov push mov push mov push lea push lea push call pop pop lea push push push sub lea mov movsl movsl movsw call mov mov movsbl mov movswl mov lea push pushl push call add test jne mov pop mov pop mov xor pop call leave ret xor push push push push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret mov push mov mov mov and and push mov test je test je push push call pop pop mov call push pop mov call mov jmp push pushl test je call mov jmp call pop pop xor pop pop ret push pushl lea sub push push push mov mov mov xor push pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov mov pushl movl lea mov ret mov mov pop pop pop pop pop mov pop push ret mov xor call jmp mov xor call jmp mov push mov xor inc cmpl jne xor pop ret mov push mov xor inc cmpl jne xor pop ret mov push mov xor inc cmpl jne xor pop ret mov push mov mov push mov lea xor cmp jb cmp jae xor inc mov mov pop pop ret mov push mov mov cltd push pop and add mov sar and jns dec or inc sub or shl mov not test je xor pop ret cmpl jne inc cmp jl xor inc pop ret mov push mov mov push push push cltd push pop and add mov sar and jns dec or inc mov sub xor inc shl mov xor lea cmp jb cmp jae xor inc mov jmp test je mov lea xor cmp jb cmp jae xor inc mov dec jns pop pop mov pop pop ret mov push mov push push andl push push push mov dec lea cltd and lea lea sar and jns dec or inc mov push pop sub xor inc shl mov test je or shl mov not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl xor sub inc shl mov lea cmp jb cmp jae movl mov mov jmp test je mov lea xor cmp jb cmp jae xor inc mov mov dec jns mov mov or shl push pop and inc cmp jge sub lea xor rep mov pop pop pop leave ret mov push mov mov mov push pop sub push mov mov add dec jne pop pop ret mov push mov push mov xor stos stos stos pop pop ret mov push mov xor mov cmpl jne inc cmp jl xor inc pop ret xor pop ret mov push mov mov cltd and sub add mov push sar and push jns dec or inc andl andl mov or mov shl movl sub push not mov mov and mov mov mov shr mov or mov mov mov shl incl cmpl mov jl push pop mov sub lea pop cmp jl mov mov jmp andl sub dec jns pop pop leave ret mov push mov sub mov xor mov mov mov mov movzwl mov and mov mov mov mov movzwl push mov and sub shl push push mov mov mov cmp jne xor xor cmp jne inc cmp jl jmp xor lea stos stos stos jmp andl lea lea movsl movsl mov movsl mov mov dec lea cltd and add sar lea and mov jns dec or inc lea push xor pop sub inc shl mov test je mov or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl sub xor inc shl lea mov add mov mov cmp jb cmp jmp test je andl lea mov lea mov cmp jb cmp jae movl dec mov mov mov jns mov mov or shl push pop and mov inc cmp jge lea sub xor rep cmpl je incl mov mov mov sub cmp jge xor lea stos stos stos jmp cmp jg sub lea lea movsl movsl mov cltd and movsl lea mov sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov dec lea cltd and add sar lea and mov jns dec or inc push pop sub xor inc shl mov test je or shl mov not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl xor sub inc shl lea mov lea mov cmp jb cmp jae movl mov mov mov jmp test je lea mov lea xor cmp jb cmp jae xor inc mov mov dec jns mov mov or shl push pop and inc cmp jge lea sub xor rep mov lea cltd and lea lea sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns xor push pop jmp cmp mov jl xor lea stos stos stos orl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov add xor inc jmp mov add andl mov cltd and add sar mov and mov jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns xor push pop sub mov shl mov neg sbb and or or cmp jne mov mov mov mov jmp cmp jne mov mov mov pop pop xor pop call leave ret mov push mov sub mov xor mov mov mov mov movzwl push mov and mov mov mov mov movzwl and sub shl push mov mov cmp jne xor xor cmp jne inc cmp jl xor jmp xor lea stos stos push stos pop jmp andl push lea lea movsl movsl movsl mov dec lea cltd and add sar lea and mov mov jns dec or inc lea push xor pop sub inc shl mov test je mov or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl sub xor inc shl lea mov add mov mov cmp jb cmp jmp test je andl lea mov lea mov cmp jb cmp jae movl dec mov mov mov jns mov mov or shl push pop and mov inc cmp jge lea sub xor rep cmpl je inc mov mov sub cmp jge xor lea stos stos stos jmp cmp jg sub lea mov lea movsl cltd and add movsl mov sar and movsl jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov dec lea cltd and add sar lea and mov jns dec or inc push pop sub xor inc shl lea mov test je or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl xor sub inc shl lea mov lea cmp jb cmp jae movl mov mov jmp test je lea mov lea xor cmp jb cmp jae xor inc mov mov dec jns mov or shl and mov inc cmp jge push pop lea sub xor rep mov lea cltd and add lea sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns push xor pop jmp mov cmp jl xor lea stos stos stos orl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov add xor inc jmp add andl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns xor pop push pop sub shl mov neg sbb and or mov or cmp jne mov mov mov mov jmp cmp jne mov mov mov pop xor pop call leave ret mov push mov sub mov xor mov mov mov mov movzwl push mov and mov mov mov mov movzwl and sub shl push mov mov cmp jne xor xor cmp jne inc cmp jl xor jmp xor lea stos stos push stos pop jmp andl push lea lea movsl movsl movsl mov dec lea cltd and add sar lea and mov mov jns dec or inc lea push xor pop sub inc shl mov test je mov or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl sub xor inc shl lea mov add mov mov cmp jb cmp jmp test je andl lea mov lea mov cmp jb cmp jae movl dec mov mov mov jns mov mov or shl push pop and mov inc cmp jge lea sub xor rep cmpl je inc mov mov sub cmp jge xor lea stos stos stos jmp cmp jg sub lea mov lea movsl cltd and add movsl mov sar and movsl jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov dec lea cltd and add sar lea and mov jns dec or inc push pop sub xor inc shl lea mov test je or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl xor sub inc shl lea mov lea cmp jb cmp jae movl mov mov jmp test je lea mov lea xor cmp jb cmp jae xor inc mov mov dec jns mov or shl and mov inc cmp jge push pop lea sub xor rep mov lea cltd and add lea sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns push xor pop jmp mov cmp jl xor lea stos stos stos orl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov add xor inc jmp add andl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns xor pop push pop sub shl mov neg sbb and or mov or cmp jne mov mov mov mov jmp cmp jne mov mov mov pop xor pop call leave ret mov push mov sub mov xor mov mov movzwl andl mov and and push mov mov mov mov movzwl shl push mov mov mov test jns test je lea xor cmp jb cmp jae xor inc andl mov mov test je mov andl lea mov lea cmp jb cmp jae movl decl mov mov jns test je incl mov jmp mov mov mov cmp jne movl or mov mov mov mov mov pop xor pop call leave ret mov push mov mov push mov mov add push mov shr mov lea or mov mov shr add or pop mov mov pop pop ret mov push mov mov mov mov push push mov mov shr shl or mov mov shl shr shr or pop mov mov pop pop ret mov push mov sub mov xor mov mov xor push mov movzwl push mov mov mov mov movzwl mov xor and mov mov and and lea push movzwl mov mov cmp jae cmp jae mov cmp ja mov cmp ja xor mov jmp mov test jne inc mov test jne xor cmp jne cmp jne mov jmp xor cmp jne inc mov test jne cmp jne cmp je mov lea movl mov mov add mov test jle add mov lea mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl cmpl mov je incw subl add decl cmpl jg mov mov add incl decl cmpl jg add mov test jle testl jne mov mov mov shll shr add or mov shr add or add mov mov test jg test jg add test jns mov neg movzwl mov add testb je incl mov mov mov shrl shl shr or mov shl shr or decl mov mov jne cmpl je orw mov cmp ja mov and cmp jne cmpl jne andl cmpl jne andl cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jae mov or mov mov mov mov mov mov jmp xor xor cmp sete dec and add mov mov mov mov pop pop xor pop call leave ret mov push mov sub mov xor mov mov mov sub xor mov cmp je jge negl mov sub mov cmp jne xor mov cmp je push push push mov addl sarl and cmp je imul add mov mov cmp jb mov lea movsl movsl movsl decl lea movzwl mov mov mov mov movzwl mov xor and mov mov and and lea movzwl mov cmp jae cmp jae mov cmp ja mov cmp ja xor mov jmp xor cmp jne inc testl mov jne cmp jne cmp jne xor mov jmp cmp jne inc testl mov jne cmp jne cmp jne mov mov mov jmp mov lea movl mov mov add mov test jle lea add mov mov mov mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl cmpl mov je incw addl subl decl cmpl jg mov add incl decl cmpl jg add test jle testl jne mov mov shll shr mov add or mov shr add or add mov mov test jg test jg add test jns mov neg movzwl add testb je incl mov mov mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw mov cmp ja mov and cmp jne cmpl jne andl cmpl jne andl mov cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jae mov or mov mov mov mov mov mov jmp xor xor cmp sete dec and add mov mov mov xor cmp jne pop pop pop mov xor call leave ret mov push mov sub mov xor mov mov xor push xor mov mov inc push mov lea mov mov mov mov mov mov mov mov mov cmp jne call movl call xor jmp mov mov mov cmp je cmp je cmp je cmp jne inc jmp push mov mov inc cmp ja jmp lea cmp ja push pop dec jmp mov mov mov mov cmp jne push pop jmp movsbl sub je dec dec je sub jne mov jmp push pop movl jmp andl push pop jmp lea mov cmp jbe mov mov mov mov cmp jne push jmp cmp je cmp je cmp je cmp jle cmp jle sub cmp ja push jmp dec push jmp lea cmp jbe mov mov mov mov cmp je cmp je mov jmp mov jmp cmp jg cmpl jae incl sub mov inc jmp incl mov inc cmp jge mov mov mov mov cmp je cmp je cmp je jmp cmpl mov mov jne jmp decl mov inc cmp je jmp cmp jg cmpl jae incl sub mov inc decl mov inc cmp jge jmp sub mov cmp ja push jmp lea mov lea cmp ja push jmp movsbl sub je dec dec je sub jne push jmp orl push pop jmp push jmp mov jmp mov inc cmp je sub cmp jbe dec jmp lea cmp jbe cmp jmp cmpl je movsbl sub lea mov je dec dec je mov cmpl mov mov je push pop cmp jbe cmpb jl incb dec incl mov cmpl jbe jmp push pop dec cmp jne jmp mov xor jmp cmp jg imul movsbl lea cmp jg mov inc cmp jge jmp mov mov jmp cmp jg mov inc cmp jge jmp decl incl dec cmpb je lea push pushl lea push call mov xor add cmp jge neg add cmp jne add cmp jne sub cmp jg cmp jl mov sub mov cmp je jge neg mov mov sub cmp jne xor mov cmp je jmp mov xor mov sarl add and mov cmp je imul lea mov cmp jb mov lea movsl movsl movsl decl lea mov xor mov mov mov mov movzwl mov xor mov and and and mov lea mov movzwl cmp jae cmp jae mov cmp ja mov cmp ja xor mov mov jmp xor cmp jne inc testl jne cmp jne cmp jne xor mov jmp cmp jne inc testl jne cmp jne cmp jne mov mov mov jmp mov lea movl mov mov add mov test jle lea mov lea mov mov mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl cmpl mov je incw addl subl decl cmpl jg add incl decl cmpl jg add test jle mov test js mov mov shll shr mov add or shr lea or add mov mov test jg test jg add test jns mov neg movzwl add testb je incl mov mov mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw mov cmp ja mov and cmp jne cmpl jne andl cmpl jne andl mov cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jb xor xor cmp mov sete mov dec and add mov jmp mov or mov mov mov mov mov mov jmp xor test sete andl dec and add andl mov cmpl jne mov movzwl mov mov shr jmp movl jmp xor mov mov xor movl jmp movl xor xor xor xor mov or mov mov mov mov mov pop mov pop xor pop call leave ret lea test inc add pop inc add inc add inc add pop inc add pop inc add inc add inc add pop inc add pop inc add sub mov xor mov mov mov mov push mov push push xor push push push pushl push push lea push call mov lea push push call add cmp jne or mov mov pop xor pop call leave ret mov push mov mov mov push push push mov mov lea xor cmp jb cmp jae xor inc mov test je mov lea xor cmp jb cmp jae xor inc mov test je incl mov mov lea xor cmp jb cmp jae xor inc mov test je incl mov add pop pop pop pop ret mov push mov sub mov xor mov movzwl movzwl mov and push mov mov lea push and cmpw push mov movl movl movl movl je movb jmp movb mov mov test jne test jne test jne xor cmp mov setne dec and add mov movw movb xor inc jmp cmp jne mov xor inc mov mov cmp jne cmpl je test jne push jmp xor push push push push push call xor cmp je cmp jne cmp jne push jmp cmp jne cmp jne push lea push push call add test jne movb jmp push lea push push call add test jne movb xor jmp movzwl mov imul mov shr shr lea imul lea sar movzwl xor mov movswl mov sub neg mov mov mov mov mov je test jns mov sub neg mov test je addl mov sar and je imul add mov mov mov cmp jb mov lea movsl movsl lea movsl decl mov xor mov mov mov mov movzwl mov xor mov and mov mov and and lea movzwl mov cmp jae cmp jae mov cmp ja mov cmp ja xor mov mov mov jmp xor cmp jne inc testl jne cmp jne cmp jne xor mov jmp cmp jne inc testl jne cmp jne cmp je and lea movl mov mov add mov test jle lea add mov mov mov movzwl mov movzwl mov imul andl lea cmp jb cmp jae movl cmpl mov je incw addl subl decl cmpl jg mov add incl decl cmpl jg add test jle testl jne mov mov shll mov add shr or mov mov shr add or add mov test jg test jg add test jns mov neg movzwl add testb je incl mov mov mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw mov cmp ja mov and cmp jne cmpl jne andl cmpl jne andl mov cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jb xor xor cmp mov sete mov dec and add mov xor cmp jne mov shr mov mov cmp jb mov incl xor mov mov mov mov mov xor and and and lea mov movzwl cmp jae cmp jae mov cmp ja mov cmp ja xor mov mov jmp mov or mov mov mov mov mov mov jmp xor xor cmp sete dec and add mov jmp xor cmp jne inc testl jne cmp jne cmp jne mov jmp cmp jne inc testl jne cmp jne cmp je mov lea movl mov mov add mov test jle lea mov lea mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl cmpl mov je incw subl add decl cmpl jg add incl decl cmpl jg add test jle mov test js mov mov shll mov add shr or mov shr lea or add mov test jg test jg add test jns mov neg movzwl add testb je incl mov mov mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw mov cmp ja mov and cmp jne cmpl jne andl cmpl jne andl mov cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jb xor xor cmp mov sete mov dec and add mov jmp mov or mov mov mov mov mov mov jmp xor test sete andl dec and add andl mov testb mov mov mov mov je cwtl add test jg xor mov mov cmp movw setne dec and add mov movb jmp cmp jle push pop mov shr sub xor mov movl mov mov mov shll shr add or mov shr add or decl mov mov jne test jns neg and jle mov mov mov shrl shl shr or mov shl shr or dec mov mov test jg lea lea mov mov test jle mov mov lea lea movsl movsl movsl shll mov shll shr lea or mov mov shr add or mov lea shr lea mov shr or mov or lea cmp jb cmp jae lea xor cmp jb cmp jae xor inc mov test je inc mov lea mov cmp jb cmp jae inc add shr add or lea mov mov mov shr add add mov shr or mov inc decl cmpl mov movb jg mov sub cmp jge mov jmp cmpb jne movb dec cmp jae mov cmp jae inc incw incb sub sub movsbl mov movb mov mov pop pop xor pop call leave ret cmpb jne dec cmp jae mov cmp jae xor mov mov cmp movb setne dec and add mov movb movb jmp mov push mov push push mov push xor cmpl jne cmp jne fstcw movzwl and mov cmp jne cmp je stmxcsr mov and cmp je and push pushl push call add test je push push push push push call pop leave ret mov push mov mov xor test je push pop test je or test je or test je or test je or test je or push movzwl push mov mov and push mov mov je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or testl pop pop pop je or pop ret xor test je inc test je or test je or test je or test je or test je or mov mov and push mov je cmp je cmp je cmp jne or jmp or jmp or mov and je cmp jne or jmp or pop test je or ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or test je or pop ret xor test jns push pop push mov push push test je or test je or test je or test je or mov test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or pop and sub pop pop je sub je sub jne or ret or ret or ret xor test je mov push push push mov test je or test je or test je or test je or mov test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov pop and pop pop cmp je cmp je cmp jne or ret or ret or ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or test je or pop ret push call pop ret mov push mov push push push fstsw mov xor mov test je test je push pop test je or test je or test je or test je or test je or cmpl je stmxcsr mov xor test je test je push pop test je or test je or test je or test je or test je or or jmp mov pop leave ret mov push call mov fninit call push call pop test je mov testl je andl movl pop ret call xor test je test je push pop test je or test je or test je or test je or test je or mov ret mov push mov push stmxcsr andl ldmxcsr mov xor test je test je push pop test je or test je or test je or test je or test je or leave ret mov push mov push push andl stmxcsr mov xor test jns push pop push mov push push test je or test je or test je or test je or mov test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov and sub je sub je sub jne or jmp or jmp or mov mov and not and or cmp je call push mov call pop stmxcsr mov xor test jns push pop test je or test je or test je or test je or mov test je or mov and je cmp je cmp je cmp jne or jmp or jmp or and sub je sub je sub jne or jmp or jmp or pop pop pop leave ret mov push mov mov test je fstsw mov xor test je test je push pop test je or test je or test je or test je or test je or mov push mov test je call mov pop pop ret mov push mov push push fnstsw fnclex cmpl je mov xor push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr andl ldmxcsr mov xor test je test je push pop test je or test je or test je or test je or test je or or pop leave ret mov xor test je test je push pop test je or test je or test je or test je or test je or leave ret mov push mov mov sub push push xor push mov cmp je fstcw mov test je push pop test je or test je or test je or test je or test je or movzwl mov mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or movzwl test je or mov mov and not and or cmp je call movzwl mov fldcw fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or test je or mov mov mov cmpl je xor cmp je and mov stmxcsr mov test jns push pop test je or test je or test je or test je or test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov and sub je sub je sub jne or jmp or jmp or mov mov and not and or cmp jne mov jmp call push mov call pop stmxcsr mov xor test jns push pop test je or test je or test je or test je or mov test je or mov and je cmp je cmp je cmp jne or jmp or jmp or and sub je sub je sub jne or jmp or jmp or mov mov mov jmp mov mov pop xor pop inc pop leave ret mov push mov sub push push push fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov mov and mov je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or movzwl test je or mov mov mov not and and or mov cmp je mov call movzwl mov fldcw fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or test je or mov mov xor cmp je and mov stmxcsr mov test jns push pop test je or test je or test je or test je or test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov and sub je sub je sub jne or jmp or jmp or mov mov and not and or cmp jne mov jmp call push mov call pop stmxcsr mov xor test jns push pop test je or test je or test je or test je or mov test je or mov and je cmp je cmp je cmp jne or jmp or jmp or and sub je sub je sub jne or jmp or jmp or mov mov xor or test je or pop pop pop leave ret mov push mov sub push push push mov and fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or movzwl test je or mov not mov and and or mov cmp je mov call movzwl mov fldcw fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or test je or mov mov xor cmp je and mov stmxcsr mov test jns push pop test je or test je or test je or test je or test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov and sub je sub je sub jne or jmp or jmp or mov mov and not and or cmp jne mov jmp call push mov call pop stmxcsr mov xor test jns push pop test je or test je or test je or test je or mov test je or mov and je cmp je cmp je cmp jne or jmp or jmp or and sub je sub je sub jne or jmp or jmp or mov xor or test je or pop pop pop leave ret mov push mov sub mov push xor push push movl mov mov mov cmp jbe mov mov mov lea movsl movsl movsl mov lea shr lea or mov andl mov mov mov shr add or mov add shr or mov mov lea mov add shr or add mov mov mov cmp jb cmp jae movl cmpl mov je mov andl lea cmp jb cmp jae movl cmpl mov je inc mov mov andl lea cmp jb cmp jae movl cmpl mov je inc mov add andl mov add mov shr or shr add add or mov mov mov mov mov mov movsbl lea mov cmp jb cmp jae movl cmpl mov je lea xor cmp jb cmp jae xor inc mov mov test je mov inc mov mov decl mov incl cmpl mov mov ja xor cmp jne mov mov addl mov mov shr shl shr or shl mov mov cmp je mov mov test jne mov mov addl mov mov shr add shr add or add or mov mov mov test je mov pop pop mov pop leave ret mov push mov push fstsw movswl leave ret mov push mov push fnstsw fnclex movswl leave ret mov push mov push fstcw mov mov and not and or movzwl mov fldcw movswl leave ret mov push mov push push mov test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait leave ret mov push mov push cmpl je stmxcsr jmp andl mov leave ret push push call xor cmp je testb je cmp je mov ldmxcsr jmp mov mov mov cmp je cmp je xor ret xor inc ret mov andl andl ldmxcsr movl jmp andl ldmxcsr call ret mov push mov push cmpl je stmxcsr andl ldmxcsr leave ret xor cmp je call and ret xor cmp je call and jmp ret mov push mov push xor cmp je call mov and mov mov not or and or push call pop mov pop pop ret mov push mov call mov and or push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 mov jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp push mov sub push call add test je mov mov mov mov mov mov mov mov mov mov push mov call add mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test je mov mov mov mov mov mov mov mov mov mov push mov call add mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push mov xor push lea mov movl mov mov push push lea mov call mov push call add mov mov pop pop mov pop ret int3 push mov push push mov push push push mov xor push lea mov movl mov mov push push lea mov call mov push call add mov mov pop pop mov pop ret movl mov jmp sub inc add add add aas inc push bound pop arpl je jae fs inc add sub inc add add add aas inc push bound pop je jo imul add add sub inc add add add aas inc push pop pop outsb outsl outsb pop jb je pop outsl bound arpl je inc inc add inc add add add aas inc push je jo pop imul inc rcll add add inc rcll add add add add add add add add add add add add add add dec out mov add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add popa bound gs imul jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add add add movsb add add jns and add add add cmpsb fild add add add add add add add cmp add add mov add cmp add inc incb add add add mov add cmp add inc incb add add add mov in call add add add add mov add add push ficompl and pop fisubrl xor adc add xor incb add add (bad) (bad) incl add enter les inc add inc add inc add xchg inc add xchg inc add xchg inc add add inc add add inc add add inc add add inc add add inc add add inc add inc add xchg inc add xchg inc add xchg inc add inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add inc add add add add add add add xchg inc add xchg inc add inc add inc add inc add inc add inc add xchg inc add inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add inc add inc add inc add inc add inc add add inc add xchg inc add add xchg inc add xchg inc add inc add inc add xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add add add add add add inc add inc add inc add inc add inc add add add add add add add add add test add test inc add or add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add sbb add add add add add add add add add add add or add or add or add or add or add pop add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add or add add add add add adc add push add add add add add add add add add or add insb add add add add add add add sbb add jb add or add push add add add add add add add add add add add add add xchg add add add add add add add add add cmpsl add add add add add add add add add add add add add add pop add or add or add or add mov xchg inc add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add out inc add out inc add out inc add out inc add out inc add out inc add out inc add out inc add out inc add out inc add (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add leave inc add leave inc add leave inc add leave inc add leave inc add leave inc add leave inc add leave inc add leave inc add jg jg jg mov inc add leave inc add leave inc add leave inc add leave inc add leave inc add leave inc add leave inc add mov inc add add add add add add add add add add add (bad) (bad) (bad) incl add add inc add add add aas inc push insb outsl imul jb jae fs inc add add inc add add add aas inc push imul pop popa jb jne outsb je jae fs inc add sub inc add add add aas inc push insb outsb addr16 pop gs outsl jb jae fs inc add sub inc add add add aas inc push outsl jne pop outsl pop jb outsb addr16 jae fs inc add sub inc add add add aas inc push jb outsb je insl gs gs outsl jb jae fs inc add inc add add add aas inc push outsl jbe jb insb outsl ja gs outsl jb jae fs inc add add adc add loopne add xor mov adc in jb jb jmp inc mov and push xchg mov jno push mov aas popf iret mov shr xor call push icebp out addl int ja jo or mov fs adc inc into imul fisttp test push test dec jne pop in push add int fsubs dec add or or mov sub out gs imul or mov sahf lods jno jecxz add mov (bad) push outsb and repnz inc scas lahf adc (bad) xchg clc das mov sub dec insl es mov dec mov xchg jp test scas scas dec hlt ja dec inc movsl int3 mov mov je scas dec add nop test and repz incl sub pop cwtl outsl add jno xchg xchg movsl jl dec les jecxz dec das adc adc mov cwtl leave rolb div ds aaa (bad) popf add jl push ds lcall add add ror pop bound dec push punpckldq (bad) mov gs xchg enter and jg mov mov frstor fsub xor (bad) pusha lret setne jmp and inc inc (bad) repz or jae dec fcompl push js outsl jg pop push bound test cmp and xchg dec movsl dec gs mov dec arpl or xchg jmp shll jo jg sbb mov js cltd mov adc add iret dec inc jge push pop mov fcmovnbe inc mov fisubrl pop sub pop inc jb call xor mov mov push mov jae stc popf popf jo fisttpl cltd cmp ss lock mov cmc movsb mov jl stos out repnz into add roll xor (bad) mov or movsl push sbb and mov sbbl pop (bad) add xchg cmp mov fisttpl fsubs fbstp sahf testl rcll jg fmull sbb loop scas mov jg fisubr popa cmp sbb (bad) xor dec jo xlat dec xor lock xor inc lea sbb inc mov mov test sti xor flds jbe jb jp lds mov push out sub imulb jp mov loope mov lea stos inc add sbb imul fcmovb addr16 dec out sub cmp divl mov int sub xchg shll arpl xor mov or pop mov daa rcll cmp addr16 das sub test cmpl push push (bad) dec insb (bad) or lea cmc out jl mov jbe sub xor cwtl cmp jno (bad) mov and mov dec lea out mov push (bad) test push imul jnp pop cwtl movsl xchg push sahf mov (bad) xchg mov sub cli lods xor add push inc scas clc sbb js fcoms repnz pop push imul cmp iret fnstcw push aas fbld mov jb add scas push and xlat jns dec mov xor sub lret (bad) ficompl out xor xor cli clc mov in sbb ret lret arpl and dec dec mov add and loopne ljmp pop mov xchg xchg lcall das cld fmuls dec xchg fisubr imul sbb ror es pop aad insl inc xor in (bad) pop aam mov repnz stc or pop sub aam push leave insl fimull jb lcall xchg jmp or daa add sti push in lds ret mov pop insl mov into aad pop sbb and les gs jge push jnp sbb out mov cld cmp scas lea sbbb pop cmp xor test mov adc scas fldt iret mov xor test pop cmc push pop test dec inc stos cli je xchg dec cmpsb or popf ljmp (bad) movsl jne pop inc xlat sub stc into cmpsb mov out daa int3 push ret pop out sbb fsubrs add movsl ret mov or mov lods lcall std pop mov dec or fsubs sbb mov pop or cltd cli push and out lcall and push cmpsb cmp mov (bad) outsl adc lahf int fdivl pop ret pop nop mov arpl into out incb sub movsb cmp mov rcll push sbb seta mov test lds add incb mov inc mov jne jnp mov sub adc aam aaa sub jp and or jns mov push dec jg cmp mov ja push popf (bad) arpl ja aad fnsetpm(287 mov xchg inc mov push call and hlt into imul dec mov push jg dec je cwtl jae vmwrite pop inc mov call fwait icebp or adc dec pop mov std wrmsr xchg push xlat inc sbb mov jnp pop imul test pusha stos jg dec pushf mov arpl xchg movsw mov jb inc push push rolb lods push mov insl mov ljmp push and cld xchg inc jg nop xor xor imul pop cli mov mov movsl or outsb shrb ss lcall sti addr16 std (bad) loopne sbb sub add fwait cmpsl gs outsb xchg cmp shlb lcall mov pop in aam add data16 dec sbb push and xchg cmp sbb jns fldcw and jae pcmpgtb sub add ret and jmp test mov adc cs ss iret (bad) mov clc pop sub sub push jne jmp cmc movsl push push push jo sub sbb loopne pop cmpsl (bad) lock xor mov js push jb fcoml adc sub (bad) iret push or sub add imul movsl push mov stos jnp jl xor (bad) cmpsb into adc jmp xchg cmp lret jo ret ja js mov stos add jo jmp rorb in (bad) pop fnsave ljmp lcall mov sub stos fisttpll insb lock in cmp sti or out cli push sub out ss test int or mov mov arpl fldenv add jle mov int popf (bad) scas sub lcall push (bad) and fstpl ss or cmpsb outsl (bad) call pop add icebp daa cmp push dec sarb mov cmpsb aam sti movsl add or sti and pushf pop cmpsl daa sbb and sbb fs jmp and xchg dec dec adc enter pushf sarb or shrb push add std add gs jne sti xor fdiv data16 jae addr16 pop mov (bad) cmp sub aam mov stc repz pop notb push test push scas shlb cmp push test test jg pop sbb dec data16 pop adc clc iret std fild popa and out cwtl sbb add rcl and (bad) jae xchg mov mov cld scas popa ret sub aas inc jb out pop into sub add jcxz cld mov pop cmpsl dec pop clc mov mov cmpsb sahf into jge inc dec cs stos gs pop cmp int test add add test fsubr add (bad) repz shrb shlb or xor pop or push test clc mov xlat int nop mov xor jo inc fucom or push ljmp mov adc sub xor inc mov jbe cli xchg popl aam add jle mov cs dec repz xchg and mov scas xchg sbb sub mov outsb rclb adc cli and mov mov inc sub fildll mov mov dec inc fcompl out inc mov jo,pt sbb pushf mov cmpsl inc xchg dec pop pop into mov pop push inc jnp loop sbb stc mov push test pop mov push scas mov xor push es fcmovbe and xor into pop test and jbe xor repz mov sarl sti fcmovnu ret pusha add mov and sbb popa iret dec xor sub adc imul lea push jo xor fs jmp js popa cli popf loopne rcrb loop and add lcall inc xchg jae stc xor xchg cmp push mov rcll (bad) daa sub jnp push cld (bad) scas mov das jp pusha test subl jmp push scas ret dec dec loope movsb jle inc push or add int push sbb push fcomps scas or jle xor cmpsb (bad) push ss xlat (bad) inc jp mov xchg and pop mov inc imul xor lods inc pop repz mov mov sahf lahf (bad) lds inc inc inc insl hlt aaa jg (bad) jno aaa aas mov push in xchg popf arpl gs xchg push dec outsl aaa cmp mov mov mov push sbb mov adc notl mov call jne jne fistpll push fs rcrl stos mov ljmp pop pop cwtl mov mov (bad) rorl adc inc add dec push in and xor aam fidivr in arpl loopne (bad) hlt and jecxz daa sbb in es loop sub sub jg out mov loop jo loopne lods mov and enter scas jge pushf rclb sub xor lock jnp movl imul aaa (bad) repz sub mov mov pop (bad) dec test fidivr mov retw cmpsb push les xchg (bad) cwtl loopne scas adc mov lea xchg cwtl pop push mov jecxz fidivrl loopne sbb push stc cld lret test dec sbb cmp (bad) jle mov inc mov and or mov insb pop cld pop fsubrp cmc int sarl and ret dec jb pop fwait sarb dec pop mov pop inc dec repz mov add xor lods sub jae nop jo cmp cmc call movsl (bad) lret in lods mov adc std repz iret pop jp imul test (bad) dec xchg sbb and adc loop xlat loope mov or xor jb sub jecxz lods imul movsb jb jno popa xchg or adc aad in aad iret js rclb push mov pop inc mov pop adc mov jb flds mov adc (bad) sbb xor outsb sub fwait into lret add jge dec xor xchg xchg lcall testb jo jge and enter flds movsl xor xlat movsb cltd jecxz roll jns popa fistp jnp sub dec jge add stc into rorb out movb test fwait adc mov add (bad) push cmp inc mov cmp pop push daa stc mov js pushf lret fdivp popa insb arpl les xlat sti xchg inc aas jl xor push xor addr16 add (bad) xchg cmp std push xchg decb rolb or or jb push xchg mov rcl jne and adc inc jge addr16 mov ret inc jns adc enter xorl adc or xlat push in es mov js or inc dec jb insb push loope inc out shrl (bad) cmc sub out aam stc inc out orl add mov mov fmull dec sbb add faddl imul cmpl loop inc js xor sbbl sahf and test adc aaa les (bad) out jb push int out loope sub inc int mov or mov (bad) rcll dec push cmpsl pop jnp push (bad) fucomi adc or dec inc mov xchg out movsb jbe leave sub ret adc pushf inc cli cmpsl jbe adc inc mov cmp repz fwait ja sbb xor outsb mov das adc pop add inc cld das adc dec xchg out mov inc out sbb dec xlat ja xchg leave adc popf mov xchg stc jecxz adc ds jne arpl dec cmc adc mov lea mov pop (bad) enter ja dec sub mov dec or xchg sbbl jbe dec cmpps mov cmp pop outsl ss rcrb in (bad) lods out push inc sbb inc push add data16 adc mov in dec push jno sbb sarl push inc pop testb inc pop mov xchg pop gs xlat pop or and jg int mov mov inc lret xchg mov gs sbb arpl jae pop mov mov push cmp icebp cld mov out leave iret (bad) enter test cmp dec shll lahf adc cmp push or call xchg adc frstor xchg add cmp fstp daa and adc jmp addr16 mov inc mov fcmovnb sbb movsl loope xchg in fdivs xor int3 popf xchg inc ficom sahf dec fstps add cwtl ret lret insl xor push inc and jecxz mov lods je cmp mov int cld repnz or xor pop gs lret inc int3 and jmp sub cmp sbb mov add insl add dec xor incl mov push jg and mov push pushf daa sub sbb or jmp add repz hlt lods stos jbe arpl sub dec or testb test pop pushf test test inc stos rcr cmp (bad) (bad) jb xchg jmp (bad) xchg or in fdivr iret xchg xor in repnz and test or xor les addl aad clc or fidivrl ljmp sbb jo ds push rorl cmp (bad) int3 daa lds push sahf xlat xchg icebp push les push arpl adc xor xor add roll lds jb cmp test (bad) mov mov mov mov scas std movsl mov mov aad hlt jnp dec mov jl or rorb push push sbb into push xchg sahf mov xchg dec fnstcw mov imul jae (bad) data16 dec mov roll fcmovnbe dec jle (bad) sahf or fcmovu adc pop push mov and cli xor aam dec ds ficomp or test aam mov popf mov int push adc ret cli (bad) sub push dec in adc mov movsb add test mov sbb jne mov in jo insl cld mov lods xchg and andps inc in (bad) xor enter and inc leave pop scas test adc mov inc std adc (bad) sbb fs pop call push cmp pushl int inc lret jnp pop and adc stos pushf sub inc pushf ss loope nop sbb cmc fldenv dec test pop fisubr lds test lret dec dec ljmp xor fldt cmpsl jl ss pop inc inc xchg dec dec cmp int bound xchg xchg jns xchg inc pop inc andl movsb or lods pop les jmp jo hlt inc popa (bad) jae xor xchg lcall inc in enter stc push mov (bad) jae movl lea jbe sbb out pop push cmp clc or rcll (bad) jl out push ret jnp scas jae fst mov xchg movsl xor sti xchg inc jl mov lret movsl mov (bad) mov pusha sub lret rcrb push sub (bad) jg ds pop sbb mov and fwait pop loopne mov or jmp mov or outsl scas jp fstp bound pop and xchg imul (bad) popa mov fisubrl or call push (bad) cmovne sub jno lret fdivrs loope in test sub fcomp jne or push push lods push push mov testb cltd arpl in sarb outsl in push outsl cmp add nop add cli fidivrl push xchg rcll hlt xor cmp cmp and sbb jp push fnop popa xor push ret jmp ljmp mov bound and jle mov push xchg in movsl xor jb scas push cmp pop push lea cmp scas shlb jo dec push dec xchg adc jns jnp jge or fwait jbe xor xchg jbe popa fchs jmp push aam mov push pop (bad) pop push sbb (bad) mov mov mov lock cltd fistpl add xchg pop inc xor das push lret xor out adc inc inc push das sub es fsincos imul dec cmpsl insl sahf out out pop fcoml outsb outsb shll movsb test movsl clts repz stos mov test popf in mov jb cltd and lods cmp sti or and jb scas scas and dec je vmptrld sub add jmp push mov (bad) lcall xor mov int push cld fxch mov dec ret das add push scas jge popa push pop dec and les aaa (bad) pop push cmp xor cmp mov shrl test pop dec xchg loopne loop scas xchg dec aad or xor sub dec pop cmpsb test aad push fisubl fwait xchg aas insb out hlt jo dec hlt inc inc mov icebp popf push (bad) xor push movsb jp push mov stos xchg push daa cld pop dec call imul test inc sti pop mov mov std add pushf dec nop mov out (bad) aad (bad) leave jno lods inc inc and xchg mov mov rcl pop adc cwtl add in mov xor ret test add ret jl scas sti pusha mov mov inc mov addr16 loope fstl loopne,pt fwait mov aam test sbb mov xor jnp cs push lods (bad) mulb rclb stos mov xchg dec mov and subl clc pop mov sub fcomi push mov inc push adc xchg mov mov clc or (bad) loopne pop sahf mov and jge pop add mov out outsl fwait mov test ja arpl xchg int out or cmc lcall or shll push in xor ficom jmp or (bad) jmp test cld and mov dec xor insb lock pop push cmp iret dec cmpsb aad xchg in fsubl mov lahf scas enter inc and push push cmp lret or xor dec or inc jle inc stc lret inc rolb mov mov addr16 inc push adc and into sbb push daa push xchg adc mov cmp jbe fstl mov cvtps2pi sarl pop mov sbb fsubrs scas repnz pop and sub fimul int3 cs mov dec and or (bad) mov add in mov cld bound adc cs or scas hlt push in sbb mov ss add stos test dec cli dec dec cs sbb test cmp pop mov push dec daa push imul lods mov adc and push nop mov push push push or push daa push fs mov lods pop into inc es push shlb mov cmpsb push rclb inc dec pop jp cmp xchg js ds jbe mov nop inc sub rcll icebp xchg outsb adc inc repz mov jl push mov lock mov jg mov iret inc in (bad) jno mov movsb shll jnp rorb push pop andl fwait xchg cmp add in aas scas ja pop pop lret pop inc popa pop call (bad) ja lods xchg mov mov adc push dec dec inc xchg fcomps jmp xchg and stc adc ljmp xor mov add and mov inc fcmovnu or mov loope add orl add lret lock loopne pop sti lret jne or cmc push aad dec inc xchg cmp call (bad) jns lret pop scas and adc push sti shlb int or (bad) xor leave (bad) xlat and add xchg rorb push mov mov arpl fs xchg mov cmp cs push adc mov cmc dec sti mov test notb mulb test inc pusha clc push jmp insl pop or scas das pop fwait push and call cmp cmpsl loopne xchg push lea cmp fcoms and xchg fs cmp sub xchg test pop sub dec (bad) dec add fisttpl stc xchg sbb mov andl and (bad) mov push add stos aad ds sbb or push sti jnp mov inc mov pop (bad) cmp and sar dec mov mov push sub dec sub int3 pop ljmp out xor or pop test mov xor jne insl jbe xchg and test mov sbb xchg mov or in jae inc cmp mov jl dec je aam push (bad) faddl cmpsl mov mov cmpsl mov imul stc movsb pop mov mov push outsl pop in push add push pusha mov popf push cltd adc cmpsl jns out dec repz daa lock and aam xor loopne loop enter mov lds xchg ljmp inc int or scas mov int jne cmpsl sti loopne repnz jae adc mov mov mov movsb jg jmp pushw cmc mov mov pop (bad) sahf mov xor and add cltd ja xor lahf inc mov mov mov in fwait sbb xor call mov pop cmc mov add out push push (bad) sub xchg cmp xchg sbb adc fisttpl mov xchg mov or out push dec loop mov cmpsb cmp int3 stc dec sti sbb sub cmp test rcr xor lods and cmp popf cli mov inc and (bad) fstps mov pusha out test popa jecxz lcall jo sub adc sub lds mov call movsb out loopne mov sub adc pop in in (bad) arpl xchg dec cltd sbb divb adc (bad) call xlat pop push movsl pop mov jnp adc mov bound jnp mov test (bad) inc mov rolb out sbb mov cmpl sub stos adc and cmp xlat sub sbb push lret sar sahf mov add mov dec and jnp ss and rolb xchg (bad) std out stc cmp cmp pop cmpsl loope xor xchg or adc sbb ret gs push fstpt movsl aas sub dec ret pop lods fnstenv stos add int3 dec roll add (bad) je and (bad) mov aaa shrb inc test mov cmp sub and (bad) jle scas lods (bad) cmc and sbb or push sbb and inc cmp xlat out mov mov imul rcrl sub (bad) sti cmpb fs loope and jl pop pushf sub sub shll rcr mov push movb jae xchg mov pop mov sarl (bad) (bad) or dec scas loop mov ficoml mov pop (bad) mov inc xchg push adc add cmp pusha add mov fcmovnbe mov xor mov xchg aas jns cmp jns adc jle pop and repnz or mov (bad) pop imul lahf das punpcklbw ret inc fsts sub mov ds iret in outsl pushf ret cli add aaa dec dec pusha cmpsl fs push (bad) leave dec adc cmp sahf daa lret lea mov mov xchg push fcompl dec aaa mov cmp pop fisubl adc sub jbe in pop aaa add jg in add push test sbb incl (bad) (bad) sub test int3 mov outsb mov ret std out (bad) hlt cwtl call aam cwtl stos sahf pushf lds xor lcall mov push jp inc inc outsl inc mov fistpll mov dec gs push clc in (bad) ja addr16 cwtl mov sub rcr (bad) aad cwtl cmp stc push js insl test sbbl mov and xchg pop je loope lcall dec mov test mov sub sub sub out iret and jnp push mov xor add fwait adc (bad) mov aaa test push inc fsubrl jmp adc ds adc rolb test jnp mov xor lcall test pop (bad) in jecxz call jmp insb nop mov inc sbb xchg (bad) (bad) fidivr mov fstpt adc call dec cmpsb jno icebp push in cmp in in or sbb jb xchg adc loope dec (bad) out leave jge inc cmpsl dec xor dec into and xchg mov cmc push or clc stc into xchg mov pop mov jo mov ret lret dec popf sub test mov js add mov out stc push loop cmpsl mov sub es sub or push mov in push insb sbb push pusha mov pop inc xchg jecxz mov mov cs insb mov leave add rcrb lahf out stc mov mov mov jo mov add int3 mov dec imul sti sbb dec inc pop pop pop jno stos cmpsb inc (bad) or and jno sub jno inc mov loopne sbb jnp movsb inc int lods fistp les aas bound out cld push inc (bad) daa ljmp fsubr push pop or xchg ja scas cmpsl and les hlt mov xor fsubl ret test push push xor outsl sub neg lcall jg xor sahf cli mov sahf outsb frstor cmpsl loope mov jmp xor xor cmp pop pushf cmpsb lcall xchg aas pop add pop cmp xchg or mov aas jg mov stc or cmp xchg dec fs lcall adc in pop aaa mov add insb jns pop sub jnp cli sbb fldt int dec cs xchg inc pop xchg push xchg mov sbb mov xor xchg or xchg jno mov addr16 notb test mov sub add rcl push cmp insl sti inc mov loopne mov insl lods dec popf icebp out movsl pop imul sbb cmp inc stc xor orl cmp xlat jo rol adc inc movsl enter pop sti push or fwait cmp mov pop or inc aam into lahf xor insl pop lods (bad) sti push test push test dec mov call jo sbb xor or test adc pop xchg jb push or mov push (bad) andl mov push (bad) leave andl mov adc mov mov and push pusha outsl clc push icebp lret (bad) (bad) or lret ja push lret int or das xor mov sahf jbe and xchg jl pop out ja shlb xor lock fincstp (bad) push xchg cmp mov jne out movsb mov movsl or sub arpl roll dec adc add les mov add push (bad) js sbb cwtl mov inc hlt scas push cli sahf sbb push mov lea rcr and roll adc sub into out jl xor hlt push es mov ret lods ficom and std in nop jnp and stos das sti jmp and fsubrl ret loopne push mov loopne pop (bad) lret mov cmpsb mov jge pusha push loop pop loopne and mov dec cmpsl inc xchg jecxz or jmp mov cli loope,pn call or (bad) xorl pop sub sbb adc divl jno mov pop mov es mov sbb inc sub fdivrl or aam fisubrl iret fistpl hlt mulb add call jo pop mov xchg addl loopne mov mov xchg and (bad) mov inc in add loop in sub repz in repnz xor adc mov stos pop mov ret xchg cld cmp sbb adc out or cmpsb xchg div sub insl push jge imul popf (bad) aas mov movsb insl jg jp (bad) repnz test inc mov mov enter andl push sbb imull xchg jae sub dec xorl outsb insl in or popa jb or pop jae (bad) nop xor or insl icebp cmp cmpsb mov jno jecxz adc mov pop dec pushf int3 leave lea or dec jmp or push addr16 or lret sub out in push mov addb hlt lret and (bad) repnz into outsb movb push rolb sub aam sbb sbb arpl mov ficom mov xorb lock test inc shlb cltd pop pop and push aaa movsl lret out test mov bound and in cltd push rcr dec xchg das pop dec mov sahf enter xchg sti xor xchg sub jns inc xchg jmp add or pop pop mov ljmp cwtl mov clc outsb inc jp push mov mov xor push sbb xor push mov mov xor xor popa push fnstcw mov inc test out cwtl cld stc push lret xchg mov inc pop fisttp add insl cmp push cmpsb add lret adc scas xchg hlt xchg pusha in xchg and mov or or push jo xor nop andl pop jp cmp lahf pushf testl sbb stc mov jmp (bad) rcr jo test xor pop jne push pop rorl mov dec push bound je ss pop frstor and cmp xchg mul cmp add ljmp add fs outsb fisttp mov cs inc xchg mov xchg daa inc test jo ja mov adc cltd xchg xor (bad) push inc popa (bad) (bad) inc je sbb test sbb add xchg insb or iret test in mov mov daa or add mov adc cmp cltd sub pop push gs call push pop aad pop insb pushf sbb pop int3 (bad) lock xor sbb sub sub fbstp inc fwait xchg outsl sub xor sbb push cmp int stos lods shl mov cld adcl fsubrs les loopne pop mov xor pushf ret (bad) movsl adc sub shrl mov add (bad) addr16 in pop pop add jae loope repz stos stos test mov mov (bad) fmul or xorl xor sti jnp adc pop cmc jle inc fist loop adc mov das dec mov push fildl popf push cmpsl cmp dec cmc lahf adc xchg scas aam lcall les pop mov loope push addr16 ja mov jns (bad) xchg fsts add fnstsw orb sbb push das lds cmpsl lahf xchg adc cmpsl aam or je pop sub lods out (bad) sbb inc cmpsb popa mov adc adc scas inc test lahf (bad) lods cmp fdivl fmull xchg mov sti cmp stc ds pop sub xchg bound xchg popf sbb scas (bad) fwait xchg cmpl mov fdiv movsb and and stos cltd sbb push lock sbb mov xor mov cmc jmp lahf loop cmp je lock fwait mov xchg xor jo js mov mov dec aas and sbb fildl in cwtl mov clc movsb (bad) test cmpsl scas jnp fldcw loope mov pusha add leave mov push push dec xor add inc aad mov inc push dec jo dec out cmpxchg cmp push push les jmp mov push mov dec push (bad) fwait pop sbb jns sub loop sahf push sahf int mov ret mov (bad) iret xchg mov jo xor mov rcll inc in jge mov mov leave lahf sub mov in dec cmpsl or xchg pop imulb addb fistl and fwait cmpsl pop inc push sub out mov dec ja sarb adc xchg in sub shrb cmp es sub sar sub rorl push sbb rcr (bad) out jecxz je xor xchg push aas add ret or sarb shll rolb dec call enter out aas gs repnz std push bound pushf loopne xchg and xchg adc dec lea mov out out and push xor pop mov lahf movsl ja and sarb push dec xor sub int andb mov sub cmp test sub push add popa hlt dec xor xchg sub mulb mov lock daa dec hlt fcomip rdpmc adc cs mov cmp mov mov mov or test in sub loop fwait movsl outsl mov sbb adc xor gs push mov das orb pop cmpsl mov outsb (bad) fisttp out dec outsl push movsb sub inc sbb jbe push iret push es jp sbb xchg in clc ficom cmp and pop or test dec jae push loopne scas mov mov mov jecxz or add in sub nop pop lock lds pusha repz pop inc push and cld add sub (bad) and rclb and add or sub push pushf xchg js inc ret pop xlat mov in adc (bad) outsl lods mov cwtl mov js into add push xor sub clc jo popa adc repnz xchg (bad) int3 cmp out sahf decl mov mov nop sbb xor jne adc sbb pop xor cmpsb mov clc jg push les rcl cmp push stos inc adc in lds push loopne xchg and sbb push sbb xor lret pop or out xchg jp adc sbb sub mov (bad) addl idiv les jo mov xlat mov stos loope (bad) sbb out sub pop pop push sub lret scas mov add call aad (bad) outsb pop push sahf sbb xor xchg mov xor push add lock inc out js xor sti int pop hlt jb rcll mov push out mov xchg cmp repnz adc jl mov lods loope ljmp and repz popf xor xchg lahf loope cmp imul je mull or cmp xchg pushf mov mov dec fcmovne fcoml outsl loop add ret leave sub loope adc jl ljmp outsl adc mov div adc cwtl mov sub add pop or add add test cmpsb cltd fwait and jno in xchg sbb adc cmovs addb jno,pn cltd (bad) pop sub fsubl es cmc cmp in andl js iret fwait pop stos adc movsl jle imul dec loopne mov mov fbstp or stc aam inc idivb cmp xchg push lcall sbb call mov push sub cmp cltd fistp icebp push cmc outsl and inc lahf stos and cmp stos pop rcll imul test test scas or (bad) jbe bound lahf jp add das dec mov adc sbb clc push add pop xchg or adc bound cld mov sub popa push adc cmp les adc mov out sub push xor je movsl dec in mov dec sbb sti xchg mov (bad) dec push xchg cmc mov add fcoml repz call cmpsl mov daa pop sar mov ss test scas cs call cltd mov shrl aas or add inc arpl and jl or in stos out mov inc xor scas es sbb stos es (bad) jl xor aam lods sahf (bad) mov je iret or cld xchg pop hlt loope add (bad) adc sti sub je lock inc repz push pop adc pop insb and clc je push test push sti mov mov ja push fucomi in (bad) lock (bad) arpl cmp jns aas sbb ret push mov imul out fisubr mov rolb (bad) mov push lcall fs sub inc sbbb (bad) xchg fcom nop cld mov movsl je sub xchg imul repnz cmp in addb test loope loop cmp (bad) pop test out int jecxz sbb shrl ljmp xchg in nop shll mov or lods mov adc pop jl sbb mov and gs jl or les dec mov idivl sub cmpsb mov mov push add and mov push sub cmpsl pop ljmp cwtl mov mov or arpl dec sbb dec es adc pop mov mov movsb jno scas and je jae std aaa add xchg or inc cmp (bad) movsb lds sbb add cmp outsb fstpt mov iret cmp sti cmp pop add dec xorb cltd jae popf fs pop cmpsl pushl pop adc push (bad) scas or and cmpsb (bad) std mov jnp adc pop arpl rorl adc jecxz push outsl jb lcall (bad) push lret jecxz and cmp jp and inc mov notb push ret xchg sbb out cmp test jp mov sub add aam cs jbe ret lds dec push push adc xchg shrb lahf gs xchg or aam xorb ret sub in pop push mov pushl dec movsl incb (bad) lret into addl pop jbe,pn sub push mov push mov popf imul inc jbe lock sahf insb sbb mov xchg push xchg lcall xchg xchg inc cmc ret loopne pop fnstenv xor rol push jmp fs lahf push mov fiadd cltd cmp or dec lea cmp mov out inc sub pushaw mov popa inc jo icebp cli mov fsubs and ret popf push adc aas adc je ljmp add adc cmpsl fild sbb mov es inc add fisubr ret xchg call jmp mov jo xchg add sub push fs xchg ret inc int3 inc dec or fstpl ret jbe push (bad) mov scas call mov (bad) cld arpl loope in shrl es mov push mov dec iret ja sbb push (bad) fs movsl xor call xlat leave loope mov stos imul xlat setle (bad) or xor push add push cmpsb xor mov sti jns xchg ret movsl xor cltd xchg mov dec adc mov push sub add ljmp (bad) fsubrl movsb xchg cld imul cld imul (bad) call stos mov pop or inc inc lar icebp cmp dec jns mov mov xchg gs leave add xor push mov (bad) pop ja cmp ror dec out arpl xor aaa hlt dec (bad) jo mov repz jnp loop orb xchg xlat popa out stos cli ljmp xlat je bound cld add mov sub std dec mov mov insl inc cld cmpsl jp enter pusha jb (bad) xor or sub jb xchg movsb sbb pop and mov pop js push movsb shrl push je lock cmc or dec fcoml stos decb int lcall dec sbb pop sbb sub cmp out jge mov jp jge sbb lods stc (bad) call mov xor outsb push stos jle jae loope sub jl mov ficomp or mov les (bad) mov mov (bad) jbe lcall add shlb insb inc pop pop and pmaxsw in add lods pop rcll leave mov add push sahf pop add mov stos imul je test sub mov inc pop pop jmp sbb imul dec or scas aas cmc sub dec jb int ret dec xchg and mov mov loop mov or out xchg mov (bad) pop xchg xchg xchg call push mov and (bad) dec repz xchg test push mov fcoml cmp movsl push cltd xlat pushf cmp fs (bad) jae call mov sub mov sub imul out xchg cmp or rcl rcrl in sahf (bad) arpl sub pop mov mov in mov rorl cmp scas ffree enter pop insl sub imul push xchg bound mov aad xchg std shrb push mov jl aaa sub mov cmp gs clc adc mov inc out xchg xchg cli fbld jl (bad) or test push and test ffreep out mov (bad) jg cwtl cmp jnp (bad) in pusha xchg add cwtl iret push dec lahf (bad) fisubrl dec dec dec test inc in popa bound dec aam sti sbb stos movsl add and loope add (bad) sti mov addr16 out rol xchg in adc aaa dec fsts mov jbe jnp add out das add scas sub pop xchg mov cmp mov add orl int3 mov cmpsb cmp popa mov push jae and lds mov lods clc dec shrl test or popf popf sbb fisttpll loope out jno and or cld iret and lcall mov ja ds imul adc mov pop xlat inc sub lds pop loope (bad) insl add aas push cmp insl jnp (bad) add imul ficompl hlt dec cmp jecxz adc push sub mov push (bad) mov jl sbb dec push xor dec dec test push push sbb repz add outsl push sarb xchg stos cld adc gs jns div lcall subb xor push xor xchg rcrb pop and pcmpeqd jae enter pushf div mov pop stos das or adc lcall push repnz arpl jp je xchg or lds xchg sbb sbb daa movb mov inc cmpsl call (bad) mov inc jecxz bound pop aad or xchg adc data16 cmp mov ja aas pop arpl mov xlat shrb ja (bad) outsl inc loopne cmp mov xchg push sbb inc icebp dec or in dec mov pusha cmpsb lahf fidivl or add add movsl xchg jp lret dec pop pop adc pop mov dec lcall add jl insb int jbe (bad) dec sub push sbb das pop fcmovnb jne mov movsl (bad) dec js repnz mov je arpl (bad) es icebp push sbb fcompl cld or bound fs ds (bad) mov sarl sbb ljmp ud1 cli test dec stos lea imul xchg pop (bad) mov inc xchg inc add pushf push cmp inc je test outsl pop or aam mov cmc pop bound ret dec outsl test aad xor cs es adc fmuls cli and stos mov mov and or mov mov sahf push xor inc into enter stos mov outsb add inc add pop jl call sub dec dec in clc in (bad) or or or insb push popa dec outsl xchg hlt ret inc sarl shlb jbe daa pop push pop push movsl cmpsl push jge imul xor stos inc cs test les cli and add pop jns shrl sti nop mov and cwtl idivl xlat std mov je mov ret add stos mov jne adc lahf push cltd lods mov jp pop in sbb cmp outsb jbe hlt and loope hlt sti sub aas lahf (bad) movsb mov aas stc aaa pop loope ret inc lret xor pop dec mov jmp mov add push (bad) adc out adc stc (bad) xor lods testl mov inc pop xor lret push test outsb les jecxz lock mov stc xor fldl jbe xchg mov push loop cli lods test std insb mov es mov fs fldlg2 out insb xor jno enter sbbl into (bad) in mov les and dec nop mov push pop pop jae iret mov lods pop inc jae jge in cmp xor stos pop push lods nop ljmp aas loop mov xor mov xchg frstor and frstor xor (bad) jp fidivl xchg pop jle das loop sub ret and xor fs xor lods cmp xchg adc jb pop test (bad) add dec adc mov outsb inc repz arpl arpl out xchg adc cmp mov addb cmpl clc dec (bad) out out push rcll les rorb icebp xor cli je addr16 mov push mov pusha push cmp pop xor stos xlat aas mov cwtl push lahf stc (bad) test pushf adc pop cmp mov gs push pop pop stos inc ret jecxz call inc and inc mov out add sub cmp (bad) or lods repz mov and (bad) js stos push pushf movsl adc push or pop add lock xor mov cmp daa inc pop mov jns je cmp lahf movsb dec xchg jecxz notl jb pop cmp mov (bad) sarl shrb jb out mov xor stos int push push iret in movsl mov mov adc rcll inc mov sub mov out iret fwait mov inc ja inc addl dec jne lock std and and mov cli sarl fwait pusha mov add xchg imul out or enter add pop mov popf or sahf inc sbb (bad) repnz mov ret stos jno inc push sub push mov cmp addl lret xor pop dec aaa movsb inc push hlt jns lret outsb push xchg xchg outsb jmp xor dec test sti cmp jmp add es mov loope xor and jecxz push jge push pop mov addl pop jnp ja ret cmp xchg fmul mov and (bad) repnz inc test jle dec out pop scas (bad) out lea mov lcall push ret aam pop roll orl idivl sbb lods lahf pusha mov sti (bad) test aam sbb push repnz dec jae ljmp lcall jno push imul pop push scas add lods push dec jl test inc movsl sbb and xor cmp xchg jl test loop imul loop dec imul aad pop adc loop into and ret enter les imul (bad) repnz cltd mov je jmp and hlt loop pusha dec xchg sub xor loope in or cwtl mov push xchg cmp ljmp mov or push shrb or dec cmp xchg scas test xor jno notb pop push inc mov sbb push movsl sarb dec out sti xchg (bad) aad pop mov pop jmp xchg add dec icebp (bad) xlat xadd out pop or mov (bad) (bad) lahf inc insb sbb push mov (bad) sar (bad) pop mov (bad) int3 fnsetpm(287 lock mov (bad) adc aaa add ljmp lcall pop xor int3 and pop dec pop and adc xor jne decb push jb push int push xchg push lahf or mov adc and jp into add sbb add push mov xchg icebp pop pop add int3 pop pop popf repz adc mov or int loopne lods push or outsl pop mov sub push sti movsl ss into fnstcw stos push cmp sahf cwtl repz loop xchg stos into push ds and test sbb inc lahf repnz jne popf mov xor push iret push sbb lahf mov jns and mull add pop fwait cli imul sbb hlt scas loope sub mov iret mov es loope push pop or push ljmp lea loope xchg rol jge outsb aaa arpl jb dec sti ljmp xor add add jle movsl je js,pn sub add shll je aas int inc popa dec sarl push stc jnp and (bad) pop sti aam out xor mov pop pop loope and xchg rcll adc cmp jae pop iret lret jge ret mov mov je rorb jle loopne insl lcall rclb add dec or and adc fdivs dec ds lea fcoms sbb jge xor lods cwtl mov inc imul jecxz loope nop dec push out mulb and int or mov sub lock cmp in pushf push cwtl and xor lcall cmc loop cwtl sub adcl (bad) popa jo sub mov lea in sbb jle ret dec adc jno outsl mov xchg and inc fidivl mov add push xchg mov test outsb call cmc mov notb jne dec ljmp in popa xor push cltd mov pusha stc jo jno je pusha jecxz sbb ljmp rorl dec icebp cltd xchg jmp repz in xor xchg xor lcall mov mov sub stc clc xor call xorl (bad) add push testb or add add sahf mov xchg addl adc cmp dec pop insb ret call inc rcrl lret xchg cmp jo int3 cltd imul aaa sub adc (bad) int3 fnstsw xor xchg push dec jp ror leave insb jne outsb ret sub mov pusha sub js mov sbb mulb mov (bad) cmp (bad) mov sbb mov cli imul sbb mov xchg push jb fnstenv mov test xor pop mov cmp (bad) and jecxz fdivs in mov stos sti mov movb xor inc pop push sbb packssdw jns aaa inc (bad) (bad) push jns mov sub cli xor cmp pop notl pusha out push dec in inc xor dec shll loop orl inc in and pusha inc movsl out inc xchg stc fsubrl add out and addl inc xchg cmp or iret sahf cwtl roll xchg std adc movsl cmpsl xchg fstl in (bad) nop xor push (bad) test iret movsl js sub iret out lds pop (bad) into xchg or push hlt sub cmp cmp and lahf mov icebp sub push std punpckhwd shrl sub outsb jge imul fisubl pop jle aam outsb lock icebp in scas cmp int3 rcrl sahf mov jnp cmp gs mov movsl adc sbbl loopne fidiv aad pop push sahf jo ror outsl xor clc mov push jmp pop xor and aas test push pop out mov mov ljmp pushf jb popa sub ja add scas and jo adc ss mov xchg mov inc mov push cltd cmp and or test mov push sahf or xor aam pop sub sbb push repz dec jbe aam inc mov hlt (bad) jp test arpl mov imul nop jge dec ret daa ljmp xchg dec sti pushf sub add dec out cmp cmp push ret sti mov hlt sub add or dec fwait xchg daa pop mov or sub lahf dec loopne sarb icebp push test shrl fldl test lret (bad) (bad) lret add fldt fstpt xor dec data16 xor stos arpl arpl xchg push jns add cs mov sbb aaa xlat jo ret fwait mov aad int push and loope add arpl mov (bad) js and outsl stos mov pop bound gs sbb loopne xor in cmpsb jmp fsubrp fs subl push (bad) jl cld sbb sti jb adc andb cmp fldt loopne inc push in popa sub in mov xchg hlt inc fldt and mov rorl cwtl call addr16 addr16 add arpl mov fiaddl and and in mov cwtl lock test inc in imul push mov (bad) clc das mov lock loope scas mov sub push dec les ret pop aam leave mov sbb out sar pop sub mov mov mov (bad) or pop int3 (bad) mov xchg or sub xchg rorl aaa jbe je imul adc insb lods sub pop and jle stos outsb fldcw xchg fisttp (bad) push cmc sub lret xchg and inc push stos fs stos fdivrl xchg mul pusha lds out dec insl adc adc push push inc je mov arpl out sbb push jp mov push mov inc ja mov icebp xchg xchg shrb push push cli cmp mov jo cmp popf dec push clc and and out mov fiaddl cli mov push lahf (bad) xchg lret and adc sbb push or jns mov jecxz push les push push daa sub jns inc bswap (bad) pop dec add push ret xor int3 adc ret jae xor call pop xor pop add lret sub icebp jo test popf pop rorb shll push inc cmpsl xchg out inc daa jbe xchg arpl jg ds test in adc push aad imul xor xlat notb and ret leave mov outsb divb xchg jl test or jae jnp dec mov ds dec pop xor into mov dec iret or xchg adc mov pop ficoml rcrl or stc (bad) fist and or fcmovu mov in stos fcompl xor xor mov lret or push repz (bad) inc or cwtl sbb cmpsb (bad) add repnz call jmp jmp dec cmpsl push or outsb jne mov dec inc lahf lods push dec je into scas lret int out fisub repz mov push jae dec fdivrl sub mov adc xchg movsb clc sbb into adcb je mov mull int cld sub mov inc jno pop test xor cmp leave cltd (bad) rcr ds push and fucom ljmp xchg mov cs pop into imulb lahf dec xor clc or cmp adc push sbb ljmp hlt je jge xchg and inc fs xchg mov mov loopne test (bad) cmc popf adc lahf xchg mov nop movsl xor rclb (bad) imul or ja repnz lcall or int mov addl mov ja fdiv (bad) xchg sub xor xchg add or clc fisubl xchg adc leave loop mov movsb xchg pop and sub adc addr16 sbb xchg and sub sub mov pop cli mov nop (bad) mov stos test sbb mov sbb push mov sbb inc push enter jge bound shufps pop iret pop xor inc push dec js or mov and jbe mov mov lret push lahf jecxz (bad) popf cli mov mov es out gs loope sti pop push inc rcl mov std mov stos mov jecxz push pop fldl mov mov cmp loop dec push ja ret je push sbb xchg mov jne repnz and inc mov sub push or clc dec push cmp sub pop inc es mov sbb lret cmpsb push mov mov cmpsl cmpsl mov sbb cmpsb rcll clc sbb mov vmulpd stc mov xchg mov lods dec or sti std cmp ss add into or mov pop inc nop pop in jle ja and stos lds test fidivr dec sub xor push inc sbb pusha cltd lods push in dec test cmp mov sbb rcll mov inc loop fldenv pop sub js sbb in pop fistpll in mov arpl (bad) jb stc xchg cli mov flds inc or jns frstor mov out adc jl cld lods ret add orl fistpll hlt notb jnp divb xor jnp fwait xchg cmp jae add aaa push dec fidivr xor dec mov adcl xchg mov jb clc idivl in xor fsubrs jp lods into ss es sub add call xor xor lea cmc mov ja (bad) lock xchg shlb lock out in xchg lods dec out movsb les or adc pop or push inc cmp sti jmp cmp iret cmpl dec pop jne cmp xor andl push addr16 adc mov cmpsb push icebp stc iret mov mov sbb incl ret lahf mov (bad) (bad) xor pop and (bad) sbb ret jne mov pop and movsl scas std out push aad mov cld jg outsb out (bad) mov or dec loope out or pop in pop pop loope mov push inc shl cmp or dec icebp dec mov cmp push sub ret sbb in mov mov (bad) or mov int bound clc mov sub test jmp xchg cmp pop leave outsb mov clc dec in inc push mulb icebp lock mov pushf dec mov mov ret outsb mov jno cmpsb push daa dec sub jne jp out jge xchg out stc rep push dec outsl (bad) lods mov xchg mov js xchg add insb mov rcrl test dec sbb addr16 jb rcll sub sub sahf subb push xchg nop push ds cmp sahf jg jno xorl sbb mov js jae add and in pop mov cmc pop cmp cmc mov insb inc (bad) xchg imul adc scas insb cmc test aad push add (bad) (bad) lret (bad) jb xrelease or fwait (bad) aaa or cmp jnp mov adc imul mov aaa adc mov rcrb dec sbb fcoms xlat fistpl pop out adc sbb fidivr fmulp arpl sbb imul sarl push out xlat lahf iret sub push mov push xlat int pusha fidivl push push in call sub (bad) aas inc push stos popf add (bad) jnp mov mov mov idiv out and shrb stos lea icebp sbb pop xchg (bad) and enter stos push movsl in sub xchg mov cwtl xor dec jp loope push sti and fildll sbb cmpsb sub dec ret insb sti insl stos and dec ret pop inc push adc push and std mov outsb (bad) ljmp les jnp inc insl (bad) out sbb shl and lds pop sbb push jo mov faddl ja nop sbb jbe mov (bad) dec or jl sub mov fisttpl pop in (bad) xchg xchg fsubrl std insb mov inc sbb sahf xor cmp xor sub xor xchg inc xor call in stos mov and cmp push cmp inc jecxz popa adc dec ljmp arpl push iret es jb add add push add aad inc jb xor bound mov icebp fcomps inc imul ds aam push adc idiv cld sahf mov sarb jp lods ljmp xor test cmp in cmp mov xor popa dec cmp fcoms jne hlt out or lods sbb test sub mov dec stc push or sbb xor fdivl mov xor push and lret ds pop popl mov jne cmc mov xchg dec nop jecxz rcrb mov push cmpsb fistl inc mov les pop or test dec pop int3 sbb inc cmp ret jns mov push pcmpeqb in jns (bad) jno in xchg mov lcall jmp pop (bad) or inc lret scas pop fnop jmp lret and or xlat dec push out std rol es jmp inc sub xorl push adc stos dec and into mov in rolb pop out fld leave mov adc sahf stos aad cmp enter sahf adcb popa popf out sti mov adc add outsb lods test stc sbb inc iret leave loope push aas movsb lahf lret mov push pop jns addr16 mov adc adc mov jno enter hlt (bad) lock pop imul xor or mov mov fdivrl mov or sti hlt insl push and push ret (bad) idiv sti cmp pmaxub xor cmpsb mov pushf mov imul cmp stc bound cmp int fsubs scas mov xchg mov mov (bad) daa pop or sbb push mov inc sbb das popa mov xchg pop scas sub lds jecxz or mov jbe in xchg outsb scas jbe and div (bad) pop and jp sar mov jmp mov mul dec lock sub repz xlat mov sbb dec rorb mov in in sub fs fnstenv adc sbb (bad) sti cmp xchg aam push (bad) cmp jo mov insb rcrl jnp int3 pop sub inc mov pop repnz mov mov lds pop mov aad pop fdivrs call test mov ss insl fs pop add add loop out fisubr jmp movsl aas dec das pop idiv fldl jne int scas xchg cli pop push cvttps2pi int inc adc aas imul orl jne es je sbb (bad) jl sub pop xchg je push push xor lea loope fwait jbe lock sub jnp mov fadds or cmp pop cmp add dec faddl test out fistpl mov jl xor jl push sub cld mov and or test in (bad) imul lods mov movsb sbb ret mov pusha test addl push pusha cli popa mov pop test test xor stc cmpsb mov mov lods or scas loope pop cwtl outsl pop dec lock sub push or mov push pop xchg mov inc pop mov call lods mov (bad) mov mov lret xor inc xor ds int push outsl jno sub pop dec dec cmp stos cmc jg xor scas mov push xlat jbe mov jne pushl sbb xchg push int lcall jp dec mov ret pop mov hlt cmp hlt inc test repz pop (bad) (bad) es mov je test and xor test (bad) sub std jl push les sbb xchg adc pause lcall fimull hlt mov lock inc jnp adc adc cmp inc sbb imul jmp xchg xor fiadd sbb enter pop push or dec dec lock cld ljmp sub lea scas repnz lahf out xor (bad) fldcw sahf and neg rcl popf repz mov inc aam add sbb aad and jg mov push push mov dec fs and and inc jecxz cltd xchg mov mov jbe dec mov cmp cmp loope push test inc pop xchg xchg push jns jl movsb fmull (bad) jmp push dec dec adc lret inc adc out xor inc hlt movsb lcall stc sbb xor adc ss dec test popa adc loop adc idivb sub sti sbb cmp or dec insb mov lea insb insl jnp push mov aam mov push notl aaa xor aas lahf jbe sub hlt push mov pop outsl xchg sbb ljmp in mov add lods inc les xor inc fwait mov or cmc out sbbl or or les mov lods iret cmp daa cmp xor mov add andb mov pop mov mov mov push add xchg std mov xchg or aad add outsb dec imul jns loop push mov xchg jle lods jmp pop testb (bad) mov add mov xchg test fnstcw mov inc rcrl or nop sbb std jae pop xchg cmp jno mov sub int fcmovu ret (bad) (bad) repz push (bad) mov cmp (bad) and cwtl cmp rolb daa jae ret cwtl pop icebp lcall xor jo lea sub add cwtl addr16 fs sbb out sbb in notl cmp aaa addr16 enter pop jmp nop xor jmp jge loope sub es mov lret fwait sub inc (bad) push ret mov and and leave pop roll pop sbb mov scas add push push push sbb jge shrl xchg hlt cmc cwtl js fidivl sub sbb dec lds clc dec xchg call cmc jns sbb jecxz inc popf les pusha int3 jecxz movsb sbb sbb dec aam mov imul (bad) aam jle or int3 pushf cmc cs pop sub mov popa jmp mov test imul add dec and pusha push mov adc ficompl outsl cltd inc out inc jl or sub xor xor (bad) bound and add cld xchg cmp loopne pop and push lds testb adc int3 and or fs push cld jg (bad) call lret xor lods sti dec das pop jbe out xor cmpsl cmpsl xchg dec mov xchg fisub mov cmp loopne cld and outsb test movsl ds (bad) mov loope cmpsb dec into jne loop pushf mov arpl pop xchg aad decl cmp and test push pop aas hlt int3 sbb dec pop mov or pop lcall ljmp test dec sub xchg in push ret push jbe adc mov mov out loop mov shrl outsb les repz and ja pusha cwtl push les test (bad) mov movsb dec xchg sub push pop cmp adc int jg jbe mov cmp inc and jecxz mov stos or movsb mov mov iret cs dec dec push loopne and loope pop jns mov in je dec adc push mov jae inc test dec sub pop (bad) mov leave add push les out iret fstpt or adc xor sbb fcoml inc out or movl push sbb xchg jne das pop xchg ja mov cmpsb fstpt hlt push std jg xor enter in inc daa popf jmp aam decb mov jnp lock lret mov in loopne fsubrs (bad) dec mov lcall cli xor pushf mov jmp lret inc cmpsl (bad) cmp je push xchg into xor sub mov pop fildll adc mov cmp popa mov mov mov lods pop cwtl lret ja or sub pop push imul adc xchg les sub mull int3 andb div cmc sti stc cmp jae int in xchg mov shlb enter push pop mov ret das dec push and testl jl and pop aas movsl lock xchg pop out jno cmpsl cwtl in jbe roll cld xchg test imul mov shrl jl inc rol xchg pop mov and add pushf inc mulb shlb or mov sub lods int3 xchg pop popf loope andb (bad) je in repz jbe cltd stos mov aam pusha xchg in outsb sbb gs xor jo,pt lods test out pop (bad) cmp sbb mov outsb or push mov xor push cmpsb mov popa ss or outsl fld (bad) mov xchg ljmp adc mov adc rcrb cmp dec mov jp inc mov mov jae jle popf in push mov jne push lods cmp jbe push out jne insl or ljmp mov push sti or loope repz ljmp xchg inc je loopne mov or dec dec (bad) mov push fstpt mov not loope (bad) pop push lret mov inc das pop popf inc or mov les mov imul mov repnz sub sbb mov sahf aad dec outsb jl xchg mov test mov lret xchg int3 insl inc jg xor push dec pop lods je rcrl mov fadd dec aad adc mov mov mov sahf xor (bad) pop fs int loope adc (bad) fisttp lret jne sbb in repz or shll fidiv xchg aaa xchg clc cmp (bad) and xor std xchg rol cltd cs jae inc xor add mov dec jge leave pop push sbb add xchg mov pusha mov jle dec inc outsl sbb adc leave aad out les sub mov xor rcl dec in pop aas dec push xor jle lret xchg leave je push lret mov fisttpl jne flds mov loopne and loopne arpl sub and mov out jb mov ret lods mov and in push outsb inc mov push les js sbb inc mov movsb jecxz push hlt movl lds cmp cli aad in mov adc add push sbbb lcall xor andl pop loope pop cmp xlat cmp lods cld xchg sbb sub in dec rorl lcall stos icebp lea stc imul out bound xchg inc fxch xchg mov push push movsb mov cmp xlat lahf fs pop and daa shll das (bad) push popf outsl push sub les in cs fwait (bad) mov jae mov xor xlat xchg and mov pop sbb pop mov lods rorl pop mov jmp or mov push out mov cmpsl out or dec (bad) fldt es sbb jecxz insb out mov aas loop sub add mov int3 fst sbbb stc loop or inc fisub push mov ds (bad) aas ficoml dec inc lock into inc jecxz into incb cltd fild outsb mov mov or push add mov mov shll pop mov sub in pop inc push out jle imul (bad) repz popa xlat jl or pop (bad) mov in rclb jno and into fdivrl jnp xchg fisubl stos or test xchg mov dec jmp pop sub xor cmc daa or (bad) mov xchg push loopne ret insb (bad) shl js,pn gs jp enter jle ss adc sbb test xor pushf (bad) dec sub stos pop xchg xchg lahf sub pop inc push mov pop mov mov (bad) adc or xor loopne mov jno add sbb out jg outsb sbb or jmp push mov and jl adc repz push inc addr16 mov int ret enter dec pop arpl cmpsb insb or xchg xchg pop pop nop repnz es sbb pop sbb cmp fdiv repz movsb loopne mov add imul int les inc pop xlat sbb add lahf or (bad) inc pop push inc sbb aam xchg std (bad) mov subl jge and icebp fs xchg mov pushf (bad) mov cmpl iret fsubl xchg cld mov sub jae lret xor popf fcomps lcall out (bad) cmc sbb jnp fucomp (bad) ljmp push push addl repnz jnp mov pusha sub lods fidivr imul push mov cmpsl ret cmp jbe xor int3 xor mov fst cwtl fs icebp outsb ret cmp xchg decb xchg inc pop fwait dec mov jb push das es or mov push jg jmp aam sbb adc jne add dec xchg outsb mov les sbb add stos cmpsb sar lahf int3 jg lods adc xor bound in inc xchg push (bad) (bad) pop testl shrb sbb pop sbb xchg je lods jp lds sti cmp push call sub (bad) out js dec mov and aam xchg or sub sbb inc daa out pop mov mov mov dec in rcl clc dec inc test stos mov pcmpeqb (bad) int3 aam push in lret aaa dec mov mov imul xchg (bad) stos xchg setns xchg sbb dec lcall scas and pop or jmp icebp fstps jle sub push mov test xchg inc scas xor gs jecxz loopne xchg mov xchg fisub mov sbb push aaa loope mov mov fisub sbb inc add pop (bad) pop xor push in int3 je push or mov lock sbb add mov gs (bad) enter add nop or xor and das push mov lgs mov arpl dec xchg sub dec jle sbb ds inc je add dec pop mov xchg andl pop (bad) repz loopne aas lods mov mov mov out lea add inc fcmovne int3 iret shll push mov adc mov in loope loopne and mov cmp mov inc and cmp aad ret rcl mov out cli pop int3 int3 inc (bad) or mov sti pop push psrld mov mov sbb inc ficompl sub bound pop scas mov loop out mov pop cmpsb add pop sub ficom dec je pop cmp les push jbe dec jbe or lods dec sbb pop fadds es loopne js and popf pop inc sub mov cmp mov out mov or adc imul add cltd cltd mov mov or cmpsl add xchg rorl push cmp lea add dec xor jne insl mov push dec cmpsl mov lahf imul sbb loopne loope or mov outsb jl dec mov std xchg rol push sbb jl xor cli mov repz and inc loope or inc repnz (bad) data16 lods out bound fnsave inc inc sahf and mov lock and dec and test push dec and daa mov in push mov subb mov mov and in inc mov lds adc fildll inc aaa cmpxchg8b (bad) iret movsb cs xchg loop addr16 clc mov xchg or out add fstp add cmp fbld stos push mov and mov and xchg sub in shrb arpl adc push js mov mov cmp (bad) sbb lret repz movsb or out jecxz stos adc idivb lods cli mov lret in popa dec mov out mov cmp addl pushf inc and mov mov test push sbb outsl adc or mov jge ja sbb (bad) mov mov call sub sub cld outsl adc mov pushf inc mov sub in mov xchg pop loop enter inc (bad) mov sbb xor aas xlat push or cmpsb pop loopne stos rdtsc push int push movl jns rorb mov ds leave cs add mov xchg or es sbb aad movsb stos mov push in mov lret fisttp pop xor fidivl pop loopne je push into mov cmpsb lret mov jne mov mov iret mov push sub ss lock mov aam in xchg xchg push iret jne (bad) push mov dec add push and dec bound (bad) or and xlat scas cmp int3 mov in ficompl ror mov sub dec outsl pop mov push sub cli mov cmpsl jl aam sbb xlat adc das push cmpsb repnz pop ficomp xchg loop loope sub and xchg jecxz mov loop,pn and mov dec cli lret fild fsubp jecxz xor jecxz mov or out sbb (bad) or hlt inc inc or xchg xor iret lods popa mov std test inc add mov mov ficompl adc pop enter pop shrl ljmp adc mov jne xchg loope test lods push mov (bad) outsl xor cmc pusha out lods sub and xor shlb (bad) aas push dec cmp (bad) (bad) mov push (bad) insl mov in imul push (bad) sub ss dec xchg int3 sbb push sub mov test xor call out ja test adc out add mov outsb dec mov fidivr jnp cmp adc fcoms adc dec pop in call add lahf cmp mov sti xlat stc (bad) (bad) xor xchg xchg ret ja cmp push jg push add inc jnp push iret cmpsl and sbb pop xor mov pop das dec movsb sub test fs in push scas shl pop inc fsqrt test mov je lret cmp inc scas test popf ficom popa pop imul test mov pop pop out movsb cmpsl mov cltd jp dec int3 icebp dec xor outsl sbb xorl sbb pop imul cli jecxz insb pop scas imul adc sbb (bad) cmp jmp ja add cmp aaa mov push jae out loop inc xchg repnz add lods lock cmpsl add mov xor popa pop dec lret dec xchg adc sbb mov out xchg je pop and mov add push push bound and stc cld fs sbb je sbbb movsl out lret rcrl mov adc fsubl adc mov enter push repnz mul mov pop add call mov adc push mov mov loopne mov outsl lret pop xor dec mov dec or das imul mov xor cltd inc dec inc nop xor adc pop xchg lods mov cltd push add mov (bad) js sub dec adc test inc jns sbb cmpsl aaa dec xchg in push and and adc and adc add jge or xchg sub rcll add push cmp cmp sbb xchg out sbb ja sbb rol pop mov jne insl movsb add ret mov add xchg popf scas int3 push mov cmc test lods shrl cs inc outsl loope fcmovu push dec in pop xchg dec hlt popf rcrb mov insl rorb jp lods inc adc jl int3 lds add outsl and test mov roll add test adc fcompl aaa jo in orb aam mov popf pop jo movsl xor incl shlb sbb inc sub lea lret inc (bad) enter imul and push cmc jg test arpl call sbb lock out lea (bad) mov aad adc jecxz or push xor movsb in inc fistpll std dec outsb mov jecxz scas fidivrl rcrl dec jns stc xor movsl or jp pop xor inc aaa (bad) cmp mov sub scas in ret xchg (bad) cltd or test test xchg icebp jnp stos mov xchg rcll and mov int3 jo ja (bad) fcomp les loop imul arpl xchg repz pop xchg pop imul pop clc (bad) xor jnp movb loopnew cltd aad adc clc pop or or or inc (bad) lret lds mov xchg or aas lds sub add jns std mov jnp jmp movl and out adc adc into pop sub test test jbe xor in shll lret adc pop lds xor mov push mov dec pop jl lcall or and cmp and movsb lods push inc hlt xor or aam jo (bad) test aas add jp sahf cmp jmp out es or repnz pop daa xor arpl in xor repz sbb fs daa pop ja jecxz cltd and jae lods bound pop inc std dec add pop or xchg inc test jp fdivrp mov jge mov mov stos dec (bad) add adc dec mov stos sub aam and in xchg in (bad) scas adc mov inc ja jno in xorl (bad) lcall orl adc xor mov xchg movb mov pop sub enter (bad) hlt mov hlt push add adc jae arpl add mov leave mov cli push lock hlt cmc je xor fidivl in arpl sub push and xor pop dec add and dec hlt push mov adc jne jns adc daa lret lcall add xor js mov in pop xchg or repz mov fcompl add aaa inc adc inc xchg pop stos pushf pop jp mov cmp push nop sub cmp add add test xchg test (bad) xchg cmpsl imul int3 mov pop fiadd roll aaa mov sbb mov inc pop lret popf out sar cmp or out mov call stos lret jmp in mov sub mov (bad) xor fs (bad) inc leave test dec aam jg pop lds imul (bad) dec push (bad) and mov mov notb mov pop mov or sarb cmp mov lret lods daa mov xchg fildll sub pop push fadds scas or in mov adc or mov into pop jae es pop cwtl (bad) stos (bad) mov out clc inc inc (bad) cli pusha ds (bad) (bad) dec icebp mov sub cmp aad (bad) mov jecxz pushf call mov jle inc inc imul mov inc sbb add add mov daa dec lds scas imul mov mov (bad) adc popa cmp pusha jl dec lret neg inc jg jecxz std inc cmc ss mov js push das xlat bound jno mov fdivl test test ficoml pusha add or cmp aaa mov pop pop outsl cmc dec mov jmp xchg bound scas ret pop sbb xchg cmp pop push sbb xchg sbb inc or pop dec mul adc push push ja nop mov lret shrb stc jno inc pop xchg sub out pop inc jmp outsl jno push cs push cmpsl inc and (bad) mov push gs cmp mov sbb xor inc sbb dec scas mov (bad) jge (bad) xor cltd sub daa cmp inc ss xchg sbb add push out loope sbb jecxz fstl addl adc (bad) adc dec dec daa cli push xchg pop mov (bad) jb hlt add nop sbb ljmp cwtl inc in sub add sub sbb add mov xor leave jne pop and loope in test je xor cmp cld inc into clc insl or mov into mov lret cmpsl sbb and dec sbb fcomi pushf and es into cmp cmp (bad) sub insl repnz lcall mov sbb cwtl mov out outsl mov scas ror dec (bad) decl lret sbb lret aaa insl leave xchg xchg test pop or (bad) cltd add stos cltd in arpl mov xchg popa setno xor mov subb dec loope jo push xchg cltd (bad) mov call sahf pop (bad) enter test add arpl addr16 jle aaa rcrb sub mov fcomi jb cmp test addr16 out lahf sbb sbb loopne inc jmp ljmp mov jmp int jle sub and or jmp mov (bad) sti push mov mov mov adc cmpsb and (bad) and mov cmpsb scas sub push (bad) jp lods mov (bad) aam (bad) lds aaa fs dec adc inc dec mov push xchg inc cmp sub fdivl into or int3 and sub and out jmp ret mov inc pop mov movl imul loope mov jb adc ds mov sti jmp leave pop ficompl cld in cmp clc in bound fdivs mov stc dec xchg movsl sub mov cmp je pop dec fwait mov jecxz lea add and lret (bad) mov sub std pushf xchg (bad) cmp mov hlt out div aaa jns dec imul dec in out push pop pop or imul fsubl inc push cmp das cmp adc adc cltd hlt and movsb hlt enter lock (bad) push aas ss pushf add push (bad) jae lods in mov jg aad lods sub ret mov jecxz push out push aad (bad) ljmp mov mov mov add pop or fisttp and jb sub nop lods rol lret mov jnp jno ret ja out das rorl xor mov imul sub mov icebp nop adc jl roll jb cld sub adc iret pop fnstcw lahf leave mov cmpsb or jmp or xor test arpl mov dec mov ficompl popa push out push jne loope test pop mov or imul mov mov adc lahf inc fwait push adc jecxz cwtl mov (bad) dec out xchg dec mov mull pop or adc jge adc outsb pop popl jmp movsb dec notl adc cmp xor jg push scas dec fadd pop or popf (bad) mov cltd mov add push lret lcall cmp mov gs adc stc scas (bad) dec loop pushf cmp xor adc jmp dec insb pushf mov ja or icebp jno sbb inc pop clc xlat pop movsl mov push jl idivb sub mov pop jae push or dec cmp sarl (bad) sahf out gs cld push daa stos (bad) aas fmull xchg mov out fldl jmp xchg int3 ljmp sub mov imul add adc cmc outsb and mov lea xor xchg add repz outsl iret sbb rcll movsl sub in loope fisubl mov mov movsl pop pop hlt fsubs dec aaa clc pop cmp mov xchg pop mov xor mov mov add test add jl sahf cld or out or push clc stos repnz adc mov mov ds dec in inc and movsl fisubl xor loope je mov inc (bad) or out xchg out dec cmc mov outsb cmp mov pushf inc std xlat xchg cli aaa fdiv rcr mov add adc xchg mov enter or dec push jb fnstsw adc outsl cmc jmp arpl ljmp repz mov xchg (bad) cld or inc pop lods xor pop mov mov and pop lret std or fimull jmp mov push pop sub cmp add xor mov addr16 fldcw repz enter jno mov aaa loopne into dec push (bad) fdivs pop cmp pop push push pop in cli icebp mov pop adc add mov ficompl push pop xchg and or aaa mov cli (bad) out jbe lds adc sbb xchg dec les inc cmp adc rcr xor xchg aad jg xor cwtl xchg test fidivrl jg,pn ljmp movsl in ss loope jae arpl push idiv sahf sbb rol mov call fnstsw jo imul pop mov nop aaa fwait js cmp sbb sbb xchg test sub rclb out imul mov xor in aaa icebp mov dec mov fnstsw xchg ds add or addr16 loop mov add fwait repz adc mov imul das or jp lret movsb adc or lods dec popf cmpsb pop cltd outsl and mov dec (bad) dec add cmc cmc mov sub shl and js add push repnz pop fstpt sub (bad) pop lds inc lahf mov test add pop sub xorb (bad) mov imul mov fildll cmp mov gs mov push pop push repz notb inc xchg fldenv mov push rep bound rorb leave adcl (bad) data16 scas lret (bad) ljmp outsl cmp lret sub insl (bad) xlat and push push xlat pushf xchg or repz jmp or xchg stos divb out mov (bad) jne jle jbe add outsb cltd mov or ja call xchg mov sub xchg jnp and add sub leave xor add inc aam leave cmp test cmpsl sbb push sub push dec push and push xchg lea xor mov mov xchg lcall inc fiaddl fistpll je cmp adc stos cmp mov out popa xchg jl lcall fimull adc cs push add inc je fisubrl subl cmp ret (bad) fnstcw fmull jbe aaa aas or fstps out mov mulb push cmp aas icebp mov insl aad xchg out jmp test iret or iret fs or js and lds ds fsubl aaa xchg daa xchg dec pusha cmp fld mov dec loop inc (bad) xor leave jecxz loopne lods dec cmp test xor in fidiv mull jl call (bad) mov or xor or push inc sub pop jae jg jle iret sbb inc bound push lock mov cltd or push jecxz mov cmp jmp push ds cmp ficoml xchg add sub or popa movsl mov bound int pop arpl movsl xor in cld repnz sub shl mov push dec fs and mov sti addr16 sbb sbb in lock and aaa xchg mov add call adc enter and push mov cmpl es add test fcmove ret nop clc jg mov lods or and sbb packuswb bnd rcrb movsl jecxz xor mov in sbb add test add stc sbb sub xlat sbb cmp or lds add shlb jmp ret aas test les and push jecxz xchg push clc or test jmp test mov push fs je ja in stc hlt pop mov push fiadd mov inc push mov out test mull imul loopne notl popa rdmsr movsb data16 lcall jbe out out push test loop mov push sub mov lods xchg pop push test outsb dec subl movsb (bad) xchg inc leave sti out aad stc aam mov inc pusha leave pop sub js mov (bad) outsb cli pop add into add xor push or sbb test mov dec or test or bsf stos (bad) test ja and pop fadds dec sub cltd fldl or xchg and cwtl jmp dec (bad) repz fiaddl loopne hlt (bad) out fldt cmp push inc xor adc xchg aad adc mov mov les sub or repz aaa pop mov mov js daa cmp sub cmp test adc mov lahf pop dec bound gs in mov addr16 mov repz (bad) sbb (bad) fist mov xchg lret mov mov test sub push xor pusha add jl sbb mov sbb xchg mov gs adc jp roll lcall inc lods push sub mov xchg out inc fsubrl add js cmp jl leave mov mov call or sub rcrl cmpsl clc or lea push pop push mov in cwtl cmpsl push add jmp pop test das push cmp rcrb shrb xor rorl inc fnop push push test cwtl mov pop cs (bad) xchg pop lea pop pop xor xor test pushf stos repz pop mov and cmp int and lret add and dec mov mov jecxz inc mov and adc sub xchg out and add nop repz fs xor (bad) xchg ret mov cmpb aad xchg sub xor xor fist pop inc and push sbb scas fdivs add ficompl sti xchg fmul inc inc adc outsb sub into mov mov dec mov into sub pop mov rcl mov call sbbl and fstpt in jbe or inc jbe add test inc sub scas jge in ficompl outsb insb cmp cmp sarl les cmp push cmp pop add imulb xchg jb int push xchg adc push pop pushf (bad) cmp and in cmpl (bad) scas ds jne,pt test lods mov fistp xor inc arpl (bad) pop sub sub dec jl js mov mov xchg cmpsl sbb jns sbb or pop sbb and pushf scas sbb repz ret add xchg call dec sbb adc lods enter fsubl (bad) push adc in leave out jnp and cltd push push nop es vmovd cli (bad) fdivrs insl cmp xor dec test or mov (bad) sbb jo jmp repnz lods dec pop push inc imul mov sahf inc mov data16 xor mov dec loope aam cld push xor lods sbb or test clc mov mov fsubs sub dec mov lret or rcrl leave dec outsl and (bad) xor and pusha and push push and inc push mov cld mov lea sub cmp ret rcrb add xchg cmp sub mov inc (bad) xchg push pop imul jae daa lods pusha ljmp pusha mov cltd icebp mov jp sub leave (bad) sbb frstor jp mov dec in out mov test push test and xchg add jbe mov xchg repz int test rcrl dec xchg mov xor cmp or dec cmp sbb cmpsb sbb (bad) mov mov pop fdivl pop into test outsb add mov sub adc mov push in popf mov inc mov push xlat push push cld lahf cmp and add sub out repz sub jns ljmp mov stos rcll mov mov repz cwtl iret and lods jo call and aaa mov pop and inc and outsb scas cmp mov xlat cmp push popf push js mov pop roll push pminub add sub sbb inc xor mov scas xchg jne inc fcoms mov inc scas cmpsb enter push xor lods inc sarb aam imul bound add loope mov sahf inc fnstsw dec push cmp xchg add dec cmpsb call sbb fdivrl cmp jbe sub xchg jg cmp in sub je mov ja mov dec stos popf mov das rcrl loop stc cmpsl imul push mov sub mov insb add xor sbb push push jmp and dec arpl xor mov inc dec les bound xor mov enter push sub adc add jle movsl ret outsl into repz jbe xchg jo js push lahf lods pop xchg iret fdivrl insb aad pop aad mov xchg inc and mov loop cld fwait lock and movsl lods mov xchg out dec aas pusha loope imul add and add inc and pushf imul out jle sbb adc test lods (bad) repz or mov aaa orb in dec dec ret prefetcht1 je xor mov push test (bad) sti push cld (bad) shlb ds pusha movsl andl sub and mov inc pop mov call adc ret inc sub mov (bad) test xor cmp push cmp jbe xchg (bad) mov shl pusha inc (bad) sub lret (bad) cmp cmp iret jmp mov mov nop sub mov dec xor sahf inc fimull mov jecxz add ss test jl and lret adc sbb lea mov movsl cmpsb negl fisubrl xor aam cs jno shll mov mov sbb sbb jl cwtl js or (bad) mul jb xchg lcall push cmp xchg faddl fwait pop jge mov xchg out enter in mov fmul dec mov loop pop mov sbb ljmp in push sub adc mov dec fcmovnbe les cmp fdivl xchg hlt ds out inc cli bnd jae popa test xchg (bad) xor adc aam fsubp les xor test (bad) and stc pop inc out daa shlb jmp mul or mov mov jne inc or and les inc hlt movsb jbe jmp stos aad add mov mov sti pop push push outsw mov cmp dec fwait mov and imul add sbb call jmp mov scas test jbe shrl push adc sbb sti push subl popf icebp add and ret push mov push fmull bound and inc xchg ds lahf fneni(8087 cmpsl and lahf or pop cmc shlb push aad lahf bound push daa pop adc dec (bad) adc or incl (bad) sbb je scas data16 cmp push jbe push pusha cmpl scas mov mov xlat xchg cmpl ja inc clc cld fdivr adc rcrl arpl push pop es xor push add xor xor iret cwtl movsb mov jno add stc dec jg mov imul movb inc loop addl sahf jo andb adc adc je mov and jg repnz or dec cmc (bad) mov insb jl cltd mov iret push push lcall xchg mov inc mov cmp add pushf jo loop rorb aad mov dec pop int push mov jbe in pop imul lret pop inc in jge addr16 mul sub sbb loope jae xor mov in popa xchg icebp stc mov decb lret add inc aas push es int lea sub test (bad) mov inc clc pop inc pop or and loope inc int xor add inc mov pop arpl pop stc data16 fld jo fidiv push out arpl subb fidiv sbb stos adc xlat les icebp inc push imul aad loope addr16 jbe adc (bad) testl std popf push adc mov push cmp push xchg mov fs stc in push fwait std jb dec inc aad push cmp (bad) int3 or cmp shll jmp push mov xchg cmp mov jnp add rcl inc jbe cmpsb repnz sbb add mov xchg out das dec xchg and int3 imul lds cltd fstps push and sbb xchg lds loop xor pop test fs mov gs mov mov pushl aaa mov xchg clc out (bad) dec sbb daa pop repnz adc insb xor mov clc int3 fs pop imul mov xchg test (bad) mov fdiv or push mov mov sarl shrb cmpsl sbb movsl mov jnp jl pop push icebp mov cld (bad) and hlt inc mov mov (bad) movsl jmp scas and inc pop inc push sti adc push lock mov outsl loopne scas mov sbb loop dec pop leave jp repz xchg jae lret shll hlt xor dec out lea cs cmp imul jb ja mov jno pop push js scas push (bad) std pop mov push mov and nop cmp (bad) adc push stos jmp jne and test cmp das mov inc cmpsl add lods inc std sub dec xchg test lock mov sbb or popa stc (bad) mov icebp inc mov cs mov scas insb pop lcall jb add scas jle add outsb inc jo push lret xchg sub clc xor push adc jo fsts fsubl lock rclb je cmp mov into cmp push xor xchg bnd (bad) push or mov and addr16 and leave or sbb cmpsl (bad) and jmp (bad) in testl push cmpsl sub sbb aam sbb insb xchg in push ja ror aas xchg cmp adc adc shlb dec shl movsl xchg scas mov scas xchg mov inc jecxz push out mov jmp and scas cwtl bound inc cmpsb sbb inc (bad) (bad) and stos stos xchg (bad) sub jl sbb loopne sbb mov fwait divps xchg and pop push sbb pop (bad) jae sub dec or dec out loopne cmp fistp aam xor fwait sbb fs cltd aaa jl mov cmpsl mov adc pop inc add dec mov loopne and xlat aam mov inc mov jg mov mov (bad) jge push or stc out jbe rcll jbe sub push push imul mov in xlat adc push out mov (bad) popl mov (bad) mov inc and (bad) jmp adc jg lods dec cmpsb mov in mov cmp fsubrl sbb gs addr16 dec mov sbb xchg push hlt (bad) add mov mov cmpsb movsl repnz jae xchg xor dec imul imul mov jb lods aam loopne aas arpl (bad) not repz loopne das popa cmpsb xor in aad or out mov xchg jns lods inc leave mov sub mov mov addr16 lds cmc pop inc inc cwtl cmp pop jp ljmp cmp mov aad push popf add fsubrl jns inc push pop jecxz adc cld xchg or mov rorl sub mov gs or aas or int3 sub sub and jo xor inc arpl add pop das js (bad) pop inc imul gs out cld inc cmc mov scas or lret mov aas mov dec and pop push call dec xchg dec inc push mov stc pop loopne dec pop add fucomp inc in adc sbb jb cwtl ds push loop inc icebp pusha rcll xlat mov subb sti scas jg push sahf (bad) pop or jno xlat xor cmp pop xchg adc cmp inc xchg inc cmp or inc and int3 xor aad setns sbb lock mov in inc nop popa mov jp popa pop mov push xchg xorl pop dec into mov xor popa dec and in xchg (bad) jmp andb imul add pusha inc push jbe xchg rorb aas pop outsb cwtl roll pop and aaa xchg xchg sub arpl icebp and int (bad) pop jnp mov mov jecxz cwtl push outsl neg (bad) loope jmp popl xchg xchg addr16 lods sar cli orl (bad) in popf outsl add sub fs dec js int3 arpl (bad) std outsb int3 lahf adc and insb mov adc rcll in loop arpl cmp cmp mov outsl sub (bad) ja inc inc (bad) xchg lcall xchg dec cwtl sub pop push fisub lret cmpsb jge adc jge popa mov and (bad) xor jae scas dec inc pusha int3 shrl jmp cmp jae pop pop pop adc negb cwtl fstpt scas jae or daa cmp push loop cmp and adc gs lret fnstenv sub push jecxz adc mov mov or (bad) xor in push and cld or rolb pushf in popl cmp xorl and sbb mov cmp pop and cmpsb xchg add lods pop jo adc in jno out cltd outsb jne loopne push fwait pop mov sahf pop adc sbb cs mov mov repz jmp ud1 fdivl and dec push mov movsb add rorb leave xor das daa dec and jae cmpsb fbld (bad) dec mov mov dec flds ret pusha fdivr repnz xchg fstps jnp jbe aaa dec in iret xchg dec push jnp mov cli sahf andb cltd adc mov jmp cmp push (bad) jg cmpsb outsl pop pop (bad) stc xchg jmp xor sub cmpsl ret or mov cmp js out pop jp mov push addr16 les jecxz stos pusha and sbb adc notl xchg rcr imul mov sbb jmp dec dec scas inc bnd sub mov jo inc mov pop cs loopew jg add sub adc into sbb push mov aam cmpsl add gs clc adc movsb mov or xchg pop pop or loopne ja xchg adc fistpll jo iret pop es cmp fist daa dec (bad) mov sbb mov xchg lods or daa cmp xchg or mov decb ficompl and sub xchg insb sti insb pop mov xchg or clc sbb add jbe (bad) and add cli jl pop ds push add and cmp xchg push pop inc push std les mov aas pusha xchg mov cwtl (bad) into cmpsb and pop sbbl fmull mov mov mov cs test or adc testb test mov out movsb and call mov sub imul lcall negl mov mov adc cli fistl cmpsl inc push or xchg dec dec pop pop sbb int push mov or add repz nop js aad xchg dec mov ljmp mov bound push adc out pop hlt push andb std outsl xchg lods mov data16 xor outsb xchg test push in in (bad) into xchg or or mov mov cmp jo jno mov mov dec idiv jle mov pop inc faddl pop xchg loope int3 pop mov mov lods enter (bad) mov outsl aam mov gs push and add test cwtl and aaa arpl or rorl ret sbb test icebp je clc hlt in fs lahf fistp shll push lcall (bad) movsbl aaa sub fcmovu aaa adc lret fwait push sub or rcrb xorl add in test daa dec xchg hlt xchg and cmp leave dec cmp push sbb mov addl ja cmp pop mov add mov and mov popf insb mov cs stos pop pop jns prefetch addl lahf add push test add pop sub js in push sub adc push jae lods or (bad) mov add add fmull out jae cmpsb fcmovnu inc xchg sti adc lret mov inc popa mov lea leave push mov aad mov push ret cmpsb lock pop sti nop add or ljmp push flds incb mov icebp or or cmp cs xor lods lahf js lahf cmp (bad) lds adc xchg vpshuflw push out or data16 cld inc jle outsl or or sub mov pop test mov icebp sbb inc sub ficoml push cmc sahf shrl pop insl test nop daa mov add std icebp inc push into xchg xchg js add dec outsl jge dec cmpsl pop popf je xor mov jns inc jbe jle add jmp je (bad) (bad) cmc orb sub imul int sbb sbb icebp mov xchg jns lcall jae sub rcrb stos test cmp xchg sub (bad) pop je clc and lretw sub adc or call inc push (bad) adc inc dec mov jns fwait jnp loop jno insb fimul pop xor sub mov dec sub xchg (bad) mov int stc adc loopne pushf cmpsl stc mov in add pop sti outsb out pop imul sub dec xchg cli push fnsave sarb test sub dec push mov mov mov (bad) push sub mov lret inc addr16 inc pop lock mov imul mov add dec inc xchg lods mov dec lock sbb nop or icebp adc or cwtl rolb outsl stos sub leave aas mov cmp in inc ljmp ss dec or pushf stc mov insl add addl mov (bad) xlat insl int3 cmp cmpl pop adc mov mov xchg sbb repz xor cmp jnp lahf mov pop gs inc dec lcall adc jmp les cmc pop out test pusha les push mov jecxz (bad) push (bad) dec add adc xor add mov adc je adc push dec push dec or insb dec push pushf adcl pop xchg inc mov dec dec fstpl add jo or aas addr16 dec int inc add lcall or leave inc jl mov xchg mov (bad) lret sbb ljmp outsl mov (bad) scas cmovne mov jecxz xchg stc mov mov cmc movd add sbb cli std add jbe stos mov mov int scas addr16 xor in jo (bad) push test push lods mov sti mov cld rcr test jb mov frstor js js test leave jl mov pop popa dec addl outsl leave movsl or out cmpsb call sub xchg roll aam in dec sgdtl aam xchg loop mov outsl push xchg inc mov jne dec and (bad) mov mov (bad) and leave in aaa lods sbb lock leave inc mov ret mov mov (bad) sub jbe dec pop in jp cs int lea add in lret push xchg test cltd lret out inc out out inc outsl pop mov jmp add jecxz ret inc add jne and std and sbb iret jo and xor jmp pop (bad) inc add jne xor lcall (bad) or or pop push jb sub lods mov jbe hlt loopne xor bound aam shrb jnp xor arpl jns (bad) push shll lods xchg jp out rcll push not adc int pop or inc out xchg mov (bad) in or inc insl mov mov sbb mov pop jb jge aad pop lods icebp sahf in jge xchg in stos (bad) lods dec mov cmp call or add jl inc imul loope mov adc leave sub imul clc pop adc pop scas popf icebp xchg sub out xchg test xchg inc and fistl test mov sbb jmp clc cmp mov iret xor push inc lds mov sbb fwait repnz xor push lcall push adc sbb (bad) inc dec add adc stos mov popa push mov sahf ss shrb lahf mov mov mov ja jbe das dec es js add jno dec imul pop bound daa mov popf lods call xor out mov add adc ss jmp cmc jl xor arpl enter aaa jno push clc cmp sbb lods xchg mov pop or xor adc (bad) mov es cmp cs roll movsb fwait cs enter adc xchg imul addr16 or ficom dec sub cmp sbb arpl inc lahf out mov test sbb push mov ljmp pop add dec push les or xlat cltd gs mov shlb leave pusha es xchg pminub xor pop bound and push adc cmpsl daa cmpsl mov inc mov out jl mov or mov inc push into dec jmp (bad) es and mov addr16 int3 jecxz mov mov call sub jmp sub sub adc or outsl dec lea das jbe xor or and jns mov xchg imull lds mov test pop push stos jno xchg xchg xchg adc lock data16 sbb jg cmp xchg (bad) bound pop icebp pop loope (bad) or in loop or mov jnp jae dec or loopne,pn add mov fwait or lods fsubl int3 jle outsb cmp scas xchg pop cmp or sbb inc (bad) cmpsl call std or loop mov out xor mov test xor jo dec fucom adc and adc mov sbb add call sbb mov adc mov incb mov sub orl (bad) adc adc movsl and roll jge pop sub pop es imul std shlb sub and lcall xor push adc out gs push (bad) push insb mov push cmp scas xchg sub (bad) rcll stos mov and in insl jns jp mov mov push (bad) jg xor add xchg xor pop inc pop repnz out dec mov cmp sub sub adc lea fcomp test lods pushf pusha fidivrl in cmp mov aam adc aam push push and mov ja cmp lgs push lahf dec xchg pop pop cmp jl js loopne scas cmpsl std sbb aaa pop or in out mov dec mov and inc mov fldcw pop sar adc daa sbb lret add inc pusha loopne fsts jne xchg lret test push pop sub jnp test add and sahf sub enter (bad) stos cmp jb arpl insl sbb idivb jae fisubrl (bad) iret mov lock dec add testl jge jns loop pop popa movsb and daa cmp xor and scas inc in imul movl and dec mov xchg loopne dec mov jp,pt push shll xchg push jle and pop mov jge sbb clc cmp cmp and pop enter inc xor (bad) jp enter adc popf std cmp ret adc push in sbb aas mov mov loop mov jp adc test sbb inc mov aam add mov cmpsb std mov std or push loopne or jmp shlb jns pop lret (bad) loop cli sub andl adc pop shll scas and xor subb jge xor in add fidivr aas incb jae shr xor arpl clc rorl pushf pop clc dec mov mov adc sbb out add (bad) sub pop (bad) cmp pop loopne imul xorl js xchg fidivl out add push lea mov cld mov sahf mov clc push sbb test fnsave fisubl jle clc (bad) les out fcmovne sbb add mov outsb pop movsl pop in stos cld adc in clc fisubl xchg (bad) ret fldcw popa cwtl jbe mov sub xor jnp in or sarb leave mov or push mov cmp repnz mov push xor bnd aam outsb (bad) mov fldcw addr16 pop arpl repnz mov cltd sub (bad) (bad) ja or inc xchg sub push mov lret adc jmp dec dec push xor inc divb inc mov je pop pop sahf adc bound lock xor aam xchg gs cmp in or lret sahf mov repnz arpl rclb fidivr cmc popf inc and jl nop idivb push xchg push (bad) xor push fsubs (bad) (bad) mov call jmp js std out jns cmp int lret mov push outsl addl out movsl (bad) lods dec cmp mov sub pop movl push push rolb inc jo outsl and jge,pt cmp dec frstor lret aad push scas (bad) mov mov sti jge cmp cli lcall xchg sub inc dec (bad) jbe lea icebp mov lcall je mov add mov sub ds scas negb inc loope loop mov repnz sbb stos xchg lods sbb dec sbb ljmp jmp lock or dec or xchg mov ja (bad) push or or or or cmpb iret fidiv and lret loope jle fdivrl add in cmp cld push cmp jge and jge or xorl mov mov pusha add push push jecxz shlb mov int js lods pop ss jns leave xor bound mov jns xchg addr16 enter rorl in add jp ss rcl dec mov and push imul sub addl lea mov dec fucomi hlt pop and add adc lds xchg adc cmp bound (bad) xor ljmp or jl xor add subl jae mov mov push jb add nop pop imul loop bound fisubl add jne repz lods push xchg sub sub mov dec fist jge pop push jg dec pop push scas loop sti mov je add push stos mov lods out xchg jmp pushf ret jne adc jae or aad into loope pop xor mov dec mov in pop dec xchg sub pop xchg in pop aam lcall int3 mov jl add addr16 sbb fidivrl ds sub pop jge adc push xchg xor test aas imul jge and inc mov add cli lea cmp mov js push xchg adc mov cs aas mov add mov in sbb adc sbb movsb cmpsl push mov mul mov mov adc or push mov lcall frstor adc push mov loope lods dec mov mov sub mov insl add popa sbb inc and xchg adc mov xchg push cmp mov mov adc and mov jns scas popf and aaa insb jae mov (bad) ljmp sti stos out sub and scas adc sbb inc push mov inc in lret mov push fsts inc fxtract xor or add test gs into inc punpckhbw sar out ret rcrl out scas data16 add lea push insl test clc cwtl xchg (bad) fsubrl ss movsb int push cmc inc andl sti mov mov ret cltd das repz aad cltd ljmp test test sahf xchg sarl outsb lcall in shrb push add jle cmp sti lret add sbb or adc mov stos push cld mov sbb pop iret jmp lahf inc adc das mov outsl hlt stc pop lea adc fcom xchg push mov leave mov pop and dec or pop (bad) mov add aas lcall pop mov or add jecxz scas and das enter adc jnp insl imull or flds or mov mov scas jmp outsl lret dec and xchg xor adc add cmpsb push lcall mov and (bad) jl pop ficom sbb pop fdivs cmp pop cwtl leave and lcall jo push cli jp fsubrs test pop mov mov cmpsb jg movsb jne pop std lret cmc mov sbb in push psrld fistl fcmovnb pop mov aad sub scas ret fcoms and js push fs dec int pop cld push push outsl cmp dec test repz pop mov jmp repz in sbb push repz jne sbb data16 dec jo (bad) or decl inc sbb pushf cs jbe rorb xor push jns dec stos (bad) dec push pop cmp adc (bad) mov mov loop imul pop dec jae adcl movsb inc rorl mov inc dec int3 jnp xchg test add jge loopne dec xor mov fisubrl call pop std jbe sbb dec sbb es lods sbb popf inc mov add cmp xchg out fldt xchg jge mov sub dec cltd insb into cs jl xchg sbb sahf mov loope push dec xorl lock clc scas sub in pop les pop insl xchg cmpsl (bad) xchg jecxz ds sub jmp div push mov fadd aam lret out and lahf into stos out push dec into mov push xor adc sub sbb (bad) pop or lret lret mov inc out rcll mov inc es push pop inc jbe sbb outsl pop stos std fcmovnb mov and and add ds and sub mov lods in xchg cmp in movl xchg out jb aas aaa pop fidivr scas pop outsl jno xchg sbb lret inc or (bad) mov sub lods pop pop pusha and xchg cmp nop les jle inc stc in jl push xchg push jge push jl popf jbe in ja sub aaa pushf add fstp pop scas xchg mov jp pop (bad) inc scas cmpsb (bad) (bad) push mov push lds mov add aad imul inc adc repz test adc adc std and inc mov les mov cmp and icebp jbe xchg fiadd scas sti imul or xchg outsl dec add nop ret push mov mov stos add dec nop push push jmp in (bad) test mov ds push pop sbb ljmp xchg decb mov and fistp lds (bad) aad out adc add cli int mov jo in scas adc cmp dec shrb lcall lods insl jnp xchg arpl loopne ret pop pusha shrb rcl jecxz mov (bad) adc iret cld cmp inc lods push pop pop jl jl call inc js aaa pop xchg push inc jl cmpsb (bad) pop inc dec dec fwait pop push test mov fcmovb mov inc and jmp or rol sub scas (bad) or sahf jecxz add mov mov pop std sub aam jae cld fidivl dec pop cmpsb (bad) aam popa mov (bad) popf adc inc pusha jne mov ja js pop sub mov pusha je pop fwait sub adc ror leave pop ficoml push cwtl mov popf sub mov push and or repz daa jmp scas fisub nop dec xchg or ja leave das cltd rorl mov add addl cwtl movsb frstor stos sub rep push ss jo sahf in scas insb cmp push sbb jne sub push pop test jmp jo jns pop xlat sbb mov mov adcb arpl rorb (bad) push sbb das sbb xorb in pop pop (bad) cmc clc ljmp adc cli (bad) mov dec scas aas pushf imul daa mov iret stos imul ss and repnz jnp mov fiaddl out add ret ds sub inc sahf push lods dec aad or push fisub sbb data16 push (bad) in out and out inc xor enter mov jmp jge outsb in and (bad) push mov inc sbb loop test mov fnstcw popa jl jns inc mov loop repnz in xchg push push mov xchg cmp and outsl mov xchg fsubr jae mov mov in sub stc lret push inc xchg (bad) sbb mov out scas jecxz daa mov cmp es push dec push nop cmp jae pop scas mov dec call (bad) loopne mov xor dec pop sub pusha std lret (bad) jnp jae dec gs xlat in cmp imul jbe insb and mov je push jne pop inc lea (bad) hlt aas lahf in push js out loope loop enter mov push mov and jbe (bad) pop or xchg int3 add sub xchg push sarl clc push aas cmp insb xchg scas jb sbb shll cmpsb pop shll pop xor cltd je mov hlt aam imul and mov loopne adc hlt inc adcl xor adc ret sub js cmp lods dec lods sub xchg aam ljmp mov or insb xchg test dec daa scas stos outsb stos lahf loop sti lcall fidivl ret int pop lcall mov aas (bad) or sbb dec push or xor arpl rcr sub int lahf xchg ja fcomps subl aaa xorl ljmp mov adc pop arpl imul test inc int3 jb pop pushf les xor pop mov xor mov fwait sub and nop rcll pop and fucomp cmp imul sbb push inc in mov movsb push dec push loope rcrb sbb mul mov mov cmp mov gs aad pusha add dec mov sub pop jle hlt push cmp iret (bad) fimull out xor inc cwtl mov xchg cwtl mov ljmp mov test lret mov mov lods mov out xor xor sbb movzwl push rclb and lods (bad) bound scas repz (bad) mov in les stc sbb xor stos cmp xchg adc jp jp addr16 cmpsl push xchg pop and jecxz mov cltd (bad) int pop dec add cmp push mov getsec xchg push insl push inc inc add mov pop loope roll cmp sub dec dec push mov jno sub jnp cltd xor fidivrl fwait imul mov lods pop adc nop (bad) xchg out mov outsb cld cmp lcall scas cwtl es mov call pop cmp rorl lret sahf lods xchg sbb or push cltd sti adc jb arpl icebp rorl mov or mov mov mov imul and nop add fwait sbb stos push sub and and sbb dec test push ljmp push hlt adcl xchg stos mov and cmpsb dec push int or test cmpsl outsl mov sbb add mov push lock adcb pop adc adc jg mov popa adc (bad) lock into adc fiadd cmp push mov mov popf or dec jle hlt (bad) push aad bound cmpl pop adc mov lock push lods js push (bad) test ret adc xor and (bad) lret insl adc push sahf mov mov cwtl push loop gs andb dec aam imul jno sbb dec dec pusha outsl mov roll sub (bad) sbb arpl add lea mov fcompl push jle sbb mov sub jmp lcall adc xor sbb xchg mov dec bound xor push push int3 dec xchg lods jb xchg cmc pop inc pushf addb cltd jae xor and (bad) idivb xchg ret mov xchg cmp das adc cmp push sub jl popf stc test push sub outsl (bad) in enter lock push mov clc push nop or int (bad) adc shrl cmp pop sub fidiv ret xchg pop adc pop fidivrl mov dec mov lret xor out insb xchg and aad (bad) sbb cmp fldcw mov adc cmp cs clc pop insl test rol int stos fbstp inc xor sub push mov jl mov (bad) adc push jnp in stos mov sti mov pop xor in mov fcoms mov stos inc xchg add nop xchg enterw test pop lret mov add in daa in push jg daa mov or mov lret sub (bad) sbb int3 push icebp cmp js mov mov jge jp movsl mov jl cs repnz mov test adc dec cmp stos ds (bad) mov stos mov data16 leave ret enter andl fsub push sub xor sbbl out aam or or lds test xor push mov test movsl sbb jne test es pop mov jnp shrb insl insb cmp mov mov add push je loop and fnsave iret icebp xchg das nop mov xchg jo es mull ds loope iret or inc cmpl dec mov adc inc daa icebp jo lds or push push sbb mov push repnz or sbb in rol and pushf add js jp mov sbb cmp stos sbb and enter and dec add sar out jmp jae pop or gs sahf inc or xchg jge mov mov push mov add push mov adc jo into shlb sahf sub int mov je add add pop push mov stc mov mov xchg imul int3 mov push jno jp lods leave or lods std stos ret (bad) test notb dec cltd cwtl stc inc stc sbb data16 dec mov sub push inc mov sarl inc jbe adc (bad) mov and fwait ds mov push cmp stos imull call insb sub rcr pop cld mov inc xchg gs (bad) nop mov or dec adc push icebp xchg jg mov lcall jecxz add roll popf sub or adc sbb std into es xchg hlt push sti push in sub test popf leave push das xchg fwait mov lret sub add movsl aas das push and mulb mov xor sahf cmc jp push shll push lea hlt das jecxz es inc push jl sahf and mov pop sub inc xchg out adc inc ljmp (bad) mov sub shll test mov jl jnp lds push test (bad) leave fbld outsb sbb pop inc scas xor jecxz sbb popa sahf xor out ja adc popf mov add mov lcall dec cmp scas dec hlt push push fisubl flds add jb adc lea sbb mov cmpsl mov mov xchg ja push push add popf fcmovne cmpsb cmp rcll idivl xlat mov and movsb inc xchg mov fsubs lock mov pop sbb scas je add into adc inc dec inc adc or out ret jg mov mov mov and or sbb lock sbb pop xchg push push adc xor shrl notb int into jo ja jb jnp in xchg inc fcmovbe nop cld fwait xor hlt popa scas or fwait mov lds loop dec xor or jp add sbb in adc std stc jns sub jp mov scas call gs pop out add push sbb mov sub mov push sub jmp cmp dec sub cli adc enter (bad) fstl sub push int3 popf test dec adc cld add fwait jl hlt mov fldt jg push std enter pop cmp (bad) in inc and ss stc jp dec sbb pushf push xor ljmp cmp sub push repz lret stc (bad) mov fnsave mov push sub cli adc mov xchg and xchg mov sub pop mov mov inc arpl lcall adc hlt add push stos mov lods sbb sahf mov pop mov scas push push test fdivs (bad) gs xor (bad) and scas dec mov pop pop cltd aad in xchg test rorb mov sbb repz pop or add rcll loop pop and jp decb cmp push lock sub jp pop out dec dec pop and jne test fdivs (bad) push cmpsb sub sub ja sbb aad (bad) jge je xchg adc push cli mov fcmovnbe adc pusha dec pop outsb sub scas mov lods sub sti dec (bad) in movntq pusha jo xor insb ficom push push imul ss (bad) or and inc push (bad) cmc jmp mov (bad) rcrl and daa gs jo ret xlat jno cmp movsb mov std mov icebp sahf add imul (bad) push xchg fidiv jp push loopne aad xchg jae test adc lahf adc fucom jl or aam popf dec inc addr16 mov jno cli or mov jbe push push and mov cmpsb pop push jns dec loop (bad) cld xchg pop notb jb add fcomp mov xorl or fisttpll fist cmp je push fs jecxz test test inc adc jge xorb pop pop xchg arpl mov dec mov inc add not xor and lret popa fs push in lods movsl inc pop cmc xlat adc lcall sbb push sbb jmp push pop lahf jnp pop ret xor ljmp pushf xchg xchg rcpps addr16 aad fisubrl adc lods mov cmp mov inc aam ds or ja int mov jmp mov fdivrs outsb push jl push xlat negl sbb test mov cmc loop pop xchg inc pusha (bad) add fild mov add (bad) and stos add xchg pop jge aam leave movsb fwait mov inc push pop cmp push pop lods dec inc xor sub test fwait test adc xchg leave sti insl out lret mov sbb cmpsl mov add add jmp (bad) pop cmp jecxz stos ss dec incl in xor cmp mov stc repnz xchg fdivl movsb sbb jbe lcall add rcr mov int3 daa mov sub mov adc rol mov cmp push std and mov cmpsb pop pop sbb pop push xchg xor mov push or or xchg fdivrl test mov mov out jo mov (bad) mov mov sbb in fisttpll ja pop repz mov adc dec jnp mov stos cwtl sbb rorl cmp pop push lret cltd lock cwtl and xchg popf iret sub lock cltd into inc lock xchg cli pushl xchg sbbl mov les mov in cmp fisubr cs jnp sbb add mov jge xor std (bad) lds addr16 push mov lods divb pop cltd mov push hlt arpl mov icebp test pop mov jmp outsl imul or out jecxz sub std dec sub daa lea stc jns cmp (bad) xor pop xchg adc jle cli mov add mov push out sti or lock dec jge xor jne in es arpl add rcll movsl adc dec jecxz jae mov adcl and maxps iret mov imul enter lret js xor xchg push mov pop outsb sbbl test mov pusha sbb add stos mov xchg xor push xchg in xchg and fidivrl sbb lds stos mov fldcw mov xchg leave dec add mov mov push popa (bad) mov fs push movsb adc fnop xor fstpt mov inc insb mov in rolb mov cli stos adc repz and fmull add push and and mov lds mov test mov aam adc arpl out mov insl sbb loope xchg lea cmc aaa test test sbb lock push pop or push xor jle and cs out dec sbb mov cld dec add push adc add adc lea pop push push ds stc fidivl arpl outsl jne test xchg lahf (bad) xchg lret pop jge jmp pop jae jbe fyl2x sti push add int3 mov xchg (bad) jmp jbe xchg mov div sbb mov lahf shrb adc push in adcl sub adc fild (bad) jne inc xlat std (bad) ss and stos inc in xchg loope push fldcw lcall data16 in pop mov lds xor xchg call mov xor push jne sub jne repnz mov mov mov mov inc popa mov lea enter xchg push xchg adcl in lcall (bad) inc (bad) xor jae cs movsl dec call das add sbb dec cmp sbb gs in mov sub aas test mov or jmp inc frstor add les xor aas addr16 or cmp adc xor mov dec out movsb mov push xor repz mov adc aad orl fistp rcl add aam sarl mov mov pop sti and das mov sbb dec push mov push inc push aam std mov fs mov sbb cwtl or mov (bad) pushf ja out leave or push or pop jp push jge dec xor add mov (bad) loope addr16 aam jl ficom push ljmp sbb mov imul cmc (bad) cmc add outsl aam in test jmp call mov leave adc cmp addr16 push lods mov push rcrl ret or cwtl cmp stos fisub lahf sbb dec in int3 and cmc jecxz mov (bad) pop mov fs sbb cmpsl addr16 sub aad (bad) repz (bad) mov pop push sbb cwtl pushf les mov dec sub mov repz test cmp std stc mov push sbb xchg adc aaa pop in bswap fxch cmpsl outsl into push dec adc scas pop pop pop mov mov mov add lea dec pop mov sub push (bad) jnp sbb and sbb or fldt dec sbb aas outsl enter jae jo iret loope or adc iret imul lods mov push adc or xchg cmp movsb pop je (bad) icebp mov pop lds cmp push jge xchg aas adc cmc jb lea cmp cmpsl les or mov jb pop jno push push xchg lds cmp popl pushf add int3 (bad) (bad) sub mov das scas daa adc push lods jb not inc xlat jbe push xor mov popf leave or mov ds sahf pop xor imull std shrl cmpsl cmp pop insl push lcall jnp xchg dec sub push mov fldcw push dec sbb cmp push fidivrl mov sti mov mov loop ret mov sub enter fnsave cwtl lock ja xchg lcall (bad) loop jg push popa mov mov push imul jno inc push (bad) outsb cmp xchg xchg enter mov mov arpl daa mov mov jge jg add cmpsl pop mov adc lds into leave adc inc adc jl mov sub inc sahf ds out frstor jbe icebp ficoml fldt mov stc push mov out cs inc andb in int3 lock sbb mov repnz pop ret xchg aaa add idivl imul sbb or hlt push lret (bad) fist sbb xchg imul add xchg scas ljmp push xor mov mov test das adc dec push push xchg imul jmp jmp mov mov mov push sbb in stos cmpl push fsubr pop cmp xlat pop lret inc icebp dec xchg jo enter sbb push or push sbb ret (bad) cmp out cmpsb dec hlt (bad) aaa mov sub fcomps dec fiaddl mov mov clc push inc stos out cmp jne mov sub xorb xorb insl enter ficoml mov lods add std cs xor das pop sub jl mov cmpsb xchg je adc arpl or inc lahf iret jne inc and out dec idivl mov inc jp mov dec fcom insb or adc push sub push push push sub in dec in jb and ds cmp mov cld negl ja xchg in mov and xor inc xchg and adc and aam scas das test inc fldt xchg xchg out jae stc lock xchg ds decl lds test iret xchg popf inc stos fnsave mov (bad) mov and jae out les xor mov cltd cmp xchg xchg xchg mov add stc fdivp xor test push dec sahf xchg pushf mov mov (bad) mov ja ja movsl (bad) stc fs add jnp xor add rolb mov std sbb sub jnp (bad) mov dec pop scas daa mov add icebp andps (bad) xor pop dec xor cld push sub or ja in xor cmpsb mov clc into daa pop lods test sti mov or xchg mov push fist in xlat mov mov aam pop std mov mov inc add mov rcrl fld push push mov test repnz xchg ljmp mov cmpsl jmp inc into push sbb sbb dec repz push lds dec xchg xchg addl push jae xor fucomip mov out mov xor loope jae mov sub fistpl push adc cld add ret fistpll sbb xchg movups mov cmp push mov das mov (bad) loop push dec (bad) cmp out sbb (bad) xor fisubr xor jle mov jl add fdivrp mov mov mov sub outsb pop lds mov pop repz lcall add (bad) packsswb test repnz cli mov pop in sub sahf pop pusha outsb aam int3 sub lods push cmp inc xchg inc push push cwtl icebp aad sbb in in fwait je xor pop push rcrb inc cmp call test repnz movsb push mov xchg je or ret mov inc xchg push (bad) dec fmul mov mov push out scas leave popf jmp lret (bad) bound cmc fmuls adc sub xor enter xchg lret sub adc out test mov stc add mov mov dec or push stos inc (bad) mov leave dec sub or jle mov pop loop cmpl sbb mov in sub xlat dec (bad) test dec dec adc pop cltd nop mov mov into rorb std insb sbb adc xor movsl jp jecxz adc cmpsb or cltd popf (bad) fdivr mov add push mov insl sbbl dec sub sahf popf scas ds xchg sbb lret and lods push pop jp lock xor dec push or pop ret pop or pop mov push popf aam push repnz jg repz loop mov out push xchg aad out dec les adc mov insb pop sbb xchg daa ret hlt inc cmpsl lcall outsb sti in xor fstpl bnd jne xor push jbe not jnp into in dec xor and cmpsb (bad) and xchg shrb cmpb xor ret mov imul popa inc dec jmp mov sub jge je (bad) leave sub ret inc popa and pop std xchg adc cmp arpl push push cmp jns and jno sahf lock loope add cmc cmc stc adc movsb outsb fnstsw xchg test addr16 fiaddl mov mov js mov ret xchg xor add cwtl scas pop mov popa push and jp add inc ss divb mov xlat add cmpsb dec inc jmp ss aad popa aam mov (bad) rorl mov std and je je fs gs ja inc adc xor fnsave (bad) jle inc iret dec testl gs jbe mulb xchg push jbe adc out inc mov loopne imul ret or dec fs add lcall cmp rcrb or mov jnp es nop inc lret stc sub mov stos dec xchg sbb xchg sbb inc mov dec addl mov mov mov arpl cmp imul jle pusha nop inc scas into jl inc adc xor test lods outsb (bad) jnp pop rorl mov or jge sbb mov nop out je mov and popl cwtl push pop in imulb mov sbb mov je sbb je shlw clc jmp and mov nop lcall adc adc xchg or ss cmp lcall dec jge in inc cmp dec cltd mov nop daa lahf aad pop lock (bad) out cmp loopne sbbb xor daa push and jnp dec imul dec je pushf jno jmp dec mov jbe push arpl scas ficoml test out push lret inc mov mov pop imul mov jnp nop aad (bad) push dec icebp in xlat pop outsl addl mov add sub (bad) pop loopne fsts jae mov nop loop pop jne ljmp dec mov in pop (bad) cmc inc or loope mov ja les push adc in jp push cwtl xlat xor shl test or arpl add out orb inc gs add pushf xor daa mov test pop dec push dec push (bad) jnp mov sub pop sub je sarl pop sub mov popf mov fwait pop jl push out outsb pusha leave loop nop mov mov out outsl cwtl fidivl add dec ret and mov scas push lds cmp mov sti xchg mov movsl mov dec iret call cmp push popf rol sar adc ds lcall mov std cmp or out sub xorl jae pop sbb sbb shl mov dec push movl mov sbb insl push push loope popa enter push sub popf or mov lcall mov sbb aam push adc ret mov cwtl jo arpl jl out ret scas int3 ja (bad) sub jmp scas push test mov out push lret in and add mov and xor push and or mov inc mov mov jbe mov movsl jg adc mov sbb (bad) lcall sub ret test pop sub insb (bad) lret fisttp outsb stos lcall scas or adc out mov push mov inc aas fcmovnbe stc in cltd push pop jns in mov call cmpsb mov xor repz and addr16 out outsl sub adc or mov sahf pop addr16 xorl inc mov xor gs or dec stos jl or aam fs cs jl jmp loope xor sbb pop outsl adc orl sbb adc push sbb push xor or mov adc repz jns or or je pop inc sub sub mov test (bad) clc push add or sbb mov mov push inc pop aad sub popf cmp inc sbb ds lods fist cmpsl dec xchg lcall cmp mov stos lds add ss aaa mov shll add jo mov push dec fbld out lock or les aad mov xorps xchg fsubl mov xor add pop arpl jmp or (bad) adc adc xor jne mov mov insb cmp or xchg mov and mov (bad) cli jno mov inc mov jmp xor inc (bad) or sub inc out insb inc cmc jno or out sahf cmovo fild or cld call bound (bad) cld xchg jmp cmp andl pop jle xchg loope and cmp loope xorl int inc xchg std inc lods test fistp hlt std mov cmp sahf jno and sahf jmp xor xchg push (bad) sub int3 bound jmp sbb xor mov xor adc xchg push xchg addr16 in sub jp outsb pop lret mov mov lret gs push push pop push adcb cli jg loopne sub sub pop add test outsb mov mov fldt xlat xchg xor lods daa dec push or ds stc out cmp cmpsl lcall (bad) divb js mov cmp clc (bad) popa xor cmpsl inc sbb mov (bad) mov pop xchg ljmp fidivrl mov push push gs mov lds inc sub stos insl cld jmp xlat or cmp imul and adc add movsb push mov cmpsl push adc pusha rolb js inc inc jne push hlt sub cmpsl mov sbb mov xlat ljmp js and push xchg xor (bad) jno lods bound or adc pop in dec or push fcmove insb cltd adc outsl xchg push test xor jno push sub xlat ljmp adc lds xlat jp gs mov dec or outsb inc stc dec add outsl data16 xor xchg cmpsb mulb mov mov adc jnp stc mov xchg xchg cmpsb mov fnsetpm(287 jmp das ffreep (bad) repnz mov push std sahf mov icebp enter nop push cmp xchg lds jbe jge xorl push adc push outsl and pushf aam jp xchg aaa (bad) es inc outsb inc mov lahf push adc jle ja pop fwait (bad) sub in int3 pop lret mov gs sbb js loopne cli xor (bad) push cmp mov push iret sub mov cwtl (bad) out jecxz incl imul (bad) mov adc scas mov push into lods cmpsl inc lahf movsb xor test jg dec add sub dec adc mov mov pop xor jg mov fisub out shr dec push popa lock lea cmc mov cmpsl daa lret cmp pop mov call mov and pop xor ret (bad) and cmpsl xlat xchg call jge scas leave ret pusha jo sub dec and xchg inc mov mov push iret xor icebp push and cmc xor adc jns inc cmp cmpsl or sbb sti aam mov cmp mov sbb add or mov sub test sub cmp arpl lret jp ret sarb or and xchg test jle inc xchg sbb icebp pop test stc rcll fst cwtl mov sub jno jp push pop out clc dec xor std mov cmp mov xlat and leave lcall lahf test es xchg and mov xor addr16 dec pop xchg out lret cltd and leave out dec testb xor fisttpl push ja out enter div loope pop movsl push lock out xlat js jnp (bad) jge sahf mov outsb stc lret lea negl ljmp shlb jnp adc notb push mov pop add scas mov mov jnp add jg cli adc (bad) mov sbb inc mov jle push ja jp and jmp popf push (bad) lods stos lods imul jns (bad) (bad) movsl or aad add mov nop repnz cmpl es dec int push clc cmpsl add push adc pop cld fstpl and fistpll xchg (bad) inc cmp xor cmp sarl sub cmp mov and add cwtl ds lret sub jge xchg inc mov add pushf pop dec adc test mov mov jb mov aas pop ljmp mov xor cwtl lds jae mov es lock push xor sub arpl jb push xor jnp pop adc dec mov push rcl adc pop (bad) pop adc add stc je std test stos daa inc aam jp imul sbb fsts mov mov or adc mov mov inc sahf out cmp sbb mov inc add sarl xlat jno lcall test jl dec cmp insl add cld push mov sbb add loope and sub loop lea insl or cmp dec addr16 add mov int3 adc das pop inc pusha ljmp jae enter mov push mov stc lret adc pop fs sbb inc dec das or mov sbb jge movsb adc ja cmpsl pop ljmpw lahf in add or divl outsb fstpl rol out lods jl test push or movsb dec sbbl cmp xchg push rorl out lods mov xor pop sub inc ret mov (bad) and fnstcw cmpsb out frstor cmc das jae pop push es movsl dec or mov stc inc fsub jg rcll int pop pop mov mov es dec dec sub xlat mov rcrl inc imul jge mov cmpsb rolb ja in (bad) push mov (bad) ret sub shrl pusha dec shr fdivrp jp xchg ror pop pop adc cmp icebp les pop cmp shll sahf imulb test mov ret int inc cmp repnz cmp es cwtl insb cwtl add loope mov aas jne inc lods sbb cmp sub sbb mov icebp xchg test mov and ss fidivrl test dec pop popf jbe fsubl jmp lahf push xchg adc fs cmpsl jbe mov out jp fs pop pop call loop out test cmc lods call (bad) push inc push jns pushf pop xchg jl popa icebp jae stos mov in lods leave pop add add sahf dec mov int3 xor dec les sub rcl jb add and (bad) dec and repz pop arpl (bad) sub jb cmpsb mov push movntq add sbb gs pop sub (bad) jmp mov adc mov (bad) repz mov int dec adc inc dec mov pop (bad) cmp mov add mov (bad) push test add ret mov ja testl cmpsb std sbb cwtl cmp fldcw loop xchg lcall ds pop mov mov mov and jg in or mov cltd fyl2xp1 adc cmp add cmpsl pop iret adc sub pop out aam fldcw sbb and pop mov pop lret hlt dec ljmp cmpsb push jge shl in fcompl and add add jle stos push push sub xchg je sbb add aad rolb ficom loopne and movsl push push mov rclw inc movsl lea mov cmp mov std jge cmp out push mov shrl sti and inc push and add xchg dec adc mov xchg clc test push pop fwait mov insl aam push lret insb xchg in and xor adc push xor push jge cmpsb repnz rcll pop mov sub jg inc add pop add scas dec icebp mov pop test push mov scas push dec add popf lret out test xor pop xor mov mov dec push sti mov add jmp outsl les dec inc (bad) icebp pop fstl notl or mov dec jb lahf mov inc lods pop insb sbb std (bad) (bad) cmp push sbb sub in pusha daa push push sub xlat sub pop movsl test cmp aad fnstsw (bad) ja int3 xlat lcall inc cwtl adc sub addr16 sbbl jb cmp pusha push or adc sub daa push test jbe xlat jp pop shl enter scas mov jns mov daa outsb xchg sbb or (bad) sub repnz test movsb (bad) clc (bad) mov cli adc icebp aad mov inc out jb pop mov lcall jmp cwtl fcmovnb xchg insl jo,pt sbb jge aam insb sub inc xchg push fldl test repnz jns jno mov mov bound pop rclb loope int clc lret jle bound or sub loopne scas xchg popf in ret jmp pusha mov lock sub sub cli nop cmpsb add into in sub sarl sbb mov xor adc aas sub clc mov (bad) punpcklbw test fldl cwtl imulb mov push test mov jmp mov js pop test movsb jecxz aad fwait adc push icebp mov add or lahf int mov ret call ds add mov pusha push les push data16 inc dec aam adc add xchg pop push pop shrl hlt pminub out sbbb inc daa push pop je in adc and xor stc dec push lret hlt fs insl fisttp sub sub cmpsb push rcrb rclb call incb es out jmp stos cmpsb push dec adc push sahf ret xor jmp mov incb add sub mov clc stc xlat pop test or movsb cmp mov sbb loope les (bad) div push leave aas xchg clc push in inc cli fldenv pop mov stos pop fdivs lock (bad) lahf mov sub mov icebp xor pop mov pop incl loope (bad) shrl jg out add out mov pop daa repnz adc dec pop dec jo gs jle inc imul xor mov dec push cs mov inc js mov hlt lcall jo sbb xchg inc inc in mov mov mov adc cmp adc es mov cmp jae push sbb xor fdiv push into dec movsb adc jbe loopne inc ss aaa bound bound icebp dec mov int lock add in (bad) out notl pop add (bad) xchg leave add jnp inc (bad) and or iret incb jle xor insl jmp jg test ret xor and fsub xor mov lds cmovae pop mov ljmp push xchg (bad) call jbe mov test int3 xor mov sub push cmpsb mov sbb pop bound rolb lcall push in push loop jae jmp hlt arpl ficoml aam sti xlat enter movsb jne push mov jo enter out imul mov adc xchg inc adc push fucomip (bad) dec (bad) aaa scas mov xchg push test mov pop jns aaa aam ja sbb adcb adc xor out daa aas (bad) push mov stc iret xchg sarb cli imul arpl push shl (bad) hlt mov popf scas adc imulb jp rolb xor and fucom lea push pop fcoms lods pop mov mov paddb repz adc inc cli mov pop or pop add and add stos out sbb pushf mov push cmp outsl arpl inc inc into ret adc mov cli add fidiv mov jge pop and or and pusha stc adc xchg cmpsb (bad) loopne or mov mov lods shrb imul lret or popf push mov xorb ss xor mov jg mov cmp xchg subl xchg mov jl pop std lcall iret push sbb inc fldz iret mov mov pop xchg xchg les test jnp inc into cmpsl pop inc test cmp mov dec jl sbb test or or sarb notl cltd fsubrl add inc mov xor cmc (bad) mov xchg push aaa cli ss leave cmpsb bound out push xchg clc pop cmp push popa inc adc mov lret imul push mov into dec movsb mov lret movsl push mov in nop mov pop dec and loope push add (bad) imul mov mov jbe jo sub (bad) xor sbb roll and repnz rolb push inc inc xchg add dec jl test or mov push ljmp adc imul mov mov mov mov aaa rolb sbb lret das dec push mov mov jae fstpt lar push daa jle or xchg bound mov mov (bad) int3 fiaddl cmc sub in lds fs xor dec (bad) cmc mov push push fidiv lods (bad) adc movl add int3 pop (bad) cmp push sbb loope pop xlat das dec daa and in xchg adc pop sbb pop cmp ljmp in loope push movsl jno mov xchg fisttpl nop and clc cmp clc outsb mov xchg mov das fwait cmp loope pushf mov mov mov call mov push dec cmc lea nop aas nop dec (bad) push ror mov data16 pop mov adc test xchg or and fidivl mov jecxz mov adc inc call jecxz push jae or pop and orb mov push adc ds push add xor push movsb jl push mov pop adc dec lahf stos and xchg sbb mov jge in scas pop outsb mov out ffreep mov stos repz fdivl inc aam adc and pop mov push mov int3 xor sahf inc in cs and ficomp jle out and jo movsl test rolb mov loopne std inc int3 jns sub loop add cmp nop adcl mov test mov in mov pop cs jbe js (bad) pop push enter pop das lock pop sbb lock pop cmpsb pop stos and ret popa insl aas lock mov stc push and mov mov push lahf je loopne push fidivl imul jno dec (bad) fnop sub insl pop cmpsb stos dec enter cmp jne dec rolb je dec cmp imul and aam pop test cmpsb sbb mov push scas and mov (bad) addl movsl std sub popf popf aad xchg out notl into dec inc mov std insb sub pop (bad) sbb add clc or ss sahf jecxz les dec leave sbb mov arpl in subb (bad) into sbb and test test dec inc aam andl push stos sbb test cmp mov loop xlat adc lret cmp insl xlat (bad) neg dec daa xchg mov fs sub (bad) push xor mov bound inc lret rcl clc (bad) xchg pop lods mov inc cs push mov test jae loope aad cmp test mov lret xchg aaa xlat mov mov pop inc sbb sub xor (bad) sbb in loope daa xor rorl mov dec sbb pop push pop movsl adc or and xchg rclb mov enter mov jge cmc lret ficompl cli pop mov das leave leave and sbb jns xor xchg mov mov push or cmp icebp lret lcall stc insl jmp lret lods in jbe lret sub mov dec dec outsb out and xor cs pop lock mov adc lcall int and hlt jge mov dec xor repnz mov sti add xchg mov daa iret xlat jo push mov scas rcrl fwait mov adc movsl add pop sub inc test dec dec mov shrb dec mov inc (bad) sub adc movsl das pop aad mov data16 push cmc sbb inc stos test mov in pop jno (bad) fstpl add stc (bad) lea inc negl mov lret jb pop ss mov or (bad) incb xchg xlat cmc sti inc xorps cmpsb pushf (bad) insb add lcall repz out lret insl insl jns jbe sbb xchg jg mov icebp nop orl sbb ror das lods add aas xor imul add lcall leave mov addr16 jp pop imul nop cwtl jbe add and stos subl test vpmuludq addr16 xchg test outsb adc sub ljmp push (bad) push cmp jno imul sahf daa jns out xor xchg inc mov fadd out in push pop or or stos xor pop addl cmp repz mov in pop cwtl cmp aam in loop sbb add lods sbb mov adc push and aad sub push lret aaa (bad) clc lahf adc scas fstps insb aas sarl fiadd mov mov jbe js loopne cwtl push pop test mov push mov ss fs add fildl xchg stos fldcw arpl jl sbb cltd cmp dec insb lret test pop sub fistp insb mov jge pop cmp addr16 sub push cmpsb jnp je cmpl ss test cmpsl scas xchg pop cmc push lret jae sahf push sub adc or add out dec jno xor out mov and (bad) mov pop stc push cwtl enter lret pop out xchg mull mov mov inc lret outsb mov push sarb gs jge pop pop sbb (bad) jnp inc mov in les dec mov cmpsl pop cmp repz mov cmp shr mov cmpsl nop sub and jo mov pop nop js (bad) imul xchg add jb,pn into cmp xchg pop insb pop shlb mov stos lods (bad) cs and or and lock daa aaa or add mov mov adc add add lret inc or (bad) xchg dec (bad) mov xchg push or negb adc pop insb mov aas rcrb adc test xor cld xor repnz daa xor notl mov pop inc pop inc add xor fisttpl jecxz addr16 gs or inc fisubl mov das pop pop jge lods mov stos dec ret hlt stos pop test xchg xchg cmp add clc std cmp adc pop and shll mov test xor icebp dec pop and test mov jmp sbb push hlt gs in mov cmc test lds div pop (bad) mov xor (bad) in sbb adc das jl push jecxz lods mov mov imulb cmc ret insb and mov xor call mul dec sub xor stc inc dec je (bad) lahf mov sub dec hlt lds push or fdivs adc pop addr16 sub mov (bad) loop jmp mov dec out xor movsl sub int3 dec push nop subl jae pop pop cs inc xor mov fist cmp sub sub adc add pop icebp sub fldcw or mov scas cmpb loop sbb popf scas sub mov dec fisub mov lods mov in xchg lcall xchg daa adc inc adc sub mov mov push test fidiv and xchg push insl xchg sbb pop ss movsb dec je in inc jl stos or cmp fsubrs jae dec jo lea addr16 adc inc dec imull push stos inc cltd fisubr and loop xchg jle les adc jmp mov mov or add mov mov or mov and out decb gs jge out push imul pop pushf cmp test cmp pusha vmread cltd mov adc xchg (bad) loopne popf shrl loope jp addr16 adc push dec sbb pusha in lea (bad) lods push and pop lcall xchg dec inc cmpsl leave sahf in loope cli mov push mov out mov mov repnz mov push jmp adc inc mov and subl sarb movsl jb idiv xchg cld xor rcrb sub sbb and and pop inc insb into lret hlt sub lcall cmpsl fidivl cmp cmp jnp dec pop fprem sub fist lcall inc adc es ds dec sbb cwtl enter das das lcall mov in je out in jne jl mov pop jp loope mov stc out and pop int3 and mov mov push cmp adc mov dec iret pop icebp mov inc in loopne push cmp pop cmp mov sbb xchg pop inc js popf dec sub ja,pt aam pop push ljmp leave sbb dec es insl xchg arpl in inc sbb dec push pushf push pop je pop xchg mov cmp push xchg in mov xor shrb jae push mov sub vcvtpd2psx adc cmp and push pop rcrl adc cmpsb add rcrl pop mov jbe inc scas sbb bound or inc pop push lods push fldcw movsb jmp outsb adc flds iret mov cmp loope (bad) test cmp jmp sbb adc cmp push aas leave add adc mov lahf in mov je ja mov (bad) hlt push loopne push xlat cld aas pop push mov push mov and mov movsb les jno xor xor (bad) mov mov lock loopne gs mov pop or pop fnstsw cwtl mov xchg pop dec and xchg adc jle mov sub add test add test jns mov mov dec ds and jmp jbe fild idiv sbb jle insb mov xchg adc movsb (bad) roll in test push add adc sub fistpl (bad) or rolb js sbb push pop je das iret xchg loope (bad) push push mov jbe imul push pop push inc mov pop idiv and cs jmp mov fcoml out cs push call jo movsb dec xor cmp pushf xchg sbb sub add push xor roll out mov int jns inc mov scas mov xchg fst sub cmp xor (bad) xchg adc mov mov loopne inc pusha add (bad) push arpl mov jno sub aad lret das or or ljmp fs xchg out (bad) dec mov leave fwait rcl andl mulb jl fisub js push push sub add xchg hlt adc fsubr std pop jne cmp out adc cwtl ljmp icebp push jmp or ret or cmpsl (bad) lods push mov sbb xchg xor js fstpl (bad) rcrb xor and jg push clc hlt int3 dec lds pop lahf mov out mov lahf pop cmpsl bound mov sbb scas sti nop test daa xchg jle (bad) mov cld out adc jbe and loope movsl out cmp sbb adc sub out scas xchg out ljmp inc pop sbb addr16 xor adc sub dec jbe mov mov imul insl xor sbb cmpb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor add cwtl add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) (bad) incl add add pop add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add pop push or (bad) (bad) (bad) (bad) (bad) (bad) incl add add or or (bad) (bad) (bad) (bad) (bad) (bad) incl add add or (bad) (bad) (bad) (bad) (bad) incl add add push add (bad) (bad) (bad) (bad) incl add push or (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add or adc (bad) (bad) (bad) (bad) (bad) (bad) incl add add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) incl add push adc or (bad) (bad) (bad) incl add adc (bad) (bad) (bad) incl add or adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add adc or (bad) (bad) (bad) (bad) incl sbb or (bad) (bad) (bad) incl add add adc (bad) (bad) (bad) (bad) incl add sbb (bad) (bad) (bad) incl add adc pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add sbb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl and (bad) (bad) (bad) (bad) incl add add and adc (bad) (bad) (bad) (bad) (bad) (bad) incl add add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add pop sbb (bad) (bad) (bad) (bad) incl add es (bad) (bad) (bad) (bad) (bad) (bad) incl add sbb pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add sbb sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub sbb (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub sbb (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub adc (bad) (bad) (bad) (bad) (bad) (bad) incl add add push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add pop and (bad) (bad) (bad) (bad) incl add add pop es (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add es (bad) (bad) (bad) (bad) (bad) (bad) incl add and pop daa (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add xor and (bad) (bad) (bad) (bad) (bad) (bad) incl add add xor (bad) (bad) (bad) (bad) (bad) decl add add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add push sub (bad) (bad) (bad) (bad) incl add add push cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add pop das cmp (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub das (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add xor (bad) (bad) (bad) (bad) (bad) (bad) incl xor daa (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add xor sub (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add pop adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add push aaa pusha (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa cmp (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub cmp (bad) (bad) (bad) (bad) (bad) (bad) incl push add xor cmp (bad) (bad) (bad) (bad) (bad) (bad) incl xor xor (bad) (bad) (bad) (bad) (bad) (bad) incl add xor (bad) (bad) (bad) (bad) (bad) incl add add and (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add inc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add popa sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc arpl (bad) (bad) (bad) (bad) (bad) (bad) incl add add xor inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop add xor inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp cmp (bad) (bad) (bad) (bad) (bad) (bad) incl add cmp (bad) (bad) (bad) (bad) (bad) (bad) incl add cmp (bad) (bad) (bad) (bad) (bad) (bad) decl add add inc sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add and (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or xor inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) incl add cmp (bad) (bad) (bad) (bad) (bad) (bad) decl add inc dec xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or xor dec addr16 (bad) (bad) (bad) (bad) (bad) (bad) incl inc inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) incl add add cmp (bad) (bad) (bad) (bad) (bad) (bad) decl add inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add dec push (bad) (bad) (bad) (bad) (bad) incl inc dec addr16 (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add push (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add push jb (bad) (bad) (bad) (bad) (bad) (bad) decl add add push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) jg add add sbb (bad) (bad) (bad) jg (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) jg add add and (bad) (bad) (bad) jg (bad) (bad) incl add sbb bound (bad) (bad) (bad) (bad) (bad) (bad) jg add add xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add add xor (bad) (bad) jg (bad) (bad) decl add outsl and (bad) (bad) (bad) jg (bad) (bad) incl add and (bad) (bad) (bad) (bad) (bad) (bad) jg add add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add add cmp (bad) (bad) jg (bad) (bad) decl add imul jg (bad) (bad) incl add add push (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add das cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add add inc addr16 (bad) (bad) (bad) (bad) (bad) (bad) jg add push (bad) (bad) jg (bad) (bad) decl add outsb jp cmp (bad) (bad) (bad) decl add add sub (bad) (bad) (bad) jg (bad) (bad) incl add add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add cmp ja (bad) (bad) (bad) (bad) (bad) (bad) jg add add addr16 (bad) (bad) (bad) (bad) (bad) (bad) jg add dec (bad) (bad) (bad) jg (bad) (bad) decl add outsb jp inc (bad) (bad) (bad) jg (bad) (bad) decl add add xor jg (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) aas add push add inc ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add inc dec jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add je inc dec (bad) (bad) (bad) jg (bad) (bad) decl add add ds (bad) (bad) (bad) jg (bad) (bad) call add add ss (bad) (bad) (bad) aas (bad) (bad) (bad) incl add add inc jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas add push add ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add dec push jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add push (bad) (bad) (bad) jg (bad) (bad) decl add add inc dec (bad) (bad) (bad) jg (bad) (bad) call add add (bad) (bad) aas (bad) (bad) (bad) incl add add (bad) xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas add push add jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add push push js (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg add add push push (bad) (bad) (bad) jg (bad) (bad) decl add orb jg (bad) (bad) call add add (bad) (bad) aas (bad) (bad) (bad) incl add add (bad) xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas adc add xchg (bad) aas (bad) (bad) (bad) incl add pop pusha mov (bad) (bad) (bad) aas add adc dec push mov (bad) (bad) (bad) aas adc add mov (bad) aas (bad) (bad) (bad) call add lea (bad) aas (bad) (bad) (bad) incl add pusha arpl (bad) (bad) (bad) (bad) aas add pop mov (bad) (bad) (bad) aas adc add pop (bad) (bad) (bad) aas (bad) (bad) (bad) call add xchg lahf popa fs (bad) (bad) aas (bad) (bad) (bad) incl add arpl mov (bad) (bad) (bad) aas push add add mov (bad) (bad) (bad) aas adc push add (bad) aas (bad) (bad) (bad) call add xchg mov (bad) aas (bad) (bad) (bad) incl add insb xchg mov (bad) (bad) (bad) aas pop add add mov (bad) (bad) (bad) aas adc pop add (bad) aas (bad) (bad) (bad) call add xchg mov (bad) aas (bad) (bad) (bad) incl add add lcall (bad) (bad) aas add adc insb jb mov (bad) (bad) (bad) aas adc add cltd mov (bad) aas (bad) (bad) (bad) lcall add add (bad) (bad) aas (bad) (bad) (bad) incl add add sahf test (bad) (bad) (bad) (bad) (bad) (bad) aas sbb add lahf stos imul (bad) (bad) incl add add mov (bad) (bad) (bad) (bad) aas sbb add mov (bad) (bad) aas (bad) (bad) (bad) incl add add mov (bad) (bad) (bad) (bad) aas sbb add mov (bad) (bad) aas (bad) (bad) (bad) incl add push movsb mov (bad) (bad) (bad) (bad) (bad) (bad) aas add sbb js mov (bad) (bad) (bad) (bad) aas sbb add mov (bad) (bad) aas (bad) (bad) (bad) lcall add cmpsl mov jne (bad) (bad) aas (bad) (bad) (bad) incl add jo test (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas add test (bad) (bad) (bad) (bad) aas sbb add test (bad) (bad) aas (bad) (bad) (bad) lcall add stos mov jp (bad) (bad) aas (bad) (bad) (bad) incl add ja lods mov (bad) (bad) (bad) (bad) (bad) (bad) aas sbb add lods mov cmp (bad) aas (bad) (bad) (bad) incl add jge lods mov (bad) (bad) (bad) (bad) (bad) (bad) aas sbb add lods mov xchg (bad) (bad) aas (bad) (bad) (bad) incl add add mov (bad) (bad) (bad) (bad) (bad) (bad) decl and add mov jnp (bad) (bad) decl (bad) (bad) (bad) incl add add sar (bad) (bad) (bad) (bad) decl and add mov addl add and (bad) mov (bad) (bad) decl and add mov xchg (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) decl and add mov mov (bad) (bad) incl and mov (bad) (bad) (bad) (bad) decl and add mov mov (bad) (bad) (bad) incl xchg mov (bad) (bad) (bad) (bad) (bad) (bad) decl and add xchg (bad) (bad) decl (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) decl and push add (bad) decl (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) decl xor add mov (bad) decl (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) decl xor add ror mov (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) decl xor add ret int mov (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) decl xor add ret int cmpsb (bad) (bad) decl (bad) (bad) (bad) incl xor movsl test (bad) (bad) (bad) (bad) decl xor add (bad) stos (bad) (bad) decl (bad) (bad) (bad) incl add mov enter (bad) (bad) (bad) (bad) incl inc add add aad mov (bad) incl (bad) (bad) (bad) incl add mov lret (bad) (bad) (bad) (bad) (bad) incl inc add add xlat mov (bad) (bad) incl (bad) (bad) (bad) incl add mov int3 fdivr (bad) (bad) (bad) (bad) (bad) incl inc add add fnstenv pop (bad) (bad) (bad) incl add mov int3 fdivr (bad) (bad) (bad) (bad) (bad) incl inc add add fnstenv pop (bad) (bad) (bad) incl inc add (bad) (bad) (bad) (bad) (bad) incl inc add iret fstpt pop (bad) (bad) (bad) incl mov (bad) (bad) (bad) (bad) incl inc add mov (bad) (bad) (bad) incl add mov (bad) (bad) (bad) (bad) (bad) incl pusha add add fnstsw pop (bad) (bad) (bad) incl add rol fdivrp (bad) (bad) (bad) (bad) (bad) incl pusha add add ffreep ret (bad) (bad) incl (bad) (bad) (bad) incl add ret loopne (bad) (bad) (bad) (bad) (bad) incl pusha add add loope (bad) incl (bad) (bad) (bad) incl add (bad) (bad) fsub (bad) (bad) (bad) (bad) (bad) (bad) incl pusha add add loope (bad) (bad) (bad) incl (bad) (bad) (bad) incl add out (bad) (bad) (bad) (bad) (bad) incl addb add out lret (bad) (bad) incl (bad) (bad) (bad) incl add call (bad) (bad) incl addb add jmp incl (bad) (bad) (bad) incl add ljmp incl addb add jmp iret (bad) (bad) incl (bad) (bad) (bad) incl add ljmp incl addb add jmp sar (bad) incl (bad) (bad) (bad) incl addb shl in (bad) (bad) (bad) (bad) (bad) (bad) incl addb add in rcl (bad) (bad) incl (bad) (bad) (bad) incl add add fsubp out (bad) (bad) (bad) (bad) (bad) (bad) incl add add out fstp (bad) (bad) incl (bad) (bad) (bad) incl add add loopne lock (bad) (bad) (bad) (bad) (bad) incl add add jmp (bad) incl (bad) (bad) (bad) incl add add loop repnz (bad) (bad) (bad) (bad) (bad) incl add add jmp loope (bad) (bad) incl (bad) (bad) (bad) incl add add in repnz (bad) (bad) (bad) (bad) (bad) incl add add jmp jecxz (bad) (bad) incl (bad) (bad) (bad) incl add add call (bad) incl add add add add out out add add (bad) (bad) (bad) incl add add ljmp add add add add icebp icebp jmp add (bad) (bad) incl add add in repnz (bad) (bad) incl add add add add repz add add (bad) (bad) (bad) (bad) call or lea sti repz ljmp xchg mov xlat ror adcl dec inc cmp xor jnp cmp sti bound mov add cld shl mov ret jne xor (bad) jge inc and dec jae xchg subl mov ds cmp pop add cwtl pop rorl lahf mov sub xor pop popa das lea test (bad) cmp arpl stos sub sbb out mov mull pop jne add cmp js inc adc loop std cld sarb sub es mov iret cmp leave mov jns repnz lahf mov imul push in push add js cmp into add mov in cmp and cmp push lahf clc add mov and (bad) pop push xor data16 xchg cmp push mov mov add sarb lods lods xor cld add sub xchg jl ss jne sub cmpsb xor in in sbb pushf das sbb pop lods inc insb fucomip cld or xor xchg int xlat mov je (bad) lcall and mov (bad) movsl fcmovnbe scas and sub xchg incb imul mov (bad) sub pop xor les mov mov fwait ret mov fs ljmp aaa out dec imull xor jmp and xchg add jecxz cvtpi2ps hlt jg xchg mov bound jbe imul dec (bad) xor mov jb mov sbb imul pushf ja in fcom add outsl ret test add mov call fcmovnbe loop (bad) outsl cs out push jecxz pop loope ljmp add sub inc add add add aas inc push inc jns insb imul inc inc add add inc add add add aas inc push dec popa je push insb inc inc add add sub inc add add add aas inc push dec outsl outsb jae popa je outsl outsb popa jb push push dec inc inc add sub inc add add add aas inc push dec outsl fs inc inc add inc add add add aas inc push gs gs imul inc inc add inc add add add aas inc push bound pop popa insb insb outsl arpl je inc inc add add add add jae add sub inc add add add aas inc push bound pop gs gs imul inc inc add add add cld (bad) pushl add add add incl add addb add add add add add add add add add add add add add add add add add cli or add add add add or push ret cmovo add add add add adc add add add adcb add add add mov add add add leave sbb add ret inc and sahf mov sub inc rcrb and sbb addl xlat xchg inc push add inc stc mov adc mov decl js roll (bad) loopne jmp xchg test mov cmp inc mov popf sti jmp stos push inc mov repnz test pop stos clc scas adc (bad) inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov or addl cmpsl xchg cmp xor dec cmpsl in cmp sahf xchg pop lcall lock mov popa sar mov fsubs stos xchg clc repz mov subb fwait xchg and and add int3 int int3 int3 int3 int3 int3 int3 sti aas jno or mov mov cmp dec lea aas ret shrl mov icebp aas rorb and cmpsl out aas inc cmpsb mov insb scas add aas xor aad mov std std into popa test ja stos in das dec pop loope les aas xchg les jne int mov addr16 push mov xchg aas and (bad) loop mov jp popa push pop sarl jl mov das lea mov inc aas and movsl jmp jg sub jge mov inc rcr push arpl int3 and call cmp jp and cmp mov cmp std xlat cmp mov sbb add movb aaa fldt cmp jno shlb (bad) out dec nop pop cmp fisubl xor push lahf inc pop mov sub dec in ss push scas into imul faddp jge call mov xchg cmp push andl dec dec gs std orl in ficomp frstor add add add add add add add add 