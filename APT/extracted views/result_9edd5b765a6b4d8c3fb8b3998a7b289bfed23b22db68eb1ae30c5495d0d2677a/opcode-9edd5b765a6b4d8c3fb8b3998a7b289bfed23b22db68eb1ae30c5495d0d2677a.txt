xor mov jle jl and lds xor enter iret push shrl cmp sub stos pop cwtl xchg mov add (bad) cmp test dec mov sub pop clc or jbe lahf ss mov fildl (bad) sbb jbe sbb cld adc sub arpl jle jle fisubr xchg xchg add pop sbb lahf (bad) arpl pop ljmp rorb xor out or hlt sub xor mov xor loopne sub push movsl mov in arpl fs enter mov inc movsb and cmp inc sbb jmp test mov scas push aas arpl in jno out cmp cmp inc mov stc xlat xchg inc and mov mov push push inc dec push cltd jmp out mov sbb shll xor or jo push push movsb mov das push cmpb (bad) out popf mov jmp cmc (bad) lods mov idiv and adc mov adc es fnop jne aas xor mov xchg loopne sub xchg fistl mov out cmp cmp mov jecxz fbld xchg sub inc fdivr movsb std push rolb xchg lret adc lret (bad) xchg out out (bad) pop mov jecxz aam add mov pusha xlat adc dec jge pushf scas xchg sbb inc jns aad mov dec shll lea or xor pop movsl xorl popa dec jge scas lds push sbb inc sbb mov mov mov pop and lods mov js (bad) mov xchg and inc jnp pop fdivl imul jno decb int3 mov mov xor inc cmp movsl xchg mov loope xchg mov inc mov fcmove push lahf xor cwtl in dec repnz mull fcompl mov or and mov int add add inc sub call mov push xchg pop and jl inc jns inc lods test sti jns in leave lcall cmp xchg ljmp bound fwait dec push push adc dec cld out test mov push push jno mov and xor es mov cli call aas sbb ret lcall xlat bound adc pop js adc imul insl imul fdivrs adc cmc ljmp mov outsl jns addr16 cmpl and add hlt jecxz inc mov push cmp jb add xchg decl adc (bad) outsb jmp lds aas jnp pop sti sti insl je cmp jg inc out dec shrb mov mov cmp je outsl into jb addr16 jge ds xor (bad) jle out push mov or xchg pop push pop pop xchg inc inc jge aaa fistp push daa setbe enter add mov ljmp rorl clc mov jo mov call cld sub cmp dec cmpsl movsl in repnz mov aas xchg mov call push in iret pop daa out data16 movsl gs jg mov bound jle mov or jg outsb cs lods insl sub sub stos imul jg push jmp pop test shrb adc pop scas das jns inc in outsl xor xor ljmp pop jns inc les jge push mov imul in repz aas jns sbb push jle lahf insb aas pop dec daa push pop jle mov sbb (bad) and aas add mov gs cld and dec jmp mov xlat mov fistp xor ret sbb scas mov add clc jg jbe pop dec aas in cmp mov push cmpsl faddp jg adc cmpsb mov pop bnd leave jg dec (bad) out mov push jg xor pop popa flds loopne or pusha push bound scas es jg adc in cmpsl lret jg push jbe and hlt xor insb aaa inc pusha mov inc pop scas subl sub rcrl mov inc mov push push lret aam adc jg xchg pop repz sar jg pop xlat ljmp jg mov mov mov nop ret and or pop cld (bad) push cmc jg mov das mov cmp xchg mov xor xchg inc insb add fbld fnstsw popf test cmp and mov lcall inc pop push or dec xchg dec clc xlat cmpl daa push mov pop cwtl adc sbb xchg inc (bad) ficomp test mov js and mov (bad) mov je test xchg jae lock jmp adc bound scas jg and fdivl xorl lds jg hlt pop xchg js dec inc mov js or out fwait xchg fdivrl sub adc xchg fisttp jbe (bad) pushl jg movsl sub jg lods jbe out addr16 mov dec int mov xchg adc jo bnd cmpsb je aas cld jg movsb js jbe dec pop sti setg sti dec sbb push pusha aas jg xchg popa ljmp imul data16 or lods push cwtl xchg xchg jg test jne fwait popa jno hlt jg sub or daa je aam ja adcl xor inc ljmp aas inc and hlt fldt stos jae ret jmp pusha xchg pop push push in mov ja sarl les fstpl (bad) adc push incl jg pop mov jg inc mov arpl adc out cmp pop gs popf mov mov xchg sbb insl mov cli fistpl and out pop das cmpsb dec xchg lea mov cwtl sub (bad) jg (bad) gs xchg and lcall mov jl pop or mov mov notb adc mov aam add shrl (bad) xor pop cmp jns mov push and inc mov jg inc cmpsl pusha push mov hlt fbstp fdivrs inc jg dec sbbl sub enter pop (bad) push mov popa pop sbb push icebp not xor pop mov mov jl jecxz nop mov dec pop jne and dec mov loopne fiaddl push jg (bad) lea jl lret aas sahf add rolb loope mov subl add dec (bad) jg xor cmpsl jg aaa or lea pop ficompl push jnp (bad) out sarb cmpsb jae out bnd pushf mov xchg inc xor inc addr16 (bad) mov pop jg lcall jg cmp sbb jg out fistpl test leave and (bad) insl xchg add pushf push (bad) loop div jg movsb xchg (bad) incl push inc outsl gs adcl es sarb mov iret lret xchg lods jg mov cmp and push mov lock gs sbb jg push dec cli xor pop push out out jg fmulp fcoms inc leave aas adc inc mov cld arpl and add pop int pop jno (bad) push xchg cs mov or jg inc push push out jg cmp add fwait sbb pop jg xchg xor iret jg mov adc jle jnp out inc pop rcrb test cwtl test dec (bad) and repz mov xchg add and insb cmpsb mov aad movb fiaddl leave cwtl out inc jg xchg push lret scas loopne icebp gs inc push jg sbb mov mov out pop lea shr pop sbbl std jg fadd mov jg xchg mov cmc add inc jg insl shrl scas in repnz scas out xchg pop lods xchg pop jmp and mov fwait icebp dec not push adc mov aas pop stos rcrb cwtl das add mov adc fwait jg lds mov ljmp ficompl iret mov addr16 fnstsw jge cmp pop jbe lds ss pop es jecxz add push fcmovne (bad) into cmp cmp mov inc inc out pop jg stos sahf and push and lods jo je push mov sub ja,pn fcoms sub aas xchg mov (bad) xchg push jg mov sbb pop cltd push sub mov adc lock pop in jno test inc inc jg dec mov mov lods xchg inc popf scas mov cmpsl push push sbb nop into lds lock pop loope das test lahf pop not adc into jg stc pop dec and dec push frndint add (bad) fstpt loopne push in sbb stos mov and xchg mov xor mov cmp and sub jg dec je push sahf sarb fldcw nop (bad) dec daa pushl outsl dec fldl add sub pop mov add in dec bound mov addr16 pop pop stos lea jg pop cmc cwtl lods sub and inc xor jg (bad) sbb xchg jbe dec or rcrb jg xchg lcall add lret push xchg in inc (bad) push mov jg sbb call and adc sbb js sti test cmp mov lcall sbb fnop inc mov cmp mov pop pop subps lds loopne pushf (bad) aas push xchg bound adc repnz mov dec sbb (bad) xor cmp pushf xor xor test aad lock jg push mov jg clc sbbl lret jg mov nop add aad xor sti leave adc loopne mov push dec inc arpl add int3 scas sub cmpsb jg je or ret js lret mov aas push or push jg pushl xchg dec out mov or cs and outsb jbe jns xor adc mov jg shr inc push call xorb lock jg xchg lds ret inc cwtl mov pop fs mov xor jecxz add outsb popa jg mov xchg push (bad) into inc lret ljmp push jae idivl adc pop jg das popl or inc jg push and sbb in pop sbb add mov push mov xchg add sbb sbb (bad) clc cli stc (bad) jg popa aad push dec enter dec xchg lcall lods push and jg lahf lods mov aas mov sbb inc xor jg mov adc jg in (bad) cmc fiadd ret mov aad jg adc or sbb arpl cwtl es ds lret mov adc jg je shrl cltd xchg js cld xchg sub mov xor in out je sbb jg mov scas cmc mov movsl int clc push jg mov xchg aaa inc dec test mov and adc outsb inc repz pop cmp pop (bad) cli jg sbb xchg lock jg cmp pop sbb leave mov std xlat dec dec test inc movsb add and cmpsb sub jmp xchg test imul stc pop fdivrs jno lods sbb jg sub stc pop imul mov push jg cmp mov xlat add dec inc and or mov movl push sub push mov jg sbb jne jg jmp mov and sti and add mov add fiaddl stos push dec xor inc mov addr16 pop push sbb dec jno xchg dec in outsl and xor dec sti cmpsl cld mov ds mov sbb mov pop inc adc mov jns in or aaa mov test pop ja fildll fimul js mov sti inc dec popa fdivrl xchg out mov sub inc push inc mov mov mov insl out int js or fmuls inc push push arpl (bad) push xor dec jmp pushf jbe cmp movl sbb mov out ja jg mov dec fwait add insl xchg cmpsb jae cld adc aas push popl or (bad) adc sub adc repz movsl pop (bad) rolb jg ret pop push hlt mov dec lret pop in inc dec jnp insb dec pop jg scas hlt adc inc dec repz enter loopne stos cmp fcomi ja repnz jg mov (bad) jb roll mov outsl scas cmc ret in (bad) data16 mov dec jge mov aad cwtl rcr leave jg pop xor push ret pop bound mov jg cwtl push in push inc cmpl imul repnz sbb jg mov xchg adc adc mov aas xor je jo and mov adc cmp cmp mov int3 pop or iret rcl inc repz fisubrl xchg jg mov ret adc (bad) das jg xchg movsl pop dec jg push fisubl jg pop loope mov mov add cmp jno (bad) cmp xor jmp xor cltd adc (bad) mov xor int3 push aas sar jne out orl mov mov scas sub mov mov lods sub jg sbb scas sahf jg or jns jno mov pop ja idivl (bad) jne xor jo jg cmp addb mov or xor sbb mov ljmp hlt add leave dec sub sbb aad int3 dec push clc jg or add mov addr16 jecxz popf jg jb pusha mov js cli dec fisttp jg (bad) fldl fisubr and mov push lahf jg fild imul inc cmp je mov xchg inc jg ret jb pushf adc mov push mov fsubs mov aam aas xor jl stos cmovge cmpsb fnstsw data16 mov aaa (bad) dec aas add cld stc sub mov mov sti and imul dec mov jg in push and daa and fisubrl in jg inc data16 xchg bound push adc jl inc and sarl dec inc jg ss push sub aas mov (bad) inc jg shlb cmp jg dec mov ja inc cmc mov cmp dec negb fldenv bound push loope push xchg pop add ja pop lea (bad) push stc dec jb dec pop scas mov imul mov dec jo out lods loopne test xchg divl mov xor pop mov inc adc scas and jb (bad) jns mov out jg dec ret cmp jl push xor jg xchg ret pop xchg out insb mov sbb (bad) sub pop je sub lock xorb cmp push ror lds jg sub sti mov ficomp outsb std lret insb js pop or inc outsl adc dec jg ret ret jg rorb imul xchg and jmp sbb aas ret pusha (bad) addr16 les sbb lahf or add add xor shlb sub mov sub push adc negb cmp jg lahf data16 cmp nop jbe or push je sbb pop int3 pop (bad) and push pop call jg (bad) inc push je sti test adc dec pop adc aad mulb (bad) mov push mov lods fdivs in jmp icebp cmpb cmp sbb mov inc pop inc in pop sti jp cmp xchg sub jg ror push add pop or xor xchg inc pop mov mov rcrb inc dec mov pop cld jg dec jno mov (bad) in mov dec push rorb pop sbb and insb mov jne sti push xchg push nop jg jbe mov mov insb jg jno dec and imul mov (bad) or (bad) cmc popa jb stos mov push mov notl push pop leave sub (bad) icebp add out arpl mov popf jg mov repz add out sub call and inc jge test inc out shrl add jnp inc xchg mov push scas movl les (bad) pop add addr16 inc adcb dec cli int dec ds sarb xchg xchg push addr16 nop cld xchg ret (bad) jg sub jae or fs inc neg sbb insl stos push popf mov xchg pop or jae out jg xchg mov repz add xchg mov sahf cs popf push pop stc aas mov or mov decl sub mov pop sbb test inc pop std lret out pushf jg jbe mov jle fwait out outsb aad xchg dec jg js inc dec sub jg and xor xchg jg pushf jne ds fcompl ja cli sbb stos dec inc push and lahf aam lock jg push clc lcall arpl pushf jg sbb cmc mov (bad) cmp pop mov sub xchg aam jnp add lock pop jg test out or js sti imul (bad) decl icebp loop (bad) leave jg jae pop sahf je popf jg movsl movsb cmp in sbb jnp mov stc xlat cltd jg scas push dec fidiv setge pusha pop or aam adc in fsubl testl mov jl dec outsl call mov inc mov fist pop xor (bad) outsl jg ljmp mov lret int3 jle jg mov scas in repz cmp les ss js and add xor cltd adc fstpt sbb enter pop std cmpsb inc lret fnstsw jo aas jg call mov (bad) pushf stc outsl mov push dec inc mov mov jns call enter aam (bad) jp int3 icebp inc int adc or in cmpsb repnz outsl mov fwait jnp lock mov out (bad) aam aaa jg mov pusha loop aas mov addr16 fsubrl (bad) pop mov cwtl inc stos aas rcl jg out mov mov rcrl mov xchg lock mov (bad) jns mov popa fildl pop repnz lds imul push xor jle lock and cs or mov jbe xchg push (bad) repz mov cli (bad) int outsb aad lahf inc dec mov stos fisubrl movsl mov mov dec out push popf loope add inc lea pusha jmp gs daa xor adc push lret pop sahf cmp rcrl mov out fnop mov add nop rolb mov out out scas add std rorb push ret push test mov les mov (bad) js loop cld mov or jno inc repnz xor divb ja fisub out xchg cld sarl scas std sub test mov jae ja arpl jnp dec (bad) mov sub popf mov int or xor dec xor vpsubb lret inc imul sbb sbb ljmp mov aaa cmpsb mov notb out dec push inc aam sub dec lds adcl and push mov push ret cwtl loope cmp pop xor cltd adc stc pushf (bad) jne fsub jno push and in shl cmc push mov sub ret and addl icebp inc push sub cmc mov push pop jmpw (bad) mov insb es fdivrs fs add mov leave mov inc sbb movsl xor inc or jg lds (bad) xlat imul popa stos push sub fldenv fild out dec mov mov nop lods or or ret jmp aam (bad) adc fs bound fs jae push call aad mov test shl jmp push lea jae jmp dec inc not pushf pusha mov inc ror rcr xchg bsf movsbw mov sbb pusha or rol mov clc cmp jmp lea jle pusha movl jmp mov push mov inc lcall outsb rcrb es push mov adc iret loopne nop pop push data16 inc mov rcll fadds shrb jnp ljmp xchg sbb inc sub inc shrb out xlat fisubr scas cltd fwait jae jmp repnz dec movsl mov jl xchg popf out popa mov push dec fldl2t pop ja add push push mov xor dec pop sub imul push insb incl or push cmp and push decl pop mov sbb xor push loop push inc pop pop xchg dec popa imul and popf movsl jecxz loope (bad) outsb xor mov insl ljmp jl and sar pushf mov push dec and inc lea lcall pushw loope adc mov test sbb adc aas adc leave jne mov add or daa scas sbb inc stos movsb fldenv icebp mov frstor int3 mov test (bad) push jge cli mov scas ljmp push idivl and lock xlat push fcompl cmp movsb sbb xor aas inc test ret in scas stos fsts dec mov add clc call movsl dec jmp dec push inc fld xor add or flds or mov mov fxam mov push pop cltd push lcall decl stc push sti les nop jno cmp das outsl std mov inc mov shrl xor decl bound inc fwait imul mov fstpl mov je xor add pop xor into sub enter mov cmp jbe aam lds mov fs push push iret in rorb push pop jo push dec jmp push movl jmp push xor jmp or call lea je bt pusha pusha cmp movl call lea jle pushf movl pushf call jmp push lea jae pusha rcr mov inc mov push mov test cmc xor jmp fmull inc cltd fs pop insl cmc add shlb fwait sub jb ja jns fucomi jg repnz mov or call out leave lods setno jo cwtl mov lea pop or ljmp adc mov sbb mov mov (bad) xor icebp (bad) mov mov rorb stos inc out hlt inc loope xlat cs xor inc xlat cvttps2pi adc clc cmp fidivrl cwtl xchg cmp decl and pop in jae negl jmp insb in sbb lret jne sub insl mov addr16 pop orb mov faddl pop popf xor mov inc mov (bad) or pop (bad) (bad) xchg rclb mov andb incl sub lret add cmp xor or pop into push lds adc jo loope xchg and xor call lahf (bad) sub push lock std std popl dec ret jp mov lea fs pushf mov pop add xor sub mov shrl dec dec push and aam pop leave add in sub test inc std cltd and dec fs inc sbb in xchg push jbe hlt xchg pop mov lds test fldl xor inc add fdiv pop jg and (bad) jae cmp ljmp mov push insl bound (bad) lods imull in mov lock xlat into sti and xlat shlb mov repz pusha mov je inc or sub sub adc mov out mov mov pop xor ss (bad) lods aaa fild mov sub pop xchg xor movl lock push jmp daa fsubs dec push inc leave aad sbbb mov shl mov push dec call jmp mov outsl push nop int3 outsl or ret jno bound cwtl jbe push cmpsb dec mov ss mov fsts in pusha clc pop mov mov test mov aam mov ljmp icebp jmp lret dec loop in outsl repnz jg push lods jge sub push pop js adc lcall (bad) jle stc out daa shl and out push or out insl jno pop fs in and mov outsb (bad) int3 fldcw push pop pop (bad) push jo pop insb push out mov mov mov pop out outsb mov arpl jl mov test xor das das add pushf sub push pushf sub mov call lea je push cmp push lea je pusha push lea jmp jmp movl movl pusha jmp pushf mov movsbw pushl mov lea mov lea pop mov push pusha call push pushf pusha lea call pushf pushl mov bt sub jmp xchg push movl call jmp clc sub bt pushl pushf movl cmp movb push pusha jmp or pushf push lea je pushf cmp lea push pushf pushf pushl ret mov jmp fsubp sub push push inc add pop (bad) (bad) stc xchg mov and and or fidivr mov call rcrl testb xchg (bad) sbb mov (bad) in adcb push outsb fstps mov mov (bad) movsb xor add push aas xchg lds add stos mov addr16 mov out out call mov movsb lds inc stos icebp jnp mov xchg leave and mov xor mov js adc xchg shr mov xchg in xchg orb xor loop (bad) in js dec mov mov and lods les daa lret pop mov stos mov push dec int3 lods fldt in jae xor (bad) (bad) jae push imul sti or xor mov push inc sub outsl jno mov cmpl mov js xchg sbb jae (bad) mov cwtl xor push ja adc lret xchg loop cmc insb mov add cltd jmp outsl jns pusha mov jne inc add jnp mov insl mov mov (bad) ja mov stos clc xor divl cmpsl aam repnz loop stos pop int ds or bound (bad) out push daa or mov loopne addr16 pop fbld aaa and add es jmp xchg out mov jmp and jge shll add dec fnsave cli xorl pop fdivl xor xchg rcrb lods (bad) jbe cld pop scas sbb (bad) std insl push es lods fnsave add mov xor dec mov outsl lods scas xor stc decb jg mov push scas test fs int3 xor sbb dec mov dec xchg mov push outsl aad mov stos (bad) sub inc xor mov sub dec dec fdivs mov xlat and sub and adc pusha lcall push mov dec ljmp xor cs insb add dec mov xor movsb orl jge adc sub (bad) sti enter js xlat sbb rcrl repz and imul push insl test xor jns mov cs (bad) jl cmpsb pop inc out cmp andl movb cmpl inc push daa pop int push pop rol inc or lods jb pop (bad) sub cmpsb test std push mov jb mov stos aas push push inc lret cmp or mov cwtl push sbb clc (bad) push lahf imull mov push js daa pop sbb pop xchg ret and xchg inc in pusha push add dec popa cmp test or into scas mov lock nop aad popl out loopne mov push xchg enter fwait pop fs xchg inc jg xchg sub outsl xchg out enter mov jne fldl stos mov repnz inc inc fistp lods mov push xchg jge negb (bad) cltd mov inc sub push and aaa and sub mov test roll add insl pop xlat pop pusha insl ljmp jecxz insb xchg inc jno enter bound mov push pop and test sub fist mov xor sbb push sbb int sbb mov lods insl ret rcrl gs or jl mov enter xchg repz sbb out outsl inc icebp jge cmpsl dec jne rolb ret xchg and (bad) ds dec lahf fisttpll add (bad) push (bad) call out inc mov cmpsl out insl enter cld sub xor add mov pop jg push test pop or or jp movb stos movb movb push lea jmp jmp mov lods pusha pushf movw not movw call rep pop not pushf pushf mov push push pushl lea jmp sahf mov js jg dec sub js pushf cs pop icebp push std inc xor jbe jmp jge ja pop ret sbb data16 add jae cmp in dec lock xor xor jg,pt mov add movsl scas inc mov dec (bad) mov add pop dec add inc pop inc pop idivl ds insb jbe int push cmpb test movsb mov (bad) and xor mov scas out addr16 call mov push xor jns lods movsl jle fs outsl sbb or sub mov adc std mov gs mov sbb ss gs pop stos lcall sahf fstpt ret xchg sub int fdivrl inc rcrl push imul inc adc jge add ss prefetch or dec or adc addr16 jae sub jp (bad) jns or or inc push mov les out addl add pop xor lahf push jg add mov dec push fnstenv sar sub add sub mov lahf (bad) insl sbb mov pusha jl js sub jl push cmp inc pushl (bad) fwait (bad) xchg imul mov mov (bad) push pop std int out mov inc sub lcall sub fimull in pushf push int mov sbb pop jge fnstsw scas add cmp cmc or js dec and in data16 outsl add pop mov add adc mov ror lret push mov xchg into sub dec data16 outsl cld rol stc push (bad) cld sbbb dec dec rcrb incb gs adc jg mov mov int jbe mov imul sahf add pop (bad) out mov fwait inc addr16 xchg jp lret popa (bad) addr16 push sahf icebp faddl push sbb decb mov bound push aad xchg add mov je pop inc in in jnp jno sub pusha sbb jb jae js and inc cmc inc in xchg dec (bad) nop into pop (bad) pop rcrl les push adc xor repz daa jne repnz cmp add cltd gs js jnp rolb xchg (bad) out and push movsl ds cli (bad) pop je pop std pop outsl int out jbe cmp in (bad) sub mov fsubr in stos cmp insl xchg cld ja aaa mov ss test push cmp xchg lret adc sti mov rcll (bad) dec ds aas js loope push (bad) jb jle pop push push sbb iret pop mov int mov movsl mov fwait cmp or jbe mov aas ljmp fidivl into insb sti dec dec (bad) mov dec mov pop enter inc aas repz adc movsb or insl or mov jnp imul pop xchg incb ss dec add sbb adc outsl or and pop insb jecxz xchg jp sbb mov pop xchg xchg push pop xor aad jl into ljmp fisubrl sbb std push dec cld xchg cmp fstpt les inc aad pusha addr16 jge sub ret in test pop pop sbb decb xor add inc fsubl add sub repz sbb mov sub insl in sbb icebp fdivrl lea xchg jae cs pusha daa dec out jl dec popf outsl js orl mov pop mov jmp outsb add push out sbb je jmp jo ds lret (bad) mov inc ret xchg fstps sbb dec repz scas sub dec jg dec gs aas je scas out je jo fisub sub stos mov cwtl adc sbb jno add mov outsb push mov mov into jno cli mov dec lea push sbb ds mov mov jb or and into outsl push push fstl mov and sub scas xchg mov pop jg jl add notl in insl addr16 jno xor (bad) (bad) pop fwait sbb or addr16 shrb outsb and (bad) mov sbb (bad) pop sub and (bad) pop lods mov dec sbb cmp jae add xor add mov cmp mov bswap add pop lods loop inc pop (bad) lods outsb (bad) (bad) ja xchg add dec rcrb pop and ret jecxz push add sbb dec push test into scas inc inc loope stos xlat ja or sbb pop push inc cmp addr16 leave dec add ljmp pop (bad) sub jns pop call popf xchg in cs pop and (bad) xor lods mov sub add jae divb ds inc pop jge jo jns gs xor inc dec cmp mov cmp mov loopne jle xor xor add jo mov jg in sub out inc mov pushf das imul inc xor xor add xor outsl push aaa movsl add inc into mov add mov fimul das imul pop jbe or fsin int popf push cwtl ja fmull or hlt (bad) insb lret loop mov stc std xor movsb jle roll dec push sbb jo ds popf cltd inc jae ret mov jge pop fimul dec (bad) cmc mov cs mov inc push pandn add cmp insb pop lods add add ret cmp popf adc (bad) dec or mov jmp scas dec sbb outsl mov inc xor std jg or cmpsl icebp add pop hlt cmc test xchg jl jno inc jns daa inc mov popa mov scas (bad) cmp sub (bad) loop outsb nop shrb mov mov icebp jb notl xlat push ljmp sbb test cli adc je leave jnp fsubs add mov hlt pop repz jp lret mov and add adc push xchg out mov jns inc cli aam outsl in cmc addb push test inc (bad) mov adc mov sti add inc addr16 stos insl insl sbb loop push mov fucom push jno (bad) cmpsl loop pop push mov jbe je sar cmp add pop adc lods xor ja mov add cmp sarl inc lret inc pop xor ficomp push jg bswap sti sbb jg push mov sar cmc sbbl ret push bound inc pop mov test mov (bad) jl int3 push jge mov into std std jne clc aas push or xor dec or popf in push jp addr16 pop ds scas sbb xchg icebp add sub sahf fimull test xor pop aas scas rolb std sahf call cltd push outsl jmp add orl jae pop pop rorl jecxz test add jle incl jmp cmc test mov sub insl push lods mov sar pop pop mov jnp cmp sub jo cmp (bad) xor mov sahf pop xchg ss xchg pop pop sbbl xchg mov jle (bad) jnp push cmp pop fiadd inc mov or incb mov mov pop add out push cld sbb dec sarb xor dec jne mov lcall dec in cmc test (bad) jnp pushf cwtl jo shl pop xor dec or sub push xor inc mov sbb sub or push push pop push das jge,pt cmpsl inc lea test inc jnp gs xchg add cmp inc jl inc pop jns leave and (bad) mov adc aad (bad) nop pop lcall pop sarb addr16 mov cmpsl jns mov ds jmp xor jp add int3 outsb aam (bad) pop fcompl fcomps inc pusha and pop icebp scas pop jnp cmp jns mov push sub adc or shl sub mov add xor jno (bad) (bad) inc xchg jp sbb test fld sbb imul mov inc sub gs mov dec fcompl stc inc test (bad) cld add sub xchg xor jl pop nop dec insl add or sbb pop insb cmp jl pop (bad) gs lods dec inc sub push adc pop or lret shrb rclb repz jb sub (bad) lret out sbb push sbb pop nopl cld cmp xchg inc daa (bad) fisubl fidivl (bad) sti mov stos sbb xor and fisttpll (bad) hlt cmp push push dec or ds imul in sub mov sub mov cli (bad) mov push cmp adc jbe addr16 imul inc pusha stos testl inc cmp push push sbb pushf clc push imul push repnz mov mov inc cld add xchg or pop nop sbb test mov es push pop lods jno loope mov (bad) pop mov jne gs insb arpl xorl xor xor pop mov addr16 dec fidivl push cwtl push cmpb fdivrl pop push or imul inc sahf int xor pop push jle pop mov and inc outsl pop inc addr16 pop pop pop inc ret add scas ror jns add in enter jge std adc imul pushl addl int3 jl dec add pusha jae gs jns sahf leave push sbb jnp pop cmp pop dec fisub push inc outsb fdivr pop lret lcall ror arpl lret xchg push jecxz in je cmp ja mov in xchg (bad) jecxz sub push aaa push inc les (bad) xchg sar push movsb jb loop add andl ja sbb add sub mov outsl in loop gs in mov fs in outsb movb cli xchg cmpsl mov add imul enter xor aaa mov pop (bad) mov repz aaa js bound aas push push sahf repnz fs dec test stc pop or dec jne dec inc test loope push and (bad) pushf inc jae (bad) add mov loop mov imul in jge rolb dec cld sub outsl jne addb nop loop cmp xchg pop sbb add out movsb mov out jp data16 jge mov xchg mov mov add je lret arpl push jecxz dec jg gs xchg pop pushf xlat (bad) repnz les or fcomps push dec mov cltd roll (bad) repz das daa push pushl xchg inc cmc cmp add mov inc enter or rclb sahf jne and rclb call add repnz xor imul mov cmp js dec int3 pop pop xchg ffree dec addr16 xchg in popf cmpsl mov and and lret jno xlat and lds ss lds cmp xchg push add jg jl pop jp xor lds mov iret (bad) xchg xor cld inc pop inc mov add ja mov mov pop pop cmp jl js sbb xor adc pop sub push jb (bad) fimul sti clc sbb imul add push add gs inc scas scas cmpsl bound add jno mov cmp sbb add sar inc loope push jmp or add repz in fdiv repnz lcall add bound add inc push pop gs iret cmp mulb insb mov sbb push ds sub mov or or mov aas data16 scas andl and inc data16 dec out jl aas fucom aas inc lahf aas xchg jle sbb jae out pop outsl jecxz outsl es outsl arpl xor gs pusha jl and sub jb aaa je lahf in cmp jp mov pop std jns mov scas bound sub lods daa jbe xor and ljmp and dec jle pop pop cmc jne pop arpl jg pop or fs loopne negl jno dec in popa pop pop pop pop xor insl in jnp jbe nop out jns sub push insl pop sub pop imul out jnp pop sub addr16 jb cmc addr16 push gs jnp fsubrl dec jle aaa jae imul ja jge imul jnp jp sub nop in gs dec arpl push insl dec jno pop dec jmp pushw dec bound pop cli sbb inc inc mov mov jb dec fsubrl jae inc das inc cmp pop jne push jl dec push int3 push aaa data16 pop imul cld lahf cwtl pusha jb in dec pop js pop mov jle cmc gs lcall inc jb es cmp fcomps cs ja pop push or pop push sub push pop jno pop fdivrs pop or fsubrs pop sbb jne dec xor mov cmc ss add sub pop cmc jp pop jbe xchg js mov repnz imul popa movsl push jb ss outsl popa pop insb cli add jnp loope daa outsb add stc dec rorl add inc pop adcl data16 add mov push nop xchg les in bound xchg in ss push aas or lock inc lret fcmovu insb lds icebp js mov push imul jbe loop orl inc inc (bad) push sbb lret jno lds leave iret in outsl iret mov aas sbbb dec mov hlt jecxz push cmp iret mov cmp xchg cmpsb lcall cmpsb (bad) push pop ror enter sub add into sti lret inc inc dec imul lea xchg lret and pop gs cmp push addb mov (bad) stos mov jl ror xchg cmpsl inc negb push inc xchg and sub lods rclb push jl sub mov shll sbb sub in dec jge jl arpl scas cld cli lods imul mov cmpb daa push lods mov jnp les jb inc scas jp pop and mov insb pusha bound (bad) push lcall mov xor fsubrl mov jp orl gs ljmp sbb push in lret lcall in lret or movsl push imul lahf lcall incl adc jecxz (bad) gs (bad) (bad) cmp jle jg sbb sar aas enter lds jae (bad) int3 cmp lods jle ja push mov jge mov jbe mov andl jp push outsl insl and cli add cmp ljmp cmp inc pop ljmp fldt jb sar jae ficomp lcall insb cmpsl and hlt add inc pop pop sbb outsl repz loop push out test ss mov outsl insl inc cmc xchg lock gs (bad) aaa sub jge (bad) gs cmpsl pop loope outsb call jno mov ja pop mov fidivl xchg mov sarl les cmpsl mov xor push mov lcall (bad) pushf adc inc sub jnp ret pop lds push jb jmp inc ljmp aas and repz and mov icebp ret in stos lds gs add dec repnz and outsl mov mov and fmulp lea outsb inc and add loopne mov fwait sbb loopne cmp sahf jle add jle arpl add xlat adc inc and lahf xchg jae cmp pop jbe dec outsb dec sbb std inc fldl ja les enter aas int3 aad scas mov rorb fbstp add int3 pop stos (bad) pop into insl inc dec mov mov ficoml push or xchg cmpsb rcrl push xchg jge jb pop cmp bound mov fistl push ja mov sub dec inc call cmp or ja aas push fst ja push insl adcl pop add xchg push add nop cwtl push adc lret sahf outsb mov mov jle jmp push inc xor xchg adc sub jb jno add fldl pop icebp out stos xor std cmp ficompl sbb aad (bad) jp aaa negb adc dec adc lods ja adc add mov test outsb mov out dec shll add sub pop adc mov add mov ret fsubrl mov int lret jge add dec inc std ss fistpll or jne mov fdivrs push pop das cmpsl add fcomip fs fs pop mov add xor dec notb jp cmpsb sub stc outsl add sbb (bad) mov aad cmc lods jae sti cmp dec pop mov ja mov jmp dec cli push and inc bound (bad) push les lret or les sub into subl or daa and mov xchg cwtl paddsw push fmull jno out jmp cld adc jle push pextrw mov loope out lds inc mov push cmp fisubrl insb sbb sub clc pop das and pop (bad) pop in rcr inc (bad) pop and das pop movsb jmp or ja mov (bad) out jmp jb stos addr16 (bad) ljmp xchg pop mov pushf push daa sbb cmpl jg mov pop fcmove subl and jno mov dec lret jne cli outsl pop stos dec cmp pop fisubr mov aad pop arpl data16 inc push or ds (bad) mov mov jbe pop (bad) in leave push add mov rolb cwtl add (bad) lds sti pop jnp into sarl fiaddl pop test jle inc inc nop int mov addr16 pop dec add or and fldl push js add movsb inc dec xchg adc inc sbb push hlt or nop xlat jb rol bnd ret (bad) negb aad jge ret dec insb adc ljmp inc cwtl jns stos cmp in ljmp fisubl stc jnp (bad) xor or jae mov scas mov push pop jge les enter ljmp jg jle add in inc dec ljmp addr16 mov dec in dec jg gs scas adc push jbe addr16 fs loop lret cmpsl imul (bad) adc out jo fcoml xor ja fsubrl imul pop push and push in movsl pushf xor push test sub aas gs cmpsb fsubs add mov pop je mov adc cld push mov (bad) loopne out hlt push xchg inc and int fiaddl jle jne stos insl sbb outsl push or pop mov add inc ret dec adc xor sarl fisubr insl sbbb imul mov test push repz mov jge in ja shl cmp inc ror inc jmp mov daa jl cmp lcall cld xchg les ss mov jmp ja sbb or jnp pop dec in sub or fldt or pop sub jge,pn insb xorl in jle xchg jbe pop inc outsl inc addr16 push cmp bound into dec xacquire (bad) adc ffree ss adc push mov sbb jae add jno and out stos and mov xchg (bad) pusha jp ret jecxz ss cmp pop mov xchg xchg aas xlat inc push or insl and inc xchg je push gs cmp (bad) jmp dec xorl mov (bad) int imul loop push add pop daa push out lock sbb mov out mov jno ja mov lea xor mov ds rcrl inc push add ljmp int dec nop and insb pop sbb add ret lea xchg enter insb jge cs cs repnz shrb push (bad) fnstcw sbb push (bad) into imul mov les add insl add sarb jnp xchg pop lretw hlt sahf mov in jg ljmp cmp ret lods fwait pop pop inc popf faddl mov push ret xchg (bad) mov (bad) aam mov mov jae or rclb mov add add mov addb push add fwait sbb mov (bad) xchg repz xchg fstpt pushf ss push add decb push jae outsl (bad) (bad) icebp ss push and gs mov aas xchg mov lret aaa sbb (bad) ss loop push xchg jbe jg xor mov negb sbb insb mov dec inc imul jb push or push dec adc je test cwtl and mov jns or fidiv cmpsl mov jbe jmp int3 xchg push inc dec stos outsl xor imul sar push gs (bad) pop out sbb adc std mov mov mov jae jl repnz add clc adc cs cld jns std adc push iret xchg jle jns cmp scas mov iret xchg fs inc cli mov cvtdq2ps sub pop dec lea rorl movsl pop dec add inc ret pop aaa addr16 xor gs jmp stos sub mov sbb cs leave push inc sbb jl scas cmp sti insb mov jg outsl aas incb jns mov push sub cmp enter jo xor in std jmp cli insb pop and ljmp push popa outsb cli mov mov jcxz fwait aad imul repnz out or popf lds xchg mov call cltd mov ljmp aam (bad) stc aas (bad) iret in jp jge adc bound or ss push jno or dec out jo pop mov jae pushf clc pop sahf andl xor xor mov js ds push adc outsl sbb sub xchg push jb fdivrl xchg test push iret lret jbe pop addr16 add mov dec add imul (bad) cmc sub pop gs lret mov dec iret imul in scas (bad) xlat push jge idivb into pop popf sbb (bad) leave std mov xor test addr16 inc xor or pop enter cmp jbe sbb sub mov jle iret int3 sbb jmp adc lahf mov imul cltd stos popf mov mov jle sbb aaa jnp stos add (bad) (bad) mov mov push cld repz fwait jno xor jl outsl into (bad) hlt dec addr16 add lcall (bad) lods mov jno fidivrl xchg lret gs jne cmp cli iret push jmp ret jae ficom rolb pop jmp pop daa xor ror sub jl frstor add jbe mov adc mov rcrb lret subb sbb pop pop bound (bad) mov fbstp jl sub inc das inc jae nopl mov mov push movsl lret (bad) sub jno xlat cld into push bound ja jne mov cmp aas (bad) dec push mov mov lock movsl xchg aaa sbb jmp mov sub cmp jmp xor inc jo sbbl pushf stos out int3 pop lock in stos std jle add andb inc push addr16 ret rep xor movsb mov jl gs (bad) dec (bad) pop nop adc das insl or jno imul movsl fisub push jge lret mov icebp repnz cmp ds neg das sahf add mov pushf bound gs fldl ret lcall jg jp sbb rorb mov gs scas pushfw pop jge xchg insb daa loop and je ja scas mov imul fs inc mov xchg jecxz jbe addr16 leave sub pop andl loop jb lahf dec push mov insl sarl jnp push repz sbbl cmp sub and imul or iret or into inc ds iret out pop jl aas gs sahf cld sub pop sbb popa lret sub das fcmove inc insb jne lret decb cmp ret cmp jmp add cli xor jge mov orb and inc inc (bad) js out inc push les jbe sbb aad fwait jns pushf push inc cwtl insb sbb aas adc cmp mov icebp jbe pop jg or push fildl pop test subl push and jle pop scas jnp jne fidivl push mov cmpsb mov push lcall shr ds in cmp mov mov dec xchg aad negl js mov rcr outsl adc out lea push sub cmp sbb bound or ficompl lcall mov or mov out jp sub pop shll in cli daa pop jb jbe mov fnsave in jge mov xchg add xor fsts mov nop sub mov xor pop pop mov addl test (bad) ljmp xor mov div stos fidivr sti mov faddl sub jno out outsb xchg lcall fsts push jl sub (bad) sti or sub cmp iret or cltd outsb stc mov add or sbbl jmp repz fbstp pop jbe pop subl daa inc pop jne into je sub add or inc sbb imul adc cld mov push inc adc (bad) mov and jne dec adc lods imul inc cwtl jle call aam outsl mov bnd jns outsb daa jbe addr16 (bad) sbb sbb scas inc leave sbbl repnz ds pop mov add cmpsb pushf xor mov decb inc pop ror adc cmp xchg mov fdivl cli jle sub gs repz idivl dec imul mov loop (bad) sbb sub inc sbbl xor (bad) insb sahf in into or xchg pop push ja jge xchg das sahf test fiadd insl ds mov sbb cli mov jb shrb test xor jl pop outsb or mov mov push pop inc aad inc dec pop pop out xchg push jo sahf (bad) mov add rol add in jge popa inc mov es insl mov ss ret mov sub mov jae jns mov outsl and cmc xlat lahf outsl jno jp xor ljmp mov fidivl add dec popl sbb cwtl add inc mov sub pop mov (bad) jbe (bad) jmp les pop aaa sahf jnp in jecxz (bad) addr16 dec repz lods jg loope ret jae movq jbe xchg sub scas mov ja outsb pop gs cmc jmp inc mov js jnp and lea cwtl daa inc aaa sbb sub aam mov clc addb or dec cmp sub gs sub sub addr16 dec mov in cmp out cmp rcrl je,pt xor (bad) mov (bad) fs call mov jge sahf push (bad) dec pop test stc jg leave sbb in jb sbb cmc sub ss cwtl pushf scas mov iret cmp jb cmc shr (bad) insb cmpsl clc push outsl fnstcw aas cmp xchg sarb jl xchg add add lods mov cli sti and pop aas dec (bad) cmp and sub (bad) pop add int3 pop add gs loope sub mov inc sub gs std addr16 adc cmpsl push push in sahf aam dec aas lcall push cmpsl jg (bad) or stc add lret jge adc pop out das dec icebp aas jbe jnp,pn ljmp mov cltd jmp lods fisttpll stos pop adc out mov insb aam push gs psraw inc lret ljmp adc outsb mov (bad) cwtl jne inc xchg stc pop sbb fwait lcall pop (bad) gs cwtl and popf jae,pt inc pop pop es cmp je mov mov in pop ljmp inc out push insl into adc popf (bad) icebp cmp mov add push ja loope inc (bad) (bad) inc insl fwait or mov scas icebp in gs mov pushf inc jno out imulb fimull push out ss mov fs cmp add sub pop xor xchg enter and xchg jo icebp sbb cld (bad) incb not sbb sarb fidivr sbb push stc mov dec inc fldenv ret ljmp outsl fimul fxch push pop push mov lea pop jae int xchg sub mov enter (bad) aas push jmp inc or insb mov pop lods aas cwtl or imul cmp popf into xchg sbb pop stos test pop mov (bad) mov pop mov xor push mov sbb daa lret iret mov jne mov scas out xchg ljmp (bad) ds inc pop clc stos jb sbb std rorl mov fdivr add jne xchg and push jp es aas fcoms jo popa lcall xor mov xchg xchg mov cmpsb out mov outsb mov addr16 loopne adc ds out (bad) stos pop inc aam and fisub inc subl cmp movsb and gs xlat inc mov out jb xor add or aas jns pop and (bad) int (bad) lods pop jne push call push (bad) xchg jnp je push fistpl jb cwtl xchg aad jp std stos or cmp lret pop inc gs ret inc add jecxz in fs sbb cmp mov mov jb push mov mov addr16 cli mov test jmp sbb in mov ret and xor pushf outsb jno aas (bad) lret mov mov sbb lcall xor test adc int3 popa jae mov pushf imul mov incb icebp in iret ss imul std mov enter jo or push les jbe mov addr16 imul xor mov push dec push jnp xchg outsb dec mov xor or sub pop lods (bad) (bad) aaa xchg popf mov arpl je,pn mov sbb fwait (bad) (bad) mov pop add hlt mov fwait and scas outsb aam jb gs jae jno lahf sub jle jmp lcall cmp add sti dec cmp and insb movsl popa pusha xor imul aam rcll pop sbb sbb dec es fs lcall xor mov dec (bad) inc (bad) gs outsb mov mov or call pop je fnstenv daa add in xchg js xchg into insb dec das sbb out std in mov js cmc imul mov aas repnz sub andl cmp ljmp in call cli popa sbb lods jle jnp push pop cli inc out sbb popf arpl pop sub jle dec iret ret pop push cmp dec aaa and js movl (bad) pop cmpsb inc cmc and mov pop dec gs ret outsb repnz aad sub jbe test es jae jnp jp add jge rclb cld adc cmc ret clc mov or push aaa insb fiaddl add jge mov cli add in cmp ss popf or pop xchg jge jne sahf mov dec (bad) cmc test repnz push incb dec insl aas or clc dec ljmp cmc leave dec push ljmp leave sbb xor mov mov mov xchg adc std pushf adc xchg and ss pop dec pop jbe jne inc xchg rcrl pusha jmp ds pop add popa jp adc jae add inc pop das roll aas push iret arpl dec je mov pop roll sub in xchg ret lock inc adc inc or imulb aad push xor xor fdivr cmp (bad) xchg pushf inc leave inc mov (bad) mov jl scas push mov into and cmp pushf add pop mov (bad) inc mov je shrb or dec xchg xchg or cmp es pop jp ss xorl (bad) jg jne and xchg popa and imul mov jbe xchg lret jno gs dec cmp mov js jns jne jno cmpsl int3 or and cmp lods jle pop lods int leave pop clc lock inc mov repz js stos insl (bad) mov pcmpeqb jnp imul je rorb sbb addr16 jns sbb ja lcall rorl leave ja inc lcall lods sahf pop pop and in stos pop (bad) inc xor cmp aaa sbb lahf mov sub and fwait jb jle shrb rorl sbb popf nop sbb ja xchg fiaddl in sbb pop pop fdiv push arpl mov inc xor lods pop mov pop aaa stc dec shrl inc hlt dec cmp mov jbe adc gs fdivr ret inc shlb rcl add and push pop sbb xor out idiv pusha (bad) mov sub test mov test lcall xchg ja ljmp (bad) call js cmp gs shrb mov mov cmp aas insl pop gs out ja ret data16 or add mov imul pop mov adc cmp or or in adc pop ja jmp add cld test sbb gs sarl imul push lea cmp push scas mov inc js daa xchg and push aaa fidivl popl mov add and faddl (bad) sbb imul mov inc dec adc test pop jae sbb mov mov mov repz jae mov int3 xorb adc (bad) push pushf jns or cmp fstps div xchg pop jp loop movsl test fcmove das pop jge gs pop mov push adc push addr16 aam cltd aas jb nop test stos fnop lds or mov jne insl jecxz das mov ja data16 gs push scas xchg pop push mov cli xchg fildll popa fs inc stos pop xchg repz out ret inc sbb stos divl movb pop xor jle sbb cwtl cmpsl stos lea das inc push mov ja,pn mov push cmp cs jle and jg jle daa loopne cmp in push call push xchg stos popf outsl dec sbb xor vpshlw mov jge andnps insb or cmp dec push jno jg xchg leave adc push or das movsl inc ficoml test cld in jae mov gs (bad) cld pop (bad) mov and mov iret adcb inc push in push insl pushf push es inc push push or jbe add decl repnz sbb push add lahf lock jne adc jno pop mov decb cmp push sbb dec jle sub out xor push test adc ret mov sbb jne pushf lock dec jnp aad lods push ja std jecxz mov ljmp lods in pop cmp ljmp enter js or es or xor scas gs pop (bad) dec les and inc cld fnstenv stos jg xor data16 rorl movsb jmp shrl movsl fpatan (bad) test push fstpl pop adc and out les test arpl push lcall dec pop cmpl ds dec add (bad) xchg imul mov fiadd imul push mov fmul add in push int adc gs jbe push jns,pt add lea rorb jb dec mov dec add cwtl adc pop cmp mov pop call ret hlt repnz mov insb repnz dec insl fstpl test pcmpeqb rcr inc out lcall imul mov mov movsb or in repnz rcl xor push jecxz mov cltd pushf outsb and arpl sti sub and in mov jl and lea mov call dec imul push push push cmpsb (bad) cmp mov addr16 inc je lahf pushf sbb sbb add rol aad cmpsl cmp pop adc scas xor add (bad) jne fwait cli les cmc popf push rorb sbb loopne sub sub pop mov fisub xchg dec or je movsb jnp out cmpsl sbb jp sbb sub mov pop cli ja sbb pop addr16 (bad) int sbb jno push inc stc mov mov roll cmp jns pop enter xor jae ss mov addr16 or mov lods jmp push aam push je or jl inc stos xchg mov cmc add loop movsb inc cmp sbb inc pushf gs push add cmp repnz jp adc out mov cmp mov jae fwait jecxz dec les xchg ja dec cli xor sbb dec in cmp mov adc iret (bad) xchg mov pop (bad) jno xchg and nop jb inc push pop mov mov adc cmpsb sahf mov (bad) enter lea xor out jnp pop (bad) ds loopne pop and pop daa mov cs pop mov add lods movsl mov pop push aas add test lahf push inc and mov stos out dec les mov in cmp or ret ss movsb or adc cli inc inc shlb std insl jmp mov lods inc outsl push test mov aam mov xor ret mov push into add addr16 rorl inc (bad) cs jo and adc jle jecxz insb or outsb lcall test mov add sub push cmc sub fwait mov push push out scas add fs pop jmp or pop push repz jnp cmp clc mov sbb jecxz sub jne xor out outsb outsb mov cmp xchg inc mov pop push sbb inc push cwtl sbb mov clc add scas das out (bad) jne fwait jo ja jecxz mov xchg into movsb int sbb sub lret divb mov xor stos add std ret test test jbe lock into jno fucompp lahf cmp test sub mov pop push neg stos mov mov cld iret loope cli mov lahf mov dec aam std fsts pushf (bad) imull lea sub test jno push mov in and jnp je (bad) dec inc cmp fsubs jg in mov pushl mov mov (bad) push mov pop adc inc aad (bad) pop lock mov dec sbb decl pop out outsb nop movsb cli push icebp lods stos xor mov sub mov pop push xchg (bad) jns pop add mov mov sub sbb cmp lods jo gs (bad) mov sti lahf gs mov inc pop sarb sbb gs mov lcall inc iret adc rcll push ja xchg push fidivr or mov inc sbb fidivrl std add out in ret mov push nop sub imul jecxz xlat push ficom jle outsl roll sbb insb or sbb ljmp mov cmpsl ds adc pop mov sbb movsl das xor add push adc xlat popa mov insb flds (bad) sub jp cmpsb aaa mov dec push xor out fidivr push xchg cmp push aas insl gs adc pop out outsl sar stos pop ljmp cmpsl mov and xor shr js xchg jo pop lock (bad) aad pop test mov inc aad in sbb xor mov leave push pop pop (bad) mov sub scas test dec pop xchg xor cld (bad) xor aam sbb and sbb cmpsl dec push repz nop insl mov mov (bad) jg mov cli ficompl jbe adcl (bad) sub push mov test inc jne adc push addr16 aam push push push mov daa call outsl jbe mov pop lods adc sbb lods sub and jb xor inc xor jl xchg push test hlt lods cmp sub das pushf les push je,pt (bad) cmp adc push outsl mov xchg xchg jnp ljmp xchg pop inc pop leave mov and pop aaa dec xchg fs mov xchg sahf xchg push xchg mov mov aaa loope dec jno sbb add test xchg adc inc jle or das dec inc repz pop or enter pushf out jns cmp movsb xchg pop adc inc mov int3 xor flds cwtl add popa addr16 js adc (bad) test mov sbb gs cmp cltd call xchg into (bad) scas lcall cmp popf scas dec dec pop leave cmp dec call push fildll and shr (bad) dec aaa dec cli inc jo int3 bound mov loope cs inc push xchg mov push aad fisubr xor jae ret inc (bad) movups sbb pop jecxz lods popa jl test sbbb enter mov cmp pop (bad) lret std arpl ja xchg pop xchg (bad) fbstp dec push insb and mov jle add jecxz dec pop sbb xor jl jle jge adc sbb pop leave scas sti inc js dec adc inc mov shrb dec adc add add daa decb and pop push sbb cmp sbb inc out pop cwtl ja push cld jo mov lret cmp ret mov pop iret lds icebp outsl add jo jg (bad) or and inc jge arpl jge mov idivb add imul scas enter (bad) ffreep push mov (bad) insl aas outsb mov fucomip sbb pop sti test (bad) std sbb rcll ret sahf push leave es mov push js aaa pop or and inc je sbb pusha push jo stos jb xchg xor jb lods sbb mov lret int3 aas dec sub jg int3 gs mov sbb cwtl int ret jmp mov mov pop xchg and cmpsb out cld dec iret aaa ljmp lret jecxz cmc call push fiadd sbb dec sbb in xor cmp add sqrtps inc cltd cmc ljmp lea sub rol lock sub push xchg push or adc add jge fcmovnb pop aas jne lds cmp push inc mov add out adc mov fwait sub imul test mov das das ficompl jge add popf or pop push cli mov inc mov mov jl rcrl jo or push scas mov idivb push mov outsb out std jge or pushf mov push mov inc mov pop sbb les and dec addr16 jno (bad) add cmp jle jae lret or enter add repz lods jno jbe popf ja,pt adc leave push neg shll aas gs cmp pop insl int3 call mov inc sub test mov ret adc push push lods jmp push ret cld add jns gs adc ret cmc and je loop jo icebp repz jp arpl push test jmp xor dec push push lret imul inc insl push sub and out xor xchg sbb out stos add in (bad) pop mov cmp sti sub add ja rorb or xor or mov rorl jmp sbb loop repnz adc call xchg addr16 lock cmp xchg mov scas das mov xchg stos inc push jbe iret sbbl add adc in out mov lcall fbstp aad cli mov push cs fiaddl sub pop mov repnz out or imul pusha adc adc adc pop lahf and and inc push push outsl adc int insl push xchg sahf xor add js jle dec mov ror xchg push add clc sbb dec inc mov add ljmp aam dec adc fcompl stc movsl aaa sbbl sbb add repz out add adc push mov mov xor pop je loop sbb loopne adc mov cmpsb popa ret xchg and imul lret pop cmpsl arpl xor loope dec add (bad) and scas mov jmp popf stc xor push enter (bad) pop and sti imul cli popf or gs dec sbb and push jle pop inc cld icebp test addr16 je adc in test push cmc or inc fimull sub cmp bnd add sub sti mov imul sbb lock inc dec cmpl addr16 roll insb imul sub insl cld pop insl gs out xchg pop rcll stc js xchg lods (bad) ss sbb gs movsl mov enter test rorb xor outsb pop sub jne sub mov inc movsb lods mov jle jle cli push gs (bad) mov add sbb lods inc popa cmpsl in mov xor cld or mov or scas pop pop in jecxz and inc mov cltd fild sbb out mov lahf adc pop push xlat jbe ret ja movsb dec std xor push or adc mov stos in sub movsl test adc mov add pop gs xchg push pop push inc pushf cwtl pop pop lock jecxz lds jnp jae addr16 (bad) bound fiadd inc push mov js jnp dec xor push and push lahf notl mov (bad) push cmp push lret push or cltd add mov int3 mov rclb loopne lock rcll (bad) xchg stos jb test push jle add (bad) pop xor xor xor dec sub pop stos sub add pusha jae lcall adc fcmovbe inc mov loopne jge imul ja leave jnp sub jae xor aas pop xchg insl das cmc in inc jo xor adc push leave in stos rol (bad) mov push and jbe or mov add cmp or pop mov mov jecxz ucomiss sbb mov sub inc mov adc jb cwtl push je cmc movsb in cli add ljmp or push pop adc ficompl push fstps mov push stos mov push movsb arpl mov adc jge cmp out fidivl and fwait and cmp sti dec and sub cli imul xchg arpl pop outsl outsb jno jmp push dec and add out jb push lahf push jns add pusha repnz (bad) repnz outsl call adc jo mov cli pusha insb cmp inc sahf inc decl pop aas inc imul dec (bad) mov sbb jnp or jmp jns jmp cs pop cmp orl rclb test fsubrs imul xchg sti pop push int3 cltd in jp and pop cmpsl xchg in jbe pop cmpsl imul sbb sti inc loop add pop mov xor sbb adc dec sarb out dec xchg inc cmp jle or mov cmpsl mov lcall cmp inc adc add iret jmp cmpsb lret or cld ljmp les push xor or ficom cltd fbld dec repz repz add shl push pop xor ret ds ljmp fnstenv outsb add fcmovu imul pop sub mov mov xchg sub dec xchg inc xchg pop scas xor pop adc sbb clc ljmp jae cmpsl scas mov xchg (bad) jno add jp cmc add rcr fsubs insb sbb mov (bad) pop sub add movsb push pop jg dec mov push mov mov jbe je ljmp xor fwait xorb inc xor sbb push movsb pop push js inc push outsb out icebp mov mov imul sbb adc push sbb cmp pop sbbl dec pop and icebp int3 pop ret jl or sbb add and pop imulb pushf ret pop push adc sbb incb ja aas lahf push dec stos inc xor js xchg mov ss aas xchg push loope lock xchg push nop xorl stos mov pushf inc in test pop pushf clc cwtl call mov aam pop xor cmp shl inc pop (bad) lock inc (bad) ja xlat ss cs ja insl rcll sbb movsb gs jl xchg hlt push sbb out les in add aad xchg cli jne dec out sahf ja cli rcrl sbb not push lods jbe scas mov xchg hlt sub (bad) jle rcr nop inc xor add pop mov and lods jnp xchg jb (bad) popa inc dec mov pop jl xor lods push inc pop cmpsl cli icebp leave cltd cmp repz jge (bad) mov (bad) xchg gs cmp js (bad) jbe loope inc sbb add push sbb inc pop cmpsl add push pop pushf insl adc push je popf cmc jns add xchg jle xchg repnz imulb pop xor cmp lahf ja les dec push hlt inc or inc out mov fistpl or push gs and sbb outsb jp or cltd lea sub inc jp (bad) jmp out jle fwait mov movsl mov fucom fcomp popa cmpsl pop movsl push pop push and gs adc or dec mov cld call jl xor nop bound loop jg add pop ficoml inc call mov popa add jp cmp or inc pusha fiadd pushf inc std jnp pushf sbb insb or call icebp xchg xchg or xorl daa pushf mov mov stos mov cwtl cli into fisubl in jo mov push mov loope sbb outsb jl rcrl js scas mov out mov negb js jp add or adc (bad) out out lahf cmp scas ja pop ret dec leave jo lods push repz adc aad (bad) mov cmp mov jle (bad) lods gs mov xor and in sahf jnp xor aas mov int3 push mov jp mov test push or mov push in ds lret cmp fstl pop std insl pop push or adc mov rorl mov ljmp pop xor stc adc jno nop loopne lahf mov aas inc mov dec outsb push into pop or test adc mov inc mov xchg lret jl cmpsl add sbb xor mov push arpl sbb repz inc repnz fidivrl cltd fimul pusha les cmpsl inc outsb (bad) cltd mov cmc mov pop gs mov int jae mov push add adc ret mov adc add xor cmp add out lds xor jle xor imul jg js stos jbe insb inc dec mov mov push inc fwait and xlat lock dec shll ss and or adc addr16 sbb (bad) xor stc outsl lcall aas jl pusha pushf fisubl inc lock add daa cltd push movsb jno xchg call jns mov negb insl imul imul imul (bad) adc enter fisubr popa in cs cs and sub icebp nop jns ljmp test jecxz mov les cmpsl xlat push in xchg lods cmp adc pop push or rorb imul cmpw jns enter pop ljmp stos (bad) pop and ljmp ss ficom ja pushf into mov sarb adc mov rclb gs (bad) hlt dec xlat xchg sub add inc xor push cmc cmp xor repnz jge aad dec je in gs xor dec xchg (bad) lcall ds cmp loop cmpsl inc xchg aam dec jle movsb add cmp inc sbb add (bad) dec mov jno hlt jbe ljmp mov stos aam std dec or jbe stos ljmp lds (bad) push mov pop sbb sbb mov mov mov or daa and or addr16 xchg mov loope sub cmp dec fwait add dec addr16 push mov add je cli cmp incb xchg xlat (bad) fdivrs in sbb push cmpsl adc adc add rcrb pop lahf inc das in xchg aaa aas mov cmc jl jmp sbb fnstcw xlat movsl lods or dec mov (bad) sub aas ss mov hlt pop ret xchg and shrl sbb add int aas addr16 sbb movsb jge add ret fdivp and pop inc or jae inc inc jnp jae mov inc or out jg mov push xchg adc inc push rcrl iret nop daa cld push or pop add fiaddl insl aas scas lret into inc lcall dec fs je rcl addr16 dec xchg mov std (bad) lret test jno test xor push loop pop mov pop push icebp mov xor das mov divb int3 cmp jne,pn xor outsl sarb or das repnz stc into js mov ss lahf jb push pop jnp in push jbe cmp xchg insb mov add jns and inc xchg test dec push add hlt cmp stc jge (bad) into addr16 fimull movsb or rolb pop adc in sbb aas fistp cltd daa push das inc jns hlt ret jge (bad) inc mov jge push or jne loop mov ja or adc mov lods sbb movsb lret or pop sub or mov sbb sub (bad) jo xchg incb push inc scas aas jge test jl jo mov push mov push xor pop out sub mov jae jns in jno push addr16 fistp add cltd push (bad) jnp cmp adc sub cmp ss stos push mov or jl and (bad) mov adc into nop jmp xchg push aaa iret test jb inc cltd adc ret ljmp lods sbb lods add in rcrb test xchg outsb das loop push mov sbb and cmp pusha ja cmp outsl mov testb xchg xor and sbb jecxz pop push lods lgs ret icebp sbb dec xchg inc fldt fwait mov inc int jmp mov pop dec pop xchg pop pop (bad) sbb aad pusha out pop jmp add jb pop test fwait jne push inc jb mov fsubr jle cwtl xchg fistpll inc rorl cwtl in into push jp shr jb xor fnstcw gs sub push pop lret lock mov shrl inc adc std orb fs sub cli notl int3 inc cwtl mov loope dec stos je inc and jns fdiv xchg clc test and cmp loop sbb fistpll push mov ja sub test ret add jns sahf movsl sub out sbb fbstp je push dec cltd arpl gs sarl pop dec mov insb add xchg dec popa push and push repz cmc cmp mov (bad) int stc add cmp int fidivr sub mov (bad) push or fild sti sub inc lahf jae inc add pop mov inc jo add inc gs fbld in (bad) aam sub imul insl add ret pop inc mov fistl inc mov daa add (bad) lret sbb call mov and fcom outsb xchg aas imul or mov gs cmp xchg lock sbb pop jnp fildll inc sbb xchg rorb call (bad) jl inc sarl or inc adc adc cmpsl jle test sbb jb or mov shl outsl test jb je push xchg dec mov jle ficomp (bad) test aas in pop push and add sbb (bad) in hlt mov cmc shlb movsl xor cmp inc xor fisubr ja pop adc outsb pop sub dec pop fnstcw and ja (bad) cmp aad jge dec mov pop or sti inc xor push mov (bad) xchg jmp insb out pop push rclb rcrl add adc sbb jae mov or adc shrl sbb or bound mov fcomip movsb jmp out jnp lds inc cli fistpll jns or out leave in and pusha adc clts int3 repnz lahf sti xlat fwait mov int test rcrb cmpsb pushl mov call sbb rorb jge sbb (bad) int push adc gs repz mov xor xchg ljmp rorb (bad) adc imul jmp inc lahf inc sbb xchg imull sti xchg add adc (bad) mov scas outsb sbb push adc ja loope stos repz sub xchg dec in iret mov pop xlat ret xor dec out sub sar inc out cmc push sbb jae push push stos lret dec fsubrp dec mov sti inc sub cmp inc scas fidiv jecxz fld cli and test rolb lds jae repnz inc and out je lret mov inc jnp mov ror pop sbb jl popa push pusha add sti dec cmp rol xchg and xor rorb pop xor push mov ret scas cld sti icebp repz sbb adc insb sbb mov lods stos pop test ljmp mov je aaa jns iret or gs inc push rorl push std outsl cmp and push adc sub sub fist lock jl sbb push dec insl mov or pop adc scas clc ss cmpl sbb loope stc xchg in mov or notb (bad) (bad) gs iret ret (bad) cmpsl push clc outsb shlb mov jne adc mov fidiv inc cwtl pushw stos lret sbb addr16 xchg xchg mov push cmp mov push xor loope fldt jbe jo push test dec ficomp lret hlt lods cs daa jns mov pop add sar pushf inc or rcr pop rorl mov add add adc int3 sbb ret cmp push mov cli cli clc inc sub pop push lret push or test jl (bad) xchg (bad) aad dec cmp push ja add jb jl inc pop dec sub jecxz push inc loop add sbb jnp rolb mov lret pop xchg lret lcall cs test (bad) xor mov cmp sub mov push js loope orl stos out ds mov push jo (bad) and or xlat xchg movsb inc sub mov dec js outsb mov dec push fs adc push pop mov lahf in pushl dec icebp leave rcr xor rorl cmpsl add xchg loopne imul mov pop lahf add cld movsl sub daa mov out push ljmp pop cmp mulb popf ss lea es cltd insb ret jle lds push lods std cli inc hlt aaa mov shlb sbb push (bad) pop (bad) bnd inc mov xor sbb pop loopne cwtl pop gs mov sbb enter fwait mov cli mov loopne mov or inc lods outsb jnp mov adc lea imul bound sahf hlt jns nop addr16 lea xchg lret jmp cmc test xchg mov fsubs and mov in loope jo mov std gs les gs fidivrl adc push imul int pop mov test cmp cmpsl (bad) mov ss imul and push cmp sahf lods adc data16 pop pop sub sbb mov add cli push (bad) bound add lds cmc mov shrb addl gs xor or sub or fidivl jmp sub pop jb push cltd (bad) fcmovb imul adc loopne pushf loop (bad) fildll lods add inc outsl cmp mov cmpsb mov xchg jge cmp sbb and sbb stos jns xor mov mov and daa stos or mulb pop enter jp fdivl inc stc dec adc js rcr or xchg cs call add jle fisubr test cwtl adc out (bad) ficoml das push addr16 scas aam outsl sahf mov mov push inc xchg fidivr mov add sbb outsl xchg and xchg add insb aaa mov sub sub xchg lcall jle notl add into mov int3 sbb fdivrs test xor std aas pop movsb fmuls adc cmpsb inc adc xor add nop and mov pop vcvtps2pd clc xor inc test adc add lods adc cwtl (bad) out (bad) rep mov outsl sub pop aas ja inc ficomp movb pop jne fisttp inc sub add pop data16 ja (bad) adc cmpsb cmpb add adc inc jl pop gs inc icebp addr16 inc and push jno lahf mov flds fmull (bad) dec (bad) pop (bad) sbb imul mov sub outsb loopne fldt push cmp (bad) subl ss inc fmuls stos push repnz mov xor inc inc das stos lock pop sarb pop jp inc dec and je outsl cmp in fdivrs scas (bad) sub dec jmp jp stos gs nopl xchg or clc jge cs iret xor hlt pop add call outsb cltd inc fidivr lret imul cmp jle sbb pop xchg repz inc enter dec (bad) push lock xchg and sbb adc xor add iret scas daa (bad) cmp roll ljmp mov rol stos subl ljmp adc pop in leave test pop ret fwait or insl imul sub dec test test jo loope int or jl leave sub (bad) repz daa inc pop add or dec in repz outsl ja,pn dec pop gs test rcl out outsb jb pop mov xor enter stc ljmp cmpsl xor mov dec push stos cltd sub lods fsubrp imul cmp rorl mov sbb std push stc add shlb lods outsl repnz sub adc jno sti gs mov jp pop test pop add lock ds mov jle (bad) arpl and add repz adc inc fstps cli inc dec jp rcrl xchg xchg pop rcr jbe mov jb outsl pop dec fisubr test ficom push jge ret inc ja mov adc loop in push inc (bad) jnp jae adc bound (bad) dec xor inc push pushf jmp pop jnp jmp (bad) ja jnp pop out stc push adc pop dec lahf jge int3 lock leave orb fisub pop add gs mov jmp mov aam sbb arpl sub sub xlat repnz sarb (bad) jle mov cmp inc jo xchg add mov cmpsb cs add std jne push xchg loop xor xchg hlt in mov and adc rcrb shl sti (bad) sbb push xor insb cmp push insl xchg jmp lahf sbb jmp adc rol (bad) jns add in les je enter dec or mov dec push inc (bad) sbb jae aam sti adc shrb sbb pushf int scas and pop dec (bad) popa je (bad) es mov aam lcall xor xor push jl addr16 lock mov mov jbe cmpsb fisubr daa adc pop fisub dec into mov add ret addr16 ja xchg in cmp push lods fidivl mov faddp inc jge push ret fstpt aam add bound gs lods int out pop loop jbe sbb push gs je ljmp ja je insb xchg imul lahf sub stc sub lods (bad) jb adc add out push mov dec mov enter xor imul ljmp dec xor mov cld stc cmp shrb inc in push insb leave pop dec add mov jae cli lods imul inc xor (bad) sbb lcall test adc and inc mov or push lret jle mov xchg inc cs idivb inc jp call ljmp inc imul cmc push movsl push les insb or xor xor inc icebp jae jge xchg pop pusha dec jle sub popf push rcrb sub jne nop jecxz mov scas jge int jle mov adc mov ja sbb jae pusha pop sbb (bad) pop pop cmp xor test mov mov and cld xchg inc jnp sbb sbb sbb mov data16 lret ss push mov and inc sub mov mov xchg fwait jl js rcl xchg lret arpl ficoml popf push and jmp inc adc mov dec fldl inc mov (bad) or rol out rorl pop sub push pop or std out mov mov mov lahf pop jecxz shrl aas (bad) (bad) pop mov xchg mov out mov jp mulb or test sub and out fisubl and push (bad) lock push mov or pop dec xor es add jmp xchg movsb mov lret lret adc ja iret mov cltd mov mov jbe jmp ss (bad) jns xor jno inc aad mov sbb pop push int3 imul push lods push xchg sbb sbb and sub adc inc jbe cwtl mov pmovmskb mov jl add and aad cmp in loope mov inc inc fild ja fs icebp jnp dec cmp pop in lret inc or push sbb icebp ficoml das ss xchg pop mov bound sub js repz xchg ja push adc ss sub adc (bad) xchg jns push mov rorl adc addr16 adc jb rclb sub jle push dec jnp xor ret xor cmp mov or xor shll lods dec insl and unpcklps jecxz movsl pop jge gs sub out xor test add ljmp dec ds int outsl jg jge add (bad) sbb in adc add xchg add popa sbb mov popf sub cwtl lock push aam fnstcw inc aaa inc pop subl pop sbb xchg jmp cmp divl addr16 sub in cwtl andl out push pop gs jo (bad) push dec mov popa insb lret jnp fnstsw mov ja push inc test lds imul push mov dec shl cmpsl sbb aam dec xor dec jo cmp fs fs sub pop fiaddl jne jmp add je ss stos or mov mov add jecxz mov cmp push mov add adc pushf dec aad gs mov pop out mov pop imul jae daa pop fs (bad) pop mov dec repz (bad) enter jmp jb dec ds sti and mov test ljmp jnp pop pop imul pop ja sub mov mov (bad) xor frstor mov adc jae popl rcrl addr16 in or cmpl jecxz and lods aam jae outsb gs pop movsb xor jp mov test outsl pop gs fs push xchg dec ljmp hlt ret data16 js inc mov jns push ss jl stos outsl lock lock ret xchg cli fimul in fwait lret pop jns mov lock mov icebp add in adc sahf ja add mov data16 lock int3 jmp push xchg pop and inc repnz test test inc gs xor jnp mov ds jae fsubrl xchg push int3 adc cli add je std mov bsr ficom cmpb push addr16 ret cmp gs add and adc insl aas gs fstps mov lods outsl add cmp std jl int adc int3 add iret sub cvtdq2ps dec imul mov jge out (bad) or pushf inc imul insb push sub sbb cmp aas sub lods adc test loope jle xchg or mov aaa daa add mov mov inc les int out (bad) dec test loope loopne (bad) xchg xor dec mov lret int xor inc pop stos or jno in aad call mov adc jg xchg mov pop fwait ja rcrl lcall je,pt xchg rcll hlt dec dec pop xchg mov push inc ds mov ret jbe (bad) daa sub mov cmp jl out andl jg lret out (bad) and add ss xchg fs cltd push hlt pop xchg daa mov cmc in or jle daa rol pop jge pop mov cwtl in repz imul sub dec sbb arpl jb es daa scas lahf testb add out (bad) mov mov iret dec mov lret out fisub mov ljmp js sbb pop push dec push stos push sbb fsubrs cs and lods aam xchg sarb push ljmp add outsb fldl xchg mov lds inc xlat xlat ret dec lods movsl mov in (bad) mov test jnp inc loopne xor imul stc mov sub ljmp js jb xchg mov mov sub int ss mov rolb mov loope cltd mov xchg xchg adcl fadds push popl cli pop (bad) (bad) lret dec (bad) pop xor cmp mov into nop cltd cmpsb dec mov inc mov pop addr16 cmp cli clc lahf cmp xor xchg adc cwtl stc test insl pop xchg rcll jns addr16 rolb or aaa (bad) jge lret aam adc jbe daa scas pop xlat fstpl negb ficompl insl pop jle sbb sbb inc ret push push iret jle lcall pop addr16 inc out aaa and cs xlat call sub or sub mov push or push mov and mov cmpsl jno add mov dec insl jmp mov lds fild cli aad out push ss jle insl pop mov imul sbb push imul cli xor mov pushf pop pushf push ss lret add adc jp call imull add (bad) ljmp jno xchg lahf leave inc je jmp inc int3 xchg outsb and iret push imul mov (bad) stc push inc mov int aam cmp push or je out dec outsl test mov in adc push lock sbb ja test add mov addr16 repnz inc fisubrl int3 xchg mov jmp stos out aad pop xchg jo mov jb push add mov das (bad) fs add pop lret adcl ds inc sub xlat insl mov mov in std ror nop bound pop adc in mov div cmc and ja or outsb mov int3 adc test jle pop or int3 add sub cmp decb addr16 rcrl fldl2e divb repz add or pop es inc aad push dec fwait jp roll aad int3 pop gs (bad) push outsb aad cmp inc inc cltd mov lret daa pusha mov sbb lods movsl movsb (bad) lcall test repnz sub push sub fidiv push pop jae inc gs lret bound addr16 inc push outsl gs pop insb js jecxz mov inc pop ja push fs dec (bad) out pop (bad) cmp incb (bad) sti add sbb jo cli in sbb mov aaa mov popf inc mov int3 in data16 (bad) inc cltd aaa es lods mov sbb xorl cli mov pop shll and pop hlt fcompl imul outsb jne push dec gs test adc pop pop push add mov jnp jg and push jge jo sub mov jbe xchg jge out jle js pop xor push dec outsl sbb loopne imul in pop je xor lahf or cmpsl sbb scas bound (bad) or aas pop int pusha repz das jmp xchg ss pop adc inc test sti push test cmp push push add inc pop andb xlat out add mov adc stos cli inc adc dec jecxz lret dec scas mov sbb inc fimull subl adc dec sbb shll cmp sbb or add pushf mov leave shl (bad) mov or iret movsl into cmp mov and ljmp sub xchg pop repz xor mov inc pcmpeqw pop inc pop mov sbb out daa fisubrl pushf shl cmp aas in cmp test js pop (bad) mov adc xchg sbb add nopl push sbb jne je xor int3 orl mov jle lret imul add adc xor daa aas inc scas mov mov in xor nop aaa (bad) inc mov lcall and aam test in jl push or aaa jno int out push or sbb test les xchg lret les pop cmp ficompl aaa pushf aaa lds cmpsl (bad) push xor loopne stos add add test leave (bad) outsl jle sbb xchg data16 cld mov arpl sti pop mov adc adc xor add sub (bad) jns jno sub push in (bad) mov and fucomip push mov mov stos push rcrb pop rcrl inc xchg add jo mov jns pushf repz idivl push sub into adcl pop pop inc mov mov (bad) in pop push jae in faddl addr16 jmp cli out or add xchg in imul jl push mov scas subb repnz cld ljmp inc sub fiadd inc fwait xchg add subl mov and dec sbb cs mov jbe gs pop dec subl mov mov clc pushf pop inc cs push inc movsl sbb add mov lock pop sub fwait pop (bad) jle gs daa dec call aam cltd pop pop push pop imul out push add adc pop add jle data16 adc imul mov dec sti in mov sbb xor addr16 outsl mov inc dec ja push lods pop call fidivl gs push cwtl imul pop ja ret mov dec divb outsb in sub add sbb stos xchg addr16 sbb lea rolb dec sub (bad) jbe ficompl iret loop inc sahf test jbe xchg or movsb call adc add gs test adc jmp jbe mov or insl lods jae int3 push sub cmp mov inc bound mov call ss (bad) adc js ss (bad) in inc into out (bad) fadds sub xchg test lds mov scas push cli loopne jnp push jmp sub cltd ljmp adc in xchg out into push inc in aas lods cli pop push aaa push ret inc jp adc mov or push fsub rorl (bad) rcr xchg add xchg mov inc imul ja in sar pop imul int rorl xchg inc push outsb (bad) mov lods fisttpll cmpsl (bad) jmp mov cs or sub lahf jge or je pop sbb cmc pop ja movsb and mov rorb cmp xorl subl ja gs leave adc pop fcmovne push stc les shrl imul incb dec jp xor imul push repnz ss xchg cli fcompl sub sbb ja sahf add lcall cmp mov jb push dec ja cmc test aas pop adc das and cli inc push mov dec jae cltd in push mov cmp mov xor es (bad) mov push cld addr16 mov test push inc sub dec pop enter enter int jb bound push daa xchg enter inc out stc mov pop pop lock mov jae sub ja sub iret repz inc pop sbb ja mov sub es push pop push cld andl lret ret int xchg ja inc xor jbe js dec mov mov pop and dec push sbb mov add ds pop adc lea jae xchg jnp inc xor fcomi jno inc or push or xor inc invd mov cltd lds jecxz xor nop adc in mov add pop mov je repz cli testb inc inc fmuls mov mulb ror call and xchg fninit (bad) mov lods add gs lret jecxz movsl sarb mov mov mov nop pop sbb cmp ja lods sub and cli ds dec popa pop into lcall push mov inc mov (bad) xchg jo insl lock mulb xchg mov mov imul push jo sbb out cmp cs rorb xchg jbe pop fnstenv leave lds mov push cs push adc pop jmp fisubl adcl mov cmp pop aam add sarl adc add push push out sbb pushf pop in cli mov push mov cmp or divl dec das add xchg aaa dec jo outsl jmp insb gs adc rorb push ss jle scas or das fiadd insl dec sub or aad sub pop push add adc and dec dec out rolb push cmpsl jmp in mov ret ja imul jl (bad) cmpsb cmp mov push jne cltd inc inc or addr16 gs mov arpl push call push iret stc es jge aad test aaa jmp sub adc xchg mov adc (bad) gs lods decb imul mov dec pop lods sub sub mov and ss mov (bad) mov adc jnp or repnz out inc stc sbbl push push jmp into cwtl mov or iret mov xchg mov adc rclb mov xor insl pushf cmc in cmp in mov scas jnp jp test popa pusha in pop add ret addr16 add mov mov xor add or imul shr add iret push int mov call (bad) jmp pop lret sbb sub adc sbbl daa cmp inc out xchg das xchg mov sbb cmp xor xchg test jnp lods pop push dec decb pop popa aam iret movswl add fwait popf inc pop call inc std leave (bad) jo insb pop sbb inc push rcl cltd pop jecxz pop sub (bad) lea add mov push mov outsb cltd out jg dec scas adc movsb sbb (bad) sti sbb lea mov pop je and sub adc scas adc sub lret cmp in pop push jg xor aaa sbb jl out push sub cmpsb inc pop neg sarl cs out int3 pop lret jg xchg fidivl cmp scas jecxz pop movsl in push jg into pop outsl and aas mov pop pop dec std jge mov pop incl jg loopne push or lods (bad) jbe (bad) dec sub mov popa aas pop jmp or sub aas inc adc in int mov jg in (bad) sub mov bnd jae push mov xchg fisubl push jg into or stos int js lea jge jle mov or jnp and jg popa jmp hlt jbe cmp sub xchg cmp sarl hlt adc xlat sub testl insl inc xchg push inc adc push out jge repnz cmp in jg jmp push jg das cwtl add dec mov jnp in ja jnp mov arpl bound insl mov jge sub jg lret inc cwtl jg test adc xlat add or inc in jmp jne push pop jl gs dec push out mov insb js cs mov push dec into fildl out and imul mov jg imul mov jmp pop jbe pop dec sub lea enter mov cmp pop sbb aaa jg fidivrl vcvttss2si push and leave dec aas fwait int jae orb cli mov sarl popf into mov mov dec decb jle or outsl fbstp and pop jne in pop jbe jae jmp mov gs std lods pop jae cmp xor xlat je xor jg cmp bound or les int inc mov lret pusha js das jns mov (bad) or into ja aas pusha das xlat stos dec push lahf inc jne insl sqrtps test mov sub pusha xor pop inc jg stos inc jbe dec imul and jg in sbbl sub shrl mov aad inc ss insl nop pop int popa mov pop dec lods jl insl test jne jg sub mov sub rclb jle mul jnp outsl cld push scas inc cmp jbe stc and (bad) outsb lcall (bad) jbe cli insl jg movsl pop sub pop (bad) imul adc repz xchg pop add jg pop fmull (bad) add js jg push xor adc dec push mov out xchg mov call lret mov jg fisub aam outsb dec (bad) loop lret lret jne xor adcb cwtl jns loope push push test adc mov fwait push (bad) (bad) repnz ss jg subl jg out dec lods cmp mov pop gs adc jecxz xor mov xchg test (bad) dec mov scas pop mov clc cmp fsubl mov repz test push inc xor jg test xor xor mov xlat or xchg aas cmpsl daa mov add inc xchg cmp pop dec scas jns cmp leave xchg xchg dec mov aad lcall or and mov inc mov sbb insb mov jmp dec popf stc das dec addr16 out aam jnp pop or jnp pop int pop jmp je ds ret jg pop xor imul nop jg aad sub mov xchg adc test aas dec loop push popf addr16 mov dec pop jl jecxz insb jmp adc (bad) mov mov mov mov fimul xchg add hlt push pop mov test pop and aas mov and jnp (bad) xor mov jo addb shrl dec xchg push rcrb or mov cmp pop or push jnp sub lds in test mov jg and xor mov aas mov inc fnstsw lcall loop sub push jg adcb mov cmp mov (bad) jg jno rcrb stos add xchg call cld test adc sub adc dec std jle mov xor div das sub mov cmp add in pop aas or dec adc ja std xor fisub sub sub jg outsb vmaxsd xchg jg mov fiaddl push jo or sub xchg xchg mov ja sbb xchg loop xor inc jg dec (bad) in cmp xlat mov lods lods jae iret dec inc sbb jecxz xchg (bad) out clc orl jo adc add jge jg sub outsb xlat jg mov ja (bad) test sbb adc fwait std les sbb outsl lret dec and adc pop mov jg jecxz adc out mov xchg add jg jne std mov in mov xchg (bad) addr16 add jle aas lahf and mov add adc std mov sbb pop (bad) mov sbb add int3 insl sub js pop or dec xchg xchg out mov test (bad) mov xor adc lock int jmp lods lea dec inc cs inc jg imul in into sbb pop xlat jg add pop (bad) bnd jae pusha pop sbb jge xor push inc jg jae cwtl clc cmp sub jp js popf shll push xchg inc hlt push cmp adc lret lods out jmp adc fisubl imul cmp jg repz ret dec xchg add imul loopne ret jg test stc xor adc mov lock lret test pop (bad) cltd ficoml mov xorb dec es pop icebp mov push daa stc je pop ficompl adc or scas add xor jg xchg xchg mov push out mov add dec pop lret or (bad) mov and pop test (bad) js mov dec lahf in ds xor outsb test insl jp aas jg fcmovbe xchg and stc jmp mov mov adc dec sub int jae mov movsb out rcrb cmpsb dec sub repz insb mov add int3 push fiadd mov test lds fsubrl jl mov sub jnp (bad) cltd faddl mov inc sbbb mov push lods push dec xor addr16 push cli xchg repnz lret xchg aas cmpsb mov fist pop cmpl jmp mov sub mov je out arpl dec sbb testl dec inc insb mov loopne loop sub pop (bad) lods jg mov mov (bad) cli push daa adc addr16 push les adc sahf cltd loope pop jae pop adc sahf sti stos movsb ret adc jg sub std dec mov jg mov stos mov cmp cmp adc and jae push mov or mov cmp test mov inc xchg sbb jne pop test add cmpsb adc add rol ds adc mov int or cvtdq2ps mov pop cmp pinsrw test incb or mov dec insl jle (bad) repnz mov stos gs sbb sbb jnp test aas mov into push sahf ja scas push lret rcl (bad) mov test outsl push outsb (bad) dec mov jg das in dec mov push sub lret ss mov jge pop outsl or pushf pop jge jg shr mov cmp or mov push cmp cmp jmp mov push xor sahf push mov push (bad) lock test enter hlt jnp pop or in test aaa inc inc mull mov in (bad) cltd cmc mov mov fs insb into push inc dec push mov sti fcomi ret loopne xchg loop xchg mov icebp ficoml jp popf cwtl and pop push xchg stos xor jle aam or idivl in adc push cmp cmp test add add add push push cld ja cmp xor sbb aad jg nop insl cmp jno inc adc nop mov scas cmc pop cmc cmp inc insl stc or inc pop mov xor repz or dec cmp (bad) jg call sub push ja aas jno daa aam das mov ja jge sarl outsl cltd push out inc clc cmpsl aas xchg jbe mov xor lcall int jecxz test push icebp testb add aaa (bad) cmpsb in aad or jo adc rorb dec clc pop pop or xor lret adc pop ficom int3 sbb (bad) scas push pop pop and aam mov insb mov mov aad and sub mov lret in mov adc and addr16 int3 int3 (bad) xor js ljmp or je xchg push (bad) dec aaa rorb pop push stos dec test testb xchg xchg test jmp stos iret fwait mov or pop mov xchg sbb shl mov faddl lods pop dec mov sub arpl sbb jb push inc xchg (bad) fdivp xchg mov es mov pop jo fs add pushf add xchg dec push cmc mov pop je mov xor xor int xor mov sub sub outsb out sub fisubrl lods test lods faddp sub push movsb dec pop push or fwait sbb aam mov stos inc ret es pop cwtl gs mov pop lcall sbb gs and add fmuls test cmpsb mov fnstsw add les call pushf inc enter xchg mov xor fstpt dec int3 jmp ret loopne mov test add pop stos mov fcmovnbe sbb add mov das jne sub outsl int push inc test addr16 pop loopw push add into pop aad mov insl fcompl mov xlat xchg stos sbb push jecxz push xor mov add push jge jne or clc cltd jge stos decb mov xlat lock out adc test (bad) jb push xor jmp mov inc sbb leave push inc loop inc lcall push push inc outsl test xchg les fwait gs (bad) in imul mov (bad) in in lods mov fdivr aad das inc mov mov sbb outsb push adc push mov fldt roll jae lods icebp add sbbl mov mov add aaa dec mov pop add push push dec arpl mov add cli (bad) sbb adc and es dec push in or push xor test scas jo inc and add insl pop sub or mov inc (bad) push push rcl sbb mov jl ljmp adc fidiv push lahf imul adc sbb scas or and fucomip and inc test or std out pushf mov cmc das sahf out mov mov dec test test push out add mov dec jne add lret jle cmp mov xor jnp sub ss xchg xchg or jo jns mov jecxz pop mov nop xchg add xlat (bad) (bad) cld add add and ret jnp mov fisttpll lods ja (bad) mov push mov mov and xor push in inc xchg xor cmc movsb dec sub rcr mov stc mov pop mov sbbb clc leave jb decb or push cmpsb ds push stc cmc lahf sub adc lods scas add jge cmp cmpl and or xlat or push inc sub mov adc fadds jl shlb mov pop je,pt mov cli pop lcall xchg cmp xor (bad) lock mov pop push shll fwait (bad) xor movsl fst fnstcw inc in jb in js daa cmp mov jge sub inc adc xchg sub push cmpsl mov test popa fs mov test int sbb mov mov pop sub (bad) mov jg scas cmp cwtl sub adcb pop pushf inc insl inc ss pushf mov push data16 addr16 test or push call pushf mov pushf pushf pushl ret jmp sbb and aam inc fsubs sub mov lea or popf ret fucomip frstor mov jle bound push cmp mov mov add lcall je xchg fadd das out lcall insb stos loop loop (bad) cld mov mov jl xchg scas add pop je fwait sarl mov xchg lret movsl mov (bad) mov enter lahf jnp call dec sti cmp mov loop je sbb testl gs in pushf or xchg add pop mov inc xchg in in les movsb push xor (bad) hlt add sbb or push mov pop inc mov ja inc mov sbb sbb xor or xchg lods bound pop sub das (bad) push fwait pop data16 inc lret cmp and stc or xor sbb xor cwtl mov lret jns test xor inc push lds jno xor mov jp pusha out or js movsb mov ja icebp sar adc test icebp pushf mov ja std std loopne push mov test outsb pop ja jo aaa inc and pop popf mov dec mov or dec int3 rcl xor ficom sub pop movsb or icebp cmp add adc mov mov mov (bad) lcall in push aad or add fs imul add ret add add add add add add add inc push add add add push add add add add add rolb add pop push add (bad) or add push add add add and lcall inc ret adc mov mov and xchg mov mov into jge pop ds mov dec cltd pop jp cmp decb or pop jbe cwtl mov sub jp jne js jae mov fldt dec mov pop dec mov xchg add (bad) insl push jmp pop xchg jl pop jmp push jp sub inc rolb xchg xchg hlt lds xor adc nop outsb out iret int popf (bad) dec lahf cmp xchg pop cmp fcomps mov push pop cmpsl icebp popa xor jmp inc in add aas lods addr16 inc add push xchg push mov sahf jo xchg cmpsb mov mov out pop dec ret cmp jmp je push sub adc inc je outsl mov and sti xor cli in mov pop (bad) iret in sbb push (bad) rorb fwait std fwait imul sbb nopl out mov sbb add mov jne ja (bad) jp push pop stos push or sbb dec lock lret mov dec push xchg jg (bad) les jnp (bad) lock inc mov jmp push int fcomip (bad) add inc push (bad) int3 bound mov clc test imul and sti mov or inc adc (bad) aad fimul in cmpsb jnp gs popa mov (bad) dec stc xchg and scas test fldl xchg inc push jg iret or lret ficoml inc arpl cli sbb inc adc insl dec mov jb inc dec xchg in dec push loope je test ljmp add (bad) pop (bad) cmp jg pop add lret lock scas jge,pn mov xchg insl ja fdivp imul mov sbb loope sub jae int3 addr16 sbb inc in xor fdivr (bad) cld clc mov and ret pop push or ss mov sub sub jmp xor mov cmp sbb xor loope mov test push test and xchg leave jp jns push mov fnstcw pop leave dec sbbl or scas dec mov outsl imulb jmp mov orps pop in push dec sahf cmp or mov clc mov js pop aaa lret sbbl xchg pop pop pop lcall imul mov xchg mov xchg push je cltd fs xchg in outsb das lahf insb ljmp punpcklwd mov jge sahf cmc popf mov popf pop iret mov shrb jbe hlt cltd les out aas cli idivb iret and in dec call je repnz daa inc pop sbb sbb and dec xor inc inc bound (bad) in pop mov mov test xchg inc outsl add icebp push jp cld cmp in cmp push mov add aam ja fldcw xlat bound daa and sti and and loop mov das push or je fs jnp cmp sbbl push push pop pusha data16 mov rclb add sbb in pop call js xchg aas andl std nop repz popa nop (bad) inc mov (bad) ss push dec insl imulb xor lret adc in in dec pop addr16 movsb xor imul fucomp push (bad) (bad) mov push insb push cmp add enter mov outsl push out jno shrb add sub insl pushf fisubrl jb lea xchg sub mov test movsb inc and adc cmc out xchg mov ret aad aas inc nop (bad) fldenv mov movsb fucomi dec adc int fdiv popf mov sti mov push sub decb test out xchg movsb pop sub dec or xchg cmp jmp mov call sbb ret adc (bad) shl sar ffreep mov xor cmpsl pushf inc fmul fstl or mov jbe and jnp std js clc push rcll loope out xchg out dec xchg flds jge pop pop aas xchg jnp mov mov addr16 jecxz lods xchg in data16 in mov sub jmp sub xchg jge iret cmp xchg pop jle jnp fldl movsl jp (bad) (bad) push mov add sub shrl inc dec sti cmpb inc mov mov les xchg insl jmp mov lods adc lds pusha arpl ljmp int3 xchg dec insb adc outsl jle xor xor sub inc icebp xor sbb sbb fimull jbe add push pusha xlat popa and fdivrl inc adc dec data16 es imul dec popl in or and cmpsl mov xor fdivrp push lcall xchg ror out jno xor and mov ljmp jp and jge jbe addb and (bad) enter ss xchg lods adc and iret mov dec lcall ret bound mov xchg sar jne add mov pop push outsb dec (bad) dec pop data16 shl insb pop ds js aas pushf test rcrl lods int outsb pop pop mov pusha shll sbb pop jge dec enter inc cwtl push addl rorl sti bound jns lahf dec mov and push idivl movsl imul dec out sub fnstsw mov or push icebp push adc dec aad cmp push xchg ja push add lods xor mov inc pop push (bad) mov jl inc (bad) sbb mov aad shll inc fsubp lea sbb fs mov stos xchg outsb ds sbb test xor popf adc and scas jae inc fldt xor mov popa hlt jnp (bad) fild mov out pop push or clc gs and adc shll lods sahf dec adc movsb add mov fldcw fisttpl mov mov inc jbe xor and stc cmp xchg test lahf jns lea push cmpsb jbe lods mov jp dec hlt cli cmp mov fist in mov add test ds pop push lods or dec xor cmp idivl or inc mov into bound jge adc mov dec fcompl les std xor push sub cbtw xchg rclb jp pop test test and xor mov inc or inc fwait dec sbb scas mov addr16 inc lods mov pop jmp sub incb inc and jo aaa xchg mov push nop sbb loop mov popf lcall int push ficomp sbb pop xchg (bad) xchg inc lret jmp jp bound rep sub fcmovu andb sbb sti mov jno cmp dec inc out and or push cmp push inc iret xor mov and mov cmpsb xor push int es jmp stos mov movsl jns and notb or mov in and cmc add mov jnp inc mov dec and dec mov rclb in pop cli das mov test mov push inc pop push aaa push jns pusha cld sbb mov pusha fdiv xchg fcompl roll es dec lods and out rolb mov dec gs ljmp arpl or in jge mov outsl rcll fwait mov aad jmp (bad) leave js aam sahf mov jno cld lcall jmp rcl pop dec mov popf inc and loope jecxz js push xor call bnd sbb push adc jg das cltd add pop sub sub jns sub movsb pusha fnstcw and enter cs sub push or or leave call lret lods mov mov je lods pop push cld nop or into in sbb (bad) adc (bad) cwtl jbe rcrb ret mull push jo stc int3 push push rcrl inc lahf dec pop negl xchg xchg cmp lret inc stos mov (bad) jo cmpsb in mov pop adc pop call adc or sub rcll cmc test lds cmp jo leave loope (bad) adc inc cmpsb pop daa scas lea packssdw pop cmc mov idiv pop mov bound lret mov les pop xor or mov pop imul jmp and pushf pop mov leave mov pop ror std (bad) sahf std xor ret mov cltd in (bad) rcrb and adc rclb cmp cltd lcall popf or push outsb lcall cltd xchg sub arpl jecxz,pt lods fwait sbb cs xchg push mov add popf sbb sub das dec int push jno mov xor dec lahf add sub or adc out jle xchg bound popf xchg pusha adc test sub jl cs mov dec mov mov dec (bad) mov inc ja in (bad) aaa and mov fldl jb mov pop sbb icebp iret adc out mov adc popf xor ret and push notl rorb scas mov xchg and xchg imul arpl and sbb out jbe decb mov pop fcomps dec popa jo pop inc sub out pushf sarb adc addl jo je jo (bad) (bad) mov push lds xchg into and js imul push je cltd ss lds out mov dec jne roll fdivl pusha ja (bad) imul test pop push fisubr in outsl xchg ja mov mov fildll pop enter or push sbb mov mov mov popa mov pushf dec or dec add roll test or aam cmp outsl imull (bad) mov jl pop mov lods mov adc cmpsl cmp ja mov sbbl xorl and mov int3 adc cld je adc js or xor icebp sbb and dec mov stos cmp lods pop lea sbb leave lret dec fmull fistpll push loopne stos xchg lds or xchg fadds jmp shl lcall pop pop mov ror adc xor ret xor (bad) mov jbe mov sti inc daa out xor mov insl and and gs nop xor sarb jl je jns push jae add popf cld aam aad cmpsb fs outsl jnp (bad) pop mov xor inc xor inc mul adc jge ret or sub jecxz xchg add outsb adc mov sqrtps xchg push test test orl into std xchg mov add cld add aam xor call call pop mov insb mov and loopne and test or dec daa xor pop popf adc sbb lds in inc cmp sbb ds jns mov insb push mov ror xchg lods fstpl pop jnp inc mov jp mov stos (bad) loopne sub in xorl sub mov jbe inc sub xor in rcr ja sub mov ret push popf in hlt mov fs jle out inc aas cmpl test mov lods lods repz ja mov outsl test cmp fsubrs adc adc or sbb adc pop hlt pushf add ja fmuls pop ljmp (bad) mov out push and fwait das push lret dec enter cwtl add jne arpl fildll and and inc rorb xchg nop les pop lret push lods add xorb pushf mov jmp sbb fcmovnu loop fimul scas out enter push push (bad) fs aas cmpsl repz repnz scas mov and pop ret sbb jmp cltd js lock mov add fstl push testb and int3 pop enter pushf or cmpsb lods sbb mov fsub test hlt mov sub dec mov nop cs push lods add pop repnz sub std into cmp inc adc cli out call sub fnstsw xor aaa in inc xor out sbb lret in (bad) adc cmpsl ror jge mov bound pop lds rcrl lock jmp imul inc xor addr16 sub movsb inc mov jmp mov add xor ret scas in fadds hlt xlat (bad) (bad) pop int3 push cmp jbe cmp jne nop into (bad) jbe push xor sub bound push out int clc sahf stc jae mov and xor fiaddl add ds dec dec outsb cs sbb xlat or and or or pop and dec jp jne std dec sbbl repnz test jg cmp aad dec pop mov cmp add or cmp pop fs int xchg sub pop dec cld mov popf sti movsb lahf cmp leave cmp mov sub fwait aad cmp cmp (bad) mov fcmovb fstl dec cltd stos inc dec imul mov push pop mov push inc mov pop call and mov out lret stc out idivb jle or sub out loop in es (bad) lock (bad) cmp lods mov stc shll stos lock pop and lea sub and adc jmp sub lret enter pop cmovl sub fwait test inc fninit cmp pop ret in lock lret push mov xchg addr16 adc movsl out sub rolb xchg inc sbb mov jne stos insb add clc and cmp notl add mov mov adc jmp sub push jmp arpl sub push inc or add jmp ret stos enter mov enter into stc dec cli dec and ret xchg mov out push insl loopne xchg sahf cmpsb aad xchg mov and pusha ds mov adc xchg adc scas ja or loop int pusha dec mov xor dec dec (bad) jmp ss ret shrb jmp sub adc push imul fstpt lahf adc mov pop call push addr16 jo pop mov inc sbb popf mov pop cmpsl xor add add outsl call lea je stc cmp call lea jne push inc push inc pusha lea jmp pusha jmp lods dec lahf inc icebp push inc push push out icebp stc lock out mov movsb scas xchg and (bad) sahf pusha jp in cmp data16 outsl adc dec jo mov mov push jp mov xor mov notb jl lods dec les mov jecxz rcl jo cmc in adc nop (bad) mov frstor add push and (bad) pushw (bad) jnp dec mov sub jmp leave and aas cmp cmp push push pop push or es mov xor mov adc push mov inc shrb adc jo sti mov in xor jne mov jmp mov lock test movsb pop mov je adc jg or jg fisubl cmp inc js mov push sbb cmp out xchg cwtl or movsl scas in xor mov pusha das or jbe add (bad) xchg rolb cmp mov sbb xchg push adc xchg sahf negl shrb xor or mov xlat loope in inc cmp fsubs inc (bad) (bad) sti aad sbb roll daa xchg movsb in adc xchg xor fwait inc scas inc rcr rorb in out arpl jbe push mov lret xchg adc mov inc notl pop mov adc xchg in add sti sti ret push mov hlt stos inc mov enter int3 enter adc jg push loop sub mov (bad) negb in (bad) lods cmp repz fsubl mov mov mov (bad) jb sub and add rorl add je add fs call call jmp jno out xor push inc daa outsb mov pop cmpsb popl xor xchg and jb inc arpl add sub nop sub lock mov xchg and pushf (bad) mov mov insl push into xor shlb push mov or cld imul into ljmp add repz or push pop or mov push outsb mov mov mov pop push mov mov out dec out shr push push bound jo pop jmp mov je fildll sub mov stc stc inc (bad) jge,pt or gs push inc out sub push inc sub mov decb dec jb loop xchg add pop mov push jnp jbe jmp mov gs sub clc pop xchg push out xchg (bad) and jge ljmp jge jne mov lods pop mov mov jnp dec sarb or adc dec je jecxz aaa loope (bad) testl test cmp aam aam mov cmp aam push xchg xor dec aas out sbb call loope iret pop insl scas fucomi (bad) aaa adc cmp nop mov push hlt inc (bad) sub icebp fmuls or pop or movsb lock mov inc test dec push sub push sbb std push inc pop sub (bad) cwtl pop dec cmp jmp or (bad) cmc (bad) mov fildll xchg add push lea add insl mov outsl mov cld sub arpl into fucom daa cmp cli bound add dec push dec mov fs xchg ss mull xchg leave push (bad) fs mov lods jno pop xchg xor mov leave popa fistpll sub arpl xor rcl and mov lods and shll test jnp addr16 and ljmp jg add push lea ja call call cmp push mov push inc mov clc (bad) cld mov repz mov mov and xchg jnp,pn jnp test test ja lods test and fdivr int3 mov push and add xchg pop dec pop in es daa cwtl sub xor adc loop or dec scas mov push rorw hlt js repz xchg inc or ds lock rcl nop pusha ds scas xchg int fwait pop mov out aas rolb jmp out mov add push adc cld pop sub iret jmp repz cwtl shlb jbe hlt es faddp cmp stos shll jbe lock mov test les cld icebp add arpl add add bsr setg btr test push push btc call cmp pusha mov sub iret in xchg repz cmp push sbb dec jo add pop out mov lock sub add lds ss push scas xchg int adc mov daa push ja mov adc inc jo mov jg push test lods add hlt inc add leave pusha pushf lea jmp pushf not stos setle setl mov lea pusha lea call jp pushf pusha lea jae push call sub clc cmp call shl pushf pushl lods pushf push not jmp movb mov push pusha pushl ret pushf pushl cmp or call into add aas ret mov jg push jl inc mov cmpsb xchg leave jo mov ret xchg imul aam cmpb (bad) add mov or pop cmpsb lret and xor jg lcall popa test lret and jge jecxz add jge icebp lds push loop pop call in cmp mov mov mov stos pusha lods sub call ret lret lret xchg js pop dec sarb jnp push and xchg cmp jns cwtl jp cld xor int mov mov jecxz adc xor jnp test mov lret stc xor push (bad) jo pop mov aam push fcmovb adc outsl cmc sbb jle inc enter jmp or idivb push icebp pop mov adc fdivs adc mov jbe stc rcl mov dec pop xor inc jle or outsb cmpsb xor pop sub xlat mov or cmp add das enter or push data16 push inc lods pop dec sub icebp jns leave sub mov shll dec inc pop and scas push inc push sub fldcw pop rclb (bad) fbld or add or push adc jmp mov ljmp imul in and jbe stc mov xchg pop jecxz fistpl lock xchg dec dec mov push cli mov xchg call fildll xchg gs and mov dec jmp loopne adc xor gs xor xor cltd cli lods pop push movsl rclb lea call push call rcrb inc cmc add fs mov movsl popa mov outsb adc mov or add (bad) jb mov loope dec xchg cmp or inc adc cwtl xchg (bad) nop add push ret mov in shll mov cli jp outsb jle xor insb scas jns sarb jecxz sbb inc movsb sub cmp shl or and pushl jl bound sbb inc xlat jbe imul xlat sub mov adc in or inc mov cmpsb jb pushf jmp scas jo outsb sti push inc jp mov mov cmp (bad) iret cld ret in mov pop (bad) mov mov test cmp mov mov dec jecxz xchg sahf push fisttp jne pop int3 call (bad) and push sub push add push mov add aaa fcoms xor xor add insb and lods mov inc sbb add jmp pusha lds xchg sti push inc pusha sbb mov sbb pop (bad) cltd mov fadds cmp cmc jns fimul insl dec es jmp int3 pop mov (bad) sbb pop mov mov or scas push mov sahf xor lcall inc pop push adc cmpsl movsl mov pushf jp mov lods outsb bswap inc inc mov dec negl push xchg dec mov pop and and (bad) aas push test fsubs sbb int3 jge jle daa mov int pop sahf jl shl inc test mov in cmpsl dec add inc insb xchg mov stc dec jne js (bad) icebp mov (bad) fdiv es iret or jg xor (bad) jae pop mov and (bad) (bad) mov sbb mov xchg inc pop test xchg (bad) into pop fiadd push adc lcall xchg dec pop jl hlt mov sbb add dec xor xor jg mov div adc and fs dec jg (bad) lock into (bad) hlt and js mov mov into outsl fwait pushf add add mov or mov or call test sub aam xchg cli and clc insb out push loopne mov pop mov lret in test jp outsl js pop cmc andl jmp loope addr16 out lcall inc push (bad) mov cmp pop sbb push mov rol mov popa test mov add dec imul jne insb jp sub in push mov add daa sub fs fs lahf test mov fwait cmp incb mov out fwait cwtl jno pop cwtl out xor sub sub addr16 fcomps mov lret mov jae add jo imul fs jb call cmpsb fwait (bad) pop inc (bad) or mov push xchg ret jne cmc fidivl lods (bad) mov sbb je pop shrl mov add pop aad xchg sbb adc (bad) iret pop and jns lahf sahf cmp adc aad xor (bad) loopne pusha aas sub push pop or push ret pop add lods lahf stos or in add cmp or pop jo into movsl (bad) mov notb (bad) jmp (bad) jmp xchg dec cli pop and orl cld ret and xchg outsl jno cmc adc (bad) in pop (bad) mov and push aaa jle mov nop mov jge xchg mov frstor and sbb cwtl xor incb jbe pusha pusha lea jne pushf mov pushf lea js push pushf lea jg push push call test clc add push call cld pushw popfw movw inc push lea ja adc pushf pushf push pushl ret push inc pushf setae not mov movb movb jmp add pushl movb push lea jmp call pushf pusha push mov setge mov not pushf lods bt clc sub clc push clc pushf xor jmp mov pushf pushl pusha lea jmp bound repz pop inc leave imul (bad) dec sti pop outsb mov call pop mov lcall movsl ljmp insb xchg mov (bad) and pop mov dec cld xor xchg aaa adc cmp and shrl jg and fwait (bad) ljmp mov pop jge xchg in dec test push add clc clc cmp push mov lea jb bt cmp jmp rol mov stc shr call sub bsf mov stc or push lea je neg bts (bad) testl movsb fildl sar shrd sub sar xchg bswap shr (bad) testl xchg shl add call setne mov stc movw pushf not call lea jne push pushf pusha not pushfw popw jmp mov call pusha pushf xchg push push call mov pop inc es addr16 sbb (bad) jg and push daa clc nop fwait adc jb sarl xor mov pushf in sbb lds mov adc sbb inc jecxz push ret daa enter (bad) sub pop jl or loop jge fnsave sbb rclb mov xchg fist cld adc iret in rolb in leave ficoml inc mov fistp clc and pop inc xor repnz cmpb inc inc lods daa xor mov pop repz and adc (bad) aad sbb test xchg es jae jbe cli pop pop stos or jnp cs push movsb mov imul (bad) adc dec ret sbb add push adc mov push lcall iret fistp popa jge outsl xor movsl xchg sub adc jge mov jp mov (bad) mov mov test es test jge aas (bad) cmp push loope lds push movsl aad lahf mov push add lods pushf call out loope out cmp inc test das inc out sbb cmp and call cmc clc cmp js cmp push movb pushf lea jae cmc bt cmp jmp push rol call movb neg test pushf push stc not cmp sub pushf test cmp cmp pushf not lea setg movzbw jmp lea ja pushf imul push add push push pushf lea jmp inc stos arpl ss push push (bad) dec xchg shlb fcoms adc stos mov mov jnp push jae push jg push dec push in jg inc push sbb cmp xchg mov data16 lahf (bad) push int3 test sahf lret fmull loopne jge mov jle mov mov add add pop out jl jbe cmp and sub push in mov ds add movsb lods and push scas add push inc and add add inc out inc mov ficompl add push stc jmp not setns movzbl pop movsbw pusha mov pusha movzbw mov jmp js aas rorl inc es jo sbb fs jl sbb cmp int3 and or lock test iret or cmpsb dec jbe js inc lea data16 add mov and mov in xchg int3 xor mov cmp adc mov cmp and lock repz or inc sbb jbe adc mov and jmp mov jnp xor aaa pop mov (bad) pop add adc or int xchg cmp dec or cmpsl xchg xor lods lret out das or jl sub mov push push lock std std mov xchg xorl sbb int (bad) cltd adc pop das ss (bad) (bad) cld or adc inc xchg and aam push enter fldcw adc test jno jp jle fs inc notl in xchg push inc mov adc test mov (bad) insb pusha enter fisttp loopne dec or sub mov dec pop jl,pt or jmp add add movsb scas xchg (bad) cs sbb xchg jo int dec test leave lock leave dec lock lds adc or push mov sarl fbstp push push push jbe addr16 aad in lods push mov adc das sbb xchg jmp test loope int3 fistpll hlt (bad) lret dec xor cli adc popa lret fwait lods and sbb add push daa jae mov cld dec lea mov lds pop fdivrl and movsb or jnp pop les stos adc es adc insb sarl sbb pop adc sbb fmuls or iret push hlt mov fild leave add (bad) xchg pop int std or cltd ret popf fsubr jg cmp inc sbb in xchg (bad) int arpl sub add adc sub jl add movsl pop popf lods test (bad) negl clc mov xchg and push jge mov les sub ss adc cltd sub and hlt mov insl insl inc fldcw leave pop lock mov mov in mov push xor movl negb sub imul or invd (bad) or dec (bad) aam popa jp andl inc jg xor xor cwtl movsl insl cli fsubrs shr jae jecxz js rcrl (bad) aad movsl mov add movsb pop stc sub stc sub push jecxz rolb xchg adc test mov int fsub xchg jle pop inc inc out jp add jl imul popa pop pop outsb pop cltd add leave sti dec xchg dec jo addr16 jmp lret xchg mov ret imulb cmp mov stos mov frstor sub mov (bad) (bad) mov arpl lret int dec arpl mov push cltd sarb add stos push sub lret test fsubr inc je push or inc cwtl push cli cmp push arpl cli mov cmpsl push xlat mov loope (bad) xor scas mov push inc stc mov xchg repnz adc call insl insl fwait mov xchg ljmp and push pop inc mov lea jmp pushf pusha movl push movb lea jmp lea jne shld mov pushf mov add call mov test pusha movzwl add bsr adc mov pushf movb call sub pushf inc mov arpl jge or stos ja jnp,pn lods data16 jp jb outsl jns test outsl sti sub hlt js jg sahf dec jnp shll fcomip mov jg mov stos jle js imul (bad) mov (bad) out mov and jge jl std jl arpl jns inc fdivp mov jp dec fistpll jecxz cmp mov mov loope jno (bad) fwait in cmp in insb fstpt lret inc clc das mov dec sbb sbb aas fdivr out pop inc and mov int jge mov in jl sbb sub xchg or inc mov stc mov in mov into std jl lea add mov das jle push dec sbb jl jo jne mov fwait jnp dec sub jae sahf add cld aas and and jg mov adc pushl pop jge jl insl cmp pop jl imul std sahf ja mov push arpl das sub jbe stos sub aaa jge ljmp clc mov test into jbe adc ja bound fsubr mov out dec mov jns mov pusha cmc jp clc mov mov jns arpl jle imul stos aas push xor je pusha les adc imulb pop add or sbbb loope inc jl pop mov jl js inc mov in insl fwait ja gs mov adc cmp cwtl sub sbb inc imul aas rcll divb out push pop scas dec jae mov pop or in jp jbe aas aaa adc pop gs jnp xchg imul js adc test mov jo lea cmp aas jp cli aas cmp (bad) jnp inc hlt loope mov int addr16 out mov push pop mov pop cmc jbe cmp jge adc ljmp sti push inc mov jne gs aas imul sub inc insl data16 mov aaa aas test in jp cmc rcrl ret jne,pt sti pop mov aas sub imul or sbb mov mov insl fsubrs jns lds lahf fisub sahf pmaxsw adc lea stos push cmp fdivrs cld sbb inc ljmp cmp mov lods hlt (bad) cmp cmp lods test aaa ss outsb and mov imul decl adc xor or and pushf push fcmove and inc imul inc cld pop insb cld cmp sbb cmp jg inc cmpsl out or test dec jl clc adc add push or addr16 inc push addr16 nop inc test mov cmovo fistp int3 (bad) cli inc pop clc inc (bad) repz mov xor test jnp add sub lahf dec add mov sbb jnp icebp lds imulb add jge or mov ds xor jns test pop fsubl jle mov outsl fadds jb loopne fcomps mov scas or push jb sub (bad) je sbb xlat jp sbb mov push push or xchg stc add pop pop ficomp push jle push jge mov cmp push lret imul ja clc sbbb outsl jmp pop mov sbb and fmul setno cmp (bad) jnp popa roll mov sub inc pop aaa inc mov push mov mov out lahf test popa mov pushf dec pop pushf cmp push jbe cmp jnp fidivrl das lea mov mov xor ret cmp pop stos xor in add out minsd aas and sarb pop pop cmp cmp cmp mov and jns pop sahf repnz repz inc hlt pop dec jge inc mov insl inc (bad) hlt inc lea les dec inc test sbb push addr16 inc sahf and (bad) sti sbb sub gs rep cmp sub icebp inc fimul dec jne fadds sti pop mov cmp int3 dec and sarl ds test aam (bad) sub repnz xor mov ja dec or sub push popf decb mov iret cmp inc dec mov and (bad) inc test jne incb xor into jl ja xor xchg mov test mov mov mov sahf sbb stc pushf xchg test ss rcrb fucomp (bad) ja outsb dec mov loope insl cmp aas jle lret mov xor cli jmp add jmp and mov sub jo outsb sarl cmp pop mov jp mulb jbe js pop sahf jl mov dec cmp sahf dec ja in lods jno (bad) divl mov lcall fdivrl pop sub test mov jl outsl fisubr xchg dec sub jbe lret imul dec jle icebp (bad) clc sbb cmc jp mov (bad) prefetch test data16 or insb cli shr repz adcb aaa cmp (bad) cmp inc pop test call (bad) jne lea aam daa jg add pop lret imul jns clc scas mov push jae xchg into push repz cmp xchg fdivs jl in xor jle js xor mov jns cmp jnp data16 data16 jbe jp pop out divb into mov (bad) xor mov push loopne aas mov fs (bad) pushf lea xchg jno rorb dec das sub push lret aaa jecxz out (bad) xchg cld and (bad) xor jge into cli fcmove in data16 jl lcall dec andb jle mov sbb into jb imul shrb (bad) cwtl je adc jb cmp sbb daa sub xchg mov pushf dec mov std lods fisttpll sbb arpl pop arpl rcll mov repz add movsb into je sbb bound xor lea sbb jl cmp xchg mov and fsubl cs jle cmp cmp pop jg jge sub pop sbb jp mov push addps dec jge dec jle mov jl mov jge lea inc pop sahf fnstcw cmp jae lods repnz les adc mov negl sub (bad) mov jle sub int mov mov fwait pop int3 dec sti daa into sahf adc fstpt push add fsubrs (bad) icebp fwait push loop das stc jmp and and or loop jge aam das jnp sarl in jno and dec jge mov pop dec rcrb cmp xor int jl cmpsl sbb pop mov pop outsl (bad) and test gs jns imul pop jmp dec stos loop ret sbb lahf aas pop or push jno loope sbb push je push jnp cvtpi2ps xchg cld (bad) es (bad) scas xchg mov jl,pn cmp repz repnz cli dec push adc jnp push imul push aaa mov sti sub lfs dec fcompl sub incl mov mov mov push movb jae xor mov imul rcrl adc jb or cmpsl aaa jg das inc test ljmp ss cld imul scas mov mov inc inc xchg jl cmp pushl adcl in idivb jge add dec imul add sbb mov sbb mov ja mov es sbb ja and push popf mov jbe clc pop dec imul or dec mov mov lret inc sub inc add out mov ret inc data16 inc jmp imul sub pushf xchg stc dec inc inc xor lret cmovg fcmove cmpl xchg inc mov jmp (bad) (bad) cmp fstpl int cmp inc pop stc ja mov adc and cmp xorb push inc jle sub jne imull (bad) add cmp int icebp push and outsb jnp aas pop lods in dec scas mov or push lcall insl pop in (bad) jb outsl adc orl inc cmp call jnp lret inc out and ss or lcall pop fstpt cmp adc lcall ficompl test mov inc jmp shrl (bad) mov ljmp or xchg cld xor stos push mov mov out adc mov (bad) sbb fldenv pushf in inc (bad) cmc (bad) fistpll pusha xor pop sahf mov jno xlat push rorb dec jnp dec sbb push divb cs insb ret jl mov lea mov mov push pop pop mov cmp addr16 clc sar outsl imul dec data16 je fsubrl push inc mov cmp rcrb nop insl das xchg (bad) dec push cmp push sub jp push jo ds and pop mov or fstpl xor sub mov dec xchg ret (bad) rorb cs in lods sub push mov cli mov jmp dec mov sbb jns dec mov jne ret bound mov jl in (bad) cld inc or (bad) pop sahf into jne and pusha pushf mov aam cmp mov jns aaa je push imul std mov bound ror inc mov jle push lods (bad) fnsave jge and sub out std and dec mov and frndint sub les inc test jl loopne add ds lahf and pusha add add iret jbe cmc gs xchg inc icebp dec mov mov sbb adc orl cmc outsb cli addr16 inc test repnz sbb repnz inc mov (bad) pop in movsl dec xor push mov jle add gs or add es inc push xor cli in je insl mov and jo jne push cmp imul and mov pop jns das in sahf adc mov imul and push hlt mov cmpsb and lea or ret test xlat repnz jno dec daa arpl sbbl aaa mov pop jbe sub mov cmp lcall mov mov jl cli or mov cmp cld or dec cmc mov sub outsb not (bad) repnz mov mov mov jbe mov aam lock mov or sbb lcall outsl int3 test aas and cli gs ss (bad) stc mov ds jne insb mov inc addr16 push mov pop cmp lret dec dec cmpl pop aaa xor xor in cmp mov dec fnsave ds pop ss out push negb scas adc mov adc cli sbb (bad) cld inc jnp push dec gs jne cmp ds push cmp jne cmp push jp dec mov stc inc pop cld in ret dec ja inc jbe je adc sbb aaa cmova addr16 es mov and mov into sub mov add push cli sbb dec ds aaa dec add popa adc sar mov imul cmpb and sbb mov je sarl or in xor xchg das add jmp xor xor xor push lods mov and inc ja scas in stos dec push loope repnz jae,pt mov jle xor cmpsl jl ja push fsub cli out outsl lea pop dec dec mov aam cmp xor sahf ljmp gs mov dec das xor mov mulb sti repnz test shll dec pop push inc aad lock xchg jbe xchg ja jbe fs inc inc jne iret je cmp add imul outsb pop jecxz sub or or or pop mov int dec mov mov jge cltd or je pushf icebp push lret inc mov cmp mov lods mov mov insb pop out fsubs adc repnz pop pop into mov roll in mov (bad) fdivl and mov and mov mov int insl xor imul mov sub xor (bad) stos in outsb sub or aaa add jnp mov out lahf in adc pop dec clc cmp pop xor sub aas stos mov scas cmp in cld inc in pop jnp mov xor inc ss cmp mov test sbb mov pushf (bad) xchg aam addr16 test pop cli inc pop dec pop add (bad) dec xor bound jmp mov scas jns jp or imul popa pop sub int scas popf jg inc scas (bad) mov inc or sti js arpl inc imul sti add mov aaa scas aam fwait cmc sahf mov std cmp and stos inc pop cmp cmp call pop sbb dec sbb ret stos sarb add sbb bound out jae jnp and aas cmc jle jge test xor bound mov sarl inc test sahf inc std or inc sub xchg outsl push mov xchg xor dec jge scas mov ja stc cmp cli jae mov sub arpl xor sbb sub out jmp popf pop mov sbb sub gs pop mov jb rclb push pop xchg jnp pop pop sbb adc adc popa addr16 sbb mov sbb push arpl push fs cs push mov ss cmp mov in pop or jne fwait js add repz lea es (bad) push ret jl inc pop lds mov orl stc (bad) jbe cli mov repnz fadd xchg fiaddl cmp add orl push out stos or sti outsb in ljmp xchg add js ljmp (bad) insl xchg loop test call mov mov jl testl cmpsb mov sahf popa mov mov jp ja lcall mov cmp mov xchg pop mov lock adcl inc mov (bad) jmp or xchg jle jne pushl and outsb jbe sbb mov (bad) std mov pop fmuls aaa xor or sbb mov push jno mov fwait lcall cmpsl xchg sub sbbb inc push imul nop iret insl (bad) mov push rcrl int mov jp in push inc imul fnstsw testb and inc in add jle aam xor jne icebp mov bound std lea and dec jl mov and test mov (bad) cmp cmp jo or jbe (bad) adc ja (bad) push test push fdivrl lods jl mov (bad) loopne jbe xchg xchg dec inc push jae fdivs dec push jge jne jnp repz adc insl into jo cmpsb movsl fistpll sti idiv sbb pop jnp pop pop cld push dec xor std imul add nop jg,pt (bad) mov push insl (bad) jle cmp mov (bad) fisubrl mov cmp adc jae mov pop je and test cli dec mov neg and push mov ret sub call sub pop jne pop test scas lret jno jl add mov sarl mov jge and arpl das and pop mov jle mov sti or ds int das mov sub xor xor push aas dec (bad) sub cli shl sub mov popf push xlat sub cli xchg cld mov mov sbb mov inc inc ret in scas pop jmp push xor mov outsl insl push xor (bad) in or inc scas jge mov cld ja mov inc jb inc insl pop xchg scas cld loop idivb shrl push push adc sbb sbb dec and pushf mov sahf (bad) mov xor decb jle cwtl js jl leave mov sub insl xor adc pop sub push cmp in test stc sahf xor push bound sbb pop outsl jle jp pushf xor imul aas outsb and fild xchg gs icebp inc dec xchg pop inc xor test sahf push sbb mov mov test leave pop mov xchg xor mull out mov adc cltd test push inc cwtl aad call movsl mov dec inc sbb data16 jne imul pop sub scas fdivs jnp and lods sub ljmp or int dec inc adcb popa sbb mov dec sarl stc insb (bad) xchg push fistpl inc add jb sahf xlat or xor jns lods loope,pt popa iret insb ja fmull jnp mov sar sbb dec pop jno fyl2x jecxz jle stc inc outsl mov ss mov push jnp jle pop loope mov scas cmp in xchg inc push adc (bad) fistpll inc push push ffree xchg mov cmp jbe mov outsb mov jne gs and aaa jp mov pop adcl hlt ds insb jbe int3 shrl jge dec pusha sarl clc jo and scas add fildl mov push pop pushf jle (bad) ss and cmp daa idivb rorb cmp shrb dec jge jmp stc movsl inc or fwait test bound push jbe cli adc mov mov ja,pt out jae outsl jnp pop addr16 arpl das out pop add out das dec and test out bound loop js xchg insl sub mov in jo mov and (bad) out pusha xor ja dec aaa jno mov ljmp jle bound xchg dec leave jae mov ja (bad) cwtl sbb lock aaa ja add sub imul inc mov add in xor or loope pop inc mov or mov fcomi add push jnp out out sbb adc push xor inc mov out and inc sbb jl xor test mov leave js loope daa xlat lahf xchg (bad) stc (bad) adc hlt jecxz ss fdiv mov and es lds xchg in (bad) cmp cmp in ja jecxz and (bad) or jnp jge lock jl sbb pop push inc mov cmp jae xchg jecxz add inc lret std sub sbb lods xchg xchg sub lret jle (bad) lods xchg xchg xor addr16 outsb test je cs pop lock ljmp mov sub js add or jbe (bad) aas syscall dec (bad) push inc (bad) cld mov nop sbb mov idivb jbe pop sub jl cmp aas push pushw jp jl sti and jb sbb ljmp js cmc stos sub mov dec (bad) pushl xchg jmp out les and push cs adc push ret ss dec add hlt inc xchg ja icebp mov ja jne cmp push mov xor jnp pop sti jp dec dec pop aaa mov pop dec pop mov mov gs ret lds out subl int jmp mov out mul outsl mul imul repz lds ret inc movsl push jg stos inc mov sbb pusha sub movsl push xor inc repnz mulb in mov mov add test das dec repnz xor mov test inc mov xchg lahf pinsrw inc xchg std push and inc fistp cmpsb jnp pop test adc jecxz,pn loope sub sbbb shrl xchg pop cmpsl fimull mov add aaa jo push xchg fidiv in cld dec mov lcall cmc lock sub stos adc push dec pop sarb mov dec and icebp aas cmp jl inc push cmp dec in insw addr16 sub xchg sarl mov cmp mov pop outsl ss or xchg pushf dec outsb fisubr gs xchg imul push mov push dec push sub xor cs add lods cmp sub stos (bad) jl,pn daa sbb add sbbb jmp ret dec inc in sub xor mov mov adc (bad) inc mov test jmp (bad) outsb push popf mov pop or push mov or ja pushl ds jl std mov dec ds (bad) iret jp pushf xor std imul cmp sbb je (bad) incl pop les jmp loope aam mov ds sbb push arpl mov (bad) mov out lret into mov mov mov andl or jp clc inc jo sub ljmp jp jo pop mov xor sub dec pushf and neg test popf mov cld or mov pop bound popf mov or push imul sbb fcoml pop mov pop imul repz gs ja stos inc jns dec inc iret scas and jns mov jmp pop adc dec jb (bad) frstor test pop xchg cmp push xchg or dec out push negl in aam popa lret repnz inc push stos cmpsl add test inc mov inc pop sbb xchg repnz out pop loopne jnp inc push ret jns jp scas out and cmp scas out or and scas (bad) out mov push cmp les inc scas jge ja into hlt js sbb pop lds dec xor jle inc popl jno dec movsb fiaddl xchg mov es pop test popf lods (bad) lock aaa inc xor jbe jg and mov and mov test addr16 (bad) fidiv jle sbb ljmp in xor xchg adc sub jnp mov sti adc inc (bad) fcmovnb aaa inc ret iret stos mov nop adc sbb mov je js xor cmp xchg cmpsl sbb mov iret dec xlat sahf push cld decl scas shll pop fs cmc enter mov adc and imul push ret push push sbb xor sub imul gs xor ljmp push data16 lock aad xchg imul cmp cmc bound sar sbb loope sbb mov push sbb jle mov push scas (bad) out cmpxchg idivb ja push data16 sub test lods popf xchg jle das icebp std imul fs enter dec inc ss xchg fs (bad) std jnp jp cmpsl out repnz push jbe pop sbb je,pn mov cmp jle push lock mov ret aas jne cmp sub mov ss jno lret dec jae test aas jecxz jmp pushf (bad) scas stos sub jo lds ljmp jnp sub sub mov jge les clc push and and rorl out inc (bad) repnz pushf hlt insl inc inc aaa xchg (bad) push sub jge lret sbb in orl imul gs out notb imul jle xchg pop push jne push rcrl push lock dec fwait sti std mov cli loope das rcrl push xchg fwait pusha ljmp push js xor test stos adc pushw jnp xor add jecxz mov mov xor nop arpl fdivrl push cmpsb cmp sub imul sbb pushl mov xchg sub aam cmc aad or push inc mov push cmp fldenv sub adc pop push cmc add and and insl in out sbb or leave pop lock pop pop out inc js dec daa mov pop loop inc xlat xor dec mov jb cmp js push and popa push jmp xchg cmpb stc test dec hlt test ret hlt ficomp xor xor punpckhwd xchg sbb aam imul mov cmpsb lret sub add aas fadds jge in push dec pop inc aaa repnz sahf outsl ljmp sbb jbe imul push mov rcrl aas xor mov or fstpt idiv fwait cmp (bad) pop ja mov int test mov out sahf imulb fdivp lods out pop repnz in sbb js in (bad) jo outsb negb fstpt sbb fdivrl jmp jae mov mov (bad) mov sbb sahf mov stc scas mov add cmpsl test imul inc rolb push mov xor pop mov jns cmc in mov insl inc fcoml pusha fisubrl push int das aas ljmp cmp push or push xchg dec and xor inc push xchg push jl outsl adc popf stos aas push mov jl mov xchg cmp mov int3 mov inc sub or sub sti mov gs jbe (bad) push (bad) imul sub fstl les mov xor pop cmp int xor inc push inc mov int3 mov mov hlt jbe xchg cmpsl pop in mov dec ja cld sti andb mov mov (bad) mov xchg js mov jae cmp jp push jne imul cli std xor adc ret jnp sub cmp dec inc sbb mov gs ficoml gs pusha (bad) pushf (bad) das jo nopl sbb js mov popa mov cmp sbb leave adc jecxz mov mov adcl (bad) and js clc jmp mov je dec outsb cmp shrb and or push lea popa or lock mov inc (bad) dec dec sub jbe bound xor (bad) insl ret rclb sbb lret movsl xor imul push in movsb ljmp fs jmp xor icebp adc xor repz into and dec xor hlt lods stc jae or cli imul repz jle mov mov xchg sbb mov pop push mov sbb dec repz dec push mov (bad) in scas mov xor aas insl out jb sbb inc cmp pop rcrl mov and mov or sbb jmp mov (bad) push mov mov das call jbe pop jmp sbb pop mov mov test cmp sub jno lock loop in inc mov fcmovu pop adc cmovo std inc sbb jle adc sub pop mov and add cli xor cmpsl xor mov add insb incb add mov mov std test pushl cmpsb mov ljmp jp fbld lcall sbb jle pushf sub jge sub sub and aaa je push cmp cmpxchg sub clc (bad) mov shrl popf mov pcmpgtw in sbb mov mov mov or mov outsl rorb dec pop arpl inc mov xchg cmp jb shrb jp leave push test inc mov cmp mov sbb jnp or cmp fcompl and (bad) xchg out scas pusha scas add sub push cs inc cli mov adc sub inc jne lods cli pushf jns dec int cld pop call push mov push ja xchg sbb mov ret jle lds pop sahf lret dec enter jmp inc lods iret pop sub and inc inc out aaa lret sbb jg loop xor test icebp das ret xchg pusha sbb adc ret test ds pop outsl jle pop cmc sub xchg fsubrp mov pop loope mov inc and inc bound aaa sbb jecxz hlt test pop push rcrb xor aas mov mov loop fisttpll push movsl sbb imul jge pop repz out addr16 aad lcall (bad) adc jecxz and outsb js dec mov dec cltd loope stc (bad) jbe cmp mov cmc cmp pop xchg xadd std or fistpl cmpsl outsb loop push aas mov and out dec jge fnsave jne lock ja mov push lret sbb lea adc adc fwait and fwait das lahf jmp rolb fiadd sti mov dec sbb cld jmp cli cmp jno enter and dec mov push sub hlt mov sbb rcl sub cli add xchg aaa das iret aam cmp fnstcw out das mov pop or arpl dec sbb (bad) repnz imul imulb movsb mov movsl mov dec mov in orl std jo and add pop inc cmp pop and cs push cmpsb sbb in xlat sub jle dec icebp mov iret mov cmp lahf jmp shll mov mov out or jnp mov arpl push pop jp fsubr std in cmp sbbb mov mov cld mov xor out push inc pop jp sbb cmp icebp dec ss cs pop inc sbb dec push inc push insl cmp mov out dec adc gs pop enter mov xchg cli mov cld pop jbe push (bad) sahf sti xchg add jp jne clc sbb jge adc jne or ret scas hlt xchg scas xor sbb xor sub mov add jne push aad xchg dec sub js aas inc stc mov movsb outsl adc jle add mov iret jae mov rcrl jge leave cmp dec jmp in mov and daa mov xchg or jp sbb hlt xchg jl cltd mov test and jae ffree jmp add jae stc mov xchg dec dec mov and cmc test fistl xor xor ficompl push fiadd mov mov and ja sbb movsl xchg cmp outsb jle xchg jle pop int3 fstl mov leave fistp jge cmpsb out lods pusha mov sbb xchg adc jae stc pop mov aam ja sti inc outsb cmp push test mov mov test (bad) mov add xchg sahf push mov insl and or or inc and dec xchg test jle test sub js call (bad) outsb and std pop pop mov daa inc cs jp mov out jge aas push (bad) mov jle outsl jl xor leave out cmp cmp sub bound xchg jp (bad) out mov jb xor pusha std int pop add inc cmp sbb push dec and hlt sub (bad) cltd pop mov sbb xor jl repz fisttpll add imul pop jp cmp mov and ficom popa repnz iret popw inc lret scas insb loop push xor pop cli lret subl mov (bad) mov mov dec out mov cli mov ss (bad) dec insl jo xor xchg sub call cmpsl lds dec jne dec jbe mov mov push push mov out cli pop jle add pop cmp and add push jbe das jge int imul xor mov dec push movsb xchg cld iret ss loope cmp outsl adc mov and push push mov xchg ds or or cld pushw jl mov jmp mov or lods lods xor xchg std or outsb pop js lods int cmp rolb inc lods ds jns adc leave outsb fsts iret push outsl cmp and push pop cld mov xor push inc xchg incb pop cld mov jmp (bad) jae pop and jl sbb pushf xchg jp and pop imul add fldt xchg rcrl sahf rolb cli seta jnp adc das push pop add or dec dec movsb cmp in or outsb cmpsl js sbb decl popf cmp sbb jnp cmpsl pop cli push insl fmul and dec jns and and bound jbe fincstp or enter aam insl xchg xor pop scas hlt sbb adc repnz cmp dec out mov iret out rol and lea popf ja push outsb test ds xor fcoms shr jle xor add fcmovu xor aam sub gs (bad) stos jo ss pop jle cmpsb in mov es mov fwait stos ds mov mov inc leave aam xorb arpl (bad) mov cmp addr16 pop stc bound stc mov idivb loop arpl stc xchg mov ds shrl jge and mov cmp push (bad) int int in add mov mov outsl pushf loop mov sub mov jge inc shlb pop push outsl loop jo,pn sub clc int je sub xchg cmp stc pop dec dec dec mov in push xor bound jge outsb dec pop std pop sbb sbb pushf ljmp mov xchg movsl imul mov cltd or pushf cmp (bad) (bad) out (bad) and in out fidiv aas sbb inc inc dec mov push test mov (bad) mov (bad) mov addb subl xor pop mov test in inc sbb fldenv repz pop push insb nop xor movsb or or pop cmc jae dec imul ret mov pop mov inc inc stos sbb pop sbb sbb adc dec mov dec inc dec inc out xor dec pop in push aaa inc outsb inc jne fstpl inc xchg ss pop fs jnp ss pop bound aas mov fdivrs dec sbb dec dec cmp clc sbb mov ss mov (bad) out cmpsl cmp pop adc inc sub xor push inc cmc hlt ds xor jmp div mov lret or insb cmp mov test mov dec adc jnp lret xchg gs mov ds push and rclb mov ret sub stc aas iret push jecxz adc mov sbb sub push mov push and cmp movq add cmp and sti sub inc pop testb push dec addr16 shr (bad) in sti jge sbb sub inc sub mov std push pop cmpsl enter push inc jle mov jmp outsb xor aaa inc jle adc cmpsl dec xor (bad) push jp rorl sahf and jle pop ret jnp dec push jnp xchg inc jno ds pop sbb aas mov or push add clc daa jnp dec ret out imul data16 in cmpsb int3 mov push push imul ret xor mov insl inc (bad) cld insl and aaa jge mov mov arpl add add mull sub stos push fdivrl jns mov outsl mov or cmp pushf dec mov mov js mov insb lods cmp inc and (bad) lods outsl jle stc decl lret mov sti pop inc cltd dec mov mov out jnp (bad) cld pop mov movsl sub jl stc out or mov xor lea je adc imull aad outsb out cmp sbb sbb fdivl mov bound push sahf fildll jne loope cmovl loopne mov pop jae call cmp popa test adc lods sub push insb out cmp negb jnp lret test sub push (bad) fnstenv sub dec test rcll xchg xchg (bad) and scas icebp test les fwait xor adc test push sbb (bad) outsb push ret adc and jmp or mov stc mov into push stos inc sbb dec xor cmp jp sub and push jnp push fldt add mov aad dec inc jnp cmp fcomi pushf xchg fwait inc lcall test aas pop xchg sub dec cmpsl iret jb ljmp push test (bad) dec cmp mov cmp xor cmpsl nop gs or (bad) (bad) jns ds sub pop mov mov (bad) das pop cmp fisubl in mov call cwtl xor cmpsl das sub call push repz lods in insl leave mov add (bad) out inc and mov mov aas jge ja popf lret pop fdivs out pop ss fnsave outsl or mov gs addr16 repz daa push imul mov mov pop shrb ss mov sbb xchg xchg lret jp clc dec vcvttps2dq ret inc cmp fs int3 mov inc inc sahf pop aam jmp aaa inc imulb stc adc in cld in bound call aaa inc jge mov lods dec (bad) add xor das cmpb push jge jbe js sub jp scas movsl dec cmp lock movsb pop mov in into aaa jl je jp mov (bad) outsl mov pop outsl jbe cltd push movsb bound ret and mov xor mov out jbe outsb cmp les inc aaa and cli (bad) bound js xor mov cs or gs ja add jne cmp daa ret add jae sahf add sbb add jge imul sbbb test xchg addr16 or popf cld push cmp (bad) imul repnz pop inc mov vmread pop addr16 cmp addr16 out jge push push or sub mov hlt mov ds cmp push in inc sub mov mov outsl dec lret subl inc cmpsl das pusha adc pop pop cli testb es xor aam jp fidivr (bad) sub push aad dec dec int3 jo and add xchg dec xor jmp push adc jbe gs mov add je jp data16 push sarl daa lret or pop sub lea pop gs das sbb rcrl cmpsb ds mov pop jmp jae push in dec mov jge jp push stos sub jb jb pop xchg repz pop add bound dec les dec adc mov (bad) shlb mov (bad) hlt insl jnp lods psraw iret mov pusha or and lea mov int mov incb mov test repz sarb aam das daa inc gs and rcrb sbb movsb rolb add (bad) stc sbb inc aam (bad) hlt sbb add mov ljmp insl (bad) mov jle cli pop std in inc ret pushf pop sub je pop jle sahf (bad) ljmp mov pop stc sbb lret addr16 jle out jmp (bad) (bad) out add mov pop cmp mov (bad) loop fcompl ret jno sbb std int outsl mov mov jae cmp outsb mov ja mov or out push pop or dec inc pop imul aas stos inc sub scas mov js and rol out lods mov add hlt out jbe gs xor jl je mov cld pop sub cli push mov pop cmp jne cmp and cli ja sbb test das mov mov nopl in sbb in mov into pop (bad) sbb jp int mov cmp das scas inc mov cmc sti inc jle inc insl rcrb cmp cld clc pushf mov pop out rcr int push push iret fisttp mov ret adc popa cld aas add push xchg lods sub jle mov or hlt ja jns jmp sahf inc sahf movsb mov das push repz inc jbe pop adc push dec repz mov cmpsl aas mov push mov (bad) and stos outsb adc mov pushf subb inc repnz stos sub cmp inc hlt test mov cmp sub jne xlat icebp cmc lea pop push jno insl (bad) cmp pop mov (bad) and ja xlat push mov or pop cmpb fdivr bound mov xchg int cmp int3 dec test out sbb add add psubd ds jp adc lods divb call pop and inc xor stos dec int imul mov insl aaa gs sahf jmp fxch out inc mov mov pop test lret jb std in mov inc stos sub jp lods mov je movsb add std pop sub pop test pushf jne sub adc push cmpsb sub jne ja ljmp push cmpb pop int inc adc dec adc jo cmp out aas lea lea test aam dec jae xor mov inc add xor dec pop jns dec push push dec mov das pop repnz aam data16 (bad) jo jne mov sbb in out test add pop sbb cmpsb dec into iret dec xor inc loope das fwait ret shlb mov into leave sar clc jl or jge test leave outsb jle push int3 loope sahf or les sbb mov xchg push rorb ljmp dec pushf and fnstcw cmpsl xor inc push bound add in push out jno xchg movsb cs xchg inc push inc sbb in push shr and pushf dec bound faddl out sbb inc test mov mov pop stos jge stc icebp cmp jae mov (bad) es xor popa lods scas push loope ds jle push stos stos adcb aas jp test xchg (bad) pushf mov std stos pop pop mov cmpsl dec cmpsl scas push ljmp adcl rcrb dec mov mov inc out and xor inc mov add test (bad) cli daa adc mov xchg bound mov stos fild insb and push cwtl in jg dec (bad) (bad) xchg cmp cmpsl inc scas jne sti imul mov imul ss in int aaa pop cli int3 sbb inc dec (bad) lea (bad) sbb in shr das (bad) pop out out int3 cmpsl push es lcall test jb mov int inc sbb push out add mov push mov shlb std es xor inc push pusha xchg test fsts lods sub (bad) mov xchg call adc mov pop and jl adc into aaa push mov inc inc call (bad) jnp mov aaa push adc mov sbb cli jmp cmp jbe inc fidivl and test (bad) cld sub insl dec ss ficomp pop in and (bad) xor sbb fcoml jg jae imul push shrb mov pusha (bad) aaa mov sbb fisub jbe sub dec jmp sahf fwait outsl sub cld scas dec cmp mov jae cld jge mov sub shrl sbb sahf inc scas invlpg dec jae mov pop clc pop or jns addb clc jle add (bad) and mov and push out fiadd mov fistpll inc jl insb les js jne test js sahf inc mov dec mov fcmovnbe add shrl xor cmp xorb in pop cmp xchg push jo inc js pushl jns dec sarl xor mov sub cmp jns ret push je es (bad) pushf jle lea pop mov mov sub xor jns mov xor ss adc mov mov mov mov xchg aas mov imul mov mov push std and fldl and in aad xor and mov faddl lcall cmp lock fdivp andl lcall mov je repnz (bad) inc mov xchg repnz pop push jb (bad) aam shrb stc lahf shr mov push mov (bad) bound enter call and adc pop iret repz pop push mov testb lods dec push mov mov dec mov push sub divb mov iret sub aad pushf jmp ret xor xchg adc pop mov mov add mov mov jnp lods js xor add sub push cmp cmc sbb sub pop jg ret mov mov repnz ds insl inc mov std mull pop sbb pop out movsb cmp jne cmp dec push sub mov xor cmp cltd (bad) aam stc outsb push push jp jmp cltd add xor repnz repnz cmp jge fucomi pop mov pop pop pop mov push fidivrl lods je inc xor or jno mov (bad) mov mov dec fcomps jae decl test mov mov add frndint mov fbstp pop js lds fsubs lea out fcmovbe test into and or push fs repnz test mov test cwtl repnz lods es into popa cmp cmpb cmc dec dec int arpl xchg cmp lcall inc scas jnp iret lods pop fldl test arpl lods inc (bad) stc js dec pop mov pop mov mov data16 jl cmp dec fiadd cli mov jg,pt and fimul cmpsb inc mov int dec pop mov cmp pop imul cmp jae cmp ss addr16 dec sbb pusha pop mov pusha outsb xor and and mov dec mov xchg sub cwtl mov aas in dec out xchg push imulb repz or dec insl test pop cld pop adc add mov xor jmp (bad) sbb rclb push sub and pop inc xor arpl cmc lret outsb test (bad) neg pop fadds mov imul inc in pop push inc cmp (bad) cmp dec jle sahf ror stc out dec je test ss xchg push clc test repz jne cmc mov cmp in xor push enter repnz push mov pop add loopne lods xor daa inc sbb sub inc lods jae mov or jp fadds pop dec xchg jmp inc jo stos test rorb ss or cli inc xor bound daa in imul cld mov sub repz fiadd mov pushf (bad) dec imul cmp test sub scas leave xor int3 adc les (bad) mov and pushf mov mov mov (bad) cmc inc dec cli inc cli xadd inc adc xchg cmp or dec jmp cld sbb (bad) mov testb inc jbe inc sahf into jle add in and and dec lock aas popf ljmp jl jno mov fisttpll andb in push jnp mov adcb aas (bad) jp fisttpll scas or inc cmc add xorl mov loopne jp inc das outsb sbb out push push dec sub cpuid adc bound lea adc scas mov xor inc mov adc jp xlat imul xor mov sub push xlat pop mov mov inc sbb cmpsl aas cld ja cld stos inc cmp in cli into adc xor xor cli inc mov cmp fistpll push (bad) (bad) adc js (bad) jp cmpb inc dec ljmp xlat pop adc data16 sbb imul jl jecxz inc dec (bad) sbb mov repz cld pop cmpsl test test in cmp cli and movsl jl lea std mov xchg das xor clc jae scas (bad) dec bound push lret call add mov pop je insb into bound int fdivrs jge jle test mov divl cld imul and push bound inc adc fs pop jnp (bad) imul hlt loope mov scas inc push push push xchg imul pop xchg iret in mov or fsubrs push fldt mov in repz lcall and dec and daa imul enter lds cmp sub push xlat fdivp jbe mov (bad) jns ret jmp pop fisubr imul mull (bad) pop repnz mov and xchg sarl (bad) xor xlat ja cmpsb sbb jmp test ror xor mov arpl loope sub xor jbe sahf mov sti inc jmp (bad) push in mov sti cmpsl nop es shrl mov fistpll scas xchg or loop xchg mov push jle and xchg inc inc std push jg push pushf rcll repnz xchg mov jge dec (bad) mov (bad) (bad) pop rcll setg sbb scas in fcmovnb ret repnz out imul or in push mov out sbb test stc jo (bad) (bad) xor sub dec out in inc outsl pop mov std mov mov addb mov (bad) out xor out stos inc pop xlat or jmp inc sub loopne out mov lea int dec imul inc stc pop out dec adc cmp xchg js mov bound stos jne xlat adc mov inc sti fsubs popa out fiadd ja xchg xchg jno fs jae lods aaa out xchg and sbb mov mov mov roll fwait cli mov inc insl xor pusha mov jb dec dec and stos inc push (bad) jle rcll and cmp outsl xchg aas jge test cli mov xchg in dec pop outsb dec pop jle aas mov test dec sub jge push stos andl movsl mov xor mov ja outsl decl jae push mov aas bound xchg mov xor mov push inc daa inc fistpll or mov in test add rorl cmpsb jnp int insb mov inc aam add pop mov hlt inc push pusha mov push cmp (bad) jae test mov aad imul or std add jns inc mov outsl out lock dec mov in inc push sub insb sahf rcrl std xchg push add mov mov jmp adc jl mov pop and pop aaa pop dec out sarb pop xor jns pop pop js pop outsl jns fucomi in ja lods push mov jnp mov sbb pop jbe push dec jp jno dec inc (bad) out jle and jl pop dec js pop outsl outsb dec fildl jns pop dec js pop outsl insb dec fucomi push je repnz repnz std out pop xor pop js push cli outsl jge fucomi cmpsb ja lods push mov jnp mov pop scas and push js cli jge (bad) mov sahf movsbl je mov add or mov je lods inc mov inc or in jnp xchg enter (bad) or push daa dec stc sbb neg jnp pop pop mov sbb lahf not push rcll push pop scas pop aaa push cmp es stos out out xor jl dec outsb testb repz aas sbb ja insb pop test (bad) mulb out cmpsl jne mov jnp dec outsb aaa sub jne ja (bad) xor je aas and shrl cmp mov push mov cmp lret out mov in enter add aad pop out jbe mov daa mov subl sub pushf addr16 ja test data16 ficomp push fildll jmp movsl jp (bad) in loope sbb lea lods pop decl mov (bad) in mov xor push out mov popa out shrb sub sub mov mov js mov js and fnstcw sub xorl mov jb (bad) dec sarl inc mov jne pop scas xchg jns push mov and sub inc enter mov push decb cmp push aad cli push lds dec lcall out pop lods push ficompl dec lds jl jae inc push cltd popf (bad) push pop adc lods cmp pop outsb pop jno adc insl pop dec pop and popa add cmp aas cmp sahf and jmp jnp cs sbb pop and jmp aad sub in jmp xor jnp xor push sub pusha cmp sahf leave nop cmp lock jns pop mov fisubr jmp das sub xor dec fstpl divb push into cmp mov xchg in cmp pop lret pop jnp pop outsl negl xor sub pop loopne imulb (bad) outsb pop mov (bad) cmc movsl repnz sbb sub jmp cmp jp rcll inc pop cltd notb imul scas jle jne lahf pop ss pushf mov pop (bad) (bad) ljmp lods sahf aaa insl jl mov jbe mov out and std enter xor stc std pop add outsl pop test stc pop add push test mov ja mov fstl lret test inc data16 fildll sub cmp pop insl ret insl mov and int cmpsb sub mov fwait xlat call or imul fiadd fistpll scas jle mov add (bad) (bad) sbb insb imul inc sbb cmpsl jl jo cmp jae aaa ss push iret sbb insb aas lahf xor jno jns adc push insl pop sbb dec pushf subl aam and pop les hlt add test push and js roll ds pop rolb test jbe (bad) lds cmp fisttp jnp pop jnp iret push push xor int or mov mov leave dec bound popa mov jmp sti outsl stc mov or ljmp jge (bad) cmpsb int3 aaa aas (bad) in (bad) xchg sbb jb xchg jno cwtl cmp add in in sub push xor xchg fistpll lods mov incb mov rcll pop ljmp inc nop or pushf leave sub push cmc pop rclb add adc cli daa mov push cmp loope lds testl pushf (bad) ja in into push in fsts cltd imul mov pop aad cmp in sub and sub (bad) aaa out lret sbb add int3 scas mov (bad) hlt adc jo mov lret in cmp std fdivrl rol jl (bad) inc jge iret sbb (bad) mov lret aaa sahf xor mov test shrl push mov pop dec and adc jp mov mov clc (bad) fstps loope mov dec nop jbe jecxz hlt in ja fs lcall push popa pop cli in ss test mov bound xor jne dec (bad) xor out push push pavgw dec les pop adc mov int cmpsl imul loope fwait xorl mov add jp pop mov fucomp mov mov aaa or bswap mov push mov cmc fsts int mov outsl sbb jle (bad) mov jge jnp push jge ja or ljmp cwtl push sub aad inc leave idivb jns sahf sub push icebp test jbe std daa ja add je or pop lret jns sub loopne mov gs or ror or jne adc mov lock sahf push (bad) mov imul and mov lods in add push mov sti jmp movsl gs lahf jle fbstp ss stc jo mov call jmp inc mov adc stos loop pop fistpll jne arpl jb fidiv test sub mov rcrb lods dec xor sub (bad) lea test cmp add jne push (bad) mov mov mov pop cltd inc inc jae add sbb push loope,pn mov sub inc push mov lret jmp push pop pop gs add stos mov mov and ss sbb (bad) fbld add aaa cmp jmp inc push je or mov aam pop mov roll add aam in std sbb sbb mov jnp xchg inc stos jns stos cmp notb mov sahf int lods pop ret sbb xchg (bad) enter in xchg arpl mov sub aas cmp idivl xchg pop sahf dec add mov dec cmp and stos xor aaa jbe rorl divb sub ja lock dec push outsb dec nop xchg test aam sub sbb inc das cmpsl (bad) jb pop mov in mov test cmp (bad) loop cld mov dec int es std jge mov shl incb insl call ds test pop enter pop std lret mov jno jge sub aam fwait mov or pop aas mov mov xorl std jle pop call adc pop cmp jbe dec mov jnp push xchg mov gs add out inc adc repz (bad) imul dec stos jns in jp je in dec push xchg aaa outsb dec sbb in aas adc xchg jbe dec (bad) fidivrl lds lods cltd cmpb jne ficompl add bnd cli aad inc negl outsl jp pop or mov jge mov out xor dec ret mov mov jns pop dec cltd dec mov out xor dec inc outsb mov faddl ljmp popf outsl and sahf arpl push xchg and add test jb dec pop nop dec adc into scas subl jno jne xor mov inc xor sub data16 (bad) jo pop or add icebp xor mov jb inc outsl xchg data16 in mov xchg outsb lea lret fsubrs mov mov arpl sbb shrl mov dec sbb sti outsl aad jbe inc xchg cld std lret sbb ret loope stos hlt sub je jle es push int3 pop in fnstcw scas pop mov dec push fdivrl pop test inc (bad) fmuls lahf cmp nop test pop popa jbe add sub ror mov fdivrp (bad) cli enter ret loop test int ss and cmp cmp fnstsw int3 nop je out cmpsl add clc lds insb inc int cmp mov test orl inc lods int3 inc mov jno jbe js cmp push xchg outsl or mov jnp fisubr and jbe jo adc lods lods sbb inc shl test inc imul (bad) fildll adc cmp repnz dec aas mov cmp cmp inc sub in jne adc jmp mov xchg outsb into es fisttp jle daa (bad) mov pusha pusha repnz mov adc push int jge sbbl jp mov cli js arpl inc cmp imul jnp cmpsb in ss dec js and jbe (bad) shlb jmp call lods add xor cmp sub aaa ret inc test popa xor or lods mov cld mov xor lea test (bad) or lock inc jno cmpsb mov (bad) jmp inc bound ret xor nop dec xlat arpl xor lods fldcw loop repnz fistpll into pop lea inc add mov mov gs jp test cmp fldl mov in loope rcrl cmp adc cmc aas dec insb mov cmp push cmpsb cmpsl stos mov daa adc xlat cmpsl repz or or out and mov int xchg ret jg fcompl xor push mov cmpsl jbe insl outsl loop (bad) popl jo jl sbb insb xchg jp adc ss lea adc lock ja je lea imul (bad) not xchg push inc dec lods sbb mov (bad) stc mov in xchg sbb and les pop push mov push push adc sub aas xchg (bad) aas or rorb sbb jmp jnp jecxz adc js in ljmp xor aad (bad) lods rcr stos call inc ljmp inc cmp fildll jp mov (bad) mov xchg (bad) ss mov xchg insl mov xor push xor xchg cmp clc mov add mov xor jmp in sbb std inc dec xor mov addr16 loope sbb xor test jp pop mov aam sub out sbb jnp pop jmp inc scas xor es adc mov dec push mov loopne fnsave jns mov xchg (bad) fldl sbb mov repnz repnz fsub stc sub data16 mov repnz adc fwait mov xor or pop lods lea flds int3 xor pusha xor mov pop lea ret pusha inc pop pusha outsl adc std mov mov lcall mov push adc mov lods cli add cmp jnp lock popa stc pushf pop test sbb push in test insl push push fcmovnu inc sub jmp fdivrl push lcall aas mov test enter fdivr xor jne cli mov dec ja or repnz mov pusha aas leave jge,pn outsl (bad) in pop ja lods jno add shrl jge repz push xchg int mov mov loope sahf ss adc inc (bad) sbb inc pop pop xchg fdivrl or inc mov mov inc loop (bad) xchg ret push lods (bad) scas scas mov mov sti or je adc jl outsl xchg cld mov cmp ret pop sub adc mov jp inc cli sahf or inc lds jp cli lret cmp inc movl inc std inc test cmp subl pop jl mov jmp mov mov jno push in jnp push aaa test cltd mov ds add dec test add ss bound add jle jmp sub cmpsl stc cmpsb rcll inc xor cmp mov push (bad) bound adc (bad) in test test sbb fsubrl ret sub les push cld and cmp mov push (bad) pushf inc aaa mov mov mov jge add jno sub arpl out mov cltd stos inc dec inc dec pop xor fldenv sbb mov (bad) cltd (bad) mov test punpckhdq idivl sbb mov jp das jbe add mov mov mov fstps (bad) repz outsb or mov pop stos outsb int3 and lods sbb push mov mov leave jge fsubrp into cmpsl jp pop leave pop push pop xchg sub insl andl (bad) rclb out and enter mov stos imul sub xor and imul mov inc stos push cld mov jb (bad) cli loop arpl mov mov pop mov dec push inc (bad) dec pop and or mov xor cmp cmp fdivp pop pop sbbb xor decb imul js lcall insb insl ja mov dec aad pop std imul icebp andl pop inc ljmp jns mov xor scas mov or icebp imul lods add dec pop ja xor and sbb add dec pop mov and mov dec push inc enter dec xor push cld and loope gs repnz in xchg call push pop or das sbb and loop fs (bad) jle (bad) cmc faddp mov test and jle cmp pop maxps insb jns push sub data16 lret int or inc mov jl and inc mov mov mov inc jl jle (bad) in pop jne out (bad) (bad) imul jae cmpsb fdivrs aaa pop sahf (bad) (bad) jg loop mov inc popf in inc inc (bad) nop jbe xlat fwait imul ss rcrb test ret lds inc jne pop bound outsl insb add int3 cli mov pop pusha jae pop ljmp push call inc lock or mov push push jnp cmp lds mov add int stc mov ret jnp lea sub cltd out adc lea pop jmp cmp rclb inc cmp fdivrl mov cmp pop or lcall fwait loop (bad) aaa xor adc into fldcw jne jl sub pushf js adc loop push xor and jbe cltd lods mov sub add popf mov mov das dec jns mov lret popa stc mov jle jge and (bad) insl mov cmp ret cmp cmpb shr mov sarb sahf xor (bad) or mov ret sbb insl fwait pop push frstor fdiv sbb jmp insb add fsubrl pop mov adc fs or inc push sbb dec adc pushf adc outsl xchg imul clc inc jae pop lahf push inc stos cmp dec and inc mov loop mov push addl sub jg mov or xor int3 pusha mov (bad) enter insb and jl mov mov test adc inc lret call mov xor arpl jnp sbb push xchg jne mov cli adc dec xor gs inc repnz push ja jle inc in cltd in popa and mov std mov mov cmp int or sbb jno aas jne and mov inc dec cmp negb pop inc je fiaddl cld shll loopne sbb stos (bad) jo pusha cs jnp xchg jecxz ss je insl fisub jne mov mov inc outsb push dec int3 data16 xchg or sbb jmp into dec dec push or lret subl xor cltd aaa jno and (bad) insl ljmp int push add sub mov dec dec sar push mov push jne test cmp lods aad cmp jmp add jne jle jne bound mov jle (bad) jnp cli inc rol cmp divb mov mov in jle jmp add jmp jnp test sarb jl cmc jp inc lret aas push mov stc mov aaa repz mov xor cmpb pcmpeqw outsb inc adc pop pushf fdivrs cmp std inc ds adc fidivr lods cmp cli add std and (bad) repz mov iret sti dec (bad) (bad) jbe ds int lock addr16 mov dec dec push cmp ret xchg ljmp and bound push xor push xor push xor mov sub pop fidivr fistl push cmp push cli pushf ss dec pop and addr16 and in jge push lahf sbb mov and add pop outsl jp bnd jge add or inc jmp cmp stos cmp xchg insl add cmp cwtl mov jl pop jp lahf dec dec or in leave adc out mov or faddl push jge cmpsb push shlb js sbb inc popa add mov aaa hlt sahf mov mov sbb or adc jne ss dec mov adc push sbb add divb call fs cld mov call scas cmp sbb cmpsb test (bad) push fist cmp in cmp outsl inc mov fisttp jge jae,pt cmp dec ds inc fisttpll andb (bad) int3 (bad) repnz jl lcall insb pop or stc repz jmp sbb aaa (bad) dec insb into jp jge cmp xor push fdivp flds outsl dec into repnz iret mov jle push pop pop mov lods movsl and outsl mov cmp cmp std push stos into lods push and jns,pt mov sbb cmp sbb rorb inc inc sub imul and push out mov dec dec sahf sub into xor imul pop add sbb pop xor xchg stos jo test mov fstps jno sub cmp xor xor add std out inc mov ret flds mov in mov test pop xchg rdpmc loope inc int3 in fwait in out jmp fstps cli xor jb popa aaa jno push scas aaa ret and (bad) jnp inc xchg push sbb fisttpll push faddp jmp mov inc imul adc pushf jmp inc dec cmpsb jmp mov add lods stos mov push ljmp call cmc lock inc cmp in cs lea lock sti xchg loop mov mov xchg imul jae incb test cmpsl or lods fisubr dec or inc sub outsl pushf mov lods dec jle sub mov jge inc sub (bad) test (bad) out mov push pusha jg lds inc or adc mov jnp outsb jmp xchg imulb inc (bad) jp jbe cs or cli cmp pop cmpsl cmp addr16 cmp arpl xor push (bad) jmp mov mov push cmc push aaa pop jnp inc jnp int sub ret mov iret and int sahf xor cltd fwait mov add lahf inc popf out inc mov dec int3 call (bad) mov pop cld loopne adc or push imul push jnp repnz sbb jl dec sbb jp ss cld xor push mov scas push mov push xor jno sub push outsl mov dec mov cmpl mov mov aaa mov dec test sbb outsb repnz (bad) shl cmp into dec sbb orps push ja pop pushf inc les push and dec jno into dec and jae bound rolb mov out inc cmp inc cmp pop movl stos dec sbb mov lods fs jl lock jecxz and inc js push (bad) repz stos dec cmc mov std sbb cmp jns fist mov or push push jmp inc mov sub int arpl mov fnop faddl inc (bad) (bad) or movsl dec sbb daa xor (bad) and mov xor gs mov loope ret mov jecxz (bad) repz or add add or fldcw daa pop decb inc cwtl or addr16 mov daa cld das and pop jp (bad) lret mov and (bad) mov mov test mov sub or xchg in and (bad) dec mov ja mov push push mov es xor jle mov repz jp push jne rorl xlat movl fcompl cmp sub popa push inc scas jae dec loopne inc xlat jae clc jns cmp dec cwtl jp (bad) pushf bound cwtl test pop cmovno jmp add dec je pushf inc mov aad rolb cmp in and enter dec sahf fcmovnu aas pop loopne and arpl sub inc mov lds test das sbb adc std nop (bad) push pop cli push sbb push movsl mov popf dec pop mov lods bswap scas jbe mov iret dec xor push mov dec sahf mov mov movsl jmp ljmp and lcall adc inc jle ljmp mov insb dec cmp out adc add cmp xchg sub outsl bound sbb ds repnz or push test mov xor aas sbb cmp lahf sub dec mov gs push je cmp aaa (bad) push lock xor ja pop test sub fdiv inc pusha cmc add lret les sub arpl std or mov pusha xchg cs jge pushf stc out jle lret or or cli cli std pop cld cmp cmp lahf sbb mov sti pop pop mov out mov dec cld sub je jge int3 aas cmp (bad) daa lods mov and sahf xor mov mov jnp cmp inc and mov mov add jmp imul fs jge aaa sub inc sarb mov ret sub es ja jnp or das dec cmp and push jle sub lea test jle mov jbe (bad) dec in inc inc inc popa lds inc adc js inc test sub ss sub jp inc pushf jns sbb xor inc imul adc cli or inc jle and and or xor dec iret jp jmp xor push inc imulb stc ss ds jge mov pop clc mov clc push loope cmp notl in (bad) sub adc inc jmp pop stos lea jge mov in dec mov or pop clc sub std rorl push jl sub jle fbld pop sub adc jb sub imul in test xor jl add mov out mov mov cmp pop lods outsb pop jle cld add pusha aad ret hlt push fimul jns add bound xor jne and mov xchg and dec pop lret pop jnp add int insl jb pop (bad) pop cmp or imul adc jno (bad) ljmp test fdivp fcmovb scas outsb fdiv push and ds jmp gs sub push jb or xchg sub sti push ja hlt mov push insb ds in pop or and mov hlt push inc jae testb stos push pop mov jbe sbb test scas inc idivl fstpl inc sub mov loopne jmp dec cld imulb outsb inc divl pop jp das jnp or mov arpl jbe jno pop ss pusha bound or mov int sub pop (bad) into ror inc test pushf das xchg mov mov stc fld hlt cmp call inc mov aad sub mov stos sub and jns ret imul (bad) mov push mov or inc push dec cltd mov jp pop call cmp cli mov js outsl imul fldenv jp jno push cmp pop pop pop pop (bad) stc mov aad sar jbe (bad) cmc pop inc jb (bad) fsubrl sahf test sbb mov jle outsb cmp dec inc inc cmp push pop fcomp test enter jecxz push insl jle std imulb ja (bad) cmp jp jns js,pn inc push popf sbbl shrb aad fisubr inc cmp sbb jmp mov call stos icebp mov subl in ljmp pop push pop and push iret dec xchg enter outsb xchg std mov cmp jns lret adc enter jbe xor imul mov cmpsl jl pop push mov jp mov and mov wrmsr dec or jg loopne,pt dec shlb je clc test dec jle mov push mov stos sbb add outsl dec xor pop int3 scas adc add cmp test aam sub sbb ficom (bad) ljmp sarl pop mov test (bad) in mov jbe lcall pushf dec outsl fsubl mov pop insb out cld gs gs ja imul outsl (bad) cmc add mov stos xchg rorb into (bad) jle icebp movsb dec sbb or je jnp mov ret (bad) cld sbb dec sub std in loop jnp,pt pop mov aas mov xor pop cmp std add bound cmpsl lods sub jmp adc out adc lods mov frndint push cmp cld dec mov jns in je xchg and (bad) in mov bound sub xchg jp pop pop addr16 xchg cmp gs or jnp rolb out jns dec inc mov stc add mov xchg xor inc inc (bad) hlt mov and mov jle test add rorb repnz add mov push imul mov xchg loopne sbb dec push ljmp jp inc jge arpl sbb cmc pop std imul cmp sti ja cs jge (bad) icebp and js out cmp inc inc sub push xor movsb or mov push push iret jnp jne dec jb fnstenv sbb stos ds inc test (bad) enter movb (bad) jnp and jns push fs mov push sbb sbb (bad) xchg inc push jbe mov cmp in ja adc inc fwait dec and je xor pop dec fisttpl jecxz pop inc loope addb lds push xor pop push arpl dec sub and mov bound push ret mov scas notb out jnp (bad) stc dec cmp jno,pt dec pop lret test je mov into loopne mov fs cmc jp jge or cmp mov outsl decb mov jl lods sbb enter mov fsincos aad push pop add aam movhps imul mov pop mov sub push aas mov mov dec push dec jnp in rcrb add xor or and outsl inc bound mov and out in das enter push lret dec pushf jns in lret lods in cmpsl imul dec sbb add fdivrl dec push iret mov jno inc inc stc outsb addl mov leave (bad) sub movsl in (bad) mov lcall lods scas xor sub sarb cli ss cmp imul negb inc pop out cmp dec (bad) pop mov int int out cmova orl jnp and mov xor je cli jle repz mov mov cmc ds mov inc je mov jo mov lods (bad) int3 sbb cs mov jl jle jnp (bad) jle clc cmp jge cwtl push adc xor pop outsb jl xchg mov mov imul mov add insb mov jne mov ja in scas mov scas negb ja test inc test mov cs fwait pop rcrl xchg inc cmpsl mov movsb mov je das add pushf sti jns lods aad imul sub icebp pushf jb mov imul std push cli dec and sub and push ja xor mov enter and rolb jne hlt popf mov push cmpsl les inc testb (bad) testb mov incl dec sub xor testb mov mov std ss ljmp imul pop daa jle ret aaa stc xchg pop inc rorb mov mov clc jae test std mov test rcl xor scas ljmp das imul or sbb test push movb jae mov mov pop mov and sbb mov jl into bound jp push jno push push jns outsl arpl pusha test push jl,pn push jo push xor fwait ss ss outsl inc mov in push data16 cmp cs orb xchg mov mov pop movsb ss sbb add sub test mov sub xor mov sub pop fwait pushl sar mov and pusha adcl mov pcmpgtd jle repz mov push mov mov mov jnp mov or lret in test cmp push stos jns,pt inc jl sbb cltd inc mov incl push cltd inc xor sbb scas fidivl dec add push mov mov xor test (bad) jecxz jle jnp jno adc mov cs jmp xchg mov (bad) cmp pop and aam outsl xor icebp imul sub jg sub (bad) xor int3 js inc jle in mov inc pop cmp cmp subl mov mov ljmp popa into sti and inc xor sbb jns xor icebp lods (bad) xlat aaa clc jle xchg or ljmp ds iret mov xchg (bad) mov pop sbb pop sbb push loopne mov mov das adc cwtl fstpt arpl aas insl out clc cmpl add js mov dec pop or lret fstpt sub dec jns movups movsl mov inc fstpt mov lcall mov inc out or in gs in into jbe inc add sub jbe cli cld orl pop repz pop xor xor inc adc popf xchg add inc mov dec mov push mov cltd inc cmp sarb xor dec add (bad) jmp push dec cmp pop xor ror sub out fwait mov outsb jbe insl mov insb test fadds and cltd cmp dec add or gs jbe or dec dec mov addl lds sti cmpsb mov mov sub jmp mov mov jp mov cmp (bad) loop lock sahf jmp shl mov gs into jnp iret in lcall sti inc mov push inc mov add gs mov sub jle push pop stos or mov cld mov sbb jecxz mov into push mov mov shl stc aaa mov mov int add loope cmp cs push je dec mov sbb in mov lods dec xor js add sub mov push scas hlt dec hlt das push jbe inc or xchg sbb dec jns jp jnp outsb jns (bad) jp sub mov and sub cmpsl outsb mov mov aas std mov mov sub push frstor push into mov dec dec jae mov xchg add pushf stos (bad) add inc jge mov js mov cmpsb imul jbe ja inc imul mov pusha xchg push (bad) fs add movl lds movsl add pop lahf sahf dec pop sbb test jns dec out sti push cmp std and push sbb jnp jle ret ja in ss cmpsl mov ret pop dec sub ficomp xor insb xor jmp inc mov pop inc mov jle jne cmp cli je and pop or dec sbb push sbb xchg repz ret fimull cli loop rcrb pop sahf les ret arpl stos dec adc (bad) jae mov mov inc mov mov cld outsb or jge imulb test cmp ret imul push movsbl fnop cltd xchg decl (bad) rsm pushf dec mov xchg pushf or daa cld addr16 lock sub inc or push cmp inc mov cmp xchg cli inc cld (bad) jno mov xorl dec (bad) scas fwait mov jle mov and ss call jge lds pop dec ja test ret mov out incl cmp lock bound mov mov idivl mov (bad) mov mov sbb sub mov xor arpl jno outsb and mov jl pop shufps mov cmp add push mov jns cmp insb lea cmpsb add popa stos mov mov or lea mov sbb pusha cmp out cwtl (bad) cwtl cmp mov xchg lock ja lret inc push lcall mov insb mov and leave cmp push (bad) mov addb and imul outsl pop inc lret sbb inc inc popa pop test xchg add ret pop stc orl jl xchg cmp leave lods mov (bad) negb test orl call add sub push js xor cmc dec xor lea mov mov seta push lods jmp jmp push insl mov jge inc jle mov (bad) (bad) setle idiv dec fdivr fdivs andb jp xor xchg movsb int3 sub sub xchg test stc push push adc lret das insb xchg stos leave loop in xchg xchg ja loop cwtl ja imul xchg popf xor fcomi pusha fdivl xchg sbb fiadd jns or test or mov lcall pop aad cmp test sti adc jae int mov movsb xchg jle dec mov push mov xchg inc lahf dec jb cmp xchg push scas fwait mov dec pop xlat rol movb movb dec push stc jmp mov lea mov clc pushf test sub call lea ja stc pushf add add pushf add jo stc bt or jmp cmpl insl cltd mov xor sub pop vmovupd jno push cld add aam sub cmpsb pop sub and sub dec fyl2xp1 adc (bad) sbbl daa mov pop dec pushf fwait je jnp pop pusha cmp sub insl mov ret lea sete movl pop lea movzbw lea pushf call adc pop inc rcrb fisttp sub orl adcl fwait aam sbb fisubl stos mov mov enter inc sbb sbb adc mov inc jle aas int dec jl jmp in icebp add roll cmp mull push loop dec pop xchg mov loop push mov mov mov jbe int mov out cmpsb push sub cmp mov lods mov fwait xchg aam push out icebp imul rcll and leave push jle or adc int3 push stos xchg stc cmp and loop lea call pusha lea jae jmp movw call ljmp inc or seta rorl iret push push popa cld cmp pushf pop xor clc (bad) sahf inc xchg ljmp sub out mov daa or lret cli (bad) push popf int jmp insb iret mov (bad) xor int3 jb inc rcll pop push outsl push inc popa rorb push out (bad) insb into adc lods sahf push jg cmp mov mov insl sbbl movl lret jnp xchg je hlt mov rep jnp jmp sti les xor repz mov sub mov neg icebp (bad) ret repnz add pop test xchg aad push or or or or out sub call push push pushf jmp aaa mov das jns inc or sub rorl lods jbe orl cs imul ds ret and inc push dec (bad) xchg out push jmp mov jbe pop dec or inc outsb mov jne popf loop mov mov mov or pushf insl cmc pusha lods adc movsb jae sbb (bad) sub and push gs or add mov loopne (bad) in cld rol cmp mov bound pop imul add xorl adc push pop fwait or dec push push test mov cmpsb sbb into (bad) (bad) jmp jmp push pushf pushl lea jne call pusha pushf pushf movl movw pushf mov movb lea jmp jecxz jge jp inc fwait loope out fsub les cli sub mov aam fnsave aas insl adc das lahf repnz ret mov mov mov mov cli inc and popa enter mov xchg iret pop scas test call sahf ds call ja inc mov lcall push cs push in (bad) cmp mov movsl dec cli int lcall je fs dec jns (bad) mov inc add stos rorb mov mov ja fstpl pop int mov sar jge inc inc cli xchg out (bad) pop inc sbb push add imul movsl dec jl sbb (bad) jne push xor mov ret sub adc mov movsl inc imul out cmpsl sbb mov lods sarl mov insb lods cltd test stos push lret loopne je mov xchg lret outsb (bad) push movsl cli andl insb inc inc test int mov scas stos cli out ficomp lock lcall xchg ret or push push jo and test pop and inc add test fdivr pop fmull clc and (bad) xor arpl or push in jns cltd xor test xchg or std ja or push jmp mov test inc jnp xor inc pop lret jmp mov ss xchg jae pop xchg (bad) daa sub jne lock frstpm(287 test cld and jg sbb ljmp repnz push jge dec js movsl repnz je test cs pop cmpsl js pop pushf push into outsl adc jae dec mov pop sbb pop std dec cld outsb shll sar pushf pop cmpsb or dec mov loop mov add lock cmpsl pushf dec jg xchg and aad jbe clc and bound pop out pop in idivb xor sub aam je gs popa cmpsb add sub adc add add mov jnp pusha add pusha push pushl lea jmp pusha mov pusha mov lea pusha call xchg enter pop inc cmp mov jbe add inc into out and xor push gs mov push insb out push mov (bad) icebp out pop mov dec outsb test xor xchg cmp mov and scas sub sub sub fwait int3 sti clc cmp mov xor roll notb add jns adc push add fldl adc fwait call fidivrl lock push adc gs sti ja mov cmp aad push cld repz (bad) movsl jle pop test inc mov gs push test or repz bound pop mov movsl add jle aad out ficom pop pop pusha (bad) jb lret pop popa push mov push pop jmp xchg push mov mov ret push ret es int pushf pusha mov pusha lea jmp lea ja xor pusha xor (bad) lock sub mov add dec lea add mov mov cmp mov not adc not mov call call jg (bad) decl inc jg in in sub std addr16 jne sti scas cmp js mov int3 jnp jle sbb adc loop add jp cmp add fwait cmp sub jnp icebp in jl push lret xchg dec pop cmp std mov aas neg mov decl mov lahf pusha ds aas pop loope cld mov push pop push scas adc pop push push xor das mov xor std mov and repnz sbb jge out jg (bad) or mov out fsubp stc mov ss mov xor icebp mov xor jg outsb cs lods insl sub sub test cmpsb es gs and mov sahf pop push fstpl ficompl pop sbb (bad) xchg push push aad push jg aam xchg push adc xchg jg adc into mov int lea int3 lret or mov enter jg push lds jg (bad) inc add addl mov inc (bad) sbb mov inc cmp pop adc mov pop mov cli aas das sub jg jp (bad) enter mov ljmp jbe jb add cmpsl cmp enter dec dec xchg fidivr adc inc scas inc mov (bad) fdivl dec decb xor jg ret xchg shlb ds jnp jge jmp lret addl movq xor inc and xchg mov and or add cvttps2pi bound xchg inc jg int3 xor add jecxz test jle cmpsb jg inc daa sbb mov sbb loope sti movsb jmp aam jnp dec pop push inc fwait sarl jg popf mov sub frstor sbb dec jbe ja hlt fwait jmp fdiv (bad) out adc inc cmpsb inc neg cli jg leave rcl in mov rolb js pop std mov dec dec jl movsl popf div ljmp mov jge ljmp test push mov dec data16 mov sub into test xor sub dec arpl je xchg pop iret jae mov adc jb xchg inc mov mov aad and xchg cmp fs fbld jg ss (bad) je out pop comiss and inc scas sub ss mov mov std xor jg mov lock hlt and jg or push imull sub in das adc adc fcomi push sti mov lock push xor aas in repz and dec cmp in sbbb jg add les push mov xchg addr16 punpckhbw and retw test xchg jg ret fsubp jg int3 sbb sarl xchg jmp aad ja stos mov dec mov in mov dec ret aas jno int arpl sbb push (bad) jg dec les js push sub mov sbb ret fmuls aas inc jbe insl push and jg cwtl cld pop xchg arpl sbb clc mov sarb dec imul xchg lcall jg mov mov push outsl xchg daa mov loop sahf xchg das mov fwait test (bad) mov popf ljmp jg push addl lret lods pop jg mov add int3 pop adc inc (bad) frstor fmull out ja hlt lret scas xor incl cli mov jne divl mov nop in sub mov inc std push jg mov aas pop cmp out mov sub jg (bad) mov daa lock push pop cmp mov jg sub les pop fisttpll jg xor test popa mov call stos lock (bad) jg adc jg mov icebp nop aas addb inc loop dec dec jb jno xor mov and lods mov data16 push shrb (bad) xchg lds inc jns dec in mov stos mov inc xchg (bad) jl jg ds xchg in jnp inc adc call cmpsb jp xor xor cmp dec jg pop inc add or js scas or fidivrl add lds outsl dec aas mov sub or dec push sbb jecxz (bad) out (bad) dec xchg mov xchg sbb push mov sub lea mov out (bad) cmp add adc cwtl cvtps2pi push cmpsl inc sbb cmc fiaddl mov (bad) xor adc mov adc fs out jg bound lcall pop jbe mov cld adc iret cmp out mov popf sub dec aas scas cltd lea jae sahf scas ja pop (bad) sbb (bad) lret pop push mov imul dec pop inc fst pop pop rclb std sbb test insl ss pop cli lock lods lahf mov popa jp push stc sbb sarb cmp pop aas jne inc or mov jg int3 add or out mov mov insl inc pop sbb fdivrs nop sub loope not adc das dec dec jg push hlt cmp xor jnp mov pop pop pop rolb (bad) jg ds jg xchg inc mov jg fbld xchg fwait test xor lret mov sbb mov movq fsubrl je inc fwait jg mov lahf xchg sub lock jg adc cmp xor mov jnp inc mov jg or add fidivrl sti ret and lods jbe sahf add push mov inc bound in cmp push inc lock movsl fisttpll ss push inc pop sub jmp (bad) push dec ljmp (bad) sarb xor or lods fstl push and fldenv mul stos fdivrs mov jg mov add add jg shll dec jg daa sub fs cmc adc jns or xchg lock jg or sub mov push out pop in decl sub je cltd fcompl fwait outsl pop fldl aas mov cmpsb mov mov hlt jnp add loop jg imul mov xor mov jg pushf icebp mov inc push cmpsb (bad) mov pop repnz jg sti arpl jg mov adc jg icebp xor mov aaa mov out and mov cmp cs cmp inc jo outsb jnp mov sub (bad) jg or cmc jg call scas mov movsl cmp (bad) jg adc jl int3 (bad) or das fnstsw pop adc loope jne jg ja add in clc mov jo mov sub jg test sbb cld insl xchg jg je adc xchg sub xor sarl push add sub jg xchg adc sti repz lds mov xchg push or push test jg insb mov mov nop pop add sahf dec jg in jmp xchg and imul aaa pop jg sub add cmp out cltd xchg nop jg cmpsl xor mov les (bad) repnz inc inc nop in repz pop (bad) mov xor push cmc mov sbb push mov in adc data16 xlat jg push xor pop out cmc and jg jb and or out leave push pshufw in je std js rol dec mov sub push mov adc jns jg mov call testl aas jg test lods and div pop or xchg mov ret and fwait bnd jg movsb xchg insl negb mov push mov fdivl loop jg or into add add jb inc test push xchg icebp addl in subl mov sub fisttpl mov ret xor jg pop pop ret out jg std jne das sub jg pusha mov xor sbb repnz or adc mov inc mov xor imul inc lret xor loop lret mov cmc xchg cmpsb jg sbb dec int add pop dec mov or jg,pt ret insb rcrl mov jg mov outsl in fnstsw hlt mov push pop fmull dec arpl mov (bad) fisttp push xchg js mov fsubl mov out sub fwait mov dec sub and jl mov inc and mov leave cmp jg dec ja xchg dec jae loopne inc mov jg cmp sbb push out cwtl push and inc dec sar push push xor pop inc cwtl shrl sub mov mov cmpsb or jg lret cmp mov in cld jp add sub adc xor mov addr16 dec aas adc dec movsl push std dec sbbl insl mov sarl add sub addr16 sbb mov or push gs mov mov and ja jg jp inc xchg mov jbe stos dec (bad) cld mov xchg jmp mov or daa mwait jg clc push mov dec jnp jg push jge ja inc jg std lods sub inc test cmpsb repz loopne pop jnp push lds stc adc add inc push aad mov cmp jmp jg inc dec (bad) fnstsw lock pop mov das push repz data16 (bad) mov push jg outsb dec sub pop pop jg mov and scas xor jae insb sbb and sub cmp das or fsubr ret daa inc addr16 jg in mov loopne adc into in jg notb sub and (bad) cli pop xor pop aas sub loopne cltd sub sti mov rorl mov pop xchg test fidivr out sbb iret (bad) jg int xchg jns stos push sub mov hlt jg cmpsl add mov push int3 pop xor fwait sti push xchg pushf dec dec xlat divb jmp cmpsl push dec mov shr mov jg enter jg clc adc leave jnp jg shll in jg icebp jge add pop mov or addr16 movsl jg push mov (bad) xor (bad) dec int mov adc xor jg mov and aaa fsub ret jecxz in imul jg jp,pn sti (bad) (bad) arpl inc loop pop (bad) mov jg lret xor jg fs add or or aas push fwait ret mov subl scas hlt test daa (bad) xchg dec xchg sti lret push mov adc lock jne or loope ds in xchg sub dec (bad) int3 gs jg lods aaa push mov sbb sti das popa or fcomp jmp outsb test hlt xchg dec daa cmc loop pop push ss cs je fs adc dec ret movq movsb popf jnp add popa jg dec inc lret js es jg addr16 xor cli sub push jmp stos (bad) inc cwtl lcall roll pusha sarl mov insb cmp jg jae mov pop mov pop xchg or ljmp dec hlt mov mov std adc jg push mov jno,pn mov mov pop in or jno jg cmc out in sub (bad) jg jle imul stos jp and inc dec mov push pop pop das inc pop fnstsw nop clc jp stos addr16 test add or push sub mov xchg xor and or push jecxz mov std cmp (bad) test mov fsubrs mov call push jg jne cs adc xlat lods nop aaa pop and mov cmp aam std sahf mov (bad) cmp or scas push pop dec push mov nop in loope or sub (bad) cmpsl mov (bad) sbb cwtl jg dec js mov xchg jae xor jecxz sti inc popa (bad) push outsl mov aas lcall inc sarl jg push ficoml jns popf and movsl and stos push (bad) (bad) and pop inc xlat inc mov cmp xchg push loop aam mov mov insl aaa pop imul push imul lea and cmp std stos scas sarl sbb lods clc pop (bad) push push jbe mov inc or mov fisubl xchg aas cmc adc clc xlat lahf sti sahf jb inc mov aad mov mov dec ljmp cmp jl loopne sarb cmpl je sbb add imul movsb icebp push jae sub out mov or push jg push jae pop cmp xchg jg out push andb mov cltd push divl pop jg popf dec push adc pusha ja add dec bound hlt inc pop inc or and insb xlat push jg xchg adc jg pop pop and jle js ret repz pop pop push jmp and fbstp ss jg movsb mov jp jmp push jg arpl cmp cmp lahf loop push roll or flds and ret scas cmp inc xor (bad) je mov jg xchg lods add aas dec xchg pop je arpl or and or aaa (bad) ljmp outsl adc jg jb mov jg aad cmpsl loop push push popa xor inc imul aaa repnz pop push push jg insb inc stos adc inc adc and mov dec push out in aaa mov lock dec add or pop daa call jg inc xchg jno xor jg mov add jg int3 inc cmp sarb push dec sub aaa inc adc pop mov sbb mov pop dec mov orl (bad) sar jge mov mov movsb decb pop pop mov cmpsb sahf ret jns sar and fs div mov pop mov int3 vmovdqu hlt (bad) mov lea lahf pop jmp fwait xchg dec pop add cs add fcos popf loop jae push mov das repnz jbe jo cwtl pop int cmp mov sub inc jg mov sbb sub inc dec jg and mov cmp js pop inc pop lahf bound jge cld sub adc sbb cmp ljmp ror dec pop ss mov das jo outsb dec sbbb push ret cmc dec mov leave popf jns push mov jg jae xor dec call mov push pop (bad) rol cmp xor adc imul loope fimull xchg popf xorl imull add adcl jg ljmp stc cli stos or in add adc aad bound mov ds fldt or pop pop lds mov xchg or cmp adc pushf lahf adc sub bnd mov jg cld xlat jno mov aaa sar xchg ret sahf and sarb mov inc sub std sbb clc imul jg std push imul or or fbld adc mov cli inc das jb mov inc xor mov (bad) jne lea cmpsl xchg mov mov and jg stos arpl jg mov jp xor dec jo pop or push or cld xor xor dec lods sub cmp jg (bad) aaa adcl call and (bad) test add sarl push mov dec loopne int3 in pop inc cltd iret dec and sbb xchg dec xorl mov and jg pusha sti outsl movsb gs orl outsl pop fmulp mov out xchg (bad) mov (bad) dec jg mov enter test xor dec hlt adc arpl jg roll lock jecxz rcrl mov sti jbe outsl hlt nopl cwtl dec inc mov mov jnp enter stc inc jmp jg out rcrl sti jae in push (bad) cwtl mov outsl dec jno or cld inc cmp bound jbe mov leave scas aad not jg faddp jmp pop dec push jg mov xchg push xchg pop mov in daa es push jg in push mov (bad) idivl pop ret adc movsl (bad) sbb aaa xchg incl dec movsb insl jg jns enter (bad) jg jp mull mulb lea (bad) jo inc push lret add mov inc hlt pop pusha adcl in aad inc adc pop cs js pop lods in jg lods mov push clc cmpsb dec mov mov or mov inc lds test mov out cwtl outsl pop inc repz mov les sahf or mov sub insb jg adc xchg mov sti jg std loop jl movsb insb mov rcll clc outsl mov jne rcrl and jae pop rcrl xor jns push js xchg jg and mov and addr16 jl add fwait jg in inc outsl (bad) imul push stc mov outsl jno mov cwtl inc retw adc adc mov outsl clc jne cvtpi2ps mov test fwait xchg dec jg hlt xor insl repz jg mov daa mov sarb sbb pop dec test xor pop mov sub push lods es jg int3 das arpl xor mov imul mov jg out inc cmpsb push in pop and inc aaa mov mov and out mov jg mov dec or xchg mov pop push cs jg push mov adc stc jno dec jg pop or sti jno call inc fimull xchg jg xor imul jg,pn mov fnsave cld mov xchg push mov gs push ret add jg dec push movsb fildll fwait lret pop sub pop mov loop sbb cmc stos jo xchg pop or xor or mov pop loope stos pop or push cmp sbb rdmsr arpl jae adc and jmp repnz fs adc mov out push int3 push dec mov out sti mov adc add ds adc jg ljmp jg mov cmp mov dec pop outsb jg sbb adc jl jge push mov rcr push sbbl lret out rcrb sub (bad) mov sbb fnstsw insl and mov jg (bad) mov int sti mov int3 scas cmp pop lea xlat rorb pop push xchg imul scas mov pop inc enter and jno jg aas loope pop cmp jg and std nop faddl in pop repz jg,pt out imul fsub mov lret sbb jp mov in mov dec jns std sbb mov xor add outsb pop pop subl or lock xchg mov in mov sahf add fwait sub jecxz jb hlt jg adc lcall aas sbb push mov je popa mov cmp in jg adc fcmove mov fnstsw data16 mov addr16 mov ljmp xor pop leave mov xchg pop insl jg mov mov pop imulb inc dec loop jg fisubrl mov ror jg jl mov jnp lock xchg and xor cmp jg je pop xchg xchg sub insl and adc into jg imul mov fidivr mov or pop push (bad) mov aam sti (bad) testl mov std lahf and lahf push jg leave jmp mov rcll or sbb pop mov mov repz iret mov fbld repz test cmpl jg mov inc in cmpsl or jg (bad) jbe pop test fs xor maxps and jg (bad) mov mov in jg out out add lahf aas inc sbb jne dec mov or ss add jg mov push inc jg int mov cmp jo fidivrl (bad) cmc inc jg sbb add pop push clc jnp lret jns fadd dec jp jg es addr16 das inc mov mov add dec push pop jg push sbb mov add xor push adc ret xchg rcll add mov add mov cmp stos xor popf inc imul popf mov sub jle pop fisubr dec sub mov inc or push sti mov push adc in les jb bound lret pop fsubp addr16 lods jg imul je sbb idivb cmp add pop in ret mov aad or insb jl mov pop xchg xchg mov insl adcl sub mov mov lea sbb jg mov (bad) mov push mov lcall stos push pop or jbe dec mov ret pop mov fisubrl sub cmp arpl les adc jmp mov test pop inc mov aaa clc (bad) fnstcw jg and outsl mov aas pop jg push mov (bad) jg xor cmp scas mov cmpsb jge xchg mov mov mov aaa lock jg mov push pop mov or cmp sbb sub adc add iret movsb and pop incb xchg jp push dec dec (bad) add push addr16 cwtl xchg mov xchg add inc les (bad) add data16 and xchg jo lret negl out mov mov (bad) divl cmp out sbb aad push hlt and or aas jge inc or xchg jae sub xchg (bad) ljmp addb mov (bad) cli inc sbb loopne mov jnp dec sti outsb dec jl,pt pushf js pop (bad) jmp cmpsl jg insl movsb test test jg dec push lahf out loope lods mov inc leave ret pop aam (bad) ret fdivr pop jg js inc scas rolb dec js andl xchg call mov lahf mov inc addr16 test push sbb dec iret hlt (bad) xchg mov jg mov or movsl mov rolb push jb cmp inc mov outsl pop cwtl aad call pop cmc stc lods or mov mov xor inc xchg dec dec arpl inc rep push (bad) jg jmp mov call mov (bad) jns jbe pusha adc or popf or jg jge xchg sbb ret pop cmc ret (bad) jg test test loop adc add ljmp mov sbb aas outsl jl push ss scas inc jns mov outsb pop movsb aaa rorb jg jne mov or imul adc pop xorl test mov inc icebp (bad) jg cmpsl shlb in xlat dec shll jl in sub lcall (bad) aad aas (bad) aam dec mov clc mov aad push andl mov xchg pop jg jne ss cmp cli loope nop gs pop sub movb push jg orl sbb fstl push inc pop fidivr sub in out mov scas jg mov sar jg xor leave cmpsb jg repz xchg aas sbb xchg push sbb in jg hlt jge inc add jg test jns add cld jp jg mov add fbstp aas mov fldcw cltd mov jg xor fsubl inc jg stos xchg inc pop int faddp divb pop rcll sub movsb cwtl dec jp fwait jne aas call or inc and loop mov mov leave js (bad) jmp in (bad) out cmp sbb jg ret push adc mov jg je mov mov pop jg add fdivl icebp jg stc lds jg xchg adc xor pop and aam sub repz ss (bad) sbb and push lods jg int3 icebp insl xchg gs jg es jge sub adc rcrl mov scas adcl sub fdivl mov (bad) (bad) adc jg rorb xchg and jle jne adc divb std inc loope push inc pop cmp dec cmp mov cmp cltd push arpl lret dec push lahf jg jmp and jg insl push dec jg mov cmc push jne or jg jecxz mov stos mov push adc dec inc std cli inc inc repz adc cmp mov fild aas xor push hlt loope jle in jne jg jl mov jg outsb decl ret inc and mov insb sbb inc xor xchg jg bnd cmp push lea jmp xor jg mov lcall out push test sbb notl lods mov popa out mov fistpll pushf or add sarb lods pop icebp and jg fcoms mov xor sub add jg sbb or mov pop ljmp jg jne inc sub jno adc xchg fsubrp jg mov push mov pop rcrl ret in jg daa sahf cmpsb pop fimul enter add jb or push in mov in adc mov push aas or cs dec mov inc fsub add pop hlt and pop movsb mov sarl call dec mov cs push dec jne cmp aas stos cmp jae hlt jg sub push fistpll lods rorl xchg movsb stos pop mov fs pushf into xor and dec out iret stc jb mov movsb mov add sub out je jg (bad) ss xor jbe push nop popf lods arpl dec jg xor dec mov sub (bad) aas fadds push jg and iret adc scas cld mov ret xor jecxz test cmpsb sti mov aas inc addr16 xlat iret negb lds jne pop jmp test sarb jecxz mov xor pop jno aas jg lods into pop call fidivrl in push jecxz in jg ss inc daa xchg es add mov lahf or jg arpl ds mov jg lret cltd push dec mov xor outsb xor hlt jg insb out (bad) fs nop adc repnz dec xchg adc stos adcl pop out dec adc mov aas fist jecxz sub hlt cld fwait (bad) mov jg sbb mov imul addl lea flds jmp jg fidivr add pop scas pop sub das je (bad) idivl lods mov cmp inc cmp and fwait cmp dec jp jl adc sub (bad) mov loopne dec cwtl insl jae and mov add inc mov ljmp outsb gs jg xchg lahf mov stos push sbb loopne mov xchg adc imul in jg ss push cltd popa mov jb roll jg shlb fldcw mov pop cmp push mov dec fldl cmp push adc popf pop xor jge cli out call adc xchg jne jg cs stc loop adc jg test jle dec divl pop cwtl cmpsl xor das inc rorb inc pop pop outsl dec jle js test ljmp mov lahf or mov jg push pop cmp cmc gs jg pop xchg orl lret dec scas add jns xchg xlat ds inc ficom fcoml out jg and (bad) cmp cmc aas jne test ret in outsl pop dec fwait push jg fnop rcrb mov add pop mov addb pop push pop dec and mov jg mov xor inc ret adc clc mov push dec je jno mov pandn ss adc xchg jle or aas clc xchg or inc pop jp pop addr16 xchg sbb stos lock movsl ret loopne sarb xchg push cmpsl (bad) mov dec jg mov fs rol aas and rcrb repz fwait jg pop cmpsl aaa hlt pop mov jg xchg in aad bound xchg jg mov mov insl adc lret jg jge dec cmp loopne jg incb inc mov (bad) movsb aas sub sti fimull jns stc ja push in pop (bad) jg ljmp jg (bad) mov push std inc inc fisubrl nop call pop sub loopne xor adc out lahf dec js mov xchg push ljmp mov adc outsb dec (bad) sub jl add std mov ja inc int3 jnp jg xchg call jg ret dec fild sbb pop cmpl inc movsl jg pop movsb push ja pcmpgtb faddp outsb jg lock sub lahf sarb or add imul and or mov push stos mov mov out (bad) (bad) add and popa mov je add jg in loopne or inc jg dec sbb (bad) lea mov push and xchg (bad) cmpsb jg push enter mov aas mov cmc jns jb call std (bad) dec sub fwait mov imul aam les in jno inc pushf jg testb xor mov adc dec mov adc dec dec jg loop mov fwait out vpackuswb mov or jg fnsave xor sbb sub pop push jae enter inc loope mov or ljmp inc cli sbb sarb ret inc lret cwtl test dec lret xchg aaa inc dec pop xor in repz sub daa gs movsl pop pop adc in (bad) ja cmp aam jg mov pop stos jg roll int aas and mov cmpsb inc (bad) inc fstpl ret nop dec sahf mov leave add inc pushf loop xchg jg dec xchg xor inc xor and cmp jg add (bad) aas aas cltd jle leave and push adc cmp add jg pop fstl js dec loopne jg sbb xor add lock test int pop push inc adcb jno mov mov xchg cmp xchg push mov dec aam movsb xchg fnstsw call add (bad) outsb lds adc adc into icebp and bound scas xor jg and hlt push aas mov inc xchg cs xchg pop imul pushf (bad) movsb iret mov int3 pop jb xchg cmc and imul xor out push stc jg outsb jns incl jecxz jg mov pop lods shrb jg fwait lret andl lea jg mov vmovdqa das push xor sbb jg (bad) mov sbb pop (bad) je icebp mov adc pusha mov pop fldcw fwait pop jg sbb imul or int xor cmpsl pop js std cld mov imul sbb jg mov lods int3 jo lret add adc gs (bad) inc mov jg lcall jg add cli jl inc push jo add inc adc xchg lcall imul aad cmp pop les and sub (bad) push lahf lcall dec jecxz mov cmpsl dec mov testb test mov pushf and mov xchg lods (bad) fbstp jae popa ret iret jg push ret add aas dec cmp out bound add sbb test pop ret mov ret insl mov adc xchg cmp adc push dec addr16 mov xchg pop pop pop ljmp mov add cmp rcrl or in shr add inc jns jg dec or jge xchg push jg rolb pop jle inc xchg jg xchg sbb xor mov stos (bad) dec rol sahf and or lods fmulp lcall nop inc aad pop xchg out and jne lret pusha push pop sarl sub pop addr16 sbb jg int3 pop adc daa sbb lock inc enter sub mov inc lods jg pusha cs out adc jg mov fxtract cmp xor in movsb mov jg cmpsl hlt fildll pop jg cmc aaa cmp mov (bad) xor movhps rcl cmpsl dec cmp (bad) je add lds sub pop incb jg sbb sahf and mov mov pushf dec dec cwtl xchg loope mov mov stos jg (bad) imull movsb popf lods jg cmp mov push pop mov push pop (bad) jg jecxz pop fcmovne jo add (bad) sub push rcr mov sub in mov (bad) popa push mov loope dec jg out test xchg cmp sarb inc pop jge mov jno (bad) out test jmp and jg lea inc adc mov mov fcoms mov adc mov sbb popf sbb ret pusha jg lods repz push fs add sub (bad) lret in daa dec cld shlb pop jecxz movsl leave mov lret cwtl hlt cld aas and test cmp push push cmp into outsb je pop pop jg push lret adc cmp sbb jg pop (bad) xchg xor jg pop jo pushf repnz lret jg xlat mov mov mov mov push test push jg push sar jg and add aaa jg fnstenv (bad) sti sub jge push xor or mov jg pop fldenv cmpsb das dec adc mov stos cltd xchg (bad) mov outsl call enter pop repz add ds mov imul test pop sbb int add push jg xor jl jg out rclb sti mov outsl divl (bad) mov pop xchg jle scas jg movsl js mov aas addr16 push ret dec in jg pop cmp xchg outsl in pop jg mov cli jbe (bad) daa jg hlt push jb xchg imul cmpb push adc addr16 fidivr push jnp cld jbe jg out je outsl and mov lret mov and adc sbb flds out inc jg cmp imul add xchg cwtl popa inc ret jg pusha aam sbb jg cmp mov je or adc jo mov cmpsb xchg push call and into out or sbb mov inc jge stos push outsb (bad) lret int3 in gs pop or inc jg dec sub (bad) outsb add outsl adc push jg jnp (bad) adc scas add inc mov pusha dec cltd les divl sarb xor outsl js in jg mov pusha fstpl sbb lcall and pop jg inc daa shll push add sub leave adc dec mov inc fstpt int and std pop movsl mov scas addr16 mov or int rolb movsl mov xor push out jg sub and js rcll (bad) aad jno outsl add inc xor cmp aas or js sbb dec pop je sub jg lds leave lret gs movsl jl mov sbb insl jae cmpl add push repnz inc shrb popf and sub cmp cmp cmp inc mov fwait mov cmp jg stos jl jmp pusha cltd negl rcrb fs cmp jg and bound mov leave imul int3 in mov popf and out lret jb test pop xor xlat mov inc sub and jg cltd xor fsubr lcall xchg jns inc jne fildll jg pusha push fwait jp ss jg jle push jg cs push test cwtl ss out jg xchg and push push mov das adc insb pop jg test js bound (bad) pop and sub fbstp mov imul jle rorl lret dec xchg iret sbb int and adcl icebp push or mov add sub inc mov cmp data16 xchg outsl pushl xchg scas push inc sbb inc mov test cli xchg mov jg mov scas mov sub lock aas jae insb or jg lret or scas mov loop (bad) ja insb arpl cltd call sahf jl add out inc pop ss nop sub and rorb push jg shr sbb lods inc mov fdivs pop jg test pop aas xor add loop mov cmp or jbe jg (bad) in rolb aas fisttp jmp outsl add lret jb inc pushf pop out hlt and in in add jmp jae dec dec add pop sti dec insb and sahf xchg int xchg jl jg cmp loop das cmp and ss sub add cmp xchg mov jg add mov push (bad) rcl add mov push outsb cmp das ret mov jg jo fmul jnp xchg out jecxz fwait dec dec lods push add jg scas cmc jl mov mov pop xchg scas dec mov (bad) cmp lss gs fcomps daa outsb jg adc ss rolb mov mov dec idivb cmp mov mov jle bound call (bad) arpl cli dec lret pop dec dec mov jg pop add sbb sarl jp add ds ficomp (bad) push jbe sbb ljmp xor les ret sbb mov jecxz adc ljmp mov push sub dec sahf out mov icebp mov ljmp js pop (bad) or push mov adc gs (bad) jb or cmp sub stos jg mov subl fwait jg xchg and sahf rcll mov push push xchg cltd mov fmull cmp stos ret fnsave sbb (bad) mov pop (bad) mov jg and in xchg dec xlat fistpll sub xor lcall dec jle out adc mov loopne rep jg pusha dec pop mov cmp adc addr16 dec pop sarb cltd std jo lret test negl or jg add mov mov mull push aaa (bad) hlt xchg xlat iret insl ret fs inc jg fcom jo sarb dec pop stc sub cmpsl jg inc inc clc ds xlat sbb mov insl (bad) mov jg push dec movsb arpl xchg dec les sbb ja lret push mov push inc jg rorb mov pusha jp pop dec xchg xor or push iret aam aas push andl (bad) (bad) and (bad) mov dec add dec jnp jg inc mov cmp adc dec pop int3 add mov adc add cmp xorl pop xchg and (bad) stc xchg jp dec daa cmp mov dec imul ljmp andl jo test cltd pop test cmp mov cmp iret cmp pop mov pop add repz adc pop stos jg add fdivrl fmulp lcall adc or scas sbbb fistl repnz repz ret scas jg decb xor stos insb aaa dec pop ds and sbb add mov leave jg cltd fistp sbb sbb jp inc (bad) fldt sbb aas mov fidiv jnp movb std gs ja pcmpgtd jg add inc mov inc idivb fwait and jg das ds pop jbe push aas (bad) inc scas ret dec mov repz pop rcr (bad) iret push cmp and cwtl imull dec inc stos push sti (bad) roll pop les xchg jg jae mov jg scas sti je inc (bad) in jnp jg movsb test (bad) push in jg int3 (bad) test out push ret cld sarb adcl mov or sub scas and jle lret cmpsl sbb std enter (bad) lds jno jnp push and (bad) or mov xor inc sub mov cld jg dec jecxz xor cltd hlt jg cmpsl jo pop mov inc cmp insb repnz sub call jg inc fsubr jae sbb mov jg andl push and cmp xchg mov mov dec (bad) repnz icebp imul push pop test loop jb (bad) xor inc inc push lcall insl push add mov xor xchg enter mov dec xchg dec int3 mov pop fsubrl mov test mov add sbb jg pop repnz pop dec dec pop not sbb pop ja cltd xor inc jg popa sub push pop or sti xor es call popl aas out mov mov daa in dec adc xor push in aaa inc inc mov inc add lahf stos js cmp cmp fstp xor imul cmpb cli jle dec jg and int3 (bad) xchg pop xor jnp jg inc mov ret sahf fwait mov mov push jg xor (bad) and fnstcw lods gs adc sar inc ja jg fsubrs or scas push dec and les fiaddl imul jmp rolb fidivl jbe sbb sbb xor mov pop pop and dec ds inc fidiv pop jge idivl cmpsb jg stos jno sahf inc out add mov and push cmp jp daa rorb jg pop xor lcall ret neg cmc outsl dec mov xor jg jnp ds inc stos cmpl (bad) cs xchg xchg je mov jg sbb ret jg sbb outsb mov jg cli int3 cmp daa xor les movsb out jg enter mov cmpsb pop fisubl push cli cld je call fldl2t ljmp pop sbb inc mov mov pop mov mov lock cmp test lods xchg (bad) bnd adc ljmp push add sub xor dec dec cli xor jg dec cmc sub mov cmp loopne aas nop out movb movsl jg push (bad) ret sub mov mov fistpll adc lahf loop lds das cmp or mov mov inc fidivr shlb addr16 data16 fcomps xchg cli and decb sahf mov mov push fnstsw inc sti aas sbb inc mov jg les add ret and xchg mov push adc and push ds pop xchg outsb cmp jg dec subl dec lods mov pop sub sti jg mov shr ret jl jg stos sub (bad) lgs push sub mov inc cmp sarl lcall jg push inc mov push in jg push movsb pop xor mov stos mov push jecxz xchg xlat int rclb or adc push fwait into mov pop mov outsl out test jp mov push aam fldt jg xchg jmp into jg (bad) es mov insb or out mov xor jg scas and mov ret iret dec incl outsb outsl stc jne test dec mov imul push leave or pop inc and es add je jg pop das xlat mov test jg inc and add dec pop imul sub dec rcrl jg repz xchg popa insb outsl insb dec cwtl jg adc jg jne shll scas push in fidivrl pop scas cmp lods js jl outsl out pushf xchg mov xchg jno and jne xlat leave push dec loopne call mov mov adc add pop or xlat jg pop adc jg xchg xor inc jg add xor sub jg aam mov in mov pushf mov inc jp cmp notb push arpl ds in jg adc sbb pop add pop repz aad cmpsb ret mov gs das sarl sub xchg lcall xor xchg scas mov idiv add inc scas push jg dec push and jmp jno cs test loop pop cmp (bad) dec push icebp adc mov popf adc test sbb fwait lods xor lret sarl jg movsb mov lods fist adc aaa movsl js aas push negl dec and std mov outsl js jl dec jae je (bad) imul jb sbb stc iret jg or out mov cmp sbb aaa out mov pop imul sub push ds mov add jg movsb rorb jg ja lcall pop xchg dec xchg cmp icebp mov dec jg xor jb insb mov mov sbb ss dec scas outsl sbb jbe fs dec push pop and inc jg icebp push fcmovnbe test dec jb insl call sbb arpl jg in xor les addr16 scas or fstp test insl out sub repnz inc adc mov mov mov xchg add push fcompl enter jg ret dec adc inc push push push ficoml (bad) stc push cmc mov dec aam push int jbe les pop idivb dec test int pop jg in jno sub rcrb cltd push and arpl push loopne ss mov mov repnz xor mov (bad) mov cmp cli pop xchg jge mul mov pushf jbe outsb mov cmpsl push fucomip adc pop out sbb jg and scas push mov aas lds push sbb sti and push jg (bad) pop insl add bnd scas jecxz aaa or mov push pop push iret cmp sub fimull sub add fdivrs out jg popa mov int3 mov outsl mov and aas or xor inc sub cmpsl or stos jg add jae int (bad) jg sbb add icebp (bad) xor aad xchg in pop jg int3 (bad) sub inc jmp (bad) mov sbb ja mov fstpt mov and popa mov mov mov pop push pcmpeqd push ret and lcall jg xchg sub or aas pop (bad) in lods lods mov jne ret in test mov cmp cmova jo adc loopne clc lea cmp xchg out fs mov faddl jae xor dec cmpl fsubs fisttpll cmp cmp mov jle push pop cmp push jg jno arpl mov in aas jecxz (bad) pusha lret mov jg sbb sbb inc cmpsb jg movsb xlat fcoml lahf ljmp or inc pop int3 je mov loop jbe jg xchg leave out cmp (bad) fstpt nop stc and jg push push jp out fist cli cmp out das outsl cmpb lea add cmp dec or jecxz imul and inc mov push std mov push mov dec out inc cmp mov lcall popf sahf je jge (bad) mov pushw jg push fsubp stos dec bound aas sub mov jp dec lods testb ljmp (bad) fdivrp or xchg jns inc push sbb std xchg mov ja leave jg aas ret ljmp insb lcall adc cmpl cmp jg rolb rclb jg sub jecxz push addr16 mov out pop dec fs jg movsl push (bad) arpl jnp jg add nop cmpsl stos inc jge or pop pop jg mov fildll jns push sbb pushf mov jg (bad) inc ja xchg jg and pop imul mov pop jnp rcrb test pusha jg jg mov and dec jecxz fstps mov int fdivrs jne movsl dec pop repz sbb test push mov test dec xchg int3 mov push inc scas mov or frstor xchg test jo out push xor cli (bad) (bad) insb jg or std lret sub or movsl lcall jns je or sub data16 lahf sbb or jp mov mov dec cmp add xlat pop sti xchg mov push xchg mov jg pushf (bad) inc jg,pn loope lock fmul jbe xchg (bad) ret test mov scas ret loope inc xchg in add cltd mov jg cmpsb fimul js xchg fdivl int in mov cmove add aas aas (bad) repnz push leave inc aaa and cmpsb lods ja mov push mov in jg push xchg in out jo fdivrl lods xor or push jg mov rcrl jecxz clc addr16 addr16 mov sbb add xchg fsubs (bad) sub out rclb out scas jg inc jecxz cmpsb movsb sub fcoml std lcall jb or jg stc aas loope repz mov enter fidivrl (bad) fwait imul sub fidiv popa mov push (bad) mov push dec test sbb rorl pop xchg fs cmpsb jg jb out jno out jmp xchg lcall and push cli stc je inc pop jg (bad) pop push movb inc cmp (bad) sahf test fnstsw js xorl fistl xchg pop fist movsl jg push xor sbb int3 fnstcw dec mov jge inc pop adc inc dec jg lea (bad) leave sub cmp push jno adc das add fiaddl mov aam imulb test sub les dec mov jg mov mov adc std sbb xor sahf adc popf lods push ljmp jg mov (bad) repz cmp dec xor or idivb mov sbb pop push jns (bad) lea fyl2xp1 xor mov push jle dec pop inc out mov and mov das imul xor jl int pop mov jg mov sbb mov adc iret dec aaa xchg mov pop adc dec and int add icebp jb add jecxz (bad) pop insb push and cs dec and inc cmp jg ss mov pop lcall jg sbb push pushf push mov fidiv jmp mov jns movsb add sti andl jnp adc xchg lods or cmp stos cld (bad) outsl xor jg aam inc sbb es mov mov inc mov popa dec xor stos pop nop repnz dec rcl fwait addr16 les (bad) push jmp in sub aas daa cmp sub dec mov out sti xor jg mov pop enter jg int dec jae mov jg dec in inc push jg (bad) dec out push repz adc outsl inc bound xor cli popf dec inc adc add jbe inc lds mov and xchg xor lahf sbb pop int dec jae cld jno adc jae xor mov pop mov push push xchg and jg das gs dec ja fs or cli xchg divb jno ljmp (bad) mov imul clc xor arpl mov fstps enter pushf jmp icebp xchg mov loop scas pop pop jecxz jl inc jg cld int movsl adc (bad) test fisttpl out cmp aas imul gs jg fild rorb pop lock inc (bad) mov jg jle or adc jg mov pop mov or and fadds sub jg mov lahf aas jmp mov inc repz arpl ds mov adc stos mov mov sbb mov mov out aaa push stc push test dec bound xchg ss sbb insb xchg aaa jg jns xchg cmc out into mov arpl inc divl adc mov jg stos imul or push xor pop aas ss es or outsl mov add or mov outsl (bad) jnp stos jp jg xchg sahf sbb scas pusha xor pop jg xor inc inc sahf push jg xchg fucom shlb aas mov cmpsl jge cli movb jg clc loopne rcll sti loope sbb fsubrl mov jg nop and ja lods and xor push scas xchg sahf loopne int3 fs jg dec inc and (bad) loopne test xchg adc aas dec add arpl xchg ror inc sbb jg (bad) mov into mov add lcall push cld cmpsl inc pushf arpl mov add push xor stc mov jbe fildll push adc xchg rolb nop inc dec pop jns mov jl test xor mov outsl mov mov je dec (bad) pop jne sub in dec sahf daa aad jg add lcall cltd lret pop out dec inc cmp jbe push bound loop jg sbb or std push (bad) mov push (bad) jg adc jmp fstl sbbb push and jg mov mov mov lret sbb pop or adc and inc pop mov (bad) pop jno fmull jg lcall adc mov pop lea pop loop cmp dec adc inc test mov (bad) and icebp out mov gs (bad) stc pusha push mov cwtl sub in or stc dec inc inc xchg push xchg jg lret fwait push out sti jp imul fdiv mov and fistp jg fidiv lahf lcall xor gs jg aas inc stc xor cltd inc outsl popl cwtl and aas dec out pop mov jp jle pop sbb pop mov push pusha into jg test imul (bad) fistpll mov lock jg mov mov push hlt xor pop imul jg out mov int3 xor or das enter stos jg imul add sub inc sti lods aaa fxch inc iret pop rcrl sbb adc sbb xchg jge mov cmp dec jg bound lret popf cmp fnclex dec sub pop sbb xor out and push test jo pop (bad) imul out push cbtw sbb sub jg outsl ret ret lret rcll ss sti das xor and xchg aas das fmuls xchg add lahf out rclb mov xchg lcall jo std ljmp pop fwait aas inc (bad) repnz adc sahf sbbl or addr16 lahf or int3 jg adc mov sbb mov cli add add cmp add dec fwait in data16 cmpb inc cwtl movsl fs jg clc dec into pop daa add sti ss or ja lds cmp jg sub pop push jg sbb xchg adc xchg jae addr16 test (bad) lea cwtl cmc fwait out jg sub add mov mov das test dec lods add or and mov ffreep lahf neg (bad) xchg xchg (bad) dec stos out sbb jbe and xor dec scas mov icebp mov fs jle lock pop inc cmp movsb adc pop or popf out jle aas jae cli adc mov jg jb pop out adc jg dec jns push mov cmp movups ret dec xor out or insl mov pop popf ror js inc pushf fistl (bad) jecxz or push (bad) jg jle lret insl sbb adc arpl cmc (bad) mov call mov pushw inc cmp jg dec pusha divl mov cmp push inc pop xchg fcompl bound arpl mov ljmp lods dec adcb or sub pop jg xor les ds and jg bnd fsubrl and adc mov push cmc aas push adc adc fstpt push shrb mov iret (bad) jg popa pop dec mov dec lret jg add into fldenv push pop jg xor (bad) jg mov popf jo dec cmp cmp and jl xlat or jg sub iret jle sbb insb and mov cmp inc sarl mov in sti bsf mov cmpl roll mov mov stc sbb shrb insb ret dec aas test in inc inc xor and jne mov inc and xchg pusha adc push int3 pusha jg (bad) cmp xor mov xchg xchg popf add daa mov in or je jg mov adc cmp inc mov popa mov mov fbstp sti negb es push into jg and mov jg enter das and add ja ret stos jp jmp repnz int3 scas jg in lea icebp jg repnz ljmp dec push addr16 es dec out jg jno ds xor mov xchg pusha pushf in lds jne mov fdivrs jle cmpl jg inc dec mov jg les lcall jns pop fs pop and fsts repz ljmp lds out mov pop inc push push insl or out (bad) ret jg push cmc jge or xor mov fnstcw test out aas push mov mov nop std les pop add jg push xchg or scas bound movsl mov or sahf insl pop jg aad aas loope pop and inc cmp (bad) je (bad) lods mov (bad) cwtl jg dec inc dec mov sbb insb movq or sbb cmp cmc add jno jg subb inc fs jg jnp jne cmp lahf jg shrl pop mov pop cmpsl test aas pop les mov mov jg adc or mov stos test and inc adc fmul hlt jno daa push jg sbb insl lds mov pop xlat scas xchg mov or stos test mov push adc xor iret inc lods adc cmp (bad) mov pop xor ret add xor dec insl nop mov add lods jg jb ds cmpl sub test jg push lds jg movsb and mov cmpsl mov pop jb aam inc (bad) mov out sbb in (bad) jg out scas jno and out nop jg or or dec loopne jp push pop jg push cmpsb add divb push (bad) sbb jg sbb (bad) mov fildl xchg test dec mov jne jno into jns push mov (bad) scas pop fldcw je gs (bad) ljmp movsb ret pop mov jg dec sub hlt xchg inc imul ja out sbb dec fs xchg sarl and jg out mov out xchg adc iret inc mov mov sub add inc jg sbb push ss fwait mov mov push jg inc xchg stos out scas push lcall push mov xor hlt pop lea cmp push dec std xor push popf ljmp mov mov pop jg fstpt push lods jae stc cmp add ret mov mov push hlt shrl lds xchg mov insl adc xor testb jg or rorb push (bad) lock mov inc jg dec pop inc es dec push insb lret cs inc pop cmpsl hlt cmp mov inc mov out or fld (bad) bound fcomp mov jg pop adcb xchg sarl and cmp std fsubrs and test jecxz sub dec dec mov jg cltd jnp in adc mov or sub jecxz adc cmpsl xor and push mov inc js xor pop call sub push sbb je lock inc jae push daa pop push pop xchg and jno (bad) cmc mov pusha jg bound loop out lods out jb jg les jg push inc into int fidivr inc sub add xor frstor xchg push mov pop mov xchg out jg sbb ret inc scas enter mov dec sub push in xchg movsl jg gs push xor popf push jg pop lcall (bad) fnstenv dec xor pop sub in aad rcrb xchg jae xor mov es jge aam sub cs ret inc (bad) je add sub xchg fiadd addl jg jecxz mov mov jbe fmuls mov inc inc scas pop lods aas jmp faddl int3 inc jg lea jns addr16 push pop mov mov cltd jg in pop stc or jg xlat daa mov jg pop stos jle sub outsl and jge push push cmpsl fcom mov pop mov pop jg call xchg js enter sbb dec gs pop push mov sub adc int jg call ja jg cmp or ljmp adc out pop jg (bad) fadds jg test pushf adc dec test (bad) mov movsb jbe pop outsb lahf dec lcall mov and xchg sti test mov mull mov xchg addl jmp cli adc sbb push jno cld jg insl out test cmp xchg jg jns into arpl or jg mov mov shlb inc enter fidivl jg mov or sahf push push jg jle rcl lahf lods mov das adc jg xor push es jns adc dec imul jecxz jnp clc mov addr16 push fdivrs je aam imul (bad) out mov movsb lcall and aas jb xchg scas fistp das pop push (bad) (bad) std jg sub rorb adc mov es aaa pop (bad) addr16 adc aas add xor sbb fincstp imul shlb loope mov pop xchg jns inc ja add (bad) jg test xchg out or lret pop jg lods arpl xor mov out fldenv xchg out push and sbb dec xor scas jg dec orl cld jo aas pushf add jg popf sbb adc pop and shlb xchg rcll xchg lahf repz or mov add cmp jo sub dec int nop data16 in jg adc out inc and xor or dec subb nop jg lock adc mov sbb jae repz mov adc inc popl dec pop test mov push int mov mov mov xchg lret add xor inc or insb pop roll dec add xchg rcr std adc in mov mov fdivrl ja inc fistp mov and mov mov clc addl mov mov adc mov push cmpsl and push push sti or arpl fbld (bad) ud1 inc push js xor aaa scas jmp sti and in inc dec jg rol in (bad) inc cmpb pop mov push xchg jb iret xor subl loopne fnsave fwait inc gs fiadd sbb loopne jg in xor fsubr out jmp jg sti cltd sub add jg testl or push jo pop jmp jno cmp gs lock dec cmp repz aad mov cmpsb int3 fwait push pop xor mov ja clc lret mov loope cwtl jl jg ret cmpsb fninit xchg (bad) inc pop cmp lods cmp dec in jl cmp jg popa sahf (bad) mov arpl jmp ljmp lds stc xorb jg pop fldcw sbb adc fisttp jl lret jg enter out fidivr xor push inc repz inc push xor test adc sub lock pop jp pop shrb lcall mov imul inc and arpl jg pop and bound call push sub adc jae lahf adc repnz push or fwait out mov jg cmpsl loop add adc inc and je dec lds xchg int3 enter cs mov pushf jg mov sahf mov dec mov and icebp outsl sbb es aas adc add fbld dec outsb lret jg adc xchg jg mov adc mov loopne dec add lret jg mov sti movb imull xor out or push les jg mov dec pop pop mov jl inc mov jp cmp dec fimull sbb add push pushf ljmp pop in test outsl dec lret idivl push jge mov cmp sub jg loope dec ds inc jg jbe mov jg push push test jg mov sub sahf vcvtsd2si or adc jg (bad) in jle mov dec sub jg sahf xor cld (bad) loopne mov iret jg jbe lock addr16 popf out xchg mov ret cmc or add imul inc repz or adc and add (bad) push movsb or mov pop mov push lcall jg xchg sub sub (bad) rcrl outsb jle notl nop jo jne jg add imul cmpb lcall xchg mov sbb jg andnps notl cmp xor pop pop loopne sbb popf idiv jg stos outsb iret and xor xchg mov and test and inc mov sbb jbe jg mov or lds xchg fistpl dec jg testb sub aam push shlb cmp out lds mov pop inc jl ds push fnstcw mov stos shr jg in and inc aas outsb sbb sub mov rorl (bad) jg nop adc mov (bad) jg jp btc aad and jg test jno push dec fst sbb bound pusha dec mov pop mov ror mov sbb push jg jne pop cmc and sar aam push cmp jg cltd std enter sbb sahf xchg js mov int dec mov mov inc ret add mov jg and cmp lahf ja lret jg lock jg arpl push pusha mov test scas sbb mov mov push (bad) lcall push jg fwait add jg and dec repz aas mov addr16 jg data16 movsl ret jg xor mov dec cli in add mov movsl jg (bad) jl push lahf jp aas cltd enter in dec sub js sbb jg sahf lods roll dec cmpl dec (bad) addr16 pop jg stos push rcrl insb jg fucomip cltd data16 ret cli push arpl jno int mov mov inc mov jne sub in xor (bad) fisub or addr16 mov fstps dec (bad) (bad) ss jg sbb adc sahf inc aam js (bad) sub jge mov cltd loop mov enter or sbb xchg and adc mov int pop imul jge imul jg pop shrl jg xchg xchg jg xor ja leave mov push imul inc lret cmpsl adc or loope aam lds jg mov fistl mov je mov enter sbb shlb sbb mov push cmp mov fs fsubr subb cwtl mov mov pop inc fld out mov cld popf insb scas push xchg jg pop push cmp mov aad outsl mov adc fidivrl lods xchg (bad) (bad) int jg pop inc pop sbb push xchg jg out aaa sbb mov adc mov xchg dec fs test divl cmp adc pop lcall mov inc pop dec repz sbb jg mov test jo imul and fidivrl mov mov jae out push dec imulb mov mov jg push or fdivs lret int aas int3 inc jg xor icebp cmp sub or cmp arpl push fwait xor xor push cmpsb cld ret (bad) je les pop xchg push or in cmp xchg xor shrl outsl nop (bad) mov mov jg inc in andb jg sub mov sbb out mov iret dec jp and xchg in cmp in dec xor dec jg psrlw jg cmp jae xchg out cmc (bad) inc xchg idivb pop aaa sub push das mov xor inc in fisubrl pop imul xchg inc mov mov push push pop push mov popf pop pop jmp leave jg test fistpll xor adc push or push and addr16 and and sahf cmp inc divl popa add enter jg call leave out jg fstl mov out sub fsubrl lods add stc xlat loopne cli mov jg push in sub pop aaa jg div js shrl jg dec repz pop jae jecxz jg mov pop jg xchg adc inc xor lret add aaa notb inc pop jne sub stos clc sbb jg cltd adcb adc jg mov mov repz call repnz jg aas jl cmc pop xor mov pop decb mov aas ss adc scas ja cmp outsl jno loope popa cmpsb mov push adc pop stos and xchg jg xchg xchg sbb mov test int3 popf jl jge xor jg or pop ficompl shrb xchg jg cmpsl fldcw mov mov sahf test icebp test outsb xchg xchg sub sub leave (bad) xchg sahf ret les mov shrb insb pop mov mov enter lret inc sub or int arpl sahf jecxz xchg xchg leave add sarb popf sbb mov mov xchg inc pop or mov jg (bad) and popa cs dec clc mov dec ror sti adc sbb dec in aaa push out jg les fist (bad) mov ljmp (bad) imul aaa cmp aad mov jp mov sub sahf outsl psubw jg dec mov sarb cmp adc aas out push mov xlat sbb push (bad) add test inc and addr16 (bad) mov push je inc xor or sbb cld enter adc jg pop push inc jne push push add shl jecxz sbb inc sub mov (bad) into dec jl mov push cmp jg test lea loopne jg (bad) icebp cltd jb gs sub mov cmp jg popf push add daa jg ja jno cmpsb lcall sbb js leave jecxz fwait inc push mov ret cmpsl jo mov mov push int je jl sub push and pusha push push je sbb xchg mov push aas outsb dec ja inc push loopne sbb cmc cmp push aas test pop mov out mov imul inc pop adc pop and add add jg push cmc sahf cmp call jg iret jo es mov std (bad) pusha cld loop adc dec imul je mov fwait addl cmp jb scas jnp cmp jns,pn pop inc pop push inc cmp and jle jne js xchg nop lods xchg vmovdqu int cmp imul inc pop mov and inc xchg aas add into ret nop mov call jg in jp scas mov (bad) xor mov in dec negl ds mov inc or dec xchg ds jg jmp clc add lcall adcl hlt das jg popf cmpsl xchg mov fnop jg aam insb dec (bad) cmpb jg jmp popf jg repz shrl jg lret out mov jecxz pop jg (bad) jp pop hlt fdivrs daa ljmp aaa popf push inc and dec push ret jg lcall adc sub sbb ja in xchg ds mov and xchg (bad) and jg lds adc movsb add or push sbb arpl (bad) push cmp jo out loope,pt adc or mov jg stos add jg or push int3 aaa fidivrl jnp jo xchg xor jg popa aas add lahf lds out mov sbbl scas cmp stos mov (bad) fistl mov sbb dec lret out jne loop mov lds mov dec pop mov fldenv in repz add xchg test xor (bad) arpl mov adc jno rclb sbb mov repz (bad) dec push adc cwtl icebp pop aas push add pusha in int3 mov in or cmp fmull (bad) movsb outsl jbe mov and cmp cltd sbb mov sbb or je (bad) pop (bad) jg xchg sub (bad) sbb xchg bound call mov adc mov je jg dec pop mov insb push rol dec fsubs and aaa movsl cmc scas sti lods sub subl jle sub push jmp rcll jg pop stos out dec sub outsl test adc nop pop aaa (bad) fsubrs mov or in test lock mov jg lret int push pop add cmp xchg pop or lods mov adc push lahf dec jg cmc shll scas sub testl cmp mov das movsb mov out test fstl bound or dec movsl xor fs (bad) add test ja mov jg bound inc sub stc jg scas in rorl outsl jg xor pop ficoml sub fwait and jbe idivl sbb sbb or jp inc push sbb pop push and push mov (bad) xor push std or push jg mov leave xchg stos mov and xlat jg loope outsl fsub int3 sti add add jg cld call sbb dec pushf xlat add mov in push jl push sbb pop and cmp jg icebp lods fldenv insl loope cmpsb dec cmp pop sub sub pop loop jg jno push ljmp push imul or jo and mov pop cld cmpsb ret aad push jg mov cmp xor xchg dec ret pop aas (bad) out rclb xorl push push mov fwait add ret arpl push inc cmp (bad) inc cmc pop movsl mov cmpsl jp pop push out loopne jg stos test aam pop jg xchg and push push and cmp jg fcmove ja jg roll jns stc cld ljmp mov and adc loopne jno pop jg or imulb push aas inc mov xchg sti lahf and push jg xchg (bad) add in scas sti call cmp pop xchg mov stc shll push jecxz lahf inc test fsubs fidivl add xchg mov out pop aam dec loopne fnstsw call jae mov jo push dec scas aas stos pop jg mov pop inc ret xchg inc jg fsubrl frstor stc add test push subl push (bad) in call adc jg sahf clc xor xor mov lea paddd mov or das mov (bad) jmp mov jo stos pop jnp dec (bad) jg loope test aam dec dec bsf bound lret outsb dec loop jg cmpb xor pop jne sbb ret scas sarl inc out push sub or stos pop adc push test sarl jg lret mov (bad) mov push push mov ret and ja add cmpsl ljmp mov mov out cmp in ja shll mov xlat lcall int3 lock insb inc cmp xchg ja mov sub cmp stos cmp jp adcb sub adc mov sbb ret mulb mov lods sarl pop call jg insb ljmp inc sarl pop jl jmpw dec jg add adc pusha and lea jnp mov jmp (bad) mov es sarb inc ljmp adc inc pusha mov scas sar out push xor clc mov (bad) inc add rcr jg stos gs cmpsb mov out sbb jg jae lods dec nop (bad) sbb add stos jo cltd sarl inc mov sbb dec out dec jg xchg iret out cmovbe jg lds or add jle aaa out push cli inc divb iret pop mov into outsb adc and scas pop lahf cmpb sub mov test ret push in shll and mov or fistp sbb cmp add mov pop jg cli jnp aam fdivrs adc push cltd ret jg mov or lahf xlat mov pop sub xchg mov call jg aas sub inc and jg adc push sbb pop push jg and mov aam or mov jns mov (bad) js mov dec dec popa imul insl iret leave jmp mov push sti mov loop daa inc mov lret mov rcl cmp loopne jg mov imul dec sbb scas addr16 stos jg cmpsb jge fs fidivrl cmp into dec fsubrp repnz inc (bad) jg xchg or lock xor xchg jg jle mov jg popf movsl mov (bad) xchg xor mov ljmp pop push mov xchg into xor int3 cmp lcall cld bnd call out or ret xchg je pop pop out in inc cmp sbb sarb mov leave xchg lahf fistp int sbb push mov pop jecxz fidivr mov fiaddl nop pop cmp mov dec mov int jg rolb mov aas les pop add addb cltd jg mov out dec cmp xchg outsl mov jns sbb mov dec or addl fidivr and out ss pop out sub fwait jg cmp lret adc jg das or sub (bad) or dec call sub das pop stos adc xchg xor xor jg loop pop add or jg sbb fbld add jg movsb stos scas pushf jl fidivr sti cmp lods mov js cltd push cli dec aam inc sub pop or xchg lret popf ret push push or pop and addr16 pop xor aad jmp mov les mov int3 inc jg sar cmp in bound cmp in es popa and push add ficompl inc mov push add and popf adc cmp inc aas call push jg andl jg (bad) adc sub and push imul mov addr16 mov fwait cmp insl mov inc in jne push out test xchg lahf dec mov add jl mov xlat mov fimul addr16 sbb pusha mov arpl xchg insl xchg cmp mov or cmpsl incb mov dec pop jg jno pop stc mov in push pop xchg jb or (bad) mov sbb fidiv jg cmp sub loop pop inc loopne inc shrl dec repz test xchg data16 adc push jg fcoml popa jg push sbb mov aad jg or test inc dec jg cli mov dec jg shlb push jg repz xchg dec lret jg pop add jg or fstps arpl jg ss inc or sbb dec jmp enter adc xor xor sub inc xchg ds sbb cmc inc pusha mov mov mov push push or xchg jo jae icebp cld stos pop daa or jg scas sbb or jg in pushf adc or mov push inc lcall jg cltd lds jg fwait dec call sti sub test (bad) pop js lds mov adc push mov adc sti cmpsb mov xchg pop adc push insl arpl or insb xchg mov (bad) push adc push inc cs fidivrl out cmpsl jg stc setne mov sarl jb sbb in inc push dec jg sbb and mov (bad) lcall int3 out or loop js fiadd jg mov decl jnp jg adc int pop mov mov sub add sub inc into test push sbb repz clc stos sarb bound fcmovnb mov fidiv test imul das push push or out inc sbbl aas (bad) sbb or pop ficom clc inc cmc test (bad) sti je data16 push or jg push jae sbb lods jne jnp xor aas pop adc jae stos mov add dec insb ss xchg xchg mov add add mov jo popf mov inc mov mov lock sbb or jge push xor jg arpl mov shrl xchg mov call or iret and insb inc pop xlat test cmp sub inc daa jg jmp movsl sub sbb add clc mov lahf sti es sub mov jno call pop cli dec (bad) jbe jle addr16 mov inc rclb js push sti ss add jg scas xor jg lods js arpl cmpsb jg cld cmp add (bad) clc inc mov sbb xor push cli loope fcoml ljmp mov add xchg int3 pop xorl add imul inc setg mov mov sub xor jo fs cmpsb and js dec mov aaa pushf dec mov ja call ud1 enter jle jg lret scas adc push fidivrl mov xchg jge ds outsb shr fistpl or mov push push imul (bad) stos fstpt cmp mov in (bad) das jg inc ret cmpsl dec jo and je mov xor rcr adc xor das xchg mov push cmp sbb jge jg pop sub push mov lahf stc add dec test add enter dec mov inc (bad) ljmp aas add in mov scas cmpsb lds xchg lods or mov jg pop lret cmpl add out jg sbb inc mov jg loop (bad) cmc or aad lods jg xor adc sahf scas sbb jno pop xlat sbb mov pop jg cmp lret (bad) (bad) aam and repnz adc push loope test add jl inc push cmpsl jg sbb repz adc jg,pn xchg cmpb mov jg push cmp fs jecxz pop shrl cmpsl jg inc hlt scas out loope (bad) je inc es dec repnz jne sub pop xchg repz gs jg sbb iret into mov cmp sbb (bad) jg cmc daa xchg (bad) mov jg ljmp movsb clc lods in xor fs jg,pn sbb loopne sarb lcall jg test enter mov push aas addr16 fs mov daa lods inc and insb or aaa jmp or lea inc lahf adc pop xor scas and outsl jg lods or lds pop in ja aad lcall fildll sub xor mov or xor jg repz rorl jg aad mov jg hlt xor lods xlat dec dec and add or cmp enter push jg sarl loope je jae popa jg mov mov scas lret test mov lods cmc pushf push sub je dec xor mov jg fistp in adc xchg jns cmp ret je test pop push nop aas lret (bad) fisttp sbb mov imul adc (bad) mov scas insl mov jp mov rcl xchg aas lods pop insb ret xor out mov dec imul mov jg icebp sbb xchg jg fnsave (bad) in stos mov imul jl jg int mov fidivrl jg imul mov pop popa jns dec rorl out lds mov jne ds jo repz mov pushf stc out insl inc imul xchg lea inc fsubs jg ja (bad) outsl or jg scas lds ss pop mov (bad) mov or cmp push xchg sbb fs js test icebp aad cwtl inc jmp xor and pop ljmp adc pop pop fadds inc pop loope mov pop pop jp push outsl mov lret mov dec xchg mov xchg dec jg cmc inc dec sti out lods jg xchg pop sbb mov loopne (bad) and mov int3 jne (bad) xor or js xor inc addr16 sbb (bad) ja in dec cli shrl jbe cwtl dec jg gs or idivb ljmp (bad) (bad) int add dec xchg gs test cmp fmuls out jbe shlb fsubrl jne stos cs lcall bound js pop cld loope and lods (bad) mov xchg sti sbb xor inc mov repnz (bad) sub out mov int3 sub push jg xor and jg xor out clc jg (bad) jl pop jecxz dec jg xchg hlt enter jns mov mov mov push into aaa mov jae dec xchg shrb jae bound fld lcall cli test jg out (bad) (bad) mov jl pop pop hlt outsb and or enter xor jmp ds lods xor sbb push pusha cs jg push push and sbbl mull jno xchg aaa push out jg xor rcrb popf sti sbb addr16 out adc jg mov negb jg xchg adc pop bnd pop (bad) daa std mov mov and es frstor jo aaa addl jle mov enter jg dec (bad) cmp pop push aas bound ret dec mov loope out mov je adc adc lock in inc ret mov mov cmpsl loope mov jb inc sub notb mov lock les jg mov pop jg xor jg sub das mov outsl pop mov mov outsb xor xchg in or jg,pt jb adc and sub (bad) mov jg and mov inc ds je add movsb leave mov pop (bad) cld pop ja mov jo dec hlt push (bad) (bad) jg orl mov mov fdivl je movsb insl jg pop int3 xchg jae push sbb cld mov mov push fdivr push xchg movsl enter mov call jbe out pop dec mov xor xchg mov repnz jmp and mov aam notb mov insl cmp pop js jg dec (bad) cltd scas sub or jg cmc repz pushf pop jg lahf es pop jne sbb push sub adc imul imull pop mov jl cmp jg lahf pop jle popa push push jg and sti and add sbb dec (bad) mov mov jo push xchg scas test pop insl loopne jg jecxz add xchg ds movsl and (bad) xor mov insb mov jg repz enter mov push je imul jg and int test outsb sti stc inc dec gs pop jne jg mov push adc aaa mov push sahf ds pop testb pop mov es test ljmp loopne adc je (bad) jg cmp pop mov add stos testb ss mov dec fdivrs xor and aaa push jg lret dec mov movsl jg jbe ljmp jg call pop ja inc sub cmpsb out dec add mov cmp inc sahf scas inc adc jb xchg outsb fnop jmp pop stos dec mov test mov inc mov enter jno or loop xchg pop jg iret sub movsl mov fbstp jg test mov insb jg dec into mull pop jne inc pop jg (bad) loopne pop faddl idivl dec jno jb pop popa jo inc mov dec mov push inc or xlat dec jg popf xchg sub arpl jg inc into jne out push jg aas and ljmp jg mov bound icebp jo mov js mov popa lods inc test jg,pn mov cwtl jae xor xor hlt out inc adcl jno inc jg jmp dec mov dec mov ret lock jg lahf mov jg adc rcl (bad) jg xor sbb xchg dec (bad) lock mov ja pop mov jg in mov cmp shr dec cld jmp aas mov push sub jae dec xor pop test inc lods in inc jg (bad) hlt xor stos mov add es jg jnp (bad) repz rorl addr16 and pop push outsb dec movsb jb jg mov sub mov jl mov sub cmp mov mov inc movsl pop loope js adc xchg bound mov inc mov jo (bad) ss jle inc push andl sti test sub (bad) cld cmpsb jg stos das (bad) sarb adc push (bad) out notl adc jmp cmp pop push jg es lods movsl jg push in inc sti mov push (bad) lea mov imul or fcmovbe jg mov mov xor shr jno jg ss jmp movsl xchg mov into shr jg inc add aad mov ret and pusha push das jg push pop add movsl mov mov xchg cld sbb mov mov mov push and pop fbstp add add adc loope mov inc inc mov jg sbb push mov in sbb outsl push xchg pop xchg pop (bad) inc stos jg mov enter jg,pn lret cmp mov fldt ret shlb jo jb idivb in mov jg test inc fucomip mov jg out and pop scas jg jmp inc pslld jg push mov dec inc clc jg loop pop xchg std jbe aas aas insl mov mov mov ljmp loopne mov dec addr16 cmp jo cld push mov (bad) mov out or hlt dec scas mov test mov cmpsb jg andb mov jnp pop jne jo scas ss movsl lret and pop jge pop es aam sahf (bad) mov inc aas scas enter jle inc jmp push repz inc fwait (bad) cmp push xchg in cltd push icebp sahf push das adc pop jg add popf xor bnd mov cmp mov es and gs cmp jg das (bad) in mov add daa lods stos add xchg and lcall dec xor or mov xchg mov cmpsb into jg lret jge idiv jg inc mov movsl add push xchg paddsb leave pop mov roll pop jmp pop mulb jae jg push pushf arpl and adc pop sub cli mov sub jle scas xchg jg imul jg xchg insl int3 pop out lcall cmp mov xchg jl inc fcomi cmp popl jg jne scas pop lods loop jg push pop or pop push imul in mov sbb pop jno scas ljmp mov testb jb push jo leave stos fldcw jg clc xchg inc lahf xchg pop jg arpl mov add cmpsb jbe push sbb jl in xor and aaa pop cmp cmc or jge mov mov xchg xchg pop ror and xor insl sub pop fucompp cmpsl xchg xchg test mov jnp dec mov push add dec pusha inc insb lock cs jg notl lret imulb into and daa adc (bad) repnz mov mov xchg or add mov ljmp xchg inc nop addr16 pushf mov pop daa sti mov loop (bad) push rcrl cmp ds icebp jg xchg pop pop sarb dec inc cli jg and insb fcmovnb jg es (bad) mov call push ret add test mov mov sub rolb (bad) mov adc pop xchg jg jae pop cli stos test (bad) arpl ja jmp sbb jl loope out and pop std jo popf pop cltd lock mov sbb outsl jne (bad) out cmc adc push push stc movsb push mov fnstsw jp adc adc jmp adc loop jg sub mov sub outsb cs and jp inc outsl adc stos xchg jbe adc clc inc lret cmp jg repz mov push mov jge scas test or pop push sub rclb call pop xor lahf ljmp sbb xchg notl outsl mov or insl out imul data16 sub ds and sbb mov jo test xlat sbb leave and aaa jge push ja jg mov add gs pop fisubr sbb adc jg jmp xchg mov inc xor jg xchg mov jmp pushf lcall aad pop push inc inc or lret jl aam test mov push in xchg cmpsb mov jg xchg xor arpl shrl jnp (bad) lock inc pop sub adc hlt dec lcall stos int3 cs mov jg adc loope cmp ret scas aam jg movsb rorl imul (bad) cmp jns add fidivrl movsl adc jnp (bad) mov jecxz mov push stos jg add mov shrl js lods (bad) sub mov xchg mov icebp jg and xchg push or jg out cmp jg push test push mov bound ficom and sub fisttpll mov xchg and in jg (bad) pop jecxz stos adc sti push icebp pop arpl add jg rcr mov in cmp movq in cmc sbb in add pop mov mov mov out cmc insl dec mov and outsl xchg mov sarb clc xor sarl fs jb rcl and cli mov std jle add jle lcall rcr sub or popf mov xor arpl mov and fnstsw jg loopne loop in loope jg xor aad fadd push jg insl xor jg and popa dec fildl jg insl pop inc push pop or (bad) aaa es or jo sub jp in add pop sub mov (bad) mov xchg jecxz mov jg data16 call lock ds cwtl gs xor test jge adc pop data16 cmp inc movsl scas mov pop in add inc call push pcmpgtw jns push imul lea movsl sbb lods jb sarl cmp inc popa adc jae pop mov les lods push dec xchg jg or rorb dec fdivrs dec xchg inc xchg aaa dec jg adc cmp sub movsb xchg cwtl mov fidivr lock sub daa mov jmp popf push mov stc jg xchg push dec loope stos jg scas sub pop jg or add sub adc xchg ss lret push sti push push jg inc xchg inc cs and pop mov xor pop xchg cmp insl push dec jg mov jne movb dec stos popf mov rcl cmc mov in push sub or fdivrs pop sbb jg cmp outsl push popa js jg jp shrl sbb ss and xchg jg pop or jb sub jg loope cmpsl sbb stc or jg mov adc sarl jg jnp jne arpl testl test jb pop xlat sti out enter (bad) dec das cmp add popf mov adc jg pop test sbb cld (bad) jmp sbb jg movsl jbe aaa ret jg cmp mov push mov jg mov jne mov mov arpl mov add add scas xor and push adc inc sub mov outsl imul jecxz dec xchg sub std and push push les dec jg xchg popl (bad) negw xorl jg jmp ss jg out je in dec pop pop pop jg (bad) push add jle mov mov xchg out jb and out mov jg orl aas adc mov inc mov and add movsl inc dec and sbb loop ljmp dec stos das xchg xchg push mov aas fcompl inc or orl pop pushf and mov jg in out fbstp ljmp sbb mov xchg fistpl pop (bad) jg mov jb cmp xchg scas pop rolb cwtl mov sbb lret jg in push pop xchg and movsb add jne mov xor div xor orl push sbb mov cmpsl xchg jne sub sarl cs dec mov xor sub mov push mov gs sahf (bad) dec cmc inc sbb mov sbb jg inc mov dec stc xchg xchg dec dec push je mov ficom lcall mov out ja cmc jg fnstcw or (bad) pop add xchg push jg xor and stos push xor inc in jae imul cmp aaa cltd sti (bad) mov sbb pop xchg in cmp jg xorl cli mov pop cmp call xor add inc and pcmpeqb shrl jb out inc jg loop popl iret pop mov and push mov sti scas ss sbb sbb js lret sbb gs mov pop cmp addr16 add xor push push jg sub sbb fisubl inc mov dec (bad) xchg inc mov pusha sub retw es icebp mov mov add lahf inc pusha and (bad) outsl xchg popf aam iret addr16 shr jg mov and jnp mov mov mov imul mov popa icebp jne push jg jmp pop push cmp movsl fnstcw push xor mov mov lret xor push xchg (bad) and cmc pop aam std sub cmp pop dec fsts mov xor aas es enter ja aad push cmp inc pop jg stc mov sub call add xchg dec xchg aam mov shll cmp jg push sti push repz pop in aas xchg js stos xor prefetch cmove mov ja std jecxz and sbb jmp mov ficompl mov loopne jno inc sub call int3 leave in fdivrl add mov inc imul xor sarb jo jp mov jl dec or loop jg sub xchg js aam jg pop and sti ret jg mov lcall das cmp mov inc or xchg mov fiaddl dec cmp mov or int sbb cld jbe addr16 sub les push sti bound cli xor lcall pop sbb dec pop movsl aad dec dec xlat dec and mov das mov sti inc in invd outsl dec aad adc imul dec call jmp adc lock fwait push (bad) mov jg sub jg mov sbb (bad) xlat jg (bad) cli (bad) icebp inc aam jg jb inc in ss mov sbbl loope xor pop fwait sub dec js cld scas or ja out mov js sbb enter pushf clc jp and fdivs daa mulb and stc mov sub das aas inc outsl push cmpb incb lret pop outsl push ds in inc fidivr (bad) rcll daa push xor loopne rcl sti pop test pop loop mov cmp push cwtl push aas push xchg mov and jg test cli jg fs mov popf or jg fwait jb or and pop insb mov jg dec dec fs imul (bad) int cs ljmp lahf xchg push jno je loop and cmp outsb mov iret or dec push add pop pop sbb xchg xor outsl ljmp pop push add loop sbb cmovbe mov sub outsl jg or push mov mov and cmp sub xchg es stos add ret outsl add push (bad) jecxz fdiv xor inc arpl jg in jp test lahf aam outsl jmp loope je int mov test inc push mov and fiaddl inc cmc push jg out sub roll jg,pt cmp jle pushf lock mov jg cmp sbb pop mov mov lret push mov jb mov fwait sbb jg pop in data16 jbe pushf jg std aad repz lcall mov xchg cld or cmp xlat stos jg xchg dec or pop test xor adc movl adc dec inc stc jg add xor inc cmp ds mov xchg cmp or ret stos xor inc push test push in (bad) mov arpl mov iret jmp loope sti call mov jg test and mov (bad) xchg pop and xchg (bad) fs jg mov pop pushf inc stos jg mov (bad) mov push push jg decb adc js and push scas dec repnz cmpsl loop xor dec jg dec fsubrp test push outsl mov test gs fdivr inc loope xchg ja xchg pop inc and cmpsb (bad) pop int jecxz mov pop push pop sbb aad popf add shrl loop and cld hlt fs js shrb xchg jg fnop cmpsb mov imul and mov mov int3 bound dec jg or loopne or jg mov mov jg mov out sti fwait mov mov scas jo test add std adc push dec jg and mov pop lea idiv fwait mov or loopne jmp fidivl mov addr16 mov mov mov adc les jnp mov push cs push leave pop add jge stc insl adc mov pop inc jecxz dec jg lods inc mov pop push mov sbb jns jo int pop or mov iret je jbe jp adc jg insb pop inc lahf jo inc jg sub sahf adc fist clc add jg cli repz (bad) jne sbb test jg mov adc mov mov jbe xor aas xchg add pop jg adc daa jg or seto pop mov je xchg cmp data16 jp xor (bad) idivl outsl xor mov (bad) sub and js repnz out movsl mov les fdiv stos inc mov push push mov aas mov (bad) rolb jg xchg clc rorl (bad) sarl xchg cmpsb pop mov jg aas jbe inc (bad) jg enter fldl jg cmpl adc ficom jne dec jg pop fstl fadds insl xor bound push mov push inc xchg xor (bad) jg lock mov sbb cli ret jg lods xchg rcll jbe push inc mov jl cmc and push adc jno jne add pop aas adc into cltd push cld (bad) dec inc mov (bad) xlat iret mov sbb add gs ljmp pusha xchg dec lahf cltd pop fistpl push int xchg out jg cmpsb jecxz out add jg shrb les push popa nop ret sbb outsl call or jne mov pusha jp jbe std cmpsb sub jg int3 xchg inc sti add jg outsl push dec xchg jno mov fisub loopne xor dec add es fbld jg pop inc add pop jg repnz add jg xorb popf in mov lcall jecxz pop mov dec jnp sub push push test lret rcrl shrb daa or sub or inc mov in xchg dec mov ja aad mov lret dec cld xor fs jcxz ja jns das arpl pop les dec mov jne inc inc aas dec (bad) pop pop ljmp lods jg xchg adc loopne or add and pop jg je les sbb subl in mov (bad) push insl jge jg pop jne pop inc (bad) ss test lea das pusha imull roll pop xor mov (bad) clc out das std (bad) jg jo ja sub int pusha jns xor aam xchg cld arpl inc jg mov mov mov mov mov scas popa xchg pop xor pop xchg pop mov aas aam mov jae mov test mov (bad) push inc adc outsl adc stos jecxz fdivrp mov add jg jge sbb jg cmpsb rcl popf es push xor jg xor shlb mov jns call or inc cmpsl push scas ret mov mov sbb test (bad) mov jg xlat adc imul and mov clc mov sbb lds jnp mov adc scas jg mov loopne mov or test jae repz jb jge cld mov leave out sbbb dec jne aad gs loop test or dec jae mov in mov xchg bound adc cli jg fwait lea sbb and stc inc mov dec add movsl pop jns push jg ud1 dec push fdivrl and lret pusha (bad) dec mov data16 dec and cmp faddp dec mov aaa mov fldt fucomp (bad) aas addl enter dec mov mov outsl jb jp cmp shlb stc (bad) xor sti lods push mov mov in (bad) fidiv xor andb mov pop enter fdivrs and int adc push int3 test pop stos jne sub (bad) sbb jb outsb mov push dec mov sub push arpl add pop or loope adc imul mov dec dec ljmp es mov mov dec dec dec pop leave add jg aas inc push mov repz loopne pop rolb dec jb and fdivs jmp jns mov jg sbb stc sbb push addl adc sarl inc pop dec (bad) ds jg jecxz pushf imul in xor jg subl jg popf sub adc insb adcl psubq and pop inc xchg jo popa js sub mov dec mov mov nop aas add jg mov or mov scas jmp jg add (bad) push mov shrl pop jg push test int mov inc rcll push jb jp popa fidivrl mov mov xor jg or cmp mov out insl lahf inc jg mov jae fist std js mov ja ljmp mov jg adc (bad) xor mov xchg push xchg lods aas pop mov cltd xchg insb hlt dec push loopne lea cwtl add mov and jg xor vpor data16 xlat lea sbb mov shrb test jg out aam xchg jg xchg cltd outsb ljmp out adc scas sbb outsl addr16 mov (bad) jg xor xchg mov add sub adc arpl jg push addr16 cmp orb mov dec add adc clc mov jg mov xchg stos fmul push mov pop pop ficoml cmpsb pushf dec jg mov push movsb jg repnz popa lea dec ss lahf mov mov in jae repnz mov ret inc or pop ficompl jg mov xor rorl jg dec adc xchg mov lcall movsb mov sbb lock adc sti push mov insb fdivrl shlb jp loope int3 aas xor add xlat push rorb mov out outsl cmpsb sarl pop cli in fcomip and insb movsb (bad) jg rcr into (bad) in sbb xchg jns and loopw scas inc xchg jb jg in pop les push mov lret ret xchg frstor std mull push bound popf inc mov pop ds add dec pop cs cmc jg or test fldcw shll or jg,pt fnstsw sub clc or inc sbb gs pushf shrb popf sub test mov push push test or imul dec inc inc aas push cmp lea (bad) jp sub popa fstpl leave jg mov sahf mov push xorb jg and sub lods or mov mov add (bad) jg xor mov jg mov hlt jle pop cmp pop jg test or pop (bad) js mov cmp push ret sub mov sub inc hlt fs bound mov xchg push pop subl jle jg jb (bad) xor (bad) test lahf pop scas lret mov fnstsw jb mov adc jle mov outsl push and jmp std outsl add iret or andb ss dec lret jg lods mov (bad) in jg xchg add data16 mov add jg (bad) push or jg xchg pushf xor adc jg hlt ljmp mov pop xor lods sbb add jae ss je xchg and (bad) (bad) aaa cwtl sub movsb bound shll jg xor xchg das mov mov dec leave loop pusha fdivrl mov popf jno (bad) xor aam inc aas mov and add aaa jg aad mov pop jg (bad) or add fldt repnz and mov mov imul idivl lcall jg icebp out in mov mov ret pop dec jg jne mov sbb jg int xchg add sub adc inc fidiv jg xor sbb sbb jg test and je xor rcrb insb cli dec jno pop repz scas cmp pop arpl xor jecxz cmpsb cwtl jg (bad) mov jp xchg dec int3 in jg sub cmp mov in repnz dec fcoms js popa lods popf call mov pop (bad) jg les sbb decl fnstcw loopne cmp cwtl imull sub cmp std data16 mov mov cmp add inc fwait and jg ja pop out and daa mov jae jo in inc push jnp rolb movsb jno push add cli imull jg cmpsb mov mov mov xor push jp pop mov leave mov (bad) enter adc mov jns test inc int3 negl testb jg stc into sbbl dec mov sbb lods xor adc cmc inc jg fstpt xor dec lret (bad) mov and insb ret mov (bad) add xchg lods jg inc loopne incl cmp scas lcall mov and xchg lds mov xor lea jg adc xchg in ret mov js aas jno push inc jg,pt jae loope mov xchg add leave loopne vmovdqa dec xor in out pop (bad) test jle pushf pop jg mov dec ljmp hlt cmpsl das add sbb jg sbb out mov push mov (bad) dec enter cld jg fistpl mov mov dec imul es pop std pushf ja pop jg mov push lret push jmp pushf jl test cmp push mov jae mov mov pop lods stos jg std mov inc jg add and stos inc and mov jp xor (bad) xchg jne cmpb jg std push jl jp loop in mov in jg repnz jmp pusha cmpl mov inc pop sahf and outsb cmp in pop jp pop xchg lods test xor cmp rcll jg pushf cmpsb mov fist mov sbb jg mov (bad) nop jg push into inc sub ja or stc inc mov jg (bad) cld (bad) and aas mov xchg mov int3 test mov stos push test adc push dec jge adc outsb and or aas mov in out push sarl mov (bad) sub sbb dec loop add (bad) jg insb rcll sbb repnz lcall xchg sbb fidivl pop or xchg out adc cltd push adc or es xor fimull lock out mov sub pop addl jg adc (bad) (bad) aam das jg push mov jle jno outsl fistp mov adc add jo cmpsb jg ror pusha cli push xchg mov fstps popf mov inc aad cmp lea jg jnp ja jmp les sub dec pop push fs jg cmp mov jg mov mov js mov jg add jg push xor repz dec sahf int repnz add adc lahf insb sti das fcmovb cmp inc fistp fs dec fistpl lret mov push and xchg and mov cltd cli lret scas jg push out push mov dec pop mov cmp test mov mov fs jne ja loope insl outsb sbb (bad) jb les add cmpsb nop ret inc jg dec xchg and ljmp icebp add push jg (bad) sbb test cli (bad) adc adc push adc icebp jg pop push decb rorb jg,pt nop dec aaa xchg add mov jg insb inc ljmp out mov cld jg mov sub pusha (bad) (bad) inc xchg or in mov in (bad) dec inc push fucomi jg insl leave and cmpsl lock jg and shll insl sbb mov xor sub fistpll test xchg adc cmpsl mov js push xchg pushf jno cmpsb jg shrb test push iret in adc jg ds jns xchg int3 xchg movsb imul jg ret icebp fisttp add mov adc pop loop (bad) cli out dec jg mov lock sbb mov push inc pop pop movsb mov push (bad) es lods xor jg in repz pop xchg jg jle test hlt push das jg aas fs xchg test jge cmp aad dec dec das jg addr16 xchg es stos outsl inc in decb iret rep rclb pop xchg and addr16 sbb jg pop mov or xor (bad) not xchg and mov push imul popa inc inc sbb jmp push sub mov stos add (bad) jg fwait cmp push cwtl xchg push jg bound jg inc mov popf xor mov into pop aam out sti add scas cmp lret pop inc fnstsw aaa push fmul ja sti or outsl scas outsl call pop dec mov sub or inc jg xor mov mov jge dec add xor push (bad) insl mov inc fisttp cmpsb xchg pop mov test daa add pop xchg sbb dec pop mov jmp mov loope jge in stc cmp cmp pop mov jns aad mov push jg cld pop (bad) (bad) mov pop lods sbb mov or ret and xor adc pusha and jmp adcl pusha mov leave xchg inc sbb adc repnz inc sub inc jg icebp dec int3 inc cmp loop sahf mov loope testb lcall cmpsb stos or and ljmp xchg inc ret jmp xlat inc pop lret push sbb cmp cs adc pop mov ret movsl jl std and jg push pop push bound dec adc enter or insb jg scas cmp push dec aad jg (bad) xor push mov inc (bad) lods mov jg add xchg xor xor ret mov ds jno fldenv cmc sahf jg stc push adc mov mov pop add mov mov xchg jg ja add jg push sar lods adc ljmp xor push xchg sbbb movsl jg,pt cwtl leave jb or idivb je cld push sbb ficompl rcr push in (bad) mov sbb (bad) sbb lret arpl aad mov push mov rol rorb cmp movsb and outsb test jge pop movsl (bad) inc jg add std pop pop cltd xlat jg adc mov push int (bad) sub dec xchg push ret jg bound pop push (bad) sti icebp or lds imull push mov cli in (bad) push add dec mov lret push lods or les mov jg cwtl decb push add adc (bad) mov mov push leave jg out call jg rorb sarb subb insl popf xchg xor xor jecxz jno ss push aad cmpsl push arpl jg jne clc popa mov pop jg dec xchg sti cmp enter xor mov inc jg lods fistpll jg ja stc and mov jg inc faddl pop mov ret or jg out mov mov jg add (bad) pop sti cmp das cmc outsl cmp jg cmpsb sbb loopne dec push jg jp push mov cvtdq2ps movsb sti icebp lret mov push (bad) lock jg adc adc jg pusha (bad) xor and mov stos jae das xor adc ljmp cmc pop jg pop rep adc push scas aas jge loopne mov dec dec je jg test imul pop into push cmp and push xor shlb push xchg add (bad) jae fsubr xor imul int3 add add adc mov mov scas negb mov bound das and dec popa cmpl xor lods cmpsb jmp imul mov leave stos int das push test mov fsubrs xchg pop jg out cmp push popa aam mov (bad) (bad) inc pop (bad) icebp cmp xchg test and outsb dec mov or clc sti mov out adc inc and aas add fldcw mov mov jg jge pop pop push jg mov sub mov inc push jle inc loope or sub js pushf sbb pop call imul pop in inc cmp test leave dec fdivl aas scas push push lds (bad) add jg stc outsl xor jg stos lret inc bound push into mov xor pusha ljmp nop sub ds iret jg test add add inc inc gs dec ja (bad) inc add jg jb jno fmull mov sub add pushf inc lock aaa bound stos in icebp mov xchg xchg cmc int3 insb push jg fxch lahf adc les bound imul jg and lods lds jne mov jg in fsubrs std jg outsl arpl repz xor add xchg add andl cmp xor imul ret lcall jl push jg or inc iret xor jl jg and mov insl mov dec sub lods dec xchg lcall lret or jo ds test or pop out gs push pusha movl push pop push js cmpb out outsb dec les mov cmpsl or aam jg loop mov mov inc xor jg repnz lock rolb xchg lods sbb jb jg jle fwait inc out jg dec repnz pusha adc push lds jnp iret loope jg cmc popl jg arpl mov mov sahf mov mov popa (bad) and out scas xchg insl ja les mov and sbb mov cs mov out test rol xor mov dec (bad) insb jg lods enter mov cld xlat test popa mov add repnz jae or adc clc jo movsl xchg inc inc pop ret cs push (bad) repz rcrl sarb aad repnz das lahf xchg popa inc push cmp pop lods scas cmp dec jg or mov shrl cltd cmp dec dec dec out mov inc leave mov cmpsl in sub test dec jl add in or add fnstcw jle out repz stc test and outsb js hlt mov jge pop (bad) mov lods push xor cmc jne push sti cld ret es pop mov xchg dec fiaddl mov pop leave pop jbe push (bad) and mov out or push dec push lret mov and pop mov icebp in out or gs sub out loop es not xchg pop mov inc movb je pop movq int3 mov sahf jo push jg pop popa ret sub adc mov dec push stos and mov jg jecxz test xor sbb pushf jg fistpll cmp (bad) jg mov stos pop loop inc lds and jg cld fs pop iret aaa dec jg lret outsl pop jne jg lock cmp dec (bad) cmp mov divl push dec je aas movsl scas inc push jcxz pop jae jle int cmpsl mov jp stos adc mov xchg add inc jg ficom and cmp and push sahf sub (bad) gs scas stc (bad) pop lods push inc adc jg ja scas leave cli cltd add fsincos stc fsubl mov and fidivl leave push jne dec test test into jg daa cmc cwtl (bad) push mov jg inc dec loope jp jg jmp push add sbb xchg sbb mov lods mov jle add ss cmpsb lahf jbe inc mov std mov add push xor push sbb jl das push cld jg adc shr fwait int3 jg ret out mov xchg push test mov mov sub pop mov fnstcw add fisub loop mov inc shll mov xchg push pop lcall (bad) imul xor stc (bad) push cmp mov rclb pop xor add mov sbb lods loope pop (bad) repz jl xchg pop (bad) in popa pop cmp (bad) int3 in daa aas call fldl xchg jg sbb lods sti cmp (bad) mov inc push int les arpl movsb and cmp data16 jle inc (bad) jg ds add imul sub xchg cld add aaa inc iret jg or add imul fdivl sbb jg imul aas loop jo fbld xorb scas or sbb ja or mov (bad) icebp or cmp pop inc cwtl addb push lods jge adc or mov sub sbbb jg aam mov jg sar jle mov mov mov (bad) fnstcw mov data16 push mov aas out xor mov mov sar jecxz pushf jmp stos outsl cmpsb push into aas ljmp dec sub xor mov jg call sbb jo cmovle jg mov je cwtl daa mov adc inc jg icebp scas hlt jns mov fwait rcll xlat mov xor adc mov mov mov lea dec dec mov jg (bad) cmpl and mov daa mov data16 fist and adc mov ret xchg dec dec and loop fcoml adc jg mov and mov jg aad js xor call dec and cmc jno aam pop push jmp pop test bound into cmpsl or inc aam jg stc cmp ja cwtl (bad) jp pop stos int jno xchg addr16 sub jecxz adc xchg mov jmp pop popa mov pop xor pop imul jg mov rorb push jg add push imul fcompl mov dec jg aaa add sbb pop pop cmp ds xchg outsb in dec ss stos aad jnp lods sbb jns inc insl push stos jle xchg jg stc call xchg jg and cmp adc lret jge (bad) lcall mov adc lds pop pop iret mov cmp addl and jg mov bound sub pusha inc jg mulb popf jg pop andl inc adc mov cmpsl jmp es fistp inc lahf cli sub mov xchg bound cltd jg sub (bad) dec add popa xor and mov jg dec adc jg jns lea xchg push lods cmp std cmp (bad) dec jg loopne (bad) popa cmp jg jge daa stos insl sub out aaa test out outsb loopne std push int3 and test (bad) scas xorl xchg cmpsb mov repz push mov jg aam sub mov mov or flds sti push pop das dec repz pushf pop cltd (bad) fmull daa inc xchg mov ss lret jge push add mov outsb jg adc jg insb popa imul jnp mov lahf addr16 sbb push aas rclb sbb jg cmc bound mov in (bad) dec xorw mov jg ja out jg xlat (bad) test push push loopne mov dec out xor stos sbb and cmp inc negl sahf dec pop mov cli lock in repz mov ds ja mov repnz pushf fwait jg (bad) in or movsb ret jg sarl push lret inc jg repnz cli or push (bad) fildll ret mov aam mov fwait movsb ds dec gs pop mov aad push mov mov scas sbb cmovnp push pop popf aam addr16 dec out fwait mov jbe cwtl cmpsl outsl mov jg push leave sbb cli aad ret ret jne jmp or jle out (bad) mov xor inc test enter cmp jg test push or jno dec pop decl popf mov xchg xchg pop mov adc inc stc or mov and push mov lret mov jo cmp jmp jb mov pop (bad) jns sbb dec out test imul cli add sbb fnstenv jg jno mov lret push mov add inc and jecxz mov orl xchg jns lods jg or jle sbb xchg jg pusha pop add popa xchg arpl imul or jg mov fldt mov fnsave sub out fiadd in sbb sub push mov mov push call pushl out push cld pop or inc sbb bound mov insb dec aas push jo pusha jg cmp mov inc jnp or jo jg fidivrl mov cwtl popf pop stos psllq scas xor into mov shlb sahf add add out adc push scas pop orl rolb fst add icebp xchg fidiv andl sub cwtl lods es or sbb mov hlt inc push dec fwait mov loope sbb mov and lea and pop sub ja mov mov popf insl (bad) jle call daa sbb scas es in pavgw cmc and push xchg movl test movsb push imul xor xchg push or enter add fisubr mov insl jno jg fiaddl sbb inc js dec in cmc xchg scas outsl or pop lock nop pop (bad) mov pop addr16 pop mov mov push jns sbb jg fnstsw cmp or (bad) xlat dec scas pop inc jg push sbb mov cmp mov jecxz and out (bad) idivl or xor jg cld xor (bad) sbb out cmp mov add insl and jmp push movsl fistp add in (bad) (bad) mov pop push and call fisubrl pop jg lcall jg xchg inc lahf rcr dec cmp imul dec dec ds (bad) call icebp cmp jecxz jg shlb faddl aas jno cmp mov mov mov inc inc mov and in mov je lods push arpl int jbe adc ljmp rcr sub shrb sbb (bad) dec into lds jg cmp out cmp jg push dec sbb jg mov in mov test addr16 dec sahf push dec jne mov pop (bad) hlt jge insb jg xchg mov push jg push cli shlb cmpl aad popf negl jg mov jae push jg adc xchg mov fildl inc pop cmp cli out cmp ja sub fdivrl repz clc aas push adc xor fcompl or mov into fisttp addr16 loop fisubrl add sbb dec leave cli push orb or push lds pop dec std daa jg jp mov lds mov (bad) imul xor adc sub mov jb mov and jno adc aas (bad) lods xchg push lock dec test jg out mov mov xor jg lock inc sub jg call cmp jg pop loope mov jge jg bound enter jg inc scas in or aam mov inc inc jle les jg push imul mov add xor lret jg insl mov ffreep loop sub ffree sbb mov aad dec xor and sbb xchg mov test movsl pusha jg (bad) sti out push jo cmpsb mov push in and jg pop out gs push test xchg popa (bad) fnop mov sbb xchg pushf test add jg rcrl pop jg loopne adcl jns jne scas and scas xchg pop pop xchg jg xchg mov int3 clc mov jg lods mov (bad) lret xlat mov cmp pop das popa mov mov in jp mov ljmp pop add push xor and pop into out or ret cld stos push jg leave adc add (bad) cmp xlat mov jg lret daa cs cmp lcall add add jno into inc nop mov mov dec or sub jl pop jnp bound pop xchg xorb lahf in mov sub fwait jnp cwtl and repz push outsb lods jo add adc inc cmp cmp mov outsl fs lahf sub push sub cmpsl add inc daa mov ffree enter popf jg push jno mov adc fs jmp mov or and icebp adc test outsl jg xchg jne add (bad) jg sbb cwtl ret jg sahf push lahf outsl cld test scas and stc sbb jb js jne dec sarb and mov movsb push ds scas lcall int sub inc fs and (bad) je lods jg nop (bad) cmc pusha gs insb (bad) pushf xchg mov sbb pop cwtl mov je lea mov cmp outsl push (bad) push sar js test pop push outsl mov arpl push mov adc bound xor jg dec adc gs jg xchg jnp imul jg lock popa cmpsl xor mov addr16 shrb and mov js jmp and (bad) lock mov mov or mov dec push jg dec xor ja out mov scas lock jmp pop mov and dec jne jg leave loopne sub xchg shlb push jne mov jmp fdivr pop mov imul dec test xor out sub scas (bad) pop push sbb dec in and push xchg and test add lds dec fdivs mov jl push adc (bad) mov mov pop xor fs mov adc bt or adc and jg (bad) test jnp jg push clc mov scas popf dec pop mov enter (bad) cmp mov addr16 jg and jb mov out inc add pusha lods sub jg cmc repz fwait mov scas sub and popf gs xchg and mov mov lods mov jg sub mov mov inc fdivrl adc xchg and les loope mov imul cmpsb sub pop or jnp jmp gs mov pop push out orl out imulb mov mov jg leave and or nop ljmp xor lret pop addr16 inc mov sti (bad) xlat fstpl jg icebp aaa mov out lea outsl sar ja cmp test into mov test dec negl out pop mov pop jg (bad) sbb nop jg xor imul addr16 jg fildll int jo jg imul and in pop jmp mov inc mov jg (bad) ja adc minps mov ss stos addb imulb ljmp pop jg jp fdiv pop outsb mov or idiv imul mov pushf sbb mov add (bad) push rcrb imul jnp sti sahf test addr16 mov xchg inc pop ret into cmpsb movsl mov bnd addr16 inc js jge dec push mov test xor (bad) roll jbe fdivs push jns inc xchg out pop sbb adc sub push movsb jg dec dec lret lret mov sbb jbe (bad) shlb dec jg mov (bad) idivb jg ja rclb xlat jne bound lret mov adc add sar jno stos push inc rol jg (bad) push mov idivl negb fildll (bad) jl rcr and test out mov (bad) out pop dec aad inc les inc int3 jns pusha clc xchg jg sbb stc jg js inc pop mov imul mov mov inc push or xchg pop hlt jg es enter jg (bad) repnz test and sub addr16 (bad) pop daa inc mov lret lahf fs mov nop jg sti addr16 lods (bad) jg mov inc in fidivl jge xchg mull lret cmc push jg fcmove xorl fwait insb mov jg outsl mov fisubrl and mov jge xchg sub mov mov insb sub stc ja movsb (bad) xor js push sar mov int push in jg jae pop xchg ljmp lods sbb jg and mov mov mov (bad) ljmp jle test jg push popa and inc xchg scas jg hlt arpl mov fisub push out arpl ret cld int3 inc xchg mov pop adc mov push loop jg,pt and les xchg xor rolb mov sbb stos jg incl cltd jg xchg out pop sbb mov dec mov pop jp addr16 (bad) push cmp dec xor mov pop mov jg aam or mov pop mov mov aas push cmp jg jge xor ret push jg mov pop mov sbb divb movsl and mov cld jg sahf xchg jmp jg dec pop jbe mov dec mov xor lret lock movsl pop arpl insl mov fstl je loopne,pt and mov jno arpl cli pop in jg mov add sti fst outsl ficom pop xchg jg mov push gs cs loopne jg lea add mov mov rolb iret out imul mov (bad) fidivr jo iret mov je inc xlat mov sbb push jg cmpsb add test mov std inc push stos sbb repnz push popa jmp roll pop xchg stos mov shrd pop xchg lds pop jg lret xchg jecxz jnp icebp and jp sbb (bad) je jbe inc push rcrb jg mov daa repz bound lock mov arpl cmpl scas pop jg mov push mov imul xor inc shrb iret sub pop iret test lret jns add and pop jne cwtl aam jg cmp es (bad) jge (bad) or xor pop dec div push je mov ds out pop sbb jno cmp sbb push js mov mov ljmp ds nop pop mov cmpsb stos jmp mov call ljmp lds call xorl rorl cs inc out mov repz dec popf stc inc (bad) sub add aaa movb xor push cmp mov cmc pushf loopne cmp rcrb ljmp daa inc add pop sub inc and aas stc mov or jle movsb negb pop ficomp test push dec or jo mov xchg push repz stos mov mov ret aam mov inc push cmp jg daa sub aas dec dec sub cwtl je dec cmc ret (bad) movsb rcrl cltd gs ficoml jg push ret cmp js xlat or loop xchg adc dec lods push mov bndldx out popa pop xor xlat mov shrb jg and sarl jae add imul dec lret inc scas adc xchg mov jge jg rcrb push xor addr16 sti dec or lds dec adc and test jg (bad) jo subb sub cmpsb test scas mov jg push fdivs lea push inc mov mov imul mov mov cwtl mov enter xor jo shrb jae sbb sbb es pop ffreep mov jg movsb mov ret inc fisttp inc mov aaa divb push and jg or leave movq arpl cmp mov lea jmp dec ja test jg xchg or popa jp sub sub inc rcll mov sbb inc outsb adc jg ficoml movsl mov dec and cmc insb aaa sarb push inc jle addr16 sbb (bad) jg aaa imul ret iret lea add push jg out or imul jo sbb lahf mov inc add lea or inc inc jmp pop gs popa fbld stos jecxz imul sub leave mov pop jg rcrl xor push imul jge push int3 mov loop push rorl cwtl rorl rcrl cmp decb fcmove add jg out sbb call dec outsb jl cmpl xchg jno jg mov int3 or shll loope cmp push ss inc pop push hlt jo sbb dec pushl jne jg and push mov jl cmp add arpl mov sbbl push xchg orps jp pop add aaa mov jg xor inc mov pop jg (bad) aas outsb push pminsw push push mov push test sbb jg sub ss je testb pop jg inc (bad) mov push mov dec sub inc jg push add int3 inc addr16 xor jg sahf lods xchg fwait test test fcoml sbb aaa inc aas xchg lcall aas add (bad) insb inc and jg sub movsb push add cmp adc mov in push cli fisubl out push add lret std addr16 mov aad lret test sbb mov add mov ret jno stos jg (bad) scas xchg mov mov mov ljmp jecxz inc bound pushf rcrb mov or mov pop inc out aas in xchg and dec mov jo jg fsubrs nop jg stc or jg mov xchg (bad) leave mov cmp stc jb inc xchg cwtl add mov stc jg pop lods fnop xchg xchg mov fiaddl out ja stc sbb xchg cs mov cld outsb lock pop sbb cmpl arpl sub aad inc test js nop iret jg or mov out mov fwait stos pop dec dec sbb gs ret cli pop inc push jg xchg insb repnz xchg jmp mov jg loope and cli pop adc scas (bad) pmuludq mov stos mov xor jg xchg dec sub jno and fwait repz ret inc jg ja cli and pop cmp mov mov xchg daa dec fwait in or jo stos pop (bad) fistpll leave mov push jg mov cltd out test sbb in sbb fnstcw mov sbb cli imul ficomp ss stos cmp lds sbb out cltd std jae sbb jg push fidiv jg sub je movsb mov idivl mov xor sub jg push outsl mov pop cwtl push jbe push jg add xchg and int cwtl in mov push mov (bad) popf jg int3 (bad) das negb std and iret xor dec push sbb outsb addb mov mov mov sbb inc bound outsb mov sub or dec pop pushf addr16 cltd mov dec int push inc push jmp jg or mov mov or nop mov jg iret jnp dec fwait xchg mov pop pop cmpsb mov mov out lahf movsb jns mov movq fdivrp rorl push adc or icebp outsl mov jg in sarl jg pusha dec lds sti iret pop jg lock daa sbbl push outsl or sbb mov idivb cltd int mov pop sarl xor cmpb jg push pop into adc jnp xchg xor inc pop (bad) jbe and pop jp ds mov out in mov xchg insb adc (bad) stc sahf jg stos xlat movsl daa aam lods cld sub cmc pop jg std popa add push rep out xchg adc lock pop jne mov push dec fdivrl mov inc ss clc dec jg adc scas or ficompl and jmp out ss cwtl xchg mov inc mov push xchg dec aad test mov push js aaa lahf stos mov popf add or je sub xchg push mov sbb pop sub push mov pop jg pop in jno xor jg push loopne mov mov push fisubrl push mov cld inc cmpsb jg dec pop add aad jg pop sub cmp add dec mov cmpsb add and cwtl test cld dec adc fistpll loope inc sahf xchg je xor pop jns push dec pop ds (bad) jg pop inc pusha jmp jl inc push mov aas leave pop daa xchg dec sbb inc and movsb jp test outsl pop stos dec adc loopne (bad) scas (bad) leave je inc sbb pop (bad) adc jg dec stos fincstp fsubrs sarb mov in push jg or imul mov xor dec aaa jns vmread cltd adc adc inc jg push sub or and mov jg pop in enter out adc fdivl outsl pop dec loope loopne mov jg sbb mov mov cmp ret enter jmp imul jle mov cmpsb mov leave test xchg out jg outsb inc xor xor jg cmp pop pop fsubl jg mov or or mov popf (bad) rcrb pop (bad) lahf cmpb dec pop jecxz pop nop sti mov pop or movsl xchg cmpb outsl push xchg mov jg,pt jae iret or in inc es scas popa pop push (bad) cli and xor test (bad) adc inc in xor aad jge pop mov sbb sub call out pop outsl (bad) jg int in out arpl jo push (bad) leave bnd cld adc (bad) lock dec push imul pop sub inc xor icebp jg jo mov js and or jmp and bound xchg hlt sbb mov and sub sub and adc mov int3 arpl sarl repnz (bad) lock jo (bad) add loopw pop xor into jle clc hlt mov push nop lods mov dec and inc in cli dec rorl pop jg dec cmpsl xchg xor orl popa jg,pt imul mov jae sub fisubr inc sbb adc pop mov repnz and adc xor push jb jl movsl mov pop mov mov and mov inc lahf (bad) jb sub pop jl fsubrl jg fs enter std cmp jg int3 mov roll in push inc or push and xor push jne jg push pop xchg xor push bnd fcompl xlat decl int (bad) jg pop jbe jl mov jg std jecxz dec push dec jg repnz rolb jge dec adc mov subb cmp mov mov mov loop enter push push and fwait pop jns xchg fdivrl les sahf and sub pop outsl scas mov mov fsub pushf pop fnstsw push ss scas icebp push dec lcall (bad) lret adc cmp into cmp lcall adc push jbe jo xor roll jge jg test lock mov xchg aam pop (bad) sub adc xchg jg ret leave mov pop jg aaa or jecxz jg andl addr16 fildl inc mov sbb xchg xor dec and mov sbb mov mov jg cld fwait and cmpsl pop daa xor mov stos (bad) jg das int inc popa mov icebp mov xchg jnp mov movsl scas lret jg call leave sar mov rcll dec push cmpsl imul xchg jg xchg jo jg cmp cmp loope mov pop cs pop pop jg cmp mov jbe mov jg and mov ret repnz test mov out mulb jg aaa jmp test jg jmp lret insl outsl sahf js sub pop inc inc xor mov adc jb cmp aad or inc mov mov inc push inc jg xor in push icebp sub lret dec sbb (bad) (bad) int3 fdivs outsl aas loop jns fdivrl inc jb stos push shll jg pop leave cmp xor pop inc pop cmp jg cli (bad) xlat cmpsl idivb jle pop insl jecxz dec add mov jg xchg mov (bad) out inc mov mov mov dec loope addr16 jg and mov dec fist jg insl mov cld (bad) out jg ficompl (bad) add lods jg movsl add lods mov cmp and or incl fs pop sub xchg inc jg dec pop cmpsb lods les cmc mov inc jg sub push jg daa add imull rcrl xor mov inc jno inc sbb lods dec pop mov es push cltd cli dec sub stc loopne jg sbb mov jg push and mov aaa aaa lret inc addl cmpsb jo sbb ret out lret incb outsl mov cmp in pusha aam mov rolb push jp ffree insl sahf inc inc js jg (bad) lods insb les cmp movswl mov mov imul fild push jg aas add cmc int3 (bad) pop jg lret loop add fwait lahf jg jle pop dec outsl sbb and mov in sahf mov sbb sti adc jno scas inc xor jg aaa xor fdivrs cmp pop push mov int loopne fwait (bad) sti out pop mov jg sub mov fnstsw lods stos mov call add mov adc loop and fsubl and mov insb jg fxch mov jg dec lods outsl pusha js mov sub insl fcomps jg cs push push pop push jg dec xlat mov lods out mov jg cmp mov neg ficomp jecxz les (bad) mov or movb dec mov and and lret test (bad) jbe jle outsb mov in dec jg xchg stc (bad) cmc and mov inc out fildl out jg movsl sub xchg out and loop stc fisub fdivrs xchg xchg jmp mov es mov mov xchg jo in mov aad nopl and ljmp pop cmp out mov je (bad) adc adc iret fcompl and xchg adc jg je test int pop pop or mov add cmp adc dec ljmp mov xchg jg mov push mov dec add les sub lods cmpsl adc leave pop call and add sub inc outsl and push jg lock cmp lcall insl cmp jg (bad) out adc push lea lods xlat pop push adc add sbb jns cld sahf add jg mov dec jg stos inc adc (bad) adc and pop pop (bad) jb jg popa arpl mov dec daa ror out inc push jg jno adc jmp sub fsubs mov jmp ret lock xchg sub add ret jg add xorl mov jno sbb lods pop sub mov ja cwtl or popf jg daa push inc inc (bad) cmp fst in xor aam jg loope cmp leave push cs fs outsb out xor pop sub add pop sub sbbl xchg push (bad) hlt jg orl jg gs stc add out test popa movsl push jg pop xchg cmp xchg xor test rcl sub shll loope mov jbe data16 cli hlt mov jg adc jg arpl mov or dec out std dec addl mov or fwait enter scas push lcall jmp or dec jg adc popf cmp cmc jl and pop and (bad) jg mov fiadd jge push push mov ja outsl arpl jg lds mov es sbb inc ss inc mov (bad) mov fisub jne subl mov loope (bad) push jbe lret add sub inc mov (bad) jg mov xchg insb bound aas sub jnp ret test inc mov adc jecxz mov out jl dec xor std mov insb mov mov imul jg push push xor in jo xchg push ss push jb dec sbb inc jg mov jge imulb cld push ljmp (bad) mov xor push bnd mov fnstsw sub mov mov xchg cmp ficompl daa xor and aam aam jg push jo pop dec pop cmp (bad) mov out inc cli mov stos dec dec mov sub mov arpl mov into aas xchg push jnp xor movl imul mov into jg inc cmp (bad) ljmp rcrl pushf adc test dec cmp jns push (bad) fiadd sti or gs fistpll ret mov lea into mov sbb jg mov mov lods cmp mov xchg imul pop jg add jg xor xchg mov movsl jg jle arpl leave mov insl orb idivl loopne cmp adc pop and addr16 mov (bad) jg imul mov and mov les mov (bad) into notl inc pop inc mov ja fildll lock and push dec jmp repz divb mov sub jg mov dec push jg mov mov jg mov mov (bad) ja pop inc push sbb (bad) xor mov sti pop lds inc and mov in dec movl xchg add mov sub dec jecxz pop in mov aad and mov pushf jg movsb and enter inc lods inc pusha and imul sbb pop int dec jg mov fistpl hlt jg mov out fistp outsl push in mov inc jg es aam and je ja jg push dec (bad) lods or inc sahf xor jbe test sub jg cmpsl add dec push sub pop dec mov repnz pop (bad) jg inc xor and jg or mov jne pop (bad) xor out and jg (bad) jnp jmp mov sbb pushf and pop insl dec (bad) jg arpl jg mov loop jg clc push insb or gs mov and jae jo cwtl add in fcomps mov outsl jg lea arpl jg stos xor jp mov xlat jg or jecxz iret mov or xorl (bad) pushf aas lock into mov popf inc jb ss test jne aas gs test mov mov pop or inc mov cmp adc (bad) and inc inc and jg mov jl cmpsb mov xor es push in sbb int push lahf out cmp or mov pop dec movl test scas pop ss jae ficoml sarb lret mov push jmp mov jl pop cli (bad) jg lret pop clc stos mov lock mov pusha jecxz jmp in (bad) dec imul leave jg rorb xor pop jg and push mov ja cmc or push mov mov xor mov out out or xchg aad stos inc jg (bad) and mov jg out mov sbb xlat subb addr16 cmp (bad) outsl jg lret fstl and adcb xchg push ljmp scas inc iret add push aaa rolb je jg pop add testl jnp push cmpsl (bad) mov dec sbb outsb adc cwtl mov test int add les adc fidivrl mov push fs inc lcall add push (bad) mov pop aam pusha lods loope jg xchg cmpsl dec ficoml or shl mov jg js mov imul pop pop aaa es mov hlt in pop int dec addb in adc fucomi mov and lods daa (bad) jg xor repz jbe sbb mov xchg mov cmpsl jg adc outsl add xchg inc insl iret out repnz pop mov leave xchg inc jecxz icebp js js outsl pushf push jg movsl mov cs mov sbb sahf add adc mov jg clc jbe das jnp cmpsl jg in test jns mov ja lret mov mov pop xchg nop push fimul jg pop xor test (bad) push jg (bad) push jnp in pop jg je xchg loopne jns sti mov std out rorl in mov cwtl ret out jnp push inc sbb dec in adc hlt jle adc int3 pop pusha lret iret jmp jg out or mov jg stc xchg mov ret fs fwait ret mov sarb int mov and pop loope xchg inc in cmp arpl jg test subb bound js es jg jb lea add leave fidivl in sub inc jmp popa xchg stos cmp daa cmp pusha (bad) (bad) outsl repnz mov lahf out dec (bad) or test lcall pop jg out add pop ljmp (bad) pop fiaddl and stc xchg inc or jg pop xchg dec adc ja,pt push sbb cmp mov (bad) jg aad add loop mov outsl pushf sti je icebp jg add mov jg or jge push nop out sbb dec movsl es pusha mov lods dec jge int inc xchg push xor sbb repz dec jg insl and sub inc ds sbb and (bad) (bad) jg sub iret loope push fdivrs push mov call sub inc scas js push pusha lea push int3 jecxz enter cli (bad) sbb jg jp ds push mov mov jae fdivrs loop jo cmp sarb mov pop mov fmull mov aas loop jg fisttpll or int3 fidivrl int3 inc mov ret fwait cmp adc sbb push (bad) jo nop pusha jl push int mov inc push jg imul stos dec push jg sbb add jne rorb jg (bad) out push jecxz (bad) mov mov or mov push rolb jg dec rcrb mov add dec dec and adc lock jg inc out inc xchg or fimull sub aas xchg dec repz mov pop inc dec insl push and lock insb clc hlt ss mov (bad) jg push pop out cmpsl jnp mov pop mov test xor jecxz lods (bad) pop inc mov jg pop jb test add sbb call insb jg jo dec mov test mov xchg jae xchg int mov jg push popw add adcl (bad) mov add dec push lret pushf arpl cwtl inc or aas mov and dec in mov addb cwtl scas imul mov arpl sarl or fs mov insl test xchg jg jns pop push jne fdivrl push lahf inc ret add sahf pop or jmp std jnp mov jg insb push in push xor jg adc xor push incl mov sahf lods test cltd movsl sub jg shl mov int3 mov adc sbb (bad) mov xchg mov and aas aad cld dec pop push dec notl sub pop roll push pop les or or (bad) dec and xchg sti dec mov or or jg sahf out mov shr jg insb movsb out cmpl outsl xchg add aas mov mov inc sti xor iret ret jg dec test mov daa sbb cmp inc jg jno mov dec jb jg push mov imul mov jmp scas (bad) push sbb scas inc xchg cwtl xor adc in jg or test out xchg ret ss mov push jg inc add clc cmp imul hlt aad jg movsl or mov sar jns (bad) outsl cmp adc sbb scas jg les mov mov daa jmp int3 scas ljmp xor leave mov decb sub cmp adc add or push dec cld sbb jmp out (bad) icebp das dec fstl (bad) mov cmp and lret xor stc jg lahf add jg cmp mov repz nop xchg xorl in outsb inc cmpsl dec xchg xchg and icebp mov or das xchg sbb cmp dec push xchg push out mov loop pop idivb (bad) (bad) mov xor movsb inc ja jecxz sub sti dec mov pop push jne mov (bad) dec out xor hlt setns aaa jg shlb push jg sbbl inc jg mov fldl mov mov out or cwtl push (bad) lods mov xchg jns in xor add outsb mov add jg xor loop pop cltd fs jg scas dec loope add sub mov dec cwtl inc pop inc adc or outsl repnz add xor or adc sahf in mov test cmp mov pop jg std ja adc inc mov sub cmp sbb jg mov jno and jg rorl sbb hlt cmc jg jbe (bad) jae out aas mov icebp cmp cli roll mov test lea dec icebp daa jg mov mov lods scas out pop mov dec inc clc (bad) idivb mov mov in in dec xchg mov mov fwait mov lret xor cmp pop pop mov loope sbb test iret xchg in and dec cmc enter icebp lds popa sub sub loop mov xor and popa addr16 push jg lods rcl (bad) mov stos ret push rorl jg imul test arpl (bad) jg push push (bad) jl mov sahf sub fistpl movsl out inc addb jg mov (bad) aaa loop jg jo cltd dec (bad) outsl sub pop xchg push mov push punpckhbw outsb jg add fistpll cwtl negl dec pop mov jg shl pop dec scas mov and pop jg rcrl iret adc mov sub aas dec test pop test movsb fdivrs addr16 add hlt cltd imul jecxz movsb mov add test jge mov cmp mov aam movsb pop push out jg mov out mov push arpl shlb lea and mov mov imul stos insl (bad) jnp mov in dec cltd sub or cmp adc scas enter test xor jecxz hlt jb dec (bad) mov mov loop push xor cmp mov cwtl lcall pop leave mov xor cs mov gs mov adc (bad) mov nop fstpl mov call jg gs sbb xchg xchg pop and sub mov mov outsl jg push sub (bad) sbb jg (bad) cli mov mov addr16 es jg (bad) das jae popf fisubl inc cmp jns (bad) jo andl hlt cmpsl add lahf repz (bad) add and in jbe dec shll adc inc mov rorb out sub xchg mov jo sbb sbb mov mov shrl scas mov pop sub adcl mov cld into mov or pop js pop lret mov pop lahf or nop push pop push jg repnz pushf (bad) out mov sub inc scas sub cltd aas (bad) fstps test fimul jbe (bad) mov and jg cs in jnp pop jg jp inc dec pop aas ret cmc ror jg xlat cmp aam dec rcl pusha push mov inc popf and jg mov inc test cmp out (bad) jg,pn fdivl mov je (bad) jg popf lcall push clc outsl ss in arpl mov call push (bad) in jg xchg fcmovne mov andl adc daa testb subl sub jmp shll out dec xor jg push clc mov insl add sub nop movsl out mov ja pop sbb std es and xlat dec sub or dec sub (bad) das lods loopne or outsl lock mov push addr16 pop dec jg inc pop aas les mov nop cmp fcmovnbe jmp jg mov add jg sbb (bad) mov jmp jg lea ret scas cld jmp xchg inc dec xchg lcall dec bound jg xchg cvtps2pi and pop out cld and fsubrs into lods cmp add fwait aad sbb in mov xchg jmp movb mov cmp or out lret stc in in jg jno pop ljmp jnp inc cmp mov dec sti add adc shr push out stc xchg push adc std (bad) adc mov push ficomp jg cltd mov inc pop pop jle add or mov jae mov lret popf or jg out (bad) pop add dec cmpsb pop push adc pop jno daa pop sub int jg xchg gs (bad) mov mov pushf (bad) aaa shlb test bnd pop sahf insl scas jno ja push lret mov test push lcall out bound outsl mov ret sub sub hlt jle fnsave icebp push je in jg add jg daa cmpsl sbb clc repz loop mov jg pop xchg lds subb fnop mov sub adcl fcoms mov pop pop (bad) loop jg inc icebp les sbb inc adc cli leave (bad) jg cltd lret inc rcrb cwtl push push cmp cmp mov pop fwait mov test jmp pop push jo,pt jg xchg jge fistp addr16 (bad) lret outsb pop sbb jg and outsl cmpsl or hlt jg (bad) xor iret aas movsb aas xchg mov out loop push cmc jg dec xchg xorl (bad) je (bad) xchg jecxz insl pusha cmp inc cltd movsb xchg aas mov adc sti arpl lea dec cmp fnstsw cld sbb imul push mov cld (bad) lcall push je mov sti in test and adc xchg mov mov adc inc stos mov jno adc lret push and js outsb ds jno mov out mov jno fimul gs sahf dec jo ds (bad) nop mov (bad) ds test xor or push mov xchg push mov and ret mov in mov pop jg daa pop addr16 ja test ret push mov mov jg out (bad) lret scas push sbb lods ret in sbb add jg js jl insl pop push aas adc jne cld lahf aas pop test jae add mov mov lock (bad) psubusb inc scas les sub outsb mov adc sub jg and pop jg push mov mov dec popf cli inc test sub jg sub outsb jecxz inc mov gs (bad) lods sub push add insl (bad) in aas mov out cmp mov cmpb data16 (bad) jns jg push dec pop push adc jg xor les xor js cs jg xlat jns out fnstsw mov pop push aad cmp jg ss xchg inc (bad) xor aas in xchg insl sub and mov imul sbb dec (bad) jg inc jge cltd push push fwait jno jp dec sbb jno (bad) mov pop enter jg jns push xchg dec inc mov aad dec push fs fidiv mov adc pop jo jne (bad) repnz dec push fstpl and push xchg inc dec subb loop mov std jl mov mov (bad) lods lods test test outsb fstpl jg pop mov jg,pn cld add pextrw jg ljmp jg mov gs insl leave mov mov pop loopne cmpsl dec pop mov mov push cmp daa xor inc add (bad) fidiv scas mov movsb jg repnz adc loope mov loop jb in jg xchg loopne pop mov repnz jg inc in add sbb (bad) mov fcmove sti stos loopne mov jp sarb mov jg adc repnz pop push mov fcoms mov lock xchg mov repz ret xor movsb jg bound pop cmp jg ds std mov jl xor or mov mov ja dec lret xchg pop clc pop jg cmp push mov aas std jecxz rcrl popa jg add insl daa lods and mov pop adc jg jecxz ljmp push cmp fidivr cmp push arpl movb push in cwtl into xor jecxz dec push popf pop cmpl jo bound popa jge fwait jbe aas loopne jae sub sti jl xor dec popa jo jg mov lods or mov sbb in pop jne mov inc inc mov je jbe imul arpl xor xchg inc test mov in xor add call cmp fwait enter lock stc jp sub jg mov insb mov cli adc mov mov and (bad) sahf mov out mov adc mov jg lcall jg ret pop shll sub cld jg into push int3 push fwait lret xchg ret movsb xchg xlat inc push out jg and or stc add (bad) in jg in sub mov jg insl stc int3 roll jg out ja xchg push push jg cs out push jg (bad) dec push aam mov loopne je dec test cmp mov std mov ret (bad) inc mov push (bad) dec mov add xchg mov add popf push stos clc imul or jg and stc (bad) lea ss sbb mov hlt inc (bad) sbb jg call fldt jg shufps jg std cmp add subb call (bad) jg bound mov (bad) ja arpl insb pop pop jg mov fdivr inc ret (bad) mov nop mov out adc lea mov jg cwtl je outsl xchg sbb mov and pcmpeqd (bad) (bad) dec cmp adc fisubrl lret xor nop or (bad) repz adc lds sbb sub fnstsw jle xchg rorb xor sahf shr jnp mov adc ss test mov cmp mov aas iret pop lea push dec decl xchg ret dec xchg dec cmp xor xchg adc mov adc dec mov dec inc fiadd add mov outsb mov jg lcall arpl (bad) out std js (bad) jg enter sub les jbe add std cmpsl loop pop and mov pusha dec fmulp and in jp lcall adcl mov jmp psubb cwtl divl hlt mov push and daa or push lret cmp sahf pop sub and jecxz jcxz inc push out jg dec insb or jg jmp andl cmp xchg mov jns popf cli mov jg cmc orb mov (bad) xor or mov inc sub int3 shll inc outsb pop jg xor push pop jg in push idivb orl inc jg inc in popa cwtl xor out aad test jg push lahf mov jle,pn xlat ret lods mov dec call jnp int3 fisubl and ds popf jmp mov mov dec sahf pop lahf jg stos fisubr dec dec add in fistpl jae jnp clc jg (bad) sbb std sub pusha jg pop sub push shrb rclb lods out lret sub add outsl push fld cmp push pop lods sbb dec jg pusha push xor fisubr mov cmpsl jno ja out mov lea push push push sbb leave jg and sbb sahf mov and ret movl inc jg sbb lcall lret js lea fistpl mov add sub jg and xor rol sub lock lods push mov in jg cmpsb int addr16 pop sarb mov icebp dec cmp jg fidivl std test push stc jns (bad) push cmp lahf xor push xchg push inc jg push sub dec lds xchg xchg fisttp hlt leave adc jmp sarb sub stos adc mul lahf mov jg sarl lds mov adcl mov int3 dec sahf fcmovu jg push adc pop mov sbb push pop pushf or lock enter into mov jg sub mov push push jo cmc cmp jecxz cld mov xchg inc gs jg xchg nop js (bad) rcrl imul clc adc xor loop popa xor addr16 xor mov jg in and mov jg cmpsl or (bad) cli fwait int3 rorb xor xor mov xor push push test enter (bad) jp pop lahf xchg out outsb push aaa mov xchg sub js out je jg clc (bad) in jmp mov pop push add pushf dec pop adc and mov sub daa into mov mov pop mov cmc loop int3 (bad) les addr16 dec jg andl imul ror es repz outsl pushf or push stc nop mov push and adc xchg popa jo pushf jg fdivs pop lock jg mov rorl or push xor pop jns int3 add or pop push xchg outsl cmp adc mov pop mov cmpsl or mov (bad) lret js rcr mov xchg aas pop es jnp repnz rorb inc sbb ror icebp jg fisttpl add sbb jg jmp xchg lea std pop pop mov lds dec dec push call cld push (bad) lods pop push fnop pop push ds xor outsb pop pushf mov xor jno xor dec mov cmpsl dec lcall outsl pop mov lea andl inc xchg and sub fdivs imul pusha call cmp mov insb nop negl sub in jnp jle jmp inc xor pop jg jo pushf int mov sub cmpsl mov aas js rcl out push dec call cmp mov in (bad) push push pop loope jo jg lcall loope repz bound arpl outsl jno ljmp jmp les push jo lea in cmp xchg leave pusha jg mov imul test movsl jg sbb pushf push pop stos jns pop enter out lret pop pop mov add mov rcll test mov add dec lock scas (bad) mov pop sbb std mov in loopne mov movsb aad pop arpl adc jg cld adc js jp mov and inc jg fbstp sarb out ja mov out jmp lahf add stos inc xor sub jg gs and mov push xor mov fmull lret fldcw dec jne mov jg jge jl cmp mov sbb inc pmaddwd and shrb shr pop lods inc ret pusha fdivrs add mov dec iret mov in cmpsl adc mov dec and arpl pop jae sbb jmp call cmp lds test mov mov mov pop out pusha aad add imul test mov sub jb push mov fcmove jg (bad) mov ret pop fistp js bound sub outsl dec dec push aaa ss cmpsl jne mov jg es mov cmpsb lret xor sub jg push jmp je in push sub call imul push cltd imul pusha push push dec add insb (bad) jg push and push pusha sar adc ja inc ret inc out mov cli inc jb imull dec ret rcl dec cmp orb std cmp lahf ja mov fistpl push jg,pn pusha pop (bad) popa stos or xchg inc (bad) pop js sbb jno push aas push insl xchg jg push pushf add aas push add addr16 aas dec sub ret dec add (bad) sub movq es pushf cltd rclb test call dec jg fwait lahf js mov orl lea cmpsb add xor aas in add nop dec jge pop mov or mov call daa test jg out mov or jg int (bad) outsl sub cli pop push loope mov mov (bad) int3 xorb out inc sbb jg push lret pop xchg add mov in dec loopne js cld jmp lret loope or mov xchg movsl or mov jno rcrb cwtl js mov jns jnp cmp xor repnz pop dec add adc cmp jg (bad) mov sarb pop es shl out adc aam mov mov cmp add mov pop push or sub aas inc dec je jl xchg dec insb jnp arpl loope test jg or sahf adc lahf outsl lock sbb adc pop sbb outsb xor bound clc mov jg out popa dec jl sbb lret (bad) sahf mov in inc mov and (bad) sub mov cmp jg mov xor sbb aaa jb xchg in mov aas test add arpl imul mov fstps pop frstor aad mov mov inc (bad) cmpsb insl lock lods jg sub xor ret inc loopne cmpsb aaa inc aas into pop fidiv cmpsl data16 fldenv leave jg out xchg dec (bad) jg (bad) fdivrl adc add cld jmp jae,pt fidivrl push in xor push xorb mov adc cmp jns in (bad) sti cmp cli mov outsl in fwait xor jae fisubr dec xor fldcw jle xor hlt pop adc jg repz inc bnd add adc out jg fwait stos and jg xor popl loopne lret and mov lds arpl test inc mov jp xchg decb cmp lods xchg and cs das mov roll jmp and es into mov sti loopne xchg ja cmpsb xor jg orb jg insl movsl pop int3 aam dec sti adc xor mov sarb xchg aas cwtl aad push popf mov jg in or pop or aas ficom (bad) dec jbe jg adcl jmp pop shlb mov or pop test fiadd loope sub mov mov jl push std pop dec popf fsub ret jecxz xchg and fs jg in cmp cltd push leave js stc and lds mov outsl das mov push stos mov cmp (bad) outsl daa push push scas and incb xchg mull insb jg leave mov shrl in jg sbb nop and sahf test lds xor mov insb pop and mov das jg push mul test dec inc insb dec or jg test mov xor jae pop (bad) dec dec mov push js nop hlt or outsl cmp (bad) jg mov std jnp add inc cmp lret (bad) push int ficompl pop ret pop jg mov dec lock fwait outsb mov pop into in jecxz scas pop pusha jg scas pop or mov jg mov xchg cmpsb adc dec add roll xchg or aaa jo pop cmc pushf and mov mov jg dec sahf lock jns sarl xor mov xor xchg out jg cld sbb sbb pop xorl data16 mov out adc daa rorb or xor xlat (bad) mov mov shrb jg ret cwtl cmp bound xchg scas arpl jg fcomps jg adc aas insl adc lds jg enter xchg xor jg adc hlt ret lea mov in inc sbb aad addr16 jg out pop cmpsb lock (bad) pop out mov fcomp jg mov mov jle push xchg cld out popf jbe fsubrl stos inc jg cs hlt outsl cmp xor inc pop pop adc jg sbb testb out jae lds xchg popf mov adc mov sarl mov pop sub pop adc and mov push dec daa pop mov jg sbb xchg leave cmpsb fdivrs jmp jl out imulb imul (bad) ljmp xor cmc jg cmp int (bad) leave aas jmp outsb test addr16 mull dec dec andb scas call out and mov out jae (bad) icebp sub sbb sbb add mov push xchg push jle loop mov cltd dec dec adc add sarb jecxz loop std and es jb or sbb add jg push nop dec adc cmp call push cmp das cld leave mov jg nop (bad) test fdivrs in rcrb jg stc lea aas mov ljmp aas ror aad aaa fs dec sbb mov adc cmpsl jg add cmp in jge dec inc jmp js sub push xor pop fdivp aaa jg mov xchg mov ds int3 in dec jg sub lds mov jg push ja adc or jg addl xchg jg aas add add stos jg mov mov dec xor mov xor test jecxz stc testl inc sbb test dec pop jg inc rcrb mov xchg jne shlb sti (bad) mov push outsb push mov das mov pop or jg jp mov jg adc adc mov in roll xchg push add inc xchg mov xlat (bad) arpl cltd jg cmp jb int js test pop push mov sub fcoms xchg jg testl scas jg stos lahf lods imul ret xchg out aaa jg lock lods add mov lods test out jg xchg push xor sub int sti mov sahf lret movsb into call fnop add mov jecxz push sbb nop cmpsb inc out dec jg dec iret shrb mov xlat adc (bad) xchg fdivrs sub sbb dec cs mov jg mov ljmp adc test sub fstpl and jg je mov jg faddl outsb icebp lcall push rclb jl push inc cmp cld mov mov mov adc jg je adc pop std (bad) jg test jge aas in inc inc and insb inc pop mov inc fwait aad insb test dec mov mov push add outsl or xlat ss sub jg jmp add push (bad) nop and jg xchg pop std jp pop loop jae pop movsb or dec cmpsl insb jg lods mov ljmp jge lock js aad mov div add jg mov roll jg xchg ret outsb stos negb lahf test enter xchg push test dec sti pop mov push pop fs push andl xchg movsl cld or mov dec inc xor and adc and ljmp cli test fist push jg sbb test div in stos xorl sub adc lret in pop inc adc nop sub mov sbbl lds mov (bad) shl in inc fldl inc mov cmpl push stos push negb xchg outsb jno in or xor pop mov pop jg mov lret push mov adc and mov sahf jg decb rorl sub int3 jl punpckhdq mov inc ficom jg fucomi xchg repnz mov sub cmp jg les cwtl enter repnz xchg jg xor out pop or mov into or add push pop xlat ljmp test jo lds mov jmp push inc (bad) sbb or inc sub inc xchg cld inc stos jg out rclb push aas mov shrb fsubrs jg pop out sbb xor int dec rcrb (bad) fldcw sub xor pop stc jp aas adcb mov sub inc dec les aas jge aaa adc cmp xor pop push dec stc cmp cltd aam and aas mov int dec (bad) mov adc xchg add popa lahf je pop leave cmpl and sbb add imull push jnp dec cmp xchg dec cmp mov out loop mov test mov cmc andl test cmp into (bad) jp jge sub pop push pop sti adc dec (bad) movsl aas (bad) jg cmp lret adc and into fwait mov jae fisubrl mov jnp jno aam jg icebp inc rorb pop jg fwait out daa jp outsl out push adc inc pusha mov mov jo jge add fsts dec mov inc jle push and or repnz out mov cli in mov jp fcompl add add imul push xor in loop jg les xor add jle xchg cmp mov adc (bad) jbe jg sbb add sub xchg and addl jg mov je jg sub stos mov pop addr16 in outsl fisubr jg and in jg push fldcw jo jns sub std ret out xor fidivr or stos stos adc pusha movsb ror addb idivl ja add lcall sub push ljmp popf lcall (bad) fisubr les dec and pop mov iret pop lret xor (bad) inc adc jg fs lahf mov int3 jg shlb add add push pop inc pushf jg fstps jae mov jo adc jp adc sahf roll push inc movb out and test aas jg mov outsb pop sbb fwait sub pop cmp psraw loop mov pop push or inc mov cmp cmp add mov js sub jecxz jmp sbb jg repz mov int3 mov xor sub out dec pop push insl cwtl mov pop jno push repnz pop jg xchg sarb push aam mov cmp scas ja (bad) jg jne (bad) fildll push out lret and jecxz jbe dec add mov ficoml or mov dec jg jmp dec add lret mov push jg mov mov mov sub jg aam adc push jg fistpl jle adc jg mov (bad) sti loope pushf xor cmp (bad) je jno lahf sub fwait xchg sbb mov cs idiv mov call jg rcll mov loop jg pushf shlb mov fildl jecxz xchg inc push aas cwtl jo test dec push dec in mov adc adc hlt (bad) mov ret test dec jl or mov jg call mov xchg inc lret ret cmp mov jg lcall jg scas xor cmp notb cli pop dec cltd mov out sbb mov dec mov jg clc je pop dec pop mov mov (bad) jg fs sar jnp lods repz inc mov in push jg add stos jg,pn es sub mov mov sti pop xor lahf aaa xor mov jg incl xor jg pop in inc pusha sbb mov scas pop pop insl dec push (bad) aad mov mov jl outsl jg ds cmp and and bound xchg stc jg (bad) hlt and out repnz jg es mov sbb jl mov (bad) jg jno sti dec movsl pop push jg repnz enter mov test xchg cmp cwtl jns pop dec pusha mov jg sti clc ret in pop push jg test ja fdivrl lock lret jo sub jg dec clc pop pop fildll mov dec pop ds pushf cmpw ja hlt jg lret jmp ret or sbb mov mov sbb inc popf fdivl xchg cli aam shlb leave jg ljmp jg loopne xor mov icebp xor jmp or push xchg cltd mov push int xor jne fwait dec xor sbb sti (bad) test xchg inc and xor ret pop cmp jbe out pop lret in loopne jg nop ficom loop je out inc fsts jle jg ffreep sub jg int aaa inc bound mov pop jge mov inc dec inc xlat jg jns lahf push cmp sub jge lret out jmp push or fnstsw fsubs sub cmp xor in (bad) push push adc cmc inc outsl loop jg sahf xor test in jg pop dec add jae cmp (bad) mov jnp push mov fwait or jg cmpsb pop mov cmp (bad) mov ss fisubl sbb lahf jns fmul inc fisttp mov xor jmp fwait cmp imul jg (bad) shrl into pusha nop jg adc loope xor mov cld push pop jg push jbe or cmp jmp jg fnstenv and out mov (bad) imul clc sti sbb dec popa dec lock jg xchg out cmp stos xchg cmpsl adc mov add sub jg mov and jg push es jg add aam or xor sub adc in mov shrb test xchg push xchg sarl xor and xor icebp and or mov aam fs loop add das jg dec cmp sub cwtl inc jg xchg pop or add jg rcr sbb jg cmpsb mov pop adc out mov pop incl xor inc mov stos nop cmp add cmp adc ffree pop fs mov pushf pop jp fnstcw jnp push in mov adc into sbb jg int3 aaa rorl add scas inc subl push sbb mov pushf arpl push inc pop lods cmc (bad) jg daa in jecxz repz push push pop mov mov jg mov ret cmp mov cmpsl jg sarb jae jg push (bad) mov sub aaa sbb stc mov mov notb pop and or pop mov loop aam inc xor pop lods ffreep iret jg mov inc (bad) xor je push lea loope addr16 stos jg scas jge mov jp jg sub es push adc cmc rorb scas call or jg mov xor cmp adc or int dec adc mov pop jnp gs rclb jg adc movsl cwtl sbb jg mov mov jg stc push rolb fs test lods jg fcoml cmp stc out dec mov daa loope incl inc mov mov ret jg mov xor loopne test push outsl cmp mov jg imul add xor dec fdivr aas stos or in sbb xchg cmp aam mov out sbb mov addr16 mov jg cmp pop mov push mov mov xchg add dec stc lods jg cld lock cwtl addr16 jg insb jae sti inc mov inc inc int sbb dec pop or push ljmp mov xchg out clc add hlt scas jecxz aam lahf jnp sbb loopne popl shrb aas sbb mov stos xor (bad) jbe pop lahf jg push pushf push inc lret jg sbb fiadd test ljmp mov mov out fsubl jg pop add (bad) push pushf pop (bad) ljmp push inc jg lds jg or sar inc imul dec cmp sti (bad) gs stos push cmpsb sub cwtl fbld dec mov cmpsb sti push push jo aas mov sarl cld mov fbld xchg pop jns into nop ja inc inc cli jg xor sahf or clc and push scas dec or jbe mov mov jg,pn pop clc sbb cmpsl out aas ss pop dec test pop inc nop mov in push and mov dec dec adc aad fdivrs dec and mov inc (bad) mov xchg stos push sti jb sti xchg jg push stc adc jg cwtl xchg orl addr16 testl out push loope paddw movsl xor (bad) mov (bad) int3 mov scas xchg jle jns jle jmp jbe fisubr (bad) cmp insb shrl ds fnop ss mov mov xchg inc shrb iret jecxz imul aas add sbb jmp pop mov jle xchg cmc push insb adc mov jno out dec (bad) pusha sub sub add imul shrb add pushf add into push cli aas jg pop scas sbbb mov hlt lea push xchg jl pop addr16 ret pop test fs imul cmp ljmp fstpt xchg je test dec push sbb add aam adc or fiaddl ljmp call dec shll add xchg mov icebp ret push ljmp mov mov xorl xchg imul fs and pop cmpsb data16 and sti jp shlb rolb jl xchg inc insb jg pushl into jnp pop and mov sub je es arpl jmp imul fldenv mov mov mov jns sub jg add xor pusha addb and push inc lods hlt insl jbe dec push outsl sti fwait out icebp cmpsl adc jg lea fidivr and mov jg fcoms mov pop ss fs lods lock pop jecxz or mov addr16 jae jg les loope mov in lea nop jg mov cwtl (bad) loopne jg pop adc in jg sbb fldl mov jg ss xchg rcl movsl mov (bad) sbb scas cltd leave pop jecxz test jge jg imul add jg leave ficom popf insb jg sbb aaa js data16 jg inc pop sarb and inc decl dec fistp and insl sbb pop mov mov mov fbstp stc mov jmp ja pop inc mov dec nop pop pop jg push popf daa sbb mov std mov sahf sub jg or (bad) or aas fld1 mov cli sahf js sub jle pushf jle push jg jb lret scas jg sub and bound std aas dec jbe popa int3 mov jg lret push loopne shrb mov or imul jbe add jg mov (bad) ss xor shlb mov lret pop and push push fstps sarl fwait jae mov lea mov outsb stos scas xor jg gs jg pop pushf test popa mov cwtl mov mov push popf jbe mov add xor sbbb add je jle jg ss roll adc pusha push xor add iret inc jg data16 xchg js inc mov fwait sub mov (bad) comiss add cs jg (bad) (bad) hlt setge aam xor inc pop inc jg push in add in sub xchg fs into scas mov and js scas movsb insb push sub outsl fwait mov dec push sarl pushf aas jno pop inc es hlt xlat ficomp ret je ficomp cld inc ds fs xor jg inc mov jle xchg inc scas into push mov sti or push dec mov mov jmp add rcl jg andl lea adc mov jg das sbb bound xlat jle mov mov mov addr16 or mov inc xor pusha jnp test les js xor bound test in or jp pop incl dec jg in stos inc xchg cmpsl inc insl jne cmc xchg cmp inc cmp (bad) das jg or roll sub out mov cmp sbb mov test sahf (bad) addr16 jns insl adc lods int pop mov jb hlt leave inc jg adc sahf mov or fistp pop push ret push mov pusha cmpl sahf test xor popf jg fistpll lock fldenv ret dec sbb inc push jge inc lret sbb mov cmp and jle mov movsb jg dec leave fwait in sbb ret fiadd out test cmp sarl in gs pushf test lods (bad) test aas add sub mov cmp lea leave xor jl mov ja xor fiaddl inc xchg jg jle out inc cmp cmp popf popa ljmp std lods cmp decl ja push (bad) pxor fidivr dec jns dec adc xor outsl lahf scas mov mov mov sub jl push sub cwtl movb pop inc inc je lahf repz enter push lds pop stc and cmpsb js jne pop scas clc cli mov dec jg insl xor fsub dec jg out add (bad) jg les enter dec mov popa inc aaa inc fnstsw jg shlb push (bad) outsl dec pop jmp push push mov add cltd or int dec les jg in test sub movsb jg xchg mov cld mov outsl mov mov jne (bad) sub jg fstps cli pusha add int adc std pushf or mov xchg loope pop jbe (bad) out imulb or xor mov lahf xor mov jg ja or push cli jmp xchg test pop fisubl xlat push xor or push (bad) mov push imul cmpsb jne jp jle mov and fild sti jo ljmp ja fstpt popa xor dec lock pop call or inc mov mov rcrb inc ret rcrb fnstcw mov mov dec dec jnp in lods mov movq jmp jg scas in in mov movsl jbe and movsl xchg jl imul push jg repz fildl lds jp,pt loopne jg sbb andl insb fwait (bad) scas repnz daa cmp xchg mov mov add out push mov push nop mov add fcmovu shrb (bad) lea xchg das push add std popf jg lahf push enter imul fs cmp or mov jg xchg add pop pop jg dec cltd std rcll cs int3 enter inc push (bad) lock adc jle cmp roll mov and jne jecxz jg lret pusha je in icebp jg rol push repnz jg mov aad mov (bad) ja or mov jae out enter fiadd mov adc xor inc test or ret add inc and sbb jae push jg nop jmp push jg es jo movsl jl push call orb mov jg fcmovnb push loope test (bad) pop sbb outsb int3 cmp jg xchg outsl hlt sbb mov mov test mov inc dec or nopl jle and pop adc mov adc jg push lahf out cmpb pop inc pop mull test movsb outsl fs out push jg mov sub cmp inc sub mov inc jg arpl aaa cmp add or cmpsl ss xor inc mov xor cmp sub adc lds es aad sbb jg loop push cmpl je inc inc lock aas push rol xchg jg test (bad) mov ror dec dec out mov pop adc das pop sub or scas jb push loop ljmp scas pop (bad) out xchg sub leave sbb push push mov mov les add jbe push sub mov fnsave inc sarl loop mov test inc ljmp mov mov cltd mov pop mov sbb std out rclb std iret call arpl fldz sbb xchg (bad) xchg adc rorl push inc (bad) xor dec hlt loop bound sub stc adcb int jg faddl das orl xchg adc pop pop lcall lret les fsub xor sub adc cs mov fs in push iret add sub call push push ffree jg add faddl aas xchg inc jnp or pop inc mov mov pop pop insl fsubrl jg cmp ljmp scas aas push bound aaa mov lods pop std ljmp mov pop lret push lods mull mov xor inc or xor push push push inc popa and stos addb sbb cmp mov js jl inc scas clc sub lock jg (bad) outsb add mov adc sti pop cmc bound pcmpgtw xor lods jg or jle test mov mov sti jg mov cmpsl jno add hlt pop xor rcl sub subl inc ss scas xor mov push or jg cmp inc scas xor xor in sbb outsl sub das jns jae sub xchg mov mov cmpsl mov dec inc inc dec fstpt mov insb push into lea test inc ret mov sbb inc adc dec push mov in dec jmp cmp scas sub (bad) lods jg ret pop jo ljmp iret aaa cmpsb inc jle push mov and cmpsl inc push jg push idivl jbe ficomp shrl jne mov clc pop mov pop mulps dec inc pop jg or test pop das cltd aas pop or les inc jb insl aaa aas jg xchg push cwtl mov or (bad) jb cmp clc sti add or addr16 sbb pop inc jg andl dec mov jns repnz or mov insb mov test incb jae jg jnp inc std or add loope pusha pop sahf sbb push mov xchg mov jg (bad) or adc rcl cltd sub mov ja lea xchg jg or leave and (bad) outsl mov push and out jg pop loopne jmp idivl xchg push (bad) inc dec jg mov sarb loop pop xor adc ja xchg aas daa ljmp jg adc mov out pop xchg movsl and mov jae push call nop sbb jl inc pop xchg popa or push call inc pop mov dec push mov inc rcrb jg cs sarl fadds sahf movsl iret ret rcl pop cld insb and inc sbb loop icebp jge push mov dec pop xchg mov push jle shll add mov push jg mov outsb bound add popf imul test out adc ret into fmull lds mov cmp sub mov xchg mov pop ffreep pop movsb test push jo outsl mov add mov pop pop insl add pop and jmp dec jmp outsl cmp jg in sahf aaa out xchg jg lods push cli mov sub gs loopne mov jg xchg xchg (bad) mov sbb xchg jge inc jg pop inc adc push sbb mov pop loope adc fs mov ret int3 nop mov sub les pop pop into hlt es movsb scas popf adc loopne data16 stc inc mov test ds mov jmp sbb pop jmp cwtl sarl mov and jg xchg imul pusha bound lods pop jg lret jmp outsb jg mov push push mov sti inc (bad) push inc enter hlt call clc lcall std jg dec inc repnz jg outsl or jecxz pop jno int3 sti icebp adc les icebp sbb negl push jb ja dec mov jg movsb pushf xchg imul imul insb dec std test inc lods sub shrl sub jns mov mov mov xchg rcr into mov jg ljmp leave dec out jg add cmp sub es movsl cmc ja adc dec push dec in xchg inc (bad) mov ljmp sarb sbb mov mov jg push pop arpl mov mov add lret jge push push mov imul inc outsb add add mov cli fs pushf ret and jg sub add inc out fs leave add int mov pop mov jg sbb sti inc jg fisubl inc mov sub sahf imull pop outsl fwait in sub cwtl ja and les jg adcb and jg,pt (bad) bswap lea mov jmp sarl mov or jbe xor xchg cmc mov mov mov idivl inc sahf jecxz (bad) movl dec outsl (bad) dec fwait adc mov jge jg fistp jg sbb mov pop or scas xchg ss jg lret and imul cmc loope jns push stos xor aam fidivrl loop ret mov stos mov jecxz push mov sarb lret pop mov arpl pushf mov mov (bad) iret shrl lea push cmp jg xchg cmc loop cmp sub mov popf xor cmpxchg cli xchg int3 jg jmp and xchg daa or adc mov push addr16 inc mov mov sti pop addr16 icebp pminub jg rorl jg lock sub (bad) dec sbb or pusha js pop and lcall mov aaa pop pop jno jb jg rcrl xlat push jo in lds ss add xlat jo jg rcl mov or cmc stos fs mov jg push (bad) jmp mov dec push mov or mov and orl aam mov outsl es sahf jg dec out fisubl dec imul pop jb inc xor addr16 jg out mov dec aas xchg rol inc test imulb push imul jg sahf clc in mov lods xor jmp mov sub pop jb cmc jl sub fbld push and add push insb pop cmc jg adc or pushf sub xor jg lods mov mov xchg ret fsubrp cmp inc jg repz mov imul xor pushf push sbb mov (bad) ficoml xchg ljmp adc cltd inc add mov fidivr push add xor dec cmp mov popa cmp xor ja fdivrs xor into sub and adc shl test insl jg pop adc mov fs mov cltd andl in movsl and data16 cld jnp enter inc mov pusha stos mov jg arpl inc sub std (bad) jg data16 dec pop rcll ja scas aam add lock cmp jg or xor inc pop add pop jl data16 cmpsb mov mov testl push mov cmpsb sub inc fnstsw jecxz (bad) xor or mov sbbl or mov and push test sbb loope sti out lret jg nop (bad) adc and mov int sti out jns lret stos les adc mov popa arpl ss cmp cs add inc mov scas jg pop ja popa test mov xor adc sub hlt jg pop in fdivrs ds pop xor rcrl sub jb mov popl jg push in insl popa fsub jg gs lock cs pop jg sub ljmp or push inc cwtl jg or (bad) (bad) pop pop mov cmp add (bad) pop jg idivl jg or test inc imul fxtract pop pushf stos jns mov (bad) out or jmp and and xor js (bad) sahf xor jno rcrb sti or inc and fwait jg adc rcll sbb and in aam pop rcrb inc jg call cli inc mov movsb push aam mov pushf jg fs and jg jnp push mov in xlat insl lahf jg mov add jg xchg jp ds test jg jge aas jno idivb sbb test jg enter loop mov jg scas pop jne mov call xchg aas adc pop dec and cmp orb sub push mov xlat (bad) mov sub jecxz jbe inc jg out mov jg cmp push and nop aas sbbl inc pop jae dec mov in into mov mov ret addr16 adc cmp inc rep cmpb adc int3 lods jecxz mov pop jg enter ljmp cmpsb and ret xlat repz loope in insb jno in pop pop and (bad) or jg inc lods or gs jg out pop sub sub adc sub data16 iret mov pop push cmpsl jg lret inc repnz aas rcrl sub mov popa push push ds mov sub ror inc incb dec imul cmpl push pop inc jg adc mov mov pop test int pop dec add popa sarb std mov inc ds (bad) aaa xchg xchg and lods push pop rcll inc cwtl jp xchg in dec cmc cltd bound jae or and dec sahf sbb insl pop js add dec sbb cmp pusha into adc mov mov (bad) cli mov cltd fistpll mov cmp (bad) mov sarl popf adc fcmove xor cmp je mov dec inc ss mov jg,pt loop sub jg xchg pushf idiv mov or adc mov leave lods ror out stos inc jg cld inc or push jg push or jg mov cmp (bad) mov mov outsl fsubl dec js fidivrl enter das std inc jg sub lods push sar je xchg pop jo xor loopne in sub hlt loop rcrb mov scas test jg in jnp in add jg cmp inc out ret sbb in repz jns (bad) mov js add es or or jecxz aas rep in shll dec mov xchg negl mov xlat dec jg addr16 (bad) mov out mov hlt jg in scas inc roll jnp mov xor fisttp mov inc inc mov push cmp lods dec in insb mov mov ja (bad) dec pop in jg lahf adc fildll mov addr16 pop pop adc push push lods imul mov in sub (bad) pusha mov cltd inc or (bad) dec sbb jg cmp (bad) sti dec hlt add pop mull push jg push inc cmc jae je in outsb jle fimul repnz cwtl pop fstl fsubrs (bad) aad fs xor sub jg popf jo inc sbb mov or jg dec or jbe rcll movsl sahf fwait mov xchg add xor mov mov dec fldenv sti jg dec loope xor inc jmp sahf xor mov repz or cltd pop loope adc mov movsb sbb sti mov pop jg aad fimull gs jg repnz jmp jg,pn fcmovb rolb jl decl test xchg or lahf sbb addr16 inc das fidivr dec or je scas jg lcall jg cltd aaa xor jg bound lret cmp loop push clc jg mov imul mov jg ret inc xchg stos mov push xor and gs jg in test scas inc push cmp dec xor xlat imul jg mov notb cmpsl xor icebp arpl hlt mov mov mov repnz imul rcrb (bad) cmp test mov pop xchg sub ret xor mov xchg adc cmpsl ret pop pop addr16 lds mov push hlt add lcall mov pop mov mov (bad) cmp pop loopne stc and loope push jg (bad) push loopne in sbb sbb adc mov data16 or xchg dec lcall adc enter mov icebp outsb fsubrl cmpsb scas arpl and push xchg xor mov test jg sub ret push push dec jg fsubl pop out cmpl or sub clc in jne dec cpuid lea push inc (bad) jg in push repz xchg mov adc daa xchg sbb push jbe dec sub in pusha push fldcw dec add or ret das jae mov (bad) mov xor repz aas insb int3 popa ficoml je inc pop pop idivb outsl xchg scas jmp pop pop lret push scas adc daa mov jg jb popf pop add call cmpsb movsl push sub int sub pop arpl add jge and adc clc push popa aas sbb adc jge jae out inc fcmovbe add add movq test jg loope cli (bad) lcall mov jg or xchg ret mov jne arpl jo int push sar test (bad) incl jnp jg out jbe xor iret in jl xor paddb pop stc stos dec out mov test jg cmp xchg jg mov xor xor or nop mov loopne lcall iret shrl xor jbe dec sub into lds push insl aas leave mov psllw push mov pusha daa xchg pop cmpsl jg inc mov jae or push (bad) in adc mov les mov mov lahf mov push mov outsl aad sbb outsb test jle (bad) jmp insb add xchg outsl cmp int3 push push lock sahf arpl push das add std ja ds cmpsb in (bad) aad loope jae int outsb and scas jae pop xrelease push jg mov aam inc ja mov cmpsl add adc dec dec push mov mov std mov dec dec push mov jl jp fidivrl repz fwait jle xchg cmc mov jbe jb jne xor add mov loop mov test lods mov mov inc dec loopne mov ja int3 mov or icebp pop cli dec and sbb neg xchg jg inc out lahf (bad) jge mov gs add adc int3 pusha add cmpsl cmp dec jg add (bad) das out (bad) aas mov jns mov jg adc enter lahf sarb push xor jge stc jg xlat sbb jg push cmp xor jg add xor lock xor and clc and jb das es adc add mov inc aad jno jle mov pop jecxz js in xchg loope ficompl mov jno xor mov jg fs mov loopne jno dec jg ret jmp lods (bad) xchg pop lret pop (bad) mov arpl bound in andl mov movsl divl jg in push out fidivl lea jg sbb ret clc mull lahf in pop outsl (bad) push dec sub jg adc pop loope loope jg frndint dec pop cmp add lods out insl mov lret xor inc pop pop outsl and sarl xchg sub push or jo xor (bad) call (bad) sub sub pop imul jg lods pusha aad sahf cld adc (bad) mov cmpsl jg out jge jne inc jg add outsb jno (bad) jg movsl out xchg pusha lcall enter pop aas sbb mov mov mov pop cmpsb adc and jns pushl xchg rclb mov fs nop loop xor shlb xchg dec mov (bad) mov mov xchg lret jg repz loopne inc push jg daa push cmp sub (bad) pop xchg fs mov jle jae fnsave movsb aad mov movsl lock inc jge mov push xchg cmp insb push xchg cmp jg mov cmc leave add jg mov sbb sbb and xchg aad push (bad) insb xor jmp xchg xchg pop aad mov xor mov pop mov jg push push adc xchg mov adc test dec sbb ret jp aam add push or pusha cli test stos jg es insl lods pushf cmp fidivrl prefetchw push pop das repz test pop cmp cmp xchg inc jl pop mov cld jg ror (bad) push mov pop jbe mov jl jg mov sbb jg out push sub mov lds jnp adc jg push push pop jno int pusha xchg jle cli rcrl data16 jmp in aas outsb pop mov mov cmp enter stos jae jns aas pushf dec xchg test sbb jg mov jae syscall jg (bad) lock aas adc jg lods or test inc jp decl jg and negb inc sbb or dec inc sahf jno jg popf fdivs ss loop add pop ljmp mov nop pop mov push or dec stos fld popf jg aas dec xor cmc bswap inc cwtl aas xchg mov nop (bad) mov cltd pop jg mov jp jg dec test cmpl fld icebp jg xor insb mov jb jg cmp pop sbb out (bad) jmp xor or popa pop lods (bad) jg mov into lcall fbld mov test out cmp lret jns inc lahf xlat jg cmp std jg movsb imul sub cltd repz nop jg ljmp jg movsb std pop sbb outsl push push jmp mov (bad) fcmove jne xchg jg adc (bad) jo or sbb aad sub jb mov pop (bad) add sub jg ds fstpt sbb or xor pop adc sahf in lcall push adc xor or scas sarb jp nop inc push jg popa fild cltd dec xor jnp mov stos jbe,pn sub sbb movsb (bad) lds push lret das in inc adc jg xor gs out out mov repnz fwait dec imul jnp xchg daa stc gs jle xor jno jg mov fiadd test sti movq ljmp scas dec pop popf xchg fcoms push ficompl test add inc pop mov jnp jl lods jg int aam push aas xchg ficom out dec ja std mov into leave adc jg ss in (bad) je jg adc or insb sub jg inc mov fidivr xchg insl jg jbe or cli loop fiaddl pop xchg xor outsl stc jno push fwait scas mov mov cwtl adc push xlat lcall sbb add xchg iret sub repz leave in gs das lcall sub add xchg popf adc dec (bad) jg call repnz cli inc push mov popa in push dec dec lret cmp and sti aad mov fwait pop ja fwait mov std pop push dec inc dec and inc jl or jg je movsb in pusha jg pop sub adc les test jp mov mov popa call or fmul mov mov pop pop inc sub addr16 insl jg in fisttpll dec repnz push (bad) je xchg push jne sub dec pop call mov gs jg fmull mov enter cmp push cltd mov imul jg pop ss outsl pop jg xchg sti cltd scas je cmc mov jg fimul push lahf xor fisttp jg je inc mov daa jg,pt adc lret popf mov pop xor std cltd nop mov (bad) sub pop pop adc mov in mov xor dec clc mov pop bound jae,pn inc popf push js outsl mov ljmp inc pop inc sub fisub mov jne add ja push xor popf jg test cmp pop inc pop scas pushf inc cmp jg in test ficompl cli jg dec or stos notb into (bad) jne push out xchg repz fistl push jg jge adc jg push and mov lret dec jne out xor js lods adcl xlat jp jnp sub xor dec mov jae out jg xchg outsl lock dec mov shrl bound shrb sbb dec or sbb ds pop inc jg push and lret int3 scas mov inc mov pop jg,pt ss xor mov push add loopne mov cld mov sarb and ret mov dec add jle int3 jg inc inc cwtl jmp fnstsw add insb mov jg pop sbb js and jg sbb cmc cld jg pop sub and int3 aas addr16 xor adc add mov bound jle pop ret (bad) xor jg inc (bad) out dec inc jg sti mov hlt xchg cmp jg movsb jo pop aas or in cld or dec pop sub ret stos jg test or inc mov mov fldl dec fwait sbb dec in loop rolb insl testl jae push jg mov frstor iret shrb std inc and mov cmp stos mov inc jecxz fdivrl aad jb addr16 push repz imul xchg bound xor pusha loop je in lcall and ljmp mov jg lock xor lcall jg ljmp aas jbe out lock pmulhuw lahf test jle insb cmp dec jp loope mov ja add fsubr addr16 stc or pop shlb sar aad clc cmp cmp jae pop ret jg pop int xchg (bad) mul jo cmp jg xchg dec jg out dec mov (bad) or jnp mov roll dec cmp push pop and mov jg je ret add arpl jg or stos jg lds dec jg dec mov push jg push and popl push popa push add ret mov into inc icebp mull sahf pop cmp pop dec add inc mov not nop lock call sub or push xor out mov jg push iret ljmp insl lahf pop jg jo fnsave pop jg das in jne lcall (bad) xor jmp jbe jmp dec inc stc sbb jge imul sbb mov add stc mov pop in xor mov or add gs jg sbb dec fwait (bad) rcrb loop pusha notl xchg stc (bad) fyl2xp1 jo mov adc xor sub jg xchg push les jae jg dec mov (bad) aas sbb push in lods test insl pop addr16 das mov jg cmp or or clc and xchg test fs decb add lock sbb sbb xor xchg and aas push dec das inc pop adc dec pop stos add ret inc dec dec decl (bad) inc scas dec fdivs jg in popf jne lcall addr16 movsl outsb (bad) es cmp inc shrl ret gs pop test cmpsl jb out je pop sbb xor aas lret adc mov je jae inc bound push shlb in mov idivl mov addr16 xlat jns and mov mov outsl mov cltd push add dec push in inc sub jg and ficomp aad aas pop pushf jmp xor mov fdivrs outsl xchg mov sub jg arpl and cwtl sbb (bad) sbb dec xchg jo pop jg push in mov add imul js lcall daa mov test and or dec andl ret icebp ds (bad) and cs cmp aas aam in pusha outsb loop push cmp outsl cld popf xor jo jg xchg aas cmc cmpsb aam mov bound adc sub imul sar ds jp bound jg mov mov test mov dec mov xchg flds (bad) jg sarl jg lea in cmp fsubs xor lret movsl popf adc (bad) icebp addr16 sbb push dec and mov or out movsb mov dec jge sbb imul jg cmp repnz jg push adc lods push or xor pushf ficomp and push test adc dec inc psrlq imul jg mov adc fild mov mov cmc std mov push sbb iret mov outsl stos dec leave and mov test mov mov enter stc cmp pop xchg cli mov les jbe dec out dec mov push cltd aad inc jg pop fmull cmc mov inc ja dec ss mov clc jg inc sub mov movsb mov inc lods sti pop mov push pop xlat cltd jns in mov (bad) (bad) push lcallw mov ret imul cltd jg rolb jp mov jg scas push inc lret pop out pop adc aas out mov scas testl add cmpsb pop push leave cmpl cli mov out inc jne jg pop push subb outsb adc adc mov popa dec sbb sbb cwtl sbb pusha jg popf mov add sbb mov clc mov data16 inc fwait add scas jmp xchg pop stos pop jg es ss movsl jo inc and mov (bad) jg mov sbb xor mov add sbb cltd mov test addr16 xlat and loop jg into nop enter test xchg imul hlt jne pop jg in mov rorl xchg (bad) mov mov aaa stos push jecxz or mov xchg dec test arpl rcll sar sbb ja mov jb frstor mov sbb cmp aas xor mov aas xchg in cmc sbb jae and aam adc mov iret lahf inc insl sarb (bad) jle add daa pop dec (bad) push jecxz movsl mov jbe push xchg or ja jmp xchg push cmp jg jns pop cmp lea mov int jg jns lds push dec push sbb imul clc js mov jg xchg push and jns xchg (bad) and std mov sbb add in mov or pop repz fisubl js jmp xor stc rclb add outsl fwait lahf or jg jmp add jg jno sbb mov sbb and lods inc push (bad) jecxz cmc mov test inc and xor jb xor dec loopne cmpsl fstpl mov imulb ss rcrl int3 jg lods mov jmp xchg sti jg stos lret je loope cmpsl imul outsl int jg cli mov pop jg push add ret mov jl dec (bad) aad push and lock sub cmc es rolb (bad) mov addr16 or push xchg xor js cmpsb jg jecxz lret outsl sarl inc lahf mov fist push pop jg push mov add cmp jg lods fwait mov testl xor bound pop inc lahf daa pop add sti jg adc push cmp jmp xchg shlb dec daa pop ljmp jg test imulb jg xor cs es loope xchg je or jg inc in add add ljmp jg mov aaa and cld lea pop jne (bad) mov push les loopne sbb inc jp (bad) stos mov lods enter mov inc pop in dec push aas nop sbb ja cmc imul adc jecxz jno rcrl aam ror repz scas outsb xchg cmp bound inc lret and inc nop dec aas mov add in dec (bad) jg int3 aaa jle or clc jg xchg cld add jg jmp pop into test jno,pn inc xchg jg pop mov (bad) (bad) lret cli jg pop fldenv jg pop fmuls mov loopne push fcmovnu xchg xchg arpl sarl pop xchg cmpsl stos repnz ficompl cmp push into test push dec mov scas cmp jo fldt ret jg pop int popa pop cwtl xor push push idivb mov sub push jg jb jl loop dec jg lds inc jg dec dec lahf jl imul jg pop xor sar cmpsb loop xchg bnd pop inc mov push push sbb fcmovne push jmp jg loope mov sub enter pushf orl mov pop sub mov subl mov ret scas adc push push inc mov or sub jns mov mov jp test jg mov jg lcall jg movl jmp test popf sbb js jo jg cli sbb nop jbe pushf jg and push inc jg test mov jg dec jae push fwait xor pop lea mov hlt jg lods (bad) scas push mov jg xchg and and dec and push jbe pop jg icebp nop or int3 adc jg into call fdivrl movsl sub cmp jg jmp addr16 mov lods mov xchg icebp out jno in adc inc mov pop imul lock lock pop mov push pop int push ficomp cmp idivb scas add xor mov insl cs jge xchg jg lret ficom dec pushf inc jnp ds mov inc and jg push xchg sub jns or adc int3 fdivs inc push xchg cli aas repnz lock jl inc add jg fidiv dec mov ds xor fldl cmc ret lcall xchg cs mov jns out or into jg pop jp out int3 subb mov andl push pop leave ss push cmp stc mov aam xor jnp pop inc jg lea pand jne into sub insb sbb xor jg cmpsb repz lock xchg not imul shr adc add and in jge cwtl stos (bad) push inc lea pop xchg les jnp mov jne clc inc jge call pop rorb inc test fidivrl stos push sub jg and into in aad call dec in adc test fbld sbb js inc add dec rorb adc xchg aas push lahf xor inc xorb bound xlat jecxz push mov jl jg ficom dec les jle sbb inc xor out js pop cmp lret in jg inc fildl lock loopne lret and cwtl pop lds lcall cmpsl fidivrl jg psrlq fwait in fidiv rcll push fistl mov ds adc pusha mov sbbl iret mov xor and ret and aas xchg push adc push push inc dec sti fnstenv inc add xor daa shlb xor fiaddl xchg xor sbb sbb xor mov insl imul sahf mov xchg adc vmovdqu and in (bad) enter xor jns push jg mov mov rcl cmp jae nop dec pop dec mov inc jbe aas test popf lods push mov ficomp jg and cwtl jg mov adc or rcll test pop mov in aas ds jg nop inc dec scas xchg pop test mull mov mov dec shrl adc (bad) xchg scas pop je sahf cmpsl jg test icebp push popf inc xchg lods int3 jg cmp add jg mov in clc dec pop pop jg sub dec jg and movsl jo in (bad) jo hlt pop cmp es and jne xchg fidivr js sub pop enter sub inc nop ja outsl xchg loopne aas in sbb icebp or sbb jae pop ret cli jg test fistp js inc mov repz mov jg inc add aad inc jne jmp jg sbb fwait lahf jg pop loop in test cmpsl cmc jg cmp int add jg addw jae (bad) mov test aad mov dec inc ljmp je jecxz jne (bad) dec test jl jg or adc in push adc jg out jo stos add push popw and sub pop adc add mov rcrb inc pop push sbb gs int3 pop mov (bad) jp push jg xor xlat nop add mov mov (bad) lock cmc lods jo or cmpl clc aaa bound jp cmpb adc jg mov or aas in aam jg cmp jg outsl popf xchg aas push std fdiv aam mov arpl mov inc mov (bad) xchg arpl lahf mov mov popf lock imul js xchg push adc mov jns in xchg mov (bad) movsb inc nop clc mov movsl or push lcall xor adc jg ljmp bound jg sbb loop imul inc mov cmp xchg jae mov and mov inc addr16 (bad) cli mov push aas fldl stos into mov ja arpl testb jg sub xor cmp fcomps (bad) psllw dec loop jne or xor xchg adc cmpsl cmp dec xchg adc dec fdivl std xchg sti clts mov jnp xchg mov mov adc outsb leave mov sub (bad) or add fmulp lcall or and jg loope add jg rorb lcall jg cld insb test cmc dec cmp sub out repz enter fisttp dec (bad) js jg xor mov xchg (bad) arpl cmp stc adcl pushf iret pop adc sti jb out jmp mov lahf inc aas nop jae bound js inc into sub (bad) addr16 test inc mov movsb add ja scas rcl mov (bad) loopne repnz add cmpsl mov pop mov subb or sarl mov nop push dec add or push jns fiadd mov aam mov sub idivb cmp dec insb sti (bad) jg in jo ljmp push fs mov jg scas mov sub cli and mov push mov push ss mov sti push dec test xchg and loop cmp dec adc pop jp daa cmp dec (bad) int sub push jg xor out jg add icebp jg pop push imul test inc inc xor jg sbb and xchg add out arpl ljmp jg divl ds sbb rcrl push add hlt mov xor push and jg pop xchg pop pop mov fdivs pop cmp lock dec cmp mov cmc push pop (bad) enter aam popf add ret push aas pop ret xor pop les or ja xor (bad) int3 jg out mov and mov pop jns jge fdivrs xor pop loopne popl out fstpt ds push mov cmpsl stos mov les push xchg clc mov (bad) aaa jg push mov rcr xchg lahf lret add jns sbb imul aas (bad) daa mov inc cwtl adc mov sti out dec lea push jl cmp add ja lret mov inc push ret in pop xor pop jle mov inc or pop or jg jb ljmp call test loop mov and inc mov cmp dec repz add in outsb push popf sahf mov aaa mov pop push pop (bad) and mov inc out (bad) dec mov adc xchg (bad) loope jg dec push inc insl mov je loopne sub cmp shlb sbb cmp cmp jg jae mov jg jns je rorb rolb xor mov pop mov outsb jg sub mov dec add data16 pop jo dec push inc loopne mov or and cmp in mov lea pop pop xchg popa mov arpl lret aas enter jg xchg cmpb jg insl fistl in out mov aaa outsl mov mov sbb cli (bad) icebp jg in (bad) fnstenv repz inc add push or xor mov jg loope fidiv push in sub ja dec jg lock xchg pushf jle jg jmp lods push jae inc jg enter ss idivl in dec jbe jo push push jg jecxz lods insl stos lret pop jg xlat shlb and scas or jg (bad) int jg cmp mov mov ret push lods jl popf jmp mov pop jle shr cmp or xchg add xor and push pop dec add jg dec out and mov stos pop fnsave sub jg fs ret inc dec jg,pt xchg mov repz jnp mov outsl dec out bound fidivrl pop dec sbb xchg stos sti adc pop jb dec push pushf jecxz jg ret pusha hlt loopne jg push adc ljmp out imul dec cwtl mov xchg shrb mov and xchg jg int addl (bad) xor mov mov jg notl cmp cwtl mov loope negl ss cld jl test mov mov mov dec push or push pop leave lods fisttp mov insb and jg (bad) cli cmpsl xchg jecxz mov cmp into pop outsl dec jl jg sbb in cmp pusha adc test in xchg xchg xor and pop xor xchg push into movsl fstpt arpl mov das lea jb mov (bad) fiaddl mov inc mov mov adcl mov loopne push mov sbb pop ret (bad) out mov mov fstpl pop fiadd jns shlb jg mov xor dec sub inc jg stc jno pusha add sub xchg mov loop jo (bad) dec adc outsb pushf push push mov inc push mov pop push repnz (bad) in mov lret fsubs jg pop jmp xchg push xchg jg cmpsb push fs mov add arpl inc adc outsl jl xor mov mov pusha mov es mov subl pop std pop out arpl sub ds cld repnz lock jg jno xchg rcl sbb mov push and inc in push cmp in fsubrl test lcall iret pop fwait inc (bad) fisubl fidivr test aas push push lahf dec mov cmp ja lods xchg push fsubs jg lcall and movsl scas lock and jb cli adc cmc fldt fucom aas rorb sub (bad) loop mov jg rcl inc jno js insb insl out mov es arpl loopne and jg cmp loope mov push mov popf stc movb cmp scas fwait inc call ret popa shrb out dec dec inc ljmp movb roll aad cmp insl das aas cmp out ficoml je pop lret cmpsl dec insl (bad) ret fwait mov inc mov loopne jg adc roll fcomi jg adc push xchg js jg dec test jmp mov lret fwait push andl add sti dec sbb movsl cmp xchg and xchg mov sbb bswap jg pop dec dec stc test pop mov outsl (bad) in (bad) stos ret dec and jg pop mov mov (bad) xchg jb adc jne xchg movsl cmp push inc bnd mov mov idivl and jg (bad) dec xor nop inc ja jne mov outsb out das sbb cmp sahf push mov jg out jno dec mov jne mov adc mov enter fild jg lods repz out gs stos lret jg lahf mov mov into movsb push roll jg xchg jnp mov (bad) leave jg rcrb jg mov push test mov inc out lds inc push mov cmp push (bad) mov dec rorb leave sti or xchg adc pop sbb mov out pop add fs jg repnz jo jg pop iret xchg popf movsl cmp jbe sbb jbe sti xchg ja dec dec pop fidivr and jg dec fdivrl aas add or xchg loopnew sub push pop adc xchg inc cmp jg sti cmp mov mov xchg in sti adc lea ja les (bad) jg shrl ficoml repz cmc cmp jg mov inc pop inc cmpsb jg shrb jg inc fwait cmpsl scas outsb daa jne pop sub pop (bad) and xchg jg stos or out mov and push shrb bound hlt mov popf and mov pop cmp hlt stos out jg scas ret loop mov xor insb mov (bad) pop jle movsb insl (bad) fdivrl and imul xchg dec sahf inc inc sarb cli fs pushf ja arpl dec jg cmp cmpsl arpl mov addr16 mov daa (bad) ds push pop ret mov hlt cmp ljmp pop dec sti mov inc jno je negl cwtl push stos into mov jg arpl mov subb jo mov faddl lcall push fisub movsl fdivs jg loope mov jg mov cmp add aaa jg dec ljmp (bad) lock pusha inc dec ljmp insb jno jg or fimull out bound or mov inc jg fcoml mov inc sub decl loopne jg fidivl das or pop jg clc adc inc shrb mov outsl cmp pop inc cmp jg iret cmc cli mov je inc scas mov ret sbb xor dec dec incb lds mov dec test push add cltd inc (bad) jg mov mov jg cmp dec sbb cmp jg (bad) mov lods push or andb xor cmp incb sbb dec mov lock pop cmpsl lret inc out mul jg xchg cltd cli xor push nop sarl adc mov pushf imul mov inc inc jg bound arpl nop dec jecxz imul adc fs sub mov xchg dec lods inc xorb call jg daa xchg push xor lds idivb ret call mov int mov fxam mov jg aas jl clc push inc mov std xchg cltd jne sahf cli jg out nopl fistpll mov inc mov jns aam adc push mov scas jg inc movsb add adc addl es arpl in xor mov or adc jg jnp sarl imul popf mov inc adc (bad) mov add arpl mov int push inc fpatan cmp fidivr cmp jg xorl fnstenv into fisubr inc call jg jle mov stc jp jbe roll jg movl mov imul push aam jg iret idiv jp inc cmp fidivrl inc rorl cwtl pop push pop aam and dec cmpsl (bad) or pop int3 bound jg jnp xchg add (bad) jg popf jb pop fbld sti xlat adc hlt mov jg sub mov fstps sub push scas pop inc cmp cmp jg jno dec xchg sahf (bad) pop jg mov insb and jge pop sbb push fsubl mov out stc lcall flds sub mov mov ret xlat jg jno push jle cli sub ljmp dec jg in mov jg enter mov xor dec addr16 pop pop sub mov cmp faddp sarb pusha mov push iret xor dec mov jo dec rclb outsl iret repz xchg pop (bad) jg jp add movsb loope inc cmp jns push aas ja cli test js jg mov andb (bad) dec adc ror jg pop sti mov jecxz jl pop test mov sub lcall call push cli pop pop cli cmp stos roll cmpsb cld (bad) pop sbb lods sbb std loop sub hlt bnd or cwtl iret aas int inc cmp mov out inc pop mov fcoml cmp fnstenv mov insb sub imul jg test rcrl sbb icebp sbb popf cmp insb inc lods and xchg sarb int3 pop mov sbb jbe movsb nop and xor jae cld ljmp inc shll nop xchg out adc repnz cmp mov cmp jg push mov jo jp cmc aas or mov mov add (bad) lcall mov movsb dec xchg outsb inc js sub mov add movsl sahf (bad) decb add idiv pop aas addr16 (bad) scas fstpl inc dec mov andl mov sti (bad) outsl adc xor pop pop pop into jmp push aas sub sbb adc and ds push (bad) sti pop (bad) fisttpll push insl jg pop mov div xor lock jg and pop enter or pop addr16 sbb sbb test mov jg repnz push xor fdivs cmovl push (bad) (bad) sub xchg mov enter inc test (bad) dec or mov (bad) mov sub icebp fbstp out or std jg add pop dec in sub pop sub inc dec add mov lret jl or sarb mov push mov or and cmc mov adc pushf lret aaa jne xchg jg push stos pop aas fcomps icebp or pushf mov ja cmp fwait inc jg dec cmp rolb jg mov or jp das aas xor push dec or ds jb jg adc adc icebp pop std pop sub aad (bad) je push inc adcl and test push xchg jp or mov push lods xchg stos in mov mov sar pop js push pop lods in repz out out mov sub (bad) cmpl fcoms pop aad shlb jg iret add call jle std fildl (bad) cli outsl fadds jg dec hlt adc mov mov pop repnz lods xchg jg inc xchg es movsl loop pop icebp mov cmp out cmp dec add mov adc push out cltd dec dec (bad) mov pop adc cmp jg lods inc xor push rcr push imul jg push or (bad) xor mov lahf subb xchg add test pop xor cmp lock sahf jg xor jae sbb xchg and jle jb adc push ret sti mov insb shll ljmp jnp mov jmp call aaa or sub push into imull repnz stos and jg cltd movsb xor inc push jg fnstcw and outsl ljmp adc pop inc stos popf mov orb dec daa inc loope cmpsl into fsubrs or mov ljmp xchg pusha add dec jnp pop ljmp repnz xchg mov pop scas adc add mov in gs aas jle es or inc or aas jno adc test loop aam push xor in cmp sbb and cs dec idivb outsl mov dec in xorl adc pop fcoms cwtl cmp jg mov shrb nop loop mov mov mov adc jg and stos jg cmp leave dec adc fistpll es movsl mov sti sahf popl mov gs sbb add pop in xor add jg out inc arpl xor jg test mov daa shll jg loopne or lods cmp pop mov xor sbb int jg nop insb cmp ja add aaa mov fsubl daa jg mov stc fdivp stos loope pop out iret add push (bad) rolb inc xor mov xor fdivrs mov (bad) jg in scas sub pop pop jge aam inc xor orb sbb jo jne ret push jg push jmp js (bad) leave loopne push mov pop adc jg mov fmull mov sarb (bad) icebp clc sub mov bswap or jg mov popf (bad) divl sub sub xchg mov in fwait cmc dec xchg jg fnstsw idivb ljmp mov inc outsb mov in jg dec mov mov dec push outsl pop test inc pop fwait stos jle or mov xor pushf jg movsl jge cmp out jg xchg fs cmp cmc ret testl and add mov ja jg pop lcall and xor adc stos lods sub dec cwtl jmp fwait xor jg add or add (bad) jg mov int3 inc mov loope mov scas add hlt sti (bad) xchg (bad) inc mov inc dec insb jns aas mov cwtl and mov call adc fs jne push and aad and lret fwait adc bound out sbb nop cmp sub cmpl jg add pop mov lods pop mov mov loop and push mov (bad) fmulp lahf cmp insb jmp cmp jno mov es (bad) mov sub rcll mov mov add ja lret mov jge cmp inc jg fiadd aam mov loope mov sub cmp jp ret adc scas jmp dec push xor ja mov mul mov (bad) stos mov mov and mov mov scas jg cmp sub xor push xor sub out scas mov aad in inc dec jg cmp je jg aaa test lds push jg inc loope mov rcl scas mov xorl jg in pop or cmp adc jb xchg sahf jg loopne xchg stc push outsb jmp adc cmp (bad) mov mov imul outsl jg hlt rcll test jb or out lea shr pop rorb inc adc jg jge fdiv flds mov stc jg leave shrb nop stos mov shrl fsubr popf jg cmp adc jbe sub mov icebp sti sbb movsl xchg lock rol mov fdivrl movsb xor es jnp adc notb (bad) mov cld mov popa xor mov imul jg sti insb mov loopne xchg ret xchg xchg pop jns jg test add mov mov xchg mov inc in inc add cmp inc adc stc jg inc xor cmp jg loope out (bad) lock arpl out push outsl in jno push scas jg xor daa ret jb leave jg (bad) pop or jns jae adc and push sbbl adc sub les and cwtl push add daa cmc xor sbb jo es jbe jg iret or mov pop cmp stos add insl sub xor clc mov sarb out (bad) movsb inc inc sti out dec (bad) addl xor cld sub jg add cmc cwtl popl dec and pop lret add cmp lock pushf repz call ss outsl cli jg sub outsb adc mov cmc jl dec test jle add xor jg push mov pop rol lock add outsl fwait and js mov push cmp jl outsl rep (bad) or add ss dec out cmp jg adc cs mov aas push pushf jae mov sti in aas loop xchg cli push jg cmc sub xchg insb xchg jl enter mov call fildll and inc inc (bad) mov push mov jg pop lods or sub fist jns jg test mov mov mov jg sbb xor inc xor or add add pop (bad) jg jmp jns dec add scas test rcr mov and adc push mov gs mov pushf shrb lahf cmpsl mov div loop cmpsb or aaa aas xchg xchg loopne jg mov adc xorl push sarb mov inc adc cmp popf aaa rol aad sti push dec jne dec lds idiv mov inc sbb in mov rcrl lock mov movsb cmp insl in test add pop fidiv pop xor sub or out sbbl xchg ds jmp jl addr16 sti mov imul xchg cmpl stos out movsl outsl sbb xchg mov ss nop pop adc leave add dec adc and and fwait mov jg push stos xlat and xor mov pop bound pop idivl jecxz shr clc push add jb xchg pusha or xchg adc icebp sub jg repz sar imul lret jg inc xor xor jg sub inc ret fdivs xlat xchg inc pop (bad) hlt jmp lea inc (bad) and jg sbb ljmp pop inc xlat push cmp jne fucomp cwtl pop sub sub mov jle (bad) sub mov pop inc cli notl stc dec xor (bad) out xorb push popa jg les stos jg (bad) xchg push mov jns dec inc pop sub aad jae mov dec jge imul insl pop repnz jg test mov xor sub or ret idivl xchg ds fadds jg insb push out pop sbb mov push pop mov pop (bad) pop lret jg pushl inc pop xor jp or and xchg adc jle incb mov dec add mov mov adc mov outsl shrl jg (bad) sbb dec and jg das aad enter jg cmp mov jg sti mov data16 xchg xor pop jg xchg (bad) push push cmpsb cmp mov das jg inc inc fistp xor stc mov movsb sub jb dec aad adc sbb dec sub jg jg repz loop jmp mov mov popf stc xchg mov xor icebp push out (bad) fildll mov xor adc fidivr imul inc dec pop hlt jg cmp pop push pusha in lods push sbb aam lods call aad shll (bad) fnstcw in mov inc sub call dec dec mov mov sbb movq scas iret mov add aas add inc adc lods arpl and into call mov xchg inc xchg xor mov sbb jg mov orb imul or inc repz adc js neg xor in xchg mov jno (bad) les pop aas aas pop xor and jg xchg mov add or sub inc jg mov inc and or push mov outsl adc imul add subb gs (bad) mov jmp arpl xchg jg dec out push testb jg sub rcrl add insl in xchg add (bad) lret adc add or adc lcall imul cmp gs mov mov popf jg xchg std jg leave insb sbb repz bound aas add xchg sbb inc enter push je and loopne aam std xor cmp cli jb (bad) dec mov ja test inc jg mov mov xor rorl jg pop movsl xor jg cmp jg imul out into cmpb mov xor pop xor cmpsl jge jo or cltd cwtl fwait push pusha pusha xor and pop movsl sub subl push negb or jg mov fwait lret jg mov lods lahf and data16 fsubl inc adc cltd dec and xchg jg lcall jg or jae nop in dec sti lcall ficompl addr16 not movsb mov gs add inc push mov pusha add jg leave (bad) push xchg cld test jg mov and pusha jp jg in jo jg enter fdivs jg add xchg les pop fs aam xchg stos repz cld loop insl test jg sub jg cmpsl cmp jg sub call dec jg dec or mov jge mov mov dec xchg (bad) mov cwtl (bad) bound outsl jg scas add push lds xchg mov cltd jg lock lret dec mov mov jmp push pop xor sub inc ljmp sahf jg mov out aam mov mov jg int mov mov insb daa iret pop addr16 jg mov fist aas xor xchg cmp fs ljmp and mov jne in jmp (bad) jg test and shlb rcr mov inc mov loope adc (bad) mov fs icebp xchg and pop sub jecxz mov cmpsb jne or jg mov xchg xor xchg lahf dec jg or xor ja cld cwtl mov ljmp sub and dec jg or pop stc ficomp outsl jg mov inc add fdivrl in inc insb jo push inc pop jg (bad) out imul xchg fisttpl mov pop fs adc push cmpsb decb js (bad) mov aas hlt or and sub jg mov popa sub cmpb pop xor dec mov mov movsl ja xchg pop adc jg cli fwait and and (bad) lock lret jg xchg lea and dec lcall pop lock loopne pushf adc push xor dec rclb xchg jg inc (bad) and mov sub mov lret or mov jg (bad) mov push xor and std cwtl mov scas adc (bad) (bad) insl (bad) add jno scas je ret loopne rcll jb cmovno out (bad) loop repnz xlat pop cmp push pop jle jl gs scas dec cli std push fbstp stos addr16 rcr clc jmp xchg jg mov jg movsl cmc push cmp mov jg cmp xchg jp,pt in lds rcrb cmp inc jg in leave (bad) mov push jg pop mov push jg dec mov adc and mov mov and mov out pop mov jg mov mov jae ds dec cmp lret aaa push incl xchg out mov out fisub idivl dec ret gs mov ds leave ja sahf int mov mov or adc mov and pusha sub mov imul bound (bad) jae ljmp push jb sarl imul cmp ss dec leave jg call (bad) mov or and test dec dec pop enter xor mov in jo pop loope sbb sahf mov sub stos fildll ss sub jmp rolb mov cli inc push in int3 mov (bad) xor mov gs pop mov dec data16 lea (bad) or in pop inc add inc and cltd jecxz pop js (bad) jg cld sub mov bound hlt jg dec sbb adc jo xchg jg inc fdivrl rcl jg fbstp lea push data16 ret jp jl rorb cmpsb sbb inc jo jecxz aad or lret jg xchg test mov lock or pusha sbb stos push jg xor and in and mov push inc mov mov repnz loopne jecxz mov lahf insl jno mov mov dec sbb xchg cli push dec pop sti scas fwait neg dec jp pop mov mov mov pop mov jg pop mov pop jg (bad) stos scas push inc out sbb lds mov bound xchg std scas bswap cmp and mov jg and and cli cmp dec push testl sarb xor inc leave into jg mov xor pop jg in dec jle popa cmp lock (bad) xor out js jg cld adc add mov enter xchg jl scas ret (bad) sbb xor sub ja mov push aas pop aas test push adc dec lea jg push mov pop imul pop push out push dec jg imul jnp jae aaa scas outsl cmp inc dec mov sub test jle (bad) es es push sub xor jp rorl in bnd pop jg dec dec les sub aad loope push aas je rcl push adc scas jg mov sbb out popa jg mov inc fidivrl (bad) or stos test outsl jmp inc inc enter sbb js outsb xchg fisttpll inc xchg jg jl sti repnz jg ljmp inc int3 ret ja (bad) sub jns jg mov out jo mov push inc inc stos mov adc push push enter adc jb mov jg inc and sahf jg xchg je cmp jno mov sbb dec mov or cmpsl movsb mov inc in sub stos cmp lods lret psraw fbstp fidivrl add sarl mov jnp mov stos aas cmpsl cs mov xchg add xor sbb int inc inc cmpsl inc lret repz jg arpl jnp orb xor jle mov sbb (bad) daa mov pop jg jbe jb push xchg sub nop dec fmuls jg enter sub add in (bad) mov pop aaa jae mov xchg and mov xchg xor cmp scas push or and inc adcb dec nop mov jg xchg dec xchg insl push jg pushl add xor mov jge jp jl inc fimull fcompl dec push aam jae xchg xor and loope arpl sbb mov pop or outsl roll cli sub mov jbe inc adc lods and push loopne ret addr16 mov push inc lds ror aas out stc sub pop xchg inc adc mov cmp jmp sub and mov pop add arpl push inc sarl lds jg in test mov jg gs fidivr jle sub adc nop jg push js stc ficoml data16 jno lds arpl mov pop scas sbb fadd xchg pop pop sbb jg or stc out mov gs adc inc jg in cwtl mov loop mov lods mov rolb imul mov dec adc jg stos dec xchg mov in xchg push mov scas js ds xchg mov (bad) les fcomps pop inc jl lock inc jg mov jg outsb jbe sub mov mov inc dec jg aas scas lcall ds cmp dec jg sub mov ret push daa or mov les or stos cmp pop jg loop xor loope fnstcw les pusha mov and pushf call jg push aam mov mov or or ret cmp fdivrl aad cmp lods mov imull popf (bad) xchg cmp test pop jg push (bad) icebp cld xchg out sub push aas cli and call sti and (bad) mov cltd outsb jg jge mov pop aam pop aas int xchg push pop cld shrl inc das inc jg pushf sbb out jg testl std and jg xor test pop pop jmp jns and add sahf dec lahf jae xchg jne in pop adc xlat (bad) popa add xchg xor addr16 jns jg mov scas stc ret push jg xor mov push data16 adc aaa mov xor ficompl mov movsl test push sub pusha idiv out mov aam cmpsb (bad) sub mov mov cmpsl stc into mov jns imul aad xchg clc mov dec aas jmp push cli cmp inc lods add outsb push lds pop aad loopne loop jg mov mov jo outsb pushf stos loopne aas imul lds pop test call mov mov xlat sarl arpl jg ret push pop pop mov pusha fs jg dec sahf leave lret add adc imul xlat pop dec (bad) divl sbbb xor cmp pusha push addr16 je leave adc jnp out movsb or mov out addr16 xor call mov stc mov enter (bad) jno call lock jne (bad) sbb repz inc jge in xchg sub mov inc jg std xchg leave ret xor imul mov push xchg add push jg popf adc mov hlt jmp cmc inc mov aas test pop in int push in mov xchg dec pop sbb xchg or or clc rcrb sbb popa in jg adc xor or jg cmp fsts inc sbb outsl sub adc loope jecxz or daa (bad) cmp xor aas icebp mov dec push mov (bad) loope push dec xadd sub popf addr16 sub mov pop jge out or lahf cli jns or adc mov add mov outsb nop mov and fs mov jg dec push pop ret jg aaa xchg insl daa addr16 jg ror repz dec sub dec insb sub movq test je popa hlt js jg mov dec pop add lods test pop pop imul lret lcall mov pop or push push sti popf (bad) xor addr16 inc cmc add mov daa je mov sbb or rclb jmp pushf stc pop sbb dec mov enter add push mov xor jg push or push xchg inc jg cmp lret xchg xchg cmp imul push or repnz jg sbb subl fild push dec das sbb jmp stos clc pop cs adc add inc std mov leave sbb xor inc adc jg std mov sti ret (bad) and fimull lcall aas sbb addr16 jg out sbb jne xor jo test inc mov xchg cmp sub jg aaa mov nop testl mov jg sub inc mov jge pop mov jmp jl nop out faddl loope jno sub dec push aam push mov mov les (bad) pop xorl (bad) dec aam dec ljmp cmp lret inc cld add lods aas cltd (bad) sahf stos movsb imul jg movsl insl test cmp aas mov pop mov jg fistpll pop jae mov sbb sub orl test cmp xchg xchg aas mov cmp inc jl push call in inc mov mov jg or add pop fistpll fdivl jg adc scas jl mull inc popf ret sbb movsl inc or outsl lcall nop dec ret (bad) mov jl mov push and lcall push imul js ds dec rolb mov (bad) fidivr ret loope push shrb mov jmp (bad) test (bad) stc (bad) fnstsw cmp mov or aam lods sub and pop jae push and popf push leave xor mov jl mov xchg jg sub lods jne mov insl jns add insl pusha dec jg movsb mov test pop push movsl mov aad lock mov cltd push jg mov or pusha stc sub mov popw (bad) lock xchg pop jae jg mov sbb jns pop aas popf in lods mov mov pop xchg mov aaa outsb (bad) jo xchg push sahf aam icebp inc lcall nop ficom test dec jg loope lret dec ss insb cld and sbb cli pop jg loope fistp xor or pushf aaa test sbb inc mov mov aas dec mov and int out aad inc adc hlt mov push jge cmp stc push or flds ds xor out ljmp dec movsb push cmc iret mov dec mov mov outsl stc test cmp push cs and jg int jmp xchg xchg idivb lock test inc mov (bad) mov pop and idivb jg cmp popf aas cltd sbb dec pop pop jg push inc mov cld (bad) idivb mov fstpl inc repz jbe adcl dec mov xchg insl dec mov (bad) mov jb inc lds (bad) mov push lret mov adc lahf dec pop xor lds xchg and cmpsb mov fimul icebp push jne xor loope cmp mov xor scas sti (bad) pop pop test sub leave clc jg (bad) mov cmp mov fist gs or bound das xchg mov mov mov inc or mov mov or add xchg ret mov pop jg cmpsl jmp mov outsl insl test fimull leave pop out enter insb or jg (bad) mov ret jo mov ss popa xchg mov jg add out jg pop xor fnstcw subl je (bad) jg shr adc cmp pop push hlt inc aam jg push mov popf jg (bad) test leave mov stos (bad) pop and pop sub aaa jg adc xchg imul and mov iret pop xchg mov aas into sub inc repnz inc sbb gs aad aad push cmp push xchg add (bad) jo mov pop sahf insb jmp fcoml out jb loope paddd outsl fadd pop aas outsb xchg mov inc (bad) jg cmc sub jg fcompl fistpll adc xor dec popa xor sub inc sahf dec test sub pop (bad) push mov mov mov jg cltd adc fwait sub fidivr add sbb call fcoml ret mov scas rolb mov mov push mov jg and inc stos pushf sahf adc pop xor shrl icebp jno lock call pop cmp aas gs stc (bad) xchg pop dec mov insl push cmp out std je xchg mov fnstsw cli xchg jae jne ret outsb fldt xchg lret insl and mov cwtl or popa jbe mov mov cmp ja inc push jg mov sub mov bound call sbb dec add enter stos pop xchg icebp arpl xor adc pop dec cmpl xchg mov jg mov and notl fimull jecxz xor (bad) dec bound jmp push push xchg and mov aas repnz cmc jecxz sub cmp jg sub fs pusha inc jg fldl mov js sarb mov cmc pop pop push mov jg push cmpsb ret adc mov xchg mov negl inc les outsl repz adc (bad) lds or std cld fadds (bad) mov mov jno adc mov dec out pop leave fbstp stc pop in xchg dec cld sahf jb push pop ds aas arpl daa arpl inc jg loop mov jg mov scas sbb dec mov ja adcl outsl pop scas bnd js jg push movsl push cmp js sbb xlat mov mov inc and jg xchg cld jbe fstpl mov lds inc xchg xor test js push inc and je imulb out cmp or cmp pusha mov lds cmpsb pushf xor or dec aaa cmpb out xchg jp jg or jmp aam mov mov in sarb pop xchg aaa movb add inc ja sarb (bad) rorl pushf cmp stc jle add popa imul mov jno cmp xchg aaa jg enter add xchg or (bad) dec inc lea and data16 inc fnstcw addr16 jg mov pop mov popa fistl bound pop push cwtl or jp daa aam sti push add mov mov les es adc add push fldl (bad) mov in jg add push jae mov aam movsb xor sbb sub jp mov loopne fdivrs xor cmp pop loope or jg add cwtl jl jg cmp cmp js cmp jg test (bad) das rcrl (bad) pop int xchg push pop jg (bad) fsubrl and fildll mov mov push or cmp jg (bad) ret or mov pop mov dec jbe adc fsubrl ret jb jg jle sub mov sub xchg into xchg cli (bad) loope jg adc loopne mov (bad) lock pop or repnz pop mov xchg lea fstp cmpxchg fistpll jbe mov in pop divl sti jg xchg sbb imul loopne dec inc and fs mov aas sbb popf jo rorb fldl push jge (bad) xchg cmc popf xchg stos inc repz ja mov pop movsb test ljmp lcall adc mov inc inc jg mov mov push js sbbl jg sub dec mov out cmc jl jg pop push cmpsl cmpsb push add mov test scas lret cmp call sub (bad) xor add cmp push popf es lret xchg xchg cmpsl repnz scas sti mov jmp insl dec punpcklbw in mov js jg stos or cmp lds xlat cmp mov (bad) mov mov mov adc jnp aaa notl jae pop jp outsl cmpsl dec (bad) pop or ds sub movsb scas jg add call (bad) bnd and cld sarl mov jg nop out mov mov data16 and push in lahf lret jg sub mull or jg sub dec int scas aad pop push ss mov pushf ljmp pop mov lret popf out lret mov cmp jae popa dec test sbb bound jo add sti jno add push ret (bad) or sahf loop mov mov push outsl jg mov aas xchg (bad) and jno xor outsl test adc sub adc ret movsl fcompp call or push fmull mov pop fistpll lret dec xchg enter stos int3 or pop mov mov fdivrl sub sbb and gs push jo in cmp insl cltd enter pop int3 jg mov loop aas lret push pusha cmp fistp mov stc mov cli mov dec sbb sbb and push movsl cmpb pop pusha dec sub mov data16 dec cmc hlt jg jmp dec dec jg gs sub shlb inc outsl pop mov cmp adc (bad) sbb stos (bad) dec in cmc jg mov sbb loope aas sub and pop xchg lock and insl adc jg mov mulb jg repz dec xor test and adc mov pop xchg xchg (bad) xor jo pop loop sub icebp add mov jp (bad) sahf mov loope jo or mov sarl add outsb or jg icebp inc notb sarb add adc mov xchg bnd mov sub jno (bad) popf inc je mov mov ss jp lret cmpsl mov jg movsb push pop jne adc js inc lahf pop pusha xor cmp jg enter mov mov xchg test cwtl xor jmp jle fldenv xor add mov cli jo pop ret test ljmp inc mov mov push mov inc mov (bad) sbb ds pop push pop xor out (bad) (bad) inc mov sub cmc fs mov xlat bnd pop sbb cmpb jb jno cld mov cmc mov xor push stos sbb addr16 sub jg mov fs jnp pop (bad) out mov jg rclb fwait jg fistp inc adc xchg jl jb repnz iret cmp jg cmpsl ds inc jg out or aas dec jo push decb jg inc sub (bad) xor out jg repnz fadd popf lea clc sti xor mov subb sbb lock xchg adc mov push cwtl outsl dec ja loop jg mov popa dec fcomi mov cmpsl mov add xor sub dec dec jg pop sbb call add xor jg sbb mov jg test div mov sbb mov jo jg mov enter adc and inc adc jg sbb xchg adc lea jl pusha jg test rcrl dec (bad) std iret mov dec inc pop xchg lret mov icebp jg int3 add inc outsl jg mov shrl jg fisubrl out inc ds pop mov sub inc xchg int3 or ret jg lret add inc pop jo in jb rcll jg push xor jg sub push loopne (bad) mov lds inc cwtl sarl push add shl outsl rolb int in pop daa mov arpl mov add jg sbb popf mov pushf fdivs inc ds movnti push jg movsb jl outsb adc mov xor adc fiaddl dec inc (bad) jg mov arpl sarb jmp sub push add imul cmp rep push cmp pop clc or dec and or xor mov jae jge outsl sub into (bad) sbb outsl stos test (bad) mov and test je int3 pop xor xorl jg xchg movsb xlat and into mov and aad mov ret jg sub mov mov jg inc or pop add pop xchg jae jg push mov ss mov test push cltd popa outsl (bad) push stos jg aas mov lcall data16 dec negl jg ss mov inc mov mov movsb call pop mov pop push pop arpl cli push inc jg xor xor add addl jg scas (bad) jecxz gs jbe push mov jb lock outsl sbb stc pop adc rcl jns or (bad) icebp jg sbb or mov lds std push jg jnp mov pop inc (bad) (bad) int3 insb pop push and scas jge stc cmp pop jg push pop movsb sti (bad) or adc cs sub xchg pop cmp pusha mov pop clc adc js popa jnp (bad) mov mov shl jg int in cmp lock mov lods or jg xchg outsb movsb mov jg pop jnp ret mov sbb xchg mov (bad) enter jb jns fs jg cmpsb rclb mov mov or mov sub jg jo sarb aam push adc pop enter mov pop inc inc fdivrl sub les out xor dec pop inc dec mov cmp aas xchg push xchg dec mov jg (bad) gs and pop sahf jo fwait pop (bad) roll adc lods xchg lods bound mov jg mov shl sbb test inc aaa loop jp hlt aas jg test adc xor push pop sahf push int3 jg daa dec jmp and mov (bad) lret rcll cwtl jne in adc mov jg lahf divl jg push push xchg push fs ljmp jg xchg popf lods mov jb mov aas sub clc mov cwtl enter adcl cmp idivb sub jnp push pop mov inc ret dec scas and push add (bad) dec stos outsl fnstsw pop in push insb push jnp andl and push stc into or ds ss lcall js sbb mov jnp inc or or scas fnop cli sbb lds roll jl push jp dec adc inc popf dec sbb jg in jno cld add add jb sbb adc fldcw sarb pop cmpsl int push or jg dec xchg scas adc (bad) jbe mov pop pop inc cli arpl fistpll outsl in push dec in (bad) mov pop rcr aas imulb jg pushf iret push mov jecxz jg imul jge (bad) cmp pop loope (bad) push adc push dec outsb and fbstp insl pusha xchg hlt mov sbb cmp dec int adcb cmp inc movsb jg inc pop rolb (bad) sbb mov jns mov faddl cmc mov jg (bad) jnp fwait addr16 jne fisubl inc (bad) (bad) aas xor ret pop mov ret sub addl dec fildl jg clc and jg cli add lret decl jecxz cs xchg mov xchg icebp loopne jg inc xchg imul (bad) jg lods test xchg popa push pop arpl inc (bad) pusha insl insl nop in sti loopne mov mov (bad) sub outsb inc and addr16 scas pop bound jb xchg nop adc pop in jl mov xlat xchg cwtl (bad) pop inc mov ljmp mov or addr16 (bad) cmp cltd and ja ret sahf jg es cmp jl jg pop hlt in mov cld das add pop jg pop push mov aas orl xor xchg pop jbe mov adc push jb jg adc add lret addr16 test shlb mull loope sub xor xchg push popa imul (bad) cmp sbb or or jl ss xchg add fdivrs adc insb inc into jo insl rcll jns arpl jg imul outsl fwait push mov xor lea ret pop sbb mov xor scas repz jmp pop negl mov jno rcrl inc call push adc add push popa ficomp jo,pn cwtl cmp add lahf inc inc pop test (bad) (bad) xchg jno ljmp mov mov pop mov mov (bad) push rcl xchg or int fs mov ficom addr16 (bad) cmp mov cmp push sub jae fdivl jecxz dec pop dec clc pop popf aam xor push push and push inc jg fwait mov insb mov out arpl pop jbe fadd fs sub add jle jg push pop ret (bad) icebp push jg stos cwtl js cld roll (bad) pop shrl push jg ljmp jg sbb repz leave (bad) sub jbe adc dec in loopne notl int3 jo inc pop negb push sub (bad) decb ret loopne ds aam int3 pop jg mov dec jno pop push aaa insb test push jg cmp mov addl dec out repnz push in mov cmp mov aas fistpll adc loope addr16 fdivs (bad) cmpsb out mov mov jg push fimul xor sbb (bad) mov jg dec inc aad xchg sarl jg bound pushf inc jnp or repnz push push fistp in dec add lahf xor das push scas pop out and xchg fdivp and mov dec addr16 jnp jg cmp ret or das jg ficomp push (bad) repz mov je pop (bad) inc mov push call xchg movsb jg,pt bsr lea jg xor add iret in gs pop loope mov and call and xchg cmp xor add and dec into cmp push pop or fsub sub loopne popa xchg pop pushf jg insl inc fbstp push bound rorl pop repz jg imul add pop adc iret (bad) addr16 out jg and in cmp test or fstpl inc sarb sahf sbb std (bad) jg out xchg fdivs into mov pop (bad) xor dec shll repnz jg dec jl mov mov pop sbb jg (bad) dec inc out sbb fdiv jg inc push lahf rorl mov ja xor shlb and inc dec cmpl push dec enter xchg mov stos imul mov std sbb out mov jg aam pop push loopne addr16 sub lret movsl les adc push jecxz loopne and jg cmp pop inc js int rolb pop popf jg bound enter lea das xchg js push sbb and sub jns jg mov sub xchg out and jno xchg in inc nop mov scas insl pop leave sti add aas dec push xchg es jg add clc (bad) mov insl push in cltd aam pusha sbb cmpsb (bad) fstl mov jo sti aas int xor mov dec bound pop cmpsl jle jbe popl push mov inc jns sar fsincos scas mov les sbb mov out add sub jg pop inc xor sti mov jnp inc flds pop scas inc sub in lahf pop movsl aas (bad) xlat jae mov jb mov (bad) decl mov jle rcrb dec dec leave mov fwait ja xchg jmp inc inc mov jg mov dec jle into xor sti outsb iret sbb mov inc ja sub addr16 xchg in les std nop int3 push and jg (bad) notl fisub rcl ret gs cld sbb mov jnp cmpsb (bad) sub push lret addr16 sub sti jg mov mov fwait ljmp jg pusha in dec ljmp inc (bad) dec dec push push shrb (bad) in sti push xchg cmp push ret frstor mov push lcall test outsl add js sbb lahf sti ljmp divb push push pop or push cmp stc int3 pop mov dec js sub pop or cmpsl stc enter out ljmp mov test adc scas js addr16 and or ljmp xor mov or jg xchg ljmp cmp stos dec dec mov dec mov mov in sarl push push shrl cmpsl shlb jg negl xchg jo and mov pop cmp cmpl pop cmc stc jg push js mov ljmp pop sbb pop mov imul (bad) repz ret add lods fs jbe stc idivl loope push jo ljmp aaa int and push addl loope ficom xchg xchg add sbb jp fcompl push mov scas out mov (bad) je mov mov pop adc shr ljmp lock mov decl shlb out adc bound push fildll mov ja jo or ds dec lock outsl int3 jno movsb dec jg enter push jnp inc (bad) jg dec subl pushf outsl cmc repnz or enter dec cmp jb cld shlb pop or mov inc xchg or adc mov mov push ljmp cmp insb ds inc push dec mov lret aas aas fcoms push rcrb mov pop dec mov cli or addr16 dec dec push pop pusha (bad) mov out cmp in xchg sub fsts sub mov cmc mov jg dec mov mov rcrl scas addr16 iret std (bad) and pop dec dec fnstsw jmp mov add dec cmp adc cwtl nop jg cmpb push sub jg xchg or (bad) popa cmpsl sti jg add int cld and addr16 rorl inc add js mov icebp and aad add cmp xor jg and dec xchg push xor (bad) subl push scas pop mov enter mov idivl nop jno lret pop xchg scas and pop out cmp sbb xor rorb enter clc pop roll lret jg insl fsub pop lea jg adc rorb int sti mov in pushf xchg mov cs mov test pop stos mov pop loopne hlt jle pop imul pop push inc fistpll les or add inc arpl jg adc popa inc pop sub and pop push idivb jecxz insl cmp movsb xchg sbb pop das es sbb jecxz jb idivl mov ja mov mov movsl lock push in ret int3 imul fdivrs push xchg pop mov xor mov mov loope mov xor repnz mov sahf jbe push xchg inc pop stos je xor mov cmp daa xorl push cltd fdivrl push in and or loopne push not out inc pop dec (bad) mov sahf mov jae mov jg or push push int or aas inc mov or ljmp push jg iret xchg xor add data16 in and mov pusha xchg dec push mov and xchg aas fdivl cld fwait xorl pop int pop aas cmp fsubrp xchg cwtl lock jecxz mov sbb sbb paddd ficompl lods mov pop inc into cwtl mov arpl jne,pn fs mov int xor mov push inc es jg cmpsb and clc jge (bad) xor popa sarl mov xchg icebp push sahf (bad) int3 cmc and imul inc lods ret inc or test lds mov ret jg pusha cld dec add push arpl xlat out jmp add mov test jne fnsave in or faddl imull sub push or jns ficom aas dec add les jg mov push test mov icebp add xchg inc mov jg call mov jg pop sub jg mov fwait pop jg sub out shll ss cmc insb xor out mov mov cmp fs jl insl mul pop or fisttp lcall mov repz (bad) out (bad) (bad) testb jg fwait test mov and and mov iret jae movsb mov sub jg je leave fidiv sbb popf jg xor data16 icebp ds cli add xchg xchg pushl ret outsl (bad) xlat xchg mov jl add adc inc and (bad) scas out out or inc lret stos decb rcr and xor pop lods data16 js xor ja jle jg in les nop arpl imulb outsl jg cltd mov gs in andl out and mov inc ret cwtl jg icebp imul lds jg decl jae mulb dec jg mov gs into sbb dec mov lcall incb and dec lea jmp push insb or mov jg mov test cmc xchg ja das push pop and lcall inc js rorb iret (bad) repz inc and pop jg xchg dec lea les rcll lods movsl inc mov mov out and mov mov push dec xchg pop leave mov insl sbb pop mov pop repnz mov sbb sbb jg adc sub pop pop or mov add aas lea lahf ss xor push dec or jg cmp mov scas test arpl jns add jecxz out mov sarl into stc pop pop addb push shr mov clc sub jbe xchg pop cmp mov sub sahf lea cmp in sub lock pusha js clc test (bad) adc lcall aas mov andb xchg jg jecxz dec stc rcl cmp xor fiaddl or rcr jge xor es xchg aad jno int jg or cli test and jg cmp jnp cmp add and inc loop xchg mull stos jg cmpsb jne lods dec test aas mov jno lahf mov mov jae jg add xchg xor push mov jecxz lahf loope mov mov jg enter sarl jg test xchg inc xor mov loopne sbb push xchg lock pop mov inc std popa pushf jg sub dec popa push aam jg lcall imul jg imul mov (bad) xor pop xor sub jb fsubrs jp loop ret mov pop ja rorb jnp dec mov int3 jno test lcall out mov pop dec out push cmp dec loop,pt fistp dec (bad) sbb jno leave fcoms (bad) sarb loopne jg mov popa mov mov test and and fs mov cld push dec lret int3 divl vphaddbq and in (bad) mov mov sbb lret es pusha jg ds xchg pushf jl popa cmp (bad) dec jg stc mov stos (bad) aas test sub cltd bound mov int mov lcall call dec sub jg out or pop sti and cltd jg push push cwtl sub in and outsl push movsb inc ljmp adc or push adc mov (bad) xchg mov dec add imul xorl cmp jmp out scas imul cmpsl ror cld cwtl mov dec aas add and jae jae jnp jge push adc mov daa sbb dec push insb jg mov notb mov inc pop jg in and push popf cwtl xor aaa bnd dec inc mov popa std movsb in stos hlt xchg rcll aad cmp xor in mov sbb xlat pusha cmp ds or (bad) je fnstsw jmp mov pop xchg lods adc and arpl lock jg bound jno lahf (bad) lods jmp jns ret int3 or mov fwait mov les pop inc jb rcr sbb jg inc loop dec cmc and jg dec js pop mov pop inc aas xlat ret aam xchg add cmp loopne or pop test pushf dec imul mov mov sbb adc pusha jg xchg or mov push xlat jle adc and xor in iret loope mov jbe nop or cmpsl addr16 jne jecxz jg push inc movsb addl cli stos and jg pop (bad) mov dec cmp mov adc mov mov dec out mov cmp stc mov cmc and into jg imul cmpsb pusha mov out jg push mov inc pop mov push mov test mov adc sbb jg pusha iret cmp pop sub cwtl fidivrl repz idiv ja inc jmp pop inc jg xor sbb pop or daa xchg inc (bad) xor pop lds and es ss in mov push dec cmpsb adc outsl and ror inc xchg jg xchg aad inc mov inc and test jae inc jg fwait or loop fcmove jg mov in jl inc inc cs mov dec mov lcall mov outsl cmp daa jg adc imul mov pop arpl mov mov leave and adc xchg xchg or jg imul mov inc adc (bad) jge js cltd fisttp push cmpb jg pop cmp push xor cmp mov das or xchg fwait jae xchg fidivr cld push in loope or or pop ret push addr16 scas add test xchg pop jl leave xchg imul xchg div push pop insl mov jg xor sbb sarl test enter (bad) jg icebp outsl cli mov movsb stc mov jle pop (bad) (bad) mov inc ret pop jmp roll mov add mov xlat jno fnstsw push repnz imul loope jg cmpb (bad) jg std push out inc test shrb mov sub repnz jg imul jg pop mov pop dec pop test adc ds mov popf mov notw rcrl adc sub js in dec pop xlat cmp scas xor setge push sbbb out mov cmp jb jg pop jne xor cmp divb mov push xchg sbb xchg cmc cmp jo lret jnp add inc insl pop mov pushf lock cli test out gs jg scas ja sarb int3 cmp ficompl in jg jle xchg mov adc dec xor pop repz push fwait push sbb jle sti xlat ljmp loopne jg mov movsl fwait jg out xchg jl hlt out aas pusha imul add mov push mov ret dec xor nop inc inc pop sbb leave sbb in or cmp mov jg lock test (bad) imul jbe or fbstp fidivrl ds dec sbb cmpxchg out insb cmp int3 pop int cmp dec xlat andl movsl inc inc pop mov jg test pop cs mov add mov pop cmp mov xor int3 pop insb mov pop out fcoms sbb adc test xchg jae sbb outsl dec scas inc fstpt lods (bad) aad inc shlb (bad) cmp xchg mov dec push scas xchg pushf in lock jl pop xor pop push push xlat ret inc adc jg (bad) mov in aas dec roll hlt inc mov mov xor mov xchg sbb jl outsl xchg pop sub out mov mov push (bad) pushf mov addb cltd fwait pop inc cmp pop jg loope lcall cli xchg push outsl inc inc subl jg mov out scas (bad) das jg fisubr mov fsubrs xchg sti jg (bad) lahf (bad) jae jl jg inc push mov add add pusha jbe adc cs jg jb xchg adc cwtl jg imul and push mov xchg das ss ja sub mov cmp jg pop jl dec js mov pop jg popa shrb mov adc pop cltd jg ret push adc fs mov mov jg or mov lret jnp mov mov cmc lods rcrb mov lea daa jo (bad) mov xor (bad) xor jg inc jge xchg jne jmp push xchg mov mov das inc (bad) inc movsb and mov dec sub out je inc mov mov xchg jo xor sbb dec jb pop pop hlt (bad) (bad) sarb enter jae jg xchg das fwait sub fs daa add je mov jg (bad) dec add jecxz add daa add ss imul jae cmp and jg notb aam or sbb std lahf jl xchg dec mov push stos je jg fs jo andb enter stc push test cmp or mov data16 dec lds aas inc dec pop ss mov inc nop jae mov testl andl test dec fistl addr16 cmp nop ret or adc push fsubl rcrb arpl xor jg adc fwait jg outsb test in push rcrb inc pop pop nop fdivrs int3 ds fisttpl sti popl or leave xor popf jle rep mov inc xchg in mov inc call std mov fildl scas jg push loope dec push es jg jl ja outsb in pusha jg ror fs or in movsl clc fdivrl add dec push mov xchg jg insb mov leave out mov jp and int3 imul ja mov cs jmp jg add bound adc aas and add rcll dec popf (bad) mov lret faddl pop ja cwtl aas popa fidivr addr16 ret movsl mov mov stos dec addb dec mov jg xor ret xchg aas int cmpsl fwait and sti dec outsb movsb mov xchg arpl mov pop subb dec test lea xor add push shlb pop ret lods push lds pop xor mov or ja (bad) mov and mov mov notl repnz and roll mov shll jg inc inc push pop bound jg scas data16 cld or mov xchg pop or jg or mov dec push sub stos jge dec int3 stc xchg hlt notb cmpsb xor and jg daa fisub or outsb jae mov pop fstpt lret sti cmp jo sbb cld mul sarb jg stos jnp leave fwait dec out push (bad) pop jl push pop sbb xchg popl out jg dec divb xor xchg jns add pop inc out xlat (bad) aam jp xchg aas dec mov (bad) push push sbb push mov sub (bad) mov jg xorl push mov mov mov dec les fs push jmp and pop in lods sbb jnp push repnz jo push push jns andl mov int test mov and sti jg xchg cmp jg and lods std push cmp sub jg pop stos bndldx daa jg or stc jne outsb ret jg fsubrs add mov pop cwtl xor cmp mov rcll mov push ss stos jecxz mov jne cmpsb in sub fstpt call enter incl xor jne xor jg add mov aaa xchg jg icebp add add pop push xor jg push xchg rcl or data16 bound add cmp std jg ljmp jg adc flds mov dec jae pop mov scas xchg outsb or outsl mov mov addr16 gs jg pop outsb lods sub lds ret sub dec lea xchg push add cltd cmp (bad) sub fmuls lret imul sahf adc mov push enter mov movaps cmp dec daa jg stos cmp jg adc jnp pop sub jg ficom sub (bad) jmp xchg mov (bad) push inc dec test jg (bad) and mov ret xor jne idiv lds orb jg (bad) xchg xor loope jg idiv sub std inc mov addl or xor push mov test mov insb out jo adc andl int mov enter sub imul int fildl sbb jnp dec xor jle pop xor or sbb inc shld test xchg push addb and aas movsb sbb mov ds cmp jae push or mov loop scas rcrb push (bad) repnz (bad) lods and cltd ss jae sbb into insl dec dec (bad) sarl daa outsl popf (bad) mov cmpsb jg or sub fwait jae mov lods mov enter xor mov jg xlat cmp stos jge xor or add divl or cmp out out mov xchg and jbe jb fisttp jg mov gs sub enter ds rep inc push sarl xchg pop scas mov mov push lret xor fadds add mov cmp sub cli xor pusha and sbb mov or (bad) jae aaa aas mov das xchg mov xor dec inc outsl stc xlat sbb aas cmp lea cmpsb sarb and popa test sbb mov test dec add fbld bound fstpt orl inc sti loope loop pop daa imul je lret xchg dec adc dec neg dec fs test xlat iret xor and mov push scas mov mov (bad) faddp jg je add cwtl mov cmc and mov add dec arpl inc jg lcall xor pop pop out xchg (bad) loope inc jg cmp pusha pop gs push push inc mov jb dec in rep mov sub cmp inc jg popa call sarb std mov sbb ja jmp ds cmp push scas int3 xchg addl dec aas mov add inc inc ret testl into pop mov push lea dec dec add xor das sub arpl (bad) scas add dec jmp sar push int push inc pop stc cmp dec jg daa dec mov jg arpl xchg pop popl inc or or scas cmp stc push mov inc and fadds xor inc sahf (bad) jb pop mov rcrl (bad) jo mov pop mov jg xchg out push mov (bad) adc dec jo test pop (bad) ror insb and testl sar xor jno mov lret push into pop fs xor aad mov lcall (bad) icebp jg cs xchg jecxz (bad) xor jo push pushl jg out or mov cmpsb jecxz pop adc repz loopne jg adc leave mov cmp jg aam test jg ret mov aad mov lods rclb mov fdivrl xchg addr16 out jl pusha xchg jg outsb and std mov jp mov popf or dec push mov imul lcall bound sub pop sbb jg sub pop out and jmp or xor aad xlat sub mov jmp imul push xor jg mov stos mov iretw lea int or cmpsl jnp inc sbb (bad) repz jne jg stc lods dec dec fsubrl sbb in outsl cmp in or dec sbb jns mov push dec mov jl pusha sbb inc pop cld sub mov mov rol int3 sahf ss jnp enter pop lcall insb dec add hlt jg fisttp xchg cmpsl sbb cmp ss movsl inc popf ljmp test scas jmp out pop adc sub mov jae aaa add repz push jg inc cld mov mov jle outsb inc inc into jb jg arpl inc cmp xchg sti jg aas popl sbb jg dec out pop sub les mov addr16 ds adc inc sbb stc outsl add jge mov lahf (bad) pop pop loope jg adc and xchg fildll scas xor nop jg das lock addl arpl jg scas loop inc lret popa fistpll movsl sub adc ret cld (bad) and sbb outsb rolb into xchg mov sub popf mov sub stc dec pop jmp dec fidivr leave aam out popa and stos pusha mov push in mov roll movsb test inc jmp or xor cwtl jb push push jg xor mov push in test loope int jno jg add mov popf xor sub adc icebp push fdivrl stos jg jmp mov mov dec push jg andl mov in xchg int jl je cli xor add jg add movsl and xlat jg int3 inc out mov mov adc pop jecxz fistpll jmp (bad) pop jae dec mov inc add ja cmpps jo jnp idivb in adc push int3 ss adc out dec dec xlat or outsb xchg adcl fisttp fdivr out cwtl jg push pushf (bad) shlb dec mov pop jno xchg jp lret (bad) mov and dec cmp push mov pop adc ss jns js fisubrl jg inc stos sub pusha mov fbstp adc pop dec sub movq sti pop jns push or aas dec jp jo std addl dec iret inc mov cmpb xor lods stos pop fimul outsl push pop jg add movsl in cli xchg jg scas or fucomp sbb and xor lret push out inc cld pop movsb add mov jg add xor jg or out jg stos lahf push rorl jle jb and mov sbb pop (bad) fisttpll std mov adc outsl icebp pop sub jne jg dec out out jbe stos divl into ficomp fistpll and hlt (bad) sub iret jno pop sti adc xchg ret mov aas dec fnsave jg jns push mov arpl es jg push dec and clc mov jmp inc loopne push jg sub push jg and shrb fimull jne jp or out pop cld mov jl (bad) in dec insb push insb sub push enter insl es push sahf mov arpl jns rclb sti out sub outsl outsb pop dec mov jg mov xorl sarl and push dec cmp sub mov adc or insb mov jb sub add mov inc int3 pop js jg jmp rcr cmc push xchg dec mov int movsb pop notl push repz fldt xor xchg jg (bad) and pop jne mov sbb iret gs insl mov inc sbb mov test xchg (bad) and and mov and jg dec xchg push inc push mov ja test cmpsb dec jg cmp (bad) aas lahf jmp mov cmp jle fadds push mov sbb ja xchg cwtl sub jg add pop mov rorl scas pop mov sub jg cmp jge scas xor mov daa (bad) clc ja mov hlt inc mov mov mov cmp pop fstps mov mov stos or push xor out out (bad) (bad) movsb inc lock cli sbb sub adc mov pop pop addr16 jmp dec add pop add xchg inc xchg jle sub out and mov sub pop jge into hlt xor scas fwait subl std adc mov scas push pop movsb push cmpl out pop mov or call jecxz (bad) into cld jg out icebp ss stos aas pop push jbe mov or adc sarl xchg loope aas jo or (bad) lret lds jg mov test loope cmp inc mov (bad) bound pushf xor xor idivl add push jp fadd popa add mov jg out push sahf add js jecxz jg test inc (bad) pushf pusha arpl into test insl iret cmp jg cli fisttpl fcoml jecxz add fdivp (bad) mov jp jg push cmpsl inc mov lcall (bad) mov jmp mov (bad) xchg inc or leave in dec or shr add pusha lods cmp sahf ljmp iret inc inc cmp in mov outsl and xchg add dec or adc insl mov movsb jnp movl jns mov jg jecxz aas jp,pn int add loope inc orl jg jo mov jg sub mov jbe loopne scas jge mov (bad) push mov imul xor cmpsb mov out in repz jbe jg mov loopne mov sbb out (bad) mov ja fmull stos xchg jns cmp icebp jl jg inc pop (bad) ficompl push push xchg inc loope adc sub sti xor cmc xchg mov aaa (bad) repnz jecxz pop ja sub jo push jg arpl jg cs add aaa and cmp or xchg sbb mov pop xchg cwtl jg out aam loope cmc repz aas outsb mov test mov xlat sbb rorb pop mov mov cmp repnz and mov repz add pop aas inc jge cwtl jg cmc and mov cld lret fsts arpl and in dec jo mov adc mov data16 cmp sahf fld mov in dec inc jle gs cmp test aas inc pushf mov fwait pop inc sbb jg data16 mov mov or repz leave inc jg aas pop jecxz in xor adc (bad) jp and sarb sti or sbb stc popa inc mov xor outsl sbb xchg fbstp ss dec mov or jecxz mov xchg mov les jg dec dec jbe lock mov (bad) ss dec or fsts test pop rcpps add popa dec jle xor mov insb mov inc or and pop mov pop jg inc push xchg xchg push rolb repz jmp inc outsl jecxz jg int jns clc mov sahf cmp jg push fdivr scas adc ja cmp (bad) jne into es hlt jns pop or sarb out mov ret dec jg mov xor xchg push mov jg sbb sub data16 popl mov rorl adc lcall jg (bad) mov push in cmpsl push sahf jg cld mov (bad) jg ss arpl push (bad) xchg cwtl notl aam mov xchg jp (bad) xchg jg pop sbb popa jg adc push insb jns mov hlt rcrl testb or ja or lds pop jae iret (bad) sbb mov xor push ds jg jle jp scas mov loopne xor pop and and js hlt jp jg rorl jg cwtl stos pop fcompl push flds jns pop inc in fimul lret jg mov cmpl jl int3 jg fsubl sti jg jno lret pop mov icebp jg data16 dec aaa das outsb jg jae mov jl and sub jg (bad) lock and sti jno nop mov dec sahf cmpsb pop enter daa (bad) mov mov pop xchg cli fwait mov adc mov int3 pusha or mov xchg inc data16 and jmp jg pop stc lahf nop adc shlb push loop idivb pusha dec inc arpl outsl clc push cli scas adcb mov cltd insb or aas mov xchg dec scas es les outsb cmp (bad) mov inc pop pop push mov push pop fwait addr16 clc scas xor nop inc jg inc pop xchg dec lock pop jnp stc mov test jmp popf aas sbb scas inc shll jg xchg cltd mov test ret push ljmp push aad mov or imul jbe jg dec jge xchg mov mov mov inc or push pop push push scas xchg fisttpl dec sbb push sub or push sub sbb test mov mov add stos jg mov (bad) outsl push popf jg hlt fdivl loope out jmp xchg sti lahf cmp push arpl in int3 cltd xor push pop inc cmp mov mov arpl jge int3 jg std rorb inc adc jle mov mov in loope iret add pop popa mov fcmovnb repnz in call daa cmp ja mov jmp xor jg push pop loope scas jecxz add sub aas outsl stos lods push stc mov mov and call add loop jg xor cmp (bad) out xchg in xor lret xor in jg push mov scas mov sti inc jl,pn addr16 jae lds cmp hlt int sub dec vmwrite jg pop mov jne (bad) jbe sub and sbb or cmp dec lahf idivl sub push insl add adc mov push lea enter push cmp clc xor mov jg movsl mov adc sub jg push xchg inc data16 sbb xor lret mov jmp mov dec mov push push jg (bad) mov hlt and xchg mov shlb mov ljmp pop call icebp xorl jg sbb jl loopw jp sbb add scas aas cli jne mov leave cmp pop sbb cmpsb insb pushf mov sarb loopne cmp js andb and dec mov dec jmp loopne roll pop stos mov adc dec aaa jns jg fisub jle repz pop shl xor fs aas shll adc jnp push sub cld aas push mov (bad) pop dec (bad) cmpsl xchg mov xchg dec push pusha jg fs and js stos jp pop mov mov push je and cmp adc insl nop dec aas subl jmp outsb push movsb inc push jg push push in clc fldcw sti or sbb shlb mov cmp jg (bad) je push cmp lods pusha jo xchg (bad) fisubrl lret or out sbb nop pop push insb adc roll xchg movsb cmp mov inc or pop push (bad) cltd daa pop cmp cmp sbb (bad) loope hlt lret dec jnp popa test mov pop enter jg push aam xor (bad) dec mov pop stc mov push add or jae mov jg mov jg scas cmp sti je cmpsb sti in inc outsb insl push inc push xchg ret lret scas jg (bad) xchg jbe xchg jg cmp dec mov push cmpsb aad xchg jg push test adc sub xor (bad) ror add or jle and addr16 dec inc jg push push add jle movsl sbb xor dec ss scas dec mov jg test adc flds mov mov gs mov lret inc jg adc mov jg sbb data16 jg sub lds adc imul (bad) mov cmp fnstcw sbb and scas es add add daa pop adc jl lods jne pop mov incl add xor lret lret and js fist xchg pop fistp jg ret das (bad) jmp jg sbb adc pop shll xchg in dec outsl cltd pop fnstsw cmpsb mov cmp movsb cmc aas inc enter jg xchg push mov pop (bad) repz mov incb jg pop loopne stos dec repz xor cli sbb clc negl xchg decb sbb lahf fiaddl pushf cmpl cmpsl mov aas insl inc dec push push stc jg pop inc std mov fisub xchg loop xchg mov dec jmp lods ret lret jo or dec jmp adcb idivl pop cmp shr mov pop bound jg pop xor dec sbb gs repnz add dec (bad) leave sub xor lret jne pop xchg push add popa pop push inc jg popf (bad) adcl mov into add inc push jg,pn out xchg andl cli sub dec bound jg mov mov mov cmp xchg pop (bad) pop jg adc ja loope loop push mov mov mov xchg ret arpl loopne jmp sub mov xor dec mov sub inc pop out adc xchg xor push jg xlat sub cmp sbb push sarb jge in std push and mov add movsb pop mov push data16 fwait cmp pop mov icebp js mov sub cmp xchg jecxz test sub jg mov pop mov jp div stos sub sbb (bad) inc push rol cmpsb jg add imul jg sbb pushf shrl push jg xor mov inc xchg jne out out jg (bad) enter mov jg cltd sbb jg movsb in arpl outsl lahf mov mov ljmp add xorl fnsave jne and jg imul mov insb and pop push icebp xlat xchg jg iret xchg fdivl pop mov pop mov movsl cmp lods into cmp aam inc jg xor ficompl mov xchg out fwait aas test lods out arpl jg xor insl decl jg and add repnz mov xor sub push cmpl outsb xchg cmp iret jg jo xlat scas mov cmp and rolb rcrb mov or jno push jg (bad) mov es cli jg sub cmp enter roll outsb xchg imul jmp jg cmp mov fdivs test les mov push jg push mov cltd nop jbe inc ja mov cmp mov pop adc push jg pop rcrl jg outsb push les mov stc ja sbb hlt or sbb jg mov aaa fucomp mov xor mov movsl jg insb sbbb aas jo push pop test push insl repz dec jg dec mov scas shlb cmp sahf mov push std and clc jg rolb inc jg out cmp dec sbb sub push shr js jle shl mov or (bad) jmp mov xchg jno je xor xor add aas movsb rorl add xor inc jg mov jecxz sahf fdivrl lds dec gs lea mov push and xor jg clc xor mov jg dec pushl aas xor cmc loope jg ds jbe int jg aad push sub scas jg or add xor inc outsb jg ljmp push jge js cs jle jg dec scas adc push addr16 out xor mov aad mov fmul xor xchg shrl mov test ss cmpsl inc mov dec lcall add mov push inc je ja cmp ja push add jp mov ljmp sbb jbe popa icebp lods and mov xchg xchg jg cmc cs mov in mov into mov mov popl mov je addl or xchg dec jg fxch jge jecxz mov xlat ror jle pop movb movsl mov xor fistp jg xchg bound jg xchg add jo sub les pushf mov sbb mov add add popa das jg add (bad) inc dec jb mov sbb stos lock je sbb xlat mov fbstp mov pop pop mov mov test hlt (bad) jg sbb mov in sub das arpl dec imull xchg jg in lcall ret insb jge sarl ds jl bound jmp add nop push scas fisub idivb sub lock pusha hlt xchg cltd aas iret adc cmp fwait jg addl push adc jg mov xchg or imul xchg jl jg dec lock nop jg sub ja jg xlat mov sub shrl jg ljmp jg push xchg fxch and imul adc mov outsl jno mov mov sahf icebp mov lcall push (bad) lods sahf lret pop std out gs mov jmp jg dec cmp je mov daa xchg cmp mov dec iret in insb inc xor jg mov pop into or jg xor jg jae pop (bad) fmul aas ror xchg inc insb xor fst mov icebp cmpl ficomp (bad) js mov mov mov xchg mov mov adc lock adcb sub stos xor fsubrl fbstp adc add inc mov sbb cmpl lods into mov xchg or arpl pop mov outsb in sbb movsl push fidivr jns pop jmp xchg adc rcrl fildll dec int mov sti mov ficomp and add sbb inc js and mov mov stos add int sub jmp xchg (bad) mov sub sbb lea push cmp xchg sub iret addl mov and (bad) lret pop jg test add fisttp push out sbb mov adc jle mov lock setp call lret les adc fs xchg cmpsl mov inc mov mov inc ss je xchg iret adc mov mov push mov xor ss sub loopne jbe and sarl push jo mov testb daa push (bad) into mov adc insb stc (bad) mov ror mov pop (bad) into and in iret scas (bad) rclb cmp (bad) lret addr16 les in adc mov jo pop or and dec in sti pushfw addr16 or jg push mov jmp pushf lock aaa adc cwtl adc jg ss loop (bad) push sahf cmp pop mov fnstcw fidiv jae out lcall cmpsb dec je mov add lahf gs fidivl leave or notl mov pop sarb icebp adc jg xchg loopne pop mov add test adc cmpsb out pop jg jno xchg call out pop outsb aaa and xor pop test mov nop mov mov dec jg mov jne jg mov (bad) lods mov sahf push dec cs lcall mov jmp jg jb (bad) adc loop jg sbb xchg pusha (bad) mov pop jg xor and adc ja jg,pn and pop jg inc and mov push push jg lret inc aad test out cmp lock pop stc xor scas jg imul test inc ss cwtl test adc inc rclb xor xor mov and hlt mov popa xchg imull mov push sbb movsl jg jmp fcompl aam and xchg out pusha loop cmp push into mov fistpll outsl shrl and pop rolb int in (bad) scas sbb iret cmpsb pop sbb inc (bad) sub xchg pop popa aad popf inc push jg rolb lods sub add jmp xchg jl sti bound ret sbb ficomp int3 xor jg inc iret jo or mov sti fwait jg jmp adcb mov pop jo mov inc in (bad) (bad) jle jecxz lock mov lahf dec adc out leave scas mov insl jg add mov cmp aam jmp or cmpsl enter std jg orb aas mov xchg add jnp inc push (bad) jg sub pop pop rol jg adc jb rcl sti imul arpl int into pushf addr16 mov push das mov and fwait dec aad inc xchg dec test adc sbb inc out (bad) sti pusha es jns pop pop push or int3 dec scas xchg mov std scas inc mov jg and inc mov daa popa out push ja call inc xchg cs stos cmpsb add inc inc or jg inc arpl pop and or jl inc add js ja ds and pop cmpsb jmp jg pop movsl jae inc sbb sbbb sub enter jg (bad) mov data16 push and and jbe mov mov pop mov pop in inc (bad) pop dec test leave std pop nop jg scas dec push xchg int jle mov lret je repnz mov sub mov stos jg sahf call scas (bad) jg lods sbb mov fidivrl cmpsl stos ss push cmc stc sti and sbb std mov out add pop (bad) jg mov aad lods xchg gs mov mov bound add popa nop mov add cmp and mov mov imul xor popa scas jg and sub rorb mov fs xor push jg sub inc or push popf xchg inc xchg jg dec inc std insb mov dec aas mov cmpsb call inc enter jnp movsl or jg mov jne mov mov cltd push xor or fdivrl push inc out fwait ss xor pop pushf outsl jg mov ret jne sahf cmpsb and sarb cmpsl jle divl jecxz jg sbb in aas sbb movsb xchg in (bad) pusha push adc adc cltd xor insl cs mov dec jecxz jg sub push mov sub mov xchg stc mov fsubl cld lcall jg inc add mov in ret mov xchg fstps lcall xor leave sti cmpsl push outsl and dec add ret jg (bad) mov es xor xor dec mov mov fstl mov shr sahf mov je inc nop pop pop mov push js inc sti jp jg test push dec jg adc imul aad cmc push inc jg aam cld mov nop jl shrl mov pop xchg and jg insl vfnmsub231pd jp add and jg lret popa lods imul adc jg push push jg mov dec out mov jl cmp dec fcmovnbe jg sub popf push mov pop inc ret pop jg or dec push jg sbb mov mov sbb cmp sub pop icebp dec dec mov jl das ja pop (bad) jae aam push cld or or gs jmp jg dec ja ret fsubr sub sbb icebp jg dec adc jg lret jo push int3 stos fdivrs or jp nop xlat (bad) repz jg sbb mov jns arpl adc pop mov and fs jg gs add and jle xchg jbe mov mov xchg sahf sbb pop jge std add lret xor (bad) inc nop lcall fwait mov stc lods mov scas dec aam mov (bad) pop mulb sbb std push aas dec push mov (bad) mul jae pop sub jp and orl mov js jp dec xchg (bad) std (bad) nop mov cs jecxz lret and jg mov (bad) fcmovb adc jns cmp dec sub ljmp jno jmp push mov add or stc fnstcw cld fdivr js mov xchg mov jg lock sbb aad jmp lock repz push out jg xlat mov int inc add or out jl pop jg mov hlt cmp gs nop mov sahf dec and rcll jge dec jle cmp push push jo pop popa or sbb sbbl sti dec scas jg int3 outsb ret inc push ja hlt mov sti outsl or lock mov fcomp dec popa lret lds (bad) cmp jl pop xchg and jg test cmp out sbb xchg or push push loopne push mov (bad) lea test jnp lahf or (bad) test jg in mov ljmp jg xchg xchg xor mov jg in push inc adc xchg push rcll xchg cmpsl xor pop dec sbb outsb or mov jg inc stc lods lret fnstsw push mov dec aas imul dec mov xor andb jg sbb inc out jg mov sub xor in das push xchg xchg sbb push jns repnz ds push repz inc push out sub cmc cmp jne cmp rcr add adc and pop mov mov adc push jg mov mov insb stc adc stos adc into push out std cmpsl jecxz mov scas push sarb int3 rcll fldcw adc pop jmp mov mov outsl idivb cmpsl or pop sarb add test mov (bad) pushf sub fs dec lea push sbb or mov sub cltd fildl pop jg jl std pop lret jg ljmp jg xor jno fidiv aad jb fstpt or scas (bad) lret dec push jae jg mov mov xor (bad) mov push xchg adc dec lods jle jg arpl adc aaa imul daa jg je xchg xor mov or enter jg mov ja jg (bad) or push pushf in mov fisttpl ljmp aas pop dec int3 fs add and repz cld out inc cwtl incl jg popa lds pop jge mov arpl lcall pusha sti fimul jl xor fist xor mov (bad) not mov les pop jae sbb jle popf add jg sahf mov lret mov insb push dec bnd jns inc xchg jmp test divl js cli fcoml ret adcb rorl and lahf mov mov jg push test movsl (bad) pop push push test sub aaa pop mov jb push mov xor idivb ja sarl push cmpsb sub stc push pop (bad) jg test inc (bad) inc jg sbb dec cmpsl add mov (bad) sbb call mov add ja divb cmp aas mov mov mov and dec jg je cld inc cmp inc (bad) in fstpt cmp push fcmovb xchg daa insl shl jg sbb and jne jg std pop mov jg lahf adc lods (bad) sti jg mov out mov push aas pusha adc push or test jl mov fnstsw iret pop fs test inc and cmpsl cmpsb scas sub arpl std cld jg int mov fsub jg (bad) (bad) xor push sbb inc stc pusha inc xchg test test jb dec das mov jl mov sti inc jo cmpl lods gs jg js pop (bad) xor jb pop dec push lcall cwtl pop jno pop fcomps fdivrp inc sbb mov es push and rcrb daa jmp or jae mov dec cmpsl xchg (bad) xor into aas lcall mov je inc cmpsl and jg pop fsubl shrb mov add jg xchg pop jg (bad) mull jg aaa mov in or inc popa push movl stos adc push jg dec mov out add mov aas mov icebp fimull jbe fstpl aad int3 and add inc add xchg xchg jg sub inc daa arpl jg sub pushf sbb and adc add dec repz push inc mov jg (bad) popa stos scas mov push icebp and xor xor cmpsb popa lret jg loope mov or jp xchg hlt ljmp es xchg jg cmp sub inc (bad) push sbb inc ljmp sti add jno push mov cmpsl jo ja xor mov mov mov mov scas mov or xor call mov cmpl imul adc fucomi dec incb push mov js idivb lret int jno pop mov pop add sub scas push adc pop daa inc mov mov pop nop test pop push fldcw or mov sarl pop shrb mov enter (bad) xchg cmp lahf bound jg sbb sbb je sub (bad) mov aas outsl mov pop rcll pop ss inc jg jae xor push jg cli mov movsb repz and stc call xchg lods inc cmpb popa int xor aas jns scas bound jg mov sbb or (bad) inc jo xor mov push dec mov aam sti push imul jg fmuls loop inc xor lret stc pop cmp adc inc add mov clc test in pop add leave lea push jg test cmp sbb xor jmp ret mov push jg,pn into inc out push mov jg dec fs cld lds pop popa unpckhps lahf sub mov je pop aad dec cmp pop jg lcall mov imul mov dec cmpsl test dec xor mov push xor pop movsl test xchg jg or fnop fwait mov push fstps (bad) inc push scas cmp pop cmpsl icebp mov xor push lods fs mov cmpsl mov jg (bad) hlt mov mov int3 cmpsb (bad) xlat inc xchg add stos cmp popf mov pop outsl js idivb adc mov jg push pop xor and mov (bad) xchg xor mov fdivrl sub adc cmp sbb dec cld loope sahf jg push inc inc xchg daa xchg fisubr outsl push or add jno mov mov dec outsl mov rcll addr16 jne sub loop mov mov lea int3 dec jno xor ja fildll add dec xchg dec pop mov push cmpsl pop inc imul mov loopne jg jge push in enter (bad) test cmp sahf cmc adc pop and aas cmp mov dec shll xchg mov pop inc inc es das fnop loope call in jae jne std out lret jg xor pushf jmp outsl and xor aas cmc (bad) xor mov xchg jg js test adc cmc packsswb jg mov pop push mov inc xchg push repnz adc sahf push sarl pop sub (bad) mov mov ret jg (bad) rcr pop sub jg or jmp ljmp pop cmp inc mov addr16 jg cmp sub loop and faddl lahf jg rcrb jg mov stos inc aas jae adc hlt fmull out sbb jmp mov jne inc pop jg pop mov and sub fstl inc push repz xchg pop sub popl jg push pusha nop fs pop sub popf (bad) repnz mov jg mov das je outsb sarb dec inc dec cli ret and mov nopl mov sbb aas cmp movsb outsb pusha lret into jecxz leave xlat xchg mov int3 adc inc push adc imul push inc mov pop pop (bad) dec jge std cmp jg outsl push imul mov sar mull cmpsl jg add mov leave out clc ficom cmp dec movsl sub and pop aam push add jns cs (bad) shrd addr16 jno mov sbb adc cld repz mov mov adc insb and sbb xor mov mov dec add xchg sahf out sarl inc icebp jg arpl push mov jg gs int3 les push fcomip cmp jg xlat pushf pop dec rcrl les jno jb aaa inc push jg pop push sub xor out push or mov jns,pt jp movsl jg mov fcomps fs scas fcompl sub roll jno cli push (bad) xchg add (bad) sbb addr16 data16 jns inc inc (bad) mov into jg cs nop and sahf call sub roll xor sbb sti or jg (bad) and jg cmpsb das pop (bad) mov mov mov pop pop xchg sub ja mov (bad) push in inc dec dec cmc stc repz inc aas jge std jo add inc push in jg cld mov data16 or pop adc (bad) call sbb fbld sti imul adc dec (bad) mov (bad) ds xor jmp mov jge jno inc arpl mov pop dec or add jg add add mov ljmp jg fistpl pop test sub add jp jmp xor inc nop jg mov sub das jl mov jmp xchg outsl aaa adc sub scas aas pop mov stos push and xchg sub aam add pop jg les mov inc and insl stc inc sbb jp pop ret or clc testl imul out (bad) lahf shrl pop rcrb mov pop in loop cmp sarl or fcomp adc cmpsl and add jecxz sub mov lcall lret lds jno je in push xor push ficoml push mov jg leave les jg fistp push jg pop pop movsb sub jo mov mov mov mov cmpl aad cld loope movb cmp sbb add sbb push jb imul (bad) ficoml mov aad fs adc dec stc rol jg jmp mov inc pop push xor cmp xchg fildll (bad) jecxz pop imul mov xchg popf jb inc push push out sub jmp xor clc sti les push dec sub ret lods jg (bad) fsts mov mov ror inc mov loop pusha faddl fs and arpl dec lret add dec (bad) xchg cli and push (bad) movsb jg addl out leave es pop sub and inc (bad) jg fidivrl inc mov ja imul lds jg or dec bswap add mov push out lcall call pop pop test (bad) negl divl jg push add gs xor mov push loopne test out xor aad xlat push int out cs jg movsl in cmp push lods and jnp push inc outsb in aas push ds sub mov mov add xlat pop aam mov popa xchg mov out or inc insb cmp idivl in mov out xor int and xor inc loope adc test sar push or fwait inc mov loope jg mov roll popf xchg cmp push (bad) jg xchg push xor and stc jg es jmp mov mov xchg daa jle std les mov popa jg jbe lcall (bad) xor inc adc inc jmp cmp jl jg push sbb jns hlt dec jg mov add rcrl push dec or and jg popa cmc rolb std mov jle inc mov (bad) movsb fistpll inc lahf jo lea je xor daa jae and into jne mov push je sub pop mov sub arpl scas loop ret cmp mov jl xchg jg lods push xor pop push xlat cmp mov jbe inc and xor lahf dec dec cmpsl add inc sub sub lods sbb sti sbb and jg test dec out jno loop iret test fild push jg test rcrl mov pop stc imul cs jg push dec xlat shl ljmp sbb jg loope dec not sbb in jb cmp cwtl jecxz or scas adc ret ljmp add sarl cmpb push push cmp inc or jl push xchg mov xor bnd repz lea sbbl je mov ljmp push and cltd jg fdivl push std pop or jne loop mov or jg cwtl lods outsl in pop cmp stc in mov dec cs scas dec adc (bad) loop jae outsl leave fnstcw jg mov cmp sbb pop clc pusha xlat fidivr ljmp xor add popa dec add and sub aas outsl pushf jg and dec fnstsw (bad) push mov mov aas sbb mov rcl fsubs mov iret jmp int3 mov out push shrb adc jecxz,pn push lcall jg (bad) test jg fcompl cwtl std or nop dec ds clc and jg push xchg xchg pop push sti mov xchg xor xchg hlt icebp jg call mov add pop mov mov adc jg mov push add add ja add push jg stos mov push scas mov (bad) fisubrl jns enter pop std mov jnp test lock loope lea dec insb cmp out imul iret push dec ret xchg lcall lods adc xchg rclb jg inc mov pop jg pop loop mov jl inc mov movsb (bad) lea js fs dec mov das inc pop mov adc pop xchg mov movaps jae in idivl insb jg out xor mov jl push push frstor mov mov shlb sub insl push inc mov or lds push je aas mov dec aaa dec loope jg xchg or jg out pop cld dec iret add lahf bnd push push pop das push cli lock pop xchg mov mov mov mov test cmp jns jp (bad) loope enter jmp jo lcall pop mov scas mov frstor pop jg xchg cmp push sub jnp loope (bad) adc jg test mov popf or cmovg out mov es fwait gs lods (bad) jbe jg mov enter pop jg mov nop mov and (bad) xlat rorb movsb outsl scas int sti cmpsl xor push imul or xor imull mov sar popf ja inc arpl mov mov or fdivr add ret insb test fstps jnp dec jl cmp cmp push call pop daa std sbb pop notl and mov outsl mov js jg orl xchg adc (bad) jl divb inc daa sub push (bad) lea mov pop pop mov or pop repz xchg inc lods fistpll jo outsl mov dec pop dec jg call lock dec inc xchg jg test cs ficom adc cmp mov dec dec aas pop mov dec lds adc aas add mov inc hlt mov fnstenv pop ds cwtl jg std rcll push orb push iret sti mov fdivrs push mov sub inc jg cmpsb pop jecxz or or push insl jne loop rcl jmp mov popl (bad) adc pop jg pushf jp ja int mov dec loope les sbb out xchg dec push dec jp arpl cwtl ds into jg mov dec popf xor mov push inc jg mov insb mov outsl add cwtl (bad) stc popf sbb pop jg jae mov cmp sahf enter push mov ss add jg int test fistpl sbb mov jg popf shll ret sbb jg mov xchg addr16 sbb in roll jb sarb jne movsl inc loopne adc jg test sti sub jg push mov push mov and rep imul dec ret js test popa int push mov jge xchg sub sbb scas push add push sbb dec jno js addr16 jb cmp mov (bad) pop add (bad) insl ret leave (bad) or sbb std (bad) adc lcall mov push int3 or test cmc mov jg fwait popf scas sub out jbe outsl and call jns addr16 jae das xchg jg jg push pop and adc jg push sarl cmp ljmp pop xchg add jnp gs loopne xor jno nop jp arpl (bad) leave jg daa mov push or jmp into sub xor test pop cmpsl mov inc push (bad) or repnz mov sarb (bad) fimul sbb movsl and je cli outsl xor sub mov adc push test push mov test jae pop jg fisttpl clc sbb mov lahf jg jns mov xor loop loopne cmpl addr16 adc (bad) in sub sbb or insb pop sbb test adc mov add and call addl sahf loope jg adc imul adc (bad) jge xor mov hlt jbe cmp push mov inc es punpcklwd leave and outsl dec mov pop fldt icebp inc sub jg data16 loop inc jg add and jbe sti test js out arpl sub jg mov cmp fidivrl jle cltd sbb xor pop int ret das cmpsb push (bad) jg xor loopne fs sbb test (bad) mov mov mov inc cld jge jg and pop lahf aam fdivrl loop ret mov clc mov dec std xchg dec repnz lods test cmpl into and (bad) sub inc jge mov je pop daa repz daa int xchg inc jl ret negb jbe xlat xchg std sub out outsl jle xchg cwtl pop sbb cmp fiadd aas dec sub inc rcl jg cli and sub icebp push bound lea mov int jo adc dec jg mov into mov jg dec pop xchg jo mov xor cmpsl cltd loope aas jg (bad) adc nop xorl jg je ljmp subl sbb fmull push push and rcr jnp jg rclb negb add cmp ret jl jno jg and add jo pop ja ds lahf jl repnz lret (bad) lods or jg add fsubrs fnstenv jg mov dec mov ja pop mov int sti pop fistpll in add arpl js int sub adc jmp xchg mov leave (bad) dec shll mov pop cwtl or cmp aas xchg sbb push ja cli sti daa (bad) psubb dec dec jbe scas mov aas sbb cmp push out (bad) mov mov cmp dec sbb lahf xchg rdtsc add cmp push pop (bad) fisttpl insb je loopne call pop push jg mov loope fcoml jg xchg arpl outsl mov popf inc xor push repz dec pop and dec cwtl inc or fsts push (bad) push cmp lock cld push fcoms jg mov into in cs sti sub inc pop add jns testl mov repnz mov stos mov pop dec sbb sti xchg push inc loop ficom cs mov cmc les jae jg stos mov mov rcll push out jg ja cltd frstor mov pushl xchg cli nop jg push sub push cltd or jg (bad) xchg cmpl std mov mov aam push sbbl mov adc lock out pop mov xchg inc (bad) outsl mov popf fsubrp jo inc push cld das test cwtl dec jne jg loope data16 xchg jg dec xor pop std jg dec adc fnstcw mov loope in mov aas (bad) jg mov mov jg push arpl or idivb iret shll enter mov jg loopne das inc leave lods mov add rcr and cmp test cmpsl push pop loope dec pop push cwtl sub shlb aas and testb mov stc jg pusha cmp pop pop adc lret add push pop dec jno lock add shrb jno mov outsl and ja mov adc js bound jg pop xchg jg jbe test or out mov cmp dec sub jg cmp add jg jnp mov jg or cli ja stc out mov repz lea inc or push daa addr16 push mov or sbb ds sub xchg dec sbb outsl pop push stos sbb dec jecxz inc cwtl jg mov mov (bad) dec inc jg cmpsb pop std aad add cmc aas ficom mov jge,pt out lahf dec imul push mov pop jg ja mov test fcmovu jecxz or ds inc cld mov insb jg pop faddl mov mov inc pop jge jg pop fldenv jg repnz mov test in adc and jns dec test into jmp dec jg bound aad aam mov (bad) mov hlt jnp outsl inc inc lea xlat cld jl mov fbld cmp cmp push pop orl mov fbstp pusha sub aaa pop jg cmc pop outsl push mov adc out jmp mov mov xor add ret push dec and arpl or add inc cltd sub adc jg out shrl into cmp mov mov add and jp mov lret jno jmp jnp pop (bad) jg cmc sub push push loope jg clc stos sahf rorl rclb jle xchg (bad) jp mov push jb add inc pop mov jg add sbb aas inc in and xchg (bad) push aas mov pop cmpsl xchg pop arpl sub sbb (bad) stos or jnp fwait leave xor scas dec (bad) sarb and les jb test test outsb je jg cmp mov xchg cmpsl add arpl or imul xor xchg mov sub xorl add test xor pop aad arpl jg pop mov adc jle inc adc clc jg ds cmp repz aad add call dec xchg pop sarb ret dec out pop (bad) jg loope dec adc push adc xchg mov push jae std cmp xchg rorl xchg and mov outsl (bad) mov and cmpl pusha mov jno cs jmp pop push stos das push cmp jg add leave mov adc push stc inc and outsl lds neg scas add jnp jg dec pop cmpsl adc xchg (bad) xchg js out jg in gs add aas movsb in push insl push jg (bad) aaa (bad) mov outsb bound jg cmpsl mov fsubl mulb sub sti jbe inc int3 xchg jg push int xchg push in xor mov pop les jg and imul add popa pop xchg out adc jo mov lds imul ret push push jns adc and or sub cld cli fwait nop mov mov dec test jge dec jg xor inc add lea sbb jg jp stos or lods jo adc jae mov dec fisttp pop jg push or mov mov sbb popf stos scas add call hlt mov inc mov cltd scas pop push dec scas loopne xchg lock arpl push mov and jg aam icebp sbb sahf jg mov fnstsw mov cwtl sub dec push mov xchg dec fwait add loop out sahf or jl or push sub pop jg pop push out mov incb (bad) sarl addr16 mov cmpl scas ss fwait dec jp outsl dec mov or push push jg movsl inc xchg or fildl jg xor xlat cli arpl jmp push and sub data16 loope jg in pop mov das push jg sub jge jbe xor sub loope jg jecxz inc dec adc sbb push pop out add jg cmp dec push add jg call aam jg push sbb dec sbb (bad) dec jl pop xchg jno cmpsl and xor ret pop xchg and cmp gs dec push mov aas movsb inc (bad) mov pop pop dec testl xchg (bad) xchg inc mov int3 out mov scas add inc test xor or sbbl push push scas inc in aas stos dec stos mov loopne dec add inc mov jo xor pop pop mov jns jg pop loopne mov in dec das mov insl (bad) or inc jns jp inc inc in jg ret imul mov push mov mov (bad) mov xchg pop or dec dec loope pop dec aas xlat pop icebp sub cli inc dec sbb aas jp jecxz sub mov jg adc jne jg mov add add inc jg (bad) sub movsb jg popf xor jge mov fldcw fwait movsb cmp sbb (bad) (bad) data16 mov stos jl idivl scas jb ds sti jg (bad) test es xor mov into or (bad) imul or lds (bad) scas out mov jg xlat loop or fnsave (bad) jg dec pop and pop xor cld xor dec ja sub jg out fdivrs in inc stc jg jo ja mov cmp and mov mov mov aad lret fbld cli gs sbb jbe loop jg lods clc rorb aaa ljmp jg xor gs outsb add inc (bad) push dec fisub jg ret test jg nop fisub inc push popa loop jg loopne add and cmc jg cmp push rep mov cmpsl loopne and adc sti mov lods cld loop jmp call or and test psadbw push jo jg sti movsb dec (bad) loop lret inc sub xor mov push mov fnsave stc enter sbb or xchg jg jmp mov in jp sahf data16 arpl mov xchg mov mov mov popa fdivrl in outsb out and lea jg xchg xor adc jg les test dec stos jg fsubl or xlat push mov rcll adc pushf lock not fs pusha jo sub scas push idivl mov aas and jg (bad) int out and add mov or mov xchg dec fdiv arpl push inc adc and mov push std push mov incb outsl add xchg jg xchg into jns push mov and inc jg mov ret and lret (bad) decl jnp js add imul pop jg pushf inc jne rorb mov push dec dec out mov stos cmp add sbb pop push push push out sbb sti xlat test cmp cmc (bad) fstl jg loope mov ljmp mov loop and sbb cwtl frstor lcall imul push popa cmp (bad) mov dec or jle jns cmp xchg jae add fstpt jo and jg cmp mov fstpl push pop jae jg in cmp sub jg xor inc and push sbb dec dec jg sub nop pusha je jg pop outsb pop frstor adc leave sub lds test mov mov icebp cmpsl sub lret test mov add jmp into or and pop (bad) mov or adc lret cmpsl enter adc push out mov repz sub int aad faddl add scas or aaa sbb arpl add rol mov ljmp mov cmp jg mov outsl push mov sbb jo inc stos leave jg insb pusha xchg mov jl jg daa lcall cmp inc (bad) mov mov jg push ret adc push fidiv mov or push movsb dec adc inc jb repz fwait sub dec mov outsl add bound ret mov jge leave insl inc pop xchg jecxz (bad) jg pop stos (bad) xor mov mov mov inc mov mov (bad) leave jbe mov mov sarl dec into rorb push adc add adc jg outsl jo sbb (bad) test fdivs jb pop jp inc test dec mov insb and or cmc jae and fwait xchg mov and ss jae sbb dec inc jecxz mul cld js ja add adc sub mov xabort les sbb rcrl push jg push add cwtl jbe nop jg call imul push rcll lods jle cmp mov arpl outsl popf push daa lahf cs jg inc cmp inc push jg mov sub insb fldl jb lahf add add test mov pop shrl cmc fldl jne jg out and leave add (bad) pop and add repnz fwait int3 call mov adc lret inc fcompl push jg mov je lret data16 jg adc pop mov jg xchg sub cli push stc out inc fsubrl jmp test lods inc push jg sbb xchg fdiv (bad) ss cli js jb ja addr16 jg inc dec test cmp fidivr pop add xlat shlb aas add mov sahf mov repz fsubr fistp mov sub dec cmc push pop cmp add jmp jg push fs inc xchg addr16 lahf adc aas push fs jae and xor arpl loope rolb mov faddl cltd iret clc sbb jle aam popa push and js mov movsb imul jge sub ror jg cmp pop sbb mov jge push dec lea push popa dec insl xlat ret mov lods mov imul std movsl or mov ss fdivrl mov jnp loope mov imul or scas aas jns mov inc jg shr lcall xchg add sbb outsb sbb or adc cmp add sbbb (bad) jg sarl test bnd das aam (bad) cmp pop scas jg dec aad in pop ljmp push xchg adc jg cmpsl mov fucom pusha data16 movsl ja jl mov pop inc push mov dec jae mov mov cmc cmp dec out cmp aaa (bad) jo xlat pushf mov jg in cmp pop sti orl test jg xchg les mov cs aas aaa mov dec or aas sub repnz daa cmp mov add outsb icebp inc or or (bad) ja or or fcompl int mov cwtl lods dec jg clc xchg xchg out mov jg or push or xor mov jmp into add push pushf rcrb ds lahf int3 daa and jg mov inc insl mov clc dec push loop adc jg xor add test add dec dec fnstenv xchg addr16 inc cltd push test mov add cs pop xlat or mov and mov das sub jg xchg xor decb jnp insb dec pushf mov (bad) xchg inc add jg arpl cmp pop imul or dec cli push ds adc push cli repnz add ja mov (bad) mov jg adc scas roll out add sub ret je fldcw dec cltd mov mov dec inc and cwtl mov xor out call xchg clc movsl lahf outsl jb jl aas scas or ja enter mov add dec jno leave (bad) jg lret je ret outsb mov sub cmp iret jg cmp mov sbb nop lret insl cmp dec jg mov xor jbe sbb lahf xchg cmp dec cltd xchg int3 add mov ja bound mov imul cmc mov mov push jg push sbb jg mov shrb test cmp and (bad) xlat es fsubrs cld lods outsl push and je push loope jbe lock pop mov sub subb aas sub cwtl xor add inc jg adc gs and dec push call jg mov xchg out ja jg jbe cmp sub push sar mov jg lea mov test jg add out xor xor sti in sub push jg jae lods dec or lret cmp ds lahf mov ss mov pop sub sub cmp lcall pop cmc mov bound imul or fisubl lret gs cmovle fwait jl and and jg or dec outsb iret mov pop out cwtl lods addr16 or jo xor mov (bad) cmp adc lods (bad) movsb sbb xor mov pop fmuls jno repnz cltd in out push xchg sarl xor lret jbe xor mov in sbb sahf testl imul out inc gs jg out xor cltd je push inc clc inc jle jg (bad) xchg popf jbe mov popf push div jnp lcall or mov jg test fcompl daa or mov cwtl xchg les inc cmp sti scas dec scas cmc xchg xor jg pop aas and dec sti sub dec jg sbb lret jg jo rcll mov pop ds mov jecxz in jnp push fwait xchg out pushf jp cmpsb xchg test push call enter stos jg popa (bad) mov ret add pusha jbe adc sub pop jg mov push xorb xlat pop mov bound leave iret adc adc mov adc mov sbb sub jns mov test mov add push dec sub cmp aas cmpsb cld push dec mov jo pop enter xor je push sbb add aad jg add ja outsl lods arpl outsl (bad) dec mov test mov in (bad) addr16 mov push inc (bad) jg pop dec jbe rorl dec adc fsubrs fldenv xchg iret lcall icebp lea cs (bad) cmp test sbb cmp sahf jnp cltd mov push out idivb dec push jecxz mov insb inc pop repz lds leave jg mov cmp imul jnp pop inc sub insb cli cmpsl add jg ss (bad) inc inc push jg imul imul jg push mov (bad) cmpsl dec add lret mov jg push testl fisttp push fsubs jbe cld pop or and arpl jg xor dec jg xchg push lods sti mov subl aam lret jg jge add jg out dec push into js cmp adc and sbb pop test movsb jg jecxz popa movsl jp int3 sti or js ja push and movsb and mov addr16 push cmp leave mov xlat icebp push lock jg les xchg push lahf inc or mov popf mov adc xor int3 inc mov outsl nop cmp cld sbb mov stos add in dec iret mov mov pop pop icebp jmp and idivb pop sbb addr16 jg push add andb ficomp arpl enter lcall stc jae aaa popf js icebp mov jg push dec lret mov sti mov addr16 addr16 xor aad outsb and adc inc sti add cmc push lret sarb jb outsl jp and jg data16 jno adc mov jbe (bad) adc jnp mov roll int3 jg and mov int add aas outsb mov repz mov pop and clc scas repnz push jg inc adc jecxz xor sarb pusha pushf and jno mov out and imul push lret mov push (bad) daa sbb and inc incb inc shll push out fs bound pop out inc xor call xchg pop movsb jg sbb xchg (bad) je jg out leave or bound xchg mov mov dec cmp aad dec inc pusha adc cld es dec in fadds iret jecxz (bad) pushf out in mov mov aas cmp rclb xchg cli andb jg xchg adc jne sarl or js and repnz mov in jg cmp insl mov (bad) push fstps adc pop jg out (bad) sbb movq pop xor imul xchg cmc es stc jnp inc mov mov inc loopne cmpsb bound insb xor outsb jg adc jg push mov (bad) jg popf addr16 jp aaa mov aad xchg sub inc sub dec jae (bad) and jg imul ret (bad) rcl lahf sbb jg,pn push cmp jg je nopl repz mov inc js jns jl dec sbb add jae jg xor push outsb xchg and cli sub (bad) jg jp enter jno pop xorb xchg lahf imul push jno mov insl adc popa or loop xchg mov inc popf arpl jle cmp (bad) fnstcw push push mov mov push in incb and shufps cli push dec bound cmc inc inc scas jg (bad) or push and lret inc rcrb lret cli sahf cld xchg lret dec inc pop stos cmc ficom mov dec xchg inc jge sub adc lret dec loopne ret mov mov xchg stos jg mov jno sub je testl enter std mov push sar xor jg xchg aas push icebp pop xchg mov mov popl adc dec jg pop (bad) jns mov aas lea pop dec cmp jg push adcl mov mov jg in sub jle pop data16 fs jmp jg xchg jg dec adc jg push cwtl dec addl pop popf jmp dec pop jg sbb or dec arpl adc insb xchg mov xlat (bad) gs lret push inc ret add cmpsl mov xor dec out dec jg insl add (bad) fistpll jg xchg sub aas (bad) fcoms subl and fnop out sti outsl lahf sbb (bad) cmp mov jg fcmovne fisubrl push xchg outsl jg adc dec inc sahf fiadd (bad) lods addl push pop (bad) sub (bad) or daa sub pushl sbb lret mov call or add jg,pn xchg dec and xor (bad) je call (bad) add test or jl jmp movsb inc sbb lret push push cli or jge dec xchg inc stos xor cmp or xchg or inc arpl out xchg cld and or idivl mov ljmp (bad) jne cmpsb jg xor add jns sti out mov inc dec push imul jecxz loop sbb mov je neg adc pop xchg leave out push xor jg cmp push mov push psadbw decl movsb mov mov mov ret pop add adc out mov xchg dec sbb jmp (bad) lock rorl loop jg pop jbe gs adc insl addr16 xchg push dec aas mov cmp xchg mov test les pop scas hlt add xlat pop bswap add imul rol xchg push jg lea scas lahf enter int3 adc dec cmp mov jg js jp insb push (bad) jg jmp (bad) addr16 pop loop xor add je dec cmp and jg push sbb pop ficoml cmp cmp in repz imul leave cmp or clc inc es cltd jg test lods icebp jg sub sbb mov jno fnstsw cmp iret jg or sbb rcr xor or cltd fsubs add mov mov or ljmp int3 mov (bad) imul addr16 imul inc cmp pop sbb jg add mov jg adc lret nop dec aas or jne or lret dec mov call addr16 cli divb jg and frstor adc pop out sbb insb hlt into dec xor ss lret lods mov dec sbb xchg and adc mov sbb cmp jle test pop or pop sbb into cmpsl sahf jnp fsubl dec adc cmp pop sbb jmp repz mov (bad) lret cli popa (bad) mov jg add mov int sub scas push jg inc loope cmp es xchg sub cmpb sub sbb fs mov sub xlat or jbe dec adc outsl and mov cli cmp lahf (bad) into jg std enter sbb jbe inc ljmp jns aas dec fstp jp lahf or jg lds add lds sbb (bad) loopne jg sarb and mov lods xchg inc mov popa jns fnstsw lahf mov xchg mov xchg (bad) pop sub stos addr16 push hlt xlat push mov fdivrs xor sub or inc in ret mov pop jbe jmp enter or in pop pop fisubr rcll arpl jg adc in ds fidivl dec pushf xchg push std jg ror das sub scas subl mov out jg movsl fcmovb shlb fdivrl prefetchwt1 sub les mov addr16 sbb jmp outsb jg icebp shrl xchg repnz in push sar fcoml pop and jg push inc cmp daa add push jg jmp dec mov pop jbe dec bsr sbb mov test jmp in (bad) push cltd inc hlt and enter fs out push xorb xchg idivl pop fld (bad) loope lock test xor jg push test shlb out repz xchg rcll jg in (bad) mov lods pop fdivrs or inc (bad) scas fstps insb fcoml sar pop scas out lods xchg dec pop daa mov add imul cmpsb pop fdivrl lods out (bad) adc lods mov lods in adc mov inc aas xor mov inc cld jae js pop fwait xor push iret jg cs mov jg das cltd jle mov stc inc push xchg in js repz stos js dec mov (bad) xor cld or push jns mov xchg (bad) js push jg sub int mov jg int3 ret ret (bad) les cs and cmp xchg jl cmp add loop dec jg lret pop mov and dec pop inc lret push mov fidivr lods int or sar divb adc adc sub std pop pop bound mov in sbb sbb pop aad cs push out std insl dec jg (bad) push xlat scas popa cmpsb xor sub aaa mov push imul jg fwait or aam mov jg insl (bad) xchg pop dec cmpsb stos jg fildl lods push xchg and and xchg inc nop aaa inc fdivrs and fdivrl pop scas push fimul mov mov pop or mov push adc aas (bad) xchg movsb dec push inc fsub jg ja dec mov xchg jns pop in inc cmc inc sahf jg iret xchg mov jg cmp mov jg xor push clc add rorl out repz lock xchg inc data16 adc mov shl mov inc ja aam and mov jo or xor mov jg movsl sbb add cmp outsl jg ss clc cmp jg pusha mov in sbb negl or and xchg sbb mov pop sbb pusha jno aad mov sub loopne mov ds dec fimul scas lahf jne adc mov clc jg (bad) xchg dec push test andl inc movsl js int3 clc outsl fldl pop jg les insb cmp jp lret out jg test ljmp xlat jmp mov (bad) std mov rcll cmp jge dec adc push or out pop push clc or jae icebp jg mov jnp jg aam xor pop lods mov stos pusha ljmp bound test lahf sub in jg dec stos push into cmp jge mov jg jnp or mov ja insl push or sbb lcall movsb mov lock (bad) test push xor xchg jg xchg lods jl mov jg (bad) mov js jge ret pop je adc pop pop (bad) dec cmp mov jno lods (bad) imul jge pop (bad) xlat inc adc jp mov add mov jg mov stos add jg jbe push mov jecxz dec inc pop mov lock fisubr lea rcrb ljmp jns sbb test (bad) lods scas and mov inc mov gs repnz cmpl cmp push out mov jg iret dec sub pop sub std inc movq mov cmpsl mov xchg add mov rcll or xor vmovdqa or cwtl sbb in stc mov xchg jno and inc lret stc (bad) hlt mov pusha mov jg mov into push imul or jg mov (bad) push (bad) jno jg roll or fs fnsave fsubrp fcoml inc jg (bad) jns mov dec add jnp mov add xor pop (bad) ljmp sbb iret or mov mov jg pop out push or pop loope test push fbstp mov adc pop cmc fsubrl lock adcb and jp fbld jno mov daa inc xchg test rolb inc add scas (bad) aas loop mov (bad) jmp push fmuls mov jg lret lods adc incb sbb and test xlat rol sub (bad) int3 add mov imul iret jg push adc jbe dec sbb mov int mov jecxz pop inc repnz lods add leave xor or fdivs ljmp sub dec fiadd pop lock mov mov lea push icebp jg or or add ret lds sbb and jg xchg scas mov inc cli (bad) jno je jmp inc ret ds or aas rcl jge gs jb jg (bad) stc xor xor inc aaa pop adc push xchg jbe out pop mov mov insb sbbl push push jae push jnp cli push pop jecxz jbe enter mov mov test icebp mov daa mov scas inc push push lea lcall (bad) es leave in mov xchg jnp nop jg jp mov bnd jg push std xchg mov push mov int dec cmp fstpt xor test mov icebp cmpsl pop mov cmp faddp out mov adc mov cwtl in push and add dec in push jle out mov ja stos mov xor cmpsl cmpsb jg repnz out jg loope adc pop mov fistpll out lcall into mov data16 dec jg inc push xchg stos aam inc jg sarl inc mov xor pop stos popf add mov mov push adc cmpsl jg rorl ljmp and stos enter jg cmp sbb int lods outsb cmp jg mov lret or or xchg and pop sub faddl or cmpb repnz ret pop cli test xchg (bad) jb int3 and mov popa xchg repz lods (bad) jo dec aas stc rcll dec mov jg outsl cmpsl mov xor dec dec jg jmp rolb je push lahf xor dec jg cmp push in ds xchg mov jg pop pushf (bad) push int3 mov cs adc scas mov (bad) int (bad) dec test jg cld sbb jg inc lret aam cmpb imul addr16 jg stos cmc xchg out orl mov jo es inc add jg xchg in shrb ffree adc pop push loope jnp adc enter cmp outsl jmp jecxz mov sbb lcall jmp jg jle fnstenv xchg ret jecxz push jl ja lods test loope jg out add jg xchg mov mov cmpl cmp loop pop (bad) outsl adc lock xor pop ja push mov mov inc js mov lods mov lds xor pop xchg adc xor jno xor inc outsl (bad) testb sarl jp outsl outsb popa popf cli mov cmp mov pop dec dec int iret and fbstp js jge jg push outsb mov das and lret jg mov mov in push loop data16 popf arpl fsubl icebp jg mov push addr16 xchg push dec lret jg fbstp xchg mov mov in nop adc adc cmc pop lea lods jg shrl fs mov rcll xor call cmp jg xor dec in daa push les mov (bad) icebp cli jecxz inc xchg add and ja and jg xor push inc xchg lds scas jg or fwait (bad) pop mov jg aam push aaa jl xchg jg fidiv push mov jg lahf mov pop xor into (bad) sbb jmp xor xchg or mov adc loope cmp adc mov jg sbb pop rcr pop jg bound jg sbb fwait ret mov mov sarb mov out ds dec jg and shl movsb pop jg fldl jp iret mov dec std cmp pop xor jg (bad) int3 stos push gs jo mov repnz dec sahf inc hlt pop and jg mov je jg inc loopne mov loope jg aaa int cmpsb cmp cwtl pop xor xchg sub dec jl push mov xor pop lea mov fnstsw imul lock jg sbb push cld insl mov and scas add push xor cmpb or out jne mov xor mov sub adc out lahf mov inc sbb pop popf dec xchg (bad) iret clc jg pcmpgtd and pop pusha jg add ss inc in dec cmp popf imul fincstp jg push sbb jnp iret jmp xchg dec in lea xchg dec dec test mov aad jg sti jno movsl ds adc (bad) mov and sbb fidivr mov (bad) jne push repz jg imul cli sub inc sub fwait inc pushf cmp and xchg xor lahf jg xchg ret enter ljmp jge dec repz pop fldt jp and outsl sti dec mov push cmp les dec inc jecxz ds mov jg lcall jg icebp rcrl aas or mov fistpll sbb idivl xchg xchg sbbl adc and cli aas faddp pop jg adc pop cmpsl js fnstsw out add push sbb daa clc aad jnp repnz lahf stos jge (bad) stc jg imul or push mov add addr16 aas xor inc mov jg mov sub pop data16 jg jae fildll xor sbb jns sbb xchg mov rorl imul jno movq pop sbbl lahf out add int3 (bad) adc jg lcall jg jge pop sub push jg cmpsb cmp adc lods outsl popf or jp sub pop nop into clc mov jle fwait mov or push jg stos pop sbb add xchg jg jb push pushf outsl sub inc add sarb xchg pop addl sbb pop jg adc loope mov (bad) jg fmul cli outsb mov push nop jg lds adc loop push push dec inc out jp lahf jne jg out hlt test test push mov or repz scas clc aam data16 into outsl dec stos sbb and in ror iret iret jecxz xchg arpl cmp and dec pop gs cmpsb jg jbe aaa mov fidiv jg push aas push dec pop pop cltd jg cs jg testb push orb sub imul cmpsl and sub mov stos jg (bad) mov std dec imul jg or sbb pop fwait jg scas add jg fdivrp adc push mov int testl into into xchg xor jg jnp dec mov jmp lret (bad) (bad) jg fisubrl repz push inc mov xor mov sbb sbb notb inc ret dec mov jg push lahf data16 jae imul mov jg sub das or pop insl mov js mov xchg jg jg movsb jo stc jg std mov inc data16 sub lods enter les dec or mov cltd andl xor paddd add or or add xor (bad) or (bad) push dec pop jg popf jmp jl mov test fimul adc ret add stc call xchg fnsave test jg mov lahf xchg pop incl sbb outsb test cld jg lods inc sbb mov mov and adc mov das addr16 dec gs xchg sub call lea js jb outsl aas cmp jno jns and mov pusha mov lds jmp sub pop jnp bound jge shrb xor sbb nop dec and ret in jg add cmp loop jg test xlat xchg inc cmpsb cmp mov push (bad) jmp test dec cmp cmp pop add movsb sbb jg mov and jmp aaa cmp add jae jg hlt out push out mov cmp cmp fistpl cld pop sbb add subb loop das jmp push fmuls mov pop lea or stos mov inc sarl (bad) fistpll cmp jg outsl mov cli inc mul ret lods jg pop ss mov jg adc jecxz adc test pop fwait into jg cs fldenv and (bad) mov js cmpsb jecxz ljmp lock in sub enter stc fdivrs mov xchg addb xor (bad) mov out cmp fldcw xor sarl dec jg and imulb movsl pushfw lods jg aam sti and jg xchg jo xchg stos jg dec sbb sbbl cmpsb enter xor pop or sub xor shrl xor sar jno mov mov orb add lret mov leave pop pop adc shrl mov cwtl lahf push jb xchg into jg aaa out jl test pop in sbbl jecxz pop in mov mov movb xchg or fs xor adc fildll push (bad) testl lock sub (bad) pop sub and rclb pushf sti out in jl cmp adc mov sub pop popl and das xor cltd jg or aaa sub and pop cmc cld popa aas mov adc jae add or lods ds daa aas xchg and fldl mov pop pusha mov ja sti inc add out mov out jns aam imul jmp xor mov mov insl clc sub loope lods in jl je jg add mov jg sbb es fs bound push fbld jo add mov cmpsl jg out dec (bad) cmp in ret cmp mov int (bad) insb jo cltd pop mov jg mov lods mov cmc in cmp scas aaa cmp clc xchg inc sub ret sbb aas jg cmp mov mov mov inc test hlt or jbe mov ss cmp adc pop mov xor jp dec jl push arpl mov lea in lret (bad) cmp and pop push cltd xor sarl pop cld mov mov jno cmpsb test dec and or and repz aaa or outsb inc and xorl inc jg movb dec fisubl jg cmpsb sbb aas push in cmp xchg out push incb and mov inc int3 sub mov push push leave ja cwtl mov in mov pop lahf fnstsw loopne push sbb mov fwait push mov inc out rolb or jg scas cmc hlt mov and jp push fst jg jbe in and xchg mov (bad) cwtl push pushf dec mov ja dec or cmp fistp jg push cmp in jg dec inc ja jle jo dec push cmp (bad) jg inc add mov les cmpsl push mov xchg jmp mov jg hlt adc jb xor call clc mov jg lcall test jg (bad) outsb pushf push into ljmp cmp stc sahf into add shrb fadd js int dec push mov lret mov mov inc add jge cli popf mov addr16 mull aas jg dec pusha mov int and outsl cmp mov push mov cmpsl add dec pop arpl inc (bad) iret aad cltd (bad) pop lock dec cld or jmp int xchg jb and mov jg (bad) daa repnz ret adc mov pop shr xchg out jns mov and and mov xchg mov insb sbb mov xchg popa inc in pusha mov cmpsb xlat xchg mov jg mov jecxz mov jo ficompl loope jg mov adc and in out pop stos je mov not or jle fildl inc dec or jmp ret cmp jg lahf jb fsubrl mov pop cmp mov adc mov push adc arpl mov jg,pn call inc jbe rcpps mov add xchg idivw (bad) lret inc pop mov lcall ja cmc aas mov mov inc dec push jg dec sub (bad) std bound aas mov push mov xor add xchg inc mov pop and jg and add xor lock rcl inc bound jae mov insb sub mov inc iret imul call xchg mov rorl jg adc cmp jg sbb loope pop test popf pushf gs and pop fs sti pusha xor inc int push or scas (bad) xchg popa hlt dec loope jg leave lret mov jg pop add lods add cmp shrl or js pop pop dec adc (bad) lcall dec lea outsl inc pop bound mov mov jg aam and mov xor cmp int3 jg dec cmp frstor insl sub jg lahf nop jno pop adc xchg xchg scas mov pop lret push fs jae jg shr scas xor xchg mov mov in das ss arpl mov les mov outsl lods pop xor add adc int in jne (bad) mov les inc out outsl ljmp imul adc adc fldcw mov mov aad arpl sahf daa pop loopne pop fs ss das xchg arpl orl fisubrl fnsave jg mov (bad) adc into or out adc xorl mov movsl xor mov jg xor push mov push mov popa pop adc jg rcrb xchg cld cwtl (bad) cmpsb in jg fnsave inc in add gs fdivr ret iret shlb adc dec lods movsb push jg dec addr16 mov inc (bad) mov add push sub jbe inc adc xchg test cmpsb icebp mov jg cli fldln2 in and aas lcall ja and jle ds adc mov repz adc xlat xor adc std xchg inc jg insb mov push sub sub imul outsl (bad) gs jg aad push xor adc inc repz mov cmc xchg mov xchg sti daa and inc call and cmp outsl test push ds jg fnop and sub inc cs imul pusha push xchg (bad) data16 jg cwtl test mov aas popl xchg outsl scas mov mov lret dec lcall out jge loop daa sub pop lds cmp aad jne clc add sti jg les lea sbb add xchg jle jns cmp mov icebp jl push stc outsl stos add jg fwait arpl das xchg sub in cltd ja dec xchg pusha jg cmp and jg lods repnz sbb mov cli mov scas fisub cmp mov js jg push xchg cld ret andb jo xchg sahf cmc leave sarl mov and cltd cmpsl outsl dec push js jo pusha cmpsb mov sbb aas daa int and push mov and jg movsb sarb push int jg,pt pop xlat ljmp mov fiaddl mov shr inc pop xchg jg lods sub test and rorb cmp test xor test xchg jmp cmp sub shlb jg int3 pop imul scas pop push mov jb mov cmp fs aas rorl mov fistp dec je and (bad) rclb jg (bad) into mov jg inc dec pop mov xor xchg test sbb dec pop push std fldt inc xor sub jl aam sub lret fstpt dec and push pop pop subl js aad int3 das pop sbb mov jg ret and sti outsl jle mov divl call jae cmp dec jne pop fs ja lahf (bad) pop test mov sub mov push ja and mov dec pop inc cmpsl dec and jg out test xchg lock jg jb leave std aas pop lods mov pop xchg push pushf out jmp std ljmp fistpll xor (bad) add js jae jg iret gs jg sbb daa pushf mov loope or jg jge cltd das pop dec jle,pt inc push pop bound in mov fsubr in das adc adc xlat js fistpl jno jg mov mov mov jp bsr cli (bad) iret daa jg (bad) jg (bad) pushf outsl insl das mov xor mov adc jp js (bad) lods jg dec mov es stos sti push ss and fwait aas sbb pop mov and or rcrl sbb repz imull outsb mov and adc leave je jo mov pop inc dec imul xor imul pushf jg xor sti ret push nop push inc push mov lods push jg addl test inc pop (bad) jg popa ret jns dec aas repnz push pusha nop int3 call mov divb jg xchg xchg lret (bad) jg adc mov jg out jbe sub pushf mov repz shrl insl fistp pusha jbe adc inc jg mov cmpl (bad) aas jge lods (bad) jg aad add mov jg fdivrl sbb jg inc mov inc jbe sub jg lds mov mov sbb cmp cmpl mov pop mov dec add lcall cmp jg jb or int3 push out mov mov lock lcall or ja jg scas jp jle es sub out sarb pop mov ret in ret test idivb dec pop int3 mov pushf je or das jb faddl (bad) cmc add ret in push push xchg dec jo scas mov cmp add mov jg add fildll pop jo rcll (bad) daa stos ljmp cmpsl clc xchg mov test mov int jecxz xor cld (bad) dec nop pop mov inc lds and inc iret push jg sbb add outsb jmp push mov aas fadd jle notl ss pop sub jg and and repnz sub (bad) cmp push scas dec std mov mov sub sarb mov xchg test jecxz or aaa jno and add mov out mov inc dec jae push dec ja xchg jp sbb aam rep inc push jg push roll lret andb mov sub jg jecxz xchg jp data16 xchg mov (bad) pop adc js aad jg stos mov aam lock inc roll dec xchg es mov push jmp int3 jg sub sti jg add lods dec or cmp xor int3 outsl jge mov out push sahf dec inc cld insl inc aas mov sub mov jg xchg popa sub push cmpsb jp inc gs push jg lds dec sub inc push fdivrl int push push push out btr adc mov jg (bad) rolb jg aas push mov jg or cld test js popa ss aad pusha dec bound orl ss inc and mov pop subl outsl xchg xor mov or jecxz stos (bad) cmp sbb (bad) jg lds repz xchg jg idivb fbstp jns push push (bad) mov nop sub inc or addl outsl mov js sub jg into shl repz out push int3 clc inc add mov or sbb insb push shrl push mov jns dec or ja cmp ret jg scas iret adc jg xor rcl push jle sbb aaa mov bound (bad) leave pop orb inc movsl jae fs jg jecxz inc inc push lahf bnd in cld dec add mov punpckldq inc cmp (bad) jns in push mov adc insb pop cmc out sbb jg leave lahf inc repz mov mov nop xor cmp cwtl arpl ret cld jg xor fwait adc daa cmpsl les pop jg in leave jo popa insb lds bound rolb xor jl scas jns sub adc mov jg loop sub jg mov or xchg ret rorl xor bswap mov addr16 xchg jnp je xor jg push mov lret jg js pop lahf dec and jg mov mov hlt xchg repnz xor cs jns jnp sub in out imul into jg jb insb adc pop out jg sbb orl inc jmp cmp push mov je mov or insl jg int in mov mov outsl lcall jg push es divb addr16 inc xor cld je sarb jge xchg (bad) jg repz mov testb imul adc iret xchg pop sub pop add xchg dec inc insb sub clc das sbb adc xchg pop lret rcrl pop (bad) jle and xor push jg mov cmp jg pop dec jns pop std push jg (bad) (bad) shrb ds jle jge push pop inc outsl mov push iret imull dec addr16 push add lret insl sub dec push out mov pop mov mov cmp shl dec loopne jg lods lret or test add jg jae outsl mov sarl dec cmp inc add movsb cli lret jg sarl mov pop insb jp add dec xor outsl dec std jge or outsl sbb adc xlat jg add js (bad) inc xor jg push leave sbb outsl push add dec mov push mov sub dec into cmp push loop push dec das adc jg lret adc jno jg dec (bad) jmp shll cmp adc cmpsb mov sub rorb in jg sbb xlat icebp movb gs clc adc outsl (bad) out mov mov push movsl inc cmp imul (bad) dec fld xor push jo sbb aas sbb in std dec (bad) mov lea pop add dec sbb mov push add lods and mov ret mov pop inc pop jg inc ds in test sarb xor fstpt cmp mov aas jp pop cmc mov adc mov ss pop xchg mov loop out int notb mov scas mov cwtl jne pushf and mov outsl dec jp cmp jg ljmp jg mov push testb int3 pop in cltd inc mov aad lods push sub sbb in cmp pop cwtl jg cli mov mov push pop and negb and mov pop or cltd mov mov mov jg or clc sysret mov jg cltd push lock mov lods push outsl cmc mov cmp xor in call pop hlt out or xor jg cmc aas sub jne push jp popf xchg xor (bad) xchg pop mov (bad) push mov pop dec sub pop sub jne dec dec jg cwtl ds les inc leave sbb (bad) jg or (bad) jg aam jns lds add in int3 push pop or cmp inc xchg js movsb inc jg jecxz push sbb pop inc aas sbb aas adc movsb lds jns pop jo push popf data16 mov leave scas push dec in push je xchg sub jmp adc mov xchg inc mov cmp jle jl leave insb pop out cld aad pop mov (bad) mov out mov dec outsb addr16 pop jg test jb mov jg sub mov jae dec outsb dec imul cs add das dec mov lret (bad) jg pop mov jp pop push jg xchg push mov cmpb jle ds pop iret (bad) ret daa hlt jg inc add jg and popa rcll mov sti lahf cwtl mov jg loop (bad) mov in push incb xchg outsb jbe enter adc insb lret or scas xchg insl imul add iret fucom imul xor mov movsb xor (bad) mov test addr16 ja sahf movsb test fmuls lock js add pinsrw xor ss adc shlb pop jge inc jg aas out dec mov daa gs fimul stos add out jbe out rolb jg push js xchg lahf push jg repz out mov aam dec mov jge ret lret insl sub mov shll (bad) and jg inc xchg inc ds lcall (bad) jne (bad) jb,pt dec idivl inc aas push cmp and scas inc enter ja cmp mov int pop mov mov push mov add push sti and dec fcomp jg push mov jg outsb icebp adc push (bad) std jg rclb pusha and les push pop dec mov xchg popf or mov loop pop jg adcl ret aas add repnz jge or jle push jp arpl sti (bad) outsb sub push add enter jns int dec push fisubl jg xchg int3 shll and jb mov cmc jg and mov ljmp jne dec out daa mov ja cmpl clc jg cmpsb sub movsb aad or jg fcom or imul ret das pop addr16 jg xor push xor push sub jg pop push mov rcrl testl xchg and into loope push jg cmp (bad) mov and rep jg inc popf int3 dec push jae jg jbe sti cmp das lock daa clc test or mov mov stos cmp jg in add jb repz lods lods dec lret addr16 fnstcw fisttp mov js pusha xchg xlat inc mov cmp setb in mov pop lcall jg dec in jp push nop jg iret (bad) jecxz hlt jle aas adc pop xchg cmpsb mov in scas stos test out (bad) mov test into cmp push cmp add inc shrd or cmp call jb jg jnp stc adc or cmp adc push ror lcall and jnp rcr jns dec and dec sub fildl jg je sub mov outsl xor xchg jg (bad) adc out xor jg mov adc ljmp jge cli inc popl (bad) repnz cmpsl jg sbb mov sbb lahf in pop pop aad test mov mov js mov fcompl cwtl (bad) sub push movl insl push pop mov or dec add or fisubr push hlt pop jbe ja outsl pop cmp mov pushf jg mov movsb xchg pop jb and aas mov rorl add dec aaa dec (bad) adc cmp pop mov xchg jbe push xchg icebp add cld mov pop pushf (bad) mov fisub add cmpsb push mov jg test fucomp jg dec mov enter std jg fldcw (bad) repz pop adc daa inc adc (bad) push in (bad) lods jle nop inc sahf mov inc sub push jg and pop cmp pop ret adc jg mov scas sub push pop xchg cwtl sub sarl mov test jp or (bad) int xchg dec fldt popa or sbb cmp push dec jmp jl imul and or mov sbb cltd jns pop pusha add popa sarb jmp or test adc sbb pop cmpsb ss jbe mov gs jg arpl xor cmp mov inc dec and (bad) adc icebp cs insb sarl daa inc add dec adc sub sub xlat jg add adc or inc in rcrb add les aad loop cmpsl aas sub stos movsb jae enter div scas mov jg insl xchg dec fcmovnb lods idivl pop push popf lahf xchg lea stos adc sbb jg adc xor xchg adc pop push mov lea lret inc call add push scas jo arpl daa push push jg push and stc das es jg orl jg popf mov inc roll rclb js mov sbb fucomi xchg cmpb inc out pushf jae dec pop std mov out jg add in pmulhw jno push cmp icebp jg inc (bad) shrb das lds imul add cmp sub mov jae jg jne fistpll mov test sbb cmp outsl inc sbb std jae call subl into sets xchg pop and das cs lock movsb (bad) push push fstpt jg (bad) ficompl enter scas xchg mov jle push sbb pusha sarb cmp pop mov push aaa les in rorb xor ds das hlt jg push inc inc imul imul xlat bsr addr16 add sub mov ret pop jne std push dec fstpl push insb je adc pop push dec iret mov sbb mov test inc mov xchg pop outsl dec ret aad clc addr16 mov fstpl jne mov scas jg or push (bad) scas xor pop mov rcrb jl push dec push fiadd pop test scas jecxz adc sbb inc jg inc inc sbb test mov or (bad) xchg popf fldenv (bad) jg adc je dec push jg out (bad) int pusha xor loopne jle cmpsb mov jo test outsb pop jg outsl dec ljmp fstp data16 mov lret jg hlt cs mov pop jle rcr sub dec or into and clc dec fwait cmp adc mov inc insl rolb mov pop es lds les daa mov lods mov xchg iret mov out push aaa insl add mov jg or or rcrb idivl jmp js xor pusha jg popf cwtl mov jg scas aas imul sarb fldl jmp inc dec inc inc jns in pushf jae out xor and clc jg in pop inc nop stos sar bnd jg xor fistpl bound repz (bad) cld js das imul addb jmp pop jg inc (bad) xchg jb sti subl test push jg imul jg adc insb fdivrp into jg cld incl ljmp jp mov sti imul xchg bound js mov push jo pop outsl add aad sbb sub dec mov mov jbe nop or (bad) lds jle fldl fldenv ja sub dec rcrb cmpl cmpsb sub or mov scas add (bad) clc cld sarl mov mov std cs inc add test adc xor in jg fiaddl out (bad) aas sub pushf call xchg and fcoml mov push sub pop jg xchg push popf fsubrl push dec clc pop sbb ret push lret rol cmp adc push jne (bad) js or arpl jae loopne pop jg pop lods sbb mov insb paddb ja jno in jg dec push rorl mov test xchg loopne (bad) jno incb cmpl or cli inc roll ret inc xor sahf jg aaa dec lock stos lods jg mov inc jg cmp add loopne aas cli xchg inc mov add pop mov jp jg mov adc jg mov mov je pop aas fldenv sti data16 addr16 and sbb je push push dec jle pop lods mov lret addr16 mov cltd pop pop fistpll xor jg lock mov ja repz lcall adc jg pop roll daa mov or pop mov stos mov lea jo (bad) adc mov mov jg (bad) fidivrl aas dec pop inc bnd cmp (bad) mov mov mov pusha mov fwait pop sub aas outsl xchg mov inc fild lcall and stc and jg push xchg ret les jg nop pop and test jg outsb pop xchg out xchg ljmp (bad) mov jmp test jg mov ret movsb arpl jg into mov shll mov inc mov push jns cmpsl xor pop jg (bad) mov lods les aas dec dec push cmp sar fs int3 sbb pop ja add or hlt xlat stos jmp aam popf xchg push std cmp mov scas pop push insl xchg add ret jg test test outsb and jg sbb and out add pop sub ja mov ss (bad) cmp sbb stos int adc xchg stc lret push cmp mov push xor lcall jmp addb ljmp mov repz inc cmp cltd (bad) mov cmc jmp mov xor jg shrl mov sbb lret scas sub jg into cmp int3 dec push xchg incl sbb jg notb pop aam jg push insl das sbb out xchg int3 sahf loopne fmuls adc dec (bad) imul pop hlt sbb inc imul fs and jns adc jno daa pop mov je xorl test js das inc in popf pop inc push fidivr nop add jg pop test idivl in push popa cmp dec test push clc push insb out jg xor scas jno dec mov arpl pop int3 jg std mov jbe stos pop movsl mov cwtl jg (bad) mulb push sahf aas mov jg sub pop jg pushf sbb imull jg addl jg lea push jne pop jg sub cmc leave fmull jg in sub sar sti out adc mov mov pop jp jg lret stc xchg dec addr16 and repz cmpsb push mov sbb or clc lods sub popf jg inc (bad) repnz inc dec jae lods dec mov or in mov cmp aad xor push inc insl in xor jg (bad) int add and daa loope mov and ret jbe sub and pop xchg cmpl push mov sub xchg mov fcomps into pop mov pop pop mov adc xchg fwait mov cmp or idivl sub jg push rclb pusha ret jg std xchg or imulb inc jg dec inc dec push js xlat mov enter hlt ja in sbbl test jmp or adc dec jg fwait add xchg mov jg jp fmuls adc sub mov push xchg jae mov dec pop dec out ds jg mov xor adcb adc dec adc bound out inc dec daa and cld out sub imul fstl fcompl dec aas arpl insb in mov cld mov fstpt in or icebp sbb dec test pop pop or testl enter dec mov jne mov aas push dec xchg ret sub jmp jg xchg (bad) jns (bad) ja jg sub js adc and push fdivp ror xchg cmpl dec mov and (bad) out jge adc les rcrb scas cmp jns lds mov popf fisub icebp pop mov jne jg pop lret iret push jae lahf or mov aas jmp ds push bound jb jnp add inc jg rcrl pop daa in jle movsl aaa adc clc push jg xor fildll bound cmp or es pop cmpsb cmp popf orb movsl pop into rorb push shrb sti mov add dec jecxz sub in adc mov jae adc test mov push cmp sahf inc stos bound mov cltd jnp pop jb sub ja jg adc outsl pop (bad) jae jg idivl add into loopne jg jb popa inc movsl add ret sbb inc fildll ss test sbb popa test je loopne adc mov inc jg repz and xor addr16 dec mov mov sti push add cmp push (bad) aas fdivrl jp inc adc inc daa mov int push mov popa mov inc xor adc push in lcall pop cltd jg jecxz pop mov sarb test dec leave nop js pop lret jno mov mov dec repz stos loope jge aas inc daa ds xchg jg call stos iret jg sub inc xchg dec les cmp addr16 arpl mov mov dec test adc mov ret mov jns jo push cmc sub jno dec pop xchg xor pop jg mov imul and push inc push fadds leave or or mov cltd insl xchg jg (bad) daa jg (bad) mov out mov jg push or mov mov xchg ja dec popf sahf jg out sbb unpcklps arpl loopne out sti cmc sar imul cmpsl mov mov cmp dec mov jo and or or out aam fnstsw in pusha push pop in mov and jg and push test xchg cmp outsl daa in jl cmp test das ret or jg jne lods outsb pop mov jg popf cmp xor mov push sub repnz inc mov popa dec jg lahf push out dec xor add fistpl pop mov aam jns sub xor jg pop shr jbe push jg jne sbb add jg xor cltd sub mov mov and mov jnp sbb jg lret loopne (bad) xor insl jnp sub or and dec jg jmp test pop (bad) lods cltd fistpll (bad) dec notl enter dec inc xor jg imul push pop lret jg sub sarb movsb shll pop mov pop xor dec inc mov inc repnz and jne inc mov or mov push mov clc roll pop cmp ffree aas dec pusha mov push scas aas cmp inc inc fdivs push sahf or inc xchg mov dec xor nop or mov push mov and mov test imul jg dec or ljmp scas jecxz arpl jo test orl out adc sbb out stos mov lods jg add clc fs mov mov xchg inc cmp mov mov cwtl dec pop pop jg jl fisttp lea js icebp out std jg sbb cmp mov xor scas mov jno lahf cs xorl mov stos mov out xchg mov idivl or test stos jg arpl es or sti push adc lock mov push mov aad or jp mov jno fstps in add inc and mov inc aas push (bad) lock inc inc xchg out jg outsb adc xor fisttpl in dec push das dec out sub inc mov out hlt (bad) popa jg out jp lcall xor mov jg xchg lret aas cmp sub push fwait jle mov mov mov cmpsl xor jg fisubrl xchg jnp mov insb loop outsl sbb jecxz push push decb test lock icebp popf xchg arpl add inc push and xor jle sbb sbb repz fnstcw xchg jnp pop inc pop jg js mov fs ret mov push daa inc aas fisubl pop jbe add jg insb data16 and fistp pop adc xor jecxz movl xor (bad) pushf cmpsl outsb js inc int inc mov push ds dec jg add repz imul movsb jmp leave lea dec je mov mov cmp addr16 stos push mov test pop sarl data16 adc jnp push mov fwait xor mov mov pop sub adc cmp aam jne jg push hlt movsl sbb test test lret int insl jg and add movsb pop mov jo sbb test mov ror add jg loop fisttpll pop push sbb and push lods xchg inc inc xor adc jg pusha sbb jge jg mov mov dec std cli push mov dec ret jg call mov pop mov pop lods shr lods sub mov stc push movsb xor jg mov std and arpl jp mov sub or mov dec or aas cmp push data16 push mov scas xchg jg jmp jge mov push or repz sub jg dec gs adc (bad) int add cltd cmp mov es movsb lahf mov jg loopne xchg jecxz or imul icebp loope jg cmp lret cs push jno xor (bad) in jg jns cwtl and out push or dec cmpsb sbb push ss cs out das mov pusha jg jno or icebp and test mov lahf or gs cltd pop push xchg or cmpsl sti and mov jg and jb jge adc push sub ficomp aas push cmpsb sbbl cwtl and sbb out daa je jg inc mov xor jg and out ss call push movsb or dec add and mull or and or js out or jg xchg pop add ds loope pop cmp (bad) lahf mov fstl jnp pop jg sarb subl ret ret aas addb adc mov insl add xchg lret fcmovbe xchg loop fs imul mov fdivs sti xor je aas lret dec mov or push jg mov test ss pop pop iret inc mov movsb sbb xchg leave mull xchg dec jno push loope repz out inc dec leave adc shrl outsl mov (bad) dec jne push xor out jg hlt add xchg aad ss aaa cmp mov cmp mov mov push jle inc (bad) jp setle inc dec lds les or (bad) jg enter dec ss jg dec mov push aas push iret cmpsb push das movsl addl jns iret popf xchg push mov imul es int3 je jg sub movsl pushf inc jge jg rorl insl fldcw inc lahf aas inc cltd jae push (bad) lret lock fisttp jns pop sarl mov jg out dec cmp mov aas mov sahf bound sarb fistp out jg sub jmp scas mov dec inc adc mov xchg idiv inc ja mov ret nop/reserved push ret das sbb jo jmp cltd cli insl mov xchg mov jg insb in adc ret movq push dec jne mov in ffreep xchg call xchg mov jg iret mov pop jg cmp push mov ss popa sarl jg lret in sti dec push add outsl dec mov mov test mov lahf and jg aas rcll pop pop imul cltd test inc jg dec movsl cli repz jg or mov dec add in lahf fidivr cmpsl jle mov cmp jg inc nop int addr16 sbb dec and push int3 add and leave jp mov and dec adc out add dec push dec std jg push repnz and outsl xchg jg fldenv in jl dec ds inc pop sar pop rcl pop jg in (bad) adc push hlt ja jnp sbb je dec scas aas mov push jle arpl stos jg ds jb in lock ret test mov jg push out jne aam or mov jg xchg sbb and faddp ret (bad) sbb or icebp loopne jg adc aas push pop jg pop jno loope (bad) out jg adc sub pop xlat bnd cmp popa jg stos cmp insb jg or stc jns dec inc mov xchg jp add push stc inc cmp inc mov repz xor cwtl jg mov cvtdq2ps cwtl loopne insl div movsb jno out dec stos and pop pop mov loopne ds xor popf xchg xchg mov addr16 sbb cmpsl xor lret pop pushf out sti inc cmp lock popa dec imul mov out jg out cltd (bad) test sbb and jge mov sti jp hlt sbb int pop pusha push inc push (bad) mov jg xlat pop or (bad) cld adc jp dec sti mov and bnd jg repz dec dec int pop aas scas mov ja sbb jg test and sahf gs xor sub jg insb cmp aam push mov pop pop test inc (bad) int3 ljmp mov pop jno cmp clc adc xor andb (bad) push push call in mov (bad) jo inc mov aas call xchg (bad) dec addr16 jle aas push sar jo inc push or repz mov stos push xlat jg movsb aaa rorl loope mov lret or leave jg mov jp push and fildll jle pop jmp sub mov js jg ds mov ja push mov daa mov imul test idivl addr16 fnstenv adc (bad) data16 jmp pushf cmpl mov cld int fiadd inc out jg mov outsl pop negl scas or in mov jmp jg cmpsl and cmp mov or (bad) xor ja and mov nop mov movsb jg sti dec lcall and adc jge test jg rcll jecxz inc jg cltd lds jg jo push jg fadds mov mov negl push int xchg bound add imul inc test jg lock inc cmp mov and sbb jg jmp push xchg adc cmp cld xor loopne es cmp mov and test lock jg push frstor sahf inc cwtl int mov pop (bad) jne lahf cld mov sbb dec mov and pusha cmpsl cmp mov adc pop fucom or dec std sbb cmpsb scas sub pop in jg fnop stos out inc icebp inc mov push xorl scas lea scas sti mov (bad) jbe fdivs mov sahf js (bad) xor leave jle jb and push enter cmpsb xchg xor lock mov jg movsl jb jae dec xchg jg pusha pop inc mov push lcall mov inc mov cmpb ja mov and out pop jnp (bad) jg sbb sub int faddl cld push mov pop mov inc pop mov add sti fnstsw rorb ss fnstsw imul das mov mulb fcoms leave aaa (bad) dec stos xchg jg out loope fisttpl mov cmp lods (bad) jl in jg or shr call cld aad sbb pop aam les jbe mov adc push jg mov sarb lods std out xor ret cmc popf jle mov adc pop or or jg and xchg pop push int sti jle lret mov addr16 (bad) sarb loope pop movsb js stc jg jmp fwait pop lahf mov lods mov in pop adc add push imul xchg jg cmp xchg pop (bad) lock aad (bad) rorl inc jg mov loope jg scas (bad) sub mov jbe pop push int3 cmpsl aas outsb hlt pusha xchg mov out (bad) lds or sub jg xchg ja dec add and icebp aas pop jmp cmp pop or push jg cmp ljmp xor adc aad jno adc cmpsl insl xor cld test lret and mov out dec es loop sbb rclb lcall inc cmp fnstenv jmp in and push adc xchg pop dec repz push cwtl cld pop sbbb hlt mov rcrb xchg dec mov jmp inc aad rcrb adc rolb push jmp push pop inc mov mov push mov mov push and sub stos sub jg into jge decb es icebp fs push cmp add lahf loopne aaa xchg arpl adc rcrl inc mov out mov hlt xchg fmuls daa mov jg std add jp test mov fnstsw mov sbb mov adc inc mov mov outsl clc je sub jns pop sub cmp xor sti inc xor xchg cmp cmp dec or cmp int jg mov call jg xor fs outsb rol jg je sub mov jg or fdiv jg (bad) rolb mov inc xor negl jnp inc dec pop js cmpsb lret sub pop mov sbb sbb xorl push (bad) mov push sub cmp sub ss jg or lea sarl insl cmp cmp (bad) or ljmp dec mov pop sub inc orl or mov ja pushf outsl or jnp or (bad) jg (bad) push sbbl inc cld outsb imul and xchg push jg aad dec adc inc xchg push addl out cmc out jg jns pop shr outsl and jg (bad) push testl dec cmp rolb pop movsb jecxz mov dec mov popa mov push mov mov push mov mov dec xor lcall xor cmpsb inc jg and pop (bad) push adc jg xchg rol outsl frndint out cmp pop jmp push jg sub fldt push subb jecxz jg mov inc jg dec (bad) negb adc popf lds icebp fisubrl mov shrl cltd dec data16 cmpsl cld idivl fwait mov popa mov imul sarl and jo iret pop or insl jbe popa jo mov sbb leave cli adcb (bad) push mov dec cmp stos mov call ja push and mov cmc jg gs dec (bad) xor jg hlt and push jg iret jmp mov adc xchg or sub lcall jg push daa xor dec adc mov pop pop (bad) outsl pop rcll jg pop shrl jns daa mov and ficomp loopne lret arpl mov cli aas cmp pop (bad) ljmp mov outsl inc fwait cmpsl and jg push lcall fisttp sub les out mov jg dec adc cli adc inc mov cmp aas add les inc call lcall jg cmp jg pop (bad) push xor fwait lock pop and pop dec ja dec jg xor add mov push mov aas inc jg outsb push add sub inc mov dec and stos fdivp jg fldenv mov (bad) xor jo (bad) rorl or jg dec push in and cmp hlt mov popf dec popa rsqrtps dec (bad) sub adc lock mov xchg addr16 cmp fdivs in xor mov test cmpsb jg adc lret in stos jg cmc bound outsl mov mov inc dec sub cmpsb out arpl mov or push push mov (bad) (bad) sahf fild and in dec data16 fs xchg add mov movsb and iret or mov sbb test jg cmp pop popf pop mov outsb aam mov lahf rcrb jno or sub sbb jg mov addl mov inc bound jg pushf sarl sub fnsave movsb pop mov mov jecxz cltd mov xchg inc ja test inc push popf inc pop movsb fldl mull and push jne mov inc jae cmp loopne mov inc add push insl insb cli jg (bad) neg sahf test mov inc dec sarl in loop ss aas jmp call push cmpsl daa fcomi ret and (bad) ljmp push mov mov add mov jns jge lret jg ds jo mov adc mov inc lea lods dec adc bound jg mov jno jg push or cltd cmpb cmp mov rclb lods lahf mov sti dec pop (bad) rorb in cmp pop mov popa negb iret out mov xchg push popf inc inc jg loope lods jae mov jg imul std mov jae aaa negl or sar cmp sbb xor and xor mov inc push and jbe jle jl mov pop xor (bad) jg xor mov ja mov jg pop push shrb scas orl jmp notb sti add imul mov xor in adc and test pop pop jg cmp push (bad) aas ds jp push out jg flds push sbb std mov mov mov cs mov xchg stc fs cltd cwtl fldcw inc js add stos jg cmp add clc jg fwait out into int3 testb mov inc add ss sub lahf push jg pop jb fldcw add pop adc ret jno push pop or into fdivrs aam sbb mov leave (bad) pop shl mov adc out pop fstpl imul lret fcomps pop lret inc add ja push repz pop inc add dec data16 mov push outsb test sub out lods test jg push and fiadd xchg rorl mov mov add xor out nop rcrb or and pop lcall jae flds jg out jl sub lock xor sbbl movb pop jge in add mov test jg and mov adc and add pop mull ret (bad) jg outsl test and sub in mov jns jge jne imul push inc xchg test adc jne pop jle jg leave pop xchg dec mov jge cmp lods add pop int3 jae int push mov dec cli cld test jp or sti inc dec bound xchg pop out dec xorb (bad) scas outsb aas mov jae iret sub aas xchg mov or xchg aas (bad) inc mov dec pop and int int3 dec out jp jg sub sbb pushf movsb jg adc xchg into lret sahf inc sub dec enter aam or jg xchg push ljmp cli pop fwait pop je cltd imull divl enter repnz add xor sub push push pop xchg adc push in jmp mov test loop fnstcw int3 adc std push aaa inc or mov popf ret cmp add bound fs mov sub adc dec dec xchg pop adc fdivrl cmp mov nop or jg hlt mov ret mov clc and lock dec pop sbb mov (bad) adc xchg (bad) xchg popf ljmp adc aaa cld cmp jae mov lret inc lds in pop jg stos jge jp test mov dec adc jg (bad) in xchg inc adc cs loopne in cmpl sbb mov jbe mov inc push inc inc scas cmp outsl push addl xor adc sbb insb dec pop mov cmp addr16 push ret loop pop enter lret std dec jg fwait inc in mov sub lds jg add leave dec lret out jg ret adc push mov xchg dec outsb jecxz mov ja push jl sub pop test inc out jg xor (bad) push shll mov aas cmp fimull jns xor jg push push (bad) sbb xchg aas jg cmp jg or jg gs add jg push mov or loope movsl lret pop jns add jae sub hlt and pop scas sbb data16 mov in mov mov loopne inc shlb out fstl imul cmp mov adc mov jg xor lods ja imul inc jecxz jg lahf mov sarl mov ret adc inc loope pop int3 call dec in jno jae jg add pop xor xchg ret mov xchg fisttp or test mov out ret xor jle mov xchg mov lods insl xor mov mov mov decb push (bad) jg outsl xchg mov jg pusha dec dec js in test stos push sbbl mov fistl mov push pop pop mov push pusha pop add scas xchg jb sbbl xlat and mov xor xor jg mov scas add mov cmpsb lret inc ficoml scas divb sub int cmp push jg push xor mov (bad) mov sub outsb mov lods jg or fdivr sbb test test xor cld pop and mov jae je addr16 mov cmp insl sub push pop fucomi jg mov adc (bad) jg inc pop clc cwtl xor notl cmove jg jb (bad) xor jg lahf push push inc iret andl fstpt add enter jg nop lods add jae cmc sti scas popf push push jg pop cmp sub dec or adc jmp cmc cmpsb dec cs jl and mov (bad) pop pop inc add pop pop inc test jg lret mov pop vandps jae mov (bad) pop dec dec xchg jg jbe cltd pop dec inc ds sub dec (bad) ja data16 dec lds cmp jg loope mov jg sbb adc clc mov rolb inc ljmp inc out dec ss jo test push (bad) jmp jg (bad) loop cmp add cs mov loopne stos clc mov rcr sub in push add jg movsb fistl hlt and cld popf pushl mov cmpsl xor and jg xor or (bad) mov jg into or push mov lret pop inc sarb insl movb or (bad) stc js jns adc sbb (bad) mov cli addr16 dec push inc stos out cmp and jl jg jb pop pop xchg and jo jmp je pop jge cwtl loopne adc sub enter sbb insb imul mov pop std shrb jg xchg insb xor push ja jg sub inc cmp into movsl (bad) pop inc ja or sub jg add sahf jle xor imul pop xchg lahf es ret mov inc mov mov sub jg cld mov push jg mov test jno sub inc ret popf push jg insl cmp jg and ret mov jae push cmpl (bad) icebp mov les clc (bad) ds mov js jg je out imul mov push jg xchg (bad) push xchg hlt mov lret loope test push cmpb dec sbb les aas inc stc (bad) test jg dec (bad) mov jg push inc push jg pop cmp rolb mov or lock lea add xchg int3 loope jg pop mov fnstsw lds stos jno ret std adc in dec dec jg insl push pop add inc sub cmp dec mov insl and test sbb sub add cmpl hlt pusha inc xor jg lret push mov icebp jg mov daa xor adc pop cmp ljmp jg je sub cmp mov repnz jg (bad) or xor mov pop test out inc jg pop and bnd inc movsl in jne mov (bad) dec test xchg lret push dec sahf xor push jg mov dec (bad) loop jg pop jnp (bad) inc mov mov adc mov sbb pop rclb pop jg or shlb (bad) out cmp push xor jne inc (bad) jl and jbe jg out pushf cltd dec cmp adc and sti imul mov int fimul cltd inc dec mov (bad) mov bound jg jl rcll xor (bad) xchg sub js divl mov outsb jg or enter jg push rcll stos xchg insb jg mov sub data16 xlat jg std mov cmp push out push jg or and test mov inc add (bad) push dec sti adc xor push sbb push bound pop jo mov inc jg add (bad) or and sub addr16 scas fwait (bad) cmp mov cwtl dec das ret ja aam ds mov mov dec je enter imul inc cmpsl jg test (bad) icebp in iret jg out jle jne aam mov decl mov jo (bad) fidivl push mov push pop jb mov shl push cmpsb push in fisubl mov adc bound jg xor xchg andb mov push sub lock idivb (bad) inc shrl mov mov orb mov repz jne aas sbb dec dec xor ja sub and out (bad) or or pop popa mov push jg dec mov add jno fdivl jge push sti stos out aam mov addr16 sub fdivl pop je dec xchg dec fwait jne iret jmp and adc inc jo fcompl mov mov push sbb insb mov jg bound xor dec lods push push mov cs test inc inc aaa jg (bad) jl add jp or dec jg push gs mov fldt fdivl (bad) movsl popa jge call fisttpll and cwtl xchg pop lods mov cmp xchg mov pop in push and lcall lea cmp ja jg movsl xchg pusha sbb js inc (bad) jg das xor lahf sti enter push push mov ja dec out gs rorl inc and mov (bad) xchg inc sub out ret mov xchg cmpsb dec cmc sbb cli repz push dec pop fistp pop adc daa fnstcw push imul loope addr16 push outsb jg (bad) add les jbe dec mov mov into and rcll test or xor rcr push nop jmp fwait leave jg in sbb shrb inc int aad and fcmovnu loope pop stos popf add add jg outsb push jo jne lret ss and dec inc cmp push aas mov push lds hlt jb js (bad) mov out jmp fwait pusha int3 mov ja (bad) xor jg sarl mov xor mov push lods pop out loopne pop jg adc iret (bad) sub dec cmp imul or jp dec decb mov and (bad) jg test add mov mov jg (bad) into int3 sub push sub jge mov cmp pop int dec jg ss popa (bad) clc ret xor pop jg pop xor insl mov cmp xor in sub stc and push movsl jno jg adc ljmp jnp imul out and jg rsm rclb inc fisttp rcl stos (bad) mov jbe inc in popa push cmpl pop xchg push jg in cmp jg xchg cmp ret sbb jle lods xchg (bad) jg or adc sbb mov mov rcr ja mov (bad) std in sbb das insl in jg jo stc sarl mov bound ror inc sti jg fs sub (bad) out dec (bad) hlt pop jbe cmpsl les jno push push test jg adc mov push lcall arpl cmpb dec outsl pop sub stos inc mov leave ja lret mov jg outsb in pop pop and jg idiv (bad) add adc pop ds cmpsl dec jg push js movsl mov and inc jg ljmp jg dec lret inc cmp mov outsl add lahf adc inc testl mov cmp push add scas inc mov xorl and dec push mov mov test lods lret pop test fistpll jecxz sbbl adc mov mov in sub cmpb movsb faddl mov mov bound dec popa out cmc xchg jg and stos popa dec jg add mov sbb call or jg scas sarb jnp out cmp push mov out in xchg and out pushf push (bad) jae jg mov push jle pop dec jl (bad) pop jle (bad) std jg cmp arpl jg fwait xor push adc cmc stos mov add leave jg mov lea and mov ja outsb dec sub cmp cmp ja mov push pop mov xor fisub icebp jg push popa aaa mov ret sub xor inc mov sbb in xor sti sahf std pop sbb push mov push (bad) int3 lock cmp jg add or sbb lock mov dec shrl mov stos scas dec mov (bad) icebp push daa cmp pop (bad) fdivl mov subl aas sub or dec dec push inc mov cltd xchg fnsave or dec dec mov jo xchg repz mov sbb jg mov and hlt mov inc test jg xchg test push inc sub xchg xchg inc sub mov cmp es popa jb loopne (bad) divb jns jae sub inc xchg adc out fsubs jg mov lea lahf cmpsb jg jl xchg mov dec jg cwtl sahf dec ret or sti loope js sub out or cmc outsl xlat aas mov xor loope lods cmp aaa int3 dec (bad) std cmp jmp arpl (bad) adc push insl push and sub (bad) mov sahf stos mov jbe lcall fs cmp mov jg das and mov sti pop mov inc jecxz cmp cmc fcmovb js sub dec in adc mov out inc outsl xorb sbb cmpsl pop mov data16 and mov xchg pop inc cwtl and pop jge pop jae push inc fmuls jg sarb loopne and scas jp pop and sub or fdivrs loope mov sub loopne add jnp aaa es push ss insb push in jg mov sbb pop push lds jg adc repnz adc inc inc ret jg jns icebp int3 aas rolb jge mov into paddsw jg adc (bad) mov xor fwait arpl jle pop in xor icebp ds jg imul fildl jg xchg (bad) sbb jg,pt pop inc sub ret jg test mov xchg imul cwtl test jg inc in test (bad) xor addr16 jo push in jo idivl push or aas scas cmc push sarb inc adc je imul (bad) lods test mov enter (bad) mov and outsl xlat aas dec aam push cmpsl cs push int3 sarb fucomi popf unpckhps add xchg mov push dec shll or push movsb dec jge pop push jnp mov js dec push xlat es ja das mov (bad) mov enter rol push mov lods movb addr16 jg jo and add pop pop cmp dec jg (bad) push jns push es cmc jle std jg sbbl mov push dec lret dec push mov add (bad) sti nop or (bad) sarl xor es cli jg in add cmpsb les adc aad cmp inc in jl pop pop inc cmp cmpsb xchg inc dec aas scas mov fisubl cmc jg sbb (bad) test inc inc jg dec gs mov in imull out xor sub jnp and jg xor xchg adc addr16 jno outsl dec adc pop mov lret nop or jg pop xlat cmp jg enter das aam jg ss push pop jecxz in andl leave jne xor loop shrl mov sub sahf les hlt pop xchg out cmp jg rcl pop or test or loop jg enter insl xchg mov test pusha and stos jg sar out xchg es push jg (bad) sbb and mov mov push sub movsl ja jle dec jae push hlt les imul (bad) push incl sti mov cli mov sub test add jg pop inc into lock pushf lahf jg pop and (bad) repnz insb xchg adc out inc jg out pop (bad) jecxz mov inc jl push pop int3 jg push (bad) mov sti jp mov aas test ja fs aas cs int3 aam (bad) adc and shrl push inc adc dec mov std jbe aam cmp jg mov bound lret cmp mov pop jge jg scas push xchg loop repz cmovns loope jg rol aas xchg jp cld jg pop or adc push aam dec jg cmp lahf jbe mov imul lods sub xor pop lock jle xlat test xchg dec fisttp or les jg mov movsb mov sbb mov jae mov lods mov sbbl jg xchg dec or repnz sahf add inc pop dec sbb jno insb pop (bad) xor shrl sarl mov mov push and sbb and dec (bad) repnz dec test mov push add jg and das sbbl mov sub cmp pop add mov lret imul inc xchg jg and xor aas lock data16 rep pushf dec lods gs js cmc rol sub mov fidivr jecxz cmp xchg lret xor (bad) popf jg neg mov or les lret sti in push nop push outsb or cmp pop sub leave cmp jg rcll adc inc and lret jg sub and jg xor dec and js push inc into jmp mov lret or or jo pop addr16 xchg ljmp mov cmp adc inc inc adc cs jb (bad) sar inc loop cmp xor mov test dec repz loope mov add jns cmc ret sbb dec jp jg xlat je pop cmp xchg pop push dec decl movsb fwait cwtl jl or shll ret xor sbbb test dec aaa adc cmp (bad) cmpsl stc fmul or jg cmpsb mov int3 pop fwait ret add ja pusha sub or sub (bad) into jg fistpl xchg mov xchg push push and cmpb (bad) xor lds push add fldl scas push fdiv or inc fcom push jmp and pushf lock pop add push ja push repnz mull popf mov outsl inc (bad) out jp mov data16 std (bad) sbb cmp scas test cmpb inc mov xor sub cmp sub (bad) mov mov mov shrb fdivs ss jo mov in out icebp stc adc idivb je hlt rcrl repz jg mov out adc inc ss vmovhps sbb inc dec sbb mov jg std sysret out in test jg cmpsl jmp je mov stc jl xchg aas clc sub in sub adc xor mov neg add mov push aad mov inc xor jo mov outsl push in movsb mov test sub shr inc fdivrl or sbb jg ljmp jg add push clc mov xchg lahf popf das jb pop and sti mov mov cmp jg xor out jmp nop jg and in push sahf aas xchg dec pop jg (bad) imul jg pop pop lds pop jle inc mov aad mov outsl (bad) jo movsb push xor inc cld jns dec cmpsb mov shlb jmp arpl jg sbb je sarb jmp (bad) mov sub inc enter cmp push lret (bad) jg (bad) arpl loop mov sbb cmp mov xor add cltd sti inc pop pop inc loopne dec mov xchg dec or test es xchg xor jg push sub lds fwait loopne lcall inc and imul fildll push add xor cmp sbb mov xchg (bad) fcomps mov call sti jno mov ficompl push pusha inc insl and lock outsl mov ret pop rcl jne addr16 mov test lods es jg insb std or mov icebp mov jae cmpl repz inc adc aam ja dec xchg aaa sbb or loope imull mov dec out sbb or xor jnp pop jle cltd ficoml inc gs or sbb or addl call xchg add subl cwtl aad call pop insl rcrb cmp push fldcw repz sbbl xchg or (bad) jmp mov mov inc push dec cmp pop mov sti cmp and pop int3 cli mov call dec addr16 loopne jg aam sbb pop sbb rcll jg mov in push jg lods imul jg loopne cld cmp scas xchg mov and movsb xor fsubs jg push (bad) lock ljmp ret xor and std int3 jae out add ret addr16 mov lods out mov inc pop loopne (bad) dec push cmp or push pop inc gs icebp out pop jns pop xchg fmull mov sbb fist and aas sbb div stc (bad) aam mov rolb xchg loope jg fwait ja mov mov fistpll popf fidivr je and fstpt dec mov xchg and out adcl cli roll nop out in mov jno repnz test pop hlt outsb or adc pushf sub pop (bad) and repz jg or push movl in pop cmpl scas jno imul dec iret lods xor jg shll or jg and fdivrs or les pop aaa mov mov mov inc lret (bad) iret push pop pushf pop cs xchg inc jns aas xor inc (bad) fnsave inc push imul outsb or jge or mov xchg adc lds sarl sub movsb mov repnz (bad) mov dec dec jg lea pop and cmp push mov xchg arpl xor inc jg mov out sti and outsl lea jl push pop js outsl jae lahf cmpsb jg push fsts or push sub rolb arpl cmc xor and jo aas pop sbb cwtl push je fisttpl outsl out add and pushf fistp cmp pop shrl clc jge add inc sub cltd xchg push sbb imul pop push outsl jb jg,pn xorl xchg jp adc add jnp jg mov mov jg (bad) in (bad) lea jg and jmp scas (bad) push jg jne test xchg sahf les push out fistl adc sti popa jg jp and sbb push lret jg mov outsb push jg repnz jo mov mov jg jge xlat adc mov mov adc push or scas insb jae jg js jne mov mov clc jnp adc sub inc cmp lods leave data16 mov pop xchg stc (bad) xlat dec loop sti outsl into lds in xor invd jg cld (bad) dec inc popa nop xchg jg mov xlat std xchg jp fucom fstps jg mov in jg jge cmpsb jnp es xchg xor imul pop xchg fnstsw mov loop jecxz push aas xchg push cmp lods in jg ret pop ja leave sbb (bad) push and dec adc sbb inc nop jg cwtl mov lret dec sbb jg out iret xor and push nop xor in cmp (bad) out insb cmc lods idivb test and jg fiaddl xor fwait ss rclb jg sub push in sub insl rcrb add dec lcall loop shll int mov push or jmp xchg ja inc push loope mov mov pop pop dec dec sbb jg shrl ljmp and ret mov adc mov fistpll call push jo sub adc repz mov repnz in mov jg or movsl jmp flds xorb jne hlt cmp xchg dec ret cltd sti mov in lds jg or cld mov jnp push pop xor les je lahf xchg test call mov pop fildll push lcall mov jecxz jne mov fcomps mov shrb pop rcll jg lds fadds jg cmc sbb test insb lods out dec lea or jg (bad) pop sbb or jg xchg imul xor mov das xchg or mov xor mov sub jg repz mov jne xchg jg inc mov insl push and mov repnz push insb dec lret sbb xchg dec insl fs push cmp xchg lods jg or mov stos (bad) xor cmc in loopne cmp scas iret add xor push or dec adc (bad) push jle arpl xchg outsl gs aaa jg sub push fisub test in push adc lods cmpsb in cmp sub stos mov insl fild jg loop inc mov cmp jg xchg add jnp sub jg mov leave inc pop add ret push dec xchg icebp jg jmp test xchg and jg fimull outsb pop jnp cmp xor scas popa sbb and les rcpps rolb sbb lds stos or inc cmp jg or loopne (bad) in in imul (bad) in xchg jg mov (bad) sbb cli fdivp dec pop pop add in outsb inc xor gs adc arpl int jg xchg out jl and pop add xor roll jg or mov sbb lea jg jge hlt pop add jg testb mov repz (bad) jne dec addr16 pop jg in scas loop mov leave (bad) hlt cmp xchg pusha cmpsl in dec jb mov sti jae (bad) mov push inc in scas jg inc mov lcall mov lds popa or mov inc add divb repz cmpsb dec pop fildl aas aaa adc dec iret lahf rcl popa mov or push mov stos cmp jg nop inc leave stos pop jno fildll dec (bad) mov cwtl out sub jg cmp and jo jge sub mov pushf push gs jg mov jg push push ds add and cmp setge adc sbb aas jg pop push ret sbb pusha xchg adc dec insb jg in andb mov mov push loopne icebp pop xchg dec and (bad) jbe xchg pushw inc jg in fcompl pusha iret js fstpl jg push cmp mov mov (bad) push lcall xor cwtl jg inc mov jns call inc sub dec int3 mov jg cmpsl pop (bad) mov (bad) cwtl jg pop addl fist inc and scas jnp inc iret (bad) leave aas pop loope cs sub inc repz jg jmp std mov push mov add or adc push dec mov push xchg jmp jg sarl cmpsb mov enter outsb (bad) mov pmuludq jg lods mov jg inc or aas mov and xchg add scas pop aaa inc push pop xchg mov xor std jg test mov aas rcl mov dec mov in jb fdivrl jne arpl (bad) dec fstl mov mov gs xor lret dec (bad) inc in add adc jg je,pt cmp mov sub push pop sbb fsts mov mov jg test pop push jg jecxz ret inc ds and jg addr16 aad (bad) jg lods push push lret push jg out shlb mov (bad) sub cmp lahf jmp movsb std pop std jle data16 int sub xor popa xchg mov loopne xchg ficom icebp mov mov loop add xor jg pop and cmpsb fs sbb xchg test mov aad jg push ret dec outsb push aas out sub xchg jnp mov neg sbb out add jg sub mov xor mov sub pop jg outsl data16 xchg xor jo push test xor sbb decb iret xchg jg adc idivl lret sbb mov das clc aas insb imul lods xchg pop inc jg cli and sahf mov mov xchg jo ja data16 jg mov xchg adc (bad) fidivr fbld sub or popa rol cmp or sti test cltd lret movsl cmpsl pop (bad) out jg repz push movsb mov rcrb js out enter mov pop xlat push sub cmp cltd subl inc mov mov push adc ret fs mov mov push lret js incb outsl lds add unpcklps sti sbb mov outsb adc jg mov and sub push cmp out add dec push xchg out sub aam pop icebp sbb cmpsl lahf push jg push sbb jg stos inc ljmp lahf aas std push iret jg jo test test inc jno add jmp test fidiv jp mov pop xchg cmpb addr16 jg mov sbb push dec jae cmpsb pop xor js popf xchg dec ds aas (bad) jg stos into outsb scas or jg lahf testl mov movsb push (bad) push inc testl push xbegin mov cld xor mov dec cmpsb out (bad) jg bound lret mov pop jae xor xor mov in clc cld sti mulb mov pop xor gs add mov popf fisubl dec mov xchg fstps xor mov jg mov dec sbb jmp jmp jg push add jg push (bad) mov inc sti push jb insb (bad) jne and aas nop jg sub mov xchg movsb cmp xlat inc ja pop mov push dec test dec sub insb sub std add stos into fs push and mov jne fdivp sbb jg xor xchg pop sbb notl sbbl cli dec jg outsl dec cmp jg cwtl jb or aas push push out inc inc jg lods jns jl nop mov jbe movsb dec dec mov inc stos aas xchg shl adc fwait jae mov mov add sarb mov jg mov mov jg imul ficompl mov nop pop lods mov sub movsl insl cld inc inc insb aas cmpb dec out ljmp cwtl daa pop xchg pop push repz dec jg mov jge ficoml jp jno popa push jg mov and inc sarl or shlb inc sbb pop pop int add jg mov pop test xor dec xor imul jb jbe stc jg fs cmpsb adc jae aas xchg fcompl xorl jae xor pop inc add mov arpl jbe inc cmp fwait push jae mov and fcoms aas adc lcall sbb cmp jg movsb xchg xchg push sub and or scas jg jnp and aas mov dec xor test cmpb (bad) pop popa inc mov adc push gs pop scas out and ljmp sbb xchg push fwait jg shrb jg test cli jnp or fsubrl jmp movsb lds cmp lret push fimull push popf mov (bad) (bad) mov sub and jg jb test idiv jg (bad) je clc pop dec mov jo out jno mov ja jg mov int3 fstpt es jg mov pop mov xor scas enter pop into xor push sti jg (bad) das mov mov in and add xchg outsb jg adcl jg fist mov out lea into cmpsb imul inc jg in mov addr16 daa xchg (bad) cmp and jg xor push jg insb pop (bad) les mov out enter mov outsb inc pop leave mov mov icebp xchg xchg iret shl mov dec jg xchg fcom hlt jg jae mov jle test cltd and pop ret in movsl dec test push or jg sub cld push iret cmc mov jae sbb add in jle jg lods add inc adc push jg mov data16 aas pop insb dec xor cmp (bad) xchg rclb dec and jmp mov notl inc jae aam sbb popf lods jns scas sub xchg xchg jg adc and movsl cmc (bad) (bad) insl inc mov xchg xchg adc sahf jg xor adc jns jg inc mov es movsb jg test nop push ja loop add inc inc sar jg pushl out mov mov cli imul gs adc push mov and repnz xor cmp pop test push fsubrs dec add adc das insl test jg sbb or mov pop xor insb xchg push fidivrl dec add mov jns,pt aaa arpl cmp mov (bad) mov pop inc xor mov push lock mov outsl sbb lea push xor (bad) mov (bad) mov and mov jg jl pop mov cmc jmp or mulb pop in (bad) jg pop aam imul dec nop inc and repz (bad) jg adc xor pop inc loopne jg mov negb xor loop iret jg out lret mov dec pusha icebp pop mov mov jg sub or loope jg sbb cld xchg adc and pop jno mov gs mov fwait jg mov popa mov (bad) pop lcall mov pop jne clc pop jg cltd (bad) or arpl mov ret cmp xlat std test fs or mov clc cmpsl mov arpl test test in movd xchg pop inc inc stos in es ss imul jae imul mov test jg push decl jecxz jp ja (bad) lcall sbb jmp das adc (bad) movsb sbb dec add idivl ror cmp lds cs stos aam ja mov and iret jp jne sub cld push (bad) fsubl sarl into lahf mov stos xchg inc jg mov cltd bound xchg ret cli mov jns in inc dec push mov cmp incl outsl mov imul jne mov fnstsw xchg xor sub inc popf push xor mov ret (bad) jg xchg dec mov movsb pop jnp pop push push outsb dec sub pop or xchg fwait push dec in jg mov in or jg js popa hlt dec stos fnstsw pusha jo mov aaa push jl nop fildll jns loop insl dec pop jg popf push je inc jmp jg pusha test adc sub cmpsb mov out das mov xor add jmp popa pop jg out nop sbb testl scas mov aam inc rcrb aas cmp lods lret dec pop das jg mov push pop mov ret imul insl add aas popa nop insl outsl sbb jg add inc clc sarl out (bad) push jge (bad) xchg jno dec or cmp push out or xchg inc mov and mov test cltd sbb daa fisubr add sbb and cld notl push je jg or lcall xchg or mov jg outsl loop addr16 out cmp fiadd cld mov outsb leave pop and or mov (bad) jae lahf sahf cld jg inc xor jg mov sub mov std scas jg mov ljmp sti inc add scas xchg lock inc aad jae push pop cmp pop cld orb arpl xchg leave or sahf out xor push pop jecxz cwtl int3 cld jg enter xchg jg mov cli mov adc add stos leave jg lods and loope out lcall xchg leave fdivrs jmp sub jg sub and and push and pop lret std push movsl sub aad int cmp dec jg jmp shll ror insb cmp lds sub sub fildll cld pop cmp pop loop jg push aaa add mov and sti cmp test push jbe dec fiaddl dec js clc (bad) jg mov inc push jg xor dec dec inc cld imul dec jns in jg arpl push xor jg mov inc cli jg movsb fimull inc bnd cld (bad) pop jp mov or adc dec inc bound imul push pop add jae pop lock dec adc rcr xchg loop andb outsl jg aad sub cmpsb ficoml cwtl xor add jae adc mov xchg dec xlat clc repz jg lahf (bad) fcoml jb jg ja mov jg cmp mov negb jg push mov jl,pt mov mov jmp or mov clc sbb dec imul adc (bad) lock sarl sub fcompl fcomp adc jg inc loopne pop add idivb jge dec hlt enter outsl icebp mov mov adc inc (bad) sub add jecxz sbb dec (bad) cmp clc push jg xor and lcall jg mov pop ja push out cmp and mov xchg mov mov push fcom arpl icebp or cmp test aas push fcompl xor test mov outsl (bad) add dec leave in xchg insb inc inc lods jo xlat jg jnp stc xor ret js sbb out mov (bad) jmp inc pop inc out out jg add addr16 dec push (bad) jg test lahf mov (bad) sarl testb jb mov arpl push and (bad) sbb mov ret add fldcw dec scas sbb test jb dec cmpsb and inc inc xchg dec outsl fimull or jg sub or imul jg test mov sti stos popa cmp and sbb outsl lret cmp sti and les repnz jg jmp into das add pop push xlat mov add shl js das insl loope (bad) mov inc pop add mov jg leave lods mov idiv adc imul push das jg mov outsl out aas hlt imul jae jg mov dec mov mov cmp pop aam repz cmp xchg sub mov jg jb test sti pop imul notb aas pop push cmp loope jae ljmp icebp pop dec mov sti out ret mov mov or addr16 cwtl or and cmpsb adc jg lds jnp sbb ret push inc pop jg add or lock fidivrl enter push jbe mov push cmp cmpb outsb inc mov add xor js pop pop in sub push add jg push popa shll jo jg ss mov pushf mov jg lds jg and push jg and insb jg dec and gs shrl dec jp jmp xchg jg jne roll pop inc jg xor jmp xchg cmp in test je pushf inc test cmpsl sbb imul lret js push sub cli shl daa aaa mov andb rorb adc jl inc and faddl push adc bound mov enter push xor mov (bad) jg pop push add jg inc jle push das and test movsl mov js pop jbe dec aas sub jg inc fisttp mov push in jg mov add enter mov cmpsb fadds mov mov int add imul push mov outsl mov (bad) mov jge test insb std pop mov stc movsb hlt (bad) (bad) test stos out push lahf jg mov (bad) xchg mov jecxz mov push inc jns lds movq mov cs mov mov fs jg inc mov pop aas pop (bad) pop ret sbb in mov gs scas jg into fs lcall or jg movsb mov pop shr dec push mov mov divb pop mov iret pop mov jmp jg sar inc rcr pop mov out outsl adc add movsl call dec mov hlt lea push mov pop or or xor mov stc fadd pop add inc das jg jmp mov push popa lock jg data16 imul in mov ret lods xchg repnz lret (bad) sub clc jg fdivl mov enter mov popa mov imul lret mov addl and mov or xor mov mov imull mov jg xchg mov fistpll incl lret out cmpsl dec mov dec scas dec fsubrp or jg jb add and es push dec (bad) test mov decb pop insl scas adc push jmp jg jnp mov dec jne pop adc xor out inc push add stos les sub jecxz cli test stos (bad) dec lea pop ja sub mov vmptrst mov sahf jge pop pop dec mov pop ficomp insl jl stos push hlt out fcoml lea jg or xchg mov jg (bad) daa and sbb jg inc pop js shll aas lret inc ret cli mov int imul inc jp imul jns ret add xor lret pop mov out jg pop js adcb popa mov xchg cmp and inc or mov insb jno xor mov test dec xchg jg lret mov fidivr mov aad ss or xchg jg dec fdiv push movl lahf mov jnp loop jp and dec xchg push jg mov cmpsb adc (bad) jae and jmp cmp pop pop cs inc aas push xchg (bad) insl jle mov mov scas jmp mov in jg xor out push mov cltd dec xor jp mov and pusha (bad) push jg cmc imul push lahf rcrb popf call fmuls addr16 sbb movsb cmp (bad) or mov dec add push mov jg sbbl outsl dec cmp jg loope scas out xor jno test mov popa jg enter cmpsl xchg xchg jg pop push decb int push gs lock jg repz clc xor lods insb jmp popa xchg mov in cli daa mov popf adc or or inc jge rcrl out (bad) or or xchg insl mov jp pop adc jg imulb scas inc dec jmp jge sbb (bad) stos xchg adc mov test jne data16 sarl test outsl pop xchg and jg jle push mov sbb inc mov lock out cwtl sub sub in repz xchg xchg mov jg pop add iret xchg cld and jmp mov add das aas xor out inc push push cmp movsl loop sarb cmp jb dec pop xchg pop add scas inc cmp insl dec lret jg mov (bad) or jne scas aad dec lret cmp jecxz mov orb int arpl jg add mov negb inc dec jg xchg ret push jl dec adc push scas (bad) pop jg in adc jnp lea lcall sub cmp pop ss jb pop dec int3 pop cld mov jg in adc repz mov pusha cmp inc inc jecxz dec sti push xchg pop jo fs push inc out and dec (bad) out jmp inc dec or inc sbb xlat ds xor sub mov jg shrb sbb mov pop loopne dec pop mov xor popf jle push movq mov cmp (bad) fist sti loop mov test push cwtl scas sbb pop mov popf ret fcoml cmp xor xchg insl xor js (bad) jg (bad) mov clc stos dec push mov sbb inc test cli cmpsl bound jo repnz andl jnp jg push push sub cmpsl or mov xor dec adc jg mov or mov sar pop mov pop jg push mov mov pop cld sbb sahf dec mov jg push dec sbb jg inc xor xchg pop (bad) push jg xchg jnp movsb (bad) rcl cmp scas outsl xor adc cmp jmp jecxz cmp add xchg bnd cmp adc xchg (bad) stc mull cmpsb mov shrl (bad) int pop jg add push cmp iret dec (bad) mov inc inc fldt dec jg push addr16 repz and inc imul jg cld xor jle insl imul fcmovnu sti adc jg popa jge es std sub mull mov sahf shl insl xchg loop inc and jg jae data16 out pop jg push fs pushf adc stos mov inc (bad) dec out nop jmp pop adc pop jg xor and pusha lahf ds xor dec nop jecxz lea pop js (bad) sti in mov jmp mov repnz jg push push ljmp cs (bad) out cli dec pushf jg in inc cmpsb fild jo jecxz xchg mov mov pusha or sbb mov sub pop sbb xchg xor push sbb out test lds add pushf dec pop add jg sub pop jo ror lds cmc int3 jae jle jp lea (bad) (bad) jg sub cld (bad) ds pop les and inc jae mov xchg mov jg cmpxchg (bad) xor push ss jge sbb insl and (bad) jg pop add jmp jbe aas mov lods dec dec scas aad inc add pop (bad) jg stc push sysexit pop and pop jb or jg data16 (bad) shr inc jmp aas shl jp jbe insl and sub mov sar sub mov (bad) cld pop cmpsb inc dec jg and cmpsl jge int3 iret aas cmp sbb xchg mov jg bound jl movsb add mov pop jae icebp in jg ficom idivl lea xchg jg cmp pushw fwait jg sub or out clc dec mov dec test mov cmp adc aam mov xchg in pop mov cmp (bad) fdivrs push sarl or test xchg dec aad jg sbb je dec in loop mov sahf insl xchg andb pop sbb jg cltd mov pop lds and mov pop fisttp jnp and aas dec xchg dec inc jae cmpsl jo push pop in pop push push ja outsl pop xor das sub (bad) cmp inc mov mov and xor pop icebp sub push xor movsl sbbb and out sbb mov scas sbb mov cmc pop xchg (bad) sahf add jg jbe or inc test xor cltd xchg and sahf pop inc jle shlb push call push pop jns jg cmp stc push sti ds jb pop movsl and aam sbb adc iret mov neg lds out (bad) fs dec xor out adc sbb jp sbb push mov mov test xchg pop insb gs jg cmc and aas push inc mov (bad) movb jae inc insb js jg (bad) call leave jg sti lods lds daa xor jns cmc into popa fnstsw dec fisttp sub cmp jg inc lods jmp imul int3 pop jg and jecxz pop movsl stc or mov jo cwtl jno (bad) lahf lods pop and lahf dec jg (bad) out rclb dec mov (bad) ja sbb lret scas fmull into jo dec mov mov stc jg push cltd mov jg push aas cmp lods xchg pushf aas pop and inc mov repnz out das jg xchg xor jmp jecxz (bad) lret cli fisub jg imul sub inc pop and adc mov jae and inc fucomi and jg (bad) push aas popf cmp mov fwait push out mov jne pop dec ds jg scas andl (bad) mov jg mov les jg ds push add ljmp pop fs mov jl les mov outsl mov das inc jmp sarl pop dec jo test jg mov sub cs jg adc cmp xchg lock jg addl jae cmp mov into int fdivl push jg in inc xchg cmp add cld jge inc sub imul xchg add pop aad mov or push dec push jo sbb fnop js and aas insl shll (bad) ja xor sbb mov outsl cwtl fdivrs (bad) xor (bad) adc inc popa hlt mov jae push dec lcall xchg sbb dec push out sahf jg pushf cmp gs lock sbb test mov loopne test cld ret enter fistp xchg popf sub jp out outsl adc ret arpl push jl inc test xor jg cwtl adc mov psubb xor add cmp xchg jg mov test mov add in jb xchg aas dec clc daa lea push dec imul test jg pop iret dec mov jecxz mov pop adc jg sti push test fist or inc xchg in or jg dec arpl jg rorb or fwait dec sarb cmp adc jg add mov jg stos lods scas or dec add ljmp dec jg cmp mov pop outsb aaa mov push (bad) and jg rorb test fdivrs lea jg imul mov push imul jg (bad) aad xchg lock pop not mov in and xchg loope or nop mov mov xor lcall inc sarb jle push fisttpll dec mov jno xor sub add loopne mov aaa inc es mov pop setle jg xor or ja mov dec mov push mov and repnz mov adcl lahf rep cmp dec mov inc out pusha push lret hlt adc jg dec lods cld nop es jg pushf sbb jg ss mov ljmp pop jbe jns jg sub sub rol jbe sbb or mov fdivrp mov inc mov mov notb or mov jg inc cmp and pusha jmp inc into mov js pop pop dec mov dec repz xor sarl mov bound jmp dec add dec aaa mov pop xchg testb repz mov rol mov popa comiss imull lods mov addr16 pusha push add rcrl xchg jmp fidivr icebp sahf popa inc xchg outsb add xchg aam les pop lcall int3 jae sahf lods rcrb push aad cmp int fisub testb dec inc jg sub push mov sti jg mov icebp and lahf mov rcrb cmp xchg sub sbb in or ds lods mov pop mov subl int3 xor jg xchg sbb imul rcr repnz sahf cs or fdivl cltd scas mov push jg mov leave jno daa pop and add cmp loopne mov inc push mov call jne mov mov sarl mov clc cs insb xchg push dec cmp movsl mov mov mov jg rcrb mov bound push addb mov imul out dec pop jecxz cmp rcl fistp dec cmpsb rolb xchg lret jg add sbb in stc aas adc mov pushf fisttpl and xchg cltd outsl divb out mov pop (bad) dec jg mov sub mov sub (bad) cmpsb add push cld leave sarb (bad) cmc jns push adc aas mov mov addb dec inc xchg aas lock dec testb outsb or lods lahf adcl mov rcr jnp cmpsl cli pop cwtl sbb mov pop lret mov xor dec inc arpl stc je and fwait dec shlb sti movsb nop pop leave inc sub mov add jg xchg jl (bad) and inc sub jo jno or nop adc ljmp jg sarb sub test cmpb in jae jo jg lods dec and jbe es std jg and mov xchg ja push enter aas ret or loopne mov fmul adc inc sahf xchg lods mov addl mov repnz sbb outsb mov pop cmp adc test les (bad) or out mov jg sub fstl and pop or pop ret xchg jge mov subl push scas mov notl aas mov stos add outsl jg and and mov cmpsb enter and js mov xchg aad jg xor fdecstp les aas es out inc or jno,pn shl jg pop daa ljmp sti cmpl fimul jg call dec adc scas lahf mov jg int3 sub push in xchg jg ret shll mov jnp,pt pop iret push sbb loope add negl aad repz (bad) jg frstor jg pop jne push pop ret call jg repnz xor enter dec outsb push mov push mov inc incb push dec inc xlat jg fcompl push mov jbe pop jge mov adc inc repz faddp sahf adc inc lds (bad) imul cmp dec jg (bad) xor inc (bad) fwait pusha inc jno dec lods jge movsl mov sub ljmp fisubl jg sahf mov jg mov loope xchg mov and test add and mov lahf es cmc bound sub cmp cld push call lods jae sbb iret jecxz fldenv push jg sub (bad) dec pop add dec pop lret add pop fiaddl fistpl (bad) into addr16 int jg daa aam and mov ss pop inc add adc jnp insl jg cmp (bad) sub test insb sbb lock jnp call jg in push mov pop mov lret daa (bad) (bad) jg fdivs fucomi popf adc inc push rolb jg scas ds or mov push xchg (bad) bnd jg les cmp push fdivrl imul inc mov out ljmp adc cmpsl pop jge and sbb pushf nop jg mov in fs or jg mov stos xor cmp cmp pop xor inc or and mov mov test call jmp and sbb sbb test jg shll pop jg mov fbld adc add pop jo jp jmp sub jge cmp jg hlt cld fnop sbb fidivrl mov push mov and ja outsl mov cli cmp cmp jg ja stos mov test pop mov pusha push pop mov or sub pop (bad) sub loop dec push adc jl jns mov mov xor popa inc out mov rcrl iret jg mov pop jmp push jg and out mov in in jbe mov xchg inc xor (bad) fidivl sbb dec sti mov push jns sub xor jl popf pop push jg fmull in jg (bad) ljmp or inc jl pop (bad) lea jg pop orl test repz stos jg fwait sbb mov and popf or mov or inc push sarl xor fldlg2 mov jg sub in idivl mov lret outsl lods dec idivl pop sub sahf lcall (bad) xor mov or mov cmp pop dec xchg dec jg leave xchg stos call mov jg mov sbbb hlt mov adc lds jg adc mov jg add jecxz mov mov sbbb lahf iret jg inc test loop arpl jg mov rcrb and and jg xchg add nop js cmp mov fcmovb mov push cmc mov andb lret xor les jo mov loope pop jg flds ss sti (bad) mov sbb inc add test jle and fisubr lret and sub mov sbb movsl jne inc movsb addr16 pop sti jg jle xchg sub mov sub fmulp ljmp jl fwait stc pop fisttpll inc mov or imul dec cli fidivrl (bad) sub sub mov mov inc out mov jg adc pop pop jb and add into jp cmp popa aas xlat and in outsl and inc cltd mov jns xchg imul jecxz lds jg rorb cltd jg or jmp sub add jg outsl das xor in jg adc sbb mov mov mov out and jg stos lea pop in xchg mov rcrb out push jg lret xchg int3 data16 push arpl fisubr adc aaa xor iret adc (bad) repz pop xchg jg sahf sbb stos jne xchg jg sbb pushf and gs rcrl add jg xchg mov lea (bad) int3 jg getsec js sub xchg inc sbb xchg cmpl fcom sub adc mov dec sbb ja mov jnp push adc pop imul push mov (bad) dec inc push cwtl (bad) jge mov test div leave push das xchg loope or add movsb xor or imul in mov jo bound add jg nop lahf in test insb mov pushf out add pop dec sarb fwait xchg loope fs mov aas in iret (bad) aam les pop aas lds cltd mov in jg jge (bad) loope push js adc idivl jg into insb mov loope mov jg push icebp popf in pop arpl jo dec jno movsb cmp cli pop xchg mov push ret add jg stos mov ljmp push pop lret jg sahf js mov jno sbb sub fistpll cmp sarl dec and nop xchg mov mov jg outsl hlt dec pop (bad) idiv jg imul and and jle stos dec jg cmpsb lret add mov mov jg loope pop sub adc mov sub lahf jg clc mov stc rcll int nop pop ss out fimul sahf icebp dec cli stos jg add inc (bad) aam mov pushf xchg jmp daa pusha jg je sub out pop cmpl es imul adc fidivl or add mov jg insb fs ds or addl jg sub fs push repnz mov jg adc inc mov mov add js dec les cwtl (bad) or pushf dec icebp lret inc and imul dec imul mov pop insl jnp (bad) scas add aad dec cmp add or jg push test gs push out popf fiadd aas insl lret sbb pop fs rcrl mov mov daa push mull aad jg jl out imul lock lds sub imul jg loopne sahf aas fdivrp repz lret test fs mov gs popa ret xchg dec sti xor ss cmp fistpll xchg mov dec out sbb jg push pop dec inc call mov dec test mov adc pop fldenv jg imul sub mov jg pusha or xchg sbb aam xchg roll push out sahf and push ljmp pop test inc call mov in mov insl cmp cltd pushf jp add sbb (bad) sub xchg add mov inc cmc dec in or add out jg and daa xchg pop ss sub push insl pop call push and stos sub adc lcall push out mov push (bad) sbb cmp xor or mov xchg fidivl stc negl out movsl pop and insb add adc mov mov ficomp pop inc mov sub leave adc shlb mov mov add (bad) jnp scas xor mov jg ret int mov xchg (bad) sti dec xchg jle or lret cs icebp popa shl jg orl pop jg cwtl add add imul cs pushf dec stos out enter mov xchg imul (bad) sbb jg loope outsb jbe outsl into push fldenv test stos or mov inc jg (bad) mov cmp cltd dec sub pop test mov jp mov or pop sub nop dec add push (bad) sti (bad) iret std and (bad) xor cmc jge inc lea jg and pusha xor jmp orl jne (bad) mov arpl leave jg je and jg aad mov add dec cmc insb or scas imul das pop insl pop pop jg pop cwtl jb pusha out inc cmp jg cmp fbstp sti cmp adc push jecxz adc int inc cli sbb pop sbb js xor inc cmc xor dec mov adc (bad) shr movsb lret hlt out psubusb cmp icebp jecxz andb xor mov mov or es jg orl loopne mov scas hlt push aas mov pop aad or jg dec adc sbb pop mov xchg push add lods mov jg xchg imul mov xchg mov das jmp ds imul jg push in (bad) mov jg cli and repz dec movsl cmc outsb push pop jg dec mov mov mov scas aas cmp scas push inc jg or andl pop into (bad) je add leave push fsubs jg cmp (bad) dec lahf rorb fidivr jg test cs jmp je sbb sbb in mov push jg jge scas ret pop out jg data16 or xchg pop mov shl sub loope dec and cmpb aas stc outsl cltd push jg lret xchg xor test mov or mov jg jne fadds jg sbb jg inc das (bad) mov adc mov inc stc jg sarl sub loope xor iret xchg mov pop mov hlt jne or sar dec push (bad) push jg loop add (bad) adc xchg out shlb repnz mov xor add inc xchg movl push daa inc in ret cmpsb mov jnp mov inc push in sbb dec jg jge out icebp enter jne outsl jae add lahf fs sarl out les sbb (bad) fs in xchg xchg adc add jg pop push scas jmp or test mov jg and push dec jg or adc (bad) cmpsl jg (bad) sbb xor push mov data16 xlat xor mov cmp sbb fucomp stc sbb dec scas fildl push xor (bad) dec pop (bad) pop decl arpl (bad) aad and dec pop inc cmp idivb outsb fs lahf xchg (bad) cmc jp fidiv jb mul dec jg lret std out xor sub lcall or std and je mov shr (bad) jg fcomip and xlat loopne cli push mov frstor xchg jg call mov jg push in gs cmp jg add and jg andb ret jmp fbld sub jno cwtl pop push pop pusha cmpsb test jg jmp add mov mov push hlt popaw jg sub jg int3 adc cmp sarb movsl sti ja add orb std pop int mov add push pusha and movsb sub dec sbb push outsl add xor jg inc test mov jnp mov jmp dec jl insb clc push scas adc mov add push pop and scas lret sahf inc jb push jg mov add movsb mov mov cmpl inc or push xchg int3 ljmp dec lds dec or test push jle sub popa addr16 cwtl sbb sbb dec (bad) bnd out lock mov push cmp jg xchg loopne and and and jle loope (bad) xchg test add dec mov arpl jbe add pop jg int mov mov mov daa cmpsb mov imul sets lods adc mov sub (bad) (bad) cmp mov xor (bad) ss add jg sbb stos jg inc scas int fwait and aas ds xor aas sbb jg mov (bad) sub in mov lcall sbb jg leave jl (bad) fdivs adc mov sarb fstpt adcb bt pushf mov popf int3 in jg jl divl fstpt xor lahf mov adc xchg sbb xchg jne addr16 (bad) adc rolb or sub push cmpsb jg cwtl cmp sbb adc or icebp jb (bad) int mov loop push pop mov sbb into jp int3 cld mov or jmp test repnz (bad) in ds jg insb mov pop test in inc lret sti cli es outsl push jne pop mov int3 mov das inc cmp test outsb test or cmpsl jg dec movsb ds pop sarb mov enter jg (bad) fimul jno or jnp (bad) pop scas jg xor lret or pop push push jmp sub jnp or push pop aam dec aas mov in push push jl das inc jne cmp mov jg push out adcb mov inc push (bad) cmp jg xchg fwait repnz sub sub cld pop ljmp pop pop jbe out ret sarb xchg and dec das push outsb pusha add inc push push aas jge jo xor iret inc ret outsl (bad) hlt stos cld xchg fnstsw rcrb cmp mov rcr mov xchg clc int xchg mov fwait ret data16 lcall ja jle repz mov cmp loopw xor sbb add in xchg faddp in jmp push inc mov outsl fist cwtl (bad) pop (bad) mov xor or and arpl push stos int (bad) sahf rcll adc mov jecxz inc pop add mov pop mov lods cmpsb pop rcr dec inc and ret pop insl ds enter cmp psllq push mov and jg jle jmp jg aad sbb aas inc pusha sbb call fsubr adc jg xchg int xor push addr16 jle imul dec scas cld pusha js adc pop pop adc jg mov cmp jne and mov movsb in mov jg cmp fistpll (bad) stc mov sti or ret cmp xor enter mov loope cmc jmp stc xchg stos jg imull out lret bound add or cmpsl push jl push dec imul mov xor fstpt xchg lahf movsb push (bad) hlt fiaddl out dec jg aaa xchg jg outsb rcrl jg pop scas scas push jle les sbb (bad) (bad) or jb outsb shll sbb push cmp idivl mov loop data16 xchg mov sbb sahf inc movsb cmp ss cs pop jb sbb faddl loop inc ret dec cmp and mov mov push sub sub mov ja call (bad) cmc inc iret imul jmp push xor addr16 xlat lcall cmp inc loopne jg mov ljmp jp call jg mov outsb out jg mov (bad) mov jg pminub ret (bad) jg aas cmc call jg bnd push fwait xor jg (bad) jmp jnp out dec aam loope add stos push pop inc push clc xchg loopne jg inc aam adc addr16 scas in mov cmp arpl or jg or push and jg dec mov sub push xchg push sub lret les (bad) out mov sub cmp push xor nop out inc pop jo mov jle incb fcompl xor (bad) jg or mov shll (bad) lea pop addr16 and jg notb sbb cmpl insb imul fnstsw or cmp cmp js stc scas jg shrb pop sahf jg ucomiss stc int3 mov cmc aas add jno jp out xchg pop jg shr adc dec sbb or dec jg adc dec fidivl inc inc jg iret pop pusha sbb jbe flds pop pop jnp call repz xor clc std sub adc pop lds and mov ret push jg test scas mov sbb adc jno ret mov out call ds add out dec jg test push cmp shl jg sub dec mov push sbb jae xchg insl mov jo (bad) out cwtl inc sbb repnz xchg pop cvttps2pi nop jg mov into xorb movl jg (bad) (bad) cmp lea push in orb push jmp sti and xchg xchg adc sbb mov add cld pop mov sbb loopne sub mov popf fwait inc fbstp loop jno lcall int or mov test mov push iret jae jg sarb jle,pn sub nop aad mov cmpsb movsb jg loope or jge lahf jg mov aas mov adc jg inc fsubrl sti ret not aam aas adc pop fisubl addr16 xlat dec cmp shll jg sarb int push jg push xlat jle cmp mov (bad) jo (bad) hlt jg mov sbb pop cld icebp jg out lcall ror and movsl dec fistl insl jno inc test mov les scas jg idivb dec mov pop into in outsb scas pop fwait and mov push dec je pop add fcoms inc sbb mov jg (bad) (bad) jg clc pop xchg xlat repnz cli xchg jns jg push add or sbb jp out sbb sbb mov jg in lods inc dec xor cli xchg mov jg int3 push mov add (bad) (bad) mov mov xor std push js loop inc loopne mov les or xchg psllw fcoml jg,pn scas subb jle stc dec xchg idivb add mov jg xor mov cmp movsl jg aam xor cld ss adc mov mov jno aas cmp int3 sbb int sysret jg xor (bad) iret mov (bad) jb das xchg jg,pn hlt insl movsb mov pop lea stos fs imul mov mov mov aas xor add jae jo xchg cmpsb imul inc rsqrtps push or mov testb dec addr16 movsb add call xchg xchg jg (bad) neg add mov push lock ljmp adc jbe add jg stos push sbb inc repz ja xor out xor or lret and mov xchg inc sub jae ds dec shrl mov cltd ljmp aam (bad) mov pop idivl mov cmp jg,pt dec jb pushf data16 adc lods jg sub (bad) mov popf sbb add outsb js push loopne jg scas movsb cld decl push and inc xor mov ja jg and pop fadds js or lret sbb cmp jg xchg les sub mov inc imul xchg (bad) mov lahf and jg sub add xlat push int3 aaa repz jg mov inc shr jb pop call mov ret push mov jmp pop les inc or iret sbb push addr16 adc rclb fildll xchg loopne fnstcw and mov aas and loop sbb push xchg sub jnp ret out and adc inc std mov mov es sbb dec or inc add mov lds jecxz,pt pop dec loop popf imul pop jg out cmp sbb rclb xchg fs push inc jg jns jbe mov (bad) mov dec xlat aas outsl je cmp sub sahf scas inc mov sbb xchg pushf pop aad adc lds insb ljmp cmp jge mov out adc jmp test cmc and daa mov int mov adc or xor lock mov (bad) xchg out (bad) js or (bad) pop xor out in pop popf push fdivs inc fwait cmp xor mov cmp xchg roll punpcklwd dec lods mov cmpsl addr16 hlt loop popa sti xchg push and inc out aam cs inc cmp bound push aas pop scas adc sar xchg sbb pop fwait imul jg,pn (bad) iret repz ljmp add jnp jae jbe clc mov je inc mov pushf popf movsl ljmp insb jg xor add cmpsl adc cmp lea loop insl jecxz jg and rclb in jg loope (bad) fucomp outsb cld inc push cmp mov push mov cmp dec lret or dec es imul aaa fnstsw vmovupd stos jg arpl cmp push jg xchg mov mov mov sbb mov pop pop outsl cmc nop icebp test mov cmp pop jle jmp xchg lods jg xlat dec xchg jne cmc jecxz jae inc fs mov mov daa das jg arpl and cmc jg xchg lds cmp loopne and jg xor jle into mov xsha1 cmpsb dec push fsubrs ljmp and jg mov mov mov push dec mov dec mov xchg and lock lods ret arpl loope iret fwait enter inc hlt aad and imul mov mov jo push or shrb popl mov push inc sarb sbb sub in shll mov push cmp mov mov cs sbb stos jg adc lret xchg mov icebp jg jb cmp add add push xlat xchg mov inc dec dec or cwtl js cmp jg (bad) adc sarl fdivl dec push jmp jge jg dec pop pop push cmp mov clc mov push add xchg mov jg scas xchg mov out lahf jnp dec jbe jg inc sar push (bad) sbbl fildll adc dec mov faddl clc jg or les adc xchg adc mov mov or scas je sahf fs sbb sbb sub sti loopne cli jnp mov mov mov movsb out jg ja adc push pop scas mov out dec xor push lock je test jb (bad) icebp out or cmp pop mov ljmp add dec ret jg test jge outsl add mov jno inc aas fnsave push add outsl pop mov pop pop jg jge scas cmp fwait mov enter aad (bad) sti sti popf iret jmp and lcall mov (bad) sub add imul jno adc insb sbb adc xor and movsl mov fcomps sub mov push int sahf add cmovno cmp lret cs pop insl inc xchg mov rorb popa jg mov cli pop jo sub mov mov (bad) movq stc sub gs or ja cmp jg outsl pop test mov pusha sbb inc pop ret dec jg call (bad) or xchg lret dec jl mov or sbb pop nop cli xor push in repz mov mov pop movsb fdivrl push outsl push and push push xor icebp xchg xor and sub jg inc bound (bad) adc jg sub push test mov inc aas nop xor cmp xchg aad cltd mov pop fnop cld jg and sub loop mov rcrb lds jg inc iret (bad) mov outsb aas outsl or jne add push pop das mov fwait decl jmp outsl nop inc ja cwtl jg cmc cmp jg sub push add loope jg mov idivl popa inc mov jmp bnd imul sbb push jg xchg mov loopne rclb lds std mov sti xor inc push push lods fwait cmpsb pop movsl in jbe adc daa xchg imul mov mov (bad) mov inc pop inc xor xor push lds add idivb (bad) push int (bad) icebp cs sbb mov movsl push sbb jg mov cmp cmovg lcall push mov out add lock mov lahf lcall (bad) loopne sti (bad) addr16 push jmp repz sti jg mov jg pushf (bad) jecxz ljmp xor loopne xor or inc push xor pop cmp xor enter dec mov or push mov push lret rorl ss cmp fstl mov jns scas or push aas push dec push inc fistp mov jg les in lods sar mov sub add push jbe jns cmp pop outsl xor je ds idivl pop xchg out add pop sub (bad) and push out in lahf popf les sub jg in jae arpl mov xor imulb mov lret scas cltd loope lock mov mov pusha test cmp bnd out pop mov push popf in push push pop dec jg jno and pop fidivrl call fidiv lcall xlat jg popf scas ret mov test loopne cmp jnp pop shll hlt js mov lods jg lds sbb imul lock idiv daa push dec insb aam mov enter sbb inc call and divl pop repz jg andl mov mov sub jg add inc mov jnp not push jg sbb jg stos sub sub aaa jg clc push xor sti into int3 sub and iret mov lret jbe mov mov int3 jg nop jle cld lods das sti add jo push push push aam jecxz leave mov dec or or add jg test iret sub ja cmpsb scas pop sbb insl mov jg add loopne push (bad) push inc jg es or inc jae cmpsb push movq or cmpl jg sbb fwait pop sub lods jg fs jo mov and rcrb out and fisub (bad) dec adc pop cmp stc add sbb inc mov test pop test imul mov adc mov pusha and dec inc add jle xor and lcall cli jg cmp jnp jg add jns jg mov loopne dec dec adc or stos mov or ret xor movsb pop xchg jg ljmp jg push cld (bad) sti mov sarb jecxz xchg mov addr16 shlb sub jg daa ja mov mov jg popa lock int and (bad) add sti or (bad) leave out jae xchg and je scas add and cwtl lock shlb ja push mov cltd xchg adc and xchg aaa cmp push arpl inc pop jg js sbb xchg pop andl pop pop and jg xchg push jg lahf (bad) popf mov fbld es mov jmp outsl mov test sub mov add jno xchg sbb add shrb jg daa cli lock pusha dec popf out leave sti test push jg enter aas adc fs mov mov dec and jg iret jns lds mov aas jg sqrtps pop push pop add pop dec cmc ss fidivr mov adc cmpsl dec xor dec mov inc mov inc ljmp das fnstenv dec mov inc pushf (bad) xor divps sub jg out sbb aam outsb jo icebp jg (bad) xor jp xor mov addr16 into lret lds adc adc push mov jg add or jg imul cmpsl inc test sti sub inc jo sbb add cmp aas xor fs xchg mov imul pop ss outsl jg fmul inc (bad) jg mov or sub mov sub outsl call mov adc inc push cmp bsr ja adcb and jmp inc push push imul ja adc jg inc mov mov leave mov dec jg add inc jnp xchg adc cld pop or fidivr sbb (bad) xor mov lds adc rorl sbb dec xor sub mov sbb mov xor test dec mov mov inc in sub pop mov adc stc jg mov or push adc imul nop jg xor cmc (bad) push mov push inc sbb fdivl mov mov outsb data16 movsl jg jnp jbe xchg dec pop jg jo shrb push lock dec push pop push jge pop push cli push sub je out shrl mov (bad) jg fldenv cmp mov (bad) xchg icebp adc lcall xchg dec mov pop jae jg sub or push lods lock cs push jnp repnz sub cmp push jb lods jno pop mov add sub in pop mov enter (bad) in pusha mov mov dec insl mov sbb push in mov cmpsl scas mov mov loope je sahf add push xchg (bad) mov stos mov adc insb nopl daa adc (bad) in jg inc add aas inc insb ljmp jnp mov rcll jg mov les (bad) inc or outsl sbb sub cmpsb ret jg ljmp aas sbb mov fildl and clc mov aad mov jecxz jge loop mov add movl inc and adc inc mov out dec sub jg push int3 xchg inc mov test xor mov lods or out dec in pop mov jg lods mov mov test jg xchg cmp fsts xor pop dec xor inc adc adc aas mov aam mov push scas jg push fimull js push data16 (bad) fisttpll push jg fisttp jg inc andb or (bad) ljmp es adc into sbbl cld jg mov add sti and outsl adc jg ds jmp ret rorb push negl sub jg in hlt mov ss dec loop pushf in sahf lret repnz adc cmpsb movsl adc mov inc cmp pop fisubl xchg call fadd cmpl lea mov popa int3 lcall xchg inc add mov lret shlb das adc cmpsb repz inc jg pop sbb jmp in in dec cmp fwait les and loop jg push push adcl test clc jg aam dec lods xchg mov jg lret cmpsl sbb inc ss js aam jg jl rclb cmp inc les sti mov inc sub fcmovb int3 pop mov adc cmc xchg mov repnz ret xchg ret (bad) cmp bound dec aas pop sub push and scas fdivp cmp adc inc sub and mov fidivr cmpsb xchg aaa dec lds jg in dec dec outsb sbb jg test es les fs dec fwait outsl movsb jmp add outsl insb aam cmp arpl mov lea inc add aam jg pop add (bad) hlt xchg jg fcompl pop (bad) rorb clc jg cmp inc cmpsb xor loope out rcll jg xor fcompl sti push aaa jg jae (bad) fidivrl cli in jmp jg xchg jp (bad) fnstcw cltd dec mov xor jg js jbe xchg xchg xchg mov sbb aas jne mov inc imul jg in pop stos jmp pusha mov inc and dec (bad) cmp loope test aas sti and (bad) mov test jg outsl ljmp mov jg int3 sarl bound jg out push mov add je xchg iret lahf or xor jge scas jg pushl icebp fwait leave jg fnstenv push jg adc jne inc outsl les mov xor push mov cmp inc mov push aas fsubr xor xchg mov jg call dec add (bad) das lret jmp cli jl pop popf std add stc lea in push mov sbb aaa adc shrb pop sbb faddl mov xchg jg in cld arpl push aam incl (bad) push and sbb lods inc adc xor jns (bad) into jg test jg mov dec js and sbb lock sub or or repz jg ja adc jno sbb sub jg push push mov aas das repz push inc leave inc sarb or bswap jg dec popa sbb arpl jg fsubr out cmpsl pusha jmp xchg jbe dec xchg mov mov jp test pop xor or test pushf scas sub pop cmp ds cmpsl cmc sbb mov cwtl jnp jae addr16 (bad) mov adc icebp in aas imul mov mov and pop jp mov or les pop stos sub in mov mov scas aas xchg push inc mov imul mov add (bad) dec or fld mov in leave mov dec (bad) out aad jg mov popf inc jg mov xor xchg bound jg xor loopne push aad dec add cmpsb fwait jbe subl mov dec and push outsl out arpl test xchg sbb cmp sub jg jo jnp xor je out pop vmovdqu sub fsubrs and aas stos mov (bad) dec add sar popf jg push pop and mov jge dec mov lods push or movsb jmp sub fwait incb fistpl jne and enter mov lahf xor cmp inc lret lea rcrb pop scas sbb fldcw dec xor or xor rcr clc fdivrs lock insl cmp nop orb out les xchg imul ret icebp mov outsl repz adc fnstcw jmp or jmp xchg ds cmpsl mov sarb adc mov pushf (bad) mov ss push jnp sti stos js mov fnop dec push cmpsb inc push cwtl adcl jns or lret jne (bad) jg nop lds mov fistpll push jae iret dec pop mov pop inc andb cmp out clc or (bad) bound mov mov popl add dec xchg xchg add sbb add pop lret cltd roll mov xor and cmpsl push pop cli dec or stos in push dec shrb jg or aas push loopne mov mov lds fisttp mov sti arpl in adc jg insb rcrb test add xchg pop scas (bad) dec cmpsl jg push pop inc popl aas cmpsb cmp mov inc arpl (bad) sub sub aad jg mov pop and rcl popf jno loopne push mov add mov sub and jg pop lcall inc aaa fnstenv sbb mov ret (bad) mov scas jg and jg jbe xchg mov sbb lods ret movsl fs jb jl clc adc xchg jo mov inc push fnop stc mov jg stos das imul std push scas jg je pop (bad) ret jg sahf clc push insb fidivl jmp or fildll inc pusha sar mov inc ljmp jg outsb or mov xchg (bad) adc gs imul mov nop push and rcrb jg mov shll int mov lcall addr16 lock xchg jg es sub (bad) fistpll cmp or cmpl dec mov jg adc in xchg fbstp (bad) dec push sarl and rep mov mov mov xchg push test das push rcr add cmp (bad) loopne sbb or repz aas and test inc sub hlt xor mov clc lahf aas push jl push jbe lock addr16 mov and mov hlt mov stos daa xchg (bad) fdivrs xchg adc dec xor fistpl or iret inc (bad) jg idivb loop mov ficoml scas sbb aad shrl mov fcomps addl inc jg or adc fdivp repnz mov mov jg pusha gs xchg xchg aas test lods insb imul cmpl (bad) jg ret xchg sub (bad) or push cli adc data16 jmp fnstcw aas xchg sarl inc add dec xchg lahf and scas or jg loope gs mov cld sarb jg add hlt mov in scas xchg mov fild negb mov pop xchg xchg addr16 xor pop out cmp push jne jg sub dec fcomi in inc scas xor orl je dec sbb out jg ret adc sub mov push mov jg ret outsl sti inc mov (bad) dec and dec sbb ret rorb push or inc mov fidiv pop cli cs jg out lods idivb into fisttpl jno test aad or xor mov test add hlt inc pushl or (bad) push out movb mov jg inc pop ds push fwait lahf sti (bad) and in mov stos popa cli jle cmpl inc jg inc and add outsl xchg scas or jl mov (bad) xor js jnp jg icebp inc sub mov add pop in out jg rcll (bad) push adc cli int3 decb adcl jg add and and scas mov lret lods mov fildll out hlt aad mov les or movsl jg in jp repnz mov movsb push or (bad) dec jg outsb in gs push fstpt leave pop lret jb ljmp or cli imull or jg cltd xor cwtl or jg ficomp xchg pop daa cmp movsl push frstor inc popa sti sti int aaa daa jbe push sub mov push mov jg mov cmc lock rcll pop dec hlt inc jg push and insb add repz dec imul fiadd stc mov cmp daa pop inc int jl push leave out aad xchg add andl and adc shll lret push (bad) sbb jns cmp mov cmpsb jg outsb imul shrb adc jg mov push int push pop inc loopne mov mov inc pop and roll outsb mov stc inc mov pop mov jg mov in fbstp xchg mov sbb cli xor pop jg fdivrl mov int3 fnstsw add divl pop (bad) pop je and lods daa jg cmp popf push mov leave arpl cli xchg push adc in shlb sub ret inc mov mov push cmp ljmp scas ror push dec jnp sarl aas cmp cmp jge scas add out repz loope dec pop into (bad) push rcll fs or out inc addr16 jg andb mov data16 pusha shr sbbl in mov orl daa idivb adc (bad) std add xchg ljmp jg cld cmc add sbb mov xchg mov push arpl fidivr dec (bad) repnz jnp sub pop inc push mov aam mov int3 addl cltd fsubrl push aas sbb test jg (bad) in push mov cmpsb addr16 test mov (bad) dec int (bad) jg cmp sbb push xor jle add test enter fstl sti jnp or and aad push or inc xchg les xchg cmp jae cld ret popf repz icebp or xchg rorl jg,pt arpl push mov aad mov insl inc dec xor mov out popf mov imul xchg in dec (bad) pop push mov divl adc xchg subb sarb mov add pushf sub pop xor int cmp lea or les leave stos add cmc jmp mov xchg into push inc jo inc pusha jecxz sti mov les addr16 (bad) mov xor jg lock sarl sub ret out mov cmc lret xchg sbb sub sub sub pop and aam dec leave nop (bad) movsl int3 test and daa loope jg pop pop ljmp jnp dec loop aas cmp cmp orl sarl fs xchg xchg xor test add nop mov add test or dec add adc adc hlt loopne (bad) and orl call and push mov push lahf xor mov fwait jno and inc jl lahf fidivrl push jle cmpsb or lds or sbb outsl xor jno ficomp xor jg mov ds sarl les scas out jg int enter or cmp subl jp mov std xchg int pusha (bad) cvtps2pd movsl mov mov pop (bad) and jo in pop lcall mov ds push sbbl movsb out aam inc jg lods push mov jg xor push mov and dec dec fldl2t sub mov jbe int3 into push test xlat cmp mov jg mov sub stos les lret jae iret xchg cmp jnp jge popa sub mov aam pop jg leave pop and jg sbb enter xor call arpl shrb rclb jg sbb je rcl aad movsl inc cli loop es mov pop outsl test mov xor jp in mov ds dec fnsave mov iret mov pop loope xor stos mov pop jg cld cmp adc lea and mov and lds push dec jb mov jg ret sub incl sar andb test jmp iret test add int mov or pop jmp inc stos push adc push push dec xor or mov and mov in pop xchg xor jg pop cwtl in dec cmp mov cmp sti xchg repz or es and int3 jg and mov push pop jp mov sbb jg mov or popa fcoml jl test xchg dec sub scas push xor fdivrs dec xchg and std sbb mov aam dec push aas insb sub es dec outsl int3 addr16 dec imul mov dec push xchg loope es inc push jg test repnz divl jb inc inc cmpsb add jg cmpsl imul push sarl loopne sbb notl aam sub pop inc jg test lock in sbb fldt mov inc cmpsb adc (bad) out inc fsubrl xchg insl dec loop or outsl or loop xor dec lods xor lds mov add lret adc or in (bad) icebp xor js inc jl inc add pop int3 adc mov or sub test add pop and test cld mov fldcw cmp jg sub adc mov push xor movsl inc fwait lods xor das jg fsubs add jg or jo das ss mov js adc xchg (bad) add jecxz lahf jg xor lds nop popf jg jns lcall push and pop sarl mov stc dec popa pop adc std push jg stos out ret push les push repz xchg xor sahf inc dec mov mov popa mov inc les xor subb mov das aas js push add jecxz mov sbb std (bad) icebp stc jg outsb insb mov cli lahf aaa ret xor or jbe sub mov pushf sbbl bound xor imul movsl jg mov dec inc jg je sub jg ds pop lods mov in bound loop jg cld or mov xor jmp adc push jg inc cli pop subl lock inc imul xchg inc pop cmpsb cmp jg xor and jg std or inc jg sar lret pop leave sub and int3 (bad) insl (bad) (bad) (bad) popa xchg mov xchg dec mov inc test mov mov mov idiv dec loop sub cmpsb aam into push hlt xor inc (bad) sti sbb int3 outsl fwait in push enter je push mov vmread inc dec adc in test mov popa call (bad) jg pusha rol (bad) out repnz jg jno lret jp push inc insb mov jg or and sub jg enter es jg push ja ss cmpsl adc cltd jg hlt nopl lods sub cs in inc mov inc push jg negl rol pop pusha mov or pop fstpt push add inc dec jg xchg push cmp inc jns int and or negl jns inc addl xchg push mov dec mov enter adc xchg pop jb mov or std push add xor mov cmp dec pop das (bad) cmp cwtl in dec and (bad) xor jno rcll cmpsl pop pusha stos pushf mov add mov ja fwait xor scas xor mov test push sub add mov dec ljmp pop mov mov stos mov adc push inc icebp aaa jae dec sub rcll std jg mov ret push test stos repz jl or adc int3 andb insb clc add inc push dec jg add jns jg push jl sarb or add or xor into in fnop mov dec jno adc cmp mov inc xor pusha iret jae std test push aaa aas xor mov dec ficompl jg push add out sarb cltd (bad) pop adc inc dec jg sub das loope les jbe cs jg or (bad) lods mov xchg iret cmp aad sub inc pop mov les jg lcall jg and scas mov dec pop popf aam subl nop and or jg mov mov pop pop fs dec test notl (bad) jg call mov int or sarl mov idiv ljmp fmull ss mov add jmp jg (bad) in push fs cmpl fnstenv std sarl gs mov (bad) and inc cmc sahf jg cli ds orl lds push mov push repnz outsb pop or jg pusha ds pop dec mov stos jg (bad) xchg adc jg stc icebp inc cmc cmpsl mov jge aaa jne pop (bad) xor loop dec xchg mov daa ljmp mov loope push jge (bad) jg jmp out cltd ds cmpsl arpl popf cmpsl inc adc icebp xchg add jg add aas adc xchg cltd mov mov ss (bad) pop in inc pusha jg xchg addr16 inc inc fnstenv into (bad) add jg xor jns push das mov add jne inc xchg pop or imul repz aaa mov test stos mov stos pop fisubr mov mov adc pop adc pop pop and xor mov sub jg outsl xor cmp mov lock xchg dec enter pop jecxz cmp jg shlb sub fld jo ret push in sarl jmp jl mov mov inc outsl scas fldcw jg and push jg stos jl inc push fmuls test mov push rorl jmp lret pop mov enter xor xorl inc cli xchg int3 ljmp pop push hlt scas dec movsb jle pushf addr16 add xchg mov es inc lods fwait outsb push fs stc push ror (bad) idiv pavgw mov xchg mov leave addr16 fiaddl fstps pop aaa lds mov pop mov cmp lret cmpsl jle sti shl push mov aas jne mov arpl int3 and jo add mov xchg push xor pop lret pop jg call cwtl lahf jg (bad) ljmp lret popf enter push mov mov dec mov int3 imul les lret daa push sti out sahf sarb sbb pop hlt push adc jg push inc loope adc fisttpl loop dec fstpl xchg inc pop jg ffreep ja inc pushl stc inc arpl jg cmp out cmc push push ja jg inc mov divl dec mov in in sbb jg or adcb jle push in pop imul scas test call mov iret xchg lret jg stos cld mov mov pop jb repz insl jg je pushf out xchg aas jno cli lods fwait cmp dec sub inc into jl jp adc pop fdivr and aad loop add fild movsb loopne shrl cmp add xchg imul mov push mov stc push jae mov jbe in inc dec int cmp inc pushf jg push arpl aam adc and jg jmp (bad) dec mov or jg mov (bad) in (bad) mov push testb pop addl cmp mov enter cwtl push gs cmp adc popa xlat xchg jg repz dec sbb scas adc mov aas stc dec inc mov inc jo xor fbld add jbe cld loope aad jg push sbb bnd add js mov sub jp cmc imul jg pop (bad) fnop xchg mov mov jae mov push fninit out pop mov in arpl mov or scas or jg sub mov xorb sub out (bad) icebp lahf stos aas mov jne inc lock shrb andl lret out cmp sti outsl mov jg jo inc fldl xor test dec push aam cmp fcoms je jg inc or cmpsl mov movsl test push xchg push loop push jo mov cmp or jg,pn xor aaa jg out mov jg push lret repz pop pop aas cmp push icebp push lds das jg mov rclb jg ljmp jo dec jg cli jbe outsl addr16 jg mov loope and (bad) mov inc adc clc mov dec popf add jg (bad) pop mov (bad) xor scas mov pop jg push loopne xchg sub test lock dec pop outsl aaa jecxz test scas jg sub rcr xor or jg popa lods std mov js jg push in and jg or push movsl jno testb hlt or dec pop into mov push ds push imul add sti jnp gs test mull lcall aad cld sbb lahf mov das mov xor dec mov neg jg ret rclb mov xchg cmpsb jle cwtl mov sub or push xchg std jnp rcll js xchg xlat pop test mov pop adc jmp jg sub sbbl jg bswap push scas popf out xchg jg ja mov mov jnp xor xchg aas inc fsubr popl out aad pop inc dec xchg loope cmp popf jg cmp push xchg cmpsl fnstcw das cld test inc sub pop or rorb push sub mov test lret sbb mov lea jno repz jns jl jp pop jg shll insl inc stos jne xchg fwait popa sbbl shr dec mov push mov clc pop dec jg lds adc cltd stos sarb xchg stos out xor sub add jg push rcrb lahf sti jg std push bound outsl pop imul les jns dec nop sub cmp lock js out inc popf jg or and sbb daa loop enter cmpsl add aam lods rolb push jecxz jg pop lcall std mov pop repnz mov cs cwtl cmp mov mov mov (bad) mov jg es mov sbbl cld add mov fmulp out (bad) btr mov cmp jg adc add (bad) mov or les loopne mov and test fildll lods jg,pt pop mov aad je mov sarl inc (bad) repz addr16 jg or or add rcrb mov out fmull mov fsubrs icebp insl inc ret mov hlt imul xor dec xlat add jg (bad) mov mov push int adc pusha mov mov cwtl jg pop mov movsl jg lret push call jg mov ljmp xchg rolb mov xlat dec cmp xchg rcrl xchg sbb lret adc fstl ljmp repnz mov cmp or cmpl add xchg fwait mov test and mov jg pop push push push lods fnop aas lock push adc sub sbb pushf jnp popa cs push jg mov clc pusha test (bad) jg jns enter xchg jg addr16 xchg ret and seta (bad) jne movsb or mov scas adcl test fstl es rclb pop enter push jg int3 cltd push pop (bad) in cmp dec scas xor popa popf ss bound js cmp xlat ja gs stc pop pop dec test jg cmp xor mov mov jae fdivr addr16 pop (bad) push adc pop jg andb ds jg je lods int mov pushf ret jbe mov mov loopne test and pop bound mov xchg in aas xchg in dec idiv jg rorl ret cmp movq stos sub jg add and jle inc cli push or jg scas pop insb negl jp lret ds aaa jg dec iret js jg stos mov pop lret (bad) mov les ljmp push js in jg mov mov and sarl mov lret lahf jg icebp mov repz jle sub test jg enter adc into mov inc xlat cmp cmp add push sbb (bad) mov cmp ret dec rorl in outsl pop xor aad mov addb sbb mov add add cli arpl jg jmp idivl (bad) mov mov jg pop into inc call mov jg add in sub xchg dec ds mov xorb and mov jg mov insb dec into cmp cwtl pop mov ds and push dec jg sbb sbb push movsl xchg fs inc add (bad) adc leave jno jp sarb ljmp mov add and sub push and xchg fcompl stos and dec fs call lods dec push vpshufhw incl hlt push dec icebp fadd insl pop cwtl inc inc jg mov gs sbb push cmp pop jb jno repz add daa imul adc mov pop mov sarb popf ja push jg out jne mov stc mull jno cltd xor jmp inc sahf popf lcall jg inc mov pushf mov movsl in inc int3 scas push jg test or mov out fisubr jg verw hlt pop sbb dec xchg adc dec dec adc jg (bad) bnd mov out stos test pop sahf mov xor mov jg insl add fwait mov fstpl mov movsl jns cld pop jmp loop fs out pop mov jg jns leave gs pop cmp test mov mov pop icebp jg push jge out sidtl pop fist mov xchg and (bad) ds int3 or mov lahf dec insb sarl jecxz jg inc mov fidivrl pop arpl mov js add mov sub or sar roll scas call xorb mov mov neg fnstenv xchg sub shll mov push mov and aas inc mov pop ja test cmp xor mov rorl jne mov inc adc call mov mov cmpb mov out push jg lds xor inc jp sbb xlat mov push mov (bad) jg loope pop jge jg popa test or int push shrb jg xchg les stc jecxz sbb jno cmp dec divl test mov leave daa inc and jg ror lods lret cmc adcb (bad) out nop pushf gs sub mov cmp sub cmp mov notl shrl out push ja sub mov mov jg inc jge in xlat (bad) pop pop lods jg es mov js (bad) pop or aas cli iret ror leave dec jg in mov xor cltd mov (bad) push push jg push push jp jle jg inc (bad) repnz (bad) call pop imul jg (bad) xchg pop sub xchg sub inc aam cmpb inc push jg xchg or jg sbb jg mov inc jl fnsave mov addr16 mov pop repz shlb ret aaa (bad) int jg lea cwtl dec mov mov insb cmp xchg lods jg jl adc or xchg xlat jb mov cmpsb cmp and xchg and jg adc ja test add addr16 imul jle or inc (bad) idivl fldl call bound jg cmp jge outsl xchg jg xor or cmp fadds mov inc pop dec push cmp push jbe lods ljmp jne jle sub div sbb or or xchg jnp fdivr pop mov add out fisubl xchg fs fwait jne lret jg aaa pop adc xchg jecxz xor pop mov jle jp in jg or or out cmp xchg jg sar imul js loopne pop pop or or and aad xor mov gs and cli sub scas daa jae push dec lods pop insb pop adc mov inc jg fwait cmovnp or pop mov or jg xor xchg mov out add inc notl push pop fstl or cmc inc pop xor pop (bad) lcall ret loopne fisttp loope (bad) fidivl push xchg stos fcomps das sbb pop jg mov adc jg xchg stos lahf xchg fwait xor pop jg jl out inc jg mov insb scas adc popa push mov rcll mov loop jge inc jae inc sbb xchg mov call stos sbb jae mov pop jg jne pusha push fs out jg mov mov dec pop clc inc or jge insb push scas mov cmpsl adc cmova jg mov sub mov jg sub icebp cmpsb jg fcmovb mov and mov in pop jg xchg or pusha std dec jg jnp insb inc (bad) lods ficoml loop jg scas sub push inc int3 out jg adc pop fsubr cmpsb das and mov fwait adcl fldenv imulb cs dec mull mov ja jbe mov sahf popa cltd and icebp jg jns or nop outsl mov inc lods fwait pop outsl in std sub dec aas xchg push cld (bad) rolb xor xor (bad) mov pusha mov jge pop in pop stos dec adc out (bad) test cmp sbbl jg in pcmpeqd mov stos outsl sbb rolb das xchg xchg sub inc mov stos dec insb pop pushl add mov stc jl gs jmp jg jns outsb popf fwait mov (bad) icebp clc sub or xorl mov xor or add fdivrs add stc xchg dec xchg xchg popf mov lcall fstpt push out pop sub add sti fnstsw sub mov xchg push cld add cmc mov jg jmp imul enter shll and jg fsubrs pop jg pop dec or ljmp add inc dec loope jg inc jecxz scas add push jg popf xor int dec xchg clc mov js mov mov lea jg push sub jb or shrl push pop inc arpl jne daa (bad) out sti inc jg inc movsl mov pusha mov cld ret inc and lret or mov push push js ret pop jge scas push jg mov stos mov dec ja lahf cmp and push mov inc scas mov pop sub sbb std mov pop loope (bad) in inc bound or mov shlb mov cwtl push dec fisttp (bad) lea (bad) jge cmp and into jg fadd popa fs out jg insl outsl mov mov add fnstcw mov pop and pop and mov cmpsl ds dec andnps mov rcr imull (bad) jg gs sbb xchg mov mov shll loope iret pusha lcall and js push mov jae sbb sub rolb mov xchg mov lods movsl dec dec inc and mov addr16 jnp test or push push sti pop daa (bad) std aas mov mov mov testl push cmp (bad) mov or sbb lret xor xor adc fsubrl cld test fnstsw rorl mov mov int3 adc mov stc add jge jmp jg inc push dec sbb aam popa (bad) les fsubl data16 mov adc cs popf (bad) repz mulb imull cmp dec leave aaa mov xor xchg test test rorl sarl or adcl sbb cmp add sub jg pushf into push imul in jg mov int jg and cmc jbe push nopl jae roll lock idivb pushf sbb fnstsw jg mov push mov push out add outsb jae pop pop fwait in outsl addr16 mov sbb mov sub int les rorl bound pop adc fwait in mov xorb inc dec (bad) (bad) jg movsl sti js add cmpl mov add xor stos sub jg movsb test jle and test rcl xlat aas cmp and pop mov push push icebp (bad) mov add xchg or mov out inc and hlt jg inc fs daa jnp jg test jno jg push arpl mov mov pop cmc pop xchg mov leave out xchg popf movsb jnp movl dec push mov jg push std mov stos mov add rclb (bad) sarb ss inc xchg sub jg add in push mov out dec movsl dec cs (bad) jbe stc inc add stos test pop cli in jecxz aam jg cmpsl xor les jnp mov fwait inc inc lcall inc test insb out test scas outsb xchg pop fildll inc xchg iret xchg mov push cmp je mov fs push imul jg and add jg sahf xchg jg (bad) and jg ss mov sub cli in mov jg cld in hlt pop test mov mov push clc adc xchg or cmpsl jg push mov and add jnp lods hlt jo sub jp cmp lds push xchg jecxz xchg mov jb stc xor faddl lock addl jg repnz insl stc sarb insb add loopne inc and cmp pop int jle xchg into inc dec mov push stos mov xchg je stos ljmp xor stc stos (bad) xchg push dec jae xchg stc cli xor add fldenv repz xchg xor fisubr mov push iret dec mov sbb mov call lock jl mov ret mov out lds lcall jl push cmp jg mov jle (bad) std push sti mov bnd jo mov inc dec mov cs loop sbb xor jg fsubrl inc imull out jbe jg fild lock mov lods pop loope jbe mov mov stos (bad) adc ret jmp inc xor in mov sarl push (bad) in add jg pusha mov jg and cmp rcr in mov test ret bound xor push jg xchg adc repz xor cmc addr16 (bad) mov nop fmull rorl inc aas sarb dec pop lahf imul decb les repz outsl ljmp pop and cmc push fidivrl call sub xor inc and pop xchg outsb push jg add and aas es xchg pop arpl jg mov loope push xchg mov ret mov jg adc sbb mov pop pusha inc aad mov sti sbb push loope jnp or mov ja popf jg cmp into nop lds sbb call pop div or mov jo lods sahf les clc mov insb inc dec shll jno imul je push int jo in cmc xor test sbb jg mov inc inc lret cmp jg or push aas fmuls dec fnsave inc dec rclb popf xor add (bad) mov movsl mov ds pop call sub nopl in jg mov fcomip jg mov sbb push sti cmp mov sub lcall outsl inc mov lds out push fcomps sbb pop cmp dec mov jmp inc push sub addl movsb out mov pop pop push push jg xor stc and jo jae (bad) clc (bad) loopne aas push jg adc cwtl test mov loope movsb xchg sahf into inc (bad) jg daa pop pusha jmp cwtl cmp les lahf stc lret jg and int3 jg mov loope jg cmp lock sarl mov ja pop dec push cmp outsb mov pop mov andl aad push fcmovne pop aas sarb adc xchg mov pop int xchg lea mov dec pop bound divl stos lret push scas pop mov add inc xchg nop jmp and sarl add pop pop jg insl mov cmpsb jg bound iret lea sarb add testl stos leave test adc mov mov pusha push jg leave sbb jle pop mov ds fnstsw or xchg ds aad in dec hlt mov fidivr ds dec pop pop mov mov aas enter add dec into fidivrl pop in cmp outsb popl and inc jbe js sbb pop mov pop hlt cwtl inc ss jb cmp notl jg test xchg xor mov scas dec cs jle (bad) mov fisttpl jg xchg add sbb es pop movaps cmp into test sbb xchg jg cli (bad) sub jg call rclb dec cmpsl and jae cmp rolb sub sub cs aaa push jmp jmp adc (bad) stos dec xlat xor loope jmp push fidivrl mov adc lock addr16 xchg movsl mov cmpsb imul lods mov and adc test or jg pop push mov out xor jg sti (bad) fs bound in enter jg loopne jb movsb jbe jg outsb mov adc sbb test daa adc aaa enter popa pop inc dec std mov mov sbb push sub fbld xor ds in cwtl daa cli dec popa pop loop in dec test mov shlb imul jg jne rclb aam cld jmp in inc jg out movsl inc sbb or je cwtl dec mov add mov push jecxz fwait cwtl sbb push push imull out mov dec or sbb enter out dec jg jne aas xchg je jg fs pop cmp mov repnz mov adc daa das cmp dec aaa mov sbb xor sti or xor loopne,pn js cmp pop sbb ret movsl jg insl aad push pop nop lea ljmp aas cmpsb test pop addr16 jg movsl xor xchg aad test dec add jb lcall mov add jg movsl test jg fstl add or jg fwait cmove mov ds hlt cmc push sub adc iret add dec data16 cs es shrb sub adc or jg cmp loop fnstcw popa jecxz pop xchg int mov (bad) test mov mov aad dec xor mov and cld jns jae stc stc ljmp xor add movsb jmp add cmp test jg in insb add (bad) jg or sbb lds mov cld push sbb les data16 aas jno add fdiv iret in push ss jg adc sbb ret inc pushf mov cs mov sub lock dec scas addr16 and dec mov push sarb xor (bad) loop push adc cmp outsl arpl jg xor dec (bad) cmc repnz inc adc in std mov je ss and outsl mov adcl or mov jg mov popa clc jg push adc (bad) lret mov loop lret xchg jg dec xorl mov test cwtl insb jg hlt fildll or pop jg sti dec inc and mov inc mov and fdivrl sarb add std push daa stos jg cli lds jg aas mov stc sbb jg cmp lret mov cmpsb lea arpl call lods jo repz mov int3 push adc stos nop mov dec negb jbe jg loop (bad) js pop and adc adc fiaddl fstpt or push xor fdivrl jg rorb add fldcw sbb js pushf sahf jg arpl xchg jg mov pop psraw in jg sti sahf adc fistpll (bad) stos outsl and sub mov pop dec das fs jg (bad) and nop icebp and int push dec xor or cltd sub dec jg popf jb mov outsb mov cmp jg fwait std pop add and (bad) decb sub fnstsw lds add (bad) jp mov cwtl push out gs xor dec das fwait mov mov jg mov pop add int pop add mov divl jbe dec lahf sub lods dec popf jg fldcw and sti xlat pop push pusha pop xchg xchg hlt mov jg jl push sub lea test sbb arpl dec hlt jg jne sahf clc dec xchg jg dec and pop xchg sarb rcrb sahf (bad) fisttp dec pop pop pop inc xchg (bad) jg push stos cmp jae,pn jmp push (bad) jg pop mov xchg pop fnstsw ret lret (bad) rcrb ficoml dec loopne or push imul in add lahf scas loope push mov aas dec or xor push mov repz adc fnstcw xchg mov mov ror jg adc pusha leave dec xchg jbe jle mov or nop mov fdiv pop out (bad) ss push mov and cmpsl (bad) stos pop fucom sarb in aas jg movsb dec ja sub mov jge (bad) lcall loopne arpl sbb jg mov inc push jg scas jo dec lds outsl shll fadds push adc inc jl push sub mov add pop inc pop adc jo sbb cmp mov push lea popf outsl ljmp stc adc pop inc fnop mov sub sbb mov jle jle pushf or sahf pop insb stc xor sbb mov popa pop pop js insl call ficomp dec cmpsl (bad) mov push je test insl es (bad) (bad) icebp push push cmc dec jg je pop iret les sbb cltd fwait add jle pop sub sub cmp pop outsb dec push cmp jnp sbb loope or inc pop data16 loop push jg add inc sub scas fwait lea leave pop jecxz cmp lret add stos mov jo jmp push test lods (bad) xor cmp inc (bad) push js lret jg or pop mov xchg call pop and inc das jbe jne adc dec dec jge fdivs jmp push lcall inc adc jg stos pop sbb inc fisubr mov imul (bad) and imul mov jg xor xchg mov addr16 cmp idivb push cltd imul push jg jno inc adc dec jg scas mov in lods hlt divl xchg jg cmp out jg rorb xor jle sub pop lock pop jo push or loope lcall pushw outsl popf mov loopne xchg jg jmp jle insl out or jecxz cwtl xor or (bad) dec cltd xchg pop idivb mov add loopne xchg mov aad jbe sub pusha imul cltd (bad) xchg jg mov sbb adc sub sbb inc mov fstl pop ret mov sub fcmovbe cmovb fidiv jg popa rcrb xchg push (bad) jg pop sarb setl mov push fsubs scas jecxz pop mov and test inc pop xor jae insl push xchg adc jg jle cmp inc icebp cmp scas mov adc js dec add pop pop dec xchg push jg in or jg in lahf push (bad) inc or leave inc push xchg fsubr cmpsl inc (bad) jg pop gs dec cmp (bad) (bad) or sub pushf mov arpl aad cmp stc push ficomp mov repz mov je adc js inc int3 lock out scas (bad) push nop fwait fs pop ret mov pop xchg in or jg push sbb int mov aad fdivl or test push aas jg pusha gs in xchg mov addl add cmpb les out jne jg nop (bad) imul fs fwait pop mov pop mov mov fldt xchg repnz sub addl shrb sub push sub pop mov shrb push inc jae ljmp fcmovnb insl inc sbb inc pop xorl inc or rclb jg and xchg lret out jg cwtl pop mov push iret jne cmp (bad) mov test inc mov repz (bad) inc add rorb out das dec mov dec jne xchg scas pop sbb bound (bad) lahf movsl dec push inc jo fnop cwtl pop xchg das xchg cmp scas sbb add outsl or pop imul insl in sbb pop fldcw dec lret enter scas push aas adc pusha push mov sbb mov lods xchg (bad) cmp mov and in jg inc adc dec cwtl repnz scas cmpsl mov sbb lods pop mov outsl (bad) lea jg leave sub inc inc dec inc jg push mov sbb in sbb push xchg inc jg ficoml fsubrs aaa mov das pop call (bad) jg or mov push push jae stc loope cmp adc jg test inc test xchg hlt jp inc (bad) xor push xor dec pop push mov out outsl test mov push inc std jmp jg testl pop aam mov jg dec loope push lret clc fdivl lods pop adc dec or pushf xchg jg pop push ljmp insl repz jg in inc push xor loopne jg pop add lahf dec inc jns imul nop rol addr16 jo lods daa je roll add aam scas jg ja arpl mov pop aas mov lock leave out and cmpl or pop dec pop pop mov jg pop or push outsl mov cmp jg out pop ret out int3 jo cmpsb add mov (bad) mov jmp and ret jg aam ss mov mov xor mul inc mov popa jg loop inc repz mov push push sub out xchg sahf push fbstp cltd pop rcr push pop loop sbb mov mov cmp orl aaa js bound adc and xchg jg in jge pop dec fs pop cmpb jg (bad) in mov test mul pop pop (bad) mov dec int3 add fdivrl push sbb das pop pop fdivp divb insl xchg fildl jbe cltd inc inc mov push scas (bad) mov lock aas movsl adc jg addb jg dec aam adc lds js mov dec mov pop inc scas inc xchg push pop and loop inc (bad) insb mov add cmpsb jle mov xchg test push cld xchg jg push mov pop jg xor mov xchg pop and xor out jge mov jg cmp add jg loopne fcoms sbb bound add aas sbb mov cltd arpl mov xchg sub inc pop push subb adc cmp dec jge ret or daa test mov inc and loopne jg test into cmc mov add xor arpl jle cmpsb sub xor sbb xchg movb pusha jg pop xor jb ret mov loopne jge mov test dec sub xchg shlb xchg mov loopne scas jne add mov dec pusha daa cltd jo not inc adc mov in jg sub call sti adc xor test mov cmpsb pop rcrb js inc jg cmc (bad) popf pop add test ret mov mov cwtl pop fnstcw sti cltd js sarb sbb xor cmc out inc pop sub mov aad es and and push xchg in jg mov test imul and xor xlat jg sbb or cli sbb fisubrl (bad) xchg inc push pop inc mov pop (bad) jnp jg mov cli shll mov mov sahf in scas sub dec lret imul jg les and ret adc frstor outsb aam jno fistpll jg into sbb and lods movntq out popa sub lods dec in into jae sbb insb add ret jge out or push fbstp fstps jecxz mov xor xor subl mov inc inc jge pop fs pusha sarl add call xchg fcomps imull sub jo xor or cmpsb mov ficom ds mov push bound stos lret enter loopne jg ljmp jg leave aad add jg clc xor jg stos sbb out mov dec jg ja mov lds mov mov jg jmp sbb hlt jmp jp es jns mov add cmpsb jmp leave into lahf popl inc insb xchg jg xor jnp scas (bad) mov aas nop pop xchg cmpsl loop data16 adc cmp stos jg cmp js cmpsb mov adc sti mov je mov push pop or adcb stc aas mov jnp dec cmpsl movsb (bad) jne add bnd out sub rcrb jg xchg daa inc jb iret adc or xchg loop mov lods xchg cmp loope jns jg inc test pop cmp and mov xchg fwait pop mov repnz (bad) fs xor sarl movsb or pop idivb adc mov hlt aam jl push (bad) jg pushf cli sbb jg (bad) fildll dec push jo jg ret imul sub test or lea pop xchg xchg out fdivs inc ljmp adc sbb push push lahf cmp cmp int movsl insl in jg pop adc push mov leave xchg dec inc dec cs insb mov outsb in sahf lods push dec fwait ja sar nop jo out mov xorps scas or and ljmp jg jbe je mov addr16 repnz cmp add inc cmp lret orl dec jge jae out js jg arpl mov cld scas pop mov (bad) pop or std nop cmpsl pop leave jg lods inc pop pop cmc fistpll hlt mov push push fsubr jg xor xchg sbb fs mov frstor adc outsb fdivs mov loopne sti andl popa aas sbb shl aaa mull jg,pn dec pusha stc xor sub push mov in pop jl inc dec xor xor cmp sarb (bad) jp mov pop arpl js (bad) push pop mov sbb mov inc mov test cwtl pop cmp push (bad) stc push jg aaa (bad) mov (bad) mov call ret jne pop cmpsb int mov es inc (bad) jl jg jb test sub into jg incl rcll lret mov pop cli (bad) push out inc cmp inc sub lahf in (bad) mov daa xor push push pop subb add pop adc repz das jg loop xchg dec cmp fstpt xor lods adc addr16 fild lcall mov cwtl mov pop inc cmp xor rcl jg sbb pop stos shlb xchg dec mov add mov imul test pop push js,pt jne mov mov jb out rcrl jo push int3 js mov sub loopne (bad) ror das jp mov cmp jg jmp inc call in pinsrw mov jg mulb stc jg js inc push ret cmp jg mov and (bad) aas cltd shrl xchg dec adc push imull sarb dec push and jg nop sbb test scas cmpsl rcr rcrb mov fistp pop in xor jae sti adc or dec popa jp inc lret jg adc adc aaa shlb sbb jg sahf adc (bad) repz jg lret addl dec in pop sahf mov mov push sbbl daa popf shl fstpt mov pop out fidivr cld dec jmp and jle ret push arpl lret jg push dec dec (bad) stc shrl stc jg xchg mov jg xchg ficom daa neg jg cmpsb cmp shufps loopne test sbb jae outsl mov popl test mov adc jg jbe add mov pop (bad) mov cmp jg into (bad) pop js data16 movsb jmp or jg cld lret inc sbb add fisttp mov jae les or ret and push jg xor loope or out ljmp push cmp cltd das or aas push add lea mov cmp aas dec fidivrl inc repnz jg sub pop dec inc (bad) jg icebp mov jno mov jg mov push enter pop pop add jmp in iret and sbb inc xchg int jg cmp push sub lods mov into movsl pop add repz in sub jae jns pusha inc cwtl jg cltd lret test jle push int stos pop cmp add xlat fmuls mov jg lahf stc fistpl enter stos xor mov sub fnstsw push adc xchg jg jmp xlat test outsb lret fs push jg nop or stc jne fistp inc aas push sub ss scas inc cwtl pop outsl clc lods push mov jg arpl push push add xchg mov cmp mov loop mull sbb xor fisubrl mov mov mov xor sarb xchg dec cli ljmp mov add inc lahf sbb mov subb and jg outsl faddl jp inc std jg es jecxz aad test and arpl enter lea and jg or cmp mov jg clc lcall fstpt scas test mov xchg out cmc fnsave cmp imul out fistpll xor cmpsb cmp pop xor cld jg inc cwtl lds pop jp rcll stos push jg lods gs xor scas std fs test mov outsb lcall clc hlt cmpl sbb jg sub in mulb jg or int3 push xchg das and pop scas jg jns pop idiv inc aaa jg push or and loopne andb pop mov dec mov sbb pop cmp fstpt jne cli lock mov jg bound jbe push mov jg arpl daa pop mov divl add sub jecxz inc xchg fdivrl jb lcall fcomps out jne js aas mov (bad) and aas push aas (bad) pop test sbb jg push gs rcl and jg rcrb sbb mov movsb add inc jl outsb cmc and adc jmp cmp mov push popa or jg mov xchg jge sub les adc mov lods jg jbe sarl and jg push jns mov dec jg addr16 pop aam pop cmpsl jg loope jmp (bad) mov mov jne je mov cltd jg pop push xchg jae (bad) mov xor iret lods sbb ret jp loopne sbb icebp out pop (bad) insb mov inc inc jo repnz sarl adc nop inc jg (bad) iret and imul adc sbb decl push jg and lea pop mov js outsl loop add mov jmp jbe xchg and ljmp scas jecxz les xchg addr16 push sbb mov pop mov inc push mov jg,pt add dec stos jg dec sbb xchg ss aaa jg xor je clc in or mul movsl sbb sbb je jno popf add gs lcall mov xlat pop outsl pop cmp jns test sti mov leave push test les subb mov inc jb xchg mov fimul adc stos fs add mov inc mov in aas scas nop sbb inc push shrb push jo inc jg and xor sbb mov arpl test cmpsl fisub jg popa int pop lcall lock lret mov xchg insb xor imul mov push cmp scas adc push mov xor nop mov push int and pop adc in dec sbb mov jge outsl inc into aad mov hlt adc sahf sbbl jg (bad) sub mov outsl icebp inc pop jae aas jnp dec lret mov mov mov inc push cmpsb imul mov ds fs das addl ffree sti jg add mov aas push cmp lahf sub data16 and fsub pop mov pop (bad) xchg fwait cli in sbb mov mov (bad) push dec mov ja fimull mov arpl subl jle xor loopne jp and and out rcll (bad) cmp jg xchg sbbl jl pop sbb andl das inc incl popa pushf mov xor jae popf xchg ljmp js jecxz cli push cmc mov in jp mov mov idivb into pop pop popa es mov rcrb fcmovnb out add xor lret fsub scas addr16 les popa enter mov movq mov xchg imul (bad) (bad) fstps out xchg mov in pop sar (bad) xor jmp mov loope adc mov add xchg add xchg jl push sbb sar pusha inc jg inc xor and (bad) icebp jg mov bound xor xor pusha dec push hlt jg jecxz sbb aas lahf xchg repnz roll xchg pusha test leave mov lret lds sbb push add dec xor ja in lea aas punpckldq jo xorl (bad) cmpsb (bad) adc push push pop mov repnz shrb pushf aad rorl xor mov push gs cmpsl lea int mov les inc push mov sub fstps jae insl xor xor push pop int arpl (bad) jg mov add lods cld jg ljmp pop jnp jmp cmp loop cmp xchg ja outsb sar mov lock aaa xor lret pop sbb xchg imul cwtl jo in (bad) jle sub call fwait aas outsb loop mov out mov hlt loopne mov pop xchg je or lods pop jg sub adc decl mov ss jg push mov jb jl jbe and ljmp (bad) mov loopne push xor lahf jg jmp (bad) scas inc nop sarb sub insl xlat dec data16 jg addr16 jp lea jg popa mov stos ja mov push sub jg outsl (bad) in lock adc mov negl fwait xchg stos outsl jg (bad) leave push int3 push gs jg (bad) lahf mov pop jg in push test iret jb xor pop sti cld dec mov fisubl dec lds xchg pop fstpt push outsl lods fwait pop imul js popa stos dec cmpsl mov inc push mov hlt xchg inc push jg and cmp cmc adc aas rcll adc out inc dec js push mov fwait pop outsl adc inc jmp lret add sub in pop adc push jg mov test inc int3 inc jns outsl pop or cmpl mov popf mov imul dec fidivl jae inc loope idivl (bad) mov xchg adc jg dec jnp mov (bad) jmp out push jb xchg pop mov popf jg xor dec mov pop and adc in inc xchg mov jne jg push (bad) dec inc enter test outsl jns cmp inc jmp imul and xchg (bad) sub jne dec pop scas mov (bad) jg adc imul and hlt jg push in fidivr jo lock out inc push fs lret test push or cmp in lods jg push or fwait in test mov mov inc sbb inc xor cmpl add jmp aas std sub sbb xor dec add arpl jo pop xchg cli mov mov push fwait and mov out mov lret xlat cmpsl pusha (bad) mov push inc andb mov jg inc mov xor fnstsw pop scas stos dec lock jg int3 and mov lock push sub mov mov and xchg cmp pushf sti jg mov mov mov scas jp add pop mov xchg pop push pop mov stos pop das in jg pusha sarl call (bad) lods pop mov sbb pusha lahf mov mov shrl inc negl inc push stos aad add xchg cmp in xlat in and lret push std je dec mov aas jbe cmp dec fistl nop jg cmp or inc cwtl (bad) mov jg cmpsl mov mov xchg jnp aaa orb movsb pand rcll scas (bad) xchg push jg jp (bad) jb mov and xorl and aaa ja add sbb outsl sbb inc inc mov sub xor in adc lods aad xchg outsb enter ret addr16 fdivrp call push mov jmp rcrb xchg (bad) in push jg push mov call or test aam std (bad) cmp mov or repnz mov adc xchg inc cmp into sbb inc and (bad) jg jo xchg pop ret xchg inc jg xorb cmp outsl lcall dec into fdivl nop dec sub sub adc fisttp jg mov cmp jmp outsl pusha mov out into jg movsl or push test adc incl inc outsl lahf mov in adc lods adc mov rcll or jmp mov push out pop push jg sub in add dec loope jg sarb test es movsb icebp in out xchg jg inc frstor dec movl push mov repz movsl (bad) push fnstenv and push fidiv jmp and dec scas push (bad) std lret rcrb subb mov icebp addr16 jbe daa jg cmp xor mov jg (bad) push (bad) xchg out mov dec int3 xor push pushf xchg (bad) jle pop jg popf test jg shlb imul fnstcw das or or add loope jno mov leave pop push adc clc jle push subl pop jg gs arpl jecxz jl push mov jg,pt add in out cmpsb mov add adc jecxz or dec insl push jg and idivl movsl fisttpll stos (bad) ja jle mov loope inc sti sbbb repnz cwtl xor loope xor fidivrl shr inc gs jg add mov jg insb inc popa insl pop mov mov repnz inc mov lcall insl lahf loopne (bad) cmp push dec sarl push jl push jg inc jb mov jmp jg pop inc jne or nop inc mov cmpl sti pop mov aas flds sub scas jg push jp xor fidiv outsl (bad) fisubrl lret repnz push xchg insl push pop dec (bad) jno mov fmuls sbb idivl inc xchg jae cmp leave cmp jg test cmpsl int push cltd pop (bad) leave xchg mov scas repz pop sub mov jl out lret jg lahf add sub dec aaa jg sbb mov repnz test push cmpsb push ljmp dec movsl mov int3 jg push enter jl xorl and dec test pushf lods mov rclb mov nop cwtl cmpsb jg ret (bad) jg pop out add inc decl test mov ljmp xor nop sti inc rcrl ja jno cmp jg ficompl fimul cmp ds dec outsl rclb mulb iret outsb scas mov and enter adc cmp jns adc ds jae jbe popa sbb jmp add mov dec pop enter scas jg xchg and xchg xchg jg push mov lret lods add inc inc (bad) dec iret or ljmp ds push pop xor (bad) xor daa fmulp aad mov insl enter xor add dec insb loopne jae pop dec xchg mov fadds sbb xchg int3 mov mov lret jp notl imul dec pop cld or sbb out push push aaa xor adc inc (bad) push jge xor mov sub adc push stc roll jg sahf dec fstps sub mov cmc xchg bound out (bad) enter in bound jg push dec or fstps and jg mov push xchg jmp adc sti pushf mov xchg stos xlat dec les popf fs xor xor mov adc jb xor pop addr16 add ja call jmp out out mov aam jg pop notb jg movsl dec test lcall pop add or push loop sub push aas (bad) aas lds cmpsb adc inc (bad) popf jg lret jno loopne out nop shr fistpll pushf outsb mov xchg push push call push test pushf ret insb xor jg push mov lea xchg mov insb jg mov xor loopne jb enter push pop mov xchg mov sbb das sub or sbb dec fildl repz in pop movsl out sbb add mov out jno in call insl inc jbe xor add dec add inc test mov leave shrl gs lock pop or in jo dec pop adc pushf add test xlat aas shlb pop push cwtl gs push jg std add ds insb fdivrl jle jg and jg inc imul in adc sub imulb mov bound dec mov leave pusha inc cmpb sbb inc pop repnz push nop push bound insl sub jg mov into lds jg scas insl scas mov cmc ret cmp ljmp adc jg mov aas sti stos fbstp push dec and inc js (bad) repnz xor xchg adc sbb cltd jne (bad) orl loopne js stc cld dec sbb hlt push or scas xchg xor dec jg (bad) jle jno cmp push aas jg hlt in cmp ret mov xorl mov jb sbb test cltd stos jg add sar fcmovnbe lock jg dec pop xor or es sub dec in (bad) jl add jae fisub xchg push (bad) mov adc pop outsl cmp lret mov sbb xchg pop xchg rorb ds mov sub jg insb push cs lock jg xor ret mov cmp lret xor or jg sub loop add jg (bad) lds push loopne repz ds loope xchg jae mov and lgs or dec out jg xor push and mov cmp xchg inc cli jg aaa inc mov lahf adc (bad) or mov imul or sahf mov cmp jg sar xchg cmp js repz jg pop sbb aam xlat mov push add scas mov xchg pushf cltd mov jg push cs jae shrl lcall sete jg sub into pushl icebp sub shl inc nop (bad) jg or mov std jg lret push pop cmp cmc push loope xor fsubrs enter stc cmpsl jno arpl cs dec inc dec scas std loope les mov in jl push mov aam push js sub test and jo xchg dec movsb sub lods jg fs fwait dec in jg fimull and mov mov sti xchg cmp ret adc push cmc js inc lea lahf pop push sub mov aas mov jne outsl xchg pop dec (bad) mov repz mov pop mov or jg mov leave adc sbb cmp jg adc lahf jmp (bad) jp mov std jg lock sbb mov repz xor movsl lds iret test fwait and inc fcos shr jg mov or dec icebp push mov mov jg in mov pop add (bad) scas sti fist sarl outsb jecxz lods lds push pop loop addr16 jg dec lahf xor test or (bad) mov sbb je push xchg cmp pop sub push mov fnop jo std movsb stc scas mov xchg ja div fcomps fcmovnu cmpl xchg js (bad) aam push inc mov pop pop jg out sub sbb popf inc dec add (bad) or fwait add into hlt cmp loop sub je out dec cmp adc js mov push nop add jg mov jle xor repz jne push int lcall jbe or xchg xchg stc sti inc push jmp outsl sar jle jg jmp dec loope in iret jg pop pop insl inc jecxz sti test inc hlt addr16 sbb xchg pop imul cwtl aas lret sbb dec xchg dec mov cmp lcall arpl shll mov adc jg cld leave and push mov jg (bad) dec push es dec incb inc (bad) test pushaw cmc dec jg or in pop imul daa fstpt jno lods fwait pop es cltd cmc jb or sarb sbb dec jg inc sbbl pop fdivrl xlat js cltd rolb scas repz mov rclb jns jg js movsl test aas or jle test fisttpl nop jns jg xchg movsl sahf jno lds jg sbbl xchg jg sub inc push mov dec les cmp sbb mov std dec jg jno push lock sbbb inc popf xchg cli mov dec pusha push or mov pop mov cs adc jg mov call popa sub gs sub inc jg,pn adc cld inc mov fistp outsb out aas pop cmp xchg pop jne cli (bad) push mov jg pop inc sbb fdivrl lret xchg or xor cmpsb mov bound cmp je and mov xlat out sbb loope lret wbinvd neg pop xor push mov fnstcw push push stos ss imulb jg scas add out adc int3 pop adc dec leave inc cld dec enter mov movsb jmp push mov xchg sbb idivl bound ret jg sbb jns jg imul les cmp jecxz fdivrs dec enter jmp out fidivr icebp or pop and push mov movq mov jg lahf pop and out in cmp push sub js jns jne iret push int3 scas mov aas les push sbb adc and popf add add addr16 das lcall testl aaa cmp sbb (bad) popf push insl mov push or lds imul lret inc ret out loope enter sub mov add mov test test jg xor mov mov dec mov inc mov dec aaa out das scas xor xchg push dec mull out je in or data16 sbb mov and mov dec stc (bad) cmc mov push jno cmp jnp mov clc shl inc jle insl sub outsl shll cmp xor shll mov mov jp mov mov fnsave jg bound pusha cmp (bad) je scas (bad) jg popf je sub out sub dec mov jbe jg inc sub bound xchg mov (bad) xchg dec iret adc or jg sbb jo mov pop push outsl dec adc jg and mov std mov xlat jno andl loopne jg xor scas scas pop add mov ficomp (bad) movsl out mov fwait cmp cld jg stc ficomp mov (bad) jne adc dec lahf clc into fldt xchg jg das sub dec xlat frstor loopne dec mov sbb pop jge pop into lock sti iret cltd mov in (bad) jne or push jp push movsb sti insl mov push enter mov sti xchg inc sbb xchg arpl stos pusha add mov shrb (bad) jl stos jg bound mov daa ret les sti lods pop inc hlt pushf xchg adc cmp mov inc dec lea (bad) push xor mov pop in jg cmpsb push (bad) and das jg (bad) jae adc and push mov adc jg pop pop mov mov inc add jg jnp push mov inc push shrl add xchg cmpl imul idivl push xchg inc mov lret aam xchg jg fildl adc xor cli pop ds jns in inc mov jg push ljmp addr16 inc sbb pop lret and aad jg mov hlt and mov inc testl sbb cmc dec fdivrl push jg add gs shrb jg jnp sbb (bad) call ficomp or jg rolb test in lea daa punpckhwd cmp or cltd iret inc jnp repnz (bad) mov dec inc popa pop jg sbb in cwtl sub dec push pop int3 ja add mov lcall test jg cmp inc mov jle xlat (bad) push jg jmp cltd lock cmp jg mov ja test mov insl push das jg enter je sahf jg xor cmc and cmp xchg mov (bad) cli jg dec insl mov fiadd (bad) mov dec gs sub lahf mov pop fidivrl cmpl or shrl js pop cld pop in mov jg (bad) std adc sbb jmp test dec and jg (bad) (bad) sbb pop shlb lret aas and sub pop mov cltd jo cmpsb sub sub mov push lret pop jns jg push pushw addr16 scas jg bound add lret sbb xchg pop pop xchg lock jg,pt cmc insb sub lods push mov jg inc out pop fistp xor or dec fdivr jae dec jg (bad) pop in mov stos adc sti add into pop jle push daa test insl and sbb mov jg call cmp jg mov sub pop scas push in xor mov xor pop ja jg in sub popa insb add or cltd xchg fist icebp mov sub aas sbb lea inc (bad) int cmc imul mov lret jo sub xor xchg jns loope mov mov gs fldt mov jne into movsb pop sarl xchg movb loopne adc lods jg inc push jecxz enter push cltd (bad) pop push rorl test sti js cmp outsl mov inc and pop aas out bound es mov jmp dec jg icebp arpl imul fcmove aas mov dec and pop popf fstpl jg adc xchg icebp cmp fnsave int dec repnz aas mov push popa add xchg dec ja je lods jg pop lods or inc addr16 mov lahf lock push mov jg pop jno cwtl shrl icebp sti out sbb test loopne jg sarb (bad) out or mov ret push sarl mov std dec push cmp or add jg ljmp jg (bad) dec and sub iret inc popf mov inc add cli rorb ss or push jg jmp mov push mov (bad) xchg jge ret add jg movsb or dec icebp adc sub jl frstor arpl jg push add xchg mov mov in loop dec sub movsl lods xor or out and xor fcoms (bad) call jg lret jmp sahf jg sub mov cmp inc aad test insb jns lock push (bad) jg xlat xor cli jg into ret bound jg,pt push lret icebp pop push jg lock popf (bad) lcall sti fdivrl movsl lock pop pop xchg xchg sub or jg mov incb repnz frstor mov pop call and (bad) into fimul jg test lea pop jg stc popf addr16 jge xor xchg pop mov cmp mov imul sahf xchg sbb mov jg dec test js call mov mov sbb push push jbe lock and (bad) out mov aam fs push xchg dec add xchg into scas popf add scas mov xchg leave dec dec clc xchg loopne inc sub das out out inc pop push idivl mov je (bad) pop dec mov dec cmp jg inc and push jg jmp fist add add dec scas dec ja sbb dec inc mov jg sbb mov (bad) daa xorl cmp jg pop cli push and xchg mov xor repnz std (bad) and sahf mov jg popf pop movsb fsubrl lahf jg sub idivb xchg movsl loope sbb in orl mov jp xchg lcall jmp jg (bad) push jg es pop push adc insl jg insb adc in xchg mov inc (bad) shlb jg mov iret idiv roll int3 and pop fwait xor adcl aas ror jmp push std loope pop add xchg dec inc push inc mov xchg pop pushf push cmp jl cmpl adc (bad) nop mov jg pop or mov inc jg jmp js mov inc xchg xor inc cltd push lret call add test les sbb push inc sbb inc mov js icebp (bad) into sub pop test stos jg and jmp cld repnz jg xchg aam inc lds adc cmp jl ficoml inc ret jae push bound (bad) lods pop push daa sbb fidivl mov dec jno inc pop jg mov loop jg fidivr pusha cmpsl hlt (bad) jg mov inc and jg (bad) pop leave lock jg inc scas add test or or and jne adcl mov cmp call lea out mov in aaa ljmp jg or adc jg adc pop pop pusha outsl push jae icebp jg int out (bad) mov mov sub test lahf sbb jno bound jg fidivr into jg push repnz das dec lock sub adc (bad) arpl jns inc jge mov hlt out or jns cmp cmc (bad) xor mov add (bad) jl aam repz (bad) and (bad) dec push ljmp call cs sub inc xchg mov ja mov and mov inc jg mov loopne aas cmpsb adc and inc leave arpl out ret xor fdivrs push jg aaa sti inc data16 (bad) mov inc enter les imulb aaa outsl xchg adc iret cmp shll aas sti sub dec lcall fidivrl in das push jg inc add mov pop pop pop dec xchg sub xchg xchg clc mov inc aas icebp test xchg xchg xor inc mov jg rclb jne jg outsl jbe cli lcall aad sbb lahf jg dec aaa cwtl or mov popf adc sub jg sub cmp adc fwait arpl jg test cmpsl sbb and mov lds aas outsb cld lahf mov (bad) add test push mov pushf jg pop call clc mov adc aas xor fild adc jg push mov test test sub out jg pop loope popf rcll jg mov ljmp enter ret sarl rcpps dec mov mov jg pushl ret adc stos sub xchg lods push cmp lods (bad) xor sbb add and and push call pop inc push dec aas jnp aam fdivrl (bad) imulb movsl divl ret pop mulb xor int3 movsl nop jo rcrl sbb mov inc push (bad) iret cld ret jns jbe lods jge sti pop and jle jmp sbb inc adc xchg repz insl outsl add dec shll in ljmp movsb das cmp xchg test mov dec push xchg cltd adc nop jg mov imul push jg aad add mov das dec push lods loop mov mov dec cmovge and jle stos gs ret in icebp ljmp call xchg aaa pop mov push sbb outsb mov and sbb ret mov jg dec lret mov jg add xchg jo div test rclb jg push jb int and jg pop jl (bad) cmp xchg xchg ret (bad) mov adc jg xchg jle enter jg and jg,pt arpl sub xchg add jg push cwtl xchg jg and push mov adc adc lock (bad) mov jg push call repnz jg sbb xor std lods sub inc mov mov clts cld inc sub inc in xor xchg sub cmc ret pop inc adc jg mov cwtl sarl sbb fstps out adc out jge rcl clc inc jns dec sbb dec jle out popf add out cld movsl xor cmp pop mov das lahf das jg cmp (bad) lea fadd sub (bad) sahf and leave and pop aad aas clc ds rclb jg jmp nop sarl cltd rolb jno xor aam loope dec fisttpl popf or outsl cmpsb dec and in mov out jg aas xor inc mov adcl or cli bound insb test mov push pop (bad) bound pop sbb popa jg test test sbb mov xchg adc jg icebp push sbb (bad) sbb xchg pushf xchg add sti jg ja mov mov lcall cmc bound lods xlat jns jg pop push or cmpsb rolb jg cmpsl mov sbb add xor popf and adc sbb icebp jg or sarb sahf push mov (bad) stos dec xor aas rcll or lea (bad) call mov out cmp sbb sti push jg fdiv fwait sub mov mov mov pop into dec pusha jg addr16 and data16 cmp push fiadd and xchg and imul faddp outsb jg jae pop fs xchg pop mov js lcall repz test mov test xchg out ljmp add in (bad) mov pop push (bad) fimull bound jne mov lahf mov mov pushf adc lock (bad) jbe add xor lret jo mov sbb push out dec aas adc rcrb mov clc dec scas push and jg sbb or inc data16 int3 push out dec (bad) add and pusha mov ret cmp dec sbb es pop stos jg lds in mov sbbl sub cmp or pop lret adc push cmp mov pop xchg jmp and inc jg xor scas pop pop push jg jmp sbb bound in (bad) imul lret jno dec sbb sti mov push add ret jg pop bound dec dec lahf test in adc add ds sbb cmpsb jg push je cmp lahf (bad) cmp mov sub ret jl cmp pop push sub pop notl cmpsb bound inc dec pop push mov xchg push jg loope subb lcall js test in pop mov ret pop stos lock jg lea mov inc mov ja or push jg cwtl adc or inc imul pop fdiv lahf mov test enter lea jg lods inc jne sbb and pop jnp shrb mov js push dec jns dec repz and iret mov out cmp aas jno popa fwait das add inc (bad) jg xor push lcall push lret mov xlat jg das jecxz lret jno cmpsb add test repz nop vpcmpgtb popl sub jg sub cmpl fs insl lahf mov push les cmpsl pop test or negb xchg jg dec xor push mov jg xchg nop clc mov retw aaa ljmp sbb jmp test (bad) xchg and or mov sarl push mov mov aaa outsl sbb xchg out pop jns mov outsl jecxz ffree jg lods cs pop lea jg jo cmp sub notl roll xchg movsl mov inc movsb pop int cmp test pop nop jg xchg jb js lcall sbb jg imul pusha mov aam test mov push jg dec sbb mov inc jns cmp imul arpl xchg inc cmpsl jle out pop jg mov enter and jg es stc int aam or xchg push sub sbb popf mov orl mov push mov les mov jne bound pop in xor mov notb jg test mov aas cmpl inc pop mov or adc ljmp aad push les sbb dec ss mov jo jg loop (bad) lock daa mov mov mov loope,pt bound push pop dec pop jp jg dec jmp inc dec and sub call inc lods pop fstpt stos test (bad) cmp jg pop pop push xchg imul xchg mov pop mov inc ret mov sub (bad) mov adc ds gs jb jmp mov push aas or in cmp add dec mov (bad) pop stos cmpsl jmp xor mov in mov add ja mov (bad) sti or loope shlb and leave insl addr16 dec mov jg mov incl xchg and jecxz inc (bad) aas popf int3 mov aaa sti fildl jae in std dec (bad) test push jnp or pop imul (bad) and hlt jg sti lds inc mov aas mov icebp movsl cld sub (bad) mov mov jo push loope in int3 into leave fcoml mov pop mov cs mov addr16 mov jge cwtl loopne jg cmpsb pop adc jg push push dec dec mov in adc jb cmpsl sub mov mov mov pop movsb sub and jg push jp lret out and push push fldenv mov or (bad) xlat pop jnp js lds (bad) sub jg push cmp jg in xchg leave xchg jg and adc xor and jg sub adc pop subl or (bad) mov mov mov aad xchg sbb ret data16 rorl outsb negl cs cmp rorl jg aaa sub push jg adc inc sbb mov pop push adc div cmpb sbb ss or (bad) mov mov mov movsb sub incl jg test insb into out jge sub and mov (bad) sarl (bad) mov jne (bad) aas pop cmp push xchg lds mov cwtl mov jg in out inc jo push je daa es into popf sarb sub jg gs or (bad) div mov loope xchg mov mov pop jecxz cs pop sti adc out jg mov jmp loopne lods inc lock pop dec in mov cmp add or jg aaa add pop je cmpb cmc adc jg dec cmp dec enter adc mull adc sub jae cmp stos pop inc or pop (bad) or xchg jg xchg stos xchg in cmp inc (bad) push test imul jae out jg dec fwait (bad) pop mov pop jg in xor je xor pop xor sti (bad) xchg pop push cmp xchg sub jnp add jg outsb insl jge sbb (bad) testl bound pop and aaa jno jns push mov jg mov loopne sti out dec rcll ja pop xchg and push sbb cmp cmc clc jg push fildll jg jae lods (bad) cmp ljmp pop inc insl jg sarl sub adc fistpll shrb std (bad) push or rorb jae push xchg jg int3 xor jge (bad) mov (bad) lret rol daa outsl lea dec inc inc jg push mov inc js jle dec out pop xor jnp mov pop imul xor adcb mull jg iret fwait sbb jle into jg sub push inc cmc rcrb and adc popa cmp push inc out mov outsb jmp mov add adc (bad) imull jg loopne jnp movsl in jg faddl push jg and je jg sahf pop push xlat icebp cmp daa movsb mov sbb push popf outsl mov (bad) jecxz insl jg cmpsl xchg lahf cli cld fnstenv cmp or push scas mov iret bound mov pop xchg dec cmp cmp (bad) mov mov mov cs mov ja in lret sbb aas add mov inc add push (bad) xor mov mov push lea js sbb xor gs jno js loope dec sbb mov mov adc scas jl cli jg jns pop mov roll lea fstpt into jnp test pop jg push mov mov jg das push pop mov cmp imulb (bad) (bad) fnstcw push rolb cmp jg scas ret mov sbb std dec scas leave cmpl pop jge jo jg push rsqrtps xchg (bad) jg (bad) jbe xchg jb loopne dec dec jle inc (bad) mov or xlat mov jg scas cmp repz pusha jg adcl sarl xchg ss and and (bad) std hlt fdivl mov cmp sti fiaddl rclb sub ret cmp jb dec jle out lods mov test fsubrl jg enter add jg xchg push xor fnsave bound adc clc mov ja ja lods gs xchg aas js mov cmp dec ds jg sahf add scas int mov jae js outsl pop xlat pop pop in and fdivs dec mov push lret jge in jg mov sub fs sub iret dec jmp imul jg mov mov je and cmp add fs insl mov js mov dec or jg mov jg jne pop xor jno add fldl leave xor shlb popa (bad) or out jg dec nop adcl mov int3 (bad) sbb lcall lret mov sbb push cmp push mov add hlt (bad) inc inc mov fsubrl add mov jp cwtl scas (bad) xor subl loopne jg in push mov xchg arpl ret xchg inc (bad) push mov outsl fstpl adc fdivrs fnstcw loope pop sbb fs out mov mov movntq out mov mov leave inc pop xor aas lcall inc movsl mov stos gs addr16 jle adcl xor lock mov gs xor sarb int3 test loop out jg add cmp jnp enter in inc jg jne jbe push loopne jg setg xchg es movl jns loope sarb sub jge jo outsb pop lret jg aas jecxz in std mov xor jge jg lret andl jg inc xchg inc fadd or mov push dec pushf (bad) sbb cmpsb mov (bad) aaa sub cli dec in aas sbb mov xor mov pop arpl xchg jg lret leave xor movsl loop dec mov dec and outsl aam fiadd enter pop arpl sbb inc push mov fdivrs sbb xor sbb push iret leave jg loop mov lahf insl inc fwait scas test xchg mov fisttpll scas cli int cld pop or ja and mov movsl and mov jg clc imul mov in xchg rcrb jg mov shlb jg pop (bad) aas (bad) cmpsb hlt loop stos and aad and pusha jo mov pop scas mov ret push movsl mov ja out pop and mov push inc xor mov mov mov ficomp jg,pt nop mov inc jno cmp fldt dec sbb push scas jae xor mov pusha js mov movsb sbb mov dec cmp stos out dec xchg xor jle rorl pop add mov scas inc sbb adc jg mov aad (bad) ljmp jp movq insb mul shl fidivrl adc bnd scas xor jg adc mov jg popa jmp stos mov dec pop (bad) inc pop movsb push jg pop pop sbb icebp jg add mov and sbb clc (bad) lcall add lods push mov push stc (bad) loopne mov xor mov movb mov popf jg shrb js negb add (bad) dec cli inc dec push test xor repnz xchg ret sub jg in mov jg cltd test adc les add sub sti adcl addr16 xor adc jg jl mov jg pop test dec jbe stos jg cmp and mov sub rcrl jg push add test mov xchg rcl jge xchg jg je push cmp mov push outsb in inc repz and (bad) lret fidivr insb and in orl or mov mov add adc jg mov movsb cmp jg xchg sub and lahf xor inc jg out inc cmp sbb mov jp outsl cwtl push imul (bad) (bad) cvtpi2ps (bad) jg adc sti jmp and push jge mov test mov adc jg neg pop iret (bad) mov icebp ljmp jp and pop pop adc jl mov pushf (bad) jbe sub mov mov mov jle mov hlt insb pop out nop xor dec pop rcl and popa bound icebp sbb in jecxz andl jg jnp mov jg popf inc dec lock aam jg inc bound aad into jg adc cmp add loope jg pop push movsb sar into imul dec addr16 sbb cli and sti aaa mov fisubrl mov or shrl cltd test sahf inc arpl xor pop add daa dec jae mov (bad) mov lahf add std mov popf cld or add push cmp pop mov pushf sbbb adc lret in dec hlt mov mov nop xor or jg test cltd stos outsl sub es sub andl stc jg add lret xchg scas cmpsl mov cmp je mov fmull adc jp pop push jae fldt sti mov sbb pop scas xchg movsl xchg cli aam jle cs mov iret jg push pop and sbb sub jg or mov push push cmpsb jg popa nop test in fdivrs or lods mov jbe cmpsb out popfw mov std push ss stos push xor fbld sbb sti enter pop xor jg mov or outsl bound or sarl lock sub jecxz xlat (bad) icebp push jg enter mov jg (bad) cmp cmpsl xchg sbb xchg movsb dec jg mov xchg jg and sub push jg in fcoml pushf add adc sahf mov cmp fmul bnd mov (bad) lods test lret jg test sti jg jbe fsubs jle inc psrld sub sub jb mov sbb pop add jg dec adc jge sub jmp jg sbb jg push xchg daa mov mov lods push dec outsb jg mov jp push xchg mov (bad) sbb aas enter test or jmp jg imul aas jo sub inc xlat sub push in mov nop jle sub test in lds or mov scas xchg mov and pop and mov rcll or sub pop lock adc rcll aas loopne pusha ja cmp add lcall out sbb jmp jmp icebp dec jae pop and and jg bound xchg and (bad) jg imul sar stos xor xchg in add insl mov or pop mov movsl push adc inc push stc jne fistpl data16 (bad) int add sbb into sti (bad) xor sarl popa loope sti sub leave (bad) mov mov mov pop dec in mov jg sub push sub std adc cmp les aas sub add stos in and xchg daa and mov jle aaa pusha jg adc aas fildll pushf outsl jns sub inc mov les add jae xchg addb jb (bad) jge std jle jg pop test inc testl push sahf or repnz dec push push hlt stos out jg pop and xchg push sbb jg (bad) fiadd sahf inc lret out mov inc push fwait xchg cmc mov test push popf cmp aad push (bad) dec fs scas gs xchg mov inc in push nop mov push enter dec sub inc push mov dec add mov incb inc dec fcomps hlt sub mov xor mov push jge pop jmp adc jne and cmp pop repz mov and addr16 inc or loope repnz stos out lds call (bad) lret jmp jg xchg add dec int mov push lret test outsb sbb and sub sarl jbe dec push outsl cmpsl aas movsb and pop std out inc pop idivb lods fistl and cmpsl push dec movsl push addr16 loope mov pop jo aas inc daa fwait jg psubw xchg xchg aad repnz in dec or cmp push sub push jne add jno or sbb xchg jg inc jb adc out jg mov enter mov (bad) lock in mov jg loopne mov popl gs xlat cmp js push clc dec (bad) dec add xchg insb sub imul pop arpl aaa or (bad) repnz les movsb scas xchg jmp lock out mov out aas pop gs cmp jg pop dec dec lods inc das sahf jg mov xor aas jo add cmp lods jg pop add (bad) jmp mov pop sub nop popa inc push pop in mov repz mov adc movsl ret mov and xchg jg lahf jle jge mov mov aam pop pop pop mov mov (bad) jne das movsl sbb mov add jae pop mov inc mov (bad) sub jg and int3 lods imul std jp in es jg pop and out fidivl cmp ljmp pop and pop cmp mov pop mov xchg pop aas fwait push mov dec or jg push lret pop lea cmpsb mov flds jg cmp xor jg orb das cmp lock jg pop cmp jle sti popa jns add imulb add xchg xlat pop inc iret std dec mov ret adc add jg loop cltd aad push cmc mov push inc inc leave cmp adc sub and repnz arpl sub jne jle stc jg jecxz repz jg fcomp dec xlat sub xchg jg cmp mov jg inc lods addr16 into mov mov imul pop sub inc int3 mov pop jg xchg cmp inc enter arpl mov mov (bad) adc push rorb ss mov xor imul andl cli mov mov test popa and cltd aas je inc mov jb test (bad) sbb icebp inc sbb (bad) mov cmp dec mov jecxz mov dec xlat mov idivl mov pop js jge or dec loopne push movb loope pushf mov jmp ds stc adc jb sub xchg mov jo cmpsb jp push push ret je inc mov out inc inc pop jg pop push lea std loope dec (bad) in cli jg leave xchg jle xor imull ja sub jg lds or int3 imul aad push fdiv aas jg bound push add dec jg (bad) sahf jne pop add jg mov jg lret or pop mov fwait ja mov scas sbbb xor lahf and icebp dec mov ret mov push fsts push jg imull adc inc jg mov rcrl jg sbb jmp imul in jg mov je test jg insb (bad) cmc mov sub push mov or (bad) inc adc jle pop arpl xor scas jge addr16 in sbb into mov mov jne sbb lret pop ss and out or sbb inc loope pop int adc mov push sub cli ja stc push sub scas (bad) lock test cld jg,pt in je mov (bad) sbb pop dec jg push pop clc jno dec jmp sub icebp mov adc and or mov (bad) (bad) jg mov (bad) fdivrs loope out dec xchg mov pop push imul jg cmpsl mov dec jg fdivs inc lcall cmp mov shll lds outsl mov insl mov jg (bad) rol out cs dec xor jmp jb mov jg xlat xor jg push addl xchg fisttp inc xor mov rorb dec cmp pop jg sub sbb add mov adc mov arpl push dec ret push mov push jg dec jo mov in jg insl add imul mov jg mov imul dec dec lock push adc jo enter cmc jg mov inc test aam sub mov sti lock movsl int3 pop push (bad) (bad) cmc and xchg push es iret negl and jg push in icebp stos popa sbb mov pop adc mov mov out pop sub leave stos jg shl fildl fimul mov out sbb inc test adc nop repnz mov push mov jno jno std pop lods int or jg xchg repnz pop (bad) jg inc cs movsl xchg jg xchg shlb divb push les ret adc jns jg jo mov jg jecxz int3 or adc pop (bad) jge out xor inc decb sub sub inc pop mov jo cmp xor movsl aam or mov dec dec push loope test jbe and jge cli sarl or add loopne ret fdivs popf xor xchg jb call clc test fidivr xchg jge dec pop or dec jg jle xchg jp pop (bad) scas lods int3 jg std pop sbb pop jg xchg sbb arpl fucomip (bad) add fnstsw aas mov insb inc sbb in mov call aad inc dec bnd popa leave jg mov push pop cmp (bad) pop mov cmp insl push push xor push xchg jge decb out int3 xor in sarb jno loopne push sub xor pop and sub jg pop rol mov icebp adc repnz mov inc aaa and imul mov and loope clc xchg iret idivl xor dec inc mov (bad) sbb aad (bad) or jb subl jg inc pusha sbb jmp sti and sub push loope clc or jg ret hlt pushf jl inc int das decl jne xlat scas jg xchg popa push es fmuls aam pop push ss js sub ds in into aas mov call clc cwtl mov mov xchg mov lds push jg mov mul inc mov xor clc sub outsl dec lods jle ds jg mov sub lahf stc mov add movsl dec pusha clc mov mov cli mov push mov insb ljmp pop push jbe int mov pop mov sub je pop add xchg (bad) (bad) js stos mov test and imul gs pop jbe mov jg xchg aas pop popa int mov add lods sub push mov call stos jg (bad) sub enter test pushf cli xor fwait pop out inc (bad) mov mov ret sarb mov sub mov mov pusha jae call jg jmp outsl or and mov scas std sub test adc push dec add inc mov aad mov (bad) jg movsl adc add push sub jg mov inc std jg inc testb sbb push test jle push std data16 jg push mov in hlt and or notl fnop push movsb push jno sbb loop mov repnz out push test sub fldenv es fildll daa gs push push jg add pmaddwd mov xchg xor dec (bad) out xchg in pop adc jno adc sbb push and cltd jg retw jp sub push ror push jl (bad) imul loope repz addb test pop test mov mov jg loopne popf xor push es push rorl dec sti stos adc ja insl (bad) pop cmpl add in jp add dec sbb and stc xorl popa mov mov movl pop xchg sbb add pop idivb jo xor jg jl cmpsl jecxz punpcklbw pop jg mov aam dec xlat cmp mov js jg jb and xchg ret outsl jge imul stos push je addr16 mov out add mov sub cli dec inc gs aas or fisubl dec cmpl inc (bad) push jg or jge leave pop nop jg or (bad) jg pslld ds stc jns dec xor sub adc add loop xor lods sti sarb incl and test push pop jg ljmp mov into push das and fcompl dec jp test data16 inc or in and xor dec add xchg fwait js dec lds sub or push scas inc sbb xor fstpt mov inc xchg push mov push xor mov sti jg xor add hlt leave fnstcw js mov lods jno in push subl pop jg insb nop cs inc mov mov fcoms hlt sahf and iret movsl push (bad) dec popa mov sub push xchg jno ror jle adc pop in mov xchg dec push jg stc inc jnp arpl int3 out daa mov mov adc add call test pop stc rorb sbb or outsb out cs mov push repz dec xchg or notb fsubrp xor pusha xchg jg loope xor jl adc popf test fs lahf cmpsb pop imul aas add xchg push mov cwtl inc clc jg cmpb mov jmp mov xlat xor jg pop scas mov sbb pusha inc jg in shrb fdiv sarb sti imull jp outsb cmpsb lods or cmp aaa cwtl fmull sub pop aad mov inc (bad) push scas decl lret imulb jl bound mov xchg push inc nop fistpl (bad) dec das outsl pop outsl push loope hlt negl je dec cmp aam sti outsl jg fbstp push call js inc enter pop adc xchg cmpb lret rcll push mov loopne jnp lret mov mov add ja inc mov add mov loop clc sbb es pop jg sub adc cmp mov arpl cmp sub xchg ss xor push insl xor jle loope je mov scas icebp fidivrl cmp add popa jg xor mov data16 sub add pop (bad) mov sub imul aam sbb in ret and inc addr16 aas xor cmp lcall or pop addl cli push xor jg cwtl dec sub addr16 adc push inc pop inc bound fiaddl sub movsl push ja add jg (bad) fistpl push cmp rorl push lods aas addr16 xor out inc js add (bad) mov addr16 jle outsl add pop add adc adc jg fmulp bnd addr16 jle sbbb or incb push jg popa push or movsb call nop (bad) jne inc xchg mov add ret pusha fs and push mov sbb testl arpl cli jle ds shll imul jl dec icebp pop xor cld jg leave jle std mov sbb loope push mov fwait jle fild or mov lret pop mov fidivl lods out lds (bad) jg cmp dec xchg inc scas fisub incb jmp data16 inc ret xchg push cli es outsl jg (bad) lods or arpl inc (bad) mov out aad lahf jg or inc popf jg sub dec bound jg aaa mov xchg les push test mov sub mov arpl cmp xchg xchg jbe or imul (bad) xchg mov int3 cmp cmp jmp scas lcall (bad) xor xchg jg daa sbb cmpsb and stc inc dec jg sar or push sbb shlb andb fs repz ja fnstsw lods lds mov mov dec out in cmpsb pusha out push outsb push cmc mov jg jle nop jp (bad) mov out fwait and dec std push fdivrp xchg dec cs clc jg jle rclb out imul mov std sbb pop pusha push mov js and pushl xor jp cld or pop push push jg ret pop movsb push mov es popf xor out adc sbb out iret cmp insb (bad) sti sti jmp xchg rcrl mov cli jbe popf pop out cmp jg outsl adc cmc aaa add mov sbb jg cmpsl outsb add je inc jg arpl cmpsb mov outsl mov lahf sub jg push sub xor xchg jp test mov inc push pop mov mov lahf cmpb push lods (bad) jmp push aas loope pop dec mov inc ret cwtl aas jg andps data16 jg rorb lahf adc inc mov sbb dec in fstpt std out cs popa mov rorl push cmpsl rol jle lahf leave jg iret test int3 lret xor cmp scas xor nop mov pop pushf push pop adc fcomi (bad) jo add cmp xor rorb outsl push inc mov cmpl aam lret sbb aas aaa pop inc sbb sbb cmp jg outsl sbb loopne arpl jno cs push and jg loop jb jae dec jg outsl xchg mov jg sub lret mov push dec mov loopne add push xchg lds cwtl sbb jg daa ds dec xchg push popa add pop lock add mov out mov cs jg (bad) repz cmp or add pop andb or and jg inc fisub mull adc jg sub push add push scas (bad) mov push into xlat addr16 clc pop mov sub les pop lods jo jg jle adc or mov xchg pop imul mov cltd mov inc sub pop scas in mov fwait push sarl and jg mov dec ret jg jae lock into scas pop jg push imul scas repz imul lahf inc push sub sbb xchg (bad) mov mov js pushf add inc cmc push xor cld pop xor fwait js mov scas sub push xchg dec mov mov lock pop or inc or push mov test add sub cld and push sbb jg xchg push dec pop pusha and call jg les mov arpl sahf ret add jg mov adc sahf jg call fildl mov movsl in and inc push pop mov mov (bad) aaa jne and sub jg mov jne sti add pop js loopne push clc outsb jg mov mov jg cmp jmp mov push movsl adc add out mov fistpll jge sti inc es mov fstpt hlt loop cmp push (bad) jg mov loopne push popa xor aaa pop cmpsb jl ret out jnp xchg call add cmp cmp mov out jae push aad jg lret ljmp push xchg push xor addr16 push daa mov jle sbb lock stos aas leave sbb add mov pusha enter inc jp jg xor mov (bad) stc mov outsl pop scas dec push loope cmpl inc fstpt insl cmpsb mov imul mov dec cs jo jg mov mov jg scas orl (bad) jno imul lods in inc mov mov rcr addr16 jno pop dec popf sbb jg das cmp cmp aas decl into sti clc cmc cmp leave jg mov lds aas mov in std inc decb fnstcw mov sahf stc push aaa jg cmpsb dec test jg push (bad) popa jg cli adc inc mov ja sub int3 cmp (bad) jmp rcr sbb sarb and ljmp xchg sti mov xchg pop xor daa outsl (bad) pusha aam pushf and jo xchg int sub mov rcrl push mov dec aam jle loopne jg rclb mov lret xchg xlat repz sub adc push jg push imul or sbb push adc push (bad) and jg pop test sub adc cld push movl leave in cmpsb inc xor cmp jns,pn xchg dec (bad) aam iret sub insb jg movsl sbb je push insb pop jbe fsubrs cmp add sub bound and insb mov popaw pop jbe hlt and xchg ret mov jg repz adc scas (bad) in jae push jg lret fstpl mov pushf arpl xchg mov jg je ljmp mov lods out sbb pop add imul and pusha imul inc ljmp in sub xor jo pop dec push adc mov (bad) xlat test mov lock cmpsl push in movsb not jo push sbb jg addb jg jbe xor jg iret ljmp dec push or fcompl (bad) dec mov lock pop int and clc pop sub in (bad) xchg movsl bound mov dec in fstpl cmpsl lret ds dec jl ljmp cld popa jg adc and sub jae pop inc jg ret dec xor negl jns and dec fstps add xor jge fisttpl les mov out std imul dec das (bad) jne jmp stos jg add sub (bad) ljmp orb std fs and mov data16 lahf lcall dec repnz mov fucomip in jns or leave jg inc pop xor jg insb adc lock cmp int ret inc cltd push jg je pop pop inc inc push cmp jg popf shll mov inc ficoml cmc lcall ret jg xlat addr16 jo xor addr16 push adc aad insl jg pop sahf pusha test test jge inc jbe mov (bad) sbb sub lock jg push hlt mov jg mov cltd mov inc ret lods jmp outsb mov or jle lcall cmp pusha and fbld push jg fidivr mov jg dec stos ret aas dec inc (bad) jg cmpsl cwtl lods insb incl xlat jg mov push test jg ljmp jg pop add jg shrl mov mov out (bad) push pop insl xor (bad) mov cmpsb dec das loop fdivrl xchg mov fwait mov cmp test ss inc cld aas sbbb ja jo mov cmp test stc mov push mov andl rcr out jg movsb jo mov insb (bad) mov stos mov aas loop jg (bad) pusha xchg xor jg sbb aam xchg stos clc repnz rcrb rorb push mov cmp pop dec repz push mov fcmovne mov rclb incl fsts fdivrs cmpsl (bad) outsl aam repnz add mov push fsts out pop jg push mov hlt jg (bad) aas pushf inc in sub and and (bad) or mov loop xchg pop push sub jmp xchg mov sub inc lea jg insb and jge pop adc rorb mov cmp cmpsl mov or outsl clc xchg fdivrs (bad) adc mov fisubr push int jle loopne sti cmp (bad) jbe shll enter (bad) scas jg (bad) push push movsl sub mov pop repnz outsb adc cmpl sub loopne dec insl sub mov std scas push xor mov out int3 jae lret sbb in dec popf scas jg movsl mov aam loopne aad lret push jg sub ds inc pop jo popa jg cmpsl and scas imul enter stos cli push adc iret cltd loope aad jg sub imul xor out ss in ret add mov mov test jg sbb sub jg pmullw popa add mov (bad) scas dec cwtl dec cmp lods adc int3 jnp adc cmp lret dec pop daa cmpsb xchg dec psraw push loop mov pop ja jne push scas add push sbb add or fs inc aas jbe mov sbbl mov cmp mov cmpsl inc popf and cli (bad) push xor addr16 faddl cmp xlat bound jg sbb xchg daa push gs pusha mov push mov imul push or xchg fdivrp int push test les fwait out test cmp cmp outsl adc adc push jb mov (bad) mov jno enter insb inc iret lds popa pop add mov mov jp mov pusha cmpb out xor fsubrs (bad) xor mov mov mov cmc cs push fisubr pusha cmp ret cmpsb scas ljmp jo fs lcall lret sbb pop jg int inc and insl add stos into push adc xor jg push int3 cmp std pop xchg (bad) js or jae sub jg and mov mov in ror jg mov jmp mov mov dec iret push shll or add mov push sub test jnp jl cs push scas (bad) mov mov xor sti repz fxch jg ljmp adcl mov sub adc inc das jne lods repz jg lret test dec dec xor sub ret push jle or aad jg push out add cli mov mov das popa mov (bad) xchg pop push fsub mov mov dec negb lds push mov jg push or pop or push into adc adc pop and call fnstcw cmp inc imul and std xor or daa mov call or cmpsl outsl pop cltd enter push sub pop fimul call and lods jg sub jmp lahf xor (bad) xchg jg ljmp mov add adc dec arpl push leave mov and jae in bound push (bad) aas cmp mov rorl inc add mov xchg dec mov pop jg aaa imul test cli jb int3 add jg pop inc sub cmp jg sbb ret arpl loope ss mov push fldenv cli cwtl or xchg jg outsb sub xchg jg mov xor mov mov mov lea arpl aas jg jne cmpsl sub cmc xchg aam call lcall add and stos jb cmp push jg icebp lock fstpt sub cmp cmp jg call mov sub cmpl jg,pn inc mov or cmp std xchg scas inc dec sti adc fwait test mov fninit cmp dec dec jnp lret jg fstl movsb sub jae jo sbb dec js sarb jg and mov push decl cwtl enter sub dec dec pop pop jg pop jno es push push jbe sub jg and adc arpl inc out push pop cmp sarb mov imull or (bad) push fwait xor xor mov xchg inc pop imul jb lret addr16 sbb sub idivl and adc mov inc jg (bad) test jne cmp sub leave push jg xchg push cmp mov jo (bad) xchg call lock inc out sub arpl jle xlat imul mov imul add mov sub in or xchg xor test fwait jg outsl bound xchg aam mov fisubr hlt sbb mov aas lahf ja sbb xchg xor jg and (bad) cmc push mov (bad) jg pop movsl cltd mov mov xchg ljmp push push mov lea jle je,pn stc outsl jg clc sub lret xchg xchg xchg mov sbb js and pop sub and lret test and in popf movsb mov out loop mov fadds mov aas out int3 test lea inc mov push mov js mov in or inc jg cmp push (bad) cmpsb test movsb push cmc push mov jg mov repz sub sub push test aas lret dec dec xor sahf mov xchg push push sub or xor sbb sbb mov lock addr16 jg test ret cmpsb pop xchg jno add push jg ja push cmp lret xor sbb push xchg (bad) faddp ljmp mov jg inc inc in mov js xchg les mov sub sarb cwtl xchg imul xchg pop xor ficompl cmp jmp fdivrs repnz pop xchg xchg stos jg pop fisubr lcall ret xchg ja pop mov mov or loopw jg fs aaa (bad) dec adc testl pop push pop adc aad jg repz sub aas cmp gs inc es xor out (bad) stc sti pop pop bound ret cmp cwtl adc adc into sub xchg call xor sub mov out into jbe (bad) and jg or repz push cmp or addr16 clc imul inc cmp jg and rcll inc jg in (bad) jle and insl cmc int inc jne mov xchg push lea and mov xchg decl jbe mov cmpl rorb mov das jecxz push out repz test mov push dec sbb adc mov mov ljmp push das scas (bad) xor dec gs icebp push inc jg movsl pop (bad) cmp push outsl jg pop cltd jmp int3 out jg add popl out lds enter cmp jg jle mov jg xchg inc rol (bad) test in (bad) call aas je cmpsb hlt and jg xor cmp (bad) jbe mov rcll stos or cmpps jno dec pop (bad) inc cmpsl aaa dec nop push dec xor pop les fwait cmp push movsl data16 pop je js xchg and mov mov adc jns push cmc data16 out sub sub push jg mov pop inc clc mov cmp icebp addr16 jg sub mov and je call or mov les xor repz jno daa imul and inc lret scas jg fldcw (bad) push clc jns jg les inc cmp or rorb loope pop sub push popl scas jp mov adc icebp aad outsb or aas imul jmp sub dec xchg jg fwait leave lods outsb jb mov test cmp pop mov push inc mov imul xchg loop xchg inc push add pop scas dec pushf in test loope ds clc lret aas push or xchg add test sti imul (bad) ds jg xchg dec xor mov in loop (bad) dec aas jle cli jg loopne inc adc inc mov aam movsl dec jae push mov add imul xchg pop dec adc pushf jg add pusha mov icebp jmp jo (bad) (bad) mov test aas cmpsl fldcw inc or aas or pop addl dec jg inc dec pop frstor aad xlat inc push jb rcll push loopne jmp push sarb repnz scas inc loop imul std jg adc sti mov pop stos outsb ds popa arpl push lret aad adc pop pop xor or ljmp sbb leave pushf pop gs not popf into or dec fidivrl jae and lea cmc sbb cwtl jg xor jmp mov mov ds aam cwtl jg jle dec in mov inc in and cmp ja mov mov pop lods fnstcw pop dec sarl or outsb push sbb dec out xchg jg xchg mov repnz shrl jecxz gs je loopne lret cmp addr16 fs (bad) cmp hlt fcmovnu jg out or aas and iret je ss arpl add inc repz jg xchg sub mov out shlb (bad) (bad) mov ds pusha add aad aam mov jo sub inc inc jg lahf dec frstor push out jg or sub pop jle stc aad insb aas ret or test scas ljmp out addl jg add push cmpsl rorb sti mov fisubr fcoms cmp xor cmp xor adc mov fild dec cmp push aas mov pusha add (bad) mov jg,pn cld gs das push mov nop out cwtl js jg push sbb jg clc subps (bad) push mov or lods inc cmp ja mov jb jg fs sahf cmp fidivrl pushf cmp and and sub out adc out mov xlat mov jne and (bad) hlt mov or pop stc jb call jg xlat fadds mov mov aas xor stc stos or xchg dec push xlat mov adc pop sarl mov mov xchg int int3 push clc sbb cwtl sub (bad) cmp (bad) pop mov ret cli arpl jbe ds mov inc push jns mov sbb push into jg mov addr16 movsb adc sar sbb fiaddl popf arpl data16 sbb in aas sbb jno xchg or add and pop push pop addr16 addr16 mov jg adc adc or jg jp jns mov xchg enter adc add (bad) pop fidivl aad push inc popf push loopne cmp daa jg mov outsb push js mov sbb insl ss lock xchg push mov stos xchg jge stos jg mov arpl sti jg cwtl in pop (bad) rcll mull pop mov aaa dec ljmp test fstpl push (bad) mov pop mov jmp or sbb jg dec scas call cmp es outsl xchg push jb lcall popaw cmc jg loope mov sarb jg xchg jg stos aas (bad) sbb lock add mov pop pop mov cmp mulb jge (bad) aad test pop push cmp aad dec cli mov lahf lea aad dec test lahf outsl jno neg sub push pop (bad) mov int push mov mov cmp push ret jp out xchg mov and aam fwait in add jg cld adc lea jg jb sub cwtl pop jmp push xor jg xchg lahf jg in fdivs jl push jmp xchg jae mov xchg mov push pop inc mov jmp loopne rclb sbb mov loop addr16 pushf lcall xor js iret test cltd fnstsw arpl cmpsb dec pusha shlw (bad) hlt sarl fmull mov lods clc mov jno dec push xor jg cmp push fucom pushf jo ljmp dec test inc inc rolb adc jg ret aam xchg adc sub pop mov cmc xor xchg mov jmp sub arpl jl mov int sub inc mov movq insb xor icebp mov pop push sbb cltd push pop xchg adc out rcrb es mov xlat mov pop icebp jg adc sti mov pop es push in lahf jg movsb adc aas pop push into aad (bad) pop inc fsubrl and sbb mov js mov dec inc jb sbb xchg inc adc scas dec dec or dec push je cmp (bad) pop push xchg xchg pop in adc (bad) and dec (bad) (bad) dec add inc insb jle gs or jl and addr16 or pop xor sbb lods jg (bad) dec test jg sahf xchg adc push cld xchg loopne pop dec mov mov ficoml inc push cmp fildll jg jp mov aam inc ret mov movzwl xchg cmp mov pop sahf nop int jg out adc jle push ljmp in jg jecxz or pop or sarl loop rorb lods xchg dec lahf jae aas mov xchg icebp ljmp mov xor cs out jg xchg mov clc (bad) loope jg mov add adc push adc pop mov repz xor push call jns mov scas jg mov ret mov and push xchg stos mov push les jg sub std add adc (bad) push jp ret and pop push gs add ds jg lea mov xchg test jg leave jo pusha dec icebp sar push stos mov jg enter inc divl (bad) movb inc insb sbb sbb in sub loop push pop sub icebp cwtl mov push ficomp push xchg std lods jg (bad) int3 dec mov jg out and ja scas loopne aas sbb testl mov cmp rclb sub jo into mov punpckhdq outsl jmp sbb add fbld (bad) jg stos fmul cld xlat add repz dec in jg ret inc loop jg jo nop jmp repz and gs mov aad lcall iret xor lds cmp mov push in mov popf pushf les push inc mov or idiv (bad) das sub shlb jg aas xchg add sbb sbb jnp jg cltd aas pushf rorb aas and mov inc (bad) pop jg mov lahf test sbb clc and test jb xchg sub add mov push xchg sbb fwait dec dec inc xor lea cs leave mov cld xchg mov jmp cli test ret insl xor lahf jg pop and jo sub jg aas mov sbb je xchg flds mov jg push (bad) (bad) jg leave mov inc mov jg rorl xor cmp (bad) cmpsl test xchg sub hlt in sti mov jne dec out jnp adc mov jns dec shll ficoml sbb lret jae mov (bad) inc sub mov dec inc jg push cmp mov mov inc jg adc je jg pushf stos sbb fistpl add idivl lods je and inc jb js mov xchg aas je xchg or ljmp lds jge xchg sub and push jns and inc rolb jo jg into dec shll divl jmp pop push adc jg inc in pop xchg addr16 jl nop dec or mov rorb insb ret or les mov and jno sbb mov jg push das gs adc insl repnz jg xchg roll scas es mov fist jg mov das sbb cmp mov popa jne mov scas push daa out mov test imulw fisubl faddp pop pop jo mov hlt jmp pop and (bad) fdivrs call or jg sub lret fucomp ss mov jge repz xor ja jg insb xchg mov jecxz jmp outsl fadd cltd mov je jp add sbb outsl inc int rorl (bad) mov rolb popf fmull aad xchg or (bad) jl mov std js add addr16 jg xorb (bad) jb jg arpl repz push ljmp lahf mov xchg jne (bad) dec mov stos inc push dec shl push mov js or mov pop pop pushf jg repnz stos sti outsb into imul cmpsb inc cld xor ret loop pusha hlt dec jns xchg jg fimull notb jg push stc or movsl adc sahf jg push clc push aas inc std (bad) jg xchg pop xchg mov iret jmp pusha shlb mov inc fdivrs or push mov jg fnstcw outsb push bound push loop and mov fldl negl mov dec pop mov jg jl dec in mov mov sbb aas stos fiadd push xchg jo xchg std fmuls mov jl jg mov leave sahf and mov shrl pop popa xor lret jg leave xor cli movsb call (bad) cs popf addr16 mov xchg mov iret mov push jg out mov add inc inc sbb inc inc out sbb jg gs mov pop dec jg push roll jo aam jg movsl pusha roll outsb test xor adc outsl out mov shufps xor jge fdivrs pop push aas icebp adc mov mov mov pop push pusha repz pushf sub push (bad) dec cli dec jg (bad) imul in inc sub adc sbb push jg in mov cmpsb jmp fcomps sub jge xchg sbb mov inc leave cmc insl lods push adc jle sarb pop or pop inc xlat aas push and repz dec sub dec rolb pop rep into dec jg scas mov or sbb aam cwtl imul cs mov push push mov jg (bad) icebp xchg mov jg xchg std mov sbb fnstcw add push mov fdivrp insb pop icebp jg mov lahf lock mov aaa aam mov stc jnp pop jo in jg sbb push mov fnstenv cli les js pop out inc movsl ret mov (bad) std push fisttpl aas (bad) inc popf sbb in push test adc sbb clc loopne es jle mov fdivr sub ret jecxz fisttpl dec mov les cmp add xchg (bad) (bad) mov inc jg test or insl xchg push pop sub idivl rclb bound xchg sbb jg adc cmp fbstp popa stos divl out xor pop test pop push pop cmp dec pop dec pop pop imul std insb cmp ljmp addr16 push add dec pop xor mov je xchg jg lea jle inc flds fadd pop cwtl mov in sbb mov daa (bad) sarb sub idivb or out dec push jge aam test testl popa fistpl lea cmpb xchg out jge in add jg pop lods cmp idivb push mov repnz mov sbb sbb das pop std aaa fisubl mov loop ja adc jg inc movsl std mov jl loope (bad) fisttpll fistl jp pop pop jg outsl (bad) arpl mov imul fldenv idivl cmp mov mov push push test imul (bad) hlt jne mov stos push jg das (bad) xor lahf cmpsl js leave in dec cmp or stos jge lret mov push sti cmp sub jg (bad) sub jle cmp pop push dec jno ret and jg add fwait push sub iret aas dec add lret inc dec pop jg ds test sar (bad) jg push cld loopne mov cmp or fstpt xor pop sub pop cmpsb shrl ss insl ljmp inc dec push out sub dec in pop fsubrs movsb mov bound call mov cmp cmp (bad) jnp jg cltd lock jge xchg gs push adc jg movsb inc fimul idivb mov in mov or inc cltd imul iret nop fsts call sbb sub out test xchg jno or xor sub jg mov cmp adc (bad) mov jecxz xchg inc test pop bound pop jmp ja jg loopne jge cmp jb add fidivrl jo mov adc and das xor mov icebp pop jae push ret js or and mov mov mov (bad) insb movsl mov pop cmpxchg rcrb or les (bad) mov shrb fldenv dec add push insl push arpl sbb mov inc jne sub cmc (bad) inc das popa and jg lret lret dec jno cmp mov xchg jmp mov mov (bad) addr16 pop xor lods aas dec pop mov shrl loope jnp push cmpsb pusha dec mov lret cmc (bad) xchg mov test cmp dec (bad) mov icebp inc push inc fs cld fcoml jg dec mov or adc mov xor jg data16 and jno jg pop jl xchg ret mov aas mov out movsl imul mov jp adc jg mov sub int3 fwait outsb data16 dec jmp ret imull cmpl cmp lock loopne and jae push mov push pop daa push dec cs popl push mov push jg repnz std and push or loope es sub jg adc fidivrl leave dec out fistp addr16 ficomp jg repnz add xor jg inc sub jg jae pop sbb push xchg inc sahf jg xor iret jns mov jp cmp daa add inc cmp (bad) icebp and stos pushf mov push ja outsb dec lret jg ret sti mov cmc sbb and cwtl mov aas cmp movsb test or movl xchg sbb cmp (bad) cmp mov das dec fs sahf js in mov out sub mov sti adc pop mov push outsb arpl imul mov cmp add sti xor xor jg xor pop mov repnz mov mov ss pop or (bad) fstl jg (bad) mov fnstenv popf jg and ss inc cmp jg lock cwtl cli divl popl jle dec movsb mov adc mov (bad) rcrb jg jne loopne mov flds mov popa ss (bad) xchg jb dec leave xchg sbb adc clc (bad) jg sub xor xchg mov aas inc pop cmc movsb pop xor lock mov dec jg pop or out jns test jae fsts shl fisttpll sarl daa inc xchg pop dec jo jg mov lcall jnp imul decl xor sbb ret jg push and fidiv sti adc jg ret mov adc push sahf fimull push aas scas jp negb add add idivl data16 add repnz dec jnp lods push loopne jg jle jge (bad) xchg bound jg mov ljmp adc mov push pop add arpl cli sbb pop leave es adc inc jp inc data16 push stos out fsubrl add cmc push xchg lahf mov pop test into jg xchg icebp sub inc sbb addr16 mov out dec js into mov repnz and je or jge jg push adc clc rcpps jg out pop (bad) push jg pop inc adc cmp jmp out mov js (bad) mov mov dec cmpsb jmp jae dec xor sbb repz sti pop and sub adc dec arpl inc jbe sbb rorl scas cwtl mov imul outsl popa jg es adc (bad) jne mov or fs push or fwait gs and dec loope test mov dec add icebp jg int3 xchg inc decb sbb pop inc pop jle sub insl jg xor cmpl mov pop mov cwtl jo sbb jg lods mov xor aas test in js (bad) icebp outsl xchg jnp pop shrb movsl repnz jns jbe insb stc call ljmp (bad) movq adc movsb jg inc sbb and cmpsb mov mov mov insb jno popa cmp jg adc cmpb mov divl mov jl xchg jmp jle mov dec mov mov lcall jg out push cmp mov jle lock pop xchg sbb aas sbb pop xchg mov sbb jle es pop (bad) jo mov pusha dec sbb jg inc test ja (bad) into mov pop dec pushf and xor adc jge pop les (bad) aaa push add jg movsl pop test jo jo push mov iret outsl sbb push mov jg mov inc pop mov jo push dec cmp popf mov sgdtl dec int jg enter adc xchg push push les in pop popf rorb jg pop (bad) dec lock repz fs and sub out stos push js out hlt les fildll cwtl push mov pop sub or mov jg push cmp or in adc rcll xchg xchg mov test sti jle inc cmp clc ss sbb dec jg mov sub pop ja push data16 addr16 lcall jg,pt int loop xorl jg arpl jne (bad) or mov enter sub pop orl and jmp sub enter xor xchg in mov pop leave jg clc out ret jecxz lods cmc xor aas fnstcw arpl mov insl mov xchg sub scas repnz mov (bad) stc daa sahf jg addr16 xchg pop inc lods mov fdivp add mov jg movsl imul rorl or lret in into xor sbb addr16 sarb fldt push mov add negb inc inc imul mov fnstenv js xor pop jmp lret cmpsb aam mov mov dec jnp repnz das mov popf dec or jg inc aaa imul pop outsl pop daa popa jae add (bad) js cmp or fbld mov ret mov cmpb push push (bad) sbb dec out lods (bad) call mov addr16 popa add cmp inc outsl jg insl sarb and std inc push dec mov mov lods mov call addr16 jg push aad in xor stc scas out cmpsl cmp fldcw faddp jno dec out fdivl addr16 lcall mov bound jg jmp pushf push iret ss or jg xchg mov pop jg inc mov test (bad) sub jg and fisubl js push sbb sub loope mov in mov (bad) mov lcall idivb movsb dec dec ja or stos rol loop ljmp in (bad) sti sub push jp loop divl jg mov add jl mov js (bad) xor jge shrl test repz bound pop jg test mov adcl dec dec enter aam lea ds mov push pop lods aaa js lock dec jge test push sub fsts push pusha jg movsb scas xchg add mov jmp push mov mov out push cmp rorb (bad) or sub dec push popf and loopne xlat mov jg push sub leave aas aad std or inc adc ds mov enter scas inc xor inc push mov xchg jg xchg mov pop repz xor lea pop (bad) (bad) arpl in pop aas lahf sbb mov and lods push call jno arpl add fbstp jecxz pop mov cmp fstp jg loope daa sub gs cmc pusha sub dec jg into cmp stos xor push jg pop sbb jg stos enter cwtl lcall arpl std pushf jp clc (bad) insb mov push jmp ja sbbb jg dec cmp test xchg pop pop lea push jg movsb jl aam mov ds sbb inc and rcrl aas push adc cs inc sub (bad) popa mov xor mov fstpl mov mov dec adc add jg fidiv cmpsl mov cmp inc lock xchg je aad xor adc cmpb test dec mov out pop in not lret out push iret in cld mov shlb sub pop test mov mov xchg jg lock adc xor ja sbb inc push xorb adc pop push pop cmp outsl sarl (bad) dec rorb ja adc sub jp mov (bad) jg xlat pop (bad) js lea dec inc mov xchg mov pop (bad) dec push jne xorb push push inc fidiv jge arpl inc gs xchg add popa xor xor xchg stos (bad) cmp cmpb xor cmp (bad) adc jg sub ds xorl loop mov jmp mov mov pop inc (bad) std std pop xor mov arpl aas imul or pop in stos mov push xor inc lods mov dec or push dec jg (bad) cmpsb aad out std xor pop lahf stos fmull mov cmc jne dec mov xchg pop popa aaa movb movsl ret cmpsb inc inc mov clc xchg into xchg (bad) fdivrl xor (bad) repnz test ss addb (bad) dec jg neg pop stos mov (bad) popf fsubs push lea inc sarb lea lahf xlat mov push jg in enter inc mov pushf or xor fldt jp jg test mov jg jb mov or imul (bad) rclb outsl dec repz jecxz cld popf jg mov sbb loope scas inc sti jno dec bound ja sub cwtl add pop mov inc cmpsl and aas xchg ficom hlt mov (bad) pop popf sarb mov xor fwait dec jg push sti sar push mov mov in outsb fsubrs in movsl dec xlat repnz (bad) jg int pop sti scas cli sbb sbb inc leave pop dec jae in mov inc aad jg out pushf loopne push sahf jg ss mov leave pop jle sub jg mov es add pop mov test add addr16 jg fcoml mov mov ja leave out outsw jg dec and jle or jg incl out (bad) (bad) dec repz xchg aas jns jge xchg addl xor pop pop pusha shrb jge aas xchg fldcw jmp mov imul rorb (bad) outsb ds and enter jg insl cmp jo dec xchg jg and mov (bad) imul mov cmp mov sub mov mov xor push jb test pop jo call mov fs aam push jg stos dec orl addr16 cmpsl inc jae hlt in jg in out cmpsb aaa (bad) jg ss jo stos push (bad) jnp sub jg lods fisubl aas fs jle addr16 hlt ret mov cmovbe push jg stos sub push jmp mov das cmpsb and dec sahf pushf lret mov mov jae cmp jno mov icebp lea stc jg lock test dec cmp add and (bad) iret jg jecxz repz cli mov lahf push pop call inc mov test mov push jg mull data16 (bad) jecxz jge pusha jg lods push sbb add out mov out cld aad pop ja adc mov fldenv shrb rcl je in in inc add or jg loope shrl mov cmpsl add jg mov xor testl (bad) xchg out das pop jge cltd mov push pop hlt lods jg fstl icebp push cmp jae adc shrl aaa sbb addr16 jg sub jg dec subps fstpt mov xor push and xchg imul cmp leave (bad) lods jg je fstpl mov adc sbb push cmp mov add lods pop mov (bad) pushl cld cmp aaa out pop (bad) jo adc jg mov stos sub test jg add push and jg inc xchg sbb scas jg aas fcoms add mov jae dec scas ficomp jg test mov cltd push enter push sbb decb inc mov orb dec jg lret pop jbe push xchg dec mov aam mov sbb xor dec xchg lds pop jg je jmp jg ljmp jg scas xchg cmp dec (bad) jg xor (bad) lods shll cmpsl rcrl das pop adc rolw fs mov jae ror jg pop arpl jg jnp cmpsl iretw mov popa fs sbb or in test pop adc inc push xchg jg mov repz jge sub sbb jg nop mov jne mov imul fst jg cmp mov insl imul in jns mov cwtl add imul jge cmp (bad) psllq aam mov adc stc decb adc je out inc std aas stc and loopne mov test arpl inc out insb adc adc imul mov movsl fnstcw lds jg jno lods incl imul loopne in popf or lds dec (bad) leave mov pushl sahf stc nop xchg dec loop aas xor mov ljmp sub sub push xchg lds sub aas xchg pusha xor jg adc inc pop mov fdivrl shrl divb cs lret out xor mov sub sti mov clc fisttpl in xor (bad) int3 pop inc jno mov xor mov popf jl mov cwtl mov dec popa in testl jae adc mov out adc ljmp jg dec nop lret scas adc sbb mov in (bad) jo movsb pop adc arpl stos (bad) lahf xchg add int3 jg outsl pop pop inc aaa dec cmpb add or lret popa mov push ror aas divb movsb dec mov sbb pushf jge and movb mov push jb fistl lret (bad) nop decb inc repnz scas mov mov leave adcb push pop rcll pop and mov pop loope xor lods mov xchg inc sbb bound popa fnstcw loopne lea mov jp xchg push inc fsubr jg test inc jg lods mov sbb or lods (bad) and jg add aas dec and sub shrb xchg dec sti (bad) bnd outsl sbb sub jg outsb subb insl movsl mov leave cmp insb xor lods or and cmp fs hlt push pop dec or mov ret xchg jo pop sarb test lahf jge ds into pop or test dec jg data16 fmull js aam jg scas (bad) cs jg mov and pushf or fsubrs repz mov fnstcw mov add jg js jecxz fnstsw mov mov pop ja mov jns bound lcall and nop mov incb imul add mov cld or cmpsb mov sahf push xchg sarl push jg push inc fimul repz paddb sbb xchg mov jle pop sahf std cli sub or stc aaa pusha mov fidivr jae lret insl adc stos js (bad) addr16 push push lcall mov test ja pop fnstsw outsl call jns insb sub xor inc dec jb xor ds (bad) hlt jg push psubsb pop pop mov jbe outsl aam mov jns notl enter stos cmp ja dec dec push pop sti adc jg adcb xchg mov cld sarb jg (bad) loope cmc xlat jg cmp push jmp lods fdivrl mov in pop and fs mov lahf sub sbb mov jg iret aam insb add mov sub jg jns adc mov adc nop je dec mov scas jg sub mov int3 pop dec (bad) aas psubusw xchg and jg aaa or (bad) in sub imul mov xor jg test dec or insl sub fwait mull sub jg ret je call pop pop bound jg ret mov xor movsb adc ds jae incb sub jl jg rclb lds xchg jns loopne jnp (bad) jno hlt pop test pop pop jmp jg xor decb (bad) lret push movsb bound and dec scas adc aas orb dec push arpl jle sbb push jecxz xchg cld pop stos popf addl movsl lcall aas mov mov pop inc mov aam scas stos adc adc mov test jne jg mov jb leave gs adc imul push pop xor fs and js stc lods pop outsb or jmp mov aas lret xchg mov xor jg and lock leave rolb mov add mov mov pop mov je clc or and add iret daa adc jg cmp scas ret icebp orl (bad) jp xchg jg in loopne ret jge inc out xor sahf daa ret cmp (bad) xlat jg mov stc icebp aas mov mov inc sbb pop lret xchg mov mov addr16 ds push aas cmp xor xchg mov loop dec jae outsl mov sar lahf out jbe jg sbb mov dec mov std hlt mov push stos jo sbb inc add pop jg push inc xchg and push sbb mov das hlt push xlat jle std add jno and jae cmp pop adc ret aas int3 lcall arpl jg pop xchg dec andl jbe nop mov mov sub in pop xor fdivrl mov sub mov daa (bad) lods jae sub bound lock sbb pop mov adc imul xor mov pop lock nop jg clc inc push sahf lea pop xchg std inc mov sub scas pop mov add in rcll cli jg xchg rorb lret jo mov mov addr16 andl push pop das pop and jno std push aam fwait jg,pn out pushf mov jle dec jg adc pop inc xor stos mov lret pop pop das cmp imul ja arpl jg mov or mov (bad) (bad) pop js lock cmp sarl xchg pop dec aaa mov cmp popf ret xor pop call mov xchg lret int3 jg ljmp js sbb iret scas pop ja cmpsl popf jg into ja sub (bad) jl out (bad) int3 ljmp sti int or test (bad) mov call xlat movsb mov add xor stc sub cmp mov mov jg jl jne arpl mov mov dec dec add mov jg dec inc jnp mov jge test cli (bad) fucomip mov add mov out mov push xor dec mov jg jbe insl xchg mov cld mov cmp inc gs jno xlat int (bad) sbb jg icebp and jns cs lock jg pop scas jnp arpl jg (bad) jge xor fs sbb add jg mov mov jg sbb repz inc cmpsb cli mov outsb jg mov mov lcall in adc jp (bad) dec jg push insl andl mov inc movsl mov add hlt dec lcall cmp faddl inc leave sti push cmp or push lods roll sub (bad) mov lock add popa mov lock xor mov push pop mov iret mov lahf push and mov inc cmc aam sbb jg loop jmp mov fisubl cmc les outsl in mov jp push mov lret aas es fisttpl mov dec sbb pop jg imul xor push in addl jg mov out int3 pusha adc aam scas dec pop dec lea dec sbb stos (bad) mov dec xchg sbbb cmp add scas adc push jg rcl test and dec xchg out fidivr mov pushl enter cmp into jg jne jns sahf pop (bad) jg fnsave xchg int mov jg gs lret dec mov adc and sub cmc loopne test xchg fwait inc call insb jbe repz pusha add push cwtl lahf cmpsb cmp aaa fnstenv add pop xchg add jmp mov or out dec push clc mov ss xor push xchg cmpsl jo lret les outsl aam cmovno jbe js lods stc rclb jno push enter insl out push mov rclb xchg jg arpl imul push lock lcall jg int3 xchg jbe jg mov dec (bad) fisttpl rcl mov repz dec rcll lea cmc dec enter pusha and jg popa mov jg fidivr scas jg lret xchg sbb jg inc mov cmpsb mov jmp mov mov jo hlt pop mov aaa pop sti jl dec lods dec xor insl stos (bad) jg pop mov mov cmpsl mov in decb addr16 xor jg push test jg mov leave pop mov (bad) adc inc in jg les (bad) mov es xor (bad) sbb rcll mov xchg sti jg insb or dec pop mov adc inc jmp mov or div or repz mov sbbl rcrl ds out mov jmp mov sbb inc lds int test sbb cmpl fwait sub notl (bad) pop popf and jg aam icebp dec push sub imull lea jg mov cmp jg hlt inc sub cwtl xor jg aas data16 mov fld add inc mov mov inc scas dec sbb mov xchg stc inc sbb int3 push pop mov fmuls dec and jle cmp mov push jg lret mov in jg call push sti lahf push xor stos jb (bad) call add lahf inc cltd jg ja jbe jae mov and mov lods loop jg loope (bad) pop cmp jg aad test lds stc or movsl or les jae pop iret sbb cmp push int3 insl imul ja mov scas loope jbe lcall imul inc mov lret test lods inc jge pop jg cli addr16 adc cmp and stos pop addl imul mov inc jge in out and test pop jbe mov lods jno arpl adc arpl je mov sti pushf sti cmp movsl pop testb xchg popa inc mov in pop mov mov clc xor jnp inc cmpsb stos test dec jg jb cmc bound sti and adc movsl outsl loope leave jg inc hlt testl xor mov outsb jae aaa mov jg mov cld jge adc mov pushf repnz jg mov jg mulb in stos call xchg xor inc jne negl daa xor mov pop ret mov (bad) leave or sbb imull sti jo lea std mov (bad) push out inc dec cmpsb fcoml jae inc jp pop ds jg aad fs insl jg mov push (bad) lock jg cmp xor push aas jno sbb mov jne dec pushl in jo dec outsl jle lret mov mov push shlb jg mov xor (bad) mov sbb push jg adc dec add outsl sbb aad fucomp push enter daa or and arpl movsb jb repnz push imul jg or outsl push mov jae aaa insl add pop jl add out jecxz dec pop inc mov jno push inc iret cmp mov hlt imul mov mov in dec adc pop (bad) scas movsl push (bad) outsb mov je outsl orb addr16 mov loop cwtl (bad) mov jno and sbbl xorl cli dec shll outsb (bad) in loop jg mov addr16 test loop jg in and jg (bad) ds push mov sbb adc adc adc rcl xchg les dec adc aas push xor mov adc dec loop jg cmpsb mov sub add push mov addr16 lods cmp fldt sbb dec mov push or push subb jnp (bad) out adc sub rcrl je and add arpl push inc ret ja ret pop mov pop push xchg arpl pop cmpsl aam mov lods jg,pn dec cld call jg jecxz loop xorl lods xchg ss mov loopne movsb mov popf jg sub in or into mov popa mov aas (bad) lcall je mov mov pop sub sbb jg call mull mov xchg push mov xchg mov (bad) js add add inc cmp mov mov push xor xchg jg outsl pop lods movsl sti fdivr jg lcall jg das lock push enter outsl inc mov ret mov mov mov or mov cmpsb mov pusha dec (bad) sbb pop loopne push adc daa xchg popf and outsl insb xor fnstcw cmc add (bad) (bad) jg rol xchg mulb mov xor xor mov repz cmp mov in js cmp jg nop add push mov sbb popa jg int cli loope (bad) fistpll xchg pushf cmp jg xor cs gs lods jg pop jmp arpl dec sarb (bad) scas add mov imul add (bad) inc fstps mov inc jg aad test cwtl push and rcl inc push jg repnz cmp fwait adc orl imul fst imul or jg xor push inc ljmp push adc pop int3 dec popa jg movsb (bad) xchg idivl jnp or stc daa js push pop dec inc push sbb lock test sahf cs dec jg loop adc jg mov ss mov push adc fisubr push mov or aad int3 cli jns cwtl sub push aas inc data16 bound inc mov xlat or xor repz aas sti das xchg push addl cli inc arpl ret xchg mov inc stc cmp push hlt jge fisubrl aas and or mov push push ret jg movl mov rclb fwait and lret lods je in inc rolb rorl jno pushf ret jb pop jg cmp mov mov sbb jg rol add in push push adc mov xchg dec inc jg sbb push movsb (bad) shll sub jbe hlt ds stos outsb test test (bad) mov pop jle imul cs sub out repz pop (bad) icebp aaa dec jg mov push jg sbb fidivr push mov push repnz inc dec xor aas mov add or jae pop jg push add aas inc clc lret jg inc dec dec mov dec (bad) jg adc loopne mov xchg fisttpl sbb mov mov orl cmp cltd inc jg ss push insl ja jg (bad) push aaa lods xor out cli addr16 mov dec mov cmp mov (bad) pop pop xor aas add testl inc adc mov pop jg scas push in xchg nop mov ja cwtl gs jg das fcomps mov enter sub jecxz xchg add pusha mov or sbb lea jg sti (bad) sbb and jmp (bad) mov inc adc add jg add ds jg push push mov lds pop jg ss inc pusha and pushf daa mov test sbb jg enter sbb jg xor loop mov push insb xchg push push dec jg sub mov mov pmaxub xchg mov rcrb dec pop or pusha fnstcw icebp cmc add ja xchg jg add aaa (bad) rclb (bad) jnp ret jg dec mov inc aas outsb mov and fnstsw daa mov mov int mov pop pop dec mov loop mov outsl or jecxz mov jg jae inc fsubrs and jg rclb fwait sbb mov jg or arpl pop jge shll loopne adc and popf jg js push xchg adc sub int xchg aas mov (bad) mov push jg mov mov inc sub movsb mov sti insb adc jg sub lea test xor jge pusha jp mov sbb aas (bad) push sti inc mov jg movsb int and fcomip cmp outsw loope scas ja jp inc std jmp addr16 jmp jg cld adc add test mov cmpsl ds add mov inc loop jae mov arpl andb and sti push cmc xor aad rcll (bad) adc mov dec outsl xor aas jle std loopne sarb sub mov inc jg xor or jo stos scas sub inc pop ficom (bad) mov pop dec mov mov js mov movsb jg inc pop repz popf xchg stos jg (bad) aad cli test jg inc inc ljmp sbb jg adc jno dec cmp mov mov xor stc enter jg out das (bad) dec jp jg hlt jmp sti lcall sub add dec push jg mov jle jg lahf adc mov test hlt test ja das addr16 dec dec pushf or jnp fisttp cmc sub dec test daa popf and xor fcoml (bad) cmp inc jnp (bad) jg das stos into je push clc aas cmp xor jg inc addl jg jp fs sub jg xchg or lds or mov adc jg loope imul insb repz inc sarl xchg lock push jo jno add fsubrs popa (bad) jg arpl imul pop scas add jg je pop sti jbe inc in jg fistpll xlat dec ljmp mov jno jg lret daa add mov cs pop mov jg lea dec clc add jg dec push fisttpl inc mul movsb in outsl inc test push insl js cmc sti leave popa add jge fbstp outsl arpl inc stos jg or shl push not jg stc pop mov lret fidivl aas sbb adc mov sbb lahf sub mov in js mov arpl pop xor mov sti dec leave xor cmp jg mov mov mov ja dec adc sbb test outsl ret jg out imulb add jg inc jp xchg adc mov int mov push lcall in lret jg out enter jmp and mov xchg outsl mov movsl inc pop xor fdivrl xor cmpsb cmp nop and fadds jg subb xor je jg movsl aaa rcrb mov in pop movsb sbb js mov test (bad) mov std ds int3 mov add sahf fdivrs push mov fistpll dec repz lahf mov push jg cmp lods loop sti outsb add daa jno into test dec dec mov idivl adc mov mov je in cmp jg xor xor mov nop push dec out jg pushf clc fsts dec sbb (bad) (bad) sub mov jg int3 inc ds scas push xor inc sahf jg pop xchg fadd ffreep das mov iret fcoms sub inc jg pusha cmpsb aaa imul lcall push insb mov int3 sbb or fs (bad) mov xchg dec mov andb inc adc jne add jmp fisubl scas mov cs sbb js pop (bad) pop ljmp dec or mov dec xor sub mov sti aad addl daa mov xchg (bad) negl jns sbb jle fimul xor jg cmc pop enter clc sti (bad) or inc xchg add nop or jmp mov jg jb call jg mov add outsb xor pop jg cmpsb inc or ret hlt jg out (bad) stos cmpsl inc mov mov jb movsl pusha ficomp stc adc in add mov cld repnz sbb es iret mov mov or jns push push xchg hlt mov mov loop jmp mov jge pop fisubrl mov lock adc pop mov xor jg cs int jle js and dec dec jbe dec jg in cs sbb repz pop movl inc jg sub sbb jg pop lea jg or xchg jne idivl fucomp outsl lock dec es les mov sbb mov and outsb insb adc cmp adc push pop push pop jg fmull stos cltd and pushf cld xchg cmp xor cmp dec jg std sbb sub cmp daa mov xor pop dec out sub addr16 in mov rcll add sbb mov (bad) jno pop aas lahf dec sti ficomp or repz jge dec xor gs das fwait imul popf cli jnp dec jge mov pop mov scas dec inc jg pop lods or jg cmp dec jg inc xchg xchg add mov mov sbb push jp xor xchg lcall mov jg (bad) je jno in aam pop dec outsl lahf fbstp stos jg jo mov ret imul adc inc push sbb rcll pop sub out xor jmp sub sbb (bad) lock test inc inc push jg (bad) adc movsl inc sbb jg jecxz pop mov fstps aas test aaa pushf les jae mov vpcomuw push mov mov nop mov or pop in inc push and jno cmpsl cmp jg fild or dec mov push pop shlb aad repz pop dec pop popa push repz addr16 lods ficompl (bad) dec cwtl in xchg (bad) push jbe jnp jg cmp cltd cmpsb call jg loopne repnz ja push jg jl int3 (bad) jae mov daa and dec pop enter cmp nop cld lcall flds pop lahf cmc push mov aas pop dec daa lea aas inc leave in out mov add jb movsb jg jno cmpsb add push adc dec fdivrl mov jl push inc cmc jg dec pop xlat les cmp call jb addr16 mov jg mov out jg adc iret jg inc lods sbbl jg xlat jo adc test jg pushf mov mov (bad) fwait mov push movsl (bad) in xor pop jg scas mov (bad) lock stos pop in mov outsb pop imul int3 sub jle jno (bad) lock lret xor jg add int3 shll ficompl or push jg mov loop ret jg scas (bad) popa dec add pop outsl les out dec or aad sub pop insl jg clc sbb and lods adc xorl cmp cmp test mov add sub insl ret add lea xchg xchg xor jns in dec mov or pop mov mov enter or idivl push loopne jg lcall inc mov push sub jg xlat int3 rolb (bad) jo xor dec data16 cmpsb pushf in dec adc pop pmulhw push dec or fiadd dec loopne insl mov pushf aas scas mov inc xor jg mov and pop pop hlt jg pop push jne std push jg sub mov xor add lea lock in lahf bound sub ror inc add xchg jg cltd jl pop sbb hlt dec jnp aas jno mov dec dec mov mov popa cmp xchg mov mov out in ljmp notl pop std inc nop mov test xchg (bad) sbb mov jne data16 inc int3 addr16 lods jg cmp out push mov (bad) lcall popa pop cmp jg fimull xor xor insb in jg ds mov aas sbb cmpb or xchg dec roll xchg jge cli in (bad) jg pusha outsb ss pop mov aaa sahf fisttpll push cmp jo add dec loopne mov push sub aaa mov pop enter lock sarb fist fild rcrl dec movb sahf test adc push jg aam adc fadd mov loopne or cltd mov addr16 dec sbb out sub test roll das mov or sbb xchg addl push xchg arpl xor out xchg into push add aas jg popa add mov and sbb and clc jmp push mov rcl xor cmpsb pop xchg lea in mov rorb cmp incb hlt mov jg cwtl xor and insb das ret push pop mov adc fdivrs fisttp jle adc js sbb rolb ss mov pop dec jg push les mov fidivr jmp xor out addl push ljmp cmp xor in sbb repz aad cmp cld dec and mov sbb jno inc jg sub pop andl aas dec fidivr add mov mov fistp mov in cmp aaa sub fdivp mov call test mov lret push aas sbb mov inc jg imul cmp fwait test xchg jbe xor jg sarb fsubr jnp mov das inc dec xchg es stc stos ret xchg push mov out jg cmp lods and add jg cmpsb mov rcll mov into jl leave sti sbb sbb inc xchg dec jae jg scas in xchg pop insl daa mov inc jnp push rcr scas jg nop lods mov pop test inc in test aas enter and xor xor rcll jg adc nop dec jg sub iret aas push lahf xor mov aam xlat sbb inc (bad) pop mov pop push jg andl daa mov out mov movsb xchg sub dec push dec (bad) loope adc scas jmp mov mov mov or or and cltd sbb jg jbe loope jo int3 jg test pushf or jg push andl dec test (bad) jg xchg wrmsr sub mov push mov (bad) repz dec mov xchg mov jno addl mov or cs cmc mov mov xor lahf mov (bad) mov inc mov das int mov idivl fdivrl mov add sbb scas pop es pop mov aad jg out fisubr sarb mov lret fsubl mov jg jmp and jbe cmc imul out out decb xchg jg loopne rcl sbb and mov inc lods or and mov test jg divb add popa mov rcrb sub test cmp out cld lds xchg xchg or mov iret rorl jg cwtl cs mov pop jle adc mov stc mov ret xchg insl adc push mov mov dec or or add jle jmp pop aaa (bad) mov jg push jae xchg xlat loopne jg sub mov inc inc inc test push mov push mov adc pop int ds mov pop jmp cmp jno (bad) pop add aam mov dec clc jle jns jle xor leave or xchg mov add jg cmp lret jno xchg mov push inc iret jns test cli jbe xchg jg dec cmp les mov les cmc lahf adc out mov test stos jg push arpl mov int aas push pushf sub cmp jg jmp sub orl inc js xchg inc std imul out and adc or add push mov das fdivrs vmread lret dec jg sahf mov pop or mov pop mov push cli dec insb xchg adc aad rorb inc jle cmpsl test dec cwtl lods push leave inc xchg enter mov lock mov aas xor cmc in movsl (bad) jg fdivp mov sub das mov mov fdivrs dec jp mov scas sub call fmulp pop aam incl inc fistp les adc insb xchg imul enter lods pop fisttp mov sahf and stos test in cmovno jg bound sub int ficomp add pop bound xchg insl psubsw shlb jg sarb fnstsw fmull add dec push in aam out aaa cmova and adc jg lahf fimul gs xchg sub push fadd addr16 out lods jg cmpsl sub fild incb ret push pop jg xor mov or jl fsub lret mov mov mov xchg pop (bad) jo or aas cmc fdivrl movsb dec cmp mov dec cmp xor in xchg cmp (bad) jg mov ret sub mov scas aas (bad) jg outsl bound in cli mov aam loop out mov cmpsb sub mov lock xor push (bad) sbb or fwait push hlt (bad) ss push sbb out fild jg lods pusha cmpsb sbb inc jg insb aam xchg pop (bad) pop int cmp jns jmp and movsl addr16 mov fdivrs cmpsl hlt jno jg adc das notl inc jge lea sub pusha int3 sub aas insb (bad) or push (bad) test outsb sti ljmp sbb icebp repz data16 xchg pop out jl ret lock add or xchg not mov jl std test jg pop cmpsb or jae or mov pop aad (bad) ficompl push jg js sub cmp fsubs jg mov jp jg mov xor mov xlat push (bad) out or and jg mov dec sarb jae outsb (bad) mov popf jnp mov add ret in adc aas inc leave jg mov mov pop adc mov inc sbb or lods aad insb dec ljmp jecxz push icebp inc aas mov das xor and ficoml xchg test mov sub jle pop push es mov clc rorl and test pop out mov adc push xchg pop jg rcrl outsb arpl lret test clc mov dec fist sbb into addr16 dec mov xchg jg pop (bad) shlb das push vmovdqa std cmp jae stc lds scas pop jb or jg inc jne mov rcll addl dec inc movsb gs loop sub imul mov xchg xchg cmp jp (bad) lock push xor adcl add pop in jg fstl fidivr and jecxz xchg jg pop popa fwait lcall jns sub iret jg,pn pop rcr dec es idivl imul pushf (bad) in adc jne aas push (bad) je xor stos jo dec pop xchg xchg icebp add int3 ja sti sbb sub pop inc jg jmp sbb sti nop mov pop lahf sarb adcl popf insl (bad) inc xlat jg mov lds and xchg dec js jg jns jb pop call enter out ja inc test cmc mov xchg jno fstps sub int daa mov (bad) push xchg or xlat or cli pop aas pop dec fwait sub mov mov mov sub mov pop jle xor daa movsl dec mov loop mov pusha xchg dec test jg mov mov cs jg xchg mov pusha jp clc jbe popf xlat sbb dec lock sahf pop sub cmp fwait adc cld pushl xchg jg jmp ja adc mov push inc rcll rcrl adc xor loop dec arpl lds jge,pt jno outsb imul incl push lret push dec cmp push xchg rcl mov inc data16 ret inc pop add cwtl rcll push sub movsl ja pushf xor jg faddl pop loop aas or (bad) (bad) lcall sbb repnz adc sarb loope jbe pop fcoml push js ficomp je mov roll jg pop test or adc jg test stos jns ret mov inc jg lret bnd lahf xlat cmp mov mov scas pop push int3 outsl (bad) mov pop cmc mov ret idivl xchg pop or int push jg cli cs jae mov js lods fisttpll pop out out cmp or mov add cmp mov jo insl sahf andl in xchg pop cmp sub mov les sti (bad) xor xor jg (bad) fidivl mov loopne je inc mov push into lret adc sub out jno pop sahf shl jg arpl fwait inc (bad) gs mov js cmp test ret (bad) jg sbb jmp mov arpl insl cmpsb push nop fsts fdivrl lahf or pop fwait xchg sub or mov inc aam (bad) lds jp pmaxub jae jg lods xor or adc jae mov nop jb mov arpl aas inc mov and lahf jg pop xchg fstpt and jg sbb xchg sti sbb jg mov iret jg pop fstpt jg cmpsl dec rolb xchg sbb sti jg jbe nop popf cmp pop fcmove push xchg out jg add push adc cmp and jo pop shlb sti mov xor push cmpsb jle dec inc sub movq dec xchg and into cmc or add push jg out jno addr16 sbb sar gs mov lahf xchg adc outsl push mov andl add cmc push mov adc sbb xor push mov ja movsl inc xchg jg int outsb pusha xlat or xor sub mov jg lahf (bad) out dec adc fnstsw and rolb fdivl xor jne rcrb aas movsb mov mov mov or adcb out pop sbb call aad sub inc jg xchg dec push out stc fnstsw mov lods sub scas push add and inc mov add xchg loop mov xchg sbb movsb mov cld inc mov mov and sti xchg pop sub ja sbb lcall test jg movsb sub sbb pop pop sbb fdivl mov lret dec cmpsl push lods fisubr btr jg stc insb add jg push push xchg int3 cmp insl pusha out push push rclb add test sahf lar add lock inc pop mov test cmp aam jg (bad) das rorl mov mov fidivrl (bad) je subl imul into enter jg sub fidiv test jg inc dec subl jl add imul adc in and jg imul out (bad) push loopne and mov test rorl pop dec vandpd cmc mov les mov jg cmp (bad) add dec fisub mov mov sti dec and mov addl inc idivb movsl and jg cmp repnz jg dec fisttp xor sbbl cmpsl sbb jg jecxz inc fnstcw daa push jg mov out inc push cmp add push and xchg dec mov sbb sub mov add (bad) jg movsl popa cmp std lret jno test push cmpsb sub fs push sarl fwait jecxz fsts out gs pop inc ret loop (bad) jg pop xchg dec adcl mov adc pop test adcl xor outsl jg (bad) enter pop xor mov in addr16 call xchg cltd push movsl gs push inc sahf insl mov fxch test cwtl test jg jmp xchg cmp cmp ret push mov xor jne aas or inc and lret jg scas fbld js inc cmpsb sbb pop je stc sahf or pop arpl jle jno jg mov sub out or cmpsb cltd int3 aam es inc xor jg or jg movsb xor cld repnz cmc (bad) leave jg int3 scas into rsqrtps jge dec inc jne aaa popa outsb mov insb stos push jg out sub mov push adc jg xchg out lea push stos aas mov lds dec loop mov xchg aad jl cmp fistpl inc outsl pop and loope jg mov lock pop test rcrl sti jmp dec out and sbb js jg xchg ja bound inc sub sbb mov jg iret movsl cmp pop stos popa jg dec aad cmp stos or inc push int3 mov sub out rcll repnz xor lret mov or lock pop pushf repnz int addr16 jmp aam (bad) pop or adc inc ficompl xchg dec call stos jg in sahf shr (bad) hlt int test mov stos (bad) sbb outsl pusha test sahf (bad) jg mov jp das jg mov in and popfw leave (bad) bsr xchg cmc iret mov (bad) jo xchg int3 sub jle push xchg stos addr16 sub push jg (bad) leave xchg fwait mov and dec jg or lcall mov mov xchg outsl jne inc scas jg (bad) hlt (bad) jae xor mov push adc (bad) scas lods arpl push sub lock (bad) pop and fidiv jg mov inc rcrb jg insb lods inc ficoml jmp xor adc rorb imul inc dec adc inc sarl popf repnz xchg (bad) aad jle repz and jg cmp lea jg mov jbe xor je int3 jmp nop sbb mov test mov es pop mov je adc xchg pop call movsb jg into stc inc mov clc jge pushf les fidiv mov mov ja sbb int popa jae xchg dec add scas test cmp ja in jnp mov lcall push jg ljmp jg cmp dec mov sub (bad) movsb jg sub cmp mov jg jne jae sbb cmp je jne cmp test movsb add jb aam add sbb mov xchg out inc das std inc cltd mov insl mov jg xchg mov pusha addr16 mov sbb rcrl and icebp loope arpl mov gs sub stc fs lret xchg mov jg adc mov push jns add and inc xchg and aas sahf loop or jp mov loop jg push out or mov cwtl or mov lods pop push sbb arpl cmp jb fildl jg or sti mov jne mov mov cmp cld cmc adc into popf and pop sbb mov or dec scas jge jg add ret out mov (bad) dec sti xchg xor scas xchg sub mov fwait dec mov pop sub fcmovnb pop shll xor jg loope insb lcall js icebp xchg adc jg rorl ret in jg jge sbb out insb pop rcr outsl push push mov jg xor sbb jne into inc fstpt test mov pop and mov lcall mov int test out xchg sbb insb aaa jg dec or roll dec jg je rclb mov pop mul dec sahf cmpl jmp xchg or (bad) sbb jg jmp out sub out lods mov xchg ljmp xchg cwtl addr16 fs mov rcrb add jns and jg lahf stc cwtl stos (bad) jnp mov push adc imul dec ds mov cmp xor mov pop mov xlat imul adc test rep xchg pop mov jg pop mov jle,pt data16 cmp lock and fwait add test pop jge sbb and sub outsb dec stos in jo mov mov test lods repnz dec add fsubs xlat jg jnp addb mov rcrl inc jne jg std pop cmp mov rclb subb cmp mov pop jne fwait push push jg es lds in cltd cmp subb jg mov add aas adc inc and jno (bad) sub pop int3 incb (bad) iret out mov inc dec sbbl outsl imul add scas loopne mov sub fild (bad) mov jae xchg and int3 mov sar xor mov xchg jg (bad) repnz xchg ljmp adc lcall sbb mov jle imul dec adc leave bnd or xchg push dec popa cmp outsl insb stc pop mov movsl pop imul sti jg push xchg jg mov arpl xor jg insb and repnz dec jg (bad) leave pop add std rcrl sbb jg xchg mov shll or lea inc imul push loopne mov mov jg sub aas sub insb push jg pop mov mov push lods jg mov mov ljmp test jno jl es idivl lret in mov mov cmp sbb jg or sub add sub push adc xor pmulhuw fwait push aaa sbbl cmp mov xor and ja jg mov cli dec outsb out outsl mov out mov pop mov or loope imul dec add sub pushf or repz test leave cmp push pop gs cli push out xor lret adc aas sub leave jg (bad) pop cli fsubrp jo jg mov xchg dec lcall adc fs imul je mul scas jg pop adc sub adc sub adc lods cmpsl cmp pusha scas dec add cmp (bad) xor mov (bad) dec (bad) cwtl jg push cmpsb or mov in test xor or mov pop outsl out movsl mov int3 dec push mov data16 movsb stos inc sbb jg adc call inc lock inc xchg outsb xor shl jg (bad) je jno aas push aam cmp and dec xor mov dec nop fndisi(8087 inc pop add xchg daa movsb mov ja sub pop popf jg push jmp shll jae addr16 adc pop jg repnz xor or aad xchg inc cltd pop jg cs scas or cmp jp mov jbe inc lds mov adc repnz xor nop (bad) iret (bad) sarb loope int sbb mov and sbb mov push jg es jns test imul xchg cmp push mov pop push scas call or aam sbb push and gs jge fstps jae fdivrl adc jg ficompl out js add call fwait jg aad sub gs push mov ja ja inc adc push mov cmp mov and dec or mov mov cs push jnp sbb cmpsl movq and aas mov fdivs mov jp mov and sbbl loop or and pusha hlt cmp pop pop fadds movb mov je mov clc jg ljmp jg add xchg jmp leave shl adcl decb push sti ljmp int iret imul ret es add shr out stc jg pop xchg cmp push das sarb xchg pop inc cmp sbb stos arpl mov lods imul scas jno xchg cmp mov gs je jg dec push inc clc vmovdqa lods mov outsb sahf cmp out out adc sub subl in cmp mov cmpsl and xchg out mov sub popa jg daa inc out push clc jg test dec mov pop fs mov mull ljmp lods push inc mov jg jp xchg gs jg out xor and mov push xor sbb push (bad) mov (bad) jmp ret mov push (bad) mov popf loopne jno add sub fdivrs xor and lds inc and dec jg (bad) mov stos loope (bad) aas pop fwait popa mov push mov adc and jg es cld test test imul fs dec cmpsl sahf mov int xchg mov pushf xor adc lds insl mov jg mov iret cmpsl loope lock fistl sar jg sbb mov jg push sbb push cli aaa mov push push inc in cltd jg xor ljmp pop xchg in out (bad) or jg (bad) sti mov cltd cmp xchg dec rcrl or xor push xor push sub fldt jg stos add movsl mov cwtl and push jg,pn sbb xor xchg icebp imul jg xchg in loope test cwtl push mov nop add jbe jg mov sbb cmp or dec xchg outsb add bound mov fisubrl push mov out ror fidivr and jg dec or xchg (bad) divl push sub or add mov clc cmpsl inc add mov xchg sti (bad) ud1 dec lds jns xchg add jg mov adc outsb jmp cmp (bad) adc pusha fildl pop test ljmp mov inc addr16 jle pop ds and idivb outsl nop sarb adc (bad) jecxz cmpsl mov das lahf adc sub push jmp pop jg jp mov fldcw or (bad) mov bound popa lret pop jg mov push cmp mov push pop cmp push mov cltd stos idivl xchg repnz dec mov imul add push jnp xor jno lods aad lret pop pop mov aas sub push insb aam jg repz ret cmpsl jg jl jmp mov mov cwtl in sbb push (bad) xor cld jg call into jg stc push or fwait push pop mov ss cmp and test jg jne stos dec or jg in xor imul jo inc leave lret push or push lcall jg xchg dec jns fdivrs push dec ljmp mov mov dec lock leave dec out imul xchg cwtl mov aaa jg cs sbb push jg rcl mov and jns lahf jg push or mov shlb stos sub lret push jg xor jecxz jle aam sub (bad) popa xor and jg imul fisubr cli icebp lds shll push ss push pop outsb jg aam jge mov pop push sub addr16 test popl daa nop subl shll sbb pop fnop jg aaa push fiaddl push lcall jg push dec fidivrl cmp xchg jg cli or jne outsl scas clc in mov and (bad) iret rcrl int3 adc sti fistpl cmp dec and decl loop rorb or pusha xor jg pop scas (bad) testb and test pop fwait mov mov push punpcklwd mov jge inc mov jmp popa push jg inc sbb in aas loope mov out xchg in (bad) popa push jp adc jne mov push scas xlat inc jg pop lds pop mov mov fidiv fnstsw mov or xchg cmp pop std xor dec mov lods inc lds jmp int3 in push mov cmpsl xor cmc les fbstp add push jg dec mov lea aam dec (bad) and push jg in mov aas (bad) push push stc jae jno and pop neg addr16 inc push dec jg mov mov sub or std imul cmp jg (bad) mov subl push mull mov shrb fdiv lea pop fimul fnstcw sahf sbb fcmovnb jns xchg mov test idivl shrb dec loop jg sbb cmp xor mov icebp and mov mov js mov sbb test in in mov (bad) lret mov shrl mov fildl repz jnp xor mov dec (bad) sbb jg pushf cmc adc or xor arpl movl andb jg mov xchg es insl loop outsl or fisttpll push and dec inc cmc jg push lcall add out sti xchg and cwtl ljmp mov lcall lock (bad) mov scas and jg faddp movsb push and push mull shrl imul es inc lods jg out arpl cwtl jnp mov cmpsl movb push xor cmp dec movsl cmp jg push das pushf sahf xchg nop sarl iret mov xchg mov jg (bad) outsb cmpsb push clc push mov mov outsb stos jg shl push bound push jg mov into aas add enter es out bound cmpsb cli (bad) mov xchg mov sarb sbb inc mov sub aad jg add xor jns add xchg addl push inc mov test mov jg insl dec fist lods sarl jb mov jg or pop pop dec or jg mov mov jg sbb or add lds mov jno sbb aas mov dec sub mov or jg vpaddsw lcall rcrl out (bad) and xchg adc mov jg int3 inc imul mov add cmpsl jg adc cmp rclb and sbb mov pop inc rclb jg jnp mov jg clc mov adc enter jl dec adc movsl and push jmp mov out rolb movq in lahf jg xchg or or popa push call and jbe xchg maxps daa inc xlat jg addr16 repnz aam cmpsl or clc mov push mov and enter dec lcall mov into leave jmp sbb sti pop push push dec pop fsubl jnp dec sub arpl or push loope inc outsl dec jno push push add cmp pop xchg insb fdivs lods dec xor jge push shl cld movsl push jg into fnop mov shlb ret jg sbb jp add jg xor and out jg adc sarl mov in push xchg mov jnp out xor jmp aas loopne ja sub leave dec dec popa mov sub inc sbb cmpsl jg movsl inc pop jae fcmovu jg out push stos jb xor and sub adc shrl sahf jge jg jo push xor mov fisttp xor jg ja int3 ret and mov popf xchg mov lods test mov jg daa xchg and jo (bad) enter sahf je mov and (bad) mov rcl cmc inc jg arpl fisttpl popf jno popa cmpsl inc (bad) jg lods sbb fcomi movq and addl aas jne loop xchg int3 cli inc test jg sub push xchg aas pop push (bad) jg and insb aas pusha and and sbb or jae iret adc dec xor xchg test mov mov out inc inc jg cwtl (bad) fiaddl repnz dec call jg or lods inc jg js jp xchg xor jg jle pop mov popa jmp jne insl sbb adc sub or inc mov imul movsb push jg das int3 adcl mov mov (bad) mov or jg push mov mov add leave jbe loopne push and mov push fwait (bad) xor sbb clc mov jg loope or lods pop js sarl aaa lock cmp mov (bad) out push sbb sub jmp jg lret and pop rcl inc out dec xchg aas push test add stos mov cmp nop jg add dec mov out sti mov cmpsb push pop xor adc cmp inc jg fist or (bad) cmpsl mov stos fldl and lock adc outsl adc pop cmp inc xchg jg cmp clc xchg jecxz es push xor xor jg inc test add jecxz jg stos lock ficom xor mov cs sub dec jl jg inc ja mov mov stc pop push mov inc (bad) ret jg sub xlat mov std xor inc out xor mov (bad) pop ret aaa fsubp es bound in sarl inc ficompl lods jle jg ja mov sub push mov aas int3 or dec (bad) xchg aaa or and cmc scas cmp and test loop popf sub imul jle ficompl mov inc xchg xlat cmpsl sti cld cwtl and or lea sahf jg inc int3 xchg mov xlat sub nop inc frstor aas mov icebp lods inc cld push and push (bad) mov imul lds testl lret dec inc xchg std push inc mov pusha dec push mov ret fistpll fmuls cld push jg loopne push inc cmc call es cs mov testl push pusha inc iret (bad) cmc mov jg dec lods adc xchg jo fnstsw and fdivr in xor inc lock fwait sbb cmp insl jg faddl and outsl xchg std push fwait mov in xchg mov inc adc jg xor stos outsb and push out and mov loopne and push lahf cmp or inc jg xor ds dec mov repz mov test xchg cmp or jo add lcall add dec jg pushl mov and inc jg xlat push arpl inc int mov vpunpcklwd es cmp sti outsb pop rcrb push (bad) jg mov or jg sbb cmp xor shl fcoml xchg shlb repz pop fcmovnb adc jg flds idivb jnp push outsl add mov jae jg mov mov jg mov mov outsb pop adc pop jo enter or pop dec jmp xchg js insl jg sbb shl mov mov sub out xor loope xchg mov stos lcall jg sub fldcw rorl aam test xchg add pop in stos (bad) jg addr16 jmp outsb xor cli inc sub int ja (bad) xlat and add xchg neg pop push jg sar mov inc (bad) or imul lds clc mov mov jg pop ret stc (bad) fs ss mov cmp jecxz outsl (bad) mov aas jns or inc sub push add push int3 and fidivrl jo cmp sahf sub cmpsl jg pop and pop lea jg inc je pop xor sub add xchg pop dec fdivl stc mov loop jg pop push (bad) dec dec pop mov or mov jg,pn inc sub and push xchg jg aas and notb fistp stos mov pop fstpl test sub push outsb jg cld push aad pop scas test pusha dec jg fcomps adc daa push xchg mov in stc outsl (bad) dec jl lea inc xchg mov loop xor pop dec cwtl (bad) (bad) shlb pop in arpl (bad) push mov pushf jbe sbb rcrb or ja dec xlat add fnsave jg xchg lock sub inc jg (bad) mov jge mov outsl mov adc aas jg add mov mov mov rcr pop jg imul mov jmp xchg leave add fs jg in cmp push xchg loope jg mov mov popf ss (bad) mov js (bad) dec sub jg neg sub pusha mov jg adc inc (bad) in mov push andb addr16 xchg and jl adc inc pop jo push mov jno mov stos sbb sbb jg xchg stc lea jle adc mov pop inc decl jg push pop fcoms mov cs push inc aad (bad) adc mov pushl push inc pop mov xor gs decb int3 shll (bad) loopne mov cmp in mov cwtl cs out mov mov pop inc out xor jne scas mov xchg inc pusha fcmovb les loope daa sub cltd mov add sbb add adc or add sub pop hlt dec jg inc sarb push daa clc mov aas (bad) pusha sahf dec mov (bad) push xchg pop xorl test add jb jg into fmuls push (bad) mov fcmovne pop jg cmpsb scas insl jmp cmp push out mov mov lahf pop loop and pusha xlat pop scas ret xchg push cmp cmpsl adc mov mov sbb lret js jg jno push cmp mov fbstp mov aam cmc jno and cwtl pop inc (bad) jg imul pop add jns stc cmp pop jg mov cli mov ja xchg nop mov xor mov push stc out mov jg daa adc loopne jg or pop jecxz jnp jmp and scas xor mov and test mov pop pop fs adc mov (bad) iret outsl sub popa cltd cld std mov jg push jne test or aam aad incb jg cli cmpsl (bad) fwait (bad) xor add (bad) jg xchg (bad) addr16 (bad) jg aad inc hlt xor pusha jg bound xchg sbb or push dec repz add adc rol jo sbb ret lahf adc hlt int3 jg dec sbb jg add cmp std scas and inc lock dec xchg icebp mov loope lahf xor jnp push mov mov pop mov cmp je scas aas shrl ja sbb jle,pt or mov and in jg fdivs jg dec mov jne add test dec push lea jecxz mov jbe loope iret fs (bad) jg test xor mov ds insl leave insl aad mov rorl push cmp stc das mov es mov inc push lea cmp mov jg mulb jg mov fcmovnb int iret js sub test push mov aas xor xor push repnz lea orb xchg mov sub adc iret rcll pop inc lcall aaa jg (bad) jbe cs jge jg adc inc imul xor jne shl lcall inc jg inc inc fcomip mov mov pop dec jg push inc cltd and clc jg adc or mov gs mov jnp push cltd push hlt jg dec push xchg pop (bad) mov fimull cmp push lea pop mov xor outsl dec dec jg cmp daa jmp inc into in mov sti movsb xor pop mov aas push inc jl mov ja push sbb sar xor pop mov jle shr into lds xchg fucomi mov mov dec repnz mov cmp bound pusha les jg sbb xchg and enter cmp arpl jp mov aam sbb cmpsl xchg inc popf or add or pop jge in lret cmp mov cli fild sub mov es (bad) rorl jg dec mov ss xchg sti fs sub sarb scas test jg mov sub or or in stos mov dec (bad) jg and call mov ret jg pop pop stos cwtl or imul jg out xor sbb cmpsl dec stc xchg arpl dec push fidivr int3 cmp cltd cwtl mov jg rcrl mov mov or ds jle jg in dec mov in cmp fdivrp outsl adc aad lcall jbe xchg or stos mov pop testl test jg ss (bad) call sbb jp push or pand mov xor adc push inc pop fidivrl xchg fistp cld imul ljmp push mov imull testb cld mov mov jmp adc std or movsl aas jg loopne imul fist pop stc jg push cmc sub push add pop xchg pop js jns push cmp cwtl fcomi out xchg mov cmp xor lret xchg sarb (bad) mov enter pop add xchg jg pop cmpsl fs insl jge pop jno or jg xchg inc out arpl test sbb mov adc int movsb out test idivl jp fsub sub popa jg pop mov sahf add (bad) jg mov idivb lods sarb and dec xor int3 jg mov fwait jg outsl je mov mov daa lock jg and dec jecxz mov ret lea popf dec (bad) jg cmp sbb jnp push cmpsl adc sbb test rcll mov pop jecxz dec je mov mov lret add outsl jg lods ljmp push orb adc inc and js movsl xchg outsl inc sahf mov dec sbb push jbe mov push push push xchg loop and jg inc cltd inc and or cmpsl das mov xchg pushf or outsl ret sti pop jg jne lods lahf test aas mov or xchg arpl jg mov mov jg daa push jecxz (bad) mov pop (bad) ds imul addr16 pop push inc jg add dec xor mov xlat insl xchg jg push insb mov sti rcll adc das mov mov clc push lcall jle adc sbb fmuls popf repnz mov fidiv and jno cmp cmp lds cmp ret movsw dec scas push push push repnz mov sub loopne push pop cmovbe mov scas (bad) cltd shll vpsadbw add cmp jg mov repz ret iret ds cmpl nop lcall fwait stc cmpsb scas lock mov aaa fstpl lcall nop jp and sbb mov add pusha ret dec dec mov jl inc scas mov jg test es jae sub (bad) push pusha addr16 push dec mov add ljmp jg push dec loope lds jg jo repnz lahf push push dec jg pop nop lock iret fdivrl ds jg mov mov push or cmpb xlat mov popf popa test jg into stos cmc hlt roll shrb ds dec push int or int3 jg inc and or clc dec jg sub fnop into adc and inc inc scas mov lods and mov into dec ds and xor pop lcall xchg nop push adc ficomp inc mov xchg add stos pop jns cwtl sbb jmp fisubr inc insb jb fidivrl data16 adc mov jp pop pop inc mov (bad) mov cwtl adc mov jg fstps push sti (bad) sub lods inc xchg ret pop jo jmp adc push int3 es imul decb imul xchg inc testl repnz shll movsb push and or push jg aad mov jg ds sbb xchg pusha aaa mov pop addr16 test jg inc mov pop jg xor sbb jg aaa ljmp inc push sub mov fidivrl dec cmp and divb jne test jg cli adc ret sub add imul jg push stos lds pop lret pop push dec mov xchg loopne adc xor xchg mov int jg (bad) fstps jo dec cmp rcr push cmp dec mov loope jbe mov out fdivl jg mov jne test adcb jg mov mov jno aam jl mov sahf inc lods gs inc mov sub inc push (bad) pop dec int3 push push jg pop out inc and in ds or jmp bound and addr16 jg (bad) aam jb adc jg icebp push xchg lods clc andl xor pop imul jns mov aam pop pop mov sub sub sbb mov mov mov xchg cld pop jg xchg dec jg xchg divl and xor out bound jg adc jge arpl sbb cmpsl (bad) in aas popa lods dec jnp,pt pop mov (bad) repz call xor sbb mov and test mov xchg push mov jg pop aas std adc cwtl jg inc fadd cmp xor push lcall lock push jg push mov aas shl jp ljmp dec jg imul lods push dec es cwtl push sub xchg cmp clc dec js stos xchg and or xlat aad es xor dec (bad) aas mov loop dec stos popf jg mov insb push or decb jg mov rorl adc leave adc bound jg sbb fisttp pop sti jbe mov lret jae sub jg push popa xor sub cmpsb jno mov inc sbb addr16 scas jecxz mov mov jg dec sbb aas out cs inc mov mov mov repnz inc lret xor inc pop cs fdivl jg push fs test and push mov cwtl sahf shr mov mov lahf pop pop jg stos inc lods lret jge hlt add cli inc xor mov sarb jg data16 adc mov pop es fsubrl shl inc outsb (bad) call adcl popa arpl test lret and cwtl pushf sarl adc mov negb push add and mov dec dec pop roll (bad) mov or or inc sbb and add cmp cmpl sbb lahf inc (bad) xor loop or and jg enter jb cmp xchg dec cmp shrb js lcall out (bad) jo sbb std jg push xchg jg cs xchg mov mov pop pop sub jle dec insb mov insb insl adc or fcoms jmp sub xchg mov sbb sti (bad) sub and loop pop scas repz sbb les dec add (bad) mov fistl aas negb push das popf pop xchg xchg jl dec push xchg dec (bad) jg int3 jp into rcll inc add sub or push ret cmpsb repnz jg aad jbe lods mov jg inc jmp xor xchg sarb mov mov push shl jg push adc sbb cli mov test lahf jae mov aam std xor jb pop stc push push scas jg out push loop inc iret mov popf lret or mov add mov mov stos into push sub inc xchg hlt push mov push jg js das mov sti jno inc fs jecxz mov mov xchg jp sarl movsb cltd pop add adc hlt inc cli lea aas push cmpsl push xchg ss rol add fist lret in shrl cmc jg cltd orb mov mov pop lock cmp adc push fnstsw jmp imulb fadd jg push jb sub ds ss fs push imul xor inc pop and enter fwait std fistpl fsts imul mov mov adc cmp int jae mov lcall daa popa aad inc inc adc cs xchg mov dec push test inc pop nop aas iret jge ret inc lcall inc mov or insb xchg adc jg gs test insl test jo lock pop testb fisttpl out jg xor cwtl or loope jg sbb add pop mov repz loopne in jg jns dec pop pushf sub jg cmp inc repz xor mov fidivrl jg sub or int3 jg bound xchg add pop mov lahf jae popa loopne jg sbb dec int3 jg or xor sti imul inc mov js xchg or pop mov add pusha loop mov pushf jae or xchg cli jg fidivl cmp test xlat add xor bound push mov pop ds ja (bad) repnz cmp xchg or pop jg or lcall sub cmpsl (bad) mov add or gs mov pop add inc aas sub das fwait rcrb dec jge inc add jns pop mov jg shrl mov out mov test adc inc mov cmp stos adc nop stos test and aaa fmull pushf jg (bad) jb mov popa mov xor stos dec push or mov popf push movsl jg out inc in push data16 mov lahf sub mov loope jg repz lea add les adc and jg in add (bad) adc aam xchg jg mov inc (bad) jns leave sbb dec xor mov lods addr16 scas dec jg or mov jg out pop sbb icebp repnz fwait mov addl add jbe (bad) xchg mov jge ret push movsl cwtl dec fs out (bad) jg,pn mov test jbe xor jg imulb sbb jg xor cmp adc (bad) je inc int3 mov mov pushl sub add jg ss add aas stc xlat enter mov (bad) jg fwait iret add add pop cmp lods out jg fldl dec mov xchg fwait mov jmp push cwtl lods xchg xorb xchg fisubr stos pop dec aad adc imul hlt test or sbb sub mov and fs lods xor in jg or das dec jnp fst push dec jmp out (bad) (bad) jo and inc push out mov lds xor sub outsl inc aaa push mov jl xchg cmp cmpsl sahf mov jnp fcompl shlb arpl jg add test push aas jg push aaa enter xor cmp or mov mov std pop dec sub out shr ljmp dec and test inc loope sbb jg iret rcr xchg lods lock int3 test pop (bad) ljmp mov adc xchg mov pop push or cwtl or add scas jg fcoms cli jg mov lcall sbb xchg mov cmp mov pop pushf or loopne mull jns jg push arpl andl lods push int3 mov pusha mov xchg jnp ss out and xrelease mov cwtl (bad) cmpsl inc sahf movsb dec adc imul pop cmp mov nop push (bad) mov adc je xorl ds repz movsb outsl pop adc pop lods jg push jnp and inc fnstsw jg push fmull and cmpsl jp fwait jg shrb push in roll insl inc jp pop and pop icebp pop jmp out mov or xor cmpb mov jb stos (bad) cmpsb fldenv icebp inc adc jg cmp sub cld jg pop push insb js faddp jg push xor jg jl push lahf or cmp stos jg xchg xchg test push imul test call mov jg in leave cs push iret sbb mov incl repz lahf in cmc lock mov jg xor mov mov outsl into cs sti ret sti sub nop jl ss jnp movsb ret sbb xor mov incl dec dec mov mov into mov lock aas mov ljmp mov add or (bad) cltd jg add ljmp gs adc cmpsl xor outsl outsb mov jg mov dec mov data16 cmp icebp divl mov xor cs in mov cmp cmp jg jbe cli pop add out mov inc push add out mov mov insl mov jg scas lcall xchg xchg sarl lea mov mov jg adc arpl jg mov fnsave push aad cmpsb push push sahf popf adc push cmp push aam xchg jnp jg imul xor sti lea xchg nop xor lcall int3 mov inc out and in icebp cltd ljmp mov push push and xor jecxz mov adc sbb lods out or ljmp ja cmp xor mov and pop js fnstsw icebp cmp and jg xor mov jg cmpsb lea jg sbb repz cmp call pop (bad) mov fucom jb pop testb cwtl cli movsl dec mov imul mov and dec and (bad) mov pop sbb xchg cltd jg sahf sub out jmp pop adc stos movsl inc cmc xor int3 pop mov das add jg add inc push (bad) in test push mov push jo ret nop cmp mov cmp test dec outsl test lds pop loop les jg cli sub xor mov in add mov jg mov add (bad) pop cmc jg xchg mov (bad) aas mov scas push clc gs mov popa jg das adc xchg mov je sti cmp push mov dec inc inc cs imul popa cltd mov aad sub cwtl out jmp rorl and mov ret mov addr16 and ret xchg or loop jg or mov cmpsb cmc fisub es jg movsl fwait lret adc shrl mov andl js test pop mov hlt int ja mov jg sahf roll sti leave cmp lcall jg aam xchg decb mov dec pop jge cmp xor inc fistpll dec imul sub jo js (bad) mov lret dec icebp dec mov pop test cmp push mov dec (bad) or jl hlt jecxz jg sti loop adc stos into rolb cmp mov test mov push lods jg pop movsb dec sub cmc push mov adc ss mov pop pop jb daa jg jno call or cwtl jg notb movsb jg fldt test rorl xchg mov ja lds lea into orl mov lds pop mov pushf mov je mov cld cltd or shll test jnp cmp xchg xchg dec ficomp notl cmp popf cmp aam pop cmp pop ja out inc jg int dec daa pop in sarl push out mov (bad) idivl jl (bad) pop dec jmp push lahf int or shlb and fwait push (bad) outsl shll jmp out or push xor loopne inc pop dec stc lret jg test jg in enter movsl jg lods sahf cs push cmpsb loope sub sub stos repz jg into insb mov and jg cmp xchg pop jle insl popa lret dec lret pop or ror shlb imul xchg addr16 ds and jne insb jae aam lahf jg mov test lock lea or (bad) jg sub jne push xchg ss push xchg xchg inc es push jg push insl and sbb fbld rorb adc mov pop jmp aam movsb popa bound cmp jg cmpsl (bad) xor pushf in inc inc pop jg ja imul popa sahf jg push xchg in cwtl mov xor jg movsb add rcll mov jg and push mov xchg inc add pop jg out (bad) inc gs je jb scas cwtl dec and ficompl (bad) nop lahf (bad) lret push popa (bad) frndint pop or and jmp jg jle lcall push mov cmp xchg aas das loope xchg push or inc dec arpl jg popf push test dec and je jg and aaa test (bad) or dec push lock and pop pop cmp aad ficom xchg mov ret popa fisttpll and imul negl cmc mov lods in jg pop jp mov pop out leave cld mov jle xchg in push jg or jbe lods or jg hlt add add jg pop sbb gs pop push movsb ret sbb push (bad) sahf fwait cmp fisttp xchg nop jo sarl in dec mov jne mov jg scas mov sahf mov pop cmp cmp jg push push loop pop xor stos adc ret xor pop push sbb mov add xchg movsb cmp es rorl xor fnstcw adc jge jg out jmp loop cmp pop and xor jmp test decl pushf cmp lret mov mov push mov adc mov sub fisttp movsw aaa cmp sbb mov (bad) mov cmp subb iret cmpsl jg or jg sti dec mov in fnstcw mov mov fdivs hlt adc jmp lea mov mov test pop push in dec movsl push (bad) jg sahf xor cmp fimull (bad) aad cmc sub iret mov jne stc insl fwait pmullw mov mov push (bad) jae jmp and outsl insb inc sahf dec aad adc jg pop mov out fcmovnu cltd ficom adc adc inc aaa pushf jg sbb or pop mov scas jg mov mov jg int3 cwtl add aas cmpsl faddl mov subl popf mov jg xchg je in or jg push cmp jp xchg jg shl mov dec int3 mov (bad) clc pop mov pop push add dec jg jno shl aas adc loopne aas rolb pushf xchg xchg pop dec das inc aad and xchg in pop mov mov cmc lret aaa inc and ret mov (bad) mov dec inc adc push mov ja cli jg add mov scas jp jg test and (bad) (bad) xchg aam push mov hlt cmp sbb jg inc push daa adc and cld xchg xchg cmp dec sarl xor inc insl push fcomps mov cmpl push mov cli adc (bad) popa xor aam pop incb inc test aaa lods pop inc fstl mov pop jg mov dec push xor push jno or movl gs xchg jecxz cmp push imul sub aas dec xchg jecxz pop icebp jg inc add outsb dec adc loope or mov enter leave xchg mov jg daa out cmp jmp cmpsb sub test inc scas mov inc jge lret mov adc pop xchg (bad) or lret test nop loopne mov ret bound or pop hlt mov negl fmuls mov jo insb lcall inc stc out and jg arpl dec and fstpt cmp mov sbb jne bound stc psubq sub lock jno (bad) sub and pop push mov movsl mov pop lcall jb ja mov mov dec xor (bad) add fdivrl daa adc dec push test out jg dec cwtl loope or lea pop pop sarl mov lods mov addr16 or jge pusha hlt pop pop ds aas ja xchg jg add push add mov sbb inc and jg cmp sbbb jg cmp int3 push jge loop jg fdivs cmpl lock fincstp mov out mov cpuid adc sub jg cs inc mov int jne out insb daa inc cmp jg (bad) fwait ljmp adc (bad) xor sti push xchg leave pop add adc aas or test mov jg mov sti push in add pop jg fildll (bad) mov and out lods not jg sub das jg aad sbb mov sbb in jg adc sbb xchg add jo pop cmp mov gs jae sub jle xchg jg push dec xor ljmp jae dec pop dec fcmovbe (bad) out lea call jle imul ret dec mov ss movsb pop inc mov jg cmpsl popa es and jg jne les pop loopne mov (bad) fimul std in jg jp shrb (bad) mov ja dec out or push cmp les in lds jbe ret aaa fdivl xor decb (bad) cmp ret pop fsts test dec cmc lret aam xchg adc in out pop popa push rcl movsb xchg loopne icebp enter loop lret xchg inc pop jno pushf add cmp inc sbb lods or xchg inc cmp aas pushf outsl mov jg sub push sub cs outsb jae pop pop push mov or test mov (bad) xchg into adc push dec jg add sub jg xor or lock inc or aam cwtl inc dec cmp jg pop mov bnd or jle push add (bad) jg mov outsl add nop repnz dec adc mov pop aaa pop ret adc inc scas cwtl push jae adc jmp outsl ret jo fdiv cmpsl ja pop pop inc in jp jg mov in mov sahf xchg dec je jg es jecxz and or scas es mov daa xchg idivl imul cmp stc into cmp aas sbb jg in jmp std jg mov and sbb inc sbb js (bad) call out jnp jg daa sub data16 repnz aas lock pop and ret stos pushf jg hlt push xchg cmp mov aad inc lds stos jecxz clc incl adc mov fcoml sbb and pop xchg ja fldcw aas insl xchg lds or mov (bad) sbb hlt rcrb jg jno or xor push xchg fnstenv lods jg push push mov inc mov jo push test sub leave mov in push int3 jno sti mov jne xchg add or mov jg and dec (bad) popa mov pop movsl mov inc sti jg out cmp aaa testl sub pop and pop outsl sub push push jg mov jne jg ljmp (bad) pop inc fsubrs bound push sbb insb xor sub sub mull pop mov pop sbb add gs mov stos mov add loopne jg cld aad mov mov sarl iret (bad) jg loope jo and push stos cmp bound push fimul jg push pop ret (bad) in pusha mov bound (bad) loop jg push jp cs xchg xchg rcr push clc mov dec jg xor inc stc xor jg outsl shll dec mov or dec and stos pushf jno mov ja and adc adc lock pop jns rcll movsb jg stos add mov adc out repz mov lahf mov lahf hlt inc xchg pushaw jle lods inc sti (bad) sahf popf xlat xchg jno and jne jle adc gs cmp (bad) loope jg pusha mov pop lds mov xor jae jg ljmp lock pop js fsts ljmp jmp jecxz mov adc nop jg push cld jb cwtl cmc mov lahf fsubrp mov fsubs mov sub jg adcl xor pop sahf and dec inc cs leave testl add pop pop jbe je pop dec xor adc mov shld dec ret sti mov (bad) scas jb pop rcrl ljmp test mov xchg clc inc cmp add mov pop dec mov or test dec (bad) mov loopne jg lret out sti push mov cmpsb mov fistpl out adc pop push pusha test or jmp mov xlat imul pop fbld (bad) fsubrl (bad) mov pop ds dec cwtl xchg jg jecxz and enter adc ss cmp push add lret outsl rorb (bad) bound xor add adc jg out mov push inc ss mov mov int lods push lds adc jg jno je fsts lret leave addr16 pushl outsb repnz clc mov mov mov mov add fidiv mov xor dec inc jle jg out sub pushl (bad) xor sub inc mov xchg call push inc jg cmpsb cmc stc cmp std jmp mov das pop outsl movsl inc inc (bad) mov aam inc sbb jg mov fdivrl or push and cmp addr16 mov orb mov push (bad) xor lahf mov lods jg inc out mov jl xor mov (bad) cmc in mov imul sub insb mov jo iret jo pop pusha outsl loop dec inc stos jg inc xchg and adc jg (bad) int3 hlt dec jne push mov cmp ds add pop fstps ret shlb and jo jg jno loopne fstl inc fnstcw add lods cmp mov (bad) lock mov sti icebp lahf pop push mov jle cmpsl (bad) je rdtsc pop mov jge dec jg mov pop ja mov fsubrl push lcall aam aaa (bad) je sahf int3 push icebp push fistl mov xchg cld push in js jg inc (bad) dec iret icebp mov cmp jo fstp pushl popf mov ja mov mov cmp cmc mov pop arpl lds insb mov jg pop cltd adc jecxz jg scas clc arpl xchg aam jg inc repz icebp adc pop fwait aas vmcall or movsl xchg sbb jg out insl lods push and dec xchg (bad) faddl mov push insb mov jg (bad) sub pop (bad) lahf xchg popa mov or movsb push mov xchg pop ss (bad) mov pop xchg inc fcoml pop sti ret gs push push jg enter fsubrs mov mov cld data16 dec testb add jg jns adc cltd inc and push jg adc lds cmp fcompl bound cmp jg cli ds jle (bad) mov (bad) mov mov pop les mov mov (bad) jp xor jg mov pop xchg lock out pop push pop pop jg jecxz mov sbb (bad) jg pushf add pop test call sbb lret mov jbe xchg mov xchg dec cmpl xchg (bad) ret pop push aad mov imul mov jg pop mov sti cmp cmpsl inc mov adc leave push movsl sub out mov push xor sub sbb jg les in mov mov xor in je push add into mov pop int jg rorl lods xor addr16 ret or or lahf movsb dec mov adc in pushf imull mov cmp jg ja mov jo inc pop pop cmp lock out dec mov cmp fincstp inc sarb dec mov or push jg jne xor shrl sbb incl cmp cs pop add pop xchg lcall pop dec push stc cmp pop push (bad) pop enter pushl iret pop loopne or cli jg pop adc cmpsl imul cmp iret dec leave jg (bad) mov and ficompl jne stc jg jnp jge daa not jg or mov test (bad) out dec ja inc sub jg loop imul sbb lcall jne scas pop leave jns fistp pop add push sub aam jno scas jle outsl pop mov roll jg jmp jb pop and jg push (bad) mov dec repz jg je arpl test mov or imul sub inc adcl jb rorb jg sbb lock icebp pusha jg jl push mov sub mov jg pop popf cli push adc daa aaa lds sbb cs dec cmpsb mov or ss aas lock mov and aas pop outsb lahf mov test mov ja loop push fstl mov sarb pop mov aaa enter mov cmp mov mov adc sub mov xor dec repnz push push jns mov push jg hlt pop rcll push sbb or mov mov es jg adc fsubl mov xchg repnz mov cmp inc out mov cmpsb push clc nop sti pop jg pop dec subl push sbb jbe cmpsl (bad) sub jg mov inc lock das jg shrb jg pop outsl addr16 pop sub int3 jg ss (bad) push inc xor jg pop xchg dec push insb in jle mov ficompl jecxz mov mov jg das roll add mov (bad) fsubp add jg sbb fldt fcos jg in fstpl jg lds xchg xchg loope (bad) jg or outsb xchg add jg sti movb jmp inc cmp aas pop sahf ljmp icebp mov xchg jo adc aas rcrl jne call arpl enter in mov xor jp popf rol jl push jg xor push pop (bad) std xchg test jmp sub mov pusha push push and lods sti jg or push fimul mov loopne cmp sahf jg hlt jge pusha fwait dec in rolb xor adc mov popa stos jo insl pop mov inc (bad) es fs mov aas lds adc inc jmp jmp jno cmpsl jg mov insl mov scas push inc ret jg jb or (bad) sbb out test and insl adc jg jmp and outsl push push jg cmp mov into cli fstpt mov mov sbb jecxz dec scas pop pop mov mov and cmp out popa daa or mov addr16 insb or sti popf pop cmp or sub ds in jno push adc negb xor jg xor mov mov jg (bad) js cmp (bad) lret lds fs sub aam cmpsb xchg inc (bad) je jg push frstor aaa jb mov pop and mov xchg cmp pop icebp dec dec dec in mov inc jno iret sahf sarb cmp ret ss jge out loop jg fdivr in shlb jp scas daa inc jg std iret push mov stc pop jbe (bad) stos xor call rorl loopne push aas int jecxz push or inc lock dec adc jns aaa xlat iret rorb push icebp xchg mov inc inc xchg daa sbb mov std xor jg lds and mov add push stc pusha repz mov stos out inc inc jg inc je jnp,pt (bad) (bad) or scas pop dec (bad) push push sub push mov jg insb arpl inc int3 cs add mov int outsl dec addr16 jp jg test mov insb cmp jo push lcall lret (bad) xchg test movsb mov sbb mov jp imul jecxz sub xchg rorb outsb mov les fistpll push test pop (bad) xchg aas add dec cli xor in adc mov outsb cld add sbb scas add add cmp popa in and or mov pop xlat push sbb pushf daa mov inc js movq cs or sbb pop push dec (bad) lea sub jae inc mov mov outsl jg out sbb pusha dec idivb movsl xchg jg mov xchg jae cmpsb sbb cltd mov push dec pop jne inc inc loope cmp cmp loopne ja sbb bound jnp test shl sti pop cmc sqrtps stos mov mov cltd das (bad) pop pop addr16 pop lds add popf and cli jg sar xchg fbstp inc jg (bad) sbb jg loop push push aam jg,pn test mov inc jg data16 dec sbb sbb popf cmp outsl and cmp lock pop (bad) push pop dec mov mov adc pop dec loope add mov mov xchg loopne pusha dec jg push push addr16 push add jl jg jecxz xor or addr16 sub mov cmp fcomps sbb cmp ljmp adc out xchg lahf add enter ljmp jo inc cmp push mov or aas cmc es aaa mov mov test std cmpsb (bad) jg addr16 xlat loope jg (bad) sbb mov repz pop cmpsb sub imul inc xchg push ret adc xor mov adc dec in pop push cmp jle inc je jg mov mov pop dec cmp loope aaa sbb xchg sahf add dec cmp test xchg xchg popa enter (bad) adc jg lods mov jg adc fisttpl and jg add cmp fiadd imul call dec jg xchg mov mov int pop or test mov jno std dec in fiadd jg loop mov jg mov pop mov inc fsts pop xchg cltd jmp adc dec in dec lods fs fsubrs xchg cmp jle dec aas dec loope xor cmc (bad) jg sub lret push add stc push lea in mov scas adc out xor xor fsubl fldcw inc dec repz cmp jg adc sub js aam pop jbe add dec xchg dec jg adc in jg mov in jg (bad) mov xchg jmp push jg jl imul push xor fidiv jg cmp cmp ror icebp sub ljmp loope mov dec in pop push stos dec gs mov lahf stc jnp cmp sub inc jmp push in pop mov bound xchg stos js sbb pop mov jg in arpl jg jbe inc andl sarl push pop sbb jle adc cmp mov aas jmp lods push dec jle jg mov lahf rol aas mov adc test int addr16 mov jbe mov rcl fwait dec mov inc data16 push test aam lds ja in sbb jo lcall shlb in iret push xlat pop in or test inc scas dec jg mov jg (bad) xchg sub js push push add add (bad) ret and mov xor imul mov pop in cs mov mov mov inc and (bad) lahf jg enter movsb sub inc fldcw mov and cli repz pop jp gs popf cld roll cwtl pop jg dec mov lods movsl mov or sub aas cwtl aam outsl inc call ja lahf fistp or nop lea inc jg test (bad) jo cmpb iret or dec mov repz (bad) jg jmp les subl aad mov cmp xchg sbb jo js cmp sub jg fcomip ret sbb xor inc pop and fwait out sahf pop push scas xchg jg jno test fdivr popf jg pusha pop lds jmp ror call scas cmpsb enter push dec in or fnstcw xor or mov lods cmp nop sbb sbb mov pop scas cltd xchg mov arpl out (bad) les popw sar mov ret jg,pn scas adc push xor jle add push xor jg push test add lea pop or fnstcw push xor imul lods gs mov fidivr adc mov adc dec aas test xchg inc test or arpl int add sar mov addr16 lret idivl pusha enter mov adc les lcall out loope movsb test insb xchg adc in inc push pop cmp jg outsl jne imul loopne jle cmp lea pop dec (bad) je mov pop rolb in sub fisubr or dec pop jne or outsl dec mov pop dec mov jg roll movsl (bad) mov jg mov add cmp arpl pop sti loope pushf pop aas lock int3 jg lret hlt push in (bad) jnp inc push out sti sarl push pop fild leave add jg sbb cmpsl mov push in les (bad) icebp or mov and cmp cmp push dec adc jle xchg add pop jle add je add bound (bad) push jg rorb (bad) pop inc fwait mov ret test testb dec push call dec rcl insb jg enter mov loopw dec ss adc adcl fistpll pop sub ss test pushf push sti adc mov mov jg (bad) mov imul mov aad and sub dec cwtl pop mov jae xchg fstpt jg stc xchg (bad) jno arpl je cmpsl xor pop jge,pn sarb mov imul pop sub jg mov out sti fistp push lds aaa and jg loope pop icebp add sti mov sbb pop or inc jg or scas js mov jmp cmc xchg pop cld in sub pop adc lret mov aas sbb dec aas mulb in icebp adc jg xchg sub xchg rcrb lcall std push jg frstor roll jg inc pop test dec jo add mov aaa inc js jno stos fidivr xchg jnp movsl sbb sub inc xchg mov add sub pop jg pop negb mov (bad) gs dec mov push cmpsl ja mov pop or pop dec aas fiaddl push lods xchg mov pop and outsl jg mov in stos xor mov out or jg inc cli jle lods cmp mov add fincstp pusha inc (bad) outsl mov jns jmp idivl or push mov mov (bad) daa sub inc jg test fcmovu (bad) jno jg mov mov aas sbb pushf mov mov sub or aas roll ret mov jae xchg sahf cmp pop mov pop sub cmp pop out push and dec mov stc aam idivb int mov inc push mov lahf out inc mov dec fwait jns cltd xor adcb mov xor test jg inc out mov mov mov dec cmp mov or sub mov and sub push pop aad jg fstpt neg lods add sub sub jg and test jmp mov dec cmc mov jecxz mov pop jg test and sti rol pop outsl nop adc mov xchg pop and mov fildll es push adc in xor out pop sub mov lahf inc inc in mov mov and and dec mov jae jg add in pop jnp testb dec jae scas mov dec cmp jle sbb sub das mov push push mulb jg je fstp das int xor mov in (bad) jae mov xchg iret data16 cmp ds aas push sub mov xchg jg inc je mov insb jb push inc aad fstpt sub leave fdivrs inc lock push cmp pop dec rolb std loope in and lahf rorl jmp or idivb lds mov jg mov icebp push mov mov pop gs lods jg jbe cmpsl jno mov rorl jg in pop push sub add sbb pushf cmpsb pusha int3 aas cmp sub dec sbb inc jg push inc sbb and (bad) sar push jmp dec adc loope jg js aad jb clc (bad) cmpsl ret ss sahf in icebp cmc xchg jg dec jecxz std in xor ja ss jg adc jmp ljmp mov out mov fisttpll mov in inc jg push mov call jg les bound (bad) repz pusha jno jge,pt rcll and jg mov aas ret cwtl inc lds pop inc xor jg test sti inc fnstenv cmp jg cltd andl popf mov jg jmp jne jg imul out (bad) mov mov adc pop jg xor push inc aad mov adc dec jg cltd xor jg and pop repz sub cltd lret jg xchg cmp cmp imull ja lret mov gs mov or (bad) inc lea mov lods bound imul sbb int3 jg add mov add xchg jg jge mov aas pop push sub inc loope jg lcall in jg cmc inc dec mov cld jg mov xor inc addr16 jg add pushf loope jmp sbb xchg mov pop mov push popf loope dec lods pop push fwait pop scas sarl mov cwtl std inc test sbb in cld mov ja lods cs jbe dec lds xchg pop (bad) dec dec rorl pop jne inc dec pop out (bad) jg enter push dec pop (bad) jmp mov dec xchg jg or nop jg cmp dec aas inc (bad) push and mov mov outsl add jg fcomps adc mov add inc pop add push jp pop mov xchg xchg xor mov xor jg dec mov (bad) out lahf jg jo sub mov test adc jae mov xlat mov pop mov fistpl test out in push inc pop jg cmp adcb js mov jg (bad) or test jg hlt mov in inc sbb jl cltd push xor in (bad) loopne mov or inc sarb mov lds pop sub or lea (bad) arpl pop pop adc jae aas inc aas or std add idivb inc inc pop jg outsb test mov (bad) imul xchg jae jg add push sbb test mov dec roll lret js mov int3 mov xchg repnz xor sti idivb and pop pop jg lds sub into mov lock jg out jp (bad) xchg cli call sarl xor sbb push sub in push or add and jecxz xchg adc repnz push stc cltd dec jg inc (bad) add push mov sub inc cltd aad ret ja mov cmp ljmp dec call fsubrs and dec fsts sbb outsl sbb ljmp out insb fadds jg int3 loopne jb aas (bad) jno mov cmp adc sub aaa dec pop jmp nop sub fdivl and ja lock gs lods or sub jg ljmp jg addl xor or (bad) popf cmp mov pop jg mov mov loopne jg jb push in sahf pop sti push inc imul jle jg jbe iret and pop add inc mov insb rcl ljmp sub (bad) mov xor or movq xchg cmpsb iret or dec mov pop cmpl mov outsb movsl cltd add mov add dec jae test mov push push or in jb dec rcll mov push imull push sahf inc jg dec (bad) and pop (bad) jg xor mov mov add jg or out and jno aam inc repnz jg push mov movsl jne imul pop insb (bad) cmc jecxz fild xor in jg call xlat scas and addr16 pop jl clc pushl (bad) jg or leave jg pop and in (bad) nop pop jg js mov jg sub es cmp nop addr16 enter bound lcall mov mov adc stos (bad) mov mov push cmp mov xor imul aam (bad) into mov cmp movsl mov cmp sbb (bad) jl data16 jg cmpsl jge shlb lods mov ret jg push cld xchg mov cmpsl mov fdivrl test xor pusha (bad) pop inc mov cmpsl pushf gs scas lret mov mov and cmpsb push jp pop mov ja loopne das leave jg sub sub pushf aam dec jle cmp cmp push cwtl jnp lret jg lods mov stos jg push (bad) add cmpsl enter pop lret cltd sub aas mov lret sahf inc notb jg push fwait jnp mov sbb push jno inc jg adc test rcr bound ret mov pop cmp lcall jecxz mov sub ss jle jg or in sti xor push stos inc inc daa lock jae sbbb cmpsb inc pushf or cmc imul jg or inc xchg daa (bad) jno mov ret dec xchg or add adcb lea in mov cmp into dec std test sub stos add clc (bad) movsb (bad) lea mov cmpsb aad xchg bound mov aaa ljmp ja mov lret xor jg mov sti jg add mov mov adc hlt and sub and outsb pusha xor in std jg divl fs mov js sub in out fsub inc jg mov (bad) pushf and cmpsl (bad) mov add jns add push aas fstpl inc dec cmove mov je aad jae sbb gs test jecxz insb and lds jg lahf xchg call fisub sub push ficoml pop mov daa imul xor jg stc inc adc add xchg sbbl xor cli add add lret loope mov add dec sub sub sbb es mov mov imul movsl sbb mov addl jg ret (bad) inc and or jbe loop repz mov (bad) cmp jg adc data16 lds jno les pop jl out fs mov mov mov std jg js xor int3 sbb jg fadd (bad) pop dec movsl mov adc outsl dec pop (bad) jle loope fidivrl imul shl daa xor cld pushf jg jge or (bad) in add jg pop repnz loop ret imul mov dec push jmp lock inc fldl sti loop xchg outsb pop in jp (bad) stos lock or and mov inc inc aad xchg lret fs fwait ss mov popf pop fistl dec fsubl sbb js aas je std jl mov cmp loopne pop add jne pop mov daa push dec jne loop cli repz into push std xchg mov imul dec sbb mov subl pcmpeqb cli cld pop sarl (bad) jp mov jg jnp negl mul test sarl and lock mull test aas xor outsb les icebp jg and cmp lret jg jo and sbb mov test test inc cmp call or imul int cmp jl out push xor cld jbe dec mov inc outsl jns push pop xlat push jg lahf loope rcl std jg nop hlt out lds divl mov inc scas mov popa lods les cmpl divl (bad) ss cwtl cmp or pop fadds aam lock inc push xor push stos cltd shl ret sar push and stc fmuls and pop jg test out xor sarl aad adc mov js icebp jb dec cwtl add lret pop jg xchg sahf sbb sub sub popa cs sub lcall jbe and js outsl fadd stc scas mov mov and pop sarl fist gs mov pop pop test xchg pop adc push lahf mov xlat or xor mov adc ss (bad) aas mov jae inc pop sub cld sbb jo (bad) loopne mov mov dec iret inc fstpt and mov test enter movsb mov jmp and adc adc call jg scas (bad) arpl rorl inc dec cmp cs ret lea lcall movsb popa mov and jg pushf (bad) jg jne hlt cmp ljmp jns je lods mov pop sbb jne jg in loopne adc add or sti dec mov mov std xlat inc xor adc hlt xor in jg mov push xchg or xchg or movsl mov or jg sbb xor and ljmp loop les xchg cmc mov mov (bad) jg and jb mov adc mov jg push push add jg (bad) cwtl ds cld mov lea (bad) adc cmp loope jg push mov mov aaa mov mull fdivrs shr daa ss jg push loopne repz cmpsb mov cmc pop push out rcl je ja pop clc jg test jmp or push push cld loope jmp mov jge popf hlt (bad) jg ja xchg mov movsl mov or jg cld pop inc popa loop xchg mov je pop mov sarl outsl xor inc adc jg ds mov int (bad) pop adc (bad) icebp insb data16 loope addb out call jo mov imul pop jns xchg sti sbb lods jg in test inc (bad) xlat xor ret and addr16 adc inc imul (bad) inc add xchg rcl adc cltd xor jle sub imul xor lcall sbb dec leave cmpsb bound inc cmp jmp fdiv jp push cli inc jg push cmp pop mov pop lahf mov and out ds push (bad) loope addr16 sbb mov push push jg rorb pop push rorl movsb lea mov jg pop data16 test ds sbb cmpsb cmp add push repnz push mov test sarb jg ss sbb cltd cwtl inc pop jae cmp or in and lahf jg jge inc out imul lret sub fstps pop (bad) gs jg mov pop inc inc loop jg mov or movsl mov jge jg push adc xchg xor lea cltd pop cmovge dec push fdivrl cmp pusha add out sti (bad) pop or push notb mov sub jecxz lock sti xor jno dec or xchg adc inc xchg mov sti ret add jg js push sub push int and push xlat mov ror dec mov notb push nop jg pop (bad) mov (bad) out test jle mov into daa mov sub in (bad) xor jl push sahf ja mov push (bad) bound inc jg jns mov test mov movsl outsl scas stc arpl adc into cli inc bndldx push int cmpsl test jg pop add xchg data16 mov xchg mov xchg xor aas jg pmulhuw mov cs cmp push pop push cmp lcall push pusha gs (bad) or rcrl fcmovne add dec lret inc jg add jne xchg fistpll push sub outsl sti sbb (bad) jg jmp repz add pop push add cmp hlt push inc jg pop das jp sbbl sahf mov in mov lret inc cmpsl xchg mov dec cmp ror push jmp push jg hlt mov scas jg xor and pop or inc stos in dec loope mov and data16 incb out jg das and dec mov popf jg mov lods mov sub jno mov xor jl jg (bad) sub shrb lahf pop cmp pop xor mov jg dec rcll fstpt xor stos outsl rcrb adc add ja lret push xchg xor inc mov sti lds aam dec (bad) jg or jno xchg push fild mov jmp jno outsl jg mov xchg sub inc data16 iret and dec pop btr gs sub shlb mov jp aas mov lods test call mov sub jg xor xchg push dec xor jg mov out jg mov jmp push push jg adc mov xchg fnsave push leave jg ss jmp jg fwait inc cltd xchg jbe fdivrl stos mov insb xor mull popa arpl fstl push jg inc jbe insb pop inc pusha jg outsl add xor sub in inc push (bad) repz jg dec jge jbe mov pop rol inc jg aad dec inc xor into jg arpl xchg jg lret aam push mov and cmpsb sub jns jg sub pop jg mulb mov or jg ja into sbb mov aas test and (bad) (bad) dec (bad) rcrb mov ja aam in insb test sahf mov mov (bad) leave mov pop jle repz fistpl jno jg cwtl mov inc aas jo mov mov iret jg mov jl loopne mov or push je mov sub insb sbb sub mov fwait in insb movsl fnstcw int inc xchg test js cmp aas xor xor inc iret xor ret cld es faddl jg stos push sarb lret js mov roll call (bad) outsb jg gs add mov sub cli cld pop movsb mov fcmovu addr16 mov jb dec data16 jg fsubp fdivr bound (bad) ja cmp (bad) cmpb (bad) dec mov jns adc mov aas jne pop les arpl pop es arpl aam fwait push in xchg mov cli mov jg mov pop iret jg outsb inc (bad) xor jecxz fmuls inc mov cmp ja xor (bad) jg (bad) sub push pop cwtl leave aas lods ficomp mov inc inc push mov xchg sub pop xchg jg fs dec in jbe jg and fcoms mov jg pushf xchg push cmp xorl call testb xchg loopne mov inc xor (bad) lods push push aad add fsts jno loop sbb ret or jg (bad) mov test xchg insb add inc stos cmp fstl int3 leave sti pop jg aam dec fwait test cmp mov pop inc sbb jg push mov stos jg adc mov (bad) lcall dec int jo lds fadds xor pop cmp sub xchg js out inc dec push push jnp ret and test inc jns mov cs sub jg decl je stos ja mov addr16 add lods dec mov repz fnstcw mov jns lds cmpsl scas fmuls push pop pop js xchg (bad) jg stos push and pop dec das outsl mov push jg pop jecxz les jl cmp pop push inc and push fnstcw mov xchg and lea and daa (bad) mov pop inc (bad) aas jae mov dec xorl into or les push add mov das imul ret adc sub and inc jno jecxz pop rorl das js lods or mov jg pop jle inc packsswb mov jmp rcll cmp cltd jle jg sbb fdivrs jg cmp fucomip shrb mov nop push out (bad) mov out inc lcall xchg arpl popf jg xor lret mov add adc clc fidivrl mov push int3 sbb jg jb xor fsubs mov fidiv pop sub lock inc rorl mov pop scas mov incb ja std mov mov pop jle sbb popf adc aad xchg (bad) lcall imul in in xchg into jo xor cltd dec xchg imul fistl jecxz xchg or aam test (bad) lods inc lock movsl pop and adc xchg aaa jmp jg dec cmc (bad) jno jl jg fdivrs lret ljmp fcoml leave ja inc aam pop insl jg fcmovne inc push movsb pop jg call lcall cltd push lock xchg or test dec push push inc (bad) xchg cmp and jge les test push call xchg jg push jns popa cltd icebp jo inc lret fidivr sub fmul dec repz imul jl xor jg adc cmp add call pop test lds lods sub mov aam sarb inc dec pop mov ficoml loopne cmp push jg pop mov jg in and repz and dec inc mov adc pop clc pop cltd jg into sub jg movsb mov leave jg jbe push insb orb sti push pop mov into jl and jg or loop mov sbb ja xor jg add mov sbb cmovns mov jb xchg loopne cmp fildll sbb inc add les in fwait sti lock arpl pop xlat jl popf je aad lcall push gs int jbe fstl les jg push repz jg popf add pop mov inc loopne pop test jg aad rolb xchg jg mov inc add jg jns mov jg push stos (bad) into sahf sbb pushf shlb icebp jg scas cmp aas jg xchg xor pop mov sbb shrl outsl pop nop push insb xor cmc out push mov test cmpsb lcall inc mov and lds inc sarl jecxz fildl ja (bad) jg pop test push imul adc out mov push aaa push jg mov icebp arpl add mov lock (bad) idivb (bad) nop pop mov cmp mov js adc inc sub ret movsl ja push aas dec and sbb xor or jmp pop mov aad inc sahf out leave jg fwait or dec ja nop inc mov imul popf jg pusha xchg push sbb jo pop dec ret xchg pop cmp sti repz shll jno add sub insb decl cmp jg imul jg and jnp ret jg enter cmp fwait jg (bad) scas ficompl pop inc sub sbb mov jg xchg cmp test xchg sub dec mov xor pop ja xorl in mov pop insl or or xchg pop out push add std jg ljmp ret pop inc mov in jg xorb add out xchg pushf inc es or and rorl jg or shll cs sahf pusha shrb jg push xchg mov (bad) push stos dec movsl fiadd jg stos jo xchg out flds add fild xchg jg leave jo or jmp push fsubs xor aas sar mov ljmp mov jnp xor or push sbb gs int3 jg in cmp fwait jg sbb jl out and mov add xchg sbb outsl mov addr16 sbb cltd mov ljmp pop imul mov cmp push sbb jle sub cmp fnstsw mov push movsl mov cwtl xchg fidivr leave xchg iret sbb xor clc add mov cmp pop outsl adc mov clc jg out push or and jecxz xchg inc xchg fwait mov sti inc cmp cli xor push lahf pmulhw mov shrl out cmc or and push jg xor fistpll xchg pop mov andl jmp inc nop xor sbb jg fs ds sarl pop rorb mov and pop mov imulb ss jae mov pop jg cmc leave (bad) add mov dec clc adc das mov aaa push inc mov fstpt mov dec fidivr icebp (bad) xor mov pop jne xchg std mov fiadd mov jmp lret jg mov incl inc (bad) xchg aas pusha jns ljmp mov xchg and addb ret cli sub jg mov fwait in mov mov adc jle adc in decb cmpl dec jmp and cmpsl imul mov jecxz jg cmp jg repz jg outsb push or hlt mov sbb mov xchg test mov jg bnd adc mov add pop add in dec mov je mov ja das inc sbb dec sbb in (bad) mov lds inc push (bad) jl repnz fsubrs adc (bad) xchg pop rcrb jp mov add inc (bad) inc aas sbb adc test les mov xor sar cmp in jg rcrl int sbb mov cmp dec jp lret xchg mov aam and (bad) vmovdqa rorl sub out sbb push and jp jg dec cli aas cmp outsl cmp fldenv jg int3 pusha push inc pop and pop fistpll mov repnz pop jns outsb int3 jg mov out xchg (bad) ficompl jp stos insl pop jg or sar and lahf iret or stc jg,pn out cltd jb inc scas loopne xchg xchg adc ret xchg aad jecxz jno jg (bad) ljmp lds jne xchg inc insl xor pop add cmp lcall jg int3 adc out out ss dec (bad) mov jg cli repnz jno mov sarl lods sti push hlt pop in mov jg out test mov jg jge or mov sbb nop jo addr16 or pop xchg aas jg lods mov ds imul pop insb jae roll into aas sbb or push jbe mov mov push insl jp arpl dec pop dec call xchg popa sahf jg xchg or dec sbb fs das inc popa jg mov pop dec sti out sub test inc add mov mov rolb (bad) fstpl jg and pop pop repz dec jg push fs cmpsb pop cmpl jmp jns dec mov pop add jg test stos lods sbbl push (bad) mov jg inc sbb in stos fnstcw add xlat inc jno enter sbb aam (bad) mov mov and ljmp arpl icebp lahf inc inc out jg mov and adc dec jnp mov lea jbe or cmpsb ss jg add inc jno lds and stos sbb fistpll sarb les jne or jg mov lcall aam mov mov push add cmp arpl rcrl jg test cmc aaa sti les adc repz (bad) fistpll xchg jnp mov jae (bad) add js mov pop push ds xchg shr adc imulb jne push and mov cld negl fcomps aam mov cmp and dec iret bound fbstp pop mov dec movsb out arpl jg sbb dec lds scas scas jg notl testl mov mov sti push stc aad cli inc cmpsb xlat xor pop nop pop test jg mov dec jg xchg adc xchg outsl outsl notb aas aaa push sub xchg jg in ds movsb imul inc popa (bad) cli pop xchg dec stos repz xchg out mov cs hlt mov add daa in sub jp addr16 int pusha pop jg inc testl jg pop and mov add jg dec add jns movsl cmp lds int pop or jg pop push xlat ja fwait and loop jg sbb mov jg mov (bad) jb mov aam loop jg xchg pop push xchg bnd cltd xorl cli cmp dec cwtl (bad) push xchg add into cmpsb inc outsl pop mov xchg imul push inc cmp mov xor loope in insl aas dec cmp ds stc ffreep xor mov ss xchg popa xchg and pop or (bad) adc mov leave xchg push inc jbe mov mov aas or out psrlw inc xchg sbb lret adc jg incb adc imul repz sarl adc pusha aas ljmp lret jg and sbb inc xchg inc cmove jg clc cmp inc outsl dec dec aas jnp inc call push mov sbb jb dec into (bad) dec mov xor xchg inc jg add xchg mov ret rclb jg push fbstp adc scas jg mov and in xchg loope mov pop mov jg jecxz icebp dec ret sbb jg lcall pushf (bad) push roll inc (bad) xchg cld mov cmp or mov jecxz fs push lfs and or jg adc lds outsl je rolb mov adc jg in iret and sti (bad) out mov mov ret sub pop and in jg loope adc mov inc ds inc rorl push sbbb mov (bad) sbb pop jae pop mov movsb aad dec insl xchg jmp notl push mov mov fisubrl xor push mov cs insl xchg add mov and pop jae mov dec mov insb rolb mov cmpsb mov in jg aad out cmp and (bad) ja mov xchg imull mov sbb insl sub imul sub jg cmpl jg (bad) ljmp mov out dec subl lcall add jg mov xor dec cld fwait add bound adc fimull cmpsl push data16 das dec out pop out mov aaa pop mov xchg xchg sbb push lret push jg sbb jecxz imul xchg jb push (bad) inc fdivrs cltd and sbb arpl pop (bad) jg sbb cmp jg (bad) and dec pop xor test or xor lahf inc loop jg cmpsb add bound stc push and scas cs push hlt insb int3 (bad) jg popf ret movsb or dec lods pop stos cmpsl loopne ret aam enter mov inc mov adc dec pop jbe inc lods loope sti jns push push popa jne jo jmp rol adc or push jbe sti mov add adc adc aam fs pop dec push mov push mov outsl in nop add pop in lcall xor and out sarl inc mov xor dec dec nop jb mov aas (bad) cmp and mov out push jbe jg jl cmp jg cmc cmp add sbb je lods xchg jo sub xchg dec pop bound iret push push mov stos outsb idivb add dec test inc xorl fstpt imulb or popf inc jg xor xchg mov pop lods lock dec push fstpl jg inc and dec out mov cmp jg fistpll jne aas xchg jecxz out adc mov jno cmc pop and push addr16 insl adcl mov (bad) sbb sti lea jg ljmp cmp mov nop inc bound mov xlat pop test loopne xor sub mov jmp jbe icebp push mov fcmovb sbb jg aam push aaa addr16 jp rep sub out jg xchg jo cmc dec lahf cwtl inc dec jg leave and test aad fdivrl mov jg mov out sub or fcmovnbe sahf jg sbb sub jg adc enter wbinvd mov cs mov jne inc pop cmp cmp sarb pop xor fidiv (bad) out out pop test pop (bad) je jmp in dec inc cmpl movsb jg sub jg adc or xor jg jmp xchg loope cli test cmp push add (bad) in cld das jg and mov push inc jp lret dec int3 imul mov jg add cmp in pop nop loop jg push mov jle jmp test push mov and pop mov jbe pop les xchg fidivl push pop mov mov jg xchg test in xchg aad outsb mov jg xor adc rorb dec mov cltd and jg xchg fildl sbb test lahf bound cmp je jnp lods sbb pop or jg or and cs xor ds adc dec in mov pop mov scas leave or pop test das mov sahf int3 out lret mov pop mov into in popl adc jle outsl jb sub fisub stos jg mov pop inc aas sti push (bad) and or repz or xorl inc test jg or cmp jg mov out pop leave xchg jg dec mov aam sub stos xchg push loope jg,pn imul sarb push in roll xor mov xlat (bad) jg lods pop dec fistp mov inc cmp test jg jb xchg mov adcb jg shrl mov dec xchg inc not push mov sbb xor and loope scas js add mov push ret dec mov (bad) push scas mov int out in sbb xchg jg jns add jg sbb adc jp jg fwait xchg jg mov fs jg ret cwtl sub xchg mov ja and ja jg jae popf mov push dec adc mov xchg dec dec sbb aad inc aam xchg jb push fsubrl mov push mov xchg xor repnz insl (bad) lahf test jg imul xor lods (bad) cmp dec jg adc das mov push jae in test mov cmpl inc sub pop pop addr16 (bad) jg icebp js xlat aam pop jg out push xchg bound and int push inc sbb jbe pushf inc mov je xchg and push ja sub pop pushw sub mov push cmp pop sbb cltd pop jae mov mov fucomip mov pop push outsl imul mov hlt jp leave sub xchg sbb add sbb repz dec fsubs dec lea add sub add mov pop jg insl xchg arpl int3 mov push addr16 jg pop std push pop mov (bad) jl out dec scas jp inc mov imul iret mov sbb fwait movsb mov xor jo push addl mov push mov sub dec insl push mov outsb xor push and (bad) test jg fsubp repnz lods mov ror sarb test sub cmp in cwtl pop stos clc sarb ret mov mov int3 test lcall jg repnz mov jg mov in outsb jne fnstcw push sub dec je jno aam jno sub test movsb sarl sub (bad) pop jg,pt addr16 push mov mov jg testb sti leave pusha mov ja lock xor outsb mov pusha loopne jo sbb int3 mov mov bound punpckhwd push push enter sbb mov stc push jae cmp sbb mov jge,pt and sbb inc fcoms add dec loope cs stos jg pushl cld mov inc or jg dec pop jae sbb out or sub sbb dec push jnp xor leave insl xchg xchg mov jns ror pop pop mov sbb jg inc jp out adc xchg xor dec pushf cmp jg nop dec in (bad) pop jne (bad) rol xchg fwait pop cmc jg xor push jg mov hlt sarb shll les inc je bnd scas dec and push imul ja das in adc cwtl mov mov dec pop pop jo jg mov fistp ret cmpsl jg xchg push xor push sbb ja mov addr16 imulb pop sbb dec push fucomi lds sub jmp insl test mov sbb jg sahf cwtl and and sbb jg push cmp or sbb leave mov push pop jle lock mov cmp dec add (bad) jg stos inc scas aas sbb jg adc xor jns mov inc fiaddl xor ss in lock push dec jg or sub mov jb pop mov popa imul jg mov je and out dec mov jg push cmpsb fsubs xchg xor sti mov es mov xor jecxz movl push jg inc mov icebp fsubs out fisubr aas popf cli ds push fs mov mov std xchg int3 push clc cs push cmp outsl xchg leave dec loope and ss lods xchg xchg jg nop das pop ljmp insb fbstp rorb sbb push out xor push js pop into (bad) fwait push ja std mov outsb lcall fistpll push ret aad push test outsl jo jg iret pop sub or jg push or dec outsb xchg jg inc and push call stc rorl cmpsb imul mov mov pop xor xchg and test mov ds enter stos mov ret lahf jg add push pop jg mov repz pop test add lret inc dec inc into mov outsl nop jne mov sbb xor dec push or scas leave or sti pop dec cmc xchg mov hlt pxor lahf ret inc sbb enter jb (bad) push (bad) repz mov data16 mov out sub jg mov or jg scas jmp popa mov jo add fimul stos jg sub fistpll xchg lods mov cmp hlt mov jmp and jg mul movsb xor cmp fs and and out fldcw testl (bad) or mov enter int mov adc jg (bad) out and int3 pop aas cmp pop mov mov dec in jg cmp xor fwait je sub mov test fwait mov ret adc aas lock mov ss sub cmp sub push aas mov sbb loop imul call jbe mov jg pop sub inc inc ds dec (bad) mov leave inc xchg scas push jo mov pop jg dec rcrb sbb adc adc lcall mov rorl fisttpll stc loop (bad) stos in jg dec lahf pop movsb xchg inc loope push insl push pop and sub inc aam mov cmpsl dec push mov jge movsl xor mov inc pop mov add ret shr pop and jg idivb mov mov and sub insl pop bound push addr16 out popa mov shlb mov rcll pop or cmp pop adc jmp cmp outsl outsl movsb mov jbe lahf ja sub jmp pop mov cmp addr16 arpl aaa fs push cmp or mov mov pop add dec subl je sarb xlat clc popa fidivr cmp mov loope,pt mov adc (bad) cmpsb int3 or or fistpl std aas jg lret pop cmpsl sub data16 mov js mov xor mov or cmp adc pop xchg stos js mov nop leave clc fdivrl daa mov adc popf imul stos and (bad) ss addr16 in fldenv xlat inc stos aas xor fadds jae sub xchg xchg jo test js imul pop xchg adc aas cwtl mov jge pop aaa inc xchg sarb inc push daa cmp sbb fdivr movl jbe mul js xchg jg in insb sbb jg mov popa pushf jg icebp fild and jg movb jg lods or cmp adc sahf (bad) mov jg xor xchg cmp imul mov mov (bad) push icebp (bad) cmp aad inc jg stc mov mov (bad) repnz rolb inc (bad) sti in stos in push inc iret test call mov push xchg jg push jl dec lahf jb jg mov xor push nop jg jae in mov mov (bad) cld repnz insb das out out inc jne jmp (bad) jmp rcll lcall pop (bad) cwtl es out xchg or cmp sbb std pop jg dec ja lods insb fist stos jg pusha aaa test jg pop push repnz das jg ljmp jg (bad) divb jg (bad) (bad) mov xor sbb (bad) aaa stc stos ds sbb xchg cmp scas setno insb bound cmpsb mov jb aas test and fsubl jg mov hlt mov adc inc mov push push insl inc ret jg rolb (bad) int3 sub push xchg fstpl mov fxch movsb push mov cmc scas push pop lock sarl int3 mov cmc xor xor daa outsl mov jg or adc add popf loop arpl inc mov insl call pop gs mov jg lock ss sub repnz cmp movsl fstps test andl jg mov fwait xchg pop push in sub mov int3 sarl loope adc ja push xchg xor xor insb je aas pop dec or roll adc sub inc pop jg repnz push shlb jb jecxz jg icebp (bad) movsl jg jno dec popa push jge jg pop sti add jg inc xor xchg mov out cltd cmp adc dec out jbe test push pop sbbl push test pop sbb jp xchg inc xchg dec adc shl mov or (bad) jg jo clc les pop mov leave adc jg xor jl gs jbe in mov pop imul sbb jnp ja jg repz push enter (bad) test push xchg and inc stc fs push cli in jp nop xchg sti push fs loop popf mov inc jg stos dec mov jg mov add sbb jg mov and (bad) mov or cmp or jg ss fs cltd popf hlt lods adc in or adc cltd dec scas in mov imul rclb inc jg and adc xchg out cs sbb insb in and mov aas sub rorb sarb out dec outsl mov adc xor es test pop insb mov enter insl fstpl outsl loopne mov inc jg sbb ja cmc (bad) jg std cs stos mov and jb push jmp inc loope xor add outsl jg test mov jg jns push xchg sub idivl ds dec cwtl test int3 xchg jg insl mov loope xor sti sarl xor rclb insb dec jg lret push add mov lds xor xchg rolb jnp add jge inc cmpb jg ds inc aam sahf popf (bad) cmc repnz add sbb js dec jp push sbb iret stc loopne aam leave cwtl repnz stos sarl pop out xor pop (bad) xchg cli or push push jg fnsave adc mov sub jg bound mov lods xor je mov sti jg xchg pop cmp stos jp push cld ljmp psubd xchg aas adc es add dec sub pop addr16 testl push mov mov adc xor xchg mov dec sub mov push inc lahf mov pop xor insb push fistp adc out clc aad cld jg pop lock movsl jle jg nop call fidiv jg (bad) mov adc arpl hlt mov fs push xor mov jmp mov inc cmp add jnp aam inc jl jno ss or push cltd adc add movsl jnp push mov cmc push jne ss jg out inc rorb jnp mov sbb lcall jg and mov cli jg jge xchg mov into test add pop xchg inc pop stos mov mov popf push adc int3 imul jecxz fbld movsl hlt insb cltd sbb int3 iret pushf sub push mov js std pop dec daa ja lahf sarl mov loope aas out jne or ss cmpsl in (bad) (bad) mov pusha mov shr sarb (bad) pop jb mov jp popf leave add sbb out std add jg lock adc jg enter in or insb dec pop sub cmpsl imul jg test mov xchg (bad) les mov (bad) xor lock cli stos xorb (bad) out outsl inc jne scas nop jg pop cs cwtl xchg mov (bad) hlt call scas mov or jg nopl add int3 adc xchg or and stc jns cmc push js aaa jg mov adc mov pop xchg xorl add loopne jno int3 sub inc dec test hlt mov arpl scas push push pop leave push mov mov inc xchg insb push mov pop shl fdiv cmp icebp in mov jmp pop push sti jl push pop mov jae mov mov scas xchg out mov pop cmp push stos clc (bad) sub lret imul outsb sti cli mov test (bad) shll fstpt pushf jg mov or (bad) iret jp out jg fucomi cmp sub orb sub mov xor rol xchg lock mov pop fcomp insl add movsl enter add add jmp inc inc aas movsl mov dec mov cltd jno jg inc mov mov aad ljmp sub outsl add addl test push jg sbb push cmpsl pop outsb jg pop inc or inc push fidivr sbb mov add mov scas nop jg popf imul mov mov inc sbb pop jg sbb imul aad jb loop mov stos outsl (bad) popa or leave nop xor add insl loope mov dec push mov aad sub std ja fwait movsb mov (bad) jg pop outsl mov inc inc jg fprem1 (bad) mov icebp push pop fnstsw pop add mov idivb icebp xchg pop out jmp test pop outsl jb sub sub dec pop dec js jg xor iret push insl mov push icebp ret inc dec xchg in lock xchg inc jg stc mov call out jmp andl and push je sub inc cs cmovle cli pushf dec arpl jle mov dec lret sahf (bad) ret jg mov and jae push dec inc sbbb jg out insl call cmp jg outsb std xor jg jo push movsl sarl and jg sbb cmpsl and cs adc dec xchg jno mov and adc jg or push mov xlat lods dec xchg stos push push fdivrl xor xchg arpl cmp jg popf add mov jnp,pt imul es xor aaa arpl push and mov jo jg loope (bad) pop dec es mov ljmp sbb push stc aam sub jg xor jecxz mov test cld fldenv sbb push lcall fsubp cmpsb in aas mov shrl push dec (bad) cli mov scas movsb jg mov or les dec xor scas repz mov mov jo and jecxz aas daa addr16 jbe jno and add mov sti lret int sbb inc mov cmp pop mov dec jecxz,pt insl fs rclb imul sbb ret pop lock sarb loope inc lcall aas inc pop jecxz xor dec jbe mov mull mov jno sbb add add lods push stc jge mov push jg imul jg jbe xchg jno ror sbb addr16 shll nop pop (bad) jmp dec data16 in cmpsl cmp adc pushf pusha repz sbb pop rclb ret outsl and push cmp mov jg lods inc sbb mov adc dec mov push xchg outsl push test ja clc or fistpll sbb cmp xchg mov inc mov pop stc jg fs and inc push mov out mov push popf inc rcll jg cld and sub jg mov sbb jg inc dec into rclb pop (bad) jecxz mov sub cmpsl and sar dec jg pusha mov sub xor lret mov icebp dec mov adc (bad) repz inc test push out mov (bad) fcomps push ljmp fdivrl (bad) push adc scas das push pushf pop jg and mov out lock add ret cltd fbstp ficoml sub jg (bad) jmp pusha jbe outsl jg mov popl jnp sub pop test jbe ja jg sub gs aas inc jmp scas fsubrp rorb jg stos and aam test mov arpl mov sub sbb add mov sub push add std imul mov scas cltd jg xchg fwait inc sub popf pop pusha fnstenv xchg jg fwait daa xor push inc mul loop imul stos jg xchg xor lret jg imul xchg mov jmp insl mov mov jns icebp sbb aas cmp sbb int inc leave loop jg mov insb cli (bad) mov out imul arpl jno out jae ss outsl dec cmp fnstcw mov inc or jg pop testl xor inc cmp inc inc test xor stos mov fnstsw pop idiv pop sbb jg inc ret jno fldcw or sbb mov dec ja push mov stc sbb push jg inc add pushl xor add fnstenv jg pushf push push aad cmp jp add cmpsb hlt jg lcall xor (bad) test andb lahf out ds jg loope in lods pushf jg jmp mov inc cld insl fiadd xor mov pop cwtl mov shrb lret movsl into pop pop or ss mov xchg leave cmp mov or xor mov (bad) (bad) mov and and xchg cmp fimul adc mov cmc xlat cmpsl loope arpl std xor push je mov push rep mov mov cld jg cmc and (bad) jb jg fisubrl pop ja fidivr and cmpsl fnstcw lods mov pop pusha out or cmp fcompl jg std mov jns fidivrl push pop sbb xlat mov je add mov pop or mov push jmp mul mov arpl xchg out sbb cmpsl add jg in out fwait pop mov je mov xchg inc pop push sub xor jg ss cli shrb js or sub add into jg sub insb adc imul fcmovnu dec into or add xor fsub jg bound jp pop jg and mov pop add cltd and inc (bad) jg in loope repnz push jg or pop jg (bad) push ljmp jg decl xor mov inc outsl pop push jg sbb cltd fisubrl add mov int and arpl in in fnsave jg (bad) pop mov test jg pop sahf sbb xchg or jg arpl js int3 cmpsl jg test cltd repz mov xchg push add rol cmc jg enter aaa sub sub outsl repz loop aas mov pushf movsl fist aas push addr16 push in jl jo sbb aaa bswap rol jnp test mov scas pop push jl xor mov call xchg nop stos jg and stos inc out jbe stc mov mov dec (bad) (bad) ss test push out pop je dec mov mov rcrb repz (bad) mov dec mov pusha mov jb enter shrb jne sbb mov pusha xchg jbe (bad) (bad) jg cmpsl popa sub mov loopne dec push xor add (bad) icebp cmp arpl mov inc insb ja shr jl icebp bound ss mov mov xlat inc dec outsl ljmp fs sub jg xchg fisubrl pop ljmp cmp sbb jns sbb mov jg and shrb orl stc sahf mov aaa inc pop mov dec lea push pop mov cmpsl cltd xchg cmp loopne dec adc insb sub out sub dec dec jmp inc or cmpsl mov xchg mov sbb dec je mov fwait mov jp pop aad call rolb int3 out xchg enter mov fadd scas into lcall rcrb push or pop leave jl (bad) scas xor jg xchg test rcll xchg add dec out pop imul stc xchg sarb std stos mov sbb mov enter inc push (bad) mov dec (bad) out push clc mov rcl cmp push push adc inc jg,pt std roll les out inc loopne ljmp jg repz dec adc sbb jg mov lret cwtl xlat xor in sub or jle mov clc cmp out aas fdivr and lods inc adc sbb jne cmpsl loope jg ss movsl repz mov cmp add jmp push push or arpl hlt ljmp loopne jg xor cmp mov outsb jg insl sbb mov aad jg pop or (bad) aam call jb jno (bad) jg pusha mov xlat push mov lock add jg mov popa push lea mov pop cmp cmp cmpsb jg xchg mov lahf mov mov outsl push aad inc jge jg and adc test adc mov popf (bad) insb loope out push les sub inc aam fcomip std sti sti jbe je pop roll int push push push cmp xchg mov push loope cld shl mov (bad) in lds inc insb dec pop push jg fcmovb (bad) aam mov cmp jae jg pop test mov (bad) call sbb outsl ja (bad) mov rorl push jg leave testb mov jb xchg dec jle or scas repz sti xchg xchg mov xor push inc jo push jge jg mov inc inc inc fnstcw movsl adc enter loop jg fwait movsb sbb repnz jns and test ret jne add decb or sbb daa pop shrl dec popf add jl addps push fidivrl jbe push fcompl nop push dec sub mov sarb mov pushf add fbld dec push jp dec fnstcw pop mov sbb push jg mov stc iret cmp sub mov cli pop adc ljmp int or push mov insb insb hlt add flds inc push (bad) or jg push mov outsl out repnz adc dec pop mov icebp xor cwtl cmp mov inc adc add mov mov jg pop inc mov cmp cld mov repz pop das out jg add lret icebp movsb out (bad) cmp fdivrl and lock add mov addr16 mov mov gs jg and (bad) mov jb fsubrs cmp jg lcall jg and xlat idiv cmc dec jg call jg sub mov sti fdivrl xchg sbb jg sbb test or inc sbb cmpsb push pop jns inc (bad) mov dec jl shrl cmpsl jg mov pop cs outsb jg in xchg in addr16 mov xor mov push sbb jb jl mov mov jge data16 (bad) xchg out stos imul leave js push pop test mov mov divb loop,pt cltd cmp push sbb das cs jg xlat (bad) xchg rclb fildll pop out jae mov add int3 jns xchg lods mov jnp cmp inc jg dec lret sbb je mov inc or mov mov jae std data16 ja mov popf test in jg sub lret insl data16 dec aaa mov sbb mov dec sbb lock inc push in mov fs in out mov or inc hlt pop jg jno sbb jg push into (bad) loopne pop push mov mov xchg dec push push call rolb fmuls std mov enter into sti es inc jg mov inc xchg repz loopne jg outsb cs (bad) sbb push lret jg xchg push mov jg cmp mov sbb pop push jg mov inc pusha (bad) jno mov mov cmpsl dec mov jg loop pop mov fisttp jg ret in stc pop cmc jg mov mov push xchg and push cmp jb jg pop shr out mov sbb sbb mov fildl add jg push mov mov push loop loope push inc push sti or insl sbb add jg mov sub inc jae jo dec (bad) sbb inc outsl jle sbb data16 jg inc jne pop mov repz mov ja jle xchg mov cmp inc push mov notl imul jg and lea ret outsb xor loop pop jg push xlat clc ja mov and jmp dec pop pop and jg jno pop iret pop arpl das mov js or mov or or aad ds cmp inc lods (bad) jne fwait call dec push jg dec xchg shlb ficomp leave jbe jle jg fs stc lret pop jl adc sub cwtl jns cmpsb cld cmp mov pusha mov cmp insl popf aas mov pop push dec lret ss inc rorb jnp (bad) sbb es aas das (bad) xchg jb cltd leave inc aaa cmp lcall sub mov xchg pop fwait dec out scas mov jnp hlt or cs sub pop outsb mov jge dec lock sbb xor mov push aaa ror lret leave xor cmp jg or outsl das jg sub jnp cmp sbb incb mov mov adc jg adc xor mov xlat xchg sub (bad) aam jp jg push js xor lret cs pop (bad) adc push jg xor inc out xor mov inc arpl pop jg (bad) mov cld arpl (bad) jae test aad out ficomp clc xor jg scas movsl and fstpt jg mov aam jg pop lret sub push ret movsb jg inc (bad) cmp dec out jg add pop daa adc insl adc pop in jg iret out jns sub jg mov outsl or popf sub (bad) stos mov push es jo or add mov sbb and or imul inc add jg push jns inc ret push xor xor xchg inc sub jg rep jp stos jnp jg push ret decb jo sub data16 mov gs jg adc arpl imul outsl data16 mov sbbb mov inc (bad) fstp int or pop jbe xor icebp sbb mov push test push enter pop (bad) lods dec loop (bad) aas jecxz push insb cmc (bad) sbb mov aas push fs jecxz mov les (bad) cli inc xor (bad) pop push aam jg xor xor leave mov lds sbb adc je pusha or mov pop popa jg sbb lahf out sub popf repnz out insb and adc (bad) or movsb jmp int3 xchg popa sub xlat mov mov and xor dec js addr16 hlt inc xor fidivrl dec cwtl pop sbb lcall mov inc outsb push in outsl sti sub push fisubr push dec rcrb jg and xchg dec jp pop lea inc stc xchg hlt mov jg cmp mov jnp jecxz adc jge pop lods add dec push sbb jbe adc cmc leave mov mov or mov hlt cmpsl (bad) pop mov adc cmp mov cmp dec (bad) or test (bad) stc cmp jns insb mov ret (bad) pop outsl leave cmovnp cmc rclb jg pop test roll jo negb out xchg call mov push and sti out stos inc dec or pop outsb out out push jne xor mov jg mov pop dec mov je into xor sbb dec push aad or add dec mov jg dec rcll mov (bad) jae icebp jmp jg movsb loope jp test andl pop (bad) ljmp dec test sbb push aas mov cwtl imul call push jg,pn inc js jbe dec adc movsl inc cltd jg out jbe add xor mov (bad) adc addr16 icebp jg xchg lret test cmp jg pop in push pusha (bad) dec jbe xchg adc clc jns dec data16 and outsl mov dec sbb js addb (bad) xor je or fdivrl push int3 lods cli push (bad) mov cmp sahf rcr sbb addr16 mov inc or fstl sub cmpsb addl lods mov cld stos sbbb pop cli sbb jg sti das int3 push pop xchg mov mov loop js aad jg cltd xchg sub icebp jg and sbb jg (bad) fldt push jg test mov add pop stc idivb mov gs add sarb nop lods int3 mov (bad) xor cli jb into xchg cmp fidivrl addl add aas dec fistp inc cwtl mov or aad out add lret fcmovnb push jg fcoml cld mov and dec xchg cmpsb je mov jg push pop ret inc jg mov leave and push sub loop dec mov mov add xor mov pop xchg ja pop (bad) fmull or push or (bad) daa pop stc imul xor xorl sbb jg insl scas aaa and ret jne jg test adc sbb (bad) jge bound mov sub adc dec orl jg cmpsl inc subb mov aas lods ret sarl add addr16 jbe sti arpl sarb test iret jg rcll or mov jne add jg ret je pusha imul cmc mov bound cmpsl btr aas jg,pn (bad) xchg in jae pop xchg inc lods jg push (bad) push xor ja mov dec mov call jg inc xchg cmpb icebp pop aas mov jne sub nop jg xor test push daa sub jg mov push rclb mov xchg stc mov sbb fcomp xchg out aas mov mov ret push inc pop cmp jl xlat jne insl pusha push fidivrl idivb test out addr16 jmp stos push sti adc and cwtl dec jne mov mov jg mov dec pop jg jno pop mov xchg inc dec in mov mov ja roll rorb jbe cmp jg test mov cwtl faddl (bad) pop icebp jg dec and jb mov mov fadds inc movsl mov in popf sbb pop jmp mov adc inc push add xor mov or sbb push adc adc shrb xor add daa mov in js sbb jg xor sbb fidivr push mov pop outsl in hlt psubusw cmp sbb xchg lahf jge jb cld daa jbe fistpl and add ficom (bad) imul arpl jmp lock sub mov jg mov jg mov gs lahf outsl out inc fwait xchg and cmp mov sbb jg or or sbb ret jg cld xor bound mov mov shrl stos out notb lcall jge xchg jnp xor dec fistpll push push movsb js in jg,pn aad cli inc repz jg cmpsl cltd mov mov popa mov stos sub mul jg pop pmuludq sbb shlb push mov sub pop xor xor push aas mov add fnstsw sub es scas add jl jg dec pop mov ficomp pop jg scas pushf push jg cli pop out jbe insl jg scas je stc sbb cmp js dec mov jae jg lds test jge imul sahf jmp mov stos or jmp cmpsb jno pop jb jg nop pop xchg inc ret test rorl lret jg mov repnz and inc ficomp dec xor into mov sbb (bad) dec jns idivl (bad) dec fs dec call jmp ljmp dec pop iret daa or test outsb push mov rcrb cmp mov dec adc mov pop sbb push mov inc xchg cmpsb ss (bad) (bad) stc fisttp jne pop sub lea xchg pop iret jmp dec jno xchg lock dec jg fldl cmp loope sti daa cli sub xchg mov jnp jg out xor push jno jg test gs pop dec loopne into push call cmp lods (bad) mov imul out sub adc lods pop xor or sbb cmpl sub inc jmp jl sbb jg test push pop jg mov cld fild inc xchg std mov cli pop in jg inc shrb lcall jg cmp ror jg mov add dec jg out xchg lea lock push adc sahf sub jae outsb dec cmp lahf fwait sti popa or outsl push adc pop test add push jg bound xchg mov and jg inc call cmp push enter inc stos jo pop ss clc les sahf repnz jg cmp pop jg xchg stc mov pop ss out shr addr16 mov mov mov jecxz jg cmp fimull mov jg and insl sub fucomp jp (bad) xchg add jb imul push mov lock add addr16 mov mov add aas mov dec adc (bad) sbb incl scas jg push mov cmpl mov es test dec mov ret test int3 fidivr insl mov sbb (bad) cmp cltd adc push jg lcall jg push lds aaa arpl rcrl imul (bad) mov xor mov or mov jns loop xor xlat jo sbb pop push imulb sub call xorl cmp ds mov fbstp dec movsb dec idivb mov (bad) jg sub xchg mov cmpl xor (bad) out and mov sub mov jg dec fimul jg add call ret jg outsl and fiaddl jecxz sti sahf xor pop ror push jg mov sub jg (bad) clc pop cs test and xchg pop ret mov insb scas pop (bad) xor mov pop jg add jb pushf jg mov loopne jg out popf pop and or lahf cmp jg popa ds fcomp add stos xchg inc mov add lea mul mov jg and inc xlat adc fistpll (bad) dec aas xchg (bad) dec insl xor mov ja sti daa fstpt scas fdivrl jg cmp mov jge adc (bad) stos push sbb xor xchg test lds aas sti dec push mov (bad) jg jo iret adc jmp inc int ret and push xchg fpatan xor ljmp cmp outsb push jg sub in insl dec xor cmc negl push lods mov jg into mov inc jle jnp (bad) push orb xor push adcl ja mov mov jnp out clc ret dec xchg pop jg push pop sarl (bad) mov xchg push mov cld scas not lahf cmp pusha out bound ja lods mov inc mov mov mov and mov jg nop dec outsb and cmpsb addr16 pop mov add hlt imul cmp pop jo dec pop mov inc push test dec test punpckldq pop arpl or mov fdiv lret scas adc lock pop jl inc pop sar jg dec and jg fild outsl mov and (bad) mov ret pusha in jg (bad) jge xor mov loope inc in lea cld mov dec aaa dec and push push lret cmc in inc mov aam (bad) data16 jp or jg pop fmull jg mov sbb lods or jg xor push addr16 jb lds xchg jecxz jp mov aad in pop adc and mov sbb addb xchg mov js dec mov in leave rolb jg cld dec xchg add test ja les add adc xchg (bad) sti aad pop add pop outsb mov sub lds fimul int3 (bad) (bad) lea jge xlat nop push xchg xor sti xchg mov inc mov (bad) adc call (bad) jg fsubl sti adc stc cmp inc stos mov stos sbb mov mov inc push mov cmp add mov pop test push das xlat jg mov sbb xor pop sub loope jg stc test pop mov addr16 aas shll out ja pushaw lods push jg popl clc jbe push repz (bad) into imul nop mov jg mov sti xor enter xor push packuswb jl notb and outsl dec xchg addr16 mov jg insl out sbb scas mov sbb xor push push cmp repnz aas and jns push add lods jg xor inc dec pop sti movsl out and jle jg test push sahf sbb stos (bad) push add jg sub xchg out mov sbb nop dec mov aad jnp stos and daa jg jno push adc add (bad) fsubl mov jg push fwait inc mov imull sti je mov jno in pop or imul jg dec rcr mov hlt cmpsb pop add aad xchg lea sahf jmp cmp cmp pop gs je addr16 cmpsl push test jae insl out pop outsl xor inc jg add dec adc mov daa push rclb and gs (bad) push adc addr16 sbb push sbbl mov scas jg lods roll dec ja adc (bad) jg (bad) lods addl inc aas out (bad) fwait and gs hlt cli insl rorl mov jae cmp jg adc push arpl jle ljmp jmp jecxz cs int3 jno movsb inc sbb sti fs mov mov mov cmp mov divl js jle pop cmpsl frstor (bad) test test out push mov repnz jno pop loope pop push call mov sarb dec inc cmp jg (bad) out leave daa push inc mov dec push push mov int sbb outsl xchg pop (bad) idivl (bad) dec int sahf cmp pop (bad) outsl mov sub sarl in fisttpl and lock sbb jg inc cli mov xchg sarl (bad) sahf sub loop inc loop mov sti push dec push mov jge cmpsl sbb lds or jg and dec push dec scas insb and sbb jnp jg sbb xchg push out das jg inc pop or cld jecxz je cwtl sub mov sbb and jg into inc fisttpll cwtl mov xchg push je and mov sti ret jg pop adc insb inc ds dec call mov mov jecxz jg lahf adc cmp xchg fsubrs (bad) insl jg push xchg out cmp pop mov push (bad) scas inc (bad) imul stos repz fisttpl mov jg mov arpl mov cmp mov jg xlat mov test mov mov xchg pop (bad) mov ds inc rorb mov mov idivl mov lahf outsl stc jae je or fs iret cwtl mov mov and shrb mov (bad) jbe das dec daa xchg jae es (bad) cmpxchg cltd xchg push mov xchg push data16 mov dec xor (bad) sub test jg cmp jecxz xor xor jg adc pop fstpl inc in enter (bad) mov fstpt fnstcw xlat push leave push cmp jecxz mov pop clc pop adc fcmovnb inc or mov in sbb push jg pop out xor insb jg aaa int out xor jg pop movsb push cmp test mov iret lea ja jg dec jnp and add divl cmp jg and shl push pop cmp mov roll adc (bad) sub mov lds mov xchg xchg mov push les std dec xor cwtl (bad) xor scas jg daa and pushf out jg mov inc inc dec lret (bad) cli sbb or push add sarb jg cmpsl xchg call xor adc (bad) xor pop xchg xor jb pop jg mov in push loope bound jmp add jg lret ret pop roll sbb sub dec outsb mov jg scas mov add push ret pop mov dec lock jg lretw mov push mov in sahf lret inc add dec jg inc mov or aad clc mov mov in data16 mov pop es dec std xor incl lock push jge dec xchg clc cmp (bad) sbb stc (bad) adc jne js mov or dec (bad) mov sbb add cwtl loop cmc pop jg sub mov fwait or (bad) xchg pusha jg sub cmp jg in ret lcall xor dec call cmp jg xlat (bad) inc push out data16 arpl jnp mov pop stos mov sbb loope or jle repz cmp inc cmp lahf scas push jg sub inc jb xchg xor and push cmpsb adc jg fnstsw addr16 xor cmpsl inc jne lahf mov push es cli sub inc sub or cmpsb nop mov push fmulp adc dec jg dec cld test jg insl ljmp pop sbb or loope mov jo enter cld sub mov popf (bad) xchg lcall fwait sbb leave push fsubr or inc dec ret aam mov jg or shrb push mov mov jno xor out movq ja push push mov push and dec shrb negl inc cmp das fwait mov mov jg push jmp and xchg cmp fwait mov ret jg push xchg les pop popa mov sar xchg push and int mov imul mov jg push sahf push jmp fwait adc ja or (bad) xchg pop mov sti jl and addr16 fildl mov jg xor fstl sub xor jp test jg icebp mov adc or jg inc add cmp (bad) jg mov xchg add push cmp mov mov jl pop aad jg ljmp jl lea inc addr16 pop out icebp sbb les stos mov xchg mov jnp jl xchg push sub daa (bad) and inc insb pop jg leave xchg into fwait loopne ss arpl gs iret xchg dec shrb in dec addr16 mov jle and mov push sti outsb fdivrs jne cmp jno test adc add jne (bad) jns xor (bad) push fisttpl mov test cmp mov add inc xor scas xchg mov fldl xchg lods inc adc jns lcall fisttpl mov adc jno mov or imul cmc divl mov jo mov pop cmp sbb repz mov (bad) pop cmp xor lds outsl int loope lds dec push push subl sti jle sbb dec daa icebp sub cmc iret dec inc mov inc andb add jg insl push test sbb adc cmp mov dec xchg into (bad) xchg cmp add and or (bad) dec mov icebp add jg aaa lods jmp jg mov into mov push out mov jp movsb mov and icebp add out push pop mov lock sub xor xor call xor inc adc pop pusha jg fsubrl hlt lods push push (bad) jg out fbld cmp add jg pop jecxz mov lods pop push sbb aad je mov or pop sub divb loope sahf jae ret enter cltd fistpl addr16 out ss outsb pop fnstsw mov int mov cli stos mov xor mov (bad) (bad) outsb push (bad) jg (bad) lods or dec mov arpl das mov cmc inc mov mov loope daa in call (bad) jmp inc rolb bound inc jne jmp xchg push mov jg ja xchg dec lods adc jmp and jno adc xor das jg fldt xor mov ja push jg hlt dec icebp jo push xchg loopne cmp rolb pop fdivrp sub jg mov jo and imul clc test punpckhdq mov and test jg push lcall aas sarl clc mov add inc mov jg loopne fs or jg sub insb and adc xchg pop data16 and jg in sub imul fs mov call rcrl loope pop in loop outsb (bad) dec divb jg mov xlat movsl jg push lret (bad) aas out inc mov mov lahf daa jns mov imull sbb cwtl add mov push or test daa or cmpsl push repz mov mov cld mov test ds and dec loop (bad) jno hlt jbe inc inc js fs stc sti testb sbb pop in xchg out loop in jg and mov jg (bad) and jg push pushf sbb jg addr16 pop fcmovb xchg lds loope push push loop mov bound icebp cmp jae push fstpt out dec rcll addl mov jg test loop dec mov inc xor inc fcomps outsb mov jl jg bound sub insb mov lods jg imull xor mov jo mov xlat lret xchg adc jecxz sub xchg repz addr16 out sahf pop mov cmp lods mov movsl sub aas cmc stos jae lret cltd aas dec mov fistpll out cmp mulb dec jg jmp sbb xchg lret lahf mov inc ret in cs sahf insl jg int imul pop mov inc test push dec test outsb mov add call mov mov shrb ss jg lret push push int mov jg mov jg data16 xor fsubrs outsl movsb dec cmp sub jg or jecxz dec mov inc mov sub pop imul cmpsl sbb pop call rcll movsb jmp pop add push inc ss scas sbb idivl lcall or fisttp loopne jg sub pop mov inc nop aas sbb ljmp xlat dec inc lret jp xchg mov loopne jg nop sub sub pop pop mov push push jg fst mov mov insb movsb xchg mov ja popl test repz addr16 mov jg add jbe popf loop inc call push push loopne inc xchg pusha mov rol arpl push mov pop inc in sub mov cmp or mov mov and (bad) jg push out jmp xor fcom dec mov ret inc mov hlt sbbl jg (bad) jle xchg out adc (bad) mov sub in xchg pop aam push cmp (bad) dec mov gs xchg cmp outsb jmp pop and jg push sbb mov adc rol mov lahf test mul push jg lds inc fcoms fs pop cmc (bad) call or pop inc repnz sti jg sbb sbb out and or mov scas ret test bnd cwtl push mov dec pop xchg add jle jg pushf lret mov in imul mov fldenv inc mov sahf nop fucomip int3 sti in pushf pop lods addr16 notl out inc dec add arpl xor pop jg jno pop js jg clc and mov subb sub scas aas cmp bsr pop pop dec rorl pop pop test jno push sub sbb xchg lds jg (bad) mov sbb mov dec mov shrl sub xor loop or pop jg xchg out xor jg adc cli jg jbe mov mov mov sub mov shll push jno (bad) jg test jg lock stos aas (bad) (bad) jg jge dec xor xor and add mov icebp jg mov jge jg push xor mov dec xor jns adc mov push mov xchg xor or jg mov popw mov (bad) jno jmp loope pop aas rcr cmc jl popf sbb or dec imul add test and jg jecxz mov repz lods scas jg aad repz fldl sub jo test flds push (bad) push mov dec out call mov cmp jg addl jnp int cmp mov pop out jg push es mov dec inc jnp pop mov lock hlt push sarb leave add inc and jg (bad) iret loope orb cmp pop or jg sub fwait pop sahf cmp jg (bad) dec push std xchg test push push loop pop mov adc xchg sbb in sahf (bad) jmp pop fsubrs xchg jb push mov jnp lret mov inc xchg jg loopne mov bound cltd mov into dec jnp outsl adc sbb ret push add (bad) sub mov in and mov inc mov adc (bad) jne jno add jg add and mov pusha mov xchg loop inc fnstcw push push in mov xor rclb jg es fldt sbb mov push int jge rol std jg test and (bad) ja fsubrl push scas jg add mov jne into imull mov clc iret outsb jg cmpsb (bad) jmp inc jmp and jns sbb inc aad xor jg adc jge ret mov push add aam push int3 jg or loope loop shr arpl out imul sbb aas inc mov cld aam dec add mov out lret push xchg imul mov mov in or or (bad) sub outsl mov test (bad) (bad) inc out or jg std dec pop cmp sarb aas xchg inc adc dec xchg or xor pop xor lds cmp or inc sub jg lret sbb je js imul cltd cmpsl outsl out fidivl loopne (bad) push xchg mov jge movsb jg loope divl (bad) aaa inc pushf imul imul mov mov loopne xchg push pop outsb xchg inc cmp insb xchg inc mov popf dec call nop push sarl xor mov add xchg sub cmpl push inc push fs insl addr16 ds xor mov inc mov jg xchg mov outsb sub lock sbb data16 pop jo inc mov inc pop or mov jno cld cli inc (bad) (bad) hlt cmp inc jb push inc fstpt sahf lret (bad) fsubs jg jl mov popa cmp jg arpl mov ja cmp popf jg xor lock nop daa cmpsb and and loope test movsl add inc outsl shlb lods inc fnstcw cmp add outsl mov in mov xchg inc mov jp push cmp cs mov cmp repnz inc xchg mov jg cmp stos cld and cmc jg ret popf jae scas xor push mov jg pop jns sbb mov or fiadd movq mov xchg jg (bad) es sbb pushl xor jg stos shr mov xchg idivb push js xchg daa mov fnstcw push inc lret sub cmc mov lahf push mov jg mov ja jg fstp push push loop or stos shrb es jl dec jg lods dec xor sub inc loope mov repz rclb outsb jb idivl cmp fnstcw stos push adc lods or jg in mov xor shlb xorl adc das roll mov inc nop mov lahf mov scas stos bnd xchg (bad) mov push int pop rol push jecxz sarl popa mov xchg cmpsb loope jnp shlb les insb aad jg push push jg pop fdivs push sub test dec jg sbb arpl adc push int mov pusha aam loope and cltd inc add mov les jg cmp add adc in jg xchg or and pop mov mov jg push pop pop (bad) sbb sub rcr test and jg insb fldenv pop mov jg scas enter pop add jmp xchg out cmp sbb adc popa ss xchg ja fnstsw jp sub mov push mov jg aaa mov inc mov pop lds cmp popa jae inc sbb or jg inc lea inc cmc xor jg ret jmp aaa in sahf jg adc mov mov arpl cmpl mov lahf aas cmp addr16 xlat in dec sar jg (bad) xor imul lods in push mov jg in repnz jge lret pop mov sbb xchg movl cmp les or inc stc sti loope mov pop (bad) (bad) rcrb mov and outsl xchg cmc add aas lret or test jns fs scas rorb adc lahf xor aad mov inc jl xor inc dec mov and icebp insb sub xorl dec push jo inc lret mov jg sub mov js pusha cld outsl cs jo pop jg loope imul ljmp inc mov and test mov jno faddl popa adc mov pop cwtl outsb jg jae lods testl imul jo cli pop aas push pop mov jb inc cmp sti push cmp shr into call mov jg fsubrl in int inc or mov push ja dec icebp cmp pop mov pop jno and or adc nop dec orb lock xor pop add push mov insl jecxz movsb out and scas add mov sub shll pop mov loop aas scas addr16 ja sbb xchg rol imul xchg dec dec repz stos aad addr16 (bad) mov (bad) stc rcrl jg lds int mov jno sbbb push js cmp sti push dec ds addr16 xor adc bound mov sbb pop sub dec hlt inc fiadd and pop mov pop jle mov push inc push jne mov ss rorl mov or and mov jg dec test jp pop add repz lret push test data16 sti cmpsl mov mov into pop stc inc mov lock and rorl jle pop mov inc jno or mov jg test jo cmp push call jg xchg cmp shl fs (bad) ret pop mov mov dec out sub ficoml jg dec mov mov sbbl xchg jg loope lret inc pop stc cmpl insb cmpsb cli aaa shlb lock mov movsb jg xor push into xor push lcall int3 pop mov lret bound mov cmpsb xchg adc ja push iret insb fidivrl push pusha (bad) roll sbb push or push add jg pop or das cs aas pop pop inc jo call dec test jg add call xchg dec cld jecxz fnstenv mov xchg push mov sub loop jg mov cmp inc and mov mov push aaa jg lods test jmp xor mov fisubrl outsl cltd repz popa icebp dec mov js mov dec idivl cmc dec imul lock int xor jg gs es cmp hlt sbb sub (bad) insb and fs jno cmp es test add sbb sub subl imul rcr xor jmp cmp jg aad (bad) cld xchg out jns lds into std scas jbe pop push mov cltd jg out shll decb push push enter mov lods cmp sub insb incl pop pop jae (bad) cmp and sub pop push mov push adc sti push (bad) stos jmp push icebp cmp std fs pop repnz pop imul and loope call jg jp mov jg lods (bad) jg insl popa lds movsl sbb ja mov movq mov mov clc mov or or test or out mov adc push mov adc in fdivrl lea cmp sbb inc xchg je int push sub pop dec push decl jmp jg cwtl stc xchg gs lock cmpsb aad jg xchg inc scas daa pop jg inc movsb andl bound inc sbb int rol adc push dec lahf pop jg loope test in sbb std jle repz pushf dec xchg mov rcrl jl dec jbe insl cli jg std lods xor bound repz xchg push xchg cmp jg pop test js aaa fisubrl xchg daa jg push out fs pop adc js inc adc add lea xchg mov mov enter push jmp dec push pop js xchg sti jg and mov push pop jg fldenv (bad) lock in cmp mov sti lcall push dec mov and pop push jg push and add into push push cmp in test xlat mov das pop inc pop dec mov fmulp scas loope lcall push mov bound push jecxz jg xchg rolb xchg add cs idivb adc inc jg push adc mov jl adc inc xor inc in and sub add mov xchg inc decb jo sbb jbe data16 add mov div dec mov cmp (bad) pop popa or jg mov mov idivl leave stos or inc test jg push out push lea inc inc fbstp cmp movsb pop dec jg repnz int3 cmc jmp jg sub adc scas mov rcr dec cmp repz jle hlt xchg leave ljmp cmpsb mov scas cltd hlt pop mov dec jg movsl sub in and adc jne cmc fistl jg mov inc les repz or popf out in xchg push lock movsb cs andl mov mov pop inc sub inc mov scas sbb push sbb adc mov ret mov jg ljmp jg mov outsb hlt inc pop pop jg or mov mov flds dec push sub fisttpll dec insl or jg inc sar (bad) lods sub arpl fistp jg (bad) aam outsb out daa jg (bad) mov lret notl jg add cmp mov dec rdpmc jns push xor jge lock sbb mov gs pop xchg ret enter sub lret lahf popf adc jg loope fidivr aaa cmp jg test dec mov (bad) pusha pop repnz loop push mov ljmp inc xor adc (bad) mov push (bad) out jg mov or (bad) xchg (bad) imull loop dec mov fmul les mov dec (bad) jae repz js lcall outsl and pop mov sub arpl mov push stc jg test xchg shrb fnstsw pushf xor add mov aas ja push sbb jg int cmp sbb sub add jl fbld sti push (bad) jg out fmuls jg dec sbb cli aad push mov sahf xchg inc mov sbb jg xchg fimull aad jg out push scas test push pop add sbb jmp mov and out xchg dec test cmpl inc xchg fmul addr16 test lret pop test sbb jg mov or jg imull dec lds mov mov call pop mov in mov in jg fstpt mov jg pop cltd rorb dec mov add push jbe pop repz (bad) fidivl icebp jg cmp jecxz insb stc aam or mov daa rolb cmp loopne mov clc dec jg pop cmp xchg jge inc pusha pop (bad) leave pop add sarl jg es aaa sub xchg cld mov (bad) pop mov jg mov ja push call pushf dec cld pop mov aad jg cmp cmp in push sub xor rol inc sbb xlat into stos add dec or mov (bad) mov jp inc push mov pushf cmp jg es (bad) inc int3 (bad) jmp aam adcl (bad) jle aaa mov loop dec pushf sub jg fdivr xlat cltd int3 jmp pop jg rclb dec nop or jg adc add imul gs lcall popf push and arpl and xlat pop cwtl pop (bad) shlb jg jecxz xchg or in js lret in shl mov mov push dec push aas mov or dec mov or add ljmp dec jg mov jge inc data16 jg popa ret xor xchg push jg (bad) enter sarl ficom dec jl,pt mov repnz fs jg or jg cmp loop sub mov add adc dec sub inc jg xor repnz push cmp ret cwtl jg bswap mov movsl mov mov jg and add pop je push or repnz xchg scas repz sub jg sub cmp ficompl mov lcall (bad) push out adc maxps int3 (bad) jg push lret lret ret rorb add (bad) div pop inc outsl mov lahf hlt leave outsb (bad) xchg in addr16 sub inc and mov fbld negb test mov loop jg sub les in pop shrl or jg in data16 push outsl sbb fwait (bad) ja push ds jmp outsb add jg ss adc ret fwait xlat enter pop scas sub pop mov lds icebp and dec and cltd inc jg xor mov vpmullw mov test enter fnstsw push jge dec dec mov jg sub std pusha loop mov adc loope or stos sbb insb fstpt js (bad) sub add lret mov jp mov push jg mov or jns (bad) xor push xchg in xchg jg jne push or ljmp sahf pusha sbb scas jg cmc lcall les pushf testb (bad) (bad) add repz sarl pop lret mov adc pop cmc imul jg dec add aam in ja into jae pop imul jg sub fmul inc jg push aaa jbe jae das jne test jg ds sub jno push test pop out sub jg adc adc pop push mov xor pop adc lods pop movsb jg push or sub xchg or inc cltd cs aas (bad) sub sahf cmp shll ja jmp bound jg ret into arpl adc inc imul loop fimull mov lock jg push adc pop jg jge and sbb add outsl idiv lcall scas aas (bad) mov sbb fadd fs pop cli (bad) jecxz sbb stc inc call xchg test mov dec jmp (bad) adc call xor add ret int3 pop jg jo test daa mov jg cmp inc sarb mov cltd lret jmp icebp sbbl inc and rorl jg or push cmp mov pop les pop imul ret mov jns mov cltd push dec test mov xchg jg and ret ficom jg dec dec mov addr16 inc ret outsb iret out mov jp push aad and out dec fmuls xchg add cld das mov push jg outsb dec hlt nop fnstsw loop shrb and pop jmp adc inc jg pop sbbl push mov data16 xchg sti lahf std das dec mov jbe flds cmp lea sub cltd or push xor (bad) mov loopne sbb cmp mov inc jg push sbb lock mov jbe std mov xor or arpl jg in xor add push sub sub jg xorb aas fldt and dec sarl in dec imul sub xor push dec dec es mov cmc jmp lea cmp cmp lock (bad) div dec jg dec (bad) iret aaa jg adc mov jno sarl stos pop jp jl lds aas mov xchg inc xor out mov pop jbe jg int3 push gs pop pop add jo push jg cmpsb xchg cwtl adc stos ja shlb pop lea dec mov mov into daa ljmp dec mov dec mov addr16 fsts lock jg pop add pop cs lret inc in mov inc mov (bad) add adc xor jg frstor mov sbb push insb call lods nop or mov or mov pop mov fimull ljmp dec xlat popf (bad) cmp fdiv inc xor push gs jae mov pop mov andl pusha push cmp xor nop mov int3 cmpsl inc pop jmp imul sub mov ds std pop add xchg movsl push and loop,pn cld leave pushf std mov sbb xor sub cmpsb cmp es mov call dec inc dec jg mov inc mov leave add inc pop fs jg icebp pop xor cs loopnew cmp sbb dec inc vpshaw cmp outsl mov lret dec les bound test inc mov sub sbb push ja ds inc imul lret ret adc push ja push jg popf jne xchg sub stos jg loope dec add decb cmc out mov cmp jg add xchg les jecxz aad jg adc js inc or int jg dec jnp sub jg push pop inc mov jg std sbb dec jnp pop notl fidiv andps sbb jb sahf push and jg stc push aam mov jg aad cltd clc xchg dec (bad) aas jb adc sarb jg push mov add lods jne dec and mov decl xchg jg sbb adc sarl mov jno and (bad) movsl std dec pop and stos bound mov push test loopne jg orl jg mov jmp lds idivl xchg in jb enter (bad) inc fptan pop inc jmp mov push jg pop sti xlat stos inc xor dec rcll add jg push repz mov dec adc pusha sti fcom inc jecxz je hlt push push jg pop inc test rorl loopne mov push adc push std jg data16 iret insb test aam cmc ljmp mov or (bad) and ss mov adc insl add ret addr16 clc inc ror jg pushf pop xchg andl adc or push pushl and rcr jg out sbb cmpl mov xor shll xchg inc dec fcomp jg adc cs pusha stc cli outsl (bad) mov imul shl jae inc dec shl rcrb sti in imul adc cmp mov cmp push jnp jg idivb fild jg inc jmp jle mov sbb ljmp push addr16 stos nop jb jg add jmp sahf enter ja dec jg push cmp jg ret adc jno fbstp pop jne stos dec mov pop mov cld dec pop stc xor test lcall out int3 push addr16 xor mov sti push (bad) pop mov cmpsl aas push je and call jno xor ja dec jg push inc adcl jg mov loope mov dec jnp aas adc cmp cwtl nop sarb xchg cmp lahf xlat xor pop cmp jg or mov xor pop sub xor jg (bad) xlat dec (bad) jmp inc xchg jg cmc popa pop arpl jg jl push add push movsb jg icebp testl jg inc pop sub or cmc (bad) push iret out add imul scas cmpsb arpl stos bound cltd inc xlat mov mov sarb pop out pop adc jg loop out xor xor mov or and and ja inc jmp lds sub mov adc sbb out sbb outsb pop out inc fwait xchg push pushf iret addr16 sbb sub es jg cmp mov adc jg sub fcomi imull mov cmpsb push orl hlt jmp add push (bad) int ffree push sti js mov xchg outsl in sub hlt cmpsl xchg pop (bad) cwtl lds mov int3 mov fprem sti xchg xor jl inc fcmovb and ljmp loop push fmuls jge dec mov mov call dec jg loop dec push sub jae mov lahf cmpb hlt leave cmp rcr xor adc mov into push sbb lea mov stos push (bad) fs outsl inc xlat mov xchg aas mov test mov and push test int add pushf xchg sub iret ja aas push xchg push lea and js data16 aaa stos mov popf cld scas sarl test sub or jecxz push push adc pop mov (bad) jns xchg aaa fidivrl mov jg xor loopne ss pop fimull out call jg clc mov testb push les mov xchg push jg bound sarl dec push es dec sbb (bad) mov (bad) fistpl (bad) lock stos xchg push leave out mov inc push or (bad) mov sahf (bad) xor mov es sti sarl or std push mov sbb add pop mov sbb mov jg pop sub cmp enter jae ret repnz xor sbbl and maskmovq hlt adc mov pop ja mov int loope ds test sub iret int3 arpl inc xchg adc adc adc sub lcall (bad) in arpl and ret sbb ljmp lcall push fwait jbe mov fidivrl push mov ffreep addr16 xchg cmpsb jg pop leave adc call decb data16 out dec scas mov adc dec sbb lcall cli push cmpsl xchg push sbb jne jg adc std stc and lret out push pop xchg es je imull cmp push and sahf stc decl push aam pop repnz xor fnstcw insb pop sti jg adc aas sbb insl cmp jne inc ljmp loop jg mov xchg mov pusha lock outsb jle je iret cmp push or inc mov pop std xor mov sbb lock push gs ljmp les lea (bad) jne,pn stos adc jg or adc sbb mov faddl xchg (bad) iret ror jg push jnp push test mov scas (bad) es ret aad cmpsl das or push inc (bad) dec mov inc cmp data16 pop cmpsl fst dec jl aas aad clc aas int aaa dec pusha outsl jg test hlt in mov fstpt mov jg js shll cld dec jno sub push inc negl int3 push cmp add sbb xor mov pop mov fdivrl insl ja clc add lahf cmp pop call dec mov inc lods push mull lock adc adc pop mov (bad) jg out sti jp mov jg gs and jns sti test or inc cmpb adc lods dec out inc loope mov sahf fwait adc sti cli xchg daa rcll int3 jg test outsl inc aas inc or xchg jns jbe inc rolb or pop adc sbb cmpb lds gs cwtl out subb scas xchg or xor scas lcall sbb mov cmp mov xor inc jmp loope stos sbb push ljmp push mov pop push sbb lods mov mov dec lds mov dec leave bnd add cmp aam out mov mov rorl mov test addr16 jno push shr xor inc or add mov jg fwait in sbb js int3 add in mov js (bad) jno mov shr jg jl test lds daa sub or jae dec jg cmp jo sti sbb mov test scas pushf sarl in or pop (bad) and inc hlt outsb adc jg flds aam loop jg jne sbb icebp bnd mov iret out jg sbb mov mov sahf or dec lret outsl mov cmpl hlt inc insl or mov and xor push push lahf lods jo or clc fcmovu jae inc scas mov sahf push dec xorl fdiv loope movsb jg pop dec insb jmp push push inc test jle mov inc xor in negl adc dec ds mov mov mov sahf stos inc pop cli pop icebp popf and (bad) sbb pop jmp xchg jnp push pop (bad) xor jb xor or fucom mov ja mov xchg and test aad notb pop push or xor push sub jno sbb add incb outsl xchg aam scas xlat out jg mov mov adc xor in outsl jg ljmp mov adc and sub push outsl pop in jge js xchg xlat jbe jg mov aas cmp pop in movl cmp ja out jno aam xchg imul cmpl pop jnp jg mov sbb and (bad) push aaa pop dec addr16 sti add pop pop pop mov pop push mov or rolb (bad) aaa aas add pop adc sbb fdivl lahf xchg jg call cmc test out fisubr arpl lret ret and mov dec js aad fstl sti pop mov jb dec lods or cmc in test push lahf cli sbb mov add out dec lret xor pop jg roll and xchg mov jb ret (bad) popf repnz mov cmc jg mov ja push sbb adc dec add lock and jnp (bad) stos loopne jg repnz push sti add cmp inc or sti push inc adc push jbe sarl adc xor jg xchg adc scas xchg addr16 sub pop and jg pop outsb jns (bad) mov jg mov and inc xchg es (bad) ds (bad) xchg inc jg mov xor cmp pop sti incb into inc mov pushf jno sub imul push pop pop add sbb in icebp mov xchg pop pop enter jnp aas cmc loopne fnsave test push mov sbb push adc dec push sbb sti icebp jb sub cmp mov fidivrl dec push pop mov cmp outsl leave test or jae jbe jle xchg scas dec mov mov jns mov fsubrl sbb push jg out (bad) sahf jg (bad) adc test (bad) in inc mov and jg mov insl xchg jg loop dec std (bad) xchg bnd or add xor mov aas les pop dec ja jg or push mov aas pop jg push fcomps dec icebp imul movsb pushf lods cld aas cmp sti stos jp nop cmp ret mov sbb sub gs fildl std cmp mov imul in popf adc out ss sbb enter daa aam jg jecxz out pushf sub jno testb cmp jg and fldenv or sbb mov outsl cltd inc (bad) jg fsubrp push daa fs arpl dec cmpsl mov push jge jg sbb jb icebp movsb jg xchg inc mov jg scas nop xlat sbbl and pop lea inc dec jg pop pushf aaa es outsb jg mov sarb psrlq lahf fs repz je jns inc jg rcrl fldl jge mov ja imul stc popf div push push push call in daa mov jg adc iret jg sub sub cmp jae fnop add mov pop add xor ret jg jnp out lahf fadds pop scas xchg jbe pop mov inc dec and push ja xchg or add inc xchg push jecxz lea mov aam push jg aas push mov fildll es insb sbb sbb jae cwtl push mov jecxz sti cmpsl sarl clc push negb mov jb aas mov mov xchg cmpsb jg in gs push jno xchg data16 and add cmp pop jg sbb xor cli xchg jp int call xchg pop adc iret divb aas jnp jle mov inc mov shll add sarb push mov xor aas push inc fbld or ja in ret jae xor or aas inc aad test or or test mov adc into rcl mov mov jae xor mov lret jg and dec xchg push out sbb push cmp xchg mov fs jecxz mov jg jmp adc imul cli cmpsb xor jg mov stos popa ja dec (bad) jne je jg sbb popa add sbb jg xor cmp inc lock (bad) jg and mov xor pop sti ja jb ja push jae in fwait out cmp pop cwtl jmp out and jg test and sti cmp and jg push ljmp dec sub xchg adc jg push push inc dec leave add lahf lret rorl insb dec jns mov jg pop pop lcall xchg (bad) rorb aaa push pop out sahf aad jbe jg mov dec insl jg lods fwait adc inc jg sbb add jg inc sub pop stos jne mov jae pop dec pop test ret jno pop movl push dec pop in jg pop imul shrb push pop cs cwtl addr16 out sti cmp jg xlat aam popf in idivb test dec pop repnz data16 (bad) aaa inc roll jg std enter lea insb pop cwtl (bad) lock push aas mov fsubl sbb add or das cli xchg mov push push jl sbb bnd dec (bad) pop and (bad) jg popf movsl mov push int3 and fnsave int3 inc jg jns and xchg jg fbld add imul sbb lret jg xor cli aaa mov out mov fdivr mov hlt jle mov cmpl push lahf aas inc divl fdivs dec fwait je sub xchg xor mov mov ror push jg fisub repz sbbl into inc jge jg ss loope (bad) mov cmp jmp inc mov and movsl (bad) inc mov addr16 adc and pop bnd rcrb dec jp push aam imul sahf add pop (bad) jg test cmp pop rolb xchg aad pop int3 imul or jae cmp sub bound notb sub subl inc (bad) or icebp ja dec jg cmp or jg imul jbe add add scas xchg daa jnp int3 jne (bad) mov fs push fldl aaa (bad) mov sbb cmc (bad) ds pop sti loop cmc out add scas jae iret jg jnp outsl in stos and mov decb xchg add fisubrl fdivs fwait xchg fnstsw mov dec dec mov mov int sti adc lea inc hlt pushf idiv and insl cs mov pop es (bad) in ds cwtl adc adc push inc or pop enter inc fs and mov push std cmp cmp jg scas ret pop (bad) mov jne jmp ret into jg inc inc stos sbb push xor push xor mov out ljmp inc jg pop mov dec sub jg mov or ss jg push or mov jg les and jg mov outsl (bad) loope lcall inc (bad) (bad) jg test (bad) ficom or in loope std lods cmc jg and rcrl mov mov fidiv or xchg ror das roll jno sbb sub js sub jg jnp mov out roll jg movsl mov jl xchg icebp mov incb adc rcrb dec movq xchg or mov (bad) mov int std and jg ljmp cmc test fnsave out sti call add lods into xchg inc dec inc scas mov test mov iret adc movsl inc mov dec and dec imul jg inc cmp idivb les (bad) notl dec jg sub icebp jg xor insb jg rep jle in dec (bad) jo sti xlat out pop xchg jae mov in addl push jg xchg push pop add sti push jg jns push jg and idivb leave je scas test dec jo pop popa xchg jl and mov dec sbb inc adc inc aas test (bad) pop ja inc clc (bad) jg xor lret cld insl jno loop cmp adc add dec pop jne xor jg mov fs dec (bad) mov pop test and out mov bnd dec arpl int aas adc and ficom mov pop leave enter cmp jmp mov jg loope push js jecxz aas push mov pop arpl sub jg ret ret and mov pop push (bad) ljmp push jg adc pop pop dec repz lret or aad ss add lds mov jg or xor cmp sbb fwait mov (bad) xor jg jns push cmpsl cmp in mov ss jg fadd ljmp iret push lods lret aas (bad) and adc jg loopne popf xchg jmp inc fistp mov imul stos sub (bad) push jbe iret jg xchg cmp cmp pop jg jge xchg ficoml pusha (bad) jae mov inc mov arpl andl (bad) push popa pushf push cld push jg sub jg leave icebp mov xchg sbb insl out out inc out push (bad) stos movsl fistpll js pushf push aaa cli jmp jmp int xor sbb mov jg test inc mov and mov add leave sarb mov cmp pop xor ljmp pushf repnz and cmc inc push xor or (bad) movsb repz push mov imul mov mov jnp daa mov adc and sub and or adc and mov ja repnz outsb xchg inc add ror and (bad) in mov cmp push dec lret movsb xor (bad) mov add add int xor jg shrl stc cmc ds jg mov pop cmpsb inc push jge enter pop loopne mov mov movsl aas movsb pop cmp pop xchg (bad) lods cltd inc sbb pop repz stos adc jae adc mov jl sbb xchg out inc iret jg test das fs mov faddp mov jg loope push lcall cmp add in inc mov sub dec jg in cmp jg divb push into in jg pop push sub lods sarl scas xlat test jg jo fwait cs sbb jg pop cmpsl add loope jg or and xchg inc cld aas popa push xchg mov jnp inc sbbl adc mov pop jg push (bad) lret mov (bad) imul shrl sbb jl or stc je fidiv sbb mov movsl sbb xchg faddl xor testl dec and jg fldenv xlat mov fnstsw lea sbb push pop adc cmp clc mov aam jg aaa mov mov ret aas in and push push sbb dec insl jl (bad) dec and in xor gs mov ficoml out xchg test xchg pushf adc sbb (bad) fcompl inc outsb and pop stos neg ja mov mov xor mov cld lea (bad) pop out arpl pop xorl jg nop es scas push or cli mov mov sub int3 popa jmp jg add mov dec xor pop jg cld xchg repnz lret in cmp rolb loop jl xor fidivr roll jg dec js and fisttpll push pop out addr16 mov (bad) dec push jg xor in cmpsl dec pushf jns pop aam mov jg stc repnz sti cmp (bad) dec js jg insb (bad) ss and sub mov (bad) jg scas fsub jbe lods jecxz cwtl push aad les or jne cmp jg aaa mov jg xor and jg dec cmp leave gs js bound ret dec mov mov shll sbb xchg lret push lds stos mov add adc cmp stc out cmpsb pusha ret jp lock xchg cmc dec call (bad) push imul push mov das aas (bad) out fwait sbb lock in int3 test jg xchg rcl inc decb aas aad adc jg jne xchg push adc jg (bad) xor fucom push jg pop mov pop in outsl dec jg xor xchg cmpl inc sub ja dec jg or divb pop popl lcall leave stc push in stos fidiv mov push gs fmull and xchg repz daa adc out jp in cmpsl pop je jg (bad) lret pop jg ret dec sub loope jg fcoms movsb jg xor push fild in mov jbe add aas out cmp inc mov jg add test adc or jb jbe inc inc fdivrl xchg jg adc mov jnp jg (bad) cmc data16 decl pusha jg out push pop fist aam sbb sub mov outsb pusha jg mov pushf cmp mov loopne sti stos xchg sahf inc sar inc repz sbb push mov jo jecxz loopne push arpl popa pop jg jb pushf mov mov pop inc xchg jg out pop loop imul xor sub stos scas jg bound and jge jg pop push xchg mov pop jb mov pop dec cmc push dec xor js push dec out repnz fbld imul outsl aad pop jl inc cmpsb data16 dec jg (bad) ja push stos lds sbb add mov sub push mov int3 pop out pop sbb inc aas xlat das inc fdivrl icebp mov stos ret jg sub stos adc jb sbb rorl mov mov dec repz mov mov push iret test mov fidiv xor aas jg pop push fbld test jg jl xchg lock mov jg bound cltd jg cli sub mov jae mov and into xchg rclb flds xor mov call sbb into fcmove cltd lods (bad) cmpsl jnp inc pop push sbb adc test xacquire in repz add gs cmp jg popf dec ja add xchg das and shll xchg gs outsl pop (bad) mov test fnstsw and cmp add inc pop (bad) cld mov xor lock stos int dec lret jae jg mov and push idivb repnz inc lret jno sbb int jg pop mov dec cmp pop pop xor jg pop (bad) pop xor mov aam jle and flds fistp push xchg and jg in mov aas push sub inc fdivrs push jae pop aas aad jmp dec cmp jno inc jg xor pushf imul dec cmpl jg xchg ds fsts data16 push pop mov icebp fstl mov shrl cmpsb pop push adc (bad) and (bad) adc jge push pop or xor iret mov lea and pop jg inc push jae,pn sbb jg (bad) mov (bad) repz jg (bad) xor mov xchg outsl pop in addr16 sbb ror fs xor mov in fist adc mov ja push push (bad) outsl js leave out loop xor mov adc je shrb inc rorb stos or fwait aad mov sarb jg leave in loop jns inc jg add test mov loopne cmpsb int3 xlat rorb push mov jg push stos jmp aas (bad) movsl xchg xchg enter and cmpsl jge loopne (bad) push jg pop icebp in cmp dec mov dec lcall push (bad) fdivl or or ret fldenv scas xchg lock lods add shrb cwtl aas cmp icebp pop or pop insb addr16 (bad) jge (bad) sbb pusha outsb mov arpl jnp mov sbb bsr mov add xchg pop inc cmpl das jmp or adc clc out inc xor stc or aas push lret push (bad) mov shlb aad pusha jg dec insb mov cmp das jg ss mov or cwtl mov jg (bad) mov adc jg movsb repnz in fsubrl jg mov sar mov mov cmp in and xchg test jg call aas rcr xor mov adc out mov lcall inc addr16 dec jg es test mov push (bad) lock addr16 (bad) jg mov mov inc fnstcw movl jno icebp lcall lahf xor out pushf sbb loopne jg mov mov jns ds xlat rol or mov sub (bad) pop mov and stos fnstsw nop adc sti fs mov pop scas lret sarb or pop fsubl xlat fidivr jno jl test jg orl jbe in jbe js xchg test jg (bad) jb cli icebp cmp jno add out aam std push xor lea lods mov and dec dec add std bound lahf jbe jg dec call (bad) jno stc popf (bad) cmc adc das gs mov pop pop sbb lret js mov faddl in shrb (bad) aad test and (bad) cmp xor iret enter into xor mov pop adc cwtl inc mov jg sbb fmulp push sub push outsl mov stos adc sti sti lret pop mov bswap call imul push cmp pop jp jnp push add icebp push pusha sbb cmp cs jg sbb js jg popf ds jp loop lret add jae insl sbb cmpsl popf sbb jg iret mov xor call mul sbb push jg sub pop loopne jle mov sub popf ret dec test (bad) imull cmp xlat data16 cmp pop mov hlt sbb jne cmp loop fucomi cmp jg xchg fs pop sbb pusha add arpl roll mov dec in add loopne out push ja jp adc pop cltd cwtl inc jb (bad) lcall rcrb sbb test xchg ja mov sbb push pop setne (bad) push mov int jg sbb test lcall cmp ret xchg mov dec loop stos xor jg mov pop cmpl cmpsb (bad) adc jno jg and dec jl and aaa mov test jmp jg inc jle sub sub stos sbb jg mov inc imul xor adc sbb test jg mov xchg sti repz xor mov cmp jg inc push and rorb add repnz add mov jbe nop and jg pop xor ds pop jg mov in mov bound sbb jg popa jmp lret daa adc adc dec xorl lods rcrb mov call jg or iret mov ds inc hlt sub or sahf inc sbb pop inc mov movsb cmp xchg xor mov push xor mov pop cmp push inc stc stos mov inc push inc loop xchg aas fsts bound dec mov dec ss call jg andl inc aam std loope pop jg add lods mov mov aas jns inc adc inc aam push jmp daa insb xor pop enter test ja jg and jle repz dec stos fistpll adc int3 xchg jmp cmp (bad) pop jns sub cmp outsl movsl or (bad) into jg jge pusha gs jg pop push xor jnp jo (bad) mov mov and fucomip fisubr rorl jg xor imul outsl jl jle pop rcrb sti pop jg sub aas cld ret sti sbb cmp xchg and xor das xchg dec (bad) out add inc pop orl int pop or dec sbb add dec clc jle js outsl jg ficom sti xorl pushf mov mov dec cmp jg jle inc fadd inc mov (bad) mov jg cmpsb xchg jp gs repnz or (bad) xchg jae in ja sub repnz roll cmpsl sahf mov inc sub and stos (bad) and out jnp jo js ljmp nop addr16 rolb xchg mov or inc aas or cmc add cli mov cli roll and lea mov and aas inc push sub jmp mov dec jno cli xchg xor stc clc inc sub cmp mov js rclb pop inc add push or (bad) lock test jae dec sti sti out gs ljmp inc push mov and xchg fwait out sbb dec pop push outsb nop jg mov xchg andb mov mov stos movsb jg add (bad) pop cmp (bad) rorb movsl inc mov imul insb les lea js mov lret nop jp gs aas xorb jge rolb jg xchg (bad) xor jno cmp leave dec adc sub inc les loopne xchg jb (bad) std inc js mov mov cmc sbb jp jg pop and out ljmp dec push inc push jg ret mov out push gs push insl jg inc sbb jg mov pop test xor inc imul mov mov cld mov std les bnd mov int3 (bad) loope call mov sbb pop sti cwtl cmp lsl das test call jg sub push ja inc leave mov jne dec test jg mov out mov or jp dec jg adc sub bound std test aad pop sbb (bad) stc loopne push cld out test ss in fcoms jg divl sub dec adc inc sub xchg jle jg (bad) int rcrl pop inc popa out fs pop lods scas xchg mov pop jg jns sub arpl scas dec pop pop mov push out dec cltd push lock xor cmpsb jg push repnz pop pushf jg push insl cmc sbb xchg jp fidivr ss mov or mov jbe inc int3 pushf jg adc mov jns push dec push add mov insl cli jg or push shlb jg in sbb test test pop cmpsl in pushf jb xor cmp and lods adc (bad) dec sbb push jg adc mov or jg push sub iret lret jp lds das repz rolb arpl bound daa js push icebp movsb mov outsl push aam dec jae aad ss ret inc mov or mov shrb lock (bad) jg and jo sti xchg outsl push push gs mov push sub popa fistpll cmc clc ja inc rcrb adc push insb shlb sbb mov pop je stc (bad) mov jg mov fcoml jg mov (bad) testl add lahf jg fcomi dec sbb faddl push jbe jg mov cwtl add iret clc sbb outsl and repnz dec ss sbb push aas adc lcall sti sbb push es inc pop jg dec jecxz sub mov push gs adc jg xor push pusha (bad) mov jg xchg push (bad) and insl jne lcall lsl mulb adc sahf push jle dec push outsl push or cltd bswap mov loopne fisttpll jb mov xchg and jg cmpsl sub cmp popa sbb scas cwtl movsb leave sbb mov mov loope xchg cld adc jbe int or inc adc jg iret (bad) int sarl mov xchg inc jg sbb aam jne fstpt adc outsb rcr (bad) push ret int3 jb jg inc sub mov stc add mov jg enter outsl cli in shll push inc xor loope jg arpl int add out cmp lods or rolb dec insl fnstcw int sub (bad) jg pop inc adc pop jg jle leave push out push cmp sahf jae lret loop fiadd outsb ds je jo xchg cmc daa cmp mov stos mov and repnz dec loope cwtl jg dec jno ffree xchg dec jg add bound sarl and pop lds mov dec fmuls and jg mov fcmovnbe jg adc mov inc mov jg jge inc cmovo add mov sub jl mov out push leave dec xor cmc jp insb shl pop jg in mov inc dec (bad) bnd sarb pushf loopne adc jg and jne aas ret pop std lds push mov sbb mov jg out int xchg jg dec lret inc inc push sbbb into (bad) repz ljmp jg cli xchg cltd cmc into mov out outsl mov mov cmp push jg cmp mov pop call inc cli (bad) in mov das xchg (bad) jno,pt movsl (bad) in pop jmp mov inc sti push mov leave loop pop jg cmc lcall xchg les or inc xchg fwait pop aam lods jle lds je adc inc sub jae pop js inc test rcrl out divl xchg jg (bad) dec les dec pop stos jg shll xor loopne fstpt sub mov inc jg (bad) stc and icebp lret add ficompl pop fidivr stos inc mov jg lea dec mov es pop lahf int3 lret inc jg arpl cld inc xchg and aas mov xor dec mov stos mov push xchg daa jg jne ds mov mov and xor js mov push mov xchg or outsl mov out jg push rorb jg push pop push dec sbbb adc add push adc jg push icebp scas lods lret jg scas (bad) mov sqrtps jg loope fs call and cmp lcall pop jg dec aas fiadd fwait jle sti adc popf fdivrs (bad) mov je std or mov sbb idivl add addl mov sub imul inc mov (bad) icebp outsl mov scas cmp push mov mov mov jg push (bad) mov jo xchg xchg jbe ja test stos xchg mov addr16 iret in push jg xorl adc jle (bad) data16 and cmpsb (bad) push push sbb mov leave mov sub adc xchg xchg outsl aad icebp add fstpt in in or and sti mov cli scas pop pop test shll push imul jg mov pop pusha jg repnz xchg shll mov call (bad) pop out dec add mov mov jg cltd sahf paddd push out jg ja es mov dec jne (bad) mov jns add sub lret (bad) in cmpsl sbb gs fbstp jge pushw jg in shrl cmp xor jo lcall inc jg mov pushw mov fsubl adc scas jg sbbl xchg popa lds loop pushf mov jle js fadds subl jg jl das adc sub sahf inc push sar je sbb pop cmp dec arpl inc aas sbb jg out mov ljmp jo jae test out test pop sbb fildl clc cltd and shrl push (bad) mov popa push (bad) outsl push sub dec hlt pop jg xchg dec add push cld movsb dec adc (bad) test jg cld nop or push decb sub jg push cmp and dec xchg jno push inc cli inc mov cmp lret sbb lea sub or mov mov fwait add roll pushf mov cmp and add mov lahf cwtl mov mov ret iret mov adc sbb (bad) leave xor add (bad) (bad) xor xchg cmpb push insl mov jmp jg stos arpl mov scas and mov rorl jg push divb cmp iret pop mov (bad) jge jg sub hlt jg ficom jg sub jle cmp mov jo cmp jg jl xor into shll fs lret add mov xchg dec or out or mov mov jg rorl push insl lds cli out inc jg int and (bad) jg pusha inc pop sbbl in es xchg lock std inc mov xchg dec mov inc or and jo cli fwait sub inc jg pop sub adcb cld (bad) or sub sub add pop jg jnp dec cli js cld jg icebp in xor sbb cmpsl and and cmc xchg or mov outsl adc scas test mov jg aam mov push outsl xchg add jg mov scas push jg movsl js sub ret dec enter faddp aas inc xor inc sub (bad) nop sti (bad) push int aad sahf adc jg cmpsb mov sub push push mov (bad) notl lods in ja add cmp cmp jge in mov inc jg inc hlt push sti aas jecxz mov adc dec nop pop jg mov adc test add les xlat xor mov js imul add (bad) lock xchg das inc int3 xor jg je xchg fs jg xlat sti test dec enter stc inc dec pusha sahf lahf mov pop and adc mov dec push add xor jg pop out fnstsw add leave shrb mov jp cmp or orl xchg sub pop (bad) js adc jg scas decb mov mov jmp inc jb (bad) jg sarl pop hlt jbe mov mov sub xchg sti loope and ja pop pop adc sti mov cmpsl xor enter out stos xor sub jbe (bad) jb cmpb jb jp xor fs or (bad) add cmp cmpsb mov and dec imul mov jnp inc push cmp inc fstpt mov das mov mov xor cltd sti add jae mov dec les xchg jmp jg pusha cltd movsl into dec adc jg jns jecxz pop pushf (bad) jg dec pop cwtl add jle test divl (bad) mov mov pop cmp out mov movsl or fistl aas xchg rclb imul pop js add stos sub mov inc sarl das cli jle (bad) dec or aas sub pop inc lcall adc push aam pop stos jmp mov and sbb jg ds adc out sbb sarl xchg xchg adc xchg mov sahf mov in pop push jle sbb cmp pop sub das repz aad dec into mov stos or lea jno es mov mov or pop leave mov xor jge aad cwtl xor xchg cmpsb and in xchg pushf jg mov movsb sbb lahf push pop mov das cld inc xchg xchg mov sahf sub test rorl jg repz and mov rcr das aas insl push jae dec mov loop inc fldl2e pop ss mov dec leave dec push push jg xchg mov loopne js mov ja or xchg jmp pop xor fdivrl fisub xlat jg pusha imul inc or sub clc inc mov adc repnz mov dec sbb push jg movsl jns and and jg jp xchg pop dec cmpsb movq add repz xchg xchg test ret mov bound inc cmp (bad) imul jo xor inc sti push pop jle and adc add hlt jno out xor js jmp int jge lods sub inc jno or push push stos outsl xchg inc xor mov out xchg div or pusha fisttpll inc jge repnz dec arpl add lods jg inc inc cld stc enter or test jg cmp lds out pop dec jmp pop cmp xor sti add flds imul (bad) jnp jg js mov jg fwait mov add bound arpl in push test push mov jg sbb cmc insb jecxz inc mov fcomip jbe add dec data16 inc mov jno enter xor push xorb sbb lds (bad) movsl adc push mov push cs dec pop fwait (bad) mov sahf outsl ljmp lods gs incl mov inc into cmp push jg,pt cmp jl popa ja xchg and and or mov jl adc cmp (bad) inc push outsb xor jg clc out movsb in mov jecxz repnz or imul jg add pop cmp sub nop jg push lods add out jg mulb dec add jg mov mov push ja lods dec push negl sbb ret and decb push dec mov divl hlt xor mov dec cs mov jg std mov pop jo ret lret push jg pop dec test cltd adc xor (bad) in rcl jge inc andb insb cmp loop imul dec add dec das push jg nop jecxz fs push bound in dec ret ds loop jg cmpsl sbb repnz jge jg push sahf out push inc inc mov inc fwait insl bound stc pop dec adc xchg add inc or mov jg adc jle adc xor or jg add cmp lahf pop lcall mov (bad) enter push dec mov dec pop lea adc mov shrb xor push jg sbb pop and inc imul repz jo cmp jbe adc sti sbb mov inc pop loop enter sub jno fmul (bad) push popf int jne inc lds xchg jmp or sub jg or mov push out int3 inc cmp mov subb cmp dec js bound sbb pusha js push and dec sbb jno inc scas jge adc add mov dec ret jg mov and dec test pop jg sbb inc jg shl add add pushf mov push jg imul mov pop scas push enter or mov mov jg cmova jg mov das movsl sarl push mov flds push jg sub cmp inc and ds aas (bad) xor lret mov mov (bad) dec daa jg cmc jle stos lcall cmp lods pop ljmp xchg jg push mov icebp in ret push xchg mov jg sub inc xor in jae (bad) out mov sbb aas repz sub (bad) xor push pop inc fwait and jg insl fst mov and lods and cmpsb jno jg mov ja ds inc jne cmpsl pop (bad) scas dec jle jg mov ljmp push xchg mov jg pop mov adc std pop pop cwtl cmpsl inc adc cmp cmp outsl sub pop cmp xchg adc sbb lds (bad) jg mov or aas cmp je stos call sahf push jg and mov imul loopne sbb (bad) push cld jg add scas aas pushf mov inc divl jg std push dec mov imul jl fs jg inc ss xor jmp push mov xchg add inc jne jg jge or cmpsl sbb xorl out jle dec dec push or mov mov (bad) jg fcoml jp outsl jecxz jb stos clc sub dec add push push in fbld xchg add (bad) mov aaa outsl push jns push jae fcompl or inc jg jl test jg das mov mov xchg pop (bad) fsubrs xchg jecxz jae adc jg int add jmp (bad) loop jg push into mov jg push inc ljmp adc test popf movl pop arpl mov scas fstl cmp scas mov mov xchg push pop aad dec mov clc in jg out fisubrl pop sbb dec inc rcr mov mov pop sbb push mov fstpt jne cmp inc add arpl jp ljmp pop sbb adc mov dec jg cmp test call pusha cmpl mov fidivr (bad) or jg sbb iret mov dec (bad) fisub sti stc dec cltd push inc jne repnz insb jg ljmp mov sahf orl test hlt cmp mov dec dec mov jg outsl ret (bad) sti (bad) enter rolb out xchg test pop lret jg addl mov jne mov jp addr16 imul bound push cmpsl popf lret sub mov out (bad) mov pop les repnz cmpsl fs xchg jg dec in enter mov mov outsb outsb lock std xchg int3 stos mov stc or and out dec dec pop stos jp or lods (bad) jg push divb gs jg scas mov stc and or mov xchg (bad) jb lret pop inc cmp sti test cmp push cs (bad) jg (bad) sub pop adc pusha lock push mov cmp jle xor jp pop sti das mov jmp sti xlat mov push xorl pusha jb jno mov gs imul int3 add outsb inc jg in mov cltd pushf std inc add xchg xchg (bad) or sahf cmpsl jnp and lret adc jg jns push lods jg mov test sub push adc sub jne mul sub and jg cmp sahf mov mov sbb add inc inc fwait jle (bad) scas fsubrp dec in idivl arpl insb xchg cli js adc inc hlt bound mov jg lret movsb (bad) nop inc xor into insb int3 mov in sub xchg mov test lods sub gs push inc clc sti (bad) dec add or lds (bad) addr16 pop jg and sbb mov mull ret cmp push jecxz lret (bad) pop fbstp fwait jg lods pop movsb sbb mov outsl fcomi ss jg add pop or dec imull mov loopne jb es sbb xor sbb jg fidivrl aam test mov sarl ret out jbe push or hlt and sbb nop add lock xor in push faddp mov xor iret adc mov or pop outsl ds adc mov popf (bad) in sbb sub dec pop flds mov into sbb xchg int jg mov mov mov mov movsl ljmp std jo xor mov mov enter cs pop push in (bad) push fisttpl cmp sbb es pop vmovdqa popf jle sub fisub pop sbb fildl cmp mov sbb cmp dec lahf out movsl push or in jg inc mov mov mov sub pop aaa add mov ja dec call sub adc inc lea jg daa sub lods rorl mov mov sarb imul jl (bad) xchg cmpsl mov push pop jecxz or mov mov adc lds cs sarl cmp and aad mov dec cmpsb out dec inc xorl jg add movsl (bad) (bad) ljmp test cmp push leave int3 loop test jle test mov cld in sub movsl popa dec add or rol pop add pop jg clc in lds push sti or xor pop mov dec and call sti lods cmpl pushf mov push dec aad fisubr mov (bad) cmp jg shll jg cmpsl lret sbb jbe dec inc (bad) insl enter mov sbb sbb ja aas (bad) je add dec fs and mov (bad) and push jg sbb cmp mov movsb outsb inc jns sbb xor lods (bad) nop popa jg bound cltd popf mov dec pusha out or sub jp pop dec jg jmp pop ret fdivrp cmp mov dec pop lock imul dec push hlt arpl movsl jg push push imul test (bad) out aam cmp lods dec and bound cmc mov ret icebp jg jle data16 jg push call mov outsl cmp xlat fcompl stc or jl and mulb lea jmp lahf sub std jnp push rcr test sti adc inc nop dec adc xchg loopne (bad) test inc int lds int3 fidivrl jg jnp pop and mov cmc (bad) mov out enter or mov es arpl lods loop and lods mov daa nop lds dec xchg pop cmpsb jg loopne flds pop mov sub stos push outsb out bound mov mov cmp push lea sub pop int3 pushf mov sbbl mov pop xchg mov gs pop jne adc roll push push xor xchg cmp jg pop cmp and test sub inc jg mov dec dec jg adc pusha and popl mov movsl loope arpl imul dec pop sub push int inc mov test add aaa xchg in fs xchg iret mov jmp xchg xor dec mov call fwait outsl sbb ss ret xchg js aam outsl mov xor xchg repz jg push mov roll xchg into or mov into and sbb jg call fwait fs mov sub sub jg pushf sbb jg flds out (bad) and inc jg pop loopne pop lods push mov dec rorb cmp jo adc insl sub xlat push jg cwtl cli push fbld inc movb dec stos ret sbb ret and jg xchg repz fcmovne mov div andl sub (bad) fnstcw out mov mov or dec ja add lret add cld ss xchg mov insl jg xchg mov ret jg xchg rol sbb daa push fnstsw aam rclb mov lods (bad) cltd fwait jg push cmpsb cmp jmp jb xchg pop adcb mov dec xchg jno (bad) jg int loopne mov out mov mov jo mov pusha es je pop fdivs in and ljmp add inc pop dec jg jp mov test mov movsb daa inc cmp sub jg and inc cmpsl and les daa cmp mov and aam addr16 cld movsl mov mov mov lahf mov pop sub lahf outsl dec jae pop test mov cmp dec fcompl jg js cli sarl jp mov xchg push push pusha jo,pt and jmp jg mov pop mov jae mov out ds ljmp dec pop shrb mov stc lds pushf jg sub popa pop jg pop in movsb enter mov out dec xor jge sti xchg jg dec daa dec push js mov ja lret cltd (bad) xor scas fisubl insl adc jg adc repz pop mov dec mov jg inc lcall push xor dec cmp call jb push jg imul push rcll insl scas sbb pop add adc sub sub pop and test aas repz jo bound or out inc cmp fnop jg jecxz in xchg cmpsb fsts (bad) xchg jg or call pop loop out push les pop int mov mov xchg inc add lock push fwait push add ret loope push int add mov repz push and les mov popa mov add fldcw inc iret mov xchg movntps adc jnp xor fwait pop in pushf daa xchg push cltd jg xorb push sbb jg sub addr16 jg mov jae mov out arpl cld jle,pt orb jno stos insb or and dec mov aas in sahf pop jg cli enter cmc xchg jg pop jo ret nop stc fadds mov je xchg jg clc mov pusha pushl pop mov int3 mov notl (bad) push aas jg nop push push test (bad) stc fdivrs into mov cmpsl jns adc jg pop out pushf add fwait inc ret cltd xor fs lahf addr16 lock dec out pop jl push xchg mov pop in mov pop mov xchg daa add stos out jg xor bnd jle dec xchg cmp add sub leave jecxz jg cmp lds cwtl cmpl jb aam mov lret pop lods addr16 dec (bad) adc and dec imul fs add cmpl jg cmpsl out flds fs repz fdivrl andl stos vpand push outsl in dec and push dec mov jg sbb int3 push inc push mov or mov fdivrs pop aaa lcall ds in stos (bad) pop push and insb aas pop into pop (bad) fs outsl das xor mov jp sbb jle adc gs jg mov push mov loope mov ja jecxz js mov adc imul jb enter mov adc in jg cld enter adc jg aaa (bad) nop sahf ret les jne add cmp mov pop (bad) pop or aaa jl stc lods inc jle inc push jmp popa fcomps pop adc (bad) mov xchg cltd aas inc and dec push cli mov in mov dec movsl ss roll popf pop cmp cmpsb aas jecxz or comiss mov jg jge lods adc es or or mov adc dec or cmp (bad) loopne fsubs adc push cmp cmp push in cmp dec push inc js (bad) loop mov fldl cmc dec xor out or loope and das sub ds ljmp pop push mov pushl subb mov xor pop dec xchg jg cmp mov sbb cmpsl jg repz and cmc jg stos inc mov repz mov imul mov sbb xlat mov push fistpll pop inc inc or mov fld pop les jge je mov or js jg aas push push jns aam jg or inc (bad) or jg data16 push xor jg inc iret test mov cmc fwait and mov (bad) idiv daa mov ss push jb outsl cmc cmp stc sarl lea xor inc gs test lahf out popa fstps sahf mov inc out mov ret jnp iret jne dec fadds xor lods jg fldcw and or cmpsl jno ja cmp call lcall jg xchg movsl adc dec in adc pusha xchg jecxz dec arpl movsl call ret push ret jg and and jg es mov pop adc pop jg jno std sahf push inc out lds sbb dec jne fdivrl and inc add jne jl inc fldcw ljmp fs inc in ficomp cmpsl leave mov dec imul movsl imul jnp jbe adc mov addr16 add out hlt jns cmp push xchg aaa aam xchg ret dec mov pop or mov mov mov xchg sub (bad) aas cmp dec inc inc int3 mov jg push push push push shlb es cmc setae inc sub das pop cmp rcrb cmp lahf or jne or call mov inc scas jg push mov jne rclb xor mov ja hlt out cmp sub leave andl dec icebp sbb lcall jecxz or xor cmove fwait sbb in mov pop ret fistpll out push pushf mov aas test movsl cli jmp jg fstpt lea push int enter leave notl mov out pop pop jg aam rcl mov xchg cmp jle jb cmp insl lea mov outsl stos das xchg jno jg or pop mov gs jg data16 pop aaa nop (bad) jg xorl jg popa loop adc jle jg fs sarl xor add jecxz xorl sbb jg xor aaa adc jne cltd lds aas jg test push rorb or dec out xchg jg hlt jp loopne jno jg xchg insl pop xor push jg,pt cs fistpl mov daa (bad) lcall or mov insb outsl dec pop fisubrl push jnp jmp jg jne xchg add (bad) xchg push aas sti mov and push movsb adc pop sub push pop stos inc xlat jg std push inc sbb dec mov test mov pop sbb xor cmp (bad) mov test push adc jle,pn cwtl pop mov dec xor mov mov (bad) mov insl int ret mov icebp jnp stc mov dec xchg mov fsubl pop (bad) aam gs mov pop sbb aaa jg xlat loope mov mov daa sub sbb (bad) enter int3 sub mov push push jg or add cli push jns pop dec push sbb pusha nop (bad) or cld insb ret xor gs or jg fucom aaa or xchg xchg jg out std dec (bad) dec (bad) mov fdivl mov testb add xchg cmp jl adc imul loop fdivr shlb push adc cmp sbb in push jno and (bad) dec push fiaddl pop dec pop fnstsw inc dec aas jg nop mov (bad) jg fstpl pop push sub ret jg or lds add mov pop (bad) fist push cli aas mov fprem1 repnz aaa in jg scas ret jp adc sub mov ret stc mov pop mov hlt jg jmp cmp jb inc inc stos pushw (bad) mov mov (bad) lods mov inc loope fs dec popf ljmp ret mov scas mov or ds mov mov repnz test orl or jg and push jg scas jmp sub aaa xchg mov nop mov fld imul loopne jg fs mov jbe mov mov std jg and cs jl jg das sbbl sub ja dec scas jo push dec pop (bad) push inc mov jg pushf mov je sub cmp dec cmp jg dec push xchg stos (bad) xlat lahf jg lock scas cmp into cmpb add es inc sbb lea cmp mov jg inc mov sub add fcomps fwait pop lahf dec adc rcr lods mov mov jg arpl push sub mov (bad) mov cwtl mov lret lahf jg fadds jb inc jmp mov jmp mov pop jecxz push (bad) cmp lock jmp adc cmp lds int3 pop mov jg in push insb popa xchg sbb sub mov push inc jg ja aad (bad) daa add or lods inc test js mov pop mov iret dec int cmp (bad) mov int3 jmp rorl push mov and sub shrl adc mov and sub mov and xlat mov (bad) outsb repnz mov mov sbb rcl sbb dec mov ret out mov jg nop sbb lds xor in les jecxz ret cmpsl decb adc stos mov jg sbb xor or push lock fs push jg stos and jg and ror negl xchg loope jg ss xor mov in sbb insl mov dec movsl lock mov pop sbb (bad) jg pop add jl cmp pop (bad) sub fs adc push cwtl in imul dec (bad) pinsrw lcall xor jmp jg or push pop push jg add fwait int3 mov cmp mov idivl addr16 jns mov push int3 inc jae outsl test lea push sahf imul jg repz fwait es loop scas jg pop cmp imul repz int3 (bad) dec int jg xor icebp jg fwait dec fldl mov xor push push sbb sbbl pop fidivr pop movsl xor mov jg push and das pop adc jg,pt pop cmpsl jecxz jg fs test push inc aas iret mov mov xor rcl jecxz lods mov fadds and dec jg mul into mov out jno mov adc jle cld aaa sub adc mov iret jg call repz sub add outsl cmp jg negb pop inc repz clc mov inc (bad) popf std call fstpl cmpsb sarl test scas jnp (bad) push mov xor outsl inc addr16 pop and xchg aas mov in in or adc addr16 test sub call in inc sbb mov push adcl sarb cwtl lcall imul out xor mov pop js lcall stos or jl in mov (bad) outsb rolb popf sti add ja ss cld push dec dec sbb cmp rclb js inc imul xor sub (bad) adc jg inc jp xchg lock pop cmp (bad) jae and fimul stos fstps lcall mov jo fdivrl sbb test enter inc xchg clc leave sbb mov add dec pop cmp add dec inc addr16 cmp call jg adc test inc add lret mov cmp pop aas sub push adc add jg push shrl mov imul xlat cwtl bound jl mov push jp cli jge stos mov push std jmp jle imul fdivl push clc xor push imul adc or add mov add push dec out xchg call out jb push xchg pop jg ret (bad) push jg mov iret pusha jg in daa std cmp mov inc lock mov js loop (bad) mov cwtl (bad) in pop xchg mov inc sub jg mov lods inc inc push notl aad mov mov pop fist outsl mov ds int push ret jg cmp lea pop sbb or xchg dec adc sub outsl push adcl inc pop push mov push les addr16 pop pop jg pop dec xor sub lods lea mov jg mov mov iret (bad) sbb xchg sub jg cmp testl addr16 cwtl jmp imul mov (bad) jecxz jo (bad) je mov push push subl stc mov (bad) or add roll mov addr16 es inc sarb dec jae ss jg push aas jo cmp xchg mov pop aaa (bad) clc je daa bound inc jg sahf cmpsl jo push loope lret jg stos fisubrl lea push pop jg (bad) cmp loopne bound iret pop xchg pop sbb xlat mov push movsb pop int3 xchg cmpl xlat enter scas cmpsb movsb mov and cmp pop pop or mov add adc aas mov inc xchg dec sbb sbb push out sub sub bound inc push mov mov add daa inc inc pop xor pushf jg jns in mov push mov cmp fnstsw aas imul push jg es xchg jne or pusha hlt mov mov pop jg fadd mov inc xchg jno je jb enter jg repz xor sbb cld and decb add ss fs sbb fistpll scas mov push (bad) ljmp sub or xor mov enter cmp rolb inc and subl cmp xor mov test into aaa ja pop mov pop xor mov dec inc xor adc fistpll mov sub imul in lods jne fcmovnu dec test leave mov adc repz inc or cld jg xlat insb mov jg sub add jo (bad) adc pop rcrl in jg or test and leave out pop add nop jg je hlt pop adc jg jp and in nop inc dec lods sbb sarl cmpw sub inc dec cmp outsb (bad) jg ss or or inc pop jg icebp xor popa jl push pop pop fnop outsb cs push push dec in jg idiv test icebp rcrl push movsl mov push jg insb or les je (bad) mov dec sbb mov mov and jo xlat mov or aam xchg popf cmp inc xchg push lock add cmp into adc vxorps sub outsb pop (bad) jg mov cmp add test mov icebp xor lret insl or cmp sahf mov dec xor lret je push sub fwait sti or bound pop push mov loopne xchg and add mov mov mov jg sbb fimull pop lea xor mov pop dec jae and and mov daa push and mov pop jg popa adc jg inc stc dec dec loope aas jg and sti cld sbb jmp ljmp dec push mov inc adc lea fwait out sbb loop mov dec jb pop gs in sbb ret pop jg dec cmp mov or je inc push bnd sbb dec add or idivl int jnp sarl lods aas imul pushf call cmp aas add imul sarl pop mov add sub fwait out jnp mov jg sbb mov jg ljmp aas sub loop fidivr inc mov sbb insl pop mov mov lods lcall add fnsave pop movsb je call mov mov or outsl lret adc jns push jg imul jg sbb daa jnp das stc jg mov add jg ja std int3 lahf gs jge and jae cmc mov inc jg leave push insb aad jns jg aam jbe pop inc dec loope jg add jg mov sub xchg inc xchg loope or divl fwait out xor pop mov and or jns insl inc test scas andb xor xchg (bad) stc clc push fidivr or push incb mov jnp xor adc jg loope or pop mov dec aas jb inc dec jb jg xchg shl pushf test add xor lahf inc push movsl fwait mov mov sub dec daa jge mov jae lcall jbe sub das inc outsl ss mov jmp out cmp call adc fwait inc cmp push shll repz ficomp std rcrb or popa bound loopne jg fs cmpsl xchg xor icebp mov inc pop cli sti (bad) repnz pop push out jge jbe mov pop shlb rorl rcr xchg imul jg sbb jle popa movsb jg xor daa add mov add data16 rcll mov mov outsl jns ret jbe jg fdivs mov pusha mov jg pop and loop jbe push test sub push mov xchg push cmpsl xchg inc or mov push addr16 (bad) dec mov jg daa cmpsb mov and jg and (bad) divl int3 aas ljmp jg mov sbb jg and popf mov mov sbb mov and sub cmp dec outsl rcr inc lahf pop aas push cmp adc hlt dec out inc mov jg ret clc sub rcrl dec pop xor cmp mov fstpt mov mov leave jg jb dec push sarl in jg mov mov loope leave cmp aas sarl enter dec adc inc and aaa or sarl cltd push add jnp push les call xchg ljmp rorl xor mov jg pushf test pop imul dec sub mov aad clc or ljmp push dec adc pop jg cmp add and sub aaa ret idivl cmp (bad) jg jno push xor mov jg add js lea mov cld pushf mov jb sub es ss lods mov in outsl in jp rorl jg mov andl xchg je or add mov push jbe xor test sub stc pop mov jg ja inc or pop push mov ret popf add push xor mov inc mull gs push out sti leave push sbb fsubs sub push nop loope pop lods jg push dec roll dec fidivrl cmp dec stc sbbl xchg add (bad) out pop or std jp loop push cmp loope xchg repnz in (bad) adc adc sarb ja fs cwtl jns,pt mov pop inc arpl stos xchg cmp xor mov push je (bad) mov mov aam inc insb pop mov pop jl inc fadd fidivr xor pushf jg mov into dec pop xchg jg rcll mov sbb loopne out adcl std lea sahf push mov stos mov pop sub pop ret mov (bad) jmp rorb mov sar jg jne push cmp outsl sub in xor push xor push (bad) psrad mov jg push test enter aas sbb mov push jg,pt push leave lock testb cs xchg add cmp jg lock inc xchg inc mov mov push mov pop movsb daa dec sub popa add jg pop loopne xlat add sbb jmp cmc scas xor data16 insb (bad) jb outsb jae insl jg xchg aas push pusha jp xor jle mov nop jno test cmp xlat add mov jb push sbb in adcl add sbb ds mov (bad) int3 push addr16 jg mov data16 jg inc lcall push mov pop xchg lds jg sub fimul bound fdivl pop add dec insl imul add idivl jg or std mov mov dec sub sbbb insb jmp loope mov add pushf push and mov xor call stos jmp adc rorb es mov adc mov add fcoml outsb fistp mov and jg fwait lock std sub cmpsl js jg test mov mov inc jle in cmp out jecxz dec adc test and sbb dec (bad) fiaddl jg ret ret xor xor mov sarb push sbb sub fnstsw inc idivl clc dec (bad) in and jg sub js (bad) mov xchg (bad) gs je fildl mov cmp daa pop jne fdivl or push jp test ja shlb pop xchg mov (bad) jno test adc xchg adc sti movsl push mov addr16 xchg bound jg push mov sar inc mov cs mov hlt js inc xchg and and xchg mov sub rclb adc sti xchg xlat add mov dec jg rcrl stos lock mov push cmpsb gs xchg bnd cmpsl jne add lds inc in (bad) xor inc push xchg and sub dec arpl mov xchg sub mov adc out xchg add xchg and cmp inc cli inc mov jae jns adc xor mov popa and fistpll mov ljmp sub jg scas add push cltd lret leave mov js add cli rolb xchg inc ret ljmp lahf fsubl and stc sahf jecxz fldl adc push sbb icebp push fstps sub adc push mov jmp out imul adc jg adcl cmpsl sbb jg and pusha inc push rclb sbb stos stc jne dec jg cmp imul adc aas lods jne inc dec ror dec cs sbb test cmp jge add adc jns,pn outsl out mov aas push std lahf push scas lret adc add jg test jbe mov das jg xor inc neg pop imull fmulp lock jne daa ret pusha lods pop xlat sbb dec cmc adc push jg mov std cmp jl mov and jg sub in or sub int sub xchg xchg jbe jo test mov (bad) or xchg jg pop jo push add jg dec add aam mov fs push frstor push clc jb sahf sti mov fnsave ja ja call mov (bad) xor or jg neg jmp inc cmp adc ja push enter addr16 (bad) in push mov scas ds iret dec dec jle jg das push lret pop push fcomip decb jg dec mov inc adc push aas jle sahf mov nop inc popf push jg (bad) mulb jo and repnz push loope jg pop leave lods dec jl inc jg aas insl mov jg fiaddl jb imul ja pop ds inc cmp movsl subl mov insl je mov jge jge mov xor push test xchg xor (bad) xchg pop stc mov mov fcoms mov dec stos (bad) mov mov (bad) (bad) enter stos fidivrl outsl sbb aad mov in inc pop (bad) push push cli imul cmp add test sbb jg pop out addl jg js (bad) shll xchg mov out inc mov int3 cmp sbb push inc icebp jg fsubrl adc lods sub jnp pop out jg (bad) mov mov ja mov dec or pop xchg cmpsl rcrb enter mov pcmpeqd fisttpl xchg clc mov rcrl cmp les sub sub and ljmp dec jg shrb std and loop jg pop jno dec stos pop jnp aas or push loop (bad) popf in aas mov mov add movsb xchg mov inc movsl outsl push divl andb jb fbstp (bad) push cmp mov push imul test sahf jg aad pop jle mov scas cmp repz ret fdivs push jg stc dec and cmpsb lods sbb xor clc jg fidivr jg or add jg iret adcb stc das js pop clc pop or pushf bound xchg dec jmp (bad) jg jecxz push imul jg (bad) ds aas sahf out ds insb and xchg sbb sbb dec mov push stos adc jns mov mov jo adc fdivrl (bad) xor jecxz ret push out mov pop mulps or addr16 dec jg mov test fidivr outsl gs jg inc pop jge (bad) (bad) xchg jg push mov cmp cli cld mov add test inc jg js sbb sbb int3 lea dec jecxz movsl arpl idivb fsts (bad) sbb inc mov scas add insl and inc jg xchg lahf pop daa adc jg sbb push leave inc xchg xor pop jg sub ljmp cmp push jg xor ret dec jns jnp mov incl xchg insl jg jne pop lock pushf fs stos jnp pop xor (bad) repnz or aam jg imul jne mov mov call jnp inc jg ficompl and pop mov gs movsl jg xlat pop ror cmp jp rclb movsb cmp push sbb outsb outsl fldl xor les scas dec jg aam sub add mov es adc jmp push les cmp mov test xchg and rcrb pop mov jae push jg cmpsl add sbb jo iret roll adc sub dec lods jg and jle mov mov fnstenv ljmp ret jle nop add jp cwtl jmp jg push mov jbe push inc sbb mov jg hlt ds lea and bound jg out xor cmp jg cmp inc fldcw cmp or jecxz inc outsb ret (bad) jg fsubrl jg aas mov ja push js mov outsb mov or aas cmpsl subl dec sbb push add cmp jo xor stos mov jg movsb sub bound jg pop or (bad) mov loop mov lcall pop xchg push jbe mov jg xor das js jl jns rorb pop jns jge sub push mov mov jg (bad) aaa stos xchg sub jg sub jg xchg mov sbb (bad) jg inc (bad) int pop (bad) xlat scas mov xchg inc dec push outsl sti mov cmpl (bad) jne inc dec jg add dec mov add mov stos arpl aas fwait sub movsb inc jp jg jne js clc jge mov movsb mov in xlat jg fscale lret rclb outsb pop test pusha mov lahf test jb nop jns jmp shlb jb push mov jg push leave mov jg sbb jae jg loope sub push idiv push cs push lahf push (bad) sarb jecxz int ds lret mov pop in jg push iret and jg in sbb cmp jg imul mov inc lea or adc lret inc aas jecxz clc mov dec mov das jg lea mov decl mov movl in pop or dec cltd xor sbb jg rcll pop data16 jg xchg mov add inc jo and mov scas adc rclb ret jmp sti adc sbb arpl out bound test jmp mov adc arpl aas mulb ret jg jle (bad) xlat push pop je adc mov dec mov sbb insl xchg sti cmp xchg into push outsb je decb add lcall jmp push jg pop inc imul push (bad) xor xchg sbb stos jg lock xor lds xchg pop fildl lahf jg jbe int cmp aam mov insl sahf jg push xlat repz idivb jle xchg lret dec jbe scas jg,pn or in mov xchg pop (bad) mov jg add (bad) lcall jg addr16 pop jmp loop inc mov mov jne jg lock add sbb adc xlat xchg mov imul out hlt lret jg pusha mov jmp out jg dec jle js mov jg jne pop dec inc pushf in pop xchg mov push es rorb push fbstp (bad) idivl mov pop mov and cld aas mov scas or push jg and jg lods add enter loop jg dec add movsb das jmp aas sar inc xchg pop mov repz mov test ret addr16 lea push sarl sbb imul jno xchg pop or rcrb cmp mov jb add jle inc sub ss dec incl cmp jg das fisttpll jecxz push (bad) jns enter mov pop jae mov mov xchg les push dec pop sbbl xchg insl mov bound add lret lahf sub ds or xchg push jg sub ret pop loopne jg xchg cmp pushf js cmc insl aas sub psubq xor ja push test test jo std lret sti stc dec into out push xor jg in dec mov and lret xchg and jg gs lea cs inc cmp sbb ficom lret or xchg inc (bad) and mov fiadd imul je das mov mov or test sbb mov scas repz cli cmc push ret cld shlb jg inc xor adc je jg movsl sbbl mov jns pop pop mov cmc lods add cmp sarb fdivrl into push mov push test push xchg cs inc push jg sbb out shr jg push lods mov jg rcll fildll cmpl inc sub aas or cmc test cmpsb xchg inc repz and jg push fs and jg and cmp cltd stc je jae sar mov cmpsl jmp rolb aas and xor push int jecxz sbb sub adc in fnstsw xchg and mov mov add push sbb dec ds jns das imul scas jnp pmulhuw enter jb popa jg mov cmc pop jg aas xor cmpsb jle bound sbb push in ret pop cli dec cmp push sub jg pop pop (bad) xor xlat idivb adc push jg pop loopne in rcrl jg stos mov jp stos jg (bad) test mov stc adc aas pop lds jnp hlt inc mov mov cmpl loopne arpl xor jge ret push ljmp xchg dec dec adc mov ds push dec cs jg mov inc movq movsb mov repz sub insb mov mov xchg repz dec repnz scas dec imul cld ror xor sub ljmp xlat push cmp pusha jg pushf jae mov scas ret cmp pop mov mov sub jg aad and stos pop xchg mov push jg cmc cmp xor (bad) jae pop subb xor inc imul pop xor int3 and cmp mov jg rcl out push es mov ret inc dec mov jo movsl scas adc jg and loop jg add sbb mov nop jg cmp scas mov mov clc sarl mov idiv arpl insb sbb mov (bad) jg pop cld mov mov or push lods pop dec sti xchg scas jecxz daa arpl test (bad) ss insb or mov pop fisubr mov out sar lods xchg mulb adc aaa mov incl sbb push mov out dec stc push repz add js jbe aam jnp loopne cli jle cmp mov lds inc add in add movsb inc or ds imul pop clc test imulb sbb push shl and jmp xor (bad) cmc (bad) sahf mov popa (bad) arpl cmpsl jg or or sahf outsb xchg (bad) jbe sarl add push (bad) movsl mov xor jg jne lds jg and jecxz jg and sub jmp stos out dec pop or cmp inc jbe jg int3 jno insb xor and les jb fildl jg (bad) push jp cmp cmp cli mov jle mov dec lea push sub repz imul inc inc and cmp pop xchg mov mov stos in sbb mov std xchg xor js outsl cmpsl mov (bad) sub outsb pop bound imul in sub cmp loop (bad) add jns mov out mov addr16 imulb jg and test bnd ja int dec insl int3 inc or adc and cwtl mov inc imull shlb xor or jecxz call (bad) fnstcw js push xor dec jg scas movsl push xchg daa sbb test and lahf jg push dec push out aaa fidivr push and addr16 test xor jae push scas clc scas pusha ret jg jne std (bad) jg xor cmp xchg gs sbb jg in les pop xor xlat jg mov sbb (bad) lahf cli decl adcl cmpsl sub push inc jnp mov cltd pop mov mov daa popf pop dec aam jg shrl lcall and js xchg mov loopne out int das jg mov jb jg mov adc fimull sbb jg inc cmpsb add pop pop test imul addr16 jg jge hlt mov fstps or rcrl cwtl sbb nop sub add ja jg leave jno and js mov mov jp mov sub jp add aas pop insl or dec push aam int dec movsb jb insb pusha inc fdivrl adc rolb stc jmp ds push jg mov mov shrl data16 inc inc pop jg aam jb jecxz xor mov jg mov fisubl adcl xchg aad bound insb in ret dec mov out and push imul adc jg mov insb jl mov ljmp (bad) stc mov arpl js jo ss mov stos stc cmp ja dec movsb jg in pop movsl jle clc cmp (bad) iret inc jg divl mov sbb xor adc jg icebp mov out jno ljmp or out sbb paddusw inc in fwait jg cmp (bad) jne mov jnp insl fnstsw sahf test jg arpl leave jg inc inc or into mov pop jg jmp xchg jg inc mov mov sbb or sub (bad) mov jg jmp dec and add ljmp popa sbb into outsl mov mov enter or jg movsb test ds jg pop sub inc repz dec or and dec mov cmpsb lods lods and mov shlb jg hlt (bad) mov ret fs mov (bad) fwait or stc xor pop rolb mov xchg dec push push shrl sbb popl jge dec leave mov lcall mov and pop aas jmp scas lock lcall jns mov movsl ja jl out inc jo xchg jne repnz jg and cmp cwtl jbe fisubr dec mov smsw cwtl je daa mov jg xor loop mov jl fwait (bad) hlt jne sbb cli dec sub xlat jg imul xor mov jg sub pop imul nop movsb rcrb daa sahf dec mov inc addb outsl or rcr cld pop pop jne sbb mov movsl jmp mov push (bad) or jle cwtl inc jnp stos popa pop jg add lcall xchg jg movsl mov lahf mov jg insl dec fdivl xchg mov and mov loop and inc jg add es out cmc jg jle out jne push inc and mov inc jae jle mov and dec insb push jg mov mov jg xor inc fistpll or (bad) push pop pop jmp adc pop inc pop es adc fimul pusha test or test mov inc sti dec push push sbb mov jg (bad) and dec lret popf mov insl shll repnz imul push fcmovu pop jg jle push arpl notb jbe xchg jg xor popa repz test mull dec xchg sub repnz addr16 add add sub lret ror pop and aas add push adc jg stos or rolb jg jo xchg outsl mov xchg adc push mov fdivrs jp cmpl or dec xor push nop mov aas lea ret lret inc sti (bad) cmp push (bad) mov pextrw daa push dec in jmp xchg mov and int xchg jl cmpsl out jb jg repz in adc mov sbb out xor adc pop pop in out cmp mov mov lods sbb mov sti push xor int3 lea scas in jne jg call mov mov sbb pop outsl push shrl js cli and jg pop jmp (bad) jg xchg push daa cmp jae pop lret lods jg inc xor xchg jg imul lahf jmp mov jmp (bad) outsl push xor mov jle jg hlt ss ds push xchg push int inc aam dec mov push push cli mov dec inc jae add mov mov sti xchg inc stos (bad) xchg aam sti test push mov (bad) dec pop insb sub dec cmp lret lods cs addr16 mov insb aas leavew das inc pushl mov inc pop (bad) (bad) and dec mov ja xlat add out jecxz jg jmp push cmp mov clc aaa adc dec ret mov rcll outsb mov fldt inc cmp loopne lods dec arpl push sub sbb xchg mov push (bad) dec push (bad) insb in ss and mov mov adc in push jg pushl andl push aaa mov aas mov dec jo xchg roll adc or push mov sbb fdivrs inc inc mov xchg or dec jb jg fwait out mov inc cwtl jg lds add cmc mov pop mov jg push mov jg adc int3 (bad) fs jae jmp push pop mov mov or outsb aas roll in movsb mov sub mov (bad) jg fiadd roll dec adc pop pop and pop cld mov inc cmp and pop push add and adc xchg in inc jae enter add sbb pop mov imul push mov dec repz xchg mov test in jl push lods xlat rorl pop lahf push jg adc popf dec jb loop pop cmp sub sbb int3 adc push jg loop hlt mov (bad) fsubrl jo push inc jg test fst adc lock mov inc xchg add push xorl jecxz xchg shlb test mov or mov maxps iret xchg lcall sahf (bad) pop jl lahf push (bad) xor add mov fistpll push (bad) (bad) jmp sbb mov aas mov ss dec fidivr jg (bad) inc pop in (bad) jne push and mov fnstcw out push jg,pn fidivr cmc jg mov (bad) (bad) enter dec inc insb jg dec je push mov in idivb and mov or (bad) add pusha arpl leave mov jp dec enter jg add lcall imul jg adc pusha flds xlat cmp lret and ffree xchg (bad) fistpll dec in push add cwtl cmp jg push inc stos rcrl xchg jg pop jae cmp dec jg pop mov neg aaa dec jg rclb add aas ja les xchg ficom jae xor push xor seto in adc mov and fs inc and jg push xchg sbb lods outsl enter imul jno (bad) mov test ja scas cld jae fimul es rclb pop imul test sbb aam sti test imul pop mov push mov mov jl shrb adc pusha adc sub and mov lds mov jg adc push inc imul fs (bad) addr16 mov ja cld inc xor pop fisub cmp xor lcall test movq repnz inc and and mov jg fisttpll pusha jg das xchg push dec mov mov hlt pop movb jg inc mov (bad) jg scas push aad (bad) ss jbe pop mov stos jg inc leave aad dec sub jg into push in mov scas cmp adc jmp mov addr16 pop hlt cmpb int sbb mov jg pop mov lds mov rcr in sub fwait nop inc adc mov outsb xlat in outsl test sbb inc test jg js push xchg bswap fdivrl dec push mov mov jle mov pop mov inc and (bad) add dec lods ffree das jg inc dec mov sub jg mov cwtl sarl je rclb (bad) fidivrl enter sarl add jg mov adc mov in sti xor mov scas aas cmp xchg pushf cld pop in jo fldlg2 dec mov mov imul ret loop pop mov pop jecxz xor inc cmp or fiadd and sbb gs jne and push jecxz or (bad) in aas js cltd jle fbstp leave inc push jg push xor negl push push sbb (bad) push jg inc outsb dec mov push cmp push mov aas jmp inc cmc mov push inc xchg mov clc das fistp dec mov jns inc add or pop lea scas mov mov push pusha rolb movsb stc jg mov sub aam (bad) mov ret pusha cmc fdivrs popf std les pop in enter lds or cmp mov push shlb mov pushf mov xchg jns or jg cmp arpl movsl xchg adc sub push jmp adc mov clc jnp fs mov and (bad) mov sbb cmp fwait (bad) xor rcll add push jp pop jns or cs cmp ret shr lds cwtl jg outsb pop jp es (bad) hlt nop and jmp cmp loop (bad) and push jg (bad) lret inc mov xchg mov lea push fistpll (bad) sti sub dec mov adc pushf fstps push fsubs push (bad) aas std xchg (bad) mov jnp icebp sbb push sti arpl jne out xor (bad) hlt imul xchg ret or adc mov cmp sub mov mov pop mov xchg dec cmp incl add nop imul jg fcmovu fwait jmp xlat dec mov stos jg xor call lock xor mov lret jbe roll dec adc pushf jno dec or ljmp jne inc sahf and jg cmpsl lret sbb pop and fidivrl in xor fisttpl movsb sbb cwtl fimul and dec in mov jg jmp sub jg jno test addr16 jg popa rcrl enter mul cs lods sub inc pop mov je push mov or jg test sub ss cs (bad) sub cmpsl lahf out pop adc xchg dec cld fcomi jg lea push jl xchg das rcrb adc xor daa ds fmull ret js outsl lea fistl cmp cmpb lcall mov roll cwtl add xchg pop push je pusha jg xchg data16 xor loopne sti mov adc addr16 add xchg and icebp xchg sub mov mov inc jg xchg cmp sbb pop lcall jg mov adc mov or addr16 sbb xor push adc cmpsl int3 inc insl test dec dec xor mov mov iret mov xor push mov nop inc imul dec js lahf loop inc stos jo inc pop popa stc mov pushf (bad) dec ret sub lret jmp data16 jg mov lcall push push outsl add cmp sbb int3 sub iret sbb xchg lock jg (bad) inc in jl mov popa scas sbb popl dec roll xor insb push inc push insl pmulhw mov jg dec movsb std pop xor mov pop mov out xor call xchg insb lods pop jg je shrl mov jg (bad) imul jbe mov pop jmp xchg mov outsl dec jg gs mov jg js icebp jne repnz push xlat aam sbb xor and or jge push cmp imul or pushf adc jg leave mov sub fistpll sbb xor jg push jmp jb pop mov xchg test in aas or imul dec inc aas mov lods mov lods jmp cli sarb pop jg rorl adc sbb fwait lret jae and repnz test arpl cmp jg mov sub sti mov push scas jg jmp pushf daa aas cmp (bad) push jg cwtl or mov push out and jb xchg and dec jne,pt fcomi mov inc in jg cmp jno mov (bad) xor imul dec inc ljmp jg inc in push insb sti jg gs sbb sarb lret and js (bad) lret jg jl jmp aam fdivr rcrb or aas add xor xlat fisttpl dec cmpsl mov leave in jno inc push jg das xchg shrl jg repnz jae pop sbb aas push pop popa outsl push jne dec add popf dec in popf inc imul in jg into add roll push sub cld mov jg dec (bad) lret or sbb dec test fmull pop aas push mov sbb call adc (bad) decl test lds or pop mov test (bad) scas add pop rcrb jae xchg scas loopne (bad) inc cld mov cmp pop jecxz stos mov cmpsb stc jg mov sbb mov mov pop add loope out and and arpl inc imul sbb leave mov pop das idivl sbb imul mull jmp dec fwait jb aaa call mov jnp mov jo jb mov hlt (bad) xchg xor (bad) loopne cmp lea inc inc xchg cmp jg popf fwait xchg and mov jg xchg ds mov cmpl out (bad) pop jno fnstcw mov adc inc mov cmp pop lods add test sub aam push xchg in xchg lods jns cmp in add jg sbb loope mov or xchg test mov jg inc rorb adc js sar pop dec sbb aas fucom xorb xor pushf push lea aas clc and jmp cmpsb in leave inc (bad) jo or adc mov jle mov shl push and add insl xor js sahf dec pop fstp jle cmpl cs mov insl cmp cmpsb mov gs in imulb jnp addr16 and ljmp js mov btr push inc aam jg add adc test ret mov gs pop scas out or xchg lret cld dec pop jg pop loope test or lret dec into add repz ja dec mov (bad) fcoml imul test mov inc out sub dec sbb mov sub scas sbb jbe and xor std out push push (bad) fs push mov cli mov roll pop add mov cli fdivrl inc jg push bound imul gs rcrb pop inc lock loopne mov fdivrp xchg (bad) idivb and pushl adc push int jg cmp mov jg inc (bad) ja out jg fisttpl adc rcll xlat push sub call in stos adc cld push fnstenv ret mov scas pop or pop int cmc jg popf outsb xlat or jae jg sub mov mov icebp add sti pop inc jg or jle add sub je jo mov leave jg fistpll xchg cmc test mov aad sbb (bad) dec push pop je mov jg rcrb cwtl in jg dec xchg int3 lcall xlat rcll adc (bad) aad ror fildl xchg testl push xchg fsubrs cli in cmp (bad) jns scas andl jae insb xor mov sbb adc mov mov push pop pop jg out sub jg dec xor and inc xchg jne xchg test jg sbb fcmovu pusha out jae pushl dec imul cli pop add mov out fistl mov fisttp je pop jb mov mov and pop mov xor pop jg sbb fdivrs jle inc mov jg adc lahf fcomi sbb add xor mov and jg mov sub stc pusha call xchg xchg (bad) jecxz ret jg pop pop adc lock jne mov cld push sub arpl or mov fsubrs mov pop mov push cld xchg nop pusha pop jg pop xchg aaa roll and jg pop jp mov mov mov xchg pop push xchg sub lock jno jae into push xchg clc idivb (bad) aad xor je loopne jg in add aas (bad) and rorl jns jbe push mov mov out ror fwait arpl jae lock or or mov scas push sub (bad) mov xor repz and mov sbb stos loopne lods aas testb sbb iret xchg push clc sarb hlt mov add xor out pushf cmc jg je and pop outsl adc push jne mov repnz inc cmpl xchg add imul pop mov jns jg mov (bad) push cmc add lea leave sub pop jnp xchg clc xor sahf add pop cmc idivl cmc test jecxz mov dec pushf jne pop xorl jle rorb scas jg sbb fsubl jg rorb push loopne jg pusha and push arpl pop repnz data16 adc std mov jg cltd inc pop inc pushf stc push icebp sti in dec jge cmp test pop or or dec shll mov jg jb push and out jg sti jl cmp xor pop movsl sbb push fbstp fstps enter jo jg xlat and xor negl fcoml sti mov cmp test mov ret mov (bad) or mov inc push lods jo or cmc xor fwait bound aas sbb (bad) aas insl hlt test pusha jg xor lret or ja jg (bad) les xlat mov inc jg pop mov mov imul sbb cmp jg add mov mov sub test pop or mov daa dec mov pop and subl adc push sbb or dec xchg jne sahf aas sbb add xor inc pop notb mov hlt out ds (bad) add jg pop scas xor stos imul daa ret jg xchg sbb ror push pop cmp lahf jg mov sahf lret scas leave cmc pop mov in les jg jmp dec jg js stc dec mov cmpsb fistl xor pop inc sub std js inc test call ret popf dec mov pop ret sub icebp sbb mov popa pop in sbb cmp cmp cs call ja or daa jmp mov dec dec xchg fidivrl fnstcw mov adc leave mov fwait imul xor icebp inc mov (bad) xchg sbb mov pop rorl lea (bad) fldl data16 inc cmpsl loope int3 les cmp jecxz enter jg into xchg inc or mov or daa dec adc scas add adc inc das cltd aas add cmp sub aam sti mov jbe jg push js push jg push push stos imul jg jnp and mov mov inc mov inc aad push jg mov and and jno fdivrs cmp js mov outsl adc add jg push sub gs jg lcall jg or or add outsl je jecxz (bad) rdtsc xchg mov sub mov ficomp sub outsl pop ljmp loopne mov dec ret xorb scas dec fistpll cmpsb or sti adc pop aas inc cmpsl aas or scas and enter or pop pop mov xor maskmovq mull outsb std cmpsb push adc movsl mov or xchg xor test jg gs clc inc lock in je jle jg adc mov jp mov sarb int3 cwtl inc and xor push fs xor lock add into dec mov int3 and daa cmp (bad) xor jg notb mov sbb out (bad) movsl dec jg andl jg rcll cmp and aam sar outsb mov adc jae xor or leave jg cltd push push jg add lcall call push aas (bad) mov jno inc lret dec add imul mov mov stc rcrb push int iret or pusha sti inc pop aas xor dec push jle adc fisubrl mov mov sbb xchg adc enter sub idiv mov mov out sahf pop pop lods fs pusha pop pop jne (bad) push jg adc (bad) and jmp imul push xor inc mov jg cli push mov fdivrp orl enter or das jmp xchg mov pop pop jg jge (bad) cmpsb adc jg (bad) clc cmpl (bad) mov cmp outsl mov sbb popf iret fdivrs imul mov jle dec out daa mov inc cmp cmp mov and jg testb lret xor pop jo jg push ds inc mov push setg and xchg mov jg xor stos mov (bad) xlat jg adc out insb hlt jg dec je out movsl lods jg xchg adc notb adc sahf adc mov loopne pop imul adc jg (bad) or xor (bad) aas insl movb push xchg das aam push sti ja mov inc sub xor movsb pusha or jne jo ljmp lret adc xchg je xor mov push and outsb jg xchg jmp lods jge scas in xor jno sbb jecxz mov (bad) sub mov ss jbe fisttpll lcall jg lock jl adc lahf fwait es outsl cmp sti jg loop movsb leave js,pt scas sbb aad out jg inc rclb and rcrb outsb jg mov fsubrl shl xor jo movsb jg jbe or xor repz jl out je push jg les int3 pushf xlat pop jg out sub (bad) sub jae xchg (bad) jg shr mov sub jl out cmpl jae xchg cmp data16 jg jns insb xor ljmp iret xor xlat inc dec lret cmp lds mov in xchg cmp and scas sbb and sbb pushf jl jg fcmovnu out ret fadds es (bad) xor inc das push les jno scas (bad) adc insb jle mov lret jecxz push jg push cmpsl in sub push mov jno mov and call jg daa dec and std cmp add loop mov sarb test mov pusha imul clc push adc inc fs cmp cmc hlt lahf push jg in rcrb (bad) jg fcomps adc in sbbl mov and xchg add jg cmp push cmp jo icebp or mov nop cld xchg into pmulhuw jo add rcrl jo fdivs imul loopne mov shll sub test jg stc xor cmp jae dec xchg mov pop mov push jb jg js lock test bound fwait xor mov push cmpb mov cmp or push mov fiaddl sbb movsl insb loop fwait cld push lds fsubr mov cmp push repz push mov aas and adc lods xor xor mov test in in fistpll jle push cmpl outsl fldenv mul ja xacquire aad cltd inc movsl (bad) pop mov pop inc es lock lcall push sti (bad) jge mov aad mul in nop jg sub jmp cmp movsl (bad) outsb (bad) sub xchg lret cmpsl (bad) aas xchg add mov aaa ret scas jbe ret sbb lcall outsb les aas rorl xor sbb mov jl repnz jns inc jmp mov aas xchg movsl jge test mov int (bad) pop cmp lahf in add mov sbb adc pop add add xor lods push and and pop out push jecxz daa (bad) jg inc jo sbb iret xor push mov outsl sti popf fldt outsl push add imul fwait mov xchg xor mov cmp scas call sarl jg xchg out dec or mov jns dec cmp sbb xchg mov push xor pop fdivrl adc scas and jg enter push insb inc jg shl xchg add popa jg ficomp mov mov das gs inc push (bad) lahf jg fs xchg mov mov out or xchg in rcrb scas mov sub add xchg pushf pop jns mov cmp icebp jge loop jg shrb aas jle push jae pop mov addr16 inc add cli lods je jg daa loop pop loope lods mov leave sub aaa shll jg ds push push scas jecxz call dec cmp dec xor xor ret xor push (bad) lock cmp imull dec std in rcl mov iret mov addr16 xchg mov jg nop lea push xchg mov pop sbb jg sub jnp sahf sbb add ljmp jg repz inc icebp enter and inc (bad) xor cmp loope pop jle jg enter adcl cmp mov test outsl mov loope ficom inc ret jg int shrb jecxz mov outsl pop xlat lahf testb pusha jg xchg ret movsl (bad) mov mov push ss jo pop pop xchg gs adc fidivr sti mov mov mov and pop inc push adc cli outsb jp jno inc push inc mov or mov cli jne push adc or xor bound jno faddp adc inc push or pop test push int3 fsubrp scas sbb addr16 mov out imul cmc (bad) pop out mull rorl ja nop js xor pusha pop xchg xchg stos loop dec jg inc movsl jns pop test arpl subb push xchg clc test push lret call push scas and (bad) fnstenv xor jg rcr cmp jo jg mov xchg push xor sahf cmp aas dec xchg (bad) jl fstpt int test jnp outsb push stos jne mov lods enter sar test and sbb adc aas sub addr16 loope popf mov roll out das push loopne sub and sti sub pop in mov pop pop push mov xchg push retw jg jb jl (bad) ljmp mov lds stc stc mov test jmp loope xor add fwait out test jbe jg ret bound sbb adc mov fidivrl pusha stos or into outsb mov jg xor test scas and inc pushf jb dec xchg insb sub bound mov inc mov jge pop pop cmp (bad) cmc jg jne lods iret and mov mov hlt jl cmc mov xchg imul out sub and jg jno xchg mov shlb popf sub test mov stos test jg stos cmp and out nop sbb dec or xchg xor jno cmpsb (bad) inc pop ret cli jg loop fiadd jp out cmp fwait jg frstpm(287 adc add xchg jg enter inc sbb dec addr16 inc jnp loope jg pushf jle pop popl jg jmp pop inc lods (bad) mov lcall lcall mov mov (bad) in or fidivrl in dec pop cmc (bad) out nop push pop movl sti lahf push sub inc daa or (bad) cmp sbb push mov mov inc pop adc jg sub pop mov jg and decb or lods mov mov pop inc and leave mov jle cli inc test xor jg repz jg rolb push xor mov das dec ja jo xchg aaa jg dec jnp xchg out jne mov mov cltd movsb je pop cwtl pop cmp aam arpl or cmp fstpt jg push int insl sbb idivb add mov into jg pop adc lcall jg adc fwait loopne aam test cmpb add decb cmp jmp mov mov jp xor inc add mov pop inc cmpsl sub mov pushf jae pop fsubs jg pop test fs jg sti push sarl add or in mov dec inc cmpl negb fwait mov test mov inc ret out xchg xchg mov xchg xchg scas rcrb icebp xor jg int fiaddl mov jmp inc cmpsb popa sub or mov bound add mov cld jmp stos in cmpsl sbb jg test xchg add (bad) mov adc inc (bad) mov les or dec addl push pop or or ret leave pusha icebp pop mov adc xor inc aas xor movsl push jo lret arpl pop scas mov xchg subl jnp test jg jmp and add jo mov in scas jg nop mov addr16 out push jns jle jg inc xor negl cwtl imul clc pop outsl xor jg xor call jg pop in icebp add fwait jg inc sbb jmp pop out add adc jg pushf sub imul cmp std inc jg les popf inc xchg cltd cmc jg cmpsb cwtl dec das cmp jg (bad) popa jmp aas ret xchg mov mov or popf shrl dec and sbb pop pushf aas xchg inc in fdivrl push adc repz (bad) (bad) or push jg insl mov loopne sarl (bad) and dec testl popa sarb aad out ss fidiv addr16 and push mov stos outsb pop iret fisttp (bad) cmpsb lret pop push insl fidivrl push and sbb cmp outsl scas (bad) jl xor jb push sub or adc (bad) jg mov sarb jg and mov icebp jg mov mov fisubrl cmpsb out mov cwtl insb aam xor rorb shll mov add inc iret addr16 inc jg add idivl in push mov js adc sub mov jnp cmp out sub cmpsb dec sbb jg sbbl xor dec jg in mov jecxz jl jmp inc cmp mov push iret xor pop aas dec cwtl adc test jo daa fsubp jmp xchg call (bad) adc xor test mov out fsubrl push je ljmp cs and pop cmpsb and mov mull jg jb ret push mov and jae mov mov xchg outsl dec into sti fidivr jnp divl dec adc cs fwait adc inc and lds bound xor in test adc mov pusha nop or push jg sbb inc adc sbb cli add fisubl or pop push cmp jmp scas hlt adc clc pop loopne cli sub and xor mov pop int3 scas mov lods cltd push xor stos pop mov jne jno push out (bad) (bad) (bad) jb scas xchg cmp adc jg popf mov jg mov std (bad) aas lea jle outsb aad gs push aam jno repz sti addr16 pop sbb jo xchg test and push jnp adc and repnz pop jg outsl push es cli aas repz pop xchg out flds or mov scas jl bound dec mov mov dec adc stc jg jmp imul repz (bad) call aas jle fiadd pop fwait rcr lods mov in test pop jg and stos or push jg mov pop int3 gs repz jmp xchg out mov (bad) jg pop and cmp or jg pop or mov imul add xor jg addb imulb inc xchg aas lods mov jl out adc insl jae les fwait jg adc xchg test push dec jg (bad) outsl xor mov in into sub pop or lods jb cmp add out imul mov shrb lock insb fs push mov cltd dec and add fnop pop jg and inc xchg mov jg rolb mov insl jg cld movsb add xchg (bad) incb xchg jmp dec xchg iret jg inc sahf andl (bad) dec aas (bad) in adc mov xor mov lcall in sarl mov fldl mov push cwtl pop sub cmpsl lods jb (bad) adc loope pop addr16 into jg sti xor cld pop sub xchg imul pop in add pop (bad) sub cmp xor jg lret loop fsts int3 jg inc stos sub cs pop xor lods lds pop jg in push (bad) pop xchg movsl jg dec outsb jp cmp xchg int daa jg imul mov jmp fldlg2 in mov jg sub push insb adc dec jg pop inc ror loope test test std inc or sarl inc daa scas adc in dec jg pop cmpsb into pop xchg xchg mov cmc pop and pop xor inc jg xlat lock jae dec lea in sti cmp cwtl insl pop mov dec jb lcall popf std or hlt adc fdivrs ljmp xor repz pusha jg dec dec hlt sahf cs xchg jg in mov cmc test xchg jg and hlt int3 (bad) lret popf xor ret (bad) icebp or mov mov repnz adc popf mov xchg lcall out jg inc pop fistp clc loopne insb fwait pop push pop cmc xchg jl pop jg pop jne dec add test pop out loop push mov enter sub and inc das jns jg rcrb cwtl (bad) mov pop sbb mov jg movsb pop dec inc aaa push or push mov dec cs outsb adc popa jg ret mov mov adcb in fwait sub test jno dec stc sbb sarl test je mull ja dec and stc rcrb data16 in es adc loopne pop aad dec mov inc arpl in mov out repz ja mov rorb push (bad) xchg jle pop mov lcall jo clc into outsl imul lret push fsubrs fisubr sub repz call cs xor cmpsl scas (bad) ja addr16 fcmovnb out out repz inc iret pop mov inc inc mov ljmp outsl xchg lahf lods fidivr pusha pop push negl jg add pusha arpl cmp or dec movswl xlat stos jg (bad) stc insb cmpsl inc xor jg jns xor lock jge dec mov pop fcomps dec adc imul das jg mov adc neg fild add sbb imulb jg andl sti arpl inc js sbb les mov xchg aaa push lret pop xchg mov mov pushf inc cmp pop outsb clc in cs outsl xor lea bound adc jl jno out mov lds cltd jg outsl imul lods xchg lea inc dec int daa js jecxz bound inc jb and and (bad) imul pop lcall push xlat (bad) mov jg hlt in and mov sub inc sahf add pop cmpsb dec adc mov popf adc outsl sti sub or addl lds add jno jae adc cmpsl lods test mov jge shl lock xor insl push fcompp and sbb aam jg das jne sub lea push fs jg xchg push dec xchg jae cmp (bad) ds xlat mov (bad) aam scas stc sub inc jg or xchg pop les sarl mov fstpl xor cmp leave adc jl add fldt mov xor lods and inc and mov mov mov in std cmp sti jo jg movsb pusha xchg xchg mov jg mov jno decb inc fidiv and dec cmp pusha addr16 jno movb push jg pushf or xchg mov js roll sub adc ss stc and pop mov cwtl iret outsb outsl dec cmpsb cmp adc lret mov shll test cmp mov outsb inc rolb mov adc (bad) ljmp jb sar dec xchg xchg sbb jg,pn popf adc and xor sti (bad) loop out pusha dec jg daa adc sbb pop jg rol jg jb loop push rorb fdivl inc cmpsb enter xchg sbb lock jg ret leave mov xchg aas aas xor das sub push jbe dec aas inc push shl mov mov jo das mov dec mov push inc loop jecxz xchg sti ja jge or push jg fdivl hlt jecxz test mov and negl aam mov repnz jbe jecxz cltd imul add lea pushf jb mov jg mov push cli jg (bad) leave aas out fs cmp (bad) and (bad) outsl jmp xor add bound mov sti addr16 (bad) sbb mov cmpl repnz jg lods sti and sbb daa sti aad pop lea mov dec aas jo arpl sbb dec inc cmp das icebp int3 push addr16 rcr jge lret (bad) xor mov dec pusha aaa (bad) js mov into adc xlat or pop pop pushf cli sub push test daa jg std pushl mov cmp dec aaa lahf sar mov sbb lds dec or dec popa mov mov test and sub push cmp scas pop or and popf sbb addr16 dec jp mov xchg mov push ja add push xor out and mov xor loope mov mov sarl aas das dec divl adc dec xor jg xor iret ljmp pop lahf xlat fcmovne inc inc pop lahf mov pop sbb aas mov lahf pop mov movsl les fmul in stos flds pop mov aad fdivrs sbb pop sbb (bad) imulb sub mov bound leave mov ror mov (bad) mov pop ja pop inc mov loope pop xchg int3 popa (bad) mov sbb jg mov push aas bound sub shr out rclb mov lret xchg (bad) jg push dec xchg push push (bad) (bad) mov cmp ss lahf cmp inc pop xor mov xchg jg push add jg nop lahf lret loop mov cmp dec lock inc out pop inc imul fdivrl (bad) arpl mov dec ja (bad) dec popa fs fbstp ss mov sarl pop test movd xor pusha leave inc imul sub daa test push xor jae gs add pop (bad) addr16 insl je jg ret mov jo push sub scas aam inc int jg,pn cmp lcall xchg ficompl gs test lret mov jg sbb jae and outsl sarl cmpb jmp repnz popa pop mov sbb fildll in jbe movsl and sbb lea xor testl cli aam ljmp sbb mov aad clc dec fldl2t into aas scas mov pop inc mov rcrb push stos scas adc in jg mov pusha jmp insl js out pop inc addr16 mov adc mov mov push xchg insl (bad) jg in inc and (bad) jmp cmp cmp sub dec out imul sub mov sbb pop jg or movsl movsb int3 shr sbb stos jl lahf mov push or adc jns in pop mov dec arpl dec iret push mov xchg insb add out and orl pop adc inc cmp mov mov dec lahf jno jg mov in jg ja dec arpl mov loop inc adc js cmpb ja lret je sti leave sbb and jmp jp ds cmp out stos cmp mov fdivrs xchg movsb xchg inc das pop mov aas int pop or ret and mul mov or jg jmp mov jbe mov jg ja call pop xchg jno stc xchg adc (bad) xchg push (bad) leave mov inc adc push xchg dec push stos notl jg cmp sub pop or xor jbe incl cmp icebp mov mov sbb ljmp iret sarb xor pop daa and jg jl movsb pop jbe mov or mov xor sub adc (bad) imul mov stos dec sub or mov or (bad) cmp clc dec daa jg repz and insl xor insb dec iret mov mov dec (bad) mov jae repnz sub push cmc pop mov imul fwait scas pop jo inc jg int lods adc ss jecxz push fsubp jb sbb sub jno or mov jne push push jbe mov (bad) imul cmp xchg fild (bad) dec sub fsubrs mov xchg jp call cmp in (bad) jo sub and cltd pop xor pop jnp aam and ret stos or stos jg test xor out iret movsl jbe mov out cs jmp push mov mov cmp jg inc aaa ret sbb mov cmpsl jg pop lret fisubl js sub xchg dec jg (bad) fidiv pop jo jg or outsl push test inc aas imul imul addr16 xchg mov xchg jb pushf cmc add pusha aas mov jno dec push pop inc add mov sub xchg pop jno mov jg and and push xor mov cltd jne test pop mov cmp test dec in cli mov aas fisubl (bad) mov cmpsl jae in and repnz lods in sbb test jg add push dec outsl dec cmp out sbb and mov mov mov mov xor sahf dec push into popf inc mov jle inc push aas cmpl pop fadd dec lods bound inc dec and test jmp dec inc add insb cmp push orb push or push push add shl es or and jg xor cmpsl mov enter sbb jmp aaa in or xor push adc in inc push mov pop xchg mov out es ret mov pop imul jge psraw ret xchg negl push dec cwtl adc add in jle jmp cld pop xchg pop idivl dec mov jnp,pt xchg daa xorb or aas mov add mov lods mov adc sbb jg mov mov cmc stos dec (bad) rep pusha (bad) std inc addr16 pusha push rorb mov jle push stos std pop adc mov addr16 outsb or fstps pushl dec xchg jg imul jg or mov stc leave or xchg dec loopne inc data16 bound xchg sub insl add aas imul sbb dec or jg imul and add mov dec jmp out inc loopne mov mov mov dec movsb jg insl arpl repnz cmc jmp lods jnp int mov aas out xchg jno and fwait mov cmc aaa daa outsb out (bad) dec sahf clc sbb mov test pop ret testl stc (bad) fs xor jg incb jmp pusha inc mov fcomps fistpll mov lock mov jg xlat cmp out loope sarb out (bad) (bad) cmpsb jecxz jg incb bound jne aas inc pop shlb inc mov std (bad) inc dec cld mov aad or or adc loop lods adc arpl jg std in xlat test push jg out fsubr push sarl stos in ret jg xor sar arpl shrl scas outsl es and fstpt loopne mov jg sub xchg leave aas into cli or jne dec (bad) out jg mov std cmp andps stc cwtl jle jg rclb loope stc test (bad) jg aas push outsl test mov lock mov sti stos ds das add cmp loop jbe pop scas jg pop mov pop fstpt jl and dec mov push cwtl (bad) mov xchg xchg lods loop enter fnstenv es test cmp mov and push add jg jecxz xchg bound int3 out cmp pop mov inc stos push jge gs mov insl ret call or sub inc sti mov data16 int mov cltd dec aad pop sub pop std xlat add sbb jg pop aaa rol mov xchg jg in movsb mov lahf adc imul cmp and (bad) jb imulb int lcall jl data16 call insb jg enter mov fidivl jmp mov pop jmp mov dec jae fidivrl jg pushf mov cld aas loop add scas push loopne pop gs pushf sbb ss adc xchg jg leave js popa mov cli fcomip (bad) fmull aam sbb arpl dec data16 out lcall xor xor push pop jg push cmp mov in lret mov jge (bad) xchg movsl push sbb add mov xor jmp mov dec adc (bad) rcr jle ret and push fwait in inc xor mov fwait pop in icebp cmpsl lock jg jl test mov fsubrs mov icebp loop jg xor jge mov xchg jg mov jg call loop jg mov outsl jg dec and popf mov mov fdiv jge outsb mov (bad) xlat dec enter xchg out and ds (bad) inc (bad) lods das xchg push mov cli cmp and dec jl outsl inc push jg rol enter pop cmp jl ljmp idivl movsl inc jmp dec inc movsb xchg insb imul or rol fldl andl aas pop lret xchg cld cltd or cmc jo loope pusha nop or js mov jbe ja xchg push cmp jg sub imul divl fisubrl mov aas out mov dec cwtl or loop mov mov or fcmovne imul push xchg ret add inc jmp hlt mov ds sub push mov addr16 test out dec (bad) es mov add mov jp js push out xchg nop inc pop test dec jg faddl lret sub fnsave imul jg popf lods cmp sub mov pop jg out mov cmp jl mov popf scas mov xchg add sub pusha adc xlat outsl lea and mov icebp outsl and aas pop gs outsl inc jle cli arpl jne shrl in ja repz ja xchg jg leave mov mov pop add or cmpsl das jg insl adc scas inc push xchg jg add test cltd mov add jmp aas cld sub shr fidivr int sti out nop outsb jg fcmovnb fiaddl jmp imul outsl movsl adc loop xchg lret ljmp aas rorl sbb xchg ljmp jg push cltd insl jge adc pushf pusha mov inc lcall aad xchg jbe aas jg mov xchg inc inc jg (bad) fcompp cmpps mov push cltd (bad) ja hlt js mov jg fnsave repz jne cmpsl scas shll lret jg,pt pop push sub jo jg cmp in add or jg push gs popf out xchg dec jg push mov inc (bad) jg pop add jae insl addr16 fsub sbb cli mov pop adc inc out (bad) xchg sbb jp pop inc jbe jbe mov dec or push stos xlat fcoml or jp cmp mov push lock repnz or ja sub inc jo ds jg dec in (bad) sub mov cltd and xchg int3 mov sub mov loop movsb aad dec jg lea mov mov adc sbb mov pusha ror xchg mov jae fwait or push cs mov jl xor jg roll inc leave (bad) jg je sbb aas loope xor push mov frstor (bad) andl push (bad) outsl xchg mov pop mov mov test insb jg jle loop add mov loopne aad push test (bad) jge jg sbb jns jp xor and int mov shll test mov sub test add outsl leave (bad) inc rorb or cs faddp jl dec sbbl es jb or sarl cvtdq2ps mov leave jg jae adc cld jo,pn mov inc aad jle mov jp inc loop jg jl inc call out dec jg dec mov add inc xchg mov sub icebp mov inc pop ret fdivrs into dec mov fiaddl ret sbb test jno sbbb jg pop insl dec out dec adc jg test addr16 rorl dec jg in xchg loope (bad) decb cmpl push sti ljmp int outsb inc dec jg jb,pn push or cmpsb jg pusha in lds jg mov mov jg push shrb cmc pop lods mov sbb and int xor xchg mov (bad) and stos sbb jg dec hlt sbb int mov jg notb jae es pop jns cmc lock sarb push mov adc (bad) std or mov xchg push push dec out mov ret add stc lcall enterw fwait mov jge ds aaa pop dec movsl push push mov roll push aam mov sti xchg or pop pusha jp out jg inc jecxz fdivrl jns mov or psrlq jg fildl pop inc and jg iret xchg jg imul cmp adc jecxz (bad) push jbe mov cmp dec mov jg std sbb pop cmpsl loope jg push insb push jg ret dec xchg pop sub mov sbb pop fsubrs and xchg pop mov cmp dec repz or jge imul shrl adc imul js jg or add lds test stos xor idivl dec jg aaa sbb lock cmp pop scas mov (bad) xchg and mov cmp xor lock loop add popf cmp ffreep jmpw loope jg repnz (bad) lret pop cmp jg je adc out jb jg mov movsb xor cmpsl jg test lock mov (bad) mov jb das iret add ret or mov add lret imul jg pop inc idivb push xlat decb xor dec fidivr pusha scas mov loope jo sub xor les pop jp inc jo push jnp (bad) repz sub push aam dec clc jg sub movsb push mov push mov mov pop out push jg loopne std jae xchg out inc jmp test repz popf jns daa aam (bad) aas rorb fisttp idivb jns shrl xor in jg pop movsb inc or add fist sti insb push outsl sub (bad) repnz cmp std inc adc dec loop mov shrb push (bad) into popf mov push pop pop (bad) dec cmpsb mov jg cs or inc leave aas aam dec jo lfs enter js and cli xor or xchg mov mov mov aaa pop or cld dec in test cli pushf lahf cmp in jg adc or pop mov mov mov jbe push mov push adc pushf and pop fs addr16 repnz test movsl inc jle pmullw ljmp daa jg inc dec pusha mov sub outsl push inc mov pop push or xor adc adc scas inc in jg test ret push (bad) std jo fisttp out dec sub iret insb mov mov jg data16 pop add std jg shlb dec movl mov insb lret test fdivrl push and pop notl xchg mov imul pop push pop lock insl mov jg and add sarb sarl inc repz in sub xchg mov xor imul xor orb mov int3 xchg cld outsl (bad) fisttp out jne push imul sahf ds mov push fidivr jae mov jg in pop sbb in lea xor jae mov mov xchg cmp bound sbb or mov xor cli jg xchg or (bad) jg lahf in inc ret movl test jg jl js sahf hlt sub cmp jp addr16 xchg sbb push out push adc xlat idivl loop mov movsl jg xchg out cs outsl mov jae cmpsl mov ret mov push jg inc add xor push mov push negl divl xlat test mov jg pusha (bad) jae mov jge out pop xlat (bad) dec js dec int (bad) mulps das repnz pop movsl loope mov js pop mov aas mov jno in addl fwait into xchg mov fnstsw push lods sub push enter adc loop rorl xor sub jg mov out mov mov dec xor adc (bad) jne jo scas mov js mov rcrb inc add mov jo,pt cld pop and jge arpl cmp (bad) (bad) lock ja aas aam (bad) addr16 lahf icebp jg movsl adc xorl jg sbb cmp inc scas add sarb pop mov movsb cmp shrb arpl es sub ds mov and cmp mov pop or out sti jne mov mov mov test mov imul in jg or mov loope call (bad) mov (bad) jb insl jge cmp lods dec outsl jmp call dec scas mov sbb xlat fwait jg sub mov mov outsb imul test in ret add mov or xchg inc popa inc push add pop sub mov pop mov mov dec dec imul jle aas sti sbb xchg dec (bad) mov push add inc lea pop popa mov mov mov jg aam sar inc cli mov fidivr jnp mov push dec lret outsb cmp jg movsl dec sub mov inc pop lret push jle loope fnstcw jmp mov icebp and add jg lahf idivb mov stos fstpl push jnp leave jle ss flds dec aaa fimul dec cmpsb test jg lret pop ja addb cwtl dec je xchg mov jg shrb xchg sub cmp bound pop testb int push jnp adc sbb cmp adc (bad) sbb cmc (bad) cltd jg jns sbb mov or xor aaa xchg cmp gs jg call outsb sbb adc pop test push aad push mov lcall push add adc mov sbb mov inc cmp jle push jae addr16 inc mov mov dec sbb xor mov jg (bad) outsl mov cld pop or fsubrl adc js lret cwtl int3 xchg shrl mov mov cmp push mov jg mov outsb cli sbb cmp data16 test mov jg,pt dec or insl adc js mov xchg dec shrb dec push jmp mov jg mov mov rcr push cltd jg cmp inc mov test jmp fnstcw jg repnz in push jg and ret jg mov jge cltd jg testl mov sub idivb inc movsl mov sti inc test arpl push insl sbb outsl or daa inc cmpl xchg or jg sub cltd mov add (bad) mov addl loop xchg add aas cld sbb js aad inc pop movsb jg inc jo or jg fs and sub jb add push mov cmp xchg dec jp adc xchg jge mov pop insb jg ret adc or xchg mov stos jnp jle jno orb arpl ret mov (bad) push ljmp in test sbb push jne cmp pop stos insb repz dec aas adc js jmp inc jg mov mov cmpsl test inc cmp push push jg out loop jae dec out dec scas data16 jbe mov fs movsl sbb push xchg jno dec notl jg mov mov clc jmp cmpsb inc jg mov jp jg testb jg pop sub pop (bad) mov mov dec mov add adc and cmp cmp ja mov loopne outsl inc in repz divb pop mov dec rclb into inc (bad) jg pop (bad) inc mov clc (bad) pop test lods shlb sbb sahf sahf cmp push (bad) fldt xchg int3 pop out dec in dec mov cmp mov pop pop sti jg,pn inc outsb es out mov jmp cmp pop jg mov ljmp inc iret mov aas add out loopne mov inc jg call dec jne (bad) cmc xchg push inc movsb dec cwtl jne lret imul dec jb dec mov jg les inc xchg adc out ss jg push hlt jecxz rclb lods sbb mov jge pop popf jnp mov xchg dec mov (bad) jl cli data16 jns push jo jecxz dec ret gs lock sbb ds aad in loope jg push sbb nop scas int3 inc jg and and jg (bad) cmp jg das out inc fcompl test cwtl push ds cmpb (bad) iret mov mov into sbb xchg mov cmp jg xlat add test dec sub adc push sarb or sub jg fcom cs jmp dec cltd outsl out ja pop (bad) xor mov cmp and dec pop inc jg movsb sbb insl andl mov dec notl mov (bad) cmp jbe jg sub mov int3 ds inc imul and jg adc add add aaa pop popf dec hlt and in mov jg fstps sub add stos jno inc jg push loop repnz xchg push scas xchg cmc mov jbe pop rorl adc lret push dec pop jmp int3 inc xchg pop out mov mov mov push or repnz loope jg loop test or fcomps jg (bad) ss std in cld sti and outsl push outsl jp aam and lea mov push jg and lahf jg lds stc scas xchg imul pusha mov enter xor dec xor push repnz fsubrp jg popf add adc dec imul pusha adc and sub loopne jg movb push (bad) add xchg stos in sbb jg clc icebp lods lahf jecxz mov daa enter jmp js mov mov inc int cmpsl movl aad xchg lods (bad) ljmp or jg dec inc sbb aad ret jl inc ret test imul and popl mov outsl push add sti and inc jg,pn pop pop test dec je add inc pusha cld jg clc xchg push int sarb push (bad) mov jg,pn inc es xchg adc out fs jg xor out dec std jg xchg xor adc shrl xchg movsb jg cmp mov shl xchg bound xor sbbb sub outsl inc fimul xchg jecxz inc mov dec sbb cltd sbbl test pop mov das pop lds jge jg pusha xchg sub repz insl cltd jg mov jg push xchg sub in das inc jo cmp jbe and aas fucomip adc rcll inc insl std jg sub hlt dec dec and popf push fnstsw lock push repz push inc dec push sbb mov dec jecxz mov jg (bad) addr16 loopne lods inc jl leave jae jnp cmp inc fdivl xor int movsl cmp jge call (bad) push aas xchg and sub or andl xchg test pop mov jg adcb bnd ja cld sub jb mov lret imul xor mov cli jg test aas dec into dec xor add (bad) jl sub jg out pop jns fiaddl jg int3 mov call repz ljmp scas add mov mov jg rol movsl jmp outsl lock popf add rcll outsb repz mov jg push mov mov mov or roll jg js and jg xor clc xlat xchg cmpsl inc mov pop dec mov cmp pop and or (bad) jg adc xchg jmp inc mov int jg mov movsl sub jle dec ja xchg fstps dec sti mov movsb in sub jo mov out pushf inc xchg ljmp cltd (bad) loope mov dec xlat jg pop or inc jg das mov std cld jle xor push out popf out fnstsw jns fistpll sbb xlat jp daa ja push xchg popf mov into fcompl adc sub or jg pusha iret jecxz rol in pop inc mov pop mov sti fucom or jbe xchg mov lds in das subl mov insb jg push cld push mov sbb sbb ficomp mov jns (bad) sti ret pop mov and pusha push hlt xchg (bad) jecxz mov add incb jl adc cmpsb mov mov dec mov jg pop mov mov cmp fcom mov stos fmull lods jg push cld addb ljmp cmpsl jmp mov and addl cmp push push cmpsb repz mov mov cmp jge and lds out in repnz sbb lods mov test xchg std jg (bad) int mov jg push dec inc or mov addr16 jg cmp xchg loope cmp lea call mov sub and sub adc mov mov add bswap out xchg mov adc add jg or dec jmp cld mov adc mov push outsl daa xchg ucomiss adc sub jmp add or inc dec jg sbb (bad) repz add jg xlat call xchg out mov xor insl push mov cmp sbb ds stos imul adc aaa pop mov jg fisubl ret push xchg mov or imul (bad) adc sar push in ret cmp mov jp jg clc push mov jno xor cmp enter jmp dec sub or mov xchg cmpb (bad) mov (bad) inc xor test inc sub repnz (bad) jo sub add mov mov movsl push sbb mov pushf cmpl lahf clc sbb xor xor (bad) sbb sub dec dec jmp push out inc push bound addr16 pop rcll jbe push dec in jg cmp dec enter jg pop sub inc jecxz jo addr16 je (bad) pop inc pop out pusha or mov push and jg dec mov fnsave pop dec jg outsb mov dec mov jg jb iret pop mov insl jge jg jo std mov leave jg dec mov mov sbb divb (bad) mov mov sbb lods add fisubl jg add sbb aas out xchg xchg popf push inc in jg je and test sti outsl xchg mov jmp cmp cltd cmp jle cmc test mov ljmp dec adc jg sbb push cmpl sarl ret xlat jb add lods rcll into in xchg push cli (bad) lret fwait xlat jmp sti incl and stos mov xchg inc bnd push ret in nop jg jmp imul push arpl mov jg shlb iret sbb or js jb outsl push insb push sub jg movsb cmpb pop jnp or push jmp jg into jae ficompl rolb ds pop jae jno mov test (bad) cmc sub cmp jbe,pn inc (bad) lret pop fsubp sti cwtl hlt xor cmp mov dec shr aaa xchg frstor ss jg xchg jb mov xchg fmull xor popa xlat adc xor sbb jg mov pop roll and mov ss arpl sarl jp jg inc nop jne inc and lock test cmp xor outsb and dec fisttp xchg inc mov fmull or add sub sti test lahf xor pop cmp jns pop xchg pop xor jg and sarb push int3 out mov dec push adc and fidivrl frstor sbb inc jg data16 sbb fimull je sbb pop stc add xor ja dec inc (bad) dec das jnp jbe sbb jg lods inc pop inc push mov jo xchg mov push pop std fiadd addb mov ret fadd sarb sbb jg sbb jge test aas push push inc bound mov in sbb inc in in sbbl movsb jg xchg sub adc add sarl jg jne mov ret mov dec ja dec xchg fildl nop (bad) es test cmp enter lods xchg aas push xchg into inc daa test lods pop push aad js add jg stos push dec or mov push lret (bad) pop xor or outsl mov jg inc int inc enter xor mov insb outsl into and fidivr mov les pusha imul fs cmp mov jg xchg int ljmp inc adcl xor inc js mov mov push jg fidiv and pop pop mov je jg fsubs dec adc ret test push add stc mov mov cltd cwtl inc xorl rcrb loopne mov add mov call cmp sti repnz (bad) aas mov outsb (bad) bound add sbb enter sub mov jb push mov sbb sarb cwtl cmp pop pop jecxz sarl xor out hlt mov mov or cwtl imul jne inc and mov addl cmp lret insb jmp call test or mov jg shll stc mov push das shll lods jg jp ds inc xor aam cmp int3 xchg jg xor cltd mov cli test test pop leave push cmp fcmovbe pop jge add ret mov sarb mov sbb mov scas mov mov (bad) jg aaa adc call mov xchg inc int3 cld mov xor lcall xchg xchg inc sar sbb dec fdivrp xlat mov sbbl dec or jl adc push sub loop jg mov stos pusha in (bad) sarl leave gs jae lods pop add (bad) int push imul push mov sahf xchg aad pop push xor (bad) sub jg in iret mov pop pop jg popa das inc xor mov mov xchg pop push cmp les xchg add imul loope mov sbb mov mov pop (bad) dec mov jbe std push dec jge popf out push (bad) in aas inc imul je sub ja xor (bad) or aas jg jmp out inc jg fistpll aad or or sbb divb sub jl int push jns xlat inc adc repz sub scas mov das dec orb mov std push cmc cli out in clc outsl enter add rcr arpl in loop (bad) sarb int sub and out scas xor push add jg and push inc sub aas add popa lods out int test repnz pop addr16 hlt add cmc popa add nop xchg xchg das xchg jg xor jl mov push push jno in jecxz cmovge outsl push (bad) (bad) into push xor nop sbb insb inc jge mov sbb jg in push xor std pop adc mov mov jg cs ret xchg in inc adc (bad) fcompl cmp mov mov sbb aas lock jg in xlat push inc pop mov je lcall jg pop das fcmovnb cld or jg sti pop xchg sbb (bad) icebp mov daa movsb pop sbb or clc fdivrl adc pusha test rcrl mov mull jge jg pop (bad) ss dec jl lcall aaa dec movl aam or aas sbb mov addr16 pop jg xchg jp scas lods into sti jg sbb pop xor jecxz inc inc ftst cmp push les jne (bad) lcall fxtract sti pop je push shr dec pop mov cmp outsl out add rclb dec imul loope mov pop pop inc mov pop scas (bad) (bad) mov cmpsl mov inc daa imul mov in dec inc jbe sti mov push stos or pop adc enter das mov insb jg xchg and jg jge mov out xchg jg clc mov in mov pop sahf lcall cmp lret outsb jbe outsl add popf aad inc xor inc inc jle aam or js mov cmpsb add mov loop and icebp lods mov jg xor push jg aad std dec xorb jg into xor fs inc stc ja sub dec sahf shl jg repnz divl in je inc jne loopne cmpl adc mov xor pop pop in (bad) out leave push inc sub js int and cmp sarl outsl dec mov (bad) out mov jg push cltd shll sbb in int3 dec mov sbb sar jnp xchg and inc jg inc std pop or push out repnz push mov xor sbb or jae mov pushf out jae adc mov or mov sti xor lea cmp sahf add pop jbe fist mov and dec call sbbl fadds jle outsl mov in jg jmp cltd into jg pand or leave lods popf mov ret aad shl stc lret lds imul out add inc and add mov xor sub jecxz mov aas inc add (bad) or test and lock sub jg push mov ds or fidivr sub bound lock test pop sarb movsb and jo dec ret stos js out lret mov dec outsl jg and mov mov repnz enter aam jg or mov ds push lock inc jae inc pop jg test sbb test sbb jg test pop popf std or mov or inc xchg mov adc cmp daa pop xchg mov (bad) push push adc jmp xchg xlat enter std out (bad) in xor inc fwait adc jae jmp jg sub (bad) mov repz xor xchg ret cmp sahf adc mov fdiv cmpsb jg pop call je inc dec leave in pop push dec idivl scas shrb mov push (bad) imul xchg mov jmp stos xor ja int3 js lret inc pmaxub inc sbb fwait jg je lahf cltd xchg mov xor cmp (bad) leave push push and ret sarb out repnz xchg int pusha adc aas jne cltd inc adc and adc int3 in inc inc fs lock push pop add push mov mov popf pop sub inc jo fnstcw hlt pop mov jg cmp aas outsb fidivrl or adc push lahf dec inc cmp fstpl nop cmp pop inc stos push inc pushf lret add and inc cmc dec cltd out jl ljmp loop xchg lret cmpsl scas sbb push out jg add pavgb pop shrb aas push test jbe jg and fidivl daa jg pop shld cmp sbb fiaddl clc lock gs mov pushf jae aaa sub push jg in loope rclb mov jecxz popa jg lret or jbe mov movl inc xchg push jle fstl pop mov inc jns mov xor and lea dec mov pushf jg sahf repz int3 mov pop jg rol insl mov or dec jmp sub mov scas push cltd push jnp jg push dec add aas push jg mov fildl and bound sahf hlt xchg pop insl mov pop (bad) push jg ret ror sub aam mov sbb sbb bound inc add adc push dec push adc lahf mov jg aad orl dec aaa outsl fsubrs test ds xchg sbb ja cltd jg mov lds push jg mov jns mov repz push jecxz jg loope lcall jg xor sub les push jge mov pusha push xchg aas pop add inc repnz sub pop xor pop push push nop aas shrb outsl cs pop adc outsl pop out clc pop imul insb rcr call push aaa pop pop pop cmpsl (bad) dec jns ljmp sub add idiv in xchg cs inc push jg dec inc cmc int3 negb imul stc lds or mov inc jg shlb jmp repnz sub push fisttp aas negb int3 mov xor sub mov aad push insb add mov jg andnps jg xor ljmp inc mov (bad) popa dec jg sbb adc (bad) mov pop fldt pushf popa jg,pt popl push daa icebp inc rcrl push movsl cld jmp inc lahf push jne mov test std push jle mov in cmpsl lods xchg jg (bad) insb popa mov xor fstps mov (bad) fcomi pop scas jecxz push jg iret shlb jg js lock jne addr16 jge xchg inc ret mov mov jae pushf jg shlb mov and fmuls inc mov xlat jg sub mov or pop push jae or into stos pop push (bad) fs (bad) dec ja mov out ja sbb mov pop sub mov xchg mov int3 sbb jg sub mov mov les jp xor aad imul pop ds repz loop jg mov scas sub (bad) aad dec jno jp in xchg int3 mov sub push mov fldenv loop cli popa push ljmp (bad) adc out mov jg sub jg jmp mov xchg sbb repnz loopne cmp insl jecxz test sarl cmp and pop cmp nop ficoml xchg dec repnz cmp mov lcall fmuls (bad) and push cmp sub out jae es js and imul pop jg je mov cmp jg push mov sbbb jb les pusha ss pop dec arpl sbb fsubrp pop dec jg xor lock jg inc rcr and mov cwtl hlt xchg arpl frstor lods faddl pusha jg lcall cli sbb sbb jg or in int pop das jg mov je jg or and jge ljmp out xchg ja (bad) mov js lea rcrb jg mov mov inc outsl cmpsb push inc dec inc or mov cltd jno dec cmpsl jo lea inc test add push (bad) in aad sahf pop and fidivr dec (bad) xor lret scas sti into aas out pusha xchg xchg jg cmp shrl inc decl sub lahf cmpsl and iret pop adc mov and or out adc push sbb jg movl xor aam cmpl xor xlat mov pop pop xchg lret dec ja scas jg and xchg int3 or sub (bad) jae xchg (bad) lahf cmp ds pusha jg mov jg mov xchg sbb xor mov pusha jg popf nop les mov das jg cmpl jg addr16 out add xchg push loope mov test aas cmp xchg (bad) dec gs dec xchg adcb pop jae pop jmp neg ja xor xchg mov cld cmp cmp push mov test pop rolb jg mov mov jg cli repnz shrl add or xor mov test push pop jg iret pop test and jg leave jbe cld push mov aas mov mov inc xchg aad addr16 mov mov ss sbb jmp loopne js addr16 xchg cmp jbe push arpl inc and shll dec adc xor jg add out jno pop aaa jg pop clflush aas bound repnz inc stos jg xor mov pop lods sbb push push cmpsb inc inc mov jg fistpll fidivr pusha imul add aas and ror xchg xchg lock enter sbbb ds sahf and popf rcrb xchg mov fnstsw xor stos push enter sbb cmp (bad) imul in add ret push adc sbb gs and js jmp outsl mov aaa mov adc push jbe and push lds loopne jg leave pop jp cmp fldt fcomi rorl into pop jmp aas push xor test or dec xchg add push mov add xchg jl xchg clc jg and enter mov call push jg adc pop dec jg addr16 mov sub jg (bad) je mov cmp fwait pop and xchg ss cs pop jg imul jae fistpl and bound push pop sbb jp mov addr16 pop sbb jg sti jmp aas jg lock mov jp mov std fidiv sub leave push add dec mov inc stc iret arpl mov outsl mov les fxch fdivl imul adc fldt dec (bad) xchg inc sbb jg dec sbbl lcall std xchg pop mov (bad) xor sub mov jg pop mov mov cmp icebp jg cmp cli ja add scas es push cltd push xor out sub jg (bad) mov dec pusha cmc inc and rol pop pop addr16 xor jg test je (bad) jg mov fistpl (bad) loopne pop cs popa fnstsw dec xor jg mov cmp jg mov jnp (bad) mov and ret pop jo pop jg imul adc add or mov jne ss outsl and inc out dec inc jg ja jns inc sahf xor loope xchg fsubrp xchg push jg cmp jmp mov and mov iret dec leave insb into adc mov inc test mov ret hlt insb mov in enter jle shll dec jmp jg mov sahf jg mov movsb mov movzbl ljmp xor jae cmp bound jg dec fdiv sbb push fisubr pop push sub lods inc xor es inc jg mov popf fisubl ss inc lock pushf push sub push stos aas mov mov dec sub (bad) (bad) in mov and aas sbb notl inc xor xchg mov loop int scas enter xchg jne inc and xor jb fild jg jmp loop aas sbb test push das or inc lea int3 in mov mov jle mov add push mov pop jno gs jne call iret mov test jp xor mov outsl mov in jmp lahf pop sti mull jbe outsl ss pop stos dec testl mov jg repz (bad) cmp fsts je loopne je jg jmp cmp sbb fmull xchg leave jae sub adc jo mov sbbb aas imul gs enter cmpsl std pop add pop fmull jno ds mov sahf push pop inc outsb jg insl scas sub dec mov mov adc mov xchg out imul or inc call jg lahf int3 cmp and jg mov mov aad pusha mov das int clc push jg int3 imul adc add arpl xor mov mov sbb je add dec and xchg xor in mov hlt mov mov sub jle push jg insl in xlat or js out lret adc in inc mov mov pop cmc fcom stc add push and jns push notl xchg xchg scas mov and or jg mov dec cmp ficoml xchg lock jb aad mov rorb inc jg aas addl ret insb inc or push cmp insb rcl jg and cmpl loop insb movsb push inc arpl idivb mov mov jg test gs xchg mov cmpsb add es mov adc outsb mov cld dec and in test shrl pop or hlt mov fwait mov lret ret dec mov pop sbbl icebp test movsb mov xor pusha in xchg nop adc jg mov notl jmp call in out push xchg jg and inc adc mov push bound push insb addps mov out jnp mov (bad) dec xchg and data16 push push xor push jg aaa out loopne imul fiaddl dec dec aaa ds in jg and data16 fs mov divb or push mov into imul (bad) jg jno movsl andl pusha inc lret xor shrl (bad) mov loopne std inc inc push jg inc sbb out jne push dec pop iret jno sub repnz mov dec xor pop cmpsl mov mov sarl pop and jne notb jo mov dec cmp aas pop loope loopne inc ja (bad) pop mov mov xor or es xchg cmpsb jge ds pop push push jle dec sbb sti inc lea psubw aaa ret jg push and mov sbb add sti in movsl (bad) push addr16 and cmp add subb aam jg xlat pushf and cmp jg adcl ret sbb ds push push sbb ja push pop mov pop dec ja or fs je sub stc (bad) push ljmp stos aad mov mov xor outsl sbb jg les sub (bad) lods sbb mov jg adc inc (bad) and cmp dec pop xchg mov aas sub xlat pop pop test fdivrs jbe mov jg (bad) mulb jg mov mov pop mov jne (bad) stc jg test push popf inc jle add lret xor ret jg inc mov hlt pop lcall fs call adc sti mov imul (bad) (bad) nop int3 or dec mov jg call xlat lods (bad) pop jg and lods fwait or dec mov (bad) xor in dec jg pop lahf inc int mov cmpsb xor adc aas gs popa jne scas faddl xchg jg inc ljmp test mov cmp aas cmp in nop add aas stos jg mov cmpsb mov push push mov lahf popf inc adc jg mov fs mov push ret popa sahf mov xchg idivb loopne (bad) popf out inc mov dec ret in lahf lret mov or mov cmp ljmp popa (bad) jg dec or lcall gs adc das inc (bad) or and (bad) or out jo call xchg dec cmp push je enter lea mov mov jno jge dec cmp push lods lods icebp aas push inc scas mov bnd pop jg and inc xchg xor test cmpl scas out mov pop jg (bad) jno mov and jbe outsl pop jg xchg (bad) or jg into icebp (bad) test pop es mov and movsl shrl or mov xor mov je in bound jne iret pop add cmpb push dec jl ljmp movb imul xchg mov subl xchg icebp dec js push ret push xchg aas mov mov mov jg mov sbb (bad) jg jns adc xor pop inc xchg mov sub mov pop pop pop test jg repz push cmp into xor cld js jo pop fisttp aas mov mov pop mov jg mov stos push jg cmp sahf sub outsl inc add imul add subb int icebp bound pop jp js xor negb mov lea jg mov adc jg nop movsl pop es out int3 je jne jg pop aaa push lods dec jg cmp push loope lret ret jg push push test sub mov inc movsl pop push cmpsb cld or scas repz sbb mov movsb pop push jg das jae ret int dec std and push int3 push jle xor out add mov stos jg cmc loopne test lods popf mov dec push cmpsl push cmpsb sarl int popa ficoml movsb mov sbb leave cmp test out daa mulb dec sbbb das xor pop xchg jg repnz inc sub inc jg sbb pop dec lods inc jg (bad) sbb jnp jg adc pop aaa and or jg cmp mov in mov in jl jmp dec jg imul xchg scas icebp jg jno pop jle pop mov insb fldenv pop loopne aas rolb or pusha jae mov jg inc add jg fsub xchg jnp mov jg rcrl xchg jg sub arpl jns push sub in jg das jmp mov enter push arpl les sarb rorl jg fdivl pmullw fnstcw jmp cmpsl sbb in (bad) cmpsb or mov mov add sbb add in fldz jg insb sub mov jg sub adc lods sub xor jg cmpsl lods and cmpsb test jg (bad) mov cmc cmp mov sbb xchg imul inc je imul xlat jg sub dec nop sahf data16 mov cmp aam repz outsl fistpll jbe push lods out cltd jg clc pop fs in hlt jg negb jg loopne adc pop inc mov pop mov lods xchg jg gs jbe xchg lcall xor sbb xchg dec cmpl mov bound push rolb xor jo pop push cmpsb (bad) loop jg lret mov lea mov std mov inc lock aaa mov push mov push jns out jle aad ficomp gs add mov iret pop mov inc clc and mov mov test or mov mov inc jg xchg mov daa bound jg scas cmp aad pop (bad) jg jns movsb test sub cld cmp push sarl test arpl xchg outsl loope sub sarl mov (bad) pop inc cmp jl dec pop jecxz lret shll adc lahf jg loope push fdivr mov je cmp jg xchg mov xchg ret pushl mov sub xchg ret mov jg jmp sub stos je (bad) mov out lahf xchg jg or mov dec iret js rcrb jg popf jp gs or cmp lahf jg pop jne in mov addr16 insl lahf dec mov jecxz inc and stos pop repnz pop jg or pushf fcmovnu movsb jg push jno cmpl and insb cld xchg jg loop add popa cwtl ret (bad) xchg repnz sbb enter add push sub lds jmp sahf sbb div aas xor das mov mov mov dec jp xor pop ds sbb ja pop mov pop es xchg les jg dec das push cmp jge mov addr16 scas aam jnp xchg int add scas adc jg in mov rclb test xor addr16 jo sub mov cmp adc sub pusha ljmp outsl or fwait pop inc mov notl push and pop loopne jg dec pop xor sub or cmp mov push jg (bad) divl jle (bad) cmpsw addb sarl cmc sbb mov pop ret xchg insb jb mov inc jg iret stos sbb int cmp xchg xchg ds jo sub jg imul mov xchg loope mov repz add cmp jp out xlat or pop daa fisttp and cmc outsl call mov push aam dec inc xchg adc fidivrl adc jle xchg repnz enter jo es outsb insb pop dec pop and jg adc jp int3 jg jb jmp hlt mov and jg pop xchg enter xchg inc xor std outsl mov repnz outsb jg clc sbb leave lcall enter cmpl fdivs jg popa popl loope lahf mov ja sbb pushf push sbb das jg pop pusha inc cmp xchg daa (bad) (bad) dec sti dec mov in ja jg lds xchg sti sub call test jg fsubrs mov jle out and push fistpll aas lods add or jg movsb arpl and jg movl cmp mov fdivrs jl and (bad) jecxz inc sub pop mulb fidivl out lock aas dec sahf pop xor mov sub mov das hlt add jg push mov xor mov jmp push mov in dec inc lea adc insb out js,pn pop imul jg mov pop mov xor stc and popa cld mov push push lahf arpl lds pusha jo popl mov mov jg adc jg add dec pavgw dec jl jmp cmc and scas ret ja test repnz addr16 jp stos mov add int js jnp cli sub lea inc lcall in das outsl lret scas js les xor (bad) push jg inc mov mov je inc pop pushf jg sbb push ljmp and sahf stos fstp mov push mov add (bad) mov int or cmpl sbb xchg dec dec std rol mov dec enter fwait pop jg arpl (bad) jg or repz jg jns pop jb fnsave mov fwait mov mov sarb adc lcall xor mov fsts cmp jg pop pop mov jg popf movsl (bad) call jo sahf cmpsb inc das adc int mov ja ja sub jle (bad) divb outsb inc test pop jo lret movsbl movb adc popf mov mov outsb sub arpl cmc imul jp test adc aaa add aas fdivrl or dec dec cmovns cmp arpl sub mov dec adc or sub adc in dec add aas mov adc gs stc ret adc lds jg out add jno xchg inc jg pop and (bad) scas jecxz or dec cltd jg push fistl sub mul lahf movsl (bad) jnp cmp into jg cmp (bad) repnz dec xchg jo aaa stc jns jg pop pusha and mov push jg cltd and jg ret and dec imul pop mov adc xor pop lea inc push (bad) push jg or ds mov gs sbb iret jl aas addr16 pusha repz sti in (bad) fimul dec mov js push daa in movsb insl cli std jg dec sahf stc mov xchg jmp loop popf pop pop pusha xchg or sbb lds ret jg shrl and std mov xchg addr16 push jg xchg dec inc pop mov cmc out push or addl push repnz jo mov iret sbb jg mov dec cmp int3 clc xchg mov fwait adc enter addr16 pop and mov data16 or mov or cmp fidivr mov adc jg mov pop xchg ds push jnp pusha sahf (bad) jb scas movsb data16 sbb aaa push xchg inc cmp arpl mov addr16 add movsb jg stos mov pop (bad) jmp sub lcall repz ret cmp idivl adc iret pop xchg mov sbbl arpl jg ret ss lret mov mov inc push add jg xchg jne and sbb jle push mov dec jecxz jg cmpsl mov jl adcl rcll xchg cmp add inc push dec out inc bnd xor pop jno add (bad) jg (bad) push fidivl insb jg sti mov jg add pushf push sahf xchg xor in sti sub pop clc dec push fdivs jg in aam push mov mov sbb in sub push lret xchg jg xchg fucom insb ss jg adc push dec sbb dec int3 lret inc jg rcrl (bad) jg repnz pop mov add jg pop xor sarb jl es call mov nop pop or fcmovnb movsl fdivr test ljmp dec jg das mov cmp jne (bad) mov mov fs test pop sahf mov mov adc aaa in ret fdivrs ljmp jg mov push cs loope cmp pop lret dec pop pop sti cmp mov dec jg insl sti jns movsb out xor jg das xchg jp nop xchg jg jne inc fnstenv out into adcl cmpsl out mov fist mov pop shr lcall inc aaa push das xchg mov (bad) addr16 std cmp dec stos and jecxz ja notl aas xor sub pop outsb in mov cltd inc dec inc jge pop jg pop faddl jg push in (bad) pop cwtl jbe jg mov jmp pop xchg push cmpsl cld add (bad) ja sarl and pop mov dec dec cli inc jbe add shl outsb incb xor xor xor in stc aaa and inc cmp push imul enter nop insl repz icebp and fadds pop jge xorl sahf aad push pop in dec or jg sbb xchg into imul inc cmp jg aaa add fwait dec adc (bad) sbb inc arpl pop mov xchg cmp ret inc popf inc jno or pop out fs jge push pop movsl sub add xchg loop inc jb out out jg fisubrl ror sub pop push mov jg push arpl cmp pop lock aas outsl xor bound inc push sbb inc jns jg jne cmp xchg enter fistpl add or loope jg cld lahf xchg or add jg add (bad) cmp lods dec aaa xchg cmp movb add jg mov outsb mov dec mov push or in fwait mov dec mov or mov sbb jg repz inc pmullw xchg jno std out push push adc aad call mov jg lahf mov mov outsl push push das mov mov ja inc mov jg inc fdivrs (bad) jg xor aam and es inc lret add in inc loop xchg sarb jl pop add enter mov aam pop jg inc mov push pop insb je jg inc mov mov push arpl ffree outsb or xor movb daa jne sbb cmpsb inc arpl shrl out daa orb mov in xor xchg cmp push pop movsb mov movsl pop sub mov in cmp mov cmp pop enter jae test sbb pop lahf std jg sub sub data16 xor inc xchg out add pop and pop adc jg (bad) jbe push pop cmp int3 push sti cltd jp inc lret jg and in jg or inc stc lret sub add dec mov sub outsl pop or jg mov or sbb repz cmpsl mov arpl fldl (bad) cmpsb mov in sub sarl insb addr16 mov jg aas (bad) lret sbb notb ret inc mov mov xor xchg iret push aas adc out inc cmp jecxz aad rorl aas fwait cld jo mov add inc cmp loopne push ja pop (bad) rolb insb push or push repnz jg cli push imul cmp std sbb fildl ljmp stc clc mov out outsl neg jg xor repnz adc push jg es ss push jne std xchg pushf add jno jmp jae mov jg jb xor cmp dec jmp out cli mov addb fiaddl ljmp pop cwtl push cmp cmp sbb jle add fwait cwtl mov mov inc push cltd imul jg and out mov (bad) xor dec inc push popf jg lret loope xchg ds (bad) sbb mov xchg cmp and int3 jp xor xchg movsb mov push push sbb jbe das jl int3 mov jae and xchg call fisttpl loop inc mov jl (bad) mov cmpsb mov (bad) ss fwait pop and pop jl jg inc mov addr16 jg out not into pop xor inc push sub xchg sti cmc cmpsl push sbb jl lahf aad stos bnd int mov jg pop loopne cld imul loope neg jle jg es mov (bad) jnp xor dec fwait push fs push rol mov mov jnp addr16 xchg aas pop add mov jecxz jg out dec int stc sub sub insb nop jle pop std xor adc or inc and mov arpl test xchg jl sbb lods je inc out popf jno push jg mov push aaa jg mov xchg (bad) xor mov pop ds push cwtl add sar outsl sub lods jg movsl pop aas cmp aam jg xor mov dec push push xchg xchg xlat add mov out push dec sti pop adc pop out jnp mov pushf jp mov sbb cmpsl stos fwait outsl jnp (bad) pusha xor jg inc adc and stos xchg aaa outsl sti sub rorl popa cmc pop jb or out pop add test hlt jg dec std daa adc adc (bad) dec movsl lock dec popf scas mov fimull mov cltd jg mov (bad) mov ljmp jge xor mov test dec aas fsubp outsb jns (bad) push inc mov jg dec cmpsb dec sub jg repz stos xor push jmp cwtl cld jae inc mov sbb leave popf mov dec in mov (bad) push sub daa in in out repz pop xor dec mov sub mov or jae fiadd sub jle into sar mov (bad) jg xor data16 pop mov insl push push fwait mov (bad) je (bad) push repnz repz inc addr16 in sbb add xor xchg jg push mov mov ljmp lret xor jg push ficom or jb inc das stc loope adc mov jge mov hlt aas cmp push ss iret lods jns mov push stos push sub jg movsb lods cmp add dec addr16 mov imull shlb xchg pop pop in jecxz jg add rcr jg inc adc fcomps dec jg clc jno xor les jbe scas add fcomps xchg pop add jg mov loopne aas adc xchg nop dec ja jg cltd cmp push je jg mov jg cmp sarl mov data16 jg adc lea or pusha sub test sub or jg dec mov popf jg mov push mov cmp mov sarl sub mov mov xchg mov nop inc insb ss inc (bad) aas mov hlt push js push jno outsl nop stos and daa sti cmpsl rcll leave add aas lret loope pop adc test cmp cld mov mov or xchg jecxz jg icebp cmp adc mov daa notl imul jmp cwtl (bad) test mov fs jae fwait add mov add add or fmul ficompl and mulb jg pop cmp add aam mov inc sarl jns das inc cmp mov outsl rclb and aas xchg cmp popf inc (bad) jns jge add fnstcw rcll mov inc loope pop out scas inc jo cmp movsl cs push inc outsl pop fs push jb inc iretw pop cmp jg jge scas es lds jmp dec int3 mov mov add pop dec adc shufps fisttpll mov xor hlt mov jg pop mov sub sbb ret push or dec call jb jl sbb jg shlb and xor cmc cli and jl fwait aaa rorb push sbb jmp roll pop in out mov lods pop cld lahf xchg jg mov call es cltd dec stos repnz repz xor jg pop cmp pop aas in xor rcll inc add jg adc xor ret adc rcrb lcall adc (bad) xor (bad) jg sub xchg sti lahf dec aas sub dec or enter test jns aas and popa cmp jne lahf (bad) testl scas jg jmp mov pop int3 jg fcoms add mov dec xchg jg jnp pusha jno,pn out mov push mov jg aaa mov mov mov xor mov push (bad) stc addr16 lahf loope or outsb mov pushf mov (bad) adc xchg jmp jg int add jg repz mov dec inc lds cwtl inc enter jg push das xchg or mov lods shr jg push sbb arpl leave sub clc fimul inc sbb (bad) xor jo mov add jecxz outsl test mov xchg push adc mov incb sub mov scas mov xchg sbb shll and inc jecxz push jo sub mov xchg ljmp xor loopne mov bound fstpl and imull push mov sub dec data16 rorb pop pushf mov inc inc xchg inc dec jg and lret shrb cmpsl fistpll and cli adc inc fneni(8087 sbb lcall test mov jmp bound jo push fs jae mov pop repnz movsb mov (bad) stos pushf jnp pop jb jg xor and jg inc add mov and fcompl sbb adc (bad) rcrl movq andl das sub and pop pminsw lods dec sti mov sbb or int3 jle mov imul xlat int push ret mov adc lahf mov inc cs sahf loop addr16 ret pop out sbb mov jl xchg ss xchg into movsb and fnsave imul aas mov sbb inc push pushf xor mov push cmpl clc pop imulb sub dec jg test sahf stc mov into jg push repnz inc adc call je aas mov pop out inc out mov mov fldl2e jle or adc int3 push dec sub gs jb xchg scas test shr aas fimull pop jg mov mov lret call mov push scas imul mov xor cltd les xchg je popf xchg loope aas outsl cmc ret in lea insl or sti push mov loopne push (bad) lcall popl ret or aad xor arpl jbe lahf in xchg jg inc sbbl lret (bad) jg and mov mov mov scas jg sub icebp (bad) aas cs mov mov jg mov clc fdiv (bad) popa lock pop outsb push pushf xchg push (bad) xlat jg psrld cmp add inc into mov jo or pop imul xchg jae fistpll mov imul mov loope movsl inc icebp inc ret adc popa xor jg sarb mov cmpsl xchg xor mov jg adc push lret sub or repz stos outsl aas jp adc orb mov mov popf jg movsb rorl ret cmp jecxz inc jnp or jg pusha sub jg push mov jg mov test stos jnp imul pop pop stos dec rorb jg jge decb and out push jmp cli xor mov movl or out sub lahf pop adc jg loope inc mov (bad) pop mov fdivrs dec loop add push stos mov scas pop jb mov jg mov fidivrl ss test adc in repz aam mov aaa cmpsb jle mov adc out cli push jg test push mov push in push xchg mov cmp (bad) push mov add test mov jg xchg hlt (bad) xor or adc push or cld jae mov bnd mov inc cmpsb ja iret (bad) fdivr and dec in dec cmpsl test mov bound lods stc and jg cli fmull mov push inc or ret add ja lods mov (bad) outsl sbb xor int stc test jg shl fsubrs inc jg ja jle (bad) pop adc pop outsb test fistpll add dec iret jnp fstpt bound xchg sub sub add imul mov popf and dec sbb sbb jg scas jmp ret bound fnstcw mov xor mov scas adcl iret (bad) in cmp andl jg push jb inc shrl cmpsl scas jp enter adc mov or fstpt mov inc dec ret jg xorl inc push leave jl jae mov sub xor push jg xchg sbb push out das jg dec into pop adc cmpsl xorps es pop jl adc ss jns jb icebp popf cpuid (bad) jge scas jg adc mov testb (bad) hlt jg push cmp bound push or mov xlat push sub push pop enter aas mov sbb mov sarb mov lods (bad) cmp xor (bad) adc mov lock ret push movsb into (bad) movsl pop push lock jg add fist fdivl sbbb inc inc mov movsl divl dec std mov (bad) jg pushf jge dec sti cli push jg cmp js mov mov mov (bad) (bad) mov jo xchg pop ficom dec popa pop (bad) push sti in lret into cli inc test ucomiss in lods in mov dec dec add mov add mov xchg cmp out push sti mov test fnstcw ret pop shrb mov stc or (bad) jl fwait add loopne outsb push cmp jg adc sbb jg (bad) dec repz add dec jne cmpsb (bad) mov insl cmc push jl jg pop and dec in push aaa jg ds xor sub mov jg cmpb mov mov mov xchg sbb (bad) int3 mov test and aaa fsts aad jg and cmpsl dec lret loope jg not jnp mov mov lret lea in lret and dec leave movq or into xor xchg cli jbe sbb fidivl dec jg pxor dec push jg neg push popf jb xor je hlt xor push dec xor into pop out sarl fsubr leave idivl pop aas mov orb inc mov shrb dec jge sub decb popa push ds hlt cmp mov jg or add jg pop (bad) mov jg lds adc sbb insb dec aad jg mov cmp jg jns mov (bad) (bad) adc pop cmp xchg call out and push push xchg sbb and jno (bad) mov xchg jg add cli punpcklbw aas js dec subl roll imul jecxz dec or xchg addr16 shrb mov addb incl shrb xor bnd push push adc repz dec jg pop add sub xor nop fbld lea jns cs dec arpl pop jae inc push xor jp jg ret ds pop popa jb dec adc fcoms and mov out pushf pop ja sbb sbb push ret or xor daa mov mov idivb fldt cmp fsubp sbb orl or test lret push (bad) fdivs roll aas dec dec mov jg scas adc jle (bad) jg sub in xchg jg fisttpl fnop cmp jg iret pop fnop xor jg and pop xchg dec jmp das std cltd add test sarl or mov xor into sbb sbb (bad) loop xchg stc adc push cmc enter (bad) jg imul ds pop xchg nop push out or or iret adc xchg cmpb jbe ljmp mov dec jg adc push xchg jno pop mov int cmp movb je jno clc repnz push pop mov hlt inc movsl sub sbb aaa add jg sub jl divl ljmp and gs push scas cmp mov lret xchg mov push ret dec cmpsl sub (bad) pop adc jg in add inc adc sarl lret pop cmp and in and mov outsl mov stc and test adc arpl in sbb xchg adcl pop (bad) dec cmp (bad) cs adc sbb or stc je ret call dec ss les pop sbb xchg imul mov and popa sub mov sub lahf repz popf shrl sti in and mov mov xlat or xor add lret in mov xor sub mov dec mov ja test cltd or enter cld push cmp mov push xchg xchg fdivl lods js out dec sbb iret dec add cwtl aas repnz sbb repz mov jg xchg push or aas jb push pop adc stos inc lds imull dec std jg shll pop icebp (bad) loop jg (bad) (bad) test sbb jg imul or dec and lods fs jg pop std xchg je adc icebp add imul add push add push loopne jle push mov popf dec inc dec dec (bad) jg lcall popa ljmp outsl or jle int notl mov mov push mov insb in jae fstpl cmpsb ljmp mov cmp mov div adc pxor xlat jg movsb mov sub adc dec adc jbe add inc jg pminub add mov pop push bound xor cmp lahf jg ret mov push les jg fadd adc out or xor fimull jb pop and mov hlt add es cs sarb dec ss repnz mov adc sahf push add (bad) pusha (bad) aas jbe ret leave addr16 cmc cmp mov ss jp jno lds pop push push and cmp jp or push sbb dec mov inc sub std lret out push out jle push jg cmp sbb mov xor jg roll mov outsl xchg mov sarb push lahf mov mov (bad) jg iret movsb xchg push push push (bad) jg out pop inc and mov jmp ret sub jg lods or dec mov (bad) loope insl push out jg xor sub cltd outsb push inc xchg lahf push (bad) fnstsw jae cmp dec mov out jg jno mov mov rolb mov push fisubl jp hlt cwtl sbb mov test shrl aas adc inc dec fimull cmp outsb inc jg pop dec test ror adc mov cmpsb push xchg xchg xchg mov pop and dec mov xor adc add jp jmp jg dec in ret mov loopne (bad) aaa cs or mov pop dec mov sbb jae jle ja hlt xor sbb enter in fimul jg pop sbb push xor jg pop lock (bad) scas or mov mov mov xor jg adc add and stos int3 and scas stos jg mov mov cld cli loope inc cmp ds inc lahf jno aas push sahf call inc cmp mov in dec dec jg push mov ret cmp pushf sbb out js push in xor adc ljmp mov or lds stc jg cli dec nop loopne xor add stos addr16 jg or aam push (bad) or jg sahf je sbb pop dec adc aas and das ficompl xchg sub rcll iret rorb dec push adc jp jg call fiadd mov mov or mov push insl adc mov fchs mov dec add xchg mov push pushl sti aaa scas xchg out jg mov ljmp push and insb jg and push xor ds jg insl in cmc fwait xchg xor movsl popl cmpl (bad) jnp data16 aam lods xor mov notl daa pop ret notb push jg add mov and jg jo out aam push mov pop adc dec inc jg or cmpsl repz pop jg xchg das inc xchg mov xor jbe loop ja mov (bad) jle call jp,pt and ss loope cmp jg rorb push lahf cmc cmp mov push or xchg jg ds jne mov outsb pop add test enter jl cmpsb mov mov xchg (bad) mov jne pop pop or jg inc push adc fwait sti cmp xchg pop sbb sub out inc adc inc movsb addr16 add mov push jg pop push fstpt jg pop and pop stc rcll mov add out sti dec (bad) repz mov lds xlat ljmp scas fdivl cmp jg pop outsl xor jg add push and mov in cmp dec lock loop sub inc dec push sub hlt jb insb mov aas xchg push pop adcl pushl out ds or add mov bnd cmp push into addr16 sbbl or sub movsl inc cmpl push ret (bad) bnd push mov cltd xchg sbb jbe push and xchg inc repnz dec sbb fwait jb mov in daa ja pushf mov aad outsl repz enter mov pop aas iret mov mov scas inc cmp jg (bad) or xchg int3 mov mov int fisubl jg inc push and jae cmpsb (bad) cmp sub lds addr16 (bad) mov cld icebp in mov mov push mov lods inc mov push jmp rcl push cmp in and dec inc xchg in jg push or add (bad) sbb jg push cmpsb (bad) fimul int (bad) idivl icebp cmp mov insb mov cmp and pop fwait pop dec jle test adc jg (bad) jno aaa jbe ljmp leave push fs jg stos push scas aaa lea inc pop cli jg add fmul jg inc leave pop arpl fcmovbe jns cmpsl pop mov sbb dec sub jg jb push lock xlat or add pop icebp ja loopne pop xchg sti push fisubrl aaa pop sub jb cmp push movsl sahf or sub out mull jns fisttpl aad aam lahf jg add mov nop sub mov jg imul mov cmpsb imul fidiv popf gs dec jg jbe fisubl out or jo mov push mov (bad) jg (bad) jl (bad) test cli xlat mov mov fnop divl push jle or dec xchg mov stc inc jg rolb aas insb je addr16 xchg jg fistp imul scas test (bad) ja insl (bad) je jecxz push popf dec lret jne mov xchg and in fidivr pop mov ret mov cld jg outsb mov data16 jmp arpl movsb mov imul lea jb mov dec fisttp hlt sbb add inc jl and xchg jg jo insl cli das lfs cmpsb sbb bound cmp dec mov xor and arpl push mov (bad) std andl (bad) and pop jl aaa mov push dec inc loopne mov cmp insl mov xchg (bad) lret mov jae or jg cmc jecxz dec cli mov jg adc (bad) shlb test js mov add jns inc (bad) mov movsl jle dec mov mov jb mov or inc out out mov push or lods mov push pop fistpll outsb jnp mov xor xchg data16 jg out cmp mov (bad) rcrl push pusha pop (bad) minps jg xchg pop sub inc cli (bad) (bad) out dec js mov sbb inc adc sbb insb inc scas dec enter shrl mov pop movsb pop pop cli pop bound pop repz lahf aad or clc jg inc sbb push (bad) jb outsl test sarl pop in sub enter xchg or mov mov stos xchg push sub dec lods jg add inc jg (bad) xchg lock fwait adc xchg icebp cmp in dec aad in cmp jge lds push int3 sbb inc cmp inc incb lahf outsl cltd adc xchg shlb jg repnz ljmp xor adc mov dec jg xchg call jg push ret test jg mov mov fisub adc loop sbb add das cmp notb inc mov mov mov sti out jg lret rcr lahf in lock jp jle jg jns pop inc xlat mov test dec inc xchg fnstsw scas out lahf push ds test scas mov jg inc mov jg,pt jge stos adc lods fs insb sbb jg es xor sbb sub pop and adc mov rclb imul nop cmp xor ljmp (bad) mov cltd pop rclb or and fidivrl push aaa lret daa in sarb movsl fcomp int3 jecxz mov mov das cmp aad cmp mov jmp push cmp jg push inc and inc lock int3 dec dec not xor or add push mov jg mov enter cmc jg add iret xchg test jg mov push adc (bad) mov dec sahf lret pop push dec add and pusha fcompl pop pop mov mov fwait push jg rcr dec insb ret jg aas adc or add sar std jg adc mov (bad) add inc or mov push dec (bad) cmp adc bound xchg imulb es ret sbb dec mov mov and sti mov xchg add jnp leave push push test (bad) repz call jg sub xorl scas ret jae jmp jg mov mov sti lret cmpsl dec mov mov add xchg jg mov mov sub xor mov jle adc test arpl cmc adc lret mov mov icebp lret dec jg aad aaa adc jmp pop jle call push scas pop xchg push movsb jge mov std lods imul jg hlt pop sbb int mov mov push in mov loopne repz jg add inc fisubrl inc jmp pop aas enter repz xor xchg rol cmp mov xor div movq repz loop inc pop jg xor (bad) (bad) jnp call xchg inc push push mov mov enter inc mov in rcrl ja andl out subb xor dec xchg aas out lea push icebp xor dec jg mov inc data16 ss xlat lods cmp fiaddl jg rolb adc pop pop sbb pop cmpsb ja mov enter in int3 dec (bad) jg jno aaa jmp push xor bnd lds stc jg fbstp mov pop xchg and lret daa jmp mov test xlat and sub pop in dec cmpb mov mov pop fcmovnb repz sub jg insl pop push xchg test jg sbb mov mov scas js xor (bad) rcl jge es int3 mov sbb and and movsb dec cmp outsl (bad) jg lahf sbb sbb jg cwtl inc sbb adc aad inc sub clc push les pop pusha or jg out inc mov mov into and scas push pop fstl pop cli mov inc aas aaa sub mov dec mov sub pop scas jg mov pop pop and (bad) int3 sti push mov jns bound (bad) fcmovbe cmovns xchg pop add sub jg (bad) mov push fadd jg adc jle cmp dec mov (bad) xchg sarl xchg dec cmp sbb in je mov lcall and loope jg js lcall lcall call inc or (bad) loopne pushf ja std dec push pop jb movsb sbb cmpsb jg pop mov sbb int3 loope jg mov jg ss pop sub jb lcall jbe adc loopne add popf icebp jnp int mov sub out (bad) jl jg xor dec adc aas fwait jg and xchg cmp lods jg repnz xor jg xor daa out popf add mov xchg jg ret in ds lahf in push and xchg sahf and jp add sbb (bad) jg jmp cld (bad) mov or push outsb sarl lea fcmovb xor adc or jg mov cltd outsl mov jg insb add push jg adc add call aas mov lock xchg and xor dec outsb imul (bad) push fs scas jg test mov jg xchg repnz daa cwtl jnp mov sbb (bad) jae iret jg stos in mov jg dec inc cmp insb add sub add loop jg insl push pop popa cltd inc jb pop push add orl adc sub imul pop ret jg fwait cmp mov mov movsb int jg in outsb push push aas dec jg xor ljmp and in mov aad popa cmp test or lea aas add femms dec mov push insl jg push mov js inc push idiv cld insl outsl lods (bad) push cmpb xchg sbb xchg popa lea jge les or inc mov das pop and inc dec jg out outsl jbe mov mov addr16 mov rcll push inc jb add push add dec and jp cmpsb jmp sti push sub pop daa test add pop sti lea jg and (bad) xlat icebp sbb mov jge es aas xor mov dec rcrl (bad) fdivrp test ret jl shl popa roll imul push out arpl sahf mov inc int push dec leave ret or mov cmp ret mov jns cli jg call rol popa cltd mov (bad) cmp mov cmp pop scas jg push xor (bad) sub cmp or aad jg xor push popa mov jg fwait sbb sbb insb enter (bad) lock outsb sub jmp cmpsb mov jecxz test mov xchg pop leave and mov mov jg,pt cmp cmp sbb mov cmp cmp cmp mov test mov out jg jl hlt in (bad) jae mov dec pop mov jo jg xchg lret jg mov pop or xchg mov jg ret jmp mov mov mov iret dec inc push dec in loop inc test pop cmc push jae dec mov pop clc int3 in jg sbb mov ds push (bad) out push js addr16 bound loope add test mov fwait dec push bnd jg inc inc xchg ret mov lods pop pop mov jg dec sbb jg clc mov ljmp mov aad int stos enter sbb loop std stos pop jecxz addr16 cwtl inc repz fildl xchg (bad) test stos dec or add mov cmp fadd scas jo pop jg adc mov fsts xchg dec into sti mov dec cmp cmpsb cmp inc pop and insb jg push aam lcall jge jp rorb mov xor adc (bad) stc mov std jg mov jg int fcmovnbe dec xor (bad) gs dec sbb xlat pop lods in sahf and cltd js jecxz mov test add sbb ljmp or dec inc repz inc jae daa (bad) and push xor jo xor lret andl mov push or push mov jb insl int3 dec rorb insb sbb repz lds imul or jmp xor mov sbb jg mov loope mov outsl dec cmp in cmp xchg bnd lock jns adc mov aaa (bad) repz mov hlt (bad) outsb mov iret sbb les icebp lret jg mov std mov push pop jae sahf push and jne (bad) mov push ja fist xor fwait jg mov movzbl cltd jg mov clc test xchg xor mov jg xor jmp aas idiv cltd mov sub jl jg mov mov xor add jg mov ret aas cmpsl bnd lret (bad) dec dec pop inc jg fwait popa pusha xor mov fbld mov mov out cmpl push es dec iret pushf (bad) or out xchg dec mov popf mov push mov mov dec jbe dec (bad) jp shr ret sub add push aas xlat enter dec in inc (bad) stc sub xlat hlt add loopne mov jg das test or jg out mov xchg js punpckldq or lods add pusha push mov xchg movl aad arpl push mov add mov test mov je push lea (bad) daa inc mov xor jg dec push mov push add xor xchg pop add dec lock es enter call fwait gs mov jmp jg outsb sbb in cwtl sub adc (bad) jo mov push imul jg jge or or fldenv push jg xchg int3 out xchg popa pop and stc (bad) mov sub cld xor jno jg into and mov imulb sub imul dec sbb add ds push cmpsb cltd jg scas incb jg xor fist out mov imul mov jns aas pop orl jg (bad) push insl cltd bound cmpl lcall (bad) mov push jge mov push cmp jg or or push xchg jne ret (bad) jno test loop into inc stos jg sub mov je mov jl sbb sti test push push adc and mov sub (bad) mov mov xchg sub or inc xchg out push push mov cmp mov pop fsubrl out jg stos push out (bad) in aas stos and lcall cmp jg mov adc jg xchg ret sti jo jg ds mov int3 cmpsb jg sub jnp mov ds cmp out bswap idivl dec mov jg fimull int3 imul enter cmp adc xchg imul aaa decb mov inc inc mov jbe loope sbb pop fmull test xchg cli test mov repnz imul dec out out adc aas mov cld cmp dec daa pop sbb jg sub das lods jg pusha cs insb out dec mov xor dec dec shlb xchg cmp iret cmp addr16 test xor shrb inc dec mov mov xchg lahf pop mov aas push inc ja mov repnz fnstenv (bad) push pop lret fcoml loope ja out inc addr16 lahf loope (bad) lock out dec test cmp mov jg imul (bad) jg inc insb add test mov pop addr16 cmp jo jg inc xor jg pop jmp adc fldlg2 les enter pop xor pop dec movsb jg adc ret xor push cmp jg cli xchg jge jecxz pop jg scas add xchg mov shlb out jg mov inc mov mov fldl mov pop inc xchg mov repnz mov fisubr lods dec adc movsb das push mov jae or adc xchg fsts fdivrl jecxz adc cwtl imul sbb out adc and mov cli inc (bad) lea push inc push xor aas les xchg or jg inc inc mov jg in inc add (bad) sarl iret (bad) mov jg pop loop flds mov lods pop inc xor and push pop sub or ljmp jns in mov repnz cmpsl adc outsb or lods cli dec jp xchg dec inc stos and outsl dec jg test or and push into das imul leave jg or in int mov outsl sbb jmp aam jg xchg repz and jmp mov daa jp push scas fs ss xchg and inc dec mov mov jp cli adc arpl mov jg frstor cmp jg adc gs pop fdivrl or mov sub popf jg cmp lret mov sahf mov out sbb imul das mov xor in jg repnz cltd inc cmc sbb jg pop cs scas loope pop cld loop mov test dec in xor push jg pusha cwtl adc js inc jg xchg pop sub inc sbb (bad) pop je xor je mov pop jg jbe imul jno mov ret jnp mov testl idivl fs cmc push ficom (bad) sti pushf inc dec rol ljmp (bad) xor xor lea iret lea mov dec icebp push or or jecxz dec out mov (bad) scas mov jle aam xlat (bad) mov pop mov cli jg cmp dec rclb push loopne push aam and cmpsb lock pop mov xchg and add and pop and or insl pop lods daa dec mov inc jle subl xor or pop or pop xor jg outsb shrl inc les pusha (bad) fisubr cltd or mov ret (bad) icebp cmc popf js stos cltd movsb rcl dec shrb arpl leave mov sahf dec fs jae pop xlat inc jg int3 mov int into jl push lods lods popf loop inc cmp jg dec mov inc xor push adc in pop (bad) jg jl xchg inc add xchg leave pop movsl xchg jg test aad inc insl adc mov mov push sbb lret notl mov xor sub mov test in add push imul addr16 jg cmpsb sub inc movq insl cmpsl (bad) (bad) pop lahf insb inc push sub jb shlb lods jbe jg push and das mov xlat repnz ja dec push fistpll and lret idivl xor adc fldenv pop arpl push dec inc es fcoml sbb loope cmp push mov mov movsl sbb imul idivb jg sti out incb daa fist lret comiss pop insb out (bad) jg add std mov or clc ficom jg lods sub jg ret mov loope ret cmpsb xchg jg mov mov sbb daa inc or inc inc outsb lods test push and js add fidivrl pop fldt jg inc shl push cmp (bad) fcoml mov xorl lcall std arpl les inc cmp aaa fisubr jg cli xor inc jg mov push push jl jg adc cmpl sub pop jg jnp dec (bad) data16 jg add test stos les jae pop mov adc lret xor aas cwtl (bad) mov or ja jbe jg iret mov cltd jg lahf ds sbb (bad) ret fwait xor fmuls ja or cmp and ret repnz das sti scas enter stos lret xor outsl ret ja sti outsb dec inc cmp insb fstps pop jbe push dec jae nop cmp fwait inc dec or shll xchg js push jbe cltd (bad) jg ds push cmp aas dec outsl cwtl pop cmpsl in or jg add mov (bad) push xor jae shl xor std jnp jl je dec dec jg dec in cs pop jg pop mov dec xor adc mov leave inc insb bound and pop ret push fucomi cmp in outsb xor adc mov sarb repz into std mov je or addr16 mov sti and xor (bad) movsl (bad) aad imul dec addr16 daa mov stos inc out xchg mov jg sub nop enter daa push loop loopne jg fnop add stos adc inc pop divl pop arpl add call or xor je push xchg jg lods mov inc ljmp add aam insl insb ds push daa cltd lret pop (bad) push sbb jns shrb movsl lods xchg je push inc outsb movsb jg mov dec pop (bad) lret (bad) xor jb inc ljmp mov xlat aaa popf jnp dec push pop adc mov or fwait add ds inc cmp sbb push mov mov call mov std (bad) int3 test pop xor jg push iret mov push mov push or xorl jbe cwtl prefetch push or sub and xchg cmpsl pop jg (bad) testl cmp sarb mov pusha lods sbb xor sub cmp push cltd movsl mov imul sbb pop jle (bad) cmp ret pop mov sbb sub push cmc jno push loop inc jbe,pn fadds adc jg sbb les data16 inc jo jp sub test outsl sub push pop aas scas adc jae test pop add loope imull popf and mov (bad) nop js and (bad) mov ds aas push lds call pslld dec add jmp movsl inc call out loope mov shll fistp jg pop shlb cmpsl clc push mov outsl fsubrl mov int3 mov lcall stc test pop lds sbb js scas out jb jg adc and aad pusha sub sahf and dec adc insb (bad) push jge (bad) dec jg lock pushl cmpsl jg xchg jle sub mov lock add std jg (bad) lds addr16 jg xor xor jg sar shrb jnp scas push into pop loop ja cmp cs lret (bad) jecxz jbe cld fcmovnu mov mov jnp loope cmp cmp push push cmp imul xchg mov pop jmp xchg fsubrl loope push jg pushf sub (bad) loopne lret arpl (bad) idivb scas push inc sbb jg repnz fildl jns jg pop add mov mov scas les jg pop mov mov out jbe (bad) hlt (bad) jg arpl (bad) andl jle cwtl jp jno jg pop (bad) cmp jg ret pop lcall cmp fldenv jno pop push or push cmpsb or rol cmp adc push out loope jg sbb add jg leave aad mov (bad) inc push pop mov insb sub jae xorl sbb lahf jg xchg loopne mov imul xchg jnp adc dec cmp or xlat xor aaa inc inc jge imul ss or and pop xor (bad) xor dec and push fstps or imull mov outsb jl outsl inc cmp cmp inc out mov ret pop in mov adc sbb mov lods push jg sub out jg jnp mov jg fsubs mov jg sub adc jg add ret imul mov decb (bad) mov and outsl mov pop addl jg jnp xchg jge mov xchg or mov jg pop xor outsb or rclb out fcmovnb add jg push dec dec ret and lea inc push mov lock cltd cmp test jg ljmp loopne jg sarl popa test jg in pop mov cmpl jecxz inc test icebp cmp xchg sbb push xor or dec in jo push mov ud1 cli xchg mov stos add inc push jg fbstp lret clc cmp dec dec (bad) sbb xor mov cltd (bad) decl jmp xchg insl aam out scas sahf aas add push dec lret int jg jno or fs or mov adc or dec loop jg mov xor jb lcall jg (bad) daa cmp adc jg fwait les mov dec jnp mov ljmp xlat lahf add dec test inc fnstsw popa sbb aaa push jg sbb xor adc ja call aas mov jmp add arpl adc repnz pop orl dec inc pop jg aas clc and into inc jg (bad) jns iret mov pushf mov xchg test dec js cmp cmp bound adc outsb pop lds push push adc inc inc das add jg sub insb xor jl pop pop lret sub mov jg adc inc xchg jg xlat cmp call std dec pop repz jg test mov aad mov cmc fbld iret jp cmp movsb (bad) sub inc or jnp xlat imulb push jg add inc mov call and pop lods fwait pusha shlb jns int3 sub jbe call inc mov push mov jg push repz xchg stos gs sahf icebp mov jg dec cs jg imul out mov popf arpl lret add xlat jg mov xchg dec jg gs mov out nopl test jae,pt (bad) aaa scas dec mov mov jg int js xor (bad) cmc loopne push (bad) jge mov ja mov popf lock out jae pop mov jg icebp pop mov mov das mov xor jg xor inc cmp push stos je mov jg rcrb (bad) jg rcrb fisttp dec out je rcr les jg push ss adc mov loope jo dec fisttpl icebp ja sarl out mov inc nop/reserved outsb inc scas iret out jne jg data16 xchg arpl adc movsl mov xchg mov call mov sbb fwait lods or test mov scas inc into arpl jg sbb aam fwait adc mov jo dec sbb jge inc add leave xchg mov and lret sub rclb aaa dec in pop sub in lahf jmp scas vxorps ret jg es xor jg scas mov push and jg add sahf jno ret fwait xor mov rclb pushf jg inc aaa pop bound mov jle pop adc popa adc jg mov add or jae xchg sub or pushf pop inc pushf aas xchg cli insl ds dec sbb push jge mov mov les ja mov push adc jg hlt outsb inc inc mov and sub outsl scas out in push out (bad) (bad) mov sbb rcrl jl daa adc test adc in movsl cs lock cli pop popa dec push (bad) adc push jg negl push ljmp ds jg cs add das dec mov ds stos call movsb (bad) dec ret mov inc jg mov test jg cmp pop mov inc aas dec sbb js jns fs fsts xchg pop cmp pop call aam jb mov aas mov (bad) jg lock andb out adc xchg inc loope inc add xchg or divl (bad) pop repz add push cs aam pop jg dec cmp std fcompl jg or movsb fadds jmp xchg mov jg shrb dec (bad) jg sti pop cmpsl xchg mov pop insl push push jb xor not jg data16 ficoml jg lahf outsb ja dec mov pop lret sarb pop icebp lahf movsb pusha and inc aas cwtl jg clc sbb jg mov inc into jg out test jg (bad) mov mov xchg orb jg xchg repnz cmp sbb ret loope push fidiv xorl adc push push lea ds rcll xor or add pushf push and inc (bad) je jg out out aaa jne cmc jg push gs mov inc pop insl mov shl cmp data16 inc jg push jge push cmp mulb adc pop fbld push xchg mov addr16 mov cmp or or int3 cmpsl rcrb mov jbe mov fldcw arpl outsl jg dec or mov mov cmp sub popf jo mov jns inc mov inc mov add mov jne mov jno (bad) mov enter orb iret lcall mov clc pop pop jg cmp jle jg pop movsl push addr16 mov je pushl mov push pop repz push jnp mov in cmp pusha inc stc push iret push jg cwtl flds ja jmp ret jmp les and out xor xchg sbb adc loop and mov jg call fcmovne js jmp (bad) dec in sti repnz push and jg int3 pop xchg icebp dec push das jg sub fidivrl scas shrl je sahf mov sbb scas jg iret (bad) idiv stos imul jg loope mov mov je nop (bad) inc in leave jg add out sub std pop mov inc icebp mov imul into ss cmpsl inc inc loope add push popa insb or jg jge mov jg xor or call mov faddl rcrb mov je xor aad aas imul addr16 mov test pop sub movsl int test scas ret xor daa pop (bad) xor rclb dec jg in repz jg pop jmp lret jg inc push fwait jo xchg jg clc jbe orl lcall pop fmuls mov rorb push jae cmpsb mov cmp aad outsl popf sarl sbb test scas sbb bound lds dec push cmc jmp cmp inc adc mov pop fist add jg int3 scas rcr cmp mov jle pop repz sbb mov sbb lret jbe stos or cltd jl fs lcall lods add movsb les mov jno popf mov xor add nop scas and outsl jnp,pt aam out push adc mov or pop add xor push mov dec nop pusha push jae xlat imull ficomp sti ds scas dec xor shll mov sbb les jg and insl and pop psubusw xor fadd out lret (bad) xor cs cmp int3 jg in inc repnz xchg fdivrs (bad) push or cmp in iret cmpsb jg sbb outsl jecxz cmc mov (bad) idivl cli xchg push je pop outsl mov or dec scas mov out push xor js dec sbb in xchg push sti inc pop mov sbb ret add lds dec dec clc lods jg or adc test jne dec pop mov aas xchg insl jg fisttp sarl dec sub shrb iret movsb loopne (bad) xlat out jge dec xor ss push add push mov aaa add movsl out lods dec popf inc daa jg or fcoms and shll pop jg mov xchg sub dec push pop aam xchg inc ret adc outsl cmp call jbe jg mov sahf xor (bad) repnz scas cmpsb sbb cmpsl mov jns ret pop js leave lahf mov movq mov aas cwtl fnsave lcall pushf cmp repnz jge stos push inc xchg daa cmp fist dec inc scas jg cwtl out bound stos mov inc sub inc bnd pop fldenv jg xor in xchg inc fnstsw xor inc cltd push rcrl pop fmuls data16 negl cltd jg (bad) repz mov jg aam cmp jmp jg cmp icebp cmc jge pop mov push sbb ret and mov inc cld sbb inc inc jg out rcrl (bad) mov push mov imul pop jge push popa aad hlt add fimull (bad) fs jg mov pop jg jns outsb xchg into dec idivl xlat pusha xor loopne out jl lock dec mov or xor sti (bad) inc jbe jo xor movsl js popa or in xlat fimul mov mov mov xor fcomps fstps adc dec or movsl setno lea push insl lret pop ret in inc pusha std cmp fidivr movb arpl pop lea jg sub fstpt mov jge cs xchg cmp stos cmp pop mov clc pop jmp xchg mov xorl mov sidtl mov outsl lock ja incb ret sbb stc fimul push incb pop or jg adc add (bad) popa and jbe adc aam inc jg push outsl and lahf out sbb fildl lret xor (bad) jg stos stc mov mov pop mov jg into cmp js pusha xchg jg test push mov mov jg pop mov (bad) movsl mov or js cli (bad) mov fildl stos lods int mov jp pushf cmp xor popl push mov enter dec push inc mov je sub stos imul jg xchg jecxz std inc xchg jg inc push push sarl rol or out movsb jg cmpl pop outsb outsl loopne std sti jg hlt mov jp xchg stos aaa out add aam jns jmp sub jge lds push jg pusha push int aaa sbb xor dec mov out sub cmp jne mov out fisubl or jle ret xchg (bad) jg dec addb cmpsl jg data16 ljmp clc sahf mov or outsb jae add cmp inc popf adc pop cmpb cmp jp lahf sti sub sbb sbb dec inc jle cmp in pop mov je add jae push cmpl cld or ficoml icebp sti sub sahf jg shrb cmp nop addr16 xchg cmp jg adcl or cs jp mov rclb jbe sbb (bad) ss lock jo or je addr16 push jg jbe ss mov adc push sahf adc (bad) ss movsl mov push push cmp jg xchg dec (bad) push imul inc pop adc jg ss sub rolb xchg inc adc push jg xchg push push inc pop bnd and sbb hlt adc and jg push (bad) cmc stc cmp jns cmp cmpl (bad) inc jo push jg pop or outsb jo xor or mov movsb fsubrl and mov jg dec (bad) mov inc jg cwtl cltd jge add mov jbe jbe mov out mov lcall and sub bound and push push mov sub push clc pop and jns jg loop mov mov lret dec dec sahf jmp push add dec adc loopne sti leave jg pushf mov int3 pop mov cmp je in add popa or sub int jl arpl push lea jae mov mov fndisi(8087 dec push repz pop insl mov mov addl imull lock or adc (bad) (bad) mov push inc insl enter lods negb mov mov push lahf loope push jg bound sbb lods pop leave jg inc inc or and jg sahf movsb fiadd sbb xchg daa pop jno dec add jae repz and xchg outsl imul aas xor lock lret out in ds ds or mov ss dec pop outsl xchg cmp loope fnstsw into xlat in test out xorb jg xchg jo mov sbb xchg inc stos shr and aad mov push lret or adcl cli lock in subb push dec jg inc je cld jbe xor and mov xchg adc imul in push inc adc jg scas lods dec lock push jg mov scas jns out jg fsts aad es sbb pop jb adc ds or pop or into xor pop adc ret push pop inc mov aas adc dec sub imul data16 pop mov fdivrs pop (bad) add ds cli fsubrl mov (bad) arpl cmp jg push xchg leave mov sub sti adc ret fwait jg cmp or mov mov enter sub clc (bad) fisubrl mov ja xchg sbb flds loopne and rol jg xor xchg aad xchg cmp cli cmpl fnop sub arpl ds adc andl jg inc xlat sub ret ret xor pop or mov jg fisubl out xchg mov and shrl stos cltd punpckhwd lock jne jg out repz push sbb jmp shlb nop mov xchg jg lahf jge inc stc popa nop ds jo pusha mov aaa jg movsl inc mov push ljmp jns mov scas int pop jg gs inc adc adc outsb mov sbb push inc in daa mov sub stos cmp xchg adc jg mov mov mov sub out sahf mov imul jo mov mov fisubrl jg pop mov xchg xchg mov and xchg jns je scas sbb inc mov jg adc sti or imul sub mov jg sub pop outsb cli daa jg shlb mov sub aaa dec nop sahf adc icebp jg pushl cmpsb test mov and mov fstpt adc push rolb jl inc push outsl push test pop inc inc fwait jg loopne pop dec xchg cmpsb jg and dec or cmp adc gs mov push insl sub jg jno lret leave outsl fnstsw adc ret jg adc push stc subb out addr16 test mov lods in je pop jg notb dec (bad) or sbb lcall push (bad) sbb dec add mov fs iret mov xor (bad) and pop pop ds std aas das jb dec push enter ss addb pop sbb ja cmp lods lods and mov inc sbb and sti mov mov mov in adc jg clc jb inc pop fsubl jg in jno call (bad) sub mov outsl mov cmp pop test jg sbb adc push jg fadds lds pop dec mov add popf aam (bad) push daa adc xchg (bad) xchg scas (bad) insl jmp xor aad pop inc lds jg adc jb push cmpsl sarb sbb inc or sbb mov pop repz sub push and mov fdivl mov pop insb cmpsl fcomps pop pop (bad) ret xchg (bad) push xchg in ret stos lcall fwait add addr16 out dec push lret push add xchg mov rclb jb fimull mov mov or jg bound sahf pop jge mov adc jle stos mov jg lea mov push adc jno int mov push sbb jg popa fistpll loope ret addr16 mov test ds inc pop pop fldenv lock add cli jg das test (bad) mov (bad) scas lods mov add jno pop or and (bad) aas jg das push (bad) mov (bad) pop ffreep inc add and mov clc sbb or cmp xlat sub and in sbb mov mov mov pop fsubs xorl jns pop jnp sahf data16 cmp fldenv jg xor movsb fidiv xchg pop xor fucomip mov dec add inc or outsb jo push aas push rorl (bad) ja rorl and inc fistpl ret (bad) jle and pop jg aad inc push push dec sub aas fisubl cmp inc movsb insl mov dec sbb jg stc pop sub jnp push inc out jg pop loope xor daa and lahf mov int jg xorb ret xchg and cmp popa jg callw push push jg fcomps push xchg cli hlt xor pop aas push sub in jg and pop add je cmpsl and (bad) cwtl aam sti mov mov dec mov adc (bad) mov adc imul bound sub insl sbb and dec jg lahf pop rcll movups sbbb add jg cltd mov sbb stos fidivrl adc jp push iret push mov daa or (bad) mov push pop add addr16 addr16 mov jno,pn repnz mov je loop lods testb push (bad) mov cltd cld test fsubrl lret mov push fiaddl pop jg pop test mov jecxz adc jg std jno adc push mov fsub adc pop das jns mov sahf jg (bad) pop cltd jg (bad) xor mov sbb (bad) mov xchg sbb ja push xlat js fistpll jo bndldx fnstsw out stc (bad) cli sub icebp (bad) and repz sti aas push int add mov cwtl pusha or mov pop jge iret mov xchg xor fwait lock push jb mov out pop push or mov push loope mov leave mov and and xor and fistp mov sbb inc sbb sbb xchg aas jns stos dec sub inc inc (bad) xchg jg (bad) adc jmp outsl jg xchg clc inc je inc fstpt paddw jg xchg (bad) pusha mov xor mov mov cmp or arpl rorl push popa imul cmp adc jg dec imulb mov jmp mov int3 ja lods lds loopne jg mov gs les mov inc dec dec xchg or inc scas jg gs mov or jg loop lock or mov xchg or je fstl and xorb xchg lcall mov gs mov lock sahf xor inc leave inc add xchg mov xor loope mov aam popa repnz cli add dec pop int loop add aad ficoml inc or aaa lcall xchg clc xor jg lods sbb ror mov aad jae data16 push mov movsb push push mov rorb ret sbb loop add mov inc (bad) mov pop push pop data16 idivb ret sub jg adc out inc add jg or mov jg ret lock leave imul insb mov stos cltd (bad) out sahf mov xor lods movsl int3 jg cmc clc decl (bad) xor arpl jg mov mov mov fwait inc add lret das in arpl and and jo (bad) inc add mov push push mov mov daa pop (bad) xchg lods int imul inc ja fldl (bad) xor xor aaa pop jno jg sbb jp mov push insl pop mov inc pop or jg cmp xchg inc xchg ret stc jg xchg dec icebp sub and popa jg,pn fistl or jg (bad) jne lods leave or jg dec int3 and in push fbld int sub dec pop rcr aas sbb int3 mov or sti in lods fdiv push rcrl out jg outsl pop loop adc and test roll and out push push shrb jg or pop inc movb mov nop push movsb xor je pusha push cmp pop arpl scas sbb mov add inc sarb cmp add decl (bad) xor or nop jb lds aas xor sub (bad) mov mov out ficom mov jae mov pop or push outsl dec scas push hlt xor insb push mov scas jae xchg imul sbb in aas mov push mov pop push out test dec jbe jg dec pop rorb ljmp aam jge ficompl movsb sbb push adc test xor jg (bad) mov mov insb fbld jg mov mov mov inc clc dec jge gs int3 fwait mov adc jg (bad) and push (bad) mov repz cmpb xchg outsl sub fcoml test lcall xchg pop in pop jl rcrb jg sub cmpsl mov add movl les push dec xchg cmc jg mov or xlat or cmp aas mov adc dec sbb dec xchg sahf pop insb es jg scas mov add inc into or loope inc arpl and xchg inc jg push mov loop add out mov in aas (bad) jg add das inc jg fistpll xchg lahf popa inc mov repnz mov addr16 rolb jl imulb sbb jbe into data16 jne mov cltd pop inc inc sbb dec xchg clc jg imul jo js loop pop adc jg xlat mov repz fdivrs xchg add pop in jg mov fbstp cmp (bad) mov jg push rcrl movsl xor dec dec insl jg dec sar mov (bad) ret shlb repnz mov jg lret lds push test scas aad jg lods mov inc adc jp and adc insl jg cld cmp lea sahf sub lahf mov sbb (bad) push add mov xchg imul and in ret mov ret dec cmpsl xor xchg xchg dec sti mov push andl aaa mov push push aam test loopne pop push jl dec aas xor jne imul jg push cmp inc mov jg inc push daa inc inc inc jg pop push std out jg rolb jp cwtl jg inc int mov mov mov pop and popa arpl jg dec dec xchg repnz inc mov push add sbb inc pop jg jb inc mov pop mov aas mov lods sbb inc stos (bad) mov mov xchg push cld cmc pop mov mov scas mov addr16 add cwtl scas imul sahf jno push xor adc cmc loopne aas call adc inc push in push jmp jg ss fadd scas mov lcall cmpb ja lret add cmp mov jg jl loope jmp popa push pushf pop les mulb aas xor dec int3 hlt dec out add dec jge pusha idivl inc cli bound add mov sub cmpb sbb jne sub inc add mov ficompl cltd loope jg aad jnp adc in sub shll xor jg mov xchg push aas mov adc inc jmp sbb mov mov out (bad) jo dec jg cmp fldenv inc rcrb or cltd data16 test and jne sub jbe add mov inc repnz add arpl (bad) lock mov xchg lods or push or loopne jg iret sar and je lea push adc or jmp mov push push rcrl mov outsb je jbe aas cmp int dec sbb arpl push mov add movsl fisub lds cmp sbb (bad) or pop jbe mov imul add fdiv jg in inc ljmp jp mov sbb and jo pop aas xchg mov push add dec jnp jg mov shrb (bad) push jg fnstsw push inc jmp jg test (bad) hlt sbb scas pop cmp pop and (bad) xchg pop add lock pop out imul adc jg xchg imul sub jg mov fbld or jg jne mov add sub xor mov sub mov inc out dec mov fcoms bound jg outsl pop scas xchg leave jp xor fistp xlat popf lahf aam jecxz xchg icebp push pushf adc pop and jg fwait sti sarb or jg mov lock cmp (bad) push inc xchg push xor mov mov fsts mov xchg imul and imul fdiv jg push insb jle sbb sbb jae dec pop inc pusha mov add daa popa iret adc inc add inc xor jg fistp mov lahf arpl jb push mov jge ds jl lods adc gs push inc popf dec repnz add jmp sub mov xor mov int3 cmp jg jae outsl push inc sti insb jg mov loope loop nop add push rorb and sbb in (bad) push aas dec in int adc xor jg or jbe and push repnz mov outsl ret rcrb jg cmp inc or jl or xor (bad) jg int jp shlb mov push js jge,pn mov cmc addr16 add jg adcl jg cmp inc mov imull xchg adc pop push add mov pop jmp fs pop pop cmc xchg popa jg xor inc jg xchg mov jbe out (bad) cmc add sahf enter dec imul mov loope in sbb mov stc aaa jbe fisttpll iret sti adc pop adc sahf inc jae jg je adc mov enter cwtl stos pop jg and xchg jle push jg push sbb pop jg mov bound add dec xor jg cli cmpsb out movsl mov adc push sub call iret jge data16 lods aas inc mov adc dec mov ds xor dec push push jle xlat shl pop repnz icebp jp mov dec mov (bad) cmc push loopne dec loope cmp jl pop push xchg push lock ljmp test cmp iret jg ret rorl jg and mov jg (bad) dec sub push (bad) or cmp cld mov sti repz dec inc xor jg in add fs (bad) jg sub aad cmpsl xlat sarb imul add mov pop imulb push stos pslld pop jb pop xor pop add js movb dec call out cmp inc jg mov jle and int je push scas adc fwait ret jg pxor aad xor repnz jmp xchg mov adc mov inc dec nop aas and insl mov sbb arpl inc mov es jle pop mov enter test xor lret sub mov pop sahf into outsl cmc nop adc xor xor lea jg lahf and mov xlat jg jb dec adc in inc xchg fnsave adc push sbb test jbe jg dec xchg mov test push and mov ret out in aad inc xchg fmull fmul cmp lock jge clc popa in cld pop and pop xchg dec jg stos gs subl mov adc lock inc push adc stos mov inc jg and dec mov jg mov aaa jbe,pt mov imul lock das mov aad add dec pop ficompl fistl and popf push call jp push or inc cwtl shrl xchg outsl xchg jg push rcll aas or fimul pop jp mov aas pop out int3 je mov insl push mov add and mov adc cmc std pushf fisubr xchg pop rorl negl imull aaa or push pop mov push or mov ret dec inc insb les sub and insl loop hlt dec aam bound jg iret cld (bad) or (bad) repnz call test and out mov cmpsl daa jg hlt xor inc scas (bad) xor shl mov sbb jp push jle jno xlat add add in cmpsl sti or sub mov jg icebp mov push (bad) jg mov add jg sbb jns jg fwait xor cmp pop aas xchg addr16 adc ja dec xchg or jecxz push das iret cmc sbb orb clc mov push dec lock xchg test pop jge and mov push clc or jg pop push je jg lds and repnz sti insb es dec test adc pushf aas fs push add dec mov jg ds fildll xlat jg cwtl pop in mov mov dec sbb jg into sti lock mov loop jns das cltd loope jg xchg pop stos mov cmp lock xchg ret ficom jns insl dec or jecxz (bad) jno cs leave jo and mov mov lcall mov int3 insl xchg xor mov sub dec push jg cli push adc jg inc outsl mov jg (bad) movsb mov inc aam and jg scas push stc adc adc push cmp aam cwtl loop loopne jg ds addr16 cmp mov mov sbb cmp jg sub or in adc push js sub or lods pop sbb clc pop insb cmc mov pop sahf sbb jp jg sub movsb int3 fidivrl (bad) std jmp push dec jg pushf inc sbb (bad) or jg push sbb push jg adc mov jg lock mov jle stos mov cld dec push add leave loop lea rclb fistpl das pop adc std or mov dec jg add mov jg sti dec sbb jg cmc cwtl fisttp sub mov jg sti jne nop in xor jg scas (bad) out push outsb or aas pusha inc add insl xlat inc cmpsb jg push test cmp push fdivrl inc ss xchg jg dec popf xchg or inc cmp mov and sbb push ret std sahf decb test adc repnz out mov icebp jns lods addr16 movl mov dec rcl xchg (bad) pop push push mov add jne fisttp (bad) ljmp aas cmp xor sub jg loop dec rorb insl inc xchg add out cld jg imul cmpl push fsubs xor pop jg adc xor in mov and sbb dec orb cmp jl xlat stc fnstcw jne js sti insb xchg ss addr16 inc xor inc mov inc imul into in les adc imul adc pop test jg mov inc jl int3 fstpl jg or iret fildl push xor jns cmp jo cmp int3 popf call jg ret inc sub or dec sbb fstpl daa cltd push cli lret mov lahf add inc mov repnz jg fildl lods jae mov aas mov fmull imul subl in jo jns fs mov dec pop pop inc mov movsl jb xchg (bad) xlat adc cmp adc out and jmp outsl inc dec jg or dec out outsb push pop jg testl dec jg (bad) aaa enter add dec lods sub fwait mov pop mov adc or pop (bad) dec outsl (bad) jg mov sub jg (bad) jmp jne mov popf sbb add mov cmp fisub outsl in loope xor addl push cmp fdivrl jg and inc lcall into push (bad) movsb sub mov cmpsl mov cmc and lea xchg xchg or iret add mov cmc loope jg cmpsl std pop dec leave lods xchg mov dec sbb aas dec fcoms pop push dec arpl lcall add cmc mov pop or cmpsl jmp bound nop lret jl inc inc cmc (bad) jo jg in mov sti mov jl stos daa sarl and cs or jg dec pop sarb dec pop jg test lret mov jmp xchg jg (bad) and (bad) mov dec sbb sub add pop stos dec (bad) out jno xchg push pop push in mov and mov aas movsl mov and iret popa dec jl aas sub sbb (bad) jg mov xor inc enter xchg jg mov sub and jge (bad) sbb and rcrl sbb mov xchg movl push cmpsw aas xchg sbb xchg xchg ja (bad) ret cmp push out mov clc cmp jg jo pusha test sub pop inc out push pop (bad) sub mov fs test out jo test inc ja xor mov adc inc loope movsb ret xor xchg mov outsl adc jg xor out jo fst mov ret xchg lds call (bad) pop jg push adc pop (bad) in or stc mov mov ret das sysret cmp and outsl (bad) lock xchg mov push scas adc and inc pop xchg jo sub inc ja cmp add xor and es mov pop pop fdivr pop jg dec xchg and inc inc jg aaa ror mov jg out test lods inc cld jg nop add mov xchg pushf sbb test mov or mov sbb fidivl xchg jg ljmp jg and mov sbb sbb inc je fnstcw inc sbb popf and cld jg (bad) lods daa in mov mov or push inc setp jnp andl mov addr16 sbb mov dec dec mov cmc jg mov mov out add xor leave sbb pusha push std loop jg das mov fildll (bad) in jns loop xor inc incb jg jge pop jnp or jg mov sbb ret add mov push pop push fidiv or push inc sub stos pop loop jg stc and test clc jg xchg sub fistp aad inc loopne loop and push rcrl shl sbb xchg jne and jbe cmp lret outsl popf movsl pop movq in sbb mov mov imul cs out jg std hlt mov jg jno dec scas xor pop (bad) mov jg cltd in inc xor je jg xchg add scas xorb mov fistpll test inc sub bound aas pop xor xchg arpl sti jg adc cmp aas jae (bad) push and xor out mov jg jecxz cld inc xor sub dec and mov add xchg xchg movq push imul jg jno nop into xchg mov jg add mov inc int enter cmp lahf imul jle mov fnstcw mov call jg adc mov jg and (bad) fildll sarb daa lret jae jg adc dec cmp es sbb iret jg pop and or xlat jg and or sti pop fucomip rorl adc jg xchg fisubr (bad) nop jg jnp add popa (bad) jg inc xor xchg jg fist (bad) mov mov sub cmpsb mov add addr16 fwait push jns sti ficoml mov aad push icebp jecxz stos mov scas add es aaa (bad) mov mull pop jecxz cmpsb jo test (bad) in and xchg mov stc lahf jg jmp shr xlat mov jg ret sub mov in dec cmc push jg (bad) stos add aas push and shll mov in jg das jne mov push mov out or fistl mov sub aas adc cmp cwtl es lods sub jg push ljmp pop ss push shlb inc add cmp or cwtl bound jp mov lea xchg jae jg clc cmp jg bound add xor jg mov cmp (bad) adc mov repz mov sbb leave pop jo push and loope or lods fs sahf jg push fadd xor sub cmpsb push insl jmp test cmovbe jg jl push lods lahf bound inc xchg sub fwait add jne in xchg call lret iret mov movsl fldt out rol xor js lock adc sbb dec leave setno mov sahf adc pop lods scas mov addr16 inc repz sbb mov jg cli jns popa dec outsl aad (bad) (bad) cs fstl or adc jae repz mov (bad) or and (bad) dec mov pop lret aaa mov adc sahf jns sub jg pop (bad) push outsb fucomip jb mov mulb dec mov xor sti push add pop and pop cmp (bad) loopne sarb rorl stc jg lods or sbb adc es cmp mov and sbb mov fisttpl into aaa sub dec ds mov dec dec mov mov call sub adc pop push fstps jge sahf mov lret inc jecxz fbstp flds lods cmp nop pop mov in jg mov mov (bad) pop dec ficoml and fwait cli push in jg leave aas mov jg pop jb jns (bad) roll dec repz jg inc jp js test ret dec pushl push push shl jg in inc jne dec jmp jo arpl fs mov dec inc dec ds inc sub pop pop push mov sbb fnstenv jg test push mov lahf test (bad) loopne mov incl cmp mov movsl xor jbe xlat mov jg lea adc push xor jg ret into jmp insb aad cmp push inc cmpsl jg fcomps jg lret (bad) insl pop in and xor jg inc dec fdivs jg scas inc xlat pop sahf test push int xchg arpl in popf jne cmp jge mov inc jns aas sub lods dec or adc pusha mov sub inc scas loop dec int (bad) mov (bad) adc icebp into (bad) popf lods jg outsb dec xor push mov jg xor ss lods jecxz sahf cmp fcmovnbe sti stos test adc cld cltd jg push test insl dec mov pop push jg adc xorl rorl push lret popf cmp arpl aas mov in mov es jg stc cmp mov sbb xchg insl scas xor cli xchg xchg cmpsb and fcoms fnstcw out push in jno mov push add aad xlat mov jg stc xor cli repz ja sti xor mov jg cwtl je test jmp jg bound jo into mov pop push ds movsb das inc ret test daa in xor cs addr16 add or mov pop mov scas rcrb ja jmp jg shrd mov dec adc ljmp and add adc jne cmp jge inc decl xor je sbb das sbb adc addr16 icebp stos (bad) and mov loop ffree ljmp jmp sub popf pop pop fnop sbb xchg scas sub jg cmp ja mov cli jg cmp push pop adc (bad) jg iret jbe jle ret mov fistpll rcl cmp sbb dec inc popf inc pop stc dec js insl clc cmp mov xor sub lret mov inc add jmp cmp jg xor bound jg repnz push mov mov out pop mov rclb push cmp stos fbld jg sub (bad) enter cmpsb cmp add dec and or ss jl jg dec add jg mov les jmp push (bad) repz lss dec push dec jg jno push dec jmp lahf jg in into pop loope divb fidivl pop xor xor orl jg cmpsb inc push js jge ret sub dec and mov pushf inc jl pop jg test (bad) pop jg xchg and push arpl (bad) jg or test mov pop jns pop cltd inc adc out into fdivrl mov dec dec out std mov pop cmp test xchg adc xor adc scas cmpsl cmp ds jg (bad) mov aam stos xor ljmp cmp pop inc xor pop inc cli jle adc leave in (bad) scas jl movq cli mov jg iret pusha xchg pop cmpsb xchg cltd xlat inc sti add inc cmp xchg movsb imul (bad) jg stos pop and sub push mov jnp bound aad icebp mov (bad) jg jb sarb or (bad) fbld ret mov dec ds push push fdivl scas cld adc into lret dec sbb sti out stos jns push imul and inc dec outsb jg jae,pt push enter mov pop xor mov (bad) xchg aaa loopne das push xchg or inc call (bad) pop xchg xchg xchg adc shrb pop mov or movb clc cmp jnp push mov rcrl ja mov xchg jg mov movsl pushf mov jg and push stos jg cmovne pop xlat jp jg fs pop mov movsl adc sbb inc pop jg aad mov jg fsts dec jp rclb lods iret cmp lcall push jg pop push push cmc test sbb iret pop pop pop lock mov xor fs or dec and mov cwtl cmp ljmp aas loop cmpl sti popf and dec pop xchg out mov jmp outsl dec lea pop push in shlb and mov lods push push cli jg std testb js jg decb sar cmc jp fadds sbb les pop ljmp test imul xchg movsb shrl (bad) aaa mov inc popf test jg pop and daa inc adc std stc rcr in (bad) mov jg loop mov mov mov push dec xchg les jg xor inc clc scas jle mov fbstp pusha mov in das add loop mov push (bad) fdivrs mov jg insl es adc jg mov push xchg mov mov push push jp or cmp inc test and int3 mov sub xchg jg stc mov mov js push pop pushw pushf fdivrl xor mov cmp xchg aaa pusha jmp int dec inc cmp cmp jae test jg inc xor dec push sbb out (bad) cmp adc jns mov and xor mov aas pop inc cmc and stos (bad) sti push movsl es or std push fild mov scas xchg pop mov and xchg inc lret jg push mov cmp xchg sub adc fistpl stc jle add inc pop fsub int sub movsb sahf into jp jg mov cmp xlat lods push sysret daa xchg pop inc stos sbb mov push mov sbb jg cs sbb (bad) aam push pop imul inc out (bad) mov pop cmpsb and cwtl insl scas push dec sub ret stos pop add mov inc lret mov inc out jg cmp mov out inc jg jmp adc addr16 (bad) lea scas jae,pt iret xor jg mov adc lahf (bad) not inc jno mov roll ljmp push mov daa xchg insb push jo into and aas and arpl fdivl mov dec pop and push mov arpl jg,pt mov pop aas jg xchg fisubl jnp cmp call nop xor jg inc mov in (bad) pop dec xchg mov sbb mov pop pop repnz jg lret ljmp jne push faddl fs cli (bad) mov outsl push push movsb cwtl xchg dec outsl shrb add lcall jp int and fs mov aas addr16 jmp in pop xor out mov jo loope cmpsb jg add sbb sub pop jg mov adc or dec jg adc imul and or jg adc pop mov notb mov icebp outsl ficom adc inc movsb (bad) int3 in rcrb mov mov push fs xchg fistpll cmp mov push add subb jg les loope test lods fist jno mov arpl gs jg inc or lock js dec push stos dec pop lea pop decb push mov jg cmp sub fdivrs repnz in test and mov ret jg and jg (bad) sti sbb xchg dec cmp js dec pushf push add jg test mov test dec (bad) inc mov fidivr stc lret fwait mov sub xchg lea adc pop xchg jg dec or lods inc inc mov (bad) negl fcomps pushf and mov imul sub std pop outsb add je sti xor sub ret cmc xor jno sti out mov aad push sub dec and mov clc in jg rcrb cmp arpl mov mov loopne dec notb sub cwtl fstpl push cmp dec mull jp rorb jg mov or clc add sbbl inc loop push scas adc pop pop cmp ret rolb push insl lret add cmp lret add jg adc pop push bound push jg loopne and cmpb mov rep iret fiadd xchg mov jp mov mov mov out add push pop xchg mov lds (bad) idivb pop xor jnp jg pop push gs jp jg mov sti and loope push (bad) int iret and xchg lods mov movsb in mov test push push in (bad) mov jg mov pop loope push sbb pop xor loope jg push xchg lea or jo stos pop cli xor mov jg or adc in lea cmp adc sahf movsl insb push mov dec jg cmp push in pop xor inc inc mov (bad) icebp jb pop aas mov adc dec sbb fdivrs sub ljmp pop jmp inc sarl mov pop pop push mov xor repz xor or ds or in add or pusha fs jb push jne push sbb sub adc lahf dec (bad) out sti lods call push in and std shlb outsb mov sti mov push jg xchg mov cmc aas ficompl xchg lods or stos jg adc xchg (bad) pop dec jg lahf clc mov cmp push jg nop xor dec fcoms jg lea sbb jo sbb xlat out inc jge jg ret gs ror jg daa in hlt lds fwait aas cmpsl or pop sbb inc push dec jno insl sbb sbb jno and loopne push out loop push or pushf xor jbe,pt dec sbb fwait jle inc (bad) xlat and pusha pop loopne push jae mov je cs mov pop roll gs lcall (bad) dec and dec jnp jg jmp inc push in fidivrl dec outsb sbb adc leave mov popa xchg popf jg test pusha jg pop push lods sar bound mov push pop adcl div inc loopne out hlt mov push imul and movsb add lds addb int scas jg sti in enter jno xor repz mov push push jl push mov movsl jg dec mov or leave cmc mov jb bound lahf adc sub sbb sbb std jnp je dec fwait jg push fdivl jg inc pop in mov inc adc cmovl jg stos jns popf inc int js lods sbb sbb xor (bad) jnp xlat ja cmc pusha push inc jg push jmp hlt inc loopne jg nop xchg bound lods xchg mov (bad) mov mov iret jnp push xor pop xchg inc fs mov pop jmp cmp lds cld pusha adc test sahf jg push or lock pop mov test cli aam pop jg inc mov pop repz pop add mov stos flds xchg outsb insl sti pop shrb push xchg jns xchg push xchg jo je outsb out pushf jae dec or jno pusha jg pop fsub pop popa and jae aaa sbb out pop pop push rorl int3 jg cmp sbb jl es stc adc popl aas or inc insl mov push addr16 push fisttp js sarl mov inc mov mov jae add push lret ffreep cs les push xchg inc add mov idivl scas inc xor sbb dec jo scas xor pop (bad) and push xchg jns aas mov in test mov add push dec push dec jbe inc jg in cmp jmp jg jo lret dec scas jg leave negb jg imul cmc nop popa xorl ljmp jl imul jg push pop (bad) fnstcw (bad) jge cmpb mov and adc lods or cmc xor es dec loopne xor jl xchg pusha cwtl add xor sarl cltd imul dec insl int3 or adc and mov jg pop mov into mov xchg inc arpl xlat jg outsb inc xchg mov xchg faddl jg iret dec sbb mov inc (bad) jg mov and push or jno pop mov mov mov ja int ss and jg outsl or xchg sub adc jg push or je ret xchg (bad) and mov sbb mov adc cmp loopne adc ja dec (bad) cmp push popa xchg sub stos mov jg cmp loopne int mov out into jne add and mov (bad) mov jg repz push repnz xor rcll es dec outsl push mov mov repz mov mov and stc shrb arpl dec rcll arpl sti insb jb clc xchg add (bad) jne dec jg and stos cmp mov bound (bad) jg push pop sahf add icebp (bad) mov push mov sti mov add cli sahf jg sbb jg jecxz jb and js xchg pop dec pop ja adc scas (bad) jg sarl xchg inc shll jmp (bad) jo mov mov aam outsl inc sbb jb inc out mov add or movsb add les jg call pop cltd cmp sahf outsl and jno lcall outsl (bad) pop inc sbb jg arpl mov dec mov jno inc fsubr ss add mov cmp mov jg xchg jp sub and push xor mov jg imul mov es mov lcall mov or test fs jg mov cmpsl push and fdivrl or adc aad aas cs (bad) jmp out xchg les insl das xor adc jae add cs pop cmp or jg rolb mov push imul lahf push enter pusha jg sub xor (bad) mov mov mov repnz dec mov cmp pop jg mov insb dec sti loope jg sahf rorl push dec jo xor jg pusha and cmp xchg jg push jae mov in outsl cmp pusha inc pop leave lods scas cmp in jg xor add cmp adc sbb loop sub mov lock fmull aam mov lods cmp xchg and (bad) mov push jns scas pop js insb popf dec fs mov jnp mov jmp mov mov movsl push ficompl loop jg or (bad) inc (bad) mov imul ficompl mov pop mov jg cmp (bad) xlat hlt push inc jno mov sbb out ljmp and pop das mov or push aam movl push jg fnstenv fistpl inc xchg daa adc (bad) jae jle and jg xchg xor test mov jnp loope xor sarb jg xchg inc and pop fnstcw fistl dec jge addr16 scas (bad) daa push inc xor push xchg sub jmp shlb inc (bad) and icebp mov jg je popl movsb arpl cwtl jg cmpsl loop xor ret std jg enter mov mov pop pop sahf ds shl das lret jecxz dec xor mov jg cmpsb sar mov jg sbb dec sub (bad) sbb out (bad) jg int3 loope hlt outsb fldt lock scas (bad) inc popf adc lret jns scas or mov lret fmul adc mov push mov aaa gs insb xchg clc jg or sti jne inc mov add xor add loope lcall ret jg xchg (bad) mov aas movsb scas in pop cmpsl adc bound jmp mov cmp insb jg mov (bad) cmp or ljmp dec icebp sarb iret aam lods sub mov (bad) imul stc repnz and mov outsl add repz or add xor push sarl xchg hlt inc dec icebp push out sub ss inc xorb insl gs jg mov add in cld frstor add test outsl aad mov pop mov add aam jg scas ret pop fsubrs inc jg cltd in scas push mov xchg dec push jg jge inc movsl mov push in sbb sahf pusha test sbb inc pop inc daa or mov hlt xchg movsb mov jo xchg ffree arpl sbb cmp mov jg bound (bad) fdivr stos mov cmp subl lahf push test out jno add out rcrb es movsl mov insb inc mov mov mov loopne jg xor and add or loope (bad) (bad) and jg test repz shlb xchg rcr xchg gs push aam jl xor pop inc test andb pop xor mov jmp stc test andb and jle xchg lea jne cli add lds popf mov adc pop movsb dec jb jg push fiaddl (bad) lretw inc push inc jmp push mov fsubl xchg (bad) mov mov (bad) syscall mov inc out daa jg sti adc cmp pop inc mov outsl or jle push xor pop (bad) test xchg idivl pushf mov inc (bad) xchg jg enter repnz push jg mov aam fldcw stos add sub ficomp mov imul inc repz or jg andl add xlat add lret sti aas cli loopne pop inc dec mov push movsb jo mov and cltd lcall shr lea jg add testb mov lcall push jp dec out jno pop cmpsb jg mov add mov cmpsl push pop jg sub lock inc adc scas and and stos int3 cmp pop out ficompl pop mov (bad) xlat jg lret outsb adc lahf fdivs stos push loope outsl cmp sbb push int xor fsubs push xchg jmp xor xlat pop jg push mov int mov addr16 xchg mov jae push dec sub push aaa adc xchg imul add jle jg arpl (bad) jg js popf pushf dec fs in lret popa xchg cmpb push push or inc jg and mov jg or xchg mov ds jg (bad) push clc dec popl inc lds sub je cld popf xlat cmp lods sub dec jo sub sub pusha imul (bad) lea das add dec mov iret leave lock pop (bad) ja push add jo mov movl lret jg outsl or cwtl or jmp jno ret cmp jb pop cmp pop (bad) mov (bad) repnz scas jne jg xor jno pop dec jl popa pusha fldt lock push jbe cmpsb push jg cmp cmpl call inc pop push (bad) mov imull sbb and sbb divb jg lret and sbb pop cmp fxch mov insl sbb dec jg add cmpsl lock cmp addr16 sub clc cwtl mov pop jnp adc scas dec mov insb aam repnz and inc ss outsl (bad) and sti (bad) scas mov xor fldcw fbld sub dec push and out aas aas push push insb rcr jge cmc loopne lods inc (bad) push jg jae in enter jg popa jno adc sarb loope shlb les enter je cmc mov sub dec sahf flds jg sbb pop pop and clc xchg mov xlat repz push pop lcall in add cwtl enter arpl lret jno and pop xchg cmp cmpsl adcl or jae pop jg pop in ret imul data16 or insl jg (bad) in les mov jno push xor cld loope inc int3 aas andl inc fbld adc inc sahf jg mov push add leave loopne (bad) pop cmc sbb mov loopnew jno mov divb sti or shrb adc jecxz jg jp adc xadd les jg cmp push (bad) cli repz mov lahf pop setp push lock in jns xchg cld pop sbb (bad) ds sbb clc sub add sarl lods push jne es bnd test dec std xchg bound xchg jb mov xor add loop jg inc roll xor or jo mov lods jg scas inc mov ja lea pop repnz and jg outsb lods pop or stos outsl jg jmp or fistpl xor xor jo popf or mov inc decb bsr sub scas repz push and aas adc cmpsl sub loopne insl push in pop xchg sbb rclb jg aad inc xor adc clc mov jecxz movsl mov or pop sti inc mov add jo icebp cmp out adc mov pop inc mov lahf maxps fsts aas int3 movsl scas ret push dec push push jb or and push push dec cli mov inc pop and test addr16 sahf aas lods add (bad) mov sbb fsubr jg sbb (bad) jns push jg shrb ret mov dec fbstp sahf testl xor push jbe sbb jg adc cwtl adc ljmp fnstcw push cmp jg cs fisubl daa repnz ss xorl xor cli pop ret cmp imul xchg mov xor sbb sub mov push shrl pcmpgtd mov mov sahf jae jb sarb xchg rcrb sbb mov adc dec js adc mov fisttpl data16 pop repnz sub loop (bad) sbb add pop mov aam jg xor les sub loope sahf sbb jnp and js xchg cmp fild mov mov dec cmp mull xchg aas dec int3 mov inc ret sub mov int pop cmp mov sub cwtl sub pop jno mov add fnstsw aaa andl cld lret scas into mov inc adc stc push mov pop addl sti (bad) mov insb addr16 arpl jmp int sub xchg add push repz mov repnz lock lahf or push and cmp lret pop cmovle (bad) pop push inc dec mov inc outsl mov idivb out mov (bad) jg inc and lret sti mov cmp add xlat nop dec outsl lahf aas cmpsl push xchg ror pop inc aaa mov cmp jne outsb push jo jg insb test jg cmp jbe push jg daa dec insl lods mov cmpsl jg dec lock sub out jle jg rcrb aaa loopne jg push and xor xchg nop pop jle je dec mov hlt loop out dec push dec shrb (bad) mov imul sahf fwait lret add insb xchg icebp push daa mov sti lock jg (bad) or mov pusha ja ss push jg adc sbb sbb mov jbe sarl cmp sub push ret jae mov out lods fimull nop jg movsl repnz addr16 mov push fcoml mov cmpxchg loop ljmp fdivrs movsb insl aaa sub cmp jecxz adc cwtl mov fs mov xchg cmp xchg shll inc jg (bad) out into ret jg negl out (bad) imul jo and push idivb mov out jg fs lcall push mov (bad) packssdw (bad) add in push (bad) dec dec movsl jb jg or (bad) cli (bad) push scas mov jmp sbb lds loope jg xchg movsl jl leave mov add enter iret push frstor jg pop xor jg mov popf add insl aas out jmp dec (bad) and lcall sub sti and adc xor mov dec pop leave adc push sub addr16 jne xlat scas push jb fwait cmp enter (bad) leave and loope inc cwtl inc jne mov push mov (bad) repz xorl or test jg clc fnstcw adc loop mov sbb enter mov test mov push jae (bad) jg add push sbbl scas lods pop fcmovnu pop cmpsb push in enter cli or and jl mov popa aam and popf stc cltd lret (bad) sti sub inc in mov ljmp rclb jne (bad) inc mov mov xchg jbe mov roll or push insb ja lret xchg cs push jg add jnp sbb and in cmp mov dec outsb inc jae cld jg aad icebp ds stos lahf out jp jg and sbb das jmp into gs xor adc imul repnz jg ss call mov addr16 std decb scas jg dec loopne stos push andb pop fsubrs jg movsl iret test fwait cmpsl add jmp sub addr16 (bad) push or (bad) call inc inc jno add xorl xchg outsl rol leave pop fwait pop inc adc mov das decb insb and shrl mov or pop dec cs stos sti mov sbb jge sarl jl (bad) jmp xor sub ds push jnp dec and inc (bad) aas sbb inc ja pop jg mov push jnp addr16 dec inc sbb xchg mov int push mov enter dec add jg inc out xchg int xor mov and dec out (bad) sbb cmp push lea inc pop and sub jns push push mov ret outsl sub add or aad mov push mov sti insb or jmp std fdivrs frstor sarl ljmp mov add loop and inc pop jg js mov xor jl sbb or sbb dec out cmp sub je and enter xchg stos stc jg cmp cmpsl add add and dec popa cmp xor pop xchg push lds mov push mov ja or mov and sbb mov jg push (bad) jne adc jo nop jg dec add dec sub test lahf sub cs ret pop dec xchg out inc inc dec (bad) test adc push jg inc fnop icebp gs jge insl pop pop or jp in ds jg or xchg push sbb xor mov (bad) mov xchg outsl rorl lea pop ljmp (bad) sub imul outsl mov nop cmp sbb mov inc push pop pop test pop jno call and cmc and aas mov (bad) jmp mov xchg mov inc aas jg push cmp sti jl inc cmp and imull add inc je loopne jg lods mov data16 xor aam rorb stos daa xchg mov jg and jo push jmp mov rorl and (bad) xor hlt jg enter mov mov add mov jns andb pop sti push loop repz fcmovnb jle jg mov loopne imul in js (bad) lea xor jg mov pop insl hlt dec inc mov int xchg aad std lcall popa movsb add aas or dec int3 dec clc cmpb (bad) cmp xchg pop jg in or loopne fnstcw ret mov stc repnz nop dec lahf jl adc enter dec adc xor add negl ret fldcw pop mov cmp jg popa lret adc jg cli cmp hlt dec pop jg,pn mov xlat in cltd out add xlat adc jg hlt xor sub push (bad) (bad) (bad) jg sbb out cmpl push test adcl or add in jg fdivrl js stc jg andl nop mov daa scas gs xchg mov jg popa push sub mov pop fdivl and cli jnp jno mov mov xlat outsl mul xchg adc mov rolb add pop lods daa iret stos mov insl cld pop push test mov inc sbb arpl lret inc inc jg cmp jns jbe xchg scas clc xor or mov jg popf shl aaa xchg xlat lret xchg fistpll add mov dec jmp lods test (bad) push adc dec sub out push scas push add push jg mov xchg insl cmp jle push cmp mov inc inc jg jp and jg adc push cmp mov stos pop mov das sbb insb sbb jg int3 xor popl stos cmc add sub (bad) sub jo sahf or lds cmp hlt adc add sbb (bad) dec pop dec sbb cmpsl and jg sub pushf adc jg push pop add xchg push outsl pop scas std jnp (bad) mov dec pop xchg (bad) mov add or xchg sbb mov jnp mov push inc push add mov mov out mov outsb mov jb mov push in pusha leave mov pop cmpsb in les and push icebp xor lahf push outsl push test setae sbb insb jg mov xor divl sbb in mov or jnp and loope xchg leave aam jg add push inc push out pushf push stos mov jo pop sbb mov mov cmp int adc lods je jno dec (bad) xchg jg and bound pop pop and mov inc push sub (bad) pusha jb aaa jecxz,pt ja (bad) jnp insl jg push mov pop jg lds add ret rorb sbb ja and cmpsl mov (bad) std (bad) jns xchg jg mov movsl mov cmp repz ret push xor fldl sbb loop adc cltd jg cli fwait andb and sti aaa jg xchg pop insl aas xchg jns adc add xor mov or mov in inc mov mov rorl sarb stos jecxz (bad) loop jg jp (bad) lods sahf add xchg fimul mov jg aad loopne and rcrb jg xchg mull and xor lods dec pop jg dec mov jae dec enter psllq jg outsb ja pop dec js jg add lret mull sti idivb sub movsl pop jg mov cmpsb mov sub mov pop dec sarl repz popf jg (bad) sarl inc pop xor jg loop push inc outsb jb scas (bad) js mov add imul and into sbb jg neg insb sub addr16 js sbb sti or xchg movntps mov notb out xchg jnp xchg xchg xchg jg (bad) vmwrite jae aaa mov nop data16 xchg sbb lcall pop fdivrs mov orb mov and sbb aaa mov cmpsl sbb icebp js std fisttpl clc jne out shlb fnstcw test xchg mov test ja movsl push jp in ret fdivr sub jg loope inc or mov mov inc add mov ds jb sti jg leave ret aas subl and or cld arpl mov aas into mov mov or fnstcw repz fwait inc cmp jge adc pop cwtl je rolb fistl dec lret mov pop bound insb inc add and jg (bad) push fidiv pop bound jg les push cmp push inc jg adc out push je mov (bad) jno mov jg adc sbb cld or popf loop jg insb stos and lds add movsb test out push aas pop jg inc ja scas int cmpl daa jns cmp push outsl out sbb in cmpsb xor mov lea pop fdivrp (bad) sub repz mov and out lods inc lahf adc jg mov dec jg int jo sbb mov ret mov push dec fsubs mov outsl mov mov int3 sub xchg xchg pop addr16 sarl and mov dec imul imul push out dec std adc adc pop jg ljmp or syscall cmpb hlt fadds inc and push xor pop inc push jg push pop and jg inc or dec mov mov icebp jg rcll aam inc jg (bad) jmp adc pushf in mov jg xor xchg jg or sub jg sub pop fnsave mov ja ret int mov jg ror pop (bad) stos jns loop jg cmpsl cwtl mov jg in sbb sti notl push push add jg sub mov jg aam xchg mov add push inc lds xchg mov pop push push rclb cmp das lds fstl movsb scas fildll inc pop movsl jg mov enter mov xlat push lcall dec sti fwait adc adc addr16 push and insl mov movsbl cli cmp jg mov sub inc in out sbb fsubs xor jg ljmp jg or and jae cli mov (bad) testb mov dec shll rcrb sub sub jg (bad) and movzbl pusha cltd jg dec pop pop adc lock adc pop das jge leave test xor jg insl xor add popf into dec std pop mov sbb sbb js jg (bad) in lock lods fistpll (bad) xchg jg pushf adc scas jg adc inc stos fisttpll stos jg lretw sbb jecxz or push out push in sub cmp cwtl into jg xchg dec mov jg adc or jg nop jecxz mov mov inc inc jp mov lea sahf mov mov sbb and andl int3 imul (bad) lods mov lea test jg stos xor mov data16 (bad) daa in cmpsl arpl or jg addr16 xchg add imul dec mov shrl shl jp xchg nop jmp sahf jg addb aas mov push movb mov sbb lods mov scas aas inc scas or cmp adc out imul xor pop daa cmp arpl mov inc inc jg mov inc xor cltd (bad) jmp dec jno push lret pop dec jg lea push cmp sti scas cmpl iret lcall and dec inc hlt mov push ljmp (bad) mov call icebp std inc out loopne into cmp repnz and inc pop lret cs cmp fnstcw rorl scas pop sarb ja and xchg lock jg pop pop lcall ret jbe loopne rcrl js mov cmp push repz addr16 outsl pop rcl and dec cmp frstpm(287 sarl fbld aad and aam cmp (bad) cld ljmp sarl mov add pop adc js scas push enter adc push mov mov aad out (bad) jg and add or aas xchg push lret les (bad) jmp mov fildl in xchg insl xor aas jg jmp push cmp cmpl inc inc mov int mov jnp add aas icebp aas lret push adc aaa mov cmp sbb adc mov mov cmp pop add pop lret sub outsl lods add jmp pop into lock ds ret test sub mov sub fs iret mov jmp mov inc xchg out (bad) push sub std ljmp jg pop pop push jg inc mov enter jae (bad) lods cltd pop jg jo stos aam mov add mov dec ret test mov pushf loope fs push mov mov cwtl imull pop pop pop imull imul or test (bad) aad mov mov std ss fnstcw mov cmc dec jg lcall aas int3 and dec out inc in fild jg fisttpl jle jmp dec ret pop cmp test ja mov xchg insl cmpl ffree add jg pop test lahf jg aad mov repnz inc jg lret pop jnp mov cmpb dec adc add lea pop inc icebp jg adc pop jg cmp lea js add mov pop popa dec fdivrl cli aad rolb out jg add sub aas push jg ljmp lds add decl mov cmp mov mov pop pop inc jle sbb push jg cltd call mov cld add pop dec jae push aad sti dec jbe cmc jl jmp int3 mov pop loope dec js push sarb adc (bad) in inc xchg inc dec test lods outsl push pop adc cltd and xor push xchg test lock jb xchg mov rcrb jae sti cmpsl ret in mov out sbb stc mov jl roll mov outsl mov mov xchg popa (bad) loopne sbb int jge fcomps and push jnp in movb sbb (bad) in mov int3 push push or daa rcrl xlat faddl jecxz inc les arpl jg push ror sub mov inc imul data16 mov rcrb inc jae xchg cmp pop movsl xor mov push or xchg mov call xchg inc cli stos idiv lds jg icebp push sahf test pop nop dec mov aas mov fimul jg push push scas pop ret mov es jle jg imul imulb std mov leave aas mov jb push out (bad) addr16 mov jg test pop cmp iret stc inc dec mov xchg mov jg in pop les xor popf jg adc std jg rclb jge cmp loope mov sub lea rcl nop or (bad) jbe mov dec adc mov ja iret movzbl mov adc dec dec mov out xchg jmp aas sarl dec pop (bad) stos outsl push clc mov jg xlat mov sub std pop push movsl lret popf out jg mov push xor mov xchg mov inc leave gs push push xlat mov jg pop dec int xor sti in cwtl jg out call popa insb mov cmc cld mov jmp rorb cmp lret and clc (bad) fisttpl cmp (bad) jg setns dec xorb jg jns gs jg not frstor and in jo fadd popa pop jg mov add lret insb test xlat inc movq in imul mov mov jo sbb bound mov jg repz or cmpsb cltd jns es dec and sbb jg mov mov xor dec (bad) out mov push sub dec fwait add mov mov mov mov fwait dec jg int3 mov adc sub adc dec jns jg insl fildl or mov xor sub insl nop mov mov and aaa fstpt js adcb jbe fimull dec cmp (bad) into xchg outsl add cmp inc add or aam xor jbe add cltd shrl adc dec pop pusha mov jmp jg dec sub (bad) adc xor sti xchg adc call pop rorl inc mov mov and es jg dec xchg sbb jg adc inc and push mov dec lahf dec cwtl faddl sbb pop dec lret inc loope jg inc or mov sub xchg sbb push insb push jg jb jecxz cmpsl aaa in js adc jg pop sbb (bad) xor mov add push mov mov out loopne jg rcr mov js out pop xor popf mov vmovdqa (bad) xor xor movsb mov inc sub jg stos mov push jae pop aaa mov int jns xor mov outsl pushf push scas lds jg (bad) jno jnp inc ret mov add inc xor and jg sahf and and js adc std les repz arpl (bad) push xchg xor jg mov enter cmpsb inc les movsl sub repz test mov mov pop dec mov mov sbb jb jg xchg sub jae (bad) jg dec lea mov mov loop sub pop jg pushl (bad) pop cwtl push sub lea dec inc xor test or int3 ds sarb and xchg (bad) cmpsb enter ret ja int3 in fsubrs cmpl sti out push jno lods xchg dec lock movsb loop dec (bad) fdivrs test xchg add rcrl adcb lcall or jo hlt push repnz jg cmp mov inc gs jne std in arpl jg push mov ret in cmp aad cmpl jg xchg imul outsl inc lds mov cmpsb (bad) pushf scas cmp (bad) jno cmp xchg lds add dec enter xor and inc adc sbb loop push lahf or stos inc add aas mov push aam xchg cmpsl inc add jg mov pop leave jne mov mov ss xlat jbe pop mov dec inc movsbl jno jae or mov jecxz add jg rolb test dec (bad) mov mov mov jns jg lds dec incb jmp cmp pop inc jne in push cmpsl push jg dec out lret data16 ss xchg bound (bad) icebp jg hlt daa test dec sbb addr16 imull jne data16 loope es mov int iret jge pop sub ds lods mov dec and sahf out cmp (bad) dec loopne dec icebp test jno stc mov push push sbb jg mov sbb jg or cmp or test (bad) jg lahf inc sti sub int xor mov jle mov loop mov and push inc inc ret and mov fistpl mov mov sarb ljmp inc out jg ds scas lcall ljmp je (bad) jnp adc insl and jg movsb jl call mov inc fs outsl das dec lretw bndldx mov push pop sbb and arpl cmpsb jg shll and jg fildll loope fwait pushf jno jecxz sbb sti mov cwtl sti inc movsb stos mov xchg decb das or xor push shlb mov mov jge sbb pop aad imul dec cld jg lods pop cli call je rorl pop inc jg jb cli pusha jl fidivr loope jmp mov fldcw mov add cmp push jg or lret adc sarb ss jp pop mov mov aad sub mov scas (bad) cli mov shll mov dec xor jg ljmp (bad) repnz in sbb jg aam and int3 sarl fwait add test inc aas test and push sub enter mov mov pop inc sarb dec sahf inc lret stc xchg jg push movsb fwait push movsl fidivr rcrl pop sbb jp or rorb loope imul push inc add (bad) lea in fmull loope test idivb lahf adc and cld jg mov inc sub jne and sbbb notl insl jl (bad) mov enter ss fdivrl mov mov pop or cmc repnz in jg popf add ljmp jg and add cmp jg mov cmp (bad) push mov lods jne addl inc cmp lock lods add or cmpsb out xchg xchg lds xchg and movsl aas mov bound jg add mov scas loopne pop pop xchg inc stos int3 jg out jns into fiadd jg cmp xchg les or cmpsb imul push (bad) pop mov jg aad daa imul push mov js cmp mov mov das les lret cmp loopne add or shlb mov dec out jg dec (bad) jl jb lods sub jno popa in jns (bad) ja mov int pop push movsl (bad) or adc fisttpll inc les sub adc stc aas xchg ljmp out jg dec add mov insb nop pop mov mov loop ficom inc xor xor mov ljmp jno ret sbb push lcall les and dec or or mov mov daa xchg subl in cmpsl jg sub dec jg mov stos inc insb add jg fistpl iret scas xor lcall nop dec ja insb mov sti xor adc int or outsl rclb mov ret popf icebp and inc arpl pusha ss outsb (bad) dec pop in sbb pop rolb daa imul (bad) outsb push cmpb jg dec lcall insl lock pop jl cmpsl js or rorl stos fcmovnu jg pop mov push pop jg sbbb hlt push sarl jge lds scas mov nop inc mov mov sti jb sub jg mov fwait int3 ret in jg or aaa jg mov insb cli sysret mov cmc arpl pusha bound inc jns xchg mov push lcall adc in mov jbe mov inc pusha pop jg xchg dec cmpb inc rcrb mov mov mov je in popf pop xchg jns bnd push add mov mov (bad) mov xchg jg dec add int3 inc nop movsl jg in (bad) or add adc cld push xor lods add mov push pop pop mov orl jp push jae lret add push jg xchg inc imul sarb or mov andb jg sbb popf jmp inc cmp xchg sti cmp leave or xchg xchg push iret jl fs aam mov jle jbe inc lret pop add push daa rorb loop xor mov push sub mov sar pop push mov push fildll lods scas loopne jg xor mov lock (bad) arpl aas fnstsw jecxz std jmp jg cmp dec imul stc fistpll pop out pop sub aad les mov jg inc int3 bound ds imul orb pop leave dec add ja jg sub outsb jae loop jg and inc pop xor jg add bound popa and inc dec js dec mov (bad) aaa mov dec out jg,pt dec fsubrs cwtl add mov mov das rorl lods mov call daa pop inc mov jg fidivr mov fnstsw jb lods imul addr16 jg or int3 adc out loopne dec or pop dec jg sub jge cwtl pop mov inc mov mov (bad) jg fsubs pop mov adc jae cmp mov aaa outsl stos mov in insl ss lahf aas lea nop aad adc jns inc sub es dec cmp sbb jno add outsb lock jae jle jp insl mov stos jae test cmc (bad) es jge (bad) lods pusha xor jmp xchg or inc mov sahf bound dec mov add cmp stc lret push test aas dec in adc into xchg or leave outsl and testb pop jno mov mov ja add dec jno sti mov xchg push test sar sarb cmc jo orl inc jg mov aad mov hlt push push es insl je inc dec xchg arpl sarb cmp jg and pop pop jns test aam out popa arpl adc (bad) jg inc cmp jg dec mov and mov jg cmp inc sbb call jge sub js mov clc mov pushf jle stos jg mov mov push jg (bad) arpl pusha lret fmuls in push inc loopne mov sbb ficompl nop fstpl sahf jg lahf inc xor in jmp jg scas cmp push xor mov std cmpl xor aas lock ret repnz dec decb mov pop stos es sub and sbbl imul mov dec in rcr cmc sbb inc jb lods jg fldl xchg adc fdivrl ret test sbb imul push in add jg out xchg (bad) mov pusha aas clc aad sub cmp mov (bad) cltd lahf cmp or in cmp mov les xchg jg jmp (bad) lea jne repz cli pop mov and dec ret and jg pop je pushf fcmove adc ret icebp int3 pop jg in pop mov loop sti fs pop or fcomp cs jg cmpsb pop xor aas xor (bad) aaa mov in sbb ret in xchg jge pop inc jg push add repnz aad push dec ds mov sbb pop lret data16 jg or mov mov jg xor cmpl test insl xor aaa jg mov call lock in pop mov sub aam hlt xlat sbb dec sbb jg repz pusha jg jbe pop lcall mov (bad) mov add xor jne sub pop pop cmc push ds mov dec arpl inc jl jg cmp icebp rcll je (bad) repz jg lock out mov add iret dec pushf jp lods fcmovu cmp test fcoms xor adc (bad) jno dec outsl add lret cmpl inc push xchg jg mov xor lock gs sbb adc stos mov inc cltd pop mov mov lea insl sbb aas xchg fdivrp xchg bound add push add aaa jg pop fistpl jg sub mov psadbw inc adc les das aad jg addr16 mov lods xchg adc ret negl xor lock inc lcall mov mov or inc jg pop push cmp insb addr16 in mov (bad) int inc xor lock dec stos mov ss inc pop (bad) loopne sti xchg and into jg mov fwait popf mov mov sbb inc mov cmp ljmp jg inc sbb push lahf and jg in adc jecxz hlt jne jns,pt aas aam push inc xchg dec jg sbb inc cmp in scas (bad) adc dec jecxz and fnstcw push pop cs or cmp test insl dec adc jg js sub mov dec cmp into (bad) dec pop ljmp (bad) addr16 out jg ljmp and jg pop lock outsb xchg shr sub negb idivb jg mov or clc lret test mov xchg cmp adc les imul dec (bad) cmc mov mov xor lock mov jmp rorb int3 enter (bad) mov adc leave fsub xor int fwait and js ret pop hlt and arpl in mov xchg into lds add lea cmc add dec mov (bad) dec xchg mov jns int inc push cld push test adc sbb add clc dec xchg pop pop jg aad xlat push mov jmp cmp xchg mov outsl stos xchg xchg mov (bad) sarb dec sbb arpl test xchg dec pop mov das xlat xchg and popa test rolb imul push mov push mov stc dec jg insl cltd aas pop jns gs sahf or jg xchg mov outsb dec mov mov dec push xchg fadds sub aas fdivp and ja sub bound push faddl pop mov imul and cltd dec push jae (bad) jg push ficompl inc mov or fwait outsb mov dec sub cmp mov mov push shrb loope (bad) mov dec lods mov jg stos sub test jbe sbb clc out std jg (bad) mov lret jg mov cltd pop aas jp movsl or aad jl ds dec repnz imul mov or iret jg adc xor and push sarb mov (bad) mov xor pop mov in mov ljmp test and push pop or cltd aaa das mov jg fsts hlt xor lea sbb fistpll cmc xor test stos dec imul cld add adc sti jg outsl movsl dec push jg sub ljmp outsl dec (bad) jle fldt (bad) pop test loopne push popf es mov mov add imul mov cli jg,pt fiaddl and out or negl xchg adc ret (bad) into outsb and shl test insb push aas sub lret out lea or jg or jno push add cmp jg cmp push aad cmpl dec adc pop out insl int push mov dec pop (bad) push mov jg call push xor ja push ficompl outsl in xchg push sti inc repz xchg or fbstp aam or cmp icebp sbb sbb (bad) fmull jg mov lret jmp sbb inc imul ficompl aas jno mov fcoml sub mov mov jg lahf xlat lcall jg sbb daa insl add pop add lcall pop jg,pt xchg lcall xchg cld inc dec cwtl rorb pop ret dec push ficompl and push lods out push inc lcall sub mov sbb call fistpll push push push push add or inc int outsl out sub dec cwtl mov and jb inc adc fxam mov inc xlat push add jmp mov jns pop fsubp in mov xor push jg adc loope jl jns rcrl test inc jg add and jg cmp adc ficomp sbb (bad) gs jg mov pop leave dec aaa push imul and (bad) sbb jg xchg mov mov icebp stos dec fldcw add mov xor inc call push loope jg ja xchg in mov sub mov cmpsb lcall dec (bad) in jg sub mov inc movsl push test inc je jg inc addr16 jg mov fnstsw div mov lods mov movsl xchg inc mov notl fbstp mov xor add xlat pop mov in (bad) mov or xor arpl (bad) repnz mov mov movsb outsl push fidiv cmpsb mov push aad jg roll sarb lahf ja (bad) sbb mov aam ja jmp sub pop cmp xchg imul mov into mov jg xor dec xor ds sub mov pop sub jg arpl sub sar add cmpsb mov jg les jns sahf sub fcompl mov fwait inc inc popf sub cli add mov in inc sbb push pop movsb aam xchg jg lods cs bound lcall pop xchg (bad) fistpl ret mov fdivl xor imul mov outsb mov dec jbe jg cmp das outsb jg inc mov (bad) popa scas aam xor push jns add cmp pop cmp fidivr data16 insl xchg (bad) imul in dec mov mov sarl inc push pushl cli (bad) mov inc dec xor jg enter fstpl mov aaa sbb lea clc aas xlat add and test push outsb dec inc rclb dec sbb xor aas jg cwtl pop add mov sub arpl cmpsb (bad) lods jno imulb xlat pusha idiv pop push fidivrl jae,pt and and add jno (bad) jns mov fstpt popf dec std in mov mov inc add or xchg lcall add cmp inc pop outsl and mov push jg xlat fs dec add jg lahf push jp fwait pop cwtl jg clc lock sbb sbbl les and push push repz pop cmp inc mov sbb xor cli out or xor cmpsl dec aam jb lods aas jne fsubl mov movsl inc ret pop fwait call outsb add cmp jne test ret jg out add push shrl loopne pop push jg mov add push adc and xchg leave es jg and adc pop lret je cli push and mov jg imul cmp lret cwtl jmp pusha (bad) lret mov add jg aam std sub imul gs pop inc lds sub jg pop pop stos dec out mov lock jno lcall jg iret xchg inc lret orl aas push dec ja pushf mov xor repz ja,pt xchg mov add sahf push ret stc nop lcall add shr xlat movsb outsb std scas mov add sub mov idivl mov int3 inc scas gs mov hlt (bad) stos sti inc jo jecxz enter jbe popa mov dec aaa push addr16 inc (bad) jg and or sbb mov inc mov xor movsb or pop jb sub jg divl inc cmp icebp out jl hlt sbb or inc ret inc jmp jg xor fnstcw sbb mov stos inc js mov mov or jae out pop neg sub dec xchg (bad) scas jge adc bound xor xor push mov sub pop mov cmp pop mov sbb insb insl xor jg ret fs outsb mull sub mov leave dec insl inc or push pop jo or inc sub cs test lea (bad) ss mov into cmpl cmpsb pop jb inc and xchg adc sahf cmc xor js (bad) pop ret rcrb adc mov repz mov mov outsb push mov jg jbe imul and jl lods push add sub mov hlt pop nop adc (bad) stos cwtl stc cmp xchg (bad) imul aas jns fwait add js pop lret in sub inc sti daa or (bad) das mov inc fcompl jb xchg loopne (bad) mov jnp cmpsb fwait mov loope fidivr pop in jge shrl out mov insb jg or cld xor pop cmp and fs pop and pusha add fcomps popa sbb loop ds icebp mov xchg leave xor mov jne in add bound adc mov fsubl addr16 ret dec adc mov sub jge xor (bad) lock fcmovb sbb subl mov enter pop pusha cmpb (bad) dec jle adc jg push js xchg xchg jg jne out fmuls fstpt or fwait jno lea and mov cli loopne mov ret pop insb push push fstpt rcrb negl mov cvtpi2ps insl jg mov loope adc mov xchg xor mov cmp pop roll and jg bound les fs test arpl js jg fsubr dec aas xor stos pop pushf mov jg std dec mov push jg pusha (bad) int3 push daa addr16 jg add popf or fisubrl fildll mov jg pop (bad) push les mov dec dec pop xchg push lods sarb loopne cmp jmp (bad) and jnp add inc js aas leave pop jb and rclb jg add mov sub push mov jg mov dec loope pop pop iret xor rolb dec sub inc and or dec sbb cmp add (bad) int3 adc rsm push mov in mov mov xor mov outsb addl push mov jg push add rolb mov push sbb outsl jl mov hlt push push jg pop jmp xor dec xor xor adc or ljmp mov stos mov push sarl push pushf fs push pop inc jno mov adc aad mulb cltd mov jg sti out or push mov push jmp fstpt cmp jb dec gs pop xchg sbb js sbb cli pop push lret or push ds shll leave push aas ret (bad) pop mov inc mov arpl mov mov xor int3 scas pushf pop loopne jg das sbb xor mov xchg stos pop push mov imul and cmpl fstl repz idivb pop fwait rcl fucomi push pop or mov cltd jp mov outsl pop out insl fcomi stc lock mov pop popf and jg inc xor pop dec int3 mov hlt je int jae push sarb jg push outsb outsl mov jg dec xchg mov adc jg jp lret fsubrl (bad) jle ljmp add (bad) nop sub aaa dec (bad) mov mov inc pop mov inc das mov ljmp mov stos and test xchg xchg iret adcl clc (bad) xor rolb inc and stos mov outsl cmp fwait xchg aad out dec jae xor call nop pop sbb lock fdivrs sbb ficom mov lods lahf mov jg cltd pop sti stc mov sub adc push roll jnp jp data16 sbb jg sub ret jb frstor test push cli jae or fwait jns inc fsubrp lds sub in imul sbb jg mov lret lds cmp inc jns mov call ficoml adc sub sub (bad) lods stos mov jl pop add sar fimull fcmovnb mov cmp jns cltd aaa jg lods repz sub and jg std (bad) fistpl or xchg mov lea outsb mov xor sbb xchg mov jae inc adcb (bad) loope pop xor notl and jg imul mov mov cmp add sarl loope push cmpsl sub cld mov ja mov cmpsb lahf lcall rolb dec icebp mov push pop das jecxz mov add pushf push push jg and insb testb jns dec or (bad) dec adc and or push cmpsb mov jg and sbb or lea mov inc xor out jg sub jg,pn imul jg outsl cmc (bad) mov movsb jg leave arpl dec mov mov fistpl cmpsl ja cmp cmp jg xchg bound sub test xchg add xchg lods jge lahf movsb cld and mov jg popa or jbe aas cmp int fmulp inc or (bad) jns push inc inc mov testb ret jg dec lret pop xchg adc mov fbld mov dec ja std sti xchg arpl cmp jg arpl add pushf test xchg sbb sahf insb push scas sbb adc pop push insl shrb shr jmp cmp push (bad) cmp xorl test mov sub mov jg add into arpl loop stc sbb sub (bad) idivl pusha pop mov push jmp jg rorl jg lods es push dec jae mov fwait inc mov adc orb (bad) sub cmp push (bad) xor cwtl push outsl std pop push jg add fdivrs mov pop leave cmp ret aas test add call lds xchg or les lret adc push or bound dec inc mov push mov (bad) mov or (bad) dec dec mov jg (bad) insb insb pop test popf les lahf adc arpl and aam jp shr or mov std jns lods xor push mov push fs les xchg inc lea or insl icebp and xchg les ds inc divb adc loopne jg mov cmp lock jg fiaddl test push xor incl push out inc pop jg rorb jg add stc add fistpl lret (bad) mov push mov test subl mov mov pop push fwait dec std inc push out jg notb or add mov adc nopl sbb cmp andl fcoms jg call outsb inc jg dec stos cmp mov lcall add jg je mov and cmp loope push pop test jg movsb sbb or fucomp stc out cmpl lahf jg cs dec xchg jp je int3 imul in and fsubl mov movsl cltd (bad) jmp int3 loop aad mov outsb scas arpl data16 sub fwait jg inc js sarl jg test sti (bad) and push ja test push fidiv mov movsb or jg jl imul sub add (bad) dec js cmp mov mov pop fisubrl xchg jg add cmpl in add xchg cmp enter iret (bad) jg push push in mov or jecxz inc cmp xchg dec sbb clc rcrl (bad) mov jo out jg add in and das jg lret inc (bad) sub jbe andl (bad) sbb fildll arpl repnz cmc aaa enter sbb aas mov in stos lea repz fwait cmpl xor and jg xchg inc rcrb jne jg push pushf repz push sbb lret jg sar (bad) mov xor out jno jbe cmpl stos aam aas xor lcall jl inc sbb jne mov and rol dec push pop mov data16 (bad) mov mov adc jne sbb jg push cmpsl es outsl aas rclb loopew jg add icebp imul lret jp cld rolb pop mov rclb enter and or out daa mov movsb mov cmpsb sub inc fidiv jg sub mov xor negb fdiv fidivr inc push adc cli in jae sbb push pop cmp jg aaa arpl jne add inc out xor sbb pop jg add mov cmp insb lods mov cmpsl push jg sbb and jg dec prefetcht2 xchg mov mov mov outsl and jg pop jmp pop mov and xchg xchg jb push pop xchg mov adc or out (bad) fcmove jg (bad) or mov push jg mov pop jns cmp in or pop push jbe insb adcb jg arpl mov mov test or jno lret pop or lock mov xchg iret enter aad scas mov mov add add or lds aas hlt cmpsb out and cmp adc xor test adc insl js ds icebp loopne push sarl push pop jne (bad) mov test jg hlt rcr pop data16 jg imul mov repz xchg addr16 stc xchg jg mov or sub dec ja or push inc dec jae mov jg jo sbb or dec inc incl cli in mov int cmp push aad leave sarb ja add adc aas lea cli idivb mov jg test mov loop inc pop mov inc inc sub (bad) orl push add repz iret jb cmp insb pop jg jo and stos xchg mov loope xchg into xchg mov jg xor mov (bad) push cld fisub adc jae lret mov inc sub into jg cltd (bad) stc pop and test sub inc popa jmp xchg jge pop movsl jae jg adc sbb mov shrb jg sar push daa je xor and ret (bad) jle hlt mov and icebp lcall xor out xchg inc (bad) sahf jg push (bad) sbb jg scas lods out fstps xchg push sub jns jg mov sub push mov lret aas xchg cmp cld mov mov movq push sti aas je inc mov repnz insl push (bad) cltd ds (bad) xor fxtract outsb sahf pop push or sbb mov ss fdivl add fnop aaa aam inc dec jg ljmp out outsb cmp aas pop repz movsb dec into cmp or jbe push mov and jg (bad) cltd lods add sub or cs jge nop sbb dec and fdivrl xchg pop roll (bad) jg pop in mov or dec jg repnz xchg sbb hlt fnstsw outsb adc jg mov addr16 jg xchg insb add xchg lcall jae scas dec adc cld sti cli enter lods mov inc push mov subl pop sti sub dec (bad) mov ret addr16 shlb mov sbb jbe xchg jg and jmp rcrl repz ss out scas xchg pop cltd fisubr or popa sbbl popa xchg pop clc insb mov test cmc aas xchg (bad) mov dec xor or add insl insb jg test sahf and out jg in cld enter loopne aas fbld dec mov (bad) mov push jp push js push shr or jne jle mov (bad) dec cwtl repnz pop dec daa sarb adc jbe inc (bad) lcall push jp xchg mov ret xchg jb rcl add lds ret std mov pop ja sbb xchg sbbb mov bound sti add testl test sbb jle test rcll lcall loopne (bad) pop mov xlat stos pushf shrb jg int3 sub stos cmpb test repnz xor mov xchg mov (bad) neg jg es and cmp mov inc fs in (bad) fbstp loope pop push out dec stos mov jg movsb cwtl adc fxch inc jno setno dec mov in add mov rcr subl shlb xchg jle dec pusha and adc and lds jg xchg and and push mov mov mov inc dec push sbb lea movsl push push inc shl imul jno ss stc mov xor fildl mov pop lahf push jg push push lret adc mov jne jnp arpl outsb gs jne clc sbb jg dec pop int cmc push add fildl mov mov and mov ret imul stc repnz in daa lret mov mov iret xlat bnd scas sbb mov jne outsl mov jmp (bad) push jg (bad) test mov adc movsb bound jecxz out test xchg push mov lahf in mov jmp aaa mov lcall push mov or xor cwtl aaa cmpsl inc ficompl sub lock pextrw pop cmp inc and cmpl dec popa xor repnz mulb inc and cmp inc push inc (bad) fmuls sbb cmpsb and mov push pop cli pop outsb fsts (bad) mov pop mov idivl fs fdivrl icebp mov lretw xchg sub and jg pop sbb out xor js sahf movsb inc inc mov icebp adc lea mov mov test jae adc xor mov adc jg mov add (bad) mov test jne pop pop dec call lea idivb lret push test push jmp ret dec cmp les cmp xchg mov out mov sbb daa ret cwtl jg imul sub xor pop lret notl or sbb dec pop lods pop mov mov ja pop mov xor dec jg and xchg push bound sti sbb pop mov lods cmp add cmpsb xchg jne aas test adc mov jg pop add in test sarl lea lods jo jg pop cmp dec jg cltd outsl xchg xchg jg mov test jg jne inc loop and jg arpl mov sub xchg xchg (bad) jg imul in or xchg cltd jp jl pop inc (bad) pop insb fisubrl ror dec adc popl cmp push mov pushf popf inc (bad) (bad) jnp out sbb jg xchg mov mov pop data16 or jmp iret out aas imul aam insb adc pop cmc push push movsl jg xor cmpsb ds xchg fsubr jg dec out sub rclb mov addr16 push in jg sbb pusha mov stos cli pop dec pop add stc fwait out and (bad) mov popa or push mov repnz (bad) push dec xchg fstpl jge xlat ret ljmpw jg cmp repnz mov xor data16 xchg inc cmpb aaa add jg mov mov (bad) pop and jg,pt rcl xor (bad) jne sbb mov (bad) mov pop sahf inc js in outsl je cli sub pop mov insl xor jg xchg sahf aad fwait cmp inc mov test fnstsw jl xchg dec xchg out aam xor sub (bad) mov jg rol mov push jg cmpsl mov push inc or jg (bad) mov sub push fcom push pushf jg cmp push jg dec xor cmc icebp stc jg test stos das in gs push out decb cmp sbb jmp xor pop cmpsb int mov test jg mov sub fild jg xchg lcall xchg incb mov cmpsl jno jg ljmp cli pop adc mov std (bad) lfs mov and ret mov loop out out jbe sbb (bad) fldt sbb jg in popa sub jg fwait test mov imul jg popa pop fcmovnu call xchg jmp add test test xor xor jg adc outsl fdivrs push xor cmp jg and jp cmp sahf cmp rcrb xchg pusha js or cld push imul stos jg stos rorl sbb lock aas lea jg popf push inc xchg insl (bad) mov push mov in add dec inc out arpl pop adc fmul push fadd sti pop dec scas dec ja inc outsb jge jg pop in push inc lods data16 in mov (bad) or pop jg push ret hlt imul add mov jmp inc nop pop jg stc xchg inc mov jl jg sbb daa clc pop mov aad ja sti nop push outsl inc inc mov jne sbb inc cmp nop inc and pop push adcl shr js movsl pop dec ja push cmp jg add dec jecxz adc inc dec jg xor mov jg mov sahf leave int aas jno das jmp or cld mov dec xchg int3 add pop adc jno push add and ljmp mov jno icebp clc mov out dec push les jnp inc movsl xor dec imulb dec mov lods jmp inc fdivrs sub pcmpgtw cmpsl in push sub mov in mov push or repz pop popa inc xchg jg dec lret and dec mov pop ja mov jg popf adc and rcrl add sub pusha gs push or mov xchg mov mov lret push mov mov cmp push mov dec insl sub jg in stos push fdivrs cmpsb loop movsb test fs in jl mov jg aad dec push cmc cld xor rcll or sub cmpsl fsubs int test dec (bad) add inc in jg sarl mov jbe jg sbb add hlt pop lds lock pop stc fidivr xchg jge (bad) jb insl das pop std pushf push les xor popl aaa dec lods dec into aas ret (bad) in cmpsl lea xchg (bad) jg leave lock mov cmp mov std (bad) in add lock mov mov addr16 adc push xchg in sub mov js pop (bad) hlt test push adc (bad) pop addr16 xor xchg push dec pop aas rcr in or dec lret jb push test lds jg mov mov jg orb mov mov lds jg and (bad) sub mov mov lahf stc dec mov imul je add jg adc xlat into call and (bad) jo cmpl fsubrs jecxz jg ljmp mov inc jle cltd xlat lock or imul push call notb jg mov jg fldl and xor lock scas inc jg sti xchg xor into and jg pop xchg inc adc negl sbb jmp insb pop mov cli mov inc and inc dec into cld and dec cmc lea je jne sbb out push adc out add int rcl jbe inc add callw ja sbb jg mov or outsl mov mov xorb sbb dec popa ja (bad) inc mov adc pop sub push cmp jo push xlat jg divb xor ja jg inc aad cmp jg cmp adc xchg pop mov mov arpl cmp testb cld pop js aaa jns sahf mov in cli inc add ret jg dec lret push aas lods stos or inc int3 (bad) mov aas inc xor imull mov inc inc jg sub pop outsb insb pop mov pop jg push fldcw jg sub pop jne adc decl cmpsl push inc out mov in push inc add cmp inc rcr pushf push jmp dec xor idiv adc xor pop sahf decb jbe xor pop xchg adc test into dec out mov (bad) lock (bad) mov aas add outsl lcall test push jg lods in mov cmp testb jg fimull add add jg push movhlps ljmp loope jecxz xor test jmp (bad) out cmc cmpb push imul (bad) lds jne repnz lock sub mov imul lods add out aam jg push add pop push es jg rclb push ret jg pop aaa adc pop inc push push test lret and xchg jg popa lret nop jg inc dec stos push xchg test jg adc movsb jg out add lcall ds loope or call mov mov fistpl aas push mov aam movsb das arpl sbbl rcll enter mov (bad) cmp or pop lods push insb jp jg test addr16 mov divb aad jbe jg mov mov inc mov mov aam stc jg fldcw lcall mov ret aas or add popa jg pop in lcall sub push sbb add dec xchg cld jg mov clc sahf mov (bad) cli add pop pop je out idivl cmp sbb push mov inc mov push leave mov lahf mov jo,pn pop insb xor and pop test test mov ljmp or out lcall mov pop push mov xlat dec and outsl gs jmp mov and jb les sar outsl lahf subb cmp movw push mov push jle movsb lods xchg pop dec push arpl lods ss jl dec iret cli fistl push es jg (bad) mov out dec sahf or push mov adc inc std and orl or icebp or hlt jg and jnp insl jge jg jbe insl xor lds cwtl push pop mov push dec test add sbb mov pushf dec mov push std cs es cwtl mov (bad) orl fxtract pop shrl cltd gs push dec mov hlt arpl mov fwait push cs dec mov sub dec repz sbbb ds aas pcmpgtw test imul jg imul cmp jg cld sub jb adc sahf jns xor pop jg aam sub push dec outsl cld pop bound or addr16 mov jg mov xchg repz ss nop loopne inc and sub daa lods sti xchg rclb cmp (bad) jg fnstsw sub std lret scas add jl gs inc loope xor sbb scas push js xor mov mov out (bad) iret pop (bad) jg sub fs scas arpl push imul in shrl pop dec push idivl test fnsave rol ja sarl popf xchg loopne inc (bad) jg adcb cmpsb push mov out mov pop or pop push cwtl push sub jg add aad mov or mov push cmp pop es adc testb fwait inc jg push (bad) pusha icebp fistpl xor mov mov and gs sub mov xchg (bad) pop mov daa int ss inc sbb push pop mov fs push push mov in leave mov push lds pop cltd lret jg in pop dec add jg faddl loopne mov jg decb and dec inc jg aam dec lods fcomp insl push mov pop pop ljmp fwait loope jae jbe (bad) lods push mov jg lock jo adc and jg mov adc jnp inc mov int adc sub aas nop push (bad) dec xchg imull jmp mov sub gs inc mov xor pop mov cs test mov notb cmpl push mov xchg jg jbe push push jno mov int ss mov aad jle xor xor int jg lods or sti or aas mov je inc push adc jp les adc cmp iret (bad) fisttpl stos dec push push movsb arpl inc push cmp jg das in scas cmpsl clc adc jg arpl sub iret data16 aad jge cmp aas add ror inc movsl cmp add jg shr add inc sti push in jg push fs imul leave insl jno jae cmp test pop cmp or cltd outsl test push sti into jg mov notb test repnz fsubrs jnp cmpl jg dec xchg scas cld jb pop jg xor jle jg xchg (bad) mov jns xor dec push aas je and es jno rolb add add lods in and and pop imul and sbb pusha (bad) pop sub test fbstp pop call mov pusha mov int3 out inc ret fidivrl in aas (bad) and outsl jge sahf insb mov pop imul pop cmp repz and popf adc ss insb inc lods pop adc (bad) dec push loope sub (bad) aam push mov dec test mov imul lods sbb decl movsb cmp inc sub out in inc and lahf roll ja ficompl dec inc scas mov mov fxch outsl inc sbb sti ss fs adc cmp mov sar insl fdivs jg jbe nop jnp jmp pop add (bad) mov outsl loopne xor out out insl lods rorl pop jg aas xor xor xchg popf sbb arpl dec jg aad pop and mov inc mov fwait jg mov cmp and test lock sahf and or (bad) or jae repz push ret call (bad) pop sub inc push jg mov fcompl scas pushl bsf mov repnz sub push mov fnstcw mov xor jg fcomps jg mov mov jg fmulp clc movsb xor jg out push lods ret jg call (bad) rol mov lods addr16 out ror stc ret mov inc push ljmp dec mov icebp mov (bad) dec ja mov sbb cwtl repnz xchg mov outsl sub add jnp dec jmp pop data16 push dec int jae out add rcrl arpl pusha pop insb jg dec or mov sub pop mov mov call test mov dec add fidivr or cmp jg cmpsb inc jmp jg adc shlb dec ret xor pop jg adc jg movsb mov mov add or leave iret ret and (bad) loopne push (bad) jg aad adc add jg movsl outsl inc xor jbe addr16 push test jg and icebp jg out divb push mov aas inc out jg repnz (bad) loopew sbb add sub mov movsl (bad) divb jg push adc jae mov sub mov stos aad cmp mov jg popf jne fdivrs rolb mov dec jg dec inc lret dec mov cmp in fdivrl cmp or xorb jecxz sti cmp inc es test push cmp lods jecxz or jmp cmp aaa jno xchg adc add cmp pop (bad) outsb cmp jg mov in xlat insb cli pop jg xchg or mov aam add jg inc adc adc mov stc dec mov mov dec pusha jle in or repz pop jo data16 ret dec jl jno loopne enter sub push fs jno cld test sti jns sub scas nop xor idivl ljmp pop inc clc lcall fwait push and lock lods int3 popa call sahf data16 nop repz in in adc xchg cli mov out jo adc int jb (bad) mov shrl pop into add lods mulb outsb addr16 jg adc fisttpll andb push push mov pop cmp insl mov cmpsb mov popa mov or je inc in sarb xor or push ss mov sti dec jg add cmp int jns pop movq out les fstp adc jg (bad) out jg mov xchg dec (bad) dec cmc mov sub jg xor incb sbb shlb xor test je cli push rcr mov pop mov xchg jg (bad) faddl mov jle push js xchg dec sbb mov lods and jg out sub sysenter xor cmp cs inc inc jg mov mov push push and (bad) movsl cmp pop inc xchg addr16 add mov addr16 nop lahf lahf insl incb xor sub mov ret jg push mov out in js mov push push fsub jb or das dec jg add leave addr16 jo xor cmp incb std or popf push inc dec push pop add mov inc cmc es mov cwtl outsb loop (bad) js mov fldl in jg cs xor and bound mov jg xchg xchg dec push mov add mov push daa bnd pop in out movsb jg jae lds pop cmpl ss inc lret inc (bad) jg das xchg lcall mov adc jg (bad) or inc add sbb push imul jg mov ret add test xor dec in jg ds clc stos xor cmpb pop adc pop cmpsb dec imull jae call lahf outsl jg andb mov out sub ljmp jg js push pop mov je int3 xchg outsb jg dec mov sarl xchg inc jg jge (bad) aad lea dec shrb jb imul fbstp es push sbb je rorl (bad) jg (bad) mov mov sti in loopne mov call jg cmpsl dec clc lret gs ret out jg inc daa aam cmp (bad) std adc push scas jg aas inc arpl push push push shr gs or mov inc or fnstsw sbb mov jg out (bad) mov std jle push js mov (bad) or cwtl nop xchg rcrl inc mov (bad) out adc fcom mov pop mov push cli pop pop pop popa mov sarl adc mov fcoml fwait push rolb in (bad) jg stc dec inc icebp mulb mov inc in jg (bad) pop jmp dec popa cli imul outsl negl repnz xchg loopne lods incb xchg out clc add sbb insl dec leave dec ja mov mov cmp call push jle lock push jg jae aad pop cld mov rclb mov fwait sti inc (bad) lret (bad) mov and ret push ds sub (bad) dec add cmp pop dec push jg (bad) test adc inc loope or xor cmp inc and sti or xor (bad) mov pop mov mov jg cmpsl adc idivl out (bad) mov jg in lret push xchg (bad) fs inc dec rolb sub dec jg or sub cs mov mov pop repnz dec jnp and mov mov sti dec mov push jg inc lds mov fstpt sbb xchg divl mov pop jno test aas sub mov inc into inc jg mov fwait mov popf aas cmc (bad) xor pop arpl jg cli fdivrs mov loopne pop adc add stc jno pop cwtl int arpl xchg jg xchg movsb pop shll (bad) xor outsl sbb inc mov mov repz sbb pushf push jns mov int movsl adc cld aad mov aad sarb in sbb int (bad) cld dec ret jg icebp gs push sbb ror ja nop inc imul jb push xchg sti mov imul fnstcw dec (bad) or jg push lcall jg dec dec pop adc cmpsl jg pop fs ret bnd in daa sahf popa mov jg cmp xchg dec jg sbb or pop and add out ss jg push jp (bad) mov lret adc jg int or sub pop inc jae out sti cwtl add call mov repz jno jg pop jge sbb jg adc ja adcl jg pop insb out nop push mov fldt xchg dec mov mov cltd jmp loop pop mov pop mov dec mov mov inc xchg call and jae test cmp inc push stos imul in jo inc jg adc sub adc inc sub out mov jge push lea push pop scas sbb xor dec cmp adc mov in push (bad) mov iret xchg add roll jg loope and mov jg data16 sti mov xchg xor lock sbb inc pop inc and jg test push or jg fimull popf mov enter sub mov mov (bad) xor cmp or stos lock ljmp (bad) lahf jg sti cmp inc xor mov inc mov cs xor ret xchg popf inc inc pop mov xchg xor mov dec cmc jne mov xor cmpsl mov fidivrl jno (bad) push or fisub jg and push add out adc sarl push cmp dec add sti (bad) xor out jo xchg pop test pop (bad) mov addl or mov mov jg hlt ret pop xlat pop pop mov mov mov add mov in jg inc xor dec aad add sti call adc dec adc dec pushf div test (bad) aas (bad) adc fdivl cmp stos stos jle push cmp ss push pop mov cmp pop sahf cli decb es and lcall iret lock mov sbb push xor leave (bad) push mov and aas mov fisttp insb jg pop mov jae mov fwait nop das sarb (bad) mov in dec pop stc loop imul pop icebp (bad) test in and in cmc pop lock loop cld jmp mov cmp ret mov rcll fld test cmp pop stos outsl mov add mov inc mov jg testb jg test movsb adcl jg xchg push icebp out push inc jg push mov popf pop pop notl cmp or test lea addr16 mov addr16 aaa dec rolb jg xor lock jl ljmp push insb popa imull mov mov jg pop inc adc cli sub or push jmp stos aam hlt stc push int or mov ja push adc jg jns sbb push jge mov mov sub sti popf jg sub cs jg mov or into push jg xchg gs call sbb or xchg insb jg (bad) cld repz jg lret cs jbe pop shlb mov pop dec fistpll inc ljmp mov mov test and mov les jg push lahf pop cltd loop jle enter mov mov test out mov jo mov (bad) ss das or fcompl xor add jg (bad) push scas pop mov into or inc jl jle fs mov pop and mov push sub stc divb mov mov jmp daa movsl jmp lahf jg sub psubw popf scas pop in cltd push jo ret jg or jmp xchg jg inc fstl outsb jle sbb jg cmc add or or xchg jg sub arpl sbb jg xchg (bad) adc inc xor fimul inc divb xlat jmp jg xor loope leave jae jg pop ret ja and inc cmp scas jo and mov lods ficoml stc jns ss mov add push scas loope fldcw lahf jae cs jl pop mov pop inc jg out mov addr16 arpl cmpsb mov fs and inc sbb jg sub sarl jl aad iret xchg dec ds mov icebp pop dec sti and ja ja sbb test leave jg xlat sub mov outsl push cmp ficomp inc mov adc es gs jg xchg movsb (bad) mov shrl cs jg ds push jno cltd jg xlat adc jo jle lea outsl rorb and push or add xchg xchg sarl jg mov (bad) mov imul test xchg daa sub pusha insb ret push jecxz mov jnp cmp out dec ret pop add test popa sub pop add hlt jg pop cwtl fmuls xor sub jle addr16 jb test sbbb dec sbb jg xchg (bad) lock into aad lods mov movsb add sbb push les out cwtl lret jg test push out movsb push stos jg in xlat sbb fucomi js or ljmp fdivrl outsb cmc jg xchg mov jg mov sti mov sbb jecxz jle test xor xor push or inc idivb fstpl sbb and pop fsubrs cmc dec inc xor sbb out fnstcw mov imul mov aam dec inc push xchg cmp loopne lea lods addr16 jg lea dec jmp xchg cld cs clc or push loopne inc fdivrl ss xor imul inc sti cld enter les and and add insl add daa fcomp jge jle,pt mov out je cmp dec mov cs inc int pop jg in add xchg adc jo dec inc sub mov sahf pop xor xchg add push xlat sbb ja dec ret mov pop cwtl sarb loopne push lret iret lcall roll aad jae jle ret cld jg ret fwait mov clc add lods cmc push dec mov sub adc or ja xchg loop jg or stos in (bad) mov cmp mov stos inc push adc movsb cld lret call push movsl ss bswap or adc jg xor imul mov mov xor (bad) dec ja insb xchg jg push gs jae sti mov push ret into into xchg clc daa cwtl cmp jg add in aas pop mov cmc dec cmp jg lods xchg loop les outsl mov pop add jg dec jb repnz push popa jg push bound into jbe push mov sti ja inc mov jg arpl neg iret lods ret lret mov int cmp sarb aas cmp sub sub or test and (bad) aas mov mov jg sub ret dec scas repnz jg cmpsl jno inc test mov dec imul add lods gs sbb cltd inc mov jnp in insb jne jg scas adc jg mov pop and test or mov fcmovbe cmp test inc dec dec insb stos pop sti cmc jge dec push cmp outsb iret imull test dec push or sbb inc cwtl jg mov and jp push inc sub out stc cmp cmpsb inc mov dec (bad) pop jg dec add jg in dec dec sti push cmp loop mov dec pop ret xor cmp mov push xor cmpsb jg gs xor int jg inc ds loop or rol aas sub jmp jg cmpsl enter pop or out hlt and dec push sbb cmp outsl jno cs fiadd jg (bad) lods fdivl mov in inc notl mov jne dec and adcl shrl xchg dec ficom mov jg (bad) es test sbb (bad) cmp add mov inc leave push and jg enter aas mov (bad) pop aaa lock add push mov sub push (bad) xor push fdivs bound nop out (bad) jg mov mov in adc dec xchg mov mov dec xchg into inc icebp xchg jl cmp push lods dec (bad) push mov (bad) cs sub dec daa cld push jg or push scas push lahf repz cs inc xchg ret jg cmpsl in out push mov (bad) je cli ret int sub loop push xor sar aaa xchg push fstpl lahf mov rcrl lcall jg cmp push andl cmp (bad) pop or loope and jg xlat stc xor dec dec add ficompl jg fs ljmp aas sbb ret shr ss inc inc jg xor or test pop inc insb adc lea test pusha jb jmp push aas (bad) xchg sbb fdivl ja outsb insl ljmp pop dec or jg push jmp jg jmp enter cmc stc popl mov pop xor lods cwtl mov in add adc or (bad) aas add icebp dec in pusha cmp in es nop lea mov movsl jg outsl sub dec ljmp pop pop inc repz jg push push mov popa dec mov jns in sbb cmp dec call xor inc inc cltd and pop push jg (bad) sbbl mov jg push scas mov aas loope add xlat sub pop popf (bad) mov scas inc sahf scas mov cmp dec aad pop movsb jg dec sahf and jno or fbld sti add cld xchg pop xor push in jg jbe sub lcall inc jg into aam inc or mov outsl adc mov pushf call sbb push stos int3 jmp into js mov (bad) sar movsl repz movsl xchg and (bad) pop cmpsb jg es push sti nop mov pop push push sahf adc add cmp divl shll loop or and mov inc fs push into sarb jbe lret shlb test aam cmp repz add adc and dec xchg (bad) pop jne aas lret test cltd outsb pop stc out jg add hlt fwait push jmp mov jae (bad) xorl sbb mov imul (bad) xor roll jecxz aam xchg test (bad) test sub ss aas mov mov push mov aaa arpl jmp and sbb inc inc jg fnop cmpsb pop in mov xchg repnz push inc and jmp arpl in jg out dec mov lcall stos and scas cmp les scas test jg insl stos cli or rolb mov lods fisubr lret cmp dec rclb pop dec (bad) into xor jle jg les gs dec stc and fsubr mov jg mov inc jbe jg call mov push daa dec out repnz push xor jg sbb (bad) jg inc clc xor ret hlt mov loop,pt push xor scas mov out push jl push outsb cmc jg insl fiadd cmpsl repz insl test jne or enter ljmp loope xchg dec test nop jg dec lret cmp jg roll in mov pop or jg movsb inc lds mov mov iret hlt xor mov dec lods pop rorb mov mov cmpsl lret jg call adc jg gs pusha mov push ret jle enter cmc out xor movb bound fidivrl pop push jmp ja push jg insl mov xor stos jecxz cmc xchg (bad) sub pop mov aas (bad) xor enter or sbb (bad) fiadd call (bad) insl jno in mov movsl pop jl xchg jg js jbe adc icebp jg lods aaa hlt lret mov cmp scas movsb jae negl inc pop lods sub js xor sub mov out stos dec sbb es gs mov adc in popa out daa sub addr16 sub loope xchg in test sahf jnp pusha arpl test rcll fdiv push push mov sbb out mov shrl inc dec jg int out bound jg xchg mov lcall sti mov lret inc jg push pop add loope xor add pop jg lock add mov fdivrs aaa lret das mov les xchg clc jg pop ljmp jns test js aas cwtl mov lret xchg fisttpl outsl bound and mov jmp xchg sarb test cltd daa nop sbb pop xchg mov mov fisubl jl sti mov jl sti adc mov pop xchg jg in jae pop cmc xchg jg jle mov loopne dec imul cmpl adc stos popf out outsl cmp jg arpl inc and mov mov imul add mov inc jmp dec les (bad) repz (bad) out lock aaa jg adc cmp push mov divb inc bound mov jp jg int mov bnd sbb sarl jecxz orl pop or in inc push cmp jg push mov iret cmp pop xchg pusha push mov dec call aam xor pop dec sti push mov (bad) ljmp mov and pop sub addr16 icebp das aas mov pop pushf inc lods mov push jg inc sti shl mov pop test mov pop pop add inc xchg add jg enter fildl (bad) sti movsl (bad) sbb pop mov xor lea mov push outsb int or faddl xlat cltd cld (bad) mov aaa arpl mov jno rcrb rorl xor je jg (bad) scas xor pop dec insb fsubl pusha jg loopne das mov pushl push movsb imul stos inc daa scas mov jg add test (bad) popf sub fwait hlt insb mov or cmp sahf mov xor push out pop mov inc pop jg cmpl pop (bad) (bad) es inc sahf fdivrl dec imul jg outsb sub ret idivb dec xchg int3 xor popf xchg aas pusha xor push repnz test inc push xchg lret (bad) and mov arpl add xor lret fisttpll and js (bad) bnd les dec cmp iret jg leave pop fsubr into mov stos loopne and mov lea dec jg xor xchg cmpsb jg enter adc imul lret push mov jbe jl sbb or xor fcoms cmp pop pop pop ret mov xor cmp dec jg jae sbb sub ret or pop jae jmp pop mov push xor out sti cmc mov fldenv out mov mov xor mov mov call leave xlat jg xchg dec (bad) cmc and jg adc fidivl loopne das inc sub out pop fstpt xor adc sahf mov dec sub test xchg pop adc inc (bad) std fcoml int3 dec ret inc cld mov mov dec sbb push bound mov dec aas out pop mov aaa push dec jle jg loopne mov lret sbb roll xchg hlt das mov aaa fdiv push test jg xor mov jg pusha lds jg jne push jnp mov mov lods xchg outsl jo jp mov mov rclb clc lock (bad) mov jae inc cmp popa int3 inc cli loopne pop push gs sahf xor lods jg jnp mov jg hlt inc pop scas adc and jno and pusha jg in sub jge mov js sub jg xlat xchg and mov out and push leave push adc jg lea fidivr dec push in imul ret sub or mov int adc mov push mov sbb lods rcll clc js vsubss popf xchg lcall mov add mov sub jg fnstsw lret sbb cmp mov cs jg ljmp jg fmull mov or into jg outsl dec push je mov inc dec cmp jmp sti movsb rcrl in mov loope cmp push mov mov loop outsl movsb inc dec mov lds nop stos inc insl push mov repz jbe mov (bad) fiaddl lds dec test jg mov icebp or imul and cmp out cmp cmc sub dec les rcl mov mov jbe in cmpsl mov mov pop push aaa cmp cmc loopne dec je outsl cmp mov mov or mov scas xchg push or cmovae sti inc test push mov rorl jp fadds push or jg or adc std inc dec jg push bound jg orl or lock pop rcrl mov push jg pop jae mov rorb test jg popf (bad) or aas pushf lods imul lret lcall and cld arpl daa jmp mov cmp pop sti mov push jae sbb mov cmp mov cmp push mov stos jg fisttp mov mov mov and pop dec mov sbb pop pop or xchg or gs bound pop test out leave sbb daa lods scas jecxz js jg mov adc cld out push jg mov lds lea or mov cld in push sahf cmpl cs int3 pop push push xchg and pop push enter jle fdivrl outsl sbb mov std sbb stos and ss iret mov fxtract push es inc jb mov mov dec pop mov adc adc add nop aam lahf bound addb addr16 push fldenv pop xor stc dec adc inc movsl push mov mov push fistp mov jg movsb inc xlat jns clc popa std mov dec fdivr in rcrb aas and mov jge clc push ja jae add addr16 mov jg mov mov jnp jg out leave icebp jne fdivrl rcrb inc pop jg sub mov aas fistl or jg push outsl sub jae mov repnz push (bad) lods sarb (bad) sub int3 aad and mov (bad) xlat dec and jg rclb jg hlt icebp push inc lret js in das outsl int3 (bad) pop add xchg jle jle sub pop jge lock jg pop gs xlat adc mov or mov inc jg stc pop push adc mov jg (bad) je sahf cltd in jg cmpsb mov aad outsb mov sbb divl or pop jg add repnz aam xchg rcrl jns or adc pop adc cmpsb scas mov cmp push test dec (bad) mov in inc pop call jg jae loopne dec jg dec dec in outsb test jg xlat fisubr mov inc jg add cmp push jg je test fiaddl in mov ljmp rcr adc jg pop xchg and add fidivrl insb sub das pop cmp test pop mov lret jg mov push inc push popa pop push pusha adc pop jg and jbe test jg inc mov int or sub in xor pop jg sbb sub dec mov inc in mov jg addl in pushf hlt lahf out cltd mov mov inc sbb sti push sbb js aam add pop mov iret sbb lods jg add adc hlt mov jg sbbb or push fisubrl pop mov jg in inc jb leave outsb jg js icebp jbe aad jg and cli sbb inc iret call jg and or mov sbb das mov or pushf inc dec mov jp test ss dec aaa inc scas cmp lods push push lock cwtl js cmpsl xchg (bad) in lcall fmull out push lret pop insb cmp mov pop push fs inc aas icebp jg leave or fstpt mov add or stc inc dec adc adc (bad) sti (bad) mov jnp mov jg cmp repz jns jg xchg sub lock cmp inc fsts loope js ds into dec xor inc fdivrs add adc lea mov inc mov (bad) sahf push cmpxchg fidivrl fstl cmpsb scas or (bad) sbb (bad) repz xchg sti hlt adc or ljmp jg push testl mov sbb std jg pop xchg cs (bad) jo movsb aas lret bound (bad) jp inc cmp ss or sti pop ds fldt jecxz inc cmpsb jmp inc jg push jcxz dec pop mov cmpsl mov jnp jp jg lods mov sub aad enter mov lahf jmp aam cmp add xor out xchg in inc (bad) icebp mov mov ret push mov lock mov lret pop shrb add jg cmpsb cmp jmp mov out and jae push jg lock das scas mov or sub call cmp (bad) pop sbb xchg sti stos jb jae adc data16 cld adcl sahf inc jg add out add loope cmp or sbb inc (bad) lcall pop jnp pop fsubrl dec sub lods push scas jle and ficomp mov inc pop add lea hlt add les (bad) sti xor dec jo ret in fcomip mov fucom push mov push mov (bad) mov jns pop push xchg (bad) fsubrl push mov xchg rorl inc add sahf jg imul jg inc pop cwtl daa add inc lock (bad) loope xor ret adc sbb jg pop jl (bad) aam test push test pop gs dec push jg sub add sahf in imul test cmp push push ds mov popa jno fldcw loop (bad) pop jg adc pop scas and jno adc jg pop ljmp negl xor mov scas inc dec mov mov gs jge js cs mov fistl sarb call mov jg mov popa push jl inc mov cli mov jg lods loope mov out mov pop (bad) stos inc lcall lea ljmp cmp add fs mov out sub aaa fimull pop xor add mov mov insl nop adc mov fs mov adc out jle nop dec cmp jae enter dec int3 sbb inc clc loopne jg jne push jg lret mov lock scas mov fnstsw fadd lret xchg jno out clc sbb sbb test jg jge xor or es dec lea mov sub scas lods (bad) xchg movsb aas shrl pop cmp jg sub xchg mov dec icebp mov add mov push cmc jle dec adcb fs int movsl js sub popf jne int3 mov xor addr16 pop jg push fcmovnb cmp push fdivrl roll mov mov push rorl ss out negl mov into adc divl ja push jno fdivrp std pop push jae mov jg sbb idivl inc out (bad) mov mov push push xor push clc inc inc mov xchg xchg push add jmp inc imulb je or jg leave push push pop add sub inc mov add in rclb insl ljmp xor inc out jg sbb movb (bad) sti sbb xor sbb adc idivl or test jg daa jle fwait xor out jg test or fscale xchg daa lock pop bnd mov pop subl mov dec dec ljmp jle dec push pop add arpl push jge pop (bad) jns mov and movsl outsb loop or mov ds or dec jmp cwtl aad sahf (bad) scas mov xchg aas pop lahf jle pop loopnew lret dec push dec enter adc cs mov dec xor fimul lock mov jnp pop push jb loop inc pop call (bad) iret ret pop sub push divl inc mov leave jmp lock mov sub out mov addr16 jg push and jb xchg incl mov dec lret xor imul push (bad) repnz cmp mov cmp scas and adc int3 push mov mov adc adc jmp aas add jne ficomp pop inc fld jno pop push adc nop pop add imul adc cmp dec std ljmp movsb cltd cwtl jno and sarb inc jge ret cmp sub mov dec fs (bad) insb jle pop mov dec sub lods mov inc dec xchg mov cltd add push and enter enter jg or sbb sub and mov jg in xchg inc (bad) and scas ret outsl pop xchg push push xlat arpl mov sti push inc and jg sub mov mov ljmp inc int3 pop cmpsb aad push xor jns sub iret adc jmp in xchg stos mov add and fs adc in out jecxz mov pop pop lahf mov ret lahf jg loop sarl pop jg and mov jg mov add (bad) cld inc dec add or std jecxz dec pop ja add in hlt test dec pop aad pusha andl jg inc or movsl dec arpl cmpsb mov jae cltd and push mov out (bad) (bad) jg fdivs jmp jg cmp xchg push add add dec mov or (bad) jmp mov into push flds xor testb xorl cwtl jg cmp mov jg ja stos lods adc xchg call sbb rcl pop mov imul push sub mov into add rorl jg daa aas test out mov sub mov in jg push mov insb ds sbb cmp dec xchg leave cli mov jg cmpsl sti jecxz ljmp pop in jl cmp clc inc daa jg aad mov jge addr16 mov jg cli cmp cltd and jg xchg sarl push add into aaa repnz jnp jg shll sahf add or ret test (bad) loopne pop mov add cmpsl jg push out mov mov jg dec mov cli jg push jo mov push int3 sbb xor mov lea es jg jmp xor (bad) mov imul xchg xchg addb cld outsl jg push js fsubs dec jg negl test xchg das mov adc inc mov ret mulb xor cmp test cmc mov cs mov (bad) imul outsl js inc jg js je jge pusha jg gs mov imul daa jg scas inc lret add insl mov or pusha mov inc mov cmp jg mov xchg xor jg or icebp jg push inc iret fldt dec je sub jl out notl push xchg sbb cs mov ss gs push adc fbld jnp xor out jg sub pop mov fdivl adc push repnz cmp mov mov lret jg popa jb loopne cmp sti or (bad) cwtl and xor movsb pushf jl push dec stc pop inc fistl loop push xchg jg cwtl imul pop (bad) pop cmpsb mov adc fstpt nop adc pop ja inc pusha and lods out mov jg or jp mov dec ret xorl jge xor rcl lock jno mov and adc inc xchg fwait jg xlat sbb jg in cs je cmp mov pop addr16 sarl ja inc adc cmc mov mov mov jo cld nop mov push sub dec jp cltd mov (bad) pop jbe mov test and dec mov sub xor jg clc lret lds mov mov int lcall jg in (bad) (bad) stc (bad) xchg adc cltd shrl (bad) push pop dec inc arpl inc mov js or pusha pop jmp add fisub negl mov dec dec (bad) popf cmp push lahf aas (bad) and mov insl sbb out fld fdivrs pop pop push iret call jg lret fimul and xchg scas cmp movsb sti push fldcw sahf push enter rorb pop (bad) pop je or scas jg ljmp movsb popa arpl lods mov push dec test cmpsl jmp jg aad mov fcmovnu das jg or leave pop adc push jnp cmp fwait ja sub xchg fist stos push mov jb jne int imul inc pushf mov sbb cmp addr16 mov sahf xor push mov inc adc add fiaddl lock cwtl mov push xchg push mov xchg (bad) sub jg es jns shll mov inc push add ret mov jg imul mov ss jno inc pop jmp out jg psubq out mov test (bad) sub and mov add mov fs popf cmp push inc inc and jg jb rorb or ss ds dec jae cli inc mov and dec inc sub js mov cwtl pusha mov jg movsl sub stos sbb mov xchg (bad) fstl sti sub dec inc push jg repnz in mov xchg jbe mov movsl cmc push repnz add lea or fwait jg stos xchg sub sbb xor rcll scas aas pop sbb mov inc in jg repz xlat add mov cld cmp and dec mov xor addr16 add cmpsl cmp arpl mov xchg cmp sti mov sub mov iret or push pusha mov push outsb mov dec inc add out and jge and fwait out ljmp sti rcrl (bad) push and jg dec mov and scas movb pop repnz lahf add adc scas and idiv je fnop orb xor jg scas fsubrp pop push fwait sti aas (bad) and bound jg dec (bad) out test and popa jg pop push in sarb outsb pop ret inc xchg push rcl xchg les scas and jbe lods inc add icebp cmp dec pop fs xchg jne adc mov jg sbb fcmove adc ret jg out sub out mov mov fs ljmp xchg sbb fwait mov ds or aad out cmc or and xor ss jns jbe inc jg xor sbb clc jns ds push dec inc cmp mov test jp inc fmul movsl jg lcall jg sub hlt jg in pop mov (bad) mov shrl or mov shrb repnz xchg int int3 pop add movsb stos pop fcoms inc imul cld (bad) jno cvttps2pi popa add fcoms dec cltd imul shrb inc in or push mov mov inc push jg test insb jl imulb mov fs or inc sbb sarl in scas (bad) imul add mov (bad) adc stos mov jg or and pop cs xor fiaddl notl jo outsl jg sub adc dec decl xchg mov fdivrs cli cs cmpsb out mov jecxz fistl cmp pop hlt push pop inc push pusha imul sti push xor rolb xor fdivl dec and jne cmp mov fdivrl mov mov es mov js push dec outsl aaa add dec jg mov fadds lods fwait mov dec ss jg jp and (bad) enter mov daa arpl pusha jg int jbe add dec add add js stc jg (bad) cmc inc lret cmpsl mov jmp push pop (bad) pop cmc (bad) call pop dec xor je mov test fcoms xchg xor pop jae cmc dec xor add pop push (bad) xor mov frstor test insl push das fiadd jg dec (bad) or mov mov out cmp cmp jae popw jg bound sarl aam inc (bad) adc cli test push out shll std mov mov mov leave sub dec fcomp lret xchg push ret hlt jg mov rcrl stc push mov mov nop mov out mov mov imul adc jle stos push or outsl sbb lcall jg fnstenv dec mov les lock std call mov repz fwait cld icebp out inc dec or pop sbb pushf push daa xor in mov adc fpatan pop push mov (bad) lret pop mov jl das in xor push out repz push pop dec jle xchg jg sub lods inc jo gs cmp pushf cmp mov push dec mov cmp dec pusha sub je cmpsl stc jg pop icebp xchg mov jg fnstenv jne mov mov aas add jg mov push out sti and adc jg (bad) lcall out cmp jbe,pt inc cli adc call and mov iret js jle push pop inc call push gs mov cmp jg cmpsb push fsubrs push mov arpl addl cmc ja sbb inc add pop scas or (bad) incl mov sub pop jg or cmc addr16 sub add sbb scas data16 jg mov xchg lods rolb mov sub insl jae (bad) aas (bad) sbb jno cmp les xor out or (bad) jg xchg dec mov stos jbe sti addl xchg cltd adc add sbb push fildl fwait iret movsl pop push lcall or xchg or pop pop test imul jg mov xor jmp mov sahf int dec add scas jg cmc into fbld fs jg leave xchg imul aas daa xchg sub jge aaa movsl ja aam mov loopne fstps fs push daa jg mov repnz sub fwait pop jg pop jecxz lcall and jg aad or pop mov push xchg sub cmp jg add dec mov add push loopne jg dec inc push das and xchg les jg roll push mov push pop jg add cltd jg or mov jg imul and fiadd shlb loop outsl rcll jne sbb mov dec sarl aas push or jg mov jg daa pop cltd in js jg cwtl clc (bad) orl pusha dec js imul xor into jg xchg lret test adcl aad dec pop push mov pusha cmp (bad) adc and bound dec jb rcrl out dec aaa mov (bad) xchg pop mov jg mov and jmp rorl mov adc and (bad) loope mov (bad) jg mov cmpsb sub xor mov sub arpl mov loopne jg sub ret ds in loope lcall pop negl faddp pop push das enter mov popa cmpsb mov lahf mov icebp (bad) arpl push daa adc xor dec jo adc (bad) push lods xor std dec fimull mov add in jle and insb dec inc (bad) sbb push pop repnz sub in add mov (bad) mov outsl adc loope pop xchg mov cltd dec and jg mov jg mov push cmpsb sbb jg cwtl outsl popf arpl mov dec movswl das cltd jg lret push or sub hlt mov mov shll xchg mov aas loop and fsubr jg lret sub push mov pop pop mov scas jmp cmp data16 cmp test xchg imul out int3 es in jg lea adc lods push inc loop movsl ja js lcall fdivs mov mov scas iret jg jo sahf data16 insb jg xchg ret bound stc inc fnstsw adc mov dec (bad) aas and fdivl les push jg jnp fstpt inc repz jp cwtl test enter sub lods ret repnz sbb pusha pop add or or jg (bad) mov xor push std jl mov xchg popa jg xchg jp sbb xchg and fimul inc mov adc xchg push ljmp inc cmpsb mov dec dec nop jmp jg movb jle mov int jge jg push xchg into lods dec icebp inc jg (bad) mov mov dec xor sti fnstcw xchg rclb jg addr16 lret pusha jg ja movsb aam and mov or dec add (bad) pop outsl pop adc imul jmp aas es push dec enter pop int3 pop mov push or dec dec jp inc mov frstor sarb aas repz lret lcall inc cltd daa sahf push ja inc (bad) fstpt out xchg ds adc dec fidiv fild xor pop (bad) dec lret cmp jb jg imul mov (bad) xchg stc push jg out scas ds push pop jg push repz (bad) xchg es mov mov pop jg and fwait mov sub cmp dec sub out add push mov cld ja sub inc aas (bad) out scas xlat out ja fstpt mov push dec sub sti cmp shrl je mov xchg insb aam jg cmpsl xchg push test insl sbb jg fcom xor lds jg sub jns lods sahf iret nop mov out and pop add xor inc xchg jnp pop cltd or sti add ljmp jg add lock loop dec jle push (bad) lret xchg (bad) xchg xchg rcl repz sbb mov les jg sbb add cmp sahf push insb imul adc xor mov mov pop popa fiadd xor jmp jo lret inc dec sub inc imul ftst sbb push pop pop (bad) xchg stos jb inc jle mov dec or adcb push out xor sti pusha add movsb cmc jo jg das jnp nop push aam jg adc add jg int3 and outsb in jg clc ret xchg cmp jp pop sub push fldcw sti cs inc (bad) jnp jg push mov cs or xchg mov cltd sbb adc add inc or pusha mov aaa sub ret int3 lock mov xor sbb push xchg test adc xlat jg fstpt or dec repz jbe out popa js push lods dec stc or ds jg fs ljmp fnstcw cmp xor push cmp inc imul faddl insl mov push pop add jg xor lret add jle scas pop ret pop dec jne jg out push push cmp imul addr16 fdivrl mov (bad) (bad) cmovg dec icebp or jmp xchg cmpsl push cmp pop mov xor mov imul mov scas repz xlat gs jg jae mov jg dec xchg jg pop push add cmp leave dec mov jnp jg or int3 fidivr xor xor pop mov js mov outsl iret pop sbb jg pop or movsl sub inc jnp int3 inc mov xor xchg je cwtl ja outsb pop add rep jg out pop rclb xor into scas inc mov inc mov out pop lods and jg (bad) pop gs xchg mov pop dec bound mov mov frstor pop jnp mov in or aas pop shll inc mov mov inc and js cld push and jge imul sub sub inc test or sti cmp pushf pop cld cmp pop jg xchg fidiv mov ror jge pop (bad) push sbb (bad) aad jg sbb ljmp (bad) (bad) mov adc data16 jg je pushl faddl aas xor adc jne mov sbb push aad cmp jp das xorb rcrl out sub out fsubrp jae fs stc jg enter popf decb pop pop xchg pop dec xchg cmp xor push and in loop sbb add inc mov mov inc in dec mov in adc jg loop inc ja addr16 jg cld cmp arpl inc cmp lahf pop mov (bad) jge pop fsubs mov pop aaa sbb jg cli mov jg (bad) lret in loop jg push arpl jg mov cmpsb mov jbe xchg arpl addr16 mov pop pop and jmp xor ret aad jmp cld cmp dec mov jg adc sarl scas xchg out inc les jg and push out mov lock das pop aas xchg fwait and mov iret cli cwtl sub js inc dec push jg std push jl mov lock mov fwait pop or mov inc addr16 imulw bound int3 adc pop jg (bad) xor jge inc shlb clc in les jg call roll fnstcw fs sarb gs ljmp xor jg enter cmp pop jg mov sub jg dec je push push hlt mov out mov xchg bound and icebp xchg inc jg rcll or fdivrs aam inc and cmc mov pop stos stc push jg inc adc mov xor jo mov into dec stc cmpsl adc cmpsl dec sub mov push mov lods cmpsb or jns mov arpl jg jmp mov mov outsl sbb inc jg and sarl hlt (bad) nop ds lods bound ss add xor mov lret out pop sarl mov sbb inc cmp out in dec mov xor sub addl and cmc pop fcomps jl outsb mov jge loopne sub jg push or jg ret xor popa insl jg adc jg sti sbb push lds lahf push jmp mov jg stos jmp mov mov icebp sub jg adc or notl mov repz mov popa addr16 sbb xchg test or xor sahf jg (bad) jb lret jg and scas mov int3 inc in or aas sbb push push ss mov jo jg call and int lds out pop push insl idivb sahf insb xchg xor aad mov int sbb add xchg jg loopne out ret mov inc aas clc stc add shll push fsubr xchg jg pop xchg lock lods js ss in jg xor xchg out jg insl dec nop mov inc jg,pn inc lret xor push push mov inc stos jg (bad) mov jp (bad) or push test jg data16 dec pop cmp jg mov pop sbb dec (bad) and lods xchg dec notl push sub js pop mov pop push mov pop fwait iret sti sarl movsl dec inc mov jo insb pop cmp mov mov pop orl enter adc sti and adc dec out cltd (bad) cmp jbe cmp mov nop adc dec mov jg push cmp jbe dec pop jg sub mov mov insb jg mov cmp pop jb jg fmul push add daa jg stc rcr jle aaa add ljmp jg ret inc hlt outsb aad and scas pop add into jg or incb inc mov sub jg lahf in xchg sub into aas scas lret sbb pushl shll rcr insl repnz add aas aad fisubrl popa pop pop popfw or jg jb mov lods dec mov add lcall pop jg sbb xchg pop jecxz movsl mov jg pop jae jae mov push std out fcoml aas mov push dec inc mov sbb add cmpb inc mov jg mov jnp cmp cmpsb jg add lods jg pushf test mov (bad) jg pop dec cltd les mov fldt mov push pop ss arpl jg fbstp mov mov mov loope dec and aas pop jmp nop sub es int3 mov jae mov sbbl jge mov dec lods stc outsb jns mov jg xor mov jnp repnz ds push mov sbb aas sti mov push (bad) ljmp xchg cmp xor sub push dec iret xchg ss pop jg fsts xor aad mov push dec pusha inc jg lods fs mov jno xlat push mov das cmp mov fstpt out jne xor mov inc add or (bad) push fidivr dec test cs push and pop mov adc addr16 push cmp jg or mov cmp xchg imul cld jp push xor sbb js push nop jg mov mov aas cltd scas sbb push loop dec jne jg insb das jbe pop les jg shrb and scas inc loop lahf jg lock inc popf jbe jg sub data16 mov xor imul mov orl jg mov sbb push dec aaa loop aas or das les mov add cmpsl sahf fmuls jl lds loope jg push sbb push cmp mov push xor movsb xor lock mov js out into xchg mov mov cmp mov jg (bad) iret repz mov test mov adc insb fs out push (bad) xor xorb dec and fmul lahf mov mov mov dec cmpsl in fcmovb lret xchg cmp jg adc push inc pushf mov pusha dec (bad) pop or mov push scas movsb jp or jg int3 push jg loop daa or outsb and aas or es rcrb cwtl (bad) dec jge imul mov js mov or jae and cmpsl jg mov xorl sub pop pushf jne out jg push xor mov mov outsl icebp mov mov out popa mov push xlat (bad) and gs pop sarl shl push jg dec outsl fwait cmp idivl jg nop mov jg and ret in inc loopne adc popf push sub push into aam add decl dec clc pop mov xchg adc lds adc aaa bound dec xor sbb mov pushf aas loope jle int3 lods rolb push mov inc test loop and jl dec adc jg cmc rcrb dec or jg pushf add mov in pusha inc or jae insb mov add cld inc outsb jg arpl sarl or outsl enter pop jg sbb cmc loop movsb jns mov jae jae xchg std leave mov pushf addr16 out out test and scas add pop jg cmp insl pop sti mov jmp cmp push push jae pop jg lret xchg cmpsl ffree jg mov movsb xor push or fnstcw cmp int3 iret cmp mov lds in fstp stos inc pop hlt sub insb sub push (bad) xor cld faddl insb lret push mov or test (bad) pop sbb data16 jno aam dec mov leave dec dec or lcall cli div js fcmove mov sub imul mov mov rorb mov jg add rcll jmp hlt xor pop sub xlat and inc dec cmp aas sbb mov sbb leave dec nop fidivr pcmpgtw mov add cwtl inc leave jg in and (bad) stos jb adc aas stos in mov popf cmp sub out jmp mov cmp jecxz stos mov fiaddl pop dec lock xchg push cmp xlat loopne push (bad) dec bound out out outsb sbb pop fnstenv jg jle sar mov ret scas dec jbe sarl fdivrl data16 push js iret push dec and sub jg jae mov int3 jp jno ss and mov lock jb jg cmp stos pop fwait push or int dec (bad) int3 adc sub jg aaa push mov jg or push sar fwait or in jg or mov cmpsl (bad) adc fwait mov psrld or ss xor inc jecxz cmp pop jg xor mov into ds inc sub nop lock adc rep and mov fiaddl jg jle (bad) fnsave loopne mov cmp inc fdivrl pusha pop inc (bad) mov mov daa push add jg mov sti sbb std in xchg mulb add (bad) cs push jg xor adc add mov fstl insb loop jg pop inc or imul dec mov stc mov repnz repz sbb mov push (bad) xchg in scas roll push mov repz inc test outsb arpl (bad) (bad) and ds push sbb subl mov jo jg and xor xchg insl cmp aas test pop mov add mov xor mov gs jg mov jg je negl xchg mov js jg inc xchg movsb mov xchg ljmp push dec push test jg mov sbb or dec fidivrl adc test jg xor aaa mov inc test notl lods dec pop cmpsl adc adcl iret and inc fstpl dec aam xor dec mov jg (bad) mov jg lods clc jecxz add dec inc mov adc fidivr cs or ret icebp lret mov pop mov cmp aad push fdivrl repnz and adc call fldenv lcall xchg mov (bad) pop add push mov lahf push pop push movsb pop jg or jg fisubl loopne out call inc xlat xor xor jp mov lods xchg mov xchg data16 mov cs out mov dec and test add jbe or jg or cmp (bad) mov aaa outsl mov fwait test (bad) sbb push out jg in fidivrl add ja dec arpl popf pop ss mov mov xor jg xor aam ja mov fwait mov mov jg add sub jg jl xchg es add inc fimul in outsl jg call cmp outsb imul or test ljmp hlt data16 xor or imul mov push push mov cmp mov push das pop mov mov int3 dec push scas add pop or pop xchg jg mov int3 xlat jg pop icebp cmp push jnp and pop push insl pusha arpl push add ja bound push xchg sar jnp movsl mov xchg mov sbb mov or mov mov test dec jecxz je adc add aas pop xchg test imul mov add lock dec negl jg (bad) push aaa cmp add jg pop ss hlt add inc jle lcall mov movl sarl sti and arpl pop jecxz sbb mov mov xor xchg jne sub or aaa pop in frstor push inc aas dec int3 fs mov dec (bad) xor add addr16 sub mov or ss out jg cmpsb loope and test enter aad pop push lods ljmp and jno inc rclb int3 xchg mov imul data16 or lahf dec sarb inc add push outsb push arpl jg pushf out jecxz negl jg jnp pop cli test sub aam or jns clc mov inc pop lahf (bad) adc cmp jb jg loopne ficomp jecxz lcall hlt scas add xlat pop sub aad push pusha test push (bad) jmp popa jg jae and inc push mov out cld fdivrp pop (bad) sbb sub dec sbb int std jg and cmpsl (bad) sub push jbe jge mov dec add jg add sbb jle leave aam repnz cmpsb test jmp rolb repz fbstp ret sub je mov and jg cmpsl push push movsb push rorl loope lahf mov repnz rorl cmp out cmpsb es cmp js in lods push ret pushf fstl jg in scas jp xor adc jmp mov jg data16 inc jg add jle out inc icebp aas sbb fisttpl inc sub test imul rcll add jg mov faddl jg mov sti in mov dec aas add sub test adc cli dec jg das out pushf pop stc and jg pop clc mov mov fdivrs jg jp sbb testb xchg and pop xor pop xor scas adc mov cmp jg (bad) (bad) pop jb or mov jecxz cwtl (bad) jae mov aam ret repnz cmp dec mov inc jmp js aas cld push push sub scas xchg jg sbb sub ja clc jge lcall xorl (bad) aaa mov bnd jnp pop fstpl es jg je cmp imul addr16 inc mov dec addr16 mov (bad) aad sbb rol adc cmp or sbb or pop xor or je dec adc push shl jbe sub mov sbb in jg dec and inc pop cmp ds mov in dec sbb fwait mov push dec out mov push xchg mov and lcall (bad) in and popf push sbb jg ljmp xchg pop jge icebp popa pop push jg ret je adc mov mov cltd jg das rol or xor cwtl pop mov and sub lret stc fidivl or push popa adc dec addl aaa jnp xchg jg jae xor leave push cmpsb stc stc mov mov icebp adc pop clc sbb dec loop mov add jo and push lahf inc mov loope mov cli pushf inc pop and sub insl (bad) rolb mov rorl pop jnp orb shr jg mov adc shrb fidivr push xchg jg cmc dec xchg add jns in sbb inc mov jg imul inc fdivrl xrstors out mov stos aas sub xor xor push mov jne push mov fmuls or mov pop pop sbb ret jmp pop lcall jg mov mov icebp mov je inc adc pop fisubl subl scas add je pushf mov jg cmp insl jg push test call add sbb or push cmc mov pop pop jbe xor aas cmp push ds inc cmp bound jmp and es leave imul pop mov jecxz jg fiaddl fisubr sarb jg jmp mov sahf xchg jnp stc dec jb lret xor fistp mov push mov pop lds hlt xchg ds xor mov sti out lret stc ljmp (bad) test dec cmp (bad) es icebp jg je aad sub cltd test mov out mov aas (bad) mov jl ja mov xor xor jmp rcrl loopne jg call pop outsl sti inc or das dec mov scas push push add jl dec push repnz dec adc jg adc xor add cld cld xchg lods leave and mov out outsl (bad) jg repnz jg out jp mov mov push mov sub push jge dec testl loope popf icebp call inc sub lods jg jno push jg (bad) into add mulb adc add mov cmp rcrb jg and lods sub jmp cmp cwtl dec lds int lret mov jg adc loope gs outsl mov movsb dec adc scas pop cmp in push repnz fwait jg rorb inc jg jl int mov adc pop mov add inc jno scas jg inc lret pusha daa mov idivb pop sbb cmp push jno scas (bad) mov sarl add sti dec cmpsb adc cmc mov sti sub jg sub mov mov cmp jg in mov jnp and lock jg mov fincstp push inc jne mov (bad) mov scas sarb data16 fcomp cmpsb xlat bound push xchg andl in add xor cwtl jg xchg movsb stc add sub mov out cmpsl imul sbb mov xchg push jecxz ffree out imul pop add ret jg icebp sarl in js adc sub or xlat ffreep (bad) jg cli (bad) stos cmpsb add repnz pop sarl mov push jae jmp (bad) js addr16 outsb rcrb dec aaa mov xor rorl or pusha jne pop cmp test jg mov aad dec pop mov dec rorl xchg mov insl push shlb jg xor pop lret jg cmp shrl mov out aas add cld lret sti jnp dec sti push in adc ja jbe or or (bad) dec lret pop mov push stos sarb sbb in pusha cmc imul addl dec sub cli cmpsl out sti jg sahf in mov mov xchg push cwtl cmp mov movsw sub inc scas punpcklwd mov pop in dec pop and ret mov mov mov mov into push outsl loopne fnstcw pop jle sbb xchg xchg sub inc jecxz jg stos or jg in adc mov xor push xchg mov inc loopne xor fnsave jg add in cmp ret xor sbb or ljmp mov ret jae or (bad) bound jle (bad) hlt pop jno adc jg rcrb sub dec inc rclb or punpckldq jne sahf xchg shrl ja outsl (bad) xor (bad) adc push test jbe movswl cmp ds sti subl enter push mov ljmp out pop lahf scas rcrb and lods fwait (bad) ret loope mov and jbe das mov test mov jns outsl test enter cld mov jne push jle cmpb add ss cwtl jmp fnstsw mov add out or sub push sarb xlat dec lods rorl popf leave jl push mov jne mull popf aas (bad) shr je and pop sub jbe ds cmc iret aam mov or push sarl lds (bad) jno mov pushf and pop frstor lods mov daa xor pop push andl stos in pop iret jnp mov popa lds mov mov inc rcrb sahf mov adc push mov clc lock imull xchg test rcrl xchg pop push mov sahf inc xchg and lret pop popa jg addl aad cmp xchg sahf out out pop stos cwtl jg js push and clc sub dec outsl bswap push xlat stos adc jno sbb stc popf imul fidivrl addr16 mov sbb xchg sub push popa dec mov and mov cld std push mov test jg mov xchg cltd jg cmp jg push subl shlb pop notb inc pop stos push jg aas rorb out jne lock pushf cltd cmp jae dec jg mov aas jno aad push xor movsb or cmp inc cmpsb sti pop test sub mov mov (bad) (bad) mov imul cmp jae in imul jno jne push mov test faddl out mov xchg mov and shl add lds lock xor jg dec cs lea dec jle aad mov or loop cmp xchg iret ljmp mov mov bound stc adc (bad) pop loopne mov jb inc jmp jg leave aam maxps out loopne loop cmp sar jg xchg lods lahf (bad) add push pop dec stos ret and nop (bad) sub mov lock xor dec cmp add mov jg ja push mov xchg (bad) iret arpl jg push xchg ficomp fstpl inc pushf or pop inc aaa sbb mov popa jg out sti mov test add mov fldenv pop ret sar jg sbbb jno jg iret (bad) and sahf xor jg fistl in cmc dec add pop jmp scas pusha loope (bad) test push inc mov cli cmp sub sbb into lods jns sub (bad) fcoms lock pop sub lock out aas subb stos cltd in mov mov fstpl jg data16 push jecxz aas sub leave dec shrb movsl jg and pop in popa dec mov fwait pop test jo dec fnstenv aas mov push repnz mov pop mov int3 pop cs les inc loopne cmp jg mov stc push mov inc xchg mov push fnstsw sub popa rclb pop xchg incb fdivs mov lcall jg call lds mov enter pop and xchg mov insl int3 mov push fldl jae push lret push pop jo xchg mov push dec jmp scas and cltd icebp shr js test sar hlt (bad) sti mov stos fnstenv and aad pop fistp xor xor cmpb pop sub cmc (bad) outsb insb lahf cmp xchg and and xor insl fistpl pop sbb in jmp and inc ret jg call stc mov jmp cmpsl sub cltd fist inc rcrl hlt jg pushf jnp jae jp div mov (bad) mov ljmp pop shl and cmpl and jmp orb adc inc jg add decl cmc arpl mov add jg xchg in mov loop jg rcl pop jp jmp mov loope inc pop fimul les negl jg fsubrl pop dec xor push sub loop jmp pop inc popa mov jg mov cltd fidivr push int into (bad) xor jg imul aas arpl jg cltd lea adcl ss mov arpl mov out mov jecxz jnp fidivrl cld jg hlt xchg or lret mov dec ljmp and jg or mov ljmp aaa cmp or xor mov test ds lods mov sbb jo jg inc outsb sub out sbb xchg mov pop pop mov ss dec inc pop imulb xor dec addr16 lcall and jge addr16 popf (bad) cmpsl lret icebp std or inc fs aas mov jmp outsl lcall cmp mov mov or (bad) lods (bad) jg out int pop and jg ret inc adc mov loopne pop movb int3 pushf jb mov inc ja scas dec cmp sub fadds jb mov xchg sahf lock adc jns sarb lods jg scas jge inc lock xchg jg in (bad) fwait lea mov in sti xchg out (bad) and incb cwtl (bad) mov aam mov jb add hlt fstps jns cltd aas ds and sahf repz or jmp leave popf jg and lods xchg dec pop jne cmp push cli dec mov cmpsl jne xchg leave fidiv mov jns pop rorb out out inc or test ds stc jg push lds push pusha add mov outsl jae std dec mov aad shrb push insl or dec lret test mov jg cmc pusha push cmpsb mov imul inc fidivr push sub iret or mov inc popa cmp leave cmpsl jl stos jge push mov dec mov arpl pop jmp popf and fldt xchg mov leave sub test adc xchg lock inc pusha icebp outsl jg pop or mov xor nop and xor jg shrb lcall cmp adc jg ficompl dec mov gs fs cmp (bad) scas cld cmp xor ljmp mov mov xchg aas push mov hlt sbb (bad) js sbb outsl xor lret scas jg movsb mov hlt sbb mov aas xor xor jg sub jmp inc adc jl nop stos insb mov push inc jg test jae idiv inc mov popf iret ss std jg and inc jg and mov dec mov test pushf dec sub xchg loope jg cmp mov icebp mov pop rclb xor cwtl (bad) sub push jg mov mov mov fxch (bad) jb out jg add xchg xor sarb xlat (bad) idiv mov jnp pop scas dec pop jne fldcw sub daa sbb sub loop sub je lds movq pop lock add out test dec arpl ss roll fsts xor jg shl xor push test leave idivl cmpl jg inc (bad) test in arpl jg les adc jg daa fisubrl scas clc insl jg leave cs out lds jl (bad) fistl xchg jp mov jg lret sbb sbb jae xchg aas test sbb cmp clc in and arpl ljmp inc jbe inc adc loope mov or outsb push xor cmpl jmp negl fcompl insl arpl mov mov dec jecxz or sti xor out jg pusha scas (bad) jge mov jg aaa lahf ficomp push (bad) dec pop dec ljmp test outsb popf in sub xor mov ficompl scas push jp pop and test fnstcw es (bad) jne and aas push lahf sahf dec push inc (bad) lods inc jle mov sub fbstp xlat (bad) dec jl mull pusha inc popa jg mov mov pop or jmp lock sahf daa jecxz in push call or xor xchg push lds cmpsb mov lcall cmp pop jg and rcrb adc in xchg jg jbe push adc pop xor out mov ss test xor outsl fwait das jne rsm mov into or dec and pop push mov adc jb lock mov push mov adc push pop jno inc sarl pop push imul pop mov mov mov call icebp and mov mov mov into movsl int js inc jae nop icebp jp pop mov mov test sub adc aas adc push out lcall pop push pop cmc cmpsl dec lahf mov pop std cmp and xorb inc cmpsl aam mov das mov xor imul push jg loopne cltd je sahf and jg inc add out mov pushf mov jg or mov out das mov jg mov rep jg (bad) and or xchg push and cmp dec loope mov popf aam add aaa repnz (bad) (bad) dec xor lahf aas in ret out and push or stos sub lock ret (bad) jle iret dec mov es addr16 jg pop outsl fcomps bound push iret mov jbe std xchg xor mov push pop sbb cli push addr16 sub rol inc sbb and daa bound aas insl jg imull dec decl dec add inc pop push mov jno pop inc shll and imull push bound movsb lea imul adc push mov out xorl pop pushf sub adc arpl push pop jae add xor movsl fistp fcmovnb stos jg cs push pop aad mov decl pop fistl pop and orl jg push es mov jnp repnz xlat push jle call cmp and jle hlt and loope jg dec dec out das cmc mov mov mov xor jg orl jp (bad) into fisub jg fistpl jbe call push fldlg2 (bad) pop push int3 adc pop repnz mov dec lea lahf inc pop insl inc mov inc xchg subl dec xorl jnp adc xchg into out sarb mov jg mov lods outsb jg jne dec outsl mov mov movb or test (bad) pop mov test jg subb inc jno dec movsl out sti mov mov (bad) inc jo in inc scas adc testb inc sbb jg mov push lcall cmpsl call jg jae and jo sub jg ficom rcrb or mov jg push (bad) adc sub mov mov repz pop lods aas stc push scas imul jmp jg bound push push lret inc mov jo push in jecxz sbb in mov scas lret jns jg cs push mov inc dec jge push test mov mov sbb aam xchg stc jg xchg scas push fdivr mov push addr16 dec inc or shrl jno cltd fdivrs pop loopw dec mov jle cmp xchg std pop or mov out ret ds sub jg iret xor mov fmuls mov xchg icebp inc test cmp pusha cmc xchg jmp sub mov xchg xchg rep cmp cmpsb lahf movsb push push ficoml pushf (bad) mov or inc test adcl mov cwtl aam pop cmp in pop clc pop dec int fadds xor leave push or mov cmc icebp add jg hlt scas lcall ljmp xor mov cmp xor push and jg cmp mov jg rcll mov hlt jnp inc lret pop jno call movsl in pop outsl inc jl lock dec inc cmpsl cmc inc test (bad) sub pop push xchg pushf (bad) mov in pop dec sbb jnp jg lods movsb cltd popf mov (bad) mov test dec outsb jbe sbb mov jnp sub test imul pop sar adc stos sahf mov inc jg out out (bad) (bad) sar jg inc lret popf mov shrb out imul cltd inc fwait cmp jg cmc mov jecxz dec cmp mov mov stc movsb les jg enter pop jmp push in ja loope cmp jg dec xor dec clc push gs sar loope jne mov and test mov scas cmpsb dec pop sbb mov pusha push dec adc jg (bad) repnz les xchg push pop cltd sbb lea or cld mov sahf mov addr16 inc xor add mov inc insl push and pop mov jns enter mov xor push jg jp sub bnd dec (bad) fild pop jg sub outsb (bad) int3 inc jg,pt mov dec test xor repz mov push cld data16 dec xchg negl outsb push push mov inc mov dec jo add push aas pushf repnz adc cmp in and gs pop movsbl xor loopne jg adc pop repnz sar les aad push outsb test dec fsubrl rcll rep xchg dec movsb inc mov cmc (bad) jg (bad) cmc mov idivb sbb xor fsts and test std (bad) xor jno stc xlat dec xchg aas out pushf lock adc dec cmp inc or mov dec push pop sti mov sub xchg test sbbb pop (bad) rol fidivr push jg fwait std scas out mov cli jnp out jl jg mov mov jae adc push xor mov (bad) mov jg test xchg popa ljmp cld xchg push fsubr insl push data16 aad cltd dec pop jge into (bad) jg stc push fstpl push sub lock jg cmpsl dec movsl ret mov mov mov jecxz fwait jg jnp shr add jae test sbb fistpll aas imul dec mov mov insl add lret jg ds fistpll cmp mov mov popf mov insl stos pop pop mov jg sub lcall xchg cltd inc pop shr jg jge (bad) enter mov jg test sbb jg adc into cmc (bad) repz jle add jmp pushf dec sub jg cmpsb out cltd sahf rcl jg (bad) adc mov popa outsl ror sub mov rcrb jg (bad) notl pushf data16 jp les jbe imul mov dec dec push sbb push mov jnp gs jl mov cmp imul into mov jg fwait inc jo xor adc repnz cmp jg adc xchg jg lahf je add ret in int push jnp and leave jg fdiv and cmc stos mov adc jne pop aaa jmp outsl frstor mov sbb prefetch jg mov xchg inc push lods enter sahf int inc and sar jp dec xstore-rng cmpsl add out xor pop and mov jg das rcrb pop lahf outsl stc push aaa aad fnstcw mov mov xlat ss repz mov push jg and pop stc and (bad) jg aam push dec jg cmpsl les jg rcrb mov sub or cmpsl imul sub xchg mov or and stos repnz xchg mov (bad) mov adc mov adc frstpm(287 iret jns daa xchg sub int js inc sarl inc push fimull loope,pn jg mov flds jmp mov push and out (bad) out dec ds dec mov mov or jg dec bound or cmp push arpl test fwait and mov loope stos jg cmp push (bad) aad fdivrl push stos (bad) arpl mov sti pop jmp mov in dec jg data16 mov es pop imul ss lcall push dec mov aam mov aaa in dec icebp scas shrb loope jl inc lcall clc movsb mov in inc inc call movsl pushf scas cmpsb jge xchg jg mov popf jg or xor lahf rcr inc mulb push add aad dec and mov pop rcrb adc movsb sub lods jno stc jg or (bad) jg xchg jne mov aas cmc push mov xor fs iret in hlt and dec dec pushf xor (bad) int3 shr xor jbe pop cmc out inc repnz push jg hlt into loope outsb mov push and sub or test aas or adc mov (bad) mov dec and rcrb das sbb xchg inc test sbb mov popa push and (bad) in cltd imul or sbb cs int inc rcl (bad) push jnp cli incb outsl (bad) jb fild jg in outsl mov mov negl adc sbb xor cmp mov pop and cmpsb dec xchg mov lods fs pop xor lcall pop pop leave std aas mov fwait insl fildll cld dec jge jg push dec mov out aas jg jne das and and mov ja outsl in jg push popf cmc xchg mov jb test cmpsb push mov sbbl arpl pop inc cmp ja mov or imul incl jg ret imul jg test popf scas xchg add jg gs push dec arpl and ror cmp jg inc inc jne xchg idivb fimull ds pop or jg out dec mov sbb repnz push mov (bad) pop jg test pop xchg loope into je inc add jnp std lahf scas movsb out (bad) mov popa xlat pop lock adc jg negb push test ret out negl xchg repz scas cli stc frstor jg aas push mov aad fisttp or xor cs jg and iret (bad) xor jg mov xchg jg push mov ret add cmp jns daa sbb jae jg dec lret cwtl (bad) scas (bad) xor cmpsb mov lret mov imul xlat add testb inc dec mov push xor xchg add inc pop lods mov mov mov xor pop xchg inc cmc aaa sub ret insb xchg xor fsubs xchg mov cmc (bad) jg and into lds jg mov movsl loope popa sbb adc aam push jg (bad) sub push enter mov pushf inc and jg outsl xor sub mov jg dec out mov in jle (bad) jbe lea push xor fldt inc gs cmpsb mov cmp inc push hlt lods sub cmp jle jg jne int xchg outsl inc les jg and jmp mov scas std outsb mov jg pop cmp sub xchg jg mov push scas jg push repz or mov cld out mov dec in dec jg sti xor push sub bound jle xor xchg push adc addr16 xchg jo xchg jg xchg in pop jl push sbb sub scas pop cmp jg test mov fmull mov jge jg xlat mov push mov (bad) jg cmc test push dec test jmp cmp lahf out jg mov jb jnp push jg negb xchg (bad) sub mov sub add rcrb test (bad) xchg mov inc pop cmp or addr16 add jg jbe fcoml call pushf adc ret imul cmpsl insb call dec jle je out fnstcw or cwtl pop fs loope mov jns pop pop daa movsb jg jmp pop sarb inc mov jle xchg sub mov sub or xchg (bad) mov mov ds inc cmpsb dec xchg fisttp not gs cmp insl enter insl test in (bad) adc pop dec inc popf push mov jecxz cmp pop aad mov jg daa mov repz cltd fistpll sub scas sahf pop bound pusha aad aas xchg or and sub in cmp jecxz dec cmc mov push inc jg dec push das jg mov cmp pop jg cmpsl xorl xor outsl push rol js jg sbb aas (bad) jg jecxz jl test jg lcall jg jo ret popl jg mov (bad) dec mov add jno ljmp xchg add jp dec or (bad) je pop cmp sarb mov cli scas xor (bad) fbld push adc mov mov out push aas inc stc mov jns aaa or jae rcrl mov repnz mov and cmpsl ss jg imul xor aas push jg jnp rcrb and xchg jg mov aas jne (bad) popf mov cld xor repz inc lods ja out js out pop rolb jg scas mov mov sti lcall insb sti out pop shrb mov pop jg push in loopne mov sbbb lods xchg mov and sub sub imul mov push inc mov inc mov cwtl and pop mov daa roll pop mov loop inc and mov push ljmp jmp xor jg decb jno fsincos fist mov adc repz xchg dec ja jae cmpl aas inc xchg in out (bad) imull mov xchg dec mov lcall adc mov repnz ds mov aas dec inc test fidivl dec push std jg mov jg cmpsb addr16 jne add mov (bad) mov push data16 or push pop xchg insb sbb cltd imul adc xor fadd lahf mov fdivrl daa fisubr idivl and je push xor mov inc cmc push dec inc in imul and cmp mov mov xchg pop xchg dec orb pop (bad) test aad mov sbb loopne mov sub push push xchg lret jbe je push add xor mov xchg pop mov adc mov push (bad) jmp insl jg sub out and jo mov mov loopne mov in pop mov aas inc loope mov add mov cli jnp out fidivrl mov xor xchg push rcl cmp jg,pn jecxz imul push movsbl call push pop faddl or repnz das (bad) rcll imul push loop jo loopne fist mov nop mov lcall jp data16 mov std mov out movsb outsb pop pop pop imul or (bad) jg mov call mov (bad) mov xor add lods sub mov jg out dec (bad) dec sbbl cltd jecxz cmp pop fildll (bad) js xchg movsl aas and sbb push inc push cmpsb imull sbb fldcw inc je fadds out in adc ret or xlat inc push jge xchg lea repnz mov imul iret jg pop mov fidivr pop jle dec push and jae out inc cld and mov push dec jg lcall jg adc mov (bad) hlt or inc mov lahf out aas mov bound or adc jb xchg mov pmaxsw fsubl mov xchg aad add rclb in stc sub seto imul inc add lahf popf mov dec jnp mov dec lods cmc addr16 jecxz xchg cli mov js ret mov rcrl cmc xor pusha inc mov cli mov sub cmpsl out adc daa insb mov xor add out jg mov jg mov pop xlat lods fmuls jg js lcall add pop arpl arpl cld cli xor pop mov cmp in mov in jg popa (bad) mov lea mov adc push ret jg inc mov int3 mov (bad) mov jl push cs inc iret frstor jmp enter jg stc push dec add inc jns push ret jge inc jg repnz lret pop mov nopl sbb hlt add and (bad) mov pop sbb dec jg xchg jnp pusha mov cmpsb and addr16 add aam adc xchg xchg (bad) cmp or xchg addr16 cltd decb xchg dec xor mov dec pop inc into xchg adc fwait cld cmp push sub pop test sub jle sub mov jg pop xchg cmp or aad movsb mov xor mov cmc and fmuls sarl std cli sub inc pop mov icebp mov rcll int3 fldt fs insl and jle or pop jg lods js dec or cwtl lret adc fidivr jl xchg and fstps xor mov pop jg fcoms lods aad inc sti fstpl dec adc jne jmp jg inc jb cmpsl push outsl inc jg jmp cmp xchg mov and xchg fcompl sbb daa pusha dec aas fist dec aam dec orb out pushl stos clc dec lea mov jp cs bnd call leave sbbl xor mov jg ds test aad inc jg cs push mov fwait push mov xchg addr16 jno sarl movsb pop and inc aad jg inc xor mov dec fdivs pop lret (bad) hlt and mov and jno scas xchg inc aas inc cmp and hlt jle jg pushf jns cmpsl popf lret movsl push gs bnd jmp pushf jg or enter ljmp sahf iret mov mov cmp dec lea stos inc and mul xlat fstpt shrl fisubrl pop or push mov fidivl jg scas dec roll cltd push pop jg cli mov sti aas fiaddl repnz pop inc outsb lock xor mov lahf add outsb bound lea cmpsb dec add adc mov nop sti loope mov add push push xchg loopne jns xlat addr16 dec jne xchg gs (bad) (bad) (bad) sti out pop jg stc sub aas repz and and ja jp xchg in (bad) xor ret dec scas lea jo mov ret dec inc jl mov mov inc insl jg (bad) xor xor cltd push or dec xor out jns fldt hlt dec jg adc mov popa movsb jg adc call sbb add (bad) mov loop xor aas push mov xchg sub cltd mov adc inc dec push pop jg add into jg dec jns stos cs mov pop roll mov pop jg icebp add mov xchg in add int3 xor ja,pt insl outsb pop roll xor cmpsl and mulb sbb popa cmp das add (bad) adc xchg mov sub mov adc jno jg aam mov jle pop lock pop sub xchg aas enter dec xchg push jb xorl (bad) dec add jg xor lcall pop sbb cwtl (bad) lret adc xor jb push add jg xlat pop popf or cs pop jmp add mov push loope jg cli lret jo sub sub mov cmp dec and rcrl aas mov sbb scas adc aam mov mov mov mov insl std fsubs cmc mov or in push adc cmp rcrb jmp mov jne addl jg jmp pop in enter push aas das inc adc ja add ja push jge (bad) inc pop jns pop cmp pop std inc cmp jg or xchg xchg rcr iret pusha push sub xor sub mov pop mov mov fildl sub shl and pop inc mov xchg jg test xchg sub adc jg add mov jge clc sbb adc nop pop and (bad) data16 in adc (bad) mov mov mov sbb clc test push jg cmp pusha scas insl mov sbb call or leave popf lcall mov lret sbb les sti repnz and mov bound xorl addr16 pusha mov adcb mov adc or push xor outsl pop shll dec jg loopne iret test sbb jno xor insl xchg xchg cmp int3 jg (bad) sti lsl nop or dec das sub xchg mov in or pop cmp mov jnp fcmovnbe sti fiadd mov and std call aaa arpl mov pop cmpl cwtl cld jg fnstcw (bad) lock mov loope xor mov push addr16 jg xor jnp jg cltd inc dec jl (bad) sarb pop test je and sysexit pop loope dec add jg inc pop int or movsb jg clc out rcrb or leave (bad) jg mov cmc jg sub test inc je jg mov dec cld jo aas out (bad) xchg pusha mov sub nop jp scas enter mov sbb popa cmc loop fdivrl jg sub push pop cmp fs rol (bad) sbb popa lea mulb cmpsl mov mov ja out in xor cs ret je pop sub push repz xlat jg cmp xchg movzwl pop scas push adc mov ret and pop mov dec and jg and ja stos inc cli sti loope jl addr16 lock jg pop clc or sbb imul jb mov adc fidiv mov jno cmpsl pop shrb mov adc push dec rol gs test xorl xchg pop jg mov and popf push fidiv jle xor xchg ss les fdiv cmp mov pop aam call xor int adc sub push popa mov xchg add inc jg pop (bad) xchg and xor lcall cli dec push pop aas mov test xor lock nop stos mov pop js mov adc nop jmp jg imul xchg sti mov jg cli lods add cwtl jg cmp rolb sub insl into inc jg mov mov ret in mov pop stos jg in xor jp xor daa sub and adc ss pop stc mov cs add notb cmc jg jns (bad) xor xor jg xchg stos push mov cmpsl jg pushf lea es cmp iret pop jg push pop jmp mov push shll jge and dec fadds push and fdivrl popf loop mov pop pop scas repnz pop xchg sub addl or movsb mov dec mov outsl and popf fmull insb fsubs (bad) movsb jg aaa (bad) lret xor dec mov (bad) jmp jg push xlat and inc adc sti add test jnp jnp mov add add test test out push mov xchg jl push pop sbb xchg jg dec dec outsl sub mov jne or aaa mov repnz push push jo popf and jae mov mov jnp sbb mov pop mov arpl mov pushf pop in fwait sub stos loop xchg jnp ret js jae sbb mov jb push dec jg pop add mov mov pop mov pop sbb std push idivl mov ja imul lods xchg pop jne jae in daa ret mov cmpsl popa sbb or shl clc dec arpl aas jle and pop in sbb pop rclb in je jg pushl ljmp popf xchg ficomp sti jecxz mov dec add fdivrl mov jle lahf mov jg jnp (bad) jb rorb fldenv pop cmpsl jp push sahf sar mov in dec fisttpll sarl inc in mov jp (bad) outsb je nop aaa inc mov lea xor fstp mov aas ds mov sub lds cmp pop push mov popf mov fidivr les cld jg fwait out push xlat ss jg mov add mov jp push int adc lret repz xchg fistp (bad) sahf and mull sbb shl sub adc jg pop ds cmp jg (bad) cmp pop rcl mov and aas inc pop (bad) and dec insl pushf jg leave push mov in jg mov andl (bad) jae aam pop aaa dec add rcll cmp or iret sahf sub inc or pop cs ljmp add jae (bad) (bad) (bad) mov arpl inc pop push jg cmpsl mov mov pop mov arpl in cwtl jg xchg inc inc mov xchg add lds sub pop sbb add jbe cltd add sub adc hlt push and jg fiadd addr16 jmp jecxz popf je jg test mov pop lock add add scas sub cmp inc call frstor icebp xor repz mov push stos clc sbb imul das (bad) xchg jg popa jns jne jmp sahf int mov jb or addr16 aad push cmc jae imull call cmp ja inc mov fild push rclb jg,pt inc jns insl xor push jg inc call jg rcll and cli jae jecxz mov jns es and push jg fisubrl dec jnp dec jg outsb mov cli in xor push sub dec jg mov xchg (bad) sti jg int3 fstpt pop clc rorl inc or pop add mov pop nop and cmp cmpsl ss xchg adc cmp jg push imul mov sub cmpsl enter push insl add mov fs xchg pop jo mov and out jg mov test icebp movsb xchg push aas xchg aaa cli push pop and hlt aas and sahf dec mov push notl (bad) aas lods cmp adc pop js sbb inc pop jg mov add jo movsl jg sbb lock stc push mov sahf dec mov arpl and adc adc cs fstpl cmp mov jns push add sub jg (bad) clc and cli mov ja cmpl xor dec xor mov or repnz jg mov dec bound test dec ds aaa adc push jbe (bad) jg clc shlb add (bad) popf xchg sti repz inc pushf addr16 cmp addr16 icebp dec jo jg jmp leave test mov jge xorb sbb mov pop out add jge hlt or or xchg pop nop inc pop jg push mov mov and push xor cmc mov mov je sbb jge imul (bad) scas jno fild xor dec sub loope aam cmpsb inc or jbe jg mov sbb dec inc out rorb pop pushf jg mov push jbe mov scas data16 add andb int3 pop jle addr16 jg decl pop sarb cmp fldenv mov jg xchg jg (bad) dec das mov lods dec jg xchg mov cs negl imul pop outsb mov pop adc cmp je or xchg cmp mov inc xlat bound jg pop push add xchg ffree mov dec std imul stos xchg jg cmc fwait inc xchg jbe cwtl jg fcmovnbe arpl sub jg xorb imul clc mov dec mov pusha mov jnp fadds (bad) arpl das ds jg mov dec into cmp imul dec pop xor sbb jg xor mov mov ljmp repz jg in jmp mov imul fcomps xchg fsubl decb out mov jge jg sub mov fidiv dec dec movsb sbb cmp ljmp pop rol cs jb jecxz fisubr (bad) add (bad) xchg cmp popa adc pop pop stc fs cmp or leave cmp notl negl test mov loopne,pt jg and movsb jg in ss data16 jnp std mov repnz push fidivrl aad push pop cmpsl hlt and jg add loop icebp sub aad cli jnp hlt cmp jl fdivp pushf inc mov push out xchg add push push inc ds jg dec sbb xor xchg jg xor out pushf sub in int3 and lret data16 sarl aas jg je or mov or sbb pushf pop jmp and mov dec stc add frstor ret cs les les scas mov xor add xchg xchg jle mov xlat sahf push jns enter adc mov cmp lods dec xor in insl int xchg inc push mov cld (bad) add (bad) dec xchg shlb (bad) fistp sarl out inc jno adc push mov bound mov jp xchg test lahf (bad) cli (bad) mov pop xchg jge jmp jg dec xchg jl adc sbbl aas sub push inc sub insb and ss aas cmpsb imul mov (bad) jae sbb cwtl jb jg mov test (bad) or add not push jle inc inc mov outsb push (bad) ja dec dec repz mov lahf stos or inc and push sbb repnz pushf mov mov jae aas and fdivrp push out pop ja add pop mov fstl mov push pop and sub xlat jne push pop stos in jg ret (bad) ret shll and addr16 mov jle test notb jg mov imul movsb ljmp and xchg jo mov js cmp ror js jne and jg push ds pop xor mov les js loop jg ljmp jg xchg pop xor adc mov mov incb adc push mov jecxz mov dec addl mov test sub jb mov mov sub push mov cmp pop data16 out push xchg lds mov pushf mov mov (bad) popf jg sbb test jno add mov sbb imul fcmovnb ja mov js xor inc arpl pop lds frstor cld mov jg cwtl in (bad) js pusha jnp pop jg jecxz push (bad) mov sbb mul push stos push sarl divb fidivrl cld incl push lods inc call (bad) or pop jp pushf (bad) std daa (bad) mov xchg sub jl mov cmp xor movsl popf (bad) mov scas xlat pop in inc jg ret pop daa pop push push int3 mov mov inc cmp repnz rolb and add sti mov in arpl add test fisttpl pop loop (bad) push or loope sub sti inc add cmpsl dec xchg mov pop pusha add mov jg xchg mov loop jg adc mov and jg and jge cmp jp pop pop scas pop jg stos mov xchg sbbb adc int out call push mov lds test xorps xchg mov (bad) notb inc mov mov xchg mov adc pop inc inc push lods out or cmp jae jg inc cmp insb mov pop jg sbb push jg dec xlat pusha (bad) out add mov push fdivrl pop dec pop shr add aam (bad) sar call jg push mov jnp mov je dec dec ret sub xchg clc dec jg pop push scas lock dec (bad) negl mov xchg pop push cmp aas popf jo cmp sti test test fcom push cmp sti daa adc sti cmpsl mov pop mov pushl cmpl fcomps repnz and pop push inc ss and add outsl xlat fnstcw push push or sub aad sbb movsl xor pop test jg fadds dec js add (bad) daa gs xchg int3 xor (bad) pop mov fiaddl les psubsb pop jns jg pop in xchg and sbb dec mov jg imul and add aas mov xchg add addr16 sbb jg icebp dec add jg mov out xchg lods pop jl adc in add (bad) pusha gs std orl push pop cmp xchg aam pop mul jmp fiaddl jg dec sbb xchg jmp cs dec iret push aas je clc add cmpsl push daa mov imul sbb dec mov jg sti (bad) bnd add xchg sbb call leave jecxz insb (bad) ds sub add mov jb cmp sbb xor scas test jg lcall jg cmp jno and lahf push nop and call idivb pop jp mov sti jg test enter xor push and js mov jg jle loope ja mov dec inc (bad) jg (bad) and add mov jle inc jbe loopew arpl jg ja ret jmp imul in fiaddl jne out (bad) js test cld add push cli cmpsb cmp jg sbb sti aas xchg xchg and mov and push xchg pop ret jg test dec and sub inc adc nop pop lock inc inc sub jg jno sub lahf jmp dec jg adc mov mov jae fidivr pop lret cld cltd sbb fnstsw add mov xor adc xor or ret mov mov pop sbb mov jp add pop and adc shl loope aas pop stc pusha cmp push xchg inc aas dec ret les in std push mov jmp cmp aam aas cmp jg lret out mov xor xchg test push push xor sbb mov pop cwtl jb popa ljmp xchg jg jno fisubr fwait sub ljmp xor fidiv inc and repnz daa jg std mov pop (bad) xchg sub push jno lahf add or pop orl xchg ljmp andb (bad) pop pop pushf mov jg add shrl jg aaa or add pop test jl imul push pop (bad) mov sbb cmp jg sti pop xchg xlat and cmpb popa xchg pop push imull adc fwait jg xchg in or imul jg imul dec clc incb cmp repz jg push aas ds lahf (bad) js jo movsbl adc cmpsl aas adc push mov push mov notb cwtl ret sbb jecxz,pt rcl fsts js push mov movsb adc mov jg scas cmp inc pop loopne arpl mov and bound loopne addl push aaa push push jg int cmp mov jg pop add jecxz lcall mov mov sti mov adc es push pop jg leave popa idivl fsubs lahf addr16 mov arpl mov jge inc int jg fnstsw loope mov xor (bad) in jp push out ja sbb fs popa sbb in jg faddp sub fistpll dec push push cmp ds pop dec call out mov push aaa xor jl add cmp jne outsl inc out lock adc jg fimul push jg cli in lahf or imul and (bad) pop xchg sub mov or in and ret jb fs xchg and jg mov add mov cmp arpl jno jno in cmp jg,pt pop cmpl mov into dec cmpsl (bad) fdivrs jb push pushf xchg mov push jnp push and call sti sbb add inc (bad) jmp xchg movnti cmp cmpsl add xchg je jg aaa mov jmp ret xor mov jg stc jecxz inc sahf mov jg aas aam sbb cli loop call and dec xchg xor xchg mov ljmp jecxz or jbe gs xchg loopne mov mov cmpsl cmp mov mov xor add sub or cmpb mov outsb nop pop sbb loope or and sti ret cmpsb pop dec outsl dec fcmovnb mov push pop xor jb les or incb sti cmpsl jl jg sbb lahf test push stos mov movsb test hlt jns sub sub mov jno dec sbbl mov mov mov jno pop scas dec mov jg ret gs and test dec (bad) stc jg ja push lret pop mull jg (bad) arpl lods mov pop push cli lret cmp (bad) daa inc xchg popf sub in cmp jg jmp and jg test data16 push popf mov scas adc ret xchg jg and mov xor lahf cmp cmp rolb sbb xor fcmovnb sub and pop sbb dec jmp ja jo pop enter icebp popf pop lock shrb addl das and jg or inc xlat xchg cmpl in jle push std sub sbb out test imull xor (bad) lods daa xor int (bad) (bad) cmc mov ss jecxz cmp pop mov jb xor lret aas (bad) mov dec dec xchg in divl sti aad test repnz lds pop dec pop mov or jg xlat dec idivb xor cmpl roll lret jb outsb xchg jg gs xlat scas xor push dec adc jg ljmp loope jg mov ds jle,pt not pop dec js popl fstpt push mov in lcall or push jg and imul stos sahf mov mov mov repnz jae fdivrl adc lods rcll sbb (bad) hlt aas ja dec mov (bad) bound lcall ja add sbb cmp cli dec cwtl pop (bad) jg icebp xchg jg mov es jg inc pusha ret jae cmp jg sub lcall in xchg addr16 leave icebp jg cwtl lds cmp test mov imul mov jg cld (bad) or xor jbe icebp add cmc das xor xor int3 mov pop mov cmp inc dec in in push mov dec stos pop lahf test push inc inc jns jnp and jo movsl mov imul cmpsb xor xchg jmp cmp jp mov jle pop mov rcr jg dec movsb lods std add cmp jg and cmc adc sahf inc add mov lea xchg mov fnstcw lret pop fwait mov jg (bad) push jl push sbb arpl adc adc fld push daa push (bad) push xchg test int lret or repz xchg push jmp mov dec addr16 decl cmp imul jg cli movsb test xchg push cmp jns cmp addl push ret lds mov add xor stc jge adc jg rcrl jne xchg mov sub cmpsl dec mov pusha out push in jle lea cmp (bad) test and aad pop lcall xor jl js stos add or sbb and stos jp jg jle xchg sbb xchg jl seto or xor xor incb push pop loope jne popf stc sub pop jb pop mov outsl push push ret push dec jg push mov rcrb mov clc pop jbe inc scas or jg repz push fsubl pop dec xchg jle xor sub jae shl inc bound and mov jg jge leave push pop add enter dec dec iret cs jg cmpl jg sbb mov mov cld jo add xchg enter jp pop lcall lahf xchg push je pop mov jg mov adc pusha loope push pop jmp and mov sbb sub out (bad) and test push es imul addr16 lds xchg (bad) setno mov pop int3 mov jg je dec adc jg push out int and jg mov mov jg and aas adc (bad) call in addr16 out dec jg sahf (bad) xor arpl pop test pop je mov in xor push sbb add sbb jg ss mov sub cmp jg fwait (bad) xlat jmp out jnp bnd and jg (bad) mov outsl push add stos xchg mov mov aad mov sub test mov cwtl dec call sbb cli rcl repz int3 mov xchg lock mov pop loopne xor jg dec cmpb jl sbb rorb cmc jg fldenv push jg pop dec push cmp stos push aas push xor sbb out arpl inc sarl jg sbb jmp add xor dec jg js mov mov jg icebp ljmp cmpsb ret mov pop xchg sbb cmp call mov mov ds loope adc push enter (bad) dec sahf xlat mov jg imul dec mov fnstcw inc cmp dec mov hlt arpl and inc outsb sub jg xchg push cmp out or mov jae push loop out iret fmuls lret jg lea pop ficom cmp fbld push enter mov lret jg cld or fdivrs icebp cmpsl fcmovnb iret sub mov mov xchg xor ret fmulp pop les popa jg (bad) push jg jb inc mov pop jg cmp pop mov shlb jg add movsb xchg insl push arpl cmpsl cmp push cmp pop xor push (bad) (bad) out fsts daa stos addr16 mov mov imul lods repz call mov xchg pop xchg mov in xchg fstpt jg das jp mulb cld lds jbe inc dec fisttpll jg out into cmp or es jg pop aaa popa repz adc test or pop arpl xchg and mov fbstp addr16 push jg and test pop imul inc sbb leave or dec mov jg outsl cmpsb (bad) xchg xor rolb leave pop in inc je jg sbb fcoml shll ja sbb roll int3 sbb loopne xchg daa jg ret push xor add jg lods fxch cmpsb mov and je and adc scas pop fnstenv fst call or aas or mov dec repnz (bad) add call je stc jle cmp pushf call idivl jg js jns out xor fbld jg out orps mov in pop jg push push jle fwait rclb jg push lret imull aas leave pop xor inc sbb mov (bad) mov lcall (bad) (bad) hlt (bad) lock loop mov cli (bad) call jg mov or outsb inc pop inc fisubr mov ret mov dec and jmp imul fcompl or pop in icebp int cmc and cli out daa sarl mov cmp inc dec lods sub and aas pop rcrl pop or dec xor scas cmp sti jg pusha mov push stc pop adc out xor jg ss lds mov add jg inc aam push mov mov mov push xchg into push jg imul xchg orb popf mov xor xchg jb jbe jno cmc mov push ficoml sbb jecxz jg cwtl repnz cmp inc jg fcmove push mov shlb and jns xor pop sub jg jle pusha inc and call pop idivb bound lods mov xchg subl jg imul jmp test or jb xchg addr16 mov xchg xchg aas out lea inc jecxz popf push xor xchg sub js (bad) cmp xchg test jg adc sub add call jg aas cld test in mov cmpsl xchg push or dec imul fbstp jg inc inc xor addr16 pushf aam insb inc lds fmull xor jnp mov mov jae mov dec mov (bad) repnz jnp dec out dec iret add jg xor jg add lods inc push ret les loop jg test inc fistp fdivrs cmc inc mov and jg stos push adcb mov dec gs mov jle and jne icebp xor xor (bad) jg xchg xchg sub int3 and push adc and fdivrl sub out negl inc mov dec adc loope sbb sbb add jg lods fcmovnu mov jmp dec or sbb daa mov adc lahf sub and push xchg push push and jg mov jge jg mov mov out push sbb mov fwait jnp in cmp cmpsb jg xchg nop fistl adc xlat addr16 pop jg mov inc iret jg sub sbb ds mov dec (bad) fidivrl jne sub push lahf adc sahf loope jmp sahf ljmp fsts push sbb mov pop enter add insb insl into or cmp push test lahf js ds pop test inc in (bad) movl les mov inc orl jg (bad) jmp lods rol sub lahf repz (bad) mov hlt dec dec inc inc nop push sti cmpsl adc mov shlb jge pop sbb repnz cltd xor js out (bad) jg mov inc pop jmp dec jg decl mov pop pop jp popa call movsl lret inc insb jg clc jns adc dec stc mov mov mov sub ret rcrb mov sbb lea or push and xlat arpl ret inc test mov addr16 stc jge sti cltd sbb mov mov mov pop pop pushf pop clc jbe mov jg stc sbb repz jg jo push stos imul xchg jg sub push mov (bad) aas pushf out pop xchg (bad) aaa (bad) xor mov faddl pop fidivrl pop lahf sbb addr16 jg cmp xchg sub jg lock mov jg xor push jg jmp inc je fldenv jno sar ret in jg rorl mov adc xchg imul mov sub jns jg nop push mov out bound insb sbb jg in jp lea mov inc xor (bad) cld lahf insb jo loope scas sub divb mov sbb xchg and pop xor mov jb inc dec push push leave in fisttp bound ljmp inc and inc mov cmpl test or popf cmp out movsl adc push sti icebp test jg dec jae jb or mov imul aas aam ds sahf inc mov incb adc xchg cmp aad pop outsb (bad) sub jnp cmp lret adc fnstcw lock sbb sub mov push dec aaa mov jg mov sbb and xor arpl (bad) lock call repz jg (bad) cs leave insl iret jp xchg les sarl test and dec clc in inc push mov add mov mov rorb pop dec mov mov je inc mulb cmp sub push fistpl push pop into movsb add aas xlat test inc sbb pop xchg ja lahf push mov cs hlt mov push fimull jg pop and jg ss outsl jg jno inc mov lds jg fdivr les cmpsl data16 sbb lea ss push or fistpll xor ret sti sti push outsb sub sub xchg or cmp sub jno (bad) xchg pushf in std pop cmp xor mov int3 jg add push std mov sub pop xorl sbb dec or popf inc mov jg mov movd mov movsb (bad) es popf ljmp movq xchg aaa cmp fsubr mov mov pextrw inc adc in inc shl or int pop out cmp mov outsl pop in aam (bad) jg cltd ss mov out mov or xchg xchg push or jl jg iret out fnstcw xlat mov mov jg dec and (bad) cmpsl cld outsl jg mov imul lret fldenv and jg loope cltd jbe or mov sahf das dec ja fs xchg mov sbb cmp jne or jg sbb fistpl stos mov lea ljmp ret fucomp pop mov hlt fs (bad) fldcw lock mov cmp (bad) cmc dec pop es xor out xlat push (bad) xchg jg ret adc jns pop rol inc lods out mov fwait jg lret lahf idiv and test out xor jg pop (bad) pop mov cli je sub and stos jg mov adc jg xchg test jg outsb push adc and ja pcmpgtw inc jns cwtl imul cmpsb jg cltd push xlat test add pop sub mov jle sub (bad) jo ret push add push es insb inc cmc inc push int3 jg mov dec aas inc push cmp pop mov push push pop int3 mov repz dec rorb jle xor cmp pop push xchg das js cmp ja mov addr16 int3 iret dec mov pop pop inc aas jmp clc mov scas jg lea (bad) adc mov (bad) inc cld lods popa mov mov jg dec repnz daa dec mov cwtl pop push jle mov inc ljmp fisubr sbb aas int jns xchg cmp inc fmuls xlat sub js jg jo in sarb sub add (bad) mov mov std add dec neg das imulb je sub ds add cmp rorb or nop add add push aas cmp clc jo dec and fwait pop leave push push (bad) mov outsb push fninit sbb mov dec sub mov pop ret or leave imul rcll cmpxchg mov (bad) loopne aas imul daa mov loopne arpl sti xchg es outsl aaa fist jg mov push sbb sub test mov jge (bad) imul cmp sub jg stos mov inc dec (bad) jmp add pop jmp jg stos mov pusha jg mov sahf cmpsb jg (bad) into sbbb jg je mov jg ret add or jae mov jg xchg push jg dec mov mov sub mov push xor in int jg notb mov jbe test sarl inc jg test jo push jg push sub pop xor out (bad) add sti inc repnz sub adc add js packssdw scas jns fdivr imul bound rorb stos jno xchg mov repz fidivr pop jne jae cmc fmull jg aas rol or out in mov int bound adc sub aas fbld mov mov out lret rorl (bad) incb jmp loop and add loope jg mov pop (bad) inc jg xchg xchg ret or jg cmp pop pop jle std imul jnp xor dec mov inc jg push das adc pusha icebp or bound jae int3 sbb sub jne sbb lahf add push loop fmuls incb add orps mov fild mov jo sarl into add jg out lret mov jle adc xor push adc jg cli sbb cmp scas dec insb (bad) push pop sbb or repz into cmp nop jg bound mov jg repnz ret leave ret fsubs test push xchg cmp mov lret insl icebp dec mov mov mov inc sbb xor pop mov cmpsl cmp pushf into jg sbb add loop sbb int das lret scas mov cmp cltd inc and icebp fimul jg ljmp sub (bad) notl in arpl imul adc jae and xchg pop cmp mov mov (bad) fisttpl outsb aas or arpl popa pop adc lcall mov stos xchg push movsb cmp dec jge mov enter out sub jg fldenv pop xrelease test test gs inc sub popf jg push mov sub sub xor lock pop pop adc idivl ret pop (bad) sbb add mov mov jg int3 dec aad or jg and repz jg in lea in push jg int3 ds stc movsl jp jg push inc aam scas xor jg test pop sti and inc cwtl xor fistl fs jg xchg cmpsb mov notl jbe dec jge jg or push xchg and mov sbb scas lea pop (bad) mov bnd and xchg test mov mov push ret xlat mov and (bad) xchg dec loop mov (bad) push sarl xchg jg mov xchg xchg jg pop test push push aad (bad) mov sahf outsl sbb mov pop pop mov bound pop pusha shl mov outsl ljmp iret jmp sub sbb aas xchg movsl sbb test push dec ret sbb lods mov (bad) loop mov cli sbb pop in inc xor in dec popa xor mov jmp lock int3 inc inc mov outsl shlb mov sti mov dec shll stos daa movl xor ret dec push mov sub pushf xchg dec mov jg mov inc cmp js cmp inc pop pop jns adcl inc dec arpl dec push ja mov or rorl pop pop mov popf xlat inc test aaa xor jl push mov fcmovnb xchg pop adc mov (bad) cld shll cmp aaa mov and pop and pop or push sub lods xor sub push and pop mov (bad) xor adc pop xchg aas repnz (bad) jae es test pop jg sub bound mov cmp lret inc aam mov inc pop mull add pusha jecxz aas pop sbb out cli jg rorb adc pop not jg add outsl stos jg pop inc enter dec jg or imul clc adc ljmp mov out xchg mov (bad) jge and sbb pop int3 jo xchg inc pop jg cli movsl add adc cmp arpl jg cmpsb fwait pop into cmp imul jl in jg in das xchg loopne cmp movsb xchg (bad) inc mov lcall inc insl mov lea ret add dec push popl and dec jg (bad) fbld sub jmp push pop xlat scas ss sbb xchg (bad) fiadd jge mov sarb xor iret push inc dec mov push mov jne push push add loop add jg xor and or jmp pop inc mov or push sahf pop dec sub add jg addl inc and pop out xchg insl mov aad mov cmp jno sti adc xchg cmp push cmp jbe shrb xor mov or jg cmp insb sar loop fdivrs ficoml imul clc rorl mov push addr16 outsb insb fdivr loop enter sbb xchg repz push push mov push adc sbb sarl ficomp push cmc jbe pop xchg cmp out sarb es push icebp scas dec popa xor jg cmpsb xor aaa loop mov jp xor adc insl cmpsb jne and pop mov out jmp jg repz lret jg (bad) test ja mov scas fdivs sbb sbb sbbb cltd lods test idivl cmp push inc lret je mov imul jmp push into daa and loope (bad) lcall (bad) sti icebp gs cwtl mov push leave enter daa pop call jg ficompl ja lret and nop cld shlb jg mov mov jg adc sete dec pop outsl add dec mov sub mov cmp out mov cmp mov adc jg sarl jg aaa out pop icebp xor bound lock outsl xchg aaa (bad) xor fidivl test xor enter popf adc leave xor sbb pop mov jg aas adc jg ret stos xor xor cmp lods or jns divl out aaa je sbb mov pop bound ljmp (bad) jns rorb nop push data16 mov inc fwait jnp sub jg cmc cmp arpl add push negl lret insb mov jg out aam jo push ds in int and shr mov sbb aas and sub dec push pusha or test cmc adc jg,pn popa cld je adc ds xor mov test mov push jg mov sbb jg add loope mov cs jg pop out sub jg es cmp popf add (bad) test sbb xchg jg mov push leave lds ret stos adc sub lret out pop leave movsb (bad) xchg enter sub cs aas cltd imul lea decl lds into (bad) fldt jg addr16 sub jg or loopne mov jl nop ret push out push data16 lcall cli (bad) jnp cmp pop int (bad) xor inc out idivb jg push push xor dec jg mov je mov jno pop mov arpl jg nop test xor in mov mov mov and mov mul fdivrl push cmp or jecxz out inc lahf lods mov pushf xchg ret jb mov int add dec mov scas out mov jns addr16 std imul lods (bad) lods addr16 adc sarl push movsb cmpsl sarb scas xchg xor jg dec pop call jg (bad) (bad) mov loopne xchg adc adc mov lea inc jg inc xor fildll mov mov jg jl mov mov lea call xchg xor addb out mov or inc mov aad and or addl mov jg jne sti insb mov std jg cli andb repz jae sbb cmp subl ja push xor sbb imul jne inc sub stc aam clc jmp mulb dec les push and inc inc and subb sub dec xchg (bad) push push mov inc mov jg mov push add addr16 and xor (bad) ja lcall xor jg dec notb and repz xor icebp clc aam test into nop push ds lods cmp add jg add call jg add notb mov aaa jecxz aas sub pop inc and add fs loopne out sbb jg sub sub test jno (bad) popf stos dec fnstsw jg pop dec lods adc and and push dec or inc stc cmp (bad) aas inc mov xor je inc jl jg lahf stos add xchg pop mov cmp jecxz dec jae lahf out jp pop clc mov mov add pop std xchg add clc repz in sbbb cmpsb adc push jg,pt (bad) loopne push or adc cmp mov adc movsl xchg lods paddsw mov jg inc and (bad) cltd cmp mov test jg cli sbb mov (bad) popa xlat jmp mov faddp jge fidivrl (bad) int or aaa mov gs jg cwtl int rcrb popa ficompl push adc sub pop mov jg and cwtl fs out and sub adc jl pop mov xor jg jle sbb movsl jmp inc jp push cmp pop in sti loopne aam outsl lret adc dec (bad) (bad) pushf pop mov addr16 js and cmp inc (bad) jg jno movsl mov sahf je dec xor popf scas or xchg mov (bad) xchg jmp jg xchg stc movsl and sahf mov and mov scas insl dec cltd cmp popfw fsts scas or mov pop xchg mov cmp and inc out jo add jg mov cmp insb mov jbe push jnp imul cmp aas pop sbb xor subl cld js xchg repnz jge adc (bad) xchg fimul sahf jg outsl push aas pop lea sub adc dec stc out mov pop decb mov push add frndint pop cmp ds sub pop je test pusha or dec jmp xlat fcomp aaa mov mov mov jg out inc aas (bad) mov das push sub data16 loop js push andb sub pop mov dec add mov inc mov lcall sti sahf outsl and sub xchg mov mov loopne mov push cli cmp or clc out jo jno jg std sbb popa jg ss rcrl ljmp cmpsb aaa inc daa mov sbb jg std jl mov stos xchg ret popf jg imul test and pop xchg cmp dec pop (bad) jo lcall rcrl aaa (bad) and jl pop test mov rcrb dec push inc adc sti cltd rcrb mov xchg pop jg and xor push and push fdivp roll jns dec movsl jnp and inc mov cmpsb push sti lods idivb xchg cwtl call adc mull fdivrs mov xchg pusha push in subl aas out sti mov arpl jne cltd dec jg cmpsl push sub push aad jns mov dec inc es mov jp arpl xor pop nop sbb add in mov incb jae in sahf out xor push jg xchg sub or jle loopne add lcall xchg and dec cs int3 add sbb and mov gs lock clc jg or xchg (bad) sub push leave sub loope jg add lods ds inc repz popa jo mov loope shrl mov xor pop es std in dec je mov mov ljmp push jg and jmp pop cmpsb lcall lea shr jno inc dec mov ds dec lret mov mov scas sbbb mov cmp jg cmp sbb outsl sgdtl int fildl cmp outsb push mov mov jg fs (bad) lock sti pop jmp and cmc xchg inc pop jg xor testl inc rcll push int pushf (bad) test push cld dec pop in insl jg mov jnp nop test les and scas bnd jns mov xchg ja icebp and xor iret mov stos xchg leave out inc jg mov rcrl push inc cld inc sub mov out imull data16 lods mov stos xor or adc lods pop jg push mov gs cli cmp pop add mov jg mov in mov or dec test iret cmp (bad) out jg rol outsb aam enter mov mov jg mov push aaa mov jmp jg les sub in jg aad mov jg mov or push in jg stos stos push stc inc call pop cmp cmc je pop dec sbb mov jg (bad) cmp jg adc mov outsb mov testl sti inc dec mov and cli lret rolb jg int3 imul mov add movsl loope jle jnp repz jg push dec pop test jg dec ljmp add cmp repnz cmp inc pop mov push push fdivrs dec movsl pop cmc (bad) fidivrl push in imul mov cmp fs push pop jg push and ret adc xchg mov jl jecxz sbb in orb ljmp adc cmp in push sub mov ljmp mov test and repnz pop jg andb shlb es push nop notb dec jg leave jl adc mov lds es out call call cmp push aam xchg imul lahf push or mov mov (bad) mov dec xchg jg jle xor fimull inc add int3 and jl and jg scas mov jo inc jae icebp aam mov sbb mov rcr mov fwait (bad) hlt add addr16 sub jg das xor cmpsb and jg pop repnz jge outsb movq sbbl pop push ja push jno cmp ret cmp mov sbb ds aas cmp (bad) jno jg sarl jns and sub sub (bad) cmp in add jg pop jns mov adc (bad) frstor inc xchg inc cmc push sub cwtl sbb cld or (bad) int3 loopne or mov pop loopne jg add mov jg lcall lock sbb xor clc (bad) daa mov xor xchg or lahf adc jg pop or add dec data16 (bad) call dec inc out jl mov addr16 mov pop outsl gs popa in mov and sub fdivrs lds outsb mov ror mov pop and out (bad) imull adc pop lods mov daa cli xor jmp sarl cs pop push mov jae add std add movl es xchg jg fdivrl iret mov jmp jl and stos add rcr lods dec out cmc (bad) iret (bad) and incb (bad) pop fdivs dec sarl and mov xor enter jne sbb pop (bad) dec jnp mov sarb pusha inc adc cmc cmpsl arpl jg fildll jg lds mov in xchg ja mov icebp jo (bad) jae jg push repz dec push xor decb pop dec aad mov jno xor in enter xchg mov jmp outsl inc cmpsl xor pop das jg movsb xchg pop ja adc aas xchg push out mov mov call push dec sti pushf mov jle inc inc fs (bad) mov xor jmp jg jnp mov sti lahf xchg xchg inc dec shl mov and dec movsb stos cmpsb jae clc xchg mov fdivrs pop pop pop add mov mov jg add popf sahf lret mov scas jg cwtl fmul fnstcw xchg orl jg,pt pushf jp aas lds cmp pop cmpsl mov push bound cmp push jg int bound stos cwtl mov cmpl jg cmpsl mov or into sar addr16 loope sbb popf arpl scas jae cmp mov push imul push mov or hlt inc sbb cmp mov jg add pop movsb push adc mov inc je out dec sub jmp pop pusha mov mov jg lahf xor mov negl stc bound xchg inc jg adc jge xor fs add rorb push cmp movsb clc jmp and adc jle xchg call outsl mov inc xchg jg sbb mov xchg jg push nop test sub add jle inc leave sub pusha mov push jno out jg (bad) jp mov or pop jp loopne pop jg add outsl jg xchg and jbe jno arpl push rol sbb inc out mov outsl jg repz dec int3 push adc cwtl test adcb and lods inc cmp cltd pop jl mulb lcall das scas es jg mov mov out jg daa or popa push (bad) jg (bad) dec mov pop or jle or sarl loope sub jg inc push dec push (bad) jae jg xor sbbl js out mov aam call xor jge sbb push inc lds inc xor inc jg lea stos push shl jo sbb inc pop rclb pop pusha movsl pop add sahf jg mov lods add es jg xor xlat (bad) cmp lods xor mov jg in ljmp mov movsl adc (bad) or jg cmp scas stos xor mov sarb mov pop jg xor or mov add sar push jg dec std adc jb movsb jg (bad) jo pop inc mov cmp ja add jb jg xor jle je fbstp jg pushf rcrl pop and (bad) fsubr pop inc fwait loope imul stos fdiv cmp je insb js jg push mov push into sahf mov das ds lods adc dec in cwtl push mov xchg sbb jg inc and mov mov (bad) mov pop icebp hlt jg or pop mov jg xchg xchg adc stc sbb pop inc adc pusha jg out (bad) xchg pop push mov lods stos leave add sarl push loope jg sub pop mov or dec sub movsl jg jno cld dec sub jg std ja and arpl jae ss push outsb adc add mov mov pop pop xchg adc int3 outsb imul stos data16 test add pushf ss jg inc out fistpl ljmp jg sbb enter jmp xchg mov fmull add fisub popf sbb jo pop jae jg add adc mov push int3 pushf jmp push cld mov add cmp mov xor test inc inc jg mov push push bound xchg jp cmpsb cmp sbb mov jg and dec and or sub data16 ret pop xor (bad) fdivrl cld pop icebp dec pop pop jg es call leave mov das pop cmpsb aaa mov xor jg inc (bad) jbe fsubs out cld jg sub xchg ficoml lods out jg cmpsl stos xor jg push gs push push xchg daa mov lret jg jnp fs lcall xor or jle push sbb cmc lock push mov test dec dec scas mov addr16 cmp xchg pushf pop and out add je cmc lods xchg popa test gs xor pop sbb fildl mov mov xchg sub push fdivrl pop cmp bound mov adc in pop cli je fldt cmpsb and add inc nop lods jg mov xchg pop push addb call push bound jg and xor jg lcall (bad) xchg inc enter inc xchg popa insl insl inc idivl mov aas jg (bad) mov sti adc pop mov not pop xchg cmp mov adc test pop sarl and jmp adc in ret daa je insb das push lret cmc adc jg mov aas cld lcall scas lret adc sub xor dec into popa cmp mov je xor loopw (bad) pop mov ret add ds jg mov mov jb shrl cmp jl ret test jg adc add or jg sahf mov sti jg xchg int3 inc scas rcrl mov inc pop sbb cli lahf push lcall adc in dec out fdivp scas xchg sub (bad) mov mov dec cltd out pusha loop mov fldt mov jg and inc sbb fnsave push pop dec in div xchg std jg mov and sbb pop sbb nop repz push pop dec xor jg popa jb rorb xchg xchg mov repnz mov divl pushf gs rolb ret fs and push mov bound (bad) mov push sub mov fs das sbb in sub arpl add jl aaa lods and rorb jno mov jmp xchg test inc xor mov jg (bad) repnz mov out xchg jg jecxz shl in fstpt mov addr16 add jbe jg xor xor jns aad repnz inc sub sbb jl jo int inc xchg push js icebp sti repz pop mulb jg xchg mov shrb jg cmp pop jo sub cmp fisub jg fwait bound pop (bad) mov mov in push mov clc cmp xor sub push (bad) adc movl std cltd jne push in cmp mov or jg or in mov mov std push jg xor pop cmpsb xchg in cltd jg (bad) pop into in jle jg mov out dec jge jp or and aaa inc xor jg mov fnstcw adc adc rcrl in mov jg lret imul popf iret sub and loope jg sahf hlt mov roll addl jl lds (bad) jae lcall in shll cli lret ret jle mov pop shl test notl add (bad) out es cmovg pop and sbb scas movl js ret dec lds jg sbb es and rolb scas pop mov dec outsl cmp imul pop adc xchg jbe (bad) jge fstpt mov ret cld inc push out jg mov mov push lods push stc lret mov jg xchg cmp popf dec jg orb call aas pop enter cmp jne jecxz sub adc pop in mov pop push pop out outsb js inc popa pop cmp or inc stc sbb and (bad) jle push adc add pop lahf (bad) jg cwtl pop sub scas push and mov into stc jg test xchg adc add out cmp imul enter push adc mov pop fisubl hlt jg dec pop and adc sub neg push sbb rclb mov repnz push cli pop sbb icebp lds ja inc mov xchg jg enter lods cwtl jbe pop push lock xor push std dec and int3 ret rcrl jg aaa inc loop mov sbb jmp sbb jge pop out scas xchg jbe in adc les mov jg sahf fcmove dec mov wrmsr fwait insb std das jo add jg out cli fstps fist jg ljmp aas xor push sbb dec test jg lcall mov rcrb adc rolb jg lret test das inc cmp aas lods push or inc es jg xchg sbbb ss sti nop or movl jg call rorb loop lahf dec sti sahf dec scas aam push out pop pop in lds inc repz scas jg lahf mov std stos mov xlat dec pop adc out jg jnp xor scas xchg pushf pop dec lcall jle xor and das sub lds mov push dec popa ss cltd jg rolb insl inc out jg and and rcrl pop jns outsl fprem1 jg hlt xchg pop pop push sbb cmpl jg mov shr mov lock movb aaa jg mov and mov xchg jnp inc jae push sti jg xchg adc pusha dec mov (bad) hlt xchg es adc add cli and push jg lcall lods mov jg cmp mov mov push aaa inc push cmpsl ss lods ret (bad) jg jl lock pop mov jb jg sub lret inc jns sub mov fistpll inc test (bad) lock jg std xor pusha (bad) in dec sub jg movsb popa fs adc jg sub add (bad) push lea push call ret scas xor jg cmpl les outsl (bad) clc mov jns sti adc sub subb lea inc lock adc xor xchg aas xor pop pop or out dec xchg push jg (bad) cmpsb std fwait hlt jo jg xchg inc fstpl push sub jae imul xchg jg scas dec fcmovu rcll call pop mov xchg fstpt sti outsl xchg das imul ficom xchg mov inc jg or (bad) lcall pop jg add cmp mov inc fsubrs inc enter inc lcall jg jae ss mov xchg test (bad) jg fistl js xchg dec idivl repz lods push mov jg,pn mov lock xor mov or (bad) sarl inc adc jle add (bad) loop jg sub pop mov jo (bad) xlat dec add stc nop add jp adc in jg adc adc lahf mov in xor aas movsl inc and jno rcrl pop pop aam xor pop push add out add cli mov jg and ss cmpl test cwtl imul mov dec mov (bad) cmp pop shrl test mov fcmovb test cmp (bad) iret icebp mov test xchg lods or popa jne jp ja daa addr16 jg loop arpl jge jle mov (bad) pop xchg es pop nopl mov or or mov push pop outsb lret jg jno inc sahf (bad) cmpsb xchg jg outsl push sti push push xorb fldenv mov (bad) jg test hlt bound jae dec jno repnz mov add cmp sbb and adc (bad) cli add sub loopne cmp shrl out push (bad) mov dec dec ret sub pop cmp inc lock lcall test jg test sub sti je push js (bad) jg movb adc mov shl popf mov mov add stos mov xchg mov mov mov das (bad) xchg loope jge inc pushf mov arpl cmp mov mov aad jg sahf mov mov jg jmp lods scas xchg mov sub outsb sahf lcall jg mov adc loop inc ja (bad) mov xchg jg cmp ljmp xchg cmp lret ja lcall out adc xchg (bad) dec and jecxz loopne lock aam nop mov jg js mov and xchg mov jns rcrb pop mov gs out sub stos jns lods and cmp cmpsl cltd (bad) cmp xlat dec fcoml idivl ss aaa jns mov stos mov (bad) loopne cmpsb int3 mov std push addb sbb (bad) push mov test jg outsb and jg ficompl fs icebp imul sbb jg cmpsl movsb fldt mov push test xor popa pop mov push pop push cld cmp jg adc jb into fprem jno push mov pop sbb adc push jle inc pop in jg sar push orb mov add push incb in lcall cmp jg lret lods scas aas xor dec and jg rcr clc dec xchg hlt sbb sahf jl lock jne jg leave or jmp mov pop pop loope call cmp xchg xlat sarl xchg stos les cmp mov pop imul incb push and xchg jno cwtl mov cmp inc in loop jg jbe imul xchg leave lock mov xor cmc mov mov bsf pop cmp pop sub popa adc jns jg push cli xchg iret lods mov jg jge in mov mov inc inc sub and sub jecxz xor repz adc xchg xchg push and outsl pop and or dec inc jg jne repz xor jg sbb aaa fucomip jp ds cld imul dec mov xor leave fiadd out daa add std aad stos pop xor jl,pt sub or aas mov push addr16 cmp mov add jg stc jl fldcw jmp jg mov or jg out jp aam add inc sbb popf jg loope bound in jg std cmp sub pop imul into xchg and jb pop in pop jg les aam ja jg and push adc jg pop negl jg and (bad) mov sti jle sbb mov xchg mov (bad) mov jecxz mov adc xlat outsl ret mov jg out lcall pop sub in cmc shll outsb or add mov push jg mov inc pop sar push and pop iret pop lret leave mov mov jg cld push xlat js mov repnz add xor pop jg cmp (bad) jbe mov jg jo dec dec jg push dec popf icebp sbb inc aas pop xorl pop jg lods fistpl jle adc cmp add xchg jno test sbb mov sbb fnsave push xor adc adc mov ss movq hlt inc dec or xchg jg clc scas dec int push movsb jg out and pop jg shrb frstor imul pop insb and sbb aam aaa cmp jg or ret aad xchg pop dec xchg call inc or jg push cmpsb lods mov and dec jnp xchg mov jno jg mov int3 jne ret jl xchg nop aam popf call jbe push mov mov cmpsl sub mov pop jg add inc push pop (bad) mov aam aas ja insl rcrl jg gs jg jno add jb nop jg jp clc push mov out cmp loopne xor repnz pop dec xor inc rolb push (bad) cli lods jg cltd add dec cmp std (bad) and (bad) fwait aad xchg jp push jne movsl inc (bad) jg icebp dec popf sub sbb (bad) cmp and or push jnp jno (bad) or fcomp gs jg inc push mov lahf sub jns mov jo mov xor je inc sub mov in dec into cmp fs mov test lock jg jge or jg mov ret (bad) orl jg mov shrl jb dec pop stos jmp cmp ret cmp add out in xor or push push fs jl andb repnz popa xchg iret jg lahf add sbb int in cmp popf cltd jge cmpl add or and xchg cli mov mov jg jae push mov push jg mov jne testl fild enter jg shlb mov xchg dec pop and dec jg dec jge or xchg call xchg (bad) out cmpsb xchg xchg xor push mov mov mov sahf (bad) cmp jg (bad) int mov push and in and add pop inc pop test xlat and addr16 adc mov cmpsl sbb and cmc fstpt ljmp add xor xchg inc aas xchg subl outsl jg sbb js jge add iret popf fidivrl test je int xor dec stos and sub push loope mov mov aad sub sub jg ss flds pop jg cmp nop (bad) jo xor in dec shrl mov jmp pop jg cwtl push imul adc pop (bad) jg fmuls pop mov adc dec (bad) jae xchg jg sbb out xchg sub mov mov cmp push aas fild jg sub sbb adc mov fidiv outsl xchg pop sbb cmpsl (bad) push iret or jg in xor mov and je xchg dec and in fs testl sbb popf adc mov sti lahf xchg mov push mov jg push mov xchg xchg ja stc adc or mov (bad) jg xor jg pop inc cld iret adc push sbb mov rcrb or inc (bad) jg jecxz mov pusha es xchg lahf sbb push add mov das jg popa sbb cltd mov outsl jae leave jmp jg jb int mov push loope adc add add stos daa pop push pop jae fwait jg out repz outsb xor lcall sub outsb jg xor add lret jge adc xor pop mov adc gs pusha aam adc push jg sbb push addr16 inc call add jb adc jg ss xor in push std fbstp das (bad) loopne outsl pop mov ret and inc sti jg shrb aas popf rcrl push jg sti inc sbb xor mov int aam mov mov mov sarb or push adc mov jge inc xchg frstor and jg imul mov clc jg jle cmp mov xor rcrb (bad) and pop jg aam jle pop call ffree push scas (bad) pop mov jg push add pop sti lods xor xchg sub mov lret call push addr16 jg push mov les (bad) stc sub outsb mov stos inc mov jg sub loopne sbb push jg (bad) in xchg clc mov mov pusha out pop mov mov cld inc jg out cwtl (bad) jo enter fildll xchg insb (bad) rorb and pop push sub push lret gs add mov lock aas loop dec movsb les js jb mov mov sub movsb mov cmp cltd fcmovbe jg jge sub sub ret in ss xor xchg sbb push cmp (bad) dec jae mov arpl jg and jns push lock or inc jmp or push divl movl jmp xor nop mov mov and or cmp jg mov xor cmp imul ja push mov add aas std xor hlt push and outsl lret xchg mov pop mov test mov (bad) mov sbb jnp jp mov cs rcl (bad) sti ds xchg jne xchg mov jle movl jg out or rclb push dec imul fistpl jmp jg pop mov loope cli add mov jb or sbb and cmp enter mov (bad) imulb inc jg out fsubr xchg dec int3 ficompl cld rorl popa xchg jg out mov mov in inc jl push jg aam dec mov lock fwait repz inc xor mov cmp pop pop push rcrb mov mov mov adc in lcall loopw in pop mov fsubr jg inc (bad) je nop push pop cmp push push mov or movsl (bad) jg aaa call fstpl lret sti jbe cmp jb dec subl aam xchg leave push aas jae mov dec mov jg out xor sbb mov dec and xchg ja or adc pop popa xor fld jg enter int sub or sbb jno or fwait mov (bad) push dec in nop scas ss sub sahf mov (bad) pop fnstsw fdivrs add mov ja (bad) leave shr jg sbb or sti ja adc mov mov jno mov lahf (bad) ja fidiv (bad) mov cmpb in jecxz iret ds hlt inc jns push mov inc push imul jnp add ds cwtl aad push sahf xchg cltd dec test data16 jg,pn fs sbb lret xchg jg (bad) lcall inc jg clc in and imul insb fimull cpuid loop and js jge mov xor fistpll lds jg pop jp inc (bad) (bad) or cmp sub adc fisubr mov add or dec and lret (bad) and pop mov pop dec adc inc mov imul cmpsl insb cmp out cltd pop in mov mov xor xor inc pop adc push addr16 loopne mov cld pop push cmpsb movsl add popf lahf jns jbe jnp adc ds outsl sbb xchg jg pop xchg rclb dec jae or inc sbb or lcall int divl pop mov mov test push push mov mov add jbe push mov (bad) ja js lock pop inc stc jl fdivrs push in push lea add je pushf enter rorb add mov xchg dec (bad) sbb mov (bad) jg xchg mov mov xor nop jg addr16 xlat addl xor imul inc subl mov ss mov mov cmp push ret dec in in jbe popa xor sbb cli push cmp jg hlt mov adc cmp push sbb inc movq fwait adc imul test leave cmp jg xchg icebp pop in xor and aaa jnp sahf dec pop add mov (bad) jecxz lods mov jg lret outsb and pushf mov andl bound fadd push jg mov jae daa test out jge pop pop mov ss cmc imul rolb sbb and jg out leave call xchg jg push movsb rcll jecxz iret lods xchg mov sahf sbb pushf add imul lock and jg (bad) scas jmp test imul out js aaa mov ret push fidivl or push pop pop fnstsw into adc jbe push cmp xchg mov sbb or mov push aaa cmp pop jb dec jg jecxz rorl outsb dec jg sbb sub mov dec lock sarl jg in xor mov jg jl cs je ficomp jg push dec xor mov pop mov jmp popa inc or cmp mov sarb fidivrl dec test xor mov repz mov push sub lahf dec addr16 fidivr fcoms dec (bad) sbb arpl push outsl jge lods int3 jbe inc lahf jecxz pop leave sub mov insb jg pop jne stos pop out and outsl jle mov and sahf cmc sub push icebp ret gs lcall and fwait xor mov jg in cmp mov fucom popf in (bad) ja outsl sub (bad) outsl (bad) (bad) cmpl and mov mov mov clc call in sarl mov adc xchg addr16 dec inc pop shrb int pop add test hlt arpl inc jae push sbb les fcoml inc add int jecxz xchg push adc mov jns lock mov add jecxz,pt test jg jae and je cmpsb (bad) or push popa loop cmp stc jns add in push adc into aas pop dec cmp xchg arpl mov pop pop push lret pop mov mov inc mov es loopne js jg test (bad) lock add lret xchg (bad) mov insl scas xchg jg xchg js pop inc dec hlt outsl mov dec jg pop adc mov push fcmovnb es enter mov test pop jg jns stc push pop xor inc inc (bad) jle jg adc or sti iret jg sbb mov jg lods je mov (bad) js mov lcall add insl mov add dec xor or sbb popf insl jmp bound in dec dec sti push loop fdivs or mov out mov jg enter xor cli cwtl cmp adc mov sti xor cmp popa clc mov and shrb adc xor (bad) jg into aam dec insb outsb lea xchg stos lds pop jbe scas pop fistp fnstcw loopne je jg mov or push jno dec add addl movsbl call xchg xchg jg lret sbb lahf ljmp pop jg arpl mov inc outsb dec or mov inc inc jg cmp fbstp sarb mov pop mov push xchg xchg sub imul fs push das mov push aas xchg (bad) popf mov xchg push fs in aas push xchg pop notl mov mov jg sbb jle mov ja dec loopne fstpt cmpsb dec ljmp test aas (bad) bound jg or jle push aaa hlt std mov pop jae jmp fildll sahf gs or sbb jae js xchg xor sbb in aad push cmp clc shlb mov lock jae xor jg jne js mov inc sarw cmp dec cld jg sbb xchg cli mov into jg fnstcw negl out jo pop stos push call cmpl aas push fprem sahf mov pop jg ficomp cmp into in mov std arpl xchg adc out out jg push scas xor inc shlb sub adc mov mov pop cmpsb in shrb ret (bad) lret jg push inc lock cmpb pop fidivrl inc (bad) icebp cmpsl inc mov push imul add pop mov adc add gs inc jg sub or into dec jo jp xchg push sbb push cmp xchg push jno lahf (bad) mov enter js cld fnop pop repz xchg add popf mov mov rclb clc jae repnz lret push dec imul je cmp cmp out fdiv aas lods jno,pt inc jne mov xchg fwait inc mov clc cmp mov sti sbb pop adc nop das mull push outsl pusha xor mov in mov les jne outsl cmp int jg jns xchg imul mov test dec push xchg xor mov push mov ja xchg adc jg cli jno jmp add lret xor dec mov outsb int3 lahf dec push shll loope mov cmp jg jl ret sub push push dec (bad) sbb inc mov stc stos ret lods lahf dec jecxz pop jg cs inc and push fsubl cmc or mov aas imul cmp addr16 pusha inc mov cmp or das sub jg mov lock out cli mov scas icebp mov loop pop mov push insb push aaa jg adc in mov mov (bad) mov sub push mov add cwtl sub jg sub data16 inc pusha jno jne inc mov mov xchg jnp out or repnz dec push pop sbb cmp loopne aaa repnz or jg or pop mov pop jmp test inc jg les mov sarl popf push stc (bad) pop mov mov cld out pusha inc fs push inc xlat je mov sub (bad) aas sub inc pop nop popf dec inc sub add out dec (bad) jg cmc sbb push test or rorl xchg mov xchg dec dec bound fdivrs int3 push push cmp jle jg lret in enter mov jg sti scas add aas or stos mov cmpl rcll mov jg repz scas ljmp enter sbb mov inc bnd xlat cmpl mov dec jg mov roll or mov jg repz mov mov in dec aas mov dec out movsb sbb pop (bad) loop jg aad in lcall mov ret or call stos cmp pop jne outsl adc mov add sbb mov cmp fwait aas xor dec scas jg jle mov les sahf xchg mov test cmp (bad) (bad) or jg shrw pop push loopne test out cmp xchg push cmp pop and dec jg mov notl sarl or mov (bad) lret xor or mov lcall or jg push mov iret mov and daa cmpsl fisubr mov imul pop sbb and lret xor (bad) push pop jbe mov jo inc incb xchg sti jmp rolb stc jb inc mov pop aam aaa pop dec bnd lods push out lock es int3 popa jb push cmc andb movsb mov inc mov push jg pop push xor fistl pop jg andb jg push push clc jnp jecxz lds mov ret jg dec mov (bad) pop or jg xor stos call jg jmp push cmp and leave jmp push pop mov jl (bad) sbb push mov mov loope pop inc jns (bad) daa push mov call inc mov mov dec pop dec (bad) jge push cli cmp add sub pop lret jno aad xchg fsub or jg push mov jl mov test inc mov sbb lea ja fwait dec and mov lret jg test mov jg adc fnstcw mov inc pop icebp scas jg dec call js xor repnz mov aad mov aam jl jmp mov jno sti (bad) dec xor fs lea push sbb push (bad) xchg loopne and pop jmp push mov push jg xor rclb ljmp inc sbb inc and test xorb xor lahf arpl (bad) xchg les jecxz imul dec and sub push imul push ret push (bad) sahf mov addr16 jg xchg push fisubrl js push mov jp xchg jnp or jg (bad) pop xchg fwait jle dec jp mov cld push sti sbb lds mov mov fisubr aad out mov xchg mov imulb mov sub popf mov fxch push mov mov jg lods xchg jno fcomps sub jb add pop fstpl cmp lret pop les popf dec mov out sbb inc pop xchg mov add xchg addr16 movsl nop popa loop jg add or xchg cmp add das jmp push mov jb lods pop push xor xchg into mov bound (bad) outsl call bnd xchg jecxz cmpsb add inc fstpt xor adc jg jnp mov jg scas jne push push stc jg sbb dec outsb pop add jg cmp sub mov das lret iret dec and rolb icebp js cmpsb mov arpl xchg loope jg leave xor mov enter sbb pop mov xor cmpsb mov hlt dec push pop push jg aaa push inc xor mov xor stos pop clc in mov jg jne inc (bad) mov gs popf xor jae adc jp pusha push sbb movsl adc out aaa out bound inc xchg jo add cmp jg ljmp aaa pop cmp push dec or cmp mov imul sbb jg mov xor jmp dec sbb stos dec cmp fnstsw push jns or neg ret xchg xchg jle movsl pop not lahf inc jg int3 mov sar test jg xor mov cli mov jge cmp cmc aaa cmpsl jg lods out xor aas or mov les (bad) sub lea pusha jg ret lods jg xchg wbinvd dec cmp mov mov push lock outsl push add jb imul out jg fsubl stos pop and fstpt xor insb push movsl mov sub xor inc int and jg or mov jg loope push lds std (bad) aas inc mov loopne scas mov rcrl inc in add jg je fcmovnbe lret negb js push add jg int mov xchg popa xor fs mov jg adc lcall rcrl xchg lods ds and (bad) cmp test xor loopne inc jg pop pop cmpsb mov aam adc jae into xor push ja sub dec stos sbb and (bad) out xchg aas popf js fwait mov push ror sub scas add inc push push (bad) mov cmp mov sbb test mov (bad) cli dec outsl lahf je jg repz inc hlt dec pushf jg push sbb insb jg popf jbe and xor fstpl jg add pop into out jg or cmp jg dec fsts pop and out inc ret add mov jno adc rcr push sub xor jecxz into sbb cltd cmp cmp push jg pop gs dec mov mov sarb dec adc inc je daa mov scas jmp out jge rcr sbb cmpsl jb lock jg dec sbb out je add and push inc idivb outsl mov push sub jg clc cmp and aam sbb stos lret sub faddl inc xchg adc jne lahf adc jg mov (bad) stc mov scas jno lcall add mov push and les cwtl pusha iret mov out fcom jecxz jno and popa std push (bad) ljmp fcomps fs stc pop mov into jg test mov adc xchg fucom (bad) daa mov cmp lods xorb xchg jnp or jg pop or inc sbb jb pop pop push xlat add jbe xor jae outsb push jg pop dec jbe mov xor aam jg mov mov jb jge stos emms in push jg pop inc mov xchg data16 (bad) out jg adc lock arpl jg mov xor repz jg xor inc cwtl push jae xor adc jg xor pop sbb adc add mov fadd jg mov imul ror faddl pop adc mov xor dec testb xchg ja mov sti xchg testl aad aas test (bad) xor dec dec call movsb adc pop jno in jg lahf fwait lcall mov cmp loopne jg mov cmc faddl jge pop ret pop or divb push cmc cmpsl popf sub dec pushf icebp jg (bad) mov negb jg addr16 decl or cs pop pop (bad) je add push addr16 (bad) inc imul mov fsubr mov jg lock arpl push sub gs mov (bad) (bad) jg jae fs pushf les add or repz or xchg idivl mov push mov dec dec push decb sub in dec imull jg,pn sub cld jg (bad) pop mov neg mov (bad) les mov inc add fnstsw pop int jge ljmp push or aam in mov mov mov aas sub or jmp aam cmp sub std dec (bad) (bad) cmp outsl in add cwtl inc mov mov fyl2xp1 leave push aas into aaa bound mov cmp mov mov js jg push and lret xchg jns push shr cli jg daa pop repz mov gs rclb inc mov aaa fs or mov (bad) inc jae pop jg mov adc test mov mov dec ljmp and hlt mov jg and lds mov sbb mov mov add leave icebp sub insl push lret fdivl (bad) aas fiaddl adc andl jg xchg lcall push test into sub int3 jg mov loope cmp pusha addr16 sarl in cmp test inc pusha adc aad sbb nop scas out sbb xchg sarl leave jle or nop mov pop xor cmpsb repz out sub push add das jg xchg inc pop cwtl psrld push ja das jg outsb push rorl (bad) sub test jle sbb inc mov (bad) pop jno js adc adc in and jno ss cwtl dec cmp sti sbb add inc sub sahf arpl push sti pusha cld xchg mov fcomps adc stc repnz fidivrl pop sub jl lret or and dec mov push cmpsl add sub pop mov jg enter lods inc mov mov gs sbb loope jg scas es out push fisttp jg aad inc cmc lret mov jg xchg or sub adc jg push mov pop enter test ja xor dec pop sti mov in mov jne push out mov pop imul fsubl sub dec insl dec sub repz push jo int3 xor adc ds aas ss test xor sarb sbb sbb sbb gs fidivr popf mov addr16 xchg gs cmp dec cs mov xchg outsl (bad) mov fs je mov jg sarb cmc and mov push decl roll ss jg,pn sbb ljmp fdivl inc mov popf sti faddp push adc pop xchg cwtl dec push insl push pop adc cmpsb jbe stc jg or cs enter pop cmpsl add flds outsl jecxz adc mov mov mov dec pop js xchg push mov shrl imul jg sub aad push sar out mov insl (bad) fmuls insl repnz jg icebp shrl mov ret aam and jg fsts mov dec call repz add js test xchg (bad) cltd sub pop pop jae jg fucomip popl adc mov movb decl js fwait pop mov xchg imul sarb push adcb shrb sbb push cmp mov (bad) out mov das xor or (bad) adcl pop jg sbb or mov (bad) in push aas push xor push mov dec inc jnp adc xor scas inc hlt mov dec imul dec pop iret jg call push jp imul jb ds mov popa loop inc fisubrl jg xor scas lock pop mov xor xchg idivl lods push cwtl call jae dec aaa push dec je dec cld pop retw xchg inc push pop jg push jl jg outsb test xor scas jg jno mull sub add adc arpl orl xor cs mov jbe sub xchg in insl jg mov rcl jge mov cltd test xchg mov xchg xchg lahf mov nop and insb sub jg fisttpl enter jg mov push shr ss xlat sti mov lods mov pop leave jb inc cltd mov out jno movsl dec xlat cmp cmp leave mov cltd cmp push iret cwtl lahf pusha cmp pop (bad) movb or shlb (bad) sub arpl push fcomps pop outsl sti pushf fcmovu add int3 xor mov mul inc adc js stos fisubr icebp or xchg adc xor xor ljmp mov mov lcall jg pop inc mov fldcw je out pop mov jmp and inc mov mov fistpll ja or mov imul mov cs pop scas popf fwait stc mov mov aas or dec (bad) lods pusha scas jg repnz jnp jno push jg jb jo shr test add hlt les mov lods jo jecxz mov pop lock sbb push pop sarb ds add pop ret int3 mov or pop jg sub cmpsb mov jg fmul mov shrb and jg repz push arpl jg lahf push dec call das and xlat stos ja sbb mov jo mov into dec mov (bad) pusha dec imul scas and cld ret jg jnp fwait mov clc mov idivb in add sbb es punpcklbw jg fiadd push jg and shlb (bad) std pop jecxz xchg mov fbstp pop jne inc pop lret rolb sbb mov mov lock push jne cli mov xchg adc mov cmp jmp hlt dec cmp and shrb fnstcw push lcall fnsave daa xchg fimul loopne jg (bad) ss popf push aas sbb es cmp xor mov jmp (bad) (bad) outsb (bad) jne mov outsl imul (bad) xor inc jg mov pop or js jmp (bad) jg mov xchg dec insl mov add mov (bad) fbstp scas (bad) push jg into sti add cmp pop push stos pop mov pop jg sub sub jg xchg pop mov out mov and add jmp es dec mov mov cmp xchg sub inc js inc std jg adc inc mov inc negl clc hlt xchg loope mov lahf addl pushf push cmpsb jg cld sahf bound (bad) jmp jg insl popa or js cwtl xchg dec (bad) ja and jg outsl xlat push adc push and mov mov jg ror cmp stos mov push dec das sti cs outsl in push bound mov jg lcall jg dec sbb jg call pop popa and aas push inc into rcll and jg (bad) aaa pop cmp sub push jg enter fldenv jp int3 scas add dec lret mov lods sti xchg push pop jb and fwait inc sti and cmp mov jecxz push push adc inc jg adc push lret shlb dec or dec xor sub stc pusha jle jg push in scas adc imul pop push lods out pop jp sbb and fdiv loop xchg in inc adc (bad) pop mov xor mov pop add bound dec das imulb mov ds lea mov ret xor imul fmulp outsl dec ljmp (bad) jle scas ss icebp outsb cmpsb pop scas push pusha inc lock adc ds arpl rcrb cmpsb jl (bad) jg insl inc adc icebp mov xor mov xchg jle lds in lods ret in jg dec inc negb or jg outsl or xchg sub cmp pop into (bad) mov inc xlat sbb addr16 sbb and pop jge dec xchg pop rclb inc (bad) jg xchg pop test loopne,pn jg mov int3 (bad) jg sub xchg sbbb mov jl popf and push sbb jg movsl pop rsqrtps (bad) xorb leave and mov push arpl jle mov push outsl xchg (bad) out jg cmp gs das adc mov out jne cmpsl icebp pop xchg pushw sub jo cmp pop in inc cmp test daa sbb push in or and cmp jo xchg jmp lahf push mov jg ret add xchg push push jg pop xchg push (bad) in scas jg inc (bad) mov mov sbb inc pop inc adc sti add inc js scas mov mov jg sbb repnz cltd inc or int pop mov xchg jne cmp in dec std jo bound xchg (bad) sbb or shrb push mov mov mov jg mov adcl xor test jg jmp scas repnz dec sarb jp pop cmp inc jg fldt mov xchg xor outsb popa jg jne mov cwtl bnd add outsl dec sub mov jg dec cmp clc daa scas cmpsb jg movsl adc outsb and jg dec cltd insl or inc xchg and (bad) sbb jg push pop add cmpsl push int ret and ss xor jg movsb cs mov or sbb add mov dec push nop jp sbb cmp outsl push dec add es jg xchg xchg sbb mov ljmp stos mov ss popa mov jg pop mov push sti xor inc nop jg adc pop lock pop or and cmp leave pop jg lods sub pop mulb add loope loopne mov icebp js scas lods cmp iret movsl ss inc sarl and int3 cmp sub fxch mov xor dec jmp (bad) sub les mov jg fidivr xchg nop daa sub roll jg std push mov (bad) mov fisttpll xor jg int3 popf sarb jge pop jg (bad) push mov sti pop repz addr16 mov insl push loop jg cmp scas cs subb daa adc jg loope pop jge or jg sti out sbb fdivrl ss insl inc fs cli in mov inc stc xchg int3 cmp mov push inc ljmp pop sub (bad) mov aad cmp xor inc cmpl fsubp ja xor outsl (bad) and fistpll scas push adc outsl in dec call (bad) frstor cmc jge,pt sti add dec xor out popa add mov dec push insb bound out jl xchg inc pop es jg xchg data16 clc xor adc add out lcall xor inc push mov or inc add mov xor cmp lea pop add jg (bad) mov push sti jae mov push or cld mov xlat jae or lahf xchg mov mov mov mov fild push push cs inc and aam pushf data16 imul mov pop insl std pop mov jg xchg pop (bad) insb jb ljmp je jae pop sub les mov out lods nop add jg outsb sub loopne jg (bad) jecxz or ret mov mov jp xor pop daa jmp mov outsb jg mov add aas pop jbe out jle fsubrl and stc jo mov dec add pop xlat adc mov mov cmp cmp negl push ja jl mov in sbb adc jb icebp aas cmc out cmpsb fwait jno aaa dec mov (bad) sbb dec jnp decl add sub ss pop sub and loopne cmp dec mov jg clc sarb aam popf ds mov push lods lret (bad) lods loopne dec dec add out mov add fidivr into or xchg push lea dec bound inc gs mov repz xor mov mov xchg dec inc mov jg xor fistp or test sarb fimul mov call pushf push and lods inc push pop stos push adc jg xor mov mov fdivrs mov jg enter push stc adc and and pop gs sbb pop daa push inc rolb imul test scas mov aad cmc in sub mov mov mov jg out push sbb sbb xor push loope,pn popa pop jg mov jle imul dec push movsl mov sub mov cmp pop icebp scas push push dec sbb into shll rcrl movsb and inc (bad) into jg jb lock xchg stos or std add test dec jmp repz add jg cld lea jg inc pop dec sub pop or inc jg pop rcrb xchg test ja xor leave inc and sbb (bad) jb cmpsb mov pushf jns mov cmp clc aas push cwtl mov daa stos inc push decb lahf sbb loopne lea cmp jg popa lds out sbb cmp jp sub test adc (bad) xchg lcall hlt pop int3 insl jg arpl push repnz in jp (bad) lock inc cmpl jne in (bad) and mov cmpl xor shrb jo lods dec dec jg xor lods sbb mov call ss aam xchg inc jg fwait dec push mov fisubr inc mov data16 inc cmc sbb xchg mov lea mov (bad) mov bnd (bad) in scas lcall jg pop inc cltd pop and xchg jmp loope ljmp xchg push stos cld push mov pop add loop ficomp aas jo dec or frstor jg mov mov jg dec mov cs mov xor pop sub adc pop jg out cwtl xchg aam jg sub dec mov mov jb,pt sahf ljmp into inc insb (bad) cld bnd mov sub lahf push fldt iret fisubrl pop and roll mov jg cmp popa sbb leave push (bad) mov out mov cmpb jp in pop addr16 and dec add cmovbe adc popa xor int jg pop or sub and push and nop cs sti jg std lret out jns and inc mov into arpl (bad) (bad) dec nop and cmp clc shr ja jg arpl test pop ret insl jnp jg fistl mov mov cmc fwait jg fbld adc inc out cmp leave adc enter out xchg lret (bad) push jp in mov rsqrtps rcr adc jbe out (bad) pop sbb dec iret jns jg pop pshufw cmc (bad) jg cmp xchg outsb in repz inc mov and movsl ljmp leave fidivrl fdivl dec dec mov sti jle push jno inc nop sbb int3 and nop push or mov and mov sub fs pop pop jg int ja adc mov and xor loop jp xor es mov (bad) pop jg dec rcll push mov jg in fs (bad) movq xchg mov sbb pop inc jg dec sti addl jp jmp cmp popf fistpl jg xor sub lret jg push ret outsb stos inc add jg jmp cmp jg out or cs jg shrl int3 jmp push jg push scas lods outsb push xchg fwait mov adc in das lahf leave pop je push jg popf adc mov jecxz loop sbb jl iret mov (bad) mov decb sub cmpsb and mov jae int js xor or inc mov inc outsl xlat dec push mov xor stos jmp sahf sbb imul mov mov jno xor lods cmp je push xor mov pop jg sahf sbb dec cs jg lds imul std push jg inc mov jg,pt adc iret out mov xchg fwait inc icebp inc jge xor sbb inc (bad) cmc jg repz mov pop daa sahf addr16 jmp inc stos mov mov inc dec dec mov jg mov jg je jnp hlt mov mov lock push push loope xor das jae fisubrl insb mov xor popf push leave mov jg adc xchg dec dec push sbb add lret mov test dec dec mov fistpl call add inc inc lahf cmp sub jae dec sbb loop es sub cmp lods push and ja insb aas in mov cmpb jg cmpsb xchg clc fsubrs jg push cli xchg out push call sbb xor pop sub mov (bad) jbe sti pop test and jg,pt dec or push mov jg mov loope mov jmp jg cmpsl or lods stc sti imul iret xor fidivrl mov fldenv push sahf (bad) push push jg icebp jmp stos and lods dec or leave int3 aas jnp nop add and dec mov push insl xchg mov sahf sti hlt inc mov push in imul (bad) divb add and add add cwtl out sub fist mov icebp mov mov les mov std jg out loop lret sub aas jae xor xchg mov lcall or rol push mov mov mov out or loop pushf pop pop fnsave push cmpsb jg mov out jg in adc dec dec icebp jo cmc pusha jg mov sbb pslld iret (bad) sub scas inc pusha inc popf mov and jg xchg jae push je aas jg inc jns sub out bound cmp (bad) jg adc popf test out sbb (bad) cmp sarb sub mov jmp aad pop pop mov arpl xor mov out jl mov sti sub addr16 sti ja cmp xchg or pusha dec es pop push jg push add or cmp in mov mov pop sub and mov outsl push or jno jg dec push sbb rcrl mov jno loope jg lods lds sti cmovs sti shlb xchg dec mov xchg or jbe (bad) or xor jg outsl and inc mov loope dec imul int3 and mov mov jg ds xor adc sbb sub (bad) leave jbe mov mov mov or (bad) ret push jb inc inc clc jg pop push or mov aam xor add jg inc (bad) (bad) repz mov jg clc imul sub (bad) mov loope mov add mov loopne jl jae dec sar jno cmp pop cli jp fdivs adc adc add xor cwtl mov jg cmp (bad) jo jg pop stos lahf push in xchg jg roll sub mov jmp adc mov mov jg dec mov push aas arpl xor dec adc mov repnz out pop lock data16 (bad) mov mov lods cld sub mov mov jge jg sub add xchg cmpl bound test popa jo mov test sub shlb std push push cmc jg xchg cmp es xor push push adc sarb mov fcoms sti pop dec jg add push push adc lcall dec mov jg xor outsb loop mov pop jae push outsl aas lds cld mov cwtl jl movsb lock jne shrb add jo xchg cmp pop mov add jb (bad) jg lods adc push xchg push popf mov inc inc iret xchg jg vmovapd es jg pop scas mov insb loope jg pop stos dec movsb pand repnz ret nop jg sbb xchg pop push mov mov or xchg jae enter or popa xor jg das lahf cmp mov push jnp push mov jg mov mov dec pop jb scas pop mov xor inc or idivb xor cmc icebp rep aas scas ficoml sbb addr16 jg or sub xchg out in insb pop mov jg cltd cmp xor dec aad lret xchg dec std mov sbb pop cs (bad) bound aas inc icebp xchg lods stos out and pop jo in aam into or push mov jg aad cltd sti pop jmp xchg ja dec (bad) leave mov jg cmp mov mov sahf lret mov aaa mov insb dec xor jg dec mov push and cltd stc jno cmp jg dec dec or inc aas loopne pop das cmp push inc mov loopne and sbb adc xor cltd dec push jbe jg hlt scas mov daa push cmpsb jg cmc imul sahf adc push (bad) pop cmc sarb lahf jne add das jmp or bound scas sbb jg jge push jle popf jg outsb or jg psrlq xor xor mov addr16 and push jo out jno sbb pop cmpsl inc packsswb xor cmp pop rclb jge and in sti fisub into or imul rcll ret inc jnp test stc mov idivb inc sub jl loopne outsb sub (bad) inc cmp aas mov jl jae popf jg out mov push fwait aas loop cwtl imull jg add fsubs fsts movl sub mov xchg call dec daa xchg mov aas xchg (bad) out mov sub hlt pop push incb sarw mov stos ja jmp xchg sbb fnstsw aas lahf aaa hlt or pop cmp sarl icebp popf xchg sbbl jg cmpsl push aas mov shrb notb mov push (bad) or inc push test call jg sbb cmp adc xchg push jnp push jg test les ficompl insl mov add movaps jg aad stos pop sub mov addl fildll cld or sub imul mov (bad) addr16 das mov jg push pop lods jle sbb gs fscale mov jno xchg or or jg jae cmpsl jecxz ret dec enter sub xor inc test jo leave cmp mov cmp lods mov stos imul aas pop dec (bad) les push bound data16 nop jle lods es jg (bad) out stos iret aad mov fwait sbb mov mov sub loop outsl jns xchg into mov cmc push pop mov pushf test aas ret ret fwait daa cmpsl push enter (bad) nop jg ds mov pop mov jg cmp jnp je addr16 stos jno out sarb add and mov dec push mov add or mov xor mov push ret xor add jg dec xchg imul mov push cltd mov jp jg pop (bad) cmp or fsts lcall lahf jg repz cmp test mov ds cltd jg adcb jg push push pop add leave push dec mov adc dec in pusha or aas cli xorb test pop ja push mov aam outsl stc push fdivrs adc inc ja ficoml aad outsl jg xor mov mov aad adc xchg inc inc adc mov lock mov mov xor fcompl rcrb lret pop mov ljmp loope mov add mov out call out adc lds xchg jg xchg pop sub push orb or and jb mov dec jg aas mov jg ljmp mov lcall push call add or sub push xchg dec faddl daa jo fs dec fcomps push (bad) sub lret addr16 ja js push int in dec ja mov fmul das outsb pop call scas imul xor jg pop xchg mov jnp (bad) jg and outsl ret xchg xchg sbb sub test jg in dec (bad) jg fs inc js mov mov push and in stc mov pop fdivr ja lahf sbb jmp movhps inc pop sub push adc jl jbe out inc icebp test inc insb mov lods (bad) mov (bad) fidivrl jg cmpsl adc xchg cli dec push xchg jns push add repz inc test (bad) cltd xor adc js dec scas add arpl ss je and ds jecxz mov pop out mov es fwait jo push ljmp (bad) mov lods mov cmp dec scas fiaddl adc fstps out pushf jecxz,pn inc cmc jmp xor bound jb mov jg cmp (bad) aad cmp push out dec xor idivb xchg inc int (bad) out rcr fwait and adc sarl mov mov jle movsb test in insb lods jecxz inc (bad) jg shr mov enter sub pop jno (bad) mov push (bad) mov push stc xor in jg mov xchg shrb in jg and jecxz or insb addl jg dec jo mov pusha jmp sbb and or fcompl insl jg mov (bad) cmc int3 pop loop mov scas or jnp jg dec mov pop jg xlat sar stos and (bad) mov cmp hlt stc cmp cmpsb sti (bad) mov xor loope iret ret add lds faddl jg mov mov out pusha lods iret idivb test shr mov jle xchg pop bound call and inc push push lods stos sahf mov pop push fmul fs jg outsl (bad) lret xlat jg xchg sahf cmp mov xor pop outsb pop mov sbb in push or rcr inc and mov mov xchg into or fcmovu ret in (bad) cmp adc inc and jmp push mov push leave push insl or mov jbe (bad) mov imul pop addr16 scas mov xlat in dec imul pop jle stc sbb xchg jg sbb xor mov inc (bad) std in add pop or (bad) fistpll ljmp inc sahf jg ja std xchg xchg movsb sub jg mov out jg jb ds sbb mov stos (bad) and mov mov neg aaa jg or outsl mov mov repz les sbb jle pushf jg sub sbb lret pop jg js xor cmp negb sarb jnp jo cmc pop lock ss les (bad) inc sarb xor loop jg mov lahf fsubr test inc push sbb dec mov inc pop mov push xor mov in or dec xchg dec hlt jmp push and in dec insl jnp push pop push sub push pop dec (bad) fsubrs jo cmpl mov je xchg cmp es dec les mov lea or push jg xchg push scas push jg add divb int3 negl cli and pop sbb pop (bad) mov cld and or xor mov fsubrp cmp inc jg aad push iret (bad) lock jg movsl loopne cmp loop js (bad) jo mov adc pop jg js stos iret rcrb jg enter leave and jg cmpsb adc sub inc clc or icebp jge imul (bad) mov stos pop mov andb jg mov cmpsl xor dec int add jg xor insb fnstsw gs int3 mov mov repz mov cwtl popa push jg js cmpsb daa mov fdivrs test sbb adc jg add mov mov outsl mov cmp dec and sahf imul test push xchg sub subl loop out inc imul jp icebp add jg insb and lods jae fdivrl sarl jne hlt mov cltd in fmuls adc (bad) push fstpt std nop stos inc mov lds xor repz and in jmp inc add adc (bad) mov xor outsl cmp xor add fildll icebp cmp pop inc mov mov push cmp adc inc outsb jg dec mov dec aas adc in jbe sti dec inc add lock pop lret stc in adc xor mov rcrl mov and jg movsb aam jg cmp jns jg out into pop and xchg cmpl inc lret mov mov cmp out jg add imul sbb jmp loope jp mov jmp jae cmp bound pop mov adc jbe sbb mov dec sti mov dec shll insl mov push push push inc jg mov mov das (bad) xor mov testl mov jg mov (bad) jg or push jg (bad) pop sahf mov les aas out inc cli sti jle iret ja (bad) jg aam sub and jg insb out xchg ret and jg icebp add sbb ds add xchg nop mov imul adc or pop inc mov inc sahf inc (bad) mov inc fidiv jg test fsubs das xor mov (bad) xlat jo dec addr16 pop pmulhw inc fldt test stos inc int jg repz pop in mov mov add cs jg std push sub xchg cmp (bad) pop sub in sti sbb jne mov push enter je mov fs (bad) or jg jns xchg fistl add js mov mov inc dec test std scas (bad) mov loope roll das sub shr lahf mov and rclb js bnd stos sub xchg mov add daa push jmp xchg scas enter fs sbb xchg jo jns jg fsubrl dec push les jg adc sub jg xor or popa mov fistpll (bad) in std and mov xor and dec mov pop (bad) pop sarl cli ljmp imul xchg movsl cmp clc pop dec cli adc xchg mov bnd sbb out fdivs dec adc ja mov cli repz aam imul in pushf scas in jg lods sbbl mov jg aad xchg (bad) mov sub xor out mov add sub pop mov outsl icebp lret jnp push push xor mov cmp dec xchg sbb (bad) mov cmpsb cmp pop hlt arpl imul outsb mov repz hlt fbld mov test cmp ss pextrw or aaa adc inc jo dec add sub pop mov aas popa in call inc jl mov dec loope scas pop dec inc and dec arpl pop sti jg dec xor int3 out dec pushl inc xlat push mov scas insl xor xchg adc sbb xor inc scas inc sbb loopne js cmp push mov mov jg xchg mov jg cli push stos arpl movsb mov sti fnstenv jae js push adc inc mov xor dec sahf mov lcall mov mov scas dec jecxz pop and js enter mov and jg pop adc out jg,pt insb aad mov sub xlat xchg pop cld adc mov jg mov sbb int3 jg push add clc xchg sub popf decl jg jl pop xor test jnp or mov cwtl fildl fldenv mov vcomisd mov int loop inc ds dec or mov stos scas (bad) mov jg or daa dec ds xchg lcall insl jg fdivr notl jne aas je push sbb shlb in pop sti pop sbb adc shrb sub outsl (bad) xor add dec sub add inc nop jg mov add dec mov and xor adc pop test jnp mov sbb std dec int insl cmp inc and ret and cmp mov jg cld inc ret lret ja sbb jg std mov int jle sti or adc mov fwait pop jg test mov jg cltd pop call aas arpl cmp incl and idivl int sub cmpl movsb leave repnz jge mov gs cmp jg das push xchg sarl mov adc dec jg mov and sti add lcall out adc inc adc jnp inc sub jmp insb addr16 addr16 jg cmp (bad) jle mov pop loopne push in jg cmpsl xchg out sbb inc inc jno and mov cltd and and jg sub repz push mov dec jns popaw cli sbb pop (bad) xchg lcall mov inc jge (bad) push nop mov xchg leave mov inc arpl xchg pop nop jg repz loope and cli jg hlt push jo pop roll adc jg lods dec in ret mov daa int3 sbb pop rcrl jg in loope ror cld jp icebp cwtl ror mov scas sbb data16 jg xchg mov inc push or jg clc jne sub cmpsl out jg out jle in jg sbb mov pop add jg test pop sub push fnstsw or mov xor adc repz fsubrl or push jae xchg inc jg,pn xchg outsb push jecxz and add sbb xchg xlat lgs jae jg dec inc in scas pushf test mov cmpsl pop fisubl jg cmp xor fsubr jecxz test test ds push aas push dec cwtl movsb mov jg inc je mov adc or cs insb inc xchg leave es inc sbb sbbb fldenv js inc test push not out dec and inc inc sub mov stos sub das sbb mov call ret packssdw dec mov sub das sbb aad lahf jl xor hlt inc xlat fiaddl fstps pop xchg jg les mov pop and inc (bad) and mov cwtl outsl lea dec rcrb mov imul push pop cmc ljmp call push jg fistpll and and mov xchg jg sub into lcall fstpt mov loop jg mov dec or cmpsl lods add jl adc mov hlt adc xor popa and cmpsl inc (bad) jg insl ret jno pop jg and int jg fist xor pop push jg mov clc sarl xor jno sti inc xchg pop mov adc inc push inc nop inc sarb xor sti jg dec push lahf and inc xor dec push ret jns clc mov mov pushf mov jg fsubr rorb inc aaa inc loope les push mov xor pop sub shl inc dec jne fistp test sahf rcpps xchg push inc pop jg cmp mov jg mov jecxz (bad) pop lock ljmp hlt notb aas iret (bad) fmul add lea leave xchg push nop add jg mov pop (bad) mov dec dec sbb mov jg dec jle or js jg sahf imul xor mov test je mov add arpl fstp mov (bad) mov pop lcall stos sbb push jae std aad ret push jg fldcw fmuls mov push outsb adc insl cmp and into pop jg lds in outsb (bad) dec jg ss pop push inc and mov push or jg jno loop jns (bad) jg icebp jo (bad) std fild clc jge sbb and cmpsb pop xchg mov jg xlat in pop cmp push jg adcl mov sbb adcb mov inc aas dec cmc movsl ds es add sub loop pop dec cwtl das cmp in mov fist push ss inc xchg mov fdivrs xchg imul cld aas mov dec push inc in jg divl enter lock loopne out imul xchg loopne mov les jg hlt ds inc mov stos stc mov push xchg imul inc sub addr16 aam mov ret (bad) jg test or jg mov adc jp aaa scas insl adc int3 add lea mov inc mov inc call adc jae fisubl mov mov pop dec pushf les test pusha stc mov xor jg inc sti jns test mov rorl lret pop pop dec sbb lahf inc mov idiv xchg mov (bad) mov jecxz jg adc pop aas jne push adc sti xor scas outsl inc dec js jno mov ds dec sub lret jg cmp mov pusha inc je popa or sub out inc imul jle sbb add mov imul jno ds and cmp mov cmpsb dec repnz ljmp arpl repz xchg in jg xor jmp (bad) ret cwtl std mov nop xor sub fsubrs ja lret mov imul in push cli jbe jmp jns lcall pop std inc jg in in aad pop jg cmc and xchg xor scas mov faddp jg scas and inc cmp sbb fnstsw jecxz aaa movsl or inc mov jle hlt cmc and loopne jmp and xchg mov sarl cmp sahf jg add mov adc loope jg int lret dec inc fcomi mov pop jge jns jmp out loopne int fstpl iret aas inc fs push rcl bnd mov fnstenv dec lahf jl aas push push push stos sub aas das or inc int pop arpl xchg ret shll repz and test inc pop sbb cld jg adc dec into insl sub aas mov mov bound (bad) dec lods sbb enter sub mov inc mov scas in and mov or jg xchg shl dec pop or push out pop mov lods push and add cmp mov sahf pop mov or lret (bad) loop stos jg add xchg (bad) fidivr jne dec out push mov dec negl mov outsb push mov in (bad) jg inc sbb jg mov scas pop jg lahf rcr mov jmp and jg pop lcall cwtl jg push sahf bound mov jg in add xchg sub cmp outsl xchg popf out mov stos mov ja mov mov lds push pop adc sub lahf cmp das push lret out push xor jg pusha xchg popf push stos sub addr16 inc insl lods shl xchg aas jecxz mov xchg inc sbb jg jmp outsb mov xchg int mov in xor jg je pop hlt adc jg addr16 cs inc sub and fisubr jg call iret sbb ficompl push jg sub outsb insl pop mov pop dec xchg add cmp jg sub xor hlt sbb mov xchg inc jb mov mov sbb loopne icebp mov dec jnp add pop fisttpl sub into pusha jg xor cmp pushf out add test jae jl in loopne inc imulb pushf daa inc popa mov fmull aaa xchg sahf jg xor sti lret test jg push push mov push cmp jo call xchg mov xorl and loope hlt lock dec pop push enter jg lods add mov jmp int3 sub jg (bad) aaa aam dec shll clc push ret mov gs mov pop pushf iret movsl test and inc xchg (bad) sub stos (bad) aam scas icebp das inc or lods movsb add test (bad) sahf pop outsb sbb std (bad) jg xchg (bad) loopne pop mov jg clc sub lods mov and sahf das pop xlat scas jg fs lock roll jbe (bad) dec pop mov leave pop dec jg jge cmpb cmpsb mov jbe mov pop icebp dec push test push cmc pop xchg mov lock jg and pop xchg push jg lcall mov xchg loopne out cmpsl jo mov pop call dec mov jg xchg pop sbb faddl (bad) pop jg popf push mov cwtl les outsl (bad) cmp dec push lahf iret pop (bad) cltd jg out cmp movsb addl lock inc loopne sub pop ljmp sti lds jg (bad) mov adc cmpl test inc jg push fdivl jg jmp xor outsl fwait repz add pop pop out insb insl push andl test jg repnz roll in cld jg subb sub xor jg movsl add lcall jg sbbb loop aaa xor (bad) mov outsl in xor rcrl mov dec test je insl les fidivr loope jge scas es cmp pop aas dec push lods dec jmp add bound pop inc inc (bad) jg mov jo inc and push mov jns movsl pop jle gs add (bad) jo jg dec cmc sub inc mov and push aas and sar jl (bad) dec scas je inc push lret adcb mov jg jae (bad) popf lahf out test fcomps pop jno and push jmp insb add push push test cwtl divb inc dec loopne pop jg out dec bound out jg dec sub xor imul mov adc jg insl jno out (bad) mov jbe bound jl jmp cmp and jg push push inc cld jecxz jg (bad) icebp sbbl pop jg and pusha cmc push jg je imul sub lods mov dec or and scas mov pop test add push (bad) call mov mov ja (bad) lcall pop enter sbb (bad) idivb stos push mov les (bad) bound mov mov jg fadd (bad) lcall pushf (bad) cli outsb pop pop jg stos and adc push stos clc ja loopne lcall es cmp push inc int dec mov pop jg lret decl mov fimul jg cmp inc cld jg enter xor jecxz aam leave pop aad in jg nop xor test jae rcrb mov mov inc pop pop fldcw add sti scas je mov adc cmp jmp arpl popa and push xchg mov vpaddusb int mov aad pop addr16 std mov mov dec xchg lock aas adc loop push pop dec dec fnstcw (bad) or or daa scas mov jg dec dec xchg jle sub mov shll leave popf cmp jecxz push sub sbb sbbb js hlt popf in mov call cmpsl mov pop inc mov push or lock ja ds imulb mul pop clc pop adc and xor push pop jge std sbb ret sub aas bound aas dec push stos jg inc lret cmp jg lods rclb aas aas (bad) pop sar inc das movsb jle and (bad) lock xchg pushf inc aam xchg scas fwait push hlt test pop sbb sub imul cltd xchg push jle mov jg xchg cmpsl sahf xchg lcall stos (bad) div pop lods mov rcr dec (bad) call add cltd jne mov xor mov loopne or ds pop lea cmp or xor add mov jg cmovne and out jg movsb mov xchg push cli arpl xor in (bad) repz add sti rclb std inc clc inc and jg cmp aam mov push out and aas mov test or aad mov lds icebp std lret dec clc jae ret insl mov les inc (bad) iret jg and push push inc mov addr16 das pop inc sbb dec aad dec add pop out add imul inc pop inc mov pop rcr divb jno jg inc and fmuls jns jg sbb lea inc dec aas arpl push and in insl stos jg xchg inc mov jg std mov push dec cmc out int3 ljmp mov pop in test mov adc cmp inc mov addl mov nop js jno loope jg in (bad) mov xlat mov cli data16 xchg dec jo test push jg push pop lock push (bad) insl fmul negb sub pushf leave ret and jge test inc xor jg adc rorl adc les dec sbb sub jmp sbb loopne pop fwait push (bad) aad cld ret fstps cmpsb (bad) sub jg and leave add inc les push push out xchg jg icebp ret mov mov jle out cltd outsb jg (bad) mov mov inc jae in inc scas push jg lret repz add int les jmp jg (bad) cwtl and jle push sahf fnop sub mov jnp inc insb adc mov mov mov pop mov xor or sub (bad) mov test jo sub sarb sbb ret loope lods cmc xchg mov push jno loopne mov sahf loope int3 adc popa jae es xor mov jg cmp je mov leave and and jle sub push adc dec adc (bad) loop jg cltd inc xlat jle xor and out dec cld loopne cmpl les fs sub into arpl jg loope fnsave (bad) dec xchg loopne inc jmp add addr16 out fsubrl jg adc sahf sbb jg sbb test (bad) dec sti repnz scas jg fwait cmc mov and daa push mov cwtl dec push (bad) lock inc les mov or adc inc mov push in mov adc ret jo inc jg (bad) jae stos pop mov push jbe fcmovnb xor jecxz push pop lret xor mov xchg push dec jne or mov mov fs cld push mov mov sbb mov inc (bad) mov es jne aad sbb jae add mov cmp es scas push pop int3 mov mov cmp jg add (bad) fnstcw jg pop xchg (bad) lock xchg jno rcrb mov cmp fstl and xorl sub daa cltd cmc jg inc lcall push pop loop ljmp push js jbe mov out js fnstsw xchg and pusha pop push push loop jg cmpsl xchg jl jns ret jg xor xor jg mov cmp cmpsb out adc (bad) jg mov mov adc push cmp jg ret adc ret scas loopne aam jmp inc out jg xchg (bad) ljmp movsl xchg and mov adc loope mov test jle jmp mov cmp dec sti test xchg xchg je inc lods addb arpl push sub mov dec aas insb sbb jg push add (bad) jbe jg lcall jg sub adc movsb inc xor dec pop or pop popf jg negl cmc jg (bad) cmpsl sbb add mov clc jmp mov jg mov sbb mov jno jl mulb push jg shr stos dec out cltd aas aas dec mov pusha cmp popf sbb xor int jg ljmp jg cld hlt imul push mov cmc addr16 (bad) mov outsb jns dec shrb mov (bad) dec sahf cmp dec outsl dec jg mov cmp ja cmp inc jmp int3 mov dec (bad) cmc add ret push jg cmp outsb out je mov mov pop (bad) jb push aam lds lea push sbb fiadd fistpll loop jg push jnp dec mov bound pop dec push or sub mov lret imul xor add or xor add sub fsubrp out loope lahf out jg xorl cmp push cmc jbe xchg sub dec out insb insl arpl push ret sub mov xor mov (bad) push lcall fmuls cmpsb loope (bad) sahf jg xchg adc pop jg call push dec jg loopne,pn jno ja ds pop lahf int into nop mulb mov outsl pop fiadd and mov inc pop fidivl inc jg insb imul je cmp mov sub push sbb jo repnz and subl cmc inc jg,pn mov pushf jecxz or int loopne (bad) jg arpl in lods (bad) call add jg mov das lods imul jno sahf pop mov lahf and ret xor fldcw inc call sbb js ljmp jg daa mov adc and popf sbb ret je xchg aad in (bad) sti (bad) xor jge movsl jg rolb fs mov mov xor sub outsl push fwait ss data16 std (bad) jo adc mov daa aas add sti aas dec das mov movsb dec fwait mov inc xor inc gs dec mov out outsl jnp add mulb int3 andl ss and adc pop fwait cld pop jg and add sbb sub adc incb or jmp push cs (bad) xor adc stos push jg push and ret mov bound jg push loop (bad) cli and jg or cmp mov jecxz in or ret and jg mov mov ss pop cmpsb add fwait imul jg rcrb cmc jg mov pop popf jg clc mov rcrb jg addl ljmp js into jns pop mov icebp divl mov (bad) cmp mov jg dec stos ja sub out rol pop aas mov cld ljmp and outsl stc pushf out xchg lea outsb out daa fucom ljmp mov mov pop pop lock jmp loop jg insl push adc jo sub cltd cmp dec jnp dec sarl push jg or add fidiv mov cmp cwtl subb mov xchg aam cmc mov adc xchg dec mov add xor push mov mov movsb inc mov xchg or and and ja insl push jmp ret in sbb sti aad xchg cmp sarl push sti xor xchg xor decb pop (bad) jg inc lahf xchg (bad) into dec push (bad) sbb dec mov pop jg insb cmpsl mov inc aas mov push xor mov test fwait daa jg aaa mov (bad) movsl xor mov pop ret icebp cmp jbe pop jne out in add mov mov push iret jo lods push jg jb cmp push pop cmpl push jg stos lcall xor sub int dec sub pop sbb inc sarl jg lea mov js ja (bad) dec cwtl jl pop ds (bad) (bad) sub jb xchg sahf sbb pop add out cltd ret das jle jg dec ret cmc mov je sub fisubr stc mov jge jg adc push cltd (bad) xor rcll xchg mov and lcall jg repz out xor xchg int3 adc jg lea push cmp adc (bad) jg and repz lds adc xor or in cmpsl xor inc mov inc sub push jp (bad) jg inc xlat sub pop arpl mov jns jnp sahf and mov push fisubr jg cmp push insb loop jg (bad) aad push rcll jg adc into fsubr cwtl mov pop iret inc jg xlat jmp (bad) cli popf jg popa in movsb pop mov jo jne mov repnz rolb lods ss dec shr jg add sbb cmp and push insl ret push jg jmp cltd jno pop pop jg sbb cwtl push adc std mov jp pop test or ja out inc xchg jg jl mov jg adc int out test mov mov xlat dec scas outsb mov push jg popa loop (bad) lock bnd mov leave (bad) pop push repz mov xchg dec dec inc or push leave inc fdivl int dec sbb jg mov mov lahf pop loope cmp iret mov cmp cli outsl dec jnp push push fnstsw addr16 enter push std pop adc (bad) repnz fisttp mov cmp into sti sub pop sbb dec aas imul scas xchg icebp sbb pop popf addr16 push mov add pop sbb jle pop mov div cli cmp lret sbb int3 push arpl jg inc lods jo (bad) frstor repz mov push xor sbb jg in jnp mov lods jo xchg jo jg mov xchg and sarb hlt jns cmp jg in sub je iret popf jg mov add (bad) (bad) sbb mov inc nop jmp pop or adc (bad) mov and es scas sbb popf or cmp (bad) ret push mov in in and pop fisubl repz icebp loop jno movq or loopne jg xor sarl push ud1 bound cmpl sub lods cmp push xor cmp scas sub subl dec std push fwait jg dec jno xchg or jae lret outsl sub jg xchg ret fiadd outsl jb xchg addr16 push dec jg lahf cmp sbb addr16 cmp or imul out cmp mov lods je data16 outsl or jp xchg (bad) pop inc aas sub aam ficoml jae mov sahf inc aas lahf push xor inc jo imul jns dec and jg pop aaa dec pop in inc mov adc out jg xchg ss leave in mov ljmp icebp mov pop xchg cmp pusha jg inc push in adc jns lock mov in pop cmp jg adc jb fistp les push aas adc add inc test int3 xchg mov jg scas shrl lea insb ret icebp clc fild sbb lods jo dec add outsl dec cmp dec arpl push push pop jno pop stos mov mov xchg push repnz dec rclb lahf push jg and (bad) mov and test mov and and jg sbb bnd fistpll xchg (bad) jg mov addr16 jle std push push xor sub incl mov jmp or dec imul loop in cmpsb int cmc inc mov sub jl xchg mov andl inc or (bad) sbb aas jno loopne lcall pop test push ret cmp repz push adc call aad pop mov aas stc je mov cmp or sub (bad) mov mov pusha jg jnp outsb add xor or mov repnz pop dec sub popa clc jg movsl outsb mov jg popf adc jg cli adc and rcll add out jg insb jne mov ds jbe mov jg es sarl jg mov lods mov loop pop into sbb mov sub inc test cwtl adc xlat ja sbb lret (bad) jae adc test call mov andps push jg xor outsb jg pop idivl fsubl div dec inc popa push sub jae inc or cmp adc pusha sarb cmp xchg push popa add aam mov (bad) popa and dec jg jecxz or arpl (bad) dec outsl pop repz jg add ljmp sub jp lea push test clc out es jg add sbb mov cmp jp pushf jecxz pop mov or sbb cmp push lds ret addr16 cmovnp mov jecxz mov lods ljmp cmp cwtl fadd push jns xchg sti pushf fidivl push je push jg rolb push jg jae ror in loope mov cmp mov insl lds imul xchg scas jl pop or ds pop push push repnz dec and imul mov mov jge gs mov push movsb jns lock pop nop push and push jp (bad) arpl and pop mov or and dec inc insl push push or mov mov mov push jne imul add cmpsl jg hlt lods gs (bad) or sbb lods dec sub inc jg roll cwtl push dec in jg xchg inc mov inc insl mov lock mov bound push sti and dec adc xor adc jg call inc ret mov je dec push gs in jg or mov lock jne lea xchg pusha mov mov pop sbb cmp (bad) inc jae cltd (bad) adc mov sbb outsl test dec jbe minps jg and outsb hlt cmp aas sarb adc insb loopne into jg fcmovnbe fcompl or mov bound jno,pt jg lock (bad) repz inc and xchg mov imul lcall ljmp daa jg lcall inc push jg leave push jmp push xor jg jl mov cmpsb bound fisubl fnstcw mov jns jg out adc scas inc test ja fldt pusha jne (bad) mov push xchg stos pop mov or lods pop cmp mov into mov int jbe adc jg mov dec mov rcrl arpl dec mov (bad) xchg pop ret aaa jg arpl dec push xor sub sub jp xchg movsl jg insl das mov lahf cmpsb push jg scas pushf orl mov add xchg xor push int3 mov cmp sarl mov fimul test dec push sbb push pop xor dec jl sbb repz xchg jb xchg pop mov cltd fwait mov jmp mov pop lods dec add inc loopw sbb sbb aaa cmc clc lret pop sub pusha inc aam jno sbb sarb outsb jg ss pop jg ret lahf lret adc xchg jg sbb fcmovnb pop imul pop xor and cmp (bad) or fstps ja int jg cmc and cld imul test push enter movsb js and lods jmp adc xor mov jge inc lcall psubsw mov cmp or pop gs ret das inc js mov pop js fidivr sub push dec jle mov (bad) imul inc scas push and add cld jg adc fnsave jns mov jg ficomp repz push xor push or cmc test mov repz adc pop stos jg lods bound xor out fstpt push stos sub push cmp add popa fstpt and inc clc push das adc insl test mov cmp nop mov aas icebp adc jg cmpsb adc jg cmp and jg js fwait ds in mov mov mov jmp cmp jg push cli ror scas (bad) jg (bad) jbe cwtl ja lock xchg mov or cmp inc jl sbb add jb mov dec push mov add dec dec sbbl lea fdivr fs (bad) sub idivl dec inc sbb sub mov out jbe pop pop hlt cmp push inc (bad) cmp xchg rclb outsl and xlat pop mov jl out (bad) (bad) stos fmulp ret addr16 sbb jg (bad) out movsl aad in out jg int jno xor dec inc push je xchg fdivrl push ja arpl test sbb push movl andl push aam mov add mov jmp dec inc add pushf sti jbe popa xor and xor push jg sub jns repz xor pushf nop adc dec and scas xor cmp jns mov inc (bad) clc jecxz fidivrl adc leave xor insl mov jg xor fwait xchg mov jg sub inc dec jg jns stc fwait (bad) cmp dec add cltd in lahf jg fwait add divl (bad) adc fdivrl adc leave stos add lret mov sbb inc clc shlb xor sub mov outsb cmp adc jmp cld daa loop and or mov add pusha fsubrl jg inc (bad) pop or dec jg in repnz adc jg xchg popa cmc out jne jg fwait mov cmp add stc leave or addl and out pop lcall call (bad) das adc xor jno jp test fdivr inc xchg or dec pusha stc and leave xchg jg mov jg ja call cli push mov mov jmp sub jl imul mov push ret les inc adc lods inc inc mov lret jns xor mov addl ret cmp mov pop bound iret jge pop pop fs leave cltd push inc out mov jg mov ret jg mov and sbb outsb inc sbbl test vpmulhw dec push jmp jge (bad) mov (bad) mov lock jg inc (bad) rcl mov or xor imul inc jb hlt out outsl inc out dec xchg jg jp insl fsubrs scas adc adc fisubr mul mov repz push mov in mov inc or and mov push insl xor jg pop scas mov cmpsl insl sbb gs mov jns inc add cs sbb mov clc js push repnz dec xchg dec mov std aas fldt (bad) ja movsb xor das push and and leave jno mov mov imul mov (bad) fldenv or movsl adc lahf pop bswap in insb mov aas flds (bad) pushf push xchg jg sbb stos sub fucomip jg lcall bound stc mov in or xchg xchg mov lahf dec inc data16 mov ja imul push dec scas xor loopne and sub dec dec in sbb xchg ljmp dec dec aas or jg movsl arpl mov dec mov inc lods jae sbb pushf and jmp xchg out xchg inc aaa jg in imul (bad) jno pop lds jbe push dec xlat imul pop dec loopne mov inc (bad) lea (bad) lret popa aas nop sub dec sbbb in or data16 imul in add (bad) je mov jmp mov dec lea pop dec push dec movq xchg add loopne fiaddl xchg push inc jg enter jns (bad) jg decb cmp imul sub inc ja add jp push fs mov js dec pop repz jg or cmpsl mov das addr16 jmp sub pushf scas (bad) cmpl (bad) aad xor mov out mov aaa jmp nop ja add daa fmuls jae adc adc (bad) mov imul and mov fdivrs (bad) mov into pusha arpl xor and mov add sti hlt lea add dec scas ficompl enter mov les dec ror dec cld test jg ja xchg or js mov int enter inc sarb sbb add jne jg jbe aas mov pop (bad) pop and inc pop iret push sti or std clc enter sbb inc pushf cmp (bad) dec jl jg mov adc fwait cmp add sbb mov pop scas pop leave les push sub (bad) int3 insl ja shll ss inc (bad) xor pop dec jg mov aas js lds sbb sub jmp loope cli mov jg aas jl lock loop xchg inc jae dec aas out sahf (bad) testb dec mov sti sbb xchg xor ret mov add jno jns in fdivr cmp push pop rcrl cmpsb jg sub xor insl xchg jg stos mov mov push xor jl mov dec scas and pop mov cltd mov push cmp mov outsl test popa cwtl aas (bad) aaa fs stc sub ljmp or test aaa jle pop aas mov sub scas xchg xchg or dec ret data16 cmp push enter mov insb cmp xchg sti js cmp cmp (bad) ljmp xchg std leave mov mov pop mov mov lds and inc jg adc xor cli mov ret and cmp cmpsb stos jg fistl dec aas add loopne shrb sub mov ret inc pop add dec mov or cs sbb and test sahf pop mov xor sarl add addr16 and (bad) enter or pushf mov pop out cmp jno mov popf nop int3 test sbb pop call fidivrl or std adc xlat inc aas mov addb pop insb inc xor lods iret add (bad) sbb cmp dec imulb lock jg js xchg sbb lds mov fildl fwait add vmovdqu16 (bad) loop cmp int js or ja lock jg xchg scas cltd mov fs sub pop ds dec push jbe bnd fistpl out xchg in jg pusha dec jns push inc push pushf ja push das lret push dec mov cwtl add xor gs pop bnd jg leave mov ljmp and push in popa fidivrl mov and pop jge outsl (bad) clc hlt rorl push divl andl pop adc sti faddl add jg mov test jnp xchg cmpsb fstps arpl addr16 jg adc pop jmp stos (bad) jno cli cld idivl and mov jg movsl push (bad) mov out jp mov push lea inc or cmpsl xchg sub cli sarb ror pop and mov daa dec mov fdiv call stc push mov andb push repnz out cmp repz fmuls push jae lcall pop inc repz in jns shlb cmp es mov stc mov sbb add dec sub jg repnz mov fscale cmp sbb jg adc jge adc imul cltd mov lret fwait dec cmp dec ljmp mov mov stos dec stc jbe inc jecxz jg jne jmp or adc out jp cmp loop sahf mov sub jg push bound jae jl mov sbb das cmc push movsb incb bound in jg loope sub jg das xchg aad sbb mov (bad) out add mov xchg inc mov outsl sti xor cmpsb scas pop adc je add insl lcall push cmp mov je mov cmp in jg xor pop nop pop (bad) jg loop push roll insb jg imul bound jne addr16 sub out (bad) out inc mov inc bound add (bad) mov popa pop xchg icebp inc (bad) sbb push inc lret das mov inc int jg inc imul loop test ss push dec jg pop push lcall data16 loopne pop sub add push fidivl jg mov shrl stc jnp popl cltd mov mov fidivl sti and in mov add (bad) xcrypt-ecb cmpsl push jg dec mov jg addr16 adc mov push cli mov xchg jg in outsb fwait and out aas divb push inc cmc sub cmp (bad) mov jg push jb loopne leave fdivrl adcb iret int3 dec jg jge dec dec pop stos int fist out test lock test movsl (bad) adc cmp xlat call adc (bad) jg and lock sti mov sbb or add jg and push adc dec push ja mov aas fld1 jno das daa lahf dec adc jg adc pop pop enter lods adc ja or inc bound js movhps sub jl and pop add lea jg and pusha sub jbe jmp test or jg stos out je sub jnp pop mov inc sub lret lods mov mov int3 inc fnstcw mov sahf jg rdpmc mov les and mov xlat inc repz in pushf jp xchg mov pop mov mov mov jg mov jge jg cmp jns pop std jg fmuls lahf jg das outsb and lea xchg push add adc pop mov (bad) (bad) call jmp mov sbb jo inc jg test jb jno cmc xlat push mov jne push mov mov mov jg mov nop xor (bad) roll cmp lods pop rclb daa out rep jg ljmp mov dec xor frstor jns bound cmc jg jae ret pop jg cmpsl adc push lock jg mov out inc aas aas mov mov sbb dec rorb jg dec fs push fwait inc jg pop lret (bad) mov idivl test mov jbe incb mov jg pusha xor iret lods ret stc and sahf jg push jl dec push sbb inc in bound jmp dec rcrb mov mov sbb lds (bad) jp mov jg jmp inc fstps sbb test mov stos jg imul pop jg pop dec mov jg in cmp adc pop scas jg repnz loope inc jo jl xor pop gs jmp mov jg sahf out aas jl xor pop mov sub in jg xlat test cld test or das jg mov out mov lods in sbb and jmp sub je (bad) mov add out idivl inc jg addr16 sub loope fcoms cmp or pop stos (bad) fdivl sbb mov lcall setbe fbld mov aas mov push and and inc loope loop jg mov outsl dec nop fwait push jg movsb fnstsw (bad) (bad) decb cmp add xor jg dec lods gs xchg mov jo or inc addr16 insb push xchg out cmp xchg outsb dec mov inc sarl dec add or push jnp out sub push mov pusha inc jle cs push xor push fistpl jg int3 fwait mov jg scas push xchg push stos xor dec bound dec inc jmp loopne jge sbb aas push loop mov orl insb in lods add jg dec int3 mov mov pushaw in gs mov jbe addl inc aas jb js jecxz std cld push mov dec mov jne lds fmuls xchg jg dec mov movsl jg andb jg stos mov leave jg inc out movsl ja out xor xor push add mov mov push test fdivrs lea xchg inc fidiv leave push cmp push (bad) ss lea mov jo ja mov pop shll dec ret pop cmp push sub mov fdiv movb pushf cmp cmc mov enter sbb das les jg cltd lret or test fstpl ret imul (bad) cmp inc test aas (bad) pop jnp,pn push aas pop mov or cmp into mov gs loop divb dec cwtl aas jne mov and (bad) inc mov jg or jmp mov dec lret (bad) notb test mov shlb in and cli sbb jg sub mov adc cmp rep sti (bad) sahf mov popf bound push cli jle lahf mov dec adc jmp test cmpsl aas and or adc push (bad) jo dec (bad) in jle sarb inc lcall into (bad) popa or in and subl mov dec jg cmp cmp jg movsb pop out insl mov into pop aaa dec jbe call inc (bad) sti dec dec idivl jbe dec push add test adc gs push data16 and jg inc mov push (bad) mov jg inc push add push mov loope cmp fs jg repz (bad) sti loopw jae shrb jg enter outsl test jmp push int3 mov or aam aas and out into push rcrl (bad) arpl push jg inc (bad) iret xor lods adc add inc and (bad) mov sub enter push and loopne mov lahf sub fiadd adc xchg push jg dec push in cltd push sti insb jg imul push dec mov test sti jns mov mov xchg xchg bound dec addr16 push lods mov popf test (bad) sbb in ret enter ljmp or insb sub mov cmp repnz jne (bad) dec dec inc jg mov mov pusha fidivr adc pop pop and jne or mov mov push outsb push cmp and jge inc xchg and jg ret and xor or scas mov hlt xor mov jg rcrb inc adc and in jg lods arpl decb cwtl jg sub repnz inc jg cs ja popf pop push (bad) inc push sub bound pop movsb mov cli popf xchg fwait and dec mov or movsl (bad) fadds aas jnp push pop rclb cld test ja lcall daa aad jg pop popf mov mov inc jecxz stos aas push jns out pop sbb mov cld leave jg inc xlat je adc fsubl mul adc jbe jp (bad) outsl roll jg mov pop negb mov (bad) pop jg stos pop (bad) push cmpsb movsb push jg cmc xchg mov push stos mov cld sti es outsl outsb push jno mov lret pop jb jg lods int3 mov js std mov jge mov inc push ficom jg jne lret (bad) cmp push xchg jg jmp lds sti xchg jo pop ljmp push inc or rorb das jne pop add in dec cmp mov sarb fwait cmpsb repz pushf adc aad xchg hlt push (bad) idivl loop xorb repnz xorl rcrl jg adc je jns fidivr mov inc sub sub loop mov jg xor and mov insl mov inc (bad) xlat call lock rcll out push mov ja adc popf adc popf insb ljmp fisubr sub jg imul xchg push sbb push test or (bad) rolb das sarl pop jg addr16 mov (bad) cmp mov inc dec jg sahf or adc jnp les loop jg movsl xor push pop cmc xor js outsb adc fisub shlb mov loopne jns inc inc adc stos inc inc enter cmp (bad) je and sub sbb lock fnstsw pop iret inc dec rcr aas loope in or int jle std jg leave mov out pop dec cmp jg mov push fwait incb mov addr16 push cmp fbstp std (bad) das inc jg lock test adc lcall jg inc lods cld in test and dec mov jg add mov jg gs xor fisub outsl mov or dec fwait pop pop push inc (bad) push jg lret fstps mov out inc fisttpl jg push mov into ret hlt stos idivl (bad) dec ds mov adc jg push (bad) mov stc ret fist enter loop cltd mov mov stos fiaddl je inc sahf je sti sub xchg sahf jge sbb jg sbbl jg pushl or loopne cltd adc aas mov jo es adc shrl outsl cli js cmp (bad) jg fdivrl jmp scas dec (bad) mov xor xor push (bad) hlt mov int3 jg push push mov fistl mov repnz mov sub inc iret aaa out fnop mov sub xchg jg mov ret mov fcoml (bad) aaa jns xchg add xor mov iret out xchg cltd aas dec add sub dec jae adc jg mov fs jne adc pop js xchg xor (bad) jg cwtl rcll dec or jg idivl xor push hlt fdivp lods jne jg or jg pop imul lods push fcoms fsubrl in je pusha mov das pop (bad) mov arpl and cld jg imul xor inc jge lea dec outsl adc loop aas jg jp int in enter push sbb xor jae cmp inc rcll (bad) or imul leave (bad) jg fcmovb add mov mov add clc jg (bad) int3 or push jno std mov mov xor dec adc sbb mov inc mov mov ret push xlat ret lods dec stos mov (bad) int3 jle push jg je xor es dec adc push inc jmp fsubr dec int call pop mov jae scas mov outsb mov outsl out add cmp inc lock sub adc xchg jg out push lods loope mov jg out pop push mov xchg aas std sbb loope test test cmc or dec jmp inc cmp popf xchg (bad) out xchg fnstenv cmp cmpsb or sbb inc lock out sahf lods aaa jg mov mov bound mov mov flds ret jl inc sbb dec ds icebp inc movsl and popa dec sub xchg imul loope leave sub adc mov push inc popf sbb out mov inc mov lahf mov outsl jo stc and bound sbb out adc aaa adc push ja sbb mul iret mov jg lahf sub mov fmuls popa and ret mov inc lahf mov pusha test dec jmp ja mov addl mov pop pop and fnsave mov jle jg jnp mov aas aas icebp or out mov ds sbb cld test daa lret push mov clc aam or pop lret mov fadds push jbe push sti push jg xorb fidiv jg mov data16 pop negb (bad) dec in push push mov aas jle sahf mov sub push push mov sub mov or xchg jg ficompl inc fidiv xchg stos insb aas or sbb sub jg loope sbb sbb ret push fnsave xchg mov push popa movsl mov clc dec pop ds bound stos mov aad lcall jl xlat (bad) int jg xchg pop mov pop inc add jns insb popa jg mov or scas insl lret pop aas int3 fidivl repnz inc add fdivrs fs and aas jae push inc pusha sbb jg out fbld je (bad) jg inc jge pushf mov rcll cmp (bad) push lcall lahf jg mov xor mov or xor mov (bad) int jg stc mov faddp clc jg arpl jg fwait lods mov xchg incl stc xchg sub lahf jg jb mov nop lock (bad) push icebp mov addl push jg pop out pop xor fisttpl lret dec adc popf repnz out out and mov into jg stc mov notb inc loopne neg sbb into inc frstor loopne mov hlt pop xchg ficomp jg dec cwtl fnclex mov fadd stc mov pusha (bad) ds mov sbb xchg jg lods jno sub and mov lret xchg adc in orl bound outsl ficom cmp mov sahf fmuls les jo jg int pop pop push movsb xchg push jle int3 lock dec pop mov sahf inc jg loopne mov xchg cmp pop mov jg inc aad mov push outsb ds bound stc pop and aas and je jg fs mov sbb fsubr pop pop in xchg arpl or adc repz jg (bad) fnstcw aas sbb mov dec repnz jg fwait jb andl repz pusha jg jnp fidivrl inc jg sub mov dec outsb pop push lret pop add pop or fwait pop jg jecxz inc mov adc mov xor fs sti jp inc cmpsb clc sub inc nop pusha jg or ret push sti lret push aam ja sub and pusha loop xchg and adc pop add aad jle push jmp and mov imul movq or je inc fistl daa fistpll cld add mov sub imul addr16 sti add and and xchg mov inc sbb mov int dec pop mov (bad) lret sti std inc push (bad) addr16 pop add jbe dec fidivl jg dec mov inc xlat aas scas aas stos cmpsl jecxz sub int cmpsb repnz mov test jo out mov jg cmp jae movsb call pop sub loope jg cmp insb pop pop aas (bad) test push mov pop out lods stos cmp or mov jmp imul jnp jg jae sahf pop (bad) adc cli xchg dec cmpsb arpl loope in movsb sarb xchg divb iret push jg cmpsl popa test sar or jg jecxz aam sarl jg lea push pushf push push jl js or xchg mov xor (bad) sbb jnp out jo movsl mov sbb int3 arpl jg js dec inc hlt mov jg or cmp or jg pop out mov mov pop popf push int3 test bound outsb cmc dec jne insl repz repnz std xchg clc js mov pop fadds pop adc and add movb js call or add das sbb inc cmc outsl in pop ljmp adc in int3 je adc jg add (bad) jg popa test push adc inc sahf popl enter cmpsl and and jbe jg popa dec or idivb mov (bad) jae inc jle out cmp push cmc aas jbe pop and jg stos shr cmovne pop mov jg push jp (bad) ljmp lods sub dec rclb mov sbb aas mov ja sahf jg push jmp xchg mov cmpsb ret jg icebp cmp bound add outsl mov fdivrs out inc dec and pop xchg mov call into jg stc sbb mov push xor mov ljmp (bad) jmp pop dec and mov call pusha dec jg adc jp in cmp pop push stos adc add jg adcl jbe aam mov add inc mov cmpl mov into mov movsl les push dec jg outsl mov add stc pop cli in mov jg mov cmc (bad) cwtl daa jg cmp fdivrs imul mov sbb dec (bad) mov add or pop lret inc or xlat imul mov push mov dec bswap sti dec hlt fxam jg xchg and push sub jae pop pop mov jp push and pop outsl jg dec mov and push jae pop or pop and dec mov xor or jbe out lods xchg dec mov push and sti mov pop inc push shll jg push xchg out dec inc jecxz mov dec (bad) cs mov cmpsl sarb imul mov ds sbb mov cld jg mov inc mov add aad mov cmp stos dec adc dec xor inc in lret pop pushf popf cmp cmc aaa jg gs ds ja ret pop call cld jg stc xor repz push jg add mov or dec mov pop sbb add pop ljmp xchg dec clc jg inc mov inc add mov (bad) shlb aaa cmp add aam mov adc push (bad) pop add dec cli sub int3 jg cmp or cmpsb or fsub add or adc stos in jnp repnz xchg jg push or popa mov lds cmpsl dec out loopne jg fnstcw call jg xchg mov iret nop cmp jg hlt fwait and rcl sarb pop sbb test mov subb cmpsb jns (bad) popa xor outsl fistpl test sub cmp notl insl or (bad) pop bnd aaa pop (bad) pop stc or aas shll add jg inc mov aam jns jg pop sbb push cwtl xor dec jg rolb (bad) mov sbb call rep sbb roll jg imul icebp xchg xchg (bad) jg inc js push outsl lret mov mov popf mov dec lods mov cmp lods jg (bad) cmp sahf xor mov pop mov cmp stos sbb pusha shll std aas out scas aad push (bad) jb addr16 iret bnd popa addr16 lds fsubrl lret int3 xchg xchg fbstp jg lea ret jg (bad) mov xor ret pop hlt xchg xchg sarl loop cmp outsb xor movsl jecxz hlt (bad) mov loopne jg in adc (bad) clc dec jo push mov aaa mov es sti into faddp inc and mov mov pop jbe scas insl push cmpsb test mov push dec cmp add jno in lods js jg repnz push add pop inc pop aad mov cltd dec and idivb push mov xlat jae leave repnz movsl jg push scas cmp jmp jg dec mov in jg stc pop push mov mov xor and sar fidivrl jg pop lahf xchg scas aam cs out sub dec pop dec ds jg sbb pusha lds sbb das xchg inc cltd sbb (bad) lods call xchg push mov (bad) jg fdivl sub jg push push cmp aas subb push xor xchg (bad) jg test jg (bad) cmp mov andl clc mov push cs iret mov mov mov dec (bad) mov sbb cs test dec out sbb jg mov sbb pop mov jge jnp and fldenv xchg movsl cmpsb xchg jg and xor in dec outsb (bad) pop pop jb,pn aas (bad) arpl sti dec imul ja lcall pop lods lock aas shrl jg loope push dec xchg mov mov or xacquire fistp sub fcompl iret pushf cmp loopne aas (bad) sub dec pop xchg jg cmp pop imul vmovdqa shrb dec popa inc sub push pushf jmp sbb or mov cwtl (bad) lds jle imul int xchg in cltd jg jge notb sub and sarl push daa ficomp ret in jg int int3 hlt pushf aad jg repz lea xchg mov push ja aam (bad) repz or inc outsl mov cs inc (bad) ds push and add inc cld aas sub xchg roll inc lret data16 xchg sti idivb js mov jg xlat and and pop jb push daa pusha mov outsl (bad) mov test test xor out in mov and jg cs dec hlt aaa xchg add ja cmp mov jecxz popa fnstenv jg or add out push out dec lods jae jg movsb mov cmc lahf pop jg dec pop es mov xchg jg adc fnstsw inc pop jg jl subl and xor mov out push cmp je jg dec cmpsb repz movsb cmp adc mov mov push or inc jg faddl push jg clc jno push cmp subl loopne sub lock xor adc (bad) pop scas mov pop int bound stos jne mov adc test jg enter inc scas pusha mov pop pop xlat cmpsl (bad) icebp jg or push incb or stc pop jne in fistpll pop jnp jb les or mov mov jp adcb and lea (bad) sub mov enter lock daa jg adc mov das out mov adc test xchg cmp and jno shlb adc (bad) ret mov jg subb sti dec test lods das je aaa dec inc xor xor scas pop cmp fwait jg movsl pushf dec jnp popa push je arpl dec fucomp test jg sbb or (bad) mov rorl mov dec loopne pop push mov xchg push sbb imul gs xchg mov sti popf jg in lret mov fs shll inc push lcall mov or popf sbb loopne sub xor mov pcmpeqw inc mov fstps jmp mov jae dec jl (bad) rcll dec push sbb cmc in mov cwtl mov xor sbb and push leave out sbb cmp pop push jge fidivr aas push int sahf dec inc outsb mov rorb lods sbb mov jg (bad) int3 jg push xchg mov aas enter and nop jae sub xchg rorl mov push jg cli add into jg mov in in lahf popf push jg jp sbb outsl inc ds sbb mov aas aad (bad) ss inc and xchg jbe pop adc mov ljmp les ja data16 loope mov mov test mov loop or invd in inc jecxz das pop pop imul jg add cltd fistpll out mov cmp inc loop jnp popa lds movsb pop lock mov and xchg jg cmpsl adc sahf popa jg dec inc jo roll xchg ret pusha pop jg push sbb adc sub gs fisttp (bad) mov dec mov jle pop inc outsb pop jg in call sar out add or jbe add inc jg mov jns loop popf aas inc inc popa sub cmpsl jno cmp jg dec ja imul mov stos xchg jecxz jg push pop mov repz lcall jb mov jg dec outsb cli loope xor pop popf and imul sub jg push lds std dec xchg jg cmpsb out loopne cmpsl cltd jg lock imul sub jns pop enter inc inc xor cmc mov insl das pop imul mov cmp repz adc jg sbb in or outsl mov ret lods popf out popa cmp mov fstl scas jle,pt push dec jg call stos push mov insl mov adc mov inc mov sar xchg push leave dec insb jg mov xchg lock xchg xor sbb jg xor ret push sub fwait mov (bad) dec xor pop and pop loope mov push test jl cmp gs add xchg scas lret mov repnz (bad) xchg push (bad) lock dec in sar cmpsl pop xchg (bad) jae xor dec mov faddl cmpsb jg inc mov fcmovnu sbb scas imull sbb xor adc add pop dec mov sub dec and aas pop adcb cmp dec je jg inc xorl push mov adc rolb jg subl jnp es cmp sarl or in fsts sbb mov in mov fld push imul or mov (bad) jae xor std inc not mov dec js mov aas sub fs in sti leave jae xlat jg lea pop mov aad inc lods add call push inc daa out dec dec and stc mov lock pushf mov cli imul xchg fdivrs cmp jg cmpsb mov cmc imul pop pusha xor int3 sub cmpb push gs jg add aaa sti pop cmc jg or popa jg adc pop jg pushf inc sar sub ret xor mov enter out xchg test mov or test jg sbb jg,pn mov add lret inc xchg mov push (bad) dec (bad) jmp sti dec cmp outsl jg roll test arpl sbbb mov lea movsb pop in outsb repz fwait ja lock mov dec aam mov mov andl mov mov outsb xchg jae out sarl sbb loopne lock xchg inc fwait or adc mov jg pushl jae pop cmp jo mov jmp push movsl cwtl sarl test inc fisub (bad) or jne push xchg jg ljmp bound les cli mov fimull push push inc psllq mov push jne inc cmp mov (bad) test jg lock test pop cmpl dec push and stos jo insl sahf aad adc lea dec cmp cmp call mov dec mov mov (bad) xor int3 inc sub push sub jg enter imul imul ret cwtl jg in call aas adcl jg pop addr16 cld repnz fs cmpsb xor xchg pop jae std mov mov sbb jg adc sub jb mov and in mov cmp scas popf push inc loop cmp cs and jb stc jns ljmp adc pop sub fwait (bad) push dec xchg movsl push push (bad) cmp (bad) mov pushf mov mov cltd dec jp push mov dec pop std gs jg add add pop out inc inc cwtl jle xchg jae lock jg cmpsb ds rcrb pusha jno,pn dec jg or mov pop test xchg cmp jmp mov ds into dec je pop jecxz addb dec mov fcoml cmpsl stos fiadd jo nop jg sub les push mov loop fimul popa clc aad mov push aas mov inc xchg frstor sub sub (bad) jg test ja fwait in inc lock pop pop xlat loopne (bad) (bad) sbb sub mov ja mov jns jg loopne daa nop std push dec jg inc push rorb mov gs enter cmc mov js (bad) jg fs clc jae sar push dec mov jns in jg out test sbb push mov (bad) movsb test daa jg cli jne aam jmp stc or push inc cmp lret mov mov aad xchg ja scas sub mov jg dec iret dec sbb jmp and mov cmc mov xor mov lcall push pop push inc mov pushf jg inc dec sbb sbb sub jecxz fdivrl inc aas icebp stos mov and mov pop xor sbb add leave popf ret imul dec in dec add xor adc ds aas xchg outsl pusha push aaa jb mov mov cli xchg imul pop mov cmpsl sub les jns sarb mov pop cmp pop rcrl xchg pop inc cmp jae out adc and (bad) loopne cmc mov push test pop (bad) mov inc mov dec sub add jg int3 pusha xlat call push jg push add test pop pop mov out mov lds jbe adc pusha cli test pop and lret nop jg fist into (bad) jp lcall int mov mov mov mov fdivrs (bad) dec mov movq mov fs movsb ret ds jle ret cmpl push xchg add mov sub adc in ja or dec idivb dec add dec sub sti or pop or sbbb push xchg lea pushl popa jg out mov addr16 pop ja jnp mov jle ret inc adc insl push or dec mov pop lock cmp sub push les xchg pop nop jg adc push mov (bad) dec mov cmc cmp cli outsl mov test aam popf nop or xchg fadds dec leave jecxz fwait jg loop (bad) mov lods icebp and daa jbe data16 es jne imul loope mov dec pop and (bad) je in inc aam fnstcw push mov mov decb out stos sbb jl movl pop push jle inc les push xchg stc in inc pusha pop xchg sub mov jg push add pop push ja mov xlat aam inc push mull fisttpl push jo jg xchg insl inc or fsubl pop pop les test inc xchg adc loope (bad) sahf sbb imul pop jbe inc into jno fisubr pop jg pop jmp je pusha sbb fidivr repz mov pop fistp notl mov test jg and jnp out inc (bad) pop pop adc addr16 push cwtl mov scas pop jo arpl mov imul push mov iret int3 cwtl push mov mov jg imul inc fidivr inc sbb pop dec inc or clc jg mov (bad) cmp mov mov fs push loop sub add pop fbstp enter jg dec sbb sarb xchg rcll add leave mov inc loop jae movsb repz call or jg ss popf inc divl and ljmp or addb leave sbb xor jg add cmc cs (bad) jno push jge lret pop pop pop dec mov jo sahf push inc inc pusha jbe lahf sti (bad) rol aaa dec movl mov out popa xchg sub in push pop mov jge inc daa mov stc scas insw (bad) das jg and fcoml jg in jle xchg nop ds jg mov cld jg pop cltd sub xchg lahf inc pop repz cmp es push pop xchg scas jg pop negb xchg jbe ret dec (bad) and jg xchg in adc mov pop inc inc out (bad) push jg test sub stos idivl fstps test sub cmp repnz fisubrl daa jg call jns mov xor sbb push inc test or ss movsl js lahf xor fwait loopne jno popa adc mov jno cwtl jge stc btc push xor lea jae pop mov hlt jbe divl stos popf push and lahf shll jg lods ret (bad) call loope dec pop repz jg mov push xor push or inc popf add mov inc stos lret jg negl push les maxps bound adc pop adc adc lret dec sarl in or popa mov mov clc pop inc xor dec jg push je (bad) enter repnz ja mov mov aas xchg les inc xorl sbb push lock aam and js outsl xchg cmpb push mov test xchg push mov jg loope mov jg add and outsb xchg xchg mov mov or push pshufw jg sti mov ss jg,pt jbe add movsb mov fstps insb das into add mov inc mov jg inc pop das clc insl push cli jg stos cmp (bad) add jbe xchg repnz pop jg loop ds push sub sub inc dec faddp or jge jg in iret mov out xor lea xchg pop movsb (bad) (bad) inc arpl nopl jno sahf mov jae push jg ret or lds mov (bad) sub xchg ror and ja pop jg or dec aaa jg lcall mov mov mov cmp lods cld das jmp pop mov loope inc xchg or mov mov sub pop lods (bad) cmpsb imul aaa aad cld inc push in int3 sbb dec fsubs jo sbb add sti xorl daa outsb jne (bad) ffreep push or push pop sti cltd repz mov jae adc pop testb or (bad) mov data16 xchg nop es jge pushf jg inc dec addr16 aas xor jl stc insl inc arpl hlt lahf mov xor daa sub data16 insb test adc aad push xchg loopne jne fiadd pusha push jg push repz jg ret sub cmc ljmp lds jne jg ss mov out scas xor into ret fcmovbe data16 call es cmp jg push sarl jg je mov add jg xchg push push xchg jg repnz in cmp outsl scas popf jne hlt mov cld (bad) mov cmp rcrl add mov mov in pop adcl add fistpll jne sbb dec pushf jle jns enter mov xorb lods xchg xchg xchg inc jg aad adc movsb jg push ficomp cmc popa push jg mov (bad) aas jg inc xchg adc jbe xchg outsb mov sahf loopne adc ja std out (bad) jg mov das and jg lret lods or push adc testb xor test mov jg loopne jbe (bad) xor es adc ret jg add mov and jg push sbb mov mov xor insl sub mov xlat pop add jg jbe pop mov dec jne pop lods mov xchg mov pop push pop mov and inc lea jg sub aad xor jg sarb sub jbe jg out or cli jg jb or mov jg data16 pop dec enter add stc sbbl outsb pop test push cmpsb sahf out cmp fs cmp xlat mov fwait aam xor mov mov addl lds les sti loope xor add or mov test jnp mov ds jp xchg push pop adc jg jae xor aaa xchg std jg scas cltd jge test fdivrs adc mov ja faddp leave jg jmp xor cmp mov cld (bad) icebp rcr jg xchg gs inc push es inc orl jg lods fdivrp mov jg gs pop mov add push out jg aas or mov repnz jne and xchg leave pop cmp out sub jg or sti aaa ljmp sahf cli sbb add fistp clc add bound arpl push mov mov jg pushf mov jns pop loopne ljmp and adc aam outsb das jle adc fmul ljmp adc scas in pop jg bound sub pop mov mov addl inc pushf sbb jne repnz fwait dec in push jb addr16 sub aad lds inc pop (bad) xor ret pop loopne or or fstpt adc nop ljmp or pushf stos cmpl lods pop insb mov fmull adc aas dec mov add enter stos inc jno push sbb mov push orb les mov insl cmp jg rcrb dec jg cmpsb mov lret mov test loope call push mov jne je cwtl imul fmuls mov jp jg adc ds adc mov out inc cmp vmovdqa pop cmp cltd pusha inc aas fiaddl in and aas push cmpb push cmpsb jg int3 test aas outsl inc jge or sarb sbb ja (bad) jg dec pop xor imul mov mov in and xor push sbb daa mov outsb cwtl bound jg mov mov bnd jle adc sub dec fdivr (bad) pop inc ret aas sbb int inc mov es aas pusha pop fsubs imul and aad loopne mov aas lret mov insl jg addr16 xor pop jmp stc pop pop inc or jg iret insl shl add mov jno or mov movsb cmp sarb fsts je popa jecxz or mov sbb icebp dec cmp add cltd xchg lea xor mov mull inc cltd cmp inc out lret enter ja mov out push ret xchg ret test or jo add pop iret dec mov (bad) neg inc fnstenv stos push ljmp sbb mov jnp ja push sbb jg jge test push fildll or dec push fs lret mov sbb xchg lret add and mov les fiaddl pop repnz xchg jecxz cmp pop cltd clc mov jle jg adc loop push stc jg sub std jge,pt ret sarl adc (bad) cmc inc inc andl aam sub (bad) (bad) lods jg pop add fidivr mov jae jg add cli jle loop rolb xchg fsubrs push in adc add cmpsl jle sbb cli pop mov scas push call sti aas lret (bad) test ret or (bad) repnz jns xchg stos ret dec sahf pusha aas subps lret dec adc test xchg js push mov cltd lcall mov jb stos and and jge paddq imul xor cmc ja fsubrs out mov jg add jle mov jmp iret inc popf hlt inc jg cmc xchg mov test xchg sahf jg mov cmp mov test fsts mov xor pop mov push jg dec dec hlt clc negb jg or loope lahf xchg mov hlt cmpb cmc ret jg xchg repz push lock jb xor mov pusha add rcrl es in data16 imul add mov dec shr addl sub stos insb or repz gs lret mov push jg mov int3 jmp hlt xchg aas mov inc lret dec jg jo push inc mov or ss mov adc or add mov aas (bad) pop fcmovb andl xchg sarb xchg or mov mov mov mov jg inc clc enter movl shll add xchg ficomp mov testl mov (bad) lods sub inc cmpsb mov xchg cmp addb lds add mov jg pop sarl repz sub mov jp inc outsl and lock push (bad) fs mov and aam mov iret jno mov sub call xor sub dec icebp clc imul mov dec outsl (bad) xor mov iret cmp jg push mov negl imul mov ret fdivrs fimull push out mov cli mov and cli jg fwait push clc test inc imul das movsb int3 jg (bad) (bad) push scas in jg mov fidivr dec jne arpl lods jecxz out inc or mov out shll jg loop sbb jge insb jg in std mov aas jo fisttp inc psrad jg jle jmp add sub and pop iret lds je aaa add shlb jnp js push cwtl aam or cmp jg,pt sbb inc aam xchg mov xor dec test pop or repz aas mov jno out push pop mov shll mov pop add sbb pop jg adc (bad) es jae pop sbb bnd out idivl sbb jle jmp xchg inc pop mov les xchg push ds jnp dec pop mov fisttp je sar or arpl cmp (bad) mov mov ret cli add cmp jg,pt sub jg test jne std sbb jg push sbb (bad) jg cmpsb jmp sahf mov test jb and add (bad) xchg inc add pushl inc inc cs outsb jnp cli push jl cmp push (bad) mov rcrl add or mov mov sbb arpl and shlb aas xchg int3 iret test cwtl jg xchg mov lahf push cld add pop (bad) cmpsl cltd lahf repnz loop jle pop xor in dec jg adc mov jg cmp cltd xor imul cli pop push mov adc aas mov bnd add loopne in mov sbb push popf fdivrs pop testl mov fidivl andl xor inc mov jg mov mov fldenv (bad) hlt in loope jg adc jnp sbb xchg jg aas aaa cmp adc lods fs dec adc sarl nop mov and jg jmp jne in xlat jg cmpsl aam les inc jbe dec mov scas lret cmp imul push aad jmp ss jne dec jg mov cmp popf imul iret adc cld daa sbb sti push mov andb stos enter jg inc push out lock out jecxz,pn mov sbb jg inc xchg daa add (bad) rcrb jbe push add outsb mov cmp jg push popa int3 lret repnz sbb outsl dec pop inc pop mov ret cmp lret push adc pushl mov js frstor add cwtl jg loopne inc push mov jg cmp aad in das jg and xlat movsb (bad) push imul adc pusha sahf call scas (bad) shlb pop xchg out in jg mov jg mov cltd cmp pop jg out sub out xchg test xor mov push cltd fstp xchg mov cli sbb jg sti idivl jg cwtl cmpsl inc inc aas lret or sbb stos inc fildll pop sub jg mov jns inc popf lods jg push call mov repnz dec mov inc sub enter lock push in and pop shll lret dec mov imul sar pop mov sti dec fildll add jo,pn inc daa (bad) and pop fistpl jg imul mov sbb aas jbe mov dec orl pop jno jne test (bad) icebp add cmp int pop and (bad) repnz mov out orb cltd inc push mov out sahf imulb scas push cmp jp xor fidivr mov sahf popa and cld out repnz aas scas inc pop (bad) adc dec or scas mov lods add test jl jg daa cmpsl test inc add sahf xchg push loop lds jg adc lods pusha cwtl popf jns fdivl sbb pop inc das jg adc movsb out lea jg jmp push jg mov adc push push test mov push jg inc js rclb jg popl push loop enter fwait jle jbe sub fmuls lret xchg ror cmp cmp xor sarb jp lcall cwtl popl mov aad rcr inc sbb adc and push enter jecxz adc in inc or (bad) loop adc pop lods dec incb jg jl xchg cli scas dec inc jg xchg push mov pushf cmp jg jne (bad) hlt es mov push mov jg push and je lahf pop or rep sahf jns (bad) rclb inc cmp push mov jae jle pop jg or add (bad) stos cmp mov adc dec jbe cld pop fcoml dec jnp jg adc xchg dec pop movl add and sbb mov xchg dec cmp xchg fisubrl push ds cmp test xchg mov dec add lock sti jo stc pop push insb std mov dec mov jg mov add inc xor pushf jg jns lret test nop jg or inc movsl inc lret pop (bad) arpl pop iret jo jg and cmp inc jg ret imul aaa cmpsl outsl jg in in ds cmc xchg aas js cmpb inc dec aam mov inc in cld and push xchg test imul in cmp pop jg mov test mov jle fiadd and xchg fnsave mov in int mov inc sbb jg pop (bad) push repz sbb test stc ds jg outsl xchg mov data16 dec pushf aaa mov jg mov lods jbe scas gs out sbb enter inc cs sub jg ss in lret mov (bad) cmpsb inc sti mov sti jne pop mov lahf adc add dec (bad) mov mov inc and inc push and pop mul dec pop movb aas in mov outsb aaa cwtl push pop daa int push fcmovne test and aas ds std rorb movsl jg sbb jnp lret pop (bad) jno mov mov lcall imul sbb (bad) fcomps mov lods and popa xchg dec repnz pop stos cmp adc dec xor dec adc insb or jno hlt xchg jb int3 shrl push jg outsb loopne repz pop iret imul dec dec stos std mov add mov xor pop jg jb mov xchg repz jg mov in ret add insb mov arpl pop (bad) pushf cltd in push rcr sbb addl test out mov roll jmp lods aas mov adc dec andl adcb ja je stos call cmp aas mov xchg repnz dec or xchg test sbb push jecxz xor pop lea dec jg mov call jg xor ret shlb xchg mov xchg (bad) xor lahf inc rcll add dec fiaddl cld jne xor pop mulb fisttp jg test lock inc jnp mov dec inc adc and xor (bad) (bad) leave jg popa pusha movsl lds sarl sub cld fnstenv dec or fldt jg out xchg loop jecxz inc jg adc mov ret xchg cmp outsl cmp popf jg lods push adc xor jg push or (bad) cltd gs scas sbb inc lods add dec notl pop push mov js fdivrs cmp sub mov mov call fwait mov outsl insl aaa xchg lods dec mov jg xor cmp movswl icebp test loop jg or pop xchg (bad) jnp jg inc out cltd lahf push inc jge cmp adc push push ss js jmp dec ficomp dec pop push je mov jne cmp in mov js rolb lret mov mov mov add cmp sbbl inc or mov xchg hlt cwtl in mulb stos inc xchg mov shrl test arpl jg and sbb loop pop mov jbe push int dec adc jecxz out lcall dec pop mov mov ror and or jg xor fnstsw rorl pop aas adc fld1 imul fcoml fstpt fild (bad) jg mov loopne mov ljmp sbb mov pop ret in xor pop and arpl imul loop mov jmp xor je lret cmpl test xor cmpl insb aad nop and jg and fimull cmpsb sub pusha (bad) xchg xchg shr jg xor inc fstpt inc shlb clc xchg mov jle cltd push aaa stos pushf xor jg ret fstl inc dec add rorb adc sub arpl inc sti pop es jle std ljmp xchg xchg jg sti jb lret mov inc jle pop adc pop jno mov adc pop add dec xor mov int jg imul cmp pusha mov dec loope inc gs (bad) int3 jne and into sub movsb mov mov jge push cmpsl stc dec sbb sub int sbb lea shll sub xchg repz mov outsl incb xor leave sbb add jae jg ficom fsts jg push fistp lahf mov jae scas jnp rcrl cld mov daa or clc xor adc mov dec jb cmp rolb inc jns mov insl in mov daa jg ficom std subb inc lods out ror sbb in sbb push add aas adc adc nop test dec idivb jg je sub mov lret aad scas push push push jmp pop fbstp jg jne pop aas cmc cltd aam mov dec imul xor jg cmp in sbb cmpsl fdivl dec adc jg cmp fcoms in xchg mov sahf mov jmp mov push out mov dec nop mov sbb jne jg push ds cmp fcmove pop sub or rep pop stos adc cmpsb mov negl jg popa js orb cmpsl jg mov adc inc stc jg pop roll and jg mov mov imul adc out outsb dec push xchg test sbb push ss xchg xchg mov jg (bad) mov sub in mov and push aas (bad) pop je push push xor dec mov pop xchg mov pushf ret (bad) (bad) in xchg jg dec pop lods sub aam fistp int ljmp push xor pop stos jg cmp int jg jnp (bad) subb (bad) push mov mov dec mov scas dec test jg inc pop xor jg imul jg mov je xor jg push jecxz cltd cmp jg push fnstsw or mov leave das lods mov inc pushf jg gs sub (bad) aaa mov outsl fs pop icebp jo sbb push mov insl stos cmpsl adc sahf insb decl pop xchg lcall leave sbb pop xchg pusha mov inc pop fs xor outsl cmp mov hlt pop jg mov add mov jg out (bad) gs aam jg fadd sbb jg push (bad) cwtl fistl sub sub (bad) mov push and mov pop xor sti mov jo pop popa lret cmp push jbe xor jg sub dec push push jg mov cmpsb sarl inc dec movsb jbe mov (bad) or pop sub inc inc imul mov mov mov cmc jg popa das jnp orl dec and (bad) ljmp push xchg xor out ret jno out push mov imul jns mov fsts sbb sub xchg mov inc sbb lcall jg (bad) mov dec sub or fisubl lds xchg sub push jge jno xor sbb mov jg mov push cld jg (bad) insl out jp inc jg ds (bad) mov sbb jg xor push and or inc push dec mov pop jg lret imul insl xchg jle pop movsl sbb int3 popf dec mov bound (bad) sbb mov loop push xor xchg xchg push popa dec sub sbb adc fldl xor jg (bad) addr16 or mov inc ds pop add mov shrl xchg lret cmpl push fadd jno mov and out adc jns (bad) int3 mov lret out cmp subl or xchg push daa pop push clc add aas xchg sub mov xor mov pop and scas jg inc (bad) and jg sbb adc mov in sbb xlat repnz fs jne jmp push pop jae jmp inc daa inc leave mov inc adc jle mov xchg xchg push fwait push ja lret adc call jg (bad) out stc ret iret mov mov inc aad mov movsb das les cltd (bad) mov inc out or js inc lods jae inc cltd jns mov xchg aas ljmp inc lds sarb push pushl jo cmp es loope bound sti aaa and (bad) aad jg dec xor cmp jg add jmp lock jg mov (bad) adc push mov (bad) xor jp movsb inc fildl cmp lea pop fbstp jg mov pop lret cmpb arpl push jb adc scas xchg stos mov mov jg (bad) mov test push pop and aaa dec sub sub repz lcall adc (bad) dec lods xchg cmpsb or les jg (bad) jnp jg test jmp push mov lea cmp cmpsb pop xor fcoml ret mov cwtl jg cmp scas push jg insb jge (bad) xchg mov or jg xchg mov sahf jg (bad) mov dec mov push push push (bad) call aas sub loope mov mov mov sub test lret mov jg inc stos nop fnsetpm(287 cltd xor test push aaa pop jg cmp leave imul pop sub or cmp jg xlat hlt outsb into mov adc add pop test jg lsl mov cmp dec xchg mov aas xor sub jbe inc ja (bad) inc mov xchg jns repz add cmp xchg outsl cmp jg inc ret notl js and xchg pop add mov cmc cltd (bad) repz nop xchg push and cmp jg cmpl outsb (bad) dec jg (bad) out out ljmp mov in jge lahf (bad) xchg xchg cmp test inc and xchg lret daa loop pop jg sbb xor mov mov push pop cs jg in out mov push xchg jg xor loope jmp fcoml mov sahf pop dec add ja dec pop out sbb sub nopl jg jne popf mov sub pop cmp aas cmc dec xlat cmp xchg loop movsb in out ds mov jg sub jg stos adc ljmp inc in fdivs inc loope mov pop mov add cmpsb jg clc jnp je xchg sbb adc popa lock fstpt pop jp mov xor int3 ja aaa xchg stc jg lret inc hlt sub jg xchg mov out (bad) xorb sub iret sub out (bad) fidivrl pushf xchg cmp adc jg xor fs ljmp xchg sub aad jae xor test out das loop stos mov push mov xchg (bad) jno out pop mov call dec xorl mov pushf add enter fisubrl mov adc lea xor lret mov push fldcw xchg notl xchg stc push es nop je push push xor push xor int3 xor push cmp mov (bad) and jg (bad) jge adc cmovg add mov test mov jg xchg mov ljmp ficomp mov dec test cmpsb ljmp adc push push push lods inc imull jo xlat outsl adc dec inc jno push xlat scas lock sbb stc xchg mov push mov adc xchg daa mov push out sbb sbb add insl jmp rcr jg inc jp (bad) adcb pusha ficomp pop sub xlat call or insb stos add aam jmp rcll stos popf inc cmp pop mov dec mov jg int3 test sbb movsl mov xchg jbe lods jge mov push lods cld data16 adc cmp sbb push int3 enter pop (bad) rcr jg cmc jmp addr16 sbb jp (bad) icebp idivl (bad) aad ja lock fs xor mov pop popa cs jg inc (bad) mov jg dec int fisubl shr ja push jmp jg push lock jb add sub js,pt sarb inc add repnz ss bound (bad) push jg adc dec ret or add pop popa mov and orl dec pop les jg fadd into daa mov mov sti dec cld cmp push dec xor cmpb jg or arpl in add lods mov jbe push iret cmp rol cmpsb cwtl jns mov addr16 and adc jae std pusha adc stos jg mov cld cltd jg (bad) cli and jecxz sbb lods dec sub jg pop xor xchg fisubrl and dec cmp inc sti in or xor sarl out popa arpl (bad) push (bad) xor lahf jg jnp inc scas bnd call xor mov jle incb or jp ljmp xor cmp pushl adc cli inc scas (bad) jg ret mov mov cmp enter ret cmpsb lods push loopne push push or jo in test mov pop call stos call outsb add cmp jbe repz addr16 cmp jg or nop div mov mov or mov cltd outsl sub out cmp cmp outsl and (bad) pop nop inc mov jge ja xor out add mov ja and cmp jg pop dec fildll nop leave mov in fnstcw loop cwtl es (bad) jo pop fistpl sub rcll out xchg inc fnstenv lock ljmp push sub call fnstenv sbb pop add loope push jle jg (bad) add (bad) push sub push push popf jg and aad jle aas in pop (bad) outsl shlb dec dec sarb lahf jecxz bound repz adc jg es and dec mov xor jg,pt je jno test std jg sti rorb cmc loopw xor sarb push mov mov cli lret daa xchg xor pop jge jg sbb jg mov mov jg mov push test mov ret push out mov leave jg popa xchg inc cmp inc fistp jno adc add pop mov sub stos jg imul lcall mov mov inc or pop mov leave jg dec or pop mov sarl lods cwtl stos inc push lret push ja fdivl mov negb fidivl cmp mov pushf jbe outsl call shrl aaa pusha xor xor loopne xor mov jns jl (bad) mov push (bad) mov mov adc mov call fwait xor icebp fdivl cwtl and test pop jg push (bad) jl inc xchg mov or lods lret sarb adc ficom mov ret mov pop pop aas ret xchg sbb jle arpl xchg incb insb inc icebp pop cmp adc inc fistp outsb mov rcrl test lods in call scas pop pmaxub push lret inc shl and roll mov fistpll outsl mov aas cmc sti lea in xchg leave lahf pop fcomip push loope jg into fwait jl lock jg je xchg notb and mov popf cmp pop jp lds (bad) mov inc pop adc bound ror addl outsb lret add pusha sub inc decb (bad) xchg js mov ret (bad) ja sub xor fisub lock mov outsl jne push loope jg sub xlat lods inc fistpll lock inc testb mov pushf cltd dec sbb mov mov push loopne inc cmpb cmp addr16 or stos jg daa push arpl cmc fisubr jo adc jnp movsl xlat fiaddl jg pop sub mov mov ss addr16 xor fsub movq and ljmp mov mov addl icebp jbe pop mov add dec mov jae imul sbb inc insb add lret pop cmc cli add das mov inc and pusha and mov adc sbb sbb push dec js pop jb and dec mov jg aam dec fisubr mov shrb loopne jg stos je test jb aas stos fndisi(8087 movsb into pop imul cmp and popa jg mov adc roll outsl bound or aaa out cmc xlat jg inc adc mov addr16 inc xchg fs sbb ljmp and aaa cmpb sub push mov shll mov fcoml jo aad roll lahf clc dec mov jg lret cld or jg mov inc sti test push inc xchg sbb mov or pop mov imul push fistpll pushf xor jg adc inc test mov adc adc sahf dec jbe jg fistpll push mov addr16 pop inc outsl xchg push inc popa arpl and test bound mov cmp push push and aaa sub mov test xchg mov xchg addr16 xor outsl push push pop jbe movsl mov cld cmc dec jg scas imul mov or xchg loopne insb jl jo out mov add imul or sub inc fdivrs ljmp inc mov popf sub mov push enter jnp add mov es sbb sub pop hlt cmp mov pusha (bad) jno xchg pop stos pop sbbl push pop (bad) in inc div and jg fwait xorb (bad) fs pop ds je cld sarb ja aad jle hlt insb push jg xchg pop lss test jmp add sarl jo push shr fldcw sarb aaa jl jno mov loopne aam in mov dec addr16 (bad) and push es pop popa cwtl jg and lret add fidiv mov (bad) or in int3 inc lret fbld jg jo and xchg test jg movsl dec ret or push mov mov jge push int3 je jg and std mov lock jp push loop jle fidivrl (bad) int pop addr16 cmp es and pusha pusha push lock pop fwait adc idivb mov push dec push hlt add sti jle inc pop jg pop adc push mov stos mov js push jg pusha jo xlat sbb loopne mov add jg push je daa push lods fdivrl xchg xchg dec std popf mov or rcr cwtl mov iret push adc addr16 cli les mov es neg mov sahf mov cmp jg pop jne cli inc (bad) jle jns inc gs xchg mov popl cwtl mov mov fiadd push jp sti pusha into push cmpsl ja cmc outsl cmpsb adc arpl and mov jg fxch jne jnp mov outsl push mov pop or ret mov inc push push jns or jle pop ret pop mov jg jno sub jg (bad) sbb outsb add mov push dec (bad) mov pop testl sahf jb dec sti test clc xchg add push jns jle pop sub ret cmp call pop movsb sub in cmp and inc leave das js jl jg (bad) in sub bound xor xchg jg pop xchg and push repz popf or jae pop (bad) inc arpl mov jl stc jno mov (bad) test mov add mov jge pusha insl jne pop cmpsb into pop inc lret mov mov iret xorl push (bad) mov addr16 inc push mov inc jo mov mov pop sub adc mov pop lds xchg out dec and and cmp popl stc nop jg sub xlat scas or outsb add js (bad) in dec mov bnd xchg (bad) fisubl stos dec nop and jo pop out sub (bad) gs and fwait pushl data16 jecxz mov ret inc jno cmp mov addr16 mov jmp mov mov out add inc nop xchg clc jg aam dec sub adc jg push mov shlb cmc pop gs lods loopne test sbb test and jns mov cmpsb adc stos dec sub jg in andl mov arpl mov std fist push cmp repnz xor jg hlt nop clc cmp inc ds das shrl and test push lcall out and jg lods sar loop movsb jg sub cmpsb jg out push or and out sbb jg xor or sbb outsl jg clc pop aam or mov call push shl fmull jg xlat icebp int3 mov dec push sti jecxz arpl jg leave inc pop cwtl out out mov cmpsl mov jnp inc xchg jg arpl adc pop ret sti jg aaa cmp cmpsl pop cld jg jl inc insl test cltd jg sar xor outsl jp out push cltd jg jmp bound nop gs jg mov mov loope pop add rcrb xchg fcoml subl test xchg adc jge push lret mov pop popf push std (bad) mov or movsl lret cmp adc add scas pop jg xchg insb daa ret cltd jg incl push sub jg incb cmp push cltd nop bound dec xchg (bad) jg scas lret cmp push cmp jg push and jae aam icebp and sub pop push mov mov add test inc aas lods or outsl pop scas aad adc mov jg popa cmp mov mov ficomp andb jg pushf mov mov sub rcrb loopne mov and pop movsb xlat cmp and stos and shlb pop cmp loopne addr16 pop jnp mov cltd jg lea mov cwtl pop jg or add pusha jg pop test lods das mov dec and cmpsl mov jg fidivrl xchg mov insb xor and inc xor mov (bad) lret mov (bad) jg xchg mov test ret arpl cmpl jp fcom pushl xchg mov lahf adc xchg dec inc (bad) push xor push testb pop xchg fadds enter mov rcrl sbb xor mov scas jg add (bad) popa cmpsl inc cs add jl lock jg mov fsub xchg mov jle cwtl mov sub jg sbb ja aas sbb rcl ss iret jg or lahf push pusha fisubl sub push jg pushf mov ds stos jg hlt jo pusha in cmp and mov pop jmp adc loope xchg outsl jno int ret pop mov sahf sub (bad) loope jg iret mov jg adc ss cmpsl dec rolb sarl out sarl cmpsb lods xor into jg shufps sahf dec cmpsl pusha xchg xchg sbb pop data16 mov push cmp stc jg push jle (bad) in (bad) mov fisttp outsl or sbb in (bad) mov cmp fwait jg xchg imulb xor fstpl mov (bad) sub cs push pop int push cmp ljmp dec xchg jnp mov inc or fdivrl fsubrs cmc jg xor inc jbe sti sti or ja fcmovne iret xchg push adc in pop push movl fidivl fwait push ljmp or pop xchg icebp les jmp es mov xchg andl jg xor sbb inc lret fdivrl stos jg,pt je dec call pop and mov sbb enter jl adc out xchg (bad) fwait mov out mov xor pop mov test mov cmpl mov jns movsl mov xchg xchg cwtl orl inc xchg jg or dec jmp xchg mov lret rorl push loope pushf arpl push mov jg lock sub push test lahf cmpsb enter jl mul (bad) push push jg ss cmp pop decb pop mov mov jg popf cmp les movsb test cmp clc push or mov loop and jbe das mov in push xor sahf mov pop fstpl pop jg (bad) in xlat xor lock mov jg sti arpl add dec inc push jg in int3 nop jno adc jg daa test and add add inc aaa inc cwtl jg lret add out sub test add jle xlat addl jg jmp lsl jg inc inc mov mov (bad) aad fadds aas ret nop cmp dec inc dec repz sti pop std cmp pop pop push dec stos call int xchg (bad) cs and push mov xchg jg mov pusha scas addr16 inc arpl pop jp jae xor and jno xchg les jg movsl push in cmpsb and aam int test sub xlat dec popf fsubrs mov outsl imulb mov mov sub or lds in imul dec (bad) cmpsb jns cltd adc aam loopne stos adc loopne inc hlt mov pop in pop sub fist test jg scas in (bad) jmp enter push mov inc lret ja mov jg jb or scas jp dec jne dec push jg sub inc outsb xchg loopne fs and lods ret addr16 pushw jge pop pushf push sarl in push sbb jo or adc je jg add ja das jg mov gs addr16 test cmp icebp and popf cwtl sahf mov jmp mov lods imul jg pop adc inc test mov out loope ja mov in inc das mov fisub imul stc fistpll rclb and popf push repnz cltd cmp sbb sbb scas jle inc sbb or roll cmpsb xor push test pop frstor inc lock dec inc pop jg jbe sahf mov fisttpl sub mov xchg jg andl aas jge sbb sahf or dec ret into add shlb push dec les fstps nop jg inc mov jg push add lods lcall push aaa push mov inc mov xor adc arpl jge icebp sarb ds sbb xlat jg (bad) adc jg test (bad) jg aas mov pop jg mov push sub jg mov or mov (bad) lods dec iret sbb imul fsubs xchg gs lahf jg sbb inc cmp pop jle bound dec sub jmp mov pop mov lahf mov adc mov sti sahf jae ljmp (bad) jg scas mov pop jmp push scas cmpsl push lahf and and gs lahf and out cmp jg psrlq jl mov int3 in sbb imul das jg or xchg and inc sarb dec add push cmp lahf xor (bad) cmp sbb mov mov ret fidivl push imul pusha mov mov pop push dec je ljmp out push xor inc jg jge addr16 bnd call pusha std cmp rcr mov out js mov enter loop jg jns inc add xor cmp fs outsl lods aaa and jl jg sub xchg pop lret jg xchg sub sub jg enter ds sarl xchg arpl (bad) ljmp mov push ja adc inc xchg push jg pop dec xor or mov es adc lock xchg jg push mov (bad) outsl mov (bad) mov cs jg outsb mov test sahf ret mov pop mov inc mov jg jne dec dec into lret out sbb pop pushf adc sbb jb repz sbb mov inc sarl pop outsl stc enter cmp push fwait mov sahf push fiaddl jg pop xchg and and add jbe (bad) out push sub or inc jg popa std sub jg mov jmp loope dec pop (bad) ftst pop jae push mov (bad) movsl jbe or dec push shl mov jg inc mov lcall mov scas andl jp es cmpsb ret (bad) jae dec mov aaa rolb inc dec sar scas dec incb ja out rolb cmc and (bad) je jnp out in add jecxz mov xchg test in mov aaa pop dec cltd and (bad) insl add cmpsb dec mov mov lds popl inc ss or xor cmp lret fbstp inc jnp or pop rorb imul mov mov add dec dec push cmp outsl fsubrs lods and in jg sbb (bad) fistp jbe outsl dec out mov pop jg xor and adc je lods mov call (bad) cmc pop mov cli movsl dec stc sbb mov add push gs cmpsb adc jg (bad) dec add inc or jg nop push int3 jle jmp jl xchg negl aaa mov and movsb aas andl call mov outsl add addb jg jp out idiv dec jg jno iret movsb sub (bad) lods xor pop out outsl dec xchg lcall adcb mov xor pop or pushf jae iret jg mov mov mov popf mov and jg xor repnz xchg push testl cmp xchg bound jg,pn mov pop mov inc cltd dec pop (bad) mov jnp std test mov or xor inc mov mov out dec inc xor scas jg fsubr sarb lret cmc jmp mov dec ja mov mov cmpl outsl int3 pop scas mov jnp or jge mov xchg sub mov cmp jg mov jnp data16 jo dec jns nop or dec pop dec in mov insb jg gs inc jg or dec and insl (bad) repz mov xchg jg xor scas out add bound dec push push jg pop pop xchg or sahf cmp ja stc jb add outsl fldenv jg mov shlb jg mov mov inc mov push mov jg ja cs loope aad hlt jae mov jecxz and rorb orb push pop pop repz js push jo mov push push scas das enter mov out jg adcl js stos lea test mov cmp xor adc jg pushf mov shl inc aas bound jo adc push jge jmp add in test xor pop or cmp bound inc adc fistp adc insl jo les inc notb and test jg decb insb add stc mov addr16 adc (bad) and das stos pop jg push in lcall vmovdqa lock sbbl je pop jg lds push js in add leave repz or mov jp or pop xchg inc push jg dec cmpl (bad) imul lock push mov jle xor icebp adc div xlat add ret iret xchg pop stos sub pop sahf outsl imul sub and cmp pop add in pop pop add xchg jg inc (bad) mov mov das sbb jge dec or fcompl out inc mov lahf mov push xor jle inc outsl aas je jb scas jge inc mov sbb jg adc test mov dec dec sub out insb les fbstp js sbb call adc ds (bad) mov jg mov out aas and ret cmp jo pop scas cmp lds addr16 aad adc cmp inc hlt out mov and inc sbbl jge gs jbe jg xor call jg je js (bad) mov lods cmpsl sub add loopne (bad) into packssdw or cmp push jg (bad) shll cmpsl xlat inc jg jmp jecxz pusha bound seta and mov and jbe inc mov repnz jg pop divb adc mov or lods and mov push enter push and movsb mov dec xor rcrb in fistpll adc push out (bad) aas test and dec int mov jl push jno pop jg or (bad) es jg (bad) fdiv mov inc mov inc rcrb jb cmpsl (bad) jg daa jle add fidivr mov int3 mov sub pop cmp jg jmp xlat jmp je sub xor lock dec add addr16 cld sahf jecxz fs mov mov xchg test xchg adc ret (bad) sbb scas cmp cmpsl sub push pop inc arpl loop mov inc out xor pop into lods mov sti pop add sub dec loop dec jmp inc xlat call sub mov push mov scas (bad) mov imul jmp addr16 daa test (bad) aaa shl leave jg fs fldcw jg iret ljmp scas mov inc inc jnp in pop stc inc and imul scas inc jo sar inc in jae adc mov adc jl jg ljmp mov sbb loop sti sub jo pop and cwtl sbb adc aaa notl sbb enter sub out insl mov pop int3 ficomp cmp cmp movsb xchg out jg mov pop adc add add fs inc xor test jg jne,pt pop lods sar bound aas orl jo aas sbb add adc sti std mov out jg outsb sbb mov adc jb mov or loope rcll jg push jnp call jno (bad) xor cmc mov cmp jns jg inc std outsb mov push icebp js mov mov (bad) stc lahf aas cmp das dec cwtl arpl test xor stos or int dec repnz inc lea adc cmp fwait xchg cmpsl pusha jg out and lahf aas jb and xchg test inc inc out ljmp dec push pop aas rclb cwtl jmp pop sti add rcll push and dec add jle jge mov test lcall jg icebp ja sbb jg dec in stos cmp test push out dec jg push pop out jne mov in incb xchg test icebp adcl mov mov fidivrl dec icebp movsb xchg jecxz and test inc cmp dec out mov lock addr16 aad jg mov jg (bad) sbb mov push test add ret or jns mov cmp out push ret imul xchg cmp or arpl movsl mov das inc inc (bad) addr16 scas aad mov into daa push xchg mov pop pop movsl dec icebp jns loop jg pop inc cmp enter outsl shrl jno mov adc repnz jg pop inc in xor jg les in loopne les jg arpl mov lret and stos push cmp pop mov jnp push pushf push xor adc andb fist js cltd fidivr lock pop jle rclb xor mov rclb jo cmc mov repz cld cmpsb jg xchg push dec inc push jmp in xchg jbe sti loopne aas (bad) xchg fs in mov or pop mov sub push cmpsb sub (bad) std jg xchg cmp jl fnsave ds inc xchg push pop jnp sti scas mov stos fistpl lea (bad) inc jae or std imul xchg xchg (bad) dec stos andl lret jns add popl adc pop sbb pop mov cmp sbb repnz gs mov daa sub pop push bound lods lds cmp jbe es jns hlt adc jg xchg inc push (bad) fildll jg cltd jo out in int3 jg mov sub push cmp jg xor insl js pop jg imul sahf cmp movsb or fmull jg sbb cmp pop pushf data16 mov mov xchg push push sti pop mov add sub aam adc add xchg lock (bad) ja sbb (bad) jg mov jns pop mov lahf pop lock cs mov xchg sahf adc outsl jmp cmp outsl add add pop lcall xor pushf push xchg add xchg insl jg and sbb int3 scas jg lea dec loopne sbb mov adc je pop push jnp fnstenv pop stos jg test decb jg repz xlat xchg inc xor out imul xor iret and inc mov ret sar pop xchg push dec arpl ret or aaa fidivr test xor in sbb inc shrl sub xchg xchg jg sbb loopne mov mov stos insl dec mov lea popa add js leave dec jg hlt daa jecxz pop push in push push mov fdivrs sti push mov sbb mov push jg adc pop outsl jg (bad) add into sub cltd mov in mov sub pop fcmovb out dec pop fldcw jg out adc push aam mov jg imull repz jg add movsb sub ss cmp or inc pop lock mov ljmp xchg sbb int3 inc mov cmp hlt insl test jno mov pop pop fstpl addr16 dec dec jl inc loop dec jg lret int xor mov cld inc xor insb cmpsb dec pop es jbe adc lods out (bad) sbb push cmp cmpsl mov pop push (bad) cmp jg lahf cs nop sarb xor imul sbb jecxz lahf push mov notb hlt add mov push pop or jg mov lret pop cmpsb mov jl rclb inc add inc or cmp jne mov fnsave (bad) aaa (bad) xor es ret ret dec or adc or and mov and xchg idivl xchg jns cmpsb ffreep and pop fcomps push sub xchg dec inc jno je mov in sti cwtl jns dec mov and cmc les mov test sbb mov pop loope movsl out push (bad) mov xor and repz xchg push push mov adc ljmp int mov xchg mov out test mov ljmp or testl incl testb sub pop out test into jg std adc inc ljmp iret daa popf test aaa push mov xchg repz sub cmpsb push loop jo clc jg lret sbb jg cmpsl mov lahf jg insb pop call jg es or aam xchg mov sbb pop mov scas jg inc repz xor mov mov das mov jg insl mov int3 jg mov mov mov lret add and xchg mov sbbl in xor loopne imul jns test jp mov jmp pop call jno jne add inc rcl std ret sbb ljmp and xchg outsl jns or addl jg dec stos xchg pmuludq iret jo and inc mov jecxz ret bound jg xchg lds divl outsb scas pusha orl or jg inc sub push xchg inc pop jg sub inc lahf sbb insl push sarl repnz lret leave ja,pn lcall sbb xchg push fcoml aas cmpsb lahf inc cmp add inc jb jg adc dec jg aaa (bad) lret mov mov mov fistl movsb jmp dec call fdivrs inc jge loopne mov jno lods call push jg or sub enter pop jno and pushf lock cwtl pop jg push pop test sbb fldenv xor daa push lods jg movsl das jns or aas adc add pop jg nop mov mov cwtl lret adc sub sub mov xor or jg pand xchg inc jg xchg (bad) ffree popa in pop cmp or inc sbb imul inc and fdivrl and add cld test dec jg shrl push pop jnp push fisttp fild jg push cwtl mov jg and adc push mov push jae mov movsl or push inc pop jg aaa cmpsb push push leave push das jg mov sub stc lret mov cmp sub addb inc and jne je lock jg xchg loop lods mov inc cmp rorb movsb iret inc outsb jg jecxz mov jg add ds mov mov (bad) jecxz and sub les jg addr16 push inc cmp mov bound cmp pop push pop mov imul cmp les stc jo fdivrs das adc (bad) jno mov sahf jg roll nop push inc dec cli mov in aaa xchg mov mov sub ss jecxz jg movsb and in hlt adc push mov jg jmp sub mov jg and test loop clc mov dec sbb out popf jb pop and jg lds sbb int3 push jg jecxz adc push jns pop mov out stos aad xchg jg add int3 jg lret inc xchg pop imul fs andl push push and mov test jnp or jne jnp lret xlat jg xchg pusha les mov mov jmp xchg xlat inc lret outsl (bad) push imul push sub das adc in xchg mov sbb jnp ljmp loop scas mov cmp mov outsl fdivrl sub daa (bad) jmp cmpsb sub icebp mov mov loopne fsubrp jae dec outsb pop int jmp clc mov mov dec mov jg push mov and inc push xor mov aad mov cmp sti jnp sbbb ljmp out cmc xor dec dec mov xchg gs jno xor out jbe out out mov xchg in loope cltd mov outsb imul rcrb dec stc lock jae pop pop jo es push jmp jecxz dec jb fcoms xor (bad) aam aas sub sub arpl xor fcoml cmpsb push push js add mov lahf jg incl lret cmp mov mov dec mov imul mov lods adc (bad) cmp stc jl xor jg push or jg xor push (bad) imul popa test xchg xchg ret push jg lea cld pop sbb jg mov cmp sti repz in push pop push cmpl mov arpl loopne sar pop sub jg ds or ret fdivs or mov mov inc testl jg (bad) stc leave loop (bad) lcall mov push inc imul sub scas or rcl (bad) jno sti insl test pop cli clc sub out lahf nop sti sub mov adc std and dec jg add mov loopne out mov lea mov call inc in sub pusha imul jg pop cmpsb lea jb ja aam sub pushw and adc test pop mov loop add mov pushf jg cmp lds sub loope pop mov xorb and arpl push pop hlt jl (bad) sbb ds sbb mov daa mov add cmp ja,pt and imul mov sbb pusha pushf pop jg add mov jl insl jg or pop lods dec mov ret inc xor add mov dec jnp in mov psubusb jne sbb and mov lea jg or pop fs inc insb insl xor imul test stc test or dec (bad) cs jg cmp add sbb sahf jo jae lret add mov sbb push stc pop pop test inc mov adcl cmp dec jg sub push or mov test daa mov cmc push lret cmpb (bad) loopne dec out sti mov mov aad dec ljmp jb xchg pop addr16 outsl ret repnz imul jecxz (bad) jnp out in ds ds lret inc shll out dec xlat mov pop repnz xor scas inc pop into jg push xchg xor lock fdivl jg push mov pop and xor jnp test mov mov add das lahf add (bad) mov pop lcall mov adc cwtl jg and cmp mov mov lret aad mov mull dec inc ds jl int3 aas sbb mov and mov push hlt mov popa mov pop fldenv es in in call divl cmp popf mov scas xor mov outsb (bad) lds mov xor jb fidivr mov or xchg test jnp or cmp mov fwait test cltd mov sbb ret divb pop dec adc sbb push cmp lds out dec jbe test sbb sub cltd iret mov aas dec lahf lcall jae dec jbe popa push ds inc adc pop jo mov add addr16 and jno jg data16 pop mov cmp xchg sub dec jecxz and adc lcall (bad) push jg addr16 pop xadd sahf (bad) dec clc and adc aas mov sar dec (bad) test mov adc out push ret push inc mov repnz push jne sub xor pop jp pop in jmp fsubl and in cwtl mov (bad) jg inc out sub jg,pt int or negl aaa or fstpl mov mov push imul jg lcall jg lret into orb add (bad) iret cmp inc out scas xchg jne lahf inc sbb mov mov jg inc mov pop jg pop adc add dec pop jmp (bad) jp leave ljmp test mov daa arpl bound jns cmp pop xor jno jg push and add fucom fsubr push xchg sarb mov push mov out lock sbb fwait insl xor jg std cmpsb mov bound stos inc mov iret das add pop xorl bnd fmul (bad) out mov inc mov icebp fistpl mov rcr sbb iret clc stos in cmpsl mov jle popa add nop sub mov divl in sarb arpl clc push inc pop jg xchg call jae fbstp jmp lea test stos push movsb xchg mov and loope pop call add test and add fs push jmp sti ljmp inc rcrb xchg clc jg adc bound mov ret or cli push fdivrs enter lret inc jne jg or adc addr16 pop (bad) lods jp inc in into jecxz aaa dec adc jnp imul mov cwtl leave xor add pop inc repnz xor mov push pop pusha lahf dec mov es mov jg rcrl jg cmpsl or jg lahf divb push enter popa lcall fdivrs xchg jge,pt pop jle jg push xchg inc xchg jmp push out inc mov sbb mov sbb push mov jg cmp adc xchg pop ret jo mov pushf test push cmp pop das in ds lret jg aas ret cmp and xchg aas dec imul loope jg sti mov (bad) leave jg xor dec cmpl xor call daa jg repnz xchg bound mov jg inc pop dec xchg test imul cltd jg fildl out xchg es jne test inc mov and repnz inc (bad) clc jg lods insb loopne test dec jg jle js ss cmp xchg cmpsl dec aaa scas inc mov jg ja cmc cmp and jg testl sarb mov mov jno push jg push add add test in aam jg pusha inc cltd mov cmpsl cmc lea inc fistpll xchg stc rorb clc imul js mov je dec cmpsl jg ja (bad) sbb jg mov xor jg jnp mov lret es jg and hlt popa jbe push std lock mov jg xchg (bad) pop mov cmp jno (bad) cwtl jle sub popa inc sahf je xchg push dec jno sub les sub jg pop pushf lds ss adc mov jg mov (bad) adc enter mov or fistp int3 sub sub pusha jg xchg addl mov in es push push jg,pt or (bad) movb call fidivrl jmp jl xor daa sahf push int3 les push stos inc jp icebp lea inc push fs jnp jg ss dec xchg push movsb aaa call mov xchg xor sub jecxz cmpsl add inc cs leave xchg jg sbb push js dec (bad) lods dec lock (bad) pop (bad) iret xor fadds xor dec jg mov data16 (bad) jg loopne mov jg je pop xor inc push push add xorl stos jg les addl xchg pop xor jne scas mov test lea test dec jle testl push in jg je inc lea jg,pt xchg inc (bad) mov jg rorb fistpll fs (bad) int3 lret cmc mov outsb push pop fadds cmp (bad) mov xchg outsl push imul in test adc jg adc (bad) lock fistl pop hlt lods jae mov insb sbb sti rcrl fs clc imul jg push xchg pop and xor js and jg xchg jecxz insb test jmp mov jae cmpl push mov inc jno fistp sbb jp and mov inc fstp pop stos repz pushf xor pop js sub jg fwait adc mov mov int addr16 mov push notl or push fbstp jg xchg sub cmp xor mov mov mov xlat cmp xchg push js ja ja lods jg ds push inc cld adc xor pusha enter dec clc scas sub jge sbb or repnz lret inc (bad) jg loope sbb cmp aas loop out xchg cmp jne hlt fs jg dec out xorl jg sub pop loop (bad) scas test inc cmp sahf (bad) js movsl push pop pop sub hlt (bad) cmp dec push repz jg (bad) cmp mov jg hlt sbb arpl cltd ret and jg out mov cmp in leave pop das xor inc adc xor cmc popf call pushf mov jg in push mov pop cmc and pop test stos pop mov ja out cwtl sarb xchg mov jno fidivrl sub imull dec pop in dec jge xor lret mov adc (bad) mov jge jg pop std or adc xchg js jno mov push push movsl inc jg cmpsb (bad) popf cmp in mov pop (bad) cmp sub pop aaa sub sarb std lods pop lahf mov xchg inc and jb fidiv testb jg jno in stc xor jp xor push jg jmp push loopne xor mov into push cld icebp xor pop jg data16 stc sub (bad) mov movsb cmp addr16 mov popf sbb dec and jg rorb std (bad) divl into sub arpl aaa jg push (bad) sarb fwait push cmpsl xor loop adc test and or jmp jge xor out or pushf fs mov fdivs mov addr16 sub hlt dec jge or aas jg and inc mov cmp cltd pop mov adc in cld dec mov fwait inc sub maxps pop call mov jg out fsubrl mov scas jne mov jg insb push mov push idiv jg out mov pop jg test aad mov xchg jae push inc rcrb fcomi (bad) popa mov aas cmp inc pop fldenv xchg cld loop pusha jg repz mov mov test mov sarb ds ficompl mov lret scas jp test ds outsl mov push out jg ret add jecxz popa jg mov roll cltd adc xlat adc dec clc leave sbb jle cmc scas daa inc (bad) jo lea or inc cmp xchg sub mov mov jns clc cmp mov inc or sti aad or adc xchg cmp fucomip and cmp ret arpl dec loope or mov inc scas pop cmp xor outsl shlb push (bad) aaa pushf jg sahf pop and dec push sbb inc fs dec jne jp in (bad) mov xchg cli inc jb (bad) mov push xor pop aaa pop pop nop jg mov sahf cmpsb mov in sub push jg adc nop mov js mov fwait jecxz and ja test jmp pop jg inc add jg xchg in or add adc pop lahf push jg fistpll loope repz aas (bad) fld fs sbb jg mov ja or bound push jae movsb jg cld adcl mov (bad) cmp cmp imul pusha dec sbb mov stos jecxz xchg jg addr16 push aad ds pop call jg js movsl leave or mov mov sbb mov jno popf daa xchg adc aas ljmp mov dec stc xor and imul lds cli and fsubl fwait cmp lahf clc (bad) xor push cwtl cvtdq2ps mov adc sbb ja test (bad) xor stos mov push popf lahf pop jg (bad) cmc dec jae sarb cmpsb lret pop push mov adc xchg jecxz pop mov pop fwait movsl xchg or jno nop pop mov cltd jno xor repz adc repnz loop mov jg imul pop cmp ja mov jmp leave dec repz ja push sbb jg (bad) and inc jg (bad) xor incb adc cmp fsubrs or jg or adc mov dec out xchg fldt icebp sarl je (bad) and les pushf cmc repz xor dec fcompl mov les aad xor jo data16 jg push push sub cmp iret xor mov xchg test sbb jno arpl push movsb pop mov inc leave xchg jg cli mov int mov jae adc fdivrl divl jl or jg ret mov inc dec jg and cmpsb pop jg xor mov mov xchg push gs out pop mov inc insb scas jg imul adc push or cmp in jg lret mov fwait jg adc movsl das imul xlat ja dec push out popa push jg add mov outsb ja (bad) mov in mov cmpsb mov xchg out ss dec mov sub repnz xlat jg jl pop notl fsubrl test fbstp lock add int jg inc movsb shr movsl iret and fsubl cmp mov or pusha fwait or std adc nop insb inc jne sub mov shrb pop (bad) mov jg cmpsb adc fyl2xp1 inc idivl cwtl cli stos or xchg push dec sbb dec subl cmp jmp jecxz lods scas mov push in aas jmp sbb (bad) loopne xor popf mov in and mov xor pop out jg roll mov xor (bad) mov push aad and jae xchg and mov xchg sub dec jns cmp in push fidivr push ret jno cmp aas mov sbbl and mov mov outsb jg mov xor add mov dec outsl (bad) dec jg lret jecxz sti push mov aas push push add add jg int3 mov lahf scas (bad) out inc jg mov sbb mov pop mov push dec popf inc pop mov (bad) jae lret push jecxz insl jbe mov mov add fwait pop pop xor aam jg in ds and inc movq lds ret in pop jne and and inc arpl ja pop add mov xchg mov push mov mov inc add (bad) aad hlt idivl mov cmpsl js popf dec mov push addr16 mov add pop sbb mov aam into mov jle jne jg (bad) xor pop in jbe jnp inc iret mov test fnstcw mov lcall sub aam sbb enter fsubrs arpl jg test hlt repz mov sub jg fwait test lock stc cmp jmp jae mov insb xor test jno loopne mov jg stc scas mov or mov pop int3 adc push jg pop lcall push lods mov jge outsl pop ret add cmp clc test cs mov lret lret jg or and inc aas mov aad pop (bad) movsb inc cmp push ret mov jg mov idivl nop (bad) xor lret sti push pop jg push fmuls mov jae es fnsave mov xor popf jl inc mov fsubr pushf (bad) lock sti push ret sbb ds cmp mov or adc add mov sub mov fsubrl int jg mov jns add mov mov jp inc jmp (bad) out out and loopne jg jmp stos je or roll jg jle outsl aam pop stos mov pusha into push and xor jne add mov or js xchg (bad) in arpl cltd dec out jg (bad) stos sbb push leave sarl aaa sub popf pop iret (bad) loopne xor pop out dec pop add rclb popa push jg mov dec jg jmp mov pop add (bad) mov fwait push jg dec pop sbb jg cmp jle mov xor movsb push ss jg mov mov fstpl inc addps movsl xchg rclb pop and shll jg mov pop dec mov mov inc insl adc shr jg aaa pop push ret mov xchg sbb and jo rolb lret adc test loopne jg mov fildl mov js enter dec insl jg add mov adc std pop or add push out mov arpl dec push cs jg mov clc and jg ljmp cli xchg cld addr16 mov jg add sub js push sub cli rorb inc jg cmp ljmp not jmp push mov test sbbb jg mov pushf je popf mov fwait mov xor jg fnstenv movq inc imul inc jg mov push out cmpsl jg loope outsb cmp in into jg sub mov adc dec mov data16 cmpb cmp jg js cmp mov jne pushf into andl rcrl or pop inc push dec lea and push jae sub outsl ret in imul leave lret mov add xchg lods and faddl jno push stc adc adc lret pop mov inc repz cmpsl or mov insb mov movsb mov xor in data16 mov aad or pop or cmp gs xor dec xchg push mov pop pop stos mov aas mov out dec incb mov jg divl or hlt cmp addr16 inc xor lahf sub (bad) mov aad lret add push cmpsl xchg xor int loope stos repnz xlat addl jg out mov jg adc (bad) pop sarl push into (bad) push jg dec inc adc out push lock gs in bndstx js dec mov jg movsl dec inc addb int3 cli fisub mov and clc in inc jg xchg cmp mov xor jg and jg mov or fstl inc into jae jg dec xlat and cmp inc mov data16 pop add mov jg pop mov ret dec idivb xchg jg dec push (bad) repnz ja push scas jg psrlw aaa mov jg jmp cmpsb cmp xor in xchg mov mov mov xlat mov bound fcoms lock scas cmp fstpt lret push lock pop scas jnp inc pop push (bad) jg fs sbb add loope add pop mov add mov jb out mov fstl jg sub leave rcrb xchg mov out mov nop mov jp and and jg push and inc ret pop repnz jno fcompl xor pop add outsb iret rorl xchg jg or inc push imul jns cmp test in pop mov jg hlt paddb cmpsb rcrb dec mov cld dec xlat or (bad) jg mov jg mov pop inc jg sti xchg ret push push xlat jg lods stos repz xchg out mov mov sbb in sub js push sarb mov repz dec xchg inc decl pushl shlb pop mov sbb push add mov neg inc and mov lea (bad) mov mov pop insl ds or jae or mov mov pop cld dec dec jbe sbb dec je xchg loope outsl adc int popa jg mov jnp jg push scas push divl push pop imul add sub test and inc jg mov sub jg int3 sbb jo and adc outsb xorl mov (bad) jge cmc dec ret (bad) jg in dec or jg leave push xchg call mov dec imul stos mov jg adc jns fnstcw mov push and dec mov push jle in scas cmpsb cmp int rorl xchg bound or mov stos xor inc inc mov pop add fisubr stc push mov inc pusha jge jp jg das dec sub xor imul std aaa pop (bad) jg mov mov ds dec (bad) lea adc lds mov outsb adc popf das aam or shlb sbbb cmp sub into jg xor fiadd push outsb jg fist das add cwtl mov mov jg pop (bad) or sti (bad) xchg dec fistl xchg inc and jg leave push fdivrs mov jg jmp add or popa addr16 out sub out jg les mov pop jg xchg mov mov cmp jg lods repz lret (bad) jbe outsl dec jb mull arpl mov jg pop mov pop sbb inc js adcl add fild (bad) (bad) daa (bad) popf sub inc aas jne push mov push jg dec (bad) jo clc dec or stos adc jg movsl xor jg lcall jae lret xor js push fcomi mov (bad) icebp dec or (bad) lds es clc arpl ds xor out xor dec outsl push jg into xor mov or dec xchg push fdivl or loope jg gs pop lret bound xchg push pop and call test sub jecxz in inc lret jg (bad) popa pusha lcall inc fs mov xor js stos mov fldenv fiaddl adc aaa repnz mov sub mov aad dec les loope addr16 lds out xchg dec addl sub in jg lods lock in stos cmp push xchg jg xchg xorb lret fs cmpsl xor dec pop lods fnstcw data16 movsl sbb adc int3 pop jg (bad) and js mov fisttpl lock lds pop hlt pop xchg sub mov pushf dec scas jg fisttpll adc popf push mov push sarl jae cmp fs sahf cmp lods pop in jg mov mov mov gs dec cmc xchg dec call ret lods jae xor loopne stos addr16 jo sti imul dec mov lods push ret jg in pop mov jg lret loop lock jg or mov or std (bad) fmull jge mov repnz test das cwtl mov js inc insl push mov dec mov leave rcrl jg loope sbb pushf jg out loop xor loopne xor mov jo cmpsb pop push cld mov or (bad) jbe clc test dec ja aam imulb insl sti pop jg jmp mov lds inc (bad) sbb jg cmpsl dec loopne insb jb pop repz sarb addr16 inc jg lea push mov inc aas insb add inc shrb js cmp pop or inc add xchg xor push shll mov mov push gs imul xor addr16 pop inc (bad) cmc jge pop jg sub cmp sbb jg push mov test xor mov jg inc sbb or pop dec and jecxz xor jg pop jle fwait xchg fdivs pop xchg scas mov dec mov xchg arpl jg push cmpxchg or xlat lods mov cltd xchg stc mov mov imul xor sub fwait aam inc mov ret jnp jns mov dec push call sti js loopne ja sbb outsb add xchg jae sub jp stc ror sti adc pop inc push and push and test jg mov mov test dec fldt movntq call in movsl inc lods push jmp inc loopne jbe push jns pop icebp sub aad mov mov and fidivr lahf jnp pop mov cmp jg and ljmp adc cmpsb add inc insb sub sbb lahf push stos pop (bad) aas arpl aaa rolb (bad) xor push adc cmp jg (bad) incl sub fs mov aas jle stos mov jbe cmc sub and jg pop shrb aaa jg push movsb add mov pop lock out ja sub out and sbb rorl ret mov test push jg aas je and fs pop mov jg test into jecxz and mov mov adc (bad) sub inc pop (bad) and rcl test jg into and jg insb mov rcll rolb lock dec jmp jbe adc ljmp insb fistpll sahf insb fidivl mov sti in inc lcall ja sbb push cld je mov mov inc arpl sbb jg popf test xchg mov mov jo fwait mov lret mov call jle pushf pop ret dec jg adc test aas xor clc ja fisttp test outsb lret xor out dec mov xchg mov fcom (bad) pop and jle jg dec mov bound popa negl fimul jge push dec jecxz lods xchg jmp fld1 data16 mov push sub jg mov jle fsts rcl (bad) cmpb mov test stc pop (bad) in out jg fiaddl push mov insl fs sbb dec test jg cmp lds lods pop aas faddp sbb insl sbb pusha xlat push cmpl cmpl mov or out push sar jecxz fistpll mov mov in mov or cs sbb jg pushf push mov jg data16 bound xor pop (bad) out sti repz inc inc popa test inc jg mov lds sbb inc mov sahf mov repz lea push jg sti xor jmp add test sub push pop dec push (bad) mov outsb lea movb aas dec arpl shrd jle test dec cld sbb mov nop jg jno add jbe sbb imul jg ss movl cmp outsb add dec push cmp jg imul pop sbb lds arpl dec mov jge gs jp mov ret pop sbb jg mull std jg loopne (bad) pop sbb jg adc pop cmp dec or imul dec jg daa scas mov pop xchg shlb jg rorl cmc jg insl fisubrl les in pop mov inc dec jb mov aas dec xor pop jp push dec scas pop jg nop clc inc mov inc repz into outsb pop mov or push aaa sahf push jg dec or push std cmp adc in add (bad) jg fiadd inc mov stos jg or cmp test (bad) pop ret sub je,pt add pop pop js pop mov add gs sbb std push negl scas cmpsl in jbe lret cld js aad jg dec mov int3 jno jecxz adc aaa xchg rcl mov bound pop inc loop imul sahf insl mov dec cmp add sub mov dec movsl mov loop and jns push pop jl imul movsl fcmovnbe fmull mov les add inc jge aas sub cmp std cltd jg cwtl clc scas in mov test adc push aam roll negl xlat nop push jbe out mov pop (bad) lcall mov jg xchg test sub je cmc mov loopne push sub out mov fwait icebp out jge xchg cmp jg pop pop dec dec mov xor mov xchg clc in stc movsb jg dec xchg (bad) jo int3 mov pop sahf pop mov cld jbe mov jae fwait inc mov ret fs dec and ljmp outsl aas or hlt jo adc dec add lcall fdivrl clc push xchg adc repnz movsb sti outsb jle dec pop sbb mov xchg xchg (bad) cs mov jg cmovne xchg popa xorl dec sti sti mov push sbb mov jg and xor pop mov es ret pop mov fistpll dec jg jnp inc xchg gs fdivrs push fadd in arpl jmp mov pop es xor dec popa fsubs cmp ss push mov imul pop mov lahf test mov dec ljmp stos push inc xchg push jg cmc mov lcall test inc fidiv or mov fistl iret cmpb inc cmpsl jg addr16 xchg imulb xor leave jmp jg xlat push xor adc cld or push (bad) add (bad) test push int repz dec mov shl bound jg sub ja or scas mov jg push out repz sbb inc jmp inc jg test stos xor lea scas cltd out sbb fwait jl in aad loop lds add xchg jg dec pop mov sbb pop inc cmc push push out clc jg das (bad) pusha lock insl in lods push inc repz loop sbb jg (bad) in shlb xchg (bad) sub or mov ljmp push js shrb aam aad sub and mov fild sub scas cld push xchg cmpsl adc (bad) mov es jno mov push call jg mov push test insl jg addr16 adc insb push dec xor pop or push jg sub sti lds loope loop jmp into test jns nop pop icebp dec xor push add push idivb (bad) clc outsl fwait rcrb test xor inc mov push mov shll push out fdiv mov jg mov push jo cmc cmpsb jg mov in popa ljmp ds testb outsb aas and jb cmp scas cmp jg sbb mov mov dec sbb std xlat jns cmp pop jmp xchg xchg add jg dec cmp in adc lock test pop jg fwait out ret data16 clc mov (bad) fldt enter sbb push jg sub jmp ds push js sub outsl ret mov jg dec adc inc out lea jge hlt push movsb daa idivl popf jp fsts fs fist and mov adcb int adc push int3 pop mov cmc push and sarl or loopne jg mov shrl push mov push push arpl (bad) push and aad fnstsw adc popf cwtl push int3 pusha mov mov mov cmp mov jg nop out shl sub imul mov mov ds adc insb les xchg insl push lcall addr16 mov xchg cmp xchg stc inc mov adc push out mov pop inc xchg cmp (bad) aam outsl bnd leave jns (bad) sti fsubs push mov imul ja outsl mov mov data16 out fsubrp loop adc mov dec inc xchg cmp xor fwait jg dec in popa adc test dec pop fdivl sub push fwait adc pushf cld pop ds or inc jg cmp add jg pop (bad) imul sub push pop jnp shrl adc pop arpl lods or testl mov mov push je mov pop adc xor push pusha cmpsw jl mov pop mov jg je mov jg push rolb loope scas sarl ss idivb sub gs popa mov inc shlb push test xchg mov mov pushf mov sbb lahf ret imul loope sarl movsl popf jg mov jg add daa and sbb sarl inc inc cs cmp pop add pop repnz loopne sti inc insl je lods iret dec arpl adc cltd nop jnp ds cwtl jg je push out mov pop inc mov daa push aas movsl icebp mov xchg xchg sbb xor (bad) ret ljmp mov je scas outsb sti jg ficompl js insl jg sub push stc addr16 jg adc push fcmovu push push pop int push mov rcrl add adc xor sbb pop jg add cs cmp jge mov (bad) jb ds fs lcall fisubr xchg xor dec xchg ret jae nop mov push aam scas push pusha sahf and push je mov mov pop out or lods jg inc sub insl cltd lret pop jae scas loopne test in out mov push jg aas popa xchg push fmuls outsb mov cmp xchg jge xchg or loopne pop jne out jecxz dec rolb pop pop mov sbb ds push mov xor popf sahf pop insb mov jg mov ljmp sub push iret sti jg jo xor xor mov push in or test loope mov test clc adc push jg addl imul dec xlat in dec jg ljmp jg ja mov jg xchg icebp xchg xor mov inc cmc sbb push in jge xor jg out (bad) mov jae jg mov mov lock or pop inc stos fwait cmp sub ja xchg mov cli xchg jg aaa cmp lcall daa bound sub sbb cmp inc icebp xor repz cmpsl imul popa scas imul xchg adc jg mov jmp push popa jo xchg scas mov push sub rolb jg lods xor jg sub cmp leave adc psubsw jg rclb cmpl sub mov out test cmp in jl test jg lods mov sub dec mov mov cltd or or fs jg push imul insb fdivrs adc nop add dec test mov mov xchg push jg xchg iret (bad) aad cmpsl mov jg mov inc fdivrl pop sub mov cld imul (bad) xor mov mov addr16 stos jecxz dec push out mov mov lret (bad) ja xlat sub mov movsb xchg aam outsl or cld into out pop or mov idivb adc jg (bad) fdivs mov lret and lods mov dec fnsave mov inc mov call push sub lea sbb cmpsl (bad) xor mov ds sub sub in icebp inc cmp pop (bad) test lock add mov xchg call in (bad) outsl stc dec pop jg ljmp jg mov push xchg fimull arpl xor push pop aaa out push test cltd inc aas mov je,pt jae lods data16 clc xchg fbld jg add pop (bad) (bad) jg mov pop inc aas cli cmp or mov dec add insb repz (bad) fdivrp adc dec lret cmp xor sbb (bad) jle aas cmpsb or sub sub in imull push jg xor mov jg movsb fsubrs lret idivl xchg jle packssdw es cmpsb sbb (bad) jg adc jno add mov and (bad) dec and lock clc add jno adc add xor inc jg inc push sarb bound mov xchg xlat jg outsb orl jg sub std movb pop cmp pop lds arpl sahf dec out cmp inc sub mov ret popa (bad) jg fsub fisub repnz lahf mov sub jg jnp loopne mov jg lahf push call fs repnz mov jecxz adc lret xchg push jno arpl mul mov pop mov jb jmp test push xor inc int3 adc lcall out fucom xchg test movsl inc dec sub sbb mov add js addl cmp cmpsl jl fisubr sti adc jno dec xchg pop and test sub pusha xchg lods movsl mov loope pop hlt imul dec sbb ss lods mov mov cmpsb jg and fstl pusha jmp aad cmp (bad) inc jg dec pop arpl mov mov pop jg roll orl call dec push (bad) jg xchg jbe jg adc jp call test aam jg add js xor jg mov and aas push movsb in jnp add clc jg lock or and push jg adc call (bad) inc sub pop popa mov dec jmp stc jg fisttpl (bad) or pop fwait lods int3 fistl les add fistl inc pop dec sub mov movsb jno push add (bad) sti dec mov pop data16 mov or mov stos mov sahf incl mov push std jo leave fistpll icebp xchg cmp mov and inc (bad) adc inc jg add lret (bad) cmp int3 test movsl lds inc hlt (bad) pop mov pop ja ret jg lahf sbb mov movsl cmp rolb mov gs std mov in jns les imul pop rclb gs adcl arpl call fnstsw js or dec in fdiv fildl or add inc mov popa mov xchg push pop bound pusha sbb jg adc dec rorl adc xchg repz bound add int push in stos mov or cmp imull xchg popf sbb stos gs cltd jg cmp dec push jno mov jle jns mov push arpl and ret aas popf stc je icebp fs dec dec pop jg add push (bad) mov aas pusha jmp test (bad) sarb lret shl aaa jg cli int push push adc jg dec ljmp fsubrs mov adc rclb sbb jg call pop aaa jg pop sub sbb xchg arpl out add jo ljmp xor xchg mov cltd stos insl lods imul push jg dec xchg loop cmc sub (bad) ret mov inc popf jg ja (bad) sub test sub ret sub hlt (bad) sti jg inc xor data16 mov and jns mov shll lret lcall inc sarl or inc xlat incl lods js or mov and je test push jbe mov or pop daa ds sbb inc aas loopne jg xchg stos jnp xchg jp mov popf sbb push scas aam add push jg ficompl cli or imul sub out js sub sub push xchg mov dec lock push jg xor sbb outsb jne aaa mov das mov fs inc lea mov jg popl iret fmuls mov sub inc push imul jmp mov shrl push add mov notb sub pop lds xchg aas clc stos (bad) jp scas aas call lea sbb mov sahf das addr16 movsl dec rolb in les imul clc sbb nop xor add lock xor bound inc or xchg enter jp or cmpsb push add aam push shlb cmp jg das sarb inc push push jg mov clc hlt sub jg cwtl lea (bad) aad xor pop daa inc neg cmp mov mov adc push sti sub add aaa roll jg cltd adc hlt pop or add outsb ljmp cmpsb fidivrl gs (bad) cli adc push mov pop and inc or jle pop add outsl xor movsl jg (bad) lret pushf test ljmp xchg aaa jmp lock and repz mov aas loope mov mov aaa jg adc cmp aas icebp arpl mov sbb dec test xor mov lret lcall arpl jne divb xor aas out cmp shl mov lahf mov xchg jne jle cmpsb add dec sbb mov lcall adc mov out andb mov jae xor mov mov sub xchg jns inc add gs jmp aaa push sti jne aam jg cmp and fnstcw mov rorb dec cwtl xlat jb inc ret subb mov jg mov flds push shrl pop mov jne ds fstpt inc (bad) push pop jno test and xor lods xchg mov lret outsb jg test stos xchg lds scas xor popf stos mov mov mull push jp (bad) mov add daa xlat jg and jg lods insl add cmpsb in fnclex bound (bad) clc xchg push dec jg or movsl dec shrl sbb or mov loope aas aaa int3 add inc mov sub adc into push sbb (bad) xor lcall and jae mov sbb dec mov or loop xchg push add int3 inc aas dec mov sub daa jg lahf sbb lods orb lds out test out test jg in ss jl cmpsb stos aas jne cmp jae jg xorl and mov les cli daa jl xor divl sbb inc sub mov repnz add ss std pop fcompl clc (bad) decb or adc sub out pop jg cmp push cmc rorl lock jg,pt les popf push call mov das xchg pusha xlat xor les sbb repz mov sti adc push xchg mov into or mov jge sbb xchg dec stos cmp mov jno (bad) xor loope cmp jg push mov dec js or pop sahf mov cmc and fdivrs xor nop (bad) (bad) jae pop insl cwtl outsb adc jmp inc fldcw sbbl arpl inc sbb mov jp fidivrl sbb jg shrl cmp lods fcompl outsb xor or sbb repnz jnp jp movsl sbb insb jo scas ficomp in mov pop fnstcw insl inc cmpsl pop push ss add (bad) inc sti inc repnz aad rcll out aas pop push lds inc jb adc cmp sbb sarb pop call adc sub pop mov imul mov inc push push mov loopew push pop xrelease ds repnz minps dec lcall stc inc dec mov jg jnp (bad) hlt je mov adc xor repz mov or jbe inc push add jg xlat inc scas (bad) adc jg inc (bad) mov bound outsl mov cs aam pop jg loope test jmp dec fsts mov imul (bad) mov cli mov add bound adc xchg test or sbb pop sub (bad) push pushf fst mov ret mov es faddp jo divl das pop sub mull xor and (bad) sbb mov xor and lret push (bad) mov or jg adc stos ds fisubr outsl inc mov xor xchg aas stos xchg fs aas mov dec stc pop std fistpll sti mov pop (bad) mov pop add adc mov adc popa mov cwtl repnz dec push sbb mov xchg inc dec movsl sti pop pop out rorb push push cmp std mov sbb gs jg dec insl ja pop push mov repnz add dec in les pop jg dec mov test je jle stos lahf and mov in push pop xor jg cmp loopne dec lods mov jne jne jg dec les inc mov in xor nop iret xchg test push push xlat jnp pop hlt fld pop jg and jg cmpsb cli je xchg sbb pop xchg decb mov jb pop cmp (bad) xor (bad) jo jg xchg imulb sub (bad) push jg or adc jg pushf xchg push sbb xchg and test leave sbb in popf je sub jp xor jg out aad sarb pop orl das roll or lock jg pop or test push sub mov imul int3 movzbl sarl jne sub aam mov push mov mov fistl push insb ja jg jns fstpl push add jg ficoml adc sbb and ja loop jg add xor sub jg dec or and ja stc and imul or add pop cli scas jg insl and cmp xchg cmp sub or push arpl dec call jbe test cmovb jg cmp js xchg fistpll inc (bad) cli repz stos or in out test mov inc mov add mov jge sti inc mov sbb movsb stos fmuls jmp es jle iret jae (bad) imul hlt cmp adc div scas dec and aas out cmp leave jg push inc sbb sbb jg loopne add aad hlt les lcall jg inc out (bad) push mov jg or mov ret sbb pop (bad) popa sbb test jl (bad) xor mov dec seto adc or adc bound subps lret (bad) addr16 inc ret pop scas cmp pop cmc sahf bound cmp jg add ljmp sbb std xlat enter mov push inc adc mov leave cmp gs cmpsb mov push test lret sub (bad) imul xor jle sub jge jbe call jae fimul jg fxch cmp adc cmpl into cmp rcll (bad) lods xor cs xchg imul inc pop js data16 outsl (bad) lock jmp mov mov sub sbb add pop sbb adc aad mov data16 es test mov test adc dec jg xor inc mov scas (bad) les ja xchg or pop ret test jo and sub sti mov ret mov or mov insl pop ds dec pushf jg loopne mov sub divps cltd lods add adc dec sub stos das pop xchg sbb xor inc or sub outsl stos fldl test jg sbb iret sbb in rcrb (bad) sub adc gs jp fnstsw jmp inc add les mov sub popf xlat inc sub bound addr16 je,pn idivb jp cmpsl jno lcall pop adc cmp sub scas jg sbb ja outsb xchg jmp inc adc jg push cld rcl notl and lock xlat push sub lahf ret push movsl sub test call popa push dec loopne sti jnp push outsl pop push stc fistp jne ret push inc dec loope rolb xor imul movsl aam jg iret je (bad) jge xchg sti cmpsb push or jg out add fbld pop (bad) mov push adc maskmovq idivl cs sbb dec jg imul pop (bad) dec cs shll sbb mov cmp sahf ret mov xchg fneni(8087 ja mov movw fstpt sub popa lcall push mov dec mov (bad) aas jmp scas add mov jg in leave into xchg dec push movsl jg pusha mov aaa mov fistpll pop adc push repz adc out aad std lahf mov loope jg mov dec pusha cs lea dec cmp dec push cmp jg and cmpl jg push or pop insl jnp repz ss xor adc jecxz xchg jae cwtl inc cmpl xchg lret stos mov cmpsl aam leave incl adc push and xor mov out fsubs sub js imull push and enter fisttp inc mov ja movsl jge lea xchg scas pop adc jp sbb out xchg (bad) mov mov push dec xlat out xor and arpl hlt data16 repnz dec pusha dec jg or sub dec and test sbb mov pop pop imul cmp xchg into jg cs add aad neg in jp jg in or push lret mov push jg or jg out push pop lcall dec scas cmp cmp popa mov mov movsl cmpb inc jbe and pop mov je imul xlat inc pop push jg mov cmp jg bound sub or pop (bad) ficompl jg pop (bad) xchg add lods sti and aas cmp inc adc or (bad) mov btc xor scas pop pop sahf (bad) dec and jg mov push aad cs imul js adc dec and aas iret insb ret mov jne sbb dec inc stos inc fwait cmpsl jg pop lret push xchg mov js popf imul iret inc lcall rorl sbb dec js stc cmp outsb mov cltd mov xchg sub push outsl mov in jg sub and stos aas or test pop imul xchg icebp mov outsb (bad) jg in sbb andl jg dec int3 js cmp sarl mov rcrb cltd aaa lock jae testb push and or inc int3 lock pushf inc stos dec jg sub push notl popa jg push mov sbb xor mov aam out shrl jg adcb mov repz inc ret mov jg test push jbe out dec imul aad pop cwtl xor roll loop sbb lods cli mov jle pop or sub push test ss lds out xchg je movsb cltd xchg or sub sti cmp cmp mov aam outsl movb mov jg inc sbb cli fcompl mov add sbb clc jg add mov pop stos out mov js mov sbb andl or pop dec dec cmp movsb loop jne push jge push mov loope aas cmp mov and xchg enter jg je push lods mov popa add push leave mov enter outsl test fdivl pop adc out jecxz cmp loopne sub out lods mov stos pop (bad) jno mov add or int3 aas sub sub xor imul inc jg mov mov lods fwait sahf xchg dec dec sbb inc repnz push (bad) and mov mov cmpsb aaa jle mov mov jb (bad) cmp inc fwait dec push cmpsb xchg mov dec push call dec jg mov jg jecxz sub or arpl sub dec sar mov mov pop adc mov dec sti xchg aaa mov dec test push sbb mov inc cltd frstor andb jg pop enter or out jg andl scas jg xor push stos jg pop roll pop push jg sub sub hlt adc and int3 dec and jae xchg jecxz in pushf scas (bad) inc cwtl adc scas stos pop out imulb jg lret in dec push jg popa and sbb enter pop pop mov ljmp sbb jg loope out fs jbe jg push je adc jns sbb cmovo arpl and or icebp hlt addr16 jnp int3 mov mov add mov sbb (bad) pop mov jg adc pusha dec sbb or movsb xchg call pusha dec mov stos push ja ficoml cmp lds lods mov scas loope jg pop jmp out test push adc pop jp rcll imul pop repnz jno xor and loopne or mov jg mov sub jg dec clc imul jno adc cmp sarb mov int dec cmpsb xlat sbb inc insl jg mov mov jg jae (bad) loope aam aas mov jmp sti push mov jg sbb jg pop sub imul jg push sahf decb (bad) outsb jg mov inc pop jg lock jg lea and (bad) jb sub pop ss add mov jle push es xor cmpl dec arpl pop jg in mov cmpsb xor pop jns les mov mov cltd jg pop lret imul dec les cli (bad) call fiaddl fiadd in test daa or pop xor cs or fs sub aas test (bad) pop mov test icebp sti sub push movsb jg mov std jg adc or imul idivb sti (bad) pusha das daa outsl sar faddl jg mov add roll sbb fstpl jg negb add add gs mov les pop stos aad mov pop sub mov les imulb mov sbb popf push mov jg push repz add cmp add lret adc mov out pop jbe loope (bad) push (bad) insb jg lods or cwtl jle jg iret movsl stc jbe or std cmp int (bad) js fs dec push pop fwait or add pushf inc mov ja in xchg lds scas jg jge lods rorb jg add mov out or mov ficom xor aam pop fwait inc addr16 clc sub enter mov popf ds cld push rorl gs jg shrb out lds cwtl xor insl mov popf jo dec cld jg addr16 jp and mov pop in push push lods inc xchg mov pop test mov (bad) or jecxz sub popf (bad) jmp popa outsl mov pop xor into ja jo dec xchg popa jmp outsl loope and and lods std mov mov stc je jmp (bad) lea mov sti cmp mov pop jg ss pop (bad) xor jg les ficomp aas stos repnz and adc push xchg jg lahf jno out sbb mov popf arpl lods idivb xor aad sbb jp jnp jns in (bad) adc inc movsb mov loopne loope jge mov push jp,pt ffreep or and cmp pop in cli xchg adc repz leave fdivrs cmp jno dec out jg iret jmp and cmpsb dec cmc pop mov add inc pushf jg cltd sti cld test fcoms mull mov or mov or jg adc xchg ds xor jp or aaa fwait imulb sbb adc inc fsubl jg inc dec and dec inc add fistp inc ret std addr16 jge push dec sbb loope ja jg fadd xor jno sarb mov in jg push int3 pop jne sub inc popa jg sti mov mov (bad) jg dec shrl mov adc xor jmp jg inc cmp mov in adc xchg bnd mov jg popa pop les xchg jg aaa jmp mov mov movsl sbb push push or jg dec pop mov jg or in push mov das movsb pusha mov mov mov fisub inc pop outsl jle inc push jbe cmp (bad) das jp jbe pop inc aam jg data16 mov insl loope jg pop fstl mov sub pop push mov jb outsb or fnop (bad) sub ds int scas pop add loope jae lcall jne xchg fs mov mov imul add dec add or lods push (bad) repnz in mov mov jg icebp pop mov int adc mov out mov push pusha jg jo fmull dec cwtl int3 lret mov xor jge sbb mov pop jg mov jle out and sbb xor jecxz gs push out inc push cwtl sarb aad test cmp shlb mov cmp sbb pop jg dec pop push and subl mov into lods mov jg or pop (bad) mov pop jg ret jbe push lock adc fcompl insb xchg mov jg push jo das loopne jg push pop insb jl aas pop aas lds (bad) enter test inc fcompl cmp jg mov dec mov jmp mov jge and lock jecxz faddp int sub push inc cld sbb notb and shl repz mov jg ja stos in (bad) lds rol pop mov call push sbb (bad) in xchg dec dec lret rcrb jg pop inc adc aas inc mov adc inc xor xchg out add mov push xchg fs int3 pop mov (bad) mov das (bad) pop push lret or ss rcrl ficom shrl add mov hlt addl push ret (bad) aaa test mov outsl pusha int aad jbe iret in push cmc xchg loop cmp pop dec outsl cmpsb and jg lahf mov mov jb xor lock jmp (bad) nop dec lea insl inc js sub or pop shlb mov xor mov cmp stos push int3 fwait lahf mov jg test mov cld pop jl cmpsl popa mov adc xlat inc daa pop xor dec xor sahf or pop popa imul data16 loope jmp lds dec mov js dec or lods divl lret jge push mov mov je mov jmp xchg repnz enter sbb add clc jg out rcrb mov les int3 out and jg frstor adcl out or jg (bad) dec and lea dec jmp js jg mov jg fistpl ljmp aad ret jg (bad) dec push lds jg orl je into jg sub lret inc lret push sub dec jg outsb and pop in sti xor fimull or idivl pop rcrl jg push fstps js or dec lret push nop (bad) xchg sub inc push jg sub es clc cmp add pop jg enter push mov jg loope xor mov sbb mov or out jo jmp push test mov xchg js sub add sub xchg out cmpsb ficompl cmp imul int pop jg sub sbb nop jg mov rcrl adc push test sahf push inc push icebp xor mov dec rorl pop popa jg cltd sahf dec mov jge mov xchg imul xchg push lcall mov pop pop mov in stc pop and outsl push call sar lock (bad) cld in mov or inc mov add mov pop mov pop jg dec cs cmp pop jg cmp adc and and dec mov das xor mov mov sub jg fwait popa jl test cli jg insl xor sarb or cmp fld jns stc adc mov insb fdivrl add and sbb pop push push mov jg jae push testb jg mov sti jae mov and fsubs push dec mov lods xor (bad) dec (bad) je lods push xchg fstl xor push pop loope xchg addr16 jno jge pop mov outsl mov jg in jle inc scas popa aam rcrl iret fwait ret stos inc jae pusha cli jg pop inc ret dec mov push and add xor push pop mov sti and pop out dec push bound (bad) jg fcoms (bad) push mov aaa lcall jg js nop dec pop mov jle dec int cmc ret dec cmpsb dec sbb inc xor into fiaddl mov xchg es mov and push mov adc aam jbe lods inc xchg cmp or fwait jg hlt movsl dec loopne test jg dec dec xor js cmp dec xor or cld daa push rclb nop adc adc ret jg lock mov inc pop out mov xlat dec xchg sti or inc pop mov add (bad) ss loop jg jno ficomp dec mov inc pushf mov fnstcw int3 sbb pop jg mov or aas std lcall xchg bnd outsl jnp push push xor imul mov xchg ror jmp imul cmpsb les mov cmp notl sbb ret mov cs inc out repz sbb subl dec mov sbb xchg mov mov cmp dec ffree (bad) jg sub mov adc pop (bad) (bad) cmc jg jge in push adc sbb push dec inc jg cmp or push cmp nop sbb jg rorl aas xchg and in imul jmp imul (bad) les inc dec test mov jo jg add jae fld xchg aas icebp push movsl xor clc (bad) jg sub dec imul push idivl pop push push addr16 ffree sbb jg (bad) mov jg inc scas (bad) dec fnstsw pusha adc xchg inc and test out inc lahf jg lds xlat adc aaa jg add hlt inc outsl ret scas mov jp push lods jg adc or into and fdivrp outsl pop es dec mov loop mov xor scas pop xchg cmp mov movsl gs adc dec pushf outsl sbb ss or xor insl data16 or dec push out jg mov mov add mov sub ss inc inc (bad) jg jno mov inc jp jg adc (bad) mov add inc inc ret rcrl (bad) pop mov fcomip xlat adc addr16 mov push and push movsl cmp cmpsl cmp mov stc inc add (bad) das xlat jl loopw cmp xor xor mov push dec cltd jg add pushf dec test or jg sub mov aas subl dec xor jg pop sbbl lods ljmp test sbb data16 jecxz aas mov and push dec pop cmpb sbb mov mov andl cld xchg jg sub jg (bad) sub jns loop mov stos ret xchg mov and push les pop push (bad) mov jno sub xor lods push popl jg fldcw mov test pop jg mov ljmp or jg adc xchg jg hlt and dec mov ret dec jg pop in pop sahf aad cmpl cmp dec stc arpl jecxz mov aas push mov popf loopne pushf xchg inc ret mov pop sub xchg rolb in mov xchg or lret jg xor add ljmp jl leave aaa mov jg xor mov or pop shrb rcll adc sbb sbb push jae jo mov test pop flds lods test repnz (bad) or mov mov adc test std mov pop outsb sbb arpl lcall mov mov (bad) cmp xchg pop jbe ret jnp jg mov mov jle mov adc sbb and sbb jg sub jge adc sar test enter add pop pop inc xor jge pusha loopne jg cmp pop cmp sarl test das pop and ret in test lock out mov or mov jg outsb fwait int3 mov (bad) sbb mov sbb or lods cmp movsb out jnp jg jp outsb test cld jns xchg fbld jg jb addr16 sbb sub insl dec xor and outsb sahf lahf mov sub add add dec shlb aaa mov mov test mov jbe mov xor mov pop (bad) xor cmp mov push movb lock js loopne xchg push push cmpl jae xchg xor enter mov cmp cld jg fstp fidivl sbb add lahf jg or mov repz mov jmp push jg dec test loope adc adc jg mov and lock pop or add mov dec push jae ret push xchg mov sub mov outsl mov outsl popf iret test lds icebp mov leave mov mov pop xchg dec arpl loop jg repz test lret icebp sbb push ljmp je jg,pn sahf mov fsubrs divb xor sbb test mov nop push or in jg scas fstps add pop cwtl loop add lock in imul aas (bad) (bad) std lods out lahf imul jl jg jo setbe sbb mov shll arpl mov ja bound mov xor ret dec mov outsb shr push loop or sub mov and rcl dec sbb addr16 inc (bad) and cli in test push mov add in insl cmc lock sub xor fs xor jle in incb sbb pop and dec aad jg or push out pop xchg add xlat mov push jg adc xor xor mov (bad) stos pop adc data16 mov adc jo leave push sbb jg mov inc stos jg jbe cwtl add fnstcw add mov aas imul lcall inc jl jmp push or sub scas pop bound aaa mov cmp ficom je aas mov dec mov pop cmp (bad) movsl and inc jg sahf add inc jg std movsb test xlat jns jg xor xor jg (bad) pop loopne push cmp sub jg and fdivrs or mov lods loopne push push adcb dec or jns (bad) in inc lcall sub (bad) jg or inc mov addl loopne imul outsb jg jp adc xor jae das and call jg fwait enter jg mov mov mov imul outsb mov pop jg or xchg xor enter mov nop mov cmp cmp mov fcoms jg mov or adc add jle jg call sbb dec outsb push lret add (bad) push jne orl jo cmpsl cli sahf or inc sti add les ss ret adc (bad) std xchg in add pop and jg sub outsb jg gs adcb xor cli rolb lret inc push push les xor lea movsb mov fiaddl sub ret pop adc cli and jg in aad mov fstpt ret dec xchg and xor inc daa frstor dec les fs push repz xchg jg and (bad) ret iret ja sub imul mov jae cmp xchg dec jo cmp fcomip sub data16 dec das insl jns dec inc repnz jp mov out movsl mov sbb add into xor xor sarb dec cmp jg mov cmpsl inc xchg (bad) lret xchg pop jnp es iret test mov ljmp jno pop call mov stos movb pop mov sub mov lahf mov jg sub arpl xlat jg roll loopne inc mov sbb rorl jg dec ja je and loopne push sub mov cld cltd out inc sbb out jg jne test and test les lret xchg scas push push inc jg and fldl jb jg pop in test add ficomp push push pop dec pushf int (bad) mov dec and sub inc nop add aas in rol push cmp and sub incb cwtl (bad) out sbb cmp je rcl lret dec sbb cmp repnz adc xchg inc cmp jg dec imul inc pop cltd pop pop cmp sysret inc and adc js jg es xor imull mov addl scas dec jl,pn out fildll mov mov shll jne xchg sarl jo bound fsubr dec xor stos jg jmp lret fidivr push stos (bad) in stc arpl sarl pop jg xchg sti pop int test js loop lock dec jle cmp cmpsb (bad) adc jg lahf sbb cmp das and addr16 xchg xor mov mov add xchg mov ret sub dec jno pop jg outsl repz jg push push je and sub dec xchg bound xchg int3 xor adc xor stc jle (bad) mov aam fsubp lds and pop adc xlat cmpb xchg outsb and jno stc jns clc aas sbb adc jg loope aas rorl cli aas sahf dec xchg (bad) aam mov push idivb xchg xchg inc fdivp inc int3 stc sbb and push or daa xchg jg scas shrl lods xor jg orl jg sbb bound xchg mov jne stc pop loope jg push pop cld insb jo dec jg push inc enter out pop xor jecxz mov imul cmp xchg mov popf int3 lcall mov add loop jg lret fnstsw push jae cmpsl fidivrl cwtl jg rolb or or je lods sbb movsl test es std adc dec cmc ja jg inc mov jg mov cwtl cmc out dec popa bound test mov gs dec loop inc ds pusha sbb inc js scas in fsubl fldt les outsl movsl ss push ds mov stos pop pop or rclb repz jg clc xchg pop push imul loopne (bad) mov sti adc ret sbb in stos aas nop jg insb sub jg or mov push cmp and je dec mov sti adc loope inc xor mov jo ret mov xlat sub call xchg arpl aaa int3 add mov inc and es inc inc cmp add testl insl jne aas cmp sbb pop jg,pn test (bad) push jecxz jae pop ja pushf movsb dec test inc imul mov jg xorb jg and or fidiv sbbl xor xor addb jmp fstl xor hlt outsb in xchg js int3 mov jg mull loopne (bad) cmp inc dec lcall sub cmp mov pop lgs data16 cmp mov jp xor pop jg inc lock cmp jle push jg rclb das lcall mov sarb mov jg jmp or mov pop jo sub mov mov sub mov dec arpl cmp xor or mov aam imul cwtl jg dec (bad) cli repz nop jg imul jae cltd jg jge push sbb jecxz jo (bad) xor add fistpl pusha jno pop xchg int dec addr16 data16 cltd adcl mov mov arpl xchg jg push add inc lea aas cmpsb movups insl push aas je hlt cmc sbbl and enter inc jg or and jle hlt jg xchg inc ds and js ljmp pushf aad xor xchg jg mov and jbe and (bad) mov or pop ljmp pop dec mov jecxz cli adc sti stc inc in mov bound js test jae aam xlat inc mov mov lea fwait and jge and ficompl mov stc mov fdivrl (bad) addr16 adc or push std adc and pop add in ret mov repz pusha adcb xor xor dec data16 idivb pop and mov inc loope jg outsb dec aad and jg ds add orb xchg mov xchg jae lahf sbb ss dec pop jns rolb pusha repz fiaddl gs shlb jp jle sub cmpsb jns inc (bad) sbb mov call xor pop xchg dec mov leave loop rorl in dec jg test sub movsl lods rolb ret inc test das xchg aas arpl inc iret inc sbb mov mov xor bound (bad) movsl jno aas lahf inc lds xor dec pop fcomps dec or sbb jg inc inc jae push or push jmp ret je rcl xor xor (bad) ljmp and test jg pop sbb xor sbb insl jle mov stos pop pop roll push sub jae xor mov test jg mov push cmp mov pop (bad) cli jg xchg icebp iret sbb (bad) ja inc push or mov sbb int popf mov jmp icebp xlat int3 dec or repz xchg xchg fnstcw scas cs adc clc negl dec leave ret mov js inc pop daa fwait scas (bad) loope cmp ds push loopne sub mov jg jb scas lret in and jg add adc mov popl (bad) push or pop into ffreep jo mov std lret cmp dec dec mov xchg push into mov test mov addr16 push jg in fcmovb hlt in jg stos fistpl sbb jns jg and add cltd out out jge push inc stc mov dec movsl shrl nop jg in mov (bad) add cmc pop jbe mov repz aad jg lea sub jg lahf cmp mov imul out inc mov xlat in push add lods ljmp cs push loope jg pushf mov inc test mov mov mov adc or outsl insb jg push js es ret cli popw loop sub sub add test pusha and mov jno iret (bad) mov jbe jg cld (bad) loopne popf cltd adc inc push jb add outsl movsl dec jecxz push dec sub jg mov pushf jg,pn aaa or jmp push jg add sbb jg lock mov and loopne outsl ds in dec jg push leave stc les fwait jg hlt mov scas jle outsl add jp add iret cmpsb das les push cmp mov push rorb lahf mov rclb ds (bad) ja sub psllw jo loop clc test xor mov ss test movq lods sub (bad) pop pop pop inc (bad) bound test jg dec in scas shrb daa enter jg xchg lret iret jae jg je lcall call dec inc add jg and jnp pusha stos mov xor jg shrl int pop cld inc jg shrb cmp xor mov mov cmc dec mov (bad) repz insl in ret jnp sub icebp and scas or pop push jg adc ja xor xchg jg xor or push jg in popf push fldz notl cmp outsb mov mov pop lar cs mov in push jg loopne xchg or cmpsl cmpsb jg mov pop shrb shll sub popf mov fistpl lock push (bad) mov sub pop push lea mov lret scas fsubrl cltd or lcall or push pop scas jg stc sbb jg add pushf jg (bad) jne lods (bad) iret jb (bad) adc out and mov (bad) in scas (bad) sti xor outsl das jb ret dec loop or sub ss jge sbb dec mov gs adc sar xchg in xorl int fidivrl mov pop daa or xlat jg cld cmpsb xorl lods mov bound sbb rorb jcxz push cmp jg in xchg fdecstp js jne or xlat movsl scas jo and jg push mov mov int imul jg jecxz rcll insb cmp or cli or add push test (bad) dec aam shrl je jg cmpsb and ja js movnti cld or rcrb push xchg addr16 inc and pop jg adc pop mov roll lds scas push xchg aad dec sub dec out sarb subb xchg jle add xchg sbb lahf mov call inc jg out dec clc or (bad) fwait (bad) insl lret pop lahf jg adc push jg in xchg cwtl push leave mov mov ja in ret aaa jg adc mov sub sub (bad) rolb inc cmp inc add mull sub sub dec outsl xorb cli mov mov dec bound mov test mov adc pop repz sarl xchg nop repnz mov cwtl xor xor xchg lahf loop push sarb in sarl lods cmp sarb xchg push pop aad cmp mov daa (bad) sbb dec pop jb mov in (bad) jg inc push (bad) push add rcrl mull mov je (bad) out xchg fidivr outsl cmp adc xchg out inc lock push mov adc mov iret sub cmpb (bad) push gs xchg sub sub pop call js cmp ds xchg pop or mov mov mov (bad) sub jge cmp subb out jo inc cmp roll cmc dec in jno jp jg or stos (bad) negl (bad) lret movb xor cmpsl (bad) jg jge shl jnp sti push mov (bad) sahf pusha aas jbe adc cmc jg add pop push jg and mov push jg inc adc scas int3 or (bad) mov mov cmp cmp jae test out sbb push cmp jnp lret mov hlt in inc ljmp testl test xor hlt push dec movsl ss ret jmp popf and test add sbb pop jg in lods xchg shrl mov lcall mov rcl and sbb push add cmc pop dec dec int3 cmp lods push test in jl dec ss mov jp adc cltd and test cmc aaa sti jno stc mov aas mov inc rcll mov sub adc test jg rcr dec xchg mov or aas mov mov jg xor xchg ret jg (bad) mov xor add jg mov cmp neg pusha dec adc mov aam out dec ret scas xor movsl jg pop rcr frstor enter cwtl jno xchg arpl out js and jg jbe jo,pt aas xlat jbe and push aaa add and out imul xlat jg ror ret lods data16 lea je jne mov fidivr push std jg movsl (bad) xlat mov pop aaa mov lcall inc push jg fwait mov xor and add inc jg les scas xlat int jg sub std adc repz addr16 and push jge xchg jae jg loopne push push mov sub in add test outsb pop jp imul add movsbl push push je mov jg fwait push insb mov cwtl xchg pushf ficoml cmc insb pop adc cmp and jg imul dec loop lahf jg xchg dec mov xchg addr16 lret pop lret mov pop out cmp stos mov pusha gs jg ret cmc mov imul sahf pusha ja rcl jg fstpt (bad) movsl pop incl jg ja loope popa cmp jg sub jmp mov inc jg int3 mov push pop popa jp cmp pushf or adc ret aam nop jecxz ljmp or stos dec inc aas movsb mov push cmp test scas pop sbb mov inc add ja aas (bad) mov adc (bad) jg xor inc push mov cmc jg mov (bad) imull mov pop movsb fisttpl sti mov mov push sbb fst xlat jecxz lcall jo pop sub jns (bad) cli jg mov mov mov jg mov push enter bound add sbb or idivb out loope lcall jns fisubrl adc scas jg stos in test mov mov or pop push mov jae mov jo jle jg stos das in retw pop jg xchg ljmp (bad) or dec popa ja js jg outsb mov mov scas cld mov dec or das and push jb jg (bad) outsl cs mov notl sbb in inc jg fcomip dec push or lret ret lods xor inc inc out inc gs or and jg,pn mov sbb dec mov pop dec sbb jg ljmp push out fildll pop mov cmc inc jmp xchg push aaa push pushf dec and jge stos pop adc jo nop ja je incb jmp add and mov js lods or mov dec paddd mov int3 (bad) mov je inc dec loope aas movsb xchg push inc (bad) jmp arpl leave lahf daa jg jo push (bad) cmpsb jmp inc and sbb push mov test xchg pop jg jecxz and pop sbb xchg daa into mov pushf pop xchg cwtl imul jg inc adc jg jle shr mov sbb sub pop mov stos pop jg ss out xor ret in or mov lcall iret lds int3 or ficomp fadd mov mov jb xor push aam mov out mov and sub jb dec adc loopne mov and or cld lret (bad) jg jp insl pop loopne xchg jg aad (bad) scas loop mov add pop jg (bad) mov lahf jg in lods popa mov adc jne fildll movsl mov inc fimul in mov push andb imul cld dec mov test out jg inc out xor mov mov cmp xchg pop jg stos xor (bad) loopne bound stos cwtl mov lock addr16 fdivl gs adc dec int3 nop lahf (bad) dec mov mov mov mov int3 jg outsl push or dec xor (bad) aaa pop push push dec inc sub inc std push mov sarb (bad) fdivl mov pop sti mov or jp jmp xor lret cmp sub cli fdivrs pop jbe adc loop cmp jno jg fistpl mov addr16 push jg push xor xchg imul jle mov les out fistp or scas dec jg xchg popa adc loop sub cs pop clts outsl xor mov push sti fldt jnp xchg (bad) out js std sbbb pop sbb lods mull push jno fwait xchg mov loop sub je stc testl cmp jp sar pop ss xor push jg inc call hlt jg jbe imul (bad) pop xor shrl or jg mov insl shlb mov mov mov les jg cmc leavew fldt adc push pop jg ret jae cmpsb jecxz xchg jg out or add jg push int3 jb insb (bad) sbb cmp jae lret in mov insl repnz jecxz mov mov push push jg movsl fcompl mov adc dec call enter ljmp cmp sbb mov in lods (bad) cli pop fsubs xor mov xchg imul rcrb mov jp loopne movq push inc scas repz adc cmp lock jb jno pop fcomps popf and leave (bad) sub jns mov addr16 fmuls cmc pop cmpl mov leave cs js sti push xchg push xor mov jo jg mov cmpl lods inc pop jg inc stos rcrl aas js mov loope mov mov das mov mov imul scas jg popa pop sar cmp data16 pop (bad) outsl or lock mov sarl fprem (bad) jno add scas sub fstpt cmp mov xchg and mov add int3 inc dec loope xchg jg aaa xor cmp aas lds cld dec xchg jp pop cmc scas add sbb in sub roll fcompp dec lods inc inc mov inc adc ds push movsb out in sbb lock fistpl ja mov pop add adc pop and rolb cmp je outsl into inc jp mov jg add cmpsl insl mov icebp xor inc push jg fadds cmp push int3 mov dec or push cmpsl movsl popa jg jp sbb dec call icebp insb stos adc inc jg stos add jle inc inc xlat jae jg out movsl or add push lret call jg das mov jo push jg or loopne call adc outsl and sbb cwtl jg adc push pushf cmpsb hlt xchg jg sbb jb arpl ja insb pop imulb pop aas inc mov lcall pop inc nop dec mov hlt pop mov movsl sub repnz xchg in orb mov jno into or inc dec dec xchg mov xlat inc test adc push in xchg mov jecxz and pop loope or dec mov stos jnp lds pushf loope mov pop lret (bad) out insb mov and out addb push int sub out mov jns aad or jg or pop enter jg push imul pmulhw add inc jg bound push rcll es test test and xchg jg jb fldt xor and inc cmp jg dec fnop sti jp cmp addl mov jg (bad) cld or cwtl mov mov sub test movsb scas add cmp jl xor pop test jg and and pusha (bad) jg fwait push inc out nop leave inc loope jg mov mov pop movsl (bad) lret push pop jno (bad) dec cmp mov dec jg dec mov movsb mov push fld fimull push popa pushf inc fmulp mov (bad) jmp lock lock sub pushf add insb inc fwait and psubd outsl jg movsl arpl sti sub aas inc sbb jp cmpb inc fwait scas cmp insb pop cmp xor mov mov jg mov pop jp in aas loopne adc and daa inc push ret jg jnp in cmp sbb (bad) mov mov inc xchg jg faddl sbb adc sti fldl xlat adc jg xchg outsl xor jg pop sub add pop or clc add xchg inc outsb int (bad) idivl arpl mov ret mov cmp jg fcom popa and or fbstp cli aam jg in imull or pop dec ret ficompl mov flds fstpl jg pop repz divb or pop scas addr16 insb mov sub je loop mov (bad) pop dec mov inc pop pop xor aaa push imull jmp push cmc inc sbb pop inc push testb and inc js scas mov mov jp xor (bad) jge or lcall dec aas inc inc jbe cmp push and mov insl sub xchg ret (bad) dec jg (bad) rolb mov mov push inc dec adc pop jg lcall jg or test fmul sub ljmp ja cmc xor add sbb push mov jne nop xor cwtl jg sbb dec rcl xchg jg outsb imul test mov fucomi pop and cmpsb stc and sbb das add int cmp (bad) mov add jg out into shr pop jg pusha jp mov cmp dec je push jg jmp gs adc sbb orl jg cmpsb aaa xchg push sti sbb or lds loopne ficoml lods fs jg pop sub (bad) mov dec jg jl jmp xchg mov mov jg icebp dec (bad) jnp sbb jg das xchg sub enter fcoml iret popa outsb xor mov out push pop cmp sti aad inc imul pop xchg iret jg ret sbb js jg jnp mov jg inc jae jbe lahf adc mov arpl pop xchg sbb cmp push addr16 inc das or pop inc sub inc pop out jg mov lahf in mov (bad) in inc inc mov jg and ds in cmp hlt test jge jg sub aas dec ds test lock dec jl shlb aam xor add mov negl mov int3 jg jb and je daa incb sbb in in jg (bad) out leave out jnp xor xor fidiv mov outsl cmpsl das cmpsb push aam cli and (bad) sbb cmpsl push jg cwtl jp xchg aaa scas fs jne iret xor mov adc xchg push xchg mov mov rol add xor pop push jg loope push mov and mov testl or (bad) lret jg push or sbb ret push sub pop pop jmp sarl (bad) cld lds adcl es pop test or xor xchg dec repnz (bad) sub mov mov inc imul xor cmc stos outsl inc mov cmp mov outsl xlat cvtpi2ps adc push or jl xchg xchg jg jo inc xor dec jg pop (bad) es mov daa xchg push fs mov ret addr16 sub arpl popf fnstcw pop add lods int or mov les pop mov dec and mov mov lods in ss inc jg sub add fstpt xchg std xor into jg les mov inc daa add jg push sbb cltd cmpsb js xlat movsb dec xorl sbb jg mull jb jg jmp cmp jg test out fs pop insl jo inc popf scas dec test xchg fdivrl jg jge dec mov lcall aas out outsl xchg test decb addr16 xlat or xor mov dec xchg addr16 dec daa mov dec jns imul adc inc push imul and test jg jns call adc cmpl outsl or and lods jg jecxz xchg pminub jg pop sub and stc arpl mov cmp stos jns jg sbb cmp aas jg aaa xchg xlat ljmp push sub sbb jmp and push mov bound call mov or sbb push sub or inc inc loop ret std mov loopne bound mov pop pop xor sarl dec imul jg pop lods dec or cmp push pop jle cwtl arpl jg fadd cmc pop iret test jg pusha mov sub fidiv dec gs cmpsl mov push push imull test jge mov cmpb pop jnp (bad) jg stc inc mov nop iret movsb jg lea loop in jle repz scas int mov jo xchg xchg (bad) sub int3 lret xlat push xchg dec imul inc lds cli sbb arpl cmpsb cmp mov call insl jg inc lock inc mov mov mov aas aad and into mov jnp repnz pusha (bad) sti push addr16 pop andb jae adc sbb cmp mov iret lods mov rclb mov es inc mov imul xor int jbe push dec sbb inc test dec xor mov (bad) (bad) pop cmp clc jg jecxz jnp adc sub and (bad) mov mov pop pop inc stos jno xor fisttpl dec mov push inc int3 mov movsl push push ret aas ljmp inc stos inc xor sbb pop repz or sbb jg pop out cmp aad mov push xor aas (bad) or gs inc (bad) out insb xchg addr16 pushf push or xor daa rorb (bad) test jg jo fidiv mov mov ret sti pop aas cmpsl nop ja add mov int jg mov aas iret jg push stc stos adc scas jg xor mov repnz fwait mov aas push call lods dec push jnp mov cmc jg pop addr16 lcall aas loopne lods xchg push int repz mov fwait rorb xchg dec pop (bad) jg rcrl cmp outsl jg lods adc mov decb arpl mov jmp call mov xchg mov aas pop push pop mov jg mov push cmp inc (bad) repnz loope aam jg icebp sbb sti movdqa mov aad inc push dec sbb mov mov sub mov push scas xor lcall pop xchg inc jp lds lea ret adc mov inc movb push jg,pn lahf gs mov pop sbb cmp mov push not cmp mov xchg mov xorl (bad) dec push push mov inc shll sti cmpsl adc addl adc push icebp scas add cmp mov cmpb and cmp push sub pushf testl jg test lret mov into dec adc inc arpl std ds xlat mov push cmp lods sbb push inc cmp outsb aam xor mov push inc pop adc test out push xor inc jg dec jecxz mov pusha cli rcrb jg sti xchg lea aas out sub pusha and lret push pop das or mov (bad) mov xchg arpl imul stos sahf ja mov sbb test out or outsl fstpl dec pusha test into jg push aad ret push mov sti inc ja insb outsl test fmul (bad) jg lods adc jg mov mov mov ja or insb cli aas push insl cmp mov mov inc push ficom jg mov cmp and inc mov xor cltd adc arpl fimull pushf imul jg xor fwait daa insb gs sbb sar push mov cmp mov cmp outsl xor mov jge xlat (bad) loope cmp mov sbb pop in inc loopne sbb pop jg cltd and lret and cmp fdivr mov test inc jg or std pop rsqrtps fimul sbb jg mov adc jl jg inc (bad) or fildl loop inc mov aas inc stc pop fimul idivl inc jne mov and lods and enter sbb add cmp jle idivl cwtl inc add xorl and jle jne xchg fcompl dec cmc mov in jnp push inc add add loop imul fs xchg jb lret mov ljmp jg cmp js mov sub xchg xchg (bad) scas pop mov mov lods mov mov jae dec xor std jle jno push insb pop movsb mov bound sub test mov mov sub pop mov adc inc mov and cld ja js repnz xor (bad) cli fidivrl sti mov mov mov and mov xchg push push inc (bad) mov jns ret cmp jo arpl xchg (bad) (bad) push pushf pop mov sbb jne aad scas test push cmp nop inc es test pop jne into inc fimull jg scas stos xor icebp ss xchg push cmc orb mov pop xchg shr popf jae cmp push jg or jp fdivl jg loope fsts dec and out mov lahf push aad lods push dec adc dec in nop out sub (bad) mov xchg fidivrl jg (bad) jl scas jnp push inc clc mov sub popl andl cmpsb hlt aas iret out adc jecxz mov dec jg pop cmp add add push inc loop popa or jmp enter test in imull mov sbb sub rclb inc mov xor outsb mov inc sti lahf pop mov fwait popa and insl fcmove js xchg setle inc in jg ss into lahf pop dec call adc or cmp test xchg jg push lahf aam pop aaa add cld imul gs mov daa sub out aas push jg fiaddl mov inc repnz mov insl mov hlt dec call inc mov sti (bad) fs jg (bad) mov add loope imul pop das mov mov outsl rolb fwait ds mov icebp int inc xchg xor pop cli pop mov stc jae sahf push scas and or inc and adc inc cmc dec mov xchg jg ret (bad) aad int fwait js push jnp xchg add mov jg rorb fildl hlt sbb pop and cltd (bad) outsl dec (bad) je pop mov cmpb mov sub jg push movsl and loop pop das lods jg enter lahf cwtl dec je jecxz mov icebp xchg aas jge mov idivb rclb or cwtl inc ss test mov mov loop add pop add js insb and mov cmp repz xchg jmp jno jmp call loope roll xchg dec popf mov add scas aad (bad) xchg push je cwtl jmp outsb jb dec jo xchg mov fmul cli or xchg jg cwtl lds and sbb or jg rorb and mov jg addl xor inc (bad) jg jno dec dec icebp jae jg cmpsl stos push inc mov dec jbe or lret aam pop bound ds jecxz jg das pop add lods mov mov lahf ljmp sub push fidiv sub enter add imul outsb mov mov lock mov mov scas push mov jg jbe loopne mov enter or ret pop insl test stc sbb jg sub mov cltd jo arpl movq imul aas dec (bad) (bad) xchg inc pop xor outsl loope sub jmp cld je (bad) push cmp nop push adc jg dec jp push clc and xlat rcrb test (bad) (bad) or call (bad) jae and pop (bad) insb cltd xor imul mov imul aaa cmp aad mov sbb cmc ret lods cmp insl jmp or das push dec mov cmp pop xchg pop loope mov mov (bad) das imul push inc jg mov fistpl mov sar lret mov and inc lock ret adc outsb adc adc icebp imul cmc mov outsl adc or packuswb jg cwtl sti fcoms or xchg scas fstpl aas or inc xor loopne jg js xorb xlat dec jp cmp mov jg fisttpl mov inc xorb out pop inc push cmpsb mov pop xor mov repz pop add mov outsl loope mov ds push imul cli mov dec repz cld dec bound sbb out or aas hlt gs arpl imul push je aad cmp adc cmp into cmpb mov jbe pop mov (bad) cltd shl inc jg xor adc ja and dec outsb mov cmpsb jg pop mov pop inc cmc idiv cmp jge dec sbb sti xor and cmpb pop pop test fstpt sub cs jg jo aad lods lret and notl jbe fnsetpm(287 jg push mov dec pop sti pop (bad) adc dec adcl jle lret pusha clc jg push bound adc cmpsb fsubrp aad nop (bad) test adc push outsl mov (bad) jg xchg or jns push jg inc jo loopne (bad) sti jg jne xor sahf ja mov mov inc jbe dec mov jne push sub bound mov cmp jg xor mull add dec pop lret (bad) or jns and xor sti mov adc dec push inc (bad) out xchg cmp call jg lds xor dec jg (bad) pop jnp xlat jbe sti sahf adc pop hlt rorl xor mov mov ret or jle inc (bad) loop jae pop push dec out aas sbb mov test addr16 nop xlat jbe and push imul mov das (bad) or pop xchg jecxz inc jg aaa out testl inc sbb out int push std popf in cwtl test jno jg inc bound add adc or mov inc (bad) ss dec shrb sbb mov sub lods sbb and jg ror and pop sbb xor scas jg outsl je lret mov ljmp adc and (bad) ljmp ret hlt push (bad) and jg cmc loope inc sub int es and mov out aad xchg fbld fnstsw loop xchg push arpl jl inc (bad) xlat lret jg leave mov dec mov call mov scas iret or fsubrl jg stos into int repnz jg shrb sarb (bad) (bad) cld mov inc add in add inc addr16 mov xor xor dec aas jo movsb out (bad) dec outsl int3 cli mov jg sub jno sub jg dec xor jg ja jmp jg adc mov sbb pushf cld adc jg mov pop mov jg lods add mov (bad) jb sbb mov xchg pop rcrb iret dec mov jg pop mov xor outsl pusha add insl mov (bad) lods xchg and mov mov push mov cs ret mull cwtl ds outsb mov jg xor addl xchg mov out jbe frstor mov jg scas or out sti lods adc bound mov push push push out pop jl xchg fnsave sahf fidiv vmovdqa xor imul imulb mov dec (bad) jg test xchg outsb xchg mov jg mulps jo,pt jg in dec push lahf leave inc bnd ss add and and sti xor mov xchg sub mov mov popa and repz nop lds mov divl sbb mov jnp fwait dec popf jmp adc ds mov gs or arpl push mov lods fist push mov sub lock mov inc dec push pop sbb sbb mov ljmp mov xor xor adc enter hlt cli dec out aaa jg rorb loop mov mov (bad) jg test lock push adc cmp push jg stos lret xchg xchg add jp jb nop loope jg cmp lret shrl jg and push cli cmp push push push add pop push movsl (bad) enter std and jg (bad) cwtl (bad) (bad) aas cmp cltd xor test lods inc sbb insl je loop lods (bad) sub repz scas and inc (bad) inc push mov aaa sub mov xchg (bad) inc push jg mov push jns push dec stos or test jl mov add lahf ja mov push stos xchg jg mov mov pop (bad) cmpsb jae xor inc mov lock jne mov mov push lods addr16 imul sub stos jle ja out dec xor mov mov jg mov ret gs mov xchg lahf adc cmc out icebp jg inc adcb jg mov pop imul std out mov sub pop cli xchg xor pop push data16 int3 orb adc mov push lahf push fidiv dec jg gs dec jg hlt repnz pop adc mov xor pop int inc decl inc lea xor cld fildl ds iret cmp xchg mov fs pop sbb popf jge fsubr pusha and adc jg push rcrb sub cmpb jbe fistl cmc imul adc loop jg dec sbb scas mov cli push adc cld cmp adc xchg sbb sbb mov lret inc aad xchg pop cltd sbb aaa lock push jg xchg adcl in jg sub sbb lahf popf ret outsb adc jns rorl jg mov inc fildl pop jmp cmp jae stc pop into cmp arpl jle sbb dec xchg sbb mov cld sbbb into cmc fimul arpl mov lods in bound jg adc jae scas jg int jecxz dec pushw scas ds adc add jg dec aam fnstenv (bad) jg mov mov pop repnz mov xor pop cmp loopne inc (bad) dec unpckhps jg ljmp fcomip mov jo stos xchg dec call or dec inc outsb jg push adc aaa cmc push and ret jb sbb xchg fnstsw mov jbe dec hlt pushf push das aam mov insb imul xchg xchg jne ret xor int3 bound mov outsb cmpsl (bad) dec jge sub and xor dec cmp mov push aas inc aad inc jo xchg ja xchg jg xlat or lods loopne cli out icebp cmpl pop mov in push call jg mov cmpsl add lods pop xchg xchg xor andb add xchg fs add xorl les cmp dec jg dec and or cmp jg out out aas aaa xor out add out jg xchg imul repnz inc xchg mov push pop push (bad) int outsl push xor cmp sub jg jp or jg loop adc xor and dec jge sbb popa sar iret mov ljmpw pop push shll fcom pushf pop sbb fs frstor das jno and (bad) mov sbb xor cli jg push dec inc inc or pop jg push stos cmp daa and inc ficompl stos sbb jae loopne jg stc das add jg jb or mov cmp sti (bad) std mov sarb (bad) dec movd cmp inc sti stos push jno jg mov (bad) xchg jbe xchg lret jg or nop gs out cmp and pop ds mov mov int3 outsl ljmp ja test xor jg cli stos jle add lock mov or sub mov pop mov fwait loop push int xchg pusha jg pop (bad) imul inc dec or mov imul jg xchg xor movsl inc pop sti add icebp cli xchg outsl xchg jne rcr rcr and dec push inc xor es bound (bad) pop push jl lock sbb inc or or adc pop popf bnd negl inc testb cmp xchg rolb or jb jg mov mov decl sbb movsl xchg jg mov jle clc pusha or dec adc inc into hlt jg fwait sbb dec sbb sbb and aaa cwtl jns jmp mov sbb mov cmp sub mov aad push mov and add mov je scas add ret inc xchg addr16 test pushf pusha (bad) sub iret mov in pop pop xchg xor sub subl jb popf push cs jg hlt in mov enter (bad) jle xchg jg inc cwtl loop fidivr fsts inc xor xchg (bad) pop pop push test sub and lods jbe xchg push fldl js push call loope fstpt sub repz negb mov push jg sub xor rcrl out es loope inc inc bound jg mov xlat stc loopne (bad) jg pop dec in fcmovbe lret jle xor push je stos aas sub ror shrb jg bound insb adc jg cmpsb xchg (bad) lret jg pop xchg xor xor or sbb xchg sub xor jg aas enter push sarb int stos cld or add push mov inc (bad) ss jg sti hlt or lock mov loop shrl mov (bad) roll clc sub sbb daa (bad) push mov fnstcw jg popa xchg rep mov mov jg sarl jg (bad) mov add lret mov mov es pop jge jno mov arpl pop movsl frstor push dec adc add add dec or jle (bad) or sub cmpsb aaa sbb mov sbb add xchg lret aas xor data16 add jb pushf sbb enter mov or fstpt adc xchg pop xor jno pop sbb add out sarb jg ret (bad) cltd pop bound clc mov inc cwtl and dec xchg mov in jbe push mov sbb xorl test je jno sbb jo aaa lods sahf jg,pt mov xchg notb mov loopne mov sbb imul outsb xor pop pop pop cli xor mov outsl jg mov cwtl imul xchg mov je pop mov imul lret cmp jg xchg cwtl (bad) jno out (bad) aam outsb mov jg cs inc imul xchg jae jbe inc popf (bad) ja dec add inc int jg jp mov mov push cwtl jo push jne jg pop mov cmp jg jp lock icebp jae pop mov popa or xor adc mov xchg add (bad) scas movsb cmc or (bad) mov fdivrl push jge cmp aas xchg shlb and jns aad (bad) cwtl test push jbe outsl xor jg sub pusha out pop push inc adc mov outsb std pop mov xor xchg jmp data16 jg test sub orl mov mov jo pop xor pop les mov out jno jb pop fildll or int3 popa clc push inc jbe bnd lock pop dec out mov pop in icebp add fadds jg cli sub subb mov inc pop hlt jg (bad) or daa (bad) lea jp in push std jmp leave mov cmpsl dec iret pop aam push mov pop mov jg test pop stos jg sub div test aas ljmp dec cmpsl jo dec fidivl jg xlat test jl mov cmp xor or push loope fisttpl je lock gs and icebp mov mov mov mov jg ljmp jg sbb das negb jg fildl (bad) xchg mov inc and or sti jecxz xchg cmp and out inc shl popf pop pushf test mov pusha sahf mov cmpsl movsl jg jns add jg nop insb loop lds jbe mov es cld cmpsb lods mov mov pop mov sahf jge cmp iret daa test sub mov dec pop mov pop ffree jp cmp mov jg push js jg dec sbb pusha jp cmp dec sub mov xchg loop add jns mov pop out jg (bad) xor jbe and jne (bad) cli popf lcall mov push dec repz pop dec outsb mov mov mov dec and inc mov push add (bad) mov mov out (bad) jno cmp push dec sbbl xor add arpl xor imul inc sbb fimul sahf push pusha stos sub jg dec int push sub ja rcr (bad) and push lcall xchg es inc lods js mov lret rcrb push mov movsb sub xchg icebp mov subb inc js cltd ljmp and jg mov inc xor jg adc mov lea push jg xchg jp out (bad) xor out pop pop inc mov mov mov mov outsl dec xchg mov jecxz pop sbb push pop lds sub push inc push push push fdivrs dec mov push jg pop icebp stos (bad) movsl fs push and cwtl adc mov cld cmpl dec jne sub stos add and aaa lds fwait push int3 cli or out xchg dec (bad) shll psubsw xor push (bad) iret push jb mov and aam pop mov sbb mov ljmp test push imul jle dec push xor cld or scas clc push adc sbb dec and mov jg mov (bad) pop xchg (bad) or jle movsb push pop or idivl call cltd fwait out outsl daa xlat jo jg (bad) lret mov cmp jg loope fmulp gs jg in scas pop and (bad) mov enter test or outsb mov inc cmpsb lock xor inc jg pop dec sti shrl fstpt xchg mov les mov dec adc xor inc mov call push daa jle sub iret pop xchg (bad) jae fsub mov mov dec adc aam jg sbb xchg mov imul mov jg dec icebp cmp jns enter cli fcompl outsl mov movsl jg add xchg cmp (bad) aam das inc es jg lcall les aam pop jne mov jg pushf cs aas orl addr16 lahf jg es dec jne lcall pop into aad sub xor in xchg mov jg and mov adc lods push aas jg hlt fcomp inc adc (bad) dec stc (bad) arpl ds sub and mov dec out in push xor mov sub into push lods notl jle int3 test pop push test jo jno mov inc xchg rcr into mov jl sbb add les je test xor sbb dec mov mov mov xchg dec movsb and add loopne inc imul xchg push aas es jo lret inc sub jne xchg in pop push dec dec test loope xchg cs imul jae mov arpl out mov scas movlps popf push xchg sub nop test mov cmp fidivr insl add jl sub xlat (bad) dec and testl fistpl sub sub sbb mov in jg aam pop pusha les jg,pt fiaddl jge xor cmpsb aas inc out xor sbb push cwtl je jae and push jg push call add nop xchg cmp pop cmp cltd mov sub sub cmp (bad) jo xor stos aaa daa dec lea cs subl dec int3 mov inc add (bad) jg ficomp sti xchg mov clc fs fstps xor lods mov repz or jecxz test sub jae repz pop inc enter es jb daa sbb jg mov sub stos sbb push xor add cmp xchg jno ja jg mov mov sahf or imul jge pop push (bad) mov addl mov jg movsl cld sbb mov das adc xchg jg and add in lock jg push mov mov cli repnz andb jns cmpsb mov adc lock adc cmc es cmp aaa mov out scas les pop jecxz aas push loope inc (bad) sub inc popf aad movsl orl cld sbbb cmpl and or mov jg dec es pop xor mov mov inc or (bad) int (bad) call lahf mov adc daa incb cmc scas repnz dec xor jl popa cmovge xor jle mov xchg stos dec xchg fwait jnp xor lock inc sbb mov outsl pushl mov mov sub pop inc int3 or (bad) and out xchg jns or je push rcrb cli xor mov xchg mov xor (bad) mov mov mov push mov jge jmp pop daa (bad) jl sub jge dec pop (bad) sbb jg (bad) (bad) in (bad) sti push pop inc dec jg pop jp bound idivb std leave enter jo mov sbb fdivs mov sahf lock inc xchg pop inc lods (bad) jne imul std xchg ljmp js and outsl mov shll jg insl mov shrl push out imul addr16 sar cli and jg cs push nop xchg fdivrl mov jg cmc lcall inc adc pop lahf (bad) mov jg jne mov jae addb jp inc jo dec das lahf adc inc fcmovb pop xchg es mov xor stc xorl inc and jg (bad) mov aam sbb popa cmp dec mov ja fstps lret push das lods mov jg or stos mov in xor dec aad shl data16 and gs adc mov lahf outsl mov push xchg or mov hlt sarl daa mov pop cld xchg cmc and mov mov test sbb inc fistpll jg xor aas movsl pop (bad) push adc int in arpl sbb pop xchg pop scas fidivr addr16 jg inc adc js ljmp jecxz cmp jg ret addr16 aas cmp sbb dec cmp jmp jns es idivb (bad) decb xlat inc push pop outsl dec jno jg dec pop push mov adc aad js and sbb cmpsb xchg sahf jg sbb std pop outsb sbb mov bound aas mov loop cmp test cmpsb or adcl (bad) mov std xchg add xlat pushf mov push (bad) pop dec in stos jg xor nop jle adc les mov jg hlt sub dec repz (bad) mov ret popa pop (bad) loopne in pop inc out push jg (bad) mov mov jg and imul xor xchg repnz sti or mov mov mov inc sbb pop jb or jg in lcall pop xor (bad) xchg jg bound popf out pop jb sub imul cltd pop lods cmp ss hlt imul or mov flds inc mov roll in push inc jg test aas cmp jg iret sbb js dec sbbl xor or pop mov popf sbb insb ds mov in jns inc sub mov fiadd jno std xchg js mov (bad) loop jnp out and pop in pop scas push lahf jne (bad) dec (bad) lret (bad) imul stc into icebp inc sti notl lcall (bad) adc cmp aam mov push cwtl sub jne scas in les rcl pop pop jg stos fucom pusha ja bnd push dec sub sub test rclb mov xchg and cmpsl jl in jecxz inc adc stos jg iret pop sbb mov andl xlat loopne cmc imul add mov (bad) enter pop mov add adc inc arpl cld ss mov mov dec push in fistpll mov sbb xchg dec mov jg and iret xchg jmp repz test imul or enter xchg jg imul jl loope loopne les mov pop adc jg jl,pn in push call outsl jne popa sarl dec pop jmp push sbb es bound sti cmp mov inc mov les xchg movsl cmp jg jle pop mov repz add push pop mov and loopne fldl mov jg repnz mov imul jne (bad) sbb pop pop lahf jg cmp push (bad) nop adc jle add sbb push mov fistpll fidivr mov dec adc imul sbb lea mov in leave pusha in insl mov xchg lea xlat sbb fistpl add dec scas shlb jg cwtl inc and adc ret test leave mov xchg cmp pop cltd sti dec push ss push sbb popf mov pop jmp test sarl rcpps into stos mov sub xor ja test or (bad) aaa jg ja push stc mov inc (bad) xlat and jae popf fwait sub (bad) lock jg mov fadds lcall rolb mov imulb cs jg insl roll jg sub negb or push mov hlt jl adc fisttpl cmc xor adc jg out xchg daa mov dec hlt insb lahf and imulb and fs sahf std inc jo sarl in adc inc imul jl lahf jg xor sar pop pop lret andb mov pop fdiv inc jecxz or arpl xchg mov pop loope jg inc sbb jg daa mov push xchg in jg xor scas inc sti test aam push in imul mov add push in add ret xor cmpsl jae sub ljmp jge xchg dec jg sbb fisub stos call xchg or mov add jo push add inc jle or lea jno pop std jg popf mov jg mov test push aam aad push mull cmp addr16 dec cmp jg sbb fcompl xor flds pushf jg and push sbb out jg pop lret sub and les xchg and sbb push mov cmpl or xchg pop sub ljmp mov jg adc jle jg test inc pop jg pop mov aas movsl lcall addl push popaw es jg ret or add pop xchg sahf mov mov xchg pop mov clc lods dec nop add mov jg cwtl pop push xchg (bad) aad cmp xchg and mov mov repnz lods push movl push (bad) neg rclb aad adc pop aas inc push mov outsb int3 jg jbe adc jg scas add jg sahf pop ss outsl cmp mov jg fadd out jg dec lret mov mov sub push mov fisttpll sti dec mov xor or decb dec mov jg enter push mov jg icebp and pusha fstps mov aas pop dec js addr16 push jg rcrb repz cwtl aas sub cmp dec outsb pusha mov (bad) scas jg sbb dec inc addr16 mov jmp cmpsb or or fcompl lret jg stos mov sahf jg and add pop jb sub test mov push cs pop cmpsl dec jnp aas shrb ja outsl jg adc jmp push es ds push dec cmp cmp aam or cmp cli or jg popf xor dec cmpsl fcompl and outsb ljmp mov cmp mov sbb aas push cwtl jae insl (bad) push dec jmp lds or mov inc into jno stos ret jbe outsl insb mov fnstcw fisubl mov adc fdivrl sbb mov and and divb pop jg push xchg idiv dec lods scas push adc iret loope adc push jg mov repnz (bad) std jg lcall jg and arpl jb inc jg push or xchg and in dec sub inc xchg imul push in and xchg cmp std out pop dec (bad) jmp pop inc cltd pop pop push and loopne jg jbe sbb cmp cmp jb lea inc bound jg push (bad) xor sbb dec xchg stc arpl aam ret mov cmpb push imull lahf jg inc inc jb,pn xchg aam cmpsb aas lret push cmc pop jbe (bad) push mov and notb pop outsl int sbb popa addr16 inc pop jg and ret mov fucomip repnz push push pop outsb pop jp dec mov push shl push fdivrs lret and cmp in aas clc sub jge inc or jg add inc inc jg rclb or add and sub sbb test outsb mov mov jg (bad) cmp push movsb cmp adc sbb imull pop movlpd dec inc sub add xor xchg xchg pusha jg testl or mov addb rol xchg test push jb jg cmpsl fcomps add jg push imul out jge cltd pop in sbb and push jne mov xchg pop jnp outsl pop mov jg or das jl lock pop mov imul loope ret pop xor int3 in cwtl mov bound pandn iret dec cld pop mov inc mov jg rcr adc stc mov jle dec cmpsl stos movsb or jg lcall mov mov mov imul xchg ss jp and out or cli xchg push int icebp mov mull xor dec (bad) or jg jle add cltd sub jg inc js repz sti out jg fs (bad) mov xlat jg cmc fisubr and (bad) imul lahf inc (bad) (bad) push jg pop popa xchg dec fsubrp test xchg fsubs dec nop adc xchg aas aas jo push es mov push repnz mov or xchg sub mov or lods pop jg mov adc jb (bad) sti test stos mov sub xchg jg arpl out loop cmp bound nop fs fwait push mov arpl push scas js mov pop inc in test clc cmp test cmp jno sbb jg adc ss jg mov xchg movsb jg or test bound rcll pop in je (bad) adc nop imul dec push push jg push cld or jg int push mov jno jne and push or test or icebp xchg cmpsl jl lret nop sbbl jne in stos adc jge jae jg or out lret jg mov pop aam data16 sbb pop mov (bad) lret js insb fwait xor in aam lahf xchg dec fisubr aas icebp into xor call loop mov jg les jg mov insb ret jg int shrl (bad) cmpsl clc dec mov sti addr16 dec pusha addr16 jg aam jbe mov adc push push add dec test out cli push xor or les andl ret push sub cmp js lret and adc dec inc fidivr inc or mov (bad) fnstsw dec ljmp mov xchg push cld dec fs int3 pop js cmpsl or jb pop mov jg out mov lahf add pop sub mov ret les pop adc sti repnz sub bnd outsl js fwait sub cmc pop pop ret inc lock sbb out and adc lret jg mov idivl cmp shrd push cmp mov mov mov jg lahf sbb mov push xor aas jns scas mov adc icebp mov fwait (bad) cli pop das jg leave sub and or scas enter mov jno gs pop (bad) loopne pop fwait test mov je shr iret jg dec outsb fs mov push mov xor push dec jg cwtl outsl mov dec sarl push aam add js inc (bad) icebp imul aaa sarb scas roll jg push or bound pop sub mov push sub int lods scas jmp pop inc xchg (bad) aas jns ja push mov and loop jg sbb jmp in mov das pushf mov xchg pop adcb loope sub test js lcall fsubp jg xchg loop ret add push ret or inc or xor fidivl lret jg sbb mov repnz in sbb mov cmp popf movsb test jbe stc jg imul imul jg (bad) (bad) xor lock jmp xchg dec or jnp arpl aas stos out adc sub fstps jg addb push pop xchg dec inc jb scas enter jg movsb lods cmp shll jg sub mov xchg std push mov sbb sti xor push mov push and or lds xor lea gs pop rcr push jg pop out push mov out mov dec mov test pop xor addr16 repz pop add dec ret js or out movl pop lea or repnz and mov loope dec imul movsl mov mov xchg sbb inc xor icebp out mov pop mov insl mov jg xor mov pop jae fadds jg shlb inc pop (bad) mov lea mov jns fdivr test push out adc pop je arpl jp pop or fucomi push aaa loope outsl ds sub mov bound (bad) pop mov clc mov inc (bad) ficoml outsb (bad) sbb lret jg ret daa je mov cmpsl sub inc ja mov lcall aas sbb jb or ds (bad) jmp add jle pop add (bad) mov mov enter mov pushf cltd addr16 sub jmp pop insl add mov jle adc jb lahf jg cwtl adcl jmp icebp pusha enter loope rol sbb mov adc jecxz jg lds (bad) and jg mov jg sbb popf dec daa iret sbb int lea pop xor stc xor into sti mov pop push ret fidivr fildl mov (bad) loope lret inc fiadd repnz cmp or scas out nop lods pop jns roll jg loop add adc mov sub add dec pop adc dec jns movsb outsl mov jg test in push mov imul cmp mov hlt test pop cli or ret push mov sahf les add push loop mov subl mov pop add popa mov cltd (bad) arpl ds or sahf adc mov (bad) mov shll xchg lahf sub into mov jne fistl sbbb adc je inc (bad) mov sar push cli mov push lahf mov mov (bad) sbb leave jg inc jns adc or jecxz xchg cmc mov adc clc das frstor jg shlb push mov out int outsb pop mov push add cmp enter divl call jge jnp out jmp jg cltd hlt xor dec out ds repz sub call mov mov jae cmc mov aad jl cmpl lods adc test or mov jg test int xchg pusha push jp lahf dec push mov ja test mov (bad) pop push and push je aas popa mov dec gs jg mov lret aaa inc add mov xchg pop aam fisubl pop cs dec aaa inc rorl test mov jg xchg hlt mov bound aas pop test cmpsb inc mov jg (bad) leave jg jmp loopne jg xchg mov or outsl push gs fnstcw scas adc jg or loope jg push add in jg repz push hlt cmp jg inc scas jae mov dec popf fwait push outsb jnp jg mov sub jg xchg pop fnop mov jg inc push jl sti mov mov divl jo mov push pop push add inc pusha hlt jg fldcw stos xlat or mov adc les sub sbb sarb mov mov jo pusha gs or mov in jg int3 icebp ret mov cs in daa inc cmc test (bad) mov aaa pop mov lcall rorb movq jge lds std pusha jg sub sub popa and and inc inc jns mov and sub test sbb daa add push enter add jmp or movsl mov loop mov cmp cmc ljmp push dec rorl scas stos sub mov rolb or js mov push pop rclb mov mov cmpsl push jns mov adc xchg in les sub inc cmpsl js arpl cmpsb or dec (bad) (bad) pop (bad) stos loop (bad) mov pop mov mov sbb arpl inc or push inc xlat ds or (bad) out mov add jg or mov mov mov ja adc sahf popa js mov jg hlt out scas lahf sbb cmp xchg int gs push dec lock mov mov cmpl dec cmp and sbb sub xchg mov rorb jo stc ret repz je jg push jg (bad) mov xchg inc iret jg adc lret cmp pop push lds sahf in or nop pop sbb mov mov inc mov adc xchg cmc add mov arpl mull sub iret ljmp fs and cwtl xchg inc dec int (bad) (bad) push rcrl ret pop inc add jg mov mov xchg xchg mov jg inc push jno jnp leave jg xor jg lea push jg or sbb mov push xchg mov lret insb aas jle mov inc pop xchg sarl rclb addr16 xor movsl pusha jns insb mov into jno dec mov popf jmp lods fcomp test sbb add pop jecxz or and or enter fwait les (bad) inc mov ja lret and loop (bad) push adc in dec or cmp addl mov fnstenv mov push xchg pop add sub cwtl mul je subl sti (bad) jg mov je jg scas push lcall xor add jnp mov push insb data16 jg inc jp mov clc jg cmp lahf in shlb cmpps pop addr16 fwait (bad) jg std lret fnstcw or or outsb arpl inc ljmp push repz dec adc jmp xor jbe mov lods jae jne arpl dec ret xchg jg clc subb ret pushf (bad) incb sbb movsb testb sahf insl (bad) mul cmp leave jg inc dec (bad) mov cltd sub and sbb orl roll dec add push adc mov scas popa jg add mov js (bad) mov pop add push cmp fdivr pop pop mov (bad) pop push pop or mov jbe ja ret jg inc movsl cmp je jo jg xlat fwait nop mov cs jbe adc cmp (bad) bnd push div out pusha cld jg stc adc mov push mulb scas mov and mov fidivr arpl sub aaa mov sbb inc xchg jg xor (bad) or inc jg jno cs jge xor jns (bad) fdiv shrb (bad) cmp mov andl and inc push dec push (bad) int3 adc outsl andb aas mov in mov jnp jg dec pop adc addr16 repnz std jl jg scas xchg mov fstpl int in sub sahf test inc repnz addr16 mov jg add data16 (bad) clc dec mov xor lret jp (bad) divl lods out mov add pop jns jl lock push jg imul jne jge jb call sarb cli dec and cmpsb inc js in cmp and mov mov sarl bound lock push xchg outsl sbb inc fisttpl mov loopne (bad) and mov or cmpsl jg sbb sub jg sbb out cmp pusha cli pop popa fcoml ja inc jg les pushf aas iret push ja ret lret add xchg mov hlt pop push lret push enter push xchg jl push xchg xchg sbb dec pusha iret jbe mov jecxz int3 mov popa inc (bad) mov jg (bad) repnz movsb and enter jo addr16 jg (bad) and out in push pushf jg xor je mov mov iret stos pop pop pop add add sub lahf jmp push shr in jns mov lret fcomps movsl into das ja adc addr16 sbb inc mov adc ret inc mov pop jbe or jg and lret cmp fdivr aad push jg ja or inc and inc lret inc loop lea (bad) jbe cltd stos in dec inc test popa inc in and gs cmp ss mov xchg jae rcll mov lods jecxz mov jg pop in cmp in scas loop jg push clc sub push mov inc mov (bad) mov divl jg (bad) push push jl orl jecxz and push sbb add iret mov add xor out mov sub outsl cwtl lret mov mov dec jg lds jne adc pop insb sbb outsl popf mov daa push rorb (bad) fnstcw iretw push jg bound adc aas fdivrl xchg inc shrb arpl and add jne jg into rcll (bad) dec (bad) xor fwait jne push inc adc repnz mov in sti outsb sub sbb call dec jg adc add out xchg push in xchg into jg sbb popa fisttp jbe jle lock xchg fndisi(8087 cli mov testl push mov into out jg jle les std jg inc mov jg (bad) or sti les hlt sbb and inc cmpl stos mov xchg cmp mov shr clc loop add add cmp pop fcoml pop inc push in dec cs sbb add xor aas aam jo xchg out dec cmc sbb into ret or sti inc notb dec xlat mov test loopne shrb sbb mov dec pop jg fistp adc sub mov jg push faddl mov sbb jg add std js mov push push sub jecxz or mov lcall xor gs les mov xchg sbb cmpsl adc pushf xchg pop jbe and pop je jg das icebp bound sahf pusha (bad) mov jg push insb lds cmp jg movsl inc ret cmp lock lods out jno xchg lahf hlt mov mov push rolb xchg test sarb cmc orl dec stc pushl clc mov dec call mov fisttpl mov js stos mov jnp or jo jg push outsl adc out shld cmp dec mov movsb or jg push pop test lahf xchg cmpb ljmp nop cmp lds and lods xchg enter nop aas call insb icebp inc lret xchg jg fs sub jg lahf jne mov in cmp movsl decb jmp fwait xchg call push jg lret push fs adc (bad) dec sbbl out lds inc jg or popf pop jg ds jnp xor jg jae stos movsl aam int3 jg test outsl cmp jg aas mov out jo dec iret les pop dec stc and (bad) js and and lcall hlt mov (bad) jg mov daa adc jl mov xor bound cmp and aas mov pusha imull leave cmp stos cli or push push cmp pop (bad) (bad) mov test pop test jg jns mov mov stos sub in lods lods ja push aas cltd pop xchg faddp popf adc and cld lods pop and mov mov push lcall in pop daa xchg or (bad) cmpsl mov inc sarb sub fnstenv cmp lea (bad) push cmp loop push jae pop xchg outsl cld mov mov lcall dec xor xor pop jp aas pop xchg popf call pop mov and cmp mov imul add mov (bad) and (bad) jae mov icebp movsb adc leave outsl repnz lret popa popf jge mov je int sbb das jbe ficompl arpl push jae movsb jg cmc and fisttpl pop mov dec popa jl repz sti ja push ficoml add jle mov mov cs push pop dec jns jg popa mov imul repnz sarb lea cld inc clc std lret fdiv and call dec ja add movsl mov dec arpl orl test cwtl jg (bad) out add mov pop jg cli dec jge push mov lock pop shr icebp mov test push (bad) xor in (bad) shll fdivrs mov dec ret add add outsl mov mov cwtl addr16 pop mov jg jl loop add and cs test fwait sub (bad) (bad) adc mov jl mov fcmovne (bad) divb shl ljmp fdivrl lret cmp inc ret cmpsl hlt pop jae frstor and scas push imul (bad) pop out nop or insl jle out ret xchg inc ret jg fnop mov mov cmp xchg mov orl lahf cmp (bad) jg sti pop sub (bad) lds in shrl push inc repz mov jns imull jbe cmp pop inc mov icebp jge loopne xor dec xor pop jbe jg mov push mov adc stos and rcrb js mov inc dec fdiv sbb jg pop and mov and jp xchg lods fistpl int ret test fs sbb lea les xor mov lret adc in aam cld je dec xor jg jae mov mov sbb or in js pop loope sub jbe repz mov lea jge xchg adc cmp sarb and adc jno lcall into pusha push jg gs shll xchg pop lds mov in dec (bad) packuswb jb mov lret cli jae icebp loop popa sbb lock test sub insb add jg lea mov and sub dec cmc adc test divl or shlb rclb mov pop imul test push push in pop push and in xor arpl das rolb add test pop sub sub mov dec xchg jmp jne xchg cli xor mov cmp (bad) pop les inc (bad) je rcrl cmc jmp pop lods jg jecxz jno and push cmp jg add push xchg xchg pop repnz or pop jg lcall jo stos sahf sarb sbb add jg adc or pop (bad) scas mov jae and and js lcall mov sbb add iret and jg mov sbb add push adc std movsl inc push inc test jg mov cmp or or or out inc popa lcall dec scas sub test out mov mov jno cmp pop ret (bad) outsl mov inc ret dec mov jg jge inc mulb jg int push xchg add xchg xchg movsl (bad) dec mov jmp jns andl in and inc add in jg xchg fcoms jg jle arpl mov enter and ja lea movsl jg adc (bad) mov scas mov addl rclb jbe sbb loop jg loopne push cmp add (bad) (bad) jno data16 mov insb pop pop cmp out jg test addr16 inc sub aas dec ds jg pop and movsl or mov lret mov mov insl enter fidivl or rcrl mov loopne fistpl je loope jg (bad) data16 clc sbb fdivs xchg mov jge adcl test mov cmc sarl sub cmp insl mov mov jl imul or xor out jg and mov jg xchg stos add hlt jg pop mov cmp jg mov add hlt arpl jg mov loop adc pop jne add pusha dec adc ljmp (bad) jg (bad) mov jmp sahf cmpb cs in mov dec jg and adc jg and aad sub hlt insb movsl adc add xor inc cwtl jg addr16 stos add test sarl push repnz or jg dec mov (bad) mov jbe mov jecxz dec jnp xor cmp in xchg jno push gs negl mov sbb jg pop push (bad) out sub mov jne sbb sbb lds loope jnp rol repz sbb or addr16 or stc nop jne dec and jg fsts sub shlb xchg xor xlat jg daa lret fwait mov sub adc lds adc dec cmp mov adc mov aas lahf adc or push inc xor inc push sahf dec hlt jg pop and bnd and iret add sbb mov (bad) ja test lea pop int3 adc fwait and cmp jle push pop (bad) (bad) sub test and dec adc js movsl jb and cs cmp and sahf lahf les jg aad jp scas push das popa sbb iret (bad) dec xchg xor cmp enter inc jg adcl movsl adc cmc or stos jg call push jg mov popf sbb cmc jne add xchg mov (bad) repz ret mov pushf pop inc dec insl ds jg or jg push jae sbb jo jg lea add fadd fldl jg test push fidivl gs jg lahf mov jle add sbb (bad) notb iret mov and mov push movsb int pushf pop jg js cmp iret insl jno roll aas ret icebp sbb jg xor out mov dec and lret dec push mov jns dec mov inc jg addr16 js rclb mov pop adc jb xchg rcll jg sti aaa add or lock sahf mov pop jmp adc push movsb rolb jg or mov mov and sbb adc loope jg push lret fimull (bad) inc xchg scas adc jg cmc leave stos mov jle js imul aam bndldx jg jne xchg cmp mov in inc mov (bad) sti movsb js in cmp and addr16 push xor jmp cli jno dec mov inc popf and pop xchg mov hlt jg inc imul jg push mov dec and stc jns jno (bad) cmpsl cmc add dec jg fistpll jg xchg mov mov adc jle fwait sub mov or dec je ret add xor in fimull dec pop cwtl jg adc cmp jl mov int push stos sbb or push mov sbb and mov push stos cli inc frstor mov dec push cmovns xlat push js cmpl (bad) out jg and imul xchg insl mov cmp clc jo inc cmpsl mov push shrb jg inc push mov add jecxz jg call out (bad) jg test add cmp cmp popf fwait jne dec mov pop repz mov sub cmp pop xchg es sub mov add jg lcall jg inc inc fwait or movsb jg inc cmp scas in add arpl xor imul cwtl es mov in add mov add out jno pop imul adc gs and or pop jmp jno mov outsb imul cmpsb test and xchg incl or cs inc pop mov pop repz mov xor mov insl sub aas jmp xor orl out fs pop in lods cmpsl jmp and mov xor ss mov cwtl lods sub pop fisubrl and xchg (bad) test push inc adc jg pop sbbb and mov aam cmpsl push dec and inc add sahf jl repz jmp cmp mov cmp jno mov das jmp mov gs lret xor push mov les adc cmp mov push xor fisub push movsl cmp mov xor ss push mov jl xor dec aaa pop jge mov jg into xchg lea sub je movsl icebp jg stos test rclb jo fs arpl out loop cmp ret imul and push aaa adc push not fimul flds iret sti popa sub dec pop dec pop mov jg lock lret addr16 js rol dec jns mov adc sti push int3 xchg lret jmp data16 fwait jle mov rcrl aas push leave pop inc out inc sub fwait jg or nop xchg jg (bad) mov push loopne inc aas aaa (bad) fisttp loop aas and push jno pop clc jg push mov lds cld daa mov dec ret clc sbb (bad) jg inc (bad) ljmp dec daa sahf adc xor pop add clc pushf sub je jbe mov pop pop push jo jg nop mov test test jg mov lock pushf fistpll xchg jnp dec or inc imul ret clc sub push dec mov loope (bad) jg enter jnp scas jg pop xchg call or cmp imul pop sub xorb sbb cmc push adc hlt sub stc cltd mov pop mov clc outsl (bad) into push outsb and jg roll mov sarl mov sarb out jne popf or mov ret cld mov jle cmpl xor sbb movsl and push ja fsub jg jbe pushf int3 dec rclb cmpsb inc adc dec mov sbb jg stos iret mov inc mov out push out mov loope mov jg dec js sti inc jg sbb pop iret mov cmp test inc (bad) imull mov in sbb out rclb jg neg jle,pn cmp jne idiv gs cltd adc (bad) sahf shr mov add inc xchg aad push xchg lock nop mov push es jg inc addr16 mov inc jmp aam test push jg sbb ret push push and cmp fnsetpm(287 dec push out test jb inc mov cmp loopne (bad) inc lret sub (bad) loop jne (bad) stos pop mov mov push add inc push jg mov xchg adc jg sahf (bad) mov repnz (bad) xor lock lahf stos adc mov out push pop mov stc sbb aaa jo xchg push ret fldenv rorb testl add xchg mov into mov test dec (bad) sbb dec pop push jns bound pop add adc push jmp arpl (bad) mov mov jns add sbb cmpsl and and sti lock xchg mov jg mov jb int3 nop pop xor lock fwait outsb or xor or pop mov movsl leave mov lods je mov inc stos inc push fs ret cli xchg jg mov dec mov aas (bad) movsl mov mov adc fdivs jg fstl or in jg test mov cmp push inc sub jg cmp loop imul out mov xchg dec and jg fmull cmp lods pop mov (bad) mov insl xor imul inc push jg mov insl ficompl jg (bad) sub js inc lret (bad) fisttpl pop stc arpl outsl pop dec inc mov sub insb ret jg sahf add aaa lods std mov (bad) aam ja push adc (bad) ss insb jmp mov jg cmp dec into jge es cmpl inc mov jg nop jnp daa pop jle jg mov inc cli lds mov mov jae push ljmp fs pop pop xchg loopne sub in inc or sarl sbb jl lds inc lret es popf inc xor sarb and sbb (bad) xchg inc pop pop inc (bad) jg add cld jg lods iret clc add pop outsb insb mov aas jns gs es xchg jl cltd mov insl inc sbb mov repz xchg int3 xchg dec xor add push jg cmpsb int3 add pop inc xchg sub xchg cmpsl xchg mov mov jg adc fistpl aam jg movsl loope jne js jg lret rclb cli imul inc add mov cwtl mov lcall lea jg movsl imul push loope push pop inc (bad) lcall push mov popa stos (bad) loopne inc iret cmp jg (bad) jbe jb loope jg add repz stos mov xor out xchg insl mov lea or rolb lahf jg jecxz mov jg das push pop aas mov insl xor loop jg (bad) cld mov add fwait out pop cmp adc jg sub push pop cmc mov aas mov adc add sbb jg hlt fdivrs mov dec adcl jg inc add xor mov mov (bad) mov int pop mov shrl in lods or push push outsb push pop jmp out xchg xor dec rcll ror pop outsl jg test aaa aas pop div lcall cli stos test xchg fbld andb adc xor push jecxz lahf mov or mov mov inc cld (bad) mul out pop jge mov aaa push ret lods jg (bad) scas popa rcll es mov push pop push pop outsl jbe (bad) cmp fs sbb xchg jl out and pop (bad) fbld push int das cmp mov or sti imul push pop sub (bad) mov in dec data16 and pop out outsb in adc cmc cmp pop jns pop xchg jne inc add fiaddl (bad) ja jg je test test and mov repz and test xchg mov call jg push jle or fxch fbld mov jae dec sbbb push mov adc mov in sub test (bad) or loopne jg adc push jg dec dec test lahf cli loop mov (bad) pop negb jp jg xchg xor mov bnd test inc aas arpl xchg sbbb cmp jg adc (bad) je xlat dec xor jl inc xor jg pop sub jmp aad scas jae sbb mov mov mov xchg cmp sbb cmp dec sbb xchg shlb mov aas cmpsb movl (bad) int jns dec jmp pop sub jg insl out mov (bad) (bad) leave xor lds aas sbb push jne (bad) add pop iret imul and xchg aas hlt scas cmp inc mov pop in jb xor popf lret sti ret mov jnp fsubr cmpsl jg mov pop out inc pop jg xchg mov xlat mov cwtl pop fidivrl push lds repnz xchg fs dec xor cmpsl popa testl aas arpl js fadd push inc mov ljmp push dec ss xlat je sbb dec xor mov nop (bad) ja mov out cmp daa leave mov pop ds pop enter adc inc pop aaa sbb lahf ret dec (bad) mov add arpl std mov fiaddl mov push jg mov add subb jg (bad) dec pop aad and leave je jg ss in popa push jg push adc cmpsb push scas ror mov in loop dec jg or std mov ss aas xchg push mov add sub jg jecxz cli inc pushf xor jmp mov in cs pusha jg cmc push jo fcoms and xchg mov popf pop dec icebp iret xchg pop mov xor pop mov jae daa dec aad (bad) ja xor mov mov (bad) pop outsl lds aas lahf bound inc popa sarl rorl jb push aas decb xchg add xor dec icebp cmpl pushf adc mov add (bad) popl rorb (bad) ror (bad) lods cmp push mov jg daa jbe dec push mov das repz dec addr16 jg icebp mov fdivl inc jg cs mov aas mov into mov scas jg pop sub mov push xor aaa xchg xor icebp lret imul repz inc jg test cwtl aas sti shl and idivb mov les and or jge arpl sbb push cld mov sti mov xor push and cmp sub jg inc daa jns push mov mov push dec add scas (bad) sti pop jae cltd movsl adc and sub jg mov push clc jg dec or (bad) les mov inc nop dec lock mov pop adc lret psubd fcomps ja addr16 repz xchg (bad) aas out lret mov jbe jg (bad) movsb insb xchg addr16 mov sbb ja dec mov (bad) mov jp daa mov pop shl dec mov adc cltd or das cli in cmc push and outsl (bad) pop (bad) ret cmp xchg mov adc sub xor jle adc sti movsl dec aaa mov mov (bad) xlat push xor xor jne pop push jne leave adc outsb cmp adc pop sub cwtl mov push call jg stos pop push insl pop ja pop push rorb xchg mov mov push sahf push aad mov fldt movsl into xchg xor mov add sub jg pop imul jmp aad test cmp ret jecxz fcoms les inc jg nop push dec loope jg jno lock xchg adc mov mov push inc dec mov lret out mov popf or out enter sub out add jg push sbb dec mov jle outsl xor jno mov pop push outsl packuswb xchg test icebp in mov dec xchg bound push xchg cmp mov dec inc sbb pop faddl inc (bad) aas jg in add repnz test (bad) jbe in (bad) out sti jg les mov jg and push (bad) dec aad push xchg sub xor pop addr16 push jg inc xorl cmpsl push iret fnsave cmp scas loopne inc movsl call xorl pop and cmp mov sahf ret iret xchg aas jg adc dec xor scas jg clc xchg sub xor loopne popf mov mov lcall mov popa sahf in dec mov sbb pop sar iret sbb jg pusha cwtl das sub cmpsl mov lret cmc outsl mov test jg inc jge inc mov xor call jg out adc or pop or or daa (bad) fs in cmp out pop imul outsb jg add test mov loopne sub and mov and lods ficomp xchg fwait mov jg mov rorl lds daa mulb arpl jg in aam dec dec insb xorl inc fidivr je cmp add fs dec pushf aas cwtl pop gs add inc pop adc jg in out xchg aaa and fcoms (bad) sub adc push jg mov ret cld into (bad) cmp sub cmc mov add jae dec int3 mov xor mov cmc in stos fiadd aas xlat ss inc ja and inc pop popa mov xchg jmp mov cmc adc or lods jno cmp add js lret inc (bad) push mov dec mov mov mov ljmp inc sti cmc les jg cld xchg sub pop xchg inc add xor ds lret pop add pop aas push xor out and jg daa outsb xchg imul lock lods pop clc push lret cmp scas outsl (bad) shl icebp inc jae jg xchg (bad) cmp cmp or push xchg and loopne je sbb out test cmp rolb cmp sub bound stos pop adc out nop add jne ljmp in dec int jno test (bad) fs jmp out out stos jne jg mov movsb mov add add nop ljmp (bad) mov test lock mov addl aad call pop add and cmp scas jbe pop cmc loope cmp stos incl test mov jecxz cmp orl or clc sti xchg mov out xor std mov pop mov das mov fwait jmp test xor dec clc outsl (bad) dec data16 push add in iret movsb push push jg xor test scas xchg in or dec rcr cmp mov jo mov jno mov xchg jg jp bswap mov pop jg xchg and push mov dec jg icebp (bad) aaa popa jmp add cmp iret pop sbb pop cld cmp xchg adc inc sbb loopne mov sbb sub push insl sti nop addr16 mov jecxz dec pop pop adc loop out xchg jg ret jp inc xlat movsb mov push (bad) (bad) (bad) mov outsl jb aam xchg add cmp pop jno arpl mov cli add ja aad arpl (bad) clc das aas jg xor xchg pusha inc fistpll mov add aam add jg loope outsb push push je aas jp jmp cmc ret mov push adc cltd jg decb jl pop lds fdivrs cmp (bad) sahf cltd dec pop imull stc icebp outsl jns cltd andl in jnp add xchg mov pop hlt jne and jp mov dec jg (bad) jbe shrb (bad) aas test xor jg push cmpsl fs pop dec les ja jmp or jg cmc ficoml jg and or jg jecxz fdivr push into call mov sub jle jge sar stos sub pop dec mov movsb in xchg sbb (bad) aad dec mov mov push or mov xchg push pop in push insb das pop bound repz sbb fsubrl or jnp mov jg iret adc sub mov setle repz jg ds pop aaa push fldenv daa jmp push and cmp jns lret inc gs and push scas das ja xchg xchg sarl lods (bad) pop jg and fwait sub pusha icebp mov pop std pop jmp out dec xor sub pop inc xchg daa dec cmp std sti loope int3 aaa ja lock jg mov cwtl add daa mov imulb (bad) or mov jb enter popa lds mov mov mov and adc xor adc mov jg pop mov sbb jg lret aaa jmp jg clc inc ftst sub mov adc and mov or xor push popa mov dec inc dec outsb fcomps jle jg (bad) hlt or (bad) push jg pusha imul iret ja dec or loop jg mul jl,pt dec popa mov mov and jbe je imul jo (bad) into mov js jmp jl and add out pop lds les (bad) aaa cmp mov int xor jg dec pop lock jecxz in andl fs pop cltd dec add imul xchg sarb pop push jbe sbb or mov insb mov shlb sub push xor jo add jg inc pushf and or jg mov mov jg (bad) into push mov bound dec (bad) push jg lea rcl and sar sub lods cmp (bad) ja icebp xor pop je add movb pop or popa mov pop jbe stos repz sti dec and std (bad) sbb cmpsb ret iret xchg jp test jg fildll in jg xor lret and inc jns jbe ret jg and dec lds jg lret mov cmp out dec in add mov pop pushf inc xchg cmp mov rorb enter xor lods mov jbe fisubl aas and daa xchg dec mov jg sbb (bad) in jge xor iret cmp dec pop lahf ror lods mov jle xor cld and jg and mov pop mov stos xchg data16 push cmp push xchg fidiv divb inc mov jae popf mov cmc inc fdivp or inc mov or inc test in mov pop hlt jg shr mov fdivrl pop sub pop inc push mov lock pop (bad) pop mov inc lret inc or pop jg jae sbb cmp loop adc xor aaa xor dec mov push and fidivl push insl sbb ja leave lcall dec popf push aas pop ret dec xchg jge imul cmpsb jg pop cmp jg in mov or idivl iret mov jmp push sahf inc jp or ss int jnp jg fxch test sbb sbbl rcl cltd inc jne pop sub adc jb es out jg fimul lahf bound dec enter dec mov push xchg mov imul fistpl outsl add orl icebp pop or dec dec repnz cltd (bad) dec add loope mov or pop push jmp cld ljmp cs pop jp ret or push mov jg nop shrb mov and in mov sub js leave stos rcrl cltd adc xchg jb jg jp and test mov inc jle mov mov mov jg pop mov or push mov and xchg jg and orl and fs and inc in mov jg in lea mov jg cli pushf cmp ret dec push mov popf cmpsl ret outsl lds jg mov sti xor dec inc nop fiadd jns,pn mov mov repnz call xor and jb mov xchg mov cmp inc mov (bad) dec jle mov xchg and cli mov addr16 mov adc add mov ja adc jg hlt mov cltd pop cmp pusha fist add dec pop inc ds inc inc outsl fdivl and popa gs aad or push mov mov cwtl mov test sub cmp mov push nop in loop sti sub push mov add pop rcrb jle jmp cld mov adc xchg jg movsb cmp push and (bad) jge (bad) enter jmp fdivr pop push js inc pop aad (bad) dec test jg mov cmp cmpsl sbb mov ret cli cmp push or cmpsl push dec (bad) jg mov mov call push lds imul leave mov or mov lahf stos mov ljmp rdmsr repnz pop (bad) push orb mov and enter mov mov sti psubb jo aas (bad) jg jecxz sub mov cmc jg and aad cmp or lret bnd or push push lods xor jg icebp pop mov aas dec pop pop rcl add inc inc pop or adc das mov jle dec in pop push gs pop fild imul adc loope out xchg inc je xor fisub (bad) cmc lods mov pusha jno dec pop jne and pop sti add shr cmpsl pop push icebp insb mov xchg xchg jo sbb aas jne push mov mov push sub sbb jg sub jl in jg pop je fs int push into xor aas inc (bad) ss sub outsl es scas jmp jg clc inc xor scas repz fldt inc xor cmp cltd mov fcomp scas mov loope mulb test sarl lds dec jg pop push ja fnop cltd jg pop pop les (bad) xchg jecxz icebp jg add inc repz bound sti nop popf incl outsl test jg es mov mov call ret jg xchg inc jbe xchg push (bad) cmp lea jge out ds pop sarb jns movl lcall jg fsubrs cmc and cmp pusha iret (bad) (bad) cli rorb jg xor adc push mov insl shrl mov jg insb or jae push mov addr16 nop sub movsb dec jo sub jg rclb xchg and dec dec and mov lahf orl (bad) adc jecxz outsl dec dec mov out jmp sahf test jne les mov call push push je dec jg jmp cmc adc int3 hlt (bad) ret mov les inc es mov cmp push in popf or fs jno mov ljmp sub cmp decb subl lcall lods (bad) jmp mov (bad) in out ret inc cltd scas lods push sbb pop (bad) mov (bad) dec cwtl jg and in mov sbb inc adc lret jg out push ror in jg das cld rcll push divl ret insb dec add push leave cli popa cmc sub push add mov jae xchg movsbl push xchg ja push push cmp cmp aad stos dec mov repz hlt mov sahf jg fcompl (bad) aas jno sub or dec test add and js mov inc jle jo push jg mov dec push mov push jg xchg mov inc xlat xchg xor inc push out jg popa mov fnstcw inc mov inc jg or inc sbb popf mov jg dec insl das leave jg cmp out dec push sub jg lahf mov sub push rorb push fldl (bad) clc mov jg jecxz xchg lock fnstcw jnp or jb mov popa out inc sahf push pop and xor cmpsl jg push insl ljmp add push mov xchg sti adc cld jle sbb jg repz pusha jmp imul flds outsl mov test xchg mov shll and leave or andl lods enter (bad) aaa lods out (bad) dec icebp mov test dec pusha xlat cltd xchg push adc jg mov fdivrl stc mov cmpsl push es jg rol cmpsb ljmp lahf inc cmp sbb fcomp dec hlt jg nop adcl (bad) (bad) jg and push pop aas cmpsb fidivr inc add sahf (bad) in or or cmc movsl xchg mov clc inc mov push cmp ffree jg imul imul das dec outsb inc arpl xor mov mov inc adc and cmp cmpsb test dec jg inc sbb aas lea sbb sbb jp lock mov pusha nop dec cld fsub or pop pop cmp es push hlt jg xor xor cltd pop test ljmp pop and (bad) aaa cwtl ja jg inc aam cmp cmp jp loopne adc dec and in les and add jmp jmp lea lds aas clc mov lock nop xchg aas dec mov sti dec int3 dec jg xor gs sub pop cs pop xor mov aaa jg jmp xor rorl jg sbb inc push lcall xlat test mov or scas sbb mov aas test xchg or cmp roll jg dec leave cmp pop xor out cwtl ds pop push outsb and (bad) loopne sti pop or scas jbe mov sti sub int3 push xchg clc sbb mov mov xor xchg daa inc cli jg int3 xchg adc les jg push cmp and fnstcw hlt fildl dec iret mov pop imul loope arpl mov outsb mov ss ja pop das in cmp and add (bad) pop icebp aam out add das fwait iret jg out es dec inc xchg jg mov test sbb fsubp add cmp js push jno hlt dec (bad) pusha jno mov xchg or mov mov dec mov mov int mov mov arpl fsubrs cmp push (bad) mov push mov jo test enter ljmp pop add sti or or outsb xchg aam (bad) jg enter xor pop scas dec sbb cwtl movb cmc jmp add push mov jg pop mov loope (bad) jno inc xchg daa fwait (bad) out incl rcrb adc jg out pop pushf mov cwtl add shrl push fdivr dec add cmp hlt jae jne and or cmp jg and bound sub test in mov push push jg mul ss pop ja insl out (bad) push mov (bad) (bad) lahf cs jg fadd test pop jg movsb push pop lret add (bad) cmp fs pop in push repz std mov cmp in gs add shrl jg sbb sbb jl jg imul (bad) loop jg orl jg mov fdivrl loope jg xor jmp outsb ret shr js xor jg enter dec mov xchg xorl shrb pop jg repz mov jae dec out int3 push (bad) mov mov inc (bad) mov mov mov addr16 stos pop jg js xor xchg xor mov bound idiv lret mov push cld (bad) cmc jg mov loope xor mov insl push mov enter push jmp data16 mov sbb inc push or outsl cwtl stos insb jg mov addb and inc mov jg adc sub push sarl push rolb or jl push jno jecxz std jg push mov call (bad) cmc jmp and (bad) sti jg into fidivl stos mov push fimul mov xor and jbe jg xchg mov stos lahf xchg mov fnstcw ret in sbb jno jg xchg dec stc addr16 xor add mov (bad) fdivrs sub push dec jg jle lahf xchg mov jno leave jge (bad) repnz add mov js popf dec lahf lock out pop gs popa arpl xchg sbb and in dec ret out cmpl mov out xchg je mov aad jo pop popf rcl jg enter or lret negl cltd test mov inc daa jno jg fwait lret xor jno and cmp dec jg fwait xchg jns mov loope mov push mov inc inc xchg dec das cmp jg lahf (bad) ja xchg int sarl idivl or (bad) (bad) rolb jg js loop sub ret pop xchg jne jb fnstcw lret or push jg push shr fucomip dec in jg push cmp jecxz loopne pop push jg movsl lods ss and cmp mov xorl flds into jne mov cmc fwait sbb cmpsb fimull ret pop cmp jg andl cmp loopne rol adc cli push in out inc (bad) xor nop js mov inc pop mov scas faddl cltd cwtl mov push cmpsl and dec pop add inc iret cwtl nop jg gs jmp (bad) push (bad) movsl sbb adc jp mov add dec iret rorl inc jge jno insb imul ja mov mov jg jmp push outsl jg jnp fcmovbe xor ret dec pop enter hlt inc mov adc xor scas loopne pop xchg (bad) (bad) js adc inc mov scas loopew jg jae or in jg aas mov insb jg sti cltd dec scas enter jnp dec and adc dec icebp loop sarl negl jecxz add pop xor fnstcw adc fstpl test pop cmp pop cmc loopne in mov push pushf push sbb lcall jg aas int mov cmpsb addr16 mov fdivs add int3 adc xchg jg jns,pt cmp sub std jmp jnp lahf mov into ficomp inc scas xchg xorb mov in dec cmp push popa pop cmp xchg jg scas push mov repnz push jg lret out pop frstor xor cmp xor jg or aas (bad) mov push or xor xchg pop and add in neg mov ficom xchg mov in cs sub add es sub jb xor dec pop sbb outsl stos (bad) jg sbb inc shll inc mov aad dec cli in or jg jmp push pop push mov mov mov jmp lods mov sbb pop inc mov adc (bad) inc jg push xchg movb xor xor jg inc cmp xor aas imul lods fldenv pop jg outsl push in mov xchg jg ret lret add jg xchg mov adc pop jg (bad) fwait repnz xchg out fistpll pop std and (bad) inc or jg,pn call push (bad) mov not dec outsl inc push pop sub jg pushf mov adc gs jo (bad) (bad) data16 (bad) cmp and xor (bad) jno mov adc inc pop and addr16 imul movsb fsubrl aas xor jae scas jg repz dec (bad) dec jno xchg mov dec jns (bad) lock adc in jg sub loopne test xchg pop mov dec mov dec pop push aas lahf sbb ss jl in pop out sub jg mov cmpsl ja mov pop sbb push jb push and mov rcrl test mov xchg aas mov sub das cs cld (bad) or cmp (bad) dec mov add pop adcl pop dec repz in inc fldl sub add xchg nop inc mov jg inc (bad) shr clc or sbb xchg push mov fwait dec out mov mov jg sub cmpsl xor rcrl mov or addr16 bound shlb mov leave bnd inc daa xor lea push dec movsl scas test (bad) rcll int aaa xor mov (bad) push ds addl fmuls mov xchg lods lret xchg mov mov xor test stos out adcl inc es out and ja xchg jg mov jmp jmp mov add xchg dec test push popf dec cmpb push cmpl es jg and mov mov jg js cmpsl notl push dec jg fist mov aam scas push push cltd hlt aas mov stos xchg inc adc mov cmp sti cmc push les (bad) out mov mov push and jg inc mov push sahf mov gs cli push or mov mov and sbb xchg rorl dec jns out jg add bound inc ja push lahf mov xchg or cmp cld pop (bad) out aas decb loope inc xchg dec mov dec or shlb push dec lds jg push roll cmc push mov jg xor mov pop test ss jg dec sub imul sbb les fildl test js push outsl cmc add cwtl or jb scas sbb push push je pushf or pop xchg (bad) jle mov cmp out mov mov jg add cmpsl inc aam jg push jbe pop adcl push cmp and (bad) pop mov xchg outsb sbb dec mov in repnz jno xor inc xchg jg (bad) popf in cmp jg in jbe (bad) (bad) pop and or dec xchg leave inc xor adc jg add mov js out push cmp xor mov mov dec push jns xchg rorl push inc ret (bad) cmp pop cmpsb push cmp push cmp or pop mov sbb jg addr16 pusha test and mov adc iret xlat dec test jae fs popf lock xchg or (bad) call cmp scas mov aas push mov mov imul jle aad fldt insb jg inc xor cmp js jg xchg lret mov mov push dec cli sbb pop sbb cmp (bad) jl test sahf aaa and dec fbld xor cs sahf cmpsl lret loope ss or sub mov mov clc inc (bad) pusha and aas ret mov jg mov lahf jle cmp loopne in aas ret or loope dec cwtl sbb push test inc roll (bad) jne arpl or cmp aam sub xchg nop push or stos add loop cmp out inc jecxz mov push adc or jnp sub pop push fstpt sub loopne mov dec fwait ja pop mov hlt and mov rcr loop bnd leave pop daa stos addr16 clc sbb scas push cld stos sub inc jmp jmp sbb or fadds mov sbb ja cmp ret pop dec or test aad inc cltd sub jg jno push adc daa rcrl inc adc test jb and inc push sti jg adc (bad) (bad) sub xchg push pop or adc jnp pop jg pop cmp lcall cmp sub pop mov inc icebp jo jg push cmp push mov in add mov mov dec fdivs std fnsave jo adc sahf jns mov cmp push jns jge in add jmp and rcll cmc cmp dec imul jg adc push and lret sarl dec xchg xor stos daa sti jg push inc xor jge push mov add inc jle (bad) fdivl add mov das jnp inc in jg and arpl jg (bad) aam cmpsb xor stos jg sbb mov jge aas pusha ss inc cmp push dec pop into adc mov push decl or out inc mov iret add lods addr16 ffreep xchg lea inc test (bad) in xchg pop insl loop inc xor jg sbb pop jg lcall xor jg xchg into and dec stc stos jle dec (bad) aam fisubr dec inc jae pop jns mov dec (bad) or jg hlt cltd and jg movsl (bad) xor sarl dec cmp dec lea or mov jp js loop and push adc pop mov imul xor dec pop xor faddl cltd scas repz and mov xchg loopne mov cld insl sahf or jg out jns sub lods ret popa mov pop mov scas xchg mov mov or inc pop xchg lods jg inc aam jecxz pop leave jg xchg mov scas lret mov jg mov nop dec jle jg inc inc fsubs cmp mov adc les push loop jg sub dec mov xlat push add jg cltd ror sub jg push mov cmp js ds adc pop cs jb jg les and adcl jo jg lods test sarl sti mov imul mov inc mov scas lods dec adc mul ret (bad) loop mov mov scas lds mov clc aam movsl gs lret cmpl mov adc ds (bad) enter jg fnstsw or jb jl stc gs add jo mov mov jg dec jle sahf pop das cld aas jns movsb sti ja mov aam incb xchg inc (bad) js mov and cmpl es jg xchg icebp mov jg cmpsl inc lcall inc adc leave mov rcl scas push xchg test push out dec sti sahf and std mov xchg and fnstsw es dec leave (bad) and jle (bad) (bad) pusha push jno mov mov mov xchg jg pop lods in in cmp sti les xor add insl jg mov jg aam or lods (bad) bnd outsb pop adc popf sarl std cmp (bad) jg mov xlat dec jle sbb sub xor mov jg xor jmp sub scas inc inc jno pop movsl mov and or jle mov cmp std lods stos je leave or jecxz fcmovu dec jbe jae mov mov xor icebp das jo or lret rol jg test xor mov pop mov mov lods inc add jp jmp xchg adc fdivrl (bad) mov pcmpgtb std cmp cmp push mov jg imull enter outsb jne jmp adc loopne or or inc mov jg repz mov das scas fwait mov push (bad) mov dec sbb ja inc pop frstor int sbb test push mov pop cmc fsubl mov jg jb dec icebp loope loope inc jp sbb cmp sti inc pusha insl inc jg push dec bound push and fdivl pop fwait mov es mov add call add push rcrb outsb push mull sbb (bad) repnz fmuls insl (bad) push xor inc dec or out iret pop fistpll mov mov push call sub insb pop in inc lret lds sub outsl movsb mov push add cmp jg sbb pop inc cmpsl jnp pop push xor mov fistpl aas cmp pop mov xchg roll push fdiv mov decl jg jle mov sub sarb dec scas cmpsl test imul add mov mov jg sbb lahf adc sti push sbb pop mov mov les cmc dec jg sub inc jl jg (bad) ds int3 pusha fcoml pop ret insl cmpsb pop inc pop xor sbb xor lods in aad shlb outsb pop jg mov xlat xchg mov add pop push jp dec (bad) jg push push jecxz (bad) aam jg or mov pop push idivb add jno dec js out outsl jo sti gs fs lret cmp iret sub jnp mov xchg inc clc mov pop mov outsl push xor mov fcmovbe aas test pshufw jl sbb cs sbb jg adc pusha jg insb (bad) shr (bad) repnz dec xchg aaa aas pop mov ret mov hlt nop pop enter add dec and fwait arpl ljmp jno adc call pop pushf adc loopne sub aaa push arpl jg ja mov pop inc pop jg fs inc (bad) sub idivl nop aam (bad) (bad) push in int xor mov jae add das outsl inc repz inc pop jg mov imul addl dec fnop push mov inc test outsb adc ret mov mov mov mov fildll data16 jg inc psrld loop imul and sahf movsb push test lock leave das pop outsl push jae jg in lret inc cli ret sub pop jg cmpsb cmp cwtl jle pop adcb outsl jmp xchg (bad) mov jo pop and dec xor dec add fs test xchg jg nop inc fidivr out imul lcall lea jg,pt loop xchg jle cmp jg xor sub lock xchg mov pop jmp (bad) pop scas add fiadd pop mov fidivr jne cmpsb sti fldt aas popa or or jno dec inc mov and cltd jg dec lret sub stos sub aas adc inc gs into dec mov xor jg xorb std xchg in mov ret or jg xor or pop dec cli inc arpl jg imul xlat test mov add mov pop pop and jno or mov (bad) mov idivl outsb pop daa pop push into cmp rcrb out fs lock outsb jo ss shl stc and inc mov lcallw bsf in pop mov mov mov jle and sub pop aas scas mov addr16 push arpl (bad) sub jp jg xchg jmp ret lcall mov add outsl jg add dec cmp andl arpl or inc jo sbb ja ret jg dec push cmpsl and push jne daa aas out mov imul jg cltd and stc (bad) mov push shrl xor jg dec pop (bad) cmp push sbb inc jns mov and xchg mov ret mov cwtl add repnz jg les sub stos add stos jg hlt lcall jbe cmp push mov pop jne test or dec jg daa lods scas jl jno jg nop inc pop fsubrl pop mov sbb jg and rcrl dec add popa and and lahf jg arpl xor jno jg xor lcall addr16 jae dec mov adc jg rorb mov testb outsl fwait cmp jg push in lds lcall je push jno sti jg xchg mov or out inc js arpl mov jg sbb sbb nop stc and cmpl loopne subl mov jae mov adc ds in push pop fwait mov fsubrs sti test pop fwait jg arpl mov mov add xchg stos mov cltd bound xchg sbb jo push sbb or jg (bad) stos push jecxz jmp jg pushf jne test add jb hlt mov rorb pop jg push outsl fwait scas pop rcll lcallw dec xor in cmp inc mov ret insb push lock popf sti dec jl jp sahf or int3 sub pop shrl aas mov mov xchg mov popf ja into in push or divl sbb setle arpl add scas ss xor sbb xchg jg adc push jg mov sub stos or jg roll inc cmpsl mov push aas popa inc (bad) loop dec test out push fstl mov push cmp outsl mov addr16 dec loopne sti adc subb mov xor add pop (bad) jne push cmp das inc lds or mov lret test lds out les aad ret fsubl int jnp into cli xchg pop aaa mov dec dec mov sbbb push inc jg in js jl pop jg cmp rorb mov shll inc cmpsb cwtl out mov lock inc int3 jg inc clc mov and add repz jp adc cmpl cmp inc dec sbb (bad) ljmp dec aas pusha inc mov out inc adc (bad) dec lock xchg add cmp out js dec or rcrb cmp in adc pop insl dec outsl jmp jl int3 test divb add lods stos jg icebp mov outsl mov insb push cmpsl js mov jg outsl jbe and jg mov es jmp rcll fsubrl push scas stos or pop mov cmpsb mov pop lods pop sarb (bad) jg pop aam enter lock jecxz in push addr16 ljmp (bad) xor cltd ja adc mov cmp and pop jle xlat insb repz mov pop mov xchg add mov dec stos ret jg stc mov test sbb pop dec pop or jg or sarl dec xchg dec fwait jg and lea lret xorb icebp or cmp fnstsw inc aam push enter repnz daa out inc push push jg mov mov (bad) popf mov push adc push jecxz push pop mov rol or roll jg push loopne xchg gs sti aaa jno add mov cmp out jg cmp jecxz test stc dec lods test push out pop fild mov jne popl mov xchg fcmove sbb repz movsl ja and sub xor xchg addr16 rclb leave adc dec fidivr fnsave mov orl sbb inc lods jg sti ja cmpsb and push mov or repz mov jg inc movsb sbb push dec jg ss and xor xchg cmc ret dec jg cmpsb gs adc lods outsl call xor inc jae dec pop and mov das popa lock fadds jp div xchg mov pop insl xorl inc inc push scas mov in jmp push cmp (bad) sbb sbb mov in mov cmp lods jg xlat and sbb jae sti popf mov add fstps (bad) imul add jmp cmp sarb pop mov lods jb sub insb lock push mov jg out sub aas sub insb dec or mov and pop add mov dec add (bad) loopne mov sahf jecxz insl jp mov outsl cltd in div inc cmp push insb int3 mov pop push sti out aaa fldcw subl sbb ljmp shlb popa jg lcall sti (bad) push pushw pop dec jbe repz imul adc ljmp daa sahf dec cmp adc into inc or mov pop jae imul mov cmpsl mov inc mov jg cltd xchg leave jbe adc int3 movsl ss ret test fidivr jp jle (bad) imul lods xchg cmpl xor popa fdivs jne jg test enter mov xchg cmpsl in rcrl cltd push imull (bad) outsl js xor ja popf popa cli jnp inc jns mov and jno ret jg jnp push (bad) std jb aas lock mov and aas mov aad addr16 push out jg push inc out nop mov xor loop fs push xchg or dec (bad) out daa mov fisttpll loope push xor (bad) imul push mov enter jg xor call (bad) mov dec xchg push and inc jg std jbe inc call or aaa mov mov (bad) sbb push push pop jae lock hlt xchg arpl (bad) sbb and outsl jg and aad (bad) xchg je cltd push mov dec jnp decl xor and in push or inc sbb adc in ljmp push dec std shrb sbb sbb jg push and mov xchg jp int (bad) push or (bad) sbb ja iret jg js mov mov xchg test cli cs add adc mov sbb stc inc dec shrl scas pop cmpsb loopne rcrb jge mulps pop repz dec push push jg jnp test daa aas fistpll jno movd outsl xorb mov xchg add xchg jg xchg outsl jo push pop inc jg addr16 jbe pop stos repz push out jb pop cmp fsts faddl cmp dec rclb shrl imul outsl outsl mov jo stos mov cmpsb jno pop (bad) mov jmp fstpl mov push and jg (bad) out push xor mov loop xchg mov mov (bad) jg fstl adc cmp adc lret sarl xor idiv push stos cltd push loopne jg adc lods inc jg in add add or mov stos jae dec adc sub cmc test gs mov jg add (bad) mov jp dec fwait packuswb add sbb or (bad) clc jg mov in push xchg (bad) je jbe jg jle les mov dec sbb jg clc lea mov outsl dec test and stc jnp jg (bad) push sbb xchg ret xchg in (bad) xlat aas xor fimull stos jp inc mov jecxz mov mov pop fldcw xchg test mov add pop sti mov into and dec out inc sbb push sbb scas test adc clc sbb lea nop adc div push (bad) inc or cmp bound test inc mov aaa pop cmc lds jge (bad) iret (bad) in push mov ror dec jecxz movsl imulb mov push add dec scas mov mov idivb cmp cltd ret and push (bad) fistpl ret ss jo and add jg push (bad) idivl jg lods jns inc dec dec jg xchg push fwait mov sbb mov push and in outsl jg dec insb aad ljmp and fbstp mov addr16 mov outsl sub loope in mov ss enter das and dec xchg xor push xor mov jg or jnp,pn cmp lea jbe lahf addr16 jmp sbb outsl imull jae xchg sbb jae sarb sbb mov xchg jo jns out lahf sbb movsl sti push push jg mov xchg nop jg jns adc loopne jg jecxz scas or outsb jg xor loope mov add out inc or (bad) in mov or rolb and inc jg repz fidivr add test (bad) mov stos ja loopne lret jg aam add ret xchg stc jg pushf inc jbe push jmp mov loop pop das xor add scas sub push pop cld sarl mul pop mov cmpsb adc adc das ret faddl jecxz fisttpll jg pop cs stos cmp fldt popa jg bound hlt repz jl mov dec mov mov std sub ljmp mov mov cltd decb je out mov in sbb popf inc push mov xchg jg roll jge out mov push lahf dec xchg push mov or test jg into int xor movsl fnstsw mov (bad) scas inc into push inc xor and in test push mov rorb ret jmp xor mov divl in cmp fimull hlt cmc popf cmp jg aad sbb jns in mov xchg jg adc push mov pop adc ja das std ret test daa sub jno cmp adc push pop aad dec pop aam fstpl xor test cmp jg xchg adc in std mov aam mov inc jle jmp jae aas out mov or mov sub jg lds add imul ss mov jecxz loop sub and fcmovne pop sub ret jg stos push push pop mov adc loopne aas xor sub mov xchg xor jg jne adc sbb cld mov or lret cmpsb or inc xchg outsl add ret push sti bound cmp dec jne pushf lea adc push ja adc aam in je scas pushf (bad) pop add shld lods push sbb cwtl imul jl jg cmp xor xchg jg dec pop mov aas idiv push cmpsl jno push outsl sbb enter mov in cmp cmpsl add (bad) mov out push mov xchg jg adc ret push fisub test cwtl dec (bad) xor vpunpcklwd sbb fnstsw clc jp pop sbb cmp adc jnp adc jno into es cmp and and xor (bad) jg es gs mov pop mov shrd aas lahf in sub or jg int sbb inc add mov aad dec jg push jp icebp mov ret cmp pop outsl (bad) xchg inc lods adc jg popf imul adc push jg or jg mov fnstcw inc pop xchg scas js pshufw jg mov jb sbb push imul ret jg stos mov mov sbb inc cmp mov jno sub test es xchg cmc mov outsl jp icebp pop (bad) jns mov xchg dec push jg lods loopne (bad) mov cmp jg and aad cltd in pop jg lret rolb mov xchg adc pop jnp adc pusha mov cltd call xchg pop dec je jg adc jmp jb fcompl xlat jle jg sbb lock pop and add push adc sub jp and stc jg inc mov aas lock dec jg (bad) test jns fsub (bad) cmpl cmpsl or xchg mov and adc cmpl jg lcall jne popl mov pop aad inc jmp jg mov les js int mov jg pop xor aam sahf sti aaa mov stc cmp lock js,pt fcomps fisubr pusha xchg or mov stc add jg imul dec cmp mov ds sbb xchg cwtl mov or jg or lcall pop mov mov mov jg ljmp cmp shl sti xor es mov (bad) ret test into imul aas pop and dec fstps jg test jle (bad) inc sub inc data16 jns jg xor add mov and jg cmp sbb inc push gs stos ret outsl jg jbe jecxz sbb xor in mov outsl idivl subl pop mov cwtl jno add or adc dec enter mov rorl inc insl inc in jg test fcmovnu cmpsl mov adc stos ss inc pop int add cltd scas mov leave in movsb sbb mov mov cmp sti mov xor insl ds cli mov mov or (bad) mov xor mov es sti mov (bad) in (bad) mov test jne fxch pop imul adc jg cltd mov call out mov and test push bound sbb outsb lret or int3 jl jg mov sbb mov xor lea xchg ja jmp sarb icebp cmc cwtl lret inc jge mov dec mov mov std sub mov add mov lock jg daa or enter mov mov pusha inc cmpsb jg movsb stos imul cmp imull dec or and hlt jg sbb mov cmp dec fdivl shrb jp bound andb inc ja mov push stos in xor fsubrs xor cmp push pop push jg dec cmp js inc test jecxz pop js mov cwtl jp lret jg xor dec bnd aad jo sub out shr jg pop mov lds jbe mov push mov jg xor daa (bad) mov mov dec jnp stos xor jg or lahf sbb dec mov lret dec pop sbbl cmpsb jcxz sbb jg aaa mov jg adc cmp push jno and notl cmp lahf fdivrs push std dec inc mov cli repnz pop mov popa jecxz jecxz inc xchg cwtl js (bad) (bad) push (bad) stc lods mov cmp pop ja sarl bound push into lods jg sbb roll add ret jg das pop cmp cmp xor xchg arpl shrl imul fwait (bad) repz pusha loope sbb cli lret add sub cmp inc cmp add scas pusha loopne push mov fcomps jp and icebp inc pop popa jg fisttpl fnstcw mov lds pop out xor ret cs sub mov dec dec test sub jns push dec jg loope jp test xor les (bad) insb (bad) mov push data16 cmpsb test cmp test jg pop lret int3 xlat jo push mov sbb xor jle push mov push loope test sarl outsl in jo cli jg xlat lahf mov jle mov cmp inc sub jg pushw ss dec xor push mov mov outsl xchg ljmp pop mov lock mov mov test jg cmp pop (bad) icebp jmp in dec dec (bad) jmp cmp xchg jne hlt in dec movsb jo (bad) (bad) jns push (bad) sbb lahf and dec lret pop fldl mov stos (bad) lods push jg jns jno xchg jg out sahf test mov jg mov outsb scas jg xor pmaddwd push and jg mov lcall out push jo fmull jge xor test lret (bad) popf mov adc xchg sti ret out icebp cmpsb pop inc jb hlt jg scas push cltd pop push (bad) aaa jg jno push (bad) xchg ss out sbb call jae and pop cmp jg xlat or jmp push pop popf outsl mov add lcall pop push jecxz xchg xchg (bad) aam lea push mov mov jmp sbb scas sub arpl je push push inc xchg rorb jp add xchg cli or andb or mov test sub or out loope jg push (bad) hlt vdivpd mov jnp fstpt stos popf clc add jg inc test and mov cmpl add add lret jg or mov pop fisubl pop stos xchg jmp jg dec leave sbbb lock in out imul test and stos fnstcw sub push cmpsl xchg invd insl jg jo scas xor xchg mov add jg mov out imul adc sti ljmp (bad) mov iret dec push sub jg cmpsl pop mov jg xchg lahf int3 adc dec out mov (bad) outsw cmpsb les pop bound in push inc and mov (bad) mov shrl and mov rorb xlat sbbb jle and jo adc push pop mov sti andb loop into mov icebp or ljmp adc fidivr dec test or sarb sub and push push negb jbe jns cmp aas roll jg and scas mov sub xchg sti or lock out fisttpll cmc aas (bad) fwait mov xorl sub bound push mov (bad) push movsl lcall aam pop call pop inc xchg hlt mov jg adc les in dec into mov add mov test rcrb jg (bad) mov fsubrp leave push jg sbb fcmovnb push insb out jne mov pop mov inc mov push mov aas pop leave aas fisttp imull xor int scas adc jg outsl pop fadd push imull jg sbb lea jg insl repz outsb jg insb loope neg nop test das addr16 in sbb xorb jg dec daa add nop sahf loope inc dec xor push call pop repz fwait xchg movsl or mov fsts cmpsl push loope mov test xor jae in and and sbb nop mov cmpsb sub popf stc xchg jg aas mov push aas cmpb cli inc sub (bad) pop xor in push inc lock sbb jg cmp lods cmp mov inc mov xchg mov mov dec xor add xor sbb imul push stc fsts xchg enter ds (bad) ss orl mov scas fimull pushf pop inc and lcall mov out or lea push mov ljmp fnstsw adc outsl les jg lret mov push cmpb push lahf fild xchg xchg fildl dec xchg dec jg cltd in bound jg jmp xchg rcl in push ds popa sbb dec shrl negb xor jmp lods sbbl js je dec daa imul ret jg test fnstcw loope pop lods xor sbb cmpsl dec sbb icebp arpl daa jp in push cs ficompl jg es js (bad) jg imul or adc inc push bound cmp (bad) sbb mov sub push roll jg sbb (bad) out mov push adc mov jg push push aas and jg xor aam ret jae and mov jg jle pop mov fstl scas lret inc pop dec repnz sti inc pop push cmpsl pop nop xor stos (bad) push push (bad) lock jg insl fidiv mov outsl clc mov dec leave int3 cmp pop in adc mov and out xchg jnp jg loopne pop scas (bad) jmp jg test inc mov in gs jae (bad) jg lcall mov cmp hlt adc lods in lcall jg scas pop je xchg mov mov and das ret sbb pop or and jg fdivr sti sbb sti rol fistpll je and xor (bad) fcomi sbb mov mov mov enter sub inc in scas mov sbb popf orl cmpsl mov aad jle xchg test std jb mov iret jg rcrl inc divb jg pop mov or xchg out mov outsl mov adc ret inc pop cmovb fcompl push mov jmp dec test (bad) xor mov cld sub scas jg ja add add shll xchg cltd jg movsb add aam sbb jg push xchg stc das rolb jg jle pop mov dec lds in xorl insl pop adc sub gs jg cwtl cmpsl mov sbb ds popa imul add into pop jg (bad) mov inc lret mov sbb fisubrl outsl test lods adc sub xor push push (bad) mulb push rolb inc jbe int in aas add fnstsw mov adc cmpb lds lret fisttpl lock lcall dec push pusha gs jg mov (bad) in push xor dec inc (bad) sbb stos loope inc (bad) or mov xchg fidivr es (bad) and aad add outsl xchg sbb jg mov pop mov in jg in mov pop inc loope aas push push lahf dec fildl inc xchg cmp dec imul jg mov xchg jp das movsl xchg stos mov ret pop or mov jno scas es pushf inc mov fs outsl and call int3 push clc inc sub jg pop push or mov sti pop adc cmp jg lea mov sub lds pop push mov aas test cmp mov lahf xchg sar adc sub stc pop dec ficoml jg adc mov xchg jp jg push mov mov ret pop into int3 fs inc jno jle inc arpl in fstpt or sub bound mov mov cmpsb lahf icebp lds test pop aas mov jg and xchg jg cmp mov jg aam or lock pop mov (bad) test mov jg or outsb out pop or fsubrs icebp mov cld add fwait (bad) lock or gs arpl ret mov aas sub lret inc and jg idivb adc or lds mov (bad) xchg sti xor ror pop lret jl mov jg in push inc push insl jg cmpsb pop xor mov jg out push cmp gs data16 pop inc adc cs imul jg xchg sbb jecxz pop rcrl pop loop jg push xor jg mov jmp jg dec shlb call fadds outsb sub jg push xchg in aam data16 jl pop (bad) in adc mov sub arpl or icebp out and sti pushf scas pop lds jl mov pop movsb dec jb or jp xchg pop mov add sub jg pop xor cmp dec jge mov jae out jg addl jg xor inc pop test decl out cmp jg add fstpl js outsl inc out pushf mov inc jg ret rcll mov jno cwtl xchg mov pushf sub push scas mov push dec lock or rcr xor jg movsl push (bad) xlat das add pop nop jmp jg cli rorl out popa sahf imul inc jno or es cmp push icebp jg into (bad) bswap out dec aas xor loopne dec xchg repnz jo orl xchg inc ja mov out int3 xor push fistp dec hlt cltd inc cs pusha lods adc aas sahf push imul cmp jg je mov mov jg lahf aas inc sbb testb mov arpl in jg std aas lahf push cmpsl mov shrl lods dec into cld jg je adcb sub push jle jg lods push mov fdivrl ret jne es pop jg or jl pop add fldcw add stc fidivr pop into cmp cmc test hlt xor mov and inc fstpl ret movl fldenv jo adc jg nop in mov jg ja js adc imul jg inc lcall fdivrs jg xlat xchg inc lds jg ret (bad) testb add (bad) jo cmp jg pusha in cmp fidivrl sub test jg insb jns clc xchg xchg mov mov add fcompl add jg xchg pop xor mov jg mov xlat fnstcw push cs and adc shlb imul movsl jbe gs inc lahf jg insl cli inc cltd cmpsb and jg add push inc mov mov pop pop fisub xchg testl mov and cli cld enter jae loop loopne movsl rclb test lods daa push test and jmp dec (bad) popf es pusha inc ja fs jg xchg sub xchg (bad) xor test dec dec in and test pop inc adc pusha mov mov hlt aam jg cmp ss dec popf sarb jb add lret xchg mov incl add loop cmpsb inc dec sbb push movsl mov aas push mov cwtl repz int outsb lods fs adc ret ss dec daa ja cs jg test sarb (bad) dec aas mov lock jg in adc mov xchg fyl2xp1 jg mov fwait cmpl xchg arpl imulb lret mov shl imul stos xor out pop mov in sahf popf fyl2x jg xor cltd cli mov mov mov mov add les cli es dec sub repnz mov and push dec push adc arpl jae push faddl mov movsl cmc test aas pop jns ret ss xchg sti sahf adc fwait ja,pn pop icebp sub jo movsl pusha jg inc add outsb mov jnp add sbb movsb mov xchg jg push cli stos mov jbe mov lods pop jns dec aas pop arpl mov dec or pop jg sub fstpl lea test sub fucomip adc sbb icebp popa cmp aas sti mov insb arpl cltd cmp jg pop js movsl stos jg xchg mov push jg (bad) xor mov mov scas jo jg mov in mov xchg mov cld ret mov mov es cmp out fwait xchg dec (bad) mov ret jg or inc cmp iret dec int3 mov jp scas aas add xchg popf inc sahf dec xchg aas sbb jbe xchg cmp xor or leave dec cs lods sub (bad) push inc inc addr16 jg in scas add test arpl (bad) jne lcall pop outsb fwait nop jb dec stos outsl or cmp jg insb pop add gs mov push or arpl inc mov dec or fsubs aas imul xor pop outsl inc add pop jg add (bad) or push cld dec inc imul xlat rolb jg jo cmp inc cmpsl mov (bad) mov dec xchg inc mov push push jg sbb in mov cmc aas aam bound jp dec jnp jg dec dec push sub mov cmpsl add and push call outsl mov outsl sub out in out movsl daa xlat xchg lret dec mov and or jg mov pushf adc (bad) fidivr dec cli jmp jg dec test or fnstenv (bad) popf jg fist pop data16 cld pop addr16 add lret jg xlat jne imul push add cwtl xor push ja addr16 mov outsl (bad) mov xchg jg pop mov dec addl push inc jp push scas jg out loope mov lea push aas mov jg loop pop sbb hlt xor (bad) jl sub rorl iret outsl dec popa movhps jg pop adcl out sar or insl inc icebp xchg adc dec xchg ljmp adc xchg xchg insb daa jg ror (bad) negb ret inc lock dec dec xchg fstps jg add icebp popf add cmp pop fs nop xchg lods test add mov mov pop lods mov jg ret stos push jp jg cli outsl jl sub scas out inc roll mov daa addr16 xor aas cld cmpsl aas mov push inc shlb xchg pop nop sub mov mov cmc pop cmp jl js mov pop and cmp pop loop imul aas and sbb adc ljmp jle test cmpsl mov insl (bad) aam mov dec stc das outsl inc int3 mov lods dec jo aas leave call jo jb out adc inc daa cmpsl mov jg fbstp push mov mov or jle jg,pn lea push add jo push pop jns cld xchg out insb jg js cmp nop stos jg push mov push mov (bad) scas leave mov aad sub flds jg popf lret and pop call inc xchg inc xchg or dec push out jno or pop jg lods (bad) dec sbb repnz notb xchg cwtl jg and dec cmp pop or in jg pop loope jae xchg sub je fadd outsl push adc ss jmp push ljmp dec hlt nop enter cmpl pop push xchg jg xor test cli sarb jecxz ja cltd enter int3 mov adc jg ljmp jg and pop clc mov pop ficoml (bad) mov xchg mov sub add out mov cmp ljmp fistp mov (bad) into and xchg cmp in pop add and jg and leave cmp jg (bad) jb push push push or std mov mov (bad) xor mov inc mov jmp das stos (bad) jg lcall jg lret sti int or aas or adc mov dec jg sub lods or add mov and or and sub adc cmp pop fistl adc mov sub push (bad) or outsl cmp mov aas dec mov inc push insb out pop (bad) lock jmp popf (bad) mov dec enter sub negl jg adc or mov pop and cmp dec imul das mov insl sbb jmp imul scas out jg mov jge push xlat in pop in imul inc mov jle stc pop jg outsl push or add out cmpsl out cmp shrl xlat and jg shrb pop xor bound jg mov xchg pop or lahf jg mov pop call adc mov cmpsb cmp insl inc inc pop je fcoml push adc or popf arpl jecxz fistpll ret and cmp pop sbb mov mov ret and push mov mov mov andl xor loope out incb push xchg mov pop (bad) cmp inc sbb sub (bad) maxps xchg jg and negl jns mov jg scas pop ss mov adc jp ja out sahf xchg push outsl pop (bad) xor stos mov jge pop xor cwtl jg jl and adc clc stos shrl aas xor pop mov xchg fsubp sbb or cmpsb cs xchg sub jne add mov mov popf jg or js pop ret inc pop xchg and pop fimul in jno mov xor rorb push xchg (bad) sbb es pop lods int mov pop push sub ret (bad) jg mov or sub jnp fnstenv xchg popf aas fdivs cs add inc add inc inc in into sti and (bad) into jo insl cmpl lds xor aas (bad) adc mov jmp mov jnp or fwait out arpl (bad) jp mov cli cs jg aad pop lea xchg pop jg aas push sahf push lods jbe aas jmp aam ja cmp push mov jno mov shlb jb inc imul pushf (bad) mov inc loope push xor mov clc and mov or (bad) mov les decb pop inc xor cmp outsb (bad) pop cmpsb mov push das pop cmp adc or (bad) dec sti repz dec fs pusha mov xchg nop mov pop lods jg xchg pop icebp inc (bad) xor out mov or cmp mov mov dec xlat mov rcll jg or (bad) xchg daa push jg jno dec rorl dec into push iret jg xchg pop or int test ja pop jg jge fisttpll xor sbb iret sub lock jg add mov cmp jle jg pop (bad) mov test dec mov push pop adc aaa sub xor xor loopne out add cli stos arpl inc iret ret pop stc dec into mov mov daa clc xchg pop jnp or test jg dec cmpsb sarl lods sbb jg xor and leave or fwait jecxz cltd sahf xor cmp (bad) aas jg cmpsb rclb cmp sarl test popl jmp jmp mov adc fist gs and out sub shr loope jg mov out jg test jg aad (bad) stc jge nop jg dec insb cmc out mull jg in push jne ja js add and into cmp dec or cmpsb jg add in mov and js dec jg pushf cli bound shrb adcl inc mov leave push lods or dec add dec mov push sbb push and jmp fs scas add xchg mov or (bad) ja sub nop imul mov pusha movsl or int cmpsl xchg icebp xor aas les jecxz popa xchg jae std jg in insl neg out xchg jmp rcrl inc jg mov outsl cmp push sub je dec xchg push xor fstl repnz inc clc jg lods mov sbb sub testb (bad) push push jle pop mov cmpb movb xchg dec into bnd and inc ljmp jg mov emms fistpl repnz jg mov pop (bad) jmp sarl mov fildl leave jg,pn subl jg les and fistl hlt cltd nop xor in in xchg mov cs ja lahf lds (bad) call movl scas jp and scas jne (bad) call ret pop jg sub ficomp stos lds (bad) je jecxz popa push jg fadds inc jo pop jg out outsb fisubr insl sahf loopne int3 cmp adc in mov mov fimul mov dec dec xlat push cmp xchg popa pop jg pop xor sbb and cltd sub lcall lahf xor adc (bad) lods je jg jne add sbb jg push pop (bad) je in mov sbb pop fcmovne sarb outsl rorl adc jg jo loop mov sbb jle popf lds outsl dec mov mov icebp cwtl into out dec jg add shrb pusha adc data16 adc jg int inc and hlt fnstenv lahf arpl push aam loope ljmp orl sbb inc mov popa das inc sarl push cld fwait and mov jg ss sub pushaw jo push jbe cmc test fcomps iret fstl aaa fwait xchg dec pop call jg mov add aas jmp or arpl dec out jg push pushf xchg xchg jecxz mov dec int mov imull and pushf mov (bad) pop aas shlb xor lahf movsb inc in jg push loopne jge js js shlb dec xor sub sbb or or loopne jg push mov std mov push cmp jg shll jne cmc xchg pop scas jg lods cli mov jg gs stos jg in push jo xchg ljmp cmp pop dec jg and dec jp or insb sarl mov stc wbinvd dec jg jo adc jg (bad) scas push lea test xchg lcall in pop int3 jg lea and mov mov mov dec push je les inc jg pop xor xchg bound pop orb or jg xor or jg cmp mov test es out jg mov mov jg pop divl jg sbb xchg test iret jecxz xor aam fistp mov and jg push mov push mov fistpl fidivrl mov inc xchg inc sub lods jg push (bad) rcl dec lds adc cmp pop fimul push and xchg inc mov aas repz les xor pop mov lret jbe xchg inc ds ret mov jg das cmpsl mov adc popa aaa test mov push sahf pop test lcall lock xor pop mov mov mov jne fsubrl jno cmp insb int3 outsl mov mov cltd mov out pop push pop notb hlt jg test push jg or mov sub mov into pusha hlt push xchg imul jg mov add jg jbe pop jl dec cmp jle ficompl out out pop aam std jp aas mov in jnp sbb and test jbe lahf fidivr or ja js icebp incl outsl lock sarb sbb jecxz dec push jg and call jg insb ss jae and jg adc xchg jl xor jp xorl pop repz xor stos add sbb pop mov inc fdivl in movq mov mov int stc pop lods stos idivl ja inc (bad) in jg nop insl flds cmpsb sub lods dec mov sarl js stc fstpt out push ret gs les aas ljmp jnp mul cltd jg or pop rol pop jg rdpmc lods or push or out shll or pop das inc divl jg cmpsb stc push insl sbb mov std push in jg adc xchg adc iret cmp push push inc fdivrl (bad) pop jg sub xchg test mov add xor sub lods pop jnp loopne mov cmp cmp or outsl jo jmp xchg cmpsl int inc adc outsl push cmp add icebp jne push dec pop (bad) jg push mov cmp pushf push lahf fmul jg not mov jg jo nop adc movsl in mov fmul sub sbb packuswb push mov (bad) pop movsl push (bad) jno clc (bad) enter test cltd popa cmp push aaa adc jne mov mov mov cmpsb jg inc cmp rclb or pop or pusha mov mov pop adc adc xchg cmp cmpsl aad ss test in mov cwtl (bad) mov ja (bad) dec (bad) jg sub jg dec aam lock xchg xor (bad) mov adc aad jo cmp sub sahf shlb orb lods in xchg pop pushf inc enter jg cld add adc mov add xor arpl jg dec mov (bad) sti mov sub stos push xchg fcmovnbe mov ds lcall mov fimull push lcall jg es add jg adc jae and mov sbb xchg in jg daa sub and fbstp dec adc arpl or mov mov fsubrl shl jmp jge addr16 xabort cmp mov mov mov movsl orl fs mov sti rorb xchg ja out jp mov or jg xchg add jmp or pusha out inc xchg jg dec (bad) and sbb cltd mov rorb pop xor jne cmp lret mov mov jg js test sti sbb mov xor mov lret xor sbb push test push mov push cmc jg aaa roll shrl jecxz loop (bad) dec scas loope scas sti inc in movsl pop addr16 into call lcall push movsl cmc mov inc inc push loope jg or in imul test mov cwtl mov sbb push pop lds std aad insb cmp add je sub jg call jecxz mov insb ja inc test insb inc push jg andb push jb ret or dec jg shr or mov in push (bad) cs pop jg in push xchg lcall fldt das push int push mov stc pop mov nop mov outsb sub xor pusha xor jl mov jg sti int3 sbb ja mov or cmc lods sarl jnp xlat and test std leave jge popf cmp jle out inc imul sbb mov jg es sahf or sarb pop mov and cmp jg xor fcoms stos jg mov or scas (bad) xchg pop test fnstsw sbbb jg jae jecxz rcr pop jg outsl lcall jg mov imul mov lods dec pop in cmp aad inc and (bad) xor fildl movb push mov imul add cmp lret mov ret daa jg and scas stc jg nop shll fsubl imul add les dec repnz fstpt aad lods and test mov jb stc movsb pop dec (bad) xchg mov jg cmp ret jge mov cmc pop add sti aas iret mov xchg jl in adc mov daa mov pop stc cld test mov sahf and jg cli sub xchg dec fs jg push jb mov nop push cmp loop lods aad lock push sub ja std fadds push inc (bad) pop jg adc adc jnp ret aam (bad) hlt or or pop leave pop push add ds pop in sbb push (bad) mov jmp (bad) fmull mov sub jecxz test imul xlat jg mov xchg cmp negl jne pop les ficompl inc lret popa repz cli push pop pop mov push mov dec push dec mov js adc mov dec fwait push sub and outsb jns jl jnp dec mov clc push jg arpl test dec dec cmp (bad) mov inc jg pusha stos ret mov jg add aam mov or pop aad mov inc mov mov insb leave xchg pop or popf jg popa (bad) inc fstps lods jg insb mov call adc repnz test loopne ficomp (bad) and sahf das xchg call mov xor fwait ret dec mov mov push pop addr16 popa ja mov cld scas fscale dec mov push cmp arpl cli jg xorl (bad) jg std movsl adc jg push stos mov pop addr16 imul jg popl call jg cli dec lds xchg jae or xor cmp mov scas mov ljmp pop into jg push jno jp jg shlb mov pushf and jg lahf lock jns pop and mov test and out pop aas push dec jnp and mov mov pop sahf jg test loopne daa aaa adc cwtl fistpll jg aam mov (bad) movsb mov adc dec (bad) vmaxpd (bad) jb jbe mov mov jecxz dec mov int3 fdivrs inc xor fldl aas jge insb pop enter push pop push xchg cmp jg sbb aaa xor in mov lds lods jo inc lock and insl dec inc and test out les xor or jmp ret js dec mov imul xor pop adc jmp dec xchg insl mull cmp mov js aad outsl push adc push sub mov loop mov push jg pop sbb jg js xlat orl sub push jg pushf xor cmpsl imul and jg push lds out lock mov jg jle sbb jp jg icebp lret (bad) xchg cmpsl xchg jg clc mov test cmp xor dec iret add fcmove push xor mov xchg xlat mov xchg test loop pop jne dec fcmovbe mov test daa mov (bad) jmp rolb xor jns ret test shrb fisttpll mov dec incb ret add and adc cmp ljmp xchg jl inc mov popf mov jbe xlat (bad) jg insb fdiv add and jg cmpsb ret push and xchg sub dec xchg inc jg popf dec cmp repnz fstpt pop xlat stc loop adc dec data16 hlt mov sti add mov xchg sbb xchg loope inc xor mov lods jp mov pop xchg xchg jg or or pop in dec and imul pusha push aad xchg aas cmpsb js aas jge ds ss jg mov mov movsb and imull out sbb push js inc and enter addr16 push aad (bad) jg sahf stos rolb mov xlat mov pop jo or sub add adc sarl jl in lret test sbb aas jg data16 es loopne jno and mov lret and jg jecxz xchg stos xor or adc insl sbb lods insb movsl fs in cmpsb icebp ljmp jb add nop inc aas fbstp jmp bound mov jg scas inc aad mov push ljmp (bad) push sub lods jg pop das xor mov xchg dec lods popf mov rcrl ret adcl aad add mov xchg outsb and call lock adc push ja dec jg mov sub stos aas cmpsb jbe rep notb inc jg fldenv dec pop movsl jbe pusha je or leave dec ret mov out cld add jg nop mov fild cmp pop iret jg cs sub jns out dec sbb std stc pop sub mov push cs (bad) jg push jecxz std test jg lahf es mov jg xchg mov ds jnp scas mov pop sub lock push jg clc mov jg dec push imul fisttpll inc repnz test pushl cltd jg or and (bad) mov pop sub cmc icebp stos mov dec xchg mov jl pop fistpl jg (bad) and pop aas lods pop popa insl jnp lcall ficompl int dec xchg mov xchg sub gs fnstsw loop clc sub mov or outsb sub xor ja xor fwait sarl or test adc mov xchg inc cmp cmp dec aam lret add addr16 cltd cmp ljmp push mov js out ret stos jg into dec jbe ret or mov push jg xchg xchg mov aas neg bound sbb (bad) sti out dec push mov lock (bad) je adc and and mov sub lds aam pop sbb jnp jg dec mov jg pop pop imul mov int mov inc xchg and popa mov inc and inc leave scas lock insl pop daa mov jo xor js dec xor mov xor dec mov cwtl push jg addr16 add inc inc jp out add in pop pop (bad) cmc ffreep mov aas aad (bad) sub inc mov (bad) fstp aas shll je es mov xchg pop mov cmp ror cmpsb mov jg movsl adcb or jg sub mov cmp inc ror test das aam je push or mov mov into ret stos mov lds ret push sbb jg movsb sub xchg and jg into js add nop cmpsl rclb repz mov jg andl sub inc and jg mov dec stos xchg mov mov aam shrb adc and pop xor or in add inc push jmp movsl jecxz pop sbb jno or push dec or lret (bad) scas xlat mov pop aaa jg dec xchg push fdivrl cmpb cwtl adc sti sarb stos mov adc mov (bad) loop ljmp cmp mov aas mov lods cmp adc das cmpl push xchg idiv push cltd sahf add (bad) mov mov cmpsl dec add js,pn pop xchg outsl mov notl rcrb imul mov jg fsubs (bad) int3 ds js dec add push pop xchg jg xor outsb loopne (bad) je cld mov call push iret negl jg push or pop leave jg sbb cmc jg dec push dec rol xor xor dec mov dec in jbe shl das mov jge jg add mov adc sub or pop jns or add clc sbb mov je lds and clc outsl (bad) icebp or mov cmpsl movsl gs jg sub mov hlt adc rcr sahf in jl push orl and int xchg cld xchg sti mov mov xchg or out (bad) xlat pop popa push and cmp insb loope xor lods (bad) popa sbb subw dec dec (bad) xchg fimul push jg inc sbbl add adc lock test iret mov popl dec out cmp fstpl jae or in mov dec cmp rclb sarl jg adc add xor jg mov je push ret inc jg pop aas jbe add push jg cmp sbb insl cs or dec cmp data16 out jnp mov mov push daa push out jecxz ret sbb sub add add rclb into repnz dec pop and mov mov mov cld xchg cmpsb cmp xchg mov jns mov out push cs jle lret sub inc insb pop dec (bad) aas dec ja mov outsl loopne add push sbbb insl lret xchg (bad) dec or icebp mov out sbb cmpsl inc xchg and int test cmpl bound or in notb inc ret int3 loope inc cmp jp ds sarb xchg xchg dec push insb inc lods js jl jno pop mov xchg mov mov loopne popa jno sub mov aas jg pop (bad) mov jg call (bad) fnstsw sub outsl loopne jg and cwtl pop jne push jg sub cmp jg test popa int mov sbb stos cmp xor fisub sahf mov rorl jg pop nop addr16 test jp pop inc lcall aas imul aad notb xor adc or cmp mov add bound sbb jne mov ret mov sti cmpsb fldl mov pusha mov and jb neg inc into mov test xchg adc adc inc push sub push cmpsb inc cli jbe sahf jg out lock addr16 xchg mov pop jg mov rcll mov and jg cmp jmp aas mov jg lret xchg or pop inc xchg (bad) mov jg mov push mov repz push xor movb out std fnsave shlw fs andnps repz in call dec cmp inc jg pop add and jg aas jb jle ret movsb jg dec rclb fs fdivrl or int int3 sbb dec nop stos xchg mov dec insb lahf dec jg pop arpl cmp sbb jg daa bound into (bad) pop out jg in ret outsl mov mov cli stos pop jg (bad) cmp jg xchg idivb mov push push inc add popa mov cltd push dec push inc pop and or dec sub push adc jnp jbe xor imul addr16 incl jbe mov xlat loopne fisub stc sbb movsb jg pop movb (bad) lods jg push mov std mov jg (bad) cli ja and xor adc mov dec fwait jg mov push jns sarl dec xor hlt jg pop push in mov dec xchg push les gs dec jg js add pop jle mov push sbb insl cmp aaa aad rcrl sbb xchg jg sub mov and cmp mov mov adc jp cmpl xchg les jg fcomip mov sub jns test (bad) or negb mov dec add jg pop push xor out jne popf adc dec inc jg data16 lcall or or movq push mov jg (bad) jo dec xchg mov imul pop pop cmpb cltd xchg add test (bad) fucom jg out imul pop and xor add lret les pop and hlt mov je in aas aas lds sbb inc cwtl (bad) jg mov jae jg shr lcall or jg pop loop xor cmp jg jge out lahf add pop cmp fwait aas movsb rcrb pushf xor adc pop inc or cmpsl cmp jg stc movsl pop mov in lret outsl pop pop cmpsl bound mov fnstenv sub lds pop sarb jg sub faddp jg fwait mov ss adc mov stc rcl adc pop lock push stos flds jg xchg int imul (bad) cmp sti pop cmpsb adc scas (bad) jg popf lds in popa add (bad) jge jg inc lea inc loopne aas out inc into mov dec dec and jg jae,pn out add gs daa xlat push pop pop sarb mov mov and stos mov pusha outsl lahf jno cmpsb lahf (bad) mov sbb stc stc ja insl jg add push mov ds xchg mov jg fistp add int cmp xchg (bad) mov jg add xlat rcr mov add jne xor push xchg imul jae jg pop shll sub scas add inc and stos mov sbb faddl aas and das addr16 ds bound jnp or lds jg stos mov (bad) xor inc jg cltd out ret nop fucomi mov mov leave jb inc insl jg xchg pop dec (bad) xor sbb lret cmp arpl pop lcall mov push cli js lock cmpsb cmp pusha inc aas jg stos xor jg and jbe addr16 pop push sbb ret jg nop cmp int xchg (bad) aas sbb xor sbb and push xlat negl js loopne jo dec jg (bad) pop cmpsl mov mov int aas jno iret xchg ds ficompl js pop stos pushf pop lods sbb jno les scas cmpsb nop inc out es ss adc jg cltd dec ss leave fwait ret mov shlb idivl cmpsl andps mov movsl mov outsl mov or or ja jnp inc jnp es lcall (bad) mov negb les outsl inc push xor jle sti pop mov push dec pushf cwtl jg inc inc adc aaa jae popa xchg jg xchg in jecxz add sbb xchg pop cwtl and mov cs sbb push sti jmp xchg jg hlt push pop mov lods add bound mov sbb push cmp jg xchg sub jg dec cmp xchg jno jg test xchg or dec mov sbb jne (bad) ficomp jg out aad jnp aaa pop jg mov and fdivs mov dec and jg sub stos ss bound jns push push int3 xchg dec mov jmp popa mov cltd lock xchg push fsts mov push pushf sbb jg mov inc les cli dec mov aas xchg jl pop or add push sahf inc mov and jg inc mov mov popa jae jg xchg mov pop inc cmpsl jg jb (bad) xchg pop mov cmp repnz pop push pop push or popa divl inc icebp insb jg xor xchg sub pop gs push jbe (bad) mov (bad) (bad) and fisttp xor jge dec aas sub push jl dec sbb sbb sbbb sub (bad) add jmp sub sahf add sbb xchg leave (bad) in insb jle inc mov nop pop xchg mov adc push adc icebp adc ret cmp xor rorb jo das popa jae xor movsb pop push es out jg mov (bad) cmp popf mov sahf sbb sbb fs hlt in shll aas je mov dec dec push jg adc out jae mov or mov sub jp bound xlat and jg in (bad) sub arpl jg cmp push pop mov (bad) jg aad add mov fwait inc fisubrl fnstenv rcrl cmp sub mov mov adc xchg xor mov push pop inc int3 cmc or test pop outsb lahf dec fstp jg jmp fist enter mov mov test sub pop jg push in dec mov aad es inc push cmpsl rclb xchg mov inc adc bnd lock cld adc cltd jo lcall stos pop or mov jg mov inc scas jo xor or in pushf jmp imul mov pop add xchg xor lods out loopne or sbb mov adc cld inc mov mov jo popf jle leave xor mov out stos dec pop movsb lret jg sar jp push cli adc ljmp jp sti ljmp fistl cmpb fstpl jg xlat mov cmp xchg test dec (bad) (bad) jg out and lock xor jg movsl sbb push xchg xchg mov sub fidivrl sub and jge jg jbe,pn mov popa mov data16 (bad) jle pop popf imul or jg loope xlat int3 push mov sbb outsl fsubrs inc mov call jg (bad) inc add shrl pop inc pop cmp xlat sar mov inc imul dec jmp in lret mov jb cmpsl movsb aaa fidivrl aas push mov jnp pop aam in add mov repz pop hlt rcrb adc fcoms out pop int mov movaps sbb add mov data16 aas jg xchg push xchg pop je aas (bad) pop popa push lcall mov pop push sub mov loope repnz popa xor call js inc rcrb mov mov and incl cmpsb jo outsb adc lds mov jg xchg cmp jle (bad) ret mov xor add jg inc xchg add aas jp (bad) (bad) aad test ret xor iret cmp das jg arpl xlat mov add pop xchg testl xchg push pop jg xor push jo int3 add lock xchg icebp jg inc lods insw sub jne aas (bad) ja jmp push or xor lret cli ficomp and ret xor iret cmpsb xor imul aad xor test jle sahf or dec divl stos not outsl mov pushf mov inc ret loopne sbb cltd mov test sub dec bound jno lds jle jne sti out addr16 hlt cmovs mov inc dec mov lret sub mov cmp sarl sbb shll pop cmpsb jne or inc (bad) jmp dec (bad) jne or sbb dec cmp dec (bad) lea mov insb cmp or jg cwtl js out jbe jg repz jmp movsb mov inc push sbb xor addr16 out les cli push dec sub cmp popf enter jg cmp mov out fbstp jg mov outsb pop jg roll mov lret fs orl cmp jg imul jle loopne scas and mov call xchg jnp cmp movsl pop jb sub lret rcll mov pop and jbe pop aas notl dec xchg sbb inc xchg mov outsl (bad) fcoml inc dec aas fistpll dec dec pop fs ja push pop imul aas jecxz pop xchg decl mov idivb add (bad) and push aas mov sarl out mov int cmp fistpll xchg dec je shrb cmp in int add jg fiadd mov rcrb mov adc rorl clc divb push mov jecxz sahf pusha test enter cmp xchg or lret sub repnz xor shr or xor jg sbb ffree jecxz arpl or jmp imul cmp cmp cs push mov lahf dec jg inc mov inc cmp jg lret (bad) dec inc mov jg es mov (bad) jg rorl xchg cmc or mov loope js mov testb insb (bad) jg loopne and jge mov or jg movsl (bad) lods xor sti rol mov pop dec jp js sub out into mov lock in xor mov add mov (bad) mov in and int3 jg mov xor jg add ljmp cmp out rorl add inc rcrl pop sti popf pop sahf sarb jg push or adc push push jg je popa andl sub xchg xor jmp leave test loop js imul mov rcrb pop icebp xor dec aas daa (bad) (bad) push lock aaa inc push or nop popa inc inc jg (bad) and hlt pop dec test or fwait sbb mov cmp js lahf sahf sbb push insl jp mov fisttpl negl scas or jg jae or outsl (bad) mov lods cmc int popa fwait mov jge cltd mov bnd pop call jno mov adc mov inc adc mov cmpsb pop adc cmp push xor jge aam popf in dec sub test inc loopne jae cmpsb xlat jg and popf fnsave daa cmp lahf jnp pop icebp outsl mov std inc repz jg inc add jg repz mov mov or jg es sbb cwtl mov lea decb enter int3 outsl (bad) sbb jg jno xchg sti arpl mov (bad) mov push arpl int3 mov rsqrtps test dec fiaddl aaa pop daa fs xchg mov lret add shrb xchg jg pop jae mov dec in sub cmpsb stos inc movsb dec and inc bnd ds insl pop xchg insb xchg jg push les sbb push (bad) in sahf cltd jg fnstsw pop divb jae dec inc test hlt jg add das inc xchg loopne ret jg sub push push imul jge jg (bad) negb jg stos lods jae jecxz dec jg mov add js mov jg loopne test jae sbb call mov cltd jge repz jmp std mov or add and adc je mov mov int out sti cmp jg (bad) fcoml xchg int3 add (bad) mov cltd jg (bad) jecxz cmpsb push cmp aas mov sub inc ja add xchg insb adc pop inc pushfw and pop cs ss sbb repnz push mov jg pop stos mov movsl addr16 js int in cltd xchg jne push jae aad iret jg pop push int fisubrl mov mov add inc movsl insl jg dec clc cmp fmul ret dec dec push test inc cmpsb mov das hlt mov mov fiaddl mov inc call push pop jg sti inc pop arpl mov sar sti dec dec sbb popa loop repz mov mov mov xor inc dec adc push jg inc das lea pop mov out jl dec add scas jg imul in leave mov mov add and cmp call shrl cmp aas inc jo pop fs mov cmp imul or test mov mov pop push jl dec pusha push inc jg jae enter or or and or add inc dec mov jg inc xor sti xlat mov xchg enter sub fs ja push pop push mov test ret push or adcl ret call jg shrb jg add bound jle cmp lds jg jmp or dec inc dec jg cmp jecxz mov (bad) xchg dec cli (bad) adc jg adc cmp mov sarb arpl jg push mov test movl push push aas push push sahf sti pop and sbb rcll jg das loop inc rcrb mov stos push imul mov mov inc mov adc push frstor test jg loope pop xchg mov push or jg mov out jg or mov mov xchg ja lret test ds (bad) daa fisttpl nop adcl adc mov ret pop lea xchg vcomiss and mov gs test sarl pushf lock icebp insl fildll and adc jg call push lea ret es lds sarl xchg int test jg jbe (bad) (bad) dec decb imul mov repz dec out adc xorl in fist sub push outsl cmp outsl inc popa fwait lahf mov lret mov jno mov fldt mov jbe mov movsl jg xor (bad) popf or xchg outsl repz ss jg sti rclb sahf xor lahf stos jo cmpb push loopne or out (bad) xor in data16 mov test adc sub loop in jne pop mov xchg test movsl lds in jg add push adc adc test (bad) mov ss out adc in repz pop dec mov mov push pop jl mov or aam jg mov xchg add sub cmp addr16 ja lods arpl aas subb add rorb call test loop mov jg cmp jl xchg stos push bound je add (bad) jg jl in cli bound jg ret push lods push inc jg cmp negb pop outsb loope pop cmp jnp fidivr and bound test les movsl cmpsl (bad) fildl mov fsubrp xchg dec sub jbe leave inc aas pop xchg mov popa jnp jg mov push or dec sti xchg cmp push or xor inc add xchg jg sub pushf jne idiv jl fs mov and sub repz push dec mov (bad) mov arpl jg cli insl inc addr16 arpl pop stc aaa in neg cmpsl in jg inc adc xor std inc mov mov jp sbb add into jae xchg or lea fstpt xor inc xchg fwait mov daa push mov jne xchg jecxz jo pop jg inc push insb pop jge out (bad) idivb lcall dec lods xchg js je dec sbb ljmp or test lea (bad) mov jo popl repnz jg jle adc dec add inc jg leave mov jg,pt xor repnz mov jmp int3 xor mov mov or mov jg lahf cli imul xchg test daa (bad) testl mov aas xchg mov mov and jle xchg icebp and inc pop and mov mov aad call clc push movsb imull sarl push sti js mov les faddl lcall sarb mov and test mov ret xchg push (bad) pusha std sub lret jg cmp dec lods mov test aam mov pop cmp jge mov mov and add inc pop je and rclb mov pop dec dec fwait cmpsl lcall mov loopne imul jle xchg scas jg dec cmp xchg aam jg outsl push (bad) mov and jae jg mov lret jg mov stos xchg lock mov sahf divl inc cmp fmull or jg cli pop fidiv (bad) mov mov (bad) aad cmpsl fistpll mov sbb (bad) fmull push repz jnp das push pop out mov aaa loope fistp jg and dec dec lds aam sbb mov mov xor sbb push (bad) mov lret mov dec out jg jo jns push imul mov dec daa cmp push jmp jo daa or lods into pop imulb outsl mov jo mov ljmp jecxz cs mov adc test fistp push jle sbb sub xchg jg lds add aas cmp call out inc jecxz push movsb inc xor jg add add push fdiv mov sub test in push inc add xchg jg cld pop imul imul fisttpl mov (bad) fdivrl movzbl sbb jle out jg imul jne push js push pop adc jge mov fnstcw cwtl test pop cmpb inc pop mov es sub clc stos xor jae pop jg xor jl mov mov movsb cltd or push out jmp jg cmpsl (bad) iret cmc dec inc pop jg mov (bad) (bad) jg sbb jmp aas sbb mov out pusha push in lcall aas adc jmp jg mov aaa push jg cli sarl and mov inc int (bad) in add jg (bad) cli mov test cmp jg addr16 ror mov in jp jmp iret adc mov data16 inc push cmc test mov push xchg popl sbb aad mov (bad) aas jmp mov push repz mov jg int and fstps and cld and sub and xchg dec jg xor (bad) mov daa mov jg lcall mov in or lahf jg jmp and test scas push mov lock ret in lods pushf inc dec aad aas leave cmpl movsl jg into inc pop or cli jbe pop mov loope push bnd mov pcmpgtb xor inc or mov loop scas mov mov pop in fist lock jg and leave stos sarl push lret xchg xchg inc ds icebp jns or into scas pop decb xor push lahf rcrb loope retw inc test mov les pop mov fdivrl xchg das je inc in cmpb hlt andl rcr mov pop jp enter push jge jle cmpl shrl inc push mov xlat lds es leave jg inc ss and cmp dec sbb jg xchg rol dec add iret push fildll push push cmc push mov imul adc out jno ficom and jg xchg lret dec (bad) js test pop add dec (bad) jge fs mov xchg aas pop cli arpl jg cmp mov mov push jnp push or insl jg add nop mov aas and jbe inc push jo mov mov daa loopne insl add jg mov add addl addr16 dec push jg mov xchg lret xor int and in jp dec int3 fdivrl ljmp jg pop aad push mov mov sbb cmp jg mov fstpl jg adc mov jg jne ja lods cmp pop sbb mov push xchg mov mov add sbb ret sub jo leave xchg dec mov jg sbb cmpb in lret testb es jg lahf ret ffree in adc in addl or add popf sbbl jmp fwait adcb out push mov in inc jg mov dec (bad) mov mov psubsw ss and test mov js test scas inc testl and pop sub push jl inc jg cmpsb push lods ds xchg sti shll jg push add push jg and push jne daa push jg xor xchg xorb inc aaa jg dec sahf fisubrl sti jae (bad) push bound dec adc aas push add (bad) push stos pop fnstsw adcl mov mov adc jg (bad) pop sbb dec daa jg adc cmp stos jg push enter fistp pop mov imul cmp adc ret jg movsl test and sbb lcall jg (bad) mov lock int3 mov xchg add dec xchg jg push in cwtl mov iret jg mov ljmp fistl mov scas push fwait jns into sub push pop jmp dec mov jg pushf loope inc hlt push ljmp mov jle push dec sub jg jae lahf sub cmp lock xor jg dec cmp out mov mov cwtl mov les mov dec hlt fsubl lods int jnp enter xor or dec ja sub inc jg mov lret nop stos fnstsw jg test add pop movq mov jno shll je (bad) repnz add push push mov rol stos cmpsb inc arpl mov dec sti inc aad pop jne inc sti jge xchg jg mov insl scas sub mov aad push add jg adc add into scas out pop mov daa aas cltd sub sarb dec sahf fwait dec cld xchg push mov roll mov dec outsl lahf inc call (bad) stc adc xor sti add test push or adc mov dec push sub xchg test (bad) test dec and pop cmp add inc ljmp mov lods loop ds adc or pop shufps xor sbb jg jg inc (bad) imul ss outsl dec pop mov sarl std (bad) fnop ret pop xchg inc push lret push pop cmp pop insb dec sbb mov xchg sbb jnp ljmp sbb test jg pop cmp xchg notl lcall or inc sti xor adc call leave xchg dec add aas cltd call mov pop cs dec jmp jg inc dec scas pop ret es jg cwtl add loop pusha stc out sub jg mov push inc mov iret push les mov add sub pop psllq pop arpl fs or sahf (bad) cmp popl insl mov (bad) pop cs loop aad mov dec jl jg xchg call xchg aas or cmp mov pop pop pop xchg push imul repz enter xor fisub (bad) pop mov dec mov jae xchg scas xchg fisttpl inc mov xor sbb mov mov imul inc sbb dec dec fnstcw push inc addr16 mov cmpsl mov sub repnz out cmp sbb rclb andl ds inc or lds repz mov lock inc (bad) cmpsb aas jg enter ja or sbb imul aas inc pop incl mov (bad) mov je test lret jo les sbbb mov test jg add mov xchg test sub pop sarb mov outsb cmpsb jg cmc jp cli jne idivb sub dec jge xchg inc add jg and inc and jno fs movsb jo dec popf add je jg mov test sub fnstsw cmp jg,pn and mov mov dec xchg push fadds jg int3 mov out jg movsl data16 cmp xor push pop arpl jns xchg jg imul js fldl and test sbb jg mov xor jno push pop or repnz and xor aas scas out das inc push pop arpl lods jg mov out mov sarb mov imul incb mov mov sub enter rcll jecxz jg pop lret sub je (bad) cmpsb jg mov int mov leave into or mov and jg and rolb jg xor cmpsl mov cmp inc sub inc mov mov and push sub jg mov mov loop add faddp popa int3 mov sub outsl jg (bad) inc adc mov sub xchg sub in jg sub out mov lds aas clc push jg cltd jbe lea xchg icebp jge loope imull rclb push aas call jg imul sarb (bad) pop insl xchg cmp and xor xchg jg aam or jg cld sbb mov mov pop mov mov loopne fidivr les jmp xchg dec cwtl fcmove pushf jg jno adc jge sahf jg mov je (bad) or lahf inc bound (bad) mull cwtl movsl or xchg cmp cmp pop sti rorb mov jg adc orl shl xor mov cmpsb dec push cmp and xchg xor idiv xchg xchg jl je ret clc jg add in sub ror dec jg mov or xor sahf pop mov push rol dec jg xchg enter jmp mov jg pavgb jns (bad) rcrb xlat ds sbb sub (bad) fisub repnz popa out sub std jg pusha cmp mov cwtl cld push sbb int3 jg mov xor dec out jg inc or mov mov dec fwait (bad) imul (bad) loop xor mov jae and or pop stc lret iret stos add les test jg cltd in gs pop inc lds (bad) jno inc out (bad) jg push and adc imul pop (bad) ja outsb cmp xor bound jo mov sub xchg mov jg int or fistp xor sbb adc jno dec test push jg stc movsb sbb or scas jmp ss and jge xor inc dec inc pushf jg and mov jg add js pop push inc adc push mov pop (bad) dec rol out mov ss subl scas lret dec mov mov xchg sub or mov cltd jecxz hlt jg popa sbb (bad) cmpsl popl jg ss xchg dec ljmp inc int sbb jae jg sub sahf jg xlat imul mov call test dec xor jg imul cmp out jg ljmp or lods push (bad) jnp out test mov sbb stos jg js and js add insl cs aam jg aad movsb and imul pop jl je lret aam pop jae bound rorl nop jg ljmp jg push cli mov aam insb pop cmp rol jne jge out fstpt andl stos addr16 adc jmp xorb loopne,pn sub das ja inc add jp and js mov pushf mov pop int3 dec iret andps or repz ret pop mov mov fistpll mov pop into movsl mov ljmp ret mov in sbb xchg mov inc mov add ret add scas inc add idivb cmp inc sti push in dec fistpl pop mov jg in cs rorl sbb scas sub pop insb mov jg push jmp lds mov jne jg pop shrb jecxz xlat push jg (bad) pop cld mov add (bad) jg add sub or jnp sbbl pop xlat jg call xchg jg pop hlt rcrb mov inc or jg ja add test pop inc inc cld out mov mov jl jg mov sub jg sahf sub xor mov push addr16 (bad) loope jg (bad) jno aaa push out inc jle jae jnp orb arpl add cmp aam shlb mov push xlat inc test fmull pusha push lahf jg (bad) cmp mov ljmp (bad) sahf lahf aas shl mov pop imul sbb dec sub jno jmp inc (bad) jg rorb jo cmpsl jg dec pop lea mov xlat es (bad) punpckldq cmpsl test fs jne fild cmp lods xchg fdivs pop add repnz pusha jae,pn dec inc inc and inc mov pop mov es jg scas fstpt sti cltd sub adc jg push cmp mov pop push mov pop sub jl or sbb je push fcmovnb pushf ds aad loope pop dec mov push sti jecxz pusha test lcall out xchg fwait mov icebp jg jnp frstor cmpsb adc cwtl jg mov xor mov jg mov (bad) inc cli imul inc pop pop nop scas mov push mov inc cmp push (bad) out mov test movsb sub push jg dec aas pop or cmp jg data16 stos xor adc pop xchg sub mov fisubrl xor fsubp inc sub mov jg lret xchg ds cmpsb sbb push jg push or inc aad stos jg mov jl mov sbb rcll xchg cmc or lea hlt je ss sbb jg pop xor jg scas (bad) mov push clc mov xor fcomps out mov sbb aas inc jg push pop leave pop mov jg stc out cs movsl insb cmc inc jb push daa ja in pop stos adc dec dec mov stc sti inc sub mov push fcomps jg jns push sub icebp cs lea jmp dec fcoml je jnp aas mov cmp xlat xor xchg jg dec int3 call stos mov fs lret lods mov fistpll cmpsb lods adc (bad) dec inc aaa stc lret mov mulb push ret dec sub jl push mov pop add mov or test pop jg inc lret gs pop jg push inc jecxz xor jg (bad) jno ja cmpsl jg out test lret mov inc stc push push xor lods rorl jg popa mov add push jg xchg pop leave jb,pn inc jg fld push cmpb clc test mov jg mov leave (bad) mov cmp (bad) cmp sarb pop faddl int negl sbb xchg push shrl stos movsb je or gs add sub adc lock cs daa mov dec mov aaa rcr outsl pop popf mov cmp add movsl cli fmul pop hlt imul call (bad) xor in jg sub jecxz and push mov jg insb rolb lret cmp jg lcall jg pop jg mov mov fs jbe pop xor jg xor pusha xor cmp adc movsl jle mov dec and or mov in jbe push xchg inc add jnp mov arpl int3 cmpsb xchg and mov sti (bad) cwtl pop ja lock push insb jg sti add or andl cmp leave jg jg push std xchg outsb inc ret (bad) mov sub aam jg push test out shll (bad) push pop pop in xchg mov inc add jbe add jmp lods repz aaa cmp bound mov loopne aad and pop dec pop pop cmpsl sub xchg mov aas push adc into loop inc mov test fildl or cmpsb mov inc and jg xchg out sub and mov push mov jg inc jbe outsl xchg (bad) aas out and out xor mov mov mov aam mov shr int mov ja,pt fsubr inc jg cmp mov dec mov push (bad) hlt inc jg cmp lods jle rcrl insb sbb test mov frstor sub icebp push and das addr16 adc outsl mov icebp sub sub nop add jl jg (bad) daa ret imul push ror cld jb js jle inc push in popa jnp scas or js push lods dec adc sbb lods and (bad) push pop jo sar out arpl gs pop scas jle sti xor mov adc mov out sub adc cltd (bad) bound mov (bad) lea loopne fmull jbe jg cmp js cmc mov xlat pop loopne cmp fidiv push outsb lods push mov shl mov jg pop inc cli int add jg sahf fadds push mov xor (bad) js add mov sarb add xchg cmp jg dec fildl and jg nop lds fwait lret mov lahf mov inc xchg or out cwtl cmpsl sub insl movsl lock loop lcall pop jle or jg mov pop adc pop icebp lods and test jg jmp sub fdivrp dec pop jg and (bad) mov iret dec gs xor dec jmp mov test cmp ds popa je push int daa inc mov scas inc or jnp ret out cmp idivl adc aas inc outsl pusha test mov mov xchg fmuls jg mov sub scas ja out cmpsb push jg mov cmp scas in adc pop loopne dec jmp push movsb pop xchg jg mov sub dec stos sarl push je int3 jg xor dec add mov insb cltd and jp lds andl pop fsubrs push cmp (bad) mov cli lcall lahf inc jbe or mov test add outsl sarl rolb jne in inc aam dec test ret aas jbe sahf cmp ljmp mov xor and nop leave add pop jg in aas les (bad) inc inc jge mov repz mov pop push jg jns fadd cwtl cs imul hlt jg pop mov add xchg mov (bad) (bad) pushf (bad) in addr16 addr16 rorl in sub sbb jp mov jle js lods inc nop jg ret mov mov in or jg out sahf push ficoml xchg jg add cld mov or sbb jmp outsl in jne cmp ss test nop jg addr16 cwtl scas push insb jg out and mov mov leave aas test pop xchg jg mov call push sub pop jbe pushf add sub inc jg in pop imul mov addr16 es int3 mov lahf lret in pop adc jg pusha stos loope add scas imul pop (bad) out pop dec mov jnp push push dec sub mov push mull jp jg enter xor and ds stos dec inc orl sub dec jecxz push inc jg and jmp popa scas aaa dec adc sti add mov iret cmp push clc icebp ljmp fistl jg repz (bad) pop cmp cli xchg and jg fist leave lods pop cs and pop jg bound jae xchg pop jg (bad) jno sbb add jg pop adc shrb pop adcl xor and pop mov jg mov call pop dec dec ja pop lcall gs lock adc xchg jg add jg cld add push stos pusha mov xor repz push inc push mov ds movl push add xor jle dec (bad) fiadd jb ss inc cmpsw cmp stc inc bound mov xchg repz jmp pop mov pop enter jle pop (bad) jb popf inc jnp adc scas and inc mov push jg in sbb and mov xlat inc xor push pop fisubl and adc std and pop mov jno mov hlt mov jg xor aas leave ret dec xchg dec sbb jg call mov jg int3 sub loopne js xchg push sub sarb xchg mov lea hlt push mov (bad) xor or nop ljmp jg in sarb mov cmpsb into (bad) mov push cli andl jg insl add jg in sar inc je cltd mov in fidivrl fisubr mov pop mov js mov lods pop adc sahf aam sbbb cmc mov sub pop lret inc sub insb jg insl add cmp adc xor outsb mov out jns pop push push fnstsw sbb or in inc cltd enter xchg dec dec dec jp xchg ljmp inc jg std xchg mov (bad) xor jg push lcall mov test jl pop jb add call int3 push or ja dec divl (bad) adc ss mov ret jg dec pop mov jg ret and jg sbb jbe mov bound mov mov sub push mov pop rcrl push stos mov (bad) mov negl cmp cmp arpl enter (bad) jg inc push adc mov or sti inc (bad) push dec outsl inc cmp xlat jg xchg stc fldl addr16 ds loope in ljmp push insl lods adc inc and lds jo repz movsb in mov sbb mov leave out jg jae add jg push mov lret arpl cmp xchg cmp cmpsl aas jae xor bound mov xor imul incl nop pop add je inc adc sub inc xor pushf push fs jg push or in fimull cmp frstor add inc mov adc dec xchg cmp sti add fwait push loope out (bad) (bad) dec addr16 push mov not repz xchg into inc ja aam mov push scas dec and lods jg stos ss xchg push aam jg jl or jg jno loope,pn xor pop dec js lock aam aas pop js bswap push in and dec mov dec out daa aam sub mov (bad) ss outsl push sub js outsl add jo mov xor mov std lahf jg sub pop push pop inc outsb inc cmpsb and mov jg jnp (bad) adc mov je dec into test aas mov pop sbb dec ds inc jge inc jg pop push xor jg sbb mov jg push cli mov (bad) pop pop jg pop aas rcrb ret sub out push push xor pop (bad) push les jns (bad) sbb hlt aas jg dec fnop xchg inc aad sbb fcmovne sbb repnz cli inc and ljmp js cmp fldl pop push sbb mov pop aad jg test jecxz decl mov jl jne mov ja cmpsl mov pop aad into lcall in inc mov dec mov dec jg mov dec mov mov loopne push leave icebp jo jg pop cmp dec xchg cmc jg cwtl xchg and jg mov pop sahf sub jmp or mov mov push dec cmp or mov (bad) stos ja jle test sub and insb lock dec nop sbb inc imul jnp aaa imulb xor jno int3 sahf xchg mov xor in mov lcall in fwait aad pop push sub mov jg nop test movsb arpl inc fstps pop int3 sbb or mov hlt aad xor mov jle pop jae push and mov cmpsb mov in (bad) jg mov test add mov mov push mov xchg jbe (bad) (bad) notl leave scas lods add and xor call shll and sub dec aaa pop add pusha pop and dec inc cmp stos mov sarb loop xor aam jae xchg in or fs mov adc pop aam outsl cltd jg jle incb ret sarl stos cld cmp nop lret mov sbb insb inc xchg jae xchg mov jg jbe popf bound shll icebp popa stos stos mov dec int3 outsl inc sub pop adc push out jg push test sbb test adc adc nop jg sbb sarb pop (bad) sbb and into inc aas imull mov push js xchg fnstsw and fdivr aam les push ret mov into add dec jg mov stos sbb out jg sub push enter (bad) rolb jmp outsb xchg pop icebp out inc and jle dec loopne jg sub fdivl popa add aas xchg or loope or ret dec jne jb aad out stc (bad) loopne xor outsb scas iret nop or sbb test push repz pop mov dec push jg dec jns adc test pushf sub test jg xchg (bad) cld movsb sbb lcall jg out leave inc je push and into cmc fmuls push sub mov push sub inc push or popf (bad) push or sub out aas scas rorl in jg,pn push xor enter js div outsl mov xor add or lahf and cmc fcoms jg cmc xchg icebp jg sub hlt pop cmpl and pushf jg and sahf or fcomp mov jo in mov mov nop adc sarb mov jg lds jg,pt mov add popf pop sub and inc xchg loopne cmp mov pop jnp (bad) insl mov addr16 push sarb dec inc cmp imul jg imul mov int cmpsb inc adc sti stc imul pop in aam jg (bad) ja ss xlat lods jg jns push jnp jb pop cmpsl loop inc mulb sub jg add (bad) int3 jg jno fsubs inc mov mov aam insb loope loope jg pop mov imul sbb jl jge push in movsb jg or push mov and das xor mov mov add push aas push pop getsec add sbb cmp pop stc jg jo mov jg pop push out and ljmp imul mov leave jg test jecxz ljmp xlat jg sbb aam ret es pop rcrb inc mov dec ror cmpsb fs jmp cs or mov (bad) jg xor or adc push adc cmc jg xlat repnz ds into inc mov jg lods fcmovu adc jg gs mov je mov lea mov sub fwait xor jg jmp andb pop mov push mov das mov pop jle icebp jg fidivr adc mov cmp repz mov xchg jg xlat dec cmpsl jae or push daa xor aam inc lock aam cld sub jg cmp sti cmp xor jp,pn fdivrl leave and (bad) adc jle mov push push int3 jg cmp cs fsub sub ja cmp mov jp mov jle call adc jnp push sti out dec jg ds pop negb add inc mov (bad) mov pop scas mov push cmp sarb std xor lret or in cmp pop push jg pushf rolb xchg test cmpb idivb dec lods and xor aam repz (bad) pusha loop outsb fbstp leave stc loop je or inc push or outsb sbb mov (bad) addr16 pop lahf aas push lock push sbb popf iret jg push mov ja sub repnz fwait and test sub fdivs and insb mov addb push jl add mov sbb jg pop dec fistpll mov insl mov sub inc es adc xchg xor xchg push jg imull jg rol je aad aaa mov in mov and pop push sbb stos add cs dec xor lods push adc add (bad) cmpsb es rorb scas sub adc sub iret sub jg xchg inc idivl sub mov icebp mov jg lock pop jg fidiv dec addr16 loopne clc adc in mov jo jmp inc idivb jg and cmpb mov sub (bad) sbb mov (bad) insl jle cmp add mov xchg inc mov push jg jl dec push fmuls fdivrl mov fidivr adc sarl mov data16 (bad) das enter push dec or divl cmpsb mov lcall movsb push push cmpsl lret outsl mov and hlt jg cmc test xor push push fs lds jmp jecxz dec xlat xchg jg add clc dec popa jp stos fldl pop pusha nop mov std inc mov dec sub inc mov lods pop xchg mov test adcb mov jg jns sbb add insb out adc mov pop scas call das mov test pop mov iret jg xchg sbb outsl mov and in push lods daa cmp cmc out and jbe dec lods jg push loope icebp insl ret sarl dec xor (bad) rolb add into aas jg adc xor inc pusha pushf sbb mov stos push sarl adc in sbb inc aam aaa push insl lret jg mov arpl add mov mov inc mov jg int out das fdivl jg xor out int3 cmpsl insl inc cmp jns dec (bad) inc (bad) pusha sub mov sti fdivrs or sti pop jno sbb and inc xor jnp std adc in cmp add jg mov movb jg lea sarl inc xchg or push inc test (bad) ljmp or or push cli sti cmp jo daa fcomps icebp inc movsl jg iret mov aas jg aad pop mov lods test test (bad) mov mov jp or inc xor (bad) fcompl mov pop xor fisttp rolb xchg dec mov jg (bad) int outsl rclb push jns cltd out sti mov dec and pop popf mov mov cmp sahf stc mov inc mov std jns lcall add sbb mov mov jae pop mov cmp pop push movsl gs push sbb inc mov pop jo mov mov push push test pop aad sub pop (bad) jg and jbe ja js push hlt mov dec mov adc cli and mov jg outsb jg int3 pop (bad) cmp cltd lret jg insl cmpsl je aaa cmp aas (bad) mov sahf cld bound jg add cmp mov scas lret xlat mov push jne adc and imul push push push inc jle mov jnp in pop (bad) sarl in rorb xchg jg jg ds outsb lret lahf jg fisubr movsl xor jbe xchg jg lock adc xchg outsl jbe and jg sbbl mov lahf jg lods nop mov cmpb xchg in lods sarb pusha mov data16 jo es inc loopne adc pop fistpl add jg lahf stos (bad) push subb ds or stos mov xor jb insl xchg xchg lahf mov jnp xchg xchg pop lods loop jnp fxch jg and jae imul aam jg jg lahf push fidiv out cmp fbstp mov loopne push mov ret inc or aas jg (bad) mov jecxz push or adc leave xor adc movsl insb js fmull jg adc arpl xchg inc mov lods mov int3 xchg das pop je jp and push cmp cwtl jg jg lods pmuludq push push imul jp bound aas scas mov aas pop jmp (bad) das in pop lods aas ds push subl push sbb cmc stc gs jg imul cmp jg xchg add rcrb mov push repnz pop icebp loope cs jg dec jmp pop mov and popa cld sub mov out and or mov dec jg (bad) and jg jne inc lods mov movsl addb or mov or or dec jmp jbe incl cltd inc jge sub mov jmp cmp notl jg fisubrl sarl inc out and sub inc jnp adc outsl jg je mov jg mov jp jg in test popa jg ds jno sub jg push pop stos or insl xchg adc mov or outsl (bad) aam or mov inc aas jg lea pop cwtl pusha in jl push dec scas int3 xor or sarb sbb sti dec cmp jnp mov xor repz jg loop ljmp xchg pop inc lds xor push (bad) movsl dec jg sbb repz adc sbb int3 pop mov dec dec pop inc rorb pushf jg decb lcall pop (bad) stc mov int3 jns adc jg arpl or pop mov sbb jge jp es sbb sbb dec je inc push dec mov push jnp adcl out inc stos fldenv jg xor fcompl jg sti out add (bad) lods (bad) call adc inc (bad) js int lret roll cmp daa hlt pop inc sub mov fnstcw adc (bad) (bad) ljmp clc popf mov lahf imul aam push pusha aas mov jge pop cmp gs jg and xor arpl ret mov inc sbb imul jl cmp scas cs rorb add jg out dec adc fsubl xor push fbld inc bound mov inc mov outsb jg (bad) xor mov out mov pop fwait mov jg pmulhuw and add pop ja adcl adc cmpsl inc mov test call jg arpl lea jbe sbb fwait loop pop stos cmp push and lea sub pop mov pop arpl dec jne fsubrl dec or ja adc pop mov cmc and out mov push and mov je jl (bad) mov adc mov aam mov lret sbb mov mov stc fildll dec test test xchg cmp aam jnp sub ja add push pop cmpsb and jmp sbb test in mov mov xor rcll loopne jle sbbl adc sub push xor push xor jg jp xchg fisttpll jg push push and xlat adc inc loop je add add inc xor (bad) xchg and inc lret shlb mov dec pop push mov fwait push jg pusha loope hlt jg fdiv mov jp shlb mov cwtl add jg mov sarl adc or jl mov (bad) jg dec sbb push jg add jo inc arpl jg loope mov jg xlat repz jno cmp fistp sbb inc (bad) lock jg test leave mov xor dec test adc ret xor inc push jg sbb lea add leave push into cli dec lock jg xor lods stc pop dec mov pop sub mov xor lea (bad) out jg jge add inc push sbb xchg cmc rol pusha sub test push dec lods xor jg push cmp and push (bad) out push push decb loop jg mov cmp sub and out push lea movsb mov inc gs xorl add push dec push adc sarb (bad) out iret add aas push jbe inc xor fildl mov (bad) loop lods ja mov sbb sub xorb push pop cmpsl dec cmc and pop inc enter mov cld or lahf xchg adc jne sub xchg push pusha daa xor inc jg mov leave jg jb mov loopne jl cmp ret jmp (bad) movsl mov addr16 insb jg int3 test arpl xchg adc test xor repnz jg sbb shr cmc and (bad) jg pushl mov shrb (bad) xor int mov les dec push inc jg out pushf add test out inc jle (bad) adc push push add mov outsl lahf ss outsl test pop push pop jle fs sarb mov inc cli mov xchg inc or aaa out repz call out lea je idivl push sbb (bad) cmc jg bound insb adc xor mulb cmp stos jle repz mov jo std dec (bad) aas stos stc nop aas cmpsb int inc out call push in fs or dec arpl fsubrs cmp loop xlat clc idivb pushf mov jae loopne jg out cld stc mov int aas jno imul adc jg scas inc and or js sub inc mov fsetpm(287 cmp sub mov in pop test rorb hlt mov adc xor (bad) push (bad) jno jg cmp add into lods xchg and pop jg,pn orb or cmc mov jg rcrl adc shr xor or (bad) fmul fstpt or fs ret xchg notl mov mov inc stos jg jmp xlat test dec mov pxor mov loope inc ret add xchg and sbb sub adc orl sub or pop test sbb sub jg das or or adc jbe cmp jno push pop xor mov mov lahf insb repz js jg mov or push cmp iret jg xlat rorb mov out cmp mov sbb test int push jg and es jl jno mov aam adc push pop insb aas dec mov cmp dec lret ret mov mov div cwtl jg push mov loope (bad) xchg push mov jecxz repz (bad) jg lret clc data16 fldenv jg mov int jg (bad) pop in aad shl jg add push and xchg mov add int mov mov fcomps shlb inc adc dec and jg cmp flds push xchg mov push push xchg (bad) test mov data16 lret pop sar and sbb sub xor jg adc sub addr16 and adc (bad) stos add sahf jg xchg adc sbb mov dec int int3 mov lea cmc clc pop sbb rcll cmpsb (bad) add scas push movsb decl adc cmpb cmp dec inc or mov add pop dec mov jg es push ret aas jg clc stos push (bad) cmc or cmp mov pop subl cltd push mov jg fs mov mov data16 dec cmp stos lds lahf pop pop repz lods pusha mov push mov (bad) jmp sub idiv xchg mov imul pop jg add daa dec xchg mov xchg dec mov jns mov jg mov sbb push mov icebp dec and mov out lods dec insb jg mov pop in push jg ss mov and cmp nop or data16 out dec loop adc jg xor idivb pop addr16 inc loope fistpll pop ror inc mull push mov xor push jg sub scas mov mov movsl movsb jb cwtl outsl xchg push loopne aas repz fildl inc push leave inc mov jg movsl mov sub scas push insb jmp adc sbb imull mov pop pop xor clc xor jg sub jge jns inc jg dec (bad) int or add cmp jae adc dec in inc pop jg jbe lods xchg push fwait jnp adc dec das (bad) add add fistp mov pop (bad) jle sbb add jbe dec ljmp jns js imul jmp and addr16 push push (bad) popf pushf jg repz leave cwtl rorb sub jg jg cmp stos xchg xchg jg jle cwtl and push (bad) jg xchg js xchg push mov (bad) dec or pop mov test jecxz mov mov fistp (bad) out lds dec pop std sbbl neg ja and aas add dec pop mov push mov lcall inc test xor jle jb (bad) fisttpl sub cli stc pop and std xor xor out fmull push sti into jae negb outsl neg jg daa sbb mov jo jg rcrb push mov je fstl and jl jg sahf inc push or gs repz test jg ljmp jg inc and mov pop mov adc mov insb loop cmp adc lea push addr16 enter sti push pop add (bad) mov mov pop push ret mov xchg and test pop lds (bad) jns lahf add sbb test lods imul xor cli adc push ds cmp hlt or fnsave stos adcl dec add pushf xchg (bad) imul jg negb cmp fdivrs ss mov daa jp icebp and mov rclb lea nop cmp sbb ret repnz mov jg sub xchg outsl inc jg mov dec mov mov int dec mov ja dec sbb pop jg push sti jns inc adc das (bad) (bad) icebp gs jecxz adc jg sahf add mov xor jns movsb mov jbe mov push cmp in loopne jg movsb nop mov jle sti jg mov jmp mov fwait cmp in jae jg mov pop xor rcl fwait sahf outsb dec clc xchg sub xchg cmp fsubrl pop mov mov popf jnp jp lods jg call pop (bad) jg addl xor ds pop dec mov aas repz loopne jl xor sbb int cs or mov fiaddl push sarb mov mov cltd lahf lret or jno xor std shlb jg push lods je sbb adc and in inc imul jmp mov pop js loop fwait adc lds mov fidivr pushf sbb rorl outsl mov jg push sahf mov loopne mov arpl sub leave mov add insb arpl or xchg mov fdivrl lret sbb ds jg inc (bad) jno les (bad) jb mov dec fidivl push mov call mov subb mov stos xchg popa mov inc mov sub and mov cmp test push arpl mov mov daa jb ja mov lcall jg cmp (bad) mov insl jg jmp mov jg leave mov sbb insl sarl push xor jg aas scas mov fmul add mov sub xchg les jg pop cmp mov out imul push pop jg xchg test jg lret aaa sbb push pop mov push insl xchg (bad) jg xchg mov iret lret dec pop jg repnz mov mov pushf push stos loopne dec pop inc gs dec imul xlat push shll xor pop jg fiaddl jg mov jl cmpsb push jno loop shrb fnop sub sbb cmpb cmc movsl popa jnp jg aam fs loopne add fwait scas in cli push es aas mov cmp jg mov and add jg adc xor push enter cmp jg jae das push jbe xor gs mov and xor ret mov fstps imul mov movsb jl jg adc ror mov jmp lods pop lds jg outsb push push cmp (bad) xor xchg hlt daa fcom (bad) leave xorl mov dec ljmp jg aaa data16 pop lods or dec fild jg nop leave rol xchg or testl or xchg outsl jge test xchg jno stc mov out xor aaa (bad) inc cmp fisub mov jg divl arpl pop pop stos jmp cltd jg xor add adc jg lcall jg sbb sti mov inc (bad) mov add mov jg dec loopne mov mov mov popf push dec int3 cmp jg xor (bad) jg xlat imul cmp div jg jl jp stc cld sbb or cwtl or push fs and dec inc xor jg jb,pn jbe lret and pop mov rcrl xor jg sub imul (bad) cmc or cmp imul and mov repnz pop inc cmp stc and jb aaa xchg fwait aas and bnd sbb mov jmp iret push pop jae and adcb cli mov scas dec out mov jg repz lock dec mov add fwait mov mov mov inc (bad) call xorl xchg sub sbb lock inc xor jg (bad) xchg mov lock mov enter inc lods adc mov adc adc ja imul dec pop scas imul xchg push push test (bad) mov mov jge mov dec sub jg jb int3 nop fs jg hlt adc mov pop mov pop add xchg mov imul jg gs push sahf jecxz jg mov lods mov jb das daa mov shlb or xor (bad) (bad) aas pop push push sub (bad) mov jae jg jecxz leave pusha pop xor jg (bad) (bad) pop adc test mov pop add dec sub outsb sahf std repz lea xorl mov dec lcall pop sub lret push push scas fistpll cmp adc push insb mov cmp test testl mov mov push push sub outsb idiv push dec jle scas repz pop js popf test ret jg jl lds cmp pop cltd xchg dec stos cmpsb mov jg adc mov aas pop cmp stc sahf dec orl jg dec xchg cmp stos jg rclb jns sbbb leave jecxz or or js jg mov cmp sbb sub int3 push aaa ljmp push or stc shll jg ds push sbb xchg shrl pop cli push sti (bad) fwait sbb outsl push in inc mov popf xor cmp lcall sbb cmpl loop or scas (bad) jg xor xchg mov dec sbb (bad) fiaddl aas lds inc inc out jno dec jg or mov push leave xchg scas push xchg mov jmp scas add cmpl hlt or dec aas lret xor aaa sarl or jg (bad) xor into mov add push inc fist stc js sbb mov ret jg leave pop jne addb insb loop jg push out aas jb jg (bad) iret rolb shrb (bad) out mov data16 jo adc int xchg mov in jmp jle sbb outsl je mov add jg push call (bad) and jg jle jl lds sti push push push lret mov das pop jg,pt mov jnp in addr16 cmp (bad) mov mov jg mov and lahf jl and movsl rorb sbb xchg movsb cmp cwtl adc pop push iret xor sarb movsb mov cld jg repnz rclb sti jb stos and sbb jge xor mov ret inc xor ja inc jle xor pop sub nop or sbb cmpsl les jecxz pop std cmp inc clc push jg inc cmp out rcrl xlat out cmovp insl cmpsl aas ret (bad) jo jl lods call shll sub cld mov outsl ret stc jae jg idivb pop and cltd jg mov mov jl mov stc jecxz push mov pop jb fs test dec lock lret sbb out mov mov loopne scas push or insl xchg sbb xchg mov mov adc jg mov lret inc sub xor outsb jg push gs sti push xor adc sbb mov mov push xor jg fs test (bad) lds cmp mov das addr16 dec mov or pop mov cltd mov rcr out lock mov mov pop xchg inc loope jg inc mov push jg das jno fdivrp data16 jg sbb xchg lea mov dec sub aad jg jecxz jmp mov enter pop dec dec aam lock pusha jg mov daa ljmp inc cmp add jg sarb or aas leave xor mov push or dec mov movsb loope cmp pop jg fisubrl adc test jno mov and xor add cmp sub addl imul pop jg fidivrl or sbb jg push repnz aad mov hlt (bad) xchg pop cmc jg xor adc (bad) cld aaa add bswap aas test mov (bad) imul mov adc sub popa jg push pop clc jg jb or dec mov jecxz xor fwait push mov xor mov pop xchg lods xchg loopne das aas mov movsl lea jmp aas inc dec (bad) (bad) dec cmpsl out dec fldt rorl push out in jg lcall cmpsl xor insb cmp cmc stos xchg loope lret int3 jg lods es into inc mov sbb scas iret (bad) and lods daa push xor mov push pop push inc add and mov pop cmp ja add popa dec inc into cmp jl jo push out pop sahf push add xor and cs out fcompl dec jns test in mov inc sbb insl fwait mov (bad) cmp imul jl cld push jg cmp mov sbb js scas add mov cmp jp fnsave adc (bad) dec add jg lret std inc mov cmp jno loopne stos sarb jae popf add dec leave cwtl mov xchg aad pop push cli ja cmpl in cmp pushf sbb addr16 jg mul cmp sub dec jle pop jo jg test and fsincos push aas dec mov adc adc jg dec insl ss xorl in push pop xchg jg enter sub in lea (bad) add mov lret xor lea cmp adc loop jg mov and xchg push inc jno sbbl push xlat jg xor out lea jl scas lods jnp imul jns inc stos inc and mov sbb stos mov dec jb shrd cmp notl dec jecxz imul inc cmp push inc imul cmp inc ja mov lea es enter or stos call lahf sbb dec mov or xchg pop loope push xor lock mov (bad) jb sub adc mov dec dec xchg xchg loop jg adc (bad) ljmp push or sti std or inc fldt orb cmc je jae lods mov cmpsb sti ljmp std es jg mov repz mov out leave inc dec jl jg mov mov mov (bad) dec sub (bad) bnd std out shrb pop xor add cmp cmp or mov xchg adc jg call insl jl insb mov xor push pop jmp cld int3 xchg (bad) imul xor or cli mov push jg ljmp mov fisubl xchg sbb jbe sub xor lea out (bad) mov nop jg push sub sahf test insl pop add (bad) dec sub clflush push mov (bad) mov (bad) push mov int mov add pop mov dec ja sub jecxz arpl xchg dec loop jg xchg mov sbb mov jmp xchg popf push lods fimull lds or dec adc lahf mov jg dec lods xchg cmp bound cmp (bad) notb mov movsb mov pop or lret stos jg sbb (bad) insb aas jg or mov jg jb xor mov adc sub loopne dec adc jo mov and fdivrl mov pusha jecxz test (bad) test arpl pop (bad) loopne outsl sbb testb das jae cmp lods or and dec in mov test sbb outsl (bad) cmc int mov daa imul mov push mov call xchg inc pushf jno loopne adc lret frstor fucomi jg rolb dec (bad) xchg jmp movsl jg mov mov cmp (bad) mov stc divl stc sub (bad) lahf push stos jg xor sub pusha out aam mov mov in jg pop pop sbb out sbb push repnz addr16 jl mov repz scas or scas icebp les jae dec cmpl push and hlt mov inc jg push adc (bad) sub bnd lods push jno jg and fnstcw out xchg inc cmp jg aam or jno or xor sub cld out mov jl iret loope lahf or add pusha test or xor jg ret xlat xchg push popa jg cli sti outsl mov scas jns clc (bad) cmp jg mov pop (bad) jg xchg adc (bad) repz jb lods movsl call cli adc js icebp test mov jg lock xchg or jg ja call js or pop (bad) xchg ror xchg jg int loop mov in lahf mov xor mov imull bound ficom cli mov pop mov jle push popa sbb hlt inc lahf xor sbb sarb push xor movl es outsl jp adc fidivrl inc addr16 imul push mov cmpsl pop inc add jg ret stc push sbb outsl jg jp inc aam (bad) loop je xor add mov icebp into mov jg mov mov aad rorb dec push mov mov cmc pop ss cmpsb imul xchg push cmp mov (bad) daa pusha jg xchg fcomps notl jl outsl outsl mov mov sub pop push or jecxz das into push enter pop cmp xor inc inc mov sti (bad) fwait movsb or ljmp sub loopne jg test in pushf push jg jo cmp cltd inc gs pop adc inc jg aam rolb cmp (bad) jmp das (bad) inc xor cs sahf sub inc jae popa cltd inc ret and push push xchg je pop int or mov dec mov xor (bad) jp int push daa jmp std xchg cmp in ljmp pop aas popf mov push cs arpl jg xchg insb jle add daa jg sub dec test jg arpl das out aam and cltd mov jp int (bad) into add loopne out es mov jne imul cwtl dec mov lds fdivrs ljmp mov hlt je mov sub pop outsb jle add sti repnz or or mov std outsl fdivp pusha (bad) js and insl mov movsl jg mov or ret lea mov adc sub jg jp rorl push fdivl outsb in or subl push and mov inc pop push in je dec rcr mov inc jbe (bad) jnp lret mov sbb jg sbb mov xchg mov mov inc fisttpll lock sub sbb sub repnz (bad) cmp inc lret inc mov inc cltd mov enter jg out (bad) int3 mov bound xor inc sbb je sub (bad) sub push mov dec call fidivrl mov popf cmpsb lds sbb (bad) sub cltd jg adc push or das jg pop ret (bad) dec outsl adc mov xor aad add (bad) sub jg sti cmp imul stc jae (bad) (bad) adc pusha pushf scas xor jg ret push rorb ret push mov outsb jg adc xchg push in xor xchg ficoml jg mov popa lahf aas and ret dec jp outsl add aas andl mov jle js insb leave pop jecxz mov sbb push jg and cmp movsb jo and sbb inc gs dec insl or in rclb cmc and dec jg ja fildl dec dec jg out or imul enter jg outsb insl cmp jg cmpsb lcall repnz out xor jg rcrl popf jg xchg mov ljmp lret push xchg rclb dec jg rorl lahf pop jnp jle and sbbw out scas jg mov into imul jg in repz fistl jg and outsb mov jp pusha xor out andb jg js cltd adc lds sarl out jecxz mov mov dec outsb movq insl cmc stos dec push dec lods jg (bad) ja and inc add jg cltd call scas mov ja or mov cmp daa jg fnstcw jp (bad) test jg sarl lret arpl bnd sbb fwait dec and ds sbb sarb movsl scas jo jg or jne pop cli pop jg push and imul aas (bad) popl ret xchg ja jne pop adc push mov mov push xchg xchg jg out xchg mov inc jge mov mov mov dec jg test fidiv pop jg outsb loop in enter push insb imulb stos (bad) push shlb enter fiaddl add pop add out jnp push cmpsl pop int3 mov jg,pt sahf gs pop aad (bad) and mull push xchg or in sbb aas repz jnp mov (bad) outsl or mov xlat jle rcll out cmp mov (bad) mov popa outsl mov fimull imul dec aad shrb sub cmp movsb push aas push push rorl cmp and jg js or cmp sub in addl icebp ret push add mov mov dec (bad) adc lds push pop cmp fdivl pop sub es mov adc jle mov pop out sti (bad) jg ja jge roll subl cmc jle ja and lret mov jno dec fnstsw jg jp sbb adc js mov cmpsb out or cmp add xor and (bad) lods mov jg push jne pop fucomp pop loop jg adc jo jg cld pop testl push pop push cmpsl aad repz inc idivb pop jne (bad) cld and out fprem1 mov insl adc fwait inc mov pop imul mov ja sahf xchg loope mov aad dec push or data16 jg jg fisubr cli aad cmp test adc dec hlt out jg and and xor sub insb std adc fistpll mov mov cltd push lret dec fisttpl mov bound sbb pop ret push aaa xchg sbb mov dec mov lds test mov push ljmp fs xchg fcompl fmuls jns dec (bad) mov out xchg aam cmpsb ss add lods cs adc loop dec ret pop jg lret cmp cld sbb cmpsl xlat xchg add inc into rcll sub cmp lcall loopne adc mov lods in daa sub cmp pop or jg push fldcw mov in dec dec or jle das ljmp pop and rcl pushf add insl inc jg xchg cmpsl adc xchg jne xchg aad push test pop (bad) jg xor adc pop leave mov sub xchg jg sub sbb inc (bad) or in pop jg inc les add add sbb inc aam push bound xchg jg imul idiv fldcw xor call xchg sub js mov scas test adc cmpb mov scas or cmpl aam xchg dec mov mov iret mov or jae pushf aas adc add or dec fsub jg add jnp gs lods into dec push das cmp shll aad addr16 std imul mov lods jg jl dec pop bound jg leave and adc xor lods sbb pop sarb jg rorl negl addr16 ja jg stos mov hlt aas jge lock mov fisubr mov imul pop inc jnp jo lds xchg mov jg lods or aas jae test push pop daa add fidivr arpl pop jmp pop jg out dec lea aad fwait mov pusha jg cmpb jg stos data16 push popf leave sarb inc push jb fisub pop and inc mov lods dec sahf pop adc sub aas ret xchg dec mov fs pop inc inc bound fstpl mov jg mov pop mov divb dec stc jg xchg dec inc adc (bad) cmc leave mov cmp xchg push push testb xchg dec js jnp jg xchg inc imul outsb sbb aas test pop inc adc jp gs icebp push add mov outsl adc mov mov mov mov movsb mov fistl les decl jg cmc dec cwtl test xchg (bad) mov sti and ja fxam mov mov jg mov lahf movsl and mov jg jmp xchg gs popf adc push imul ret mov mov fcomi bound outsl out mov inc mov out in fwait (bad) je xorl jle jg mov xor jg pop (bad) add pop cmp gs and mov outsb (bad) push (bad) jg lret (bad) sbb cmpsl push loop (bad) jbe jg and or dec daa ja adc insl in rorl pop jno insb xor sbb aam lahf push (bad) movsl mov add cmp arpl loop add or repz (bad) sub addr16 cmp fdivrl lods adc hlt xchg aas jbe js fdivrs dec lret sbb lods mov in push or adc imul and push popf pop mul xchg mov adc xchg test or aaa cmp imull test jg and inc pop mov add je outsb mov fnsave in lcall pop adc inc cs cmp pop xchg jge inc (bad) jg int3 inc clc hlt jo ja sub push arpl and push stc jecxz out rcrl int lods insb aas fisttp adc pusha fwait pop imul repnz mov sub notl jg es sub jne inc xchg scas pop jg mov fisttpll movsl dec xchg jg inc dec pop sbb (bad) xchg jg mov fsts mov psrlq xchg rorb cmp ret or push cmp repz movsb imul push scas jg into outsb mov jg jnp shrb push daa xchg sti or icebp decl inc push (bad) fucomip jge ja mov loope or adc lret push mov adc pushf mov pop sbb mov jg fdivrs inc mov insb add test inc lret lea and mov mov or (bad) mov inc jg sahf dec frstor push adc int pop (bad) jae cltd jg jbe mov push les stos scas pop fisubl sahf and call push mov mov jg sub lcall xchg mov cmp stos (bad) dec jg dec mov int je jg rep add or imul jg dec (bad) mov pop idivb push cmpl cli adcb or pop inc cmp int stos js inc fs or jg pusha leave mov ss jg cmp fcomi jg test stos mov mov aas dec or adc icebp sbb shrl out sti enter jbe mov pop cmp mov xchg arpl aas cli sub lahf js mov mov mov dec push jg or or fwait cmp cmp insb and sti mov and fsub push lock inc outsl and jmp or pop sar test dec test adc jg pop cld ss scas jg dec mov xchg (bad) sub rcrl ret jle inc insb mov outsl add bound push jg pop adc jg les and cmp test push mov jbe cli jg dec push pushf out loopne jg lods mov daa and std jg push xlat mov dec pop mov jae jb aam push aas sub mov shl sti cmp mov xchg dec repnz jg mov cs jg and inc xor mov mov (bad) xchg or loop out mov adc cmpb push sarb mov jg pop pop or in jb (bad) and insb mov and dec unpckhps mov lcall jp xor or dec cs fmuls ffreep cmp jg and dec jg fbld ret mov adc push push mov mov push jmp jle jg cmc jo mov lds mov insl (bad) lock cmpsl lret mov push add dec test loopne or mov mov loop in outsb xchg pop push ss (bad) pop mov inc pop sub xor stos sahf stos or hlt sbb inc xchg and jmp push push mov shrl (bad) ja mov add mov jg mov addl ret icebp pop into lock jle adc push (bad) hlt jg lods mov jg sub sub sti jae scas out mov fwait inc addr16 repnz js loopne,pt cmp adc cmpsb inc jg aad mov mov or das xchg inc outsl jo test into fidiv in not mov or (bad) mov das dec xlat mov sti xor loope fwait aad aas (bad) (bad) jnp sub dec cmpsb mov cmp jg adcl lea pop les sub (bad) (bad) mov dec xor fdivrs notb arpl dec aaa mov mov jg pop int3 sub push out test dec and js jg push mov mov imul adc subl cmpl mov jae xchg or out xchg mov in mov sti gs mov mov sti push out rcrb sub jg adc dec mov jle push pop pop xor sti add scas loope in mov dec jb insb into imul dec pop test scas xlat jno jg xchg mov jge inc out icebp inc sub call movaps sti mov push in shrb sahf leave jmp repnz jl (bad) pop jp icebp jg mov cmp adc leave lds jo lea push dec cwtl notl jle dec sbb add imull int3 loop jbe aad mov xchg arpl mov jl adc push fs mov cmp push mov test or insb maxps pop add sarb cmp aaa xchg hlt inc lret jp mov cmp cmc mov jl inc jg insl lea add cmp push inc leave xchg outsl repz jg sbb xchg sbb push push xor sbb cmpl mov movsl lcall dec push aas pop test lods inc test or push cmp lods inc loopne cmp lret loopne push mov fistl inc sbb inc add jg repnz test adc aad add xlat and das jg stc (bad) in xor sahf jge mov jecxz xor sub loopne mov lret aas mov test pop stc aas fildl das push jo adc aad push aam fnstsw xchg shlb jno outsb jle mov ja mov add mov push jg mov lea or incb xor idivl fist mov lcall lahf out jnp or mov mov dec rol sti out sub or add popf jbe cwtl push lret jg adc nop pop cmp aad dec fwait pop or fidivr sbb add push jl mov cmpsl outsl call xchg jg xor daa enter mov mov inc jg or push in ss mov sub pop test and jne mov and pop sbb loopne dec in sub lods jg jmp out push jg inc jo sbb xchg lock jmp std int3 mov push jg scas clc xlat xor out push dec aas mov leave ja imulb xchg lock pop jnp sarl adc popf cmpsl add pop out xor movb cwtl inc cmp pop fsubrs cli hlt inc arpl and push in add jg mov cmp movsb (bad) jnp pop xor jg cli in mov inc mov pop popa out scas jp and jg cli bound pop xchg inc (bad) jg add repz lock clc xchg push sub jg sbbb jg fwait sbb jecxz push jp inc xchg xchg pop iret pop jge cwtl jle idiv jbe pop jg loop out (bad) sub jg jns je push stos inc mov ja pop lea jl add xchg dec mov loope syscall sbb mov test outsl clc lock stos jmp jg mov testl cli leave pushf lock ds dec jg push loope push mov fsub test test and mov lret xchg movsl dec in add test leave adc mov xor sar fidivl cs mov loope lcall pop call aas mov movsb inc mov pop pop jg shr mov inc add mov jg dec push dec mov arpl mov jbe idivl sub jg jne (bad) hlt movsl or push xchg xor add test clc aad sbb iret fnstcw scas xchg or jg cmp sub jg or jg sti ljmp inc mov xchg sub mov mov inc inc jecxz rcl mov and cltd pusha pop push int ss jg cmp sub movsb push add sub test shl cmp adc push ss or sub in pop cmp jae mov pop iret jns mov sbb fidivr mov scas xchg jno gs add cltd jg rorb jns les das xor call subl pop dec xchg ret subl shrl adc je mov fnstsw jno shlb jg dec or xor fs sti xor mov arpl jg icebp push dec dec and imul in pop repnz xchg inc jg cmp fcomps rcl xchg xchg push jg push pop dec add xchg aam mov das out mov fstpl movsb inc fisub (bad) div dec and xchg lea js clts js dec push jg enter dec faddl cmp not push push xor push nop inc jg fidivrl adc in js pop mov xor je xchg dec jg sbb sahf in inc mov inc cmp mov pop jg mov cli sbb jmp les jbe incb ja xchg mov pop popa cmp arpl xchg inc jg insl fucomi std push ss loopne dec js aad xor push and jnp cmp in loope test aam jg cmc sub jmp sahf lods inc inc roll xchg push pop pop ret sti adc pop stos ja aaa es xor dec fiaddl jg js jl inc mov lret dec xchg cmp out stos xchg sub push aas repz fwait jle jno sti xchg jg cmpsb je jge sub subl xchg repz add mov jg push js fidivl fistpll xchg add pop mov (bad) dec (bad) pop call fsubrl xchg xor add sar mov sub inc or jne dec xorb lcall mov xor ss js mov mov xor movsl jg push dec mov xchg in mov sarl out cld jmp popl mov adc dec or mov fs out sbb inc sub adc push pop adc je adc cmc or inc jg mov imul xor jbe xlat stos pushf dec into and push rolb ja sbb jmp (bad) dec and loope jnp mov and jle es mov pop loopne (bad) jns adc xor mov pop outsl pop jg push jl xor xor ret mov push in cld adc add outsl inc mov inc jo call dec ljmp (bad) (bad) jb int aas mov and dec xor mov pop jle out sbb push mov jg testl flds or test mov push dec arpl cli pop pop mov call jg xchg mov mov scas jb testl test cmp mov mov loop dec mov call scas push sub stc jge mov xchg xchg dec and rorl fistpll (bad) mov aam pop mov fdivrp dec mov nop inc lock sub fistpll jmp mov pop or pop fsubs jo popf jg fcoml (bad) rcrb fsts xor in xchg fmuls and iret scas adc pop js clc cmpb sub pop and add dec dec dec lret in inc xchg and mov fwait sub js jg jns lock inc loope jg stos andb and ret mov inc fild das mov jg jb test push iret arpl sbb push stos ja sub imul stos jb jp in aaa mov jg sahf pushf inc mov test sub jg add adc jg insl dec loopew push and sbb sbb or scas push inc test jg xor mov dec or scas jbe loop jg push aad mov ret xor or out add inc pop (bad) push push cmp sbb jg popa ja mov sub movsb scas jo mov and outsl sub add maxps (bad) jns lcall lods popl lret dec jmp adc fwait push pushf movsb mov into rcrb iret ja sarl stos cmpsl or inc prefetch or movl mull sbb (bad) jg insl push mov xor pop jns cmp mov stos rcll pop jg add bound xchg (bad) stos frndint xlat push or add ljmp xchg xor cmp jle fidivr xchg sub fdivs imul jmp test jb mov outsb push push mov outsl aas xchg xor xchg sbb cli jno out mov insb push mov jo clc neg (bad) lods out mov iret stos ret cltd adc out sarl xchg lock mov cmp jecxz mov push mull or mov and adc adc (bad) aam rorb jg jmp ljmp xchg subl pop (bad) notl test jg cwtl mov cmp scas push cltd inc fsub fldcw rclb cmp gs inc add xchg push stos lret mov sub repz push nop and jg jle push pop sbb movsb jg push idivb cmpsb fmul cmp sarb sbb loope jg dec push es popa (bad) mov orl loope je xor inc mov dec ficoml push xor test sub push pop mov or add jmp pop imul add push nop cmp subl mov int3 xor jmp fidiv jg outsl (bad) mov test cmc not lods out outsl lahf call mov cwtl stos pop sub mov adc pop dec xor jbe mov or cld jnp (bad) mov lahf pop aas mov out test loope dec mov aam jg cli sub (bad) jg stos sbbl jg js sub push jp jg inc add sti insl push or mov mov push jg sbb mov js sub out outsb stc pop aad fstpt jbe ds push popa pop pop cmc push je jg outsl es jl (bad) (bad) jno inc add enter scas aam dec sub xchg lahf adc jbe push ret jg dec sahf push jecxz,pn (bad) jg mov jnp adc (bad) dec call fnstsw test mov jg mov or out mov mov fnsave arpl jg push andl pop nop aas and inc jae mov out push (bad) inc inc xlat jg push std dec div sbb gs inc and push mov lds inc jns cmp sbb push (bad) ja std jg mov pop push push mov inc sarb xchg jg movsb pop in lret jg adc push push inc jg push sahf dec bound xchg add xor cmpsl lret out adc pop sub out loop mov hlt mov iret outsl xor xlat pop int (bad) in xor dec repz mov scas jmp adc ljmp pop adc mov ljmp pop dec dec xchg pop or and mov jg out ss in imul adc adc addr16 aas or enter dec inc xchg mov mov pop jb xchg in mov lds cmp or jbe pop add mov jl enter xchg dec leave movsb outsl cs pop inc adc sbb sti (bad) stos push sbb pop std or sub add and (bad) ret mov jg pop movsb stos inc sbb fdivrl inc jp jmp mov pop mov jg or ljmp mov pop jg daa stos jg test lret push add or fstl movsl xchg dec testb sbb sub popf pop jo dec rcr idivb sbb in addr16 scas jg pop xchg dec test cltd pop cltd mov fwait es sahf popf mov imul rol fsubs dec loop xchg push test int3 pop nop cmp mov pop jo xchg pop jg les aas ror sti idivl aaa aam movsb (bad) or test cmpsl test ljmp cvtdq2ps add push lods or ja push xchg push pop out push aam dec and mov push jg sbb and add add stc addl mov repnz jg xor pop xchg inc dec jg and and bound fwait movsb cld ljmp and inc les push aam leave sti adc jmp mov xchg jmp or cmp add popf (bad) bound lds daa mov xor fdivrl ret int xchg xchg jnp inc iret jg push mov xchg xchg cmc mov fistpl push je jg in jbe popa push cmp adc xor insb mov ds pop xchg out das sub sub adc adc les loope in and mov push mov arpl js lods or pop out repnz cmpsl cmp jg mov lret lret jg ss (bad) adc mov mov xchg imulb mov mov jg mov aas cmp jmp leave ja and inc outsl aas mov or addr16 stc subl dec call mov xor xchg inc jg xchg mov jns xchg mov (bad) dec inc jg aaa fisttpl jg stc push add push in or adcb jg lret sti xchg call lea sbb repnz inc mov xchg lea push loopne lahf jg xchg jmp pop cmc jge aam movsl pop ret and sub je jg mov xlat call aas dec lods fidivrl jne xchg hlt inc pop mov cmp jp lea repz inc inc in inc inc mov push inc push stc pop test xchg mov int3 sbb addl jg insb push push aas sbb lahf mov (bad) jg cmp lcall pushf mov xchg mov xchg or adc repz sbb scas rol push inc jge cli and xchg jno fnstsw sub aas mov enter jg notb ret mov or mov sbb popf jbe arpl daa adc or jmp jg xchg lods fsubrs not jg leave inc pop imul loope cmpsb inc xchg popf inc or outsl mov sub cli inc std jg sbb push dec aad mov vcvttps2dq jge stos xor push mov push cld lea sbb jg test push js push aas inc push clc cmp or icebp stc jp lds xchg mov sahf add scas pop pop leave stc cwtl stos mov mov cmp insl imul adc push aas rcrb cmp jmp push sbb outsl push in push and mov jg pop xchg cmp (bad) js js inc negl mov icebp mov jg (bad) mov push or or out pop insl lods and lret cld push and int3 fidivr adc mov lock cld pop or int cmpsl lds mov shll xor (bad) jmp addr16 flds int3 mov ja inc (bad) out mov dec rclb adc mov xchg mov push inc cmp sub xor dec cmpsl pop mov insl adc popf cmc cmc cmpsb insl jg cmp adc jns outsl inc push outsb cmp subl out pushf push jg adc ret add leave rolb jg sub dec lret dec jle jg inc cld shld fidivrl imul clc adc js lock loop jge insl ret jns addl mov stc and loope dec lea xchg into mov subl divb btc push dec ljmp out lea aam jg cmpsl fisttpl pushf (bad) bound ds call dec adc jg cmp out (bad) mov and popa arpl or push mov loope stos adc push pop bound mov push jae mov ja adc mov inc dec fs jo fidivr sti pop cmpsl (bad) xchg push mov jle movsb (bad) jbe mov xlat mov mov jne mov sarb push test adc inc pop in jb stc jg xchg in push push push arpl outsl dec push lods lahf cmpsl les (bad) lock and or dec pop leave repz clc int in int3 lock cmp mov sbb jg cmpsb xor ss imul mov mov push mov loopne mov cld push sbb out xor jmp fsincos pop xchg sub int adc aas sahf mov ja pushf stos dec in cmpb ss jecxz mov sbb adc jg jae lods dec mov repz pusha aad (bad) aas jge adc out pop dec push cli jg and mov aad fdivrl popf jle push test push inc rcrb or sbb xor jp mov sbb cmp jnp jle jmp into sbb pop js imul hlt pusha mov pushf mov pop dec les sub (bad) mov jg,pn cmpsb push lock adc mov pop push cmpsb arpl mov jg (bad) insl popa aaa ret adc lahf shl clc xor adc addl dec cmp outsl movsl cmc int xchg mov out inc shlb push jp ja cmpsb lahf adc ss push stos addr16 push sub cmp mov sahf ja (bad) insb pusha lock stos hlt add add sub inc mov aas cmc push pop ret stos (bad) cmp mov jns cmp jecxz ss inc clc sti xchg loop stos pop (bad) fcoml pushf push mov leave sub jg jg jno addr16 mov cmp pop xor inc cmp and test test lods in mov fsubl roll std jg mov mov lock sbb ret aas sub (bad) and push cld jns jg leave std fs dec push jg jno adc xor lock pop jns sti push mov inc hlt aam stos xor dec cmp rorb scas clc or pop jge add mov pop iret cmp ljmp popf adc shll aad push outsb pushl sub mov add aam jg (bad) cmp std lods cmc jge dec shll dec das xor xchg jg outsb cmpsl (bad) divl inc (bad) test into jne jbe (bad) sbb xchg fldcw add ja push dec (bad) dec jg mov loop cli mov (bad) mov (bad) in xchg jg jle sbb ja int3 jg (bad) cmp sahf mov dec mov lea push jmp test subl fs cli lret adc jg jae in cmp scas repz mov pop xchg xorl test mov test pop lods repnz sbb pop push push cmp jg xor xchg jmp xchg jg push stos fwait inc dec jne mov das cvtdq2ps cs pusha push pop out mov jg jg lahf mov movq addb cmp leave aas pop out and lcall test jg or xor jg nop push pop jno xchg dec mov mov inc cmp cmp test inc arpl aas or aaa out adc (bad) cltd push jp in stc and clc push dec neg ljmp into stos repnz mov mov lahf arpl pushf ja sahf jg add scas xchg mov pusha clc in push mov inc test es push xor cmc jg add mov lods jg loope pushf and test mov sbb mov insb (bad) jg push xchg fnstcw push js sub dec data16 dec das jg orb lahf and test inc lcall xor add rcrb jg out mov mov xchg and ljmp or pop mov ja push mov das daa pop or mov outsl lret dec xchg sbb les fbld push inc ds mov fldt arpl fnstcw sbb inc jo jno sbb mov sbb and push lahf nop pusha imul int sbb test sbb popa call imul outsl add inc mov loop std rcr jecxz mov sbb loopne jg ds js push aas test out int sbb or in push push sub sarb ret pop pop push adc cmp dec mov cmp loop stos sbb or sahf dec ds inc (bad) jg fildll cli jg xchg mov aad ret popf cmp jo js cld idivb inc inc dec jle (bad) jg fistl add gs sub addb ret and iret inc mov push jg ret sub addl push mov sub pop inc inc in pushf pushf inc push dec jg ja ficoml jae mov frstor xchg or xor push rcll stos mov cmpsl outsb loopne aam mov imul aad mov mov les or dec push icebp or or push sbb ja out jae jns clc lcall mov mov arpl pop mov dec (bad) lret xchg or dec mov cmc jg lock cmp ja fwait xor mov xchg push jg dec loopne adc aaa jp imul outsl repz idivl and in inc lods pop jg mov sub ror mov push faddl add xchg inc jg imul rol test mov je cmp xchg jg jg js push lcall push pop sub mov out push cmp cmp dec pop outsl xchg int3 mov mov or mov js lods aas pop sbbl icebp dec pop insb jg adc arpl mov mov dec pop jle mov repz inc xor sbb cmpb xchg sub cmc and jg mov push mov add cltd mov out mov (bad) lcall cmp incb aaa shlb in outsl call inc repnz mov mov arpl mov cmp xchg sti clc mov addr16 into je and xchg mov mov jg (bad) cmpsb or jnp add fwait mov add repnz pop pop pusha or lds notl icebp lods jg (bad) mov lods mov fimull sub xor fcmovnbe insl fwait rcrb jg outsl cltd movsb jns jg push pop mov cwtl sub lret mov jg and cmpl mov clc mov mull jg sbb fisubl outsl xchg push adc push jg lcall jg adc dec jg icebp repz loopne fldlg2 sbb rorl xor (bad) aaa testb cmp sub cmpsl jg dec shlb push xchg (bad) into addr16 mov int mov lds push xchg cltd pusha xor sbb xor sub jnp dec ss or stc in aas imul inc or fs inc xlat jg push and jg imul push cmp iret (bad) jg add popf mov fmull jne in (bad) xor cmp pop dec or jg negl (bad) shrb int3 cmp stc jg out (bad) jne lea push repnz arpl pop pop lods inc sarb ja adc arpl iret repz jg jg imul call insb repnz incb js pop in add andl jg loope cli mov out jg out test (bad) jmp jne sub and repz pop add rcrl or mul iret cli jg movsl mov mov sbb setl cli cs inc xchg ja (bad) jmp ds dec lods iret mov or xchg outsl mov pop fcomp fistl mov xchg push jne jmp adc pop xchg std jecxz bound test inc pop jg subps jg fwait adc xor mov sbb jb,pn add pop inc popf pop sbb jmp cmp xchg dec and fidivr cmpsb cmp jg jge xor out js gs pop jb cmpsl fbstp sbb lret insb jb sbb lahf pop lods push test mov loop (bad) aad fstpl xchg xor or mov pop outsb lods mov das dec into mov and imul dec lods and dec stc lock sarl or arpl sub jg bound nop jg mov in mov and jmp add fsubs dec cmpsb aas pop dec cli dec dec idivl (bad) ficompl seto mov test and cs jecxz ror popa adc sub mov lahf mov dec aas popf sub jg ljmp jg out outsl int3 mov jno jg mov xchg sti test test sub xchg mov bound xchg js push lea mov mov test mov out push dec xchg lds mov xor pop out mov ljmp sti jg std out cmpsb xchg insb lods xchg adc clc mov dec push cmp in (bad) nop jle cmpsl fwait jg sub ss dec mov mov or dec xor pop rclb rcl pop xchg and xchg jmp xor stos pop cmp xchg push dec in and sbb outsl mov (bad) ja imul movsb imul repnz popf cmpsl xor push aam arpl mov or xor inc adc addr16 in jg lahf (bad) stos data16 dec rclb mov std or pop cli scas jg loope les addr16 pop sub stos insl cmpsl fidivr xchg mov mov out xchg dec inc cmp mov push push sahf cli addr16 or out mov popa pushf cli sbb scas xchg ja dec (bad) sar nop jg xchg repnz outsl aas sub gs loope jg into shrl xchg aas jg xchg (bad) inc imul push pop popf jg or pop push add scas jg or loope inc out movsb (bad) mov leave cli adc sub push adc test push push mov jne int3 or jmp ljmp push cmpsl inc mov mov jg jb push mov inc test sbb mov xchg mov push pop (bad) sub hlt push bound call pop insl mov in dec dec mov jg mov pop adc inc sub mov mov out dec or lret adc movsl dec push jge mov addr16 cmc out sti mov push pop xchg int3 shrb (bad) scas insl dec inc fiadd sti xor jmp (bad) jg xchg jg stc xor pop jg pop sbb mov dec sti xor cli call cmp mov push icebp xchg je mov fdivrs xchg jg das arpl (bad) repz rorl rol clc ret mulb test inc fwait lods push mov out xchg xchg mov subb loopne xchg jg (bad) fdivrs fistpll mov mov loopne mov (bad) lahf jg or jecxz push mov adc xor inc push ja dec push lret jg push xchg (bad) mov xchg out jg xchg xchg adc cmpb (bad) sahf lods push mov mov push mov push js jo cmp gs lret jg sti cld and inc push xchg scas shll stc sti es jg fidivl add jg imul loopne jns dec push lret mov jg js scas dec inc cmp jbe scas push or iret inc adc xchg and push les lret jg repz jbe dec inc js pop inc test int3 cli fnstenv xchg ja mov jg test and adc mov outsl dec cltd in push inc mov aas jno add inc sub add sti xor dec ror or outsl inc mov lahf dec insl sahf mov push jle mov inc hlt jg pop ljmp sub (bad) out cld xchg mov std aas jg push xchg sahf mov lahf adc sub inc mov jg push fcmovnbe repnz mov pop pop dec inc push mov ret jg insb mov aas popa mov mov mov push mov loopne add push inc jg fdivrp xor (bad) dec and mov fsubr cmp sub pop out lea decl jbe sarb adc sahf insb stc sahf inc xor inc jg pop cmp hlt dec cmc insl jno aam in (bad) pusha shrl jg and sub das and pop jge pop lods fincstp xor mov push jo mov adc pop mov ja mov sub mov jbe pop jns cmp adc dec jg into fisubrl mov mov leave sti inc cli stc das pop xchg fldcw imul mov nop sub mov adc out xchg out inc in ljmp mov add push inc mov enter push xchg mov div cmp fsubrl pop lea stc cmpsb pop jne movsb xchg lds push cmpsl stos in insl stc sarb lcall sbb cwtl push push dec dec (bad) iret lahf into jg lea xor mov call fnstenv clc inc mov (bad) out mov push inc or pop mov dec pop or push xor movsl jmp jg cmp mov jg inc push xor inc mov jle add test insl mov rcrb push pop popf repnz fstpt or loope cmp xor mov into jg roll mov jmp lock pop pop outsl dec std lahf mov sbb sarl dec dec sbb fisubrl jg pmuludq mov push lds mov fwait xchg ljmp xchg ja loop dec jg outsb adcl loope cli fs sbb mov jae mov cwtl fisttp jp es jg fucomp test mov clc push inc cli data16 (bad) nop pop bswap cmpsb push mov mov (bad) int3 sarl in inc mov pop push test xchg mov jg popf pushf sbb ljmp cmp (bad) not mov pop mov cmp aaa mov dec loopne imulb mov sub movsl mov outsb lods mov jg pushf mov sbb jp sub xor lods aas in sbb add lahf push (bad) mov dec fnsave movsl jg jg xchg push mov fnstsw ss pop stos stc divl add mov inc mov (bad) clc pop jbe insl jg fdiv add movsb xlat idivl pusha mov jno in jg adc loope mov mov in loop dec rcll jne jg iret (bad) cmp out pop fbstp jg out stc inc scas pop adcb rcll dec mov inc dec ficom dec and pop xchg mov in hlt out test inc inc aad xorl dec lods add (bad) out mov and mov ja das mov mul xor xchg (bad) mov ja cmp jne mov pop cmc sub xchg and pop repz dec (bad) jno cmp lock push lods (bad) outsl inc and addr16 stc loope or jg push dec imul enter test cwtl add mov sbb add out push sub or aas xchg mov mov pusha (bad) jg push mov cmovb insl ja inc ret int push aam mov std (bad) repnz aas mov mov jg daa dec xchg aas add mov dec loopne jg jnp inc mov ret adc pop sbb fwait dec jmp xchg inc (bad) les xor xor and push outsb adc cmp out push and cld je mov jg popl add jg (bad) je mov (bad) jge and add ss dec les push js jnp outsl mov dec inc (bad) jle arpl scas add in xor xchg and push frstor popa lock jno sub pop inc xchg xchg push dec test mov jg add cmpsl and add addb or jo push add mov jg in and mov push sbb out mov push push imul mov dec adc es sub add gs jmp cmpsb xchg mov aam enter dec jg add cmp mov leave pop or into add dec mov outsl aam sub and iret decb cltd adc repz rolb incb mov add add lret std mov sahf push ss ja rorl or adc addb mov push push (bad) mov ja bound xchg sbbl movsl dec fsts mov jne lods lods addr16 sti sbb mov movsb in orl arpl enter add insb lods and jg jle xor jg cmpsl pop fcmovu repnz mov mov ret add push cmc (bad) xchg pop inc push nopl outsl leave inc mov push xchg jg mov les ds mov sub mov mov mov subl and pop mov fs aaa adc sbb xor mov mov inc or add mov je dec decl fcom imul aam jnp (bad) lds mov add mov inc scas cmpsb lret and pusha or pushf fmulp decb dec jmp lahf outsb jg cmp inc jg bsr ret es (bad) out lcall xlat pop jg and clc stos notl cld jg shlb jbe xchg xchg jg lods clc in inc cld jg dec je lret aad into loop or flds mov jg (bad) mov in xor inc jg lods inc xor sub es jecxz jp or loope mov jg jo mov jl push jg push (bad) fnstcw icebp data16 sub sub adc mov iret test loopne jg lock loopne jo inc jg idivl push mov fildll mov jg or call jnp push test bound fdivrs add outsl stos jge call mov in (bad) pushf roll sub adc cmp push das mov rcr xor popl popf scas jae stc push fldt lock mov mov mov push ss mov int3 into or js sbb outsl lds mov (bad) cmpsl jg call in movsl mov push pop stos cwtl sub rcrb mov leave and jg (bad) jno aas push loope xchg mov mov ja out fcmovnb pop sbb mov fisub push aaa mov mov lds fistpl stos popf push mov mov inc ret clc sti lea pop and (bad) lock sti out xchg adc call test or ss pop sar (bad) out cmp popa inc mov sub arpl in fisubl jg xlat xor sbb or and mov mov mov xchg or or pop cmp or sbb insb mov or insl jmp inc sbb in sti mull jae push divl popf dec test xchg mov or jns js jle shll mov dec mov jg lods popf cs (bad) fnstcw lds xchg add mov sti push pop decb cmp inc jg (bad) dec dec mov pop fmull jg das movsl (bad) and adc pop inc sub stos jg mov xor ds jg push cmp jg iret xor mov das add jle fs jno ja mov lds and aas leave stos pop push mov cli jl inc iret inc fmull movsb push add adc pop lret jmp sub ja dec ja popf mov xchg xchg push icebp lds adc (bad) aas lcall js pop mov jb (bad) std jae outsl sbb mov inc shl dec test add enter scas mov mov (bad) dec or ss jg lods ja or and sbb popf ret inc psllw add push push adc push lods jg add repz jg jg push testl push fisttpl inc add (bad) fimull mov push adc mov outsl jns mov and mov les mov push inc adc lcall (bad) xor jae nop xchg pop and sbb ja roll (bad) mov jg xchg flds xchg pop and pop jno pushf lcall xchg sub jmp jbe pop jg insb in bound adc fstl fsubl jle xchg mov enter xor lea push push jg cmp enter (bad) js outsb cmp mov push (bad) push inc inc jbe push or mov jg rcrb rep adc in sub lret rclb das je add jg push push bound mov or cmp sub test xchg call mov mov pop les push imul out adc sbb pusha and std dec rorl push push sbb sub jg jl or rorl dec sub ret cmp mov cmpb add xor inc jmp mov add clc jg xchg popf (bad) (bad) cmp lods jae xor test cmp cli mov or mov jg subl loop xchg push sub cld jnp mov jg inc fwait clc dec or jo mov jmp jg xchg xchg sub xor outsl and add dec (bad) mov es cmc and sbb dec jnp sub and or arpl outsl xchg mov aas jg imul in push push push jg movaps testl xchg addr16 mov ds add jmp mov cmp lock inc mov push (bad) (bad) leave jg and mov jge inc push stc cs cmpsl jg in mov sbb pop mov push or push jno je sub sar stos sbb adc jg pop mov sbb jns mov insb xchg inc dec mov test jle insl jg repnz mov test shrb pop sub imul test cli inc cmp jg jle cmp fcmovnbe push pop cmp mov aam push mov jge inc icebp data16 sti icebp (bad) outsl das repnz sbb mov sti pop int3 jg mov test pusha inc add jnp mov fistl or inc pop adc cmp data16 mov inc paddb fdivrl iret add pop aas loope imul fcompl dec inc xor cwtl movsb jg push cmpsl lea sarb cmp add and jg das jnp xlat push pop les jae in icebp and (bad) sub sahf je cmp xor rcll mov movsb push adc mov cmp in mov aaa or ss xchg in jg mov xchg xchg dec jle popa movsb jg ja test aam arpl inc sub pop fsub push outsb jp incb add out pop aad and sti mov mov mull xchg pop dec movsb push push push mov rcl mov movsl xor hlt jg xchg cli popa int3 test std aas push xchg (bad) inc pop sbb inc mov int3 arpl aam push push inc sub cmp gs inc ja loope (bad) imull mov fdivrl inc enter adc mov inc in rclb jl cmp ljmp dec scas fistpl add adc sarb or push sub or das (bad) nop jecxz xor jg shlb cmp insl dec cwtl jg xchg push add mov insb mov mov jle std iret cmpsb pop enter jg stc mov loope scas adc xchg dec imul pop jbe fcmovb fwait cli (bad) mov aam js cmp jg gs out mov ljmp inc (bad) rclb aas test lods addr16 mov sub out cmp jns std loope cld mov pop fstl xchg mov cmp inc sbb fdivp mov xchg dec jl mov popa pop dec enter jb xchg in push lock add sti fwait or insb inc int3 sub or jg jmp sub adc leave fisubr cs arpl pusha mov mov or lea lret (bad) pop pop lcall aad sahf jg testl sub xor (bad) xchg fldt xor jg cmp cmpl insb (bad) xchg pop mov (bad) cmpsl sub jg inc lret adc cmp cli xchg xlat das cmp push jg enter les movb cltd es int3 jns xchg lea xchg xor pop push gs pop fstpt inc je mov and ret into fildll lret mov mov pusha mov (bad) xchg lret sarl cmp std mov mov adc popf mov push and lods sbb pop stos daa mov dec insl pop or mov cmp bound lock jg mov imul jg outsl inc addl push sarl scas fcomps ja jno add cmpsb mov shrl push (bad) lods inc daa mov dec aad jg test pusha and xchg scas xchg pop popf inc sbb cmpsb rorl mov in mov dec pop jmp bound sub test outsl pop jo mov mov loop mov popa sbb outsl lods lock sub stos lahf xchg lds cmp pop addr16 out and jg mov jmp mov (bad) ja (bad) fidiv js mov add in imul test call insl xchg or ret iret cmp jg add push lahf data16 aas mov pop loop push adc mov mov int3 xor aaa ds jno or or leave jg mov dec jg test adc fcompl or cmc std pop xor nop jg mov xlat lds mov mov pop stc out inc jg push mov inc jns sbb mov jg icebp cmc test mov and rep jae adc icebp clc xor cmpb mov (bad) data16 add jmp roll jb lret inc icebp inc lods cmpl dec fwait mov inc fildl mov cmpsl pop cmp jg aad mov jg (bad) sbb inc jg stc fdivs inc bound testl jg add add les xor dec out (bad) and jg hlt es rol test lahf inc inc in jg xchg adc (bad) std mov ja push int mov stos dec inc cmp or add sub js jg test imul push les int jg mov inc and and js sbb js outsl xchg gs inc add mov out xchg xchg push movsl and inc jg out push cltd inc out jg nop jmp into jg repz pop jle daa push in pop and sbb push inc jg jmp sbb jg mov and fidivr inc mov aas cmp and jg ret pop xor sbb arpl inc add std les jg dec mov mov jbe mov dec fsubrl dec cmp std push ja das arpl cmpb dec or inc push jg gs pop jg sti sbb testl pop les cmpsl or pop jecxz shr inc pop jg fldl mov push outsl or enter lds xor in subl in stc cmp notl mov out and jg mov hlt pop jg loopne subb fildl jp inc pushf das fwait shll sbb mov fdivrs pop lret cmpb (bad) mov add mov fidivl jmp les pushf js aad aas enter adc clc icebp jg in (bad) mov add mov mov fstps sbb popa cld jecxz mov mov aas lods pop psrad jo inc dec mov xchg pop pop jg test popa jg aam popf stos out cmp jg add (bad) jg repnz ja es jmp sub cwtl popf (bad) jno xchg imull cli jg lock jb xchg mov or movsb or into cmpb addr16 pop lahf (bad) sub cmpsb pop out sbb jg inc iret lret add lock ret jg mov jg mov addl aas fstpl fsubl xor bnd push roll sarl sbb inc xor add test dec cmp mov in (bad) dec jg call ret cli (bad) in dec jg dec sub stos xor pop not (bad) cmpsl lcall je cmp pop ror sbb in ja adc jnp outsb sti mov pop inc icebp je lahf (bad) idivb pop add lret sahf xlat jg xchg jnp push movups fistpl push mov stc not jo jg jl ds das cltd mov add aas mov out dec add push (bad) jmp dec sbb jp std cmp xchg mov mov (bad) repz lds xchg int push pop cmp loopne pop inc (bad) cli bound adc sub pop icebp pop (bad) mov mov jg push sub dec xor les and lock int3 inc arpl shlb test sub stos inc ljmp test shl jg push ljmp div cltd inc dec out mov gs aam mov lret dec mov pop fistl xor scas (bad) jg jbe cmc mov movsb outsl (bad) sub push dec ja icebp dec and out cmpl call xchg jmp inc ret or xchg xchg iret xchg xlat jg cltd inc xor nop repnz mov jp jg jg (bad) adc inc inc aas into out mov fcom jg add (bad) scas test add inc pop cmc insb jg ljmp dec inc dec inc mov pop test jnp mov add pop jg pop fwait pop andb pop rcll aas push (bad) fiaddl jnp mov mov inc rep jg and (bad) out pop scas jo icebp pop lods inc jae xor dec jg arpl leave adc icebp xor loopne jg rclb cli jno insb xor (bad) repnz je fild out jnp fwait scas js jg daa jb pushf lods and js (bad) jecxz sub fsubrs inc jle (bad) in sbb jnp mov nop cmp xchg cmpb jbe (bad) xchg dec lcall push stos jg sub stos xor (bad) scas inc into js xor pop push mov mov aad mov mov sar push int cwtl jg pop jmp pop mov xor sub inc jg je iret ret push add cwtl jg repnz addr16 or inc lret or pop cli ret int3 aas xor stc movsb dec (bad) dec ds test inc outsl lods jg lds pop test jle out test mov lods dec aas movsl lock inc cld sub stc push push ja jbe fisttpl (bad) out mov lcall xor out loope mov mov xchg sub pop clc pop andb fwait sub and je cld xchg add pop addr16 gs add mov inc aam out or (bad) push lods xchg jg dec inc ja xchg or outsl mov stc mov adc mov add jmp daa jge iret out lds and cmp frstor jg fmul add xor jg sahf pop pop mov cmp jg pop xchg scas notb sub lahf xchg sti push inc xchg movsb movlps out dec jnp jg mov cmpsl mov dec sbb imul inc fdivrs jmp lea enter paddd xchg inc dec sar mov xchg mov dec cmp jg or inc jg mov pop and jbe mov adc pop cmp jb (bad) pop popf inc cmp xor push sahf inc pop jg (bad) test stos xor je pop enter push (bad) and push add jmp mov out es jg add add test add mov movsb test push jg or cli mov cmp cmp inc mov adc push pop dec jg in add inc mov mov jg pusha fdivrs fsubrp lds loope rclb jg dec outsl cli fdivl sub das push imul test cwtl cmpsl cmpsb jne scas fimul cmp pop push jmp shlb aad pop mov mov xchg mov push in pop test ja jae jmp ss cmc int stos push mov xor rclb incl or dec mov mov ja lret pop out jne pop mov xor mov sbb mov sub add js pop loopne or fld jg mov mov jg enter test imul sarb push jg mov clc (bad) test mov stc imul jnp pop inc ret mov dec jg sub jno jle add inc lock sti pop ret aas xchg sub sub jg cmp jmp outsb push jl test pop arpl sbb xor orb adc inc cltd jg iret fcmove jnp test fs jno (bad) sarb push push inc and dec inc in add decl push loope inc jg inc fist jg repnz aas loop std jmp mov or cwtl lds js ja jg sbb bnd pusha mov mov cmc mov pop cs mov push push stos aaa xchg stos jg pop cmpsl adc bound or mov ret rorl sub or mov lods ficompl mov add sub addl dec mov lods aaa jo movsb pop jo cmp ret fcmovnb aas adc lods enter inc sub jg (bad) scas sti ret divb jg repnz pop fcompl cmpl xchg jg cli or sub test stos mov xorl xchg repz sti or sti adc cld dec ljmp xor sub lret popf mov push imul mov jbe xor jmp mov sub sbb mov jmp jg cmp xchg jo,pn nop jg and loop pusha jg or (bad) mov insb add jl jo pop mov popf push pop fwait cld mov je or mov adc xor inc rolb mov jg and and cmpsb (bad) shr sbb bound jg iret adc lods fist sbb adc (bad) out xchg repz push jnp and aas aad jbe inc pop out icebp iret aas imul sub sbb xchg jb test jg dec mov push push jnp mov mov mov push stos fdivr pop xchg cltd and jg (bad) je,pt mov add jnp mov xchg lds test pop insb push mov pop ficomp (bad) or sbb jnp or inc lods bound clc sbb pop and pop mov cld xchg sbb mov jg push adc inc popa and jg mov pop scas ret cmp jb (bad) xchg scas jl lods cld aaa xor pushf cmp add aas popa pop test jno mov and add xor cmc testw jg daa add (bad) and push scas lock pop jg push xchg test or mov or inc ss loopne mov add push sub repz inc and ljmp mov addr16 jbe lahf mov mov shrl adc sbb inc xor or inc lahf jg and push repz es jnp jg cmp sahf jg (bad) and mov pop push imul fstpt out imul popl jnp jg leave xchg mov mov jg mov mov jmp xchg jae and mov cwtl inc adc insb dec ret clc (bad) push pop shl lahf xor orl repz inc jecxz sarb ljmp jg dec call ja adc xchg add out dec sub mov jg imull xchg (bad) aaa mov sub pop movsb mov adc js add jg aas (bad) or icebp mov sub lock fidivrl cmp inc cld pop pop mov lods xor mov hlt lock mov dec adc jg push inc mov or popa xchg mov pop pop (bad) xchg clc aam xor pusha out sub cmp jbe js sub std jg,pt fmuls and adc or imul mov sbb pop adc int fisttpll call jg sub xchg mov test cli adc daa fist mov (bad) push dec fisubrl jle and add lcall repz rcr mov in pop jmp jne out and add inc jg push push sub insl ret pop pop mov dec jg mov mov jg add mov outsl mov jg ja jmp mov mov fwait dec inc aam push inc aam push inc aam pop inc pop arpl sub iretw xor jp xor and jg,pt icebp push pop mov inc add int3 cwtl or test (bad) sahf mov mov mov sbb mov pop sbb push cmc (bad) jg es mov mov imul (bad) leave (bad) xor incl and adc sarl imul xchg dec (bad) mov sbb jmp mov xchg aas jnp js jl sbb jle mov scas lahf jg cmp aaa jg,pn fbld cld mov pop jge or push fldcw loope in mov dec xchg popa jg pop inc push mov bnd or or push test nop out jg pop shrl mov data16 xor cs enter push jge ret sti mov lret or test cmp jnp ret and push mov add mov jg mov rorl outsl popf mov inc jg xchg pop cmp arpl jg das outsb lds xchg lcall and cmp sbb jg fld popa push cltd and stos leave inc bound cmp xchg xor fisubrl in sub xchg leave push xchg movsl dec jg jmp mov xchg and les fstpl outsb cmc xchg nop cli add fiaddl and jg cs xchg lods (bad) jg pusha jmp (bad) mov mov sahf nop dec add push popf inc add loope inc push push jnp (bad) jo mov fildll xchg jg sbb mov xlat cmp push ja jo inc and lret bnd (bad) in inc loop std stos test jg,pn popf rclb jg pop movsb cli adc ret mov pop cmp test (bad) pop jg aad mov aas movsl (bad) dec mov nop pusha jg lahf fidiv test sub jg jbe add mov dec pushf addl xchg ljmp test adc and jg ja outsb dec add jmp cs cwtl rclb mov inc adc cli sahf xchg insb push mov jnp push repz jg insl jo dec outsl decb rorb lret cs cmpb lret pop dec sarl sbb (bad) es into sbb mov push dec (bad) mov test shr push loop pop and arpl adc jnp jg cs jbe cltd push push pushf sub xchg lock add repnz jg cmp xchg movsl mov push roll jg jecxz mov (bad) xchg xchg cmp test (bad) aas mov jbe pop sub jo jg sbb jmp aaa int3 leave mov jg in cmp jg and pop test (bad) int xchg dec mov pop fildl jae pop mov mull xchg or jg fdivrl (bad) push mov jg push flds in and ficoml fdivrl jg mov popa push jg rcll pop inc std mov ja cmp mov mov fidivrl mov ret pop or stc xlat jp cmp pop push push loopne xor push inc mov inc sbb or inc shll fisttp inc and push pushf repnz rorl push jg into jbe xchg daa jg leave inc xor pusha mov jg mov fsubrl insb pop jnp ret sbb test scas sub inc ficompl mov xchg arpl mov jo xor ret lock jg outsb pushf pop insb add (bad) jo in cmp jg cmp inc mov mov mov jo and jg imul push je rep sub cmp outsl mov pop (bad) xchg decl loopne test leave sahf fidivrl jae pop jg sub jmp xchg imul or stos dec lods mov jmp dec dec cmp dec sti dec cmpsb sbb inc arpl aam movsl xchg sti inc ljmp xchg mov lret aad loop mov jg not testl pop adc mov mov pop sub (bad) js incb dec add lahf iret pop xchg mov jp aas add outsl outsl lds dec pop sub insb mov adc int3 mov fwait xor scas pop cli pop int sub push dec out xchg stc shlb mov jecxz mov fnstcw addr16 sarb and insb and add push dec pop sar push mov addr16 ret mov fnop aad ja les jg jnp fs lea (bad) lock leave cmp out iret mov sbb fdivl (bad) repz pop cmp add sar arpl in cmc movsl ljmp or mov mov aaa outsb dec jg mov rorl xchg jl jg xchg xchg and pop mov lds add push ret adc jo jg xchg inc (bad) cltd stos sub cmpl cmpsb (bad) mov sbb jnp lahf mov ljmp aad in ss jecxz sbb jg mov in out in xor (bad) pop ja sbb xlat inc push jg mov mov icebp jp je jno xor and lret pusha sub aaa ficompl fistp outsl mov cmp mov dec aas sbb icebp add popf adc mov xchg xor call inc jg sub jmp add xor jg add push inc sbb push jg dec or lahf adc aas ret mov fsubrs out inc sbb scas lods mov dec addb sbb pop rol sbb std repnz jg sbb movsb jg lahf xchg sub js push outsl push in fbld lret adc cli xor jno stos cltd sbb sub adc out mov ret movsb cmp stos xchg pop iret (bad) mov mov mov xchg hlt jo jno push iret lea mov cwtl daa sbb sahf jbe ja test js pop jg mov lea cmp cmp dec push dec notb sbb aas pop mov (bad) dec lock outsl adc arpl inc nop fistpll bound aam pop mov jns sub mov jge and sbb call (bad) and add jae jle mov jno jg add sub pop dec in inc outsl inc (bad) or or mov gs or jae cmc and outsl iret xlat jno into iret jmp xchg inc xor fiaddl pusha test push xor imul mov jg push push dec inc arpl dec mov lods add mov dec rcrl pop or scas xor in jo mov xchg jg call fadd jg pop movsb push cmp push mov mov mov idivb sbbl mov adc jb cltd clc mov or out jmp cld xor js xchg or out int cmpsl mov pusha aaa dec jmp incb adc (bad) rcrb mov dec call jg hlt pusha and int fnstcw push int3 movsb add pop stos sub pop lea jo dec xchg xchg arpl stos jle or inc outsb fidivrl sbb lret in mov es mov jns ficompl inc add and jne push adc mov js jg loope xchg pop jl and sub push jg push mov stc stc popf push jmp cmp dec push jg mov xor aas sub and test mov (bad) dec sahf mov push imul out cmc and mov (bad) out sub dec jg mov cwtl in arpl ds addr16 (bad) iret xchg imul inc aaa mov sbb mov sbb (bad) and inc jg out ljmp out mov leave fnstenv cmp jno pop cmp scas aad add jge sub daa cmp pop lahf xchg push inc stos push rolb lods iret xchg mov popf adc std dec lods sbb pop sbb mov pop or lahf sahf ret popa xor jns push mov repnz mov adc aad push jno dec movsl jg xor mov test or jno divb jg xor add xor ds or sbb in jg (bad) add aas adc push dec cld arpl jp xor adc jp sbb loop arpl pop jl lock imul or mov mov addr16 (bad) shl mov lock or mov outsl (bad) fiaddl cmp test inc dec (bad) xor jg sbb (bad) xor ret fdivrl jae push fimull aad sti arpl mov pop xor stc mov loop jmp data16 push mov jno dec in inc cwtl jg cmp stos mov sub mov stos cmp pop ret cmp lds jg mov xchg add dec xor jg or jl divl imull into push mov str js lods stos jl fldenv mov mov dec mov (bad) mov xor sbb sarb fdivrp call jg jecxz xorl scas mov inc mov fdivrl das mov insl popa xor jg sbb cld rcll lods sarl out xchg stos xchg push inc loope loop mov mov (bad) loope arpl cmp adc aas inc cmp dec js jecxz jg sar xchg fucom and fcompl in mov int cli dec xorl lcall xchg pop pop adc inc jg stos lahf lcall push dec test jg pop pop mov push mov jecxz (bad) div inc adc inc mov dec add es add dec aas test pop into jns (bad) jae sarl xchg popa pmovmskb fidivrl mov xchg add sub inc cmp mov mov jg movzwl jo mov jg adc data16 push pop arpl inc fistpll outsb sahf xchg scas jge out jg orb movsl sub fdivrl ficoml xor cmpsb fnstcw rcl popa in test arpl jg sbb cmp ljmp cs add jg jg push fs mov shrb nop test jg bound stos adc adc gs jp std insl xor mov ljmp lods push xor hlt pop inc cmpsl add packsswb mov out and push (bad) xor inc push cwtl and mov in add icebp in sti jno movsb adc cmp cmp push (bad) cld xorl adc in mov add sub nop repz fldenv das jns dec jp jnp (bad) xchg bound dec jbe fidiv cmp pop sub sbb (bad) cli jg ret inc outsl imul jg out sub pusha lret jns mov or call sbb stc (bad) mov pop lods adc jg out in sbb cmpsl jg mov popa repz inc xchg subl in cltd jg xchg xor (bad) dec mov jae popf into aam and in jnp sub jmp push pop and mov adc stos das movsl cltd mov mov dec pop jbe (bad) jg fldenv push cmp les orl add jg sbb adc pop arpl (bad) jg aaa ret and repz jg inc stos fldl push jg pop loope jmp popa call lods negb jo sarb stos fsub roll popa addr16 jg or fldcw clc jl popa aaa movsl dec adc andb pop mov out aam insl mov jg fwait loop jnp out ret xlat fildll in jg leave xchg jmp les lahf jg mov jno mov jns push cmp outsb xor pusha mov inc jg mov aaa mov ds rcrl pop test xchg lds arpl call out mov push outsl pusha jg sahf stc into lods scas mov cld mov jg ljmp cmp icebp sbb inc and mov dec jnp mov outsl xchg push mov lds cwtl mov xlat mov lahf inc mov stc pop sub aam push ret sub cmpsb lret cmp sti (bad) outsb jg jno dec aam push and jnp mov cmp adc fidivr jmp mov push xchg subl cmp xchg cwtl xchg out daa test jg in fiadd pop jg,pt or (bad) loopne div jg ss mov and data16 xor push dec inc pop or jg movsl dec fstps and scas imul jg (bad) add imul fbstp or data16 jg add dec jb (bad) pop cmp pop aas xchg enter mov xor xorl and ret test xor inc outsb inc push inc fcomps in mov cmp mov inc adc mulb and pop popf inc add inc shl imul (bad) pop pop int3 repz out lret scas push mov jg or push fbld jb jge out out rclb dec cmp (bad) push arpl mov jg push cmp faddl inc test xor (bad) xor mov adc inc and mov fbstp bound test push ljmp (bad) cmp insl pusha stc lret dec xchg jo js cwtl adc loop fidiv jp mov pop push mov jge add mov dec fsts fidivrl inc cmpb jp sub push (bad) lock sbb scas inc les pop cmp jne adc bound mov push insl insb pop or js pop cs dec pop dec gs jg push and sahf addr16 jge dec idivl scas loope movd jae and sahf into mov push jmp dec jg jp jne dec fnop jg xchg hlt addl popa mov test mov add repnz xchg dec xchg rol aas mov int and inc jg dec das cmpl inc inc test jae stos push fs jmp pop in cmc jg inc inc inc jg jnp into mov loopne ret sbbl mov in pop jmp xchg cmp or lret les rolb push jo,pt jg inc xchg pop ss sub sbb mov int3 insl gs rcrb push pop sahf xchg jecxz ja jg lahf out add mov mov jbe cmpsb test push outsl mov dec in addr16 or fisttpll mov xor pop inc in mov cltd imul ja dec mov jg ret dec shl jg js lret dec xchg insb inc jg rcrb jbe (bad) jb in in xor imul push (bad) mov xor inc or jg sub adc (bad) stc and mov imul jg mov push jle leave out jnp pop adc nop aas cltd jno jecxz mov cld lea add adc dec jg (bad) push mov popa cmpb or mov les gs mov cmp jg scas js imul aas fildl repnz shll jg into push loope lret jg sbb test scas cmpsb jg and xchg inc jg and dec loopnew jg lret xchg mov cld test sub jg enter mov fstps (bad) mov push int3 jg adc insb mov push mov cmpsl dec add sti mov movsl (bad) mov add ds imul pop aas mov adc cmp xor or lods lcall xlat jp (bad) mov sahf dec nop push and mov leave fisub and daa mov jg mov cmp aas jg addr16 add inc jg inc jle je shrl lea scas pop icebp sbb mov adc (bad) dec pop aas shrl scas insl cld lcall jg pop shlb leave mov into push jbe scas ja cmp sub iret xor sbb ret add add inc and test mov out push (bad) loop aas mov fcmovbe dec into push inc (bad) lods jnp stos jb int pop mov loope jbe or mov fsubl sub pop xchg mov loope je xor pop sarl cli addps fcmovb mov jg xor xor fisubrl sub fnsave jle in popa lret sahf sub push dec cmpsl ljmp jg sub push and adc addl jg dec inc mov sarl mov mov jg ljmp jg roll pop jg sub pop jg loop cmpsb (bad) cmp fild push es orl lahf int aas push roll push push jg test (bad) je adc lods mov jno cmp mov (bad) rorl adc pop jg sti nop daa adc inc jg out (bad) (bad) or jg ficomp xlat or ret aas dec (bad) push pop pop (bad) sub out js shll ret or sub fs xor inc cld out inc xchg mov aas sahf negb jecxz scas dec imul jge js (bad) sti fcoms mov sub std mov cmpsl mov xchg mov je mov in rolb aas pop ds sub mov jns fwait jb mov (bad) mov or addl inc cs jg nop cmpsb inc push dec das or and pop and cmp iret mov xchg jo mov sub scas imul dec xchg xor cwtl mov dec jg mov out sub add push jg (bad) test mov push mov mov jg push jg jle sti mov test and add call fcom jg divb jg lds fstl pop mov xor mov mov and bound jg adc pusha iret cltd cmp mov or jg jmp movsl and mov lret xchg ja pop pop mov jg mov (bad) mov cmc lcall jg push dec sbb jo aad xchg sbb out (bad) xor sub inc faddl add or (bad) cli mov nop loope jg cmp out js dec mov mov ret push jg mov xchg fistpll xchg pop movsl xchg icebp mov scas hlt shrb pop in pop sbb in jno ljmp fs jae out jne cld cmp icebp xchg aas fidiv jmp jae and mov js repnz add loope jecxz mov nop (bad) dec inc sub int3 adcl and loope roll mov dec sbb cmp jg mov loope fs sbb decb je and mov fisttpl sysexit xor dec pushf ljmp pusha into jmp inc shrb jg pop fildl aas pushf jne icebp inc fnstcw or popf cld imul jg call lret inc inc xchg xor inc jg addr16 cmpl lret mov inc das jg cmp push push dec addr16 mov pop mov xor sbb sub (bad) and pop cmp test or into testl jbe mov inc popf mov pop aad jecxz stos loope jg xor cmp loope insb cmpsl cs jg gs popl sbb or inc inc jg rorb xor fmul shll pop shrl mov cmp daa add pop mov sub push roll daa aam test ja lods dec sarl add inc call clc pop sbb adc movsb cs inc sti gs pop push xor js into inc pop mov cltd pusha fadd aas scas loopne add cmp jne divl jmp push push sub pop out lods cmc pop xor xor in scas mov and xchg sub push dec push cli sub push les xchg dec sti cmp cli mov xlat jnp sahf out clc into jge and push leave add xchg js pop insb jg or arpl roll fs jns jne dec jbe xlat test loopne mov clc ret inc inc js inc jl push stos mov movsl call inc xor mov std push jae pop jno jg inc xchg notb dec xor insl movsl scas sbb mov xchg pop sahf pop xchg (bad) jg mov roll push mov xor and mov push pop std pop jg lea adc iret xchg jno cmp add push pushf ss imul mov mov and push js xchg clc jg in lea fwait cmp arpl mov sub mov sub dec xor xor std shld jg jb (bad) pop imul add inc or mov adc xchg je stos in dec push ror dec (bad) jg cmp loop xchg push sbb jg xchg sub jne add ss fwait (bad) push pop daa mov imul mov adc mov mov xchg clc test inc outsl jcxz out mov comiss orb cld jg (bad) mov push jg cmp xchg rolb jg mov mov mov mov and or push (bad) stos mov sbb jg out and mov jg mov call imul lods cmpsl sbb imul imul adc fs cmp mov xchg push or (bad) imul insl jg aam dec cmpsl das push jle pop (bad) and jecxz lea jmp mov repz pop jecxz cmp jg inc jge icebp push xchg fstpt imul pushf in mov push std push movb (bad) jo cmp cltd xchg call mov mov xchg mov lcall fs aad mov lds pop dec stos (bad) in lods dec mov inc push mov arpl pop ss xor sub jo sar loop ja xchg mov idivb dec and xchg rcrl jns fimul or cmp mov jg mov xor mov scas fwait int3 mov aam jg std or in out (bad) test adc mov lret xor insb jg addr16 clc xchg push mov xor aaa pop xor push clc punpcklwd jmp (bad) xor pop fwait jg loop jmp mov mov decl pop jg pusha adc fldt aaa jg adcb jnp fdivrs je fs jl notl popa jg lea stos pop and (bad) jmp pop jg dec dec (bad) (bad) addr16 mov mov out sub stos mov stos iret mov jg mov cmp push mov cmp add addr16 cmpsb inc sti jg mov mull jmp in (bad) jg rcll mov lods fs lret jmp pusha ja jg repz ret dec inc in les jg in dec pop aad or es mov inc (bad) aas xor ja icebp cmp rcrb out je lcall xchg clc pop test mov xchg fwait inc (bad) shrb or xor (bad) jg jmp sti test in call je inc adc cmp idivb jg jmp ret jbe xchg das sub cmp inc (bad) repz mov jg pop (bad) mov mov sarb aas mov out fcomi inc jp jg mov loop inc cmp fcmovbe sbb cmpsl aas dec fwait jo inc dec lds cwtl sbb add sahf pop in jg gs cmp mov jmp stos cmpsl xchg ja test ds fisttpl dec add pop into ljmp in pop popl cmp enter mov stos jg into shrl jbe add adc popf mov xchg mov xchg or cmp pop loop jg sub dec jo jmp jg orb mov jl xchg stos test xor or xchg sti paddsw sahf jg mov out scas xchg and add jns jbe aas xchg cmp dec addl sub push xchg mov ljmp mov pop push lods stc lock add xchg dec imul lds xor jg cmp mov sbb aad (bad) dec jg push stos mulb cmp inc aas pop sbb inc out cmc (bad) jg sbb inc inc and mov into xor push xor mov xor test fmull jmp jle outsb inc (bad) in jg fstpt adc mov jns ret insb test jg repnz fs lock lods or and push pusha lahf pop testl mov imul imulb add pop lret int xchg dec outsb jg jo outsl loope jecxz mov (bad) out ja popa cs je jne adc jg adc lds adc imul ret imul in repnz sub xor add mov scas pop inc and popf (bad) sbb cltd pushf sbb mov add movsb lret push fidivrl lods repz jg xchg inc push enter std pushw pop xchg jg lret repz mov push sahf mov cwtl cs adc mov mov xchg sbb sub xor imul jg cmc dec xchg out sbb jg push mov outsl inc outsb sti dec sahf push cmc addr16 sbb jg xchg mov mov pop rolb fwait and sub sahf popa scas out inc or aaa jg inc add cmpl ja ja mov daa sbb add sub jg ror push lcall mov xor mov sahf xchg push cltd jmp mov hlt aaa adc xchg shll cli jbe jg sub shrb mov adc paddusw push mov xchg dec movl sub imul jg mov rcrl jg scas addr16 inc (bad) jg scas xlat ljmp mov pop xor xor add ds sbbb inc jg out ja adc adc in lock (bad) xor movsb xor dec xor and jg lods arpl cmc xchg mov int3 and jle push repnz or inc or jg jb fsubrl std jecxz or push orb jg fidiv jg mov stos dec leave cmpsl (bad) xor fucomi dec xchg ja shll imul stos in xor cmp add jb shr and cltd cmp jg sbb push bound push lods jo in js inc addr16 lret cli in add addr16 push xchg mov jg dec push fmull bound enter dec adc mov aam push test lret daa arpl (bad) shll mov xor (bad) jl or sahf fidivrl (bad) xor jmp jg jecxz xchg ret dec lock inc test std divl in sbb or ret sub repz inc jle aas out or ret mov dec ljmp lahf fldt mov inc or jg pop hlt js inc dec xor pop mov or aas test mov bound dec cmpsl dec decb sub imul mov cmpsb andl cmp mov and aas out popa inc dec mov pop sti imull inc sub adc xchg xor jecxz mov inc aas pushf cmp dec imul (bad) enter dec das jg pop dec pop mov lahf lahf cmpl call mov jecxz outsl push pop xchg scas clc icebp jge pop imul movsb and sbb cmp addr16 jg push fs idivb fwait or pop jg push xor ret jp fisubr jnp jg lods xor fs sbb cmp js jg sbb mov jg stc ret push cld lret and sti sahf fdecstp mov clc es inc lock inc jg dec je test push jg add pusha clc xchg fwait psllq test ss js int insl incb cmp loope mov cmpsl fdivrl cltd loop push ret jbe js mov dec xchg mov jo mov ret push cld repnz insl jg lret inc cmp adc andl or out mov imull leave movsl jb jg mov clc fsubl cltd out mov jmp loopne xlat jle dec sbb pop fdivrl add mov (bad) ret sbb pop lret push cmc ss jg xchg lret (bad) jge push fstpt stc cmpsb cmp nop in out aas mov les int xor int aas scas les pop dec push fwait pop jl popf popa sarl adc fistp imul sbb (bad) push (bad) cld insb cmpsl xchg and pop sbb mov cwtl mov and cmc subb jg stc adc cmp sbb jl pushf sarb or mov and iret mov sarl ja inc hlt enter inc and in leave pop push mov int jg xchg push jmp (bad) jmp dec out inc loope lods clc xchg or in mov mov add lea or (bad) aas cmp (bad) cmpsb add cmp and mov mov dec mov pusha bound xor or cmp in cmp fimull jmp jg inc cmp inc xlat pop call push fcomps sub xor in and bound pop fnstcw push jg test pop mov int jg mov rcrb xchg jns (bad) mov sbb xor adc (bad) and test test mov pop cli sbb pop jg inc and lea mov sub sub mov int notl clc imul pop cmpl js out aas jae fdivrs retw movsl cmp popf dec cmp icebp out jg into out popf adc repz daa pop das add fs into (bad) mov aas pop ja ds adc ja mov jmp mov jns sbb jl fstl sub add mov mov push mov jg push jo pop add outsb jg mov xchg insb mov mov dec jmp jecxz push sbb movsl lahf jg scas idivb mov dec std push adc inc add jecxz aas lock mov and sub in jge (bad) pop cmpsb or fdivrs adc push jno movsb dec stc ds cmc push outsb popf jle aaa lods (bad) fwait mov or lea sub gs rcrl sub lods or pop sub push into int jle mov ja ja andb push mov incl jg xchg push lods inc (bad) nop lock cmpsl jbe or adc jg mov (bad) out movsb pop xchg (bad) mov js jg cmp jb movsl adc xor pop call out xor pop (bad) fidivl scas fbstp xchg sbb aas sub stos idivb jg cmpsb cwtl imul push insb pop (bad) loop jae es lret push jg clc add pop sbb push inc cmp push pop lret pop out ja rorl xchg jns pop int3 fnstcw xor inc sti add mov dec (bad) fs jae ret mov je movsl add jg adc fnstcw imul movb mov cmp cmp mov stc fisubr imul cmp dec lock pop add inc and pop popa mov loopne (bad) iret add insb in inc sub sub or mov dec fisubl add int3 dec fdivrs fldenv ljmp sub (bad) inc pop enter jnp lods cmp and inc lahf inc mov bswap push gs fldcw jg (bad) cmpsb push push ss mov dec popa mov (bad) mov jp dec xchg adc cli fidivrl jnp ja push cmpb test lock xlat outsl jg pushf jbe aas loop mov idiv sahf into adcl iret xlat xchg popa mov shrb lcall xchg outsl mov jg push mov push (bad) jecxz jg je roll ror sub dec jbe cwtl jg adc dec dec push or cmp stos loopne mov dec cld (bad) fstpl push dec divb out fidivr repz pop xlat add jbe test or fbstp or addr16 mov jne jg push ds shlb aas enter hlt cmp jg mov stos dec xor (bad) daa jno mov mov ja sti push cmp push jg xorl mov lock sahf adc pushf jo test mov inc cmpsb stos dec add mov out (bad) aas (bad) dec xchg jnp sbb cmp stc lret insb fwait jg pop out xor cmp adc add clc pop inc sbb setno or icebp mov (bad) movsb cmp xor aad sub xchg loopne gs sbb ret jg sahf das movsb jle mov insb dec insl pop iret aas clc call and xchg sbb mov aas push xor les push mov call icebp jg repnz push scas shrb pop and add scas aas lods pusha and cmp bound aas in sbb es jg sbb imul ja les call jmp jg test push ja pop (bad) lods xorl nop mov xchg cmp xchg or pop ss lods mov or mov xchg xlat jg xchg mov test sbb pop (bad) repz jmp or pop push dec dec or mov (bad) jecxz jbe mov dec dec outsl jne or push mov lahf mov inc jl cltd jg mov orl mov in loopne or xor sahf bound cmp rorb jmp sub in sarl in xchg stc fldcw loop fdivrs jle setnp shll adc xlat pop cmpsb sti lds (bad) pop sti out cmp call dec insb dec jne inc fldt inc xchg idivl shrb fs jg pop dec das into push cmc pop aas xchg outsb add xor jne add or jno idivb js jnp ret sti int enter pop adc gs mov jg (bad) ja push push cmp cmovno inc (bad) hlt and or mov xchg dec aas arpl mov cmp jb jae loop cmp sub out cld lret push mov data16 mov cmp xor mov jg ffree pop out rcrl in jne jg mov push (bad) jg sbb addr16 jns stc daa ret jnp dec int jg (bad) mov inc or stos and jae sub jg ret adc aam data16 shrb int mov jns push ja leave sar movaps cmp out cmpsl test inc pusha push jg xchg pop adc out (bad) repz loope add pusha arpl sarb mov lods dec sbb sub sbb pushf mov dec sbbb adc std mov and arpl (bad) mov cmp dec js and fdivs insb das ljmp jg xlat int addl jbe das lcall push (bad) mov out (bad) sbb push sti push sar ret push jg les (bad) loopne jg xor push push mov test stc cld xor pop enter jo mov (bad) jmp dec call sahf mov jo out jp lea jns jg push addr16 mov or lret xor pop jg cli jecxz fdivl sub jg cmpsl insl jle pop popa fldl jo xor stos aas push ficomp adc pop mov inc or mov aas sub repz add arpl addb pop xchg push outsl and decl jmp push sarb lods jg cmp fidivr scas pop or mov and bound pop clc jo aas das mov inc sbb mov dec mov mov xchg push (bad) cmp cltd xchg fistpl xor arpl aas pop mov idivl bound dec mov mov jno dec jg mov fs jg lds mov dec lret test fstpt sti mov mov out pop sub add mov imul mov scas aad ja inc xchg imul jbe fisttpl inc pop ret mov mov push aad leave mov popf in xchg xor in sub adc pop mov push xchg mov mov push lahf inc ficom cmc imul stos jo decl iret pop jg jb and cwtl fildll inc in (bad) mov or mov test (bad) or jp adc pop out jg add pop mov mov mov cmp outsb jg (bad) ds jg aas data16 sti push mov cpuid jg xchg dec mov stc outsl pop in ss inc outsl lahf inc cmpsb adc je jge or mov jno dec leave jecxz jg inc push notl sub rcrb sub jns push leave sub mov mull sbb push dec fwait (bad) sti es sarl mov push xchg fsts push dec push dec scas stc pop inc aas fwait andl out mov aam mov iret mov (bad) roll mov insl inc xor mov clc xchg sbbl xor inc add dec lret xchg adc jg icebp inc daa repnz and jg xor lret ror sarl pmulhuw int pop mov cmp jae hlt les idivl add idivb sbb mov stos adc cmpsl mov sub cmpsl dec jnp aas cwtl cmp out nop jne inc rorb inc mov pop sub dec imul mov test push cmp mov lock movsb mov insb adc pop dec pop inc imul mov push xor cs mov sub push loopne add jne jg or fsub enter das (bad) xchg ja mov sbb ss ret push int fdivl push dec cwtl ja xor dec push out cs jnp dec movsl jg sub daa ja xchg push outsl mov inc push cmp sti xchg sub imul pop fstpt add add sbb inc fs rolb pushf jg cmpsl xchg fsubl loop jg or testb repz (bad) mov aam andl jg aaa cmp les jg sahf insl push jl pop (bad) cld daa fiadd or adc shrb xchg stos popf int3 test roll jg cli out (bad) dec fisubr loope jg mov fstpl loop into rcrb adc or jg roll addr16 inc ret and test shll push pop xor add add mov add mov dec nop test shlb (bad) adc mov pop cmc out jl adc inc cmp sbb int3 jecxz dec mov jns lea cmc jg cmp jg leave pop xor pop push loopne mov xchg xor mov sbb sub or mov aaa mov adc mov xchg pop fist inc jp (bad) mov shlb push addr16 or pop sub mov jg add lahf call stos inc xor orb test icebp (bad) jg jle jg add (bad) shrl lock jg sub lcall popf push out sbb inc lods pop xchg scas sahf outsl jno mov adc sbb fmuls mov test push notl mov and jo or dec movsl xchg addr16 push int3 or shl jmp sub pop lret add inc pop jg adc dec (bad) in mov std dec imul fs dec xor fwait sbb jno cld out int3 pop imul xchg sbb and test pop mov push lcall icebp repz ret lods or scas out mov cmp mov inc cmp loope cmp and sahf sahf or jg outsl adc inc inc aas stos xchg mov mov cmpsl dec cli sarl push cmp cltd mov mov test bound dec jg ret rorl mov out andl insl loopne shrb or shrl int and lods dec push rolb push and orb jno sbb ljmp adc bnd cmp (bad) sarb (bad) and aas push xchg dec (bad) jne int3 mov xchg push push imul and jg lds mov lret scas (bad) and jg in idivl push adc addr16 or std fistpll mov mov mov cwtl mov inc clc mov fdivr mov push xor jg icebp mov pop inc jg dec sbb idivl popa pop jl jmp sub sub cmp dec jmp dec aad fs jg hlt pop and adc ja lock outsb cltd jg in mov repz push idivb arpl rol scas jg dec call pushf jg fdiv das stos cwtl inc sub (bad) pop ror xchg sbb sub push mov sub jl bound pop lods int aaa push push jg add fimull call push into jle mov push cli pop sbb dec outsl ja loopne (bad) dec mov xor xchg push jmp idivl stc ret nop lret jp popl mov jg jno nop adc pop mov cmp push repnz sbb shll xchg loopne or dec das cmp push mov mov out and pop jg outsl xor gs stc jg add clc or mov and pusha pop adc fisttpll jg cmpl mov dec mov stc inc push je inc inc jg out mov sbb jg mov ret jbe xlat and or xchg mov jne insl cmp nop dec roll jg inc stc dec imul loope sti push aad mov rcll adc xchg fstpt cmp mov jle inc xchg rcll loop (bad) sahf jmp pop sahf movsb mov aas jnp jne loopne (bad) mov out mov jo scas jg sub jg scas pusha daa arpl xor push mov pop (bad) mov jae ljmp inc push ret int3 mov pop pop sub jg mov sbb mov sub (bad) cmp jge (bad) mul sti bound (bad) push pop cwtl mov dec push dec daa inc cmp mov rcrl or jg jne push mov push sbb jns div movsl inc inc fdivrs pop iret loop int3 add pushf mov into jg xlat popa xor mov shrb mov pop dec dec xchg and jg jb xor cmp pop insb in and xchg mov inc ds mov outsl lcall fsubp or out shr fistpll push adc mov push pusha negb jo xor mov adc sarl dec pop rcrl loop pop inc icebp dec mov hlt dec jg push test mov lock dec add push sbb or mov inc inc pop (bad) jg lret fidivrl popa mov and mov sub mov lods cmp and pop imul or and sahf xorb dec inc hlt cmpsl xor loope ja ljmp movsl sub scas lcall les fisub ret and cli pop jg push inc inc jb jo fdivs mov ficoml add idiv add pushf push mov cmpsb int3 push (bad) fwait push arpl xchg dec or push out out outsb aas and into pusha push js dec pop mov popa push jo mov imul (bad) sub adc out dec mov cs jno in adc xor popf rcrb add adc lret jb jg cmp cmp int stc inc jp lret dec jg test (bad) mov mov lahf mov inc mov xchg add (bad) jecxz ret jle mov inc stc lock xchg mov xchg cmp xchg jns cld jo repnz call in dec pop dec aaa ret clc sbb xchg pop fnsave inc xor daa inc push jg pop xchg fwait jns mov dec (bad) push cmp aad jg (bad) jne dec rcrl mov mov push ds hlt dec jg push cmpl fidivl mov (bad) xor and icebp sub jg fstl into jg mov jmp jg jae mov jg into aam test movsl fadds jg xchg inc je xchg push push jg xchg push int3 sbb xchg sti jmp pop or lret fcmovne fwait repz inc sti inc push test js pop jg jo or mov jns decb inc push pop cmc jg xchg (bad) pusha sahf mov gs or dec data16 mov dec xor and daa loope aas xor cmpsl sti push and dec pop push adc dec push (bad) lods mov arpl fnstcw sahf adc mov sub icebp xchg sbb mov add pop add jg mov dec mov repz rcrl push and cmp cmp pop mov cmp jg les push adc and ret inc xor adc xor punpckhdq pop jg movsb cmp or push outsl jb test sar cli out mov jg pop inc adc and sbb sub out mov pop jg sbb out int mov rolb jb lock sti fsubr jg dec loopne out xchg es or dec mov pusha repnz jae and pushf xchg pop jg jns cmp dec stos or in ficoml aas xorb hlt addr16 dec push jbe (bad) aam pop pop int3 mov jg cmp push cmp dec pop inc jmp stos lea jns dec cmp inc cld rcr hlt and mov jne jae adc ljmp outsl add in das test enter xlat div mov test adc ljmp ds lret or dec pop mov jnp,pt in dec dec out lods lea pop jg sbb outsb pop fidiv sub dec inc or dec jg jle push xchg fwait jecxz jg adc std into (bad) xor mov inc out jg inc fwait sub jge mov les out fidivl aas dec (bad) lcall jecxz mov push or mov or dec dec lods lds add pop or aas and mov xlat bound add adc or jae add mov mov pop push mov stos daa mov js xchg xor inc xlat insb mov pop in push sbb adc pop adc insl aas rclb adcl fs sub cmp xchg clc pop or push jno pop fwait pop pop in sub cltd dec adc cmc jg rorl ret sub cwtl cmp push add adc inc dec (bad) jg cmpsl imul mov je mov outsl adc cmp sub mov sub sub loop xor cmp dec cltd inc cmc or inc xor cld popa cmp mov inc into pop jg repnz fs xor loopne xor int cmp in jbe ficoml test xchg jg pop lret adc jg addb push aad and ret pop xchg cmp lea mov jg int repnz cmp dec enter jg or ss add gs xchg dec aam mov push dec or mov sarl push xorl jg sub outsl inc fst push int3 dec lods imul imul inc or les ds inc jle aad out xor sbb jg sti fwait mov insb and jg inc in repz imul fbstp fs js daa jnp adc fidiv popa jg stc inc inc mov mov mov jg mov lret cmp daa cmp inc das scas mov xor pop cmp fnop adc iret enter sub repnz popa lahf sbb insb xor or in adc les out aas jbe in xor stc arpl xor dec imul jg outsb dec repnz cmp add dec jg in addl jg stc xor pop fstps mov xor dec out jno mov shrb scas enter pop mov pop shlb jg dec in mov jmp jg dec xchg scas cmp dec inc pop adc mov hlt stc fstpt mov dec cmp in mov push scas inc (bad) jmp pop jg or mull test mov mov ja pop jg insb pop or jg fptan mov cld int3 jecxz sbb sub xchg nop insb jmp fildl add scas push mov jp test xchg mov push cmp sub add cmp data16 mov fwait popf in int (bad) shll lock outsb jg pop mov push lret xor xchg pop imul shll dec inc movsb jg add cmp push cmp jg push scas sub out sarl (bad) ljmp js data16 leave inc add addl jmp add std lock stos shll ret in mov mov inc iret xchg xor mov inc popf add mov ret pop add push stos movsl pushf bound (bad) fcomip call mov ret imul bound jg arpl push jg (bad) hlt xchg jmp out jg xchg push incb xor and jne negb popf sbb inc sub daa lahf in fbld andb sub addr16 jg lds jg mov sbb or negl movsb xlat mov cmp (bad) cmp add sbb aad mov movsl stos addr16 lock inc pop push mov (bad) cmp out loop mov jo push insl jg (bad) mov pusha xchg adc or jg sub vpsubsw in mov int test add jg outsb cmp call lods es inc push js and jg out and sub lods sbb scas pop jg repz mov dec mov dec hlt (bad) xor imul mov flds mulb ror or and js push xchg dec ficoml fildl mov inc jg push cmp test and mov mov inc nop push aam ret pop lea add mov push test movsl push jg sub jecxz inc (bad) jg or iret pop idivl mov loopne pop or lret test mov imul test ljmp sti sbb das adc inc xchg sti jle es rclb test movb aas outsb xchg mov scas sbb (bad) jg rorl loopne addr16 xchg dec push jns sub xor jg hlt sbb (bad) or dec xchg or mov adc outsb (bad) mov jg popf adc lea pushf (bad) mov jo je data16 lret pusha jne sarl xchg or repnz stos lret lods pop and mov (bad) aaa test push jg ret jl dec (bad) (bad) gs mov pop sub decb dec cmc das outsl inc add pusha ret mov push sub mov xor icebp jg sbb dec cmpsb push pushf mov ret mov xchg cmp popf pop ljmp cmp pop mov pop dec add and push movsl lods mov mov adc jg ret adc cmp jg xchg (bad) in inc jg das rorl cli movsl dec addr16 mov mov jg (bad) xlat and mov inc fwait divl (bad) xor ss imul push mov xchg mov inc xchg jg mov repnz lods test fs push cli sub (bad) mov push mov call jle xor xlat pop dec dec dec jg sub mov aad addr16 call jmp in dec pop imul mov loope pop lea mov cmp outsl inc fistpl insb fidivrl cmp fisttpll xchg outsl mov in push xor pop cmp lds jno push (bad) bound push mov mov and push in push mov inc adc sub inc (bad) (bad) aam fild ja fdivp (bad) add inc in jne jg pop dec push testb mov pop jae sub cmc jg arpl and mov aas cmp int3 sub in dec push xlat dec or cmpsl jg mov aaa ret sub pop vdivsd hlt push ja add mov xchg pusha jno das mov push movsl jae jg lcall sti push sub ja xlat push ss cmp fldlg2 and sub fwait (bad) cmpsb pop (bad) jcxz (bad) jg out aad arpl je dec inc cmp jg loopne popa popf or jg and inc insl jg cs cwtl adcb in sbb jg pop sbb pop inc imul out adc stc fs xchg loop (bad) int3 dec push out jle in mov call testl cmp movsl and bound aaa cs fldl add inc ss cli icebp mov stos fisttpl inc (bad) loop mov push imul popa lahf mov sub test mov out jg push mov xchg imulb mov pop out fstpt stos jg inc push jno xchg or mov inc pop mov jle cmp lret mov jg cmp jae aam icebp jg bound fsubs xchg xor cmc dec aad jg ret sub fbld sahf fidiv dec arpl and jg mov push pop jg loop xor mov sbb jo repz adc mov pop ja (bad) mov pusha mov jmp data16 jg sbb ret sbb (bad) aas push fwait xor stos loope push clc dec push jg dec and daa jg adc xchg add stc test jge inc in inc in fisub push fisttp inc (bad) js les sbb xchg sbb sub dec imul out inc (bad) dec je cld add das (bad) ds jg cmp outsl add (bad) std repnz int3 fnstsw inc mov pop loope test mov jnp outsb dec mov mov into out add xchg inc out mov xchg imul or xor (bad) jne call insb xchg pop shrb mov mov jg pop arpl popf xchg fstpt enter inc cmp jg stos jno cmc fbld adcl ljmp out nop cwtl lahf fs arpl push jmp add dec sub push or dec stc sub jg mov xor push lds cmp ficomp bound in je or aas add xchg js arpl mov outsl pop sti hlt mov jg sahf les repz jecxz call outsl aaa std cmp fwait mov push pop mov mov fldcw fldt iret and jmp jg add adc outsl es gs dec or jg adc test mov mov jno fadds std iret jg fsts jbe xorl ror mov ljmp jg adc das jg loopne adc or pop push push stos xorb fimull aas sbb in jg int jnp (bad) icebp dec mov xor ss mov jge push xchg lods stos dec test pop sahf mov dec jmp arpl xor in xor loope pop iret icebp fwait test dec cld jg xlat dec das pop mov dec cmc or (bad) adc mov addr16 rcr pop jne xchg les pop loope jg jl or xor rolb lods sub pop rep movsl ss mov mov push scas loope and pop std arpl out stos push fistpl repz xor lcall push jmp jg mov and loop imul jg jb cwtl mov out test icebp pop scas sbb hlt pop jg ds sarl or adc adc jl loop jg fdivrs jo fnstcw push clc pusha add sbb push jne,pt push xor pop mov dec xchg fidivr mov popa out inc xor (bad) cli inc sbb aam nop adc xchg adc jecxz sahf (bad) xlat add in stc pop inc (bad) mov lock or xor jg rcrb inc ret xor loop mov pushf enter arpl jnp stc push xor jle push test push out dec int jg pop mov call sbb jg test js gs jg hlt mov add jg push xchg xchg ret fs jg in push mov sub jle sbb push fistpll jg lret outsb xor sti dec mov inc outsl fstl push imul popf imul fnstsw and ds xor int fs (bad) jb mov adc (bad) aam adc jne outsl dec (bad) jg pop xor fildl sarb sti fdivrl aaa jg sysexit scas add out loope test adc aas pop or mov or movsl pop push inc mov and popf jg xchg out pop jp and jnp je sub sbb js dec ljmp adc lock jge mov pop loop ja jnp adc jg cmpsl lods (bad) dec pusha leave cmp dec adc mov lea xchg cmpsl xchg jg lock pop cwtl insb add das daa mov scas jp fisttp (bad) test outsl cld mulb adc push popa sti mov fcoms adc sbb and test loope sub hlt pushf aas outsb push (bad) fidivl sbb (bad) inc jne and (bad) (bad) sub push pop sbb insb popf data16 inc fisttpll addr16 mov inc pop nopl (bad) das popa sbb jle push sbb xor sbb call jne cmpl loop adc dec imul jg addl sbb mov call pusha in ljmp add xor xor jg cmp repz adc (bad) test add and gs repz dec jmp int3 into adc movsb fcompl jg dec jae xchg sarl out test stos inc aam push push xchg xchg inc cli das push jg adc push roll js std mov sar jg push xor into pop adc push aas add mov and adc scas sti (bad) out pop lea sbb mov xor nop jno xlat out fild addl jnp out outsl dec jnp inc mov jg out rorl push stos jl pop out (bad) jbe xchg je psrlq out adc jnp mov outsb mov imul xchg xchg insl jbe add movsb dec xor lcall mov and sub add fdivrl je pop scas ror lret jecxz cmp (bad) in cmp jg adc mov or movsb cmp leave mov ja add mov in cmp cmp or sub lea jne mov (bad) arpl mov hlt jg push test sarl sub jg xor popf mov aad leave jae mov adc push idivl in mov mov mov push inc jns jg dec adc scas cmp xor xchg inc sbb cmc adc ljmp sbb xor push and mov push add mov pop mov jg loopne pop and xor jg lcall sti inc push push push inc cmp push pop or pop out push inc ss cmc aam dec jg cmp in out test inc int3 add jg mov insl and add stos (bad) xor pop pop clc (bad) mov lcall (bad) test in pop push out and jg jns dec movsl dec pushf (bad) cmp push sub pop (bad) and ret aas or addr16 pop jg xchg ds jno pusha std stc cmp xor outsl mov pop pop adc aas data16 add cmp in jg les cli inc jnp in xchg lds leave cmp mov add fstpt call xorb test enter sbb add fsubs xchg pop xor sbb mov bound inc out scas ljmp jle imul jl dec mov fxam jg repz loopne in (bad) scas jg cmpsb cld sub xchg jg mov inc mov xchg xlat lcall cmpb es mov mov jg sbbl push adc aaa pop jg es in push daa ja (bad) mov jg pop push pop adc mov xchg scas fistpll mov xchg push (bad) outsb pop pop cmp mov pop and jmp xlat pop and (bad) jg js mov and pusha ja jg mov cmpsb call jbe lods int jg rcrb cmp lcall jb mov jns call dec xchg mov cmp xlat push sub aaa add out aad dec fisub loopne add imul test add neg jae dec pop mov dec mov pop addr16 dec ds sub aas jb sbb test (bad) push jg in out out jecxz xor push mov sub test cmpb mov ret mov jb pop rcl xchg jg ljmp pop sbb fnstenv leave dec jo std mov mov bound jmp add adc cmp cmc xchg mov mov push (bad) mov mov (bad) fimul cwtl mov addr16 icebp movsl jp (bad) sub aaa lea xor js lahf setns pop mov (bad) repnz sub jno repz jmp xchg push lods inc sahf push testb jg (bad) in out inc cmc in jg xchg test mov jg mov push fidivrl in insl adc inc out pop jg inc mov sarl jb inc lret pop pushf (bad) imul aam hlt les xor jmp repz pop sbb xchg or bound or sbbb sub loopne jg mov lods aad aaa jg cmp jecxz dec out push jg aam push dec cmc and js jo xchg mov add pop cmp (bad) dec and jp sti push sub mov sub jne lcall pushf out mov jg in incl push inc xchg jg cmp inc out jecxz mov pop inc mov mov lahf inc mov pushf sub movsb jg sbbl flds and in jg sbb sahf pop jg test out jg daa or add jne xchg fwait mov lret mov dec movsb pusha cltd ds incb sbbb push xchg mov movsb inc mov or lods test addr16 or jo jg fdivl cmp nop inc and mov cmc pop dec pop mov cmp or jg xor and sbb sbb xchg popf cld lea dec or mov mov push rcll push pop outsl cmpsl imul inc push and cmp xchg xchg jb jae loop mov adc mov pop pushl inc inc in mulb outsl pop jg xchg pop in adc out aad sbb dec shrl shlb mov js inc (bad) mov jg mov pop pusha mov mov mov gs cltd fbstp lock push pop stos cmp fisttpll aad lahf (bad) popa and xlat push jg mov aam cltd cmp sbb subl cmp in mov lock add jecxz mov adc xorl add stc loopne dec mov das movsl mov add add jg cmp mov sahf mov jg mov out les imul call sarb scas mov repz fdivrl push or repnz mov test xor outsl xchg pop roll pop (bad) jmp out mov adc jg push dec movsb nop test aas scas dec mov push aas je xor add mov dec jbe (bad) xor movups xchg addr16 lahf xor dec out mov jns rolb addl mov inc outsl fucomip and mov mov aad push xchg jg jl or sub cmp push sbb inc addr16 jg push xlat out mov jp adc popa aas sub push inc hlt loop iret insl fs out pop xchg aaa ja inc inc mov ss jg out mov sbb negl push adcb push orb jg movsl rcrb movntq cli fs gs pop cmp jg dec sbb fidivr jo push aam cmpl dec mov int ds adc addb sub push jg lret rolb pop (bad) lods sqrtps dec daa dec jg popf gs (bad) aas dec push push test lcall or jno cltd pop repnz dec andl jg pushf je (bad) xchg aam jg jmp sahf popf mov aas outsb scas adc mov arpl ds pushf jmp aam dec enter icebp push in lahf jg sbb mov and mov ds hlt pop mov cwtl inc pop adc andl add (bad) lret mov pusha mov cmp jmp pop add inc movsb andl cmp mov mov jg,pn daa push and ja pop insl and jle jg mov sbb jg fwait lods push aas mov xor adc jg cltd sub push pop outsl push rorl or aas test rcr mov pop bnd popf pop jmp iret enter decb mov loope jg es int3 cmp jg clc cmp jb dec shll jg xchg pop push negb xor jge adc loop mov mov iret pop addl and stos (bad) mov in jg stc sti jl loopne xorl lods les mov pop stos xchg roll push sbb div and lcall stc repz and lds lock mov in addr16 jg inc and data16 jp dec scas test lret stos cmp rorl jge sub bound add cmp loope lock cmp mov cmp outsl sub jg fnstsw xchg rorb scas xor xchg insl dec fisubl add out and jg mov sbb sbb cltd lds pop add test fistpll jg sub jg aaa jae mov xchg idivb popa mov enter jbe fidivr mov out (bad) cmc dec mov decb jg cwtl data16 pop jg adc fildl lods dec aam push xlat mov push sub imul and dec sub mov test imul jmp fs call cmc inc xorl mov out fstpt (bad) ljmp mov aaa fistp sbbb hlt sub ljmp mov ret mov stos lods jg jnp cmp fwait add mov and sub (bad) push cmc jecxz sahf (bad) aas xchg mov cmp sbb and xlat jg cs dec jmp call outsl lret cmp sub bound cmp cmp rorb in ret out shl outsl loopne out jg shll in scas rcll pop mov outsl mov mov adc dec add add push mov inc negl add or lret inc loope jl mov dec or int3 and add xchg loope dec mov mov xor inc mov fcoml xor cmp (bad) out xchg push push hlt pop jp or es (bad) jecxz jge jg xor sub lret mov cmp loope lock xor jg cmp out (bad) fnop xor mov das jl dec sti push pop jge dec popf clc (bad) xchg jg mov add pop (bad) fdivrs mov (bad) fsubrl mov loope adc fistp loopne jg fstl fsub inc mov jp test push jno sub iret outsl mov sub inc test (bad) jg mov cld jle clc jg lret outsl sbb jg fisubr ds nop xor scas ja das jbe sbb or les aas jg mov cli pop jg adc add je fnsave push fdivl insb pop pop xor mov into aad dec outsb mov push adc je hlt call xor mov jnp int dec jg push ror daa fwait and mov jge ret repz and sub mov jg mov jl mull pop mov sub jg test inc mov inc mov fsts inc dec dec push cmp bnd jl mov hlt sbb or inc jle mov push sub jg (bad) pop mov imul adc sarb xchg cmp jl ret repnz dec jg pusha mov mov push mov fistp fdivrs pop adc mov pop add xchg push inc xor pop aas jns shld es lock push inc hlt mov stc (bad) lods (bad) mov addr16 inc stos and xchg xchg out lds mov jg cmc outsb sbb adc mov ss adc sbb (bad) fstpl cli inc push dec push dec daa jg and aas cmp sub mov int3 inc jg out in mov jno jle aad xchg push es pop jp call jg xor add scas cmp mov mov inc loop mov dec (bad) addr16 or inc jg sub pop mov outsb xor imul inc mov rcrb lock andl push jg pop and outsl lock in data16 (bad) in mov inc popf and ss xchg outsl jbe jg rolb daa icebp xor pop mov mov xchg mov orb scas push push jg sbb sbb cmpl xchg lgs lea pop ret jge push btr call xchg pushf cmpsb xchg jg push push ret sub std jl stos push aas repnz int loope lds lret jg dec sub hlt jno mov cmp jg daa sbb dec notl cmp add mov push (bad) xor mov sub (bad) das fs jg adc addr16 enter pop adc mov test cmp pushl mov fnstcw out test add cmc sub jg sub inc mov loope push sti push je xor mov xchg sbb ljmp or jbe sahf cld jo rol jg mov dec mov pcmpgtb jl movsl cmpsb xchg pop jb xorl fstpt int3 lcall mov jg dec dec mov lods fsubl and jno,pt push mov inc jg leave icebp daa mov xor ss add pop fs jg insb sub loopne inc jl cmp std addr16 lret adc dec jle dec mov lock mov xchg add jg pushf sahf pop fldl2t icebp mov jp ss inc jg movsb adc mov mov fcompl or push push mov dec mov out mov inc jg testl scas imul stos outsb jge pop insb jg mov mov aam jg lds lea jg rcrl out test jno pop dec adc mov inc fwait mov inc stos and push jg,pn adc repz mov push fstl cwtl xor or std inc xor and ret test loope shll jns fiaddl xchg popa xchg insl dec icebp add jge call push fstl hlt ret adc or push xor adc jg sbb sbb movhps out loop lds sbb mov xchg fldl2e daa je sub push mov outsl xchg test test adc pushf jae sub mov mov jns cmp xor jg push je std or xlat in int sti inc mov add arpl shlb mov es jae cwtl mov out and sub insl pop mov popa adc and jae push push jg mov test lret lahf or jg pusha cmp (bad) cs jg movsl push sub xchg fstpl fdivrl dec pop ds mov push push jns xor dec (bad) pop jg fistpl js sbb fdivrl inc fcmovnu aam jbe scas bound jb fstpt pop cmp fadds pop jnp pusha adc out jg xrelease jg daa sub out loop out movsl pop jg jnp dec xchg call mov mov lcall mov incb addr16 iret jg pop mov dec push es xor pushf scas ret mov jbe lods arpl pop loopne adc fs mov in bnd jmp stos cmp adc or inc sarb ret iret cltd out or decl xorl cmp dec sti rcpps xor clc fwait push add movsl insb jg xlat jo aam jmp jg mov bound scas in jmp dec inc adc mov (bad) arpl dec enter and jnp test jg mov xor nop dec in pop sahf sub cmp sbb icebp jecxz stos xchg inc pop mov in addr16 and test mov repnz cwtl jg xchg xchg ret repz cmc mov ja pop mov pop mov mov je jg in pop xor mov test movsb push jmp into stos add fsubrl lahf mov lock cmc jg inc lret cmovs jg jle inc les (bad) cmpsb jmp dec movsl outsb jg imul adc mov outsl cli (bad) pop aaa mov ja jne inc adc pop dec jg pop out jo das jg dec cltd and jg bound inc xor mov jg adc int mov mov (bad) popf jg pusha movsb sbb fs insb jg and xor cmp out out pop mov stc pop (bad) and addr16 mov mov popf adc inc loop jg aas ljmp ret cmp fisubrl addr16 jg jl test mov mov dec jae,pn movsb pusha inc aas inc push xchg in outsb pop addr16 sub mov into fbstp (bad) or adc mov data16 into pop fwait notb inc popa cmpl repnz (bad) sub jecxz inc mov jns inc idivb ljmp js sub fs out popw cmc or insb in jne imul mov xchg into cmp pop cwtl sbb or or xor mov test repz dec out (bad) cmpsl add aas mov aam inc push jg sbb pushf ja cmovns aad scas out mov mov dec jg sbb fsubrl gs mov lock mov sbb js addb pop mov mov cli add movb dec jg inc sub lahf nop in mov mov adc push push dec int3 xchg sti xchg cmp adc into jns cmp pop idivl stos or ds inc pop add lds fldenv pop mov xchg mov ret (bad) icebp cmpsb dec or push jno xor pop jg ficoml sub jae jg into pusha and jl jno sti les jae mov cli cltd or jg push push pushl decb jg dec insl clc jnp adc inc rcr xchg int3 inc iret jg lahf sub rorb rcll out shrd dec dec (bad) mov mov push cmp mov jo fsubrl sarl into jg inc in test loope or js mov sysexit mov iret and dec jo jg (bad) aam mov pop lods aaa nop cltd pop test xor (bad) ds or cmp pop fisttpl sub jg cmpsb inc jbe cmp xlat adc jmp insb aas and pop bts push pop dec and loop push out mov pop imul mov repnz xor sbb mov loopne jg dec dec cmp push jae aas jnp popa fimull (bad) jmp inc imul push divl in aad inc je xor dec scas loopne testl cmp icebp pop dec mov push sub and xor lret adc sti insl xchg incl mov test cmc loopne fnstsw or add mov xor push outsb xor inc mov xchg inc in cmp aas insl leave sub inc cmc adc addr16 flds adc dec pop pop gs ja jg mov jl jg fildll lock out jg adc sub (bad) jns sbb add add adc xchg in test mov pop jmp pop ret push test bound add aas cmpsb jo push int3 dec lods rcll mov leave pop jg sub cmp test cmpsl sti jae mov movsb xchg dec xor push inc shlb in jg sub out fimull clc mov cltd add xchg mov xor inc (bad) push xchg mov in dec lock shrl lret push ss js inc call repnz lea mov imul popa mov dec xor imul mov andnps jg or scas fbld addr16 in jg jmp pop xor jnp cmpsb fimull loop add pop jg lcall test add push xchg or cmpsl lret pop xchg jg fidivrl lods mov jg rcll stos jg cs xorl fsubrl in scas mov cmpsl cmpsb push dec imul inc xchg xchg or cmp push or mov xor das jo jg jbe,pn aam pop or mov call push pop jg fidivrl fwait pop jb out xor repz jg mov pop loopne jle popa xchg cltd cmpsb push dec jg insl xchg jmp jg xchg dec mov testl sbb jg sti adc adc cld xor push dec (bad) lahf imul inc mov in jg ret jge sub aad jg push in rol popa jg sbb lods sub jmp repz or jg lods pop cmp xchg outsl xor jg mov inc cmpsl (bad) fwait mov jns rcll sbb and test ds sbb push fsts xor push mov bound jg sbb lods lret jg aad jmp jg push xchg xor jg test rcl outsb and pop insb lret mov test lahf cmpl inc dec sbb gs sqrtps cmp xchg mov test and imul mov pop jg xorb in aas ja push repz fdivs mov jg mov pop jmp cmp jbe add js pop (bad) aas pop sub pop orl inc jb jg inc mov cmp ss jo nop jg es out addr16 jle lds jg xchg leave lcall dec shl out mov or and sub xchg or mov test inc rol xchg jg (bad) adc repz test movsb or pushf mov (bad) xor push push and mov jae mov xor cmp xor enter jl push cmp cs jne dec test call or jg shll adc pop aaa cmp sbb xor dec insl inc cwtl ret mov out or jg addr16 stos (bad) movsb les loopne fistpll push int3 outsl cmp lcall insl incb mov ficom aaa sbb les lock inc cmp sub xchg jg sub lret fisubrl test or pop add rcll les xlat ret into sub dec cmpsb ja adc pushf cmove ret std lea sub and cmp add push xlat add add push mov jge push cmp sahf jg roll push test ret incb imul (bad) call fcoms cmp sub jg imul jg adc push into xor mov xchg mov jg imul out mov sbb fist es jg insl push stc shrb sarl mov rorl sub push (bad) pop negl jle,pt adc jnp dec jmp inc and ficom jbe aaa jg data16 sbb jg outsb int out js xor aad lahf adc mov cli jg cmp loopne sub repnz aas push pop call ret arpl or push xor jmp lcall mov sbb mov xchg inc mov sahf leave or mov dec mov insb push xor insl push mov jg clc push ret inc mov jg adc mov mov jg sahf (bad) out sbb popf inc xchg jg xchg lods mov jg dec mov aas jecxz aas ja in xchg gs ja clc jg stos fwait cmp sti sub mov pop xchg out sbbb (bad) push jg stos pop dec xchg jae jg lea jmp xor mov xor xor je dec test add fisttpll jl fsubrl pop lods or inc jg in icebp ret xor mov mov inc fmull in ret (bad) mov jge inc jg mov popf dec lock and shrl jne xchg jmp lcall out jb (bad) in or rcrb jg hlt aas dec and loope jg sub sahf pop inc int3 jb in aad cmc sub loop icebp pop ss popa dec push mov xlat mov jns add pop in xchg jle mov xlat in sub leave push aas (bad) insl dec test adc cli cmpsl loope in inc leave xchg add mov lea jg pop test or and mov repz aaa jg fldcw adc or dec jns outsb fdivr sarl out cmpl idiv ljmp and pop jg push in fwait stos daa jo or pop push dec imull jg inc rcrb das movsb insl jg lods or stos fistpll aas jbe push xchg push (bad) jae imul iret push add pop popf add mov and xor jg mov arpl pop in xchg rorl cltd jg add mov mov sbb mov bound cld add repnz xor sarl fsts mov cmp or lret inc imul in mov pop mov lret rcll add sub les inc jecxz push xor rclb mov ss jae mov pop add aaa jo adc cwtl jg cmpsl add mov icebp jg xchg shll mov push dec (bad) rorb pop jp jg ds rep lods movsb jg xor pop xor mov scas loopne dec jo inc stos xor pop sbb icebp sbb jb pop lods lcall pop stos adc xchg cltd xchg jg data16 pop cmp ret jl mov jnp adc mov test icebp mov in mov or pushf lock push jnp pop call addr16 inc insl stos or mov (bad) mov imul xorb jnp test jle fst mov (bad) mulb sarl jg xor ss (bad) xchg cmp adcl jg lahf add push fucomp gs push sbb dec aaa divb (bad) js pop (bad) push jbe out sarl jg lcall mov sbb jg or iret dec cmp roll rclb lahf cld xor or in push jno jg and cmp xor jg int3 cs mov les or inc dec or mov jmp push aaa adc mov aas popa negl pop pop in xchg loope icebp jp lcall pop popf adc jg ret outsl mov jg xor es cs fnop aas cld hlt xchg fmuls int ret add (bad) ret es int3 xchg sub iret aaa cwtl mov movsb inc ja dec jecxz ds lock scas and in add mov sbb (bad) jg sbb shll cmpsl cmp jg cwtl enter mov jg fwait jno add dec jg mov sbb pop push mov jle cmp aas jg adc outsl test jne jg (bad) scas add inc pop jg lds enter pop jg dec xchg mov outsl jbe mov and sbb lods cmc and xor jne fild sti dec iret (bad) push cwtl xchg jg ja add mov movsl mov inc jnp inc mov jg notb or (bad) jg mov ds jg xchg (bad) rcrb lcall jnp test outsb add cmp mov dec cmp and out fimull jg lret in adc or and xlat xchg out jg cmp mov mov sbb pop mov push jbe clc jg hlt xor mov adc push jg fsubr dec jge xor jp jg mov sub test insb pop (bad) addr16 jg rcl dec and repz jg ja push stos outsb fwait cmc aas mov leave ror sub popa jg xchg push loop dec out fdivrs pop inc ret push enter cmp mov adc in add jg int jo push fdivr jg xchg leave clc or inc movsl lock fwait mov mov dec fnstenv jne jge push xchg aas lahf jg add fwait ret int push jg test or adc iret jg adc push jle jns xchg leave pop cwtl fwait in jb sub xlat inc push sti (bad) cmp and jno pop mov in out test inc lahf jg loopne inc dec mov xor (bad) call jle in dec xor je jo jg cmp enter test jnp jmp jg shll sbb lret dec in xchg ret inc into and lock pop cmp leave jle and pop lods test jg cmpsb (bad) popf mov out add ljmp xor aad jmp mov pop lret adc cs dec cmpb cmp sti pop cmp dec imul insl (bad) mov aam stc mov or sbb mov jg lret mov add orb mov xchg mov push push loop jg inc data16 push push repnz or jl jno adc pusha xor fdivrl xlat and adc mov sbb rolb jg mov popa data16 sub dec xor hlt mov pop in push pop pushf jl mov push (bad) dec xor cmc cmp or pop xor pushf das enter xchg js sbb arpl xchg or int pop jg push mov lea pop dec out inc inc mov mov das adc das icebp cli dec inc sbb fiaddl fldt test pop insl test sbb fldt xchg das and jg cmpsb (bad) push mov pop (bad) jg pop fwait xlat sbb data16 inc mov (bad) push hlt xorl mov lock roll mov add aaa imul cmp aas jb adc jg push call lods aas jmp aad dec inc add scas shrl sti cmc lahf or dec push mov mov push arpl leave cmp cld or xchg scas loopne cmp pop cmpsl data16 cltd jg out pusha xchg inc push push bound add roll jg adc (bad) sbb xor iret jecxz jg divl mov mov aas ds fbld xchg inc shrb fcmovne addr16 imul lods jg,pt clc adc sarb (bad) repz into mov sub fidivr adc pop dec imul lret movsb stos jg jne jge push (bad) icebp pmuludq or pop lods stc jbe insb push sub popf out sahf cmpsb lds aas mov sub add sub rcr push loope cmpb cmp je adc mov mov lods and inc add cmc fwait pop mov imul xchg (bad) rcrl jg cmpl jg jnp fs cmp pop jg in jbe jp cmpl arpl xor ret sub cltd loope aas adc xlat test jl aas sarb push sub jg jecxz cs pop out popa jg inc insb into add movsb jg fcomip cmp cli test (bad) fidiv fsts mov dec repz mov cs cmpsb repz ret mov push xchg add aas test (bad) mov mov out sub enter fcmovne xlat les cltd shr inc pop dec pop fs int3 jg fnstcw xor mov xchg fnsave fistpll mov into mov std lods (bad) or das push or ja jo mov std jge in test pop jecxz (bad) mov add subb addr16 pop adc jg movsb xchg popa loope mov or push pop xor jg jge fldcw sarb jg outsl (bad) adc data16 dec (bad) stos xchg mov xchg mov stos cmpsl pop dec dec cmpb shrb aas push cmp xchg jae js lea cmc cli cmp mov mov das jg pop sub jg sysenter sub lea sbb xor loop mov mov jg xchg cwtl lcall lods sbb fild push jg pop je leave xchg jae inc idivb push cmp jns dec fs loope mov adc or jg es dec xchg pop or jg inc mov and sub into cmpsb jae xor icebp ss (bad) jg mov cmpsl aam push dec int xor jecxz or les lret in and dec scas sbb int push les pop cld and xchg push dec (bad) jne jmp and pusha inc jg inc xchg xchg test xchg jg mov jecxz sbb in and jmp xor dec addr16 jg add push and jg stc mov jg arpl push mov lea fs xor jnp out adc pop outsl sub cmp or inc push jg push dec or fcompl add xor adc fisub cmp aad xchg sti jp push and incl inc fcoml test and jg (bad) jge repz or stc or stos or dec xor ss jg icebp mov (bad) std (bad) es xor inc popa jp mov cltd jecxz or xchg mov mov xchg lock sbb xchg scas adc popf cmpsb fnsave jg push jge ret xorb jg cld mov test and insl movsb arpl sub adc dec pop in hlt pop enter inc push pop pop cld sbb call mov adc (bad) (bad) outsb loop (bad) js pop sbb dec outsl mov push mov in or add lds lret scas pop cmp mov fisttp aad xor mov jecxz or xor cmc pop call jg lock mov mov stc icebp mov lahf aaa cmp loopne fcmovne pop push stos and arpl jg cmp dec sbb das xor fimull std mov sub jns inc or cwtl xlat xchg push jae in scas dec mov mov sbb (bad) mov lds pop xchg lcall movsb mov orb sarl xor push stos or jg popa (bad) and xchg movq repz inc mov push js jg das mov jno jg scas stos pop rorb dec push loop out xor jg (bad) sbb aad mov dec lea in cmp push outsl mov clc ret inc imul add xor fistp into (bad) shlb jg cvtpi2ps movsb dec inc ds lods movsl ss mov mov pop push lods loope rclb mov push push pop jae lahf or xor inc add xor imul adcl scas (bad) mov dec dec push lahf lods fdivrs jg xchg xchg push push sbb pop xor scas shl jg xlat movsl hlt push cmp cmp (bad) dec outsl push leave cmp inc dec jg ret sub jno jg or fstpl adc ss xchg arpl rorb (bad) std pop sub jg das ljmp gs fs push cwtl xchg dec dec jl scas jg ret rorl lods movq sub enter imul dec mov adc jp (bad) cmp jg loopne xchg fwait mov pop jg lds (bad) lds lock xchg dec jbe jg ds mov pop leave cmp jg repz sbb stos inc clc xchg jg (bad) leave pop adc push fwait sbb sarl xchg rcl test mov ljmp out adc stc jg xchg dec cmp mov dec subb out sbb (bad) mov daa dec sti sub js mov ss dec or inc jne sub into jg mov push lcall fnstsw sub subl incl es inc xor cwtl dec jb cmp pop jg int3 inc push and push movb cmpsb (bad) in inc lcall imul push test jg shlb push xchg mov sbb pop rol sub arpl mov jl jg fnop jmp out pop mov xchg inc lahf arpl jg ljmp jg popf push jle inc hlt cmp arpl dec ja cmp sub insb sbb aas (bad) dec mov dec or jg aad ja xchg (bad) jbe xor jg xor mov insl jg jmp fdivrl shr mov jg lret inc mov inc jg loopne jns shrb xor sahf or add pop sti dec decb mov pop xchg sub jne jg stc js xor nop inc jg lret add bound jg cmc shr xchg adc jg xchg sub in jg das int3 stos movsb fidivr dec ss cli aas jle fwait xchg mov fs mov stos jg push add mov xchg bound jmp jg div clc mov addr16 (bad) and dec pop push sub mov jg mov and jno cmp mov hlt mov iret test jg push and add (bad) mov cmpsl je cld test xor stc (bad) insl jl loopne mov aad (bad) bound pushf cmp push aas aad out push (bad) fiadd jg ljmp jg pushf dec lahf pusha movsl mov aas push push xor push fcoml in sbb mov mov pop cmp jb pop call (bad) inc (bad) adc daa roll cs jno outsb mov mov mov fistp pop jg mov mov xor jae inc out inc xchg aas fstl sbb (bad) jg insb push outsl aas and mov mov jg adc mov xor ret test sbb inc jg decl adc xor les mov int3 cmpsb mov (bad) xor pop jg loop clc push jnp adc pop popa ljmp shl inc lret outsb jbe insl and fidivr inc fcom dec gs int3 mov jle in ss mov cltd es test aas sbb push rcrb outsl jge (bad) xchg mov mov pop sbb jg push cmp pushf and cmp (bad) jg adc pop out mov daa xchg mov js lock js int3 loop add ret mov cltd xchg aas nop fwait jmp or ds in in xor rol sub jg mov pop (bad) pusha xor cmp push dec cli ja je adc jg arpl (bad) daa jnp pop mov jmp and pop xor ljmp dec test int3 add jg out int cs mov aas sbb das sbb pop js pop add push pop outsb insl cmp push push fist repz push add add jg js mov fisubr xor jg sub pop xchg jne mov das add adc add leave aas xor imul daa pop push and lret inc add dec mov mov fs repnz push (bad) loope sub adc mov xchg xor sub lds cmc jge ss fs inc jg or imul hlt pop movb pop adc bnd xchg jg add push adc sbb mov mov pop in scas dec fstl push xor or jb pop mov dec push jne std in imul jmp adc frndint jg inc dec mov sti lret arpl jle push shrl cmc cmp test ficompl lret jg (bad) dec scas out mov jg in aam in add lock shl fidivr (bad) xor aam mov pusha mov les jg ds ret push or sub xor bound rorl arpl push jg jl push fsubl jns dec pushf je out lds jg es lret push jg jne lds push mov mull in xor jnp addr16 xchg mov sub add hlt push mov js outsl mov jne and int3 and cmp sub cmp jg nop enter je jg sbb add mov xchg mov pop cmc jb sarb xor and push jg (bad) adc out inc popa mov lahf stc dec js div inc lods sbb or sarb orb popa and or mov mov jmp lret ljmp aaa push dec test dec movq shrl sbb pop push or dec out jge jb pinsrw (bad) jae cltd inc scas cmp out xor push dec mov popa xor aas arpl lods inc call mov loop ret xor pop jmp push loope lcall stc jg test nop xchg ret aaa jg in pop fisub xor jg mov out sub jg mov std adc jb inc bound jp adcb and sahf adcl jecxz or (bad) jo push pushf add jg loopne jp xchg and push push xchg int3 shrb pop fwait in inc ljmp fmull ds jg jmp pop lret mov ret fsts jg push daa adc ja fwait jbe repnz jg jnp xor jg adc pop cld sub ret pop xlat mov inc jg mov and xor rcrl cld icebp test adc jne aas jp ret loope pop fidiv stc jg pop push adc repz mov or repnz js mov aad xchg sbb sbb push pop jae cmc shr add dec call xchg jg movsb push popf lret push mov sahf sbb jns adcb add mov aas sub xchg jecxz pushf dec sti loopne and aad mov xor push jno imul das pop add xchg mov loop (bad) arpl sbb mov clc mov inc mov hlt fldl xchg pushf jg sbb lock (bad) pop jge repz push mov mov ss ret mov test xchg push cltd aaa sub or push cwtl inc loop fstpt jb dec into rcrl jg xor or add jg int3 mov jg and push jg push dec fsubl pop xor (bad) push jp push lret rol dec jg or idivl cmp movsl adc push mov mov inc sub inc pop pop or adc add (bad) or outsb mov mov push rorb int3 stos jg pop sbb aas mov (bad) ss (bad) scas pop test inc outsb mov test lock jg and aam cmpsb fidivrl inc jnp push ret ss xchg dec jg pop dec mov ljmp mov repnz je pop pushf and addr16 (bad) sti out adc das lock cmp imul mov pop push (bad) (bad) xor jmp cmp jl jp or inc pop in dec sub popa out mov inc movsb jmp sbb add idivb or inc icebp mov out inc outsl xchg inc pop xchg xchg sti aam mov adc (bad) repnz movsl mov mov push jmp test push mov in ds inc cmp mov mov cs cmp jle cltd (bad) lea popf mov enter push fimul jo jecxz mov pop adc lret push or pop in ds jg out lds gs mull aam mov lahf adc mov fidiv mov mov arpl jo data16 fist fs and fstpt ss lahf ror out cli pushl arpl cmp popf cmpsl pushf imul mov stos insb xchg push dec mov shrl orl cmp mov sbb inc test cmpsl jg and out xorl std outsb cld push andl rolb imul jg scas jne out ja mov fimul and jg jnp lock pop int3 inc mov and je cmpsl inc cmp lods xor fwait repz mov add push sub shll sarl xchg jns lods mov jae add pop inc sbb sub insb xchg xor push jno lock cmp mov arpl xchg mov jg jle aas jne pop jp out aam sub clc pop movsb jg or lods jg adc inc xchg jg or lahf jg lret xor pop inc and add dec mov fwait mov outsl (bad) xchg ror or adc cmp jg inc frstor in inc out ret dec jg or sbb xchg xor push scas pop jg jo decl push jmp jmp jg sbb inc sub push pop fcompl jno cmp (bad) mov add push jns push scas jg xchg push shld adc ret jg adc mov ss adc xchg dec sbb repz into push mov dec out inc jg sbb imul je or fisttpl push jge jg enter sbb aas mov and aad mov (bad) repnz shr fistpll faddl les mov cmp dec stc movsl fidivrl loop pop ret or sub dec addr16 es dec cmpl xchg xor jg (bad) cmp mov outsb test (bad) je (bad) xor dec push cmp jg aam adc fstpt mov or push xchg cld aam int or adc ret add mulb inc add or out jg jnp test fisubrl pop in pop hlt jg das arpl jg xchg icebp push mov mov dec data16 lods lds repz lret ja cmc jno into cmpsb mov pushf mov pusha pusha mov movl pushf mov call sub add mov jmp jecxz xor stos fwait sub dec mov fistpl shr sub pop icebp fadd scas pop test jmp aas ss xor pop out (bad) in imul dec popa clc jbe stc mov inc out xchg mov pop fcom jecxz les inc imul mov jecxz pop xchg push hlt or cmpsb ret add mov int3 xchg push nop xor cwtl cmp and xor mov sti add stc ljmp mov pusha lea je pushf movsbl jmp rcr push btr xchg mov bts push xor test push rol pusha mov clc inc xchg movsbw mov not dec ror bts mov rol (bad) repnz bsr mov ror setne cmc call dec insb in stc mov cmpsb adc push je cmp popf mov out cmp and push xor pop pop push push and lds into add addr16 out sahf mov es inc cmpsl clc das sti mov jmp adc xor push and std outsl mov or js cld push and xchg pop xchg xchg xchg daa inc idiv xor lock pop pop out add mov outsb adc je mov sti lret fs sub outsb mov inc pop push mov ds jl inc cltd popa and lcall sahf ds fmull popf inc fs xlat mov fcompl iret lods xor or add in les inc sbb push xchg aas adc xchg leave sbb pop sbb or push mov mov int3 sbb push lret insb mov adc xlat lods ret xorl ret movsb out push enter cmpsl jb inc mov cmp js (bad) or arpl inc sbb or js xor mov iret xor repnz sbb dec fnstcw adc test xor push stc jp dec dec cltd push jo imul int3 orl jnp jl push pusha cwtl dec xorl adc and adc movsb mov fs inc mov (bad) loopne daa adc fmull jns or shl movsl insl or jge (bad) mov xor add jne push pop or lods insl dec mov ret xor (bad) jb sbb or ret or xlat rcl add lds decb cltd dec test clc pusha and popf ja pop push xlat adc add js es xchg jno dec or xor (bad) stos push sbb jnp and les mov bound and push mov (bad) xchg mov pushl (bad) das or les sbb pusha xchg dec xchg lods pop outsb jb js sbb loope (bad) mov jg sbb cmp add lods fs lret jg xchg scas ds mov mov lock jnp cld add jle xor daa xor mov sbb xor sbb push cwtl push jmp push and ret cmc lret fnsetpm(287 hlt xchg es call sbb xor jne stos bound insl out fwait xchg xchg (bad) daa add nop jle push daa or insl andl sahf push aas (bad) ror pop mov imul xchg shrl inc sarl (bad) mov or dec mov push aam outsb cmp inc dec mov fwait pop inc pop outsl lods cmp sbb and cmp pusha lods aas inc clc dec mov xor dec lods adc pop mov (bad) or jmp sub popa inc mov add xorl sbb dec and hlt cmp popa jle lea or pop addr16 lahf mov or test xchg cmpsl es and imulb mov (bad) cmp mov popf jge in xor sti cmp and jbe repnz inc sbb out and (bad) or inc jle sub mov pop xor arpl je jle sub movsb (bad) pusha or cmpl cwtl adc xor mov stos cmp cmp xchg dec mov (bad) sahf xor mov sarb adc ss xor and scas cli int data16 adc jno mov and mov out lods cmpsb shr dec fucom push rorb sub cmc pushf flds and push mov lea sub lds ljmp pop cli scas repz loopne xchg add add dec pop sub adc inc shlb dec imul xchg shlb sti loop loop fist push movsl cmp imul les in push push add imul in mov pop xchg (bad) jae jmp pop (bad) pop sub lock sbb jg pop test push sub (bad) cld xor xchg dec aaa inc subl lret mov add sub test push xchg ficom adc mov aad cmpsb and add inc addl das clc jge cmpsb cs ss or pop jg or sub bound jecxz sldt cmc jmp mov add dec jns pop adc call movsl (bad) testb call loope adc dec cmp push pop pop (bad) fdivp stos stos cmp xchg mov repz leave xor or repz jecxz mov and mov dec add mov cmp cs dec mov add mov rcrl jne adc push icebp into lods jbe out leave fildll hlt add or (bad) jbe ljmp (bad) loopne test dec pop and mov outsb mov push add sbb sbb push divb dec xor inc cmpsl and fwait roll fisttpl into int mov sbb inc ljmp xor mov imulb outsl lahf jmp push mov pusha mov pushl ret mov or das or jecxz add jg push iret sub loopne enter xlat add push xor in mov ja mov xchg (bad) repnz adc jp pop sbb mov shr inc imul cmpsb dec pop rclb dec sub cmp outsb mov test (bad) in mov insb add lods bound int or mov push xchg popa jns mov jne adc cld sub shll mov and lea push jp lea pop mov int out push mov fildl xchg mov add dec sahf (bad) arpl inc jb add adc add (bad) mov add or push cld jp push fcoms mov mov jb lods test jmp js sbb fldcw pusha push movsl inc and nop int mov aam popf mov jmp push xchg leave loop lahf mov dec ljmp aas dec and add rorl dec cltd stos sbb nop imul add add pusha movl mov lea jmp lea ja pusha jmp push pushl pushf movl jmp pushf mov pushf movl push mov push pushf lea jmp pushl lea ja dec setge add rol xor add sbb mov push cmp jmp jmp inc rorl or lods jns jno push imul fcoms mov lods lcall add iret (bad) lret aam scas pop js (bad) mov jb (bad) stos jmp sbb add adc (bad) lret xor sbb cmp les xchg lods jecxz popa xchg push cmc jae fmull aad std add xchg lahf outsl pop and jmp xchg jg mov pop ljmp jle rol adc push jns out xor (bad) mov pop mov stos icebp xor and lods jbe test cmp sti adc xchg adc mov int and cmp adc mov mov cld out fnstcw xor jnp (bad) stos jl jne pop (bad) mov scas mov fsubrl cmpsl icebp fmuls repz adc outsl mov imul jp imul loopne ror inc out sub mov push fwait enter pushf push and test sbbb add xchg aas test mov xorb xor test lods cltd sub orb jecxz sub push (bad) loopne pop shr mov dec insl in push inc (bad) pushf icebp or dec push loope fsubrs add mov mov cmp sbb sub xchg loopne push nop and fcmovnu dec lods xchg leave dec push pop or std (bad) sub sbb push std mov hlt or sahf sbb int inc jae movd or pop ss test stc sub test mov or call mov in jno fstpt cwtl push scas out xchg lret ljmp jb add mov dec mov repnz insb stos test stc pop dec inc leave test pop dec imul divb dec mov mov push push xchg fisttpll aas outsb imul dec dec ja inc (bad) mov sti in mov into fucomp xchg mov xchg lods mov repz cmpsl pop int3 dec into stos sbb mov lret xlat lock mov das (bad) jg adc js lret in imul and xchg dec imul or push (bad) (bad) jb add fs jae stc jg clc xor call mov movl jmp stos pushf mov lea jmp pushf jmp lahf mov inc mov adc dec jle sub xchg loop mov (bad) pop jp and mov push pop incl push pop imul scas push mov and jnp bound push xor pusha rsm clc in movsl xchg mov mov das sub xchg xchg mov lret jle int3 nop xor and (bad) or (bad) cmpsb mov cmp xchg inc mov roll mov pop cmp push repnz inc call and jmp lea je pushf test bts or add cmp sub bsf shr sbb xadd clc mov rcl pushf rol add shld add lea jmp test or and xchg add xchg or ja xor popa sbb dec (bad) test ds fbld pop sub cs cmp leave and divl (bad) lea test lods inc pop and pop je pop lret xor lret cmpsb sbb xchg mov idivb pop stos and mov cli sbb insb orb daa dec call jg mov pop xchg jb int pop mul jle imul fdivrp or sub cwtl data16 lea je push setg mov movsbl pushf bswap lea pusha mov mov jmp pushf mov jmp push pusha pusha movl pushf call lea inc out fwait movsb lret mov mov rclb sbb and and test jbe adc adc inc loopne push bound bound fcoms mov dec inc cli adcb adc xchg push mov out mov gs pop pusha in or popa es into testb outsb movsb repz inc out clc sub icebp les jle cld push ror out fnstcw cmp sub sub push push pushl movl jmp arpl in xchg jae bound gs xchg loopne adc addl cmpsl push xor jl pushf add in gs sbb pop sbb jo cltd arpl add mov inc in cmpsb xchg popa out inc cmp out pusha repz jg jle lret mov mov jg cs xlat cli dec pop jg jge push addr16 jg mov loop xor scas out mov sbb jg cmp push mov (bad) jg or cmp jno or mov in fdivrl mov test push pop idivb addr16 rclb adc repnz test sub dec push mov xor jg imul test stc mov sub or mov repnz mov pop jbe jge push jg mov push xor jb outsl inc mov jg xor xor ret and loope xchg outsl ret testb push cmp pop or adc jb xor into pop aas leave mov mov cmp lods push push adc jnp mov arpl je push jbe cmpsb cmc jnp cli in jns mov aaa sarl clc sbb fsts aas mov xchg jne cmovns dec jne int and mov mov sub es repz ljmp pop dec or dec cmp pop daa js cmp cmp (bad) lss repnz mov xor and mov jecxz cmp mov cmp mov out les fs xor cmp je or ja push ljmp jl pop push jg loope,pn jecxz push dec movsl and xchg jp stos dec outsl test mov jecxz xchg loop repz lock adc jp in ljmp mov xchg sbb xor and pop jge fwait dec jmp js stos adc cmp pop roll (bad) jbe loopne scas mov cmpsb xchg stc in call pop pop dec dec pop test cmp inc (bad) (bad) jl js jne jae jno outsb imul pop dec in cmp outsb arpl pusha insl pop sbb pop outsb pop pop sbb push insl push sbb outsb push push sbb dec insl dec sbb outsb dec dec sbb inc insl inc sbb outsb inc inc sbb jge jle sbb js jne jae jo push sbb push insl dec sbb jp divb push sbb dec insl inc sbb inc ja dec outsb je pushf inc insl imul negb dec pop jle or jbe insl dec sbb enter repnz jbe insl pusha pop cmpsl cs mov jae jns out add jne cmp xchg daa adc mov in insl push jl loope insl mov test jb or arpl div jb jmp arpl mov jecxz mov es sar cmp insl popa pop (bad) (bad) sahf xor out test jns aaa cmp push mov cmp arpl into scas ret jae dec sub iret cmp jl cmp mov cmp cmp out imul xor cmp movsb in hlt das data16 xor mov ss movsb jo sahf cmc cmp cmp in add xchg jl xor bound aam mov push data16 ja add pop loop sub ljmp (bad) xor sub fsubrs ja sbb pop mov enter pop (bad) mov addr16 scas je adc dec mov (bad) nop popf in sub (bad) decl and arpl sbb es pop andl gs sti popf dec ja loopne imul and xchg lcall cs jge and sub clc jnp sub dec test sub add mov and ja mov (bad) jmp out cmc in pop sbb pop adc xor scas mov xor mov or in data16 adc and fadds out and lods icebp cld js jmp pop pop (bad) enter push addr16 jb clc imul out fnstenv ja testb iret push outsb into imul mov fs clc call js das loop fldenv cmpsb jl insl jecxz xchg out cmpsb gs stos lret xor jbe stos out test push or mov cmp fnstenv sbb pop fwait ret scas sbb and (bad) adc stos jl jns stos cmp es push jecxz enter mov cs lea shr pop inc push aad ja cmpsl and jge in daa call ds stc imul imulb cmp lea fs enter lods push js or dec stc fsubl pop dec ljmp fidivr ss loop mov jge fldt push stc jb cld jge imul ss bnd ss bnd sbb js fldt jns stos jge test pusha sbb cli ja arpl sbb push int3 std jae pop loop pop sbb insb ja fldt outsb xor pop pop xor int3 xchg push push lret bnd jno mov or jnp (bad) repnz xchg dec idivb cs (bad) mov pop xor movsb dec jns fs stc xor (bad) in hlt xor in xor mov shrb cs aam fist test repnz sub cli loopne pop es jecxz lock in out add cmp (bad) pop push repz jo cmpsl out das je gs inc call mov stc movsl xlat jo jae and lret bt cmc push hlt outsl pop cli sbb cmpsl loopne jo popa aad fidivl inc xchg push mov mov and mov data16 xchg pop call sbb rcrb jnp,pn (bad) push int insl cmpsb inc shlb cld int imul inc daa sbb movsb cmp sub cmp int imul daa or sbb cmp test adc icebp dec imul adc or jge std aas sti cmp and int pop cmp pop ljmp jle insb scas sub mov stos jnp cs xchg jns mov es and push insl jne outsb push gs cmpsb je cmp aam jle in (bad) inc ss hlt arpl (bad) leave jno mov jns push inc stos imul sub fwait jg inc pop test gs jp daa bound push and jge sub sub cld jno jae aad fidiv cld and hlt jp in jae in es pop inc je das arpl add jl imul pop or mov lds lods jb cmp leave jb mov jnp es sbb mov and mov rclb adc repnz sub imul sti mov jo and into mov push cmp insl mov vpunpckhwd jp inc divb es aad and in int fidiv out lock cld or imulb sar cmp stos jp push gs jnp mov dec in sbb je pop out pusha daa dec dec in das imul int3 and and hlt fs jnp push es jle adc (bad) jmp push loope push fsubl jmp xor dec push (bad) dec mov aam (bad) daa pusha mov out push pop push pop or mov xor cld push in jp push sub jge mov sub cmp sub sbb je (bad) xor cli xor insl mov lock jne sub div sub pop pop dec cmp push outsb push push sbb dec insl dec sbb inc outsb inc inc sbb jge sbb jl jnp sbb ja jbe jne jae jo aad outsb insb push push insl popa sbb pop outsb pop pop sbb aas mov dec cmp inc sbb outsb inc jl inc add push data16 pop pop sbb push insl push sbb push outsb dec dec sbb inc insl inc fdivrl jae jp data16 je jo imul outsb bound pop cli pop jbe insl dec sbb aas aam ja (bad) out jne pop out insl lods jnp pop mov je aas push sarb fdivrp dec (bad) cmpsl xchg jo ja jg jg pop ficomp popf pop sbb fstpt pop sbb lcall sbb cwtl pop sbb jg push pop (bad) xchg push push aad xchg push adc sarl push adc xchg push adc jg push adc nop push adc jg dec bswap mov int lea int3 mov jg dec or mov leave jg dec or mov (bad) jg inc pop movb inc add ret jg inc add (bad) inc add jg inc add addb insl decl (bad) mov jge cmp sti mov mov jns cmp mov ja aaa divb jne xor repz jg repnz xor mov jg lock xor scas outsl xor out sub movsl jg and jecxz jg and mov jg and test sub cmpsl jmp pusha and lahf jg ljmp scas outsb cs lods insl jg in lods insb sub stos imul stos push jmp call pop loope and pop inc outsl dec popa pop cmp notb ds sbb mov (bad) dec outsb cmp dec jbe insl inc sbb outsb cmp sbb mov jnp jge pushf inc insl cli sbb mov jne cmp insl stc sbb jns cli cmp insl clc sbb mov addr16 cmp insl negl arpl mov popa ja pop cli aaa jbe insl negb add mov pop aaa jbe pop cmp push sbb mov push sbb dec sbb je dec sbb dec outsb mov sbb mov inc sbb inc xor sar jbe insl scas sbb sbb ja scas sbb outsb outsb jae sbb or sub imul jbe insl jmp imulb imul insl test outsb pop es push or aas jle pop aaa data16 cmp mov (bad) jno cmp outsb std dec dec cmp outsb inc cmp mov jl dec cmp push subl js sbb jne cmp push jo arpl in cmp jp,pn idivb cmp stc sbb insw cmp arpl clc outsb pusha mov jbe insl cmp push div outsb push mov push cli ja dec insl aaa sbb imulb mov inc cli jbe inc insl ss pminub cmp idivb xor jae mov jo je insl outsb xor sbb repnz popa sbb pop outsb xor icebp cli pop jbe insl push sbb push outsb xor lock dec jbe insl dec sbb testb inc pushf dec insl inc sbb jnp add scas outsb jp sbb jno in sbb lods outsb imul gs lods sbb insb outsb pop jmp pop cli stos jbe insl imul imul outsb push jmp jbe insl call outsb inc movsb sbb jge jle insl jp aas addr16 xor cmp cmp sbb jl imul cli mov sbb stc outsb pop clc sbb push insl je push divb dec cli scas jbe insl movsb sbb aas jl outsl cmpb cli mov sbb jno,pn jbe insl clc sbb mov movsb sbb (bad) pop jbe insl pop sbb push sbb jl dec sbb (bad) dec outsb mov pop aas jp inc cli jle inc insl mov cmp jbe cmpsl imulb clc sbb insl outsb aas jns imul cld arpl clc insl pop sbb js push cmp jbe insl clc sbb mov inc aas das ja jbe in jge sub jp mov pop aas jbe jae cmp sbb mov push outsl jne sbb cld insl pusha pop aas je pop idivb push cmp jae push jbe insl push sbb (bad) dec ja jb dec cmp jbe outsb aas jno inc sbb arpl aaa jo jl cmp aas arpl jbe cld jae outsl outsb jo das insl lret cmp cmp idivb jle insl clc adc cltd xor shld push repnz data16 add push inc int3 in faddl jge jne pop push jb mulb cwtl jae jle repnz dec fsub imul jnp mov bnd cwtl jns repnz xor and movsl bound (bad) divb fdivrs jae jg es dec push mov les jp int3 in push loope inc gs dec je aad pop pop test in dec aam mov jne sub int3 sbb push test jg insl jp gs bound cmp pop jecxz imul pop jecxz or ljmp ffree stos daa dec shrb jns fisubr jb,pn jl js call outsb cmc lods jp jl mov cwtl jl jns fisubr ljmp nop jns jns cmc sub jns stos bound jl nop jp jns aaa insb pop out stos nop js jns cmc insb ja push outsb ljmp jecxz pop jl mov das fs pop inc sub jb jns shrb jns jecxz xchg push ja or jl jecxz pop popa lods mov out push hlt outsb jns push mov aaa es shlb imul (bad) cmc add gs jl push fs lds sub bound popa sbb inc inc insb pop shlb cs pop and int3 sub bound call fstpt and push jl movsb mov lods fisubr jecxz push push sub dec dec pop fsubr addr16 (bad) int3 push es pop call sub inc adc inc jl lods bound jl rolb dec jmp pop out jecxz mov jl mov jnp mov jl es ljmp jl loop mov jae sub cmpsb push dec (bad) je outsb les fs pop repnz lds aad call jnp lds nop inc fisubl push pop test pop mov imul pop add test je jb insb daa jb xor jb scas dec (bad) in dec rorb jle push lret scas aad shrb inc pop stos jnp rorl jmp inc xor jg addr16 stc inc or mov inc push sarl sub pusha out inc or cmpsl dec out push inc imul insl ljmp pusha rcrb nop pusha mov sub or push mov imul in call call stos inc sub push test inc push mov in fsubrp mov mov das imul shrb imul imul cmp imul test push shlb adc inc je inc cs add rorb jb sub out jae stos sbb cld mov fdivl out mull std (bad) pop stos sub inc hlt jbe int3 mov xchg inc lcall arpl stos push mov jbe das jo sub sarl out jae imul mov leave sub jl dec mov jl (bad) jmp jl jp insl es in push aas in lret push push ds jmp sbb aas push divb dec dec cmp insl dec sbb (bad) dec outsb push inc sbb mov sbb jnp std (bad) lret adc jbe insl dec sbb dec outsb outsb scas sbb push ss inc bound bound cwtl sbb mov dec aaa cmc push aaa jmp pop dec aas sbb repnz cmp jbe sub (bad) repnz aaa bound jle inc aaa lods sbb sarl bnd ja loope dec std insb jnp (bad) sbb divb sub outsl jbe adc (bad) data16 aaa pushf add xlat (bad) pushw add pop jge gs xchg mov outsb pop push sbb pop insl ficompl push not outsb push push sbb dec insl leave sbb dec outsb inc lods sbb inc sub cmp or outsb js sbb jb adc outsl (bad) movd imul adc arpl xchg lcall insl nop sbb lret outsb push pop sbb dec insl (bad) sbb or int adc mov fs aaa mov das push lcall data16 insb add pop repz mov cmc jbe outsb pop jae cmp sbb shrl sub push (bad) jbe sub out repnz pop loope dec mov popa aaa lahf xchg xor mov fs outsb mov or cmp pop aaa xchg cmc push cmp sbb lds dec aaa in push pop mov dec aaa daa scas out sti cmc dec aaa stos imul sbb repnz cmp fildll sbb inc pusha pop mov mov loop outsb xor aaa popa (bad) jb lock (bad) pop dec cmp jbe scas sbb mov dec push outsb repnz or cmp repnz movsl fbstp jbe addr16 in fs popaw aaa and pop cmp mov dec push outsb mov or cmp push aaa sbb push cmp dec sbb sub dec aaa fnstcw repnz cmp insb inc aaa sbb adc jge fnstenv aad idivb fnstenv jmp data16 test sbb insl insl xchg sbb push insb pop outsb stc mov imul pop dec jo pop aaa push sbb negb loope sbb cmp push aaa call sbb repnz cmp jbe insl mov inc notb inc push pop jge pop mov jns lea pop clc sbb push xchg jb aaa into data16 cmp insl sbb mulb sbb mov fdiv push cmp dec pop dec mov push aaa loopne mov pop insb push aaa fcoml xor mov insb pop outsb xor aaa pop test cmp inc aaa out inc cmp jecxz push cmp aad divb bnd ja leave push dec ja jnp out adc js aaa addr16 jb divb xlat add cmp imul cmp jbe insl (bad) sbb sbb push insl rcrb push not outsb dec in sbb jl and jl sarb mov stc int3 outsb movsl jl fstpt and jge sub aaa out and popa xchg (bad) les je mov sub mov es pop std call jns fs jle mov push jl cmp pop fiaddl call daa jo push jae es test jl cs ss pop cltd jp mov jnp pop mov stc or lret fs and hlt jno and enter data16 pop sbb sub loopne or out jl out movsl mov lret in and push je arpl push pop bound out lret and sub lods fs (bad) push sbb lods jl out mov jl xor jae add aaa jl dec push cld dec bound cmp jl int3 mov jl je adc daa mov ret add and loope jo cwtl pop inc push pop aad cltd jp or sub repz push fcmovu fstpt stc jl gs in jp jl inc cmpsb push push aad cltd jp ficoml jp cltd into pusha push loop dec in jl cmp push sub mov pop lcall bound test dec push sub enter or xor push jbe jge loopne push cs repz cmp push ja jmp fsubrl movsl inc jo cmp jp lret imul fdivrs jle lods adc inc loope jl loop lret xor (bad) inc fdivrs pop ljmp push fstpt (bad) pusha sbb mov (bad) jae mov lock movsl dec cmc hlt push or jbe pop jnp mov sub leave (bad) rep sbb mov jbe pop dec cmp cmc jl xchg jp mov dec lcall es inc sub mov push pop das jnp ja jecxz fcomip xor cld jnp and fs addr16 sbb dec movsb xor pop cli mov jae xor mov xchg dec push sbb inc leave cmp pop pop insl push inc fs jl gs cmp bound stos inc ret cmp dec ljmp cmc mov imul loope push push jns dec sub add mov jle pop sub scas jnp bound jecxz jl jge jl and mov fs mov or jnp into mov or movsl xor jo mov scas jge mov sub cmp jnp pop (bad) ja aas mov dec mov inc jns fwait out jge jo mov xchg imul xchg cli mov mov pop aas push in scas roll jae call dec lahf aas pusha add cltd int sbb pop xor dec sub mov sti lret dec decb scas cmpl xchg stc outsl inc adc sahf (bad) jge repz fs call lahf sub inc dec xchg jg adc in adc push dec jae xor cmp sbb sbb inc inc mov outsl xchg dec xchg sub int call pop pusha xchg adc jns pop xor mov mov cld mov outsl mov jmp jle dec mov lahf jmp outsl out adcl jnp jbe stos dec jge outsl je repnz in outsb cs pop adc pusha pop fistpll add inc and bound sbb dec sub sti cmc jbe aas push inc jg push mov sub leave aas (bad) rcrl test cmpb jno pop jg (bad) shll scas cmp std sbb xor jg fcomi enter arpl xlat or orl push sub mov add add add icebp jge subl mov push gs dec das (bad) (bad) pop out aam (bad) mov test mov jg adc mov or loopnew push leave arpl mov imul add pop adc imull inc outsl push dec add sbb mov das push dec mov push scas (bad) push jle or dec mov pop add scas aas xchg and mov mov mov loopne (bad) inc mov jmp leave push scas fisubr arpl push dec outsl jbe notb sarb test add pop xchg push jg nop scas (bad) jmp jbe ja xor cmc les mov repz jns test movq iret scas add mov in ds (bad) scas xchg mov fcomi jg jo cwtl and dec scas rolb sbb insl repnz cmp scas aas roll mov fdiv jg bound rclb dec lcall aas jg ds mov push imul xorl lea imul mov clc lret (bad) fcoms push push stos bound push cli push cmp (bad) jbe int3 ja gs scas ja jg cmp scas mov inc xchg jno clc push ret daa out cmp add pop stc (bad) sbb pop dec sbb inc jge pop add jg imul outsl out fnsave pop jl lcall push ja ds gs das inc push lret in add imul ja inc jmp ja push mov push ja icebp mov test push inc (bad) jge (bad) ja cmc sar lods mov ja stc ret mov ja ds pop jg mov jns test xchg jg scas mov inc dec pop arpl pusha lds ja push popa divb repz pusha adc or and dec sbb pop ja push lds shrl pop push int3 cmpb or mov jb clc ja add mov mov ljmp lcall push decb je ja add mov push pop loope insb mov cmpsb jnp les xchg mov pop sbb gs andl sti cmp push mov movsb mov inc xorb cli adc in pop push aaa jnp xor and daa imul cmp (bad) sbb push inc push jl or pushl mov inc stc jg into iret mov or pushf (bad) imul dec mov cmp push ret push lahf jae adc mov mov lock mov xchg jle mov imul aas add cmp js cli mov push gs dec scas dec and and xor or jge jge mov xchg xchg jl push push dec sar cmp fidivrl jnp jge sub inc inc enter idivl dec mov push iret or mov dec fs lods sub jne mov mov xchg into pop cmpsl jo dec mov mov dec xor jge inc or xchg fwait jge es outsl mov jle inc dec lods aad movsb popa inc lods je popa add lret jge inc inc jmp jge mov lret shlb lods fistp jmp push lods cmp push inc or mov mov arpl jo imul cmp idivl jno pop jnp idivl arpl jno lods fiadd mov mov mov cmp lret adc mull call jae leave or dec cltd jo imul inc clc jo xchg inc push idivl arpl mov mov mov bound nop sbb xchg mov mov jo es mov in mov daa out pop mov (bad) popw cmp cmpsb cmpsl cmpsb push cmp lahf and mov jno insb ja data16 xor xor out mov leave adc fist outsl jnp cmp outsb cmp jbe insl mov ja clc outsb mov push jns sti cmc insl das outsb cmp dec cmp insb push cmp sbb (bad) dec outsb cli dec sbb cmp mov jbe insl js inc idivb outsb inc cmp inc idiv ja cmp jl idiv jp mov jns jbe js ss cmc cli jne addr16 hlt add (bad) lahf mov nop cli lods jp idivb xchg gs sub stos inc sarl cmp das fucomi in mov and sub test jl repnz or outsb ljmp mov insw repz loop loopne sbb loop test and and lret aaa add jge das testb dec iret cs and cmpsb jecxz jns pusha or aaa aas mov das jge pushf dec cmpsl testb dec iret cs cmp mov mov and pushf push out xchg (bad) (bad) mov pop dec fstpl xchg repnz cmp imulb jge mov mov lahf pushf lods cmp push jge cmc cmp (bad) mov leave mov cmp pushf inc call arpl xor and das jnp mov mov pusha pushf push mov jbe sar jnp and (bad) mov jo add aaa out stc cmp aas and and sarb cs bound pushf lds add lret pusha pushf inc cmpsl testb repnz xchg (bad) cld cmp and jp pop fmulp cld mov ret aaa sbb inc or adc pop sbb inc cmpsl testb dec iret insl int das inc cmpsl idiv mov xchg lds mov iret insl sub subl mov lahf pushf inc sub jnp insl push cs pusha pushf inc cmpsl testb dec iret cs pusha pushf inc cmpsl ss sbb jno add les idivl mov fisubrl negb mov cmp cmp cmp (bad) mov insl sarl add cmpsb sub pop je inc jle stos (bad) bound pushf lds cmp pusha or testb cmp (bad) bound pushf lds add mov cmp mov insl iret jecxz sbb add add cmp out lret pushf bnd inc sbb xchg xor mov cmp mov sub iret cmp mov xchg subl and shll ds hlt arpl mov mov in enter pop or inc cmpsl testb mov mov int3 pop iret cs inc cmpsl (bad) (bad) mov mov pusha pushf inc ljmp add (bad) sarb cmp jno aas or imulb jle jbe sub mov in scas mov mov add (bad) pop iret cs pusha pushf push jmp jge mov jle sbb ds ret and dec iret push (bad) mov pusha pushf inc cmpsl testb dec iret cs and setae hlt fwait cwtl lret push imul cmp cmc fwait popa (bad) cmp ror inc or lret cs pusha pushf inc cmpsl testb and sub xchg mov cmp cmp hlt repnz pop ret pusha pushf inc cmpsl testb dec iret cs mov pop je pop mov or dec cld popa mov add jp cli sarl add mov lods (bad) ffreep cmp xor iret sub cmp dec cmpsl neg mov jne aaa cs mov cs cmp or testb dec push arpl incl add dec cmpsl (bad) mov ficom mov and xchg lcall jp jnp jmp mov cmp xor pop imul ret ret test je mov jge cmp outsb stos sbb pop jb je dec pop call lods pop gs pop or cmp leave rclb pop in and mov push scas pop mov stos adc inc adc sub mov ret or pop imul jns xchg je pop xor push cmc jb xchg ret pop jns cs imul fldenv or jmp sub jp push push pop imul data16 push push mov (bad) das outsl test aad xchg ds jns jp leave sub mov divb jns scas ret fdivl out jnp jae jno lret xor pop xor jp sbb cli cmp xchg inc pop adc gs jp sbb cld push popa push popa pushf jp (bad) jmp add mov sub xchg xor stc sub idivb jnp shrl cmpsb adc test jp int3 (bad) pop jmp pop jl into mov xor pop push xor scas lods in pop gs test push cmc outsb jns popa popf dec mov jbe mov mov stos int3 xor cwtl push cmp stos aas jbe sub loope (bad) fdivrl outsl xchg jo jb arpl pop push push das cmc insl push push js arpl mov outsb bound jno fmuls nop ret out imul in outsb outsl fcom or jb mov fdivrl inc push pop gs mov cltd movsl decb pop push xor push in adc insb mov push stos test sbb jp imul ficompl xchg es pop sub clc pop gs pop jmp push add js sbb lret aad repz pop jnp sbb fistp jle,pn xor fst jno add xor jo fldcw jns push and es movsl push pop mov push jne pusha xor jno lret pop gs mov iret stos arpl outsb in pop (bad) popa push push jb xor ret fxch mov pop daa or cwtl xor jns cmp jge sbb jo jp gs gs js insb lret movsl jb in and dec jnp sbb loop outsl cs fstps jno arpl push sbb jns jp jb jge aad popf push lcall sbb pusha outsb pop pop sbb aas dec and ret jp push mov pop int3 bound jge xor push jg or arpl iret xchg dec jg call je ret icebp jl jg push xor pop leave jg daa cwtl jnp popf jno jg inc inc lock dec sbb mov shll jg test aaa jg (bad) xlat in insb data16 jg fs mov mov stos pop sbb stos jle pop push data16 cwtl aas jge (bad) and dec outsl jnp push insb jae pop (bad) jle mov fcoml jge ficomp repnz ljmp add sbb (bad) stos jo repz (bad) popa pop mov xchg mov sub cmpsb loop mov repz cmp inc xor mov stos mov inc dec inc or aas pop scas push dec push cmpsl and mov push addr16 sbb call and adc pop or and inc and aas xor jbe pushf ss pop or jae cmpsb ja movsl jmp jbe imul xchg jns insb xchg pop insl imul cmp imul jp cli push jbe xor lret arpl outsb bound pop imul pusha jne sbb mov jp imul xchg jno pop and mov push (bad) jbe sbb aas into pop push jnp jbe popa sub xor loopne pop aad dec xor das je jo repnz out outsb data16 mov movsl pop xor aaa push fsubp bound dec xchg jp call push jne clc mov cmp pop gs popa loope pusha mov imul scas push repnz xor dec fsubrl aam jno loop,pt icebp sub cmp jo imul mov pop aas push mov je cli and pop jne popf loop hlt psubd imul ficom fidivrl cmp call and jo dec popf pop xorb outsl ja xor (bad) pop lods inc aaa dec inc jge std scas ja ret out jne mov cmp ja call xchg arpl sub jno sbb or jmp (bad) mov test fwait into xor adc leave movsb ja jbe and add pop fsubl inc lods mov add out pop push pop popa dec fwait sbb imul mov mov outsb dec pusha lret pop pop iret sbb loopne cmp xchg dec push sbb adc cmp js loope mov or xlat (bad) mov jg mov mov std pop cmp outsb aam add jp lret scas jl,pn cmp adc jg insb imul mov xchg dec jge sti popa ret stos mov fwait and lock cmp mov insl cmp jne fldcw iret sbb frstor data16 in ljmp icebp outsb in sbb dec insl (bad) sbb jnp mov imulb ljmp insl xlat sbb notb dec inc pop jle pop je popa sbb imulb out sbb aam dec sbb test ret jge pop jp jbe icebp insl out sbb mulb ficomp (bad) cli push jbe insl dec sbb inc push dec sti dec cmp push bound stos dec sti mov (bad) aaa jae cmp mov mov and mov lret mov jg ret rcrb dec cwtl fnsave scas clc sbb pop jg ret pop sti repz jg push les in imul rcll dec xrelease xlat mov jo aas adc fwait stos mov rcr dec fnsave js fcoml jo pop (bad) jmp sti mov cli aad ja lea fwait popa mov dec hlt aaa scas add repz fldcw lahf lret outsb and sarl test jg lret das sub jg jmp cmp pop fs pop (bad) jg out pop mov lds bnd push mov jl jg je jecxz dec push cmp or jmp mov inc aas mov mov cli inc pop jecxz adc rorl pop popa and jg lds int3 jg movlps in mov dec (bad) sarl add enter loope sbbb outsl dec cmp jle loop or cvtps2pi inc adc mov stos arpl xlat mov dec fs mov scas pushf jae add jne out outsb mov jg cmpsb dec fiaddl das (bad) cmpsb adc push inc sub cmp ret push les lahf adc jg sub outsl jp mov sbb fildl inc repz and dec inc out sarb and dec inc push jg repz jg or jo pop rcl scas add loope adc cmp mov mov xchg in inc mov add int3 je mov pop cs or jecxz flds inc dec stos mov cmp cld add adc mov ja idivb cmpsb and es mov mov jg out jmp pusha jg xor (bad) jg int test jg and imul mov mov push mov mov jecxz dec dec jg lahf test jmp mov mov jle pop jg inc adc mov out xchg mov orl push lock pop repz sbb aas sub je jb (bad) (bad) cmpsl mov dec jge inc mov mov or repz addl (bad) push jg cmp sti les or jg (bad) pop xchg dec int3 cmc aas sbb mov mov push rcrb out jo pop arpl mov add sbb jb xlat inc add cmc lea iret jg popa jae subl mov (bad) imul faddl iret pusha imul (bad) xor xchg sub mov jg leave mov inc inc cli out std jg mov inc push mov mov xchg lods or xchg pushl jg pop and inc dec incb popf mov mov dec push lods mov pop jg adc jg jp repnz add sub fistl lds jo mov jno addr16 mov inc push cmp mov sbb insl insb xchg popa rcrl cmp mov jge jle sbb test test push push stos inc aad scas mov ja add ja inc or jnp push sti fs mov rcll xchg aas mov lods arpl insl rolb and cmp shrl lods idivl jp sub out movsb bound out (bad) ja dec jg sbb pop repnz adc push lock push xor mov frstor cwtl cltd aas inc adc sti dec fsubrl mov xchg aam pushf jle pushf dec push xor sarl xchg add sbb ljmp out (bad) cmp mov or xor outsl mov aaa inc daa and push fnsave mov jg pop pop fs dec mov push push adc or jg inc or sub sahf hlt pop adc (bad) mov push frstor mov popf popf roll push fidivr fldcw inc out jl or pop xchg movsb lahf inc adc out pop xor fdivrs mov inc cld jg out or icebp outsl (bad) jg inc mov add xor jg adc inc movsb cs jno sbb pop ds addr16 jg fisubl add xor pop mov out and out cmp fdivp add stc lcall xchg or aam mov rep aad inc or xorl sti sub ret pop addr16 jg mov mov mov inc add imul std sti sti cmc mov fcmovnbe loop inc jg cmpsb mov addl dec pop popa pop jmp push cmpsl jno push jae inc and adc mov jg nop xor enter fadds jno mov sbb popf int test lcall inc ds dec and jo lahf sub pusha cmpsl and (bad) xor push pop mov addr16 test cmp out imul xlat mov lret outsl out cmp icebp imul aas les call lea je bt test cmp push call pop pushf jmp mov push pusha lea jmp bswap pop push pushl ret jmp and and sti or inc mov daa or mov xor testl cmc insb flds jb les nop push and jmp mov lea pop and xchg loop cld pop mov xlat sahf data16 cmp sub mov in out cmpsb fsubr pop cli add mov add sahf ret call aaa rcll negl out sbb mov lea or mov mov in les andl cwtl lods jnp cmpsl jle push push xor fwait mov sub into dec loopne sbb mov push notb xchg fbstp mov inc test outsl aam sub pushl dec jmp movl push pushl pusha mov lea jmp gs add inc adc ljmp lret ror add mov jnp enter sub mov cmp test lods mov cmp add jl js sub add push xchg loopne ljmp orl faddl imul cli pop leave popl push imul mov cmc dec sbb adc cli sbb sti jo mov add or mov cld and sbb add rcrl (bad) lret cmp hlt neg push imul (bad) jo ret jmp mov std std sahf pop imul out pushf mov ror mov adc clc insb iret push loopne jmp aam mov sub push test cmp xor enter cmc (bad) cmp pusha mov cmp pushf pusha cmp push jmp sub mov and lods xchg loop pop repz xlat stos mov sub mov sbb into adc inc mov (bad) roll mov sbb btr adc or jnp adc and jg test push mov mov fwait or push repz call lock mov jae or adc stos mov sti jb outsl mov faddl adc mov sbb das pop (bad) out cmpsl sbb ret add push orps dec rcrb popa ja sbbl add jns outsb push add mov je or cwtl xchg out dec add inc sbb lea sub hlt push pop jg pop xchg loopne mov sbb or mov out outsl jae push xor cmp enter int3 inc adc mov push les fidiv cmp pop into push inc sub pop jle pop das mov jo push lock (bad) fwait pop inc (bad) pop and mov xchg daa sahf push fistpll dec mov jae add or and faddl push incl mov fwait lods subl mov inc inc jle ds mov loope jmp lds mov imul jno add xor dec push clc jae adc dec fs xor xor and (bad) jns dec imul jb add lahf cmpsl loopne add push (bad) std mov cmc xor pop test test mov outsl jecxz push mov or fsub jns data16 cmpsb fwait stc push orb imul push cmp rorb xchg in push adc test cmp inc sub movl add sti or pop (bad) cmc pop dec and lcall out outsl mov or xor pop cmpl push sbb ds ja pop sub push push xchg dec enter push adcb push jae and mov fcmovnb enter lock mov cmpsb test cmp jb stc jnp ret cwtl (bad) jmp mov stos pop stos scas jne popa push insl outsb and test inc pop js mov ss mov (bad) adc aaa fdiv mov mov clc (bad) sti sub pop fsubr jg mov mov ret jmp sub add pop imul mov pop cs inc mov mov ja add repnz xchg data16 popf hlt (bad) jecxz push jge push test je push sub rcll inc idivl sahf cmp popf gs sbb push mov arpl ret das dec and adc shll addb lret pop int3 dec imul xchg cmpsb outsl ja jge cld jmp fs xchg add add not movsl inc je lods fdivrp inc add jnp fadd cli js or cmp fisttp movsl pop sbb xor xor fisubrl fstps in in xor int int add test cmp or dec fistl lahf lcall jge cmpsb adc test or jmp out outsb xchg jno add stos push movsb rorl loop in cmp or add cmp xor pusha test jo cmc (bad) cld and incl or and out (bad) push (bad) in in aad roll add (bad) adc jmp xchg iret xchg jmp sti cli fstps insb mov push lea imul psrld xlat movsb jne ds and les dec and pop sbb mov cwtl daa xchg xor or jae mov push (bad) das or (bad) out cmp mov rcr not jmp pusha mov pushf cmc cmc pushf shr cmc clc cmp cmp call into pop enter inc add out int3 mov inc (bad) push pop outsb aas inc jg int3 adc mov fistpl or cwtl mov adc arpl push lods fs in cwtl push cmp ja iret aam pop push adc jl leave arpl repz xor js fistpll sub sub aaa pushf (bad) movsl stc xor push paddq lods add xorl aad icebp iret rcrl dec gs arpl cmpsb pop or cld icebp scas into xchg xor sbb nop sti (bad) js fnstcw xchg dec insl pusha (bad) xchg popf shl gs sub cmp ret data16 or fdivl xchg icebp cmpb xchg mov mov pushf xchg ret sti sbb aaa cld hlt ljmp or dec dec dec jns popa pop imul mov and push xor bswap mov jmp add faddl xchg bound test push imul cmp dec imul out jl int3 dec loop js aam mov lret lea or mov std repz push push add cmc jecxz dec push push adc aaa mov mov jno aaa insl int3 out cmp cs dec cmc push in or pop out mov sbb imul mov push xchg subl ja pop les dec scas imul scas sub mov jmp stc clc call mov mov xchg add xchg into in in ljmp leave loop jle repnz cmp or mov xchg jp fmuls dec les mov lahf mov in sbb inc shrl rcl mov aaa cs jbe and lcall adc sub (bad) popa lahf or sahf inc insl jno cld mov outsb cmpsl int3 cs cmp int jo xlat aaa cmp enter out loope inc push imul insb mov cmpsl push lods inc xlat ljmp or movsl imul push mov daa push mul push enter cmp cld or inc fcmovnb and rcll push xor mov repnz mov jecxz je dec jg pop mov (bad) jg pop bound inc mov rolb add or push dec adc sbb aad mov call inc mov test nop mov pusha pushl lea jmp fwait mov xchg or jbe xchg insl inc xchg rclb jo cmp pop outsb stos roll enter test mov mov mov div sbb test jns jge mov lods stos ja xchg sub pusha jl es aas lods pop jnp cmp out scas cmpsb hlt js fdiv sub jle adc pmullw mov std mov shrl repz dec pop pop arpl ret cmp lahf or loop xor sub jne cltd cmpsb iret and or fnstsw mov mov insb cmpsb divb gs push test mov rcr adcl not mov iret xlat loop lcall inc (bad) cmc fidiv es or push xchg pusha mov mov imul fistp lds divb fidivrl jo cmp mov add test outsl in mov imul lea in cmpsl dec ds jno pushl mov xchg insl jne out mov stos xchg outsb fildll xchg stos arpl les sahf xchg add cmp (bad) in add shlb jne mov div les push or lret lock mov das cld sbbl out and xor inc into movsl sahf je out (bad) fnop add test pop mov jl fwait jge cmpsb in cwtl leave mov or push or nop cmp push fsts add push dec add in test test sub test int out ja out leave aad cmpl sbb daa jmp ljmp xchg or sbb sub sbb or cmp (bad) push and lahf ret mov es in pop mov push icebp std mov stos cmc cmc add pushf clc cmc cmc mov cmc test jmp setnp movzbw mov pushf movb push movb mov movsbl pop pusha pusha mov mov pushl ret daa mov bsr bt mov cmp shr xor jmp mov inc mov xchg mov ds ret scas in fadds cli sub cmp cld dec pop mov cltd into (bad) jne inc xor xor mov xchg out and aam bnd sub (bad) in mov cltd out rcr out test nop pop add outsl mov dec inc ficomp pop fisttpll cs push daa add fmull pushf mov sbb test xor fucomi iret xchg pushf cmp pop psubd or rcll cwtl mov in cld mov out cmp jg jbe in mov cmpsb mov lock xor jb out mov ffree in inc inc cmpsl nop imul sub xchg add or cmp xchg push adc je sbb cmp negb inc mov dec mov push (bad) in rcrl lret repz lock cwtl xlat add cwtl sbb or push scas xchg lds stos pop push pop inc lea (bad) sbb leave andl cmp sbb sbb aaa or loope add jbe ror or lcall inc mov cmp mov dec call scas add movsbl bswap pop setb bswap xchg xchg pop call jb pushf pushf pusha pushf pushl ret push sbb or or push xor lea dec pop push mov push mov arpl adc imul cmpsb and ficoml out (bad) pusha stc jo push push dec dec ljmp mov fcmovbe cmp movsb nop imul nop add dec dec pop or jbe popa add fstl push mov pop pusha int3 lahf cld fbstp mov imul inc rcll insb sbb mov fs pop mov das jmp insb nop imul nop lea dec pop mov sbb xor jo sub lea sarb mov (bad) push mov dec test shlb enter xchg pop out sbb shrb sbb pop xchg cmp (bad) aaa mov fnop dec mov jl repnz bound lahf push les aam cli out lret fcoml inc sub into repz sbb mov sbbl sbbl push push adc push movb ret and imul xchg push nop push xchg cld mov xor add and lea jne cmc call arpl add or mov adc mov adc mov cmp jb xor movsl xchg sbb pop inc (bad) in daa inc sub std roll pslld and and jae inc mov push dec jae sub insb movsl (bad) adc sub add pushf or scas cld daa push push out (bad) ret insl xchg push (bad) das adc daa sub lods or add cmovne add mov or in int add (bad) pop bound pop inc mov sbb push lcall dec mov or inc cmpl and test dec mov jmp lret in pop int3 add jecxz cwtl xchg cmp xchg dec cmp pop or or push push (bad) or fs jnp (bad) stc mov bound das push popa sbb (bad) sti xor adc daa dec mov aam xor inc es mov pop mov mov mov lret mov rorl and push hlt push scas add fldenv adc or enter cli stc add mov xchg mov das loope adc push push dec xchg cltd push les inc (bad) mov jp inc sub pop cltd loope (bad) arpl (bad) ds push and xchg xor push ja inc sbb repz mov jmp cli xor fstps sub fsub cmpsb inc ss push outsb mov test add jne inc les aaa xchg push sahf push mov xor pcmpeqw lods cmp add cmpb inc daa pop pop sarb push mov test ret mov and data16 push jg add je outsl fs gs imul add or insl test out mov and cmp je mov mov call sahf les inc jbe xor cmp stos cmpsl es jb push xchg leave js add (bad) jmp iret push cli mov push outsl pop push jmp sub and push push jmp or and test ja aas and es xchg std insb xchg iret out arpl xor int stos popf mov movsl test rcrb rol call sbbb popa mov cmp sti mov or push sub rorb mov std stc out jae and addr16 sarb cmc psrld test push pop adc or cltd mov test insb and pushf pushf pushl ret pushf jmp repnz call test inc adc jae sbb and aad test mov icebp (bad) aam push sbb fbstp sub jp (bad) rolb pop outsb (bad) ja fnsetpm(287 push cmpsl imul inc pop pop or stos outsl dec in orl pop ret gs mov inc xchg clc mov jg fcomps in daa xchg cmpsb xor xchg (bad) xor adc dec pop pop add out lods sub aad movsl inc push dec rolb (bad) xchg fbld jnp push xlat sub sub ss sbb aas loopne mov les adc and repz pop (bad) fdivs add shll fimul adc cmp push push or cltd pop inc push daa ja jb dec mov sbb push inc and popf (bad) or dec jae lds data16 lds je cmp scas pop jnp sbb push xlat mov pop sbb inc and (bad) and enter pushf test add mov xchg push test dec ds cld gs mov lock pop lds mov ss or addb mov in xchg jae lock data16 pop lea arpl add lea mov lahf cmc inc aam fadd das lds xchg (bad) in inc mov lods movl pushf pushf mov lea jmp cmp (bad) ret repnz stos xchg adc lods pop cmp nop aad jmp dec mov jns cmp cli adc xlat movlps xor ret ret sub incl xchg les pop push adc push cwtl xchg and leave push (bad) insb push adc xchg test jne call lods aam (bad) mov push cltd (bad) rcr pushf mov es bound cmp push cmp pop ja dec fmul idivb stos xor cwtl jp adc jl out jno or dec imul push mov pop insb lret push pop jl adc inc push and out rol fistpl mov adc imul les mov xchg in jb fsubr lock mov fisttpll cmc in stos jge cli add mov insl jb jb ds inc cwtl dec push or mov lahf movhps and lods (bad) xor jmp mov repz sbb sub mov sbb sbb mov xor inc test jmp icebp push int sbb inc fwait adc inc (bad) daa or aam and jae imul xchg pop hlt mov adc test mov jmp mov mov lock and stos cmpsb in cmp sub test push movsb bound icebp (bad) pushf mov fsubr pop test push (bad) ja inc loope leave sub sti lock mov or sub enter sub hlt popa jns xor in mov push push aam cmp leave movsb dec sarb into mov or pop jecxz xchg add mov add ja sbb mov xor adc cmpsl inc aaa push mul aam adc inc out jg adc popa add lds adc xor ljmp sub xchg or ret jmp add adc cli jmp shl pop mov xchg jne xchg fidivl and fnsave mov sub add test xchg sbb add xchg add jmp cld pop cmp adc inc fcompl lahf pop and inc ret pop mov std (bad) add cs xor out fldenv cmpsb mov leave xchg mov lods jbe mov push fwait imul ljmp dec mov xor rol adc cs es mov inc stos stc adc sbb fucom xchg test add outsl pusha aad jl fs jecxz mov (bad) fnsave adc into dec push mov xchg clc stc jae dec ja test iret pusha or ret jmp movl cli add out in xchg scas pop sub jmp mov pop cli adc (bad) sub rorw jne aam lcall mov push aad pusha lea call jg push mov pusha pusha pushf push lea jmp not aad movzbl push test mov lahf sub pushf mov rol push shr daa bsr push lea sar push sub ror rcl mov pusha clc test stc test pushl lea je movsbw mov shrd add and mov pusha stc call lea jne pusha jmp add inc gs outsl fs gs imul add pop xor dec popf pusha movl pushl movl pusha pushf lea jmp pushf call call je xchg or mov lods jb jbe (bad) xchg push add mov ror (bad) jg sets push bound sub pushf jb xor icebp xchg jmp dec loopne aam in leave lahf movsl (bad) arpl sbb pop dec hlt sub add or sub push push inc rcr add sub and das adc dec repnz sub inc or xor (bad) fisttpll lret mov push pop sahf inc imul push data16 cli mov pop sub mov inc lcall adc sbb sarl lds inc cmp add lcall call pusha jmp pop xchg and sbb inc jmp sub cmpsb int mov popf cmc push clc sub sbb adc mov hlt mov push call sub adc adc lret ja mov push xor pop mov sbb sub add jnp sarb push xchg mov xchg icebp inc xor cmp std popf sahf jecxz jecxz xor std lock inc and cs jne test stos xchg stc push mov ss bts cltd ret xor arpl dec jle and or inc int scas add xchg repz insl (bad) push rcll pop cmp out inc sbb into aaa add jmp pusha movl push movl movb push pushf lea jmp xchg lea mov cwtl bswap cwtl lahf lea call mov pop mov lea jmp push bt cmc call pushf movl push jmp nop test inc (bad) mov push das cmpsl jae xor mov add mov inc cmp push out push mov mov xor pop xchg mov js jg mov inc xor repnz sahf fistl xchg outsl add scas dec mov xor pslld xor fs mov mov adc lahf sarb mov rorb push addr16 mov ret sub sbb popl mov mov add test xor mov pusha mov cmp add pushf lea je test add pusha pushl push push lea jmp push call lea jae test jmp push pushl popl push pushf pushl ret cmpsb lahf xor or lods mov repnz fsqrt test popa adc push lods inc and lods movsb add lock mov popa mov push scas in pushf xchg inc (bad) dec push cmpsl outsl out sub dec mov push push aas xchg cmpsl into negl lahf (bad) mov dec xchg vcvtsd2ss insl xchg mov push in (bad) out pop lahf jne mov push imul add push push call mov neg mov cmp cmp jmp add inc gs je dec popa outsb fs add neg push ror push sub mov bts pusha clc bsr mov xchg mov xor call (bad) xchg loope fstl hlt jecxz out sbb jae das lahf jg pcmpeqd push rolb arpl pop popa jge and and push mov xor mov ja (bad) cld cwtl push or xchg loope mov outsb mulb fidivrl sbb shlb adc push xchg test outsb push movsl stos data16 push leave add cld adc loop sarl cmp cmc cmp mov cmp jl cmc sub sbb fildll gs lcall das cmpsb xchg and cmpsl (bad) fist sbb jae call call pop js inc sbb inc mov mov jne dec xchg sbb inc test lret cmp dec movsb xor in cmp fldenv dec lea gs decb jl out jle mov jnp nop xor bound loope imul cmp shl xor sub roll or mov outsb imul cld aas xchg out shrb stos enter (bad) jecxz loopne xor fcomps xchg arpl lock inc xchg and shr bound sub (bad) lret push xor les in mov test push lea je test jmp rol call pusha clc add push push mov bsf mov stc push cmp movw mov lea jbe xadd shld rcr btc mov shr xchg add pushf and and mov setb xor shld movsbw add movzbw not bts movl clc bsr pusha mov add bt jmp cmc bt cmc cmp push call cmp or add cltd stos call ret xchg cmp jl push jno (bad) repz rol mov cltd add jne sbb iret mov xchg pop inc fiaddl inc push cltd lock (bad) in sub dec push cmpsl jo mov xchg gs lcall call scas pop std adc and add cmc add rol add add and xor btr mov stc shr cmp clc cmp call insl pop mov sbb inc push cs xchg pop cs push mov mov adcl adc jl aam mov xchg mov mov rcr stc dec movsl int3 in mov cmc cli mov cmpsb aad test into (bad) sub divl dec ret icebp push (bad) gs sbb adc scas iret or xor push pushl ret pushf pushl pushf lea jne mov adc cmp seto mov mov sub neg btr btc call cmp or jp push sub pop xchg scas mov xchg mov stc sub adc (bad) (bad) xor js mov mov stc lods xchg push (bad) sub ficoml inc scas out es jmp xchg sbb or and mov cmp mov cmp xchg popf jne and or jp mov mov mov mov mov jo xchg xor aam repz pop enter fadds sub movsl or dec loope (bad) push je or jne jmp inc jmp movl call rolb enter inc shrl cmpsb fsub enter cmp mov repz inc loop xchg sbb push lcall xchg push inc xchg mov loop pop mov adc (bad) push aad xor data16 mov mov fwait xchg xchg push mov ret imul inc stos imul jae mov sti add in into mov aaa cmpb add mov imul sub mov clc xor sbb fbstp loopne push xor roll pop loope add push add add add add add add add push add push add add add add add push add xor mov (bad) std sahf inc lods iret cmp pop lds dec push xlat push cmp aam in ljmp (bad) (bad) aaa push iret inc mov gs mov push adc in in dec mov je add inc fild sub xchg outsl sub dec push insl mov out jle xor sbb sbb and fstpt jne imul mov cs pop (bad) lods push pop and std fildll out insl lcall ljmp aad push ret test addr16 in stos jne cmp sahf andl addr16 lcall xchg push fisubrl mov sahf int3 out add fldcw xchg repz in pop (bad) ljmp push push xchg xor fldenv xor pop adc imul and notb add jnp cmp ja (bad) out sbb mov sbb adc or cmpl xchg sub loop mov lock jecxz xchg sub mov cmp daa hlt dec shll xchg mov je dec inc (bad) (bad) int lods xchg jle test or addr16 mov xchg lahf adc (bad) (bad) xchg jle inc test stos xchg dec pop sub push push lds dec into mov sub dec hlt xchg lds adc sub push les cmp test lods xchg xchg sbb sahf xchg popa call loopne (bad) imul (bad) insl sti mov xchg movsb adc mov (bad) int3 pop in fadds pop mov fwait jge jl orl in faddl fs (bad) pop pop pop mov push and adcl push dec inc add jno cmpsb or mov icebp cmp cmp out in je mov xchg mov das enter push (bad) out or fidiv fcompl and pop xor pusha les call mov pop pop jno adc pop xor mov aaa clc inc mov mov imul js out sbb inc sbbb bound outsl fbld jbe mov test inc push nop push or or (bad) test jge fwait arpl pop mov sub icebp push fisttp cmp sbb jp push out inc or push xorb jecxz test xchg addr16 fistpll and pop adcl cmp pop pop into pop cmp sub fs mov xor aas mov mov iret fstps jb cld sub in mov jns das es stos mov push aaa bound pop insl popf adc and dec fldt in sbb mov les jae imul xor cmp jecxz ljmp pop jp or or aam dec fsubrs mov jmp aaa notl jae push enter pushf or out mov or cmpl (bad) xor dec inc push and (bad) sahf test mov pop lock sbb loop (bad) ror cmpsl cmpsb and push jmp push movsl dec in mov in inc cmc sbb clc data16 cmp insb imul pushf call mov jnp cmp jmp cmp jecxz cmpsl movsb jbe inc incl out in dec lret dec cli push and rorb daa lret xchg mov add out fcom in cmp sub xchg out push sub stos push push movsl js inc or sub ja push cmp push popa lret leave cmpsl inc push aam jb push mov jno inc shll and mov pop mov lret fildll jmp xor xor sub adc pop pushf cltd fmul sbb clc clc ja (bad) cmp mov or fild imul clc insl xchg scas dec mov test imul push or mov inc xor das push sahf clc jmp pushf jnp push jmp inc dec ret inc loopne adc iret shrb or mov fldcw int3 mov dec sbb sbb mov or mov mov adc cmp (bad) dec dec sbb test pushf popf dec sub repnz pop out pusha xchg jo mov or std ja aas cltd mov divb sbb and cld movsl imul mov inc dec scas xor lods loop std xchg dec dec cs and out adc dec rcrb out pop lahf or imull add ret arpl iret push inc mov mov and cmc xor push into gs xor push cmpsl scas push out int (bad) outsl test lret fisubl mov cld jmp xor inc sbb adc fcomps (bad) insb mov pop out adc pop push ret xor push ret cs fisttpl push add ljmp cmc clc inc jg leave or outsb js jecxz dec (bad) insb stc sbb cltd iret mov int sub or sarl sbb mov and add xor jb mov popa popf out adc dec imull rcrb add pop scas stc sbb inc (bad) out cs mov out es es dec xlat les xor into (bad) adc fwait ss out push nop pop dec pushf sub push dec sarb or push push sarb cltd push xchg incb leave (bad) int mov dec out flds cs sbb and aaa je inc sbb cld jae mov cld test cmp sbbl fs pop sbb cmp inc scas loopne pop ja test movsb ja fsub ret cmp (bad) mov fs or fcmovnu jecxz gs pop scas pop (bad) xchg js pop pushf lds sarb sarb ds scas mov in movsb out test cltd jmp inc sbb push nop aam aas cli lcall lock jl test jne imul out and and shlb and stc lea pushf dec or jne lods push mov sbb xchg cmp hlt imul mov and mov outsl jg jl mov out mov or mov int3 popf cmp push cmpsb stos xchg push pop xlat aaa mov arpl sub mov pmaxsw setnp pop lods xchg mov addl clc fisubr int3 mov mov imul add push inc mov xchg and jns add mov aaa outsb inc pop xchg pop rcr xor and jae jle lods sub push push stos add push lds lods sbb cld add jl ret and xor sahf insb dec push or outsb push imul sub pop pop test fmuls test imul lret xor sub pop mov (bad) xchg negl mov sarl mov sbb or outsl mov add add mov loop loopne push push outsl ret sbb subb loopne sub (bad) push (bad) adc hlt shll or addr16 leave mov aas xchg jb shrb les and (bad) lea jg dec pop sbb mov aad jo inc xor push std cmp rol jmp xorl out mov or pop cwtl mov pop (bad) idiv ja pop repz mov xchg mov push dec faddp (bad) pop das inc int3 dec rorl inc loopne sbb lds fdivrs loope (bad) repz roll adc ret int cmp and out mov or aaa jp (bad) mov repz (bad) cmc lcall xor lret aam push daa sbb or cwtl push dec xchg (bad) into add sub int into fisttpl scas pop popa icebp or imul cmpsl sub mov xor sbb jno mov cmp mov mov in mov loopne dec cmp iret pop pusha push ljmp adc pop aad aas push insl stos push jbe lds xchg inc jae mov dec sub push mov scas iret pusha iret (bad) and sbb jns xchg adc jge pop push fist idivb jo in xor fs adc imul jne pushf mov test mov mov fwait out call xor roll pushf stc push popf hlt (bad) or lds and out jg scas push test jmp xchg cmpb loopne shl jae sbb sub inc clc fldl scas scas jl or push outsb (bad) mov es (bad) sub jmp (bad) scas test xor ret das out jecxz jbe mov xor dec and mov ret xor js subl push int3 test push popf loope xchg push les cmc faddl fwait addr16 fbstp nop inc aas lods xor cwtl inc jne sub mov test aam cmc add in (bad) cmp arpl aam pop in sbb addr16 (bad) mov mov ret adc rolb daa jp adc mov sbb or stos inc lods into inc (bad) ret pop daa imulb push lods incb pop and pop test cmp mov dec sahf sbb or xlat rorl outsb pusha sub inc jg xor mov xlat clc dec dec dec jp divb push cmc sbb clc cmpsl cs jg fldenv mov sbb imul (bad) mov pushl lret inc sub add add leave pushf call movw pushf mov lea jb stc bt cmp pushf call iret pop int3 adc or sub mov jnp pop xchg stos ret mov rcr pop popa xchg out js jge shlb (bad) pusha mov xor mov xchg push das jbe push jp push xor data16 in rolb lods outsb les jo insb jmp lret inc jl cli sbb imul ja sbb call mov fidiv cmp jnp test sub inc push sti sarb jg add sbb push jg or int3 in mov out add xor xor in add aas (bad) (bad) pop push jl cmc fmuls mov jns cmp out cmp inc push mov out and in mov rorl mov insb insb or add jns pop rclb rolb add jle and (bad) fidiv jp daa inc cmp pop imul mov inc xchg inc addr16 lret out xor ret pop call dec sbb out ret fwait xchg sub inc ret push sbbl inc cmpl lret sub cmp mov add mov pop and pop mov dec outsw sub mov xchg shrb xor mov lret add xor cmp cmp enter dec or repz xlat repnz mov add sub aam mov out loopne les and repz and testl inc jle pushf push lods fisttp (bad) adc insb stc arpl xor cld repnz mov popa stos ss sbb test leave and mov cmp or add mov add in mov adc xor in ret push mov adc in ficom cltd and and fsubl cs icebp push and loope adc fldenv lcall push xchg imul insb mov enter sub scas jbe lret adc mov dec (bad) movsb xor pop jle pop add xor dec test out xor hlt xchg test or call xchg xchg jae sarb rcr cmpsl rolb xchg call int3 mov jnp shll repnz inc lret xchg cmpsb sbb idivl adc unpcklps es aas jge (bad) shl je pop fprem jp cmc sub cmc test jmp and inc negb es mov subl pusha lds push xchg (bad) jbe test dec (bad) mov cmp sbb movsb xchg stc sub (bad) add fld1 loope pop ret call imul dec and ror (bad) cwtl int mov pop and dec mov ss push (bad) loopne mov or adc cmp xchg aad scas sbb lret xor lods shrl dec insl incb and pop mov cmp ror in stc es outsb (bad) int3 enter mov (bad) dec lds dec fistpll fwait pop std fs jnp test ret stc xor lahf aad fnstsw stc dec in into (bad) or jecxz sbb outsb mov loopne imul jb jb pop sub mov jo sub pusha pop mov fstl dec fs mov pop sub push lea cld ret sub mov movsb ret lock call adc xchg shlb sbb fdecstp jle das xchg fs js pop enter popa cld push lahf adc xchg insb movsb pop fisubrl (bad) xor cli pusha ds inc xor adc out test (bad) popa sti cli sbb jnp lock lods ret inc jmp pop pop (bad) jno and cmp inc mov js sbbl mov add shll xor xlat test or imul sub lret inc lret mov sbb add or and ljmp (bad) or lods adc xor nop dec repnz sub fcom testl add cmp or jnp jmp mov xor mov gs mov push jo jb cld pusha rorb cltd ja sub adc js ljmp xchg jno push data16 xor fucom or jnp rorb sahf shrl adc or iret js lods adcb imul sbb and repnz inc fcmovb dec cmp fdiv or (bad) adc nop sub lcall imul andl mov mov test ficomp mov cmp sbb jl sbb ljmp mov sbb adc push stos mov int mov jb or jne sub outsb fnstsw or jbe add push pop nop js cmpsb pop push (bad) pop stc jg xor inc sbb mov fnstcw dec pop adc xor push leave ja in arpl fstpt add mov cmpl xchg sbb xchg imul call adc scas mov out cld or rclb jmp loop sti repz inc call in xchg in (bad) cmpsb pop subb in inc mov mov dec (bad) packssdw repz lds mov shll fmull adc aad outsl mov nop int3 addr16 pusha movsb das fcoml and fdivl and add jge xor rcl jbe pop out pushf movl pusha pusha push push lea jmp lea call jmp xor psrlq or inc mov and adc mov dec push adc pop push pop pusha stos cli popa lret (bad) xor lods xor jp xor xchg xor or jmp sbb cmc into aas inc mul test repnz and add cmp dec xor sub pop push addb lods int inc cmc mov push mov das jno xor loopne pop jb push lods cmp js inc rorb pop xchg inc and fwait jmp data16 outsl es xchg mov dec fcomps sbb outsb out cli flds push out push into or push push ja notl or icebp add push test or lahf xchg pop addr16 ret sbb push adc mov (bad) push cmpsl adc and rcrb fwait outsl xor or pop daa sub cwtl mov sub mov aas xor push adc inc adc dec add daa inc jge mov andb sarl leave xor addr16 pop lods daa insl clc rcl push push hlt mov push stos imul test popf loopne gs xchg jge mov push xchg leave xor lock das push mov mov mov push add jmp call push rol dec pushf dec ror rol jmp jmp lea jno pusha movl movl lea jmp push jnp add push add loopne add push add push add or add gs add jb add loopne add push add push add loopne add push add push add loopne add push add push add loopne pushl pushf lea call call lea jb jmp push pusha pusha lea jne pusha push push mov jmp mov or pop cmp jg jmp inc sub inc imul pop mov sahf mov and loopne fadd cmp xor in aaa mov cmpsb mov (bad) pushf push mov dec xlat mov pop xor movsl popa mov cmpsb push stc and add and rorl (bad) das out enter cmp (bad) add sbb or int3 xor ljmp (bad) (bad) push (bad) xor imul mov popa aam outsb mov (bad) push out clc das fstl xchg dec dec lds jp std push scas jg push aam int3 jp or xor inc adc (bad) mov repnz (bad) xchg sar cli inc aas stos mov xchg add adc jnp sub xchg mov push pop js mov add test mov daa outsb mov scas outsl movsl inc scas or (bad) jl mov push movsl xchg xorl std ficom xor jecxz (bad) xchg fwait rorb mov mov ds jbe fsubl inc inc data16 push nop (bad) popa push pusha repnz add dec dec hlt push jbe xor sahf xor cs xchg lret (bad) neg aas push das or push test insb mov mov xchg sub movb pushl ret arpl inc sub enter sbb pusha pop mov push jge dec es scas jge movsb jns cmp mov in ds cmp xchg cmpsl mov cmp jnp shrl and imul sbb popf aas jge aas fsts cld pop jl cmp loop jb cld inc js data16 popf aas test faddl pusha mov mov mov pusha movl pop lea mov movl mov mov pushf pushl popl movb pushl pushf pushl ret loopne and cmp jo test xor add pop xor jecxz mov sbb xchg inc xor cmp out xchg xchg jmp dec mov dec movsb push pop pop adc lds pop call cli sbb cmp add pop inc cs jno les aam mov xchg in add jb inc xor and cmpsl adc mov mov add mov xchg push popf (bad) (bad) int3 pushf and mov jo ja popf sub pop add jbe shr bound int3 add loope cs jo test (bad) lock scas lea je call pusha pusha mov movl call pop mull imul push sbb push inc imul dec stos scas add add mov push int3 sbb jns ss lcall xor pushf testb lret inc jl fabs in outsb mov stc scas ljmp xchg dec leave push sbb add clc fisubrl addr16 lods aas jecxz or xor aad sahf sbb loope rol and (bad) jge push pop flds jle (bad) push sahf cmp fwait icebp cmpsb mov and mov bound bound mov mov mov fwait dec and dec cmpsl sub xchg sti push daa test outsl imul inc fisubrl mov push add push dec sahf lods test addr16 pushf test or cmpsb jg not mov jnp jmp (bad) into xlat scas (bad) push dec bound imul in dec imul sub js or (bad) jmp stos inc int3 lods or xchg fsubr ficoml add xchg xchg insl cmpsl ss addb in scas pop imul mov add mov or mov cli add dec sub jbe push daa sahf iret div (bad) xchg mov jb pop cmpl push xchg sub mov stos call sub stos sar sahf scas xchg jo popa jge xor inc pushf sbb popa push push (bad) mov (bad) test and in inc gs add xor lods jp sbb data16 sbb lret pop int3 add mov cmpsb inc cli mov int add cmp mov mov jmp mov mov std into jge hlt push dec pusha call sbb adc or sub mov cmpsb in xor loope in shr mov stc xor pop loop cmp add lock xchg mov mov repnz outsb xchg aam popf fisub xor pushf pop sbb call imull stc push adc mov sub lcall ret add fwait add jg frstor mov mov out pop stos int lret jnp sub std loope and fisub adc icebp (bad) roll and addl jecxz stos pop mov (bad) lods mov push mov nop aam imul sub add add fstl pop in pusha pushf lea jmp cmc movb add pushf push pushf lea jmp call pushf mov pushf movb call test pusha call rep pop mov mov pushf pushf lea jmp jmp mov pushf xchg push movsbw movl movsbl movsbw lahf lea movb call insl push pop cmp inc and mov daa push gs push push jge std (bad) std adc bound test mov nop mov inc das sti (bad) sahf ret sbb push xchg xor adc mov or cmp daa js ret adc pop adc fdivrl gs prefetchw add add divb enter popf mov fistl fcoml and pop cld or jle lds inc xor jns or out jae test loope repz inc push jle fmuls dec cli flds into push rcrl and cltd adc xchg or mov lcall push lahf dec push lods xor xor cmp inc enter test add loop test or in in dec dec xor mov cmp repz sub adc pop arpl addr16 aaa inc pop (bad) xor xchg popa sbb (bad) imul lcall push lds push cmp cmpsl cs (bad) icebp testb push adc pushf popa inc xor in push rcr (bad) repz (bad) and test fnop add fsts cmpsl dec cmp inc insb xchg mov into jmp dec imul sbb push pop push pop xchg inc popa leave pop (bad) jecxz sbb int cmp inc pop cmpsl insb inc fist pop std ss in pop aam mov call imul movb (bad) cmp (bad) hlt inc cmp xchg adc xor push adc push jo add inc push xlat fisubl rolb test push pop (bad) mov (bad) call hlt pop dec sbb bound mov fcomp cli out in push mov mov adc cmp and xor sub loopne jmp stos and lahf pop mov rorl inc sbb sbbb add xchg movb lea jg push pusha pusha pushf pushf lea jmp fisttpl adc out adc inc adc jnp ss jbe push outsl push dec xchg xlat out mov outsl into cmp std pop or sub insb mov rcrb push loope cmpb test inc mov cwtl jbe xchg mov cmp mov jp and fsubrs xor cmp and rcrl mov jne dec mov out mov cld jmp mov loope divb out popf into mov (bad) mov imul sub pop add mov out outsb mov fdivrl dec adc sub rorl mov add inc or popa jp dec sarb pop sbb xchg sub xchg (bad) loopne mov adc test xor pop sahf jnp ja clc dec mov lods (bad) fimull lea pop xor lret jb (bad) jne sub cmp movsb loope inc xor jo adc fnstsw and mov iret lock fistpl inc sub lahf loop pop rcr (bad) mov mov xchg movsb lock add dec icebp adc dec or lahf jp mov or clc xor dec pushf cltd push mov pushf jmp push movl jmp pop (bad) mov or cs cmpsl mov xor sahf aam into out mov jmp jbe cs les xchg inc inc xor lea cmpl dec mov lock sbb daa sahf int inc (bad) je push lcall cmpsb or or inc cwtl pop sub jns xor and cld ret xor popf rorl adc push mov lret hlt fs test cmp das scas aad xorl sub mov add xchg loopne mov inc or mov flds mov in push (bad) xchg add add (bad) cld lds pop scas loop lret bound es aam lods mov and push nop out sbb lods ds lock sub xchg faddp mov ret mov shr adc xchg sbb fcompl adc mov ja adc dec cmpl fsubrs ret jmp imul imul cwtl mov push mov das cmpsb test ja jo xor loop xor sub inc inc push inc push dec xor cs insb add frstor cli inc or and adc insb imul pop mov inc inc bound aad xchg jb fnstenv scas loop add (bad) arpl and insl data16 lahf dec jmp cli stc jl mov xchg or xchg es ds and jmp mov xchg loopne mov fistp cs (bad) push pop loopne adc mov add gs iret jmp test das scas jg imul pop adc cmp jo sub movsl cmp imul in cmp sti dec mov dec data16 add mov add xor cs insb add or cmc repnz mov flds and push push lods (bad) mov insl pop push push into out mov add pop ljmp jmp inc nop jp push cmpsb dec stos push lods adc sbb jae or rorb movb cli leave xchg xchg enter mov movsl push xor ss adc sub (bad) ljmp mov push stos (bad) faddl mov mov mov or xor cwtl add push and icebp sbb aad cmp lcall hlt jmp or jno cmp (bad) mov pop sub cwtl cmpsb push sahf jb xchg test adc arpl and mov repz rcll add movsb add dec fdivr in data16 inc sub call dec aaa push dec xor movl inc pop lret fistl nop gs cld sti adc dec bound ja,pt cmpsb loop mov test cmp in loop sub jecxz xor jmp mov push imul scas mov xor cmp jno or jns cmp in rorb jmp test leave sub adc mov stc and inc or mov cld loope cmc xchg (bad) lds icebp out popf (bad) int mov mov cmp inc or mov mov jp aad sbb sbb mov dec or cmp inc or jb cltd inc insb sti and or or jmp add push dec inc gs outsl insb fs popa je inc add or sbb outsb hlt repnz jp pop popa jo jl inc push jo adc sub fcmovnb shl lahf sahf movsl aas scas (bad) and sub cmp je cmp pshufw sbb (bad) cmpsb sub jno into cltd mov ret fwait ja jo pop jno movsb adc add jnp (bad) ss pusha pusha pushf lea jmp add inc gs outsl fs gs popa outsb fs gs add fcomps xor movl jmp push push movl mov mov lea jmp movzbw not pop mov movsbw pop pushf call andl rcr mov fisub (bad) int3 add push xchg lods cmpsb (bad) mov push gs adc call in or mov or test sub dec sbb test dec dec pushl mov std inc and hlt sbb pop je jl mov (bad) (bad) xlat ret xchg mov shr daa (bad) es sub insb int inc pusha clc icebp push je or (bad) jb mov or jnp ljmp fisttp sar jno lcall sbbb je jne sbb mov (bad) mov add push sub cmpsl jmp or ja (bad) dec pusha mov imul fisubl mov add cli ret mov adc and push cmpsb (bad) in je jae fnsave xchg out jne sub sti pop mov (bad) shr fs movb lea je cmp cmc pushf bt cmp jmp jno scas jb or test adc cmp adc popf xchg js cmpsl es mov cltd sti (bad) fs in lea mov pmulhuw pop cmp push dec cmc sub lods xchg js xor pop loop sar sub or cmp enter movsb sub popa call cmp sbb cltd sti (bad) pop and data16 xchg jmp cmp test es rsm adc cs std sub lea adc dec or ljmp repz mov xlat in cmpsb and cltd sti (bad) sub daa mov xchg (bad) fstps (bad) icebp mov insl adc push jno imul add push mov imul mov mov ror (bad) lock sbb inc ret in inc xor enter lods lds and mov aad (bad) in je sub inc mov xlat les push push add sbb sbb sahf pop jne sbb js stos push insb sub rolb pop jecxz mov jns dec adc scas mov mov push inc int (bad) (bad) int3 dec jmp insb cwtl setle xchg leave and notl ret inc sahf push push add test xor (bad) icebp icebp cmp dec or pop xchg inc xchg jmp cmp bound jb jbe es lock mov sbb add js imul adc add sbb xlat dec sub sub and rorb sbb jno in xchg or mov fsubl mov jbe cmc pop lods cs cmpsl sub scas pop lods shrl stos xchg aaa mov cmp mov test inc push xchg and fsts orl cmpsl (bad) leave insb clc das fnstsw add movsl pop imul movb mov jp ja gs mov dec bound test sbb jecxz and mov aas pop (bad) xor push aad mov (bad) pusha inc xlat dec test (bad) add outsl movsb movsb inc mov inc lret inc mov push (bad) and fimull sub mov sti hlt xchg lock inc ljmp xchg lea cli cmp cmpsl jl movsb out lods imul jns stos pcmpeqw jae fisubl mov outsb loopne fucomi outsb scas outsb mov lods movsb (bad) aaa scas inc int3 lahf fadd pop ret xor pop icebp pop add fadd lcall popa cltd aad lds inc cmc xor jbe ds push inc pusha lea add adc jo push jo test fdivs push lods lret push xchg loope jecxz adc mov pop sbb fidivl lods cld pop adc mov in jnp xchg stc test sub push fcmovu loope mov es push ljmp sbb addr16 jb ja leave jne xor dec jne pop lds mov insl test rcrl dec sti push jne movsl pop cld sub pop mov imul sub in call pop pop adc dec or and ds jp jb and cmc and jle and out mov push into ret jmp out jl cltd in cmp push sbb inc add repz repnz push movsb mov idivb add outsl lret push rcrb stos inc popf mov in shr lock xchg (bad) cmp push imull add pop mull xchg movsl dec ljmp sub hlt mov std pop bound push nop scas mov cmp popf xchg sbb jecxz addr16 sbb aad mov cmp (bad) or xor sbb push cltd xor (bad) dec or push xor repz repz jmp mov mov cmp hlt inc cmpb loope ja mov and lcall cwtl insb mov or js mov mov mov xchg mov (bad) adc mov inc icebp ret cwtl mov push pop pop je mov or add fucomip lahf rolb je (bad) outsb in xor pop sub (bad) in int add xchg dec (bad) into les lds lods in and cltd push (bad) pop and xor xor fisttpll inc xchg repz mov faddl lds scas movb lea jne mov bswap movsbw movsbw movb movsbl push setg movzbl movsbw lea lea call mov lea setns pop jmp cmp (bad) repz shl mov cmc cmpb pusha pusha pushf movl lea jne daa push bt bts xor aaa dec mov add rcl ror cmp add neg add not mov jmp pusha movl lea je pusha mov push lea jmp dec inc push dec inc dec xor cs insb add rcll add test mov lcall add add push push push lea jmp loopne mov dec or push lcall sbb add les out addr16 in popa je xchg sbb loopne ljmp jge jne dec adc mov and inc mov or lock inc int xor jne icebp mov and inc lret add cmp loopne sbb (bad) xchg jg cmp pop fnop sbb icebp loopne add cltd shlb out icebp icebp push xor icebp std popf mov dec or or sahf pusha pop cmp pusha out xchg pop sub (bad) mov xor scas and lret mulb in es mov pop insl pushl in mov push jbe mov mov add adc rclb mov (bad) stc lods sub ficompl pop jg aad (bad) in add mov aaa ficompl mov jmp test sar dec or (bad) out mov icebp imul jp in add es jno pop xor sbb pop jns sub cwtl lock and inc xchg fs fildll dec jecxz loopne (bad) xor cld adc arpl jl into mov pop jmp pop movsb xor inc and aaa add mov and mov (bad) lcall rcll lea jmp pushf mov push pushf movl mov mov movb pushl lea jmp in inc xchg jp or test push fs mov into xchg mov or dec add aam je adc inc loopne pop mov popf inc (bad) cmpsb fmul mov cltd sub nop in mov mov xchg push mov xor (bad) and icebp push xlat (bad) jmp aaa enter into adc out enter movsl in lods jb jge,pn lods jbe lods mov icebp or nop push pop mov mov jb loop jne mov sbb leave lret addr16 jae and mov testl pop xchg mov cmp and hlt jno out in es pushf aad cmp test rcrl hlt dec pop and adc add test pushf popa dec orl aaa add pushl jmp inc sahf ja push or nop pop sub push or outsw and push push mov repz sbb pop hlt dec push jge sub lods jmp sbb outsb lret and aas push loopne add sti into adc (bad) out jp mov scas sbb js add inc ds outsl dec mov ret jmp xor xor push push aas rcll mov rolb pop rolb mov sti cmp js cmp jl add nop jp cli dec pop inc cmpsb ss (bad) frstor add aad je adc test hlt jmp mov loopne stos mov adc xor (bad) mull push clc call call pushf movl push pusha movb push movl push lea jmp call mov inc cwtl push or inc jnp xor jne iret clc jge and nop in arpl push pushf and sarb jno std adc jmp (bad) dec mov jmp push pushf mov mov dec pop xchg test outsl push mov js xchg int jecxz jns and sarl mov fs fsubrp jns sub mov mov ret js xor pop and fmull mov mov or loop push scas pop sarl and je gs inc sarb xor mov xor sub adc test jno (bad) mov lods gs mov lret aaa lret jae jno pop fidivl in es das sub push mov adc pop call mov dec arpl dec fcomip xlat jbe decb rclb and pop jle inc test pop mov dec mov fwait into inc xor push mov dec push test push xchg add in sarl adc push test jno lret xchg cmc scas or or and movsb sbb ret sahf mov dec inc sarb xor mov dec jle mov add and (bad) mov call and lcall pop mov lcall sub pop enter xchg adc mov mov jnp xchg cmp pop and sbb sub xor add mov pop std mov inc stos mov or xlat jl adc in and jle xor mov (bad) jae inc sbb data16 push xchg add leave push cmp or push in mov in sahf loop push push lea stos and loopne lcall push test cmc out jle adc fucomip mov (bad) (bad) call add add inc push push lea jb inc pushf mov lea jmp stc cmp cmp call lea je pusha push bt cmp or pusha lea je shr bts dec jl sub aad btc mov mov test mov clc adc shr movsbw movzbl mov call jmp mov or push or fistl lret cli iret mov pushf sbb fwait pop and jle inc fdivrs mov dec jno adc fsts xchg (bad) shr pop xchg add outsb imul es pop xor add sbbl sbb imul int3 js add repz test jmp stos dec das and aas js jp repnz (bad) fisubr imul push dec push adc mov inc stos jae nop xchg push adc cmpsl lret pop in movsb adc pusha jno add or sbb add sarb sti popa aam pop fnop add test and call adc or and hlt jmp fs jae pusha mov dec pushf mov push inc pushf mov movw lea call pushf mov movl pushf adc mov call lods cltd (bad) sub inc ds ret ljmp out ja ljmp loop pop arpl jb adc jge cltd jne pop sti mov les add jbe sbb push push pushf sti nop add cld xor gs (bad) add add pop stc (bad) push jmp adc push xchg xchg insl fistpll xchg loopne mov sub push sbb add mov jae pop jnp sahf or pop mov sub and jp push add mov xor push mov sub inc xor sti sub push sbb add in xchg andl mov lea cli sbb test xor mov xchg xor bt cmc test clc or call nop fisttpll push or jno push pop lds data16 loop (bad) pushf jecxz (bad) fildl pop into xlat scas mov push sbb push and xchg outsl fwait mov cmp mov sbb mov clc mov movsb dec imul sub dec push jae cltd push dec xor adc loopne pushf sbb aam aaa jmp mov enter or or xor fild cmc cmpb jecxz inc pop mov xchg in cli outsb xchg jno test or stos mov (bad) push loope add sbb mov pusha fbld insl (bad) es adc jbe,pn jp xor jp (bad) lret pushf adc cmpsb jp or cli out fimul mov in cli sbb mov ljmp add ja jmp add push (bad) sbb iret ja int3 and loopne cwtl inc mov pop pop and or xchg insl idiv (bad) ds (bad) mov adc adc add jbe mov adc add mov test (bad) dec and test mov inc lock push aad adc shl and dec inc (bad) hlt lods push outsb out iret jb and or sub pop int xor pop test pop jle in rcl enter jl adc inc pop divb sahf cmc mov scas dec mov les fucomi fdiv in jno fwait imull int3 (bad) xchg xor (bad) jno into xchg bnd dec popa and xchg int3 or mov daa inc push push mov cmp sub or jecxz ss (bad) pop lock mov jne jbe and pop fisttpl cmpsl sbb test jne ljmp (bad) (bad) or call aam push inc pop or jge or push mov and sub cmpsl out scas jae and aam xor rcrb lret mov xchg mov mov mov (bad) lret sub dec push inc dec pop (bad) pop cmp and and xor or push dec xorb inc mov sbb sbb mov push pop int cwtl mov xchg xchg stos out mov lds mov push add jge (bad) fdivrs stos or fucomip push push leave sar pop test scas mov add sub sbb cmp mov xor mov inc or jb jne shrb test into fildll cmpsb mov pushl pushf lea jmp add push jns je insl inc jne arpl outsb xor ss rolb adc (bad) mov dec ffreep divb xor (bad) (bad) xor nop push or ret stc imul sbb add test call or inc cltd inc or mov jmp pop movsl lock daa out scas loope add stc add sti adc mov xchg mov imul pop xor xor sahf xor jp push movsl rolb pop scas xchg in lods pop in out xchg in pop lods sbb and mov clc add mov insb push lret inc mov (bad) enter xor test pop das hlt xchg shll dec cmp inc mov rcrl stos fs sbb jae test sub lods pop cmp addps lret dec cmp in movsl nop repnz cmp ljmp sub or inc jbe pop ret das sahf mov outsb out jge bound and pop (bad) ja dec add lds mov push xor add call mov xor cltd xchg pop popf cmpsl sbb ja out decb repz xor addb setl jnp sub cmp add jae popf mull xchg pop iret into loope (bad) mov mov mov pusha pop (bad) incb das andl (bad) add or jl xchg push enter add shlb bound std movsb mov cmp idiv cmp enter test jo in sbb mov xchg insl fisub sbb push push inc lea setns inc dec xchg aaa dec shld mov pushf sar mov add test push xor btr or mov push pushf sub pusha movw call test stc cmp pushf pusha lea ja not jmp lea call push pushf pusha lea jae push pusha mov jmp pushl popl pusha movb pushl ret movl movb jmp jle pusha push pushf movl pusha movl push push lea jmp pushf pushf lea call push call sub add pop or fs inc xchg movsl inc sub lea int3 ds jp xor (bad) gs sbbl mov cmp lahf cmp je push mov push pusha stos jae lds and into dec ss fmull int3 xchg int3 jmp xchg cmp cltd cli dec jge outsb add leave iret hlt inc rolb lods add (bad) (bad) aaa jnp pop or adc jbe jmp mov fidivl xchg aas xchg push insb inc repnz rolb push mov xor outsb pop mov test add pushf pushf jmp add dec outsl arpl inc insb insb outsl arpl push lea jb jb pusha pushl ret pop not push mov pushl lea jae pushf pushl mov jmp cmp negl pop or fwait (bad) idiv inc lret mov cmp push pop js sub test mov inc mov fstl (bad) mov rcrb scas out inc pusha push adc shrb outsb test and into jnp jmp je mov in movsb hlt data16 sbbb push sti repz xchg add cmp loop ss call mov cmpsl cmp loope fldcw push dec movd shlb mov mov pop sahf sbb pushf ds pop or sub (bad) mov lret and xor int push xchg and cmc in or divl pop mov loopne shlb jne pop ja inc fmulp lret cmp jo and insb jle lods aaa mov jne jp cmp dec (bad) push mov repnz mov sti call inc mov dec sbb imul jae jmp or into pop sub mov leave fisubr sbb or jbe (bad) movsl mov je outsb aaa int3 inc addr16 jmp inc je jp push loopne xchg call fimull xchg sbb pusha shr setge (bad) xor add jmp rcl lods jbe popa insl js and or cmp lea loop xchg setge sbb xchg dec sbb pop dec adc pushf lods out int fisub out jle cld add test jp es cltd adc xchg or test test mov pop xor pop dec push pop jp sbb ficompl rorb daa cld jae aam cmp movsb bound popf jae rcll fadds sbbl leave sub dec nop adc test xlat rorl mov sub or mov jne inc cmp (bad) stc stc mov repnz lods add ret sub lods call cmp xor inc ret lock jg and push in test ds das testl js dec ja mov dec das and iret ds jno (bad) or push inc pop sbb int int cli xor in mov fisubr mov xchg jl (bad) aad dec lret test popa mov scas add je inc add rcll xchg xor xor or mov je data16 adc cltd test push pop jl jl adc lret jge xor ljmp or mov inc or das jecxz movsb mov fimul rcll scas cmp bound cmp sub loop mov jp lods fiadd mov add cs jno lods jge jle pop stos lea jne pusha pusha call jg sbbl inc js lcall in shll push sahf in mov bound in xlat inc mov out add pop mov mov xor push jg sbb leave lret mov jnp aas adc add or ficom sarl call add inc arpl mov sbb data16 xor lock stc call lret or fadd out (bad) or pushf sti les fimull add int sub enter aas notl les jb js movsb adc fdivrs mov leave sbb pop inc cmp and ja fnsave cld xor popa in mov mov sub jg js sub sub xor in aam out out (bad) int sub insb pop sub jg jmp setp fwait xchg loope mov push mov fmulp out jge lcall test shll cld adc jns gs sahf and shlb rcr mov push add fs movzbw xchg lea push movzwl jmp scas jnp insb or or fnstcw rcr or jnp sti mov fiaddl dec adc add ss int xor (bad) xchg hlt sub cwtl sbb (bad) js cmp loop mov xor pop fwait int3 negb jg sub dec jge mov addr16 inc push call xorb xchg and push push cmp lock imul pop cmp xchg imul or mov aam ret fildl in cwtl fisttpll ficom int3 dec sahf and ljmp (bad) ja push xchg jne mov sub mov pusha jmp movl pushf pushf pushl pusha lea jmp shr sub bsf stc mov pushf movw jmp cmpsl test inc pusha or clc lret ret (bad) out lret xor cli (bad) cmpsb fwait pop xchg repz mov mov inc nop mov adc adc mov mov cmc stc pop and mov mull xchg loopne mov pop add add loop add sbb es fistl clc push arpl xchg or mov mov iret into pop xor sub mov adc fildll cs scas mov icebp int3 push cmpsb jae (bad) and cmpsb cld insl dec insb push lahf xor test pop inc les shr jmp xchg fmul imul cmp bt test pushf lea je cmp movsbw cmc add btc dec sar mov call pusha pushf lea jne cmc shld stc mov bt cmp push lea ja mov setb mov pop setb jmp xor shl push rol xor lea mov bswap jo xchg pop jmp out (bad) or popa or add pop movsb shll mov jnp xor dec or mov push lcall dec outsl mov enter push inc enter movsb and outsb mov cmp dec nop mov push ss fimul enter daa movsl adc add jp shll push (bad) in sbb icebp mov ja out (bad) cli loopne and pop fcmove hlt ss orb lahf je das int mov xor and popa mov push nop pop and pop xchg lcall je ljmp sub inc loope cs loope xor jo nop xchg mov xchg in sub in mov mov rcll cmpsl leave and test divb cmpsl or xchg xchg bound inc mov arpl sub pop xchg jbe pusha dec pop jmp xchg sub inc cmp push (bad) daa lods adc test mov pop xchg pop bound xor test sbb loope pop pop out je in lea shll stos push add sub push mov xor decb push andl dec mov ja in xor sub pushf cmpl pusha movl inc in (bad) mov lcall pop xor call stos xchg push das push jo sub icebp push jno and jbe push imul dec mov push sub xlat daa stos jl and xor or xchg pop fisubl in sub mov push and nop fprem loope int mov xor jns inc dec cltd lock rclb jb dec stc fiadd push inc xor pcmpeqw loope cmp add lods pop repnz loope xchg mov ljmp call scas cltd add mov fsubrs mov xor inc pop or (bad) xchg adc bound pop xchg sbb mov icebp repnz inc repnz mov lods cmp scas push inc int3 test inc inc pop lods scas pusha ja nop inc xor in les mov pop roll sbb jne roll push stos fsubr ficomp les das inc enter adc mov jecxz or pop mov xlat jb stc ss adc lds sbb or and fs jmp pusha call call shl push add pop mov enter aad mov inc cltd gs inc scas std adc fistl jbe out adc lds in ljmp adc lods jns adc jbe sbb push mov sbb pop negb daa mov (bad) loope int icebp push jmp pop cltd xor fs call pusha movb movb lea jne not mov pushf lea jmp push std call push jns xor sub (bad) mov mov jmp les sti ja das and mov xlat adc fwait ret aaa (bad) outsl push xor jo and je xchg mov fldcw pop cmp in (bad) in into mov cmp push mov out xor mov cmp pop xchg push imul xchg enter out pop push pushf loopne pop mov insl lods in or dec cmp sahf in out insb std ret jmp sbb push adc imul aaa pop fs adc sti inc adc imull popa mov mov movsl repz mov daa movsb pop ljmpw jno fldl insl or test out mov ljmp test stc cmc popf popa adc push jle push cs and insl sbbb cmp (bad) not into inc xchg (bad) push and pop add mov push sarb jnp,pt jo (bad) mov mov jp js inc mov and dec push (bad) in shrl jmp lret int3 mov addl inc js dec add fimul sub mov dec jmp lcall test lret and jnp cmp fidivr jns lret imulb inc int3 (bad) mov inc xlat push dec xchg ret xor (bad) (bad) mov inc dec mov call sahf cld iret xchg xchg push mov mov mov push push add into fmuls mov mov jne pop pop (bad) aam adc push jno sahf data16 push imul fs int3 add loope mov xchg pop jmp lahf xlat ret jmp movsb lea pop imul stos test inc aad and in imul cmc cpuid or inc push pop and push test loop (bad) pop jbe loopne in mov or and lods stos xor jb inc mov (bad) dec mov cli bound xor cmp popa inc mov ret lea cmc ljmp rorb add dec inc xor enter cmp jns mov adc push (bad) lock xor push xchg iret pop add xsaveopt sub pop jle icebp push pop movsl (bad) loop cmp repnz or dec push daa sbb js dec dec je sub and mov jno cmpsl cmpsb mov push (bad) xor xchg pop add dec push repnz test in jmp fild cmpsl jl repz sub mov out mov lods fs cmp push xchg xchg xlat push insl inc ja pusha movb xchg pop shr fs xchg and cmp aas ret mov repnz jb dec (bad) jmp aaa (bad) sub cmpsl add in jle in or push adc (bad) dec mov test inc loop int xor test or ljmp add das mov dec sbb push pushf (bad) mov sub sub es xor push pop xchg xor bound sub dec inc mov cmp dec shll imul sbb shrl adc or xor lods imul je fxch repz popf and aam mov adc pop jl test je stos stos push dec xor mov pusha lods (bad) xor pop dec push jmp and in popa outsb fisttp mov inc loope popa in (bad) xor mov fmuls addb out pop stos sbb or sub loope sub mov bt pusha pusha cmc sub lea pusha jmp sbb and imul mov dec jle pop imul mov rcrb mov or int3 mov push rcrl movsl das mov outsl je fcoms daa iret adc out test cmp jb roll shrl test sbb out rcll or push dec dec adc popf cmpsl nop iret aaa pop mov mov push xchg cltd xchg add and pusha icebp push lock jno pop or or mov pop ljmp jb sub das aam fildll jle mov sbb (bad) pop xor mov and lret outsl pop pop fist inc jns testb cmp icebp cmpsl (bad) mov mov add or call cmc cmc cmc cmp pusha pusha jmp div sbb push inc loop sbb sar clc push adc pushf and popf mov or js (bad) rorl imul push push inc sahf push out clc dec (bad) out mov test adc cmc sub jmp fildl mov jne cli int3 or xor ljmp dec jp mov scas push xchg mov mov xorb lock (bad) ds lods sub push insl xor inc sub iret and mov dec push hlt pop movsb orl xchg pop xor xorl push in sti dec mov daa inc in pusha add sarb insb jmp gs sub sub mov in lahf sahf aaa call lea jae push pusha lea jmp in push rclb jae mov push inc xlat sbb insb pop insb sbb dec dec inc (bad) cmpsl outsl adc (bad) fnstenv setge sub arpl cli subb stos scas lods sbb (bad) cmc xchg pusha fs inc adc fidivl inc jae sbb pushf pop push cmp xlat mov popl xchg lret mov (bad) arpl mov test jnp mov xor or movsb xchg mov mov test scas jb or test fisttpll (bad) in fsub test adc pop into dec xchg and mov shr push push inc adc xchg cmp xor dec (bad) in xchg inc push or dec add adc fcomps test jmp mov jmp negl adc push and mov add (bad) xor aaa cmp je inc (bad) fistpl push jg push fwait addr16 lahf mov and push sbb sbb push divl and out movsb jbe push (bad) daa inc push push push mov mov cmp mov std pop mov jne fistp fistpl or fcmovbe xor mov cmp or push push stos stos xor jge je xor adcl stos inc mov adc inc mov inc enter fldenv cmpl xchg dec insb and js xor mov or aad outsb mov dec out cmp aaa ss scas or sbbb dec les inc push ss test arpl ja std pop andb je add fs call pusha adc mov lea jae pushf lea jne jmp testb mov xchg push inc aaa sub add lock cmp xchg cmc arpl cmp mov shlb jb idiv dec fadds in rorb sub mov pop dec or add mov dec or movsl jecxz mov lcall mov dec loopne in mov or sub imul add inc mov push inc subl mov lahf scas lret pop mov push sub mov add in jp dec (bad) and (bad) or push movsl push aaa in mov mov xchg jo fsubrp fdivrl ljmp clc inc mov nop push jno pop roll push mov ds je call add or aam in add movsb lock fistpl dec add push pushf shrd shld dec mov sar movzbw push bts sub mov movzbl pusha lea mov pusha push mov jmp push dec inc dec dec xor cs insb add xor add hlt cmp pushf jmp imul pop cmpsb lahf idiv mov scas (bad) (bad) setle adc push pop dec call stos cmpb xor int3 shrl sbb push or int3 or rorb daa lret test ds insl jnp sub (bad) jne shll lahf sub and pop roll sub fisttp int3 inc xchg sub ret loopne mov xor ja inc enter mov and sbbl pop pusha dec inc push push outsb in es cli mov stc add pop je jae aam imul mov mov mov scas cmp (bad) enter subl push cmp mov and repz add pop push scas fcomi jo fchs inc lret dec lcall ljmp scas push rcl sti xchg mov rcrb ja sub outsb (bad) and nop pushf je testl lret clc mov pop (bad) stos lods cli rol movsl fcomps (bad) jns test das testl xchg mov push cmp pop out fcompl xchg (bad) mov jae fwait sbb mov push das inc xchg es and iret scas outsl mul pop and jns arpl jae lcall pushf lahf sbb fcmovu add (bad) or dec mov inc test and pmaddwd test imul fidivl in pop ljmp out inc add movd nop cltd testb addr16 or push mov movsb lock mov pop dec jbe enter xchg idivl fs push dec push outsb sbb pushf pushf orb idiv jns jg in decb dec bt stc rol jmp mov or inc jbe cmp aam (bad) ss inc mov cmp pop nopl inc cmp movsb cli xchg ja dec js add or jg pusha pop sbb test sub mov fcomps sar shufps mov pop addl add lret mov push stos push movsl jle and lock push imull clc (bad) cmp jns stos jmp repz push adc mov imul add lea aaa xchg add pop test orl int out lahf adc xchg aaa cmp adc push xchg data16 sbb int push loope rolb (bad) xor push popa inc mov mov inc outsb rorl cmp gs pop adc int3 and test inc nop cmp pop jl sbb inc xchg jg addr16 cmp test in push stos divl pop rclb addr16 (bad) mov xchg dec add push fbstp sbb xchg mov loopne mov add mov fdivs das mov mov cmp jb mov mov jb into enter push sub loopne in outsl sbb (bad) jmp xor or lret inc lock mov jge sub ds in out push int stos sbb push pushf movb push lea jae pushf clc push cmp xor pusha jmp jmp pushl popl lahf mov call dec cltd mov or das lock test mov cmpsb hlt ret sti ljmp cltd jecxz imul in push sub sahf repz scas xchg add mov and sbbb cmc (bad) aad and fsubs xor in aad fnstcw xchg cli sub push dec movsl int3 stc (bad) cs add sbb mov pop cmc xchg adc int3 jno adc xlat or jb mov aas popa and movsl in jno lds clc xor mov pop mov popa fisubrl in jo pop popa inc call or scas fisubl loope insl dec repz aad out outsb mov pusha mov sub lds idivl testl inc (bad) sub xchg fwait jp scas mov xor movsl out scas sahf mov into ss jnp push mov rorl xchg xor and mulb xchg mov (bad) movl jecxz sub (bad) fisubrl lcall pushf or inc daa push dec add hlt fincstp enter and mov loope jno dec cs popa test adc test dec mov mov sub sub mov add lods in jne pop into mov insl push mov movsl out xor pop movsb mov sbb mov fwait jge addr16 test fsubrp cltd sarb lcall mov add scas sarl std test and popf mov push pop gs idiv (bad) (bad) fdivrs insl push es xorb push adc icebp out (bad) or arpl jmp out stos bound loope jg je fnstcw idivl stos sbb cltd xor fwait cmp sbb ds jmp or sbb jno pop loopne out pop mov xor mov leave add sbb mov jbe fs inc mov js mov sbb movsb loop push push pop pushf roll cmp out and mov fnsetpm(287 fs push repz sub and cmc cld rorl nop xor addr16 unpckhps xchg int3 pop add mov push mov aaa lcall (bad) dec xchg cmp xor aad cltd (bad) cmc aaa jp or les jge inc (bad) test pusha jne add mov mov cmp stos (bad) dec push psrld leave std inc xorb mov addr16 fcmovnu loop jne mov out jg jne xchg aas sahf push sar pop fs pop shr (bad) sbbl pop aam mov out adc jbe pop mov repnz jle inc dec out out in lock xchg rcr pop lods add mov adc dec test sub (bad) hlt xchg sbb clc out aam in mov adc cmpsl es cmp insb addb ret mov andl xor dec rcll gs shrb lock or popa add push mov or fisttp mov jne gs sbb or ret or sti xor test mov push clc jle pop xor roll sub sti sub jnp rcll mov push (bad) out cltd popf insb clc inc insb loopne and sub lods adc cld pop pop data16 aaa movsl or imul aaa xchg out jne vmovntps push and test sbb add add add add add add add inc push add add add push add add add add add rolb add pop push add (bad) or add push add add add and scas loopne dec pop jbe jg inc lds sub push shlb js dec xchg push scas test loop sbb or inc movsl or dec mov cs scas cmp mov sti jbe lods mov repnz stos xchg inc mov jle in push jno inc out xchg or mov inc inc es lahf mov or (bad) lock push ja dec ds pop mov or pop push (bad) outsb nop sbb fs ret icebp push mov lcall ret add and xchg insl or mov sbb ds mov add dec cmp les sbb imul pop adc subb inc inc test out xor repnz push ret inc pop cli adc or out push test sbb das stos div adc out stos push pop push mov pusha lea jmp movl pushf jmp jmp inc clc bts sub call push jp ja or lret or jmp push outsb iret push dec jbe inc insb inc pop add push lea xorl sub fnsave fstps bswap hlt js mov push push jle sar add mov test (bad) cld in retw xchg outsb fisttpl xlat mov lods cmpsl fucom mov rolb addb mov pop roll ds shl je jne push fidiv lahf pop fwait insb cmp inc pop xchg mov push aam adc cmpl fbld sub cld cli pop mov sbb arpl mov gs fs jae cmc push push stc cmp call xor mov jns inc mov sbb lods xchg (bad) imul imul out cmp push mov cmp sub sti bound jmp (bad) push sub jnp or sub jp imul dec scas xor xchg test icebp push sub fldcw cmp (bad) xor cmpl movsb mov adc fsubrs xlat pop jmp jecxz adc xor sub add mov test mov xor lock add enter daa test pop cli mov add and cmc or outsb inc (bad) mov or mov (bad) loopne xchg push test or and add in mov dec push cmpb push dec mov push insb cmpsb out sbb fidivl (bad) cmp bound (bad) repz pusha cmpsl jg jl das jge add sbb sbb pusha inc jle push push mov lahf mov lret or and jp inc fdivl sub push andl dec mov jnp xchg add xor lahf sub push jecxz (bad) sahf in into aad xorl fcoms push cmc call popl pop (bad) mov fistl icebp cmp test or popf sbb mov xor in push mov mov jb jne push jb shrl fdivrl out inc sbb jecxz (bad) fisttpl (bad) ja cmp pop pop iret jnp inc fistl or push jg aas xchg and lret or stos jno pop cmp addb adc jne lds orl in cmp pop and pop das ret or subb and pop mov add pop mov cld mov inc jmp iret cmc js ret nop cmc fstl (bad) insb mov mov jns cli leave or adc dec rcrb rcl mov add push push jo cmpsb add mov mov (bad) jmp fmul pop test inc jge lods or shll sub lods cltd and xchg ret xchg and in loope lret lock cld mov push xchg cmc push outsl popa jge in jp push mov jo inc (bad) lock and adc pop or jae imul mov enter ds and test ja xor jbe adc pop insl mov pop jae push xlat scas movsb and push imul lods sbb out add add push jnp mov mov movl and jae push pusha push lea jmp add add inc add inc add and cmp add add add dec push add add dec clc pushf mov lea jbe and sub sar mov bt stc mov adc inc add dec shr btr pushf ror cmc mov btr shl add call adc pushf jo or dec ret ljmp cmp int3 or inc rorb lea adc push push or and fidivl (bad) cmp fwait cmc mov cli jecxz lds mov cmp sub pop shrl or adc (bad) mov js jmp inc (bad) lock mov jae and jp pop cmpsl loope add popa mov or in imul push xchg stos mov add movsl fnop mov loop mov sbb xchg push mov xor xor push leave outsb adc cmp cmp or adc out jbe inc mov mov dec xchg aaa mov je or enter rclb enter fisttp adc push cmp and test cmp (bad) inc cmp mov stc mov push ud2 dec mov arpl and aad sbb (bad) scas scas mov lahf les pop inc in sub fptan pop lcall cmp out or add movsl jl add add jb jo ffreep pop mov inc push inc fsubp sub fsub in lcall push adc xor cmc xor sub pop arpl mov clts in push and lea je movzbw not mov mov push movsbw mov movsbw setbe movzbw lea push pushl call cmp pusha lea jae pusha movl push pushf lea jmp add add rolb add and mov ljmp xor xor xor xor xor xor xor xor xor test mov xor xor xor xor xor xor xor lea loop jmp ss xchg ss ss mov ss ss ss xlat adc push aaa pop aaa addr16 (bad) aaa xchg aaa les into aaa fidivl in icebp aaa std aaa add or cmp cmp jnp mov inc cmp push cmp jb cmpl int3 cmp cmp cmp cmp cmp push cmp cmp cmp cmp stos ds fidivrl out icebp ds add push aas add add or add push xor jg sub jge nop xor xor xor xor xor xor xor xor xor xor xor (bad) xor xor pop xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub imul mov sahf xor mov mov xor in out xor dec ss lret ss or getsec adc xor aaa mov cmp cmpl and push cmp aad fidivr in cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and push cmp dec aas push aas arpl mov fdivrl add add les add dec xor xorl ljmp xor (bad) xor xor xor inc xor jae and fs jo (bad) xor adc sbb sbb jg xchg cmp cmp cmp cmp cmp xchg cmpsb cmp cmp cmp cmp cmp cmp cmp inc cmp jnp cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and inc cmp pushf add or aas test into aas fnstcw loope add add add add xchg xor add xor inc xor insl xor stos xor xor xor xor xor xor xor xor xor xor xor xor xor ss popa ss mov xchg ss mov ss aaa ret aaa cmp inc cmp cmp cmp jns scas cmp out stc cmp cmp inc cmp push cmp push jne jnp xchg mov lcall cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp addr16 mov add push add faddl add adc xor xor xor xor dec xor test mov test xor xor jnp or inc xor mov ss ss nop ss ss ss aaa xchg cmp cmp cmp cmp pop cmp cmp cmp pop cmp movsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub cmp cmpl cmp hlt cmp sub das ds jae,pt jle cmpl ds ds ljmp aas insl aas jb nop aas mov mov aas in aas add add add xor xor insl xor xor xor xor xor xor xor sbb dec xor pop xor jnp mov mov xor js movsl xor (bad) xor or cmp push ss ss ss aaa jecxz or push cmp cmp cmp mov in cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp mov xor cmp aas ds ds ds mov sarb cltd aas add add add add push xor xor xor jbe movsb xor xor xor xor aad jecxz add or xor push cmp mov lret cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp xchg cmp cmp cmp sarb pusha aas mov mov addb pop add add xor outsb xor xor ss aaa and cs cmp inc aaa push aaa fs jns nop aaa mov into aaa (bad) divl add fs cmp cmp cmp cmp cmp cmp daa ds ds mov add nop add jo add sbb push popf xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub fdivs jecxz out aaa lods cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp repnz popf aas mov les hlt aas add add sbb and xor inc xor xor inc xor int3 xor pop xor sahf xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jg (bad) xor scas fbstp and pop aaa jne mov xchg aaa loope imul stc cmp cmp cmp jl mov popf cmp cmp aaa cmp cmp cmp cmp cmp cmp cmp cmp cmp jo mov sarl cmp idivl sub enter add add cmp lcall xor les pop xor xor xor xor mov mov cmp cmp dec cmp mov into add add add xor add mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor aaa inc cmp add add inc xor dec xor pop xor xor je js jl nop xor les enter (bad) xor xor inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp jo je js jl cmpb cmp cmp cmp mov mov cmp cmp cmp cmp inc cmp push cmp pop cmp push cmp jl cmpb cmp add add add pop xor fs xor add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov ss mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa insb cmp test pushf cmp mov mov cmp in in cmp add or adc sbb and sub xor cmp inc ds ds ds ds je,pt jl test mov xchg ds movsb lods ds mov ds fdivrl in in ds ds ds or adc sbb and sub xor cmp inc aas dec aas push aas pop aas fs insb aas je jl test mov xchg aas pushf aas movsb aas lods aas mov mov aas aam fdivrl in in aas hlt aas cld aas add add mov add add or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor xor xor xor xor ds ds mov ds sarb fdivrs loopne call add or adc sbb and sub xor cmp inc aas dec aas push aas pop aas pusha aas push aas cmpb aas nop aas cwtl aas mov aas mov aas sarb fdivrs loopne call aas add add jl add add or adc sbb and sub xor cmp inc xor push xor pusha xor jo js xorb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor js xorb xor sahf aas mov add adc add add inc cmp cmp cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp or adc sbb add add add sbb add call cmp cmp cmp cmp cmp or cld aas add add push add add xor and cmp inc xor push xor xor xor xor xor push xor xor xor xor xor push xor lock xor xor insb xor add add add push xor xor sbb sub inc ss ss ss ss je mov mov nop ss ss ss mov lods ss les enter (bad) ss add add add (bad) xor mov nop add or add push cmp cmp mov add push xor xor xor xor xor jnp imul aaa sub mov cmp cmp mov cmp cmp cmp cmp cmp cmp data16 sarb sub mov mov add add add and inc xor xor xor xor mov inc xor xor push aaa add aas cmp lret cmp aad cld cmp cmp cmp insl ds aas sarl (bad) aas add add add dec add add push xor xor jge int3 ss or clc aaa push cmp mov mov cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp (bad) aas loopne add add dec add add xor test or xor xor xor xor xor push aaa lret aaa (bad) cmp outsl cmp xor dec cmp cmp cmp cmp add ds les ljmp add add xchg xor xor xor xor aaa (bad) aaa dec cmp cmp cmp cmp cmp js in cmp cmp cmp cmp pusha and addr16 loop add add add inc add add xor xor xor xor xor push cmp and dec cmp cmp cmp mov fdivrs das cmp cmp cmp cmp pushf add add add inc add add xchg xor divl mov stc xor xor xor xor xor xor adc nop ss aaa cmp cmp cmp cmp push aas fdivrs in aas add add add adc add jno jno sahf xor mov (bad) mov push call ror mov sub stc not mov adc mov pusha mov clc cmp bt stc add stc cmc cmp not pushf jmp inc dec inc test or jb mov inc arpl sti mov adc dec jb dec jb ds (bad) dec xchg pop sub mov (bad) int3 mov adc stos xor outsb shrl popf (bad) or out cmp xchg or jp fucomi add rcl pop lret pop xchg mov push xchg into sar cmp pop jl add insl (bad) int3 and fs sub out imul ljmp add or add incb cmp je dec jle or (bad) cli in mov out imul dec xchg pop into mov (bad) int3 enter popf lahf in mov test (bad) (bad) sub mov xchg int lret out movsl nop sbb bound jb pop lods out adc (bad) popa in push aam sub mov ret lret jns fdivrl jno daa out mov mov or mov pop xor sbb cmp stos mov (bad) mov xchg push jno popf out lahf leave mov push hlt pop mov dec test mov lock out repnz add cmpsb mov rorl orl xor push push stos mov jle,pt push cs roll push loop sbb movb push push je movsl out (bad) movsb es lock call imul and popa push push xchg dec sidtl mov xchg xor (bad) sbb mov xor inc into jnp addr16 shrb in jae mov dec fs test cmpsl divb pushf cmc sbb mov pusha and bt pushf cmc add lea jmp add pusha mov push pushf lea jmp gs dec fcoms add pop movb inc pusha pop inc mov (bad) dec data16 loop dec call dec mov mov jg xchg shrb pop mov xor jl push pushf pop jle movsb pop sbb stos sub ss sbb push insl mov push xacquire hlt xchg hlt fildl xchg loop test rcrl and inc ljmp bound xchg xchg xchg jbe scas adc xor in sub add xor push fsubrl jp scas xchg icebp cmp sub int3 sarl pop sarb stc clc or andb pop push dec jle cmp or mov mov mov xchg jmp jnp hlt call mov xchg out (bad) lock mov or jg ja aas xchg push pop and xchg xor (bad) sub insb lcall rcll fs nop test mov jb add loope ficoml mov jge fildll sub in xor loopne inc add push xchg xor pop cmc scas aad mov aaa je psubb xchg loopne push (bad) out repz loope test imul add jnp xor out nop daa test std ficomp cmpsb lret jnp popf loop imul or jne adc pusha es mov xchg lahf call cli (bad) adc cmc insb cli into xor js pop and aad or cmp je jne loopne les fdivr dec rorl stos mov pop aad mov mov ja movsl mov and jmp sub adc (bad) cs jge add push popa dec mov into (bad) lods cltd xchg loopne push fimull mov clc ds or sahf test dec mov in or int3 add mov add or inc pushf lods loop gs fcmovb sbb rorb ss jmp cltd sbb addr16 pop shlb cmpsb push (bad) lea add mov popa popf mov outsb notl sahf adc cmp push xchg call ja pop jl push pushf inc adc jnp sbb dec shl inc lods adc add ss jbe push sahf and push cmpb in addr16 adc inc rol fsubl ret xchg xor (bad) pop in sti jmp mov pop mov dec pop pop xchg psubsw rol hlt outsl mov sbb pop cltd test aam cmp repnz dec and movsl out mov iret (bad) iret rcl ljmp dec xchg inc mov inc mov push sti jb loopne in iret jmp outsl mov mov or into inc jecxz ja xlat pop lret loope mov ret jbe pop and pop int3 cwtl int pop mov add push daa sub scas out scas mov out jp jnp pusha test jbe fsubs and pop lret inc adc xor xor int lcall adcb outsb (bad) popf or sbb xor into pop xchg xchg sbbl sub bswap xchg mov jne push in xorl sbb mov push aaa jg xor mov cmp or dec out cmp cmpl data16 lock lock sub add fmuls in mov jno or jne sarl into jmp xchg fisubr inc pop orl dec pop ret daa xchg jae pop xchg add mov rolb (bad) lret dec mov mov stc call pushf movb movl pushf push mov lea jmp adc cltd or mov sub lcall gs cmpb cwtl xor cmp mov xchg cmc xor aaa mov adc cmp xchg jnp jg imul rorb lods dec cmp dec lcall mov iret scas outsl mov js jge cli or pop out loopne clc in mov inc in xchg mov push fwait inc or es std sbb out cld xchg addr16 dec ret in inc lods sbb pop inc mov adc sub ret jmp or jno inc push cwtl pop imul les and loop scas outsb stc add add sub mov test sbb xchg pushf jmp movzbw pop not pushf mov mov xchg xchg mov not movl pop mov pusha movb movb pushf pushl ret adc push mov (bad) jp arpl jae push pushf xor fs js cld bound lret daa popl bound pop (bad) lock out cmp dec push pop or lods aaa into lock xlat sbb sub and ret rolb test or test mov mov dec cmp clc add xlat xorl add mov xor jbe cmp mov and mov xor pop loopne ds movsl xlat sub ret mov in les pushf jmp call jmp jmp jecxz lods inc cwtl or fdiv fcoml or mov stos test or insl dec or sti mov out daa xor ret inc cmp jmp or iret sub inc dec ja sub mov dec mov cs add sbb dec add or cmc (bad) cld (bad) mov mov sbb or js sbb sub and iret mov sub push inc (bad) jne mov das xor std fs jle test add fsubr push pop mov adc inc xlat jns outsl movl popa cmc xchg pop xor outsb lods in out jnp int3 adc pop mov mov add jns popf adc movsb leave sub mull arpl cltd cmpsb and push xchg adc repz inc mov lea das nop and adc push aam cmp into popa enter repnz fdivrl jnp push call imul in sbb fwait push mov push sbb not movzbl mov call pushf test test pushf pushf pushf lea je bt jmp push pushf sbbl aam push jg dec jae push pop cmp enter mov push jge add mov cwtl mov insl and adc aam lock add cld aas movsl sub fbld cmp in push and cwtl leave sbb or add rcll sbb loopne rcl sbb push in dec rcr rol dec push cli aad xchg push and lcall and jge ljmp aaa jne inc dec dec push push mov mov cwtl cvttps2pi mov adc xchg out add sarl add dec pop push xchg scas cmp jo xor jae (bad) or mov xor cmpsl les push xor lds lret xchg mov jecxz cmp ja xor divb outsl scas std pop addb pop lock add cwtl pop mov inc mov mov insb jl sub push das test cmpsb roll fadd adcl adc dec insl cmpsb jbe dec push mov nop inc not mov mov mov lea pusha push pushf pushf lea call pushf pusha adc pusha pushf pushf lea jae pusha push mov call push lea jae call lea jnp xchg pusha pushf movl movl pusha mov push push mov pushf pushl ret mov push mov pusha lea jmp push lea ja lahf xadd aad mov jle daa shrd lea aaa das clc sub ror lea aas lea shl bswap lea and bsr mov sub lea mov mov bswap push mov pushf popl movsbw push not std mov bswap ja not pusha lea mov pushf call call setp jl not pusha mov lahf mov mov pusha pushf mov divl call xor mov neg add mov cmp test add call pushf popl call call push jmp and pushf cmc test cmp jmp stc shr pushf jmp pushf mov mov call pusha jmp jno and clc mov mov setbe dec mov test push pushf sub pushl test cmc shr pusha call cmp test not pushf not stc clc sub bt clc bt push and push mov mov push pushf popl push pushl popl push lea jmp mov pusha push push pushf lea jmp bt xor movl jmp mov mov movb pushf jmp sub xadd clc mov pushf and not shl mov bsf bts mov shr pushl popf pusha mov bswap lahf mov pop push mov pop lea mov lahf pushl lahf mov lea mov seta xchg movzbw mov jmp test add push mov push mov pushl push pushf lea jmp pushl popl mov lea jmp pushf lea pusha mov pushl pushf pushf lea jmp push pushf mov call call lahf shr mov lea not ror mov stc add pushf mov movw lea jmp shrd mov push add pusha push lea jmp mov movb cmp pusha jmp push push mov pushf mov jmp stc pushf shr call pushf pusha mov xor rcl stc mov jmp pushl popl movb push lea jmp xor movzbl bt call jmp mov call mov pushf movw mov push mov jmp cld call pusha pushf pushl mov pushf pushf pushl lea jmp aad push ror mov stc clc add cmp sub pusha test movl add cmp neg stc clc pushf call call push movzbl cwtl lahf mov movb pushf mov push mov push movb lea jmp mov mov pushf mov pusha mov pushf pushf jmp push pushf lea jmp test cmp call mov jmp cmc sub test cmc add call aad shl daa stc mov sub stc cmp rcr mov cmc cmp sub jnp shr pushf pusha pushf movb mov jmp pushf jmp pushf mov movb pushl pushf lea jmp pushf jmp shr add btc mov cmc push sub movb call movl jmp stc movb add jmp call pusha call rcr bt lea call mov movb call lea jne bsr adc rcl rcr xorb not pushf lea lea mov mov lea jmp add jmp ror add pusha mov mov call sub pusha lea jne clc xor call call call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call jmp jmp lea jo push pushf mov jmp pushl pushf mov push pushf push movb lea jmp pop movsbw mov jmp stc bsr mov mov pushf pushl call jmp call mov pushf pushf push lea jmp lea cmc bt sub pushf stc clc mov add lea jns pushf clc neg stc ror call pushf neg ror add add call ror cmc pushf cmp sub cmc call pusha movl mov movb pushf mov lea jmp call setno mov jmp mov mov jmp daa aaa add mov sub sets call mov movb push lea jmp pusha pusha mov jmp call call pushf mov call call rcl pushf pusha mov btc adc not data16 repnz cmp add jmp call mov mov pushf movb lea jmp bts ror cmp and mov call pushf pushf add bt call pushf popl jmp mov movzbw mov jmp pushf popl lea jno push movb pushf pushl popl pushf push push lea jmp jmp bsf bswap lea movzbl dec clc add shl bts sar add lea test not mov or neg ror and add pushf push add dec mov call pushf popl pushf pushl popl pushl push movb movl lea jmp call pushl movb mov movl pusha mov pushf mov push mov push pushl ret mov movw pushf lea jmp pushf lea jmp clc add push push mov pushl lea jmp pusha mov movb sub mov cmc shr jmp call rol mov call mov pushl pushl jmp jmp jmp call pushf popl lea jo pusha pushl popl pushf push pushf lea jmp movb push pushf divl pushf mov mov mov call bt sub mov mov mov mov mov push pushf lea jmp pusha call mov xchg push bswap mov pusha not pusha mov jmp xor bsr aaa shrd mov stc cmp sub call mov push call pushf movb mov pushl mov pusha pushf lea jmp mov pushf push movb pushl ret pushf push call mov mov pusha mov push mov mov pushf mov call not inc bt stc rol not not mov pusha inc and ror add call mov jmp mov mov movb mov mov mov lea jmp jmp cmc stc sub stc stc xor call pusha mov jmp add call call mov pusha pushl push pushf lea jmp mov jmp rol movzbl push add pusha pushl inc call mov pushf jmp push mov pushf pushl jmp movw pushl popl movw push lea jmp pusha mov pushl jmp push push inc jmp jmp pushf mov jmp call push pushl movb mov jmp push push push pusha mov movb pusha lea jmp jmp push pushl mov movb push jmp pushl popl movb mov mov lea jmp lea mov and test mov call pushf mov mov movb pushl push mov lea jmp jmp pushf pushl pusha mov jmp bt add mov mov mov lea jmp jmp push mov pushf jmp pushl popl push push lea jmp pushf mov pushl mov jmp bt clc sub pusha mov push call pop dec mov fcoms (bad) mov dec mov cli push mov in mov cmpsb inc mov push pop mov jmp mov push pop mov pop dec mov outsl inc mov pop inc mov fcoms pushl dec mov addb push inc mov or mov addr16 mov out dec mov jno mov adc mov xchg pop mov xchg pop mov out dec mov in mov adc mov push inc mov pop pop mov in mov cmpsb inc mov lea jmp mov adc jmp pop mov hlt dec mov sahf pop mov cli push mov jmp mov dec push mov adc pop mov or pop mov xor lcall mov jmp mov cwtl pop mov jno mov jmp mov push pop mov dec push mov jecxz mov in mov addb test mov hlt dec mov movsb pop mov mov ljmp mov in mov push pop mov jecxz mov adc pop mov mov pop mov jecxz mov adc mov sbb mov cmpsb inc mov mov dec mov jmp mov fcoms jmp pop mov cli push mov pop dec mov mov call mov mov inc mov mov push mov cmpsb inc mov adc mov inc dec mov jle mov xor lcall mov mov incl mov push pop mov (bad) pop mov out dec mov outsl inc mov push pop mov jecxz mov addr16 mov jle mov cwtl pop mov inc dec mov mov jmp pop mov test mov in mov pop inc mov sahf pop mov (bad) pop mov mov ljmp mov cmpsb inc mov cwtl pop mov aam mov cli push mov adc mov push inc mov aam mov push inc mov (bad) pop mov jle mov push pop mov lea test mov (bad) pop mov jmp inc mov aam mov lea cwtl pop mov pop inc mov mov push mov adc mov aam mov cwtl pop mov xor lcall pop mov addb inc dec mov jno mov outsl inc mov pop pop mov push pop mov cli push mov cmpsb inc mov or dec mov pop pop mov addr16 mov cli push mov in mov mov mov adc (bad) out dec mov inc dec mov jmp pop mov adc (bad) jmp mov mov mov xor call mov sahf pop mov push inc mov hlt dec mov outsl inc mov aam mov or dec mov pop pop mov mov dec mov jmp inc mov or mov or pop mov out dec mov hlt dec mov fcoms incl incl call mov pop inc mov jmp mov pop pop mov dec push mov cli push mov jmp mov cwtl pop mov xor (bad) jmp mov jno mov sbb mov cmpsb inc mov hlt dec mov mov lcall mov outsl inc mov inc dec mov adc decl dec mov jecxz mov movsb pop mov jecxz mov mov (bad) mov pop mov mov ds or dec mov lea jecxz mov fcoms incl aas mov fcoms (bad) mov ds cmpsb inc mov pop inc mov addr16 mov sahf pop mov adc push mov mov decl inc mov adc inc mov addr16 mov add call inc mov movsb pop mov outsl inc mov jmp mov jle mov cwtl pop mov (bad) pop mov in mov pop inc mov pop pop mov fcoms call pop mov test mov adc pop mov mov inc mov add incl add lret push add cmp add pushf pushf pushl mov pushl push lea jmp push pusha movb mov pusha pushl mov movw jmp mov jmp pushf test pusha movw neg call cmc (bad) hlt cmp bsr mov movsbw xor adc mov jmp not clc not cmp jmp inc push test cmp pushf neg pushf clc ror cmp mov clc sub push pushl clc clc mov push sub jmp mov call pushf call rep btc mov cmc add mov movb pushl popf pushf mov pushf pushf lea jmp pushf mov jmp pusha mov call stc clc add pushf mov mov push movw movb lea jmp pusha movzbl mov movsbl movsbw pushf pushf xchg lea call pushf popl pushf mov pushl popl pusha pushf pushf lea jmp mov mov call adc mov pushf stc mov call pushf pushf mov call cmp mov cmp add stc clc stc movl mov movb sub call call pushf call mov pushl push movl lea jmp mov mov lea jmp cld pushf rep shl neg pop mov clc rol mov std pushl popf mov movb mov mov lea jmp mov pushf popl call pushl popl mov pushl lea jmp mov pusha jmp jmp push mov call jmp xor pusha mov pusha push neg pushl dec cmp cmc cmp cmp bswap cmp stc pushf stc xor cmp clc sub clc call add jmp stc movzbl bswap rcr shl bsf sub setg movsbw mov inc neg shld sete clc neg mov cmc push ror bsr sub rol rcl mov stc pushf pusha cmc add pushf call pushf call pusha pusha add call data16 repnz mov pusha call push call mov call bswap movsbw xchg lea xchg lea push pop pusha xchg mov repz popl setnp bswap pushl popl not push movl push mov lea dec mov movsbw pushf inc ror call pushl lea cpuid stc pushf test sub stc stc mov stc cmpl pushf push mov mov jmp push lea je push sub cmp cmp xchg stc mov cmp clc jmp or call bts mov sub test sar mov pushf call mov push movw pusha lea jmp mov xchg movsbw movzbw call jmp push mov pushf pusha mov push push pushf lea jb push jmp push mov mov lea jmp call mov mov mov movb pushl ret lea cld push pusha not mov pushf cld jmp mov call mov jmp sub pushf mov mov pushf pushf pusha push lea jmp cmc movb rol push call jmp mov pushf pushf mov pushf pushf mov lea jmp pushl popl pushf pushf pushf movb lea jmp mov jmp jmp push pusha jmp pushf mov mov mov pusha mov call mov pusha movb mov pushf pushf mov call std call lea movw xchg not pusha mov pushf jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp jmp xchg cld pusha mov mov call call lea pushf pushf movl jmp not push pusha pushf mov pusha mov jmp push mov call call pushf pushf pushf popl jmp bt cmp mov bt add cmc bt shld pushf jmp push mov pushf pushl mov mov push pushl mov pushf call push push movb pushf mov lea ja pushf mov pushf push jmp mov call mov push pushl mov pusha mov push jmp cmp add push mov lea jmp movzbw sbb lea rcl shl sub bt lahf lea cmc sbb and neg data16 (bad) jno or enter (bad) decl and movb pushf jmp jmp movb mov call pushf movb mov movb pushl lea jmp mov pushf pushf lea jb push jmp pusha pushl popl pushl movb pushf lea jmp call shr aam mov xor stc rcr rcr mov jmp pusha mov call shld mov jmp jmp add add movw pusha pushl popl push movw lea jmp movb call mov push mov push movb lea jmp jmp jmp sub push mov mov mov push movb movb lea jmp pushf call dec mov stc pushf sub stc pushf clc bt add push lea jp pushf pushf popl push movb pusha pushl popl movl push lea jmp call shrd aaa mov bswap not bt mov jmp pusha mov call bt add pushf jmp mov movb push pushl pusha lea jmp pushf mov push call movsbw movsbw mov pusha pusha jmp (bad) testb aad push pushf sub dec neg sub adc add jmp call pusha pushf mov push pushf call mov push mov lea jmp mov push push mov movb lea jmp call pusha movb pushf mov jmp movw push mov push pushf push pushf popl pushf jmp stc call push mov pushf mov call call push push movb movb mov pushl mov push jmp mov call mov pushl pushf pushf lea jmp movsbw xor mov jmp mov mov movw pushf popl jmp test movb stc add jmp inc clc shr mov sbb call mov movb lea jmp inc push push mov pushf lea jmp stc stc stc shl movl mov pusha mov mov jmp call pushf pushl popl mov lea jmp shr mov movsbw dec bt mov rcr bt mov cmc test pusha stc add pushf shrd call xchg mov cmc shld adc mov cmc clc pusha add pushf call test sub jnp add push jmp bswap pusha jmp jmp movb jmp sub call sbb shl clc mov jmp mov pushf push movw lea jmp inc setb sub call pushl pushf pushl popl movl mov mov lea jmp call movb mov pusha pushl mov pushf call add pusha pushf mov movl call sub push call jmp ror xor rcl mov shrd pusha pushf xor push bswap inc not rcr clc ror movsbw dec movsbw bt sub data16 icebp xor movsbl pushf not inc rol add cmc lea movzbl push cmp mov jmp not aam mov bt jmp mov pushf popl jmp mov pusha pushf movl lea jmp jmp mov push mov push mov pushf call jmp pushf pushf popl pushf jmp mov mov lea jmp push pusha pushf mov movb mov call btc lahf jp xor mov shr shld dec clc mov pusha add jmp add btc sbb not sub neg call pushf mov jmp mov push pushf mov pushf mov movl lea jmp pushf pushl xchg pusha pushf jmp inc rdtsc stc test test sub pusha mov pusha mov mov mov lea jmp test btr sub mov add btc bts jmp stc sub pushf movb mov pushf lea jmp mov pushf pushf popl movb pushf pushf call pusha pushf pushf mov push mov movl lea jmp shr mov sar dec adc rcl mov push cmp mov pushf sub pushf bt shl call dec mov jmp mov mov lea jmp pushl lea jne xor mov cmc test call mov call mov call mov movb push push pushf lea jmp pushl popl push pushf pushl lea jmp mov push mov jmp call bt pusha sub cmp cmp pushf cmc and jmp jmp jmp movw jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp pushf pushf popl push movb push pushf pushl popl pushl push mov lea jmp pushl ror clc clc cmc bt sub call sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp lea jbe mov call lea jge push mov mov jmp jmp cwtl cmp clc clc cmp sub pushf mov pushf pushf pushl lea jmp pushl mov pushf lea jmp pusha mov jmp jle cmc rol mov stc dec bsf bswap mov jmp movb jmp inc pushf clc bt add jmp xor neg movzbl cmc call bt rol lea dec cmp add pusha lea shrd bt sub rcl mov shl bt mov bsf bswap add movzbl mov sub shrd cmp rcr xor rcl pusha rol lea bswap sar not movzbl xor shrd setb (bad) cmc shl xor btr rcr shr rcr movzbl mov pushf lea adc cmp neg mov test pushf bt stc neg jmp shrd not mov stc bt stc add pushf mov jmp call pushf mov jmp mov push pop mov mov pushf mov call mov pushl mov mov pushf mov pushf lea jmp popl push pushf push push lea jmp mov push call pusha push sub jmp call mov pushf pushl pushf pushf popl jmp call jmp xadd aaa bswap mov mov shl call cmc pushf add call mov mov pushf popl lea js pushf pushf mov pushl popl pusha push pushf push lea jmp mov mov push pusha pushf lea jmp mov push mov pushf jmp call movb pushf jmp movw jmp pushf mov mov mov pusha pushl lea jmp clc pushf and pusha movw mov mov lea je pushf pushf jmp mov call mov push pushf lea jmp movl pushf popl push call jmp call pushl popl pushf lea jmp pushf pusha mov pusha pushf mov movb push movl lea jmp not mov pop movzbw mov mov movsbw mov pusha jmp sar xor mov clc jmp xadd sar shld mov pushf (bad) icebp mov clc sub cmp test pusha shl pusha mov call call call mov pushf movw push pushf lea jmp mov mov push mov jmp pushf push mov mov lea jmp cmc cmc pushl popf pushf mov pushf lea jmp mov pushl mov jmp mov pushl popl mov mov mov movb lea jmp notl or shl mov jmp pushf mov pushf mov push pushf pushl ret mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp rep add data16 (bad) mov shl shr test mov test clc cmc test pushl popf movb movb lea jmp clc pushl popl pusha jmp push mov jmp pushl mov pushf mov jmp btc add adc and add push mov jmp pop add add inc inc add ret dec add add add inc add add add cmp add lds add pop push add pop push add pop push add pop push add pop push 