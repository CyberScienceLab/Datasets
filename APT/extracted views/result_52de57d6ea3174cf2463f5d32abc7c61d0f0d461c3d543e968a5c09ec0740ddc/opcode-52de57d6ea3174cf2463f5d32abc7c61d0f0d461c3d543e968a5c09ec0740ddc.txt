popf jns lahf push adc sub add aam adc mov dec xchg mov jno and or popf xor mov stos jo nop dec daa cmp jmp inc clc int popa addl mov (bad) outsb testw push and inc bound pushf imul roll cli xchg dec sarb (bad) mov sbb nop pusha jo imul push ljmp or arpl es inc add or inc fs fisubr sbb xchg sub mov lods sub sahf push adc xlat add jb (bad) stos pop test sbb push mov jmp mov hlt pop clc add mull mov or xchg or jns or jge xor mov push pushl lea jne not pusha movb not pushfw popw dec test mov push pushf bt not bt jmp lea jne lahf xor cmp aaa mov cmc stc inc rcr add mov dec mov mov call mov jle and (bad) (bad) pop mov test fs gs dec lock dec mov sbb mov frstor lds test sub popa jb pop stc jbe shr out xor push ret test jbe dec jb xchg adc popa inc adc jmp mov mov in movsb clc xchg jno or das mov xor mov add call imul nop dec xor (bad) stos xor add sbb cmc jmp movsl in pop add inc dec xchg push nop (bad) jns push outsl adc dec adc or jno pusha lods jecxz je cmp pusha push mov lea jl ja pushf pop jmp add inc gs jns je insl push popa insb gs gs outsb je imul jnp add out jnp mov inc fdivrs and sbb sbb pop xchg cmpsl js or mov and push pop pusha scas nop push imul scas lock pop test test mov scas shlb mov pop imul test jbe add (bad) xor jg outsb nop movsl cltd fadd xlat jno pusha imul imul add movl and cmc call pushl movl push mov pushf mov pushf mov pushl ret jmp (bad) loop lret cmp mov fnstcw test jmp repz sbb and sub or stc or (bad) jmp fwait mov cmp cmp call pop xlat je fsubp data16 repz daa mov sbb jl mov ds sbb inc lods repnz popa xchg leave fiaddl stos jno mov aaa sub mov xor (bad) aas fs pushf mov hlt and add pop add pop add hlt (bad) je stos dec xchg or sbb adc add in push je push test test push test inc sbb cmp or ror inc (bad) push sbb sub and mov adc ret sbb or fistl mov jecxz push imul jl sbb aaa addr16 adc icebp or push sub and and shll add add lods adc fs dec push sub inc add test sbb push (bad) repz dec clc jne mov jo push pop inc cmc xor sahf add mov loope (bad) add dec adc ret jns scas int3 jg and and aad les dec fidivl lahf fildl stos jne add pop push adc jno pop pop xor sbb mov pusha clc pushf and sub jle cmp bt test add pushf pushf lea jmp clc sub jmp adc push scas xchg jl sub imulb push sbb in stc in adc out popa cmp pop outsl mov je (bad) and ljmp leave cmp scas out push divl bound data16 pop icebp cmp mov adc push roll enter cmp movsl xchg xor das inc cmp stos data16 sarb and cwtl es pop jl sbb sbb xor jp loope les idivb sbb movsb data16 mov xor sbbl adc pushf jecxz lea pop inc lds push sub push (bad) xor jle in rorl test (bad) jno pop sub fs in jmp pusha test jo xchg dec das dec mov ret repz pop jg push and xchg mov pop ja cmp insl icebp add pop aas push mov and jbe xchg leave xchg (bad) sub (bad) arpl inc or std ficomp dec mov in (bad) movsl pusha mov sub mov shll sub aad loope movntps mov mov and mov inc sbb sub cs out in repz fistpll dec mov ret mov cmpsl clc cmp pop (bad) lret pop out and cmp pushf push pushl call push push inc push inc dec push cs insb add test cmp add lock verw cmp xchg int3 shr std das dec mov lods inc shrl movsl bound mov lods cmc jmp (bad) or dec pop stos test jno fistp xchg xchg sbb push call out adc lods push outsl in and pop xor shrl fcompl scas xchg stos mov loopne mov cs vcvttpd2dqx sub movsb cs inc lret adc nop iret push or sub pop jns pushf mov mov xor pop mov mov jne mov in push in cmp push in add insl cmp test out (bad) pop pop dec inc sub out cmp inc into push std mov rcr mov test mov inc jno pop int insb repnz jmp lea call pusha lea jne pushf cwtl mov push lea jmp sbb ret mov and and in inc mov jnp clc push out add adc dec mov jnp shrb adc pusha cli ss fildl pop or adc dec push dec inc jnp jg push xchg dec xor adc mov dec mov (bad) xor fs push or cmp sub pop jmp jbe repnz (bad) mov cld bound shlb pop add sub (bad) jns cmpl std cmp push dec jne cltd pop stos jl sub adc push popf repnz inc inc push inc push dec xor cs insb add push popa std jge adc popf (bad) jb jno pop mov sub lret cmpsb cwtl jb (bad) pushf inc js js push mov mov pop insl iret adc in rcll dec push mov outsb jmp aas add cmp aaa cmp cli jmp mov (bad) call icebp pop stos aam daa cmp push pop dec push or leave movsb mov das jo sahf mov cli dec (bad) push mov inc xchg or xchg jg outsb add bound xchg mov repnz iret xchg add nop dec pusha inc mov xchg jbe push and nop sbb insb mov in xlat or lods mov (bad) jae loop sbb imul lret add pop adc int3 xchg lea call jmp repnz jmp mov mov pushl ret pusha movl pushf pusha lea jmp mov pushf lea mov jmp mov push call leave aad dec xor lret pop test movsb fildl pushf daa mov jp mov in incb sbb imul inc fsubr imul addr16 sub out adc jns iret aad add cmp ss fistl jp xor in ret mov add xor rcrl and xchg rolb shrb js pop mov mov push dec mov scas adc and push mov int add xlat lret adc jae ret repz scas mov rclb jno pop ljmp add push call lea jne lea bsr rcr shld mov and not sub movzbl mov cmp call sbb dec out xor cld aam xlat in pop xor jg outsl inc fwait add mov sub xchg sub push mov cltd test xchg (bad) cmp fdiv aas dec cld xchg (bad) outsb fcoms insl and push lret inc lret xchg movsb push mov cmpsb xadd les in sahf scas or adc pop xchg lret dec mov iret fwait out scas rorl leave cmp test push or movsb scas cmp jno gs or jae fxam cld and inc sbb jno push cs or aas or jnp lea nop scas out imul inc push mov sbb cmpsl mov iret je loope push push mov dec sti lcall push xchg pop (bad) loopne hlt fwait and fs fsts push and adc push dec pop std mov xor and jae cmp cmp dec popf ret setl or mov stos mov pop (bad) pop jns aam mov mov fsts data16 popf and xor inc cmp inc shrb mov add scas jno push dec inc dec xor sub add sub arpl inc ljmp xchg pop test movsl pop jno into ror rcll push sbb push (bad) out test shlb aad mov int3 cmp push lods inc shr rorl pop (bad) ret fs cmp mov popa mov or insb outsl jmp loopne xchg jecxz cmp lock sahf add das jo into inc pop daa addr16 sub jne movsl stc xchg mov inc cwtl in pop pop pop push push cmpsb lret pop out enter inc scas dec sbb in stc clc or inc cld repz jno push xlat mov aad sarl sub loope dec xchg insb repnz lret repz les mov pushf imul jnp jge mov adc in ljmp das push cmp sbb rdpmc in sub xlat in jae (bad) mov daa and comiss lods js imul xchg pop mov lock (bad) mov pop mov mov xchg and dec out sahf inc cmpsb cmp cwtl not dec ror cmp movsl inc jle push sbb inc frstor xor xchg sub jno push push cmp jmp not mov clc jmp aaa shrl push add mov ss sub jne sub cmp outsb addl out push adc jb dec pop movsb lcall or cltd movsl stc pop shr xchg stos js sbb gs xchg push ret adc cmp push sub cmp mov sub jl mov mov jae jb sbb fsub jae dec adc add lret inc pop and push sub and repnz sbb push mov out sbb cmpl dec xor or ret and or mov ljmp mov out ss mov out scas add cmp cmpsb adc xor pusha ret pushf xchg pop cmpsl cld outsl aam nop aas cwtl dec or xor push push sahf inc fistl icebp in pop (bad) movsl sbb push imul fnsave push and or xchg setne mov pushf setl push mov push mov jmp sub pop imul xchg mov jno jns leave adc cmp das push add pop inc popf add popa jge jne (bad) icebp add int3 jp jp cmp enter js and jns xchg test leave adc sbb add push dec inc jns push inc cmp push das inc lea mov out hlt test out jecxz lea lcall popf popa sbb arpl inc push pop add lds adc sbb push loope pop (bad) adc mov xor push arpl xchg cmpsb clc stc or cmp push imul movsl sbb xchg out inc out std jmp ss enter lods fs loopne leave or jnp arpl mov popa xorl jb xor aas stc push loop cmp cmpsl xor enter cmp sbb fidivl lret or xchg stos xchg dec jo mov mov push pushf imul push mov lock dec rcrl movb out fisub jb dec push dec mov jno push aad mov rol mov pusha cmpb jmp gs cmp jl sub pop push adc pop addr16 int3 xchg out dec jae addl xlat (bad) xlat jmp lds and dec imulb push mov (bad) or mov mov int es add cmp cwtl (bad) fisubrl cwtl xchg (bad) in add mov mov xor mov mov repnz inc push xchg add arpl pop loope mov mov int3 jle in bswap xlat pop jbe jle call lahf add adc ss jbe inc sub imul test cmpsl sbb std or cld inc stos xchg movsb or inc add popf cmc sub inc mov xchg stos jbe cs pop mov ja pop or jb xchg scas cltd add add adc sbbl adc mov cli or pop les lahf imul pushf cmp dec jnp xchg xor and mov or das dec push ror mov rorl sub lods jp movsl cmp jns rcrl (bad) nop dec aam adc xchg add outsb push scas mov test addr16 mov in dec xor inc int3 push arpl push lcall xor test adc add xorl pop inc pop mov jge fyl2x (bad) (bad) cmc mov push sub cltd xchg bound scas movsl lcall cmp scas in or mov mov mov sti in adc add sub cmove sbb cmp push cmpsl mov popa xor insl roll mov fs mov cmp in xor popa test mov ficoml mov out mov cmp (bad) pop jo adc push xchg cmp cmc mov shll sub and add fcomps mov pop pop mov aaa jno push (bad) leave lods icebp pusha pushf lea je test sub pushf call cmp pusha call jmp pusha pushf adc pushf pushl pushl pushf lea call call sbb xor aam and (bad) in cltd mov sarb fcompl or call imul fldl2t xchg in lret push jns jno mov cmc mov bound push fldl inc pop mov lods xor lods mov dec nop (bad) xor jbe aaa adc (bad) ljmp test andl jge jecxz das in data16 test (bad) jnp movsl incb mov mov mov and inc in mov ret jmp adc cmp push and xchg push aas push mov jmp lea ret pushf push lea jae jmp out cmc icebp in test (bad) into icebp popf lods es in insl xchg dec aad std cmp add jmp mov call jle sbb push fsubs xlat cmp fdivrs lods or clc es cmp xchg mov or out shl adc fs leave push (bad) push in inc repz jae mov cmp shrl dec sub mov outsl mov iret mov (bad) push cld add mov lahf icebp jecxz pop movsb scas les xchg int3 cld mov ret popf stc or sub hlt add cltd cs xor sub cmp ss jb sub sub cmp das inc push arpl fs dec popf and xchg (bad) aaa cmpsl lea je pusha pusha pushf push mov call xor dec jb les xchg jmp xchg mov ror std and std xor mov loope cmc imul repnz fldl popa cmpsb xor fidivl pop add gs pop popa jnp lret xor in repnz decb loop pushf or imul outsl cmpsl mov pop fdivs in in adc in loop lret out lock leave inc mov add mov adc dec add push push sub sti roll std and cs sub ds push fldt pop fbstp mov sbb push mov xor mov int3 fbstp pop lods iret movsb mov inc cmpsl mov loop dec rolb ss mov lahf lea adc sbb mov inc pop imul out cwtl movsb clc inc push and insb mov mov fmul sti or xchg in dec cmc call pop sti inc jne in pop stos das mov lods shrb push cmp xor mov pushf pushl ret movw call call jp test jne rcll sub mov aad leave inc fnstcw push mov inc cltd popf loope std sahf loope shr daa mov push push mov stos mov sbb mov scas lock adc popa mov jbe imul push fsubs mov sbb push lods stc sahf push scas dec cltd insb mov out cvtps2pi arpl inc std lods sub jo das (bad) ja add xchg in sbb or out or inc jo pop ja fdivl nop add out jo jo jp mov inc inc push adc sub push xchg jno dec orb push fndisi(8087 std or fsubrs addl lret xlat aaa out out fstpt repz inc add fbld xor adc inc cmpsb cmp outsl rcrl push enter pushf in jmp test or daa adc dec clc in hlt pop xlat loope popf jae scas add std jmp jecxz pop lcall sbb adc push aas mov cmpl sbb xchg jno int3 xchg or (bad) xlat jmp inc lds pop in jno dec pop mov xor data16 into into das inc add (bad) jb sbb test mov in xchg lods push in mov sub js add dec xor xor add push jns movb popa add insb mov es dec mov pop (bad) rolb aad das and outsb andl add mov cmp cwtl in cmp inc lret inc push sbb jnp je popl dec hlt jo sbb xor loop jns push cmp cwtl rcl jmp mov lods mov fisubl xor dec or outsl pop xchg test dec aas push mov pusha lea jb clc cmp push mov lea jae pushf mov jmp push pushf mov lea jmp push inc pop (bad) das and jo es mov fucom xchg leave icebp sub pushf add (bad) out iret int3 mov xchg cmpb inc jo adc dec cmp jnp and fwait jae arpl rcrb cmp repnz pop add push adc shr outsl mov xchg jmp mov pop jbe ret add push orb jae in pusha aas andb or lcall xor dec pop inc rol test mov inc enter jno insl loopne,pt mov loope jmp adc ja pop pop xor inc fiadd sbb pop jl jmp jmp repz loopne push fiaddl in icebp stos lea mov or idiv out out push bound rcrl push or cmpsl jge push jle xor stos lea bound adc (bad) (bad) fwait mov (bad) int3 loop or aam cld nop jne or ljmp icebp pop jns in pop in out inc outsl mov dec pop call jns xor lcall imul (bad) in fisub dec or inc int in pop ja push call dec xor daa ja mov mov pushf lods jno dec push aas mov in icebp imul cmp (bad) mov loop and sbb sbb push inc cmp inc push cmpsl pop wrmsr stos xor inc pop cmc mov mov or sub push nop insl movl jl mov popf add (bad) mov in jno dec adc xchg pushf lea mov push movl push pusha jmp stc neg call call mov test cmc add incb mov mov add xchg test (bad) xor ja xchg push mov mov outsb pop mov repnz xor in push stos xchg popf clc (bad) jns cs fst call stos xchg insl insb xlat in jle pop pop mov mov cmp hlt mov rorb jae dec hlt lds fldt push in mov (bad) push out mov lret add mov pushf cmpb mov movb lea jne cmp setb sub clc mov call call stc mov pushf cmc clc add clc bt pusha mov clc cmp cmp test jmp aad out and ja push push cmp sbb dec mov push inc cmp inc push xor repnz jle ffree dec mov sahf add loope shlb daa pop insb push inc push pop aas adcb lods pop inc cmc xchg call mov push inc cmp push sub mov pop into pop mov jmp das orl test loope popf xchg movsl test push add (bad) dec mov decb ds pop and add out cltd cmpsl jge dec jb dec mov xchg aam (bad) fildl pop flds and or pop insl push push dec jmp call stc jno inc add xor je add mov mov jns sbb repnz cs xchg or mov dec or mov and cmp cmp ret dec jbe or inc and aaa adc ss popf and int pushf fisttp arpl lret adc pusha push lods mov adcl sahf inc cli dec cmp iret xchg leave in jb mov (bad) flds fnsave and xchg (bad) leave fidivl (bad) pop and xor jle outsl fildl mov (bad) cmp jns test jno inc inc dec xchg jno outsb inc str adc aad or and inc orl or xchg add add mov idivl mov sub outsl rolb inc sbb sahf addr16 cmp cmpsl js dec or add cmpsl and dec frstor inc push lock push and aaa mov and mov push jp bound add movsb sbb gs push clc lea add ret fdivl jge push jp sbb repz mov repz or lret leave jne call lcall popa xchg out push jbe outsl push jo imul test pushf mov lods repnz xchg test (bad) mov mov add push cld jecxz mov sti ret xchg enter jp jno inc inc dec sub pusha mov pushl pushf pushf mov lea jmp fwait xchg int int movsl out cld lds inc sub notb into push xchg lock and push dec sub pop aas lret adc push es mov sub jne cmp mov leave xor pop push dec (bad) lret aam cmp out mov (bad) shl jnp mov idiv pop lock jg outsb icebp scas fdivr jle call mov fisttpl (bad) repnz test gs cmp and and dec movsl cmp mov ss loope loop ret jb mov push jno inc push mov jmp mov into push or dec mov xchg enter hlt test add xchg sub cmpb ret cmpsb fldl2e in int3 mov inc adc push fdivl in xchg (bad) mov and data16 iret in repnz (bad) xor stos mov sbb push add mov out push popa adc add int3 or pushf in out or and mov adc stos jg fwait test gs push and incb arpl mov mov call lcall test jmp inc lahf inc js popf add xor imul cmc adc fistp iret push or inc xchg inc lea data16 movsbw movl call cmp push pusha call neg jmp lods mov add cltd incl jnp jae dec ret fwait jae iret scas mov pandn aas cmp and or or nop mov adc ret nop xchg sub lods or sbbl mov fwait out xor lret push sub lahf cmp hlt adc pop or shlb cltd stos xor pusha int3 out insb xor insl repnz mov jb sub popa pop test sbb lret rcrb repz dec test stos xor (bad) cld cmp iret cmp movsb in jle mov sbbl push cwtl or adc push xor mov jl or icebp leave jne test cmp gs (bad) jbe (bad) jb int movsb dec mov push stos notb ss sbb iret mov sub or dec repz inc test xchg cli jge repnz xchg or je test sub fnstenv stos sti pop or decl mov roll add or movsb xor clc or mov mov or jno xor leave xchg in jns push enter push cmpsl push sar jmp in (bad) mov adc xchg (bad) stc pushf push xor stc xor in (bad) mov (bad) hlt cs xchg inc movsl pop loopne mov push ljmp dec or cmp sub jmp mov (bad) lock xchg adc mov jns test pop pop xchg loope fs adc leave cmp hlt shll push movsl aaa insl movsl cmp mov mov shrl lock adc pop in sti pusha leave xor jb test mov aad stos xchg in lods (bad) icebp outsl cmc mov adc gs sub jl test mov cmp add daa push (bad) xor mov push std cmc jmp dec repnz in add or dec pop lods mov ds movsl insb cmp stc jo int3 popa mov cld inc mov jno add inc and arpl test jbe in lea stc mov mov out xor jne jg cli mov aam mov push stc out in mov lret push cmc mov mov jle in outsl and pop pop jnp (bad) or bnd cmpsw in fbld stc adc xor test or stos jo std cmpsl push or enter xlat (bad) mov icebp pop or mov in movsl and sbb stos ss repz (bad) jo cmc adc jmp fnstcw icebp out adc pop jmp mov sub pop ret inc mov dec jl mov jo xchg mov out xchg hlt push jbe sbb insl (bad) lock call mov (bad) fiaddl fldcw push (bad) mov clc add je cmp clc in dec dec clc mov adc test mov test jle (bad) or in inc in and lahf enter movsl stos ljmpw mov into movb mov jo in dec pop imul shll repz dec call stos pop jmp or xchg jmp jl xor pop cmpsl shrb aad and decl gs xchg mov cmc mov jl mulb roll mov adc add add jle inc fs aam (bad) dec nop ret or or pop jl in outsl bound icebp lock jle sbb cs (bad) cmp lret mov (bad) jo fs js push shrb (bad) data16 imul movsl loopne mov sarl push mov loop cmpsb push mov cltd imul inc pop pop div add cmp jle js adc jl cmpsl mov or cmp sahf rcrl ret jle jne cmp mov mov cmp and div pushf dec cmc je pop dec mov shrb out fisttpl stc (bad) call pop mov mov inc lahf xor jge int3 nop (bad) lock adc and (bad) not and je test arpl ss lret and imul outsl add jg out ror mov sbb imul (bad) add cli cmc mov pop inc popa jne sbb jo in jp les in out mov out mov pop (bad) jne idivl loopne sub loopne sbb movl xlat push or sbb out (bad) je xlat stc sub (bad) adc movsb add int clc rcr insl and ljmp cmp dec mov repz aad or int mov out or mov cmp xlat dec jle push movsb inc cmc stc popa add mov cmp aas inc pop lds icebp aas sub fs push cmc in and int3 jno cli je clc fcom das push testb cmc cmpsb jne cld popa mov push push sub sar mov mov mov cwtl xchg add mov cwtl mov test pop mov (bad) int3 cld fcmovb psrlw sub mov mov add test mov mov loopne cmpsl jbe (bad) insb ja mov out jne push pop add lcall mov mov push inc jmp adc dec jmp fisub cmpsl idivb add jbe or jp divb or xchg push out incl mov out or je cmp repnz xchg cmc loopne mov jle out repnz fsubl cli mulb jns hlt mov jg mov scas test jg fwait cmc jl clc rcrl icebp jns jle jg iret or test jne test adc arpl dec adc cltd dec jecxz hlt ljmp repnz or stos ss std mov push mov xchg in test mov xlat mov fiadd xor (bad) jmp or idivb pop cltd imul xor jbe bnd cmc xchg imul lock call ja cmp leave sub rcrl jb out push aad es push stos into (bad) jle ss pop stc scas or leave mov pop fwait push cmc inc iret nop or or mov ljmp push out cli int3 leave hlt jno icebp push mov aam inc stc mov mov cmc mov sti popf mov mov pop outsl pop loop (bad) xchg imul add aad sbb mov adc test out insl cld in fnstenv (bad) push cltd ljmp xlat adc out cmp push fsts jle mov addl push imul mull xor rcr stos loope add int3 adc jecxz aam pop daa (bad) (bad) cli dec pop imulb xor out jnp sbb and and jno fstps dec xor rorb xor daa sub sbb rorl pop xor shrl mov adc dec insl jo aad push or es jb cmpsb enter cmp or les repz jp leave cli inc test or xchg xlat pop loope cmpsl sub test push mov adc dec test mov dec test mov adc daa cmp hlt inc dec fldenv mov pop fs in leave sbb call insl adc es mov xor imul test xor xorl mov in adc aaa xchg inc (bad) jno dec loope pushl cli jns xor adc sti add sbb test pop movsl mov or lds aad loope call mov fwait test fcmovnbe leave jle mov int xchg inc in push arpl enter sub mov in (bad) jo cmp jns imul stos jg rclb popf jmp cmp cmp std cli mov cmp repnz or insl jns cmc sbb add insl ret jle aad cmpsl mov (bad) rcll xlat fwait or mov mov push mov jecxz cli or mov and adc vpunpckldq out adc sub mov pop push mov xchg mov or adc lea xlat add dec cmc mov xor push sahf add push cmc rcrl sbb sbb es sub out adc jno idiv push sbb jge mov mov out lahf adc jb xchg add sub in mov mov lea sarb or add add xchg jmp or lret dec jecxz pop lret jbe jns mov cmp frstor shrb jns push cwtl outsl sbb movsb inc insl jp cmp pop daa xchg sub sub icebp popa dec (bad) mov aad or cmp repnz xor stos jno pop leave hlt sbb aas lcall call adc arpl and mov mov adc mov sarl pop shll push icebp mov aam stc lock int dec aas sub daa popa xlat popa enter (bad) loopne xor stc aad cmc lock push cld aam mov icebp movsl repz addr16 mov xor repz aad hlt cwtl incb cmp lock flds sbb icebp insb jg (bad) icebp into out dec rorl aad adc (bad) hlt out icebp mov imul movb mov stc movsl in xor sub outsb stc mov fildll cwtl adc jp pop inc test add es xor mov pushf jl sub iret stc push inc loopne movsl jmp sub adc cli ja push stos xorl aad mov dec sbb cli test jg add cmp cmp mov flds ss aad sbb popa jb (bad) adc (bad) (bad) mov cli mov xorl and ret push mov cli jp and notb sti loopne xlat fs pop loopne sbb in adc and push jo leave int3 movsl aam ds push add mov iret cmc roll push insl push mov push fldenv repz stos ss xor adc ret mov jno popf sbb mov int3 mov shll fnsave (bad) mov call xor or nop hlt adc dec or cmp xor inc xor stos test cs jbe leave test lea pop push in in and xchg aaa inc cmp or test test xchg das jg es gs insb call test out and pop lret (bad) lock ss outsl jmp or or movsl adc lods icebp xchg push push adc adc dec mov push cmpsb arpl aaa mov adc xchg sbb add addr16 xlat iret add into or scas xor sub adc out movsl jns cmp cmpsb xor cli fdiv xchg icebp mov adc sub les sbb and pop pusha pop (bad) movsl hlt pop dec sbb out cwtl out loope xor or pop cmp mov xor shll or das call (bad) adc std aaa stc push aad mov test das insl xlat outsb jp daa sub notl push adc in push sbb pop jne lret add test andb or pop imul mov dec sub inc jno jne push jo mov flds dec and jo (bad) or aad int mov jo xchg mov xor push push jmp bound jno adc movsl in adc mov fwait sti adc sub mov mov mov inc or xorb test adc pop stc loope std test out mov or loope cli dec cmp test flds das cld aad daa stc jne sub or shll in addr16 clc das or or test notl mov stos paddb hlt and push push test (bad) cld call lahf lahf (bad) addr16 mov div shrb das scas xor dec sarl mov jns push or mov in adc (bad) rclb (bad) icebp movsb out into pop push cmpsb in out xor jae xchg and push addr16 test adc (bad) and jl popf xor cmp mov adc jbe sub jo jle std call jnp pop inc pop pop imul insl nop push pop mov add lock cmpl lock cmc mov dec cmc jmp (bad) daa imul test dec call aad cld fisttpl cmp out mov dec xor lods repz or sub or or jl dec mov mov add jo ret cmpl add push xchg mov jne pop insl (bad) and adc je imul mov jmp fstpl jno data16 insl inc mov dec sahf repz leave cs js std cli cmp add sub mov aam (bad) and jmp outsb lea xchg jecxz add adc mov mov jmp adc int mov inc pop push lods aas iret loope fimul in idiv mov jbe add (bad) jno (bad) aad jle addr16 ja push cld loope rorl pop and imul (bad) dec in xchg out icebp stos pop mov jno push bound mov or cmc rcll jne repz icebp sbb add or out jle call sbb or popf fnsave push jmp xlat adc pop push clc jbe pop push mov je arpl sbb pop jne inc sbb ja test ret sub jg mov xchg lock sbb push in (bad) dec xchg (bad) pop movsb out lret jmp cld fbld sub and and aaa in test push or adc cli je add cmp daa mov add (bad) xchg test ja fxch ja jge mov stc xchg mul rorl pop lods or xorl scas mov movsb imul pop fldcw out xor jl mov lods pop imul sti xchg in push push jl mov xor mov ret mov out cld add or add adc xchg hlt (bad) int adc jns movsl xchg in jecxz dec jmp xchg push fild push sub dec sub ret jns cmp jo test adc les or jmp div mov jnp push fsubrs clc sub push cmp fcomip add dec mov dec loopne jo daa seta jno xlat jmp push add dec xchg loope jmp sahf sub jno insl mov xor xchg xlat mov loope mov xor and mov mov sub xchg cs xchg sub ret adc or push lcall adc sub scas scas pop mov repnz mov nop add jge jbe sbb rorl repz test das push mov and mov and ljmp (bad) popf jns xchg mov sub pop sar (bad) je adc xlat repnz jl cmc or add jo push adc cmp add (bad) es inc repz lock sahf push rcll xchg pop jbe pop test add jbe mov ss test outsl adc dec sbb (bad) imul mov jge leave adc daa and or sbb or ja dec sbb dec xor rorb lock adc inc call pop adc mov sub popf mov sbb aam pop add push xchg fdivl dec dec pop movsb hlt mov sar mov aam ror mov lahf or insl cmpsb xchg mov mov in xor cmc stos in ss dec dec les mov sbb add loopne xchg xchg cmp fadds ss cmp add mov mull icebp dec mov testl bound je fs dec cmp push jmp adc mov jne xor ffree inc jmp test adc cli jle rcl mov lock ds cmpb movsb sub inc out add repz adc jns adc sub sbb add scas inc js int daa or loopne daa decl xchg mov pop sahf mov pop rcrl pop xor jo add lret cmp loope std push mov jl lods jno mov int and mov jecxz xor mov xor push bound inc dec lods pop aad add movsl xchg xchg fisubr pop sbb adc addr16 outsb daa jmp mov push test add (bad) repz cmc dec mov xchg jo mov rorb cmp sarl and cmp push insl lods mulps test mov roll lret rolb pop pop or fcomps test xlat shrl (bad) repnz cli cmpsb cli or insl js adc pushf js cmc shl out out xchg or mov push data16 aad loop xchg mov hlt pop adc push cmp jl idivb icebp push out jne ss mov roll (bad) fxch mov data16 add cmpsl push ss adc lcall in mov lret adc add mov mov xor dec jnp xor mulb add sbb fidivrl insl (bad) cmpsb cmpsb inc loopne add cwtl push sbb jb jno adc in sbb stc mov pusha ret aam int outsb mov mov pop loopne inc adc dec je pusha imul add cli xchg ret jo push mov dec pop add xchg mov in push xchg and test mov repz addr16 dec jmp pop jbe inc cmp sahf add mov int arpl add mull sbb inc jnp insl jp mov or push aaa js icebp sub push lea es jae js lock rcrl push out in je sbb jb cmp cmc (bad) out jg les sbb ja adc icebp push adc das sbb adc outsl xor jo add addr16 lock test mov arpl fnstcw add les and arpl (bad) mov push test int test call js jno int jo pop addr16 shlb mov dec andl and out je xlat into mov adc lds repz lret add ljmp xchg dec data16 sbb out jmp je test sbb sub cmpl pop daa movsl lcall sbb mov xchg pop xor push js data16 and in mov dec ja int3 jb test jb mov mov rcr imul popf enter push mov mov xor adc addr16 and rorb or mov das xor push test pop add adc jne fwait ret jp sub in cmp fldl xchg dec xor imul leave add lock adc sbb jno decb xor pop mov movsl xchg push jg sub insl dec shrb sbb inc out adc movsb mov cmpb xchg push push inc out xchg xor int out pusha icebp mov fisttpl rdtsc pop xlat or inc or in scas cltd push or push pop hlt cmp xor dec enter and (bad) int out cmp dec adc ret or fdivrl pop xchg out jl js sti stos ret dec pop cmpsl adc stc lods ss stc test or cmpsl fisubrl or bound jge cmp xor stc loopne adc mov sbb add xor test mov lock push cmp shrb mov pusha xchg jecxz repnz aaa jne pop insb leave sbb mov insl ja add loop repz xor fs jo fnstcw fsubr sbb (bad) mov repz xor mov cmp adc and pop out mov mov jle xor inc das es xor insl mov jecxz inc ret rclb in jg out and or rolb adc pop (bad) sbb mov xchg xor sahf stos imul or es ja mov and ds insl sbb out roll add pop gs divl cmp mov gs mov sbb negb mov test (bad) jno cmp sti mov xor aaa sbb (bad) adc xor (bad) mov mov xor pusha (bad) xor (bad) sbb lret and (bad) cmp scas or daa jmp mov out mov pmuludq pop rclb (bad) dec mov jno dec fistpll nop pop push idivl icebp pushl stc pop (bad) aam nop notb push xor shr (bad) movsb fdivp adcb and jmp mov cmp adc rcl mov cmp jne add and and insl dec xor mov stc xor push adc movsl jo jns cmp dec les mov lods xlat or int jecxz adc jns and nop test xor addr16 mov repnz (bad) mov mov stc inc sbb mov cld fsts test adc in das and out or out adc shlb out stos push pop rclb jbe or add decl xor add jno mov cld loope sub mov scas lock and or sbb imul mov insb adc sarl inc orl loop xor in push fsubrl xchg inc repz test add setns cmp sbb shlb clc sub movsl aaa push sar xchg add mov (bad) lret mov aas adc imul ret lahf jmp imul add das mov punpcklwd mov repnz mov adc or imul icebp xchg negb xchg or hlt repz lock loop add fsubs je or push shl repz not icebp fnsave in or mov cmpsb jge jle inc jl loopne push loop mov mov out out std in mov in jecxz jecxz loope mov cmp lock jmp push aaa loop sarl in add jl notb mov fbstp aad add ja push es int jle sbb test lret leave cmp inc fisubl add sub cmc rclb push loop xchg scas outsl mov jmp add imul xchg and sbb jmp leave pop rorb fmull mov jbe testb xchg stc mov stc push adc call pop adc arpl repz in outsb mov xchg repnz jl pop push mov and (bad) iret pop add sub mov pop hlt test mov jg dec cmp dec mov or jle xchg lcall jecxz aam cmpsl and mov jl mov mov dec sub dec xor mov dec add inc arpl clc mov idivb popa fnstenv fmuls add sbb jle sub orb xchg inc gs or jb imul int loope and mov adc leave ja std jge mov outsb popa jo movsb imul adc jle aad hlt aad sub xchg repnz mov mov aaa adc fsubrp xor pop mov test popa adc leave jne pop dec (bad) jle xchg rep out push call inc (bad) hlt inc or divb mov loope and or xchg xchg cld cmp jb cld lds mov rorl mov jmp aad daa adc aaa mov xorl jae icebp dec jno clc popa (bad) insl cmp or stc xchg sbb mov cli jo movsl push cmp aaa (bad) ja mov mov mov shll mov (bad) jbe mov test xchg (bad) sbb call clc repz inc mov jno mov jns insb out movsl fucom jp outsl xor test jmp rorb out sbb mov cli sbb push fisubl mov xchg fwait push jb mov mov fcoml sti xchg dec xchg ja dec (bad) cmp fdivs leave mov in jmp fildl sti sbb xor cltd sub cli gs dec cwtl mov xchg adc push insb ja inc xor jg mov (bad) sbb (bad) xor sbb daa jo sahf movsl dec pop mov fbstp xor stc stos xchg lcall aam mov mul jmp mov lods adc adc add outsl out mov in push jecxz movsb or outsb fcmovnu dec mov sub mov (bad) mov aad mov out arpl test pextrw pop into mov cmp add std rorb (bad) ja xor icebp jbe jns rol daa lret lock out addr16 fs scas in mov xor mov cmc bound icebp insb pop adc dec and test fsts mov mov mov mov cwtl (bad) jae mov cmpsl mov rcl (bad) dec mov push vpsrlw cmp das and add mov test int3 adc (bad) jp sbb movsb mov adc (bad) and sub mov sarb cmp sbb lahf popa je aaa loope imul movsb adc hlt fisub dec jmp xor add xchg inc pop imul pop les enter aas xchg (bad) (bad) fildl lock adc add xlat in popa cmp js and xor jle das mov ret decl jmp and inc xchg xor sbb xchg arpl sub sub adc (bad) (bad) aam jb hlt xchg sub iret test push lahf mov into ja mov jp dec out idiv or inc jmp f2xm1 fwait mov add inc jge (bad) xchg es fnstcw dec sub test ja daa pop dec in mov lret hlt adc (bad) jns lret fwait sub lock xor pusha aas lret lods hlt cmc dec lock sub mov leave out xor adc aad or xchg or and xchg jns stc lods add subb jo addr16 mov (bad) xor jns test pusha or lahf outsb out jno xlat in mov mov xor xor inc cmp loope adc (bad) and ds or sahf fldcw stos cmp or std pop jne mov test pop pop add in xor inc incl or xchg push xchg fwait int3 adc lds xchg enter sbb rclb test inc dec shrb adc (bad) or xchg inc xor add (bad) call frstor fnstenv (bad) addr16 jns aam jb (bad) scas add sub test xchg data16 enter cld sahf mov insb test lcall and jo loope mov jns fs imul sbb stc xchg pop pop pop sbb jp repz in inc jo or popf inc les dec popa sbb jnp cmc xchg sti push xor fcomi jp leave xchg xchg mov mov bound mov mov dec adc in mov leave mov adc mov pop sarb arpl in inc std adc je mov rcll aad in or xor rcrl and rcl pushf idiv movsb gs cmc jns add sbb idivl pop xchg jmp jge int3 cmc dec mov jno aas ret das sub call gs pop push stc pushf iret in sti sbb test dec (bad) sets push aam stc push fistpll xchg mov cmpsl jl dec or mov mov pandn shrl ja cmc stc adc fdivrs mov push push sub (bad) je ds cltd pop arpl xchg dec or push call cmc pop loope xor adc (bad) pusha xorb push fsubr xchg jo ja cmp sahf out pop pop (bad) repz in sub or dec test jnp arpl cmp imul jo dec es dec aam and pop cli cmp sbb js or lds inc xor cmp gs cmp mov (bad) jae ljmp cmc push jb cmp dec and sti outsl mov cmp inc adc js subl ss pop dec test mov sbb xor dec out add pop cmp cmp pop xchg loope,pn pop adc loopne mov mov test aas shll push adc cmc imul jbe add lock push popa mov cld popf sub cmpsl and test shlb jnp or add jne add loope mov xchg and push inc cli lock aad jo test inc mov ja (bad) aaa mov fdivrl aaa sub cli mov fnstenv mov es mov push pop addr16 movsb or push (bad) mov jg pop repnz sbb mov (bad) mov insl rcrl mov rclb fwait xchg inc cli push push fcomi in jo xchg les or cli popa xor push ret imul hlt sbb mov and imul std ljmp enter aad and adc jns fdivs icebp dec test xor dec mov inc adc pop fsubl repz in (bad) stc (bad) push js push cs cmpsl imul shrb xchg mov xor xchg xchg push fs leave cli sub jmp rorl enter pop pop xchg cmp adc sbb in mov fst sbb jl cld or mov adc lret jmp nop mov cmp int3 xor sarl outsl ja daa inc hlt add inc cmpsl mov pop (bad) cmp mov (bad) aam jle insb into mov mov int3 jg movsl pop fucomip arpl daa push cmp insl xor mov mov ja rcll adc adc pop pushl mov and fist (bad) in adc fdivp dec ds adc add aad mov mov hlt inc push (bad) xor mov and mov popf inc int3 sub pop jno in test hlt sbb adc adc (bad) ljmp fmull (bad) or inc das test nop popa and rcrl inc je mov (bad) xor aas and sub stc mov (bad) adc xchg xchg (bad) aad xchg xorl jnp test jb and in jns lock pop adc adc mov mov mov (bad) xchg icebp xor jl inc jno adc int3 outsl inc pop movsb nop ja jae and push jp lds xlat pop dec icebp add jl cmp xchg lods add aas sbb cli xchg sub icebp notb xor cmc ja (bad) mov push lea aad push xchg mov push jcxz fwait out xchg and lods mov adc dec push mov lret add mov data16 lea mov enter xchg jmpw cli jns xor int3 (bad) mov inc aaa inc jb push jbe mov mov in mov into adc std inc cmc gs sub dec enter adc mov and daa dec sbb or xchg mov mov test mov xlat adc push cwtl push loopne (bad) stc mov add dec test daa lret in mov adc test addr16 clc (bad) lock xchg ljmp cmp mov scas jno cli std inc xor aas cmp in ljmp daa fisttp mov lahf call bextr div push in xchg arpl data16 xlat ljmp mov lods loope and fstpt push pop divl popa bound push sbb pop aad je movsl mov shll mov daa xor xchg mov scas divl loopew sbb iret add lods fildll aad push mov push push notl push xor je std test addr16 adc xchg rcrb loope sbb sbb lahf inc cmpsb inc jne dec stc adcb dec cmp mov les sbb orb lock ljmp and inc xlat das loop fstps hlt xchg ljmp jl xor bound into stos dec fs push sbb jle pop xchg add in in xor add cmpsl add daa adc add aas stc rorl mov pop sbb lret aam leave and scas aad mov mov or xchg repnz add test stc or jle add mov mull (bad) mov mov add mov and insl out jg xlat pmulhuw test popf lock sti sbb js ss dec data16 stos mov bnd mov add jne push call aas mov adc sbb inc shrb aam push push mov jae aas add popa int3 pop push dec (bad) jne neg push cwtl jmp popa jb pop and ss lds int3 dec lea mov addr16 mov nop mov aam pop push xor mov es leave jle inc inc cli adc lods and dec xor std bound mul adc std outsb subl dec add add mov sbb add test jp xchg or xchg imull mov push inc stos sbb sbb jnp call lahf adc cld outsb lock insb sub jbe pop scas in (bad) mov aam daa mov call sbb mov xchg inc nop push mov cmpsl leave into loopne out je push jns fnsave nop adc mov data16 aam dec notl cmpsl insb out mov jecxz sbb and adc cmc cmpsl shrl popa add dec or inc pop inc dec mov leave xor xchg aas dec aad jp test adc mov jns mov test test (bad) lock jne ja mov mov fistp mov or jne stos pop in inc leave xor xor jmp es jo mov jp jp repz lods stc mov cmpsb imul adc inc lahf sbb cmpsb out mov mov jecxz mov jne mov imul aas mov push inc lods mov stos popf incl mov divl push mov mov ja mov fs mov cmc mov mov inc packssdw mov mov adc push xor loope mov inc mov inc xchg icebp dec jecxz xor enter jne dec jge jb pop cmp ficomp sub jb push imulb dec rcl (bad) frstor xchg or push push adcb movsl shlb pop xor fdivrs mov inc addr16 test cmpsb mov das movl lods inc imul fdivp push adc aaa int adc cmpsb xchg lds or int3 test and cmc xchg int (bad) mov (bad) outsb (bad) in ds cmp outsb xchg adc lds pop push adc cmpsb push aaa in les dec mov mov sbb sarb xor ret and test xchg es push xchg fucom (bad) jmp test cmc bound jns xor xor push sub or pop jle bound adc or pop mov lods push lock push imul sub negb outsl or sub mov dec pop fild nop cmpsl sbb das jnp adc inc mov sbb pushl aaa mov cmp aas imul add xor mov add cli jns jg std xor out push jb xor (bad) jmp lret arpl ljmp push (bad) pushf std leave mov outsl or jl cmp mov xchg movsl dec sahf enter pusha xchg stos xchg sbb insb sub jb jle and and cli jmp mov xchg mov mov pop sbb or fstpt cli jg nop pop adc adc clc bound daa shl (bad) mov lock sbb inc mov mov adc lods dec pusha arpl stc hlt inc cld testb cmc adc (bad) add push xor movsl insb mov jge mov data16 (bad) sbb loope test cmp (bad) sub enter pop in pushl sbb in sbb xlat jge inc das (bad) enter adc jg stc clc xlat mov jle mov push pop mov mov mov pop test mov cltd cmpsb inc mov inc jb lds icebp cmp push xor mov adc repz mov sbb test pop cmp sbb and mov out inc testb or (bad) mov or lds xor out push in mov dec and idiv inc test pop mov adc xchg sub mov mov mov and jecxz sbb fisub cmpsb mov cli jne test (bad) cmc jg fstpt jp mov pcmpeqb cs xor subl inc andl popf cmc fwait addr16 movsl lea add (bad) out jns (bad) iretw in xchg flds sub or mov (bad) adc push dec cmp insb fcompp cwtl mov mov test int3 test xchg xchg int3 push xchg adc repnz dec jmp adc (bad) push std sub push xor jb cmpl outsl into pop in pop jl push jge in (bad) cli or inc fcoml imul scas or cmpsl pusha test out mov inc in pusha cmpl jns enter mov mov adc es fstl sahf outsl f2xm1 sub xchg clc push int3 lea cmp dec add lret cmp adc mov (bad) rcr mov mov xchg push test or and dec dec movsl dec sbb insl cmpsb js sar ss mov pop vdivss div sub fs pop imul stos insl jecxz mov mov mov (bad) or loopne (bad) ficompl (bad) push lret shr pop jne cmpsb mov in add pop sbb insb adc sti add mov faddl or xchg mov repnz imul movsb add or iret cmp push cld imul stos jno dec insb imul adc aad mov fstpl sub in sarb sub loope adc add std xchg call sub repz cwtl add xor sbbl inc addr16 jmp fist in sahf cmpsb ret cmc mov sbb rolb dec lods notb divl in jle inc add lret push mov fcmovb jg push lock popf out sub loopne cmp xor jg mov mov mov fbld sub sbb out xchg fwait cwtl sub mov pop pop idivl sbb pop mov dec fdivl into clc inc shrb movsl out adc inc daa int dec sbb imul adc xor adc (bad) idivl push (bad) pop shll fcompl fnsave and mov in cmpsb subb insl push dec mov adc and mov mov aad adc cmc push pop pop xadd inc movsl pop sbb inc stc out imul sub (bad) pop inc test sub jae or mov jno call mov aad movsb xchg fscale cmpsb mov xor cwtl (bad) add leave aam (bad) or in xor out nop shll cmc subb jns sbb sbb sarb out jno std dec stc lock stos mov call fildll cmp add repz jmp stos push cltd data16 add sahf sub cmpsl call ja push test daa movsl push loope cmp mov add or out loopne or dec cmpsl push clc jge jmp jp cmp jle and add out xor xchg adc (bad) jae add pop fwait xchg fsubrs and xchg popf repnz push jle out cmp inc sub mov (bad) push or insb or inc aas add jbe sub or jecxz clc movsb mov and les xor lock mov lock pop push imul dec cmp adc push xor pop ret icebp adc mov iret mov (bad) jbe call pop fadd inc rorb (bad) xchg orl cmp int3 or out (bad) push xchg sbb loopne aas mov in adc loop fisttpll mov sub repnz xchg sbb fidivrl sbb mov nop incb sub pop faddl lea lret dec popa xlat out pop incl sbb and int3 pop aam jns fwait push inc xchg adc mov xor test xor jl stos insb (bad) (bad) sti cli imul cmpsb pop cli mov mov mov enter mov adc and mov data16 stos mov push mov aas pop inc bound addr16 insl ficom add stc shrl aam adc add jns mov sbb mov (bad) adc sarb (bad) and xchg test decl leave xchg addr16 jne (bad) stc jb dec mov push shll in lods cli jae cmp (bad) mov leave and push push sti (bad) adc xchg out incl mov pusha add sub or cmp jns jle lods mov and inc cwtl inc lcall inc (bad) adc mov (bad) adc in pop int pusha xor xchg cli loop out addr16 test pusha cmp cmp sub mov jecxz cmp pop and ss je pop sbb inc stos pop mov lock test imulb addr16 mov lret mulb dec dec dec or mov sar inc js movsl cli jg mov repnz pop jg mov shrb pop push dec xchg call mov popf bound stc mov sub mov adc mov inc out xchg sbb cmpsb inc ljmp dec xchg sbb and nop lea cmp mov sub lock dec fdivrl fsubrl jl inc jp mov out jle mov mov push jmp cmp mov call adc sbb inc lahf je mov jle imul cmp mov (bad) sahf mov sub push clc mov repz cli loope jnp out pop cltd mov mov pop push or shrl movsb xchg inc (bad) lock xchg mov (bad) push sarb inc lea or hlt cmp xchg jns xorl inc lcall (bad) mov mov lea repnz hlt pop dec mov mov lods pop push cmp or pop (bad) cld js pop leave or pop cmpsb or add or jge pop aaa mov or sub push and inc xchg insl test mov adc hlt or adc divl push lods add pop lods or insl in pushf jmp pop mov iret in insb add (bad) adc jg mov call dec inc stc inc test xchg loopne dec mov inc sahf movsl (bad) hlt (bad) jo sbb xor or test cmp jecxz mov cmc xor adc fistpl or lods inc push out or mov in les (bad) cmc fstl in and in sarl out addr16 add xchg (bad) cmp loope and in mov xor adc xor xchg outsb leave push jne test sbb pop sbb rclb add adc pop push out pop or mov fwait clc dec out icebp fldl out pop aam pop jg fnsave out out fisttpll (bad) fldpi jmp test faddl aam rolb sub (bad) jno ljmp lds xlat (bad) xor jle (bad) dec out (bad) mov xor out test push loope mov rcrl lock int3 mov dec dec sub adc cmp pop cmp neg cmpsl dec lret jae jmp jmp mov mov add addr16 popf or jae out cmpsb scas xor addr16 mov test aas fwait shr push out inc or mov inc imul jmp xlat dec rorb or add add adc sbb inc pop and std fdiv out negl cli jmp xlat mov adc jl hlt cmc (bad) jno sub lret lret sti test leave ret int mov (bad) cmc cmp gs int sub iret scas scas ret jns xchg lcall into leave jge mov std test outsl ret std or aad fdivrs mov in jb sub jbe test and or jbe fimul adc (bad) testb jg imul mov add cmp loop (bad) aaa out out pop dec test dec in or fcmovnb push lods (bad) push call xchg and mov or dec loop stc mov adc imul xchg inc cmpsl push lods fldenv out fiaddl (bad) jle and lods and adc pop adc movd mov sub test sub jmp aaa nop mov test xchg jl cmc xchg (bad) fisttp add enter rclb mov sti pop pop mov popa loopne fcoml cmp dec xchg push adc push or js mov leave jecxz loop push jmp insb xchg sbb sbb xchg leave decb push (bad) hlt xor aaa or cltd fincstp test mov xor mov sbb shr (bad) push sub mov jecxz ret mov pop call out jmp mov outsb icebp leave mov xor pushf lds push push sbb imull sub movsl shr add rol stos mov (bad) mov xchg jge dec stc (bad) push push cltd pop call gs stc jge rclb (bad) call sarl shlb outsb and dec not arpl hlt fs icebp jmp leave (bad) push xor icebp cld jne jge test push and add cwtl pop (bad) std mov mov ja jns mov xor aas (bad) ja aam outsl imul movsl in cltd leave mull pop pop mov xchg xchg insl call xchg ds pushf addr16 (bad) sub je ja xor push movsl mov pop and mov loopne push xor cmc aad mov cmp cld push hlt in mov cmpsb pop mov loop xor dec jns sbb mov mov leave mov push sub pushf xor jmp jns movsb int push enter xchg pop stc dec aad (bad) mov jne and jne cmp jno jl hlt cmp mov aad jg leave inc jns xor xchg aad sbb roll and rcrl add outsb int mov cmp (bad) mov addr16 pop in sub jmp rol mov pusha icebp jge mov stc lds lea leave out xchg or mov cmp cltd (bad) xor (bad) out adc mov push cmp pop and adc pop pop inc hlt cmp lods push enter jnp (bad) mov ja jns mov out mov (bad) xchg andl stc jbe adc or fcmovne sbb xchg cmp stos lock imul xor ret idivl dec fimul idivb sub out (bad) fstl cld jle mov lods (bad) pop loop xor pop subb and lret fs push adc push (bad) (bad) adc inc js or sbb cld loop and addl test rolb xchg pop add gs add lret dec jnp inc pusha push sbb repnz and imul inc stos mov test cmp push push dec nop fnstsw cld adc rdmsr lock pop push jecxz jb inc cmpsl out dec pop dec xor imul xchg dec and add int dec adc xlat mov inc sarl mov xchg push je xchg repz dec shrb mov int3 jns loope mov mov jb dec out inc (bad) mov hlt adc push or cmc int scas or cmc repz jo (bad) fdivl out fmuls mov sbb jp mov ds loopne pushf fldenv pop scas sar or jl jno cmp mov cmp dec ss sub push mov xor je mov insb push xchg xor mov xchg cmpsb push lds mov bound cmc xchg ret sub dec jns jae jmp push jbe cmpsb (bad) mov leave std push incl or pusha jp fcmovb push (bad) cmpsb pop test (bad) mov enter jb in jmp jbe xor scas lock rep and mov xchg icebp hlt in inc mov lahf xor sbb sbb push inc ss xlat jb and mov xchg fdiv pop into and popa jle stos outsb (bad) fbstp cmp adc divl and inc mov (bad) (bad) icebp inc enter xchg mov adc mov out dec add (bad) mov cli call mov or jg push mov add sbb or mov mov inc les mov test test xor push ss sub out decl adc jbe jle jb xor loop mov nop or iret xchg mov (bad) sbb mov sbb (bad) fimull ret invd sub pop or ret push or or daa mov dec jmp data16 rclb sbb in jae jnp mov test sbb push dec cmp mov pop xchg xor push shr mov jp loop nop or out fisub cmp cli fucomi sub xchg add in pop loopne bnd rcrl repnz les cmp adc ret inc or mov pushl xlat or inc push dec insb mov push or adc lods gs sbb fwait aaa aad dec cmp cli es pop push arpl testl adc lds or and rorl or popw mov dec ss push pop hlt mov or lock out cltd loopne fcomp aam xchg dec dec xor mov je out or dec cmp sbb cmpsl cld lea cli add sub lret pop es mov (bad) dec cmp clc pushf aaa cmp or and pop or in sub test mov xlat (bad) repz xor and sbb lds sub pushf cld or outsl add or cmc iret je lcall jns sarb dec idiv dec bound or les push jmp rorl pop inc or mov icebp int fptan stc mov enter or inc in or push dec jmp push inc arpl add iret dec call loope in jbe popf inc xchg in pop dec pop in mov icebp mov (bad) int pop stos sti add xchg sbb lock lock push or in cmp ja aas add leave outsb xchg add xchg push dec mov mov lock insb inc fwait and dec mov ja leave idiv inc xchg gs out jge add in repz bound aam xor cmp dec enter les sub inc lea and fcomip mov xchg rcrl int cmp leave call scas out dec adc lds inc mov inc xchg jg or push mov (bad) cmp loope test cli sbb dec out sub jo xchg test mov jl adc xor jbe dec jl ja sub xchg imulb icebp into jecxz mov das aas inc push lock cltd xchg fs xor mov lods ret or xor and adc push inc and test cmp and mov jle outsb or inc aaa hlt stc ja and cmc movsl jno dec cmp and pop mov mov push add test out data16 das cmc sbb into imul sub leave clc fdiv in stos or icebp lahf jp cmp or movsl inc or mov mov pop push or sbb mov ljmp sub and cmp pop mov or mov xor popa lret aad or rcrl cmpsb and or ja sbb cmp (bad) lcall nop notb loope pop stos dec scas jb notb push ret sbb add sbb cmp leave inc lret repnz in (bad) popf cmpsl xchg mov mov xor or xchg inc out repz and arpl lods dec sbb cmp or dec cmp mov mov cs (bad) xchg and into imul cld jmp lods nop adc adc or dec (bad) mov cmc xchg cli mov or jl out xchg mov or dec iret push or icebp mov lods lret push inc jmp mov clc cmp mov sbb test or outsb mov jne lret (bad) or roll cmpsl inc bound mov jg or mov cld cmp mov jge loop fcomi or mov test mov pop pop dec int3 push or out jge insb pop cmp or adcl data16 pop or enter iret in jne push dec dec cmp or neg sub fsubp aam or pop fsubrl pop in rcrl mov repz fxam into xlat in pop in cmp enter mov stos insb sbb clc inc pop mov adc push and pushw or adc imul add mov jo xchg add xor mov repz das test arpl or jne mov xchg or lods pop push sub lret sarb push xchg sbb cli orb ja mov test fs sub xlat xchg push jle mov pop xor test jb repnz dec sti test sti xchg repnz sbb jle test jb loope int3 movsb mov xchg aaa mov or sub es popa test repnz push out fimul inc sbb push or fsubl mov mov testl stos or int3 mov push movsb adc roll cld jle xchg mov scas repz mov ret leave leave out dec xchg cmp cmc mov (bad) insb popa jg std mov jno imul mov notl jle loope (bad) adc cltd shrb out test mov jns imul sar pusha cmp or fbstp aam (bad) sti cs mov in add pop xchg movsb insl (bad) fnstcw scas fs inc lods mov xchg pop testb stos adc scas add shll mov xchg scas (bad) aaa les es (bad) pop popa pop push int les sahf outsl sbb lds iret sti (bad) mov xor lods neg sti mov xchg sub cltd add xchg cmc outsb pop es div push xor lods push dec jns adc or insl mov mov mov adc jns or fimul jmp mov hlt push repz (bad) in (bad) lret arpl dec ficompl push or xchg xchg vmovsd and mov cmp or pop xchg jbe pusha mov inc dec clc add or cmp sbb ljmp idivl cmp lds pop scas test (bad) in lret adc and pop adc rcll fdiv mov mov jbe jae (bad) cli and jmp cmp shll inc fildl lock adc clc xlat mov cmc xor and aaa insl lock mov xor mov popa jecxz mov or or hlt mov push jecxz mov or shlb in xor adc dec xor add push sbb adcl shll adc inc gs push aad sahf or xchg sub jmp lock adc cltd out cs ss stos sub std aad bound and cmpsl movsl sti mov inc sbb stos mov mov or mov mov jns add fisttp mov flds mov jmp stos or stos test adc dec mov xor or push iret jp xchg or jns call sub cmp hlt sub mov and or or mov push xor and adc repnz cltd sti xchg or test lock js jle sahf jmp fadds ljmp cmp test or and loop or lret adc xchg xchg inc xor jns pusha jae push cmpl xor cmp sbb jbe mov mov pop cltd or xchg sub dec sbb push or xor icebp bound cmp fwait inc or cmpsl stos mov shll mov les add lods loop leave xor cwtl cli or outsb mov or inc icebp and ret cmpsl enter repnz or pushf cmpb test xchg adc fimul inc or mov sbb xchg pop std mov xchg add adc sbb lds xchg bound xchg rolb mov fild jns popa loope adc lahf inc mov xacquire push fisubr push or les add and or pop fldcw adc or dec xor sbb push repnz imulb sbb shlb or sub adc jmp cmp pusha out in fsubp or repnz or xchg jbe mov divb dec incl adc mov cmp call test movsb sub inc xor adc jmp jl fisub sbb fstl pushf cmpsl jo or stc pop dec rorb xchg dec imul sbb out xor popa scas or inc and sub mov mov shrb imul loope scas mov dec aam or jo js push jmp enter lcall xlat push dec xchg xchg and (bad) xor or mov pop movl mov cmp loope iret jns jo into pop sub inc hlt mov push ficom or cmpsl fsubl xchg adc in xor cli shll scas sbb iret imulb das mov mov pop (bad) loopne lret mov mov dec loop es cmpsl mov push add (bad) dec aam popf mov mov push call sub jne xchg dec (bad) ss jge shl pop push sbb or xchg or mov outsb dec add xor add jle inc stos leave (bad) in (bad) mov adc dec mov add inc insb std scas xchg jmp test pusha sbb movsb lea xchg jge push popf das sub cli insl lcall push adc repnz inc (bad) lret loopne cmpsl in mov fmul divl rorb push dec dec pushf inc fdiv add (bad) inc jb (bad) jle and rcl lock shrb pmovmskb mov mov adc loopne lret out jae stc dec sarl add xlat dec sub cmc (bad) adc sub mov test cmp aaa dec and push mov dec fbld fs test sbb (bad) ss out jno jne pop stos cmp or jnp in dec push daa fnstcw sub add es imul cs test dec jl in rorl ljmp (bad) sub push adc int cltd out aaa fucom and mov fsubrl pop ret imul cmp jmp and es imul push test scas push mov xor cmpsb test jae popa jne inc loope jnp adc push dec out addl es (bad) sub push cs jl das int rclb fistpll push add cmpl dec add addr16 cmp jbe incb mov adc mov aad leave pop (bad) mov dec movsb xchg pop mov xchg push jmp mov lcall (bad) mov inc arpl mov and cmp sar jns inc jo adc rcl jbe decl push cmpsl mov jle lods sub push ret fnstsw dec data16 add and cmc out stos jno lret lahf jge mov mov fldenv adc mov lcall jmp iret movsb xchg push pop lcall jg cli jmp mov jmp clc adcl es mov into push push add std or and sahf jo pop or xchg jecxz,pn cmpsl jecxz pop lock dec stc pop fnstenv adc xchg mov xchg mov push mov or adc cmp mov add (bad) cli push xchg leave pop out cmp test jbe jns insl mov add or outsb pop adc lods (bad) insl aam pop mov push addr16 shr pusha sub lods fdivrs sti jno sarl (bad) aaa test dec stc imul adc pop int3 lds int pop xor add fsubrs call mov jmp scas jge leave popf ret mov xchg jne push cwtl js aam pop (bad) ljmp xor push rorb inc dec outsl sahf xchg sub in stos and cmpsl movsl imul test dec mov mov jbe pop loope mov cmp and or daa dec dec std mov jl (bad) scas mov loop pop inc stos and jne pop jb sbb ret xchg jecxz bound ret jge mov loope cltd pop xor sbb clc ja shld jmp jle (bad) jno insl out jge pop xlat call ja xor and inc scas inc jno jnp push rcrl pop (bad) out dec mov mov push pop (bad) or rolb (bad) out sbb movsl adc xor fisubr cli dec repz movsl js loope (bad) icebp call fisttpll inc mov and addr16 push push inc jmp rcl stos insl push inc or mov xchg mov movups (bad) jns mov pop lret jecxz adc pop inc ds mov dec and leave cmpsl push jl sub pminub bound dec adc pusha mov aad int3 scas jne pop mov es pusha popa and pop int lds jmp xchg sub pop pusha div addr16 mov (bad) jl loop rcrb shrl outsb leave pop lahf adc dec hlt movsb mov cltd xchg in inc jns xchg or push sbb or adc pop cld neg and std jno or xchg pop out adc bound or mov outsb mov pop inc insl bound push jmp sahf (bad) dec xor sbb sarl add inc push in jo jno cltd cmp xor movsb stos rorl add xchg movsl int3 sbb push addr16 clc push and cmp addr16 fldt push jge ja push arpl pop adc lahf out pop pop addr16 divl mov pop mov dec cmc out push bnd or arpl dec lret pop dec mov data16 dec adc (bad) mov sbb cmp loopne scas ljmp cmpsl xchg (bad) sub xlat lahf insl xchg movsl mov popa notl aam int mov xor ljmp sbb and adc mov lods push adc cmc imul rolb cmp fsubrp jecxz xchg sahf jns adc stc int xchg lock movsl sbb sbb std mov xchg push ret mov mov inc and push in dec cld cli jae cmpsl jmp push roll lock aas or jb lods out push dec xlat and sbb int jbe cld dec dec cmpsb cmp vpminub jnp scas add mov test adc adc dec fstps cmc dec mov or adc lods cltd (bad) sahf cmc jge stos repnz mov dec push stos dec aam mov mov or mov cmc int3 adc pop jns or (bad) cmp xchg mov lds leave push mov push scas adc ds sub jnp inc lret insl push mul fnstsw or es lock mov fstpt outsl sbb inc in call sub lock xchg inc xchg ret or mov (bad) daa or mov inc mov sbb lock adc lods jns push pushf shlb xor mov (bad) pop cmpsl or jno (bad) stos cwtl sub les fisttpll aas lock lds movaps mov sbb out cwtl fstl movsb flds mov js adc or pop cltd sbb in fsubp sti rorl jnp dec nop mov fwait push dec ja sbb loopne jae stc sti mov test push and pop (bad) cmp add sub adc jns push popf repnz lahf cmpsb inc or push cs leave call mov xchg push sub cmc push xlat xchg orl cmp popf and repnz push pop mov stc adc outsb mov jmp and clc call (bad) shrl inc cmpsl push lods or (bad) push loopne add repnz mov js imul mov nop sub cwtl test adc popf lahf decb xor fs repnz hlt (bad) rcll cmp dec aam adc pop jae push cmc xchg stc shl dec (bad) ja pop inc mov popa and xchg cmc scas loopne shll push fbstp jo sti mov out negb jecxz dec cmpsb jl fcoml sbb nop fstpl jecxz jno dec aam sub int3 (bad) mov mul adc add mov dec lret jmp dec rcll pop xchg xor ss jg mov test fdivl dec sub imul xchg (bad) sub ficoml ret jo loopne in imul xchg adc inc inc push mov xor cli insb adc ss push sar popf shl push jmp insb mov std jo add mov test xor pop mov push adc out xor pop test add and test inc scas cli lea jo add xchg jbe repnz test lahf (bad) fucomi mov divl fwait lods fnstsw dec ficompl stc andl dec push mov push sti or xchg jle jbe dec std and or pop ja add test jl mov std xor mov jns push and xor add cmpsb cs ja mov cli stos movsb inc loopne dec stc test inc imul stos mov hlt int3 add (bad) pop std sbbb ss jne shr mov adc dec stos jp dec adc stc xor mov out frstor or jne jae add ret ja in clc mov xor jp fsubrs (bad) cli mov cwtl push imul stos lds and imul int int inc ret mov mov cmc pop test inc ror sub jmp dec jae aas xor test rcl movsl xchg aas lcall out push orl test movsl dec arpl inc and fsubl dec add cmovnp outsl stc test or adc loope mov cmp rclb jmp clc inc push clc mov jnp mov inc or cli push into testb mov pop sub repz shrb test fidiv pop cltd mov adc or or sti jmp cwtl inc dec or xor sbb jl rcr test or repz sbb or fsts or add outsb mul int incb lret cwtl or imul xchg or sbb cltd or cmp mov sbb leave (bad) mov push ret lret push dec sbb jmp lods mov add hlt aas jecxz jp imulb push xchg or popf adc mov enter push xlat push or stc ja pop les or pop xchg mov dec hlt mov pop shrb or aas icebp fidiv leave jle mov jg in in push lods mov jl dec push mov pop sub into aam lock adc jne inc es fwait xchg jp push aaa pop sahf dec lods mov (bad) dec mov out (bad) dec out cmp mov dec mov jbe jbe add cwtl xor mov ds adc inc push shll jns nop mov ret mov and jo push cmp mov dec jmp scas (bad) mov rcr inc mov adc movsl in arpl fdivs enter ja or dec es fwait mov adc push or mov pop out inc repnz or outsb mov fmull pop adc pop lods sti push xchg push lds dec adc adc add in xor jns or loopne cld mov cmpsb xchg push int3 adc sahf repnz fldl mov outsb pop or in dec out cs call iret aas int3 jb inc mov je out aam rorb divb and pop bound cmovg arpl sub aad rcrl or jne fldcw sbb cmp or lret imul fnstcw int push or stos push sahf arpl ja test cmp repnz or adc add xor leave mov mov or test or push sbb out shl insl in outsl test outsb inc adc into dec fnstcw mov cmp divb pop jl dec or cmp out lock and inc in inc inc leave rolb (bad) (bad) daa jge mov push (bad) xor icebp shll mov xchg sahf cmc mov aad scas cmc aas (bad) repnz shr aam jecxz loope nop stos dec pop mov call xlat in cmp mov inc mov push test xor cmpsl adc inc lock inc aas mov xchg je dec lods cmp daa test dec addr16 pop mov push xor lock cmovp pop cltd jne jae xor mov int3 xor xchg lret push xchg pushf scas jle xchg xchg sbb iret insb out incb lods call jns pop mov daa data16 mov jb popf add mov push enter out or into xlat mov outsb pop not mov xlat add inc ljmp bound pop test xor jo mov popa repnz jecxz sbb or pop inc bound das arpl (bad) int in nop xor loop xchg mov mov test fcos adc cmc (bad) stos loope xor lea sbb sarl arpl je add js loop gs sbb (bad) xor inc lahf jae mov out cmp add and jo jne test pop push jo sub movsb call or cmp or mov adc push dec inc xchg pushf es pop push ja pop jg (bad) int or lahf loop add aas push in repnz fs and hlt pop xchg aas (bad) enter imul push and mov and adc repnz jb paddd xor out push in lret or mov mov cld pop pop fbld test data16 jb int3 adc xchg pop and xor xor xor testb jo sbb mov or insl pop shll dec jp sbb cmp insb cmp sub push loope inc push fnstcw dec (bad) loopne (bad) int pop mov das test (bad) (bad) outsb sub push dec in sbb wbinvd stos jmp (bad) mov popa jb cmc push jnp dec ret stos or jecxz jne pop or mov imul xchg scas mov out jg push rclb in sti cmp or outsb inc je pop or cmp lret sub and inc or nop jecxz mov lds mov mov mov mov or sub mov fiaddl (bad) lcall (bad) push gs test aam int add mov add iret stos dec int3 xchg lahf sub hlt aad fdivl loop cltd ret repnz lea test xchg mov test repz xchg fs lahf call rcr (bad) enter dec or insl mov or dec adc aad add call test out loope js std stos fbstp cltd dec cld lds pop imul pop mov adc daa sbb movsl sahf hlt mov int mov xchg sti dec aaa xlat aas int3 test adc (bad) mov outsb arpl je jmp inc push mov jmp (bad) stos loopne mov (bad) test fsqrt gs fisttp pop rcl xor loopne cmp adc mov daa ret es mov fwait call cmp dec das jo adc inc push fldl in push dec notb sbb into push cld mov add shl jno xchg mov into or xchg (bad) and mov mov cmp repz xchg adc cwtl test dec dec (bad) pop js pop jno and push xchg loop xchg jp adcb pop mov je std sub popa sbb mov jbe add sbb ljmp cmpsb int3 xor cmc inc out xor iret data16 mov out ficoml xchg jo sbb jmp scas inc adc aaa push (bad) cmc mov loopne sub adc jbe scas (bad) pop xchg mov and sub adc lret ret int inc sub xlat dec (bad) mov shl inc dec jg jp inc add or cmp mov mov inc pop movsl push bound dec insl movsl jle or pop gs cld jg dec and mov push insl aam and mov ret scas or lds lock sub lods stos xor and push ljmp ss pop and xchg repz push push std adc jge mov leave xchg sti hlt (bad) and push xchg push iret aaa pusha mov jmp mov pop fidivr aam (bad) or std je cmpsl insb scas je cmpsb sub movswl cld (bad) mov inc mov push fisub outsl rcrb scas pop incl pop mov jl lcall leave insb adc or push pop hlt pop adc inc add leave (bad) scas stos arpl in fstpt daa jle add cmc aaa mov adc sbb xorb icebp hlt fidivr les xchg cmc das jnp inc pop out push aad mov mov fnsave inc cmp mull decb out fldenv sub das movsb pop (bad) jne shll enter adc sarb outsl or pushw mov dec push mov mov jmp loopne mov repnz sbb xor pop aas jmp push (bad) in add test inc add scas cmpsb jns adc insb xor ja xchg rcrl gs ljmp or mov insl test push or (bad) enter out pusha aas cs hlt xchg sti out mov cld push mov leave icebp xchg inc insb scas mov out icebp jne add cli jecxz push lods lods aas jl fiadd adc rcl cmp lcall push enter inc mov adc cmp jle mov mov mov mov mov cmp clc jns rclb into sub mov jmp or pop pop cmc mov insl mul mov mov imul ret dec xlat and mov ja xchg push loop inc sbb aad pop mov test imul testl fldcw fsubrs ljmp jecxz inc je fcoml enterw (bad) lcall nop divl pop mov div outsb push dec into jecxz ds enter jecxz xchg aam stc and fprem1 cmpsl xchg sub and mov xchg inc push (bad) xor shrl mul lock cmp mov int3 cmpsl cmpsl or iret adc push inc test mov jle inc dec sbb repz cmp jo add mov adc in inc stos pusha jns jo sti insl sub mov mov xor add or cmpsb into fisubl mov out pusha jnp fsub jb pop adc sub movsl sub xor sub clc pop pop sbb out add in or fcomps xchg xchg movsb lahf mov mov lcall dec jns test sbb andl mov inc repnz mov xor add ja xchg vshufps imul lock in mov pop jp pop dec xchg mov dec adc mov xchg mov mov or inc push pop inc mov ret add and push adc fninit fsts js daa cmp sub scas out jb or (bad) insb (bad) dec jns fldenv out adc push mov jo mov and roll xor sub jno cmp cmp repz test dec js lahf fmull lods movaps scas mov sub xchg lds jmp mov xlat in stc mov add dec fwait (bad) aaa and jle rcll iret sbb ds daa out mov xor mov test adc leave sbb loope add push mov jle aas out insb mulb inc (bad) test mov (bad) out jg stos fcoms cmpsl inc dec and mov inc (bad) fsubs fdiv lret mov adc fwait test push pop or inc xchg sbb mov adc aaa adc jns push inc shrb or cmp jp aaa pop mov (bad) hlt jb dec (bad) mov xor rorl fstp out dec cmp and dec mov rcl test jecxz inc arpl push adc loop inc aad mov sub nop mov cmpsl mov cmp jbe xor ficoml fwait xchg aas mov in add pop (bad) mov mov mov scas push xchg imul (bad) sar pop push notb xchg (bad) jl ja xor cmp cmp mov jne icebp sbb dec mov pop cmpsb popf xchg xchg xchg call mov aaa mov stos mov inc mov add sbb aam dec push pop je test data16 frstor mov outsb cmp je lahf sub push inc push add movsl cltd not mov out data16 jmp cmc adc and jns inc fs cli add jl les lods cli mov fisttpl aaa movups xchg scas jne sbb inc mov sbb mov leave jno push fucomi mov iret adc xchg or in jno or push cltd cli sbb or scas (bad) add mov push (bad) ds je mov sub xchg scas jg pop push call in ds int test mov cmc imul jo add adc cmc hlt jle std insl or cmp jno dec add ss jle icebp mov into sbb out fcomip sbb aam imul xchg xchg sub outsb mov decb pop divl loope scas gs or mov repnz jb push pop and inc sti into cmpsb jl push fild fistpll clc (bad) jns mov ss xor inc fwait sbb push xor lea jns and cwtl cmp repnz fsubrl int3 imul sbb in jmp leave test or jne sbb dec or aas repnz rolb rclb stos sarb stc sub cmc sbb xlat jne dec or mulb or inc jns sub dec xchg pop leave push or fistpl xchg nop or mull mov aad in into jmp inc inc mov cltd jno or mov enter daa xor adc cwtl pop jnp mov adc and movl rcll popa and push dec iret sti aad sub xor in adc divl mov es sub clc lret mov cmp (bad) jb mov adc xchg ret pop test mov out clc or popa add ja or adc fildll pop and mov xchg or clc insb pop out mov or ret mov bswap mov (bad) inc pop dec stc fstpt fwait xchg pop push xchg xor cltd add jmp mov dec mov cmp adc iret or iret ret mov adc mov mov xor inc jmp xchg dec leave inc dec cmc xor or js mov sub or (bad) mov dec mov sahf inc in mov mov pop or lret sub lods pop dec cmp or rorl or addr16 gs or fs jmp test sub mov ss push adc adc mov cmp lock (bad) mov js or xchg or push push aam pop xor cmp pop dec lcall scas popf xchg or enter jecxz jmp sub add divl aas mov rol mov xchg pop movsl lock cmc push mov das hlt sub pop dec jnp lcall adc dec flds jecxz jecxz movsl cmp cmp icebp iret frstor push aad test mov cmc jle cli push and ds movsl sbb mov stos cs ss cmp enter fcmovbe insl scas mov fisttpl test imul out lcall stc ret imul popa fucomp out inc icebp mov xor idivl mov ds jb xor jle (bad) push sub dec or fbld js cmp mov stos mov xchg fstl lods popa or dec cmp out jne push push mov or mov mov mov incb xchg or lret jnp mov xor xchg inc lods jns cmp lret cli sub xor leave mov leave or mov or and or es fisub rolb into bound sub xchg gs shrb push inc xor aas sub int3 dec daa call mov jle popa push push lods or cli les sub push or jae adc lds sub push out push fstl xchg fadd push jmp iret mov rorl ret sub fildl rorb cmp clc adc into mulb outsl jns aaa cwtl or lret sarb sti sub mov (bad) sbb and rorl mov mov xchg (bad) lock (bad) enter loope mov jge sbb test adc add int lcall jae push fstps lock in xchg rcl pop pushf notb jge jne lcall mov mov or pop scas loopew ss mov mov mov sbb pop sti ljmp pop or push inc adc cmpsl fs jb ja pusha mov psraw jecxz or adc push aaa dec cmp push jp orb out jae outsb xor iret jle idivb inc dec fistpl sti test sub scas add pushf js in (bad) or ret or mov dec into or or mov movsb arpl ret scas aad cmp or push das cli test adc push mov int3 push pop fs std or (bad) pop fidivl outsb pop or es lea iret nop (bad) push or sti mov or mov sarb cmpsl mov mov stos testb outsl nop or add mov mov xor dec ss pop movsl inc mov push outsb sete mov rolb jle lret mov cmp cmp and insb push mov (bad) fdiv ret (bad) or jae xchg testl add bound outsl icebp pop data16 push hlt adc xchg inc int adc add mov inc push add outsb add jns andl jmp test cli cmp inc (bad) ljmp call sti sbb out pop xor xchg or fs mov cmp imulb jnp push push popa loope mov xor mov sbb xchg or jl sub push test jp pop cmp int3 mov hlt enter jbe mov xchg repnz pushf dec (bad) or lods fnstcw or ja jecxz popa (bad) or lods sbb hlt mov fwait lock iret push mov test arpl adc jns or jge xchg push insb mov in push sub mov cmc into out aad orl nop sub int in push sarl inc or xchg or dec xor xchg dec sbb ret sbb in and outsb push cmp (bad) lods xchg xchg xchg btc xchg sub sahf stos sub push and imul mov pop adc push fbld hlt lds cld test stos ljmp sbb xor sbb fsubl cmc faddp mov push cmp test jo inc jbe out lods mulb sti cld cmpps movsl push rorl mov sti cwtl mov sub mov mov jb add adcl xchg imul sbb dec enter mov or xor mov sahf pop pop mov rcl or fcmovne pop fs aas xchg inc fmuls js push mov pop push mov fiaddl call test mov cmpsb fstl jb cmp or inc std pop inc xor pop insl test stos jmp pop push and mov pcmpeqb in mov jns sub or lea leave or out out wbinvd insb cmpsl cmp lahf dec or adc adc test jge cltd or fldl pop pop mov inc xchg pusha ss cmp jae or flds or pop hlt fdivrs pushf cmp roll int3 xor hlt lods xlat (bad) test call aaa jne sbb fucomp xor or xor lock or scas inc mov adc in fadds adc sub dec ret or movsl fs or inc scas shrl mov mov outsb mov or lods push sub push (bad) or daa sbb scas pop andl or mov jecxz mov cwtl frstor fdivrl imul repnz mov cmc in inc sahf adc fisttpll incl dec mov sbb or inc fbld (bad) lods mull shll sub ret hlt mov jecxz ret xor into jne ljmp xchg addl or fstl or jle xor push bound or movsb iret cmpsl fdivrl mov je lret scas xchg mov push xchg pop push jnp inc js dec xchg push (bad) insb pop push cmc icebp stos dec out add cmp int cmpsb adc idiv xor arpl push (bad) fsubl jp pusha out mov jl fnsave dec (bad) int stos pop jno jle inc popa pop inc cmc stos pop pop (bad) fstl insl clc repz dec jp mov (bad) in adc mov jl je add fs into roll and pop sti scas xchg test adc sub inc aam ljmp xlat pop jns adc add push or mov icebp test popf ret mov rclb pop pop jmp nop cmp inc cwtl pop jo adc mov call je jnp inc or jns adc lods cmc push xchg std mov mov push fiadd decb insb mov adc mulb inc sahf jo sub leave xchg incl xchg sub int int3 lods push pop add leave mov pop movsl cmc add es test negl sbb push sbb xor adc leave mov idiv dec jns sahf fld mov js into aam xchg jmp inc add cmp dec insb jo imul or xchg (bad) mov push aam sahf inc jp aaa insl adc aad mov dec or decl leave call and hlt lcall jns inc inc insb mov push out std popa xchg jle xchg or jnp xchg lret pusha arpl cmp xchg dec shrl jg mov push push add (bad) or adc xor test mov jp dec dec aad sti (bad) in mov hlt inc aas (bad) mov push rcrl jae xor cli orl lods aaa fisubrl negl cwtl addr16 lret push dec adc mov xor (bad) and pop lea and arpl or push mov cmp dec fstps or std sub mov (bad) repnz loope or sub cmpsl or xchg pop xor cmp or pop dec sbb (bad) test push inc cmc pop movsl or jbe jle mov cli add or or cmp bound bnd ret mov aas jmp mov add ljmp fnstenv aas or adc hlt aam mov in jge inc sub stc out mov js jno pop and popa jecxz (bad) and cltd or adc sti or pushf cmp mov iret or fs hlt jns sub pop cmp call push mov adc jmp out outsb outsl ljmp xor or call or cld outsl and or mov ret pop cli mov clc inc mov out jmp int3 stos lea add call mov push sahf dec (bad) fsub xchg or add pop cmpsb roll or mov cmp adc cwtl arpl rcrb pushf sbb add mov add (bad) or in push in ljmp dec movsb pop lret je add lods shrl jns push inc mov movsb in pop cmc pop lock or xor dec in fdiv js pop push mov sbb aas inc mov or adc mov and or gs add sub inc or pop in cs cmpl and dec pop in push leave mov mov mov mov andl jne and or cmp xor outsb jns jae or aas cs arpl jle or jno inc fnstenv or adc mov or into mov bound sub adc and xchg xorb mov aaa sbbl dec (bad) mov sub orl lock mov imul inc cmpsb jmp repnz mov sub (bad) aad test repnz or outsl sub mov pusha stos inc rcrl jae pop or mov sub add (bad) mov outsl sbb pop (bad) lock (bad) jbe pop or jno repnz mov popf mulb inc sub out fwait in fisttpl je push mov loope ror mov cwtl test add roll xor dec outsb (bad) or sub ret push cmp (bad) (bad) mov insb dec or push movsb jne (bad) and dec or push dec fldl mov rcll add lea test xchg sbb (bad) lret mov push push int js test mov or popa mov sub mov and loope pusha in aas sub (bad) nop imul xorb stos or fcompl setge mov js mov popa or and fst xchg pop or pop iret adc in xorb sub call or jne hlt sub mov test or pinsrw pop or pop test xor pushf or sub ja mov int3 std mov (bad) push add cmp fnstsw test jp lock in inc jne dec inc cli fstps cmp imul push in lods aad or test pop dec pop (bad) inc push cld loopne fsubs push fnstenv cmc mov mov and rorb arpl sub sbb mov jg mov push les xor mov jno popa inc or xor dec xchg pusha je addr16 ret cmp push push loop xorl jecxz inc arpl js dec in repnz cmpsb lock push lock pushl xchg inc int insb mov xchg xchg xor notl adc mov testb mov adc repnz pop or inc xor cmp jg cld subl pushf shll xorl inc add (bad) mov outsb test push roll sub gs mov adc rcll mov jae xor mov enter es (bad) mov mov aam hlt sub cmp test mov mov cwtl jg aaa and mov scas repnz inc cltd jp inc sbb aad and ljmp stc movsb fisttp daa xchg bound or cli (bad) mov or into jbe pop sub xor mov dec and jmp (bad) (bad) fucom stos test jno adc pop or sbb ret or mov setne enter aaa jle mov add cmp lret ljmp add les jns aaa push xchg fsubrs pop fcomi jbe cmp xchg pop jl mov aaa xor adc mov out jmp test jg jb inc mov or in jno addr16 add (bad) testb cmp dec clc add or test mov inc fildll in jmp lahf jns or mov es js pop jbe mov mov jb decb mov aad test xor inc dec push dec or imul imul pop inc xor or sbb jno in sub or sub movsb pop popf dec or jnp jns xor dec fcompl inc inc pop js jg pushf jmp leave stos jmp adc (bad) sub push repnz mov jne adc mov ja int testb mov or call (bad) mov inc jle stos adc out fs mov daa mov fist fcmovbe cmp or in movsl aas (bad) sbb loop sbb or gs add lea sbb pop cmp imul loop push pop xchg mov arpl cmp idivl scas mulb (bad) push inc mov inc push adc add adc in mov fbld outsl xor add mov ret jmp repnz out jno dec or fcoms js adc shlb and and in dec (bad) mov mov adc nop (bad) cmc (bad) icebp mov cli dec stc insb enter iret in xchg cmp push dec inc les push pop dec mov mov notl insb add mov mov jecxz xlat sub aas leave and mov jae dec push sbb cmpsl sub jge int3 add shll mov mov sbb sti lcall cltd adc sbb dec push inc jno fimull (bad) incl (bad) repnz aad faddp jge mov fnsave fxch lret lods fwait dec jmp jp inc jae imul or inc cmp out add shrl cwtl cmc sar jne mov nop or lods push cld sbb push (bad) push aad out mov divl popa jnp push push xchg or mov fdivrp and xchg cmp in add xor ret fisub sub sub aaa hlt add mov out or mov dec cmp jns inc faddl and push inc jecxz sti daa (bad) or sahf push test or movsl mov lods xlat or call in or arpl push dec mov or (bad) lock stos dec test outsb js lock adc jne or lds fisub or and push jmp lahf push sbb aad fs ljmp push in out fxch push test (bad) mov push imul sub push into xchg adc imull mov aaa in enter flds rorl shlb ss push or xchg add xchg mov hlt in xor jne push notb mov nop dec dec popa sub cmp outsl xchg jns inc add xor clc cli adc mov and mov scas mov int3 loop mov cmp adc and xor sbb lds sbb sub pop or mov out jo or inc lret cmp idivl and daa nop inc mov xchg mov adc fwait clc xlat jne loopne pop std in mov mov mov fidivr cmp lods mov rcll or rclb adc call sub add in inc mov push arpl push decl sub lret sub xor sub or mov add push jne loopne ja push sub jne lods jecxz mov push popa sahf mov jne xlat or jns notb or leave xor aas faddp or loope negl lods test mov jmp aam leave pop fsubs int repnz (bad) stos lds mov iret lea imul jne mov mov test sbb ret or lret test mov xchg orl jg or pop jl or push adc mov stc int es inc aad and nop mov jmp movsl mov mov repnz lea mov test mov in (bad) pop mov or adcl or jne (bad) mov imul pusha xchg insl sub (bad) cmc shrl cld mov lret call xchg dec xchg add jge insb and into mov mov sahf adc jmp out test (bad) jne mov xchg aas or cs lret push xchg add xchg add xchg or hlt add loopne fnstenv inc (bad) or mov or sub test aaa lods pop or xor inc xchg or cmc mov das push (bad) orl in movsb fisubr lea cmpsl lcall mov leave in lock hlt loopne mov test push mov leave sub dec xchg (bad) aad xchg inc subl ret or test mov mov sahf divl jbe es cmc mull popf sbb mov sti (bad) out in rcrl and cmp mov jo out or dec lea or jne pop sbb xlat test mov negb imul leave ffreep jno int3 cli push inc sbb leave lods cli and movzbl inc test std out orl mov mov andl mov or jl mov or fwait dec push sarl lcall sbb int3 mov insl enter or or icebp mov mov adc or adc cmp in lret lods and js pushf mov imul fisubrl sbb repz ljmp imul mov popa pushf int3 xchg dec mov jg movsl test jl mov (bad) in jo or sbb insl dec mov popa jae roll adc xchg adc frstor fstpt sbb jnp sub push aad (bad) out or imul add xor cmpsb mov (bad) or mov xorl cmp xchg fsts or cmp adc jmp cmpsb fidivrl mov inc movsl jle mov call jp fs insb or repz push mov (bad) cmp or cmp push xor cmp mov jg jae mov popf xchg jp or sti iret and sbb or (bad) fldenv scas ds mov cmp inc insl divl inc xor sub clc in cmpsl xorl scas enter and std cmpsb arpl out sahf add push inc sti add pop out push push push int in or and lcall iret jp icebp or sahf stos pusha cmp sub adc insb lock and fxch or cwtl pop lret dec mov addr16 or lock lea and push imul popa call sub loope stos or add mov mov xchg add push pop add dec jmp or sbb iret ss push or sub dec or mov sti fcoms add or repnz arpl mov or (bad) data16 pop pop pushf (bad) jecxz xorb mov cltd sbb int in cmp inc aam push lcall xchg adc pusha push fisttpll mov add stos inc in mov fistpl cmpsb xchg pop pop sbb mov (bad) ss dec jnp (bad) addr16 adcb add scas or mov inc jno jecxz icebp arpl ss push inc fs inc (bad) mov fiadd mov fs dec imul pop pushf pop in mov jo lcall mov ret mov mov daa std mov inc (bad) ja add sub push or adc addl lods pop pop hlt and dec ja jno icebp scas pop dec bound or nop add mov or xchg jns pop and sbb loope pusha imul sbb pop jno loope jmp adc add or mov das or out push sbb jo add push pop add mov subb insl dec fbstp sub jmp pop push movsb test jne pop sahf rep dec mov ds (bad) mov or (bad) je xor or js add bound xchg xor insb mov mov int xchg inc xchg cmpsb cmpsl test or push jl xchg or mov add jb dec (bad) insl popa or and imul sahf mov lahf push ss imul out dec cmpsb jp loopne jg cmc xor mov fbld pop ja leave xchg in idivb (bad) xor cmc dec pop push fwait je sub mov adc adc xchg mov lods inc jge jns xchg or dec jne aad cmc js test ror out and or mov sbb add sub sahf lea aaa mov add pop or adc push insb (bad) ficomp (bad) add scas pop sub sbb mov xor fcompl shl rclb movsl enter mov ret pop or push lods sbb sahf xchg aas imul pop mov mov adc dec or adcb in lcall mov adc fcomip nop add cs sub xchg cmp cltd mov dec xor es mov sbb notl sbb dec cwtl loopne hlt xchg nop (bad) mov dec fild pop out scas js or sub adc aas into lods fldt or xchg jmp sahf or jb xor sub pslld add arpl lock cmp in insb push dec lods (bad) or dec fiaddl xchg mov jnp jmp mov mov cli out cwtl gs leave push imul mov movsb mov (bad) dec aam in sub inc add aas aad mov and push or popa aas (bad) (bad) jbe or jp dec pop ljmp push adc test or into xchg sub xor or mov das sbb dec jg cwtl movsb into popa sbb ljmp cmc mov addr16 and popf das or loope aad insb (bad) (bad) lock mov arpl push xlat or aas mov js mov es inc push or sti in cltd negb push xlat out movsb cmp daa add or inc xor test xor cmp popf mov icebp pusha mov (bad) outsb jecxz cld or or sahf movsl mov pop imul xlat pop jae or or es dec mov (bad) mov add cmpsl inc ljmp popa idivb sub push or pusha or and xchg push pop xor push test mov sti iret sbb xchg cli jae and jb dec out jg negb nop inc pop xor in stc sbb add cmp or adc icebp xchg (bad) clc inc mov ds adc mov or (bad) sbb mov xchg mov leave pusha cltd cli pop not std out mov leave xor dec sbb mov sbb ret pop aad cmp out psadbw fisubr add jb xor dec push call and mov or mov sbb (bad) inc fcoms notb xor xchg out xchg lock add sbb bound mov or cmp loop in xlat repnz and sub (bad) int3 in movsb pop jae jle push cmpsl std mov mov or dec push test idivl add cmp xor adc inc push gs cs or and dec mov push or inc data16 jg sub mov push (bad) ds in loop lret or int xchg inc fbstp les cld (bad) cmp mov lods lahf repnz arpl cmpsb int3 imul (bad) cli frstor mov lahf lds in (bad) int3 adc or pop subb sub xor sub lods stos or and popf dec jecxz or dec jmp or call int3 loopne cmpsb or (bad) repnz imulb (bad) xchg push dec ret or xchg push popf es mov out push cli lret popa or or dec push test push inc or cwtl fwait adc sub in pop push insb fimul fcmovnbe fsubs (bad) sbb lock mov cmp in aaa or insl jnp incb and xor push lret sub cmp int3 in mov xchg or jmp mov xchg iret jp repz fcmovne xchg (bad) enter mov pop sub (bad) pop push fidiv mov imulb (bad) lcall cmp cld or loopne mov mov ja dec xchg adc or and daa rorl inc sub and stos ret jno xchg mov mov rol fisttpl fstl push mov repnz pop aad dec adc xchg jae fidivrl dec jae cwtl and sbb jecxz scas adc ljmp dec (bad) in inc hlt mov test fxtract pavgw roll or in sarl insl or in or rcrb aas and jge nop sbb in repnz adcl fnstcw loope cs mov mov fsubrl dec push rcr mov xor and dec dec cltd icebp push gs pop (bad) repz (bad) lock lock scas hlt nop cwtl aaa sahf and or jecxz dec mov adc fildl xor push pop out dec or add adc cli xchg insl data16 jns stos mov out sbb jle iret movsl test jb leave addr16 and xchg jl xchg cmp inc inc xorl mov lea cmc mov mov dec (bad) addr16 orl xchg inc add or jo lods arpl mov ja mov dec (bad) repz lcall mov jmp aas out repz inc adc loop jbe daa xchg sub xchg dec inc psubw mov and sub add xor in test xor jno imul lock ljmp pop pop icebp jbe std adc les aaa xchg test les outsb dec ljmp out jle xor sar popl add bound push js sti cmc adc stos (bad) mov dec stos push push inc (bad) pop adc lcall jl mov icebp aad cld ficompl leave xchg or and lea mov and les jecxz cmpsl sbb test sbb repz xchg lds adc lahf pop xor mov stos pop push idiv std jns mov dec jb bound xchg pop mov fwait popf adcl dec and xchg jle jmp adc mov or xchg cmp jmp adc in xor or ret fldcw or xchg push rcl xor (bad) mov ficom add push cmp cmc pop mov (bad) stos dec xchg daa xlat outsl xchg lahf cmp shr idiv xor loop jl ret data16 add loop mov jle mov cld mov ret das mov leave jne bnd fildl or std stc pop mov sub inc fucomp fdivs (bad) mov cmpsl mov int or ljmp scas cli mov dec imul mov in mov dec push es jne jae jle fstpl sub fist jb popf into sbb jne dec cmp dec sbb andl aas add imul or mov outsl add addr16 push mov cmp or jne mov sub aam push push rorb push jae mov mov adc fiadd les dec jo ret adc ficom mov lods lock movsl mov jo push fisttp aad arpl (bad) xor test jge or jne (bad) scas testb div lcall or sub movsl adc fwait mov lock gs sti push enter xor and mov (bad) int shr stos jge xchg incl pop loopne pop scas fistl mov gs stos imul outsl repnz (bad) push mov pushf shl ret aas popa in stos jb xor pop xor jge mov pop xor mov aad nop pop notl xchg je pop cmp adc pop fs cwtl fisubl (bad) mov xchg ffreep jns test mov jl jmp or sbb in mov pop aam mov xchg std pop jno fldcw adc movsl aam movsl sbb xor cli jl ret mov mov mov mov fs add je cmp inc sub in insl enter jo scas add popf es roll lock mov fadd and movsl orl movsl and lcall ss test add mov sub or dec fnstsw xchg mov mov mov and add test sbb mov push pop stc inc dec fadds jno cmpsl mov pop sbb push leave mov jmp movsb dec xchg lock repz jns lcall fcmovnu inc cld outsb repnz test hlt fs and mov dec out int3 imul mov data16 hlt or dec fwait (bad) in xor xchg daa imul mov aad ja push test stos or mov mov adcb cmp adc and (bad) sub xchg gs call sub inc push aaa adc xor insb (bad) xor dec jae rcrl pop mov std inc loope dec ret add adc mov (bad) std stc cmp sub push test test sahf fldl idivb inc lea jb push jbe (bad) and adc add or or repz mov inc hlt lret and mov sub dec mov adc mov or das xchg test sub shlb out add imul sarl mov scas or movsl pop mov out mov or (bad) clc popf or lahf sub (bad) xor or cs or push inc aaa xchg add push push cld daa hlt pop test lret or les clc or fdivrs in imul jno leave repnz mov add cmp jmp lock or scas xchg stos in sbb xlat mov std or repz popf daa push adc xchg mov fdivrs inc pop mov mov loope out lods stos ss test ds pop pop sbb pop cs das push push ret into loope cmovae xchg outsl push lahf or jmp lds pop mov adcl dec pminsw jmp mov outsl movsl ds sub cmp fstl jmp or test mov in imul or loopne push mov or hlt das inc cwtl stc (bad) int loopne xor mov into cmpl push and or pop sbb out imul cmp sub ficom pop fdivs insl xchg inc aam aaa mov fwait daa inc mov in mov or inc push mov and seta pop pop rclb jbe mov sbb frstor aad dec jge flds cmp lret mov out and jecxz movsl test jge dec mov std insl jne jno dec leave pop cmp sti in stc dec cmpsb dec sub inc push fidiv mov mov cmp and cli ja lret inc xchg cmc in xor repz push stc adc outsl add shrl test arpl pop jae gs lret mov hlt divl pop cmpsb mov xchg sub dec mov push icebp imul inc sub mov jge cmp ljmp cmp dec movsbl cmpsl or fistl xchg ds std or dec hlt cs inc and or jle outsl push fs pop (bad) js popf adc pop in dec pop push adc or cmp fmuls mov mov repnz xor pop jmp add xor or and pop dec jmp imul subl aad hlt ja fstps or mov test sub or repz inc or dec int3 jg pop cld or adc bound ss cmp jmp (bad) in push (bad) mov aaa jbe sub jne bound nop js mov xlat insb jnp jae mov fcmovb test outsb insl push pop or (bad) and mov xor add jecxz add aam (bad) xlat sti inc cld jmp sub (bad) xor stos dec (bad) or and ljmp or out cmc lahf inc or dec out es dec cmpsl push jns ss dec cmp fcompl push (bad) or (bad) mov in push or sahf cmpsb and mov test inc aas fnstsw or (bad) outsl push adc push ljmp fcmovne inc in pop or js mov repnz pop fnstsw push dec jp cmp lret sub and repnz cltd jmp movsl push iret mov or je sub fimull aaa adcl ljmp inc or and scas or lods imul outsl aad ret fnstcw loope dec push adc mov mov push mov jge outsl push jns mov mov mov lret mov xor idivb inc ss rcrl int jb (bad) imull je lea lods scas sbb in hlt jno nop out adc movsl sub in or push mov mov loop mov dec push in inc pop sub mov jne dec aad hlt and mov les adc and jmp xchg add adc lock sub adc xchg mov xor xor je adc mov inc jle mov lcall fldl decb cltd cld push (bad) cmp cmc xchg les jp add sti jns adc data16 out test scas rcr xchg adc inc sub mov lock mov and mov cmp rcrl xor je dec mov push repnz push dec and and sbb addr16 popf int3 (bad) test cmp add push and inc dec test jns jo mov (bad) push daa xor test (bad) jp dec mov (bad) push (bad) fnsave lods xor pop pusha icebp mov outsl hlt test pop daa lock inc mov xchg sbb pop out inc fs insb repnz mov xor or lods adc pop mov je dec jecxz fcoml lahf js jl leave (bad) adc mov or sbb mov or or pushf pop or insl mov ja add inc dec loopne jnp int3 test lea divl adc imul aam inc stos sarl mov icebp push fcoms or pop add js ljmp mov stc xchg std (bad) popa popl pop push pop aam sbb cltd pop icebp jl (bad) mov ljmp pop (bad) ds push lcall jne mov xor push pop jne cmp out pop mov out mov jle mov dec movsl xor dec and pop stos stos mov xchg adc out dec test or popa xor (bad) cmp sbb dec aad jg in das mov mov inc xor and std (bad) (bad) and repnz ret mov insb movl insb iret and cli jne leave cwtl mul sub dec ja push (bad) xor enter divb jne mov jb dec adc xor and mov pop add adc repnz jne dec pop addr16 (bad) ficoml loope xor andl into pop in inc xchg (bad) mov insb add jmp cltd mov cli cli lcall adc scas aad mov aas cmp xchg or mov jne (bad) fs (bad) pop or (bad) jae sbb xchg mulb loop jns or addr16 and pop mov repz cmp (bad) aas imul mov and inc rcll das add push sbb xor mov out lahf repz dec mov xorb addr16 daa movsb sbb push push hlt adc ret xchg mov inc std icebp cmp adc enter mov rorb test ljmp fs out jne mov adc sbb lods ja aam mov (bad) jne jmp ja push dec mov leave jns cmpb std and mov movsl lock and mov and (bad) sti xor (bad) or mov inc push add mov test into je (bad) gs add in movl (bad) orl xchg adc cmp fwait or daa jno xor hlt rclb (bad) pop lock sarl mov push inc mov out outsl push dec (bad) push or xor fnstcw sub mov iret cmp jbe les int je cli jno push sti ja test rorl popf xchg push mov into xchg push or scas scas je fidivr enter das add add mov mov pop mov fcmove daa jl and pop in aaa pop aam out xor or xor movsl or lcall push lahf cmpsb or incl add xor popa fiadd stos sbb mov (bad) popf fcoml rcll repnz mov cmp mov jmp mov xchg roll lahf out jp in and dec xor outsl xlat mov (bad) and aaa enter xor push inc mov in jae or sbb mov jnp movsl mov lds out push sub ss cmp in pop data16 mov sbb mov jmp lret insl mov fild in outsl aam or mov xor push xlat mov jo pop xchg or in imul lods fcomp inc pushf cmp inc mov dec or pop jmp sub out inc outsb jle add dec cmp add mov jns cmc mov or jae mov mov neg xchg movsl leave fldt or lret pusha loope dec out lea sbb cmp gs or mov inc test fst std in or mov mull adc andnps les or das mov lret cmc sti into (bad) lds out and neg xchg sbb pop mov cmpsb and mov adc (bad) jp xlat sub jle pop sbb rcl ljmp out jns ljmp test jb mov in int3 sub lcall sbb (bad) push mov or rorl push leave cmp and cmp cmp mov inc test std adc cmc inc int popa inc jge dec loopne leave loop push es or iret xchg je iret mov sbb pop mov or aad cmp inc fs lds adc sub popf dec xchg lahf sbb lods pop rorl fsubrl mov xchg imul jbe clc in push or pop xchg cli fnstcw fcomps hlt dec lcall gs arpl adc data16 outsb gs adc pop mov adc xchg popf add xchg iret pop repnz inc fisttpl leave addr16 (bad) mov mov hlt cmpxchg loope in fisttpll mov repz sub test adc loopew xor sub fwait lds std (bad) push adc or aas test test or cltd xchg aas xchg lret jle inc popa mov push lea test jmp mov in aam push xor adc mov jne ffree (bad) jbe (bad) cmp sbb add cmpsb fild push lret mov xor inc or xchg and and jle dec mov push lret or xchg mov imull popf ja je add mov in mov sub jge cmp push adc test ja push mov icebp out inc gs lcall jno jl sbb loop cmp xchg pop adc repz es (bad) cmc jecxz sti dec gs pop pop inc repnz or adc push repnz scas xor dec jecxz jecxz pop xlat enter xlat fcomp mov std loop out mov mov or adc mov xor dec sub add jo mov jmp jb hlt imul out mov leave inc ret sahf cmc mov adc repz or aad inc lret inc push add sbb addr16 btr (bad) xchg out (bad) jno (bad) (bad) and push mov fwait adc insb out rcll cmpsb jo insl mov mov jmp mov in mov or ljmp and imulb add fwait repz pop int push insb jae push test mov and jo jbe notl xchg sbb xchg and xor cwtl and pop loope and adc lret push sub (bad) push mov (bad) pop mov out shll pop orl xchg lods sub mov nop das push and pushl inc mov and loop xchg jge bound dec jmp scas mov (bad) mov adc repz xchg and hlt jae push shld sub fdivs and or movsl xchg add int3 mov jno cmpsl mov (bad) leave or xchg cmp jb sub ficompl add fs add mul scas or mov mov das movl pushf or sbb dec sub stos lods out pop (bad) jle dec or imulb and and mov mov (bad) jle sbb lods add out je stc mov or xchg lock (bad) dec jg mov jbe dec sub push mov test jg jbe or cmpb cmp movsl mov (bad) and push stc mov rorl dec mov pop add (bad) negb enter or dec lret cmp mov rorl in in aam stc test push int3 icebp (bad) adc xor sbb jle or ret jne int int int lret adc stc (bad) mov sub push arpl lods inc insb scas or or mov mov mov or xchg adc das cmp mov cmp mov cmp test pop repz stc cli je cltd test adc or into hlt jno pusha into jecxz icebp mov mov faddl leave cltd icebp testl xchg icebp inc leave cmc pop and xchg loope mov mov imul cmp movsl (bad) jbe pop push or mov dec jb lahf jb cmpsb xor leave jmp xor std mov into cli ljmp xor test cmp loope push out mov adc sbb cltd or jbe insl inc shr andl adc jg sti jl or adc out (bad) mov sti rcrl xchg lods or cs fistp in inc rol iret xor fbld or push or cltd cmc jl addl xor or pop dec rcl imul sub add jb mov test out mov fs sub test inc or aad sub bound dec jb loopne clc mov insb sbb (bad) enter push pop pop or (bad) xchg mov xor push jmp mov into mov ja (bad) out adc imul cmpsb or sahf cmpsl shrl in sti push fldenv into push adc int3 jno dec das jp jg div mov xchg cmpsl idivb ret xor adc into xlat mov push mov pop mov xchg add xchg int loope cmp int3 out test mov add or jg jno xor ds loope mov xor les mov hlt (bad) or lahf in insb clc ror or pop and test stc aad mov js and aam or aam ficom repnz sbb or fldenv and adc repz addr16 (bad) addr16 adc fnsave mov in mov add push push in pop fwait pusha pop push jp mov test adc cld (bad) fdivrl adc repz sbb dec sub test jbe push sti jle fist movsl dec loopne fnsave adc fstps in inc lock test (bad) push cmp mov aad in outsb add int std push out sbb mov clc sub aad out roll push xchg ljmp mov jbe or add mov jle jp into cmp sbb call cmp jns jmp pop iret ret ret cli je inc xchg popa mov adc std lahf mov or out mov fisttpll adc js mov ja in shr mov addr16 pusha push cld paddw push and cmp push mov add xrelease insl jmp xchg push mov inc cmpsl fsts xlat (bad) mov rolb sarb daa int3 les ja jecxz adc andw adc std mov test and sbb xor test xor sub xor test repz cmc xchg jo test cmp repz jae icebp mov test dec mov adc jno lret lcall clc movsb mov aad sub jmp mov cmp push cli push mov adc or jmp pop stos inc jns mov mov in in inc call xor je push stos sbb popf or std icebp (bad) cld adc aam push movb inc repz xchg pop loopne dec pop test ja loope xor or les (bad) pop stos ja cmp mov mov in lods scas sub jp jmp pop pop dec jmp add insb sbb mov repnz and fidivr pop push dec nop out fisubr jmp rcr (bad) sub xlat shll push (bad) cmp cli lret mov js in loopne sub and jg int3 out jecxz mov cli call int3 lods repz xlat xorl xchg jns ja addr16 cmp add jg fldcw xchg adc mov nop xor or dec imul (bad) aaa fcmovbe xchg movsl rol ss nop mov add stc pop pop jle mov divl mov mov xlat std rcl add adc jae xor test dec loope lea cld aad fnsave jo or hlt insl loop xchg clc xor jmp sar jp lcall es loopne fildll es int3 cmpsl stos aas (bad) std in jge push mov repnz cld movsl mov (bad) stc scas push enter xchg imul jno mov stos mov (bad) daa dec loope jo out add lods daa ret shrb test lahf enter in (bad) jle scas or mov push loopne fdiv cs jmp sub xchg inc mov xchg inc aaa jmp cmc out aaa dec aad mov xlat jecxz in movsb adc or lock or divb jo out je mov adc mov or int3 jbe mull mov adc jb cmp fcompl jmp test divl mov xor mov dec shrb loopne sbb hlt xor lahf or mov inc sbb push push adc mov cmp in pop in jmp call cwtl inc in in mov mov or push flds fstl fistp insb ljmp outsb arpl jno mov pop lock jg jo xchg or mov mov insb das cld inc pop mov xchg sbb xchg mov mov icebp hlt aad ljmp inc (bad) jbe notb out cli jge adc lock jp push aas fbld fld xor out repnz arpl data16 call fwait cld xor stos and cmpsl (bad) cmc cli or mov rcrb out cmpsl fcoms or mov mov adc fstps out add sub mov outsl add fdivrs stc mov (bad) push into aas cmpl mov jmp aad dec leave and jne mov jo dec mov pop mov push loope jo lret sub aas and mov hlt xor xlat aas jo cmc cmp xor out repnz xor test jb mov aaa xchg or rol add out fs inc pop pop mov (bad) popf dec (bad) sub or ja loopne mov adc popa or test lods add mov xchg xor stos stos loopne icebp lods jmp add pop (bad) jb dec sub jbe sbb icebp xchg fild push or fs add pop stc adc mov pusha sub cwtl enter loope loope jl push jmp sarl jo cmpb repnz mov lods mov std negl mov cmpsl stos cmp fstl rorl das cli fnstenv mov ret aad int lret jge adc xor sub xlat cmp stc jle jnp adc clc adc sbb add cmc adc mov outsl pushf jno add in lock int push pop stos sub jns push jb (bad) or out push pop out cli jge mov (bad) rclb aad (bad) cld or loope sbb jne add lahf imul add jae imul sub sub sub jge sbb inc scas das push lcall jns rcll inc xor dec cmpsl sbb sbb push push lods mov cli xchg lods lock mov js xlat lea popf in lods xbegin in out fstpt std adc icebp fstpt cmc adc insl fs pop cld inc xor xor cmpsl jns inc mov mov jno in dec inc sub mov lods pop out jl rcll test xchg jmp mov sbb sti mov rcll cmpl xor jb icebp fisttp aas js stc lock jmp loop sti lret stos repz hlt sbb xchg push rcl xor test das int3 jbe mov in dec leave adc cmp sahf test in mov scas cmpsb xor push jg lahf and sbb mov in jecxz jae cmpsl (bad) sti jle sbb jne mov sbbl sub adc cmp (bad) ljmp mov pcmpeqd loope ffree or cmovge mulb (bad) out dec (bad) loopne mov inc (bad) leave shlb rolb mov stos (bad) hlt mov shl inc pop add into push jp decl push or push add sbb xchg aam xchg sub (bad) and xchg pop mov aad (bad) mov sbb mov out test cmpsb repz mov pop mov enter jns test push mov insl lock out push in pushl mov aad pop sub enter lret enter aam and cmc pop jg outsb lret movsb scas pop mov mov or lret push lret jns jbe int3 xchg or lahf cmc adc cmpsl inc in xchg stc mov std sbb mov cwtl pop (bad) and ret pushl and push xor adc pop in jns cmp and int cmpsl sti push pop cmc loopne rcll ss fcoml mov test jbe cmc loopne (bad) cld adc mov imulb sbb into into inc out repz mov aas sub mov or mov inc imul and xor jo cmc xor icebp jmp jb stc (bad) adc pop testl daa je fidivr dec hlt sarb lods stc leave mov jae ljmp mov xor fldt das pop mov mov lmsw sarl je dec out xlat decl rorl xlat loopne dec jmp je mov jmp jl sbb inc xchg adc test or mov jmp loop mov jg pop lods test mov xorl mov iret call cs fdivrs or mov mull mov call sbb stos std aad ret (bad) jge xchg or dec or repz stc jg hlt enter jne testl js negl icebp xor lock jp adc adc jle sarb repz sti imul imul jbe loopne std (bad) push sti cmp dec aaa add cli jbe (bad) cmp test jns loope divb mov xchg dec fldt adc mov xor daa inc sub mov jbe popa and push mov mov test jbe popf push and das aad mov mov scas ds push (bad) into daa divl les add test mov or mov cmp cs in xchg jle popf lcall pusha or jle fnstenv cs lea cmpsb addr16 jl sbb jp adc in cmc dec cmp pop test jmp hlt (bad) cmpsl sarl test je add out push int push test sti repnz adc into cmp or lret lcall xor add fidivl and aaa pop xor mov add push jp sti test adc xchg out adc and shl jns addr16 js or jg fxch test loop adc (bad) cltd and enter adc in or sub divl out (bad) shlb jl lods in iret stc arpl push push jo dec push xchg ror cli jae inc js sbb cmp jl jmp jg pusha xor aaa loop inc mov fcoml adc imul lock xor and out pop imul rcrl aad sub jg jge icebp mov into in insb or pop jmp dec cs lock rolb fucom jbe icebp in aaa popa cmc jbe adc jle outsb adc xchg xchg push xor jo std cmp stc mov gs xchg in jle enter ror mov adc mov mov aad adc (bad) repz addl mov bound inc or in icebp enter add cmc adc icebp popa adc pop sub xchg pop call rol adc fsubp push xlat cmc stos xor arpl (bad) aaa inc xlat hlt mov or sub insl jp xchg lock mov aam sbb aad mov les hlt xchg jmp ficomp repz mov inc cltd jno (bad) (bad) xchg push lock push jbe xchg (bad) xlat xchg mov ja or fcomi xchg adc adc xlat arpl clc jle add xchg aad jle test scas jo xchg cltd mov mov mov negl (bad) outsl or out sub jmp (bad) int cmpsl mull in sub icebp sbb jae std mov mov inc leave add hlt mov incl std jge fcmove fistp adc mov cld jg loope in jno mov loopne adc mov inc fndisi(8087 xchg mov adc aaa daa jge push inc out aas incb or jg in add clc fnstcw ss aam out jmp call ret into out cld pop jg,pn cmp sub cli mov add fstps sbb pop jmp push jmp add cs push push (bad) dec xchg rcrl (bad) stos std shl scas in inc jge loop outsl push sub mov pop mov jl fistl mov in loope (bad) dec (bad) xchg mov leave in xor lgs sbb fidivl mov mov (bad) (bad) sub mov xor es mov dec in jle int3 mov popa jns test xor fnstenv add leave test jns fyl2x repz add jno movsb clc mov jbe jg jge jmp ds or cmc loop scas jmp mov or mov adc test cmp and push push mov inc lds sti in stos bound f2xm1 jle imul out mov push es mov jno jbe jo mov fdivl call outsl cli or adc lcall xor test mov cli (bad) test adc pop out hlt mov iret ror arpl jno and push or subl clc sub clc (bad) (bad) sbb mov xlat jbe je adc ljmp shl sbb push rorl popf jle (bad) xchg and mov inc dec clc mov scas and adc mov call mov loop shr fisttpl mov cmp dec push dec (bad) or cmpl jae xchg gs mov (bad) fstl pop pop movsl andl add jge pop mov int in cwtl push mov movsb adc push (bad) adc xor add aad mov rclb xchg insb (bad) call call adc mov xchg dec jbe jp je (bad) (bad) jmp js movsl cld enter les lods stc (bad) mov out sbb mov mov pop xor lret (bad) or mov mov aaa addr16 mov push dec or es aad lds ljmp adc mov push fdivs jge xchg mov ret sub shlb adc aad cltd push call adc ret icebp push xchg pop adc daa gs mov and jg fstpl mov fistpll gs cs xlat xchg mov mov cmp xchg aam fwait je cmp shl addr16 inc mov out lahf imul dec cmpb ja ja fabs inc pop fadd add and mov xlat insb lcall loope addr16 inc lds cmp fcomp xchg (bad) ja add xchg mov ds add fnsave xor int into jge leave (bad) fdivr mov ljmp int3 jns or divb gs xchg adc out xchg dec adc or add and es test mov daa shlb xorl out adc in mov inc mov push jmp fldenv loope (bad) dec jne (bad) aad std xor mov test insl (bad) xor xor push cmp jno,pt or or ljmp shrl inc fidivl and jne (bad) cmpsl loop mov jecxz imul (bad) xchg sbb imul addb cld mov cmp mov xlat adc les jge (bad) mov pop cld xor mov aad and mov xchg inc in hlt shl idivb mov cmp dec lock mov stc adc movsb aam ja aaa push push outsb call fs stc mov std mov test jbe pushf jo fcoms dec hlt in std mov push aas je mov mov lds insl (bad) call mov xchg jb mov repnz and adc lahf (bad) jne xchg out adc mov sbb in sbb inc movsl or shr jp test or xchg or aad lret adc xchg jmp icebp (bad) jo (bad) rcrl in hlt daa push (bad) dec push lock sti mov jle dec add mov loope scas leave into test fs bnd sub leave jo push repz pop dec (bad) into ss push sub aaa je (bad) jo and jmp add mov push clc jne push xchg aad cmpsb (bad) nop in (bad) dec std stc jl xor mov jo test (bad) jge jmp sti (bad) daa mov ret mov icebp int3 sbb (bad) mov test in xor aad push mov clc ror ds (bad) lock aad jbe sub mov jb lods lods das push xlat push lret dec cli mov lahf and mov jno pop cmp (bad) mov call mov insl jle ds stos add call popa in scas (bad) push mov lcall in jns (bad) mov cmc lock jecxz out mov (bad) xor dec fidivl push out ja mov in test push cmpsb enter mov push lock xor loope cmc sti push repz jo rolb out pop stos fldt pop pop daa out fistp adc mov xchg add icebp imul mov inc cmc xchg lahf mov cmc ficompl mov into and xor jl ljmp jno mov aam and icebp sub push aad loop fdivrl jae add inc mov mov pop sub jecxz or mov aad repnz sbb add inc call mov mov ds xlat sub push cmc negl aam out add sub mov sbb iret inc mov sub add pop mov lods xor outsb adc daa test xor aaa push push movsb aaa jnp outsl std rorb mov loop xchg sub push pop cmc (bad) cmp ljmp (bad) adc stc ja xchg jecxz mov popf fwait adc rorl or jecxz xor mov lock cmc cmp xchg stos out or faddl dec stc clc (bad) sti lahf cld lods mov mov ds sti mov xor dec aad dec ret pop rcll pop add mov inc jl mov xchg rcl sub sbb notl pop pop mov icebp mov xchg mov out dec clc add stos lods push cmp jne and cli inc push jo jl enter lret addr16 pop cmp pop dec adc repnz cmc mov xor (bad) adc rclb mov iret pop into popf add out jmp jo into bound lret in push dec jo mov xchg in ja pusha mov aad stc aam mov cmp push in sbb xchg push scas js aaa push mov xchg (bad) jne push and dec repz mov fs bound adc and xchg jp loope pop lcall sub jl icebp and cmp dec cmp add jno sbb je jae push dec jno dec ja jp sbb push mov mov or js std jle or mov (bad) dec js cmpsl adc xchg pop fisttpl and pop gs js pop jg cmc push sbbl mov push fisttp icebp sbb in add in xchg scas cmp shl adc js (bad) mov movsl jb jb lods jae mov inc jg mov sbb cli and adc clc sbbl in lret mov mov push mov mov mov leave or push and cwtl sbb jmp xchg test leave push mov pop xor xor lahf testb in adc mov adc (bad) or add and jo aad jae mov mov push (bad) add dec inc mov out jbe sub xchg (bad) pop mov pop xlat push lds (bad) lock and jp ffree out jno push push cmc loope jno push xchg popa (bad) mov cmpsb dec nop test and sub cld pop movl xchg cmc stos dec subb mov pop roll setne cld test xchg jns and fs sarl mov shl aam stc push int (bad) xor lock je into divb negb test fidiv mov ret jb clc psraw jge mov xchg jno rcr sarb (bad) jp lds and jns push jmp in stc jmp fs mov (bad) lahf mov mov into sub push ljmp or or (bad) mov push es shll mov (bad) pop mov andl adc cli dec xchg ljmp lea jne int add sbb stos roll or je test push mov pop dec clc mov mov xor adc jns adc aas push jbe jbe cmp sbb jmp pop pop adc inc not cmpsb pop xchg push pop sbb add inc (bad) (bad) xor ss out dec adc lret enter fdivrp repnz jbe cmc and adc inc sub ss enter sub adc lret popf in adc push sahf sub push xchg jle add cmp fdivl test mov out fstpl xor xor jle jbe stos and push dec movsl xor in pusha out das pop jo mov jo dec mov test fdivrs shr icebp pop scas iret daa lret mov and or add mov lods loope or cli xor and push (bad) mov scas lret jbe jg xor movsb (bad) cmc in mov fmul mov mov xchg out cmp adc les lcall mov call dec or sub sub sti rclb roll sub je mov punpckhbw out and addr16 push in cmp or fmul xor pop mul dec out mov popa adc mov or push jbe cmc pop in loopne enterw mov fldenv cmc insb ja in subl cmp add lahf loope stos in ss ret js pop icebp jp call lcall and xor jae cmpsb mov aam in cmp fstl xchg shl mov loopne mov adc les xlat insl fnstcw aam mov icebp fcmovu xor mov xchg jg or cli jb pop mov lret inc xor xor enter mov sysenter outsl cld pop in xor inc gs mov and sub fildll ds js sti les in mov mov mov dec aaa rcr cmp stos (bad) hlt popa adc mov aaa and jecxz js mov rolb jbe pop (bad) bnd out scas push ja jmp rcr or inc out mov xor stc jno and fdivs sbb jmp pop jns jmp jns rorl xor jl sub push cmpl aas add mov or sbb or sub pushf shll mov push call push mov mov loop cltd add pop lock inc mov fimull mov incl js loop push sbb push pop (bad) sti jecxz stos cmc add gs aaa and sti adc jecxz xor pusha jmp lds repz mov decl into sbb fild std leave leave test pop sbb jns rcr (bad) sahf add dec mov sbb lret jl or add cmc fisttpl (bad) mov loope or jmp sub imul test decl push pop aaa jb ljmpw hlt cmp mov (bad) icebp xor cli add sub test lahf negl lret (bad) aaa outsl inc ret sbb or jecxz pop jp and int3 pop aaa jle jle ljmp add scas and sbb popa pop bound (bad) cmc rclb stos inc sbb je jbe cs jo jl mov std cmpl je mov mov mov pop cmpsb mov fdivs inc test mov repz fsqrt inc xchg negb adc int3 test add rcr lods (bad) lret aad sbb jecxz cmp jmp loopne mov jle in mov fmull xchg cmp loopne inc xor icebp je xchg add and jae pop xlat and ds ljmp stos jl sarb dec and dec out push mov (bad) cmp movsb add lret push das inc push push xor sbb into call lret call push test test scas (bad) xadd cli fnstcw fidivrl push xchg hlt inc mov and je daa mov push mov out jne sub test cmc stos cmp pop (bad) mov mov dec jno lock pop cmc movsl fst adc out jl or mov out add ret adc sbb pop test (bad) ds aaa xchg jae out cli je int3 cmp enter inc loop (bad) (bad) cmc jno std adc xor data16 test movsb shll out negb fidivr dec ss mov jo stos mov mov adc aas aam jmp fs jl icebp cmp mov lock push add icebp mov cwtl sub lock push jp add mov call daa loope jb je icebp shlb ss lret clc icebp dec loop stc mov icebp rorb pop lahf inc std jmp pop mov ret test or sbb cmc push iret mov int mov (bad) loope jne or xlat ljmp nop mov loope mov bnd test leave mov cmp jo jl cltd sbb adc inc repnz mul jne inc cld jmp (bad) xchg cmp enter (bad) mov std sbb jmp sub add xor pusha aaa negb clc je cltd in arpl dec push inc adc ljmp ficoml lock enter in incl xchg test ja dec mov push push add out jle or in pop mov cmp jne sbb push loope in mov repz dec xchg inc in mov ror mov cwtl mov mov repz fnstsw adc sbb pop in fs out repnz jl (bad) (bad) ret mov inc xor fnstenv and mov test mov (bad) xor jl hlt (bad) mov icebp repz mov movsl jl mov mulb mov cmp pushf xlat pop push in xlat mov pop ja adc push aas mov stos mov pop movb gs cli dec dec imul inc mov adc and and mov jb enter sub popa fbstp (bad) cli xchg je aas mov xchg lock cmpsl sbb pushf lcall les xchg cli mov adc out mov movsb sarb pop fwait jne mov fcom mov jne std xchg ja sub and outsl in inc pop rorl cmc leave push leave leave (bad) data16 outsl pop mov mov jae or addl xchg mov lcall mov repz (bad) mov cwtl rclb jg mov mov lods cmpsb (bad) mov pop js inc mov aad (bad) fidivr loopne mov icebp xor imul inc push fs arpl aas fcompl mov jbe jne pop xor jle insb and std lock mov mov test inc (bad) jg loope sahf cltd mov jge daa je dec aad (bad) sbb cwtl add (bad) lret fdivl test adc (bad) adc insb xor mov push mov and movsl lahf or push mov fidivl push mov stc cs movsb push cmp cmpsl fidiv test call sub dec fistl cmp leave (bad) fisttpll repz aas ja push cmc ss std pusha push loop pop xchg flds daa push (bad) jae flds lea xchg add lea and mov jns jle mov scas mov jbe push jle outsl push mov (bad) test call inc scas (bad) cmc mov daa out jge mov fdivrl jne cmpsl mov xor dec fldenv mov popf pop punpckhwd xlat jl cmc jno mov divl push sbb and jle jns bnd cmp add cmp xrelease or leave push ret gs mov fmull mov lock test aaa je or add gs xchg mov mov push js into jbe lahf fcompl sti or ficomp repz inc inc out shlb js sub sbb cmp fisubr dec aad jg std test adc (bad) call std fcomi (bad) xor dec mull int3 icebp mov mov sbb push mov inc and test je add mov dec gs xlat insl fs jnp inc fs jns xchg mov jne insl rolb jns adc push dec call lock sarl adc rorl and in jmp mov jns bound push xchg lret jbe mov (bad) push in fwait inc fdivrs stos into ja je lods xor adc or xchg cld jnp out cld inc mov xchg mov (bad) rolb or out jno shr clc mov cmp and xor xor dec sub or xor iret and (bad) addr16 jae fldln2 les and add arpl jecxz jbe sub stc aaa ja (bad) jbe jmp and stos sbb mov sub lock scas (bad) xor inc adc test pusha ja loope out mov call mov mov xor xorb pop fcoml cld fstl jns jne sti fsubrl jmp add mov xchg jno pop jecxz mov fbld icebp pop loope xor inc leave stc fnstenv inc sub mov mov (bad) dec out loope push hlt aas sti or roll lret inc adc movsl (bad) lock sar (bad) xor out idiv xchg sub aam dec icebp mov cmc enter movsl xor adc leave mov icebp sbb mov mov jo or daa leave call inc dec and inc inc test (bad) dec popa jb clc scas icebp into in and test and jns fistl repnz aam pop test cli lcall mov mov rclb loop stos mov fwait mov xorl xchg rcrb sbb mov dec push out jl bound mov push jle adc jb testl pusha aaa xchg add jbe cli jge xlat add icebp push (bad) and dec leave mov adc mov fsubl pop sub ljmp inc xor cmp sbb xor dec test push dec cmpsb push cmpsb into cmp dec stc arpl rolb not jbe imul mov fimul idivl inc xchg push out js nop cltd xchg cli adc push push inc pop fcomip movsb aas sbb sbb aam mov jns rorl daa insl jno (bad) inc mov movsl lcall into push in repnz ds fdiv leave daa mov pop mov lahf scas hlt sub or shll cmpsb mov add insl mov sub repnz sbb sar push jmp lods adc push xchg add sti adc icebp push not dec mov push sub pop aas lods cmp xchg push aad mov (bad) hlt jge dec xor mov fsubr jl sbb or in or sbb sarb cltd add stos lods mov lahf lock xor fcompl jb jbe jnp cmc ja ljmp lret icebp mov enter mov pusha outsl mov dec (bad) sbbl mov push adc cmc sub mov push jecxz repz je stos mov adc clc out xor inc add mov xchg jge ret pop push in cmc ljmp lock lods push mov cmc lock (bad) mov test and (bad) (bad) mov imul sbb mov cli push leave add xchg cmc jns cmp std xchg jns add loopne div adc leave mov xchg call jp jp xor inc or js and dec (bad) push push mov or jno movups inc inc (bad) fimull leave call gs hlt les lret std lahf cmp add gs cmpsl push out loope icebp inc jno (bad) xlat cs mov mov in fimull cmpsb or loopne loopne test clc das clc mov insb pop fcomps scas mov hlt sbb shl lods mov jbe sub cmc lock add std (bad) repz mov ljmp repz push movsb push movsl jecxz mov shlb popa scas mov dec sub jecxz push adc inc push cmp stos gs xor mov aam adc and (bad) jo xchg add cld push sbb daa and repnz jae sar cmpsl push enter xchg (bad) lods pushf jmp dec adc stc es inc push (bad) std std xchg stos lret pop sub std movsb adc repz aad repz clc jmp aam mov sbb xor flds test (bad) sbb jl insl dec inc push in repz xor stos cmp inc call pop fisubl popf push and xchg cld sarl push fnstenv leave dec lock std movsl sti hlt mov sti packssdw aam xchg shr sar scas cld sarl rcl dec movl xor dec (bad) jg cmp sarl bound add in (bad) idivl jnp sub mov jns adc push and sub jp or (bad) js pop jns addr16 stos pushaw mov insb shlb jmp clc mulb (bad) xor daa or ror leave lea repz scas inc test pushf in jp icebp inc popf mov divb mov cltd int shll fcomip jno mov xor bnd ljmp mov hlt rcrb xchg xchg jno out xchg imul add xchg sbb xor or addr16 sti lock in jle je les incb sbb mov xchg xor sbb mov mov leavew xor pop push inc hlt ja mov mov aam mov lret (bad) lret xchg inc dec pop or mov push lock stos in (bad) loop insl arpl addr16 inc (bad) lock or outsb push idiv jge xchg in lds ss mov mov or fwait inc xchg add jmp push jo jl jb ds scas cmp dec and sub or xor or jle ljmp jns lea scas stos pop and lds mov scas (bad) es in adc imul or cmpsl ss fist pop lahf cmc or xor xor jg jns push mov cmpsb push mov (bad) loop and xor fadds sub lods aad repnz faddl jg jne sub add xor inc and dec rcl (bad) sub ss mov scas xor negb mov fdivl movsb xor pop es cmpsb ret sbb mov scas pop lea and ss das xlat test xchg in data16 gs rcrb int pop loop out (bad) ret jo test mov mov pop mov (bad) repnz sub test push mov jmp lock xor das ja adc fwait int leave cmc outsb lret dec mov push xchg inc sub mov loope fisttpl or inc jbe push divl test pop mov sbb movsl ljmp mov cmp push xor mov xor out mov neg lods mov or test mov mov add jo scas (bad) ljmp adc cld movsl jg (bad) sub lea popa cmp call pushf test dec pop jecxz mov inc and stc adc mov in stos scas fucomp jbe lret mov jno sarb arpl xor cmp dec pop jbe push les fiaddl sub notb sub test mov popf es int3 lcall xchg lods out notl adc sub cli shl fadd push cwtl add sbb lret or or hlt mov gs jns rcrb (bad) jecxz fildll pusha jne inc leave clc push pop enter aam cmc popa test pinsrw addr16 push cmp push leave mov loopne xor in mov hlt mov adc addb aas shrb xchg shr sar adc adc add jl sub xchg inc fidiv pop cmp add mov mov fisubrl out add test in call out mov adc or xlat (bad) xlat or imul pop cltd adc lods lods dec mov mov ja adc cmc outsl xor in lock xlat mov jmp sub aad push imul adc adc flds xchg pop arpl add jge dec cld push mov dec sub pop xor or jae out mov loop int pop rorl movsl mov cli mov xor sbb push ljmp lahf jne adc (bad) jno hlt jp and imull dec stos in or mov mov scas stos int3 add push fdivrs jmp pusha add rol mov in into (bad) jb and mov scas jns adc orl sub scas cmp fldt mov aam sub aas shll and popa imulb into ljmp aaa adc ret push cmp mov mov cs pop hlt jo aas mov adc pop push clc or cltd sub test pop inc out jo mov jbe cld std enter mov cmp add hlt and mov or aad in jmp js es pop mov xchg int3 jnp imul stos int3 jns stc mov icebp mov icebp lret call jmp stc ja jmp jp mov icebp sti int3 addr16 mov push jae lahf test mov push bnd mov lret jo mov pop inc xchg xchg pushf sub or push and ficom dec call xchg out imul xor mov lock lods jle add fdiv ffreep xor daa xchg adc dec dec dec mov mov sbb cmp sbb mov dec int3 fmul aas sbb sbb les ja repz clc jae lods add mov or cmp std rcl sub clc sbb stc mov aad xor aad pop icebp jecxz gs jo lock or stos movsb aam cmc divb jae es stc cmp sub and mov lds sbb mov (bad) cmp aad js pop scas shlb fs inc mov mov rcl jecxz (bad) icebp mov pop arpl xchg enter xor push movsb mov cmpsl or mov jmp int shlb out dec xor rcll ss jo inc fbld xor sub lock inc in (bad) dec mov loop cmpsb std or test adc jo adc and mov jg cs cmpsb mov dec push les je addl cmp mov test dec and and decb dec mov xor cmp stc xor mov scas imul out aad mov dec mov je pop jecxz imul (bad) or add stc imull fs dec and aad stos or jecxz jo xor or adc movb std mov or lea mov add fist sbb cmpsb scas adc pop decb outsl mov cmc hlt out mov or and fmull adc or das out push fildll fcomip test mov stos lret push ret es fcmovne fmull adc rcrb or mov xor std stos mov je sbb aam pop (bad) sti lds shr mov xor fwait lahf mov sub cli aaa mov rcrb mov jg cs test (bad) xor pop xchg sub dec addb ret aad adc jecxz ret in stos lret push movsl mov shrl adc jecxz,pn xor push lock xlat mov repnz clc xor aam pop call aam add push xor xchg adc mov cmp mov in mov xor (bad) fild nop sub in or addl sbb out cmp sti jl or mov or es (bad) cmpsb jl fdivrs out movsb add nop add cmp or dec pmaddwd xor jbe jle push into insb aaa adc fisttp jmp es jl mov call in test mov jl sub insl inc popf xor shlb mov scas leave out notb imul cmpsl (bad) icebp cmp bound lods add or std pop jp fimul push cmc rol jo or idivl sarb ret fmuls and test inc xchg dec loopne mul dec pop sbb fucomip test mov fs push out jl movsl sub inc pop pop cmp pop jno jmp adc push repnz aad ficompl neg dec movsl dec int3 or sub adc sti jl cmp lods outsb mov sub xlat test aad test sti mov out mov mov (bad) mov push lock std (bad) stos mov push sbb pop rcl addr16 mov xor dec xchg pop push jne inc lock repz mov lods inc rorb cmc test mov rcll (bad) jns push lods mov clc outsl dec xchg sbb dec sub divb (bad) cmpsb je and jmp lock leave insb jmp cmp mov cmpsl mov orl cmc or mov ljmp cltd std cmp fwait in pop pushf dec aam loopne aam add (bad) sbb fidiv (bad) int3 clc sbb fimul or dec bound fmulp hlt mov or pushf icebp mov movsl inc jg dec mov push mov push in lods mov pop mov sbb ret loopne mov sub mov sahf push mov loope push jge add fsts push dec push inc xlat jo jbe xor inc sti pop in popf pusha mov repz imul or push outsb jbe jne int mov xchg jle jne ss xor cmpsb insl mov lock icebp lahf inc cs xchg mov mov dec ljmp xor lock mov add jb dec test test popf jb dec adc xor push mov xchg icebp fildl mov jl bound cmc jb cmp adc and enter or or or clc pusha ljmp mov out cld hlt mov dec xchg rorl pop sarb mov jae out cmc mulb imul (bad) fsincos jg mov xor jne mov jno add outsl xchg xchg popw add daa call sub fcomip scas test lods mov pop clc aas add dec mov mov sbb xchg pminsw aad leave cmp jnp movsb int3 add adc mov out and mov (bad) or cmc pop lods sbb jle jle sti push cltd (bad) out clc xchg add jg inc sub jno dec ljmp lods jns push mov lock mov pop adcb fidivr nop or cmpsl sbb pop lds dec or cmc mov inc sbb lret in push int pop scas leave cs lret mov adc into jmp test out dec or cmp aad jmp mov inc inc fstpt mov or mov repnz pop pop sub fsubrp and xlat cli fild adc cmpsb (bad) movl cmp mov jnp lods (bad) addr16 dec or or jbe es add test jno loopne in insl into adc mov aad repz mov mov inc sub rcrb repz sub adc sarl and mov das mov cmp fldcw jae sbb shlb icebp outsl in mov mov idivb fsub or pop dec pop or data16 fsubrp (bad) dec loop sub insl push mov jne mov ljmp out cld stos (bad) push jl add push mov data16 loope jbe into (bad) xchg stos or stos in cmp out and jle push mov test lret mov push iret js (bad) fsubs in pop and xchg in adc lea aam sti xor mov mov push adc in push push sub fnsave popf lock xlat dec (bad) leave mov mov test adc hlt lods rcl sti mov js cmp pmaddwd adc fwait xchg movlps (bad) cmp aam stos or xor movsl jns sbb mov dec cli nop sbb loopne cmp fdiv cmp lods gs adc and adc sbb or test mov insl add call lret stc sarb push dec jg mov xchg mov mov popa rolb and aad fadds out lret jl in outsl jmp mov stos ret outsl jmp insb decl xor sbb into pusha push adc push (bad) mov cld insl push pop (bad) dec (bad) fisttpl sbb lods ret (bad) dec (bad) jo dec add lock jmp in sbb cmp and mov sti or mov in movsb xchg lcall ja aam out mov cmc (bad) adc push cmp std data16 sub inc cmp popf xor or sti insb push inc jbe adc lock (bad) cmc xchg fisttp cld std fidivr jno into pop (bad) adc test add repnz idivb aas jbe std adc pop inc pushl ss ss mov fsubr adc movsb push or aas add (bad) into mov cwtl popa jno test fstl mov cmc sub rol fnsave fisub stc clc cmp xorl jno jns sub jmp shl in pop xlat lret sub xor popa jno ljmp dec cmp cltd sbb lret mov mov or sub clc or test icebp adc mov dec or sub or add int3 mov adc rclb mov loop test or xlat stc mov or jle or dec cs sbb enter pop jns sbb inc dec fisub xor or cs mov pop push insl clc aad mov and pop xchg in or mov (bad) popl fcoml sub pop dec gs mov or push movsl mov stc sbb jae in (bad) leave and or cmpsb cli jmp aad jo shrl sti std fstpl repz fld1 or (bad) cmp fistp icebp add xlat sub push movsl es sbb push icebp mov ss mov adc icebp movsl aaa pop loopne sub lods sbb subl stc jbe popf icebp mov icebp test sahf xchg xorl dec jbe addr16 push jne mov call jge ffree jns call jecxz popa stc (bad) xor stc xor add clc push icebp pop jae push xlat sub add mov les repz hlt stc mov dec pop mov pusha out cld leave pop into (bad) enter out mov xor sbbl out xchg jmp cmpsl stc loope sarl jno clc fnsave (bad) in lds icebp jnp adc stc and cld or mov or add hlt pop cmc aad sbb fadds add out leave xor xchg aad dec in loop xor pop cs mov sub mov mov (bad) or inc (bad) movsl xlat lock repnz mov jae adc lock out aad mov js mov mov in lock mov push sub and mov les repnz mov cltd lock cmc push sub xor mov bnd cli xchg lods lock mov js xlat lea adc (bad) call inc xlat lock mov out dec (bad) mov push mov push mov xor inc cmp je or cmp pushf aaa xor cmc push dec xor or jnp aad das push cs stc sbb push cmp jl cmp adc lods decl js cmp push mov std enter fiadd stos (bad) mov repz adc pop dec mov mov div inc or (bad) ljmp push fs pop add (bad) mov sti mov jmp repnz repz mov cmp repz jne stos cmc mov shr jl sti test test mov adc test std imul mov sub fprem1 or enter adc add fbld stc adc or xor push outsl cltd sub sub fcompl adc pop or bound mov repz mov lahf jge mov enter lods cmp imul pop fist jo sub push scas data16 std iret lods push and test fnstcw int mov into adc mov fidivr mov aam (bad) aad sti inc notb mov jo (bad) icebp call repnz adc call (bad) test jl dec xchg mov push movsb jo loope mov icebp lret mov dec out xor ja adc sub jecxz repnz xor adc lds in movsl (bad) hlt call lods jmp (bad) adc cmc leave ja sahf out std divb and into xor and jb pop dec xchg mov pop xor mov sbb loope jmp cs adc dec rorb test add leave mull lock jo or mov (bad) stc sub or imul (bad) lods jle dec xor jbe xor repz scas xor cli call mov loop dec dec xor dec dec std push rcrb push push push add sti aas add sbb xor in jg or fadd jmp test popf das shl imul push adc mov fbld push test sub inc and pop cmc sub mov fwait mov fadds leave jmp xor mov fildll in cli idivb shr mov test or mull xchg jbe lcall add pop rorb ljmp mov push xchg mov jo or or xlat jbe in jmp aad and arpl xchg imul cwtl inc mov aam pop inc mov repz cli je adc xchg leave push push dec pop push hlt mov dec popa pop jp (bad) xchg xchg (bad) dec cmp mov sub mov iret fildll jnp mov add fxch mov dec in sub mov xlat movsl mov (bad) mov (bad) mov adc je aad lret push nop fist mov dec je sarl push and std leave sbb and repz mov shrb mov stos daa fcmovnbe test in push cmc lock add mov adc pop loope push mov lds push xchg and or into cmp (bad) mov (bad) fldcw sub jo cld je adc (bad) fiaddl add out push pop mov aam mov cwtl mov pop gs cmp leave icebp aaa jbe movsb pop push (bad) jae lods rcr mov cltd add xor (bad) out add jl xchg lods inc push (bad) jo xor mov or mov adc aaa out stc inc mov cld xlat and jp (bad) fs clc sub jno enter aam sar test sub mov divl adc xchg loope fildl dec (bad) adc inc mov movsb lods aad xor inc insl jae movsb jp xlat rorb cwtl in jmp pop mov (bad) aaa jnp movsb pop cmpsb aam pop pcmpeqd daa bound scas pop in fistpl push xchg ljmp int adc arpl rcll mov mov xor cmpsl fistpl mov loope icebp cmpsl stc xchg jmp call frstor je aaa push in sub mov inc jg out cmpsb sbb xor lods mul adc mov jle jle pop add jle xchg out lock mov and push aam sub cmpsb add pusha sub ljmp sub sub pop aas test xor shr aam outsl or jle cmp mov mov jns push mov test das inc dec push sti jb out test cmpsb out add movsl dec inc fcmovnb mov cmp iret push cmc cmp rolb (bad) xor movsb or idivl sub (bad) sahf sub aas aam or repnz inc es mov xchg xor and cmp mov sarb sbb xchg adc mov stos fisub pop scas int3 call and sti add jl movsl jle in jl or dec mov pop inc lods rcrl pop xor mov scas ja aam (bad) sbb mov push push push xchg or sub out adc dec mov jbe sub xlat inc jno imul daa int divl mov xchg loopne add (bad) mov ds fiaddl je adc push inc (bad) repz fnstcw xchg in repnz xor rclb insb inc cmp fstps jbe orl cmpsb pop sub xor inc out sbb jo sti jmp mov xor aad loopne cmp dec sar jno sarb cld mov imull rcll mov cmp fs into lds and jle adc jno (bad) mov adc mov nop repnz xor insb not sti repz repnz aad out jns adc pop mov jb (bad) mov xorl cli gs mov bnd jmp dec sbb (bad) int3 xlat test test and aad stc adc popa daa std lock ror xchg nop ss clc rcrb cli jae and sbb sub addr16 or mov scas mov incl xchg out mov add sti lds add mov lcall mov adc inc je jle testl into xor push enter je fsubs pop mov call mov fdivs out lret xor mov xor jnp mov add mov pop roll jae pop outsl in dec into not mov je jl sbb add lret in mov mov fnstenv dec out inc int fcmovb call enter lods (bad) scas cmp fsubl xor stos fisttp shll mov mov or cmp icebp push test xchg jbe int in adc testl mov dec mov in xor jne leave movsb adc cmp xchg mov out aam pop xchg clc xchg movsb fdivp push jo shlb idivl jo jmp pop jmp xchg ja jnp add imul enter out aad movsl fdivr vpshufd ja mov jns js clc dec mov in scas mov mov push push stos xchg mov mov leave loop mov (bad) in mov mov int addr16 jg enter (bad) clc movsl imul jno,pn stc lock dec repz imul mov xor cmpsl cmpsb out (bad) jbe hlt mov cmc xchg jno mov pop mov or iret mov aas arpl mov ja inc jecxz jmp push mull cmp es push mov (bad) int stc mov jmp cmp xchg sub and cld scas xchg jo leave jp mov repnz sar stc sub out push sub mull xchg call cs leave or xor stc mov shrb xor or idivb ds sti xor int out fdivl xlat loope push mov dec insb cmpsl clc out xchg movsb cld jecxz pop sbb jle sti mov in in add adc adc mov fcmove sub bound fidiv stos je (bad) out xchg dec movsb icebp adc hlt ja std testb mov ds (bad) adc cwtl cmc pop push and fs or cmp cmc pushl lret test mov (bad) arpl mov push mov int dec lods mov stc xchg mov popf mov aad lods fsubrl stos rol dec mov pop fisttpll fldcw ret loop mov inc sbb leave test popa mov adc ds leave stc in jge loop scas jmp jle xor pusha mov fcompp xor adc adc cmpsb xor test clc pop lcall js pop jp stc push pop test mov fwait pop (bad) movsl dec sbbb loope jp test cmp jecxz loopne fildl jne or mov out inc add cmp xor stc cmpsb clc inc pop hlt insl add fs xor mov push jmp mov sub and clc out cmc jl in ret out idivl dec loope or fsubl jmp rclb xchg jle scas mov addr16 out out mov jg mov out pop (bad) std mov out lock (bad) jg clc dec call repz stc mov subl mov (bad) mov sbb dec mov push mov lahf test and jle pop fstps je mov adc hlt aam out or hlt (bad) daa inc loop pop scas or jo cltd lds jmp stos jmp or mov lcall faddl mov sub lret std divl mov out stos pop mov adc or int3 inc adc xor or popf add push imul xlat mov or (bad) leave sti cmp pusha jmp push sub fsubrs mov mov jbe imul mov mov in jecxz dec lods repz cmc scas call std mov out (bad) jmp add nop and (bad) ljmp aaa mov adc mov and mov int mov ss inc xchg int loope add pop mov push lds cmpsl inc fidivl int3 insb (bad) hlt stos hlt push mov dec pop pop push jo and nop xor push or cmp je or xchg or dec (bad) xor or mov mov loope push dec pop jl int xor sub mov divb int3 fcomi push bnd aad mov movsb cmc mov mov out mov (bad) sbb call sbb or or lods dec push xchg jno pop mov test pop jno push stos lods add in mov mov pop jg int3 jmp jno or cli inc or jo push es loopne xlat mov fstp jb mov aaa test push xchg or cmc or mov inc add (bad) mov fs (bad) xor fist test push inc pop jl inc and pop dec mov insb ja (bad) jbe jo lcall push xchg fidivl or jmp imul lahf dec pop inc sahf add fwait push test rorb or daa add push push sarl add sbb mov xor shlb in xchg and sti mov adc mov push add push mov arpl pop pop lock jmp icebp cli fs cmpsl dec aas je fdiv fistp adc lahf ret add jns jno xchg or stos or cld cs aas movsb aas cmpsb or adc push addr16 cltd out jl fistpl outsl iret lret lahf dec xlat mov nop fwait call dec lret bound (bad) lcall inc mov sarl mov add add cmp icebp clc notb ss xchg fcmovnu xor icebp std idivb push mov lods cmp movsl movsl or cmp xor cmp and (bad) repz mov push adc lods xchg into mov cli dec mov pusha (bad) out shl call lock add test xchg insl (bad) jle mov sti stos aaa stc jecxz imul xor cld std test std call cmpsb cmp push and divb nop scas ret sbb decl js fs out in fs mov mov inc jo cmp popa lods sbb xor sub out out test iret call push popf aaa adc mov int3 sbb or mov lods icebp xchg lret fisubrl nop adc xor mov mov mov daa iret (bad) fsubrp inc dec das into inc cmp stos mov clc lret cmpsb adc xor test add fidivr repnz adc xlat in xchg adc mov xor jl ja stos cmp test aad mov adc insb xor mov pop out sti mov ret js adc sub clc imul jnp clc inc mov xchg or lahf std mov xor xor push adc add jle mov out and (bad) hlt cmp test sbb adc inc sub imul outsl add rep mov adc push mov jmp addr16 (bad) push mov fildl and cs arpl or add cltd hlt out jle out push and cmp jne jecxz push je jns clc arpl daa dec add incl popf inc divb xchg sarl cmp ret loop stos jne jbe adc rcrl push cwtl jg mov dec cltd imulb (bad) jbe xchg test (bad) daa fmul push ljmp jne out scas push pop fsubrs mov cmp rclb (bad) fbld punpckhbw je (bad) repz das lds out adc jecxz daa add es scas out xchg rcrb xor int dec mov mov mov decb leave in mov cli in gs jle lods add push lcall cli inc enter std cwtl repz mov loope cmpl add add jbe push xor mov int ror and adc mov fldenv dec (bad) imul icebp dec frstor sub ja jo hlt enter (bad) repz mov popa gs sarb icebp or jle aad adc add loope lea (bad) sub adc xor pop (bad) push dec nop cwtl inc data16 and mov aas and leave subl cmp repnz sbb xchg push decb std ss insb popf lcall push sbb push bound and mov into aas sbbb fld cld and sbb xchg mov loop mov out stc (bad) stc xchg lods pop fsub gs jl adc jl push fisubrl stc xor bound add movsl or in test pop xlat mov and or (bad) loop pop jnp notb pop lods repnz call outsl pop and out cmc cmovnp out dec adc add inc cltd addr16 xchg std mov pop rclb dec clc mov cltd push pop xor test sbb pop and enter fwait xor stc mov iret fisubr in ret (bad) xor idivl fidiv jo popf dec dec push and rcrb add (bad) jbe inc sbb loop dec loopne stc test cmpsl sub mov ljmp push inc adc hlt ret repz aad xor repz int3 push stc xchg jge movsl cmp cld mov stc in imul gs clc jp xor icebp cmc sub jl fistpll or and pop mov movsl adc rcrl cld lock in dec rcrb movsl mov sub or into out lahf test ss push xor test adcl push jbe mov dec loopne mov icebp xchg push lods and jb and sub fistpll xlat sbb imul dec dec (bad) (bad) and cltd aam sbb or mov aad fcompl je xor cmp jns cmc cltd push push arpl mov inc dec pop mov in or leave idivb aad loop push adc icebp mov mov movsb mov sbb add xchg shrl aaa (bad) orl iret push mov in int3 repz xchg sti sbb xor std inc dec sub mov lea pusha lock clc push inc mov xchg rorb movsl jle mov xor fdiv mov sarb lahf hlt cs push int3 jge pop sub push cmpsb (bad) lock inc enter sahf aas movsb test lods stos scas xor ja mov jbe,pt lea jne cmpsb jle inc test xchg fidivl add push in fldenv add outsb icebp push out lahf add add idiv add adc cmp (bad) std repz enter shll loop es sbb adc iret (bad) cli pushf xor xlat fadds mulb adc push add xor push lahf push in xlat inc mov (bad) xchg jne pop outsl loopne inc shrl stos stos ret sub add stc out lods arpl mov xor sarl cmp aad in cmpsl lods inc adc xchg pop ja dec cmpsl mov cmp cmp xor jmp je cmp and and ficoml les jo mov jmp daa or addr16 movsl hlt xchg cltd mov push lock or cmpsb adc fisubr loop xor testl and ret jo mov pop mov popa cs outsb sbb mov addr16 std mov movsb in cmpsl mov inc aam adc test cld (bad) mov mov jne push pop push pop jne gs cmpsb mov mov stos pop (bad) mov cmc ja ja testl stos jle inc xor jmp xor push bound in shll mov jge hlt xor mov or repz jne dec sti lret lock imul pop mov fidiv mov sbb notb jns in push icebp dec out test fnsave pusha lret fisubr mov cmpsl sbb xor test subb aas or xor jno ds or xchg ret stos and pop mov cmc adc and stos mov lea push cmp add leave fcomps in adc repz push hlt mov dec shlb cmp mov bound rol or icebp mov das xchg push lock roll xor sbb jl xor pop in mov add lret fcmovb movsb dec idiv add aad test loopne mov fucom leave divl scas sbb mov sub and push jne jp (bad) jo pop aas add xlat mov pusha jbe or je xor lock jg xor add and lret sahf push jb jecxz icebp loopne (bad) bound mov fcoml int3 mov jecxz sub aad mov fistpl lahf div fstpl scas (bad) fiaddl arpl sbb dec and scas ljmp mov jbe imul xor mov je pop insl mov mov add mov sbb xchg popa (bad) mov inc mov je inc cld loop in add jle pop out daa adc mov out out mov fcmovu js add push sbb jmp adc sahf ja test notb mov add mov (bad) mov sub insl test stos cmpsb or fdivr popa and test inc int3 jo pushf insb dec lret pop jo dec in or stos adc (bad) jae and (bad) mov push pop sbb sbb data16 push mov (bad) jae leave movl bound stc andb fist jbe jno repz (bad) xor es inc loopne pop or mov int in pop out sbb (bad) xor test shr ss jl mov test push aam cmpsl add (bad) lret std jge lds xchg in insb cld jae clc icebp and cmp dec and pop rorl in lret not repnz cmp mov (bad) xor std inc cmc enter jmp call push scas (bad) in or adc cwtl (bad) (bad) adc js ss xor sub (bad) xor out lock jmp mov das lods dec js mulb xchg mov mov cvtps2pi mov xor adc inc out lea stos and (bad) jb jo test mov aam dec in adc (bad) sub pop je lds dec sbbb add aad ret xchg (bad) popf and add cmp jmp hlt jecxz push clc pop add xor mov insb mov pop sahf mov fisttpll mov insb push icebp add add sbbl mov dec leave ja push shll test and dec ret jecxz (bad) xchg loope inc add add jb dec jmp mov shrl mov xor hlt out adc adc and sbb cli mov xchg xor out add imul ja fcoms outsb mov loop jge fadd leave icebp mov adc loopne dec adc mov jo lods push js sahf cmp cltd fimul fdivrl mov loope mov and int3 lock jne out (bad) in divl pop mov mov aas jno add push insb mov mov test mov mov (bad) mov fdivr aad sbb mov daa int3 sbb xor and cmp cmpsl js lret xor icebp (bad) mov add rorl mov jnp call push aaa mov add xor enter ds and push cli mov nop clc aaa dec sub inc imul cmp lcall (bad) add inc xorl addr16 movsb sbb repz jle lods xorl xchg (bad) jmp pop cmp (bad) aaa test ljmp out xchg pushf mulb push lret popw les xchg pop jmp leave jo test or mov mov xchg mov mov jnp jp cld mov cmpl jp test mov push add ret lods stos dec (bad) out andl jo pop cmp xchg mov icebp outsb mov or jns push mov std jno movsb xchg (bad) shlb lds test insl inc rorb mov push push xchg js in rcrb mov mov xor in mov in sbb je cmc pop (bad) mov aad out loope scas sbb aas xor lds sub cltd adc push jg fcoms fstpl mov fs mov scas add mov fiadd aam adc fdivl lret mov sbb ret gs cmc daa popa sbb add mov adc scas mov fidivr mov jp sbb lret xchg scas fucomp je jecxz pop enter test push fs lret cltd insb inc jns inc je fstps mov movsb adc mov jge in pop mov cmp mov and aad or jo idivl aam xor xchg addb (bad) hlt dec pop out movzwl jne cli pop jno add fs daa sarl aam movsb insb rorb push mov dec sbb pop ljmp sbb nop mov rcl sbb sbb fcoms ja sub loop lock mov xchg sub scas inc lds rorb lsl add bound inc pop cmp cs adc (bad) cmc popa je lret pop insl fdivrs (bad) xlat mov aad pop daa sti dec pop xor pop sbb enter mov jge mov xor shl je in lods sti cmp and pop invd leave into xor jge jbe clc pop imull std pop dec loop ljmp mov (bad) shrb loope pushf mov fdivl mov dec mov jns mov mov push jb and mov cmp adc aas cld mov jecxz gs jmp cmpsl mov call jecxz push test rcll xlat xchg call daa jg ljmp xor jecxz xchg or cld clc into or adc mov icebp test rcrb pop sub xor jno jl stos lahf rcr xor fs repnz pop test or jno out jo mov cmc xchg je stc jge cmpsb add inc sbb push jp orb lock les pop jae push cmp ret (bad) sbb xlat cwtl pmulhw aaa push in loope sub push mov add enter fucomp ret inc and or clc push imul mov (bad) lock mov out or mov xor lock stc roll adc fsts sub ss xchg adc jge or add fs outsl (bad) dec xchg pop roll std (bad) inc inc push clc dec dec lock inc pop or push jne lea pop sbb lahf icebp fcomp pop fldlg2 mov jns mov in negb (bad) cld mov fnstsw pusha cmp pusha loopne lock add repz or xbegin xchg jo out aad mov js xlat add std pop mov (bad) das or mov mov pusha loopne lock jmp or add rorb and iret jp jne sbb pop (bad) call leave sti dec ret cmc fnstcw repz dec imul pop int leave mov jmp ja addr16 into lea imul or pop ss pop push mov sub loopne pusha cmp scas jo imul aad stc fcompl inc push adc inc fs sbb ret jo mov jmp jg or xor lret cmp mov xchg imul fs or xchg subb inc or and adc sbb or mov add insl mov inc mov out mov adc mov decb stos repz jbe jge ljmp std cmp icebp xlat cmpsl xchg loope cltd and es pop rol adc adc in aad push out lock (bad) std cld or cli stc clc out in or loop loopne out in in or ljmp or rcl rcr (bad) fmull fcmovnu fnop mov ret iret into int or lret mov mov or mov mov movsl mov or test xchg xchg xchg xchg xchg nop lahf or cltd cwtl xchg xchg orb mov int3 enter xchg lcall test call cmpsl (bad) mov ja mov mov (bad) in xor mov xchg jmp cmp cmpsb sbb test mov cmp or flds xchg lcall jmp movsl mov out cli (bad) xor mov adc out mull mov enter cltd xor cmp jbe imul lret iret cltd push sbb cmp or mov and pop and test pop insb ja rcl sbb (bad) je outsb rolb test pushf movsb xchg dec subl add add aad inc imul push jb test mov mov push nop pop lcall std xchg test in adcl mov jmp push lcallw test lcall das adc sbb lds stc pop mov aad xchg dec sub pushf sbb pusha gs lock nop decl sar rcr mov xchg push rcrb (bad) movsl mov shrb jl ret jecxz repz test gs icebp add jne popf cmp xchg push push enter mov lock fadds fdivrs or cmpsl mov cltd outsl out faddl push fcmovne stc jns push sarl rclb mov rol jmp ja imul pop adc inc push mov xchg inc sarl cltd test mov push rcll mov fiaddl jmp test ds rorb call fldl (bad) xchg jnp ja aad out nop inc imul (bad) inc sbb xor sahf stos fldenv fild fwait stos xchg mov cwtl pushf sub sahf fcoms cmpsl xchg adc xor dec xor out mov enter push sbb xlat pop inc mov lods fst shrl in mov daa xor xor lea loopne les mov inc xchg fisttpll mov xor inc mov ljmp fcomi mov cltd insl stos xchg pop test imul lret shll call loope jmp repnz push in xor xor cli and push xchg or cwtl divb jmp stc mov push mov jbe mov pushf cld lcall jb sti xchg add cld popf cmc cld fstpl xchg in mov adc icebp in jnp jns pop jns mov xor data16 mov or testl xorb stos jl in testl ja imul (bad) mov mov xchg jp cmpsl or jns dec mov inc maskmovq idivl divl mov xlat in sti lret mov or (bad) push fnstenv lret imull mov out (bad) mov or jno jg jge jl jp js or popa pusha outsl outsb insl or imul push push push push pop pop pop or pop pop inc inc inc or inc inc dec dec dec or dec dec aaa ss xor aas ds cmp daa es and das cs sub pop push adc adc pop push sbb sbb pop push add add femms or push call stos fucomi or lahf mov push mov pushf adc push xchg notl fildl ret std loope jbe dec mov mov xchg aad cmp mov mov (bad) cmpsb mov ftst enter popa cwtl cmp mov stc fwait xchg icebp enter nop popf jp test xchg xchg mov xchg xchg aas test dec jmp in (bad) xchg cmp icebp mov cwtl xorb lds xchg cmp mov dec clc jmp in mov cld movsl cmpsl test (bad) mov cmpsb test pushf jno int rcr (bad) cmc aad jmp and mov call leave sbb loop jle ror push or (bad) fs stos mov mov outsb dec ljmp adcl mov xor mov popf sub (bad) pushf mov rcl in fwait popf pop int3 jl nop sbb sub adc cltd ljmp aam xchg xchg je int3 sbb dec pop movsl addb mov test xchg int xchg mov test enter rcr scas cs adc jle pop outsl rcrb sub movsl mov mov pushf pop pushw push lret rorl inc js aad fcoml in jmp add stc frstor cmpsl stc inc push sub sarl sbb add xchg mov cmc scas lods and xlat mov jmp popa ret mov xchg call (bad) out (bad) out sub sarl mov aad call mov mov mov test cwtl and aad test push cltd xchg les ret mov lret lock (bad) push adc sbb dec push fild xchg (bad) dec adc mov shll mov fidiv loopne cli jecxz test inc test sbb mov mov js xchg shrb leave in pop std scas stos jbe (bad) xlat lock (bad) icebp aam loopne lock (bad) fistpll clc jbe xlat lock rcl pushf fnop xchg inc icebp clc int js aam (bad) fmul fbstp xchg xchg jno jmp out fistp call sar push call in xchg data16 cmp stos xor xchg jmp loopnew shr and loope cltd in lds push mov xchg mov out mov std frstor sub lret clc or and add inc xlat pop mov gs out aad mov imulb lock xchg mov xchg lock enter js mov mov aad mov js xlat fnsave out aad mov dec xor cmc fnop stc or add adc adc xlat and out aad mov js xlat push mov mov out aad mov inc mov leave push dec jo out aad mov js out add mov aad mov js xlat jne xchg mov jmp cmp sbb jno xchg leave jo clc adc mov fwait rolb rorl push push shl repz pusha lcall mov mov in (bad) ftst mov repnz fnstcw cmp sbb mov cmpsb test out cltd fdiv or lcall xor mov jae mov push outsb in ret idivl push inc mov shlb mov push jno jmp pushf jae adc negl cwtl cmp or push or aaa xchg lock jp arpl nop aaa push cltd pop insl add std cmpb ds mov sub fistp fmul divb movsl aad fcompl hlt pop (bad) jne out jne test roll xchg push shl fistpl loop dec mov (bad) nop xorps xchg out jg pushf sar mov xchg (bad) mov loope test or sub and out jo jb fmuls scas dec inc cmp push ret aad pop in je xor rcll mov mov xchg or ss int gs xor or mov or inc je inc sbb outsl or or cmp data16 mov sub sub test dec push (bad) repz sbb gs test popf or mov sbb shrb xor fld (bad) lock inc clc iret es or arpl add add dec lods roll psadbw imul outsb add cli or xorb ret xor (bad) push sub or jmp les jecxz adc dec icebp dec jb mov sar and jno mov movsl or mov and mov sbb ljmp mov int (bad) repz adc mov xor (bad) out sbb inc mov pop cmp std mov int3 jp scas (bad) jecxz push fisubl fdivrs lcall flds iret lret cltd mov xchg ficom mov cmc fnsave mov out lods jecxz jle jbe mov xor jmp std nop ds push in pusha call loope xchg lcall inc xor ds jmp in dec xchg stc inc aad fisttpl dec lret movsb loope std movsb dec hlt and mov (bad) je nop mov addr16 ljmp pop test rorl mov cmp add jmp fcmove dec pop les or fdivr or adc or pop in cmp or add or add mov or push xchg cmc dec dec push imull cmp adc pop hlt or xor or or out or mov std sti lds push lahf test icebp and vpmaddwd jg (bad) xchg aaa mov xchg inc xor int (bad) std mov add rcl in mov cmc sahf movsl xchg xchg call mov xlat mov cmpsb pop cld mov mov mov shrl in jno mov aam and xchg rcl iret lds fldenv std js out inc aaa jno lcall jmp cltd leave movsl pop enter lock (bad) leave mov dec scas jmp clc mov add mov test cmp push or insb pop dec shrb lods dec ret mov cs mov loopne scas mov push jns in or lahf fcmovbe data16 mov rolb sbb and je jmp arpl push push pop (bad) out int sbb inc lahf push cli xlat clc hlt push inc mov sub popa mov pop shr inc or sub push lock mov or inc (bad) ljmp pop or outsb dec loop wbinvd adc sbb in ret or fcmovnbe adc rolb mov cmp lock inc cmpsl pop mov xchg stos movsb xchg pop ror inc scas loop jecxz rcrb fwait cld popf aad test xchg or mov jecxz sbb enter sub or mulb clc mov lahf divb out in dec sub mov mov mov push icebp xor ficoml sbb cmp and fidivr xlat or jge jge cwtl or xchg leave lock cmpsl or std inc loopne lock aad fs xchg pop mov test hlt leave mov sub jns dec gs pop jo in (bad) mov pop jns mov jge sbb stc dec sub aad gs (bad) leave lock aad test cltd mov popf arpl cmpsb push mov lods inc jmp adc dec int xor adc push scas mov sbb loopne std js movsl mov mov pop sbb mov int inc sub mov mov icebp stos (bad) int xor gs rclb out jmp imull inc push (bad) call mov in lds push outsl cmc enter in adc loope mov clc lea cwtl std out pusha fxch mov jns or in mov stc loope add jmp jmp clc cmp leave (bad) cmp bnd jge mov aas and and repz sub xor cltd mov in jmp rol rorb mov and fdivrl jge lock cld push mov dec inc jmp cmp cmp leave mov test imul (bad) fwait lahf xor popf rorl dec jp test ror imul mov push je test lret popa mov (bad) xchg push je lea cli fsub lock xor inc stc out fisttpll jbe das mov xchg rcrl (bad) mov lock test lds (bad) or rorl jecxz je,pn push dec test sbb arpl repnz aam rcll decl lods jae pop or xor aaa js mov pop icebp shl iret aad cmpsb dec sbb add aad mov pop icebp in js xlat mov stos test out aad mov push sbbb sbb mov dec sbb inc mov and out xlat cmc pop cmc jecxz aad mov out aad mov js xlat aaa mov adc clc negl stc aad mov js xlat lods mov jnp push out aad mov js stc sti inc xlat jmp mov mov js xlat inc mov das jo clc mov mov jne clc decl add mov mov mov push sub sbb es sbb lret or jmp push es arpl loope imul jle fwait test inc in add test popf or imul mov test jbe mov cmp xor adc add cmp imul add add mov or mov nop jg test cltd arpl add rep lahf int3 jl mov mov sub sbb imul (bad) or das mov in sbb addr16 xor jmp xor fmull mov or lcall ljmp into add or ret nop xchg pop cmpsl dec sbb sbb jl push lret pusha leave and pop push inc repnz sbb or cmp decl mov in ret imul sarb pusha testb pop cwtl mov jle or (bad) mov lock sub xchg test or hlt out lea push idiv shrb inc dec inc or imul testb fist stos add or sub (bad) adc shll or out (bad) mov and add mov enter pop push inc mov (bad) stos (bad) cwtl jge sti lods xchg inc or shl or and scas sub or push pop or outsb idivb sub (bad) mov (bad) or jg or outsb pop adc xchg jno shll or lds icebp or sbb pop repnz mov aaa push icebp or rolb add (bad) inc and or pop cmp adc mov or imul pop cmp push mov xor lods jnp je add lcall jle lcall add xor sbb ja adc pop enter scas add or or rcrl xchg decl sti mov lds xor scas sbbl shll cli jmp sub mov dec cltd pop stc cli scas dec or or mov loop add and xchg push adc mov inc mov xchg in or mov inc lea jns jbe sub lcall jno jge or pop outsl repnz lods mov or sub jno ret adc xor fwait stc call daa xor dec sbb mov jle imul push or imulb scas popa push aad repnz pop mov gs inc imul pop cltd mov adc scas dec cmp mov sub cwtl push sub or icebp xor int add and jo mov pop movb cmp or (bad) sub lds jnp loopne popa or lcall icebp add push mov and (bad) fwait cmc in mov lcall xor push sarl inc sti or sti push or outsb xor sbb stc leave mov or adc jae cmp adc sbb idivl push sub push mov dec push es cltd xchg mov test jbe fcmovnbe ret cli popf (bad) test adc loop mov or xchg idivb sub lods in test sub in dec xor cmp js,pt lret pop lock xor xchg jmp inc ret mov push cmp int3 fnstenv ret jns ficom (bad) pushl mov xor lds mov lcall mov or lea ljmp xchg cmp ja es stos push dec mov xor inc inc iret mov or in testl fbld jp sub and (bad) or pop inc fnstenv aaa rcr test add icebp out pusha inc sub mov in or cwtl xchg pop (bad) and push or dec loop add cmp push push inc or iret adc mov dec cld jbe sbb jl xchg mov mov fidivrl mov hlt lahf mov cmpsb dec mov cmp rorl icebp and outsb cmpsb pop jbe pop add cltd fsubr out (bad) dec mov fisttpll mov and or sub les (bad) dec out (bad) mov les jne icebp adc fimul push push cmp (bad) incl push mov out es popf cmpsl or add sub outsl mov pop mov pusha push mov or pop lock call or repnz and inc pop xchg enter insl xor in imul mov dec cltd xor ret xchg in cwtl jmp dec ljmp lock or xchg xchg test or sub add add ret int or in cld push inc mov xchg and loop dec jmp or sub enter jbe ljmp fdivl or cmp adc vmptrld decb push in cmp jb ljmp or pushf sub xchg sbb mov roll idivb push stc xchg into adc jne add or ja or xor out xchg adc adc rdmsr inc jnp stc xor scas sbb out xchg rolb in pop mov xorb pop adc push sbb mov sbb adc cli je sbb dec sahf ret xchg fdivrl lea idivb pop sbb outsl mov nop shr enter dec pushf imul pop cli lahf sbb mov xor mov ljmp dec test or es sbb xchg test cltd lahf or jl push repnz or add xchg bound ja push or mov or push cs not mov mov inc mov shlb cmp jmp insb cld hlt cmc add negb aam mov aas loopne (bad) fmull jg and hlt out cli mov push cmc arpl or and mov in rorl jnp jle xchg mov or dec pop aaa or sub cwtl ret mov rol testb xchg movsl cmpsb mov jge or xor or mov aas pop or fsubl or and add pusha orl sub xchg pop testl aas into jae rclb arpl out insl cld xor sub js xchg std jge idiv lret push cmp repnz cmc (bad) decb pop popf repnz lahf stc and jnp cmp andb rorl or adc (bad) scas cmp repz iret mov jl or sbb or jbe pushf hlt sbb xor mov or xor loope sub add xchg repz outsb xor mov mov cmpsb dec lods test pusha push pop mov repnz mov out test mov mov fs mov out lahf repnz jbe inc or int3 jb or and pushf into repnz loop fs jno lods and mov xchg (bad) sbb (bad) inc xlat fsub mov mov add cmp pushf inc push dec icebp dec out popa insb adc outsb xor imul test lcall sahf shr push or dec or scas mov lret or fidivl push xor dec lret adc loop adc xor sbb adc gs sbb push xchg or jecxz jbe mov pop loop stc in xchg or push or mov mov or je outsl ja cmpsb xor in adc lahf idivb call add sbb ljmp icebp push cmovno mov cmpsb xchg loope or repnz mov jae fwait push mov fnstenv popa jno call or or jg (bad) cmpl cld push fdivr testl repz sti out or push or stc int3 mov dec add mov or jg popf mov sub and (bad) (bad) or pop pop push mov int3 lret sti xchg dec xchg dec push mov dec cmp dec add dec rcrb lret in adc push sub inc icebp dec iret je or repz stos mov xchg cmpsb lret mov push mov inc adc sti movsl sbb dec xchg das mov fwait mov imul adc cmp or add out or pop fistpll jecxz sti repnz adc (bad) enter xchg pop out jmp cld jmp sbb or jecxz pop jle push mov mov dec mov xor mov add pop xlat ret push aad adc or call xchg testl or jl jmp loope or lea outsb loopne adc mov or lcall jge or adc jb mov and sub loope jbe lods push cmp lret mov cmp push or cltd inc lock repz cmpl loope push cmp jge cmpsb in stos lea xor out pop test emms ficoml rorb lahf repnz push addr16 pop test orl (bad) fwait lret jbe jnp inc or fildl push imul jecxz arpl push out sahf scas xor xor es arpl (bad) mov hlt cli movl mov popa mov ss fdiv mov mov and fisubrl jo js or ja xchg lods je or lea inc or imul or xchg loopne fisub or inc push xchg or xor inc orl push (bad) dec or pop aad arpl or mov mov or mov (bad) call xchg push or jo pop mov fcmovne enter in stos add leave out in cpuid jne stos (bad) leave (bad) cld (bad) enter inc cltd jns cmp pop jno and jb sbb pop inc pop sahf mov jmp outsl aaa sbb (bad) pop jo sbbl idivb ja mov sub push push or std push ss push das outsl cmp mov xchg leave pusha icebp inc mov inc stc cmp adc adc scas jl jns push lock stos adc dec stos imul and sub (bad) fmuls or and adc fwait sbb rorb pop cmp push outsl loope xchg push pop imul and out mov icebp sbb std in lock div xlat cmc mov hlt jo out aad mov js (bad) icebp js aas (bad) in xchg dec jecxz int icebp cli mov mov out cmc mov call mov (bad) mov mov xchg cmpsb (bad) icebp mov lea jmp aam xchg pusha (bad) icebp cmpsb ja (bad) jbe jne xor rcl imul push xchg push xchg imul mov in std lds aad mov jno in cmp (bad) loopne (bad) stc jmp leave fcmovu xlat in movsl adc js xlat out gs lods out aad mov jno fs out xlat xor jmp (bad) aad mov js stc sub call xlat mov and aad (bad) xlat in or xlat insl gs lret dec shll ljmp mov icebp jge outsb sbb loope jb xor mov lods aad cmp pop mov loopne mov sbb pop insl stc and and mov js xlat dec mov pop jo out aad mov js xlat xorl mov js xlat mov mov mov gs xor js mov clc or lock cmp dec aad mov cmc jnp mov std xchg cs adc cmc jg or fcmovnbe popa fmul and rorl test popf or cmp in or std cmp (bad) mov fidivrl movsl mov fidivr stc sub push fsubrl inc add jmp into out cmpsb dec clc (bad) xlat inc mov push jo cmpsb adc xlat lock iret insl dec xor inc xlat es stc cmp jo xchg push mov jp in mov mov pop aad pop or aad mov xchg popf mov nop jb xchg jg adc xchg fs mov mov fs in xchg or shr pop out loope aas push inc mov aad (bad) cmp or adc es and stc xchg xchg andb sub jg inc les mov cmp add arpl fnstenv pop leave stos mov in aas icebp xchg or ror sarl add mov stc and lds or pop leave loope sbb cli mov push push or pop sti xchg mov fidivrl xchg cs out pop mov sbb push sahf or insl (bad) imul or cmpsl mov or or icebp mov js push cmp and adc pop cltd sti ljmp xchg scas stos mov lahf in mov les jg inc lock mov das pop in lret adc bnd popf pop fldenv fld rorl mov testb jno out fisub sub fwait pop (bad) (bad) into pop fsincos cwtl xchg sub and push jle es pusha rol lcall xchg mov or or icebp or and sbb fsubrs rcrl mov lcall push or jge inc sub and jl dec in fcomi mov mov ret sub or fcomps mov mov clc cmp xchg and or lea or mov pushf xor xor cli pop cmc mov or mov mov mov mov int3 inc xor ss sti fmuls das or lret add pop std les or jl je jno jecxz nop (bad) mov or loop jge inc xor lcall mov into pushf ja pop mov fisttp sbb (bad) lahf mov fnsave pop pop negb dec xchg push int xor and adc jge cli leave les or jmp mov repnz cmp cs (bad) sub add roll repz push or push lret bound push or clc int lods xor or rorb dec and (bad) cs xor pusha mov mov xor push inc xchg inc xor push lcall out rorl or rclb jmp jp cli sub (bad) jl imul pop mulb jbe fs leave and cmp cmp adc in sub mov xchg cmc in loop arpl mov fwait pop lret insl js insb frstor pop mov hlt lds mov js jmp je jge (bad) mov xor or xor or ja inc or cmp mov sub mov movsl dec loopne shrl sub ret out out xchg sub fistp jb pop xchg pusha xor or cltd inc jecxz lds (bad) mov test xchg ds cmc js test push sub mov jae push jns mov out test adc dec push repz fisttpll (bad) int mov or dec sub sbb pop jle push dec mov pushf adc enter jmp (bad) les loopne scas pop sub repnz std xchg mov push imul adcl sub or dec mov imul and dec ljmp push add and fnstenv push in (bad) lock fnsave jae jmp test loopne repz mov jns or add mov and add pop (bad) or mov push repnz dec xor cmc xchg xor in sbb sbb push lods pop addr16 mov jbe jns add xchg push sbb adc outsl flds cwtl or mov (bad) out add mov fbstp outsb lret push xchg es jle adc or loope lods xchg out or pop cmp stc cmp pop in cmp xchg paddsw jae rorb xchg js jnp pop cmp scas imul rcrl or jne jmp pop or inc test les xchg (bad) lcall pop mov xchg dec xor add (bad) cmp push sub xchg dec cmp jmp sub or mov lds jg sub ja mov popf jne aaa sbb rol idivl dec add or inc aas aad sbb mov imul popa dec or repz mov insb push in notb lcall je sbb or pop jp xchg mov notl mov dec dec mov mov out fmull jg jbe cmp add pop mov lcall push adc mov imul stc shlb or sub or or xchg or lods pop dec adc scas inc push pop cmp xchg std mulb (bad) xor in stos sub pop aas or sub ja data16 incb and int sahf or xchg sub stos xor and mov mov stc mov push inc shl xchg sub inc adcl mov mov rcr or adc fimull popf lods daa adc cld fdivrs xchg negb (bad) js dec xor push pushf out les scas insl leave dec popa adc mov mov sub dec or lds or popa jmp repz xchg dec xchg mov jecxz insl mov add enter xchg push jbe aaa mov jmp (bad) pusha xchg pop xchg or push or outsl sahf and cli neg xchg stos cmc mov aad push cmp in push xlat in leave push xchg push into or mov pop out mov loope xchg or or mov adc mov and jp sub mov lock mov mulb sti cltd insb mov pop mov or stc mov push xchg flds ljmp scas lahf movsl xchg loop daa insl out out mul fsub int jbe or push lret sbb push xchg je sti out lret or (bad) and mov dec cmp mov sbb jecxz (bad) aad cmp loopne pop (bad) xor (bad) xchg je movsb or lds jb xchg pop lods jns hlt test mov rcr dec jl sub cs stc fidivrl sti inc sarl leave faddl or in adc jbe add hlt adc nop in sbb cli imulb sti mov ja in enter ss fldt leave (bad) in mov mov mov push into jns sbb jbe xlat sub (bad) mov test fnstenv enter icebp cmc insb test dec int3 ss jno jns cmpsb jmp mov fisttp or daa cwtl xchg (bad) dec xor sbb dec stc sti jno bound or fstps enter jne (bad) (bad) int cmp out jl repnz mov mov mov or adc pop enter cwtl es xchg test divb (bad) mov mov in mov bound aad jmp sbb or ljmp or imul leave mov stos lcall (bad) dec repnz inc pop std leave inc mov repnz mov or aam and testl in or xlat xchg (bad) jno loopne xor or add cmpsb or sbb (bad) xor push (bad) sar push or jecxz lret mov test and or sbb jle loope mov inc xor (bad) or or sub jmp xor test lods or adc push int (bad) sbb (bad) mov testl packuswb je fsubrs or mov dec or imul stos sub sub or dec mov add or cmpsl push push fsubs or scas out test and pusha sub and cwtl movsb mov pop jo insl jbe inc sbb mov jge mov outsb and lods or push jns or call testl test dec push arpl and pop cmpsl push pop repnz (bad) or mov cmpsb sbb repnz mov test sahf repz and scas cmp rdtsc addr16 popa or xchg sbb repnz cmp cli test mov hlt fstpl mov mov out fwait push adc lea dec xor mov xchg inc out lock or cmpl int pop mov xchg fwait sbb or pop push daa sbb jmp outsb cmc and dec dec dec or flds add mov test mov mov pop jo lods int3 xchg int3 pop aam cli jnp leave and aad pop out lcall mov mov xor hlt dec push xchg iret scas sub jns or inc pop leave jle mov jns cmc clc pop sbb lock cli aas or int3 leave lods mov mov mov cwtl fcompl sub push out (bad) mov rcll xchg lods imul (bad) add out push adc mov (bad) jns daa or mov incb cmc mov sbb xor adc popa (bad) mov int push jb icebp arpl paddq mov cmp or mov dec xor movsl enter sub sub cwtl jl inc sbb xchg xchg out rclb mov mov mov cmp addr16 dec test in lea sub call test lret fist mov (bad) icebp mov cltd or jns les es sub sbb lods sbb hlt jecxz dec cli cmp cmp repz sub xor imul test mov popa mov (bad) jcxz dec jno and or (bad) cld cwtl movsl lahf pop popf jp int3 dec or jae pusha pop out push fsubp cwtl or dec xchg sbb mov push adc jle jb xor movsl add leave lret scas or cmp ficoml xor scas jb cmp adc aas movsb xchg mov inc xchg inc sub cli int adc jno cli mov xor in popa les jp mov imul (bad) or adc (bad) xor add mov cmpsl pushf pop push inc mulb scas xor xorl into mov dec (bad) aad rcl cmpl and das or popa jae mov ja imul fidivr dec adc outsl rcrb stos lahf outsb push or aad test rol pusha jmp data16 lret adc lea pop pop icebp popf into push fbstp push xor mov mov or loop mov or or loope fiaddl push (bad) (bad) jge nop rcrl fwait or in and enter xchg popf (bad) mov mov inc dec int jg ljmp outsl cwtl pop mov (bad) cmp mov cmp mov xor add dec jmp cmp push or rcrl xchg add mov xor mov int3 jl test mov daa pop dec jns dec sbbb mul xchg iret add cmp cwtl repz int test or push add adc inc cmp sub push jl mov push scas lock xor mov inc jl jmp or and push inc or mov jb or in in sub mov jb sub xchg repz or add sbb lret inc push mov gs add lock xchg and cli mov inc rcr cmp cmp ja jnp jo lock ffree (bad) or test xchg mov mov sub jmp or jb (bad) xor and jmp sub and or cmpsb push jno add dec jnp test xchg int xchg dec es sub int sahf mov (bad) lret test or sub or pop xchg addr16 and jns (bad) aam int3 sub push sbb mov jns or xchg or or or or add rcr aad cltd mov mull loopne roll or add or (bad) or mov lret or leave adc xchg (bad) push or lea sbb dec mov mov std or pushf jno mov mov (bad) inc jno or inc psllw leave gs (bad) adc mov and mov mov push test adc push or dec sub and in or sti or (bad) adc ret mov imul iret daa xchg cmp sub pop int ja movsl push call or xchg mov inc or mov sbb push inc out xor or ret dec jne mov jo aad insl push (bad) xor mov adc adc xor jmp pop xchg or and outsb movsb mov hlt imul rcrl ds add std or imul sti inc and into std cmp ljmp or sub fdiv out je imul in cld cmpsl movsl jg add out push inc adc inc mov (bad) or mov mov js pusha sbb mov or push inc std sti sub das in dec notb repnz sbb pop mov sub inc jl outsb pop push sub (bad) mulb sub push (bad) push mov or addl js sub imul cmpsl inc jae sub mov das sbb jmp sub sti or pop test scas dec or dec mov or xchg or jns mov inc andl sub (bad) sti data16 in aas lds inc int (bad) test cs test test sbb pop inc dec sub loope or lods divb sti aaa nop xlat mov xor mov mov lock dec in jae or (bad) cli mov add or in aad dec adc movsb fild or sbb mov ret outsl pop or sbb outsb push adc hlt mov adcl xchg or jbe xorb sarl sub push jne lret sbb mov stc (bad) add or jg daa insl adc push int3 inc lret mov test lret fldl js push xor (bad) jmp sbb or stc cmp jmp cli add (bad) mov push lret rorl or cli or xchg inc sbb cltd (bad) and lods or mov jecxz fsubs dec jbe inc push mov int3 jbe std push or mov dec mov xlat lea push mov leave or es or xor neg xchg xchg out mov sbb pop mov imul fisttpll aad call jmp sub push jg wbinvd inc shr sub or cld sbb cmpsl pushf leave xchg push (bad) int (bad) jnp insb pop or and cli insl sbb adc cmc ljmp fcompl mov pop or rol orb fimull sbb push xor nop push cli xor (bad) inc mov (bad) hlt jnp xchg dec jno in or out sahf xor imul mov jl sbb xchg lea add or mov mov aad popl out imul imul inc shl or dec mov call aam xor or mov mov add push adc (bad) or mov jle or loop xchg and jb out mov mov dec jmp or and js mov fnstcw or sbb rolb xor in adc inc adc inc push jg sbb divl jbe fnstsw sbb and push aad mov data16 insb xor inc xchg pop shrl (bad) aas sti cmc not mov int3 xor lds or and push ljmp daa push (bad) xor sbb add leave push add testl leave cmp mov cld cmp jecxz scas mov mov repz push xlat dec or shll btc pop loop aaa lods pushf or adc sete dec call lea or dec les mov gs mov scas push ret mov jecxz xchg or sbb sti inc (bad) or cmpsb popf stos mov ljmp enter jo or push or (bad) std in or mov add xchg out pop aaa or jp push cltd pusha mov stos add pushf js ljmp sub pop mov mov mov jae and xlat or inc lods testl or lret mov sub xlat lret insb xchg and (bad) cld scas cmpsl test jg test or mov inc xchg dec iret or mov adc outsb in aam jno and dec pop push std or out mov cli or sub call aad shlb leave xchg dec or sbb mov push and js into cmp mov push or arpl xchg push dec das stc adc add or dec jns push fptan xchg das lcall mov cli mov in mov and ds pop sahf punpckhwd fidivl jl inc or xlat inc lret adc pop enter sub cmc (bad) dec rcr leave dec xlat jo mov push dec sub push or int xlat cli dec cmp hlt leave sbb arpl add or imul popa mov inc or or cmc aad jns lcall mov or inc rcrb iret add mov sub or int mov outsb in notl test lret and mov rolb pop (bad) cwtl insb movsb xchg int3 into hlt mov xor out fcmove out je mov sub cmp insl lcall faddl bound sahf aad jne imul adc (bad) je stos ss fimull stos adc sbb mov cltd fs adcl rol repz xor and out jne add or mov xor mov (bad) loopne pop or cmp jns je and mov push cmp stos iret lret jge clc cmpsl fldenv testl repz pushf fsubr pop or or lret es clc sti mov push jmp jae outsb out gs shrl sub dec pop cmp jge sbb mov sub xor push jb arpl movsb sub iret push sti jns popa js lahf iret lcall lds or xor cwtl mov je cli dec and loopne daa hlt ss sbb mov fwait xchg sbb adc imul mov lock jnp rclb or mov jbe lea or cmp jno lods cli addr16 push or data16 lcall daa sub outsb int push mov leave sub ljmp mov aad lret xor sub dec dec test mov imul mov sub cmp add add in mov adc pusha push jbe mov or call cld (bad) int3 or hlt lods push inc push out mov xchg or push inc or add das adc push test jmp adc in outsl cs arpl rcrl sub (bad) lds or or jo (bad) mov mov dec rorb cmc mov inc add dec add xchg add into fisttp test or repnz mov sub fwait or aam mov xchg inc mov lea push add add nop pop pop cli (bad) aas or or inc or push ret es (bad) or cmp inc dec push sbb out int3 jns pop dec shll adc xchg leave jae std frstor or jo out hlt jecxz iret push scas sub inc add jae inc std es les hlt mov mov out sti loop jbe sbb (bad) mov jmp (bad) cltd or ja jp push adc xor pop jne pop (bad) repz loopne stos jecxz pop push or add lret adc push or mov or jmp mov das sbb dec dec sbb lcall push adc mov cld pop or hlt call adc pop cwtl ja xchg push inc stc or shlb hlt adc jbe mov test cmc mov gs add rorb imul push ficompl fidivr and repz xchg dec jmp ljmp cmpsl adc (bad) test repnz scas jb xor std jb adc cmp ja cwtl aaa push movsl add out mov mov jecxz icebp lods fcompl adc ss jo push pop aaa lret or or ja in call lret pop fcmovne ss add (bad) jae adc mov scas out push or imul adc out pusha mov mov stc pop notb ret mov fs xor xchg lods fsubl or dec rorl pusha sub push or repz push fbld (bad) cltd mov xor rolb scas adc or or in or lret loope xchg movsb inc fist ret in rorb add movsl frstor jl test cmc push sbb (bad) and cmp shlb or test push sahf and jmp cmp enter int3 mov hlt fucomp xor mov pushf xchg scas cltd pop and lock out stos aaa inc mov mov int data16 dec incb lahf jle add fstpt mov xor js sbb mov mov or pop sbb add push mov push test iret ss push mov ret loope loopne hlt outsl repz mov fwait cwtl mov push sbbl pop lea (bad) sbb adc shrl adcb adc fistpll cld jmp add and and hlt fstpl or push push xchg xchg ret ja addb sarb pop add fisttpl jg ficoml or dec mov and jns cmp mov inc jmp mov or dec loopne and test (bad) xor sar test jne mov sub xchg icebp loop mov push or dec call int stc or cltd cmp sub pop repz sub enter mov sti lock xchg xchg cmpsb mov fdivs or mov or push movsl jle ret mov jo pop mov mov mov adc inc xor outsb in sub and gs in mov mov (bad) lods cmp sti aad push lods aad push dec test js mov mov (bad) jno leave popa push inc scas mov dec cs fwait negb jmp pop cmp mov lahf cli leave aam mov inc pop sbb inc pusha and push or mov test adc or aad clc (bad) enter ja jp dec (bad) ss cmp inc mov pushf xchg mull addr16 inc ja nop (bad) cmc leave or jle or mov outsl xor push (bad) outsb mov shr mov mov inc cmp xor xchg test sub mov mov add add xchg push test lods call ret cwtl mov rorl jbe cmp dec xchg das lods mov cmp or xlat sub adc dec push and outsb aad cltd mov pop mov movsb clc cli stc arpl or sbb or add (bad) stos mov mov dec sub loop cmc pop fiadd cld add loope xchg adc mov mov test inc outsl mov shll cmc xchg sub repnz es dec loope xchg dec add notb mov pop arpl mov (bad) add add jmp decb dec inc add test mov or cld xchg dec fnstsw sub hlt out ds out or jno jne lods dec (bad) push fmull pop dec and dec pop repnz push es or mov inc and (bad) adc push iret push add in xor pop movsb xchg jno mov iret push add mov (bad) js or and aaa push mov loop sbb fisttpl sbb xchg dec lcall in pop or scas aam mov cmp es jbe popf sbb dec (bad) negl insb inc es xchg mov rorb into inc fmulp and cli dec dec out jmp adc rcll xchg cmpsb fnstenv (bad) dec into movsb mov inc add or fstpt mov jo add clc xlat fisub pop (bad) push fbld sub jmp sub push dec in aad sti jge loop push out iret mov cmc outsl mov or repnz je or dec xchg outsl jb,pn or jecxz mov inc cmp fimull dec int js decb cmpsb sbb jmp dec in loope out in sbb scas outsl pause cwtl jmp outsb int jg pop or insl push mov repnz xchg repz lret hlt inc mov iret fdivs mov movsl sub mov icebp mov pop shlb ret mov rcrl repz hlt fimul ljmp es sub xor roll or test push adc or cmp add cltd xchg daa cmc jb popa xchg push sbb or cmc mov data16 hlt shl pop lds push or nop or fldcw or icebp cwtl test or push mov xchg add int cmp cwtl pop push bound lods pop fmull int cmc in or bound test pop adc int or mov sub add int3 or cli dec xor inc insl nop xor test orb pop fisttpl out sbb aad jns lds xchg insb push popf vmwrite in loope sub and cmp aam call inc or push or lock and mov pop movsb leave addr16 inc and push add xor jmp mov xlat (bad) pop jl cmpsb dec in or icebp push pop daa cmp test incb loope mov ds in cmc xchg (bad) dec or enter and divb nop jp,pt leave lods jmp arpl stos and push shrl aas cmc test outsl test aam cmpl lods xlat gs mov fcoml dec adc (bad) scas scas nop mov test out test or or scas or mov fcomps fmull pop or arpl jbe pop into ror lock (bad) (bad) dec mov orl cmpsb xchg inc mov out jecxz fidivr repnz mov pop or int3 inc mov lcall imul jae scas leave inc mov fcompl cmpsl inc pop incb jb clc cmp or xchg xor xlat pop or loopne inc (bad) adc xchg int3 mov dec dec test imul icebp or jle sar ret adc mov mov outsb push or pop dec insl add and (bad) hlt jo sub mov test loop call cmp sub inc xorb lock aas mov scas pop dec xor mov mov inc test fisttp lea pop sbb sbb pushl add in or imul mul test imulb mov fs (bad) mov rcll cmp xchg ja std pusha sahf inc xor push xor cs fs dec mov mov jg cmp ljmp mov or fnstenv pop pop int3 or xor jne repnz ret jo cmp notl das dec cld push test sbb fucomip out repz rcrl arpl mov cmp jno in push sub xchg mov xchg sbb inc jg add inc or (bad) dec imull sbb sbb test ret mov cs dec adc icebp mull or (bad) and daa imul cltd or jbe jne in fs push dec mov lods lahf jnp mov leave enter jecxz pop inc add bnd jmp in int outsb mov lcall dec or shlb pop sub or xchg sub das movsb jb (bad) fldenv scas xchg sbb out push leave xor je insb aaa icebp dec imul sub push fiadd mov lock (bad) leave dec cmp or mov sarl mov iret mov inc adc dec fs cs sub inc addb (bad) enter aam lock loop xor mov inc xchg jb aam mull aaa scas adc sti xchg and mov out mov cld rcll (bad) cmp imul out push aad adc push insl or addr16 mov je lock jl jo mov jge xchg sub jmp mov and jle xchg lea pop dec dec and in insb mov addr16 mov or inc and repnz enter fs or jg xchg or pop sbb sub cmp xor xchg stos cld cwtl or fldenvs add in xor mov cmp push aam lar adc mov dec sub mov xor inc add or rcrb or or jnp lahf int lock inc dec xchg outsl aam lock or or scas iret jne inc pop sbb mov (bad) pop repnz pop add jmp popa movsb or sbb std cmpsb es or inc push insb fldt int3 ret or xchg ret jo jl jecxz mov cmc flds pop mov dec fnstcw notb dec lret or push fwait js jge repnz jmp repnz cmp dec js pop sbb dec xor insb or roll (bad) cmp adc mov ljmp cmpsl jle popa mov lgs mul sbb and pop test xor or inc xchg or cmp adc and sti das mov into cmpsl fs xchg dec stc adc or add enter (bad) xchg lds enter mov (bad) push add pop or cs push imul cwtl sti xor aam (bad) rolb lods pop out movsl jecxz xor divl sub inc cmp (bad) test or lret in lods stos or or xchg fsts pop dec jmp xlat outsl pop or arpl sbb and cltd pop in (bad) (bad) (bad) fmulp or sti xchg (bad) sub mov lock dec or out mov movl cs sbb fmul xlat pop or into dec sub inc (bad) fmull jg popa push push mov push jmp aam xlat lods xor out lea daa cld jmp imul pop mov pushf pop cmpsb int xchg push ret adc shrb negl sete aam jns or mov cmp cmp fcomps data16 or popa fisttp push das and fldcw movsb dec cmovns sub bound pop mov dec pop adc imul push cmc pop or cwtl cli xor pop daa or push sbb (bad) movsb or popf pop sbb fwait cmp loope sbb dec jo and popa push and stc in (bad) xchg js lods push pop cmp movsb push pop pop xor mov dec xor push adc (bad) aas and in std adc out jmp loop pop fwait or test clc xlat stos mov inc or aaa add push enter pop push arpl stos ja fmuls mov sbb aaa std mov xor xor (bad) jae jb adc rep adc or jae outsl hlt pop sti or dec ljmp cwtl ja or das cmc jne mov jbe sbb daa ret jnp cli adcl imul xor test lcall out outsb xor pusha xchg sbb ljmp push sub or movsl fnstsw aaa stos dec mov or xchg (bad) gs or or arpl inc pushl (bad) (bad) cmp scas or pop ret sbb or js mov lea mov sbb rcrl fldl int or add jne outsl int3 or lret dec iret in incb test lods sbb xor jnp arpl mov mov rcll cmpl push call (bad) lods add mov push mov (bad) sbb jno or or and or sub mov repnz push sub or xchg decl xor pop fimul cltd or sbb jbe lret push cltd (bad) repnz adc push or cwtl fldt lret mov sub xor or pop fdivs lods call dec xchg popf or mul cli pop ss lods mov jge aaa fdivrs test jbe (bad) repnz mov aas xor sbb and fmul mov test add jmp pop fs ljmp js insl push inc or addr16 flds pop pusha popf mov ret mov xchg and push add or push sub dec out (bad) jno adc mov stos dec jle mov rcrl or repnz (bad) push fldenv or fwait sub pushf mov jmp jo inc xor ss xor or sbb call xor push repnz pop dec mov mov call cmp jo into cmp mov push ja stos sbb aad or movsb mov sbb notl add cmp mov xor dec mov mov inc pushl outsb (bad) or mov int rorb jmp jb adc cwtl sbb in pop ret pop test out int inc ja enter sub and (bad) repz movsl push jp inc mulb push fidivl rcrb mov cli sti pop or xlat fldcw and or sub scas pop add in cld pop mov xor adc inc decl jle dec inc sbb (bad) cmp (bad) pop mov push lret jbe dec push cwtl sbb or or sbb sub insb test or jl ret clc mov jae sbb movsl in pop lret cmpsb jp add xor ja cmovno in dec (bad) in loopne push mov leave mov (bad) xor fdivrl lods pop int3 mul jge or cmpsl push jne into mov pop test lret aam dec in mov pop sub leave xor or pop inc ds test add (bad) and clc sti add insb mov xchg mov xchg pusha mov int (bad) xchg aad dec data16 outsl or mov call sub or leave pop mov cmc fistpll push xchg sarl pop out movl add les insl mov pop scas enter ds (bad) add jno jo dec fimul jo stos mov or mov fdivrl fcomp fsts movsl adc xchg jbe repz movsb fstps int3 push (bad) divl sub iret add fsubs xchg pop addr16 aas cs sbb cmp movsb test cli dec idiv movl mov fidivl or mov std daa mov addr16 call adc lret imul pop test iret mov incb int3 mov dec sub sub jns lret jecxz imul insl lds jo push push mov jecxz (bad) fstps test popa (bad) jp test xchg movsl or jecxz sbb je std nop (bad) jno ret dec test outsb cmp push push ljmp push js lret or push (bad) or cmp or push inc scas sbb loopne orb add pop jmp inc sub push xor das pushf outsb or xchg loope std pop test aaa es iret jp loope (bad) mov movsl mov push push xlat bound int (bad) ja jl jne (bad) or movsbl xchg or pop jne cli hlt adc dec push sub int mov mov mov loop icebp xchg and orl pop inc mov rol ljmp and dec in (bad) push mov iret loop sbb lods or pop mov and dec pop pusha je (bad) sbb cmp aaa bound jp sbb and adc jmp cmp stos xchg push mov mov ja xor iret or out and (bad) iret xor add lret jl or add jmp dec mov out jns lcall xchg (bad) fld movsb sbb pop mov and pop pop xlat jne les cld adc mov shll mov cwtl inc or cmp mov test add adc push repnz pop lret sub sub in fcomi jns das push mov push jno repnz cmp pop loopne mov sti hlt jmp int3 sbb push pop int clc aad push adc mov pop sub xchg into mov fisub mov add or test decb cltd push dec add loop test push sub mov or jg mov mov mov xor rol mov lret into (bad) test iret fsts xchg jns jae out jbe scas or iret insl sbb fst repnz or pop notb and fwait mov repnz mov scas ljmp xchg cmp hlt add inc fstpt inc cltd sbb bound divb fisttp dec aad jo cltd adc or lods cmc test std cwtl (bad) adc aaa cmp enter add sbb rolb jp movsb xor loope mov or out add (bad) mov in pop fmull sub pop pushf or test pop mov jmp sbb mov inc sbb pop sbb aam in aad adc rorb mov sub test cmpsb add test mov sub or add fidivl or push aad inc xor sub jb push out or (bad) rorl inc je and push inc or (bad) popa xor imul daa sbb insb test cwtl add in cli aaa jnp pop iret dec sbb imulb adc pop (bad) mov lods (bad) jl les sub inc mov cmp in xchg jns test add adc les push or sbb mov dec cmp dec je jnp in rclb or lock call or and mov mov test mov mov mov xchg mov inc inc (bad) test leave or xchg push int3 jmp pushf cld lock pop inc lahf push outsl loope arpl aas out sahf mov lret (bad) js repz mov or aam add or mov psubq sbb out fimul test or inc mov sbb mov pushf nop cmp xchg add inc popf shlb test in cmp xchg les or or add stos push adc enter sbb jecxz pop mov push cli outsb fwait enter xorl jbe mov inc cmp std leave cmc aam lahf mov sbb scas test mov push jle pop mov out rclb push lock fdivrl hlt bound mov pop push call shrl ja sti loope add dec mov sarl mov push in idivl sub mov (bad) loope mov or jge aaa or sub cmpsb inc fidivrl mov aad cmc push movsl or or jl or dec pushf mov cmp das cmp popa xchg mov ss repnz lret adc adc (bad) sbb int mov icebp ret inc pusha iret or ds sahf imul clc add xchg je (bad) cmc add pop lods lock mov dec xchg adc push in xchg loopne mov or push addl mov xchg and in insl dec hlt loope jg inc or bound shlb add or notl pop or addr16 mov outsb adc or push or out add or clc and pop inc (bad) mov icebp (bad) xor add imul es adc fimul push adc sbb adc or imul mov incb in xchg pop scas (bad) aas adc jb adc lret mov jmp add clc mov ret mov jg adc repnz sbb or inc and jae outsl cmpl or loope fstpl out inc str aam mov enter sub cmp xor adc or xlat in loopne cld out cmp jbe imulb adc ret insb hlt pop cmpb mov lret add or out aam or and xchg or (bad) or add pop jns pop xor mov cmp lret mov not shrl sub mov or mov scas xchg (bad) or iret push mov and push pop jecxz loope sub or dec pop jne hlt cmp pushf mov or jle dec or test idivb cmpsb fisub mov or and out xor mull daa push pop jno add rol outsb push (bad) add xor mov mov pushf cli out sysenter push push add (bad) mov add jb into jae or std cmpsb lahf inc jmp ljmp add (bad) mov aam sti and sti dec ja dec cmp mov orl aas ljmp mov imul mov or sub pop imul mov or xchg hlt outsl sub pushw mul pop xchg xor or xlat addl ljmp add mov js nop and mov cs inc lcall add and jae push cltd jnp pop jns add repz inc mov cmc xchg mov inc jle addr16 int3 adc movsl mov hlt lret pop pop push jecxz xchg jnp sar or or push leave rcll add mov sbb xchg sub pop push mov mov mov sahf rorl push icebp or inc repnz cmc mov push stos cltd cmp or add mov or pop mov imul icebp clc outsb add xchg dec cmp xor xchg adc outsl sbb std and or aad scas inc lahf stc fnstcw lock mov or int fiaddl pop mov out cli jp (bad) test dec mov cltd mov iret jmp push or icebp fmuls rclb leave (bad) and mov inc dec ss lret aad pop jmp imul jmp xchg and pushl xchg or xchg (bad) or pop mov or (bad) shr aam fucomi cwtl push iret mov xor xchg loope lcall test cltd lret sbb out or xchg ss fsubrl add gs out mov mov aad dec jmp dec scas ret jle addr16 or push adc idivl (bad) sbb mov xor mov cs sbb mov cmc cmp add mov bound or jnp or nop call or sahf stos dec in and mov je (bad) movsl hlt sti sub add lahf sbb cltd or call jae dec data16 and shrb cld cmp enter xchg and dec lock dec cmp cltd popa mov das push popf pop test sti and mov popa sbb fisttpl pop dec sub xchg test lea mov (bad) fwait inc ja mulb test cmp or faddl ret mov insl add ljmp (bad) push adc xor shlb fistpl or cmc loopne loop js shrl or jbe stc or mov adc data16 fwait repnz fsubs and dec push push ja lods stos sbb fs fistpll mov fmuls aas sbb call daa inc dec or out pop or sub mov or jge test jns push and or push adc xchg fimul fsubrl mul sbb aad rclb cmp mov jle pop int3 dec jecxz sbb or push xchg inc xor repnz mov mov pop mov hlt or imul (bad) push add jle sbb arpl dec call cmp test push cmp xchg sahf aas mov fucomp jnp dec dec jp sbb aaa mov sub sar mov push pop push dec rorl cmp cmp fwait out cmp dec stos push pop mov hlt inc or sahf and jecxz or cmpsl inc negb neg adc hlt add fistpl push or test or inc shlb test daa or mov cwtl pushf hlt pop push aam mov (bad) stc mov repnz adc or lock adc pop mov scas push or das adc or jno jne adc cmp out out or js bnd add shrb (bad) jecxz in pop out inc add inc cs dec ljmp fs cmp cmp cmc jns lock mov xchg shr or pushf scas pop lods push jne sub mov adcl cmp jnp aas or aaa js ja out (bad) sbb mov mov dec add inc xchg sbb jnp test dec jnp inc hlt scas adc xchg in popf pop icebp (bad) push push or mov inc pop daa pop or mov rorl sub push fimull rclb xor std inc mov (bad) xchg and jl pop ror repz lret adc adc repnz push std sub leave sbbb mov mov lcall or jo pop in stos lock js repz insl ss jmp dec xchg dec jo sub pop ror push add out fsubl adc dec or inc xor adc aas fs sub cltd ret add or dec xchg imull mov (bad) je into inc dec movsl out dec jo push repnz cmp xlat adc xchg fbld (bad) push add shlb add push lds dec xchg out ss inc std mov imul iret mov inc inc ret jmp repz xor add rol scas mov ja mov call jp test fiadd pminsw or jp xor int xchg (bad) shrl hlt jecxz pop sahf cmpsb inc sub out dec lods push in out xor dec xchg mov ja adc aaa insl pop pop leave mov movsb or int3 cltd addb leave repnz lret aaa sahf stos adc jno test decb in (bad) sub adc fmulp adcb mov xor in or dec add dec add add cmpsl inc nop and or cs or repnz xor mov negl test cld sub fidivl sbb notl subl ss mov push fwait or cmp popf or arpl lret dec mov mov sbb bound or or dec aas incl inc lret idivl andl adc cmc jmp pop mov outsb mov jno adc imulb cmpsl sub lds lock push add int3 or push in into and shrb fsubl or or bound imul lret out leave or hlt jbe (bad) sub add or inc pop icebp inc cmp fcompl cltd daa mov jo hlt sti lea or fstpt out or dec clc inc xchg pusha sarb inc mov cltd cmp les addr16 fdivrs icebp js mov cs fildl inc lods pop repz test lds cmp ds cmp paddd repz aas fnstsw out (bad) mov ds (bad) jb mov out pop mov rorb jmp or mov cld mov dec sub or out xor es std insb or loopne enter mov adcl pop push adc aaa inc imul or imul rolb scas popf pop adc mov or dec mov (bad) or clc andl mov cmp rorl jmp or xlat ljmp or dec dec clc or rolb xor mov sub ret in movl pop add sub jmp in imul stc inc pop mov sbbl gs fwait incl pop inc pop cmpsb sbb fnop sub xchg insl enter mov mov xor jae sbb mov pop or arpl (bad) dec add fimull inc rcr out lret mov inc testl pop lahf xor imul mov adc mov mov imul dec int3 cmp mov cld or insl add (bad) ja push (bad) or fisttp popf jmp or lock and leave dec out dec pop adc enter xchg xor aaa cmc mov cmp push aaa push xchg sub cmp dec jno repnz jbe fnstcw sub cmp jmp xchg pop (bad) mov dec sub adc dec cmc jg test loop imul out xor or push pop in push notb loope rol cmp lea and outsb aad les xchg hlt jecxz faddl xor mov aas sbb or repnz or sub aam ds lds ror mov mov fwait jge dec add stos cmp data16 pop testl pop jp jno pusha rolb xchg es adc (bad) lea jae (bad) sbb stos or clc jp jbe cs imul or pop movsl adc lret and push scas xchg (bad) push add or jnp cmpsl outsb idivb inc pop mov lods mull inc inc sub or cmc adc out fstpl test mov push or sarb rclb movsb or out mov (bad) fnsetpm(287 mov and or xchg mov or jmp out fwait inc or xor xchg sbb jo cmp xor mov pop aas mov pushf or mov adc push adc dec or out imul lods scas or rol mov mov imul sub jp xchg adc pop iret cmpsl xchg neg push cmc iret movsb popa pop lods (bad) or incb aad dec or sub mov or insl sub push in out (bad) (bad) jle fisub mov aam adc dec xor arpl jne and pop inc test outsb mov fldlg2 inc aad or push or inc (bad) out push or push popa fidivl imul sti or mov mov inc das xor dec xor rcr jge in (bad) cmp mov jns inc fdivrs push mov jbe mov arpl aaa lods inc psadbw cmpsl dec imul xor lcall mov mov addr16 fistl mov jne into cltd adc lods test pop in push test jle adc or and pop sbb or (bad) test outsb or ja aad cmc fwait test movsb stos mov mov mov push cmpb fcmovnbe lea data16 sbb push or imul iret add or (bad) jb subl cmc mov rorl stos inc stos cmp push and cmp jno,pt push pop jo test fmull pop mov js test fsts mov lcall stos inc inc orb ror dec or lret out lods mov faddp or push imul out sti daa mov add mov push orb push aad div out fisubr jnp add xchg out fildl shr loop mov les push and aaa sub hlt or cmp jg sti (bad) jns push mov mov pop mov (bad) pusha or inc mov jg aam icebp das out orb cmc lret pop scas aaa pop cs mov push push aaa test lcall lret mov jne mov enter or and or je push push mov or mov or jg dec stc daa popf mov test and movsl sbb xchg xor dec mov fstpt cmp push and in pushf xchg ror adc aaa sub daa movsb jo or jecxz jmp sub mov sub and int3 mull xchg (bad) lcall jne or jecxz cmp or mov (bad) lcall push inc sbb sbb loopne jg or test xor std cmpsb xchg xor cld jb add or dec dec mov push jl rclb push dec sub and jp sub loopne fidivl mov ja pushf jp xor lock or fiaddl jb roll (bad) pop ret or lret jl ds push inc inc je sub test push test add test sbb jmp pop stc jp cmp and imul sub out (bad) je mov mov pop dec push mov clc mov mov pop sbb cli inc mov or lret repz call jo inc mov and test or or in pop movsl mov scas mov xchg loopne das repnz mov and xchg icebp pop pop jl mov cli or aaa loopne jge mov and imul push adc leave mov mov sub clc mov repnz dec ror loop (bad) dec arpl fist mov iret int3 popf push dec and jns lock lea mov test cmpsl or repnz fcoml mov (bad) and dec aaa not movsb adc cli pop dec in test in push dec jne ret mov das mov xor leave mov dec dec cli out (bad) cmc into (bad) stc sarl (bad) xor mov mov jne cmpsl cmp add sub dec or mov stc or cld iret out bnd into repz mov mov (bad) push mov sahf jp xchg ljmp sbbl inc sub rcr rcl sbb dec and mov in sbb fdivl rcr sti add or hlt call or mov sbb int nop ds or loope out lret or into sbb cmp cltd or call imull pop jno inc dec cmp mov pop push push clc add daa movsl push inc movsb or daa (bad) imul or pushf inc outsb jbe sti stos mov cmpsl sbb mov xchg pushf xchg and or in addl dec (bad) inc jp jmp and das int int3 bnd out mov (bad) sbb mov mov ret orb dec lods mov stc cmp div fs test cmc push aad in mov cmp popa or lock call ljmp and outsl or or inc jecxz imul leave mov or jp or fisttpll jno outsb or jle jecxz (bad) in scas add cmp (bad) xorl jo adc test lock jae clc cmp or sub and (bad) lea dec fidiv popa and and fisttpll fdivrl loopne pop pusha xor cmc (bad) int3 jecxz outsl and jmp sbb outsb fs lods or pop mov int movsb mov mov dec (bad) jmp popa xor (bad) hlt pop push cmpsl cmp daa out xor mov dec cmp or push std xlat and pop repnz mov ss push or mov sbb jle arpl or cmp or mov sbb test iret mov or sub pushf dec mov push xchg aam loopne mov in imul out stos ja add int lds push sub jge mov or mov es ds stos test orb pop dec xchg mov pop sub int xor sbb mov aam int3 leave mov xor lret cltd test or js or pop fidivl insl pop fmuls pop divb push adc leave and out mov mov lret (bad) es scas pop ret or jae lods hlt cltd jmp sub lret push gs fwait mov dec xchg cli test test mov inc sub jle (bad) or hlt sbb imul mov xor adc adc add mov rclb pop fdivrs mov fmull mov outsb or ljmp pop inc scas adc mov mov (bad) (bad) or cmp repz (bad) aad or jno cmpb add aad or outsl mov fsubrl pop pop inc push dec cmpsb or pop (bad) adc mov push nop and or mov movsb repnz stc or pop mov or hlt push sar mov jno jecxz mov (bad) jmp bound jnp lcall fs fstp xor push (bad) imul xchg mov mov stos bound jecxz xor adc mov xor mov adc sub mov fstps add lcall mov sahf test xor cltd sub or adc int3 fcmovnu outsb lahf mov cmp int3 adc gs es mov fucomp test (bad) enter dec fwait adc (bad) fiadd inc or and jnp inc stos xor mov (bad) aad or pop popf mov cmp dec dec xchg imul jb cmp mov ror sub sahf movsb (bad) jle decb sub int mov outsb pop xor or mov aas or (bad) loop dec push clc lcall jmp jno loop cltd adc insb cwtl or andnps ret mov (bad) or scas leave lret ror mov fdivrl jae loop mov push inc or loopne,pt xor bnd imul sub pop flds adc bound pop cmp test enter (bad) mov dec and mov and pop inc push (bad) or (bad) cmpsb lret bound mov cmp adc hlt out adc loope jmp xor lds arpl cmp xor dec or jge imulb call out fstl and lock in cmpsl out push or mov sti mov cmp iret or ret lret and push xorl cmp rolb cli xchg gs dec ljmp jmp lcall push xchg loop (bad) repnz push mov call pop fcomps repnz cwtl cmp jne push fnsave xchg popa sub test pop clc inc xor mov adc ljmp jnp mov lods pop aad pop mov movsb ret inc mov or lods test aaa xor mov mov xchg jae mov mov ljmp push arpl sub push div mov jno sub repnz add test or jp in adc in out mov mov push or jbe (bad) lcall test mov bound or add dec in sbb add mov mov xor int es cli js btr lret dec mov js sub mov imul (bad) je dec outsb pop negl loopne or xor add (bad) out push jp or mov leave aas shr or imul pop or stos test xchg sbb mov push sahf push adc in xlat popa jae mov sub fs jle dec subb mov lods lock mov clc je inc aaa jmp dec sbb cmp cmp or es fs jecxz rclb movsl sub ja std xchg and lret mov movsl decl mov ret mov out movsb lock push repnz and push aas add mov adc jle popa fnsave mov (bad) movsl cmp push push pop push mov or fmull movsb cmp fadd inc mov mov add or inc fcomps call bound lods in jge inc mov or cmp in jb jge mov imul mov out and repnz dec mov or movsl xchg in mov lcall je mov push in mov jb pop xchg cmp sbb pop mov insl pusha or and jg mov or icebp (bad) fisub sub out mov mov and push lds loope or stos sub loope jne adc das aas xchg inc in jp fwait jle pop (bad) lret int cmp jle das hlt push (bad) cmp adc and aad xchg or je decb test fistpl or into mov and sahf rcll fnstenv sysenter mov jecxz or iret xchg (bad) in (bad) scas lods fisubr jge and and inc cli sub in hlt addr16 (bad) xchg test jnp jb divb popf inc cli jns inc lea jecxz shrl dec fistl jg sti movsl pop sub shlb or lea dec aaa inc xor arpl lods xchg insb pop leave sbb rorb cmp jg cmpsb jl in lock dec into lahf dec pop lods imul rcl sub movaps mov sbb aam mov push cli sbb movsb fldl das iret scas (bad) (bad) mov leave adc cli or mov sbb cmpsl in popf and or mov cmc scas xchg incl pop or aas mov sbb adc mov rcl pop and leave mov dec lea popa mov jns aaa lcall call xchg push ss (bad) int3 mov mov cltd fidiv sbb sub cld dec jge mov idivb or xchg scas xor jl bound add rcl fnstsw mov mov movsl cmp fsubrl (bad) (bad) cli sahf in test jbe mov inc (bad) lods pop xor or fbld xor scas push test test or mov pop pop add outsb mov xchg pop cmp enter arpl jle es fs add cmpsb or mov stc pop (bad) mov mov pop sub pop or or stos insb call les pop or loopne add or dec cmp xchg push or jge jnp mov movsl or add in test out sub popf or stos dec sub enter inc (bad) dec or loop adc fidivrl int ja fcompl jmp dec (bad) leave or adc imul test ret popf mov cli cmpsl das push jnp cmc xchg shr or xor adc (bad) pop repnz dec loop fistpl inc popf dec lret pop out cmpsl mov jo imulb cli sbb mov jmp mov dec (bad) vcvtpd2ps adc push push jne into imulb fiaddl inc or jl inc fidiv xchg or lds xchg negl jnp daa cmp enter cmp or xchg in iret int3 xchg jo xor mov pop (bad) mov push (bad) push jecxz int lock push and pusha push or and mov jb nop cmp hlt pop push push xor fisttpl xor mov pop inc icebp jns adc push pop dec cmp mov jno fcmovnu inc pop repnz push push xchg add ljmp fbstp or xchg lret or sarb in cld mov inc dec xchg imul xchg adc jae inc mov mov scas jne push leave jnp sbb adc sahf add jecxz (bad) (bad) cli movsl fs pop add (bad) fld (bad) and mov jmp lcall mov rorb mov je dec inc lock mov cltd or sarl das mov sti or aam jae repnz cmp out out or fs insl pusha adc cli jmp arpl dec and or lods fwait imulb mov fistp mov rolb sbb sti mov jmp sti or jmp mov lds repnz negl jecxz lahf pop jmp mov out stos add jno scas pop xchg and outsb test adc pop mov pop js mov out movb shld mov inc fisubr mov pop aas mov repnz inc rcr fmuls mov mov pop test xchg or ljmp idivb clc imul stc insl dec cmp cmp jecxz mov les pop dec and xchg and adc outsb rorb stc pop jnp ljmp mov cmp fidivr xchg test add outsb hlt jns out into cmc jne adc or xchg sub and xchg or popa pop or dec push add sub iret lahf cmp xchg fcompl xor mov lds popa cwtl sbb stos pop decl cmp addl cmp jg fisubrl xor negb out stos (bad) rep arpl (bad) mov or xchg gs mov push push in xchg jmp xchg sbb movsl add sahf inc sub ss mov test inc dec test xor or sub loop imul or sarb mov out shlb or or repz push xor ss (bad) hlt xor adc or daa sbb in test mov pop ljmp iret push or adc pcmpeqb cld cmp scas or lock nop mov xchg dec loopne in add add dec dec dec sbb je jns ret push or (bad) jge test test gs or lods xchg push scas in sbb or cmp or or dec lret mov jge pop mov xchg sti jle loop cli cmpsb lock sbb iret lahf and (bad) jbe fiaddl (bad) sub hlt xchg mov cmp jecxz jp loope mov mov popl and leave inc (bad) out cld addr16 scas pop cli jmp sub outsb inc cli or mov mov js xchg rcll fcomps inc repnz popf mov add add movsl or pop dec jp test aad cwtl (bad) (bad) cs dec and mov (bad) adc cli add sbb and mov mov xchg enter mov dec lods jmp cmc nop ret jg pop push sbb stc xchg jl xchg rolb or leave int mov ficompl cld lods fwait shrl ret in shll mov lret ret or lret or mov pop aam test (bad) cli jg mov mov xor adc loopne jbe roll or cwtl pop jno dec push push lret (bad) cmp or mov sahf adc adc or cmp in rolb or xor add pop pushf or cmp cli mov sarb or nop pop cwtl cmc or fisttpll jge xchg rcr les xchg cmp test test lret fwait mov jo aas sbb daa sbb push dec ret cmp push dec push cmpsl jnp xchg or (bad) xor mov jo jg pusha divb imul adc repz pop jns jecxz sbb inc cmp mov bnd (bad) mov mov and rorl pushf fdivrs push lods (bad) aaa sub push mov mulb push jmp push adc jecxz fnsave cmc dec or aam insl in aaa pop cmp bound fistl into or dec dec cmp movsl decl jb mov (bad) fidiv jns lcall add and int inc mov or or imul mov rolb test loopne and das pop xor aas ss or jno test cmp or cltd cli mov jmp cmp (bad) je outsl mov sbb add fdivs dec out mov pop cs cmc jge mov pop dec jecxz stos int3 pop (bad) push push push jns (bad) and (bad) mov xchg fisubr inc mov xchg loopne dec repnz mov push pusha adc sahf jne mov pushf sbb jns xchg (bad) lock nop insl pop aam inc adc sub stc push fisttpll mov stos (bad) mov pop push in mov (bad) push test loope fisttp cmpsl sbb ja dec or popa xchg ret (bad) sahf popa mov and and sub xlat pop rorb cmp push or xor jl mov cmc test dec or lcall stc lret push mov xchg dec cwtl or loopne or dec lock mov and cltd or popf addr16 dec or mov dec mov lcall dec push loopne add jb jge jle test scas add mov push lea mov mov inc fnop or jb add lock pop sbb stos sub sbb fdivs or lods test inc ficoml into add decb scas or enter or aas imul or jge inc repnz arpl cmpsb push lret ljmp jbe (bad) or mulb cmp adc and mov (bad) or movsl or pop pushf adc or test pusha (bad) dec or push sbb push add or es mov or int3 inc inc xchg xorl adc or mov insb sub pop test jge or test aam and dec (bad) mov aaa psubsw mov ret adc jl push (bad) test imul xlat leave arpl pop fcomps dec rorl mov lock shlb test dec jns btc jmp lret add loop jmp cli xchg sarb pop pop push repz mov pop sbb fildl test addr16 (bad) popf sbb (bad) mov or xor out fidivl or cltd jp je or mov or xchg jecxz adc lock mov sbb xor fistpl fsin out push out mov or add add sub mov in mov add lds push add or rorl push test loop xchg fs xor mov in insl or and adc jl or repnz ds sbb pop stc lea iret lock mov mov and or ljmp mov sarl test dec leave jne push mov dec mov in inc inc (bad) add jmp and lret mov mov jb add iret dec cltd mull (bad) inc add or popf popl xchg jle or add pop jecxz sub aam fwait dec adc out das fimul and jmp mov cwtl sti pop leave in lcall enter icebp pop mov imul mov pop movsl or test or cmpsl sbb paddusw inc aas mov mov dec xor or lds leave sbb xchg or cld or rolb insb enter push lret inc insb xchg and pop (bad) (bad) lret in ret test add bswap movsl xchg dec dec or out dec sub mov mov pop ffree mov dec in mov mov scas dec daa or xlat cs das dec adc pop push or bswap insb push ret mov pop or cli sbb bound cld rcrb stos or and or test fistpll popa xor and loop mov repz push dec repnz fs (bad) std mov data16 mov lods (bad) cmp rolb add cmp push adc idiv in mov mov std push in mov fcmovne mov cmpsb adc ljmp mov pop in mov fstps (bad) push out fcmove adc aas and push (bad) mov mov fnsave pop loop sbb jb xchg shr jbe es push and and jbe push or or pop mov ja daa jl jge sub mov pop xor cmp inc mov iret and (bad) mov push or or mov jnp mov loope addl push jb pop lock leave or dec movsl push fisttpll cmp push (bad) testl cmp mov or pusha mov jmp insl push cli sub or mov loop mov cwtl xchg jbe fdiv or into out push ljmp inc aam pop dec nop inc sbb aad ljmp cmpsb xchg mov sub fstps je lods and or push xor (bad) rclb lods pop mov jecxz dec mov dec mov (bad) movsb test repz sub add mov popa repnz or adc adcb lahf dec cmp sub mov ss sbb in lds cmc pop fxch push or mov cld call cmp ficompl outsb fs xchg into jmp leave adc push out (bad) out dec sti test xrelease xchg divb cmp cmpsl hlt mov push popa sbb aam js mov dec or arpl out movsl or es adc (bad) pop incl sbb or out add mov (bad) jo dec or inc in adc mov jo jae xor loope mov clc jmp lods jno movsl xchg in fidivr cmp adc test (bad) aaa test std aas pop dec adc or push adc fsubr xchg sbb andl pop lods xlat mov and lcall jge rorb fdivrs inc rclb dec out or adc out mov das out les inc sbb insl or hlt jge mov lock (bad) fimul ljmp fwait mov xor add add imul mov pop adc loope mov in (bad) or xchg mov and sarb out jae sub add repnz std pusha hlt cli jecxz lcall cmp push mov xchg test test dec scas add jp icebp or mov fstpl mov out mov push xor imul jae jecxz jmp test mov xor xchg push xor xchg in add repnz pushf adc mov movsb or in jbe cld test imul sub cmc jne loope mov fldenv dec adc fsub out xchg ficompl sub insl adc mov sbbl in push dec cmp push inc scas adc mov jmp mov dec inc inc decb arpl bound imulb dec test mov fldcw stc adc orl insl jno cmp aaa jmp mov xchg aam daa or cli inc cmp in outsb aaa xor jl ret inc or shrb dec xchg mov (bad) aaa add add bound fnstcw cmpl fldt adc adc or stos add dec insl jl sbb mov (bad) adc sbb dec dec rcrb mov addr16 ss jge test fcoms out xchg repz popa xor jns in jp hlt loopne mov pusha add lods and jl das jl movsb sub and lahf or addb xorl mov xor dec cmc stos lcall test ljmp add pop inc xchg nop ss adc loopne and and fstl loope cmpsb insl sahf (bad) aaa cltd int mov add mov stc cmpsl movsb adc or faddl push jns pop jb stos xor in rclb xchg xor sbb cld jno and dec pushl pop jle loop sub adc mov aad xchg loopne jo fnstsw out idiv repz jb in push (bad) adc lret out ds mov jo popa bound icebp cmp aaa (bad) mull mov or adc int icebp inc lret aaa mov dec jne dec in mov pop adc cmp jno jo lcall jl cmp and mov cli ds insl push push jbe xchg test (bad) jns inc lods in aam enter std jbe frstor repnz popf (bad) and lret or and adc repz or or test into aas sbb sub sub add rorb sub and or test lahf imul aad add in sub sahf jno ja aam in mov (bad) cld into jmp dec (bad) loop lret xor pop leave arpl xchg (bad) jle test or je cmp cmp mov fistl pop fs pop out cltd push pop inc mov push bound out xlat or dec mov fs (bad) mull pop jns cmp aam test xor jle mov decb dec fidivl js add xchg out lcall adc push pop and dec test push ja mov shr mov pop jecxz dec jmp cmc mov out pop in or mov lds and add add es and adc inc (bad) add pushf cltd mov gs hlt nop and cli push adc or add inc mov repnz insb enter jle stos sub sbb sbb shl cmp or push adc andb jl,pt call mov cmp es addr16 lods bound int3 arpl test jae std movsb repnz hlt adc jb std xchg lock cmpl mov xchg dec or test popl adc dec fnsave mov adc lock lea std sub mov fnstenv add repz adc jg rcll push jae fsubrs sahf mov rcll pop fstl std mov loope push push aas mov addl cmc xchg dec push popa mov test inc (bad) pop cs sub cmp jg fldcw data16 xor and mov dec pushl aad (bad) jne stos test mov cwtl gs mov adc jge leave push mov add (bad) sub mov mov inc xor jbe test std gs repnz in icebp or insl sbb sub mov jno jp jle mov rcll aaa cltd sti (bad) call sub ret push imull mov mov lods dec stos cli mov iret mov xlat insl xchg scas rcr stc sbbl push clc sti pusha add add xor push mov mov or fs jl daa jge or push data16 add lret dec jno arpl push pop aam in and cmpl jo mov inc nop clc mov pusha iret xor jle inc mov faddl popa rol or ja cmpsl mov test into sub in out mov test mov pop and pop out imul ja and cmc cmp push push mov adc in pop lret push sbb inc jmp into out mov cmp inc leave cmp mov orb lock adc or scas bnd mov enter cltd std or and mov ja imul sbb loop xchg jge xor ret rorb bound cs adc inc cli dec dec hlt mov stos cltd or inc sub mov sub pop or loopne xchg sbb lock mov or mov add xchg xor inc or sti jns push push mov mov hlt xchg adc in fsubrl jns insb mov (bad) mov hlt test fisttpll or jecxz iret cs bound mov inc mov insb into mov dec and and or pop dec cmpsl clc or shlb xchg std push inc stos loope les jb test inc jl sbb cmp clc mov lods out loop fimull xchg mov xchg mov out bound add inc or jb mov cs or or scas pusha addr16 idivl dec stc sahf mov (bad) sbb ja mov jbe or xchg bound mov fs or ret xlat std mov cli xchg and dec hlt inc cld mov add or or rorb jb (bad) push mov xor jne lods push sub jmp sbb jb leave ffreep mov fidiv jecxz iret mov cmc push sbb xor fucomip mov mov dec or (bad) cmpsl ffree jae int3 in inc cltd into xor sbb loope sbb inc stos mov into push mov int mov mov rcl data16 sub xchg outsb lock sbb movsl and leavew mov and les pop test cld aam int xlat in int3 mov cwtl pcmpeqw fldenv in and pop cmp mov or cs test test add nop sarb (bad) stc or cwtl mov or adc push je or data16 xor rcl ret push mov dec aam or dec in rcrl cltd or fmulp adc clc mov push insl sbb lods stc cmp test xor lock cmc loopne sarb dec aaa cmp mov dec pop or push outsb or pusha adc ja xor push xchg ja aad mov inc rol cmp mov cld inc inc ds xchg call stos iret sbb popf stos cmp mov or leave sub push loopne or cmp movsl (bad) push mov adc lock bound icebp sub xor mov mov sbb xor or or ljmp (bad) cmp jp cmpsl jl out xchg leave imul push mov mov dec mov adc sub rorb nop aad mov inc jbe or gs jmp sbb push in mov add xor mov cmp shll xor out daa out sbb xchg outsl (bad) mov inc test ljmp mov dec add fs or xchg loop (bad) iret movsl divl xor mov into mov lock loopne fisubr inc (bad) mov sti pop cwtl or sbb mov mov or iret mov aad mov or nopl sub sub iret push inc inc sar ja mov mov fmuls cmp dec or and inc xor ds popf addb je leave sbb repnz mov inc cmpsb imul popf mov and orl push lret inc dec mov adc add pop dec (bad) rorb popf or and js lods dec or lds jle xor or lahf sub sub add lods xchg fiaddl daa iret imul or pop dec xchg sbb xchg in push das or addr16 xchg or lods (bad) ficom dec or xor fisubl and in dec mov out cmp decb insl mov dec mov adc loop imul iret jecxz cmc inc xor repz shrl aam pop das hlt call loope mov out cmc insl inc and push repz push in scas in adc or jae std insl sub or or dec xor push pop orb test adc cltd add lods aaa push jo mov pop fsts repnz ja cmp mull je and aam ja inc and fdivrs sbb or add cli or xchg lcall xchg push cmp or lock dec jns enter sbb dec cmc adc pusha jmp ret ss icebp (bad) and hlt push adc testb scas cmc mov adc mov dec call in idiv adc out cmc in je (bad) cli pop test pop sbb mov ret icebp adc ds push dec dec out lods jl mov iret xchg idivl out sarb pop out hlt dec push ja call cli jae xor xchg test jmp hlt push mov mov aad daa fstp je mov mov mov in jle mov xchg xor xchg push jecxz push push cmc repz xchg jns xchg jbe cli je in jmp movsl inc or dec inc std adc aaa mov insl addl xor xor sub xlat ds xor sbb in (bad) out enter mov popa rolb and out mov fisubrl sarl movlps loopne jns (bad) clc jbe jg or xchg test sbb pop pop dec jl mov cmp adc mov (bad) fidivl out in add out jle jmp scas xor jb outsb mov mov (bad) xchg adc imul test int3 lods cltd mov cli cmp dec xor cmp xor (bad) imulb mov jne cmc add jbe leave push adc or and mov outsb cmc jnp mov adc dec movsl test lds aas sbb mov xchg mov (bad) sar pop push adc movsl aad jne jno vmovss lret test or es out fldcw or roll add int3 aam imul or mov and sbb pop (bad) xchg sti xor in (bad) mov push or subl push mov inc adc cmp cmp (bad) push mov inc jle or in lods or and icebp loop pop aaa or sti push orb add das ja ja sub jbe or (bad) in mov enter dec adc jbe xchg jno les in or arpl push loop mov cmp fimull mulb bound and mov jo mov hlt outsl in push ljmp jnp xchg inc or push ret data16 or loope pop inc repz cmp movsl add fsub xchg mov outsb inc mov (bad) sbb out pop lds (bad) mov shl out sbb das addr16 and rolb fidivr iret mov adc cwtl in shlb push bound icebp xchg jbe fwait lock lret push pop pop je jo cmc dec mov repnz mulb out lods in (bad) enter inc rcrb pop sub xor add cmc pop sub rol mov loop sahf lds cmp sub sub jbe aas sbb mov sti (bad) loope xchg add outsb or test fisubrl (bad) (bad) js popf (bad) and js hlt int leave jbe cli sub imul and insl (bad) dec aam popf fs divb dec cli mov adc rcrl or add mov cmp sbb cmp subl jb enter push cmc xchg dec push leave inc dec fcoml in das sub aaa test inc sti mov in idivb and lods adc xchg dec xchg test sub mov call test dec sub (bad) lock enter dec xchg test and cld leave arpl stc jne (bad) xchg pop jnp movsb xor pop inc or iret sub push cmp icebp movsb sbb and push (bad) xchg hlt aaa or mov or cmc mov neg push inc mov dec or xchg test or je call or mov pop test and inc (bad) mov aas add das and fidivl add or test sbb pop notl or inc sub clc jnp pop int aaa or jbe lods xchg int sti movsl mov mov imul cmpl int3 mov inc mov decl dec ljmp sahf cmp into jecxz popf repz cmp pop ret adc mov stc xchg sub or mov mov dec cmpsb popa mov xchg lods insb or loope out add fistpll popf dec not pop sub mov ja ffree xchg add lret or pop negl jp xchg lock popa lods cltd or push int jmp cmpsb jecxz dec dec leave pop push push add jne out xor pop fdivrl mov dec xchg sub or push loop jle sbb xor outsl xor cmc cmc outsb lahf sbb shl jno pop cmp loope in popf iret (bad) or outsb in cmp push test and push (bad) mov fwait and jbe sbb add push aam xchg loope pop icebp mov add inc mov and mull test mov jg push or add add or cmc dec adcl ffree or lods aaa es mov or add push in lods xor mov push aam and stc xlat or fldl repnz or dec repnz stc test jne iret jnp cmp inc or ret (bad) je jecxz lahf mov test cli idivl xchg js ds ds push ret mov cld loope or fdivrp push addr16 dec add out in pusha xchg test mov mov cld push xor push stos fidivl cmp lods (bad) or inc ja outsb xchg push or push mov jno add sub in mov add nop rclb adc test sbb cmp mov xor mov pop inc dec and or sub jge jl jb lea add imul out xchg mov repnz cltd movsl push cli je mov pop jae cmpsl or jns (bad) rcl mov cli sbb mov lea aaa test adc fbstp lock aad pop in mov sbb imul or icebp and cmpsl add or popf adc (bad) push int pop fadd sbb out xchg jbe mov jmp fcoms dec xor adc mov (bad) jns repnz mov or int mov sub cs xchg test loop or sub aaa into sbb fxch push sarl lret hlt (bad) jl jnp mov mov rclb lock into lea lahf or icebp or sub sbb or (bad) mov add (bad) mov insb and mov icebp outsb jbe adc shll cmc mov (bad) dec in mov imul or (bad) mov bnd cmc pop sub sbb fildl idivl lahf fimull push lret or mov jb pop pop outsl or pop inc mov cmp lret enter and adc rclb sarl enter out inc fmull cmc pop in pop dec sahf xor adc int3 xchg arpl sti push jge decl fild or sub xchg cmp fdivrl ss inc (bad) xor sub dec mov les adc pop (bad) lea jecxz jmp movsb mov movsl xchg scas fmull leave hlt cmp or mov adc cs pop pushw sti lds popa jg (bad) insb or add aam cld sbb dec dec mov call int3 dec jns sbb in or popf es lods mov push movsl sti or jo insb push rol jl imul push stos sub jb dec aad and negl mov out cltd mov test dec test sbbl cs sbb popf xor cmpl sbb lcall je xor cs orl fldl cwtl cli cmp nop insl imul xor inc sahf add cmc or or jb or pusha popa mov lock cmp pop xor jmp test pop cmp cmpsb sbb mov and xor dec imul sarb or cmp (bad) je mov cmpsb popf mov (bad) sub into push cli cltd mov add mov popf imul mov mov xor fstps cld mov shl lcall add and xchg in fdivrl pop fadds ljmp dec or sbb in xchg bound and cwtl add hlt mov add sahf sub enter or mov andb frstor dec dec pop fs inc or fdivrl xor enter cld jg mov xor mov pop dec or sarb xchg add rcr mov (bad) mov dec inc loop sub outsb or sub aad movsl fsts stos sbb in mov pop jecxz and or jbe add lock orl lret or adc addr16 adc sbb dec icebp in dec insl or mov jo or stc pop cmpsl loope fmulp in (bad) lret aaa sub or pop or sub cmp orb adc xchg mov dec insb xlat mov mov ja dec or mov pop xchg out dec dec fiaddl neg aad mov je orb cmc punpckldq xchg xchg adc imulb stos sbb lret push add insb sub inc pop or xchg pop sahf mov test test jo and pop or leave push cmp inc sbb fsubs cmpsb xchg or push cmp jp lds sbb pop mov lahf inc mov jae adc aam enter dec or imul cmp test pop cld (bad) int3 pop sti lds jle mov sub sahf out cmp sti setne adc cld jno fdivs add ret or push ficomp add imul mull sti out int mov out fdivrs divl and push dec jo jle jno test and addl dec lock jl enter xchg fstl xchg popa or dec push jg add popa dec imull mov dec cmp and repz sbb (bad) (bad) pop xchg or sbb xor mov stc (bad) out ss out testb xor cmpl fldcw mov popa (bad) pop lock inc test rorl (bad) push cld mov (bad) ss out aaa test outsb cmc mov or mov orl divl je pop or aam pop xor ret xor loopne sti out jmp push daa or imul aad fldl xchg mov sahf push lock inc popa xor or mov xchg or dec adc pop add or ret lret jge adc and movsl mov lds dec jnp sbb inc lods mov jge nop or rorl xchg xlat (bad) jne inc adc fbstp push test loop pop int3 mov adc out inc fdivp add outsl fdivl and faddl push dec pop stc repz cltd jg cmpsb jp mov inc or idiv mov add dec or fstps inc out scas or jae addr16 cmc sub out dec mov jns cmc andps je or dec and cltd cld mov sbb dec insl mov (bad) sti ja xchg dec mov push dec or enter sbb cltd mov fmuls loopne mov xchg push (bad) xchg roll xor or es or inc xor cmp cmp (bad) lahf jbe,pn or add mov mov (bad) arpl pusha mov insl mov int fimul es pop shr imul lock or jmp stc mov test fidivrl mov pop lea inc ds sbb dec stos mov mov mov fldt fcoms inc sub and xchg cmc add je ret pop divb or lcall decl or movsl xchg ret mov xchg int gs ja (bad) arpl cwtl test inc xacquire cmp xor inc imul adc iret fildl stc insb or out pop stos loop outsb or cli or rol lods imull jo sub sub xor es mov call loop mov jecxz mov mov sub lea dec popf aas test push lea insl lock mov lret out push hlt and cld add aaa adc mov xchg mov out mov pop out or mov jo add shrb sub sub sbbb (bad) mov sbb mov outsl jecxz adc stc pop dec adc loope jns in insb and mov mov sub stos push mov or arpl aam or popa mov (bad) scas hlt xor xor mov in sub dec or int lods pop push or out lret es in mov mov and inc out push rorb mov xor mul push xchg out inc sub insb not hlt icebp and mov lahf lcall arpl repnz cmp test xchg push (bad) frstor movsb pop fidivr and ret push into sub dec (bad) mov jne xchg test sbb rorl ret jmp or sub scas mov adc popf (bad) mov movsb or mov lret push sub inc adc bound decl aaa or cwtl xor pop xchg pop mov ret jmp enter addr16 mov xchg jl jmp cmpl add adc mov or xor nop ret push jg inc sbb xor pop or sbb lock pushf sarb in push or inc cmpsb gs sbb sub mov hlt ds push stc aaa rorb mov lret dec out jno inc orb sti clc xlat or xlat sbb xor pushf (bad) jl test sub jne or repnz sbb test fucomp data16 mov js pop or push add repnz insl sub sub or adc jecxz clc cmpsl jns fcmove stc dec push xor cmp je dec es mov leave lock (bad) sysenter (bad) dec lds xor mov pusha xchg fimul push sbb cmp or jbe sahf push ret jg dec jmp xchg adc or fisttpll sub adc popa jae scas or imul mov stos jbe fidiv lret or pushf (bad) ja mov ljmp cmc rorb ss sub arpl incb mov rolb mov xchg mov hlt jne mov stos mov bound aam inc mov lock or std cld daa sar idivl mov gs or jns add cmp or cwtl xchg je arpl ljmp rol bound pushfw xchg mov cmp push dec or add movsb xor out mov int in xor scas push or add pop or push xchg or out xchg in and push jle pop lock in ret inc add pushf leave enter movsb arpl xlat dec das test push shrb repnz repnz mov pop lods mov xor loope or or lea mov decl sahf out and repz lock inc add mov or sbb or loop rorb or adcb jecxz test add mov cmp rorb imulb sub nop jp and insb add aaa outsb (bad) dec xor out cli or int mov add call pop (bad) xlat push and fldcw js (bad) jne decb and push cli pusha or xor (bad) push ds mov and (bad) fstps and mov mov sub or adc jge pop scas popa fsubrl mov sub pop mov adc gs out push fnstcw jns push out xchg xchg inc imul (bad) je out or dec xchg paddd mov sub or imul mov mov add testb xchg sub mov mov cmp pusha jns popa cmp fisttpll inc je sub bound scas shld (bad) xor xlat pop dec notb sbb mov mov out scas cli jg jbe test idiv xchg (bad) scas jmp jecxz mulb cmp fcomps (bad) dec into mul xchg inc push pop out dec pop lock or in xchg ffree js mov xchg mov cmpsl push cmp aam gs sbb mov arpl pop cmp push adc dec repnz xor movsl test mov gs adc shrl lret push fistpl enter sbb or and fcomps in test cld jmp bound icebp loopne jo and jmp stos or aaa in test lods pop rorl xor imull into std popa (bad) or mov cmp xor popf or iret cmp and lods imul cmp movsb pop mov xor negb inc jb mov inc (bad) iret or movsb cwtl mov stos test sub pop iret jbe xchg mov imulb sub shlb or into and sbb aaa mov pushf mov pop int js pop or dec xlat mov and outsl pop pop or hlt fimull (bad) test cmp cmc fnstcw (bad) mov add leave mov sti mov jmp inc outsl lds out lock int add mov inc stos in cmpsb test lock loope out push or pop sbb movsb jmp arpl out and repz leave add ds or mov aaa mov (bad) lock imul or iret cmc subl dec fstps leave jb test inc mov xor fidivr fidivrl sub xor pop jbe add inc xor jo adc xchg lret sub aaa and cwtl add std sti cltd outsl mov (bad) pop jmp add dec mov dec xchg loop mov dec and bnd xchg dec jmp imul sbb scas inc dec out xchg jo sbb cmp adc xor cmp mov sahf jecxz outsb sbb insb lret mov jle test (bad) aaa sub clc insl leave test arpl out imul dec out adcl lea sub lahf dec or lods adc call fdivrs add inc cmp jmp jo movsl imul push adc sub aas aad je inc mov sub sbb lds xchg incl (bad) dec xor hlt out rol cmp cmp imul pusha pop jne mov call adc mov adc pop outsl pusha and jmp push xchg pusha mov pop mov sbb or lds mov popa in mov or aaa idiv mov jno std lcall xchg xor or popf fisttpll xchg aam cmc and subl jg in (bad) add or add fwait sbbb dec add fildl sahf jmp jns repz adc dec roll push pop xchg pop lock mov or pop (bad) lock and jecxz inc icebp adc bound in addr16 frstor leave lea dec mov pop mov jge or jb mov mov mov xchg ljmp ja and or (bad) mov rcll in pop xlat and imul and push xchg fnstenv dec mov out mov loop (bad) mov cmp mov clc sub in std adc std arpl add gs test out push pop out (bad) xor adc adc inc jb cltd clc mov xchg lret scas fistpll mov jnp mov scas and adc lds data16 sbb push loop call (bad) jo sbb mov adc in jmp fs std in arpl int popa cmpsb cmp dec xor inc jge cltd mov push dec imul movsl sbb mov mov loopne mov xchg inc or inc inc nop subb adc int pusha mov cld js (bad) dec fiadd lds adc fsubrs or mov stc sbb movsl neg test out fstpl (bad) into imul test xchg cmp push jnp mov push cmpsb xchg or jnp and mov (bad) nop fucom enter add fcomps or push stos cmp adc rorb or clc and dec ror or xchg xor mov and (bad) push fwait push call xchg loop pusha hlt or pop das jle mov fcomps jmp mov dec out hlt or push std out scas orb dec (bad) push bound add inc shlb aad lret and in ja jae std fldenv xchg push and and (bad) outsl js repz ljmp cmp and dec notb xor cmpsb (bad) push sub ficoml add dec sub insl lea xchg pop gs or push push or int3 test fcmove sub hlt lods xchg rolb dec pusha mov or loop inc fcompl lret or or cs fisubl mov xchg or test cmp fwait notl and arpl lahf test jae or dec icebp sbb xchg mov dec dec jnp or mov out cld in jno sti leave das pop add sbb adc scas mov or pop sbb in cmp dec xchg sarl sahf (bad) int3 fsqrt stos js jl xlat or enter fwait sbb cmp jbe xchg adc sbb xor sbb add fisttpl repnz aad sti fcmove mov (bad) xor scas mov fwait out out dec leave test xchg aam add (bad) into push xor popf dec fdivl call in out testl push mov xchg xor fucom out (bad) push insb (bad) icebp or in mov or sbb lock mov inc mov testb aas jne or or in lret push fisttpl or mov pop add negl aaa leave push or or xor add ds and sub sahf nop mov test inc adc pop cwtl pop and mov cld test shlb mov inc (bad) xchg mov je push xchg sub dec jo in dec negl adc outsb add (bad) je mov ret hlt xchg nop (bad) cs xchg adc scas stos aaa aad or leave stos xor inc cmp dec jp or aam mov jecxz jne add pusha iret inc sti jl aas xchg notb mov jmp or je push xor aas adc push xchg mov jl (bad) idivb ficoml inc arpl adc (bad) push xor jb adc sbb nop in cltd jo (bad) test inc pop sub mov pop fmul sbb rorb sub jecxz push push cmp jle rolb cmp or les imul stos jo and jbe inc pop xchg add hlt adc dec int pop loope outsl mov mov fsts mov or sbb xchg rolw mov ficomp cmp out jle pop or push testl movsl call movsb ljmp test bound xor add mov mov sbb xor hlt pusha ds stos jle lea or ret movsl mov pop std add int sahf je ljmp push test xor movsl decl cmp fild mov add and outsl ret push inc sbb adc pushf andb (bad) xchg inc aad lret repz test cmpb and push rcrl hlt (bad) push or jbe cmp sub push jp add mov jg popa push cwtl mov fnstcw inc push lret mov fs mov (bad) pop out mov addr16 or sbb add cmp mov sbb push or shl xchg mov imul mov mov dec btl cli jmp jns daa or mov stc add adc out push insl push jmp arpl jmp xchg inc aaa hlt pop outsl std mov insl in mov out or jnp outsl sbb divb or int3 or dec pushf ja iret sub hlt in cwtl push dec mov arpl cli fldl das leave jmp jns mul sbb lods pop fmull repnz and cmp mov cld mulb movsb xchg fmul ret jns outsl hlt or (bad) mov pop popf ds push clc sbb lods das xor cltd mov xor or push insb push inc adc lcall int3 mov mov icebp or push or leave (bad) cmp (bad) mov or dec cmp cmp jae test pop in es das fcmovnb icebp dec adc xor xor sbb arpl arpl fnstsw pop in hlt cli inc leave mov cltd fildl and dec xchg push mov fdivp xchg xor out dec xor aad ror inc jb lock orb or rcll cmp pop jmp daa sbb jbe es dec adc pop sahf mov ret xchg jl adc or (bad) outsb xchg lret lods pop imul cmpsl jo adc (bad) lret xor add or jl and (bad) test xor mov lret add and out movsb adc xchg jns dec test or in outsl jle lea (bad) push daa jl insl icebp iret call in mulb inc sarb test xor idiv mov pop lret and incb insl and push lods repnz push das mov ss stc aaa loope lret out mov out pop iret inc mov jno pop loopne mov stos or in jl insl xchg loope pop adc mov jmp std lods icebp loop mov lds jae aas out lahf int3 aam shll std and negl sti mov mov cwtl pop scas push xchg jns add dec sbb fdivl xor in insl jl jne mov push and pop je std daa and adc pop push das pop das outsb fs ret jg mov bound xchg adc (bad) dec cmp mov test mov (bad) cmc jnp movsbl (bad) gs (bad) cmp rcll mulps add and or arpl adc pop movsl inc add flds mov adc pop dec jmp roll stc pop enter pop mov movsw jno lea and inc ss sti pushl inc rorb stc xchg movl xchg stos mov mov jmp sub adc mov in das (bad) fldcw lret test pop add iret outsb hlt jo insl leave inc jmp inc mov fbld rorl insl ficom pop lds cmp orl xor repnz mov push aad dec mov jo or or ljmp or (bad) mov hlt jno std sub dec je mov pop repz xchg (bad) mov mov loopne test iret or sqrtps pop dec loopne sbb imull jnp mov out adcl pop sbb and or ffree test testb sbb dec sbb (bad) mov lock sahf test test sbb sbbl or insl adc (bad) je lock fidivrl mov loop insl add and (bad) mov popf idiv jg lahf lock insl imul mov addr16 lret cs jo idiv pop orl pop xchg lock dec mov xchg ss jnp popa aam aam sub xchg mov out (bad) hlt outsl test xchg jo xchg add jb mov lea fisttpll mov cmp pop adc pop pop add inc inc into pop shr jl push pushf (bad) imul js xlat inc cmpsb jb insl jmp sbb aaa inc test (bad) cmc repz cltd dec dec push mov addl (bad) xor (bad) dec not pushf movl jecxz or enterw imul das mov push cmc cltd cmp sub pop ja push mov sub insl or xchg pop cmp and lret cltd (bad) incb aaa sub mov mov mov dec dec mull add mulb xor test xchg pop cld cwtl mov sti js and mov adc (bad) push and sub negl repnz dec xor mov sbb jbe jle int3 in hlt dec or sbb mov mov push mov dec dec leave jl sahf mov or scas inc xchg jmp sbb mov ja inc cmp adc popa xchg adc cs pushf pop subl mov cmp insl or pop lcall add pop movsl fdivs leave sub scas mov or test sub jp fbld mov loop inc pusha mov clc mov rorb xor lods mulb cwtl or bound inc pop inc xor aam repnz push mov xchg (bad) cmp xchg adc repz (bad) inc cltd and mov lock (bad) repnz xor into in arpl xor jns call xor inc inc jecxz cmc jnp push xor imull add icebp adc cwtl mov aad aam cmp or mov push mov and dec add leave aaa movsb mov lock add test mov inc or (bad) or adc pop sbb scas mov leave repnz fwait bound stos pop pop or sbb xor xchg rol lea or inc inc aas cli pop sbb cmp (bad) dec into lret arpl int3 dec out or xor cmpsb inc jnp xlat insl daa sbb insb mov jae dec or xchg pop pop in jle lret or sahf sbb inc insl jbe movsl xor das in popf mov mov out and add (bad) mov lret mov ja loop mov or loope (bad) int inc in (bad) push jnp inc add fcomp jp jl fprem1 pop rolb xchg aaa mov repnz mov in dec or repnz sub mov (bad) sbb jno out lea cmpsl dec and aam stos dec (bad) aaa aam jbe addr16 mov dec add int add out xlat adc rorl ds lea xchg pop mov in mov in std aaa in jmp mov test bound and inc out or jns cmpsb jl dec sbb (bad) (bad) movsb cmc test push out push addr16 loope and sbb jbe mov aam cmpsl jle sub jno iret aad xor jecxz adc fsubs push sub or inc jbe (bad) mov test fstps mov fsts jmp pop mov imul mov iret mov mov (bad) mov outsb or or lahf insb mov cmpb ds cmp xor mov dec sbb jns or cmp mov mov lret lret xor dec (bad) pop pop or or repnz dec cltd aad insl (bad) int3 inc mov sti xor ds clc (bad) iret xor test adc or xor cmp arpl cmc imull cmpsl pop and mov bound (bad) mov es dec adc (bad) outsl notb loope jle inc and insl sub cmc out (bad) repnz dec out sub repnz dec sbb dec mov or pop lock aaa xchg jle,pt xor add loopne cmpsb adc inc in jg add jno or sbb lret aaa in or add shll clc jl arpl xchg sbb leave cmpsl aad das jns adc insl stos ror lahf stos dec fsubl cmpsb jle out imul push stc jp nop movsl dec push insl sbb jmp rolb lock cmp cmc inc or jle stc test cmp mov call (bad) adc push adc mov mov xor lods loopne mov or addr16 cmp push pop pop in dec mov dec lds or div and mov scas dec in cwtl dec sub mov fcmovbe std add mov ffree repz fidiv inc out sti mov pop jbe outsl gs mov fist adc loop mov mov leave lds jnp fldl cmp loopne mov mov ror sub mov dec mov outsl and jnp pop mov or dec arpl daa rcr mov in mov lock fnstcw (bad) xchg leave jno sub movsl repnz flds xchg sbb jp push outsb push adc lock cmp int3 test xlat mov dec mov sub or or test or fistl (bad) or lods negb push mov mov adc aaa lods idivl or jae test or pop std test push js and and mov lock lret bound cmc daa rorb mov out sbb add out insb xchg mov or aas and out add mov mov and pop pop or jnp in pop mov shlb add cs ja xor lods mov or gs fidivr mov or and mov sub push ds leave lea sbb fbld mov loope repz xor or in dec jmp sbb mov das daa or jnp push push pop (bad) aam sbb mov or adc mov jp lea ret xchg fisub in fistp or push scas movb cmpsl (bad) stc shll dec mov cli dec sbb mov pop out (bad) jnp ljmp mov mov sysenter and sbb test inc sub or mov aam cmpb bound adc sub pusha xchg orl pop fisttpl loopne xor sbb scas xchg inc popa repz iret xchg ret nop and xchg (bad) enter leave adc les fisttpll or or hlt das out shrb or loope scas cld scas cmc or sbb leave out mov faddl mov aad or and cmp out test popf pop sub mov fcmovnbe or jmp in xchg arpl or fidivrl test cmc xchg scas xchg std shll loop call out sti fnop (bad) hlt lret mov enter dec sarl xchg dec jnp test lds mov xor mov movsb (bad) out pop imul stos test test dec add (bad) arpl pop je mov jae jnp (bad) jb orl mov lret pop addl and add int rorl push es lock mov (bad) call std js lret or inc inc and sub fcomps in lods mov adc lcall mov mov aam fisub mov sbb cmp int3 dec (bad) in jl jbe sub pop sub mov jg es test ljmp sub mov xchg orb enter xchg or data16 shlb scas add mov push out xchg test push neg subb outsl in xor mov sbb imul arpl xor mov dec or enter dec sub data16 jge test lahf pop xchg cs std out hlt popf or push push and xchg cmc or mov dec loopne pop aaa cmc insb mov je notb inc test stc or pushf inc xlat or xchg dec adc jmp cmc int pop mov data16 aad cld jo iret sub jo scas test mov jp xchg icebp loope dec jp (bad) aaa adc or clc xor mov or sub and (bad) or les mov lret imul pop jge inc sbb push rcll (bad) outsb daa or lea mov popa cs or fs sbb push xchg jbe mov push (bad) aad mov mov fiadd and mul nop int add sbb jno add or repnz or fs in mov aaa and sub cmc imulb outsl cmpsl frstor or mov push or test sahf mov inc lock inc leave add mov push dec (bad) dec ja lods lods test dec cwtl cld cli je dec cmp push loopne mov mov clc adc adc lahf in inc add xorl mov jp push stc sbb in sarl je adcl or lods insb pop add or jns sbb push test xor jno rorb push xor out mov movsl in adcl stos leave mov or (bad) jo orl xchg add lret xor nop in or jle xchg loop lret push jno cmpsb pop orl mov (bad) jecxz cmpsl mov push lret pop (bad) leave or jmp dec and lods imul add xchg jecxz mov push mov pop or mov mov ljmp add mov movsl jmp out mov cmpsb and pop cmp sbb fisttpl ja dec jmp shl aad xchg repnz jo jmp (bad) mov js mov ret sub and xor mov popf mov mov push in or lret pop insb dec test aaa cmc jp jmp xor fcmovnu pop fimull imul sub mov or or cmc loopne lods fwait dec mov fistl xor (bad) lret pop xor jp and or mov or iret xchg movsl das jne shll push lock mov mov jno dec sahf mov movsb sti mov cmp (bad) (bad) hlt add decb add cmpsl addr16 pop sti pop or sub inc divl or js scas aad sti rcr sub adc sub add int inc std mov or push (bad) in (bad) mov nop adc fidiv mov ss fsubs and in cltd repz test shlb and xor leave fcmovnb fdiv cli cmpsb adc add hlt xchg repz and stos jg aas lcall mov fs adcl and mov push pop pop cmp adc pop push fwait push sbb push mov and jns mov jge ficom ret lods (bad) test pop adc int pusha push cmc mov ret xchg add fiaddl xlat sbb jb push or adc mov cmpsb adc movsl out out pop mov adc sbb cmpsl adc lods ss movsb loopne std sub cmc fist sub ret sbb fwait ljmp or aas popf test cli sub cmp mov xchg hlt lock (bad) xchg rep dec dec icebp cmc mov (bad) dec (bad) dec imull js pop cltd pop push bnd mov mov or pop xchg sbb push mov fstl in test stc imul std ja arpl or rol pop jle dec loope fmul es or add fildl pop dec mov (bad) adc nop push in mov sub jo cltd dec loopne daa fistl adc repnz daa sbb adc add jo xchg sbb stc clc adc bound fcmovne out push popa xchg cld scas jnp push mov dec jle jne (bad) cld insl adc adc mov sti xchg cs aas xchg sar add lds xor (bad) mov jno push pop fisubrl mov outsl dec mov adc ret test lea add int cmp outsb jo notb add ss push stos imul out or outsl mov pop adc lock xor je push adc enter sbb dec stc mov repz leave pushf jl insb jb pop jno in adc adc inc mov adc dec mov pop dec std xor pop fistl sahf xor jg mov sbb ss mov stc mov cmp lcall insl out cmp daa mov jmp call cltd addr16 rolb nop enter jns xlat lods repnz in (bad) std lock push sub jg add mov movsl cmp add mov fldcw pop mov or in jl test cmp adc cmp test leave iret mov xchg mov lea test (bad) (bad) jmp neg cltd negl mov or cmpsb adc jle addr16 dec loop jmp inc (bad) jae push shrb or mov cmc add jg aas mov repz (bad) xor nop xchg cmp adc pop xchg (bad) cmc out std jmp mov sbb xchg ja ficom adc sti pop mov sahf inc mov pop leave or in es jle sub sbb mov add repz lret xor inc and mov test mov dec daa jg cmc outsb lret sub rol and jmp ja aas jge cmp mov fwait xor imul or fidivrl div mov fs sbb sub movsl inc pop push cwtl lahf scas jno lret xchg push pop lock and or mov movsb xor out and dec mov sbb push imull repz out push mov mov cwtl or sarb and dec or push add mov movsl movsb sub add jo adc xor rorl xchg push adc ljmp sahf inc test or test out test cmc pop scas mov sahf fdivs popl sti enter mov repz or jmp sub push (bad) test mov inc ljmp sbb xchg dec cmpsl or sbb or ret test push or (bad) mov loop (bad) push mov and loope jle int ljmp jno inc lcall inc std xchg push sub icebp mov dec (bad) aas movsb mov pop or ret jae or lahf adc test stc or out xor fs jb imul adc (bad) es popw fstps sti fidivl xlat xchg xchg scas or imul lret xchg bound stos xor or fcmovne (bad) pushf inc scas pop or lods in dec lock or aaa lods pop adc bound adc pushf test repz cltd ficompl add out jmp push rol outsb or lods and arpl jbe imul loope es insl push lods ljmp and add orl ljmp mov in icebp bound les dec or (bad) iret mov sub insb and jp dec or mov sub mov sub rolb mov push lcall sbb inc or pop or aad or xchg mov push mov or out jne sub jmp mov scas mov repz adc sbb sub aas dec clc jae gs or xor push dec push or or (bad) fadd and or (bad) int3 nop test cli jp push fbld push or adc sub outsl adc and imul dec cld (bad) lock das (bad) adc punpckldq mov std sbb outsl ficoml fs xchg cld leave icebp stos mov jns mov rcrb icebp fwait xchg sub out and insl add mov jp addr16 adc stos fildll std add fnstenv dec (bad) dec out lods inc mov insl xchg adc inc sbb loopne leave idivl mov inc pop ss (bad) mov add mov xchg jecxz mov or pop add leave lock lds jle or dec rcrb pop jns push out and icebp pop je pop pop lods daa inc dec loop adc mov or stos loope jbe dec add mov notl xor add stc adc in std add dec in mov adc xchg movsl movsl insl add xor in orb xlat sbb pop cld sub mov xchg mov daa adc ds mov test xchg mov mov stos in inc (bad) mov mov cmp push fucom (bad) jp add mov adc hlt mov loope cmpsl out and dec in and xchg jl mov ljmp pushf xor mov (bad) adc std mov out mov ja int dec mov and pop (bad) jae mov (bad) imul int jp loope mov xchg mov xlat iret movsb test adc xor and xchg or xchg add inc jp mov adc dec push fidivrl sub sub mov ss cmc sub or faddp jno stc cmp enter loop movsl jmp rcl aam scas out rorl dec mov in lods out aas decb jecxz or xor jns mov inc fstpl das or push repz push repnz sbb pop sti leave sub clc jg (bad) (bad) repz dec fiaddl or sbb fs cs or out (bad) (bad) mov xor cmp adc jge lret dec push dec movsl imul dec int3 adc into jmp or lea icebp inc inc bound mov jecxz push push mov in ret dec ja or push jge add test pop add (bad) jecxz sbb rcr jo leave fimul cmpsb sahf pop nop in or or andl add arpl mull sbb adc scas and ror jo lret lcall jns bound dec (bad) leave int push inc lock aad or xor fmulp jl dec dec divb jle cmp aad mov mov or out push inc adc test stos lods ror or jmp fstps jns sti mov lahf mov incb add inc push or mov sbb outsb (bad) (bad) or sar lods je fild xchg dec inc adc aad mov jecxz jp stc or (bad) xor fiadd les or or adc mov mov dec or cmp xchg mov and outsb ss dec (bad) popf out and cltd mov ljmp jge rcl dec out xor xor jno vphsubwd xor movsl fisttpl inc fisub adc daa movsl mov sub in imul call mov or xlat imul lds (bad) jb mov rolb leave lods sub inc sbb (bad) std inc mov mov cmc dec lret lea mov lahf cmc xor mov and insl push sub xor dec int3 mov add out lock fwait add mov hlt cmpsb mov or mov adcl xor sub push mov jne mov cmc xchg or pop insb xchg pop adc (bad) scas mov imull lahf (bad) insb xchg jno insl je ja in out jmp cmpsb dec push mov psubsb lret mov std rcll adc mov mov pop lock xchg cmp ljmp jmp push inc jns jg dec push out mov loop imul stc mov stos pop loop rorl cmpsl clc pop mov adc std repnz (bad) sub lret xor mov dec stos or outsb pop aaa add pop mov ljmp imul adc shrl nop out adc cld dec adc xchg mov sub ret jbe aaa adc ss stc inc out (bad) movsl dec mov pop psubsw out mov push out inc jmp fdivl movlps int jmp addr16 popa fs inc aas jl pop mov in ret leave pop add jmp mov jmp or mov xchg sbb inc xchg sti rcrl stos add pop rclb dec (bad) jno daa std mov test sub cmp out fnstenv jns or scas mov dec mov push in test aas pop mov cmp jecxz pop js or push jns and jl dec mov xor mov xor push adc scas mov cmp negb out xchg adc and or adc test mov sub dec or imul add or test leave xchg mov ss or (bad) push lods call lock pop sti sub imul mov mov loopne push xchg jg repnz mov mov mov jb dec lds scas cwtl outsb or lfs adc notb test lcall or and jecxz add dec out push or aas gs inc cmc insl cmpsb repnz cmpb xchg pop inc xor or insl nop (bad) (bad) adc xchg int3 movsb pop push add sbb adc dec dec mov mov sub dec xchg lret mov stos dec jecxz mov idivb loop push or cmpsl or fmul bound fs jmp xchg jae push scas push or std mov gs or mov ret outsb cmp out or mov scas int push or dec push dec or mov js xlat int negl mov cmp out pop dec sbb mul aad inc pushf or std mov push and xchg pop jmp cmp ljmp push hlt fistpl or add lock mov iret or test dec sti inc pop ret and cmp mov dec lahf pusha ror mov imul mov add or mov push dec or and cltd daa push mov jge xchg loop jecxz inc or mov jns or push sub add shrb pop arpl scas leave sub mov rorl imul pop out inc lock imul fisubl or pop pop lods push negb mov or lret and pop (bad) jns add cltd cs jns test push cmp testl pop jb or inc or out out jmp fnop cmc push xorl jns sti stc add (bad) aam lods fwait jns lods notl dec cmp push addr16 shl or jae (bad) loop xchg push or jge sub test dec imul sti push cli push fimul (bad) pop into sbb add dec dec jo lret daa or push mov jecxz sbb jge lcall or sub or sub cs add test xor mov lret dec mov jne jae pop in push adcl mov mov out mov pop or sub push pop or hlt and (bad) or out jle cwtl xchg mov mov iret mov and push sub push out pop or in xchg fwait add imul mov mov nop or into jns add addr16 adc cwtl je inc repnz rorl je testb or addl mov es xor jmp xor lds jo cmc xchg loope cli fs rorb push adc dec or sbb loope dec dec call dec mov test int sti hlt inc fwait jp (bad) pop dec mov mov mov fldt dec push push or push jbe stos fs push out jecxz or or fsts divl out mov and sub cltd pushf incb jl iret mov jo imulb aaa ja jmp mov adc decb or loop cmp jecxz mov repnz or and mov cmp jecxz xchg jl add sub jno out mov mov mov adc or aaa ds ja mov leave mov or test xchg or sarb push adc mov or or push repz lret (bad) mov in movsb inc xchg mov dec loope mov (bad) mov sbb xor lret jno fs lret mov cmp cmp pop or cmp leave xchg lods or xor cs stc aad or in scas (bad) cmc pushf or inc adc (bad) hlt xor mov mov (bad) or bound neg add mov lea or lret inc pop or es jmpw repz mov inc dec push shr or sub mov jnp mov hlt inc test mov dec scas insl inc stos sub sub or mov es mov push or insl dec push inc pop or pop adc aam int fdivp cmc gs mov or add (bad) es mov sbb std xchg inc push pop mov sbb stos push jg stos mov or sub xor mov incl mov addr16 and pop push bound js or fistpl (bad) arpl push (bad) pcmpeqd cmp les cmp (bad) out xor mov mov xchg mov sarl popf mov fs mov test mov mov xchg dec dec push xchg pop mov mov dec xchg loope mov scas movsb pop in or pop mov jp or insl lcall sub or mov call ficompl xorl pop cmpsl pop leave push repnz jbe xlat int or xchg iret or mov xchg inc or fist mov icebp insl fnstsw mov fsubrl xor inc icebp test je xchg iret (bad) repnz out stos (bad) lock mov and adc jg das mov insl xchg lcall (bad) jo fldenv addr16 rol push fstpl pop or fsubl iret sti add adc add cmp out pop loope cmc cmc ds mov mov das and add shl fdivrl fucom aam into jb bnd jmp lods call aad pop leave fdivr incb fmull data16 push cs int3 mov movsl xor outsb dec add jns pop fdivs or cs dec int pop mov push mov push add invd fistpl jns push hlt call pop jmp out lcall or in cmovge sub cwtl outsb jno inc insb push push sbb addr16 cli adcl pop dec push (bad) notl sysenter repnz stc stos jp mov add repz inc xor ds sub test std insb sbb addr16 outsb jp adc pop sbb or outsl push sbbl je and jg cmp xor xchg cmp fldenv ja mov inc pop jp or pop push (bad) pop or fwait loopne insb mov scas mov les mov mov out test or stos repz or lret (bad) mov ss or test and repz xlat sub dec xchg imul loopne or pop sub xchg inc not mov mov icebp leave mov idivb adc mov sub test outsb repnz daa dec jl rorl loop mov es sub jle adc adc and jg notl and adc je xor xchg loope adc mov pop cmp loopne add daa shrb jb out add (bad) outsl aaa scas test nop (bad) mov dec mov adc xchg push push sahf lock roll divl scas in outsl mov add psadbw jno je and rolb mov mov inc repnz gs add jecxz mov sbb adc stos mov sub mov out pcmpgtd dec pushf test repnz (bad) pop dec xor sub or xchg add pop or movsl into clc xchg (bad) clc sbb aaa sbb cltd xorl mov pop sub pop movaps adc fs or in mov dec loope inc xor inc sub xchg push repnz adc js add cmpsl sbb aas test ret movsb xchg scas dec fmuls jo je int3 jae leave cmpsl movsb jnp cs lds dec ja mov je mov jmp mov cmpsb push dec in mov aad into jle outsb jbe push mov scas push lock es mov dec lcall pop aas out lock fisttp jmp enter jae hlt mov out or dec jns test xchg jns bound fnstsw loop and push push cmp ds sbb out mov xor pop dec in mov fisubrl scas mov pop xor aam jns or adc push and loop inc mov addr16 add imul lahf cmp lea bound shll sub cmp add test cmp push shl pushf adc and jnp iret cmp mov mov es sub leave pop inc in stos mov and mov jp inc std and in test stc pop mov cs mov test or movsl jge sub push in (bad) xor mov dec adc in repz fmuls mov in jg test and lods adc jl cmp push add push jecxz jo ds jno test adc (bad) scas notb pop add jnp pop push xor sbb xor dec dec imul push mov and xor dec jne dec ret dec popa adc or and fwait sub add mov cmp inc or push incb jecxz test cmp inc repz add or dec adc (bad) je cli scas mul add test jg inc add push daa stc clc sub add (bad) pop jge or cmc js lret inc icebp or out nop repz or test mov loope lock jnp or clc mov sbb orb jae pushf xchg js rolb (bad) adc or outsl aad or fcomps xchg cltd or push aam mov xor add scas mov aam subb les lret xchg xchg or inc add fstpl cmp pop push leave jmp dec rorl pop or popf (bad) insb pop fbstp into cmp add out cmp pop fldt inc dec rolb xchg loopne fstl adc cmp lock lds jmp imul jmp sahf or sbb jae push test (bad) int dec inc pop cld or xor cmp and ljmp test cmp iret xor add rcl xchg (bad) jne jns (bad) jge aad sub repnz lret shll add or xchg stc shrb fmull pop add in sbb sti mov pop sbb popa in bound jle pop cmp or loopne into mov insl pop sub adc imul xchg scas imul push and pop sbb lcall jnp lret test jno in lods jbe inc or divb sub ja std xchg or lgs icebp (bad) xchg leave xorl std cmpl mov mov mov cmp or push in jbe popf pop negl push and lods ss es nop jecxz jle dec adc aad xchg jle push push in fdivrs and stos jno outsl or push cmpsl cmp loope andl xchg adc push cmp cli jg mov push push (bad) jne add add or inc sub aaa or imul add and jp fwait movsl les (bad) clc xchg or sub je das dec in xchg push push or inc jno int3 cwtl adc fild orb xor xchg and out mov cli aaa popa push das inc push add mov icebp mov and lea xchg jle jo and inc test arpl iret cmpsb mov int sbbb sbb adc adc cmc add add (bad) test fs arpl addr16 shll mov test testb imul mov jo push fbstp mov addr16 hlt leave adc repnz stos hlt mov mov adc fmuls iret jno insb xchg fs dec jmp jns xchg das mov jb mov sub mov loope inc (bad) insl cmpsl sahf and int3 flds mov push mov pop jmp inc and repnz arpl leave std add cli or xchg pop xchg (bad) aad cmc sbb xchg repz insl pmullw mov push push pop fist xor mov popa iret stc push nop pop mov or iret lea mov mov lcall or mov inc in arpl mov mov cmp add decl jg subl cs ficompl or dec mov inc cmc mov pop or mov idiv pop out or ss sub or dec adc jb push add icebp adc frstor dec dec mov sahf ret jmp mov mul (bad) pop cltd in or out (bad) test loopne jle add mov rorb cmp lea or fisub rcll sub test or enter movsl je ds insb jmp es daa test push mov aas xor push jmp bnd ret jmp cld and xchg jno mov xor repnz or cmp mov jge push adc push repnz fmull cli insl ror dec addr16 or xchg out popa mov stos mov or loope lock out decb insl or jge jmp mov inc lds (bad) repz incl hlt mov dec in and pop xchg dec loop and cli xchg imul pop sbb jns arpl adc or cltd das je jnp fstpt stos rcrl and sbbl or sahf add cmpsl sbb or fs loopne push adc jle and ja imul fs movnti push push push loop mov pop dec mov sahf dec out lds fs lods mov into (bad) or incb (bad) rcr adc loop and repnz add or imul pop push pop mov movsl pop pop (bad) insb enter mov pushf xchg or mov movsl jns adc pop cmc mov imul insl hlt notb jmp inc adc hlt (bad) or stos test je mov mov int arpl pop (bad) xchg mov ss fldcw jns mov lret out or cwtl jo test (bad) pop cltd ret cmpb (bad) test sub hlt insl scas jns hlt xchg lret mov lock mov dec jae stc or jl dec jecxz out cltd xchg sti insb leave add stos or cmp leave cmp xor fdivr scas leave mov ds xchg dec mov pusha fs insb adc pop leave xor inc or fdivr in xchg mov je xchg mov add aad das test pop cmp fsub movsl cmc mov mov mov ss insl xor jl bound lret inc xchg loop add mov dec mov push fmuls (bad) leave (bad) sbb ja mov repz xor xchg add icebp inc int nop ret nop or dec xchg push out mov aaa adc mov xor outsb dec inc xlat (bad) bound cmp call xchg xlat lret mov sbb add negl hlt xchg and mov sbb mov cmpsb jle cmp cmovge pop bound adc test mov insl test pop jmp adc dec jae jb push ret push movsb dec add dec ret insl and cwtl adc cld push jl das int rclb push cwtl mov or adc lods fcoml mov (bad) (bad) mov psllw fyl2xp1 push xchg or test mov push (bad) aas push ljmp jle icebp sub sbb cmp sbb inc mov icebp je pop out jns add dec lds xchg std push hlt jge test dec adc dec repz push jmp cltd sub inc sbb mov lret adc test pop pop (bad) aaa test sub arpl mov dec add adc (bad) mov mov dec cmp addr16 lea stc popa shll fldenv mov adc loop jbe ja add sbb mov in jno insb mov jmp gs cli push bound jl cmc and mov lods jle mov ficomp stc and incb imul mov jne xchg or cmp adc shr dec std push or (bad) pop and fcmovbe sahf gs xlat daa in movsb roll out repz clc jecxz push cmp pop ficoml bound xlat fwait rcrl mov insl aam out loop dec sub rcl movsl rcll ret scas (bad) stos mov mov paddsw add in icebp frstor aaa into out ret daa xor arpl jbe neg jmp movsl dec mov cwtl stos dec inc xchg stc pop shlb xor or push add int3 mov (bad) sbb or std adc sbb mov sub jbe mov int mov frstor imul adc jge or loope pop movl js loop repz jg jg inc pop jb movsl popf add or inc inc out int3 sbb (bad) and jecxz bound mov dec leave out out add sub je jp mov pop xchg mov jle movsb xorps movsl or xor push push out pop test jecxz dec (bad) jge stos std push adc (bad) xchg or scas adc out jo mov mov lds imul jge jge sbb sbb popf dec inc dec sub in and int3 dec inc adc lcall imul shrb imul icebp cmc pop mov jne cmp mov cld xor addr16 in mov xor push jb repnz jmp cli gs dec sub hlt outsb or inc xchg jl jecxz scas out cmpsb and in xor fisubr lea aaa test adc out or mov jno rcr popa cmp rorb in ror mov movsb repnz (bad) or std xor dec pop mov cwtl jne jle fs push xor or push xchg dec inc icebp dec adc neg stc movsb nop cmc lea fidivrl push mov pop imul pushf jecxz adc or loopne adc icebp pusha idivb push adc jmp imul out divl (bad) push aas adc in mov fcomp cmpsl lea xchg mov pop bound cs mov leave std push incl fs stc push push xor and jl pop cmpl push (bad) cltd jl test test lcall iret dec or in clc xlat test or add dec pop mov or mov jae stos hlt jp imul or enter outsl push add ss push adc lock xor pop and xor stc xchg mov ret add dec dec adc les mov es ja fiadd mov jne leave sbb loop cld fimul out pop pop mov xor and loop pop jmp leave frstor stc and sbb mov add hlt jmp pop lock mov lret jmp cmc or (bad) mov out mov pop loope testl clc hlt in and (bad) mov or mov pusha in inc dec jg mov lcall jmp mov mov inc or lock add dec arpl adc mov adc add arpl icebp mov adc push stos out imul aad jae pop out scas fldl dec jo cmpsl in or push mov rcrb dec shlb movsb xchg fldt adc pop gs in and jns mov outsb push loope,pt jge sbb cmpsb adc jge ficomp adc aad jp jbe xchg mov (bad) stc push xchg and adcl dec sbb fldt cmc pop lea ljmp lahf lahf sub vmovups xchg pop add sbb je mov loop in pop adc push add inc test adcl imul leave pop pop aas daa mov push stc test add xor lret and (bad) jecxz repz jcxz mov push repnz loopne les lods roll jg mov lret and (bad) xchg cmp xchg enter mov js adc loopne mov (bad) jg sub popf mov sub out (bad) clc jo sub pop mov fs mov adc data16 push je icebp outsl mov cmp and test pusha repz dec xlat or add lret call or add repnz mov fisub mov sbb les jge cmpsb or sbb rorl push inc jge pop or arpl shrl or jl add or divl cmp or mov dec and out into mov cmp add sahf or (bad) inc mov mov xor and (bad) or adcl dec scas testb sarb dec or loope sbb imul pop lret xor pop movsl (bad) lea movsb xlat ret mov cli out jmp lcall scas or pusha dec aam xor dec jmp xor or sbb in inc jmp cmc fstp addr16 dec sub ja and and loopne out fisub (bad) pop mov xchg in ret lock lods testl sahf (bad) iret xchg pop dec repz subl or push insb cmpsl jge sbb jnp mov lret mov sar add hlt and push or nop lret iret orb cmpsb mov mov test nop (bad) (bad) pop cmp push jo add inc call mov mov jg dec dec cmc and insb xlat or test mov mov adc pop in fistl pop pop test insb mov lea fadds cmc mov and dec mov imul push cmpsl pop popa repnz inc pop lret fcom xor jbe mov lods inc dec add jns fimul push lds movzwl push xor test cmp mov add mov xchg fidivr mov jecxz lcall dec mov pushf repz hlt dec cmc int mov aaa cltd xchg icebp mov add cwtl fcomip movsl sub aas inc gs cmc pop or std aaa fstps adc scas ret aam sub lds sub cli mov push inc icebp sbb or mov mov or dec les test sbb cmp mov pop aaa push dec dec cs xchg insl test mov lock leave sub (bad) xlat adc scas pushf sub mov xchg push or lcall test add repnz cmp pusha adc adc sub mov out inc xchg jp stos jae sbb (bad) dec pop pop dec fstp sub sub inc inc adc or xlat shll lahf mov mov add fnstcw sarb sti xchg stc mov fmull mov xchg mov sub and lds vmwrite cmpl mov push inc sub or mov adc in jl loopne rolb xor test rol push movsb xchg xchg dec or and fdiv pushf movsl leave rcll mov mov hlt scas es in dec or mov add xor test cmp mov push adc in sbb dec or sbb ffreep (bad) lahf or pop cwtl (bad) dec push int3 xor and or lret pop sub in xor sahf push jb insb and mov ret sbb dec stc ds adc stos dec mov or rorl pop gs or or std sahf repnz out (bad) push lock stos scas jne and unpckhps cs sti mov inc rol pop jp lret or jmp lcall lahf test hlt mov dec loop push push in pop loopne rorb mov lods mov push mov cmpsb fyl2x mov outsb mov jbe xchg and cli pop aad into pop (bad) pop sub mov test add cmp xor out push mov add xchg or shlb and (bad) lods ljmp sub ret scas or aad (bad) ljmp in into xor sub pop or jbe mov adcl mov or mov jge fcmove stos clc sti and or xor loope mov out ret ja out lcall repnz and pop sub in sbb fdivrl mov xchg mov adcl and int or dec fistpl jmp or and inc adc mov xchg mov push gs and testb mov ss (bad) mov mov mov or sahf xchg test cmp ss fstl arpl push stos mov out mov or jmp adc dec hlt dec (bad) repnz mov dec mov dec sti out jb hlt push sub lods popf or mov adc popf (bad) cmp jmp xchg test hlt push sbb mov por scas or adc jae insl dec leave adc xchg xchg loop sbb xchg jns aas or clc sub cwtl les test outsb imul in stos cmp inc leave jl dec cmp sub sarb or rol inc jmp (bad) lret cmc int cmp (bad) int3 insl pop push xchg loop xchg aad (bad) sub sbb rcll lock push scas hlt xor outsl jne or loop (bad) jo stc adc scas out pop int3 fldt jno push test sub adc idivb push or es pop aad pop (bad) or inc dec or btc xor std daa mov xchg insb call dec test sbb lock out fimul sbb mov bound in push sub in test fbld sbb (bad) jno jl or cld fwait stc call mov (bad) mov or ss in rcll mov aaa cmp gs ss xor and lds inc mov movsb add std or ret (bad) mov lock or sub sub movsb lea insb idiv mov call mov dec out sbb or push loope jns rcrb aam and jno cwtl gs (bad) daa jbe mov xor mov mov hlt ret mov lock jle or jo sub mov mov cmp daa popf cmp test jmp cmp mov cmc or xchg enter pushf mov stos push insb or push loop add fcomi out jo ret aad sarb in dec jge test movsl fidivl xor fs mov mov and pop loop xchg aam ja adc cmpsl rep xchg push test inc (bad) mov adc aas fldcw (bad) popf std fdiv dec cmp jl js lock lods push arpl pop lret adc mull call fnstenv sbb jg lret adc xchg cmp cltd rolb jbe pop adc out fdivs cmp ret xchg xchg push ss mov icebp adc dec outsb insl test aaa ds push mov fld adc xchg pusha xor and ljmp scas std adc sbb mov pop xchg cwtl fsubr pop add xor or adc mov int scas dec (bad) enter stc (bad) mov fdivrl pop xchg popf push leave sub mov ret icebp push cmpsl mov mov in inc jae in jmp mov frstor test cmpsb in fidivrl imul xchg mov and out lea push popa mov scas aas or (bad) mov stos movsb negl shl pop jle push mov jns test fisttpll jle outsb push pushl imul inc mov fistp xor xor faddp test or xchg call xor mov or dec add ficompl out lods mov test ljmp out arpl aam mov xor and int ja data16 es mov mov jl mov add or aas cwtl iret or mov je or push stc loope (bad) adc test pop hlt sbb je pop dec test xor dec int3 adc cli jmp (bad) loope ret ss adc adc sub jo repnz stc outsl iret je sti int adc insl pop or lods test dec pop outsl and leave sub rcll or pop flds cltd and or mov loopne inc out mov movsb mov mov aas add rorl pusha sub lock xchg and cmpsl inc inc xchg repz mov mov divl dec cmpsl mov or jno cmp adc aam xchg mov or mul pop xchg repnz cwtl insl (bad) jb hlt lods inc mov ja jg sub jmp or (bad) xchg sbb add ret jge cwtl dec jecxz loop or mov out or out rcrl insb aad adc mov (bad) xor inc mov divb pop test xlat sarl imull xor pop and cmp xlat pop or adc ficomp div int inc cmp add mov mov cld aam (bad) imul enter xchg xchg movq ja push xchg xchg lret jmp aad xor mov call mov xlat adc gs or clc mov test stos cmp or ss repnz dec or xchg daa sahf out jp cwtl fstpt sub fmull or jae out mov shrb pop in sbb jmp (bad) or sbb (bad) mov or (bad) idivl or std je bound test xchg mov (bad) cmc mov dec xor leave iret sub push incl icebp or lret test fcoms daa sahf cmpsb fild repnz mov leave into mov jge push mov (bad) fbstp jne xchg das xor aad and or lahf shrb add cmp aam xor or or aas out xchg pusha repz (bad) out ss sarl xchg sbb pop adc xor and mov and ljmp sub dec mov ljmp push lock sub leave or mov fisttpl aam jb pushf and pop repz into jp mov pusha xchg out cmp cmc dec mov pop das add cli and cmp or stos dec jge xor repnz into out mov lods dec in sbb movsl or out dec shll int sbb push push mov pushf jle pop xor dec mov test faddl cmp xor sbb adc mull sbb out test scas mov push stc scas jns (bad) dec jbe dec in insl jmp lock loop sub mov or faddl sub fldcw or xlat xor out fsubl or adc or out mov jo and jno pop insl or gs push cwtl fcompl hlt or mov icebp fwait imul mov add neg dec imul and ret aas mov out fistpl pop addr16 shlb adc addl jg jge sti js mov push repnz lret cltd pop pop stos and outsl lods mov jge sbb adc js (bad) sub pop sahf cli in xchg jno stc lret mov testl sub sbb pop out sub sbb roll enter push and rolb push add imull aaa or leave movsb mov jle or insb gs pop or aaa std hlt pop inc pop or push sarl or sbb scas xor insl je leave jno add mov xor decb push jns and jo (bad) lock dec adc adc xor popa adc pop jl sbb pop icebp ret mov (bad) sbb ret or fdivs aad mov and (bad) scas sbb fild push addr16 loopne sbb add or pop inc leave xor fcmovu mull outsl add (bad) jae sbb fisttpl inc mov popa jle lods jbe jl jo and cld mov outsb adc jp hlt jp decl or mov and insb ficom add mov lods incb addr16 test addr16 fs test xchg test adc adc push fiaddl and aas scas or inc cs jne jae or sbb push out stos and stos (bad) idivb daa jg loope jbe sbb insl movsb and leave cmpsb jne call and mov xchg popf cs mov aaa in ljmp xor push fiaddl aam mov out je mov mov popa test or outsb ret lds sbb shrl xor cli jp aaa (bad) das sub jl adc lods mov mov (bad) (bad) mov xchg lds in pop jge cmc sti xchg adc addl out cmp fwait daa das pop mov enter dec jne jns clc stc decl repnz jl add repz repnz lcall into mov outsb cmpsb mov jl mov loope mov movsl mov scas in cmp adc imul stos mov dec bound cmpsl xor xor sub iret fcomi rolb test pop icebp popa mov aad insl loopne std (bad) shl and stos rcrl insl scas movsb jno jbe add xchg push push push stos jo fcomip xchg std out ss or xor jns andl inc inc in test in cmp mov je jne out xchg mov insl cld out loop xor test cmp imul out in inc mov jp jl pop repz in pushl in dec cwtl inc aam fldcw nop mov (bad) icebp adc sub jns mov leave pop pop xchg push rcr sbb sub mov push cmc pop cmpsl pop mov leave cld xchg pop jle loopne repz lock jo pop push call inc in pop imul adc mov sub adc mov mov fimull sub push xor add dec mov mov movsb aad in cmp cmc add dec jl xlat adc cmpsl cmp cli outsl bound pop cltd loop scas add aaa and add fs int push hlt bound hlt movsl mov jne mov imul dec clc dec jle lcall jl sub test cmpsb pop mov shrl mov mov cmp lock fimul sbb push xchg xor into cmpsl sbb xor (bad) pop fidivrl xchg cld test imul std xchg adc mov push movsl (bad) dec add (bad) cmc lcall inc xchg repz xor adc nop cld insb pop stos mov std lcall stos es fisttpl scas mov aaa mov or adc adc sahf mov dec inc inc (bad) cmp xor cli jnp jecxz iret jle iret sub aaa ja loope adc idiv stc cmpxchg jmp roll and imul ljmp sub ja xor shlb out std (bad) pop sub icebp enter test mov jle or push movhlps pop (bad) movsl xchg ss and andl dec mov repz out hlt push insl push lods dec fwait mov sarl dec adc arpl mov pop dec lret mov mov mov xchg pop cmp aad jl xor (bad) jecxz pop enter repnz into mov mov fstps (bad) inc fidivrl ja mov aaa cmpsb shr jmp lods cmp sar loopne test mov cmp mov dec adc scas pop jne jbe jmp xor pop les xor and lock push mov mov repz fs lahf sahf imul in or aad adc lock mov hlt pusha mov push lahf mov xchg pop push aam rorl test inc pop loop adc dec cmpsl jnp or xor iret add mov push mov notb pop fistpl or fisubl lds aas mov sbb and stos jmp ret add std xchg mov jbe fdivrs adc or cmp test push (bad) jno mov (bad) out mov jae pop incb ss int loope mulb dec and loop std lahf into or mov sub mov adc mov or mov sete push dec mov inc in push mov out (bad) dec (bad) in lods mov or cmp js stos in out cs dec loopne jno jecxz addl fxch mov dec mov add cmp iret jg and punpckhwd call (bad) mov pop ja stos mov ss imul ljmp cs mov adc sarl jbe stc aam sqrtps sbb and sub adc cmp or add mov icebp add movsl fildll sub or xor add push unpckhps mov push scas push inc or cld xchg xchg mov fidivl push pop and stos or xchg mov loop call in push sbb adc ja cld repnz pop add sbb dec movsl pop nop bound sub inc es sbb lock div or or js test or xchg ljmp out aam js cmp lods call aam xchg in and push jp add fs and or and sub jecxz aaa lods jmp push add or jns push inc pop dec in cmc (bad) into mov mov loope into or cltd push arpl mov jbe or test repz test adc jle pop sbb hlt and sahf es fs mov das lret push dec fwait test mov je (bad) loope xor call push inc or (bad) dec pop incl ja fs roll sbb ss push sub add ja pop pop cmp sbb roll jle repz leave cmp xchg aam mov adc xor ds cmp ret bound shll test xor xchg lret mov cmc sbb inc sbb std jns pop xchg push movsb inc inc in adc pop testl mov pop fisubl lock and dec leave inc fwait enter adc (bad) in adc es push gs add enter test dec jle in ficomp loop inc mov daa mov jo xchg push adc int3 jbe adc pop cmpsb fs test sahf loope mov push in std in test add (bad) shrl xchg iret notl mov adc mov or jns cli gs outsl ret fnsave test inc adc popf cmpsb jp push mov sub adc mov pop xor or lock sub mov sub pop daa sbb sbb (bad) mov (bad) xor mov mov lahf pop lret out cmp or mov stos lahf xor lock mov imul je repz mov arpl cli sbb or ja daa or mov add xchg jbe pushf dec sub repz out add or js or jl fcomps or add push (bad) out push fimull or sarb jge lcall pop xor and (bad) cmpsb fisubr xchg or inc jle add (bad) clc ret and (bad) cmc cltd lods sbb cld (bad) or mov js inc fsubl jmp sbb xchg pop idiv and adc pop adcl arpl push stos mov dec cmc lret loope pop (bad) std inc inc jo mov sub xor insl pushf jnp cmpsl aad xchg leave xchg lcall xchg fisttpl push add or jmp (bad) adc and jae in and sbb adc fdivrl pop orb sbbl icebp dec out dec testl fidivr loop fstl dec or xchg mov mov xlat lods jmp push sbb loope shll adc sbb sahf and mov xchg fsubrl lcall cmc lock jbe or sbb or push xlat (bad) mov xchg fistl dec jl fldcw or aaa clc push sub aad in or shlb outsb or (bad) out fisttpll inc (bad) loopne lahf adc or sbb and pop push hlt scas mov aad dec dec mov fsubrl dec rolb iret repz jmp ds sub push and imul jecxz,pn es mov daa mov dec cli or test aad pop int3 fsubl in clc fwait or push dec pop in std sub cltd mov stc sti fcmovnu je or cmp sub or push cwtl pop leave ljmp mov insl add scas dec or cwtl imul ret cmc mov pop lea dec cltd adc aad aaa mov sbb adc mov jl sub mov or lcall loop or or fdivrs scas daa fwait mov fsubrl pop or mov mov sbb imul or jle mov clc xlat dec mov xchg pop fwait repz xchg ss scas fistpl or cmp mov pop cmp xchg mov pop shr push or popf cmpsb gs sbb in push mov jmp inc lock sbb push (bad) (bad) lds xchg int3 mov imul add daa pop adc jp sbb hlt imul rolb lcall lods cmp cmp mov leave test pop pop or or or (bad) bnd or stc (bad) data16 imul (bad) xor stos std enter and stc or fstl insb aam mov pushf shlb jmp cmp pop mov in cmp and rorl stos mov mov or push and sub imull cmp ret xchg sti fmul pop sub out leave or cmp bound push mov or cmp lret mov push mov and xchg sti jp aas shrb xchg sub adc insb pop insb (bad) xor xchg push add pusha inc in icebp jb or cmp sbb adc fisubrl xchg dec stc pushf adc mov jbe aam mov pop test sbb jns mov cld js loope add jno push imul sarl xchg mov cmp jno adc push inc aaa out pop stos xchg xor add jne cmpsb push mov fistp adc adc (bad) aas mov jno xor mov sub into scas testl lods xor jo dec pushl pop cld and mov fisubr inc mulb mov popa mov push dec ljmp jge jno adc sub (bad) pushf inc xor lock or (bad) mov leave and fistl std lcall push and repnz gs insl dec ret and hlt movl or fcmovnu pusha jp lock lock cld test mov std movsl cmpsb mov (bad) jl adc cld adc ficompl mov or fdivrl ja inc push lahf arpl lret mov arpl pop into pop popf (bad) hlt mov dec in dec fistpl sahf addl or xchg mov mov mov push mov icebp mov jecxz dec repz xchg lea jl fs adc push mov mov inc mov jp fld push js movsb data16 sbb mov lret dec out gs mov adc fnstcw dec add adc push fdivp (bad) xchg loope out xchg dec das jns push (bad) (bad) lret cmp mov jno sub pop insb ss rol loop js outsb stos pop icebp pop xchg rcr push pop rcrb jne cmpsl dec jge xchg or arpl pop mov dec mov dec push test fwait push repnz cmpsb inc xchg mov mov lret fs lock aad fidivl loopne xlat add leave pusha aas lcall jmp fwait pop int jmp fild dec lcall dec lret xor dec adc mov outsb addl push sbb xor imul push or mov subl mov es xchg xor mov mov loop push movsl insl mov nop popf xchg mov dec mov mov test add lds leave mov das outsb inc or inc arpl or ret mov pop ss or div sub inc push (bad) mov decl fsubrs aam pop adc mov roll rorl pop fs into (bad) sbb lcall orb jp dec out dec or daa out push or xchg (bad) jns push xor sub fsts mov mov int (bad) jmp adc or or sti out jl sub repnz popa mov movsl in inc and dec lret mov pop imul rol mov arpl jno mov mov repz rorl out out add (bad) sub je or or stc cli mov repz (bad) mov xchg cwtl xor lret (bad) xchg popa dec mov jnp inc or leave dec sub out (bad) repnz pop jns fdivp sub shrl sbb in movsb sub in xchg loopne fistpll imul jmp mov push add adc clc stos ljmp dec push nop add mov aam xor mov dec sbb xor adc add repnz out fstpl shll sbb or in xlat cmpl insb pushf xchg pop imulb mov jge adc jno inc or fidivr mov mov adc iret ljmp or lret xchg gs adc add pusha xlat xor or xchg cmc scas popf incb add aaa jg or sbb jp fbstp or data16 dec (bad) (bad) in fs and loope push mov or pop loop cmp push ljmp or dec stos xor aad mov or jnp int (bad) sub incb mov push pop rolb aas dec dec scas inc gs pop add mov jmp lds (bad) out repz (bad) icebp mov add sbb mov test mov flds icebp dec add test cmp or add mov jbe scas fnsave adc add or jmp daa cmp pop sub dec xor jl insl gs hlt sahf dec insb pop stc cmp mov jmp pop pop jmp hlt arpl mull mov in cmp insl xchg ljmp iret inc mov push std insb pusha in pop sti pop cltd ret push enter insl pop (bad) fcomp imul push or adc mov jo or loop or decl sub repnz std js dec jo ficompl imul in inc stos adc sub fidivr lret and (bad) jmp in ljmp mov bound shrl dec (bad) out mov in or adc mov push push fwait cmp in jmp std aas push xor jb pop inc dec lret adc bnd xor add dec je and jno jle pop nop enter jp push movsl js outsb icebp adc iret inc sti add mov push xlat pop aam and push jg pop pop sub test dec pop cld jmp scas mov mov and and dec adc insl lock cmpsl aam movsb mov pushf and cmp jne xor hlt jo pop jb xchg xchg int leave stos jge sub mov cmpsl call imul lods movsb out push inc and popa ss mov (bad) jmp mov dec push xchg xchg adc dec cmp dec sub lret in das mov cli jbe push aam push mov std dec shll cmp mov loope,pt sbb call xchg mov subl out sub push jb jb subb dec aas fildl repz ficom push mov lods aam pop or mov inc push js insl jns xchg and mov push dec sub sarl mov loop jo dec call mov rolb push (bad) lock push cmp mov gs and sahf add aad dec ficompl ja lret add mov fmulp mov xchg add loopne and fldt dec bnd repz xlat (bad) fsubs inc pop mov cmp inc dec sub push dec inc mov inc mov bound sub or test push (bad) bnd stos aad mov (bad) in cltd je pop mov pop sub xor cltd jnp aam stc or sub test les mov or sub sbb (bad) lds aas (bad) mov push pop ljmp jbe imul or pop lea insb gs pop xchg jg push mul addb adc int3 cmpsl mov call imul imul pop iret bound insb or mov rcll lods push sub adc popa add negb mov out xorl js imul negb aam in imul xor sub fistpl mulb adc mov mov inc push or jne enter sub out testb jle sub dec or cld loopne push pop mov (bad) xor cltd xor or stc or xor gs into mov outsb in imull jo in mov cli xchg jae push push inc test arpl pop div dec paddusb leave cmp pop fs pop or dec idivb xor xchg xor adc or xor sbb cmp add out jle je push aam rorb movb loopne add mov push imul sarb or pop mov mov aaa aad xor insl insb or inc or lahf jnp test aaa dec or cmp push inc insb test cmp mov push cmp sub or gs mov or jno (bad) mov adc or lret xchg out test adc js aaa pop pop pusha int3 jmp rclb cmp cmc faddl shll into imul or es mov nop inc xor mov pop add add or int3 pop (bad) jns or fldl push int cwtl test add adc (bad) stos insb (bad) (bad) nop aad pushf neg jne adc outsl outsb lods xchg xor cmp inc adc (bad) adc sahf cmc cs pop jle mov pop push mov push push mov into inc cltd sbb ror cmpl rorl or pop jae mov scas ds fisub adc mov nop jno bound push in jp sbb fnstenv test inc cmpsl std test or mov cmc outsl cmpsb dec xchg push das stc fldenv mov inc cmp mov sub cmc addr16 int3 cltd movsb xchg testl dec das mov outsb or jne mov or das (bad) fwait adc jmp out dec or adc aad mov cmc insl in xor mov jecxz or sbb dec add repnz jmp jae das adc sub (bad) dec lock fcoml mov or sbb pop or jmp imul sbb sti pop dec mov test lea mov and dec add push fistpl es enter rorl mov je inc rcll xor cmp xor mov divb in dec jbe fsubl or into push and dec mov adc adc push dec aad dec jmp lods push arpl sahf jg mov jg push test or mov idiv loope push lcall push adc mov icebp out adc aas pop or (bad) adc jmp (bad) dec xlat and mov push adc xchg or movsl addr16 add hlt cld incl rol int3 popf or cmp or in cmp lods mov pop movsb cmp inc adc mov or aam enter sbb fiaddl push xor xchg data16 jae mov pop fisttpl dec dec or jb add xchg out or sub or es or mov imul in or out sub faddl or es pop test pop mov into inc test mov xchg clc dec xchg loop mov xor push add leave vpaddsb nop test (bad) pop rorl push cmp scas lock std cmc mov dec fstpt ds jne xor repz or push sti mov dec push inc or icebp bound mov jns cmp or out push mov cltd mov mov popa or xor dec push inc lock ficompl lahf inc adc push ljmp mov fwait stc or sub jne jmp mov sbb jle stos cs (bad) jne dec cmp pop das push inc mov adc aam or or push loopne (bad) ljmp (bad) out (bad) or scas (bad) pop mov mov cs and adc sahf ja jns data16 jecxz adc jmp add sbb rcll dec add clc cs (bad) decb hlt adc (bad) jp xor cwtl (bad) jecxz jecxz sbb test pop jbe (bad) adc jae xchg rclb in sbb cmpsl or xor daa in hlt mov inc sbb pop (bad) xor shll icebp rcr sub mov scas lret stos xor inc test adc inc mov mov jmp fnsave rcll cs mov inc lcall aas mov popa or notl popf jmp insl sbb cltd push inc push popa imul and ljmp out movq xchg fistp jmp push mov lds (bad) xor js push jo add cmc lods fs sbb into or stc xchg scas pop ja adc inc jno imul mov scas mov mov mov cmp loope scas jmp jo loop icebp sbb (bad) ja outsb movsl imul rol add pop fdiv idivb add inc jno jmp mov test rorl and in cwtl lahf ret fwait and or sahf sahf call aam jl xchg jg in mov push xor xchg mov mov jne inc leave sub ret mov cmp test mov popa insb lock scas dec lret cli scas call loop adc dec stos stc das leave movsb dec (bad) and test and fs ret and out push push movsb mov jne pop or aam fnstenv ficompl incb movl popf xchg or or aas imul sub lret cmpsb dec jb cli jbe mov pop inc je mov loop add or mov negb fldcw jo add mov dec fisubl xchg loop mov xor hlt adc (bad) in inc in lret lock clc push ret dec mov jns jne dec mov cld icebp push add cmp fist (bad) adc lods test xor pop repnz dec rorb lock stos dec adcl flds leave test mov mov adc and mov pusha outsb leave jl fs out gs test (bad) lock adc adc gs xor pop or mov push aas lds xor loopne sahf jo or (bad) mov jnp adc add std inc mov mov and push mov nop pop scas adc fbstp and cmc sahf popa lret inc es fxch cmp sub fcmovnbe mov (bad) xor fcomp jle stc test xor push push lea mov in xchg ss and xor cmp adc dec adc adc jg sti fwait in mov or nop hlt rorb dec repnz mov lea test adc mov lcall rcrb hlt push lods inc fld xor fisubl xchg (bad) and add or pop (bad) xor mov or push xor popa and shrb jns aaa inc cli dec leave xchg push cmp nop cmp out mov sahf cmp jle test dec sub inc ret (bad) shrl popa jnp cmp pushf jp sub lock repnz xchg fisttpll test out pop div stc mov mov xor imul test in popa adc stos negb lret int mov mov pop and bound mov xchg mov pop out ss in or sub dec cmp cmpsl push loop cmp cmpsb adc adc mov (bad) in adc in jge mov stc pusha je enter mov inc cmp out sbb adc pop cmpsl or (bad) xchg inc add jle jp test or (bad) push inc fiadd dec or popf andb repnz les mov sub dec push out jnp push (bad) pop or (bad) sbb pop jecxz mov inc sbbl mov or cld mul xchg pop cmp je int dec or or sti or or stc xchg mov or mov fdivrs push cmp jmp cmpsl cmp sub add push cmc clc pushf in mov fwait leave xlat jg mov lret or adc mov push or jne (bad) jmp dec out addl lods jmp mov sbb fild aas fs das or jns mov mov sahf xchg addr16 das je arpl xor scas or sbb cmp faddl mov cmpsl outsl icebp mov mov repnz fild cmp das jp mov in pop movsl clc mov dec cmc lret mov xchg scas mov adc lods outsb xchg dec xlat ja (bad) mov mov inc test cmpsb testb je inc mov aaa jecxz lods mov lods dec icebp xchg (bad) std sub test inc or xchg or popf or pop fldcw pop push or sub movsb mov push or xchg cmp sbb or fistp lock pushf cmp sub add jmp or dec add push js shrb cltd push out xchg gs dec jl (bad) or inc jge jno inc or les cmp adcl roll mov mov push jo jecxz pop daa dec mov cmp or push mov xchg popa jae or pop mov scas mov cli jge out xlat arpl cmpsb idivw int3 js add adc movsb jecxz pop addr16 or imul dec call loopne lds xor jb pop repz sub jg hlt add sub mov jmp and sub lock or or mov pop hlt xchg mov jnp adc sti ja sti jecxz lds sbb sub leave adc repnz in test mov mov sbb enter iret notl stos xor mov jle mov icebp or out inc dec adc cmp lahf push hlt imul daa scas mov mov and adc mov lock lahf add das push rcr imul test es hlt sbb dec popa repnz ds inc mov cwtl dec jmp mov lahf jg fxch xchg push out cmp adc adc daa cmp xlat adc mov sub adc stos fst pop lods je fwait adc adc xor in or add and call mov lahf mov add daa inc pop mov adc aam lods (bad) mov xor add dec mov mov cmp fistl loop push imul add sbb test and call dec xchg jl repz xchg mov adc sub jnp insl dec add out bound inc imul in repz es mov cmp sbb jge inc adc test pushf int popa mov dec or pop fisubrl insl jmp daa (bad) pop jmp scas cmpsl xchg sub in xchg mov adc leave daa and scas jo lret (bad) sbb push xchg push (bad) icebp fwait aaa sub mov lods dec xchg test inc pop pop hlt (bad) push mov imull lret ja lcall lcall insl loope lahf imul push sub inc daa aam mov sbb (bad) (bad) push push stos and xor jns add sti sub lock lds cmpsl lock outsl mov je pop addr16 and xorb daa xor test adc test rcrl inc hlt push mov ljmpw (bad) rolb test mov pop jno jmp sub hlt push adc jo lea outsb decb dec jge jge jae sbb jle (bad) dec faddl and cli sbb xor xor fwait xor jne sbb xor push jecxz push lods sub fwait in xchg cltd adc ja stos pop popa push cmpsb scas lods imull mov cmc orl (bad) es sarb inc ret lock lods or into xchg jle icebp push lock imul and cmpsb sbb jae les insl and cmpsb subb loop iret xor out popa flds inc out adc popf sar idivl out insl jno mov mov int in mov sbb jecxz mull jb jl in repnz adc test mov sub out test adc mov lods cmp dec or and or xchg in push sbb push add xlat out (bad) pop or xchg adc inc int ss and cmpsb test sar cmp sbb dec ss xorb jle,pt inc xchg insl xchg and lods inc decb ficomp adc hlt and and int3 jbe insb dec mov adc mov jae adc or xchg mov pusha adc js pusha adc cmc dec es and lods lret push loopne into inc bound dec lret ja jl fcoms jne popf std je dec out add btrl mov sbb pop mov addr16 (bad) adc sub pop movsb push (bad) xchg hlt and pop sub movl sub mov je push out jg dec jl cmc push in mov cmp or shll dec jl testl loop loop fcoms fwait lea ja scas sbb ljmp test mov xchg enter int3 jl ja mov sahf adc sub je inc add addr16 xlat push aam fild or je aam mov insl sbb or mov fcmovne lds mov inc sub sahf dec mov aas rcrl push cmp push (bad) mov out cmpsb cwtl mov stos jns dec mov add xchg idivl addr16 adc or pop aam stc clc (bad) cmc cs icebp push je test (bad) mov sub jmp push xor sub test xor sahf int jo cmp pop bnd jne push fcoms (bad) popa jmp add mov jns inc stc inc jle xchg pusha mov test dec pusha pop push lea or dec enter nop cmp mov jge xchg jecxz mov sbb xchg cs lock fwait or sbb in ss xor dec leave imul stos call or cmp rcr imul add or lret cmc (bad) pop addr16 mov lret imul mov mov data16 sahf xchg add pop out dec mov mov std push iret in mov dec push cmp out cmp push adc xchg inc xchg push (bad) sub xor fcoms loope pop iret sti pop mov cmp jle adc daa lret sbb mov (bad) icebp or dec (bad) es sbb insl mov cmp cmp or stc cmp and ret sub imul jno xchg or inc fbld sbb sub sub mov aad (bad) (bad) iret jbe lock adc add lock aam xchg cmp in rorb test sub repz cmpsb scas scas outsb jae mov cmp jno (bad) sub mov lods pushf clc pop jle cli es rcrb and jmp add repz cli sti push test push insb xor mov jo push lret dec cmp adc (bad) pop or idivb call or jge sub cmp xor push ret add or mov jnp or arpl push push cmp dec xchg push (bad) xor in out ja (bad) dec dec adc inc mov cmpsb and sbb mov jle dec scas mov insb mov decb stos call jo repnz (bad) repnz push cmpsl adc and adc xchg or or jmp je and dec push js or in dec call (bad) hlt mov xor sbb pop cmpsl hlt mov out (bad) (bad) xlat add in shrl sar push loope insb test popf or xchg fldl sbb popa rolb jbe movsb lods sub pop sbb mov mov push or decb in xchg test mov stos or pop mov or ss int3 enter sahf jb movq and xchg push (bad) shll add or insl add decb sbb stos fnstcw cmpl adc insb fldl (bad) popa push test cmp cwtl push fldln2 jno,pt jecxz mov shrb jle lods dec std adc xlat sbb je or ja mov mov pop xor or adc mull ljmp jp test movsl adc push adc test gs cmc popf sub jnp test mov push repnz sarl push cmp nop leave loope pusha fldl es test cs icebp pop roll and (bad) ljmp sbb repnz and jno push push int (bad) mov arpl cmpsl in jmp leave jo test sub jnp cmp loop inc adc icebp mov ljmp mov or fstps clc in mov or or insl pop mov or cli sbb (bad) in dec jmp cmc loopne fcmove movsb jb out aad imul push add xchg cmp jmp inc call jmp stc or sbb mov cs out fnsave and stos jmp mov xchg inc movsl pop push mov mov or and jl ret sbb cmp add cmp xchg rorb rorl scas mov cmpsb rclb or (bad) jne mov stc cli bound sbb stos dec sub inc and jle hlt jne sbb inc jp cmpsb out fldln2 leave lret cli mov or out cmp xor cmpsb repnz or inc cltd push ljmp daa xchg sbb jl push add mov loope iret inc mov je jo cwtl xchg inc or sti or pop repz scas sbbb popf or test xchg lcall fldt mov loop pop lock dec es adc js adc or sub xor jmp inc bnd adc jmp pop cmp xor nop outsb mov cltd push or inc jp lahf mov icebp jecxz insb dec push push or lcall mov insb push (bad) icebp aaa out cmp mulb sub fisub leave mov lret or cltd add inc aaa xchg leave jmp sbb sub dec cmp mov or mov cltd and out addl negb sbb and fisttpll dec or ds jo out pop jae flds xchg repnz je push adc xor lret test lret mov xlat lea loop mov lods hlt or jns jae xor cmpsl decb int sub lock and (bad) mov xchg inc jle repnz rcr mul movl mov test xor hlt scas dec pop les push sub push mull add sub jge out in insb jp add pop (bad) or or scas arpl and jne adc add dec cltd loopne or stc mov cmp pop lahf push iret mov inc pop or jge xor lret xchg jmp pusha pop fldl pop or cmp mov lods or jae fisttp lds and incl or fldl divb dec sub or int3 sbb push (bad) jae in flds loope bound push mov lahf stos sub enter lcall fisttpl sti dec fiaddl sbb xor pusha or movsl fcomps lcall jmp ds push add fstps mov jne scas leave lret or xchg mov or add in add add stos or scas pop iret in fdiv stos imul loope pop test xor and cli jb nop jno push popa dec push (bad) notl lahf mov or (bad) jmp movsl rorb repnz xor lock mov mov lods push outsl jbe and or sbb popa aad mov adc sbb jae push ja jmp imul push imul inc (bad) jge cmpb dec cmc and (bad) hlt loope push mov aas scas loop sub test (bad) dec adc mov fs mov pop (bad) fnstcw ljmp std cld test jne shrl pop dec stc push push mov outsb call int3 sbb mov jno inc push arpl sub insl add push out movsb imul dec adc imul push push scas adc jge mov jb test lock das add ja mov jl xchg lcall test or and loope and mov jmp inc fs pop xor cld imul clc out mov xchg das xchg lahf mov mov fcomi sub (bad) pop in xchg in jecxz cmp sbb fmuls pop iret mov or or mov (bad) int3 cmpsl push dec sub (bad) pop (bad) decb adc paddd idivb sub pop xor lcall inc xchg jae dec enter sbb fdivr sub dec lods mov loopne rorb sti or mov negl mov or dec sbb dec decb mov add dec jo gs adc add mov sbb leave push repz dec sub push cmp stos insl inc push roll cmc ljmp or and jb mov mov aaa add dec cwtl cld test outsb xchg or jmp sbb lret enter in subb cld add rcll insl jmp pop sbb push rorl jns sub fmuls or out test sbbl (bad) jecxz sub xor pmaxsw or add mov mov mov lret cmp pop mov and or xchg (bad) xchg fcoml or (bad) ficoml lock ret sub cmp mov or xor mov (bad) gs and mov lock mov or adc dec or sub mov mov dec movsl aas or insb adc hlt out pop sbb jle mov push das sub fisubr lret sub mov pop lret lock pop ret ret mov and adc inc or orl rclb lret dec or lods adc std sbb rorb insl mov insb negl and mov out testb repz das push xor dec adc (bad) xor jecxz or mov mov (bad) sub in fdivrs add mulb fxtract enter dec sub or outsb inc mov and jno icebp out repz stos dec fisubrl add imul jne cmp cmp je adc lea daa loop jnp pop xchg outsb addr16 xor insl pop cmpsb pop cmc iret pop (bad) sbb push stc sbb test inc mov aas dec sub test add js or insb sub xchg mov or lods xor jl xchg mov inc jns push cmp mull (bad) rol lret adc cld mulb mov inc xor push in (bad) (bad) int3 aas in test adc mov jb lock mov add les mov fmuls dec or pusha jecxz gs mov hlt imul jmp xor je inc cld sbb pop and lret mov or sahf out dec enter gs divl sbb (bad) inc xchg and sti cmp loop pop mov fdivs in enter sbb jmp dec lahf test cmp aad inc lret std dec mov mov pop repnz test or cmp or mov movswl ret (bad) loop or mov cltd adc cmp inc rol push and repnz jae and stc sbb out pop pop fldenv jns and aam push and mov leave sub mov or test idiv cmp cmp or jno xchg nop adcl fcmovnbe out scas dec sub adc or or test (bad) mov mov or hlt jecxz mov or insl xchg xlat gs push rcll push (bad) xchg mov sbb es push push mov push (bad) mov jb iret and jle push inc movsl mov sub xchg or orl fnstcw or mov sarb les stos enter test dec ljmp fsubl and in imul fcmovne push mov jmp mov push inc into aam mov rorb add mov mov out fidiv push insb mov scas or popf dec sbb ret rorb iret insl int push sbb inc or (bad) icebp xchg cmp lret pop (bad) not add popf mov bound mov xor mov pop leave int3 or aam movsl push mov mov test dec push out imul jb inc push dec (bad) push es mov ret bound or push mov test sar mov fimul push xchg int fstpl lods mov in aad or loopne test cmp dec cmp or cmpsl push les loop xchg das stc sti mov addr16 lock in xlat mov (bad) aad mov and or cmp pop mov mov or (bad) xor test test ja mov cmp jl mov jge pop (bad) shl sbb in xchg push pop jmp aad mov xor stos push mov pushf js xchg mov push lcall in mov stos mov loope mov xor (bad) or daa scas (bad) cwtl mov repz xor or (bad) std push inc imul lock cmp jmp shlb or push cltd jnp or xchg mov repz lahf aam and fsubr shrl dec (bad) scas push xor push adc testl das decb push mov daa pusha mov xchg in lds push (bad) es fidivrl fisubrl and imul in xchg imul aas test add idivb aaa ja dec test movsl adc mov jo jns dec add pop out push pop idivb out xchg adc loope mov jae cmp push push lret adc mov fsubl fs sbb movups icebp push loop sub mov xchg fidivl mov pop sbb movsl jle xchg ret or jle mov xchg jl add xchg aas call paddsw jo jl fdivrl add mov (bad) or fistpll sub or data16 lock dec push fiaddl lock loopne outsl sbb loopne cli xor in int cmp pop inc pop ret (bad) popf clc dec leave mov ja mov add cld xor mov test loope jmp dec xlat jg test jbe ja pop mov cld pop cmpsb dec jge cmp aaa add hlt xor jo xor mov (bad) jle jae cltd sub sbb mov inc aam fisubr or pop pusha (bad) in sarl (bad) jp mov mov insl loop inc push fimul xchg cmp add aad mov loopne jo leave (bad) mov lcall popf cmc in sub or cmp cmp push out daa mov add icebp notl jl leave pushf adc nop outsl inc add (bad) daa mov jns pop nop sub in pop push neg xor sub mov pushl jo and jns jp mov (bad) or xor mov mov push pop lock loopne enter fnsave jecxz mov mov mov sub aam scas repz dec or push xchg mov imul pop movsl sbb jne test dec mov dec xchg mov cmpsl xchg dec lea iret shrb in jo push in cmp in add jb stos or (bad) fdivrl rep movsl adc mov cmpsl jl mov sbb adc lea or mov pop adc in xchg inc (bad) icebp cli jg test cmpsl (bad) jmp push (bad) fprem cmc stc cmp push pop cltd mov out loopne pop cmp aaa add jge cmp xor imull cmc in jnp sbb aaa lea xor xor in cmp dec or pusha inc lahf cmc out push dec push lcall or repz sti out or addr16 jmp pusha mov mov jp adc rcl push cli shrl dec cmp fild pop notb mov fdivs kmovw cmpsl and mov or pop imul mov mov mov push (bad) ficoml jno push movsb pop sti ret lods or test pop sti (bad) xor sub stc jne jbe ja or sbb dec or insb jbe or clc mov add in inc adc xchg inc paddq mov (bad) jns mov or push out xor pop or pop jns adc inc xor jae pop out sti push inc adc cs adc dec leave pop mov (bad) (bad) or mov test or leave mov daa (bad) popa or sub mov push or inc mov sub cmpl hlt jle push cmp (bad) mov loop or push mov jnp addr16 dec into (bad) sub push inc sub pop test pop out (bad) fs adc adc cltd cmp (bad) rcrb loop std cwtl fcomps jno pop jmp (bad) testb push cmp fisubl adc pop lods inc jecxz lods mov daa cmp or sahf ss push hlt mov and lea inc xor inc (bad) lcall fsubp jo lods jne pop decb push and and mov adc leave adc add fs sti mov push aam jno cwtl xchg xor push xchg dec or stc lret mov loope cmpsb mov inc inc or addr16 arpl sub fistl or fs ja lahf adc or inc shll sbb cwtl mov jno aad xor pop lods ret mov inc (bad) insb mov aas test jbe jp dec es inc or rclb ja icebp rcrl push push mov loope scas or pusha mov (bad) jle or movsb mov sbb or pop cld adc or xlat in dec jecxz sub or das cmc mov scas lods cmpsl sar nop (bad) outsb mov mov test or andb ja pop mov ret and js cmpsl fs cwtl mov sbb repz test sbb out dec cli jo test or fnstsw mov inc pop jne lods pop push xor jne pop ja lahf je nop pop mov lea loop lods cmp dec or repz scas cmpl inc mov sub lea xor jmp (bad) pushf sbb test test and push jb sbb sbb insb mov adcw jns bound sahf dec inc or jns into in ss mov sub mov or jnp iret int sbb aam lds jecxz pop or sarb jns hlt neg and adc es mov ljmp dec mov adc xor dec pop repnz ret cltd jae add cli cmp pop adc xchg (bad) xchg dec lret xor mov fisttpll adc divb fisub test push xchg bound push jmp mov fs (bad) or sbb arpl inc sbb insb sub loopne pop mov mov test push sti rcl cmpb ds mov mov push sbb loope in or (bad) (bad) mov pop mov and dec inc (bad) push in aaa test add cmpsl daa ror push or xchg es or mov push ds test push (bad) and aaa icebp or jle in in jae loope fcmovne push into or jb cmp out lock or xorb cli icebp mov mov cltd mov incb mul orl ret jecxz xchg int3 or xchg fmull rcll enter push mov insl pop cmc das fstpt dec data16 cld lods or adc mov xchg hlt ret clc mov in cmp dec out enter add in sub leave and sar into cmc enter jns (bad) or scas pop sti push xor pop push movsl cmp lahf mov cmp push xor loopne and aad mov popf mov cwtl cmp dec jge sub adc sahf sub or subl ja or mov push orl fnstcw mov sub or mov (bad) bound mov or mov xchg push inc mov sbb loop test in cwtl or xor dec sub test inc int3 negl jl aam sub or (bad) dec lock cmp icebp rorl push and shl or push addr16 into sbb rorb and and add cmp aam cld jne dec push or nop xchg test pop (bad) int3 adc sbb in ret hlt push rcl loop lcall mov and ret lods mov fldl jg daa sti fidivrl (bad) jmp push mov adc scas xor adc jnp mov arpl inc push inc xor in dec or cmc addl dec cmc jbe mov dec mov out aas inc movsb das stos bound sarl (bad) mov jp mov ret sbb pop loopne or mov add sbb xorl mov or scas jle sbb dec inc cltd ss push test pop sub xchg popa jecxz cmp lods dec aaa pop dec daa cltd test pop add sbb xlat (bad) fldl mov movsb xlat pusha fmul or test lea push mov paddw mov inc adc pop lds ljmp imul or jns and push (bad) cmp push dec dec push pop arpl sar push mov inc faddl mov xchg cmpb scas ss outsb bound insb or dec ljmp or jle out jnp in push test or lcall or lea not add lret or je sahf inc arpl addr16 dec or jns push dec shrb xor or lret dec cli pcmpeqw pop add push dec clc dec ja enter mov cmpsb jno sub or ret je cmp mov loop add pop nop in cld mov stos mov mov test les inc pop dec sar (bad) out in (bad) mov ds or xchg or or or fstps stos dec test or ret icebp mov imul jno stc sti or xchg (bad) cltd iret iret mov clc push cwtl push aaa pop or push or test inc fucom pop or sbb mov lahf cmc sub xchg push adc (bad) mov fdivrs sti xchg add rcll (bad) mov loopne pop jmp imul sbb jp leave mov sub mov mov and fmulp mov mov lods rorb add xchg insb fcomps (bad) sub mov mov (bad) mov add lret and loopne and or pop cmp push arpl add push mov ljmp mov (bad) fistpl repz leave push insl in loope xchg aaa xor pusha repz jo,pn sub jb sub or xchg xchg imul daa jmp jmp mov adc mov inc or xor popf andl mov mov inc xor xchg mov outsb or pop add pop dec sbb push cli lods out dec and pop pushf mov (bad) sub dec aad mov or push cmc out into outsb ljmp sbb jle cltd sub enter shrb inc or in call jns xor fistp mov or addr16 out sub (bad) in mov add or mov movsb or cltd iret fstl das xor or ret jno ss mov push gs xor pop push stos mov adc ror mov xlat imulb or add jne push inc jmp pop dec dec sub or pop out adc pop or adc sub and or jp lcall sub pusha inc push xchg js pop sbb aaa test test sub (bad) std daa out jmp sub xchg xor sbb xor test lds and sub adc jmp movsl pop movsb loope shr and mov or popa mov or mov in sahf lea cs fdivrs fs xlat or mov repnz jns xchg scas jmp jns or push pop xchg dec push sub rcl ljmp cmc ja iret dec cmc icebp inc adc divb dec pop push xor inc out mov rcll dec or in or scas adc lret aam addr16 out repnz les mov xlat lods fwait add dec push adc and inc dec jb inc pop mov fs adc insl (bad) out or and test jle lock dec or fimul (bad) in (bad) out rclb (bad) test imulb hlt xchg test test insl jmp cmc inc push xchg in rdtsc addr16 add pop or and pop dec xchg outsl inc adc mov cs fstpl adc stos fidiv add test fcomp add into and jecxz fisttp pop push jns mov fnstsw fcmove and or cli jbe cmpsl ds jae (bad) jne fcoms sub testl lahf movsl or jle or xor adc (bad) in mov jecxz scas or imul xchg push (bad) out es jo jl cwtl jge lock aad test add adc call in push push or lea scas and (bad) dec xorl inc xor mov lds adc rorl ret mov pop cwtl inc mov add nop mov and repz loopne (bad) jle test mov aaa notb lods repnz xchg or scas adc sbb xchg sarl int3 mov pop sub sub cli not jno imul or ljmp xor xchg into scas mov dec xlat cltd cmp pop inc lock bound lahf mov scas cltd add mov fdiv (bad) std aaa rcl mov sub int3 mov sub pop test xor hlt fstps and mov sub jecxz push bound mov pop sbb fdiv mov jl xlat dec repz or scas nop cmpl (bad) (bad) dec addr16 lods mull (bad) std addr16 test dec mov dec testl clc fwait or int push fidiv jno xchg loopne dec mov js enter xchg mov cmc and adc outsb mov mov (bad) hlt sbbb push pop js addr16 dec jmp jns sarb fdiv and imul fs stos ljmp pop imul mov cmpsb fdivrp out push cmp mov lods pop add shrl je inc pop test stos add dec leave cmp mov push int3 fwait negl pop dec mov mov push lods push or outsb ss sbb adc in xchg push (bad) subb or mov hlt mov test jne xchg (bad) (bad) xor outsb call jo mov lret inc mov stos pop leave mov js insb mov icebp pusha xchg mov and xor outsb inc lods jmp scas aad (bad) dec push (bad) cmp add mov rolb loop or pop xchg pop or (bad) (bad) mov or aas jg,pn xor fidivrl mov or mov inc in loope jnp fwait mov add imul rcrl cmp sbb stos dec sbb push scas jecxz or ret push iret out (bad) fs or mov rolw jmp xchg cltd ss in sbb mov pop std adc in pop aaa out jno jg mov pop stos (bad) jae (bad) jmp fisttpl ds jno or btc and pop jo lea icebp in (bad) aad cltd inc dec leave lods lock add xchg arpl or xor addr16 lods jb scas xor dec in lret mov out dec scas dec lea xlat repnz push in negl or mov dec test ret or mov push xchg lock or add fdivp pop (bad) outsb pop sti cmp clc cmp cmc imul call ret js xor icebp pop int fstps adcl mov leave imul hlt pop decb and adc out xlat mov push lock inc hlt jg les lea out and iret test mov test add fdivrs in pop shll or mov push add rdtsc sti add stc push pop adc subl xor push dec inc pop add adc div sbb movsb leave cmp mov cmp add repnz dec sub fild leavew mov cmp shl inc xchg push push sbb ficompl and mov push repz lods or (bad) loope or xchg sti subl mov cmc mov inc (bad) int mov cmp inc push popf or xlat in sbb adc bound push inc roll repnz cs or rcrb xor adc call sub xor insb xlat xchg xchg (bad) cmp cltd mov mov cld pop pop leave lcall jbe mov adcl push sub or in cwtl sbb fdivs loope aad push std in lods fwait aaa or ss movsl fisttpl (bad) sti xchg jmp mov inc stos xor sub pop js out (bad) int3 negb insb jge xchg jecxz xor adc inc lods mov shlb imul xor cltd mov xor ja jecxz and lret ss cltd and and xorl mov cmc data16 dec mov sbb mov cmc stos jmp sbb fcompl lods or push or ret notb push cld iret test lret repnz push mov mov imul stos sti pop jle adc inc cmc mov mov dec xor bound arpl or dec mov ret fwait sti jbe cmp aam and or mov repnz out daa nop (bad) sahf adc negb adc inc pop jle ror mov add push lcall mov jmp das movsl pushf or (bad) in add cmp lret call sub mov mov je std or incl pcmpeqd movsl or cltd mov in (bad) inc fisubl or and adc mov popa mov test in es adc imul push movsb jg leave stc stos lret out outsb andl daa mov adc in and test or hlt lahf add mov push sar mov aam dec add add ds imul into mov mov mov adc or repnz lds sbb std jmp call jle pop xor sub adc imul std adc jge test mov inc ss stc cli add hlt xorb push or push inc ficom stc movsb sbb jmp out or sbb mov and or or leave xchg add (bad) mov in jl sub xlat sub aad push ret lods mov sub rorb xlat es repz push dec and xor dec popa loope hlt mov je and inc cld adc jl push jecxz dec add xor xchg dec or enter stc pop mov push out loope mov xor insl cmc push jge mov adc cmpsb jecxz push mov gs mov sti imul jecxz push jno loope or jo and push aas adc xchg in lods pop mov sbb sbb fstpt lcall adc mov lds xchg jb cmc outsl push jp xor dec std jb lahf fdivrl or dec stc xchg jle int loope xlat xchg jp notl adc repz or dec fldl mov fstps adc aad sbb or inc sbb mov inc add push lcall xor sbb loope mull dec addr16 pop (bad) nop cmp sub or pop cmc cmpsb xchg pop or aas (bad) sbb stos pop adc mov cmpsl notb xchg or andl adc dec sub pop jno lods pop mov and jl gs mov sbb and (bad) clc inc ja int leave stos sbb push cmp test add sbb aaa rorb xchg adc int fistl push push xor and mov push aad repz addr16 test mov loop shrb cltd call insb jno push outsl jle mov jno pop andb jmp pop mov push xchg jle mov sub cld (bad) mov jecxz (bad) test sahf cmp cld aaa outsb (bad) mov jg mov movsl adc fdiv xor pop push aas mov xchg or aam sbb dec dec or sbb lock (bad) hlt aaa xchg fsubrs or das andb icebp adc lock xchg lds add repz js pop lcall xchg fdivr inc pop leave in pop xchg cld mov das dec roll inc movsl js outsb sub adc mov in dec sub mov inc cli mov arpl add inc pop (bad) lcall adc js pop movsl inc loopne outsb sbb add push mov sub outsb ja js mov stos test xor mov es xor inc in negb cmp inc dec shr push incl jbe xchg es push pop cmp (bad) pop adc mov xchg cmpsl sbb sub mov pushf jmp sub mov inc mov into mov sub movsb movsl cwtl mov xor mov inc test int mov lcall xchg dec mov cmpsb (bad) dec daa loop add push dec push and xchg adc int cmpsb (bad) popf int jno xor sbb je push loop out adc testb mov icebp adc or dec lret arpl loopne movsb xchg int3 xor inc xor push jns or int3 jg arpl xlat inc sub rolb xor (bad) (bad) call mov jle dec lds jb jp cmc js call add adc into mov mov sbb hlt rorb add dec or lods xorl outsl aam aaa iret dec sti cmp cli or jno dec or mov std fwait mov pop out (bad) lods xchg js push xor ret xor nop pop or add add fcmovnu sbb or test (bad) cmpsb jle cmp stos call pop orl ret gs sub sub xchg call or xor cltd sbb xchg (bad) lds push or pop cmp jmp jp xor daa or dec pop fdivrs push psrlw and and addb inc (bad) mov add mov jbe pop popf pushf imul sbb or pop andb std das mov dec jge or mov pop (bad) push xor orb nop dec push stos aam out sub push or daa add hlt jg mov ljmp push mov sub cmc imul or das (bad) xor sarl hlt mov inc cmc lock jecxz dec lock es aas or fisttp fucompp stos mov std or cmc inc mov cld cmp or dec mov (bad) mov mov sub cli scas push mov ljmp mov leave inc call or mov ja daa adc pop xchg fbstp dec dec jmp movl cli (bad) adc mov sbb enter xchg and (bad) test imul xchg outsb pop hlt lret jmp push pop mov sub lods sub cld add outsl adc jbe outsb div in sbb add add in pop (bad) ss cmc pop lock outsl sub into cmp xor or in int3 stc pop insb or in mov or or and fldenv push jg dec cmc stos pop ret mov aam fwait mov scas or mov push jnp inc mov stos in mov jge and insb sbb lahf inc (bad) mov je adc or pop pop (bad) fldenv js ss out jmp xor adc adc daa jno cmpsl repz imul adc push pop ret pop test sub sahf push idiv xchg sub sti jmp push mov adc inc stc ret out movsl sub outsl jns jae sub cmp fs scas adc cmc daa xchg mov repnz sub adc xor das popf xchg pop mov push in add xor cli dec das jle or cwtl subl dec icebp divl cmpsl xchg inc mov cmc cmp pop ret push scas and xchg fistl jbe test mov aas insl or mov push rorl add (bad) hlt mov mov inc scas pop repz stos repz add cltd push xor ficompl lea mov mov sub add aas sub iret (bad) fwait jb aaa dec clc pusha adc test enter rol cmp addr16 mov lods fmull repz push (bad) jecxz in ret sti pop lret sub or and or fwait mov lea mov or iret jo mov fldenv out or orb or push sub lret loopne or jg jmp sub mov and dec or int3 or pop fmuls add or adc or movd rorb mov or and idiv lret sub add movsb out or in (bad) mov test xchg ss adc lret mov repnz sbb shlb jecxz stc imul jns arpl jns fs or pop push test in stos mov jg and pusha test inc sarl mov aad ret push (bad) out call out hlt cmpsl xor movsl mov jbe sbb rorl mov call nop lea or out or repnz (bad) je xchg dec leave movsl pop loope test cmp cmp (bad) je adc clc dec xlat lods std add mov inc pop xor push leave fistp xchg mov mov or add cmc inc sbb je aam or jle mov call xchg notl (bad) in popf fbld xchg (bad) mov stos jo fsts push xlat lcall addr16 jb aas mov and dec xor fisttpll jns imul adc addr16 mov push pop and movsl mov or jbe cltd ret mov in ds xchg lock js add not add dec je out dec (bad) std xor or add cld lds loopne jmp (bad) jle add or lds movsb pusha mov fdivrp mov jge daa negb mov fstps or xchg cs cwtl or pop in leave jecxz jae out ja jge cmp fnsave sbb inc mov xor leave lods and pop stos lods push cmp mov add jl stc jbe mov mov add sub or insl inc inc mov mov mov xor dec inc pop enter sbb icebp in int3 stos mov mov sbb cmc stc pop stc dec jmp pop inc adc clc sbb sbb mov mov std jecxz or (bad) dec xor mov push jns sub lret je add xchg addr16 loop jae cmc (bad) jb loope cmpsb jno test orb mov xor push pop xchg dec addr16 iret pop insb or dec xor notl test and fucom test test cmpsl jns xor iret sub adc cmp in mov test sbb xlat jnp outsl lret jmp ja inc test add aaa mov adc sbb cmpsb push hlt or inc stos idivl enter fisubr sbb (bad) jmp fcmovnbe icebp and xchg or cmc cmp sub dec lds mov cmpsl test dec repz xchg push stos lds sub in dec outsb mov int (bad) push dec cmp int3 cmp lcall xor or jg das pop decb lret adc jo les sub pop gs (bad) dec sub mov pop jecxz mov cvtps2pi jo sbb jno inc mov adc loope and adc add out pop dec jo (bad) fdivl cmc data16 dec and jmp test dec pop imul mov and cmp pop pop xor stos xchg and mov mov fildl mov movsb mov adcl cmp xchg pop dec movsl xchg xchg lea loope xor mov imul or mov (bad) or add xlat or mov test movsb int3 xchg or fwait ja push leave xchg mov repnz leave add jge hlt test fldl jno out push or scas ss cmp out mov sarb fstps jg repnz cmp pop aad subl cltd outsb movsb pop xor dec test adc add mov popa (bad) xor fucom push cmpsb jle cwtl xchg jmp shlb jnp cltd xchg insl xchg addr16 out pop pushf loope movsl (bad) fbstp insb leave stc dec adc add xor jno cltd sti add and fildl fiaddl xchg imul shrb repz adc inc or addr16 jmp insb sub and jns jns mov scas adc inc adc fsubl lea adc and xor fcoms hlt jp add inc dec paddsw loopne mov or movsl mov das ljmp dec jecxz dec mov sub nop jp pusha subb push or push or rcll movsl pop imul (bad) xchg cmc testl out rcrb xchg jle out pop or gs xchg push les xchg and cmp adc mov xchg aam push inc or dec cmp sbb lods pop cmp adc fwait push jno mov fcoml fstps shrl sbbl call in jns jle fcmovnu stos data16 test adc mov test cmp adc mov mov lods xchg cmp and pop popa fcomp add popf (bad) scas push cmp lods hlt pop jb mov dec ss pop and insb ljmp fsubrl (bad) roll adc fsubl jge xor cli outsl xor xchg sub js bound sbb or jle pop (bad) and notb jg loope lret or aaa in (bad) xchg dec cmp rcrb popl subl mov mov xor rcll out mov mov in sub bound cltd mov js insb (bad) inc scas xor jle repz mov lods add jge or insl mov pop xchg sub jae jb sub mov pop dec add or dec xor dec sbb jle or adc mov leave ja pop pop scas xlat outsb icebp mov lret loope push je jnp lahf test push and dec (bad) stos (bad) cmc mov mov cmpb mov or repz clc pop test notb les lods jns sub or rcl scas sub sbb jp pop mov repnz popf ret mov into cld mov cs adc (bad) rorb fmuls jae dec or xchg scas sbb mov int jno push push pop out inc xor xchg cltd jno mov cmp or les aam fdivs lock stc push jo cltd or pop lds popa sbb insb mov test xor or add or xchg or fldenv push repnz add and leave inc std inc mov shl mov pusha jno mov pop fwait pop mov faddl sub sub or rorl jle jno aas fucom or gs pusha or inc and loope push xor mov js mov or jl lret sti aad mov xlat cmp xchg mov sbb stos imul inc sub and int lret repz mov cmp fist jae add inc gs xchg int mov inc or test jno imul or dec jl pop mov mov or les std movsl xchg insb ss push out imul mov jb push dec lock (bad) lea and xor sbb lret scas push lcall call xlat imul cmpsl ds clc sub lds ret mov lods out leave xchg mov mov leave adc js daa mov pop mov leave push cmc push jecxz iret (bad) push (bad) in cwtl xor inc stos dec in and or ficompl jae outsb int or loope mov repnz dec cmpsl cmc adc sub inc mov dec test cmc add lods stos xchg or call sub (bad) inc pop inc movsl or jno add mov push and divl or fistp pop fnstsw and or (bad) jno push push inc or or in fisttpl push add sti js lret call fiaddl es sbb mul repnz fiaddl add cmc mov inc cli sbb push add aam and jne into or pop (bad) xor sub or xor sbb jle xchg stos cmp or push test mov outsb push push lret dec jmp cmp sahf jb jmp or lock aaa pushf mov xchg add int3 pushf or les push dec or movsb pop jl or xorb cwtl (bad) sbb imul test xor cmp or je ret sub rolb or pop mov out stos xchg xor xor fldenv stos ja jecxz push je and fcmovnu insb dec or dec mov jno push jnp fsubrs insb cmc subl mov mov icebp (bad) lcall xchg inc mov push fs pop mov pop or into mov lock insb lds cmpsl xchg int loope push jo std mov mov lock (bad) fldenv adc pop push jnp jo loop lock scas clc (bad) lahf jb test xor addr16 xor out jl add adcb add rol inc test or jl jmp pop add pop sub lock add pop mov inc les dec add mov jno mov insb imul xchg and inc repz sub push push cmp jge sbb or imull or les insb cmp mov push sub add push mov xchg push and or push push movsl pop neg xor sub loopne mov fisttpll xor or sbb das (bad) out cmp orps sbb leave jge jl mov inc or aas and xchg pop add shl inc mov lock rol test adc add jo push scas mov mov or xchg inc sub mov cli ljmp sub jno or dec imulb ljmp dec and mov add fisttpll xlat cmp outsb (bad) mov jb into or lahf jbe lock test fucom fcoml test sub rcl inc sbb cmpsb dec xchg inc repz pop sbb xor ja push add cli mov out mov or leave or imul dec jp jmp or test xor pop cld xor jl std pop sbb test cltd lods fisubrl xchg sbb mov dec mov jp js or jb (bad) mov xchg sti stos pop push loop lea dec leave xor daa jmp adc stos or (bad) into xlat or and sub xchg in pop data16 pop push clc pop or fsubr sahf into imul jl inc xor jecxz psubw daa ja (bad) jno or inc test sbb xchg or outsl jbe or and stc notl popf enter push test int3 addr16 (bad) push inc or je mov add test mov or ficoml cmp mov mov xchg repz (bad) mov or push mull cmpsl inc mov bnd sbb adc xchg nop imul mov in enter or add push or int3 (bad) or lock mov ja inc repz cmpsb cwtl gs or rcrb ret mov fdivrs mov pop sub mov stos push dec adc pop or jns push xor lcall add or sbb popf div dec aad jo nop cmpsl or jp mov xor fimul pop xchg or and push int insb jno push adc jge repz (bad) cmp or gs pop cmpsl adc adc imul es stos pmaddwd or and and xchg stos dec dec outsb dec cmp push fisttpll rcrl adc ficomp test or stos imul xor (bad) xchg dec mov insl push (bad) and stc add and mov lock scas lds rclb push insl xchg jle push or mov aad push clc repz popf and sub test cmpsl out pop xor jge adc xor dec jle mov jbe jl pop loope lds lret (bad) pop data16 hlt test adc add mov adc leave daa sbb pop or jno sbb xchg lock inc out movsb enter add lret xchg in mov shrl push or add add xor inc adc inc nop out dec mov xchg enter imulb iret pop cmp repnz push leave cli jmp dec add (bad) mov inc pop fdivr and xor pushf adc aas in jg loopne pop sbb mov adc popf jmp sub in jmp test dec xchg mov stos mov enter or sbb scas repnz xor jbe nop lahf jo sbb xchg iret or mov sbb jnp xchg sbb ds jo icebp faddl mov dec lods addr16 icebp pop jmp or jle push mov pop std ljmp divb jno mov stos xchg lcall lret dec (bad) hlt out inc sub add addr16 push mov add dec jmp jp push mov icebp and xor adc pushf cmc jmp cwtl pop jo movsl cwtl dec int jne jle xchg jnp mov pop hlt insl inc and adc call dec out pop jmp outsl xlat aam call dec sbb mov (bad) add aas lahf sarb add lock pop into test nop pop sbbl ja aam scas int3 adc jmp cmp jns cmpsb sbb mov and cli fs sbb out xchg mov adc icebp lods lahf mov cmpl test xor sub mov mov sbb and xlat cmp movsb pop stc xchg es cmpsl popa lret jmp and mov jo dec test in push stos dec enter sti loop jo fxch xchg adc add adc or (bad) repz cmc cmp mov jno cmp push mov jae js inc lahf fs jle cltd addr16 (bad) testb test pop lock mov cltd call pop scas nop dec int xchg add cmp jge dec into push aaa out pop pop js inc xor repz inc adc fstps std dec sub addr16 div xchg loope adc lods (bad) xor repz jge pop movsl or cmc mov or lock sbb test leave cwtl jl imul ret loop push (bad) cmp push fwait mov fs imul and gs pop dec jmp lock and jp pop fwait call xchg fistpl es lods lods xchg inc add lret mov daa fildll jle jns,pt and shlb (bad) notl push push cmp cmc or cmpsb and cmp or jle pop mov ret shrb and pop xor cld adc pop fildll pop push hlt fdivrs psubd mov cmp mov mov or xor add clc or mov cwtl mov (bad) lds xchg popl inc mov test cmpl pusha (bad) (bad) or bound and cmp mov push jne (bad) push and mov inc dec jmp (bad) mov mov adc pop inc pusha (bad) hlt pop les stos imul imul mov or or dec ljmp mov ret or mul enter shr mov scas jne or cmpsb and imul add iret je mov cwtl mov xchg mov lret or lahf jns popf jmp and loop or popa (bad) outsb or or les or mov add jbe rolb (bad) aaa jmp sub popa adc aas repnz add mov mov xchg out ljmp insb mov dec ds adc ret scas movsb pop mov test add mov lods adc iret or fnstcw push cmpb mov jbe outsb jne sbb sbb sti cltd pop cmp mov stos lds inc addps sahf dec xor stos jbe mov sbb dec lock cli aad in mov cwtl xchg xlat fmuls or mov shll call popf mov or dec sahf adc lcall dec cmc jmp daa sbb pop (bad) lods or mov (bad) sbb fcomps loopne fisub mov cmp testb int add or jbe or test jae xchg xchg cmp sbb inc (bad) fucom hlt repnz (bad) stc mov repnz add mov xor mov rol add lock jle and popa adc or adc (bad) mov xor inc xor data16 repnz mov cltd sahf jns add cli and sub or imul cmp sub fcomi in adc jmp repz mov fisttp lcall pop aad inc mov jg sub arpl mov adc mov in adc ja adc int3 mov mov test cli cli je or clc mov in and fnstsw fbstp add stos add imul lods xor xchg scas mov inc mov xchg cmc pop mov add mov xor dec add or xchg lods mov dec cltd daa (bad) stc cmp jl fstp jb sbb xor popf into adc jb push inc jmp fisubl shll dec fsubl movsb popa lea fs lods xorb (bad) js ror sarb inc mov inc or jno xchg int3 sub dec hlt xor or roll imul dec jp insl (bad) dec jle jbe cli aas sbb push in test pop loop insl call or imul inc mov push and clc jle dec test dec xchg pop imull test cld mov pop cmp mov push out mov (bad) not mov leave int cltd jle jg push mov add pop cmp push aad scas and and adc push outsb or pop adc push pop out jo movsl out adc cmpsl lods jge stos xchg rep std lds fs push fs jge push mov xlat outsb push stos rolb cmpsl cmp rolb or dec inc scas idiv int3 enter aaa jae call scas or shlb mov adc cwtl fs stc nop or jo int std jmp daa dec sbb lods lock cwtl adc jb daa and jl push push imulb aad push leave adc sbb lds lods and sub aas sbb xlat mov sub push or aam xchg jle and fs adc das sub popa test mov mov mov nop repnz mov adcb icebp mov loope ret leave adc int xchg jmp movsb mov xchg adc inc inc mulb lcall lock loop add aam mov testl dec cltd jne pop leave or lahf int3 pop (bad) jbe or (bad) fsts fisttpl les sub rolb xor sub adc popf stos pop daa push lods mov mov mov push (bad) repnz mov xor adc int3 stos sub push mov and mov shrl fdivs fisubrl xchg aam sbb push jo test daa lcall push stos jns push flds xor adc pusha push in pop add sbb into and fistp xchg sub xor stos sbb adc or (bad) jecxz in fcompl or adc cmp (bad) hlt in push sbb div rorl dec or loop push pop pop jle shrb mov in or out fistpll inc xor test ljmp (bad) dec hlt dec pop rcrb mov cmc arpl pusha or js mov jecxz mov xor sub into and adc sub and and mov sarl (bad) xor jmp cmp hlt imul or dec jbe insl or test pop or dec out dec insl sti mov jne push mov dec stos test fs fbstp les dec mov cs in jmp fldl add dec push or add mov (bad) cli or bound sbb xchg push push or sysexit loopne mov rorl pop mov movsb lock hlt or imul or inc out aad cwtl int3 or cltd fiaddl arpl sbb imul xchg paddb mul fdivp out fstp adc mov sub test inc (bad) fisub sub in cwtl cmp test popa roll or fnop scas aad lcall pop mov or dec movsb sti (bad) xor cltd mov leave mov inc out dec or add decb jno arpl and sub mov or iret sbb mov xchg pop cltd xor cmc (bad) (bad) popf cmpsb adc adc cmp arpl sti mov test je mov std and lods pop in adc push xchg jmp dec sub inc adc push push scas jmp jge pmullw mov xchg xchg jns mov lock mov fsub fild cmc mov adc dec push test hlt lock dec push or fisttp add cmp push mov mov lods ja push or xor pushf outsb mov push sbb dec in mov jne add push jnp inc push in lods pop out in cmp sbb mov imul push dec push or out cmp or mov mov add jg adc xchg push or mov int3 imull or test imul or mov adc dec imul scas sahf or fidiv jnp ret xchg inc std out or lods jnp cmp es sub sti pusha cmp mov push mov or xor mov aaa pop or rolb add and adc (bad) pushw stos sub dec sub shl adc into es jbe mov (bad) or lock out scas xchg push dec add cli sbb hlt adc xchg outsl add lock inc add pop icebp or (bad) hlt iret cmp inc xor pop out or lods sub and jp push pop jne clc ret and cmc mov or (bad) mov or jmp xor xchg xchg aam cmc mov or fiadd push test adc sarl sti add push lock mov ss jo push mov cli mov fwait adc aas push push sub xchg cmpsb mov xchg sbb add mov jne dec or jb int mov jne (bad) xor hlt cmp sahf shl fdivrs or jbe xor fs fiadd or in xchg inc or xchg fidivl lcall imul sub lcall push inc ss mov jp or dec inc or pop fninit mov push std aas (bad) lcall dec int xchg in aam mov dec es sbb or leave cld cwtl xor sti or (bad) push loop mov (bad) cmp es (bad) in leave and call fistp aad out mov iret xchg or ficompl and cmp insl ss stos stc imul pop leave push test push mov das mov or mov inc and stc gs les sub jbe int3 dec loope or jb mov outsb imul ffree test push dec and pop int3 sbb push mov pop repz pop sbb (bad) lret mov cwtl ja loop mov mull sbb or rcrb jae cwtl lock push dec imul imul out or ljmp pop stc mov xchg push push das xorb inc or mov lods add push ret je mov stc cmc pop mov push js xlat outsb test lcall (bad) imul out mov mov sbb mov fsub mov cmpsl fcoms decb dec aaa lods pop iret jb sub mov jmp imul sbb dec out dec sub xchg outsb lock xchg test lahf call test push jl cmpsl popa jae je dec mov add mov push push js,pt mov mov out cli scas jmp pop notb cld cmp leave dec mov nop dec jne push inc add dec and adc jle inc push sub (bad) popf int3 pusha (bad) sub or dec or cmpl add loop mov mov push fnsave and jl pop out jo fisttpl xchg ja sbb mov xlat aam jmp popw mulb push imul testb mov (bad) jnp mov sbb sbb cmpsl rcrb lcall inc mov cmp fwait push push mul adc hlt or pop ds std adc jno xchg add test or jmp in mov insb movsl ja sub add dec popa lods imul sbb or push sbb dec jle mov jb dec jns mov dec cmp xchg roll daa iret jbe fcoms mov mul mov push (bad) bound or loop aam mov mov mov dec pop xchg scas (bad) sbb pop or sbb aam cmovb pop (bad) jo negb (bad) negl cltd xor or test or leave sub sar jl or jb mov ss add or stos leave lret mov push lcall adc ds insb sub mov test inc dec cltd xchg dec or mov scas xor push or add cmp push test and sbb clc insb popf lcall xchg push int3 in pop fwait adc outsl movsb pop push xchg notb inc aas fstpl adc jbe jo sti or dec imull sbb int mov (bad) idivb stc loopne outsl out in fdivs dec xchg dec xor fstl ret sub dec dec repz or pop insl mov fisubrl (bad) dec icebp (bad) pop sbb xorl outsl test movsl lea js fild repnz inc and jnp mov cmp xor add mov jg out pop jmp mov lahf repnz sbb add pop shll mov into xchg or and test mov test fimull cmp sub or xor fwait pop mov add mov sahf pop dec sbb or ja jle jne daa pushf push popl sti ret jo repz hlt and incl mov jle out seto sbb test push cmc cmc adc dec sarb add jns push (bad) (bad) je xor push (bad) rorb leave repnz out or mov arpl lock loopne lods enter jmp dec xorb dec cli (bad) mov addr16 ja into enter pushf push or cld (bad) jecxz (bad) or pop sub or push in push jecxz dec push insl popa adc adc mov xor adc mov adc pop pop wbinvd pop mov lods (bad) notb sbb cwtl lahf xor jecxz sbb shlb leave mov xchg jno call or fcompl or popf lea (bad) push or push sbb jp cltd or adc mov mov je das fcmove addl push and xchg and cmpb pop push loopne or arpl jle or in movsl (bad) mov fxch ja insb pop out bound test sub add dec jecxz or adc xchg adc pop or inc addr16 js outsl mov outsb mov leave adc lods pop aam adc mov push int3 xor lahf mov and rcll xor into rcrb inc popf mov pop jns add push loop rol insl orb das hlt (bad) (bad) mov out jnp mov mov adc sub (bad) cltd loop,pt cmp outsb xor xor bound push add into in mov imul aas lret out out scas or mov or jbe,pn push jne and push inc std sub mov or (bad) push jne,pn jle dec dec sbb enter jno or ds xchg adc or cmpsl test fildll call repnz int3 cmc pushf test or js or push adc jecxz sbb xlat jae ss daa add add std (bad) ja es (bad) in or sbb addl inc rorl stos dec and (bad) js hlt (bad) outsb (bad) jno cli jle aaa or add movsb (bad) jmp xorb add imul int pop mov ss inc cmp ficompl fcompl push out push adc jp sbb adc or dec lea roll sub pop movsl (bad) lods or inc mov mov in or lcall cld xor mov sbb mov push jne gs push test or repz fwait cwtl inc fisubr push aaa arpl lods cmc xor ret pop adc ss pop stos dec or or arpl imul ja test int3 test inc lcall add imul outsl lret jo add dec xlat push stos call in add pop mov ljmp jo xchg pop decw push mov mov cmp sbb mov xor lret pop dec push pop scas aad les push pop and and int leave stos lcall pusha or (bad) andnps cmc sahf repnz xchg mov jb jns rorl xor cmp or jg inc or or pop and mov stc lcall adcl js popf push cld or cmp or sub mov mull ficom and je lret push lods push mulb push add add int3 sub pop clc jge mov sub push lods mov jecxz ja lret notl mov xor fisttpll out cli push or cmp or xchg or sub in out imul sti leave js out jo sahf mov lcall sarl jecxz jecxz sbb or add out mov lcall jle loop xchg cli or jno push cwtl hlt loope jge (bad) in aad lods aas imul jae pop (bad) movsb jl dec mov test adc or push push data16 pusha in lret xchg repz out shll mov push jo flds dec repz (bad) stc (bad) fs cld lods pushf mov out sbb xor (bad) fdiv adc stc repz adc add std movsb mov ja xchg dec jnp pop idivl mov xchg mov mov mov or mov test or pop loope lods jns cmp (bad) inc jecxz scas pop lock xchg adc test shll cmp or cmp lcall pop adc std scas mov mov wbinvd mov pop in xchg orb jnp and or push and (bad) outsb ss lret jb mov pop mov dec or mov movb fildll jge clc dec mov sti mov fnstenv inc scas in ret aam push adc lock add cmc enter mov inc out adc rclb add insb fxch (bad) idivl (bad) adc (bad) mov jle cmp nop in test or sbb ret or fistpl das or dec jmp dec cmp mov jno jmp sbb ss xlat fisub data16 lods jecxz pop inc addr16 sbb jne stos push jo or xlat (bad) aaa or clc cld mov loopne (bad) ss mov mov inc into adc out pop sbb in add sbb incb mov popa or xor in fmulp fwait pop enter lods aam pop push jae or cmpsl jge adc adc cmpsb leave xchg scas cmc mul (bad) mov xor imul int aas sbb jns or test pop ret loop (bad) sbb or pop push xchg movsb aaa cmc adc adc sbbl out dec sbb or aam je (bad) mulb js ds frstpm(287 outsb loop adc cld and fdiv sbb jl mov jbe or jae lcall icebp rorb mov (bad) xor scas sub mov ljmp (bad) jecxz inc xchg inc aad dec cmp jl mov dec xor ret fmuls call stc or jnp cmp push test or mov out inc rcrb lds ljmp gs (bad) in xchg and stos push sub mov cmp cmp aad test lock test scas inc loop dec test xor sub rorb mov mov mov inc icebp loope outsb or aaa or mov or pop negl fisttpl ret rcll sbb mov jb cmp push test inc repnz push cltd sub mov cmp and sbb cmpsb or inc mov dec jecxz push sub (bad) daa divl scas ror cltd push fmul sub lds xchg ss bound in jo std call cmp add mov mov fdivs ds inc jae rorb sub movsl cli sbb lahf xchg test imul lea rorl int3 fdiv sub cmpsl push sub xchg and loope or mov lock jo out push mov mov xchg and pop outsl fcomi test aaa fbld mov pcmpeqb popa xchg or sbb js and (bad) mov mov push inc mov jp push inc xchg or xchg inc jnp out mov cmp (bad) aaa push dec (bad) xor pushf bound inc out pop cmc repnz out pop mov lods pop or sub xor sub sbb or daa and sub adc and add ret or jne pop jb push and rolb ljmp mov mov push and inc aam dec or xlat sub adc or jle loop js sbb jecxz daa xchg iret insl emms or mov cmp bound std mov mov test xor inc enter dec or pop xchg mov jnp or (bad) and sbb cld push ror mov or out bound xchg movsl jg jmp (bad) jge sub bound test add sub adcb bound icebp loopne mov jnp out (bad) lock cltd jne sti mov xor add mov xor fnstsw sub js test sbb or dec js jge mov adc mov icebp (bad) (bad) lods divb pop or test fwait paddq cmp jmp jo adc es adc cli jns (bad) (bad) push add fsub je out test sub jns push cs repnz out mov test jl insb sti repz sub push sbbl bound fcomps or or mov add imul fisttp mov and sbb mov fdivrs push fs icebp dec jmp leave in fcoml aam jne dec jl (bad) jae or sbbl or ja xor loope lock sub mulb and or sub hlt test leave xchg clc mov or (bad) jge push pop inc cld fcompl mov into adc sbb scas lds outsl gs jp adc (bad) in test or sbb mov add mov sub lock (bad) negb sub lret ss mov das and mov jns sar push std imull adc loop dec lock pop push dec loop out or sbb ret hlt mov push out push sbb (bad) pop jg adc or iret adc mov or lock push std fmull dec mov cmp jg cmpsb jnp cmp cltd loopne dec shrb cmp or push (bad) xchg inc loop (bad) mov adc fidivl test fstps hlt movsl xor dec clc test loopne and cltd sar lods xlat xchg imul in and stos mov cmp ja loop bound mov or and pop sbb aad out fwait imulb push cs pop and xchg (bad) inc mov pop inc ret (bad) call iret inc jno movsl or pop (bad) lds ficoml pop sti push (bad) mov leave cmp mov xor std push sbb aad (bad) or mov mov daa out mov lea dec jge inc in das rcrl cmc (bad) daa rcrb cmovs sarb aad rolb jmp sub pop test pop cmpsb std in mov sbb sar addr16 mov and negl mov xchg fcmovnbe in push ficompl cmp shrb fstps jbe pusha inc pop dec pop bound jnp pop sbb jns sbb jbe jle rorl dec notl add cmp mov push or dec or and orb pop movl testb jge mov out daa pop pop call rorl pop test fs push call out dec in and jnp test push or scas lret push mov mov push rcll repz stos out jecxz addr16 or loop add mov mov leave jne or xor js and adc xor in mov int cmp or test or mov stos insl std cmpsl cmp cmp in mov sub dec aas fs dec adc ljmp inc rcll or inc xor or push lea adc lret ss or or pushf jns dec cltd psubd (bad) lret push mov inc jb jecxz add cmc cld mov aaa out and nop lret sarb jl nop std mov xchg and test or xor call dec enter mov mov (bad) (bad) jns in sub pop repnz sbb aaa pop and daa jl (bad) jbe (bad) cmp mov cmc cmpsl frstor jmp jb xor adc or dec pop fucom fnop mov stc stos call decb mov loop push or roll popf pop fnstenv sub std sahf cmp cmp (bad) lods dec mov rolb mov ss arpl lock test fs mov jo popf into repz inc or cmp or pop shrb leave mov inc stos jle and std or jl pushf ret xor inc jle or enter sbb mov mov and xor loop mov jmp inc jns aam repz out into addr16 iret es sbb int leave daa test xchg scas adc dec repz jno fsubs mov insl dec call mov add jecxz ss or jne dec jmp adc in pop notb cmp test std insl xor arpl pushf push dec dec pop or clc insl imul sub push mov adc jmp dec ss cli jb and add mov add fnstcw cmp mov loopne fidivrl es add in cli bound cmp jle nop sbb test icebp adc das js cmp dec aad bound mov pop rorl jg test push faddl add sbb scas int3 pop (bad) mov pusha lcall add jo sbb stos (bad) in (bad) mov mov or jns pushf bnd push adc mov fnsave sub pop idiv lret push data16 mov dec pop ds dec fidivr xor sbb jb adc (bad) out push sbb in jl or jns leave dec push dec popa inc xchg idivb lea insb pop jns fucomp push xchg daa dec dec aaa notl sub jg xor insl inc cmc out mov cmpxchg iret or ss fpatan addr16 out test push cmpsb push mov aam out aad std cmp mull mov stos iret mov add popf cmpsl add ja add daa mov adc cmpl push (bad) and lods pusha jae in in and jno mov add ja xor cmp inc mov add repz test shrb xor adc insb icebp aaa inc sub call sub inc (bad) aas dec sbb pop lds jle outsb stos sbb bound mov xchg imul xchg (bad) cmp mov adc push and jb mov or jl jg lds jne pop repnz mov cmpsb and ret or adc into (bad) in sbb inc mov or mov adc mov mov mov fwait push mov lea outsl pop frstpm(287 sarl cmp dec rcll adc ljmp sbb test inc jle or jmp add (bad) (bad) xor scas and loop dec jl or inc int3 in jecxz addr16 adc (bad) pop sub jns std jno push loope dec mov push mov cmp jp push adc cs inc mov sbb mov adc js xchg jg push call pop dec push sub cmpsl test pop cmp je gs or jge out inc sbb pop aas (bad) pop or fbld sahf idiv adc pop pop cmp (bad) mov ja aam aas out out pshufw addr16 movsb leave data16 inc frstor lock mov push iret aaa xlat adc movsl bswap icebp pop lock in iret add daa and sahf cmc movsb stc or mov adc fcmovu add gs mov and gs cs adc or clc mov cli (bad) daa sbb adc iret stos test jne mov adc ljmp rcll sub fs test lahf dec repnz out out pop jns mov push sbb mov jne lock mov out scas idivl jae aam popa mov (bad) movsb mov dec add decb stc jnp mov mov push jge icebp xor dec mov jp sub pushf push cmc dec fldcw pop pop jns dec sub cli ja inc (bad) xlat sbb adc pop add cmpsb mov xchg mov mov sbb pusha mov mov stos (bad) jle sarb repnz inc mov addr16 xchg imul mov das or call and iret outsl xchg push stos xchg or push or pop dec mov in add (bad) cmp inc cmp sbb inc dec sub jne xor cmc lahf mov jae cmovs and or adc sub and or dec or cld adc pushw inc popf jmp stos and dec cmp mov arpl and lea push lret xchg aaa or popa or mov mov cltd sub jbe stos or and iret mov sahf (bad) imulb sub in fcoml adc mov jne arpl inc cmpsl sbb cltd or fwait mov xor mov outsl imul iret cmc in pop pushf or (bad) out dec xlat jmp lea clc pop mov adc mov arpl loopne mov jle or dec stos inc dec fstl add dec mov ds test push jp add dec or (bad) mov jmp iret lcall mov jecxz dec or (bad) lret inc and jmp lcall decl js cmp lret insb (bad) push cli mov ret fmulp out dec mov fnstcw dec xchg and roll pop lods xchg mov cld clc out gs dec or or cli jmp (bad) dec xchg orb sbb add aad fdivr stc cmpsb mov and aas (bad) pusha and inc dec test test push inc test jo imul aam lds or imul loope mov lret loop jmp incb xchg xchg sbb icebp mov sbb xchg (bad) daa sub pop cli in push ret fcomps pop mov setp jmp sbb fmull out mov dec sub dec divl push inc sub dec ret shr push or xor xchg out test repnz push inc add imul xchg push pmuludq fisubrl ljmp out inc repz aam mov sbb lds shrb adc xor jecxz or or push cli stc je xchg int3 xchg adc repnz pop dec cwtl xchg mov xlat mov adc mov mov cmp out lds pop push pop stos add add and sub mov std mov push cmpsb (bad) adc push push push and in insl (bad) cmpl mov jle fs in xchg push jl sub jecxz enter and arpl aas out adc add (bad) rorb xor add or leave stos sbb fisubl ret or cltd or sbb add mov jae stos push or out or xchg mov push pop imul outsb push sahf jnp imul leave pop inc fdivrp ret jge dec fild cmc and dec cmp cmp or push sub xor mov fsubrs ficomp pop jnp aad popa lods (bad) mov sub ss fscale insb int cld cwtl or loopne rorl aam int repnz jo sub test movsl jne fdiv les mov insl push rcr and (bad) xchg orb mul pop lods xor sub pop and ljmp pop add mov cmp mov dec and ja and mov dec mov ret adc int outsl or mov mov mov lods in cmc test mov sub mov jecxz sbb sub pop jb mov in stc jo or std (bad) adc sbb sbb sub dec insb mov fdivr ret movsl or loop rcr and gs inc mov xor mov adc add inc cwtl int loopne (bad) repz mov (bad) int lea inc daa adc or mov es es or mov push movsb xchg pop mov xor call or je stc push push mov imul aam or mov (bad) mov or cld and pop jecxz in dec not (bad) push cmp lcall sbb test fldl or in sub jbe xor mov imul ss pop and sbb push inc repnz inc jb and cltd cmc scas sahf xchg or fisttpl lods or pop gs push mov out or inc cltd dec or out shrl push in or sbb enter dec pop aam adc test sub mov or mov or dec leave fstpl cmc lods call xor xchg sub mov xor push sbb aaa push inc pop or lcall lods or fadds xchg fcmovnu pop lock pop mov je mov mov bsr out xor imul and pop sub out pop gs push add test sbb push mov std insb cmp jbe movsb bound movsb fnsave and rcr loope int test mov lods addr16 mov stos fs insb das xchg dec stc jb or mov cmpsl adc adc mov adc or outsl mov dec cwtl les jmp sub sbb mov stos inc xor push out lds dec jle inc mov adc lods stc fcoms push data16 add push sbb fsubs xchg rep decl lock jno imul icebp test mov mov dec shr inc lods scas fnsave jb pop sub popa or xchg sub inc iret stos sarl rcrl ret in je mov push push xchg jne or adc add xor loope,pt cwtl inc nop repz mov dec icebp dec das outsl mov or lods xor mov xchg hlt int in xor and mov pop fcmovnu popf cwtl into jle adc arpl data16 ljmp jns aam mov push in idiv hlt das loop or adc jae mov stc cmp mov xlat fldcw in aas test dec leave cmp imul xchg mov xchg mov adc or xlat xchg (bad) and aaa outsl aas daa pusha (bad) cltd push dec ljmp mull ljmp ds inc or add data16 insb jno aam add or into jbe push inc lock imulb flds xor fwait jbe adc ja adc into aad or pop inc ss mov daa sub icebp or mov (bad) xor (bad) jmp out pop daa rorb xor cltd sbb and mov fcmovne arpl loope add or mov repnz and outsl or call dec mov fistpl stos sub insb jo mov sub push (bad) leave sbb pop push or fs call mov repnz or pop xchg lret pop jmp dec rolb xchg add lods mov imul sub or jg cld or inc sub ja hlt sub pop or and sbb sahf push pop stc mov push test movsl test pop push jecxz sbb mov pop popa fsubrs push add enter and dec out xchg push add mov jp mov xor jb inc imul and loopne sub movsb or inc bound aad adc cld les sub sbb es push xchg inc ds cli outsl mov or inc rclb or ss mov loop clc icebp or ss pop pusha repz gs or movsl xchg push cmp loop mov add (bad) ja nop pop or mov dec and cmp jno or enter adc push inc dec pop (bad) push jae cmp into push cmp jbe push sbb iret mov dec lods lock mov pop inc adc push imul jne inc movsl sti and (bad) sbb and push mov fs mov and lods pop ret sbb mov jmp sbb js xor dec dec out add jae dec (bad) sub mov sti cmp xorl add cmc cwtl jle dec xor push xchg scas into inc test or push push (bad) mov mov aam push sub les iret or sub test cmp in cli ja notl xchg pusha mov mov cmc pop push or hlt test popa inc pop mov mov sarl pusha push mov xlat repz cmc jle dec push cmp mov arpl in pop jno xor pop pop jle fs int3 pop (bad) imul out jo in or and (bad) jbe clc aaa repnz cwtl fwait mov divl dec jl aaa mov and push (bad) or dec xchg pop lea scas pushf push call pop xchg and (bad) mov scas js scas rorb mov lret ja or add inc aad dec and enter and repnz or out dec and stos pop or or jns aad cmp mov inc lea xchg lahf mov xorb or push cmp add mov inc jecxz mov divl or in adc jne scas je stc cmp push data16 push adc aas enter decb into leave iret fs lcall inc sbb addr16 lock outsb sub (bad) xchg imul leave sti lds imul hlt inc or fucomip div in xor cmp jno or movsb iret inc fdivrl int3 dec sub popf stos out jge addr16 nop xlat fcmovnu or call and ret lock push fucom or sti jns lea imul or xor adc lds mov ljmp jae dec repnz in fcomps jnp enter adc mov adc jmp movsl xor addl int3 mov fdivrl ja cmc xchg sub or mov ror pop cmp mov dec pop (bad) cltd pop sbb test out or or dec jns cltd repz or sbb sti mov decb aad lods dec pop add cmpsl lea xchg popa jo clc or or fisttpl mov or jmp lea je sbb sbb int3 xchg iret mov (bad) (bad) xor test imul jp and cmp and into int out or int leave sbb xchg add jne sbb and mov sbb sub es fucomip mov sbb cwtl (bad) xor mov cmpsb pop cmp imul loope pop enter pop dec call (bad) or mov and je mov es out stos test mov dec add int3 and mov repnz sahf mov push sti jl aam sub sub add cmp mov dec fimull hlt orb pop loope or mov in fmull out out scas and add pop push test push or fcmovb dec jmp xchg lock mov mov decl xorl (bad) or mov cmp in inc (bad) stos leave aas in add loope jge icebp mov sbb push jbe into test fcmovnbe lock or in imul imul popa pop cli imul bound mov shr scas cwtl enter cmp xor mov out in mov out lret or fstp popa add std mov or cwtl pop sbb jp hlt add wbinvd dec cmp jns jle gs loope dec xlat lock cmp (bad) stos adc xchg mov addr16 add rol pop and (bad) sbb fdivrs mov jo outsl hlt mov mov adc lds imul mov dec jecxz,pt orl pop out inc sub xlat sub int3 call lock mov imul mov push sbb into loope sarl imul sbb xor stos cmp divb mov mov dec mov push fisub jp,pn adc and sub out push aad fist or les adc dec fwait ljmp sub mov pop mov mov movsb xlat sbbl gs or aaa sti aad movl test loop inc lea les mov xchg int mov insb mov leave push cmpsl data16 dec out idiv ret pop mov sbb or imul fisttp in mov (bad) or xor cld lea cmp leave mov loope test sti call pop ror or stc mov mov loopne outsl lock push adc out out or push (bad) push or cmpsl leave xor stc jbe daa mov add xlat mov ss popf cmpsb inc ss stc in test sub std out mov scas jecxz outsb (bad) imulb scas je push pop movsl pop jecxz push gs int out xor lret mov pop jne xor fcomi fldt push sub sbb push push add jae xchg scas out sub out dec sub out pop or inc movsl jle or xchg (bad) inc lret fs nop add in cmp inc loop or js idiv adc gs out loopne addr16 adc ret test sbb push pop add mov stc nop (bad) or inc in and inc jge mov jno sti sbb or sub pop aas mov or jns icebp (bad) cli ds stc leave push pop fistp mov dec and leave repz xor or and data16 ret or sbb xor adc out fbld xchg jnp cmp sub insl push cmp add jmp fidivr in sub jnp xchg push xor cwtl test push jae (bad) aam notb mov xor hlt or dec mov or sbb into test push fiaddl add je adc incb ljmp sbb scas cmpsl push fnstsw or jle mov sahf mulb xor jg popa mov jb (bad) sub or mov and test push mov out dec or imull pop add out aaa aas pop pop imul push sbb in dec add test cmpsb or ds cmc lock in add sub (bad) mov inc cmp lock shrb jmp movsb rorl cmpb push jno mov xchg or mov dec popa xchg or out or popl ljmp or lea cmp div pop iret adc push dec or or sub mov add mov subl inc jb pop pop fs sub outsb dec mov (bad) mov (bad) jae inc pop aas out jb loope mov icebp sub (bad) mov pop fadd call mov sarb fsts adc sub pop adc sahf cmc jge rorb pop in mov sbb hlt dec mov xor push in fdivrl sub xchg mov fcompl inc mov jns cmp lcall in push or stos dec jno adc xchg mov mov mov test dec out add (bad) inc aam adc mov add repnz repz jbe mov sbb push insl add je mov or or lret xchg ficompl out mov xor scas aaa mov or imul add mov pop mov adc pop sub aam test xchg nop push (bad) adc cs int popa cwtl adc in mov pop (bad) stos jnp mov adc push (bad) idiv das cmc out adc inc add mov aaa mov mov pop test mov gs into pop mov cmpl popa in and test inc jmp (bad) dec outsl ja xchg adc into pop sahf adc sub sub adc mov push stos jl (bad) mov std repz (bad) pop sbb icebp shrl jmp sbb jmp push adc jl icebp push cmc or pop adc sub outsb dec dec sub aad cvtdq2ps and add cmp mov adc xor jecxz (bad) je dec loopne mov jle add push stos pop movsl jns lret es (bad) in and lds mov push test add adc sbb cmp sub push fistpl lods popf decl xor mov mov pushf fnstenv fcoms push fistl out movsb sbb mov pmaddwd mov or mov sub fcoms popa jns dec leave imul dec iret dec pop stos pop push stos sub mov jo pusha pop insl mov cmpsb adc lods jmp push in mov mov (bad) lret push aas mov scas cmc leave call xor insl jno push aam ror movsl out sub or out xchg arpl mov mov inc and enter orl scas cmpsl shr jb movsl inc rolb ljmp (bad) std lods and insl xchg (bad) clc fldcw pop fsts jmp jle sbb cmp xchg int3 adc add clc xchg sub xchg push aaa jo movsl lds inc sbb mov pop xchg pop lahf jne insb ret xchg cmpsl inc negb mov or xlat mov mov bound dec jno sbb flds std nop es jecxz pop sarb sbb mov sti adc pop inc push mov std fnstcw loop inc stc mov in xlat cltd cmpsl test gs out mov jp push rcll aaa jnp jmp rorl imul addr16 testb dec adc sub dec dec call cmc lahf movsl or jae mov mov inc cli ja rorb dec stos test jmp lahf (bad) add or cmc das push xchg mov fldl push loop outsl add or jns dec rol fisttp stc scas cmp mov cmp hlt cmp test dec (bad) xchg push lods int mov clc mov fs inc insl (bad) int dec mov out pop adc lahf push (bad) mov dec sub out cmc jl jg (bad) xchg push test mov lods (bad) jecxz fdiv out adc je push (bad) push push dec sbb and (bad) push and sbb fidiv scas sti or sub mov sub out in mov and test out mov jo outsl loope (bad) cmc xchg dec xchg inc gs lock xor adc xchg fsqrt jbe fwait inc mov add push mov adc out or cmp mov xchg loop push mov push (bad) mov pop dec add addr16 jae jnp cmpsb fldt xchg out stos mov daa lds mov inc movsl xor sbb repnz jbe std movlps (bad) flds dec es repz or (bad) sub (bad) das test dec xchg dec or call cmc ficom out xchg add movsl lods pop std movl popf aad push pop sti (bad) leave adc mov mov cwtl xchg btc adc dec movsl loopne iret fcomps aad aad insb jnp test or ret int es jno cltd xchg int3 xchg xor or lret or cmp or repz add popf dec aam stc mov insb mov pop mov push (bad) mov mov stos test adc sbb repnz xor jecxz aas lret mov cmp js pusha cwtl jl or cmp adc dec imul adc or addr16 jmp dec add xchg cmc imul leave xor push mov sar ret jg and lock pop mov out push sub or inc insl inc pop in xor dec mov mov mov jmp mov (bad) int jecxz cmp xchg scas dec mov mov cmc dec push inc fimull sarl mov hlt (bad) lea cltd lock cmp rcl ljmp cmp xor in iret out (bad) ljmp test orb ret push dec bswap or mov cmp pop int push adcl mov (bad) mul or (bad) xor mov divl mov jne jnp xor fwait mov fsubl in das in (bad) (bad) push mov xchg insl sbb or (bad) testb dec xchg sbb lcall pop movsl push sbb cli jns jl push (bad) jecxz or (bad) scas jmp leave inc mov daa jl jo sbb xor or loop cmp push std arpl mov xchg add nop fildl aaa shrb jbe es imul clc mov and mov imul or xlat (bad) loopne std jns or pop pop mov call pop pop aam xor inc or lret or add test ja fcomp pop mov (bad) divb aad stos mov fs xchg or cmpsl sbb out jmp insl pusha mulb faddp sbb cmp aad cmp pop jnp push add or scas ss mov iret mov cmp ljmp ljmp aas and add sbbl add or inc aad fsubr mov hlt mul or test mov adc incl cmpb mov and bound arpl cwtl fwait mov mov jp (bad) cmp or or mov mov dec idivl push data16 sti sbb push in xor jp add lds mov push adc pop (bad) or dec mov cmpsb and bound cs int3 cmpsl mov pop hlt xor jecxz dec lds aas in jmp nop mov in jo sbb (bad) jne and mov jno and lods xchg lods mov add mov lahf and sti test stos dec mov mov xor (bad) and test mov cmp fcomi lahf gs push enter add jo sub pop push and or pop (bad) jno xchg cwtl mov nop les pop lret dec push shl rcll push or lds jmp nop sub cmp xor mov call mov jecxz mov sbb repz insl imul xlat ds dec sbb fsubrp es (bad) mov fldl mov pushf sub dec lret cwtl cmpsl or cmp push push xor mov popa ret cmc push add adc stos pop jae test iret mov lock pop add xchg nop adc or sub adc addb mov (bad) push fs lds jmp mov (bad) dec (bad) in cmp xchg cmc inc xor inc movsb fimull loop repnz cmp jns add cmc xchg sub mov jb gs and cmp mov movsb push out inc cmp mov or jl sub mov jg xchg jnp popf jb mov cmc mov jp jl or sbb cli aas call mov jbe xchg lcall and (bad) pop cmpl xor mov lock test shll xor (bad) aas (bad) dec adc mov je lret std dec repnz jbe (bad) cmpsl jbe loope lahf in call fsubr mov stc icebp push jmp test pop mov jne xor fucomip dec sub in pop leave or dec add adc leave jl jb xor pop pop imul std sub cmc cmp cli (bad) and jecxz push pop or dec imul fstpl or je fld mov test aaa mov pop es mov jbe,pn cli callw jmp push add lods aam sub stos popf push adc or movsl mov fdivl cmc sub sub fidiv out fldt mov sbb inc lods aas mov sbb inc rcll adc mov lret scas add or dec leave fdivrs or (bad) outsl ljmp stos cmpsl mov out cltd insl sub in add sti pop xor leave add inc mov out push rorl scas cmpsb fstpl sub (bad) dec jno scas jmp pop lea jmp loop cmpsl xchg inc or cld xchg add push inc mov sbb lock sbb mov xchg xlat js lret ja lods or test orl jae jge mov leave in mov stos mov addr16 mov or mov jae pop pop or adc je dec or mov or sub or insb enter pushf or cmpsl popf pop add repnz or pop test (bad) std jo rcr bound or andl cmc or lcall mov into sub in adc jle mov aam xchg jmp (bad) (bad) push ja mov sub fisttpl (bad) in andb hlt imul popa mov lret std arpl fdivrp cmp and xchg fnstcw push xchg faddl pop mov xor or fimul or push sub dec pop ss sbb loop jno ljmp in repz or dec push xchg or fldl xchg or aas test mov fs rorl add pop mov ficoml add or adc pop sbbb repnz (bad) cmp or xor or or addr16 xchg ljmp ffree sub inc das and push test push es or xor ds movl mov out mov stos fwait or push inc pop or mov aad sub pop xor xchg jp hlt sub push fcompl dec bound push lock push add fnstenv in sub dec or flds inc js scas lcall ds add add cs in test sbb adc je xorb leave pop xchg fs (bad) leave imul mov std xor (bad) dec lea roll mov in movsl or fsubs xor je mov stos push adc or pop icebp pop cmc loop inc fsubr cltd push repnz cmp fcoml or je jmp lods push mov adc std mov nop xchg ret aas call xor loopne fcom xchg mov or jle mov (bad) and sub insb xchg cmc fs xor fs sbb jno fwait cltd xor out jle jo sti lods (bad) push sbbl or outsb lahf loopne jmp sbb arpl xchg lods xlat mov fwait cmp ret add fs push push mov popa xorl cmp int3 js adc mov ror jmp mov (bad) cmp subl and cli adcl add fsub push mov pop inc sbb movsl push add push dec jns out add fidivl mov or pop es push or loopne mov mov mov sbb or lods or dec sub mov in adc (bad) notl movsl dec leave imul mov in and mov (bad) sub sub test adc arpl cmp jmp (bad) leave push lret xchg repz jnp mov div in adc sbb add or inc xchg test dec lret mov pop insb adc ja push jecxz fldl loopne jmp scas es and leave adc push or mov mov jl xchg push (bad) push insb mov jns jp fcoml xor mov nop (bad) imull scas push mov lods dec inc (bad) sbb sbb sbb sti rolb mov dec arpl aaa mov pop mov adc leave mov mov hlt aam jae dec je jb dec dec imul or cltd and mov xor xor mull ss imul dec and cld lcall ficompl lret leave xchg cmp mov lcall sahf test adc jns outsl cmc inc test clc test dec ret (bad) movsl xchg cli pop or add out insb lods mov sarb dec int3 or out adc mov std push pop testl cmp xor jb xchg mov addb or out dec cmp jg cmc or or and pop movsl shll jl pop dec add ljmp push jmp dec pop sahf push movsl mov or scas add or lret pushf popf es ret mov nop in ljmp mov imul or lock mov mov sbb lea jmp jns xchg scas adc or movsl push sub cltd bound or mov inc or dec jmp fsin jns xchg loope mov or lcall jmp scas push insl sbb out sbb fdivrl (bad) bound sub ljmp or xlat inc (bad) or mov bnd or popa rclb or mulb and negl or test or or dec pop ljmp aaa adc aaa es push dec subl ss stos ljmp fnop lret test add mov push loopne xchg xchg inc push ret (bad) mov add stos mov lahf mov into or sbb push or (bad) cmp adc divl pop mov jecxz pop sub out fistp or fstps (bad) pop jmp leave mov bound cmp jo call mov sbbl sahf inc mov out pop mov inc or ja dec decb in add mov mov push out pop push sbb mov mov adc pop add fimull jmp rolb adc cld hlt dec aam or mov iret stos mov ror cli loope mov inc icebp (bad) or inc xor call sbb imul shl mov xlat repnz mov ret or and or or (bad) (bad) int jbe inc xor lds aam inc imul inc ss dec lret mov or fwait pop sbb sub xor push dec cmp or pusha lock xchg xchg loope mul push fwait cli in jmp lahf pop cmp les (bad) mov mov mov movsb mov imul out mov int in mov (bad) push fimull adc scas jle dec xchg test rcr fidivrl mov in lea mov dec rorb pop or stos int push or inc sbb in mov jg or lret jno adc dec clc sbb cmp pop cmp dec cmp imulb ror movsl pop loopne mov imul icebp and jge out (bad) pop mov jle jne or sub push mul or push push pop mov not sbb imull cmp int add rcll jo or mov xor xor repnz sbb mov pusha test mov or sahf push int jmp popf test and mov jb mov imul add scas mov (bad) into (bad) ja and adc adc inc cltd repz (bad) xor test rorb push sahf push mov mov lock xor data16 sti pop stos mov jae pop ja adc mov lahf push cmpl mov xchg sbb int test idiv mov adc les jbe mov mov push jbe test std lea gs jns cmc add jbe sub add adc (bad) int3 jo adc xchg sbb cmpsb inc pop movsb lahf adc movl lcall in dec nop mov mov jmp add cmp dec fsubrl lods adc sbb data16 sbb fbstp bound cwtl leave jbe cld scas stc push push adc xchg push rclb adc jae cmpsb mov jg lods addr16 cmp aam cltd scas xchg or jne push sbb pop dec sbb stos idivb or lock jo cmp arpl jns xchg sub aam push pop dec aaa jecxz adcb hlt insl adc sbb jecxz ds dec cmp lret add aaa add cmp jbe jae mov mov enter scas jmp cmp fwait sbb lods imull push leave push pusha or cmp xor dec bound jb scas pusha js test mov and rclb int jne sbb pop std pusha insb movsl jns cmc scas xor add mov bnd in lock xor jb push mov lds movsl jge push dec insl push or int shlb xchg and xor roll inc sti fs js aam insl ficoml add cmp out lods fidivr xchg enter lret mov ror das cld (bad) outsb dec inc cld mov movsb rclb popf ret mov jmp mov stos rolb pop sub sub sub mov leave lock jp xor jne mov pop adc xchg dec mov lret (bad) and add cld cli das pop vpunpckldq dec out adc stos pop xchg clc andl pop adc popf pop sbb stc ds xor mov movsl ret inc scas pop mov pop sbb inc imul mov sarb and add fcmove je cmp cld sub lahf mov stos outsb jno sbb mov mov repnz out aas cmc add insb fdivrs std pop call stc inc in push mov int and jo and push pop or dec lret fldcw test stos ret fwait push jmp pop (bad) out addr16 add pop push cmc adc cmc dec fstps jae aam jbe outsb mov jmp dec fldl dec sti xor add push popl lret idivl cmp and daa lock mov icebp mov mov int3 rcrb jl mov mov fwait ss and stc out adc lock pop mov and mov xchg push shrb sub cmc dec sub or jmp int3 add push std mov aad inc ficompl dec or mov pop or bnd adcl (bad) enter lds popa add fst outsl and adc xchg imul in adc neg add in mov test jae ja sbb inc out mov xchg iret fs sbb (bad) xchg inc dec mov adc dec cmc mov ss and or daa (bad) fcoms out pop lea out adc or adc inc cli add dec dec gs inc (bad) or clc cmp add or icebp ret cwtl pop or mov pop dec movsl aas inc or bound addr16 adc inc mov dec xchg jne sahf cwtl xchg fstps mov scas add adc mov xor rorb leave adc jmp push fsts leave cltd cli xor inc add mov je mov sbb mov push pushf cltd test mov adc adc pop or std cmp arpl cmpsb adc push sahf loop aaa xchg test pop lods test push xchg ficomp push hlt imul mov xchg lock jnp mov insl repnz repz pop xor stc sbb cmp (bad) cli dec rcrb mov cmc aas dec mov leave jno in adc aaa fistpll jmp xor mov icebp cmc call cltd pop adc cmp lret push test push xchg outsl jg (bad) or sub sub cmpl (bad) or pop push pop in xchg sysexit or lds repz cmc or mov fcmove lods or xchg subl and inc repnz dec pop push fs jns xor mov int3 cmp add inc out movsb test je arpl (bad) popf push mov imul out and pop dec push jbe mov lock rorb lahf pop stc incl (bad) pop dec leave mov mov or lds jl (bad) mov lods or pop xchg mov sub mov and or icebp lods dec or inc (bad) xor sbb cmp aas ljmp fwait stos or mov or mov arpl das cmc in cs lds addr16 in mov jno cltd jmp mov sti or pop out or stc mov ss out popf cltd pop or cmp jb inc neg xor cmp mov data16 sti cmp adc lcall hlt (bad) popa lcall ljmp ja outsl or mov iret cwtl xchg in mov (bad) fcomi sub xor mov idivb xor mov mov cmpsl xor xorl mov sub jp add (bad) rolb int sbb jbe mov and xor or mov or mov or xchg pop clc or imul or out pop or push jmp pusha jns repnz or lds insb int3 add sbb mov negl hlt push loopne mov dec cmp push jmp or jle mov sbb pop cmp cwtl lock arpl or adc mov push push negb movsb dec stc fwait xchg or cmp imulb mov test leave or loopne ds fcompl or xor popf xchg scas jbe adc or adc bnd sub push loope push lcall stos pop lds aam fisttp dec ljmp hlt push xchg popa insb pop cld fnstcw (bad) repnz or add adc jnp dec and aam daa and sub push movsb enter lahf jo fbld rcl xchg shr ret cltd dec sub jmp adc negl adc mov lea data16 and pop xor adc iret adc repz in enter lock dec test jno jmp fisubrl sahf jp and lret lock (bad) (bad) outsl xchg mov or fimull or xchg lds repnz xchg dec xor dec dec adc jb mov or orl (bad) sbb shld popa sub in dec (bad) mov test or pop sbb sti pop adc lret insl adc push push xchg sbb rclb jb (bad) xlat lock jle mov dec inc fisubl mov push jp test testb push dec jns icebp adc testb adc dec mov cmp dec and dec pop mov push loop test xor lahf and mov or sbb add (bad) addr16 std jne pop dec mov xchg mul jae and nop (bad) sti cli inc adc dec jge incl mov mov outsl mov orl add enter fnop jecxz sbb adc xor cmp dec jg,pt or pop sti ljmp mov cmp cmp jp dec and add or ds insl sbb in mov dec sub or out add cmc das or cmp in nop jl leave sub icebp inc mov cld pop fsts imul adc outsl pop or pop (bad) push jle vpgatherqq mov mov mov and jp bound in push mov test fisttpl loope jne lret clc jnp cmp push popl or mov lret or cli jp and jg (bad) mov inc or cmc lock aas or dec negl or aam (bad) push or sub or cmp xchg shlb mov or test cld add xchg or int3 fwait call faddl aam outsb int adc aad mov dec cmpsl test bnd jmp pop jle and add add add adc cwtl cmp loop ss aam sahf jmp lcall into dec push faddl es mov addr16 pusha mov out movsl scas insl sbb mov (bad) dec sbb jb stos fbstp add dec sbb loopne icebp xchg pusha shr push scas jae mulb pop dec pop mov das out jmp xor and cmp inc jns mov mov add cld in cli arpl repnz jno test dec sbb push or adcl add shlb cmp daa inc pusha lret jecxz sub lret cmp pop ljmp rorb dec inc addr16 mov and inc notb mov out cltd icebp add pop adc jecxz sarb leave add jge and hlt mov mov jmp mull pop adc jle insl jle ja adc outsl imul lahf in or aad mov rolb std icebp roll push inc (bad) lods sub mov fisub (bad) xchg popa imul (bad) dec lock dec mov (bad) jl fsubl adc leave push mov cmp xlat or jbe cmp or jl aas xchg xchg sbb cld pop cmp movsb lcall (bad) addr16 mov cmp scas gs and cmp das mov stc fsubrl stos repz dec push cs xchg and inc addr16 popa fadd aas mov les mov inc aas dec std gs push lods mov stc (bad) out repnz ret int3 adc push sbb andl jo ds mov pop negl cmp push test push pushf loope cmp outsl xor mov push (bad) stos xor (bad) in mov adc ds add add je stc pop cwtl icebp je out or arpl aad add inc xchg movntq mov or cs sti sbb mov xchg jmp mov shrl jne xor mov push sahf sbb es sbb imul lods cmp sahf sub adc xchg xchg loopne int lret add push sbb mov dec adc cs jo jg stos je jnp mov mov les mov js cmc popf ds jle je pop mov ljmp mov or add cmc xchg icebp je scas pop (bad) adc out mov push mov inc mov icebp adc fwait je push mov sub push push jns std jb notl adc mov mov jae das mov xlat and xchg mov pop xor jno xor mov add (bad) and mov xchg out add cmp repz das xor mov push jno adc adc add in jb xchg imul mov xchg stos adc rcll pop adc mulb fnsave mov arpl sti pop and xchg ret mov cld stos pop sarl dec xor jge jmp cmp add adc adc pop mov shr cli ja scas roll mov mov mov aam in adc mov or out test or loope insl scas cld cmp rcrb pop movsl aad mov dec jbe cmp mov stc loopne pop scas xchg sub inc inc lock adc fmulp mov or or push jp mov ret sbb mov movsl jmp (bad) pop (bad) stc inc inc mov (bad) in icebp cmpsb sub test ja dec pop adc push jp out jl lock mov ss adc mov pusha std adc in or sub ds ret ret (bad) adc lahf ror jp insb stos cwtl push sbb insl mov jno (bad) bound jle cmc push mov cmpsb out pop push jae adc xor lahf scas mov cmpsl xchg push pop add test sbb aam stos mov out insl aas mov push ret fldenv addr16 or je (bad) or jns dec inc aam push cltd jae daa test jae sar in jle mov in cmp sar dec add ja add int divl mov hlt or imul fcomi out sbb aad je add std sbb (bad) jle dec inc ds sub call pusha movsb and pop lahf or scas or fild lods jbe sbb bound add inc adc xchg testb mov or dec xchg push or mov jmp mov or insb lcall xor nop notl data16 xchg shlb aam test (bad) push inc jne or mov sbb fnstcw imul icebp jecxz jno xchg or push mov or loop popa hlt cli add or pusha mov nop cmpl jp imul insl aaa negb mov sbb fmuls adc push mov mov mov ja in push ror xchg aas inc or inc movsb push faddl add lods in adc jge or mov (bad) mulb lock sub shrb lret das imul pop test xchg sbb cwtl stos cmc ljmp out adc (bad) leave scas loope xchg in mov aad fild lret or imul or or stos popf push out lcall (bad) leave in mov fdivrl (bad) mov loopne leave leave insb inc in xchg inc test scas (bad) xor or mov push sbb jns mov test ficomp lcall mov incl or dec or mov popa add sbb sub mov sbb sbb wbinvd lods mull and adc push iret lahf fdivr and or stos inc fwait or cmc sti mov jmp inc mov imul jns (bad) and popl movsb or movsb jg jbe push arpl inc pop jp frstor xor movsl pop or ror push cmpsb gs sbb data16 aaa or dec pop mov in inc nop jge popl inc sub lds mov hlt enter imul push cmp cld imul xchg mov (bad) jecxz mov jb or inc std in je scas ljmp or pop jmp jnp ja dec jns (bad) push or push mov mov sbb enter lret cli lcall (bad) int jge inc test mov push jg aad and fs or imull ficoml sar pusha hlt setns sbb add jae neg mov jle shll xor pop cmpsl aas pop std cld aam mov mov test or mov sub pushf insb or hlt mov loop aad sub xchg hlt addr16 and ffreep jg adc push xor inc push mov sbb fldt jl dec insl dec scas add (bad) adc js,pn xchg insl out add mov jns insl jbe xor inc jns (bad) les cmc dec mov jecxz pop icebp xor add jp xlat xor jo mov je lahf enter aam cmp data16 stos inc idivl outsl lret xchg in popf lret fnstsw or loope scas (bad) pop cmpsb adc decb jp fistl add dec push mov lret out outsb jb xchg sub fisttpl popf mov lock xchg adc dec jbe stos pop jb xchg ljmp fildll scas push aaa aam jnp mov in (bad) gs sbb mov fnstsw fisubl dec xchg pop aaa mov add lret jmp mov insb test pop scas lret mov cli setae add jp adc jecxz or inc jne dec or lock pop jbe push fisttp jo fisttpll (bad) mov insb sbb pop cmc popa (bad) scas push add wbinvd je mov int3 inc aam ror lods push aad ss popa rclb adc lock ja les and clc jl cmc dec sub or repz cmp dec imul cmp mov dec lret add push xor xchg and xchg lret js ja jp xchg jb mov adc inc mov test sub sub imul mov mov pop test or (bad) pop lds xchg idivb outsl mov sbb push xor lret xor push or sti (bad) or jge pop xchg int out mov xor divb sbb into jp test ljmp and jae movsl xor dec pop cmp xchg leave shl (bad) mov or arpl loop cltd outsb sub adc mov or popa add jle xchg mov test dec lahf lods add not jnp into pop sub xor out mov mov add xchg mov or fisub or stc xchg or fistp xchg leave dec fs cli cmp sub mov or fidivrl dec ret or out (bad) and bnd xor test jae or mov popa lea fs jo or fsubs into out sahf mov xor ret adc aad sub hlt sbb enter imul jbe ja mov or ja mov and test mov lods jge rorw inc movups ret mov scas add repnz mov mov and pop in dec test pusha jae or es mov ss orb jno test jae stos js mov jb fldl and ret and dec out andl jne mov imul adc aaa lret push dec out dec cmp sti push leave cltd mov inc repnz test inc stc movntq sbb insb jbe sbb stos repnz pop sbb pop or jae loop sti pop mov lock repz lods repnz pop (bad) imul cltd pop ja or dec testb in add and inc (bad) pop inc inc xor (bad) or rorb and scas adc cmp or push pop jl fisttpl jle das icebp mov adcl cmpsb or inc add or dec sub (bad) pop lret jbe pop fsubrl cmp fstp movsl sti pop push inc xor fildll scas and pop out test or adcl xor int fs xlat xorl (bad) test pop dec add add nop sbb lods (bad) stc stos pop sub mov das sub adc fisttpl sti sbb in rcl dec imull adc test popa push or inc fmull jnp or bound push mov dec insb push fildl (bad) or mov ja adc in out cwtl mov pop hlt xor sbb push or mov lcall int3 and pop test pop dec push repnz ss mov mov ljmp int (bad) dec mov xor and mov mov jmp jns outsl push loop jns inc push aad push out dec or mov sti mov wbinvd inc outsb xor imul sahf push inc mov fdivl dec pop or jns sub mov mov or sahf call (bad) pop add inc imull inc xor pop xor push iret or jecxz stos add inc int mov in or and and test cmc ja or mov mov push push rorl mov sbb jbe repnz pop aaa stos sub (bad) das gs imul fimul rolb inc pop lret mov jmp or dec jp xchg sub lret cwtl sbb jo rolb shrb idivl repz xchg xchg insb lret add sub cmp and pop adc (bad) pop test fidivr add push pusha inc mov in cmp sub inc pop inc or pop mov mov cs mov addb cwtl xchg sbb pop arpl dec xor inc sub lds subl cltd mov in xchg fs dec push mov insl mov xchg push push aad or sbb repnz dec push sti inc pop mov dec ja imul (bad) insl sub loop jg cmp repnz mov lock (bad) or jge and gs cmp cwtl je lret leave cs or cmp mov (bad) popf fwait jl or push cmpb cltd inc or test int3 xchg rorl dec lock inc add mov dec leave lds out xchg or loopne push mov add inc dec inc repnz mov push or sahf loop stos in pop xor out mov (bad) dec jg arpl cli dec nop and call cltd gs pop xor in aam push out mov les call xor jbe frstor pushf hlt inc xchg push or inc es add jmp andl xor adc sbb push (bad) dec push or pusha sbb xchg cmp and mov mov arpl sti push ljmp or mov jae mov xor xchg xor jmp sbb popa adcl mov xor (bad) ja cwtl dec xchg je push or rorl inc xor add subl divb dec xchg sub jno and test in xchg fwait mov scas daa sbb adc hlt test xor jmp mov add call mov je mov daa insl mov icebp repnz sub mov mov mov test into adc pop fldl push idiv cmp pop sub mov or pop pop mov mov add dec into das pop fisubrl (bad) sbb lcall adc lods imul lods and shrb leave orl rcrl or gs sahf fdivrs test ja pop dec stc sti ljmp nop ret mov (bad) mov outsl (bad) es mov push or pop inc fmul xor lds punpckhdq bound test aas xchg cli dec cli cwtl jno push je sub jle js jnp or mov jae push and cld dec popa call mov pop or outsb xchg iret sbb (bad) idivl scas xor aas pop add xchg mov xor dec (bad) mov pop dec decb cmpsb dec adc (bad) cmp xchg sahf outsl mov inc or andl mov inc rolb jb mov rclb and add cli outsl xor mov sbb lods adc mov mov cli outsb pop inc jl mov loope into pop test dec cmp aam mov sbb std hlt inc xchg aas sbb rcll mov jl hlt in outsb push pop pop push sub je shll pop fdivl stos add sbb dec mov (bad) shl jp add lods adc mov (bad) lea je mov add xchg adc (bad) int cmp lea das xchg lock and push std dec pop cmpsb mov sub mov insl xchg imul mov push mov das je adc sub or jecxz sar jl (bad) jne mov jns mov out (bad) testb jmp push xchg push test imul push aam cld adc adc repz inc (bad) scas dec sub xchg xchg or les (bad) jns fwait push sti dec imulb mov pop inc (bad) or pop jge ss inc or gs jne addr16 sbb sbb xchg (bad) mov cmp loopne out mov xor sbb pop loope (bad) push into rcl mov iret sbb out jle mov insb or xor aas mov mov or shrl enter pop xchg xchg push add mov testl inc add xor into jmp xchg inc mov dec and repnz or (bad) cmp cmp gs jne pop pop nop or lret inc inc scas inc lcall pop pushf jbe mov dec dec push ljmp sti lock jno stc and je out lcall sub push in lods mov out cltd pop or push loopne mov in inc test inc mov sbb adc mov ss clc repnz sub insb xchg push daa cmp ret mov (bad) jne sti xchg bound xchg loope fiadd or les mov shrb and dec addb pop lods enter push or adc mov pop cmp cmp xor sti test fidivl (bad) or in jbe dec add sub jmp mov pop fs roll hlt inc cmc lcall rcrl mov add adc into (bad) (bad) pop sarb sbbl jnp imul xor lock add scas (bad) dec xchg or or jae mov or lock aam add pop inc cmpsl fucom jecxz sub sub xchg fwait (bad) leave dec movsb or push xor out out or or push jge ror xor or (bad) sub cmp aam or cs push mov rcl insl ja hlt dec imul cwtl push ret fbld ror outsl pop or fsts ds pop hlt dec icebp adc je jle jae inc or out dec imul xchg jns sti mov dec inc dec or mov cltd jbe dec adc mov ficoml hlt add or (bad) jle repz loopne,pn sbb inc std push or xor mov lock dec test pop sbb or push add fadds jmp (bad) or mov decb cmp sub mov movsb xchg jge inc scas cmovg iret jo rcr or mov scas mov inc clc hlt insl imul xchg jg das stos push pop aam mov mov dec lcall loop jns push sub les (bad) (bad) imull ja push icebp add std or jmp jae rorb cltd inc push inc cmc jbe mov sbb imul mov aas cmp pop or add ds test fstpt into inc and insl ret gs pop adc mov sub imul stos popa mov xchg mov mov lret pop xchg jg pop or sbb out int3 or fstpt pop dec repnz sbb jnp xor mov test pusha mov inc jns mov jmp mov test fidivrl sub or cld dec or inc stos out mov dec mov imul push or dec out loop es and in ret jae jbe test imulb add sbb mov xor mov xor mov ja in dec out fisttpll mov faddl xchg push inc lods mov cmc xlat jne push (bad) jbe add leave and das movsb fs fcompl push add mov lcall outsb ja or jge xor pop mov movsb fsub pop dec ss out int3 (bad) in scas mov lods leave add mov stc add or imul les dec xlat in stos leave pop jns push pop dec pop fcoms (bad) cli rolb stos sub stos ljmp movsb xchg push test outsl inc adcl orb loopne adc dec mov mov push xchg push rorb jb adc or xchg xor aam cmp push xor mov mov xor dec xor roll gs dec push imul lock push je fwait loopne add out adc mov mov or pop mov leave and ret push in cmc fist scas lret xchg and mov ficompl hlt scas push inc adc push or pop jae mull push add ret xchg insl push stos cmp push loop and mov dec out inc jge into dec cmpsb fstpl push jnp cmp sub adc loope out push cs push pop negb and sub xor nop or movsb in je sahf or hlt or cwtl pop sti xchg xchg ss dec nop addr16 pop pop insl (bad) sub adc into or imul popa fadds or mov inc scas aas mov test imulb scas mov add pop movsb mov insb xchg rcrb scas push sahf mov in push push adc andl jl daa cli dec sbb or mov (bad) adc dec pushf stos notl mov xor xchg test mov adc mov lods mov iret cmpsb and push sbb repnz sbb jbe jle subl cmpsl fsubr iret mov adc out push dec mov add int3 xchg incb sub lock adc (bad) or jge push pop and fstps pop jmp test or mov test mov lods inc xor arpl (bad) add and rcrb pop sbb gs cmc lret xor sbb aaa out and loop dec dec cmp or ret pop lds subb jo out hlt cmp sbb pop sbb pop xchg or and xor cwtl fisttpll fsubr sub outsl pop mov sub xlat jge or and mull mov in jnp jmp es je aas scas xor inc adc add leave orl mov xor add decb out jae cmp inc fdivs mov insl jbe cltd outsl mov hlt lret int jnp decl dec or add jns push push lret or pushf pop int out aad (bad) xchg jmp notl mov rclb mov ljmp xchg mov movsl xchg jo or lods adc jb hlt or or clc sbb mov mov fisubr dec daa xchg inc mov xchg xchg insb pop iret pop or enter mov jnp adc xor shlb dec ds call or adc mov unpckhps hlt pop pop cwtl inc add (bad) sbb mov lea adc stos insb repz or inc (bad) in xor pop stc pop mov and sbb call cli int3 sbb lret addr16 dec ficom btr ja (bad) gs arpl sub je cmp cli es pop add movsl mov cwtl add inc jno or sbb mov cmp or cmpsb aaa inc bnd or shr cltd addr16 mov repz fiadd cmc movsb leave fisubr mov hlt inc orl stc call arpl clc xlat or shl add jb in dec out mov dec loop jp sub or sarl or pop movsb (bad) or push mov adc adc mov cwtl xchg inc lret rcll pop mov iret push addb cld sysenter loopne nop mov mov leave inc das (bad) lret jecxz mov rorl push pop movsl mov or mov hlt or xchg inc gs cmp push (bad) (bad) out fistpl fwait sub xor adc add pop leave pop pop push push mull mov inc dec pop xorl out xlat popa or sub aam hlt loopne nop popl xor sbb rcll rclb or mov mov call test pop add or cmpsl push icebp inc add cs inc jnp mov xor rcr cmp mov push leave xchg fwait stos imulb in jne (bad) adc ds mov inc mov stos imul jbe out xchg je push mov lock out lcall inc xchg leave sbb add mov mov mov lds stos pop arpl iret or dec leave lret pop fcmovnb jmp push mov movsl stos (bad) out xchg into js xchg sub test arpl jnp (bad) mov xchg pusha adc in nop sarl inc lods lock sbb (bad) stos js cmpsl (bad) mov fidivrl or adc add out sarb mov fcompl dec frndint jl mov test xor add icebp mov dec mov mov xchg xchg in icebp sbb mov ret sahf mov and outsb adc test xchg mov add xor xor jae call aam sub dec mov cs or outsb popa fsubr fildll ret iret (bad) out outsb dec arpl or nop lock sbb mov out cld adc xor fisttpll rcr popa (bad) pop pop mov inc pop xorb push add and (bad) dec dec das je mov adc push insl stos xor dec adc or cmpsb push pop sub mov mov pop fmull xchg cmc jecxz mov xchg push mov sub xor sbb push bound mov lret out imul jns fidivl mov ljmp dec nop dec ror ficomp fldcw pop dec stos sbb test lret mov push loop jb movsb dec shrb jne (bad) mul adc mov imull divl pop xor adc test and xchg pop data16 pop in nop loopne sub dec flds cmp inc inc ljmp adc jae and mov adc push shrb (bad) jg jle nop movsl push add fdiv jne (bad) jecxz sahf addps adc test fisubr pop sbb sarl movsl jmp pushl push int dec jno adc mov imul push add lea imul xchg push hlt adc adc lret std mov mov cmp mov mov dec adc mov add sub repz arpl rcll mov int3 or adc jns pop fmull in pop sub jl les sti mov mov popf pop cli or popa push push add mov sbb or shll negl pop hlt xor push jno or mov jb or fsubr mov adc sub cmp call hlt jae mov jne and sti cs test xchg xor xor clc fldt int sub int3 rorb and aad push cmp sub repnz incb xchg inc popf repnz lds adc scas mov fprem mov push push out mov pop fldt xlat in ds push hlt mov or fisubr jl inc xchg in push add pushf sub pushf sub test loop fildll call enter daa ljmp sub fwait dec das mov cs or add mov loop in pop mov repz or cmp and push sbb aaa mov jns xor pop mov das out push aaa mov jnp push lock enter lcall movsb or inc or mov dec xor clc mov jae add cmp xor mov add mov or dec jne (bad) jb cmc push sub pop mov leave in push dec std pusha insl ss fdivl leave fldcw stc mov or sti sub cmp cmp adc mov xor pop push mov mov repnz (bad) cltd jnp orl and ret (bad) int3 mov dec mov (bad) lret push aam or data16 add inc push dec and les mov and pop (bad) aad jns negb pop sbb add sub or xchg xchg sbb mov movsb sbb inc dec pop push nop pushl and mov mov mov mov mov cwtl cltd pop addl cmp adc push aas inc fdivrs int3 outsb pop or add mov push jl dec adc or test orl cwtl xchg loop fcmovu je divl lock sti and cmpsl xor sub stc or push stos or cmp jge into outsl hlt aaa mov ja jecxz xor aaa insl cs orl add jle leave adc xorb aaa (bad) cmc adcl jle out das lock push push insl xchg and add cmc fbld popa cmp cli aas scas lods popf or (bad) xlat push sub cmpsl mov loop ss ret pop pop add daa insl jns cmp mov xchg mov jnp xor adc gs jo scas cmp clc jge repz sbb loopne adc cmpsl jbe (bad) mov sahf (bad) jns loopne mov popf out repnz imul (bad) sub rclb mov movsl mov pop rcll test add es jmp or (bad) pusha mov cwtl mov cltd push scas repnz mov dec mov add xchg fwait insb push aaa cli in sub mov pushf mov sub aaa mov cmc adc cmp stos decl (bad) repz stos push out jno ffree jp imul adc adc fdivrs xchg jmp dec fs dec mov or lret add dec and dec iret in aaa es insb or insl xlat enter pop leave inc cmp sub rorl lret mov push add aas adc mov imul or push nop inc or out lcall mov leave popa adc xor cmp outsb (bad) lea dec dec cmpsl push inc or dec dec daa sbb mov jo ret sub adc adc subb fs popl or jl and mov push mov and xchg sbb (bad) mov iret in xchg pop popf sbb pop pusha hlt mov fstps jb mov daa or and push xchg divb xchg push or push orl ret loope sbb xor sbb pop or inc mov arpl mov mov xchg mov push std mov mov or xor nop push xor sub sbb xchg (bad) mov mov aam sub ss or sub mov data16 dec or pop ficomp add bndldx jns xor fstpl sub adc sbb (bad) out in decl fnsave or inc pop in inc cli add das mov lock mov adc sub lods enter je mov stos lcall sti or popw gs cmp in aam xchg mov mov (bad) ja dec xlat addl cmp or out test sbb push (bad) mov jno and pop sbb and jbe imull ret cli mov sub addr16 icebp rolb cli jae and roll push wbinvd lcall pop push push pop popaw pop lock lds or mov (bad) hlt test lcall add sub mov mov pop or mov fiadd icebp jnp or faddl pop dec fnop (bad) cli pop flds clc dec cmpsl clc loope sbb push outsl lock push sbb mov mov jnp repnz jns fnop hlt or mov cmpsl or pop cmc sub sbb jno ret test inc xor add xchg or xchg stc sbb xchg cmp jne in pop mov fwait mov ret or xchg ds jne aaa in mov adc xor adc dec (bad) notl add call mov mov int xor push xchg push or cmc mov push add movsl mov repnz aam mov sbb (bad) lock or jle pop daa addb add mov xchg pop cli pusha adc in stos or inc (bad) dec jmp fwait sti lcall rol xor roll dec jne sti or pop (bad) mov push add or hlt fcomps cmp sub cld or fnstcw (bad) or dec xchg dec or sbb dec inc or push sbb repnz jne inc mov push jmp into jge fwait addb jb icebp leave lret mov insb mov push cwtl popf xor outsl adc mov out fisttpll ret sub adc pop lahf in cmc into push mov inc add test mov addr16 or xor mov jmp mov or fwait add push cmpsl push mov bound into daa or pop inc adc (bad) je mov int3 not cmpl out dec test sub or in push leave stc and (bad) jmp or mov mov dec enter stos cli es test sub jl xchg pusha lods sub das xlat or aaa xor and fbstp pop imulb xor pop sbb or outsb pop ror adc or in out inc repnz push jnp mov in mov or sbb dec add cli mov loop outsl jne and inc rolb mov insl or adc sti and out ljmp jne fisttpl or mov add xorps in dec xchg cmp inc mov in pushf imul (bad) or rcr pushf mov aad sub movsb fbld add push daa popf clc or inc hlt cmpsb jge js sbb into ss cmp xchg sbb xchg or scas xchg push movsb or sbb hlt xchg (bad) loope add (bad) incl movsb dec xchg in scas rorl fs in cmp jmp hlt int3 jo test js jle test mov or and pop lods mov notb popa adc imul cmc lret inc out xor dec xor fdivrl xchg fild mov rsm inc push cmc fsub pop (bad) mov cltd mov scas and sbb push outsb sub or std stos fisubrl jnp dec hlt adc gs or xchg add sbb mov xor pop cmpsl xchg dec leave jnp jne in idiv mov ret dec mov outsb (bad) (bad) sbb xchg int mov mov pop mov lcall or nop sub clc lret jns loop pop xchg pop cmc (bad) aaa mov das loop popa fistpl and or (bad) lods push in or sub leave or sub jmp cmp add rolb push popa adc and (bad) cmp or iret xchg rolb out arpl mov cmpsb mov adc adc push divl xchg popf xchg push lret or test mov stos mov inc xor dec or xor (bad) mov and mov mov or sbb xchg shr loop xor int3 or cld cmc arpl call je push mov xchg mov or push sub popa fdivrl add cmc les loopne sub mov mov (bad) imull push or rorl push fdivl shrb dec bound dec in push inc or push jmp sub stos cli cltd jg pop inc ja leave inc rorb fnstcw jno repnz mov push dec jl imul stos fsub dec in cmpsl (bad) cmpsl jo addr16 stos aas adc pop cmpsb pop cmc rol in sbb or fimul xchg lods cmp or (bad) mov adc rcll test test jno fisttpl pop xchg sbb rorb lcall js mov inc pop jecxz bswap dec arpl or xor rcll imul repnz dec ficomp pop or addl lock jle or mov ds stos or mov mov enter icebp sbb sbb in aam add sbb negb mov mov sbb mov into loope je inc or paddd mov dec lods or popa lahf or addr16 pop xchg sub mov imul inc sub cmpsb fisttpll int3 cmp adc cltd adc cmp mulps repnz xchg and mov loope xchg out sub or insb out mov or sbb clc (bad) shld jp test or (bad) xchg js jbe jae sub ffree out lcall test aam aad popa repnz push mov sbb xchg or mov jge test mov or hlt inc push sub xor cmc movsb fwait test or cmc movsl push aad jbe insl sbb add and out lcall sbb and cmc mov sbb sbb ffreep jle dec in test jl add push (bad) nop sub jo jecxz dec add mov add popf jmp pop mov or in cmp dec push xor dec jb pushf or dec cld or pop mov sub mov xchg mov jnp cmpsl mov das mov sbb xor ja jo aam and push pop daa or mov sub das jl jmp imul cmp popf or insl dec cmpl mov test sbb add and or add or dec and fcoml or mov dec add adc pop enter add cwtl orl fcoml addb stc or xor mov jmp xchg mov inc jecxz adc inc xor fldenv shlb add xor out jecxz adc in cltd or in (bad) lds leave pop inc gs pop sbb dec lods pop jmp mov xchg lods mov mov icebp (bad) or std in lcall insl pop int3 mov xor inc xor mov xor orl dec or es xchg and outsb lock push sub mov inc add mov (bad) cmp sbb jae cld mov xor lret dec push lds adc (bad) cmc stos xchg mov je add out (bad) or pop pop push fstps stos dec fistpl mov xor sub sbb loopne and fmull xor or test movsl rorb mov dec or outsl xchg sti jae inc xchg loope mov in and or fmull xor or inc loopne addl das mov jns in lock out mov aas cmp ficom (bad) dec mov into mov addr16 or pop mov je jo push mov xor aas mov cmpsl cmovae addl mov loop sbb dec jnp xchg jns jb insl test mov das or jl mov mov sahf mov clc lods std insl into mov gs dec imulb in push mov mov loope adc cmpsl icebp cmc pop mov jne hlt (bad) xor imul stos jmp dec dec sbb sarb mov std (bad) jae sub icebp bound jl or dec xor notb pop scas push pop inc hlt stc cli xor fs lock das xorl gs xchg xchg leave (bad) aaa aam mov push push xor repz loop insb lods mov jns mov repz adc sbb out pop pusha jae loop lods rcrb adc xor sti es in aas aaa mov sti lods mov xchg mov adc adc sahf call movsl mov ret sbb adc bnd sbb adc pop adc mov dec (bad) add jecxz aam ja mov or jle fldl mov or (bad) out movb aas push add jnp mov ror fisubrl xorl adc stos cmp out pop pop add cwtl mov das shll das aam mov xchg sbb jmp sbb (bad) stos fnstenv insb jo xlat dec and js pop push xchg mov iret jo outsl dec dec lds dec (bad) cmp pop adc xchg cltd adc mov mov pop and lds pop popa dec idivb mov push adc jns fnstcw xlat cmc push push adc shrl in or repnz mov out jne es jle dec and lods fwait scas repz mov mov xchg mov or pop add mov inc icebp inc ljmp push mov add xchg xor jmp cltd dec mov jns sarb cmp or lret mov dec sub xor aad lret scas pop in pop popa dec cmp sbb repnz xor out orb loopne imul scas sbb adc sahf inc pcmpeqw test hlt adc mov xchg or (bad) xor adc (bad) jbe dec out pop xor aaa xor adc cmp or in xor dec fisttp adc test fldl2e movsb pop outsl pop jae fwait or sbb mov or add mov aam gs pop sbb cmp cmpsl inc lret xor std movl cmp lds push and sbb sbb or addr16 adc or mov jae loop xorl icebp and adc and push movsb or sub dec ljmp or fs or rolb scas (bad) xchg dec pushf stos mov mov (bad) out mov test and push std mov mov mov or lods imul (bad) adc ljmp into jne fs cltd stos or adc or jae add incl sub cmp test into cmovns fsubp xchg mov pop sbb push test out or add outsl cmc emms mov ljmp call fldenv in leave (bad) push loop adc push test insb add or mov adc pop test out jbe dec clc jae (bad) cmc push in push sbb hlt out fwait ds pusha mov push push inc das add or inc lock idivb inc jne inc or lea or rol xor in sub enter clc jl cmp fdivrs iret mov movsl sahf sti lea mov int3 es mov arpl cmp sarl scas pop add sbb sbb sub stos lcall push xchg leave mov (bad) cld test cli and jmp loope lock xchg adc or (bad) dec (bad) cmpsb add js imul ljmp xchg out xchg dec insb pop call test add push addr16 data16 sti inc daa out in cli (bad) xor cmp out (bad) mov or ror inc push in ljmp mov fistpl or sti mov scas jmp aas in adc lock aam pop cmc nop or (bad) jp or dec pop pop dec leave push mov cld jnp loopne int3 fidivrl mov roll sbb dec push (bad) or and mov sub hlt loopne dec cmp dec mull nop jno leave or cld stos popa mov movsl outsb (bad) mov rol xchg or xlat inc inc xor dec xor out int sub mov dec xchg mov mov jecxz out out loope cmp faddl or xchg cli ficompl jmp test mov xor push inc scas adc test cwtl xchg cld ds cwtl push cmp ljmp hlt xchg jb int3 pop fsubrl push jns repnz lds jmp mov and in (bad) outsb sti bound add aas mov mov mov adc lret xor lock mov mov mov jnp jno or ds cmpb push stos es stos sub sbb or xor daa pop out scas repz and dec dec js test movsb cld stos dec (bad) insl inc je dec push xor mov rol out adc hlt out cmpl or and mov mov jne add (bad) out adc fisubrl sbb dec mov mov mov sbb cmp mov sbb mov mov stc incb inc mov mov or pushf lahf or or mov out idiv inc mov jo das jno test xchg int3 lock loop subb jmp popa dec xor movsl cmpsb in mov div cmpsl fcompl test sub fs mov pop test shrl lds jl mov cwtl or jge loopne xor pushf or jbe scas adc inc (bad) fisttpll or data16 mov mov and or pop pop out or sub lret and cs cmc or sbb or fisttpl or jmp js test addr16 or mov mov xchg mov and mov xor out addr16 or mov imul int3 out push notb mov into mov dec out xor aad (bad) repnz mov loope ja (bad) mul jne into push loop add and mov xchg mov inc inc test mov dec inc mov fcmove xchg imul or sbb fcompl or jno call test neg jnp mov mov aam dec lods imul rcl inc push or push adc ret jnp cs imul lret loop and xor and rcrl cltd xchg inc sbb jae sub pop xor or psllw mov pop ja notb add push jg mov cmc or pcmpeqb sbb imul cmp push into cli lock insb pop sarl lret and jmp lea pop dec aaa mov adcl repnz cmp popf jnp or xor push mov hlt or addr16 sti or stc xor fistpll or adcb jp dec pop rol or frstor xchg add (bad) lock push lods (bad) or jno cmp dec lock or cwtl or fs ror fwait or add pop dec mov or inc mov ja mov lahf lret test fsubs jno sahf lds dec mov adc ret inc sub inc mov fs fmull jne or aaa popf mov or icebp loopne and cmp (bad) mov (bad) xchg out fsubl test xor mov or divps test fildl test cmp loopne and (bad) in (bad) jno xchg lods mov mov cmp sbb mov rcll bound inc and pop sahf adc test divb out push ret push inc clc sti jp loop test cmc adc mov (bad) and mov lods imull sub pop pop mov or xchg xor decb std jge jbe repz push sarl sbb int sub aam cmp xor pop or orl or aaa (bad) adc mov stos cltd jle mov or fdivrs or std (bad) ljmp jg dec wrmsr lock fwait jne or (bad) repnz imul sbb push outsl aam ret mov in stc ljmp push mov pop mov xlat lods mov lahf dec or push inc mov lock push ret mov dec jl lea and outsb sub test mov cltd aam aaa daa add mov lahf fbld sub or or pop mov sti popa xor sbb jl repnz add cltd xchg (bad) gs xchg insl (bad) fsubrs sarb sahf push icebp or or mov jne cli cmp lahf jl cmp push cmp out inc lret jmp in push xor inc daa mov jecxz (bad) out push lds cmp clc xchg icebp lods or inc (bad) in or pop push jmp in cwtl loop stc lcall fcompl or ret loop pushf mov xchg sub mov mov stos test or aad cli repnz and insb stos or loopne enter lahf jecxz mov mov repz sub add cmp arpl test sub inc iret aam stos add call and movsb sarb xchg mov push jmp daa nop daa fistpl sub lret das mov test ret xchg dec jb daa jne adc scas mov lret aam flds mov dec test (bad) mov mov sarb int3 or adc sbb sub and adc inc or lahf (bad) rcrb cmpsl jbe lods aam adc xchg ds or mov pop fild ret xchg das fstps sbb or addl unpcklps shr jmp adc mov dec data16 divl push sbb pop adc mov sub mov (bad) mov cmpsl pop or xor or sbb inc fmull (bad) jge xor enter or jmp dec cmp (bad) push je adc hlt mov ficomp jnp sti mov rol mov lcall xchg imull ret cs xchg (bad) add mov cltd jnp cli jecxz sub repnz pop push lret cltd leave mov sar lds push sbb scas push push repnz push add mov iret int pop shlb or dec hlt inc mov js mov xlat cmp test (bad) cli les push data16 or mov sbb rorl stos mov or test fwait in gs mov sub dec sti lsl or mov test enter sub xchg jecxz xor cmp adc imul push out dec pop or jne mov sbb icebp sub cmc sbb and cmpsb pusha loopne and test push ficompl cmp and in jae dec sbb fsts pop decl add sbb cmp adc mov jecxz (bad) stos roll bnd imul xor mov adc sub jb cmpsb inc xor fstps punpckhbw fdivr mov imul psrad and shrb dec (bad) stos sbb xchg stos mov and lock test xchg or adc jmp test enter in and jo lahf test mov rcrb cmp inc mov jns jnp fnstsw movsb hlt or imul mov in and adc leave (bad) repnz jbe or gs mov stos inc jle inc addr16 or push sub inc fisttp or adc test std mov movsb lahf jns dec mov imul add jecxz mov leave repnz adc (bad) cmc enter add pop shr pop add xchg icebp pop mov int3 dec cmp pop test mov mov adcl (bad) pop lock sbb imul lret std scas mov sub jae mov cli jno and jne adc addr16 insb sbb repz sbb les scas dec sbb dec aad aas test (bad) imull mov adc jnp sti inc lds jle lea cli cmc stos pop js adc mov jl cmp mov sub jle add cmc test adc xchg movzbl xor dec adc adc jle out (bad) xchg ljmp ret ficompl mov dec call aas fwait dec (bad) js xor cmp inc in xchg movsl push or call cmc mov mov inc sbb sub dec sbb jp call push pop pushf mov mov inc or lret mov into in je fs repz lret mov xchg (bad) rcl or ficoml stos (bad) cmpsl and imul enter sbb lret push jg daa cld mov hlt outsl cmc xchg add sub roll stos jo mov sbb insl sub scas jne or dec adc jmp pop push push in mul or int3 sbb push add lret fisttpll and std inc jne sbb mov sub or loop pusha or (bad) fmull inc aam and ljmp test (bad) mov repnz xchg cmp roll adcl mov push sbb mul lods pop push repnz jns xchg int or dec jb adc or adc mov popa push shrb loop call mov fmul jae mov xchg or lea sub fistpl mull test jle hlt sbb jnp cld lods and mov out imul mov xor push sbb int3 xor add ret inc nop lret (bad) xchg out (bad) add or add sub mov xor jmp adc in in fisttpl sub sub xchg cmc inc imulb in lea mov mov or data16 mov aas inc adc std clc bnd rcrb sub push pop xor jns push cmp popa je (bad) or cs mov inc or int3 mov enter sbb add xchg pop sub dec jp gs or pushf mov cwtl vmovaps clc mov adc and sti inc adc mov or lret sub push out loop ds idivb cltd sbb adc (bad) lds mulb inc aas fbld sbb dec xchg leave mov sub mov jne (bad) adc insb popa cs or in mov outsl xor addl sub mov (bad) aas sbb adc (bad) arpl pop test pop in pusha xchg or aam jle adc pop out or cmp loopne or fstpt fildl jmp daa negl lret loopne mov mov jp,pt stc call les cs shlb push sub sahf lret fcoms dec xor leave pop inc or out mov aad int3 out subb or push xchg popf rcrl jno idivb cld jmp es dec aad pop xor jmp (bad) lods data16 mov inc ss add or les stc fildl mov or (bad) repz cli rorl sub push ret adc add lock mov mov ret pop lret mov lods leave cmp into mov (bad) push inc pusha or add xor push pop sbb cmp in popl mov push test sahf jmp hlt mov (bad) fild and es negl in mov in lods mov loopne jmp leave jne,pt cltd xchg repnz lcall movsl fdivr icebp sub xor mov jae rorb popa xor ficomp and pop or sub decl test jae or fucomi cltd xchg or pusha fwait pop mov sub into lea lds dec pop or je ss jo cs mov ret aaa movsb leave das push popf or popa pop fdivs xchg jge and or outsb xchg add ficompl fisubl add or and adc out pop fsubrs rcll divb mov xlat in pop movsl dec jecxz and or ljmp mov or dec push pop cmpsl cmp cmpl push jns lods or lods or mov addr16 fnstenv pop into adc xchg or push into pslld out xor repnz fucomi jbe out pusha das push inc push in jbe jecxz pop sub clc cmp xor (bad) adc pop in negb dec or addr16 in mov jo testl mov and pop mov dec add arpl adc cmc gs cmp sbb out lcall or cs or xor (bad) mulb inc leave scas fcmovnu ljmp daa pop xchg fcmovne fcos loop mull pop dec mov movsb or inc pop push adc mov xchg or mov mov lret fxch cltd ja or sub inc out (bad) ljmp jns imul rcrb jno leave les push sub and sbb sbb jo or fisttp mov icebp mov cwtl cltd xchg lea mov cmpsb out dec xchg imul pop into (bad) mov loope test mov inc dec push mov imul fdiv gs pusha push scas test sti mov outsl or and aad mov mov ja inc int lret mov add addl mov adc sub imul or (bad) push (bad) pop mov xor insl inc out push dec stc cltd or or jecxz inc adc jle or leave xchg icebp jl cli fdivp outsb cltd xchg dec push stc sub stos sbb sub lea xchg repz fcomp mov inc cli (bad) jae (bad) imulb sbb xor xchg les mov and sub jo mov lret subb and cmp loope mov call imul test mov or inc mov divb mov in jg pop mov push sbb out sbb pop loop xchg (bad) out add enter jns ja out push xor jecxz hlt xchg mov xor insl xchg jp loop (bad) lcall stos push aas add pushf ljmp mov arpl popf test cmpsb or inc aam mov adc mov loop inc in insl hlt push jmp xor jle outsb cmp or dec scas mov shr add jne jno hlt jge aaa stos test fwait push daa orl cmpb es mov add and out in add dec jno adc dec insb mov adc jns and push or icebp push adc xlat push jecxz jecxz mov push rcr adc jg inc (bad) imulb xor stos xchg push jp mov xchg insl add cs jb sarl movzwl push stos and loop out adc adc add (bad) xchg or stos mov leave adc or cld unpcklps adc lret or mov or pop insb mov fs push shrb jns push dec mov sbb jg sahf push arpl pop inc inc jl add pop (bad) cli andb add hlt xor lahf sbb enter dec arpl or mov adc and jbe xchg xor xchg into or shll inc stc add popf ds mov sbb jb adc imull lds popf lods out mov shll lret aad and cmc jbe (bad) mov xchg dec clc push push sub popf jo jl pop arpl xchg sbb sbb mov adc push scas jns,pn rolb add pusha cmp sub ror dec hlt and sbb shll insb sti popf adc xchg push dec jl mov sar or lods stos adc mov push xchg jecxz (bad) jb mov sbb adc push popf sti xchg mov jmp dec pop mov push (bad) notl stos xchg cmpsb sarl std cmp pop pop nop adc lods sub jb jbe mov push add sbb mov sub daa inc fnstcw jle std cmp jge fldenv rorl (bad) testl (bad) flds cwtl stos dec decb and test push add mov int3 adc movsb pop xor dec fistpl std jae push inc xor decb lcall inc pop jp cmpsl adc in sub or cmp mov cli inc mov xchg add mov (bad) aam stos or push dec pop sub jl aad fdivs xchg test jbe je jle inc mov f2xm1 addr16 lahf xchg xor cli mov add and pop negb mov cmpsl jns pop addr16 lahf and xlat loop mov push popf test jl test adcb rcrl xor push push scas in ss or sahf cmpsb aaa aas into jge stos pop or mov sbb into xor or lahf adc je fiadd mov clc testl andb insl popa cmp pop jl incb mov pop je adc or mov int or aas test cmpsl xchg orb xchg cltd clc fcompl into les in pop sbb or cltd cwtl dec mov lret or fidivr lds (bad) (bad) out in mov add es push inc data16 xorl ja mov js push push sbb hlt dec xchg lcall data16 addr16 sar mov xchg sbb aam aaa and rol mov or or lods daa ret xchg mov scas in cmp or add or jne loopne lret adc stos sub insl fxch (bad) pusha sbb lds dec or clc movsl jecxz xchg sbb (bad) lock jmp or cwtl inc or loopne orl mov mov mov fcomps repnz fcompl push loop (bad) int3 push dec jb push mov xor jl fdivrl or mov ret jp pop dec test faddl rolb dec rorb mov jo mov dec aaa test jbe rorb je mov add das sub inc and iret xlat jns leave sub pop jmp stos les shrl test lcall push movsl subl mov jecxz dec or lea and or pop mov xchg stos cltd xchg jg (bad) out (bad) or (bad) int adc movsb mov pop imul (bad) mov mov push or outsb movsl dec or add (bad) hlt push pop js insb dec cmp test adc or stos mulb sbb (bad) cmp (bad) fcoms addr16 mov repnz jmp mov in lret test xchg addl xchg enter mov fistp xlat lods and or mov xor loope lds test xor xchg or xor outsb ret sub ja (bad) lods mov insb lods xor push mov bound test repnz dec (bad) jne int3 sahf out inc push xor or mov fsts mov push adc inc sti test dec mov lret jae xchg pop mov jo cwtl jle fisttpll mov jns (bad) xlat std lea hlt (bad) sbb jbe jnp mov add add pop ljmp call nop repnz fs cwtl sbb xchg add divb sub pop add mov sub dec divb xor stos inc cli add scas pop mov xorl inc hlt mov dec push dec xor lahf or insl sub (bad) nop and add sbb adc loopne addr16 aaa xchg mov jmp pop hlt inc pop hlt movsb add dec fcompl mov jae popl fimull or aam or dec hlt push or push adc mov aam imul or pop sub inc mov (bad) (bad) mov mov movsb es fisttpl push cwtl (bad) in insb or adc xchg mov test mov leave mov sti jb aas sub or push in pop sbb je iret mov sub es mov or fdivrl or adc add or cmp inc repnz fimul mov add inc adc mov fs in cs adc icebp jb shll adc repnz cmp (bad) or or fnsave cld inc mov hlt pop cmp lcall adc jecxz loope jmp ljmp test loope mov jns or jle cmp mov arpl test inc push inc (bad) aad cmc and mov je mov jl push sbb mov xchg out sti out ret xchg rorl jbe roll jbe fnstenv jns test push sahf adc addr16 cmpsb insl and jno bound mov (bad) stos sbb mov jo iret jbe inc or insl cmpsb popa cmc cld push pusha aas inc push lds mov out lods push test js jle xlat or and stos mov adc or jnp out dec jnp mov push mov lret in insb or movsl adc fwait sar jle mov mov rcl sbb test sti jmpw sarb lods pop int3 jo leave sar pop or (bad) int gs loop in repnz cs out pop fisttp and aas inc mov lea push jmp scas fiaddl cmc in lret popf xor cmovge push mov aas movsb xchg mov inc popl xchg hlt sarl push ja jp cmp pop jbe pop jno or aad sub and cli jbe inc xor xchg push or loope pop pushf pop cmp movb mov mov mulb xchg cld xor xorl mov jl or dec (bad) out xor dec mov orl or bound cmp push pop xor cld add pop inc jecxz stc call inc das xchg sbb aaa mov inc pushf daa imul sbb mov pop outsl push xor mov jecxz push mov loope jbe data16 or pop inc pop cmp repnz lea insl stos js lock xor ret lret mov fprem sti fcoml and sbb dec xchg insb xchg int inc or push mov imul loopne or movb jb outsl xor mov fwait lock sbb addr16 insl in cmp test in and jnp ljmp jle shlb sub inc inc (bad) mov jmp mov sahf cmp lahf pop xchg add in jbe push sbb or xor in (bad) mov add or leave aad mov jecxz inc cmc scas xlat or mov (bad) repz ret jle adc jne loope dec cmp inc pop or and loope adc inc fisttp mov xor adc pop loop inc add xlat and push jne (bad) or stos cmp (bad) jecxz lret mov sub mov jp leave mov scas mov fmul cmp movsl cltd shlb or repnz sub es insb jge out (bad) jae mov ljmp add stos enter or jecxz orb ret scas xchg pop fdivr inc mov movsl nop mov fmul int3 mov mov or (bad) cs push jmp pop sub imul mov int3 and jbe sti mov fs or xchg push popf push sub xchg sahf paddusw pop aaa cmc sbb pop aaa cmpsl call sbb xor fnstsw psrld jecxz gs daa mov push sbb int push adc enter jo rorl and mov jnp int es dec or sbb bnd cltd inc push sti sub repnz add mov stos push or out fstps and inc add pushf idiv rcrl or ret adc lret ss int jb mov aas fs xor divl subl and jne in inc (bad) in mov ljmp jl jo jle pop inc fdivrs ss or in jae test pop negb add cmp popa lret add adc int3 call cli sbb cld movsb repnz lcall aas shrb dec ficompl jp decb lods mull or cltd data16 dec stc dec or pop rcrl and divb push out lret inc inc xor bnd and mov cmc sbb xchg pop mov sub or mov cmp (bad) sbb gs xor push dec ljmp jp imul dec dec dec out and mov or clc cmp sbb cmpsb cmp or out lret mov mov or adc sub (bad) ja (bad) xor adc and fdivs mov mov ret or adc or mov fucomi lret dec adc clc jmp enter pop notb dec inc mov jp sub sbbb out jmp imul xchg sbb xchg cmpsl cld cmp fsubrl dec mov mov or loop icebp das mov adc cmp mov std (bad) test cmpsb shlb mov in mov or sub je nop jmp xor mov pop sbb xor test dec dec js push cwtl mov out ret or mov jle cmp add divb (bad) jns mov sti mov cmpsl mov faddl mov (bad) cmp mov fcmovnb jle in cwtl mov and and inc sub or in mov dec mov scas lock shr pop push stos and dec add test jb (bad) ficom mov push push sbb mov rorb ja jne ror aam call not mov jns icebp cmp add or and push or or jmp into add or sub aaa or mov xchg mov push and push cmp stc mov inc and mov out outsl jmp dec bound and or call mov mov jno in shll (bad) pop cli stos fimull push cwtl or leave xchg add popf insl ficoml decl int jle jp subl adc fwait dec in not cmpsb jae sbb cmp sbb mov xchg jle in jns add fstps stos sbb repnz adc aad xchg mov add test pop mov in mov jmp jge addr16 aam mov adc aam out push mov (bad) icebp stos sbb loop jae pop fldenv adc push cmp or cmp ljmp js add or fmul xor sbb dec mov cmp fcompl in outsl mov lods xchg sbb pop push pop adc or shll out sub or ljmp js ja sub add mov pop sbb jecxz push or or lahf out inc fs inc aaa insl test mov jecxz xor mov sti (bad) cwtl fadd or inc xchg or out or insl mull repnz insb test xchg inc or mov or (bad) pop nop jmp xor jne sub mov (bad) dec sub inc inc xor or and push out adc or push push loop jns (bad) xor lods or adc jb cmovbe pop inc sbb dec fnstsw mov sbb les pop sub jl mov out sub push jl fxam xor add out adc aad mov jns in lret repnz loopne ss adc pop fsub xchg adc pmuludq pop or mov push jl out pop dec push add fstl dec inc int3 jnp scas es test ficom pop idiv into adc fisub bound stc insl hlt pop bnd xor pop lock stos jns jp test mov (bad) mov jle (bad) lret add icebp test mov sbb xor hlt pusha pop inc pop push or xor cli mov rorb xchg or push xchg loope arpl push jae and sti xor pop int imull (bad) adc cmp mov sub movsb xor lods (bad) mov (bad) imul xor sub ljmp inc in inc pop or imul das out stos rorb scas ss dec dec cmpsl loopne dec or xchg xchg xchg fimull pushf xor push mov xchg cmc cmp test lods dec xchg shrb mov pop (bad) adc adc pop addl sub in mov pop idivl movsl jnp lock mov shl imul mov addr16 movsb lock adc dec (bad) or fwait sub mov cmp or call xchg in mov inc in cmp adc and push movsb mov dec or xchg js sbb cmp xor sub xor loope rep in sbb loopne or lret ljmp bound adc cmpb pushf jmp ljmp insb pop xlat int test scas dec (bad) jmp pop orb mov cmp pop push inc xor cmp mov cld ljmp insl iret inc in loopne (bad) (bad) mov pop pop pop lods ljmp jmp mov (bad) repnz clc or and mov es ljmp pop xlat cli daa jge faddl lock pop sub adc dec fidivl scas or in shrl jns sub nop (bad) jae fwait stc addl sbb jl push pop or add and jmp xor lret mov cmp mov clc sarl xchg mov jle aad bound repz xor testb outsl negl adcl pop add addr16 jmp sbb bound inc or mov incb inc dec sbbb push inc jl dec div (bad) fdivrs mov out push or inc sub pop jns lea pop xor loopne enter sahf scas int stos fnsave or mov push (bad) jns xchg inc mov mov mov pop call cmpsb xchg out adc nop andl or test cli scas add lahf jge mov push or pop add mov xchg pop push aam subb gs daa pop xchg ja mov (bad) je test (bad) mov push loope inc lods xorl push xchg insl mov sbb mov dec fwait mov mov dec lea jnp sub leave vhsubpd leave xchg xchg fildll out sbb xor lret aam sbb dec or mov aas jbe jns ja lret cmpl pop adc jo decl xor imul push sbb fidiv jmp dec cmpsl sbb ret call bound jmp xor es or fs push jo dec jmp aam mov cmp stc jg xlat pushf in lea ja xor jmp jmp jp push movsb inc push push insb flds rdmsr dec (bad) or add stc push addr16 pop pop adc dec dec divb push lahf popf or arpl add mov outsb or pop and dec loopne addr16 jno popa cmp int3 fsubrs dec subl aas jmp cmp push stos push adc jecxz xor xchg dec mov lret pop call test jecxz and sub cmc add cmc js sahf sbb std xchg divl loopne imul (bad) call test or es dec add inc or pop jle mov daa setae imul add movsb jnp xchg int3 (bad) ret cmp dec dec pop scas sti rcl mov leave xchg dec mov adc loopne or push lods xchg jno loope or int3 fs int3 adc and inc or lcall lret or mov add xor cli xchg and cmc mov das test imul ja lcall jnp popw (bad) push adcl adc fmull or mov mov pushf inc jno jns sub lods hlt adc scas push jmp pop mov or rcll adc or pop pop and push das pop pop push or ret xchg mov sub xlat fcoml jno jae mov out or fldcw out aam rolb sbb push adc push jmp push test imul bound (bad) dec mov mov add imul jg sub scas or pushf jge or aad mov and lods fdivl push pop dec shrb in inc fidivr mov xchg test cli xor xchg popa push dec sub add imul outsb jbe or cmp or sbb mov jne test or out lock rcr jbe mov hlt sub jnp mov dec js lock pop xchg jns loopne mov cli lock outsl aam insb or in mov xchg mov or or xorl test mov push mov pop rorl jg rorb loopne sti mov push mov sbb icebp in imul or outsl or jbe jmp sub pop xchg lock cmpsb ret mov movsl pop inc xor imul fdivl stos pop test inc repz in push sbb mov in jg rorb call or jmp out scas pop daa in jg aam mov sbb or and jno dec pushf cmpsb mov dec push ret cmpsb pop sbb repnz leave imul pop or jae (bad) push test out test or sbb fcoms or addr16 bound loope jecxz jp imul fdiv mov stos call cltd mov aas or xor mov xor (bad) in push int mov dec cmp pop cmp lahf inc in adc add pop sbb fcmove cwtl mov stc or pop cs jb sbb std adc xchg lret movsb dec (bad) int3 pop lock pop adc das sub add jmp dec jl mov pop es add enter outsb dec pop and je test adc mov std repnz sbb cmp inc push mov inc out lds jne daa jno dec lods aas cli popa aaa scas notb test push iret bound cli mull insl dec in test mov jge,pn jmp rcrl or in pushf mov cmp lcall pop je pop inc stos loopne pop sub loope pop xchg pop call mulb lahf sbb dec daa bound sbb mov movsl adc div out jo mov jne xchg mov sbb aas pop test imul popf fnstcw int3 jno lock dec cwtl inc ret fstpl inc icebp pop push (bad) std adc jne and bound clc je inc jge inc or push lock xchg adc add xor xor mov jo loopne sbb rol sub ds imul (bad) mov add lcall jp push and ds iret inc jg mov rorb loope test out jge aam stos xor xchg push (bad) mov xchg in or add iret negb mov ja sub cwtl mov mov ss lcall fisubl cmp inc adc sub sbb xor mov sub leave mov or mov arpl and leave push leave test or mov aas and inc imul std test xor cli cmp sbb stc lret sbb (bad) leave mov ljmp jne xchg imul cmp adc xlat es out sbb or adc pop (bad) fisub xor xlat dec cmp jae or imul or mov sti ljmp je fstl dec pop xor mov jmp fstl or outsl pop mov and scas movsb mov mov or sahf in jmp imulb mov mov dec leave loopne mov in mov xchg jb jp bound das or xor je test push mov cli rol mov sbbl cltd idiv call xchg rol xchg mov or (bad) or in cltd lret iret jge adc enter mov fnop add cmp xchg pop mov adc out lds add xor stos push mov sbb idivl dec (bad) loopne dec push aad in lods (bad) adc dec pop fisubrl adc mov adc xor mov mov imul xor fldenv sahf imul pop inc push aas movsb and stos dec shrb repnz pop mov or stc insl iret cmc cli data16 sbb jecxz test incb mov (bad) jl or xchg mov fnsave adc jle mov in and sub and scas mov lret fmull pop cli fsubrl out cmc repz adc sahf lcall jmp mov sbb dec popa jbe shll xor hlt jecxz pushl inc jnp xlat adc mov mov add jbe in dec push jmp add std movsb cmpsl push push loop xor pop fsubr test repnz push pop loop add dec (bad) mov jo mov out hlt icebp cmp popa push sbb aam es arpl das fcomip sub bound ljmp fistp aam in pop inc mov xor and mov sub mov lods icebp pop dec xchg repz ret int3 or push mov mov std cli cmp lods aas les ds in loop test repnz aam or mov lahf nop fs pop and repnz sbb xor xor xlat push leave xorb std push cmpsl jle add cwtl ljmp lea mov outsl (bad) xor xor lcall repz (bad) and scas (bad) or addr16 pop inc mov push mov push mov repz scas fs jae xor or (bad) xchg lahf out pop cmp call or xchg mov mov std sbb jmp fcomps add fcom es mov dec dec pop or not sub outsl cli mov pop dec js insl sbb push scas push cltd lahf repz or mov push fwait or inc out inc lock lods mov xor out test sub push jne mov mov mov sbb jbe aam pop and jo inc push sti mov test fnsave pushf and hlt jno dec daa push mov imul std or lret adc jecxz ds test negl data16 aas or (bad) popf scas add or jl loop pusha std lret xchg pop ljmp push cmp in inc cmp push sub mov dec movsl (bad) jecxz cmpsl aaa sbb jmp push add xchg mov roll push (bad) cmp divl repnz test shl mov add jb push and pop in pop fdivrl and add adc les scas aad add jbe and into aas in or test sbb cmpsb inc mov push add iret jp or jbe arpl pand xor dec lret pusha stc push in ja or enter cmpsl cmpsl cli fs outsb or ret push or mov jge bound mov and jns mov out xor or pop xchg bound int fisttp mov mov iret in or mov repz ss cmc fimul push mov outsl xchg lea ficompl jle enter adc cwtl jle push sbb mov cmp int mov pop mov div mov or xor add mov leave sub iret add mov mov dec por in mov push pop popa mov mov (bad) mov bound fdivrl xchg imul jge pop mov in pop adc rorb pop dec outsl xchg xchg adc mov fldl pop cmp idiv stc add imul mov lret inc cmpsl xchg add push sub sub push cli sub out jbe jb leave xchg mov inc out dec leave wbinvd sbb cmp or sahf loop (bad) mov push in sub fwait mov push xchg add notl pushf xlat insb mov or inc loope mov or in or js sub nop add and (bad) dec in xlat adc popf inc stos inc and arpl mov mov pop jnp dec cli sbb lret sub repnz loopne fdivrl data16 push fcmovbe jae out cmp mov int3 inc fwait mov mov out jno in in cmc rcl in or push test or lahf cmp jecxz pop lret xchg xchg or sub sti fnstcw mov imul adc mov jns mov pop cmovnp scas lods aaa xlat (bad) pop fstpt cli dec mov or sub das dec stos xor cmpsb pop lds fwait bound inc aas int or sbb aaa or out loope bound inc nop mov cmp jns push mov repnz test movsl push rcl mov xor adc sarl (bad) into or popf inc jle in aam out dec xchg xor arpl mov or or (bad) pop insl aad and cmp lcall imul incb outsb mov xchg xorb add or jne stos mov push ss pop cwtl add test sti jecxz xor pop es popf leave xchg lds fcomps pop inc test in xchg xchg and or jmp jp lea inc mov push push lock pop cmpsl fs ds or adc sub sub cmc out pop roll mov mov leave rolb repnz shl mov jmp in ret push adc or sbb sarl jbe (bad) sbb cmp jecxz jmp pop and lcall int or insb cmp pop xchg xchg hlt mov jns add mov mov dec lds pop cld test xlat fdecstp test mov jne int3 out popa (bad) fs jmp mov test add add or fsubrl add faddl adc or dec xchg inc dec fsts inc dec stc sbb jbe or imul mov jecxz repnz cmp hlt inc bound int gs mov jmp adc push xchg int3 mov jecxz adc in cmpb ret sub int3 aas sti movsb sbb repz and imul pop fnop data16 out or cltd mov or jbe push push sbb jb imul imul popa pusha (bad) jae mov pop dec enter inc or push push push inc leave adc jp cli rol (bad) nop or scas lods sub or inc pushf dec pop adc mov or push jb or or and inc std (bad) jo xor bound into fs daa es lods mov pop rcll ss or sub jle mov xchg cli pop xor or pushf repz movsb add mov fisttpl xchg sbb add adc std shrb repz mov dec sbb or (bad) fildl gs ret sub mov and addl adc or mov fsubs mov lock sub dec repz lds out or mov mov adc push or or dec lret jne iret and daa rol jl or rcrl xchg cmpsb negl daa test push xor test out cmpsb subb add mov mov mov dec lock jle out push xor popa mov inc pop popa lahf mov pop pushf dec ret push or jecxz fldenv in fcmove pusha mov popf mov je das out or or daa or and mov hlt push (bad) sbb aam inc sbb mov sub sbb jns hlt xor lods mov pop push pop dec (bad) jne jne mov stc fs test popl adc sar push push jle pop fcoml sti pop test sahf arpl and adc mov aam sbb inc adc sub rcr cmp jb js insb inc (bad) lock push lods stc inc sar aam dec (bad) cmc loop add and mov les dec push and mov imul cmp sub dec dec clc addr16 sbb mov (bad) es pop or mov xchg adc ret pop cmp fisttpl hlt jbe fnstenvs sub scas mov xchg and adc and ret cmp add push stos jae sahf or add dec insw pop gs scas (bad) push insb lea and (bad) mov pop fnstsw test repnz iret test jmp mov push sub popa arpl xchg mov xchg pop sub pop popl (bad) dec cli dec pop in outsb aaa shrb lahf jbe scas and std mov insl loope jmp in cmpsl hlt repnz pop sub popf mov sub sbb cmc out loope mov mov mul rolb add jno xchg scas inc and lret jmp jne cmpsl mov pop cmp sub decb pop ja hlt jmp jnp dec inc movsl ds in mov mov testb fcomi (bad) jne pop dec scas mov sbb push fsubrp rorl cmpsb or cli jno adc add nop push or rol scas adc sbb adc out mov or xchg jae (bad) mov or out popf mov cld or fldl pop sub dec imul fwait out mov inc adc jmp out lahf ss mov ret loopne enter inc fiadd pop and xlat push dec ja fnsave (bad) push out subl add or popf add cli lahf inc sbb es cmc cmc xor mov or or and pusha jmp mov mov xor sti sub inc sbb fs fdivr test int3 fstpt and adc cli mov pop or or test or pop testb int3 rorb or mov add push dec aaa dec mov lds mov pop stc add shrb jl jp mov in ss adc mov add pushf adc movsl adcb (bad) and sub pop (bad) lock repnz push pop (bad) int3 lds int lret or lock push jmp dec pop leave dec mov adc adc push mov inc mov ds frstor mov jnp sbbl pushl mov int3 jecxz pop cmpsl stos es aas sub adc xchg lds and mov clc aam in sarl cltd imull inc int dec jbe pop pop jae mov jb or cmp loop or mul imul jne mov jno adc adc inc bound popa rcl cmc jl mov rcrb aaa pop add xor sbb mov jno ja pop jo sub rorb jl add dec stos push add cmp mov (bad) (bad) mov stos mov lcall lods xlat ss push push fmulp aaa or mov pop jnp adc mov test addr16 sbb and enter or (bad) mov mov or aad stc dec popf fiadd mov sbb fdivs leave test mov mov in movsl mov mov lret out (bad) and cs add or jne xchg xor repnz mov fld or or test (bad) xchg loopne mov js hlt jecxz mov or je inc jge pop or inc cmp insb cmp xchg inc call mov and ret iret scas lds jne cmpsb mov test cmc mov notb aas scas or jl jecxz es mov out lods in cmpl jae push jge adc mov cli shlb mov popf (bad) repz or test mov xchg cli add add or push in fmul xchg (bad) gs bound icebp sbb sub out stos or inc xchg (bad) (bad) arpl cltd push sbb mov in mov ret jl adc mov loop (bad) fcompl pushf and idivl and jo jl xor dec add fnop pop cli jmp or and cmp mov jl pop lret dec into lret fdivrp mov lcall lock test or int pusha and (bad) hlt adc scas pushf xor push mov jl or cmp cld xchg or jns sub bnd cmp inc add cmc das aad and mov out arpl negl mov and add dec dec mov mov rclb into ret rorb add je in fbstp stos or add pusha imul xchg add inc je out movsb jl cmc pop dec test test out and or jmp lods sub clc mov jb pop sti dec mov dec ljmp pop or fsubrs insb jb mov adc pushf pop jnp inc sbb or and fisttpll dec adc nop loope (bad) out mov and aad xchg jb dec (bad) mov mov imul enter xchg dec xchg inc add and pushf mov test cmp mov and pop cmp cmp or push aad xor mov dec ficom test ds aaa andl and xchg add imul (bad) or add cwtl adc sbb cmpsb (bad) push and scas adc movsb cmc cmp cli xor mov fimull fnstenv das aaa ror add xchg lea shll sub mov mov cltd cmp xchg dec jle jne sub sbb and scas sbb or movsl jle xchg leave repz loope addr16 cmpsl mov push inc cld loop aad rcrb daa call jg idivl jo and daa mov mov pop mov es jno xchg test sub sub repnz test add stos adc leave adc pop insl push lret sub dec cmp xchg push add dec or adc mov lahf pop scas loop pop pusha cwtl test sbb xor scas (bad) aas outsl jno mov adc decb xor dec add fisubrl fidivr adc or test stos xor dec test inc (bad) push sub adc jno lahf stos out lods aaa push mov or int3 ja sbb leave or fsubs pop test xchg push sub or out call mov mov leave scas insl adcl out lcall sub hlt ret xchg loop xchg sbb insb sbb and (bad) notl pop mov mov or cwtl xor jle xchg or xor or ret or ret adc jecxz lahf mov das les repnz xchg mov imul imul into cmpsl in add sub (bad) dec or mov in leave mov jne hlt imulb sbb adc jae rclb test ret insb imul leave dec in testl stos jmp fmul cmp dec push mov lock jle and push dec push popf out mov stos cmp pop mov dec adc cwtl insl ja and lock add leave xchg adc push dec lock adc inc dec prefetchw mov adc dec or mov xor fwait inc xor or adc outsb or mov mov dec (bad) dec inc and pusha jae test jg lds mov ja lods sub jg iret or mov fld or jo add jo scas movsl fnstcw xchg jne mov inc out addr16 stc cli mov add into inc cmpsl mov ss mov mov sbb mov cmp mov lock sbb fisttpll (bad) test lahf push jb into hlt push adc push mov aam dec js add icebp adc adc add and sbb push dec flds repnz sti cli test push hlt stos test push inc ret mov orl cmp out inc sti dec pop je mov add lods cmp xor out jp or pop mov sub call (bad) or movsl dec out divb mov jp idiv and xchg lea add iret jnp cs imull dec lahf mov lret in out mov mov jle in dec (bad) into mov repnz sbb mov sub fisub mov jmp scas push in xchg js icebp dec sub pop fadds push or ss xchg add xchg or fdivrl xor imul arpl dec out push pop in dec insb or mov mov decb mov xor out loope sub sub loopne or imul int3 stos mov sub mov xor sbb or pop jp sbb adc aaa push (bad) dec mov adc stos jbe lret dec or push mov or sub cmp sbb cld stos add testb cltd adc jnp push js lods movsb cld rorb sub aam hlt enter clc cmp and bound sbb or outsl insl inc pop xor loopnew test das (bad) ljmp push or int3 clc pushf pop mov sarl or mov mov stos and adcl mov lret mov data16 out xchg sbbl mul add mov (bad) cmp imul adc fcmovne je sahf or adc sbb loope sub mov cltd cmp push inc fstpl push add sub mov push or push mov mov pop mov hlt or aam daa mov adc pop jge (bad) lds xchg inc add sub or data16 sbb cmp jo or sti push int mov and jns push cli add jmp mov push inc out mov xchg cs lods test in or jns push shll mov mov cmp lods adc push push or lea out pushf push jns or cmp stos scas jne or rolb sub dec aad push aaa mov fimull hlt rolb rclb mov mov test js fnstcw std mov inc pop mov sbb cld xchg pop dec (bad) fwait dec cmp lret dec shl or pop xor jns adc mov fcmovne icebp in or adc sbb loop js pop or loopne xorb mov mov cli sub sbb or inc mov aaa es ror xchg (bad) mulb mov sbb mov pop enter jle inc mov mov pop mov sbb movsl mov cmc xor push test cmp lock daa sub testb aad imull cmpb jecxz mov jge dec lret or fisub in xlat sahf notb (bad) lea aad xchg fdiv pushf dec cmpl scas lods gs lods fistl repz cmp hlt inc repz cmp rorb les inc shll rclb aaa xchg add movsb rorb iret cmpsl fisttpll or sbb or pop (bad) xor mov bound or push jle inc sar fcomp jmp push xchg push fldl or scas lret scas test or stos pop jns jecxz push aam fistpl mov unpcklps stc aas and pop popa mov cmp add icebp mov rclb jnp roll inc out (bad) push int3 (bad) adc rcrb fcomp out popa addl jg fs repnz and jmp lcall xchg push or leave xchg jbe (bad) hlt in iret mov out testb and mov sbb add mov stc adc mov jle jb (bad) leave xchg mov fstps mov stos ljmp push leave sbb xorl cmpsb xchg lock popa pushf cmc mov xor in in int fucompp cmp imulb test (bad) jb repz aaa fisttpl out or mov cmp (bad) call cmc std (bad) jl fstl and sbb call lret jo jbe sbb mov out dec mov inc pop mov add add mov adc in leave and (bad) sbb mov lods adc xchg mov (bad) add push bnd or out sahf jo ffreep fcomi rcll ror lock pop mov shrl fimull push subl push and mov fistpll jl sti insl into loopne idivl mov pop lock sub stos stc call mov xor lcall xchg test lret adc xor and lock fbld and aad adc or aaa sti push nop (bad) lea out outsb cmc imul push push (bad) mov (bad) pop daa rcll bnd inc nop sbb fsubrs bound loope sbb (bad) cmp xrelease mov adc xchg cmp mov or cmpl (bad) pop movlps inc (bad) mov sbb imul mov sub mov fisttpll push mov lods push hlt or xchg dec adc movsl pop or (bad) jge jns adc loop dec cli xchg mov aas in imul cmp cmp mov outsb das pop mov pop out jae sbb fwait orl push adc dec repnz mov pop test or sbb jmp mov or sbb inc mov negl jae cld lcall dec dec mov or outsb mov xlat or dec stos inc jle jbe push mov mov or mov mov or push inc mov sbb adc repnz adc addr16 std cld pop loope aad jae daa or cmp xchg js cmp and sbb mov mov mov dec sahf es sub or movb mov jo pop jg mov jecxz loopne xor pop mov or push xchg jnp or push or lods jle xchg add inc js sub je pop out popa dec dec or movsl push dec cmp or stos dec loop loope orb lods mov sbb fwait rorl lret pop inc adc add push lret test or popa mov aam xorl cmc rol jno mov xor sbb int (bad) sub xor dec push mov mov cmp jle lds jmp or mov ss mov je popa ds mov fsubs test lea jl pop push test (bad) cli les adcl imul imul jne fcoms roll lret and icebp jmp and push mov push int3 cmp (bad) ret cmpsl pop in lea add rorb enter outsl enter int3 lahf or test dec decb or or inc movsl pop ret aaa (bad) jnp pop pop lcall xor (bad) fidivl sub bound gs sbb (bad) (bad) into push pop jns andl loop pop in add cltd incl adc add out int lret fisub adc inc add arpl aad (bad) pop or push cmpsb cwtd aad or add loopne sbb loop mov aaa loope cmpl dec or sub ljmp add xor xchg sahf (bad) lcall outsl out inc mov icebp repnz cmp mov test fimul jb add int3 aam or dec dec lods sti nop mov fiaddl out ljmp stc mov ror and out sub inc add es lea int daa dec bound scas lock (bad) mov mov dec pop xor cmc (bad) test push push pop dec imul add push ficomp stos in sub clc fsub testl pop sub jg in pop or dec push dec scas adc mov outsl or into mov mov and orl inc add mov sarb lret sbb push or push js sub insb dec mov sbb sub or js push dec pop or repnz push or int3 and test jns push out cmpsl dec or je fcmovnbe ljmp mov jo cmpl sbb lret hlt xchg in jno jns sti sbb test popf leave test xchg outsb jo xorl push out add arpl and (bad) leave rclb push in addr16 xchg popa adc push into lods cli adc (bad) mov or or mov (bad) fwait mov in jnp repnz cmp and jb pop jo dec pushf aam or push scas jne xor iret sub mov mov sbb inc or xchg lods dec and popl pusha sub pop fistpl aaa jecxz mov dec nop xorl or sbb dec cli cmovo push imul dec jb push mov sbb fistp pop cli insb or imul stos or sub sbb test jp jb addr16 xchg sub sbb sub rorb xlat xchg aaa pop lahf imul xchg in repz call sar inc cmc insb fstpt fdivr add inc mov or mov sbb ds cmp aas in add or (bad) mov inc out jmp faddl icebp jecxz movsl cmp jns or loopne adc mov imul xlat (bad) or dec mov outsb (bad) lds gs (bad) repz or stos or js jp leave cltd (bad) ljmp pop div or mov sbb gs adc mov dec jmp (bad) sti push es cli push leave shrb cwtl aam or cmpsl pushf jmp mov push or dec or sbb dec or mov mov (bad) imul jne,pn out cli jmp pop adc dec sbb mov inc jmp and mov (bad) pushf cmp push sub mov lods xchg xchg scas bound arpl in imul cmc popa adc cmp aas and enter sub into pop or pop add push ds aam movsl or cmp sbb insl jmp jns inc test or inc add jbe jmp jge iret repz (bad) ja mov or inc ds dec repnz stc adc loopne nop cs jo (bad) out lods addr16 scas ss test icebp xchg cmp push sbb add pop push fmuls push push fstpt cltd notl add cmc pop push dec sub (bad) outsb adc adc mov jns sbb pop jbe loope imul adc sub pop xor nop in mov adcb insl in and out sti scas ss push dec incb inc rcrb (bad) sub into xchg sti push outsb ret or mov andl fisttp test xor jge inc (bad) cli pop ret mov mov or test mov outsb sub sub (bad) hlt ficomp sub push mov add in push lret enter mov shlb or (bad) repz xchg loopne in sbb fstl sarb dec mov lock jecxz imull or nop dec fldcw pop int mov (bad) cli fdivrl or loop icebp into or inc adc shrb mov inc int3 jecxz cld or test dec lret std lcall in or mov fxch or lea je mov clc inc ljmp add (bad) xchg sub cmp divl mov leave push jecxz jmp dec xor add sahf imulb inc jns xchg and push adc divl (bad) mov lret or dec xchg or jmp addr16 stos std inc ja dec jmp in gs push xor mov push jl or cmp xchg sub xlat data16 and add mov lds lock cmp (bad) jle adc or (bad) ss fsubr or outsl xchg test dec imul or neg xchg fs push test dec cmc imul fmul es stos mov hlt (bad) repz cs pop (bad) or and pushf pop or and jbe insb jp sbb push dec fidivl inc jmp xlat insl bound and (bad) cmp sbb sub sbb loop lds in mov sarb repz and mov icebp out dec push repnz adc xor (bad) fs dec fdiv fiaddl push adc imul lret jbe jle notb and jmp fdivl lock in xchg or mov mov repnz (bad) fucomp xchg push fwait (bad) div fcompl jno or nop add pop jle push mov std movsl xchg loop repnz jl fstps xchg or and adc fsub or dec scas xor out rorb outsb cmp inc sub adc (bad) jb lret bnd push pop xor push paddsb pop fisttpl jecxz jo je hlt ss cmpsl adc shlb outsb xor stos mov out mov and or fimull fnstcw mov (bad) icebp inc mov sub fcmovu out xchg jo sbb rclb jno insb mov in adc push xor cmpsl mov addr16 push dec nop aas dec mov adc lods into dec xlat mov add test adc xchg mov adc mov rcrl cmp ror adc sub aaa add xchg dec popa inc fldt jns mov test jns mov mov cmp mov dec xor dec adc or jne and dec push test stos dec cmp and sbb mov and pop leave pop int lock and icebp imul mov std aaa cmp sub data16 jo adc mov out pop mov jmp (bad) mov fs shrb push xor (bad) mov mov sub xchg fstp stos loopne lods sti jle loop fnsave dec and inc mov lea xor loop inc pop vmovupd jne add adc push stos popf xor ret mull mov ja pop xchg into movsb test and jl cwtl movsl lock xlat add insl cld and mov add cmp and xchg sub outsl xchg popa repnz pop cld lods cmp mov test outsb clc dec add iret pop (bad) mov push enter repz jp sarl xor xor jo test push movsl mov push aas rcll test mov repz int pushf cli jmp lock bnd fs mov mov sub rorl inc outsl xlat dec or xor mov shll jl adc cmpsb add pushl aaa sub shlb inc aam leave cli jne popf jns outsb loop imul iret or xor xor jo jecxz lret in mov jg xor bound cmp push insl ss dec jae ja jp ret ret or popf mov fwait mov add push sbb add iret mov loop jecxz lods jo (bad) cmc or xchg dec mov xor or mov orb pop std mov sub loop add pop test mov (bad) fadd (bad) negl dec js pop sub out (bad) cmc xor fiadd sti mov mov cwtl test out adc and or adc mov or (bad) mov (bad) mov inc sub cli or faddl lock mov sbb pop sti fimul sbb aam lods or loope (bad) mov in repz or mov sbb lea jo iret mov or lds inc add or mov rolb mov arpl or push dec xor sbb or inc in mov dec sti fimul pop cmp push add lods sti ja out ljmp add pop or enter in (bad) add sarl or in jo clc fsubrl cmc imul (bad) dec cs popf int3 mov movsl (bad) (bad) addr16 or pop xchg push or pop dec call sbb scas mov (bad) push or sti insb pop pop mul bound in fs mov or ret push cld inc repz adcl xor xchg and aaa mov insb cmc dec (bad) out fnstsw out dec jge and repnz mov in inc div sbb push (bad) sbb repnz cmc enter mov iret xor mov lret push dec divb xchg or push ret mov std jp roll ss iret mov mov lea test (bad) jns es loope popfw inc or adc or bound leave out lcall add in ljmp sbb or or inc jmp in imul insb push cmpsl jno cmc jbe inc jle dec (bad) cmp ret cmpsb or or jbe pop mov cmc xor imul ja es out mov or imull dec in jmp daa jb adc cs shlb xchg sti std adc sbb cmp out adc xlat add xor fsts inc shl pop cmpsl dec xor sub or cli (bad) mov test repnz movsb xchg or adc cltd pop inc rorb mov fildl in dec add lock mov mov dec gs mov adc mov inc add icebp es iret or cmp loope leave cld dec dec mov mov xchg adc sbb mov fcompl call (bad) jb pop jl fnstcw or jnp inc sarb xchg adc inc test sbb ja mov outsl mov xchg adc in push mov fs push (bad) fmull add adc in daa jg fldenv dec mov sub adc js scas ss mov jns cmp insb jae sti loopne mov movsl das mov test mov push xor in bound notl push je ss jle or aad add pop rcll pop shlb mov sub xchg jge out fwait xchg insl fidivr je pop imull adc lods xchg dec hlt call add cltd arpl mov lock pop sub mov andl mov (bad) test jo inc nop out pop add cmp jo (bad) fimull push sub les mov std ljmp push inc fistp cs xchg jo add and iret mov fs movsb or dec dec test rcl mov jp out scas sti insl dec fldcw loope repnz pop inc or fldl int dec cmp sub nop pop or ss popa or pop cmpsb inc ret push inc inc (bad) sub adc cmp jle call hlt out xchg daa lcall out sbb ret or sbb jnp das ret daa test gs or adc repz sub jno pop decl faddl xchg add pop es insb mov dec xor xchg cli push gs pop bound insl adc mov imul mov roll hlt movsb adc (bad) lock sub or int popa pop gs push scas jecxz fsubrl fmuls xor xchg inc push cs leave pop in jb pop adcb dec scas mov dec push rorl lret popf cmp cmp mov mov mul loope adc dec loop cmp jne pop cltd sbb fxch lcall mov inc and dec popf cmp cmc je fdivs fwait mov stos fs xor lods push or loope mov mov das fsubrs push push (bad) mov mov or aam push sbb aas rorb push addr16 adc jecxz out dec unpckhps lock add mov addr16 lods pop std out int inc out add add push insb lods es inc fnstcw or hlt imul pop test mov out mov dec out push pop lods lds add ss or xchg jno jle or mov clc pop insl (bad) es stc push loope nop cmc test sbb dec xor lea icebp jne rcll or push jmp in adc inc pop jne pop xor sarl sub xchg push dec xchg pushf xor mov xchg rcll inc jb insb adc jae cltd mov ljmp mov je leave andl cmpsl arpl scas add popf aaa mov jge lea out jle pop push push xchg mov sahf sub sbb imul (bad) stos in bound ret cmpsb cmc adc sahf pop fldcw imul push cli and ss out xchg out add out pop fcmovne fcmovnbe out xchg mov push or loop or xlat lahf icebp lods mov dec mov cs xchg push and xchg jnp jb jecxz add repnz jnp mov leave xor jl adc fsubs push fisttp cmc pop (bad) or insb push sub push test mov pop pop mov cs sub push xor imul inc mov std mov add repz jl,pn insb sub test loop and clc sbb jns mov es insl outsb jae addr16 sbb adc imull out outsl aaa sbb cmp dec jmp addr16 adc mov sub nop lods mov or in cltd ret adc dec mov inc or inc movsb push stos mov mov bnd mov std or or lock incl add and and or push jge or mov mov loop std or daa in inc ljmp arpl push pop jmp mov or loope mov adc sbb (bad) inc and adc mov add inc xor pop scas mov in xchg scas mov cwtl aam fld imul dec mov mov dec or or sahf outsl inc nop jecxz pop fistpl bound test insl (bad) lds idivl mov sub shrl mov ret mov jo adcl ret jnp or pushf call xor sarl xchg cld pop (bad) clc loop adc ret dec jne or imul pop or aam push push test je lea (bad) sub sbb xor sbb xchg ss sahf xor (bad) testl push pop sbb sbb mov jle (bad) repnz frstor jnp sti lahf sbb push or cmp aam sbb call or inc jecxz cmp nop sub sbb sbb cli mov movsl jecxz cltd add leave mov or imul xchg cwtl (bad) xchg repnz xchg daa mov add mov inc sub sub or scas lods xchg push adc push or cs or sub and or in (bad) mov or arpl out cmpsb or into fdiv in es cmpsb cmp xchg ss sbb jae out incl int sbb outsb jne jo or sbbl inc orl imul (bad) out dec (bad) aaa imull test rcll ja mov or xchg and sbb cmp mov repnz sub adc xor stos add leave (bad) or push xchg stos or (bad) lret mov push icebp pop xchg add je aaa or inc or mov popa adc inc or aaa jl push dec adcl mov pop jno imul movsb loope and movsl sahf cmpsl cmp stc aam jns jmp rorb or sbb leave jl aaa mov (bad) leave lret cmp or test in sbb xchg orb or sbb test mov dec jmp pop or xchg mov faddl fdivrl in rorb shrl mov jb scas aam loop stos mov fnstenv xchg in lea sub cwtl jb imul sbb mov sbb or (bad) ret sub or mov adc loope bound jne lret pop jnp mov fisubrl lret test ret push scas xchg sar or fimull xchg imul fdivs jne shrb add popf mov push push dec fmul mov outsl add sub fimull or mov js xor ds mov cmp jb or fmull in loop cmp mov cmp jno xchg inc arpl xacquire jmp push pop cmp js rcrl mov leave jb push mov or xchg in popf or push or mov and jge movsl jbe jo jl lret mov imul cltd adc inc mov daa xchg movsl push dec cmp out jne sbb dec xchg repnz mov sbb dec sbb add mov ds xchg inc icebp dec jne push (bad) mov lret shl dec inc jb sbb test dec fldln2 adc rclb stos bound xor jge (bad) or stos pop ret mov inc jno (bad) les icebp cmpb push cld jae and movups add mov shrb ret or test test out jno add push jp movsl jno jge orl idivl inc xchg std jmp ljmp lcall or lock add out not test notl mov bound xchg sarb data16 fbld test movsb aaa jl aas adc dec pop (bad) push cmp arpl lds inc jno repz push push or or out leave xchg in and dec dec xchg inc and jne lds inc inc mov adc mov xchg outsb (bad) xor xor imul pop jmp shlb cli inc dec xor insl cmc iret sbb shrl mov xchg xchg (bad) xchg (bad) movsb xchg adc je roll or or dec dec jle or adc addr16 sub xchg test iret mov sub in aas mov sbb pop jg mov adc mov fpatan adc sbb in aam lds dec cmp in xchg repnz repz xor dec cli or test pop mov leave out cli xor dec enter cmp xor mov or subl fs lods insl xchg into mov pushf std daa mov gs test or jns cld adc ss in mov and fcoms dec push xchg xor sbb shlb sbb bnd cmp pop loopne ret jge ss mov push out cmc adc mov leave rcrl adc xlat lret pop cmp call (bad) mov push jbe cmc xchg rorb sub (bad) ss fwait nopl scas xor data16 test xchg outsl leave scas stos mov fwait clc push cwtl dec jb adc fs or push hlt xchg mov (bad) xor jmp subl pop xor jae push xchg aaa xchg aad addr16 lahf add rorl mov (bad) popa push jnp leave inc test mov mov jne push test sbb push leave or push hlt dec sbb mov test or inc js data16 in js pop push add mov and or jl das sub sub dec sar xor mov fwait out fidivr stc lret adc insl jp jae push jns adc outsb mov add movsb add insl aam test adc mov repz loop in mov fdivl hlt pop mov (bad) dec cltd jae aaa or lret je cli xchg add sbb pop adc push shlb push jne inc andl jae fucomp inc sub push mov das push push int3 in dec mov jle cmp adc mov add mov lods and cmp lds ljmp imul aam jmp scas int3 inc dec cli mov cmpsl leave imul xchg dec je fadd push cmpsb or into mov fnstenv (bad) or sbb cmc das xchg pop or adc aad (bad) sbb sub (bad) cmc popf test test mov jecxz mov stos jae movsb aad into cld pop xchg mov fucom or movsl pop lcall je sti ljmp es sub adc jne jle mov aam repz or inc inc adc mov repnz push (bad) fisttpll jbe push jle inc or sbb xorl cmpsl push or loop loopne pop or push sti or lods gs je sbb clc pushf cmpsl dec test push aad add test and test push jecxz sbb xor and test pop mov push xchg or adc sub fs inc push mov pop fisubrl fucomp dec or cltd cmp adc mov jg,pt and cmp leave xor (bad) daa into ss subl call xchg repnz push leave in xor cmp push imul lds cwtl stc addr16 adc xlat cld cmpsl stos repnz mov or cs nop mov cmp sbb negb (bad) sub ljmp mov dec cmc ja cmpsb fisub fwait (bad) add pop ss cmp or xchg pop inc test sbb push xor xor cmp dec lock cmpsl pop jae or and jmp add insl sbb push mov mov push mov test iret xor push jg dec imul std aaa lods lfs or push cmp pop (bad) movsl jns cmp sub or mov jne out lcall imul jp adc dec icebp cs sub or pusha xor pop leave daa and popf loop and (bad) lcall mov test cmp mov bnd arpl dec xchg in (bad) test mov pop mov int sti mov hlt imul lock jle dec sahf cmpl pop push fcmovnu mov sbb mov xchg mulb add mov int sub clc mov add jl pop (bad) inc sub lea cmpsb cmc imul dec shrl sti addr16 sub dec test das or adc dec or jbe test cmp dec cltd pop adc mov jg xor sub mov or out jl and xchg arpl jae or xchg push or stos inc sbb jecxz,pt or test in aam cld fdivs mov xchg mov jnp data16 mov adc out pop cltd fwait movsb movsl lahf std jl out dec sti aad data16 ficomp mov xchg out scas negl jns jb inc cmc fs inc mov divb mull lods lods jbe loop mov imul rorl movsl xor adc mov or jmp lcall jge adc and (bad) mov lea inc dec ja and das push (bad) out (bad) pop mov mov iret dec add or ficompl loop enter pop sbb out int fstl cs shll repnz jmp jnp js inc ja and dec mov adc fmull cmp cs add jno cli into pop jns out shl dec or addr16 cld ffreep les pop and xchg or fsts cmp mov mov add pop sbb arpl sbb pop (bad) enter imulb cmp or dec rcrl mov (bad) movsl or std xor sbb pop addl fidivl hlt loopne mov sub imull repnz pusha mov jmp aam or push call add aad sub pop push pop sbb out lea cli mov mov shr aam imul xor into cmc lahf in lret lret lret hlt mov fsubs sub in push pcmpeqd pop jne mov in or mov jae out jbe incb pop and in negb pop notl clc dec dec xor lock and or sbb (bad) add and mov lret loop jl or inc mov out xchg sub add sbb rorb ja or add sbb addr16 (bad) or aas popf (bad) add sti cmp es or jg and js or sbb jp fnclex fsubrp (bad) xchg push mov (bad) dec jecxz dec or mov dec pop sbbl jle or mov mulb xor lcall popa push jmp cmpsl bound (bad) out add pop or and ficoml out mov cmp jmp jecxz movsb aas loop adc leave jbe push pusha inc sbb hlt jl in repz bound adc push (bad) pop stos movsb jns cli jg psrad xor cld std adc lret adc jnp mov ja or inc adc fs jb fnstcw dec jns add test stos mov mov (bad) stos je mov adc inc mov sub arpl shrl xchg int negb cmp sbb dec mov mov or pop jns sbb xor xchg dec cmp adc in or or ret (bad) int3 testl dec iret daa (bad) mov shrl jecxz,pt xor jmp cmc (bad) es push dec cmp jecxz out jbe mov jne cmp into push fiadd lods or (bad) mov push pusha lret fs sarb imul or push mov and cmc aam iret je ss (bad) adc push cltd add insb cmp (bad) enter push xorl xor mov mov out jb popf data16 jno and xlat sbb leave ficompl leave lods pop dec adc (bad) or (bad) repz adc and arpl inc hlt aad mov or pop xchg stos pop jnp movsb lahf cmc dec push shl testl scas mov jmp or cmc xchg push cmpl push (bad) add mov cmp pmaxub push dec cs cltd outsl mov mov cmc mov xlat or mov aad dec decl mov mov (bad) jmp cmc xchg and dec in in aad jge inc sub or add test mov out jp aas sbb xor iret adc fldl scas test mov or imul xchg adc jb push pop or es xor pop xchg xor jne jne (bad) jle fcomi clc pop fidivl cmp outsb aad movsl inc lock or aaa xchg test pushf js (bad) jmp std sbb fs stos cmp hlt inc bts mov jno pop push popa nop repnz arpl dec push xor pop pop aam std xchg and add push dec popf (bad) xor lock daa inc mov or cld out jne mov jno and inc dec pop xchg or sub in aad orl sbb loop or sti fdivs mov stos in mov or into fnstcw dec mov stc adc add mov loop out or mov sbb mov addl (bad) ficoml repz test out daa mov pop mov xchg lcall stos push test adc cli arpl sub pop (bad) sbb pop aam push sti jns es out xchg or in pop stos jecxz add (bad) sub ljmp push pop add jne mov and rol or hlt pop ret xor adc sbb sub lods jp mov test sub dec hlt in mov outsb sub stos pop push pop jnp clc les sub jp jmp inc aad xchg mov sub (bad) mov xor andl bound movsb push xchg and mov mov cld shl lds fimul outsl pop or cmp jo jae mov cmpsb sbb or add mov dec notl xchg sbbl mov outsl cs shrl or loope xchg fstps sub cwtl lret xor or sbb shll cli pop add pop xor and dec push jg mov pop or or pop or mov push push xor loope sub mov sti mov dec mov scas sub mov mov sbb into mov out call fwait test popf repz dec cmp fisttp mov cmc pop mov jae cmp test mov int jmp inc adc cmpb jb int3 push cmp add or jnp movsb mov fild jg and push lods mov push inc mov mov pop std mov cmp sbb into sub addr16 or js insl sub lods mov pop dec push xor imul dec sbb mov jge push pop sahf or dec lds cmp or daa cld nop mov cmpsb iret pop dec add mov adc jecxz iret pop mov out lods dec mov mov fwait or inc xchg repnz sbb aas cs (bad) or notl shrl inc sahf test and (bad) fcom imul testb adc xchg arpl sbb or rorb mov shlb xchg xorl mov push lock and mov pop jbe sbb xor int pop mov jl push inc cmc (bad) mov outsl sbb or in xchg and mov mov mov insl je mov in pop dec xlat leave lods ds sub sbb sbb lods mov sub xchg imul ljmp xchg mov or frstor mov mov pop out aad adc rcll (bad) mov (bad) and inc hlt icebp sbb push mov pop jp hlt out ljmp lods (bad) fmull aam in popa add gs push dec pop movsl outsb out movsb xchg or mov or pop ret fdivrl add hlt (bad) or sbb or enter insl cmpsb sbb cli jae shll (bad) pop pop jo repnz (bad) call push inc or test push inc arpl sub or cld inc pop mov mov or into addr16 push cmp popf mov and add mov sti inc mov sbbb mull (bad) (bad) fstpl sub dec sub mov fisttpl add fcoms scas sahf insl pop (bad) pop adc mov xchg xchg test pop or adc inc or sahf testb adc fcoml jmp or sub push mov (bad) hlt nop inc icebp xorl push arpl xor scas or mov mov sete nop xor (bad) pop out in leavew xchg in int daa (bad) pop push lock jl or inc into out cli enter test lds mov sbb lahf mov jns,pn fnop mov jae cld jne jmp push loop mov gs aas leave ret adc xchg nop and cmpl inc sbb loopne lock icebp or lods or pop stc dec (bad) in aaa fbstp push and cmpsl cld adcb mov add shrd ss sub (bad) fistp pop lock (bad) dec inc or aad or pop fadd rorl imul xchg int3 dec in mov or mov ret or and gs and lods (bad) loop push lcall jp fcmovne push popl cmpsl in inc lods jb jmp or repnz add shrl (bad) pop push int pop cmpsb push sti push xchg not and idivl dec cltd mov inc test iret in repz mov mov addr16 mull mov push enter test hlt cmpsl mov mov xchg insb ja and xchg or add inc or inc jmp inc add sub xchg int3 and fisubrl dec (bad) push mov repnz jmp jno xor aam or loopne and cli or push divps (bad) lahf sub (bad) incb lcall insb cltd cwtl jg xchg cmc mov unpckhps or inc dec or daa mov adc ds dec stos in imul cmp ret in test imul lods mov sub out bound mov dec adc (bad) lea pop dec dec orl and and scas and es or mov mov aaa enter xor leave xor pop mov (bad) decl enter xor test stos lcall mov in js popa sbb cmp jecxz or push push scas imul repnz bnd call pop sub repnz cmc cmp pop xor cmp mov mov pusha dec or (bad) mov lahf gs fnsave xor add sub mov cmp addr16 test arpl pushl xchg mov cmp mov or mov out int3 sbb jne in iret dec bound cmp pusha jns insl shlb xor or inc or add (bad) bound adc mov dec lods jne aas mov or cmc pop sub or sbb out pop mov sub xchg movsl iret mov xor mov fiaddl repz stos ja pop jnp mov dec dec sub faddl test lret aas adc fcoms cwtl fwait rclb ret mov pushf fidivl (bad) repnz or push adc push dec aas insl and jo cltd mov je out mov xor into enter call sbb adc lods mov xor js xlat or sbb hlt imull push mov (bad) lods lret idivl dec sub mov test (bad) (bad) jns fucomp xchg dec test cmp and mov andl insl aaa xchg out sbb or inc mov (bad) adc jb popf and or inc sbb loope push mov push imul mov xchg push sbb mov add cmpsl out fcmovu daa sub imul jg lea ja sbb add aaa subl les inc xor ficompl lods push mov and mov (bad) sbbl or jno mov inc cmp cld lods xchg out popf sub int test jns or jl cmp sub jbe mov adc mov sub notl xchg out mov pop inc outsb cmpl adc (bad) loopne or or mov xchg lods sahf ret dec lods insl (bad) push mov jnp,pn xchg mov leave mov rcll cmp push hlt (bad) int dec icebp pop adc adc mov sbb mov loopne push xor stc mov jle (bad) mov mul xor xor fdivp cmpsl adc push popf movsl out jns punpckldq out add orb xchg mov dec xlat loope shrb lcall or popa dec inc mov or dec jmp dec popa adc push fs adc adc xor xor ret adc sbb cld mov test es lcall mov stc dec adc xchg pop cmpsb cmp mov aam mov sub cmp pop das aad inc inc repz add rcll push stc lahf or push subb cmc jecxz icebp jmp sub or inc enter jecxz lea adc push leave xor jmp or repnz and imull ret icebp cmpsl mov hlt iret aam shrb or js sti xor mov jo imul dec adc cmp push mov jns or pop or jo cmpsl cmp jg or lcall rol mov cli sub (bad) dec lahf test adc or push and jae movsb adc out xchg mov lret and fild (bad) or call jge cmpsl insw push inc sbb or mov adc sub xor xchg lret (bad) cmpsb repz cmpl xchg mov xor dec aam ljmp cmp sbb pop or xchg mov scas or leave sbb shr leave or and sub mov shll or mov sub stos std jb mov mov jle sub mov insl xchg dec sbb xor xlat test scas mov aad jl xchg inc adc and mov lods sub jno mov inc sbb insl dec push daa mov pop adc dec ljmp xchg lock cs js (bad) mov fstpt loope mov out repnz sub fwait testl insb int lret sbb out in pop aad dec aas daa subl mov in xor pop mov xchg mov inc sbbl popf inc xor xchg cli fisubr into push es mov and mov jle jl rep aas xchg ljmp fcoms daa repz mov mov sbb test pop std pop xchg into inc lret mov (bad) clc orb and lahf mov stc inc xchg (bad) popf mov cmp add cmp cmp and mov inc xchg mov movsl mov xchg push and sub stos mov int ja mov pop (bad) or rcl jae sub into mov adc mov lahf mov sbb jno mov mov test iret pop xchg (bad) cmp jl ror clc jmp xchg hlt inc adc push jg scas and movsb flds fild lret sub insl jns pop xchg cmp cmp in xchg mov insl dec cmc outsl cmp das out pop jo sbb mov (bad) jbe test bound inc push jecxz pop pusha sbb test dec leave pop mov sahf push cmc push dec cwtl or jecxz pop stos or in outsl test sub sub xchg bound fwait jns mov dec dec sbb xchg and loope add repz (bad) jmp stos (bad) ja std xchg pop fcmove outsb xor aam rcrl dec mov or jbe and jl adc jns mov out ret add or mov xor imul cmp fwait pop push aas mov mov jmp fsubrs xor loop loopne (bad) xlat add or lea test cmp pop lret fimull pop lds push inc fdivr or imul repnz aam xchg sub and (bad) into mov aas in xchg ficompl jae push iret mov cmp mov mov or ret mov or jg out mov nop pop aaa jmp test test fs pop or test inc mov push sbb mov dec daa lcall cmp nop popf xchg inc in ja push leave aaa or sbb dec and js push test xor out or test jl ret (bad) lret add rolb movsl outsl push cwtl jmp iret cmp dec xchg add push aam or das jne pop std es mov or test or mov int loop in daa pushf sti in xor jp pop add or stc out push into mov popa mov (bad) mov push inc and mov subl mov mov sbb punpckhwd and adc and or and push fldcw or push dec or shrl (bad) stos jmp fbld xchg add adc sbb or push mov mov xor sub shl jp bound test add cltd or jo outsl hlt dec or cmp (bad) or cmp fsubs jge and popa aam push inc call repnz or insb jne leave or mov cli sbb cld mov or mov add fcom xor int dec or adc sub sub or jge mov jecxz add shlb mov pop insl dec push cmpsb or or pop inc fmull and icebp loopne pop jge rcrb das fmulp imul js lret int3 add leave pop or adc adc hlt inc and pop neg idivb loop aas aaa movsl xchg add icebp xchg mov adc push push lods test notl call aam lds insb pop scas nop insb test shll mov adc fwait movsb (bad) leave scas mov fnsave push dec std imul jae or inc popa pusha jmp adc xor mov lea xor jge lock jg stos and xchg stos xchg mov movsb dec cmpsb sbb leave adc xor or adc nop rolb dec int3 lea into dec dec cltd adc loopne and rcr (bad) mov pop (bad) arpl mov (bad) jmp inc insb push cmp push mov and in mov inc lahf imul push add lahf inc repnz or pop add in je xor sub mull adc cld ret push nop add cmp bound loope mov (bad) push push fildll ret push adc ror dec ljmp lock out jo mov cmp mov add sub cmp outsb lods xchg inc test push lock dec sti (bad) sub sbb sub mov rcrb notl shl lret mov dec notl dec aas dec xchg mov cmpsl push sbb jecxz pop insb or sarl pushf (bad) or imul cwtl fsubl mov addl xor (bad) cltd and xor sub (bad) pop mov ja fsubr mov ror into test iret je cli cmc (bad) aam (bad) adc (bad) (bad) or adc int ja testl fdivrl test mov mov subl or adc les dec mov insb inc fild dec orl xchg inc or repz adc cli or mov aaa mulb in dec xor add sub fisttp scas jns xchg lds (bad) or das adc orb xor stos leave mov mov cld or (bad) ss sbb cltd jnp scas out test mov cmp sub inc ljmp push daa fnstenv and mov xchg add mov cmp mov insb sbbl repnz jno sub jmp mov sti das push (bad) out repnz jmp leave mov fisttp test adc mov xchg pop xlat pop push sub jbe cmc arpl adc or mov lock pop xchg test dec ja sbb or jge icebp mov popf push mov mov sub rolb sarl pop scas call decb hlt jno mov jecxz sbb dec and jns adc je out xor (bad) jl pop jno hlt lock push mov neg adc and mov (bad) repz and inc out cmp dec loope jns sub mov push cmp loopne mov pop or or fldenv into pop lahf insb cmpsl leave push cltd jle addr16 xchg inc xchg dec xchg iret movb out adc xchg ljmp scas push insb lods and int lret (bad) sbb mov pop pop and or enter lods or cwtl inc fbstp lret or in fsubrs or popf (bad) out in xchg jge cwtl fcomi jb hlt adc jo idivl pop push cmc mov and or jecxz dec mov add scas inc push or cmp or inc adc jmp xor inc pop or push or leave mov icebp (bad) cli jmp or leave scas xchg test lea (bad) pop jmp inc arpl mov fldl2e test mov outsl insl pop jmp ja mov arpl mov hlt daa (bad) imul mov iret mov ds (bad) out dec sbb dec imul xor sub dec (bad) (bad) mov mov push sbb aaa stc mov cmp movsl jno jle movsb mov adc cmp pop daa jo or mov add (bad) mov lret scas cmpsl pop push imul sbbl xor pop imul sub mov jmp jne,pn loopne push dec lret adc test xor dec or sub add sub popa popf or das int imul mov dec in push test testl pop mov vsqrtpd iret hlt sub lcall std or les cmp ss (bad) idivl sub jle pop idivb sub cmc sbb dec or aad (bad) sbb stos xor cwtl sti hlt ror imul (bad) mul or xchg or lods sar fwait mov pop in dec repz mov dec push add cmp jno loop fidivrl adc xor jecxz ss add sarl ja sub fdivr xchg jne cmp loop push aad and mov add pop out scas pop add or push or mov (bad) jne inc xor test push add cmp pop daa sbb inc ss adc imul into jnp or lret imul in inc int ja cld or cwtl es popf (bad) cmc mov mov push ret mov mull sbbb repnz (bad) ljmp dec loop jp jmp rorb sub sub mov jnp mov (bad) fs repnz xor (bad) xor (bad) out dec inc adc cli (bad) adc dec aam aad in decl sub and out add idiv mov (bad) hlt out sub sub lcall hlt hlt (bad) jno xor shl cli cmp jno sbb push cmp cmc xchg sub push daa dec and cmpsb xchg aam sub movsl dec lods pop (bad) or xchg (bad) and or es and cmpsl cmp (bad) mov js shll mov cmp xor adc adc or xchg (bad) xor imul mov shl fwait jno aam pop insl sbb jns subl jle iret pop and imul popa or mulb outsb jle outsb adc jmp cmpb arpl mov ret js call sub sbb mov push scas adc movsl mov fxch inc stc jle stos lods pusha inc (bad) ljmp (bad) sub (bad) add ret insl insb in inc shlb jo fsts ja mov xchg xor push dec jns mov in lock rol clc rep inc (bad) mov jns aas or cmc adc push dec cltd push fild and icebp fldlg2 iret rclb movsl push xor pop pop push fldl2t mov jl add adc hlt pop aam (bad) jmp (bad) mov mov mov lcallw jne adc adc repnz xchg (bad) or fdivr dec jmp or fildll add out test lea push jbe fldenv jns int3 out (bad) (bad) or push cs mov mov mov (bad) xor fbstp and inc pop or stos push pop mov xor dec loop in (bad) cs push dec mov fistpl or sahf dec push push dec mov sbb cltd jbe or jne mov dec add loop fst hlt sub mov imul add leave in sub or (bad) lret adc cmp fnstenv jp aaa or push inc xor repz push lock mov pop xchg jns andl ljmp push mov sub neg lods pop out aaa mov fwait or inc imull mov into push adc (bad) andl scas outsb jmp lods addr16 fisttpll nop sub cmc or dec test mov rorb test cs or pop mov scas inc imull test in jecxz or inc movsl incl ficom sahf pop call fcoms dec pop pop mov out movsb mov icebp arpl out dec or xchg pop movsb lods or popa pop data16 add lret cmp jle ja jecxz ficompl adc or push bndstx and cmp or lods inc jl movl sub out and leave xchg or out ficom testl cmc cmp sub insl jbe (bad) mov and xchg hlt das popf jne in mul xor (bad) lods lret and rclb push mov push and daa push push and jge mov jg movsb lahf fdivrs int3 xor bound add cmc loopne (bad) mov or mov leave pushf aaa out and or cmp (bad) lcall xor or sbb es push pop addr16 (bad) xchg mov cmp cmpsb mov push lea test cmp popa rol pop or pop adc pushl repnz xor rol aam jmp incl sbb sti and or or xor mov ficompl or fnstenv int3 fimull pop adc pop push mov pop cmpsb xchg or or bound jmp mov inc fdivp cmc loope or mov incl push fwait cli pop lea sbb in in cli jb pop adc xor lret mov test xor mov jo imul test pop aaa or add cmp mov jl mov or pop dec cli or daa add xor insb push ss aaa fisubl mov jle jbe es out mov repnz add or icebp std adc add lock mov dec add cmc adc fldcw xor jns andl popf je xchg cmpsb insl jmp stos stc pop xor jns pushf jp sahf mov add sbb and add push lcall ret push push add inc call fdecstp pop in adc loop inc adc dec sub (bad) push xchg jo cltd dec fildll xchg aam mov jle xchg mov movsl inc bound shlb adc xlat popf or mov mov std add out sbb out lods cli dec cmp xchg jno (bad) gs cmp sbb gs sub pop xchg or jge leave ljmp lret aaa or imul adcl test inc push pop ret sub adc les lea jg and jle ficompl in ss stos fdivs aam in xchg dec mov arpl jae loop inc mov pop ljmp mov (bad) call cmpsl stos lcall ficompl shrb or sub add (bad) jb xchg andl sub mov or jb adc imul sub lock dec aas mov sti sbb fmull js sub or (bad) stc push fimul or insl adcl inc xor in gs mov (bad) xor add cmp insb in or cld mov (bad) mov mov or call mov mov ficoml outsb or or pop or mov dec jbe outsb push repnz (bad) xor lods or in icebp or cmc dec sub fldt ljmp pushf in ja or sbb in hlt out push cmpsb or push pop iret and mov sbb into or aad les arpl decb inc xor cld scas inc pop xchg notl leave pop adc cltd insl dec and xor cmpsl jbe sarl push sub insl dec aam mov jle fstl rorb sub push or jns xchg mov fcomps adc mov jl das fmull and (bad) cmc jbe ljmp or repnz jno sub div fnsaves jns and inc dec jbe cmp jno lret shrb mov (bad) jmp mov mov or in jnp fdivl pushf or dec scas in push or push sbb pop sub jge sahf or fdivrs adc js call fwait aad add jecxz or mov scas insl or mov sbb (bad) xor push lcall ds mov mov push push inc loope in mov pop pop dec leave (bad) mov lret mov jmp (bad) das or mov mov or cmovl push lock in nop sti cwtl fbld rcll push or testb push in push mov add mov jno mov cmc mov push and cli adc mov repz les test sub dec clc lock sbb je rorb dec xlat and mov mov or jne push aam ret add cli inc sub jo pop xchg adc sub xchg ljmp pushf dec sarl inc or lret incl or imul and mov sbb movsb xchg jge xchg mov dec mov popa cli fcoms or mov jae lock sti scas or inc lret jle (bad) hlt insb push fisubl inc xchg cltd mov pop in (bad) aaa rcrb out mov mov negb adc addl and fbstp dec cmc les stc scas cmpsl xor adc mov sbb cli jne daa and popa (bad) jno ret fimull lahf hlt mov cmp scas mov cwtl hlt push cli outsl dec pop ljmp mov push iret cmp dec cmp iret lock sbb aas decb mov xchg lret mov popf mov mov nop cmc insl (bad) lea mov aam jp mov mov lock adcl lea clc arpl xor test xchg pop lea jns mov or mov mov leave mov int fwait aaa sub add dec mov lds loopne adcl repnz xchg inc mov or jns,pn sti mov aas push adc mov cltd lock into push or xchg xchg cltd mov jecxz or and mov lea in aaa and out loopne pop or pop ljmp divb mov lock (bad) xchg sub fdivr mov pop mul xor jmp cltd nop aam sub aad into dec dec push pop data16 fsubr lds or sbb pusha cltd (bad) xchg das pop movsl jg add sub (bad) or fistp lret in sarl stc sti dec mov push cmp sub wbinvd xlat rclb (bad) scas lea (bad) cmc jecxz,pt jecxz or (bad) mov mov pop add loope jae repz mov and pop in js dec fildl or or (bad) mov jecxz test push xchg cmp jmp mov sub imulb rorl sahf or repnz cmpl jbe jno or rcrb fisubr dec cmpsl add sub sbb adc or and sub mov jne fs mov adc pusha test test imul test pusha pop inc in negb xor shll lret mov shll dec lcall sbb cmp dec fadds scas (bad) or or fiaddl minps or insl scas dec notb movsb pushl or inc lock adc ljmp dec test je mull mov sbb stc jge inc outsl mov jae in pop loope repz lea mov add scas (bad) or mov sub sub mov sub cmp pop lret and sbb sub or mov push cli repz (bad) int jns or mov sti pushf mov dec cmc mov pop jae loop xlat push or mov out in cwtl js mov mov xchg push push pop int xchg movsl into insl mov mov (bad) lock popf mov mov cmpsb test stos test (bad) mov test test icebp push cltd push imul mov scas and lods cmp xor es out int mov xor popf outsb sbb inc push add or mov xor arpl mov fcmove cmc scas mov (bad) fdivr cmpsl and fcompl test push test jecxz sub pop or mov sbb push or cmc xlat mov sbb cmpsl bnd or cmp jns dec call inc xchg push std pop jne sbb xlat sbb mov dec inc call leave icebp and xor sbb out sbb dec xchg enter inc jns or aaa push out adc xchg (bad) xor or repz sbb rorb mov js or mov adc out loope or (bad) xor xchg push je sub cmp out into jb mov (bad) mov lock in adc adc push lret clc mov inc sahf aad mov or or lret inc pop (bad) jge add and dec xchg or cltd in add lret or call jecxz add outsb dec repnz mov xchg and data16 inc stos sub iret push out lods adc and fildl xchg push fsubrl sub dec testb or mov mov int3 rolb jmp or or fwait inc (bad) or add cwtl sbb fidivrl sbb sti or les sti cmp sub lahf shr pop or fbld idivl mov loopne in xchg sti cmp jle es pop sti mov dec or inc imul jmp inc pop jge cli cmp add ljmp mov sub or and jns mov or or in or push jns xchg xor jmp add adc pop (bad) push mov xor or (bad) jne sub stos push pop sub mov or dec pop and outsb xor inc or fwait mov or fdivs add and xchg stos mov lea leave jo push add mov xchg mov nop mov ljmp rcrl (bad) cmpsl dec dec imul pop je jns,pt adc pushf jmp jmp xchg inc idivl sub or push inc cmp ljmp fsubrs lock (bad) mov add faddl sub pop or stos pop jnp adc lock fimul (bad) fdivrp mov xchg push loop mov or xchg mov (bad) and pop (bad) daa daa adc out xchg or xor jno push or data16 dec xchg push or outsb ss lock xchg icebp mov call out push push scas mov insl push fldl sarl jecxz sbb or in mov imull dec xchg lea lcall cmc sub push dec xor daa popa push loop cmp or in (bad) mov fs jecxz (bad) xor pop add je out out leave das push fsts ljmp mov dec xor hlt add cli xchg adc dec (bad) or push aaa int mov rol insb leave sbb idivb adc lea push jo mov adc mov pop mov adc cmpsl sub repz lcall pop dec jmp int or dec sub hlt pop in adc cli loop or sahf sbb (bad) and aam jg adc mov or cmp mov cmpl xchg or inc mov out and aad or xlat lahf in xchg insb jne nop sbb dec pop pop mov sbb jae cmpsb or lcall jns pop cmp or and wbinvd dec mov fdivs add inc in fidivl clc setg jle jl mov xchg sarb test mov add out push iret jmp mov dec sahf and lds mov sbb fwait cwtl pop stos stos push xor sbb xor dec or leave xor out imul and aam or adc out inc push in dec mov insb adc aas push and loopne adc cltd outsl mov jg jno insl insb sub aaa popa xor sub dec xlat add scas inc hlt shlb inc ror (bad) xchg xor stos addr16 negb mov (bad) or mov and dec xlat rcll add push arpl xchg jmp in mov in sub mov rorb test lret jl sub insl mov pop xor insb out jge push cs imulb push adc sete and dec fstps cs or into sbb pushf mov out sub scas jb or iret sbb or jg dec or test leave cmc xchg mov sub dec ds popf mov sub (bad) mov jb hlt (bad) jg lret rol mov or lods or fadds outsb mov mov sub pop xchg cmc out sahf add negl or push out dec pop aas test lret jmp lock cmp enter and mov dec push pop mov loopne je or (bad) jno sbb inc or inc jg clc fwait dec ljmp insl or push sub or call pop ja addl inc aas leave cli les adc or jbe cld mov stos pop adc cli jmp mov sub sub aad add or fwait ss lock jmp mov imul mov mov jne jg mov sub inc or ror or sub fmul das stos into loope fucomip fildll cltd pop bound adc outsb loopne sub mov inc std cmpsl push sub mov outsl es aas gs out mov das inc push in inc push add jg and jge lock xor into sub out sbb cmc or dec ljmp dec into lret xlat clc pop mov (bad) iret or inc xor xor movsl inc or and daa pop jge or in xchg leave cmp es cmp les mov out jb or std push mov inc xor and pusha or sub inc fbld iret inc fimul repnz jge cltd xchg adc es fdivs sbb addr16 fidivrl sub cmpsl jmp imul push sub inc jmp pusha (bad) mov cmp mov out and cmc push test pop add je adc repnz inc loope push dec or jg into add dec or cld js mov ja dec dec addr16 in inc jnp loope pop xor add in call sahf lahf lds aas (bad) jmp movsl pop leave and add mov arpl nop pop cmp out adc or lock adc fdivrp mov push test pop inc fs (bad) push xor (bad) dec outsb enter or lods ja or ret in add sbb xor out leave sub cwtl mov das pusha adc or dec (bad) and in fcomip push mov (bad) sub hlt inc push xchg or dec insb mov lds loope or stc xchg mov ja adc rcr lcall imul sarl cmovge sbb mov jge cmp dec ret lods xchg (bad) jge adc leave cmp xchg add inc std lock dec jo and jno lods dec mov cmp test and fisttpl mov out lahf or mov sar jmp test mov imul xor xor dec insl movsb add mov mov imul outsl imul into inc dec jecxz adc in mov fildll les xor mov in dec pushf popa mov stc testb push or pop cmp jecxz pop bound cmc subl imulb out xor jno mov jns or bound outsl cmp push pop fs pop sti xor lret repnz inc enter add mov fmuls sub mov lahf daa popf bnd insb int3 pop rorb and fmulp or or loop pop or aad shll lret mov mov and pop (bad) out adc or hlt lea movsb ret out pop push inc ljmp xchg dec or sbb sub mov pop or (bad) or jp inc or pop and test jnp mov sub pop imul push mulb or mov jnp inc outsb (bad) xor xor push jle jb jne daa sub pop sbb push mov add or outsl mov pushf or pusha sahf stos mov xchg mov pop dec in dec xlat mov pop xchg or jae rclb add xchg mov lret fnstenv or lods xchg daa repnz scas out out dec ret mov adc hlt shlb push cwtl lock fsubrs insb push xor (bad) sbb enter or jge sbb loop lods jbe rcrb jl shl or or out push pop jae mov mov leave mov stc mov or sub movsb or xchg push (bad) cmp repz jg lods or sbb xchg dec out xchg loop (bad) mov cmc mov mov in dec loop pop or cmp fcomps xchg inc xor aas leave xor hlt das or xchg fs dec cmp mov jne sahf sub loop jecxz sti outsl push jnp sub iret loope sbb add xchg mov pop leave test cmp cmp (bad) or loope xor cmp insb mov fdivl fimul loopne mov mov or pop and or mov pusha das or (bad) or sbb sub pop inc in jge pop out sti dec or sbb imul or jo mov daa pop mov adc rorl cli pop mov xor loope test popa mov jns push jle or test or shl or jbe sbb lods (bad) dec in xor ret sub aaa dec jns fisttp shrb mov nop je divb in dec data16 movsl and divl jmp insb and add mov jnp out aaa push pop inc and xor (bad) pop lds inc and and fldl inc adc cltd fld (bad) daa in or in (bad) mov jg lods or pushw aad loop xchg addr16 push stc (bad) jnp mov push pop mov btc dec xchg lcall fisttpl add jo or jg sub aam lods xchg cmc test maskmovq divl hlt sub inc jecxz xchg nop and stos add cmpps sub inc stos mov cmpsb jmp push mov or aam hlt movsb mov mov cmp push mov mov push inc or cmc iret jp jae pusha or cmp loopne xor enter sbb add dec mov lcall xor cwtl mov repz movsb cli mov lahf (bad) dec insb sub or daa mov push jne mov mov cmc adc stos mov lahf mov xchg jg adc repz test pop fptan pusha xchg inc cltd (bad) nop inc add dec pusha cmp cli jmp testl loopne xchg rorl sub arpl push fcmovu and das push dec or outsb mov testl sub loope repnz xchg int3 xor (bad) sub sub sbb sub or or jmp push and fs sbb xchg or outsl enter inc lret or popf mov (bad) std in or add mov or (bad) cmpsb push leave mov and dec stos cmp enter loop,pt pop lahf lds sbbl out cld fs or inc cmpsl leave fucomp loop adc mov fiaddl jl and or lcall pop test les jno pop inc or rorl fisubr in or hlt cmp push (bad) jbe leave ret or cmp fxch push add mov xor sub mov mov or (bad) sub push cmp mov fdivp in or out fnsave push nop or mov daa xchg cmpsl or clc fwait std cmpsb arpl and cli add mov cltd and cmc sarl orl into or inc insl push add lret int mov repnz xchg or sub vmwrite or aaa fcomi cltd out dec adc mov cmpb ficom lcall lods mov pop or jp cmpsb fldl cmp pop cmc in sbb sti sub inc adc pushl (bad) cs leave jb pop inc dec mov cmpsl repnz lods push jl xchg sbb enter (bad) push in jmp test add outsb sub sbb divl and dec arpl lret out cmpsl inc sarl pop aad or add notb jle jmp dec dec hlt mov std push mov jnp out leave aad adc cmp inc mov mov aad jmp push dec test das push xor jo pop push pop scas addr16 mov (bad) mov addr16 in mov push mov pop and xchg jo dec fldt sti (bad) push shlb sahf dec sti add add jl add push push je adc jbe jb jae or mov mov test pop pop aaa sahf dec and (bad) dec and stc data16 jae dec xchg lods test or add adc shrb psubsb rclb push fimul cmc inc (bad) div cli and mov mov add dec jmp mov mov lods les clc pop cmpsl sbb cmc or mov out hlt and orb shl bound adc scas sahf lock mov xchg or sub cmpsb push in xor or test test or jb fidivr cwtl xlat pop or mov in cltd out inc xor test adc inc mov (bad) pop hlt or xor or xorb out sbb dec pop cmp (bad) dec pop pop enter test shlb jge imul pop addb (bad) sbb xchg ret fucompp test js lahf sub xchg in idiv insb hlt cmp jg adc lock mov sbb jge in xchg sti test adc pop clc or jl lret inc inc stc jnp mov mov xchg fwait jmp test adc (bad) and push cmpsb out fs cmp and xor fildl in addr16 dec fistp cwtl or xchg pop mov or dec in cmp test fcoml add pop mov push add nop jl dec orb in cmpb adc outsb stos xchg cmpsl lret and out xor arpl imul mov mov or fist sbbl pop ds pop jle ja imulb lods push test lods sbb cmpsb dec push cmp xchg dec xchg or push in add cmp das inc sahf pop mov lret addl jns jne lock jne push test pop dec je pop (bad) ljmp and pop std add lret mov faddl mov or and sbb addr16 ror pop popf sub push aas push cmc fcmovu jnp mov ss loop sub (bad) in shlb jno cmp js xchg fs add or dec lret loope and test cmpsb inc xchg aaa lahf adc mov outsl sbb cmp addr16 imul stc jno lret cmp push inc mov xchg cmp test sbb cmp push sbb notb outsb insl imul inc stc leave mov jl pop cmp mov and xor sbb mov enter cmp cs and hlt push inc push loopne adc xor lock (bad) insb notl test (bad) jbe inc mov or add mov aad xchg in cld xchg jb push push inc ja cmp nop sti and (bad) mov orl repnz inc adc sub mull cmpsb push push cmp dec jecxz repnz ds cmp into addr16 mov fidiv push and xor mov or pop ja mov (bad) or ror test arpl lock push std cmp dec sti jne mov mov mov sub bound fmuls (bad) xor movsb sar push inc cmc hlt or repz cmp in aad repnz ljmp cmpsl loopne or fldcw mov mov inc and icebp in push or es or mov dec cmp or add incl (bad) in inc aam or lahf or cmp mov mov xchg adc or (bad) xchg sub nop sub jmp das je out push adc insb addr16 or lahf aaa dec pop add ficomp push jbe mov cmpsl mov stos mov cltd lods or mov adc xor and lock jbe add addr16 xor test xor imul cmp pop mov cmc bswap arpl inc pop jbe fs add lcall xlat insb scas loop arpl loop pop out or xor pop ja or push outsl fstpt xchg xchg sbb test adc in cltd ret aaa aam jno sub dec adc mov push dec cli arpl cmp mov inc lods lahf jp loope sbb pop xchg fucomip mov pop ss loop pop insl push adc std adc outsb mov and jae xor push (bad) sahf xchg ss and or jecxz and mov jl or rol popf xchg pop jns int lds push mov mov or pop and iret mov test imul iret push jnp pop xchg sub or mull cmp in (bad) loopne add add popa in not ror cli mov hlt jns or in out inc mov idivb (bad) xor sub (bad) xor mov out pop xor mov lds dec xorl or (bad) sbb sub js test mov ds or punpcklbw das add movsb mov bound or in push or (bad) push das in mov and jmp cwtl shrl inc jnp mov jg out or repz pushl scas pop xchg repnz clc jle shr insb mov push jl pop cmc mov loop or inc stos adc or adc lret (bad) stc addr16 int lods xchg cltd shr sahf cmp jns dec jmp jns mov jp mov sbb test pop jb arpl sub add mov stos test test cltd aam fimul mov inc push lock xor (bad) test adc imul fnstenv scas xchg imul and xchg insb jno aas jo adc repnz mov mov repnz cmc test jns int popa loop or cmp dec mov std stc cmp dec jl pop (bad) cld fnstsw add jae mov fnstsw pop and loop and ljmp cmpsl inc (bad) mov xchg push jge push cmc xchg sbb mov dec inc (bad) stc mov std adc loope inc (bad) repnz cmpl jecxz es jmp fldcw lods arpl or xchg push loop mov repz int3 fcmovb jo or pushf sbb test sub add cld cmpsl or iret xchg dec dec push and jno push xlat xchg or pop sbb or sub and or sbb outsb repz (bad) and or mov sub (bad) pop test (bad) scas and lods cmp aad (bad) popa pushf cltd jns aaa cmp xchg add dec jnp adc sbb leave push mov mov ficompl aaa or insl nop sbb pop (bad) cmpsb or test cmpsl fs add push lret out cmp cmp jnp aam enter adc sbb incb rcrb mov sbb aam js cmpl int test sbb outsl or ja pop fwait or subl push inc hlt in pop sub int3 or into in or add (bad) cli dec inc lcall sub xchg lods cmp cld popa lahf and or and mov or (bad) mov or out xchg inc ret out pop pushf dec out pop sbb das inc fsubrp lods (bad) push sti pop iret je jle mov xlat mov mov pop into jg or sbb pusha pop dec or rcll test scas je popa sub xor pushf mov shlb mov repnz sub imul xchg mov cs add or (bad) hlt jecxz mov rorl lock lahf jecxz xchg aas dec cmc mov mov test (bad) mov cltd ret mov cmc mov out cmp repnz stos jmp mov xor jg test popa inc sbb data16 (bad) aad and fwait push fdivs daa or dec or pop movsl into xchg test add push ret and leave ljmp (bad) mov loopne or lds into insb lods or orl test divl bound and inc mov stc into loope les test repz dec dec xor or lret jl divl pop aas jmp sbb sub fdivp xor sahf or jmp jae imul insb push es pop adc lret mov mov sbb hlt sbb (bad) aaa mov xchg inc dec xchg mov in add in stos (bad) mov ljmp jmp in and lea mov xor hlt scas faddl bound jae insb test gs or (bad) cli (bad) test jp lock dec jmp ret rorb popa add int3 pop adc lret xchg or xchg or push bound sbb addr16 rolb mov dec add or push sbb pop es pop sti cmp cmp or ret mov jns outsb mov test icebp adc cvtdq2ps lock dec add popa sahf jge int3 add mov push add and mov xchg loope sarl lods fsubrs sbb fistl shrb mov (bad) into mov pop pop je xchg push bound lods hlt and add jle in lahf pop repz mov pop pop (bad) gs les movsl mov rorb daa mov out push dec adc mov repz jg adc dec mov inc loopne jecxz fidivrl dec mov hlt and std jl shrl pop out nop in xor or rorl xor push int out fs and sbb push push int mov aaa or movsl nop jg sub fcomp shl cmp dec push das xchg push in adc fsts or rorb inc outsl adc or sbb sbb push outsb pop jg movsl sub (bad) pop or fisubrl add mov or aaa imulb scas xchg out mov or movsl ficom mov out lds addr16 cmpsl fsubrl push cmc sbb lea or cmp pop loope lret out pop fistp (bad) notb call fistp adc pmaddwd sub push iret jle mov in mov mov mov mov or in mov dec and push or jle push test notb scas (bad) jne rcl shl xor fucom inc icebp dec pop test imul push adc jns dec inc mov sub mov pop roll ffree shrl inc hlt rcll add xchg (bad) mov pop dec scas jg lds mov add cmp mov push (bad) ret and out leave inc aad inc pop jg xchg test sbb ret or sahf mov xchg xchg mov test test dec xchg imul dec inc in aas jp pop mov cld jno jge int push lods lcall xor dec mov lock insb xor leave jo dec fiaddl dec push addr16 into mov jge fs inc es mov (bad) cmpsb adc xlat out xchg or mov pop inc in mov fsubrs pop aam (bad) cwtl mov adc push fisubl jp cli arpl add test inc mov xchg dec push scas and enter fbstp (bad) lock dec dec jle or mov and mov movsb add dec xor iret mov stos out imul jmp sub xchg loope or adcb sbb rcrb sub pop fisub imul xor or pop sbb push out aad test or sti loopne das jb fwait dec and sbb push mov stc sub or in lods and pop aad dec out push jbe pop sub adc jnp sub push rclb or outsl je mov xor jl scas es sub bound mov decl xlat clc adc sub xchg ss je adc mov pop pop neg sub movsl or arpl mov bound cmp ja (bad) orl inc push ljmp jns sub inc or sbb imul inc or (bad) test popa xchg iret into xchg aad lds les mov lock (bad) adc sub dec xchg mov sbb aaa int and inc xor cmp xchg or and sahf jns enter test loope adc jmp mov cmp lret lea fs add push or loopne or bnd xor aaa cmp addr16 std ret mov addl cmpsl loope push (bad) add jl inc loop lock addr16 xchg cmp loope into bnd iret or pop dec jb xor push loopne iret mov scas ja insl xchg in jb mov gs mov adc icebp dec js (bad) xchg jne adc adc xchg movsb push sbb adc test or test cmovns es pop cmp jo lahf xor xor pop and test call hlt outsl div xor clc or cmp or mov add test orl jb jb sub cmpb hlt xor scas outsb or jnp call sti pop cmpl mov xchg sub ja stos or loope loop add mov inc roll push daa or adc jno notl mov sub add or or sub (bad) or sbb or test (bad) cmc xchg dec inc arpl or out or push (bad) clc (bad) dec (bad) mov xchg inc push add out das xchg pop or xchg xor in pushf sbb push mov cmp call xlat or jp pushl add das fidivl xchg and mov cltd pop or loopne sti daa es inc (bad) mov mov sub push leave cmc or push stos push jmp xor add and or aad nop dec add call arpl mov enter and and or and rorb mov mov imul dec push fld sbb adc sbb cmc fistpl mov or aad js jle cmp int pop jne xlat (bad) enter dec dec cs rolb insl cmp out cmpsb mov addr16 loope bswap std add jno (bad) fidiv aam std outsb lock jns or pop (bad) in fist xchg mov insl stos leave sub cltd cmp pop and mov ds jno xchg dec mov or pop (bad) mov cmp jmp dec stos push jne faddp fdivrl dec mov sbb push test xor cmp sub repnz xchg mov or stos inc repz push stc mov idivb movsl inc or hlt leave nop or and cs and fcomps outsb or adc cltd in pop cmp or call (bad) and dec sti jae data16 adc mov and pop or cs sar push inc js test or dec repnz adc (bad) cltd out and dec test scas pop call sub push sub sub and icebp out aam or mov xchg xchg scas cltd stos shlb std xchg mov sti lods fidivrl out cmp inc pop lcall inc lret jns mov out push adc adc ljmp lods jg sbb loopne (bad) jmp mov or (bad) hlt jo dec arpl mov (bad) lds fildl sbb dec testl nop shll add decb fmuls test fnstenv cmp lock or xchg fild shrl addr16 xchg es dec outsl cmpsb pop or push or dec mov cltd or into fadd insb xlat bound (bad) cwtl test cmp add inc mov es jno cmp sub push inc mov lock jae fisttpll sarb repnz outsb (bad) or loop mov loope (bad) cmc cwtl sbb outsl sbb flds or negb mov xlat mov mov xor in test pop push ja mov fildl mov xchg add inc subl inc mov test stos inc repz sbb out imul lcall inc inc cmp pop or push cs adc lahf imul xchg (bad) leave loop push rcrb test (bad) dec test sub ret jo mov stos push sbb fildl ljmp mov (bad) insb or xchg cltd mov lock mov xlat xchg loopne or jmp or fsubl and sahf dec std mov (bad) insl or sub jmp cmp movsb adc push pop and xchg je push mov in in push push dec leave subl jno popf jnp nop test and mov jbe sbb daa cmp xchg mov mov adc imul or adc imul sbb mov xchg xchg xor fimull mov mov dec repz lds pusha je scas hlt jmp or into xlat pushf repz jg dec orl pop inc (bad) sub sahf inc ret shrl test scas push scas ds fwait or or add stos enter push jmp dec popa xor pop push add test (bad) jle sbb (bad) dec int3 divl not jne push jns mov hlt mov rcll xchg mov pop cwtl or xor sti pop push iret xchg jmp test scas push jge adc idivl sbb sbb aad add cmc jns cli jb mov or inc add xor jmp adc idivl push inc clc test icebp or sub jae in push (bad) or pop pop pop pop pop adc iret mul mov ret (bad) mov xchg adc es cltd pushf jecxz shld xchg shrb leave loopne jecxz,pt push insl stos xor dec mov sub test sbbl fdivrs leave rcll loop pop test sbbb pop insb sahf jmp ficompl push repnz fstl (bad) ja or imul and or insl push cmp scas pop in push arpl xor inc jmp adc std daa sbb dec or mov cmovns (bad) jb xor push lahf mov lcall repnz repnz ja jns rclb bnd dec lret or push dec loopne cmp ss or sti aad push out and jecxz xchg out pop repz or out pushf push sbb add or inc xchg fcomp fwait push rorb movsb mov inc fnsave notl mov leave pop outsb pop out lea adc lock pop mov adc pcmpgtd pop test mov mov adc mov mov mov sbb dec push test cmp lods or cli mov mov fidivrl or jbe (bad) out jmp sub xor popf xchg sub (bad) data16 popf (bad) or mov xor mov inc xor add in imul hlt xchg add inc jnp mov pushf leave rorb or inc and cmp or mov pop outsl or mov pop shrl cmp xchg lahf les add sahf mov out insl or in lods or std or fld mov dec or ja and or (bad) mov rorl push jns pop jno mov loope push or or jge cmc addr16 inc adc scas hlt mov push inc mov cmp jns repnz pusha inc jg or xchg xchg test mov dec cmp add fildll push push or mov jns pop xchg or mov out mov sti in fisttpl pop cwtl xor xchg or das inc cmp xchg sbb fidivrl (bad) popf stos (bad) pop mov leave stc cmp add sti mov call mov push popa decl push inc xor insb nop xlat cltd cli (bad) lea leave pop int3 jmp ret push pop lock or pop jns stos pop or xchg sarb xlat (bad) aam popa jae dec hlt dec push stc sti mov cmc cwtl sub fiaddl mov mov add subb or ss xor cmc push bound movsl mov ret and sub adc xor in mov mov pop mov leave inc hlt aam mov je fidivrl cli push jae arpl (bad) pop add dec stc mov cmpsl pop jae (bad) int pop mov fldcw outsb lock dec iret ljmp add dec ljmp sub xor std fwait clc nop dec dec mov fbstp int adc ja out jno jl cmc repnz and push popf push aam hlt cmp test loope or dec mov aam push dec pop outsl (bad) xchg jp adc fistpll int3 lret xchg add push mov popa jmp dec in dec cmp (bad) idiv adc int xor mov pusha add push test insl push sub jmp fistl mov or out flds dec jno cmpsl mov pushf dec cld adc push or mov dec icebp adc je pop fidiv sti mov dec rclb sub cli jae sub mulb jne out xor dec ret or in pop cli lahf or xchg add sbb and push loop dec xlat cwtl and inc push pop mov jns movsl sahf push (bad) scas sbb fidiv data16 or push pop sbb adc dec aad inc addr16 inc xor sub jl jmp fiaddl adc push push jge jp jmp add mov mov mov stos enter orb cmp cmp test mov hlt pop mov cld lods out mov aaa cld adc lods lret sahf inc push iret dec fcoms inc ss xchg xlat and dec push pop or pop mov or jns adc mov sub lret mov inc mov cmpsb or loop loope (bad) (bad) or xchg lret xchg decb or imul or mov sub pop das int3 push test dec mov add (bad) sbb xchg dec mov fs or xlat imul lret push sbb fsts add inc idivl mov mov jbe inc inc jecxz xchg call fcomp pusha ret inc (bad) and sub sub mov icebp cmc sbb and faddl cmp out and lds (bad) ss xchg pop gs hlt cmp push daa iret or aaa insb sub mov pop leave xchg sahf movsl or mul pop xchg push or addr16 fidivl inc pop sbb or or xor mov cmp dec inc or mov icebp arpl or es jmp push (bad) ss inc aas fstl imul fildl jl leave bound xchg lock out dec jbe imul leave (bad) xor add mov out pop push out out jecxz jg push jl sbb or adc or dec mov fwait sbb sub sar loop mov jo add cmc stos rorb mov repz dec pusha jnp mov popf jo add mov sub in rol mov adc jecxz clc int3 sub jne pusha push flds out xchg mov dec cmp dec mull jge or fdivl sbb sbb (bad) dec fcomi cld and lods sub or repnz call cli sub mov push push mov mov (bad) or nopl fstps in int add push mov mov leave sti dec lcall mov lock lea or test ljmp repnz xor mov ret xor and test xor pop mov je and lods imulb aad mov loope in or add mov push jns or mov insb repz insl movsl (bad) mov mov pop scas push add je repnz lods out sub wbinvd or loope (bad) (bad) mov insb out jne sti cmpsb scas or mov (bad) jmp pop negl or enter (bad) fdivrl or (bad) push mov jae or popa ja xchg sbb adc repnz psllq dec or mov or fcmove or test test sarb push or lock xchg push in sbb into lock sbb divl jns dec leave sub mov push out pop out pop sub sahf scas js mov scas jle cmp or in sti xchg out adc out pop mov mov lcall cli movsl push or jno fisubr roll add fiadd stos or xlat js sub fmuls pop sbb dec sub xor jle addr16 or out scas rcll cli int3 ja dec test xchg inc shlb sub xor inc aaa out cmp stos push inc and fisub std mov add jl jg cld push lahf gs adc rcl addl sahf shrb mov cmp add (bad) mov mov and mov pop mov iret or fs (bad) outsl lock lods mull nop or int3 (bad) or sbb sub or out pop movsl fs push pop faddp mov rcll jnp pop dec (bad) (bad) std test mov insb pop mov hlt arpl cmp cmp ret dec mov and pop popa xchg sub add nop pop push je,pn js fstpt iret repz clc and sbb loop add sbb or lahf out adc xchg push test loope (bad) rorl sbb mov aaa jmp sub dec popa pop cwtl cwtl add notl mov cmp jmp popa sbb or arpl popa push cmpsb std test mov sub orb pop out rol (bad) or or fs jmp mov lcall inc pop jnp jecxz inc (bad) sbb add fmull xchg jne or pop (bad) test fs incl push out fstps jmp cmpl repnz scas iret push xchg dec mov xor fs popf or notb leave jb dec or pushf aas mov fwait mov mov insb xor dec pop sbb or mov xchg push or sbb sub in adc sub fisttpl insb and pop jge push into adc repz push inc fiaddl jl movsb lods (bad) mov imul xchg adc jbe orl pop (bad) mov fnstsw cmp test xchg hlt cmc add mov daa dec incb test or sahf gs (bad) or dec mov stos or andl push inc mov mov jns push outsb scas cmpsb pop or clc fcompl jge popf in rorb cmp imul lock nop dec mov xor push cmp jae sub out cmc sbb notb jl pop dec loope (bad) aad sub unpckhps pusha adc lcall lods xchg jp cmp pop nop outsl (bad) mov mov mov sbb hlt out ds lret test mov (bad) (bad) into mov mov roll lock test movsl (bad) inc into fisttp jmp xor into addl fsts xor (bad) repnz mov push rdtsc or pop out pushf push inc adc arpl and dec dec stos daa mov or int std lock lahf outsb mov call dec pop mov push sbb gs mov mov testb fiadd (bad) aaa mov out in gs bnd mov mov xlat mov adc push mov out xchg lods mov or mov sahf jnp out (bad) or push push push sbb and adc fidivrl imul test or or xchg mov je int3 xchg add insb mov jbe mov xor xor adc daa bound (bad) dec mov adc jl and or sbb stos mov inc cvtpi2ps cmc cwtl and or pop sbb xchg push and xchg test sub lods xchg fidivrl enter or add jb call js daa mov pop or or mov jo dec cld nop push neg adc test cmpsl jecxz mov xlat out cmp insb punpcklwd xchg ss and dec dec ja inc repnz jno jns leave int fldlg2 pop lahf adc inc push (bad) mov mov insb imull add hlt bound (bad) xor lret icebp mov adc xchg adc notb xor pushl lods les scas scas adc mov insb push pusha js lret pop jns outsl cmc dec sub xor (bad) hlt test xchg movsl sbb jmp repnz adc scas test cmp (bad) int3 (bad) ss test xor fldcw out pop stos lret loop push bound mov aam lods xchg aam push mov mov dec pushf leave out jns cmp ret mov cmc or popf cltd dec icebp ss ficomp and mov xchg int bound inc jmp sbb popa dec decb mov scas imul test push aam pushf mov dec pop out or dec imul ret sbb sbb hlt xchg push pop or mov add test je div dec pop sub and scas fild repz add jp dec mov fxch inc or lods (bad) out cmp lret jg push aam pop jmp or xchg jb and jno mov int pop out cmpsb sbb das lret mov or scas sbb adc or xor xor std pop insl (bad) add and xchg pushf mov fdivs rol int3 xchg test push ja push test cmpsb fldt jmp or add and or and or shl shlb or clc inc lcall add push inc lret or testl pop insl pop mov mov xchg or std pop leave pop jno imul scas push xchg sti jp xor (bad) das adc dec mov roll stos ficompl pop test mov dec cli rcll pop or xor push in adc mov test and cld test add test movsb sti jns sub int test push mov (bad) fs push mov cmp push push sbb pop fisub xchg jae insl mov push xchg dec lea je push cli imul icebp arpl jno or xchg mov push test pop repz fistp faddl arpl sbb fstps into push sbb (bad) jne xchg jbe jns adc or or xchg jge or mov repz mov inc mov xchg mov das push lods adc xchg xchg xor lds add push loopne pushf sub nop stos or mov sti xor divl or das loop popa push (bad) xchg stos inc ret movsl into jbe ss or test xchg mov or (bad) (bad) cmc in lock (bad) or pop loopne das lret mov imul and and fmuls ss fs jg adc inc cmpsl and sbb movsb xchg cltd fs lods xchg mov (bad) fiadd fimull push lock repz cs mov imul pop dec hlt dec dec or fst cmp call cwtl xor stos push loope xor push movsl arpl or cmp mov repnz mov (bad) inc inc rcrb push jl pop fistp add push and or fwait arpl std mull cltd test lcall push adc inc sub mov mov popf les movsb (bad) or aad or adc lock pop movsl fimull xchg sbb in and sbb loopne adc add dec dec mov fwait rorb stos rcr int3 inc mov test sbb jb or fs sarl out jl lods jnp test and push or pusha (bad) daa cmc lods xchg cmp sub test decb push data16 xor es and mov pcmpeqw mov push negl mov mov lahf in cmp push pop jecxz pushf fdivrl rol jmp bound pop or cmp or loope or push pop ret shll push ret out fimul mov or sub jecxz popf mov dec push int3 (bad) mull ds xor gs pop in or jecxz xchg or loope popf imul pop enter in or (bad) mov or fdivrs data16 add sub into mov dec out mov mov in cmp sbb in pop or pop jnp or fnstcw cltd pop fisubl lea stos out sub or roll iret or xor or mov test push xor popa dec jns gs clc or js or sbb outsl jne add out vminpd insl sub fisubrl xor test add lahf jmp sub cmp ljmp and adc test xor push fwait pop xor pop fwait test gs xchg and inc mov test or and ljmp ss add negl daa sbb leave cwtl in inc sti push cwtl pop push enter adc lock pop fsubrl xchg xchg or shll or shrl int3 push dec jae out lods orb jbe jp sub and or sub or add xchg cmp loope and add shrb cmp mov mov cmc imul jge xor adc push cli fildl repz fnstsw mov aas add xchg or and fbld lea iret sbb sete shrd aad dec aad stos sbb mov data16 and leave jl fwait or pop dec ljmp pop aad lock cmp fwait (bad) dec and iret xor leave insb stc aaa in fidivl or sbb mov or inc lods addr16 jne cmc test pushf adc rorb sti jg repz icebp lahf mov or mov jg lods dec lret out hlt pop std or std jo push xor xchg int3 (bad) out insl add jge and fistpl data16 or xchg das xor std inc push icebp cmp push dec fildll jmp jle stc cmp test insl jns mov negl adc movsl sbb lea mov repz ret adc mov pop dec mov jge sbb imul cltd (bad) imul je stos repz dec daa push xchg adc loopne jmp stos stos dec std mov test push cmp inc sti addr16 scas adc test cmpb adc test sbb xlat out out or fsubrl out push mov xchg rorb subl pop (bad) or lcall cmc adc dec mov xchg push or jg add icebp mov sti gs or jno in or aam sub je pop dec inc and bound or sarb mov shl in leave leave jne mov jno lods sarb loope das sti or (bad) leave xchg or sub push add jge stos and daa xor jbe xchg xor ja inc dec or loop dec or fnstcw out add jo adc inc inc or js inc push adc lock mov lea mov ja xor add add psrld into mov orl inc jno cmpsb sub movsb mov push rorb inc jbe cmp adc or bound scas repz in mov pop dec cwtl xchg dec sub dec and out sub test xor cli cmp (bad) lock and xor decb add outsb sub or xor cld mov int3 out in sbb dec cmpsb das test arpl add mov sbb dec shrb sbb jne pop sbb xor pushf or push es or push sti jno add mov int loope in out pop or cmp xor gs ss push mov arpl outsl sbb mov mov cld imull movsb pop cmp mov and add int3 or lcall cli mov mov lcall add cli pop ret mov rcrl xchg in jo mov and dec or negl mov inc ss pop sahf pop aaa or repz mov or dec and bound mov inc std mov shlb xchg mov cmp daa jns mov sar mov mov or mov xlat inc idiv (bad) js std lock lahf jmp aaa ja jl leave or js jge or out sbb dec cmp push or arpl leave xor pop stos and outsl jg mov cmp into stc xchg sbb scas mov (bad) outsl mov mov outsb jb jnp arpl fsubrl push adc int3 inc push mov or out loopne leave or nop cs lret das xor out aad jmp and pop dec inc dec cmp jge int ss sbbl popf stos imul sbb stos mov int sub stc add xchg and ljmp pop or ss cs sub adc (bad) dec (bad) adc add cwtl mov adcb sbb mov cld ds jmp sahf std notl xchg jp push sbb or xchg jg pop xchg pop fadd mov pop add mov test jb add sarb mov push fildll cwtl jecxz outsb push repnz adc add dec add pop dec adc lods pop adc outsb arpl mov pop dec int mov hlt fstl das and inc jae icebp gs jl jecxz movsb dec aam hlt mov mov inc xor lea mov jmp pop adc in stos mov scas dec push pop jb adc cmc cli jp inc ss dec inc mov inc adc and mov pop mov testl pop mov aas int xchg mov sub mov movsb dec rcll mov xchg icebp stos int imul rcll push dec xchg cs push enter (bad) xchg sub daa sbb movl jmp xlat std and push and jge pcmpeqw loope add cs push dec ror (bad) repnz jno mov fldcw inc mov sbb (bad) push fidivrl ja adc cmp push bound mov stc sahf test into mov pop fisubl jns add flds dec jg mov mov mov out mov add jl mov or mov std mov das jns (bad) clc lahf sub dec (bad) xor sti xchg jge fstpt and push test lock adc push pop rcrb xchg clc or lret push lods lret adc pusha movsb dec xchg out jnp push sub addr16 in xchg jne shll (bad) insb or xlat aam hlt sub xchg (bad) xor mov cld addr16 rclb iret pop xchg sub jmp rolb xor addr16 mov dec icebp lock fistl jmp orb or xor sub das jle inc mov pop mov push shll ds call adc jbe jmp jno lret adc push popf dec adc push cmc xchg (bad) mov call in fimul mov aad sbb pop jno and inc inc lods adc xor jge sbb ljmp negl cli je pop jo xchg jmp imul aam and bound call jmp push and fidivl cmc sbb push jb pop adc aad outsb sub dec fidivl jno xchg mov daa and push push jl xor in testl das nop cltd push sarb sub mov adc adc shl add push push adc or data16 xor stos push or pop pop decb jo sub test xlat js and push (bad) into inc es jae jl decl xor jecxz or leave mov fldl jb sub aad es sarb movsl dec push mov fdivrl xor fldenv jno stc addr16 in mov xchg aas jns cmp adc mov add repz cmp cmc jno in gs xor cmp gs jne jg leave insl dec inc stos call xchg mov mov lds cmp aad lods out xor insl lret pop dec add cmp lret (bad) repz in (bad) repnz cli scas sub in lods pop out frstor push dec insl push jge fsubr or addr16 (bad) cmpsb inc imul push mov jmp outsl out push cmp insb mov (bad) fnstcw mov cmp cmp es cmpsb sbb das jns and test ficomp test dec xlat sar or inc mov stos into push pop pop adc xorl repz or cltd pop pop or loop int3 outsl push stos imul xchg push and or sub es lret sarl ficomp add adc adc push mov repnz shrl jmp sbb lahf loop or pop mov mov and enter or jmp mov xor js mov imul push or (bad) inc or pop lods cmp imul jno inc push popf inc pop or mov jmp aam hlt and cmp sbb mov js or push jnp inc xor xor adc fdivl (bad) or inc jle and rcrb pushf mov cmpsl push enter dec or xor mov or jns pop inc or and cmp mov mov dec and scas xor movsb pop fldl jge sub in imul add test inc jns mov xlat push test bswap sti mov cmp movsb hlt loope lret pop ja popa mov sahf cwtl mov addr16 jl lret or jp pop or push test mov mov jg mov xor incl nop (bad) into mov adc outsl xchg or lret sbb lock mov xchg xchg test adc xor movsl sahf mov lds jb,pn je insb or add cmpsl or mov push hlt and push sub scas in mov adc xchg push inc jmp inc adc lock mov mov sbb lcall orb jl loop mov pop cmpsb pop sub adc push std jo loope cltd sbb js aad mov aam inc mov rclb push dec lock cli lods je jle ja loop insl mov dec int dec lahf out mov or (bad) sub enter fdivp xchg (bad) xorl dec push cwtl jno xchg fimul inc mov pop scas dec repnz cmpsl dec (bad) jl je sub lods aam xchg push xor mov push or mov cmp cld std xor adc outsl adc pop adc stos dec inc push stos idiv cmp sbb push pop xor mov mov out bound cltd or cli push jle loope mov scas push xchg mov lret fs mov loop ret cmp dec (bad) xor das je adc adc adc adc dec mov adc sbb loope jbe lods xchg iret test inc pop out scas push push add mov out in daa repz fdivrs pushf xchg add movsb add lahf xchg jb stos into or ss call cmpsl dec jle add leave jno xchg es test ss adc in aam xchg lock add mov or adc popf adc mov sti cmp push arpl or loop aas movsl inc push cmc adc add enter adcl sub mov xchg cli cmpsl (bad) mov or lret test idiv shl pop imul pop xchg jb adc cmpsl sbb fwait imul mov push leave repz (bad) mov adc cltd negl mov jno adc or cmp lcall mov dec xchg notl stos xchg pop cmp xor sub mov dec sbb icebp arpl addr16 (bad) pop lds int3 cmpsl sbb dec jno push jecxz out adc sti push mov pop ljmp fs cmp or mov mov lods mov sbb push fsubrl ret dec add dec adc mov popa push rolb or not inc (bad) mov adc xchg test (bad) aam dec aad adc std rorl (bad) jb and (bad) loop scas (bad) jge mov (bad) push and mov jl fs pushf pop aad xchg sbb add xor jl call bound sbb pop shll sbb sahf pop sbb push add mov or rcr les loop hlt dec dec xor lret or and in dec lcall int3 mov (bad) das hlt jecxz or add xlat sbbb daa adc je or push or fs aad adc or jo mov cmp testl sub sub fist xor jb rorb jge or and out or xor rcrl xchg bound int3 je mov aas adc clc std xlat dec sub fabs cli jmp or add sbb int (bad) (bad) dec or push popf mov subl xchg sar mov test dec test pop leave std and cmp inc scas fs outsb mov cmc and cmp and fnstcw jl push mov incb cmp mov roll sbb pushf mov and jmp leave xor and cltd or mov mov cmpl or pop cwtl pop insl divl frstor jno add (bad) jbe or dec daa jle (bad) or in lods loope movsl mov insb xchg add imul xlat movsl xchg dec test fwait push lahf and lds or or inc xor in or arpl fildll leave mov je test cmpsl or mov in lods mov pop fnstenv and imul adc push mov cmp inc adc out daa or xor lock or mov test fisttpll int3 cmpsb ljmp jae jge addr16 dec enter dec fimul test add popf sbb cmp jnp inc xor push rcl push and mov ret mov ficompl leave in in or loopne xchg mov cwtl cmp leave or and xchg lret or dec add pop and pop or stc cmp mov leave sub dec lcall movsb xchg outsl or jno cs cmpsl or cmp mull or adc sbb (bad) xor lock pop out fsts sub sahf dec mov in call mull or adc mov sbb cwtl sbb push push pop in out shrb jle xor clc or dec or leave adc insb mov inc adc stc cmp or pop mov jno (bad) mov jo subl mov push dec push and or (bad) aam leave xor or dec xchg pop pop jecxz jns cltd dec hlt (bad) cmc mov aaa sbb and out fs ficom sbb lods repnz std cltd mov hlt into idivl mov stos add or push ret (bad) mov fsubrs cmc popa adc or jb adc subps shr popf jne outsb mov test sbb test and push jg aam sahf cmp lods add dec sbb aas cmp ror push rorb jno mov mov pop sub xchg or and movsb push (bad) mov sbb cmc pop jmp or sar bound enter ret stos push sbb (bad) adc out sub sub push xchg pop ljmp sbb (bad) jb aaa and loop out push aam sbb jns dec negl out cmc inc adc imull push (bad) jecxz jp arpl or xchg cmpsl das inc xchg fdivrs (bad) cmc movsb data16 sbb outsl repz pop sti stos bnd sbb push mov movsb stc test adc inc jbe and fstps mov add jns xchg les addb cli (bad) cmpsl negb scas lea ljmp fprem jns in adc arpl add xor sahf sbb imul mov mov mov aas aam xor in dec data16 push mov stos or mov jne call adc jb mov inc test or push stos lock mov add test shlb movsb xchg adc fcomps or xchg pop int in mov out jnp cmpsb js popa repnz divl dec test sub stos stos or mov lods test sarl jl xor mov push cli leave push mov xchg sbb daa jo movsl add movsb enter lcall xorps xorl mov jb es lret stos pop or push lret xchg or (bad) (bad) lods and adc cmc and push shlb sbb icebp mov js outsl pop ret or iret mov gs jp stos adc test and in fildl fstp imul orb ret mov sahf cmpsb jnp push les or jbe sub add cwtl push mov aaa lods mov jb pop inc or cltd cli inc rolb push cmc ljmp xchg cltd pop xlat scas sbb je (bad) mov adc idiv adc jp das mov push outsb mov xchg rorb mov std sahf inc les adc inc dec popf stos or and aaa lods fbstp out (bad) leave incl aad inc xorl aam sub sub into xor aaa mov je popf cmp iret inc xchg add jne and jns xchg dec ss aam cwtl adc decl jne mov cmp push or jge push jmp add mov aam sub push lahf add cmp (bad) xor and or and stos outsl mov push and testl or (bad) mov sbb mov push stos dec fwait pop mov out mov loop (bad) sub jecxz outsb cmpsb dec or addr16 mov jnp lods hlt push cmp dec subl xor aad xchg fdiv and sbb in fmull outsl mov sbb cs scas insb sbb outsb divl jno xor add add mov push popa mov push dec insb inc push pushf or add mov lods aaa pop lock lods or or test mov cmp adc (bad) sub pop negb push add xlat adc (bad) out insl imul call or sbb inc adc test lahf mov bound hlt and adc aas sbb ss pop ds adc pcmpeqd stos test push xorb mulps mov or outsb adc mov (bad) xchg jae out jno mov sub or loop sbb test xor fisub sub out aam push sbbl push mov fs hlt pmullw mov sbb sahf mov mov sub insb mov add add movsb hlt aad or call jmp imull scas or movsl adc xchg sub and test arpl adc sysenter inc xor jge pop cmc jno rorl or out xchg test (bad) dec add stos sub in (bad) pop inc daa in cmc pop sti inc xchg test xchg lea mov rorb mov dec shrb (bad) pop call incl add or dec aad fdivs sub or inc nop dec ret pop or push lcall es sub js test or into or xchg js iret pop movsb aam test adc scas mov dec or imul ficompl mov pop test lret or lea orb (bad) push adc push jno or pop aaa sbb or inc sub fisttpl bnd out jne mov push lock das out js add aad pushf repz and sbb jl hlt fcompl loop inc popa mov out pushf les insb (bad) jecxz incb dec or mov mov loop gs jns pushf out jmp stos test inc jno or iret lods flds ret fs xchg or in cmp mull or (bad) or enter cld or mov fidivl and xchg or jo jmp or fs repz add sub int3 xor lock or cld ret push inc mov mov cmp test pop xor aam mov pop mov cmp (bad) jae mov ss mov lock inc (bad) cmpsl lahf push add imul mov mov icebp push jle mov in inc dec push mov push (bad) adc out jge std inc out stos cmp lods shrl xor or cmc sub inc or addr16 imull insl adc call cmpsl mulb add jl ss lock (bad) cltd jno insl fnstsw test jo test jo jg dec xchg dec mov xchg dec mov jmp fwait or pop jno xchg imul int push ret or add out packsswb mov (bad) mov in pop sbb jbe fsub or scas jl lods stc mov insl fsubrp and adc jae adc ror inc adc sub cmp adc dec clc call jmp cmc mov adc movsl adc add sub add push xchg in ss lods xchg ss shl mov and cli movsl ljmp xchg adc stos insb sti sub cmp push sub push xchg leave mov bound outsb cmc adc out (bad) cmc adc mov (bad) leave xchg sti insl cmpsb xchg inc mov fndisi(8087 (bad) jmp dec pop pop lods lock idiv cmpsb sub popa mov push inc test fcoml add aad sub loopne xchg push dec mov mov repz fstl fnsave add rcl std cli mov ret push inc jno mov mov sub faddl cmp mov es inc int3 ja adc xchg loop mov push into ja xchg xor jmp sub mov or test mov outsb jno,pt andb cli out das adc or dec jno dec int jns dec stc dec xor stos adc lods inc ds jmp mov addr16 fiaddl shr loope cmpsl bound jmp ds cmpsb adc mov cmpsb fisubrl cmp (bad) or sti jb (bad) hlt cmp pop pop adc popa dec dec mov stc js xchg sti fidivrl gs nop jle add arpl jg jbe leave mov out jmp mov cmp shrl icebp xor inc jno bound push int in and add adc cmp or adc sub jb sub dec aam bound (bad) mov in mov cli aas inc (bad) pop dec aaa jns scas (bad) shlb imul scas push jecxz lods jno xor pop cli add xor cwtl push push cmpsb (bad) or repnz dec xchg sbb (bad) gs cmpsb addr16 sbb loope lock jle roll mov cs hlt and mov mov dec adcl jno add cltd idivb push mov xlat sarb pop adc mov pop lods outsl or mov cmp xor fisubrl add jl adc push lcall sti dec pop dec lock aam sub xchg test adc adc jle xchg sbb cmp push xchg scas dec mov jno adc jle (bad) jne fs rorb push mov cmp dec or adc std loope jecxz mov insl push xchg lret xor cmpsb inc jg (bad) nop xor (bad) or and push (bad) fisttp add mov pop adc dec call mov in or add call test lcall xchg scas xchg (bad) mov cli ljmp outsl dec popa fxch fs sbb sbb xchg pop or add iret or aas inc xor lcall or ficoml les testl pop stc fs dec cli loop mov mov sti or roll fidivl sbb outsl pop add sub out jnp pop dec loopne dec mov xor or repnz and mov and or mov mov cmp lahf push jecxz xor or adc mov cmp test in lahf imul call fcoms push inc ds sbb cmc or dec xchg push pop imul cmp xor ds hlt insl test movsb rorb sub or faddl (bad) mov jbe stc sahf aam mov dec leave lret sbb cmp jle sub adc imul hlt into int (bad) or lret cmpsl mov push sbb mov adc push loope or in mov (bad) ja ljmp leave fldenv pushf xor push (bad) and imul fisubr xor or movsb xchg inc aas or adc cmpl jp aam jb,pn call sub or faddp shrb rorb cld xchg lret pop fwait aaa in xchg inc (bad) mov fs loopne test mov fldenv cli pop repz sub or insb push adc fldt xlat scas imull mov pop out or push push daa sub cmp pop lea pop pop idivb xchg add jbe and (bad) or out test cmp or and mov (bad) jb es insb xchg push cmp cmc add sahf aaa pop jecxz dec xchg out cmp mov cmp or push add or dec dec adc push jmp ljmp mov mov push addl sti mov sub fidivl imulb xorl or xchg arpl dec pop dec outsl or push cmp mov icebp push imull mov pop (bad) adc stos sub add jecxz xchg fstpt cwtl xor jns (bad) mov adc cmp mov lret (bad) or daa cmp dec jns or xchg xchg dec shlb or gs push jne dec or fs outsb xor loopne movsb mov lods cmpsl (bad) adc fsubl cmp mov adc lds pop shrb and mov xlat aad rol mov pop dec or pop push pop or (bad) mov xchg out jecxz push bound mul cmp push and lret in dec xor sbb test xchg add mov in and fmuls xorb pop or shll in cli aas into mov leave inc jge je imul mov add fs adc xchg push mov cmp sbb mov mov xor and adc add (bad) sub stos repz dec jmp adc mov data16 mov insl test mov or ja add cmp push sbb cmc jno or sub enter in (bad) icebp xchg sbb jmp rcrb imull sub mov push inc add in out movsl adc hlt negl cmp loope push stos inc xchg jb cs (bad) push ss rorb cli je or aas movsb adc ljmp or fnstenv or test je inc pop adc (bad) out or ljmp leave mov inc sbb (bad) jl jne fs data16 sahf push xor in incb mov and out fstps mov adc lds lret hlt icebp push movsl dec test lods jmp (bad) ljmp fldenv cmpsb mov lea push adc dec push add dec and repnz cld pop xor or and mov adc aad add neg insl loope dec inc rorb lret or dec and int or adc add cli xor push das mov cmp or push leave es and dec mov push imul mov subl inc clc cmp adcl push out sbb mov loop mov in ds mov (bad) repnz movsb or and insl dec je jge push movl xor mov mov js push pop adc mov aam (bad) leave loop dec add push (bad) enter xor or je pop idivl xor cmp push jae in or sahf aaa in lods cmp pop sbb das or dec test je pop mov pop imulb rol inc mov cltd inc dec out mov xlat aas or cld rorl testl mov pop mov rcl mov es push test fsubrl or pop or popa sbb lock fcom sarb mov cmp loopne jmp in sub xchg cmpl pop mov out flds sub push or inc jecxz jnp aam sbb push or out cmc push (bad) out hlt bswap mov cmp sub cmp or cmpsb inc mov xchg push cld das fimul or jge fwait sub das or add pop xchg push addr16 push or xor fiadd jo add js rclb sub pop or pop test clc fwait nop and aas and adc cmpsl mov jg mov popa aam and adc imul fistpl test xchg in or or pop and fwait lods mov nop sub hlt out mov xlat (bad) enter mov pop (bad) cli fstps fsts inc scas cmpl pop jg push mov inc cs or daa pop mov add mov mov push xor inc pop dec mov dec or inc sbb clc mov xor cli stc lods jmp jne (bad) cmp outsl pop movsb xor in movsl sarl je das mov lahf dec lock inc in xchg pop fmuls imul fisttpll cmp jns test mov arpl cmpl push lret imul mov iret je lods mov inc sti push std inc dec aad xor inc pop repz adc shll stc repz cmc jecxz sub ss and xchg xchg cmc pop mov xchg lock test in dec cmc int dec xchg mov lahf mov cld fcoms fisubrl mov jo xchg xor loope cs dec das and cmp aad pop leave push movzbl movsl inc gs loop daa in adc mov mulb scas and fbstp sbb xchg mov or or mov in ljmp clc fstpt jns lods pop gs in or xchg dec dec push add adc mov inc add dec adc mov lret jge imul nop out stos and or outsb xor xor xchg std push fs adc ror loopne subb pushf aam inc or ret stos test or mov idivl fisubrl fld1 adc sbb cmp xchg std mov cmp lret fimull adc (bad) ljmp mov jecxz sub movsb pop ficom lcall push sub (bad) sub inc ds iret or sbb lahf or shrb mov add (bad) int3 push dec or adc sbb or sarb or fild lcall push push flds sbb cmp mov jbe jp ss or mov dec enter imul in mov cmpsb inc shl mov testl lods cmp idivl push push lock fcoms push mov popf jae rorl pop fdiv mov stos sti clc or notb repz pop iret rol mov mov push xchg jg jns dec xor test iret adc sahf or (bad) xchg jecxz inc jbe cli jae add or adc fisttpll or or inc xchg xchg cmc fnsave stos add daa mov xor iret dec into imul (bad) ja imul in pop gs pop (bad) idivb sbb pop jl fidiv mov (bad) mov xchg pushw mov bound sub insb in pop xor in movups movsl arpl or cwtl mov or jl das out push lods les sbb pop or mov das arpl fisubl (bad) dec push jae pop mov data16 in cmc mov dec adc jle jo mov lret dec and fild loopne or xor popf cmp jl pop pop mov shrl mov jbe into mov stos arpl outsb jb loop inc (bad) lock rcll jmp pop xchg fucomp test (bad) insl mov mov insl insl pusha or xchg push or mov pusha mov into dec push pop fwait test inc pop (bad) jae xchg (bad) push or addr16 cmp xchg pop jo (bad) clc inc in popa cltd or dec jmp sub imull inc test or mov jg in or sti xchg mov das je push cmp pop (bad) xchg or ljmp cmp or cmp or lea mov jbe (bad) je pop shrl ljmp jne jge dec push add cli iret xor in leave cld lea (bad) xchg xorb fwait mov xor and adc add and scas loop out ljmp add sbbl (bad) dec insl push inc mov arpl (bad) iret lods adc dec lcall fidivl mov repnz sbb mov jo int stc cmp or fwait mov repnz dec push ss hlt shll push and jl (bad) or stc cmp ljmp pop inc (bad) or je fisttpll ret repnz sti mulb out movsb cli inc jne lret jecxz stos js cmp inc rcll roll lock sahf adc sti mov or out fcmovb adc cmp xchg adc rclb jnp cmpsl push sub nop lcall jns out pusha dec sbb imul and testl cmpsb add mov out adc xchg (bad) fcomps sbb and aas (bad) icebp xchg xchg test pop pop fisubrl insb leave out jmp add or icebp out test pop sub jmp sub aaa sarb sbb out test lds test imul aam cmp dec lock out adc push shll loop jecxz cmp mov xor or xor into mov rorb ljmp shlb sbb inc mov inc bound jecxz push dec cmp sbb lock sub sbb pop sti cmp lahf scas cmp out or and sarb mov cmpsl test jle insb sbb mov pop mov fist sbb jmp or test jecxz rcll xor pushf pop lock test mov pop dec dec jmp sub adcl push mov cmpsb sub outsb mov cmp jmp incb aam mov imul xor inc stos mov dec test stc call adc cmp mov inc (bad) mov dec xchg test adc loopne add or cmpsb (bad) pop jbe lds pop (bad) movsb adc or int3 push xor fs lret xchg movb rep int test jnp add or pop daa cmp ffreep rol sbb incb test aad sub or cli fs xchg or insb cmc fdivs loope sub and aad push lods cmpsb jle out test fs or add inc sbb int or mov lods fwait mov divb push or popf inc aaa insb pop inc out xchg test push or adc mov sbb xor jo pop insl mov pop aas sarl and dec dec and xor xchg or lcall dec insb jmp aad cmp adc adc pop jnp (bad) dec outsl xor and std loop xor es jp (bad) lahf fisttpl pop mov sti cmp adc jmp mov add xchg js xchg or lahf out mov and lcall cmp jp or dec repnz lea push rorl dec or orl repnz xchg dec lock imul push or and (bad) fs je cmc cs inc mov pop aas xlat or sar push mov gs or mov jle leave push or or xchg rcll in or sbb dec fimull push testb or loopne out ds stos leave cmp or into (bad) or (bad) xchg out pop scas stos pop stc cmpsl popa divl es movsb leave pmullw adc pop cld add mov test and dec aaa (bad) ja insl outsl add push push inc add flds icebp jb mov in (bad) jecxz mov or adc or insl into pop ret fwait cmp test fnsave inc or mov mov add or das sub aad inc push scas and and lcall pop (bad) out push mov sub imul cmp ret jbe imul jbe mov jge or loop (bad) adc jg fisub mov aas clc sti dec ja cmp dec fldcw xor xorl and ss testb jns push or in or (bad) mov dec jns addr16 jns jecxz das sbb adc jecxz add mov repz jp loopne dec jmp test dec xor pop ret inc leave sbb scas orb jmp inc jo je das ror jbe and jb repz pop dec je xchg mov fmull sbb dec test push cli cmc jmp adc jmp aaa jmp mov addl in xor xchg sarb gs jmp dec push push addl sub stos or jle fcmovb mov push pop addr16 push xchg out xchg imul adc mov (bad) cld je ja push daa inc loopne lock dec test mov xor cmp rcll int3 pusha sahf gs movq dec rorb add dec dec adc mov out in sbb mov jbe movsl dec ja imulb inc scas jns,pt aas jl call je cli ret mov adc inc xor push adc mov loop push ds loopw test inc lcall dec xor mov (bad) mov mov pushf push test dec cmp (bad) or xlat jne fdivs jge mov or daa dec sub or stos and or fildll xchg enter cmc dec and pop pop out cli mov xlat cltd cmp fnop ja popa loope stos (bad) sbb or (bad) jp sbb lcall cmp shrd mov or sbb adc fisttp inc (bad) cmp test ror ficom imul shll jnp loop mov cmpsb sbb add bound popf inc xor scas inc dec or rclb sbbl lret in shll mov leave sbb ds (bad) lods xchg push cmp ja jne or int or inc jae mov and dec (bad) fidivl inc adc xchg icebp lock jge outsl or imul dec sub sub jae push dec jl add mov mov lret jecxz pop (bad) (bad) repz rclb (bad) shlb bound loope mov adc add or jnp jg jle pop cmc out cltd repnz sub es cmp ljmp stos dec (bad) lea add sahf mov inc jae mov stc cli fs cmp pusha (bad) mov and or push std sub mov add and cwtl fdivr mov mov test mov jecxz icebp arpl pop je pop sar jae cmp or push and lods enter or test test cmp mov ja dec inc in (bad) dec or lahf dec cltd mov fsub mov sub sbb or xchg push cmp popf mov packuswb xor into out or icebp jns mov outsb jo (bad) mov add or pop out or cmp (bad) push inc loope pop mov adc mov les mov or jl div in cwtl dec test ret sti fsubrs mov stos lods aaa es mov mov mov mov xorb or jns jnp jne sti xlat insb and (bad) daa flds and test cli hlt lcall pop mov adc dec sbb xor or or test inc xor push les jo ret mov mov or or sarl sti out xchg leave xor notl out insl adc jb xchg or pop dec stc add ret loope fcomps mov pusha jg mov or push incl icebp or jle mov lahf ljmp pop sbb shrb iret lds loope xchg insb das sub ljmp push push or lods push dec enter cmp mov sbb dec sbb (bad) xor mov repnz or aam pop idivb or mov pop jnp push dec mov jae xor xor loop (bad) arpl rcrb or jl les xlat sub call mov leave adc sub leave mov sbb push btc or ret cmp dec inc mov imul sti daa pop mov aas xchg xchg sbb or cmc dec sub add pop xor or inc insl or aas in mov mov fs (bad) (bad) mov repnz add out frstor icebp lret mov dec enter (bad) add lds aad orl jbe or leave xor mov adc je sti jmp jns cli sbb xchg fs and dec push lahf ljmp rcl pop or out pop add imul sub inc jmp daa cmp cmp cmp or sub movsl jno scas adc repnz mov std test jp mov stos push in cltd fimull loope mov mov sti xor (bad) lret sub jb or outsb xchg push cmpsb jge mov dec cld out mov test jp or lods (bad) testl or mov inc sbb imul les in xchg stos sbb lods js incb loop gs fdivrl xor call in leave ljmp add mov loopne xor test (bad) push adc lahf imul data16 or pop add mov daa push lock pop sub movsb test ja loopne jo add cmp imul or mov xorl cmpsb mov mov imul (bad) dec rolb or adcl sbb stc jnp jp in cmp sub or repnz or ljmp mov shrb jbe mov les orl popa push popa mov cmp js inc sub aam or out add arpl in ss call rcrl xchg mov push or (bad) mov push mov inc shr movsl adc movsl ficoml ljmp mov push push cmc jle pusha sbb push sub bnd iret ja xor and xchg cli dec adc imul scas dec or lret push and dec jle (bad) in sti test addr16 scas movsb mov adc je popa push jnp lock add ret adc pusha test (bad) pop out xlat insl cmp xchg cmc sub push rcll inc dec mov dec pushf xchg rep jno inc xor cli jge adc push xor dec daa insb fsts fisubrl jo es or cld in (bad) (bad) notl test movsb iret cld adc mov inc push (bad) sahf xor (bad) fisubr imul dec int3 les xchg or insb xchg mov test xlat int aam or sub xor mov (bad) ss dec jmp xchg pop (bad) xor test pop or cmp push out adc add in rcr fmull mov jns popa iret outsl je sbb sti xchg and push or mov or les push inc insb add or cltd in dec rol jno sbb adcl mov sti lock mov mov je or popf xchg inc scas push mov icebp and add lcall shr in clc sarl scas or or mov jbe add and cli xchg arpl cltd or pusha push sahf test mov movsb lret pop dec adc or sub mov and imul sub lret ret jno inc or lds mov js hlt dec push test clc mov pop sub fbld jnp cmp stos xchg cltd mov aaa loop mov lret ja orl xlat adc lahf dec or or xchg out push loop jle pop popa mov sub dec dec ret cmc arpl mov dec jge (bad) aaa mov sbb mov cmpsb inc sbb cmp adc mov es (bad) lods test out mov jge out enter mov jns adc push sbb addr16 dec fcmovu pop cmp les adc dec dec or jo pop cmc push mov test mulb rclb or xchg sbb lret into pop sub xchg (bad) or repz or xchg xor mov pop negb repnz add xchg jns repnz test or mov imul or dec ds (bad) fisttpll fstpt mov mov in or mov jle repnz scas xchg cmp call mov or inc lock insl mulb adc movsl sti clc sbb cmp loopne decb mov pusha xchg shlb xchg scas das cmc repnz rol inc xchg sub insb sbb or into jp leave adc mov mov lret mov jl ss and or add push cmp dec pop or stos fucom and or stos push push or mov cmp xchg push incb loop add mov dec and lahf xorl mov outsb sbb xor push insb loopne mov xor fs sub jp xchg add inc fsubr enter dec cwtl cli and ja pop dec inc mov mov aad out fild xor or and pushf daa push mov or and repnz data16 and push movsb or (bad) repnz int3 and sub cmp and or add shrb pop mov into gs outsl sahf mov mov xor adc push xor pop stc ja dec or les adc lods jnp sub mov (bad) pop int3 or das cwtl adc sbb xchg cs xor xchg pop fdivrs bound fdivr shll inc test in push popa enter or test lds mov fimull sub push pop sbb mov cmp or ret jmp mov xor popa js addr16 jmp and adc cli or rcr ret mov mov vmwrite push inc movsl push or add push dec xor xchg lcall xor sub popf lock and sub pop mov lods cmp add out sbb dec dec sti lods or mov jl rorb xorl ret (bad) cwtl xchg or lea pop clc pop or mov pop (bad) xchg xchg aas lock in rolb decl sub or mov or or testb mov push (bad) or dec add inc mov addl jmp outsb inc dec jmp jl dec xor inc sbb add lods mov or xor mov mov lret cmp add sti sahf imul cmc lahf push scas dec push pop push cwtl fcoml pusha jmp jmp cmp popa pop mov sahf data16 (bad) bound inc out dec enter sarb mov insb push xchg out divb jbe jecxz or gs pushf fmull dec cmp pop sub dec (bad) neg call (bad) cwtl add mov icebp sub fisttpl dec mov lods add or popf push popa or and aas and lret mov cld test fidivrl mov mov fsubl daa ss and fbld cli jmp out xor pop xor adc movsb inc adc into xor fidivl call fidivl fstpl dec scas ficomp adc stc push pop test fistp mov add add or mov stc lgs dec gs aam fnop xor sbb scas sub outsl test lret dec push and fiaddl sub push ljmp or dec mov or loopne sbb outsl cmc jnp decl mov inc or mov adc dec mov adc and (bad) cld (bad) mov out mov or sbb jecxz mov jmp or pusha add adc mov mov jns int shlb sub cmp jb mov jns test frstor (bad) push aas mov (bad) jo dec mov jo add jle movsb neg xchg loop jbe jle bnd in ja adc std cmp xor mov outsb mov fidivrl stos push jle pop add pushf jns addr16 std jb lock pop icebp in mov xchg (bad) cmc (bad) scas inc mov jecxz xor adc repnz xchg mov in push mov push mov or loope (bad) jne enter outsl sahf fwait mov imul in out add jbe sub cwtl and sti stos jp sbb pop or je call test sti sbb sbb cmp sub mov imul lahf adc cmp int push in push add mov or test int3 (bad) and xor dec imul add movl cmp leave mov jbe ja adc or sub push cmpsl xlat mov imul std push pop fisttpll int3 mov movsb xchg mov pop call fcoml sbb orl jbe xchg (bad) imulb dec add push add cmp or or dec adc lock pcmpeqb (bad) outsl sub movsb sbbl jns out les cmp jbe rcrl js clc (bad) mov add xor sbb (bad) bnd xchg xor cltd fadds repz add scas pop leave das dec dec test hlt jge adc jbe cmp mov jmp or rclb lcall push loopne repnz (bad) mov sbb or rclb loop (bad) fidivr add ret les push out insb mov or mov gs lahf adc ret jne cld pop cmc pop test dec and dec sub ficompl test jnp jbe add or (bad) (bad) (bad) and sub shr fisttpll les sbb shll push xor test imul mulb mov mov imul or scas popf lock add mov repz lea and stos add test dec mov xor push lret and mov shrb inc push out scas mov mov jmp mov add popa or mov inc or push mov (bad) arpl sub jecxz out push std stos pushf insl dec repnz cltd pop cmp stos or push out mov ljmp fimull cld adc cmp out jnp insb stos jbe outsb aad sbb divw push pusha das int jmp add ljmp imul sbb or dec test out ds or sbb repnz push and scas xor sbb mov pop xor ficompl mulb daa lret mov rol cltd arpl jns sub or loopne push xor rorb roll test mov and jnp add stc aas xor (bad) daa cmp pop stos cmp and into popl outsl jmp test cltd pop add add ja (bad) hlt pop out gs (bad) fstl inc adc jmp ss lods daa pushf mov mov mov add stos iret out aaa dec or movsl adc and or (bad) fisttpll in mov dec shll or jmp das or add push jb outsb mov hlt mov leavew push mov (bad) repnz notb sbb mov pop div sub cmp cli jmp dec jecxz dec insl xchg out push or mov sub mov sbb lea repz mov dec or jle movsb jno fist adc ret lea stos sbb inc pop add (bad) or push adc xchg mov adc lds cmpxchg rclb cwtl cli mov mov push cmc (bad) fildll arpl mov adc pop push xchg jno insl loope nop cli mov jns xchg jmp cld hlt loopne sub jbe add xor jne xor popf aam imull mov mov push repz fwait push test fidivr add fstl sub add xor flds (bad) xor xchg mov jae pop lock dec shlb and int movsl iret aad push std adc mov or pop data16 jle lahf sub sbbl mov (bad) lock xchg test (bad) mov repnz xor fucomp cmp inc test dec push and or pop cwtl mov sub hlt xlat fldenv pop sbb or sbb aaa fsubrs mov jp or (bad) cmpsl (bad) daa adc fcmovnu sahf cwtl arpl xchg xchg mov mov adc mov ret mov pop and scas pop jecxz pop loope or mov sub addr16 and mov xchg add or mov xchg sti ja out xor repnz sahf lea or mov xor and inc loope fs inc repz or dec std inc scas arpl mov and push or in xor mov (bad) mov adc test mov cltd cmp aam lods pop jne or dec fdivs adc adc arpl adc loopne out mov test in pop push mov inc roll insb lods adc push hlt xchg xor mov jb jmp bound daa sbb ficompl (bad) dec xlat xor popa cmp cltd sbb adc movsb pusha jo mov or mov xchg mov data16 out jecxz push dec push push sti stos jne sub jo outsb or aas add push cmp xor dec ror add xchg out (bad) dec mov or in ss sbb adc dec lods xchg stos inc daa or dec testb addl cli ds insb cmp ret jg jp or (bad) jae adc push cmovl addl push stos or xchg rclb aaa or mov xor imul cmp insl push dec mov mov xor pop mov jae sub push jbe or pop scas add dec xor lock xchg dec out decl icebp decb arpl movsb xor ja adc mov aaa mov mov jno clc fwait mov loop or cli js out lods popl in or hlt lock subl cmp loope mov enter je arpl add mov iret test lock push cmp xchg nop (bad) ljmp test or mov jo lods xchg mov test xor fisttp or mov divl in out ret cmp cmc (bad) es inc mov jecxz xchg mov ds out pop pop xchg scas push mov scas pop add xchg mov jle push sbb (bad) cli xor fs arpl fiadd fucom xor les fsubrs mov mov movsb jnp xchg js insl dec imul xchg mov xchg mov nop test sti scas jl push push hlt scas into add test mov cltd repnz pusha add jno (bad) aas push adc dec mov jle dec pop jp jne or push or push in lock fstpt (bad) xor push divb sub mov lock mov inc xchg sub (bad) into cmc dec fmul or jp cld stos aaa xchg or iret cli adc sub dec loop jmp pop push sbb sub pop data16 mov jecxz jg jno cli cmpsl cmp repz sbb call mov jo mov mov xchg daa push leave mov lods popf loop dec (bad) fs push adc test stos sbb (bad) aad movsb lcall jp lods mov lock enter mov roll insl scas test (bad) lock push sub je pop push pop push pop fbld es or cmp movb insb dec pop xor je xor fwait mov sbb cmc dec enter dec bound enter mov insl cmpsb sbb fcmovne adc (bad) dec xchg in jge mov pop jl rcll mov outsb fcoml call popl popf int popa pusha sbb rolb mov sti mov push pop call call mov loop sbb (bad) outsb sub or aas ja jae popf stos enter pusha repz lret in cltd or ja inc cmp cs or fstpt adc or daa out arpl mov enter add inc (bad) or icebp lods jbe dec mov aad jl mov pop or int (bad) cmp xchg mov int3 (bad) xchg push pop lock repnz enter lds (bad) dec mov xor jp cmp or push stc jp push out lcall jge repnz insl cmp out inc ljmp and leave into sbb or xlat sub aas mov xchg xor inc rolb repz data16 xor mov or mov pop into inc (bad) stos jo aad inc jge mov rolb pushl mulb cmp jmp cmp mov (bad) sub sysexit in and xlat (bad) orl vmovmskps not adc std lock mov or (bad) out xor pop or js dec popf cld leave sbb fistpl sbb xchg push add jecxz enter add pusha pop xchg add adc out or les dec pop push or in push and cmp mov or (bad) into cmc jne adc pop inc lods int3 jmp or decb movsb (bad) idivb dec or sbb repnz sbb sub popa inc sbb add xchg mov test (bad) adc (bad) iret lret or or mov aas jmp inc fistpll or add mov loope jns ret icebp nop or pop fsubl pop fbstp and iret imul sub mov fistl sbb inc ss fdivrp xchg mov (bad) jb jnp daa mov push push dec mov cmp push fisub pop xchg pop (bad) dec or add fs push or cmp dec or inc xchg es (bad) iret adc mov repz jnp pop sub mov in or cwtl cltd es mov cmp sub mov aad leave shlb bound jae in inc loop mov jb fistp cmp aam repz cltd bound jge cmp jmp mov insl test not adc movsb pop or pop int cmp and lods xor fmull scas sbb cli push insl idivl cmpsb or dec cmc mov ljmp xchg and jo aas scas stos adc push lret jle shll lea pop test sub pushf jb sub sub aas stc mov mov test or (bad) xor pop (bad) pop add int3 fnstenv sub cmp (bad) in loope push imul enter dec bound sbb lds test inc into mov xchg inc popa test and jge test add add inc rol cwtl pop int3 imul mov gs pop xchg and mov push fsubr loope mov in dec cltd push or mov adc or push push inc shl and (bad) ljmp fnsave or push add dec xor stc or lcall and fcmovne xor imull xchg test (bad) (bad) jbe pop sbb mov popf lock push loope int or sub fisttpl dec xchg rorb dec mov jno or sub ljmp jnp xchg loop je negl mov movsb and dec or mov inc js xor adc sbb jno aam pop lods inc jl mov push imul fisubrl adc cmpl jb and jmp das or jo mov cmp pop lahf and in inc or repz rorb repnz jge in or popa movsl enter pop sbb sti test jp xlat fnsave sbb icebp gs sbb mov cmp outsl xchg cltd or jl or (bad) mov or aaa rcrl jecxz mov (bad) xor pop lcall or aam test dec iret fsubrp lret cmpsl shl cmp daa negl lcall pop and or jae mov in jge sbb mov mov adc inc (bad) into test cld mov lret pop sub jae pop mov push fiadd je lea dec mov (bad) cmp jl mov or pushf sub sbb cmp mov pop or add loope add das pop int aad cs or lahf repz shr and jns jns lods andb roll or out mov pop insl xchg or cli imulb fdiv add mov shl cli pop add les dec out repnz cmp aas xor out mov ljmp push jmp (bad) fidivrl pop and repnz xchg hlt adc js,pt cmpsb xchg mov inc pop mov pop cmp dec jb test pop xchg lock stos sub xorl add test push adc jg insl push dec adc adc outsl or add mov icebp arpl push lea fstpl inc rcl mov test sbb xor je adc jecxz in push jecxz in std pop jne add mulb or push out or fnop aam pop repnz icebp (bad) or (bad) jo jns fistpll imul in ret mov and adc push loop mov insl adc jo cmp cmc xchg xor adc divl inc popa (bad) mov test fcmovb xorb sub adcl sbb cld push pop cmp enter dec jge cltd mov pop mov cmp in movsb xchg scas cltd mov dec mov idiv pop push fdivrl fs inc or mov lock mov adc mov fs mull je insl syscall movsl addr16 lods dec into jg pop movsb inc shlb cld jne mov pop lea pop sbb add adc scas xchg aad icebp mov (bad) cmp std lods adc popf mov (bad) sub sub add fcomps push iret scas mov jg stc sahf add dec jo add dec movsb xor aad rcrl dec xchg and adc loop add popa fnstcw adc ret out xchg aaa cmp jae punpckhwd jmp pandn test inc adc imul lcall clc lock getsec mov sbb iret fsub test sub lahf subl je sub mov xchg add ljmp and fs out mov adc mov xchg fcomip inc sub (bad) xlat out hlt xor pop sub xchg std movsb lds inc mov cmpsl lock int3 aad dec arpl in push dec leave enter dec xor jo jb or insl adc adc fidivrl xchg push clc mov xchg adc cwtl jg push sbb test cmp cltd add xchg aaa or fnstsw mov test aas out or dec hlt pop sub ja jge cmp xchg inc and pop push mov mov lahf cmp in adc fldl int3 sbb cwtl mov dec add jecxz scas xchg sarb (bad) sub add add out repnz inc nop and subl push mov cmpsb hlt iret or mov dec cmp rcr mov sub or xor inc pop mov js,pt push test pushf add or mov movl mov pop mov dec pop dec in pop push xor sub push in ret mov pop mov bound dec ja fistp or pop stos push add iret imul inc test mov mov xchg push and pop cltd fcomps sti aas or movsl mov mov incb hlt js mov push mov loopne add (bad) mov enter testl jbe mov (bad) pop xchg xchg sbb jl insb inc jbe sbb je pop and mov popa (bad) pop lds ss mov mov dec jno and add (bad) ljmp xor roll xor mov mov cld lahf cmpsb xchg mov dec fldl2t xchg jmp xchg (bad) or dec jl lds cli cmc insl dec inc (bad) sbb jge xor lods dec aad pushf pop vmovaps aaa je push stos jp test fmuls scas pusha cli jae xor jg mov cmp dec ret clc cmp jbe jns divb xor lea jle adcl cmp inc aam push lahf jo repnz rorb mov dec (bad) daa jmp not insb sub jns mov ret jle movswl pop jmp pop and xor shrb data16 cwtl ss jne test jbe rolb jle pop add and mov or sbb in push and add jno into adc mov push out dec jo jb dec adc or mov sti dec popa leave rclb int mov inc data16 push lds xchg popf push loope es jmp aam cmc test bnd xchg add jno mov jae inc mov insl rolb stc add adc inc bound iret mov jp orb pop and cmc sbb xchg sar out mov (bad) out test jno fiadd pop bound jne das sub adc dec (bad) mov push sbb push test and fnsave pop or jbe dec fstl xor cmp pop inc popf cmpsb outsb or lods adc dec loope cmp in fiadd mov fsubl push test (bad) dec sbb adc loope dec cmpsb adc sahf sub cli sbb bound and jmp fcmovnb dec rcrb aaa popf std cmpsl (bad) xrelease rolb movsl pop inc imul jmp mov test and (bad) out fldenv cli add lahf sbb out and repnz lods xchg notl iret fwait sbbl sub adc jg push outsl rorl mov and lahf dec jmp (bad) rorl mov fbstp cmc iret jns pushw xlat in sub jne lret ljmp or je pop movsl push inc test sbb sbbl popa adc imul pop cmp roll mov hlt mov adc push push stos in js push push push je enter cmp lds bound push push xchg enter xchg insb stos jecxz or inc test adc popa push (bad) sbb xchg xor adc nop jne dec sub push mov or xchg rcl mov xchg jnp divb cmpsl jl dec push test push maskmovq idivl mov mov cmp leave add shrb or dec jo or jmp cmp idivb pusha and xor loope call xor or pushf loop jne (bad) sete or and xchg cmc cs cmp incl mov scas jb cld idiv paddd orb push mov inc or jb jg mov inc lea dec mov outsb or insb adc iret xor lods shrb push stc mov cmp lods repnz mov mov mov or push ret stos add mov in jb aad xlat stos jo jl jmp scas nop dec ficomp orb lcall or cmp (bad) (bad) int3 jl cwtl (bad) adc and pop inc (bad) cs adc hlt (bad) (bad) movsl adc and insl lods adc fnstsw or arpl sahf and test ja aam mov push in or shrb dec js push pop and add mov jnp jo leave pop or leave out addr16 call popa jle mov cmpsb inc pop dec push jae test dec add jbe rcll lock xor adc out cmp leave mov cli jne mov fimul cmc addr16 add inc frstor jge mov sub cmp sbb or xchg mov dec pop xchg jns pop mov cmc loope jo scas or andb repz adc aam leave je cwtl or lds dec fprem xchg sti lea jg dec cmp sbb inc movsl push loope repz or into mov test push jmp fcmovne sub sbb divl lret pushf add fidivl test or out xor xchg or and mov repz mov or cmp mov or cmpl (bad) pusha mov sub fimul push cltd sti xchg shlb cwtl stc mov sub (bad) loopne scas adc adc test or or cmp mov jmp inc xor lods xchg (bad) inc xor sbb and ret stos cltd fnstsw dec push or push fisttpll sbb or outsb jae,pn jl jo js mov lret and mov mov or add add or pop lret inc mov in sbb in jbe xor adcl and iret cmc in into or mov cmp lcall decb loopne mov test addr16 iret sbb sub or (bad) lea push push pop int xchg cmc stos js mov jno lods mov fwait cmp mov ret leave xor movsw xchg sbb mov dec in jb mov fwait leave std mov mov sub ss daa mov pop sti or cmp mov pop xchg sub call ja faddl or or icebp inc mov lds or es sub sbb daa xchg repnz xor mov push sbb js xchg out or out cmp jmp das hlt stos mov jnp push shlb stos or outsl aad cld imul (bad) dec cmp mov push sub jle es or popa clc stc pop cli sbb pop lock dec push test adc fwait rcl jne out xor mov sbb or inc add jge lock aad or (bad) pop cmc xlat mov dec mov fdivp sub hlt les cltd inc movsl (bad) mov add or cmpsl ss lret insl andl mov lods sub leave stos or fidiv test sbb lea jno popf fs add int3 cmp in mul cmp hlt jb pop adcl jl or add add fstpl nop xchg mov mov sub push ljmp insl mov cli stc mov xor lods cmc push pop push mov pop jmp (bad) bound or mov rclb insb inc or push push lock xchg orb leave or or mov lods and popa inc fcoml add fcoml jecxz bound scas aad jns int dec inc or add mov stos xchg (bad) scas das lahf or mov mov pop push or (bad) push push ret or mov or pop sub bnd xlat mov data16 leave notb jge jmp je jnp xor mov pusha outsb cmp dec mov arpl pop mov ljmp scas dec stos leave or cld or fbstp faddl lea test dec mov cmpl adc (bad) adc jae mov add mov or mov mov je xor sub jbe pop mov adc movsl cltd adc sub call xchg fimull mov jns dec pop rcll cmp in and fstl hlt inc xchg lock mov xchg add mov inc jle inc mov or mov ret mov cli cltd mov scas xor test mov pop imul jmp aam aad sub out pop or aam sbb or cmpsb sub je add or sbb (bad) leave rorl lret adc ficompl xchg push or repz call sub pusha push inc or cmp lcall and sbb mov outsb xor mov push stos test add or ret clc or ljmp inc lahf pop and fwait sbb add testl cli push dec mov dec xlat inc mov rorb je or cmp sbb hlt int3 sbb or pushf xor scas outsl sahf sub movsb pop lock mov shl mov dec or cli cmp adc bound adc arpl sub sub pushf mov jl imul add sub sbb inc rclb mov movsl bound lahf loopne sub mov lcall incb mov or shrb dec out lret enter cmpsl int sub ja add icebp ja (bad) jle sbb sbbl notl inc ja pop mov mov cmc push and leave pop pop enter mov jp mov push mov mov dec mov fs add leave stos nop mov dec shlb es mov fiaddl and (bad) in int inc enter jg movsb movsb push or cmp jo insl test push sub neg xchg dec or mov loop push pop popa iret mov (bad) inc lret cli cmp cmpsb xchg lcall sub in or mov (bad) mov dec jne popf or adc lret pop adc sub loope int lret mov rolb hlt aad cmc int3 sub sbb inc repnz cmpsl movsb loopne xchg imul imull test add shll lds aas rorb mov xchg or je xorl movsl or addl shrb xchg and sahf and xlat bound jae and shrl mov test dec jbe cltd arpl data16 test movsb cmpsl imulb push mov sbb push or cld add iret adc sbb outsl mov dec aad aam mov xchg mov out mov push push mov sbb xor add sti dec ja sti stc sub shlb push sbb and and jecxz ja inc inc int3 mov dec jae push mov and daa add xlat xchg je mov cmc lea movsl lods mov dec insl loope imul shlb sbb into jmp dec cmp mov push gs hlt mov inc pop add xchg shr out cli mov push mov mov data16 xchg roll icebp adc sbb inc mov add inc mov and push sbb pushf add out ret jno scas xchg (bad) pop test scas (bad) mov (bad) lret push gs adc xchg out dec xor lret push jmp imul sbb mov shl and out hlt mov out (bad) xor sub or add and xor ret jle ja pop push jmp dec sub mov adc out or int pop fnsave dec pop jns fwait pop aaa dec or cltd xor (bad) ret xchg jp push or dec cmp std test sbb sbb xor ds xchg out push mov jno adc xor or mov outsb (bad) jp jbe push in mul jl sbb lea cmp int3 add out mov fmull hlt sarb or and into aad enter mov jae cli out pop lret sbb or outsl mov adc es scas or cmp jmp or jb loopne xchg xor mov js jns push inc fcompl dec mov decb lds mov pushf daa js push nop mov or sbb insl insb mov lods das popa jp cmpsb mov push mov fsub sbb hlt aam lret dec and pop cli pop pushl add fadds stc call mov fiadd xor fisttpll out lret pop dec aam adc jle dec fsubl (bad) repnz movsb arpl lret fdivrp push mov dec mov out rorb and je lea imulb rorl xor lock loope jnp lcall pop movsl pop jl dec mov push jecxz jnp or and push xor les dec jmp call divl jbe xchg aad popa or cmp and adc adc icebp sbb mov ja jle jmp push mov and xor xchg xor ret or adc (bad) mov jg jns pushf mov test ret or add sbb sub cwtl hlt jp xchg mov jmp in in sbb addl mov lea jmp test jecxz jg cs call (bad) xor aas add popa or lock or sub addr16 pop (bad) jnp ja lea dec mov xor sbb frstor xor jo xchg cltd test repz push in cli fist aam in and lock or divb cmc btc mov (bad) repz mov cs test aaa (bad) xor and notb push pushf sbb fdivl sar test mov inc iret xchg or lds ja lods icebp push inc or adc test ja aas lret fnstcw mov in cwtl insb leave insl adc mov fs or add xchg hlt pop mov xchg and cltd sub pop fiaddl scas xor cmp inc and aam jg jmp jo lods pop cmpsl jmpw mov arpl add xchg sub (bad) cmp iret push in aam jns jl insb mov adc add and imul test daa popf fsubs add pop fs and outsl dec or jbe or pop push and add (bad) mov mov (bad) stc fwait mov jecxz mov sub or mov jno inc mov adc or test cmp test arpl outsl cmp repnz js shr pop (bad) aaa dec or pop cmp test mov lds pop mov aaa popl sub imul mov jns mov push rcll stos cmp fs adc movsl lahf scas out inc push or or inc test cmp cwtl stos iret add (bad) xchg mov movsl pop dec in leave mov or sbb pushf clc in mov dec lret fldt (bad) (bad) outsb xchg push in sti mov cmc sti dec enter out in mov (bad) cmp pop stc sub pusha or mov mov (bad) ss inc xor out jl cmc add dec or or push sub pop idivl popf mov (bad) jb fistpl xchg enter xor aas into jo cmp (bad) mov mov jne or fcomps cmc cltd jb sbbb fwait pop ret shrl or sub test cmp push add shr and lret sahf shl cmp push or out mov lods xchg cli dec lret sbb cmp jle sub cmpsl push (bad) cltd cli mov mov mov mov adc ficoml cmp or jl mov xor xor loope (bad) into sbb lods ss pop mov lea out cmpsl pop push or inc sub test sbb or mov jmp insl push pusha out mov mov and and lods push orl hlt mov push push in ss or mov shrl setg int jae and loop mov or lods repz insb popa cli push jecxz inc aad loope lret js or cld dec and sub sti sbb xor daa jne test dec jne aaa scas in sub mov or cmc and vmovaps or (bad) lods xchg sarb mov push xchg addr16 or (bad) or xchg lcall sub add stos sub pop cmp fxch stos or dec pop cmp out jae inc mov xchg lock pop inc repnz adc jno lods iret addl jne bound ret add jle jne add out out sub or nopl xor jmp rorl gs xor xchg dec (bad) mov mov adc scas loopne leave addr16 insl dec aas inc xor test adc pop bound mov add fnsave xchg cli (bad) in xchg idivl sbb adc jno xchg fnclex xchg xor cmpsb sbb movsb mov movb out adc mov and dec fnstcw cli je adc notl xchg jge lock cli dec xchg es mov (bad) call or xor dec mov cmpsw push bound mov jns rcrb dec xchg mov jae test xchg notl in jecxz xor mov jb fsts cmp cli jae push push (bad) dec test or xor push dec xchg xor arpl sbb sti cwtl subb inc lret hlt ficomp inc cmpsl bound cmpsb pop (bad) jo lods aaa fstpl enter repnz loope inc cmp xchg popa push adc sub jge dec dec cmp xor mov aam adc mov cmpsl loop and push mov inc xor imul out dec cmp cwtl std adc ffree sti adc mov inc jge idiv mov pop imul cmpsb mov xchg test push jl dec sbb ljmp in jle ds and sahf pop inc ja cmpsl cmc jo test fistl aad mov movsl cli sbb sti subb jo sbb mov xor call inc add inc lcall dec mov mov or (bad) aas add or and or in (bad) es ds add xchg loopne push dec test dec loop (bad) ja test or pop test enter or pop stos jmp jmp or std es lea inc push inc sbb ljmp repnz xchg pop lds into jmp in in mov and lahf icebp fimul pop fadd lock add or and les mov xor repnz mov (bad) (bad) fwait pop iret mov mov dec push xchg (bad) out push movsb ljmp fs pushf cmp or imul loopne ss or mov xchg call outsl mov jae pop std in cli (bad) daa rclb (bad) aaa imul or inc scas hlt adc jecxz xchg clc in pop mov pop inc leave pop (bad) ljmp jne ret or sbb mov stc jnp xchg xor or (bad) inc fisttpll or jp sub or out nop sbb (bad) jle sub fidivl mov push inc test or mov fwait adc mov outsl pop jae sbb jle inc fs and sbb fxtract mov or jecxz into jp rorb out mov or (bad) jno or fsubl imul loop sti or jg cmp xor mov lret or pop cmp sbb push out cltd jae sbb fwait xor cltd mov repz mov sar jnp add (bad) repnz stos jns add or pop xchg dec mov out call enter push test or xchg pop jns pop (bad) lret mov out repnz jb mov lock clc or xorl aam mov ja push jg mov cmc xchg orl (bad) cltd int pop movsb mov or jp or jo jg push push add hlt loope dec sbb inc sahf fisttpl bound cmc jo jb mov or leave cld inc or cwtl cltd pop or mov cmp imul sysenter das aam loopne loop push adc and sbb lret loope jge in xchg hlt or in sbb cmpsl mov lods (bad) scas xchg mov enter ds xchg add inc loopne notl push loope stos mov gs test xchg not loop jg ret push cmp (bad) mov lret mov scas aad les cs jl negb test je (bad) push or sahf test fildll push mov dec movsl aas repnz jmp sub or fstl leave pop adc sbb test int iret fstpl pop pop xor shrl sub push (bad) lea fimull push dec pop add scas pop fxch dec inc insl mov loop mul sbb dec faddp or (bad) loope pop mov mov je addr16 xor dec les outsl push (bad) mov xor rcr lret or pop xor push mov lea push lret (bad) jbe das (bad) mov sub mov xor add inc mov insl cmpsb adc xor xlat cltd dec sbb cmp icebp imul js fsts sub mov je adc sarb and ficoml xchg mov and inc jno stc jge loopne jg add test test rcll ja jne cmc lahf insl movsl adc hlt mov mov imul repz js jl mov pushl mov adc cmp xor mov fisubl sahf jl or (bad) jno xchg jg fisubl popa icebp icebp test adc cltd mov rorl fmuls movsl jmp jbe arpl cmp fsubl aam lahf and repz adc iret push dec adc sar mov mov aad lret fldcw ss shl mov pop adc hlt mov sbb mov scas popa insl jle adc movsb pop xchg (bad) or imul inc adc xchg test (bad) jbe lea es sti incl and jns mov pop push or lret (bad) jge xchg jno test dec popa push fsincos adc aaa hlt out mov inc adc xlat cs xchg or scas pop dec roll add jecxz mov adc jp imul or addr16 inc xchg repnz scas or mov cmpsl add jne mov pop lea mov lods jae mov stos xor inc dec shrl cmp addr16 and and xchg call addr16 mov inc jne xor cmp js or dec stc cltd xchg idivb inc lahf cld out jmp test push push jp xlat pop push push lret xchg sbbb insl dec jge test daa or jns bound leave xor in out scas icebp out shlb pop or adc push mov pop mull sub push (bad) insb jo icebp movd jb push lock cmc jno test push pusha test scas stc (bad) and pop insb (bad) mov sub and das push xchg adc or fistpl cmpb jns xor orl cwtl pushf clc pop jecxz add pop or inc sub std stos (bad) pop ja mov test xchg push or orl aad mov add push imulb push (bad) popf pop aad ror sbb (bad) or or (bad) enter loope or and adc add jbe imul pop pop mov fsts xchg movb push sbb les or push pop js push vdivsd scas jbe sub push nop loop inc xor xor adc sbb pop bound mov dec or xchg cld stos mov adc in (bad) loope xchg imul fcmovbe cwtl cmpsl lea jo stc inc and dec call mov jbe cmp and aas inc int das dec jmp or and iret xchg fisubrl mov jge stos sbb mov xor or push inc cli aas movsl and xor sbb cmpsb (bad) push or inc leave xor js sbb jecxz (bad) cmp lock cltd in and imul pushf ljmp adc adc roll mov xor ds sbb (bad) adc xchg adc sbb sti repnz mov outsl lcall movsb mulb jne fcoml imul repnz push and fcoml push dec or jl push hlt cltd sbb imul lcall sbb ljmp push xor push insl mov (bad) adc sbb inc sub xor mov cmp fsubrs ret rorb mov sbb popa (bad) mov jns rorl stc stos movsb fs add mov jp push pushf (bad) xor lds stos dec mov dec sbb mov cmc adc loop jns int cli sbb sbb mov add fcomip inc add test repz movsl mov adc mov jmp xor xor add imul in aad scas dec ja dec std sub and icebp mov cmc (bad) or push inc jne push outsl or jmp rcll dec jmp and or inc or add test pushl dec xlat push mov stc inc sbb lods scas or scas jge inc xorb or push xor idiv cmp cmp leave int adc mov mov lods fcompl call lret pop iret cmp testl and dec dec lret imul std xor sti xor int3 aaa sbb test ret cmp inc call add sbbb inc cmp dec leave jb jb pop jbe scas idivb lock fsubrl ficompl mov push out fstps cs or and jge xchg cmp mov and dec mov push mov jnp test jae pop lds inc or jmp (bad) aam mov push loope pop repnz movl mov or mov (bad) repnz cmp fild pop dec pop test push xchg mulb (bad) mov pop lea cmc pop fdivrl not or ds mov sar or (bad) divb rolb ljmp mov or mov sub add (bad) sbb (bad) minps mov fs insb test sbb sbb jne outsb push mov or fwait xchg mov ret push sbb mov scas sub inc or gs sti mov aas jmp cli stc in push jl xchg mov sti in loop xor push loopne mov lods add mov or jno shll stos loopne ret add imul push test test dec or (bad) daa in ljmp cs icebp call push repnz sub js loope xor rclb fild pop (bad) cld out (bad) push jecxz push add or addr16 xor into sbb adcb jp push cmp mov mov or (bad) xchg in hlt lret call mov dec cmp sbb sub lret dec ss push adc add (bad) lock test cmpsb insl cld inc cli outsl aaa adc ficoml and jg jp and lock adc mov clc leave rcrb push dec xchg xlat gs dec imul imul xchg jbe std push jp dec mov aam or std xchg jo std fiadd inc xor cmp adc pop dec inc repz out jno adc mov add sbb xchg (bad) xchg gs (bad) insl insl mov mov fsts je jns dec adc cmp (bad) lea iret push inc or lds add mov pop mov pushf mov sbb xchg mul rorb sub push cmp ret aaa fucomp lret sub in out ja mov dec dec in sub mov popa test or mov lcall sub ss lock sub cmp and sub int3 xchg jmp pop or daa push not mov mov or cs int3 dec xchg inc pop add cmp and dec push inc repz xor and dec sbb cmp rcll jne dec mov pop leave add fbld ds push add sub in repnz or mov xchg inc pop pop mov loopne dec movsb xchg or add xchg in jmp lock shrl inc push or xchg add out push push or jp xor jnp mov stos ja ret xchg fimull cmp fucom sar mov adc in pop mov push mov xchg dec in mov sbb int3 (bad) leave or add and inc sbb mov cmpsl mov loope cltd jb aad insl push dec dec xor adc or lock (bad) or stc sti jns sub and (bad) rcrl inc dec sbb fadds or add push test mov dec jmp ljmp ds out push (bad) mov icebp fcomps repnz mov movsb or mov inc sub xor xbegin int3 call mov mov pop inc dec adc add pop sti cmp mov icebp lods cmp pop push outsl push outsb mov add in mov add and sarb stc dec movsl fnclex mov sub sti clc nop cltd rol mov or dec add scas sbbb test sub push div int3 dec daa mov imul in mov jmp jge ret mov cmc (bad) rclb jns ja sbb lods mov sub sahf into mov (bad) jbe leave or inc or pop push idivb sub sbb aas lods push movb push adc cmc mov rolb jae out inc inc or pop mul daa sbb inc (bad) mov scas cmc lahf in jns push cli outsb push or add (bad) sbb sbb rclb mov mov jne pop cmp je test xor lret xchg push insl mov adc adc stos (bad) jmp pop mov icebp dec xor push mov inc test adc jo adc clc mov pop cmc repnz mov jl stos test insl jge outsl xchg xor mov icebp dec lea add xor mov jle repnz jns stc add in rcll mov add push shr aam shll adc push cmp jbe mov mov xchg or movsb mov sub xchg and and lods adc and rcll mov stos cs cs hlt jno lret xchg clc (bad) jecxz fmull push cmp arpl adc xchg adc (bad) mov out xor pop and cmp inc mov std cli jo test or or jbe and hlt repnz add add cmp adc mov cmp out insl nop sub test sti inc pop or mov scas mov add jae dec mov or jbe push and lock divb xchg out jae sbb notl je jg and aam pop test jmp in divl pop (bad) pop sti lret iret xchg in cmp cmpsl daa out jl push or xor sub or loopne std or lods mov ret xchg inc add xor jp mov xchg xor or dec push xchg ret pusha stos test repnz mulb fiadd mov insl in push out mov push or dec out int3 popf inc divl xor sbb leave in rol push or movsb mov loop xor inc jp xchg push lds out repz or ds nop xorl and shr adc into sub or mov ret mov lods sbb or int xor cmp mov arpl or jno push divl inc dec mov (bad) or lcall or mov test in or lret or bound shlb mov std repz or cmp pop cmp ljmp leave xchg mov (bad) idivl add pop (bad) (bad) nop xchg inc lea pop pop fs or inc sub jmp add (bad) insb das repnz push sbb cmp cmp jmp (bad) ja xor aaa sub or out jne dec mov ja das leave (bad) outsb insb (bad) mov in mov mov jmp add pop lock add shrl jmp mov xor add shll test les or pop sahf dec xchg or dec dec gs inc adc sahf fcomip sbbl sbb mov out lret mov out cld cwtl jl xchg jbe scas imul or (bad) hlt cmp or dec dec test push fmuls cwtl dec imul jb jbe nop push pusha xor jl mov hlt sbb push mov adcl gs lock popa and int xchg inc xor ja jge mov pop outsl or lcall adc pop fisubr mov ljmp ljmp push or jmp enter bsr or lods negb cmp cltd aad mov (bad) test cmc jmp mov sahf stos shr mov mov movsl push sbb leave dec pop cmp scas dec inc pop dec out jl or in cmpsl in lock or sbb inc inc push jnp cmp dec mov xchg mov sbb sub fild repnz call ret or mov insb ds adc jns testl mov dec or ret dec test scas or xor clc pop in or (bad) scas mov jle adc add or mov or lahf inc cmpsb inc add in mov loop addb fcmovne or leave add xchg repnz leave dec cmp repz mov test xor mov sbb scas or fiadd aam push mov div in jns imul add or test sbb or push mov fnstenv (bad) jb and add jne out test or pop shrb (bad) jb add mov mov xchg lods or enter adc ret mov pop or sub mov stos (bad) dec cmp pusha repz inc jb cltd and daa cmp or bound or xor test (bad) jns cld jmp or mov push fisttpll xor sub in jg addr16 test jnp call outsb sti sub out int3 sti mov shlb mov imul cli stos push movsl sub or das mov in xor repnz push jp cmp mov or notl hlt jg cwtl ja dec shrb sub aad or fmull xor mov pop in lods add xor adc stos or test lds rol jge cwtl pop int3 pop sub hlt or mov outsl into cli clc mov lret inc mov and mov (bad) hlt add adc xor cmpsl or mov jmp cmp clc dec xor dec fistl cmp or aad cmp bound shr lret out sub sbb or insl ss xchg push inc lods adc push sub dec ret jecxz cmp push dec or pop out cmp nop cmp push mov cltd mov mov jge push inc or mov (bad) adc cmpsl pop xor in lods ss or dec add or loope jne ss mov test mov inc into jmp arpl sub or xchg mov scas sahf fs xchg jns arpl testl sub jp push cld xor xchg sbb mov test loop mov test movsb add add insl enter dec add je das mov repnz dec test cmp fisttp or mov fistpl mov leave or and jl icebp ja out push mov aas incb fistpll adc ficoml dec xchg das mov inc adc loop ja arpl sbb mov inc and mov mov fs fldt xchg mov push or outsb flds sub mov inc mov cmc out jbe pop pusha adc out arpl out adc ficompl dec aaa and iret xor pop faddl test dec in cli sub or fstpt aas and and jg mov and mov pop jmp loop nop rorl aad sahf lcall or imul pop adc popf pop fnstsw icebp or mov call adc sbb add or push aam xorb pop jg mov arpl ds incl dec push in (bad) jb mov mov mov jne add mov out add or imulb push and das je (bad) out pop inc xor push jb push xor dec rol inc sub mull (bad) xchg lods mov test pop push jg ret repnz adc xorl out (bad) add or push mul mov pop clc or aam popa int jecxz sti cmc lret xor les hlt fistpl xor sti and cmp bswap push addb lods jns imul push adc mov loop cmp popa dec or sub ret jl jecxz or add (bad) aad lcall sbb mov lret lock lret mov inc or sub and nop (bad) pop idivl lods test js jp push jle scas add adc psllq dec test fcompl sbb notb ret (bad) pop jno pop stos or stos test mov add jno int or pop sbb fwait xlat cli xor lock bound (bad) test arpl dec mov es cmc gs mov dec aad pop pop aam fwait (bad) jmp push scas xor mov adc xlat in mov jb mov enter xchg fdivrl repnz xchg rolb decb (bad) in mov pop mov xor bound out or mov push xchg (bad) inc xchg stc mov jno nop push and cs jo dec adc shrl dec or sbb in push daa dec enter mov jns sbb cmp mov loop inc test mov fist jnp cmp xchg in mov mov cmpsb decl and jae (bad) sti cmp push pusha mov (bad) es sbb inc add mov and push and (bad) cwtd jge xchg cmc into in jne es (bad) dec repnz sbb (bad) inc sbb jecxz lock lahf sub sbb xchg testb xchg js (bad) or sub bound aam sahf or popa mov test inc decb jbe std inc add mov or fsubs roll adc jae cwtl loop and push sbb mov insb lods jb xchg je xchg popf hlt jb xor fscale (bad) fsubrl scas mov sbb pop cmp mov lods (bad) dec add sbb push mov outsb mov nop out jmp pop or lcall dec out sbb cmpsb mov out mov mov repnz or int3 cmp mov lock addr16 ja push inc or add fstpt dec (bad) push cltd adc iret lret xchg jae pusha daa aas sbb push aad dec xchg jo mov and inc jmp dec add andl adc sub out sahf cli ret dec mov xchg addl inc xchg lds cs sub dec mov push xchg jb mov dec jecxz pop or lret out and adc adc push jo into pop inc fwait incb ss pushf mov hlt adc dec or or call (bad) dec pop cmp cmp adc movsl cmc fwait mov jl mov sub add out mov rcll sahf lock or mov aaa dec outsl in pop xor icebp test lret or lock mov adc leave lods jle outsb mov (bad) xchg (bad) imull inc add orl cs dec mov inc push ficomp cmp push call xchg dec jmp add test xchg pop fstpl (bad) or fs dec jns test add notb inc lds or jo pusha adc dec xor cli jle test negl mov mov xor push cmp (bad) clc inc xchg sbb ficoml mov hlt dec dec out sbb popa jle aaa scas scas push push stc pop (bad) loop jno jo and add arpl aam cmp incl mov fisttp sub repz xor stc jl movsl and std push imul and or or sbb or sbb pop xchg add imul mov inc add int in into cltd lcall push and shll fimul (bad) data16 bnd nop cmpl fmulp jb inc jo xchg jb and sub cs out sub outsl stc sbb pop jns mov mov fild mov (bad) imulb aad fs cmp decb add in psllw jne lea in jbe dec out pop (bad) out loopne pop mov icebp mov cli mov test (bad) out out repz add icebp loopne push loop fsubrl or cli pop negb adc push test movsb fidivl jns sarl jl sub dec or sbb bound push ljmp jnp xchg xchg cwtl inc or mov cld lods or movsb adc int outsb push or adc mov cltd mov jns notl inc mov and aad jge and stos leave movsb sub ret mov (bad) imul int3 or sub scas aad (bad) mov shrb in mov hlt ret lahf jl popf (bad) das sbb dec lock mov sub mov inc mov jge lds lret jmp sbb xor ret aam fstps pop dec imulb pop sbb adc jno loope dec and or sahf adc cmpsl cld out jmp out or out hlt adc fs pop inc or mov mov jmp scas jecxz sub dec mov testb adc clc or test adc in lahf sbb sbb mov jne dec cmp test push sub or push hlt out push sbb jge negb fimul sbb cmp ljmp sbb test iret aaa xor nop dec daa xchg (bad) mov insl sub add pop pushl push in sbb and and daa dec aad call es cwtl or xchg and cmp stc mov mov cmp lds fbld out sub cmp std push fcomps jecxz mov test mov adc leave xor jb mov xor cmp and dec push adc adc sub pop iret jo iret sbb cmc pop les push sbb lock pop add adc stc or test push into nop and mov dec xchg outsb push jp jno repnz and add aam or sbb enter pop add and les add ret jns xor xchg xchg dec or lret test or loope or sbb test xor cld fsubrs bound mov call mov pop rcrl xchg shl lahf (bad) xor mov int sbb jae sub lds cmp je iret (bad) sub subl repz hlt test dec or jle fild into movsl jne inc mov std push xchg and push mov xchg sbb ss add or sub xor or inc dec leave ja in test adc or xchg dec arpl mov inc (bad) std (bad) into or data16 pop les jnp dec jb fcomps xor cmp out xchg push fcmovnu cwtl ja pop dec xor popf fs dec test jge (bad) int leave mov xor (bad) dec xor (bad) jmp icebp and or push loope mov pushf or imul push cmp repnz mov sbb mov ljmp adc xchg test lods pop fxtract (bad) mov and dec popa xchg push pop in xchg ljmp sahf insl add fs (bad) pop or lea mov shlb (bad) loope add (bad) jle sbb data16 pop test rol jp inc jmp cli push jl or popf add scas push fstpl lretw jle (bad) ss or add sar jp je pop lret jbe or (bad) jne adc cmp sub lods jns stos push sub cmpsb xchg mov hlt push ret lods inc cmc pop push mov stc inc (bad) and nop mov dec jmp and mov addr16 cmp stc insl inc mov into fist sbb xor sub loope cli mov or or xor pop mov adc mov add jno add adc insl cmp adc mov or shl mov mov icebp inc (bad) cmc adc mov jle push movsl sbb adc jnp int3 test (bad) ja aaa cmpsl pop xor test dec mov sub lea xor mov mov out bnd mov ds mov xchg pop hlt dec fild push xor xchg add fistl pop mov dec or mov fnstenv mov iret sbb or (bad) jo jae je clc pop sahf gs pop pop int (bad) mov and aam jmp mov push or ss popf mov fwait decl pusha or (bad) cmp cmc dec in int xor push inc add pop scas fs jbe dec xchg in xor js inc or sub and dec in push pop inc int3 shrb aad jae fdivrl or push rolb dec rorb and fldz wbinvd dec test or or cmpsb jge sub fldenv (bad) pop repnz push mov leave test cmp cli or jo xor loop inc pop sub cmp or ret scas test mov mov rclb les pop or fdivs sbb int3 mov mov add test out jg or pop adc xor xor push enter std or out adc jp andl stc addb xchg daa cmpsb sub fnstenv mov add int3 repnz and test aam leave (bad) cmp lret jae mov pop mov and jp inc sub aaa sub xor arpl or std lea adc add dec or cmp and out jo mov leave loop inc fistpl fsubrl mov fwait bound add ja in adc insb int in hlt das dec or mov sub sti and insb xlat repnz jle outsl adc dec (bad) push or and pop adc loop ljmp dec mov aaa ja and hlt inc cmp pop (bad) jno notb scas dec mov or xchg inc xor xchg icebp lods push popa inc xor or adc mov jg lock stc aam cli fstpl insb aaa testl sub mov or push push dec jns mov enter pop cmp xor roll xchg or (bad) mov test (bad) insl push shr lahf stos or loopne or adc cli mov mov xchg add jo enter mov dec rorl hlt cltd cmc dec lea std out lds repz or out lcall cmp out mov jbe rorl fstl std inc insb push cmc dec cmp lret arpl idivl scas xchg test roll cmc imulb lahf cmp shll rcpps and fbld jns xchg inc mov (bad) jmp test arpl dec leave xchg cld push (bad) fwait cwtl push add or mov es aam in push pop mov jae,pn jle lock cld adc outsb jo data16 pop lods pop sub lock out xor adc cmp adc nop jecxz sub imull (bad) sbb inc in rcl lret xor adc es leave test pusha mov lods sub inc xorl (bad) dec mov dec incb adc sahf jl or or bound sub add in and imul nop or mov lds mov inc sbb fst loope mov shll mov xor lret (bad) mov arpl mov scas stc adc jl adc jge das hlt leave out mov in call repnz lahf mov or jne cs insl cmpsb adc hlt daa std or arpl push inc (bad) repnz lock dec lds add aas mov sub scas repnz adc out or mov jmp or cli stos add ret or aad mov and test int3 in sub stc or adc lcall dec stos mov sbb or and rorb loope sub rcll xorl mov jp icebp (bad) mov cmp cld jne mov adc jmp jo dec and push xor fs adc gs loop out dec repz movsl sub dec mov push fwait lcall (bad) jmp insl negb iret push sbb pop imul and test test adc sahf sbb dec mov or dec mov jno push test xchg stos dec adc out add jo ficompl out lods xchg cmp in mov mov jmp mov adc or pop lods addb popa in mov jge dec mov jb aaa jnp xchg mov mov loopne xchg add imul loope imul inc or jae add mov or fild or (bad) popa lret fdiv sbb das cmp and add mov repnz xor loop xor cli stc dec dec xchg (bad) mov jne xor mov cmpsb xor mov cmc imul lret mov iret je jg (bad) sbb pop or (bad) (bad) cltd cld sub (bad) mov sub mov inc pop xchg mulb and mov ljmp insl xchg in dec push (bad) int3 fwait lea dec es and insb hlt or fistl xor xchg fstpl rcl lcall push in lods lea dec mov mov js subl aas mov jo lret add (bad) int3 sbbl mov mov (bad) jae test sti dec cmp cltd cmp push decl or sbb popf or lret xor or pop sub scas sub add ror add (bad) xor cmp (bad) xchg lods cmp mov jae mov mov or adc lea sub or (bad) icebp mov mov and pop adc mov jecxz sbb lret push popf mov sub cmc mov and dec lret mov mov rcll das les outsb adc or mov mov jmp imul or mov insb fbld inc lods mov call (bad) jecxz jae inc out insl pop sbb stos lret or inc popa and cmp or out clc dec dec lock gs push jno pop mov cmp sub mov adc scas out mov xchg sub xor (bad) dec mov das aas rcr jp mov pop popf adc push clc pusha movsb jo pop out cmpsb and mov ss cli pop sub das aad pop (bad) divb mov and mov andl inc or lret clc divl or fcomps hlt js sub ret nopl mov push xchg das mov cmc mov stos mov mov cmp hlt (bad) mov dec cltd das or popa mov (bad) or mov pop jmp or mov sahf (bad) push fcmovnb mov lock sub mov aas test out ja int or movsb addr16 in mov mov sub loope jl std jp dec mov pop sbb jle faddl mov xor hlt scas (bad) or pop xor mov add std testb test lds inc xor (bad) sub pusha push sub js adc lret loop or cmc ficoml stos cmpsb test (bad) rorl in (bad) popa aas gs popa xor dec xchg jmp sbb mov adc and scas pushl jne jns adc pop xchg lcall shl cmp dec jecxz jns stos stos (bad) mov cmc push xor dec rcl or lock sbb push sbb ja mov ja (bad) ja je mov enter pop mov add dec dec rcrb cmc pop mov repz mov enter mov aam cmp data16 mov cvtps2pd jb inc dec (bad) ljmp clc icebp aas fwait out pop not adc popa dec dec add jns mov fbld mov push mov repnz fld1 pop in mov pop mov idiv jl movsb (bad) lcall xlat cmp jns push ficomp adc add mov aad xchg cld xchg sbbl cld cli jbe sub jnp stc jno cmp (bad) lock sub lds fdivrs bound xor cmp je jge xchg (bad) lock sub repnz lock movsl sub leave dec out sbb aaa (bad) pcmpeqb push andl cmpsl sub jle aam mov pop scas mov xor das jne popa pop cmp leave daa dec or cmpsb in daa call inc dec and sub nop adc in mov add (bad) or lea jns fldt adc mov pop cld push inc insb dec jnp xchg push or rol fnop pop (bad) lock jnp mov jno or shrl or xor pop or or lahf dec dec sub bound push stos xchg sub imul rcrb add es mov mov lock out por jmp or jge stos dec test fldt inc divb mov mov push into xlat cmp repnz in mov shrl (bad) (bad) pop cltd mov lods in paddq aas test sbb cmp dec insl xchg or mov sub pop cli lea mov pop fimull jns and push or icebp mov jae ljmp dec xor pop incl lods sti ds xchg cmp fwait les daa lock es cmc mov mov (bad) inc (bad) (bad) arpl (bad) pop or mov movsb nop or push or gs jmp xlat push dec mov mov or dec test adc add pop adc or and jmp or dec mov push mov adc cltd stos adc aaa aas lahf jecxz out sbb pop stos or push insb xor mov mov adc leave fisubr and xchg addr16 test mov test push fildll mov jmp xchg adc jle movsl push inc fcomps xchg loop mov loop add xchg push (bad) xlat dec push sub shrl ffree push dec hlt lret mov data16 fpatan adc add xchg jns xor imul sub leave sbb clc pushf fstpt ror sti in dec sub mov mov incb cmp (bad) in lcall mov addl in jle xor push in test mov add add fs sahf dec xor mov lret or test (bad) push divps out push jecxz add or imul inc scas int3 push div call dec dec or mov mov lock rcll mov pop xchg ret push add in push mov in fst cwtl mov jge movsl fmull je pop push or mov or xchg ret pop add cwtl sbb ja das repnz jno adc mov daa addr16 pop lea xor and mov mov mov adc sbb popf jmp std jmp or dec mov cltd cmp cmp rcll jno pop dec adc roll rolb gs in enter lcall adc aad leave dec cmp mov insb sub mov inc gs mov clc jbe insl fistpl aam iret sub pop lahf push xor (bad) sub mov in or shr or push lock or mov ds cli repnz pop je mov mov jle xor or inc sub hlt out outsb aas fstpt push fcmovne cli flds pop add fwait xchg and jle iret mov push inc scas xadd or stc adc (bad) int3 pop movsb push inc sub xor (bad) jbe ja adc cmp mov scas divl dec lods xchg dec in aam (bad) leave hlt adc sbbl (bad) jne push or shlb mov mov cli mov imul dec test inc or mov popl or cmp mov xchg mov and mov push or movsb lahf lret out out scas or (bad) adc mov addr16 or stos or loope lds std (bad) (bad) dec ud2 sub add and jmp jbe,pn mov and dec divb cmp mov je hlt sub push or push push sti mov or test test mov mov mov popa imul push xchg pop xchg repnz daa std test stc push push inc das or lret jb mov jge sbb bnd loopne (bad) leave roll mov cmc sbb push pop mov adc push test cmpsl out sbb in stos mov (bad) mov push push mov or es jae mov repz icebp or inc adc jo insl orl mov gs mov sbb xor xor sbb fs ficomp (bad) out dec cmp loop das jno jle push sub mov scas fstps mov or shlb sbb movsb adc (bad) sti pop push pop fldl gs sahf push fisttpl and mov mov enter lahf mov dec dec push stos add mov decb (bad) test adc adc aam jne sbb (bad) push cmpsl push arpl repz jmp cmpsb ss sbb xlat xchg in push aam dec cmp (bad) xor push imul or imull hlt adc lret lock cmc inc pop or mov pusha mov or xchg and lock xchg mov pushf pop mov cltd cmc loop mov cmp adc and out or lock shll and mov sub cmpsl out mulb mov stc sbb lds mov inc mov popf ret aad pop or cmp jmp divl push add adc mov jg dec sbb xlat ds mov dec pop out sbb lahf cmp and xchg push iret xchg mov in lods or mov (bad) in gs in or int3 mov lock dec jecxz cmc stos test xor insb sub and dec inc test jns jno pop inc cld aam xor mov cltd (bad) mov mov bound movl cmc inc mov or repz dec jg xor sbb shll push out cmp and ficomp ret (bad) (bad) cmp pop mov pop or add mov lds add mov jbe fnstcw add lahf sbb xor cmc and inc mov movsl adc cmp mov xchg jb ffree test and lahf pop adcl stos sbb mov mov adc and daa mull pop test adc insb cmc xchg scas out aas or js xlat ss aas mov adc xor and scas or inc sub mov mov ljmp adc fwait idivl adc enterw pop jnp jnp ficom lahf js popf jb enter (bad) xchg mov cmp adc push mov mov add ret test js mov adc mov mov lods adc jp andps mov stos adc cltd sub or pop in dec aad inc js jae inc loop scas loop xlat data16 add (bad) dec lcall decl push sahf push and pop xchg pop dec pop mov adc xchg fwait (bad) or popf pop stc dec lock adc in jo cs jbe pop stos pop adc sub mov or adc add and xor pop notb cmp jo mov into pop stos test mov pushf pop lea (bad) mov mov and xchg cltd add mov fiadd add sbb and ficompl jecxz xor stos or mov (bad) daa lods dec leave cli push jbe mov or fcomp fwait jmp enter lahf scas mov sti mov or (bad) and jno fdivs or je insl cmp mov push jns ficompl or fs popa sarl rclb aas add cs cmc and mov mov push xchg pop lds mov sbb sbb mov ret xchg add adc cwtl testb cli mov (bad) aas sub enter mov outsb movsl insb mov lahf mov cmpsb (bad) xor lock lret stos mov pop add mov xor fisttpll push xchg lock mov adc xchg push ds ret or in and into setae int inc inc xchg nop mov inc xchg sub sbb popa push fnstenv ret adc insb aam mov sbb dec ds hlt xor or sbb addr16 adc pop (bad) xor jo hlt mov into imul or mul or pop into xchg je rcll mov loope (bad) dec in xor mov mov sub pop (bad) ljmp or mov lods divl mov or and pop sar xchg call or adc ds push sbb aam hlt mul pmullw dec rcr sti mov imul ljmp mov xchg iret sub lahf pusha pop cld push js jbe cmpsb mov or jnp fdiv pop pop xor sub or dec jmp mov or sub mov data16 testb and jmp lea pop repz test scas js test dec and leave stos adc idiv fistpl ret xchg lea jl stos int scas pop shlb or mov or xchg xor in dec cwtl pop stos imul stc lock (bad) xor sbb enter fdivl js lea push add (bad) xor pop bound jge inc inc sub pop sbb test addr16 lds cmc mov or dec and and xor adc pop or jge loope jmp or fimul adc bnd push movsb sbb mov or sub popa (bad) jae inc or sub insl or data16 or int into mov mov mov jae (bad) inc rcrl mov push mov dec push sbbl movsb mov push sti sbb imul mov pop add cmp movsb (bad) mov testb mov popa hlt cltd jns cli add idivw cmp imulb jl lock cld ja jg mov (bad) repnz outsl pop push lock mulb push fimul mov ds (bad) mov or into loope lea leave stos cmc fwait pop fcomps push (bad) dec push fisubr std gs imul sbb rcl xor sub (bad) scas aam int3 es sbb mov mov or push inc (bad) out std test mov sub xchg adc xor xchg dec dec cltd dec cmc cld add std sub clc iret or notb mov mov mov adc or inc push cli sbb jae imulb mov pop and or dec lret lods push aad sub xchg cmpsl jl jne jne jmp mov cmp or mov push (bad) out xchg dec lock ret add jne cmp or clc push adc add or mov xchg jecxz (bad) mov aad fnsave add mov inc imul int3 xlat mov pop xchg inc leave test rorb add mov adc iret cld push adc in adc (bad) not sub out and movsl sahf mov adc fcmovnb sti push int or es lods or push inc dec cmp inc repz (bad) and jmp pop adc stc arpl inc cld cmp or or mov dec cs call jb in jo xlat dec pop aam (bad) xor pop dec push inc inc imul shlb imul ljmp push xchg add xchg adc bound lock sub sbb or pushf rolb mov jmp das xor outsb ss push cmp mov int3 jecxz ror bound jmp fnstsw movsb int stos mov and sbb add ret or ljmp ljmp adc and sub js mov stos mov mov dec add loop mov movsb push ds and lods rolb aam jo xchg pop out out xchg xor or lods rcl mov push dec loopne rolb and rclb push pop sbb mov xchg popa into in or out js pop add fbld fisttpl mov and add out arpl push and or push sti js rorl mov shr dec test (bad) mov (bad) hlt pop pop xor jo loopne mov lock dec or hlt out lcall aaa lea imul ficomp cmc test push mov das dec mov xchg test cmp or mov sbb out rorl arpl adc cmc push jae mov mov mov addr16 jmp cmpb dec out or jns movaps adc push jmp es and addr16 or push cmc xor aam lds ljmp enter jmp outsl daa adc in test aaa jnp pop orl lret sub dec pop insb orl dec or or loop loop jne dec testb jecxz rcrl jle xchg scas fs pop or mov inc xor flds int test mov add rcll pop or int3 sub push push push sub movsl add or lea xchg add je or out lods jbe lahf mov adcl push xchg and leave adc mov scas or push push adc sbb fadds jo movsl adc int3 cmp pop mov loop or dec (bad) lret fwait ljmp sbb repnz int sbb sub cmc dec dec and loopne adc push incb sarb mov cmpsl lods insb cli (bad) scas dec jo incl sbb cmp mov or (bad) (bad) imulb inc sub loopne pop dec cmp and xor ja insl pop mov or addr16 hlt add fsubl inc shll or sub call repnz loopne cmp push and pop jle mov out in iret div cmp out jbe stos jp aad (bad) lret cltd push test ror popa dec lods into out sub rsqrtps adc sbb inc (bad) hlt inc pop insb enter sub loop mov xor pop mov xor inc clc cmp inc or pop push in fsubrl cmc in imul push clc out decl je shl (bad) and lea xchg fwait cwtl xor es mov sti gs popa (bad) lret xor and out insb pop or or jbe sub or mov fstpl (bad) hlt lods ja lahf sbb mov pop xor sarb mov dec arpl push or bound icebp mov fidivl paddsw dec jns or push adc out imul or xor xorb pop mov dec cld push scas dec mov mov mov in xor pop daa mov mov iret or adc cmp pop pop or in (bad) mov out sbb leave out xchg pop cli add or test sbb xchg mov int sbb pop cmp sti ljmp repnz and sub adc fcompl stos sub arpl cmp in pop and add xor test clc leave pop jg or mov repnz faddl mov mov cmp xchg jbe sbb push xchg loope xchg push jns out popf (bad) hlt int3 or add cmp aad xor rol cmc push test push mov loope pop dec insl fldt pop imul mov lea scas outsb or shll idivl fldenv mov (bad) or (bad) mov jb xor shlb idivl push lret jge jp or jnp push mov ja sub pop test push or mov popa adc test dec fldl2t xor sub leave pusha sub dec neg pop dec in or pop sbb sbb jne mov addr16 sub or int add push dec iret cmp jb aam imul sub fldt mov mov sbb repnz push mov cmc iret sbb pop insl pop test stos or leave sub dec mov stc fisubrl aam in push adc ret iret sti pusha and push cmp notl mov add jp jmp test dec and ss mov repnz xor sub cmp jne out test adc sbb ficompl mov xorl js mov es inc dec dec fcmovu jg or sub inc xchg sbb data16 mov lea dec repnz mov sbb aad dec sub lcall mov mov push jl jle cs sbbl inc cli aas and pushf test outsl out jns cli push movsl sbb leave cmpsb sbbl test cmpsl or cmp iret dec call cltd xor (bad) sbb in (bad) and repnz fildl test leave or repz xor les fwait xchg push push out or das push es lods xor outsb mov push push and negb js and test les lea add fadd jns lods xchg or dec sub mulb insb xchg decb inc movsl hlt mov adc nop lret mov mov sbb test scas pop sub data16 sbb or enter int3 xor mov sub push push push mov push fwait or push and adc mov or and cmp jne dec popa scas jecxz or add fnop push cmc out scas adc imul imul xor mov inc lcall sbb popa add dec aaa mov (bad) mov in rcrb adc bound out or mov movsl or inc fnop jg inc mov xlat jno in xchg stos xchg mov mov fmuls pop lret cli cltd or cmp jecxz in shll add outsb or mov sub dec or repz fisttpll mov out aaa mov cmp aad test push mov xchg push xor leave in std jbe loope dec es movsl and xor mov rcl push cmp pop jb int jne rorl lcall xchg (bad) int push int3 push imul clc fsubrl sub popf fwait dec stc cltd lcall adc loop pop dec sahf out nop or inc fsub sbb push addb sti add cmp xor add int pop xor ret push popa dec add mov add adc mov stos idivl (bad) nop or sahf adc and or and lods fimull fldl2t into leave push adc add ja add push push mov cmp fmull lock and xor mov lock sub mov iret test xchg inc mov mov mov lds sbb mov cmp adc ret pop repnz sbb stc mov aam inc cmpsl fisttpll (bad) div sub scas call shrl lret dec or jmp dec pop jnp and xor jo push xchg push add adc jo (bad) dec cmp nop cmp jne or dec sti xchg jmp cmpsl mov or clc pushf lods call mov or gs cwtl inc xchg out sbb scas pop xchg loop shr pushf cli cmp leave pop ss push dec or mov (bad) jmp repnz mov cmp sbb cmp test lods xchg (bad) jno adc cltd or or seto inc jns sbb rcl insb arpl addr16 sbb or loop dec cmc mov sbb push or cltd mov (bad) mov inc xor cmp xor ret fdivs ja enterw es and sbb mov or or ret jo jmp xor sti sbb icebp ret pop mov and int3 mov fwait out outsl test out xchg mov xor jecxz cli xchg inc mov adc cld jmp or js push out push shl int or push cmc jmp sub repnz outsb sbb lock notl push or push add movsb push pop (bad) test roll hlt push loopne or imul aad or das xchg push push std outsb mov (bad) fnsave push cmp insb or push or repnz pop mov and push or insb popa push push push repnz loopne sub sbb adc lods jl jb ret outsb add sbb rolb aad popf pop pop mov xchg adc add push adc pop add lock arpl notb xor inc or loopne or mov xchg in fcompl enter mov push sarl stc movsl and sti jno fidiv sub inc sbb cli adc imul jno popf dec jmp cli test mov add cmpsl dec (bad) jae jnp pop pop jo aam cmpsb or mov iret dec xchg scas ds xor ja fs enter icebp mull jle aad xchg mov test mov fnop sub jle push cmpsb cmc std cli jbe add mov bound bound outsb pop sbb test dec mov leave adc pushf mov jns,pt (bad) es mov inc loop cmc xorl shll sbb xchg (bad) mov pop jo mov incb daa sbb loope jnp daa orl mov inc das cmc imull dec adc or mov lea or test lret cmpsl test aad dec mov ljmp out repz add lods jle jnp jns loope scas movsb sbb mov mov mov mov xchg int sbb cmp mov or jmp sarl mov pop faddl in jmp imul adc jbe or leave lock jl cli jo leave addr16 sub or (bad) mov dec les aaa push xor mov pop ret sahf mov repz push bound mov out sub repz jns out xchg mul outsb (bad) lret iret mov (bad) setno push adc movsb add leave jno movsb jb xlat cmp push (bad) outsb (bad) (bad) adc fcoms adc ficompl (bad) into and out movsl shrb sbb sub push mov scas lock ror xor fs mov sbb xor in out sahf mov inc sbb mov or cmp push or or sub cmpl and repnz mov leave dec je test testb or and sarb cwtl dec loop lcall repnz clc or pop xor imul and mov mov or repnz shr inc lock jecxz fs jecxz dec xor stos xchg es cli mov jbe pop sub popa cmp and insb (bad) mov in fdivrp (bad) sti push out pop out lret dec inc mov or cmpsl sbb jmp ds sbb jo add mov xor (bad) jl sar std sahf dec adc add or adc xor mov stc ds pop mov fcoml push fs rorl out (bad) xor push test cs cltd xchg push jnp sub adcl pop adc or aam xchg mov adc jge maxps popl xchg ret push mov decb mov and jns cmc ds lods mov push cmp rcrb lcall jl jbe sbb inc mov cmp lret fimull ret fstps (bad) adc in cld into das loope mov and jmp ss cmp xchg and stos pop test popf sbb xor dec cmp push ficom sub adc pusha or xchg bound roll jb jno mov sub int and dec xlat mov pop stos test lret lcall out jmp cmc je inc ljmp pop neg dec jno jne lahf test mov int3 sbb sub daa test cmp jp out cmc bnd sbb scas sahf or sub cmpsl mul jno (bad) mov cmp aas sub sti stos add insb mull or cmp out adc dec test out out mov hlt jecxz jge roll push dec mov out jnp mov pushf pop dec pop and push repz xchg push push jb jns (bad) jle cmc mov movsl cmc pop push pop out push movntq out ret mov or xchg xchg cmp std mov les out mov inc lcall or into testl xlat ja fnstcw sbb add dec inc push push inc cmc or cmp sahf rorl sbb mov ljmp outsl or repz pop test pextrw push jae aas aam out adc divl sub mov repnz push xchg add cmp cltd or xchg push loope sahf lret into sub jle call cwtl cmp shrl dec mov and mov sbb mov dec push fs push insl pop inc pop int clc or pop (bad) repnz jo out loopne pop or mov inc or popa loop out xor or cmp movsl jecxz scas or adc or cmp sub repnz xor or in (bad) jns dec cmp push loop aad mov jge jne stos inc push sub cli (bad) out xchg test and jno jae mov mov jnp xor pop not mov jg popa fldenv or mulb stos enter cmp ljmp outsl icebp mov push das dec or mov sti js xor mov pop fldt sbb and mov out sti xchg xor scas ja loop mov mov xchg push or mov dec notb inc inc or push dec mov jns add js repnz xchg inc sub mov dec or mov or push (bad) mov int or adc popf xlat inc lret ror or icebp lret push adcl sbb fs xor shlb pop xchg dec clc xchg pmullw and sub loope outsb lahf and (bad) dec lods add outsl mov ds xor dec dec cmc dec sbb bound adc jbe jno or sub repnz pop adc push and loopne fdivrl scas cs inc cmpsl shll fs cld mov movsl or jnp mov or or mov lock sub sti enter add bnd data16 ja mov xorl pusha add or push mov dec in sbb push test pop out cmpl add sbb daa test out dec dec cmp in xlat inc or xchg (bad) mov xchg lret push lds cli push inc push out leave ja (bad) add or scas mov fadd nop mov scas xor loop sarb daa pop dec bound or outsb sub pushf (bad) mov jmp inc ja rcl out adc jmp sbb add in imull cld mov mov push push or cmpsl or add mov mov xor push mov push orl loopne sub dec into aas push add data16 xlat xchg xor xchg inc lcall jle imulb fldcw mov jno jbe and lock push lret cmp add xchg or or or (bad) (bad) sub fwait enter in fsubl cmp (bad) add mov jb ret sbb push cmpsb xchg xchg push mov pop incl inc sti ss jo subl xchg add dec inc popa icebp imulb sub (bad) sti std (bad) adc popa lods mov dec adc (bad) adc test fldl and xor xchg les jns loope pushl push jnp ja cli xor or ds testb push and push fisttpll or lods mov xor lock lahf les mov (bad) bound xor leave mov out out xor loopne mov int3 or xchg daa stc adc gs or unpckhps or icebp dec stos xor inc cli fistl mov lods xchg nop cli adc push push bound (bad) jmp and or int3 mov (bad) outsb aad mov or and xchg faddl cmp dec xor fimul sti sbb sbb and jne ror imul inc nop jo ss out cwtl orb sub ds leave mov or cmp aas xlat add je loopne (bad) or lods insb jecxz int mov mov jge add (bad) xor fisttpll data16 (bad) xor icebp lods cmp lods (bad) cmc or mov xchg push pop fsubp std call negl dec push sahf nop mov or inc push or xchg icebp ljmp push or adc mov rclb fcmovnbe mov iret into push mov int stos mov ds (bad) jb popa mov lret adc inc aam sub pop mov sub nop or clc and cld sbb cwtl testl movsl or inc jno mov xor mov inc push or imulb sub dec mov mov adc mov (bad) scas mov sbb xchg int int3 or cwtl addr16 lahf or add test in or dec (bad) adc in enter mov cltd mov mov (bad) sub push or ja aad xchg addr16 xchg sarl cld dec aaa adc mov dec leave mov jne or dec jno (bad) incl mov cmp sbb dec divb insb pop add mov test sar add scas movsl pop or outsb dec popa sbb lret inc mov xchg or inc adc or mov dec xor int3 js pop or pushf xor out scas mov xchg or sub idiv (bad) int pop mov test jne scas or dec outsl cmc adc or int (bad) jo imul inc sbb ja cmpb jne scas popf cli lds data16 or lret or cs in mov int3 sub mov cmpsb jmp add and test jbe shrb or pop (bad) enter aam adc ja cmp sub cmp adc push mov add fstpt mov imulb enter leave clc sbb in mov out mov mov or in inc inc leave push fldt repnz pop aaa dec (bad) inc lds or sbb cmp mov lods dec (bad) xor pop mov pop mov mov in xchg gs fwait insl pop pop test rcl imull pusha sbb jl test adc or or mov mov add sub cmc push sarl and dec lock jbe or addr16 sub daa pop jo and jg jb mov mov lock aas and (bad) or add lods mov nop jecxz fadds push jle in xor pop sti mov jmp or inc aas add or (bad) xchg sbb jg mov or mov mov bound or ljmp or inc mov dec icebp std mov aas xchg lods sahf dec or stos mov jo jns test imull inc xchg push xlat test cld and dec inc push lret or gs pop es xorb xchg sbb (bad) cmc in fnstsw mov gs test cmpb and test lds xchg jns in test xor pop inc mov repz jb es dec cli dec cmp (bad) mov in test divb sbb xchg loopne inc les push rolb in sbb add int mov scas pop or fs jmp mov test fstps loopne push test test sub push and lods xchg jno insb pop lods or sbb or (bad) in mov movsl xlat shr popf cmpl and xor lock and mov repnz lock cmp outsb sub pop jns jmp leave inc xor sbb xchg dec jne jl std or or sbb scas sahf (bad) imul xchg insl or xlat or fcoml xor jle xchg xor adc cmp roll jecxz scas sub xor fldcw mov (bad) (bad) or and fs jb shl mov push fbld or iret aam lret pop mov add cmc daa sub add arpl call jge (bad) out in mov fbld lret mov or ret mov pop or dec jne popa sbb mov test int3 mov stos mov and dec fdivl push or mov mov add jle sbb xchg push mov and mov repnz pop ret lret in push (bad) je pop and mov ss ror push push or jecxz dec ret cmp mov flds sbb push or movsl cmpsl adc enter out and jg sub sbb ljmp mov aaa dec mov push mov mov iret fsubp push movsl mull lods stos fldcw sub dec xchg push jmp add pop push cli add fildll pop ljmp and mul mov cmc sub insl jbe or pusha test pop jae or call stos je hlt loop jo lock imul xor icebp xor jno cmp testb shl dec int3 cmp repz enter jmp jge jae rolb sub cmc fcmovne mov adc cmc mov pop and pop sbb mov mov mull faddp jnp and mov push mov enter pop paddb out mul in and push andl pop imul addr16 mov int in inc in xlat test loope sbb inc faddl mov xchg mov sub loopne (bad) mov outsl cmpsl jmp mov loop orl push mov div mov imul mov pop xchg wbinvd sahf fbld or daa out loop lods and pop (bad) jmp arpl loope fisubrl dec (bad) or insl imul xchg sub ljmp push pop int3 mov pop inc cmc push ret addl je mov inc jnp outsl test (bad) pop jo fldcw inc leave push gs in mov sub pop sub or shl into cmc imul cli push (bad) jmp inc or cltd out adc popf pop fcomi mov inc lret or out imul cmp mov mov out (bad) imul or js adc lea fwait aad arpl sti cltd mov mov insb or ror jmp mov sbb nop std inc mov push test add insb call sbb dec add mov fsubrs mov cmpsl data16 arpl and aad jbe jns lock fwait push pusha (bad) push add mov stos iret mov (bad) cmp aam rorb in sbb loop lock je inc popa movsb sti clc rclb or sub mov pop cli popa cwtl stos (bad) jns int3 ja dec (bad) push movb fucomi or dec xor sub or fsubr mov cmp inc or pop jnp je ljmp imul jae mov xchg or adc cmp mov stc (bad) push in hlt jecxz jp daa int lods xchg mov sub mov daa cld and adc push mov mov adcl or sbb lret in push mov arpl mov cld xchg mov pushf inc jne in jecxz iret mov movsb or push scas popf dec mov mov lret fnstsw jl or mov loop sbb (bad) pusha push je pop or sbb das or call ficompl inc xchg and bound mov adc (bad) xor add sub add in (bad) adc lock mov mov ss pop in or mov fadds incl aaa jecxz loopne popa sbb jmp outsl pop insl inc or cmp sahf inc cmp pop lock mov xchg es push hlt lahf lock stc daa (bad) push cs or mov cmc (bad) dec int3 push mov jge jmp adc enter jb jle mov mov mov aaa lahf dec (bad) xor adc push sub mov popf ret das fwait dec aam sub add test shrl ljmp (bad) push in xchg add sti jecxz inc lret mov popa mov mov inc pop in idiv out cltd mov std xchg push jle in shrl adc leave cmc int3 rcrb (bad) xor cmc pop test or jecxz xchg jne inc mov loop iret stos lcall jg hlt aas pop sbb int cld sub sbb or dec or mov (bad) int cmp out jbe (bad) jmp dec cmc int3 addr16 stos mov (bad) jle test in mov cld pop lret out cli (bad) decl jecxz xchg mov out sub in test leave add sbb or pop jnp loope push sub ret rorl imul leave ficompl je inc nop pusha insb sub lds sbb push add repnz (bad) popa pop stc dec mov fwait mul xchg or push cli outsb fistp orl iret push adc xchg stc fidivl sub fsubl sub mov mov ss test push lahf xchg inc or fcmovnu mov movsl jmp stos jmp int3 xlat idivb nop inc sub dec fdecstp push mov or mov pushf or cmp inc nop adc incb out (bad) fcomip orl adc push test outsl cltd lcall add clc mov push vcmppd cmpsl mov xorb (bad) out sub ret lret pop dec pop mov enter jle add ja dec inc mov stos push out dec pop es aam dec xlat xor lea jle ffree aas outsl cltd mull pop repnz inc hlt idiv or dec leave xor incl dec lret sub dec jne addr16 dec loopne test mov pop cmp xchg ret mov jl lret je in adc loope fsubrl cmpb lods or xor wbinvd cmpsb xor jmp es pop pop mov add lock dec mov mov out cld cmp xor sbb rorl pop scas jle stc cmp adc or test mov push mov stos mov or (bad) (bad) fsin jno mov andl xor push jmp mov or pop mov adc cs cmc push repnz enter arpl xor xor bound lds sub (bad) sbb and push shrl lock inc sub mov cli jle adc sbb cmc jb dec sbb or test outsb cmpsl leave dec cmp adc cltd lret mov mov jl in mov pop out idivb dec jmp (bad) aaa (bad) and sub outsl xor or mov in fdivp mov ja xchg sub (bad) popf dec orl cmp sahf lock jp aaa sti mov scas mov xchg test into and xchg (bad) je xor mov add push adc jne ljmp test lret fimull xchg add cltd cmp ds or into mov shr xor insl add enter mov or adc popf shrb sub lret icebp xchg out sbb cmpsb push fnstsw dec or (bad) (bad) lock mov or jmp sbb add or mov pop gs sahf adc mov pop lea inc mov inc jbe enter mov dec ret ss orl adc xchg int push loope jmp mov jno (bad) gs mov in or inc icebp hlt add jbe xchg adcl scas fcomp dec xchg cmpsl sarb pop add (bad) iret mov xchg mov scas push imul mov dec mov inc out adc dec nop inc clc adc mov xchg scas dec and sub cli sarb dec insl mov dec aam or inc enter cmc or mov inc lcall daa bound cmp push notb jns stc int mov mov stos sbb mov push jle push or mov pop and sub enter setne jns stc sub sarb xor sahf into dec ljmp mov jp lahf roll shr push (bad) jae decl lods push adc add cs popf sub or push inc pop cmc loope leave imul mov mov dec mov mov sti mov lods and add inc pop xor aam int3 mov push mov out insb xchg jecxz lock jge dec add mov lock cmp mov jg loop rcrl test fstpl lock and pop adc dec mov (bad) mov fisttpl add sbb xchg jl push jno stos je xor inc pop leave popf dec js jbe or imul pop mov fdivs ret sbb or cli xchg (bad) es or jo (bad) sbb imul lahf dec xchg inc sub fistl xchg hlt or popa std xchg xor iret xchg sub movsb dec mov dec loop sub pop lock roll and les or int3 xor xorb inc int3 or or push rorb rolb sub outsb push or push jge add insb dec (bad) inc xchg pop and xchg sub (bad) push sbb mov push and mov pop stos add xchg mov fnstsw ljmp mov dec jo in sbb pop scas popf push sub cltd rclb sbb fisttp pop inc addr16 lahf (bad) (bad) mov jg movsl clc in adc adc ljmp jnp dec stos mov imul out hlt pop cltd sub divl mov addr16 jge mov mov mov add divl stos rcll repz xor jge sub ret addr16 stos or add push std sbb imull mov ljmp ret sbb rorl inc lcall lock or or fidivl add or std test inc pop mov aas inc sbb aad and or push out pop shrb imul (bad) dec xor or jmp jecxz (bad) or add push pop mov jecxz loop test pop or or insb sub mov mov and lea test jbe mov loop jle mulb mov or cld (bad) leave cmp (bad) xor or push or adc test repnz xor ljmp mov mov jbe fwait call (bad) push dec cli (bad) add sbb pop cmc inc aaa (bad) jo mov xchg cld jge dec js in cmpsb lcall adc cmp or nop test insl ret and cmc cmp lret xchg adc and dec ljmp mov xor mov jno add jp stc dec out sub or roll adc or nop insl sbb mov mov fist pushf or enter add out test xor or popa in js dec or sbb or pop lcall (bad) daa aad jb or aas test stos jnp push mov lret movsl iret dec movsb nop mov dec or and push (bad) and xor or add psrlw (bad) cmp aas leave (bad) mov xchg imul test sbb mov mov cs jle sub adc (bad) stos or lds rclb mov popa out xchg cmp jle call aam out call sub mov jbe sbb push mov in mov and mov outsb push sbbl or lods inc jnp cmpsl cmp stos or or (bad) repnz sbb pop in mull or mov or push xor jp test xchg add sub fxch xchg or xor fwait cwtl popa mov scas mov mov adc jns jae jo enter lods jo not pop xchg mov mov push or aaa and or xchg call test push aas inc mov sub cmp inc and or aaa sahf xchg pop mov sbb sti xor (bad) pop or mov jae push lods pop or xor sbb pop jmp loop ljmp and lahf inc fwait out bound cmpsb test mulb lds mov mov mov jo gs iret mov stos mov stos pop and cmc popf cmp cli dec mov lods mov adc push dec or scas adc cltd cmp ds sbb push aam or gs test repz sbb mov xchg or fstps (bad) idivl out ss jg aaa aas sbb call arpl jp clc stos test dec (bad) jmp lahf add mov das pop xchg sbb daa mov ret nop push pop jmp or dec pop dec push and xor test xchg add sub pop inc and push inc fisub mov sbb sub sbb add sub sbb je and jg rorb pop rcl aas test or add add cmp cmp lock cmp (bad) push xchg loop leave cmp cmpb sub out inc mov cltd mov fcomps pop aaa fidivl std out pop enter lret adc dec or insb repnz cmp mov fisttpll sbb fwait sbb mov std pop gs xor mov mov pop jmp or jns xor (bad) ds cltd cmp cld dec lds pop push dec push and fistl lret and xor pop lock cmp cltd push ficoml or sub iret mov or test lahf fmull fcoms cld iret ja ret into mov jp sub or jecxz fincstp cwtl gs dec lods adc push test dec std push mov loopne or decl push (bad) jle pop sub in push xchg fcomps les sbb mov push leave mov les popa mov inc ret push ljmp pop fwait jl into ja or or or sahf and xor jl ror jo outsl cltd jnp lret scas fbstp (bad) lea gs cmc pop aam mov cli cmp xchg out pushf sbb gs add mov hlt aas fst (bad) test enter add lock jb xor loopne test popl push iret hlt adc mov adc mov insb mov in push jl mov leave mov dec and jns aaa in lods stos fmull cmpsl or cmpsb pop (bad) pop mov sbbb enter into ds xor cmp add mov jbe jne loopne pop bound lods std push xor or push pop gs jmp or inc popa iret or xorl lret mov mov imul ret mov and (bad) icebp jle jo testb and mov dec mull xchg sub xor mov lock mov and sub sbb aaa aas inc aad and push xchg rorb dec or popl decb imul sti lock rol subl das mov (bad) jmp sbb repnz stos pop cmpsl lret dec dec xchg loopne in test mov xchg lret mov repz fstpt add dec dec icebp loopne in jmp push mov jae cltd mov movsb cmp mov aaa rcrb push dec add sysenter out or mov dec ljmp mov mov mov andb sti ja push das stos mov jg imul or ror mov xchg data16 jae or std lret test adc (bad) dec inc cmc xor fistl add dec sbb push or xor lock stc cmp mov leave sti (bad) lcall pop push fisttp in sub sub and jne jbe push fs push fimull std or fcomp inc notl jmp mul mov lods pop mov or fdivr or test jge enter outsl inc push adc sbb mulb sbb sbb mov xor enter movsb hlt and or fwait clc or out xor xor cmp stos imul push push loop cld mov ds pop cmp dec mov fisttp or lret sbb jae repnz mov mov decb adc ljmp push clc aam mov xor or mov cmpsl and sbb fistp idivl pop and or adc xchg notl sub mov inc cmp jle xchg into outsb hlt (bad) and test test and add insb sbb or mov xor jle fs and fimull mov (bad) dec push stos fistl pop and cmc push sub fdivrs or ret or xor repnz cmp xlat movsb jmp enter (bad) or adc inc loope in pop mov sbb fstl hlt pop fwait imul sub popa inc das fimul mov fisubl mov (bad) dec or clc aad xchg mov sub aaa xchg cs sbb test and or enter int and pop movsl aas and sub inc xor loopne adc mov lods cmp or (bad) xchg dec and hlt sub out or push pop cltd mov lcall mov xorl dec mov jns dec leave mov xor xchg and push popa mov push add mov mov cmc lock gs out pop or mov cld mov add cmp or or inc inc lea push mov (bad) mov adc push call (bad) (bad) mov mov ljmp or arpl sbb lea scas adc jecxz int sub dec lret mov into aas cmp push jmp (bad) insb and mov or xchg sbb or jne inc or push push out xor pop or cli and scas aaa sub sub js negb lods xor push push cmp inc loopne icebp gs dec div inc cmpsl jl ja add push or (bad) sbb pop (bad) cs adc or (bad) (bad) or mov jns pop movsl (bad) stc (bad) jbe mov dec enter mov inc adc pusha and sbb ss je jo cltd mov sbb ds outsb (bad) adc or lahf clc ret mov repz dec (bad) (bad) lock cmpsb mov xchg or (bad) loope sahf jecxz add test jae dec or daa shl shll movsb arpl (bad) jle fwait pop and xor lahf sub popf dec inc (bad) add or and add mov sub jmp sbb dec mov pextrw test pushf jmp arpl or in mov jmp inc inc ds mov dec jbe or imul mov cmpsb cmpsl xor sub mov push ret repz sub mov and cmpsb in sahf (bad) jb jmp and das or xchg or adc lock test and jg mov sub repnz adc sbb test repnz lds lock fdivs (bad) push inc lock push sbb pop jl cmp test xchg inc movsb (bad) lea add or mov add insb add xchg or or push pop repnz bound and fldl cli inc dec mov je mov out jecxz dec jmp xor xchg movsb sub sbb xchg sub daa pop stos aad inc loope adc push add lock xchg dec mov and mov add ja adc add sbb icebp sbb div cmc rcrb subl mov sbb hlt stc adc dec mov adc jl cmp icebp cmc xchg fsubp inc sbbl lock jge ja mov lret stos jns sarb mov adc xchg push jle push movsb jno xchg or sahf inc in adc scas mov cli ja bound dec sbb fdivr scas lods fcomi roll jne fcmovb push mov and stc mov xor dec bound add ffree jae or arpl or das adc xchg cmc out pop mov clc dec or test lods push jmp mov mov clts fnstsw dec dec jae lahf pop or fsubr xchg lock (bad) jb lret jbe add mov loop xchg outsb or cmp loopne lock ror lea mov lret mov in stos (bad) sbb test (bad) cmp jecxz psubsw push aad out lret jmp lds xor or cmp addr16 jmp fwait movsb lock mov add jmp out stos ret or in fadds adc bound sbb repz lods sti mov (bad) sbb (bad) into or mov xchg popa sub xchg int3 cltd adc pusha xlat sti cmpsl lret jns jbe aam cli mov xchg push jmp xchg push inc fdivr pop test aam push sub shr fcmovu mov sub mov (bad) daa scas (bad) imulb ja cmp movsb lcall enter sahf js jecxz push dec int aaa or fstl add xchg jecxz pop rorb imul stos inc loope sub add xor cld or (bad) repnz data16 sub sub out cld rol loop fiadd pop add hlt in pop les or out push (bad) sbb mov jp xor sbb cld ja stos and roll cmovno pop pop test jno daa insl or hlt cmp cmp bound add pop mov dec cmp pop adc rep or gs inc inc xchg popa and jle inc mov pop popa or fs mov inc rclb ret lahf test pop pop popa imul and cmpb pop ret pushf pop (bad) cmp clc int cs lock in or jbe push testl or cli or mov xchg sbb push mov dec mov fmuls popf out jno jl pop add add pop and or cmp push dec jnp test pop test rorl stc cmp repz or cmpsb mov (bad) mov or lahf adc int push es loopne or paddd aad fwait xor dec rorl rcr cmpsb mov adc js pushl lcall bnd mov sub or in push or gs lods fmull or cmpsl aam xchg mov xchg cltd push or inc inc pop rorb cmpsb mov add add jbe mov stos xchg dec pop es or sti inc lcall push divb sub dec (bad) mov add fwait cmp dec jp or mov dec sahf or add sbb or arpl mov xchg dec or fwait sub or fucomi mov leave out push or jecxz or rorb in xor fmull les mov mov sbbl sbb push inc cltd or jecxz std or dec xchg fmull inc imul in jnp in in (bad) xchg adc xchg div dec add mov in pop ljmp mov dec pop xor fucomp fcmovne or ret or xor add insb push aaa lahf enter es or cmp negb neg jle mov js dec sub int cmpsb mov inc lock adc xchg pop and mov mulb sahf out push jns mov or sbb ljmp dec sub push mov popa sub repnz adc xor jecxz jecxz or pusha or add ret adc dec or sbb aam jnp inc hlt leave sub push push jle lcall or or jo dec push gs (bad) or push or push (bad) push mov inc cli jg or mov pop push adc fidivrl mov jp in ljmp or adc fildl jecxz mov add inc cmp sub sub adc mov out lret pop inc pop or hlt dec bound dec out nop mov rorb in cmp in jle jae iret movsbl add mov mov inc repnz pusha adc rcll in fbstp pop lods mov inc push mov sub leave xor sub sti jne pop loop idivl rolb cltd add adc clc or jae mov icebp adc mov push or jb or fwait and add or adcl aam mov jbe add xor sub or ret pop fldt repnz inc cmp adc sbb and les pop or xor stos or aaa or lcall out adc shll mov into aad or inc cmp test fcmovne mov mov insb sub push add jmp pop adc (bad) imul (bad) test (bad) cmp cli mov stc rcl aas sti push out and fildl mov inc fdivrs mov movsl ljmp mov adc push shll jle xchg cltd jmp xor imul stc xchg jne push lret xor jbe pop push jb insl je sub movsb add lods (bad) leave inc dec adc int3 std jo fcmove inc xchg lret mov inc inc out inc imull jns js xor fsts or mov lea mov mov stos std dec mov bound mov mov pop or push es lods sbb pop add roll mov out or xor lret push movsb xchg cmc (bad) cmc ret mov dec insl pop in aaa rorl lock inc push outsl imul ljmp call dec cmp adc sbbl cli je int3 dec arpl int mov adc lods pop in or fild idivb mov and pop stc daa fisttpl lods xchg mov ds or bnd mul jmp dec jmp xchg (bad) jae aam or into fbld adc pop and mov jp (bad) push mov jae shlb xor insl dec (bad) roll movsl adc (bad) fisubl push dec xchg jmp cmp adc sahf sub ds (bad) or adc xor jb fbstp sub leave es stos adc es shl and cmc sbb mov jge push mov out jle inc js adc adc lock inc test xchg jns (bad) xor aas push pop ja mov loopne (bad) dec in nop mov cmp out sub push (bad) jo sbb lret push adc test xchg stc add aaa mov cwtl in adc sbb sub push loope cmp add inc xor int3 lock inc dec rcr (bad) inc xchg mov sub jle mov pop imul fwait mov push push stos mov out loop add xor pop or mov xor adc cmp mov adc pop jmp addr16 std pop pop adc pop pushf jmp inc cli idivl xchg iret mov ds repz jmp scas mov insl (bad) subl mov and adc push or cmp mov xlat lods ja dec or stos inc or hlt add sbb mov in pop add andl stos or mov enter int3 es hlt addr16 or pop jo mov sub sbb leave push js into push mov xchg or xor and or fwait dec xchg mov mov mov clc push fdivrl ss (bad) jge ljmp xor dec or (bad) fldl and inc sbb inc adc or stos adcl ljmp jle dec loop roll push and lret negl (bad) jo mov js out aam popa and or lock push add mov xor or gs mov or pusha mov dec cmc mov mov lds fimul movsb inc adc in or add add mov inc daa leave and mov aad cmpsl imul push notb call and xchg iret or sub movsb idivb adcb jle or inc adc jne iret mov stc test xor in cwtl xor dec jb repz (bad) mov in out pop js jge incl aam cli mov sub mov or jo xor sbb aas mov xchg je jecxz mov test lds push mov mov or mov movsl mov jg inc adc fnstenv and mov adc jne lock test fnop fsubr leave ljmp movaps adc xchg scas pop enter pushf mov bound aas aad xchg and jne jb push xor ds sbbl imul xor pop out push mov or stc fldenv int pop mov loop lcall stos cltd gs and sub or test or jnp adc movsl cmp addl test or mov or mov insb pop mov ss or xlat xchg jnp push dec dec adc or mov (bad) test xchg ds jno pop mov or into inc popf cmp mov push es lcall lds or push loop pushf js cltd rol iret sbb sub (bad) repz cli mov mov push cmp test push jg push mov adc cmp fmul jns test cmpsb lock leave fiadd mov adc jmp push pop fs int aam jmp ja dec mov xor decl cwtd imulb rorl lods out add clc in cmpsl inc scas in jle mov dec ret addr16 imul lock lcall jg fisubrl lcall add inc cmp mov aam cmpsl or lds cmpl repz cmp jno iret out jl jno jle cmpl mov cli dec dec mov cmc stc pop mov fcoms gs cltd out cld adc cmp mov push and and popf sub mov gs xchg dec pop push (bad) (bad) or fstps mov jge and and cmc add jne pop xchg dec int3 inc faddp je jo enter mov jae pop jle loop cmp pop or les sub inc loop int3 js lcall idivb outsl xchg cmp jle (bad) aam lahf dec or and pusha pushw rorl jmp out clc das or or pop inc dec mov mov gs cmp push push xchg and std push dec nop add jb sub or inc jle in scas notb sbb (bad) or sti lea inc sub cmc in repnz out loopne cs adc (bad) hlt out fidivl int dec inc xchg sbb imul mov mov xlat lds and ret mov or nop lds jmp daa test popf or movsb dec xchg cli jp inc or sbb scas (bad) or hlt and faddl or xchg ret mov int3 or pop cmp mov out dec sbb push xor mov push fisubl mov fxch insb ds sub inc dec or push lcall orl inc push and or mov bnd push aas inc pop aaa inc push scas cli xor (bad) dec mov (bad) sahf cmpsb jle sub push inc movsl xor adc sub jns inc and mov das jno scas test pop hlt adc negb fistl stos or nop jmp mull into ds mov outsb mov mov jae xchg mov aad pop popa lds xchg cltd xchg inc sti add and popa ja dec mov jae mov adc sbb or jns insb push rorl or adc (bad) xor outsl insl rorb leave insl inc lahf ret jno adc loope jns jle sub (bad) (bad) cmp mov adc mov outsl repnz sub mov dec (bad) jbe sbb mov mov clc decb sbb hlt pause xorl clc pop mov adc inc inc mov cltd adc mov and out pop adc inc js js leave cmp addb mov nop test or imul xchg popa mov mov inc xchg and movsb (bad) movsl imul mov hlt andl fxch lea pop jns pop sbb cmpsb stc adc test adcl adc int pusha movsl cli jne ja dec jo xchg dec mov adc push data16 adc loope jne lods adc lds mov xchg (bad) aad xchg jno pshufw xchg xor inc test adc dec sbb sbb lahf mov push and leave push in or dec inc dec xor pop in call ljmp or jle insb mov sbb mov mov xchg xlat sahf mov shll dec sahf loop adc and (bad) push loop jnp mov cmp xchg mov popa in mov js out mov sub lahf and mov mov je cltd or sbb std imul or jmp sbb sub je jo xor push insb ja lcall loope sub mov imul pop sub sti add add mov or xorl lea ja add mov ret sbb xor or inc lock xor cli les sbb test enter pop dec out cmc add test mov imul xorb sahf pop sti or (bad) mov ljmp in mov (bad) out xor push cmp pop mov sub or cmp mov lahf or xchg or lahf imulb es call push fstpt xor les call nop jae ret inc daa test out (bad) xor fimul insb ficomp aam cmp or test imul mov aad int3 in mov xchg cmc lret test dec xor in or jmp inc sbb aaa and add sub (bad) push mov out and lret fnstenv xlat jnp mov lret xchg loop (bad) mov xchg jmp cmpsl stc add in icebp std pop sub add insl pop mov jae (bad) out cmc and mov dec xor movsl mov cmpsl imul cmc or or xor cmpsl sub mov adc daa xchg lret int movq loopw add push sbb adc pop or nop mov les cltd dec adc xor mov mov sub cmc inc ds pop inc vpunpcklwd adc movsl push push jmp insl insl push fwait pop push stos jae lods mov and leave jecxz xor rolb out pop cmp insb dec lahf add or mov jl insb or clc lock push cmpsb ja es adc xor aam jo lds pusha and insb xchg pop loope jbe mov ljmp (bad) mov sub rcll lods leave mov inc add and (bad) jmp stos jle inc adc sub lock xlat mov jmp jg std dec sbb xorl fs cmp jle loope and mov mov xor mov mov daa pop je rcrb jp add or jns sbb inc mov or or aas fwait jle stos mov mov les pop loope pop ret push fsubrs xchg das call xor repz enter jmp in push fnsave add ret dec out (bad) iret jg dec pusha xor dec jmp adcb in fnstenv leave push dec div lods cmc jnp xor pushf jg out jns shrb (bad) neg xlat lret adc out cmpsb imul pop out sub cli jo pop scas std jmp push lock (bad) int sbb add lea data16 xcrypt-ecb cmpsl or lods push adc in cmp in sbb stos cli mov xor mov jno stos jns scas dec ljmp iret (bad) jne dec inc out push pop inc in xchg cmp xchg pop rorb lret pop push mov test insl jns xchg sub push cltd cmc insb test mov and xor or (bad) mov imul dec mov cmp ja adc test mov pop jl mov jle mov ja xor aas dec daa insb jmp inc sbb add jecxz pop hlt pop jo rcrl es rcl test dec sub xchg inc mov fs in fdivrs fild cmpsb in loopne inc cld fisubrl outsl adc fsts incb pop jl jmp (bad) std cmpsl or out (bad) cmp jo xlat movsl ss mov mov fistpl xor shrb xchg jae pop fmuls cmp xor add mov sub lock test mov adc mov imull lahf and ljmp test push cmp add sbb add mov jnp cwtl mov mov cli mov iret cmpsl jnp mov (bad) or sub or sub pop mov adc out dec (bad) out or popf scas mov das adc fcmovnbe mov movsb push inc decl dec sub xchg orb imul mov xor mov pop pop or inc jne sbb shrl cmp xor jns mov clc cmpsl inc out or shlb orl xchg mov jno mov aam push (bad) int3 test mov add sbb mov pop cmp inc lock insb test movsl inc or imul jnp push or adc add sbb bound push out pop cmp in sar out data16 or fistp int3 adc inc mov aas add push mov sbb or ds out adc mov in dec push jb repz and loope pop lret mov mov test or xchg and push add sbb or dec test lahf push scas ljmp fwait pop mov es repnz fimull in or sub cld cmc or mov out or cwtl cltd jmp sahf adc fisttp and push pop aaa mov inc insb dec jecxz test lret hlt lcall jns dec cld jecxz lock inc xchg pop or push test pop cmpsl or js pusha test pop sbb rolb inc repnz (bad) dec xchg gs and xchg mov push outsb aam call aas and mov mov test dec add inc les mov repz add xchg cld sub popf cmp (bad) (bad) cli fldcw inc sub out out leave push xchg and inc dec sarb dec adc (bad) int hlt dec dec pop hlt mov ljmp icebp xor aad leave lods mov jne sub or cwtl jo aam fsts clc sbb pop dec lcall jecxz jmp cmp or or or shll and or sub int3 loope cli je or test jbe jbe dec inc inc into cwtl cmp mov lods mov lock int3 stos or add mov inc push lock push fnstcw pop ja add push cmpsl mov xor loop inc adc lea and mov sub mov cmpsb imull out pushf xor movsb fs mov rorb lcall push xchg loop (bad) nopl loop push cli and nop pop outsb xor or popf scas xchg hlt test cmp rorb ljmp aam jae xchg or loop test mov std xchg cmpl leave mov ljmp enter cli mul (bad) outsl mov jge sbb leave (bad) xor mov sub hlt cld sbb fsubrl cmp fidivl dec sahf mov cmp movsl cmp fdivs rcrb ret jo or arpl or pop (bad) dec push jle mov jns in (bad) dec (bad) xor fcoml cltd pop cli xorb (bad) out inc jge xor add ffree cltd (bad) or push sub leave fs rcl cli cmp test or scas mov pushf aam or hlt insl mul push movsb mov dec xlat or cmc sub or xor out adc das in mov jg ficompl lods xchg or iret mov or cmpl (bad) je mov and add lret shrl (bad) push push mov (bad) lret dec or sarb inc dec dec inc jp es outsb add ret mov jo push adc enter and ret fbstp xchg jns sbb mov xlat nop jge rcl dec or add loop scas sahf pop xchg push out movsb mov xchg jmp sub ret lock out xchg pop pop idiv (bad) jnp cmp hlt and xor add jge insl adc fstpl cmc cmc adc ss mov and push mov inc xchg (bad) dec hlt rorb sbb xor icebp xchg leave int insb scas mov cmc movsl push sbb inc fsub jmp adc xchg shll push adc dec push add sti cli arpl add in xchg out cmp mov scas mov cmc adc and mov inc arpl push cmp or or mov inc mov add hlt inc push pop adc add adc (bad) cmp adc inc mov jg inc sar xchg fnstcw (bad) mov and or jno je adc out pop cmp hlt mov inc out mov sti gs cmp cmpsb sbb pushf dec sub inc (bad) adc xchg cmp lods and push adc lcall mov lea adc jge ja movsl cmp xor lcall aas or push add or (bad) flds adc lods (bad) mov stc xchg daa sbb add outsb sbb adc (bad) dec mov popf xchg test sbbl add inc or cwtl pop bound or es outsb (bad) popa frstor (bad) mov push xchg or push jns out sbb pop or xchg andl ret imul std (bad) out test loop mov pop ljmp inc leave addl popf in wbinvd clc add and cmc repnz cli (bad) std sub (bad) hlt mov or inc roll mov mov jo (bad) out sbb negl test cmp jg pop repnz push mov add loopne or fsub ss dec mov faddl jge mov dec xorl and in jle mov or xor jl enter or std call jns sti ljmp rcl std movsb dec jne xor lock mov jb mov push fild push push or icebp loopne xchg dec jo (bad) mov cmp sub pop cmp pop or arpl imul shrb (bad) sahf cmpsb cmc xchg cmp dec mov loope push in sti jecxz insb mov sti xchg add aam (bad) bound cmc dec shl aas xor push and les cmp in fcmove repz std pop ljmp push mov sbb jle or cmpb stos mov dec push icebp loop cli mov push or and jmp jecxz mov mov into aas test repz cltd insb (bad) or imul mov (bad) cli xchg sbb out faddp ret rorb lods pushf and inc or and fisttp arpl lock imull call add xlat inc fisttpll popa xor add insl mulb push jmp and dec dec outsl mov xchg mov sahf (bad) dec movsl add jnp xor xor icebp mov dec rcrl das sub decb fcoml test loop pop or mov xor mov icebp (bad) repz cmp (bad) xchg mov pop xchg xchg adc test repnz push sbb add cwtl cld adc rorb in mov jecxz icebp mov xor or mov scas or xor pop dec dec jecxz imul pop or mov iret mov repnz push iret push leave mov inc jmp xchg sub inc mov bnd (bad) jnp cmp ds mov aad hlt and jp aam push or mov push pushf push adc fcmove fnstcw jne jp cmp lods std test rolb dec or push ljmp lods decb xchg mov push (bad) or ljmp movsb cwtl sbb repnz mov setnp mov inc (bad) jae pop ret sub mov loope dec xlat and frstor imul push mov js mov pop loop lods jmp mov xchg jecxz fisttp mov jmp xchg orl (bad) popa mov dec or mov sti push jo shrb lea xor das mov lahf test popa fisttp mov push daa pop fnop sub jbe inc mov mov mov add int fstps fsubrp in repnz mov or mov fcmovne mov mov xor jb fcoml inc sub and or jo (bad) hlt cmp push xor test cmpl or in cmp rol or jmp pushf stos jmp outsl pop push int3 jg mov out or mov mov sbb es lea popf xor sub (bad) mull decl push inc (bad) xor or xchg mov jle adc iret jl fist call jns dec data16 pop pop idivb imull cmc (bad) jns imul or xor and sti mov int3 les sub xor mov xor cmp rorb xchg test and or movl or hlt repnz jecxz test mov frstor idivl add addr16 xchg push jns add into ja out xor bound push push dec pop mov cli xor inc enter jns jb sub orb jmp stos lcall mov or ret (bad) jae cltd insb adc mov test push pop or pop divl test mov mov (bad) idivl cmp mov loope movsl mov push repz mov imul pop pusha sbb aad cli (bad) rorl int3 push (bad) in push jo adc jg push clc cmp arpl or sub jnp imul sbb aam aas fisttpll loopne and or xor pop pusha incl and inc mov mov xchg xor nop movsl push neg sbb dec push dec jle repnz les mov dec adc arpl lock imul loope mov out jno or shlb adc or stos aas and dec rorb xchg out mul scas cmp xor or adc rcll dec jo dec imul popf pop jge aaa xor out push leave std xchg mov push and call or sbb jbe or dec inc loope rorb jae add das adc xor mov test adc or pop test sar rorl cmpsb loopne push je cli jmp in push dec or xor jae,pn roll loopne dec add test pop or std fcomps aas and xchg daa movsb imulb xor (bad) push in jmp jnp or out mov mov out mov push test fucomi popf cmp mov fildll mov in das int vphaddubd jo jb inc or icebp loopne or xchg outsb pop mov or movsb hlt loop sbb push lods (bad) mov dec sbb jecxz in adc or xor mov or andps lds jns in jno mov je or jl xchg lea (bad) mov add scas fcmovnb stos inc or pop mov or nop pop lret xchg inc emms or arpl movb fldl imulb adc clc dec test stos pop data16 cmc fdivrs push data16 lret or add out add and leave dec add repz jecxz adc push or (bad) dec mov fnstcw out cmpsl int3 mov jns sub stos cmp or dec add mov pop sub stc repz xor ljmp hlt mov jl movsl mov or jl iret movl jecxz jo pop and mov nop inc stos notl jmp in fsubrl cli aad and ja lds adc sbb ficoml and mov cwtl pop jo adc dec xchg jbe fwait sbb push mov jb sahf daa insl and sbb add push pop jmp cmp andl (bad) adc ficompl sub dec and push jg cwtl and std adc mov aam dec lods out cmp mov test xchg fildl mov jmp dec insb call iret idivb test scas cmpsl ja out mov stos sub xchg jnp inc into out std sbb add mov push popa cmp cld mov push scas insb cwtl std jae fdivs leave xor aas sub leave push jl push mov (bad) xchg cmp xchg pop leave notb add dec lods sub mov mov cmpsb arpl mov cs cmp call adc add enter add jl je xchg roll mov xchg stos std push enter mov mov cmp mov pop int jno in sbb inc mov sub cwtl push stc int adc (bad) out das push cmp (bad) leave clc adc leave add loop add sbb jmp lods pop or movsl ja adc mov (bad) xchg test or push popf les add rol scas inc push add ss repnz mov or or jg dec inc jns mov xor cmp adc icebp jno jne divl adc or add in add mov cli fsubrs jo lock inc jnp push ds mov jo sti jl pushf idivl xchg cmp inc mov or xchg daa cmp icebp ss imulb cmc lods fwait jle arpl xchg mov fisubl leave jno stc js jmp loop data16 adc jne pop loope (bad) icebp inc inc cltd jns (bad) pushf add mov stc popf push xchg mov aaa push sete mov sub scas jno test push rcll notb jne js fwait js push mov jns lcall stos pop pop mov dec into testl jns add inc or push ss mov mov cmc lcall mov cmp (bad) add negl push pop xor je sahf adc jno jno mov pop mov (bad) cmpsb push pop clc cmc cmc adc pop jo lds daa inc mov ret jns adc and inc fucom push inc pop mov lret cmpsl fwait bound and mov jl mov icebp xor adc jge add dec ljmp (bad) mov jle fwait outsb decl sarl jae mov movsl mov inc adc out fs mov dec mov mov xchg sub cmpsl and int adc xchg sbb mov sub dec (bad) xor mov fwait fs (bad) sbb stos add popa push dec lret js mov insb ja pop mov daa lahf push mov dec fwait inc jno xor stos adc pop jmp imul in es (bad) hlt inc cmp add jl pop icebp sub fsubrl xchg shlb rol fdivl jno jp jne adc adc mov sbb ljmp jle or sbb xchg fstl pop faddp repnz shr scas imul pop cmpsl xor movsb xor icebp enter push pop sbb addr16 adc inc cmp mov push jle testb icebp jae lock (bad) testl push fdivrl or sub or in movsl dec sub pop adc cmc pop cs int sub push xchg fldl frstor jg ljmp out jno adc adc hlt jle in leave lea push xchg jnp mov pop xchg aaa addr16 dec jno movsl inc xorl adc add aaa test mov stos movsl jbe cmp vpaddw mov mov lock mov aad cmpsb mov outsl lret adc mov mov out push and (bad) cmpsb mov push mov mov sbb mov pop or sbb dec push mov mov lea js mov lods pusha out mov ds jmp in mov xchg (bad) outsl test pop mov jae sbb sbbl faddl mov jle cmp imul fldenv xchg xchg cmp sub hlt mov repnz lahf in or xor leave xor loope and push jnp (bad) ljmp jle jno sub pusha (bad) jl jne add mov inc test or lock mov cs sbb or rorb andl (bad) sub jmp int leave repnz push or popa mov push lret wbinvd cltd inc inc inc (bad) adc lret out adc dec out dec ljmp push call sbb cmc xchg loop test call lcall call inc adc or hlt inc xor ds or mov adc cltd mov xor or inc hlt dec test add sahf push les sbb or jg test dec stc xchg push push pop sub or js movsb jl fcoml mov fnstenv nop dec aad and xchg or out mov lahf out dec dec adc jmp cmpsb cmp fimull or lods out dec mov shld pop stc arpl (bad) xlat (bad) mov pop clc or mov testl xchg or jmp mov jle,pt pop int3 pop roll mov idivb out mov call stos dec jmp outsb aaa jne sbb ja dec aam imul cmpb sub pop or fwait lock mov jbe insb mov and stos in mov xor sahf and sub test jmp dec ss cmp cmp div out data16 mov add mov (bad) mov pop fisttpl or popf pop iret sbb insl lea mov out fisttp cli xlat lods pop ret (bad) lds or ljmp or xor repnz sub xchg test mov sbbb in mov or xchg hlt lcall mov sbb and repnz gs (bad) out adc adc cmc or stos outsb push or pushf sub mov mov jae push test dec aad pop lds or push inc adc fs or inc es add int add (bad) xor in pushf or ret add mov or xor hlt aaa jo fcompl push push add test fisub mov jp imul pusha mov pop xor push out idivl cli and test mov or divb inc or test aas inc rcr stc aad or xor das lcall inc lock xor cli jmp pop or inc in dec scas xchg or lea sbb (bad) out mov cmpsb je and jmp or clc cmp mov dec je and in repnz fstpt push push cmpsb mov icebp dec mov lods or pushf movsb mov or jae sbb sti jge (bad) mov in mov fs (bad) jne (bad) lock or sub sbb lcall nop or cwtl cltd repnz pop sub loope div cmp jmp push idivl pop cltd fwait dec or daa mov insl sbb in mov mov insl mov hlt mov fdivrl fstpt inc lock stos mov (bad) sbb sub inc or sbbl test call out pop dec int mov bound inc sbb scas mov sti lock std mov add jp daa sbb or add dec jmp dec pop sub push ret popa wbinvd pop xchg (bad) push and (bad) sub inc test mov outsb mov add es shrl adc cmpsl jns add mov dec popf (bad) ss lock stos cmc stos xchg movsl std stos and mov adc and arpl testb loop insl jge or mov stos iret push test sbb shl jne ss dec xor and (bad) adc jno mov test or inc or mov stc in xor adc xchg xor jo fistpll in or adc fimull fiadd and out lret dec divl dec and das xchg test xchg sbb inc or insl dec or ds sbb roll mov les imull inc cltd cli pop cwtl stos dec or cmp fisttpl mov mov lahf ss dec inc push mov cmpsb jl lea test or pop mov sub push (bad) xchg mov jno ja cmp xor jb jae or mov mov and popl push cld sub mov in lea shr xchg mov movsl mov and js pop push push dec dec xor fistpll adc mov jmp icebp sbb jne (bad) lock adc inc adc pop into add cli cmp or sbb pusha push and or negl mov loopne sub scas testl mov or xchg push mov iret add lcall and xchg in lret (bad) add or fmuls or decb dec fisttpll sub into mov and jns or adc adc mov jl mov fcomps imul lret inc or mov xor fstpl adc (bad) jbe test cmpsl ret or ret int (bad) testl mov add (bad) sbb std out inc loop mov add ret lret dec mov sti xor lret sbb push xor jp sub xor push sbbb pop popa or push mov jb fmuls fisubr jg add fdivl add push sbb call inc (bad) out inc cmpsb and fnsave push call or jle and arpl xchg icebp movsl push mov inc sti xchg int or sarb in or movsl out push call pop pop xchg pop mulb jns fiadd sub adc xor test jne xor mov xchg fimull cmp push add or xchg sbb inc jns in lret xlat insl arpl mov pop popa jmp fiaddl mov jns adc dec mov je mov mov sarb inc fisubr pop sub or cmp dec mov mov leave inc dec aam push or inc inc cltd icebp sub fwait cmp js popf es inc and xchg je jbe insb sbbl in pop mov js pop jo imul mov jge mov mov mov jo adc ljmp jno or test push outsl mov mov pop inc fisubrl xchg jge jmp mov dec xchg adc fstl stos adc test lock or (bad) notl push xchg sbb inc test xor insl push jecxz mov adc cli push test jbe das dec into jns mov loope sti lea mov ss insl data16 sub push shl jae fdivrs or test in je insb xlat movb mov sahf xchg push sub jmp lock arpl lret outsb aad jp pop outsl or scas xchg push or repz mov es jo or jbe sub sbb mov clc xlat xor mov sub in aaa mov sub ficompl inc adc popa lret test and (bad) divb sbb or sub pop sahf cmp add ret (bad) (bad) (bad) xchg and jbe and imul jno jne jne push jb sub jb lods adc repnz inc add mov cmc mov sbbl or fsubl mov jnp add leave pop lods in into notb xchg pop test dec negl push ret cltd fmuls insb call (bad) lods cmpsl imulb mov movsb sbb into setb or push jg xor sbb push out pop (bad) xor and inc fnsave or mov or mov insb mov mov adc or rcrl add fisttp pop scas cltd pop jle or mov mov sbb mov scas and and mov xor xlat or pop mov cmp jo lods outsb dec xchg push into or adcl sbb daa sbb sub in add mov in orb stc xchg push sub mov pop sbb out notl out nop insl mov inc mov in int dec sbb xchg or fnsave adc push pop es xor pop aad jne adc in iret inc icebp or push cmc push js xchg addl lock mull dec test jp xor push inc daa fdivl push sti cltd xlat mov outsb xor and cmp ficom or popa push xlat lahf movsl imul push inc jb xor dec lock or xchg push mov ficompl jle mov lret push or test and pop add push bound sbb or imul bound and into insb cmp leave xchg mov mov mov repnz xchg (bad) mov ret rolb xchg sti orl jge pop and sub not mov adc add adc and adc push ret xchg inc jno mov lcall sbb pop outsb push daa mov call lahf inc dec push loope aaa aam repnz mov cli or jecxz xchg and inc pop in pop sbb leave dec mov in mov mov jno push mov hlt je jnp or add test frndint popa fdiv loop mov mov jbe es jb popf es mov mov imul and sbb mov test pop adc lods pop cmp sti mov je or mov jecxz pop pop push int out iret mov sbb push repnz and flds add or loopne push and fs sbb neg sahf cmp mov mov ja rolb inc cmp pop out pop (bad) cmc sbb jno pop push or dec les int3 dec xchg add xchg out std (bad) repz or cmpsl jle adc fs adc jl dec and jno jnp adc inc inc js sbb lcall insb (bad) or lock imul lret inc lock adc push push out shrl inc dec push pop jecxz in inc mov faddl sbb fisttp icebp adc (bad) fdivl aad adc movsl xor test fcomi jl test rclb xor inc cmp je adc in push mov ss cmp dec or aaa add outsb push or data16 cmp pop test mov test mov mov adc sub nop or xchg repnz adcl xor adc roll or mov xor pop ljmp popf sub or jnp mov js mov mov pop stos or mov pop mov or push ret (bad) inc xor or adcl jl loop (bad) imul roll mov inc leave or (bad) cld xlat cmc je or shl sub and aam push test lahf dec mov and lcall pop out adc iret aad in test or adc ret rol or or lret jmp or daa int3 xchg enter iret repz fsubrl sbb arpl pop add mov gs not pop adc loope rcr insb adc or in test movsb jo and popa cmc mov sub addr16 imul mov cld inc leave cli ljmp lahf lods test or test or xor pop outsb mov or sbb scas inc or das xor xchg sbb pop (bad) test loop cmp mov fwait jmp js leave aam ficomp pop ficompl jbe mov popa jae adc push jnp stc fwait mov fnsave mov mov cli pop mov jp sub out gs popa xchg (bad) dec mov add aad (bad) mov addl addr16 push sbb mov call dec xchg or pop pop shll adc nop cmpsb jnp sub inc dec test test mov lret push insl xchg sbb lret mov mov mov cli (bad) rcll mov inc notb sub sahf cmc dec pop into cmp addr16 std arpl mov in test or outsl mov cmpsb or lock sbb and xchg sbb int jns notb cmp mov (bad) or gs test lods rorl hlt or mov lret sbb cmc cwtl and es icebp and mov enter stos loope add xchg rorl adc xlat enter jge aas ret jns (bad) mov (bad) sahf sbb push or jo cltd cli jnp xchg cmpsl pop stos inc pop enter in (bad) test sub jae out hlt adc out dec (bad) cmpsl shrl out pop adc (bad) adc stc iret push insl cmc adc hlt xchg scas shll dec (bad) dec and idiv and adc imul adc dec in out cmc mov adc sub xchg pop dec adc add sti adc adc (bad) mov mov mov or mov mov in test jbe adc test add test xchg xorl jmp jmp jb add lcall aam pop or pop pop les xchg jmp dec lods cwtl push or fdivrs sub (bad) mov jecxz and push data16 pop and test iret adc movsb imul imull movsl loop sbb jmp js ds xchg or bound sahf or notl dec inc pop dec aas scas mov and pop mov push mov mov fneni(8087 xor (bad) lret mov adc sti jmp or push std fwait mov loop lods jns sub cmpl pop pop cld cmp repz or sub stos (bad) fwait sbb jne leave pop leave test pcmpeqw into mov inc shlb mov aaa xchg out bound out (bad) jmp mov add leave and mov mov or movsb out das mov shll mov cmpsb data16 lods stos dec jo jns clc adc dec xorl sbb pushf cmpsl icebp iret dec mov mov je out popl cmc fsubr mov push idivl jmp outsb or dec insl push add hlt mov call jmp daa int3 (bad) dec loope add stos xchg or jmp lret cmp (bad) or les mov cmpsb xchg sti mov pop (bad) adc jo cwtl into xchg lods notl mov arpl das adc imulb rcl clc in dec sbb push mov cmc (bad) push test ficomp mov (bad) jo repnz aam fisttpll cmp sub inc fs mov lods leave mov add push scas xchg stos repnz cmp or ret jns cmc (bad) fmuls mov mov adc fmulp inc or mov pop sbb push out push mov popf xchg notb fld enter push leave inc and xlat push add add mov add int push ret gs mov sti add pop adc (bad) hlt out push xchg das lods aaa pop (bad) es rorb scas inc sbb push xchg add fimull mov sub mov test pushf dec imul xchg ja xor ja pop or pop mov in jbe fs inc les add push outsl pop adc stos push addr16 or mov scas add mov (bad) xor fsubrs cmc cs aam orb mov and add mov push in (bad) movsl mov fstpt (bad) sti jns cmc movsb jge and paddd loope sbbl push data16 repnz fisubr int3 push repz push mov mov mov ret dec aas sbb push jp xlat jbe ljmp jae test sbb sub xor nop or (bad) adc imul lock push inc mov jae inc mov push or dec sbb out inc rorl cltd andl sbb orb loopne es test or mov mov or sub lahf jp mov dec cwtl gs mov add adc jmp xlat insl lock mov jbe mov cmp lahf repnz inc mov mov pop sbb movsb aam push enter mov (bad) or pop jle mov test sub sub les aam lock mov repnz adc mov xchg lahf jno inc or sbb and dec cmp jl out or mov lret or lahf and add mov sub mov mov das adc lcall test fstpt inc (bad) aam or fldcw add jbe push lea adc aam cmc sbb xchg dec add pushf inc std mov int inc lods stos mov push mov push xchg rolb sub adc push call fwait sbb hlt pusha in (bad) lock (bad) into lret mov stc out dec mov jecxz pop aad aaa or mov add pusha xlat sbbb sbb clc loop hlt pop dec mov adc iret mov or xchg mov clc outsl pop jnp pop movsl inc or fistpl mov or cmpsb ffree imulb dec sub add ja hlt pop pop sbb ret mov cmp pop or jb (bad) and push or lret or dec jo pop pop in inc cmp subl int or cmp jmp sbb or (bad) stos rclb int3 dec negl add fldenv jae aaa js test sub xlat push mov incb stc mov rol mov lcall sub sbb incb mov (bad) arpl ss sbbl jne into push or outsb xchg and xor and mov cmp lods leave cmp mov nop fdivrs mov imul outsb push or add sub mov mov bnd ds incl mov sahf xor or repnz add sbb mov test sbb jne lahf or push divl cmp add ficompl and cmp or sahf fldt sub das xchg sbb insb test lret imul clc loop inc or fildl add sub pushf not dec (bad) lds ret mov jae sub sbb sub stc mov pop adcb ljmp or push sub or cmp mov (bad) out jmp jne xor ret shl daa mov xchg dec cmp (bad) or adc xchg xchg sbb mov dec stos xchg scas pop loop adc cs jmp jecxz repnz sub add fisttpll mov xchg out xor pop push dec (bad) or (bad) adc adc fdivrs xor sub jns ret fmul std cmp bound or or dec add push test int jmp mov lods aas jo jge movups nop cmc mov aaa dec (bad) push lds cmc push es ljmp sbb add adc loopne or push ja sub test into call mov rcr inc or in cwtl test push (bad) pop popf jge das repnz jg mov sub xor pop sub inc or std jae mov mov out sbb or out mov or xor push dec sti xor pop sbb cwtl add call ret jp aam mov jl call int (bad) movsb paddusb int3 jmp xor ljmp pop mov or sarl and je fistl aaa idivb mov insl imul xor in xor out rcll lock mov dec or inc aas incb push add push ljmp les aaa jg and leave imul (bad) inc or loopne xchg loope dec sub jecxz dec jg fmull clc cmp and das pusha adc scas inc mov lcall cli cltd mov add cmpsl mov mov mov cltd mov inc test cmp stos dec inc data16 sti arpl rolb mov repz sbb test insl cmp add (bad) dec or sbb jns or aad ficompl (bad) lods imul lret mov fucom push pop aas scas and ds mov fwait lea or cmp sbb lock fmulp push inc dec or and adc cmp xchg mov xchg add in icebp sbb fs test or mov ret jmp in sbb fisubrl data16 jmp mov (bad) fiadd lock fcoms int3 mov lods sbb pop dec adc test (bad) in repnz adc bound or inc fisttp or loope dec ret sub movsb lock add or or xchg repnz das std dec mov mov mov into pop in (bad) in out dec clc stc adc xchg push mov sahf lahf push inc (bad) or sbb sbb cmpsb push or jle into out mulb add sbb add maxps repnz fmull sub mov (bad) testb popf inc and mov jl cmp pop push test call mov dec loope fldt push lret pusha mov out sbb fimul leave pop (bad) sbb jmp mov mov pop lock sub sub ret (bad) jmp or pop int3 xor push sete mov xor pop cld mov push xchg jns mov mov sub sbb inc mov or mov push popf lock stos dec outsb sub push fnstcw sub scas push mov in push ljmp ret lock pop inc in icebp arpl aaa int3 sub (bad) or cmp out or js dec jmp movsb jo adc leave push sahf jl cli jle insl pop adc in or fimul pusha xchg repnz jp or std mov cmpsb dec ljmp ficoml out mov dec fs xor sbb (bad) in or faddp inc mov mov scas jle mov mov out jl pop sbb nop (bad) shll aas in dec jecxz and (bad) pop lea (bad) and vmwrite adc cmp movsb test pop hlt jne adc push and mov scas (bad) (bad) sub daa mov and sar cmpsl outsl aam or cmc outsl push bound in pop lea les push cltd fs fidivl enter cmc jne insl in (bad) aaa cmpsl fisubl lret add adc push jl,pn sub shll fldenv adc jo (bad) sahf xchg (bad) fistl out cli inc push mov sbb mov and sub cli js dec jo mov xor push std ja sbb inc and inc loope pop not cmpsl pop fs inc or cli arpl jecxz cmp jb dec aas xor adc push iret sti dec dec lock cmp xchg stos and add mov mov scas insb xchg jecxz xor clc imull cld and jae icebp and inc jg jp mov hlt or inc dec repnz push mov or dec sub sarb dec cmpsl ljmp adc jmp or push inc loope add pop xor mov mov je and sbb adc and xchg inc cmp cmovp dec shll stc adc nop mov iret dec not les fisubl pop sub jmp sbb fnstsw or inc mov push jle sub lock or ja or xchg push insl sub lods push aam or test or inc and outsl pop lock ret cltd and or jl decb push lds and cmpsb mov mov or ror out and add sub pop fsubrl mov aam add bound jecxz nop roll push repnz loopne mov xor lahf add cwtl es jb bound dec icebp add ficom and fild or sar add jg xor adc fsub (bad) lret jb mov mov int pop sbb (bad) or cmp lahf or je scas push dec outsb sahf testb (bad) xor or in mov sarl sub ficompl mov lock or aad loope ret hlt cmp loopne,pt dec adc mov and or rcll inc inc sbb add jae (bad) xchg inc or push les xor out outsl sub stos repz and adc sbb out push jmp jo or pop out pushf and sti inc mov sub push xchg or ret mov cmpsb (bad) mov icebp cmp ret or or mov and sahf lea pop cmp or mov fsub xchg lcall fwait cmp or leave ds or insb rolb into cmc mov or fadds mov test loop in jne cld pop mov sbb dec test mov popf or cmp or movsb sbb ss aad in loope repnz jae rclb push loop mov leave pop or fimull loope inc cmp push aam movsb test in add push pop push and adc aaa sbb mov add xor fnop adc inc xor cmpsl sbb adc cmp dec pop adc repz fsubl push jmp addl push mov fwait cs rclb xor jo mov incb popf mov clc in mull (bad) push movsl add aad movsb (bad) mov sub add scas xchg or lods pop popf xchg cmp cmp mov cld pop mov or shl rcrb fisttpl les inc adc cld jae xchg cmp (bad) or jne cmc xchg je adc dec mov xor out imull mov into mov shrl add pop jle (bad) mov lods movsb pop lods push notl (bad) ret (bad) cli adc add jno out fistpll lock mov and or sub add cwtl fstps testb xor sbb or sbb push cld cmpsl jl loop mov xor xlat lods mov jmp push incb int daa (bad) mov lea test ficomp jge mov fbld cli dec repz aaa xchg jnp pop arpl test lahf push insb or pop lods imul mov ja test push mov pop or sbb (bad) mov neg jmp mov mov and loop push sub jmp out add inc pop sbb pop mov xchg and loope mov pop notl ficom push mov xchg mov popf mov mov out je lret loop push add mulb sbb mov in adc sbb push out sbb inc daa subb insb push xchg popa pushf or popf bound insl adc cmp lret and lret jle stos (bad) pop imul adc ja lcall test and std out mov test lods mov scas (bad) gs in ja cmpsl mov pop mov das xchg mov pusha aas jl icebp cmp pop sbb fcos cmc adc cmp dec (bad) cli mov jecxz stos push idiv xchg addr16 fldl test por je push xor pop jo stc cmp cmp or jecxz sub sbb popa mov sbb loop pop and das adc dec ljmp inc and or push cmpsb add dec sahf addl and cmp sub stos (bad) adc (bad) orl idivb fdivrl or mov ror jne,pn popf roll mov cmp cmp dec sbb mov dec in jmp aaa fistl inc or ret or in out and lret sbb ss mov or in in lods or mov sbb (bad) pop dec or (bad) pop sti adc dec jne inc inc push ds dec cmc (bad) xchg xchg out xor or int cmpsl push lahf or jns popa movsb mov push jecxz mov or fsubr call mov dec stc test xor repz dec test mov mov inc fsubr xchg jo outsb mov xorb out or add in dec int lods and or sbb push mov cltd mov xor in (bad) cmpsb xchg lods pushf dec inc repz and movsl in (bad) jp or sbb jl call lcall push or je lret push pop or lar pop test enter (bad) xor or jnp xor arpl or mov les xchg add in xlat add or mov xor jmp inc lahf cs xchg arpl push nop movsb int dec out pop sbb or or dec dec cwtl ficompl enter out adc idivb div lea and or jmp add cmp negb das aam or add mov sbb mov xchg pop test (bad) in inc jno (bad) jecxz sub sub sbb inc sbb add (bad) cmp add cmpsb cmp es ret jb add jbe stos int3 hlt outsl mov sar mov ja add xchg or inc mov loopne xor lds or mov pop sub sti add imul hlt stos and ds div aas movsl (bad) int3 ss xchg or das enter fisttp test loop std dec decb hlt (bad) xor enter sub icebp (bad) jo jns xor add fnstcw dec sbb add add dec and notb add dec dec mov cmp and adc (bad) call xchg testb fistpl out je sbb mov mov sahf xor (bad) ja cmpl xchg loop adc and xchg dec or enter cmp shll jb imul int pop sub sahf inc dec fisubr pop sbbl lret mov stos or icebp insb lret mov ljmp or mov popa loope or test ret or pop mov roll data16 mov push stc inc aad pop (bad) jb fldl2t (bad) fmul mov pop mov ja cmp jbe insb jp dec mov or pop insb insl in dec adc sbb aas or aad jge fwait sti pop dec push and jno sub xchg cltd repnz xchg mov and add inc sbb mov push jnp jns hlt push cmc jle pop push cltd (bad) (bad) adc call mov idivl inc cli nop test push jne add mov notl ljmp sbb (bad) mov mov lret inc xor in mov jmp jb or test test dec insb outsb mov jns popf inc test arpl jmp push test push clc jmp stc jnp in dec sbb inc fs ja adc pop cli jge popf out or sub leave mov aas mov movsl mov insl dec mov pop mov stos mov fisttp adc lcall lods cmp rorb pop inc mov sbb sbb ss adc aas pop inc scas shl push mov push sub or mov or cmp leave in lds mov jo add jl cli inc mov movsb jle std bound push cmp dec or pop add es sub idivb icebp jg (bad) jecxz inc loop imul xor leave pop lods jge adc (bad) out test lds cmp movsb xor into or iret add aam push rcll pop fnstcw push push fidivrl (bad) clc mov dec jge lret daa xchg imul adc inc cmp (bad) fistpl dec test cld fwait das fisttp shll pop fcomps gs leave (bad) mov mov (bad) mov mov or fmulp xor repz jno jns pushl dec mov lock divl arpl mov test or (bad) imul in or popa inc stos cld or fisttpll fucom repnz (bad) lock bound cmp inc gs (bad) pop insb cwtl or xor (bad) dec cmp cmp ss dec xchg das or jo or pop inc cmp es add jns test mov sbb inc scas stos push inc xorb or jecxz dec mov mov or mov push fcompl xchg into xchg mov lods int3 pop scas or mov or test or inc insb rorb pop xchg ret mov push cmp cmp mov adc mov imul shlb clc lret adc imul xchg sbb ja adc mov (bad) jge fldcw cmc mov sbb aad aaa and mov loopne gs xor test daa sar cltd or mov lods decb fs negb fnop adc and fsincos or mov or mov loop xchg insl pop cli stos or (bad) inc gs ds pop mov inc sbb js pop cmp hlt xor add mov push sahf mov stos mov mov dec mov jnp adc addr16 inc push add repz shl mov mov lock xchg stos (bad) sti push movsb dec pop roll or mov jbe jno rorb shll daa lcall test movsb mov cmpsl rcrb ljmp fbstp mov test sub sub push xchg (bad) popa sbb jnp out cmc in sarb fcompl inc or aas pop leave ret mov adc inc xchg push in add popa cmpsb aad or or rcll jns jp xor mov or daa fldcw ror sub (bad) in mov sti aas or pushf xor (bad) push or in cmp and jns or mov xor cmp jmp mov stos or xlat aaa sarb jmp lods es xchg xor cmp cmp fs popa mov lahf mov or mov in ret mov cli push lcall bound js leave push (bad) addr16 push out sbb lock aam scas or rcrl loopne or cmp adc or stos pop adc sbb or mov leave test ret inc xor or or scas faddp or (bad) add stc call ja inc stos or out and nop dec notb cwtl lcall sti mov idiv out mov or sub jecxz test cmc bound pushf (bad) add in add push pcmpeqb add or mov ror mov lea icebp iret fs inc repnz out repnz adc fisubrl cmp fs push mov dec repz or cmovle pushf fistpl jle nop pop into push test or inc nop add xchg lcall imul push jmp jb or lret leave mov popa out or mov xor sbb test (bad) jmp xchg or cmpsb pop or aad and or or rorl pop jnp lret data16 pop mov inc cmp int3 or arpl sbb adc psrld and mov lods ja insl fcomi jg sub aas (bad) gs fcomps aas test xor adc sub mov test jecxz js or cld clc xchg insb ss push or rol movsl pop inc cmp and dec mov dec in mov cmpsb fsub xor or test or ljmp push das lcall loop sub mov jmp mov cli cmp rcrb mov jecxz cmp repnz and xor xor sarb fistpl lods lret imul or testl sbb mov arpl add out xchg sub mov popa pushf insb jecxz inc add mov sub or (bad) das iret dec add stc or cmp je mov and jmp loop mov adc jle mov mov in rclb hlt adc mov dec and (bad) mov cs out or (bad) test jnp xchg push push shrb or lret repz mov jmp or sub xchg jb push add mov ss inc adc cmp lea (bad) dec cmpsl cmp incb lods push jp sub test sbb icebp scas decb xchg (bad) cmp mov add fisttpll sbb imul or ss or mov inc cmp or bound and cwtl inc add hlt xor out flds adc addr16 and dec dec iret je mov xlat into imul jno sbb mov addr16 jmp loop insl pop or fnstsw or insb mov shrb sub sbb dec cltd (bad) xchg rorl and xor cmp mov mov into dec xchg jno or mov jmp add ret mov in jno int3 mov xchg mov mov push cltd adc or ret cmp data16 cmp mov test jns jne or jmp mov stos push adcb (bad) dec lea loope add aad mov jmp jecxz cmp lock lods popf or xor jl adc notl fstl mov sbb xchg dec jo pop push por rorb decb dec outsb mov fistpl in cltd dec mov (bad) sti mov pusha inc mull or addr16 (bad) xor loopne mov aam test xor push cmp or sbb mov and add mov or or jno,pt or or loopne mov mov mov push mov and jmp ja daa stos lds jo outsb inc jne scas leave test adc mov (bad) or jns xor sub gs pusha imulb mov das pop pop or cmp (bad) (bad) iret int jmp inc movsb mov xor lahf aas dec xor in ret mov outsl out mov (bad) pop inc ja cmp adc and mov pop xchg push push outsl aad test dec adc outsb push pop sub jp or sti lea mov test leave cmp pop pop or xlat in cltd nop in fmuls and xchg orl jo out hlt jecxz pop rcrb or call divb or push (bad) ss or adc jns sti sub mov bound fldlg2 cmc or jns push dec dec fldl2t shr sbb dec test lret mov in mov fstl into fdivs enter adc les inc mov movsl xor mov idiv mov (bad) sahf stos sub imul jle out (bad) lock xor ljmp cmp faddl push imul stos stc cmc adc cli (bad) hlt sbb jns daa insl dec leave and xchg out jle mov push fwait jo or pop adc mov loopne mov pop inc repnz xor mov leave stos mov and cld jmp adc add leave flds negl ds mov nop mov popf cmp jb cltd fistpl bound (bad) incb sub sarl sti sbb orl pop std cmpsb inc (bad) jmp out and push push popa or adc push or mov scas repz or (bad) icebp loopne arpl das iret adc dec ret (bad) outsb xchg frstor xor les sub dec sub std enter (bad) dec xchg xchg xor mov or sub xor cmc lds imul lret dec dec insl fsubl out sbb push push cli xor cld mov ficompl (bad) scas aas jg movsl push or inc xchg mov mov scas cmc int in or xor sbb repz nop pop iret mov fisub imul iret xor or jle push fldl jmp movsl mov cmpsb push push dec sti out mov aas movsl fs loope add pop mov hlt sub in je xchg clc mov sti cmp inc mov je ss cld and jmp dec push aas xchg jb xor sub or loope push lcall adc sbb mov (bad) imul jecxz shll or inc loop pop pop xchg aad jmp fnsave xchg xor pop add fdiv cmc out out icebp fsubrl xchg xor mov jns jns cmpsl adcl sbb (bad) ljmp subl fiaddl call idivl or daa cmp xchg pop mov push arpl in and mov fcomps (bad) sbb push mov (bad) insl ja imul call test das push or lahf push inc jecxz stos fmull push das cmp xor or push pop sub dec les ficompl insb jmp add daa sbb cmpsl scas xchg test mov imul pop and mov add push enter stos cmpsl mov or adc fxch stos cmc lcall in xlat xchg test pop lods jcxz cli outsl and sub inc mov jno add mov stc (bad) icebp or imul mov or jge jb lods fwait xor notb jecxz inc mov push lds jns fs pushf jecxz fisubr lea das repnz sbb fcmovnbe testl imull and jle pop (bad) or inc xor mov mov sub cmp dec or push sbb sbb or mov mov jbe out xchg pop dec xor mulb sbb outsb inc cmpsl fnstsw (bad) xor (bad) stc test mov xchg jle loop xchg js add out dec call enter sub imull mov dec pop hlt or jmp adc mov sbb or ja cmp jnp adc and fcomps mov dec sbb pop adc ret (bad) xor push enter (bad) (bad) test add stos push lds sahf dec ja nop add stc mov mov fisttpl push xchg sarb mov aam test pop fs icebp je lcall roll clc push jbe icebp xchg mov into xchg call add scas adc aam dec aad into inc fcomi jle pop or out inc ret dec aaa or adc sub pop in jb or stos bound or test mov ret pop jge xor ja insb and add inc add and and inc stc in or stos out lods cltd push and or idivb xchg xchg sti stc popa (bad) cmc cmovb mov std lret xor mov or dec sub into pop hlt push xchg scas call int mov mov pop push stos sub or (bad) subb mov pop (bad) jge imul pop div lcall repnz (bad) nop in mov and or out fwait (bad) js or xchg cmpsb fldlg2 jp xor fisttpl jmp addl mov dec mov jno mov daa mov mov inc clc lret test lods in loop icebp xor or js mov jno les add lods sbb loopne das aas push jl pop rolb (bad) or fmull sbb rcll or data16 int3 faddp or sbb divl lret mov jno les rol lock or rcl bound (bad) lret mov pop add insb js (bad) call insl lret sti enter insl (bad) mov aam jp addr16 or inc repnz cmc mov lea push outsl cs call test jmp mov cmp test aad out jno push or sbb iret setge dec or dec fstpt xor and scas cltd or or shl mov mov addr16 sbb or push jecxz sbb imul or cld test outsb ret sbb dec shrl or (bad) sub mov repnz mov gs iret or mov dec or pop out add dec and dec sub arpl imul js inc lock push lret or pop mov movsl aas ljmp loope xchg outsb lea add movsb or ficoml mov dec jmp inc xor lret cmpsl inc or fildl fimull sahf out scas xchg pop adc lahf scas xchg lock bound sbb rorl call push jnp mov jmp sbb daa test cmp mov xchg imul pop (bad) lds gs in imul popf mov outsb jle dec test fldenv mov orl cltd iret xor or inc out push xchg inc or mov pop add or inc pusha insl sahf inc (bad) aas sub aam jmp adc ret bound mov fstpl mov or or data16 daa (bad) cltd mov loope sub lds mov fdivl or jmp mov fsub sbb push imul fldenv mov pop push fidivrl flds ja inc clc movsb movsl xchg jo inc jo jnp call lcall mov test adc push sub nop daa or rorl out adc jge xchg xchg lcall push and inc dec xor icebp fiadd aas jbe mov not xchg mov jbe and xor and lods test aaa lret jecxz inc jbe dec pop mov (bad) repnz rep sub fwait inc loopne sub rolb mov xchg and data16 insb mov or loop stc xchg mov adc xchg xchg out add pop lahf lds insl in xor imul cwtl stc fisub iret dec xor pop jge mov scas add jl lds test mov mov or sub adc mov addl mov fadds lret jg cld out aam push sti insl push dec jl push lea add aam sar jne les fsts dec pop std add std cmp icebp jecxz inc cli repnz fnstenv fstl fcoml addr16 insb in push int3 push hlt xchg mov push xor jo stos jns stc cmc scas fwait push mov in jmp xor fsts inc jns add mov jmp sbb jno (bad) mov rorl inc jl push das dec inc or fnstenv inc inc mov aaa ja or xchg inc fs idiv aaa or adc and iret fcmovbe clc or mov mov cmp test or fistpl test lods div cmp xchg xchg jbe sbb scas xchg pop test or push dec dec sub (bad) ss inc std shr cmc push mov out lock xor call sarb iret stos mov add adc popf inc bnd (bad) loope sub icebp outsl mov sarb sahf mov stos dec mov pushf jle movsl xchg push inc or jl dec shr ljmp mov jmp or fstpl jne add jle sbb cmp or jg call add and jb inc xchg or push inc xor inc dec fisubl sub adc sbb fcompl xchg lock in pop hlt les movb (bad) repz push or popa (bad) pushf or hlt xor push ljmp dec or insb dec cwtl cmp push sbb aam roll or es jne inc fnstcw inc or push sbb pop xchg ja mov cwtl (bad) push add jo mov addl xchg loope xor or (bad) mov sub out sub mov jne pop dec sbb mov push add cmp push rcll outsb idivb out or and xchg inc int3 or lock imul adc sahf inc add and ds bound addr16 out gs sub or aas lds stc data16 out mov dec fcomps test sar lock mov jge push sub popa mov std test scas (bad) int3 mov push orb pusha add fdivrl loop push lods push test add push lea les cld or or int3 je in sub loop mov icebp xchg fisttp or enter sub (bad) repnz into and mov inc jno mov mov gs mov imull nop inc ret roll std aad xchg outsb pop push or cmp or insl fsts cltd mov pop leave pop xchg dec out mov push insl outsl negb push rorb divl or decb xchg cwtl or push loop int or stos push lock mov jmp or sbb mov sub call sbb xchg (bad) cmc adc dec lcall fwait out sbb jmp cmp in fcmovnu je out enter push push ret (bad) int3 orl (bad) repnz in ljmp pop jo xlat out out push dec inc or inc (bad) jmp stos jnp imul shrl sub or loop flds fildll (bad) idivl or (bad) adc jge insb loopne push lahf inc add or je pop cwtl cmp push dec mov adc in mov movsb out pop add mov wbinvd cli pop stos xchg push outsb ret dec or cmc sbb rcr pop stc push push fisttpll test pop out out sbb or test scas xlat mov lods inc mov frndint and repz dec std popl xchg mov dec inc and xor (bad) or rolb out dec fs mov popa in lahf aam sbb mov jge mov sti mov dec dec clc xlat lods xchg into or pushf pcmpeqb stos test sub stc call les ja fucomp scas jl stos shll out pop sbb mov adc lods repnz aas lret xchg sub jl movsb xor les mov mov jae stc sbbl mov xchg add xchg mov or mov push adc jmp outsl lret or (bad) imull (bad) jne aam daa jge in mov and out cwtl or jle mov xlat mov mov in pop test iret insb loop leave xchg sub or jle call or add adc out aad js jbe flds pop dec ret cmp mov es pop pop mov push and lods xor lcall in or inc push mov mov lea (bad) dec mov sbb mov (bad) or cmpsb ss xor in cmp mov lods mov cmp lahf jb adc xor and xchg xchg xchg push sarl mov les popa test scas (bad) mov lods ficompl notb outsb roll lods or leave add icebp add inc adc pop mov pop iret in mov cmpsl lcall or dec in inc push scas adc out jae dec add mov or mov inc (bad) gs or push mov jo call dec lea imul (bad) xchg or mov mov xor (bad) mov cmp or and rclb insl aam (bad) dec sahf jge adc mov xchg gs insl or push pushf adc sbb stos test stos and insl adc cmp pop ror int stos fnstenv dec push dec out es test dec pop stc fsts movsb rcll jno and fiadd push pop or dec repnz iret ljmp xor fistp cmc xor xor in xchg mov lds inc dec fimull ljmp lret cwtl push icebp cli cmp or sbb push js stos cmp pop imul pop dec mov cli (bad) notb inc jmp or push add sbb jns adc cmpsl aad mov out push add enter loope std shrl mov (bad) dec gs mov shlb lds cld xor jmp adc jbe icebp out outsb jecxz xor or jb jnp movsb fsts dec (bad) push cltd sbb or or or movsl xchg mov fisub mov mov xor (bad) or and xor adc push out cltd test jnp cmp call (bad) clc add jge hlt mov js push imul and das adc add hlt mov mov (bad) sahf ljmp jmp pushf repnz mov adc pop inc or xchg ljmp pop xchg mov jmp or les or jg mov cmpsb pop test and imul push xchg adc adc pop pop adc and cmpl sub jecxz inc adc inc data16 mov mov shrd dec imul pop adc (bad) (bad) mov mov push loopne mov jns and mov and fistpll stc jb,pn (bad) push or shrb lds or (bad) xchg into xchg orl (bad) aas stc cmp or fs es mov in push stc dec addb push outsb sbb popa loopne int3 sub push fs jge jl or loopne out faddl popa (bad) adc push or xchg dec mov cmc lcall jge ficoml insl sub pusha cmp lret pop int or push xor (bad) icebp idiv or adc xchg bound xor into adc dec ljmp lret jne pop in cvtps2pi mov xlat push dec ret fsts ret push (bad) jl push test xchg pop xor push mov int inc xor sub sbb adc and and out adc push pop push pop insl cmpsl push arpl mov sbb jecxz mov (bad) aaa js sub or sbb jnp xchg inc jle jmp addr16 push push cmc mov or inc stc and test jmp or test rolb mov or and mov jb mov test jmp jo push (bad) or fs add iret jmp dec insl out nop addr16 xor push or test in aaa jle imul cmp inc mov jmp fstpt sub sbb mov mov outsb mov in aas fstps repnz jne jmp nop cmpl dec je add lods dec pop cmpsb test or inc and xor add loop in pop or xor or negb incb pop (bad) xchg jb dec rcrb icebp and insb aam outsb or out hlt and pop cmp stos lcall pushf pop or cmp jns les test and mov xchg imul mov jno or pop lret and jbe aas js pop movsb xor fdiv scas aad loopne fidiv inc test int dec sbb cmp in xor loopne dec mov test inc bnd mov sub mov js xor mov cs rolb in or cmp adc inc add repz lcall sti xchg adc out stos or cld fwait cmp adc in imulb orb inc push sub lahf inc rcl add sarb mov xchg pop int3 lret push scas ss (bad) stos inc bound xchg daa pushf pop cli cmp movsb sahf inc add jmp and cwtl fcomps call push lods out cmpsl stos jmp mov adc cmc (bad) jle jne mov movsb leave xor lea mov iret jnp repnz push fcompl or call pop dec mov test mov pop push sti or (bad) (bad) sbb xchg jns or sbb sbb and (bad) test (bad) jae outsb rolb mov jo push mov ja leave jae sub push in inc inc pop ror xchg imul xor cmc test sbb daa xlat fcompl cmc mov pop or aaa mov add pop cmpsl mov sub pop jae gs loop sbb cmc xchg dec insb enter cwtl adc es inc or test inc neg les ja dec or stos xchg mov insl pop inc mov sbb fsubrl lahf sbb sbb push aas jne mov or cmp xor sbb es inc cmp xchg xchg in fstps gs outsb jecxz add sub fcoms ret or sub insl sahf test mov in pushf pop sbb shrb fmull les mov in sahf sub cmp (bad) mov call stos sbb mov sub test int ficompl mov outsb ljmp or push (bad) jno sbb push in cmp cmpsl add lea add or repnz mov lahf pop int3 hlt imul test aas lock dec cmc add cmp mov inc or sbb mov fnstenv or dec inc ds out or pop int sub cmp fidivrl sub or mov add fld and inc push enter dec std or xchg dec cmp fildl adcl aam fsubrs fstpl pop int3 or dec into mov pop push popa cmp in add cmp in or add jae pop loopne nop sbb fstcw fldcw add jmp or dec push sbb or out pop lock dec lods mov (bad) dec cmpsl cli jb movsb mov push sbb insl mov or mov mov shrl and dec cmp mov rorl (bad) mov and pop mov pusha dec ficompl in lock test lcall ja or cmc ljmp push (bad) sbb push in or stos inc mov xor cmc dec lret mov scas rcll xor test orb dec cmp mov movsl push jb jg xchg inc and xchg xorl cwtl mov movsb mov pop sbb imull or repz sarb pop adc push sbb jnp fwait (bad) mov sbb inc sbb mov mov ljmp fdivrl in aam dec mov sub pop sub or outsb lock arpl sbb mov int3 stos mov ret stc push insb sbb pushf jns sarl scas test lods mov push insl lods rolb or adc or push nop test add mov into mov mov imul push mov decl js pop imulb xor in mov sarb sbb jmp int3 dec in or sbbb loopne xchg cmp push lods pop or push movsl call jnp dec or lods sub test sub mov or and ret iret mov cmpsl inc dec push push lock in add lahf lret jo xor add jl aad lock decb jnp cltd cwtl cmc or repnz imul cmp pop fstps sub or push xlat movsb rclb mov inc sar xchg std inc jp rcrl mov or mov or add inc mov orl (bad) xor dec or xchg pop js insb lahf mov jg (bad) mov adc fimul jmp dec sub lds test sub out lods ljmp bound repnz pop (bad) or cli lret xchg mov imul imul inc cltd stos or out adc lcall loop add fild adc pop pop pop jnp mov int3 cmpsl dec dec mov fwait push inc jb cli jge movsb jnp add insb shrb arpl cmp sub icebp mov shl loope in sub inc jb mov xchg xchg sti movsl mov mov xor mov pop xor je movsb add cld aad push xchg dec adc repz stc negl sar loopne mov xchg jnp decb orl rcrl inc cmp aas push bsr xor arpl mov xlat xchg sbb repz push sahf sti xor scas shr jl and sub jno mov sub xor or aaa stos outsl enter mov lea loop dec or hlt push push mov test out not insl cmpsb adc je in push aas sbb insb sub loope adc mov repnz pop enter xchg data16 or iret and push cmp cmp and repz pop (bad) sahf (bad) call fildl cmp xor cmp cmpsl cli pop stos pop jl int nop clc ret (bad) add push add das push mov fbstp xchg ror mov dec fidivr cmpsb sub push push xchg jecxz aam je cmp add ljmp les pop inc pop or sbb jb pusha push int3 std sub mov cmc (bad) out (bad) aad jns ja adc cmp sahf pop dec sahf popa sbb je stos out pop sbb ror scas pop or cmp call outsb mov jns adc jge push sbb pop adc push (bad) shll icebp sub repnz (bad) lock test stos dec mov push stos sbb pop in and jne adc mov mov aam push add (bad) test mov jle or xchg ljmp fiaddl push ljmp lods sbb orl lods movsl ret (bad) push lcall xchg mov add dec mov lds dec js fisubrl cmpsb dec gs stc fs insl mov cli mulb and sub pop mov lea lahf divb add mov mov testb mov js push mov ret mov mov pop decl pop (bad) ja sub pop or push mov add add sub rcll jne and dec xchg xchg add dec pusha adc addl lock mov fldt mov in push jmp xor ret nop div insb add sub scas (bad) xchg adc or mov movsl inc or xlat jg or jae jne mov jmp pusha jecxz jbe sbb add mov xchg or sub sub sub js test ja stos or out jae or (bad) je sub or call mov adc addr16 mov and imul cmp adc mov sbb xorb (bad) fistp xchg or (bad) xor rcr xchg adc scas lods xchg rolb rcrl mov rolb sub inc or adc dec xor test insb pop mov out xchg sbb mov fisubrl add outsl outsb mov xchg fisub mov clc jnp push std pop sahf test or push int ljmp lea pusha dec bound aam inc cmc jb dec mov mov iret xchg dec aaa js xchg enter sbb and test mov jo push sti mov int3 out jnp mov fbld testl or stc push dec cmp or sahf int3 mov or sbb sbb rol jbe xchg aaa insb jno pop xchg mov or lret imul sti sub and push mov sub cmpsb arpl xor das hlt jecxz pop test imul (bad) or adc cwtl cmc sbbl push sbb movsl inc adc (bad) jae movsb js jmp mov xchg push push adc (bad) xor sub sbb fwait jle adc leave leave push out cmp or or shlb pop (bad) lcall test mov or gs cmp and cwtl in jbe push jl dec lret outsl insl dec and div out lcall and sbb sub xor jge test (bad) test (bad) stc cmpsl add cmp pop loope mov lcallw dec cmc fist pop mov adc pop hlt mov fimull push outsl sbb cli xchg or and push loopne push iret pop xor or inc sahf sar cmpsl add lds les fsubs arpl iret insl adc mov in fcmovnu mov lds inc mov hlt cmp scas jne xchg or xchg add push stos or nop in aas cmp adc rcll sub out sub sbb lock ret imul hlt or gs repnz push mov push mov pop xchg bswap insb fldcw insl mov leave test add or cmp sti (bad) add dec cltd lret or pop lcall mov xchg imul mov xchg lock leave jae or and mov sub out repnz xchg leave cmp jge lods loop mov ja test les ret lea xchg mov cmp jae mov hlt fs jbe pop mov cltd adc or push leave add inc xchg fbld fdiv in dec xor fxtract inc cwtl adc sbb xchg and or dec loope popl inc in sbb inc and sbb pop mov cmp into cmpsb daa sbb and mov inc lahf mov xchg or jge mov std aad popa dec dec jbe adc adc mull xchg and push push (bad) sarb mov and sub ja lret or cmc dec adc sbb lret inc aam (bad) scas outsl xchg je shrl imul xlat xchg push mov dec lds divps sbb in aas stc sub in xlat jb je jo pop cli fs add lock imul jle dec mov fisttp ja aas in mov pushf mov sub xorb jno or jmp out xchg js mov out cmp or (bad) dec aas out push adc fxam fstl adc push and adc jo add adc pop roll push push fnstsw jb sub and xor roll xchg pop (bad) inc inc and popa or sbb fldcw aaa jmp mul push jle jo enter push sub mov out gs not outsl fildll out jbe xor dec jmp jecxz mov jecxz dec xor push shlb mov cmp sub hlt lret test cs push out loope or stos dec clc or sub movsl push call jnp sbb sbb xchg and jno add (bad) lds sub ljmp xchg jns pop popa add or xor dec xchg test or adc push enter repnz (bad) fimul lock sbbl or mov jg leave es ljmp ret test into cmp sbb xchg (bad) mov dec dec cmpsl push xor fs (bad) stos test adc idivb xorl add dec stc adc mov or xor dec inc jg pop push les arpl int add inc mov jg adc push cmp pop test (bad) cmp imul adc test or out push mov arpl push push fs lods cwtl movsl or ss fdivrl leave cmc mov test jns fdivs mov or push xchg and lds punpckldq pop pop into hlt push call and cltd call rol push pop sbb clc (bad) mov shlb sub jmp sbb fistpll test sub ret mov inc rorl enter test sbb int dec dec movsb les fs out popa push push aam sbb mov xchg cmp sub dec mov or jno pop (bad) movsb xor imulb repnz pop or jge jo sbb repnz dec icebp test test jmp ret loopne cmc mov nop in mov inc dec xchg into mov out push or fdivl or std mov sub and mov (bad) rclb out mov hlt test sub in lea (bad) mov push cld sbb jo dec adc je into test jmpw adc out or (bad) lahf cmp xchg pop or fimul cmpsb test mov (bad) (bad) data16 sbb or lock test cmc test dec mov or mov lds adc sub loope mov adc bound lds adc fisttp pop inc (bad) mov or and cmp leave jecxz sahf fisttpll mov sub scas adc and (bad) std jmp andl out bnd or (bad) (bad) mov add or cmp orl mov pop xorl fwait inc leave arpl pop sub std xchg push cmp fwait cmp jle adc pop and cmc adc repz xchg lods test mov sub jnp add or add add je das mov cmpsl mov leave sub jno and or movsb mov or mov jae adc jecxz sub cmp fbld mov mov mov push fdivrl lea icebp or sub jbe insb mov call fidiv adc movsl mov inc xor int3 mov out xor or xor dec mov dec jle dec pop (bad) subl or je sub imul paddd iret pop cmp call iret idivb mov imul cli pop jge add std lahf scas push or jnp lcall push push xchg decl ja fs imul jno or fwait mov cmp stos or cmpsb jno mov xor adc addr16 mov stos inc fistl or rclb in or push and push add outsl roll push clc test adc fisttp cltd sbb push dec xchg out nop or push pop pop push loope js ss push test das cmp test xchg or xor sbb into mov pop int dec icebp shl jbe test sbb icebp jle xor adc push movsb or push lahf sbb inc cmp cltd scas dec lock in inc cmp pop cmp cmc dec imulb lret (bad) xor xchg imul sub cmp test stc in out sbb out out mov loop cmc lods je ret scas test xor into mov daa mov in neg inc icebp imull movsb mov jnp inc sbb jle js (bad) and cmc shl or leave mov sub or gs js mov jno (bad) or bound sbb push jecxz nop inc fsts jge add xchg or mov fisubr in lock out gs or pop ret adc out jne loop pop or pop aad test notl lea es enter pop and ljmp cmp xor or mov and or pop std mov into mov pop sahf inc sti and outsl xchg mov or add loope out jno (bad) mov pushf inc add sbbl jbe popf mov inc mov (bad) int inc or ds xchg in shr dec (bad) divl add nop mov imul sbb sahf pop fnstsw xor movsb xor hlt sbb mov and adc clc hlt add cmpsl mov daa sub dec test mov jns xlat push out inc leave loope jae adc stos jnp subps pushl call sbb mov fs sbb add add (bad) jg sub loopne adc or dec fidivl jbe mov insb test rol sub stos clc outsb in cwtl (bad) push mov dec cmp test cwtl jle push and aaa add lods pop mov enter push sbb push or sub push or push jmp fisttpl js dec cmp lret rcll jecxz cmpsb xchg cmovns jb dec fildl pusha cli cli cmp mov hlt sti out and pop pushf out out pusha cmc cmpsb xchg push add daa in in jo fstpt mov mov stos add aas inc (bad) out adc sub sub nopl arpl movsb movsl sbb fcomps std cli shr movsl fsts sbb rorl iret nop inc adc not jno stc xchg adc jmp pusha jg cltd test mov cmp mov sbb pusha inc or test data16 pop cmp test mov or mov lock jp cmc push cmpsl mov lcall jo add jnp ljmp push adc test sahf push adc inc xchg push stos imul adc adc test or test mov std jle jp inc test iret cmp dec jne shr jp dec test imul mov das mov outsl mov (bad) lock pop lods jno out jle sub push loope imul lock lock mov adc jecxz jbe and nopl aam insl push pop push push and jmp pop or mov pushf dec mov dec push scas pop inc pop ret out dec movsb shlb jg (bad) in jp loopne movsb mov bswap cwtl icebp adc jmp daa mov js out fwait push mov imul stc aas lahf repz insl xchg scas addb scas or rorb aas std fiadd jnp dec xchg jne lds and (bad) jo (bad) lock jl sub sub adc xchg adc fstpl fstpt jbe xchg test (bad) mov ficom pop and aam test dec loope inc outsl inc data16 xor add (bad) bound jns jge or xchg jnp add and or xchg (bad) pop or or jbe push mov ljmp jle jg mov setns addr16 adc push push push cld insb popa adc movsl push out mov cmpsb les inc out out cmpsl inc sbb nop and movsl mov pop push sub ss pop out pop jl dec movl jbe or mov fisub cmpsb pop lods mov cmp ss out mov mov int sbb scas and jb xchg xor push loope fcoml (bad) roll mov push sahf pop (bad) or ret cmovbe or xchg stos negb dec mov mov jnp mov mov and (bad) sbb sub fbld mov or mov stos adc test repnz or mov mov pop rorl mov dec test dec and pop lret incb out pop fstpt fldcw or sahf adc sub bound or mov mov scas lods cwtl out repnz dec or cmpsl sbb fmull lret test pushf cmc or out mov insb stc add xor push lods imul mov and leave or out cmp xor cmpsb fildl lea hlt sbb test aaa xchg mov mov or xchg (bad) mov lret repnz mov pop add sbb jg aad ds lret jmp mov dec lds xor std cmpsl data16 mov and sub jmp mov mov lods imul lock xchg inc mov push mov ljmp xchg xchg mov sub or aad xchg aas test cltd push mov mov xor or (bad) or xor fisub xchg jb push loop mov test lfs std sbb (bad) out cld adc or lahf and mov cmc es fstps std or and inc lcall adc dec jne xorl out and or adc or jge ja mov and rol and cltd mov mul aaa into dec or pop pusha xchg mov or sti jo or adc xchg sarb fstps or enter clc xor adc pop pop cmc and cmp loop pop mov push mov sbb or pop sub lock xchg (bad) jb enter or or and lahf popa in idiv fnstenv dec addr16 out shll and std out leave or xor push sbb mov (bad) rolb xchg popa jno mov jae mov sahf mov cwtl ret (bad) adc sbb (bad) nop cmp or push add repnz or cmpl sub (bad) test dec int3 and mov push or imul or pop cmp enter mov mov cltd fmuls xor pcmpeqb ret dec int3 mov pop xchg push or leave repnz push das or xchg sti jns nop add aam push out idivl cmp aam scas or imul popa push xchg mov scas bnd fwait sbb cmp or cmp lods inc int3 or jae (bad) leave add jmp mov ds aas (bad) adc hlt inc pop lret sub test xchg lock negl dec ja mov or inc or out in mov and or pop xchg repz mov int jbe into lea negb dec or xor icebp or aad sub mov int3 clc sbb or xchg out mov jecxz add inc mov out xchg out or mov push stos or mov or repnz push sbb xor cmp xchg popf push int (bad) add imul movsb mov pop sbb rcll add and dec call push in loopne mull (bad) xor icebp push or bound jmp test test mov ljmp rorl lret outsb je push loop dec or popl fisttp mov imul out sbb mov pop mov popa (bad) (bad) xlat mov push leave and push dec clc out mov or or gs sub sub xchg addb fcom and jbe cwtl call pop into loopne push push cli fs xor cmc dec (bad) mov lret or push int3 aas or adcl fucomip aad lods pushf dec mov fimull or inc dec or jno adc mov or iret xor jle mov stos imulb or or mov xor sub ja and mov push in imul rorb adcl inc mov outsl or jno pusha or test int3 mov not cs aad outsl in imul dec cli in cmp (bad) mov pop gs shr dec xchg cmp and dec sub out les wbinvd jns inc icebp sbb mov stos inc dec or aad mov mov push hlt adc cmp sbb daa mov push sti sar mov xchg and jbe stos das sub pop or data16 (bad) or mov stos pop sti add lock fidivrl sub xor flds pop (bad) in jae leave jbe sbb sbb insl negl sarl mov es rol and or into sahf xchg sbb testb loopne jmp ficompl xor cs or adc repz jb dec icebp jo aaa loope mov adc inc and mov fmull sub dec hlt cmp fsubrl or test mov mov inc fiaddl (bad) xchg add xor ds test sahf stc jl adc push bt sub xchg call inc sbb pop test add add mov push xor adc ret testb addr16 xchg dec xor pop jl insl mov dec arpl movsl jmp (bad) push imul cmp and mul dec dec add add cld jo dec out push sub mov cmc push adc add stos dec mov xchg mov repz or jl fs inc test ret idiv dec adc rorb inc mov inc lahf xor cmp cmc adc pop dec sbb cmc insb outsb fiaddl roll divb stos insl (bad) adc test sbb (bad) cltd mov xchg movsb pop mov sbb or inc jge mov dec xchg xor imul lret test sub mov adcl and or insl rolb and aam dec or push mov lret (bad) adc pop dec (bad) rorb std out in bound lods cmp sub imull inc or int3 jbe xor lahf sbb dec lock aam cmpsb imul out or sbb es cli lcall jno cwtl push add jmp or adc stos scas jne or mov push sbb sbb pop or inc mov leave push mov in add pop bnd pusha mov stmxcsr sarl or mov jle repz shrl jmp mov les push mov popf dec mov mov inc sbb int scas pop adc or mov and add bnd rcrb xor hlt sti push arpl int3 ja (bad) mov (bad) sub pop or jp test jo xchg into adc mov or or or sbb adc pop add imul mull imul jg or inc sbb inc add xchg dec push or pop dec mov idivb jmp ljmp dec fsubr stos clc sbb pop cmc push es push dec inc jle pop out (bad) ljmp push cmp push cld stos or mov add mov jns cmp fistp in jo imul push inc ss adc lods data16 adc push or insb sbb arpl cmpsb into pop lds adc adc nop pop daa jmp daa inc push cmpsl jns js mov cli aam enter sub call stos jae mov pop push add sar xlat dec pop mov or jle pop stc jp hlt mov sti jo mov or (bad) insb sbb in rorb jno popf adcl hlt iret ds imul jo push jb cwtl pop arpl mov or adc out mov dec jns popa repz leave movsb cltd (bad) or repnz inc popf stos dec hlt mov sbb adcb push fdiv and cmp (bad) cmc imul mov or dec jbe adc icebp and aad test or scas out and xor xchg or mov (bad) cmp hlt cltd pop mov movsl imul inc mov fs aam in mov enter push ds fistpll testb test pop jno inc mov mull sbb xlat pop ljmp cli cmp rcrl mov xlat repnz mov (bad) lock (bad) mov movsb arpl mov jnp mov lret or ja pop decl and roll jecxz push imul lret jecxz add xor aaa sbb pop es dec pop test insl nop pop pop clc or and ficoml cmp cmp mov loope cmpsb or or mov out jo lock mov js and cmp xor lods rcll inc dec pop andl push (bad) jae and mov iret or pop mov push dec leave shrd xor pop (bad) imulb xor lea sub inc jne (bad) paddd inc leave mov sub xchg add mov cmc ljmp and clc fsubl cltd pop dec aas xchg (bad) repnz add ret loop cmp mov aas mov add pop frstor bnd mov xor or iret movsb or popa pop push jle lds inc cmpb addr16 aam and outsl dec loop jo xlat fldenv mov and out pop stos (bad) scas insb call push (bad) mov or xor xchg push (bad) xor outsl pop sub push mov jl pop push inc nop sbb lcall mov aam outsl or push mov hlt mov mov pop mov push stos and ja sbb aam or jp mov lods (bad) mov push sahf and cmpsl push dec daa insb mov inc movsb xchg fwait mov stos cwtl add mov cmp push mov std push stos inc mov jl in mov and or sbb fcoms lock call jns or jns xlat lods out icebp aaa stc jg adc inc lods pop jb xchg mov sub add push std test adc hlt sub mov cmp dec and jmp aas pop or or popa adc adc push test xchg dec (bad) or mov test decl push cli fiadd divl fwait mov dec test or sbb jecxz andb test gs loop and mov pop pop les pop push jecxz add es leave inc jno xor orb xchg test popf push inc jecxz add push jne push or shll cmp rclb pop and imul in popf out add lock cmp lret xor xor test stc pop hlt cmpsl fldl pop pop jnp cmp es (bad) fildl or mov movsl add repnz xchg or dec enter mov push out scas pop xchg or test lret data16 add or pop jg imul test fadds (bad) dec lret (bad) add mov insb sub mov sub push pusha (bad) test fs popa or daa jno or cmp lcall iret dec or mov loop lret ret lahf movsl xchg sbb add mov mov imul daa rol jns jae (bad) or mov and fs call xor insb pop mov or test jmp hlt mov xchg test rcr inc (bad) mov out cltd test mov in ds push aaa xchg push jns movsb mov je loop sbb es pop adc and mov mov scas loop orl inc (bad) xchg out dec mov dec push outsb sub std xor push and outsl test negl stos imul or or adc aad cli and fbstp aas fidivrl mov jmp notb test or das jl cmp fldt or xor dec dec dec aam outsl dec push in push push lods or pop std or cli cmp sub xchg cld or je inc adc in sbb cmp cmp out cmp imul addr16 xor divl add inc jb or jmp mov dec enter lods sub imul push pop xlat mov mov shl or inc out mov sbb or frstor jp cmp leave push and decb and xchg add in xchg push std leave sti nop iret ret ljmp aam dec pop mov or dec aad push movsb fstpl std pop xchg addr16 stc mov popa mov mov cmp jle fldl jae daa clc (bad) mov fwait call adc sub jl stc js fnstsw dec push imul in test outsl push push dec pop jb or inc or out pop or xchg mov push incb jbe out or jmp fistp sbb jmp ficompl add dec jno mov or fdivl xorb (bad) (bad) std in push pop dec add xor leave mov bound add popa dec xor xchg cmp (bad) lea jbe cmp jecxz inc int xor cs xor push mov (bad) movsb cmp stos lock mov xchg scas (bad) in mull pop dec pop imul mov test or fwait ss cmc incl and jae or sbb test es repz pop push xor out mul in mov mov inc xor pop push mov out or (bad) lret inc add or cmp or xchg jp or sub nop ret in xlat scas stc dec out (bad) xchg dec cltd fldcw push popf pop jnp aaa sub test push ss stos xor xchg push negb sti lods call sub test mov cmp insl mov xchg loope shrl mov fcmovbe mov jecxz gs out or or xor cmp iret lock add rcrl (bad) jmp stos in inc das addl add sbb test adc out add push xchg and scas fiaddl adcl sub imul sub loop fdivrl (bad) jle test mov hlt scas jmp stos mov xchg addr16 mov test scas dec jle and icebp xor lret jbe add cmp add push pop and pop (bad) popa or adc popf pop (bad) dec imul mov aad (bad) mov inc inc arpl lock lock or fildl sbb out not jecxz (bad) rcl or cmc sbb jno sbb fmulp mov in or jb test stc xchg pop gs (bad) aas push jmp mov notb lret test fsub xchg sbb (bad) push cs or testl dec in push mov adc movsb decl dec lahf and or dec xchg pop pop or out mov repnz test shll loop sti or sub movsb imul leave sbb scas sub scas push movsl jb jne inc pop jle sti ja and mov loop mov cmp xchg lds sbb xchg mov xor out in clc mov popa test mov sub or movsl dec imull xchg roll sbb fs adc mov dec jne pop or (bad) aad stos sbb lcall inc jg lock fisttpll and xor lea and mov adc cmp ja and shrb dec scas mov push sub pop push mov dec (bad) js jmp or outsl or push jnp rcl jecxz jo insl dec aad ret lret and test pop (bad) sub addr16 stos enter lea sti inc pop call add sti jecxz test push jle int3 (bad) ret mov pop mov pop sahf push push or ss push sarb xor stos leave mov fisttpl call lock xor into test pusha test jp imulb and or jno test xor push test je mov repz jne (bad) mov inc stos inc and fldl sahf (bad) rclb pop dec xor jns sub (bad) movsl sub push cmp sbb add mov add mov and jg xchg cli std dec push and popa mov jmp sbb hlt insl adc sbb (bad) punpckhwd (bad) lods adc pop mov imul mov aam call stos movsl cmpsl dec and fwait inc int jecxz pop repnz insl sub icebp das dec call xchg jge adc outsb aam add icebp inc test adc and jno mov sub je scas cmc sbb pop pop in push (bad) jecxz in jne mov cltd ljmp lcall mov xor insl loopew out or jl adc and ret pop scas lahf xchg cli mov (bad) pop gs adc adc fcmove addr16 mov mov cmpsb scas idiv imul add addr16 sbb pop jo in mov (bad) mov in (bad) repz lds call sbbl pop cli and test (bad) or jmp lret mov ret or aad fstps inc mov inc push add ja sub or xchg jg add idivl mov push loop ds int3 mov aad xchg sbb fxch jne jae cs adc jb movsb psrad inc pop fcmovne hlt repz dec or adc jg (bad) (bad) mov int and movsb xchg test pop sbbl jecxz jg nop test sub mov outsb dec push or dec mov (bad) testl push into xchg mov lods mov or and push das fcmovnu in xchg dec into jp cmc add mov out mov ss sbb notb ret adc mov or nop cmp push sbb jmp dec (bad) dec or push lods pop hlt jmp loop (bad) in or pusha aam or fstpl mov (bad) or inc sbb mov test add mov insl hlt ja mov dec xchg mov (bad) xor sbb aad cs imul loopne and sbb call inc in add add cmp cmp inc xor mov and push mov or adc (bad) xlat push out scas or and test aad push pop rorb push rol xchg xchg test xor sub movsl xchg push sub pop add mov adc jp add fs je ljmp aas push js lock cwtl or (bad) jbe mov jns or add add sub std mov lret adc imul stc mov mov mov inc jl clc or out inc and dec jecxz loope mov add (bad) leave movb lea out xor imul in pop push (bad) sbb mov cmp inc mov xor xor (bad) cld add inc mov or mov (bad) mov fcomp or mov pop repnz jecxz stc iret aad les (bad) jne mov bound pop inc insl mov adc and add (bad) lret mov jge dec nop and lods repz sub or mov cmp popa test pop jle std add cmp pop (bad) sbb aad mov inc dec aaa nop into or or mov mov pop lods int3 and or pop jmp stos popw leave jae mov push or fs rorl rorb or jl add loopne inc mov int inc in cmp mov (bad) dec divl pop cmp stos into ljmp arpl insl ret rorb cli icebp sbb mov pop rclb fsubp mov sar pop jae repnz popa outsb test mov movsb int add mov mov lahf addr16 lcall hlt insb fwait jb cmp arpl icebp sbbl insl xchg mov cmpsb push mov mov jmp mov xor pop push ja mov cwtl mov scas mov sub pusha (bad) idivb in imul lods mov jle arpl nop mov dec add lea or cmc sub jmp movsl sbb jg or or std cltd pop cmp or test stos push pusha dec scas or push add (bad) fcomip mov inc sbb mov movsl mov arpl xor or mov push lods fiaddl cmp in add jnp or ret loopne inc mov rcrl pop cwtl mov stos std cmc fwait pop repz aaa sahf aaa sub jno mov mov imul iret jb cmc mov cmp fmull sub popf sarl (bad) cmc mov dec mov mov jns mov push outsl jmp mov rorb inc or out sahf jmp lock scas popa adc mov dec or mov or cld or gs adc fs fldl or imul fcmove es dec daa xchg loope popf adc (bad) mov sti fcomp dec push movsb cmc jnp imul ss sbb les mov in lea ret dec xchg mov mov or xor or push adcl pop fidiv (bad) in pop es xor mov (bad) scas ret int3 mov jle xor sub test sbb push cmp rorl popa jb ret jecxz (bad) or xor add jne mov xchg loopne andl (bad) je adc or cli or push lock (bad) and sbb cmp in insb sbb or loopne pop test pop leave ljmp add sbb cmpb or sub or mov (bad) jp fnstcw cli cwtl add or xor mov dec jne clc sbb and or xchg test aad in cmc inc adc sbb cli xor or test int3 jbe dec adc out inc (bad) and push push daa aas sbb fild sti stc mov jge rcl (bad) mov bound (bad) jno add mov (bad) lock sbb inc in inc mov out sub mov popa jno mov lock adc push subl imul fucom adc xchg push or bndldx cmc pop dec nop (bad) mov mov jno scas icebp jno mov xor leave or mov sbb imull int3 mov push out in pop xor xor fsincos cli imul test scas js cmp cmc adc aas or push mov jbe divb lea jb sbb data16 cs sub inc or inc adc ds mov (bad) aaa lock mov notb into or addr16 mov ret fxch enter push or in (bad) in stos mov sub (bad) (bad) jmp inc aaa or lock xchg push or es sti ja xchg pop movsb sub pop shll sbb sub jge pop push mov (bad) and mov dec into imul adc (bad) mov fcoms pop dec cli push in inc cmpsl xchg xorl or adc or fsub iret dec js stc bound inc push mov xorl xorl jb xchg (bad) pop lea rolb divb ret or cmp adc sbb or or mov cmp popa bound sbb mov jne jbe jns rcl cli mov into mov jb fstpl imul xchg add (bad) int out repz jmp or mov lock jbe movsb push std adc xchg rorb ljmp xor decl add sbb add xchg mov fld sbb popf sti js ss (bad) jno stc mov sar (bad) jmp repnz pushf and cli inc pop jns dec (bad) dec pop es sti or dec dec in sub mov inc adc rol fcompl mov xchg xchg pop fimull rorl jne inc pushf cmp leave sub mov lods xor (bad) out pop or jecxz fisub int out or aas inc xor rol mov call xor cmp mov add loopne inc jb aad sub (bad) out xchg (bad) out push xchg ja pop adc add in xchg clc in mov (bad) repz mov je fs inc lret jbe ret das xchg mov js and fisubrl cmp stos push ret or arpl xor lahf push (bad) (bad) jne pop jb mov cs inc hlt cltd enter push je dec div sti mov xchg sub sbb and enter xchg mov pop or popl insl gs or xchg mov and jmp test jmp ret pop jb in or mov inc shlb frstor xchg addr16 icebp jp inc ss or and dec cmp mov jle pop test jno (bad) pop mov cmp hlt iret push jmp leave mov in or iret push movsl pop int3 negl pop es insl pop and fs sbb movswl dec sti out gs inc dec std out repnz mov addr16 xor movsb or imul jns shrb ljmp pop mov xchg push and in sbb mov rclb sub mov jbe sbb xor pop cmp jo js mov (bad) push push or icebp xorl int3 scas ficoml or sub mov and repz int jmp std push mov pop push repnz xchg push lcall mov mov and (bad) out mov ret add push sbb cmc into pop fnstenv or mov push aad fmul cmp pop cld ljmp mov imul sub gs inc push lret or ret sub push sbb lcall ss sbb jns or paddq (bad) orl jb icebp push (bad) and mov js mov push xchg daa icebp or pop mov mov dec jmp stos xor cmc addr16 movsl and out jns dec cmp (bad) adc dec mov cmpsl test mov and aaa and enter test sbb sti jnp leave lods in std add inc out jns push mov pusha stc in lods jmp jb xchg lods loope je mov inc ljmp mov sub mov out (bad) jns mov adc loope shll data16 mov inc jns lea outsb dec addr16 das hlt icebp pop adc pop call mov dec add aam push lret (bad) std inc cmpsl ja pop inc test lods mov and ljmp sti sti mov pop enterw fnstenv js xchg mov pop push (bad) jge int jbe jle setge jl mov or mov or inc mov jo shl and pushf popl adc ss dec and std (bad) adc and mov mov dec int adc jmp sub dec adc xchg in mov sub or dec daa add pop icebp bound jle lods xchg push cmp or lret or mov addr16 leave xchg rcll test aam mov std mov jno sbb mov fsubrs adc mov sahf mov pop fiadd daa jns adc adc (bad) dec js pusha adc and inc mov mov (bad) mov sti cltd mov mov (bad) cmp jno fmuls call xchg in cwtl jmp arpl rolb icebp or addr16 or call ja out aam repz mov or pop dec es lret or mov jb in out mov lret pop adc out lcall ret (bad) aas movsb xchg xchg rcl sub je out aad sahf push ror sub cs scas aad mov lock add mov pop notb out jno (bad) sub push pop lock popf push (bad) sbb mov into fisttp out sbbl (bad) lcall sub rorb push and mov out mov fs cld pop (bad) repnz (bad) xchg loop nop pop ja popa push inc mov leave dec jno mov mov pop or (bad) push loopne out cmp pop in out inc mov int3 mov mov cmc sub (bad) adc push dec fstps and fsub test and leave jo pop add aam add ret xchg sarl push out out sbb out xor dec and adc test scas (bad) shlb mov cmpsb jne mov mov scas pop testl jno add fcmovbe fldcw inc inc adc test add lods movsb insl add xchg add inc jmp mov add and pushf dec xor jmp int fxtract aam (bad) (bad) lods notl out and aas enter loop stos xor jbe push lock inc jecxz add jno test mov dec mov ja (bad) cmp stc (bad) cltd fnsave jecxz mov mov (bad) mov cs sbbb add dec pusha mov std mov lds push rorl cmpsl sub or lcall xor or xor cmpsl incb push ficompl mov mov (bad) mov (bad) sub mov dec lock mov xchg xor ljmp cmp scas xchg jno lock rolb loop jecxz gs mov repnz dec sbb cmp (bad) push inc pop sbb pop xor lds std aas adc sbb jne and push dec mov jno fcomip std dec mov aaa mov jne push call mov jo fidivr lds (bad) sbb xchg cltd ficoml in cmp mov jo sbbb mov jbe push imul inc repnz (bad) jne and (bad) leave xlat fisub fisttpl ret mov (bad) jmp ss mov adc bnd xor lock or data16 or mov rcrb or mov cli jo sub addr16 sbb jb call (bad) mov pop mov in jge leave divb or pop cmpsl sti adc push das or cmp loope dec mov sahf xchg imul fmul or insl push mov (bad) or aas mov mov inc pop repz clc mov xchg dec cli pop fild xor orb loopne xchg cmp ss mov mov mov pop sbb pusha xor or (bad) jno xor mov inc lahf dec jmp scas mov jo pop pop sbb fistp in leave daa or outsl jp or mov xor out lret sbb or jne push or repnz rolb test test lret adc lock fldt imul fnstcw jbe add add pop cli xchg es sbb mov test or rcrb fisubrl leave or inc push mov daa leave jl pop or stc dec cmp in mov aaa subl xchg push sbb in (bad) cmp and dec or fucompp mov mov or mov ret rcl scas leave cmp mov lea pop out pop or sub or pop int push mov xchg or std (bad) iret or out insl cmp add push daa fistl lret or xchg pusha pop iret cmc dec mov sub push push or adc and or mov or sub pop sbb xor adc fisttpll mov notb popa ficoml or cmp sub xor rclb addl jo jno xchg lahf subl and add repnz mov inc fnstcw push repz lea cli jp (bad) cmp sarl mov sub dec pop (bad) xor mov cli nop add movsl fwait dec cltd sbb jle pmaddwd and lea (bad) mov xchg iret jo cli ret cmp dec push xor dec sub or pop mov mov xchg outsl adc fucomp stos jge xor xor sbb mov dec dec aam shl movsl sbb adc cmpsl std mov sarb or pop aam mov adc mov jnp jns dec xor imull imul out push lcall and jae adc incl icebp (bad) testl rorl faddp or mov and jl jmp (bad) xchg adc dec adc test arpl fisttp mov cmc jl enter cmpb fdivrl mov out xchg pop in sub or mov adc xchg inc pop lret outsb mov or cld mov sti push lds adc (bad) mov sub dec fldt fsts (bad) repnz and add jle or and negb (bad) rorl insl jne or loopne fstpt in arpl sub add roll scas dec pop ret inc pop lea add in aam jge mov mov dec stc cmpl adc test or fnstsw fistpll cmpsb lods or sbb pop frstor pop inc aad jno pop jmp or dec xor in jae mov inc or cltd scas xchg push and jge or out or orb push cmc push xchg lret repnz bound movsl or xor jmp inc xchg adc ss inc mov cmp in or sahf rorb mov and push pop outsb js or jmp mov jae push ret (bad) push or ja insl pop xor pop mov (bad) hlt mov mov test or mov bound hlt push sbb imul mov lea mull push fiadd mov dec or cli (bad) or sbb and mov test mov or mov or mov jge lds fnstcw pop mov repnz fwait cmp cmp out lea or xchg xchg sbb (bad) idivl push ss leave cmpsb add or xchg test or pusha repnz jmp testl out or arpl mov add movsl or sub jp cmp idivb sbb (bad) jo push rcrl xchg loop jp insb push (bad) push dec lret mov ds cmc in icebp adc adc (bad) int add jne add jge or mov icebp int jns push add leave shr pop or test idivl xchg lods push cmp stc or aad xlat or and ret or push inc mov pop test out jnp jp mov (bad) idiv inc jl movsb cmc (bad) test jo fs lret (bad) ss xlat sub scas add (bad) sub xchg repz cli mov sbb loope adc (bad) sti leave add insl int push shlb push fimul mov mov xor incl pop mov inc mov testl aad jmp stos jns dec add in call or insb or pop sbb fistl or bound mov push aaa cmp cmpsl xchg popa fwait or inc (bad) popa sub leave sti inc inc mov popa aaa lods call adc cmp fnstsw mov loopne sbb negl cmp std (bad) and xchg and dec push (bad) xor or mov cmp or cli xor leave (bad) push mov mov test mull sti inc jmp jecxz (bad) in (bad) hlt sub pcmpgtw fsubp cs daa inc add sub and and (bad) cld jmp sbb into jne or (bad) jae daa frstor push lea ja leave or or pop sub or mov jecxz (bad) jb jmp xorl ret cmp add (bad) xor vsubpd or xor add shrb mov rcrb xchg movsb xchg push fmull leave pop scas or adc bound arpl insb ret push aas jecxz fidivl divl das (bad) sub sub (bad) imul mov addr16 mov icebp cmp jge cmp fisttpl cwtl xor scas pop pop inc orb cmpsb (bad) out or fcmovu int3 xor cli pop pop cli mov mov dec jo xchg loopne int3 pop pop ja addl shl sub repnz insb jnp repz mov std add sti bound jne out dec pop jecxz jae scas add pop rcll loop mov mov les popf out xor mov sti pop xor and mov cmp or movsl fbld addr16 jmp mov mov les xchg mov xchg push jnp cmp hlt aas enter pop jecxz stc adc or cmpb pop (bad) pop sbb or add mov mov aad data16 jb dec adc jo mov and cmpb jge add roll jo adc and mov xchg mov ja or pop out mov not mov std std adc dec fimull xor adc xorb in add lret mov insl fs orl test icebp mov arpl jge repz inc push add or sete mov scas mov loop loopne pop notb sbb movsl sbb pop leave jb wbinvd int inc xor jge push imul mov mov lods mov pop mov mov (bad) (bad) pop cli lret sub lds retw fucom and aaa lods stos jb xchg leave std in dec outsb sarb leave outsb push jmp leave add inc adc sbb (bad) xor and add lock movsb mov fsts sbb ds movsl jle jmp pop (bad) in (bad) jne scas ret movsb cmc test jl notb add cmc push push jbe dec stc out push cli out (bad) test maskmovq mov cmc iret test lret sbb mov mov les cmc adc out fbstp lret mov and shrd or lea and hlt test pop jecxz lods or mov or sub dec lret mov dec pop xchg inc pusha movsl fimul setne int3 daa mov repnz aad negw das adc dec xchg adc in aas out stc sub xorb aam aam ljmp call in adc mov xchg sbb out cli inc cs dec ds cwtl pop jmp mov jno (bad) lock dec iret loop repnz jmp pop jo mov mov iret sbb (bad) jbe or aas jl sub adc lock into mov xchg xchg xchg sarl add mov cmc stc jae insl (bad) hlt jle mov repz daa and bound fnstenv pop fsubrs jae je jns jo jno push sub dec sbb fs mov aaa insl xchg (bad) test xlat addr16 cmc (bad) cmp add xor neg (bad) mov ret imul nop fstps shrb push mov or xchg (bad) jne into adc fldenv (bad) fisttp mov mov or enter or cmp push mov loope mov lret das cmc dec sub imul add mov or test xlat or and test test test (bad) or pmaddwd dec sub jne int nop fs sub fcompl mov pop and sub and insb paddusw popf bound jno or sub sbb cwtl cmpsl (bad) sti inc or mov shrl test or jmp fwait pop pop rcrb popa or mov pushf and push cmc ret jmp int3 jl jecxz or sbb imul imul icebp ret stos and (bad) mov pop inc xor shl pop add adc cmp negb adc popf pop movsb ja es fwait jo xchg adc mov (bad) jmp mov sbb ljmp addr16 mov das jge or jmp sub adc sti fstl lahf mov or pop mov dec bnd ljmp mov adc or xorl jno dec mov cltd fisttpl (bad) in cmp mov fmuls fstpl inc mov fildll pop ret sarl cli or add or je lret hlt xor repz (bad) xor mov lods add int inc mov enter int (bad) push pop icebp notl jno pop mov cmc icebp xchg and leave adc add mov ja or popa iret mov (bad) or hlt leave popa aas clc jne pop push mov in enter int (bad) cmc movsl stc lret adc outsl push push cmpsl aas jg sbb cmpsb iret lcall repnz xor adc adc jns sbb sub pop sub test adc dec mov addl ds lea dec inc stos inc dec out imul pusha aam cmpsl cld lahf add or rcrl loope arpl sahf (bad) aad jle dec loop add dec xlat mov xor int lods jbe les iret xor cmpsb or rolb or pop adc xchg addr16 mov xchg (bad) and subl mov (bad) ljmp mov test push mov jnp inc jns mov or xor inc xor pop sti sbb pop ds into fiaddl add xor (bad) dec mov imul or xchg (bad) jl pop pop or push in push mov lret jle imul mov mov mov dec cwtl xchg (bad) sarl jmp movsl mov shlb or inc cmpsl inc aas xchg mov ss dec and mov push scas xor (bad) pop dec leave fs out xor repz test dec fdivl fmuls and cs or or xchg les (bad) in flds add dec or mov adc cmp int or nop push fiadd cmp es push in push mov sarb into lea cwtl fwait pop mov push lret stos test cmpsl sarl mov sbb enter mov inc mov push or cltd mov aaa int inc mov ret or sub je out stos imul fisubl loop adc sbb pop fwait xchg cli (bad) push sbb imul (bad) add inc jecxz add or mov mov sbb or test aaa push push inc jbe dec xchg mov xor adc mov lcall push xlat cld out cs xchg inc mov leave jae pusha sbb (bad) pop ret mov mov xchg or cmp dec dec bound les popa imul shll pop jg inc int das mov adc flds lock mov or xchg cltd xchg and or stos sub push out or pop insb add xor call adc das pop out cmpb repz cwtd dec adc enter int3 xchg mulw lods or push jne push pop leave sbb cmpsb mov dec idivl mov jbe je cmp mov call mov stos gs xchg stos cmp jg adc test mov mov bound out mov push fnstcw xchg lretw mov movsl xor pop (bad) mov movsb push sub dec dec adc out cmp pop in hlt pop add dec out (bad) jnp cli mov jne add push or insb adc xorb lods cmpsb popa fsincos std mov xor or or mov orl jno jle je hlt movl or cli jb push dec mov ja fcomp aaa imul mov cmp (bad) adc add fldcw insb es fdivp adc test mov icebp out lcall dec cld dec fadd movb xchg jle (bad) icebp imul dec pop mov cmpsl inc adc xchg popa loop lret xchg jo cltd sahf popf xor sub repz mov cmp pop shr lods xadd ja push mov nop dec and add int3 sub iret xchg jg ret sbb xor cmc dec adc imul mov push push pop jo leave xor xor subl lock and movsl mov mov arpl lock mov fsubl insb cmp adc pop cmp mov push into scas sbb out insl lods (bad) leave xchg (bad) lahf ja adc push push or lods mov cltd or movsb mov stos or adc aam loop subl xlat xor lods inc div fcomip jecxz cmp mov jl mov repnz cli jne mov fimull cwtl sub aad jo test pop rorl mov pop mov cmp push xor and inc cmp mulb (bad) xor jge mov imul lods xor lock repz addl les mull mov lret in or mov aad je push mov stos scas or (bad) out leave adc and xor out xchg std mul xor popf leave divl jp sbb and jae adc nop stos out int std mov push in add pusha iret pop adc dec js jo leave adc rorb sbb push (bad) mov adc sub xor and mov xchg mov out push adc aam (bad) inc (bad) mov inc aaa and aam or push je aas adc scas dec int mov add mov xor inc dec mov enter jno mov jns loop mov jmp leave inc xchg icebp xlat adc lcall jl dec rorl sbb inc push jle mov pop addr16 mov lods movsl js ljmp add and inc imul lahf mov cs lea xchg scas jne inc add or mov pop fidivl cwtl fistl inc or aaa lods mov xchg push adc clc mov or adc cld or (bad) notl add pop or std out fiadd fisttp adc jbe pusha mov or jge mov pop cmp inc (bad) or test incb lods imul (bad) test (bad) loopne dec or fstps (bad) mov js pop out or (bad) mov push iret mov ficompl or mov loop jmp mov stos dec or mov fcmovnu inc dec mov mov scas cwtl lcall daa aad out push cmp cld push xorb (bad) aaa (bad) aam cmc or notl mov sbb xchg lds jmp xor dec xor xlat lods insl sub icebp adc add addr16 (bad) jb jl push jle jg or xchg mov popa icebp (bad) push aas cmp mov xlat sub mov adc pop imul fsubs mov push loope (bad) jns out and dec out xor scas inc push mov pop jne dec cmp push dec fsubs cmpsl jo cmp rclb cld mov mov std jno inc push out popa inc jbe cmpsl jnp push mov cmpsb cmc loope gs jp cli out jge (bad) cltd add test js pop lods ljmp pop inc dec fdivs xor mov or sub adc cmp mov faddp iret mov pop cmpsl mov dec sub pop lock fadd or gs outsb inc popa or (bad) sbb test push test jecxz orl jno jp shll mov cmpsb imul mov and int in adc xchg fdivs adc cwtl pop adc outsb mov inc rcll mov mov mov pushf jecxz or push mov xor arpl int3 cmc loope scas aaa ja xor mov mov jnp lret or sbb mov clc cmp insl dec jge stc push inc mov (bad) je fstpt jl jbe sub add cmp push jge xchg fs (bad) mov mulb push or daa xchg repnz inc jns test aad popa push jle das jnp push dec stos jmp std and in mov adc mov inc xor push pop shr mov mov adc or xchg add lock pop pop daa mov mov push scas push cmc xchg movsb adc pop push cmc sub and xchg cmpsb jnp mov test xorl (bad) adc (bad) (bad) mov fdivrl dec sub stc shrl jno xchg jo shll seto mov cmc stc mov inc in jle pop jb outsl mov outsl pop fld1 jae test pusha cmc out jno push in sub dec ret pop ljmp loop pop cwtl and ja aas rol insl lock mov pop and xor sub fldenv cmpsl nop lea movsb (bad) das add aas xor ja xor inc hlt icebp imul popa ret int test clc inc fwait in incb jmp arpl insl push xchg mov mov jmp fs dec mov mov arpl js in jp inc jb data16 stos dec cmpsb mov dec pop insl push fstpt shll enter xchg mov lock lret jmp jbe sub fdivrs out stc and jno mov xchg lock sbb jae test stc add aam or leave pop insb jmp enter adc xchg or divl dec test scas mov fcoms sbb push rclb insb sbb fwait lds mov inc sahf fbstp dec mov jb sub lock imul add push inc sbb rorl mov hlt scas sahf cmp faddp std xchg imul mov dec fs aad orl pop test pop mov sub loopne shlb ja pop div push jle inc std sub call ss repnz js cmp push and jmp xchg xor sbb es scas (bad) cmp (bad) mov outsl (bad) or sub dec mov and inc lret dec cmpsb and sub rcll add or jmp cmp pop add outsl push lret inc fimull cmp les ret or cltd xor mov (bad) cmp fmuls (bad) jns shrl int3 or xchg movsl sub jno or (bad) std test xlat outsl inc jo xor incb mov sbbb mov add adc test jg adc cwtl lcall jns jno out inc add mov cmpl lahf xor enter or aad out dec sub mov out mov movsb cmpl sub adc stos jne mov popa lcall js add mov ret mov outsl loopne push lods or mov mov inc sahf shr add mov les jae mov inc xchg mov jne movsb add or ss scas adc dec add pop dec push inc divb and jns ret std lods xchg std lret out push ss pop pop or jae in test adc dec stos or ss call xor ss test dec (bad) je push push jecxz adc xor mov cltd repz pop faddl subl leave inc mov mov into jo mov fisubl mov mov cld mov aas jl xchg pop cs int jns mov out push lock (bad) adc mov lret mov out loop xchg js xor mov add (bad) dec lods and xor fucomip inc aam rorb mov mov pop jl pushf rol jge jmp dec rorb xchg ret in in pop xchg repnz jns dec pop jnp dec pop adc dec jmp into or popf pop fwait pop aaa fnstenv adc lock xchg push ljmp or pop sbb and jne or (bad) dec or mov or ljmp stos lods push or adc cld ss push jo ret mov pop cwtl xor lret cmp (bad) je icebp gs sbb xchg hlt jp stos dec in imul jnp imul mov outsl aam mov pop xor lock inc rcll in jne mov movsb sbbl sbb xor cs stos inc dec xchg imul or xchg or scas jecxz scas jecxz daa pop or mov ja cmp rolb or neg or adc jecxz adc dec jbe std jns mov out jb aaa dec mov inc addr16 mov push add and jl dec mov sti cmp das jmp xchg hlt mov mov xor jbe sub sbb (bad) mov hlt loopne pop addr16 or in aaa mov cld cmpsl data16 es xor pushf cmp cmp leave or int aam jecxz,pt (bad) (bad) or icebp dec jbe movsb inc mov test cmp inc insb push inc movsb lock repnz or or int loop cmc not in outsl or push imul jns sti or out mov fdivl lcall or sub mov bnd (bad) lea cltd imul stos pop push outsl in pop jp pop cmp dec icebp and push inc push insb sub or adc jge adc pop cmp mov loope in dec jo insl arpl mov mov lods pop inc cmp dec jge lcall push jne push enter and or int popa adcl or cli xor xchg inc or imul cmpsb mov add iret xchg imulb cld clc xlat dec sub xor or aam pop sub ret or push in adc fimull stc pop sbb pop or aas popf out ja sub xchg xlat insl pop in pop (bad) mov mov mov cmp xor and or mov add inc popf push and sbb in pop xor (bad) dec cmp out ffreep imull mov or lahf pusha aam add movsb lahf dec fwait nop pop lahf negb pop or adc or jno and mov (bad) mov dec sub sbb jne adc (bad) popf lret mov pop adc pop rcrb or push repz add pop fmul inc mov (bad) mov loopne xchg test ja mov mov sbb fcomip gs jg lret std push cmc out lcall lahf push dec arpl repz mov iret loop scas xlat or fwait in jae mov cmp dec pop data16 pop jbe in aas mov xchg out xchg inc or pmullw or cli cmp mov dec or mov mov jbe cwtl std dec dec jmp pop or dec fs or jmp scas inc sbb xchg adcl sbb mov or fwait xchg inc mov or push les mov (bad) jle (bad) lods xchg (bad) int pushf mov ret or add in (bad) roll mov mov and lods or aas dec fcompl mov mov aam mov or (bad) sbb sub pushf adc cltd fs stos or add les mov pop dec mov (bad) jns into fwait int3 add xchg dec cmp sub sub push hlt addb mov and orw sbb mov jo pop adc or orl insl aad ret cmp xchg divl mov sub or stos out aad dec add and cmp jmpw cltd inc es lock cli pop push pop adc dec out xor and inc add cltd shlb mov or btc or cmpsb mov (bad) jns int3 sti or lds pop int or xchg adcl (bad) mov loop xchg std sub insl lock stc pop jle loope xchg mov add jae mov fidivrl rcr xchg fstps inc mull (bad) cli idiv mov jle adc sbb lock out jb movsl cli jg movsb (bad) inc or or cmc scas push notl mov push ja add mov jl xor fiadd push mov aam dec (bad) or push repz cld sbb xor stos inc adc and or xchg push mov pop leave dec add sbb loop push dec lds mov (bad) jo pop and pop (bad) aam add popf arpl xchg sub (bad) cli fisttp jns notb fcomi cmc sbb loope add push sub add mov ret lea xchg dec cmpsl add insb test sub icebp test xchg stc aaa loope rorl or push out adc sti mov aaa in push movsb flds xchg aam add or pop add mov push mov scas iret imul inc xchg pop add (bad) sbb lods loope loopne cmc cmp push xchg sub packssdw or xor movsb sti icebp (bad) hlt jg push or and push push rorb jecxz,pn mov mov adc movsl jno cmp sahf sbb sti jl nop inc popf xchg sub push cmpsl push push leave or sub (bad) cli pop int pop nop mov push dec cld jle mov or add call xor dec sub lds sbb xor fimull or ljmp int3 pop dec mov cmc out int3 sub jmp dec stc jns test fcmovnb or ljmp or leave test inc mov das push imul or jno jbe lods xor lcall xor xchg or (bad) repz jo xorl mov movsb add popa add (bad) jne lcall in xor push sub dec inc pusha test ljmp pop and push xor cmp inc mov imul xchg sub data16 mov add mov insl adc add push inc into push push jo stos push mov adc fisubrl inc fmull cmp insl push test mov mov icebp in xor sbb outsb ret ljmp out out adc add inc or inc lock pusha loope mov icebp imul mov dec rolb push inc or push and cmpsl mov sub aas decl imull mov cmc shll push imul and or arpl sbb std (bad) dec dec iret mov dec imul dec mov mov aaa es loop (bad) dec jo mov mov iret or shl sub mov xchg or pusha sbb mov or daa push (bad) cmc rcr in imul leave fucomp emms or js fwait scas adc stos divb cmp sbb jns xor or cmpsl adc jno int3 stos repnz in scas jo (bad) imulb (bad) nop or xchg mov (bad) les notb imul mov pop or mov aas mov daa divl sub idiv cmpsl mov and cli clc xchg and mov mov mov daa std mov inc or or mov or (bad) jb jns hlt adcb xor cli ret cmpsl int3 test cmp inc mov pop sbb sub jge mov ljmp or in ja prefetcht1 call addr16 xlat jns lock jne pop lret (bad) cmpsb inc repnz xchg and dec add lea std xchg push fdivrl or xor pop adc (bad) mov mov mov cld pop aas and xor inc mov pop pop sbb sub es mov mov aad dec pusha or pop inc mov stc mov or inc mov outsb push out pop fisubl adc incb push push in orl or rcr bound push cmpsb pop add repnz jmp lret cmp lock notl js and adc jo in add jnp jb (bad) sub testb in pusha repz (bad) dec hlt or in or ja mov mov mov mov cs (bad) or stc in decl jbe xor outsb shr jnp jb mov loopne mov inc call mov sbb inc stos fisubr sbbl xchg jge pushf ja aam add out repnz mov test jg mov and sbb addr16 testb adc stos flds hlt xor decb or jl aad iret leave mov or xor xchg push outsb scas mov dec push cmp jnp adc movsl out xchg cli push jno dec into cmc or mov mov inc (bad) mov clc add ljmp xchg loope leave xchg sbb push les or loop push inc or clc jnp pop addr16 stos das pop cmp dec xchg push inc aad cmp daa or lods pop mov pop cltd mov and adcl cmp or aas and mov dec xchg out dec mov mov enter mov hlt mov mov mov add and cmp adc or push push mov add inc or in imull aam jns iret movsb fidivrl fstl out cltd (bad) push jmp add pop in pop ret dec sbb andb add or sbb jle rcrb add pop mov dec insl dec add gs or or and add xorl (bad) call decb push adc mov mov dec sub pop mov mov (bad) sub jecxz mov jae push in int3 call leave lahf adc std and or and xchg repnz lret inc repnz sub push sub sbb and pop negb sahf inc clc mov fwait shr into je mov push int mov dec push cmc push inc jl cli in pop aaa pop dec jo add jae add test mov or push xor sbb cmc es notb add dec or xor lock sub lret jle mov fstl lods add (bad) (bad) daa push jnp or adc insb add jo fidivrl or mov push sub insb stos sbb mov gs arpl add test jmp adc insl or mov push mov jns and dec inc and int3 jmp mov data16 add sahf popa pop adc push inc mov mov sub xchg sbb and notl test mov sbb ds aaa jns popa cmp add dec (bad) scas xchg in adc (bad) js in mov out push rorb repnz mov inc pop jg xchg or dec sub idiv mov xor shrl pop notl movsb sbb cmpsl (bad) sbb ret mov inc pop inc cmc mov adc and mov add jo inc or dec jbe mulb xor push mov out mov xchg incb test xor fisttp shrb orb outsb inc push stos dec jnp sub sub fadd mov flds adc inc inc sbb jle stc adc (bad) repnz and mov popf inc les shl xor or or jns push lcall adc sub xchg push scas add mov popa out mov push mov mov cli xchg xor cmp mov test int3 xchg js hlt or push push or (bad) jge outsb fist and stos dec jmp ss add subl jno sahf insl mov ret bound sbb adc int3 (bad) (bad) push push icebp xlat jge or mov call dec shll stc idiv js subb dec dec or movsb lock xchg lock jecxz xor cmpsb mov dec mov xor dec (bad) mull outsl xor push or or and adcl out or sub ds imul cld or sbb in add pusha lret mov cmp mov jp cmp rclb hlt mov or and push shrb (bad) xor mov repnz in insb jecxz mov inc dec xchg sub mov loope sbb inc sbb jmp out fmul ss repz dec pop cs sbb stos jne jle pop dec stc mov shrb sub xor pushf or or sar push sahf test or push imul inc mov xchg mulb int3 xor hlt nop insl movsb pop dec lock mov jb jno repnz inc or pop lods sbb cmp mov (bad) loop adc or xor sahf fdivr pop loope adc out sub sbb adc jno jge dec cmovns xchg dec xchg fidiv out mov jbe cmpsl inc divb fnstenv xor daa (bad) hlt and inc mov sbb xchg js or sahf imul xchg loope push lods out cld xchg pop aad or cmp adc repnz pop fstl adc mov pop jl inc sarl cmp (bad) lret (bad) jle lret xorl or int3 push sbb pop or fldenv mov fimull sub in jmp and pop aaa addr16 sbb daa ret int push popl adc mov pop (bad) sub pop or jmp (bad) or les imul inc mov push ret inc cmp jl xor je or mov shl adc add out cmc or mov push cltd dec sahf ljmp in lahf clc mov sbb adcl pop lcall movsl xchg out fistl lea in cwtl pop mov clc or pop ret cmc push sbb (bad) sub ret ljmp adc in or xlat test xchg scas xchg daa or std pop in movhps out jbe out mov int3 movsb or mov imul roll xchg mov (bad) jno wbinvd (bad) shlb enter pop push les aas or bnd xchg cmp sub jns (bad) shrb fistpll fistp jb push ret cmp lods enter inc pushf aam dec rorb sti xor stc fwait leave pop push inc in cwtl out lret aas xor push ja cwtl (bad) jbe push test outsl dec js arpl or pop pushf jmp xchg mov loope ss xchg cmc mov adc mov sbb ljmp mov scas inc push adc cmc mov loop ss cmpsb and add out scas xor mov (bad) jb inc test testb jns outsb lahf cmc add mov add (bad) aaa popa lea test cmpsb or sbb jne add mov sub sub in popa mov lret jmp sub sub dec or jl cmp inc mov jne dec jbe aam cs inc leave aam gs lea addr16 dec leave sbb sarb loope test js mov leave imul or xor insb jle les jne lea or js adc jmp fcmovb rorl or pop push lds (bad) sub lods insb mov rcrl test push orl jbe gs pop aam shlb movsl xor jg iret ljmp (bad) fcompl (bad) or sbb jp movsl add repnz jo lock mov sub dec gs xchg jb testl test mov lock xchg jo mov outsb int3 daa out aam or pop dec test lea or dec mov imul (bad) mov mov xor ja clc imul in ss mov incb mov pop fcmovu pop cmc or sub cltd xor movsl in add cmc sahf sbb or sub shr jno js inc dec in arpl dec cmpsl (bad) addr16 jbe rcll repnz or jae pushf cwtl jb push rorl sbb adc jl xchg stos sub adc lods stos jo sub push outsl decb gs call or pop testb xchg in push hlt lret or push adc sub sbb mov adc add or or push pop shlb paddq imull leave nop push cmp dec cmp aas jmp (bad) or adc (bad) or sti mov scas test jbe pop jmp mov mov in dec les (bad) xor dec in loop add pop jns xchg and jo bound stos add adcl jl in jnp jno mov insl adc jo mov jo adc (bad) cmp fstp cmpsb test aas imull dec aam in push fldcw shl push xchg pop mov repnz pop (bad) int mov jae lock adc mov sahf jle icebp push (bad) mov out inc int scas pusha stos pushf imul or add cmpsb adc sti ret or xchg arpl dec lods fwait mov in mov or jecxz cs (bad) xchg sbb mov daa pushf rcrl ljmp jmp xchg mov pop mov negl add lods es adc mov inc jge add or fidivl cli pop imul or das (bad) sbb sti push fcmovbe cltd mov dec cs outsb ficom enter cmp jp dec sub int or and lret mov dec push pop or xchg addl icebp mov (bad) jle or fnsave or cmpsl push cmpsb push push fxch sbb les int pop mov fcompl pop jl in jg aad or push imul or fldl adc push dec pop xlat js cmc sub dec add repnz ret ds mov jg,pn cmc mov sbb aad fidivr mov (bad) loopne push into push mov sbb push mov pusha in or dec decb out movsb jmp mov or stos mov xchg push addl enter and cmp (bad) (bad) mov loop dec and mov cli cmp push jae inc dec mov add sahf fimull aam mov fdecstp mov cld mov andl (bad) (bad) test inc ljmp repnz (bad) icebp jle and mov js mov mov bound adc cli loope xchg or xchg jbe inc push (bad) and aas fisttp into inc scas fimull (bad) pop xor insl outsl nop inc sbb shl pushl add adc test out inc mov lret enter push or mov jae mov add leave cs mov xlat mov adc orl stc jnp sub icebp inc out and cmp std or loope aad ret or add add imull or xor push sub pop or sub mov fsubp mov jecxz out ljmp pop dec js sbb es int jno out stos out ret lahf sub xchg or enter mov (bad) push outsl push lock leave mov sti push int leave fucom and rclb js push out pusha sahf js push call fs not nop jecxz push mov popa jb outsl sbb sbb imul fs jg test lea dec or sub rcrl cwtl cmp mov mov fiadd scas inc outsb imul xor stc lcall dec (bad) push movsl xchg cmp xor cmp pushf pop leave inc jmp or or add sahf or dec dec test das mov mov leave in xor cmp and xor add lods cmp inc xor sbb lods por dec add jb jno cmp test sbb movsb pop (bad) pop mov aas fldt xor out xchg jecxz jb subl sub clc mulb lods jle mov test stos gs rcrl adc pop out cmp adc (bad) test daa jmp pop or sbb int3 pop hlt fmull inc cmpsl pop mov adc sbb int3 pop or adc jge mov dec jns mov cli ret fiadd dec mov or imul ljmp jne and dec or mov inc push adc pcmpeqb dec sub mov inc jle leave das (bad) hlt mov xchg ss imul or fldenv jg loop jns divb mov pusha sbb sbb stc fimull cld out cs pop loop ljmp jb rorb mov leave aas movsl daa (bad) pop cmp adc dec jbe sbb jecxz ljmp (bad) or repnz or or and xor stos jbe (bad) imul mov dec mov (bad) cwtl pop ss fistl ja push sbb mov jl jb std or lods in inc xor xchg mov pop sbb jge push test sbb fstpl dec roll mov or in mov mov arpl mov sbb shrb push xchg fs sub pop or out and rcr mov or or mov imul pmaxub test cmc add repnz inc cmp mov fsts imul or aam test or shrl push in insb test (bad) fwait push outsb out (bad) mov adc inc xor mov add scas push and ret (bad) or mov inc mov fisubr mov stc add ss out pop or pusha (bad) mov mov or and rol or cmpsl mov ja sti adc out dec out or roll bound mov and fwait and sbb adc cmp sbb arpl mov cmc jmp or insb or fsubp cli sub sub dec or mov mov xchg das fisttp mov nop pop jb inc xor sti mov lods aaa ficompl mov loopne loop cltd bound jl xor daa int out movsb lock ret jge call cmp or cmpb add jbe rcrl lock insl inc mov hlt pop or pop xorb sbb or jmp cwtl sti js adc shl jno movl xor leave fmul negb pushf test subl lret gs (bad) jbe mov dec sub add or test lock imul push jne dec cmpsb loope (bad) hlt popa push xor es test ss dec dec inc add divb add and in out xchg dec ds gs ret outsb jb ret (bad) dec cmp cmp adc cmc mov arpl mov cmp ja jne,pn test xor inc pusha cmpsb enter sti mov and fcompl pop (bad) adc jecxz daa pop imul push leave cmpsl rol sahf aad test lock rclb int3 vunpcklps test aam adc jg in or ret jecxz pop sub or stos jne cmc loop mov pop inc add push scas or (bad) mulb push or mov mov call jne cs ret icebp loopne or cli cmp jmp xchg imull pop mov iret sahf ja dec mov cmp pop test (bad) pop sbb loopne mov popa pop or loop mov lea mov ja or inc xor clc push in or mov dec mov leave push mov jo scas jb out repnz cltd cmp loop into jbe rcrb xor push ja outsl std rorb inc or cmc jg mov push sbb insl pop in (bad) xor inc mov xor jo out mov outsb dec push push mov dec mulb bound cmp mov pushf ljmp sbb cmpl int jbe sbb popa shrl jne cmpsb pop mov xlat aam add dec or (bad) movsb sub inc test fistpl sahf or in and push lea ret adc push aad idivb cmp xorl mov sbb pop or adc inc and iret inc or mov incb stos sti sbb gs or and jge inc decb popf push ret imul push inc js fmul xor pop dec mov ljmp fcmovnu int3 xchg adc cmpsb (bad) int dec (bad) call or mov cltd cmp (bad) push xchg add test and mov fist ret pop cli or out fwait fs test aas in arpl mov pop cmp cmp pop sbb mov lods dec or push jae pusha cmp sub das add rolb (bad) divl hlt lock sub (bad) dec (bad) jns icebp xchg lock pop jo ja dec aas and insb (bad) (bad) test imul mov dec mov es jle cli mov adc int mull push mov and add lock loopne add inc inc xor fwait jle repz call iret jns movsl mov mov dec xor pop js fisubl fldcw mov inc sbb out pop cmc sub fisttpl mov pop (bad) decb int jne js xchg xor ds dec (bad) lcall pop and call adc cmc icebp or mov xor mov push xor ljmp mov or or dec cmp pop or mov cmc out lods sub or add test lret sbb sbb (bad) div xchg adc lods push pop mov and push icebp out inc jecxz pop es testl jnp or (bad) mov mov es dec mov jb repnz xchg ds inc rcrl xchg cmc fdivs jns repnz cltd loope fidivl les or lods bound lds pop sub or inc sbb jae sbb call adc fyl2xp1 cmp or rcl ret xchg inc inc sti sub jae (bad) vmulsd in stos cmp leave mov sbb jp push inc mov or stos jp pusha push xlat or movsb lahf ss push add mov add testl pop dec ret push mov int3 test ss fdivrs or add (bad) rclb xor (bad) stos iret leave pop test rorl movsb fs mov inc xor (bad) or stos sbb push or pop cmp sbb (bad) and mov int3 pop leave lods scas xchg not lea xor push xor fild dec push jb (bad) rcrb repnz inc dec jns mov pop sbb mov dec and or imul or ret add or or ljmp stc fstpt rorl stos fdiv jg push adc cmp bound cmc lods pop mov lock jmp fadd cmpsb jb pop adc js cmp test sub psubsw lret dec push push push cmc dec fmuls or mov sub shrl sbb ret (bad) xchg pop lret mov lret adc dec fwait or mov jnp sub jne sub jae inc or inc sbb popf mov (bad) mov in sub pop insl push cmp sub inc outsl xchg dec jb pop popa xor add mov dec sbb cmp hlt mov cwtl push mov call or aaa rorb push div ret cmpsl lret lret mov jbe fdivrs or pop add nop imul sub loop (bad) or repz sbb sarb (bad) fadds xchg insl mov imul outsl cltd outsl sti sub imul sahf test loope inc xor movsb aas jmp push out or or sbb rcrb nop mul shr or add push inc mov push es jle sub adc sbb lock int3 fwait into or imul ret mov lret out stos cld (bad) sbb movsb stc xchg out or xor mov mov aam mov cmc or or (bad) mov pop adc xor jne mov inc push or divb push hlt sub xchg or xor cmp pop ljmp mov cld sub push dec cmp sub gs inc pop mull or push mov add push ljmp or sub mov mov and in test bound xor idivl inc test or (bad) mov imul test or mov dec ja insb sbb mov (bad) (bad) lret call movsl cli or loopne mov fs or imul insl ficompl movsl (bad) and cmp decl shll imul (bad) inc fwait imull lock repnz (bad) rolb or jnp cmp arpl cmp mov xchg or frstpm(287 push jl sub xor cltd enter pop mov aas and leave or bound negl and and mov lret inc lahf and loop and add dec jecxz stos cmc xchg dec or xchg or inc movsb cmp jns jecxz mov dec mull es mov imul ret aam mov rolb cmp repnz sub push aam xchg scas push lock pop mull sarb sbb mov arpl inc push jnp lea dec mull cmp adc in sahf sbb loope mov push enter ret fldt test mov sbb jmp test popa lcall lea repnz jmp pop (bad) or int3 cmp lock mov lods test in data16 fildll pop insb (bad) xchg xchg and or push dec loope (bad) es inc stos jo mov inc out dec ret or addr16 lds inc or dec jmp xor movaps dec lock int3 or in inc push push jo sub stos push dec mov mov iret fsts popa loopne mov xchg pop out xorl insb sub mov daa or pop cmp cmc push dec mov loope imul outsl push repnz js mov mov pop inc out pop jns adc or jl pop sar call mov popf add xor dec push mov adc cmpsb inc lret jo sbb push ljmp adc out loop push add dec and sbb push in or jns out into push mov dec cmpsl mov dec cmp adc sti sahf test push mov ljmp pop fcom stc add nop daa cmp roll mov test adc (bad) shrl dec push adc aam arpl mov in or stc jle and aam enter jo pusha cmp or lds push fs adc xchg stc jns inc (bad) cli bound idivl test mov popa inc mov mov pop push jge pop cs shll dec aam cmp jge xor lds mov mov push add cmp cmp mov scas outsl insl or stos lock idivl jg sarl imul in div add lahf pushf stos test das out (bad) xor shrl jg in repz shr cmp pop jg or xchg (bad) jae aas fstpl inc sub fist adc insl cmp xor jecxz cli mov subb jbe mov push divb das adc jo or stos test subl ja or movsl sub ret fnstsw pop pop sahf imul or xor sbb sbb sbb mov xchg mov dec bound test fistpl sbb add xchg or ficomp or adc xchg sub cmp inc (bad) loop scas xchg wbinvd out pop out jmp int and xlat in fdivrl add inc cmp scas aam daa out pusha pop dec add adc push lds stc pop sahf push xchg and shrb mov push mov dec jmp or xchg jnp aam jmp jp stos sub fstpl mov mov (bad) mov or mov xchg and cmp inc or fidivrl cld mov lods mov (bad) hlt imul (bad) pop (bad) push or sub icebp inc test out jo inc sub leave mov adc dec inc sbb psubq mov inc sub jbe sahf pop leave or mov or lret imul test xor orb mov or insl movsl call mov inc dec lock test jbe jge mul ss aam adc sbb or or push hlt ds jp add xor or insl pop outsl or sbb addr16 int test xchg pop jmp mov xchg jg inc push stc push ds jp mov inc adc ss inc int3 sahf push (bad) xor sbb lock jae loop rolb or cmp push ret mov enter lock adc or lcall mov lods pop (bad) (bad) or popa in imul (bad) xchg mov (bad) pop test int3 testl inc jae dec mov aaa or cs lret jne scas insl test ds mov or xor shr xlat dec ja mov jno or xchg dec push sub hlt or imul adc repz pop lea add sarb out and into stos pop outsb add incl lret xor decl repnz jmp mov adc sub add or lds dec pop sub gs mov cmp inc scas push in mov lcall outsl or inc cmp jns or jno shr push xor mov fnop mov cmc arpl bound jecxz mov cmp adc and sbb int3 test js xor and inc jo inc cwtl pop out mov jg call pop mov adc sub in lahf jno dec xor or pop lds cmp and and (bad) repnz lcall test pop cmpsb loope scas imul pop pop pop sub into xchg daa popf mov and cs or add dec fwait call notb mov cmc mov mov mov in xor xchg fdivl pop jo stos cmp pop push adc jno lock sub xchg shrb xor out or mov lods cmc cmpsl test enter fisubrl cltd push loop ja or fsubrl rcll out stos push in dec dec mov idiv inc adc adc stos lods sbb jecxz mov outsl sub stos mov mov cmp mov fdivl cmp lock (bad) fnsave aaa pextrw cmp and mov decl ljmp lcall movsb fsubs jmp xor pop mov leave add stc mov jo pop cmp out sbb ret mov ffreep fiaddl jmp arpl mov test add push inc out pop mov call ror out mov mov inc mov push sar lea sbb dec mov adc jmp xchg bound mov (bad) cmpsb call jnp pop and scas and xchg and out or dec mov jmp std je jecxz mov ror mov fs jbe mov in in mov push jecxz jo mov add pop mov pop add xchg (bad) lock daa movsb ljmp popa push mov or scas lahf sub or mov xchg test in push mov dec in or cmp sub fs call cmp repz mov dec es mov (bad) or sbb leave or push cltd stos or fldl mov mov gs cmp mov out arpl lret (bad) aad popf push mov or stos pop add mov dec mov rol nop xorl pop mov cmpsl push push into idivl add xorl push hlt adc sub loop lret test cmp adc in bound rorb cmp lahf ss jle inc icebp pop (bad) dec popa or andl and mov int push xor and test je or repz push mov adcb dec push rcll xor repnz push lret cmpsb jns mov les mov or nop (bad) fadd cmp adc cmp je pop test xor bound push into nop mov xor lods sub es loope cmp mov idiv dec lcall or mov and lock push scas mov sbb mov and dec push push mov enter fnop or jg mov vcvtdq2pd popf or adc test xchg or push lds test rclb clc or call stos or and cld daa fidivrl push dec and jno mov mov sbb and jnp push cmp sub or xor xor mov orl cs lock and fnstsw mov jne xor or lods xlat imul iret add jl inc sbb loope popf fsubr sbb jecxz rcll push (bad) dec divb push mov (bad) sti lret pop mov (bad) dec mov bsr inc sub divl testb mov mov dec push dec outsb enter jnp push pop mov add cmpsl aam lods sub notl mov pop test jmp out cwtl sti mov fs inc add jge leave js pop (bad) icebp sub mov popa adc cmc scas out mov or lahf gs or mull mov push cli mov fisttpl addr16 sahf dec jle movsb hlt rclb dec sub mov fdivs mov or popf notb sbb pop sti lock or mov push loop pop jae out dec cmp mov lds adc (bad) je test and dec adc xor rcr cmp jnp xchg cwtl fs aas pushf fistpll cmp or push add in and daa pop lahf sbb or data16 (bad) inc fsubs pop addr16 fldl scas ljmp push mov xchg pop push adc pop or hlt inc push jbe xchg mov clc xlat (bad) xchg (bad) xchg in std mov ficomp loopne scas adc mov xchg jns fildll decb in mov mov xchg ficomp jecxz mov ss cmp cmp je sub jb mov repnz je nop js movsl das jne fsts dec or dec lret mov iret clc mov xchg nop xchg mov pop call inc sub fcompl or data16 mov lahf fstps dec jbe cwtl jmp dec xor sahf mov cmc subb xor jmp adc jmp add and fbstp inc mov jg clc or sbb cwtl in push call jmp sbbb dec stc jnp mov rorb mov iret jno out sbb mov fcmove lahf mov pop lds rorb lret sub gs or xor sub loop sub pop rsm test (bad) add jnp mov loopne out xchg adc or pop and adc add movsl push mov movsb iret (bad) adc jge imul xchg fistl mov stos std push fdiv mov adc or or inc jg out stc bound sbb add dec add xchg xor sub mov lret cli inc fwait adc out or add std adc jno push mov (bad) sub imul jne or movsl setno jns add repnz rclb insl movsb pop inc mov mov push aaa adc ret (bad) cmp jle in fild imul outsl jb lock jmp test inc mov mov jae sub jl pop aam (bad) mov stc mov adc and fs std cmp add gs popa jne pop dec icebp inc push (bad) or loope js cmp inc ss (bad) sbb mov mov inc rcll and sbb xor (bad) sub cs or or jno and faddl aam out scas dec int3 test in imul add lret jge push or int3 ja outsl dec inc adc nop sti mov fisubl hlt cltd ja or dec imulb das hlt scas adc (bad) call lods ffree sti lcall dec mov test mov mov incb or fwait pop dec mov insl xor add mov xlat negl test xorl setg out pop cwtl stos jno aad dec mov mov leave adc sbb les cmp arpl (bad) jns or xor jbe fstl jbe shl jns dec mov adc cli std xchg jo pop inc cld add arpl out cmp sbb cmp loop cmp xchg sub popa adc out xchg out sbb pusha aaa int ss in in jl cltd mulb add inc pop call inc (bad) call mov stc (bad) adc push mov sbb mov jnp int3 imul xor stc dec je adc aam cmpsl nop jnp ds or add jg push dec cmpsb mov jb leave fistp mov imul jle mov cmpsb xor in push insl fild cmp adc inc pop mov cli mov fs gs push mov aam xor adc cs movsl adc cmpsl adc test jbe mov mov out dec pop ret xchg fs fldcw cmpsl stos in mov sbb pop cmc mov scas insl movsl xor nop fwait or in dec cli mov dec xchg test or dec hlt adc sub cli jne jnp and adc sahf inc add (bad) mov mov jg test lret hlt lret jmp (bad) sbb mov jl aad fs pusha stos pop jbe or pop test leave shrl mov bound aaa lret inc mov fisttpll pop jmp mov xor mov cmp adc pop xchg lcall aaa mov mov xchg (bad) fidivl lea cmp cmc imul in or out pop dec mov sarl sub lods mul or mov and jno cmc cmpsb popa jb stos sbb stc lcall incb add pop imul push adc cli fisubrl pop or addr16 mov push outsl fidivrl stc mov push jecxz rcr out fcmovne mov push cmp movlps jge pop mov sub pop dec or sbb leave sbb lock and dec xor inc add int mov mov pop or lods pop xchg mov xchg and push (bad) ds dec or cmp mov or cmpsb popf pop or imul rcll inc xchg dec push and out sti pop or xor inc push push cmp xorl loop and jecxz out xchg push adc and cmc mov jecxz lods icebp sbb cltd or fnstenv lea mov xor aam cmc scas jo sbb dec or mov add or lds ret lcall (bad) fiadd xchg cmp imul and mov xlat insb or or out in out dec mov jnp test lods xlat (bad) cmpsb (bad) fldcw cmc and lret sbb sub xorl or ret sbb (bad) aad mov addl jns ficoml jb test inc pop outsl loopne push lods or (bad) mov faddl (bad) or cmp lea fnstsw loop mov jno jns int pop cltd jmp pop fmuls sub ja mov out jecxz sub or mov ficompl stos dec mov mov pop movsl xchg cli pop or sbb stc in push out leave call fwait or add (bad) (bad) mov mov cmp mov add ret imul stc mov mov mov mov sub lods dec mov fnop pop lock mov dec loop jno cli mov cmp pop or fwait mov lcall xor loop decb mov and or jns xchg inc (bad) push lods iret ds inc or shlb fs xor popa mov imulb mov aad xor rorb jge neg popf dec fidivr mov jl daa dec mov jbe dec sub and movsb xor xchg hlt (bad) inc cmp in cmp or in jmp push mov or fdivrl icebp movsl insb add cld call mov gs adc xchg sub mov sahf adc fcomp addr16 add xchg js or add adc sti add inc in or fistp jnp sbb or (bad) mov int3 mov jecxz cltd or rcrl mov cmp insb add or in test xor repz (bad) out mov cmp ds push or in (bad) push and dec add bound push cmp lea mov loopne add push (bad) (bad) sub out mov fs bnd jno xchg jb lahf ljmp adc mov pusha aas adc mov fsubrl add add mov fidivl cmpsl mov pop pop idivl mov shr push pop adc mov leave add push repnz jbe std test xor jae push ja leave jne mov or mov ds ss jecxz dec stos jle imul mov mov cmpsb fcompl xchg jecxz fwait es jnp lock inc sub jo mov lods jns xchg mov movsb repz lds mov or not push dec lods int fisttpll imul xor ds inc cwtl dec fimul pop mov icebp rclb stos js lcall cmp xchg ja test scas (bad) inc push dec or insl movsb jle mov push and pop rolb push movsb movsb add and xchg popa loop inc dec ss adc inc or call dec jnp in mov cmpsl cli data16 pop jge loopne,pt out push inc or xor add pop or adcl mov cli js (bad) xor test (bad) out dec aaa lea test rcr or jb sahf mov (bad) icebp scas sbb xchg inc pushf push outsb cltd mov repnz int3 pop xchg bound (bad) pop sbb inc iret inc sub push stos lret pop shlb add mov dec mov sbb jbe iret pop ret inc adc fistpll cs mov lret push hlt (bad) dec dec cmp xor sbb notb lea cs push out jmp push xor lock dec loope test pop out push cmc (bad) fwait pop pop addr16 mov or adc pop test sbbl lock jge jbe das sysenter repz sub int inc mov rorb adc sbb arpl mov or and and loope enter (bad) mov push or push insl or pushf leave mov and pop push stos or cwtl pop or sub dec add pop mov sub or cmp xor fnstcw mov dec dec in pop xchg test sub test mov mov outsb out repz andps das sub (bad) test sbb or cmp xchg mov insl iret pop push or xchg stc xchg int3 push mov jg xor rorl or mov or and pop dec movsl incb in mov mov inc lock and jns int3 idivb add incb mov mov fstpl pop sti in leave pop iret adc or mov cmc mov repnz xchg sub jmp stos jnp ret fisttpll or jge or addr16 inc int push and lods push out sub dec xor pop (bad) dec cmp add out aad imul repz or gs dec or ret or add and enter or or arpl sbb in popa inc or fwait sub fdiv ret lret in aad les xorl lcall (bad) sub push inc xchg jns imulb clc adc add or push rcrl fisttp jg add jmp push icebp mov test popa bound (bad) dec mov push in add mov repz aad add test dec or jge pop outsl sbb cmpsl test or mov (bad) cli and push sbb or fwait or popf dec mov dec dec or jl (bad) (bad) repz iret adc or mov icebp and testb fild in push (bad) adc hlt xor iret or cmp insb enter add jbe adc sbb jg hlt out (bad) js push aas add (bad) sbb out push dec or iret mov fisttpll pushf (bad) xor sbb add mov stc or or lods punpckhwd pop inc sahf inc adcl je out (bad) and jle xchg or js daa icebp and add je in push (bad) and and (bad) std imul or addr16 adc fwait xor daa out adc add xor add test out pop das or imul lds or xor jae repz aas adc mov rcll pavgb xlat jl pop jmp aas lock jbe mov cmp lret leave mov fsubr dec insl divl mov cmp lcall out mov leave lods fisub fstl dec fldenv dec inc mov sahf or (bad) cs movsl cmp sub push out fnsave jbe pop jmp mov mov loop xchg push or jno pop inc std xor mov outsl dec dec sbb or and insb test test sysexit hlt fnsave sahf adc fbstp in jl jp mov cmpsb jge aaa pop dec or lods divl sbb ljmp cmc push jp in sahf cmc push add data16 mov in test in adc sub leave in cli (bad) es cmc sub cld xchg sbb (bad) decb in inc add adc dec fcomps fcoml mov xchg or mov adc mov mov loop (bad) xor sti mov aaa push cmp out inc mov pop fsubs sbb rorb icebp cmp fimul cmpsb xchg xchg mov sbb imulb mov sbb out push push negl add cli or jmp inc adc cltd imul hlt aad outsb pop pop mov leave loope mov int3 ljmp jbe mov xor mov imul or (bad) loopne xchg cmp dec imul out jmp mov std mov xor or data16 aam jecxz bnd outsl push lar fbld lret or repnz out iret push push arpl push ljmp andl and jnp es shlb dec ljmp repnz mov cmp negb cli mov lods pop or out mov stos dec sbb inc rorl (bad) hlt div push (bad) sub loopne mov add cmc in push dec xchg adc mov fcompl xor int mov cmpsl fsubl push loope lods daa jge mov fiaddl push stc push or adc pop lods xchg int sub test bound xchg (bad) push mov dec push rcr std inc xchg or pop icebp adc jge arpl sbb fwait xchg addr16 aad mov sbb (bad) aam push adc inc test (bad) fs pop mov cltd mov repnz mov loope repnz sbb pop push push adc dec xchg mov (bad) out adc sbb aam hlt xchg xchg rorl inc pushl mov idiv push lea cli leave divb dec rcrl and repnz add sub (bad) imull ss mov mov mov test jns mov mov or mov fisub in xlat or aad rolb (bad) adc ds hlt stos lea pop dec add push adc and adc mul sbbb repnz dec sahf push mov cmp add cld jne cmc lret test mov fs adc popf je icebp xorl lock fsub pop mov lea xchg dec xor or out lods imul loop push jg pop aaa call fiaddl in aaa daa mov cmp mov jo outsb mov sub out sbb orl lds and mov sbb stos inc jno push jle dec inc repnz mov out mov insb and inc xor (bad) mov dec imul pop or adc sub adc mov mov dec test aas pusha nop rclb out pop or lock lods hlt sbb loope cld pop fnstcw jo into pop or pop dec jb jne sbb push std adc push push fwait adc inc or xchg cmpsl add hlt jo dec jno and dec mov mov ljmp add mov mov out mov bound mov xchg outsb imul inc adc prefetchwt1 mov test incl je fiaddl xchg fstpt xlat mov lahf leave dec aam xchg fs xchg mov scas push jmp dec sti je cmpsb out insl mov pop dec push insl scas xchg adc mov jp pmullw mov push out pushaw ss pop push mov jns dec loop jns or jo out add sub push push mov or imul js xchg imull jae mov mov mov jne out or test rcr repnz push mov jmp mov adc push or ret sahf dec xchg sahf sub xchg jbe push inc iret aad ljmp jae inc sbb into jno dec pop mov push xor jge cmp test lcall lock bnd cmp jmp repnz ss mov cmc mov mov xor or xor xchg outsl enter sub test xchg xor push scas (bad) repnz data16 out dec push movsb push or lret pop mov cmpsb adc in stos push movsl mov scas insl in mov fdivl push mov cld jmp es lahf sbb push dec sub les mov sahf or inc cmpsb xchg rcrl pop or or push add scas or push dec in test in jge pop adc imulb sti stos xchg or add fisttpll jne inc fsubrl nop jae xlat mov or or adc xlat iret (bad) xchg or (bad) mov jbe pop fcom xchg fsubrl (bad) idivb aas mov (bad) or cmpsb push cltd cwtl leave cltd enter mov pop push and or sbb call or push mov or cmp mov scas popf (bad) or push stos repnz xor mov and or push dec cli movb xchg and notb sub fstpt add cltd mov test out jmp idivb cltd pop hlt lret sub rorl into popf xchg sub and push inc sub sbb or cmp push xlat in fimull (bad) mov fnsave mov fstpt adc (bad) vpmuludq aaa jecxz cli pop shrl imul hlt fimull push inc or mov (bad) dec or decl std xchg iret xor dec lods leave aam insl jp push adc aaa movsb cld mov jb ds and ljmp jl data16 lods mov jb sub scas int3 rcl int3 and mov inc push add xlat dec stos aaa sarl sub inc adc and popf sbb imull jmp (bad) xchg mov nop and add (bad) ljmp pop mov jb mov cmc enter lret dec fstl insl inc outsb enter std or in aaa pop push movsb negl push in imul jo lods mov lods adc adc sub inc fiaddl adc out pop lock movsl cmp jns in fs sahf stos rclb push sbb shrb pop lahf stos std or in xor jne inc mov ljmp fucomp ss sub in sub mov mov add jmp lock sbb xorl jae mov mov and imull pop shll out adc cli movl lds into dec jmp xchg movsb mov mov xchg cltd popa out adc dec std dec push add jo cmc add dec mov or int3 cmp xchg popa (bad) rcll lds xor xchg ljmp ret aaa cmpsb in int3 jne outsl inc (bad) jecxz and jns jne aam fiadd lods mov aam imulb cmc and hlt mov pop xor adc sub mov test mov mov lods lock xchg in jbe add xor mov aaa sti jl jo rorb daa addl js cmpsl loopne jle shrl hlt aad dec or inc sub aam adc xor adc or dec dec mov stos sub scas rcrb rolw add mov not adc lods and mov mov loop cmp movsb jmp or xor lret pop xchg repz je or adc mov xchg int imulb sub or mov sub mov cmp cmp jns testl adc call mov arpl loop xor push sbb jmp lahf xor scas or jmp cmpsb divb xlat push iret ds sbb xor sbb std in imul push xchg pop dec (bad) rclb jae mov jnp popf or das push mov or lods dec mov cmp pop lret mov jb aaa je imul pop (bad) and sti pop and loop test fdiv xchg xor mov jo sbb and inc in sbb je loop or mov stos lcall inc lret sub sar dec xor push xchg aaa lods es push movsl mov fcmovnu jle and ljmp inc leave icebp mov fisttpl out pop cmpsb or sub in pusha test dec mov cmpb (bad) ja pop mov bnd jp cmp add jns in add ror cmp sub dec cmpl gs and addr16 aaa jne insl or mov (bad) jb rcl ret add dec or js mov scas sbb or sbb (bad) sub (bad) cmc dec fiadd pop mov fldl lea sbb pop loope stos das int inc or fbstp nop mov idivl or jl imulb sub mov (bad) dec mov mov (bad) jmp pop rcrl out mov outsl icebp xchg sub cmc adc lcall lahf or sbb mov or movsb aaa jns (bad) rolb xchg pop pop add or gs aad (bad) cwtl or sbb sbb int mov pop fldt cmp in aam adc mov aaa addr16 xor bound sbb add scas add das jg mov (bad) sub fdivp (bad) test gs pslld imul pop sub jnp cwtl insl mov or dec pop (bad) test inc cld or out or xchg lea jnp pop (bad) test es or sub or adc orl xor movsb and and mov or (bad) sbb jne add sub and out and cli or or cwtl lock repnz leave mov xchg data16 mov cmp or xchg or clc inc mov stc mov sbb push or sub cmp jno fst xchg push mulb fisubrl or cmp (bad) imulb dec repnz das movsb (bad) and ja cld (bad) sub cmp or stos jmp mov pop fsubrs or hlt (bad) mov or pop out arpl loopne sahf jns aam inc leave fs in adc data16 (bad) jl out push or mov sbb xchg add cmc dec es out adc int3 pop mov js inc push push push add shlb stc dec cmc mov or leave jecxz or rcl cli adc cmp inc rcrl cs sub leave in xchg out inc cmp jecxz sub push (bad) add decl jnp test push sub sub or dec xor mov das idivl (bad) sub inc xchg dec pop adc or xor inc shr iret xchg (bad) lods movsl dec out inc sub cwtl shrl pop sbb scas push mov or fstpt gs or or and mov mov rolb mov push movsl pop scas cmovge or jno (bad) xchg lods lods cmp and push jecxz jp jno lret (bad) das jmp pop divl mov jbe xchg insb jecxz jo or mov hlt sbb sbb cmpsb push lock aaa xchg mov das adc loopne inc out or addr16 xchg sahf jo aam dec repnz fistpl pop xlat mov test push arpl rorl push add sub fwait popa cmp sub sbb xchg cltd xchg and stc lcall dec movsb test aas xchg dec add inc popa jecxz adc mov insb cmc xchg cs das sub mov movsl xchg arpl cs jp mov cmp cmp aam test stos and adc jbe mov shrl sbb jecxz sub dec pop push shrl call imulb cmp dec push call int mov jle test or lods in sub push mov hlt rolb sub std jg icebp mov sbb sbb xchg fnstenv or mov lock (bad) xor repz mov push xchg outsb add sbb sub punpckhdq xor ljmp (bad) dec clc xchg cs notb cmc dec xchg jno or cltd in repnz cmp mov not iret jne ss bswap repnz or lahf (bad) xchg movl jb push inc or push (bad) push psrld cmp or mov roll fistpl in mov adc cmp in or cwtl push cld jmp sbb mov cmp nop std call sbb or pop sti xlat sub loop mov push sbb mov je scas mul cmp rorb (bad) lock lret jmp adc mov or roll inc push (bad) int3 pop js sub or xor pop and fdiv out (bad) lods imul scas or sub cwtl lcall cmp fbld and add out sbb loopne cmc rclb xchg and imul repnz fnsave std pop cmpsb mov insb xchg loope xlat cli jne lret scas mov insb sbb jno movsl push push add lock pop sbb jl jmp lods fwait notl inc push mov push or push mov push mov cltd mov or bound dec and mov sbb js icebp sbb pop dec xor test xor or imul ror push or cmpsb fs adc in cld sahf dec xor lea dec adc dec shl scas test (bad) xchg xor mov inc or inc jge xor or sbb out mov mov icebp int3 lock adc mov add dec (bad) push and xchg xchg sbb xchg pop adc pop mov scas dec mov jmp mov aaa sub stos (bad) or or sub bound fs or ds loope sarb jne mov movsl jno repnz rclb scas out adc rclb test cmpsl insl inc (bad) xor fisttp pop mov test xor push mov shll (bad) (bad) cmc mov adc sbb jbe xor outsl and lock inc dec enter nop push xor push mov sbb jns inc int3 fdivl setns sbb fstpl jae loope scas divb xor xlat sub repz lods xchg push test cmpb das jle imul or push fldt data16 pop sub and sahf inc out xor lret lock mov mov imul jecxz jg ds (bad) enter inc fs cmp push sub (bad) add aas leave jno cwtl in ja popf leave cli out sbb stc or mov int3 and dec mov add or sti stc call setp scas mov dec rcr (bad) or cmp or pop mov fisubl pop xchg fdivp aam movsb mov or adc sub stc cmp cltd fstpt jae inc jecxz iret dec cmc in (bad) xlat in fwait and push jb mov (bad) add (bad) jecxz jg xor jp or out cmp jbe adc lahf mov into adc adc lock jb jge sub daa fs inc jg cmp adc pushf cmc adc lock push std jecxz rorl mov xchg in xor jp inc lds dec std adc xor in xchg pushl cli scas mov adcl mov jmp pop insl push es std loopne cmp fsubrl pop xchg movsb or fadd imull or xor lock inc daa hlt (bad) jmp fdiv add inc or stos xchg push jbe lock mov icebp stos jle pushf in mov adc pop mov sbb les mov sub adc pop test int3 xchg repz cmp jo jl push jg fsubl and mov mov fsts stos xor into pop rclb stos popa xlat mov mov sub xor xchg xlat (bad) xchg xchg xlat inc mull xor mov adc dec adc xchg xchg jns sub dec push cli (bad) sub dec fnstsw mov xorl mov lret mov cwtl pop (bad) inc lret dec pop in roll mov dec (bad) popa adc add stos jle and insb push lahf sub roll jp xor xor dec addl jae mov cmc jle mov aam imul xchg push fwait pop mov mov ss (bad) into loope push sub mov pop popa xchg icebp xchg mov (bad) push ljmp mov js jg leave pop dec mov or bound cmp fs lock mov sub cmp (bad) cmpsl test repnz push or and push imul insl pop rol dec not (bad) out out push xchg ficoml popa xor aam out add outsl push inc out pop and repz adc ss dec xor insb cwtl iret push xchg mov jge pop mov mov adc shll imulb sbb or cmpsl cmpsb pop (bad) cmp mov xchg mov adc fstpt inc shlb push mov repnz test fmull xor add adc outsl pop cld lea hlt pusha cmp out pushl aam push movsl jb stos std rolb push inc roll adc pop fcmovbe out or mov mov or sbb lret mov dec xchg out mov inc adc add test mov mov sbb repz notb jno gs pop out testb aaa cmp sub aas lahf test leave lock add mov loopne ja test test dec sbb mov repnz and add adc subl or (bad) and mov mov xor add sahf in icebp mov mov stos test popf sbb add xchg stos (bad) and cmp dec incb dec mov or inc lcall loope xor xchg adc lahf rol addl fidivrl bound or xchg sbb jmp in jbe rorl ss test bound lods or inc xor scas pop or loopne mulb mov dec or rcrb xor sti int push or xchg jne or add repnz sub leave xor jle imul sub les mov inc jecxz jmp roll pop jg gs les popa jmp insb dec mov (bad) lret and sbb or push fildl mov (bad) mov fstpl push sub iret mov push outsb cmp mov in pop sbb and mov jbe repz hlt or inc decl jp add lods push push dec mov push jle add dec push or and add or jecxz imul xorb inc testl mov mov cmpsb cli xchg cmp or mov adcb sub adc dec sti (bad) sbb pop imul aaa mov jno rcrb arpl mov (bad) mov or loope shrl je xchg stos jne out frstor jg push or dec pop mov div (bad) std fidivrl push cmp sbb or divl pushf mov sbb xor call and or cmp or or sbb std pop or mov push sub icebp and pop in es pop or xchg scas sahf push or ds nop or das out push hlt and pop rorl in xchg or or jg outsb not adc mov mov or call dec mov fildll fstpt inc dec aaa ficom popa sbb mov jns mov or repz fwait cmp cli add aas in clc in pop arpl pop mov pop fimull xor xlat xchg sub pushf push lea (bad) int push es call mov ja out mov stos dec or hlt outsl sbb rorl ds je or or gs xchg subl hlt add dec lods or das (bad) mov mov xchg ss cli push gs pop mov ficom push or pop sbb jno inc stc mov (bad) push cli sbb das push and es (bad) jb sub outsl mov xor or pop lods bound or imul sub dec hlt test mov je jae fwait ja mov in data16 leave jg add xchg pop jae repz hlt jg xor cmp jnp (bad) fisub notl stos lock shrb cmpsl fcoml pop xlat dec dec mov leave lock insl stos ss xchg stc sbb adc mov lret ljmp lods mov sub hlt push shrl in adc jns leave xchg lock in lods dec (bad) fnstenv dec (bad) addr16 leave (bad) jle movsb add sub sbb in adc roll bnd sbb lock sbbb adc push scas or jg (bad) lret dec loope and and roll xor adc push mov adc fwait repnz stc daa inc xchg lods or jo,pt test decb scas rorl dec fsubl adc aam push sub jp push lahf dec pop sub jbe (bad) jbe jg inc mov fimul adc inc adc xchg int pusha ss mov or out adc fistl test inc and xor jmp repz cs mov cmp rcll add repz jbe cmp pop pop (bad) stc adc ret test lods in popa js aad fcomi repz pushl insl into add jno sub inc or icebp jmp mov stc jno adc cmp lea xor pop push pop sbb mov fldln2 xchg jle pop lcall cmp xchg add xchg mov mov and push aad mov repnz (bad) or scas cs or inc push lret sbb cmp push (bad) imul popf insl aaa es pop adc inc pushf mov lahf or or lea popf xorl or cli out mov (bad) mov or daa pop out leave or enter (bad) mov jns cltd aad lods fdivp divb xchg dec leave pop cmp iret or sahf lods test dec push adc and mov das mov dec adc or or cmpsl xor sub cmp repz cmp lods leave push lods add dec test repz or pop js or ficompl or or pop je or sub pop and lods shll insb cmpsb enter pop (bad) or or int mov ret dec (bad) pop mov or push add outsb lcall pop lock or loop jp mov cmpsl sub stc mov cld or or dec push and xor cmp cmp je or insl pop lods jnp test stos sub loope jno jbe sub test es inc mov xor push or inc mov pop test xor mov notb mov movsl pusha jae in mov add repnz dec scas dec imul test mov push inc (bad) in xchg insl subl sub insl mov pop dec inc or mov or and je inc ret xor lock ljmp sti hlt insl inc call and jle mov xor jmp sub or insb cmpsl add mov aad push pop repz mov movsl (bad) or in dec jmp test hlt pop call pop fmul and js movsl lahf fcompl and xor cmp (bad) pop pmaxub pop in iret aad icebp add cmc and or adc cld or add in sti mov dec dec mov inc insl or cmp fwait ss push mov or sti int3 or pop xchg or orl xor hlt fidivr inc (bad) xor and jmp stos call xchg add lret fsqrt xor sbb add icebp mov out test in dec insb cmp pop es xor push pop test mov mov cmc mov xor mov mov or (bad) push or inc sbb pop cs or ljmp or je call aam cltd lds test add fisubrl or fdivl add cmp or jae and out mov (bad) sbb and aaa or pop inc jns repz ds adc (bad) xor loop icebp fmulp xlat sub cmp loope pop mov (bad) or push adc mov call test pop or rorl mov or add loop mov idivl js test pop xchg dec mov push or imul add mov fs dec ja pop dec sbb cmp in les (bad) or stos xchg scas hlt pop mov jne test outsl pop clc cmp push adc mov frstpm(287 jg lret daa or ds rolb outsl mov popa je pop sub repnz lea jge (bad) mov lods xlat cltd fwait mov out decl or xchg mov pop xchg inc fs dec mov add dec imul xchg loope add aas and shll das out lods outsl aam sub andl (bad) aam and push fidivrl add push jl cli adc scas into adc roll fisttpll lcall out lock fwait in or inc (bad) das cltd sbb outsb (bad) sub mov test jnp std (bad) mov scas xchg inc mov iret adc or mov push bound dec in into jbe sbb shrl sti imul pop xchg inc or push mov sub sti es push test mov scas ljmp cwtl imul and and sub imul stc or cmpsb sub iret mov or mov or adc push out into push popf sarl adc or pop rorl loope xchg xlat or scas mov mov dec adc js or fcomip mov cmp sbb mov mov pop call movsb add mov iret dec popa test stos popf push rorb cmpsl mov add lahf loopne lcall fldenv dec push xor xor xchg jo lahf jb jmp adc sbb js loope pop sbb mov jno jne jns push mov xchg dec jo stos xor jle (bad) adc js (bad) (bad) jo cli insl dec nop js add inc inc adc test xchg pop push inc hlt ja jae mov out arpl je sub loop cli jns cli adc mov dec cs std in cltd xor sub or cmp aam pop aaa fsubrl out fcomp cli ja mov mov sub push int3 test xchg enter jbe cmp nop out dec sub mov les xor aad repz mov lds adc or aas jmp ss repnz push mov push inc xchg xchg pop int3 mov into push (bad) out add mov sub mov fsts xchg or fbld and jns sbb out xchg fwait pop inc lahf or mov jnp sbb dec push cli xor negl (bad) push sub aam mov or dec (bad) hlt insl sub into cmc mov dec dec mov cs sub inc xor sbb faddl mov mov mov fstp out or fmull in mov xor in fisubr popf xchg dec sub or test fdivrs pop jns push mov pop dec sbb test or or pop (bad) hlt inc jle outsb pop push or mov out xchg pop fidivr in xor xor mov rcll (bad) fidivrl mov fnstenv xchg fsin mov pushf sti cmc int dec dec (bad) adc sbb pop push iret stos pop jnp xchg xchg xor xchg jo icebp lret xor pusha dec mov mov jne mov adc icebp scas xchg in xchg cmpsl jmp into adc mov popa (bad) xchg aaa popf nop xchg jo xor dec (bad) imul sbb mov rcll sub pop cmpsb stc int imul scas adc sub andb jo lods and xor pop push insb mov lea xlat (bad) je adc cmpl xchg cmpsb pop sbb adc pop aaa (bad) mov fdivs adc xchg mov adc js lods mov pop dec xor sbb clc pop sbb int3 addr16 aam pushf mov mov pop scas or adc out cli mov movsl outsl mov pushf cld cmpsl xchg cli cwtl mov fwait dec and test jne xlat jge mov data16 das cmp int3 mov cmpsb loop add push dec pop jnp bound nop sbb in inc mov xor push or jle add loop scas popf (bad) dec cmpsl jb imul jmp or fs inc jb cmp sbb sbb out mov sub sub addl stos jno or push rclb mov lds mull or mov lahf movsl fs in ja je or or xlat and jo cmp xchg in push repz clc xor push mov xor mov inc adc fnstcw popa arpl sti jmp inc sbb add mov jno sbb add and (bad) in dec dec sahf out xorl fstps insl pop cli lret cmpsl push sub or lcall out loope mov movsb mov das je pop pushf jb jne dec cmp fisttpll xor push xchg sub insb fwait mov xorb mov adc dec pop ret clc pop js call mov fimull xchg iret into in lahf adc pushw mov fwait test adcb test imull inc adc adc stos add dec lock sub rcl xor inc ds add dec jmp cmp jecxz in orb xor sub scas xchg sbb movsb cmp dec dec in fisttpl jns rcrb int3 out mov icebp jbe adc dec pop and lret leave sub adc (bad) (bad) inc push push cwtl add jmp out arpl hlt (bad) jae dec leave or sub inc or fwait mov jb mov cmp dec sti or cs fmuls ljmp cmpl in insb cmp aam adc push or jnp hlt mov rcrb sarl mov sahf push adcl js test sub push push cmc (bad) jbe mov xchg leave cltd sti popf or adc negl or pop movsb divl (bad) mov ja xor loope rorl push or xchg sbb arpl pop data16 dec rolb shrl dec mov pop lds ja push aad or pop add push outsl sbb xchg or or cmp jmp mov or mov lea sub fistpll sbb add mov dec (bad) or inc cltd cmc mov or and push dec push xor xor clc out or push and shufps lret mov mov dec (bad) jae mov flds ljmp test test dec mov add rorb xor mov cmp dec aam arpl inc add jne dec dec loop mov or dec mov iret mov aam subl mov jecxz push mov loopne jns push dec adc sub mov jns jmp lret sarb sub dec mov cmp or jnp aad aas add rcr xchg cmpl jmp xchg stos mov cwtl lea fwait hlt popaw xor jle jmp lds xchg rcrl push pop mov mov pushf aaa aad insb pop xchg mul xor dec dec xor js (bad) dec ja daa rorl or mov out sbb or sarl xchg mov push insl dec insb push cli pop jne xchg push out mov frstor or add ret lods enter imul ss sbb xor jecxz test mov inc cmpsl insb cmpsl jno stc jl mov iret ret insl inc mov mov mov cmc inc out movsb pop inc mov adc outsl sbb arpl div scas jle push aaa scas imul cs mov adc rcrb xor xor movsb bound dec push mulb and clc aam lret ds (bad) lods fldenv in cmp movsb jns aaa xchg or enter cwtl adc stc inc and dec xchg mov jne push dec rcrb in sahf int3 stos sbb stos push xor dec (bad) mov jo out dec jne mov mov mov (bad) jmp loop adc negb pop and jecxz mov leave ret les out lret pop mov xor mov aaa cltd iret cmp out pop or and imul sbb stos add fisttpl xchg idiv test fiaddl notl jne mov addl push test adcb mov inc addr16 adc outsb sbb dec pop in jle and mov aaa and imull (bad) dec or and test jmp mov roll out cld arpl xor and fwait add mov jns mov pop lock mov aad sub cmp or fstpl cmp inc (bad) divb add ljmp movsl or sbb or into aas sub loop push dec jnp jg loope jne fucomip jmp leave inc jb mov push push adc or test pusha das cmp lahf imul pushf sub lods ja jp cmp dec arpl dec jmp dec ja xchg and insb pop inc xor push or pop dec stos int lods lds lcall inc or sbbl dec sub xchg xchg dec dec mov sbb dec cmp inc fisttpll data16 int call mov incl daa cmp or into or loopne push int ret shll cld or js cwtl or hlt mov pop in push pop pop push aam sub cmp cmc cmc xchg lret pop inc dec mov test daa mov fldenv test mov fildll pop pop cmc lcall fldenv mov adc xorb cmpsl lods adc or mov push mov lock mov adc cmp cs push xor je adc negb cmpsb repnz cmp clc js or mov jae mov cmpsl ret imul sub pop push and sub cli mov or or leave shlb xor push add comiss mov cltd cli lea jmp sbb and roll sub jmp test orl push out sub (bad) bnd call ret xorl (bad) jl or mov cmp inc cmp cld or lds int xchg dec sub add jne pop (bad) imulb xor or popa xlat or aad xchg (bad) fldt sti outsl cmpsl stos enter pop aaa adc test jno outsb cmp repnz pusha sti or out cli lcall or adc pop orl add xchg or mov negb or (bad) int3 or in and add daa dec jmp lret btr mov addr16 scas je mov (bad) or mov addr16 icebp or outsb pop pop xchg sub push xlat mov inc xchg repz rol xor out js sbb loop dec divb (bad) xor stos in imul mov ds (bad) mov das pop notb ljmp push (bad) ss inc cmp addr16 fsubr cmp or pushf cmp mov adcl or repz mov mov arpl fsubrl add lret cmc dec lea ja pushf leave stos adc fnstenv mov loope push xchg or mov adc mov inc xor repnz loop lock and icebp xchg mov adc jg xchg add xlat and aaa push adc int rol mov adc lds lret or cmp repnz es ja cmp or push mov push inc add cli pop lea iret imul xlat or and enter jl push js dec dec mov push jb adc fcompl add dec cmp leave jns lock (bad) mov jp mov clc ret stos jmp or cmp mov mov cli pop lds mov popa mov adc in adc add leave lock stc test push ss mov lcall movsl push add sbb jnp ret cmc jns data16 pop movsl scas fwait mov jle loopne sbb jecxz push fstp insl xchg lock rolb bound xor push add push or popf (bad) in icebp movsl adc int3 jb xor stos imul adc fcmove xor int3 shlb scas les adc ljmp jno mov xchg cmpsb mov sub jnp jno mov rcl sbb loope repz push mov pop mov cmc sar jle push sbb ret out insl push ret daa pop inc out mov adc xlat out pop jle mov push mov xchg and mov adc push jae shl adc (bad) jbe in pushl shrl cmc xchg ljmp xor dec ja std adc lds dec dec mov mov adc pop push lea iret insl jns bound fnstcw dec dec jbe xchg fwait pop mov popf movsb push shll stos jo pop or mov lds pop and aam xor es xchg pop (bad) push adc cmp outsl sbb jne and xchg cs dec dec aad or xchg out adc xor xchg std je push popa push xor mov sbb sbb mov add mov out mov jl push leave ja (bad) int mov (bad) les adc loop lea and dec sbb imul (bad) out dec inc mov push mov addr16 jno lret addr16 pop movsb pop or push inc popaw push xchg inc iret dec jne inc outsb push aas add or mov mov out and pushf (bad) scas mov cmp roll scas mov insl nop (bad) (bad) push mov xorl dec or js pop pop je or push insb xlat or enter jb in int mov jnp sarb pop test enter clc push push and outsl aam mov xor xor and sub xchg fs negl mov sbb scas jmp mov or sbb mov in push stos add fnstcw mov sub push into jns inc mov rcrb dec imul fcoml mov imul cmpsb or out mov in dec mov sub fptan fwait xor pop orl mov lahf adc loopne roll inc (bad) mov cmpsl inc mov sbb adc mov mov das mov xchg dec or inc ss cld jmp bound mov fisttp or mov pop fimul js movsb int (bad) int dec mov and and xchg or pop fbld stc jnp subps jl (bad) fistpl loop pop or xchg aaa fldl repnz and add add (bad) cli adc pop push sub (bad) or les cmpl jns lea or inc xchg push or xor mov lret (bad) clc dec leave inc jno or jbe imull inc mov popf out sti ljmp rclb mov mov sbb sti mov stos push or clc daa dec sub jb jae jno or dec lret mov or (bad) lret (bad) out sbb test icebp mov push loope mov pop ds add sbb mov pop xor or cmp ret daa mov (bad) into mov (bad) lock iret jp,pn leave int3 inc aaa mov xrelease push pop or and push cmp sbb je dec sbb mov dec repz loop ss or rorl cmp test fldl lcall mov dec fdivs adc mov jnp andl daa cmp or cmp out sar xchg or jge (bad) in and or fild adc mov or jmp js aas jmp (bad) cmc adc mov pop sbb pop dec jl aas incl decb push sahf hlt enter pop lock bound out mov rorb aad mov sub lock inc xchg push sbbl cmc pop jp imul mull push mov sub or push inc sub cmp ja addr16 into mov mov adc loope insl pop insl (bad) mov mov adc aas lahf mov jl lahf pop fiaddl mov imul rolb insl arpl dec xor or leave push popf dec add push add pcmpeqw sbb jl xchg or (bad) (bad) ljmp inc and (bad) mov adcl xor in (bad) pop cmp jmp cmpsb sbb dec int or neg in popf stos fisttpl sub stos adcl jns or test add dec sbb push nop sar fucom jmp cwtl cmp repnz or or adc xchg out push cmpsl or xor and dec mov clc (bad) (bad) paddd inc or mov ljmp test call mov dec or mov sbb push and mov mov or and adc in push jne or push cmc out jo (bad) xchg (bad) lahf aaa or sub add or lret mov pushf decl add leave push addr16 or sarb scas or push sub cmc outsl fnop jl pop sbb mov push push sub and xchg or sub or push lods in out dec call dec test inc mov cmp out add mov and fild cmp adc leave jle push repnz xchg mov mov push sub test std mov push or int xor in jmp stos rorb mov movsl into insl mov adc adc loop cli femms pop fsubr mov push adc mov pop adc inc or and xchg insl adc push sbb push stos addb adc jle std dec or xchg in push mov sub dec movsl decl or fild lock sar add inc mov leave or pop mov out ja int cld sahf nop xchg jbe dec dec lea cmpsb or dec aad cmc outsl pop in mov mov push lods pop dec xchg pop or mov or pcmpeqb dec in xchg xrelease aad rorb push or out ficom or pop fucompp or or loop pop mov jbe subl mov movsb stos xlat jecxz push or pushl or mov loop cmp popa and iret mov test jno jmp xor dec push movsb pop jecxz icebp inc daa ljmp jb lock jb inc adc push fistpl pop pop or xchg loopne xchg mov addl pop fadds jl loop mov mov je ret jno pop or pop xor dec (bad) sbb or scas pushf ljmp scas mov push or iret call inc jl aaa inc rcll je aad sub repnz pop mov insb sbb cmc sbb cltd push adc scas push mov rorb dec mull xlat lods sub pop pop test xchg frstor mov xor dec pop out lret orb (bad) xor insb xlat mov sti test push aam iret mov sub call aas sub push sbb in (bad) (bad) movsb mov pop pop or cmpsl push and sbb or xor and int3 adc mov fldcw add mov data16 into sarl or movsb xchg orb xchg fcmovu lods lahf aad or cmc or stos loopne lret mov or (bad) mov or mov lock mov jmp scas subl lret and insl dec sub dec or xchg adc (bad) icebp lods xor sub and scas mov js popa mov addr16 pop mov push fnop pop cmpsb adc test sbb icebp jg or and out sub mov pop jmp dec add neg adc jne out mov out or lret hlt popa cs jl bound movsl into adc in (bad) inc mov aam jns addr16 jge outsl rolb insl xchg scas jmp rol movsb xor mov mov stos pop xchg jae xchg pop hlt imul add mov dec fdecstp movsl jp dec mov fcoms jge push into mov les test add bound inc pop pop out aaa js notb loopne cwtl sbb imul mov dec pop xor jo loop stc sub insl (bad) adc (bad) xchg movb loope int test cmp repnz dec ja cmc stc sbb in and icebp leave inc push outsl cltd test cmc push cwtl das pushf in insl jo mov mov mov push jmp add out adc repz aam ror push pop ljmp adc cmpl sbb lea xor jo or xor lret adc fisttpll jl sbb jbe lds jecxz sub idivb xor pop test cmp adc and xchg sahf fsubs jno inc jecxz mov std sti inc mov lds idiv xchg mov push dec jmp pop xor movsb out cmp (bad) xchg xor jne cmp push xchg jo add scas bound sbb jl pop add pop stc and xor notl js pop cli data16 cmpsb mov or pop xchg adc adc lcall dec das jb add fdivs mov mov mov mov icebp cmp shrl loop and xchg mov add mov (bad) inc (bad) in dec popa lock insl or rcrl and dec pop xlat mov ss ljmp dec shrl add push data16 dec jl je loope jmp or lds mov test ret fdivl aad fwait out leave mov pop mov mov icebp std adc fmull push pushf clc mov cmp lret loop push mov out or sub push or decb (bad) pop (bad) popf sbb test pop and popf xor cmpsl cmp or int ret lock and ret mov sbb adc add mov jge sub shlb shl sahf stc inc or shl mov ss or mov mov jl pop or mulb aad sbbl mov iret or or or add mov cmp inc aas orl mov mov or cmpsb xchg test int or or fidiv mov cli mov subl push (bad) or lods popa ret imul ret and or mov inc xor inc cmp jns sbb or lods sub jb mov sub or shl adc adc fimul xlat xchg insl or pusha cld cmp bnd jbe cltd clc pop testb xchg adc out mov dec jmp shl xadd jne pop lods and jmp mov sahf dec cmp add or test in dec repz push not or and sbb push dec and repnz sti pushf (bad) mov mov dec sarl jg lret addl mov cmc sub pusha sbb mov xor cs ss add adc dec outsl and or ficompl cmpl sub xor not sbb jae xchg adc mov sbb repz jecxz and loope xor andb mov cmpsb rorb movsl mov jecxz adc mov leave jae xor test mov mov sbb iret mov dec negl into js jl lds outsb mov sub cltd sub popf cmp fs iret and movsl xor or test mov notl aas setae (bad) dec mov insl in stos lcall adc aas fsubl inc mov sub gs push mov cld imul mov (bad) lods imul out cmc xor xchg fwait push les out push mov mov rolb or pop fisubl scas iret adc or icebp stc popf shrb leave out xchg or dec divl add aam adc lock daa ds std adc or addr16 imulb dec mov pop push push and mov out and loop sbb mov jae idiv jns adc pop out flds aad mov in test (bad) jl or jno fldenv mov or cmp jp lods jl repz xchg jmp cmp fnsave pushf add dec cmp flds adc mov pop pop sahf xchg les sti mov dec mov mov xor lcall movsb adc les mov lds int sti aam jae (bad) mov pop push jno movsb in jns int3 ret movsl aam loopne pop out lahf mov outsl push arpl mov loop loope stc cmc in jb fnstcw inc adc mov mov jl mov and xchg stos idivb xorb sub xlat adc mov mov arpl sub insl sbb es sarb mov shr sub mov out (bad) aaa sub dec or movsb jecxz mov ret or in notb int3 enter dec add or jo adc fimull mov js bnd adc or fs and cld mov xchg mov lods push mov xor add js jp jb or stc xchg (bad) push add add jno and sbb into je mov popf lea data16 inc inc jecxz jo int icebp xor icebp or pusha xor and mov call mov cltd mov or jbe or push imul popa bound sbb xor and repnz aad jge jmp sbb and test std or pusha push bound pop xor mov xor and mov mov in xlat outsb test (bad) mov jns ljmp repz xchg or or adc xor inc mov xchg or es adc aam and sub sbb into aad and fimul xchg jecxz lds cld dec xchg pop test pop and xchg aas mov rclb and lods dec enter mov imul push push mov adc mov pop or lods mov jg data16 fiaddl sub mov mov ja scas (bad) scas popf and xchg cmp jmp mov mov sbb pop xchg or or cs cmpsb jg inc (bad) (bad) out push push add mov or (bad) jae sub add lods cmp xlat push mov test push adc fisttpl pop inc adc cmp sbb gs arpl cmp adc je das (bad) in or aam out test movsl or pop or pushl pushf flds xchg mov push xchg cmp ja into add xchg mov cmpsb std and aaa int mov scas ss gs or cltd mov sub cli psubusw or push sbb or in push call or scas std mov cmp insb test fnstcw sub mov enter cmp pop inc add jl jnp pop aaa in mov mov js daa mov sbb ret mov jae hlt mulb cwtl test aaa mov jecxz sub or push fcmovnu inc ror mov js xor adc or cmpsb push pop lock insb sub fidiv add jns shll dec xlat push mov leave sbb or xor or sub and push or push cmp es mov pop aam sub mov lea stos jp sahf or mov imull dec sbb fdivrs jbe dec cmp mov add mov (bad) adc or dec lret fstpt in rcrb testl or rorl mov dec cwtl movsb inc mov inc fwait cltd mov dec leave (bad) in or icebp fisttp popa mov lret or cltd arpl or sbb imul mov lock lahf push jne mov or pop add and roll (bad) jb mov mov xchg sub lea push adc js incb adc ficompl sub mov jae dec dec dec scas cmp mov jecxz out fwait repz jnp sbb ret jmp or xchg jbe and or dec or or fstpl mov or and sub faddl mov cli sbb clc out dec rcrb add (bad) jo inc loope mov and cmc scas (bad) cltd std rcr adc mov adc xor adc sub (bad) or (bad) sbb fdivl mov addr16 sbb stos inc sar lds jno jns sbb aam or loop andl adc or add jge cli lcall xchg cltd adc xchg ret test push dec imull int cmc pop sbb mov mov and push sbb xor call inc inc jecxz sahf movsl dec dec inc push mov sbb test in test dec sub or pushf sub jb insb inc test sbb mov sub dec insl divl sbb (bad) outsb dec add aaa xor int3 pusha or repnz or imul inc add mov xorl or inc bnd in push out les sbb jne or push aam or repnz bnd or xor jne xor out (bad) and sub and sbb push test jbe or cmp mov ret pop es imul sub mov and aas jmp fwait dec in pop inc aam test rcll dec xor pop xchg mov movsb pop jmp out jle pop jle xor fcmovnbe inc add mov inc xor cltd (bad) leave dec test pop adc pop test fcoml adc dec aam inc push imulb inc or xchg add mov xorb mov scas sub or leave daa jb cmc or popa jle or pop icebp ss xor add in shl sub loope jp push or mov inc jle add and lcall push idivb test push outsl push jae inc xchg cmp cs imul lock sub pop cli scas jno xor negb icebp (bad) arpl and jb iret aad cltd or hlt lret xchg lods pop call sbb and adc mov gs xchg in xchg jmp mov jle fld mov mov testl aad add jno into mov sbb rorl jnp (bad) out loop loop xchg orl int jp or popf in cmp push into add adc or je ljmp sbb arpl leave xchg repnz xor shrb adc xlat mov push shrl and jp dec xchg sti fstpt dec rcr add es jne lods push or dec fsubrl jbe cld fsubs lock xor jno add test or aad aaa int and into daa rorb dec jne lock mov xor lock sarl out nop inc cltd ds lds pushf jge mull jns add mov (bad) aaa test and mov push or jne lea pop dec or jno iret sbb paddusb push mov (bad) or js in cmp mov jge cmp sar and dec push dec jle lret push or js rcrb out mov xchg mov inc add imul jecxz outsl ss roll iret insb enter sbb and cli repnz imul jnp sub jp jle repnz insb dec daa gs dec jecxz jo in dec push mov dec dec aas sub cltd pop in xor leave sbb insb jb jns fmul jle mov dec or popf mov lock or push pushf sbb (bad) rcll mov vmovq xlat push leave dec mov lock xchg jl jnp mov pop xor pop sti pop test fcoms in or pop dec adc adc dec or bound movsb adc pop cmp das (bad) or sub jmp enter lcall repz sub and (bad) data16 add repz inc jecxz cltd mov mov push (bad) pop push frstor inc repnz in push insb stc enter in cmpsb jns lds mov ljmp insb stc iret std enter mov sub pop nop pusha sti and int3 or pop adc roll arpl jns cmp jns cmp add stos add or pop sbb or cltd stos sahf repz out scas xchg pop mov push adc push lods xor xchg inc add jmp nop mov dec mov push int3 lret or lock push mov xor adc enter ljmp stos (bad) cmc jecxz or sub pop stos ja sub mov jnp pop mov inc cmc adc pushf rorb push and js jp add xor mov jmp add inc mov lret xlat add add popa addr16 stc adc in xchg stos movsl jno inc add cli (bad) lock pop inc cmpl bound xchg mov test jbe lret out loop add sbb mov jb insl dec mov fldt test pop cmc fs pop test xor scas test push sbb rcrl adc lods arpl jmp and sub pop insb (bad) loope cmc mov jle aam pop xlat cmpl into cmpsb mov shll lret aas icebp xchg push lock mov leave inc dec lea sub pop adc cs jns js (bad) je dec jns add adc jnp adc mov xor aam popa or mov sti xlat pushf setno bound aam scas addr16 mov push dec stos inc sub jg mov movsb iret push cmc lds and inc std imul js icebp add fstl add movsb adc mov xlat call fiaddl out shrb ljmp xor adc inc mov cmc std cli jbe aam inc out sbb out jns mov ljmp cli gs push sbb test data16 not jg mov pusha jns cmc and (bad) cli es adc test sbb add loope shll xchg (bad) mov dec inc sub inc out push pop nop addr16 fimul mov cwtl dec and xchg test repnz arpl stos call mov inc dec movsl hlt push aaa jmp xor sbb sub or push mov or std aam sti xchg sbb ds mov rorb loope mov das sub sbb call or jo bound adc outsl cmpsl push cmp out lods pop cmp or in test fwait push movsb xor adc cmp xchg loop lods mov popf dec out adc cmp fisttp or jns inc sbb adc pop out cld enter ret daa add fidivl dec cmpsl test add movsb (bad) stc pop sti mov repnz je in cltd ds cmpsb add out jmp test inc xchg mov adc fcomip insb push (bad) or stc cli and loope (bad) jmp or sbb in add jecxz xchg push push and mov imul in dec xchg sub repnz into dec dec jl out lcall pop stc popa std js ss lods or push dec incl or aad out dec add inc es xor dec imul (bad) jae adc pop pop sbb sub sub mov int mov adcb pop sti in mov call dec xor mov (bad) ljmp mov and or lcall andb xor psubsb addr16 mov push cmp and xlat sub in mov or (bad) rcll icebp sbb xchg dec stc sti mov adcl or stos dec bound adcl xlat sbbl imul daa mov adc cmp or lret mov and sub out mov in lods insb jle faddp jb inc jl in or push incb push mov mov test ja call push or fstpt push xor or leave jmp or sarb sub fwait cmpsl ret leave movsl stc scas or mov ss fistpl lds xchg aam inc in leave out stos jmp xor pop or lock out mov sub sbb cmp sbbl jbe cmp addb sbb test scas or lcall or call cmc lea mov add stos bound inc lahf mov xchg and fildl jmp jne clc mov jg mov pop mov dec ficoml or std test fisttpll addr16 or (bad) lea adc add lahf test arpl hlt push loop in inc sar (bad) jmp into mov dec jge sbb jge nop push cltd fwait push xchg jno or inc and push int3 leave add cltd push jl or jnp mov and int movsl mov lods dec in pop or lds or cmp mov fidivr or insl jbe test scas and test pop mov jns dec pop ss mov or ja test lret mov xlat or xchg mov lret (bad) fidivrl jp imul xor ret jb add mov adc fs jns or mov sbb mov push int rclb mov popa pop fimull or dec cmp fimul jmp mov ja fdivrl outsb (bad) sub sti dec jmp lret pop mov mov imul adcl cmp sub or jl push sbb adc test mov adc fwait or (bad) mov jb xlat and loop add pop cmp dec cmp or out insl fsubrp jns push jle cli xor jge mov sbb hlt jl xchg add inc wrmsr ror mov jae inc shr or jne pop dec adc and lds mov dec xchg js lcall mov cmc scas cwtl out pop popa shrb fisubl (bad) inc push xchg xchg iret arpl out add lods jg xchg jp aaa insb mov test lods (bad) or (bad) es insl lods pop lock add lahf movsl mov cli fiaddl pop adc incl dec dec dec fimul or mov mov inc or out leave lret mov dec mov stos ljmp xor sbb in push in adc jo int jo cmc stc add xchg (bad) out or bound scas aaa pop stos fsubrl lea fmull (bad) lds dec push inc repnz mov mov mov jl (bad) xor jno dec (bad) pop jg dec test pop pop aaa cld dec xchg jne test mov dec mov and push adc add mov je mov aad (bad) push lods jle mov mov arpl sub xor lret mov sbb jns test popa lret add mov pop ds in or (bad) int outsb (bad) hlt sti or stos push sub out mov or xchg scas test xor jl fwait xchg pop or add lret xor ljmp fimull fsts pop stos jb push lea hlt jg jge dec xor out insb fcmovne push mov pop jp cmp pop mov fdivl lock cwtl adc cmp lods adc test mov jne jbe cmc gs js mov in jl dec inc pop add jmp lods dec leave adc in insb mov insl movsb adc pop push dec sub repz das xor adc insl jle pop (bad) cmpsl std hlt xchg jp int3 jmp movsb jo fwait mov popf add cwtl dec repz ss fbld add leave iret mov popf stos rorl (bad) movsb inc mov fadds out test pop daa into in scas xor add (bad) lock cltd sti orl push xchg test sahf xchg sub je int3 in scas je dec daa (bad) xor jnp adc mov shll int3 mov or mov jmp leave popf or add mov out or dec push cmp jp sub popa idivb or dec pop inc (bad) mov mov enter adc lret cmp mov jns xchg xor mov std in hlt inc cmp dec dec in fisubrl add enter dec mov mov jne pop jb out rcr notl in or xchg inc mov imul negb or (bad) jbe push mov add push push call push and aad mul push cmp or jbe rorl jecxz mov push cmp nop and rcl call add daa pop sub aam lcall or gs dec cwtl or xor nop cltd je outsl iret or push cltd push jne push dec or pop test adcb dec mov or mov mov sub das lret cmp xor mov push and pop adc aam mov adc sbb push int jbe push and fisubr ljmp inc aad jo mov sub cmc or mov aad jmp jbe or out lcall pop insl push add add or push sbb lock sti sub pop daa add in pop scas cmp mov lds lret scas test xor std call xor leave imull sbb pop cmpl pop out or dec (bad) cmc inc rcll mov mov pusha pop pop or jg pushf ja xorl nop ds cltd lret mov mov mov repz (bad) or add or xor movsl mov out (bad) nop jecxz out xchg jmp cmp (bad) (bad) test lods mov pusha das add dec jne lock mov cli fldl2t nop inc into (bad) cmp dec cli lock ss mov je mov ss pop pop bound dec xchg pusha fisubr dec xor ficoml (bad) sti fcmove cmp pop or jns jp or insl mov mov addr16 rclb xor cltd mov and lock les hlt daa mov (bad) jae or cwtl ja test pop jmp or mov sbb cmpsl sar call mov xor lret inc inc xchg cmp dec sub sarl test inc push cmp jp data16 fidivl aad dec aaa je mov mov sbb jge pop jmp push xchg or mov shrl mov and aaa pushf cwtl or jl js dec mov cmpsl mov xchg and and (bad) or add lahf jns cmp mov icebp sub xlat int in pop xchg leave or mov fiaddl and pop mov jne lea add add push xchg dec sbb scas push xchg bound in or movsl lcall inc xor icebp pushl push flds mov sbb jo add or (bad) lahf cmpl push inc cwtl cld mov and in cmp loope inc mov testl adc pop mov xorb mov stos dec and push pop scas cld push mov idivb mov scas arpl mov push add mov (bad) (bad) dec or cmpsb test lock aam xchg lods jae addl fxch pop js or pop jecxz lret mov or cmp xor ss push sbb cltd daa pop mov mov icebp aas not mov xchg or sbb add out lock sub xor push ss pop mov cmp (bad) or mov pushf mov or adc aad shrb out cmp lock or xchg mov dec xlat into mov test cli jmp adc xor cli sahf xchg shlb sub (bad) aas lock jle enter (bad) fstl iret stos jb add sbb fisubl lcall dec jnp adc or add lret test gs adc mov outsl xor inc ds dec cmp cmc xchg dec int3 cmp pop jmp shll sbb hlt lret sbb mov xchg xor std and xchg add aaa jo cmpsl (bad) push jbe nop out sbb fistl test rcll rcrl dec stc sahf xor push test testb adc push fldenv shrl scas dec mov (bad) je xchg std adc add pop pop mov cmpsl adc movsl and popa adc cwtl jne repz rolb fs pop xchg cld rcrl sahf xchg enter ss jno jmp ja and idivl xchg stos hlt cmpsb or jns push int sarl stc rolb mov ret paddw inc mov dec outsb jb cmp daa sbb lcall xchg inc mov shll push out int sub jns xor mov aam (bad) or insl adc sub push or test sahf cmc cld xchg jp test in sub push cmc dec adc js jmp dec rcll gs jmp iret fsts pop je jmp in xchg pop pusha add int3 jl test (bad) lret paddsw or lds test adc or cli insb xor (bad) std ret adc fwait jns mov cli pop std fwait push add or mov lods xchg int test mov and mov je out mov cmp mov or adc or and inc sub fwait cltd cmc je jp push pop pop scas or pop inc xor ljmp jl stos pop mov mov jmp pop sub xchg mov repnz cltd adc mov cltd xchg lret hlt jo push jae loopne in rol insb cltd stos push loop push das dec hlt dec test dec sti add sbb js push dec or aam mov or sbb je ficomp mov stos push or movsl mov or lock int3 mov mov mov push mov push sub in sbb mov sbb stos aam insb mov popa bnd jg aam ja ds mov cli add sub xchg pop inc or out push jecxz add lcall push add pop mov sub je out pop or in in jg and or (bad) std mov repnz lds mov pop or sbb cmp divb popa fs cld add mov inc sbb (bad) jb jo push repz push ds add std call or xor sub lcall repz push inc and pop inc sub sar out subl pop sbb mov test mov adc add xchg add xor sbb fwait lret xchg (bad) mov cmp xchg addr16 in mov or (bad) test inc or adc sbb xlat in lods scas hlt mov shlb (bad) dec push or push and out sti ds leave or push push lret fstl or push cmp push pop addr16 cwtl sahf iret xchg lock or stos cltd aas test outsb push ficoml mov or add adc lock and push lods mov push sbb mov ljmp inc cmc rclb push cmp push or lods and scas sahf (bad) or stc and or ljmp cld inc fisttpl roll fs sbb push imul mov lock (bad) jnp in dec push aaa fdivr mov xor je mov mov testl ret sbb outsb add push inc mov mov clc or jnp cmp xor not in mov cli je popa test rorl idivb and fidiv push or imul inc mov orl dec cmp lret mov pushf imul aad (bad) jge stc ljmp or inc or mov addr16 lea cwtl jb push adc or loope popf xor mov cmp mov fmuls pusha je mov stc cli and push pop mov adc inc jb outsb scas rorb dec add dec lret jno mov jae and das or mov mov insl sub fdivrs daa add or bound sahf add int xchg out lock fnsave je add rcl int3 mov sub mov ljmp mov cmp addr16 xor (bad) in pop fstps mov sub mov dec xor fiadd dec into jne inc sub test mov cmp and dec or add sub (bad) or mov insl sahf mov (bad) decl mov pop (bad) je or jl,pn es push mov cmp lret cmp xchg in dec mov cmc or out jnp mov sbb sarl push push nop mov add scas xor fldcw mov clc loop pop mov fdivl mov dec addr16 lods fwait sub or mov xchg fidivr jp dec fistp fimull jns xor mov dec push je jge hlt out push or sbb xchg mov pushf movsl or call adcl xor add ljmp lods insb in lcall leave daa jge cmp jnp in (bad) cmp or jo xor in mov loop mov sti xchg shrl aas mov imul aad insl imul jmp mov push sarb (bad) in or scas test dec push and sbb dec data16 mov ja push push adc or rol pop out into divb rorb adc and pop (bad) push outsl repnz int3 inc or sub adc xor or sbb popa sarl inc mov and adc mov add fsqrt data16 in lods (bad) adc nop cltd in lds (bad) stc dec sub (bad) mov arpl lret dec inc dec lahf mov cltd mov outsb movups mov je lock sub mov push mov (bad) imul test inc mov out xor add xchg fwait sub in icebp dec inc or fbld loop clc pop cmc lock mov pop outsb fnsave sub xchg and dec (bad) mov jae outsl fs stos jge or rorb das shll or out mov jns mulb push add inc jns push ret adc std pop test iret mov (bad) out or or or jne add pop pop aas inc adc and fidivl (bad) xor and push fnstcw imul aas shl fisttp cmp inc into sub (bad) or pop jns mov (bad) repnz ret icebp dec or sarl ror or movsl (bad) cmc into add mov scas imulb pop loopne sub push mov (bad) mov ret test inc push xorb int imul xchg call cmp shl mov insb mov adc negl pop and test insl or lret test or cmp inc shlb into or les jmp jo cli lahf sub jge (bad) jg neg loopne in adc xchg dec shr xlat fmull mov (bad) popf mov dec leave incb std addr16 or cmp xchg push mov repnz mov add xchg fldl cli std inc jmp rorl sub test (bad) pop loop scas mov lods pop ficoml or jo push mov adc icebp mov xchg imulb add xchg mov add mov loope adc rcr lock fsubrs add jl xor add jl xchg in ret or mov ret fs jmp mov insb mov dec sub cmp ss or cmp aas xchg stc mov lods sarb lock pop mov pushf loope testb pop sbb aaa mov loopne xor stos in (bad) or lahf adc arpl cltd popf movhps push dec out rcr or out clc jg dec int3 or rcll or outsl insb push ljmp rorl out inc jnp add out jg dec and fnstenv das out fwait stc lahf or sbb or test cwtl dec sub (bad) lret xchg push outsl push or pop or sbb je insl add cmc dec sub jnp mov lock sub iret nop add inc loop loop or xchg loope lods sti mov mov pop cmp or stos jbe adc call pop cmp jge cmp ljmp test push out mov xchg fstl fs sbb stos inc mov mov or xor aad cmc cmc (bad) divl cmpsb push or and insb (bad) mov lock loopne xor mov movsl xchg xchg test jl cmp fldcw xor stc xchg int in dec stos adc les jns mov int dec push jle push jns shlb fs jb xchg add out jmp sti rcrl xor mov or mov cli bound adc stos jbe hlt test pop adc dec lds arpl faddp fwait lret sub or cmp in ljmp lock cli inc pushf clc add popf or imul mov test movsl adc xor pop hlt ret mov or popa or sbb add cli scas imul push dec arpl or mov push jecxz stos push or setno or or inc xchg div sbb jb xorl loopne dec mov clc imul sbb imull cmpsb stos jbe fstps jns ja test mov xor lock daa adc repnz dec (bad) push iret or fiaddl or and pop not aam cmovs sub sub push sbb cli push (bad) hlt sub mov cwtl xchg bswap mov fimul call loopne adc jno ljmp or cmp lret ss jne mov pop addr16 dec in and rorl adc mov movsl shrl sti xchg cmp pop into fnstsw roll and jns mov sub sti test xor cmpsl (bad) or xchg pop mov mov pop cwtl xor lahf add xchg loope adc jmp sub pushf cli loop mov popf out (bad) xor jecxz xlat or or (bad) stc cltd and mov (bad) (bad) mov lock je pusha mov push pop or std adc es jo out push cltd jae hlt and jmp pop pop insb mov lea mov jl pop pop mov dec mov sbb jge or notb sbb sbb in pop mov mov or pushf ljmp inc or add (bad) sbb mov or (bad) hlt into aas cs cmp jmp push pop lcall bnd jecxz add je or mov mov push cmpsl adc jo cli jg pushf (bad) leave lods test xchg cs roll stos inc movl pop push jmp push rclb stos int3 enter je jmp inc or xchg les mov lds ja lret jbe ds sarl mov rorb jbe xlat shrl xchg test mov cmpsb int and lock push ret hlt xchg scas pop cld (bad) adc hlt pop pop dec jmp cmp xorl dec fidivl cmc cmpsl std xchg lods jg movsl dec imul mov cmp and test mov xor out add dec mov cld or ret repnz pop aad imul testl aaa es push sti add popf lods imul rol fidivr in fdivrl jno leave cmpsb std lret or inc add add xchg imul jl cmpsl pop lcall int clc xlat mov cs (bad) in xor dec add jp aam pop jns insl adc dec mov mov cmp pushf repz jno cmp test sub je pop jmp scas bound jmp out jbe jbe stos push or lock ss rolb (bad) fidivrl movsb flds test sbb imul in ret rcll sub pop pushf sub mov outsl mov add rcl dec jbe dec std add aaa cmpsl jo push push lock adc loopne ja or arpl in insl popa adc pop pusha sbb insb stos cmp inc dec int lods lea in shl mov out rolb (bad) aam into push dec mov add add mov add jns outsb dec in jg pop hlt das scas adc js jg shrl mov pop scas rcll in outsl push lods fbstp nop popa or rcr imul into push cmpsl testb xchg dec aas mov test jl leave imul das outsb sbb mov arpl jmp (bad) add xchg adc mov sbb adc cmpsb mov push rorl push xor into dec call outsl jne clc mov cmp in std pop or sub lds mov xchg cmp (bad) lcall pop repz sbb scas (bad) or inc xchg iret mov mov wbinvd call push sub ss nop rcll rcrl clc cli mov or inc sahf es or int popa inc dec dec out bound jl adc fldcw mov (bad) mov cmp loop mov dec mov inc (bad) repz sbb pop adc ret les adcl add dec or adc xor or jmp fadds hlt mov mov das push inc or cs fadds mov pop mov hlt fisttpll jbe cli mov cs or out push bound sub aaa movsb sub test movsb and fstpl push scas or add xchg mov push adc cmp bound (bad) sti or mov stos pop sub movsl call adc js xchg pmuludq and dec call lock je and sub les imull repz aad (bad) xchg mov cmp mov jne sbb rsm mov dec add fimull leave lea adc mov cmp arpl add inc xor mov jmp sbb sbb test test inc leave add aas or add ljmp les push shl imul jp mov mov sbb xchg push or pop or xchg and dec mov pop repnz out cmp ret insl sub in hlt xor repz (bad) pop dec fcompl sbb mov flds cmp sub cld out (bad) daa cli push sti mov cmp imulb cmpsl xchg push das hlt mov sub js popa mov test xchg cmp lcall loopne jae iret sub jne movsb out dec dec bnd and arpl inc jp aas lds dec cltd mov fstpt adcl test dec jmp lret dec fs icebp or stos dec mov (bad) xor (bad) test mov push aad jb pop fldt imul cld mov cmc and or das jne inc xor test rorl enter sbb jmp fs or int3 cmp or ja loop out pop mov and mov mov mov (bad) std ffreep inc xchg add negb push jle push sbb dec mov pop sbb mov in jno cmpsb or or cmp fistp outsl add xor push push hlt lods notl and gs cmp lcall dec cmpsl cwtl icebp mull xchg adc inc or lahf addr16 mov add lock mov sub dec ja pop movsb js mov push clc jo lds push jge ficompl or mov or add (bad) xchg pop push sti or out std mov fldl int dec jmp xchg adc mov mov adc or mov call xchg xor cmovp leave cwtl (bad) jmp inc sub mov push mov adc push loope rolb pop pop mov adc adc adc mov int3 mov adc icebp pop popa sbb and sbbb stc cli jp jne or test sbb stos insb hlt in adc add pop movsl (bad) dec adc inc aam xchg pusha repnz xchg pop xor and sbb add in std (bad) mov xor jno dec cmp xchg pop lods gs jecxz aad stc sub or adc outsl sbb cli lods mov aas out (bad) hlt push or ljmp mov xorl and mov (bad) (bad) jg and and repnz icebp mov xor pminub or int3 push int3 jns neg push or jg jmp aam test iret cmp pusha or scas and cmp popa and dec pop loop push add cld mov or insb sbbl sbb mov int3 mov or paddq sarl repz sub shlb outsb or fsts cli mov add pop rclb ljmp jbe sbb fcmovb loope insb pop mov out lret xor cmc pop lret clc popf mov jge or lods pop (bad) push jnp testl in (bad) movsl xor cli or jb lcall enter jle test jns rcrb xchg insl cld stos jmp mov es aam scas ljmp mov dec pop mov iret cld or lock sarb push or ja jl adc push mov inc push cs mov idivb sbb clc sti add lea test mov jge fiaddl sub push fwait pop mov adcl adc orb xchg sub cmpsb sub jnp jae in mov out and or mov insl inc ds pop cmc repnz push insb pop and pop int3 lock mov movsl push sbb outsb sbb mov in loop dec or cwtl (bad) jne test pop or mov scas cltd pop fmull mov sbb mov or or jmp mov fadds inc es or jno les push lret arpl lods push pushf cwtl inc mov (bad) sbb push or dec ds lcall out adc out jne psrad or lret leave movsb enter cmp (bad) mul popf (bad) minps add in pop insl aaa rolb sbb daa mov dec movsb dec xchg inc stos int3 or sarb out cmc pop repz jns fdivl mov jle in dec lret lea dec or ret mov xchg and jnp jmp dec push and loop mov mov cmp push pusha or sbb or repz sti push movsb add jl (bad) or nop jnp sub hlt jle pushf fdivrs lods repz or movsb or jg add xchg mov dec inc nop repnz ror or div inc fildl inc or pop scas ljmp fs mov aas (bad) mov mov sub test dec fsqrt sarl inc jle nop add lcall out pop or adc shrl or popa jnp in pop rcll push xchg and cmp paddd mov cmpsl jecxz mov test cmpsb rcrb dec test es (bad) dec movsl push xlat sub (bad) mov pop ror imul mov ss mov insl or jno push test add mov and es mov push mov cld dec xchg adc add or ret and fisubrl loope (bad) notl cwtl sub mov mov js dec hlt mov jo movsl (bad) int data16 incl outsb clc pop and call hlt fs and push push in stos xchg stc imulb cli dec push dec jmp sbb icebp jecxz in add cltd pmuludq inc lret div add or repnz xchg dec fnstenv mov mov or push sbb loop sub sub add loope incl loope loopne pop inc fbstp mov sbb cmp movsl pop xchg lahf mov lock sub std sbb cmp jns jl hlt mov pop dec int inc out mov nop add stos out dec jno xchg pop ja add push psrad mov sub bnd in mov movsl test test mov mov insl xchg aam stc xchg stos sahf mov (bad) shll pop jmp std mov push fldcw jle mov fadd clc mov cmp or mov sbb push adc lock pop mov pop xchg in sbb pop ret jmp or and sti fist cld jg pop mov push jl lret fcmovnbe lods test pop insl fwait add pusha iret test or mov mov sub out and stos dec jg cli or sbb and scas mov out xchg (bad) fdiv pop mov cwtl repnz sub pushf xchg (bad) push int mov or ja and insb pushf (bad) mov mov arpl cmp mov fstps aas inc idiv mov sub push xchg iret test insl ret jnp call mov xchg in add cmp rorl pop (bad) pop or mov xchg ljmp test enter das pop or pop fcomp movsb inc mov loop push frstor xchg into mov or dec xchg dec push insb lret push (bad) pushf sti js adc (bad) out rcll dec or sub add (bad) hlt insl adc pop xor cmpsl sbb shrl cmc insb push dec out test push cmc (bad) cmp and not adc jb jne icebp mov sarb lock mov xchg call sub outsb jmp ret out adc jns push sub data16 jb jge dec nop mov lret cmc mov and add or mov inc (bad) jmp or out stos xchg adc movsl sub or adc in cmp push repz adc inc imul xor add xchg sbb mov ja movsl rcrl aam insl xchg das out lods fmuls add add mov (bad) jno cmc jle insb push std pop ret mov test dec push jmp xor mov mov (bad) adc xor gs and jmp sub iret hlt mov or sahf movsl adcb or pop (bad) cmp xchg add inc dec bswap popf or mov push ret jbe xchg call jb push mov aam dec mov pop dec les mov (bad) das ljmp or cmpsb (bad) mov mov enter ja pop pop mov sbb adcb icebp imul shll jae or sub je das or out hlt jne adc jmp inc xchg push scas adc or mov add lea pop or adc or jmp sub ret xchg (bad) loop daa out (bad) or or adc loop movsb push std (bad) cmpb adc and pushf ja jne inc (bad) or sub sub adc repnz mov or dec mov and pop mov fwait bound stos or inc xor or (bad) (bad) mov pop sbb fnop pop scas cmp xchg lods pushf imul iret mov push dec jo and and cs or push out pop or pop outsl sbb mov test test mov inc adc fmull cmpsb xchg dec mull sbb mov fidiv mov loop rcrb movsl lcall test mov int stos (bad) insl mov popa gs mov dec popf sub insb dec xor jg add stos insl and loopne adc lds or cmp push leave push int scas imul sub addr16 movl imul (bad) or das int rorb je adc negb pop dec pop test int pushf xor mov adc and nop and sub or push mov mov mov mov ljmp iret mov das cli in or (bad) vpminub pop bound sarb jmp idivb adc lods ror fsubr fimull sbb and jl lahf or pop imul adc or xor pop mov roll mov pop fisubr hlt dec sbb adc or es out push inc addr16 pop or scas jbe mov lods (bad) lret lret lcall dec sub (bad) jne repz cli lock cmp mov sbb scas cmp dec or xorl insb ss ljmp loope pushf fiadd mov lcall push inc and or xchg mov data16 clc add jno fs lock xor or imul nop or incl fadd dec sbb cli sub scas cmovl cmc repnz loop mov cs call or pop pop wbinvd jns pop out jb xor insb aaa es jnp dec or fisub into push test (bad) ss div adc jecxz mov push pop mov lods cmp sub fbld lret ds add mov sbb les mov outsl adc notl in xchg push movsb mov out arpl jb jno outsb out jbe inc mov jo,pt pop sahf arpl pushf aas mov pusha jns cli sbb test mov mov xor aaa call rorl inc jl jp dec or push out fisttpl out or dec xor mov fstpt dec (bad) out mov xor leave or inc mov shrb add lret adc sub push dec pushf or mov xchg sti add scas mov pop xchg mov idivl shrb (bad) pop dec xlat inc lret pop or xchg push adc loop sbb mov xor daa mov jg aas xor cli pop xchg incb adc fisttp lahf bound push sub pop mov popa daa movsl mov loop movsb (bad) call push mov aam icebp out test cli les xor in fmul stos and add pop mov lds enter fwait xor lock sbbl mov xchg inc pop add push pop in push lahf push xor cmp stos movsb lods data16 mov push xor mov bound inc inc popf xorl popf fnop or out add xchg ret mov adc loopne test int3 testl xor divl shrl popa mov inc mov std or stos ss inc fiadd pop ror pop mov pushf js or mov lcall dec out ljmp mov clc push lret mov or repnz add inc ds xor mov xor cmc adc ficoml mov arpl push dec mov pop aaa pmaddwd dec aam dec mov je jo or popf push lea add or imul mul push aad faddl sbb lcall sub or sub sbb mov enter cli mov mov (bad) in dec pop cltd pop add iret mov aaa (bad) imull test aad push mov mov addr16 dec sub sbb dec push adc popa inc ljmp xorb iret leave es and mov ret add or data16 jmp sbb mov cmp cmc push aad push or jecxz mov loopne lcall add mov imul cld dec lret or sarb jo xchg faddp jo and mov out in enter pushf hlt and and mov loopne std pop cld mov mov sub mov push inc or sbb mov loopne or mov rorl imul ljmp arpl shl and xchg mulb xor lds (bad) lock mov test xor pop loopne dec or je or dec jbe scas pop mov inc or adc std push adc mov je inc inc (bad) insl lods lock andl jg lock or or or fsubrp or test jnp fisttp inc sti sbb sbb (bad) xlat mov fcom enter pop adc ret xor push icebp sarb mov inc push mov sub or add or test or outsb bound pushf push push or movsb lock sbb jns adc lret (bad) sub sbb jp sbb cmc inc rol lahf scas (bad) pop xor adc jo in inc or inc decb xchg (bad) (bad) je mov jb sbb iret or xchg push ret fimull dec xchg mov xor dec xchg adc adc mov jns mov dec jnp sahf jae (bad) mov or stos cmpsl adc mov rolb fsubl jle aas add mov data16 add leave xor dec lret or movsb int rcrb adc lods or daa popf scas sub xchg mov inc dec cmp lods enter fidivl xchg mov int3 js dec pop repnz in inc add dec (bad) daa sbb mov les sbb jle sbb lea or pop cmp or aam test xchg jl mov sbb lret xor lock mov mov iret mov push aad nop cmp or mov push or fxch cltd and cwtl sbb or xchg mov cli jno outsb pop imul or xchg fnsave add mov inc xor test fimul cld adc test test and loop push or arpl inc mov (bad) or adc mov jo jg sahf mov lock test push fsubs push pusha lods cli fdivrl adc arpl jnp in out dec imull hlt adc mov pop sub lods dec push sub sahf inc pusha sub xchg mov sti dec mov cli notl fsubrs pop cmpsl adc dec imul push inc and jle and sbb loope fstpl adc cmpsl jbe add jno mov fs cmc jp add inc int3 pop jecxz loopne dec mov lret jbe xor testb test repz dec xchg jns andps add mull jae lahf jb lahf scas mov or xchg sub mov jp push mov (bad) jmp jnp mulb jns jns or jbe or rolb hlt cmp jns,pt in loope push sti xchg cmp mov mov pushf or aad lret jmp sub or adc xchg mov mov xor stc xchg out cmp out jno dec shr sbb jg sub ljmp mov icebp or jl (bad) push xlat and pop and fnstsw add scas adc test (bad) sub test inc sub adc jle add adc sarl insl xor lock adc aas push sub cmp rorl or mov mov xor adc mov ss jecxz not in jno xlat mov or jmp stc adc int fnstenv sub sbb loop mov cmp cmp and pop jne dec (bad) dec xor inc out out sti dec aaa leave cmp dec mov rcrb fisttpl xor lods xchg rcll or out leave icebp mov adc ret push or cmp push pop xor mov inc add imull imul jmp lret (bad) and xor push lods dec aam xchg cmp mov push mov xchg sub repz lods pop icebp out sarb push jbe int enter inc les iret jecxz lods mov pop stos mov fnstenv sub mov add jl inc mov or in fsts mov mov (bad) (bad) push jnp push jo xchg fs mov out cltd jg (bad) stos sbb daa out scas imul sbb sbb push enter lret lds popa dec mov dec xlat insb add movsl pop hlt adc pop in jo adc in push jbe loop arpl pushf adc std push lahf bound icebp outsb mov inc lcall sub mov mov rcrl stos daa add ret pusha mov jle fisub in dec daa lret daa mov jo insb mov mov lahf ret loope jmp das sub jae lods fsubrl mov mov jns rcl into ds insl xor mov mov int3 or xchg push or (bad) movsb loope sbb fs addl fs fcomps in mov lods sti test shlb (bad) in pop pop insb jo iret leave xlat add pop pop insl ja aas shrb or fildl neg pop in loope sub imul push aad test add cmp (bad) add jl je pop jo inc out xor pop jns or and (bad) (bad) mov fs or dec xchg pop add add arpl lock push inc push test xor cli rol in pop addr16 test jne mov (bad) cmp jno ficom or pop out fcmovu cwtl sub cmp fisttp inc xchg jnp (bad) cmp lock stc add adc xor cmc out rol dec leave sbbl adc dec clc push pop gs push jbe in xchg jno mov cltd mov insl sub or adc lahf (bad) popf mov or fwait push scas xor xor mov adc xchg pop lea or mov cld rcrb jns je (bad) or mov jle mov adc testb jle and add repz lds mov jmp push push xchg dec test roll mov and aaa decl add add fisttpll (bad) sbb sbb xchg out sbb sbb adc adc mov in stos or xor int3 pop ja pop jnp ja add call ficomp pop orb cmp or ds and fisttp jne cmp and cmc mov lods lock or pusha shlb imul js sub adc dec push notl push shlb dec cmp stos mov dec mov leave xchg sbb iret and pop xchg into mov cmp push sub movsb adc dec daa dec xor shrb adc xchg fimul fnop mov data16 mov xlat pop (bad) jns repz inc add or (bad) (bad) mov jge xchg sbb sbb pop dec jbe ss lods push inc cmp xlat add and xchg sti mov test adc in icebp es shl lcall scas loope mov imull dec test adc jbe or mov icebp insb test int test jo mov outsl outsb mov mov mov fdivrl or call adc mov adc enter ja xlat mov pop leave hlt (bad) repnz sub dec lods mov jnp cltd (bad) stc ja int3 loope push ret sub sti fbstp adc lods jge call adc jb xor inc fwait cmp push mov xor sbb lcall adc cmp and sbb (bad) out and enter cwtl mov (bad) jmp sti (bad) dec xlat fist push mov mov test lods ret bound sbb jo xchg in icebp mov iret and les repnz and dec sbb bound dec jl sbb cli xchg push adc sbb ss cmc div lods pop or sub mov test adc cwtl xchg xor dec and xor mov test xchg add insl loop decl or push cwtl loope les dec ja sbb nop sbb aas or or xchg lods ds in cmp mov aad jae or jmp pop xchg out jnp int3 popf ja and sub xlat frstor enter push cmc fdiv movsl aas sbb xor mov mov push incb and xchg xor mov leave mov adc cmp pop cmp jle mov loope movsb dec mov or sti clc cmpsl pop movsl mov xchg movsb ror xchg aad jns out sbb lahf fwait in bound jne popa mov icebp fnsave cmp dec inc pop adc mov ja adc test and cld fs adc pop ss or into sub mov inc sbb push pop mov movups scas and in or lods mov aam jo sbb xchg sub jle jp xchg mov inc repnz adc addr16 ret lods jge subb loop jno pop dec push fisttpl daa dec rorl mov fcomi mov dec pop lahf pop or fisttp lods add jno std fdiv sbb adc add xchg mov shrb pop or adc or lret push stos mov movsl add inc in scas or cmp mov out sbb or adc jb cmpsb ljmp inc hlt xorl dec sub (bad) idivl cmc cmpsl add xor insl dec add ja out jmp jmp int adc nop add icebp dec mov lock mov das (bad) adc fmull cmpsb stc lea test je sbb out movsb jns aad sbb (bad) mov (bad) pop (bad) fnstenv lods jb inc xchg jg in imul adc jnp mov scas and repz ror aad gs jno lds mov jae fnsave pusha in std add cwtl addr16 mov jl cwtl pushf out jmp adc push (bad) mov xchg mov popa adc insb or inc mov scas shl mov (bad) rolb outsb icebp icebp dec add adc test xor push pop ret push xor xor jle outsl inc mov push jp cld or notl fstl pop mov std mov sub dec mov pop cltd push mov pop pop bnd sbb (bad) addr16 enter cmp psrad (bad) imul div loope (bad) xchg data16 pop dec or icebp jb rol push mov mov sbb pusha mov in cmc lahf inc inc push out je aaa loope popa test mov in imul push shl add or aam fidivr lods adc push sahf out or and dec jne call cmpsl sbb (bad) xor mov mov (bad) cmpsb ja lods clc jo nop add and or adc push mov xor mov xor pop sbb inc (bad) push cmp icebp bound adc lcall push das add movsl fistp lds or push pusha mov sub inc jmp inc xor and mov mov mov push inc mov test or (bad) loopne,pt xlat or or cmp cmp addr16 enter jg mul xchg mov adc out or roll jge insb or jno cmp arpl adc ret rorl jno or jo sysret (bad) cltd imul cmpsb popa js xlat repnz add jp (bad) dec rcl and mov not movsl stos imul je ja push (bad) in or out aad insb inc subl lock hlt cli dec rorl jbe xor adc jno sub and jbe frstor sub imul xor mov addr16 sbb jns push fild dec add arpl (bad) jae cld inc fisttp add loope mov pop movb dec sti push pop mov or push pop unpckhps or int3 xlat (bad) or push dec mov add les call repz jp add aas arpl dec scas jae js or pop lock or or stos mov mov imul sub bound ret mul ss xchg sbb mov mov in inc rclb mov and icebp adc or (bad) xor and xorl insl sbb cltd ror testb cmpsb mov or adc cmp lcall inc (bad) out shll or lcall mov mov jnp jecxz mov or push sbb dec bnd outsl sub mov in std pushw sub lods lds dec or roll in adc scas sub out (bad) xor adc les (bad) jae add mov leave mov dec sar and mov mov pushf xchg mov (bad) jno push sub imul fstl mov mov add inc (bad) stos and aad ficomp mov add dec mov adc inc jmp sub xor aam sti mov in (bad) popf sbb pusha cmc int and push inc cli fs sub data16 repnz mov xor or push scas insl in mov jmp inc test leave (bad) jecxz jae dec dec pusha movsb push (bad) ljmp mov dec sarl or loopne je cli ja or dec inc clc adc or xchg jne sarl add subl js jne pop negl mov cwtl lock mov mov sbb mov popa pop jecxz pop push or adc jo insl nop scas in adc rcrb dec add fs mov mov push stos sbb or loopne dec rcl sub sbb xchg repnz call idivl subl inc int3 or push or int shlb inc mov push vunpckhpd xchg js or (bad) ds or dec sub xlat or fadds or enter xchg xchg cmp adc mov (bad) frstor inc fistpl or leave cmc mov sbb imul mov lret idivl mov (bad) nop sub (bad) loope adc test out pop (bad) mov lock mov jno xor pop (bad) or xor test mov adc jmp jbe lret in pop popa xor fistpl arpl dec outsb lods mov movsb push and pop and stos dec add inc sub jmp and test icebp or aaa andl shll orb pop es xchg mov pop outsb mov jbe gs adc and arpl jns iret fldenv pop xchg sbb fisttpll cld stc adc dec pop push punpckldq add in jno jns movsl pop inc inc (bad) push push adc xor xchg pop js jbe add insl add or mov lock mov inc pop mov rorl arpl int ficom shrb outsb sub mov (bad) out adc fidiv mov adc fwait mov (bad) adc xchg mov popf mov insl das pop jo xor sub dec pop pop call sbb dec or out cmp fistpl arpl cs stos mov or test ficoml fldt movl xchg push scas jge or jmp mov cld fmuls or pop dec sahf cmp cmp loopne (bad) cmp ficoml loope or lods (bad) mov es push cwtl cmc mov ljmp aas int fsubrl sbb sbb push sub lea push and loopne fcmovnbe out pop adc faddl or adc outsb or mov xor int orl mov mov sbb rcll sbb cmp jbe add scas adc cmpsb test sub out into mov or jno (bad) add or inc push push add enter or out xchg mov push or sub mul mov flds push jmp (bad) loopne adc jg data16 mov push or stos ja inc xor imul and adc sbb push hlt sub dec in in xchg xlat mov jne lods popf sub pop gs (bad) out mov sbb lahf or sbb ja jne lods or loopne xor cltd cmp push jb adc jo fimul inc repnz push dec xor inc cmp dec or lock mov in xchg push repz (bad) xor cli aas mov daa jmp out lret cmc notb jle dec (bad) push icebp or push sub mov ljmp push or push and xchg sub sbb (bad) popf pop jl mov jbe push inc out icebp cld fs (bad) sub pusha mov push add jae add or iret stc jp (bad) popf mov lods std or imul jns or mov decb in (bad) hlt mov inc imul inc fist xchg pcmpeqw or sub sub pop incl sub orb sub imul jmp cmc stc mov sbbl inc jbe imul scas rorb or adc in fist cli mov adc pushf std call pop sub cmc or sarl nop test cmp push mov sub int3 pop or sub in repnz dec les sbb adc dec mov or or adc fldt ljmp cltd das dec mov push inc dec scas sub and or push aam ja cmpsl or push fcmovbe cltd incb lock cli ja in sub add popa insb enter or cmp les loope adc pushf add cmc clc sti loop out mov lea mov or lahf and inc or (bad) mov or and mov or mov insb or loope jns testl jne aam sub nop pop mov and mov add or dec dec stos sub inc movsl jle push and push les jns mov push dec mov and dec cmc les into std ja (bad) mov or xchg or pop xsaveopt ficom call (bad) mov jbe cmp add or inc and and sbb xor bound xor cmp mov adc (bad) aas or jp call in mov jo,pt jl cmp cmpsb sub adc add pop insb movsb ficompl and iret xchg add aad dec xor inc sub adc out add mov int leave notl xor add jle jno mov adc push or or pop addr16 or je sti out (bad) aam adc mov adc loopne addr16 iret jge cwtl mov mov jg and fs cli fild cld jmp fisttpl rolb shr sub jge xchg (bad) mov sti popf push mov mov std (bad) repnz out dec sub jp or push pop lcall cmp jecxz pop sub iret aam or popa repnz jbe cmp pop ret out fdivrl mov addr16 sbb into and in jae inc pop or push xchg ljmp pop sbb adc inc repnz push test dec or or scas mov add imul loop push adc sbb lcall xchg pop dec out notb inc sahf lock int push mov or add pop cmp mov push or out and inc dec or or pop std es or jle jne lcall ja int stos lret dec negl out or (bad) lds rolb sub xor in xchg pop pop mov adc lods jns mov mov and jge mov or xchg sub das fcmovnu movb adc add shrl mov mov or dec cld clc mov fistl add sub or mov ja arpl or xor pop lods sbb fmulp jbe mov ja inc mov mov in xor add iret lret or jne or cmpsl mov scas fst outsb jb faddp fistpl xor or jecxz and dec add mov xlat or push dec sub (bad) hlt sub push jbe dec imul in pusha push test adc jmp jb cwtl xor mov add xchg loop or sar (bad) and dec imul imul ljmp gs cs fisubrl ret or movsb ds addr16 int3 lret in lret cwtl out pop gs jl cmp lds daa pop mov (bad) lret adc push int3 lcall clc lods mov mov mov fdivs imul sub dec or cli mov xchg out idivl inc js mov mov loop daa push repnz xor stos pop pop stc add sti inc mov cmp movaps or cli std and cs cltd sbb mov idivl imul xor jno or hlt mov ja ffree rcll test jecxz bound dec das pop or xor rorl loopne xchg pusha pop mov push lret adc or add pop sbb or xchg jecxz or dec or int3 (bad) cld sar mov mov rorb dec xchg and dec les (bad) imul mov fucomi shl sub rcr jne inc sahf ret xchg or or divb lods clc mov shll pushf popa xor into aaa mov movsb test mov jae mov mov mov orl hlt (bad) jns xlat in test daa cmc test jne (bad) das idiv (bad) test sub clc arpl (bad) or inc loope cmc shrb loope test dec dec pmulhw mov fnstsw bound pop dec inc out xor or push imul fdivrs lahf ret lea (bad) xlat movsl lock xchg push aaa cmp push or adc mov sbb stos jb mov repnz dec popa adc or cli fisubl push jmp sbb or push sbb sbb das aaa ja movsb push int inc add fmull lods xchg enter cmc adc jl jbe mov rcrl mov adc pop (bad) lea adc xchg lods (bad) xchg xchg sti xchg jo xchg repz dec rcl (bad) adc jne jmp clc out dec dec pop loop sbb stc mov adc add push adc push stos daa out aas cli fldenv push dec inc mov aaa lods and scas inc add add mov std loope jne adcl sub stc (bad) (bad) into xchg (bad) mov icebp loop int test cs and xor xchg je mov xor or mov add xchg push dec fdivrl push push lods mov sbb call or mov mov cs fistpll or int3 cmp mov and jecxz outsl or aad mov repz (bad) and ja xchg cmp mov in out inc inc or cmpsb dec cmp pop daa (bad) or pop test lock mov in enter inc fwait cltd sarl xor sbb mov sub pop insb xlat test jo loope and xor lds push (bad) jno fisttpl cmp enter push or xchg rcrb dec push (bad) out inc cli cmp jbe or mov sub scas js fcomps inc (bad) mov or stos test or push js or imul gs lds jns rcrl mov cmp repz mov or rorl sub mov in rorl sub inc pop lret fs or ja leave push xor or pop add out and adc in fiadd pop imulb mov ret iret sub out xor (bad) icebp jmp cltd lea notb mov dec cmp or stc jl xchg jmp jb repz lock mov popf ja shr or or xor loope mov mov gs hlt adc mov fidivr out xor cmp int3 aas or leave cltd or (bad) xchg inc add test in pusha ficom mov add in mov xor stos (bad) or in mov int ret out pop or dec (bad) leave stos imul mov push in int3 daa or push push (bad) sub add and not outsb cmpsl cmp shl inc push jecxz insl push mov push inc mov in or btr ds lods lods jnp cli mull hlt jne jge inc outsl test andl xchg ja or pushf jns cmc lods in addr16 in les leave and ljmp mov push (bad) dec push xor sub add popa add jns jmp inc je mov fiaddl adc xchg adc pop mov adc das add fisttpl jge fucomip test inc aam insb movsl iret loopne lock fbstp loope leave dec cli jecxz jmp sub jmp stc xchg or jecxz push out push fstps xor mov jno cli adc or nop inc dec daa lret cs adc or mov ret fildl insl in cmpsb dec adc inc leave push xor and cmp mov loop mov (bad) out jmp mov pusha sub lret and dec lds dec or loope push insl mov cmc inc sbb ja jmp shrl cmp movsb jns or outsl pop pop jp sub int mov jno mov sar mov adc ret fisubrl xchg jbe ds cmp or imull test insb xorb rcr lahf cld or test in xor inc fsubrs or dec out in adc mov in ss ret cli cltd xor cmp dec mov pop pusha or dec xchg add and das cmc decb push or mov or stos inc add scas cli aaa loopne fcmove divb es jae in inc xchg adc aam imul ss out aaa sub pop and fisub js dec or xor sub lds loop int mov or push inc xor into (bad) lock jecxz test in pop aaa or mov test arpl syscall fs call or (bad) stc xor adc sub cmp aad and or push jecxz mov xchg or pushf jp sbb cmp cmc bound fstpt imulb lret mov mov nop or jmp sbb dec aaa dec cmp mov (bad) je out jne fwait sbb shrb scas jno jp test add push mov dec add iret inc dec cli cltd xor or rcl frstor push xchg xchg sbb test pop pushf pop mov test sti push jmp fiaddl xor lahf jb shl leave mov jp mov xchg sub or xchg out loop (bad) shll fldt inc xchg (bad) cmp mov scas (bad) or xchg or aam xor inc add xor idivb jg mov mov adc jmp cmp daa sbb lock (bad) or in ret icebp or aad mov jecxz dec jno xor jno xor hlt sbb (bad) mov dec push add sub xchg sub enter shll js sub sub rclb dec or out mov stc fldenv (bad) jne int stos xchg jle (bad) pop push lret out pop mov mov push lods or shrb (bad) popf and stos imul mov mov add mov or add pusha in or cwtl sti jecxz ffreep or dec aad mov add and (bad) je lock push cmp push add fs call mull and mov outsl out rclb xor jne lcall fcomps jmp popa pop fstps mov shll xor mov clc jmp lds inc mov test les (bad) or in imul inc nop add jae fisttpl repz jb xor loop xchg jecxz or mov lcall xor popa lock jl jle jnp lret sub negl pusha mov mov (bad) stc adc addr16 (bad) mov fs push mov shrl or out mulb xchg mul ss jae or mov out (bad) iret mov addr16 cmp in enter dec jg xor fwait js sbb aaa xchg test dec stos cmpsb xor add add and jo (bad) xchg mov sub xchg roll je cmp lods out test mov (bad) leave pop imul push cmp mov mov jb rcrl mov popa int3 in mov in lea data16 mov inc jns sub cmp (bad) in inc lods add or jmp jne repz add push decb jmp fidivrl push or bsr sbb adc (bad) shrl push mov or and push push mov fidivr add sahf jns or sbb push test or fcomps mov dec xchg test mov lea mov sub inc jle mov add xchg inc cmp jmp ja imul cmp or enter mov lods mov sub or sub rep notb sub add int cmpsl mov xor mov and or jecxz (bad) in adc jnp stos popa fisttp or or cli in js scas cmp mov dec loope xor jl or inc dec push xor mov popl nop mov jmp repnz cld jp out adc icebp jbe add cmp test mov sbb or dec or xchg mov stos pushf adc dec mov or jl mov jl into hlt mov pop sahf xor push aaa loopne mov loope jmp mov or xor sub mov sbb sub imull mov sahf test mov orl pop fs test add xchg mov adc xlat scas iret movsb mov imul push inc aas xor je shlb dec pop sbb jmp movsl xchg add std inc jmp add dec cmp cmc pop int mov push enter jbe cmp adc (bad) mov stos icebp or in adc popa push add jns sarl add cs xchg or fistpl mov dec push aas stos enter sbb mov stos inc (bad) inc fdivrs cmp insb cmc repnz or out aam rorl bnd frstor or cltd inc add (bad) push sbbl (bad) fistpll jns or movsl add cwtl or mov pop and xor push dec or fistl into jp sub xchg or xchg mov pop xor and add sti stos dec adc inc inc or test cmp or sub out fimul clc ljmp dec icebp cli push imul lock test add clc stc jnp and adc pop sbb lcall (bad) xor adc testl mov push movzwl or mov aad sbb mov and daa icebp lock mov dec xchg (bad) outsl test or pop insb add imull (bad) adcl jg add repz adc mov dec test mov cmp pushf insl hlt dec mov mov icebp jno jno jle dec mov std mov sbb dec pop dec stc mov or pop stos stc sbb lea or addb lahf test shll test inc mov jns mov mov sbb adc movsb iret cld mulb cmpsb dec repnz fnstcw jns mov jg roll and xor loopne enter mov push xchg xchg mov fsubrs mov xor push cmpsb xchg cmp cmp test inc push add and dec repz (bad) repnz das sbb mov (bad) (bad) fildl add ret rolb loop bound jns inc (bad) or scas and adc sub sub test nop or sbb fcmovne enter popf dec lock mov pop sbb in leave mov outsl lock loope sarb jb int3 movsl pop fiadd push insb sub mov mov je sbb xchg or clc lea shrl imul ret cmp add or je xor movsl pop loope dec mov or mov lock adc xchg arpl dec cmc lods add mov imul sub mov mov shlb lea shrb or popa pop icebp mov das push or cmp lock dec fdiv in add or cmp sti mov pop and add pop or insl stc cld push test inc push pop pop ret jo jecxz and jecxz hlt mov xchg mov imul or and repnz and fsts pop cmp hlt jle cltd leave (bad) out imul cmp mov out or pop mov imul divb and mull sbb pop testl outsb push stc (bad) adc jb push into or insb xlat ret pop dec pop mov xchg xor fbld jns mov ja dec jne popa nop pop jb (bad) inc (bad) push sub lret cmp push test mulb or mov push inc pop daa test or mov adc out hlt mov push jl iret xchg ret mov inc cmp out mov outsl sbb dec out sbb orl jmp pop (bad) out or lret loop push inc mov cwtl das mov sti or mov orl xor pop cmp es pushf lret in cmpsb push out out aaa push inc xor and lret push sahf mov and fs or xor loop lock into cmc (bad) mov fiadd rcl scas xchg test jbe adc das mov icebp sub mov outsl jecxz dec xor fwait shlb jge and (bad) or xchg dec inc sbb rorb cltd cli (bad) aam into push or popa (bad) cmp sbb xchg pusha add mov jg dec int3 or dec sub mov or jb jle aam sub mov or jge fsubl cld xchg iret leave lret inc cmpsl in (bad) mov xor mov xchg xchg cmp jg rcll daa or imul pop mov stos or jo lods mov ss mov pop xor adc clc (bad) repz add data16 mov push cmp sub mul push pusha outsb cmp or in fcmovnu ljmp ficompl in inc ja decb movsl fs pop sahf add fisubrl jmp aas in adc add test or jp lods push adc xchg enter rclb xchg sub movsb aas fnstcw (bad) movsb (bad) rcl push js mov sarb clc sbb hlt sbb push sbb dec ja cmc mov addr16 dec divl fisubrl mov mov xor mov and add loopne mov aad jns push enter pop lret jbe leave cli jle jae fidivl test fisubl jbe push and add bnd pusha pop (bad) jle fucomip mov ret aaa jl into or lods dec xor fisttpl cmc adc orl add jns push out push leave jb or mov fimull les cwtl fldt repnz (bad) cli mov cmp lret (bad) xor push jne sbb into popa movsb pop push testl scas inc mov adc out int pop jo jge std add adc nop mov cmc pushf jno dec cwtl xchg jo pop add sub aaa adc xor and pop xchg jp outsb out xor lret jl pop sbb imul rcll jns cmp repnz mov fdivrp xchg mov add inc sti cmp sarl sbb data16 lahf mov imul imul mov pop pop scas jne jl cwtl push add lret aam movsl sub jno sub mov test repnz movsl sub xlat inc lock xchg cmpsl gs or inc cli daa cld xchg cs or jnp inc aam in xchg bound (bad) rorl fwait xor je dec mulb loop std insb push or jns daa or sub test inc add cmpsl jl xchg xor mov test fcomip fidivr mov cmp ja out cwtl dec leave xor aam mov cmp mov (bad) mov gs mov fcoms lock ljmp aaa dec out lock cwtl and pop in lods pushf dec xchg movsb dec (bad) mov je adc pop push or and push and inc fsubl cmp cmc push or xor fcomps pop leave push mov or xchg xchg dec (bad) adc or test sub sub cltd mov or cmovns es or scas xchg stos leave push nop mulb cltd cmp or es rorl add int or dec cwtl mov push push in adc sub fstps push rcrl lds mov stos test and aad ja aas ret (bad) add fistl fcomps cmc shlb dec leave cmp and dec enter hlt cmp and cmc leave adc xor addr16 test pop fdivrl add dec add jl ss or jno or mov sbb xlat loope push xor inc mov (bad) repnz cmp mov loope sbb (bad) lock mov sahf inc xlat dec or loope ret cmpsl cmp push xor cwtl test test rorb das sbb cmp lcall pusha shll in fxch inc idivb lahf or sub and mov or pop pop jl xchg jge movsl ja test xchg pop mov push popl xor pop ret aam aaa in push mov or pusha push cmp sub or (bad) outsl test out push jo hlt shr pop or repnz ficompl (bad) call dec sub or iret hlt shl out test rorb rol push inc jle insl mov push or add xor in in into iret mov or es das xchg jne adc mov dec xchg cld lret fmuls std addr16 or test loopne repz bswap or inc sbb push loope or mov mov push or xchg ja (bad) in xchg jb test leave mov int in or fwait mov fisttpll and loop into jne xchg or adcb data16 pusha hlt aad jle or cmpsb mov arpl xchg insl mov sub outsl cs mov or mov adc jge popa aaa dec shll sahf push test cwtl insl fs imulb adc lock or stos repnz pop inc in les pop arpl leave hlt jle outsl jae dec lds mov xchg or imul mov jne mov pop or pop gs into mov dec stos mov adc mov loopne fwait adc add nopl push test mov repz xchg or pop sbb adcb inc test add add or js cmp je dec fdivr orl xchg repnz jbe mov sub (bad) mov or and cltd adc repz push lock or jnp scas adc or ljmp mov or mov push cmp or mov lock call iret jo test ja rolb subl mov mov mov loopne fisubrl adc sarb xor shll cld in leave add mov inc xor lahf pop out roll aad sub and ficomp inc (bad) sahf push mov or cli mov aaa mov push add add int3 enter mov or dec ss fsubrl pop bound fs add jbe fistp repnz imulb xor stos lcall or mov mov dec mov adc iret or dec daa sub wbinvd fisubl mov sbb mov push in xor je cmp or sahf or incb icebp ret mov fcmovnu cmc cwtl inc push adc pop jb adc mov ficompl mov fs jl xchg mov add inc sub nop inc mov stos sub (bad) jg cltd mov add add ljmp pop (bad) jb hlt or pushf jge and insb idivl pop mov stos test iret aad cwtl jmp mov hlt das loop jp in jg leave int xchg rorb int3 aas cmp mov xor push or mov add jnp or mov sbb xchg cmp (bad) jge insl aaa lret dec or cmp inc scas adc jmp cmc mov je emms insl lods neg and arpl imull fsub mov pop jmp xchg das test jns mov xchg pop loop cmp call aam or mov ja jbe jp mov sti sbb mov dec aaa (bad) lret xlat orb mov outsb pop sti pop mov or dec in test or dec scas fscale jmp mov push cwtl or and loop cs or arpl int lds outsl cmp mov repnz mov xor js aas (bad) sbb sbb ja pop es inc daa dec (bad) dec lcall aaa out es mov jg xchg sbb cmp fucompp and lods and sub out leave mov sbbl push fnstcw stos fs rcl je aas or xchg pop outsb ljmp jmp leave mov push fs outsb sub mov mov cmp (bad) or add pop push dec pop fistpl cmp or imul repnz push xchg insl dec xor cmpsl or jne scas jmp xchg cmp or btc js mov mov lea pushl lret mov cmpsl add inc sbb or mov push das xchg out je and cli or fmull pop in call mov push adc adc sub mov adc fist sbb aaa inc mov mov lea rorl lahf icebp outsb cmpl loop int dec sti mov jns adc adcl aam insl (bad) pop lret std sbb testl jge out dec popa ficom mov inc stc jno (bad) lret sti jb dec lds jecxz rcrl mov jo add lock mov jl test nop cli in sbb sub loopne enter sub mov fnstcw leave sub dec dec (bad) dec xor adc mov insb xor push out jbe ja scas mov nop dec repnz jne fstpl jg mov fstpt dec idivb bound jns push rcr cmp or jbe pop rolb pop or push jne enter or ret or ljmp hlt popa scas jae les (bad) lea ret xor add out xlat inc mov pop (bad) jle push and lahf fmull mov mov cmp jmp js mov inc or push aam ljmp add mov add test fiaddl imul sbb cmc hlt sub (bad) stc pop jne dec mov mov and sti push xchg int testb dec add loopne mov (bad) mull push inc insl pop or mov push xor cmpsl loopne pminsw jge sub mull push pop or hlt mov mov xchg adc ret and or insl push xchg sbb inc jge mov cmc add and jecxz mov sbb ret popf pusha push movd aad test imul lret in test push aam out jne cmc or adc hlt add mov dec cmp sub push popf lock jmp cwtl sbb adc or jo cli push aad outsl push dec jo mov int ss or and out add (bad) sti adc fs icebp scas cld mov inc insl push les push lcall pop loope adc fmulp out fdivr sbb out dec add cmpsb sub andb mov jge ljmp xor mov or loop xlat cmpl push aam mov std mov sub or ss add test jp sti xchg ja inc xchg sarl or cmp push sbb pop or pop call inc outsl notb jb xor xor cmp push jmp mov cmpsb popf pop mov sbb inc lea out aad fwait idiv lahf test in xchg mov pop pop cmp (bad) outsb std roll (bad) fadd mov fnstsw sub aaa inc add adc enter and dec mov sarb sub or imul mov or shl outsl inc mov xor jmp loopne jns out sbb daa sbb loope xor fldcw mov xor outsl inc or mov jno mov mov addr16 cmp lods outsb jns mov ficompl (bad) int3 push stc push xlat and inc sbb gs mov adc cmpsl sbb or lds push lock mov lods cli (bad) and or cmc cs test or push in fmull fwait lahf inc or pop aad cmp notl in jge add (bad) adc sub int mov repz push mov mov ds mulb pop jbe aad popf cmp add push rcr sub out fs dec xchg repnz xchg das jnp (bad) push addl or dec push cmc shrl iret hlt popa mov imul or pop inc cmpsl or enter in aam inc or popa xchg (bad) xor or nop pop jmp cli (bad) pushl inc popf sub lret or out insb mov push lock mov lahf push inc test daa jge sub (bad) xchg roll or jle mov jae pop dec push flds lahf or or sbb hlt mov insl iret pop adc sti inc addr16 loope mov xor leave sub lock xchg jo int3 rolb je jg adc (bad) (bad) movsb pop test out jl xor fs stos jns mov or adc sti fdivs mov or mov bound sub xor cmp or sub out lods loopne inc jo (bad) or jne jns test push (bad) pop dec cmp popa pop adc loop rcll dec and cld lret jmp pop mov or adc push fild or push iret xor sub (bad) aam push or cli loope xchg xor ja xor in mov or (bad) push mov or (bad) pop mov movsl pop repz sbb push lea fbld jl push cmp and stc xchg or adc and or mov out adc leave inc or pop mov mov sbb cltd xor cmc call fistpll leave push xchg stc in hlt fdivrs fcmove inc push dec (bad) iret mov mov fxch mov fsubrs fdiv fnsave pop loop pop fcmove sub test or mov push scas rcr sub mov call mov adc repnz or (bad) pop cmp sbb std mov (bad) aam sub jo and jno push or mov or fwait or aam dec add insl test leave lods push mov dec mov push (bad) or mov das mov mov in sub push or or sahf stc and mov xor sbb movsb or cmpl pop and fsub js or mov lea es jle insl aaa divb mov dec dec pop jns or jl aam in dec xchg (bad) and mov lods jmp or cmp xor fistpl sti sub or push mov xor inc aas and notl add movsl aaa push push or push sub push dec roll daa or arpl mov dec xchg cmp insb pop add jl lret jo adc add adc or notl add xchg (bad) (bad) jne inc mov mov in pop add push cltd shrb mov iret mov push mov loope cltd mov add in add and out and jbe mov mov test add ror add out adc jp cmc jb push loopne dec dec lock adc adc lret repnz jge aaa inc fildll into lret xchg or scas mov jge neg sub mov pop test dec cmp out xor sbb jne pop fwait std cmpsb mov lds aaa push aas (bad) repnz mov bound iret and or add mov cmp xchg adc sbb push (bad) mov pop pop mov cmp sub xchg das test ljmp test mov shll push shrl pop aaa (bad) mov fdivs and xchg dec stos inc in xchg or mov cmc sbb mov add or mov xchg sub scas out data16 les jge je (bad) gs adc iret sbb into mov sbb les mov mov fild test mov cmpsl ljmp cli fimul test and aad hlt out jl push pop fildl jns outsl out mov jmp or cs sub pop cmpsl inc pop mov sti mov movsb push (bad) leave icebp adc jns mov jne sti test leave add dec mov mov jl arpl repnz stos push mov xchg cmp ret icebp dec scas push cmc xchg aaa xchg dec ret inc jne fistp dec xlat fs rcll dec inc (bad) cmc cmp out imul push out lds jns dec sbb test adc pop int insl push mov add cmp inc test sbb mov fwait or popa push cmp dec jno sub pop imul dec cmp dec add mov lahf lds adc punpckldq stos cmp add mov sti std adc imulb xchg sub rorb dec js,pt xor fbstp xor aas stc call std cli cmp repz dec xor dec in out (bad) or pushf cmp jle cmpsl leave icebp repz jb aaa cmp hlt mov loopne xchg inc adc dec lods ret fst push sub popl pop xlat xor jo (bad) insl inc sbb outsb test jb and mov pusha inc jns or fnsave cld adc mov and adc jnp add dec cmp jp dec push or call push jns adc aas and pusha insb pop adc fcmove in jo std sahf pusha test xchg int xor sbb jge dec stos (bad) xor insb fwait sbb test pop cmp (bad) pushf ljmp sbb dec pop add std test cwtl mov mov lock or sti cmp pop scas or mov lret add shrl scas scas xor popf sbb movsl je and and xor adc inc add int jg fxam adc pop push push mov mov dec mov test subl leave jae inc cmp les inc or sbb dec adc pop or enter xchg test hlt push mov xor inc mov push lock and mov aad (bad) mov push rorb push dec loope cs shrb mov adc inc jmp inc fstpt and aaa aas adc outsb xor add test jbe cmp sub cmp ret (bad) faddl jle cli les add lret dec jmp or adc cltd incl push or add divl adc pusha or scas sbb pop jne insb pop mov mov cmp jmp (bad) pop in sbb jne fmul mov xchg imul add cmpsl xchg xchg or es mov fbld psubsw mov enter sti dec (bad) pushf adc pop es loop (bad) rolb lcall or jo jg mov sbb adc xchg dec mov lahf scas (bad) adc pop dec jo or add push pop jns,pn jmp in imul and sub or jecxz stc lea aam add sbb pop adc imull addr16 xchg mov call adc xchg xor lock sti std mov imull or (bad) (bad) pop adc pop mov in pop insb gs icebp pusha imul (bad) int aam cld dec mov outsb leave pop pop repz sub adc lods xor in cmp jnp test icebp dec pop lcall cmpsl in add dec push es lahf rorb add dec cmp xchg mov mov cmp in lret rorb cs and jo scas mov movsl lds and jle pop out roll xchg dec es (bad) and stos imul out in pop mov rolb imull cmp addr16 movsb xchg ss mov lea jae mov xchg dec mov xor (bad) div cmp int js inc aam cmp cmp sub fsub rcrl cmc iret arpl dec lock cld test fnstcw push gs cld shr push insl nop mov add inc pop stos (bad) sti mov and push cmp pop inc rcl (bad) mov lcall stc mov inc jmp out cmc repz sub cmp test adc jg lds mov sbb or decb ss pop cmp je pop cmp mov fsubrl cmp inc fwait or scas or (bad) bnd aam adc jbe pop pop dec (bad) or cltd nop in ret cmp loop jg into add sub imull dec push mov mov in mov loope les mov jge cmp fstl (bad) or mov out arpl pop in popf out sub scas pop sbb jecxz nop xchg divb cmp mov adc cwtl in test repnz cmp xchg push sti pop dec pop lods push (bad) jns les or loop popf hlt ret sbb shrl frstor push or xor test in mov sbb leave dec push xchg mov or pop mov jg insb or sub inc aas pop in sub cld lret and jp (bad) mov cli (bad) jmp mov sub or add xchg in and aam push sub mov xor mov mov (bad) icebp or lcall js adc fldl ja sbb push or or or mov cmp or outsl mov pop (bad) dec or and (bad) mov popf mov jns imul or pop mov sub repnz fadds dec dec lret sbb mov xchg sahf imul test or xchg cltd xor sbb or xor call inc cmc out xchg pop imul mov psadbw push stc loope out mov cld mov iret dec ljmp or sbb or je cwtl mov sub data16 push imul lret mov pop xor and or push or pop cmc cld sbb or dec sub push data16 incb mov jp dec addr16 xchg leave ja repnz jb leave inc out mov lahf test dec (bad) addr16 or les test or stos int fidivrl lods aam push rorl and sub jns pop fistp and std fmul popa add sbb ss mov push sarl movsl jl shr mov dec int sbb mov popf xchg push movsb lods xchg xchg pop jne xchg ret jo cli add rcrb and and leave mov lds mov pop pop pop scas push shlb pop ffreep jle pop aas test popf out dec inc or mov inc (bad) je add xchg add cld mov test iret stc ret cmc mov stos out jno xchg repz jae xchg sahf ror xor lret pop add add out sarl mov pop jmp mov fstpl xchg test or lock imul imulb leave push pop imul mov int lods shr xor xor adc (bad) push adc add or iret sub xor add popa add aad cmp fadds or or je jle js cmc dec inc imul (bad) xor lahf xor pop inc sti lock loopne fnstsw repnz push sub iret insl mov std and add sbb repz and lock mov fldt je test mov in icebp jae add cmc insl popa mov add adc fwait popa pop ret mov inc push fld loope mov fnop cmpsb jo addb stos or adc pusha idivb popa jne mov retw mov pop in lahf mov insl and lock pop push push xor adc (bad) xlat lea lahf sahf enter push icebp mov add jle rcrl or or rorb je adc leave sbb mov and test mov cli jb mov test mov insb mov inc mov xor fsubrl movsl jno xor outsb mov xchg lea xchg and leave mov stos test dec inc loopne mov dec pop sarb repnz dec fiadd gs mov ds ss adc ret and push bnd leave sub mov dec cmp insb testl dec hlt outsb in stos push out adc fist or es dec or sub test jns mov cmp imul fiadd aas cs pop adc pop and and or mov push or xor mov imul jl notl test cmp adc out (bad) mov sub (bad) mov sbb fs mov movsl push test aad faddl sub popa dec sbb aad xchg (bad) aas test xorl lock mov inc cwtl subl xchg mov push add jl fisttp test in in call mov int mov ja icebp outsl jbe cmpsl mov push inc mov movsl pop jmp push add mov lods test or or mov xchg push pop out daa xchg adc mov std mov addl stos imul or bound pop mov cld mov push btc mov or push add fmulp jbe cmp push cmp dec jecxz mov (bad) (bad) dec mov sub or xchg push or mov out lcall sbb lock sbb sahf xchg sti dec adc fsubs je fisttp ror cmp cmp and or int3 mov push lock and or icebp push sub or or fisttpll push iret mov or lds push inc sub sbb dec in int3 push add mov jnp or pop sub (bad) sahf (bad) or and pop mov movsb mov (bad) adc mov into (bad) fwait pop cmpsb adc dec push sub aad (bad) xchg jmp repnz adc (bad) xor jo jmp sbb and wbinvd push mov dec fisubl xor and adc or and fistpl es xchg testl and xchg je ljmp (bad) jg push push std or xor mov (bad) aas stc sub inc fimull or cmpl lahf add jle mov jo (bad) shrb or xor rorl jbe dec inc ficompl enter dec mov (bad) xor or popf mov (bad) pop notb ljmp jp sub lock mov (bad) mov and sti out test or push dec fmull push sahf pop bound mov cs aaa cli in cltd xchg inc mov out inc or aas adc (bad) adc and cltd in or xor jp sub sti mov or es or cs decb or rorb scas popf adc adc pop mov jl shll ds add mov cmp sub or dec out stc mov xor pop or mov push popf out iret push fsubrl test iret cli mov notw push push dec mov cli loopne mov xlat test stos pop xor lret scas pop xlat mov movsb mov lret shrb arpl push dec inc pop jne cmp adc mov inc pop adc ficompl add mov aas (bad) lock xor add inc lods pop or adc push fs adc cmp std ds jno rorl dec in scas xor pop and xchg out ja out flds das and daa test cmc dec cmp test mov leave jno lods pop hlt fild and and decl sbb test and or fisttpll divb scas cmpsb xlat adc nop and xchg arpl mov mov out add dec (bad) hlt cmpsl jle push (bad) icebp jno bound into mov jge jle mov iret dec xchg ja cltd insl notb xor dec fcos repz cmp dec and fstl or adcl jle rcrb cmc aaa ret dec cmc inc loope pop push inc lock sub cmp and sub lret mov mov dec in insb cltd or xchg mov mov adc fcompl mov icebp add cmp in stos mov adc test xor inc shll jle in (bad) ljmp inc lock xor and outsb lret scas dec fwait xchg je jmp jns int3 mov cmp dec lods cli outsb xor stc jns push lods pushl lock adc cltd std jle pop inc sti push mov cmpsb lahf lock pop arpl xchg stc out inc vzeroupper divps test addr16 dec insl idivb pop das adc fsts cmpsb lock je rcll sbb sbb jmp pop sarb flds mov mov int lock adc mov mov scas mov push pop mov pusha or cmp sbbl and (bad) adc gs dec loope daa push notb jnp push cmpsb int3 out out out incl lahf mov or pop mov or and ret ficomp mov (bad) xor mov fnsave scas mov std cld in cmc cmc or (bad) pop mov xchg pop or cs mov inc divl or adc in or int jns mov mov mov out mov mov cltd xchg or or lds or fwait mov add into jmp fsts lea pushl xor or les jae or inc arpl mov arpl add in sbb dec (bad) daa pushf stos mov out inc inc sbb jnp sub adc jno mov xchg scas pop adc pop bound or loopne pop add inc leave add bnd xchg adc out insb xlat (bad) sub push test adc (bad) (bad) cltd jne dec jp jge xchg inc lock cmpsl call or and out or mov fs push test inc jno nop pusha stos jae ds stos int3 popa adc sti xchg jo adc inc (bad) dec ljmp leave dec aaa (bad) das sbb test jle push and sub dec stos sbb inc (bad) add adc nop and aam xor lock push cs test adcl iret push dec mov xor push pop sti and xor repnz or imul adc lods neg jns mov aaa pop les js mov add int3 mov or outsb mov or adc mov fmuls lret not dec sti xlat or int3 jmp jne cltd cwtl pop repz loopne repnz scas hlt push hlt mov xchg fnop xchg mov push inc and lock xchg push lea dec mov das push fucomi cld cmpsb jbe push sbb or outsl inc ljmp std adc and mov jecxz into sbb std cmc leave mul rorl add sbb mov adc (bad) repz inc pop cwtl cld sti cwtl mov mov jecxz lds sahf dec inc sbb insb mul or push xchg jae xlat push popa push (bad) cli lcall xor sub or mov lock mov outsb and or pop sti imul out in ss (bad) jae outsb or outsl and test xchg aam dec stos lcall fwait cltd dec xchg dec and pop push lret push std mov pop or mov lcall (bad) int js xor push mull sub jne lret or xor repz pop adc lock or cmp or mov jb push dec sahf or push inc test xchg mov ss jne add jmp fcmovne or cli xor ret pop cmpsl dec popa mov inc and insb shlb push pop (bad) pop cmpl ljmp add cmpsb add sub std xchg and das fistpl or aad or push push or or data16 jecxz or cmp cmp lock jae rclb cmp (bad) popa fimull (bad) mov lock inc lcall adc jmp mov push or sbb shrl mov mov jns lea js fwait imulb popa or sti and repnz out xchg or adc mov iret lea in or dec and daa popf jmp aam or lock jge in dec jl pop jecxz inc je dec jns shrl pusha pop into dec int out add inc iret dec jmp lock and pushf jo mov lds repz sti hlt movsb imulb cmp test mov and adc loope loope and mov inc fidivrl ja cwtl mov push mov jbe aas jne xor pop or icebp xchg xchg mov mov lcall push (bad) xchg adc mov mov or cmp xor sbb aas mov ficom es pop movsl push insb std dec push cmc (bad) jbe mov lods sahf scas inc pop and or stos cmpsl scas xor jbe scas out sarb mov addr16 in push insb xchg lock jns lods jle adc add ret fucomp (bad) aam (bad) movl sub (bad) jne push push mov fldenv popa nop aaa jb dec mov cmc adc subl push push (bad) fisubl xor dec xchg push fld1 push addr16 mov jle adc mov mov cmpsl jo mov add fldt xchg icebp dec xchg (bad) les cmp push ss inc mov in sub rcll xchg jae sub push add in jno loop sub iret test add (bad) mov jne inc mov loopne push fildll pushf push psubsw (bad) mov and xchg roll iret cmp repnz lock loope cmpsb adc adc scas adc inc pop dec sbb push ficompl into mov popa dec lret shll mov test jp aaa in aas in sub ret jmp or or mov arpl xor sti adc sub mov mov inc rol cmpl xor mov push push out fmull (bad) lods jge jns out movsb pop (bad) (bad) xor push adc push inc sub das adc add mov rcrl sbb fmull xchg jge rolb or into wbinvd or ret fs ljmp add sbb scas sti mov arpl inc mov lock dec push sbb cli mov js lea repz lods fwait bound or jnp movsl rolb lret mov cli pop cmp sbb int3 enter mov lock pop aaa popa test mov mov adc jb cmpsb xor mov push shll arpl mov xor mov dec push loopne jb (bad) cltd cmc or mov jbe test sbb cmp xchg jl faddl adc int outsb ds pop and mov xchg sub mov lock orb push xchg mov adc test dec cmp or jmp fcmove loopne or push push aam inc stos fstp sub sub mov fimull imul xor mov dec cmp xchg repz mov movsb mov adc or mov sbb or les testl leave mov or pop orb xchg xor mov xor or xchg mov xchg addr16 xchg xor gs lock test or cmp cmp push test pop (bad) cmpsb push lock lret xor test lea cltd je push or outsl mov dec add push sti stc push lods pushf mov pop (bad) dec or jmp push test push arpl cmp popf ja or loope cmp cltd add shll push push or xchg lcall in decl or in (bad) jo jno notb xchg adc in (bad) fisub and mov or test adc orb lcall sub inc popf popa js lahf gs fidivrl dec dec or xor cmc mov or add repz jg popa adc lods or push in iret aad dec sti int3 xor jle pop ja or xor (bad) aam cmpb pop sbb sbb fcompl movsl xor or jnp fnop mov aad and scas cmp ret or or repnz rcr rcrb dec outsl push xorl cmp adc scas add or das push (bad) jne leave test mov inc jmp sbb jno dec or inc mov fstpt sbb push aas inc jmp movsl (bad) es adc adc leave push jmp jg insb stc sub pop outsl pop jmp push pop int3 jb stos repnz sub in lods mov (bad) mov sub test cmp out dec sti jo in ss arpl mov imul mov lahf in rclb xor or cmp movsb out (bad) int stos adc and jmp or or adc in popa jb test mov mov cld out pop repnz aam dec sbb cmp add jae mov push shlb in cli pop dec mov xchg mov stos adc out (bad) pop mov or loopne aad fsts dec and (bad) rclb push loop mov or pop mov or (bad) mov repz push adc in adc cmp jbe popf orb dec xor or movsb jg and sbb lea cmp into lods jmp mov into or mov xchg xchg xchg pop and sub dec xor test jnp sub add (bad) mov xlat xchg and mov insl sub shl loope in cmp inc xchg jp fdivp je mov repz (bad) je mov (bad) jb out js or ljmp out jl inc and and push mov lods pop std aam sub sub push inc cs lods mov fisubrl mov add (bad) and pop add fiaddl mov pop clc cmp pop out and in loope je jno int jge xchg loopne adc mov mov lds stc cmp (bad) jbe (bad) ds or mov movsl jle cwtl inc in in outsb push mov lds sub pop insl dec mov dec xchg (bad) jmp and mov divl inc mov mov adc addr16 icebp dec dec or mov jl (bad) clc xor dec add out insl inc pop ret mov lret aas sbb fmull adc xchg popf inc xor icebp sub sbb lds jo hlt (bad) stc ljmp xchg popa add or (bad) shlb push clc add test inc test fdiv pop xor pop fisttpll or xchg imul fildll stos xor outsl enter dec sti leave dec popa divb in push and jns outsl cmc adc sbb cmp adc in push or xor push fimull lods fnop out repz (bad) adc or mov out pop dec stc pusha (bad) je inc or or gs mov daa mov pop dec or mov es sahf inc popa jmp popf mov mov in cwtl sub cmp iret or sub pop push popf mov outsl pop in inc shlb in and (bad) aaa (bad) jge frstor push inc insl ss and stc sti in push mov dec mov insl aad mov or mov les push sbb es cmpsb hlt and arpl lret mov test adc mov adc sub movsl or arpl cltd pop push loopne dec or and (bad) push loop popf movsl aas mov xchg dec andl in mov fisub movsl nop mov mov add lret ds out pusha aam or xorl inc rolb testb and adc mov repz cmp rcl lret popf xorl adc xor jmp and sahf dec sbb sti fstl pop sbb sub iret sbb sub cli push and mov movsb or cli xor inc mov popf leave lea sti loope repnz adc lock out (bad) nop pushf ja cmp push cmp sub gs mov pop adc xor cltd test xor pshufw mov cmc dec mov and mov enter add enter (bad) imul or push push sub mov or or adc sbb idivl cltd pop or push stos mov lods pop fldt testl fs rcr jmp mov fsub rorl fildll fmulp inc repz out cwtl (bad) push jbe mov icebp imul mov and push sub jmp cmp mov leave daa imul imul or daa cld imul jg mov mov adc mov lods test jns aam dec out jmp or cmpl or (bad) stos mov (bad) xchg jns and inc repnz xchg iret pop dec ret into (bad) push or pop lods cltd cwtl inc (bad) (bad) or ficoml imul jb (bad) notl mov lods push lds add mov test mov mov mov pop or push sub in loopne (bad) ljmp fidivr loope or and mov mov lock mov pop ret frstor or imul (bad) sbb mov jae pop mov or dec xlat dec or (bad) inc rcrl repz xchg and stos pusha sub stos or dec sub pop mov fdivl imul stos or xchg cmp scas fs dec (bad) ja sub jne stos (bad) mov mov sti loop push cld inc adc mov adc mov push ja cmc inc imul sti cltd push dec fistl in pop lea (bad) loop cmp rcrb imul jns or add in sub or outsb fldt inc in mov jno test stos add fstpt test mov adc int3 fimull push jns push or and stc jge in cld push adc lock (bad) jle outsb stos rep sti int jecxz mov adc inc mov jb mov test and mov xor jns cli jno pop push sub mov or out lods stos out dec out add pusha push call std cmpsl xchg or iret jp into inc sbb or mov (bad) or (bad) fidivrl or stos push lods add out xor aas mov jle dec jae out (bad) mov popa push repnz adc fxch rol xchg not adc or inc cmp cmc lahf mov (bad) dec leave adc ret in or dec out fcompl data16 lock hlt and pop fs adc cli arpl call shll sti sbb push and in lock jns cmpsl adc pop mov cs adc lcall jge sub mov jg imul cli rorb sub sub stos mov inc add rclb aas int3 push inc pop adc (bad) call test or pushf jecxz push (bad) jns pop dec cmp je iret mov push cmc sbb out cmp inc push fisubrl jmp ret out into dec or shl negl mov pop outsb or inc add mov addr16 (bad) jl out adc test or hlt lock sbb lret loope mov or out inc jb dec repnz add and sbb or pop add pop push inc lret subb cmp or push and jb cmpsl fstps sbb cmp (bad) into mov pop mov sub mov dec fs or adc fldenv pop inc push mov jb pop mov rcrl movups or push and (bad) lret decb (bad) icebp ret inc frstor mov xchg imul (bad) mov dec test insl ds dec insb or or jl adc int xchg mov ret rorb mov lods cli mov lea test test in es bswap or mov xorl in lahf adc xchg dec sti test das xchg mov jecxz xor roll int out xor jo and lock jg and mov or (bad) lods push pop rolb mov ljmp fsubr movsb (bad) adc mov sub or sub (bad) mov fstl and negb push mov push adcl ja pop gs mov out cmc xor adc idivb arpl sbb mov loope push mov add decb cmp xchg mov inc mov adc fiadd push sbb dec ljmp ljmp inc aas mov fimull das popf push or das mov fadds dec mov and jno bound cmc cli dec les (bad) sub mov aad (bad) into stc repz mov dec sti jb xor jmp movsb or pop xchg mov imul pop lea mov xor test test mov sub cmp shl or int3 xorl sub adc out imul adc jno xor and sub pop test mov lcall stos dec or push or popl rorb ret popa jmp xor adc ret inc fcmovne xchg hlt push rclb or sub pop add int3 test mov fsubs aad movsb inc pop in cmp test mov push sub pushf mov mov sub pop mov mov test insb arpl dec push or pop cmp jl pop sbbb mov pop faddl (bad) fldcw mov loop out or mov cmp out sti mov cmp mov movsb jg xor dec bnd outsl stos mov std adc jno jg icebp lret or mov dec aad lahf mov or js mulb mov stos adc or cmpsl or sub mov fbld pop xor push jns in mov scas insl pop hlt or add divl jg aas mov and and jg mov add popa test mov mov jo or les jbe sahf lret sti (bad) fildll dec cmpsl negl psraw shrl cld mov pop fs (bad) jae cld xchg mov dec pop test sbb ljmp cmp xor push (bad) or fs hlt jmp fidivl lret add imul push mov in mov push or loope push sarl jnp outsl movsl int3 mov or add mov lahf or inc mov (bad) xor repz or jmp cmp jmp add push leave or fxam fidiv mov jo pop imul repnz aam clc sbb mov adcl sbb xlat add xor roll or adc mov fimull nop adc testl mov mov cs lock imulb sti add push (bad) repnz scas or jmp add aaa sub or sti in fistp inc sahf pop rorl arpl fnstcw ds stc push les mov dec andl or cmpsl mov adc xchg lods push mov nop or push out inc xor ljmp cmp sub sbb mov test or leave pop mov fdivr xchg add stos cmp dec or dec mov xlat or cmpb out mov sub push push add mov dec sarb mov mov aam adc test inc mov mov mov mov and ret jmp cld push sbb pop push jle jns negl into aam push mov fcmovbe jmp insb es mov lods and cli jnp out andl rcrl enter add jne adc jl pop (bad) jae enter dec cli loopne pop sub cli shr fsubl jecxz dec enter mov iret cmp retw xchg sbb sahf add inc test into push or rep xor xchg pop lahf or lret lock ss cltd xchg test insb pop cmp pop bound add mov dec dec das xor loopne rorl mov (bad) sub adc fxch push fstpt lock dec mov stos bound loopne std in jns repz push or scas insl inc add jns out adc ss jne dec imull pop js or jge jmp sbb imul (bad) in jne xor outsb rclb dec in push test and mov aas scas xchg pop out int stos cmp sub (bad) pop mov faddl and enter sahf out push cmp loope inc and adc std adc cmpsb cwtl icebp cli mov nop mov jecxz es dec jmp les movsl mull and leave and xlat loopne sbb pop popf mov cli jno cwtl mov mov pop sbb loop or and (bad) sahf and arpl out mov repz scas or lret dec mov sbb out iret in cli push ficompl cmc or ljmp repz pop push dec test inc add jne pop cmpsb jge (bad) test out jle sub testl leave mov add jo pop lcall dec push js lret stos mov fwait hlt cmp dec pop lcall cmpb mov jmp mov sbb test jb fbstp mov (bad) (bad) repz stos insl push bnd cmp enter mov ret stos test sub jo andl es popf out or call cmp pop or xchg pop or enter adcl imul lds hlt inc push gs pop mov out cmc mov pop sbb lea ds clc lret mov jbe out pop (bad) jl xor test or mov or orl sbb add jmp cmp and ror or or or ret add jle inc into lock add or mul test dec icebp iret cs cld or add inc jbe jp pop dec or mov dec ror addr16 lret mov pushf rcl shlb mov sbb data16 int3 dec sub or dec jns loop (bad) cmp pop cwtl mov cmp pop jmp mov xchg gs scas or jne out int cli or out (bad) pop movsb xor lret push roll or add cltd mov push cmp xchg daa sub mov test js cmp loop sti stos imull test pop iret in fisubr mov sbb fdivs or xchg push (bad) or sbb or push cmp add ja or mov repnz js pop test pop fwait or imul out lock sub hlt mov mov rorb lods xlat xchg imul daa repnz repnz push lods sti add daa adc and jne leave sbb or imull add cld mov mov nop add jns decb xchg sti mov push fldcw mov add or cmc push lea es mov or add mov or (bad) in fs ljmp inc ffree and and loope xchg lods push out or inc aas mov xor es fisubrl push mov sbb adc adc (bad) dec mov or sbb aam outsl arpl pushf xorb push (bad) ret jae or mov out mov jle fnstsw or push jne push xchg and or pop incl xorl out mov jle iret add or shl (bad) jae jns fstpl mov mov jb and testb bnd es sub sbb jno pop clc mov insl gs push decl push add and xchg jmp sub stos cli das dec loopne push in in mov and push je or pop or ljmp or and add add mov sbb jne repnz jmp orl outsb lods pop scas mov in jno and pop adc and cwtl bnd jns enter add cmpsl jno mov outsl dec arpl mov in cmpsl inc or xchg or cmc fxtract ss push pop mov frstor pushf sbb hlt mov push xchg xchg out jmp push dec mov or fldcw sub add push fldenv insb sti pop sbb mov pop lock dec push xor or pop stc mov in das or mov aaa jns (bad) loop test inc mov or into pop scas sub or mov pop in lcall out push add test dec jo sbb loop xor (bad) lea inc nop jo sub fldl ret push pop js xchg inc or cwtl fwait jmp neg jns test lea ss jecxz xchg push pop daa jb mov mov scas adc and cmc xlat inc and push sub imul repnz lods scas cltd jp mov test imul inc insl addr16 mov into pop repnz dec or cmpsl jle in mov adc and and xor or xor xchg aaa enter pop ret mov ss xor sti mulb stos cmp fninit cmp pop pop cmp mov or mov (bad) mov dec test jno repz icebp pop pop fwait or cli (bad) out aad sub add or fldl daa push or adc aaa test fsubrs inc fisttpll xchg and jbe jle into sbb mov cmp test or (bad) lock sub notl movsl pushf lret push or cmp pop les mov inc mov das xlat ror push mov scas pop dec or xor jnp leave mov mov jae cld or inc loop or sbbb bound repnz lahf movsb pusha mov fildl testb fs (bad) pop add cmp or movsl gs or dec repnz adc inc xchg lea insb mov pop jp mov push rcll lock pop push imull pop xchg lods enter mov enter ret int3 xchg mov adc roll or jns mov stos rcll lods ds int or leave ljmp mov stc cmp rclb pop or pusha das test mov jg (bad) (bad) sbb fwait xor cmpsb dec mov dec ja sbb xor xchg fnstenv dec test and inc ret dec imul or sbb insl pop or or dec lods cmc int mov mov dec dec aad cmp or sub movsl mov push iret fisttpl fcomps inc sub mov repnz data16 test ret imul loope rcrl lea mov xor std pop iret adc fidiv mov clc fldt adc mov adc out popa cmp dec cltd sub fdivr xchg or mov push mov icebp leave xor xchg jg mov fcomip or push mov test mov add rorb ror mov pop repnz or pop insl dec push pushf jns ljmp repz leave int xor out dec or adc jmp or mov jecxz in and ds cmp xchg sbb cmp loopne and mov cs dec movsl cmc cli jg leave or imul popf insb leave insl fdivp jmp mov andl pop adc repz dec jg inc ret dec mov mov sub addr16 add jns cmpl mov popf or stc adc or jo dec insl xchg fdivl addr16 fistp lock imul push aas (bad) fldenv xchg sub or cli jae int3 test cwtl push ficomp ficom loopne hlt push xor in inc inc mov inc pushf adc pop flds and xor mov test int push divb stos adc mov les dec fstps (bad) aam pop mov push sbb insl pop adc dec inc ficomp dec push (bad) (bad) mov scas leave shr xchg jae (bad) into sti insl cmc adc xchg fimul popa push dec dec jne,pt pushf mov jmp adc call inc in cmp addr16 jmp cmp lret jmp xchg scas adc imul mov stos lcall stc jecxz in icebp push mov (bad) iret icebp sub hlt scas stos (bad) jno pop lret and es sub ja inc cmp mov pop insl test call call mov jno mov insb aaa jmp push clc ficoml loop xor fldcw fsts int3 jne xor lret test insb dec mov pop inc push out fldl2e cmc test rorl sub jbe fwait and loop or or mov inc (bad) xor das ror dec add mulb cmp pop insb dec and dec and dec xor std in jmp sub into cmp dec out cmpsb fs xor cld dec pop cli cmp cmp mov mov (bad) addr16 sub mov jnp or fadds daa xor xchg lret sbb pop mov aam lds inc into jp pop ret mov (bad) xor jecxz sub dec test lock das add lock mov or (bad) jno inc push repz jo and mov push pop loop test sbb scas rcrl data16 aas mov fcomps inc faddl mov pop mov pushf pop hlt repz lds add mov mov fdivs and cli std xchg inc xlat dec imul aas into or pop aas add movsl mov sbb sub mov add dec jmp sub push inc mov adc (bad) test mov adc dec cwtl or test movsl sbb xor or adc sahf or cmp loope pop int (bad) sbb jbe mov push cwtl lcall push adc in stos dec rdpmc lods or mov mov ror ficompl mov jg sub or loopne ss iret rclb jns fisubr std mov arpl cmp mov push add popf xchg adc sub jp pop leave mov insl in pop and imul je out push or popa push mov mov movsb cmc inc imul or cmp xor or jl movsb push test or retw int3 adc or inc cld xchg pop sbb (bad) fidivrl test xchg insb loope rcrl popl jmp repz stc sarl lret pop cld pushf sub xor add mov or or (bad) outsl loopne out icebp pop xchg jmp or insl fidivr rcr push data16 jp mov jge mov jae inc push cli jno or test out sbb pop test jae add sbb or lock pusha call ljmp add das outsb and dec and data16 jg arpl sbb push sub pop adc inc cld jae cmp cltd jns or fs clc fistl out out adc mov cmp cmpsl jbe bound dec leave sub jl add or jo out cmp popa cmp xor or add push loope je adc push mov sbb pop pop sti xor mov xchg jecxz loop repnz xchg adc pop stc jae fstpt mov or cmc repz fsubl fwait or cli mov push jle mov std sub sbbb lahf dec stos sub arpl test jae outsl fdiv cmp xchg xlat push pop test pop imul add movl push xchg movsb sub imul mov loopne test pushl push loope ds jmp test rcr mov cmp jb out mov leave pop pusha xchg push aad add mov (bad) mov push scas and mov pop test iret fwait jmp daa loop scas or hlt xchg add jns mov push ja push mov inc cmp jecxz sbb or jae arpl repnz xor adc xchg xor jecxz push ret sbb pusha std mov popf or hlt lods jb dec aad out imul rol (bad) insb sbb in pop cwtl aam out and mul add rorb fstl mov rorl ret andl mov and shrb ja fimull push xchg sub imul icebp push jbe daa sub lret jp xchg adc dec xor fs and mov adc mov insb stos sub push (bad) or fbld fistp ja pop lahf test sub imul sub lods ljmp or cmp dec xchg push fs ljmp out das or dec mov adc cwtl stc cwtl cli sarl and cltd mov fsubrl jno data16 pop in lock push sbb mov lods push fs xchg inc imul mov repnz or inc xor arpl repz adc movsl test mov add sub mov loopne adc aam ret notb and xchg adc arpl xchg cmp inc out or fisubrl add dec test stos popf addr16 scas cld or cli into (bad) cmc cmpsl leave jmp lods push or aam jne push fnstenv addr16 push out fs or push test or rcll sbb repnz mov lea add scas (bad) (bad) insl adc sub mov lahf add jne hlt insb aas xchg sub sub add iret std jb xchg mov rcll inc sarb mov shlb mov inc ror xchg cltd pop mov push pop jp inc rcll (bad) not and xchg adc fs or test or aad mov nop sahf mov fwait loop arpl adc or or sbb inc mov pusha push adc add mov jnp pop sti (bad) leave imul test pusha adc rorb lds sbb lds call or jg mov incb fdivr sub orl adc fistp and dec pop (bad) jl jle or lret jb mov mov cmp cli xor in mov rcrb rorl pop dec push mov mov jno xchg sub lret orl fwait pop mov loope xchg dec aam adc and (bad) mov add cs divl int3 pcmpeqw xchg or (bad) cmp push xor push sub into (bad) ss mul xlat lods inc mov cld cwtl push pop or cmp aad lods or loope (bad) mov push or outsb clc mov es imul dec fwait xor mov adc mov nop lret or pop fildl mov or test mov aas xchg mul mulb dec imul aaa or loop sub mov ljmp hlt roll je or or xchg pop imul xchg sahf je jl test mov je out cmc cmp xor test fcompl gs pop out jge dec xor lret dec xor sub flds inc inc enter fwait insl dec cmc inc icebp loop es sbb insb mov mov or xchg inc gs add inc jbe in add test fldcw inc fist inc sbb cmp pushf cmpsb or aaa cmpsl stos divl and out lods out jl jo pusha into pop mov stos sbb fdivl mov dec or cmpl add xchg out dec mov push (bad) xor mov bnd in mov jnp pcmpgtw cmc adc or push dec mov icebp loope loop mov mov adc inc sub jl call push lret and xor jne notl insl add sub clc xchg mov movsb jne (bad) cmp and sti arpl dec mov dec mov lock add xchg test ja loope scas jl pusha add mov pop jecxz mov out dec addr16 dec enter jo (bad) mov stc lcall fdivl mov in jo icebp arpl rcl pop popf add mov push jmp and jle mov cmpsb push adc or hlt mov cmpsl xchg in jg xchg mov sbb idivb movsb mov and stos add idivl fucomp xchg leave pop in lock mov insb repz repz adc out cmpsl cs cmpl insl dec sub fcoml xchg vpshufhw shrd pop cmc sub stos or idivb or sbb loope (bad) sti lcall imul lcall or adc fisttp adc inc leave hlt jp push inc and icebp test adc jb (bad) mov pop out stos pop mov movsl mov divl mov lds inc pop enter mov pop pop dec movsl movsb adc out jns mov or sarb adcb xchg cwtl nop stc and fwait push pop stos fstpl bound or scas fwait sbb leave jle cld imull roll mov (bad) pop or push loope add outsl mov fnstenv lods call rorl fsubs stos test xor xchg iret mov or mov and (bad) push cmpl insb imul out arpl mov int cmc mov jecxz sbb cmp jge push test lret je dec xchg or adc or inc data16 jo xor rorb test adc sbb sub jns mov and dec out js pop dec adc lret out sub add cmp jmp hlt lret enter xchg jp mov xchg stos repnz ja pop lock ret xchg xorb push jb (bad) neg add xor inc mov repnz ror pusha lcall stc mov or xchg xlat mov add and fwait sbb dec or jp imul cmp push pop jnp cwtl xchg jecxz mov ss ljmp or inc pop add push mov jp jbe in rorb dec cmp lea adc or test mov je and int3 lock xchg leave movb je insb or mov repz mov in insb or add (bad) xor out imul popa adc int3 clc pushf pop leave daa add lret cmc mov xlat (bad) pop pop mov or add pop mov add jge lret loop cltd faddl xorb das mov or add daa push xchg (bad) mov popa mov out (bad) add or dec call adc inc or std test lock loop or test mov cli cwtl jae adc aas andb jo or iret sti cmp mov sahf mov ret (bad) mov loopne push sahf mov jecxz mov cmc sarb das mov je add mov inc jo push cmc out inc mov inc jecxz leave push or movsl fiadd cmp lock add sub (bad) lret jmp inc or cmp or mov fstpl add loopne push iret adc jns mov stc (bad) pop inc cltd cs pusha adc in mov jno enter outsb dec in push push pop or ljmp in xchg jo stos cltd repnz mov leave in cltd ret adc push adc fisttpl in out dec xchg outsl cmpl mov sub mov das std jl cmp xchg jbe clc sbb test cmp std hlt inc push test add in pusha lea icebp aaa fwait dec loope arpl adc scas push pop mov flds xchg and and fwait cwtl adc rolb negb jns mov cmp popa repz push sbb jbe in mov repnz imul (bad) (bad) fs bswap sub cs lahf adc mov mov jmp mov inc mov sub cltd out sahf push negl add scas mov mov add add xchg dec cli and push dec jge and leave (bad) push or mov fsubp or adc mov cltd jle sbb ficoml jo mov ret fild xchg jns shlb lock loop test repz inc sti dec shlb jns bnd xchg jb jge pop add or mov stos fiaddl nop inc mov imul stos sbb dec dec push lds mov pop mov aam rolb test or imul daa insb add sbb mov scas mov sub repnz popa mov fimul cmpsb jle scas gs sub outsl (bad) or test das arpl dec cmp adc pop fnstcw mov adc fdivp cmp push dec inc mov clc mov pusha or stc pop scas dec adc frstor fcoms idivl scas sub cmpsl ja and and or sbb fstps cwtl add pop add jl xorl jle aam xchg push adc xlat mov into adcb bound push mov out or sti cltd add or imul mov adc outsl push sbb (bad) ret les mov stos ja pop and or or repz (bad) rol or mov dec dec mov dec shlb or pusha imul out or pop mov fwait add jbe dec mov popf fnstcw (bad) lock jge orb mov cltd out sti es mov jg or and sbb stc call (bad) test fdivrl or jge dec or sub dec (bad) inc fcomip mov sbb xor cmp fldcw enter int3 push in iret or xor add hlt out dec inc in dec mov outsb sub sub leave jb or inc sbb stos fs cmpsl cmp ret scas jne pop xchg insb leave jmp dec cmp popf inc jl inc xor push arpl cmp xlat and (bad) leave cmp jnp incb idivl mov sub pop push jmp or ja and bound push or test or or sub sbb out outsb or ljmp or cmp or cmc push aas and jle in pop mov pop pop and mulb pop push add or push inc cmp and push mov lcall loope rorl mov jno into pop sbb pop inc mov adc pusha mov pop pop dec mov sahf inc aas jp or jecxz mov jmp cli (bad) or divl xor mov cmp loop std add mov adc xor stos out mov pop hlt mov out mov sub jmp cmp lock nop inc test insb test popa and divb inc in inc bnd push imul loop push loop aas mov mov cmc cmpsl movsb and xlat cmp xor pop cmc in push mov dec dec mov sbb negl les push xchg jmp loop repz (bad) add or sub int (bad) nop xchg ret mov loop test std xor mov push int add lock fisubl rorl into aad movsl (bad) lea or jnp lret (bad) push jecxz inc shrb outsl out push pop mov mov xchg popl sbb mov mov xor (bad) arpl jp and sahf mov mov xor out mov mov incb lahf or imul aad fsub or rcr test cmp mov rcll loope stos fs lock mov mov sub (bad) fidivrl mov cmpsb repnz nop popa push clc push jmp or push adc popa push xor imul push xchg inc lock in insl rclb (bad) lds mov scas repnz push ds pop test dec xchg push (bad) xor aas jb cmp ficomp push adc jae sub cld jae scas inc or addb aas push (bad) or jmp fcomip sahf dec dec or mov or mov jg dec stc xchg or aam jge sarl out repnz dec xchg stos add sbb dec ss mov pop sbb pop ret mov nop repnz cltd xchg pop pop inc or mov mov stos cmp in cmpsb pop insl bound sbb jae push and leave or das in mov mov dec js imul inc jb or cld pusha ds movsl mov push lock xor (bad) hlt jb cmp sbb lods mov roll rorb push cmpb jb sbb jnp mov jl adc or sub xor mov add rcll stos sbb ss fstps sbb shrl push dec test sub sbb (bad) sbb (bad) jb jecxz repz add scas or aaa and cmp mov loope imul jnp mov xchg shrb es jmp clc and cld test inc cmp mov and adc test jl push jecxz sub push fistpll and pop mov outsb xchg xor popa mov icebp sbb aad mov mov je ret popl sub js mov inc sub fistl mov xchg outsl push or (bad) out adc dec daa pop jno or bound insl movsl pop test inc mov dec inc jae jns cli or test push mov adc push dec xor pop pusha enter data16 lock cwtl aas imul mov sti pop add test mov jle mov xchg ljmp mov mov sub (bad) sbb cwtl xchg lock push sub xchg add (bad) stc mov lcall lods jb or std adc xor jnp pop cmp dec cld and lcall pusha xor sbb mov insb mov or pop mov cmc fs push inc or cmpsb xchg (bad) push pop mov sbb add mov mov cmpsb adc daa adc mov cmpsl das iret notb fbstp loop xchg and push inc or cli jnp inc testl adc jne daa dec or cmc jle insl shr sub mov xchg inc ror or scas xchg lret imul jecxz hlt jg mov pop or bound mov pushf sub sub imul cmpsb add and out or xchg or int popa fnsave and adc add mov leave lock add push stos mov dec xchg and or mov cmpsl repnz into inc jb ds inc hlt adc sbb test enter scas imul aas test sub xor rcrl dec or stos scas sub jmp jl in pop fcom jle icebp mov cmpsl fwait pusha jns xchg lock dec aam jge clc mov shr movb cmpsl inc mov mov mov (bad) sub dec push xor cmpsl adc test out or into popa add (bad) mov out imulb shrl adc jmp insl out adc movsl push rorb into jle repnz addr16 data16 xchg std out fnstsw (bad) (bad) ss inc loope xchg gs add mov jecxz out dec std stos adc scas fnsave (bad) out push jbe fidivl and stc mov arpl mov lret jno rolb push dec dec movsb push jno in xor test jmp or pop dec mov jae add push add dec sub out sbb out cli mov dec fistl mov insl inc pop pop nop repnz ljmp jne cmp cmpsb jle fisttpl push sub sti dec cmpsb lahf fcmovbe sbb std add ss cmp or popf cs lods adc loope in test jo dec dec clc mov insl add adc xchg add sub sti push add ja ret pop dec (bad) call sub fcomi push sarb in xor mov stos mov and mov or adc and lds cmp sbb mov adc (bad) rorl cltd dec div fidivl (bad) xchg cltd fimull jne cs adc and xchg cmc test dec dec incl outsb testl ror inc rcll cli pop mov jae mov icebp fs lods pop insl call or push add insb sbb jp push sub adc adc call lods fld loop in arpl loop mov xor orl adc adc or xchg inc out insb jae push mov sbb sbb push bound test daa stos sbb xorl negl shll mov push adc lods mov aam insl pop mov in pop mov lock push mov adc cmp push loope repz fwait test repnz or lods dec xchg pop (bad) cmc push sbb dec jl fs test add mov mov dec cmp bound outsl or xor and clc pop cmc cltd adc mov jbe rorl push bound jl cwtl cmpsl lret fisttp lds pop insl push stc xchg int addl aas mov ljmp out or jnp mov and adc lret in sbb push pop idivl sub xor pop repz xchg mov xchg out inc daa fstps pop popf idivb adc push or aad mov setno loope mov adc insl jno mov jmp cmpsl or sub (bad) cmpsb dec sub sti push push test xlat (bad) std leave pop jge das lds (bad) or aam (bad) add inc clc stc cli pop stos add mov outsb mov xor fnstenv mov aam xchg pop pushf test adc addr16 mov or adc loopne fbld imul push xor jg jae fistp mov xchg out dec leave xor lret shr or orb xor fistp pmuludq xchg loope or imul fcomp cwtl adc sahf add sub pushf pop cmp pop hlt pop inc and mov sub pop in or aas inc add add dec ljmp push jmp and mov aaa in aam int pop and lods (bad) mul adc inc push inc pop xchg xchg sbbb and lcall fisttpl or out mov iret inc cmpsb stos mov pop push outsb clc push rolb pop loope lret push or sbb sub sti rorb push xchg cmovle push and std mov or xor pop outsb mov bound dec lret loopne push shr jae scas dec sbb loop push jo xor stos cmp pop sarl inc scas and lock mov fcomip or rolb lahf or jne dec sti adc popa repz testl imul ljmp mov scas lods xchg sbb jp cmp (bad) push cld aam iret sub dec pushw sahf and js inc push push pop or sub addr16 mov adc daa dec xor scas enter cs push das mov push lods or push jnp fcomip cmc scas push xchg mov xor mov jge jmp rol push sub mov icebp inc mov iret xor (bad) jnp (bad) or mov lods in mov test pop lock fcmovne addr16 or mov add rorb imul or xchg xor insl addr16 scas insb or shr mov add add mov mov xor add mov test or mul add ret mov sub scas sbb sbb in push xchg mov and lcall sbb fldcw or mov mov (bad) mov dec mov lods cli pop cs mov inc pop dec push sbb jmp fistpl repnz int loop stos jae pop adc mov and stc jae xor mov pop and push mov hlt cmp notl and add mov cmp (bad) jae (bad) or popa xor and xor ss add dec or lea inc or mov pop sti into push bound jne lret sti and mov and cmpsb ret movsb (bad) daa (bad) mov cmc loopne jo mov (bad) mov fs aaa popa outsb and (bad) jo,pn sbb dec repz call or inc jae enter inc and roll lods mov jle lcall push and mov jo inc subl xor jno mov stos fdivrl or sub add fwait loope push test mov pop mov into sbb repz xor inc icebp cmp enter fist cld fs pop test or (bad) (bad) cmp clc adc fs push push jmp add mov cmc into aad jle leave lds cmp sub ss or popa in pop inc cmpsl (bad) jae xchg add xchg or or rorb or stos imul leave cmp or out lea in pop or shl (bad) lret or imul ja jp jno fxch adc rcll aaa dec dec clc mov rclb je inc iret or add jmp sbb (bad) sti pop push pop orb lods jmp mov push mov jno (bad) div in mov in push rorl orb xchg push shr or sti or xchg fldt imulb leave jnp sub jbe andb test mov sub outsl aaa cmpsb and mov sti mov cltd jle xlat aam pop pop push mov jmp mov js xchg add mov xchg mov fsubl cld xor sub outsb or loop rorb ret pop jmp dec xor inc cmp xor mov loopne jge in aam sub push adc pop jb lret sub in adc mov outsb push xchg adcl add lret mov jo ds push jl sti xor adc mov scas divl jo jecxz mov pop cwtl jae out aad adc stos aas lds and sbb push mov or aam and jne and out pavgw outsl loope sub int3 addr16 in push dec sarb (bad) add and arpl mov adc ror scas leave out lret inc push fnsave ja lahf pop add push push push jle repz fsubl call fwait or and push lock addr16 in push (bad) out and sarl decl stc mov popf inc jo jno xchg cld or or mov lea push test stc adc inc jmp or or (bad) xacquire mov sti fsub adc sub hlt cwtl frstor add lret dec or sbb push (bad) mov mov cmp sub cwtl or or xchg sbb test xor cltd lret cmp in xchg push or daa jecxz insb add inc in movsl fisttp xchg outsl pop or sbb out adc cwtl cmp in loop xchg add inc xor or or sbb cmp es andps in mov gs (bad) cmc mov scas adc mov (bad) lret or add leave or icebp and dec movsl add pop pop inc add test popf adcl or arpl push cld cmp or mov mov lock loopne jmp sub fwait or pop mov stos pop cmp andb (bad) lea xor pop outsb ss test xor pop pushf pop negl mov adc and leave hlt push add std notb jl dec movsl fwait scas push mov pop cs sub std add ss aam loop inc (bad) sbb adcl pop mov mov scas (bad) adc stos mov or cmpsb jle pop fsts xor fidiv lods and loope mov jo add cmp mov icebp leave insl pop mov lret jbe mov add test push dec mov sbb lods sbb jns test jmp lcall adc (bad) or outsl aad movsb push push or rclb movsl cmp pop sbb movb mov pop dec imul loopne add sti mov or (bad) bound fbld mov pop or push add test in mov mov xchg mov lods aam test dec push ss or xchg mov and mov out popf pop out out mov or dec lret inc sub call cmp mov push push cmpb xchg in dec fwait orl (bad) (bad) sub or mov jge insb fs or out test rcl insl adc data16 out lock je cmpsl jno mov stc xchg push adc rcrl adc or pop jg push jns mov mov xchg dec push and cli ds mov or jnp xor cs xor imul and pop in (bad) jns into push out sub subl cmp ret mov out in push push ljmp inc fnstcw call in popf cmpsl in mov adc cmp dec (bad) cltd mov lods add jecxz mov std (bad) stc bnd xchg rolb jns xchg jns (bad) lea jle stos mov es add xor pop loop pop push bound arpl flds xchg adc scas in dec lea (bad) pop or cmc je push mov jns cmp aam inc jmp or cmp xlat iret fisttpl dec adc xor and cwtl mov sub lds inc add sbb sub mov adc mov mov mov inc dec idivl out icebp mov mov notl push sub enter xor fcmovnb into cmp cmp sub xor iret mov add aas cli jge enter jns and or xchg adc ss adc mov cli mov adc lock jecxz or xor ret pop loope test sbb stc dec cwtl adc sub xchg jns rol xchg cmp std test pushf or mov inc aaa sbb mov dec push fidivl sbb mov bound fldenv add dec inc push pop cmp (bad) jmp mov push mov lcall mov jne add addr16 mov mov xchg lods and outsl aas push adc popa in aad push dec jmp cltd sub push cmp jmp adc shll cmp int les out sbb push imul push mov jmp cmpsl pusha inc pop jp add lret sbb test pop mov sub out adc xchg mov xchg aaa lret jns pop mov aaa mov jno sbb es ja insl pop sub es ja mov push or sub stos aas mov jg cmpsl add inc leave inc push das or icebp jecxz jb xor lcall inc rcrb mov or daa jne add hlt adc push add int test mov call addr16 pop addr16 (bad) stos cmp lcall add inc mov add std in outsb lahf push push or mov addr16 movl cmp (bad) imul dec leave inc jno divb xlat pop sbb push sub dec sbbl sti cmc inc repnz jecxz fmuls sub (bad) mov jmp mov mov jne mov sbb into negb cmpsb pushf cmp nop je psrlq dec dec cmp sti and or test mov mov movsb or sbb (bad) xor cmp js ljmp imul add andb or mov mov jo in or push pushf mov or inc xor fcmovnu add sub stc cmp sub xchg in lock sbb sub mov mov lahf in jb fs or adc je push mov inc out mov loope push imull xor test icebp lahf aaa or sbb decl sbb xlat repz (bad) dec arpl add leave or pop pop jecxz cmpsb or test dec int3 mov or bound mov mov insb fistp clc fidivrl jnp jo mov cmpsb xchg (bad) fdivrs repnz push lods inc or add in sti cwtl ja sbb fcmovbe dec (bad) in lahf jae (bad) xor sub or cmp cmpl or std enter or add xor out mov add or mov inc cmpsb add lret imul pop lds push mov scas insb js int3 fstpt jge jp push dec fiadd mov nop (bad) das test fldenv or (bad) or xchg mov pop or inc pop mov or std sbb int3 push stos cld mov mov movsl insl lret sub or enter call aam jecxz clc or jbe sbb jne add cmp jne inc js lods jnp ljmp fs push std xchg loopne decl loope in cmp inc rcrl mov lds dec jne popa dec or or in sahf movsl lcall enter cmpsl or jecxz jo imul jo pushf pop nop (bad) mulb adc sbb pop mov or inc xor test or out leave mov add out or mov jle ret cmp stos adc mov adc ret adc sbb scas push inc loop jbe mov pusha xor inc and sub adc rorb or or and fldt or sub inc cld daa ja (bad) js add (bad) shrb or sub sbb (bad) in stos or pop pop rorb mov movsl out out jecxz or cmpsb jae test sbb lahf add sub loope mov fldcw hlt pop movsl fs (bad) xor adc int jo dec aaa insl inc or fisubrl imul push and shr sbb mov movsl ss popa out pop lods pop inc call push or loope pop adc les push or mov fbld addr16 jp add (bad) mov mov or jne dec sub lds or dec jmp es cmp stos es (bad) mov jg and mov and (bad) icebp je cmp int rolb or insl iret jge jge sbb cld xor mov test xchg push loopne sub xchg sub test jo imul jp jae lret mov stos cmp adc popf ja or xchg ret or addr16 pop or cmp or loop lods cs or cmp add mov je jb stos jl daa (bad) repnz push cmp pop (bad) insb lods imul pop outsb and daa shrl dec aad sbb pop mov mov push jle adc fldenv push push loope daa inc pop dec mov xlat repnz imul push mov std and icebp cmp imulb inc jg lret popa or cmp sar or jl sub rorl and or adc sbb arpl adc pop (bad) sub (bad) lock ja dec dec aas mov xor fidivrl sub push cmpsl or std pop lods scas xchg or push sbbl sbb cmc lods (bad) sahf cmp xor pop and sbb add dec push (bad) (bad) push adc mov jne jbe mov std or iret aaa or dec mov lret cmp dec mov sbb sub fs sbb aam scas in lret inc mov pop inc xchg xchg inc jecxz int lods imul sbb or addb pop lds mov jle dec hlt loopne test lods dec pop sbb andl mov sti cmpsb repz imul lret fstp lock jecxz mov adc inc xor lahf (bad) inc frstor insb repnz lea dec cmc aam dec mov imul mov add or xchg push xlat or pop dec or out aam and (bad) xchg aam lock jo out hlt out push shll dec mov sbb inc inc scas insl inc lahf test dec hlt aaa dec mov lcall dec push (bad) xor cli jno xchg out lcall inc leave int leave into xchg mov sbb sub (bad) std (bad) cmpsl inc jle jno outsb jnp jmp mov dec fisubrl std mov out or mov pop scas lcall stos cmc stc mov push sahf push mov (bad) mov pop (bad) test jmp clc out xchg in or adc add aas fwait (bad) lods xor inc xor nop stos dec dec insb or xor sti cltd cmp sbb mov in mov cmc popf ret xchg or in mov mov or (bad) cltd xor or scas or ljmp or inc or ror inc push xchg mov pop mov test push xor inc cld sahf mov mov int3 push jmp xor es push mov out mov dec neg (bad) loop jmp or sarb aad call add mov sub pop cmc (bad) loope mov mov jae cli incl mov mov cmc dec cmp and sub or lret push inc sahf or shlb dec fs sti fisub enter or sahf cmp daa xchg push pusha movsb imul adc negb jp imul mov pop push or iret pop (bad) jo fnsave lret das push les dec pop dec cmp pop inc shll mull inc xor adc push or lock rorb xchg (bad) or push in enter mov dec mulb mov push or out xchg frstor or add dec loop xchg dec dec or cmp or movsl fbld pop iret es sub out insb and scas mov mulb das and (bad) mov xorb mov stc ds cli add sbb xlat insl push sub out lods leave jl fs cmp movsb repnz sarl aad mov clc test jnp out mov loop dec or test inc or outsb cmp jns jo (bad) jb lock inc or pushf lea lea add leave mov add (bad) in rsm or jecxz mul je mov adc adcl inc aad lock mov pop mov sub mov lahf rcrl or adc add sbb je jb lds push jmp std xor daa sub add lods aad (bad) ljmp xor hlt outsl dec sbb pop or and sbb adc out push sbb lret push or gs in or leave aam pop push imul mov mov push push and inc mov sub outsl sti or inc cmp jp cmc add xchg dec ljmp or lea push jnp daa dec mov jecxz leave test (bad) movsb or js mov negl frstor leave mov test or adc dec scas xchg cmp pop lea push iret out pop or push or cli mov or repz test test mov incb pop fs lea aad dec or call sub mov jg aas add in repz cmp jp inc fwait call jnp and cmp pop cmpsb popa adc add xchg adc mov fcomps or rclb pusha push or testl in adc or jge or mov add int dec sbb aaa data16 mov imul ss cmp (bad) pop in push mov cmp clc in int inc xchg or and add int mov clc mov scas popf jno inc imul cwtl xor or adc mov arpl push jmp push pop roll dec mov or mov cmc outsl shrl mov call movsb pop lret jl repnz xor jg jle mov xchg adcl mov adc lods nop test inc xor shlb cmpsl movsl push or out mov jge testl test popa push cmova movsb jg or cmp mov fdivl mov stos stos sub xor pop test or imul adc push mov cwtl fdivr ret (bad) mov scas push int sbb test (bad) in bound imul xor or loop cld (bad) leave or dec fidivr out xchg or xor xor or inc mov idivl test pop mov test or pop int loopne minps mov cmp adc aam pop add in adc xor std xchg cltd pop orl loope,pt cmpsl xor adc (bad) jmp pop enter stc neg or jecxz lods push std mov mov sti mov inc cltd (bad) cltd xchg lar mov aaa xor popf or (bad) out gs inc and xchg addr16 inc jmp sbb daa mov jle adc cld idiv push xchg mov xchg xor pop ss cmpsb mov sub xlat sahf pushf data16 out dec cmp ficoml lods and xor sarb mov js sub lret popa add stc pop iret in ret xchg xor xchg hlt into icebp pop adc lods stos adc aaa out xchg movsb jae mov js push outsl dec dec lods mov jle sbb adc sarl add in and vpmovm2w lods icebp xchg mov stos lahf mov xor rolb ret arpl pop jecxz sahf mov sbb jnp mov lret repnz xor out or mov out imulb sub mov les cmp std shrl mov (bad) or sbbl gs push pop jbe pop cmp dec push test arpl ja (bad) enter gs add add rol jo int3 xchg push fnop mov daa cwtl leave cmp scas lret mov cmpsb cmpsl adc lret jno std or xchg enter mov dec and mov enter ror push cmpsb dec push jne push pop dec mov cs and xor mov cwtl clc inc mov sti leave in mov stos sahf add mulb pop cmp insl xor push leave js jne pusha mov faddl jb jne repnz outsb lahf pop enter (bad) roll mov idivb (bad) adc adc xor adc into mov cmp outsb xor and push scas pusha adc jmp std push sbb mov jg leave sub push mov jecxz push rolb int lock (bad) pop stos stc out pop pop decl push jnp test dec adc add and ja stc daa or (bad) mov je mov (bad) push pop jnp or mov jle or lret mov mov sub mov inc and or into mov jle scas shlb xchg or mov iret mov xor mov jecxz adc add sbb xchg mov int push jne nop cmp sub jp test adc mov pop pop test or lds dec adc cmp scas adc mul adc enter into jo add mov test mov aaa ss lret mov cmpsb xor test dec pop mov test push cmc fdivl decl mov bswap notl or mov mov jge insl push sarb pop mov insl (bad) mov lret mov or mov loope movsl xchg mov es bound ja mov push call sbb mov popf adc xchg lret rclb dec push sub adc aam jecxz xchg jb outsl fstl sbb adc mov cmpsb arpl mov add fisubr sub lret mov push dec pop (bad) repnz pop inc repz add in leave and ret ja add mov outsb or lds imul icebp push adc jmp shlb dec mov in movntq out (bad) lods inc push mov mov pop sahf or mov xor push cmp jp push pop scas stos mov mov jge loop lcall cmc cmc shrl daa lds mov or cmp mov jmp xchg mul xor sub mov lcall or pop fs xchg sbb mov mov mov or lret imul std test jnp jb fwait cmc dec ret inc (bad) imul or dec fcomp mov dec cltd inc or imul test and out push out movsb xor push leave testb xor dec fs dec xorb insb inc outsl adc cltd cmc add leave decb xor cmp xor inc push jge int3 enter test aam push lods rcrb mov leave jo out je or sub aad mov jne inc sub lds and or in dec pushw fstpl sub fildl js adc flds fcompl mov push (bad) mov std pop fistpll lret lods shlb mov push cmc cmp sbb jns and or pop push cld mov lahf shrb pop inc or (bad) jb lret scas mov pop pop or dec mov add or pushf daa lea cmp movsl fs or pop pop or xor jmp fldenv lret repz lods xchg jge push dec jmp mov mov fimull jmp pop sub (bad) pop loope or sahf adc pop jb aaa mov jl out stc xor movsb add je dec aam pushf mov dec mov jo or sub enter add push loope mov sbb ja add pop inc or out lods test push sbb out or ds (bad) mov scas nop dec insb pop cli outsl ljmp xchg dec sahf out dec or or test push outsb aad lods xchg jne push sti iret fcoml arpl sub (bad) and sbb push or mov sbb cmp es adc mov shr push aam into inc dec or lods and xchg push sahf mov inc pushf add sbb add mov or (bad) cmp jg add xorl jo loope jno mov sub mov test push push push loope adc jecxz mov push cli or into fucomp icebp mov mov or adc test pusha testl insb pop add push inc cld inc rclb add or call repz pushf mov jns mov ficoml (bad) movsl and or adc or mov fldcw cwtl aaa insb (bad) dec sub loop add adc ret jae out or pop in imul clc sti xchg push cmp or movsb mov mov cltd cmp or jbe sbb push jo decl inc xor xchg into push xchg push cli int es mov or hlt mov rol rcll insb or sub sub sahf sbb sub mov xchg pop mov stos popa wbinvd jnp (bad) xor and es les jle test jns pop xchg push sub inc jmp ret inc es bound cs scas or ds jne mov (bad) xor fistpl pushf test bnd cmp add lock xchg inc rcl mov mov test inc add push or testl sti or incl enter cld testb jl xor or jg fistl xchg lret mov adc inc mov sti jg movsl xchg sub xchg mov (bad) (bad) and in and test test adc jecxz in fs and fcmovnb pop fdiv cltd pop inc cwtl xlat sub or and nop repnz xchg or out notb jnp loopne out mov fadd xor adc (bad) jecxz mov int3 rcl arpl jl cmpsb ds (bad) and inc cmc inc sub sbb cs dec push or pop jle jmp cmp jbe test cmp nop cli mov and fs test sti xchg (bad) jecxz gs sbb es rorb aad mov sarb imul lret repnz jmp ror lcall out or pop clc push ret jg cltd test lds frstor sbb lods fwait xchg pop push repnz sub movsl mov mov pop mov lock cmp cltd insb or cmp orb bound or imul sub ljmp push or clc pop push xlat outsl xacquire mov (bad) mov mov fldt hlt cmp fwait pusha pop sbb mov data16 out sti loop sbb jo jmp lods or (bad) sbb sub gs sub lods or les xor pop mull sbb adc pop sub sub lods jge push dec fbstp cs and add push and jl jno addr16 dec dec lods loop,pt inc (bad) in sbb pop mov or mov and adc jge adc add jae ffree pop gs mov inc cld aaa mov fisttpll inc xor in push stos cmp sub cmpsb cmp mov or xor lock adc sbb out pop in in xor dec adc mov or mov enter and jge and jl roll enter loope test sbb jno daa out push mov enter mov or cmp push icebp xlat fiaddl cltd imull pop jmp faddl jbe and cli xor jne imul adc ds or fcompl sub and outsl dec std pop daa in iretw out push fisubl push cmc push pop jns ljmp cli mov test cltd daa add xchg addr16 fstps inc mov daa jl jmp ljmp mov xor decl or outsl movsl push sub mov les fsts inc test jecxz sub in cli mov leave pusha loopne lds mov (bad) repz dec dec andb ret mov subb adc movsl dec or inc inc inc (bad) notl add or xorl or sbb cmc sub fwait mov sbb jns aad test rorw pop lds leave mov (bad) pop adc not push cmpb mov cmc into clc pop xlat lods push not mov xchg lret or sbb cmp push mov cmp mov cmp (bad) cmc (bad) fimull ss pop ror push or out or xchg sub je lods or xor addl mov pop fdivrl xchg sub lock lock stc mov jmp fmuls xlat out add push or dec or lret mov inc fmull and pop sbb mov or inc xor hlt sbb pop dec mov push test in imulb lods jge or xchg ret nop pop das sete add adc inc sub in popf or outsl je or sbb dec cmp out xorb (bad) cmp jae jbe sbb test pop aad in jae jo dec and fidiv or fwait cmp or jmp jo jbe (bad) fisub pop outsb ljmp lods in or insl sbb (bad) or sub gs cld sbb or jnp mov push push roll (bad) or ret cmp dec or aaa fstps dec or mov cwtl pop or push pop and pop cmc dec (bad) xor xor in shlb negb rcll pop jb mov out pop inc testl in mov add or test xor inc movsl mov pop xor dec out add xchg xchg (bad) movsl adc mov int3 jg jge mov ret scas xacquire cli es sub repnz dec or lods call cmp std enter inc repnz fsubl fwait cltd je sub daa hlt fdivrl add out xchg adc or mov int add lock pop jl mov mov aad lods stos jne repnz sub sub xor mov pop ds push dec or mov pusha pop outsb loop adc push orb jne mul jge mov jecxz pop in movsb hlt (bad) mov pop and sti jg adc fldl mov (bad) mov call dec cli cmp xchg iret (bad) lock jl frstor add cmp add ljmp ja rcrl scas rolb jmp xor mov data16 jno mov xor xor mov fisubrl jns cmp sub and add loope sarb jns jge mov pushf inc mov aam ss mov or jg fwait das js nop or mov movups (bad) fcoml test outsb ss jae jmp or push or jg adc pop clc out pop cli pop ja adc push or adc test sbb das (bad) fmulp push mov mov popf or or pop xor add std (bad) mov neg and pusha or push mov pop adc pop dec sarl inc or (bad) mov push sti js mov nop (bad) adc sub or sub mov (bad) lock add sbb or xor roll sbb lea div ficompl call jecxz out or std cwtl cld bound and out xchg hlt cli fs sub xor mov daa or outsb insb dec adc push jmp popf sub adc push pop and push nop dec lea out mov (bad) pop movsb xchg push fwait sub lods pop aad inc adc jo idiv roll mov xchg mov jno pop test dec jae push and lods mov pop or sub jbe test inc mov (bad) in popf sbb jle dec add mov sarl testb hlt mov in push add aas movsb xlat int3 adc mov jmp or lret test in or shrl (bad) jnp dec (bad) fldt xchg dec cmp sub add cmc stos roll out mov mov (bad) jbe lock push lret mov push cmp sti jmp test jge imul scas mov rclb mov and int3 out pop cs mov and hlt adc loop aad jnp jge adc (bad) mov addr16 jl outsb add (bad) testl repz xlat movsb mov mov test or cmpsl outsb test test xchg jno pop dec cmp insb xchg mov or push cs (bad) je (bad) clc or inc mov repnz movsb pop sti (bad) cmp or cmc and pop dec mov dec or insl scas adc ret or (bad) movsl icebp xchg add repz int3 fisttp push fdivrl jns jbe rorl mov (bad) stos loop or fxch adc outsl xor std mov or mov push pop lret cmc xchg popl loopne mov mov and or inc or cmpsb xchg ficomp icebp popa sbb inc in cmp sub dec ret (bad) sub push inc add mov sti or or push addl adc jbe into popa mov inc jle or adc sarb dec out jmp jge fwait push mov jnp lea xchg repnz fcmovne fnop and rorl xchg and lods pop (bad) hlt sub dec jne sbb enter xchg xchg mov ret mov sbb (bad) cmc inc pushf mov lods sbb scas or out (bad) enter jl push outsl jne mov mov cmc or das mov lret jmp sbb push ret jle mov sti jns or sbb cmp orl insl push pop out mov add inc lock jne out arpl push or xchg ret roll ds js repz jmp xchg cmp bound imul sti mov adcb aam scas xchg imul out mov repnz inc lds int3 mov dec or stos dec mov or jg rorb lds pusha outsb ds or push lea add dec test sbb cmp flds adc jle loop pop aaa sbb or idiv push movb xor sbb add arpl or fisubr mov cltd pop mov cmpsl mov shrb and out jno sub push bound addr16 (bad) fisttpl pop imul inc jmp int add (bad) push or stos std out (bad) mov hlt jo or sbb subl lds ret mov xor sbb call adc mov stos xlat (bad) jb jp or repnz ja in mov dec lods fisubr xchg mov add ret (bad) and and pop cvttps2pi push push inc lret mov or cmpsb jnp push cmc add idiv sub mov sbb push mov lcall icebp mov or push mov push pop popa out (bad) or roll xchg xchg test sbb mov outsb fidivl sub mov sahf push mov or xchg jne sub popa sbb pop jecxz cmpsl adc inc push in bnd adc movsb ljmp mov shrl push out enter or mov and push or push call fldz xchg xor xor add inc int3 std xchg or sahf loopne rcrb inc jb test test mov inc push or out ret data16 lock aas or or sar pop movsb testb or fcom loopne ret xor sub rcrl sub push jb imul and rorb stos lcall stos xor inc icebp aam or inc push dec mov pop repnz jbe jp shrb ffreep push ja (bad) cmc adc inc sub push dec pop enter dec lock add push hlt pop out negb sbbl daa mov cmp aad imul dec mov loopne fs stc lods sub rclb or mov mov (bad) jno mov imul stc dec mov mov push (bad) jne mov and cs enter (bad) hlt dec in xor mov fstps or cmc fs mov cmp xchg xlat in dec out or xorb notl test fisttpl loope (bad) repnz or add or inc mov aad xor jno push ds clc mov inc jg lcall push or inc or pop or pop sbb (bad) fstp int3 aam xor dec sbb into loop (bad) dec dec mov in scas or pop aam int3 push repnz jno jmp or movsb fldcw insb sbb (bad) adc mov mov dec (bad) push or mov cli stc call or arpl aad dec mov dec imul (bad) dec mov daa and inc ss cmp xchg adc mov pop stc and sbb (bad) adc arpl pusha fldcw add loopne popa scas lods aad in hlt or mov and (bad) xchg push jge mov add sub dec mov xor (bad) lock call mov std ja stos lods xchg in (bad) adc lock jmp push jmp mov jle out dec sbb mov rcll adc push xor loope scas adc mov dec jmp adc inc xchg daa lahf bnd sti out sbb test loop nop sbb test out imul adc in cltd mov and xorl jg mov das fsubrs out adc (bad) xor fistpl out jbe and lods lock js (bad) insb or mov mov mov loope cmpsb scas jmp leave imul lock enter fwait loope cmpsb ret adc lods mov repnz mov hlt adc dec mov fist cmp mov xchg mov adc add add mov sbb aad cmp (bad) and jne mov and call aam test enter xchg insb or (bad) dec add xchg lea or or pop add cmpsl std in ljmp pusha (bad) movsb adc hlt daa cmpsb dec cmp or ss xchg or repnz sbb cltd sbb ret push sti rorb xchg (bad) dec push adc or movsb fcomip xchg mov jae sbb (bad) cmpsb and in or imul fstps lret mov xchg push pop cmp movsb xchg insb xchg jo sbb pop adc jg leave test sahf call ds insl push inc jecxz or mov (bad) and out repz popa xchg das push sub data16 into sub addr16 or in std cmpsl xchg xchg inc shl popf or jnp pop cmp mov sbb push jp inc sahf and outsb in fcmove push repnz ja sbb imul (bad) fsubp and out in jb or adc inc pop dec or (bad) dec js mov flds fsubp mov ret xchg mov mov cltd repnz mov iret dec loopne mov cld jmp jecxz (bad) rolb shll in cli jnp arpl lock adc sbb out mov pop lds mov lods mov jge enter das cmp inc or mov sbb and mov (bad) push in divl pop inc xor pop aad mov out jl clc loope jg and mov out cmc outsb or stc add fstps push mov pop xchg mov insl popf or hlt das test and lods push loop fidivrl or jno hlt xor arpl sbb jo fcomip or or (bad) (bad) dec add fdivr into pop test mov in mov add and fs adc mov outsl xor mov iret and loope movups (bad) mov pop addr16 adc pop push int test jmp pop xchg adc mov mov shll repnz pop sub sbb jae or in jbe dec fstps ret jecxz mov outsl mov xor cmp test sti sub mov in adc mov lods aaa sub dec fistl adc lods push add dec in ret enter mov fimul ficompl rorl mull dec sub loop mov or (bad) rolb das hlt or out mov inc add or out lock sub cli mov push lahf jno sbb imul aam add sarl test sti js xchg dec mov push daa add mov xor inc mov (bad) pop xchg xor inc ja adc (bad) (bad) fmulp cmp pushf cmp adc mov test lret sbb add xor orb add ret movl pop jno movsb jns insb and jo xchg add add mov add mov test test outsl cli dec adc or repz mov cmc or test and scas sub and pop sbb inc pop std cs (bad) dec aad mov inc mov push mov xor xchg dec and pop or adc add xchg mov sub inc subl sub test xchg inc popf mov es or mov orb pop jg push or or imul cmpsb mov hlt movsb xor adc xor sub xor mov xor or sbb xor lcall cmc jbe fldcw arpl mov mov je cmp dec cmp sub pop int3 sbb or imul mov insl push or bound into fsubs or fistp out xchg repnz repnz cld stos es push jnp neg sti or jne ja sub sahf cmp adc (bad) mov out (bad) stos lahf sbb (bad) or enter fldenv mov in dec xchg ret jbe pop cmp repnz mov mov adc leave in in cli popf cmp push fnsave lock jmp andl or add jae jecxz sub in (bad) fimul cli mov mov xlat insb std adc and test add lods add mov sub lret dec mov in jg and and popa dec pop (bad) sbb sti mov xchg lds je push pop out fisttpl mov sub loope not in popa adc dec fiadd sub sub test lock aad or push adc mov loopne cli (bad) mov cmp cmp repnz pop ljmp mov jl fldt xor adcl mov cwtl cmp repz push pop mov test out ss lock jnp leave int3 xor pop pop or dec adc xchg out pop pop ret mov pop flds and dec leave je or or fbstp xor add icebp inc xor xor ss mov or mov mov mov loopne inc inc andl inc xchg je or jg jns sbb lret adc mov jnp addr16 or aad add dec movsw or mov into mov sub out and in xor jmp test outsl pop pop inc hlt and inc adc sbb dec cmpsl cmp aas leave push jb and fnstcw (bad) adc fildll or sarb push jecxz mov (bad) stos adc rorb jge jle pop xchg popa or insl dec call add lret data16 push cltd dec jns inc (bad) mov lock push pop or adc into inc mov bound or test adc dec ljmp (bad) into sbb lahf mov mov cmc pop mov ret shll mov inc jp lds scas das repnz enter addr16 cltd cmp (bad) lods scas and cltd jmp pusha pop (bad) pop cmp icebp inc cmp xchg pop pushf pop loop pop cmc and push xor jl mov cmpsl movl mov xchg sbb insl jg faddl push jb cmp iret daa jb lods sbb (bad) jns jae mov int pop and stos cmc jne std pop cmpsl ds xor mov jno xchg imul cld int3 arpl adc (bad) mov cli jo mov in adc stos lret lock or add xor jl sub das notl pop sbb xchg fstps adc (bad) dec mov xchg sarl fldl cmp daa mov outsl jge leave or inc cmp mov dec push mov sahf or push stos push lods orl pop in ljmp mov xchg cmp (bad) int3 mov lgs add jne or dec jg lods sub (bad) sbb and inc loop mov lock sub shrb or movsb cmpl ss mov xchg out or bound and push and push sub add mov ljmp repnz mov imul nop mov sub lea xchg or push push faddl out mov sbb sub nop jmp jecxz repz mul mov push sbb or daa push add scas jl pop mov jne push pop cmp jmp and andb ja stos dec sbb xchg mov icebp or aas adc mov xchg xchg int3 or loopne sti sub cltd divb jecxz test inc loope or adc repnz das push pop loopne sti pop inc repnz xchg lds dec hlt mov jne mov cmpl mov cmpsb push or lret leave jl or mov (bad) divb xor add or add or lcall fiadd repnz push aad sbb mov test js mov sub push push sub sub adc imul std js mov (bad) mov add in mull wbinvd gs fmulp jmp mov pop fsubrl dec insb mov aam sahf mov ljmp lods in stos (bad) lock and xchg mov (bad) or adc jb aas imul and xchg cmp sbb mov insb mov loopne subb sub or add sahf test or push fs cmp lock pop jns sbb cmc out and (bad) repnz sub outsb xor in jge outsl adc or sub xchg std or stos pop or and add stc xchg mull lock and jecxz cmp lock or insb xchg or movsl cmp push loopne sub mov stos dec ss adcl je into insb ret or sub push pop dec rolb or (bad) aam cld scas mov mov movsl nop cltd gs sub or add (bad) mov mov mov insl lahf lcall xor test mov jae pop or pop mov pop in add in sbb mov sti mov ret inc outsb sti lahf sbb out cmpsb mov jno jae fisttpl or sti gs xlat cmc sub ret mov mov mov sbb cs cmp ljmp or pop xchg lret mov inc pop or adc sbb xchg out in pop lods (bad) leave adc or lcall mov fcomip inc cmp imul ficom test hlt test fwait mov mul mov mov icebp lahf pop mov ja jle pusha xchg lods insb insl sbb add dec jbe cli jg push idivb push add arpl in (bad) jae adc lret std cli popa ss fistpll push (bad) dec pavgw dec lds int ret cmpsl pop (bad) and ficompl adc arpl mov gs sbb out push (bad) pop xlat sub lods mov xor pop sub loope movsb pop ja jo inc xor clc mov cltd aam lea mov imull push out dec cli out imul in jmp lods cmc into jne in in sbb push mov stos push arpl inc add lret mov mov add push pop les push ret mov enter mov and sbb jp xchg sbb or jg push or add test sub fisubr sbb sbb jne leave push xor mov dec or imul jbe or icebp mov leave ljmp sub pop add out insb cmpsl mov sti or or push test mov pop cmp sbb stos enter scas or xchg push xlat jns notb sbb call dec mov ja add or xor inc cmp stc and mov or inc jle add cmpl sbb mov stos mov out repz adc sarl and xor xchg jp cmc int xchg (bad) mov rol sti mov mov sbb pop push aas mov negb inc or stc stos jle fldenv mov ret neg fidivl mov mov stc jb in jle sub dec ja aam ja dec notb in jmp jl and in xor xchg dec movsl pop xor jle mov and scas jae xorl popa mov add adc xchg mov sbb cmp sbb adc aas aas jns (bad) nop add pminsw dec jecxz bound ffree imul sbb xor push adc mov add mov or (bad) mov xor loope pop mov movsl fwait inc fidivl jmp sub sbb addr16 mov jecxz repnz insb pushf js leave addr16 and push or out or leave add push or xor leave xchg sbb ret push (bad) cmp dec or lock jno mov pop mov sub jae lods push mov lret dec mov rorl xor or mov sarb bound (bad) mov xor cwtl add sub mov shll push jb daa sbb and adc sbb add daa mov into lahf in imull pop sbb sub sbb mov xchg aad scas xchg dec mov mov popa or push cmp jl sub xchg sub push (bad) or xlat sbbl int or cmc or cmp sahf or js cmp pop add je ss mov or sbb mov jae data16 pop sub add lds or adc daa ss or push sahf ret iret notb fstps or loopne xchg xchg ss inc lret or pop jnp pop rcll ja mov lods daa or xor or sub adc into shll push inc sub push stos into frstor idivb mov ret mov mov add idivl imul aam lock psubw stos sbb sub imul pop ja inc lock mov fdivs push stos jae mov jne adc xchg inc test je adcl ss jecxz stos inc rorb cmp mov pusha loop in sub cmp sub dec leave inc nop inc xor aas adcl jns ja outsl loop roll sbb in (bad) jb xchg xchg jbe or inc (bad) es stos jb loope out mov xor or insl push std lods cmpsb mov ss jmp sti (bad) rclb insb dec adc or pop jno loopne push cmp mov mov js dec and test fdiv inc sbb bswap stos or aam repnz addb or pop sbb cli in testl leave mov cmpl push int3 cmp or inc ds or aam and in (bad) cmpsl std mov fsub or or fnsave (bad) or ret inc adc (bad) sub jg pop stos inc sbb movsb mov adc fisttpl (bad) mov xor push add mov test add repnz adc (bad) js (bad) adc pop cmpsb lods jae std mov aam mov push (bad) int3 dec jb lods mov mov mov push insl or xlat adc jnp or pop jle xor and fwait ror pop jecxz cmp leave mov psubsb or adc pop sbb pop adc aas movsl inc mov sarb leave cmp (bad) insl mov sbbl inc ds ficomp cmp pop sub inc lock ljmp or adc jg cmp mov movsl sbb clc leave test rcl imul xor xchg in in or int3 push scas mov in loopne and je sub fimull insl adc push dec stc out lods ffree adc mov adc or movsb inc mov mov stc jecxz dec iret stos dec mov add or mov ja mov ret or inc add or repnz pushf dec sub jne mov jae sub and sbb (bad) sub or fidivrl push mov loope ret push popa orl jp (bad) jge and in pop loope ret nop jb dec insb push popa or xor std xchg stos mov jae insl pop add popf mov or sbb out push repnz mov or jo stos and pushf daa scas adc mov dec or sbb xchg jge dec mov and jp jbe xchg fdivr in ljmp sub mov scas adc je dec or fwait push push in jbe gs adcl dec push arpl out adc or ret push out mov dec jo or xchg mov fsubp cltd dec or rorb or je xor and test outsb or xchg inc inc ljmp xchg imul insl cmp fdivl testb imul jbe mov or pop out jge into xor sub push add cmp and inc xor jle in cmp or cs mov pop jne inc push insl push sub sub mov lock or sbb adc out dec jmp adc sti push sbb cmpsl sub push mov inc add stos add imul arpl xor inc repz mov or adc wbinvd push mov or sti das cli cmp cmp arpl lods dec (bad) lret mov mov popf add insb jns cmp leave loope lret xchg lods or mov sbb jne std jbe mov jne sub mov jmp sbb loop sbb out jo imul pop addr16 jl xor jnp or sbb aam in stos enter addr16 or adc inc test or cmp das push jnp lret test (bad) outsb push inc loopne aam sub sub mov sub test mov or xchg mov or test add cltd sbb cmp add rorb dec mov mov sbb mov repnz sbb push jg jmp mov dec xchg cmpb jl sahf repnz dec xchg inc std or sub pop out mov or movsl or stos pop jnp fmuls sbb nop test in sub inc in xor lret dec inc or jl or dec mov fisttpl pop or mov dec add or aas sub rclb (bad) xlat lods or adc out clc cmpsl inc cld cli aaa cmp cmp jnp or sub jo scas aam mov jmp xor sub ret inc test push int (bad) idivl into or fcomi cmp pop sub xchg insb (bad) leave or cmc sub cmp test xchg sbb lods rol lods fisubl push outsb sub inc sbb cli xchg and cmc dec std mov and andl ljmp test mov or cmp ret scas cmpsb pop mov scas sub (bad) lock mov fwait stc or sub mov and mov mov popf mov xor (bad) fs cmp pusha (bad) testb dec nop inc test pop leave out xchg adc jne jne dec pop xor pop adc mov or rclb mov push loope mov cmc mov xor push das idivl cmpsb sub and push add testl cltd dec test loop push or andl lret cmp jl mov nop cltd out xchg bound cmp add cmc dec das xor imul in stos push or sub popa loopne mov movb aad stos inc or ds sbb dec jecxz pop sahf push ja add or cmpl pop out js or scas jno fmuls imul sti xchg mov xor push dec ljmp or inc add hlt imul and add push in mov js gs sub xchg outsl mov test data16 test and sarl sub mov into dec xlat adc mov jno or sub scas jnp in fnstenv out repz or ss push lock (bad) push aaa mov test arpl xor pop dec inc jp or mov arpl out negb lret decl std or dec and int dec jne or mov (bad) cli fidivl push stos jle mov adc insb popf test mov rorb mov mov or or out mov imul xchg int push scas jae push inc inc stc xor xor sub fisubr repz xchg imul or inc arpl dec or stos pop mov mov in mov mov cmp out lcall or leave or and insb mov sbb mov mov push or push in or jae (bad) mov aad outsb xlat mov pop or jmp sbb std sub mov je sti sbb lret lods add call mov adc cmp and adc (bad) push das xchg lret mov scas test inc pop shrl jecxz cmovno loope in jae or pop mov rorl pop inc add add je sub mov jns mov xor jle stos cmp dec cmp cmp add fisttpll dec mov jp test cmp adc or mov in inc mov jmp or and lods sub push fild (bad) sub sbb and enter jns xor xchg orl mov daa dec mov inc dec ja outsl sbb and or mov xchg dec or fwait dec lods clc repz mov (bad) or dec scas dec or imul or or add test leave mov int3 in dec aam or mov add dec lock test cmc es mov adc xchg or fsubl mov loop jmp in xchg or mov iret jp sti ret push addb fidivr aad cmpsl fstl (bad) pop std lods mov or repz subl mov les push inc out cs insl lea sub jmp pop pop sbb sub imul aad or ss arpl sarl inc nop cmp (bad) popa js mov sahf fiadd jecxz repz dec (bad) xlat fadds inc hlt jecxz or repnz xchg or das repz insl lds dec or push stos add and in jl or into xor or cmp lock inc push dec int sub inc pop in out icebp mov in push mov xchg sti push ds mov out xchg imul or outsb jge stos mov cmp out push cmc or cmp pop inc xor clc lods jnp int3 sub (bad) pop dec cli imul dec pop sub (bad) in inc or and mov xor mov mov ja mov test nop (bad) mov test pop sub pop aaa sbb rcrb ja push loope pop xor sub adc jo or daa sbb or lret or rcll jecxz test or adc repz movl cmp xor (bad) xchg or fnsave or lods push or cmp daa mov testl add inc jmp sbb mov and xchg (bad) mov xor sub js fnstenv xchg push pop or movsb fs test lods cmc cmp mov adc push addl lcall and mov out xchg mov or push push (bad) aas jne mov bnd lahf push xchg or or or push cmp mov mov stc cmp std daa into ss adc leave push subl (bad) jbe and stos testb jge hlt jmp bound push hlt out cmp lock adc adc in push dec (bad) fnstsw call movsl dec sub add pop pop cltd mov cmp cs test jecxz test dec xlat xor pop sti iret mov lea sbb inc cli cli cmp flds pop out aam xlat cli int sarb jbe mov dec nop mov out dec mov (bad) popf cli mov test inc xor repnz (bad) in pop addb (bad) mov dec lret cli jno mov add rcll rorl sbb shrb jns or sub push mov dec mov add sbb out mov mov or or gs mov and outsb cmp mov sti pop hlt inc test icebp loope pop scas mov ficom inc xor adc xchg add or push push insl loop fsubrl jns cmp test aad sbb mov dec test (bad) mov call push lods insb jbe outsb fidivl mov or dec lods push js mov mov (bad) cmp mov in test mov inc outsl adc and dec cmp sti xchg outsb pop pusha dec cmpsb sub pop or xorl repnz (bad) or lods xor cmp into (bad) scas aad ja inc dec (bad) fisub pop cmp test (bad) enter imul xchg jecxz clc fwait jae mov bound insl sbb mov ja insb arpl (bad) mov jmp pusha imull shlb adc repnz sbb and push pop scas hlt popf dec push inc in decb pop sbb and jns divl lret call lods enter inc adc sbb test out arpl push mov loop,pn mov rorb mov mov aad or push mov sti stos jae push cmp add mov (bad) jno aaa int3 out pop ret sbb jae xchg or aas dec jmp jo iret or sub xor cmp jecxz adc dec dec pushl jno or std xchg cmp mov sahf test or push or ss add or push in or fsubs sub loope jns or arpl xor lahf outsb sbb mov mov dec jae inc or and psadbw xchg jns lcall lret push push repnz mov and rcll loopne xor lock add in jb adc js jp stos cltd xor or dec or adc jb xor and out divb xchg sti pop test mov ss cmc outsb sub cli jb pop lea and mov pop and mov push int3 mov test sarl dec movsl pop sbb pusha ds pop notl gs mov dec or jo jge pop push mov repz call sub or jns arpl rep or mov fistp xor or nop iret jo imul adc and lret add jecxz or ljmp sub add or mov or bound (bad) and mov mov ss and icebp pop pop jmp iret pop mov hlt cmp sbb out leave add and std and mov idivl mov cmp jecxz scas lods or loopne sbb mov xlat xor sbb or push arpl outsb or pop adc push cltd mov fptan jmp into sti sub gs cmp idivl icebp test xchg out adc call and inc movsb test hlt lahf fldcw add leave (bad) adc or or mov fnstcw mov adc xchg xchg sti sbb mov mov mov jg add mov adc stos pop in sbb int lds dec adc mov jle adc call adc sub add stos cwtl or stc repnz adc adc std jecxz lret adc (bad) or mov mov es adc sahf mov flds loope push fcomps pop mov push xlat test ja mov mov sysexit subl ret cmpsl mov cmp ficompl or add mov daa int inc pop out jg dec shrl mov int es pop jmp dec xor xor movsb cli dec aaa sbb in pop bound jecxz sbb jecxz adc int3 imul adc pop cmpsl cli insl movsb push jl dec cmp aas mov pop and push xchg loope inc test inc xor push jnp push mov or jmp dec add movsl adc sub push add pop ret pop sub and xor test inc push int3 push mov sbb sbb pslld jmp cmp loope push fcomi lock sbbb test cltd cli xchg setne push jbe mov in decb mov cmc add test or lret stc pusha jl dec cmc int mov mov sbb sbb icebp das jp test sub xchg pop (bad) jecxz inc xor jmp stc mov push dec mov dec jecxz data16 sub out cmc push cmp fcompl cmp add mov sub ljmp mov jl (bad) and sub and loope mov cli (bad) lret notb out mov jmp push push inc jno dec pop ds rolb leave mov out divb add cmpsb mov push fstl in push rcll adc clc xchg cmp push (bad) inc jecxz daa fist sbb pop sarl ja rcrl fwait mov xor or sub cli adc add pop test adc or cmp testl lods or mov imul (bad) in imul pop or scas popf fisubr or push adc int sub movsb jecxz shl (bad) xchg orl sub mov or jge (bad) repnz (bad) lock mov jbe pop dec mov sbb and or (bad) jns or dec or data16 fnstsw xor jne inc inc fcmovnu sbb sbb sbb adc dec mul or scas pop lahf jnp push cmc jecxz xorb shlb mov loopne lret push pop push or sbb or mov fwait adc xorl mov leave mov into adc dec cmc mov insl test mov lods sahf sar sub dec sysenter cmc and fnstenv push sub popa add jae daa inc lret into or ja cld (bad) aad lcall (bad) adc bnd xchg inc dec lret mov or (bad) repz jne push int divl scas adc loope cmp negl and imul or mov vpcmpeqd in jae das xchg mov cmp test lods std pop les jmp enter and fldlg2 insl shlb ret test push cmc ret and imul adc out inc icebp cli inc pop jecxz pushw in adc ss mov mov and mov mov jmp scas jecxz leave lret sub mov jnp je mov lods sbb or clc xlat dec test or testl das hlt jecxz inc (bad) cmp inc pop mov movsb or fsubrl sub adc or push xor lods leave mov ja jb loop dec (bad) xchg sub pop add cmpsl repnz (bad) xchg push push outsl out lea (bad) jno aad cmc lcall cltd les insb (bad) xchg push mov mov adc lcall out ljmp in mov (bad) lods xlat push (bad) int jle out mov std lcall lock bound inc imull cmpsl jno (bad) and hlt fistl add lods cmp fistpl jnp out aaa xchg popf test sub stc or mov mov insl adc pop xor xchg lret movsb sub pop out adc jnp imul rcrl or fldt dec push cli jb lods lds add movsb xchg mov add and or jne jbe stc add repnz mov mov xor push jecxz sub xchg or out jae jo add fldcw loop jle sbb and xor dec push adc out (bad) into sbb or cmpl xchg loopne inc cmp adc push (bad) dec lret mov (bad) repnz and mov je xorl lret push or dec and sub add jp in inc test fwait pushf or addr16 xchg bound mov aaa (bad) lea int aam pop and test mov cmp int3 add ljmp xor out cli dec out leave lcall pop cmp mov xor sbb insl pop dec aad ja and lret or sub sbb push hlt setl inc inc add sub out mov adc into sbb (bad) rorl outsb icebp inc push or and push or and inc lock jmp mov mov bound or lret pop lock xchg movsl adc imul dec inc push jle aam in sti xchg sub add std rcl test mov inc retw adc imul mov fistpl mov sub scas loop adc or hlt mov dec mov in (bad) xchg mov imul lods mov mov or inc mov dec repnz (bad) adc mov inc mov or or inc leave add dec or fs dec or int3 mov jle and mov mov testb cmp pop outsl and mov pop or je jl dec and sti daa pop inc inc dec call jmp fisubrl mov cs jae jp insl fwait int3 cmp cld adc inc (bad) dec xchg loope add stos push fimull loopne dec lock adc cmp into pop or sahf imul decb or pop sub outsb fwait cltd xor scas cmc xlat lods and sti inc or js jo mov mov mov shl test adc inc add pop or and inc add sbb nop add cli cmp sub mov scas aam in imul (bad) dec xor in sbb xchg popa wbinvd hlt fisubrl push outsb sub (bad) stos lods push or sarl (bad) or and push mov xchg repnz push dec xchg inc insl pop mov repnz pushf je pop rorl sub cli and mov mov iret hlt mov cs stc cmpsb cwtl mov or mov sbb test call jae shll in sub xor mov js imul xchg push xor mov cmc imul xorl or int3 push gs jbe adc push insb dec sub faddl xor adc lret pop cli pop imul sub mov push sub dec xor leave std cmpsl out cmpsb push and divb pusha aam jno dec xchg cmc lock icebp dec xchg sbb add popf addr16 loope cmc scas pusha rcrl fs (bad) push addl cli mov or mov outsl sub jp cmp fwait mov daa dec or jmp repz or in stos scas mov xchg inc pop (bad) testb lret test jno push pusha (bad) pop repz push std fbstp push mov or inc or jns mov xor fsts xorb push lea pop add (bad) pop mulb sub jbe imul xor xor or cmp sub or inc repz jl pop jmp cld sbb pop imul mov sub or push sbb or sahf lea aas sbb xor loopne jno jmp jnp rolb popf out dec or dec mov mov jg fmul jge int jl adc mov enter and jae dec stos repz das or into and or sub or push bound inc xor das dec xchg mov push testl xchg movsl jns jno in bnd sub cmp xchg push jnp and test xor das inc xorl daa ljmp test stc rcll movsl std sahf pop cmp pushf (bad) icebp add addr16 mov retw cmp rorl into imulb dec (bad) sarb fisttpl or jecxz sub fldt (bad) int3 push add mov jnp imul push cmc jge mov dec insl cli test imul insl arpl mov fildl jmp push or mov mov mov or rclb loop std pop fadds cltd clc adc cmp and mov add push push movsl (bad) mov sar (bad) stc xchg jle cs jp sub (bad) mov repnz sbb and pushf pop (bad) hlt test dec dec mov rcrl mov popf rcrl rcrb leave inc jo dec jb pop adc jp hlt cmp out mov xchg std test (bad) insl (bad) sub pusha lock in jo decb dec and sub testl cwtl (bad) mov jne lods stc sbb loop mov imul les sub scas mov loope stc cltd pcmpeqb arpl (bad) fs out lcall mov cmpsl add imul and mov mov std repz gs das mov sbb rcll sub sbb ret or and je bsf xlat fs sbb dec or xor or enter icebp adc xchg or and mov in mov mov inc sbb cmp popf neg jecxz or ljmp add sbb aad sub mov fiaddl pop push (bad) or dec (bad) imulb in fcoms sub jno dec pop fsubl pop mov in adc or xchg dec imul push jb in sbb out lret mov sbb imul (bad) push inc je lahf jae dec dec (bad) mov test cltd (bad) inc bound push jne sbb push (bad) cvtps2pd jb jnp rorl xor adc or mov popa pusha repnz mov arpl push (bad) mov xor push inc and adc popa ljmp xchg mov pop cmc mov popf or mov insb or add mov ror jmp repz scas cltd or dec cmp or adcb cmp mov movsl pop into std jle ja lret rcrb add repz push popl cltd dec pop cltd sbb fstps mov sbb or mov test es xchg lods xor inc xchg or sub rep mov mov sbb icebp (bad) cmpsb ds sbb lods lcall movsl loopne sbb sbb or stos cltd gs add or scas mov aad (bad) shll lcall ss fmul std insl ja cmpsb dec sub add sub arpl cmp dec imulb ds cwtl leave pop movsl cmp push enter push mov adc call push adc pop xchg cmp xchg or fcompl mov fwait lock hlt dec xchg test js mov add scas stos icebp pop xor iret mov xchg cld add insb or ljmp or mov cwtl jne mov jb add cmp xchg shrl fcomps or push dec push popf and mov cmc aam movsl push int3 ljmp adc jge stos (bad) std xchg stos (bad) addr16 add sub cmc dec aad xchg mov mov imul xor in rorb loopne sbb fldcw pop inc jb add gs mov pop js inc addr16 repz out jbe lret or cmpsb (bad) xchg scas and inc ja imull jle in ficompl push leave in mov or scas or push adc clc cmp fdivrs mov sub aad lcall push adc movsl mov push es not rorl cwtl mov popf inc icebp ja addr16 call std mul aam adc mul les or mov sub (bad) out insb sbb dec push add push les mov or mov push into lea add repnz imul ljmp and mov xlat pop adc mov loope es add in adc jae mov (bad) sub pop adc and decl ja in lock adc ficompl push int cltd xchg mov nop cmpsl push movsb lea or stos dec ljmp stos scas ja repnz or xchg sarb cmpsb nop sub pop or arpl movsb (bad) mov sub faddl xor imul dec mov cmp in mov enter jl inc sub (bad) test pop (bad) shlb stos or push sub dec jge es mov arpl pop adc mov aam sbb add sbb and aam loope adc add xchg dec dec or mov ja fsubr mov shlb push mov dec test cmp sbb addr16 out adc fisubr scas aad (bad) mov mov jg add push push int3 jge bound or inc xchg inc or cli (bad) fdivrl jl cmc fwait push outsl lds mov dec cmc movsb or jo inc mov das adc ss je cmp ja jns (bad) cmc in popa xchg sub mov popa adc sub test imul loopne fdiv aam mov or (bad) (bad) fisub std fistpll push inc sbb pop cli rcr jo scas cwtl aam iret xchg or stos sbb xor sub out mov pop jmp cmpsl dec ja iret and dec lods sbb insl mov pushf daa rcll sub xchg add jns out lret mov push cmc jle std je pop mov and push dec add test push (bad) dec mov lods (bad) cmp mov jae xor cmp hlt inc (bad) outsb idiv inc xchg insl out push jae js and into xor add mov inc cmpsl sbb jno in or (bad) out mov mov sarb into mov aaa in xor add pushf cmc or jne xchg stos sti leave mov sub mov add dec mov clc or addr16 div mov fistp dec mov push loop (bad) mov daa out hlt leave jmp inc pushf mov mov aam mov fisttpl jno push popl mov or mov jns bound push or aaa lods xchg lock xor fistpll dec (bad) sub cmp jbe (bad) mov (bad) std adc sub shrl push leave rdpmc mov (bad) sbb (bad) sub adc dec hlt rclb je adc or les pop push or enter (bad) in (bad) or adc jae bound sbb mov dec in stos cmp or cwtl and pop xchg cld mov cmc adc pop hlt (bad) lret outsl mov mov pop int3 fdivl or inc gs mov lds (bad) add inc mov sarl dec cld out outsb lahf mov (bad) or (bad) pop int3 sub jle and cltd adc cli mov lea (bad) and or mov in xchg push stos dec stc cmp andb clc inc jbe mov pop pop fildl xorl jg stos test insl sub pop sub cltd mov test cmpsb jnp dec xchg lock enter sahf cwtl das sahf testl or cld stos add pop (bad) or push (bad) mov push inc cmp test cmpsb outsl push sbb fcomi (bad) daa mov pop mov push loop (bad) xor xorl mull pop xorb test rorb adc cmp inc cmpsb jge xor adc sbb cmpsl cmc idivl and mov in dec add bound icebp sub out xchg cli xchg test sub xlat sahf sub jb and aaa stos and not mov icebp cmp sub xor and (bad) hlt bound inc std push mov mov cmp or jne,pn sarb les sub iret push mov inc mov sbb or orl cmp lds lock mov sti xchg (bad) imul (bad) mov sbb fwait push add scas insl sar xor iret push xorl mov bound jns ss mov mov xor test leave stos cmp dec (bad) dec lcall adc mov mov loope out pop cmp decb xchg adc sbb jns dec jns stos pop icebp xor lock or hlt xchg loope push pop or mov outsl adc (bad) minps jae and adc cmc jno add int3 jecxz mov xchg movsb inc dec (bad) and push inc loope fimul xchg mov test aas (bad) xor icebp or add cmpsb xchg test std jo pop sbb cmp aas mov leave dec sub mov subl pcmpeqb icebp dec movsl inc sub adc cmc cmpsb mov sbb movsl xor loope aaa fstl xchg insl adc sub repnz jmp and enter test push dec stc mov out in and sub and jg jle cmp inc jmp and stos loopne stc cmp leave in lcall xor add pop or mov dec adc mov mov stc jecxz popf aas pop cmp or fwait sub sbb ljmp in xor insl or adc popa cmp sbb or mov stc mov mov cltd (bad) gs dec jle or or aam andl or in dec movsl sub cwtl lcall mov popa loope xor fnop aam jmp inc xchg dec vmovupd fbstp addb xor xor outsl xchg xor mov aam sahf jno icebp or jno cld mov (bad) or push test mov (bad) jno imul xchg jne fcmove push dec sbb sub out add add dec cmp fimul mov or jmp add xchg and pop aam int3 xor mov inc popa or mov outsb sbbb xlat xchg xchg das push add cltd jg dec cmp je push push inc aad cmp fildl or daa and or jmp or dec ret rorb dec mov repnz in cwtl lock sahf xchg jbe decb inc mov or sub fs jne and hlt test cmp and lods lcall adc sbb add jp test call sub or mov or mov out xchg push or mov xor hlt mov mov aam (bad) dec ss flds neg test xorb imul fwait in out xchg or jp jbe repnz cmp movsl xchg test in xor icebp mov or pop xor add mov xor mov por xor out mov mov mov jne (bad) jle test sub adc inc scas dec hlt pop dec hlt dec mov repz gs int3 adc cltd imul push mov push jecxz or data16 loop xchg test adc scas sbb dec lahf hlt inc icebp lods lock jbe in or lds lret into cmc negl and and mov sbb adc push or and xchg aaa daa or int3 mov sbb loope or pop ljmp add rorl repz cmc dec or cmp clc ja jle or adc (bad) andl (bad) or inc wbinvd mov jnp loope rcll or fcomp inc inc test hlt popf xchg fsubl es xor jmp adc mov push cli push mov push test push in cmp cmc xor dec mov xchg inc or ficom into outsl xchg mov (bad) jb dec aad or outsb sub jmp add or cltd xor imul add shrb sbb push cmp sub ja (bad) repz (bad) or pusha icebp and cmpsl mov sbb jl imul jns sub daa enter test add sub sti dec rorl jae js (bad) notl xlat popa push mov jp inc jge mov cmovb or sub (bad) jns div cmc icebp fwait jns leave fimul cmc fist cs (bad) dec or lret (bad) push stos mov test xlat push inc decb push out mov fwait mov dec adc dec pop push pusha mov movsl ss pop lock lea sbb aam ja in or sbb xchg rcrl sti dec leave les xchg test jb inc push push push mov jmp sbb rcl pushf push sbb (bad) int3 (bad) lret push cmp inc adc in xchg aaa jle cli or cmpl dec or xchg hlt push or fsubrl xchg adc xchg mov test add sbb test and jecxz lret ret sbb mov lds in mov loop in out cld je or inc xchg aas movsb sub pushf jae cs and jno or jns jl fs out (bad) int mov adc scas testl sub (bad) xor (bad) or and pop or in or or shr push lods les pop out pandn ljmp mov fsubl add aaa decl jecxz or push loopne jae jns in (bad) dec loop mov popf out js mov (bad) jb xchg fcmovb ret xorl xchg shrl jns pop cmp xchg je sahf es or dec sub daa clc sti or iret call push test or addr16 pslld xchg paddd jbe clc add inc rorl dec xchg test inc lods loopne xchg out sub sbb push ja iret mov xor ds add loop loope sbb aam jns divl roll and add jecxz and test push negl xor imul out xor fimull cmpsl cwtl or or int3 inc scas (bad) xchg lods pop xor inc stos nop (bad) cwtl sbb jbe xchg dec dec sbb imul jno dec mov cmp test jmp mov dec jmp xchg xlat insl xchg inc (bad) hlt mov mov rorl or push sub xor (bad) mov or add cmp or adc xchg add bound hlt mov mov or add cli jl fs mov add clc rcll mov jmp mov roll inc mov xchg cmp aam jl sub test daa fild pop lock lahf movsl mov aad jmp (bad) mov mull cmpsb sbb cmp or out (bad) xor xchg cmpsb out adc in mov adc jmp mov out insl or jle fcmovnu aad mov popl daa xlat push mov scas jle or mov mov repz mov dec add and lock mov pushw addr16 pop xor cmpsl test push jb and xchg sbb mov lss sub arpl lret lret push mov push mov sbb or or mov jmp jb mov fs cmc push mov push push mov ret or imul sbb dec test pop pop pop dec push push lds pusha mov or loopne nop aam mov pop push sti inc push mov mov xchg or adc ds mov or cmpsl imul adc mov xchg roll mov bound mov cli fcmovne ss or sti fwait mov xchg jg insb sub fistpl dec iret dec test mov cld clc adc pusha test bound pop jno outsl mov lret (bad) js shrl call imul (bad) mull pop test inc adc xchg or xlat add add and sbb (bad) xor addl adc pushf out jl xchg pop or call xor dec mov or (bad) clc rcr lret ja dec in dec cmpsl sbbl mov adc mull adc jnp xchg test cmp test popf cmpsl std data16 jbe hlt mov pop fstp push dec adc mov dec sti or lcall sbb lds mov inc or mov cmc dec ja outsb and out push push push mov (bad) mov std je jmp stos and and adc seto (bad) lock out push cmc mov xor push add incl mov movsl (bad) rol mov gs (bad) xchg and xorb mov inc jo rcrl xchg hlt adc pop inc mov mov inc pusha jno stos jns mov call (bad) add mov dec lea ljmp add mov adc xchg mov ljmp xor inc fcompl mov cmc popa scas adc not xlat (bad) movsl stos sbb leave insl adc sub sldt xor adc in jle adc jb fild scas leave pop rcr push imul inc adc lods imul mov movsb pop fldenv lock adc inc lods es ljmp (bad) mov mov icebp ret mov adc xor xor dec test daa rcrb push pop sub insl aaa mov sbb pop mov and outsb out xor aam (bad) fildl push (bad) pop add or hlt cmc mov stos push add dec popa psubb ljmp leave cmc pop test aas jmp jne call inc sub or int (bad) cmp je or das rcrl or cmp mov mov daa add orl or xchg (bad) and mov jne pop fstpl push cmpsl inc mov or das mov ja adcl or inc aas (bad) dec les js lods (bad) cmp jecxz adc daa pop in movsb fistp xchg xchg dec sub dec xchg js std loop push imul test dec fmul test scas outsb inc bound outsl or pop fsubl shrb icebp and les lods add lret or inc daa lea insb or out sub fimul jbe sub (bad) shlb leave or repz mov xor insl mov cmp aam or add or pop fcoms mull fsubl dec call dec jnp adc test int3 mov sbb push or int adc pusha aad or jns add mov and call dec rorb test orb xchg or push inc jle cmpb call icebp repz loope dec pop (bad) setbe ds repnz fidivr xor (bad) or mov mov dec cmp pop or pop enter ret cmpb mov push je das mov ja neg int jbe mov ljmp sbb into cmc sbb fisttp inc adc in push sub adc cltd punpckldq dec stc xchg push pushf mov pop gs pop enter mov repnz das aaa inc (bad) xor inc data16 push sub add test cmp xor rorb cli add jmp jb pop xor mov dec xorl add mov ds mov cmpsb cmp dec adc jns push fcoms test movsb stc mov movsl sbb or mov xchg jecxz clc or dec js int xchg xchg add mov in xchg clc and jo aad mov stc or es adc str cmp and sub leave icebp lock sub lds mov jmp push add sti add call out xchg sub arpl pop shll mov ja xor cmpsl jg or mov inc (bad) repz and and aaa test sub lock call jle mov xchg push cmp in xlat or jl mov sbb lods xchg idivb or add cmp hlt in cmpsb fimul or jo sbb bound mov in lds xchg scas xor xchg aas xchg test or not (bad) mull cmp scas fimull pop (bad) mov outsb xorb push cmc or pop ljmp ret movsl and and leave fmuls push into or mov cltd and ss mov pop lret or inc sub dec add loop test jl sub xchg jecxz mov sub cmpsl mov adc cli jnp gs sbb sbb sti fcom in or lock fadd data16 mov test inc jae stc decl stos adc lds sar mov mov xor mov lgs out (bad) fisttpl pop mov mov mov adc xchg fnop mov cld push or jmp push jge adc nop add inc lds and rcll imul insb add movsb daa and jmp cli out popa loop or adc mull dec add add cmpb andl in fwait add jno sbb and mov pop repz mov movsb sbb push mov sub jmp js lahf cmpsl movsb pop movsb cmpb mov or loopne pop lcall mov push insb and jecxz loope (bad) jl jge fdiv pop hlt and push and pop leave jns or jl sub imul test jbe test push xchg lods cli mov rcrb jmp pcmpeqb fdivr adc lods stos jecxz cmpsl mov lahf dec in ja movsb mov cmp adc mov xchg or adc pop repz adc cmp or outsl cmpsb dec or fwait subl jno xchg mov mov scas push or xor mov or out test push sbb sub stos xor lds push int adc mov sbb dec stos imul or pop (bad) fnop jae or xchg adc test and push jmp aam orl push mov add mov cwtl sub testb mov aas add orl jo insb enter out pop clc and in leave jg xchg push or lods inc push aaa mov or ja popf or stos lret push xor es mov cli xor hlt stos cmp dec mov mov lods pop mov leave pop scas outsl lods leave testl mov aas pop xor dec movsl mov dec or dec cmp or enter insl mov pop sti lcall dec out repnz sub lods ja cltd mov push sub inc cmpsb pop and mov scas or dec mov pop stc mov outsl ja mov push cmpsb mov call imul and and xchg arpl cwtl jmp sub mov jno fimull jbe jl ljmp push pop add inc in or js movsb jo jecxz sbb insl shrb test inc add loope addr16 jle xchg mov test sar insl adc jne int pop in pushf xor test pop dec add push icebp mov (bad) or outsl aam lock nop dec cmp xchg sub sub mov or lods imull cmc ss inc sub jns or inc les ljmp jns xor add add dec cmp dec es (bad) or loope add lret sub fbstp and adc and das ljmp leave lret xchg loop jb jmp or dec repnz pop pop pop movsb jae push pop sti out enter mov into jne or imul (bad) sbb inc hlt sub push bound pop stc mov inc add fwait inc negl or cmpsl mov mov pop fldenv or iretw mov (bad) mov mov push mov (bad) mov xchg push push mov add addr16 (bad) fs (bad) push out loopne scas pop popa outsb adc mov aaa mov (bad) mov bound add sbb loop aam dec sub dec mov pop fildl pop movsb icebp push dec ja add in sbb sbb int sub cwtl out stos cmpsl lahf imulb outsb call adc out lods pop jge cmc fidivl add aam insb mov mov mov cmp mov stos jp lock aad push adc cli push or insl cmpsb cmpsb pop jmp scas std cltd add fwait sub roll jle mov adc mov push cmp adc (bad) jae popa inc inc jmp in cmc cmp imul mov movsl insl (bad) xchg mov (bad) lahf sub test imull dec mov push test add out test inc sub or xchg loope stos fldt cmc cmp dec dec ret or jnp aam mov or jmp sub mov push inc adc and mov popa mov dec and mov into or leave fcomps or pop xor jns jno jmp dec add imul fnsave in xchg mov sahf imul loope aam sub mov lcall mov sub mov std or lcall aad nop push mov fwait pop jne fistpl sbb cltd (bad) subb testl or jb xor test mov cmp cli fist popa lret pop (bad) scas adcb or xlat add inc add aam sahf cltd sbb fistl cmp adc enter orl loopne push push and mov repnz mov out mul or xchg loop pop scas dec sub popa repnz mov or push std add mov xor lock stos push inc xchg and add std mov lds call jno xchg mov jo fldcw sbb ficompl mov or push fimul aam out and js cli repnz cld cmpsl inc fisttp or aad mov divl xor pop rorl adc mov gs mov popa and push fmull movsb push pop push sar jp cmp cltd call xchg sbb sub and xor add push ret xchg loop sbb mov mov xchg xchg mov push adc cltd fisttpll pop cmp cltd fdivl inc or insb inc mov sbb jbe cmpsb jo mov sub insl dec les cltd ljmp mov mov sti xchg adc popa std jne sub dec dec xor bound daa fpatan inc js (bad) arpl pop adc jmp pop pop stos outsl leave cmp xor lds subl mov pushf cli repz sbb inc mov dec lds sub dec adc gs and dec jno insl mov dec push jb out lret or test mov fcoms mov jb jns adc or loop into cmpsl lds and cmp nop enter xchg push out jg (bad) in clc stc cmp sbb fs push fsubr and mov je pop imul in push dec jg jmp ficom jns jne mov leave cli adc mov pop cmp hlt and jge pop bound mov mov or inc cmp sub movsl lock sets das jns dec test mov mov mov adc sbb fwait xor nopl lock inc and cmpsl or pop insb out dec and pop mov js mov add stos test ret addr16 pop jl jp movups rclb add gs aam jo cld das sahf pusha rclb and or jl (bad) and mov lock lock add in insl fwait jge adc mov loope jnp mov test jne push inc sub sbb addr16 repnz push dec loope pop rolb lahf fist ret xor mov rclb cld jle jmp out ljmp xchg add cli popa inc bound cmpl ficomp addr16 xor or mov ds dec stc jb jl movsb (bad) cs sub inc xchg lcall insl push push out mov movsl xor xor adc jo or lret in test int or pop rclb cmpsl dec gs mov mov adc stos pusha dec outsl mov cmc or in (bad) adc jle movsb jns add dec sbb jo mov mov xchg xor (bad) sub push cmp out adc int3 mov jecxz inc (bad) and mov lret jo notb in cmp adc adc mov jg (bad) je inc inc movsl sbb xchg mov cli pop jno sbb xchg mov bound mov pop ss les sub test jo pop (bad) ss sar mov adc push pop jecxz add mov lock or stos fs dec aaa xor stos jne nop jno fisubl mov fidivrl push ljmp imul mul inc loopne and ljmp lcall int movsl sarl cli push inc xor or mov or xor test call aam negl sbb add fwait sub into lock push hlt push and loop mov push dec lret pop inc push jl push scas xchg push add imul enter repz inc nop jecxz sahf lods ljmp enter cli push xchg fiadd cmpsb (bad) xlat or fwait test divb scas in mov sub nop pop cmp insl ss (bad) jo imul sbb pop and repnz jg push notb out out mov int3 xchg xor inc pushf out mov or cmp jo lret addr16 adc adc or imul mov xchg scas mov or cmpb xor fmul mov orl dec fdiv pushf dec lds mov aam pop cltd pop rcr out sub rclb in cmp scas add lea testb pop out ds or cltd xchg adc mov mov das dec dec cmc and jnp sbb sbb jb cmp negb in add push fild in sub jne adc aas incl mov xor lret push (bad) leave outsl jg fwait sbb div cmp sbb push imul sub es mov rorl add and push aaa jnp mov mov pop or pop imull xchg inc leave cld das fiaddl ret inc mov popa add jbe in push enter not inc cltd cmp add mov dec scas cmc adc xor and out add repz mov sarl mov mov push xchg xor arpl adc (bad) out jmp fcoml aas lock cmp mov adc jo add or cmp (bad) dec movsb xchg lret and jne jle data16 or movsb in ja pop out (bad) dec pop or adc adc aam inc lea negb leave popa xchg dec testl push (bad) xchg std out aad sbb or cmp dec test adc std stc inc mov in and or inc ds mov mov xchg dec or mov jbe rol cwtl jae das test sub fldenv inc rclb je add insb rolb cmp push (bad) mov call movsl fisttp mov mov repnz and jmp insb or test adc bound push insl jbe loopne push movsb shr mov mov cmc lahf jno lea or call mov dec or test pop les inc adc xchg xchg orb std (bad) mov mov int3 xchg or test incb pop xchg out push or xor adc sbb insl loope das out jo mov pop jl jae mov inc xor xor aam (bad) xlat push iret adc ror or add hlt je sub imul sub sbb or sbb pop fdivs fimul (bad) dec or cmc test dec adc or lock mov call dec cld or in mov cltd aam or push lret sub inc js cmp lahf loope jne push leave in add pop neg cli imul mov aaa insb addr16 in mov dec in cli cmp and insl mov stc xchg mov pop lea dec imul ja pop ja stos lea push mov xchg aad fwait pop pop (bad) adc mov cmpsl bnd je fstps pop (bad) mov ficoml cmp repz fstl and jae sub or je jno test scas hlt mov sahf lret mov icebp push int3 lock (bad) in mov and lret pop sarb inc mov movsl repnz outsb lret inc icebp (bad) cwtl in std imul sar jl mov (bad) psadbw add stos bound or adc imul aam mov ljmp insb test pop into insl mov inc push rorb mov dec push mov add xchg popf pop scas add push sahf enter insb leave adc scas pop sbb sub push (bad) or (bad) pop jmp sub (bad) fwait std jo jno add inc imul adc xchg std (bad) jno leave mulb jns inc arpl into pop pop aas jo and mov popf cli rorb mov sub aad test cmpsl insl je inc cmpsb hlt xchg sti mov sub push out mov (bad) sti xor popa jg les enter adc pop in jecxz nop pop mov rorl int pop inc push add cmpl imul sti sahf in mov mov or lds mov xchg cmpsb test or fild add xor sbb cmp xlat or pop jb mov pop iret into xchg cmpsl or mov mov xor int3 addr16 xor xchg inc (bad) ja sub daa dec dec mov or insl pop mov dec xchg scas popf mov jl jne ja int3 dec pop daa sti push and lods test outsb or cmp or imul mov or clc out pushl lock mov leave jecxz scas pop (bad) mov movsb sti icebp push outsl sub add mov jae ror loop xor (bad) in ffree xchg or (bad) (bad) adc orl xor and shlb inc inc sbbb xchg cltd dec ds stc cmp or cmp sbb aad jb fisubr xchg or or ret (bad) cmc rcrl dec add push mov pop sarb xchg inc rcrb sbb push rolb stos sbb cmpsl push leave lods insb ss jae lock mov sub or cmp (bad) test adc aas mov dec cltd leave ja push inc dec dec shlb sub xchg inc jmp out mov inc aaa dec fnstcw mov cwtl inc or cld scas cmc xchg fcomps xor jle push mov into and fmulp testb mov adc mov mov dec stos in pop fmul or lds dec inc int3 (bad) mov test xor inc and lret xchg daa pop sbb (bad) cmp je xor repnz (bad) dec inc (bad) mov cli inc jmp ljmp sub test mul nop xchg inc imul add hlt mov jecxz dec mov packsswb and adc int3 push cltd xchg jne xor (bad) push inc cli mov pop adc xchg insl sub dec (bad) stc in jb and je cmp jge lret fbld push dec or faddl mov ret mov rolb sbb aam lcall subl mov mov xchg (bad) and ficoml mov test sbb sti lret leave mov adc pop adc cmpsl cld add stos insl xchg shr or xchg cs and push aad insb sbb stc loopne xchg (bad) or sub lret mov sub add lahf dec cmpxchg mov sbb cmpsl popf pop push push pop out inc fcomi mov or negb in cmp leave push mov (bad) cmc and pop dec stc inc shr or or mov (bad) sarl cwtl fsubs fs ss fcomps mov unpckhps shlb into and lcall mov test shlb adc imul mov jle lods testl outsl (bad) sub push push or jmp cltd or adc cwtl hlt lods loopne iret push or loope fsts adc sub adc or or jno imul sub cmp or xchg les mov dec icebp mov jnp stos mov and nop cmp out jecxz adc repz push jns dec int3 mov inc pop imul inc (bad) mov xchg cmp inc cld daa (bad) cmc mov add nop dec xchg jno and xchg or lret xchg mov jecxz xorl mov or (bad) and or aam dec xor iret inc inc cmp adc push out dec pop inc and xor mov mov ret and imul adc icebp (bad) sub andl (bad) popf adc es cmp mov xor (bad) mov pop mov loop sbb test add dec imulb stc cli pop (bad) dec stos cltd jns mov (bad) xlat or stos je xchg inc bound mov dec add mov dec aaa popa xchg add popa sti cmp or out mov adc pop mov xor enter sahf cs test mov int outsl or test mov cmp repnz test popa aas int3 mov or ret adc add out lret in push push or push sti stc aam lds and imul (bad) sbb adc insb das cmc jmp imul adc loopne dec cli lcall or scas dec jne insl dec fstpt ds adc xchg mov pop sbb mov add aas inc aam add add in dec cmpsl nop lea cmc out or or (bad) stc adc ret lods push dec xchg and imul cmp mov ljmp loop enter add mov (bad) or dec jecxz repnz mov pop mov adc ret or arpl js xchg scas popf ja or push test inc or les adc push push xchg (bad) fldenv int insb dec sbb xor ljmp push stc mov or je notl test dec (bad) xor lret cmpl cli and and jb mov (bad) lcall mov push or inc lahf jp xor or pop imul push dec pop inc or cs nop cmc les ret mov out jb mov xchg pop addr16 lods adc arpl movsb dec mov scas mov mov lock inc lock fistpl inc jno sub push idivb add popa mov pushf repnz cli mov movsl pop push and cmp hlt inc push adc test cmp dec adc sub add decl xchg sbb insb sub mov sbb mov rcr inc ja adc icebp mov leave sbb sahf add cli ja nop mov mov or cli inc and fistpl out cwtl jl sub mov ret in movsb jns jo shrd add mov test in mov sub das scas aam in jle stos dec and sbb inc sub repz cmp push iret dec fscale adc adc mov add (bad) hlt paddusb iret scas test mov ljmp inc mov flds insb enter push in and mov sbb in and cmpsb in adc iret jnp cltd and cmp rorb push sbb jg xchg loopne aam inc push or mul bound loope jle test leave cli mov mov jne jge movsl push sub outsl sbb fldenv push lods or pop (bad) hlt insb inc sub jmp ljmp data16 in mov pusha pop jmp out into aad ficoml pop pop and daa push test (bad) fldenv adc imul mov pop dec test in mov sbb pop daa ss mov aas xor std movsb decb test idivb or scas adc push sub mov add into and xchg (bad) jnp xor andb rclb iret xor mov jnp fwait sub out cmpsb push pop negb push test jle imul sbb jns pop push or fadd xchg pop or lret popf cs fxtract push (bad) pop sti xlat aaa rolb dec push push fildll and outsl and mov or jns rcrl stc dec push mov sub repnz pop ret fisttp and xor enter fadd lods je scas add sub insb inc and push stc into fsubrs std sub test mov test or (bad) ljmp or movsl mov rorb bound mov pop cld mov lods inc dec or and hlt xorb fisttp pop fdivs es jo or pop or inc pop add xlat (bad) mov adc fmulp mov push popf sub unpcklps cmp sbb push and popa ja push leave inc dec adc stc call inc das mov pop daa cli icebp cli arpl int3 ja pop sub (bad) gs icebp mov nop mul push les mov aaa jb sbb js cmp mov arpl repnz outsl xor loopne arpl jmp add or shr test or add pop mov repnz push mov aaa dec sub rorb movsl in pop dec or xchg inc inc rol addl dec or xchg cmc stos adc stos xchg sbb std test jb cwtl mov xor mov xor les fiadd addb sbb jno add cld sar rorb jo dec or lret fimull stos jmp or xchg add mov lods or les pop sbb xorl lods insl mov aad sub or mov mov mulb mov das sti and ljmp xchg repnz jecxz mov lods das mov or dec jno push pop testl and (bad) mov adc pop or jns jmp (bad) cmp adc mov ficomp add xor cmp data16 push andl ficompl mov ljmp (bad) push fucomp sub inc fisttp repnz dec or and fcompl out pop xor mov shlb nop dec (bad) ss adc jmp jae jle mov add adc scas test insl mov mull add adc sbb adc rclb popf call movsl dec push mov mov inc or xchg pop out push mov (bad) ljmp jns leave pop xchg in add (bad) xor adc aam or mov xchg ss mov roll int in insl mov aam leave adc dec idivl ret jno or lcall mov push pop or mov lret dec lock packsswb (bad) adc mov mov idivl sub dec jp das int3 sbb (bad) aad xor mov into je cmc adc push or mov jno test jge mov or cmp dec xchg out pop or ja or fcmovnbe push ret in or jbe fs enter imul pop or mov clc mov jle out sub xchg or stos inc pop dec imul insl ss sub jne or movsb rclb jle or inc addr16 aam ljmp sbb aad dec das rclb in inc or rorb and loope test xor (bad) (bad) std push mov or flds imull cmp and sub or lea pop or push sarb test pop insb in mov out or scas mov mov sbb or mov fsubrp outsb xor int dec negb test push inc lea orb (bad) jnp lds mov inc scas negb inc push lock mov rcll xor in jle jno sub jne push dec dec or xchg sub pushf cmp in sub and or lret addr16 xchg imul or pop fmull cltd enter mov sub xor sub in movsb ret dec sub aaa std out sbb dec lcall jge cs cmp sbb push ss xor xor push pop popa or push ja es bound mov addr16 mov or xor out stos movsl lods mov out frstor test out rorl inc push and add and xchg roll aas dec insb or pushf fadds pop (bad) sbb stc or mov cwtl sti push inc add push pop sbb mov mov xchg repnz (bad) lret test mov (bad) mov mov xor rorl flds cmp lock out xor pop or mov add pusha jg dec or adc psrld pop or insl in (bad) or mov xlat ja lods (bad) dec lea jns mov rorb in adc (bad) stos sahf cmpsb add int3 dec ljmp sub mov rolb or sti popa (bad) jno addb movb cmp ss cmp rcll or scas shl shl or cltd jno pop cld mov push pop add loop (bad) repz or add mov push bound or aas inc ds xor or pop (bad) jns or sub enter xor push aam (bad) lock mov cmp sbb adc (bad) pop jno jg int int3 fstp jle lds mov mov call dec mov (bad) stos adc mov or or dec jp cltd jle out jge mov push mov (bad) jns mov scas loopne xorl addl xchg insl xchg imul lods cli (bad) dec dec fsts dec adc dec sahf test xor dec add mov lock adc lods xor daa test lods mov xchg jnp scas test adc inc mov insl inc mov jns and pushl sub inc sti sbb or jl nop repnz fs fisttpl iret mov (bad) frstor or daa popf sub imul in inc pop (bad) lret sbb cmp clc xlat mov (bad) lret jns imull push dec pop or repnz fmuls test xchg or pusha das ds movsb or mov int3 test pop add jmp sub cmpl decl mov or mov shll jns jns or in lods or pop ss add or mov sub or jae shrb imul xor adc ret (bad) push xor mov and rorb int3 inc mov rcll sahf int push adc pop incb xchg test nop mov xor cltd movsb insb lock pop mov in xchg push dec jmp mov mov jle pop cmp xor inc daa mull test sub hlt jb stos inc ds ftst lock pushf imul stos repnz test cmp pop fidivr test in adc fisub mov rolb clc mov stos (bad) leave sbb jo out ret fldcw xor jp mov std rolb push push aam sbb fcmovb push nop xor jmp push pmaxub out xchg movsl test stos xor pop jecxz movsb stos stos movsb dec mov mov mov add js sub dec daa cmp or fldl push add mov popf push sbb scas out cmpsb xchg pop test mov mov pop leave cwtl xchg les lcall sbbb jo adc dec pop sub xchg pop xchg lahf dec std mov shrb in scas adc shrl sbb lret enter movsl push dec jl push call lds pop movsb jmp sbb ficomp fldenv mov stos lret loop or jl (bad) out mov adc mul fs aas dec or icebp push dec pop mov xchg jecxz fistl shrl cmpsl and arpl jp mov mov pop addr16 call push or mov push pushf in stos icebp mov (bad) (bad) mov (bad) cmp stos adc int mov dec sub add cmp stos cmc or ficomp mov pop rcrb lods xchg stos out mov mov cltd arpl out jp outsb and xchg popa dec aad pop aam jmp out out dec pop mov movsb inc dec pop fldl fsubs scas cmp jmp jae in aam lea bound test adc push cmp xlat cmc cmp jns ret jno fs jne xlat xor je cmc adc pop andnps in aam test push insb iret movsb jo mov stos mov mov in adc adc xchg dec pop outsl sub push sub sbb jbe rolb pop cltd mov adc (bad) out fstpt call mov pushf xor mov cmp jnp int dec out mov js xchg test hlt pop jns xchg and insb (bad) or aas stc aam ret (bad) or loopne xchg cmp add repz cli and mov xchg dec jne clc and daa ljmp push mov pop lahf jmp dec leave bound xchg sub xor dec cmp mov repz je sbb sarb add add sub popa (bad) or push cmpsb xchg cmovnp js jp pushf movsl or lret sbb scas xchg repnz sub cli shll jns je repz aad mov push dec mov sbb cmp insb popa fs lea or xor out lods or dec daa and cmp or cmc scas pop out std repnz xor imul unpcklps jmp add fmull call mov addr16 fcmovb rol subb xchg xchg or inc stc pop (bad) into push mov xchg pop nop loope mov sub stos in popf inc push dec mov jge adc adc dec (bad) insl stos inc push daa mov jp popa stc loop ds sbb mov nop sbb bound or (bad) dec mov push lea addl or je cmp mov sub inc mov fwait mov (bad) pop pop inc inc ljmp cmc mov (bad) adc movb xchg push stos sbb push push jle insl pop add pop aad sub push pop mov mov push (bad) jo mov pushf loopne sub inc push and push or pop adc jp sbb lock xchg or loopne in leave stos cmp mov or ja outsb fbld cld js mov mull jmp pop mov mov lret int out pop jb xor xchg mov cmp not (bad) jo pop pop insb push pop lret jb mov mov lods iret dec in inc aas adc cmp or pop sbb fs or sub pop (bad) enter sbb and sar push mull jg shr or add push dec or or mov sahf repnz sub mov add loop mov clc xchg mov mov nop shll or mov imul test dec jl dec or lcall mov dec or pop out inc lods sbbl mov js out cmp or adc repz aam push or dec fnstsw (bad) and rcll jno jno movsl int in (bad) jns push sub test dec mov mov rcrl lods or jnp in (bad) cmp jp (bad) icebp adc inc add inc (bad) rorb push insl std or outsb or jo inc je (bad) adc mull shrl or cs das jo jmp push out std aaa xchg or pop mov or mov mov ror fcomps movsb (bad) cld lret adc imul xchg mov outsl and xchg push mov rcll sbb popf stos repnz push push xor or or shrd inc push add iret je fistpll jge in xchg hlt dec mov pop sub ficoml mov inc lea je jns jl push mov xor wbinvd pop loopne push loope or addr16 fnsave jle push into mov mov test push gs push sti mov jg cmp rclb test mov sub mov mov mov test (bad) jle adc and mov adc jmp pop dec aas out testb mov std dec mov cmp adc (bad) iret inc aad xchg or push jl jmp cmp xor mov in aad mov decl cmp std aaa out lds jb jns out test sub xchg push stos loope (bad) loop imul inc mov pop jb jg jmp decb (bad) sbb test scas push inc sti jne mov sahf mov cmp xor pop mov cmp out lret test dec lahf pop cli cmc ret pop movsl mov lock (bad) and fldcw (bad) fsubs test stos or pop in stos dec imul shrb xor push loopne sbb jl leave cmp out ret push or push lods pushf jno or and (bad) inc fsubrs movsb or inc int stc (bad) fisttpl leave rcll dec test in (bad) jb lcall gs das mov inc ss push (bad) aaa or jmp loope pop cmp sbb lret out cli in mov (bad) pop add lcall das pop loop push cld test mov sbb out cmc ss lock mov aam sbb cmpsl or leave loop jecxz jmp rcll or cs mov push or dec js (bad) pushf popa or and cmp jp out pop sbb stos in fcomps xchg dec sarl stos inc clc std pop fxch or mov hlt cmc scas popf bound in in lcall (bad) (bad) loop mov fldcw mov add in cmovns (bad) dec fs bound lock inc (bad) fisubrl (bad) aad jge push and and cs aad fimull inc push xorl xchg lock lret mov jge test shrl or add jnp or or leave push insl jmp enter jbe adc push bound mov ret test test cmp mov call xchg imul out push orb pop aaa pop cli jl push mov xchg je leave movb lea das (bad) mov xchg ljmp (bad) lahf test sbb loopne scas rorl mov pop cmp inc lock neg push or add push xor xchg lods push (bad) mov leave mov aam out xor sub sbb insl pop push sbb inc repnz mov inc cld cltd lret mov ljmp cmp sbb aaa bnd adc int jecxz fsubs sbb pop je dec dec insb sub sub dec mov test fdivrl sub subb and add loope orl adc pop fbld ljmp cmpsl test arpl frstor mov repnz cmp dec lock mov cmovae (bad) pop mov test jmp xchg aad mov ror sub repz repnz push sbb test in ret mov add std (bad) xchg ja nop movsb test jo mov gs insl cli push or lock movsb push sbb mov scas ret cmc je adc (bad) cmpsl test jo repz test mov nop negb je xor bound les pop insl insl imul stos lahf (bad) repnz or push enter dec or sbb iret xchg push int3 xchg fnsave or insb xchg in fildl xor mov outsb xor or test mov in or jp aad shl mov xorl enter inc cmp int push and (bad) inc dec push je fidivrl pop or fwait sbb add sahf inc xor scas mov psubsw push fsincos xchg sub leave and or addr16 xor mov je enter xlat imul or ss loope ret repz outsl xor sbb leave sub add push (bad) loope repnz es xor (bad) mov ficomp jne (bad) aas xor mov loope and and lahf (bad) mov mov in rcr movsl or and and out adc or push ds iret adc cltd or sub sti arpl inc or push cmpsb jp push mov mov jns ucomiss sbb test fs (bad) mov jecxz rolb movb inc inc push js fcoms dec cmp add mov test cmp pop cwtl pop xchg lahf mov sub cmc cmpsb pop inc dec dec outsb or and ficomp jae (bad) fadds scas or les arpl pop xor stos adc sub adcb sbb repnz int3 jno sub pop mov mov cmpsb lock sbb adc mov ss fdivs push lea mov xchg in mov push xor lret sar rol xor ret stos cmc inc lds adc fcoml sbb ss adc daa mov orb xor jle,pn mov dec sbb or sub test loopne or jo adc cmp pop bnd insl xor jge cwtl inc push xchg lock leave jge sub mulb lahf jmp loopne add xchg sbb in pop sub (bad) (bad) inc mov divl stos lods insl add fimul push lea shrl leave stos jno sub push dec add mov lods inc jp dec outsb out jmp decl mov repz add daa inc sub loope leave (bad) jo popa sarb test inc jge insl cs push cmp testl (bad) divb cld mov sahf daa stos shrb push (bad) and fsubrp fdivp outsb call fs inc sub pop arpl (bad) jno adc shr (bad) or or mov jge testl or pusha mull cmp jmp flds gs rorb rolb cmp int3 mul mov sub inc (bad) mov inc stc sbb out pop and jno fcomi jge sti sub out aam add idivl mov or mov aad notl inc mov dec ret jl fdivs cmc or push mov inc add repnz sub mov push dec or or loope (bad) or or mov aad loop push decb jmp jae xor mov or xchg into xlat fisub lods test int or cld out cmp jg mov (bad) pop cmc adcl or xor or jecxz lods and push stos mov pop add dec in (bad) mov jg dec in xchg mov xchg cwtl jne (bad) jecxz inc adc sub xor hlt jb sbb ss dec add or jbe les fnstcw or cmp test mov jecxz push cmp notb fildl rcr sub dec aad repz mov sbb sub adc adc fstpt pop inc jecxz aaa (bad) or mov xchg inc cld addr16 (bad) or mov iret in mov push dec mov gs add (bad) xlat insb testl in lods and or lods mov ret sub fimull mov imul pop sbb cmp xor cmp shrl mov xlat insl sub out inc mov push push lret (bad) jb jle jne jl xchg mov (bad) dec push cmp xchg pop stc xor sti into in adc or das push mov loopne mov (bad) mov jne or adc shll ficomp outsl out repz nop jns mov sbb jno cmp imul xlat sub dec push or add movsl insb dec aaa repz push jg fist xor xor mov or xchg pop rclb xor inc adc adc push ja out inc and xchg scas jmp pop call jns rsm sub dec mov (bad) mov fprem1 pusha or notb xor mov jo or and push pcmpeqw cmc mov xor sbb adc or add xchg and movsb and in insl cmpsl bound mov hlt data16 (bad) js pop std adc mov xor scas or (bad) jb add jo adc rcl cld jno jae mov leave cli arpl and xor add cmp fisub sub push sub fildl and mov jae inc inc mov int jmp add mov (bad) mov xor jns inc pop test imul xor mov dec mov rcll imul leave (bad) into adc addb jbe adc icebp leave in jp idivb jmp movsb or mov push mov mov add jle dec xor or mov push inc dec rcr adc inc pop adc xor mull mov scas push lahf enter jmp jne inc (bad) out imul or insb test rol push incl xchg out ss xchg mov in cmpsl sbb or test pusha das push mov jns stos push rorl shr jne push xchg out leave push dec mov mull es mov jg movsb adcl aad pushf stos scas fwait or les aam dec lods ljmp jmp popa rorl pop pushf test test fcoms xchg aaa cmpsl jo mov push mov rcll mov cmp dec dec sbb adc lock jb push addr16 mov std add dec pusha jecxz adc inc mov dec ds xor fcmovnbe stos cmp mov jp lods out xor xchg aad add push add sahf adc sbb popa jmp add mov xchg out cmc cmpsl push pop jb jge adc inc pop lcall jecxz scas imul mov fimull js cli pushf test mov fisub add dec xchg std pop es adc scas inc and notl mov lret inc mov and or jne and mov iret adcb pusha xor or and or lcall aaa pushf rorb loope nop pop pop mov and xlat inc icebp loopne or pop mov dec sub mov pop out jg sub imull (bad) sbb xor leave or in (bad) lds or adc cmp cmp sti lcall push xchg and mov addl lret or or (bad) sbb sbb add sbb lret inc mov xchg out or jnp es xchg or mov or xchg inc (bad) loop adc or imul and xor out mov hlt movsb (bad) mov mov jg sahf scas sbbl movsl jnp lret fnstcw mov sub mov sub repnz or adc and push in jmp or xchg outsl sbb mov mov decl push xor push cmp jp ss inc nop lods xchg xchg test pop in divb pushf push dec or in div das imul xor push mov js ret cli cld pusha (bad) sub lock fcomip pop fwait push in aaa ja sub movsb or cmpsl pop mov lock popf int lods imul or fcomps repnz mov les (bad) push lret dec cs or (bad) popl mov fdivl out fwait stc jle add das sub test call hlt xor dec inc inc xor (bad) dec lea mov out or xor ret jbe pop or push rorl scas adc cmc xchg jmp fwait push mov bound fistpll mov xorl pop cld mov divl lret jbe ficompl pop push add jb stos jmp pop jne outsb out mov inc ret adc cmp pop enter in cmp out idivl cltd cli test addb adc js test push data16 xchg notl mov mov imul or jb scas or movsl (bad) pop aam test xlat fadd jb outsb out je lret push jmp pop push mov lahf mov jg jns in shr mov insb cmp mov inc nop in (bad) aaa xor stc dec cli loopne out pop or xchg dec push xchg or flds and pop cmp lock sbb push insb or jo ret xor sub push insb or pop fnstsw aad cmp push pusha add pop lahf (bad) mov icebp rorl mov lcall mov mov fmull lahf mov mov cmp sbb cmc movsb loope jbe gs xchg add mov inc pop leave aaa icebp arpl loope cmc lods insl push sti inc xchg pop adc dec push data16 sbb mov fwait pop leave inc or xlat divb inc jg mov or xorb or push mov lea (bad) dec ljmp movsb aas (bad) shrb push fmull push fstpl hlt push or add pop push sub popa xor rcr jp sub xor jnp test out in cmp lods insb xor sub or sbb and aaa in or test jne sbb or inc and xchg xor fwait aaa sub jecxz xchg fistpll out adc test jmp loop ret mov icebp jnp popf adc adc inc or (bad) fnop adc in fmul dec cmp into cli scas or jl call vmovlps mov push out mov cld sub (bad) mov xor fsubp cmp int3 je or push jl aaa stos sub jle stos jne sub cmpl int3 imul mov nop jno cmp mov xor pop iret pop adc scas fwait xor test or popa lss dec test daa xchg push mov lods mov mov test and pop insb pop push fnop outsb cmp adc jle add ss mov paddd or or jne mov int test add jle push xchg cltd repz test test bound sti hlt adc loope cmpsl loop int jge or sub add movsb pop gs insl xchg and cli scas outsl loop std popa push test jbe sbb push (bad) stos pop mov push add push imul lcall cmovs and lock sbb or jle add inc (bad) push lods jno jl adc mov push mov pop dec stos and jne dec (bad) aaa adc or mov rcrb add cltd inc scas pop out jl (bad) decb (bad) sbb out test push or or dec adc sub data16 adc ljmp cmc mov sahf push inc xor xor push adc enter (bad) repz dec loope imull push popf aam pushf xor jnp outsl stos test imul imulb ljmp and out sub add fisubrl push or aas adc jnp and cs or or test push leave insb push cltd xchg adc jns or cmpsb mov icebp loop add fldcw mov mull outsl or bound cltd aaa lret lock xor dec mov cmpl xlat bound mov iret adc leave or sub (bad) sub pop or mov inc pop adc or cltd (bad) and and and out mov sbb mov stos (bad) or jl jecxz inc or cmp sub je xchg inc in aas and lcall ds add sub leave lret out loop or jo lret lds cltd sub inc dec xor inc cltd fdivs cmp out popa dec fisub imul inc push outsb pop sahf stos leave rcrb or dec xlat lahf in enter aam leave int xchg idivb push cmp addr16 push cmc jp adc scas adc fcoml add add pop cmp lock xor or mov test ja inc add and sub inc movsl pop add mov or pop dec test xor jecxz stos mov add repz inc jo movsb add fbstp lods pop in pop add jle add mov cltd cld iret mov cmpsb ret add in test xlat mov stos (bad) push ja std fldenv in xor and add sub sub dec jno ds ss cli or loop mov xchg loope aas and cmp dec lcall sbb sbb cltd test fldl or stos jmp notb push pusha or out xchg fldenv jmp popf std sub adc dec mov or jle jno mov jecxz xor pop int3 lret hlt push loope mov inc and inc cmp xchg sti jns adc pop scas rcrb jecxz notb lods pop pop movsb pop xor ja push jo jns icebp nop dec aaa jl ja mov aas test mov add push imul loopew dec das inc mov jecxz or in (bad) jb loopne test lods jmp lock loope arpl stc jno or inc push xchg inc (bad) adc pusha sti mov push out dec cmpsb decb or push mul push imul movsb or mov dec adc cmp cmpsl and push aam bound add lahf mov cmpsb sti les (bad) hlt jbe mov mov fcompl xor sbb lds mov subl repnz clc xor (bad) adc sub mov jmp xor dec loop add sub pusha lock sub lods test pop jmp or mov (bad) push pusha adc xchg outsb sbb lods and sahf dec stos mov rorb add ja cltd jp xor pop punpckhwd pop addb or sub iret int lods dec daa sbb fistp in or faddl or xchg jne fisub rorl lret jg inc mov dec xchg pop lods hlt sub imul fptan loope (bad) mov dec sub xor add insl lds mov bnd mov jp sub cmpsb dec std out fst dec stos inc lcall add mov fwait movsl in (bad) add jmp and lods int test or int loope dec or (bad) imul jo and cmp mov lods int or xchg fisttp mov daa fstpl cli jge test movsb pop cmp ret leave push (bad) dec fsubs movsb pop notb sub xchg mov jo or fdivs or cmpsb xchg daa pop (bad) add fs mov mov lret loopne aam fcomps xor lea cli or adc or into sub or cli inc fmulp inc nop ja repz pushf and push mov mov fnstcw loope cmpsb sub out jno add (bad) daa cli mov repnz mov in xchg push fisubr imul or add and lret sub lods (bad) push pop cli jp call and inc loope lret cmp stos ja push enter mov ljmp pop repnz (bad) rcrb imul pop sti mov add div loopne and in sub nop mov xchg imul xor or and aam sbb mov aad mov shlb adc lds enter rorb mov mov push push rcrl add mov lret test or cmp (bad) stos mov in add mov cmp jae mov imul xor daa cmpsb fwait loopew sub xchg (bad) xor dec push dec sar push jo test cmp out adc and loop jae adc mov pop repnz out jo jge std mov cld sub mov shll test jnp xchg jae daa nop stos je icebp hlt adc pop repnz inc xchg out dec repz (bad) arpl or stos fs out or adc bswap fdiv icebp add inc js inc dec rolb aas (bad) lods mov pop add (bad) loope cli je in xlat push add fistpl popl mov push push scas jo clc mov movsb cmpsb test ss lahf dec jae pop lret mov mov mov (bad) repz mov insb sub cmc mov jno jne inc in mov xchg dec test loop test stos add ljmp (bad) inc jg in in inc mulb mov jno fisubrl aad adc in arpl je xchg jo adc pop mov cmc hlt movsb pop lcall enter push leave xchg push add xchg popf lds xchg push outsl in push mov cmp das in cmp arpl adc mov adc sbb sub or (bad) out xchg iret out adc pop fwait xchg pop scas cmc prefetcht0 xor dec out sarl pop std inc pop jae or jl sahf bnd or das (bad) sbb out lds lret add aad sub adc mov mov xchg cs or dec jno stc adc movsb cltd (bad) dec sbb ljmp xchg push add fildll push jbe or lret std dec adc divl sti ret push cmp pop mov in aas pinsrw ret mov sbb cld fsubrs xor imul xchg pop xchg loop mov repz cmp aaa mov loope push mov mov push dec xchg lds xor lods inc cmpsl inc dec lcall lahf dec sub movsl sub rcrb leave jne int3 fidivr mov (bad) in dec xor leave and pop and sub and pop jb xchg jecxz xor cmc push insb cmpsb test cmp pushf icebp or loop adc inc shr fildll sub mov dec jns scas pop sub lds adc jle xchg (bad) fimul test adc or mov add aam popf and lods or pop dec ss adc or jecxz sub add jmp cmpsl and movsb ror mov fmulp push or mov sbb pop inc rorb adc dec cmp outsb adc xchg xchg sbb scas mov lods mov ret repnz jbe jnp sub mov (bad) mov dec test mov fs xchg dec rorl repnz mov dec mov cmp lods dec or pop sub dec push lret pop in or (bad) out lret notb nop popa arpl xchg repnz (bad) negl xchg orl test aaa sub lcall jnp or aam test mov scas and jae js jne repnz cmp pop dec into fsubrl mov mov hlt push cwtd in test inc mov dec (bad) fwait mov or psrlq add decb nopl and mov rorl stc aad mov or fxch xor and dec (bad) sub push (bad) cltd cmp clc pushf sub ss (bad) or (bad) jns sbb dec mov adc cli out (bad) mov aam mov repnz push and test fs sti pop js pop leave push cmpsl cld xchg cltd lret mov mov or mov inc xor or icebp jmp mov or push frstor jmp or mov fdivrl imul sub fidivrl lods imul movsl dec test jo adc (bad) shrb add pushf decb divl xchg cwtl imul mov or cli lret enter jmp sub inc ljmp les fistp xchg mov std jmp jnp add and mov inc inc cmp adcb dec jbe lods (bad) aas inc test add icebp pusha aam xchg mov mov mov mov addr16 (bad) or xchg sub fiadd ror mov test lods cmp loopne and pop sbb in decl mov int mov inc push (bad) dec mov or sub aam mov (bad) jns sbb xchg aam cmc into rol cmp fsave bound cwtl jae xor call jle dec ss cmc or and add dec jecxz sahf subl sti dec call mov dec icebp je mov sub pop cmp xchg mov stc test lods adc sbb mov roll lods loop mov pop or adc jo in icebp sub lea jle aam cmp in or cld ljmp je xor pop inc fidivrl fcompl std jno push mov sbb xchg out (bad) rcrl jmp mov cmc adc cmp xor jmp jb aaa add test les (bad) loopne adc jp stos cmp jno mov imull mov cwtl fnstcw loopne mov add or add rorl dec lock ja or loop mov xchg mov or push push pop sbb jbe sti fnstcw add mull insb movsb cmc in std xor or icebp mov push (bad) adc or sub adc (bad) sti mov (bad) jne cmp sbb mov cmp push dec mov and pop fiadd out jb andl scas lret imul in scas insb cli inc pop dec sbb movsb jl hlt mov dec call cmp xor les (bad) jno dec jnp mov cmpsl mov mov pop dec cmc cmpb sti out (bad) leave shlb adc pusha or or cmc xchg or mov lock xor pop add fmuls loope cmc stos test rcr xchg (bad) clc add adc mov gs scas ss pushw fstpl jle roll cmp test andl or mov mov or outsb push aad fldenv enter scas mov cmpsb jecxz inc sub lret mov sub inc xor sub mov inc addr16 mov out cli xchg inc push or inc ficoml shrb jae or fisttp ljmp or (bad) in pop jb mov dec cmp lods mov or push add jmp or add jnp jae or xchg cs xor or cmc push in push add jns adcl and mov or push int cld inc (bad) cmc xor mov hlt push and dec (bad) inc cmpsb or clc test pop xor push push stc or movsb mov inc nop cmpsl sti adc loop (bad) add and xor fistp sarl cmp sbb popa dec imul jle xor decl test cmp test (bad) pop repnz push lods xor pushf xorb std divl adc jo and call int out cmp leave (bad) jmp fmul or stos mov mov ss mov add mov mov test popf divl test imull int aam adc xchg jle popf lods nop (bad) sbb jmp shrb xchg and xchg sbb cmc lea mov std leave adc loop pop scas hlt add fsubp jmp inc incb pop ret jne leave mov sub repz jae pop or xlat dec fiadd cmp gs (bad) les and ja arpl push add into imul loop jne fwait mov decb xor test pop negb jae sbb push icebp add ja sbb add or add mov dec cmpsb cmp shrb cmp cmp fnstcw xchg enter in add or sub jns mov or out std mulb pushf lds negb cmp sub add or aam add cmp mov or pop es into dec lret cmc hlt cmp jnp mov pop mov or cmp or ljmp (bad) int3 pop xor daa fadds pop jg xchg fnstcw dec imul mov add popf and pop stos push or mov in mov iret push push cmc jle or ja scas or clc outsb adc xchg cmpb xor into or pop dec sti jecxz adc add in sub xchg test cmp jnp insl jecxz cmpsl sbb and lock stc or or lret popf addr16 jnp inc sahf scas mov ret hlt test pop dec hlt test xor in mov pop dec das push adc or aad xchg pop jp iret pop mov ja lds sbb stos sub lcall loope stc push out sbb stos cwtl xchg jb xchg xchg dec dec in movsb or ljmp les int test enter xor (bad) adc mov in xchg xchg sub or sbb out or pop pushf jmp ret (bad) mov arpl or mov dec cli push xchg notl and xchg inc ja loope sbbl cmp cmpsb dec or and fidivrl push pop jecxz or or push ljmp push or lock cmp inc lods (bad) cmc (bad) inc das ficomp push movl lcall xchg imulb in pusha cwtl sti cltd daa mov movsl je mov insb mov or cmp loopne and sub pop testl test or sub dec or rcll mov fnsave cli addr16 dec mov in outsb enter shll or or inc aaa inc insl jp adc cmp sbb inc mov (bad) decb popf loope test pmulhw push xlat aad push iret add mov add imul pop or lods mov push push jns or jno inc outsb push test mov js or add or pushf daa movsl pop hlt out scas rcrl rol cmp pop iret je inc scas ss enter jns repnz add sbb cli sahf scas cld dec mov sbb je mov aas sub test sti sub fisttpll test js clc ret iret jmp mov aas pop inc lods fnstcw or mov rolb js std (bad) sbb ss mov sub or cmp ljmp xchg repnz leave mov push sti add lods inc test popa in dec leave scas pop es cmpsl xchg repnz mov lods jbe adc sub sbb cmp jle in mov pop sub mov pusha icebp sbb or cmp add jp popa or lret xchg fsub push (bad) (bad) aam mov push lds sbb addr16 (bad) test mov pop js test or add inc jle sub test ret sbb hlt mov imul out mov out pusha aam jge lahf or insb aaa xor rol cltd and lds xchg test pop out push inc push add ja push pop sbb aam test std add add or stos mov adc mov xchg sub push out fstl dec pop (bad) ds icebp mov daa sbb xor into notl mov enter nop aam insb mov (bad) jae add cmp cs fdecstp pop mov addb test mov sbb dec dec sub fistp mov push mov and xchg andl dec mov out or dec adc mov push mov rcrl addr16 jle addl shl jl popa xor std dec cmp fstl not in pop jns pop cmp xchg push jle lock nop fstpt push sbb mov mov inc in mov jecxz sar push lea les or scas xchg leave mov add call sub adc mov jle xor add mov inc mov in scas or leave adc fsubrp dec mov aas into adc push scas jbe popf dec pusha inc mov pop adc lods push or sbbl or add fs loopne sarl movsb pop cltd imul cmp mov mov mov xchg frstor (bad) pop jle (bad) shrb xor lret jge popa mov fidivrl in jbe iret decl inc notb out sub ja fldenv xor dec pop inc lret or xchg mov jle aam test ret or jo loope jne lahf movsl das fmuls sbb cli ja dec notl ret daa xor popf pusha notb pop jne fcmovbe or or jo xchg sub xor cmova hlt mov add mov mov and and fisttp aas lahf repz inc adc sub and mov sarb xor or inc wbinvd cmc mov xor jg fmuls bound add insl jnp icebp repz rep adc and inc sub movsb addr16 xchg mov or mov leave jmp shlb fnop in inc aam cmp adc adc incb pop jle (bad) sub idiv adc cmc insb movsl mov out mov sub mov jmp add inc out jp lock aam std test lret and or mov in fdivrl push inc adc sub iret daa mov loope push mov inc hlt mov pop repz (bad) repnz push in adcl push into jp popa or sahf negb arpl sub push repz jle xorb adc mov loope cmp xchg mov or fsub xchg orl xchg jno popa pop fimull pop (bad) dec test fldt test hlt add fnstsw push in fnsave or clc pushf mov repnz cmp cmp ljmp add xchg test xor repnz cwtl stos test mov loop test jg ffreep pop or inc and jmp sbb repnz mov jns repz jns movups and pop mov mov sub repz (bad) adc or out dec push xchg sub fsubrl aam cmpsb jmp or mov mov lock mov es add mov dec cmpl dec into jne insl xlat sbb cmpsl push lock push leave decl or inc jmp xchg int3 cmp loop imul dec jae adc sbb or or nop cmovns pop jge imul cmpsb cmc mov jbe or int3 fucomi push cs orb imul mov sbb in or in push xchg fimull sbb div in subl xlat mov fdivrl xorl es mov out call sub lret ret jno push and xor inc dec outsb (bad) cmc (bad) or xchg icebp xorl leave adc inc leave or mov fwait add mov hlt adc mov aad (bad) (bad) ret fisub sub je scas popf rolb icebp ljmp cs das adcl or mov pop inc dec or repnz arpl xchg mov sub or aaa jb adc and outsl fild sub imul dec mov (bad) or sbb scas orl aas movsb cld pop lcall jmp les adc movsl shlb sub lds dec inc cmp pop and mov cmp repz mov adc scas xchg subl push daa (bad) fstps dec mov fucom jae stos fwait jp add iret sti inc (bad) out les ja add cld sub shl adc cmpsl xchg lods mov gs ror repz pop lods xchg inc jmp dec test lock add movsb mov and xchg xorl idivl cmpsl stos and inc lahf sub ja sbb jp dec mov gs adcl pop aaa sub movsl clc loop maskmovq (bad) or add mov inc int3 xchg sti push add dec pop fwait aaa lahf in mov xor aam shrl les adc sbb xchg sub mov or inc mov or aas lods into cltd dec repnz push xchg daa xor push mov popf jp jno dec repnz int3 enter or ret cmp cwtl xchg mov je dec xor ret loop adc push or mov or in stos decl imul fld1 (bad) dec stc or daa nop jecxz mov test jo xor in mov bswap lock or adc jb add loop pop daa stos test xor icebp adc cmc lret adc adc faddp ja mov (bad) movsl dec shll hlt int3 xchg push or jg jno mov loope add inc xchg cmpsl sbbb adc insb (bad) stc stos shrl ficompl testb mov ja jo lods iret pop sti sbb mov stos jl (bad) fdivl pop cmpsl jo insl jns push rorb mov jb pusha jle out movb jl and jne dec pop cmc (bad) mov lea mov enter and popf (bad) adc test inc jne arpl mov or jne add out fnsave cmp popa idiv repnz sarb ja (bad) icebp imul push pop fstpt and orb xor insb in cli pop inc mov into pop mov push inc lock int in aam sub push icebp adc stos jl dec sub jg (bad) popf clc or nop xchg repnz (bad) int3 or mov loope adc (bad) or imul dec cmc adc push sbb test imul pop stos jp test adc shlb aad sbb shll dec out nop movsl (bad) idiv or and hlt fdivrs fisttpl pop mov pusha sub xchg cltd and imul stos inc cmc or ret les aam call imul sub loope or or inc pop lret dec aaa or sbb repz cmc inc adc repnz dec inc sub or loopne xorb shlb or xlat in and nop clc mov cmp jns (bad) out stos xor fnstenv pusha fwait pop aaa lods sbb and (bad) dec cmp fidivr mov add shl cmp and sub je out fidiv or daa dec lret dec fistp push negl adc mov mov xor stos sti outsl sbb and lret addr16 mov aad mov in mov inc addr16 out test inc mov jmp es jle jl pop or xchg ja (bad) xchg inc (bad) (bad) repnz test mov bound inc xchg outsl jne sub jb adc adc cltd arpl push fldenv lret negl xchg pop jb inc or das data16 (bad) mov xor pop loope (bad) pop push imul (bad) sbb mov mov push (bad) rclb ror inc mov int3 jb rolb cs cli cmpsb std pop push or push (bad) pavgb (bad) movsb outsl or dec (bad) mov out cmp push movsb sub je adc and jo mov pop mov inc sub gs add int3 mov sub (bad) pop jbe std push and insb lods fwait mov insl xchg mov xchg xchg xchg cmp xor push xlat test in jl jmp and mul push xor xchg (bad) pop jecxz movsb ja aas dec push roll rorl in mov fadd or mov ja xchg loopne sub and adc push in loope push sbb add sbb das mov jae movsb leave mov hlt lds stos pushf xor imulb imul jne (bad) jle shrb sub sbb insb xorl cmp mov (bad) loope jle addr16 pushf ja add xchg mov pop stos push movsb adc movsl add add insl pop mov pop mov in movsl ja or add xchg mov xchg xchg inc mov xchg das mov lods sti ds data16 sarl jb mov mov ret in cmc sub cmp fsubrs sbb (bad) cmc je hlt pushw pusha mov sbb inc (bad) fadds mov inc out jle sbb adc mov stos lods jge icebp andb test push push dec lahf push ficompl repz lcall sbb (bad) fbstp sbb icebp lods adc sub sbbl add cmc adc pop adc and std (bad) int3 inc popf mov dec jae scas arpl cmpsb dec mov fidivr push bound jecxz jl mov (bad) in fwait inc mov insl addr16 mov inc rcrl xchg or dec in adc pop adc outsb pop add or mov ret pop ljmp sbb divl mov xor cmp repz cltd mov push push pop add jbe idiv pusha stc mov xor insl xor dec dec rclb jns inc iret shll cmc mov xlat std leave mov mov hlt lret int jne adc int cmp push lea sbb stos aaa cmc inc test mov lods outsb outsb fstl jp sub test xlat lock mov xchg mov jno daa fwait xchg adc lods fbld test mov lcall bound aad jo cmp push test jle jmp aam dec sbb jmp sub xor pop dec inc xchg jecxz dec les shrb jns incb or cwtl test jno inc lret ret adc and pop add mov out xor pop or jge lods leave ja cwtl stos jecxz mov or jecxz adc sbb repnz inc mov xor dec dec lods inc mov (bad) lea mov mov cltd inc lock sub test ss fwait cmp scas push nop imul dec lods stos or cmp mov mov xchg adc ja inc (bad) std (bad) addr16 dec or call orb in cmc or jno rcrl push jle repnz adc andl mov pop mov jae imul or mov fsubp cmp mov mov pop or out test cmp (bad) fisttpll mov (bad) stc mov cld aaa sbb or cmp aam faddl iret and aam repz push dec call in pop jno jle jb add lock repz adc popa sbb stos dec into jne cltd xchg xor add xor add hlt rolb ret cmp repnz frstor push ficompl clc out sub cmc call je faddp test negl jmp push xlat mov mov aad add pop pop push or enter jmp mov bound or sub cmc and pusha repz xchg mov lret lock sub test or dec mov cmc xor in push ja in push decl mov mov push push or cmp mov daa mov or leave cmp sub inc cmp pop popa adc mov test imul loop in jae (bad) stc xor in (bad) sbb ljmp jmp lods inc jnp int lahf dec movsb aad lds xchg hlt dec daa icebp movsb fwait pusha out adc pusha stos mov roll xor lods movsl jge jns out scas mov and add xlat cmp jae push mov lds in aaa adc hlt adc ret (bad) or mov ja jo push pop dec jns xchg jl fsubrl int aaa mov test dec lods lock jl test test add push and add std aam fs cmc xchg sbb jp add xchg sub dec cmc rorl sub or pop pop ljmp test mov add sub adc jle nop add hlt adc mov cli cmp sbb or (bad) movsb adc adc pop jns push iret xlat repnz leave in loope or pushw jge xchg hlt es cltd mov repz adc ficoml inc dec aam xor cmp fs jbe (bad) fistpl xlat mov leave sub pop mov pop loope addr16 rcll dec mov add test call add jno fxtract cli jo inc or mov cmc sub shrb lock jno push jle (bad) cmp jle or mov mov add stos fcoml rol mov cli aas sti mov sub call xchg sarb mov cmp daa jmp sub sub mov xor or popa (bad) sti pop mov stos repz divl xchg pop cmp popf adc (bad) or xchg xor add xor aad mov ficompl xor lea push xlat and mov mov enter pop pop adc jle add push leave rolw or jnp test pop repnz icebp lods push dec pop test push dec mov not sub hlt mov in or divb (bad) cld or scas cs add jmp lcall jp repnz mov dec incb pop dec enter rorb jo je test es jg jne popa push adc mov movsl scas aas fdivrs mov pop sbb aaa or xchg mov or push fisttp mov mov mov sbb push (bad) sbb mov jo pop push iret pop jns push inc js sbb flds or adc mov cmp fisttpll sbb lock mov jg adc push cld repz xorl loope mov outsl add in or les jb arpl in cwtl push stc mov sbb fldt push test movsl es jecxz sbb in stos dec mov xchg int3 or mov push cli cs sub bound insb sbb or aam aaa jbe shr clc and gs jo pop lret repnz enter dec cmpsl cli and xor dec daa mov sbb insl les add inc or (bad) lock jmp xor and add cli adc jne pushf stos xor mov mov in mov push or dec int3 adc dec xchg loope mov lret rorb cli orl aaa xor or mov push cli mov pop fwait and (bad) push cmpl sbb sbb xchg sbb js jecxz push bound jnp adc rorb mov or insl push and out sub into (bad) leave dec sbb mov inc sbb or mov and nop (bad) fisub in int mov ja jb fdiv out out lock cs cli loop nop cmpsb push sub and pop bnd outsb sub mov out test lods and sbb cmp and mov xchg lods out cmc or push sub xor push or (bad) fimul sbbl das jle cmp rcr cmp mov pop dec imul sub mov pop push mov push sbb inc push pop sub xchg in sbb cmp pusha stos test pop sti mov cli fiadd lcall bnd dec pop push mov int xor cmpb shl idiv mov sbb inc enter cmp adc std mov (bad) dec cmp xor jae mov xor jne stos jg fmull decb fisttpl int3 cmc xchg jg mov xchg cmpsb lret push (bad) fistpl sub mov adc lods nop push fwait mov dec push lock daa and jns aam or jb lock jg xor fldcw (bad) xchg ljmp hlt mov aad lock push loop push add leave sub adc notl (bad) out add cwtl mov mov stos mov out lret xor push hlt push icebp int shrb mov mov test adc bound jbe loope sbb sub stos inc pop je xlat jg sbb inc in bound xchg dec adc sahf cltd push and xchg mov cld int xchg push dec jmp mov mov repnz mov mov xchg pop jo (bad) or mov push inc add je pop jl fcompl cmpsl stos push lahf add rcll rolb dec stc and sbb mov or sub push into test push jp mov dec push add popf mov negb repz pop add and xchg daa dec icebp pop or call or fsubs xchg inc sti setne or pop cmc sbb push inc and mov xchg bound or or sbb (bad) in in or test inc fs movsb (bad) mov loopne repnz jbe pop fcoms add mov inc adc ror xor mov sahf fisub add push dec or mov icebp lret enter or pusha push cltd mov sahf addl or imull (bad) jne scas data16 inc sbb xchg lods (bad) sbbb push or (bad) add icebp sarb sarb ss pushf or mov inc test imul jb and xor push leave dec add xor sub mov cmp lcall pop or push aas add movsb loope into push xlat mov or test dec or mov jp cmc cwtl push mov arpl or std adc popf test push outsb sarl pop or fs or xchg mov clc jae pop cmp stc je jg mov dec mov push test jne xor in or mov test aad out fdivp int data16 pop or cmp mov and cs repnz (bad) mov mov xchg out jmp or push pop mov ss dec (bad) daa push sbb sub or mov movsl dec roll mov scas xor and lret out sub stos push pop enter scas dec xor test pop mov addr16 lret adc outsl mov aas fbld pushl bound test pop mov inc xor rol xchg dec adc jbe int cmp ja cmc leave scas pop mov add or stos dec bound inc mov mov pop inc aad pop cmpsb or jbe lahf sbb lret sub mov faddl mov insb sbb imul xchg push lea or sahf ret jns sub or cmp in (bad) (bad) (bad) call repnz ljmp or mov ljmp push jle adc inc mov xor fidivrl aam jns mov (bad) out arpl xorl sbb dec dec mov and mov pop std aam push and cmp movsb mov sbb aam js pop inc es adc mov pop push mov mov in jl flds nop dec mov pushf and jle mov sub mov dec adc mov xor repnz pop fimull push (bad) sub pop lret push out icebp inc in and mov test and shrl push pushf daa (bad) test mov insl push in mov stos cltd pop mov or ljmp push insl jns outsb cmp or pop dec jg dec adc rolb or lret addl mov or or mov stos or push ret lret enter insl (bad) (bad) int fsubl xchg out lods or icebp push lods inc and or sub mov jns inc mov xchg push ja inc cmpsl test cmc int nopl dec je lds out jae imul loopne cmc lock aam jmp (bad) push arpl pop into gs cmpsb and xor push decb sub mov xchg cmp push xor push arpl or mov sbb jg mov cmp icebp push sbb lcall and icebp mov das in gs mov jns test ljmp ret dec insb cli jg test adc scas jl fistpl daa idivl out pop jo or clc add rorl jnp mov movsb jns ja fs sub shr mov xchg imul jl xor aas data16 in mov sbb mov rclb xor ds cmp pop lock clc test ljmp xor sti mov cmp sub jmp fidiv repnz xchg push leave mov movsb mov cmc test rcrb in push inc sbb mov xor aaa gs test dec jb mov fldl inc lods (bad) jnp mov in ret mov in pop leave fldt pop mov or jb daa inc or jle mov inc adc repz (bad) mov ret fdivrs insb add repz test (bad) scas or test scas mov div inc das icebp or mov pop xchg jecxz push mov pop mov inc cld cmp push lds xchg lahf and xchg or jl fxch popa push sub cmc (bad) aad jge mov jbe push rcr or aas add or and push xchg repnz test mov pop mov and push leave or sbb leave dec or sti or mov mov or add mov mov push xor or jnp lret sbb cmp push enter or pop dec les (bad) aam adc inc cltd (bad) iret jno jne out in mov out sbb mov int3 cmpsl lret gs and dec rorb ret or push mov stos out inc cmp lds aam lret mov or sbb stos jbe or and in or mov xlat xchg hlt push (bad) jno cmp push into popf (bad) int hlt loopne aad or or and inc sahf incb aad and cmp cmpsl rcr (bad) mov mov movsl cli mov mov or jecxz cmp or jo push lock std adc jmp dec clc inc lret ficomp stos test push lret add jnp mov (bad) pop mov sti call mov loope lcall clc pop aad or cltd les dec xor adc inc nop mov jge outsb mov lods lock or jmp inc (bad) pop rorl mulb bound bts movsb xor and mov dec insl idiv pop outsl cmc pushf test cmp lret int3 mov dec push lahf inc pop imul fidivrl mov pop dec sub sub or out fcompl lds sub es add dec rolb in jb sub in out fcomi gs leave jns xor mov adc push xor arpl cmp or inc add xchg mov sarb cmpsl cmp ds or pop jmp cltd xorl lock loopne fmull daa aad addr16 jecxz dec lret leave add aas jns bound sub (bad) arpl jne push xchg aam jp mov lods mul dec inc negb iret sub xchg ljmp mov add jge enter xchg gs lret fsubl pop js aam fstps pop pop iret cli ds cmpsb sbb insb lods cli test addl and jecxz pop notb or inc cmp fnop or sub fnstcw aaa scas xor sbb or faddl nop or push push sbb jp push js ror add iret les sahf imul cmpsl or jo iret dec shlb out sbb pop sarl test or leave sbb rcr stc cltd in adc or jo into xchg mov test add push test sbb cli push or das mov push (bad) push inc or xchg or xchg add mov jg dec (bad) adc or outsb mov fistp add xor dec or mov push lock mov hlt xlat push jb mov xor int divl iret hlt test xor or aad or mov add and aam adc std sub cmp xor loope out sbb into dec dec imul mov add pop movsb out push dec repz enter adc addr16 leave outsb lret mov aad jle test pop (bad) rcr icebp mov xchg xchg f2xm1 aam adc nop inc es jmp jmp add jo fwait repnz dec pop stc imul scas add xchg or dec into adc mov lea sub mov add std mov faddl dec xlat mov xchg sbb (bad) mov cmp and mov adc xchg pop repz or shrb fisubl lret scas sbb push fcomps leave lcall sub cmpsb adc dec rolb outsb and lret movsb flds dec leave add dec outsb sahf sbbl mov xchg in inc adc push out sub int3 stos push ret add hlt fsub add scas daa adc mov or mov into (bad) (bad) xlat pop frstor cmpsl shl jp dec mov adc pop je rolb adc out mov xor gs das repnz enter fs sbb dec fsubs xchg inc sbb jg scas mov (bad) lods jae int3 mov dec mov cmp mov outsl fwait sbb cli cmp rorl dec mov je les fisubrl cmp or inc cld dec xchg std lods negl test mov lods or or lods pushf cmp add mov nop sub out int3 (bad) lods in lret mov push xor out lock mov lds pop push xchg mov (bad) or (bad) mov cmp loopne and pop out test cmp out inc je (bad) sub daa pop dec or pop cmc je in or aas (bad) mov xchg fcoms fcomip in sbb sub pusha or cmp mov jb scas push or pop sub negb jnp mov sbb and jmp push dec imul mov cmp xchg mov mov (bad) xor mov xchg dec xor and cmp loop lds push or in clc sbb mov rcl (bad) or and ficomp movsb push movsl pop dec loope xor mov inc (bad) or out adc sbb adc lock clc xlat sub hlt fnstenv xchg xor add cltd cmp stos aam pop stos mov movsb jo cwtl jl (bad) leave or add or leave in mov (bad) pop or pusha pop cmc and xor sbb mov popa arpl lock lock and inc inc orl (bad) push inc aaa or insl (bad) outsl xor cmp pop dec and adcl xchg imul or movsl dec dec add or push or movsw or lahf xor sub dec decl or sti or aas inc xor mov jns js rcl adc sahf idivl aas sbb out mov fistp fiaddl fcmovnbe hlt loop ret xor sbb int push nop sub popa loopne cmp cld push mov push xchg lds fldenv out or test test or jne int3 dec in sbb cwtl ja (bad) cmp cli arpl push stc fs push dec std xchg aas xor in and stc stc test or test das add daa xchg jne and mov xchg fcmove roll aam mov jno jl dec pop fadds push mov mov pop inc test movl add jns mov mov jle xchg jns stc add dec sub adc mov cmc mov movsl cs je lret rcr pop mulb dec movsb push adc mov xor xchg push test sub xor divb mov add adc jl stos xor les or or test dec xchg rcr dec insb in fxch repz pop dec ja out negl mov fwait mov mov aaa push or fisttpl mov std movsb jno or adc jns aas cmc and scas gs mov cmp cmc mov inc (bad) lods int mov icebp or pop sub dec cmp push orl pusha jns push or and scas inc push ljmp push mov pop push mov push jne lods lods sbb mov (bad) test xchg xchg jge mov jns sbb xlat inc test bound bnd sub mov test or cli in fldcw sbb add adc mov notl jmp pop adc mov test inc pop addr16 scas lock jecxz adc orl and cld cld adc mov aas or and or jecxz sub imul cmp or popa push cmpsb popf mov fstps mov arpl dec enter test mov push inc or jb fisttpll fs inc ds in xor jecxz rolb pop dec sti cli outsl leave (bad) mov pusha clc or das fisttpl notb or rcr fmuls mov jp lock shrl icebp mov pop jne cmp jle xlat insb sub scas dec adc pop jle rol popa sahf push (bad) jp or cmova mov xchg or out insl test mov mov push mov add addr16 or sbb mov lret pop and pop out dec adc fisttpl jb push repnz mov sti aad test mov stos push inc cmpsb addr16 push sub dec addr16 inc stos frstor bndstx dec pusha outsl popf add mov xor push sti mov mov inc hlt mov sub mov add and and sub dec loope popa in fisttpll idivl push imul push outsb lcall and scas adc rcr and push leave aas stos inc xor push mov fldenv insl jle and dec mov cwtd pop or inc cli lock ja push pop mov xchg lock dec scas sti add adc dec add sub call cmp jnp lock push fdivrs or sti stc jmp push mov mov push les fisttpll push pop ret pop in shll mul or sub push or ja sbb shl xchg jecxz dec cli cmp sub flds subl push imul jl imul adc mov and jae xor inc notb faddp and and or xchg or aaa add lock (bad) mov shrb imul lods jle or mov dec adc ret or mov in mov mov lcall push pop sbb dec jmp mov or mov sbb leave lds or pop add or in (bad) mov call dec pop inc je cmp (bad) lea or into aas mov mov dec fcoms gs push mov test mov push lods adc sbb xchg pop cmp fwait or test cltd sbb or sarb fiadd dec or pop sarl jnp pop pop imul or sbb (bad) int3 pusha or das jp idivl (bad) (bad) xlat mov add or pop hlt xchg pusha cmp xchg mov push dec test push add sub mov jmp mov xchg hlt scas or lock enter cmc mov push or xor jg mov ret or and pop inc add jo fs jbe iret or pop sarl cmp out or add mov (bad) lods insb fsubl and lods fwait dec push pop lret mov leave xchg cli add xor fldl or and or (bad) (bad) dec sub jmp movl repz push (bad) jno push add movsl adc or push sbb add fnsave push or mull outsl xchg xchg rolb push or xor in jns pop fisttpl adc lods sbb cwtl aas sbb cmp add cmp add repz int jne mul jge xorl test mov xchg cs jmp movb enter and adc ljmp or rcrl es sbb gs idivl adc pop leave ror jnp pop sbb out es sahf lock xor dec lock add pop repz cli sub bnd cmp sbb push push mov cmp stos outsl je in add lock mov (bad) pushf dec jmp stc sti lret mov xor cwtl pushf mov sbb inc jns test cli and mov jmp repnz cmc jbe cmpsl or mov xor les dec dec mov push repz movsl jns add js (bad) mov jne or call xor fnstenv notb je (bad) push xor inc adc sbb add std cmp inc lods jbe add adc mov outsb xchg test inc sbb cmp out fdivrl or lock adc in add xorl or push in lret mov arpl inc fs cmp popa loop push pop or leave movsl cs pop pop test into push add test scas cli es nop aaa and and ffree push lahf in mov mov jle fisttp fistp jecxz andps mov mov inc in enter cs bound cwtl faddl shrl (bad) fnstcw sbb data16 add daa test scas sub jo mov aam sti xchg popa xor test sbb jg mov shl mov dec leave jecxz test cmp fmull jb lods xor mov push inc pop xchg and adc adc or addr16 mov mov loop add loope mov add aad jmp hlt dec (bad) adc movsl leave jecxz jns adc les or cmc mov pop dec adc jmp mov dec sub mov mov sahf ds mov jns lods icebp test out add add stc shrb mov aam shlb jnp repz notb jl imull hlt sub or lods jmp push popa aas or repz pop jecxz imul (bad) pop dec sahf push mov mov mov jne jns xchg sub push inc test dec sub sub je dec inc xchg jb xor mov insb mov dec clc sub push or aaa nop mov mov stos mov jns xchg inc insl aad (bad) adc fldcw mov ja pop push sub cmp int pop scas xor (bad) daa loope (bad) and outsb add dec xchg (bad) repnz fildll jl pop sti push jecxz sub mov and adc loope or cli pop bnd jmp mov mov sbb pop test out mov adc stos dec mulb or jle aam dec jnp jge pop out or imul sub and loop dec cmp repnz bound push mov or cmp aaa js xor adc dec and gs cmc adc pop stc sti push rorb (bad) mov mov push out xchg testb or jns stos lret xor decb scas jno and aam loopne leave pop or popf adc xchg pop into cli int3 push cmp leave jnp mov repz xchg xchg int3 cmp pop or mov ja or cmc jne cmp mov or popa push pop lcall or inc nopl movsl fs mov mov (bad) xchg insl out loopne mov cmc repnz jne das xor movsb mov xor gs mov or sbb dec movsl jmp or pop sbb adc xlat push je jo dec out les or ficompl xor sar (bad) or jns jl test or pop out adc or xor inc or xchg mov fwait aam fisubr or scas aad (bad) or inc out xchg addr16 ljmp jl mov clc repnz es and int3 push mov or (bad) data16 jg mov clc cmpsl test fdivs movl push repnz lock cs fcomip jl xchg sbb and mov rolb sub or inc roll andl jecxz inc xchg icebp mov sub xor ljmp repnz jnp or jg push pop je sti fstps (bad) xchg sub cmp push lds mov xlat fsubrl pop cltd mov jmp sub sarl or popf push push (bad) int js pop in mov dec test rcrb sub inc or adcb les ficomp mov movsb xchg inc decl or xchg mov pop scas or (bad) bound add pop cmp invd es dec lret lcall das pop or sbb adc push push mov pop ja add mov adc add mov push sahf push std add mov outsb xchg sahf lock sbb mov mov jb adc cwtl xchg add popf out imul pop jmp pop fdivrl lds cmpsl xor jno and (bad) lock repnz leave lock fnstenv fnstsw xor or cltd push cmp decl pop cmp mov add push lahf repnz push and cmpsl or xor jbe or ljmp in mov daa jno clc out mov decl scas cmc sub (bad) add and test or jp fdivrs and in xlat or daa test fcoms cmc jle iret adc jns test sub (bad) sbb lcall out mov scas aam sti cmp (bad) sbb rorl inc mov mov jg sbb push mov push pop or and adc or out adc sbb rcrl adc lahf movsl add out idivb cmpsl push rolb jl idivb inc call push in or fwait movsl lahf in jmp inc xor cmp add or arpl popa iret mov cmp mov push or xor loop fcmovu idivl xchg or out dec push clc xor sahf or fnstsw (bad) jl stc test or fs xor sbb dec sub rol mov dec cwtl or movsl xchg js and ljmp or int3 dec push xor xlat cmp push pop sti inc sbb ret mov aam cltd lahf or mov jge,pn adc scas in jb test popf xchg or inc sub pop jge push jmp adc out jecxz idivl adc add in and cmc mov xchg sub ja mov mov push sub inc mov or rcl sub xchg sub outsl xor pop or dec daa sbb mov mov sub mov popa sub into mov sub movsb lock xchg adc sbb xchg stc scas or fdivl or inc add pushf or test xchg stos addr16 (bad) call cmp and xor roll jge xchg mov lcall jp lods or mov in ljmp cmpsl incb sub bound hlt out push sbb sbb dec or push sub cmp out leave jp incb loop lahf or mov sti (bad) xor add dec or fstpt pushf adc dec dec and enter cwtl pop je pop dec mov mov xchg movsb jg sub popa lcall fistpl dec mov sahf movsl fs pop mov or push lds loop or imul cmp enter fildl dec negl jg xchg (bad) push out cli mov xchg repz pop lret imul scas aaa cld mov leave cmp add xchg sbb pop or mov test jmp mov xor pop fsubrl popa jns mov cs je cmpl ljmp mov xor shlb aad adc cmpsl scas add or dec (bad) jg cmp out sti testl or or pop mov jl add push sbb pop scas dec xchg imul xor test in lods inc int3 cmp add pop adc iret dec in hlt mov mov (bad) scas add lods lods movsl mov das dec nop adc xchg fildll push mov (bad) and data16 add jg adc mov repnz cmp fs inc cld sbb sub push (bad) (bad) lods stos cwtl add pushf push dec lret xchg bound hlt adc leave repnz sbb je fstps push mov gs in clc ljmp into jp push hlt outsb add mov or push enter (bad) insb add or sbb aad popf cmpsl mov fsubp pop lret mov in (bad) lock sarl mov imul mov mov nop loope cmp clc ljmp insl call xor repz stos idivl pop daa pop gs pop in stos (bad) dec lds (bad) or decb shr ret mov cli mov aad test cmpsl or in shl sahf cmp (bad) mov roll leave in add dec push adc roll adc or fnop cmpsl inc and (bad) repnz xor pop cltd test and test test negl daa pop sti ljmp jae inc dec ficompl ljmp mov popf mov sub hlt out jo mov pop (bad) in mov add cld (bad) cli (bad) add xchg mov popf sbb fstp loop dec hlt push lcall adc jecxz (bad) push push outsb sti rcll mov or sti mov jle mov xor gs mov jp ret adc pop and mov adc mov pop dec or mov lcall aaa mov lock push pusha (bad) mov or sete rol jge repnz decb lret addr16 push popa push add adc xor dec push xchg std fimull xchg in fildl and adc in (bad) repnz std lahf stos jle stos jo mov ds adc adc mov movsb test cwtl hlt cmp or lods pop jo cltd cli es pop mov or lock test or in cwtl xor ret test or outsl xchg push cltd jne xadd sbb out fidivl fs pop mov or test leave ss or repnz dec mov mov xchg dec sbb sbb jns movsb sub into or gs or cmpsl adc dec int3 loope (bad) cmp or iret (bad) (bad) int sbb or out cmp ja mov ret xchg lret sbb xchg fcoms ret xor xor mov inc jb decb adc fstl mov adc sub xchg lcall stc testb push push sub jle iret insb mov lods add mov or sarl fs jnp fiadd lret xlat (bad) pop add mov mov mov loop pop gs sub cmp lret popa or adc xor movsb jns mov jmp popa (bad) aas insl sti daa push sub push loop sbb adc dec sbb outsl stc add adc int3 xorl adc test (bad) cmc stc fwait aad fistpl or sub xor loopne mov andl loope mov icebp repnz mov and insb shrb pop push lret mov or jno gs into (bad) or inc or popa lods push mov add call cmp pop fdivp movd sbbl cs cmp icebp in stc and adc int arpl mov jecxz dec or aaa rolb es es out mov jnp ja js mov jecxz or mov mov stos test jno into lods sub or jp insl inc fdivp xchg iret pop add pop dec (bad) dec mov sbb or xor jno (bad) insl (bad) dec push inc add sbb xor data16 pop inc or mov inc lcall mov (bad) ds jae inc adc pop pop pop sbb cmp mov dec repnz aad add mov xor dec lock adc xchg or mov jnp or xor fistp lods sti push add test push or pop mov scas loope lds pop hlt jp jg adc imul xor testl or data16 outsb cmpsb jb in adc or mov (bad) repz or mov push scas aam xlat or sbb or inc pusha call xor inc imul es hlt or xchg jbe jns xor fistl in push ss add (bad) cmc inc sbb repz popa xchg cmp mov (bad) ficompl fildl push or test sbb test sub cwtl pushf js pop sbb cld add mov lahf and ds notb int dec push dec jb jns loopne mov add ja mov sub insb jnp fidiv sub in push dec pop xor jmp inc sarb mov push dec lcall mov cltd fwait leave jns jno hlt lods push (bad) jb adc pop jecxz or adc inc rclb aam (bad) dec les dec mull adc xchg xchg fwait sbb dec (bad) pusha cmc mov add xchg popa dec jle xchg sbb fidivl or mov mov mov or (bad) iret dec jmp xchg lods leave xor sub popf mov pop jl stos fidivl jmp mov dec daa dec add test sub ficoml addr16 je out in mov ja sahf jno adc sub dec sub inc mov sub pop sub lret sub imul jne sti loop or stos sub adc ja jmp and inc or mov and adc push scas jne test add rorb sbb lds cs notl cmp and (bad) cmc add hlt leave imul xor jle in cmp add enter push cmc cmc fdiv and mov or inc mov fmuls xchg (bad) cmpsb loope sub push mov dec fsubl insb sbb cs pop ds (bad) hlt dec or push negl add (bad) repnz nop inc sub adc pop into pop lahf xor into dec adc sbb shll dec adc push mov mov jns aad push dec repnz movsb iret test adc sbb or fldl mov hlt adc fs jno icebp ljmp xchg sbb imul mov cmp insl clc add or jl pop pusha inc push cld in sbb jp sarl in adc test sbb fucom xchg pushf mov adc push (bad) test ljmp mov mov popa adc cmpsl inc (bad) mov (bad) cmp cltd ja inc std cli cmpsb push lock or and loop mov or mov mov mov sub xor insl xlat xchg sub push int add repnz cmpsl jl aaa rolb scas hlt mov std test xchg or or out adc dec (bad) mov or lods ja add mul or lahf push inc jg sub adc test mov or mov dec sub lahf cmp into out pushf pop arpl pop (bad) repz cld lcall cmc push mov stos add push dec int3 fldt divl call rcrb mov fwait aaa or fstps add ficom pusha aam fwait or mov mov mov push jnp pop xchg or inc mov and adc cmp or jle or push push stc mov inc popa mov fcompl mov rorb mov inc ror jne cld xor or push xchg adc xor sbb and inc inc test xorl es sti adc xchg pop mov (bad) dec stc adc icebp bound cltd test mov cmp data16 and imul lret mov ret mov loopne cmp and mov (bad) push (bad) repz ljmp add sbb int sub negb les pop sbb ret or adc mov orl dec inc lds mov sahf movsl xchg int3 push jbe scas popf cmp sub cmpsb xchg out push das adc and ljmp leave mov xchg faddl add fistl or mov or add iret test adc out push daa jge aas sbb mov and add (bad) cltd pop or scas movsb int std jp xchg jmp lahf rorl popa push cmc fnop fwait lock lock in dec mov (bad) pop or mov inc push out mov les jbe in hlt bound sub sbb rclb push xchg leave cmp xor pop pop sbb ficoml pop enter sbb or pop mov mov xchg paddd popa pushf aaa rcll shrb jmp leave or (bad) daa sub outsb repnz iret aad adc loop in mov pop es std xchg dec ds lret push fisubrl cli or js adc sti or mov cmp rcll iret lret cmp cmc mov pop (bad) stc (bad) sub or imul mov jle or adc psubusb ljmp pushf mov or loope push mov mov pop vandnps cmp mov jbe lds cmp mov cmp or push stos dec arpl lock dec or loop nop jae sbb sahf repnz or xor fs out (bad) jnp jbe sub mov xchg enter mov sbb sahf int3 dec mov jle or cmp add xchg repz loopne cld dec or stos dec ror dec jb add movsb and pop rorb idiv imull pushf decl mov push xchg jb mov push cmpsl adc fdiv sti xor or ja (bad) dec sub adc xchg mov lods movsb xor inc mul pop cld cmp int mull imul mov leave stc (bad) jae adc add ffree add insl push push das xor or repnz xchg mov cmova daa xchg negl and fs js jmp scas or lods push or pop push divl pop enter dec mov or dec xchg into sbb push stos adc adc rclb sub adc fstps ficoml and adc dec sbb sbb jmp add cltd mov iret aam (bad) enter cwtl cmp mov dec arpl std xor mov pop sub in lock or sbb daa mov xchg and or mov test repnz add test xor ja push stos leave xchg or hlt mov testb jle cld xor add adc xchg xor cmc scas jmp jge xchg sbb xchg (bad) push int3 inc jg or test mov paddsw rclb mov or or mov jae outsl (bad) lock out js aad mov push cmp add or bound cmc cmp loopne fmuls ret movsl xchg or lcall fdivs imul or cltd pop mov xor movsb mov mov insb adc or xor mov dec mov fcmove sub jmp test mov scas or inc lea (bad) int fmuls jbe xchg dec lahf imul sub es jb popa outsl pop and or nop pop (bad) aad les sub leave (bad) lods (bad) jl or jne adc and andb sbb les adc mov dec bound (bad) mov xor jp dec test or or jae or jl xchg xor bound pop mov cmp or xchg add in and or popl pop sbb xchg subl mov add aas repz lock ret jns fsub jnp into pop lock divb xor push jne or and add imul xor fs mov aad rcll pop and or clc adc push mov dec cmp test push and push popa fwait scas pop sti bound in out add je sahf movsl dec mov jnp or lcall sti pop xchg out stos jmp cld pushf pop negb fcomi mov jbe insb jns fisubr test and mov arpl insl nop popa and mov mov inc cmpsb test shrb jb cmp int3 mov jnp jno repz mov mov adc adc cltd add mov lea push xlat add fildll add jcxz mov ret dec inc dec jle imul push gs imul xor or fisubr or outsb push fldl dec stos ljmp pop sub cmp insb jae xor ljmp push or adc (bad) stc dec test mov jne and xor push mov lods (bad) xchg sub enter sub jbe pop movsb add xor test mov cmp jmp das push or jl add popa xor (bad) xchg roll fdivrs jne mov test cmp pop fcoms into sub xor pop mov jle mov mov xchg add fmul jno jo ljmp iret outsb sti pop fnstsw mov (bad) mov dec cmpsb dec pop stos dec nop add mov insb ficompl xor insb inc dec mov test (bad) cli je fstpl ret lods icebp sub pop test jecxz cld fisttpll dec xor jo cmc insl bound lods adc ja call and push andl lcall aad lock xor jmp ficoml mov or xor dec pop nop sub fildll mov inc fs lods jp mov pop cmp mov cmpl inc negb call dec std mov adc jge andl dec loop sbb mov orl jae cmp sti shr aad scas or in jno hlt rcrb push or mov or add cmp adc ss stos mov add ss or rcll and nop test je fimul xchg add cli loopne add mov aas and lds fmul or cmpsl iret mov or in mov lret mov sbb and mov xchg repz add fildl inc sub sbb out movsb or aas add xor lcall mov dec prefetcht1 pop shlb shl int3 shrl and loop or cmpsl mov jmp scas das imull (bad) adc and mov pop aam loop dec or nop mov lods pop mov dec sub ds or ja jns (bad) dec cmp outsb (bad) sub movsb mov sub mov ret sahf cmpsb sbb or inc sti fimul les xlat int bound mov mov mov maskmovq divl mov inc xchg mov and mov jecxz shrl xchg push adc pushf or fidivrl jb addr16 jnp inc pop adc push mov outsb pop sbb (bad) mov mov jb or pop fdivrs jns lock and lods stos inc lret mov inc dec aaa rolb jns data16 in into sbb and jno jo jne fmul push lods pop in ljmp jo stc sarl loopne ljmp xor cltd ret pop sti (bad) xchg mov stc jg jl or fcoml lods xchg jbe js jns or adc jmp or mov hlt jmp lock push mov push rclb loopne call adc idiv cltd inc popf add or test push or outsl je gs or push repnz dec mull leave cmpsl fsubr mov int xor adc stc (bad) lcall or aad loop out mov push jmp push divl jb mov adc or out jp test pop lods or inc enter fist aad dec or pop adc fnstenv cmc imul add push out frstor dec lret mov (bad) jecxz jecxz leave arpl bound leave cmp sbb ds imull divl ret mov aam aaa sbb outsb add test or mov jo jl and xor out add cmc mov stos cmp adc aam enter inc adc or pop (bad) lcall flds ja test out mov ljmp (bad) lea test push inc sub xor push out sbb add andb cmp mov jecxz int3 lds and movsb (bad) jp push outsl inc insl sbb call dec cmpsl pop push leave mov (bad) cmc movsl inc push mov addb and cs movsl sbb cld aam bound adc pop div jae and (bad) ret (bad) cmp (bad) sub cltd or jo dec in xchg insl ja push inc cmp or mov lods jbe xor xor sub je sarb or dec or adcl or push push add or (bad) repnz jecxz (bad) cwtl lret popf mov lock scas xor and mov rorb arpl scas sub inc fadds mov xor or imul sti mov jecxz out out xchg out lods or pop int or mov xor ret lock (bad) mov add repnz fucom loop or adc dec or (bad) lea flds push (bad) pop cmp mov neg lret hlt inc xchg in or aam stos leave mov out sbb cmovge out lods bound mov pop dec and or neg cmpsb gs sbb loopne lea mov bound xchg std jg or lea in jo movsl or imul out pop pop or imul xchg mov or mov mov and jge pop cmp push xor loop push or popf lds jecxz inc (bad) lds cmpsl or sbbl lret pop sbb push inc or mov (bad) xor xlat (bad) enter jge addr16 popf fs idivl test sbb mov les lods sub in mov sbb or mov jb into pop stc lods call inc or mov nop push test xchg subl push or pop movsb add fimul adc xchg xor and loop or les or sbb hlt cmpb inc pop movsw js add mov xchg and cmpl push mov push fstps fdivr ljmp dec lods or and (bad) adc adc and add lods repz sub sbb pop in jle sahf mov nop cmp pop sbb jnp fwait subl push leave inc fstps mov mov stos and or (bad) movsb out outsl sub scas or fmuls inc xchg pop adc sub repz inc jl fdiv inc cmp pop mov pop mov dec inc sub loope es out or mov xchg inc hlt and mov pop (bad) mov jmp sbb leave jb es test jg outsb push lret jns sub gs (bad) adc push pop pop cmp or jo mov or outsl cmc mov into fildll cmp dec mov lods cmp stos push call or push dec jae out fnstcw and adc xlat or dec int3 test mov aam inc and xchg (bad) iret adc (bad) sub jg scas jne test jne cmc dec test mov pop cmc push sub dec stos out xor lock or mov xor in ret out repnz loop scas aad xchg dec add vmovntpd adc add adc xlat lret pop or and xchg pop div into pop leave xor add (bad) xor (bad) fisttpll lds push lock mov xor mov and xlat ror fistl cmp daa sub (bad) in mov cmpsl gs mov (bad) and (bad) iret add sarb cmp pop add test inc mov push mov pop and daa mov mov xchg mov or and cmp vfmadd132ss repnz das sub xchg mov and jns jp push adc inc sahf pop mov jo leave or call sub mov pop sahf adc or mov xor jp in and and inc aas rolb sub dec (bad) fidivrl sbb add in pop mov jmp insb mov inc push je mov sbb mov cmp icebp loopne mov add mov mov dec aad or add int3 lock mov lock inc and jne pop pop or sbb inc iret lahf fbld push mov jg pop or add fs cmc mov push sub mov mov xchg jmp ljmp sub stc adc repnz and xlat and dec and cmc adc divl sbb fdivl mov rclb test jle movsl xchg or jl pop inc into stos imul jo sar sub stos movsl dec fucomip testb mov std subb (bad) mov ror scas push rep hlt pop test addr16 sbb xor repz leave and jle in cmc aaa std ljmp leave icebp pop mov sbb aaa cld jnp add sbb mov imul iret stc jnp (bad) (bad) adc cwtl mov loope popa gs aad mov xchg ret inc xchg leave out pop cli in pop xchg popa xchg lock pop in jecxz stos mov or sahf push fnstcw mulb dec dec sub insb xor or mov (bad) pusha mov cli mov or (bad) ss jp aaa push stos test ja adc sub ret or scas xor mov cmp xchg jge inc mov or mov mov loopne lds jg into sbb sub mov and inc cmp mul cmp in push inc lock jmp cmp scas mov push sbb hlt lea sbb adc inc aam jns xlat push out and ja sub test repz push dec mov pcmpeqb pop iret push and aas lahf cs adc cmp push push push inc xor xchg mov and jmp or test and cld or pop fsubrs cmp or cmc xlat outsb cmc add and pop scas or shlb std es lock mov xchg (bad) dec push inc cmp sub jns mov sbb lds cwtl negl add notb cmp add sti cmp jbe incb jno push dec jno mov mov push popa repz andl roll repnz push out or cmp dec out fldenv in jbe cli jecxz paddq and cmp inc ss adc push stos and and bound pop cmc enter bound push shrd or mov sub dec cmpsl fnsave iret mov (bad) stos negl jb test adcl sbb enter ficompl mov (bad) lahf inc push cltd add out out js xchg daa loop or mov (bad) (bad) stos push adc rorl xor setno cmp or jb adc repz adc jl mov xchg aad fdivl adc (bad) jns pop lods (bad) pop xchg fisub mov cmc jl nop mov lds popf cmp je mov mov cmc push and hlt std dec cmp fldt stos push enter adc in les adc cli fiaddl mov push and adc pop (bad) rcll in adc or clc dec jo stos movsb fnsave jmp mov cmp mov leave adc mov sbb add popa add xchg (bad) test scas pop stos fcmovu (bad) cmc cmp lods dec dec (bad) mov xchg add lcall jno adc pushf lahf xor lcall test xchg jo pop js insw mov fwait lock sub inc test enter test lea cmp cmp (bad) xor xor das mov out (bad) call jno or jb mov cmp mov xor dec aas lods jp dec fcoml in mov jb mov (bad) or pusha je outsb mov xor test sahf out idiv lret dec cs pcmpgtd add or outsl pop arpl std test push dec test inc fisubl adc xchg lods pushf test fcoms pop mov es ret xchg test sbb or xchg inc mov (bad) inc stc arpl sbb sbb or sub leave jl lret (bad) movsl mov and mov call pop adc bound addr16 mov shrl sub fldcw enter dec das mov (bad) gs push sub clc sub cltd jmp pop inc mov xor je dec adc add dec mov jnp leave add imul mov pop and fisttpl push mov fstl mov ja add pop call repz int3 and (bad) or jle jp imulb pop mov mov sahf arpl lret aad inc (bad) arpl insl ret fwait insl andl dec int3 cvttps2pi dec mov jmp jl imul cmp or pop dec cwtl rorl mov and icebp adc lret xchg cmc out (bad) cltd insl cmp out nop push ss in mov out cmp adc fwait pop mov xchg popa hlt nop hlt mov push out or sti dec push xor enter and cmc pop xor shr xsaves xchg and jns idiv daa cmpsl adc orl mov int sub iret jb shrl xchg cmc (bad) dec cmp mov xchg or cli sub jp mov or mov dec dec cmp mov xchg pusha push adc fwait lock clc ret rol int3 mov repnz sti ror icebp adcl (bad) pop loopne xchg jne mov jae je scas push sti push dec or mov or jl mov stos mov call cltd lret or jg dec cmp in or cmc mov ljmp mov sbb or lret mov inc hlt mov dec or (bad) mov push dec cli scas sti test pop lock ljmp dec sub lahf mov add mul aad pop or xor fwait push or mov imul loop cmp pop cmp stos or sbb add pop cltd loope push out push and push push cmc bound and ljmp push mov sub (bad) div xchg sub out pop dec mov cmp mov insb scas arpl mov cli arpl ror pop jnp test mov mov test sub inc xor mov mov cmpsb sbb clc inc mov repz xchg add dec and jno test pop adc out clc mov cld ret test xchg mov adc pop fwait sub movsl (bad) pop out lret ljmp and getsec inc je test or call orb jns inc addl arpl out mov xchg iret flds or mov fstpl (bad) mov or adc iret mov or stc sub movsl daa popf lea lds or lret dec ficoml cmp xchg cli (bad) sub lock mov sbb sub mov leave (bad) (bad) es into jne or mov ret sub (bad) pop fisttpll imul jae hlt mov dec cmpsl adc or int3 aad xchg int or adc fstpt mov repnz std push mov mov lock aad out or mull aam test xchg loope pop aaa or mov addr16 or mov push lods popa pushf push lock out cmc dec and aaa (bad) dec xorl mov and in insb mov out repz mov icebp not mov sbb cmp push into pop add (bad) adc loope sub or mov mov adc xchg (bad) pop jmp cmc push push push js sbb pop add push push mov nop insl (bad) or sarl js cwtl je pop loope or add lods push adc mov roll or (bad) (bad) mov mov push aad bound pop pop (bad) aam and pop ds negl mov mov out (bad) mov addr16 mov xchg mov rcrb aad into add pop xor iret mov inc divb or jl push pop (bad) (bad) sub cltd xorl cmp cmc mov dec shrl xor je js sub push or repnz popl fstpl push xor sub notb cmp bound (bad) push cmpsl jns shr inc adc mov imul pusha jge and shrl bnd jns adc dec jb mov add or pusha popf jmp and jg cmp mull lods mov popa ja inc sub cmpsl dec adc iret mov inc mov mov lret insl aaa popf idivl mov and dec mov fisubl lds (bad) into or addb mov inc sbb data16 int3 push test cmp je pop gs mov mov jo repz xchg mov cmp ret aas test push scas or adc fwait bound push inc enter fimull adc lret or out cmp xor cli rorb and js or idivb sub pusha and add pop mov jmp lock adc in adc cmovp or arpl insl imul and loope icebp adc lahf push and pusha into jb movsl popf daa (bad) push iret out aas jle xchg xor addl sbb xchg xchg data16 xchg mov icebp scas jb xchg std cmp add pop ja sbb arpl loop stc push icebp jbe js mov out cmc cltd mov mov xor or mov mov iret bswap push xor cld popf adc sbb mov pop jns movsb adc ret bound aad lods dec sarb jecxz or xchg add mov out ss aad sbb jg jb jo mov xor adc dec aaa icebp push and lock mov fincstp repz add mov (bad) out push xor add aas insb cmpl sbb adc imul fbld out cmpsb add cmpb aas adc jne test pop mov xor stc addr16 out jo dec jl cmp stos stos or jl adc aam add stos push sub mov mov mov repz fcompl (bad) daa adc int3 dec mov fimull sub aam daa inc cli out scas idivl lcall push add out mov dec inc lret lret mov or mov outsl cmp call sbb mov pop lods faddl xlat sbb pop sub cmpsl xor iret and mov sarb loopne in push mov lea xor push xchg jecxz inc lods cmp es adc sbb adc add or sbb jmp sbb sub sub mov rcl add into ret dec push loopne adc cmpsl dec pusha aas lods hlt test xchg in and dec sub xor pushl or xchg cmp outsl (bad) mov xchg lcall lods add adc stos movsl (bad) rcll (bad) mov test push jne xor sub fiaddl dec (bad) adc call aad test ffree xor mov jp adc imul subb sub test in rol sbb cli cmc push mov hlt imul add mov aad jmp sahf or push in fldt cmpsb sub mov lods cwtl or repnz lock loopne mov dec rorl call mov cmpsb in or mov cmp dec or (bad) pop es jae les dec jbe mov adc ret movsl or (bad) rol sbbl sbb int push into dec inc mov cmp mov mov or or or push xor out jne push push or ljmp fwait dec push jecxz pop or pusha push mov cltd fmull movsb stos mov mov xchg add or ss cs addr16 pop or ret push mov or or sbb sti mov leave dec inc push stos mov stc sbb cmpsl scas adc pop fcmove cs xor xlat sbb insb or ljmp cmp test and ss jl std (bad) addr16 sbb push mov pop push iret mov (bad) mov call mov and cwtl popf dec cmp cld jmp dec roll sub fist jecxz int fmull mov mov mov stc add jg fst loop push stos (bad) insl jne stos cltd ret and push mov push cwtl sub inc test push movsl jp pop aaa loope mov inc aam sub adc push mov jbe sti stos or mov loopne push jb xchg cmpsb (bad) rcll scas mov push fimull cmp adc or mov inc inc jge mov cmpsb gs out or stos push call adc cmc mov loope (bad) mov mov hlt hlt cli aas dec scas jge out jo jle mov (bad) mov test fs dec ljmp pushf adc adc cmc jno add fnstsw sbb scas cmp mov rcrl stc pop xor stos cmp mov (bad) popa gs daa fbld xor xchg pop clc push rorl lock mov adc cmp cmc sbb aaa push sbb pop mov or mov or pop xlat push mov push repz shlb fsubl roll sub iret das js mov jae jge ljmp je jnp push adc push mov fucomip ss dec push mov or cmp int fs or xor sbb sub (bad) jno pop sti cmp sbb xrelease in out hlt lcall testb fstpl pop push add mov shrl xchg add inc or lds movsl in or adcl rclb add outsl hlt scas dec sbb sub pusha pop (bad) mov nop or imul xor insb push mov cmp pop sub repz push lods pop or dec (bad) stc sahf repnz mov mov push popf cmp push das add jae pop enter or es inc sub jnp rolb or adc (bad) roll cmpsb pop sub or adc test outsb push shl cmp xor or cmp adc cmc test das xor inc incl imul xchg les and mov idiv cltd xchg inc xadd jmp sahf sbb mov hlt mov stc and pop add push iret fldcw gs in shl call sbb push loop or imul neg in or dec sahf dec lcall sub dec inc scas dec data16 ljmp adc adc imul mov into mov adc jo (bad) mov leave insl mov movsl and mov push mov dec movsl lods fs jle fmul aam mov pop sbb or xchg fucomi inc in lock ljmp lahf push adc test push jp sbb adc stos leave adc in mov dec cmp and push scas mov jecxz dec ds mov rcrl (bad) sbb pop pop leave xchg inc lahf aam rorl faddl jge mov mov cli (bad) outsb sub ret or popa shlb adcl xor or loop and gs fyl2xp1 ljmp ljmp lret add idivb jae push dec decb and rcl shr int ljmp xorl add mov jne xor mov rcll inc scas decb test (bad) adcl mov mov aam pop popa mov notl mov jno,pt or lret lods push mov mov xchg dec cpuid mov push jmp mov pop in in lock scas movsb lea fsubrl push scas push pop and lods xlat cmp mov sbb aad lea clc gs jle rclb enter push adc test add mov aad pusha imul jl andl inc outsl jne xchg hlt mov sub int3 push and or test lret int cmpsb (bad) addr16 subl adc or lret adc ljmp push cli xchg mov mov (bad) es stc mov xchg push or fs push (bad) popa jae xor push icebp mov or push lea jmp mov sub cmc dec and insl cmp adc arpl outsl pop jge mov fimull enter add push or jo dec into aam or cs sbb enter lods inc or mov movsb xor imull ficoml dec iret or xchg faddl mov add mov dec push iret xchg std stos lahf imul add xor aad and incl inc movsl or lea pop pop sbb call jnp data16 fnstenv or inc lahf add fsqrt mov sbb adc in js inc lods and or xchg in jp aas jb jo test lret mov jl lods mov negb and mov aad inc dec push (bad) mov iret mov popf lods iret dec push sbb fistl or mulb and outsl std adc and adc addr16 leave add dec xor or push xor mov xchg mov lret jns mov inc fsubrs (bad) std mov mov mov lock decl arpl xchg cmp xor mov inc mov dec jne xor std push or xor jmp mov pushf lret jl lock andl loop into mov sub iret xor lock ret fisttpll les cmc leave mov jno jl and mov test sbb daa imull gs test mov out cmpsb dec jge adc pop cmp loope mov les fstpt adc scas inc adc lock sub mov fsubl and sub lret test mov add shlb stos leave fimul inc cmp mov cmc dec ds fs pop lea test pop adc cmp pop cmp or adc sub (bad) sbb scas (bad) dec or cmc out scas dec cmp daa mov mov lock mov pushf mov popa rcl sbb movsb or cltd movsl push (bad) repnz xchg loopne out or mov enter sbb xor fs pop fbld test (bad) push adc sub scas mov loop (bad) and in fimull leave lea test inc or mov into push add dec or push inc adc pushf mov cmpb xor por push mov cmp mov or fdivr sbb pop divl loopne lahf sub out mov mov jmp lods cmp jecxz or pop scas sarl int3 xlat xchg or cmp mov mov je cld xchg xchg or pop add aam call mov xchg leave sti dec add push and cwtl out push fcmovnu mov pop ss or sub stos leave mov xor mov sub outsb sub or add and add insl push jmp adc call or cld iret pop rorb test aam int int mov dec cmp fcompl or mov jecxz mov fs aas sbb pop lret pop scas fwait notl cmc test nop imull mov sti jno int cltd outsl shl mov or push es inc cmp adc cli adc or mov ljmp arpl aad cmp xchg push inc insl dec aam mov mov adc repz stos push sbb inc pop or test imul loope divb mov imul das ljmp popf sbb ljmp add out mov and ror mulb sub (bad) gs stos sbb fs inc sbb push cmp (bad) testl dec stos sbb add movsl mull inc mov xchg add and mov js sarl stc adc add imul pusha pop adc mov mov daa push int3 sub or fucom mov jl mov mov pop dec popa fild jge jl fldt aas imul xor subps or pusha and xor inc or jp mov dec stos pop push sbb lret stos or push jl jae in out mov mov cmc pop sub dec incl lods push dec imul cmp or imul (bad) sti rorl ja or push std or lret or dec ss jecxz das pop cmp loop mov jmp dec sub pop xlat cmpsl hlt pop or jae push flds jmp imul or inc sbb pusha pop dec push cmc mov or inc dec icebp (bad) sahf cli lea fdivrp enter repz repnz daa cmp in (bad) mov arpl imul push push into push pop pop scas cwtl mov rolb xor or gs mov jo ret mov stos mov subb stos movl mov adc fmul or mov add (bad) mov mov (bad) and inc mov sub jae adc inc hlt hlt jecxz pushf pop inc mov js aas mov repz movsl or test (bad) and ror insl dec fnstcw repnz outsb pop mov mov fnstsw jne or (bad) sub cmpsb icebp lods jl inc imul (bad) or pop mov rdpmc loopne push pop aas cli dec jnp test fs pop je movsb cli mov mov mov sbb js ds cmp negb push cmp pop (bad) int adc imull pop and sbb pop mov ret jmp lods cmc add popf or push je in ss test lock fisub or jne xor adc inc roll repnz idiv cmc xor push insb andl stos mov mov jbe,pn inc xor add loope and cmp loop call sub leave in scas test call repnz das shrl (bad) pop testb jno and mov es cmp loopne addr16 xor sahf or xchg incb int cmpsb mov clc mov mov xor pop jo dec xor cmp mov or sbb fcmovne push out push leave popa cs jns or cld (bad) mov movhps mov cmp movsb lahf xchg test xchg lret test or ss popf pop iret movsb jns bound push add dec fstpt mov je (bad) sbb jle test push dec (bad) je jbe stos jl mov sub js pop cmp (bad) xchg cltd (bad) lahf adc scas mov lret lock jno in mov mov iret test xlat lods cmc addr16 (bad) xor std adc cmp aam je xor call sub jo jno add add cld mov scas cs or mov or ret repz mov or orl push jl pop mov mov arpl xchg negl ret movsb insl daa dec ss cmp and push xchg xchg sti in cltd xor ret fnstsw fsts and mov ja jo jg pandn jmp or cmc stc xchg addr16 aam movsb mov dec sub gs stos movsb test xlat and into mov (bad) dec fstps mov or lret xor jo addr16 icebp std clc out sub add out lock insl mov daa repnz pop jne mov imulb adc adc mov loopne fucomp inc fwait mov jnp jb pop jp imul mov add fisubl sub jne lret pop (bad) popa jno xchg movsb xchg push xchg dec mov scas xchg sti inc data16 movsl fld mov call mov add inc mov jbe (bad) adc mov or enter mov add mov test pop push das mov jge adc sbb stos aad imul in xor and push arpl push lods inc inc movsb aas (bad) (bad) scas adc or add movsl or test dec imulb aad ror fs pop jne pop es cmpsb popf xor inc scas enter xor adc mov aas cwtl push test loop add push ror or test sub jle scas mov xchg push loop cmpsb cmc mov cli jae sub mov ja aas jae dec out mov fildl stc xchg repz dec push imul xchg in lahf cmpsl jge sbb in enter fabs sub leave sbb jbe leave pusha std data16 jb jle rorb xchg cld (bad) cmc fwait mov je cwtl fidiv out imul push iret or push push sbb and les loope inc decb inc xor lods mov sub (bad) call sbb mov lret outsb push mov pushf jmp adc in or push frstor cmpsb out inc hlt jle mov mov pop lods outsl popf (bad) leave mov xchg mov dec pop sbb arpl cmp ss jo or mov lahf or adc or stos mov test leave xor jecxz push push dec movsb loop outsb ss call mov jle xchg xchg and leave push xchg bswap mov lahf inc je inc in in (bad) test (bad) or sbb mov push add (bad) or xchg push or out stos fwait dec and dec or ret mov sub in dec mov fwait arpl xor and or xchg push insl sub cmp fldl and (bad) mov adcb sub cmp mov dec push into push not lods xchg adc (bad) cmp or mov dec scas and sub test push pop fistpll test test dec and jb jg mov mov pop in sbb cmpsb xchg mov fimul popf stos or xchg int inc push or out add xchg lds int3 addr16 inc jmp mov mov mov jge jb cmc xchg push mov repz addr16 testb pop mov negl pop stos out pop imul xchg adc mov add stc dec push dec pop idivl int rclb jne mov cmp jbe adc cltd cltd imul (bad) notb jle ret ja divl push cmp inc daa dec pop xor cltd pop xor jg sbb popf addr16 mov (bad) xchg mov (bad) (bad) je jno adc push push xchg sti mov sti arpl xor jns hlt xor adc pop (bad) cmpsb icebp or xchg dec mov push loope cmp div sahf inc add mov or xor sbb fsubrl or inc loope lods dec mov push stos push iret or outsb clc or mov popa xor (bad) mov lock fisub push or rorl pop mov adc icebp xchg jbe das mov xor pushf fmull mov lods (bad) jae xchg mov push lret xchg (bad) push insb mov aaa fild lods pushf shll push or sbb lret imul out sti pop lods aam sub js out mov sub mov jle stos or jmp jecxz or test sbbl lock and mov inc add cmp jp xor pop mov mov scas leave jbe xor push xor inc icebp pop lock mov mov mov test das mov xchg out scas jo (bad) jl inc movsb jge lahf out or pop imul ljmp fsubp movsl fsts dec addl loop xchg pop daa popa int out leave jo rolb xor fstpl push jl inc (bad) hlt testb in sahf out hlt dec pop or mov icebp xchg iret out mov mov mov lock or sub pop push push sti push ret jg dec aaa es in or mov fcmove mov bound xor ljmp jb or or enter fimull sub hlt nop out dec and jecxz test aad dec xchg (bad) cmc sbb mov inc call in push mov test movl xor mov in cltd nop sarb mov lds (bad) pop sub loope or adc lock iret in mov pushl push (bad) or pop or in int je inc push jecxz fldt idivl aaa dec pop test (bad) adc imul (bad) fxtract bound jmp xlat (bad) sbb shlb xor jl push xchg into mov cmp push outsb pop mov cs mov lods mov or jl imul out fldl data16 cmp jbe clc push loope adcb sbb shrl mov mov sbb and add or cmpsb aad mov stos dec fs cwtl or sbb shlb xchg mov lds push popf (bad) dec cmp mov fsubs into or lock mov cld lcall xor xchg lods in fbstp and (bad) imul aam icebp movsl (bad) (bad) daa mov lods xlat sbb lods jno or out push xchg add dec sbb bound mov ja popf mov add int loop adc mov test lcall sub xor adc mov cltd dec subb mov iret repz arpl std add mov mov cli cmpsl inc mov mov jb jle mov into pop or adc das jns arpl rclb sbb imul test int3 fwait or movsl rolb add or lahf ja sbb daa daa vaddsd pop aas push or adc out and or cmpsb cmpsl pop jb into pop insb cmp mov sbb dec mov cltd cmc adc inc sub dec and lret or loopne xor mov ljmp cmp mov addr16 out aam dec leave adc fcmovu leave leave (bad) push inc or xchg js mov hlt ret or orl pop push call stos lods (bad) repnz and stc loope insb mov dec test movsb or sbb enter push inc pop and xor jecxz aaa pop lods push (bad) fmuls out ss dec sbb bound test les mov or lret xor sarl or add stos mov mov pushf enter cmp inc push adc push or call out dec icebp sbb mov xchg mov add scas out pop repz cltd sti in xor in add xchg sbb adc jg cmp or loopne xchg movsb push or pop ror jb or xlat inc movl int mov dec je stc out dec sahf in out and decl fbld inc test mov insl fs xor js mov or in jecxz inc cmp ljmp loopne mov xchg sub pop push mull (bad) sub sub ljmp add xor jae or inc je stc xchg enter and mov fadds jns lods scas jnp stc paddusb xchg stos adc adc test hlt movsl pop daa js lret orb mull adc add pop inc cli lret mov dec jmp sub andl sbb das adc imul or fs push and mov pop or shlb je popa mov in test (bad) ret adc (bad) xor int3 push or pushf or cmp stos jg das aam addl movsb or outsb mov inc (bad) decb fwait and or dec adc sbb insb stos jbe mov jle pop jle cmpl lods ja jnp arpl pop cmp cwtl cmp xor (bad) or test sbb pop sbb dec sub add repnz sub ja or (bad) orl pop fimul daa mov cmc sub ja in ja je test cmpsl mov push mov test and addr16 jp jne aam repz cmp sub js mov adc in jecxz pop push or cltd inc xor xchg pop push enter gs xchg and and mov hlt jae jecxz and nop js or bswap into inc mov bound in xchg mov outsb push push fldenv loop mov test jne add xor mov jecxz xor pop add les xchg popf cli hlt xchg popa mov add rorb popf (bad) mov or pop pop pop sbb ficompl sub jecxz int3 aas movsb xchg xchg mov loop ss push jo aam fs cmp addr16 orl push imul cmc loop loopne and xchg fstl mov or mov add adc xchg xchg fucom adc pusha testl ror div mov cmc in push std sub ja lret cmc and cltd cmpsl adc mov push mov movsl lock lds cmp mov jp mov xor xor addr16 or bound or hlt xchg notl xor xchg adc lock bound or ret cmc push arpl inc sbb inc xchg push inc shrb xchg pop insb dec cmc bnd pop repz sbb dec bnd inc loopw leave fwait enter add mul cmp popa pop dec or or push in lods dec mov shlb add loope popa aad sbb call insl mov or push sub or lds mov in (bad) sbb mov ljmp sub enter (bad) cmc js lods aaa aad dec xlat and lods mov (bad) (bad) addr16 xchg cmp sbb and inc mov orl ljmp cmp sahf out in push sub into mov loopne xor or out pop sub add ret aad mov lock vaddsubps test in stos repz mov rorb adc popa punpckldq cmc xchg lock push loop fistpl push inc add or movsb ret pop cld lock mov repz (bad) xorb adc xor popa adc mov inc data16 ds cmpsl ja,pn loope and jecxz cmp mov aaa jmp insb or stos inc ret stos or movsl add jo fwait repnz out or out insl adc adc test aaa mov sbb mov mov sbb repz stos add mov sar adc pop mov xchg and in mov or push jmp or pop std or xor dec (bad) in insl sub pop inc add repnz jg aaa mov dec sub lea ja aad pop dec cmp sbbb jne lock ret movsl adc in push movsb cwtl test aas ljmp or and jns and mov out lahf mov repnz lock mov fcomps and iret dec xchg adc imul (bad) sbb (bad) repnz shl fnsave mov push fcoml lods or movsl ds add cmp cmp push loope or (bad) adc inc or add in or lcall stos pop dec or cmp addr16 lods (bad) mov jbe mov lret out cwtl pop jecxz add sti js ja movsb add insb out iret (bad) push mov inc rcrb push popf lods jo,pt jle dec xchg call ret mov clc fwait xor imul fisttpll movsl push int and sub sbb or lods pop out xor mov pushf (bad) lcall popf inc jl cmp sbb fdivrl fiaddl add shl and adc fisttpll or and cmpl pop not cmp mov insb push pop add fs push dec dec sbb lret sahf or xorl int jle mov mov fisttpl xor add mov and pop xchg xchg aas add cmp jbe or push adc or dec stos nop push loope or mov mov pop push cmpl jno scas sbb mov add push jns stc xor call rcr mov or inc or es pop or ss push mov out cmpsb outsl or push (bad) xor fstpl xchg shrb or inc sti mov repz mov push inc xor and xchg mov cmc repz dec mov push cltd mov sbb js mov xchg imul mov dec add mov cwtl push cmp jbe xor pop lahf int3 fwait sarl mul mov or fcmove or loopne mov and pushf xor xchg xchg cwtl jae hlt and lods test pop mov dec cmpsb or jp (bad) dec cwtl mov or out xchg cs mov sub and xchg mov cmc adc dec pop and jle (bad) mov sub pop shr ljmp insb dec mov ss push sub fnop sti ret mov cmpsb leave push imul cmc popf jge and cli test jo lea pop aam jmp adc (bad) stc mov add dec (bad) movsb jb fisttpll fs cmp jo xchg roll es outsl xchg cmpsl xor bound add and inc sub jle sbb fdivr and adc jle test add (bad) lock mov hlt mov leave out in insb sub dec or xchg dec sbb lret cmp dec cmp sbb test mov sbb lods adc inc pushf push and jno pop cmp add lock insl dec add add cld (bad) leave dec xor inc adc xchg pop mov dec push in cwtl or mov fdivrs or pop fprem1 fwait push dec mov and sbb insb or mov xlat pop add or cli pop cmp ja and aad pop lcall (bad) aam or push enter mov or jl jecxz mov hlt or push (bad) cmp sub scas add xor mov pop leave push mov or shrb sub mov pop jge jp popa and out mov mov out pop xchg or fnstenv (bad) mov cli pop xor inc imul add loopne lret or test mov fcompl jne or aad jge xlat ret int3 mov xor or cmp rorl stos cmp or dec out or sub cmp lds dec push inc test mov mov hlt xchg es mov addb mov test push imul pop sbb xchg and cli (bad) ffree bound or sub sbb shrl xchg sub idivb dec je or sub push add jb cmc mov xchg fimull push stos or mov xor sbb popl repnz aas push inc push sbb dec cltd or jno insl in sbb push ljmp leave or dec pop mov jmp aad add or nop adc sub mov jns mov scas dec repnz aam bound pop jl push in (bad) xor xchg repz lcall (bad) imul bound scas mov adc jg mov test push mov out scas xor loopne pop (bad) icebp in pop jle nop cmc lock xor mov add icebp or (bad) scas test xchg cltd xor insb jmp push push mov jp mov and add jecxz mov es bnd push jo test inc loopne ficomp lds adc (bad) aaa lock or jle jbe mov or shrl jo pop add stc dec jo cmpsb pop in jl sub sahf gs lahf pop lock sub (bad) add jl mov lods outsl cwtl cli (bad) xor xor stos push jge jns add stos insl outsl push in sub mov popf jne loopne adc cmp push push lock sbb (bad) adc test nop mov pop mov test repz dec pop jbe inc sub inc cli jns or push and push dec sbb mov inc mov pushf jl and in dec stos dec std stc movsl (bad) cmc mov int3 lock dec mov lods (bad) mov jno and adc out insb mov xchg test rorb pop inc add stos inc jo push mov hlt stos xchg scas push idivl add sar push (bad) and jno scas push mulb pop repz mov in out push mov (bad) sti xchg push std mov sub ss dec dec mov jbe fist xchg sti bound std in imul jl nop clc mov nop lcall jl xor or inc in int3 dec jge or sbb iret cltd mov mov aad push in mov jmp arpl xchg jno xor and (bad) div adc rcll rclb icebp mov lcall stos (bad) jecxz jecxz xor push rolb inc fwait scas push addr16 daa add pop xchg negl mov adc aas sbb imul out pop or cs out xor repz int jne mov stc cmp or or sub or imul and leave jmp sti xor insl mov scas aad dec repnz xor and xchg mov shl dec push insb shrb pop pop out nop sarb dec cmp xchg loopne or mov push (bad) fcompl adc enter adcl xchg jge adc lcall fs adc cld push sbb clc jbe push test or movsl (bad) outsb mov lret or sub cld les adc or lret sub (bad) mov xor pop cmp lock fiaddl sub icebp (bad) mov sti mov (bad) or jo push loop jecxz pop repz jge adc mov push and fisttpl test sub xor dec jecxz cld jl xchg sub mov jge imul push xchg mov lret pushf fcompl inc add and mov lret movsb mov and fstpl mov fiaddl push psllw or shlb rol iret mov call push adc cli inc std jo jle jp leave and mov inc lret (bad) lods jg add adc push pop push inc out adc dec mov fwait leave xchg cmp and insb mov adc fnstcw jns xchg adc es pop sbb mov loop pop insl inc dec jge popa lcall imull int3 test push push dec cmp addr16 lds loope leave sbb sub mov lcall out jle or xor jbe add arpl lcall sub push iret iret push or test xchg aas (bad) shrb (bad) pop and ss test or xor pusha jne mov aam add out pop add xchg lcall cmp popa add cmp inc (bad) (bad) andl xchg sub add orl lret lds lods test xor xlat fnstcw add lret adcb ja mov inc xor mov pop or xchg adc jns movb cli jmp loop cmp mov data16 add or cmpsl xchg adc cmp lret sahf pop or sbb add mov mov xorl add lret repnz call xchg xchg sbb or sbb mov hlt or lahf in mov pusha loop loope ja push xchg jmp iret in dec mov cmc fiadd cmp repz mov mov or iret push arpl push stc cli mov lret or scas or out into not xchg cmp mov js (bad) es nop popa scas or and int3 mov push mov sahf lcall dec lahf jno hlt dec insl mov popf inc repnz pop dec cli dec add xchg mov or mov test test mov push loope cli or repz lret lea fildl (bad) loopne mov inc das add or sub incb js pop clc inc cmpsl and mov loope daa or call jl mov xchg testb cmp or jns cmp cmc mov cmpsl inc xor cmp pop add and or push fbld movsb arpl cmpsb pop lea ffree or es repz adc adc ljmp lahf mov test and test stos rclb xor dec lock (bad) repnz imul or pop pop scas std inc add mov jmp bound dec loope mov mov xchg or xchg dec and hlt adc les xchg push or mov cmpsb or adc cmp push and nop dec mov imul mov cmp sub call adc xchg dec imul sub (bad) cmpsb mov aad cmp cltd xlat popa jb js popf pop ret push fistpl mov sahf adc cmp rcll lock test jmp mov call and jge fmul fwait sub mov cli sbb fdiv add mov pop repz xchg add mov out jb xor loope cmpsb lods repnz into imul sbb or mov or push lods pushf adcl pop pop and adc cmc in out aaa sti or aas in push dec imul cmp ljmp js stos add jmp pop mov lea repnz enter sub sub push repnz push or out sbb ds or aas mov repz and xor out lahf cwtl gs das or xchg into jp testl cli mov jl rorb xchg or rcll pop or add loope mov imul unpcklps insb scas (bad) sbb push jns push notb sub fcomp test cli or jge es (bad) xchg (bad) in xor es gs loopne and inc inc (bad) int mov out and or cmp rcl mov insl jmp jo nop lock mov pop ja jno ret sub lret jae jo jns cmc roll (bad) lret lods push sbb leave push aad cli mov sub loope dec inc or adc or push inc dec mov sub arpl hlt mov outsb or ds push or in fisttp mov xchg iret fcomps les ja int3 test jg (bad) fs out imul punpcklwd fidivrl cmp int cmp addr16 pop jge jmp or xlat outsb cmp pop jb lcall sbb lock mov scas lea or rorb lods ror cmp fisttpll mov loop push jne repnz (bad) ljmp mov mov (bad) scas sti push je cs dec mov sub addr16 stc call jns lods fisttpl cld mov sub stos mov fisubrl dec mov lods mov outsl test int3 cli mov fistp jmp dec xchg repz push dec push aaa notl andl shll mov in arpl push or sub cltd and scas xor xor pop dec pop or sub (bad) adc out or push adc sub or and lds rcll or hlt inc pop imul dec call cmp pop (bad) int pop pop fisttpll push loopne jmp scas aas hlt cmp dec dec jge test inc xchg or mov loope sub sub lahf (bad) mov dec jmp aam xchg xadd icebp jp xchg test push push xor repnz ds jno add inc lahf pop fs or test (bad) fneni(8087 lds mov imul iret pop mov xor or fimul out ror jbe cmp sub jo mov dec jl jmp dec mov test je aad test scas xor sti inc pusha std es popl pop aas scas jmp or sbb mul jge pop and sahf movsl out and or xchg (bad) and or and mov push sub or pop inc push mov hlt adc out imul sarb and test rorb or loopne lock inc popf pop movsl ds ret mov mov or mov in ja mov lcall (bad) stc mov sub add mov dec stos push rolb or push out pop push and dec jno cmpsl loopne dec cld mov ja fcmovnb iret int xchg push mov jg in adc sbb clc xlat cmpsl popf mov fwait aaa mov and jl cwtl ja dec fcompl subl sub stos repz push sbb cwtl fmull mov repnz pop dec adc roll test or (bad) xor cs jecxz or clc cmp or add xor arpl (bad) dec jl and inc bound into sti pusha aam jo inc pop mov mov or jne ja ret or aas inc add fstps leave add mov (bad) repnz int in jne and mov mov add xor push adc incb hlt mov idivl or xchg xchg mov movsl mov pop out stc fmull xchg es cli and push leave fs int3 or (bad) movsb mov pop pop add cmp loop daa std addr16 idiv pushf pop xor shl iret mov sub jmp or cmpsb jo ret mov sbb ljmp outsb insb dec cmp add xchg mov mov fwait dec sar jl xchg into xchg sub mov aas sarb imul adc cmp mov adc adc ret xchg sbb cmpsb jns int push out sbb or fnstenv out cwtl jnp xor xor xor push daa mov or loop scas or push icebp add add or negl sti test and mov dec pop mov cs andl or mov or pop or in mov insl pop add std iret push jg mov aad mov dec inc or (bad) xor or test cmp gs mov sub push (bad) jecxz std jb pop push dec or mov mov stc mov into inc and pusha mov fwait pop sti rorl mov cmp aaa adc or push decb iret int3 inc aam mov pop js cltd mov call inc inc fnstenv xchg mov jl add shrb push cli pop cmc mov cwtl dec or das xchg push ljmp aaa mov enter jmp cmp or insb pop daa (bad) mul or test sub sbb (bad) pop dec fiaddl or icebp dec aam cmp lea mov or push std cmc fwait cltd or mov rolb adc daa leave ljmp lods dec jb,pt scas lret arpl leave xor xchg repz or jb jns sub ja sti cld xchg sti repz mov test push or xor ds ss out jb adc push cmpsl jns or push add sub adc movsl jo adc repnz dec or cmp (bad) call adc arpl or push stos dec add jge xchg xor pop add mov pop sbb cs mov notb shll decb or shlb faddl fildll loopne mov mov iret pop xchg sahf and adc xor jne add fsub repnz adc pop or pop dec inc mov out lea jmp aad into mov pushf (bad) mov lock (bad) repnz xlat in test in add mov movsb leave sub nop cmc pop movsb xchg sub mov aaa stc or mov push or sub gs insb or ja (bad) jns scas es cmp or int3 xchg scas or xlat (bad) (bad) dec or sub jmp shrb or push cltd adc test imul scas popf addr16 lea and repz cs leave dec stos adc mov add cwtl cmp dec xor test pop daa push aaa mov jle shll mov testb or stos dec rcll jbe mov mov jp fstl rcll pop ljmp dec (bad) jnp mov mov xchg lds sbb lock mov sbb mov jecxz sbb test cld pop shr and rcl and jns mov idivb ds push insb sti jbe and dec test lock dec sbb sbb dec repz sti ljmp (bad) (bad) adc jmp xlat ss sub xchg mov fnsave mov xlat movsl xchg test call insl push jbe or xor cmp test loop jae mov aaa sub mov popa jp or test jmp pop rcrb xlat and add cmp push mov cmc jecxz ja cltd sub scas sti (bad) mov int add xchg push mov sub or fs loopne sbb pop loop mov cmp ret add xor pop sbb and (bad) inc iret hlt insl adc mov xor push fdivrs iret out dec mov (bad) push adc in or jns (bad) leave xchg aam pop scas nop cmp add mov int hlt mov leave pop jns test inc xchg aas cmp xor dec cmpsl pushl test or mov enter out loope stc mov inc or xchg inc pop push shr mov dec popa js mov popa shrb mov jnp push leave out (bad) in sub dec fstpl inc ds adc fmuls (bad) cld cs lret jb popa out scas ror inc sub movsl mov mov int dec mov fs adc movzwl add mov and (bad) adc add jmp mov sub push or testl xchg mov mov fwait test mov adc mov mov add in lock movsl syscall mov mov or sar pop push mov dec fimull push (bad) jb push push push cmp bound rclb (bad) bnd adc xchg or dec or std ja jge xchg inc sbb add repnz loope das pop xor in outsl shlb arpl dec mov fwait add mov adc push addr16 fisttp jb xchg pop dec inc mov mov rcll pop or ja loop lahf fwait sbb push test pushl insl adc sti xchg lods out push (bad) scas jp inc inc mov adc push std in fsubrl jbe test inc sub fwait cmpsb push xchg sahf adc adc dec jno jp in jmp scas push fcoml (bad) test mov sbb js in popf lock rcrl xor lahf inc sub jo daa dec jle mov or mov stos imul push daa xchg jmp imul xchg mov sub jl push aas hlt jo icebp fadds das in sbb insl mov mov push mov stos jl in adc or nop lods xlat mov jle popf movsb out sub bound test jg fs (bad) (bad) mov xchg (bad) sti sub mov sti inc pop mov (bad) push bnd mov adc stc sbb lret sub (bad) leave out and add lds sbb loop fmul inc pop mov mov das pop (bad) dec mov or stos lcall (bad) ror insl bnd dec add dec lock lret push or rcll sbb lock pop sbb ja jmp or lods imul daa ret js loope mov sahf das adc mov pop push or cwtl pop pop test fiaddl sbb push jo inc hlt scas (bad) out (bad) xchg sbb (bad) in sub push (bad) mov mov test sub mov add icebp lock jbe (bad) sub movsl shll stc test push jecxz cwtl sbb enter decl or push mov or cmp and fldl (bad) or ss push xor dec cmp sbb sub adcl pop mov mulb insb pop add push or mov (bad) adc leave mov jecxz,pt lock sub bswap ss or jno mov in ljmp mov (bad) mov call dec jb imul mov cmpsl sti lahf mov adc dec push mov or jns stos js imul push adc or or (bad) or or sbb mov jmp sub setno ljmp mov repz stc insb sbb loope pushf mov sub icebp inc lret hlt jne (bad) push dec mov scas aad popf sub lea jecxz stc loope or out aad test dec mov sbb add lcall inc imul iret mov cltd (bad) mov cmp rclb xor dec sub xchg int3 xchg cmp and out popf fwait cwtl ja inc add cmp lret jge decl sub pop adc jno dec mov jns push jl icebp jo stos adc ljmp mov or negl xor adc test push (bad) lret or lea xchg push mov lods negl test (bad) jb inc xor lds or or in xchg test int inc repz mov sub and popa pop xlat or xchg in mov imul mov mov mov imul fwait cmp or dec sbb (bad) imulb adc adc call test push cmp insl mov xchg sbb mov in xchg inc stc aas mov sbb je or xchg mov aas in aam pop add cmc ss push (bad) mov pop imul jl jbe xchg dec cmp scas pop out jecxz or data16 cmc xchg or ret inc add lds cltd mov arpl popa popf or jmp jg push dec cmp add pop adc dec or mov testl cmpsl (bad) test add mov out cwtl mov mov jb aam scas movsl xlat or mov pop mov mov xchg mov popf cmc mov sbb push das fcmovnu (bad) (bad) or mov lock dec cmp stos pop cmp stc and sub pop pop in nop sarb and test int xor sbb xchg xor pop and or mov int3 int3 pop stos outsb jbe mov repz enter push aam cld fisubr fwait (bad) pop jno cmp rorl in dec push xor nop xor repnz enter adc adc das adc xor mov aam fwait dec dec movsl idiv push ljmp mov loop stos jle mov (bad) aaa std jne push pop mov test arpl imul ja call or pop adc stos push lock in dec mov inc (bad) ja inc test xchg rorl mov pop sub inc (bad) cmc ret ds cs xor push xchg loop cmpsb loop dec nop jo mov mov sub adc movsl push jne push pop insb jbe,pn mov cmpsb mov imul ret ljmp adc cmp xchg push add aad les call mov ljmp jl or pushf dec jns fs jmp ljmp xor adc sbb pop mov lds mov (bad) xor addr16 js insl jns icebp stos pop test mov (bad) (bad) sub jno jo (bad) fldt add adc lret adc rol pusha push imul add inc fldenv pop stos mov je cs popa mov sarl mov adc sahf mov outsb roll cmp xchg and movsb lds in addr16 repnz roll in or mov or add cmpsl jnp mov sub or ja inc lret mov cld cmpsl xor add cmp aam push (bad) repz pusha add cmpsb mov pop or jo cmc add cmp pop mov cmp or loope shrl or jno xor idivl add (bad) or mov jae inc outsb daa pop cmp in xor (bad) jno cmpsl repnz cwtl jl push pop mov adc mov (bad) or lahf daa cwtl repnz sbb and add or jo imul sub decb dec pop push ret push scas ss (bad) int or and pop xchg test jmp xchg inc call cli push ret roll mov jne mov or mov cmp movsb or push adc into or sahf addl jb ss (bad) cmpsb shl (bad) mov sub cmp lods xlat fs (bad) out xor inc or pop aas call (bad) int xor dec aaa inc scas xchg inc or push lods pop test (bad) dec or sub xchg faddl cmp insl sub lods or push lock pop adc sub (bad) insl push or or mov or outsl or mov je mov js add jmp in dec fstl cmp inc (bad) mov pop adc aam (bad) mov jb jae hlt arpl jne or sbb leave je adc pusha cmpsb nop addr16 repnz fdivs inc sub mov add sbb or fdiv mov dec cmp cs popa int ret not push mov add push mov icebp and push fdivrs cmp sub mull and in adc mov mov inc or pop repnz lea mov repnz pop lret xor and jg aas movsl sbb lock negb mov dec sbb inc sub and lods add aad or jmp push sti pop inc push lret arpl add (bad) mov inc mov dec xchg push and or xchg cmpl inc or div out les leave pop ret ja cli xor lret inc xchg mov stos imul leave ja add or fldl mov sbb or aas xor cmp mov imul lahf jle (bad) cs scas xchg repnz add sbb mov fdiv arpl shl or xor mov adc fisttp loop sub dec add mov dec inc stos repnz aad mov adc sti cs or adc jne idivb push std (bad) faddl jbe cmp sbb imul and popa lret push jmp icebp fcompl sub or sbb sub out in mov pop sahf (bad) repnz xor xchg cmp ja (bad) fs inc (bad) lcall push add add int3 inc or sub or fsubs in pop ja cwtl sti inc bnd jmp sub lea fcomi add or fstcw aad pop (bad) shlb daa add mov stc jmp or pop jl dec push pop mov iret dec sbb adc into es jo mov xchg roll adc data16 xor sub adc insb dec mov xchg (bad) fildl pop mov push adc hlt inc sub (bad) mov mov ss add xchg cmp rcrw imulb test mov xchg out mov xlat roll mov mov mov stos lock jo sub adc nop xchg jecxz push mov adc paddw mov xchg mov dec cmpsl or dec jno adc cwtl xchg inc insl mov mov aas ret (bad) andl and ss out pop xor movsb fs add sarl test mov (bad) lcall movsb inc or jb (bad) (bad) mov jge dec xchg or jmp stc out add orb fmul xchg mov jnp fmulp cmp or inc mov or cmp sbb loopne inc sbb popa jae cmp in daa imul jle mov or scas sbb pop (bad) stos mov rorl sub sbb faddl or insl sbb mov add cmp inc add push and and pusha mov push jnp cmpsl daa mov or in cmpsb icebp or idivl hlt enter dec push mov mov scas or outsb cmp mov xor sbb mov xor inc out or dec mov pop test sub enter addr16 sbb pop insl es mov lret shlb fstpt fcomps mov sub or or adc stos xor (bad) negb enter mov and (bad) dec or out fdivrs mov sbb dec loop jbe push jb inc les rorb sbb jmp mov mov movsl jge cwtl jmp ljmp or jl mov add and inc fimul repnz and mov sub mov or fist or xchg fdivrl popa repnz xchg into lea sub cwtl shll addr16 les scas mov cli es sub mov scas pop xor stc in neg add pusha sub jno ss cmpsb push or (bad) jb roll ret out movsb or adc je (bad) mov jbe fmull push or outsl or sub xor hlt ficompl lods dec mov mov inc sahf (bad) jnp fadds hlt mov ds dec bound cmc out mov mov and adc int3 add into repnz scas cltd dec mov and xor lods inc sub mov jno jns sbb sbb (bad) frstor jbe lods push leave xor mul sbb enter outsb push add mulb add mov repnz loope stos jg or push into xchg and ss jmp aas sbb jae fbld stc jnp popa dec fsubrl fwait jns mov repnz cmp ss hlt movsb pop or shlb ds test je (bad) jmp and sub xlat add sbb or sahf dec cltd mov jecxz iret repz cmp aaa (bad) push pusha adc xchg jp inc icebp add cmp lock test lret (bad) scas adc xor jns cmp into stos dec inc sbb pop ljmp pop mov xor sub mov lods xchg enter and stc jg xchg pop dec and imul or jo pop xchg inc sti push xor adc aam or adc nop mov nop sub cltd and leave leave xchg add inc mov ret loop jecxz imul stc jo js xor fnstcw push mov std push mov mov jmp scas or pop subl push (bad) and movsl in mov add sar std sahf adc push or subb dec insb mov std or jl and roll or shr adc sbb add add sbb aaa mov pop dec aam sbb jb mov mov imul add xchg push add pop cmc lcall mov lahf or int leave dec or sti cltd push test inc fwait or lea push dec test cmp bnd mov fcomip mov call mov (bad) fdiv rorb insl loop (bad) xchg or xor jmp inc mov cli push mov dec mov cld clc xchg scas or xor push and sahf sbb (bad) ja pop jle mov add jp icebp sbb lret arpl loop test scas and dec in test js mov pop pop sbb loopne repnz das push inc xchg add sub inc adc ficompl mov adc xchg cmpsb mov or sub scas or imul mov (bad) imul xchg (bad) jno pop inc or fisubr test xor mov mov (bad) or cmp add adc mov insb sbb imul cmp int3 test bound add push gs add mov sbb mov out hlt mov or inc (bad) jo cmp (bad) iret pop cmp sarb or insb scas test (bad) jb jmp jecxz hlt jl push sbb rorl mov mov jp and (bad) and cmp or xchg divl shlb je mov fidivrl mov jecxz xlat add xor ja pop stc sub add pop cmpsl xor hlt jbe in inc sub fstpt pop or jmp decl pop test dec sti cmp (bad) lea dec or jne or sub dec in (bad) xor clc clc div jge jp xchg dec insb mov or mov insl mov xor push xchg test dec jg sbb addr16 mov icebp stc cmpsl mov les push add and add and dec mov dec or cmp pop or fsub (bad) out stos out fisttpll jmp notb add mov push sub pop (bad) adc mov mov mov xchg popa mov rcrl incb cmp outsl repz or and out ret testl mov movb pusha pop stc inc adc push (bad) in mov mov cs push fnstsw fiadd mov dec or out lods pop push or subl cmc xchg mov test cli cmc fisubrl (bad) aad test dec push or imul subl add hlt inc outsb add mov push test rcl stc and movsl popa les mov stos jmp or mov inc add repz lock sahf dec sub ljmp or iret sbb or adc adc call (bad) (bad) hlt push jns mov add lea sbb pop adc stos lock or or dec mov std divl hlt inc adc sbb pop mov add dec fcmovb mov mov dec jne mov repnz (bad) xor dec mov mov or push ljmp inc lahf repnz xor or arpl mov es lock bound cmc mov xor sub jmp test adc sbb dec cmp fxch scas popa jl xlat or adcb bound lret jns or cmp jno pop add mov mov or adc enter andl or dec mov aad clc sbb dec sub iret xchg addl out dec or xorl addr16 jp outsl mov xchg fdivrl push or in pop cmp sbb int3 push mov addr16 or dec or stos or jmp or cmpsb cwtl or adc loop sbb in push mov aas (bad) xor sbb lds ret leave pop cmp or push or int3 mov cmpsl jo lea xchg rcll or and lcall stc xlat out fisttp out fmull (bad) notb nopl ds cmp je (bad) xchg cmp or mov xchg stos xchg andl mov adc mov hlt and clc sbb or fistpl xor sub xchg mov imul ja jno mov iret or jle les xchg imulb hlt cwtl mov ds dec gs (bad) fdivrl inc pop inc test pushf mull push (bad) mov xor icebp cmc add aam pop dec pop cmpsb add fimull movsl xchg mov sub in mov test cmp mov bound add mov add inc movsb adc cmpsl loop dec stos rcrl stos jp or adc xorl fcomps mov mov out adc sub xchg push outsb cmc lahf push testb jmp xchg or rclb add jne mov jo test negl pop mov enter or cltd in xorl lea cld fstpt loope sub stos roll pusha stc mov mov mov lock test loope loop fsub into insl inc (bad) mov mov lods mov icebp mov in (bad) mov mov jmp hlt sub adc mov dec (bad) scas aam movsl cli ja jo test test or out and xchg pop sub sub ja pop xchg or add jns jbe lret mov repnz jmp push out loop xor mov in mov lss insl mov mov fwait cmp out popf jle sub sbb xlat adc mov shrl daa adc popa mov dec mov into pop cmp and sbb cld rcll or pop push test fwait push cmp out add (bad) cld clc sub dec (bad) repnz leave mull cmp (bad) and jno popf push out (bad) xor or jp lods push xor daa or arpl insb mov mov or ja jae mov or add das iret dec push and fsubp loopne jae mov (bad) repnz mov xor sbb adc pop fild andl dec test and add sahf add (bad) rcll mov es pop outsl sahf ja adc mov sahf push cmc mov adc (bad) push mov mov inc faddl sub sbb stos ljmp push and divb mov outsl cmovl mov mov inc add ret iret je lock push cmc jne movsl fs adc or test mov inc icebp xor sbb or inc movsb ds shl into sbb fimull in inc and out ss jo or inc std and push fwait cmp jmp cmp mov cmp xor jg mov and scas pop or mov adc push pop mov sub add xor sub shl fisub xlat adc xchg or jno inc stos shr push add sub add xor imul cmc push insl ss mov fldenv cmp lods cmp mov dec mov pushf pop ficomp rcrb inc sahf (bad) test cmp xchg in sbb pusha dec xor xchg sti fsts fild je adc ret cmpsl or imul popf shrl movb hlt aam aas push adc push jbe xchg test cs add data16 adc jge in ficoml mov mov fwait inc repnz cli sbb popa (bad) xor dec adc leave ja push stos inc dec or repnz nop dec mov pop mov pop adc mov (bad) lock sub add divl xchg int3 mov pushl ljmp sbb imull jo xor dec jmp sbb lods push jns notl (bad) test mov push stos jp sub mov mov push je push mov adc fucom dec jp (bad) dec or jp cmp aam sub (bad) mov out pop sbb and or repz fmuls dec lods nop shlb or into aad sub jne dec sti jb test mov pop push and or loopne (bad) cli xchg xchg loope stc cld lcall and (bad) lods in (bad) shrb ret shrl imul jp dec add pop add mov cli loopne dec mov repz adc or pop or (bad) in jmp mov cwtl pushf pop or test dec mov roll aad sub sar aas dec out lock dec push mov inc xor in adc adcl fwait inc or cmp or cmpl ret jno xor (bad) dec dec xchg repz or test jmp fs lahf or or fadds aas mov xor sti cmp mov mov cld test adc std or adc cltd and enter adc out inc jecxz mov pop test sbb mov mov std cmc xchg mov fstpl jbe pop and jl push cmp sub push mulb (bad) push or inc test adc xor pop pop enter dec or jae out mov adc cmp gs std decb xor rcr stos (bad) pop mov adc jo cmc inc leave or dec inc push or jne popf lods and scas push insb mov lods mov inc (bad) mov xlat lods or mov inc stos push pop daa or or dec and fild (bad) lret pop or mov jno fwait cltd lods aad idivl xchg mov sarl fcompl scas sbb push lret (bad) sbb les or (bad) jnp dec adc out dec pop xor out icebp xlat sbb mov dec leave jp pusha loop mov xchg lods insb mul icebp bound add fisubl push pop fimul das out add and or sub nop jecxz xchg adc cmpsl inc icebp test pop or lcall loop push (bad) out out lods leave sub nop test les not mov jo js repz ret and rcll or jno add (bad) jecxz clc cmp int3 xchg push lock or (bad) cmp mov pop fidivl aaa sub aas or inc inc fcompl addr16 leave inc arpl mov sbb inc decl mov mov or call jnp mov adc repnz imul jmp daa push in or leave aad jae or call sbb xor sub xchg or out pop insb loope sub fnstsw je mov fwait pop neg dec call add adc icebp xchg dec movsb iret sub inc sbb hlt movnti cmp push clc cmc fsubl xchg xchg adcb or sbb or push outsb (bad) lea loopne and aam fmulp and in cmp xchg rcrl mov cld jmp pop jp mov dec xchg pop (bad) adc and push or add in xchg scas mov daa (bad) repz and (bad) inc int int pcmpeqb adc xor aas mov hlt mov push in jmp xchg cmpsb (bad) popf dec rolb (bad) fcoml lcall pusha pop or adc loop rcll fildl fistpll sub pop sub in or jle or add stc iret cmp or jns and je and cld cwtl mov jno pop sub aaa loop jnp xlat mov (bad) mov jb adc loope es divl or movsb sbb movsb mov sub adc pop jo mov mov lahf mov aaa sub sbb mov mov dec cmp std and dec pop mov pop ljmp jbe,pn fistp int3 (bad) fcmovbe mov xchg mov mov push daa sbb fisttpl shll stc push out leave push out or jo clc or xchg jge je roll xor or mov out jb or adc jae pushf or outsl xchg mov dec push or or jno leave popf pop int das or inc push out ds aas add sub pop cltd mov (bad) int3 hlt or jne pop mov hlt mov ficomp add or dec and frstor movsl fisttp pop fidivrl mov mov out pop or push jp pop adc sbbb dec mov cli std add aam scas cltd push dec mov dec xlat and cmp push mov hlt (bad) cli inc lret jns out sbb bound jne leave (bad) outsl repnz lret aam test jle sub ja negb sub out (bad) mov or sub pop pop ret and cmc mov push inc rorb push add mov daa xor inc xor repz and lods fisubrl xlat and mov or dec jp cmc or stos dec mov mov pushf les bound jge or sub xchg or aaa or lds outsb mov xor sbb (bad) and in ss xchg bswap in lahf or push in (bad) xchg loopne or int3 test add ficoml xchg or jmp mov fisub mov test clc ja movsb lock popw mov xchg or pop (bad) mov loopne and flds sbb jl scas fmull mov cmc mov xchg cmp enter adc leave sbb aam movsl cmp add adc inc lahf mov mov push ret fdecstp jb mov out xor lock loopne loop icebp hlt cli imul leave push jmp bound or sub sar repnz cmpsb ds cmp cmc jp sub cmpsb push or jo in lea jnp jae push or sub or mov dec repnz lret cmp imul loope int3 pop pop into sub sub add jg pop lods (bad) jae inc hlt aas inc sub jne mov cld add and jno xchg xor out hlt fisttpl negb cmp jne sub push and repz aam pop addr16 test cs repz mov or adc loop xor add mov loop movsb es lock push mov dec xchg push lret (bad) std (bad) mov xchg push lret in sbb mov stc jecxz out jo add jns scas mov xchg (bad) (bad) test adc repz sbb fdivl stos fmull lret mov mov mov test xor mov into pop jno std or inc jle (bad) xchg imul icebp in adc or (bad) pusha repz mov xchg loope or lock push pop mov jae add fsubr mull mov jno scas xchg jb pop fsubrs dec mov test and mov jno mov in cmpsl scas (bad) jb dec xlat mov rcr cmp sti ljmp into daa fstpl pusha das xlat sub mov jno bts pop pop hlt insb add pop or popa dec jmp dec sub rolb push adc call mov outsb mov mov imul mov test hlt xchg inc and dec scas push inc repz mov dec cmpsb lahf inc or or dec mulb sahf lods jnp pop pop cmp fistl (bad) cmpsb xor aad idivl cli (bad) fdivrl dec jbe movsb sub testb and push mov sbb lock popa nop dec dec sbb in ret loopne jl xchg mov push subl repnz cmp or outsl dec fs jae sbb xor mov cmc xchg (bad) dec in rcrl sbb (bad) push jnp (bad) repnz ja sub sbb test imul xlat stos jl or and cld or (bad) into jmp mov into shrb fldenv ret xor int3 mov inc into aam or es dec xchg jle hlt inc xchg dec add movsl xor inc aas aad lods mull insl or cmp cmpsl mov ljmp pop mov leave jno adc mov or and lcall adc jb leave scas lret adc adc into or loope add dec test rclb cwtl or mov out notb mov cmp inc out mov mov xchg mov lods fwait jbe pop or sbb nop or add mov lock cmp aaa stos (bad) rorl test (bad) call imul cmp or gs dec xchg ljmp adc or enter shlb sbb or adc fstps wbinvd into insb jne mov mov mov outsb (bad) and xchg stos or sbb cmp ljmp xchg jmp leave mov mov call inc add dec inc sahf pop dec (bad) aam and cmp arpl stos xchg jbe out inc or in or mov sbb jecxz out push and inc scas xor fisttp push (bad) int3 testl dec fucom out xchg push movsb xchg adc xor rorl xlat lock push inc sub insl (bad) push fimul popf inc jns jle push dec add loope xor mov lcall push fdivrs or (bad) sbb stc push xchg jle cltd add push mov or sbb mov (bad) mov pop or push or mov sub js aam sub inc xchg and idiv or leave fldt lods pushf out pop dec sti stc mov mov sbb push mov fmull cltd shll xchg inc push inc enter push push xchg imul mov mov pop xor sbb push or lock and repnz jle lods push cmpsl cwtl or push dec les mov test mov add aas or data16 mov adc es dec mov lret ret xor fstl ret aad or dec gs xchg or subl jbe stc in ret push lahf or ljmp adcl into sub or add jnp inc pop sub lret stos or cmpl and xlat push mov dec leave inc (bad) sbb std in pop out or rcll sub push inc dec xchg mov pop (bad) lret out fxch dec mov jp (bad) or mov repnz std adc or and mov cli cs push icebp jnp aam or or cmpsl shrb lret add in push test cli or push push mov lods ja pop stos cmp divb in (bad) cmp sub imul adc shl mov xor inc ret (bad) fcmovb push lds mov loop fsubrp aad sub cltd mov in imul iret jl gs daa imul cmpl cmp add jecxz jae decb dec push sub pop sbb loop fisubrl loope xor mov xchg ds popf mov inc inc cli loope test divl or jle add or adc add lds cmpsl jns cld (bad) fildll xchg je xor in jmp push push sub xchg jle add imul or lahf gs sbb arpl cmpsb mov jecxz insl psrad sbb inc out pop ret scas or mov xorl cli les pop sarl pop sbb sbb popa add cli mov push lahf rcrb int xor pusha xor jnp push cmp add push outsl pop inc inc arpl pop aaa movsb rcrb jns pop add out push rolb add out lods or in aad add cmp movsb or cmp sbb inc pushf mov lock and icebp or jo adc in addl repnz xchg xchg ficoml or fildll arpl fmul inc icebp cs adc addr16 mov dec add mov in sbb stc xor xchg xlat mov xchg add push pop imul cld dec (bad) icebp or pop pop push aaa add rcl lret sbb pop mov dec mov jle in sbb movsb dec in jle in lret fstps icebp push or ficom or in jno xchg xor icebp mov (bad) pushf pop mov dec cmp ds dec pop clc inc lock jbe das aam lds mov adc divb xor imul push fidivr test push inc pop xchg mov adc andl xor in test in dec add insb pop pop out push or pop xchg or jp mov cmc xor inc xor or sti cmp lret imul mov repnz fcmovnu xchg lods or (bad) ljmp or int3 xchg mov dec clc loop cmpsl dec pop divl jl xchg cli jg or xchg aas xor pop out jmp inc not test inc and mov dec cmp inc push mov mov adc pop pop daa pop jecxz cltd jae sbb inc incl sbb js lock dec mov or ja push adc (bad) jg mov or push jno mov addr16 xchg in scas mov push int inc jge (bad) lock pop or push xor ljmp fnop pushf pop sub insl lock push fidivr add (bad) in scas rclb pop cmc dec stos dec dec or repnz mov iret hlt orb mov pop lock cmc push add jecxz pop push outsb mov cmp jg mov mov mov sbb jp sbb pop jmp push (bad) jecxz scas or (bad) imul int movsb repnz icebp jno lret (bad) stos mov or xor or dec (bad) fwait inc xchg cmp mov or add dec div mov gs sbb pushf dec out and xor jbe jo or jmp popf lret dec rorb and or outsl rorb mov cwtl test fldt mov or std inc rol inc adc mov hlt and in scas dec pop or mov push add sbb inc and inc xor or scas or fild js cmp gs shll sbb cmpsl fnstcw mov or outsl cmc mov pop sub (bad) repnz bound imul jecxz or (bad) das xor mov (bad) iret xchg or xchg dec mov sbb push jbe cli jns idivl sahf dec bnd push push mov daa xor fmull jo jae xor mov lods xchg es sub test popf fistl fdivrl dec fimull movsl sbb stos jne jge and sub dec adc int or adc or iret mov or mov aad inc test dec std test outsl sbb cli hlt mov jne pop dec jno xor adc xchg mov push cs xor sbb push add and sbb mov inc jo mov jmp cmpsb mov mov cld js lds or xor rorl cmpl pop or mov push negl mov mov scas push add idivl in inc (bad) clc sbb push imul fdiv shr xchg lock xchg sbb or pop dec (bad) pop movsl cmpsb adc push bound je lret divl loope (bad) mov jns mull xor or addl pop dec cmc out addr16 cmp adc fwait in test inc mov (bad) inc leave or pop rorb pop outsl mov loop xchg lea stc (bad) icebp cmc test jne (bad) push mov add cmp cli jo (bad) jle lret dec jae jae popf mov (bad) ljmp cmp or sub jmp jns jecxz scas push sti mov push imul adc popf into adc es scas int cmp adc pop cmovp int3 test test or sub rorb xchg and or push out push jecxz test in inc ficompl cli pop sbb aaa mov dec das jnp or aam mov loopne or fldl jne cwtl pop mov push scas sti insl dec sub xlat cmp lret mov sarb mov repz mov daa or cld inc mov (bad) negb and lcall in jl add mov jbe data16 enter pop (bad) shrb dec or clc push push scas sbb dec mov ds jae call insl and xor mov cmp out add testb in outsl test jmp incl and mov inc or sbb dec or or fisttp and fldl adc add leave push sub cli jecxz out and out xor cmp lock sub insl and dec mov jae inc adc jbe sub mov cmpsb call jo rorb cmp daa cwtl xchg fstpl mov mov sahf dec loope adc repnz cs jns lcall jo jp imul push out mov fs inc pusha adc (bad) stos leave hlt call pushf test outsl ret push dec lea imulb das adc and push jnp xchg adc mov add scas fdivs adc (bad) andl jno cmc je negl or into dec xchg lret sbb inc jb mov (bad) mov ja insl push push cmp imulb xor ljmp outsb xchg inc (bad) mov mov cmpsl xor es faddl int3 insb cmp adc stos sub (bad) icebp insl popa inc loop stc and cmp xchg cmpsl jnp daa insb mov mov (bad) mov data16 xchg xchg xchg pop or icebp pop into mov cmc xchg xor fs push pop adc mov push mov mov mov leave mov jne push loop jno cmpps mov push popf leave stos adc xchg or dec dec aam mull fisttpl mov ja fsqrt jg mov or cmp mov scas pop test pop idiv cmpsl adc pop in mov dec loopne cmp (bad) xchg and pop aam xor sarl int lahf add scas adc mov cmp push sub int3 popa inc mov adc mov lock inc repnz sbb and cmp cmc cmp jg sbb and test or dec sbb fistpll jns adc aad divb cs out imul mov bound cmp mov (bad) sbb push mov or loop sbb insb (bad) mov fdiv and and (bad) or out sbb xchg and outsl (bad) mov data16 pop lock xor push xchg mov rcll test sarb or mov pop dec repnz cs adc imul lds mov jl not loopne in mov lods jne loop negb cli dec sub push fcompl int add sbb pop (bad) sbb ficompl or cmpsb cmpsb mov xchg lea je cmpsb dec aad dec sub popl xchg hlt jns cmp pop adc dec les push loopne and pushf xor es popa aaa adc repnz icebp fsubrl cmp call sub stos test adc jp lods cltd pop jle jo cmp ljmp xchg xor icebp mov aad mov push pop adcl (bad) mov add cmp push push pop mov add adc mov cmpsb mov enter rcrl jns shlb out dec ja insl adc sbb fsts jne into sub dec out push neg jns insl xchg into pop lret push sbb mov aaa mov sbb xchg fbld dec es bound cmpsl mov lds mov inc addr16 jle and (bad) je and stc es enter xlat dec daa mov fidivl in inc and mov adc cmp andl and movsb jge jno adc jbe jecxz dec cli dec (bad) sti pop cmpsl jge ret inc stos push dec push mov test pop ret jo and shrb cmp insb or adc jne or push (bad) mov mov scas imul add shr push popa imul std inc cmp push loope mov push pushf pop outsb mov roll imul jmp cmp dec jbe xchg inc push (bad) pop cmp imul cmpsb idivl xor jo sub ss adc cmp or fnstsw mov neg xor aas mov (bad) xlat rclb mov out sbb sub enter mov mov pop pop or push outsb shlb aas mov pop sti (bad) (bad) into pop imul mov addr16 outsb dec ret dec iret xchg mov pop cli aam ss or xor enter or mov in fwait push adc mov cmpsl repnz lret inc scas jb mov add mull insl cmp pop out movsl xchg in push fisub and and repz mov mov or test (bad) jmp sub mov (bad) xchg dec stos cltd or mov in mov cltd or cmpsb ds or pop sbb xchg data16 adc xlat cmp bnd add loop jecxz int push cld pop daa adc adcb adc out and scas jbe cwtl iret pop mov or or sbb sbb jne fcmovnu mov or push add subb test push mov mov jbe mov out sub jle or xor xor pop pop aaa dec mov popf cli mov test fucomi cmc sbb out leave daa inc xor xchg adc dec push push cltd mov adc roll hlt cli xchg js gs xor inc (bad) push lock ss xor outsb aam sti repnz rcl or mov (bad) jle mov mov xor xor or scas inc cmp (bad) mov (bad) insl aaa lods sub pop mov mov jns daa cmc push inc xchg mov lods inc jp add bnd xor sub mov loope popa insl mov (bad) aaa int int3 lret xlat test jge push cmp jnp push (bad) stc outsl push sub test scas frstor aam dec hlt pop je dec push roll mov outsl lock ret andb lock or cmpsb les ss dec fs mull mov dec cmp cmp jo sbb fdivrl jg mov repnz mov fistpll jno jge imul sbb and icebp mov daa dec or jo fisubr test adc or movsb xchg add mov push mov or mov sbb sub cmp fwait std xchg outsb test in xlat sbb cltd add fs jns lock sub jp mov fcompl mov test mov imul fildll jmp mov rol mov inc inc mov in mov test dec push ficomp mov (bad) js sbb push outsl xchg pop mov cmp xchg bound push adc lret std jbe lahf dec push dec or pushf dec push mov lock push add (bad) push sbb notb sub adc sbb jmp in into or or mov lock jmp idivb (bad) roll push jno mov mov push call mov cmpsl mov mov jecxz (bad) das lahf sub push sbb xor mov or loope adc imul enter and test nop sub sbb xor cwtl fwait adc or mov mov or sahf outsl add pop in push popf pop mov imull mov jecxz pop dec add cmp out js (bad) fcomp sub shlb outsl mov push mov sub das pop inc or pop ja paddusw aaa sbb inc jge (bad) std mov rolb daa pop mov addr16 pop jge insl mull push cltd sub daa pop in addb je aas add insb sub mov vpshlq fcoms jmp arpl sub pop inc into (bad) push or add jno ljmp xor xor (bad) sbb jg in aam jge outsl mov sub stc rorl lcall jmp push or push jb loop fst iret shrl in aaa lock ret stos repnz in call mov mov out pop dec mulb or hlt xor dec movsl insl aam or (bad) mov mul dec and mov pop cld addr16 adc clc leave push ljmp xchg aaa pop inc les dec loop fldt or mov out in xchg and cltd pop sub lods insb ja or (bad) cld dec lock lret rorl fsubp aad pushf lods notl daa pop test or movsl jg inc push aam and test sbb xchg dec mov or mov pop (bad) into mov es js fwait leave sbb jge cmpsl mov loop dec push addr16 loope push jmp mov rcr mov dec sbb test mov pop dec mov add int ficompl cltd es test icebp cmp sub dec add adc rcl insl stos clc push cmpsb dec push jge in sbb enter adc add jno and add call push add mov (bad) popa cmc add es movsl xlat add jb bound inc adc xlat loope pop arpl data16 push lcall xlat add mov ja mov inc xor xor cli pop inc (bad) out dec stos movsl ds rclb icebp roll add cmpl int3 jae mov pop inc cwtl lret leave push repz daa xor out sub add add add leave adc mov rorb loop inc or jl fs iret je and inc fisttp dec (bad) dec or clc or pop xorb in mov fdivp or xorl scas add xorl pop or iret adc es cltd (bad) sbb rol test aad mov pop xor repnz addr16 push xchg lcall mov int3 mov push xor inc pop dec (bad) dec sbb orb call cmp or mov sbb xchg repz jo xlat or or scas test (bad) dec and sub out (bad) cmp adc andb sub or push out cltd add dec stos pushf adc jbe stos mov pop dec or push xor cmpsl push mov adc mov mov inc lods lods xor aam aaa sarb or push mov out leave stos adc repz sahf cmpsb gs out xor dec sub popa aaa imul ret pop dec xchg jg pop or int3 push xor mov mov and pushf add (bad) leave (bad) add pop pop iret jnp jbe fisubr push push rcll insb in sbb hlt inc mov cmp popf xor add push jge incb int pop in and inc out pop dec pop or mov jge ds adc or sarb fs or pop adc jmp aad jl or and push adc shrl mov inc or cmp dec stos cs jbe loope inc out jno dec or fnstcw inc push loop lret call or dec aaa mov mov mov lods (bad) xor insl push sub add jg jge or xchg sbb or popf xchg jae pop fnstenv or cmp test jge (bad) (bad) jnp jns idivb jbe cltd push mov jle hlt mov adc push jmp inc jo or inc pop jne push fimul push out cmp stc inc sar mov inc xor out mov clc or loop,pn popf sahf or imul fst (bad) enter mov leave xor aam sbb pop jecxz and cmp lods rol sub or loope mov lahf mov and rolb jne in push jmp aam mov fs sbb dec cmp addr16 mov sti loop daa sbb sahf cmc neg dec jmp lret loope xor sbb dec repnz mov mov lret inc pop sti dec ret stc and jl movsl mov sbb lahf mov dec movsb sub cli or or shll cltd push adc fist jae mov lock inc xchg jg stos adc (bad) or cmp push addr16 mov aaa mov jne pop inc cmp mov add sub lahf lods lock imul jb mov imull je jle push xor (bad) jl (bad) (bad) aam divb mov pop (bad) out jg int sahf sub push push loop insb stos push loopne sbb jecxz fist dec inc xor xchg imul (bad) rcrb xlat cmp insb divl and adcb psrlq adc dec fisttpl sub lock loope sub jbe dec es mov pop aaa and stc inc push jnp mov mov movsb pop xchg daa mov lods adc in jno sub push and icebp jbe repz aaa mov and loop loopne dec xor test loope inc outsb idiv stc mov xlat insb arpl xor mov cmpb or shl js in add adc sbb in sarb jmp (bad) loop dec push mov insl xlat pop push jns add pop pop mov push imul mov xlat ds insl stos mov das mov push pop jo and jl lcall jnp cmp mov mov test insb inc (bad) std adc xchg adc xchg lret cmp iret or xchg addr16 cmp ja adc scas pop push pop test repnz or clc mov mov or pop insl mov sub icebp cli jle mov mov add add addr16 call sbb call mov adc icebp test (bad) cmc bnd imul jmp sub xor adc jno popf leave cli jbe push fidivl mov dec pop jecxz cmp int add out add lods or repnz repz mov cmp test dec imul inc inc mov sbb mov subb dec (bad) ja aad pop push mov jmp mov add pushf mov sbbb dec adc jne adc jl popa adc add cli in dec std repnz xor push pop test inc test and add cmp pop adc push sahf add dec xchg mov adc sub sbb mov movsb out sarb ds jo clc xchg push popf iret cmpsl aas orl sbb idiv mov dec bound pop mov inc mov mov movsb xchg xorb jo add (bad) lods mov adc aas mov cmp sbb or cmp push jecxz jns jge xor mov and jge jo dec in iret jle cmp test ljmp jns inc sub les mov (bad) enter test jge sti xor mov add loope dec or iret cmc xor inc cmpsl pop ret popf or insb call ljmp dec aad sub xor add xor sub pop dec mov not adc push jge cmp ret dec mov leave (bad) mov jnp push jns adc mov aaa fimull and push adc lods mov jmp adc rolb imul jno out xor cmpsb push cmc imul dec xlat pop lds inc gs push fiaddl or adc and dec mov sbb stos (bad) sub js cmp ljmp rcrb or or pop (bad) dec movsb adc punpckhdq (bad) pop dec out aam fstps aas fcompl hlt or pop mov add push ror aaa mov movl inc sub (bad) loope mov lods sahf scas fsubl pop mov xchg pop fistp lods mov add mov push dec adc adc shlb adc xor inc adc lea stc jnp repnz mov push xchg fwait xchg in insb cmp addr16 mov mov xchg ret cmpsb insl mov stos mov dec std fidivrl out leave xchg sbb mov pop cmc (bad) jo mov mov push add scas aad push push popa fwait mov jns mov mov loope push cmp mov cmc mov push push out cmp ja mov lods add clc pushf mov mov std jns jmp les stc (bad) test icebp adc xchg sahf cld sbb pop shl movsl inc xor xchg mov mov mov les or out dec adc or xor lahf mov adc push mov mov (bad) repnz jns jbe insl scas pop sbb scas pop jns imul test pop hlt leave mov test or aas add push in pop xchg jmp push or inc js pop push incl sub xor cmpsb or aam sub push inc (bad) fucomip lods dec mov fimull lahf cmp pop jecxz insb or icebp gs lret mov imul cmp jg mov xchg or js sub cmp imul xor dec xlat insb or push inc sbb xchg daa (bad) cld sbb les mov lcall js mov dec enter xor dec stc stos ja jl leave outsb mov add outsl dec jae pop stos xchg jnp jl xchg mov lock orb sbb stos jbe loopne or push lea (bad) xor std bound cmp xor (bad) int push lods add idivb sub xor in cld call cmp mov cwtl and jbe mov jb push into xchg lock cmpsb int3 mov je inc cli test mov fbld sbb lds cmpsb jmp or fdivrs pop cs or push iret mov jge add add movsb (bad) mov sar cmc inc cmpsl adc dec xor push lahf jecxz das cmc insl mov mov inc xor in pop dec jb xchg adc jns jno and aad jmp push rcr sti add mov or xor inc lret repnz mov mov test test pushl sub pop mov inc je or cli cwtl sub ret lcall push xchg dec loope cmp test jmp sub pop jge (bad) mov scas cmp push int in mov fnop xchg and xor icebp inc call aas mov imul mov mov add out sbb loopne xchg or ffree sahf sub aad pop pop cmc mul roll decb mov mov (bad) xchg stos mov xchg (bad) pop into inc pop (bad) xchg pop or jnp xor add cs push xchg push push push cmpsb push mov push or jno mov or ja push mov mov mov xor or pusha or faddp test jb mov sti in push inc pop lret je movb pop cmp (bad) jmp or in sbb jae or mov aam loopne cmp jge and inc leave xlat dec and ljmp sub aad push mov (bad) jge cmp and or imul cmp sbb dec loope pop sub sub lock adc divl mov dec lret sbb loope xlat sbb (bad) fsts scas daa sub jne push or push loopne lea scas insl add (bad) fimull jp lods fisttp mov aad jb int cmpsb out test loope outsb in imul std sbb imul test gs jp jg (bad) int3 adc fmul popf mov jg mulb adcb or fnstsw jne mov or aaa xchg push mov fnsave sub xchg sbb bound iret popa loopne dec mov mov xchg loope jle es out std cmp sub ret pop cmpsl xchg into pop leave ss test fwait in inc xchg cmc xorl push xchg adc (bad) sahf push jnp adc ja dec inc shl xchg cli mov mov push cli xchg push pop cmpsb inc push pop aad adc sub pop jle insl sub pop xchg outsl ret aad enter push flds in in cs mov popw test lea push sbb test jno jns add mov shrl in roll jbe sbb mov pop out pop gs mov ret mov and push and jg dec insl call (bad) mov adc add (bad) inc sbbb fwait or cli mov (bad) mov push js in pop jbe fwait jmp stos push jno mov dec lret out cmpsl or in outsb ret popf ret (bad) adc stos lret cmpsl jns in je lcall repz pop test scas push stos in add inc addr16 mov out hlt xchg mov inc mov test jns movsb dec (bad) mov scas enter lods inc test add inc mov adc dec inc xor dec rcrb or xchg in cltd ret push subb mov test mov int3 or sub add loopne dec jmp bound push mov ss les add test adc xor js pop push mov stc push jbe hlt and loope mov mov enter mov cli cmp test push imul sbb mov shrl adc ja stos push xchg mov sbb jle pop jne mov mov mov outsb es or xchg (bad) push popa pop int3 insb add gs sbb dec je or jb sbb cld dec adc sbb shll xchg inc call jecxz movl test pop mul stc test adc push jno jp xlat fildl xor aam adc ja in push jae lds pop rcrb (bad) stos dec dec leave or (bad) mul mov lea les inc xor mov xor mov lock stc cmp push popf popa arpl dec aam lea xor xor mov rol push das adc or lret mov stos add lret or mov cmpsb lret rcl aam xor test outsl push sbb ficoml xor xchg jle aam sbb fsubr stc lds (bad) imul fcoml mov rcl adcb inc mov jns popl js mov xor bound fwait aad test je jmp add dec xchg and sbb (bad) cmpsb pusha (bad) popf mov mov push repz mov inc add pop loope lock cmp or sub cmp dec outsb pop repz jb (bad) and sub cmp fwait mov out (bad) call fimul cmc mov xor dec xchg imul fistpl mov mov add or (bad) insl les jp or pop push adc mov cmp mov ficompl xor sbb aaa mov push int sbb leave pop mov or ds jmp in or pop push int3 out pop movsl repnz cmp and inc sahf dec cmp cmp std in xor jmp dec dec hlt mov pop lret sti push popa dec imul dec loop or inc add or mov cltd sbb or dec pop inc fcompl std dec nop stos inc cmp fstpl (bad) mov popa jecxz outsb fisub jne mov or jmp adc push leave mov inc in or bound add pop out lahf push xor lret cmc mov xor jb or pop mov in lret push sbb pop notb dec sub fldt pop sti push repz icebp out jg or pop push push (bad) popf mov lcall mov adc ds fldl adc push cmpl psubsb lret mov ljmp pop cmp dec push inc or fwait ja or xchg or lods incb mov fwait les addr16 or bound (bad) outsb or stos ds or mov add cli mov fwait leave leave push mov aaa fnsave and sbb fdivl sbb out mov cmp jne dec divl lahf inc mov lods or leave (bad) lock fimull jnp dec je ja push and sub fstl (bad) ja push jecxz out mov xlat mov sub jle mov pusha xor loop push push or push gs or xchg mov std xor data16 aaa jl inc mov pop and scas (bad) cltd (bad) out cli flds cwtl sub pop imul dec fwait pop sbb sbb ret push adc call test dec lods add sbb or clc add xlat ret sti mov dec daa adc jae and xor sub pop fsin jnp pop rcrl popf jg flds icebp mov mov pop ss and ficoml mov jmp xchg in (bad) jmp jmp add out adc test dec inc pop bnd xchg mov cmpsl daa fisttpl mov mov decb shlb icebp xchg mov mov fsubrl cmp ficomp ret sbb xchg (bad) mov inc jb outsl dec (bad) sbb movsb dec addr16 or mov pop pop and sub insb mov lock xchg insl pop push loopne fsubl (bad) cld xor push inc loope mov insb push dec cmp adc adc mov push sub sbb or dec push inc or pushf dec mul movsb (bad) mov mov shll push in jle ror sbb xor loop sub stc call in lahf pop setne mov inc sbb fs out mov mov sub ss and sbb push adc xor inc add jle loope cli jmp fnop jecxz into and js dec ficompl (bad) push pop or in in adc pop imul or es (bad) out push sahf and rorl sbb ds push mov (bad) das popa jae fst mov ret loope mov or sbb add pusha shrl aam sbb and and shlb mov adc inc test push or das xchg incb cmp lret pop daa xor aaa xchg jle or inc adc cli adc loopne xorl imul sub jp push pop rolb jmp lock xchg jmp test in or sub nop cmp cmpsb cltd sub xchg add stos fdivrs das call es frstor push jmp cmp jbe jns mov fldl2t outsb add notl inc xchg into push and loopne mov or jmp std (bad) repnz lret push (bad) rcll (bad) fisub or xchg inc std push jo adc rorl test or push mov xlat repnz sub rcr pop in mov xchg test mov pusha mov sbb adc sbb lods aaa or xchg rolb repnz mov jmp rclb (bad) dec out jae or in lret (bad) ds sub cmp adc mov ljmp into out xchg or adcb dec cmp adc pop pop xchg push or call sub or icebp (bad) shlb clc sti add out pop lock sbb rol pushf xor jns mov mov or add mov hlt push fsubrp sub or xor mov pop iret add scas out aad sbb stos loop in mov push jmp nop out stos jl and movsl xor pop (bad) sub rorl (bad) jae pop clc or fisub cld cmc and loope dec dec push adcl stos fimull imul pop in mov adc test push inc xor or mov lock (bad) daa push or mov dec aad les push sub js xchg or (bad) repz sub pop sub or pop or cmpsl push pop or xlat (bad) dec (bad) imul pop pop (bad) add dec (bad) jbe dec xchg mov and jecxz lds mov movsl inc gs test insl leave jno pop ficompl not pop hlt in sbb divl scas popf ja leave push add mov into mov and dec push or or leave sub mov aaa pop cmp add ja push ja or add repz jmp inc pop jb add enter jne lods pushf cmp mov add pop or adc or sub out xchg ljmp and cmp loope icebp lods daa mov in stos and mul or push sub rorb aas dec testl mov imul jnp mov fidivrl in negl xor adc mulb jo lock add or push test push mov js dec out jb test dec pop negl loope enter and pop add mov test loopne aas or clc outsb jo insl movsb or fcoml push and rcl mov nop outsl je arpl fdivrs or xor mul lock jbe mov rorl inc mov movsl nop out lret push mov iret fsubrl lds repz xchg sub sarb add or std xchg ljmp jecxz lock int repnz inc adc or cld inc repz leave push sub cmp adc or cld pop test lods (bad) or insl sahf xchg add paddb mov push divl leave inc dec add or dec pop jmp cwtl divb push stos repnz push outsb insl bound push and or adc inc or push movsl sub fidivrl imul aaa in push push push (bad) arpl pop jno dec enter aam and rcl add inc add sub rolb add test js je loope push cmp aas add mov adc stos in mov daa jp inc adc and mov call push sub sub adc or dec and cli jns add cld add enter mov pop aaa sub cld js test xchg dec dec dec inc sbb lds rcrb imul sbb fild jnp jle push cmp clc test std (bad) sub (bad) call (bad) lret loope in stc fsts aad push repnz lods out lea out xlat push insb (bad) or test mov out and sbb daa jle inc rcl cld xchg dec ficomp leave xchg sahf es adc push outsb mov mov aam jg push out iret push mov inc es mov dec and or ljmp bound fcomp jge cs xor aad stc sub iret es (bad) test or push fucomip bound in (bad) rorl popa dec adc mov cli sarl dec pop lea adc sub inc shl dec pop push or lcall rcll adc test or sub add insl or pusha ss dec mov lds rorl daa aam pop test int cmc xchg xor ret jo out pshufw movsb add out jno pop jns in dec insl lods pusha mov (bad) std out lock xchg fiadd out cmp and push ss cmpsb mov rclb mov push pop lods outsb xor lea push dec or push (bad) xchg fwait jmp loop std mov fwait (bad) mov xchg repz mov movsb movsl pop imul lret jne hlt pop sbb adc mov jl into xchg leave xlat xor scas mov or mov pop out lods in leave push xchg push inc rclb lods mov jle sub and xchg (bad) jp sub das mov popf push inc sub push bnd lret pop daa adc (bad) (bad) cwtl (bad) cmc pop push add ret push dec cmc es rclb or mov sub nop dec jne inc outsb push lret and mov jg or adc lcall mov imul addb (bad) mov xor (bad) dec mov test cld adc jecxz push sub jmp js or inc xor and jge aas adcl add mov sbb push idiv inc xchg lock ja repz lret fdivs imul sbb lock outsl pop xor or pop mov cmpsl inc or sbb or cli xor scas test daa sub mov ret or out jmp or je bound or ror inc cli or mov (bad) wbinvd loop push push (bad) outsl fstps sub dec and fsubrl xchg xor add test shl dec pop or jbe push xchg mov jb cltd jo mov ds mov in mov outsb incb imul cwtl popa inc lret sti sahf lcall repnz stos jmp or mov dec fisubrl inc ljmp adc xor mov lods push dec (bad) xor sbb adc inc lock arpl test sbb inc cmp pop sub dec test adc fistpll or scas dec sub or sbb or cli mov outsl cltd lcall xchg or imul fstpt and int3 ds decw int mov sarb mov bound adc mov nop fwait and insl imul (bad) into int ss sbb or jmp or adc in mov jp out aam and in cmp add pusha or aam out frstor and mov daa pop jecxz inc sbb mov into cmp add or lret mov and (bad) or xor insl xchg dec or (bad) iret icebp (bad) mov pop popa lds out dec dec or xor mov or pop lcall iret incb fidiv pop adc add sti mov push int3 repz cmp mov loop cmp lods fs and xor cmpsl arpl push dec add (bad) fidiv test (bad) jle ja mov pop cmp push pop or negl loope arpl outsl or inc add or fs xor addr16 xor pop dec sbb xchg int negb dec stos mov shll dec xor std cmpsb arpl sti ds dec cmpsl ret mov sbb fiadd movsb sete ss mov in enter xchg or iret sbb cltd or xchg popf (bad) jmp out sbb cmp cmp cmpl xchg shrb cmp pusha pop dec jne pop enter push pop frstor and icebp or xchg test dec daa jns idivb (bad) aam je ror mov loop (bad) jae and fcmovne mov pop add xor mov inc or pop (bad) xor movsl or mov mov out or xchg and rcrb lock sub (bad) jmp push xchg dec out and xor cmc shll push inc or out or movl scas xor inc push mov jl stc mov mov rcll pop push (bad) or aas add cmp sbb fldt push xchg mov popf inc sbb pop push dec movsb xor jne ljmp mov mov imul mov xchg dec ret cmp sbb iret dec add jle jl in xor jp and mov mov mov push std mov ljmp cmp add xchg orb adc lods dec or in lock rcrb aad pushf xor jns or test inc mov das pusha pop pop pop xchg sub stos cmp mov cwtl lret in xorb mov sbb sub movsl mov inc fsubl mov sarl seta push aam sti movsb outsl lods lods mov mov jge popa cld xor inc mov and dec xor add outsl jne or lock sub loop pop cmc popa inc mov dec mov add dec sahf pop lea addl xor dec scas pop cmp xchg sub test mov mov mov jg arpl xchg lret nop iret or loope and sahf cli and mov or or push mov pop push test mov ror loop fidivl aaa or or ljmp or add push xor xchg out data16 mov pop out mov or and icebp fbld jae test ja cmp (bad) (bad) or inc xchg fcoml push scas push mov repz mov aas sub cmp les stos aad lcall sti cmp sub lcall cld neg repz cs (bad) orl ret pop or rolb push inc cmpsl cwtl imul decl insl repnz and (bad) or aas adc sub js xchg dec div cmp daa stc lock push dec or lcall cmpsl pushf arpl out ds (bad) insl xchg cmp leave adc add jne movsb push pushf cmp jmp stos push stc mov or sbb lret fdivrl dec lock inc sbb fisttpll pop ljmp std mov pusha xchg push or hlt das push sub mov repnz pushf cmpsl imul dec xchg insb rolb sub notb mov push mov mov test cs call (bad) or jo sti cwtl cmp ja in fsubrl mov sub pop or jge sbb push (bad) or xor ss adc cmpsl addr16 js daa cmp cmp add sarl xchg cwtl call jecxz or mov pop (bad) (bad) mov std jo inc repnz faddl or and mov in pop jns iret sbb hlt mov mov in or shrb inc out cmc ret ret mov jae imul in or push mov jno arpl inc or sbb and fcomp mov xor loopne lret (bad) enter repz push inc push or aaa or in enter inc lods xor sbb mov cmpsl jl or inc stc fcomps adc cvttps2pi push mov movsb jns mov inc (bad) fisttp cmp jbe xor add mov repz jmp push ja adc pop idivb aaa xchg mov loop outsb or lahf jo xchg mov stos stos jmp fsubrl std popa push movsl or pop and add pop hlt into (bad) push pop inc cmpsb ds scas adc sbbl jne jnp fs ret (bad) lock or pop mov popf inc movsl jle mov push and out shrl dec or aad (bad) out outsb sub pop inc frstpm(287 loop (bad) or test dec fistp sub mov mov adc mov sbb rclb lahf mov add ljmp lea sub adc dec (bad) gs lock fcompl dec cmp lcall clc jl jno push notl jne arpl jae pushf or sahf sar popa and or dec dec test sub leave mov psubq int3 dec stos sub (bad) lock and xchg xchg in ret cmp cmc sti fdivrs pusha pop inc (bad) in inc insb or or cmp (bad) addr16 std enter adc and inc push add lods mov (bad) jle cmpsl pop loope cmc shll pusha mov out xchg fdivrp jl (bad) (bad) lock add sbb jae jp pop pop in sbb aas loopne mov pop (bad) stc or push push imulb cmpsb hlt insl jbe mov xchg bound or push jl jle movb stos (bad) adc repnz xor inc nop imul sbb repz adc push sub out jo or dec jecxz push dec adc out cmpsl cmp and inc dec mov pusha jmp pop iret (bad) int outsb sahf xor mov cmp dec movsb mov leave sub sahf in dec xchg sbb inc and aam cmp stc das sub in mov jns aam (bad) dec push ljmp mov sti mov test add mov cs insl repz (bad) cmp std adc xchg and adc movsl lods or jge rcr adc or stc fwait mov jns lods mov or (bad) fiadd and or cltd sub ret stos test sub dec cltd pusha jle ss cltd repnz mov mov push or test pop cs (bad) in lahf push xor loop ficomp stos sub and mov adc (bad) mov jno ficom fmul jle mov fwait in lods js or xchg fcmovnbe push aad scas or int into push mov (bad) mov insl push mov jecxz mov jecxz bound adc faddl xchg and div lods popa pushf push pusha pop mov mov or std out fcmovu xor mov xor fistp xor loope loop or jbe mov or inc add ljmp mov outsl cmp or mov jbe sub or inc ror aad lea pop xor lret inc je arpl cmp scas aaa leave aam out or mov lock pop addb fwait mov sub add pop les loop (bad) jne (bad) jbe xor sbb or int3 or sub jp sbb call or mov js push lret sti or sbb jp sub js roll ret dec sub mov pushf inc or or jle stos and iret mov and mov rorb add ret pop xor test xor insl pop leave jns inc jb bound (bad) mov roll aad jg lock or clc jns or into adc fild popf daa out mov jns nop pop mov or mov sbb pop jmp jecxz or inc in and repnz jne cli pop cmc sbb imul imulb xchg mov and push or mov imul jl clc dec out outsl insb push cmp or lods xor (bad) divl push or test loop xchg or fcomps cltd movsb nop dec pop mov mov or je (bad) push push addl or mov adc frstor cmpsb add stos cmc jecxz pop je sbb jns and xchg jl xchg mov pusha gs jb arpl mov push xchg fldl dec adc repnz jecxz or rcll out or push addr16 or mov je test mov xchg or out fdivs shll call (bad) mov hlt sub orl test jne pusha mov lea push push cmpb cmpsl and xchg lock jae xchg scas and xor outsl ss jle adc jge inc hlt adc mov sub js xchg scas lcall fst pop das adc jmp dec and mov mov jno lahf jl xchg xchg scas push xor or mov idiv jl int dec sub jle sub mov mov stos mov xor in divb (bad) dec daa mov cltd cwtl dec mov jle aas lcall add dec out or and xor pop cmpsb jne jae cmp lret or cmc cs cmp rorl (bad) fcomps push (bad) and scas xlat jnp inc and or adcl or push popa and or repnz outsl pop stos imul xor mov mov hlt loopne dec or adc and adc jae int dec hlt pop mov cltd (bad) test pop push loope (bad) aas or les or or cmp mov mov push gs ds dec arpl rclb or cmpsl and mov mov data16 repnz into push mov imul aaa cli cmp outsl push mov push cmc cmpsl jl inc sbb out jge or test les loope rclb adc sub mov cwtl add pop dec or adc shlb dec push loop lret hlt xchg out hlt jne or sahf stos dec fidivrl inc adc or pop ret es xchg sub sub adc lock sbb stos hlt dec ljmp xor and ret jo adc gs add inc dec aas sahf iret sbb out jge aad pusha and jmp enter jno and sub ficom test dec in push cld xor mov das push mov insb sbb or test xchg or add jecxz ret inc loop dec leave (bad) mov xchg scas or mov loope pop aaa int in jecxz mov test scas (bad) dec cli (bad) add push test loopne enter cmp sbb pop or fldl rorl pop push out lods aam push rorl sbb (bad) gs or (bad) dec test inc push mov sub or xchg xorl jnp xchg ffreep mov add mov push cli add js inc mov add or in lahf call mov (bad) stc fcmovne dec imul iret hlt sub sahf inc cwtl xchg scas and push and xchg mov clc cmp sbb fisttpl roll push shr sbb mov inc lcall sub mov int3 ja aad cmp out xchg insb mov sbb mov shlb mov pop and mov aam cmpsl scas sbb enter ds jle rcrl push stos or stos data16 adc sbb stos lea je push (bad) push sbb xor repnz std std aam cld outsl adc and jle push or cltd sbb wbinvd mov out xlat mov and xchg iret and sbb inc (bad) lods mov xchg aas (bad) lock sti sti je push dec or or jg or movsb (bad) and arpl mov adc jno inc testl mov sub jae cmc jl push mov out lcall xchg subb mov add leave xchg push inc icebp sbb or in cwtl dec add pop dec adc push or (bad) push adc cmp repz push out sub add dec lret rcl scas jle les adc push in negb dec jo jne stos dec jmp loop ret pop mov mov mov mov (bad) jle jnp adc pop outsb push int mov fcoml paddd ja xor pop movsl mov repnz testb sub ficompl (bad) (bad) mov or fisttpll or xor pop in ds jns mov lret xchg fcompl mov push (bad) dec mov lea push or rol repz push popa (bad) out xor xlat ret lods and xor in aaa and mov divl and cmp or jle lahf sti add dec mov fisttpl or xchg ss dec sahf test inc add mov xor sti adc mov or add std push xor pop in ss dec out ljmp scas test sub mov fcoms xor or int push rorb jb lea test ret xor in lcall push scas fstps add cmp pop sbb (bad) repz or in sub lahf movsl or loopne adc pop dec push icebp cli popa fmuls insl sbb scas aam add int imul add push pop pop add cmp cmp lret mov lret add pop pop ficoml mov jno or (bad) mov in sbb or outsl je sub mov ret or xor js push mov mov imull dec cmpsl sbb sub repnz jmp push pop sbb (bad) jae add inc addr16 hlt (bad) out mov jb mov pushf and add push mov xor push or clc sbb lea or add sub shll cli cli inc jmp loope fmulp loop adc fcomps in shr fldcw xchg or (bad) jp fdivrs int mov insl movsb pop loop jmp xor pusha mov add or jle (bad) xor fs loop push mov sahf movsl add sbb or bound imul mov mov clc (bad) cli mov fwait mov mov jo aam or iret push cltd mov adc fwait sub outsb in gs sub xchg sarb stc sbb push or mov fwait rorb pop fistl mov aam sbb cmpsl xchg or jmp in ret cltd cmpsb das xor (bad) aaa addl push movsl inc div aaa std cld xchg (bad) cmc dec add sti jae pop mov aam ja stc add adc mov testl (bad) (bad) lahf cmp fucom xchg call aas das mov out out or inc call jle sub push jp or cmc jmp xchg (bad) movsl loop sbb pop call dec jmp lret mov push out or aaa dec or pop lods push xchg popf pop jns add or mov xchg (bad) ds movsl fisttp mov imul xchg iret js out std ljmp (bad) aam sub mov mov or xchg movlhps lods cmp dec aaa in incl clc pop mov fistpll mov std cwtl (bad) push fimul jnp xchg dec lods sbbb fwait xchg inc jae dec lret lds aam fimul push ds scas incl push imul rcrl jno lods movl push xlat push out mov or or and out pop (bad) arpl icebp push dec arpl xor mov pop xor or mov outsb sti aam sti (bad) xor leave sub sub mov mov out xchg fsub add add stos jb (bad) lock or test cmc mov and cmpsb pop (bad) mov shl ss cmp jle jae and or (bad) cld push (bad) mov or fdivs loopnew int3 hlt jecxz jae or (bad) mov mov dec or dec aad and rcrl fwait aaa mov pop sbb lcall push lret push xchg (bad) jo leave or mov imul lods ficom or cmp mov sub jge and test mov rcll jmp or sbb andl or push jns hlt mov xor test sbb decl lock lods mov lea idivb pop and fmull bnd outsl xor jecxz idiv pop fsts test enter and pop xchg das add mov push cmc inc xor out cmp gs xor repnz out adc mov adc or cmp fisttpll stos scas mov push nop add pop dec ficomp jg and push add es push mov xchg mov psubusw aaa mov jno mov rcl fld (bad) mov adc cmp inc or mov rcrb push out test inc mov mov add and mov jl push aas or add iret hlt or sti jmp xor mov mov lea aam mov lret lods loopne int or (bad) adc mov or dec xchg pop scas leave (bad) stos stos and mov std or xchg or mov out mov mov mov repnz mov leave fwait pop into mov adc test pop fsubl push decl repnz mov sub jge rcr repz pop out dec or enter es repnz insb cltd loop and xor pop inc dec or out cltd mov inc add pop dec (bad) std cmc pushf sub sbb cmpsb mov adc popf dec mov add xchg (bad) enter fsubl (bad) push leave in inc ljmp outsl js pop mov mov out or xchg fwait sbb sti mov mov inc jno (bad) jg and sub lcall or jle and mov in in cmc inc xlat iret inc mov sub out into add stos mov push leave pop mov repnz stc inc xor sti and lret incb push stc or mov pop sbb cmp xchg cmc sub cmp cmp mov or lods push sub es pop loopne (bad) mov pusha push add mov or idivb movsl mov rcrl imul in lock shl or xchg add push and out mov inc xchg aam ljmp mov adc imul jmp test sarl repz mov mov adc or mov das push adc mov add or or xchg mov dec jne aam mov cmp adc or sbb adc leave mov js jno imul (bad) aad dec mov mov add cmp cmp jae fnop mov cmp or sbb mov int3 or sub xchg cmp int ret pop push out pop or (bad) sarl fld or je sbb daa mov adc testb cmp mov mov dec cmpsl push pop sub and rclb loopne sub fcoms adc jmp aam lods mull push mov sti (bad) rorl leave lcall inc outsb or dec aam in inc enter rorb mov (bad) icebp in ret repnz pusha or jnp or ljmp adc mov jp ljmp mov cs push nop sub cli xor push stos leave dec in scas insl push or shrb xor rorb sbb xchg repnz push div popf (bad) cmp sub xchg mov pop sbb adc stc or mov dec loope xchg ret cmc jns ljmp call mov xor inc aas pop jmp mov lds test add icebp rorl into (bad) aam mov addl or and aas inc pop sbb inc cli or push out mul cmpsb (bad) out pop or jne stos dec inc adc mov xor loopne ss mov jp mov mov or sub insb sub xchg mov or int3 jbe xchg fimul jmp dec ds push std ret lock aam mov imulb mov addr16 fldl sub orl mov ja shll jb push popf imul mov or jg jnp adc sub lahf pusha popf xor mov xor icebp pop jbe jbe jle mov adc addr16 into adc aas mov adc lods sub imul out cmp dec loop andl sub sub mov test (bad) rcrb xor movb sub adc or mov fcmovu movsl stos mov xchg in sarl adc jmp stos out dec or cmc pop insl adc dec xor jo dec leave xlat idiv push addr16 int3 in pop hlt jg out dec inc jae lds sub ret adc sub and jns xchg mov inc repnz sub or ret mov enter div jnp out fsubrl pop inc lock mov or jg cmp sbb mov jb daa or sub fdivrp das mov lea or (bad) (bad) lods (bad) int (bad) mov js mov popa scas add push mov shrb ljmp sub jge bound rcr push jg mov fcoms sbb aas sbb and jns pop fisttpl push mov lods loop std mov pop inc cmpsl sbb mov out jmp fimul popf and imul sbb jg mov jne lock cltd push hlt movsb arpl push or (bad) out (bad) xchg icebp hlt xchg in xchg das or mov sub xlat adcl lock sub (bad) loope or xor mov or xor mov cmc addr16 push cmc adc sub or add jno jl cmc push ljmp fsubl jo dec iret lock and xor adc scas out mov xlat andnps mov or out repnz cltd sbb scas mov xor jno mov repz push or mov sub out pop inc or scas jbe dec or cmp mov aam jo jne jecxz push scas mov xchg lret je sub dec adc sbb add (bad) popl leave inc dec cmp or cmp out or dec push aas jge push mov loope sarl pop enter jmp ss xor push (bad) cmp test cld notl sub lcall adc lods pop cmc mov enter adc pop jb pop aad pop or bound test sub adc lea jle pop cmp cld jmp aaa insb adc mov cmp and (bad) cmpsb lret mov mov sub in repnz movsl and inc adc mov rcll dec mov push cmp adcl dec in add mov faddl lds mov (bad) xchg hlt dec jne cmp dec xchg pop movsl push cmc test dec test aam jb inc test cmc add movsl sub call ljmp lds cmpsl mov in es jmp mov mov std push or push mov ja dec jmp loop jecxz or loopne mov cltd jne inc adc loope movsb jno pop pop pop insl (bad) xor bound rcll lds jno xor jns divb in hlt push add xor fs and pop adc dec out insl xchg out outsb xchg stos cmpsl jo adc div repz cmp xor xchg popf call sub or jnp popa aas or cmp ja cli lods mov (bad) movsb movsl aas fwait xor popf outsl fistpl imul sub push mov pop fist xchg cmp mov mov inc dec and cmc pushf inc fsubs scas sub jno mov test lock add test pop xchg jg and negl hlt mov cmpsl inc test cmc mov dec mov xchg sbb pop add jle fldcw fwait sarb aas gs das cmc iret adc cli pop dec or test or pop inc hlt jmp fcoms push jmp inc pop dec mov (bad) jae imul iret push push or or adc cmc mov fucom or jno stos cmp pop repz add dec sub or sub loope cltd or push dec lcall mull jge ja sti std enter (bad) sub mov iret mov sarl arpl sub cmp addr16 mov popa mov and lods mov rol in mov pop in or aas sub push scas mov daa cld mov inc mulb jle imul sub adc jecxz aad or adc (bad) mov or (bad) mov subb sarl or mov out xchg and jae js jmp inc xor sti adc cmp addr16 jle or aad adc xchg push or (bad) enter inc adc or inc cmp inc inc or repnz (bad) or insl nop fs dec lahf pop lret out or xchg mov and or popf addr16 push mov cmp sbb enter pop aas pop sbb sarb popf idivl cs lods fwait mov or mov scas push sub adc inc mov sti js sub lock push mov lret push xor pop iret add or mov pop lcall cmp aad or pushf (bad) flds jecxz fdivs jmp push pop and lock adc movsb jo mov imul push lret dec rcr inc mov sub leave or std fsubl out and out push ja push stos jbe mov lahf ljmp lret hlt mov cltd add jno mov jl or mov dec push jmp jge dec mov and or mov or jecxz sti dec (bad) test dec fwait inc mov aas xor mov sub cmpsb push mov cmp popa insl loop leave mov (bad) sbb cmp fisubrl add dec addr16 xlat divb ss pop sbb call cltd sbb adc mov repnz mov movsb and hlt adc push lods mov jl fcmovu enter lds sbb ja adc mov sub mov ljmp jno and mov xchg std inc mov or mov or aad or lods mov sub stos insl movsb hlt mov ljmp dec pop leave dec repnz in sbbb out cmp pop lea mov (bad) iret mov arpl jne imul jne push out push in xor stc dec imul mov dec cmc test dec add cmpsb cs ljmp popf pushf xchg adc test dec xor ljmp lods fimull adc mov add lods xchg repnz cmova jnp or imul stos mov shll leave stos mov fimull popa pop push (bad) out jp mov mov stos push (bad) cmpsl cmp (bad) push add icebp cli xor es pop cmpsl sub dec cmpsb cmpsb popf add stc bound pop mov or rolb inc rcll cmp dec jmp mov (bad) in rclb js (bad) dec lods jp inc or fiadd jecxz lret dec aam cmpsb imull adc dec inc clc mov lods outsb sub cli and movsb push add and or andl pop test sub mov sbb sahf mov add (bad) cmpsb outsb push or shl mov insb xor into cmc imul mov jb gs addr16 or adc test or xchg subl loop lock scas popf cmp mov push push mull loope mov fiaddl outsl push (bad) inc or rolb sahf cltd and leave cwtl sti lds and loopne push cmp ljmp sbb (bad) adc ss or popa adc adc add fdivl in dec mov xchg pop dec arpl lods mov dec mov roll lcall lahf jns mov cld or (bad) dec cmp mov push imul daa xchg cmp es cmp movsl loop and fist dec daa mov lcall add dec mov into (bad) (bad) in mov addr16 sub repnz mov jl loopne icebp sbbl or pop fcmovne (bad) jge mov sbb sbb cmc cmp mov dec jmp das inc sbbl or out mov add into repnz sahf dec jp jns fcomps dec mov out movsl test jne aaa push or fstpl sti jns in ss aaa jno out divb add pop fs pop dec notb lock jno cmp repnz out or mov loop sub add or pop inc inc pusha xchg jl idivl cmp xchg mov push xor mov and or push stos lcall or mov out movsl xchg repnz stos enter cmp ficompl inc movsl jle dec add jno pusha cmp inc lret sbb sbb or out dec or roll imul gs data16 into or mov xchg leave sbb scas (bad) sub clc movsl xchg or cs stc jp push lods leave adc sti push mov sub (bad) loop or rorb test push mov enter outsl aas loop or push in inc or jno adc xlat dec dec dec repz into jmp add add ret (bad) jo cmc sub lcall jb dec cmp adc cmp jecxz and inc pop dec or add lret pop sbb (bad) jae setbe divb xchg sub mov dec ds rorb sub inc dec shlb cmp mov jne adc insl mov fisubrl fwait pop hlt rclb or lds push aam into pushl add mov in aam js je lea mov adc or rcrb sbb jmp outsl dec xchg and sti mov cmpsb push imul scas bnd jge lods aaa fsubs and fdivl inc xchg jbe xor xchg push das mov sarb es or je fsubl aaa ss addr16 (bad) sub gs jbe test or jmp lret and gs fucom jb (bad) and pop data16 or js mov adc testl sbb lods pop imul jns mov imul (bad) out aam dec (bad) leave xchg (bad) lock dec jb (bad) xor mov mull add mov xchg mov call or mov adc dec cmp mov sub icebp dec leave add scas data16 jne stos or add dec cli fimull mov daa jmp int pop adc xor jbe dec lahf icebp mov out xchg mov add jae hlt aas add enter hlt jmp loopne xor repz and inc decl cli pop ficompl dec jmp adc mov jg aas and or fsub roll bound loopne arpl mov dec jmp test cmp jno cs pop mov fldenv mov mulb xchg pushf xor insb cltd stos lock out or jg in or outsl scas adc mov lods jb dec or out xchg mov repnz xor loop fcmove sub mov addb out cmc mov inc ja mov jecxz sti sub pop enter cltd adc cmp cmpsl je xor jb lahf movsl xchg lcall hlt or xchg test inc inc mov lds inc sbb push pop jmp rorl or fadd xchg push js cld dec enter dec add jp loope jecxz cmp or xchg push ljmp or lods repnz or sub pop adc or inc mov fdivl mov add out ret stos mov data16 or adc sub xlat jnp mov add out and push int mov gs adc add cmc dec xchg mov jp mov cmp or sub push inc mov (bad) hlt int3 ja mov dec ja sbb ja mov sti inc mov lods dec (bad) or mov ds fdivp (bad) gs sub outsl pop fmull ljmp adc jae loope aas or sub lds lcall cltd push pop dec pop or mov jae inc push lcall jle inc or or inc in aaa fisttp xchg lods xor std add (bad) les daa cld xchg iret mov hlt or popf mov fiaddl outsb push mov aas or (bad) aam dec in fistl add cmc outsb sub pop ret push cmpsl cmp dec cmc add or jg xchg mov xchg sbb adc arpl out xchg pop pop cmc out add jmp jecxz adc lock sub shr jmp mov pushf mov sub leave sub mov xor mov (bad) or outsb ljmp sbb ret sbb xor add mov xchg or pop push ljmp xor jbe adc or cmpsl cwtl pop adc and cs movb out add adc or shrd rolb fs shld push mov adc aam movsl and inc and mov push xchg or xchg arpl pop and or stos add jnp rcl sub lret adc and or jo cmpsl adc cmp dec adc lds fisub adc outsl or push jno fidivl test adc pop jecxz push push rorb jae sti cmp inc andl (bad) pop repz jne std sahf loopne jo or mov iret popa cmpsb inc sbb and fidiv mov mov and mov mov pop or mov adc inc test jne add mov sub ret xor (bad) jo jmp into jno icebp mov repz int3 cltd bound and rcll loopne,pt lahf adc sbb mov repz inc adc pop cmp adc imul xor insl or test sub insl adc test movsl bound loopne jbe sar fstpt dec adc stos mov pop les dec test dec fnstcw in fistpll xchg push cmpsl bound sbb (bad) cmc int lods fwait cmp xchg arpl push push test bound mov js cmc xchg jb adc mov pop icebp sub hlt fs mov vandnps gs aad lcall push pop pusha fcomi and or push fsubr (bad) repnz ror mov imul (bad) adc out jbe xchg or inc xor loope cmovno or mov fsubl cmpsb aad push mov movsl fs lret std cmpsb push mov es pop sbb das inc sbb push cmp or repz in add mov leave and or (bad) lea lock je leave mov stc or (bad) push int sbb cmc pop or jecxz je or pop sbb dec and xor paddsw push push je popa repnz out or imul cmpsl pop or xor adcl sbb pushf das jne jge insb xchg ret push add shrl daa (bad) in nop add mov fistpl pop dec push jne pop (bad) jo mov xchg leave leave cmp mov adc jo xor cmp and mov cmp loope loopne mov mov push mov fisttpl mul clc inc repnz xchg or lods adc add icebp fistl addl or xlat out mov push adc lock add movsl test adc sbb xchg aas pusha push xchg inc scas loope push push cmp jno outsb (bad) add xchg xchg sbb or lahf dec fisttpl ds out sbb sbb xchg fcomip adc xlat pop fisubr add (bad) inc sub add (bad) sahf mov cmpsb imul cli aas faddl cmp movsb (bad) insb sbb adc fs dec (bad) aaa and rcll bound xchg std test dec push loopne es cmpsl or cmp std and and inc push mov dec lahf adc dec push and add lret sbb push les sbb jge inc in bound push inc ds jl push iret sti enter xor iret dec pusha lock ja cltd cmc or push stos test sbb insb add roll jp mov cmp pop (bad) jb cs out movsb mov fs out sti mov hlt mov dec dec xchg mov leave movsb and movsl mov pop lahf dec int3 xchg pop jb mov nop (bad) xchg das pop in popf add clc or mov fimul es (bad) lods insb inc fsubrl roll add sbb xor aad mov daa jns jns fisttpl hlt and ja (bad) and or (bad) pop sub sbb mov lds lods xchg mov pop js,pn sti aaa loope xchg inc xor insl pop add add lock cs (bad) mov mov (bad) xchg mov notl fwait sub or xor rorl in push mov or sbb notb and add divl pushf mov or sbb jp fdivp lret or mov push sbb das imul sub in cmp pop std or loopne scas cmp adc cs inc cmpsb push aad or jns mov push out xor ja dec hlt dec jge sahf dec or aad or mov sarl sub mov add int mov adc lret (bad) shrb push lods aas test xor jbe dec cmp rol dec dec mov jmp pop dec or inc sbb push ficomp pop outsl fisubrl movsb stc pop jge ja push mul fiaddl sbb or in and leave lret imul adc xor lret sbb ja sti lock jnp adc pop enter mov xor test fldcw xchg sbb mov out mov dec sbb mov mov mov (bad) push fwait jecxz cld add mov xlat mov enter mov test repnz and dec ljmp inc cltd mov push inc mov or andl inc jge xor add leave lcall adc ja incb or fucomip fucom aas leave jno jnp cmpsl std hlt test jmp les aaa adc mov loop loope or xchg rcl dec dec add jmp imul insb enter inc or lret dec jo (bad) push or clc nop jo mull mov (bad) jle fildl popf or mulb (bad) mov bound stos mull mov pminsw repz sti (bad) mov pop out aas or jns dec or test pop or sahf fbstp jae mov mov xor or sub outsl mov pusha ret wbinvd lret lahf loopne sti inc dec enter insl mov js pop fs push outsl or aam int lret xchg push inc bnd xchg sub mov test popf dec inc sub fstpl test (bad) mov pop sahf out rol or movb jno dec mov jecxz push jo out in inc jne (bad) pop cmovns mov stos pop inc rcrl aaa mov mov cmp adc nop pop lret sub shrl push add (bad) les stos aad arpl sub pop leave cmp jle popa dec out ss adc dec xor jmp addr16 or sti dec jp or mov stc cli stos insb psubusb out ljmp cwtl mull or pushf sbb insl icebp stc xchg cltd mov fildl (bad) rcr mov fs sbb fmull xchg mov lock adc sbb es adc cli fs jl and js stos pop inc das es sub xor lock add jle jno in push lahf mov bound lret pop test xchg repz or mov ret lret cmc mov adc mov xchg pop sub push dec sarl nop xchg fistpl fiadd and shrb inc stc xor xor add scas adc jne adc xor adc mov addr16 mov dec add pop test aaa and pop or inc jle fmull and push pop xlat push dec hlt pop out (bad) cmc jle call inc cmpsb xchg subb cli push mov scas dec out fwait add cmc sbb repz xor xor cmp ret fs int aad pushf ja cltd xchg jp (bad) jecxz in xor es and mov mov movsb outsb push das ja outsl jns sbb jle sub adc cld jo popa scas rorl push or mov xchg mov sbb (bad) cmp ficompl repz xor faddp cs ret sub pop ds inc mov mov sub mov in (bad) stos decb leave cmpl addr16 sbb mov dec in or sbb jecxz pusha dec pop imul jp pop test adc mul cmp lods test mov insl lret test (bad) xchg or fiadd repz push or test std pop fidivr hlt adc and inc test inc rclb idivl lock inc movsb imul dec stc les jecxz mov xor pop or or or push sub lret sarl int xor divb fmul mov cli jge mov sbb adc dec imul cmp mov xor xor add pushf add xchg stc add mov out imul int lret jno leave loop inc in push aad loop or and cmp or jno insb icebp add dec jge jne push cwtl (bad) leave lret mov iret pusha lahf sub push xlat dec (bad) adc pop pop or cmp sub ds cltd mov pop clc jg mov aam or call mov gs lock pushf mov es sbb cmp adc mov or clc xchg pushl mov jmp mov mov cmc call std adc sub mov jbe pop mov cmp add or inc sbb sub lods push sbb arpl movsb or rcll fldenv lahf mov mov mov xchg mov pushf inc out jg push inc pop (bad) xor sub test add imul mov fcmovnbe fwait inc cmp loopne (bad) loope aad lods xchg fcoml sbb cmp cmp scas sbb jle fimul jne push dec inc in out fdivrs pop jns pop mov roll jns inc and xor cmpsb cltd das or xor insb icebp adc iret cmp pop movsb mov xor inc sbb rolb pop div lods mov mov jle movsl dec push mov bound rorl jno popa mov add sbb cmp je add xchg mov loope add xchg xchg test call mov mov insb xor pop jle dec mov jmp xorb pop pop out xor ds dec jge popa jl jae cmp fldenv sub xor inc out leave adc adc push stos repnz sub imul bound push cmp jno cmpsl cmc xchg mov cltd adc push or cld cmpsl pop mov mov push jg je push stos jecxz add push rcl aam add and lret scas dec jo pop mov add or cli rcll mov xchg or lock adc je lret dec adc xchg cmp stos push or out stos sbb call movsl dec inc call xor xchg (bad) pop enter mov sub cmp mov lods mov add sbb aam imul int sbb mov test xchg (bad) dec shl xor lret je insl mov adc leave mov lea imulb mov rol dec imul push jle das or insb pop fwait aad dec decb outsl in orl stos adc cmp cltd in rcrl in hlt add add ja pop daa enter inc push xchg or pushl push pop arpl sub jne mov pop jmp cmp or dec decb scas (bad) and aas test into iret fiaddl test out push (bad) icebp adc fs jns adc push mov pop add jl aad push loope in cmp or arpl xor or sbb and add push dec inc aam or xor mov (bad) mov mov ja cmovl dec sub adc loopne (bad) aad push mov inc iret rcll imul push push insl lods ss cmp pop test sbb mov fsubp jb data16 fnsave icebp xlat cmp (bad) icebp (bad) adc pop jno mov enter iret pop cltd push ja sbb mov xor mov dec xor cmpsb mov aam in and std cmovs mov and andb ja ret or or mov cmpsl sub inc aas inc mov pop mov icebp or mov jle inc mov gs or xchg cmpsb xchg cmc mov pop mov loope test push out and dec pop (bad) lods xchg cmpsb rcll imull repz les movsl or adc jnp icebp repnz outsl cmp push sub or ljmp mov mov mov stos sbb adc nop sti dec or mov out fimul movsl pop (bad) jb notl test cwtl mov jmp sbb cmp and clc mov shlb rorb or call sub (bad) xchg mov nop mov push sarb stos insb pop pop mov mov nop or sarb cmpsb stos (bad) call jecxz mov or mov je sub repz mov inc jmp dec int3 aam in daa pop or mov jmp push mov push test gs xchg (bad) or mul xlat hlt iret dec lock xor and or xor fcmovbe (bad) push adc mov sub js out loope xchg xchg cli pusha pop sbb pop (bad) mov mov xchg leave outsb mov mov movsl push fisttpll test (bad) sub or fs mov dec xchg shll or loope rorl xor sub into pop or pusha dec mov es stos or imul sti in fidivrl or jo xchg lods or inc (bad) cli or jle sub dec dec pop dec jns dec leave cltd xchg scas test or or frstor mov out xchg push inc iret jle xchg inc icebp add pop in ds inc mov les push push mov je mov addr16 notb mov fcomps or or scas inc or mov sbb jmp in xor pop jno (bad) sarl hlt js nop dec dec (bad) aas add jno fisttpll xchg aaa sbb loop cwtl sahf sub stos fsubrl xchg out cmp inc sbb sub adc es cmc fistpl cld rorl mov test cs sub pop or pop cmp push mov jae addr16 fwait sbb sub in mov dec push add add jmp xor mov xchg lock mov mov xchg mov insl mov sub (bad) push frstor sbb jmp subl fldcw cltd pop pop mov xor test xchg lret push sub pop or xacquire mov call pop adc orb xor test lcall sbb jp repnz into pop xchg add dec mov sbb rorl and jmp pop mov jle cmp push mov mov or aas sbb or scas cmp sbb pop lds fist ret mov hlt mulb jnp (bad) lcall shrl int3 sub out xchg sbb push or dec lods mov (bad) adc xchg or out cmp mov xchg pop in or xchg (bad) xor rcrb adc sub insb mov mov enter fsts jle xchg jne rcrl jne mov mov mov push inc sahf mov movsl out jle,pt (bad) push leave dec mov outsl lea xor push pop scas (bad) decb jne cmp adc or mov lock dec mov sub add cltd inc lea shrl dec mov jl pop cmp adc insl push lock xor jo dec jmp popa test adc xchg mov inc push or mov sbb fidivl es movsl (bad) dec mov add or add cltd mov or arpl hlt mov loopne repnz rol adc xor push xchg dec (bad) mov jno scas lock xor lods mov sahf out xchg btc pop mov ficomp dec rorb sbb pop lahf mov pop add or inc xor in xor inc or and les mov inc stc sti pushf and xchg ljmp pop sub in mov loope inc sbb mov mov ficoml dec mov mov vpsubusw in (bad) sarb dec xchg out push idiv pop fstps nop lea not into mov jl mov push out fisubr fcomps clc sub pop scas sub adcb sbb or ud2 dec imull and stc stos sbb (bad) aaa insl hlt xchg imul ja imul xor aaa jecxz add mov jl repnz pop addr16 sbb repnz jle jae push jbe test mov mov sti mov or sbb and push cld mov idivl mov or push pop or and jle stc (bad) mov jmp sub or int3 push into (bad) fldl and xchg lock inc add cltd xchg or ret or jmp cmp mov or inc add cmpsl hlt idivb and jmp orb inc ljmp jg lds aas add rep mov cwtl fisub push cmp jmp jge mov outsb into fmull (bad) and leave add in adc leave cli inc mov cmp and stc or sub negb mov idivb mov in outsl mov enter xor fistpll js cltd pop fs out mov cmc mull (bad) in aam les aad (bad) jge xchg xchg push jmp fimull inc pop iret movsb es scas xor pushf pop sub lahf je pop (bad) lret fsubl imul cmp imulb stos jno int (bad) movsb adc rorl mov test scas ret dec add into stos adc mov xchg fnstcw mov sbb inc outsb jns lock cld je ja ljmp jecxz inc pusha push pop xchg jbe cmp add mov test jge pop addr16 loop cld fidivrl adc cmc cmp pop dec sbb sahf mov fnstenv and in mov adc push push xlat (bad) mov negl pusha gs imul inc hlt loopne or aad andb push or leave daa pushf mov pop repz inc push push (bad) dec hlt sahf mov mov and fild int mov scas insl or xchg or (bad) mov inc xchg or ficoml push psubusw loope push adc stos subb or fcmove movsb lahf int3 xor repnz jo test push sub shr mov mov pop (bad) jb cmpsb out gs xor jmp addr16 in mov lods (bad) bnd mov fstps push call leave dec outsb ss dec divb cmc pop in insl (bad) add sbb aas out int3 or gs jp pop cmp cmc inc scas xor lahf or dec sbb cwtl inc or adc icebp lods inc xor loope scas and orl jnp addb pop lods ljmp aam cmc cmp js xchg or cmp pop mov out dec or shrb int and add xor adc sbb or out mov test inc add push xchg push fs mov cmp ljmp gs cwtl sbb mov loope fisttpll fs adc es jno mov ja or and push scas test es dec sub xchg int3 (bad) jle inc scas je adc iret imul stos pop xlat cli mov test adc push xlat xchg or cmp cmp jns insb xchg (bad) fisubl stos cltd fwait or fdivl and fimull adc push jbe leave sbb punpckhbw stos js daa xor popa add decl decl dec dec clc jns jge cmp sbb mov adc dec ss add add push push add or neg dec fcom add daa push xor push xchg inc cli sbb mov ret jl lock mov bound push stos lret sbb mov scas ljmp imul leave sub sub enter inc outsb test aas sbb push fild fldt pop out or or leave cmp cmp shrl roll (bad) sbb scas mov lock or jno jns fsubs or jle xor test mov lahf push inc std inc push or insb xchg mov dec daa mov jae lock cmp stos call inc ficomp or mov inc xor leave lret dec or sbb call fdivl wbinvd aas push xor adc push hlt or cmpsl lods dec or int jbe ss hlt dec jge dec ds xchg adc sti rcrb inc repz roll std add iret pop add shl out sbb pop add stc sti repnz (bad) addr16 and fcmovbe or cmp jecxz jle or or repnz les xchg je sbb sbb push lds pop daa sti aad cmpsb test adc xchg xchg scas xor xchg mov jno inc lea bound mov xchg xchg dec xchg lods or cs es jl pop or pop pop dec add xchg (bad) loope xor inc int3 mov mov leave jmp pushf mov cmp xor add inc sti imul adc jne fs xor (bad) jp push mov test fstl xchg into xchg push leave and mov mov push scas aam in test or stos sub hlt mov mov mov fwait sbb loop jmp pop or (bad) hlt mov or xor pop inc or mov jg jo les aad lods cwtl and xchg dec mov add xchg popa jg pop popf fxtract loop xchg dec (bad) cwtl and mov or fnop aad pop push (bad) frstor or in (bad) mov adc mov mov ljmp sahf or xor sub or cli add das lds cmp pop ret test pop loop adc pop negl clc test pop sbb sbb sbb (bad) xor mov fsts xchg or sbb jle pop outsb jne pop jne or adc jae decl adc repz out mov pop in or or in inc adc cmpsb pop xchg adc or adc jbe lcall or sbb test xor dec and clc cmp mov mov int and adcl and sub stc mov fildll fwait rol mov and call (bad) mov gs bound es enter fbstp pop sub or ss push in xor or xchg cld or popf add (bad) pusha or js or imul rol into cmpsb orl cmove rcll gs add mov push into mov out adc adc add fwait das repnz jecxz int3 adc or stos mov je,pt cmp lods jb (bad) push stc sub leave scas dec rorl xorl cmc fstp pop daa sub lds mov inc add mov xor out (bad) (bad) int3 dec test sub jp cmp cltd fisttpl push scas fnstenv lds into imull mov bound cli sub xchg jb mov pop xchg or ret add addr16 jae mov subl xchg in hlt jg jne icebp nop dec rorl pop push push rclb pop and xchg andb cmc push inc test pop sbb add in cwtl cltd jnp out cmpl lret sahf dec xchg mov xorl sti mov jp jns mov mov xchg mov ljmp sbb add shl add add iret insl add mov push xchg fisttp jp int adc jecxz and or in push or pop mov mov sub and sub inc or xchg cltd mov mov sub pop movsb outsl adc cmp mov das add out xor xchg imul in or fldcw xor jecxz mov xchg cmp call nop adc jmp daa imul cmc mov mov sbb mov sub popa adc inc fsubs mov int3 iret add cmpsb clc cmp in mov or cwtl adc mov mov lcall inc xor lods adc sti or dec or out mov or imull or xor sbb dec stos lock add lods or test or or mov and das xchg push icebp in fisttp dec test shrl mov adc (bad) sub cmp jl loop adc fwait mov xchg dec add jmp adc int insl sub xor jnp lock insl jecxz sbb or shlb cmp jae jno jno bswap dec xchg mov mov mov inc lea dec sub mov pop xchg or (bad) movsl xor xor dec incb pop mov or stos dec (bad) or int es or imul pop push in add adc mov test cmc mov sub roll dec dec shrl cmp sub jb or out insb in mov int push cmpsl and mov mov popf or jge rcrb sbb add or addb push push mov jnp out stos or dec leave shr daa sub je mov jnp mov inc dec (bad) in mov outsl jne and and cli adc jns push pop or xlat (bad) jae cld scas out pop and repz cltd jbe or jae loop pop imulb (bad) pop cli pushf js fisttpll dec repz and or sti fdivs mov or mov jb xor jg or hlt sbb and inc jmp lcall insl mov orb sbb inc jne lahf or or add test xor je mov (bad) std test dec xchg mov aad imul lret lods add loope push jg or sti or pop or adc (bad) xchg out push cmp or jae lret mov cmpsb inc xchg mull push push xor fdiv leave clc xchg jecxz pop aad stos or lret call idivb xor dec dec ret sbb pop ljmp pop mov jbe imul sub std or or out lea push cwtl jle mov inc jns pop hlt les adc sbb lods cmp (bad) dec or cmp push push dec fnsave int push pop imul mov mov clc xchg dec popa fcompl sbb sub (bad) jle movsb push call mov jae dec push add cli outsb out test in cli pop aad adc (bad) std or xchg ficompl adc lods div mov add mov mov or xor mov bound xor mov les cmp adc in add (bad) push cmp xlat adc fsubr add mov sub (bad) lock aam dec into daa (bad) xor jbe inc cmp insl jns enter lods clc mov (bad) adc mov push sbb (bad) icebp adc sbb inc and leave out pop cmp out xor lds cmp cmpb out enter div stc movsl lret (bad) xlat adc sbb cmp sbb and out sbb aaa (bad) jb jo sub adc mov mov in cmc movsb pop dec stos movsbl inc mov loop jno push rorb pop movsl or cwtl fsub push push push test adc mov mov je and sub test mov adc sub or sbb (bad) movsl fs sub stos dec adc (bad) jnp fcomip pop inc or and iret sub or and add int3 jne mov scas mov push imul push fimul mov and jmp mov sub pop lea add push mov scas push mov adc out jle int xchg inc cwtl mov nop outsl fxch mov cmp insl ret jne jbe pop test mov mov fdivrp adc adc cmpsb xor xchg lret dec rcrb cmp pop sbb xor cmp lret jmp movsl sub xchg pop movsb or xchg dec push xchg and pop push add sub notl cmc mov sub adc js mov fidivrl lea dec dec cmp sub dec ret push mov in or or rcrl xor lds lcall aam ret les pop popa jle cli fidivl dec xor outsb or scas xchg dec or sbb in jecxz add inc and inc aas jl aam and adc loop add push out in int hlt or pop cmpb (bad) push or cmpsl cmp rcr push add push mov xchg jb aas pusha (bad) bound stos insb pop pop (bad) lods outsb mov fldenv and push dec inc cmp xchg mov or arpl jno adc jnp int mov mov std jmp lds repnz pop add popw or push out jl test jge int3 push iret and or pop add cli jbe jae popf sub pop enter cmc adc (bad) repnz mulb xchg gs sbb sbb ficomp inc add fnstsw fbld movsb dec in sub test out (bad) leave mov ja (bad) push adcl int fnstcw movsl dec add aas out add daa inc mov flds ljmp mov addr16 fldl fbstp lahf add stos mov add ljmp xchg ja adc cld jo cli mov cwtl insl inc lods imul push lahf jle in inc cs fisubrl push jo or int and add sbb stos ret adc or std pop xchg btc jne sarb mov pop sub jmp add test orb nop dec xlat adc je andnps dec or jl mov cli hlt cmpsl fmul xchg jbe enter lock adc push in adc scas std dec (bad) pop or mov sub rorl jp pop mov mov and ljmp adc imul neg cmp sbb (bad) (bad) dec adc and fcoms adc sub cmp aad scas (bad) or cmpsl out mov sub push or xchg pop out lock cli push mov inc mov lret out sbb lods mov pop iret es or xchg sub aam imul sti inc fnsave test fisttpl push popa pusha sub (bad) mov or add pushf js push jg cmp test or stos dec jb mov pop out repnz jae xor sahf addr16 leave std adc mov (bad) or (bad) cmpb lock xchg pop mov mov or lahf in jmp fidiv (bad) icebp mov lcall rorb int3 push imul push out imul mov pop jne jne push mov fcom cmpsl pushf mov pop (bad) ror cmc (bad) popf xchg or sbb fiaddl mov call add pop jg fsubl (bad) cmp iret test cli arpl mov sub mov mov jle xchg rolb lods pop mov lcall mov and or clc cld jmp inc rol fdivrs leave pop xor dec sti fwait cmp rcll out int xchg test test jae xchg mov dec std imul and jge insl jbe mov jecxz stos mov shll cmp sub jp sub xchg hlt sub sbb repnz out stos mov imul jae pop pop (bad) sub daa leave and xchg pop and fwait dec mov mov add cmc mov cmp lret dec rcl scas push imulb mov lods lea sbb mov lds jb cmp shll jmp mov arpl cli aad ficoml dec add (bad) xor xor inc shrb fstp dec icebp xchg mov bound sbbl movsb adc aam jns cs inc cwtl pop or lret pop (bad) jle (bad) xor ds add lahf pop push mov xchg jo cmp pop imul imul xor jns mov inc inc jo loopne ret push dec push subl jnp js lcall adc dec xchg add inc jb (bad) sub push inc mov pop xchg xor (bad) dec pusha js push fisubrl repz cmp icebp mov sti es leave data16 or (bad) insl out popa mov push jns test dec pop add add fs or scas iret xchg xorb lret mov out call mov mov mov xchg ds insl jecxz mov or movsb mov pop or (bad) mov push mov jmp or pcmpgtb out mov call pop negl or lret in adc popa repnz adc or cmp xchg movsb jmp ja mov mov adc add sti xchg mov sub jbe rclb sbb sti mov out sbb test inc push or test leave rorb stc (bad) xchg enter add lock or push aad mov idivb inc dec lea xor insl push adc and stc mov idivl inc loope idiv and insb imul push std lock mov jb fst insb roll enter loopne jo loopne sbb ss and inc inc hlt loop pusha or aam mov in jmp jo icebp mov pop mov scas ret sbb sbb adc and loop xchg cmc push jns mov movsl aam add jl jecxz pop pop cmc arpl icebp or sbb adc call mov popf or dec test fidivrl movsb push or inc (bad) mov mov sub nop jbe aam mov test or xchg fdiv xor les test sub pushf adc in and mov fs addr16 add or push mov mov or pusha mov cmc or (bad) pop scas xor and sbb fisubl fsubrs adc fisttp push mov cs mov mov pop or xchg (bad) scas stc out dec (bad) dec lea ds vsubpd mov popf movsl sub shlb enter or mov mov aam mov push fsubrl and or lret or repz mov jae or dec out cmovo mov cmp movsl xchg repz add pop lahf mov sahf ss imul (bad) xor xor shrb or lret or mov nop dec mov popa jb pop mov ljmp or jo jecxz or rep jp xchg xchg dec xchg cs pop inc sub lret divl push or sbb aaa enter gs test inc jge outsb mov fildl or imul mov loopne sbb mov imulb mov test xchg pop fmuls cmp hlt cmc rclb leave mov popa dec hlt sub adc push popl mov int shlb add mov dec xchg inc in repz cmpsl mov aad mov movsl aas mov or aaa mov (bad) sbb (bad) mov and xor lret (bad) push in inc add sub mov test push sarl or xchg insl mov cmc jbe jmp aam out incb sbb cli dec xor int push dec dec mov fild dec or or (bad) xor ja fwait pop test push adc jp mov stos pop sbb inc xor sub loope test fimul fld xchg movsl ret or adc push jne lock into mov mov inc je inc xchg test mov bound mov adc ljmp insb pop (bad) mov call jmp (bad) pop ljmp movsb xorl add pusha sbb (bad) cmp add scas jne lock mov xchg das out (bad) and or jg and cmp sti sub xchg or dec mov shll dec adc cli std stc sahf lds inc xchg (bad) mov push xor test fidivrl or (bad) add andl divb push test mov scas mov movsb pushf (bad) push cmp cs enter sbb mov outsb cli sbb mov sbb cmp jge (bad) aad and test outsb fistpl ja jecxz adc insb movsl mov mov mov insl in scas push stc cmp pop in test jne push xchg and jmp mov rcll jp lret imul sub sub test pop inc aam loopne ffree push fwait sbb pop pop daa mov xorb add xchg and daa pop sub leave pop insb lock stc pop clc bound pop xchg daa and fs lods aad aam mov dec (bad) jge sub cmp add xor cmp cli test loop and jmp cmc adc sbb loop add mov cmp xor ljmp (bad) lock xor fnstsw stc mov xor xor es imul inc mov imull mov mov lods or mov in lea test mov ja xchg add push dec ror lret jle mov dec aaa iret lods rcrb shll xor imul (bad) mov cmp sub pop pop push push jle cmp xchg xor gs jecxz adc push fs rclb xchg jl add adc fwait jecxz mov mov (bad) jo stos cmp dec push aam and add jbe (bad) rcl jne stc pop xchg mov sub cmp add lcall fisub call add adc pop or loop ret pop lods ja inc out repz xor test or call mov sbb ret inc test xchg sub and fdivl je push (bad) into sbb jo jecxz (bad) jb sbb mov cli mov jns mov jl adc clc sub jle xchg dec sub fimull lods mov shrb cwtl popf inc scas call fsubs sub or jl dec dec subl sbb xor in dec sub mov or call xlat out push jmp add xchg aad sbb jp xor or aas gs ficom or xor push dec mov push and ret ret push jne call xchg stos in fdivp pop push stos dec or and icebp loopne into mov add sahf pop or pop cmp inc and or jecxz cmp jg into imul dec inc xor addr16 push inc pop test testb xor jno hlt idiv (bad) dec xchg mov test mov mov pop rorb test or inc sahf pop mov jns loope rep or mov push push adc or sbb rcrb lods add mov mov hlt (bad) or xor mov imul xchg xchg xor (bad) sbb iret mov test and lock hlt mov mov push inc mov dec iret pop sbb ret out push mov hlt mov or pop loop and iret pop sbb jo ljmp adcl scas imul sbb dec or pushf fwait or rclb or pop lock lretw leave cli mov or fisttpll jecxz mov or pop out je and or push dec aaa mov rorb (bad) in lahf jl ljmp jmp mov or hlt aam or pcmpeqd push xlat mov (bad) mov mov scas cmc sti or dec cmp fidivl iret or jo xchg jecxz or dec mov mov into jp and xor jg cmpsl add (bad) or imul mov ljmp push movsb sub xlat mov adc js inc pslld shll inc dec fist mov or (bad) lcall and fdivrl lock fisubl adc cmp or jbe dec sub in push mov lds stc fldt mov ficomp (bad) fsqrt pop or test test stos or sbb or shl or ret sahf (bad) mov lahf sbb add mov and or sti xchg or sub push pop and pop inc imul fcmovnu pop aam out push out add pop mov dec jbe xor mov sbb sub popf mov lcall add inc icebp xchg or repnz xor hlt or mov pop mov cmp mov xchg add mov mov test fdivp ret cmpb adc daa std or or lds xor fiaddl sub ljmp scas adc adc pop mov push or cmp and xchg loope addr16 pop in jmp insb popa sti test and (bad) test in arpl out pop stc jno or pop dec push push (bad) out mov cmp out mov add mov sbb adc lcall (bad) mov lret dec xor movsb cmc jo mov ficomp jmp xchg jle in decl dec imul mov xchg lahf out iret jne jne ss adc adc mov add jno mov aaa aaa in fisttpll aas mov outsb enter clc (bad) xor or xor push add rorl dec or mov lret int hlt adc roll mov insb pop sbb fidivrl sbb out into jp mov or and sbb mov or sti cltd test dec lahf add icebp fucomip (bad) cmp lret cmpsb mov push mov in repnz fcoml fstps sbb xor pop mov test or cmpsl adc or sub xchg ret dec mov sbb jo ljmp cmp roll stc add push jg mov lods mov mov cmpb movsb test xor lock or in outsl aam aad insb je dec test jmp (bad) scas cmc jns icebp shl cmp mov sbb or jb add push fimul cmpsb repz add stc fs jge js bnd sbb lock jne add cmp cmpsb dec mov daa xchg xorb outsl test int scas push into rcl lds pop (bad) cli xor test mov adc loope scas lock imul (bad) icebp mov leave pushf or add inc (bad) jl sti jno lcall icebp push fistp push sub test pop ja xor fnstenv xchg setp inc adc shlb push fsts inc xchg into push pop sbb xchg jmp movsb push jecxz jo iret inc mov (bad) xchg inc inc mov dec mov outsb mov or xlat cld fdivp mov sub lock sbb push push or dec hlt test xchg mov jb sub mov sbb js inc popf inc mov xchg push lods leave mov (bad) mov sub or mov mov inc or xor pop dec hlt jo in stos sub outsb ror push out or mov push sti leave (bad) mov mov inc xchg inc push clc lret add jne mov mov lret les add lods idivl scas pop std or leave dec mov xchg push sub add lahf lahf fisubrl cmpsl pop leave inc test adc pop push pop fcomip jl xor jp and jg add stos sub out mov sti loop mov inc test data16 push mov inc lds nop mov xchg sarl jns std push cmpsb shrb lock cmpsl pop or shrb and mov and ja mov fidivl divl mov pop lods and leave leave movsl jmp stos dec add stc sbb mov shll (bad) out rorl xchg aas xor jns mov add decb popf or inc pop mov xlat jcxz jp cmp jno icebp or mov jno add addr16 not jmp mov adc fnstcw sub sub mov xor ja sets mov push movl dec aam adc jmp dec insb cltd les stc cli jge in or jge fimul push sub dec stos test loope,pn jne cli popa test ficomp jle icebp pop inc lahf or (bad) push or cltd mov popf sub iret push or and inc (bad) or std test lock pop hlt xchg mov mov ret cmp mov stos sub push sahf lea or or jmp push lahf imul xor (bad) and push inc or dec jbe pop fidivrl sbb push mov sti sub stos xor in xchg push (bad) add pop sbb xchg dec cmp add jbe adc sub cs shrl or sbb add mov out push inc hlt cli insl mov lret idivl cmp cmp insl repnz cmp or movsl and dec xlat push pop dec scas (bad) fwait addr16 jo ss or dec mov inc pop int pop outsb push jns mov push jle insl dec lahf add or (bad) push ja rclb idivl (bad) dec fildll mov mov adc mov mov sti in out and mov pop pop flds je xor scas repz outsb sbb andl inc leave jmp or test xor pop mov stos push out fwait lea pop repnz iret pop sbb mov jnp fstps sub or or clc mov push cmp inc mov xorl (bad) mov jbe mov pop sbb (bad) ljmp and xorl sarl mov lock add icebp aaa (bad) or cmpsl mov jbe pop pop insl mov sub pop cmp fisubrl add pop inc or bound dec sbb xor and adc leave lret mov add add lods dec inc mov in test jae iret add scas jb cmp add loope lea mov push sub sub dec test paddusb loope or js ror insl (bad) lret loop xchg pop lock stc stos or adc cli jp or xchg pop mov int3 add fucom pop lods mov fidivr adc movsl out je pop leave push cli aas add lock (bad) andps mov shl arpl dec xchg cmpsb negl (bad) movl pop push arpl loope testb or (bad) out into scas pop repz mov fcoml cltd and or in cmp test scas mov mov xchg imul scas popf cmp clc aad mov push shll repnz outsl hlt loopne ja add sub push sahf push pop or sub inc lock jnp mov adc sub cld dec jae mov mov popa mov or (bad) or inc sbb stos inc repnz js fbld mov insl addr16 cltd dec or pop sti sbb repnz xor mov mov out jle pop divb inc fstl or ret cmp lea in xor jno scas sub repz jl mull je adc sbb pop xchg out out ficomp pop cmpsl ljmp push mov inc xchg dec sub cmp adc lods fistl mov mov int3 imul leave sub hlt xor aaa and divl sbb sbb out and pop or int xchg leave movsb addl loope mov dec fidivrl fcmovne cld mov std shl in cmpsl or pushf popa repz add or je fwait mov inc mov mov (bad) aaa push and imul jo je inc addr16 daa xor jle mov sti jmp test mov cltd movsl mov mov dec rorb imul jb lret call cs pushf mov not xor bound call mov out ja dec pop je cmp bound shrl lret jo jle orb cmp jns in gs mov inc pop fmull xor dec sub mov push mov test mov mov sbb sbb inc inc lock test sbb dec jbe add jno fwait sub ljmp pop and adc aas dec add cmp dec fidiv push jnp xchg sbb jne push inc adc lds pop jl push mov shrl mull inc lea loop bndstx sbb clc or fsub test aaa jns xchg add movsl scas test cmp push mov adc cmpsl insb sub cmp test push cmc mov sti xchg mov test fbld int stos adc icebp cld aas mov std add shrb ficoml and cmp idivb cmpsl add dec int mov sub jns (bad) dec jo sbb add xchg lret je sbb stc pushfw dec jle lea aas arpl (bad) xchg dec push shrb jbe outsl (bad) pop inc pop or cmp lahf jb jno mov jecxz movsb sub pop in xor fucomip xchg fstpt cmp loop xor xchg cld push or pop adc pop je push sub or imul xchg into or xchg xor jle sub add push lret dec jecxz dec icebp or in lods loope jmp out sbb mov fcmovu cwtl and dec add mov adc inc and mov orl testl sbb mov sub jge mov or add and stc push or (bad) imul das xor out ds cltd test cmp lret mov pop loop pop cmpsl int3 dec or add jl add xchg inc xchg cld or inc xor or (bad) in mov (bad) xorl enter mov lahf dec (bad) movsl (bad) mov pop sbb sub (bad) mov or inc repz pop insb pop or dec movsl jb test decl fild int (bad) mov repnz cwtl add pop test add pop fstpt popa fidivrl (bad) gs stos dec cmp int3 or je or test imulb xor xchg push fscale sbb fidivl mov push dec push pop inc and inc mov sub repnz or sub jmp mov mov jp or ret sub fistl (bad) test pop or ljmp adc xlat sub sahf test popf add gs nop and ljmp sbb add mov pop cmp sub hlt enter cs in mov xchg inc bound cltd mov leave or clc sbb in jnp and in mov sub xchg xor sbb or dec xor or fimul jmp (bad) dec sarb or cs aad fisubrl in cltd ja jge adc pop xchg xchg sub icebp mov test pop scas push inc or push mov jl fiaddl int jne iret dec dec mov add das fisubrl xor insl ja mov idivb mov mov (bad) fiaddl inc xchg inc insl pop popa (bad) dec cmp outsl xor pop add or in jge pop rcrl aam dec xchg mov jo and or sub loope fisttpll or push xchg xor stc jecxz adc dec in pop cmc mov cltd or aam pop popf or inc jns or repz stos cltd push cmp mov (bad) das or mov aam adc je test or adc adc or (bad) or cmp int pop adc sbb sbb fdivrp stos lret or (bad) jae dec push or jne sub clc add loope jl push out stos jg mov mov aas inc movsb rcll scas or roll lods pop loop push test addr16 sbb mov fldl loop pusha imul ljmp sti sarb mov pop mov (bad) data16 sbb jge mov add push addr16 mov push and mov out cmpsl loopne mov or jl mov pop or ret outsl ror lret fldl aam push enter or cmp icebp jmp add sbb sti pop ror add leave loope ror mov test mov mov dec and out lods jae hlt or adc sub bound push ljmp cmc dec jmp outsb sbb aaa rol add or jecxz mov or or adcl (bad) lret mov mov idivl sub inc mov or movsl pop xchg xor dec lea dec or rol jo mov stos shrb cmp or out mov iret cli in mov jne,pn mov lock leave into xchg or jns sbb test pop aad dec dec or and mov or nop shr mov scas out movsl sbbl or push aas into jne lods mov or mov enter xchg bound sbb fcmovne mov xchg orb stos dec sub dec or jno mov rorl popf movb xor mov mov sub ljmp lcall popf cmpsb mov outsl xor repz cmp add mov movsb int push push lret repnz xchg popa or sub push mov nop jmp leave cld mov add pop mull mov sub inc dec test fisttp je lahf add stos sub fnop mov out mov repnz and lahf outsb push dec push fsqrt mov pop pop in or pop pop mov jns test mov push mov mov inc mov (bad) jo or (bad) mov sbb adc dec test notb sub or repz or lret push mov outsb repz adc cmp gs icebp xchg pop and push and mov dec into sub outsl xlat fiadd or xchg scas jmp mov adc popf adc add lock js xchg mov negb mov negb pop jno add inc xor dec test add ret xor mov pop dec cld pop ror fldt pop or popf xchg inc enter pop or mov mul loopne loope icebp cmp fwait sub cmp test sub pop (bad) lret jne test test or cmp push mov or and sub dec sub sahf (bad) jp lahf push ret (bad) sbb hlt mov dec popf (bad) cmp fisubrl in sub int mov aam pushf pop (bad) pusha adc adc cmpsb add jno shrl dec mov insb negl and lods mov mov jb dec in mov shrb in pop scas sbb rorb pop scas pop clc pop scas popf not arpl mov lret or and fucomi jl in lods mov mov je jns fnstsw rcll xchg in cmp mov jle rol (bad) or xlat jo in sub pop fdiv adc mov ret in xor repnz mov aad mov dec cmp cmp and int mov cmpsl or pushl stc and or std xchg dec mov mov mov pop aam outsl mov dec js shlb sbb mov inc lock fdivrs cmpsb push or in xorb xor rcrb imul ds mov cli or cld inc outsb je pop or shr cmp sub dec push adc push int ficomp cs and and (bad) lock rclb mov mov das daa scas push out dec sbb mov jl dec pop aas cmp and dec fdivrs jo xor push push popl cmp lock roll and movups or mov int sbb mov in sti out adc pop bound cld hlt fs mov mov mov (bad) cmp sbb fist (bad) jae xchg mov test fmull outsb inc sti jo mov sahf push lock mulb inc adc inc jmp int and les stos mov xor rcll inc or movhps mov out mov and or cld adc add ja out jle inc mov inc sbb bound xor mov out pop pop xchg mov in adc idivl cmp and fwait xor inc pop gs mov jg bound daa sub popa stc out icebp lock mov test enter dec leave std je lds jns stc pop imul adc jge cmp jg das mov jl sub add rorl out out mov xor bound push aam sahf mov mov pop sbb fimul mov ret inc nop inc jge icebp and inc mov jl out or mov lahf dec (bad) or adc icebp jge fwait or xchg adc and adc loop test mov fldl fbstp cmc mov mov cs sarl xor adc pop test sub add (bad) dec test xchg sbb loopne adc add lret pop sbb dec cmpsl cmp mov cmp or or inc sbb jo pop (bad) fisub or jl out mov xchg adc sub mov jmp sahf inc xchg mov jbe push add std jle scas cltd cmp or (bad) jle in cmp mov mov addr16 bound push pop xchg out scas or push inc mov outsb mov (bad) jmp or sbb xorl imul js cmpsl mov or cmp pop or pushf mov or imul pushf divb push ret pop adc dec jecxz mov push (bad) or les ffreep mov out cmc es pop (bad) std pop and ss insl dec inc sbb xlat mov sbb icebp rcl add pop or adc xchg jge sti imull xor dec ss divl mov rorl jg sahf rclb (bad) add aad iret je pushf out xor or getsec dec int3 mov mov (bad) cmc js arpl mov subl or xor addr16 mov mov aaa icebp loop pop mov leave push jmp jmp jg sub cmp mov or mov das ret mov xorb push mul outsb or jp clc sti nop mov mov jge pop dec push (bad) stos out in cwtl sbb scas fistpl in or jns mov lcall or push mov out lods pop inc test clc and mov dec or adc mov mov dec jmp sti mov sub sub xor ret inc jg or (bad) jo jno movsb mov (bad) jp js pop std inc lods xor mov fs cld stos jns adc dec (bad) divl dec mov stos sbb scas jne fwait mov repz cmp ficompl add mov lahf mov push test mov or repz sub lock pop (bad) xchg cmp imul out in push mov loope mov push fadds pop mov dec loope aaa popl in stos adc xor pop mov sub mull mov xchg pop pop pushl icebp imul int stos cmc dec jmp sub stos add jb bsr xchg iret push scas loope mov mov (bad) insl test lods sbb mov mov or add pop repnz aam pop sbb movsl push add mov aaa es or sbb shl or sbb inc mov sbb enter jo sub cli loop xor insb add push sbb mov lods add icebp pop or push jle inc mov jle or fstps leave cld dec sbb in in outsb (bad) cmpsb cmc or jae xor pop (bad) flds hlt mov add shrl and cli jb and add add adc jae xchg pop sub mov jmp leave mov jne sbb bound xor or mov ss and or mov cwtl push sti je cmp dec cli div jmp xor inc lcall or jecxz push xor dec or pop lcall or aad sub sub mov mov or addr16 lock js out and popaw movsb stos mov xor jbe scas insb or das push mov bound inc mov insl mov inc rorl add lea aad outsl cli sti mov mov ja inc push pop imulb sbb lods push or (bad) fdivr jmp leave and aam in pop pop cmpsl jl (bad) iret push (bad) pop jne (bad) (bad) and or pop sbb sbb incb or scas xor test shrd (bad) (bad) in cmc jbe dec std jns or adc xchg (bad) push inc xor cmp sbb push inc or call xchg rcrb mov and notl add jmp mov inc cmp test mov adc (bad) mov insl aaa (bad) or or pop (bad) std in push or dec cmp shrl xchg outsl pop mov lret in ds or pop fmul (bad) mov movsb dec fs lock adcl add dec addr16 enter iret xor repnz pop int call in aam lods jae jmp or mov test or push cmp rorb (bad) sahf mov test ja xchg out sub dec leave mov aas incl jmp std xchg stos inc pop sti dec movsl and push jecxz pop sti in mov inc fimul lret loopne ljmp mov jb test or dec jb mov inc mov test mov gs pop hlt neg xor aas or sbb in pop repnz dec aaa push test jnp sbb leave ja ds cmc or push add jmp and mov cmpsl adc hlt cmp xchg lods pop dec (bad) sub lret and fldl xchg sbb inc adc or pop lret fldl adc call enter jecxz (bad) xchg sbb ds ja insb pop inc or or test inc sahf lret lea adc mov xor cli sbb add rcrl or mov xchg fisttpll lods mov add sahf jns imull cmp dec mov and mov jno pop out or fidiv add imul mov (bad) jge xor inc or aam int dec mov fninit das rorl lods fwait add mov rolb das lcall test cmp or jo push fnstsw mov or in int3 lea out rorl rorb inc dec mov or fcmovne shlb aas in incb js push jecxz popa pushf aaa cmp repz andb jno jns out out pop or push cltd dec leave cmc sub shlb dec cmp xor add popa into jecxz push sub pop gs js or or mov idiv cmc dec ds pop sbb or adc rolb ret push mov or test lret sub scas or add push aad repnz imul sbb hlt div add nop or out scas jne dec inc (bad) or (bad) jns mov mov pop lods test and xor or mov inc imull adc lret pop repnz and jge xlat adc mov (bad) mov push and inc adc add mov divb enter es xchg gs imul sub nop lahf aad mov mov xchg push bound cmpsb sbb adc out les add mov daa xor insl jo jecxz imul cmp adc mov cmpl jmp pop pop sub repnz rcrb rcr add or (bad) adc repnz mov jg xor in mov cmpsb add add sub jl insb pop in iret sbb jns (bad) mov adc inc or mov dec mov fldcw cltd stos inc repz sub test jp jb leave xchg pop sub outsl (bad) jne inc negb ljmp loopne lcall or daa ja or jmp outsl adc fnstcw arpl imul mov or push cmpsl inc aas inc fmuls ss mov push lds jle hlt xor (bad) mov loopne ja lods jne pop adc or xchg mov ds repnz mov push arpl pop or (bad) repz (bad) mov icebp add imull jmp imul xchg adc cmovns sbb mov lea pop sbb arpl cmp divb push fs or and clc xlat mov push jge lea pop cmp into jle dec xchg push xor lds repz xchg and push stos push in dec dec or or mov pop jl clc fwait (bad) sahf or sbb mov outsl or pusha push jl dec dec movl push pop shrl xchg add popa pop mov sbb aaa adc sub dec stos stos or or or dec insl mov push pop fsub mov or mov mov dec pop adc cmp loop xchg rorb jb adc dec rcl cld sub getsec inc lock enter repnz adc push or aas mov adc cmpsb stos add jae sub cld mov aad dec inc jne add or dec sbbb add pop xchg dec and subl jne pop das and dec cmp mov scas cmpsl xor mov xchg int3 push adc fistp addr16 xor (bad) jno dec push lcall adc movsl std outsl pop scas (bad) out sbb fstpt cli js sti mov or or loopne sub bound dec lock pop data16 stos pushf roll jecxz sbb adc xchg vmwrite aas sbb mov pop adc lcall push mov int or inc lahf or add daa pop adcl adc push ret adc (bad) or sahf cwtl xor push movsl inc andps adc repnz cmp sub lods add insb test sub mov xor cmp int3 push or pusha xor outsl (bad) lea push mov (bad) mov scas sahf or hlt ds xor lods (bad) jp (bad) scas pop mov jae ss andl pop sub push dec mov mov popf mov cli cltd pop or inc push (bad) xor xchg and and jo (bad) fmul sbb jo sub or ja mov xor pop cltd push je pop jmp in sub divb fwait inc hlt insb xchg addl pop clc repnz jne or icebp mov or push sub mov in sbb or sub xor lcall xchg imul lock sbb cmovge (bad) or movsb leave punpckldq or cmp addr16 mov aaa arpl rcrb dec data16 fwait cmp cmc xchg or arpl repnz sahf ret adc test and clc or js leave lds cmp test adc mov cltd cmc mov dec adc jo sub in cmp out lock hlt fwait or loop adc sbb out add mov fsubl push dec push not popf or dec hlt aas adc fwait inc mov adc lcall pop (bad) adc cmpsb mov jle outsb xchg idiv std mov jge mov lret mov (bad) or sbb jnp add push jb mov and lds cli jno add dec sub aam push or sbb add ffree xor and lock jl dec out cmpsb cli dec and je sbb test mov fnop das adc leave inc jns dec mov sar int3 sub xchg jp lods adc xor xor mov adc push out scas in xor je flds mov jne pop clc add int3 int sti cmp testl mov pop pop adc push mov hlt and pop jg pop inc jmp add sub lds mov inc movsl test roll fisttpll lret inc pusha popf dec dec in lahf or sahf les fldenv inc pop sar mov add jnp jmp lock and aas jp mov mov lahf sub lock push rorb mov in jmp out inc cmp and (bad) les (bad) pop imul inc or xor or dec (bad) and jno xchg lea add mov add cmp (bad) pop push pop sub fld pop aaa jae ret or mov (bad) out or out mov aaa or clc xlat inc pop dec mov jecxz mov adc (bad) cmp aam dec inc shl fstpt lock cld mov lahf mov xor pushl push push faddl jg nop loope xchg dec cmp jnp neg sbb pop ja aaa dec pop push mov pop sbb mov mov int3 mov testb out mov inc mov test fisttpll cmp jnp mov (bad) js lret jle aam cltd div push and add inc or sub movsl or ffree jb dec ss inc sub add fistp pop fiadd push xor rcl mov sbb popa pop adc idivb sarl mov mov or arpl lods aam push lods imul mov aaa sub mov cmp pop push xchg push push scas imul cltd adc (bad) out enter pop int3 xorb pop xchg mov or jae push adc sbb cli arpl xor popf push jmp insl or ret xchg in lcall cmp jno or insb xchg mov sbb mov mov or mov ja fstpt mov jno or or sub iret mov mov cwtl leave jmp stos xchg incb stos data16 pop fistpl xchg xchg fmull add sub adc jae movsb jmp sub in inc and and add mov mov jle cmp ret leave ds lock xor sub mov jns adc adc ja mov insl lret sbb mov inc jno call push adc pop movsb mov mov mov outsb dec fsubr fnstcw lcall (bad) mov loope ss jge (bad) idiv push add test pop jecxz lods popa scas push cmp int3 in js mov in movsl loope (bad) cmp sub mov pop aam mov and scas jne cltd sti pop ret push or dec pop stc pop lea fldl xorl pop xchg out or repnz xchg dec push push dec mov dec cli mov popa adc mov cmc insl sub cmpb or leave mov push adcb movsl ja std lcall xor or fidivl mov cmpsl jecxz dec enter aam out dec dec sti (bad) je sti inc xor mov dec or (bad) and cli sub out jecxz mov cmp (bad) sbb jmp int jne and ret loope or dec imul dec (bad) xor inc jle jns pop pop or (bad) adc popf dec and and (bad) mov xchg sbb loope or orl or scas xchg push lcall inc or aam rclb popa sti xor or rolb sti jl and adc imul pop inc lods pop add sub es (bad) shll loopne add stos ds push pop int mov rorl mov jo adc cmp popw xchg mov push in push (bad) jb js (bad) fwait cmp loopne dec or imul sahf outsl mov inc repz dec lcall adc sub cmp push je dec rolb cmpsl out lds pop in lcall sub or hlt das cmc push cmp ds xchg xor cmpsl ficom repz xor into (bad) push or jle mov int3 jb and jns fs repnz cmpsb xchg insl ja (bad) dec or lock ret or push pushf xchg mov push in mov ficom push movb adc xor push scas dec pop xor js (bad) call shl mov test idivl jne dec or sti test sub test or into mov or jns je mov xor scas jbe mov fyl2xp1 pop repnz jecxz test ss push sub and movsl repz mov mov cmp mov mov xchg or pop (bad) (bad) cmc aas dec xor mov mov repz movsl sbb loope ja mov rcrb sahf shrl sti xchg shlb cmp (bad) add test in push add sub not jns inc data16 pusha inc jo loop sub mov outsb mov add movsb mov cld adc or scas inc sbb lods ja mov or jbe and pop or xchg int3 push dec add dec mov out out fisubrl pop add ljmp call push pop lods into and iret mov jnp fcompl or xchg jno and pop dec add (bad) jno and dec cmp cmc imul and mov shrb mov fstps imul dec or push imul sbb ds sub sub shr or std clc sbb xlat loop lret loope mov or mov mov cmp xor cmp dec (bad) push jge push mov mov mov stos cltd fld sub hlt ja push add dec mov adc jge add or movsb lret jns fwait jl out jae or dec std in fiaddl cmp push lock sub add jns jl,pt iret pop xor popf add jmp (bad) ja (bad) cmpsl outsb pop xchg loopne aas or inc cs movsl int3 std sbb xor bound cwtl adc stos (bad) mov xorb scas mov jno or jns mov cmpsb sahf xor jb adc out and push mov pop mov push dec icebp xor (bad) and dec lods add adc sub pop push dec in xchg push lret pop cmp jbe mov call xor mov repz push pop mov mov pop repnz push adc jle xor inc jp xlat jo incl addr16 pop xor lods enter repnz adc clc mov pushf push jno inc fistpll jbe popf out ja popa dec adc idivl ret stos leave lret leave jl and imull mov dec push push xchg mov add pop and movsl add sti or (bad) ffree lods push imull inc jno and sbb lret pop std jmp dec or mov repz or and mov mov sub sti scas sahf jl int cmp ror push lods or jns (bad) in mov mov cmp outsl shrb insl mov pop mov sub lcall dec out xor mov mov push xchg xchg mov (bad) repnz and push pop das outsl ret jmp cmp inc or je ljmp stc inc push xorb fdivs add imul test sbb fistpl inc es cmc jmp outsl addr16 and orl fs jmp lcall jmp repz jbe (bad) insb test negb mov push rolb and (bad) roll mov les or mov popa fidiv iret sbb repnz cwtl sbb or addr16 ret inc ficomp repnz xor roll add ljmp out pop loopne or or lock (bad) mov jb or mov in (bad) loopne leave sbb mov pop shl andps outsl repnz and out fbstp imul pusha in call push lret out (bad) dec push hlt sbb dec ss or scas std in lds sbb or shlb ror inc or popa or fdivs push nop add pop aad repz sbb mov pop mov into adc or jne arpl in hlt mov subl wbinvd in js adc ss or lock fildl cmpsb mov add push push inc jmp loopne mov (bad) push jecxz mov xlat ret (bad) jno sub mov sbb ss scas dec add inc xchg imul cs dec jp lods mov lea clc roll lcall sub ljmp push jb out test test mov adc stos push call jl xor sub dec dec pusha or pop out mov cmpsl jp ja jbe mov or loope popa or lahf cltd cli (bad) push push inc aam or pop lea outsl mov xor hlt mov jp ljmp sbb test xchg mov (bad) sbb sti jmp mov clc cld add movl int3 movsb fidivl or xor push push wbinvd test xlat mov out faddl mov testb and mov sbb xchg mov adc lahf in iret or aas pop daa add or inc jbe or push mov iret push int lods aaa xorb or mov push aad lods (bad) lahf inc (bad) push call sbb flds or mov mov pop test pop bound add fnsave test loop or cmpsl mov insb and negb sti sub fstps in cmp leave pop outsl xlat mov mov jecxz push xchg jae aam or test jo push adc test js pop mov jne,pt sti inc popf or in sahf or leave inc rorb mov outsl adc sub enter lret imul mov out sub mull out in cmp cltd push enter xor cmpsb sbb fsub fiadd or test xor scas scas pop cld ds (bad) xchg push cmc out ja sbb push test mov or call movsl jle push lods fwait loopne cmc jns ss or nop fnstsw push ljmp ja jecxz pop cli fsubrp xchg pop mov mov (bad) mov inc cli popa mov lea lods mov fisubrl movsl sbb push dec or or rolb dec dec adc xor sbb mov sub fldenv int mov shrb cmp cwtl sahf jb (bad) or jle jmp ja xchg cmp or jge cmpsb pop inc inc leave icebp add mov aaa loop mov push or jecxz push outsb sbb in pop enter cwtl jecxz adc (bad) cmc imul mov aam mov add test jo and jg push pmaddwd jp pop or sbb xchg mov add shll icebp sbb dec add xchg jae push imul jle mov (bad) xor xchg test adc push pusha adc popa jecxz cmp roll and leave push adc dec fnstenv sahf xor test mov jbe dec je out inc lret mov push lahf adc sbb lock xchg icebp test mov stos std data16 icebp cmp pushf insb adc bound insb pushw andl cltd int3 inc fistpl inc xor or mov push pop jb xor inc repnz mov xchg lret jne shrb adc dec mov or es xor and shrb mov loop pop orl shll pop or jbe shlb cmp iret out and leave subl shll mov jl jecxz outsl aad or sub fcomp out mov notl adc iret repz mov push loop std (bad) dec push add adc sub dec sahf xorb mov int3 mov or add int3 jp bnd jmp cmp add and scas notb mov and or fmul (bad) sub leave jmp (bad) sub inc or push out lods pusha scas lock scas mov fimull or sbb movsb mov lock mov test cltd xor add or xor inc cmpsl pop (bad) mov lret dec or jp insl xchg xor neg add adc mov out lock lods and mov repz jge dec xor add adc cmp mov mov je sub imul rcr sbb adc cmp pop xchg jne movsl addl jo sar sbb int addr16 ja movsb xchg push faddl or push loope xor rorb cmp push adc imul xchg lret daa pop cmp cmp lret in xor fistl fldenv loope int imul jp and push stos sbbl ret aas push std and fwait push jno push xchg xchg inc mov jbe pop jns push sahf mov cltd repnz sbb les mov and dec dec (bad) into lahf test xor adc sbb data16 incb hlt scas jb (bad) movsl stos mov or jne movsb lock xchg int3 or int dec mov rclb bound or int3 mov hlt call or arpl dec mov adc loop mov movsb push jl push push add jg and inc cmc out lds clc push std stos (bad) dec cltd or (bad) adc xchg stos enter mov jne pop cli mov cmpsl ret or mov jmp lock mov mov dec pop pop div test pushf test mov in or fmul dec leave cmp push sbb sub sbb hlt and loope push cli inc mov jbe jecxz jl pop or pop inc xor mov out or mov out jo xlat fadd nop jecxz lahf add jae fnstenv div into mov inc jl lock mov cmc add hlt xchg jmp ja or aas testb or sub in push mov les or and sti test push ljmp outsb movsb (bad) out sbb mov clc sbbl adc push jae das in fisttpl or cmc scas popf insl mov in test imul scas out xchg add btc mulb xor dec std or mov enter fsubl aam pop les out in push enter sbb inc dec sti outsl leave pushf xor sub add pusha xor pop sub add dec mov cmpsl or mov adc ret adc int xorl daa xchg (bad) dec jne cli lock out pop in sbb loope mov or lods insb lock xchg adc pushf lock or add or out fwait ds xchg out into push sub mov int enter popa xchg jecxz gs dec pop mov mov pop add sub sbb mov aam dec ja jns (bad) gs mov and ja sti mov fdivrl mov pop int3 or loopne jb insl or gs lea pop xchg lods ret ficomp or or mov call movsb icebp dec push jle addr16 mov add adc sbb push lret jg imul test in xchg jl add mov jns xchg enter sbb and pusha pop cmp xchg cwtl hlt adc mov inc mov inc cmc repnz ds lods stos push push sti es push adc cwtl stos lods dec pop or cli jbe loope push or movups shr push test pop and (bad) mov test pusha in std sbb imul in mov fstl fdivrl add ret packssdw or imul das xchg xor jbe ja es fs rcll dec pop jne scas push je stc imul std mov add loop push loope loopne adc mov jbe loop pop xor xor cmc jno sub les mov daa pop dec scas aad cmp push fsubrp lock int scas loope pop (bad) (bad) and mov jmp jo pop or mov cmc xchg push out outsl inc dec cwtl bound inc mov leave test addl adc cmp stc leave rolb pop aaa pop ja sub (bad) das inc pop mov mov adc add fmull mov stos mov aas fcoml mov addr16 mov bound repz iret sbb leave gs add xchg dec adc leave or mov cs jecxz or xor jmp and icebp ret sti or dec lret stc mov cmp fsubp or or test in andb jb andl rorb inc ds notb lods adc push or idivl repnz dec icebp cltd cmp and (bad) mov sbb jecxz pop or push sahf pop mov call inc jl bound mov adc or mov mov mov int3 or loopne in inc jmp or rolb push out stos adc sub cmp int3 mov (bad) push push xor rorl sbb inc hlt jne sahf cmp sub ss fisubl or dec leave cli jp loope sub cmc sti xor add add jb jmp fldenv push cmp xor ja imul adc in ja or dec dec test (bad) dec fildl pop stos jge ret mov mov cmpl insl sub xlat push insb add cmp jne mov leave cmp pop pop lret cli aaa push xchg add iret xor and jno jbe bound cmp push jecxz out push scas or sub pop or add mov xor inc adc push mov cmp in mov jp add arpl imul push je lcall andl cvtdq2ps clc mov dec sbbl cld test (bad) and lret jecxz or into lret sbb xorl dec adc je cmc fnstcw test and adc jns mov add gs sbb add in lcall jp xchg loop hlt scas es dec jns decb sahf jnp jnp jmp adcl dec outsl jle movsb jo repnz icebp (bad) arpl es or xor in inc sbb or sbb inc push jns sub aas ja jo (bad) int3 iret stos cli xlat or (bad) int insb mov in or hlt push jne push adc hlt (bad) jbe push (bad) jbe ja adc xorl or nop fistpll lea or (bad) test loope shrd in ss decb jl mov push rep mov loop add sub dec mov imull test stc in loopne jno inc lock or mov inc inc adc cltd or adc mov mov icebp sbb ffree jp stc push les inc or outsb (bad) imul pxor ss and dec stos sub dec mov mov std int3 xchg mov out cmc mov sbb vpshufd cmp dec decb (bad) negb rorb jae iret mov sbb lret mov (bad) fiadd mov fnstsw repz dec lds addr16 test xor repnz push cs inc enter adc stc and (bad) xor sti cmc movsb mov or add fistl mov or jno or test popa xor bound mov sbb fnsave cmp insb and or imul xor cwtl mov (bad) adc mov mov rorl aam (bad) fstpl test mov icebp arpl sub movsl mov shlb mov push and out dec out push mov add mov aas lock daa dec lret adc inc (bad) and inc mov adc outsl or inc rcll loop bsr icebp cmp jb rcll outsb jns outsl jo jl pop cmp fnstenv or sub or incl dec or adc decl mov roll (bad) js pop cwtl mov jo inc xchg or sub fldenv adc or (bad) jge cmp mov jg dec dec clc out rcrl (bad) lods aad idiv inc repnz mov jmp or loopne hlt adc mov add mov jae xchg xchg ret or or xor dec push ret add mov push jne mov or das or mov fwait add adc seto xchg dec (bad) fxch sub fidivrl in add push adc jle lcall mov or leave pop jno xor mov lret mov lock mov adc mov cmc mov jmp xchg insl mov aad add xor jne dec insl xchg jae sti mov cld mov movsl xorb jno xchg lock add jmp inc add in and push jl data16 inc in insb int imul adc cmp mov cli mov stos add call mov inc push mov divb jg inc lock xor ss je mov cltd mov cwtl pop rcll loop adc inc pop fwait sub inc mov out mov or inc cld iret imul outsb jno xor stos ljmp inc push dec cmp outsb pop mov sti ficompl loop (bad) jmp adc stos fbstp test pop cli jns lock out cltd mov xor xlat call scas mov or je mov or dec and jbe xor test int pop and or pop sbb (bad) push xchg test (bad) mov in cmp dec (bad) jmp lds xor dec add addl mov add (bad) incl inc fistpll pusha or push inc imul (bad) loope mov inc shrl mov pop add or mov add (bad) in or jbe adcl cli scas xchg iret xchg jecxz jmp leave das mov cwtl stos dec or inc cld lcall or jae or xchg jg push (bad) outsb gs cltd sbb (bad) cld xchg arpl sahf dec stos sub inc or mov inc (bad) cwtl cmp mov or or jmp push cltd in (bad) mov out iret push adc dec gs xchg mov and ret cltd rorb imul sub (bad) sub xor outsl adc fmull repz lods (bad) mov stos xchg jg cwtl pushf pop sbb hlt lods test or mov (bad) fisttpll loop xchg pop int out dec inc push or push or pop mov sbb inc out mov or jo daa adc data16 lahf add call sub aaa mov jmp jecxz adc rcll mov scas cltd pop sbb or js cs add mov cmovae stc xchg xor or push adc (bad) pop js jo imulb inc pop sub loope jbe inc xor in (bad) cmp cmp or jno es in or jg movsb aas xor int3 adc xor pop xchg ffreep mov les cmp sub sub fwait push lea (bad) mov in std cmpsl mov or xchg into (bad) or xchg mov scas imul sbb aas sub dec xchg xor cmpsl mov inc add mov add movsl loope add cld pop mov loop mov stc scas (bad) push fld std rol pusha loopne cmp popf cmp movsb or movsl inc jle add adc repz mov out fisttp mov insl xchg cli mov cli pusha inc sbb sti mov stos into add jge hlt xbegin negl mov (bad) or enter and or inc aad insb mov jl and push pop or jbe insl sub cmp cli jmp sbb outsl fneni(8087 icebp xor or pop sbb pop cmp into push out sub ret or pop sub pop adc scas cmc jns fstpl push movsl xor xchg loop dec add repz out les jne test jge mov outsb js ljmp or add adc mov cli and push xlat out bnd or pop xchg fdivrs pop dec xchg testl xlat dec dec in rcrl mov push sbb into push (bad) fildl mov inc mov mov inc adc mov ljmp decb or test push add cli lcall dec out hlt int sarl fucomp negl sarl sbb jmp dec dec gs ficomp arpl or insb xlat xor cltd dec sub cwtl out idivl xchg cltd mov ret pushf popa sub or jne fs mov das out mov (bad) int3 aas inc xor mov fldcw or roll int push ss pop mov es and loope (bad) pop iret repnz dec inc mov dec dec push fadds pop and fldl cmpsw imul sbb stc jnp dec call adc mov test rcl mov push leave dec aas and mov jo jno add adc or push and cld sbb xor (bad) jmp jl gs lahf dec jge mov or loop into inc mov or xlat mov mov (bad) notl loope mov xchg sbb hlt stc jnp pop je mov and or enter adc (bad) into insl jecxz xor imul aad pop and inc adc add and test sbb xchg cmc mov mov adc mov sub inc mov scas sti jns push out or xchg lods repnz dec int3 rorl xchg repnz in iret leave inc adc add es fldcw scas je cmpsl out scas ljmp loop or ss or ffreep test in or lods dec out out mov mov or lret cld fcmove adc or sub mov mov stos or and or mov adc out add xchg mov dec test sbb adc ret rcrb or in loope pushl push pop mov negb mov (bad) dec movsb lock lret or and stos out xchg test xor (bad) cmp push mov stos push out add or dec sub mov fcmovnu sbb or jge scas push adc into push aad xchg cmp sub push or lock dec roll stos dec sarl inc imul daa adc and xchg imul out pop pop dec jmp shrl std jbe xlat push push cmp push and insl jecxz add jp imul int3 fpatan outsl fstl mov test jno inc inc nop sbb out mov inc mov fcmovu loop (bad) or stos jbe and dec imull in out xor int decl fldcw shl (bad) icebp loopne sub pop hlt fsubl add sub dec cmpsb lods pusha mov (bad) or sbb dec cmp sahf and stos or (bad) hlt mov not rol orl (bad) pop jge stc lcall or cmp mov pop cwtl or pop cltd sbb add adc add mov lock mov and aas fs repz dec hlt paddsb repnz ret adc adc fisubl push or sub mov jnp push inc lahf add in or dec mov and pop fimull mov loopne test loop pop adc mov mov push or inc ret mov pop mov test mov or scas stos mov cwtl add jge or stos and sbb mov in in movsb xor sbb mov or test or adc xor xchg stos js adc jbe out xchg lcall adc xchg fisubl mov xchg sub jmp or inc xchg mov call int3 push cs fnstenv int fcompl js xchg test sub cld shrb xor xchg mov inc pop fsubl imul sbbb (bad) mov enter into inc or loope xchg push mov add pop pop lahf out lret out inc daa jecxz mov scas addl das bound mov test push aad stc jo sar push xchg sbb rcrb fnstcw xor jne imul (bad) or popf or push xchg (bad) pushf mov or test cmp push and add push push or rcll (bad) mov int3 (bad) mov stos lods enter inc call jecxz cltd cmp and mov ja fdivrl dec xchg xor ret jo lret push or sub push cmp sbb xor mov arpl pop arpl andb mov pop mov das mov test rol pop fxch xchg lods cmp cmpsb push mov jmp or out incl aad es jmp outsl sub sub push and ljmp push outsb pop sti or bound es insl push or inc sub xor or ss pop loop dec inc or mov or out xor cmpsb clc (bad) shll mov dec leave and pop add (bad) scas imul repnz sbb mov popa addb es test pop xchg or push test or dec jnp sbb cmp test inc xchg ret out pop or and loop xor cmp fdivs in add and add sahf iret cli rclb jmp int fucomi std ja pop dec (bad) enter fnop or (bad) push xorb inc cld divl lret inc pop mov mov mov es bound cmc adc sub les ss jae pop mov xor dec pop cmp (bad) shlb fimull into mov ficomp icebp mov sub jne mov cwtl mov xor es cmp lds inc or stos mov mov cmp mov pop insl int ljmpw ret dec mov cmc cli jle pusha add daa std mov roll and test cmp push (bad) lock push pop adc lcall inc mov inc mov into notl sbb xchg cmc or mov jecxz jno mov gs push cld dec adc cld push fprem1 lods push dec mov pop adcb cld in xor pop xor popa (bad) mov inc test or jle add adc lds lods dec lock jmp aaa cmc test in cli outsb xor push testl (bad) jne mov xchg sahf cmc cli je mov addb cmp pop stos aaa jne cmp xor and ret je mov or addr16 jmp psubd and jns stos leave or out mov dec jecxz or (bad) lea aad (bad) fsubrs insb in or cs test xor rorb cs or arpl ss int push xchg sbb daa addr16 or into aas cs icebp and fbld pop subl xchg mov aas sub loope lcall divl jnp,pt cmp push pop push inc sbb insb xchg cli mov cmpsl jg add or mov cmpsb mov sbb clc sub lcall (bad) cmp xor mov or mov adc or jecxz jne mov cmp or sbb jns aas and mov or jne nop or and jb sbb cmc (bad) out pop cltd inc and shlb sti sbb mov dec or fcomps dec mov outsl out aam mov les adc xchg xchg into push add mov lock or sahf ss in lods repnz jp dec dec pop fwait sbb fcmovnbe cmpsl pop rorb or mov mov mov inc or lds add or and mov push xchg add out or mov pop mov add jno (bad) xlat call pop jmp fistpll sti hlt mov mov lahf pop mov jle sar jg lret ss leave cli adc or ret inc pop movl popa (bad) or imul mov xchg lods or push cmp out sbb push stos or insl mov cmc push int stos sub or sub mov or icebp mov and (bad) or jp adc cmp js jle lahf fisubl push cmp sub pushf aaa je (bad) and mov jbe vpmovzxwq fsubs pop or mov cmc or pop or jb ljmp ret sub test mov and pop dec sub idivb sbbl dec in dec lock paddq nop mov icebp loopne addr16 or cld pop or into arpl outsl aas or cmp sti mov push psraw xor add mov add (bad) cli les or (bad) loop sub or rorb mov pop dec push out test dec adc mov cwtl add push in mov or (bad) lock sub push (bad) jnp popf or fistp add imul mov sarl aas jbe outsb pop add dec inc mov or cltd (bad) push scas sbb dec movsb and icebp or sti add push jbe mov mov inc cld outsb imul dec add (bad) jno mov repz ss dec push imul test xchg test jge xchg outsl je and and mov adc cltd (bad) sti or xor scas add sub pushf leave inc addr16 jecxz rclb add or or lea mov loop adc out adc inc or or dec jns jns or mov div das aaa lods and repz dec xorl aas incb adc insl xchg and mov imul call jge or js loop mov inc add or pop daa mov (bad) idivb mov or or test fisttpll jb cld cmp hlt mov scas or mov lahf xor into out jmp gs inc or pop push or aas in or test repnz ret addr16 or mov xchg lahf xor dec cmp mov lahf gs (bad) testl xlat aaa pop dec je lcall mov mov or ficom daa js or dec xchg and ss mov sarb test push add add outsl mov jmp repnz jmp sbb jb leave lret mov or jle fucomp inc ficomp fnstcw mov cltd enter out pop fcompl adc pushf jp adc daa add mov mov (bad) sbb aaa mov cmc das sbb mov pop clc pop in xchg lahf mov or faddl rcr out push mov outsl repnz cli lcall sbb insl or mov pop push mov xor mov dec shrb movsb loope fdivrl pop mov jge and adc (bad) andl push sbb adc frstor or lret jno fmull mov pop adc repnz and dec sub add test cmp xor or stos cltd ljmp or les jg mov sbb data16 in fcoml inc add stos ja cld jp aas sti sub push lods fwait les imul pop fstps int3 pop int3 pop cltd push cmp push dec and cli gs pop leave in or or rcrl and or jo cvtdq2ps mov dec mov inc test stos or dec inc icebp cld dec xchg pop push push or test fbstp or lea imul cmp shrl cmpsl push or sub loopne div jl adc fildl inc push repz mov out xor sbb jle sbb repz jmp in mov (bad) or lock jno mov dec mov jmp aad roll aaa sub xchg hlt rolb add mov ds or sub cld repz ficoml sbb cwtl test imul in cli shl adc or mov inc or add and loope fdiv dec aam mov inc cmp lods or in fs push loop loop push bnd xor mul or dec arpl (bad) or fcmovb inc mov lcall dec sub cmpsl jge jecxz push int hlt das sbb imul or jae dec or es sbb or mov (bad) and fadd lret leave (bad) cmc out add mov push cmpb sahf or in jmp cmp loop aaa sub out sub sbb bound or (bad) jbe or mov into adc push data16 add popf or xor sbb add push mov mov nop call inc inc xchg dec mov or sti add xor bound addr16 and (bad) (bad) stos dec or push xorl xor pop inc adc iret shrl jmp and cmc ret jb xor jbe jp nop movsb xor fcomps stos adc xor movsb sub repnz sub shl push add (bad) fidiv ja xchg gs pop or ret pop add mov or xor sub into std inc call mov xor add add sub add jno push cltd dec mov dec fldenv mov jne adc push bound xor xor xor hlt or lods mul test mov xchg jl mov inc maskmovq imull test or adc in enter sub popa xor pop fsubp or sub aaa or in mov loop lret push or sbb or popf xchg fisttpl jb fist dec add adc cli movsb jbe dec addr16 xchg xor pop test xchg or sub loope cmc repnz ss in mov mov mov (bad) or sbb lea sub mov or (bad) add lret divb test out into mov outsb fs insb lock ja xchg ret jo adc (bad) div push aad call pusha or cwtl popf (bad) jecxz xor rorb or and test movsl and outsb fwait stos (bad) cmp jbe shl add movsb cmpsb lods adc repz dec inc popf mov mov mov das fimul adcl add cmp and xchg mov mov jmp add loopne mov (bad) sub popa shrl repnz fisubr cmc movsl mov xchg dec cmp icebp and test mov add repz std sub cli sub mov push test inc aas je pop test lds stc pop push dec rcl fdivr push jg notl add in ja cltd aam pop add mov jge outsl scas xor jmp divl das push mov or fimul test jmp xchg aam or shlb push add sub fs rol jp lods mov loopne imull loope pop nopl std insl dec dec push mov or or sub xchg cwtl loopne pusha mov dec add xlat nop cmp inc mov (bad) and mov mov stc test jle jbe,pt xor imul cmpsb out adc pusha pop sub push add jg out pmaxsw jno ja pop std lret das push inc adc daa xchg out cwtl pop or inc cmp sub pushf jb pop pop outsl jge sbb dec mov popa out or and scas dec dec stc xor jno adc dec push jecxz adc stc and repz gs xor cmc sub clc pop in dec jp mov adc movsl lea xchg addr16 adc enter add in jl mov in pop adc cmc pop xor mov rorl data16 add ret sub test inc or subb mov cltd int3 popa mov ud1 or mov std out sub aad adc dec or arpl or cmp test sbb ficoml notb popf or sub loopne (bad) sub and mov data16 test loop (bad) adc das fcmovbe sub adc repz mov dec testb mov in inc orb mov push dec lret out sub mov (bad) mov std stos mov or (bad) xchg push adc mov push ss rcll xchg mov leave jnp imul sbb or xchg sub or cli push cmpsb popa sub and or stos inc adc (bad) and sub mov cmp sbb add mov and and out aad fmull adc movsl xchg scas sahf scas sbb lahf hlt sbb cmp or cltd mov fidivrl sti lds push cs std scas (bad) sbb in lea stos or xor lds daa in fistpll push dec inc push test inc ss nop notb pop xorl imul sub xor leave add (bad) pop lds je xlat lahf mov test add or clc jge movsl cmp in mov or ljmp out mov inc sub loopne or outsb adc repz and rcrl rol mov fild push inc fiaddl sub or jae sahf pop dec ficomp xchg or push cmpsl cmc cs sub popf (bad) jno sub sbb add jmp xchg dec test or iret inc arpl gs adc push mov jecxz or div dec mov ds cmpsl enter and into jbe pop fcompl or es daa sbb or scas mov lods enter rcll scas mov sub call or push mov mov outsb pop sub jnp cmpsl or or push and mov cmp je dec hlt es lahf inc pop mov or (bad) out mov leave sti fcomp bnd pop or mov sahf imul push push sub push dec mov pop sub (bad) pop pop jecxz adc sub shlb std sbb pextrw adc cmp popl idivl inc cs icebp dec cmc xchg jl ds (bad) repnz das loope pop add and lock sub (bad) js insl inc add hlt ljmp adc xor hlt mov mov (bad) cmc lods stos shrb out notl arpl dec or mov push test or xor jb pop cmc std xor cmpsb sub pop out lea sub jecxz mov pop aam xchg test or add mov pop ficomp sbb mov sarb add inc mov or push scas jmp hlt pop lea aad cmc and divl jge or gs aam mov xor cs in cwtl aad or inc sub sub loop (bad) repnz pop jmp dec sbb mov xchg cmp cmpsl jle or nop movsb arpl push push cltd sbb push or cmpsl xchg out push cwtl xchg or lret loope test pop lret add inc add pop not out fisttpll xor (bad) shrl inc (bad) (bad) sbb mov (bad) pop push mulb jmp enter sub das jno jmp daa and xchg or sbb or (bad) mov leave sub push fisubl in nop mov xchg das xor (bad) dec popf mov cmc mov or jne data16 std cmpsb xchg sti push aam jb imul psubd test test cltd pop jns subl sub popf (bad) jns icebp subl pushf pop xor mov mov jo add push movsb mov add cld inc and push or idivl cli arpl out xchg lods mull pop pushf (bad) test and cli (bad) sbb fnsave fst mov inc (bad) repnz push outsb adc jns testl fstp cwtl xor or push inc lods idivb sub call out arpl movsl jo sub shrl and mov scas sub daa or sbb mov dec aas mov or push xchg fldl xchg (bad) in mov gs in mov lcall rorl lret push mov nop dec inc adc mov add ret imull outsl jmp cwtl lret inc xchg jecxz pusha repz dec test jp (bad) jns movb test or add fisubrl in or ret sub imul push (bad) cmp xorl xor leave sub popa push or mov xor jecxz test mulb outsl sahf imul sub mov pop into dec in aad mov xchg icebp xchg scas imul jg push movsl mov mov push shl jns or lock aad adc jecxz into inc dec or jmp push add xchg lea mov imul or insb cltd mov push mov sub aaa arpl not aam ss je inc insb fistpl mov push sub or cltd jp scas dec push dec or mov pop mov jmp pushf movl xchg imul (bad) jmp jp mov lea dec out push or mov (bad) aaa mov and fidivl inc push dec or stc call push or in push push inc lods sbb pop add inc or jae mov or sub inc push ljmp jnp jp jmp cmp aad push and ffreep rorl push mov sbb or pop lcall xor jmp or repnz inc arpl sub into hlt dec sbb cmp mov inc mov dec mov or ja inc (bad) gs cmp call mov insl dec fsubrl jne xchg or mov jbe test or rcrl mov sub lds pop or inc sub add adc xor test mov xchg mov jns add (bad) mov or push mov js jns push lahf mov pop or in jnp sti xchg mov push lock push or std pop or in (bad) or and cmp scas aam cli aam sbb and or stos lods (bad) pop or add call dec xchg sub and lods xor fldl mov sub or mov inc xchg jecxz push inc push stc or sarb jns jge leave (bad) cmpsb inc cmp xor popf not sub mov jo notl mov les mov aam push std xchg mov (bad) cmc loope dec scas pop jb inc jb add mov lods push mov jo int3 mov mov sub stos push lods addr16 mov cmpsb call cmp pop pop inc push cltd jne fadd mov clc xorl scas test fidivl mov cmc dec (bad) or pop jl divb sbb sub add lods leave inc (bad) lock mov mov fsubl cmp adc adcl std lcall aam push push jmp dec adc mov in cmp in pop jns mov push and lods movsl sbb cmp fidivrl nop imul in sti xor jl push pop cltd push lock inc shrl cmpsl sbb dec mov lea jle jae inc inc adc js (bad) or jge push mov cli jg divl jb adc dec ljmp jae or inc (bad) lock mov pop or xchg repz cmpsb loop lret hlt inc jns mov mov push mov repnz aad inc jle lret andb push dec es mov sub std hlt sub daa fs daa mov xor sbb test test dec (bad) bound cli jle or das (bad) cltd in decl stos inc lret push std out imul icebp sbb or cltd xor adc or cs push jecxz fldcw je dec push push mov aad pop shrb rclb or loope cmp or sub neg mov aad leave hlt (bad) cmpsl or inc push sub push mov jae fld mov in pop xchg (bad) (bad) call (bad) jne ds or bound dec xor roll dec jbe or sub or jne mov push in push inc xor in mov sbb dec sbb sti (bad) je scas popf je imul and rol outsb in ja mov jno add mov or in xchg push ss pop (bad) sub or mov xchg push scas jns jbe loope mov stos xchg int mov cli js fsubrl in int3 xchg jmp ljmp mov add test sbb cmp pop dec xor call sahf loopne int3 into mov dec or sub bound add dec repz (bad) adc stc cltd inc aam add add push cld inc jge pop dec or dec cmp mov int hlt add stos mov (bad) into lret lea ret and sub maskmovq idivl dec and push mov in ds or mov dec xchg lea enter inc mov sbb jmp or (bad) rolb or cmpsb mov push aad in (bad) mov lahf and or ret gs cmpl sbb rclb sub arpl aas mov or add or out fs push xor pop data16 dec popa ljmp mov scas lret jo push repz lock xchg or push push loopne sub or mov push outsl sbb dec xchg sbb cmp dec imul (bad) std aaa inc mov cmpsb xchg fstl dec (bad) dec cmp or cli dec das pop rolb inc dec add repnz push neg enter lret mov lock jno xor je pop gs or or and fnstcw shll out mov lret lcall mov repz jecxz pop cwtl ljmp jmp mov adc inc dec jecxz shl ds stc dec xor xor insb jbe out and xchg or stc stos adc scas int xor nop cli xchg orb pop pusha sti cmp ss jecxz out mul push arpl lods fcmovnbe stos mov pop mov or test mov dec cmp mov push and int jne jno and outsb dec and sbb in mov push dec jle and xchg stos lds inc sbb loope jbe lds jp sub sub jbe add push rcrl in out adc roll xchg mov mov xchg fs add gs adc pop pop test jg push adc xchg mov or fldenv or pop dec (bad) push jbe mov mov insb and scas mov or push loope test call nop ds add repnz and jecxz inc (bad) mov iret aam or fdivl cmp push or test cmp ja popa mov lret repnz sub or jmp jecxz aam out or in das xor xchg inc nop jecxz jle or jne xchg adcl add add idivl inc lcall pop (bad) pop pmullw add jnp mov fimull std stos out mov jb dec in inc test xor lods or push add popa adc lret pop shlb mov scas push cmp mov dec jns xchg jp stc call xor imul int3 inc or insl imul mov sbb fwait jns xchg mov sti add jp mov mov push rorb adc push cwtl incb xor (bad) jnp lods daa cmp leave popa jae addr16 fstps repnz dec cmpsl mov fldl loopne or ficom adc adc es test fistpll and mov add mov outsb stc popf sbb test xchg sbb ljmp push shlb ss or xor pop lock cmp movsl push ficomp xor mov add (bad) cmpsb dec out add cmp xchg jge loop rcrb pop jmp (bad) ds or test xchg or stos in xchg jle mov hlt xchg repnz test mov push dec sbb inc mov scas xor pop mov scas xor mov mov dec ljmp fucomip loop sbb sbb mov ret pop sub ds xor out pop jge mov xlat sbb fcompl sub (bad) divl into jp or and cwtl and mov push jb add push stos pop mov xor cltd jp ljmp (bad) cmp (bad) out or out (bad) ss fnop inc and jle adc jnp mov loop push cltd cmpsl adc adc cmp or mov loop xchg inc or bnd adc sti mov out (bad) jo scas fistl cmp adc mov or (bad) adc dec (bad) xchg push (bad) stos fist xor les and push mov xchg lret divl out xor daa out fdivl mov (bad) or push stc inc das mov sub cltd shll fmull je pop jle jo ds mov (bad) movsb iret push les mov lock add adc xor sub mov clc xchg fs pusha push xchg movsb xchg adc xchg add push pop mov fnsave (bad) repz mov test dec (bad) aad jg (bad) mov test mov dec dec push test sbb fdivrp cmc popa add mov scas insl paddusb in adc movsb xchg mov cmc jge mov lahf jo push cli repnz out lods mov leave adc push lds subb fistp test out out dec lahf mov test xor adc in stos cmp pop sub jnp mov adc inc sti roll and test or jecxz push out adc xchg cli push cmp push pop lds xor ss sbb cmpsb movsb jb mov insl add and jmp jecxz in xchg and imul icebp mov push or loope add or pop pop out pop out mov xchg xor sub ret pop fdivp xlat or mov imul dec mov inc bound cmp jne sbbl add cltd mov sub gs loopne fbld push sbb inc shll pop rcrl sbb or out lcall or div and aam imul jp cmp mov cmc or out (bad) adc int3 dec cmc daa adcl gs stos les test or in outsl enter add cmpsb or int3 sbb ret xchg imull mov aam test adc add imulb cmp in je outsb sti imul mov pop jno mov mov mov sub std dec cmp push aas mov mov aam lods leave jmp loope jle mov fisubr je mov jnp push push arpl xchg jnp repz insl (bad) divl sub insb sub xlat fidivl mov ror push aaa or pop mov cwtl xlat fldt xchg or leave shlb into sbb adc push (bad) jmp outsl or out enter push pushf mov push and or lea xchg or lret mov or fldl lahf mov or jo pop (bad) xor les es fwait sbb jbe dec jb mov or jae fwait jecxz mov out and cmc mov dec inc aas fstpt jnp sti nop dec in mov hlt subb or sbb inc and push add jns mov aas jae or loopne adc mov mov test hlt fsubl (bad) pop ljmp or dec and mov insb pop call sti pop shlb stos notl and sub add dec pop mov out inc or sbb stos insb mov jb xor pop ret pop testb imul (bad) scas lcall fstl pop xorl cmpsl iret mov jle cltd push mov push test mov jecxz pop pop fnstcw mov adc xchg pop out xor test mov mov pop and mov jb cld adc (bad) cmc icebp pop mov fnsave out repnz jo aam pop test daa add pushf test inc or push cltd mov xchg and jb jg jbe fwait iret jo xchg shrb movb fldl or jae pop or dec sub into mov hlt jno jmp xchg (bad) xchg (bad) mov mov jl movsb cmpsl and push mov dec cmpsb into inc add std push jmp xchg mov fnstcw nop negl dec dec dec mov mov xor lods nop mul push mov xlat push test sub cmp ss iret adcl fcomps ja push (bad) call adc test sub arpl out lret lods cmc pushf mov sbb lock repz inc or push mov cli popa dec inc mov sbb add (bad) or and imul sbb lahf (bad) mov add cs shrl mov mov hlt fidivl cmp cmp divb jne popa or gs xor jb es fwait cmp dec and aam mul (bad) or sbb xor into or jp ljmp push shlb lahf int xchg xchg scas enter std test (bad) stos add lahf icebp bound xor imul xchg in es dec mov rcll jmp add jne test daa out mov jmp divb mov cmc (bad) push push jl jecxz clc inc jle (bad) xchg inc mov mov push hlt cli jnp dec divl dec aam and jle ret dec mov ret mov les fstpt hlt jle pop repnz jo call stos pop imul sbb xor adc cmp mov sbb cmc xchg pop ror dec jge jnp pop shrl mov int xor adc scas push cltd dec stc jl xchg push xchg ret jecxz out mov adc icebp (bad) ljmp mov mov add addr16 enter push mov (bad) loopne pop testb rorl outsl sbb cmc les xchg mov aas jl mov cmp scas in mov add arpl out ljmp dec jo dec imul push out sub xlat add mov xchg ja scas push ja xchg xchg dec lea sbb repz xchg xchg dec mov push je sbb lock lods popf mov into jo and aaa jbe xor mov (bad) repnz or lock jg out sbb in mov lock (bad) dec (bad) scas mov cli stos lock add xchg jmp xchg orl cmpsb rorb clc cmp or (bad) cmc mov cmp mov xchg dec push push repnz add push mov cli or inc jb jns sbb or insb (bad) mov lret ljmp jno ret mov in scas hlt xchg and or imul or cli sub mov or test in lret xor in shlw mov rorl cmpsl xchg stos aad mov pop ljmp addr16 inc or aaa mov xchg sub inc scas imul pop cltd std dec test mov or xchg insl in shld and (bad) mov or xchg push jle jno lods sub into or divl dec and pop div add adc cmpsl or shll hlt fs pop in mov rcrl imull xlat outsb loop nop hlt pop or (bad) push iret push sbb jg test inc push repz lahf push fisubrl or dec in pop testb or xlat push scas outsb dec push imul mov dec ja xchg inc xor int3 or mov sub or push mov leave or (bad) xchg dec cmp stos mov out or mov pop xchg pop cmpsb mov repnz sub mov pop inc xchg lret or mov out mov xchg jecxz daa mov or inc push or fildll sub jecxz jmp nop test int (bad) mov ja jno cmp push into lea push jmp add dec adc arpl and dec or imul or or sbb ljmp pop mov and mov lods sbb or ss pop xor out gs inc repz inc js es dec jge shlb mov inc icebp loopne mov cli in jle jmp push sti mov jg test div in xor and xchg jns pop (bad) std cmp in cltd or fcomi insb sbb clc or mov test inc xor fidivrl mov insb sub nop add pusha mov jae stos xchg xchg stos imul pop int xlat or push cmc mov xor out xor pop sub add test or (bad) jae cmp es stos enter inc add push mov in adc dec dec cmp (bad) test pop fdivrp cmp or icebp inc gs and mov pop js or mov cmc daa or (bad) pop mov scas adc xlat repnz and in push add fmul or pop scas out inc dec sub push xorl aad scas jns mov mov ficomp lret mov test (bad) les nop and std mov sbb je pop fimull or xchg dec call gs mov ret and xlat add loop mov int3 pop aam into (bad) ficompl fisub push loope or pop jnp push or pushf pop pop xor cmp repz iret push mov sbb stos lock into push dec stc jecxz mov or pop fsubs jae jnp mov push cmc xor dec jno cld or xchg add rol es (bad) sahf jmp push arpl sub jmp pop cmp push int jnp scas test stos stos out sti push xor jnp lock jge dec push jl fsubrs (bad) or cmp aad jmp rclb ret cmp add out aad sub or enter cltd in add dec aaa lods add into cmc sub pop or cld movsl mov fistpl dec push imul sbb leave and stc mov push repnz and faddp mov mov jae or dec ljmp adc pop mov mov or out imul or xchg sub stos mov or jp cmp push andl add xor pop mov inc in mov test popf add or push xchg sub pop sbb daa xor jmp jo (bad) jnp xor aas (bad) je or sbb (bad) jp dec (bad) out cmp (bad) jle xor jo push cld scas dec or mov dec mov pop fmulp fwait lock push mov (bad) popf dec dec insl and mov inc sbb rcr or push jmp (bad) icebp cmpsb dec mov lcall jae jnp jns jb jl insl jmp inc shl sbb lods cmp pop data16 add push sbb in inc shll adc push test nop push or jl sub sub out rorb fildl or jb pop pop movsl lods or or sbb push pop ljmp dec adc fidivl mov aam (bad) imul mov xlat sbb sub add push inc jmp cmp jge and or xchg cmpsl or push (bad) shll out jp pop and ret ret pop cld (bad) cmp fmull xchg mov stos js ret and (bad) das cmp lea jecxz cs test add lahf ljmp imul jnp test mov (bad) (bad) call shl sbbl popa cmp cmpsb movsb lahf mov xchg jmp add add or lock out leave jecxz cmp sti ljmp fwait xlat idivb dec icebp or lcall ds jl into xchg ret push scas xor pop jp xor js repnz sti pop in xlat mov pop ja dec push int3 imul scas push mov lea pop ret or in enter (bad) mov sbb jno sti push leave mov mov pop in push xchg daa dec inc out jle (bad) movsl hlt cmp testb or seto daa push test add popl into rdpmc mov jle mov xchg pop dec pop push mov (bad) xor mov fimull cli sub out jbe sti push jno xor popa loop cld addr16 fsubs or (bad) loopne mul int3 test je push scas cli mov mov add bswap and pop or jo push or sbb or adc call inc loopne lahf jnp imul aaa daa sti xchg sub loop popf clc pushf mov pop mov ret jecxz sbb dec or mov jb inc lock mov inc mov push pusha pop and imulb mov xor scas fstps into or js mov lcall or push (bad) dec jbe cmp outsl daa cs mov fiadd dec test push les cmp xlat or xor pop or cmp push and mov pop inc (bad) mov cwtl push cmc (bad) dec mov out mov (bad) imul mov xchg aas mov push jg out cmp scas or int test pop and mov fsubrl jl (bad) adc jno push mov and xchg or jg sub addl daa pop cltd imul sub push adc fstp cld lahf and enter mov mov sub lock daa dec (bad) insb fisttp sub or test jl mov adc (bad) mov dec dec inc mov push scas in shl rclb push loopne orl pop out push jl jp sbb cmp push pop xchg imul inc std inc icebp aaa lods cltd and nop pop mov pop test sbb aas cltd mov rolb ds or ficompl ja rorb sub lcall fs push push cmc mov jbe push aas lahf aad dec xor mov mov mov or and repz test in xchg sbb or cltd adc fnstenv or out push add repz mov or push and fmulp test icebp lods test scas add or hlt mov mov push (bad) fsubl dec or push mov data16 mov cmp sahf xchg repnz jmp call push (bad) fnstenv adc into loopne jne pusha test (bad) out or mov jno adc dec inc sub add scas sub jecxz pop or fs pop and sub insb ret add or fcomps push jmp adc fninit xchg mov negl (bad) mov dec arpl jecxz fmul dec jg cmp fwait mov daa out ret (bad) outsb (bad) pop repz or loope,pt movsb adc imul or test adc fcompl test enter ja leave fstpt (bad) scas cmp inc adc mov xchg inc cltd xchg (bad) hlt xchg mov bound fdiv lret test inc add mov sbb repnz (bad) mov roll mov pop pop in jecxz clc leave out insl push stos sti in loope xor enter or cmpsb data16 in outsl dec imul dec out fisttpll push fisttpll dec push or jne push fimul gs inc ficompl dec adc js pop ja pop or fs icebp xchg inc lret pusha mov add cli xchg lods fwait sbb cltd lcall pop dec js scas dec or xchg into pop jle call or mov clc or and jecxz add incl mov dec movsb or in pop jnp inc (bad) xchg dec push repz shlb and xor add pop jp std inc push fs leave pop (bad) dec aad inc fist cmp and leave inc arpl inc mov sti dec test push cmc call mov cwtl mov or test mov and dec mov and and push addr16 dec mov mov sti lock idiv mov fwait cmp jecxz sub ljmp stos jmp bound add or pop push inc pushl scas jecxz adc and test cmc iret adcb xchg hlt imul cld daa mov js or mov jne lea cli mov arpl mov std adc adc pop loop in or loopne test das fsincos jo push mov adc or pop mov mov jecxz movnti or sbbl mov mov push lods or (bad) xor fcmovne les jle ss or and pop movsb por leave mov das jns mov sub shl dec or test inc mov or dec cmp gs loopne ljmp and imul lret rcr xor dec pop stos or cli add aad js or adc pop inc in (bad) lods xchg lock fstps jne in add in and rclb inc idivb lret pop out xor pop dec int3 xorl inc mov ljmp (bad) out xchg cmp mov adc imul jns or pushf xlat adc cmpb mov ret push lods fdivp and and mov mov cmc js mov fcmovnbe mov stos adc adc flds sub or jl xor hlt mov inc leave jb dec sbb dec leave mov xchg jmp test jno call xchg mov out mov adc je stos and ret adc in or outsl sub ss jle (bad) xor mov xor push and mov int adc test pusha aas test idivb out enter cmp popf or adc fistpll add mov jmp stc jae out test rcrb movsb jle popf dec jmp fwait cwtl dec push imul adc inc and pop xchg in and pop jg test fldenv push daa imul popa xor in insl sbb or mov adc lret lret dec cli jnp es out xor dec cltd xchg repz addb push test mov fs stc dec jecxz in pop mov insb xchg push lret aam (bad) fisubrl jae pop add dec das int (bad) cmc push xor jecxz bound bound das int3 in js std or mov icebp shrl xor insb movsb imul aam fmuls add mov lods imul pusha jecxz push push jne pop inc mov mov xor push popa mov cwtl pop idivl inc adc sub into int3 addr16 mov imul std aas mov pop hlt push xor in outsl lock cs pop insl xor xor lret dec cmp mov push push in pop cmp shll cld ja jae es sub mov das adc (bad) repnz test cmp pop dec add pop lock sub xor cmp mov pop pop cmp push dec xor jno aam insl adc jo daa push adc in vmovaps dec rolb or sbb outsb push sahf popf std cmpsb adc daa int loop out dec icebp xor addr16 jle add loop jno jns leave push mov mov lock sar mov add cmp mov fwait inc test test xchg idivb mov xchg rolb xor adc movl je dec imull je and shrl mov dec ds jmp ss data16 stos mov ja jno xchg test imul mov jne out flds dec adc fimull mov dec movsl outsl sahf movsb cmp jo ror inc mov idiv add jmp mov push leave shlb xchg jns cmc cmpsb dec sub fnstcw movsb adc cli xchg cs repz push pop rolb fs dec mov cmp or arpl (bad) mov xchg flds cwtl out rcrl loop leave loopne and mov and cmc bound jp test jg mov sbb test ljmp push mov icebp sbb cmp ja stos xchg add dec inc insl inc mov xchg loopne jge imul cwtl fsubl push (bad) cs fldz mov std lahf mov cmp xchg int mov stos mov adc or sub popa mov out lea inc in negl (bad) cmc xchg mov add or xor test fisubrl pop loope in mov scas jg mov xchg or iret xchg stos call cwtl notb jnp sbb sub lret inc adc xlat cmpsb mov pop cmp add lods or push scas aas fisttpll add fisubl adc fldt popa adc sbb mov push add loop stc (bad) xchg (bad) xor les and or jbe pop stos inc pop push or jae xchg fsts inc call mov out fimul sti jns (bad) jmp fwait setle lahf cmp xchg push scas inc pop in leave pop stos popa mov dec call mov sbb lock imul sbb popa and sbb or gs data16 cld sbb dec test sti (bad) (bad) mov jecxz rolb sub notl fimul int (bad) push addr16 adc or mov pop cmp (bad) popf rcrl push rcr sti mov lock out cmpl dec or jmp mov inc (bad) (bad) mov and dec cltd jb movsb jl jns es sbb loop,pt loope push dec and in pop idivb xor or in inc mov sbb dec pop inc push xchg fisttp cli pop mov loop xchg pop gs (bad) sbb dec loop pop (bad) in mov iret mov sbb or add sbb xchg xor out push leave add mov fsub sbb dec pop in fs mov dec mov and or jo loopne pop lock pop clc mov xchg lds push insl (bad) bts adc xchg and icebp imul adcb push sahf imul mov dec test or outsb sub mov cwtl cmp push aaa cmpsl ret test mov shl adc ficom icebp imull aam xchg cmc xchg push nop mov lds fimul cltd adc test mov mov stos push mov add push test push cld adc imul pop pop adc rorl fnstsw es jl or sub pusha ss mov sbb push adc hlt fildll xchg std inc cmpsl mov adc movsb or std xor fistl dec enter push add bound sbbl sub lds test mov insl orl add test mov pop or and mov dec mov rcll loop xor jne pop call xor or rorb je shlb pop sti xchg push xchg or test (bad) loope or cmp sbb sub or inc lahf and (bad) jmp lock or xor mov das xchg out pop or pusha pop notl mov dec das push in lods ss fcompl sub adc lea nop pop jns xor or loopne (bad) mov hlt lea fnsave cmc cmp ljmp push jno lahf popf sarl fistpl adc out sarb pusha lcall cltd mov lock cmc cmp lret (bad) lock test loop sahf cwtl pop dec dec daa aaa sub lahf sub push pop insb push popa out fnstcw fnstsw ss add imul fwait mov je ret aas cmp das iret inc es cmp or mov mov jae xorl mov or test add in push add cmp mov jo fs mov notl ret leave sbb mov shlb es and and push xor in roll out sub sarb mov dec inc add popf out sub loope imul or in jle sub inc push (bad) cmp or lods push ret inc ficoml xor or movsl mov rcl int3 out ret or and dec rcrl inc call mov mov lods test hlt pop (bad) mov mov push movsl ds or mov or or or cltd je sub pop insl sarl mov add dec mov popa mov idivb (bad) mov mov or pushf fstpl fcomps scas mov push push or jnp jns test adcl xor aas jl int int3 hlt ret dec dec inc jg or in jl jo lods pop mov or cmp pop or xlat outsb aas inc add or push mov or ds movsb and imul add rcrl idivl outsb push pop in push or popf sahf outsb or inc cmc rolb out cmp push adc jne xor add adc hlt mov arpl call dec test clc sub fs outsb ja mov lret or aam cmc pop mov cmp dec dec in sub add jne or push int add jge imul testl mov add lock or imul inc or loop cmpsl mov jmp pop sub rorl out jecxz imul enter jbe jno or repz xor dec or mov push xchg dec fs mov fnstcw and sbb and mov stos enter lret bound or add popa cmp rep xor inc and cmc cmp or mov lock movsl adc aaa inc adcl push sti push cld cmp xor js mov movsl scas out push cmc cmpsl lcall sub push xorb lock jmp cmp and addr16 ljmp inc dec leave mov lea pusha fidiv int3 or imul pop test loope (bad) pushf pop pop xor and or jmp lods sbb jb out push popa fst or repnz mov pop (bad) aam pop or lods push negl repz kmovb int enter mov pop mov leave or lret adc dec idivb pusha daa sub in xchg or enter sbb sub (bad) mov loop pop add cli add xor fsubr lds or mov and mov sub cmp or je mov cmpl fimull mov ja setle sbb sub or and sahf adc push push xchg lock cmpsb sarl push rcll cmc movsl adc inc dec dec xor jns jo pop test pop stc in sub dec fldl sahf pop outsb gs loop or jnp fsubrl adc mov sbb add xor fimul hlt sbb xchg gs lea sbb push mov xchg insl pop subl jecxz push inc pop call jae dec cmp in adc pop test bound aas shrl in ficompl jbe mov dec neg fstl enter (bad) lods repz sbb push push mov lahf test sbb cli outsl repz mov dec repnz push or ljmp xchg cmpsl cmp cmpb cwtl mov fsubr mov mov rclb ret mov aam jmp out jle xchg inc mov rcr sahf test int (bad) mov sbb cmp addl or and xor xchg or add adc cmp inc stc mov sbb mov push arpl fdivrs in inc adc sub or ljmp sub pop scas pop xchg hlt ret stc sahf aaa jne sub xchg and sbb adc xchg push iret or jbe popf cmp inc mov sbb or dec jge ss cli fsubs or or iret pop rorl inc add stos mov ret lret inc je in mov (bad) mov xorl testl sbb shl movsb sahf inc test and mov jno sub subl xor sar mov mov jb lcall xor (bad) cmc scas (bad) cmp sub or jl lock xor (bad) inc lret push pop cwtl in roll mov std (bad) data16 gs sub add fadd push or daa push or xor add jg test pop div int3 es or (bad) mov bound fcoms jg and and nop and add push (bad) jmp or lahf sub mov jge add adc or sbb xchg add repnz xorb (bad) cmp daa rcl (bad) push sub dec dec gs pop cltd loop fdivrl cmp hlt jb stos enter loop mov int ffree mov pop test xchg or sub jmp mov pop (bad) push test loope test mov or xchg mov or pop add lock add mov imull aaa mov je jnp test pop jns into dec jp stos aas or js jnp jle or enter mov pop hlt mov dec sbb dec inc push popf or mov sbbl mov in sub (bad) imul or mov sti pop lea or loop jmp imul insl roll test test pop lret mov jg mov mov stc dec cli in jecxz sub stos pavgw cmp std xor push or and adc sub adc xchg xor lods fldl sarb sub ja bound lods test jmp stos out insb sub bound leave dec pop lret mov inc insl inc cmpsl pop add sbb jo jnp pop daa (bad) mov gs inc rcll in inc jne leave jg lock dec nop fisubrl pop fnstsw or jo bound (bad) fldt mov dec icebp loope insb aad jecxz push xor inc mov mov mov sbb sti data16 fsubs or pushf dec cmp lret repnz out mov loop leave xor pop aam shll or pop enter fincstp pusha sti jae (bad) mov faddl decl mov mov (bad) xor push and dec cmp test push adc pop mov inc mov xor fcmovnbe iret mov movsb lcall pusha or jecxz xorb test sub or shrb rcrb pop iret roll mov xchg dec leave sbb test lret mov sub push (bad) push mov or mov xchg sbb out call mov cmpsl (bad) xor out adc sub xlat mov pop pop xchg (bad) push or adc popa stos dec movsl and test add decb and dec js or scas adc push (bad) pushf push outsl jne push lock cwtl notl lds adc andb scas aaa mov in mov orl aad pop stc cmc cmp pop fiadd js andb and cmpsl (bad) shrd rolb ficoml dec mov stos inc sbb loope adc jns ss and gs cmp cmc fnop in add jmp cmp dec mov (bad) sbb pop and movsb leave lock out dec fsubl mov pusha sub xor outsl cmpsb sub pop lock les xchg jl sub dec icebp arpl jb adc xor insl lret mov icebp xchg mov (bad) jnp push sub pop test mov scas jb fisttpl add xor loope jmp imul or or shll addr16 add icebp lcall ret notl jle popf (bad) sub xchg mov or cld rclb jg daa add orl or mov mov jmp mov or sub cs aaa sbb arpl icebp fstps cmpsl mov stc test push adc sbb and (bad) dec xor cltd imul cmp notl inc xor push leave (bad) mov mov jb pop not iret xchg inc into inc mov fdivl jg hlt int3 cmpsl loop lds test xchg inc push jns inc mov add cwtl or adc dec (bad) and fdivrs bound push (bad) cmp fnstcw pop add int loop sub mov pop mov add pop or inc arpl mov insl or mov or movsb or sbb xlat insb dec or (bad) insl test pop or inc push inc hlt mov sbb pop scas jae sbb in xchg lea test (bad) jo dec mov arpl int3 cmc std je or sbb add push lds ret mov movsl or hlt mov out pusha (bad) mov or push adc xchg and or fldt leave mov sar or notb inc mov push fcomps lcall test sbb lcall dec pop jo sub int rorb lock cmc inc mov sub adc mulb xorb push cmc or xchg (bad) or loopne xchg pop aad das ficoml adc ror andl mov jns mov (bad) mov imul fcmovne jns pop aaa cmc repnz ljmp sub je xchg scas adc out sbb pop out loop mov jmp pop (bad) push sahf add and loope test or mov adc pop test and xchg pop imul test and std test push movsl subl pop mov cmc cmpsb or aaa add sub or jo test fstps je push divb scas insl in or or aas or push mov mov lock jae and xchg daa jecxz addr16 (bad) mov orl pop xchg dec clc jg mov cmp enter or mov stos inc pop fimull rolb out jle sbb sub repz dec sahf add mov test jg rolb call mov movsl and lods cmc std cmpsb test pop cmp shl xchg and sub sub std add (bad) jmp lods jo lock ljmp inc mov (bad) mov xchg scas pop repnz add dec xorl jnp push das test mov dec xor mov rcll test iret xchg mov adc rcrb cmp (bad) lock clc cld addr16 jmp ror test lcall dec cmp aas sub inc leave xchg xbegin cli jmp lret (bad) dec pop xor jecxz (bad) and xor mov jge dec or mov std out inc dec dec mov xchg dec cmpsl jecxz inc fstl nop test inc in aad into or jb xchg test pop int outsl or push stc cmpsl lea int3 popa pop or jnp decl jg lods sub lahf jb sub xor rcrl inc push icebp cmc xchg iret and adc or das aad rorl mov and sub add ss jo cmc push push pop cmpsl xchg or pushf pop cmp sbb sub sbb into or lods mov xor bound jmp scas pop sub idivb imul lret test push jmp mov jo dec cmpsl jne xor aad adc sub mov mov (bad) mov push leave push ja int sub push mov rorb push inc imul ljmp xor popa and and pop cli or mov iret xchg (bad) test movsl (bad) cli out aad js mov sub mov sub ss arpl sahf and or cmpsl or cwtl sbb hlt lret mov cmp xchg or int xchg imul mov sub jb inc faddl rolb cltd iret mov adc icebp jecxz jg ret imul int3 shl pop fimul loop in outsb or xchg arpl es dec xor (bad) test aas or aaa mov xchg out test test leave mov or unpckhps leave mov mov push pop cwtl sahf in xchg fisubr xor adc aam into or movb add (bad) xor in add mov add pop push add jns imul ljmp mov cmc fcomps jmp ret or xchg push or test mov aas aaa mov call sub dec (bad) jbe xor push imul mov arpl mov mov pop out imull push sub cwtl inc or mov icebp lods dec bound cmpsb jge nop insl cmc or int add fcoml cwtl mov jmp aam lret jmp mov and pop inc add dec or ficoml push or xor inc out add adc icebp or or andb dec cld mov lcall sahf cmp insl dec push lods out push icebp dec or cwtl mov out pop sub push cmp xchg mov mov mov dec sub jb inc stc aas xor aam movsb or inc out test call cld add and sub xor dec pusha test in or pop scas jbe ss popa jl dec push into inc sbb mov sub inc jmp fsubr pushf push leave xor lcall or scas aas or repz xchg pop or dec sbb hlt mov dec int or pusha and popa push div in outsl xor or xor fiaddl enter inc lods out scas xchg orl repnz shl fild pop testl loopne insb sbb jns imul push std flds inc jge stos sub or fadd xchg and xor adcb sbb out push mov add or imul lea movups sub sub mov pop add sub cmp add cmp sub sub jbe clc dec sti js mov sbb mov and lock (bad) cmp xchg dec loopne xchg hlt pop add adc jbe dec leave imul fsubrs sub (bad) or push (bad) loope add rolb aas ficomp sbb mov loopne or into (bad) (bad) int test or out in (bad) mov pop gs jo rorl loop outsl mov add es or xlat imul mov sahf out cmc mov (bad) or dec mov adc pop icebp aas add dec (bad) repnz add xchg sbb loope into std mov test les (bad) pop mov iret xchg (bad) in pop (bad) neg scas dec sub idivb sub pop cltd lahf jno add dec imul adc imul dec (bad) addr16 sub jg cwtl jae cwtl ljmp rcrb mov daa push jno stos cmp mov dec and mov inc jp scas or repnz cmp gs push mov imul pminub jp sub cmp inc scas mov add (bad) aad hlt cmc fimull pop in or mov clc insl imul cmp dec sub adc fstps sbb test or inc std clc sti ljmp pushf gs sbb add lea (bad) mov divl stos sub aad inc loop cli mov out imul (bad) (bad) mov add loop jecxz or add pop push movsb lahf dec mov jp pop push fimul mull push lock mov stos sub sahf sti mov or (bad) adc out aam dec repnz jns shrb or inc mov cld or popf imul xor dec adc add push fnstsw insl pop loopne pop (bad) mov mov jle dec (bad) fdivrs or add shr test leave xchg sbb leave pop push add sahf pop lock and pusha idivb test (bad) int3 mull add sub push test mov imul push push sbb rcrb mov out or jg mov or sub or cwtl shll cmp or in or cli add mov mov ret cmp or arpl dec in and jp sbb (bad) lret iret xor sub loope out aad jmp sbb insb adc or lahf cmpsl cld aaa sbb mov mov push aas loope sbb imul xchg jp dec enter mov ficompl imul dec push movsb idiv rdtsc stos int adc ss lds mov adc push xor or sti mov mov lret nop and out out stos cmp mov movsl cmc adc rorb mov mov or jp jb mov jl lock or and pop or (bad) imul mov jne pcmpeqd mov test in cmp cmp add mov sti pop jno jno sbb addr16 jge in scas (bad) hlt push jl dec test pop cmc (bad) (bad) cmp pushf or jno add add leave dec dec stos mov mov mov js push pusha aam (bad) jo leave std fs pop push (bad) xor xrelease xchg (bad) mov or fsubrl int3 stos aam dec sbb adc stc sbb fsub sub or pop mov js and test ljmp mov and rol jecxz pop enter pushf adc push test (bad) dec push popa jp mul and stos dec out pop repz cmpsl mov decb mov ljmp icebp loopne adc or in mov push jmp mov xor das (bad) (bad) leave pop aaa popa or add idiv flds fsubrl into or push push std xlat call (bad) or in enter or test sbb mov cmp cmp dec mov aam outsl or jmp ss mov dec jmp cmp fimul (bad) jbe and jb push mov mov es popa mov or sub neg (bad) pop hlt movsb add push mov insb enter sub nop jmp sbb hlt sub add rcll xor fsubs jb loope pusha pop add in ror mov push test xchg or clc lahf jmp es hlt or shlb scas or jns dec push xor xor stos (bad) not subb sub sub int aaa sbb aas dec or cmpsl or pusha push jmp daa or jecxz add or fnstsw mov mov stos xchg or insl inc pop sbb mov mov and out scas pop mov cmp dec mov cmp add xchg add inc fwait push mov gs pop pop push cmc lds daa popf dec jmp or stos sub cli sub xchg mov pop fistpl xchg inc hlt cmc jg rorb into mov jnp mov adc leave mov pop jecxz es pop ret sbb sub cmpsb divl jbe xchg mov jno jne lea fiadd sti sbb nop sbb xchg push mov scas adc jecxz sub jmp leave test mov popa push cltd stos shll push mov add sti ss ret out minps pop (bad) push cs inc fistp xchg das je cmp add hlt out jb sub shrl dec dec and mov mov xchg pop sub out arpl out push or mov adc sub cmpsl cmpsb mov inc cmp adc sarl xor (bad) push (bad) mov xchg xchg (bad) loop cli mull bound stc pop ja mov gs pop shrl or icebp loopne jp gs mov sbbb adc dec add adc push push xchg or jnp push or mov or outsb adc nop sub stos in xchg (bad) test xchg scas or lds (bad) or add xor fisttp cs adcl add or lcall pop out or aaa add iret test or jns out mov dec xchg or lea mov and (bad) in push fisubr popf fdivl pushf or imul fdivl popf pusha sbb je jns (bad) fwait sub lods repz repz cld pusha rorl hlt or xor sbbl cli mov fild js adc scas pop sub push or sub inc neg xchg cmp hlt jnp pop je dec add dec (bad) xor mov in int3 mov ret xchg orb or sub add xor fildl iret push mov mov cs icebp inc xor dec out cltd hlt ds es jmp or xor mov scas (bad) dec adcl and addr16 popa or test xor or fwait in pusha jne addr16 xorb pop pop xchg aam add aam jle sub or rcl insl or adc (bad) xor ds test jne push out mov inc addr16 dec and inc mov (bad) (bad) jp scas adc ljmp dec push inc test fistpll hlt repz cwtl add mov (bad) pop dec shrb mov dec sahf push jg or dec hlt xor sub jecxz sbb or adc sub or pop pop pop idivl rorb sbb cli lods (bad) sbb push or dec sub jecxz aas in stos pop adc bound out rcll mov dec iret jmp or push fsubrl test test bound mov adc push add or push test and sub inc sbb loop or cld dec mov sbb imul test or ja (bad) imull or cwtl fwait adc xor xchg xchg rolb lock sbb jg cmp xor sub mov dec push or movsb das mov es or xchg insb lret xchg outsb aaa dec test out xchg push sub adcb cs xchg inc iret (bad) in mov sbb push mov lods inc arpl sar and mov or pop out cmc ret fisttpl or rcrl mov orb xchg imul push or dec int cmp fisttpl xor out jb and push or mov sti jp lods jb add imul cmp add jg pop out and add mov adc cld cltd ljmp loop pushf pop or push dec clc or adc sub outsb xlat rclb add cli (bad) lods divb add or fcmovnb icebp and das dec ss notl cli bound pushf fisubr cmp jo xchg mov call pop insb fcomps in dec fadd adc pop xchg lock and test (bad) rorb movsl pop outsl mov sbb mov test (bad) mov repnz idivl jns lock sti in mov inc cmp out (bad) xchg test popf jns sub pop (bad) xlat or sbb or and xchg out into aad adc (bad) inc mov int3 test pushf inc jno sub jae or add aaa je jmp sub popa wbinvd mov push data16 mov test out in cmpsl cmp cmp inc fldl push push push or (bad) pop inc (bad) mov jo int3 or jecxz icebp mov mov or sbbl xchg or and (bad) fistp lods sbb negl stos rclb icebp adc mov popa or call pop orb fstpt mov shl popa pushf fimull icebp arpl ret cwtl out push wbinvd dec lret outsl pop in adc add ja mov rcl pusha xor jnp jecxz lcall dec sar pop je imul mov in popa mov adc mov jne es ret cmc imul repnz sbb lds daa in flds test adc cmp out jl mov mov adc or inc push cmc out add or push sti or jle mov daa imul mov jno idiv in dec ljmp sub add das dec jge inc loop push outsl add movsl adc decb add and push sub std int3 push dec or sub jmp pop cmc test outsl sbbb adc mov adc inc sbb fs ret adc or lods push leave ljmp jb call cmpsl jns movsb mov jge adc int3 daa or adc cmp dec or cmc mov or lock fwait sub mov or popa xor mov sti ss int3 push sub xchg lods mov and or lock mov std and or push mov push icebp xor ror or lods (bad) cmp inc jmp std (bad) jno adc jmp int jecxz insb popf bound pusha mov and in stos js out sub xor or cmp xor in ja mov imulb mov loope inc testl and sbb push lahf rcll add aam sahf push or popf sub aaa in cmp lock xchg imul sbb or (bad) xor adc pop or insb sub out sarl es popa (bad) xor das fisttpl outsb or (bad) mov inc mov jo loopne dec mov mov mov or jp sub jns pusha push push and adc test or xchg das jg or fwait bound aam and shrb xchg pop mov jecxz or movlps sub loop cmp xchg cmp or jae push call fmul ja mov decl mov out divb pusha and cld jmp inc mov jne das (bad) sub (bad) or ljmp loope or mov sub or fimul pop out cmc sub or stc push loopne lahf movsl xchg or scas xchg test test push enter fidivrl dec dec hlt pushf and jg jg mov sarb jbe push leave inc popf xchg mov mov dec insb jp (bad) sub inc lahf and jne jp add cmp scas jno fwait gs inc ja insb xlat or sub push or add negb in lock es fstl stos hlt jmp in pop mov icebp cwtl sub (bad) fild out xor in stos lcall xor or (bad) cmp adc or in sub dec out movsb shr seta cwtl mov aaa pop icebp test decb xor jle sbb or ds push adc pop and mov adc leave insl lret sub mov orl jge add mov dec jns (bad) fsubl lea cmp ds stc cmpsb fs push push repnz mov jmp fwait sbbl push push add mov inc add mov rcrl adc ljmp shlb sbb jo scas dec roll pop and lahf jno outsb aam dec sub and push inc mov or or testl leave cmpb (bad) int sbb decb sti fldenv or mov xchg hlt not les icebp in stos mov cld cmpsl xchg or push lods sub or sbb or (bad) cli out (bad) add mov push add out inc test jne mov lods aaa es jb mov hlt sbb lcall mov iret ror mov sbb ja mov or insb popa movsb lret jns or rclb inc or and test cwtl add or imul jb inc pop or daa cltd aas adc pop push dec sub mov icebp jp cld test aad mov (bad) fldcw cmc dec jne mov (bad) mov (bad) shll into or mov insb xchg fadds sub xchg bswap movsl jae or mov push (bad) jle or and sbb jecxz outsl idivl push mov pop adc sub adc add mov push ss mov idivl jp pop (bad) test mov lods xor in or rol nop and push in lahf push sbb pop fsts mov or push jno adc mov in fwait sbb decl fs jne inc mov (bad) or lds xor xor jns fdivrl imull mov mov int3 push push test fsubrl fisubl sbb xchg xor (bad) adc cltd lret repnz mov (bad) mov (bad) neg pushf mov lret dec xor sub dec mov mov in sbb inc enter and xor cmp mov daa sti jge inc lcall loop push rcrl mov adc mov jns jmp int3 loop xor aad mov notl cmp or or inc mov xchg mov mov outsl hlt dec lods fsubrl aad aaa or xchg insl idiv inc or aaa icebp adc push inc iret dec std sub jbe arpl (bad) xlat lods ljmp add adc cmp pop sbb in call iret out loop imul lea ret dec sub xchg fwait movsbl pop dec in div repnz test adc shrb arpl cmp enter aas inc gs popa js dec pop mov pop mov xchg mov or popf dec arpl cmp es loopne add int3 or clc cld pop mov lock in decl imulb xor ds sbb ja mov mov fs pop sub and int3 sbb clc cmp loope mov lret ljmp push aad movsl aam ficoml popf movb dec jae push mov ljmp add inc xchg inc inc sti pop loop and cmc idivb in mov push insl adc inc (bad) and icebp jbe aam inc pop insl and and push ret add jecxz sbb or leave xor cmc (bad) sub mov test sarl (bad) jp fucom notl and daa or jns add and dec adc adc dec xchg fs adc iret sbb cmc sbb int aam inc lods sbb in fidiv jge xchg push repnz ret out xchg cmc out sub insl push or rcrb daa push or mov or jno sub sahf mov das paddusb or iret mov mov adc dec stos xchg pop mov mov dec lea std adc cmp mov sub xchg arpl push or dec mov cmp xchg dec cmc cld sahf inc cs pop in push mov jb jl add mov push sbb std test pop insb pop idiv fnstsw (bad) adc sti jns jo sbb cmpsb test (bad) push cmp mov movsl fs sub xor dec jno addr16 and cld mov xorb incb sub add cmp dec clc fildll pmuludq pop lock push (bad) dec inc pushl or stos sarl call ja pushf or mov and push lds or jge add mov add pushw or xor mov sbb mov test or je xor jp dec push dec (bad) aam stos insl pop push fstl sar add mov or mov or in mov xlat lea lock fcomip test cmp iret out push cli add push call imul notl arpl sub leave aaa push sbb lret les add std arpl fcompp outsl or into aas test in mov stos mov rclb sub or mov and adc adc jo push and push push es push js adc mov jl pop adc ljmp jge jg pop lods fs sarl and (bad) enter ficomp lea aaa (bad) mov scas fcoms fstps push popa (bad) sbb (bad) divl js aaa lods or add mov fisubrl adc in pop xchg (bad) (bad) ja rorb idiv pop push cmp out mov xchg xchg or or (bad) or mov mov dec das cld lcall in inc cmp test mov bound fdivrs divb inc ds je movl frstor or divl ljmp pop sti push ret cmp mov out aaa (bad) jecxz or scas xor rorb sbb scas call stos push int3 stos mov sar fcomps or mov xor dec adc add fldcw and or mov mov jle fdivrs addr16 sub leave (bad) imull out (bad) xor xor andb adc or mov jnp dec (bad) pop jl movsb sub fimull xchg fisubr scas out imul jmp test or jbe test adc hlt pusha adc test add sarl mov iret cld adc call sbb scas stos jb adc dec mov stos icebp push (bad) stos nop xchg pusha pop fidiv jb js mov popf and sub test adc sarl mov pop cmp xlat jns push stc mov and adc lcall stos mov mov mov cmp xchg mov cmp popl loop (bad) ret mov cmpsl notl stos push add mov or mov dec out inc mov arpl pop out or jge xor xchg pop in xor mov jns pushf sbb (bad) jae dec mov jmp xchg imul pop adc test jl in fisttp dec (bad) movsb fisttpl addr16 ret hlt and mov mov mov fmull lahf mov adc aam (bad) push dec arpl jno jge std bound movsb sbb push xor mov push lahf out jmp inc xchg inc jns mov adc popf xchg or or mov dec daa ds jns mov in push sbb and adc shll out add cmp inc movsl xor mov (bad) cmp mov gs push push leave pop pop (bad) movsl or mov ret push and or or mov (bad) jbe aaa sub lods mov sub out adc or cltd test out jmp out leave fbld cmp iret xor aam les ljmp or test sbb push stos sub ljmp inc jne pushf pop xchg adc nop mov add push mov cmpsl out enter stos push popf cmp or jecxz mov push imul lret adcb or out xlat (bad) adc shl jne cli fidivrl test imul cmp fstps decl inc cmp cwtl lahf or jmp scas push and adc jns enter imul adc mov adc orl push mov fidivl or not adc xrelease movsb lock sbb fmul jge rclb or insb or push xchg daa mov imul adc add ret cmp inc (bad) mov stc pop test fmull mov lcall insb push mov or (bad) jno lahf outsb cltd ljmp cmpsl mov pushf cmp imull (bad) hlt sub xor jecxz mov or jl mov popa andps (bad) cmp or insb mov dec pop jne adc mov stos test arpl jl sbb repz dec or pop cmp sbb mov iret dec cmp (bad) jno or jns mov ret fnstcw jmp daa clc rorb jmp xor push jl aad outsl add ja test sbb sbb mov scas stc psubsw jle imul mov push and out aas dec push lock push sahf dec add xchg enter jl or out cli popa ss in cmc scas xchg jbe adc ret fwait pop test mov push imul xchg fcompl sub sub out inc rorb std cmp lods adc stos pop pop or stc dec xchg repnz inc out sahf in xor loop xchg out dec sub xor push push lds pop push or inc mov or jmp push int mov jno out and and or push jns sbb adc xor and xchg xorl insb pop dec (bad) neg or rol cmp (bad) xchg in lods and fsubs into dec xor push rorl pop jns mov xabort enter mov rorl mov cmp inc adc (bad) jmp cwtl adc rcll xchg loope scas mov into or aaa push and adc or mov fcoml cmpsl popf pop je or test ss js test aam cmp mov or enter pop or and stos xchg pop insb (bad) loope into jns,pt or pop xchg sub adc or in (bad) pop loop scas adc mov mov add scas daa inc cs sub xchg cmp and xor les dec pop lock sahf or test cli mov mov (bad) fistpl ja cli je shl dec in add jnp repnz sub push shl iret and cmp push es ficomp xchg aad pop push push jmp or xor mov insl test mov sub add subb hlt add or jle in gs (bad) xor cmp fnop jmp imul rol xor cltd test xchg jle arpl pop lea add or rclb (bad) jnp ja std sbb push xchg sub mov scas sub lret imul add lret stc or scas mov into sbb sub dec dec push inc mov cli pop or imul lret sub loope mov or sahf xor je xchg (bad) dec sti clc jmp mov sub add xchg or push loop inc or sub mul (bad) push push lcall test das outsl andnps js or shrl push dec push sub adc aas cs and mov shrl aaa idivl cmpsb xchg lods sar pusha push outsl add sti inc or adc ret xchg adc out repnz fldl movsl addl push mov xlat fcompl xor lea loopne jecxz jb or mov ret push pop cli adc pop mov push cmc cmp xor faddl shr imull dec pop movsb or pop movsl add dec dec loopne xchg (bad) repnz imul insb sbb inc push out les push hlt aaa sbb xor or xchg loopne mull aam and mov sbbb adc test jne or sbb cmp adc lods pop push jmp mulb or loopne mov xchg repnz mov xchg pop mov scas into dec leave push scas lret mov sub pop lcall scas and sbb or adc stos fwait adc push cmp jno or ret orl out or test sbb sbb mov jne (bad) cmp or adc dec scas cmc dec or xor aas inc fcompl or iret lds cmp aad and es pop inc test leave xor (bad) or test add add mov imul push nop or loopne adc aad stc hlt mov fs adc int3 hlt ja dec jno aad les push xchg add inc cwtl sbb push or push in int3 cmp hlt xchg pop mov or (bad) arpl into push mov std loop or mov mov and cmp add jb sbb ror push test pop dec dec sbb or aam divl cltd js stos sub or bt or ret daa cmp pop lret cmp add negl and jp je pushf testl push dec mov ja cmp add jmp and lcall jmp (bad) stc in jo add repnz aam scas stos imul shrb add (bad) sbb sub xchg pop ss adc mov jle (bad) sub push fdiv jno bts xchg sbb mov pop icebp ss push push mov pop data16 test cmp or push sub cmp daa insb gs xchg fxch pop cld sbb and mov jns lods movsl sub jecxz jecxz test xchg cmp imul aam jp push adc fiaddl or clc adc xor jb inc mov jne sub pop ds cmpsl ficoml std cwtl jo mov (bad) test jl xor loopne inc nop mov dec nop add push int sub lcall pop push sti adc sti push add cmp cmp arpl cltd sbb fucom outsl sub lds pop movsl and ja int3 lahf bound ss inc jle or push push scas fstps test xor adc jp je mov pop sbb out mov dec pop jle cmp (bad) fiadd mov or xchg fild push and ja sbb lret add aam sub dec lret das in jl xchg or adc rorb enter fild pop or push cli ja aam add mov test bswap mov jbe dec mov out push pusha lock (bad) or fdivrs lods stos enter xor out dec dec or sub add cmpsb inc or cld cli aad loop (bad) mov inc xor imul sti pop mov popf dec or jle dec push lea or sub sbb inc aas sub dec (bad) enter jecxz cmp rorb fnsave dec fldcw in xor cs jecxz jge inc jecxz rclb sub shrl gs add and addr16 (bad) cli ljmp fisttpl sbb mov mull sti mov in and pop repz sbb jl out outsb pop or daa push lods xorl xchg frstor pop in stc and je lock pop or enter jno pop sahf je sbb pop (bad) or leave pop sub add int mov fsts pop jnp leave pop stc or or sub fs jle mov fisub or inc xor loope inc inc xchg jmp xor into mov dec adc (bad) imul inc add cmp dec lods pop mov or or mov (bad) lods mov sti ficoml sbb (bad) jnp mov jns dec pop cli cmp ljmp stos dec mov out nop dec and or xchg into or and mov mov testb inc ss leave sub hlt (bad) mov (bad) or xchg jg and adc mov leave cld mov sbb ret xchg out xchg aaa sti int mov add jl sbb enter out imul mull mov sahf sarl (bad) stos fsubrl lds or out outsl roll cmp pop jg adc loopne and pop ljmp or mov or mov fild or mov jns loop mov sub loopne addr16 or shlb xor mov loop je (bad) dec insb das push test pop jbe (bad) out or or sbb (bad) (bad) shl push mov test fcompl lock jb imul add add in test mov or ret test iret repnz lret cmc dec sub rolb dec incl and lods pop popa xor in test pop insl insb or (bad) in adc adc xor sbb or iret or mov pushf xchg sti lret push mov jmp cmc jae push sbb jo clc xchg xor into les sub jge ja inc es push push imul int (bad) pop lea fwait (bad) xchg bound jg add dec enter add sbb inc out stos push insl add dec sub add jae imul rorl push cli stc or std sub push pop xor pop xchg sub pusha xor out scas clc ret ret insb repnz push jmp adc sub frstor push fisttpll imul fs dec dec loopne mov repz and lock jno sbb popf and jecxz repnz sub std int3 sub fdivs jecxz adc adc jo (bad) xor or mov lds adc adc mov and jmp insl jnp dec in mov test mov gs hlt push xor aas mov (bad) (bad) fisttp stos imul or fcoml push pop sbb leave dec add arpl fs popf or inc jno mov cmpsl (bad) or ja push sub or test or mov or stos ljmp jno fldl lret mov fcom popf addl sbbl in add dec mov inc popa push sti inc xor adc mov test mov repnz bound cmp jl and push mov dec mov aad lock jno daa (bad) insb out fcoml lods cwtl (bad) mov jmp pop popl repz xchg stos cmp dec jmp ret arpl bound dec mov leave mov pop jl and ja das neg adc xchg ret addr16 jl lods insl orl imul testb jo bound and outsl mov addl mov adc (bad) je xor xor and lds imul (bad) pop int arpl pop push or xlat cmpsb lahf out aaa fbld or add mov popa sbb pop mov in cmp cli mov stos ljmp xor mov sub rcl dec inc dec test add push mov pop mov fstps cmp scas cmp or adc sbb enter xor int pop xchg mov push push add mov push jle lods add in inc inc lock enter pop lcall jmp hlt rol into and bound sbb pop mov or xchg out fisttpll mov lret insb mov cmpsb lea cld mov rcll mov xor lock sahf inc push out pushf sbb mov ljmp (bad) test jle mov inc jecxz or add cmc pop std test rol adc orps jae daa lods or sahf push mov xchg add push cld pop fisttpll repz jbe int mov cltd insl sbb clc cmpsl test cli (bad) ror dec mov mov add jg (bad) int test ja gs aaa jnp xchg push sub lahf incb sarl xor leave call and xor out jg adcb cmp or fdivl dec mov jae ret stos sub iret daa and cmp or ljmp xchg wbinvd inc cmpsl pop or aam xor sub xor aad jmp mov mov xchg push jle sbb or test fimul out dec mov mov jecxz in negb loop sbb ja dec or inc cmpsb gs push adc (bad) jle sbb mov test imull pop fisttpl leave inc and scas add dec out test dec mov hlt andl (bad) (bad) or mov dec cmpsl movsl or lock add (bad) pop xchg or xor adc pop (bad) or sbb mov stc mov sbb popf cmc (bad) ficompl shl fdivl pop and sub movsb or and in mov repz jle out push out dec xchg or or xchg int gs fs and sub xlat dec pop fs mov cmp adc int popa mov (bad) mov stc cmp cltd push jp stos sbb pop inc stc leave sbb out in pop cmc xchg or dec sub or cltd and mov movsl sahf jmp rorb je jmp jl shl lahf sub push xchg xchg fdiv or mov pop pop dec stos (bad) test or mov or or rolb mov mov jns popa jo jo sub cmp int3 mov jo mov outsl inc inc addr16 xchg mov negb lahf pop mov lret test loop push or add out dec and icebp mull push lds aaa adc lea mov xchg or leave add sub mov lods sbb notb repz adc dec fildl les dec xor pop adc push jl xchg pmuludq adc or add add push lcall mov cld bound fsubr jp daa lods mov hlt mov cmc cmp outsb mov leave push cmpsl scas jb jbe mov inc scas mov or leave mov test cli js inc repz sti movsl pop jl mov scas lock adc or lahf cmp push scas fistl push jmp xor mov jns mov add movsb push push mov ret leave inc xchg jo adc mov out out popf out or shrl push outsl mov mov ficompl sbb imul sbb into mov clc cmp pusha in shl fisub adc cmp leave mov scas stos mov dec (bad) or repnz (bad) bnd pop int3 fwait jg rcll jl je mul cs or test push cli iret mov aam rolb mov or in aad mov (bad) mov push push xchg xor scas pop mov mov imul and loope or or pusha test adc xchg imul lret xorb xchg mov or lcall bound aas in loope repz or icebp add xor pop jp arpl or out fwait aam xchg imul dec add xor je pop negb sti ljmp and xor or xlat aad repnz es pop jno pop jns and mov dec or mov add mov arpl mov xchg inc jge cltd mov leave mov fimull into ss in rol push push in or mov pop jge scas imul data16 dec in (bad) aad and mov pushf decb test mov outsl xchg jae movsl mov dec dec mov out adc icebp in fnstcw push fstpt addl or mov xchg outsb pop sti sbb sbb push sbb ss scas mov xor daa mov lods dec add dec sbb ret rorb mov jo pop inc pop xlat sarl jnp lcall cmp cmpsb push mov (bad) pop jnp sub lods dec or unpcklps add lock sbb or imul fnstenv mov push loope imul (bad) and sub leave mov jno or mov push or add (bad) mov movsb sysexit loope or repnz mov stos rep mov cmp rolb aaa jecxz icebp adc adc ljmp push sub cmp (bad) xchg inc (bad) into jecxz jno push insl sub aas xchg mov mov outsl aad out jbe lret repnz sub lret incb das sbb testb mov lret mov aas aaa or iret pop pop or lods or fmuls xor mov mov cmp ret lock lret or ljmp jl arpl outsb and xor mov jae push sub dec test cmc jle inc inc lcall sbb aam xchg data16 imul mov stc in or or xchg aam ljmp and loop mov stc xchg mov push mov dec adc xor insl mov std add cmp dec call add xor (bad) jmp enter popa push adc js test aad rcrl sub push push aaa cmp xor and es in repnz adc loop popa out mov jbe adc sbb (bad) adc and cmp pop cwtl pop leave cmp ljmp (bad) adc nop (bad) pop push xlat loope (bad) add adc add adc xor ret cmp add ja data16 sbb push (bad) sub dec int3 lret ja xor xlat mov jge stc fsub add xor push push xchg jbe pop repnz das enter sbb shrd mov insb aaa sub jns in addr16 xchg mov pop add fnstcw (bad) in jg jne loop fimul imulb pop adc sbbb popf jnp mov mov fadd pop cli jle (bad) or inc xchg sahf mov sbb inc or (bad) lock mov das or pusha daa pop or dec imul repnz lahf mov jns adc repnz fwait ss in or push cs ret movsl scas adc pop ja jne lea out dec jmp repnz scas fcos mov jmp data16 imul out scas xor pop dec dec jp lret or addr16 fs aas or ret aas frstor imul pop jmp imul xor cmp idivl lret ds aad int mov cmc loopne call in stos xchg ss jmp xchg sti clc cmpsl or addr16 pop adc movsb hlt inc pop jo and mov push adc (bad) in mov or and xchg daa std sub in or out lret addr16 and gs (bad) push ret sbb test pop lret xchg bound shl sub cltd cli or movsl lahf dec or push test xor mov adc mov or sbb sub and inc xchg scas aas pop cli fistl adc push or xchg xor or (bad) mov cmc mov mov ficompl mov and mov sti std pusha xchg mov cwtl sub pop push xor frstor and cmp insb test rclb lods das jbe stos push sub cld or (bad) fsubs call push int3 dec leave mov jbe popa adc out sbb sti hlt loope inc sbb (bad) mov adc mov cwtl pop dec sub cltd incl jns inc cmc pop scas divb xchg mov xchg imulb lods inc xor stc sub xchg push stos in jecxz pushf (bad) or pop arpl xchg push and pop mov cli jns mov leave fidiv (bad) xchg ljmp std inc shll loop sbb inc idivl lcall rolb frstor idivb fcoms lods inc (bad) loop out sbb into mov or pop icebp jne push push xchg pop lds pop add mov or xchg es add dec pop in cmp dec addb dec mov xor push int stos cmp sub shll lcall push pop js sub inc arpl fwait mov lods pushf scas popa rcrb push xor pusha jmp pop xchg lret aam flds push mov push xchg mov sahf movsl jae pop dec dec adc mov das je enter and lret or inc add test repz cmp mov xor test pusha aad sbb call mov loopne pusha das cmp or pop pop push out xchg mov ss inc repz fcomps fwait mov jle and jp adc push cmp out dec or mov repnz sar (bad) pop jb xchg lret mov sti xor loop push or insb shll cli lret or sub out popa jge stc mov leave mov mov out or cltd pop jns adc lods ret bound sbb and jle adc fidivr sub jg push mov pop shr sahf movsl mov add xchg test and fisubrl lods scas pop lret jp xchg lret or xchg pop mov and and imulb add into jo arpl lahf dec cltd push adc imul cmp std cli jae lods cmpsl push fisubrl loop or dec mov pop jno jae aas pop push mov daa or cmp pop pushf sahf (bad) mov rorb mov rcll lret (bad) lea push imul out sub dec rcll adc out stos movsb pop mov or dec out imul adc nop pop int xchg or lret bound xchg je push popa dec pop push xchg popf cmp mov mov (bad) js cmp leave es cmc pop adc minps ficoml fbld jne nop xchg mov dec mov das int3 mov mov add xor push jno es xlat xor fbstp adc adc rcl xchg cmp nop xchg or jg aaa mov (bad) dec jo rolb dec push fcompl cli icebp pusha daa test inc or rorb ss scas test cmc lret in lods sub dec cld mov rcrl (bad) (bad) or fistl cmc xchg ja arpl fisubrl shl test (bad) lock fstpl and outsl mov and jnp in jae f2xm1 dec push pop or mov dec jl outsb testl int3 into or inc imull fcoms lds mov cmpsb int3 mov test rol fcompl add pop inc dec (bad) stc sbb mov lods mov cmp lods inc add icebp jno arpl ret xchg and pop and data16 leave push or daa jmp adc hlt je (bad) dec mov mov outsl jp xchg testb das pop scas xchg push mov rcrl inc stos push or mov loopne lret mov cli lock jle push data16 and push inc fmul sbb ret mov jmp (bad) insl mov inc into int push xor add add (bad) adc imul dec adc enter xor fxtract dec aad and push add sub pop jae sub dec or push jle or in insb and sub lea or xchg dec or mov lea pushf xchg pop sbb jnp xor mov jecxz pop and or lock cli lcall (bad) cld xchg iret mov or nop jecxz movzbl dec in (bad) incl jae popa (bad) or imul xor ss push enter bound in sub imul mov or pop xor cmc push cmp push xor notl lock mov in dec jns lahf sub push pop cmp sub lods (bad) or add cmpsl movsl mov ljmp mov insl dec aam pop test mov mov test stos aam jno loope jle outsb hlt pop imul add xor icebp jbe (bad) lods cmp (bad) mov xor xor lret dec in aad (bad) dec add insl mov (bad) mov add dec rorl or (bad) cld icebp std adc or mov add lcall clc sbb fsubrl enter in lods leave (bad) cmpl ss dec adc orl add arpl mov movntps mov idivl xor or xlat insb dec add in mov xchg clc jmp jmp mov mov aam lds or jns jo movsl jbe or xchg lret rclb stos mov jbe inc or daa push hlt je inc imulb and jns dec add icebp or imul or stos dec sbb fldenv add cmp lcall stc decl sub push mov adc inc test les insl mov cltd and pop mov sti cmp pop in dec cmpsb sarb adc dec add cs or inc mov aaa popf and aam sub add aas test mov add push and fidivr lahf imul jmp pop loop push dec pop dec popf push iret loopne rorl (bad) in lea cmpsb xchg xor std in aad scas aam push jmp ljmp rolb loope or (bad) mov inc bound fs xor stc negl stos ss cld cmp xchg xchg dec cmp sbb in inc or iret xchg mov cmc cmpsl aad dec xchg pop sti lock das inc repz icebp subl (bad) mov mov stos sub push xor dec xchg repnz fimull or xchg lods push loopne or daa sbb push (bad) cmp adc dec xor nop pop mulb add (bad) mov dec lods push add xor or addr16 loope cmc or push inc lods call mov imul inc or daa xor and or sub cwtl shlb push repnz xchg ret jno xor and dec jle mov mov mov push stc sub std fistp aad mov int insl pop xchg xchg loope mov xchg cmp fcoml mov sbb cld jecxz xor jmp lock jb mov cmpsb mov scas sbb cli jae cmp aam or mov dec dec xor subb imulb in jns jmp cmp add stos mov ret call push or and loopne add (bad) addr16 pop das lods cltd or push adc repnz push or fisttpl add mov shrb enter mov or fildll in test imul push adc or mov arpl sbb cli cltd out sbb out aas jmp adc test or xchg loop aam xchg out in dec gs inc adc lea aam add fdivrl lds push fdivrl mov cmp outsl loop es pop dec cmc dec jns dec in or mov fwait imul xor hlt jno cmp int3 ja sbb xchg sub test jecxz mov pop xor or repz lcall mov (bad) or pushf xor out cmpsb std (bad) sbb cltd mov mov sbb jle pop cmp (bad) std hlt out push loope inc into scas or ds aad cli or sub subl ficom jns (bad) popa mov cmp cmpsl xor movsb or (bad) bnd addr16 divps je out jb push push inc cltd stos or in (bad) fs mov ret aad shrb mov popf or and sub inc add repnz test mov out fsts pushf nop or push or iret inc mov out mov mov sti in enter or adcl dec dec (bad) ljmp or xchg jns or loop jge gs push or adc in mov imul testl lds jmp into dec rorb lods dec in gs cmp push dec (bad) dec lret push cltd cmp out mov pop adc add xchg mov or adc or and xlat movsb fistpll out rorb sub lret and lret push imul xor and out popa xor or xchg (bad) lea xor setb jnp sbb or jo fldl outsb dec or lods adc into ret jo lahf mov and xchg or cwtl mov fsubrl dec std xchg out pop dec or aas into inc mov push dec hlt mov lret xor out xchg cs repnz jecxz push (bad) jmp and or pop cmc jnp mov push mov dec pushl js push sbb in mov inc mov adc xor xchg out dec ljmp fcomi ret (bad) lfs jl xor cwtl lahf and sbb or mov mov xchg mov mov mov mov leave int push movsb dec add add mov and adc adc sub adc pop mov sub xchg into or ja cmpsl add and or ljmp or cmp aam sub or std (bad) mov mov mov cmpsl push dec sub dec mov mov inc or lock or jg fistpl movsl sbbl cmp insl add (bad) jae push add pop dec scas adc pop lcall and sarl stos inc mov mov (bad) imul test push cmp adc dec fidivl je or jne mov cmp out and xchg js test push mov or shlb jg xchg add adc inc icebp ret dec or std aaa sub or adc bound bound pop in rclb in popf sub fistp mov rcr sub add rclb mov mov div jno and add sbb sbb mov scas jmp loope mov or lret in jbe lret out aam pop fwait or out and or sbb stc call or dec insl imulb arpl shrb mov das or aas lods and push mov lds lods dec mov sub fidiv (bad) dec and stos lods push dec or adc fs repz popa and jp ficomp pop or and mov loope pushf and sub sbb dec fwait xchg ffree mov movsb ss mov jns pop xchg jge js pop dec call fstp adc insl (bad) leavew dec mov sbb hlt sbb jmp cli negb xchg sbb shll cmp jo (bad) and loop sbb inc scas or mov jb dec mov cld (bad) mov mov dec xchg inc or xchg or fdivrl stc or pusha jge lods in and scas aad and pop mov loop push or mov imul cmpsl push jno dec ss frstor adc cmpsl add pop mov into lods dec sub hlt movsl or adc scas cmp notb inc popf add or or imul sub int mov scas popf or (bad) ffreep xorl pop sbb adc not jge out or lahf push push dec and or mov push icebp bound gs leave xor and out call dec mov or adc mov in ja xor jg test std inc enter mov add sbb jecxz pop out int3 or pop cmp push inc ds or (bad) cs jno sub cmpsl (bad) mov fnstcw mov or xor es cltd and ljmp loope or dec call or and push sbb or add (bad) mul movsb cmp push mov mov test loop mov (bad) cmp (bad) or clc imul (bad) jne shll mov mov outsl push addl sub and or cmp fildll sbbl jb fcoml in xlat (bad) xchg dec mov fnstcw pop cmp (bad) testl push es pop sbb adc sbb jno inc lock and push dec or cltd and out mov or mov fs shll mov dec push ja add or in fsts loopne addr16 pop std and aas cmc cmp sahf stos inc rorl jnp test stos popf inc cli xchg adcl nop test inc sbb in dec or jecxz add outsl nop mov mov imul cld in js imul dec pop mov arpl lods leave loop ret outsb mov cltd outsl xchg jl testb cli mov push dec or jmp pop mov or dec cmp aad cli cltd push test in or push les or cmp and cmp add mov add imul ret cmp ret test jle push rcrb cmpsb jp jae,pt push pop cmp inc jns adc leave insb idivb fstl jle or orb icebp in jecxz dec leave inc jne popf aas iret or jae cmp lea inc into and mov stos (bad) ja push pop pushf mov std mov rorl les mov xchg jg add jge pop sti adc sbb inc mov repz or push in or lds movsb in adc or inc mov scas pop in inc loope std add das push pop movsb or lock jno add jns (bad) mov mov or or sub or ret std clc mov push cmc (bad) jno or mov roll xchg mov mov jbe bound in cmc or add mov xchg int xor mov rorb sbb cmc out cmp leave ret jp and and jbe dec pop adc cmc xchg pop (bad) fldcw int3 jae jns clc cld mov mov mov push mov add pop and sarl pushf jg cmpl jge xchg fsubrs pop mov testb push adcl jp (bad) ret push add jecxz add push xor sub pop mov dec das fisub mov push lea insb imul cltd test ret mov dec lahf ljmp cmp outsb jne fnstcw insl repz mov sbb dec jmp mov cwtl loopne cmc xor test mov sub jns addb out aas add mov pop jmp lret jp ret cmpsl push fmuls aas (bad) jb sub dec fidivrl pop jmp test xlat adc cmp dec mov cmp jecxz scas sub inc push push imulb test xor jbe hlt imul cmp mov adc add aas cli fmull pop hlt subb je sti mov or or xchg push ss inc push jecxz mov or addr16 mov cld jge imul dec fidivr inc test or ljmp rorl fnstcw dec or call gs ljmp test loopne add xlat and hlt and mov adc movsl dec (bad) dec das ja movsl pop jp jl xchg pop or adc cmc cmc in xchg cld push mov mov and out out arpl mov in jo test sub loope (bad) cli lret push lock xchg loopne and fisubl in adc js add repnz mov mov mov cmp daa mov std mov imul (bad) mov mov hlt push iret in xchg imul (bad) mov xor decb fisub popa jb push lods jg test mov arpl xor xchg test mov or cmpl add pop add mov push roll (bad) insl rorb cltd sbb es adc mov cmp and scas mov cs and mov xor add dec ret xor stos cmc imul adc iret and aad push mov orl pushw sti sbb sahf cli sub push (bad) jno xchg cmc sbb in add lret sbb jmp lea or sbb loopne outsl cmp and xchg test or lds je scas dec je dec ljmp xchg cmp mov repnz insl shl mov and or sbb xchg fs sbb or cmp (bad) in jb adc (bad) and push adc lea dec adc pop jmp popa imul mov seta ss cmc dec (bad) mov adc lcall aad nop dec cmc adc (bad) aas test and add dec dec popa inc fidivl into xlat push cmp sub mov popa mov mov jle fbstp pop pop out mov cmp adc pop rorl hlt dec call test adc push mov pusha or inc add std pop fistpll jns mov stc outsb push xor or cmc loope xchg and aam ljmp rcl mov sub or in (bad) into dec (bad) mov dec gs (bad) hlt sti (bad) push adcl sub aad or (bad) neg inc and loop jno fcmove fidivl (bad) rol pop stos leave loop mov mov jnp je push dec mov shrb sub mov dec or das aad shrb hlt pusha pop std out jl jno loop add testl pop or jns jo test mov and es mov or inc les jmp cmp mov pop sbb int3 jmp mov push dec lcall rorb mov push cmc push orl mov and ds jno or rcrb or mov cmp fisubl rcll dec fmull pop aaa adc (bad) es addl push int3 adc loope (bad) repnz cmp fsubp imul data16 data16 and mov pop xchg sti pop dec inc lds stos hlt mov leave xor sbb adc cli or mov loop pop mov es sub inc cmc or lock (bad) pop sbb stos test lods pop push adc xchg addr16 xchg sbb scas gs fs jo cmp xchg push sbb dec insb orl push mov jge push xor ds (bad) xchg or loop add cwtl cmp inc or pop jns cmpsb test (bad) push add repnz xchg iret test mov movaps addr16 pop inc jge je in adc sub enter or hlt or inc xor icebp cltd or aaa pusha mov inc ss push int3 mov mov or sahf cmp (bad) jb and xor or add xlat fcompl lods ja pop adc dec pop cmp jmp sbb pusha push or push dec add mov add hlt add jle dec movb rorl xor jns dec roll dec or adc mov (bad) ds insl or ret jb sahf or mov jecxz push lea sub test into mov sub pop popa cli jno ficom outsl rolb enter test js (bad) push outsb (bad) and out sbb cli bound jle push push sti sub jbe les es ja insb notb xlat inc faddl dec jbe loope outsl jae pop daa lock cwtl or add (bad) or cmp push mov push clc fs fsubl sub xchg mov iret xor or (bad) pop dec out mov xor aam loope mov (bad) mov cmc or je shrb out sarb orb faddl fadds cltd or fs push or xor insb test sub cmp mov pop or cmpsl mov jmp xor dec mov mov (bad) out out (bad) stos add inc lods roll outsb in cltd shrb repz push pop andb sbb cmp out clc jnp xlat xchg xchg mov push add sbb scas mov xchg shlb or or sti aaa sub test pop dec mov inc lret test mov into iret inc nop pop bnd mov sbb sbb sbb call out aam push stos or or lret add add enter fnop neg xor mov cltd pop or (bad) xlat dec jnp and add lock fidiv xor leave mov popa xchg test cmc push mov fimull push push ds inc jb adc mov pop mov lock pop fcom dec inc inc mov dec loop dec mov jl xor cmp mov mov leave popf test test jns mov (bad) xor outsb or jnp cmpsl pop cmp fistpl popa or std inc xchg and loopne jecxz int stos push aaa lcall nop repnz inc cmp test out jmp daa mov push imul int (bad) push or aas adc jp gs test xchg mov stos idivb sub jecxz int3 ja out or test roll mov dec sub mov popf inc mov cltd lret imulb gs (bad) mov jge mov shrl test data16 lret out lcall sub or pop jge sbb ret imulb adc imul and pop loop sbb xchg jb dec (bad) cmc mov lret popf inc ss adc jl repz ja lret sub jne adc popf fidivr neg ss jmp adc adc iret add mov pop or shr push lods xchg lods sar add imul and or test cmpsb cmp out ja mov and lahf pop pop jmp dec push icebp out (bad) cmpsl cltd mov call mov repz xchg incb les (bad) outsb out and or push in lods fisubl cmc adc popf jmp fwait cmp mov imul mov dec jmp jmp jnp pop xor cmc mov inc mov sbb sbb xor mov fstpl mov (bad) or or repnz outsl enter or push push loop mov add (bad) fldt loope fnsave or sbb loop ds push mov int3 mov out rorb dec jmp or jnp mov or ret pop adc add das cmp or lret arpl repnz mov or out hlt mov push clc mov ret (bad) aam pop fimul sbb divl icebp popf mov jne add mov cmp loopne (bad) mov xlat push mov xor inc in push out or push out std jecxz inc fmuls in scas dec imul popf xor movsl cmp movsb jg mov mov adc fscale add test mov xchg dec arpl mov xor fs (bad) repz push popa mov mov ja pop imul repz sbb ljmp or add loopne test xchg cs int3 xchg repnz sbb cmp loop xchg ss xor shr jle mov mov jmp fiadd aaa popa repz push lahf inc push or dec xchg mov and es fsubl sarl out or call fldl2e fist mov mul mov lock sub xor shll or dec ja adc push movsb cmp adc xchg or fcomps xor (bad) jl out lahf xor imul jp or dec cmp stos mov mov xchg mov lds lods sub and loope lock pop addr16 idiv sub mov jns das lcall and xlat or daa out int3 idivl add or hlt or or int3 dec or ljmp or (bad) pop xchg and aaa in mov sub repz scas and (bad) stc (bad) or or sub lock push inc xor add mov lods and or nop jp out mov sahf or sti pop aaa outsb (bad) sbb stc pop jbe push or xor sahf mov push pop lret inc lcall es (bad) mov mov dec je jnp push pop gs adc push cwtl stos add (bad) cmp sbb icebp mov (bad) (bad) adc rorb in dec loop mov sub dec icebp stc adc shlb clc sbb mov inc push arpl mov or out (bad) xor mov aam sbb mov cmp in and mov fdiv rorl mov push or scas lret (bad) dec or test sbb loop mov (bad) stc cmp (bad) js mov mov pop int xor xchg fisubrl xchg inc lods out or cmpsb sbb dec or fidivl bound loope cmp adc repnz in cltd jge sarb popf dec pop cltd xlat lcall mov repnz mov rcrl fcmovnu or adc and sbb dec adc leave push outsl or adc adc lods enter mov xor xchg sbb or daa pop or repnz aam lock adc stos loopne jne jp push or sub xlat xchg mov adc mov mov xchg or clc fldt lcall mov test xchg loop imul test test rorb inc pop pop and or xor mov jl xor push loope dec pop push jno xor push test inc rcl mov aaa mov push pop popa sbb dec xchg ss add dec xor adc inc (bad) leave fisubr dec xchg mov scas cmp push mov jns icebp in sub and imul mov js cmc pop pop mov movsb imul das arpl rcll ss test push insl mov int std negl (bad) mulb adc cltd lret leave (bad) aaa rcr fwait test mov dec mov add scas mov dec xor or mov pop imul jo or dec aam addr16 add (bad) call fist popa mov jp cwtl mov ja pop lods call movsl inc mov stc mov dec cmpsb or fsubr mov adc mov popa lds adc mov adc lods cmpsb ficompl add inc popa leave push mov ud2 mov cmpl popf and pop out push add outsb call mov scas inc pop sbbl xorl xor je dec out leave or pop aas lock gs jns movl (bad) cltd mov daa jne mov and cld test jae ds lods es cld jmp cs hlt dec add out jno or hlt xchg cmpsb orl lock leave stc jl (bad) or into insl dec cmpsl adc mov inc xorb lods hlt adc xor mov insl test aad stc jne ss (bad) xchg dec pop out push fs lods daa jg push adc add fnstcw sti pop (bad) loope adc dec mov push test popf ret jns fs stc push xor cmc inc in xor ret stc jnp or sti or (bad) jne aam (bad) outsl fnstsw test mov dec daa ret (bad) (bad) sub rcrl or or je fadds adc pop out cmp mov iret stos xor jae or adc mov xor and outsl add mov or sti cmp fcmovbe sub cmp push lods nop push pop fisubrl fcom pop fcomip xor adc adc pop jb push dec out jno adc xor call (bad) xor dec sub movsb bound aam lods cmp sub movsb arpl insl idivl jmp inc push sbb xor jecxz hlt jle mov std jne ret inc xchg sti pop adc mov loop ljmp arpl cmpsb mov mov (bad) div xchg (bad) ja xchg mov xchg sarb dec cli scas test int (bad) dec jbe add leave cmc je mov or mov (bad) int3 mov mov or xor xchg bound (bad) (bad) jne roll mov mov adc cmc leave jle (bad) and or xchg es ja lret jae dec push imul adc hlt (bad) gs xchg (bad) adc mov add in icebp mov js clc imul call xchg add icebp sti mov mulb bound jns cmp xchg mov (bad) cmp aas adc aam int cmp dec aad pop jnp jns lret xor das adc sbb sbbl gs jmp jne js (bad) repz jmp inc gs cli mov and mov jbe fadd adc ja push inc sbb fcmove push outsl sub adc int3 out mov xchg or add xchg in jo push mov arpl fstl mov and pop xchg icebp hlt mov in jbe andl sbb leave scas leave inc ss rcl loope cs mov mov bound and fs xor xor cld outsb aam add lret in repnz adc jbe jmp (bad) cmc addr16 pop lret dec and mov mov es jecxz fyl2xp1 stc cli gs mov js popa popa cmpsl jo sahf dec adc push jbe cltd test rolb (bad) insl sub push imul cmp jecxz in or xlat dec leave repnz jno mov add div adc cmpl aas sbb ds inc cmpsl pop and or mov ffree repz pop and push enter lock aam sbb or add jp dec mov ljmp inc test sbb mov lods lock ret pop out mov mov xor xorl out fcmovne add jno cmp or mov push inc inc out jecxz sahf lea jmp and sbb cmpsl or dec xlat rorl dec popa adc lret movsl jle cmp xor jbe ljmp add mov arpl or adc sarl movsl or or aam sub shlb xor lods push adc aas fcomi jmp ja js popa push inc push or jns sti xchg out mov sti sub stc pop and push mov pop pop outsb ret dec mov sti or and or lods dec or or mov push in pop or jmp mov in mov ret inc jne or and fmulp adc or pop pop movsl test lret cli or mov fwait or cmpsb adc fs push dec stos pop push mov enter repz xor jge ja pushf (bad) push aam stc repnz push int push add in xchg xor aaa cmp mov fimull out adc or or sub pop int3 movsb je pop and sbb add cli decb adc sub pop pop imulb sbb int sub cmpb xchg sti jns push in dec mov lock aas inc lret mov xchg lea sbb scas or jecxz lret sti je dec imul imul or sub fldl negb pop and cld (bad) adc incb cwtl lahf dec icebp jb hlt (bad) cltd mov adc iret push test add aaa dec mov pop xchg and imul je aaa mov mov ljmp fwait pop das mov pushl inc or jl jbe into lock pop add jp jno push push repz jo add cli int3 dec and lock (bad) xchg xor call pusha push xor cmp dec sub fimull mov add cmp cwtl stc xchg dec je inc mov (bad) int xchg adc aaa xor jns,pt mul test int3 mov data16 adcl jae mov xchg or push add jae pop push dec lods enter imul loope repz or test or pushw dec and (bad) popf xchg test hlt push into push mov outsl test or mov imul mov add lahf test dec sbb bound xor (bad) or jg mov frstor leave mov or lcall jns add out xchg lods dec inc (bad) lods clc mov mov jecxz pop imul dec pop fwait adc popa cmc sub loop sub aaa or inc (bad) popa adc jl push sbb lock dec outsb loope xchg ljmp rcll in sahf and stos lret or sbb add idiv mov jl or cmpsb faddp sahf or daa xlat push mov aad mov mov outsb std scas leave cli mov dec inc sahf popf xchg sbb adc cwtl ljmp mov dec jle aad shlb movsb and mov or xor cmc vmovd pop fidivl adc stos dec lods push invd xchg and movsb aaa int leave das mov jecxz leave push add xchg inc shrl rcr or xchg mov mov adc jle decb mov rcll bound aas adc mull push dec or or dec mov push push std or (bad) adc mov jle and fnstsw xchg and and add loop or fidivl dec mov jmp xchg (bad) fwait pop and aam jbe xor stos push repnz pop (bad) repnz scas data16 jbe (bad) es mov les mov iret rclb setne adc sbb test mov imul mov adc or dec mov add cmp shrb popa hlt adc and push dec mov jns in mov xor xchg call xchg je ds add fldenv dec into sar nop into or pop js jo icebp jle dec nop (bad) jbe adc cmc xor push sbb jo mov jp pusha and adc add addl cs dec adc push sub jne push adc ljmp test bnd cmc test movsl outsl stos mov dec scas push dec stos xor cmpsl imul cmp or lret xor jg daa leave hlt xlat sbb or cmp mov leave fstps js out sbb stc leave rol mov dec mov sti or mov jae aad negb mov fwait sbb push decl sub xor (bad) bnd mov or lods lods push sbb gs outsb test roll jge insl lret fcmovne cmp cmp jmp hlt loopne notl xchg sbb (bad) cmp jns fisubr push mov push cmpl dec mov fcmove (bad) lods divl icebp jnp loop scas pop or nop repnz mov int scas mov mov std cmpsl or and sbb and push add inc lcall inc pop mov cmc and inc les cmp push xchg adc push out mulb ljmp sti and add xchg mov add pushf or mull cmpsl (bad) loopne pminsw sbb ret mov lock leave aam lahf jmp or dec xchg sub ds sbb fstl push loop pop fcmovnu cli push xrelease (bad) sbb push aas and and pop mov or mov mulb fs lock in and call popa and add or cmp or test xchg jne xchg or dec in int xchg data16 stc xchg (bad) imul es jle popa mov jae jp dec ja jmp dec or lcall ror mov (bad) out dec sti nop lret xor cmpsl inc out test sbb lods enter cmc xchg es sbb je mov push hlt dec dec rclb add adc sub sbb mov dec mov fdivl jecxz cmp std addr16 push dec test loop pop mov jmp or pop jecxz ss inc (bad) jno lods andl or mov mov out jne repz xor pop out adc dec or (bad) or push out cmpsb mov or ss ja (bad) cli icebp ret jmp in stos in jmp add movsl or je out imul dec dec adcl not jecxz jno mov iret dec push ja sahf or sub dec adc aam mov inc ret mov xchg stc fs push shlb or mov xchg mov sbbl mov arpl ret jae mov mov dec mov in aaa push mov jo test adc mov pop movsl xor xor faddl and or add dec sahf sbb notb push or lods sbb loopne test rcrl cs jbe mov into push loop shrb (bad) movsl decb or or jmp cmpsb jo nop or rsm and mov xor lds mov insb mov mov fisubl int3 mov mov mov cmc xchg push mov ret fidivrl dec xor ret fisubr repnz xchg sahf mov xor shl outsl movsl (bad) stos clc or jecxz loopne or imul add hlt mov pop ljmp or inc sbb pop je fs pop adc imul test fdivrl dec push out xor imul out and xlat out or movsb pop jne (bad) popa or dec inc repnz pop mov mov xchg push repz add sub pop or subl lcall inc repnz xor jbe (bad) xor xor stos or mov mov fcompl aaa aad or ja (bad) or adc push inc or pop test repnz push test aad dec mov sbb in int fdiv or dec xlat sub mov xor lea ja xchg or dec cmp clc xchg jle es stos inc cltd mov (bad) cmp lcall cld sbb mov xchg sbb or (bad) out dec scas xor mov insl aaa js inc cld in or inc rorl popf addr16 or movsb adc orb out dec add lock mov push adc ret addr16 fidivr adc mov out mov dec leave xor sarl jmp or push or cmp push aam out fidivr inc shr icebp lret or pop inc ret inc or mov shlb add or imul fnsave xor ret in jns cmc in or pop pop pcmpeqb jnp pusha aad lcall push fcmovnu je jmp ror ss scas adc cmpb cmp ret imul aad or mov jmp (bad) divb and rol dec adc mov mov lock lods xor (bad) imul repz push repnz negb mov loop xor (bad) (bad) test sbbb jmp mov je push inc hlt cmc sub outsb dec and mov icebp pop data16 popa je (bad) pop sbb mov jp add cmp lock (bad) pop or mov pop js test adc daa (bad) jmp hlt into pop jo and jge fdivrp call jbe fs popa inc jo pop out or mov pop enter loop adc scas dec or movsl fimul push imul and mov or inc xchg or dec fisubl or out xchg jbe out imul xor in enter push mov popa mov cmp cmpsb xor mov sbb aaa insl sub loopne xchg or stc mov divl or sti mov movl movsb mov movsl or sbbl das xchg sub pop jns cmc mov (bad) mov mov shlb or lret fcomps inc mov or ret icebp and dec jmp (bad) mov dec cli pop xchg leave hlt mov dec (bad) mov mov out pop jo sbb lock push jle repnz fwait enter cltd sti scas stc adc jecxz dec je dec mov add mov xor data16 sbb shrl adc and adc xor loopne stc adc icebp mov insl leave pop cmpsl ds pop jbe adc int or insl xchg leave in gs pop jg repnz cmc jb lahf cld xchg insl xchg scas repnz (bad) dec vpmacsww test xchg sub rcll repnz bound imul mov daa cmp test repz xchg jecxz jns popa out int3 ljmp out fsubrl mov (bad) xchg xlat jno das push adc mov xor into or lret and adc add jns (bad) addr16 or adc enter mov jb sub cmp or or or es xor movsb cmp mov or inc sbb lret fdivs mov jecxz lock int mov insl pop mov push (bad) cmp lret mov dec push cmpsl xchg out adc leave into lods or popa js adc pop xlat fcoml cli mov xchg scas mov nop push add frstor leave push jne pop in stc loop lock stos leave lock fmull enter fsubr insl fcmovbe pop fnstcw or repz je fildl push push fcmovbe inc sahf jp es dec adc push push xor jb ss dec sbb int loope call adc or pop add hlt xchg pop (bad) out add pop ja mov stc cmc aam pop inc insb push mov pop sbb pop jae cmp pop cmp push enter in push lock push or adc int3 pop dec int3 loope test add jns imull cmc addl cmpl in mov jge dec and or je ficompl aas lods cmp in icebp adc fcmovb pop fsubl cmp mov addb mov test cli jno xchg cmp test scas mov jns or iret dec lcall and mov out push rorb std cmpsl add push sbb jp (bad) mov insl push pop or add and dec cmpsl decb pop fmull dec add imul cmp add jbe jnp inc hlt lret je sbb inc btc adcl dec xchg leave shll dec aad in icebp repz mov cwtl inc mov in cmp arpl fucom test cmc jmp in xchg (bad) nop inc ljmp loopne dec idivl or push or lea out sbb cltd or enter insb sti fcomi mov test lahf pop movsb lock pop or aam xchg jg sbb xchg push sbbl or add sbb xchg dec lock (bad) or in nop daa inc mov es icebp xchg push jmp push in jp add xor cmc mov mov xor xor rorb dec gs push mov mov and dec mov test or sub pop ja xor add xchg sbb sbb fisubrl jns in mov movsb or out xchg lods or inc xor bnd xor stc mov adc leave mov xor imull sbb fcomip mov scas sarl mov or sbb sub jmp inc movsb lret dec cltd jmp adc test fcos or and jo rep hlt xchg addb jmp mov push stos sbb mov or lods mov and (bad) jno lret pop (bad) imull lahf outsl outsb dec or push lds int mov loopne repz lret aaa fist lcall or or or sbb mov mov loop roll (bad) and dec inc pop add sub push add xlat hlt loope out popw mov aad rorl pusha stc sub repz or aam mov and dec jno inc xor mov mov xor cmp pusha data16 dec lret mov pop jge cs leave push pop jne into add mov sti fwait bound movntps mov in jmp outsl mov testl lret int3 xor es inc or add (bad) cli movsb pop sub or and inc lahf jns or imulb insl push inc or rorl pop lcall sti rorb les imul push sbb and pop negb or roll (bad) repnz mov push lahf ljmp cmp fmul int3 and rcr test pop dec incb icebp push and sbbl mull jle mov and or jmp pop mov cmp sbbl movsl xchg xchg inc jle out in arpl jp hlt and pushf cwtl mov shlb jmp mov jnp (bad) lds mov cmp jbe lods dec jne jno mov or ja (bad) enter mov inc or or pop (bad) cld add push in in and insl push rcrb or push dec (bad) mov dec in xchg inc ljmp cli rcr add div add sti jns jecxz mov mov addl push cmp sbbl arpl adc mov sub in outsl aad xchg cmp cmpsl push sbb notl xorl popf insb jns mov pushw or adc ret push and arpl in push int addr16 dec mov outsl addr16 xor dec movsb insl and mov sbb fsubrl add adc sbb nop shrl inc jo (bad) xchg mov push test dec sbb popf or stc arpl leave repz mov out (bad) or push mov outsb adc bnd pop cmc cli sbb pop cs and loop sbb test scas dec cmp and in dec mov inc into sbb pop and mov idivl push dec jle rcr test fldl add or aaa add adc rcll mov inc leave mov jle out adc cmpsl repz jl,pt xor jnp std sub (bad) call jbe adc jnp sbb les inc xchg aad mov fwait nop ret inc mov push test xchg inc push mov adc jno icebp or jle xlat mov enter sarl jnp fnstsw shl fadds lahf push sub jmp ja adc inc add pop movsl add sbb js iret sub sub aam fwait push jcxz mov popa adc jle enter icebp mov js movsl mov loop adc stc adc ss add inc or pop dec sarl aad jecxz dec jl fbld inc ret packsswb cmp adc movb jge add leave push and jns pop push imul mov push push or cltd ret xchg push idivb lods dec push pushf stos fldenv jg (bad) mov test jmp dec (bad) loop std xchg (bad) sbb jae in dec and jle xchg call ss (bad) aas jb pop jle sub sbb loop sbb pop push das mov pop fidivrl sahf adc mov shlb and sbb hlt mov pop xor mov pop out and arpl (bad) mov mov lock sbb ret pop or (bad) not sahf xchg adc andl jns subl test mov cmp addr16 dec xchg pusha dec lods sub mov push dec jp test popf stos dec dec jae in xchg loopne cmp fnsave mov sbb call add cmpsb shrl popf dec pusha cmpsl cmpsl nop and adc sub adc popa cmpsl movsb dec cmc jns mov stos mov cltd sub je push inc scas push cwtl adc inc jge lcall divl xor mov das and cmp and addr16 lea push push add xorl pop cmpsl xchg call scas fldcw mov xchg decb lcall jb addb (bad) addr16 pop dec xchg or jo imull mov and aam pop mov xchg pop jge mov sbb push sbb mov lahf cltd adc xorb cmpsl jle es ss push aam mov mov gs dec jge mov push or xchg dec inc pop in or pop sti or xchg insl pop pushf mov xchg cmp lods jmp add pop or and dec and lds hlt inc sbb orl rcr enter shrl jne lock loope add xchg cmpsb ljmp mov (bad) sti mov pusha cmpsb cmc xchg sbb sarb lret mov inc add jne mov cmp (bad) notb test das loopne inc cmp cltd fisttpl ss dec push jmp or cmp inc mov or adc sbb clc mov stos add bnd stc xchg add iret push mov popf mov or insl and xor pop dec imul add mov test (bad) mov xchg mov (bad) bnd push test insb or mov and push in dec mov loopne or aam cmpsl mov les or clc fildl faddl sahf dec and mov (bad) sbb lahf and mov test sti and inc or int3 pop mov inc xchg je sub sbb pop (bad) inc bound jmp sub scas outsb lret dec pop mov cmc pushf fcoms add js or push out sbb fsts lods out cmp add iret xor aam pop testl jp (bad) adc mov jp mov adcl xor in mov cmp push pop or mov je push repnz test negb mov fiadd sahf mov xor ljmp fsubs (bad) mov fsts dec jbe cmpsl inc fistp (bad) xor fwait inc dec mov jnp mov add xor push pop jmp in pop xchg loop adc addr16 in and out sbb repnz mov pop jnp dec iret fnop nop (bad) add (bad) or outsl add addr16 repnz or mov or fsubrl mov insl push aad cli imul sub mov sub cld or sbb imull jmp jmp int jns idivl mov sub inc std repnz test push call jns es or xor or push xchg test pop negl or popf sahf dec in daa lahf imul repz jecxz xlat add mov mov mov xchg lods imul jmp subl popf pusha mov (bad) iret dec cli mov (bad) lock add cmc sbb es dec add (bad) jns or and out jb mov dec or sbb into pop (bad) dec insl jge xor inc push (bad) jle (bad) inc and push test dec fimul stc sub pop (bad) popf mov or mov push in fildl int xor pop fst into jl sbb mov ljmp add jmp mov mov scas or mov xchg xorb mov mov push push and divl or ja mov testl pop jg fbstp push pop pop or fxch mov popa rol or shll js mov lds scas adc push stos iret or lods lds enter lret cmpsb insl mov push scas mov pop out fcomps addr16 loop pop enter add cmp or mov adc lds test cmp les adc aas adc mov aam mov mov cmp imull jmp dec mov sti das fdivrs sar xor imul int jb pop xchg addr16 mov mov addr16 in push or in xlat repz sub cmpsl pop outsl xor mov call sub je,pt mov jmp aas pop cmp push in mov pusha mov cli popa aaa jl (bad) xchg xor push ja xchg jo (bad) das mov lock xor adc xchg or (bad) xor dec cmp xor jno and jb in rcrl mov loope out mov cmpsb sub mov aaa adc nop push pop pop gs addr16 pop inc dec leave push ljmp pop and repz xlat movsb jns cmp movsb add pop jo sahf or fcoms inc movsl cmp in adc mov xor jo stc cld jmp test sbb inc mov jg movhlps or push pop inc mov sbb je push dec inc fldenv jb rcrb cmp push mov mov dec xor sti xorl jno mov in mov or xchg cmp ret gs or movsb pop test nop mov xchg imul jg dec ljmp and or push jp inc dec add repnz add xor daa and push inc in adc or mov and fstps fmulp xchg es xchg add dec cmp push jecxz pop lret ss cwtl ja push or adc mov jmp call adc sbb push sti insb shll add mov xchg or jbe std jge push pop or gs ficoml mov (bad) or insl in dec decb imul push inc and or add mov adc out (bad) loopne les int push fnsave or cmc ds mov iret lods add lods stos push les inc jae mov adc push adc fildll mov xchg int test jg jns hlt jb adc sbb je addr16 out pop push sub mov or and popf sarb imul jno (bad) jne mov mov adcl loope mov lea fistpl xchg adc scas int3 or out add sahf rcr out movsl adc xor mov dec add aas xchg jecxz xor icebp fs insb popf mov adc xor cmpsl sete pop data16 mov or ss popa call push ljmp or les xchg or jge or pop xchg out push ret sbb jg mov cmp or inc cwtl cmc xor pop dec jno or fs imull js movsb mov or rclb testl leave int3 xor or xchg int3 cmpsb or stos inc and jnp mov aad dec dec xor test loop (bad) leave sub push movsl push call sbb jno add add add (bad) test cltd scas mov roll jg or cmp push or adc shll sub inc imul inc lahf xorb pop cmp fisubl or xchg enter push fsts or cltd sti ljmp dec mov ds and and jl pop dec mov loop icebp loopne addr16 cs in cmp push test jb dec fildll (bad) dec arpl addr16 leave adc cmp and pop xchg int3 add adcl mov bound clc jmp ljmp xlat or imull lret or lods or or push push inc add sub lea loop fcmovnbe mov leave insl adc or cmp sbb cs adc sti pop arpl mov out addr16 enter add sti rclb mov ret mov ret loope es jo loop scas adc jmp insb addr16 fimull jbe data16 dec mov dec sub push mov jmp cmp in out (bad) inc hlt jp movsb sar or cmpsl cmp sub sbb cld mov jbe leave xchg das imul dec pop mov (bad) cmp js adc push jmp test test cmc xchg or push push push or mov jae sbb cmc pop and cmp hlt out cld cltd push sti jl jo les (bad) into add clc xlat xlat (bad) fnstsw aas lock adc cmp cmpsb jp or push lods nop fwait lcall and cmp push adc fmull inc inc xchg add movsl out int3 std sbb pop or cmp (bad) push inc and mov mov inc lea or shrl sub adc mov addr16 divb add inc aas or ret jae rcrl into or cmp pop push jno loop mov hlt mov dec jnp or pop js out leave pop sbb and or jmp idiv je pop or inc xor adc mov andb fld (bad) mov inc sbb add or or inc das or jp out dec ljmp ja pusha xchg and test and in cmp sub and jbe (bad) (bad) pusha test stos icebp ret addr16 call aad pop setl daa mov lods (bad) push or fstpt inc push cmp or sub push inc xchg bound lock mov xchg jecxz imul mov outsb sub push dec push mov jns add and cmp rorl sub pop mov orl xor rcll insb divl test cli xor ja push daa jl dec push outsl cmc into mov or cld add lock xor dec or or mov repz jmp lock xchg sbb adc clc sub aam test or jae (bad) jmp mov aas xlat ret sub scas add jb nop lock pop sbb sbb xchg fldl add push mov testb lods fucomp test xor jmp sub jb or sub fdivl andl stc (bad) lret jns popa ret hlt test rcrb rorl repz out or data16 add ja xor mov mov repz jbe nop dec into cltd clc arpl xlat sbb movb inc xchg orb and pop enter pop lods out loop mov mov and mov cmp int3 ficompl xchg push decl dec sbb sub sti cltd cmc mov ss dec and adc or (bad) sub mov pop dec pusha push ret and jbe mov ds mov jno pop into rolb cltd pop inc hlt sub fwait imul dec adc cmp minps xor and dec pop imul or mov cmpsl lock cmp mov out mov pop out mov push popa cmp adc gs and ss imul sbb jecxz (bad) cmc jle mov pop cmp adc push dec xchg or add repz call mov clc pop mov imul ds (bad) pop imul mov xor cltd gs loope sti shrb or pop scas inc or and mov push mov pop dec test lea cmc mov dec dec out aas and in mov jne sub jae shlb adc or lock xchg outsl or in fdivl repnz or or sbb mov enter ror test and or aas cmc (bad) fbld push or xor sub xchg or push mov lret imul daa mov sbb dec push mov in mov comiss push mov mov mov mov addr16 cmpsl fsub popf or pop sbb or pop jae jl stos fstpl out (bad) push out jmp mov sub mulb or out stos mov loop xchg popa inc pslld xor pop or mov les (bad) cmp xor push dec cmp xor mov pop pop in (bad) stos daa je inc repz sarl or jnp adc js mov inc fsubl mov icebp pop xor cmp lods adc aaa popa jns loope insb lahf imul or fisttp jge pop fneni(8087 imul mov cmp decb mov movsb repz xor sti cltd pop add adc lret or inc repnz fcompl sbb insl or cmc dec lods sbb dec scas or or add lock repz adc xlat mov inc repnz fistl xchg push test or mov or and roll in iret dec sahf jnp test stos or lret mov mov lods cs adc xchg les xchg dec mov pop incb jmp jmp call mov sbb mov add or fadd dec or sub add fwait or push push das outsl lret jecxz es mov les test push (bad) jmp fmull (bad) cmp sub dec fcomps pushf leave mov mov out pop leave (bad) pop test lods out stos xchg imul xchg popf leave imul sbb fdiv xchg sbb jle stos mov adc and je cmovns sbb popa mov bound or xchg pop outsb add mov fstps mul mov push shrb mov xchg pusha divl (bad) jecxz popf cmpsl mov (bad) es pop cltd dec or xorl xor sub inc adc mov mov mul loop mov insb leave dec in roll std or (bad) and inc or decb add or or jmp push insl pop sbb mov cmc repnz xchg mov fstp or (bad) stos push push pusha aam call (bad) je dec mov and mov cmc popf addr16 pop (bad) adc or imul jmp (bad) je les or loopne js adc dec mov xchg push (bad) icebp xchg lds mull jmp aam add in in icebp jb push out mov or cmp or lret dec (bad) mov pusha jae and mov jl adc in push fwait sub xor adc pop ja mov lods repz ss scas repnz test negb jg imul out pusha mov xor xchg mov out cs xor push pop cmp sbb ret mov ja cli rorl mov imul scas in mov xchg popa scas mov mov add and (bad) jno adc cmove repnz push incl pop mov mov frndint adcl sbb pop push int3 adc es mov rorl ja enter push adc dec dec mov jmp ds cwtl mov sbb push (bad) lcall mov cmpsb mov or adc or cmp jmp sbb ss repz fcmovb adc aas leave xchg lahf mov stos cmp adc push or jp push out pop adc ja mov mov and sti adc sbb (bad) jecxz inc loop fxch cli jae mov aad add jne inc add insl popa jle test stc or mov or add jecxz push sbb jns fs adc push dec mov inc enter dec sbb adc and fist adc mov push pop or jmp pop cmc popa dec insl pop inc test or jl sti loope fs outsl dec enter mov fidivr xor mov lea hlt test dec lods jns push test dec addr16 dec in out idivl mov sub test cltd add clc add cwtl xlat jle outsb fs xor mov mov dec sub test cwtl jo stos sbb fs push pop outsl roll mov push fbstp sahf pop (bad) xchg aam das push sub shl in pop sbb cli jbe repnz aam idivb xchg mov lds push push xorl pop mov and insb aad iret or (bad) adc aad shll lock pusha enter lock cltd fnstsw dec mov xchg add push (bad) aad dec jmp jle je ret or adc push xchg add cli mov cmc cmc pop push adc pop mov mov cli pop (bad) lret inc and mov movups mov jns aam dec imul hlt (bad) popf xchg xor in xlat insb testl or subl in lods leave aas jne fdivr daa or arpl mov xchg lods orl (bad) int3 lea jno cmovb jns sti or or jno and push test mov test pop mov lret out mov pop popf push sarl lahf sbb lock sub xchg arpl add leave pop sbb stc dec mov xor and adc or fwait jbe or sub cmp pop sbb mov mov pop repnz cmc sub stc and fimull lock test mov fsts inc fisttpl loopne sbb mov push inc ds repnz jmp or cmc mov into or loope inc ret xor cmc lods cmp dec pop jge pop aaa jmp inc lods test loopw add or mov lods mov jle outsl ficom or xchg cmpsl pushf pop leave scas add mov mov fdivrl mov ret or push rorl data16 inc push or loopne movsb sub adc push xor xor mov xor sti ljmp jecxz sbb pop pop hlt (bad) (bad) jne dec lock (bad) jle sbb mov lods jle sbb pop or out call or push cmovae cmp jnp push cmc (bad) leave or mov sbb inc dec and mov mov or aad cld lock push test dec push xlat loopne mov dec or sbb int push rorl or mov jge inc cmpsl and or pop gs repnz andl (bad) adc xor (bad) cmp cli (bad) negb push mov outsl cmp push mov je mov jne insl add sub jno jl add cmpsb std hlt loopne fisttp icebp loop aad faddl (bad) ljmp pop push mov jmp cwtl lahf mov jno push or inc fs add (bad) xchg lock dec sub lea out pop inc je mov loop sbb mov xor (bad) int push pop mov imul or push xchg xchg (bad) cmp std adc and (bad) test cmp fxam jge out test (bad) inc or and js add jecxz ljmp or cmpl dec mov xchg into cwtl insl (bad) jb and les (bad) jg dec mov xchg cld mov jno mov aad or inc adc or in arpl jne or cmp fsubr sbb div push daa cmc mov (bad) pop sbb pop and mov je shrb xor push dec loope mov fwait jl addr16 rorl inc xchg aaa cli jmp divb jp,pt rcll loop jnp or cmc mov adc xor dec aad and or cmp in jns xor jne jge push jno ds or (bad) aad adc movsl or dec xor (bad) (bad) in mov mov or cwtl inc repz das dec or cmp leave clc (bad) mov mov or mov xor push aad icebp and adc or sbb int3 sbb enter dec xchg mov arpl mov add sub scas mov jge cs addr16 inc dec aaa lcall cmp pop jmp pop sub ljmp mov xchg mov pusha and sub push insl xor mov test xchg push push out sub dec sub push cmc je lret sti mov adc out sbb or inc xchg aaa sahf leave xchg ss rcrl ret cmp pop in mov inc mov and sub in bound or (bad) enter mulb or sub sub jb cmp pop testl (bad) lock or push mov repz sub xchg fsubrs loop or cltd stos dec insb aad test enter and sub in bound inc or sbb xchg imulb mov push adc cmp add out test sub loope inc or mov mov mov pushf stc aam cmp cmc stc and test (bad) insl mov mov pop aad mov das or jne dec or roll es jmp push mov mov loope daa sub pop in and inc aad push repnz pop sub xor fcmove fcoml shl idiv add incl ficompl sub shrl and or fnsetpm(287 jno xor jne fidiv hlt jnp into mov fisttpl inc aam (bad) or jae rorl (bad) out and mov pop or mov jmp lret das push sub pop mov add or or mov jnp (bad) push repnz xchg into les movsl push popf jns or push mov jecxz adc or loope scas add jp pop inc mov jecxz pusha fimull in push (bad) je (bad) jae divl sbb lods jnp mov jmp xchg xchg lret or or cli add (bad) cld jmp mov imul or sub pop mov mov hlt sbb or repnz testb fcoms adc dec cmp adc call inc ret sub rorb lods dec xor ss sti or sub rcl or sbb pop cmp xchg or std or xchg mov hlt addr16 and repnz adc jbe (bad) (bad) lret out jb pop and adc or fld1 jnp je imul cltd xchg adc mov mov push xchg and outsb mov loope out fs sbb jp pop inc lods outsl shr lret pusha or ret xchg xlat or sub mov xchg or pop out xchg fwait push call add fidivrl jmp pop or cmp or add push sti into scas in jl jmp cli aas and fnstsw mov dec icebp jb adc shrl push ret push sbb rcl jns stos inc push fdivrs hlt sub fistl mov arpl loop mov je add mov aas fcoml push push cmpsb (bad) adc mov pop and lret pop (bad) xor or jne cmp cmp jnp mov cmc xchg push sarl gs xchg adc out pop out mov or pop inc pop call fnstenv nop pop je jns push adc loop sub pop test out xchg lahf inc lods and push xor add (bad) cmc cli mov jae les mull pop or adc push pop cmc jne cs cmp call jmp cli adc xor mov sub js cwtl adc int3 or (bad) xor test je imul and xchg push push mov mov daa aaa sbb mov data16 stc in xchg dec call or dec (bad) cmp and mov (bad) cmp out imul rcll addr16 imul or in scas cs xchg sub pop inc mov ffree pusha cmc pop inc sub lahf dec inc mov jecxz sub stos push or xchg test adc jmp xlat (bad) mov jno push int3 pop leave jb adc aas in pop jp sub lock jle jl insl mov sub jmp cmpsl inc or shll mov inc lods test ret add push add sbb dec daa mov scas (bad) push pop push icebp cmpsl or xor xchg stc test test inc xlat lret outsl xchg cmp das push adc or leave cmc fnstsw out jmp add mov movsb or xor in ljmp and inc mov jmpw mov cs insl shll pop sahf or lret xchg xchg mov mov add (bad) fcomip mov (bad) push jo xchg insl sbb or ja int dec test xor cwtl cli imulb loope mov or (bad) jmp dec cmp adc and (bad) jae pop add inc add sub jns inc (bad) mov or mov lahf int3 jg sub push add inc jecxz pop mov mov add jmp sub test mov push pop leave insl adc xor out dec sbb cmp gs xchg mov sti adc or leave sub xchg imul ja aam inc mov adc fbstp lods leave cmp in sub jmp mov or out pop insl or (bad) loopne add sar hlt mov mov jno cmp popa adc out lret scas or mov (bad) cli jnp adc cmp mov cmc dec movsb test sbb or (bad) hlt leave adc inc jecxz roll les fisttpll or sbb rolb or sub jecxz idiv data16 aam repnz inc or (bad) in mov lret cmc aas xchg dec mov push mov repnz ret stc xor leave popf jns jmp rorl (bad) enter jl or jb call ljmp and mov adc cmp mov sub or mov dec pop iret pop clc gs pop adc hlt cld adc adc flds lock push cmp push je add jmp scas movsb mov lcall add mov xchg leave lahf pusha sbbl mov or fistp cltd and adc adc or push aaa dec (bad) iret test lods adc mov and mov pusha faddp mov cld sbb lock cmp out dec daa fnstcw add arpl lret divb js or cmc test imul mov xchg or adc dec in mov lock dec jp or xor fcmovnb pop insl inc cmp pushl stc mov sub imul xchg pushf std lods es or xchg nop roll not div mov leave xchg pop or cmpsb mov dec mov mov imul scas xor fdivrl aaa fwait mov cli test lahf call or clc pop fucom jl or jns mov rorb lods mov inc and jo sub daa pop cmc cmp leave or or fldpi mov pop jne aas sub sbb mov fs out xchg mov in sbb or xlat mov push loope cmp jno gs push dec jno jns inc sbb enter stos pop lods mov loope push jbe lret std adc cs lds dec icebp add jecxz ret pop mov cmp jno cmp mov loope aas gs inc xchg shr (bad) jecxz adc (bad) aaa (bad) xlat test (bad) outsb mov jmp jo inc and cmpsw sbb test rorl push sub push xchg sub pop fiaddl outsb test sbb push mov xchg jb mov stos cmc pop jl pop lock sub jl mov stos push fildl xor decb repnz in jg xor mov jbe repz loope clc add jecxz sbb xor xchg ljmp or mov lret dec js xor lods fcoml mov sub ret adc rcrb xor mov inc sbb stos int3 adc inc jmp cmc sbb dec mov push sbb push sbb dec mov lret fildl pop fsubrs (bad) dec data16 (bad) mov mov dec pusha popf repnz in in jb mov sub xchg addr16 jo mov inc fsubl cld int3 ret jge popf (bad) iret repz aas mov es movsb lock or xchg iret adc shr sbb mov fsub iret nop (bad) cwtl cli movsl out mov cmp movsl inc push sub inc in xor int je push jno pop mov mov les push scas xchg sub xchg test dec push push mov cwtl xchg arpl lock out (bad) mov stos (bad) int3 push ljmp repz aas add jmp dec dec jne loope pop bound jmp cmpsb js bnd inc ja push stos cmc popa std adc mov or in idivb lcall add jno cld jbe lcall cmpsl push push adc jb adc or inc push sub imul push in sub hlt and cwtl imul dec adc and adc into and add xchg mov cmp mov mov xorl inc mov hlt ljmp mov loop jp sarb sbb fmuls hlt sub sti xchg or xchg jmp rorl in add repnz (bad) jns lcall movsl cli cmp sti ret sar ljmp int sbb shr (bad) popf jb pop and cmp out add js int pushf (bad) inc jnp inc pop fwait popa adc pop mov mov or in mov gs mov push fsubs int mov add rcr mov push (bad) add cs mov pop je jp pop in movsb cmp imul mov out mul jbe (bad) push xor mov pop lcall ret ds inc aaa inc cmp (bad) mov xchg or lock or adc mov push pop jno cli sahf icebp inc les add in movzbw call lea je push bt pusha add test cmp pushf lea jb pusha bt cmp pushf mov jmp xor pop sbb dec pop jo shlb fild xlat xor hlt stos arpl shr aam outsl bswap shlb adc out add data16 inc mov add lods fs dec xchg pushf adcl mov xor jmp data16 std insb pop divl jae outsb mov rorb and add sub or or in (bad) fidivl lret aas mov push mov push adc mov lcall inc dec mov inc rcr adc les jno mov in jno stc daa push jbe xchg popf (bad) movsb (bad) (bad) jmp jae orl cmp outsl iret data16 mov push test out andl fildl fisttpll aad push sub addr16 aaa mov sub pop in call iret dec xchg mov cmp sub push or lcall test fistp scas sub jp sbb mov es add cld mov push or js pop stc test cmp stc and adc fisubrl mov leave mov out xchg or shll sbb sti fldt sub nop mov mov adc and pop ffree xchg mov sti (bad) pusha imul mov fxam psadbw and lcall sbb out push add sub pop xchg stos (bad) mov sbb or sbb mov (bad) mov jb mov sbb imul xchg dec pop movsb jno jbe daa xchg fwait mov lds inc mov push jl pop lcall (bad) stc clc or jmp repz xor adc scas xchg (bad) mov jo fist orb add dec ljmp out aam mov push sbb dec sar push or dec fmulp inc fwait cltd cltd es push imul xlat lret adc or lods aas loopne adc push or adc mov rcrb pusha aam shrl cmp or and shlb cmpsb pop imul rcl sbb lcall hlt sub jb (bad) loope (bad) in mov mov insl mov ficomp mov pop fcomip jno mull das popl add cmp mov mov pop and and and sbb out adc or shr inc fcoml fnop cmpsl mov stos mov daa sub sbb in fmuls mov jge sahf jb xchg (bad) inc pushf imul sub pop divb fwait mov andb pop pusha adc mov clc push add and cmpl or xlat mov pop cmpsl cld fistp clc lret xor xchg clc mov scas mov sbb loopne sbb rcrb cld cmp mulb mov fwait lods (bad) push stos inc popa aas or jno xchg leave imul int movsl mov clc push mov push test dec or or ds orl xchg lods lods icebp add xchg dec lock hlt flds jp mov xchg cs mov cmpsb cwtl (bad) sub dec data16 movsb lods shll dec sti inc (bad) jnp dec push call out xor pop inc je xchg fwait pusha mulb jb lea lret loopne (bad) imul cmpsb lds aad add mov mov addl sbb jge jae aam sub sbb mov in ror mov fwait inc or mov lret add add sub xchg aas fcomp push insl and and mov sahf test out adc pop or les mov push adc in push test fs adc and push daa jno cmc (bad) mov and sbb jmp and jle jmp mov inc fiadd out jns (bad) loope loope adc scas xor push (bad) sbb enter xor lds pop cltd es mov jg mov loopne out jo dec out jecxz mov and imul pop loope dec jb popa pop mov mov imul in fs ficomp lcall in imul sbb pop cmpsb out sub sub mov mov inc cmp adc pop xchg xlat or or repz loopne outsl push pusha jno push in add push inc add in lods dec mov or (bad) mov inc enter dec (bad) aad cmp add or mov (bad) incb mov movsb imul pop hlt ror aad fs jb clc cmp push pushl pushf jmp fldl sti mov cmp jge xor (bad) out ror arpl adc aam imul xor fdivs int3 fldl das mov and fsubrp fisub mov dec mov or test xorl push sbb mov mov mov inc outsl pushl mov mov mov sub dec sbb or (bad) xchg mov out lcall lods mov pop scas shll mov pusha fimul negb or popa fstpl inc cmp sbb outsl mov popf cli movsl (bad) fldl2t mov scas xor push mov cltd push jl pop inc lods pop pop popa rorl stos je (bad) sarb jno repz inc jecxz xchg push inc xchg (bad) scas std push hlt push mov scas lret mov insb (bad) mov cmpb xor ds xchg or pop lahf pop imul mov xchg shrb lock dec jg lock xchg or and jg xchg enter fbstp or push jbe lret dec es add add jno jmp fildl add out (bad) mov adc cmc in sub or fimull leave inc dec pop lods adc inc fwait arpl rorl dec jp shrb nop out sbb xchg enter repnz pushl mov lea jbe shld cmc mov setbe mov bswap add movzbw xadd xadd mov btc add rcr shl ror bsr movl setle mov pushf call shlb cli cmp pop out push mov sti arpl stos lods (bad) aaa (bad) lret adc jae arpl and lret (bad) in int3 cmp cld or pop cmpl sub or fdivrs cld out repnz xlat sbb mov sub cmp dec push pop lods pusha popf call in out add out adc lahf fbld sub sub data16 jno bnd dec push pop xchg dec push dec xor ss iret jns js aam (bad) ljmp push aad push mov leave (bad) jmp sbb mov int (bad) aas dec pop ret sbb lods xor xchg pop xlat out ss cmp sub cmp imul push or in adc pop icebp repnz bound shr cmp add add cmp sub inc push dec movb mov inc push mov mov scas mov icebp subb jg mov jnp adc mov jl add ja xchg jmp (bad) sbb inc fwait and add cld or test dec ret int popf sub movsl sbb push cmpsb jl mov add and mov jg dec sub inc test cmp mov mov iret cmc adc cmpsl js xchg sub cmp inc jae fild jmp jae inc shrl mov pop icebp or jmp inc (bad) aaa js pop in shl test jge inc lcall addr16 stos iret scas enter cltd pop xchg in stos mov add sahf push or lods adc mov sbb sub xor cld arpl jl hlt fisubrl push test test stc into pop mov ss or jno pushf iret xchg nop mov mov sub in cmp idivl dec in xchg (bad) aaa and imul pop rcr in xor scas shlb jle out or dec popa stc test push inc jp cmp (bad) jg pop and pusha (bad) dec enter mov std mov mov jno lock xor outsl xor call pop cmpsl (bad) out fs fistl and or pop and sub push add lods adc or ljmp xor mov or cmp mov (bad) in in shl dec in xor sbb popf sub push (bad) jbe xchg jbe xchg mov mov jmp mov popa pop dec (bad) dec dec xor xlat dec ljmp adcl add pop out movsl ljmp inc dec xor cs insb add and pop lahf pop lea pushl pushf push movl call pusha mov call test jmp repnz push fild scas jo je pusha ds bound or std or pushf mov clc movups sbb std push aas inc push pop pop jle cli cmp dec xor (bad) ret in cmp ret pop (bad) jmp xchg push pop inc ljmp fadd mov or xchg dec mov repnz je rcrb push dec iret rep cs mov stc jno out add xchg mov xchg mov xchg mov ds push aam outsl adc add cmp insb ja pop repz pop mov popf ret dec pop mov clc cmp imul push inc in lahf push cmc cs sbb cli test inc (bad) ret sti repz call mov and leave sbb sub xlat add sub or (bad) add inc fnop xchg xor ja lret addr16 pop flds in aaa pusha idiv bound sub jb adc (bad) jecxz pop in and jmp lock popf loop and mov in jno enter mov and fs je inc sbb call std lret imul popa jle cmpsb fmul jns jo push lcall jge jne sub xchg sub jg ds or shlb stos hlt jns inc mov (bad) (bad) mov or push test enter in sbb sub xor out (bad) xlat loopne or add jae jne fisubrl adc test leave sbb jecxz daa mov jle aad ficompl jmp insl cmp lcall mov pop in jnp xor jne mov mov mov sbb push cli movsb push ret pushf add test mov bound cltd insb aaa mov cs add std test pop aas mov cmpsl mov cmpsb mov adc xchg jmp adc add inc shrb test mov rcrb and stos mov xor push rorl lcall nop out jmp pop scas dec in iret or into (bad) div adc push outsb nop (bad) mov sahf addr16 popf inc (bad) cmc cmp andl pop pop insb push stos ret push scas push fildl adc jp cmpsb pop lahf fwait jecxz fdivl (bad) xor inc call push jno xchg imul jmp mov sub pop in test sar ficomp addr16 inc xchg add cmpsl mull bound jmp mov ds cmp popa mov push (bad) loope dec fsubs mov data16 add imul out or cwtl mov pop loope mov aam ljmp pop adc xor mov inc stc or repz ret jnp pop mov pop pop add (bad) out push movsb cmpsb xchg into (bad) negl shll inc jle xchg lea cwtl (bad) sbb inc xchg pop cli repnz loope sub (bad) pop and rorb or add push loopne adc adc scas xchg push sub out cltd outsl ds xor sbb out (bad) jmp mov les cltd outsb jno push sbb push mov pop jmp lcallw add setle fsub pop aas pop fdivrs mov jo jl and push add adc out xor jl jno inc iret (bad) mov fwait call or jg jo mov push or int3 repnz fwait in add jno ljmp add bt bt pushl popl push cmp jmp pushf call lret sbb xchg jmp je sbb add adc cwtl es repz scas mov mov mov mov mov (bad) adc sub push test inc aas orb lret xchg jbe jmp inc jle inc pushf xchg lods mov lcall test xchg cmpsb nop out inc jp nop jbe sbb dec call jb xchg loopne and push mov pop loope aaa fwait adc sbb cmpsb test orb mov inc push sbb mov nop out add pusha aas pop and das jo mov in leave lahf shlb xor jb pushf cmp sub mov jge arpl movsb and push out out lar test mov sbb (bad) leave movsl sbb popf jno aad mov in mov mov sbb sbb fs nop xchg call lea push lret xor fcompl je cmp aad push lods add add adc and or repz pop lods mov pop outsb dec mov shl xchg jle push lock lcall icebp sbb call and or into mov enter repz xchg ja fisub adc cltd sbb outsb push rorl int3 mov fildll mov mov sti push push call shr cli in xchg adc sub xchg and fildl add sbb loopne clc inc pop jno call add inc sbb dec pop outsl mov pop pop pop out jl les (bad) jl das add loopne or call sub into add fcoml cmp push mov popa test mov mov sub cmc dec inc subl jnp mov test insl jle push fs (bad) push scas aad push clc jno mov aam loopne lock sub enter sti cs jno,pn mov cmp lock jg xchg or lcall lods jg stos hlt gs mov cmp lds pop out sbb (bad) incl pop push push call call pushf lea call push call jmp out out lock movsl (bad) mov dec inc pop dec pop aas pop pop and das sub xchg fwait add push push or lret jae jae xchg mov dec rorb cmpsb cmp xlat xchg (bad) jp mov (bad) repnz jae mov ret mov test loope pop add mov jb leave cmc dec fwait mov cld inc stos mov nop mov scas pop pop xchg popa idivl jnp add mov mov mov nop mov int3 out push call xorb (bad) pop imul icebp or call rep mov stos pop (bad) inc fwait jbe rorb push dec sahf and xchg add pop out or sub push or add push jl jg imul cmp lds lret icebp push into fucomip push xchg test and sar xor push add scas popa icebp push in adc dec fucomi mov sahf imul sbbl sub push enter adc pop in jg pushf iret scas add dec out push lret repnz ss pop outsb iret in mov inc arpl (bad) ljmp dec (bad) add dec pusha mov je ror and cmp sarl out xchg jae mov or in lret repz add iret or in pop out pusha (bad) pop pushl popl movw mov pushf pushl ret mov pushl popl movb pushl ret sbb xor dec push daa push push arpl xchg jae arpl sbb push sbb sub push pop bound jmp inc xor and adc fisttp mov push enter jno inc test mov outsl call ljmp fildl push or mov lock outsb xchg dec mov xchg mov inc sbb repz pop in adc add bound insl mov (bad) lret and xor xchg xchg dec insl jno stos cld aas incl fist lret rorl pop lods pop imul cmovs inc lcall out add and xor sbb mov pop in xor add push jno jg test movsb xor fadd outsl (bad) arpl xchg pop fbld pushf bound aam jl jb jp fstps xchg movsl xbegin into fild fldl push fadds cmpsb mov enter outsb jg add rcll icebp adc jl dec mov movsb popa jb fbld mulb adc negl (bad) repz dec lea cmp imul and push ljmp into push dec xchg jae push test cltd sub mov call daa or call pop ret adc xchg sbb or add loope rcrl inc sbb lret dec jno in lret mov leave mov cmp jnp push clc xchg pop jae pusha aas repz cmpsb pop mov out push fisttpll push adc leave jne aad mov inc lods pop cmp inc mov imul ds inc lcall xlat sbb xchg insl popf popa fist popa repnz leave and mov out test imul mov and pusha cld hlt mov dec pusha xchg int cmp pop rol cmp push cltd cltd xchg fisubl inc cmp bound jecxz push mov dec dec xchg jmp dec sti inc cmpsl js mov mov movsb mov lcall and push adc jge mov (bad) sbb imul test xlat mov push stos add and sub pop xchg xor sti incb push xor sti adc cmpsb fwait xchg (bad) mov lock cltd and cltd stos clc out xor mov pop scas into lret scas stos out call dec cmpl jne (bad) ffree shl stc popa ret sbb lret (bad) aaa cmc lea bound dec inc pop imul scas hlt clc (bad) (bad) std (bad) scas xchg xchg or insl push jae mov lea xchg lea jb dec adc daa ljmp jno loop cmp bound (bad) clc (bad) fcoms cmp jno push test jmp out jmp loop outsl mov mov xchg or imul je cwtl inc xchg cmpsl scas scas jo,pn sbb (bad) dec push dec pop cmpsw dec jno lret test and mov pusha mov lahf ffreep imul insl into or ret pop jno dec cmp in shr mov mov adc ds add pop sub xor push in test out scas shl and push xchg jno loop and movb lea jne shl rcr mov test pushf add pusha mov pushf movb movzwl neg mov cmc mov cmp push add mov cmp jmp out icebp or sbb xor and ds jno mov sub je lahf jge (bad) enter pusha loopne in shl inc fwait sub or inc inc mov sbb nop outsl (bad) shrl xchg cmpsb leave xor push jne inc jp jbe jb sub movsb inc push dec adc repz jge sahf loopne push sub out mov lods mov or insb jo repz (bad) insl shl sub (bad) or adc sbb xor call into int jmp adc inc jge enter push shlb xor rorb in icebp sub jae ljmp loopne imul test jmp movsbw pop pushf push push pushl ret push imul jae lock std inc add push cwtl push push cs adc inc sub call mov mov and inc mov cltd lds push dec (bad) shlb mov out xor int in adc pop pop lcall sbb pop gs (bad) jle (bad) sbb lahf in jmp pop out (bad) loopne into mov shl cwtl cmpsl imul jo test pop loopne cmp movw jmp mov enter and jl mov xor rcll lods icebp flds and xchg into test mov jbe jl mov (bad) cmc ret inc dec aaa js dec pop mov xchg jmp lahf sarl orl or adc jb mov sub ret cmp xor xchg inc sbb xor imul fs and pop flds cltd add mov pop mov inc jle addr16 pusha bound ret jl imul fbstp push jge add aaa popl clc bt cmp cmp mov lea ja or ror sub sub btr add and bts rcl mov sbb mov push test cmc repnz movb lea jne setbe cwtl movsbw movb movzbl mov movzbw push push lea push movl jmp mov dec jecxz adc push ljmp insb ljmp leave jmp hlt and shrb mov mov and dec in add mov pop jmp sub xchg sahf mov cmpsl scas mov fbstp cmp aad cmc stc test ror std jo loope test sarl subl stos xor (bad) dec loope stc ss inc cmpsl lcall adc jbe dec nop add jbe es cmc sti pop (bad) clc neg jl rclb mov xchg fwait mov loope mov cld mov sar or jle fidivr mov jo mov ljmp lret mov pop dec fstpl push jg dec and popf scas mov inc push xlat sub repz int sbb hlt or xor out push mov jl lock xor mov dec adc inc imul inc inc clc loopne mov fnstsw int in push mov repnz xchg divl (bad) imul mov mov enter aad cmp jo mov push ljmp dec in and pusha in jge dec (bad) cmp int xor lahf dec icebp lods idivl movsl jb cmpsb jle jae clc jmp mov cltd in sbb je cs xchg test mov push cld or cli stc jge mov (bad) std xchg icebp loope xor and test in mov aad repnz out or fwait (bad) mov mov mov out clc movsl rolb push js add stc test push jno les shrb sarb lea in iret aam xchg ja or xor movsl enter jmp push test leave popa lret xchg jne lds shl jg frstor cld and mov jno adc inc aad stos and jle mov push loope mov push xchg jno xor test xchg div stos stos lods scas xlat orl into leave jne inc iret sarl add mov inc push fimull inc mov push popa cmc div or xchg xor out jno inc sub and jb jno scas std frstor xor fcomip stos shlb arpl jne lods dec (bad) je test mov cli push cmp jle adc inc rolb xorb mov xchg mov adc leave cmpsl mov addr16 subl js jae sub cmp test lahf xchg mov adc sub jae xchg pop pushf cmpsl push sbb cmp jo jl mov jmp movsl lods xchg push enter jae cltd adc push jns,pn inc xor bound fdivrs fdiv jno jge rcl mov loope int3 fdivrl dec pop les leave mov mov (bad) and stc repnz pop lock aad adc mov idivl mov aad mov std fnstenv test jle cmc mov mov jne sub enter sub movsl cmp jne andl fucom sbb icebp or xchg cmc in mov lock jle daa and testl mov push push fucomip cmpsl sbb jb int3 xor mov adc loopne add repz push std (bad) ret out or jne test daa cwtl inc icebp or xor scas lds movsb jle jbe add inc icebp lds dec xchg imul (bad) or outsb sub jmp daa xor outsl jmp aas mov cmpsb sbb xor jecxz xchg in inc jne xor and pop mov mov fnsave sbb insl not and jmp mov cmp or lock es addr16 fs jne mov js popa sarb mov cmp ret stc outsb loope lock mov cmpsl pop out out pop call add dec adc or je out cmp push aad or mov mov push int3 xchg cmp adc jbe mov pop fs jns push imul jecxz mov in dec fiaddl adc (bad) jecxz call scas or (bad) stos jne or and mov mov fldl and mov out imul jno or inc push push int mov aam mov mov repz (bad) xor das (bad) fsubs lock mov pop repz fcoms (bad) gs leave stc jecxz arpl xchg popf pop les lea jl lds mov pop and cmpsl pop jae jns jns xor mov push inc aad mov xor lcall inc jae in ficompl loopne lock and jmp (bad) fbstp mov divb or and hlt test mov stc into rcrl xchg adc lret and sub sub mov cmpsl mov outsb and adc icebp xchg (bad) gs in pop jl add jmp jmp jmp mov jne ror stc aaa add out jmp xchg xchg push imul adc data16 fsubrl in dec mov cld repz cli shl leave jle jne xor (bad) jne jl les test xlat adc add (bad) icebp mov sti scas mov (bad) jns inc outsb test jbe pop je stc xor mov cmp movntq test lds add rolb pusha push dec movb lods icebp xchg dec daa pop test push jo jecxz cmp jne fnstsw test adc lret push mov cmpsl (bad) cmc test jle cmp xor repz (bad) sub dec xchg adc aam adc shrb jle sti mov dec gs jg loope dec stos cmp xchg jp pusha xor mov xor stc push stos loopne ljmp in in stc es (bad) idiv or jmp jnp mov out mov loope loope lds jle fidivr push notb dec jg or (bad) leave jne test cmp (bad) stos add adc jmp mov popf mov aad and sub jbe fdivrl dec scas movsb test add roll xor in enter sub add (bad) hlt pop cmp ss test adc or jns jg scas stos lods inc ja mov jno std add cmc mov sti cmpsb dec and jo jns xor sbb cmpsl jae and icebp ficomp idivb adc imulb aaa mov mov jp es xchg stc ret adc loope jge mov call call mov fisubrl mov jg sub jmp mov jno dec in mov jo mov out mov in lock aam popa lahf or fistl mov lds mov or (bad) fildll jge dec addr16 call xchg ja fimul outsb lods into out mov lret push aaa pop xchg sbb xchg or hlt imul rdpmc sbb repz and mov call mov (bad) cwtl test (bad) gs shll xlat jmp or adc clc xor ret in push pop jg (bad) in cmc icebp psllw std lahf daa lret icebp stc push addr16 out cmp lds sti leave cld adc jns inc in ljmp push aaa pusha cmpsb jmp jns cmp fbstp aaa inc adc std in mov mov adc std out pop cmpsb fscale sbb mov push mov sar pop aam clc fsubs mov xchg imul mov (bad) (bad) jecxz cli push inc inc mov lock jecxz popf (bad) enter (bad) jo xchg stos jmp pusha lcall xlat jge cmpsb enter jmp or or push arpl mov or xor aaa cli je push xlat xor sbb add call jns mov loopne ljmp mov lock cmp or aad push incl adc mov aam mov lea jae ja dec ret jg jb jne frstpm(287 mov jmp sarl pop or fwait mov jno insb pop jne loop insl in adc mov (bad) jo push sahf insl or cli jmp push mov mov mov ja mov pavgb in jle dec fsts gs mov jge inc (bad) daa pop (bad) or (bad) lods add test xchg clc fld1 xchg aam leave fld (bad) push stc cmc test jbe or popf jg xchg add pop cltd (bad) out (bad) cmpsb mov leave inc mov aas adc imul addr16 frstor pusha and adc mov jecxz ds xlat call aad mov adc push jecxz fisttp mov and mov in jg enter es xlat test push fsubs movsb icebp cmpsb push pop mov mov repnz mov lock gs mov push test popl pop insb push cmp clc or jbe mov and ja adc inc pop cmp (bad) jo xrelease sti xchg mov and (bad) and mov bound xor (bad) mov inc fsts imul cmp repz add xor sbb lahf in adc jmp mov sbb repnz and in and jmp bnd cs arpl scas loope (bad) icebp mov adc in cmp dec or (bad) or hlt xor out mov aaa cmp out test cmp aaa jo push sub xor in fwait sbb adc jbe divl jbe or pop dec pop adc xor leave dec adc adc cltd ds iret cmp mov xchg leave or dec shlb mov fcmovnu and adc dec mov leave iret ds (bad) jg outsl rcl imul cmp add jmp enter test out shll je or insl push inc jbe sub or lahf mov cmc xor loop cmp jle jo jae outsl jb mov int in cld mov mov pop push test jno pop sbb (bad) shr (bad) imul fcompl xchg fmull ja inc in repz nop lods icebp pusha add js mov xchg (bad) test gs mov fs push pop fstpt loope (bad) shlb mov sbb lea in inc adc addr16 jbe jo sub lds and loopne movsl push xchg xor adc pop jbe in cmp add out lds push mov cwtl jmp dec stc jne or icebp jne xchg in mov xlat out dec push xchg fbstp in jae movb aaa xor icebp xor jb inc ret jmp or inc cltd rep aam test pop int3 push ds mov and jb lcall jg pop push roll inc add mov mov xlat dec mov in lods gs lods idivl mov cmp inc push rclb stos cmc stc (bad) add jno or fstpl fstpl fwait mov loopne mov mulb jge (bad) js mov push iret in aam daa jne lds pusha dec (bad) mov xchg mov xor or faddp mov inc mov and push mov call shl cmpsb in in rorb jge inc leave or mov rorl xor push les sub test call std sub idivl stc push jecxz push psubusw inc jp pushf jle jae mov mov imul or cmp test movsb sbb jge das mov pusha mov int stos leave or mov mov mul inc in negl loope test lcall rcl in jno out je jmp stc push in loope sbb pushl jmp jno jl repz mov adc xor jne scas cmpsl es adc insl fsubrl sbb dec xor test call add adc or jge mov fstp stc and gs fxch or mov jmp sbb test jne or test lahf notl aam sbb imul enter jno inc lret ja,pt or and aad inc notl inc and cltd faddl jns mov sarl dec jecxz fucomp in addb ljmp (bad) xor test push testl (bad) mov cmpsb ds daa mov daa or icebp fisubl or mov ret mov pop xor adc pop cmp xor pusha pop lret sbb mov insl cmpsb dec stos icebp movsb add (bad) xor lret sbb sub rcr pushw out jno mov out sbb and testl sub mov lock dec push shrb lahf mov inc dec sbb iret repnz lods push add cli movsb cmpsb mov xchg hlt inc ja mov push repnz popf popf dec call data16 sbb int mov jbe daa sbb push xchg cmpl pop sahf aas (bad) xchg negl shr dec inc bound xchg fisttpll jle cmp jle jle movsl imul mov das mov scas shrl (bad) mov scas test aad sbb cmp loopne mov addr16 and or adc jg and jl cwtl cltd lock es in loope and insb cmc (bad) into jns xchg stos (bad) scas sub aad add or push and imul or scas rcrb sbb fldenv add xor bound jns mov shrb or and fstl or stc mov sub stos jnp daa push or inc je ss adc mov lcall sub aam sbb cs dec in push add jmp repnz cmp stos inc pushl pop mov add (bad) cmp cmp clc loop sti aad js xchg hlt fcmovb and sbb jecxz adc pop mov push (bad) aas cmp mov mov fcoml add sub cmp cli out add aas fnop enter jmp std movsb cli xlat leave or push xchg fidivl shl das mov pop mov sti push cmp loope fist dec jo lods sbbb imul mov ss xlat loopne cmp in dec cmc mov or sub js lods jecxz xchg push mov mov repz mov push outsl mov in sahf inc div cmpsl dec imul decl mov push dec (bad) mov popw mov shl push test rol inc and dec ret mov (bad) dec inc pop push stc adc add popa sar je jb push adc sarl imul cmpsb or loopne cmp mov (bad) ja ds mov ja hlt and push push leave stc sub iret cmpl add in or xor dec ficompl (bad) (bad) fisub mov pusha test pop sub mov iret mov mov xlat in cmpsl (bad) das inc in mov fisubl pop jbe dec inc insl aaa test xchg fnsave in jl aam cmp sti mov call or fwait rcrl xchg dec jecxz imul mov je mov or jns or (bad) lods mull mov fisttpl sub popf mov push (bad) (bad) mov sub xchg jge inc cmc adc sbb jno movsl push fcmovnbe aaa jmp incb dec sti xchg or jg pop out cltd (bad) mov out mull dec jge negb inc pushl std fldcw push or outsl out mov push cli adc jg (bad) sub ljmp jo mov pop mov mov imul pop pop faddp cli outsl inc push dec aaa jae sbb jae aad dec push out movsb movsb cmc xlat pop sbb pop es cld fcmovbe popa xor xchg cltd lds pop dec dec push cmpsl xor repnz stos icebp push std jae movsb shl int mov pop and rolb icebp mov rcrl imul sub bound leave out sub jl cmp jns sarb cwtl xor push add dec clc (bad) icebp outsl jne inc mov jbe xor icebp icebp mov test sbb push fcmovbe out jno icebp xor std outsl les push xor shrl outsb imul stos (bad) jns mov mov cli aad inc popf sti xchg cwtl or mov sub mov mov sar ja cmp fucom in faddl in loope lahf push inc lds clc mov (bad) xor in pusha dec jle call pop in jae and bound lock pop xor push add (bad) xor out mov stc inc icebp adc sbb (bad) rep jle stos negl jno push fdivrl mov out (bad) sub inc jg mov sbb call rol repz xchg gs in cmp cmpsl sbb stos cmpsb dec lods xchg icebp ret adc lds fdivrs adc push mov mul scas mov sti gs icebp cld xchg rcll frstor movsb inc lods js jne push jno call gs xlat insl clc imul fistp movsl and sub push push subb cmpsb cli dec mov sti icebp ss mov loope and ret inc jmp mov jno aaa in rorb mov test dec sub mov pushf mov dec push hlt roll fidivr sti and pop std into cmpsl dec repnz add rcrl inc mov in das push movsl dec mov xchg fcmovbe call jecxz adc cmpsb ds icebp mov jne inc push (bad) mov xor fnop cwtl mov in (bad) sbb cs sbb popf aaa mov cli jnp fcoms push xchg movsl imul test fdivrp (bad) in test popa (bad) cmc lea out imulb std test add push cwtl jbe adc (bad) (bad) leave test movsb stc mov cmp incl fstpt icebp xlat pop aaa (bad) std lahf shrl pop mov aam and in or push cltd mov popf loopne jmp jae lcall jecxz mov adc lcall hlt jg int xor xlat out (bad) and mov jmp and leave jl fimul jo xchg aad adc fisubrl mov sub jo and pop stc (bad) jp daa lds int fist cmp and popf add push push inc cmp dec and int pusha in (bad) dec outsl pop add (bad) mov push out push cmpl (bad) cmp lods cmc out int cmp jp xchg outsl mov push lock int3 mov bound or js rorl mov mov fidivr in popa fcoms je sbb jae es addl bswap insl (bad) loopne leave movsl imul cmp xor mov jno ss push add pop fdivrl sbb lahf dec mov inc movsb xor in adc mov mov jl in fsub pop push lret fldcw and mov movsb jle jmp mov and (bad) ja cmp out fnstsw rolb pop in cmpsb fstpt in jge mov jns push or xchg push fnstsw mov jl or add mov cli jb xchg call xlat mov xchg cmp dec cmp dec inc in xchg sbb mov or sbb (bad) out add jl xchg push inc enter mov cwtl adc (bad) push rol (bad) push fiaddl and adcl xor sub sti xor inc xor hlt enter and xor inc int3 mov fist jg mov scas sahf mov jmp rorl fsts inc aas lret fidiv xor adc (bad) repz adc jno xchg std adc lods orl push adc push xor adc push int xchg rcrl stos clc repz lods out cmc fmull and icebp lds int jne adc cli push mov inc jle cld and lock mov mov imull xchg or mov lret dec mov dec std shl into js jno cmpsl loope rclb mov loop cmpsb lock mov mov repnz jg xchg dec xchg gs adc push call std fwait clc push (bad) dec inc jge jmp mov adc rorl (bad) mov repz movsl ja jnp cld (bad) mov push add xchg jb cs fsts ds dec sbb adc sbb int3 out fisttpl (bad) mov in dec fldl js popa rcll adc insl loope lcall ja pushf mov cmpsl mov lret xchg mov jnp test das loope leave lock scas mov sub mov xorl movsl (bad) push jae sub cmp inc outsb ret xor pusha cs incl ret icebp rorb or mov add cld out sub or (bad) cltd cmc mov rol and int3 sbb adc dec lock pop daa ficoml subl mov loop negl xchg mov pop cmpsl test (bad) cmp fdivs xor gs cmc popa cmpsl aaa out je pop frstor int ret out xlat roll loopne stc cld xor xchg jl xchg xchg fdiv push flds lock movsb lock and sub mov (bad) out cli inc cmp push xchg out lret repnz loopne (bad) std (bad) jne mov shrb lea mov mov idivl into or push jne cmpsl dec cwtl arpl stc (bad) or push inc xor in jne negb (bad) xor in ja push test ja icebp fxch xor dec mov inc testl pop lods rcrl outsb xchg ja dec cltd mov jne (bad) roll imul and (bad) (bad) js sub jecxz cmc xor mov mov dec push in mov sti sub mov call xor out es call mov (bad) std cld aaa mov xchg push clc mov in mov std stos sti xor fdivrs (bad) mov xchg xor or in cmpsb test mov repnz inc sbb ja imul or mov in int fnstcw push adc xor fcomip xchg in sti xlat int lret fmuls jge dec mov in or adc rol sahf addr16 loopne test cmp jno mov push xchg test add sti adc adc jo stc (bad) fsubrp pop sti jne std push pushf adc or cwtl scas pop inc mov push sub mov in push test ja fsubrl inc and sarb rol xor stc mov and ror push dec dec adc mov rcr shrl dec push adc call fcmovu mov (bad) push popa in mov push enter inc mov jns adc mov cmpsl jb jae clc dec test xchg divb loopne ds iret jecxz imulb outsb jg sahf xor xor mov cmp inc lret sbb push lea adc scas xchg call cmp fsubs fnstsw pusha jmp in dec adc jmp int3 fldenv xor ror adc and std add mov inc lock mov insl fldenv js out cmc push andl ja push fcoml xor sbb out mov out mov jbe sahf (bad) popa mov xchg mov fidivrl mov xchg in ljmp arpl std adc add mov jmp dec lods cltd lock into daa jge mov adc xor push popf push (bad) aas cltd jne or lods push out addl jns cmp jne or in pushf cltd icebp jne test daa ret jmp out popf dec scas in adc lret enter fisub jne mov fstpl mov (bad) mov pop mov enter gs out xchg mov jl leave aam jne xchg jno xchg pop lret mov sbb mov (bad) xor mov push fimull imul das inc in push (bad) xchg jg aam mov out mov popf jno mov adc outsb mov outsb (bad) jns pop push movsb fldt js push pop movsl or shlb shrb adc push mov xchg test jp add fdivl or imul jle (bad) xor out adc push sub inc add xor fld1 jnp sbb xor mov (bad) daa aad loope jecxz mov rclb fisttpl clc fs sub xchg dec in lahf lea mov test mov mov cmc sti test jns in (bad) xor jle fimul divl lea cld jno loop mov add lret je jns pusha mov std in xor lea ja rorb add in sti mov cmp sub sbb jle inc daa lea jne dec sar lea pop xchg lods xchg ficoml clc cmp in xchg jle je (bad) test icebp fimul dec or or test xchg add add int3 adc cli fnstenv je aas leave (bad) les loope dec or fisubr or mov out div aas jp jle mov xor fcmovbe xor bound jo jbe in cmp sbb dec inc (bad) mov scas jnp and lcall insb xchg cmpsl push mov adc out inc subl and test in push pop cmp pop sbb outsl in repz popa and (bad) mov inc popf mov add inc jl mov mov xor sub jo icebp subb xchg mov pusha jl imul xor add sbb mov test sbb add aaa mov lahf sub rcll dec adc add out adc adc push ja loope and jp out js enter jl cmp adc jecxz dec ss shll arpl cmpsb (bad) out in into popf imul add or cmc (bad) cltd hlt xchg popf es pop std test loopne cmp mov adc sar adc jle pop fildl or bound cltd gs movsl in (bad) icebp sbb adc and inc lds out fstpl inc xchg jo int in inc mov mov ret (bad) aaa test jmp sub push sti add cmp test out push cld mov cli pusha fs xor mov push fmull xlat adc imul cltd sbb test and xchg inc icebp popa adc adcl cmp mov dec pushf mov dec lds dec adc out push push ret repz cmp mov add adcb dec fstpt addr16 mov or xchg scas addr16 fnop ja mov stos mov jge push or jmp sahf sbb inc xor insl outsl mov movsb mov int mov popa sbb jno notl pushf (bad) cmp dec xchg sub add add fmulp mov mul sbb pusha pop inc xor test cmp lock mov cs mov jmp in stc adc jno mov push hlt cmc add or mov sbb in jne lahf cmp out push lds scas dec rol js xchg (bad) cmpsb jne stos pop dec mov xchg test jge dec call push jns imul xor sbb repz lods or decl movsb aam stc flds (bad) pop (bad) mov std (bad) je dec xor in xlat aas xor pop cmp mov clc jg pop stc stc (bad) daa bound adc cli dec mov mov xchg adc jle daa jecxz jecxz jno jmp data16 repz or xchg loope push cmpsb adc sbb mov jl into xchg aad jl scas call cwtl sbb mov popa and daa mov jle sbb movsl gs aad dec xchg mov movsl cmc jnp test pusha mov xor cmpsl gs xchg sub jns out xchg (bad) out jmp jp out pop out mov mov and xlat imulb je ljmp hlt iret rcr add push mov in aaa cmp push cmpsb addl repz shl lods jb fldln2 fcomps popf and movl (bad) out subb (bad) mov aam shll pop cmpsb dec nop dec rcr fwait incl stc (bad) lock fnsave in rolb adc add (bad) and cltd jmp jnp push fist push mov jne cmc mov test aam test in call (bad) and jg and (bad) lahf jno jae hlt stc je mov int3 and dec inc clc test sub sub jle dec rclb cli (bad) lock hlt andb xchg clc dec ret inc scas cli leave ja icebp jne xchg lds or mov inc jno adc lahf jmp cmp and mov js test cs mov mov mov add jmp jmp mov (bad) mov mov mov pop sbb pop cli loop push mov into push icebp test jle shrl jge ret mov cmc test icebp add inc jae pop push (bad) jle sbb adc hlt mov incl clc cmp mov shlb xor (bad) jge popa ds leave push mov jno lock pmulhuw lock inc mov dec test stos xchg stc std xchg or aad mov aam jno int3 rclb into (bad) notb arpl mov cmp into xor addr16 jne sbb add stos leave gs jo mov popa jo cwtl push ss mov in jbe mov push add ds (bad) mov xchg addl fcom shr fwait jns mov pop jle inc mov test test jle cmp (bad) mov jg enter fidivr ficom sbb (bad) pop mov jns adc push jns insb ja mov incb mov xchg fstps jle mov or adc es pop pusha orl faddl popa test xlat adc pop shlb repz adc dec ret push mov mov mov add xor out ret adc ror pop or sbb mov std movsl div int jb cmc frstor xor inc jbe imul pop or je fwait mov fcom and xchg add dec aaa out bswap test jp fisttpll mov pusha jmp xchg add sub push jae (bad) cli pusha mov test adc fnstcw aad fdivrl mov pop ja aaa mov or add mov adc cmp hlt xchg cmpsl push lds lock icebp hlt fisubl mov add cmp or sub and or xor int3 repz pop adc lea push cs and push mov add push xor imul adc imul loopne add fist mov xchg or stos cmp test dec adc ficoml sub jp (bad) xor mov jns or cmp repnz xchg imul aas mov dec insb jl fsubs ds cli push insl jmp sbb bswap mov or inc sbb icebp (bad) jno pop lock or xchg xor repnz insb xchg (bad) jge insl popa (bad) mov es loop sub sbb or cmpsl mov lret sbb pop outsb jl icebp mov xlat push rorl js lret xor jae shrb sub sub jo cmpsl add mov (bad) stos lock sub (bad) jmp mov jbe fsubs fucomip mul out les ja mov xor xchg xor jno js aad incl daa sub cli lds push sub rcr mov das (bad) icebp mov icebp and popw (bad) mov sub push sbb jl ret jns jmp aaa pusha dec sub sub movsbl loopne sbb outsl push repz add xor test dec test icebp pop cmp or mov xor or cmc lahf lahf dec nop imul cld mov aad or dec hlt cs addr16 lds cmpsb insl mov icebp push xchg dec mov mov mov fdivr or (bad) pop mov (bad) adc and xchg fnstcw addr16 std jno and cmpsl rcr adc adc es test xchg nop (bad) fsubl push aas (bad) or push daa pop sub or pop lret lods nop test or fdivp dec lock xor xchg nop movsl xchg lods loopne (bad) cmc fcmovnb xlat in cmpsl mov sbb sbb fcmovu das mov jno ja aam jl dec adc jmp mov lods mov xorl add scas cmpsl xor leave bound and std aad adc leave (bad) xchg rcl mov sbb out cli dec jo sub mov mov cmc cmpsl mov adc es aam mov mov push ja xchg iret jecxz pop cmpsb mov in and cmpsb add lock adc sbb std jns stc jmp mov (bad) in jns cmp (bad) in inc mov mov cmpsl and mov fcmove dec test mov sub icebp out cmp scas roll mov (bad) mov pop mov js adc mov (bad) insl test sbb fxam out add xchg cmc std xchg adc enter daa loopne repz dec in lock rorl daa test mov mov push mov xchg adc bound das sub pop leave mov mov xor stos and fild fcomps mov push mov jo into jle jb sub add adc xchg stos adc sub imul mov int3 jne enter push movsl jbe out pop adc lret aas and mov cmc or stos push xor repz add and cmp lea xor into or ud2 or loop js movsb cmpsl fcom aam (bad) popa repnz push das test test fs dec repnz cli jns cmpsl and lea dec (bad) xchg or test and scas mov mov push or xor idivl jmp ret adc in shll push jo not loop sub std loopne jbe xor or add loope jecxz mov mov jle jp jecxz cmpsb pop cwtl inc ror push mov xchg les test test adc pop test into leave into push pop rcll mov loope ds aam adc cltd rorl sub shll xor leave loop leave pop add pop or pushl adc movsl sub add mov icebp lods dec and mov xchg je gs aam cmpsl aaa or subb fstps cmpsb cmc jl push pop or ljmp pop test mov inc into add ljmp int3 jecxz repz icebp in jecxz or dec in bnd fwait (bad) int adc test dec dec push test imul or imull std push test test inc pop lods dec sar aam pop xchg nop ret test jne scas jnp cmp xor mov out jg xchg xor fst insb pushf and pop sti xlat jo and std inc adc out sbb out xor jp jns mov addr16 jmp jg adc outsl imul pop or nop push push mov cmpsl mov dec stos lods pusha dec std (bad) jo cwtl cltd xchg xor cmc mov insl lahf adc imul sbb test cld adc std pop mov mov mov jmp jmp in shrb jmp loope xchg sbb xchg jg cmp ror xchg xor (bad) into (bad) mov jg scas outsl mov leave (bad) adc das sbb mov loope test push aas mov sub hlt sub inc (bad) or loop shl enter fcmovnbe xor lock jne sub mov lds or pop mov cmc test or movsl inc adc sahf ss lods (bad) jo cmp movsl sbb dec loopne mov (bad) pop lret xchg inc cld sub divl aad cmpsb jo repz enter je mov mov cmpsb icebp int stc mov xchg js mov mov jmp xchg jo jne add in xor inc daa or xor dec xor sar and (bad) ja or mov not or adc arpl mov mov jle push neg test mov or sub push or push rep mov mov lea ficomp stos fnstcw ss lock adc mov sbb imul or std aas rolb mov sarl fsts ljmp adc and stos xlat add stc out dec test or fisubrl mov loope dec xlat mov jle mov cmp into dec push repnz out dec leave bound cltd jmp cmp xlat inc stos jle (bad) je test mov cmp push mov or jbe cmc xchg movsl cltd dec or test or gs (bad) repz repnz sbb cli inc div loopne fidiv test rorl movb (bad) mov testl and imul scas dec mov insl push daa rcrl lcall adc cmp push sbb mov loope test mov out test stc cmpsb call lods aam pop pop (bad) jae jne jl or or adc aad mov std cmp add sub adc xorl push sbb sti movsb arpl adc push sbb push fstpl sbb xor in mov push data16 fs or out mov or addr16 add out jecxz cmp pop sti out cmp cld icebp cmp inc clc pop push mov mov inc push das jo jl cltd test stc adc pushl fbstp ds sbb xchg arpl jl fidivl dec imul mov (bad) jne cmc pop sbb and jo pop dec jg and or pop push or mov dec fnstcw fdivrl shrb movsl jmp repnz mov addb icebp cs in in adc out outsb adcl mov ss jmp jo cmc cwtl mov std flds jp test sub movsl aad loopne rol push or cmc cmp arpl add cmp (bad) xor shrl mov idivb mov pusha mov xlat in add adc mov mov mov pop jmp or jne fcmovu divl add jmp xchg dec int3 xor test fsts fcomip sub das les int3 xor testl popa test pop jmp mov (bad) std jbe push or cmp xchg mov (bad) int3 mov into shll add inc out dec idivb enter and jne (bad) push dec aaa sarl enter mov gs fsubrs mov mov in inc jno stc lea loop rorl mov jge and cmc scas mov stos dec cmp pop mov lret or cwtl add mov add pop mov mov les incl mov jle pop pop ljmp aaa lret loope jno mov andb bound mov cwtl (bad) mov dec outsl or fnstsw in cmpsb iret mov and cmp (bad) fidivl andl in neg sti and jecxz clc cmp jmp cmp cmc xor mov ror imul shrb and jo lahf mov xor data16 sahf jno jmp in dec xchg (bad) stc pop and mov sti lahf repz or inc adc pop push add int sahf xlat mov xlat push and jns movsb lock mov (bad) in xchg cmp insb push fcoml aad dec out ja (bad) inc mov mov push sti mov adc imul repz mov cmpsl xor jne clc lds dec repnz stc jno jo adc fucomp lock fdivp test out in fnop (bad) cmc cld (bad) dec add sbb clc jbe sarl lahf inc push hlt lock sbb sbb mov mov enter xor out lahf cmc ja cmpsl adc jp push mov imul out mov test ret popf sti or mov dec lret mov push or movb addr16 leave ror fldenv sbb inc cs mov fistpll jns fisub jns or stc stc add aam cmpsl mov cmpsl cmp rep call (bad) mov cmpsl adc jne outsl sbb xor jg adc fs and adc mov (bad) push icebp loope stc pusha jno xor push clc pop (bad) mov (bad) jb sbb jns jg xchg aas rcl xchg stos and clc rolb cmpsl inc fcmovnbe in stos adc std in jbe cld sub in xchg adc mov xchg std call stos mov fistpll test scas inc pop hlt mov (bad) and out or xchg xchg call lea int cltd pop fcmovu in xlat jmp or mov call in clc popa shlb push ret imul xchg jno je iret xchg divl loope jo mov fstl loopne or push xchg jp mov mov orl mov in test fdiv cli movsl ret outsl pusha out adc into leave adcl mov hlt xchg (bad) lds in out fs aas nop mov mov dec fs or jl xchg ss dec out jne int dec idivl stos xchg test in (bad) je out mov mov testl dec sub in aad push call jo std test ffreep (bad) (bad) idivb (bad) pop ret adc je in jno fldenv (bad) jo aad ljmp cld movsl loope cld xor outsl or push xlat xchg jne mov mov in (bad) dec xor div cld cmc mov mov fwait sbb insb test je clc mov out adc xor dec in out sbb mov call insl test cmpsl fisubr and enter (bad) and dec add aaa add or dec fisttp xchg mov aad jge cmp clc inc dec pop outsb mov push add in cwtl je lods into or xchg pop out ss sub mov mov rorb push aas jnp stc imul mulb out in inc call sub sub test pop pop xor jmp orl mov fild mov inc stos (bad) mov or sub inc (bad) data16 xlat lock mov movsb xchg stc fbstp or (bad) into xor cmp lock in pusha sub mov icebp jnp dec clc (bad) cmc mov mov sub into mov jl xor jmp rolb lea xor push hlt adc or xchg ds or mov ja push cmp jae mov jl out adc in cmc (bad) push nop jne int mov xor repnz jns dec pop aad xlat (bad) fdivl scas leave ret jbe xor jl add pop (bad) fs movsl inc cmp dec (bad) xchg jo jg mov gs mov cmc cmp cld out cltd inc int3 xchg cli xchg mov cltd cmpsl loop stos cmp mov fwait dec mov clc mov outsl pop xchg sahf mov jmp push mov pusha push lods xor lea mov sub cmp stos cmpsl sahf mov push mov out loopne dec enter in cmpsb stc adc cmp jno popf aam dec scas push aam push hlt xchg jne repz and sbb test gs arpl mov xlat jnp jbe lahf or xor inc xchg jns dec idivl shlb test xchg repnz lods divb jno imul and xorl stos jno fcomps fdivr dec test mov mov xor mov mov adc out mov xor pusha add jle add lahf pop mov pop sbb inc push adc cmp lret clc je (bad) lahf adc daa outsl insb je adc xor and test xor aas jecxz push std test std add cwtl imul mov addr16 imul inc fisubl (bad) or test xchg inc and dec xchg icebp pop insb xor les hlt jecxz mov mov scas xchg add cmp mov mov (bad) in loope test adc and jns enter scas cmp mov adc push jb sbb mov push (bad) push adc mov sti push movsl lock std shll inc js mov adc inc fidiv shlb test mov adc jg out (bad) cmc enter jo inc jge test out inc icebp pusha loope pop in mov shll mov test js adc (bad) loopne (bad) mov mov jge fnsave scas rcll jns shrl mov fwait rcl or stos pop pop mov (bad) imul rcr in scas out in inc mov jge dec mov lock pop outsl aam (bad) lock lcall pop push pushl mov sbb pop test mov xchg fcos jp fwait sbb push mov leave mov addl xchg outsl fist lahf fstp cmpsb test aaa sub int clc xor push push mov xchg rorb xchg jae loopne sub ljmp fwait add call inc pop add jae xor jns popa or mov cmc (bad) in out mov stc ljmp jmp adc push push dec jne shll movsb sub call arpl aam and out pop lret loope cli cld in fistpll jmp in xchg xor jo fnstenv std (bad) stc (bad) lock push sti lahf pop cli (bad) mov mov cmp inc mov dec ja adc nop jnp mov and fisubr xor out xor enter mov jmp mov add data16 xor push add mov pushl hlt push jmp pop dec pop jecxz add stos inc xchg jne xor fild mov sbb jmp mov xor mov mov in (bad) or loop test fnsave test inc sub rorb in enter (bad) outsb mov push into xchg cmpsl mulb aas iret and jle cwtl loop mov add sbb jnp dec push dec mov sbb xor aad and lods jle jno (bad) test test xorl (bad) in mov mov fildl test aam cmpsb call push and mov jp dec bound fldt inc fnstenv fldcw stc mov inc movsl add xchg jo add cmp xchg xor inc in in clc rcl in icebp jmp add shl bound mov adc adc inc into out sub jo or cmc dec (bad) idiv adc test test (bad) pop aad push xor orl sub push cwtl jle nop frstor adc mov lds cld stc lods repz mov mov shr ffreep mov and jo aam fld1 xchg nop sbb test lock push adc roll fildll xor mov mov sub and lods test sbb aaa mov jne stc ret xor out inc lret xor dec stos lods dec sub stc xchg sub iret pushl outsb xor loope subl cmpsb jno cmp add cmpsb sbb dec or sahf fbld dec addr16 call inc pop jno lock pop (bad) jo rcrb jle and dec cmp (bad) or adc test repnz rorb or cmp or rorb les into xor mov (bad) or out mov aam jecxz xchg ds test divb jl adc mov sub mov fbld push sub test hlt mov pop cli pop pop lret leave sti subl mov jo std jae sbb sahf in push enter insl jmp cmp leave cmpsb testl data16 sub add dec movsb daa mov out test push (bad) mov jo xor fwait jecxz inc pusha dec or sbb cmc fnop inc sbb call sbb cmp cmp hlt push mov int3 mov mov fidivrl push test enter mov add lods mov scas out (bad) loope sbb dec sbb (bad) push pop out pusha daa adc or jl notb in aad xchg testl aad iret push roll out loop mov loopne divl mov jbe dec push mov vpaddw inc mov xor mov xlat mov in sub jne mov mov sub inc mov sub xor mov mov ja daa in rorl add aas out xchg mov lcall inc mov outsl stc push sub xor xor jne (bad) in or cmp or cmp mov aas pop xchg cmpsl mov sub mull mov stos stos shrb test pop cltd sbb or mov outsl imul adc inc imul mov jmp jecxz mov sub cmp fimull dec in add jge dec mov mov jno inc lea jp (bad) inc out mov mov lcall lret std sti hlt rolb sub mov int mov mov or out xor (bad) std rcl xchg loopne lods sbb jmp push rclb mov jns xor loope test outsb jbe xchg pop imul ljmp or sub scas outsl mov xchg push add mov sarb lods pop or icebp (bad) (bad) movsb js mov or mov vcvtsi2sd jecxz mov xrelease fstpl stos mov xor stc cld cmp mov in cld pop in iret (bad) xor mov std data16 or movsb add out fnstenv jmp movsb mov test fxtract dec dec jg test repnz mov adc lock and mov cmpsb icebp inc mov into sbb cli inc test stc jl mov push sbb xchg or hlt decb mov je mov xor int clc (bad) cmp mov cli xor sahf loopne and mov fisttp xchg jbe push dec frstor fucomip test aam lcall push jbe adc xchg sbb (bad) cld leave cmpsb jl fsubrl sub adc leave dec ret les test std (bad) imulb mov jns icebp test sub sbb cld aad mov mov pop pop aas (bad) xor sar push imul adc sub cmp xchg lret addr16 jmp add mov jo out rep mov aaa push mov sub or lret in dec pushf jmp int mov in ficompl int in (bad) mov push sbb mov push stos xor rcrl or sbb mov or and stc lods mov mov mov mov fs out stc aad vpcmpeqd or daa jecxz mov adc mov sbb imul (bad) outsb movsl or into ljmp and jbe sbb shr cmp sbb rcll shrl test gs iret iret cmpsb pop test mov jl scas into es lret or pop adc scas or (bad) ss stos xchg mov fldt or stos addr16 shl movsb cmpl xor rcll negb fnop adc sarl or iret mov xchg inc mov aam push xor or repnz into and or (bad) je lods sarl add icebp aaa cmc add loope (bad) out mov fnop out lret outsl xor or movsb in jo int iret mov hlt jl lock gs clc jne mov jo out mov cmp mov fcoms or adc addr16 je cmp mov lret cmc mov mov push fldenv fbld out inc (bad) idivb and test jmp cld iret push rcl inc jne jnp mov std mov popa pop popa mov fnstenv adc fwait inc lret xor into fdivrs ja inc out lods mov or stos rorb mov mul xorl lock stos std push std mov add repz test scas popf (bad) xchg jbe or inc outsl mov mov inc test out insl hlt xchg pop jmp push test popa push ss sub fsts ljmp into mov test rep scas pop (bad) cmc test mov mov (bad) div rcrb push xchg jo (bad) jle out fidiv pop cmpsl repnz xchg mov mov fdivs mov jno push mov jle (bad) jmp pop loope xor jmp cmp add xchg hlt dec push sti int3 in loop add rorl push ss ficom adc iret and shlb out push out inc mov int3 (bad) icebp jno rcl cmpsl cli cli jge mov ja,pn mov enter inc fidiv mov adc (bad) icebp dec push jb push ljmp std cmp mov ret or mov outsb cmp mov cmp mov out jns jns mov ss fisttpl adc cmp or loope cmp shl or rorb xchg (bad) aad fisttpll mov (bad) xchg test xor xor sar mov dec dec into xor xchg shrb dec pop iret dec into mov pusha mov push (bad) mov repz out stc lds sarl stos sti into je (bad) cmc mov add mov repz lds mov cs in popa xor mov mull mov ficomp outsl sbb test mov in js ret mov movsl push sbb mov iret daa data16 add cmp lds aad in mov lds jns xchg push lahf sub push mov mov xchg mov insl cmp inc std mov adc cmpsl lret xchg pop scas stos pop mov sub lea imul xor lock add or div inc fstpt xor aas xchg fisubl fsts rcrl or mov adc int xor es (bad) add movsl inc loope xchg lahf sbb add lds mov mov aad stc rcr scas pushf out dec icebp mov xor movsb mov mov ss (bad) dec scas pushf test lds xchg xchg test inc and sbb mov out mov inc icebp std std push (bad) jle int push fdivl add and inc add stc jbe or and (bad) xor ds popf test popf mov sbb xor jge mov mov test stos mov xor fnstenv jmp out hlt jl ret inc mov (bad) (bad) mov cltd stos lods cmpsl scas inc mov iret stc and sub mov sbb sarl icebp and xor or sbb jmp fdivr fistl cmp add pop movsl cli add insl scas push out stos or cmpsl mov xlat (bad) mov ret push xchg fcoml push pop mov adc add mov pop sub mov xor sub pop dec or movsb jge mov sti dec out ja and cltd shrb cltd stc dec or and in pop scas cltd xor jp frstor fidivl inc xchg test add jmp dec clc insb imul mov cmp js (bad) jmp mov rsm mov pop sti data16 jmp mov sbb into aas pusha dec mov leave in xor and jmp popf (bad) mov ficoml xor lods xor mov stos fisubrl int adc cmp jno mov fildl lock ja add mov sti shl into push lock test jmp outsl fdivp adcb push adc aam scas mov (bad) (bad) loope in bound loope scas sti call stc loope sub cld ljmp leave pop (bad) adc mov inc mov leave pop pop dec mov (bad) push xor xlat (bad) and xor aad sbb mov neg out push fwait mov das add jae shr test cltd fsqrt inc lods mov (bad) lods in sti mov test test mov cli inc mov and cmpsl bound repz mov inc or imul adc inc rcll dec andl cmp fs je or (bad) dec adc sbb or adc stos push fiaddl leave addl out lock or rorl mov lcall xor fnstenv enter sbbl decl mov test lods mov mov mov cs out pop mov mov into cmp addl fidivr sub mov arpl out test lods les mov in and inc loop sbb outsl xor sbb jl push cltd mov scas inc jecxz popa jnp lods ret leave into cmc mov repz movl shll in xlat lea mov jmp daa jg lcall pop (bad) sbb jne pop dec movsl pusha mov out repnz mov xchg jnp jno scas sub mov pop out mov leave decl lods lock loope inc mov je out lds aad out xchg andl push lahf mov in xchg stc cmp cmp out clc les cmpl clc out jno jne mov and jne mov jl in in fimul fwait mov push ljmp jb mov pop jg xchg popf ja mov stos sub out int aam sti xor cmp or aaa aam bound xor mov jecxz or out mov out mov in sub cmp out aas sub aaa cltd aam flds cmpl mov or xor or adc sub xor pop fiaddl sbb cmp enter mov or in repnz ret xor in jle mov push jmp jno je sbb popa call and push mov pop (bad) sub aas cmp cld or (bad) (bad) int inc lods dec lcall test or lods jbe or dec cmp and jge call std xchg mov jle xchg test aam imul test in aas (bad) mov stc cmp and add mov jns xchg xor fisttpl xor pop pop push in jnp jl jmp pop lea idiv fs leave xor xchg dec shl jno mull push sub in aad leave notb movsl mov lahf popf test mov pop xor outsb mov add xchg out lcall jge xchg icebp sub adc mov in push jmp clc pop mov mov mov outsb repnz or cld out xchg jmp sub adc adc insb push cmp cmpsl pop into sti sub idivw loopne sti jno and (bad) xor mov push sbb fnstenv mov xor pop or mov jmp je fistl pop add frndint (bad) pusha cltd jmp test push dec inc lock or jno push daa or mov out sub jne repz into and mov cli insb mov cmp roll imul jge cmc mov and aad out in fsub cmp stos add jle or sbb xlat dec inc leave mov fadds jno push loope jne mov les shr pop dec mov jmp cld mov xchg lock mov rcl cmp pop (bad) xchg xchg jae xor sarl adc pop and into xor xchg idivb push loop shlb jns in (bad) jbe push dec xor or xchg mov adc in (bad) lea js shrb cli push xchg aam test sub fnstsw loope stos and lods sub (bad) dec inc mov lods inc insl out push lods (bad) idivb mov test jmp adc aad cmpl jo repnz je cmpsl std jb aam stc loop jnp mov movsb sti add leave sub rorl out xor xchg cli jmp mov jne aaa out fist aad sbb in stc push mov scas xlat pushf in idivl xor dec ljmp push or xor repnz jmp pop jle bswap sub and out mov or jo or jmp cmp jae rcr std in (bad) neg cmc fucom adc xor mov out clc fldenv daa hlt in dec mov into mov inc neg add incl aaa insb dec pop jnp sub jno mov fidiv (bad) dec call repz std mov arpl popa addr16 ret add out scas nop fwait sti fcmovnbe pop enter jno std cmpsl xor bound jp divl repnz adc jg mov in fcomps testl xchg out into aas ljmp ljmp ljmp (bad) dec mov xchg into xor out idivb push popa test (bad) or mov cmp xchg and and fbstp mov mov insb adc dec call mov dec cltd pop inc test jne dec ja lods adc in fs add cmpsb jbe mov mov cmpsb loop cmpsl adc imul ljmp jecxz dec push call mov xchg std pop icebp mov push mov (bad) sti imul pop dec adc dec mov jmp jno in mov mov je jle sub cmp mov (bad) ret movb stos ficompl in push enter (bad) leave sub int (bad) adc dec (bad) imul cmpsb add out and and xchg cltd mov sbb fwait mov (bad) adc jno jp mov xlat es xor jecxz std cmp subl insb clc cli inc movsb lahf in cli nop fldcw stos roll xor stos xor mov jbe rolb mov xor xor xchg notl mov mov cmc imul jg outsw in fiadd hlt faddl mov pop test xchg fbld fmull loope fdivr dec xor push jmp movsb lods pop sahf (bad) pop xorb jo mov or xor pop stc lret sbb cli jne or jne mov (bad) xor in loope jle mov adc adc scas pop out movsb (bad) and push bound push fadd pop in in loopne in std push xchg in xor lahf and mov xchg adc lds adc cs clc pop (bad) mov je push sarb mov add in or inc mov fldl mov stc mov in jne cmp faddl sbbl jmp popa mov test jne mov test pop shr fdivs into aaa xchg sbb cmpsb aad xor jns xor mov xchg stos test (bad) cmc cltd cltd aaa pop popf pop movsb cld fs dec (bad) push sub cmp sbb testb in divl jmp repz mov mov ja sub lea pop xor (bad) sub mov mov jnp out in or cmp mov mov (bad) hlt or in xlat jmp out lock scas or cmpsl jecxz adc sub int (bad) stc jnp mov gs (bad) mov aaa mov pop (bad) je sbb (bad) into and xlat mov addr16 jmp push mov jne mov inc and out orl in or pop and in in cld xchg scas mov mov popl (bad) mov in sbb pop in add lods dec jp or dec cmp std das mov xor xrelease std call sbb sbb mov adc or shlb pop enter mov lods out mov std stc jae orb shl cmpsl fsubrl adc jge pop pop inc sbb les dec movsl xor test mov mov std fsubrs inc out jns jno das mov mov xlat dec lods (bad) mov sbb mov mov and jle scas adc mov jmp mov jne popa frstor or pusha nop xor pop cltd and loopne dec xchg push iret adc stc lods mov push jge xor cmp insl scas pop sbb sub adc aad xor aam dec mov int3 cmc add jb (bad) jns jg mov mov jno or xchg xor mov ret xor idivb rorl sub cld lcall scas ss icebp mov mov (bad) into add mov jmp loop mov int3 fnsave sbb shll inc test mov loopne mov add jecxz sbb and lods jle out out movsb lock popf (bad) mov pop fabs cmpsl adc inc lret push inc adc fsts pop lock or xor lods jg test sarb fdivrl (bad) sub test push xorl icebp sti inc into mov cmc (bad) xchg xor rorb add lcall sbb mov adc push icebp push data16 jg aam cmc sbb ficom sbb enter or mov mov les push (bad) stc xor lods jle mov leave fstpt hlt aam jle cmp gs (bad) pop jecxz mov xor into add icebp mov fidiv outsb inc pusha xor and shr loopne out cs jecxz jbe xchg xor js jecxz test int3 (bad) ss repnz repnz mov popa ret div and adc pop aam call xchg xchg xchg mov ret jne push xchg mov movsb je inc or adc dec mov daa mov repz mov inc lods mov fdivl rcll movsl lods push sbb clc pushf addr16 (bad) fiaddl (bad) jo (bad) (bad) lock pop lock js loop out push push mov pop incl fsts push xor arpl rcrb insb cmp hlt xor sarl bound mov ss cltd mov std or add push popf mov jno stc stc (bad) fmuls jge and ss or movsb outsl mov mov test mov sbb jmp xchg xor pop leave out pop and stos pop push fcoml sbbb movsb fldenv lock push sbb cmp mov enter push adc pop movsb in jl mull loop mov fdivs fmulp jne cmc lods jo int3 js in (bad) (bad) mov pop pop mov dec and xor or data16 cmp std pop sbb sub fildll and mov mov jmp xor xlat (bad) hlt jns das inc mov out sti enter dec lods push mull mov dec mov mov loop xchg test repz test js sar xchg test nop add jo movsb mov cmpsb leave stc pop jecxz inc lea cli add dec pushf rcrb stc cs addr16 (bad) call xchg pushf jns jbe or test inc gs hlt icebp fstps lret mov adc lock jae (bad) cli imul out repnz out xchg arpl cmpsl adc inc aaa mov mov sahf in fs (bad) (bad) sub jo or and into push sbb cmpsl fcomps cmc loopne push dec cmp pop or lahf or movaps mov inc adc aaa int3 and je pop push mov xlat mov mov ds test fnop imul imul cmp popa je hlt mov add rcll std int adc push mov sub mov cli dec aas mov in aaa mov test sub add (bad) lock adc sbb mov ret mov movsl in in (bad) xchg pop cmp clc pushf pop ljmp idiv or jecxz,pt lret inc dec (bad) ficompl cmpb fstpl mov icebp cmpsb lods andl or bound add pop jno in fs jo test mov stc mov xor test into jl ja inc and fisub sti clc mov lock unpcklps or jo cmp mov xor cmpl clc and push out movsl leave cmpsl mov repnz cmc mov push fwait loop loopne xchg (bad) push xchg testb scas sub sub sub fs imulb fcmovu sbb xchg out ficoml push mov pusha out (bad) jmp fmul loopne leave fdivl mov addr16 jo xlat aad dec pop jle xor cmpsl adc mov fdivrs mov xor lock leave lret gs xlat lods and (bad) mov call jp push call loope std lock mov jne std xchg imul inc mov mov aaa popf mov jecxz inc dec insb add mov inc imul mov mov ss movsl cmp lods scas outsw mov jae cld jns or imul adc insb mov sar lret xchg xor lea cltd scas jl mov sub mov insb js iret stc movsb and and sbb outsb inc jecxz loope lret pop int adc dec jns jmp jo out in push int3 inc cli clc std loope jo fldenv mov mul cmc sbb push leave adc mov cli je fimull aas sbb ja bound lahf aaa es xchg lahf push stos adc and lea push emms mov aad xlat loopne cld (bad) pop jge or and js mov icebp loopne jne push aaa imul sub enter cwtl shl fildl jns adc dec jbe mov loop cmp sbb add cmp pop push call push mov lods sar fs adc jle lock mov xchg push mov into push pop pop incl test adc aas je out out mov stos repz (bad) test mov cmpsl xchg pop dec lock sub in xchg movsl jne or aad add jb daa lret add loope jo les adc and loopne mov test (bad) or adc negl mov dec sub pop inc mov fucompp sbb dec sbb ja lods and dec iret inc add jbe fidivrl pop jno dec test xor xor cmpl (bad) xor mov dec cmp mov aad test (bad) hlt imul jne mov push (bad) sbb push push and int dec mov cmpsl in pop pop ja iret sub leave test in xor lods fidivr in cmc lea or mov jb inc movsl movsb leave add (bad) jmp jecxz or mov dec loop cmp sbb mov adc jnp and mov push mov xor mov std movsb xor neg dec insl sub adc inc xchg iret mov xor (bad) aad cwtl xor push jge mov into xor push jne dec test repnz or lods dec movsb sbb (bad) jmp mov daa (bad) aaa mov push or pop (bad) inc push pop or mov dec sbb int fsubrl mov pop mov cwtl fmulp sub and cmpsb imul (bad) xor push imul clc std in sub mov jle stc push call xor stc and xchg fcomip imul pop (bad) adc push stc jge movzwl push out xchg mov mov mov xchg outsb mov test loop push jg sarb imul imul outsl inc push imul dec cli jecxz cmpsb pop iret push lea jb stc shr cltd mov ficoml xor cmp lahf add and pop in mov or arpl add dec mov popa movsb imull inc inc lahf pop inc jle mov cmpsl adc mov cmc je cmp ss jno into sbb call in mov sbbb dec pmullw lea test and xor mov mov lahf push jmp ds mov in lret xor and fisubr out iret into mov out lahf jne mov mov ret repz ja mov jnp and jecxz or mov mov xchg test shrb or push mov lea adc inc dec push lea (bad) insl and cmp js jl fnstcw push ljmp sarl ja movsb sub jg test lret cmpsl jno icebp mov fdivr mov xchg repz cmp jle ja in bound dec mov cmc mov pushf subl push into xchg (bad) js cmpsl pusha into (bad) repz or imul pushf pop mov test test xor fstpt xorl movsl jo outsb mov mov sub mov sti dec aas dec mov push inc aaa ljmp xor cs nop lods or (bad) mov jbe icebp sub mov fs sub lcall xor jl adc daa inc pop pop jbe in pop rcrb scas pop in js loope icebp subl inc vmovntps scas sti test dec jl jno jns jge popa jg insl hlt clc imul or lock sub cmp mov xchg adc cld shrl int3 sub mov cmpsb mov fmull mov sub or and fs arpl lock imulb xor mov mov pop arpl mov push mov cli mov mov jge rcl scas jmp jle fs mov ret or divb cmc mov mov xchg sub jno fwait cmp (bad) xor (bad) daa lds jl (bad) mov idivl pusha sub gs jae (bad) andps jecxz mov dec adc lock pop xlat clc imul xchg in orl push cmp in sub cld inc out cld push inc (bad) lods push xchg jmp and insb mov mov push inc int pop test or js clc in stc out cld dec sar je stc mov cmp aam hlt add movsb or out test sti dec pop out (bad) in dec pusha sub adc ss ljmp paddd jns es xchg adc adc stc cmp cmovs hlt testb cmp (bad) cmp adc loope fsts sti ljmp cltd pop jbe in pusha adc inc lods fistpl decb pop adc inc add dec stc xchg inc into addr16 pop lret fs cmp adc loopne jno movl pop subl addr16 mov mov scas xor in mov cmp jge adc ljmp cmp fcomip div loope int3 (bad) and pop knotb jmp imul push xor aas adc mov pop jle cmovge test (bad) jo fdivs pop (bad) in add add fs and in push pop addr16 loope rorb mov mov adc orl ds test push cwtl dec xchg addr16 cmp jecxz mov mov test stos or xlat push gs ret mov jb ficoml (bad) das (bad) xlat std or in fnstenv les lock or in loop sbbl mov arpl mov fcoms mov cli push aad xacquire (bad) mov shlb pop pusha mov ss aas mov add mov and jo push jmp push sbb pop loopne aad nop rcrl rolb dec in call test cmpsb insl inc mov adc mov adc popa lock jge test sbb jecxz sbb hlt jns jge in leave push gs lock into xchg jns jb arpl call ljmp cli negb cmp out xor jle cmp sbb in mov call jno adc icebp adc out xor movsb notb sub dec mov xlat loope add (bad) and xor jno inc mov stc aam stc (bad) jae cmp mov in lea jb (bad) cmp out icebp mov pop das leave std pop jo push cli js jno inc sub enter push pop shr in sub fsubs inc pop dec jle jo or jne push xor jno xor dec cmp mov repnz mov jmp xchg mov mov jb mov mul into ja out (bad) inc sbb sbb mov aas mov data16 stos (bad) xor lods js scas mov inc scas ss jne aad fldl lea mov (bad) sub popa fldenv mov bound sub mull scas lea pop nop out hlt cmpsl sbb mov fidivrl clc fnstcw frstor addr16 cmpsb xorl leave daa pop ds mov shr adc push out out dec js test into aam dec mov in repnz jmp movsl cmp or loope out push orl push sub lds inc das int push ss movsl jne clc sar jmp mov cmp jo adc in pop lock mov and sub nop mov aad test jbe xchg rcrl mov (bad) stos or adc lahf leave xchg inc mov add lea xor add aaa (bad) aaa test mov cmpsb mov (bad) cmp pop mov movsb adc addr16 and jp and mov mov test dec jno aad shl enter ljmp jge push fldenv repz pusha push mov nop sub or fwait mov jmp jns mov ret cmp mov push shlb in in and gs jne leave hlt xor mov cltd movsb xor ss sahf and call xor pop clc (bad) mov dec mov xchg test pop jno adc sub jno xchg cltd loopne imull jle cmpsl add sbb pop (bad) xor inc pop jge dec insb nop jmp inc sub xchg shrb sahf dec sub in xchg pop into adc daa mov xchg xchg loope enter push xchg sarb (bad) stos lret ja cmp ss xchg cmc icebp repz pop insl lahf push xor xchg dec mov jl or scas xchg icebp ljmp or jo lock js testb mov push (bad) mov fldenv clc xchg sbb adc mov xchg in xchg inc (bad) jo ficompl xchg adc rol (bad) mov lcall insb shll mov or hlt mov insb sarb popf test pushf push and mov jae mov lds xor (bad) sbb jae cmp mov sar rorl sbb popf gs jle repz (bad) rclb and add mov cli in dec inc (bad) mov fucomip jmp xlat loopne sub sahf jno aam add cmpsb call sbb mov test ja xchg icebp mov jno gs inc dec fmuls mov (bad) xor jo loope xor fcomip xor dec jle aad mov mov test and jle (bad) mov je nop xor std xchg stc (bad) in inc lock mov add std push mov (bad) mov aaa lahf rep daa mov inc and dec add aaa mov test aad pop add xchg xchg clc enter fidivr add mov dec mov cli rorb fiadd sbb mov jo mov mov std rorb cmp test imul rorb adc imul and es je xlat xor movsl imul xor mov dec out mov outsl lret (bad) mov or test push fdivl jle sbb test (bad) cmp pop fwait lea push gs push mov test aas lea movsb cmpsl pop inc xor pop xchg pop fistpll jne cli xor push jp stc hlt movsl aam or je ss jne divl and sbb mov push mov (bad) adc xchg lret or mov in (bad) pop ret inc cltd ja enter sub lret add sub dec mov sahf in mov fnsave jge rorl jo icebp mov jo loopne aam leave lds icebp xor fucomip sti mov out clc jmp xchg xchg mov nop leave lea stc xchg jae decl daa push fsts xor (bad) repnz or (bad) jns fsubrp test jl or gs or adc jnp jo cmc pusha cmpsb cmc sub xor fdiv mov jnp cld dec pop in arpl jle stos mov clc xchg aas out inc jns iret fsubrl out enter jmp mov jne xchg pop xor out mov jmp mov xchg movsl jnp lods jne nop xchg mov jns jle add jns dec mov jbe mov iret jno in mov jge loop js addr16 fstpl cmc xchg repz push cmp mov test xchg jl lea add mov (bad) in mov call test add fldt inc push fs cli leave push or pop or mov stc xchg addr16 inc movsb bound fwait jle rorl (bad) adc aaa and push call xchg cmp addr16 stc lods nop adc jno cwtl mov rcll fmuls ror dec enter (bad) adc (bad) jle cmc fild sub int mov jne pop jbe mov jnp in sbb pushl jp icebp pop cli loop ja push mov dec mov mov enter push leave shl (bad) mov jle (bad) jge push pop xlat mov push js jge dec test decl stc rcr dec and pusha mov push dec fiaddl icebp xchg test jge mov push int push pusha xchg sbb pushl into stc xlat pop int sub cmpsb push (bad) test movsl push sbb mov mov push jecxz inc ja les adc push pop xchg xor (bad) or or (bad) push mov xor lahf xchg inc (bad) fisttpl out sbb fwait or inc xor movsb jo (bad) or xor push (bad) fnsave repnz xchg add mov and mov push sbb jle xorb int3 add sub sub lret leave mov mov fdivr mov ficom jne neg mov decl sbb jmp shrl push pop (bad) push bound jb rcll lds rcr clc adc ds ffree and sbb in fdiv std lock inc (bad) lret cmp mov push mov xor xchg xchg mov push dec call (bad) mov push push or adc icebp std fsubl out rcr sbb mov dec pop jbe ds mov xchg mov xchg jl test test rclb aad pop loop cmp xor and xor pop fldenv mov test dec and pop aam loope sbb (bad) mov lret add dec inc call fist or mov (bad) in dec push fdivr mov int mov xor mov sbb jecxz xor lea je mov pop mov ds (bad) clc icebp fwait rcl nop in xchg xchg mov das sub leave dec roll test icebp shr repz inc icebp sub addl (bad) lds inc stos adc pop movsb jle lods outsb stc fsubl and and out imul cmpsl push or xchg js mov insl std fidiv mov cwtl fdivrp dec ja jecxz in jnp xchg popa or cmp mul xor sbb lock je jae mov sbb mov sub imul cmpsl (bad) movsl mov push inc add mov dec enter mov mov mov inc push sbb mov add movb and mov mov and add pop (bad) jno mov lds pop mov mov mov (bad) js out scas out mov jns mov es push pop stc movsb fidiv dec ss push fist (bad) xor xchg cs loop pop xchg xchg lds jmp mov xor lahf pop cmp or fsts punpckhdq addr16 insl fiaddl mov sub pop rolb loope lods ret xchg in cmp int3 mov shufps xor das and lods xor xchg sahf sbb arpl fsubl inc icebp cmpsl push push (bad) jae test lahf fs movsl in mov out out in test sub lds xchg inc mov ret leave popa (bad) fs sarb cld lcall stc arpl cmpsl cmpsb or mov jmp gs inc fs mov ljmp inc in mov cltd (bad) int loope shlb test (bad) scas add or dec mov test fldenv into test clc (bad) cmp xchg inc mov add fbld fdivrs mov faddl mov fcomp cmpsl adc (bad) je mov fidivl (bad) (bad) shll mov nop xlat les adc aaa sub sub test sub and sbb int ljmp icebp dec mov cli dec shl std clc mul (bad) cs shrb jne and mov add jmp fwait mov test or aad adc loopne test push fisubrl ret call pop (bad) repnz pop xlat std xchg jecxz repnz (bad) mov jge xlat mov addl adc mov ja sbbl xchg dec push lcall mov mov stos jne cmpsl or jae repz pop mov lock xchg out shlb pushf jmp fstps xor mov cli cmp and mov sbbl std pop xchg cmp push sub out mov mov lds js pusha push jns leave push push mov add psadbw mov scas xchg mov jmp sti fucomip xchg gs ja sbb jl scas daa (bad) inc iret mov cmpsl xlat inc mov mov lods ficompl shr lods jmp or jo jns jmp or aad pop out ret adc pop repnz add mov add repnz nop icebp cmc stos frstor add push push dec (bad) push leave in frstor xchg arpl push jecxz lahf repnz or out fwait ja loope stc xchg loope ds lahf vunpcklps mov rclb xlat xchg mov ljmp std jne xchg xchg lods xor xor cmp popa xor ret or mov int lock lock (bad) dec into out lret mov and cmp push (bad) in std jmp shrb lea sub lods ljmp pushl sub mov mov mov enter (bad) mov aam add outsl test mov imul jge jg jno mov mov pop add in std cmc lcall addr16 or mov ror (bad) cmpsb nop mov mov sub pop int les in mov adc jnp inc ljmp jae push clc (bad) lock inc ja sti adc call mov std mov call mov test jns pusha js lods fstl in mov mov mov lock fcom shll mov ret xlat loop (bad) fistpll test out sbb fstps faddl addr16 (bad) mov pop xor mov mov fimul adc sub xor loope xlat shrl in sub jo hlt mov fstl aam iret xchg ja (bad) lret rsm add cmp mov lahf mov faddl imul bound clc inc (bad) (bad) icebp imul jno bound push cmc mov notl fld loop (bad) cmpsl pop cmp call adc or stc push cmp popa lds test xchg jno adc mov ret repz push cmp mov lret mov adc sbb movsl ret incl aam in iret leave popa mov mov loopne cmpsl pop sbb mov lret leave sbb int pop xlat fiaddl out pop fildl xlat mov or dec jae xor (bad) xchg je xor js pop pop pusha (bad) sub scas inc test push sbbl jecxz out dec inc insb popa scas stos mov jp aaa mov (bad) (bad) clc mov bound adc sti xor sbb mov sarb sbb dec lcall mov jae and inc mov pop daa mov inc int pop mov cmp mov mov out in ss pop jne lods into jne iret or mov jne mov mov into xor pop test loopne (bad) call xchg sub adc scas insb stos mov aam in test imul mov movsb in icebp frstor repnz sub pusha loop cltd addr16 and stc mov mov cmc popa push adc in push inc mov das icebp dec iret push lret mov aaa mov push hlt or mov mov (bad) mov lret stc xor mov mov test or fisubl test cmpsb ret std clc or mov ss (bad) lahf push jecxz lods xchg repz std dec call push scas push test ficoml xor sahf add and cmp mov or and test ljmp jno shrl mov jo cmpsl popa adcl jno jnp roll mov push jno,pn and mov iret (bad) icebp cmpsl aam or xchg and mov jae std xadd jmp mov push or fnsave cli cmpsb mov out aaa leave mov jae stos push in stc mov cli (bad) cmpsb xor add loopne xchg (bad) xchg rol jmp dec cld pop cmpsl mov pop or loope ljmp mov xchg std dec popa (bad) repnz stos sar jne pop push je jg aam std mov xchg std call sbb cmpsb jb sub (bad) ljmp gs mov clc xchg sbb inc in inc rol jae pop fucomp out call pop and call (bad) icebp out fimul dec iretw add into cmpsb arpl dec stc imul mov mov inc ret mov cmpsl shr out outsl shrl bound aam movsb int pushw mov std out xlat icebp jecxz jle sbb jne lock mull inc popa loope cmp mov push gs int3 fcomp ja rclb ds (bad) fcomps daa mov push xlat std stc jbe imul icebp pop sbb imul dec jae in xchg mov jmp inc mov push sbb xchg sub jge scas aaa xchg lock movsl push pop or fs fwait cmpl sbb loope sub addr16 out jmp outsb lret pusha jmp in mov cltd lods call sbb pop xor (bad) (bad) int mov in cmpsb aas int rorl lods xchg jmp sbb cmpsl xor mov or in mov adc lret inc sahf leave mov std shrl cld inc push lds out nop xchg ljmp stc (bad) fincstp mov adc pop and movsl insl pop xchg in stc mov mov cmp mov (bad) divl mov mov dec xchg xor fisttpll xor shrb xchg cmc popa adc lahf inc fnop push and cmp fsubrs insb jmp pop aaa jge es inc and fcom add push cltd inc (bad) pop inc jnp test gs pop stc jae cld push fisttpll jl mov movsl adc mov scas xchg pop mov in int3 sub in or jle rcrb ds neg stc (bad) xor and sub sbb lods inc push stos call (bad) and mov adc or sti xor xchg mov in ss stos hlt jne sub clc mov clc aad push jmp jp flds and inc cwtl cmp or fs mov rcrl inc in ja adc fcmovne adc ds iret xchg mov mov ds (bad) fidivl hlt adc mov in movsb add repnz mov movsb test xchg adc xchg popf xchg or or inc pop and gs jl shlb icebp popa loope or fisubrl out sub inc enter pop adc jne scas pop adc rol (bad) ror xchg rclb test clc loope inc adc aam inc (bad) kmovb dec divb loop aaa xchg and ficoml movsl mov pop fdivrl add jne movsb sub int3 sarl or stc pop mov flds out jmp pushf psrad or pop mov push or push (bad) sub xchg fnstenv (bad) pushf fwait popa jno and mov icebp sub sar cmp adc xlat stc pop into push mov dec sbb movsl add and xlat (bad) push cltd mov lods fst jp pop mov lcall mov inc or (bad) call lar pop mov mov into jne lods adc int3 aaa pop sbb sti call dec xlat (bad) enter pop (bad) mov arpl jl or lds rorl addr16 rol mov jmp lods icebp pop arpl sub mov test div rcll lea ja stos adc je cmp test add sub insb sti sbb jg jne ss lea jb adc xchg add mov pop mov inc pop (bad) divl or pop or mov push shlb cli jnp ljmp mov fdivr jne xor jbe scas cmpl fist (bad) mov mov pop mull xor mov (bad) jno or notb adc sbb insb add out je mov push mov add das enter je cld cltd pushf mov in inc cmpsl pop adc mov xchg mov test push stos xchg sbb sub (bad) call divb (bad) mov cli fwait dec push xchg adc stos jg add push ficomp jmp icebp adc jnp jmp divl into mov aam and or push scas mov in ja into lods das pop popf mov (bad) loope push dec stos sbb xor cmpsb sub jbe sbb cmp inc popa xor std xor adc rorb xor (bad) jbe xchg dec mov rcl aad mov daa xchg jge mov cmp leave stc pop or lock mov js stc out xlat loopne (bad) fdivl in mov lret push mov adc outsl dec sarb (bad) mov xor ds jbe mov mov dec or nop les or rorb mov stc mov jmp lret xchg out or pop inc loop lods adc inc adc pop dec mov ret loope (bad) xor (bad) fucom scas mov mov jbe sahf push jg mov enter (bad) xchg jle sbb aam pop lea (bad) clc frstor (bad) (bad) not pop sbbl mov jmp cmp (bad) call loopne mov push mov js shr mov mov incl sahf out stc fwait adc jne cltd loopne (bad) fdivr jp loop loopne mov lock xorl mov in push mov rorb cmpsb (bad) aaa testl (bad) sar sub dec add nop push (bad) push pop jmp gs pop aam test mov icebp mov out jecxz xor leave addr16 xor lods xor xchg leave adc movsl pop adc jecxz cmp xor fwait jl fildll cmp bound clc inc addr16 scas (bad) mov jl fisubl pop inc movsl gs in aam leave sbb push movsl mov mov add popa mov mov xor sti push jne shrl dec pop and popa cmc cmpsb adc jle push jmp mov jmp jne adc add and jbe xchg in inc sti cld leave jle (bad) invd jle xchg inc mov push shrl mov or and mov xor outsb mov mov sub aad add adc ffreep fcomi pusha adc xchg xor add call xor jecxz mov test pop mov jno mov jle xor sub push and dec cld or fidivl sub jmp jbe pushl out adc or mov (bad) repz ffree cmp push mov add jecxz pop lcall jp fistpll jl sub or enter or jne and push add dec (bad) in cmp push mov mov push aaa jno and sbb dec (bad) ja cmp addl out clc jle (bad) das pop je cmp pop and jecxz outsb mov mov loopew stc dec int3 jge cmp scas adc lahf adc in bound adc pop xchg cmc pusha push clc inc fisubl lock lods mov cmc stos jns xchg fxam mov jp mov mov cmp jle stos mov jns jecxz or adc jne in jle mov cltd icebp dec xor sbb jle push sub out std rcll mov dec (bad) stos cmp mov adc push dec push mov in (bad) cmpsb mov push push mov mov cli adc pop pop mov and (bad) rcll nop jle mov mov lcall sahf stc fldcw lea scas dec (bad) pop rcl lock adc aam pop pop adc xchg inc pop fisttpll (bad) clc pop or fldl (bad) outsl mov outsb les roll gs sti xor pop lahf pop nop xchg sub push leave es (bad) gs lret aad jge mov jl mov dec shr leave ficoml mov idivb inc addr16 mov inc out decl scas stc mov inc pop add add dec cld add (bad) cmc xor in (bad) dec es in mov aaa sub call cmpsl (bad) insb sti cmp ja mov popa xor inc in and push mov hlt inc sub iret add inc stc mov orl pop mov lds lret dec dec add arpl add jecxz xchg sub xor clc jge aam adc into dec jl (bad) jg xchg pop xor pushf mov jg mov sub ss pop adc add or cmp out xlat lret mov jle adc pop mov in xor push ret ljmp sarl repz in mov pop add jmp aaa vmovsd insb add iret stos outsl jmp xor decb movsb enter jp push icebp leave mov scas sarb add mov jg (bad) out adc cmp inc mov mov cwtl sahf leave mov gs loop call insl mov movsl xchg fwait push shll cltd in repnz sbb icebp fdivs sar lret sarb inc mov arpl mov aam cmp rclb sub decl adc fs stos sarl add cmc cwtl jno stos das sub sbb add sub jl sahf test fidivrl jb mov lret sets push mov cs movsb or dec add in pop add mov stos or adc clc pop dec (bad) mulb or push test sub jo xor or mov adc mov cmp xchg mov xor rclb bound push test mov int (bad) repnz subl std push mov mov loope mov cmc loopne xor sbb std out jns mov cmp jno lret sbb lret insl jg jno xchg jne and fcompl xor mov dec ss sub lock repnz jge lods lret scas push mov add ds jle ret movsb popf mov mov dec aas xchg jle sub arpl push into mov cli push mov mov xchg dec popa pop cld std jle insl mov xlat dec loop icebp les das (bad) xlat jne xchg loope aas mov movsb (bad) sub lods jecxz mov sbb inc fucom mov push jl fidivl loop stos bound lds addr16 cmp mov mov sub (bad) xor jo ret sahf mov ja ss ja and test inc test ja adc stos repz xchg leave loop fisubr jge cmp in or dec icebp mov lahf push and rorb (bad) mov movsl loope jge,pt (bad) inc xchg lret jmp mov xorl pop gs xchg push divb xlat adc decb clc call insl loopne rolb cmp rclb cmp call mov xchg cmp imul fucomp fadd jecxz push xor popa push pop cwtl stos mov jnp xor cld aaa movsb arpl sbb push addl cmpsl cmp (bad) je jae lock sub mov inc push push xor les mov call cmp (bad) jb and in adc or stos pop mov xchg dec pop sbb fdiv fwait xchg test clc or (bad) addr16 add ljmp xor pop (bad) (bad) out fidiv test mov das dec in ds push sub sub sbb aas in push cmp (bad) insb inc in inc lods adc shlb pop hlt cmpsl popa test mov jge mov cmp test nop push test test cmpsl sub cmp inc mov mov sti movsl lock test push jns into add sbb pop lods rcrl fimull movsb gs call push mov scas (bad) dec gs jo hlt xor jmp out imul jb push aam jl cmp fisub jae fstps cmpl jo int3 mov bound mov mov dec aam mov pusha andl fnstenv sub ss pop jns (bad) out cmp (bad) jmp test test (bad) push inc insl imul mov xchg data16 popa nop out mov cmc or (bad) scas pop stos pop fldt ss jb subb iret daa test andl mov fst inc jmp mov adc jno xlat mov nop add hlt xlat (bad) sti inc into in add rcr mov cmp aaa inc pavgb mov sbb fnstsw in cwtl mov push inc xor push test mov inc and int jp loop aam in (bad) aam or fstps pushf or (bad) pop fucomp fcoml dec jle stc scas or (bad) imul arpl scas call js fnsave fisubl or sar (bad) jno mov hlt xchg rcrl rcll cs mov jmp (bad) ljmp enter dec mov daa std into jecxz cli jae push cmc inc mov fsubrl je dec loopne dec mov jbe sahf test mov cmp or test out leave (bad) mov ljmp xchg inc cmc (bad) out or sbb pop cld xchg movsl jmp call stc fidivrl push mov mov sbb push mov mov out fwait test decl aam std js mov (bad) (bad) lods jmp mov inc push aad movsb push jno (bad) fdivs and aad xchg out aad xchg in aad xchg jmp push mov icebp cmp and orb (bad) xor cwtl pop loope jle sahf jno lods mov (bad) dec jno xor jns cmpsl dec roll adc mov xor lahf cli ljmp pop shr ffree ljmp dec cli mov mov xor ficompl sub imul in mov sbb (bad) jb movsb dec cmpsb jno ds mov negl cmpsl imul sub lods inc or loope mov push loop gs jmp loop mov xlat mov push out mov imul insl (bad) (bad) mov mov adc bound (bad) fsubs in cltd (bad) insb scas jp ds rcll mov xchg in push jne push in and test push call dec xlat and or push fldt dec mov mov add enter or sti lea xor lods lahf (bad) aad popa mov jmp cmp mov xlat in ljmp out pop and fstp aad test lcall icebp sub mov inc mov (bad) dec leave push jno jge mov shlb fnstenv jo sar sub jle jo imull mov xlat push inc mov aad cmpsl lahf xchg push mov xchg mov call (bad) mov dec pop (bad) into pop ja fstp and in mov int dec or push std into sbb insb sub jl repnz push fcoml mov fwait aad pushf sub push std xchg outsb rcl or mov hlt adc fiadd mov mov test jp inc push jns pop aad iret stc or dec out jmp jmp notl fmuls call shll jns fild das add cmp repz jge inc flds (bad) adc popf xlat xchg mov pop dec dec clc inc cli mov xchg test into sarb rol push bound imul push arpl dec jg cmp and sub dec xchg sbb nop pop dec daa push mov sbb stc mov stos loope xor cli (bad) loope sub pop lcall jo sub test lods pop mov sti lahf decl leave or mov lea jne lods or (bad) jbe jne stc sub pop shlb test pop push das mov xchg stos js push fidivrl xor fwait cmp cmc outsb pusha pop mov xchg jns push jp dec cmpsb xor imul push xchg mov mov jns mov in lods inc jns jecxz and mov sbb aam inc movsb mov flds out ret xor or xor in loopne push rcl repz cmc mov out cmc test fimul in ja mov loopne cld js xchg xchg repnz dec inc cmp nop mov cld cltd (bad) out scas push jmp not adc and mov rol mov xor xchg xor cmc fs cmpsl imul aad mov ja mov or aad fisub dec test jns mov cwtl xor shl pop rolb push dec js or leave ss pushf mov xor mov lret xlat push pop in in add or jne outsb sub push shrb fistl (bad) xor mov call lock std jno cmp int or js pop les mov mov clc js (bad) sahf mov (bad) xor sbb add xor mov sub in fistp fmuls lods jbe std inc pop cmpsb leave push out sub rcr loope mov aad cmp adc sti xchg cld sub jmp jno repz adc test je cmp testb mov xchg mov icebp fnstcw jg outsb out mov shl sti call xchg in xor aas scas lret adc movsb jno xchg mov (bad) sbb pusha inc push leave xchg adc pop mov inc dec in aam movsl std popf fcoms inc je std or mov jns dec jns test and pop mov xlat pusha test pop aam sti mov inc mov gs inc lods (bad) dec in js addr16 mov out pop popf test mov (bad) cs mov mov hlt push addr16 or jge or leave pop xor popa loopne lods jmp sub adc jo mov mov fbld xor bound cmc mov mov pop push adcl lahf cmc push hlt (bad) jno add idivb mov adc xchg pop icebp shll insl icebp inc jae add bnd fs mov cmpsl jne cmp aad push mov lock std imul std jbe stos add mov rorb cmp loopne and mov sbb lods ljmp or jg add cli (bad) shr jns xor mov jl (bad) lds pushf lock sbb or mov cli xchg add sbb arpl cli adc shrb xor sub add push jmp lret inc dec inc sbb sub sbb mov fs sub daa in adc lahf xchg push leave jbe xor cwtl cmpsb ds adc in sbb add ds push pop popa cmpsb (bad) sbb lahf int movsl out icebp sarl sub (bad) pop xchg or loopne xchg sar aas ficompl icebp rcrb or jne shlb sub fs test lret (bad) (bad) lods inc aam add lahf loop xchg out cmp sbb mov std push shrl rcll int3 punpckldq jno mov push fnop sub testl cmc adc pop rol cmpsb push fcoms enter and or je in dec pop jns adc adc sbb and mov xor (bad) mov mov (bad) (bad) (bad) fstpl cmp (bad) cmp ficompl mov inc scas (bad) rcrb mov in xchg rcrl (bad) xor fistpl adc jl stc int aad dec aas cmp pmaxub aaa mov mov xchg insb test dec xchg in test mov es dec daa push leave xchg rorl jmp repnz add inc pop in adc mov sbb bound lods aam mov dec aam adc stos dec mov ss or cmc (bad) loopne mov push lods or rolb jno aaa mov pop or dec js dec pop stc mov sub mov and loop mov movsb inc inc fiadd stos nop sbb fcmovbe stos outsb dec lea jae ss add mov adc push stc mov push xor push out xor cwtl stc add in mov cld fs jmp sti nop lods data16 sbb je mov aam cld and lret enter mov leave and insl daa std arpl add lret jg or iret cltd in pop pop les mov adcb aad ss stos push jmp push jmp (bad) jmp add mov inc and jmp out in cld lds pop shrl lret sahf push in mov sbb (bad) jmp dec push jl push in int3 push and int3 test jl into dec xor adc push loope or test in mov mov cmpsl sub loop std push das addr16 loop roll sbb cmp (bad) xchg cmp jecxz fsub xor sub les out dec inc mov movsl pop rclb std sbb ret mov (bad) fwait adc aaa gs rcr shr lods fiaddl fnsave arpl outsl mov mov aad cmpsb jle testl loop es inc inc mov xor pushf pop adc adc fdivrp inc cmpsb leave mov int3 lret dec xor push or pop or jle add sbb push xlat cld icebp out clc mov repz loopne jmp out fsubs (bad) add dec jo dec cwtl xor cmc mov mov (bad) jo fstpl lea adc ljmp adc mov push movsb inc fdiv aas mov jno push jecxz cmc mov shrb (bad) mov aam int3 jns clc xor lock stos jo in jb sub iret mov push sbb (bad) sbb adc push inc cltd cmp sub (bad) or xor push pop fisubl enter dec dec cwtl sahf mov dec int3 dec imul lahf clc xlat jmp stos push xor call lods or sbb fucom mov fldcw mov mov xlat leave or lock mov push xchg push nop sti (bad) mov popa insb cltd or lods das into test jnp fs sbb aaa stos mov aam in aad jmp lock mov add mov push xor lock add xor into mov adc or stos dec clc stc push sti mov push lea xor or pop and push out pop adc iret cltd hlt mov scas or pop (bad) adc mov popf pop fimull and cltd decb popa and into push mov adc out sbb jecxz cmc xchg dec rcrl sub or or test push imul jmp pop add arpl jo xchg jbe outsb add leave dec xchg jge mov jp cli data16 mov imul sbb aas or cmpsl jnp cbtw dec push insl adc mov mov mov jb xor cmp mov sub sub mov fs les mov add icebp dec jno ficomp or ljmp inc xor mov dec test addr16 cld test movsb jne cmp lahf and and mov popf jno cmp icebp dec jae sbb (bad) dec cmp es in test aad lock adc pushl dec xor mov xchg dec mov scas cmp mov daa pop stos adc test and ds add mov add mov (bad) xor jns in push pop lea jae mov lret mov insb stc push mov pop fidivl stc jns leave mov jbe push arpl cmpsl dec sub lret dec push jg jg std rol test dec sub push fsubl hlt loope cs pop push imul mov xor (bad) repz sbb push xchg rorb xchg pusha dec mov pop (bad) sub xchg mov xor jg insl push loope movsb add out addl xchg jecxz mov xor sub adc repnz cli gs js jecxz jg scas inc mov mov push push push xor in mov in test movsb inc sbb cmpsb out into cmp movsb add out cmp and jg mov lods (bad) mov xchg jnp or mov movsl jmp xor mov push adc mov cmpsl and adcb (bad) cmpsl mov jmp lods xlat dec movsl cli cs mov inc pop inc out sub inc push dec movsl jbe mov mov push stc add cmp movsl add mov jecxz xor jmp in xchg fistpll out or mov or popa jecxz rcll xlat xchg jne jle lock jecxz pop in sub sbb and add adc test ja icebp xchg mov out cmc out in aaa xor fstpt dec xchg fcoml stos dec or mov data16 push jmp cmp ljmp int3 hlt push out (bad) aaa in mov xor loop fisubrl mov lock stc loope repz lret in rolb or js aad or rcll loop inc repz in lock mov cmp ret cmpl cmpsl sub mov out pushf movsl mov outsb xor into imul xor or inc and xchg cmp jp shl mov jle push gs sub cmpsl push push aam mov mov jnp dec xlat dec lods and adc and mov dec and mov into (bad) aaa mov dec scas es (bad) repnz (bad) push sub insb xor dec add jl iret bound push lret gs (bad) mov and mov cld clc inc lock mov fnsave jno jbe sub pop dec xchg push push insb push aam xlat ret aam clc (bad) xchg test pop gs xor and pop mov mov movsl out out pop inc add xor adc icebp andl jns mov stc add fbld rcrl aam and pusha add xchg sub (bad) jle ficoml mov sbb mov daa popf pop (bad) (bad) in inc (bad) jne or outsb cli std movsb (bad) jo fwait repz icebp adc loop fisttpl mov (bad) adc stc outsb in insl icebp loope dec in pop fisubr arpl shll test aad mov push cmpsl lods mov dec sbb mov divb add or inc sarb add loop psadbw leave mov test into mov insb mov (bad) jl add std stos mov pushf mov jecxz dec mov into aaa or fdivs (bad) test (bad) mov mov stc jo cmc pop push leave popa nop sarl sti jo lock mov adc (bad) or cmpsl and lret lods push mov mov jle cmc lcall ss sti or repnz mov mov pop into sbb cmp dec xor add dec scas movl ss popl push imul (bad) jae scas call into xor pop or stos ficoml fisubl sbb xorl mov and fisub sbb test das mov hlt push push lcall add jo fldenv mov shrl sbb std pop jl dec cmc ljmp sbb into jo jmp xlat pop jmp mov fs or in mov (bad) mov mov pop and fidivr pop subb push ljmp (bad) ret or fnstcw mov or dec (bad) dec loopne jno cs or and or mov out push pop mov (bad) dec sub leave shl sti insb mov pop aad out stc push clc push fdivrl push movsl sti and jle cmpsl shr in adc dec push cmc jne cld sbb push jp movsl push xchg aaa insl mov cltd rcr fldcw jbe stc dec push adc hlt sbb sub stos or sub or into cmp jns pop jnp (bad) jo fcomp jg arpl enter insl sti stc xlat stos mov orb fsubrs mov jnp push sbb cltd data16 test call stos arpl cmc mov lahf inc stc mov fwait sbb jns jno xchg mov mov mov pop lcall cmpsb sbb loopne sbb and jmp inc pop dec cmp xor push jp fidivl pop cwtl clc js push pushf ret scas mov xlat test adc or ja mov mov leave aad mov mov pop xchg jno fnstenv pop jle jo in jmp sub lods jmp xchg in and fst jle in jns jle ja (bad) daa (bad) es cmpsl jl lahf add xchg jo adc sub ss inc scas and sbb jmp add fucom mov sub (bad) jmp stos pop mov xor jmp pusha aad mov fstps repz ja or mov pop repz cmp mov cmpsb mov cltd xchg movsl repz jno and es cmpsb mov loop xchg mov push shrb push adc jmp imul (bad) lock lods pop dec push pushf ret ret dec cmp add mov mov call std inc insl icebp push insb mov jle rep jne bnd lret ja roll adc jbe in stos (bad) adc jle loope mov cmpsb pop scas mov mov in xchg iret into push loope jb movsb movsb adc ja mov xchg in cmpsl cmpsl adc xchg in movsl mov jns aaa xchg adc mov push repnz add js cmp sbb and mov mov add call inc lods dec pop inc jg mov mov (bad) fsts cmp (bad) mov dec mov cli xchg rclb aam mov shrb jmp xchg xor jno inc dec rorb testb push movsl mov jno cwtl movsl cmc mov jmp xor mov clc cwtl mov in fidivr in mov int mov aaa adc cmc push (bad) cld jns int3 or repz (bad) iret hlt inc cltd pop stc in mov sub (bad) imull (bad) into aam add adc mov cmp cmc std int push push aam mov hlt stos cmc mov jg je movsb pop pusha popa cld lret shl xchg test sub and shrb jecxz clc rcr pop (bad) movsb int gs shlb mov jno loop dec xchg push pop or mov in xchg mov mov adc lock pop dec aaa cmpsl add sub mov test adc loop jecxz pop cli jmp inc mov cltd and in push lods loopne ss clc int or or and pop (bad) sbb push in mov xchg cld xlat stos (bad) or mov jecxz adc inc or and test lods dec das andl in add lret xor pop dec into fsts xor shll xchg jnp sub mov scas fdivs fild mov loope or out test into stos pop mov mov rol hlt dec shll jg inc (bad) jmp jge or jnp inc js adc mov test jo xchg xor jnp (bad) xor icebp cmpsl jge and xchg mov outsb push inc les rcrl push fstpl ja cvttps2pi and sbb xchg sub mov mov mov pop scas shrl ss icebp jno lods clc push fcmove sbb loope jae loopne leave repz jo xchg in adc lods clc popf adc mov movsb je push mov lahf loope mov sahf dec inc call addr16 in (bad) mov mov mov aad adc cmc and leave stc into (bad) push std test mov mov adc popf pop (bad) and pop gs and sarl lahf or iret cmp shr test mov jg sti (bad) adc outsb std stos lahf push cld jb xor mov xor jbe call lea test mov ja add imul pop test (bad) mov jno js imul daa (bad) fsubl jnp xor push sub sti cmp adc or push pop in cmp or sub es int3 or dec push inc mov sbb mov push adc lret sbb sub push inc leave movsb adc shrb or pop leave mov fstl mov mov push inc incl js jg jb xchg mov fdiv test test xlat pop loop sub xchg fsubrl xor lock jmp and or jno imul sar leave jmp jmp mov cltd repnz xchg pop mov adc and push mov jns std loopne jns lret out adc enter fimul out inc mov mov cmpsl mov push or insb xchg and sarl mov mov les hlt mov pusha pop pop cwtl (bad) dec sub fnstenv clc fsubs scas sbb pop dec push mov scas outsl dec xchg (bad) mov (bad) jle or mov ficomp jg repz pop cmp aad fnstenv leave (bad) rorb cwtl adc pop iret imul mov cmpsb mov pop mov or fwait jmp push xlat jo std fnstsw rcll push (bad) mov cs in lods mov xlat jg (bad) xchg cmp cmp leave jo mov hlt push cmc xchg dec mov lahf adc mov pop xchg clc iret loope test jmp orl sbb push imull dec mov test mov fistp arpl jle xchg xchg jae mov scas idivb outsl test (bad) jae je and ficompl int3 or xchg (bad) and aaa add xor out cld nop std mov sub inc mov xchg aaa call cmpb jl fwait inc dec lret mov mov mov icebp out adc pop fxam lock in je push repnz jmp dec repnz enter pop mov xor mov rolb movsl inc add mov dec pop push dec cs add push ss movsb lds lods sti cmc jb stos pop mov repnz (bad) mov aas and arpl movb loopne cltd shlb xor sub icebp lock lods lock dec (bad) pop jecxz aam adc xchg test aad xor cmp pop push repz sub int push mov sbb aaa or lods mov adc (bad) sub adc xchg test mov cmp jmp aaa lods xor aam add mov fsubrs push repz ficomp jl push sbb xchg out repnz scas xchg std loope dec mov adc bound (bad) ficoml movsb jns lds dec pop (bad) mov inc push in mov aam (bad) (bad) cmp xor or mov fldl add imul das pop inc mov xor mov incl inc scas dec insb aam and mov data16 mov sbb ss add xor add stos xchg out push lds cmp push dec (bad) std divl xchg daa pop inc (bad) (bad) mov fs ffreep daa loop mov out mov pop out pop movsl out adc js (bad) inc cmpsl dec pop push xor mov sbb push push pop cmp xor lret xor lock mov lods xchg xchg dec faddp pop int pop lea movsb cwtd pop jno push std fs pusha shrl and mov (bad) jecxz xchg jmp js insl outsb fisubl jmp mov xor push (bad) ss test aam int cmp jbe lds loope jo std jmp pop xor push shll int (bad) call sti out cmpsl and xchg frstor iret fidivrl out ja int mov scas xlat ffree xor mov mov cltd stos ds icebp divl test (bad) idiv cwtl imul xchg (bad) fprem and les adc add jne dec test lret out jl pop cld mov add rcll daa pushf sbb mov mov (bad) (bad) dec mov out jbe mov xchg fnstenv movsb pop hlt sub loope dec inc push int3 aam xchg mov out mov jg sete xchg test out mov call (bad) psllq pop int xchg jmp test cmpb lds and (bad) sub xchg mov or fisttpl lcall sbb mov test xchg cmpsb push stos sbb mov mov fnstcw sbb dec cmpsb imul mov fdivrs rcll adc pop aad mov mov shrl daa aaa lea adc inc xchg outsb xorb dec cmp fwait jl popa clc jne and mov and mov push (bad) out lock xchg mov in aam or call or shlb cld sub es lret loop push loope out mov in jmp add repnz dec xchg in insb aas sahf je xchg (bad) sbb out ret sbbl mov iret and andps (bad) mov lods mov shrl orb stos fstl push sbb xor sahf test xchg lods dec mov inc popf fstpt xchg cmpsl fs xor repnz xchg lcall stc lcall les clc jmp xchg cmp mov stc aaa cli xor jecxz sbb cli jg push cwtl cmc cli stos push push in xor sub push dec mov stc cltd cli push ss push lods or enter fbstp fs mov mov xchg and cmp mov movsb mov jnp cs inc cmp xor xor lret cmp aas int3 lock cltd xor dec pop sub enter fwait adc adc or inc test push jp sbb test adc scas lds add into push and jg idivb enter clc jb in adc pop pop or stos cltd shll mov rclb sbb loop sbb pop into push xor rcll dec leave jae mov in push outsl cld orb pop (bad) (bad) test lock mov leave stos mov or pop scas test cmp int3 in test xor cmpsb in lods dec repnz xor jecxz sbb sarb xchg xchg nop dec jno xchg rcr in sbb mov data16 sub mov or aad ror notl sub mov xor (bad) pop out jle call test push push test movsb sub and push mov test rcrl adc dec xor dec mov add cmp xor xorb xor jns call popf imul fdivrl mov (bad) dec cmc xor jmp inc pop insl mov inc scas adc cmp xor (bad) push enter leave xlat aam sub out cmc push or scas popa stc cld std jge dec ja dec push jo push and push xchg outsl mov xlat fidivl cmp jo xlat mov inc cmpsl je pop mov out (bad) fstps mov cld jns and pop mov jno leave data16 cmpsb inc std in sti rolb mov call mov jmp add cmpl clc jb (bad) jno cwtl mov mov int3 pmulhw setns jle jp jno jne xchg sub inc add gs imul xchg xchg mov jns jp movsl bound mov inc jne movl fdivrp lods adc aas mov cmp icebp mov es stc out jns in (bad) mov (bad) movsb arpl (bad) shl jne ss mov add jg pop adc adc aad xchg xor mov sub in dec into sub out lret call (bad) mov mov mov adcb jmp sub (bad) stc out add aas loop adc xor lock (bad) jne and (bad) dec jne std jnp push jmp mov loopne xrelease jo icebp cltd out bound idivb in adc test mov push and test fcomps stos add sub loope in in cmp add lahf in fidiv (bad) mov fdivrs adc in sub fsubrl cmp adc dec fisubr in call mov (bad) add jbe adc add cmp push jle xchg loope pusha hlt xchg inc and je dec outsb pop (bad) dec push mov daa aas jl dec cmc data16 jle es push mov and (bad) repnz mov xchg aaa pop push pop mov sbb cmc sub std push aam mov in std stos adc movsl data16 jns out adc push xor stos sti push scas clc mov mov cltd sbb cld xor xor stos adc lock popf mov jno xor pop xchg cs int and (bad) loop clc cmc in lds push cmc jno in sbb push jecxz cli test jl pusha pop mov push sbb add cmp xlat cmp or fdivs mov or add mov faddp inc enter clc cld and and imul adc cltd cli or mov jno popf sbb push fwait xor and out dec pop cmpl pop je in cltd xor imul lds sbb cld add (bad) (bad) push test rorb inc cmpb movsl fcoml cmpsl fstp push je xor and lods jg xchg push (bad) int cwtl mov dec pop mov sub in std loop pop scas add sbb fwait push loope inc in test cmp leave ljmp jbe je cmpsb clc das out or divl in cmpb (bad) out das xlat (bad) mov mov push mov cmp adc je push testl mov stc mov pop enter dec movsl xchg test pushf jns in mov fisubl sbb push mov jb cmp adc in mov lods out gs xchg xchg xchg ja xchg out std mov nop loopne lock test cmp xlat fnstenv mov mov (bad) cltd jns push and out adc xorb xchg test pushf sbb in insb lcall clc bound je (bad) clc in xchg dec gs out arpl cmp push stos add addr16 rcl (bad) sub rcr loope repz dec popa and push sub test lret jmp jbe cli inc xlat xchg push es dec cli xor roll adcl adc ja pop test adc push sbb sahf lods addr16 mov mov mov imul repz mov jp adc cmc pushf dec xchg addr16 push mov call mov jae call mov mov inc adc fmul inc mov aas and sti out inc (bad) cld lods scas lods push mov lock pop fcom fnstsw pushf fcomi aaa push xchg cmpsl jns xchg fld push push repz mov bound xor stos and mov jp xor lock roll sbb sarb pop clc jge cmpsb jle and or adc inc nop ja sbb mov fisttp (bad) out mov call jmp iret aad pop inc int3 data16 loope add xor mov scas stc jp xor mov fcom test pusha ret mov lds in test xor mov arpl loope xor sub and ds jmp cmp lock (bad) xchg jo xchg sub xor dec rclb inc adc mov mov and movsb lret mov jbe jmp out adc shll ljmp mov scas push dec push lret pop xlat lret push (bad) mov and push insb jae jle bound icebp and int3 mov mov mov call push xorl stc inc push dec (bad) (bad) mov in and loopne inc loop sub (bad) mov jl loop mov incb or outsl mov (bad) aad in sbb into and sub jae inc adc nop daa test or inc es xor repz pop pop (bad) call or sub mov push or std lods (bad) hlt mov mov call ss rolb push mov insb xchg dec xor push mov popl inc pushl cmpsl push (bad) lcall stos out aaa out fnop ljmp sub adc aaa jge jne pop push negl lahf icebp sub dec decl xchg adc std dec adc popf out loope test (bad) (bad) adc jbe mov in sub fsubs icebp scas or aaa sbb das push std sbb cmp ficomp cld jl enter popa add into daa dec sub xor dec (bad) in xchg push lret and or movsl add cmc cli jb sahf bound je xchg fisttpl stc pop lahf and je lahf repz addr16 mov std dec and sbb cli adc movsb je out pop cmp adc adc dec notb repz movsb inc cmc sbb or test push pop rcrb mov or sbb mov cld mov mov cmc daa adc jo leave and push mov and and push call movsb loopne dec pop rolb out cs add sbb push push pop pop into lock or mov cmc push sti xor pop or mov mov out cli jge xchg shl add push sub flds scas pop aam icebp push das xchg mov loopne pop loopne js movsb pop fild arpl cli sub xlat jns pop xchg xor in mov int3 jg test loope pop xor inc push push ficompl push inc in pop or adc lock sti faddp add pop ljmp gs cmpsb jns,pt sar lret mov icebp or daa not (bad) scas repnz jns stc cmpsb add cmp and jge push pop les (bad) jmp leave int sar aad mov add das mov push mov (bad) mov dec imul (bad) xor mov push cmpsl xor scas ss dec add push sarl mov xchg cmp dec fucomi in std and addb cmpsb call push xor cmp push or or adc cli bound shrb and rcrl ficomp dec dec (bad) fprem1 fdivrs sti inc incb push dec cmp movsb xchg adc rol mov (bad) subb pop idivl mov pop jp dec and fcomip stos out or sub das scas adc push mov stos stos and cli jb cmpsl adc fs out or iret jno stos and stos add aaa loope mov pop movsb pop inc cmpsb push movsl mov ja js xchg mov mull hlt in out in xchg jno push dec or cmpsl cmp (bad) cli adc daa loope push lret mov and test pmaxsw movsb sbb jmp or sahf cli lods jne insl loope adc test in clc iret adc cltd or iret ds fimull lds jno jge je push mov and bound jo jmp inc xchg dec sbbb jle test pushf xchg pop cmp mov mov stc cltd and pop mov cld stos popa movsl or xor mov (bad) nop mov test adc (bad) out icebp jg adc leave into adc xchg lock mov jmp mov pop pop push jno fldl sub jne push push sub jle aam ljmp dec stc xor movsb pop jno (bad) push mov push lret mov incl out inc stos dec xchg adc rcl mov call insl mov popf in push jg fidivl pop out std cmpsb loopw lds out outsl sbb out jle xlat push fstps mov popa push adc mov cli inc jg shrl push mov and mov adc jne lds push cwtl test icebp repz fwait jmp dec test dec gs jecxz adc cmpsl fdivrp xchg jmp or xorl cmp stos and push pop call loop inc mov stos loopne mov icebp mov jge in jg repz stc and hlt dec int test aam inc mov std mov icebp xchg stos jg (bad) mov add mov sti pop mov add and dec aad loop aam cs outsb and loop add lock out je pop stc insl xor lods call das sub pop lods mov xchg jbe mov xor aam popf push loopne lret or jo cmpsb jg into jne jns ss push jge in aaa adc (bad) mov fdiv idivb scas dec pop sar aam mov mov inc lods stos jecxz cmpsl xchg pop lock adc mov divl push push fstpt xor clc mov jns add in fld1 jbe dec imull aad jb push pop and mov sub xor movd mov loopne (bad) rorl dec or stos lods pop mov xchg cmpsl movsb and add sbbl adc aad icebp cli std mov cmpsl xor popa sbb lret das mov lock nop mov pop enter jle fisttpl mov mov sbb sbb pusha mov je mov scas loopne stos mov lret dec (bad) mov aam repz jle xor mov jecxz inc enter inc jmp imul in mov sti hlt push lods stos mov cmp xor hlt and in (bad) popf rcrb lcall (bad) aaa insl iret dec test in push or in data16 adc aaa es in aaa in insl mov pusha mov int (bad) ret scas loop call (bad) loopne enter mov dec add in sbb pop or adc faddl pop or xchg jl mov mov mov cmc mov and les or xchg (bad) test rorl fiaddl cli (bad) int jnp gs jmp sbb gs in (bad) jp fsubrl lods and mov adc or ffreep mov pop sti inc xchg jne out add bound cld stc xor sbb fidivrl gs ja mov or cmc int3 in inc or lds rorb xchg leave mov cmp xor xor jle fcmove mov (bad) cmpl fisub mov mov enter jg (bad) movsl aam inc pop lcall mov jae loope test and int mov (bad) addr16 cmc sub mov adc in adc in outsl pop daa xchg leave dec (bad) and jae aam sarl xor jle jmp test dec or xchg aas out fs adc mov cmpsb fidivr xchg lret jno jmp jne sti dec dec loopne mov adc test out sub mov adc pop pop shr fucomp jbe decl call push and jp pushf cmp or fiaddl or xchg xlat xchg aas cmp (bad) test xchg rcr dec sbb insb mov add (bad) jo jns xor jp repnz (bad) ja jno mov lock and add mov xlat roll cmpsb pop call inc js mov call jnp fwait pcmpgtb pusha adc xlat scas ror stos xchg inc push test and cmp rcll jo out aam mov (bad) cmpsl jnp clc mov jl clc lret jle and movsb or mov incl mov and or std ret jbe out mov adc sahf dec in testl fnsetpm(287 pop in ds pop cld push test pop fldenv push adc mov stos loope outsb aam sub xor pop and mov xchg loop fdivrs (bad) sub cmp mov inc inc adc sbb mov addr16 rcrb and jb test jmp or xchg cmp mov push cli (bad) push dec sti movsl movsl fidivr ret xlat inc loop aad and mov movsb jnp popa dec mov fldl adc cmc ja aam mov mov mov mov inc mov pushf pop inc lcall cmpsb ret nop lods in lock or lods add and xlat inc addr16 mov add adc popw popf add nop lea insl jne adcb mov in rcrl lock inc popa jno (bad) mov mov mov jo mov leave jno cmpsl fistpll jmp mov mov pop and lahf aam test cmp push or test mov fsubrs scas and out insl test dec std cmp ds out test push repnz (bad) hlt inc or or bound jecxz sbb jo lret fistl enter push xchg iret mov js pop or lret dec or nop jae or and xor xchg or gs lods add jecxz lahf sti dec push mov mov or adc in cmc out fsts jne lahf or jns cmpsl into mov jae insl loope movsl push mov xchg aas fsub pop push adc pop out xchg add inc and or push inc scas push sbb out insb orb jle lods fs lock (bad) (bad) cwtl mov pop mov jecxz lret imul pusha jle and xchg lds lds mov or cld call lods sbb fdivp mov dec adc xchg aad cmc adc sub aaa pop outsb mov xchg sbbl (bad) xchg mov int3 js lock add (bad) xchg add xlat in aad sbb aam in jo jns out es iret aas sub movsb jbe fistpl xchg mov adc cmpsb pop jnp xchg cmpsb dec (bad) push stc dec xor dec pop push out lret stos idiv loopne jne adc adc mov cmp nop and adc js and pop aaa call in pop cli popa loop push sub out icebp xor (bad) pop mov and xor jo inc rcl in push testl call jle js into push xchg lahf inc and cmc movsl push fsts jmp inc jle orl inc cmc jmp jp mov pop es push sub sti out stos and cmc fcoml pop adc jp jns push jl pop xor hlt mov sub (bad) mov leave push movsb dec ret call xchg cmp jo and inc test add lock lods mov mov pop lea cmpsl adc aas jne dec jne adc pop (bad) xchg (bad) lds push movsb jno jns xor aaa icebp mov dec stos jge sub aaa sbb cltd jb movsl cmp cmpsl adc dec inc cmpsb dec rcll daa dec cmpsl lret mov add in iret push jb test xchg mov imul push int3 inc sbb (bad) divl xchg cmpsl push dec dec jne lret je pop dec jo adc mov ret out cmp push jns dec (bad) fbstp xor push sarl mov iret pop pop je jns ljmp mov clc inc dec cmc jno xor xlat rclb (bad) adc (bad) (bad) push adc jo xchg xchg sub pop ss dec cld cwtl out xchg sarl (bad) enter fnstsw incb jns test js jns je push les pop and test push jae mov cmpsl and gs and in and pop loopne ret lret sbb hlt mov daa mov hlt es (bad) mov ss mov out xor movsb cmp and xor mov or xor mov stos lcall pushf xchg jle inc (bad) and mov jl cmc and jo (bad) aam push or dec jb std dec fnstcw jmp stos sbb hlt pushf cmpsl out dec inc jno jb movsb cmpsb adc mov dec sbb mov sbb cmc mov jbe or test aad mov dec jae dec in in dec mov sub xlat add xor out (bad) xlat jno jg xor test fdivr notl cs test pop clc jno div xor push icebp in (bad) testb je repz (bad) loopne mov pop cmp shlb lods xchg (bad) mov adc mov scas xor imul stos sbb int sub inc into shll pop mov xchg clc adc cmpsl and cmc repnz ficomp arpl or jle xor sub cmc push stos jmp adc lret xor push les out adc cmp ljmp ljmp lock mov repz adc and daa cld je mov hlt icebp xchg shrb enter lea xchg cmpsb lods movsl lret sbb ss test and sub mov (bad) mov in mov hlt or or xor push or lahf (bad) mov out pop sbb aaa push mov jnp std xor popf adc sbb or into mov shrb pop icebp xor fsubrs inc bound daa mov adc into aad push dec dec mov sub ja cmpl fisubrl mov lods sbb add test push xchg xor stos xchg test scas xor imull icebp mov cmp push in xor add mov jmp mov mov push incb xchg (bad) ljmp bound movsb add mov or movsl push or cmc leave int jb cli jmp nop (bad) outsl gs mov bound push repnz or bound movsb addr16 lods push sahf push dec rclb xchg (bad) loopne stos pop jecxz add mov rorl aam in sub (bad) insl aad mov hlt insb (bad) cmpsl lods jns out jle sbb loop rcl mov dec xor cs pusha lods in jne int js lods mov push loope sbb decb pop into push popl (bad) pop pop insb out dec pop shl mov shrl pop jmp and dec mov repz adcl jne mov inc mov jne fnstsw movsb mov and add mov fisttp mov sub int mov ja dec iret mov pop inc inc int3 mov hlt test mov xor out das ljmp push les in ficomp xchg (bad) mov dec (bad) (bad) jbe ljmp inc (bad) jle scas pop out xchg sar jo mov inc (bad) push ja cmp dec icebp ja jle mov pop sti mov dec jle movsb outsl xor movsb or lret pop rorb pop jmp adc jo jg pop mov out (bad) aaa pop dec pop mov lcall fcmovne aam aad in adc icebp lahf daa mov mov inc scas add insl loope jbe loop adc aas inc sub jb (bad) dec (bad) and test scas mov pop ljmp (bad) inc add jnp icebp or cltd push mov shrb outsl ljmp cmp (bad) cmpsl xor inc cmp ret xor sbb jmp mov sub shl adc aad (bad) push hlt jbe movsb push je inc mov icebp int3 sbb mov mov cmp push pop mov dec (bad) mov mov cmpsl clc mov push inc ret decb or hlt loope xor in enter jb inc daa je jle movsb xchg mov clc std icebp mov cmp daa pushf dec es fsubl addr16 lea mov std xchg or adc ja push imul push loopne js clc mov bnd cmpsl mov (bad) xor sbb mov jle lock mov movsl gs pop or std divl jae jle and ljmp add cli pop pop pop out inc jb add lea jmp mov int clc notb lahf inc or sbb jns mov les mov mov std inc insb jecxz mov out xchg clc das push cmp movsb rolb push lds inc fdivs mov scas call add hlt arpl sbb push lods inc incb inc std sbb mov dec ja sbb mov std jmp fdivr icebp mov mov mov (bad) lods push call outsl sub jg pusha push mov fs pop repnz daa int jmp ss sub mov adc lock push sub mov mov sahf rcrl jmp test imul pop pop shll cld movsl mov mov and jmp test jno repnz into inc stc cmp jns mov hlt add jmp stc fxch das iret or or gs inc (bad) and scas sarl xlat lds cmc lcall pop test inc leave jo jl mov add imul sub ret ss rolb or repz push mov pop test adc out dec hlt and enter inc jae icebp push (bad) push cmp xor idivl pop jno mov or adc mov inc sbb or sahf int mov cmp or sahf dec in fdecstp es jle cmc push rorb adc lret sbb nop cs leave fstl cltd das mov fnsave lgdtl hlt cmc ljmp jno ljmp lods scas pop jne mov enter inc xrelease ljmp mull lock aaa inc mov pop adc enter mull push mov cli mov (bad) or jmp out shr repnz xor mov push repnz cmp out push mov push mov fisubrl jbe repz push decb sbb mov ret xor divb jmp mov lret mov and gs out cld repz ss ss cltd jle bound mov cmp je stc cmp lods icebp movsb icebp xor mov adc xchg mov (bad) mov jne icebp lods stc movsb mov xor nop sbb ljmp leave mov xchg loop mov mov inc or repz jmp fistpl repz cmc or and repnz out and test stos inc push aaa xor aaa sub mov stc bound add mov movsb divb cmp or je je mov mov and or cli mull jmp in hlt daa sbb stc pusha mov int or push jbe cmc repz leave dec adc sbb push test mov xchg clc adc mov xor mov inc dec fcomps gs or in out or stos mov and xchg mov inc fucom xchg imul not push lea test sbb pop cmp lods sub std stos xchg test ss fdivr adc (bad) lock ror mov jp jbe mov test push mov jo int pop mov fs or xor mov in mov popf xor jmp and cmc rolb fild rcrl cltd mov push loop jae push jae jns add or std sbb into xchg in mov or arpl add adc rorl push aaa mov out dec ss pop jns pop std jl daa lret fcom cmc jecxz push xor movsl in daa (bad) mov pop in stc mov adc add or mov cmp mov adc mov or lcall xchg inc daa add test (bad) testl push (bad) mov or loopne call xlat test xchg movsb cmp mov test adc icebp or mov lcall mov jmp sar in dec ret push repz ret jmp cmp or cmc jae fucomp hlt repz and repnz out cli jae mov sbb std test movsb jg sub add repnz xlat clc pusha add aaa shrb arpl push lret mov (bad) pop jmp daa pop repz addr16 dec jb testl pop mov dec jae lret call ja out mov (bad) mov jmp std mov push subl int3 call or loopne out std scas mov std mov mov std in mov pop cmc sbb icebp cmc sbb notb (bad) hlt dec lock rcrb or sbb push pop cmc mov add loope jecxz push out cmp popa xchg aad (bad) icebp (bad) fldl2t lds dec aam or mov loop cmp mov imul push (bad) jns jno insl push repz mov mov add mov sub dec jns stos pop mov cmpsb dec inc cmpb test loopne xor test xor les pop mov stc jns icebp insl sub add hlt and les out cmpsb sbb iret jno (bad) mov mov cli xor mov mov (bad) (bad) jne lods fstp enter xchg decl rcrl jle mov jg dec pop push inc loopne rcr fbld and mov pop stos int int3 mov lret (bad) lahf dec int3 testb mov shrl ret movsb sti stos push (bad) out in pop es lahf loope imul cmc mov jno mov xchg jo std ficomp lret mov add mov inc cld jo in and scas in sarb dec aad je mov loope test xor sbb div jmp into dec stc inc fidivl inc mov pop nop hlt movsb fimull movsl mov lock dec dec add lret dec add adc mov sub jns lahf cmc imul in xchg fisttp jmp add and insb pop (bad) mov cltd out sub sub cli ja mov nop cmp cmpsl adc fcoml mov subl ds pop add data16 loope jne mov sub dec jns xor aaa fucom xor orps in jmp sti shrl pop fcoms loop aad pop jne fildl mull fsts push leave push punpckldq testl add cmp add mov in xchg jmp cwtl mov je cs add aaa mov aad insl (bad) loopne rol cmp aam or (bad) jne or xchg fwait pop leavew out and cmp jge scas test cmpsl cmp xchg aad movsl or (bad) in test mov in push lock ljmp aaa repz sbb xor ja jo adc adc aaa dec mov out popa or decl dec push out test jmp mov jecxz call test fnstenv divl add in jmp loop mov sbb mov cmp jecxz call (bad) rorl test add push stc jb arpl aaa and sarb jle (bad) add adc sbb lcall or dec push (bad) jbe ljmp or push push nop push in mov dec clc int cmp loop aaa test jecxz out pop aam clc std daa fwait or mov mov das mov sti fnstenv stc jge sti lret idivb mov mov test aam loopne (bad) mov inc or or fisttpl jo inc mov ja daa cmp lahf mulb stos (bad) in rcll fcmovu sub stos fsubs jmp into lock test out sub dec cwtl push mov mov incl mov int3 adc xchg mov test iret jmp mov mov (bad) mov sbb jg mov into xor push stos test mov push mov push push mov ret ljmp movsl enter jne mov lods loopne jle in (bad) in ds popf or bound adc push jbe xor ds dec (bad) xor pop or adc inc ss xchg jne xchg hlt jae sysenter shrl out and inc popf addr16 xor mov psubusb push les push fnstsw loop cmpl mull iret scas addr16 xor jmp and dec loope inc mov inc inc jmp nop cmpsl cmp and scas mov jne jle js mov jo std mov in mov cmc push xor std fdiv loopne inc mov cmpsb cmc lds mov push mov mov test (bad) jle shll cmp dec (bad) adc aaa jo or dec add out jno mov mov std les fistl mov push test enter dec mov dec mov popa sub jg push ret mov test jb lds out mov stc lret xchg sbb jbe mov call adc sbb xchg test push mov sbb pop pop dec push cmpsl aad fdivrp lods std das sbb clc pop sbb adc pusha (bad) aaa xchg aad pop mov and ljmp scas mov adc negb or movsb or dec scas dec in fnsave jnp out and test and imul sbb push push in repz cmp idiv xchg add sbb mov sbb jno mov mov fxch mov test stos mov ss rcl (bad) aad aaa loope push imul sbb lcall sub adc cmp cs jb xchg sarb test fwait lock hlt jge xlat js jo push je fldenv into xor adc xor mov gs test popa mov mov (bad) cmc (bad) icebp iret ljmp xchg imul mov imul xchg insb xchg cmc in sub iret xor sahf sub xor bound clc add lcall mov jmp sbb jle xor test popa aam leave hlt add cmp mov and hlt ja (bad) cmp test call shlb lcall adc mov cmc mov xor mov and hlt out jle xchg in les ja inc mov pop icebp xchg rclb mov hlt mov add std jp cmp imul and loopne out mov add std pop test push out jae stos mov push and mov jmp stos stos and aas hlt std aaa stc dec mov cli jnp jo divb stos subb js sub out and xchg fimul stc test cmc and imul fbstp pop sub test jecxz inc cmp popa roll dec jmp push push pop imul pop ja adc ljmp and leave sbb in loopne mov stc int hlt leave pop clc xor mov jne test daa fnsave test mov andb sub sub dec (bad) jb xchg jp repz xchg (bad) sub or jle mov ds test push lret and fadds push xor lock or adc (bad) out pop xor pop push scas add test pop or bound rcrb jge into aam pop test std inc out add jp (bad) pop in lods mov jmp cmp imul adc fnstenv cli add (bad) mov aaa out xor shl dec mov jbe loope push movsb jo das push nop push std inc adc repz inc std test push pop aam mov sarl ljmp in sub (bad) jns dec insl ja dec pop mov popa sbb mov push in dec aad frstor cwtl aam push call int3 bound mov orb mov pop test in roll push repnz dec pop hlt pop es and cmp loope in notl push xor jecxz and hlt (bad) out not xor add fucomp or adc faddp or sahf xchg cltd xlat lahf popa inc (bad) dec test into adc test pusha add xor stos (bad) mov sarl mov repz nop lcall lods dec orb add out daa mov cmp cmpsl movsb imul mov fidivr pop push outsl in jg fmull sub fsubrl cmp pop stos jecxz mov mov add cmp or xlat cmp xor inc shl icebp mov loopne call xchg inc (bad) aas shr (bad) daa and inc cli loopne lcall repz sti mov cs mov aaa fwait xor cmpb loope (bad) mov (bad) push sbb gs fistpl xor xor jecxz mov sahf mov fcmovnu test repnz mov adc cmp repz mov div cmpsl in cmc out popf push pusha xchg jge add fisub xor cmp or pop mov xchg test popa ljmp loopew pop mov push jecxz shrl mov fnsave cmc push popa pushf bound mov aas frstor xchg or xchg stos ja push dec rolb or jle stos jp mov sti test data16 (bad) xchg (bad) pop or dec or rorb push sahf jno jae push inc cmpsb jb sub cwtl shll imul dec add add inc out dec inc inc cltd xchg repz xchg xchg cmc and div jecxz cmp cmp cmp jns add pop out adc loope repz (bad) fbld into in lea out jle push je dec out mov repz sub and pop ret arpl roll pop mov out ss push pusha imul pop pop add pop add jns mov mov add ficomp mov push adc sahf int3 cmp mov lret pop mov fldl test es std mov icebp cmpsl ja enter (bad) call std lahf and daa rcrl fdivrl push lds fadd dec outsb stos add push jle rol fist mov pop mov jns inc adc es xlat int (bad) xchg mov fisubl rcll xchg loopne lock in (bad) jmp xor push in jno cli jns arpl push leave inc loope (bad) adc decb ja lahf adc xchg jns rolb sbb jae insl shlb xchg out sbb sti dec adc xchg or mov es (bad) leave iret adc stos (bad) daa lods stos cli test loope loope xor in ss push nop inc rorb lcall pop test jnp cmpsb imulb push or stc cld (bad) fisubr add hlt loopne jp (bad) fcmovbe inc pop add (bad) sub int3 movsl lret test jo lret imul hlt mov dec xchg and xor fistpl out xor in aad repz (bad) shrb aam xor jae or enter in cmp scas xlat sub add loope (bad) test lods cltd cld xlat push xchg jns pushf popf cld mov in pop or mov gs std push xchg pop xchg test stc into pop mov loop or sub call test out movsl mov push cmp push int3 push shrl inc mov push fnsave leave out gs push dec mov sub into or sbb mov adc sbb dec push and mov shr lahf lret mov ss xchg mov stos fidivrl cmpl mov or cmc pop mov mov xlat mov ret add inc lret push in mov xor cltd cld mov or in mov xlat xorl pushw mov sub in or jo jbe leave idivb xor jmp push sar mov in pop jle lds mov pop cmp outsb cmpsl and jno jmp (bad) arpl inc xchg add scas bound pop cmpsb test push xchg and lret dec enter mov adc int mov fisubr add mov addr16 mov pop shr push lcall imul mov xor loopne repnz sbb sub push leave (bad) xlat add mov push (bad) test mov stos or in sbb ret dec mov or mov fwait add decl sbb fnsaves mulb add arpl outsl xor add pusha add and fdivl mov std shrb lds in mov icebp mov cmpsb mov (bad) scas call push loop adc call icebp dec fnop adc sub ret cld mov xlat xchg add lods dec mov jbe dec std je out pop add (bad) (bad) (bad) xchg or shll mov xor mov rcrb stc lcall xor and loope add (bad) stos sbb aam test loope mov fdivs mov cmpsl aam jne insl nop ljmp loope jge mov mov add xor ror pop ficompl cld mov and lea xlat mov popl out (bad) imul cltd loop pop daa rorl adc les (bad) idivb mov xchg in outsl dec mov mov rcll lds cmpsb mov cmp ficomp clc aam mov dec pop ds pusha mov roll jno cmpsl adc push andl mov mov cmp push pop rcrb loope jg mov mov insl adc movsb hlt test jae addl (bad) notl addl std (bad) lret sbb test (bad) lds retw and dec mov dec ficoml cli or sbb jne cmc cld pop clc dec ret inc push cli sbb test sti jmp mov sahf in aad out cmp xchg int int imul mov or aam loope lods mov lahf stos hlt out in stos subl (bad) lods loop aad inc sub loope std in jno jb in mov int3 mov test sarb lcall aad std (bad) jae (bad) mov shl xchg xor jg xlat loope stc rorb jmp cmp adc push cmc roll jl lods fs jp adc in clc mov add js call cmc dec andb in in inc out (bad) mov and mov test adc push out addr16 (bad) outsl mov mov cltd lcall dec (bad) mov sbb inc pop mov add xor neg add xchg rcr popa (bad) fidiv cli jg jno cmp mov push inc fwait cltd xor jle rolb cmc sub add dec mov xchg aad fidivl push xchg loopne clc leave (bad) sbb mov stos popf inc jne fadd fstpl leave or stos repnz xchg (bad) (bad) into push iret add sbb jb dec xor mov movsb mov add jge js fs push fnclex add fistpll jns jb testl sar scas pushf jno xor std flds leave bound or adc bound and cwtl mov ds mov pop lret push and stc dec gs sbb sbb inc jecxz and fwait pusha ja adc push cmc inc mov dec xor sbb int3 imul std je test sub mov scas mull out push pop test loop add (bad) dec loope mov in adc mov mov repz ss js test push (bad) fisubr lcall imul lods xor jmp lods sbb mov shll sarl fnstcw sbb pop xor les inc and flds add je (bad) subb push fst (bad) ja xchg out push push movsl push xorl sub out fisttpl sbbl push out lods aas out add adc inc pop js int3 out cld fwait hlt mov rcll fidivl mov fidivr or rcll dec push and adc shlb rep popa add adc repz pop mov jl sub leave pop mov mov sti out xor mov ljmp in ret lahf sbb pop outsl push or leave fisub mov jle fidivl leave pop sub insb mov push fstl jbe pop sub push (bad) mov pop xor adc mov or add sub jns out adc mov stc ljmp push mov incl jp push aas frstor scas or gs stc lea cmpsl mov in lock aam mov mov std sarl or adc fsts xchg lock and sub imul xorl xlat push movl fdiv push stc aam sbb lods jno leave ljmp add lods (bad) xchg pushf in ljmp loop icebp mov lcall xchg or stos adc xchg jbe in sti jg out xchg push (bad) mov xchg sti cld sbb test fnstcw mov sub (bad) jno lahf xchg gs or sbb dec xor (bad) rcll aas xchg adc lods in xchg clc ss xor dec inc test movsl or les and fcmovnu test sub imul fbstp (bad) mov popf inc loope not push leave sbb push icebp (bad) or mov lret leave loopne xorl push or jae std out inc daa lea out xchg lock sub mov mov dec (bad) fdivp in pusha mov add aam loopne mov aad (bad) xor punpckhbw adc arpl jne bound jo xor (bad) stc cmp and sub adc mov lcall add push pop jecxz pop aam push jge (bad) in or cmp idiv jbe push mov (bad) and pop (bad) or test lea sti mov mov cld mov insb mov add cmpsb push push sub aad add sbb push cmc out mov lods jge cmp cmp aaa xlat jo or push ret int3 mov fistp mov jg push paddb adc push and adc cld jo mov out cmc mov dec mov fs or (bad) (bad) nop enter lret mov cmp (bad) fiadd sbb sbb cmp inc dec xor rcr pop mov addb sbb pop add push adc jae pushf sarl inc push mov shrl (bad) mov fwait inc iret fdivr dec icebp shl or (bad) repnz and or mov aaa jno clc hlt fidivr sub dec jns xchg imul mov js xlat xchg mov sbb inc xor jno hlt dec loopne lock sbb pop movsl sub insb clc (bad) sub test push (bad) fidivl stc mov lahf (bad) in imul test mov jbe or iret mov sub mov xchg out mov adc mov (bad) icebp mov inc aaa jno stc dec fstl (bad) cltd jae and push mov rcrb movsl pop adc sti sub in push stos clc std icebp inc mov mov push xchg aam xor xor or or sbb ja mov and lock and out imul push in push mov mov sbbl test js cmp icebp lods sbb les push arpl call xor pop jle jns jg pop sub cmc jno ja sar in sarb fbstp fmulp mov lea and hlt int imul or mov sti (bad) mulb stos sbb clc pop out mov xor mov add dec cwtl aad (bad) or mov (bad) cmp jl push lods push sbb cmc adc or xchg pushf xor inc orb cmpsl add mov fsub jbe mov mov adc pop popa in test pop fisub or mov fwait stc sub lcall lahf mov xor movsl pop enter mov and movsl sbb (bad) mov sbb jmp add in dec clc sti mov xor cld rcrb sbb movsl push clc pop cld icebp adc sub lds mov into xchg cmp dec mov and jnp mov es cmc adc repz mov std mov push dec lods (bad) xor and cmpsl jle jmp mov into call std jecxz xor std fisttpll xor in push dec mov mov in fcoms adc push sbb movsb cmp jns clc sar jne icebp pop push lds mov icebp mov adc loop push (bad) jno cs aaa cmc lods mov cmp jge in out idivb or pop add nop cltd or mov fdiv js addr16 repnz je mov adc jmp jb cmp test pusha xlat out cmc jo stc mov lret xchg lds divl add jle xchg enter sahf fbstp loope xchg xchg testl notl arpl xor mov daa aaa mov mov leave adc sti movsb loope mov (bad) std ja movsb cmp repnz (bad) mov cli xor in xor insl ss mov dec mov xchg mov push inc or inc call sub (bad) cmp cmpsl jbe dec icebp or mov mov xor or mov movsb in mov cmp ja cltd jecxz hlt sbb sarb xlat lcall out push enter mov xor inc gs ret push mov mov pop cmpsl (bad) cld mov divl pmulhuw leave or mov into imul cmpsl and push iret dec mov cmp aam push out fldt adc cmp inc jne xor test xlat shlb (bad) jmp push into mov xchg js jmp mov dec fistp xor mov and rorl and cmpsl xchg mov test fwait xor mov movsl mov jmp push dec dec stc (bad) in inc insb call sbb mov aas bnd mov jl mov cmp cmp xchg mov aam sbb xor ss and xchg rorl test jle int3 test (bad) and and test out or (bad) mov movsb xchg insl lret out jge pop sbb mov jge mov dec (bad) int3 lock jae mov insb adc in inc inc js imul cmp xor (bad) pop cmc je adc outsb ja sub (bad) iret dec fcoml loope add jmp xlat sub mov push inc adc enter or mov mov inc and popf idivl xchg ds mov sbb cld ja cltd push inc js mov sahf inc jmp mov out add xor mov adc inc clc dec scas mov into ljmp icebp out std pop iret mov (bad) pop icebp pop or popa outsb ja scas or sarl popa icebp mov stc xor cmc hlt jmp out je divb cmpsl leave orl mov adc in jp (bad) stc leave scas push lock mov sbb jae bound pop daa and pop (bad) mov sub insl scas test sti cwtl xchg popf mov mov insb mull sbbb arpl lock cmp ret adc aaa push test std test pop dec insb test pop movsb fcomps imul xor mov xchg cmp leave or stc add ds adcl (bad) (bad) enter mov cmp in mov mov loope nop sub testb jne xor inc jb insl sbb fimul jecxz sbb mov sub lock lods add loope out scas fidivrl or mov pop xchg iret lock and outsb mov aam pop mov cmpsl stc cmp pop daa adc xlat pop jbe push mov push scas jle popl sbb jecxz dec shll sahf faddl notb fs je xchg mov mov cmp stos cmc in lods rolb add lods test out fcmove out addr16 lahf stos add hlt jnp stc mov and addr16 xorl fs or pop popa sub adc cmpsb sub sbb pop fsubs pop cmp mov inc add dec cltd jp fistl mov add je lods hlt or pop cmp icebp adc loope sub pop jle pop test inc daa int3 loop mov aaa jle aam xchg mov ret push cwtl push andb sbb push (bad) jle mov add int3 out incb cmc arpl mov in out jecxz sti lahf je jl or push cld push jmp (bad) dec xchg gs sub (bad) std clc test mov leave mov movsb aad addr16 sti sbb push cmp cmc mov inc pop xchg xorb cmc mov pop jno lds cmp mov call adc adc call popa mov arpl in adc pop xchg mov sub lods sarb popf lret dec mov rcll clc aas shlb adc aas dec add jbe sbb xlat cmp or cmc adc pop ja mov jne (bad) sbb in mov jb lods cmp daa mov inc (bad) adc stos cmpsb ds dec cmpsl (bad) lods mov std cmc lock or rorb or push (bad) xchg mov (bad) js in nop cmp icebp js cmp jno add or jl popa dec fstl in es flds daa mov test icebp mov sbb std mov stos sti jge (bad) in lods fs xchg xchg mov xor mov adc in (bad) push cmp mov (bad) lds nop (bad) pop (bad) insb or fcmovnu dec jp add scas push xchg mov or sub pop jo subl jge jmp fnstenv shll icebp inc push or loop add sub push xorl pushf repnz out jo (bad) or bound inc clc ds add das push inc mov pop orl sbbl imul push mov pop cmp call fisubl addr16 jl cmp lcall test cmpsl adc xor and sahf pop xchg jo icebp inc fcomps cmpsb or xlat jmp scas dec shlb jno data16 std pop jns mov (bad) jecxz lods push arpl xchg add xor cmp imulb repz xor jecxz out jg stos pop push push mov mov outsl loope mov pop jb cmc sbb (bad) mov (bad) xor nop nop fidiv add stc out imul testl mov push xor jno insl lret mov repnz mov shrb push enter mov jmp enter iret sti test xchg shrl dec daa mov or lret xor jae clc (bad) or in push adc xor nop push stc orb enter stos or mov into jns xor insb imul jg mov fcompl test cmpsb pop sbb cmp lds pop arpl jg pop or push aam mov mov cli cmp stc rcl ja fimul pop jg cmpsl stc jmp std shld jmp inc fdivrl push test xor and cmpl xchg or jl (bad) pop fmul neg loopne lea imul (bad) xor mov xchg mov iret out pop push in imul xchg je jo movsb mov dec roll nop pop outsb mov aas cli mov xchg jmp popa pop rorl jno jae and rolb (bad) mov into inc push pop push and outsb js fisubr lds adc adc xor out cltd pop inc scas std or dec hlt outsl pop ss cmc or lea cmc sub testl mov leave dec aaa mov adc add push mov cmc (bad) in inc cmpsb fisubl out pop sub imul adc cmpsl lret subl adc cmpsl data16 mov stc mov movsb popa test mov pop sbb popf cmp sbb (bad) dec mov jb ret ja and sub or (bad) mov xchg clc pop pop pop je adc jne movsb xchg mov popa cltd insb inc mov xchg repz cs cmp mov (bad) jno xchg sub pop not lcall loop and pushf mov lods add dec mov dec (bad) dec repz xchg ss sahf lock testl sbb jo in fisub lcall mov mov popa adcl ja and adc jl iret or cmc mov aas (bad) xor fnstenv cmp loope mov inc mov jo lcall inc cmpsb stos (bad) mov aam test fistl jge mov sub inc dec jl rcrb mov repnz jl inc fcomip popa mov cld mov adc fs scas dec (bad) fsubl aas scas (bad) mov jns fcmovne (bad) cli add and hlt mov mov fs sub fcomi test xchg dec push mov repnz jge cmc xchg stos xchg sub loop int jb inc out pop stos xor fwait incb cmp in out stos iret jbe popf hlt jmp mov adc enter mov (bad) dec xor xor sub xor cld outsb mov js cmp push sbb xchg lea leave xor test cld cmpsl adc mov frstor loopne mov inc push pop push arpl xchg popf leave dec (bad) dec out xchg add inc enter movb cmpsb sbb pop pop mov mov (bad) pop jmp push dec add dec or sub scas inc imul xlat int gs xor scas sti sbb fiadd ror mov out mov insb loope cmp push gs mov jecxz add push enter lods add adc ficom sbb in pop mov hlt pop stc pusha sbb mov bound and jp in inc leave sarb dec fcomps stc mov stos popf std out ss push (bad) lcall popa mov decl jg inc repnz fisub or mov dec pop cmc and sub adc divb (bad) sbb in or cmc in hlt jnp repz bnd xor adc std in cld jnp sti mov icebp jbe stc mov or sti fs cltd mul idivb mov (bad) mov add cwtl mov adc add fisubrl fistpll cmp (bad) jno cwtl bswap mov dec jecxz sub test insb jle and add inc pop (bad) mov fistpl mov iret pop loop (bad) loope fstps mov shrb jecxz jle jno or or into cmc mov push dec adc fisub mov jo mov out inc fist dec arpl xchg cltd pop lock mov loope or lret loope jbe test xor xchg stc jmp (bad) aad inc jmp test aam dec xchg in push lock cmp xor sub movsl test inc scas jecxz xlat jecxz cmp std into push popa out adc inc adc or jmp aad mov out cmc mov mov scas mov cmp jmp icebp pop xlat in out mov jmp xor jb add leave pop int3 popf rol mov test jp out push data16 gs cmp std sar flds adc int lds sub pop mov insb cmc mov (bad) dec cltd jae sahf jp (bad) aad mov xor mov icebp push pop loop adc push ja cmc sbb (bad) mov xor xchg xor sbb in (bad) cmp mov mov insb and jns mov imull xchg mov and mov xor jbe mov gs xchg cmc cmpsl (bad) ffree jmp push pop sub sbb test addr16 mov in mov addb ret cltd rorl iret out jmp pop (bad) xlat inc mov add rol leave stc daa shl dec jbe sbb mov mov pusha cmp int3 inc ljmp rclb jg pushf jmp mov push adc fiaddl sbb sbbb scas decl stos je (bad) loopne sub xor stc mov loope inc inc jae mov orl lea lea icebp mov sub imul hlt add repz xor xchg ljmp je mov pop push lock cmp or decl cmp jle xor inc push sets cmp push fldcw (bad) cs dec (bad) mov mov push repz fnstsw repz fimull lock outsl xlat pop test js test mov loopne mov cld (bad) (bad) popf std repnz rcrb ja mov push lock jo mov cmp test cmc roll mov or sub lds lret loope repnz dec mov (bad) mov lods (bad) mov cld (bad) mov dec rcl bound ss and xor xlat ret leave dec or push stc pop inc mov (bad) sbb movsb mov cmc test pop cwtl push cli mov pusha repnz ret jnp scas pop mov push out mov inc mov dec mov jno lea aad cmpsl stc enter xchg add pop stos mov sub stc aad xchg mov int ficompl lds xlat sbb int jl jmp cmp pop push insl mov mov iret addr16 xchg mov shl arpl xchg out jno clc jnp loope lret jg lock rep negl jae test xchg cltd repz jbe test aam xchg notl inc mov pop or mov (bad) add ud2 cmp sti fisub mov repz imulb fwait scas test jno sti out mov jl mov into pop push testb divl xchg rcl in cmc (bad) mov fnstcw mov cmp cmp sti sbb pop or in stc scas or mov push out fdivrs enter test xchg ja (bad) js cmc adc loope pop call loope repnz lock jp test inc inc jno es jl jnp mov out sbb les mov (bad) in decl int movsb jno lock or (bad) cmp mov rcrl orl hlt imul mov popf into adc lods pop inc test push test cs jp xchg xor popf fiadd adc mov inc test in mov nop mov mov sar mov aaa fadds or mov pop shll ret fwait xchg addr16 mov sarl or into xor cmc ficom sahf adc push shll lret nop cli xor or jge lret xchg xor divb scas fstps inc aam das sti ja adc in fidivr jo lret jbe out dec lock push fldenv add sbb mov aaa lahf loop cmpsl jne (bad) mov ljmp stos popf or cmp roll adc mov std outsl leave std cmpsl (bad) or sub aaa (bad) cs repz xchg jp fwait or fsubrl lods popl inc push fdivr dec push mov in sub adc sahf das or stc adc les in movsl jbe xor out or cmp cli ja mov popf lock hlt arpl idivb mov daa fimul insl mov pop xor inc mov or jns cmpsb pop add out test and cmpsb dec cmp mov add push mov sbbb xchg xchg mov xorl cmp fsincos iret subb sub movsl mov or fidiv mov xlat icebp in dec pusha fadd aam daa mov mov mov mov leave mov fistpll stc mov pop call push jo sub dec mov dec into movsl pop or cmp mov cmc leave mov xor adc push iret aad xlat mov add sub fnop stc ja fimul leave aad ss iret aad jl je movsl sub adc xor inc pop mov ja adc mov jne jne mov jno cmp xor xchg mov les cmpsb inc inc jns clc inc mov int addl enter ljmp mov cmp xchg in fdivrs aad lock jo (bad) shl jbe xor negl (bad) mul or dec movsb xchg sbb push notb (bad) mov int mov cmp jg fimul pusha (bad) daa xor fnstsw shr neg divb iret ja dec dec cmp in out in jns push cmc lret ret cmp mov sub into xor in pusha cmpsl mov or cld push loope mov movsl pop (bad) jae mov dec xchg movsl outsb mov mov jle sarb into sub call dec or int3 jle data16 pop test xor sbb call jnp inc sarl mov cmc mov dec and frstor outsl outsl xor out push cs or xor push cmpsl xchg lahf out cmc ljmp imul jo int mov fnstcw jmp out out rcl sub jge lods xlat mov mov mov ret mov or sub (bad) (bad) movsl out pushf (bad) mov or and xchg call adc je sbb mov jecxz adc rcrb cld pop int mov (bad) cmpsb or mov ret add pop mov scas push push lods rol sbb and leave cs jnp mov stc leave pop jmp (bad) aas mov xchg repnz add xchg cmc int cltd adc dec dec sub push lods add andl mov mov scas hlt xor icebp (bad) ret mov pushl mov js div (bad) in rcrb out popa jnp xchg ficom push add nop cltd fdivs insl mov push push jb cmp adc lods hlt jl clc or lods (bad) fucom cmp xor mov xor add pop dec pusha jo cltd out clc cmp aad negl call into and (bad) int3 test cwtl sub hlt cltd test mov aad jbe fildll mov jle es icebp movsbl iret cmp je jle aam mov icebp pusha jl lods jle iret (bad) dec sahf or mov data16 movsl ret or jnp ds enter lcall inc push sub and mov adc sahf push test sbb test clc iret mov mov scas jecxz lret mov push mov (bad) int aaa sbb mov push nop cmpsl jg sbb ficoml hlt (bad) xchg out add inc icebp or cltd mov shrl lret repz cmc pushf dec add cmp insb add in mov jmp and mov std pop cmpsl aas mov ss cwtl or mov jmp xlat sbb in jae fucom mov xchg or pusha vpmaxub sbb daa mov stos mov cmpsb enter aam and mov mov into ss testb fucomp icebp insl inc pop adc popa mov cmpsb cmpsl psubq lds lds ljmp pop mov mov faddl fnstcw mov push (bad) imul aad cmp add sub lahf or mov sbb pushl ss jecxz or and adc mov scas and nop rclb test (bad) or xchg pop dec push nop jne pop repz cmp pop mov jbe mov aaa mov lock jo xchg and cmp out sti pop or cmc mul sub cli ret jb mov xchg out sbb ja mov adc es adc jmp int imul fs lahf in lock push mov xor sub jne pop mov sub negb adc out popa mov in icebp sbb arpl cltd add jne add and dec (bad) cld je (bad) mov pmuludq mov xor mov jae cmp sub mov movl jo rcl test push jae test and dec mov push (bad) aaa xlat inc mov rcrb mov outsl jmp pop or inc xor xchg mov (bad) cld push cld (bad) mov mov js cmp rcl in xlat in test fincstp xchg fidiv jl dec push hlt pusha call outsl jne pop jg mov mov in xchg add in cmc std pushf movsl lock fistpl adc and shrb (bad) and mov add out loopne mov or xlat jns out hlt (bad) sti repz lret cmpsb mov jmp insl iret or fwait ljmp out push pcmpgtd pop push out lds rclb and outsb (bad) jle (bad) dec sbb cmc imul jbe int jo xchg cmc and pop adc or enter data16 mov dec pop mov push rcrl xchg popa inc out or bound mov sti stos std xor data16 or movsb xchg jl cmp mov cmp sub mov dec jge stc jle (bad) cmc in xlat imul (bad) jmp jge (bad) fbstp aas out push pushf mov sbb fiadd imull cmpsl into or add shlb cmp jle jl rcrl lock jnp jle mov cmpsl xchg les cmc mov stc xchg enter jb movsl mov adc js out mov bound (bad) xor sbb notb rol ret fsts fs imul pop sub popf jg xchg mov jnp cld fnstsw cmp xchg stc inc rorl js icebp loope add sub jne bound inc (bad) jb push mov stc roll ja idivl mov or mov enter test mov int3 mov insl sub icebp mov (bad) mov mov (bad) in and stos xlat mov xchg cmpsl enter mov in pop sarb repz sub jne inc mull mov in or stc mov fdivs es jno (bad) int rcl clc sub mov inc scas loope sbb dec pop inc ja xchg mov (bad) icebp push cwtl mov and xchg lret jmp int3 sub pop or and ljmp sahf lods dec aas pop push sbb xor dec sub pop ficom sbb adc iret popf mov ret and dec loope or mov push int arpl mov cmpsl xor add sub jl roll xlat xchg loope pop adc jo and (bad) lods or jo jmp push lods popf lahf out (bad) or adc xor xchg popf or or jle xor popa pop fidiv push (bad) in adc test pop mov mov test mov fisubl int3 mov push out and addr16 das das int3 out clc dec out mov pop add jbe incb sub mov lea cmp inc repnz adc add jmp mov shlb xchg add sbb jle mov inc loop mov mov mov push dec cmp aam call push pop mov jp and cwtl (bad) out clc daa stos movsl and sub xor loope imul int3 rol (bad) flds adc sbb jnp lea sub xchg add and or or lods sbb sbb ja sbb sbb add jbe mov push pop dec mov pop inc (bad) data16 push xchg (bad) enter lcall imul jmp outsl mov mov daa cld and or fldcw dec stc ds mov pop xor xlat daa pop cmc aad xchg std (bad) xor mov shl pop or in sbb dec aam push add fidivl jns popf test lds loop into cmp mov lret sbb xchg pop jmp mov cli ja mov jecxz inc call (bad) xor repnz and dec stos je daa out mov xchg cli inc pop clc cmpsl jp mov ficoml push outsl mov cmpsl xor push pop mov dec add cmp aas mov mov or sti add xor in jo call adc mov stos cmp add jno xor or mov adc leave outsb and xchg xor jne mov andb (bad) lret aas adc and xchg addr16 sub cmpsb fsubs xor or popf aam (bad) jne push jl and and mov cmc jno repz stc jp loop stc or fidivl fstps enter jmp hlt call adc test mov cmc mov clc mov (bad) mov cmpsb jmp loopne icebp jge mov movb add cwtl sbb (bad) (bad) cmpsl jmp aam (bad) xchg loope idiv push cmc rclb call icebp pop xchg sub enter pop stc (bad) divl cmovle and hlt push and jne aas loopne icebp pop mov jmp hlt shrb push pusha mov pop out jo dec (bad) xchg (bad) sarl pop xor jae xchg fidiv aad cmc xor jg lods or mov fstpl movsl fstpt std lods push cmp cmp aam xchg push (bad) clc sbb iret fdivp fnstsw jmp mov jno xchg fs add pushl jg jno leave icebp enter lock xchg aaa popa leave mov mov jecxz je mov dec inc inc mov sbb jno sub icebp mov push dec push fstpl inc fdivl or xchg iret mov inc lds sbb mov push cmc dec jecxz push hlt jo xor nop stos aaa cmpsl push cmp xor arpl fldenv orl cs mov or xchg push cli out into sub mov test fiadd cmc mov and icebp arpl ljmp mov sbb lret push or mov add dec stc cltd add cmp and jmp or mov pop inc mov shll dec bnd mov sbb pop mov sti mov into add cmc dec cmp jle cmpsl jae and jne bound out mov xchg fxch xor pop fnsave lahf std incb fiaddl dec adc cmp mov xor pop mov jg cmc jno adc pop fsubr add stc lds or shrb insb xor idivb in les test mov sti (bad) fidiv jo mov mov imul idivb dec mov popf lock inc aaa jp fdivr aad test sarb aaa pushf scas cmpsl inc adc nop into jle jmp mov incb loope aaa xchg sbb sahf jae aas mov mov cmp int lods roll xorl xchg imul xchg or std adc leave jg jno hlt mov mov xchg jmp mov push mov into mov jbe sbb addl (bad) mov not fldlg2 push aad std add jno movsl mov in mov jge xchg mov in and adc mov fisubl leave xchg jl mov xchg xor jo,pt mov popl gs jge and dec mov inc push xor ud1 out xor jno push mov and jmp and scas lds dec sahf scas mov xor inc je mov cmp out xchg dec test (bad) jo dec and negb xor cmc adc and clc stos or dec mov lds data16 sbb mov into cmp sbb lods aam shl cmp enter bound jae cwtl shrl adc stos stc stos bound pop imul fidivl ljmp inc or hlt adc mov mov xor push sarl inc fnstsw stos or sub out jl or sub sarb in add test lahf loope arpl mov test sbb stc cli jg jle xor or mov dec and cmpsl dec dec mov adc (bad) in scas push shrl call fnstcw inc or mov fimull sub test jp popf xor or out push mov push cld out jb sbb js cmc cmpsl imul mov das cmp popa dec stos and test leave mov sbb icebp test push adc mov enter loopne icebp cltd jle mov mov loopne inc cmpl icebp divb std (bad) daa dec ljmp jg daa stos jns jno push push pop jmp repnz (bad) xchg aad mov pop test cmpl push (bad) scas xchg adc mov jl mov out adc out jbe dec cld decb jp lahf icebp dec cwtl cmp mov pop mov aas (bad) mov inc rclb fdivrp in test (bad) jecxz movsb outsl mov into fnop cwtl lret out or or push dec jmp jne in and jnp mov xor addr16 pushf adc adc divb fmulp clc ffree jge adc jns cmc inc gs fild aad int3 cwtl xchg push rcr xchg faddp mov mov mov cmp jge jno jmp push repz mov scas in cmp scas mov lock pop mov jno cmc ljmp ss rol fadds pop sahf mov jle mov andl adc mov push ror sti mov sarl lods cmc fadd dec push add cli mov (bad) push clc pop jno xor dec loope jge xor jno xor jle push decb fnsave xchg sti or mov mov rcrl inc and jge sahf testb scas aam mov fisubl testb (bad) repz adcl jle add lret repz cli mov inc xchg testb pop add clc dec lret mov fimull mull adc cmp (bad) dec mov cld enter movl jle add mov idivb jle loope sarl loopne (bad) xor test mov fldcw orl push scas ret inc cltd jo stos jno jl fldt pop jge rorl iret inc mov fdivrs sub sti pop xchg sbb aam sub sub roll lods nop push push jle and adc or sar jp mull lcall daa rcrl clc imul scas jle xlat xor enter push adc leave push lock jmp rorb out cmc fimul jnp bound jl fidivl xor or cmpsl sub push or es mov (bad) in ds ss loope adc loope in or sub int xor aas xchg mov out mov jbe adc lea xor movl in rorl mov jle jl xor and push push jne pop mov push aam out les (bad) or jo jne shl jno fmull fdivl xor mov jae ficomp jno test or nop jo xor fs push sub add sarb fsubrs sarl out ss xchg cli mov dec xchg xor (bad) mov je push ficoml das arpl out xor test call dec and stos jg icebp call ret push icebp jbe push stos (bad) fnsave push and in enter lods mov dec cli enter rcr adc divb test adc (bad) lock test loope (bad) adc add xlat fmuls into gs jo rolb dec fnstsw mov mov inc or aam out ljmp sahf shrl loope mov insl sarl fsubr (bad) fsubrs mov push into addr16 inc xor mov pop jle stc lahf (bad) jno pop mov leave jle jns fdivrl lahf cmc adc and fistpll fcomi test jl or loop jmp mov xchg sahf test mov cmc fdivrl fsts pop cmovl aas mov int or lock popa loop push test shlb out xor add lods ret xor ss mov imul call vaddsd frstor xchg leave adc cmc stc pusha dec adc or movsb cmpsl pop pop or movsl sub ret rol out inc aam lds out jmp cmpsl rcll mov hlt dec pop mov flds sbb rorl xchg adc aad mov ret leave cmpsb mov (bad) push fsubrs test iret push (bad) aaa or (bad) (bad) mov xchg rolb pop gs mov sub scas mov das divl mov cmc and push push div into push xor jmp fnsave sub and movsb (bad) mov mov icebp test lods notl fidiv stos xlat inc mov and fdivrl aad adc or loope negb int3 into adc test lds jo lods sbb xchg adc jg xchg (bad) pop cmp icebp dec fldcw scas mov fwait jge xor pushf push cld stc (bad) cld sbb clc (bad) xor test in xor in in loopne in out fdivrl jo out in pop jecxz into inc mov imul inc xlat test test dec lods fnstenv cmc mov test pop jbe mov jecxz (bad) mov and xchg fistl pusha xchg dec stc push mov adc mov push xchg popa mov in (bad) jns add pop pop movsl (bad) pop std lods ret pop mov jp push cmpsb mov (bad) jle jno (bad) sub sub cli inc in icebp in or into es test std jg repz imul jle std push inc pop ficomp xchg enter not (bad) xlat movl jno (bad) lods (bad) divb add scas shrb cld cmp movsb pop bound mov mov mov mov and mov fcompl sarl hlt sarb add push add and sar jae leave call mov loope push xchg gs pusha outsl push cwtl pcmpgtd mov addl push xchg jl cmovg cmp gs (bad) add inc pop jmpw stc and imul (bad) sub enter repz stos fisttp xor or pop mov sbb pop fiadd fdiv lds int testb jno add (bad) rep fs and icebp and jns inc movsb stc mov or test mov push xor fdivs ss stc hlt fcomp xchg jbe mov icebp test iret std hlt mov iret sub clc ret aam sub adc or mov jbe xchg (bad) dec mov sub xchg lcall popf ret out add cli test mov lods cmc rcl into and (bad) push into ret bt out jns or xor adc push imul test or sbb mov push fs fnstcw xor call sbb mov cmpsl xchg sub lods cmc mov and xor sbb aam adc iret movsb bound (bad) mov fldenv clc fadds jbe or jmp mov mov sbb adc into push mov xor sub out ss sub push inc aad jecxz sub adc jbe cmc adc sbb inc sbb out lock xchg mov dec ds sub and mov jnp jo sbb mov jno fnstcw mov (bad) leave and hlt stc lea jbe ljmp push fdivl mov std jb repz or ss enter (bad) jae mov inc push popw rclw (bad) xlat repz or out (bad) clc pop mov lods adc or or cmp pushl or adc (bad) jbe push or mov cld pop cli out ss dec out pop sbb xor jge test cmp mov or xor dec jno jmp in cs (bad) (bad) pop xor mov and inc mov cmc sbb out mov cld push mov icebp sbb imul sar pop jae sub stos pop lea std pop jno and dec mov repnz xchg dec cmp jecxz dec les push sub jno (bad) test jbe or in sahf push xor jns xor mov into cmp and call jo fisttpl in lea icebp mov out stc push inc loopne in jbe lock out in adc jae jecxz xor repz or ljmp mov add mul cli je dec jp movd sbb out push jmp sub cmpsl and fisubl in adc mov sub xor (bad) lods xor sub xor out lahf cmp and aad mov sbb aaa xchg dec cmp dec mov and push mov dec pop cmpl jle xor sub xlat pop test xchg dec add mov out jns push jmp or fsubr clc or rcrb icebp fstpt jns fld pop stc fildll mov push outsb pop push shll in insl push lods lds push pop mov idivb fidiv jne pop mov adc mulb xor test sti insl aaa icebp inc andl and inc xor or sbb jge movsl (bad) fistp jo jge mov in out dec adc dec repz inc inc outsb mov mov adc inc out xlat xorl or insl fwait les ds hlt scas (bad) sbb fs fsubrl mov mov sti mov out mov jmp jbe pop sar mov std adc (bad) dec aaa xchg or cmpsl sahf mov and es cli jp mov int3 inc dec xor add mov mov fdivrp notb or xor xchg out xchg push lea xor xor jmp pop (bad) add data16 jne pop cs rcr icebp sbb inc push leave loope rcrb push fsts jns in mov jae mov adc xchg mov mov jne xor ficom xor mov jno cs jbe jnp mov test xchg arpl sarl inc (bad) aad popf flds fdiv add mov or rcr or ss cld aas mov cli cmp out stos shrb mov lods cmp mov xor lahf loop xchg in icebp mov push jmp mov and dec aaa out imul aad icebp jno jg mov mov jl loope in mov (bad) hlt jl or int jl cmpsb or (bad) or nop in jnp (bad) jno inc bound (bad) mov sub jns andl (bad) push xor aam outsl mov fs mov jge pop xor jecxz jl jmp push stc in xchg aad (bad) divl push push fisubl popf or xchg xchg pop cmp cmpsb in sbb inc jp leave inc inc add arpl sbb inc (bad) sbb es lock xchg ss mov (bad) adc pop rorl push movsl cmpsb loopne mov push mov test popf rcr int3 mov cmp jnp mov loopne mov mov in fidivrl ljmp add adc mov into cmp hlt iret jle arpl dec (bad) scas out pop (bad) int or int jg and mov inc xchg imul jl not into cmpsl cmc cmp mov iret imul in or mov mov jecxz pop iret mov push jno xor fildll popa xor push jno xchg rorl push push sub lea sarb mov aaa lcall or xlat mov or sti jmp ss imul push bound mov inc cmpsb jmp leave mov and push gs mov jle fiadd and mov jmp es xchg icebp mov push push loope std notl cmp aas stc je jg mov loopne movsb jg icebp rol mov stos jno cmp (bad) mov mov adc mov fnstsw sbb popf or adc mov lea xchg (bad) dec stc inc sbb mov inc jle mov or jb or lds push jecxz sbb (bad) jle inc in sbb mov mov dec or cmc push mov inc mov inc mov sub mov dec cmc xchg mov enter add mov xlat sbb sti leave push push jne adc popa dec insl dec and outsl or in dec mov lods mov shrl dec jmp pop shlb test cmpsb sarl jg mov jp push jns push aas mov movsl imul insl xchg mulb mov push roll inc in mov fisubl in stc inc arpl sbb scas (bad) int pop and mov sbb out mov cmc jle inc sub or inc loope shll jo xlat and dec orb (bad) xor movsb and adc jle pop into inc mov ja or stc out neg cmpb ja and cmp mov sbb pushl mov dec arpl mov (bad) fisubl movsb arpl inc sbb stos jnp lods or gs imul pop xchg call in imul (bad) jge sub stos jl ret (bad) int (bad) or pop sub add loope test jecxz jno (bad) mov roll mov inc push cwtl leave mov sbb loope sbb sbb stos into cmp loop mov shlb out fiaddl fisubl (bad) mov xchg mov (bad) or sbb xlat daa add cltd mov imul jns pop pop jl mov mov push mov jmp clc jg add add push (bad) or in lods outsb fwait in out negb fidivr test sub leave or mov or jo add daa mov js mov inc jecxz (bad) lods stc int jbe or xor or out add pop dec std cli adc ret sub cltd ficompl mov adc adc fildll test mov jmp xor and pop icebp lock movsb out out dec adc push xchg pop sub xor or xchg dec and mov push rclb stc mov dec ficoml push cmp into push (bad) dec sub mov dec das stos mov xchg test jmp cltd stos testl cs pop cmpsb add xchg push xchg mov and mov pop inc sbb leave sbb ret mov pop jl lea cmp into mov ljmp jl push nop or dec jno push add dec xor mov sbb fsubr add (bad) pop sbb popa mov les jmp xchg or jne into or (bad) cmpsb jle or fucom into push movsl cltd mov stc push out jp pop in or cmp jns jecxz push push mov inc jmp mov cmpsl mov mov int ja pop mov repz repnz scas inc mov fild adc push rolb add xchg adc jb aaa dec pop push mov add jle xor jbe mov (bad) fldcw test into movsb in mov pop cltd clc xchg push mov jle jns movsl (bad) fs gs push sub push ret jns rorb pop inc ds and sub dec mov call mov into and jns insb fstl xchg stos push movsb push fldl2t or nop mov push mov dec ds icebp add mov mov movsl repz and xchg mov out clc adc xor add adc outsl mull adcb mov sahf inc push shlb cs es enter push test xchg test repz mov sti cmp mulb (bad) sub mov lds aam roll cs mov push shrb mov push jo int add jl jno cmp lock jecxz push mov (bad) or nop pop orl outsl and in sub sahf fs insb sbb add movsb adc (bad) and in fdiv inc stc xchg sbb fnsave pusha sarb in gs xor mov pop inc xchg or dec dec rcrb sub xchg sbb mov lret pop xor jmp push test inc or movsb adc repnz test sbb mov shll sub sti insb and push adc movsl int mov fs pop add hlt xor aaa (bad) push push push (bad) mov mov jno daa addr16 cmc (bad) jge sbb adc roll (bad) jns in call test cmc icebp stc call iret mov in scas sub roll test mov aas lock mov test test dec stos jmp push add jns in mov (bad) icebp fisubr and repnz cltd ffree lcall out inc popf jno test ljmp and decl adc mov outsb mov shl rol mov out add fstps or jmp enter mov je sbb xchg jle dec xlat mov sub out mov lea push loopne fst cmpsl ss dec test push cld lds mov mov std xchg or cmp mov lret jno jne lea sbb xorl push mov mov icebp fnstsw in lds shll shrb add adc repz rolb adc push jmp xchg adc idiv ja xchg ljmp or (bad) xor test int mov cmp push mov outsb push jle movsb jno repnz (bad) (bad) repnz fisttpl lcall iret aam stc jmp dec lods or xor test test repz movsb jmp push adc out lds imul mov fcomp test (bad) (bad) mov test aas aad add dec mov sbb mov dec adc adc icebp sar (bad) sub test rcll jne test dec cmp fisttpl lods xchg aaa je jmp or and lea sub fidivr mov divb xor test mov cmp and mov mov mov mov mov cmc ficom add mov pop jg mov lock (bad) ficoml testl stos pusha mov cmp mov lret shr (bad) jbe repz in add pop pop (bad) aas repz jbe negl jge jae stc sbb dec imul mov cld cli jl (bad) std outsl cs pusha and scas inc lods mov push cld scas in movsb mov lret or std mov fstps jns hlt add sbb imull clc iret and in enter lret cmp adc call loopne gs leave sbb sarb or jns into cltd ror mov jns ret xchg cmc test stos dec lea fldenv mov jmp sbb mov in jmp (bad) lods fldenv in or pushf (bad) test out sbb mov clc pushl cmp mov mov test (bad) bound clc (bad) jno push rolb loope lods push insb in lock mov jmp push xchg mov aad in pop (bad) out xor add and in inc xchg aas mov notb lret les mov int pop bound xchg movsl leave sbb iret adc in jae and jo xchg adc dec fs fldenv adc xchg or mov dec rolb clc insb fwait adc mov xlat sarl enter test mov shr aam std mov into mov or and cmp sub mov jg or outsl pop lret jne int stc ret jmp xor or fdivrs mov lock sbb jo add fcomps aaa clc fmul or les sub or mov fidivr push in add sub aaa in iret cmp les xor icebp call loope nop hlt xor aaa enter or jno adc fstl xor (bad) mov jno xchg inc xchg mov push push loop jge sub jne mov call mov aad cltd aas in jecxz mov add lock push xchg add enter push xor xchg iret sub icebp test in mov into or (bad) icebp pop xchg dec mov (bad) test pop dec iret dec xor inc xchg mov loop inc icebp or clc pusha sbb inc call jp mov insl lock fildl rcr dec xor insl or loope rcl xchg call mov xchg jbe mov insb mov lods (bad) stos or mov ljmp jg loop mov jo test pop jge jge ret aaa bound aad xchg dec ds jge mov dec fwait jo dec test arpl (bad) enter add (bad) push aaa fildll sub push in mov wrmsr cltd test fwait pop out or add out sbb shrl out add cmp and addl adc pusha dec cmp rorb fidiv imul xor xlat in stc lods push push sub test in repnz sub xor scas pop and fucomp (bad) adc out adc rol repnz int add pop xchg shl cs cmp into leave push and push test (bad) repz testl loopne (bad) (bad) pop push inc add fucomp mov mov xor pop and ja lods and rcrl pop test outsb and push lods lods idivb lds jae movsl int cmpsl xor xchg adc lcall ret scas loope cmp and and push out cli jge jbe lds cld mov mov (bad) xor cli ja xchg ror add daa scas shl push imul mov dec and xchg or sub and mov (bad) sbb ss sub or leave push xor mov or (bad) mov mov mov sbb xor scas mov shrb dec mov jo mov mov outsl jo jmp adc mov cmp jmp sti pop sbb mov (bad) leave xchg fiadd cmp ja and insl sarl mov mov cmpsb xchg int sub cmp icebp clc mov xchg or into sub and jl mov fs or jp cmp xchg mov jle mov test adc pusha push lret lods out mov aaa jo push xchg dec mov mov sub push ret sahf out sbb aam or lock add cmpsl lcall pop xchg lock push mov sub cli mov popf add loop and push fcomip aam add iret jns imul into or lock repnz adc test mov and mov jecxz stos pop add loope add sub repz cmp fwait xor in nop cmpsb fucomp fdivrs test mov xor in daa daa cmpsb mov hlt adc ret sub jmp or push in push mov movsl shr add in aam fstpl fstpl loopne push arpl hlt xor jns aas and fwait sbb xor ss movsl add cs sbb jmp xchg mov dec and push or jg out and test cwtl mov test jg xor iret cmpl add xchg ficomp lcall icebp stos jo pop mov mov testl jno push mov out sub mov adc mov int3 test stc push ficom pop iret mov adc loope int mov dec repz popa sub dec add jno ficom leave es psllw movsb jbe mov shrd call je rcl adc adc mov pop push (bad) ja jno mov and imul insb mov adc or sbb or add imul pop mov cmpsb dec xor cli test movsb bound mov cmp popa fmuls outsl sbb xor stos (bad) insb icebp mov or or icebp mov mov cli dec lock adc (bad) faddl mov mov ss mov in sti adc sub mov jne lea dec sub mov mov imul std icebp cli jnp out push cmpsl arpl inc or test bound add mov mov int3 xor push inc daa in push call mov mov (bad) mov (bad) movsl inc mov or dec movsb (bad) sbb pop popa clc cmc or popf imul pop aam hlt bound (bad) inc sahf mov mov pusha jle or hlt cmpsb mov test lcall fbld arpl (bad) xor mov dec xchg enter nop mov xchg mov mov add mov xor mov je dec and sub std cmp xor jmp jecxz stos lea adc shrb jp mov dec lock and stc push adc jno sub jle dec in push mov rolb pop fild fucom adc cmp fs mov lods pop sbb enter cwtl xchg fistl clc cld push out fbstp (bad) in dec frstor repz or jo roll mov mov movsb adc loopne sti call inc lds mov jnp inc dec cli ds in movsb (bad) sbb jmp mov pop stos icebp movsl mov cmpsl adc mov loope mov mov shll cmp mov or sbb mov push test xlat cld movsb inc hlt xlat dec movsb dec inc xchg in (bad) xor into aam mov data16 push xlat jo mull leave dec repz popa test adc xchg sbb mov (bad) jecxz adc inc pushf rep pop test sti jg (bad) (bad) stos inc jl or mov repz in movsb jp sti mov mov popf mov or xlat xchg ret inc cmp add add adc stos es les lods gs scas lods ja xchg mov pop div scas in and dec int mov imulb cli mov out mov icebp lock jl jne mov sub mov and loope mov idivl lock xor mov out push mov dec out cld call lods mov mov test push cmp inc aam and sbb cs lahf or mov repnz sub pop sarb sbb (bad) xor jecxz sahf inc les xor push mov mov adc sub inc cmpsb or lcall and (bad) xlat sbb dec mov aas std xor loope ror sub xchg rol mov scas xor push jne fxam pop push addr16 and icebp adc jmp int3 shl lods jmp adc xor adc in popf pusha sti call out and mov jmp cltd test adc xchg lret jns into hlt rcrl icebp jmp (bad) mov cmc faddl leave cltd idiv test jbe aaa or pushl cmc in sub push xlat (bad) jno xlat push out mov pop adc cli ds test out hlt fstp jno vpmulhuw jbe cltd imul test movsb loopne enter xlat or aad and mov dec mov in in cmc test enter xor das lods mov inc addr16 sub and mov dec jbe enter shll lahf sub mov mov gs mov lahf jmp xchg fstl inc adc push mov js sbb clc cmp (bad) jg daa in sbb xchg push mov rcrl mov push jb push or mov mov cmp adc push push loope add out outsl mov (bad) out jmp mov ljmp bound mov lods adc clc outsb into cmp loopne jmp hlt cli inc pushf sar in mov sub icebp jmp test mov rcll and leave adc mov xor test dec push jns jbe pop jb jg je leave dec aad incl in xor icebp push loope in sub push mov cmp movsl cli cs stos cli dec repz mov push in repz adc cmp sahf decb sub mov or and adc pushl push jecxz out or loope jae fs mov adc mov mov or mov std mov pop xchg push sbb (bad) mov lods icebp xchg pop adc lahf jle push leave jmp stos adc fidiv test roll in aad adc push (bad) cld out ficom mov adc repz out jecxz push xchg gs xor xor mov sti repnz jecxz jo push (bad) fdivr mov push push rorl xlat mov bound out paddq pop jno (bad) (bad) xor in out mov mov addr16 stc sbb sub mov or aad push push push cld ja and cli cld lret rcll and add fnstsw mov cld dec popf movsb cmc xchg scas je cld mov sbb push movsl add cmp inc jmp mov fcoml or and les (bad) mov xlat jp mov add push std mov fistpll and xor xor push dec lret jne (bad) pop repnz cli je ljmp scas sti jno pop xor adc test add fcmovu out test (bad) mov aas test shlb push mov stos mov add enter mov jns je pop xlat mov data16 ret lcall jo rcl cmc test push or jmp cmp aaa xchg jecxz cmc push mov jno test addl arpl gs icebp mov dec aam pop lret sbb xchg in lods call cmpsl mov std sti adc rcll mov je aam fldl sub gs out dec or faddl sbb clc (bad) test and aam in lahf sti mov (bad) mov rcll test lock xchg repz mov rcl mov jno xor aam or mov loop inc pop out dec clc enter mov fsubr cltd lock repz and mov fildl push ret or pop les leave or push jl push mov (bad) mov and jbe pop xchg fucom negl (bad) dec test xchg push ja adc (bad) stc fmul loopne in mov dec add mov adc cmpsl mov jbe xor jo add xchg mov hlt fstps imull inc mov test mov and (bad) jg or es lahf loope inc enter pop push (bad) lock xchg fxch push cmp cmp or mov or aas lock cmpsb lahf pop movsb (bad) xor out inc mov add lock dec mov rorl imulb xor add stos mov enter hlt inc jns ret mov dec (bad) or fsubl stos inc out imul jl clc (bad) out inc mov push or xchg and mov add scas push xchg jbe loopne xor add aad cmc out or jl shl push sbb je or rcl std cmpsb out sbb push (bad) je jl ss les jl leave mov dec push jg cmpsb xchg movsb repnz adc fs je mov jne jbe sbb jae aam xchg add sbb add cmpsb mov adc push cmp mov xor (bad) mov divb jb sbbl ja imul enter jbe aad icebp cld sub lods sbb adc mov lods mov inc in jmp pop add rolb push or fs fdivrs mov xor mov fnstenv std sti jl mov jns mov (bad) rorb lock fstl mov std negl mov cmpsl lods cmp fstl sbb xchg int call aad ja xor mov xchg cli xchg movsl lock xlat lds xchg jnp test jp clc adc sbb dec mov jle mov dec mov jle loop dec xlat sub sub in jge lock in lahf out pushl push mov xchg or out push out push cli fisttpll test jnp (bad) shlb aad sar or xchg or add addr16 rorb sbb mov xchg fdivrp stc mov xchg jmp popf addr16 aad sbb xchg sbb inc arpl pop push sbb sarb pushf mov dec sbb mov xchg les dec jne xor cmp and sbb idivb xlat mov daa aad lods xlat mov imul std fstpt icebp adc cmc (bad) insl mov (bad) lock movsl jns clc inc inc cmpsb jge stc mov pushf dec xchg pop and pop and cli pop les cmp aad adc leave add sbb ret (bad) pop dec mov test inc xchg cs imull pop push pop mov add dec lock popa stos cwtl ss out adc leave fucomp in mov test adc call (bad) nop adc lea adc lock sub xor adc arpl mov pop mov jle dec jb add xor dec or pushf shlb std adc mov je rclb adcb sti mov fst sbb jbe in mov lcall enter scas (bad) jbe dec jmp in js sti bnd (bad) xlat repz push daa in add iret mov push (bad) (bad) negb xlat xor xchg (bad) jno jbe out adc aad stc xchg cwtl mov hlt icebp cmp out xor xor fimul in pusha stos xchg dec pop mov int3 adc nop out out inc loop push cmpsl add xor xor scas cltd mov xor dec (bad) sti adc or aam xlat jno jno jno aaa cmc push stc push sbb stos fs fcmove add aad stos cmp sbb fdivrs jmp aaa xchg adc fidivrl lods xchg or pop out ja out arpl dec call icebp imulb repnz stc lcall out stos jle cmc test xchg (bad) leave jmp imul (bad) ds mov sbb push cmp mov mov mov std sub or add pop push xchg stc loop mov jl or (bad) decl adc or or mov mov (bad) (bad) and rolb xlat leave fldcw xchg jle adc pop pusha loop lahf jne ret add lcall movsl lock cli cmc pop cmc aad sbb xor mov jg out leave xor xchg sarb cmp mov xor or inc repz dec lods mov lock mul ja decl orb (bad) jb dec add mov mov jne or sbb call rcrb sub mov or push cmpsl outsb emms test mov mov fisubr pop (bad) cmc (bad) cmp jle push dec cli mov cmpsl mov pop insb add and xor mov ror rol hlt dec mov jae add cmp add xor (bad) icebp cmp fimull sub adcb rep cmc dec sbb movsb hlt daa mov xchg in ja mov add cmpsb jmp inc daa fnsave push (bad) mov jno sbb inc dec int jl sbb rclb xchg icebp sub loopne dec dec mov mov or cmc jo pusha test rorb push xchg lahf or sbbb inc jae mov std mov lret push mov or mov mov mov dec out int or idiv ja or jecxz cmp testl cmp pop (bad) nop and popa jecxz repz test xor xchg jl lret mov incb cmc in stos and aas add mov jo aas inc shl test xlat aas int adc addr16 adc push rclb aad loope divl pop push cli imul (bad) insb loop lock sti push and lret inc cmp rolb push mov out mov mov ror add iret test mov or repnz mov in mov push jne das inc fnop rorb ds lock cli jae loope std fnstenv decb xchg leave gs or mov xchg adc lods inc loop out sub lahf insb sub out pop push mov int jo addr16 shrb jmp mov jmp mov ds scas mov adc (bad) es and inc fidiv (bad) cmpsb mov scas dec je adc xlat cmp rcll sar adc dec mov int3 dec pusha in (bad) mov (bad) rcrl in pop mov pop xchg nop das (bad) sar mov pop jg stos sub popf in pop mov push xor dec insl xchg sub pop repnz incb pop stos pop (bad) (bad) icebp hlt sbb push xor xlat adc and jle lock dec (bad) mov push into shrb xchg mov popl jecxz push jmp sbb inc mov fdivs or lcall loope stc xchg in lahf jmp je (bad) mov add ds ss imulb ja push lret mov cld movsb jns rcrl icebp loope testb test test repnz mov call push in mov insb outsl cld (bad) cmc add jge scas push gs cltd pop mov ja jg test adc inc loopne (bad) in btr iret aaa push loop push movsl repz jno or popa ss or jl or divl call iret xor (bad) into pushf loope pop ds push mov fwait jg adc mov repz test rorb stos jecxz pop push int test sbb inc xor jmp xor adcb fs xlat out sub adc dec jp cld jg sarb push aas pop or or mov and jnp or mov jg lret pop sub (bad) or and lahf leave fwait jo (bad) sub out cltd stc into (bad) jb or sbbb or fdivrs xor push aas sub mov add lcall ret out ljmp dec bts push pop imul repz fs incl daa in hlt inc loope add enter test fdivrp loopne in dec stos add adcl cmpsl cmc jl inc fxch aad aaa lret adc sbb xlat pop in jns or stc adc loop sbb xchg jmp adcb cmpsb xor mov cwtl and ds mov sbb cld ljmp or loope hlt ss and pop (bad) not (bad) jbe testl or mov and fnstsw loopne in xor (bad) repnz (bad) mov lea divl push or enter and sbb lods insb xor dec in sbb or lock dec sub xchg adc inc jne xchg stos je mov push jecxz rolb inc xchg and cli jb aaa into jg jle and pop mov and mov repz shrb and lods sbb mov jle dec pop dec mov scas fildll xor loope fbstp xlat popa pushf and xor add jo add loop (bad) mov fdivr mov je mov inc mov idivb xor xchg and lods sbb push rcr les mov push inc xchg imul adc push rcrb pop (bad) jae out mov mov jae (bad) lcall adc repnz inc (bad) jge pop out (bad) jge mov jg (bad) out (bad) out sub pop data16 adc xor and cltd cld mov int3 jae jno,pt cmp enter pop add aad sub ja repz mov popa push push xchg and dec sub out clc dec fldenv cmp aaa sub decl adc cmpsb notl rcrl iret sti jno je sbb push adc inc fs dec inc clc jmp cmp adc mov xor movsb dec or addr16 frstor push or test arpl mov jle sub lahf es icebp xchg mov xor movsb ja mov add xchg push sbb xchg push lret mov std mov jns and pusha pop test lea int3 nop xchg aam loope (bad) sub mov jns roll leave lods xlat mov push xlat adc xor aaa stos xor int or cmp hlt ret push and stos xor and xchg cmpb adc loope mov jecxz jns out clc mov lahf (bad) xchg xor fisttpll mov in jbe test push inc ficom adc pop jne (bad) push jmp icebp xlat xor adc mov stos (bad) lods in jmp push dec push aam les ret ret neg rcrb cs push cmpl mov fcmovnbe jmp pushf leave lock jmp mov inc or fidivrl mov fnstenv cmpl stos pop inc rcrb inc jle and inc xchg or xchg cmpsb stos xor insl in jp sbb mov lock pop cld std rcrb inc mov xor mov aam fimull in test mov push or push sbb fiadd sub repnz out inc cmpl xor sub jmp push repnz stos xchg cmp scas xchg loopne jecxz data16 les fidivrl mov xlat dec out ljmp in imul test mov testl icebp adc push mov aad ja test jecxz in rorb lahf (bad) dec cli jl fnstsw push cmc pop rol test add inc (bad) movsl mov enter cltd inc or push dec push add lret fcmovb movsb icebp test aas add jmp leave test loopne shll leave mov xchg cli ret ficompl mov sbb icebp and mov jne xorps pop aas loopne ss lret mov jle notb adc dec out sbb lock jns jl cmpsb mov dec pop mov rcr test push jecxz fistpl push push (bad) rcrb pushf mov mov jg cmpsb lock dec sub stc in iret out adc out (bad) and or cmp lcall fsubrl negb pop or pop xor mov es jl aaa xor and mov iret push test pop in sbb sbb inc fucom adc (bad) mov sub push arpl insb out fnop repnz test (bad) std rclb push cld mov lods mov mov rclb test rorb mov lret enter add mov inc mov jmp cmp or cmpl mov sbb adc out xor cmp int test push aas in xor aam inc sar test push mov mov push fwait movsb mov cltd rorb mov ja cmpsl iret mov mov in or ret (bad) jbe xor stc leave ss mov rorb xchg push (bad) inc leave xchg or mov mov push push int or (bad) mov or rcrb jg sbb iret stos int3 or mov into push xchg dec imul mov or mov fdivl add (bad) scas fmuls (bad) mov mov or adc stos jnp push adc xchg jnp dec mov mov jp stos mov cmp jmp cmp add aam (bad) mov das fild cmp fdiv int adc xchg loopne test xor jecxz negl loope mov cld jo lods add aas add rcll (bad) cmp cs jmp (bad) ds aas mov bnd adc addr16 sti jbe int3 test (bad) aaa mov lcall in setne mov mov jne push jo in lds cli nop cld sub add nop shl lock in fstl daa mov lahf sti push sbb (bad) adc or xor fs mov aaa std cmp lret in ljmp push int3 lock dec std shl adc add adc in push hlt fldt movsb push inc push icebp aas pop cmpsb ja lods xor lret loopne arpl aam adc sbb jbe push stc or jnp test sahf cmp mov mov cmpsb (bad) repz and mov incl int3 out sbb pop add mov call xchg and sbb push push out mov add mov ficomp out aad or add jns test movsb loopne (bad) pop pop pushf ja mov movsl enter icebp in mov stc les xchg jge cltd mov in mov mov mov aam sar (bad) jp xchg enter lods icebp int xlat test popf stc hlt je or pop lods das (bad) cmc push in sarl dec in movsb jmp test sub sub xchg repnz imul fnop and push test inc sti sar mov call fucompp aad xchg lods sbb and mov mov sti cmp inc mov jge (bad) push rcrl inc call mov (bad) gs push hlt sub in mov xlat mov push cmpsb (bad) cs stos or daa stc dec vcvtps2pd sub mov mov jecxz xor xchg adcl and xchg std jmp jmp mov lcall inc xor mov sbb lret jl or dec cmp (bad) add push mov jno into jecxz cmp lea push mov add fs daa pop jo mov jo mov add cmpsb jge lods adc cmpsl dec ss aam sbb mov jecxz sub lcall lock fcompl sti fistp scas insl fsin add aaa in inc orb scas cmp notl dec stc push std pop dec push in xor jb ss shrb dec push sahf data16 inc mov mov shl inc cmp stc dec adc sbb xor adc cmp mov movsb sub cli fiadd mov xchg fdiv std cld xrelease sub pop out pop cld adc inc pushf adc test mov out lods movl pop (bad) call lods fidivl fldl hlt dec ficoml mov cli je pop cmp xor and mov jl dec mov inc icebp jno sbb daa mov dec mov insb dec jg rolb jge fdivp jl sub mov aaa jecxz mov loopne sbb adc jne in ljmp icebp or into xor jb nop dec ja faddl ret jno and sbb lock sbb (bad) xor jbe into loopne push and div test mov push in in ds das lret fyl2x adc std cmc add push clc push call pop (bad) out adc xor fild adc jle or or push add adc lcall aas jl icebp cmp std out adc ret adc lds shr (bad) adc sub mov mov sbb mov test popf push loope xchg je icebp cmp (bad) (bad) into popf test mov in hlt test push dec ljmp jno mov int test sti mov mov mov cltd jg (bad) xlat js jno mov jns jo je mov icebp nop stc lret jno stc ret jno stc (bad) stc (bad) jno clc jmp call sub xchg mov das clc int arpl sub jl cmp (bad) cltd out loope (bad) lcall (bad) mov (bad) jmp jmp mov gs or in mov cmpsb jmp icebp lock stc es aad lock inc jne hlt or xchg jo xchg roll adc xchg (bad) inc sbb mov ljmp js pop sti incb push incl sub push or fmull cmp push in jle mov in adc lret jmp mov xchg dec loope or stos push (bad) into jle mov fsqrt inc mov mov je aam jns and lahf (bad) stos push ss (bad) and push out stos movsb jno js and sarb adc and rcl ffree push add mov dec stc or in ja cmp imul ret sbb jg push addr16 aam mov add mull js bound xchg mov std nop test ja fwait je leave testb mov xlat icebp aad popf outsl sbb jbe jmp cmc jle xor or inc xchg out xchg psubw mov xchg std xchg xor sub icebp (bad) mov adc hlt jecxz jo leave mov pushl mov mov pop sub cmc call mov insb add icebp and push icebp mov rolb mov xor push lahf test test and sarb fisttpl in int3 jle std mov lods cmpsb mov out les aaa jno mov jno cltd jle lds incl lret pop adc mov stc arpl jne pop adc out cwtl jecxz fucom mov in lock hlt sub sbb xor orl (bad) jae xchg cmpsb mov mov or loope (bad) call fdivl cmp cmpsb adc (bad) fbstp inc mov fbstp xchg fwait and repnz aaa rcr jne or (bad) xor cmp pop xor stc xchg test jb mov mov js xlat mul adc or sbb adc mov or leave loope in jecxz fs mov xor pop lods enter imulb aam out lods je jecxz mov pop sti out jg pop xchg mov push lds lock jbe arpl loope cli ss xor jl push ret outsb push ljmp pusha cmpsl mov mov lock xor shrb cmpsl bnd mov push fidiv mov jo int3 icebp mov push lods or cmp or xor neg leave push lret fnop repnz call fidivr test or (bad) sub repnz cmp js add lahf addr16 enter incb in push mov les xor imul xchg pop fdivl sti ljmp clc fistpl clc cmp pop mov scas hlt lods std test jle insl in xchg test pop jmp push ja sti hlt sbb repnz mov add scas enter xchg insb mov sub test stc pop (bad) jge dec dec imul (bad) lret xchg push out xor test inc data16 clc popa mov vcvtsd2si lock xor jns jbe,pn adc test shrb push push mov push dec push push (bad) add mov fdivrs cmp dec push mov (bad) and test test ret clc lods add into xor mov adc and jle pop lock jno repnz repz push inc dec jg adc lods inc push pop xchg adc dec ds jns fwait mul stc xor pushf imull pop mov jno lcall cmp inc fcmovb loop hlt sti push decb imul push lcall mov mov out (bad) out cmpsl shrw add loope pop lds cwtl inc xchg call adc jge add insb xor je xor pop dec mov jp xchg haddps fstps or mov outsl out aam jge mov mov aaa jle cltd dec in fwait test ljmp jl xchg mov sti cmp stc mov pop fildll aas out push outsl xchg leave lcall jns aaa stc aas stos pusha cmc movsl iret cmc or cmp pop dec push fdivp or or in fisttpll (bad) out xor mov test mov or aaa push movl jle stc (bad) push inc cmp jno aaa push sahf sub es imul fsub cmp push adc aad movsl in pop test fmull clc test sbb xchg mov in cli push or adc insb je pop xor lcall (bad) xchg je pop movsb and sub adc lods (bad) push mov fildll xchg and mov shl aaa jno sahf fisttpl sbb stos fistpl xchg inc or mov xlat jae outsl (bad) loop cld cmp mov mov lock or insb std out add jne clc jg daa sub mov in sbb loopnew add dec jo cmc repz icebp std add lret mov testl add cmp sarb jno leave mov jae ljmp mov stos (bad) in hlt xchg mov in mov push cld hlt jge dec out daa arpl jne sbb fcmove add add mov dec in std fnstcw (bad) cli movl push jecxz dec leave inc and gs jmp adc mov mov lea test in inc pushf mov fidivr adc out sub cmpsb fsubr fmull mov sbb (bad) mov xor xchg out hlt loopne xlat shl mov mov mov jg hlt mov jnp icebp out mov stos js repnz movsl lock sbb mov sub inc pop jg std jg fs jl sti repnz pop loopne popf call stc (bad) nopl std (bad) xor pop (bad) stc push mov enter dec jg int3 imul mov mov sub mov cmp mov (bad) xchg orl add add jae clc daa test push or xchg fsubrl dec ret outsl aas scas out sbb mov cli mov (bad) sarl es dec jle test fldcw or push jnp adc insb xor pop outsl insb xor mov dec movsl (bad) jbe or (bad) mov cwtl sub add int mov test add or inc push jns,pn or xor mov adc sbb adc out adc leave jno add insb sub mov and adc add adc sbb in adc xchg test cmpsl lock xor shlb sub aam or mov jo test cld stc cmp rol push lock in xlat xchg idivl arpl xchg movsb adc jae (bad) mov push test in test iret push dec js xor dec insl adc mov dec mov jp xor leave fldcw fisub adc aas mov mov dec into icebp mov in jnp or jle test cmp mov sub xlat mov hlt je adc lods insl lock loope nop push inc arpl repz std pop jb add (bad) scas xchg jle sub mov leave loope test xchg mov leave dec imul mov addl jecxz addr16 das dec pushl mov out mov xchg xor ret clc fwait xchg pop xchg cmpsb icebp xor in icebp fwait inc push fcomps icebp push out rol adc and pop fs cmp mov bnd sub xor jmp data16 lret aam sbb rcrb outsl push pop cmpsb jmp fmull inc or inc stos push mov push push jbe cmc cmpsb inc adc rolb (bad) inc fnstenv jo sub add xchg ficom scas jo xchg ja xor jge loope std add jle hlt xor lahf es andl imul stc jge std icebp jns and cmp mov dec dec std pop (bad) fcmove push adc int3 (bad) icebp or jno jmp jge lock inc loope xchg fadd (bad) je adc movsb cs push pop hlt test jl incb dec cmp in add clc fnstcw ss aam jo jmp call ret into out xor add cmc xchg leave out bswap scas lds flds loopne adc push (bad) inc xchg pop aam or hlt push insl loop push pop out pop rdtsc cmp mov clc inc push jno jl push mov icebp lods cltd ja mov aad xchg test sarb in je mov xchg stc mov xlat jbe mov mov jb je mov mov mov aas bound arpl pushf mov dec (bad) (bad) mov int3 (bad) popa mov xlat rcrl (bad) stos mov scas in inc loope jo jmp xor ret inc or jae imul xor fldenv pop icebp pop push loope push loop rorb ror in mov fcompl (bad) jno fst cmp (bad) std fild fist mov mov int3 mov loop out shlb clc jnp lcall push cmpl xchg mov je stos lds or cmc gs add movsl fwait daa pushl adc ficom into dec (bad) sbb sbb add mov lahf out mov sbb (bad) jbe mov jno jno xchg add xchg out xlat or ficomp rcrb loopne mov xlat jbe jno adc adc jo imul movsl es inc je (bad) xor add pop idiv dec jno fwait cmpsb pop push loop cmp xchg sub jne (bad) je sbb xchg jae or fdivr test push popa test cld push outsb call dec imul jecxz add imul imul jbe out adc sti out in sahf mov enter dec dec in xchg popa or jl mov dec mov mov mov inc jnp and cltd xor xor mov xchg mov rorl cmpl outsl add lret in push movsl mov lahf aam aaa jle sbb rcrb dec pop int3 mov and cmpsb jp mov jno dec int3 cmpsl push xchg in lock cmpsl roll daa push mov jne cmp mov repnz aad js iret fildll cmpl movsl xorl outsb mov lock test test jno cmpl mov or sbb add pusha ja mov xchg icebp and mov dec out addr16 test enter add xor loopne in fucom in jge (bad) clc int or std mov mov (bad) mov and int3 fs xor xor push ficoml mov xchg aad out sbb (bad) xchg std or or pusha xor test adc rcrb xorl int3 dec (bad) lods in mov cmc stc jle push pop jmp jmp lds std loope cmp inc loopne xor adc aam and rolb fidivrl adc (bad) pop aam xchg in icebp stos lahf aam enter sub es sbb popf (bad) pop fsub mov ja pop xchg div mov cmp out imul xchg xor dec icebp call cmp mov call dec enter les jge shll pop cld xor insl nop or adc mov clc lea pop mov mov mov xchg cmp pop dec fs sub xor aas in icebp jecxz lret cmpsb pushf jns ret lock pop mov lock mov out mov sbb fscale insl in out jbe mov push inc mov mov lret stc xor inc fld jbe fnstsw iret mov push out jnp sti mov and repnz dec aam bswap idivl adc stc or std jb jo inc adc jge sbb mov mov cmpb pusha jge fwait cmpsl xor icebp cld (bad) lea jne mov cmp ja cmpsb jg mov inc pop dec mov (bad) loop mov xchg ds jns cli scas ja movsb adc pop fidivrl clc mov mov arpl mov jg mov xor mov faddl notl neg xor mov xchg mov cli bound mov mov ret jg int call out clc (bad) jns stc jl fisubr add or cmc repz add add imul daa add in pop push pusha fidivl mov std mov cmc test push dec add out mov negb mov mov add movb xor (bad) mov push cmpl xchg test jne add adc (bad) xor icebp in sti out divb ficompl sti mov enter dec pop daa or push cmc test int3 sub xor mov pop rcr mov adc dec push mov loope dec sub test fidivl push cli scas aam lret mov xor and gs adc lods or or aad push cpuid (bad) mov mov fs pusha test jns mov fcoml push js cmpsb (bad) mov inc stos jmp cs fdivl or rorl mov lods mov imul mov push lods sbb mov pop dec and or stos or mov stos mov ljmp stos enter ss pop jno mov aaa jnp xor jo add cs xchg (bad) lock mov (bad) mov stc mov fcmovbe movsb xor lods aad jo loope repz push fild xchg mov outsb bound cmpsl mov lahf pop cmc jmp and (bad) dec enter jle (bad) xchg out sub adc mov mov outsb fwait imul sbb loop fstps int js ljmp adc test (bad) sti adc test frstor sub pushf mov xchg sub or or inc mov stc xchg enter xlat std jl repz insb xchg jo xrelease (bad) xor jmp sbb dec cmpsl ffreep adc idivl pusha dec xchg mov inc (bad) jo icebp cld inc dec fiaddl dec sbb lret repnz imul (bad) or pushf dec jns popf fcomi sbb mov mov cltd sbb repnz loopne test sub aad movsb pop div add jbe sti pop and mov cmp cmpsl enter scas xchg xor int3 ljmp enter std xor add movsl or in test (bad) dec out add jo push (bad) jle mov std leave add lahf cmc inc xchg out xor nop push cld loopne call mov es sti push jne dec imul sub (bad) cld repnz sti cmc inc dec and hlt mov and mov out dec and sub push push rcl jle stos pop fldcw icebp dec aad in add adc xchg popa sbb leave adc push cld out xor xor addr16 (bad) cli jns and loope jmp ljmp jae adc mov push arpl inc adc mov or lret mov mov in and (bad) mov inc rorl xor stc dec add adc ljmp arpl (bad) sti mov xchg cmc scas faddl add mov add xlat pop inc xor hlt loopne lods fistl xor mov xchg js xchg lahf out mov push fsub jnp adcb out push fsubrl call ja shrb repz mov fsubrl lret cli add andl push jecxz mull sub int3 and xlat loopne xchg mov adc lret call mov fs and jecxz aad (bad) daa push movsl mov xor testb rol jmp into xor jp cmp mov xchg add imul scas std psrlq ja mov or push or cli pop (bad) les mov jno jne and push adc push and sub not and lahf jp push fidivl dec add mov xchg lods adc es pop cmc and test loopne push xchg jo (bad) repnz lret add pop xor jo and push (bad) mov rorb and das jecxz mov inc enter cmc mov sub jo xchg mov push into lock jecxz push adc mov xorb stos (bad) cmc jmp xor mov aas cli jno mov fdivl sbb fcoml add jb test xchg pop pop das (bad) xchg fmull xlat pusha in sub rcl push fcomp je int rcrl mov mov pop jo add push fimul push repnz fidivrl fisubr and or or jae push pop add in or lea add xchg sbb and sbb mov repz xor sahf add insb xor cld into imul rcll pop xchg in add (bad) mov js jnp mov subl pop push jmp or stos enter std ja jl popa cmc or push add int3 sbb pop push nop shl adc xor push scas or leave mov fsubs sbb cmp les xorl iret adc xchg add push xor icebp mov xchg xchg fldl nop icebp sbb cmc adc mov popa xchg test mov sbb loope push std fcom adc jns add mov xchg in jns adc loop stos insb mov arpl test pushl aad insl enter test mov ret loopne lock or sub pop cmp mov in mov add test jno (bad) mov out ficomp pop sbb jno mul mov xor inc push mov mov lcall rolb pop sub jbe sbb cltd cld in push aad pop jle fiaddl push mov stos cmp enter adc xor out cli stc dec mov enter dec xchg ss fisttpll js cmp (bad) xor pop inc fisubl jns cmp mov in movsb cs aad jmp pop lock jmp mov lock mov xor subl xchg rorb add cltd jl mov push jmp test sub cltd cmp add mov sbb lahf orb sub and mov xchg dec mov (bad) push push mov lock jle sbb cmp mov jecxz mov in adc adc adc fnsave mov pop ljmp fwait dec (bad) sub dec push lahf sbb jno dec popa mov in jbe std mov leave fisub lea iret leave movsb and adc fisubrl cmpsb dec adc mov mov mov inc sar fs mov dec out push or dec inc ss mov cmp xor inc xchg scas out mov ljmp int (bad) into iret or (bad) pop shrl test out xchg stc jecxz add ljmp div cmp stos outsb jbe ret mov jns out jmp sub or (bad) ljmp jp sahf sub push xchg jle sbb cmp mov dec push mov shlb in stos (bad) xor imul in mov mov in cmc push and mov popa push mov xchg gs lock fwait inc xlat adc lods (bad) push jmp cmpsl movsl std xor sub inc mov push rol test cld or xor push movsl xchg nop jo rdmsr inc mov into xor out lahf ret je dec es nop pop adc clc ror ljmp mov call xor xor fidivrl sbb inc sbb mov test imul stc mov push cwtl ss lock rorl sti int3 jns push enter js or sbb lret add (bad) pop out stos xchg dec add ss xor add mov lods lods stc mov xlat mov cmc adc xor jbe (bad) and mov fisttpll cmc cmpsb leave or add ds cmp add jns scas out adc test (bad) jne fwait xchg pop shrb fdivrs shl fucomip lahf cli mov outsb mov push pop jne jno push fs cmp scas scas hlt in jo lock dec imul insl adc fnstcw test fistp ljmp cmc fildl jns icebp push into daa mov cltd jecxz xchg xchg mov pop repz push jmp jns test mov hlt leave fldl mov (bad) or dec mov lds lods inc cmpsl stc mov sbb fldcw mov (bad) mov sahf dec les inc xlat adc jne int3 inc clc scas and and add cs mov sti xlat leave std jecxz xchg (bad) cmpsb not stc xchg or jl mov das leave push sti xlat jno xorb push pop fcomp mov sbb fcmovne mov xor sbb dec mov xor ret loope les xchg lds scas dec or xlat dec mov or sar popl ret xchg fnstenv cld adc dec aam adc (bad) lock push and bound adc jne test xlat jle sbb loope dec lea adc stos test mov mov cltd icebp ds test es lock push jecxz popf inc inc sahf shlb movsb (bad) ljmp cmp xor scas bound mov and ret fisub jp mov mov and mov dec add (bad) rclb jns mov mov rolb xorl mov xor mov and jmp clc adc xchg push jl jno pushf jo movsl or std xor xor hlt mov push fistl xor jbe in mov mov in lret mov cmpsb pop mov aaa mov or repz (bad) adc xor inc enter jecxz repz jg cmc jle nop scas inc inc dec push mov pusha fdivrl cmp mov inc lret mov xchg mov ss sub mov jl jbe mov popf cli mov out fisubl jo push jne sbb mov aam mov daa xchg push shlb xchg in xchg dec or mov mov jle mov inc lds aam pop ja inc mov repnz lahf repz paddd fisub jecxz lahf cmc fldl2e (bad) lahf stc rclb fldpi call roll in icebp jle xchg push xor (bad) or xor aam dec cmpb pop xor jmp pop inc and or adc push xor cmp jbe rolb fnstsw cmp mov dec push cmc imulb xchg adc mov hlt jle mov es xor je hlt rolb icebp aam sbb js popf mov les stc mov inc and mov cmpl divb std mov xchg jle inc (bad) mov cltd shlb dec sbb mov mov fmuls sbb mov xor insl push xchg mov mov je lds jae xor ja or gs testl test rorb xlat or jp mov push lock into xor mov scas pushl fs mov mov aas jne icebp aaa mov hlt imul push fdivrl lds int3 jne movsb mov icebp xchg (bad) mov jnp lret test in adcl mov mov lds push int xor ja xchg call add fwait mov xlat jnp lea enter push lock dec and leave jo test dec rcll icebp xlat (bad) jo adc loope jae ficomp or push lea jg dec aad lret xchg jg imul icebp test pop lea dec lea addr16 out mov adc test fcom mov xchg jp xor std lds cld xor test in cld and movsl sbb clc jbe mov mov xor xor cmp mov pop and dec pop and fs jmp insb and out les xchg aam repz std xchg jmp adc pop jle cmp xor fmull mov test aam and jmp sarl addl jno stos clc in mov mov gs and pop sbb xor mov into push js adc xchg push ret jg xor (bad) dec fdivrl pop jmp int3 and std mov insl mov xor cmpsb pop pop mov jns mov imul mov in leave add mov leave stos popf or out jno mov jne push pop jge repz adc mov cld dec cld pop (bad) xchg stc shl and adc (bad) fldcw rcrb cmpl xor push add jne jl mov and test push add shr out test jno test call jns (bad) (bad) hlt mov aas jmp or movb in ds insb in push scas hlt mov mov test push cmpsl rcrb aas insl sbbl test add add mov adc insl sub cs pop in push mov lods in mov mov incw inc or and inc adcb aam les or daa xchg loopne (bad) sub mov fs push inc test cltd mov clc ret pop push cs repnz mov jl or es hlt repz lret mov leave fs daa mov in or and pop push mov lock sub sub lock mov sub out cltd stc pop hlt mov adc sbb jmp fidivr ret mov mov repz lahf lcall setbe stos pop xchg mov mov push mov jo rcll pop fisubrl fsubs mul ja popf cmp xor sub das xlat std test test test aas ret test xchg fidivr adc push jle int3 loopne in adc imul pop jecxz sub xchg loop push xor add loop jge cmp or mov mov js add mov mov sbb jbe cltd sbb pop mov insl out insl dec aad or cmp sub sub or int popf xchg bound jmp or popa fsubl xor fs jae adc je mov test adc jae addl mov adc adc popa and xchg jg lahf add or popf or push lock sbb in xchg xor or push iret push pop jmp add mulb jl jmp pop lahf pop push leave pop aad cmp lcall mov sub jbe add xor adc addl fcmovnb jle jg clc aaa jo xchg mov fwait sbb push lcall pop mov sub push sub mov jecxz inc push aaa movsb loope inc popa and mov pop aas mov out icebp leave cltd add add out pop cli int3 mov mov or mov add xor test dec adc and add cmp mov inc xor jo movsb jle and or nop aad outsl xor jb cmpsl (bad) mov mov testl adc jnp aam xor mov clc ja cvtps2pd (bad) lock ds fnsave sbb lods ret test dec xor in (bad) mov adc imul gs jmp test daa gs xchg aas inc xchg je stc test mov jmp rolb in rclb push pusha outsl loope lea mov mov (bad) sub fs lret test (bad) ss out mov sbb cld dec sbb outsb cmpsb lret xor rcl pop mov jmp pop into add call mov sarl push loope add cli out pop lret (bad) jl adc cmc (bad) cmp enter mov jecxz ss fcompl or aad bound xlat bound stos icebp das gs daa lcall inc inc cmp (bad) xor mov std inc gs adc fidivr leave lock adc popa test add cli mov sub fidivrl rcll test mov cmp js dec je mov sub or test mov enter dec in (bad) faddl repz adc pushf sti popa mov cmp sub faddl das in mov jecxz pop mov jl jp xchg lea mov lods xor mov fsubrl jnp aas in js mov adc fisttpll jne scas add aam add test mov dec push xchg insb ret mov adc jne repz add pop arpl jg loop je jo popf test or sbb cli inc test lods jge loop cmp inc or stos insb push int3 adc cmc jg in mov fsave loope loop adc push aam xor in mov cmp mov mov fcmovb lods movsl out mov repz mov mov (bad) scas loopne in dec mov xchg sar movb add fcoms push jmp mov jne dec cmp cmp mov fstpt push test push jae mov stc mov xchg adc fidivr or jl mov loop lds mov and loope pushf mov test fucom popa lods xlat xchg test cmpsl cli lcall or or xchg test incl repnz or or fbld add push std fistpll icebp mov paddb xchg daa mov dec (bad) or fstpt flds in push add movsl sahf jo leave out mov mov inc push jb test setb lret daa (bad) mov ds mov push fwait test add in in mov fs (bad) nop mov mov in addl insb pushl jg xchg aas aaa xor mov mov insl (bad) mov stc stos icebp jge out leave cmc lahf std xchg mov sub insl jnp hlt out cld xchg mov push pusha repz mov pop repz push decl inc lret call scas jae repz jae adc jbe aaa fdivrl insb fs xor and in fiadd sub push mov imul sarl pop inc loop push sahf dec je jecxz fs jg push movsl je cmc (bad) sbb and pop call fimull mov gs xor sub mov inc stc push jb test mov and or iret push fild lahf dec sbb popa pop cmp sti scas xlat insb jge jne mov mov (bad) xlat fstps xchg dec jg popf (bad) bnd (bad) mov arpl pop aad add and jnp arpl or call icebp mov fnop les mov xchg add mov mov daa out (bad) mov push adc dec add cwtl cwtl fisubrl stc in loop sbb add rcr gs xchg (bad) push popf movb ljmp lods test mov push and fcoml je repnz cwtl outsb aaa adc mov xor mov les sahf jns sbb repz xor pop lret (bad) icebp adc xchg xor cmpsb fs insl sub mov popf insb jle stos push push je mov lock out jg lret neg ja and mov test out lock (bad) cld push stc jmp adc insb mov adc mov es stc dec add dec fnstsw add test je push sub fucomp sbb idiv scas jae jne popa cmp lcall ret push fdivrl repnz add jle pop mov mul stc adc jg pop scas mov adc loopne add jecxz leave imulb mov mov push xor out (bad) dec or enter scas arpl xlat sarl push jo adc hlt loop sti mov fadds xchg sub in fxch mov lods test inc adc jmp shlb push mov pop pushf mov rorl test popa push divl jno fsub push stc fs jg cmp jp fnsave jae psllq cmp lods leavew xor daa push dec imul icebp loope mov cmp mov jb (bad) ss in dec xor out push and xor cli or ret jge out push add (bad) xor xchg adc lret fistpl cld out jge or push loopne and add pushf and aaa jmp pusha add add push addl mov movsl jmp test xchg sbb repz lcall ret scas push rclb test jae lahf fldcw popf jg mov lret test or aaa (bad) jno mov jle rolb xchg cmp mov into jns mov faddp into cwtl shl adc stc cmp lahf adc ds sbb xchg mov in test add out hlt fisubl addl push data16 fwait sub ficompl movsb xor xor lods (bad) lock aas movsl and add aad lcall jl adc jno je push add xor lea bound dec sar movsl cmp push movsl rorl lret jl cmpsb mov adc pop pop shll jl idivl pusha negb out mov ret icebp (bad) or ret call call mov daa cmp in xor mov mov das out and pop arpl jae aad pop mov (bad) call dec aad lret mov dec mov fucomip aam or mov mov push sbb push or cmp jno sbb mov test add ja push movsl (bad) jle call lahf dec xor push mov test mov stc int mov (bad) push stc xchg mov mov mov enter xor xchg int aam stos in xchg addb mov ss pop lock fnsave inc fmul fildll ret es mov aas sub inc jb fwait xor test insb adc pop jecxz xor ret mov jo cmp jno mov ja mov push outsl cwtl xor and sarl stc stc cmp std mov in sbb jo test or add insb in dec imul stc xchg adc lock sbb xor jno or movsb out pop adc arpl xchg cs cmpsl xlat dec cmc inc scas out popf lahf out adc fisttpll pushf bnd xor dec dec cmc mov sbb or jae int3 mov movsb in sub lret mov cmp inc jg bsf dec xlat cmp mov fbld stc adc dec push sub xchg cmp pop mov cwtl ljmp repz mov leave push arpl adcl cmc mov ja jle fidivr mov add and mov icebp pop dec xchg dec gs bound stc aam and push ja cmc fst sub xchg stc jmp xchg jno lods mov or orb lahf add (bad) icebp and mov dec mov sbb jg std mov jge icebp cli pusha xchg shr sbb push mov xchg cmpsb mov sti icebp stc jno lock adc cmp sti lea std jecxz daa jne je mov cli mov test aam (bad) (bad) jcxz mov lds aam xsavec ss jno in jmp aad lahf in addr16 repnz or xor fcomps mov or decb nop and je mov adc lahf out (bad) (bad) hlt (bad) daa inc cli mov int3 jecxz (bad) push out (bad) loopne icebp adc or mov xorb adc mov ljmp leave enter xor mov cmp cmp push js int3 and push cmpsl sub sbb popf jmp mov jae lock sbb or fdivrl fiadd fs push jle std jae scas mov jmp hlt fdiv stos xchg subb in cmp dec jbe scas test xlat std mov out (bad) leave jmp rolb mov test movsl int3 cwtl loope mov fimul adc enter xor cmc dec xor cmpsb loopne pop out vandpd push fcmove ljmp add andl dec shrl mov jmp push add punpckhwd sbb xlat sbb in pop (bad) je inc adc jne div dec or adc std imul dec push sahf ret mul test mov jl mov leave mov dec out pop xlat lock mov jmp decb mov loope fdivr mov leave call cmpsl jl cmp cmp ds stc or sub (bad) pop pop loope adc rcrb mov mov or push or ja ds xor adc xlat test xchg fwait sbb sti and mov fnstcw in push jae pusha mov pop dec mov test adc xchg or add je fmul jecxz lock or (bad) mov jmp push bound test enter shlb adcl push aam (bad) jne jl ficoml adc popa lahf mov int3 test xchg lds mov inc push jmp jmp push ljmp imul lahf repnz mov or stc jecxz bnd and adc jno icebp daa leave inc push (bad) in xchg mov mov cmpsl jg xchg aam je icebp and hlt in movsb (bad) jmp mov adc add cmc sbb jbe repnz cmpsl (bad) or in lahf ds jno xchg jmp outsl popl jae xlat es jnp aas lds stos scas jns std push jbe test mov repz out outsl fcomp jmp pop les ret lahf inc cmpsl in mov inc pop scas pop cmp add loop push js rclb cltd xchg lahf rcll mov jge scas pop dec dec mov ljmp cltd repnz push aas in test ss leave jl call push out pop shr test repz into jae pop xor stos bound (bad) loop mov cmc repz xchg ljmp stos insl jmp jne mov cmp jg loop (bad) push das mov shld and lock add xor subb xchg pop aam pop repz mov (bad) loopne cltd repnz or test int lds out cmp sbb jl cmp (bad) xlat dec jbe test mov lock in jno mov pop xchg jp mov (bad) mov cmc add inc repz add mov cmp loope xchg pop repz mul adc sub sbb xlat xor stos subl jp xlat rorb cwtl in jns loope rcll in xchg aaa (bad) jnp pop cmc cmpsb jle xor xchg xlat xor fdivrl scas sbb out mov cmp jmp xor int adc rcrl loop adc xlat bound rcll cmpsl sarb inc or stos icebp dec pop inc fldenv dec pop or sbb cmp adc scas add ret add leave out sti push xchg add jb loope test je push aam (bad) loop (bad) or mov out pop lret sbb push repz dec cld jle bound adc mov xchg idiv jns stos leave stos scas inc add shlb and pop loopne pop xchg pop mov jbe loope ret sbb adc int3 inc mov jbe lahf leave js stos jo sub add and ja sub jno idiv jl out fwait ja xchg std into in xchg push (bad) hlt ja push or in xor ljmp jno fcmovbe jle fsts jl in mov enter xchg or jne sti int mov xchg cmp sub in dec fildll testl dec cmc pusha lock fistp fbld and in jl (bad) fdiv arpl test ljmp (bad) cld jmp and cmp scas daa sbb icebp xchg lea lcall pop mov scas xchg lock icebp lods sbb (bad) mov ret icebp test or repz fstl ljmp repz ja int3 xorl mov leave inc jae jns mov or loope cmpsl cmc mov push mov mov les out mov cwtl xor jo sub add mov add aas out add daa gs arpl adc lret mov or insl (bad) fidiv call test negb gs gs cmpsl adc lods (bad) xor adc push idiv jge dec in add xchg stos int insb mov out add orl ret jo jb call pop or push xor jl add mov shrb sahf (bad) ja mov (bad) jo test fistpll push loop in jg test cwtl pop sbb push out aaa jmp inc push dec lock aaa jl push mov sahf out in mov in add mov inc mov push fmull cli (bad) pop out idiv xor std dec test push std test push js int loop xor and movsl push mov in pushf jmp mov add daa ja push stc popa aas bound test syscall movsl mov push xor fidivrl and icebp into adcl mov sbbl ss mov mov mov mov jb sub incb mov xchg (bad) std lock xchg mov cmpsl test and pushf inc adc repz xchg fsubl jne js sub dec push jbe test adcb lret (bad) adc pop cmp (bad) cmc add mov dec and xor dec (bad) repnz test jne mov mov js xchg fist ja adc and pmaddwd das sub std fidivr pop popa ret add adc jbe jle adc idiv push pop rolb sar pop popa ss ss cmc inc pop fsubrl mov jns inc insb sbb add ja ljmp xor dec adc mov pop jns ss fldt cmp cmp jo out aad mov js stos or cmp lock shl das jns insl mov cmp cmp pop loopne xlat lock insl cmp mov loopne mov test mov js xlat dec add (bad) loopne cld inc js xor jns shlb imul push push mov sub in dec mov xor xchg outsl test popf inc sub mov out gs mov mov or in xor inc adc ja pop xor je adc push ffreep repz mov stc pop repz pop sbb sub pop out sbb lods push aam repz loopne neg fnstcw aad xor add sub push jno lret or jle and decb cmp aam mov aaa sbb push fsts in inc add enter das lret dec mov loopne popa jne imul adc xor jge adc mov pop decb movsl dec out jmp mov mov mov pop xchg lods test mov mov ljmp jle js push int3 bound mov (bad) adc jg (bad) aam lea nop jle movsb aad imulb xchg sub divb jbe shrl and (bad) movsb add test jns push mov adc out cs in jle test fidivr idiv loopne leave fmul xor push or mov sbb jle add icebp addr16 jmp (bad) jo not cltd inc jne xor sbb or mov aad pop push adc jae ja lods add cltd lahf cmpsb jl in mov and inc mov repnz sub cmc dec jno pushl fnstcw dec sbb int rolb jge mov jae cltd cmp movsl imul cld enter jmp pop movsl sar or jg push test nop jbe add popa div test cli inc (bad) leave ss addr16 orl stos mov (bad) (bad) jo sub sarl rorb pop pop cltd lock into out aam jno xchg xlat movsb mov rcrb push jmp gs jno fdivl rcrb push add adc dec enter out aad out movsl cli (bad) mov div out shrb mov lods aas dec lret push jne bound sarb movb fdivp and into movl mov mov sbb jno stc icebp mov push out xchg jp out cltd sarl xor mov icebp mov mul hlt rorl fmuls xor test ja ficom clc dec and clc popf in aam inc adc fidivr xor jo in xchg dec jne xlat (bad) stos js mov pop out imulb fidivr dec clc jbe out or or mov (bad) mov repz mov rorb das stc inc pop icebp dec call loop test adc fistp fnstsw mov cli and add jle fstps out pusha add jne mov pop push repz ss xchg movsb cld inc xor push jle sti mov xchg jns adcl mulb test daa mov inc cmpsl xor or sub lcall (bad) testb mov push adc popa aam jle adc cli mov movsl jge iret sbb pop rcll xchg mov mov aas in mov int test shr popf out aad fsubrl lea mov push fnstcw mov fstpt pusha mov shr (bad) call adc test stc in jge loop mov jle jo cmp fiadd out mov dec sbb ja out call shrb push mov mov fwait dec les adc push scas iret and stos fistl cwtl xor pushf dec jecxz out inc xchg sbb lods movsl push xor xor icebp xchg (bad) xor fdivrs mov stos rorl fs js xchg popf xchg lods add int3 push jb,pn jo icebp vphaddbd jno dec mov cmpsl aaa rorb mov int fisubl jl cmc xchg mov mov loope pop xor fsubrl cmp (bad) leave es (bad) cli cmc mov sub fistp cmp xchg mov in jo lods cmpsl xchg movsl mov cld push adc cmp lcall or sub xlat popa lock test mov aam scas xor shl in fdivrl repz enter sbb push repz cs (bad) in xchg outsl dec xor jmp fildll mov mov pop dec shr cmc mov pushf lahf jl mov loop pop hlt iret adc dec fisttpll push repnz (bad) mov (bad) std leave xor or xchg loop clc mov les mov (bad) movsb repz bnd stos add pop fisubl cmpsb pop ficompl adc pop das jbe push mov (bad) or sub dec loopne ret mov stos push popf mov jecxz ret inc clc or rorl xchg fs repz dec sbb loop testl pop or lock jg and hlt hlt push cltd test loope test sbb xchg repz (bad) lret sbb icebp sarl insl sub out dec jne test sbb sbb stos push out sub mov adc out or into repnz not ja fisubl nop jmpw mov or xor icebp test push std cmc in repnz xor stc xor or adc in out addl lock jbe faddl xor aam mov or loopne jne lcall cmpsl into push lea (bad) std ljmp in and rolb imul jno hlt adc gs aas cmp jg jle xchg mov int3 call mov (bad) mov (bad) repz jle pop and sub lods (bad) std test jg inc aad dec cmp stos or mov cmc mov mov cmp dec jbe or pop movsl mov (bad) mov test cmpsl mov call fildl mov fistpl mov sub ret stc mov ja or pop cmc int3 mov cld and lahf or adc or sbb cli jo sti shll mov movsl sub mov idivb add cmc mov aas incb cmpsb ljmp xchg pop in popf or add divb (bad) mov mov cs xor sarl (bad) fdivr mov lret rcl leave (bad) jmp aam test (bad) in xor cltd sarb inc loop repz insl imulb mov addl loop adc or in add jb adc ret in add lret (bad) or cmc push notb jmp sbb cs fnstsw pop lock orl jns loopne int xchg pop dec out scas sbb xor (bad) adc test incb lds lcall push add mov inc scas push sbb std inc inc data16 push lock xor in jmp mov or icebp inc jnp es cmc add dec ret into push loopne bound cmc mov fistpl jp push loop test mov mov out mov test ror adc sbb xor cltd cmp mov mov cmp mov cmp jg or xor lock mov xor or add mov ss xchg mov mov push out jmp inc in cli mov adc push mov cmpl leave jne icebp fdivs mov movsl ss cld popa (bad) (bad) lock out sti mov sti roll (bad) lods out in sub outsl mov ficom and rcrb scas out xor (bad) negb movsb inc dec cmpsl int3 lds ja mov insb xchg xor pop js xchg xchg jmp sbb or pop lret adc icebp mov lods test dec mov vpaddd xchg jbe or xor sbb and clc out jo push in dec adc movups je or sbb (bad) mov pop (bad) hlt cld dec enter pop add mov jne jbe imull dec leave add movsb lods jo sarl and rcll add mov mov jmp mov push mov iretw adc fdivl mov shr mov (bad) lock dec js mov xlat loopne and mov orl xor adc adc imul or insb outsb adc add loop fsts mov mov dec inc aam psraw subl cwtl lahf jge mov mov (bad) mov sub sbb (bad) (bad) sub aas inc jb movsl in aam mov sub cmpsb mov push and add pop nop mov test in fwait inc gs fs cmc mov out (bad) cmp cmc xchg adc insl cli pop mov or cmp dec and out lahf icebp or push fcomi (bad) jbe loope xor xor mov daa push inc xor adc loop mov pop push je lods pop aas in lock adc mov aas les pop push mov aad loope pop sub int test xchg mov ss sarl fidivr test lahf repz mov adc in int3 dec jge lcall ds cmpsb push (bad) js addr16 mov adc pop and push cmc adc stc inc pop xchg mov scas cld testb repz jno adc fwait rcl (bad) fcmove (bad) xor lahf pop inc je scas pop subl roll sbb out push adc arpl cli mov (bad) movsb std (bad) dec cmpsb bound mov mov outsl stc test out loopne add dec fxch inc cmp mov call push int push hlt daa test push add divl into jns mov cltd mov and sbb push repz inc out out insb ss mov mov push jmp popa push cmc xor mov mov fcmovbe adc adc repnz push mov cmp call jmp js adc lods test js ror sahf shr xchg scas test mov jle sbb mov sbb xchg std cmp mov out push mov lods movsb mov or pop aaa aaa enter cmpsl jbe cli ds cmpsb lock sub adc pop adc push movsl sub cmp adc lcall push mov mov out dec gs jg scas and cwtl arpl in (bad) jbe ja enter jns in jne mull push les xor test pop (bad) mov mov mov sbb xchg xor adc jl scas cli lock ret je xchg movsl dec fst mov lret or or mov push pop and into gs stc test mov mov adc movb into sub shl ss icebp stc flds cltd gs sub mov cmp leave push pop mov and (bad) xor pop add mov in lcall nop add std ja or xlat out test mov insb push dec fnstsw stos cmpb inc aad mov dec jne mov mov mov adc jmp adc jg pop lock test fisubl dec mov lcall cmc pop ret imul inc clc cmp pmuludq (bad) mov mov mov test mov sub sub mov mov imul rcr in int3 xor mov mov cmc fwait int3 js jne stc stos int3 push je mov ja hlt imul jae fcmovne mov jno leave jmp inc idivl jl sti int3 inc mov mov jnp addl jno mov mull bnd mov scas pop fistpl mov ret arpl pop stos aam movsl adc std fimull ds out add dec mov dec bound mov add push test mov xchg mov in ja adc stc (bad) cmp xor je sbb cld push inc sub repnz stc mov aaa (bad) out cltd aas or aad add inc dec mov je or mov xor adc mov xchg and xchg fmull or aam shrl inc inc inc stos mov jns addr16 jns aad xchg xor cmp adc rorb jle jne push mov mov aaa mov test es call sahf mov stos add mov sbb jbe popw xlat repz mov or jne cmc inc adc dec jns cmp aas out rcrl jns jecxz cmp loope int adc sbb cli icebp mov pop cmp push test adc push loopne das test adc test rol stc mov xchg push es int push dec lds xor adc inc push push dec mov push jns int3 mov dec xor jno push xchg clc out cmc jl in cmp loope in test cmc das or int or and fdivrl (bad) cmpsb jecxz out pop test jp stos sub addl pop int xlat or leave lods xchg fdivl mov jnp xchg pushf jo jb xchg int3 cmp adc aad scas mov cs jmp sbb push cmp inc cmpsl lock enter cld mulb test adc xchg test jp sub loope inc inc sub shlb sub push mov dec (bad) add dec test mov mov adc test loop jle lds xor (bad) xchg pushf (bad) testl inc jnp shrl add je repz pop andb push fcom clc fxch push std mov mov ds out cpuid pop scas call in jmp inc mov test push inc pop pop xchg cmp (bad) repz mov bnd jae mov ds xchg sub adc andl mov mov shrl (bad) add icebp arpl sbb out pusha xchg fdivs call cmp xchg mov lods aam movsl movsl aad cmp mov and xor mov ljmp into mov cwtl mov faddp out rorl xchg in stc std add inc mov push aaa jle ss and sub add arpl jo,pt icebp or sbb or fcompl lret lock addr16 mov dec mov xchg mov push push aaa lret sti sbb push lret xor (bad) pop lds mov and jmp jo out pop jle pop pop in push sbb mov insl roll (bad) jmp jge leave inc je inc pop test in xor or movsb cmp inc xorl dec and movsb xor stc inc addr16 outsl arpl cmp sbbl lahf jnp adc stos mov sbb lahf repnz push enter mov mov addr16 xchg sbb adc (bad) movsb scas popf xchg in adc inc jo movsb xor add sbbb jbe (bad) xor movsb mov cmc mov xor sub int xor pop jmp push data16 mov adc aam in jg xlat dec sar mov lock pop movsb sbb jne pop push pop sbb mov cli call push je jge cmpsb les push incl xor mov xor adc cmp in xchg sbb int les lds add fs pop sbb clc fs pop xor (bad) or js xor in adc xchg test pop push les jle add mov push sub rcr inc pop pop popa fs pop lods xor pop out pop insl pop imul pop call loope jb popa lahf xor stc pop push (bad) xor jl movsb adc clc test scas mov cwtl (bad) std push jp clc int jp out out loopne divb lock sbb lret adc xor add cltd xor push incb in mov inc rcl add pop jmp push ljmp or gs popa in call imul push add (bad) jno cmpsl pop push pop pop pop jp movsl mov jns bound insl pop mov lods pop jnp jno sub xchg call pop cli cmp jg adc xor cld xlat lock xchg test and mov xchg push pop sbb push xlat lock mov jo push sarb jns mov add xchg hlt call xchg stc shr ror push adc int adc movsl sbb lds loopne add jne test movsb dec inc lret xor adc mov lahf or loope push fmul mov inc ja scas xor and mov mov data16 call sbb or in sub cmpsb fnstenv scas mov jno loope mov dec je inc xor dec mov mov dec lock imul add mov jno js jmp lods adc mov jmp shl leave in je fcomp sub mov jno push sub add pusha aam neg in loop mov cmpsb push in jbe push fmulp rcr je cmp xor stc fcoml rcr frstpm(287 cmpsl push cmpsb jno in loop jnp xchg in icebp fnstcw mov int mov cmpsl shll into jnp mov je (bad) xor adc or je dec mov stc movsl call in cmc mov lods mov push test jnp xchg mov xchg stc rcll popf test cltd stc iret push mov test into in fucomi xorl repz scas inc repz (bad) in in in jne call jno leave call dec jns xor mov jns mov (bad) jnp gs popa loopne call stos jns xor mov arpl sbb std in fstl mov shr loopne out push stc xchg imulb call fcomps lock leave jae,pn jge adc ret jae mov cltd dec jg cmp lret jg cmp loop in xor jg xor (bad) xchg and jae (bad) out shlb ret mov jae ret adc cmpsl in jno xchg (bad) btr call push pusha loop std fdivl sub shrl in outsb call jne sbb mov clc pushf sub in adc mov clc int or jnp or mov sti pop cmc or mov stc add pop icebp or mov aaa std or mov jns xor jae mov loope mov in sahf (bad) out mov pusha loop std rcrl in aad mov stos stc (bad) xor mov mov jns xor mov (bad) mov mov lret rorl fdivs push (bad) loop out inc shll mov call stos mov mov jno adc mov (bad) jae (bad) jno adc mov (bad) out shrl inc ret xlat lds adc xor xchg mov insl int sub aas scas xor jne mulb mov push icebp std jne (bad) stc shrl fwait mov loope sbb ret sbb push loop add mov shrb in fcmovbe fstps fwait mov in sbb add xlat imul mov jl icebp mov je mov icebp test arpl mov stc lods cmp jne (bad) xchg aaa mov popf sub std cltd sbb jae test xlat icebp orl enter mov cmc loopne icebp add sbb jns push (bad) gs and popa jne cmp insl stc aaa xor inc (bad) push clc pop std push jne push xor jle xor jne test cmp call call call sub clc fscale adc jne out call and stc add sbb jno xchg or or cmp cmc clc aaa std icebp jne inc std inc std push stc clc imul loope mov call jmp clc xchg std (bad) jne lods call fnstenv into std (bad) jne fld1 int aam leave mov (bad) mov cli std mov cmpsl cmc inc imul add push (bad) movsl xlat sub mov lods call dec pop jg stos fistp jmp dec enter xchg or lahf push ja jg adc fimull pop xor cmp cmpsl add cmp cwtl insb mov aam xor repnz rclb mov leave (bad) rcr (bad) jo and es mov dec mov into hlt popa scas mov fstpt ljmp (bad) out fdiv imull push mov jnp adc cmp jno adc cmp fisubl jbe add in jmp inc stc out or mov adc pop jo and into sub mov in test repz push push adc mov adc out cmp rorl jne xor mov xchg mov mov int3 jg incb or fsubrs adc adc lret out lahf sti inc mov sbb mov icebp mov in in fs xor (bad) mov mov jmp pop in (bad) fidivl in jae mov or cmp add jnp push push out sbb rorb jno movsb pop or push lret aad into mov sbb jecxz jno pop cmp add adc push test repnz mov xor fnstenv mov adc mov or jecxz,pt add inc out add stos adc xchg repz shll (bad) push loope add cli mov cmc sbb add lret add aad imul xor mov push xor adc mov (bad) pop stc in pop js jno clc pop sub js jno clc inc xor adc cmp and mov in ljmp cld orl out mov adc sbb (bad) cmp jno jae cli mulb jno jae rcll mov mov icebp (bad) (bad) jae xchg clc mov cmpsl xlat sub cmp daa test std mul xchg pop lock pop and mul in dec icebp stc in jecxz push (bad) in cmc loop gs and in loope loop mov jmp nop in aad mov cmc out ret enter mul mov fist sbb movsl in jecxz jmp notl sbb pop cmpsb leave fsubl mul fcomi cmpsl (bad) ss fisubl shl leave imull cmpsb aam cmp mov fs jecxz in iret mov jno adc pop cmpsb fs mov xor enter jge fsubs (bad) fdivl (bad) jo iret sub mov xchg mov rclb (bad) (bad) jo pushl cmc mov mov loopne stc flds leave mov pop mov or mov test in xor xchg cmp aam clc (bad) fisubr sub xlat icebp cld pop stos inc cmpsb jp mov pop nop adc arpl loop push add pop jnp sub mov into mov push add dec adc mov jecxz lods icebp dec inc mov cli dec cmpsl adc scas add push test movsl fsubrl out push movsl mov icebp add paddusb mov xchg in cmc mov or adcb ja sbb sbb (bad) mov inc add in mov push mov sub mov repz (bad) xor mov cmc add (bad) cmpsb mov sbb push incl ret sahf inc stc pop mov in into sbb cmp adc (bad) std scas and std out int jo push sahf call ret cmc cmc jno push cmp add jecxz loope inc (bad) xor dec test fadd icebp add out in cmp push std lahf xor clc mov inc inc repnz jg push addr16 mov mov cli cs outsb adc mov xchg leave je daa sbb shl test fmull test fnstcw sub aaa inc loope loop cli inc div movsb inc mov hlt scas mov xor fidiv push or (bad) fiaddl add (bad) fsubrp or xchg mov sahf out and push icebp orl pop shlb repz add ror adc mov incl (bad) lea cmc into xlat jmp movsl and lahf fbld loope test cli int3 test stos add mov mov rcrl enter adc shlb test mov stos jmp mov fwait lods fild fiadd mov cmp push imul jbe insb cmpl xorl cmp repnz or dec (bad) mov xor cltd fsubl sbb int3 xor mov mov loop cmpsl (bad) ja inc mov xchg loope cli mulb rorl push ret lods add jns mov xlat popa mov cld insb scas ror mov sahf add std div xchg dec dec or xchg mov in ljmp or ja movsb mov mov or ja and decb jbe mull xlat lock dec loopne mov repz mov and les mov lock push negl adc cltd push xchg mov cli test sub fucom loop ljmp mov inc cmpsl dec shrl add add cli mov push hlt push push arpl push or fadd jmp repnz sub movsb popf ja loope imul xor cmpsl mov lcall mov or cmc test jle test mov fdivrs cmp or mov fnstsw sub cmpsl cli rorb loopne pop (bad) mov jo clc icebp or xchg addr16 jle leave mov jns aad cmpsb imul mov dec xchg and sbb or in mov jo icebp xor repz cmp xchg dec fist out js xor mov jns loope out dec std or loope movsl fwait mov fwait sbb jnp test clc xchg mov jl lea mov out leave pop xor aad or jb mov inc mov adc or mov mov (bad) mov cld push mov imul jo lcall mov lahf or jo or xlat sbb rol dec (bad) bound push sub jge lock sub mov repnz sub stc test mov xchg sub mov mov jge lret sub xor cmp orb mov inc mov adc push push add adc mov lds call ss mov ds mov jbe mov (bad) lock sub push call fistp cmp inc adc or enter mov mov sbb adc mov loope fstps nop out push cmp cli inc enter std cwtl xchg repz mov rclb dec or andl cli cld sar and adc sub enter stc icebp or call (bad) jmp inc andb mov icebp jmp hlt dec adc add dec out test (bad) mov nop mov mov xchg hlt rorl bndldx sahf cmp pop mov mov jge aam lret into ret mov fldcw inc lock fimull xlat pop aas sub xlat cli xchg push push ja cmc enter sub icebp cld jns jecxz jae js imul inc frstor (bad) dec mov mov pop pop stc xchg lods and mov imulb lock shrb sbb test adc xchg daa inc cmpsb add sbb push es stos aas fadds xchg dec mov adc stc sbb mov xchg push nop sub loope jmp push arpl mov mov out mov lcall notl pop ja loope lahf sub leave xchg int lea push rorl aad mov adc (bad) movsb (bad) ss hlt cmp pop in add and add mov shrl jg iret cmpb add popa lock adc cmc and icebp mov (bad) aam sbb mov loope sub inc hlt xchg mov (bad) lods jecxz pushf mov jae sub xchg pop mov cli mov and xchg pusha data16 mov aam repnz leave shlb js xor pop sar jl or cmp xchg lock jle or xor jb stos mov scas repz xlat dec jl lock out in mov sbb jmp jg iret sub add dec jmp shl jl mov je div dec cmp jae and jge rcll repz loop in rcll ja clc pop mov shrb mov adc ljmp sbb dec pop mov lock add dec popf movsb fnstenv out lret cmp cwtl loopw dec xchg push scas test inc out xor xor cmp cld das or adc jo lds lcall stc hlt inc push cmpsl icebp incl push pop out popa clc xchg ret lock push mov in stc pop pop in imul std pushf in (bad) jecxz xchg jmp pop test and pushf in orl push (bad) mov (bad) jne cmp jne lahf xlat pop jecxz xor rep adc (bad) aaa data16 add jb enter xor int scas pop (bad) mov in jne (bad) add std enter andl lock add cmc mov test fiadd jg pop pop lock jne mov stc sbb pop inc (bad) in dec mov mov fcmovu daa jo push mov je fidivl jg (bad) repnz jno fs mov into es mov mov ja add mov or mul sti jno enter mov jmp sahf jle dec stos cli or mov mov loope (bad) push dec arpl xchg adc lea lret xor imul cmp cmp jl jbe ret stc cmp add inc adc rolb xor ds or xor mov sbb scas jle dec in ret mov mov push mov stos lea push clc and test out sub (bad) or sub jl sarb call xchg xchg push inc (bad) (bad) sar dec jns push cmpsl out test clc pop cmp lock jle movsb cmp jno push add data16 dec pop es mov lea jl push int (bad) adc inc (bad) out dec jmp or out sbb cmc jb xor xor cld mov enter scas mov stc loopne scas leave push adc addr16 icebp dec bound sbb jmp add mov push aam sbb adc arpl mov pop jno lock pop enter sbb xchg roll dec add shlb dec add js inc fistpll out adc xor fildl clc stc shrl sub xchg mov add jmp push test (bad) icebp lock ror sub inc sahf jmp fldenv and adc lods adc sbb xchg stos mov test aad xor stos mov divb xchg call dec jno mov xor aas mov ficompl (bad) lock ja test clc js enter divl mov ret adc mov jo pop nop ljmp mov fnstsw mov rcrl notl xchg lcall adc shr jle icebp add or or jb cld jbe or pusha mov out (bad) xor mov mov ret (bad) insb xchg arpl push fxam push push dec fwait data16 mov out push mov mov xchg int mov pop cmpsb ss (bad) mov pusha mov out cmpsb or xchg hlt or cli push scas sahf outsb mov daa xor fiadd int3 fst sbb (bad) cmp mov add call lods push mov out inc xchg pop fdivrs ljmp std or fcomp rclb mov jnp pushl cmc dec movsl xchg dec pop jbe xor ret sbb shrl das add movswl jecxz test mul mov mov or in idiv cmp std sbb add xchg jl push push mov into jb push repnz cmp push movsl pusha leave (bad) stc sti stc aas push sub ljmp cmp int scas scas jo xchg push icebp inc push cmp jns sahf sub xchg jbe jl mov testb cmpsb lahf lock jno or ret fwait mov xchg inc je scas lock (bad) lock adc or cmpsb push into mov mov mov dec and jmp into jge dec xlat cmpsl mov adc cmpsl in fyl2xp1 fisub pop fsubl lds in jmp loopne pushw out xor in lret inc add sbb in jne jne push and xor iret sbb mov sbb add xor clc mov iret add jg std jns xor out xor inc test sub sbb (bad) mul mov push out jl icebp and loope jo icebp cli in repz icebp rcrb test loop in and jmp shl mov xchg mov pop sub retw and adc scas inc fist sti loope ljmp push inc add test movsl ret daa mov push cmp add inc in mov fdivp repnz jge call or xchg lahf jmp cmc ljmp in inc sbb loopne push push sub fldcw push jl out or out fidiv icebp mov std jno dec mov sbb cld das fidivrl add mov subl xchg push mov hlt lods shr mov push fcmovbe xchg clc repnz adc cltd sub clc lock mul jmp mov cmpsl sub xlat (bad) adc jno (bad) cmpb shlb clc cld test sbb dec mov movsb (bad) cmp (bad) std stc jbe (bad) mov mov lods shr mov out loop cmp out cmpsb jno pop or in insl shl sub loope jle fsubrp (bad) xchg clc jecxz je mov loop gs xlat jae loope out cmp aaa loopne loop stos cmpsl sub (bad) xor test adc mov in xor inc fidiv out (bad) ret daa loop lods xlat jmp (bad) jno js test test divb adc into jne jbe pop jae xor cmp dec test imul (bad) stc cmp popa in sub test insb out inc push clc aaa mul jne and dec xlat adc (bad) jno js test imul test js out lret sbb leave cltd adc mov int3 fcomps loop stos mov xlat push adc js mov cmpsb adc xor mov inc js sbb mov mov xlat sbb mov sbb mov stos mov enter js jno dec cmpsb jb sbb icebp add inc std stos das mov js test push xchg push dec mov jno add mov jmp push or mov jle fsubrp (bad) jmp adc gs sub test movsl xchg test jle or fs clc out xlat or mov push inc mov fimul test leave push jl lock mov out test outsb std pop imul xchg test or push ljmp ljmp ljmp push icebp adc (bad) jb loop pop mov adc cmp jp add pushf cmp jb mov push xor cmp (bad) icebp push and (bad) push jne sbb in (bad) aas imul clc xchg cmovne jb lret xchg pop loopne add (bad) cmp xchg jb call xchg dec xor loop js jle ljmp cmpsb add jmp push cmp mov inc cmp ljmp (bad) ljmp jb push pop (bad) cmpsl pop mov jne mov adcl pop xchg mov xchg js push xchg sbb mov jmp aam pushf sti push insb pop mov repnz ds sbb add (bad) imul jb call xchg pop movsb fcomps xchg sbb ret add xor jb add aaa push cmpb xchg mov sbb ret sbb sbb pushf xchg pop in sub mov push jmp lock inc iret jb adc sub daa cmpb stc dec add sahf sbb imul adc gs stos jae (bad) mov lret mov roll push aas or int3 sbb add and push in jo int3 jne lods das in repnz xchg jmp sub cmpsb aam add sub shr cmp mov add add loopne jno adc xlat mov call cmc mov sbb inc push out mov push jbe rolb loop popf arpl cmp push sub xor jb (bad) xchg sbb sub pop (bad) cmp xor mov clc push pop inc iret jb jne jno sarb xor pop adc push pop ljmp sbb add insl jg lea sbb cmp inc sbb xor mov push test add shll push jle sbb clc sbb in jb sbb inc std popa cs pop jne push jle adc popa test out pop popf jecxz fidiv cltd mov xlat mov imull stos in mov int3 test jno dec mov push fdiv idivb es call rolb mov cmpb push jmp mov sub mov adc jae fcomip stc leave fcomi jmp les idivl cmc test or sbb or or test icebp sub icebp sbb icebp insl fdivrp fwait xlat mov adc cmp sbb xlat jnp test sbb push pop daa adc in sbb and dec icebp fisubr lret dec (bad) repnz in xor mov (bad) gs mov pop lahf cmc and das dec mov lahf fisttpl mov sub fist into push dec inc add out cld aam jo fiaddl dec inc bswap je cmp call jmp (bad) out aam ljmp je stc mov xchg jp hlt stc icebp jne daa lret (bad) jb sbb inc sbb dec xor lcall xor mov loop add je dec lret shlb and cltd mov into sub or jne int adc div push jbe and pop jle mov mov cmc (bad) xor lods hlt iret sti rcrl jns rol loope ss push inc jno jbe or scas sbb xchg and pop (bad) jne outsb sbb mov shrb ljmp cltd and jns sub mov sub cmc test push aam jae sti mov leave push mov repz or jno dec aad add hlt aam mov sti mov aaa cmpsl cmpsl sbb leave adc imulb sub test fs jmp jb mov and xchg lock sti adc and sub sti jl push adc inc mov jle inc lahf or cld cmp test out and mov movsb add sbb inc aad mov mov lcall jno pop rcll test xor mov lods lret xor int3 lret or (bad) or loop unpckhps adc imul push push mov int push jae adc jno sbb in xchg xchg cltd cmpsl jmp push hlt je adc adc or dec test sbb sub out add xchg push test and sarl mov lahf (bad) mov pop push adc add mov int (bad) push cld test data16 enter sbb sbb out mov mov cmp cmp in js dec dec sub xchg ljmp or je fisubrl in pop sbb sub mov mov es and hlt aaa idivl adc cmp or cmc ljmp lahf cmp push lock adc pop cld adc and jo test movsb add jg jl repnz inc setne imul and xor mov rcrb nop xlat add inc std mov dec pop xor imul inc jbe pop push xorb mov adc xchg fidivrl in pop (bad) aas inc adc push mov ja cmp mov mov pop cltd (bad) in ret mov dec jne scas stc sub fidivr push lcall fnstsw (bad) xor pop cmpsb jecxz jmp lcall enter cmp mov push cld loop add fisttpll stos rcrb mov enter fisubrl imul imulb int3 mov sub clc mov in pop test rcrl clc mulb inc add fimull addr16 mov ss and push mov scas bound push sbb pop enter stc mov fs std add std and mov scas or lock fist daa mov je sub push dec xchg sub mov mov test add (bad) leave bnd hlt shl test pop in enter andl mov dec decb xchg ja jmp mov jbe sbb dec pop mov icebp ja mov sub mov insl mov icebp sbb jg cli push divb rolb test addr16 aad mov daa repz push inc repz imulb xchg mov std jo lock ret inc not aaa stos xchg scas mov test (bad) out je or mov lcall fmull call mov mov mov cmpsb lds aaa sub jp mov bound icebp repnz or push stc jno sbb add fisttp (bad) mov repnz dec push leave test cwtl dec sbb in sti add insb sbb mov add div mov push jmp icebp push decb mov aad mov push std sub gs test jo icebp or mov in out vpsrad adc adc cmp out mov stos mov or sbb add loopne insb cltd test or addr16 mov test mov pushf pushf cmp ja jle mov sub and cld mov adc adc and or dec (bad) mov stos lcall adc pop push stos imul push rcl gs (bad) ret adc mov jle aad add in aam and xor jno mov lret not jbe jno or xchg adc add push mull push (bad) in pop jg scas pop (bad) mov sbb or test adc aas xor and (bad) aad mov arpl adc loopne in out lret mov xor aaa into adc out out mov inc cmp mov sub pop or aam jno inc lea lock negl mov lock fdivl fstl lods jae sti mov xlat xor idivl sbb clc repnz sti test mov or loope fucomp inc adc (bad) test iret dec test jno leave add mov fcomps das push outsl mov sub sub (bad) mov loopne test sbb push loopne sti push and div xlat int sbb mov test out clc sti je stos dec out and and clc lret mov mov jecxz (bad) cli bound inc sub pop cmpsl js jp jno clc adc into ret xlat flds cld (bad) dec int3 inc rorl mov test imulb cmp out in nop or int outsl jb out mov call ja sbb jbe loope je mov icebp and imul push loope test mov (bad) (bad) cmc dec mov test stos or mov push out mov jno scas outsl or mov mov dec xchg adc scas sbb pop cmpsb mov xchg insl jp sub idivb sub and sbb pop test icebp or mov fsts push aad push or adc pop mov mov loop icebp loop (bad) cmp mov push pushf test icebp jmp fldl jmp into (bad) aam test cmc std mov (bad) jecxz sbb inc jns cmc lret loopne add adc mov pop enter mov je cmpsb (bad) or popa fsubrs icebp mov inc mov sbb jp cmp add dec fdivr push mov pop mov mov test in pop jns in mov ds mov jnp or js fadds xchg jmp sub lcall ss in test adc sub scas sbb cmp cmp pop add mov mov jmp lret mov push cmp in inc push scas orl add insb lock roll xchg cmp and je jns pusha push pop and pop jge adc pop cmp mov fyl2x mov clc xchg fsubl imul aad inc (bad) inc lock mov cmp nop (bad) jo add loopne sar or mov and dec sarl iret lods or sub daa xchg (bad) aas enter outsb mov cltd stc flds repz add fstps fsub jecxz fidiv cld loope aam aam push ljmp into enter mov inc fs adc push mov mov test lea push mov mov cmp call add or mov cmp shrl lock int dec test mov mov sbb pop out adc push push das pop mov cmpsl icebp jg or mov ror mov fisubl push push sub loopne or or mov stos mov mov mov (bad) aad mov jmp int3 push pop insb mov (bad) xor sbb stos scas stos idivb jne push add dec leave xor pop lcall shr add push jecxz ds jne,pt test je xchg dec aaa (bad) dec mov cltd add fistpll js push out push or xor or out add incl out sbb jne test mov in or jne stc loopne shll in mov icebp fiadd add sarb movsb mov aas mov shrb mov loope std jbe test pop lea fnsave sti repz push testb xchg sub lea and (bad) mov sti inc mov lock mov jecxz imul jne mov mov shrb (bad) hlt mov dec dec add jmp (bad) pusha lock popf mov movsb sahf pop movsb repnz aad or cld inc sub mov xchg inc push push cli jb or cmc mov mov lret std push jmp lcall add push loopne add div add xor jo fnstcw mov (bad) or dec xchg (bad) stos jecxz cmp sbb fxch ds lea dec dec das pop stos sbb sub mov or pop inc pop jle test fidivr push add sub mov mov in xchg mov loop cwtl mov test push push sbb dec xchg dec out sbb fildll sub (bad) aaa data16 adc inc xlat icebp iret cmp cmp test xchg shrl jno mov mov push test lods xchg out fimull lret mov or inc mov cmc stc loopne pop shrb mov divb ret adc or fsts push lods test imul out inc adc jb ds jo int3 in sar jg pop cld pop in xor loope mov and xchg push imull jno popf mov cmp jl mov and leave cli and fidivrl mov mov ja test jno out test into sbb jbe arpl add inc clc or cmpsl push mov cmc pop mov pushl lret dec push cltd jo imull sub xchg shl ja sub xchg lret test into enter test add add and leave push daa jb and mov dec (bad) jno ss fcoms xor push ss or mov sbb es xor and es mov test std mov push (bad) hlt jle mov ret xchg ret adc or fdiv incl xor imul loop sbb mov (bad) mull mov xor pop pusha mov xchg jno jb ja cli sbb aas into mov test pop and adc test leave or xor enter jmp clc mov cltd inc mov cmp mov sbb stc outsb lds inc and jecxz pop div (bad) jo (bad) cmc mov inc adc scas mov add jbe stc fimul inc cmpsl cmp or or mov lds mov cs arpl out jne aam sub lcall mov or (bad) cmpl pop xchg mov scas daa lahf cmc or dec add adc jle aam dec jo or aam gs jmp fsubl pop scas or adc enter jle pop jo fdivr test mov ja xbegin imul aam push loop enterw sbb imul (bad) or dec jno (bad) aas lds aam icebp ds scas mov add mov out ja mov js andb sub inc iret in jae aam mov mov (bad) div mov adc jle (bad) into sub (bad) int ss or jno cmp out fsubs (bad) mov add (bad) jo std scas sti push scas repz adc add mov mov movsb sub jl push or sub loop or adc jo cld lret pop das jno lcall xchg dec inc add mov sbb loopne add inc dec subb push mov sbb jecxz dec call xchg lock push mov sbb sbb fmul xchg jnp cwtl mov jne (bad) aad dec push movsb adc adc test mov push sub mov cmpsl test mov pop ljmp xor dec lock movsb cwtl int3 mov dec out pop inc int3 cmp ljmp lock dec pop ja pop aas (bad) jno aaa inc add (bad) jmp insl sarb lods mov mov dec and ficompl nop cmc test mov and xchg aad pusha std mov test pop in mov repz test xor loop jno push cli inc enter lock push cs add (bad) xor cmp mov repz or and and dec dec mov lock (bad) mov or test jg xchg hlt int3 nop lods je pop or loopne jg bound test out jl push insb fidivrl addr16 iret test addl push mov mov movb stos adc (bad) std aaa jg js adcl pop loope cli mov enter mov mov add fs ficoml add test jnp xchg dec xor ja (bad) or mov std jge in mov cmp frstor inc jne add dec iret dec sti inc mov mov bound dec jbe icebp into jae xchg fisubr pop and xor clc mov jbe jg stc jmp jno inc push icebp jp inc push mov aaa in jecxz das or pusha sbb out mov jg fxch add (bad) jo stc leave adc jns popa cmp sub lahf movsl not adc (bad) aas enter fxch mov (bad) out psubd xchg mov jo fisttpl cmpsb lahf xchg imul sbb or push mov push icebp std jne pop inc js (bad) and xchg aam mov int3 daa int3 add mov push xchg push lock ret pusha or lea sarl jns nop mov dec jno test sar jl icebp std leave mov jp inc mov leave mov cli (bad) hlt test mov aas jbe leave add push mov sahf cmpsb in (bad) mov sbb push stos aas cld mul and enter call inc sbb roll inc shl push push insb in repz fcom sub mov icebp adc (bad) in add xcrypt-ofb cmpsl sub mov jns jl jae daa fisttpl cmp aad dec inc add jmp fsubl aaa push or mov (bad) mov div jmp sub xchg jl fcom jg clc lret pop aas cltd jg shl cmp negl adc test cmc mov cld out mov aas ret mov test imul lods test cmc lcall or cmp ljmp add fbld or test lahf div xchg insb mov cmpsl sbb fcomi hlt push push adc adc pop repnz xorb cmp leave (bad) xor mov inc enter jmp incl rclb outsl xlat (bad) adc adc in adc mul adc in out daa sub lods cmp test test inc xlat adc xchg add jle scas fs lock (bad) call push or mov out out std movsl aad xchg stos jge jmp pop mov xchg mov or test mov push and loope cmp (bad) ret jae loope mov sub ss push adc notl sbb jnp ss add push hlt lret xor scas std popl pop out lret jno fidivr mov xchg inc (bad) jecxz adc pop lea dec adc mov jecxz fwait lret lock ljmp sti adc sbb pusha pop lea xchg mov cmp (bad) lock fstl std aad mov cld stc cld fisubr fdivrs das mov push lock inc cld stos add mov cs dec (bad) xor cwtl mov push inc or mov (bad) fidiv icebp les test call fwait cmc pop imul inc sbb dec or mov mov test xor paddd jns lds aad lahf mov xchg repz jg adc fldz mov fldenv add fstpl cli dec push fs adc sbb mov std enter nop out rcrl es rolb push lahf sbb fstp jbe sar out xor fucom stos dec jle stos mov cmp imul ljmp in jle adc lods sbb sbb jne popf (bad) or sub xor adc pop ljmp aam (bad) insb stos jmp mov pop cs lds mov add cmc xchg mov xlat bound leave mov pop dec testl call add arpl mov xor movsl push and push mov lods in incl jmp adc out adc and push rorl bound xchg sbb adc movsl xchg mov ljmp pop inc (bad) mov call sub (bad) fldcw icebp sbb xchg out push test mov or (bad) cmp xchg adc lea push clc nop dec sub push sub push loope dec in arpl mov adc push rep mov lret mov push jbe aaa lods push in lret (bad) repz jg mov mov lods incb inc dec sahf shll stos das and fs jo pop sub cmc mov popa push test pop mov int test in adc jg arpl out jno hlt ret loope mov push xchg fldenv mov xchg iret lret jno jae gs test mov cld jg push inc push aaa adc xchg pcmpeqw sbb xchg or sub ja cld add int3 insl stc adc pop push enter loop add mov test xor aas prefetch or aad xor sahf pop cmc test in jmp sub aad xchg scas pop movsl jmp nop int cli jecxz call push (bad) mov mov (bad) das mov fnstsw rorl movsb adc ficom xchg repz dec test mov xor loope or lea xchg stos lahf stos ss sbb mov aam xor or mov sahf dec cmp dec lods (bad) mov sbb mov mov ja push in jecxz out pop scas push ss push xchg aam push adc add cmp iret xchg out fsts in jnp shl jo sub adc into aas test (bad) dec sub subb faddl dec dec and dec jmp jne dec jle shll faddl pop or xchg js xchg mov dec lahf xor cmp fcomi adc dec jle icebp stc nop add iret mov ljmp int jbe fistl fild cmp dec mov pop subl aad sub cmpb lret (bad) daa mov fisttpll test sub int3 sti jl cmc into push cmp dec xor std loope sub push sbb lods fnsave cmp imul stos cmc mov lret out xchg fstps pop mov inc arpl dec ret in out sbb inc aaa loopne push pop out mov lret and cmpsl dec jo adc ret add xchg into cmpsl loope arpl cmc mov dec cs mov adc adc test ss push std push es inc imul push jle out xchg insb xor rclb xor and inc cmp sarl push cmpsl mov les leave fs shl cwtl test pop cmc in lret cmp jg cmpsb jno or popa mov adc inc mov out pop sub ss xor mov fcoml adcl adc push aam rcr ja out daa push sub add push sti cli in bnd das std add insb scas arpl lock stc xchg or or mov fldenv es fstps inc mov xchg stc scas sar nop nop mov stos rclb daa lret jl gs popa mov push aaa jbe sbb sarb push cs pop rorb dec outsl push out cmc setno (bad) cmc popa mov cmc sbb pusha sbb add mov xchg inc jmp or push jbe das xchg aas dec adc inc mov mov mov dec xor aad pop aas pop scas loop xor xchg inc negl repz rolb jbe rcr jns dec mov (bad) lret push iret push cld out adc push xchg jle std jo jl cs xor push idiv or cld imul andl je xchg dec add mov ja dec stc mov stc cmpl inc stc xchg fdivs cld sub ja jns imul cwtl divb (bad) add inc int3 decb jl mov dec (bad) add sub hlt imul (bad) fucom xor mov ljmp mov stos ja mov cld sti pop and sbb jo push jmp add xchg mov leave aaa dec (bad) or je mov xchg or imul jb or mov mov out mov mov test pop jecxz mov sbb mov divl stos mov mov jbe leave pop xor aam or mov jge pop rcrb dec divl stos xor or pop sub loop shrb push xchg (bad) icebp cli mov addr16 pop out shrl lret cmp repz inc jno dec shlb xchg mov add stc push push in mov dec (bad) dec in (bad) mov (bad) mov call sbb push lea mov fistpl mov pop cld sbb mov jbe sti fistpl (bad) aaa adc loope mov cmpsb jno test or or hlt xor imul or std fstps loop add cmp (bad) mov jbe cmc or int3 test lret das lret push scas or (bad) icebp mov sub sub jecxz dec es ret or adc clc xchg test jecxz ljmp stos adc jmp jns dec cmpsl aad mov adc sarb pop aad xlat in stc mov jne icebp add mov adcb jne ss bound pop (bad) aas pop mov jns cmpb jp leave xor movsl jae mov mov lahf pop or push popf in stc dec inc je imul jo int cmpl in sahf repz in loope pop lret push xor cmp xchg std xor cmpsl loopne xchg mov test jecxz xchg xchg repz cld popf dec sbb push out inc icebp cld xor gs in inc repz test imull mov test xchg popf aas leave movsl cwtl cs inc lods clc cmpsb adc fnsave push cwtl fs adc ljmp mov scas lds lock (bad) adc (bad) mov mov mov call jne push mov ds std icebp icebp jnp xchg stc (bad) in push pop stc mov insl mov dec mov jl cmc jno fwait cmp stos inc outsb jg jne or int lea mov lock push (bad) out aad ja int jbe (bad) in pushl shlb imul arpl clc push jl divb in ds xchg lods push sub std jbe movsl into mov clc movsb mov lock push dec sbb stc icebp in xlat jo punpcklbw sahf xchg pop data16 mov dec jle (bad) das test pushf lahf adc mov out inc mov leave hlt insl je leave jp (bad) jns stc mov jo fistpll inc and jge mov in pop inc pop mov mov in sub scas push fwait mov int3 lret mov icebp out pop or add push stos stc dec jl inc stc (bad) rolb loope jno fistpl xor into or push inc pop xchg jbe pop jne pusha push cld xchg xchg stc mov xlat inc fisttpl (bad) or adc rorl pop or mov jns imul daa fisubl lret test mov mov std mov leave sti jo in cmp sbb out int3 dec mov mov mov mov cmp scas scas frstor imul adc mov sahf pusha xor jns mov mov fcoms and cmc popf icebp test lret fldcw in pop mov adc (bad) repnz mov std sub clc jno xchg cwtl mov mov dec cmc jecxz sbb std push mov cmc mov imul ja xchg std call adc rolb arpl dec ror mov xlat mov clc mov int cwtl mov aad cli out cmp cmpsb mov lods (bad) jmp xor mov push mov loop loop xor jmp popf rcl push test sar js mov into mov jnp jno aam xchg je jne addl in cs mov lea in out (bad) lock stos lods cmp push stos lods mov (bad) push insl adc pusha inc imul loope jno (bad) adc (bad) aad stc out arpl add rorl fidivrl xchg jo mov int3 push popa xchg xchg loopne loope jns mov outsb cmp aam call mov mov mov mov (bad) mov lock pop sar sbb dec mov xor and mov and xor inc (bad) mov xchg mov and push fdivs push test mov pop cli xor aad cmpsb data16 jl fs cmpsl mov adc cmc mov pop ss dec int mov addr16 (bad) clc inc stc push sub enter pop test repz xchg (bad) lea ss adc cmpsb jge push xchg (bad) mov xlat cmp mov sbb cltd pusha lds in cmp subl (bad) into aas outsb in jno xchg fmull rdpmc leave dec stos (bad) ja cmpsl jg jo fdivrs popf and ret std mov lret inc and add fsts stc (bad) mov jmp pop inc mov mov jg jns mov xchg or mov push (bad) js jnp mov popf xor xor int or cwtl idiv f2xm1 cmc sarl jae std jns add xchg mov cltd fldenv roll repz or repz in mov popf mov mov cmp std or dec in jg sahf in test xor shl mov shrb cmp xchg ja jl loop ljmp addr16 imul fyl2x out cmp pinsrw pushf ret les mov enter iret loop rclb mov add adcl hlt jle adc cmp adc and inc jns fidiv out testb movsl movsl dec mov xor gs pop lds andl out jo jae aad cltd loop stc pop and neg lds add repnz fldcw in jb fidiv and lods jne jl lret notl jnp xor xor mov or xchg divl lret cmpsl mov sub or adc out xor repnz inc mov aad sti js push mull popa mov jg or idivb rclb jle clc int3 aaa lret xor cmc mov push frstor pop out or fnop je (bad) int3 mov jecxz mov jl stc mov sahf push jl icebp aad cld adc in movsl and mov fdivp insb int mov sti je icebp (bad) dec test jmp stos scas jecxz push cmp (bad) daa inc push mov push test pushl out clc mov mov into add bound pop pop (bad) mov das movsb aas aam iret or enter xor mov repz pop ds pop inc sarl mov imul jmp aaa idiv stos stos mov call cmpsl repnz pop call lret mov mov (bad) jb std movsb or mov daa pop imul cs loope mov lahf xorl cmp movsb in mov stos in cli lods jg orl jmp sarb aad mov add jns or fimul mov stc outsb jl mov push (bad) aas or call cmpsl ja sarl cmp pop stc cmc jne das jecxz dec and imul aam stc loopne dec pop repnz sarb loop dec mov jnp add push clc je mov mov repnz pop or push sti pusha add fist mov hlt dec xor test xor inc dec jmp or sbb xchg es loope int3 call jecxz and mov mov idiv xor arpl fidivrl mov fldenv rep mov add add stos in jno insl outsl movd pop mov push pop or xchg lret (bad) aad mov jne (bad) stos lock rcrl in inc int3 jbe mov subb mov mov lea test mov sar mov cltd add cmpsl movsb mov mov cmp in (bad) icebp xor in cltd aas fidiv bound mov jae add leave xchg cmpsb cmpsl test inc insl pusha popf fnstsw push out test icebp mov cmpsl test in or jnp scas stos imul push pop daa dec or cltd xchg mulb fsubs and sbb mov scas loope insb loop push stc jecxz repnz test int3 cmc inc in popa scas dec insb xchg (bad) enter imull cmpl bnd mov cli xor mov call lahf adc (bad) ds cmp (bad) mov fisubr sbb adc in push loop fbld mov repnz and lret xlat mov loop mov jg loope nop cmpsl jo ret jns jmp mov sbb fiadd jns into push int3 xchg pop mov (bad) jbe mov dec fcmovnu xchg mov jo hlt jne mov or test inc popa lods nop aam xor push xchg push das sbb and xchg out fucomip fmull mov cmpsb cmpsl and mov sub mov or stc xor stc lea xchg in divb push int jo rcr jg mov ljmp mov out into add mov cld sbb mov mov lock test je add push (bad) icebp (bad) jo call in test test fimul repnz mov jle fldenv xor mov jge test cmpsl mov xor fldl2t mov jno (bad) std ja mov add adc sbb mov jl jmp cmpsb and cmp rcl stos mov mov js lds or in sar pop lahf mov mov jns cmpsb popa dec pop sarl and or cmc out lahf movsl mov xor xchg cmp dec inc sub stc stos jg mov lret cmc adc pusha jl lahf jp mov xchg leave (bad) push lcall jge cmpsb movl popa loop repz icebp cltd xorl jmp aaa in cmp in jns ja sub mov ror mov add ss leave vpunpcklqdq lods in mov leave jb add cmc pop lea dec movsl jl (bad) scas cmpsl adc sarb out and dec jno mov fnstcw int fdivs mov aam dec lods subl stos (bad) out fisttpll mov cmp dec jb fdivs or gs cli cmc jmp test cmp dec adc dec sbb push repz lods rcrb inc lahf addr16 stos or ret jge mov mov decl (bad) mov addr16 stos and stos mov test std lds jo adc fmull mov jle mov adc mov out mov loope xchg mov dec dec add test in xchg (bad) cld xchg mov cmp xlat sti leave repnz cmp push stos (bad) dec das mov insl decb adc repz addb scas mov inc int lods outsl cmc xor js arpl icebp cmc push add jb lret out fdivs lahf xor adc mov aam xchg xchg js out push dec ljmp fsub lods dec sbb push lock adc sub mov or mov (bad) xor xchg xchg repz mov stos or loopne (bad) paddw and insl loop mov mov mov testl cmp jmp decb inc hlt push or scas cmc lds dec daa or test fidiv fisttpll dec fstp sarb outsl in divb lea ficompl xchg loopne ret xchg sub inc jne stos inc aas out sbb dec cld adc jae xchg push in pop int nop jl leave icebp xchg mov fwait jno rcrb mov (bad) in mov xchg call (bad) hlt dec daa or rcll in jns jmp int in in jecxz mov mov icebp (bad) jb push fnsave in mov fldl call stc scas jno rclb std fdivs movsl into jg lea in xchg das jne sbb push (bad) lods mov repz clc and fwait ret dec in cli (bad) sub jl adc stos pop xchg icebp mov in mov lock and clc sbb mov rcrb test jns pop lfs xor cs push (bad) dec leave daa xchg push mov lea nop arpl (bad) aam data16 pop pop je jnp mov shll or dec xlat pop stos adc ds xchg sub inc jo inc stc fdivrs xor lahf mov mov mov sti mov sar xor scas aas pop ret jnp inc das fist arpl shrl in mov mov aas xchg test mov push mov call out mov call dec iret lret inc or repnz add xchg or inc cmpsl xchg mov out call push jns push mov cmp negl jne lcall xchg std lret or mov cwtl jge or dec andl movsl jno stos push shll divl adc test lcall cmp dec scas movsb fstl jmp sub aaa loope repnz fisttpll jbe jmp cld xor inc shrb add xor mov pop adc fsubl mov jg popa sahf mov aam out shrl outsb dec dec pop mov or or lock add pop cmp fadds cs gs test jne jle loopne mov mov sbb lock inc xor inc aaa push ja lea mov push jle daa adc rorb stc jg aas cmp stc add je es loopne jnp cld cmpsb xchg dec aad lods xor popa xor out call mov aad dec xchg xor ficompl out push fucomi mov mov aad scas xchg leave lret jae add jecxz ret adc jo movsl mov lahf ja jge push mov mov sub push or xchg and mov leave add jp into hlt xor ds pop cmc aas stos mov test call add mov pop mov dec xor or xchg jbe sbb cld xor fist jae icebp iret jns or xor xor stc jp jno ds push adc dec add lahf jmp dec out stos fstpt cli cmp jb jno sbb jmp test repnz or ror mov stc pop jae loop jmp nop int3 stc jmp stc out mov (bad) cmc (bad) sub (bad) or lock in mov repnz hlt dec loope (bad) loop adc jmp inc xchg ja (bad) dec push movsb xchg jmp mov mov idivl inc pop (bad) jns mov add mov out stos in outsb fldenv xor xlat cmp mov pop stc inc mov fildll or out push lock hlt fsub pop pop movsb jns jl mov pop fsts fidiv pushf jns stos pop loope inc push or js sub cs inc fucomi shll cli cmpsl mov lret adc mov mov add cmc mov mov inc lds test cli fnsave aas xchg stos std test aam in jp je mov (bad) icebp cli (bad) lock sbb aam xchg jle dec jns mov loope bound repz push xor dec xor xor aaa sarb mov faddl sar test icebp fs mov inc pop fsubs push jae roll sbb out (bad) xor test jo in daa adc cmc addr16 jb mov sbb out leave xor jns ja sbb popf pop (bad) fsub js cmc fisubr jne jns mov xlat fstpt leave sub in adc mov cli mov (bad) dec adc mov sahf daa je jl fadd (bad) pop loop movsl jmp out stos scas fdivl notl mov dec lock lods js je (bad) lock pop adc mov icebp (bad) stos xchg mov shrb jmp push adc fsts jae push jge add mov add stos mov adc in add sub (bad) jecxz inc test ja pop or mov das (bad) cli jb or push push imulb cli jnp (bad) rorb test adc or into lods adc insb jnp push mov leave sub add addb xor pusha inc adc sbb mov shll (bad) out mov sbb mov cmp dec jmp push push fs or (bad) dec das dec and xchg int loope leave pop push movsl dec dec dec loopne adc leave adc out dec cmc into mov pop push mov das jno js in jge sbb cmpsb cmp outsl pop mov push xor jns mov mov adc into and int3 aas mov sbb mov outsl cmp xor into ja mov addr16 idivb add pushl sub add mov sbb icebp enter out ffreep cli jge fs sub fild lcall cmp into ja xchg fidivrl push imul lods or mov jp lods pop pushf (bad) mov push roll sarb fwait aam sub jne pop push icebp jp daa mov stc cmp (bad) dec dec leave add pop mov mov (bad) mov mov subl addr16 mov xor mov in mov cmp into mov lea jle sbb hlt cli jl lock adc iret add cmp sbb imul push xchg lahf enter in iret cmp mov jne mov stc mov hlt shll shll ja adc neg (bad) daa inc xchg out jmp fdivs jb mov cmpsb or mov cmp jns mov repz mov lea xor sbb or adc movsb insl jo lcall int3 les ret sbb cwtl mov jge sti fimull or (bad) jo std pop cmp inc mov cltd mov xor pusha mov lds fs add inc or cmc sbb arpl mov xchg enter js and inc jmp jbe cmpsb dec pop jmp pusha xor aam lds mov xchg stos data16 xchg mov add ljmp sub outsb fcomi (bad) ss jns mov cli rcr cmc fiadd pop push rol imul mov jl fucomp mulb mov rclb out std lret ja mov enter fistpl cmp xor sbb pushf movl mov lcall fstps jo jbe sbb (bad) sbb lea in adc movsb or insl lock (bad) imulb pop test jo push cmpsl cmpsb jmp jmp jmp mov inc jb (bad) je mov push pop in mov incb inc dec mov adc fisubr movsl rorl push out mov cmp (bad) mov sti cmp pop or adc jmp cmpsl sbb leave sbb stos mov into enter adc xor jge push addr16 movsb cltd lods out lea jns cmp mov ret mov ja (bad) pop inc sbb jp lret mov loop repz pop mov jecxz pop inc (bad) in cs popa imul stc jns call jge leave mov test xchg lret dec or fild mov xor xor imul test mov std add cmc leave mov icebp js mov pop mov nop mov pop add ljmp mov in lahf mov enter leave mov ficoml popa daa loop lea and outsl xchg or (bad) ja jl mov cmpsb in pusha mov call roll std divb fstp sbb sbb cmc adc mov (bad) repnz vminpd mov mov (bad) pop xchg mov cmc (bad) loopne pusha je mov sbbb xor shrl int jg (bad) jne fs jne dec cmp cmp mov lret mov and mov into xchg push stc test addr16 je mov push in inc cmc das ret xor push int3 add xchg cmp and adc loopne sarl repnz dec and dec mov push in jl jecxz icebp les push mov sub fld add jo inc mov mov sti mov call testb cmc cmp mov aam jp icebp pop and push test fwait jno hlt js rorb or add out adc mov sti add test popa lahf or cli lock fdivr (bad) pop cld je jle inc (bad) mov scas test pop jge pop jg pop mov xchg mov std inc jno mov mov mov jmp fdivl imull mov mov dec lea dec test fsubp push jb jns outsl loope push lahf fdiv sub inc adc mov or jmp int jecxz mov call add sub adc rorl in loop xor fcom movsb mov jo out aam inc jb pop pop (bad) mov (bad) xor mov repnz inc jb les into jo or sub xchg cmp dec cli dec (bad) sahf cmp orb inc push fisttpll mov add mov mov push insb roll add jbe stc xlat jmp mov jo repnz add mov add xchg (bad) repnz outsb (bad) pusha cmp push je test mov fidivl push or movsb std jl int cmpsl test repz dec and decb cli mov cmp xor loope jno xchg (bad) jns push or pusha sub mov loope xor add cmp aaa test nop sbb pushl hlt xchg repz adc and push push and loope jno adc adc xchg (bad) mov call and inc stc int3 sub jmp jns fimul cmpsb stc aaa shlb or mov arpl loop jae fcmovnb push mov ret lods ja or or sub xchg mov fsts icebp (bad) aas jle sti ja rclb cmpsl push sub xor mov xchg add mov or shll dec fstp inc stc icebp mov push mov pop mov sub push sub or leave in adc sub lods add cmp fchs mov mov mov outsb jne repz ficompl sbb mov jl popf cmc clc xor pusha arpl (bad) adc mov add jnp add adc or pop sub xchg and pop or xchg sbb jns and inc test jo into test lea ret popa lods xchg jo mov inc sub popa jbe or inc adc enter mov in mov cmc push xor jecxz xor push rolb out mov or enter out push push dec add lds les dec (bad) cmpsl push mov mov jle mov (bad) adc in cmc sbb sub mov mov cld push mov inc cmp jo or stos and mov icebp and mov std stc mov in je cmp ficoml mov fs jmp ljmp jns inc jmp inc repz pop mov sub xor out test xchg ds sbb cmpsl out leave das xchg inc aaa adc addl movsl ja and add xor jmp or cmpsl xchg inc xchg add inc jl rep mov lea mov leave daa mov cmpsb dec dec inc fadds jbe mov fstp fdivrs xor in dec mov jae sbb aad mov inc jecxz lock or dec dec jmp push hlt jns mov lahf mov jp mov xchg lods (bad) fimul mov (bad) ja ret clc iret mov leave (bad) mov movsl scas add cmp jecxz mov fnstsw xor xchg inc sub sbb test idivl leave add jl and push stc popa fiadd lods stc xor inc or leave pop jl scas and xor test adc cmp lds pop in xor cmp jne mull mov lods ret (bad) dec enter cmp adc or sarl jb add int xor or cmp cmp mov data16 out aaa inc outsb pushw dec dec aad ja jge icebp xor leavew fwait (bad) out jle or push fs gs lret or jne icebp cli jge mov mov insl fnsave xor fadd incl mov mov jmp sbbl popf or mov sub popf and cmp dec mov lret ficompl repnz mov enter sti fnstcw xlat hlt xor mov cs int3 sub lds or (bad) ds add mov pop icebp xchg inc mov inc jl xchg divl es and mov loope std jno not daa mov xchg sub pop (bad) test jno (bad) clc fidivl pop mov mov dec divb mov push (bad) call push inc dec pusha ficoml arpl test bound testl jg in sti int3 add into mov xchg sbb daa jne mov movsb fistpll push mov inc aad mov lds push (bad) fsubl mov inc xor test sub xchg jns push jmp pusha lods (bad) loop xchg mov ficompl push sbb nop jo inc push sub in push push adc or stc push cmpsb stc mov icebp imul outsl jae sbb gs add aad jl in (bad) (bad) jo sbb es les leave loope inc mov je sbb xor scas pop ret (bad) cmc add dec xor mov (bad) mov push mov lcall call jl icebp lock cmc jo sarb (bad) clc lods test test movsl std push cmpsl cmpsb mov jns jl jb fdivrl pop push aad aas (bad) outsl xchg outsb adc pop lea push fisttpl (bad) iret rcll stos stc sub shrl (bad) popf js aad mov js push (bad) int fucom lods repz icebp test stos lds in jmp roll mov jmp or mov call or pop mov stos add std fnop mov mov xor mov adc aam sub adc out ds mov xor decb jle ss adc cltd fsubr add jl add mov dec fsubs cmp jnp call mov in adc fsub repz jmp mov icebp rcrb or scas outsl inc stos xchg jmp sarb lods push fnstcw test decb out cmc jns repz fsubrs jmp scas clc call jb out xor mov sbb addr16 adc xchg jge ljmp test (bad) lods (bad) mov mov lea sbb imul sub dec loopne pop lods cmpl stc rcll leave or fcmovbe pop xchg xchg mov stos fist adc test mov sbb pop js inc stos inc std dec dec add mov movsl hlt out dec or or in pop scas adc js cltd aam (bad) (bad) xchg cwtl mov mov dec lods xchg jb sbb (bad) repz loop jmp mov (bad) dec jo stc nop daa jecxz cmc mov dec int jge out xchg mov sti lock jne cmc iret lock pop leave repz and xlat jp xchg mov fsubs push call popa das fsub jno out test pushl fidiv lock add mov or (bad) add jb repz fbld pusha aad or sbb mov mov cmc add fildll scas ss divl mov pusha fisubrl subl mov mov stos push xor or sub cmpxchg int3 xor pop (bad) mov lods fcomp lock push sub mov or jae mov sub test sub sahf std mov and cli jp imul pop mov mov xchg mov adc in cmp sub cmp xchg out leave jecxz hlt jnp mov lcall add psubd sbb cmc mov add mov mov nop popf mov es mov cmp xlat mov push pop cmpsb mov pop push jo push imul mov leave mov cmp fld xlat pop scas out out hlt adc mov push pop mov test lcall xchg mov stos (bad) mov stos lock movsl mov inc arpl pushw cld (bad) rcl js shr xchg jge jp imul xchg jo cmpsb sbb and xchg mov scas stc jp inc xor cmp jle xchg mov inc out dec out loope lcall fdivr pop ljmp push testl loop dec hlt jae cmpsb cmp repz jne sbb push adc frstor sbb push (bad) lods xchg fsts mov mov out enter jo add and and xor mov sbb test adc int fdivl sbb jo cmc inc add jns jne ret push imul push mov hlt jno loope xchg sbb mov mov adc jg pushf std jno imul cmp push mov icebp aad jno jmp fcomps mov sub (bad) call lret push cmp bound mov dec insb dec lret (bad) mov xlat notl stos ds enter out lret or (bad) call push mov lret ss push mov sub dec lahf out aas cmpsl mov sbb dec rcrb mov dec fcmovbe or fcomi shlb in outsb fbld pop push push dec int mov scas fidivr scas fistpll and gs jno (bad) push stos jno mov mov lods sti fisubrl mov inc pop loope fcmove add jmp rorb cmc fdivr xchg xchg jle mov jge repnz jb popa lods test adc out sbb push inc ds xchg lea iret mov pop xchg imul mov jmp decl dec push cmp lock mov jno mov xor jno push or mov test fwait (bad) ficoml add jl jae icebp sbb xchg repnz mov mov je jl aad mov or add and sub idiv jo test bound sbb test mov push stos movsl lcall jmp xchg adc push outsl popf rclb dec mulb adc in jle shll iret out mov mov mov add std push repz mov jns repz in push ror sub add inc jmp mov xor clc mov cmpsb cmp es sub ffreep adc aaa cmp or mov xchg cmc dec dec rclb mov (bad) inc mov jmp mov mov test popf addr16 inc sub jb ret subb pop push cli lods or test (bad) repnz in push sarb jmp jle lcall sub jb pop jmp xchg jne aaa xor inc cwtl into pop and dec or dec stc cs in add xor scas inc mov fadd inc fsubrs stc fsub jmp out jmp loope sub pop jmp je loope adc out xlat sbb shll out jmp leave cmp mov insb adc mov push std in jns mov (bad) lock dec jg frstor adc repz dec scas or mov push mov xor dec or stos add out fmull jmp mov dec repz cli out rol jecxz jg inc mov jbe xlat popa movsl imul lea jg mov mov out (bad) dec dec sub jo jae (bad) jbe arpl lods movsl (bad) sbb cld stos imul cmc rorl cli arpl lcall test inc (bad) jg movsb loope add in movsl arpl cmp sbb lods (bad) (bad) fidivr fucom loope outsb in jb xor dec push mov jae add mov loopne mov jg mov cmc in jae icebp divb std cmc jae stc hlt jae in jae xorb mov push or movsb jns inc shl mov xor mov test jle mov mov mov jns inc mov sub call xchg je popf inc cltd jecxz test andl cli aad push cmpsl xchg jecxz arpl mov mov jne jp mov cmc out jne dec cli xchg xor sub (bad) lock out into cld cld mov cld into dec (bad) hlt ror push stos xchg (bad) jo mov jb or fsubr mov mov out cmp mov mov push aad aaa enter mov out cld lock icebp mov les sbb icebp sbb std add movsl jno insl insb sbb cmc add cmc mov adc mov mov enter (bad) mov fcomi xor mov insb add push in out loope jb call cmc (bad) dec int jge hlt xor xor leave fptan dec ja int3 mov arpl in dec daa fidiv loope insb and or fucomi aad sar jno lods mov aas imul lods mov pop leave loop mov mov xor iret mov xchg mov test mov pop popf loop cltd insb push daa rolb lea cmp outsl lods mov jno lods mov jns jnp jge lods gs pop popa jno lods insl pop je imul xor pop out (bad) loope inc pop inc lret mov xor xor cmp in xor mov je sub fisubr je adc adc jns repz sbb repnz je orl add shll xchg mov dec ljmp mov call xchg (bad) or mov fimul dec pmaddwd in lea enter sub sbb ror jmp sahf lods jns stos pusha mov jo jmp pop fdiv stc outsl sub imul stos lds insl jo movsb js fldpi fcmovbe and call pop adc icebp jmp out sub loopne mov stos test stc outsb jmp mul cmc (bad) icebp loope fldl fsts dec loope inc inc xchg (bad) movsb mov mov mov (bad) lahf mov jle sub mov fiaddl mov jl or mov adc cmp imul icebp arpl popa enter adc into mov pusha lds mov imul lock fisubr into and mov arpl cmc cmpsb lret icebp psubd mov aaa sbb mov or adc mov (bad) ja test mov cltd mov pushf jne dec test mov mov shlb aam nop daa iret or insb inc mov ror shll in mov out xor sahf jge cmpsl inc jno addr16 xor lock pop in out pop fiaddl stc rorb inc mov scas andb imul lcall std lahf inc movsb ds pop (bad) jecxz int out pop dec jae std stos lods decb xchg ss orl pop inc sar movsl inc adc movsb push movsb mov das fnsave clc bound out inc arpl mov jg sbb xlat cmpsb jns dec adc dec into cmp shll lods ja int and in mov and hlt stos dec ja cmpsb stos xchg sub data16 push xor (bad) cmc mov or xchg mov lock jo mov adc sbb stos pop loope int or jle mov inc mov cltd cmp or mov push pop out cmc enter mov pusha lock negb movsb mov popa pop scas inc xor lds decl mov cmc and adc or cmpsb add lret mov test push mov daa mov shll mov mov cmp leave mov repz (bad) mov repnz push lock je mov cmpsl insl call cmpsl dec inc jmp repz out hlt jle out lock dec or daa (bad) cmc cmpsl xlat jb lods xchg in push inc mov clc dec mov inc fistl and ss in mov mov mov pop jb sahf jbe lock pusha add (bad) fsubp out jecxz test movsb adc cmpsl jae inc mov sub push fildl mov rorl lock divb pop fsubr (bad) fcomip popa jle daa jecxz rclb test pop popf add jae test xor add sub (bad) mov leave js bound push xchg mov fistpll mov xchg and xchg mov insl xor aam mull sub xchg mov cli cltd cmc mov insb dec cmp outsl ljmp or sti mov mov jmp mov gs shlb push jg adc stos mov mov mov cltd popl add aaa dec or rolb cmc pop jg loope cmpsb ss dec push jle lock lea stos add loop aas adc cmp ss xchg push inc into xchg fidiv dec out add ljmp je in aad jg sti testb movsb sub cmp cmp add aaa or jbe push jmp pop cltd cmpl add pop jp add adc (bad) loop pop cld mov push sub dec adc fwait addr16 xor loop in mov stc mov scas or (bad) xor pusha mov inc jnp xor push dec mov xor sub cltd jb aad adc cmp push jbe fild fwait movsb and cltd jbe stos lods or leave jmp adc repnz (bad) mulb incl pop js sbb pop mov into sub fstpl imul cmp push cmp mov and mov add mov inc add push inc pop xchg cmp xor jge or push imul xchg xor lahf stc pop lods fdivrl push leave in push mov addr16 or add flds cld ja ja mov mov cmpsl and cmc cli dec lret inc adc loop (bad) mov and fisubr rclb enter std test fiadd xor out mov lcall leave pop jbe or ret test inc add fildl add nop jl enter inc push (bad) cmp stc imul cltd pop inc out prefetch jo shrb and or popa mov cmc cmpsl inc or rorl out (bad) icebp mov shrb scas int3 or mov mov adc cmp js movsb jg std mov xlat pop add cmp mov subb inc mov cltd scas in aam jl add mov add test decb cmpsl and mov mov xor inc or pop mov fidivr push lds pop icebp sub js push mov or mov adc lds jecxz dec cmpsb (bad) dec jnp cmp cld popf cld mov clc mov mul cmc add jl mul out or adc test dec lret arpl daa loope and adc iret out cmp and pusha (bad) jmp jecxz in gs std cmpsb pushf cltd popa cmpl mov push pop jmp bound mov or mov sbb push dec decb stc jno aam adc adc ja jmp sub (bad) aad stos cmp mov call call mov scas addr16 (bad) cmpsl out jl mov (bad) mov mov lea icebp hlt loope pop movsb data16 daa stc loopne push dec addr16 adc movsl adc inc sub out js xchg sti adcb sbb adc (bad) sbb insl and cmp aas std mov pop mov or ja lds out dec js jl idiv xlat scas ljmp dec add mov stos push mov jecxz adc sahf sub lret add call mov movsl call popf nop inc adc xchg xor lock nop enter or ret (bad) push aad sbb add lahf std mov arpl pushf lock sub xchg stos or jmp mov push ss ss daa fisub jg add jo pushl xor xlat jae (bad) mov add sub pop test jle popf pop dec leave cmpsl mov mov cmpsl and pop jbe movsb pop inc mov out fimul gs aaa out mov adc dec adc sbb (bad) (bad) (bad) (bad) imul cmp movsb jbe repnz adc xor cmp fidivr out enter aaa arpl cs add cld jbe lea in pop scas movzbl into xor fldcw jbe inc imul fcoms jmp lock cmp ja movsl or into cmp ret mov pop xlat mov (bad) push xchg into fnstsw jmp pop ss iret inc loope sub lret push cltd (bad) out jl out into std (bad) jno or dec push in cmp ss pop sbb in pop mov sahf xchg scas test out xchg mov stos icebp pushf cmc (bad) push sbb aad addr16 pop sets mov or mov inc adc frstor enter sbb test cmp mov or stc mov ret (bad) ficompl sub push scas in jns mov insl cld inc in aad les cld aaa jle lock std ljmp cmp mov sub xchg pop insl inc push mov mov cmp xlat loope jno out xchg fwait call push out inc and dec adc in out dec sahf jle in ret (bad) stos adc (bad) push lock rolb mov mov outsl mov pop lds xchg aam sti repz sbb mov repz mov jle js insb mulb sbb inc (bad) fwait add fadd js rol in mov adcb inc clc (bad) mov aam jno mov in xchg loope fstpl mov mov lods (bad) pop test cmp movsl adc cli add or inc sub fsts leave stc mov (bad) out movl addr16 rorb sub push arpl sbb fcmovnb xchg negl test mov imul imul orl icebp jmp hlt (bad) into aas xchg mov fs cmp push imul int in add repz imul mov or (bad) and mov adc (bad) lret pusha int xlat add mov push stc xor add mov (bad) div adc sbb mul movsb sub je push cmc jns inc dec out or (bad) cmp xchg push aad dec push jmp pop mov fsubrl jno in fist pop arpl in (bad) jno or gs testb in out adc pop (bad) mov in repnz jno xchg js mov loopne mov inc pop imul add pop and mov cmpsb mov ret enter jbe mov dec (bad) lds jmp idivl (bad) dec mov in mov jo sbb adc fldl pop pop pusha cmpb stos inc stc jns and int xchg test std je loope icebp mov mov rorl push scas adc and mulb test cmp idivb jnp sbb stos xchg aam or pop stos scas stos xchg or in out xlat mov rcl mov mov sub stos (bad) or cmp test or test push in clc add stos lret push repz mov (bad) ss jl cmp ds ret jb inc jg cmp int inc cmp sbbl add in jmp testl (bad) sti sbb test (bad) cmp sbb (bad) (bad) divl out shr clc out inc (bad) into mov out mov sub dec xor cld int cmpsb sbb jae push jge (bad) jmp call test mov mov outsl aad fcomps cmp mov std pop shl pop cmc js xor js stc repnz leave outsb jmp and std in out and add ja js jmp or pushf pusha mov pop xchg mov daa cli loope push add pusha jae push add mov arpl or es fildl mov fldl pcmpgtw add mov hlt lods xchg ja out in dec mov into dec mov fdivr mov mov xchg bound and push and and xor aad adc xor jmp arpl aam aad inc mov sbb mov iret mov or ja adc ja mov mov cld inc xor push (bad) mov and jmp inc loop icebp xor jmp jge andps xor dec jo adc adc sahf sahf sub das xchg out sbb fmulp into push je pop jo adc repz test in loope shr loopne xor mov in pop cli mov or sbb push aad call in sub orl push push call lods jecxz jae jns out testl js mov cmp mov cmp in mov pop mov insb hlt iret lods xor pop mov into stos int mov stos andl and (bad) iret add mov inc fucomp loope into pop lea cs push or jp jmp jne add gs jecxz sub push pop jmp hlt loop xor mov xor ljmp lock mov adc cmpxchg aaa mov (bad) add jae jp jmp dec mov out clc jecxz sub dec jno pop mov addr16 js jno ss jmp adc dec push icebp jl mov pushf outsl cmp repnz into (bad) mov inc jp mov sti sub push dec push sahf subb fnstenv aam stos adc rorb out pop dec mov xchg sub push mov push out push out xor dec adc mov into mov scas add orb stc out or aaa mov and in push lds shl adc test out push es or and inc xor xor xor int notl mov sub movsl lea (bad) jmp test (bad) cmc fisubr or or mov sahf add in xchg cmc js adc jnp and sbb shl ja jl pop jns mov out sahf or jo int mov lea jle cltd sbb arpl lret push push fcompl aad mov (bad) mov dec leave mov fistpl movsb orb sahf fbstp cmp je in out dec push daa imul loope push xor sub mov sbb dec imul std lds (bad) xor loop orb xchg cmpsb add test mov jae lock hlt xchg arpl fbld jge (bad) mov enter jecxz mov lea aaa loopne sahf inc and adc out mov sarb out xor out mov out mov jle lret inc inc mov mov pop mov mov lahf stc xor or rclb push fildl jo daa lods mov cmc lods or aaa mov sbb and sar sub xchg cmp mov ljmp push fcomi cmp out mov pop mov jmp jne stc je jae clc rorl jae stc jno mov aam or pushf int3 fyl2xp1 fldenv into push jno add ficomp and std mov mov jp dec fisub fcoms lret out stos and push (bad) mov test xchg or imull jbe adc or xor jo mov stos jp inc xchg pop dec ffreep in scas cli jne mov cmp xchg iret enter xlat sbb xchg aad clc xlat daa rcl js in test xlat mov roll stos (bad) icebp mov pop sbbl xor daa inc mov dec adc (bad) dec jb loope cli imul sub xlat loopne inc arpl (bad) lret mov imul mov cld dec jo negl mov ret mov pop mov cmp mov xor clc sbb jg lods out mov xchg lods mov shrl inc (bad) push fidivr push loopne icebp test (bad) jb push stc or repz mov dec stc sar rolb test idivb mov xor push cwtl push fdivl and pop and repnz sub jno cld aam xchg cmc jo pop jp inc ret add push dec fistpl lods inc mov stc test xor pop mov fstl xchg aaa mov test stos push jns in shl loope test stos mov loope sarb stc lret stos push or mov repnz sbb mov add jl (bad) fidivr nop lret ljmp mov in lods xchg add add cmc mulb sub jmp inc sbb jp pushf xchg mov xlat adc ljmp xor out test push shrl nop fsubrl mov pop xor jl insl (bad) and push ret loope ret jmp mov jns enter add cmp jg loopne pop popf xor je cs xchg cmp rcll dec adc or pop fcoms outsb fisub pusha orl push mov jmp mov bound or push daa (bad) (bad) (bad) mov stos add and (bad) jl loopne mov dec mov sti push gs or (bad) mov std mov pop dec bnd and fstpl jg imul mov sub test out iret mov negl jnp mov push and jne cli push leave out (bad) jae mov jae jo imul dec xchg adc inc icebp test jbe cmc (bad) jp mov xchg stc outsl lock int3 nop outsl stc and cltd stc jl (bad) jo frndint in sbb sbb cli icebp negb arpl cltd add (bad) stc call jmp loope jle testb call add jo and xor icebp pop jmp lret leave or cmp into mov xchg and sahf xor adc xchg (bad) cmp ds enter xchg pop loop paddb xor je lds and fsub fisubr mov fstps fsubl lock pusha aaa sar aad add jno clc sarl mov mov jno pop cltd jmp mull xor repz ss mov dec mov mov ss jmp xor mov (bad) and mov test out jnp mov push cli ss stc movsl call test xchg xchg rolb jae mov mov andl jae dec jo arpl faddl lcall and loopne std (bad) lret xchg jle sub pop aad pop adc jle (bad) jae leave call dec and outsl jne (bad) mov hlt sbb lock xor jle icebp fdivs adc xchg mov cmp out xor jne cmp jmp xor out mov xor push jb xchg xor dec test jp jns imul icebp mov addr16 xchg mov popa hlt dec xorl mov cld (bad) movsl xor cwtl mov pop imul pop jge fstpl fnop inc xlat pop inc pop sbb stc mov dec dec pop icebp sub cltd lret inc in inc pop or and add cmp and adc testl std stc add ss mov icebp adc xor repnz add les sub mov push pop std mov clc out mov fst mov leave in aas clc sub loope adc jae xor mov adc loope pop inc jmp mov sub repz mov xchg sbb cmpsb xlat shlb xchg aas sti cwtl mov (bad) cld add cmpsl sbb push in mov out jo xor xchg pop adc stos inc loope cmp mov mov dec lcall lcall jbe mov stc leave pop shlb push lahf add stc in adc insl mov jo js sub mov sti adc mov pop arpl jo mov mov cltd or xor pop out or push test and int and pop insb lea sbb sahf jns mov xor mov sub pop in and dec bound sub std bound sub mov loope shrb xor xchg (bad) (bad) push and idiv (bad) sub mov pop in cmc jbe or mov mov scas cli xchg into insl pop lcall inc push lds mov cmp xchg (bad) lret add cwtl pop mov mov adc scas sub nop mov std movsb out sub mov aam pop pop test mov stos (bad) adc jb inc mov mov sbb xchg pop leave cmp mov jl out (bad) dec sbb mov (bad) pop xlat (bad) mov insb xor insl test outsb or dec pushf cs rcrl ret les jl xchg mov mov adc jge rolb (bad) fsubr and int3 or push arpl imul test ret and push test mov mov mov jne dec sub popa mov xor or popf cwtl lahf add cltd loope repz (bad) xor push ret jno sti pushf (bad) and insb or test loopne fwait push cmpsl mov jo stos or out jmp push cmp cbtw sub push ficom pop call mov dec in (bad) push mov into xor mov mov cmp pop mov mov fnstenv xor stos in std (bad) cmc mov mov cld lret adc sbb jmp popa cli mov cmp in sub fisttp outsl pop (bad) lret jnp into mov lret daa leave pop (bad) or and rcrl into leave sub adc cmc jo popa insb adc mov lock or sub sbb mov cli mov pop fstp (bad) push mov movsb add insl adc sahf iret leave jle lret cmp cmpsl aam pop sbb lret sbb adc js mov in push rcl aad mov and loop adc mov jl aad std ficomp sarl push lcall or outsl add sub mov into sbb xor lock (bad) out outsb jno repnz cmc pop sub xor adc mov adc inc mov xlat mov push arpl test pop mov in mov mov dec call pop aas nop fisub incb mov dec and push sub pop sub cmp adc push stos loope insb sbb repz push leave lock mov cs inc push test test lret jne dec pop xor mov add dec cmp repz pop stos scas mov or call mov (bad) mov mov int3 cmpsl mov sub test pusha mov (bad) sub fist xchg popa push cmp jns pop mov call clc call cmp in or lock push (bad) mov push adc push cmpsb sub ret into test push mov aad test dec in ret call add movl lea callw mov xor lret jbe xor std test jo xchg xchg imul cmpsb enter rcll dec cld jns push out jns popa mov fimul jo call jbe jae adc pusha and sti insb mov fldl push pop fcomip outsb andl ret mov mov sbb mov (bad) dec lcall loopne and call clc test arpl decb popa std div jo pop ss lahf dec out call pop push movsb rcr mov outsb mov dec in dec test and in popf and cli cmpsl adc shr jmp or div xor enter (bad) inc adc push std sti push (bad) insb dec jns outsb arpl cmpsb sarb mov iret push insb leave lods into add out jmp jno cmp push (bad) repnz mov xor ret jmp jmp imulb aaa adc cli (bad) mov mov call cwtl stc dec repnz fnstsw pop in lahf cmc out ret mov aad arpl addr16 push lock adc mov mov out dec fs test mov neg adc imul sbb xchg icebp mov mov and mov insb ja xchg cmp cmc sub movsl lock (bad) and jno push sbb js andl stc das mov fsts jno cmpsb mov cltd cli dec mov adc push jmp mov cmc sar mov fisttpll lock stos gs sub mov jmp sub pop and mov push icebp mov xchg cmpb das imul loop sti stc imul mov inc push hlt jae push aad push out shrl mov arpl jae sbb sti cmp mov pusha jge mov mov pop int or int3 (bad) sub dec cmp sub aad mov mov js adc mov gs pop imul lahf std xchg fnstcw icebp sub test jo mov jecxz jne pop rol icebp out sub xor stos add xlat mov cmc jl fcoms mov mov push jne enter xchg (bad) sub inc mov sub inc in clc sub add call loop aad or ds int3 pop or mov fisubr lock mov cmp adc fsub (bad) popf scas xor cmp cli je mov repz lea insl rclb out js int test movsl enter mov cmpsb cmpsb jl mov push rolb fnop jns mov lret mov out out add sbb fs lock xchg adc pusha jle sti popl test loope xlat imul test jg stos xor sub push jmp pop lea mov stos leave xchg mov jae mov ljmp stc loope je push les sbb push add out mov xlat lods pop pop mov imul inc push mov (bad) out add xor ljmp xchg (bad) mov cld ljmp jecxz push add mov mov cmp jne xchg jne rcr (bad) repnz or shlb pusha lods dec cltd ja push bound testb cwtl mov jo in jl sahf cmp test sub pusha neg sar (bad) and cmp mov and mov scas dec or loope in std fdivl and rcll pop cmp adc mov mov add sbb cmpsb lret jl mov ret jmp aaa mov pop mov mov repz leave imul aam fidivrl jne lahf je jae add mov jle aas or inc cmp xchg stos mov xor mov or fcmovne jg mov push pushl jbe xchg lea xor mov out jle dec jns ror pop and xor jno rorb fucomp pop mov loope out xlat (bad) stc bound xor in jns mov mov adc es adc mov pop jns lods adc mov jno loopne add jo push fwait inc jae (bad) loopne movsb xchg loop ss mov and clc pop jp stos out push loop fimull out in stc fcomi pop mov cmp ljmp mulb frstor fidivl scas mov sbb dec nop loope add ljmp add inc inc jno movsb (bad) xchg popf ficom mov lock popa or leave (bad) push or in mov (bad) mov add xchg mov nop enter add jno push mov fsubrs cli sub mov subl cs icebp cli jp ss mov inc (bad) mov adc iret scas pop shlb inc jnp popa and test data16 ss adc sarb insl and ljmp sbb loop ficompl js mov loop cmp mov data16 cmpsl push into mov cli ja xchg adc mov add adc out and lock pop inc cmp in inc stos insl je mov sbb add pop jne jne jl movsl xor xlat xor loop pop aad cwtl dec mov xor mov sbb loope in inc cmp mov lock xchg inc sahf xlat pop mov push stos cmp or jo imul push loopne mov sbb arpl insb movsl lcall jp mull xor dec sub dec adc dec (bad) pop mov and rorb out stc (bad) and es incl leave jmp lcall dec and sbb pop inc insb test sub xor lahf mov insl jle cmpsl outsl scas jecxz mov rclb pop mov fnsave in rclb mov stc cmpsl icebp dec mov in cli inc add mov scas sub in jmp loopne out daa in out jo (bad) out inc cmc repnz hlt push cltd jnp loopne outsb test cld (bad) mul xorl std mov clc push jne fdivl (bad) repz out aad (bad) jns cmp mov arpl jo icebp clc mov mov push aam mov jle lock xchg stc pop xchg mov out rol (bad) test cmpsb adc cld add xlat mov mov pop adc mov or push sarb into xor and repz ror clc popf mov mov fldl mov test pop push jl idivl or add xchg jmp mov mov mov mov lret outsl push clc xor push pop test xor add or mov mov mov mov and ss pop xor pop aad push popa jno insb outsb and adc aad cli (bad) pop xor mov lret and jmp xchg std sub movsl es mov lret movsl aad sub sbb jle loopne mov sbb sub jmp outsl jle std rorb dec jle mov std mov push cmpsb fucomp mov (bad) and das test add imul lods push (bad) cmc xor leave cltd cmc cmpsb mov out movsb (bad) scas push cmp pushf push adc stos sbb sbb ret sub shrb es cs out enter mov mov out cltd js xor push sub jo imull pop push iret out mov pop lret pop js and pop xchg js (bad) xchg push std mov mov push add in mov push lret pop negb xchg jo add lock in jno mov add out pop mov stos sarl add jg sub pop add arpl iret aas fwait leave inc fnstenv cmp rol decb std pushl mov pmaxub or scas jmp or jno (bad) add imul sub xor (bad) dec xchg movsl insl mov cmp dec xchg mov icebp insb cmc hlt icebp dec add xchg or idivl (bad) hlt dec push xchg push sbb mov and push adc leave mov jecxz mov rclb xchg (bad) mov mov sbbl and test test sbb pop imul mov andl std fisttp aad xchg mov adc cmc xlat push mov jmp pop xchg push inc jbe fsubl add into out ret xor xor mov repnz test xor cwtl jl or enter jg adc pop sbb shrb out inc imul sub mov iret ds push push sub lods mov in cmc push fwait cltd in test idivl xor repz sub stc cmc mov or cmc xor notb pop (bad) jb jns xchg aaa jmp mul push add xchg sub xchg mov or test lahf idivb (bad) ja inc mov fs adc into or iret or dec sub jns aaa loope lahf es scas xor adcl or cli or jge je (bad) push mov loope xlat js ss pushf and cmp pop cmc (bad) aaa cs mov in ficomp je call mov je in (bad) out xchg divb xor mov fisubl push and mov pop mov xor fwait or add aaa inc mov in xlat daa mov mov aad mov sbb sbb inc fsts jmp mov jns adc dec cmp out xorl loope popf out mov mov (bad) jb lock xor inc int3 je cmc mov dec adc dec or lock cmpsb (bad) aas add addr16 stos mov cmpsl cltd les or or jl idivl aad mov cmpsl loopne nop mov push push popa fs into pushf faddl mov movsb or xor sub xorl inc jns shlb and movsl mov mov sub leave repz aam and (bad) xor push (bad) mov dec pop adcl mov xor shrb decb aad inc (bad) ret pop mov cli cmp fcmovnu stos hlt sub or repnz and sar dec lock push or cmc sub jns mov imull icebp (bad) jle or stos xchg mov jbe jle std cmc (bad) movsb add cmpb mov (bad) rcll cs xchg in icebp roll testl ss cmp lods jmp xor fsubp es insb add pop push cld lea add fdivrs push ljmp clc cltd hlt fnstenv ds mov sti rolb push in or mov push pop mov daa out fldln2 jno xor arpl mov mov call xchg jg push fs jo jmp cmc (bad) fimul or cmp xchg jle cld outsb aad out shl or fisubr pop not inc adc std movsb dec out loopne dec mov icebp dec jmp flds mov xor lds divl jmp hlt adc mov gs stc incl imul cltd inc ljmp lock add mov and xor lock push push in xor lret in (bad) adc and adc in sbb adc nop xchg xchg or xor sub insl push pop (bad) ja in mov inc js (bad) mov push mov out lret cmp push push fyl2xp1 sbb mov mov jnp je pop mov jo mov dec push adc add mov cmp test and jne ss pop mov andl subl stos jp inc repz or xor popf cmpsb pop arpl fdivs cmpsb sbb test push sahf enter lods dec enter and cmp xchg xor dec push cmc gs loopne jne cmp mov adc out scas int3 xlat les xor jbe jecxz push orl test jno mov test xlat xor push add and adc mov fldenv add in xor mov int repz mov and dec dec jl (bad) faddl in scas rorl (bad) (bad) jg mov repnz add or fmuls mov xlat mov mov or in out aam mov fucomp aaa adc mov pushf int dec cmp add scas or notl stc rorb jno fxch test jmp dec push loopne sbb xchg (bad) xor fsubp clc lcall pop add daa add mov push decb sahf repz ljmp adc fs fs xchg jne sbb push or push inc or adc mov jnp or mov test dec stc (bad) into cmp les xchg add dec push rorb mov rcrl ret (bad) imul mov lea lock call push adcl bound mov shll mov aam mov repnz xor sti cmp pop ficompl sbb out mov adc jb adc std adc mov stos out cmpl scas (bad) (bad) sub add rclb sbb adc cwtl scas xor in repnz fs mov int3 push sbb push mov mov test leave mov add and sub adc mov (bad) iret jmp mov and cs and rep xchg sbb jno shrl fimul ja adc mov arpl push jecxz cmc push dec xchg ret mov cmp jle loop sarb rolb mov xor imul sahf shrl xchg xor sbb arpl enter xlat addr16 dec mov repz cmp (bad) (bad) sti dec lret xchg xor cmp xor cmp jg mov mov mov lahf fldenv mov sub insl in and cld push rcr test or sub js cs out sub jle adcb std mov loope,pn jg (bad) cli inc enter and add or das mov adc xor push dec push pop aam (bad) mov pop cmp out cmovp ss out rorl mov daa into aaa test mov push inc xor cmc insb jbe mov mov js sub sub inc cmp sub sub fldenv pminsw daa add adc fmull icebp mov test pop xchg and (bad) mov js push dec pop fsts lds jecxz push mov sub leave roll lods xchg xor inc loopne (bad) lock into mov dec test mov mov mov mov pop sub xlat adc inc ret bound mov popf xor cmpsb movsb (bad) sbb sbb dec jmp scas mov repnz add aad dec jns jo mov cmpb into push mov shl in stos adc mov sbb in mov xor sbb aas and jns enter aam and loopne std loope js xor xor stc enter repnz imul stos stos aaa stc mov xchg (bad) jmp cmp es mov aaa push mov sub aad icebp inc in ss add imul decb sbb push mov cmp data16 mov push out sahf stc stos mov mov test push fsubl cwtl jmp pop sub stos mov (bad) jbe lret mov cmp pop dec dec fimul dec adc mov push cmp (bad) sbb leave push jmp dec fmuls mov add pop jmp out mov cli inc push ror or fstps stos stos jb add or repz pop mov mov lods cmc mov push adc mov lock das movsl push push fsubrl push testl mulb jg or dec cmp jge lock push iret cmc lock sbbl rcll dec inc lds push call insl stc fs out jae or loope sub test cmp ljmp jl and pop loop cs xor inc xchg jge leave push dec mov xlat lds out icebp into xor (bad) out sub leave sarl pop fs arpl mov mov sahf scas stc pop or shrb push pop lret fcom sub mov inc mov sub ds iret pop aam mov fsubs test movsl jnp push fsubrl sub adc js,pn ds mov in xchg xor iret stc sub dec xorb (bad) std jmp adc dec into test (bad) out clc pushl inc mov mov cmp xlat and jle mov inc xchg out daa or xchg cltd add fsub daa es arpl push ljmp adc (bad) add call sub dec shll jle repz repnz test mov inc cmp hlt fmuls add stc rcrb cmpsl insl aaa mov (bad) mov add or popa sub add fcoms daa ret push inc add jae ret (bad) aas mov jmp ficomp dec and jbe mov cwtl vpabsb rorl fdivl cmp sbb xor lods incb icebp xchg add and xchg sbb and fldenv cmpsb lahf mov out adc push mov adc adc push subb mov into adc mov leave or out dec test in dec icebp mov adc add dec xor mov rcpps movsb hlt fldenv enter and test jo push leave jns xor dec lcall pop sbb inc (bad) jg add push or mov repz adc adc std mov sbb dec add push cli std sbb mov ss lret int3 das mov rolb movsb push mov cwtl dec mov mov inc out jge inc int3 push ror fisubr mov lea std nop out mov jo jecxz cmc push daa loopne adc aad pushf push inc add cltd ja jecxz cmp out lea pop push pop (bad) or mov mov cmp fidiv pop mov jno leave incb and xor cmpsb adc test mov ret movlps xchg (bad) cltd int icebp aad sti fidiv mov adc fwait jo jns mov and lret sub lahf adc push sub mov cmpsb aaa and jmp std sbb negl fucomi cmp cmp sub mov mov (bad) or rclb lods je jne mov add lea or bnd sbb lahf imull adc call mov fstl int3 jno mov pusha jbe ljmp mov mov fstpl mov sub mov test ljmp or jl jl repz pop add daa je mov hlt jge (bad) jne aaa divb pusha fwait in (bad) cmp test sub std (bad) daa mov jl mov mulps lcall shld fidiv ljmp into (bad) ja repnz popf or dec or cmp inc (bad) stc cmp decb imul hlt dec mov jl fidiv (bad) dec push pop jbe outsl hlt test mov jne add mov into int mov aas xchg mov clc (bad) mov shr adc in cmp movsb cmp in lea push popw push jge cmp or movsl adc jno movsb sbb or jle sub mov (bad) xor (bad) ficompl and jb test sub and and xchg xlat lea mov jle cmc fidivr into cmp test cmp arpl push pop data16 jmp mov je cmp mov cmpsb out push lods mov xor mov push sub insl cmpsl push jnp dec int into or jne pop pushl out ljmp or addl or pop (bad) dec jecxz jo jle loopne subb and and cmp shrl jge sub sub mov lcall lds into in mov cld sti push push jecxz mov hlt mov xchg inc je mov jle gs push daa bound and lock adc mov lea cmp cmp aam decb push inc and pop mov inc gs mov aam xor subl enter mov hlt or cmc test aad test loop loopne or adc pop pop imul imul xor mov jns dec pop push ljmp pop (bad) ret sbb inc jge jecxz mov mov cmc cmp inc addr16 jge mov repz notl imul rorb loop push fbld jmp ror repz data16 jg add iret test iret lock int lret cmc idiv test mov jno inc fldenv (bad) cli jb mov aam xor mov mov icebp (bad) rep sub mov aad lock (bad) jg or in lahf jne push xor inc mov adc test mov mov dec add cmc cmp pop ja mov or out adc imul dec mov pop int xlat jecxz repnz ss dec mov jnp sub mov (bad) fstl call push jo pop (bad) pop jne aaa cli jae pop push jl fst out test mov or pop adc and rorb xchg mov pop fbstp jno repnz mul pop pop or stos mov mov xchg shll jnp jg sahf out imul bsf test add xor (bad) shl jmp out adc xchg test xor adc loope jl inc lock pop rcll fiadd jmp leave fdiv adc jbe xchg popa jecxz mov stc sbb cli gs imul fmul ja inc enter cmpsb sbb dec (bad) dec cmpsl (bad) rolb or cmp int3 xor push test std stc jne div lahf loope sar orl add (bad) int3 (bad) or mov loope jo aam std xchg sub push out lahf jmp lock aam fs daa push in imul jmp sahf (bad) dec sbb fdivrs mov mov lock xor mov inc mov fsin cmpsl cli jp pop cmp out sbb inc je mov add test add sarb clc aad insl nop/reserved fbstp push popa mov mov jns loope push sbb aas pop call push mov jge loop inc inc (bad) popa push mov into aaa sub arpl pushfw fcmovnbe (bad) fisub repz repz adc xor inc pushw pop sub pop dec mov mulb lret xor aad xlat insl negl or daa insb or jle test jno adc adc jo fcoms pop repz (bad) mov and cmc test inc add in mov int xor add mov xchg into and out icebp loop dec or sti sarl (bad) push xor lret cmp repnz clc mov and cmp shrb adc mov cld icebp mov test icebp mov test or push mov sti movl popa aas xor mov pop fcoml out sbb aas jns test jl (bad) hlt xor xor imul out inc xchg addr16 pop aaa jle or (bad) in cmc out addr16 out (bad) or or push iret (bad) imul pushf imul insl ss push xor pusha mov jp mov dec push push add ret sub sub and adc add cli testb sbb pop ret dec jmp out aaa mov jo jg mov hlt in jecxz loop mov jle adc fdivrs add test pop cmp xchg cmp sbb lcall imul (bad) pop test xchg cli lods xchg sub clc lahf or pandn scas test and sahf mov inc mov jbe hlt dec cmpsl (bad) cli mov adc fildl jl sti and (bad) ljmp xlat mov imul lcall mov fst cmp icebp mov into xchg outsb cli and fnstsw xor xor std aas jmp jmp and gs js mov mov hlt jge jmp sub cmp fucomip or xchg lea aas jmp fisubl gs inc jb pusha jp fidivrl (bad) jge out jle aad out imul jge cli loopne mov insl gs mov xchg aad jb pop ljmp jno jmp mov jecxz call xchg xlat cmpsl popa sub adc lret icebp movsb cmp imul jl or int3 mov imul and sti and lret mov test repz arpl jmp enter ret adc pop test xor adc cmpb bound ret ret xchg add enter popa test lret aad icebp push mov test popf shrb sub mov andb or cltd outsl ficompl cmpsb fwait mov or imul pop icebp push fcoml jbe xlat stc in xlat xchg aad mov lahf push fwait (bad) icebp adc or hlt push out xchg cmpsl in in jno mov adc inc aas jle cmc js mov das loope out (bad) loop jb mov sbb sbb push xchg mov fldcw addr16 and mov jecxz movsb pop lock sbb iret lods popa cmp cmpb cmpsl clc fbstp aad popa and jecxz jle dec push testb push mov jle dec inc fld1 icebp xchg dec mov xor (bad) xor inc repz sbb or (bad) mov mov push jle xlat (bad) and mov or xor aaa add fstl out jo (bad) divl or jns adc test sub daa or hlt push mov adc adc pop adc cmp mov leave icebp jbe rcrb test sbb or aaa xlat dec adc mov pop fcmove jl cld sub pop gs repnz ds fiaddl jo ja pop xor push aaa leave mov into lods aaa add dec lret mov out aad in pop mov fcmovne cmp insl idivl sbb into add push mov rolb cmp dec dec adc incb imul getsec fs mov push pop loop dec aaa leave xor inc or xchg test movsb sbb (bad) jae sub dec out enter inc cmc mov or test xchg or add add (bad) inc icebp mov lcall mov ja movsb sub notl adc adc add xor out (bad) or dec stos call stc push mov inc add pop repz sbb cmp imull (bad) and xor lds scas lods inc mov xor mov mov out pop mov cmp sarb jmp incl decb jp pop testl mov and ljmp je cmp mov adc sbb (bad) mov mov gs mov gs lock das (bad) cmp loope mov inc into and jne inc (bad) mov push idivl xlat mov in icebp outsl vcvtpd2dqx mov lock jb sub jne in js das mov (bad) dec into dec stos insl jno pushf push cmc dec daa jns sti cltd lret dec (bad) xor mov jb lds addr16 jg xor add jb jo loopne fiaddl mov call add call pop mov sbb rcll and mov or xor cs adc popf in or (bad) insl xchg inc jae in cmc testl lcall mov jnp (bad) divl pop jnp xchg mov lahf jecxz out div sbb mov lahf push cmp (bad) out arpl mov cs cmp outsl fistpl into mov out dec jo xlat jo and sub xchg (bad) mov xchg pushf outsb mov push mov jo jle popf movsb mov and in enter jmp push inc inc push fstpt mov adc sbb mov data16 std jne dec leave and daa or and test mov (bad) xor je jl divl adc aam and add cs (bad) mov enter jl (bad) dec into xchg and idivb xor mov sub loopne (bad) into add cmp sbb mov mov arpl xor pop xchg fnsave idiv int mov fcmove xlat mov into dec inc lock neg mov pop and icebp cmc mov rorl and jno,pt sbb cmc xchg addr16 out push (bad) flds add data16 cmp sbb push cmp sarl aaa or mov cld push cmc cmp or push add stc sub adc icebp mov jbe cmc sub divl stc or jmp (bad) (bad) repz inc sbb (bad) aas mov or cli jecxz cmp jle je cld pop es push mov cmc daa xchg (bad) xor lods lock (bad) xor or icebp mov cli fs aaa push mov xor imul sti cmc pusha sarl jne or rorb ljmp jle cmpsb dec push leave js (bad) cmp ds clc test jmp stos (bad) cmp loop imul pop cmp imul in adc outsb and mov pushf rcl jne stc scas popa into aas jle stos aad js or or cmpsl push mov dec js hlt (bad) xor pop test int3 push cs sbb out (bad) out and mov enter (bad) jb stc push add out out rcl ret (bad) push stos ss aad cmpsl stc mov mov lock dec test (bad) sahf aaa popf push jmp pop shrb adc xchg mov inc pop jg dec or lret dec clc out jno outsl jecxz shll aaa movsl or xor icebp cld xor xor les adc test adc push data16 dec addb push jno insl cli cmp lods in ljmp loope add stc loope add insb stos stos push dec cmc jle dec xor (bad) popa in movsl fistpll cmp push dec mov cmp in pop clc dec (bad) repnz xor jge fadd dec mov in cmpsl fstpt notb insl jb mov and push popf sti (bad) repnz push cmp mov mov push jmp cmp scas add pop je jecxz daa dec pavgw es jecxz and bound addr16 aad jmp (bad) jp jmp lock ja jbe jbe in mov and stc xor lock mov pop mov mov mov clc mov xchg pop jmp jecxz mov inc fadds ja iret sub mov pop ficompl int3 mov (bad) or adc bound shll hlt dec sub (bad) aas dec sti and sarl cs jge lock (bad) icebp mov pop xchg mov sar xchg stos loop xchg je cwtl daa mov leave std icebp fcoml lret mov ret loope and sub in jo jge cmc repz insb mov mov mov add dec lods jns scas jb ja lock dec in daa add imul push dec xor add xorl std testb push aad sbb (bad) jo fadds cmpsb iret hlt nop fsts out stc loopne lock rorb into or cmp jns sbb sub insl fisubr (bad) mov test jae mov iret xor pop pushw cs les int3 pop jecxz pop lods call fsubrs (bad) lea loopne aas push cmp add hlt mov aad cmpsb or sti fbld gs mov das bts mov popl (bad) aas sahf pop out mov data16 xchg push sar jb pop mov rorb mov fistpll lret add cmc pop sbb ljmp ret pop repz ret push pop lahf jbe loope push test repz cmpsl jo test or pusha loope or sbb (bad) jae or popf aas aad mov (bad) test mov (bad) addr16 cmp stos stos pop jecxz jmp push push test mov in jne cltd (bad) (bad) jmp push mov ja and inc mov dec in jno pop int3 aas sbb xor aam fldcw icebp nop dec test rorb pop clc adc leave lods ss push jae out aad (bad) jno push mov in stc mov stos mov call bnd orl stos outsl adc into and ja xchg fnop or icebp rorb sub mov stos sbb mov sub ret rorb mov int3 dec mov mov xlat inc out out mov call cltd jns cmc lret add or (bad) xchg imul sub aad add add in mov mov (bad) mov dec aad mov jge mov mov aaa jl and sbb out ja ljmp xchg fstl xor jns jno mov pop jecxz mov jno sbb or xchg loope sub dec or pop jne pushf mov xchg std das xchg in sub mov aaa jmp mov jo arpl stc shrb mov adc lret clc add jbe jno sub cmp inc fwait mov stc adc adc cmc pop xor jmp push das jne sbb hlt mov das clc jne loope (bad) jnp cltd out cmc mov fs std inc rorl into in or loope loope lock adc and into call sub mov int3 mov and lods xlat fldln2 pop sbb cmp jnp cmp test xchg icebp jno call arpl call add (bad) std fcom icebp inc jne pop jne or clc cmp jnp add sbb rol xor gs clc mov stc mov in mov out jecxz bnd push xchg movsl push mov pop xlat jle stos cmpsl dec xchg xor xlat outsb fistpll sub sub (bad) mov mov cmpsb fnstenv pop rcll mov out icebp int3 out cmp out jne popl jmp mov (bad) sbb xor jmp mov out jmp test mov movsl sub jnp inc out shrb sub jg cltd cwtl mov sub aas pop sahf mov call mov bound and or mov or adc xor repz aad cmpsl mov lock ds fstpt dec or push aad jnp sub (bad) clc jmp and cmp mov cmpsb sbb mov cmp xlat or add test push push in mov add mov xlat imul test hlt jo icebp xchg jns adc xor leave gs shr lock pop imul xor mov sub pop cmc pop mov mov mov mov pop mov xor fldenv jg int3 (bad) ds es cltd pop adc xchg test mov xchg push dec mov push cmc mov add imul xor scas jl loope dec in pop rol jne fstps movsl ds aam popf (bad) mov xchg clc or push push mov inc mov cmp push adc dec push incb movl or gs mov dec pop lret jae xor or cmc mov xlat iret in cmp jns jne das je pop xor (bad) idivb mov push cmpb jmp mov mov ss icebp (bad) jne inc test hlt imul adc adc xlat int aad test gs jmp mov sbb xor mov aaa (bad) repz mov cmpl out (bad) jl cli call lea cmp ja cmpsb xchg cltd test not imul lahf icebp cmc mov cmpsb arpl jno cmpsl cmp sbb mov (bad) mov sub fldcw dec cmc loope or jno aas in jmp inc arpl (bad) call mov shrl clc outsb aam shr les push push push jns mov js cmp clc clc in stc mov inc lods rcr adc gs mov jne fnsave xor or iret xchg mov loope testb add test mov mov icebp dec inc sarl idivl mov mov sub imul mov jmp fidivr cmpsb call leave cld xor jno lcall fdivs int inc push push mov push das js xor or mov iret jb (bad) cmp xchg mov mov inc lods scas push lea dec call xchg lods imul mov mov out fwait (bad) mov jo lock out (bad) sarl sbb lret aam (bad) xor call adc rcrl mov fs int int3 add sbb ds push jp jns shlb mov je scas mov jg cli fild push stos and int hlt int3 inc leave cmpsb icebp js test in sarb lcall mov push and sbb les cli lret push xor xor cmp mov mov fmul movsl jl imul in mov mov jno leave push icebp insl test out mov or icebp inc adc fstp pop ja mov mov jno mov add int3 mov mov icebp es mov mov leave jns rcl add push icebp stc into jg cmpl jno cmpsb push cwtl mov jge jno mov nop out or nop test jle fidiv xor xchg or pop sti movsl ret call sti cmpsl movsl (bad) icebp in mov mov xchg ja or out ret insl lock push inc or sub push dec cmc dec mov or sbb jbe pushf sub xor rol inc or pop sbb and push aas sub xor lcall stc adc div rcrl cmc data16 xor in mov in jecxz push push repz jne gs icebp test (bad) push mov adc pop mov xchg jmp pop fsubl push and pop hlt jmp cmp dec jp xchg xor popa push decl sbb mov insb lret mov jae inc lock loopne imul jae call fnsave leave call mov clc in std inc stc dec das hlt jmp loop in mov icebp sub mov notl lahf xlat adc mov inc push or xor cld mov push xchg arpl ja into les or mov std imulb int3 popa mov icebp xchg mov xchg clc test or imul mov jo jg jne test in cltd lock test out or dec dec insl or xchg sbb movsb jno mov cmpsb dec xchg mov (bad) enter pop jne push ja mov push mov loope and cld dec call xor push dec jb stos push stos repnz xchg jne push fstpl lock push mov or into push leave sub pop lret jmp movsb adc lahf addr16 jp (bad) (bad) call das jg in cmp int out dec jne fsubp xlat icebp sub icebp cli out shll fs je cmc push jmp lea jne call xchg add (bad) outsl lahf jg pop loope jae sbb cmp xor and rorl daa (bad) ja push inc cmp sub sub adc ret cmp inc xor enter push dec (bad) adc out add out jo adcl ret hlt push sahf loope inc std xchg or or (bad) xor sbb pusha xor pop inc jmp push bound cmp cmpl scas lock lods mov push pop xorl fisttp or adc nop mov mov inc xchg xchg jecxz dec push dec je mov push sub push fisub test cwtl daa js jo jl lds pop xor jle xchg cmp push cltd add leave arpl cmp fwait mov jbe adc (bad) packssdw (bad) mov dec pop fcomps ret dec sarb loopne xchg aas adcl jnp dec and int adc fcoml scas lret mov cltd push repnz pushf fildl lret adc in mov repz dec js lea fimull iret mov mov jbe cmp nop (bad) lret xlat push dec sub xchg xchg insb jae pop rorb lock jb icebp lods mov cmc and adc in fidivrl mov loop out pop ljmp adc jae (bad) daa clc xor aad lret xlat call jp fsubrl cmp xorl in xchg sub cmpl jecxz loopne jno nop or cmp imul hlt je imul xlat cmpsl pop sbb lods xor fsubl adc pop sbbl push js stc hlt xchg lds xor mov stos (bad) (bad) sub js inc fisubl popa pop xchg cld inc andb ret aam iret (bad) push cli jno dec push gs sbbl insb jp mov dec test push inc and aas loopne aas cmpb lret stc or inc pop mov jae pusha lods push push dec jns sbb enter sbb mov jge cwtl movb pusha lea jne (bad) cmc bt mov cmp clc bt jmp jmp fisttp lret xor ljmp add and sbb fildl das cmove or sub or add push shl adc icebp xor pushf sbb xchg jb stos add cli inc xchg (bad) into dec cmpsb sahf mov mov loopne idivb and jmp adc outsb jno xor xchg or cwtl dec aad std loop xor loope out (bad) out (bad) enter fsubp xlat into adc inc push mov inc mov pop mov test je add push jne jb pop inc add fnsetpm(287 cs inc xchg pop out jp,pt xor fldenv jno jbe rclb fisub lock test lds aaa cmc loop jnp lcall cli or lods adc pop xor add outsl loop out shlb inc cmp loope add (bad) xor dec bound ss inc push mov loope push jmpw sbb xlat and mov dec out (bad) dec test jae add xlat inc jmp int jecxz stos push adc insb repnz mov and popa mov mov out cmp xor push mov inc pop fsubl dec xlat push pop lea add pushf call mov lea jmp sub sub pusha movw cmp test cmp lea pusha call clc rol push not jmp mov xchg insl icebp shr cs cmp enter outsl jg cmovs shrl dec adc pop xchg jae cmpsl push mov (bad) fcoml cld aam fcomip jl inc aaa rcl insl ret mov inc sub les in imul cli sub dec out or xchg push les out fsubl outsb jg inc jge xchg mov inc call (bad) faddl adc data16 inc popf scas sbb push mov xor shlb or push sbb sbb sub ret sbbb pop xchg jae jl mov into mov push add mov cmc mov mov push mov mov out jo or and decb lahf loopne cmc pop jno jno inc cld data16 test lds pop movsl cmp dec or xchg and les lret aaa call lret je movsl cmp mov movsl jnp in or fmull roll ret daa mov fist or insl (bad) roll adc jno jge jp (bad) fstpt mov mov stc xor fcomip sbbl insl inc js mov jg xorl das pop (bad) jmp stos adc sbb cs adc (bad) aas pop sub mov pop mov outsl lahf add pushf pushf pusha movl call call add dec mov push mov push sbb (bad) xor push jmp repz inc adc pusha pop xchg xor (bad) loope mov scas ljmp call dec pop mov out das push mov xor in in cmp xchg push roll mov jl and dec sbb int leave push (bad) idivb (bad) pop sub pop call inc out pop mov lods adc cmp dec (bad) int inc xlat aam mov ljmp push imul (bad) jmp and mov dec repz lret mulb mull or std sbb jno mov sahf and stc or sub sub xchg jmp sub pop addr16 inc add xchg je pop (bad) cmc push pop inc jp mov lods sub fldcw fimull cmp sub stos sub dec mov push stos and outsb loop sbb or addr16 (bad) in (bad) mov mov pop (bad) mov popa mov ja ja or or and fs scas loop fninit in sbb jecxz movsl mov and hlt fldl inc mov mov jle fstpt pusha jge int3 pop loopw test and icebp int in jbe inc pop (bad) push xchg cmpsl sbb lcall sbb sbb jle and scas pop cmpsl mov dec call imul imul aaa inc jmp dec push loopne sbb movsb cmp or stos cmp mov test daa cwtl daa mov and mov jmp mov arpl rolb call cmp ret aam mov pushf cmpsl std (bad) push loopne cmp outsb nop call and je dec and jl push cmc lcall and inc pop (bad) mov dec mov mov lock fmuls scas xor pop dec mov hlt and test jbe,pn rol cli cmc add mov movsb sbb cmp popa xchg jb ja lods lods mov mov xchg mov test pop xor fs jne bsf shl cmp push mov cmp bt bt add cmp movzwl data16 testl call pop (bad) fmuls xchg sub add dec cli test mov cmpl jns pop imul iret dec push add xor jecxz jp popa jb fsubrs dec rorb and mov mov (bad) jl imul add cmp stos mov loopne cmpsb (bad) dec mov sti stc push sbb mov mov mov sub in ret sub aam sbb aaa mov add (bad) icebp mov test into pop jnp (bad) pop inc lods jae pop insb cltd sub stos mov std loope out fildll xchg mov pushf pushf pushl pushl ret call pusha push lea jae call add dec outsl arpl inc insb insb outsl arpl jmp add inc gs outsl fs gs imul add test add stos int3 pushf not movsbl mov movb mov pusha movzbw call cwtl insl mov (bad) std loop fisubl mov mov sahf ffree cmp lret imul int3 mov mov xchg or pusha iret push push popa mov out pushf jg push jle pop pusha ljmp dec ret fwait mov aam enter push pop lods mov push inc push fiadd and test clc insl rol jg rorl popa lds push add jg dec flds test insl popf popa aaa (bad) sbb xor fdivl sub cmp stos xchg out and aas jg add (bad) mov out emms pop cltd xchg sarl cmp sbb sbb push xchg cwtl mov (bad) ffree fiaddl pop sub inc mov repnz xlat test out cmp cmp mov cltd dec mov (bad) std pop add lds jno xchg jmp pushf jmp movl lea jno pushl push mov push pushl ret xchg bt sar push lea aad rcr sar movb sub ror call xor pop inc fwait mov call imul jle mov icebp dec cld mov and mov pushf lods outsl (bad) mov pmulhuw test jmp mov mov bound pop ja mov pop leave push data16 cld push iret mov lret and jg or insl adc sub int mov cmpsb icebp lea cmp jae aam scas jmp xor add sahf pusha mov pop add or dec push dec aas addb xor cmp inc adc movsl jno test mov add inc mov mov insb and add inc or lcall push or sbb cltd popf loope mov and loopne imul or pop jecxz adc fsubl and cmp add stc (bad) lock jo test shrb lea nop push jge out dec mov push test movsb icebp int mov mov pop fadds dec jbe adc (bad) das (bad) add ss (bad) (bad) jno test add push pushf pushl ret mov xor cmp clc stc test neg jmp push icebp out pop mov jmp cmp push push dec jne leave sbb inc stc cmp mov fbstp push mov mov xchg or xor test movsb stos mov addr16 mov dec xchg in or rcrb push jnp test lret and or pop test xchg jno jae dec inc cld or insl xchg mov je dec and fnstsw nop into int enter scas push fs rorb jmp bound push push ljmp lahf movsb bound shlb inc clc inc add mov fildll enter (bad) mov les mov (bad) push mov jne lds jo sub inc mov xchg (bad) lock cld push cs jp adc test fcmovnb aam pop cmpsb mov jbe mov out mov movsb jnp lods mov mov or arpl mov cmpsb mov xor ret pop addl cmp jnp fs cmpsl xlat pop lods xchg inc sbb sbb js inc pop push xlat jmp inc test sub pop (bad) mov inc lcall rolb mov cmpsl dec mov dec lock add jl mov sub scas movsb adc pop or sbbl pop repz mov mov cvttps2pi adc sbb or (bad) jb mov pop xchg rolb add and xor mov rep bound addr16 pop mov pop (bad) dec inc mov mov inc sbb call ret pop addr16 lahf fnstsw mov mov and stos dec nop mov adcb pop adc out lods adc push in xor out cmp push clc int3 and xchg imul jb adc push bound clc cmp cltd leave ret mov jnp (bad) jne push std push call (bad) push push scas lods stos jle cs dec icebp add mov lods xchg out out andl sbb (bad) and xchg push loope push and scas mov xlat xchg fadds add mov xor ds icebp faddl roll inc xorl jp jg scas lahf sar mov fsts iret sbb and jg sub inc fildl pushf outsb nop add and dec sub mov jns aam es pop fs movsb iret mov adc incb fdivl fcoml ss gs add or add or arpl push jl lcall mov clc dec and cmpsl sbb add fwait or or decb out add xor xchg adc mov repz (bad) enter out insl adc ret dec mov jno orl pop mov adc push lea push in xor sbbb mov fbld cmp xor sub xchg ss lock push pop ja sub sub xchg inc bound mov mov or ror dec xchg mov jmp andl dec lock sbb mov in inc aas push pop add xchg dec sbb cmp or sbb xchg add insb push push push dec fsubs mov lods inc clc icebp in adc inc int jb pop orb es (bad) enter inc pop fadds sub shr mul nop iret mov aas aas adc add cmpsl pop aas pop mov sti add mov int daa mov mov sbb nop out incl in xchg dec ljmp jg hlt loopne mov cmp outsl (bad) cmc sub mov mov pusha ret enter insl jle jbe adc adc sub jne fisttpll mov rol fucomp dec repz mov or nop dec jecxz bound lods shlb pushf mov popa jno jg repz movsb fucomi popf outsb cmp xor jns pop arpl arpl lahf lock comiss loopw jmp push lea jne jae cwtl push jns mov and std adc lret xchg sbb mov fs dec push test dec nop (bad) mov loop dec dec mov cltd fldcw scas mov or (bad) jp jns dec into (bad) cmp jle pop into push into fucomip inc imul mov pop cmp fist iret jge (bad) sahf cmp mov mov mov or cltd out movsl mov out das call mov andl ret fmuls xor mov ss fwait hlt pop add ljmp arpl pop jmp add imul and adc mov adc int std inc into jno dec pop mov test pop nop mov jnp or dec idivl xchg push push test xchg loopne out xor sub xor imul jb mov cmpl mov stc xor xchg movsb sbb idivl dec (bad) pusha test adc stc dec adc mov xchg dec shrl stos je push mov std mov push xchg dec pop addr16 (bad) stc sub les cmp dec dec shlb sahf jns xor int cwtl inc push jb dec imul jne dec iret mov mov inc lcall jno insl cmpsl rcrl ret insb movsl jns out push fld sahf xor lods out in sbb jl pop shrb pop cmp jno mov push inc adc out inc imul jbe push arpl lods xchg dec xchg pop test leave cld ret adc cmp or sbb aam cmp xchg popf loop iret jle adc jle mov sbb pop iret xor lea add dec add insb sub out faddl cs test lret repz out add pop rclb or dec fwait and lds adc clc add xor inc mov jb jg lods rcrl xchg fs cmp icebp into inc cltd fadd xchg lret sbb push arpl pop mov mov loope jbe mov cli cs push (bad) loope into (bad) xor jl and ds jno pop jl in jg xchg add in pop cmp lods jbe sahf orl das add mov jg fsubs out nop roll das mov sbb push xchg push mov mov pop mov bound jno adc rclb lcall (bad) push test push daa cmp mov push xchg sbb xor add inc cmp cmc or icebp aaa arpl (bad) mov (bad) mov dec jo cmp sub mov inc mov xlat hlt stos cmp nop cmpxchg into rcll in cmp call mov rorl (bad) scas or jmp adc call fwait in or aam mov not lds je pop jecxz cmp pop lcall jae clc xor sahf pop enter aam cmp xchg sarb (bad) sbb cmp pop daa cmp pop mov pop push dec fs bound mov cli aad mov mov leave mov inc shl pop jne fildl pop fs cmp jb jbe ss mov cmp enter mov (bad) xchg jmp mov jmp pop adc xlat call outsl and ss fs and xchg pop scas out push xchg push pop fsubs test inc nop ja mov cmpsl movsb pop jmp imul xor (bad) fsubs fucomi sbbb xchg cmp ret loop test jne call test jecxz hlt addr16 loopne loopne cmp xor lock icebp scas (bad) xor lret jg mov shll in scas sbb pop mov lods pop lods out mov enter ret aam lret fsub push jbe ja xor fidiv aad (bad) sub jl xchg push sub call sbb push jg mov mov (bad) sbb cmp lds mov loope (bad) mov adc data16 cmp popa (bad) icebp enter enter cmpl leave aad sbb sbb inc rorb xchg jge fs aas cwtl ja test pop lahf or mov xor nop xor ret aas loopne xor test jns add pushf pushf inc test call push push xor xor fs insb add ljmp test test push lret push popf and adc dec lahf mov faddl sub xchg sub pop sbb pushl rorl cmc aas cwtl inc push sub jp mov cmp pop xchg lahf fbstp sub es hlt jecxz imul rorl lret cli in mov out aaa adc (bad) fwait jg gs insb push xchg mov stc or jg and rcrl pop addr16 fisubl outsl fisub sti jecxz cmp ret and out inc jno js aad mov cmp call jmp mov lea call pusha jmp mov bt call sbb push add push data16 cltd scas bound mov xchg or xor push dec lcall repnz scas sahf jns cmp jmp popf add xor fistp (bad) aad lcall or sbb jne and push xor cld into out jns rorb sbb jmp add jmp ss pop mov dec or (bad) and shrl ret daa stc cmpsb fbstp ljmp jl adc insb dec scas xor mov xor daa test dec cmpsb mov jg xchg mov (bad) leave jbe xchg out mov lods pop out xlat sbb inc push jno ja in lods pushf push mov lea jae pushf call dec sarb dec mov jp lea jnp mov imul sbb sub mov mov call push mov xchg stos cltd cmpsb cmc mov add adc inc adc sub mov mov ret mov adc outsl adc into lock mov pop jb push out push scas xchg in xor lcall test add data16 fwait add mov fcoms dec pop sub mov jne push bound lock loopne cmpsb popa jle stos (bad) out and in icebp pop push fwait add jno jbe jne lea push and outsb pop pop dec repz das sub xchg dec repz lahf and adc mov push idivl xchg outsl push imul iret jb out add push pop ja subl mov lods rcl in xchg push mov test xchg cwtl (bad) fcmovnb jb mov mov push mov cmp call test stc lds sub hlt dec dec jo push pop push pushf ret jmp jbe lds and jne push not cwtl mov push pushf pushf mov lea jmp mov (bad) pop mov jae nop mov (bad) scas sbbb movsb cbtw sub test clc cmp aaa js jle lods or imul push hlt inc mov inc mov loop fcmove adc add push ret adc or mov shlb mov xchg sub jecxz sbb fsubrp xor fucomp test (bad) fnsetpm(287 mov out popa movsb adc and insl inc std imul lret fsubs push xchg xchg int mov (bad) stc (bad) xlat (bad) (bad) or fldenv pop arpl dec shl add mov jmp gs or xchg (bad) mov test icebp jno jne insb dec das sub in push sub xor loope out lock push dec hlt sbb cld mov test fldcw and (bad) jecxz daa mov cmpl inc push test push mov mov push cmp fiaddl push mov stos inc lcall lock imul out dec pop cmp sub mov push lret ja sbbl gs inc jno sbb loopne lock add push dec mov sub test popa cmp jno je lret fisttp inc cmp notl shlb outsl xor pop inc js mov loop std mov mov out jns push adc push jp dec or pop add push (bad) inc inc mov xchg stos std loop rolb mov xor (bad) mov mov outsb arpl jo (bad) leave bound jl jns dec out mov (bad) xor imul pushf push mov fcmovnb loope pop mov or es add and mov icebp add and lods xor mov out xor sahf or fdivl test ja (bad) jbe stc loopne repnz or imul out push sub (bad) inc jnp lds and push das mov negb jmp jb ja sbb rcrb adc jae mov into aas mov std xchg loope rcr repnz xor int3 jl inc adc xor fiadd insb inc les lcall imul scas ja add adc incl push add lcall inc cltd mov lods ja (bad) ja (bad) popa (bad) mov pop loopne jmp pop lcall sbb cmp mov repz mov leave xor fisub xchg dec ret pop pop inc out lods xchg (bad) xchg cs mov xor fs ja rcl shl sub call and ss inc mov adc inc mov ret (bad) mov cmp aam add stc dec jne stos jns add or or mov popa cmpsb out push xchg lret fucomp adc loopne pop sub and cmpsw adc cltd in cmc clc stos mov ds subl or imul xchg scas out xor rcll xchg aad lret push xchg andl hlt stos pop les shl push cwtl or or push xor xorl imul sub (bad) or push leave xor shlb enter pop sub scas clc out fsubr jno jb push mov (bad) fwait jg and mov fldl cld adc scas cltd movsb dec adc mov mov mov movsb arpl jne jb push add mov js and in mov data16 pop adc mov mov fcom mov sbb lret xlat pop (bad) jg add stos pusha mov ljmp jo push jne push aad mov adc test xchg movsb cmp stos mov lahf subb fldl nop movd mov cmc lret push adc jno jno push jns mov ja call pop add addr16 cmp mov mov cmp sbb cmpsl xchg out pusha (bad) dec idivb push iret (bad) les and mov xchg (bad) dec mov jnp stos mov xor pop ja jnp lods mov negb sbb inc cltd clc xchg insl mov inc lods pop push stos mov adc lahf and xor test int3 outsl iret and repnz les lds int dec (bad) jl pushf jecxz sti cmpsb clc lret out mov jecxz jge adc mul scas adc sub pop jo in in inc lock nop or sub incl and inc mov call sbb xchg sub ja sub popf push idivl shl stc out mov dec fucomp dec xlat xchg dec mov cwtl lods std add pusha (bad) and mov jb jmp add adc loopne jp bound test and jnp mov sub push mov jne jo test aam push dec imul mov xchg mov outsl sub add add adc adc sbb adc adc add add add add add add (bad) cmc cmp push jmp mov movw movb bt test sub push push rep bswap pop bswap mov push lea jmp push push push push pop mov xchg jg xor jle adc or imul and sub or adc pushf dec ror mov test nop cmp add mov xchg in jecxz push inc xlat call enter popa movsb or push jbe stos cmp in cmpl sub faddl dec cmc inc clc or add jl sbb mov pop xchg test shll icebp add je mov test stc ret sub adcb or inc cltd sbb les adc pop outsb cmp xchg and call add pushl lea jmp ret inc fldl sahf test mov in adc cmp push imul into adc and cmp adc lods (bad) popf gs insb adc (bad) leave jns mov adc xchg push or jecxz out test pushf xchg xor xor out ret xor aad lret icebp mov xor inc mov xor iret push adc mov xlat push pop cmpsb js push jb out repnz sbb pop in scas jle pop (bad) xchg or andl repz jns mov jno insl push cmp (bad) inc cmp xor data16 mov jge lds mov xor movsb popa mov jo inc cmp inc aas fucomip xor jbe mov mov xchg loopne mov mov mov cmp or lock adc (bad) sbb aam adc mov mov sar push hlt out std das std dec lds stc sub pop scas adc icebp outsb sbb lahf fbld add or jmp test aaa enter push scas lar push pop push iret jo pop mov inc cmp imulb jno insl push cmp dec mov mov xchg stos sub pop in jno pop dec xchg in add lea sbb mov scas xchg in ficomp lods jae (bad) inc pop jae mov add decb add adc and pop out inc cli push cmp and xlat (bad) sub into push xchg dec ret inc pop call daa jecxz out pcmpgtw ss ret rclb icebp sub mov mov rcl inc cmp pop popa sahf orb add fwait test xor mov dec in jae xchg es pop testl insb cltd testb adc dec bsf and mov pusha pushf cmpb movw call cmp xor cmc sub jne pusha neg mov movw pusha push inc clc pushw popfw movb pushf jmp jmp movb call mov setl bswap seto pushl cwtl jmp cmc clc cmp test call push movzwl rol mov test cmp bt pusha add clc call xor mov btr sub movzbw movsbl lea bt mov bt sub pusha bt pusha pushl popl jmp cmc cmp mov mov pushf lea ja cmc stc pushf call lods mov fucomi mov movsb movsb or jg or (bad) (bad) inc cmpsb cmp nop outsb xor push inc xor sub lahf gs push cmp pop pop mov and cmp or jbe sarb mov and push sub sbb adc inc adc out imul xchg xchg (bad) std or push xchg sti test ss add inc push dec inc inc push xor cs insb add mov insl push xchg sub lret into nop mov pop std jne mov cmp adc test outsl cli insb (bad) push jmp push fs add ret xor cmpl cwtl push loopne fsub mov clc or jg push bswap aaa nop mov fist cltd or inc rcrl push inc fs (bad) jmp push loop std popa jb sti test fdiv mov jb fistpl sbb mov (bad) pop ret dec mov xchg sub repnz mov out int3 push rcll push pop jno push lcall xchg out jmp inc xchg xchg lahf or (bad) bswap outsl rcrb lret sarl sbb mov scas mov mov push sub jae mov inc push sub sete loope out cltd (bad) xlat push push sub push mov lea mov pop inc push outsl addl cltd in add (bad) idivl lret lcall in movsl loope xor rcrl mov xor ja lahf inc xchg (bad) hlt xchg mov jmp data16 fwait xchg rorb iret mov inc fsts or mov daa sbb dec test adc stos and jae je dec in push pop push mov insl jno imul out dec inc ret cmpsl mov add imul mov fsub jo pop mov cmp inc inc in dec (bad) cmp jnp and cld add lods inc jg cmc stos (bad) ja mov pusha mov mov mov jg pusha in and adc and xor enter or jno add out or pop sub je mov jo jns lcall jg dec or into aas mov (bad) xor repz pop pop cmpsb sbb bound dec les jae test outsb jno push add inc gs gs imul flds mov lahf mov fwait outsl iret repz sbb push das jecxz aas (bad) pop aas pop adc mov lods xor sub pusha pop and pushf jo push cld nop out mov inc insb xchg cmp cmp lcall scas xor scas cmp pushf nop out das mov cwtl test loopne sbb adc mov sbb pusha jg,pt mov les loope out in into push dec inc push push rorb xchg pop mov mov push jno push jb test push popa popf repnz sbb fs faddp fidivr push cs pop fs in xchg mov out inc sti adc inc (bad) xor jl repnz pop add push popa mov mov scas cmc mov and adc imul sbb pop jne xor comiss lret rclb fsubs stc and dec outsl push dec sarl and pop jno addr16 imul cmp sub in jne scas cltd xlat dec xor lret mov loopne mov cmp lcall popa xchg jb xchg lods mov dec push jae jns jbe in adc add mov or imul icebp lods out add fisub je divl cwtl xchg fstpl imul pop add inc push lods xchg mov and pop notb je je lcall jl mov adc (bad) mov out lret xor pusha push jno jbe fwait loop fiadd pop sarb call mov inc pushf icebp loopne dec jne into push xchg cmp sub adc pop cmp push loop mov data16 cmpsl clc add add call movw lea je jmp (bad) adc lock inc es movsl mov ror iret ss insl adc mov loop es jbe xchg mov mov mov lea cmc outsb lods xor sub mov in sub enter mov outsb pop xor mov sbb push roll sub mov pop into stc aad cmpl (bad) loop pop xor pusha inc pushf dec jne dec lock adc pop (bad) xor inc push pusha and popf push mov (bad) jnp jne fsub je mov std fwait arpl ret ss jno gs jns outsb fild movl and inc xor ljmp inc mov stc sub dec pop lods mov lret push (bad) xchg cmp lods in add shlb addl pop xor dec fwait mov sub stos xchg stos ror rolb daa cmp pop dec repz cltd jg out scas shrl pop stc icebp mov push ficompl dec or out in outsb sbb cwtl cli or cmp lods (bad) mov mov adc sbb in stc movsl enter cmp jecxz repnz jbe lcall sti in ljmp dec insl cwtl rdmsr pop pop sbb jnp inc std ss mov sub fistp mov adc into (bad) das push cmp aas iret dec call inc in rcrb lock jmp call rcll mov mov fwait dec lcall repnz and test loopne fs mov and pop fs mov std mov out das adc sbb mov cmpsb aam cmp xchg cmpsl hlt mov ja jae mov hlt lret cmp test (bad) fnsave adc aas ja sub sbb in shlb cmp scas sti sbb push cld adc fcmovne xchg mov cmc push loopne loope out (bad) dec (bad) aaa call xchg fmul xor movsl pop cli ss jl push out mov repz cld jecxz and or dec adc add in rcr inc popa std repnz cli in repnz sti mov and pop inc cmp xor pop arpl sub mov jmp pusha shrb xor divb mov mov inc divb fstpt scas adc adc push in scas shll leave sbb push rorl shlb mov and out lock lock daa aaa sti test sahf mov sbb dec mov movsl add cs sbb inc stc cmp call mov dec or adc nop test or les fldl xchg hlt int3 push popf scas sahf jns jl push cld je xor or pop dec push imul xchg jbe jp mov inc (bad) inc insb jae js insl icebp lods icebp mov iret ret fsubrl push outsl int3 push jecxz out jo (bad) into jno bound add call clc xor sbb mov mov mov arpl add leave adc adc repnz jb mov dec jl jge push addr16 lea arpl dec mov and fildl sub iret (bad) jecxz cli mov cmp outsl aam daa pop mov aas call add mov xlat pop push inc out push sub inc jl jne jno popa xor pop call push mov lea push mov bswap mov pushl mov not movb mov jmp add lea cmp or call movw mov movb movsbw pusha mov pushl popl bswap bswap pusha mov call ret add fadd popa (bad) aas sub js mov cmpsl mov lods repz cmp sub test jo in addr16 out pusha lahf jg sar test adc dec icebp push sbb sub sbb (bad) xlat cs add xor inc adc testb into outsl loopne mov cmpl mov ret sbb data16 jle cwtl sahf loope ret scas jg or inc addb pushf add ret sub (bad) jbe sbb pop pusha clc xchg clc cmpsb stc cmp call outsl mov int xchg cmp (bad) cmpsb in xchg jb xchg ljmp ja sbb es lods cmp test cld mov mull inc (bad) test jle push or loope and insl popf popa mov or es push outsl pop pusha push adc insb xchg jp xchg cmpsb fdivp and jnp sub or jne dec shl mov xlat test lea sbb xchg pop icebp testb out (bad) fdivrs and aaa lock pop daa jecxz mov out push jb push push fwait sub outsb icebp in adc bound enter pop push inc cmp push fucomip xchg mov fldl2t aad or popf (bad) sbb test stos hlt stos lahf pop arpl aaa pop and dec nop fadds add mov imul lock jl xchg cmpsl sbb subl jmp fiaddl ljmp or test xchg cmpsl mov sbb adc mov add jae pop push jbe cmpsl xchg dec loop das test jo shll imul or daa arpl jbe fimull dec xor mov aad xor pop pushf bound loope ror iret rep repnz jl adc fsubl jnp mov mov jno pop cmp adc add popf mov in xchg and sbb cmp add pop rorl add push test es fiadd cltd stos mov xchg ss ds sub fwait jne sbb ret jl lods cmpsl cwtl cmp push jnp fcmovne lahf fs in cmpl adc and (bad) (bad) mov mov mov orb fwait add dec and mov mov fwait pop repz xchg mov add mov push fsubl in xor fs push sbb mov std mov and xchg jno xchg dec iret and ja loop pop add sbb or cmp jp dec scas pusha lea jmp pushf movl jmp pushf lea mov pushf mov movl push mov push push pushl popl pushl movb mov pushl ret sub cmp lea clc cmp pushf sub jmp pop hlt mov (bad) enter sbb js inc mov adc clc or jo mov or adc push in das aam jle fsubl mov adc push mov sub lcall xchg or add addr16 jae xlat or (bad) mov mov push idivl arpl xor inc andl xor push dec push outsl xor pop into aad out mov stos js stos adc and stos pop nop push lock dec aas sahf sub sarl add push sub cmp jbe ja icebp fldl mov fsub jo and xor pop pop jecxz mov dec hlt adc (bad) sbb in xchg shr adc fs bound mov sbb mov mov pop and mov push iret pandn cmp jns fs loope imul out sbb fucom push push jns aad (bad) jbe dec add outsl cli cmpsb mov loop xlat call inc mov sub sub std les push decb lods push mov and ret ret rcll movsl mov sbb add or fldenv or sub out jns popf jno pop pusha das sbb mov out hlt lret inc pop insb sub mov mov xchg pop (bad) fadd sbb cli jge xlat cmpsl arpl pop shrb dec mov cmpb inc (bad) pop cltd mov push jmp xchg mov in outsb adc push clc push or scas into xor loopne das mov shll mov jo in xor aas push dec xor push or add jp mov iret movsb cmp pop enter lcall (bad) aaa daa mov dec es mov idivl add jae dec jmp outsl push push mov mov daa mov pop test mov inc pop lahf scas shl (bad) enter bound mov dec (bad) jge adc xchg pusha fdivrs repz adc mov test xchg cmp mov cs push add pop (bad) xor shl lret adcb xor lods adc cmp xor and repnz bnd in jo subb or add dec inc lock lock int mov mov stos ljmp ds (bad) inc fwait addr16 dec jno pop (bad) leave lret je inc cld sub in xor push imull mov pop push sub loopne mov stos mov aaa daa xchg stc cmp sbb sti fs aaa or dec mov add sahf stos push mov in icebp add pop test or and sub dec aaa js insb addr16 inc adc xor cltd in loope push pop dec xchg test or test fwait adcl lcall inc sbb mov out mov push daa cmp pop mov stc shl setbe lea je lods pusha pushf pushl call pusha lea jne movsbl jmp push lock std std mov gs push jno adc push cltd adc pop inc ss insl pop cld in jge stc in cwtl dec inc pop and aam pop ret out fldenv adc test sbb (bad) add xchg movsb inc mov and xchg push out add pop notl lds mov enter fimull or imul dec inc pop std (bad) lods jb cmp imul fwait and stos rcll scas pop call in jmp idivl cmpsb fucomip cmp xchg jge jno mov fsts dec pusha jle sub sti or bound pop aam mov push xor sar shl pop xchg enter xor inc in push lods and xor stc dec repnz insb cmpsb mov pop jo push fwait cmp push fild sub jle out sbbl jecxz lret add mov ss xchg dec out cwtl jno pop sub push xchg add or xor rclb push cmp ret jg,pt test fucom mov movsl faddl dec loopne inc fisub je mov xchg inc fdivrs inc mov out stos ljmp xor and fs cmp push rolb (bad) ss lahf add mov cmp add dec pop dec mov (bad) ss movsl cmp movsl push sbb repz shl (bad) aad jne scas adc sbb icebp (bad) and daa outsb push sub movsb jno pop jo ret cmp lods mov or ds adc inc pusha mov pushf movl pushl ret movsbw push mov lea pusha call into jg add repnz dec jb xor mov hlt ljmp xor push xchg add cwtl movl mov rolb fld push mov dec mov ret aam mov push inc pop outsb daa cwtl rcll iret imul sub or sub push sub fildl jnp push or and js mov jg ss push dec xor sbb adc pop push mov sti (bad) int3 test sbb jmp sub incl and outsl jo pop xchg test pushf aas loopne ror mov clc cld or cmp mov inc aas and sbb movsb sti (bad) fucomi test sbb insl (bad) pop (bad) mull pop loope cltd add xlat (bad) or cld bound mov or idivl xchg mov mov push inc push les push in adc push pop xor fsubl mov in sbb adc mov imul push push push pop push test cmpsb adc lret cli les leave xchg je lret push push dec push imul sub pop mov movl pusha movb pushf movb lea jmp mov xchg or cmp int3 jl pop iret psubb outsl out fistl add out packssdw sti and sub push cmp inc cmp outsl addb xchg sbb mov (bad) sub jbe sbb subl mov or adc mov pop in mov jnp dec inc inc negl push negb (bad) imul jnp adc mov test (bad) leave xchg std mov lods movsl xchg xor sahf jae push enter inc pop aas out (bad) pop mov movsb cmp push enter add cwtl xchg or cwtl mov mov xchg or out add sti cmpsl aaa (bad) outsl rcrb and sbb gs mov rcl inc sbb in adc push mov in xchg push imul out test lea xchg imul cs sarb add adc je stos cwtl das fadds daa push les pop (bad) push push xor sbb cmp mov scas pop mov jg dec adc push sub jno push xchg cld add pusha push lea jne or adc and movzbw mov cmc test or pusha lea je bswap movsbl pusha bswap lea xchg movzwl call call push lea jne btc mov pusha call push dec dec push inc push dec cs insb add mov movb (bad) xor in jbe jmp decb (bad) xchg or testb adc adc popf in (bad) cmp xchg sahf push push mov mov sbb cwtl pushf and inc mov call mov cmp dec sahf mov in mov cmpb das (bad) pop movsb push inc or sub cld jns insl inc js cmp xchg ljmp push rcrb lods push xchg inc cltd fist ffree fstl out cmp ljmp testb pop out pop popa mov pop push and lea cmpl add imul add out xchg dec loope,pn mov xchg jecxz adc pop cmpsb lods add sub push jno rcrl cs or in stc leave (bad) pop jne pop ret mov inc jl fs and push shlb xor inc aas lahf mov aam enter inc inc sti mov pop inc cmpl lds push pxor scas popf repnz cmc psadbw iret js push mov hlt out push (bad) fidiv (bad) std sub adc mov jl mov sub xor testb (bad) xor loop inc divl cmp sbb sbb dec xor insl jns mov mov enter push pop mov push dec inc flds call lea je cmp clc jmp mov lock cmp adc or int xchg mov and stos push cwtl jne xchg push cmp jge xchg jle sbb int3 jb push add dec xchg inc fimull leave mov out cli adc dec repz push cwtl mov sub or dec jo mov es mov push pop xchg mov add mov push sbbl lock jb rcl lods in jnp push or sbb xor jle inc aas xchg jno push orb sub add dec outsb imul add aaa popl push cmc pushf cmp pushf movb push lea ja rcr setl sub inc rcl dec add call push mov sub push mov test test cmp pop inc cmc mov fs outsb lods xor dec adc push sub pop mov das sub scas inc fcomip add sti mov lret shll push repz mov fistpll mov sub cmpxchg into pxor fcompl in imul jne pop push mov and (bad) outsb mov gs add test sbbl arpl imul fstl xchg or stos hlt xor xchg mov into imul xor xor jbe pop imul scas addb sbb sbb mov (bad) lock add adc adcb mov pop xchg scas int jl sti pop sub xchg sub leave mov sbb pop clc inc imul pop out outsl xlat sbb cld sub jge mov sbb jle pop jmp test or xchg xchg test movsb fidivl lret inc fcomps sbb je mov outsb jno push popl dec xchg nop dec xchg or mov xchg sbb sbb xchg mov lods shr mov ficom repnz ds dec mov cltd inc lcall neg loop repnz cmp inc loope out xor xor orl adc rcll lret push movsb cmpsl and push les lock pushf push test dec mov rclb jge repnz pop jp (bad) lcall fidivl lcall jns pusha je inc add fsubl mov lcall mov cmp jg pop cli inc jno xchg inc (bad) jno dec sub adc and pushf add inc inc and xchg lret jmp popa lret xchg dec repz fsubrl jg or push das jecxz inc pop sbbb sti dec dec push outsl fiadd and or test enter jno lcall jns mov push sub fs shrb cli cmp or pop sub fwait add pop jbe cltd push pop adc lahf inc sti cmp fs adc movsl out fsubl cmp and lahf loopne xor inc test adc mov or dec dec mov mov stc fsubrs mov aam lods jns repz in shrl call xor pop dec mov mov xor ds xchg pop stos inc mov xor insb adc arpl mov fstpt adc add pop pinsrw mov adc dec and push icebp sub pusha mov out repz lock inc cmp and xor les or mov cmp shl mov sub or or ffree sar daa inc in pusha cld push push dec test mov mov jp jp out jo movsl mov pop cmp fistpl lea pop je rcl xor lock clc (bad) pop or andb or arpl cmpsb add push pop sbb push push lods add ljmp mov in stc in and iret inc push xchg mov pop ficomp les sbb mov mov mov fadds sbb arpl cmpsb or test jo loopne and sahf and push (bad) movb incb (bad) fstp das insl jmp clc ljmp orl mov call pusha mov icebp mov scas scas cmpsl mov fsubr inc cmp hlt dec xor inc mov mov push std push or mov add and sub fs mov inc (bad) das xor jo in movq shll sbb fisubl in addr16 push push loope mov or out pop dec mov cmp add repz and mov call jmp lds cs mov je or adc test adc inc fisttpl mov aad jno dec pop js ja out nop ss inc loopne (bad) jbe pop cmpl cmp xor pop adc mov push or ja insl push aad push ret add sbb rorb sub xchg sub sub icebp dec divb sahf and std push mov sahf mov mov cli (bad) fadd xlat popf and sub mov call and push lods mov cwtl insb sbb addr16 xchg sbbb push cld adc push push icebp lret std movsb cli cmp int3 mov mov cmpl xchg arpl inc pop and jne (bad) mov cmpl xchg and clc xchg stos mov jno dec pop jo and jecxz nop loope aam or or (bad) mov dec pop jl push xchg mov mov flds jle fstps dec mov movsb aas addb pop cwtl inc cmp sub stos sbb loopne stc jp push push (bad) or xor dec mov movsb pop inc push push adc popf test cs dec add mov sbb mov shll adc lahf mov or pop cmovg push xchg cltd sbb inc fiaddl sti pop in icebp enter xchg or dec mov mov dec shl mov adc shl xor lea jmp pushf mov dec pushf call or sbb mov lods repz inc sbb hlt push (bad) leave xchg lcall and sbb int3 and pop out divb sti lds addr16 mov leave xchg cmp repz or lea push inc push and cmpsl mov movsb cmp adc das xor loope dec aad xchg or insb mov inc or dec rclb cmp mov xor (bad) ss pusha push das push push int3 pop sub cmp lret push sbbl mov jbe xchg or mov xchg sahf xorl insb insl sbbl addr16 push jp fiaddl mov or add xor mov es jno dec (bad) leave jnp rcl mov rcr btr bswap mov ror mov jmp push inc pop (bad) mov lret fmull fdivrl mov addl dec aad jle (bad) xchg enter adc sarl stos adc mov jmp dec add idiv sub inc add add repz daa sbb add and jbe pop sbb push lret inc xlat call jne,pt popf xchg leave (bad) rol lcall xchg aaa lea push dec mov push xor aas mov loopne ret sbb daa loopne adc or pop xor dec (bad) incl rcrb pop stos xchg push mov ret inc adc aas and popf mov pop fldl adc inc shrl (bad) xor push cltd jae jae pushf pop (bad) xchg shrb pop or add xor pusha sahf fucomip pop or push sub pop (bad) int3 or in mov pop push push mov mov push push sbb pop inc test mov pop mov mov out cltd movsl cmp xlat cltd add xlat adc aas push sub cli aaa sub xlat dec std dec jns sti mov cli and cmp in lahf data16 arpl dec rcrb insb push xchg pop cwtl (bad) rorl loope adc inc dec mov mov insl xchg mov cli cmp aas ljmp dec negl les lcall popf mov inc add xor xchg insl fild jmp leave push addr16 lret hlt mov adc pop mulb sarl mov lods jbe xor push add adc push mov aas push dec xor lcall lods icebp in mov fidivr sub popa xchg sub pop xchg jae or fnstsw xchg or xchg cmpsb je aas lret or inc sbb inc push cltd cmpsb push pop addr16 push ss sbb out cmpsl pop fadds jae push xchg dec loopne (bad) jno inc sub pushf pushf lea je pushf jmp adc inc pop inc push mov movsb mov aad aam add mov sbb cli repnz cmp add jnp add in pushf jecxz and (bad) cmpsl xlat dec lock out lret xor ret jl (bad) xor inc xchg (bad) jmp jmp jno pop pop push mov cltd aad sbb test dec xor jg or mov add sbb negl cmpsb jnp xchg cmp pop xor mov idivb jns xchg inc cmp sti (bad) lret hlt scas adc xchg mov insb sub sbb xor push pop jg jae in jno inc adc ds inc neg cmc xchg movzbw daa xchg mov dec mov clc xchg or shr shl call jb movsb rorl mov ds loope adc sbb or insl jno subl pop push pop test mov mov and dec mov ljmp xlat xchg sarl scas adc rclb xor lret jb inc mov sub bound dec pop adc sub int shr cmp jns jns das mov cmp ja dec sbb int3 outsb mov fwait das iret loopne pop lods xor jmp hlt stos adc push insb pop test imul int out or rcr adc (bad) and jne les xor fsubr sbb xor outsl xor mov push mov sub jnp in push shrb test sub lahf inc add ret sbb inc in mov pop lahf and iret xor jge aad lret mov add rorb sub jnp in mov inc push cmpl subl push xchg sub jo fs pusha ds mov mov dec nop insl xor sbb adc push scas mov mov int3 stc loope and fcomip repnz and sbbl and sbb push mov sbb pop inc mov cmp pop imul (bad) mov fld sub in repnz push jb (bad) cld dec xchg cmpsb stc loope and into adc xorl (bad) popa mov test loop mov xor xchg (bad) cmpsl fsubr sbb sbb ss jne sahf scas xor jl sti jecxz loop (bad) sbb int3 xchg pop ret insb sarl les popf loop sbb inc adc mov test stos mov pushf lea jmp not mov bt pusha shl pushf mov movw lea je call or jmp mov loope (bad) insb push push cwtl loope insl push add sbb fidivl nop out insb xor out sti mov mov cld ret sub movsb lcall jmp sub in xchg out jnp jp jp fwait add push pop mov adc incb fwait xchg dec push je pop fimul pop int3 in dec xchg add mov test fsubs jae jl jno (bad) (bad) jno inc ds cmp and movl movl movb pushl pushf lea jmp dec stc pushf test not cmp test add push cmp cwtl not lea jp cwtl lea bswap movzbw jb pop jl pushf pusha push lea ja pushf lea jb clc call inc dec push jb sub mov ljmp mov std mov dec jne mov jle jno aas lds add pop jbe sub xchg sub (bad) fidiv adc pusha pop je enter mov lods push xchg mov sbb cwtl pop sbb lods andl int3 fdivl lods cmp popf or rcll dec pop xor (bad) and sahf rclb in push in dec jno inc mov and jmp bswap push pushf pop cwtl movsbl push bswap mov lea pushf movl pushf call test or jmp lret jp or cli pop shlb test test mov test push lods repnz xlat xor sarl cmp dec ja xchg movsb push mov jo mov lahf xlat std xchg pop xor sbb xor jae rcrl sbb fistl mov push cld adcl into fbld jb sub ds popf or ds push scas (bad) ss lods mov push movmskps push mov daa cwtl test or (bad) sub hlt push xor cmp test fistp sbb pop outsl mov imul mov xchg cmp iret nop daa inc addr16 (bad) lock stos aam lock lock xor dec (bad) xlat mov xchg xchg or push mov jmp ljmp sub mov sarb aam dec xor and dec aaa roll bound add addr16 push lea nop out mov into add pop jae pop shrl mov sub or cld nop out lock xchg push lcall ss cltd scas inc pop jnp orl or mov lock negb into aaa sahf sarb add lds jg add repz clc adc fcmovnb leave mov into pop jbe aad in sahf rcl leave or inc xor dec adc insl aaa dec pop popf icebp jno cmp shll shlb rcl (bad) cmc and jl hlt xor jne rcl xchg in xor jbe pop iret mov in adc pop sbb cmc icebp rcr pop push jle xor dec inc pop xor jbe push cmp xor dec test cmc mov pusha repz jae sub or cmpsl mov sti mov and test dec or xchg mov loope je lods mov add add std ret add insb repz lds xchg hlt cmp push inc xchg sbb loop mov rolw ret addr16 in pop incl xor inc lods xchg xor insb aaa mov pop loope pop and jnp pop and mov xor dec dec mov mov addr16 test push daa push or inc adc xchg cld xor movzbl mov pusha jmp pusha lea call push lea jmp mov mov push mov push push pushl ret scas mov sbb pop xlat mov push scas push dec jo dec ret adc sub jecxz mov lods jae mov push in adc rcrl lock add pop inc dec adc sbb xchg push insb out xchg adc push cmp pop es hlt cmp xor jmp cmc sub mov or xchg pop jmp loop sbb stos xor in aad gs sbbl test cmp pusha hlt xor sbb or and dec adc sbb dec jl inc ret xchg lods in dec adc arpl lock sbb jmp les divb stos cmp repz push inc mov sahf fist test mov push ds mov push push inc push xor cs insb add iret out pop inc mov ficomp xor push (bad) cmp sub mov inc and push mov cltd lahf mov add sbb push inc pop cmpsl movsb test xchg mov sti movsb sbb das mov push daa js enter cmpsl aaa dec pop loopne mov loopne pop sbb stc pop pop inc pop pop addb sub xchg sbb insl sarl dec js push aaa inc aad jnp mov lret fildl inc push mov xchg dec mov daa mov pushl or fiadd mov adc in aad mov inc fnop inc push jno cmp jb cwtl fcomps and test cwtl add xor and js test hlt sahf inc out xor adc cld or sub addl sbb jae mov in and sub fcomps mov lock dec jae push xchg mov fsubl mov push pop enter sti mov xchg and imul xchg pusha dec pop (bad) dec bound dec inc incb and mov repz mov add or push fildll jl push lds stc cmpsb sbb icebp inc std pop add mov mov sub add addr16 aad test popa (bad) push lods pushf cwtl js ja jbe jp push jnp pop cmp adc xchg setnp pop outsb xor jae lret inc push (bad) jo roll fldl fwait push dec pusha in push mov add into fist out jno push sbbl loopne fiaddl cmc shr pop add push sub movsl jno cmp and iret and jmp sbb btc lea shl sub mov jmp repz jmp xchg (bad) sbb push divb bound (bad) popa pop clc adc out mov stos repz adc and add jl les or leave fcmovb cli enter pop pusha (bad) mov ror aam add mov pop dec xor jne loop data16 lret xor pop xchg call adc (bad) pop pop pusha cwtl lods add mov stos faddl daa push mov lods xor cmp popa jb enter loop push lock inc mov pop mov mov mov sub mov insl push outsb out call popa and or movsb sbb xlat cmpsl pop wrmsr sub xchg repz add xchg lods dec or pop je add fnstenv dec out xchg mov jae dec stc cmp adc stos xchg rcrl gs mov xchg dec aad cwtl test sbb push cmpl ret insl cwtl test lret xor xchg lcall inc mov imul in dec (bad) xor cltd inc adc outsl adc jp xchg lods mov dec divb jno cmp mov test dec mov stos popf bound lods into mov movsb xlat enter aam mov fisubr repz and imul dec mov call add sbbl sbb add (bad) adc and xor cmpsw push push jecxz ficomp inc mov mov mov lea lea mov bswap pop pusha pushl ret pushf jmp lea jne bswap movb lahf setb push not not lea pusha pusha movl pushl call pushf pusha jmp add or pop cmp mov lods mov gs aad ret aas jg in arpl jl dec repz xor xchg inc and mov mov aam mov push test inc push sub push pop out jle sarl mov (bad) aas add mov je test out inc mov and add pop xor (bad) divl xchg mov sarl push adc lret repz jge movsl jb push ja mov ljmp loopne repz out and push pop stos pop mov mov std icebp cs xorl jp rorl or jmp call movb bswap pushf pop push push lea call pop rorb lods push jnp sub dec (bad) dec mov fcoml pop rcl roll inc sbb call ljmp inc pop (bad) sbb jmp and rcrb lds hlt (bad) pop mov cmp insl jle jo sub push mov xchg or test xchg jmp xchg jecxz or ss mov shr cld cmpsb cmp test jno fs insl jle int3 and xor sub fldenv pop jg aad dec jb ja movsb mov mov dec inc dec ss call shlb adc cwtl inc (bad) adc sub inc cld push int loope adc xchg leave inc fld fxch (bad) pop mov inc repnz (bad) pop or or push dec je add cmp mov shrb mov mov cmpsb clc or push push mov xchg shl pop test or mov xchg mov sbb mov inc push mov xor push dec jge mov inc cld dec fs (bad) (bad) cld cltd and fildl xor sahf icebp das lock lea call call and cs adc dec lods push push mov mov hlt pop pop aas sbbb rcl cmp rcrl cmpsb mov cld pushf xchg daa adc aas jge add cmpl xor inc fnstsw push in cmpsb cltd cld bound data16 pop xchg outsb cltd inc mov inc pop push cmp sti call push mov xor dec and fisttp lods and mov lods xchg mov mov fstpl cmpsb popa push (bad) fiadd inc push cli (bad) mov data16 xchg sub mov or mov js inc xchg loopne sbb push or mov or adc push dec mov dec pop jno ss sbb stos push gs mov xor mov gs pop fadds jge aad lret int sbb rcrb inc ja into mov adc push cs fisubr nop dec jo ret cmp ss inc (bad) lcall into dec jnp xchg cmpsl rcrb and das jle lcall cmp xor out mov xchg cltd in add and popa push das jae pop nop xchg mov dec mov les or xchg mov lds iret cmp repz cld cmp jno xor ja mov ljmp cmovae int3 adc and sbb mov jmp out lods repnz gs jb dec xchg adcl jns or dec rcrb add mov and mov aaa mov fld push push call xor data16 sbb pop add and adc pop pop sbb adc add inc sbb push stos mov add loop mov lahf add stos scas mov lods repnz dec cmp mov movsl pusha mov dec xchg jb (bad) adc or das or pop orb add fdivl xor mov pusha lea call jbe push mov lea jne pusha mov pusha pushf pushl pushf lea jmp mov adc lea pusha pushl jg push mov pushl ret stos mov push push mov lea jmp pop fldl popa sbb xor ja (bad) fucom dec rcl or push and dec mov jne dec adc (bad) pop out adc aas andb mull cmp cwtl out xchg sti mov and mov push add rclb jp (bad) out sub xor cli (bad) cmc sub add cmp fistpll rcl sub cli push mov pop sub lods aam fisubl punpckhbw xor stos enter rorb adc add and add and add xor addb bound inc jge int fnstenv scas mov mov mov dec xor jg mov xchg adc out jno xor mov mov or test add xchg lea not call lds adc popa (bad) int in pop xchg xor inc rorl int push or rcrl mov push xor pop sbb repnz loope sarl add cmp mov (bad) (bad) adc mov iret xor or ror mov mov pop test mov lea (bad) sbb jae lret jp push xor adc or mov push les xor push (bad) loopne insl (bad) jo jnp ds mov push dec cmovg push jno,pn or out loope sbb xchg lock mov xor popf add inc mov push les xchg scas nop mov arpl insb jge pop xor les in and xor xrelease jmp or hlt sbb fisubrl es pushf jecxz mov sahf xchg jmp pop push xchg ljmp fisubrl cmp jl (bad) test clc inc lods xchg call test enter idivb (bad) push and xchg imul adc pop xor mov bound jb push (bad) mov enter (bad) mov xor push imull lods (bad) pop push lea jne mov not lahf movb movsbw push lahf call call aas adc push add jg stos push mov add add call or ss imul test and xchg lds shrl adcb pop ret cli mov pop lods jle add sbb push mov repnz lea (bad) jbe imul rclb (bad) jno jne mov cmp out popa or lea and movsl pushf js fldenv jp in mov stos jnp sbb and in xor mov lock xchg xchg stos sbb repnz add sub loope dec push mov ret xor jae movb mov mov pushf cwtl movl movzbw lea pushf call jmp jmp (bad) lods icebp xchg xor jae popf sahf test mov inc dec mov pop (bad) gs stc cmpl ja mov jmp lods adc sbb pop nop in pop fsubl sahf xchg sub cmp daa lret xor cmp call test mov push inc xchg cmp (bad) push mov nop in js jmp sub aas or xchg sbb xchg jg icebp push push pop mov gs sbb out mov inc pop bound jne mov cmp pop lea test add imul push test and sbb push inc std pushl xchg or cmp decl fldenv xchg or popf loop cwtl stos and inc push mov add sub push pop jg in lret mov arpl pop test movsl test aaa into push lods cmp add mov push dec pop mov loope (bad) or pusha fbstp and sbb scas outsb outsb stos xor and (bad) mov mov insl sub xchg das mov test add or (bad) shr stos adc and xlat dec int movsb lcall pop ret dec jno das mov loopne push jmp jbe mov (bad) das pop and mov dec mov outsl mov fistpl dec pslld jle adc nop std mov xlat pushf jecxz nop jb nop andb (bad) mov ja inc imul jo (bad) mov loop fucomi fild loopne mov insl jmp out pop adc inc insb lret add lock fstpl out xor (bad) push mov adc push test push leave insl repnz fiadd (bad) push imul inc cmp sbb jno sarb sti jg ret sti or push fdivp push pop inc lods pop mov (bad) pop fisubl sbb fld mov xchg sub jecxz call sub insb (bad) dec out dec mov movsb clc jno loope (bad) push aaa sbb xor add mov out cmp xchg repz out cmp cmpsb out adc jg lods lods outsl cli int3 add shr add jno inc imull int3 out mov jmp inc mov icebp or inc movsl cmp bound push mov je mov sbb sub ror arpl dec and mov adc cmp pop movl loope sbb (bad) movsb fidivl into jns jmp aam add in div dec loopne xor (bad) das inc and (bad) out jecxz sbb fbstp xchg ljmp ffree add inc (bad) xor push fisttpll mov mov fstpl ja jg out mov sub mov jle dec aad mov xchg movb adc in repnz jns mov adc xchg jl test out rorb fs out aas and (bad) sti addl pop sub inc pusha not not mov lea call enter repnz es mov xchg fdivrs dec aam les cmpl ljmp push dec pop fwait and add mov or push pusha ds pop in fiaddl xchg rcll ja repz ret cld out mov xchg into dec imul adc imul pushl inc jl jb leave sbb jb cmp rcrb popa pop stc gs outsl push cltd mov daa jmp (bad) lods jb pop scas push cli mov push ret jle (bad) jnp lods jno (bad) adc je jl not jmp inc push call mov stc clc test call ror jmp mov test push mov mov mulb loopne and mov fistl mov cmp mov (bad) adc js (bad) cmpsb jb popa mov mov test cmp push test movlps bound aaa mov mov lods data16 movl jmp lds scas pop inc daa das adc sub idivb cmpsb mov mov es (bad) mov cmpsb add and inc addr16 dec fldl mov out (bad) test repz push sub xchg sub sbbl dec xchg xchg scas das iret mov fsubrp jno sub fiaddl xor sbb mov lea pop bound addb jbe xchg cmp (bad) addr16 movsl mov ja jle add push bound dec test xor outsl out negl push repz xchg push movsb pop lock mov sbb pop add xor pop icebp lea in mov out icebp lods shl jno sub jne jo loopne,pt inc cs mov divb adc or mov jns fldl2e cmc cld or or or repnz mov ds dec (bad) (bad) enter stc pop jo in popa xlat adc pop (bad) insb xlat nop pop mov xchg (bad) fsubr decb cmp movsl div or mov dec or inc and mov push ja leave cmp push iret fldl adc lds jno xchg ja xlat (bad) pop mov test or sub xchg (bad) js push popa push pop and stos push lods int je enter loopne xchg (bad) (bad) mov xchg movsl xchg or push dec ficompl pop and pop cmpsl bound add addr16 pop (bad) jo fs fsub fadd insl cwtl pop lods sbb stos cmc (bad) lds das (bad) incb (bad) fadd movsb sti je pop (bad) mov pop dec adc cmp inc imul cmp arpl jne cmp (bad) mov lcall enter jbe inc stc cmp sahf mov jp (bad) mov cmpsl xchg pop js jns xchg pop (bad) arpl (bad) jp ffree daa mov test jmp jno sub in add and xchg dec loop and cs insl xchg or mov jbe cmp jo clc out out and sbb adc mov lcall test ljmp mov icebp add jp std push xor mov bndldx adc jle into dec decb mov dec mov jno (bad) or jnp mov push mov (bad) into xchg jmp mov mull cmp dec add js jl mov jmp idivl imul es or data16 (bad) mov sbb insb jae inc push inc push dec xor cs insb add pop mov (bad) jnp lods into sarl add push loopne xchg mov mov stos jo addb xchg cmpsl cs or push out imul pop idivb push mov adc out outsb push repz in mov mov shll shrl add out lsl xchg add call (bad) or test rorb imul pop mov mov jae mov add loop jmp mov jae jae mov lret lods sub adc cmp repnz cmp leave testb xor pop daa mov push inc push dec cs dec dec add fcmovnb incl push movsbw mov jmp pushf sub pushf call xchg xchg test mov or push (bad) rcrb lds dec sub dec jb xchg sarl mov lret jmp in and daa xor push fistpll and lret std inc push cli add pop push stos cli cmp inc into rcr fwait les xchg or dec sub jge add icebp add (bad) fmuls adc push mov iret mov inc xchg mov or sub push or hlt xchg mov dec stc test inc sbb dec mov lods push inc in push push dec pop je aas popa adc pop aas push dec test adc outsl sahf pusha xchg sbbb lcall jno es inc add xor movb cmp pusha call adc sub es stc sub outsl jae enter jmp aad mov ret adc hlt ljmp imul gs jmp adc adc pop pop mov cli lds lods icebp imul sub mov dec cli pop cmc inc clc test sahf jecxz das mov movsl mov pop (bad) pop and das scas push mov es enter mov jnp mov and cmp sbb inc leave xor imul std enter add and mov dec mov sub (bad) dec xor aaa mov and add insl xchg cli dec xcrypt-cfb cmpsl movsl inc sbb or push push jp stc cmp lds out jp cmc fist (bad) lds inc sub cmp fistp imul jge cmpsb pop fild pop data16 scas rorb and add dec outsl arpl inc jb add (bad) loopne std push cmpb jmp lea je pusha lea jmp jmp clc mov bsr mov pushl cmp call clc sub call movb mov lea call jmp cmp stc or jmp push dec inc dec dec xor cs insb add push or sub cmpsl fmuls outsb icebp inc cmp shrl insl xor in shl std vmovd sbb jecxz mov push sbbl stc inc cltd cmp add test test inc add les sbb pop push pusha pop (bad) xchg push test xchg leave jmp jg jne (bad) xor into mov ds dec repz mov pop jns mov or inc fnstenv in lea jl jno mov mov pushf pop mov loopne xor mov incb cmp jno and adc shrb add lcall rcrb jbe hlt or ret xchg arpl scas outsl fwait arpl or jl iret outsl imul jnp lcall inc mov mov pusha into nop pop les outsl xor pop sbb push push adc pop xchg xor leave xor mov jb inc lahf sbb imul mov jl dec or add fmull repnz aam enter jl pop mov lock fcmovbe mov (bad) cli rorb pop jecxz dec sub shrl (bad) aas jno mov (bad) cmp mov push sub imul test xorl add and or out adc cli adc dec (bad) mov rorl test ret mov pop xor cmp jge inc xchg lahf sub cmp insb jb mov stos mov fwait sbb lods jae imul rclb inc ficom mov (bad) lret lret jns pop inc pop jo inc pop add test loopne push fnsave push out mov pop (bad) cmp pop xchg jo push hlt push dec push dec (bad) pop frstor pop or adc sahf mov push mov (bad) lock fdivl and mov int std (bad) repnz push test xchg and mov jns fldl2e xchg and jno outsb xchg xchg pushf sti movsb cmpsl test push cwtl je mov cmc or and (bad) dec out mul and push insb lods lret cmpsb clc mov jmp frstor push push (bad) movsb lcall lock nop arpl leave fdivr es or cld inc jo and inc sub mov adc push inc sbb fist and flds add dec adc and adc and out pop popa fldenv pop and sarl mov mov sbb das sub ret pop pop pop pop arpl xchg dec jae sub pop (bad) aas mov mov pop and jb mov rol fstps in (bad) icebp loope,pt add adc out loopne or sbb dec (bad) xor popf scas aam ret jnp test sub cltd mov in xchg out mov rcrb cs stos pushf ss pop fisub pusha data16 mov test sahf inc push mov shrl xchg xchg int3 call mov out inc cmp or or pop ret dec and dec push fild push mov mov mov adc mull mov cmc cmp neg movb pushl inc clc cmc shr pusha call sub ss xchg addb nop add sahf loopne int3 iret mov or pusha mov cs sub pop inc push (bad) div in mov aam xchg xor mov outsb fnstcw push and (bad) sbb rol lcall jno mov (bad) icebp mov mov jge movsl cmpsl mov mov or sub adc lods xchg xchg ljmp popa lock (bad) aaa jecxz ljmp inc daa lods push pop and xor ret sbb dec and pushf es stos arpl mov pop and cmp fadd inc xlat sub mov mov lahf dec out push mov mov dec je (bad) fcoms sti inc rcrl dec or dec push outsl dec xchg xchg or jl adcl or addb cmpsl xchg in or or loop out and jecxz loope lock mov inc fldl2e lods cmp iret (bad) cli or cmp dec pop mov lret dec adc pop pushf imul ret sbb pop in push cltd call pushf cmp lea push pusha call and call pop cmp xchg cmpsl cmp dec cld dec adc lods cmp int lret in std or pop data16 orb dec fstpl push repnz (bad) jl out mov cli sbb (bad) lods and and add lahf mov rorl pop cld iret and cmp test sub inc fimul negb adc jo (bad) leave aad sub jmp cmp sbb mov xchg mov mov std push jo fist jmp call mov pop aas pop jae fwait inc out xor rorl xchg in icebp or data16 fs dec popf jno push pusha das add test (bad) out mov mov std or movsl fstps or ja rcl lods cmp into loopne adc test imul dec jnp inc jns (bad) jecxz sub aad ds pop mov repz mov (bad) aam fdivl (bad) jb mov int3 mov sbb (bad) pop sub lea nop lcall sub mov fisub insl aaa data16 repz mov mov into push mov cmpl mov mov pop sbb repnz add popf mov adc push push sub sbb imul test mov lods jb pop stos jae scas sbb hlt repnz fildl nop pop mov inc nop xchg subl pop jo push mov inc push push pop daa push cmp add xchg push mov or inc out mov dec jmp pop xchg mov fidiv fildl add xor mov cmpsl sub cmpsb cltd jbe fadd pop mov jmp mov lods sub ljmp aas addr16 pop test incl pop sbb (bad) dec (bad) repnz daa lret or roll and out push movl or pushf inc jecxz push scas ror cmpsl xchg or adc lret dec xchg outsl mov divb cmp mov sub and mov jae inc rcl aad stc (bad) fnstenv sbb push ljmp loope inc push imul outsb int3 rorb int3 rcrb mov xor pop inc cli ret add clc xchg fildl in mov out and stc popa ds push xchg xor push incl dec pop gs mov xor (bad) cld in icebp inc fsubrp jno sbb push decl add add insb and movl pusha jmp sbb xchg cmpsb out test jns ss mov test arpl addr16 pop mov and add pop lahf jns loop lcall mov pop jmp push call and mov pop and push or imul dec mov test inc out das and mov dec cli sbb lds pop sub daa imull inc jb push mov movl sub jl sbb es pop xchg xchg test mov fxam mov sbb imul movsl cmp dec iret jge xor fisttp das pop ja ja scas dec push imul dec adc push das mov jnp jge negb in (bad) push dec cs adc cmc aas or into js jle sbbb cmp mov lock dec xchg dec dec xchg push fs outsl in ficoml nop int3 xor fucomip push push dec mov dec dec add mov sbb lods icebp inc sbb inc pop xor das and pop and xchg dec pop arpl jo and jp adc mov je test (bad) fsubrs test (bad) pusha movl pushf pushf lea jmp xor dec xor das inc push push mov mov repnz test mov jno jns shll mov lahf mov lret cld das xchg cmp (bad) repz lret test call jns adc jp ja xchg dec ss cli and lret add sub jns jae cld sbbl stos out xchg inc mov inc cmp dec lock test pusha jecxz out xchg jmp mov out mov add mov dec or cmpl cmpsl or ret sbb mov mov cmp pop sbb popa imul incl add add insl dec mov add or push add add add add add add add push add add add add nop mov add sub add mov add lret add add add pop add add add add add add leave push add aad add aad add aad add aad add aad add jnp pushl repz lret jp fstpl inc nop loopne jns cld and jne ljmp ss aas mov sbb add push xchg mov mov in dec lods mov cmc js pop sbb or (bad) jne rorb mov ljmp pusha sarl xchg jmp cmp mov les sub push lahf cmp push sbb and jmp dec out dec mov rcrb fldenv and mov (bad) popa or sbb lds pushf js (bad) or pop popf cld orb pop pop xor xchg cmp or jmp fisubr cmp jae mov mov orb lret dec adc rolb mov or or (bad) cmpsl add test mov fidivl divl in fiaddl inc imul lods ds push mov (bad) mov in sbb leave dec paddw (bad) loope insb mov pop inc jns test xchg inc mov loope int mov sub add mov je dec inc enter sub mov fnstenv add adc jmp add mov mov adcb xchg push lret cli fbstp into jmp sahf mov xor push std pop lods iret test jecxz gs adc jnp pop into ds and xchg xchg ret je std add fstl cltd xorl pop cld xchg and adc leave push dec mov bound pop lea push popl push pop mov jb enter fdivl mov test cs sahf in fwait loopne ret shl pop jl out sub rcrb jne push fstps aas and xor stos notl lret pop shrb cs xchg mov add cmp in or cwtl jno imull movsb (bad) xchg idivl push and aad aad andl test pop adc sbb inc ret jbe push subl mull sahf sbb or mov lods xchg jle and fisttp movsb pop movsb cltd adc adcl aaa pop xor dec xchg orl add lds cs cmpsl sti mov mov bound roll hlt inc xor leave push xchg test daa mov push scas add das aad aaa jb or cmpsl imul aad adc mov icebp in test push cmpsb lods jbe js mov (bad) ds sub add jecxz pop (bad) loop das mov cltd inc xchg clc ret ljmp outsl jmp or add jge sub insl (bad) cli adc test daa mov nop dec das call xchg (bad) fldcw mov inc sbb icebp (bad) das sub xor xchg imul das mov sub sbb push pop icebp dec rcll xchg dec push ljmp call repnz aad les xchg arpl adc or push push (bad) stos loop popf incl imul push mov add pop mov pop cmc adc lret and add (bad) fs jle (bad) mov lcall sub mov mov and sahf loopne cltd mov (bad) (bad) mov repnz dec fcom lods add push mov cmpsl popf push push scas sub xchg sahf es in cmp enter push mov lret sub test popf cmp xor cmp or mov in mov ss adc fnop (bad) cltd cmp jmp (bad) aam lret mov shr jo mov mov mov xchg mov jmp sar outsl mov or cmc cld add test add inc xlat dec adc dec out test aam incl cmpsb (bad) (bad) pop mov push mov sub xchg xchg popa jns outsl int sub testl sahf nop int mov mov push jb sbb cmp and inc sub incl stc (bad) dec out pop (bad) jne and or add ret inc repnz cwtl insl and mov inc daa jbe adc repnz or mov popa (bad) mov movsl or pop fwait xor jmp xchg movb xchg push lea jg pop sub xchg or sti jne loopne sub mov movsb jmp ljmp or aaa mov cmp jns in cmp push cld ds dec cltd aas push std pop aam inc pop scas out cltd push xorb adc pop inc sarl and fdivp mov outsb mov dec lcall fisubl sarb movsb lcall jg mov add insb lret jecxz cmp sbb and fidivr push scas in imul mov mov xor push (bad) xchg dec in aad mov mov push add sti addr16 test pop (bad) and jae xchg jle ja mov inc add inc iret or mov cs mov in (bad) push jb (bad) mov std fnstcw sub cmp sub mov neg sti pop fstpt mov mov iret jae aaa dec imul aam aaa loop shrb rorl mov push in push sub in xchg mov or push out mov fsub jae,pt jmp out decb pop scas mov jo pop adc lock ds das sub roll dec adc cmpsb push insl (bad) std xchg jae fsts or jg adc pop daa pushf and inc call ss addb cmp add fs mov mov fcomps outsb outsb faddl insb test jns add push xlat cld and nop daa dec ss es andb dec cmp and inc (bad) fs ret rcl xor xor enter push pushl add mov sbb sbb ret sub ffreep inc into push stos rol cmp mov inc or out adc sbb testb dec sub xchg lret jns mov in and mov pusha hlt sub xchg rcrl mov movsl xchg or push ds (bad) xchg bound pop jo int3 std dec mov popf jne cmp adc xchg or xor cmp xchg test adc sub dec xchg xchg test pusha jl adc mov out mov (bad) mov fisubr pop aas das outsb hlt mov jne dec mov lahf test lods cs mov loope es ret adc jp pop adc fild adc ret and ret cmc lcall pop test fwait xchg jmp push mov lret xor fs xchg fidivl and dec mov addr16 sti ljmp sarl loope loope jnp xor mov inc mov push xlat enter cmp into adc das imull cmpsl sbb stos aam rclb mov xorl pop mov test aad inc xchg push and pop outsl add test push (bad) das js jle (bad) jb dec vmovdqu mov daa or std pop call ret lds mov mov icebp or hlt ja movb aas jl lret adc dec or scas lea dec mov movsb inc or add outsl push lret lret push xchg sahf xor fstpl ss (bad) mov mov insl inc cli push xchg xchg adc jg xor mov pop xchg xlat loop inc dec inc mov sbbb xchg aaa insb pop std add dec bound lods push and movl cs lods clc xchg jecxz jae insb mov stos sub pop in scas and movsb outsl fidivrl jb mull outsl pop ss hlt out adc movsl lds pop dec xchg insl test and shrb rol into pop adc fs pop pusha jge ds sub ret inc daa out int lods nop mov xchg daa push jnp int popa aas xchg pop call popa push inc loop cmp (bad) adc pop cmpsb leave pop jo and sub pop or adc clc mov xchg pop aas mov mov std xor (bad) leave mov mov lods int or mov cmpsl inc adc gs jle push movl sub aad pop cld je shl sbb cmp mov mov idiv inc jo cmpb or mov jmp xchg xor sbb dec mov dec fcomip in stos mov mov gs data16 inc and daa ljmp or push mov int cld insb mov mov mov loopne push fisttpl pop in ljmp push test into push aaa mov (bad) xor repnz xor cmpsb jns fiadd jge lcall dec mov rolb rcll and and or adc in xchg jecxz dec scas fstl aas cmpsb outsb push jno hlt jnp jnp jmp dec or and mov xchg push cmp xchg push inc adc movsb call xchg mov dec pop fwait cwtl sahf cmpsl addr16 lahf enter fwait pmaddwd cmc pop ss xor and and popa xlat scas xor add push bsr xchg adc and stos mov dec mov xlat mov movd aam sub push leave xchg xchg push negl sub imul inc inc out add jae popa insb insb add fs gs inc outsl jne je jb gs push je imul gs arpl jb add outsl js inc insb insb add jb imul add insb outsl popa fs gs inc outsl jne je jb gs push je imul arpl outsl js pop insb insb add imul cs insb add add add je jae jb outsb jne add mov roll add or scas push aad or jmp pop pop inc (bad) pop sbb mov rclb jns popf rorl leave inc mov std shrl lea dec push (bad) push testl sub icebp sub push shll mov ljmp jne xchg push push and mov dec push add sarb add or test mov enter dec inc mov add add dec pop add add add and add add add adc add add iret sbb add add add pop add add add add add add xchg mov add add add push push add add add add add out and add add sbb push add add add mov add add add add add pop add add add cli and add add mov push add add add (bad) adc mov mov and repnz add add fsts fistpll xor icebp (bad) xchg scas mov (bad) mov or popa das stc mov inc adc sub push sti dec (bad) dec lret mov insl push push popf mov (bad) cmc xchg movsb inc inc xor mov fidiv (bad) scas or aas inc cmp in femms addr16 shrb fistpll xor push xor cli (bad) or push jl jno jo pop mov inc ret mov xchg xchg cmpsl test mov ficom js fcoms dec faddp add mov pop xchg mov jns cmp adcl repz push cmp xchg mov cs jg in outsl lcall push push hlt dec inc movsb push push movsb push mov incb int sub jge int out loopne (bad) rclb pushf fildll mov dec xor mov out scas pop xchg push lea xchg scas pop inc pushl pop ljmp adc scas std lds es push fcmovnbe and xchg push sbb aam mov stc push jns mov cmp or jb js rcl sub (bad) dec inc stos xor pop gs fldcw push push test add les mov fs jbe mov insl mov outsl repnz mov inc dec in les mov (bad) xor or fmull into out jle outsl aaa fsubl stc sbb xchg test xor cmpb (bad) jbe insl movsb stos add int cmp (bad) push push cwtl mov popf push cmp cmc inc and int3 sahf int js repnz sub jno (bad) push add mov insb leave idivb jno and popa push push ret sahf and jl test (bad) push imul or bnd test xchg int ljmp cltd ds sbb sarl sbb sbb inc push pop adcl push std inc xchg out int3 push imul sub (bad) fidivr lods movsl in mov dec mov mov adc je bound or test loope test dec repnz popf xor pushf or pop dec xor sbb jae and push (bad) mov xchg inc push (bad) mov jno fidiv cmp sub pop es popf xchg lock sub dec pop push xor jne xchg inc rorl repz repz fcomi out nop or dec fmuls and mov es xor ljmp pop mov xchg lea add mov mov ljmp aad (bad) cli iret call ss enter add roll dec and mov sub mov mov xchg fldcw jmp rcl mov data16 pushf mov xchg stc inc (bad) (bad) mov dec adc or cmp xchg cld (bad) sbb out and mov in push xchg lea pop add or or (bad) test in sbb aas test pop sub movsl add mov cld mov int push orb aam and cmp pop and cmp cmp add insb sbb aam lock jmp repz clc dec jns rcrl call (bad) xchg mov fs pop inc push ret or test inc hlt cs push or add jecxz nop xchg inc push dec cmpsb jbe adc pop add push pusha mov loopne (bad) push leave adc xor pop stc lcall aam test out add sbb sbb ds or out pop dec test push sbb mov dec push lock lds or (bad) fcmovne jmp in lods loopne adc cmp jno outsb cmp xchg cld popa pop sarb adc push in addr16 iret orl in (bad) adc hlt push mov jns jp outsl sahf jl cwtl scas into mov daa push sub dec shrl test mov ret jp dec test mov mov fsubl sti pop fistl inc jb jae cmp jae jno lahf sub in or pushl lea jne adc (bad) into mov dec imul xchg rorl and jg push push mov mov lret leave push mov ds push mov idivl fcomip xor sub pop mov lret inc sbb pop js dec out push stos mov and (bad) jl iret lds movsl dec repnz xor int cmpsb sbb inc imul out sbb inc pop rcr inc mov (bad) popa and jmp fisubl sbb lds xor lahf aas (bad) movsl rorl (bad) adc rcrb push shld jle xchg sahf sub rcrb or pop out pop lods xor mov mov mov ret ljmp ljmp aaa add sbb jg inc fisttpll ja adc repnz add jns mov lods aaa mov dec subl rorb pop outsl cmc and push (bad) mov add adc call pop fdivrp std in shrb or shl push cld clc cmp int3 (bad) fs inc test (bad) ror ds mov fist insl outsl pop loope loope push xor into lods outsl or lods das imul std in movsl iret add loopne push insb lcall jb mov (bad) cli mov subl cmpsl pop pop add enter ss xchg push or add push sbb xchg mov out clc mov jge sarl std jmp out xor (bad) leave ds ror lret push mov pop out aad push mov inc arpl xchg push jo push mov pop jge (bad) clc mov out mov lahf outsl daa test js es cs inc push jne add cmp pushf and ss out jge pop mov divl jle xor imulb inc push incl jle cmc pop adc inc and jmp lcall int cmp or int3 rcrl xchg aas dec xchg sub data16 mov inc add or scas push add das push sbb mov fidivrl es pop push xor enter push mov jns pop sub negb jnp xorl mov daa dec dec aas xchg jmp jo shrb and xchg ret sub xchg into inc adc mov ficom sub mov inc repz int3 push sub add push sub call pop mov (bad) mov fbstp inc loopne ds int fdivp ficoml adc push fildll adc jmp xor xchg dec xchg mov mov and push test xchg xlat pop rcl sbb sub icebp ss push movsb or jne xchg xchg xchg lcall jl ficompl jecxz mov in and jecxz insl and or push into jecxz mov mov cmp clc mov or aaa test (bad) stos popl cwtl and jbe add adc jb mov xchg cmp push and in enter pop add or gs xchg pop or add sbb add int stc js mov lahf jle push incl pop adc sbb scas mov pop inc int iret in push dec sbb mov int les ja mov add ljmp push jnp push js jecxz mov fidiv adc repnz imul fwait inc or addr16 push movsl mov jne roll cltd push enter arpl mov add pop jne arpl lods adc pop stos and nop lcall jne add loope mov lret push pop hlt lcall lods xchg xchg or push in jne incl xchg dec pop dec push xchg movsl xor lahf push xor in inc lret test gs mull mov fldl and add or jbe jns xor popf cwtl and xor std ss aad lret sbb sarl xchg jmp mov popa jmp jp aad adc (bad) insl add dec xor xchg xchg xchg loope jb sbb subps outsl mov xchg jae lret lods notb nop jae nop mov sahf jbe sbb jmp dec adc mov es dec lret js xor push mov fwait push cmp es inc fcoms call mov add popf sti adc fmull iret lcall push push out movsl fwait (bad) mov xchg jge pop nop push mov sbb xor dec jmp frstor clc repz outsl dec mov and int3 mov xchg and dec sub dec inc jns pop mov js xchg test mov add xchg sub dec loop cmp mov je push pop or mov rorb pusha ds lods mov into cmp push pop adc dec clc scas push sbb cmp lds ljmp fcomi or push inc lcall fnop sti xchg bound stos sahf mov and or xor sbb inc push lret add xor leave mov mov mov add sub test cld mov dec cmc jp nop mov add addr16 (bad) fsubl in call dec cmpsb shrb sub xchg sbb decb sub xor movaps jae decl jle push jg sti rorl clc in add xor test dec sbb lahf fsts xor ret jns fwait imul adc cld sbb lea jne mov mull mov push and mov xchg adc add sti lods faddp add (bad) push dec mov test jmp fidivrl ja test cwtl (bad) jbe (bad) shrb mov lea or cmpsb rcll stc sahf idivb sbb mov adc lock stos xchg add cmpl mov xchg lods inc or and sub jne sti les xor cld inc push lods xorl jnp mov xchg dec cmp aam icebp xchg pop (bad) aas xchg sbb scas xchg scas sub push inc sarl mov push jp fisttpl cli fwait out sub xchg out and stos orb and mov push mov insl cmp test pop shrb (bad) jno or or fcoms jle add out das pop adc mov jne sti int fstl lret jne mov push std std xor push pop fimull mov popf jle int3 pop repz orb pop push aad insb adc pop aaa gs xor aaa sbb dec xchg (bad) pop icebp xchg enter mov sub xor (bad) out dec cltd fcmovne inc fiadd daa mov xor xchg inc xlat sti sbb cld outsl inc sahf stos xchg call ja push or decb stos fs fldt movsl repnz lcall gs int fcmovu test cwtl movsb dec mov mov add roll call inc cmp xchg dec mov add incb dec add scas loop sub stos xor push mov fsubrl test cmc mov lret jbe int xor mov jmp cmp xchg mov jge imulb mov cmp ljmp aas mov rolb fwait (bad) clc test dec pop dec lods addr16 fisubl (bad) lods jb jb mov rcl push pop and cmpsb dec pop ljmp inc sarb push mov or into add repz or mov stc (bad) or and and and inc loopne jne adc push (bad) lock sahf cmpsb cld cmp pop ja orb fildl fimul ljmp dec xorb jo aaa cmp shlb decl jp (bad) or add add cmp add adc dec push aad push dec call fstpt lahf dec decl sub sub jnp cld ret xor sbb scas or dec jnp fsubs mov mov ja dec push mov pop fwait popf mov xchg call sti pop (bad) repnz pop jg xlat call callw mov xchg jne stos cmc ss cmpb push pop dec push lea cld add popf je push into sub sub loop dec mov aaa or cmp dec ljmp fcoms aad inc stc loope and fldl xchg lret fsubl jns shrl and sub daa push pop and adc cmc incl or add je gs outsb leave xchg mov fimull (bad) or add fsubl sti dec test sub xchg cs jno jmp mov (bad) add out pop cwtl lock dec dec adc xor lcall pop pop ljmp pop cld orl in sub les push pop out cmpsb clc pop cmp cmp inc pop and sub sub cmp mov mov push push loop sbb faddp cwtl jmp dec daa or and aam (bad) jmpw xor xor jp test jge pusha ds lcall or xchg (bad) or fmull test rcrb cmp xor (bad) cld mov dec jns,pn push mov les test hlt jp mov lahf repz ljmp jmp mov aad rcrl sti add dec push shrl jecxz xchg mov xor and or xor xorb aam cltd jecxz mov ficomp inc idivl jo call jmp test imul sub pop pusha adc cwtl or arpl dec aaa rorb sbb dec test into push and inc sti aad lock ljmp daa mov mov bound mov scas push sbb js (bad) pusha movsl inc jle fwait mov mov mov test sarb dec mov in mov pushf add clc cmpb movb pushf lea jne shrd sub bsr setbe mov ror dec add clc add mov test pushf cmc test call (bad) mov int mov adc jb xor xchg cmpsl mov out int sub mov and data16 leave mov jmp (bad) nop and in inc sbb in sub cwtd test imul cs or imul push or mov mov xchg in pusha push jae loope xlat das (bad) imul add enter nop (bad) pop lds pxor push in jno jb xchg adc imul jno call mov mov (bad) sub ss adc adc rorb adc daa pop repz fwait and sarl jae cmpl xchg lret xor mov (bad) mov cld fsub clc cli mov fstpl popa in data16 mov (bad) xlat cmp hlt dec inc cmp cld mov cmp cmpsb sahf stos out push inc xchg adc dec jb scas mov mov and push loope xor sahf xchg inc xor push dec ja jl mov fs dec inc pop push imul nop jge inc ret xor inc clc pop loope lret pop out inc xchg dec inc test aad and dec imul (bad) xor cmp cmpsb fsub lods xchg aaa out aas sbb je outsb adc add push cmp add int out pusha mov push add (bad) jge ljmp push shll pushf lods sub add mov add addb enter (bad) sti pop bound fist and hlt sub pop (bad) xor inc or inc mov cltd inc mov mov pop and in out adc jae sbb or int loop lret repz push cmp out xchg xor inc lds mov in lock repnz (bad) negl jnp and sbb push test dec add call mov or repnz test pop cmp sbb outsb xor mov xor js pop out (bad) fsubrs pop adc stc (bad) cld mov pop xchg mov (bad) and dec (bad) fstpt dec (bad) movsb sub xor stc out xchg nop scas test les shr repz xor xor mov push add jno out mov outsb les mov sti mov cmc push cmp es inc adc jl insb (bad) xor aas repz in sub stc aaa sub xor int3 xor sbb int in xor inc cwtl std ret ret aam xor out dec loope mov movsl cmp (bad) aam jmp and cli jge xchg lret inc cmp mov adc fisubrl xor adc pop icebp (bad) into out adc repnz ss lahf fwait sub ds cmp (bad) or or sbb dec push jb sarl sbb or push mov pop loopne jno in scas je mov in xor (bad) cmpsb fbld aam jno mov cwtd cmpsb nop out sbb and mov stos jae mov dec fcomi pop add notb notb xor and xor data16 push xchg sbb mull imul (bad) dec push (bad) sbb push lods mov mov out inc fwait popf ret js jo xor xor mov mov mov sbb shrl xor xor divb sahf mov fsts (bad) movsl dec xchg jb in dec into aam jae push out aam imul mov mull inc cmp aam fsubs ret call xor comiss pop jno pop loope in aaa inc scas adc pop test xor inc pop (bad) mov mov scas scas adc sub xlat push out sub insb jp cmp mov aad jnp push inc mov jg scas xor mov repz ror mov xchg or or adc sbbl pop sub xchg dec xchg cltd movsb (bad) stc pop in sub xchg jg stos xor sub jmp iret lcall inc jo jecxz sahf inc or lcall and cmpl roll mov pop adc mov add rcr addl push aad dec push inc rorb stc xchg fldt out js pop jecxz or ds mov repnz sub cli dec cld push sub add fmull adc adc insl xor pop mov imul adc push pop (bad) jmp fisubl push jo xor push roll lahf mov mov sti xchg mov dec push mov jmp mov push jmp mov inc and xchg ror adc lock and mov jg (bad) jo push push dec in inc pop dec mov fimul movsl mov inc pop and lret cmp push adc cmove sub lods dec xchg ja das nop loope js mov repz dec mov lea into jno jecxz dec (bad) pusha adc ret sbb pop insb lret adc iret jle cmpsb cmp sub jbe mov fstl inc push das and and sti or add add rcrb xchg leave fcmovu add iret add test jo movsb add popa jns or jg out mov pop into pop add (bad) dec pushf and psadbw mov push roll imul jp lahf inc push scas add xchg add lahf data16 inc sbb add xabort fisttpll mov out xchg lret shrb sbb inc pop and jno loop cmc loop test pushf lea jle test add pusha lea jmp aam add das das orl inc cmp push notl mov pusha mov cmp js mov pop fidiv push lock pushf fisub mov movsl jno cs pusha mov aam pop loop sbb xor cwtl lods test insl (bad) loopne pop xor inc dec les xchg rcrb scas mov sbb jl and inc hlt xor jle mov sub inc daa pushf pop ljmp jge imul or jns push xor loopne repnz mov inc sub sbb scas adc add (bad) cmp cmp mov push clc movl mov push ljmp sahf lret xchg movsb sbb nop stos pushf cmpsl dec adc push out pop shr add or dec jnp xlat insb (bad) xor xor je xchg xchg adc inc leave jbe mov fisubl push pop cmp call or adc xor popaw out xor mov cmpsb mov inc ss mov sbb mov adc and sub mov dec cmpsl fs das test mov insb pop out test inc rcrl push in xor sbb add add lahf jmp pop (bad) lcall add pop xor cld pushf inc sbb lock push arpl pop mov (bad) stc xchg jno (bad) fcomip sbb sub popa outsb ljmp repnz and jae lock stc and jmp pop xor pop add xor xor xchg pusha adc int dec inc mov ret and cmp sbb or jg jmp in mov add aaa jno add (bad) and mov je fldenv push and leave xchg icebp cmp mov lahf mov push sbb fmuls add aam test mov push dec je subl cmpsb (bad) scas xor std jno loopne popl sahf call bt pusha sub bt test call jge xchg jmp test or imulb movsb cld push dec pop jge pop (bad) and adc pusha pop jg cmpsl push fadds stos fs mov (bad) sbb pop (bad) sbb cmp and lea outsb jecxz sbb outsb xchg xorb adc dec xchg insl dec xchg xchg (bad) xlat test jno ficomp jg ss dec mov jne ret sbb inc lahf cmp xlat inc lahf aas xor lds mov pop xor hlt sub bound notb into test inc sbb and in ljmp addl xchg or iret int3 jno cmp dec jmp (bad) stc and xlat (bad) loope dec scas jge sbb in pop add andb adc test test xchg cmpsb jno ficom or sbb jo mov pop (bad) std int3 nop mov inc pop mov lret mov (bad) cmp or mov cmpsl mov add push int3 xchg push nop mov (bad) pop or cld mov cmp sub repnz jmp pop xor pop xor hlt push sub js aaa mov mov push xchg inc in into shl sbb cmp out jg mov xchg jg lock cmp repz (bad) mov shll aaa mov and push add xchg movsl ja out test xchg push (bad) cld add ds mov jp idivb addr16 (bad) cmpsl mov outsb adc and pop stos out adc and xlat jbe cmpsl push stos imul mov dec int3 xchg fnstcw dec pop add add sub bound lock dec mov lahf (bad) mov jg ret dec xor inc mull mov pop test test enter ret sbbl or push fucomi jl and jg lock inc pop std popa cmc dec mov enter mov scas pop mov xor xor fs jae jmp pushf pusha mov jmp je pusha pushf pusha add push push lea jmp in cmp lret faddl xor in mov push loopne popf loop ficomp scas test xor mov and dec jge xchg sub pop (bad) xor fnop movb je xlat jmp mov mov adc jne mov or aas cmp fsubrs jge push xchg mov mov roll pushf popa jno (bad) pop xchg sub dec (bad) cmpsl lods xchg ret jl movsl insb mov mov jne push jno dec les fs adc push enter dec jae pusha stc gs pop faddl test repnz mov pushl popl pushf mov movw pushl ret rclb fisub outsl push popa cmpsl mov js xchg mov mov sbb mov insl mov xchg jo mov xchg orl mov sar rcll pushf jecxz cmp push pop cmp pop (bad) jae dec das cld add jns mov rorl das push xchg cmc pop and jae mov xchg cmp mov add sub pop and add push add insb xchg jae jbe test ret outsl iret jle adc mul dec das daa sbb sahf faddl add pushf jp add jno (bad) loope lea je jg bswap setge movzbw mov push not lea pusha call jmp bound mov js lods mov push fsubl jp xor xchg dec jmp std cmp cwtl inc xor add and outsl sub xor dec dec xchg jecxz addr16 mov nop or push dec push dec mov add dec lea jbe jne cmp adc pusha cwtl lods or mov pop testb aaa mov adc repnz push add fidivl (bad) push jecxz jg xor xlat lea add push enter into sub sbb inc (bad) sbb push fisub push jns xchg jno fisubl insb (bad) jo mov bound jo xchg push sub or dec btr (bad) inc clc dec jecxz insl mulb sbb cmc test jmp mov adc test dec and add jb jns mov and cmp dec ljmp enter and ja test mov (bad) loope xchg adc bound xchg mov wrmsr sub cmp cmp test fistp mov mov push jno (bad) mov mov fs jne cwtl movzbw setae lahf movb call lahf movsbw movb call pushf pushl ret stos leave aad and nop xor scas adc ja xchg push pop cwtl in adc iret nop jmp (bad) das mov pusha ljmp xlat dec aad pushf jp (bad) ljmp sbb fucomi cs rcrl xlat jg push idivl bound cmp aaa repnz (bad) jge sbb icebp rcll adc clc ss mov mov sahf js mov pop out adc add je mov adc and mov and lea jle xchg mov test insl mov lret jmp adc movl pop insb jno fsubrs sahf (bad) jno push push adc subl iret aaa mov push shlb pop addr16 test imulb mov js imul and lods sahf mov push cwtl push mov push fsubs dec or aam mov sub mov add dec jo je icebp xchg push fidiv mov inc jge cmp cmp scas popa cs (bad) jbe ljmp adc mov in ret outsl jo jo dec das sahf stos rcll popa jge xchg add mov aas mov xor mov aas and jae pushf lock fsubs or mov add pushf imul mov imul sbb dec loope mov push push scas arpl sar pop pop jo loope test in js sbb and mov and add pop cmp sub inc jl out loop push jno xlat ret aam lods pop test iret xor and push ljmp fldl adc xchg into test nop lahf adcb pop mov mov in rcrl mov adc push ja cmpsw inc clc inc add inc push cmp and or (bad) or push sub fs (bad) ret or xchg push (bad) cltd push je sbb and lahf in fsubr call rcl insb xor test mov nop cltd (bad) pop xlat daa push and (bad) enter in xor in mov mov lcall dec push xchg mov adc adc inc cli cmp mov pop loopne fwait dec pop cwtl lea cmpsw jne lcall lods or mov scas sub add adc mov cmc pop les push push stos lcall xor mov adc and mov or pop in rcrb jo push cmp inc scas or fist dec add or popf inc xchg andl lods jae loope mov xchg jmp bound jno (bad) insb and or (bad) in pop out pusha stos xchg pop inc push pop xlat dec dec xchg pop js push (bad) xor ds mov leave jne cs push mov iret adc add sub (bad) cli inc out sbb call mov mov movsl sbb gs (bad) and or adc ja push sub xchg jmp push fidivrl push pop jg jne ss jle shrb mov jp popf addr16 xchg dec mov or (bad) sub pop xchg xchg jecxz psubq mov out mov cmp das (bad) loopne cmp mov mov xchg lret fdivl (bad) cli psubb jecxz cwtl out cs push or stos iret nop mov xor sbb mov faddp jmp dec cli dec xchg or imul inc stc push shll xor mov push ja pop imul jle sbb mov loope xchg cmp xchg mov daa pop pop adc ds daa mov das hlt xchg ja in jp out dec (bad) ljmp arpl dec (bad) jne pushf jecxz sbb sub fiadd or mov xchg scas das sbb testl mov inc mov cmp divb aam jno sbbb sub push mov stos xor xor inc (bad) cmp and dec das jo mov imul int (bad) enter mov mov push (bad) push and xor repz repz add bound ss xchg mov or push in inc sub cmpl xor frstor mov mov jne lea cltd mov fist push imul fiaddl out imul fiaddl int3 jno (bad) xor dec fnstenv movsb mov fsubs jecxz bound and cmp inc (bad) sbb pop mov repnz sbb mov and push stc gs fisttpl std lret or js roll lar int3 push cltd out add fdivrs (bad) shl jns jnp loope out jnp and jo fistpll sub jp (bad) push arpl cmovno sub out inc aam push xor cmp sahf push scas xchg data16 imul push cmp repz cwtl ret js mov sbb adc jle adc fisttp mov fldl add inc pop sub dec repz enter out mov addr16 xchg xchg sub mov mov pop shll scas das add inc js je jb arpl jae xchg loop sub shr pop push dec test movsb mov cmpb cltd movsl in rcll sarl xchg jmp fisubrl int3 xor and mov (bad) push rcll out les or inc sti pop sti adc aam jl mov lock test (bad) fucomp xor dec mov xchg test mov out outsl insb int pop loopne arpl int3 fldl sbb popa bnd mov sub and insl lds (bad) xlat aaa insb mov out jo pop mov sub push lahf sub in xchg adc seto (bad) icebp sahf xchg inc lea jne mov aam rol pushf sub pusha movsbl btr mov pusha add rcr bt rcr mov call leave adc mov adc or repnz repz cli and or sub stc mov xchg movsb fidivrl fadd cmp jne sbb mov or frstor jmp mov loop inc pop popa ds push imul dec pop rorb in xchg cmpsl pop loope ss scas mov adc xchg xor add mov rep mov or nop jp cmpsb add adc fisub adc daa xor mov xchg ja enter mov xchg xor mov pop jge mov stos push lods pusha sahf add pushf pop lods test pop faddl adc out pushl out sub push dec push xchg out xchg aas rclb popf dec xchg push lea lock dec mov roll jbe mov xor clc or mov sbb push sub call ret add cld xabort sub in aad push sbb xchg push mov ljmp pop lcall mov jb dec adc aas xorb je enter stos out xchg ds fwait aad pop mov sub mov cmp jno rcrb cmp mov loopne push or cli sar (bad) repnz xchg sar pushf mov add neg adc mov ror inc neg mov jmp call movl pushf mov lea jmp mov gs fildl mov or mul stos xchg out mov sbb mov add push mov stos mov jbe imul test mov pop jmp loopne cld cmp cmpsb sub inc sbb idivl test in cmp imul sbb cmp add test inc lods inc xchg je ja (bad) jbe stc xor mov adc xchg mov inc (bad) adc push xchg sub pop inc cmp in sar and daa jnp pop iret (bad) or and or movw pushf push lea je btr movzbw pusha btr add bts sub and stc shr or dec add mov adc rol add bt add add bts cmp neg mov pusha call add dec lea mov xchg dec repnz and push sub inc and sbb jmp aaa sti inc pop jg movsl push mov shrl mov adc adc adc xchg jle sbb push and pop inc lcall sbb ljmp mov lock push or (bad) scas bound stos repz enter add pop into sarl movl mov mov fwait push iret lods repz cmp dec inc xchg cwtl xchg outsl imul cmpsl sbb test nop data16 lock mov and jns pop push jo add xchg lcall cmp xchg add push sbb jge test outsl push loop push cld pop xchg popa scas push (bad) out pop dec xor pop imul jle (bad) outsl movsb pop fwait pop movsl jo fldcw int3 jb xor add test mov sbb push mov adc clc jae pusha pop jo popf std loopne cmpl inc pop xchg dec je xchg or jo ret loopne inc jbe insl push sub rorl add and and movsl stc in shlb jno int mov xchg mov push rcl stc or mov stos adc pop (bad) dec adc scas push and fwait and imull add inc loope mov rcll add sbb jge jns sub cmp mov sbb scas dec je pop xchg shrb rep into jns cmp cmpsl jecxz mov jp push xor jp test adc loop test pusha call sub pop aas fldcw jmp inc cli test sub jl dec icebp sbb xchg or inc mov dec xor xor add mov lea negl (bad) cmp (bad) test adc xchg in aas or sub jl fadd mov fcmovnb pop mov pop sbb jge jbe inc lds cmp sbbb pop xchg jns jbe lea xor or test test stc or or fsubs rep iret shlb movsl mov or dec push dec pop jg jge push jmp int3 ret and pusha and adc icebp add mov stc fist xchg pop loope (bad) cmp or dec xchg xor sbb lea sbb test lods arpl or add dec in push xchg arpl sbb sarl (bad) mov es imul inc push inc sahf mov enter lret (bad) leave xchg negb xchg pxor rcrb cmp push dec xor sub dec jno sbbl xchg cmpsl shrb gs mov loope out mov sub (bad) (bad) in jne nop mov rorb sub stos jne ret sbbb cmp push xor sbb outsb jno lret cmpsb jmp mov cwtl or popa push clc ljmp pop mov push mov xlat daa jecxz sbbl imul mov jge lods sbb push dec (bad) addr16 xchg sti jmp mov mov inc cmp in imul inc fs pushf add sbb xor pop xchg fwait test sti pop jmp aam jmp loope adc pop jecxz sub sbb daa push mov sahf jge out xor lock or out loopne leave je jno or dec repz imul roll mov mov int mov push adc and jne (bad) mov insb jge cmp mov mov enter imul cld or iret xor cmp mov xchg lds out pop mov fidivrl push and xor pop out push xchg cmpsb sub add outsb ficompl adc cmp push rcrb mov nop lahf mov rcrl add push mov sbb ret sbb popa mov cmp push sbb dec pshufw call sbb loopne mov push popf and scas in in les (bad) jno leave inc dec xchg outsl test mov mov lret inc hlt mov or or aaa xchg addr16 jae xor in sbb jno fiadd xchg sub push mov push cltd fiaddl cltd leave and inc jnp or xor ret mov mov loop cld pop add aas mov cmpsl dec adc sahf pusha jno mov stos inc incl cwtl jge dec repz sbb adcb mov pop in cwtl sarb xchg (bad) je call das shr fxam add aaa out lock lods cld push (bad) mov push ljmp mov push aam cmp leave fnstenv cld es stc in mov xchg addr16 lahf push and pusha cmp pop sbbb xor lret jne dec fldl inc add xor cs mov out out pminsw xor inc loopne aad bswap data16 mov xor adc aaa (bad) mov mov test mov xchg mov sahf popf adc jns sar xor mov je lret sbb cli jns loop ret popa jmp inc push outsl inc mov mov cwtl es push mov test insl popf mov iret js loopne in cmc or sbb test data16 bound into xor sub repz das mov movb lea jmp stc comiss rcll push clc dec rep repz mov sbb lcall mov cmp insb push mov mov inc cmpsl pop outsl cli fs loope imul decl mov dec add int cld icebp push sub jp rorl (bad) fldcw push and (bad) (bad) push mov cmpsl fwait ror test mov cmc push mov imull insl ret pop es sbb jg int3 repnz push call aam xchg dec jbe not xor pop and insb (bad) pop dec xchg in mov jmp sub adc inc xchg (bad) lea fldl fnstcw frstor das sbb (bad) mov mov sub sbb dec push push mov rep adc pop out mov in (bad) mov push adcl push jnp lahf add ret out and and (bad) rolb pop outsb mov jae and sahf scas push mov xchg mov jnp imul je ret fcompl stc dec rolb adc arpl cmp orb out sbb aam xor icebp or (bad) or xor or mov inc daa rorb and and cmp mov or mov jns test popa cmc aad ret or insb mov xchg jecxz jne pop les cld or or push dec xor pop mov sbb and sub and (bad) push popa cltd scas mov pop jae mov arpl jno (bad) sub loop lret bt not pushf call add dec outsl outsl imul arpl jne je imul cmc bound clc enter orl (bad) mov pop inc jnp mov mov sbb gs lea and push mov ja or mov xchg in jne mov cmp mov push daa cmp pushl or das addl cmc ss (bad) pop enter add dec and or push dec dec (bad) (bad) push mov loope in adc pop mov adc mov mov (bad) jecxz mov jno out out test out mov and mov iret adc outsb sbbl pop jmp xchg test add dec out mov dec fmul cmpl mov imul mov rclb (bad) repz shr sub ret xchg lods popa popf xchg mov and movsb (bad) cli das das inc jno les xor lret shll sbb rorl sub add mov outsl dec pop push cld inc in xor cmp into aaa mov rcr add iret and movsb into sub push imul les fwait mov in lcall imul jp (bad) loop repnz addr16 leave xchg jl int mov xchg pop and pop outsb loop fist xchg and xchg daa push sub dec out adc in flds (bad) das fisub loop dec into xor adc mov push ss call in (bad) or fnstsw and mov pop les dec push call push mov in xchg in rcll xchg imul mov push inc cmovg jo test inc pop test je dec aad sub mov dec or and mov jle mov bound mov adc xchg mov call adc mov dec icebp lods (bad) push imul icebp inc popa push scas mov int push repnz sbb inc adc fcmovnbe jnp sbb cmpsb add mov sbb mov sbb gs cmpsl (bad) or pop loope and xchg dec or mov int3 shrb rep popa popf mov ret sub popf mov cld (bad) cmp mov push std or imull mov xor (bad) sub sbb or addr16 ljmp and loope roll popl dec jne jno pop lods xor cmp push lods adc popa mov adc (bad) xor jne push call fwait aas inc ret aam cmp test jo mov mov xchg subl pusha mov incl bound jnp dec fdivrp xchg dec adc jns xor iret scas rcrb jp and jno jl sbb jae mov hlt cmc push jg mov bswap arpl icebp outsb ret call aaa pop ljmp (bad) cld and xchg inc decb and sbb pop out adc jmp pop ret adc and jmp xor mov mov ljmp jne popa cmp and sub xchg sbbl adc jle dec loope mov sbb scas outsl andb jp gs into fildll fs jmp movb fldcw mov in pop push xor (bad) sbb insl ret inc sbbb jno (bad) in sahf lods mov aaa lea in adc je imul push fadds (bad) test fiadd or or lock arpl sar (bad) cltd pop lods mov pop jecxz cs cld mov sub or xor cmp adc or mov jg jecxz popa cmp cmp dec add push dec mov or (bad) or pop inc jg pop mov lds push sub movl lret sti xchg insb in dec cld pop sbb xor or mov mov ljmp test xchg push jns adc pop scas xor dec les mov jo popa xor stos dec mulb pusha jmp jno shrb cmp add sbbl lret push call in arpl pusha mov push addb xabort xor in aas xchg pop xchg or mov mov in mov in std clc (bad) fmuls push addr16 hlt adc pusha jmp cmp popf pushf ret xor xchg in sbb cld cmp pop shl cmpsb mov call ret xor cltd mov jp imul lock sbb loopne movsl cmp mov ljmp gs or insl stos je inc ret add jl pop (bad) (bad) ljmp push int3 push push insl jmp xchg mov and fidivrl cmc and sub push and adc jb sub add insl mov aam cmp add xchg lods and and repnz sub cmp cmp pop std sub jnp sub mov int3 and call jg mov fdivs inc clc cmpsb fnstcw xor mov add inc gs jb jns outsb jbe jb outsb insl outsb je insb outsl arpl rorb lock and cld push mov pop scas cltd stos xchg dec jo js push dec pusha jne sahf xor sti fs inc into jp dec push push bound movsb (bad) (bad) pop lock sbb fistpll mov or or jno ret xchg xor or adc in or push cmp movsb jp dec sbb (bad) stos call mov cld cmpsl rcrl into jo jo jo jne push cmp iret dec jg adc repz shrb pop mov fwait mov mov pushf pushf pushf lea ja pushf movsbl movzbw mov lea xchg mov sete bswap movsbw mov movsbw call pusha mov inc lea pusha pusha jmp es xor mov xor xlat cmp mov fidivr and add sub or iret loopne add jae popa pop int3 cmpsl pop sub mov xor pop push (bad) add sub mov ja addl out push call psadbw ds inc xchg sbb adc push cmc movsl cld ja sarl mov sbb xor xor nop je mov sub xchg push xchg sti push or cli (bad) aad adc insl xor rorb dec xor push stos jns std loope fisubrl adc shr sbb divl in sbb or hlt add orb into mov mov (bad) je or jno mov jb pop call out jmp (bad) mull fwait and inc cmp test adc xchg outsl adc sbb adcl fldl push scas scas xchg out cmc lret mov xor das lock add das cmpsb sbb dec lods sub push loop daa cmp jl push lret xchg and pop jae xor shr fsubl nop scas aaa mov dec das (bad) pusha (bad) push inc jge mov pop movsl mov repz and loop insl cmp or jle xlat call aas fbld cld or sub (bad) sarb insl mov in and pop imul sbb faddl aaa inc jle arpl pop bound pop mov shrb (bad) adc inc (bad) je pop inc leave jne jns push lcall lds je in jb dec mov jg and push inc fisub adc push sbbl aam cmpsb ret imul cmp push push mov out outsl ret mov cmpsb sbb jge or scas jl cmp rolb loop out ret mov cmpsl daa (bad) into lock fidiv (bad) sarb xchg in and add adc sbb add or dec xor jge bound arpl jo inc aas cmp iret xor stos popf sbbl dec cmc sub lret leave cmp pop inc lret lea jno (bad) xor and insl jle (bad) jl pushf add adc mov jp add (bad) enter jbe jg mov push lret dec test mov inc mov outsb adc pop rcrb addr16 push in (bad) (bad) hlt jmp sub dec dec jb jno mov jmp push stc push lret and scas push std inc pop imul aas out in imul pop mov enter add ss decb iret das inc aaa add lahf xchg sub mov and xor pop lock pop pop sbb pop loope push cmp sub and cmp add lret pop shlb repz imull mov cmp pusha subb jge sub lock or aad ss jno and or add imul mov je das das scas push push popa arpl pop mov xor jle cmp pusha jb test xor sub sti ret inc mov or cmp je mov cltd stos test xchg mov fistpll sbb mov (bad) jecxz ds pop mov ss or add mov cmp fadds mov mov sub and fimull mov pop and (bad) icebp inc inc stos xor test pop pop sub mov pop mov js inc sbb xchg add xchg popa std (bad) jmp call mov xor mov mov out xor popa sahf adcb push outsl psubq add int3 jno mov push data16 inc orl cltd pop mov es mov test lds enter jp mov lods aas loopne les clc out lock loopne adc or xor xor sub dec lahf (bad) push jl cmc push jb and pop lods lds cmp sbb lock push lock loope shrb dec (bad) dec mov rcrl pop jl repz xchg test push adc push sub xor gs xor flds add (bad) ret cmc aas negb data16 (bad) ret fsub js pop int or inc (bad) cwtl call xchg int3 loope dec xchg lods aas pusha jno ficomp inc in xor adcb outsl orb cmp shrb in or jp push lods mov dec mov dec xchg push push dec jl jno data16 mov cmpl imul leave mov mov out sarb movsl mov pop jecxz or cmovg inc xlat sbb sub and jp mov int3 loope sti or pop movb pop mov pusha movsl jp cmpsb dec mov in pop push dec call mov mov incb movsl pop fs sub jl rorb lds push rolb adc dec stc out scas int3 push lcall (bad) push push scas mov cmc and adc inc pop adc imul (bad) out xor pop lods mov jecxz repnz inc cmp sbb mov (bad) jo shrb cmp ljmp adc repz in pop and mov mov in gs sub fisubl icebp mov ja (bad) imul call mov stos movsl mov inc imul je outsl outsb inc add test xchg (bad) decl mov xchg (bad) decl cmp pop bswap bswap mov jmp jmp in cmp push or mov mov xchg out (bad) jb xchg or mov (bad) xor stc data16 dec push std inc ret jnp test jge xlat popa mov mov sbb test push pop add fsubs aad mov out int pop xor cmp imul and movsl imul mov add or test ret sbb push dec xor and rol into ret sub xchg scas xor lods pusha sahf (bad) fstps fist cwtl in jno mov push lea jb pusha pushl pushl ret mov jmp cmp jmp imul movsl xchg out cmpsb es sahf stos clc inc sub and insb adc adc gs pusha xlat push pop dec mov in pop and inc push pop int inc stos pushf mov iret jae push in ud2 aam mov mov jns pusha addl xor fldl and sbb mov pop xchg outsb adc (bad) leave je push leave (bad) mov je,pn loopne xchg dec mov jmp sbb and int xchg mov push test outsb xchg mov and xchg jg mov stos hlt mov mov xor (bad) xchg xchg movl jg xor into aaa mov and add push lret ror mov fdivs int3 sub xchg cmpsl sti js idivl inc push pop aas push mov cli mov xchg call mulps sbb (bad) std xchg sbb (bad) jmp xchg cltd sbb std push pop xchg jl xchg test mov push mov in dec and adc gs sub adc fsubrs pop sub aaa shll leave adc jnp aam sub (bad) repnz mov xchg xchg icebp inc sbb pop bound popa movsb data16 jno mov add je int3 arpl je arpl mov xchg jmp xchg ret or testb bswap pop out movsb cmp jl pop inc jge movsb pop mov out push and mov xor mov test cmc or in std adc or inc xor sub enter mov jg sti sbb sub (bad) sub add mov mov enter push popa enter rcrl adc sbb aad (bad) cltd (bad) xlat jmp add js push xchg push fbld (bad) je jg xchg sbb aaa (bad) push icebp xlat outsl mov xor xchg ficom adcb stos mov or fcmovnu sub aaa mov jmp pusha and mov sbb cmp gs cmp add xor or or iret dec gs mov (bad) lret shrl lock xchg dec xor pop and jo sahf pusha push adc push (bad) xor xchg es in mov leave push sbb (bad) xor mov adc or inc rcrl sbb cmpsl mov pop sbb xchg int3 push lret xchg xor popa (bad) mov imulb or pop fdivrl ja aad or out fistp sbb ret lea cmpsb popf jnp pop loop lcall pop inc cmp mov dec xchg stos adc inc adc cs and add stc inc dec outsl push mov mov inc mov pop mov mov out mov and pop cmc test clc mov arpl or (bad) sub and insb ss mov js mov inc rclb or enter addr16 or in pop es aas push imul adc je xchg xor (bad) or test and push or push addr16 mov mov shrb ss ds inc xorb add dec jp jl cmp mov pop mov dec fnsetpm(287 jle test xor jns ret fs mov pop mov rcrl in fldenv pop and popf ret xlat sub outsb out rolb stos mov out stos imul add clc cmpsl push xchg jnp sbb jno push data16 rolb xchg push scas mov out movb pop xlat inc pop xchg lret imul dec fldt popa loop and jno cmpl xor xor je add fstpl stc sbb jp jnp mov scas lock cmpsb cwtl sub adc fs nop into ror mov jno mov sbbl sbb sub enter fsubp loope push or ds movsl cmp bound mov std and jae pop mov call (bad) imul (bad) mov (bad) jge add push lods xor mov mov (bad) xor dec fildl sbb sbb xchg mov ljmp jp hlt ds xor mov fwait pop in sbb xor scas push (bad) cmp insb fbstp adc lret inc push std mov fs mov or call jg,pt sarb imul jne mov stos scas mov loope push mov aad ljmp pop mov sahf rorb fs jne not not lea push mov pusha lea jmp call lea je pusha pushf push movb adc pushf push pushf pushf lea jmp lea jae cmc cmp jmp jmp mov daa (bad) dec mov mov in xchg dec push mov int mov adc push test push into and or loope (bad) mov mov std icebp or je fnsave jo test mov sbbb sub (bad) repz daa fadds pop outsb icebp scas out mov sbb getsec fidivrl inc jnp mov dec std or adc int cmpsb scas adc in inc std scas out cwtl test fsubrs push dec int3 je lods add push jle pop and loop int3 imul into inc sbb jbe lahf mov push shl and int3 mov mov rcr add add or add mov js jno scas je push lret stos test arpl jl mov pop loope loope jp bound mov mov cmpsb mov lea repz aam mov sarl data16 dec inc cmp adc mov or pop sti arpl push jo lret jg mov lahf and iret repnz out in sbb stos ss xchg fidiv scas ss (bad) pop mov mov add mov ds lds fadds clc mov (bad) pop or xor fs cld mov (bad) fwait into sarb js inc call xchg mov pop out xchg sbb dec mov (bad) adc mov cltd (bad) shrb test ret adc cmp inc insl dec pop mov bound pop flds and dec daa lret dec jp lret call fisubr js xor inc jns pop pop jne loop movlhps (bad) inc cmp mov pop int dec jmp mov pushf sti jae cmp stos xor fstl and cmpsb mov js and jl in mov fcmove pop inc inc in nop stos xor xchg call jmp clc popf add cmp aaa mov pop sahf xor faddl push insb jb mov movsl subl mov push ljmp loope js mov and fisub ja xchg or loope test dec jg jle ret and adc mov ss push mov nop dec sub lret out adc mov sub adc sbb leave pop cmp push frstor mov js sbb (bad) fsub std cmp xlat pop (bad) ffree or fistpl in cmp call jno lods in mov and xor and popa and mov lea jmp jmp test mov call lea jb jmp mov fucom mov (bad) mov and hlt dec js pop lahf pop cld loop cs lcall cmp dec add xor or (bad) insb shrb xchg or xor gs pushf jnp pushf fcmovb aad (bad) cmc push mov fnsave adc pop rcl adc (bad) mov inc hlt mov pop rcl add addr16 push cs xchg popa stc jne inc (bad) scas fs fild insb inc cmp test (bad) xor inc sbb xchg mov mov cmp daa das adc push jne sbbl push dec push inc jnp iret and lods and add inc gs outsl fs gs popa outsb fs gs add movl mov jle daa mov es pop dec mull push inc cmp andl or push sbbb push jns mov jg test int or pop and jle,pn or cmp cmp imulb imul or push pop mov mov repz loopne (bad) mov mov fld stc test dec jo dec pop mov inc (bad) pop mov sbb jmp jne into imul ret cmpsb cmp cld and ds mov sub rcr ret adc scas adc xchg sub lods jno stos sub mov sub sbbl add jmp inc push addr16 inc ret cmp inc push out das mov outsb fiaddl lahf jae clc (bad) mov outsl outsl or (bad) dec rcrl addr16 fsubs sbb push ss mov data16 aam roll pop push inc jecxz sub insb mov mov sub call mov lcall shl or jns push loope mov lds xor mov repnz movl into push bound stos fwait hlt sbb outsl das outsl push mov (bad) sub add (bad) aam pushf inc lret push sub jae dec xchg sub add pop idivl inc stc les xchg xor aaa (bad) fcoms inc mov cli psubusb call jl jl xchg stc or jecxz nop mov imul gs sub sbb sub xchg cmpsb inc gs xchg ret insl jle ja adc jecxz lret repnz icebp or xchg (bad) movsl cli dec inc mov int3 xor mov imul sahf iret mov sub fistp cmp xchg inc cltd dec jne add xor push xchg stos daa sub dec push mov (bad) outsl xchg pop out push call dec pop in push fs xlat sbb xor outsb adc and sarl outsb adc dec je dec adc int cmp and or add pop mov clc cmpsb mov (bad) xchg das mov mov arpl test pushl lea call pushf pushf mov pusha lea jmp and es jmp push dec jne (bad) lahf mov ds aas loopne inc adc pop aaa mov push pop xorl jmp mov jmp or or fld fld sti cmp xchg fnop cmpsl sti sarl clc fisubr mov in mov lret inc inc in es movsl iret aas sbb sbb push sbb (bad) loopne jno or insl test sub inc mov (bad) xchg mov mov xor sbb (bad) in rcr daa cmp popf pop lea jg xor mov cld ret mov mov add mov jno test dec mov pusha call pushf jmp movl pushf call dec jb das push daa cmp out xor loope in mov pop inc (bad) cmp dec ljmp in sbb xor or jecxz lods mov and sbb push lock popf test mov mov mov int3 roll iret rorl sub inc mov cmp lods sbb sbb adc fs xchg jg sbb outsl test loopne jbe ljmp clc sbb fwait out fisub test (bad) mov sbb cmpsb mov (bad) faddl gs sbb lods out cli jno test mov jg loopne add popf loop int sbb cld dec xlat mov cmpsl inc fisttpl (bad) xor out mov and sub sbb jbe cmp pop mov pop sbb sbb fisttpll xchg cmpsl cmp dec cmc cmp add or jmp jl inc add mov xor inc cmp sub cmpsl idivl lock call out fnsave pop adc add jbe mov fwait pop and es jo sub sbbb lea add inc in xor lret loopne and cmp aas and stc cmp push jmp lock in (bad) in mov mov (bad) js jno cmpsb pop xor aas lea je adc push mov and add add stc pushf inc mov movb pushf test jmp in fisubrl xchg daa loopne adc outsl push loope pop push dec sub and adc rorb add mov mov and pop mov mov or imul idivb stc xor jne aas xor pop pop data16 push push xchg inc add pop lcall loop push jmp cmp ds loop jno inc fiadd dec sahf and icebp lea cmpsb outsb and sarb std mov cwtl mov rcrl repz (bad) ja jmp js (bad) idivl xor mov mov ret cmp xchg mov push xchg (bad) mov in call push test mov insl lahf push mov repz xchg mov pop cmp sub je loope push andl xchg jno,pn push or jl movl sbb fiadd push fldenv rolb sbb xlat or jno cmpsb push mov pushf mov call pusha lea jae pushf jmp and cmp pusha cmc add sub cmp test stc add call repz or xor (bad) add clc (bad) fsubs (bad) jb mov int lods adc call add xchg mov lods inc jo lock mov push or addr16 test mull jnp test dec xchg sub xchg loop outsl mov mov test push in mov imul out push push unpckhps jle xchg in sar inc xchg and pop and andb popa sbb dec push inc jb push test mov (bad) cmc ljmp mov stc cmpsb sub pop movsb sarl adc mov jb mov jmp jecxz cli cmp lret cmp push xchg or jmp lret mov xchg push outsl jmp mov (bad) imul cmp pop add mov clc and xchg push scas push xchg cmpsb lcall inc repz sbb stos xchg fisub sarb cmp inc mov fiadd sbb test dec adc xor movsb fnstenv mov mov bt push stc cmpb pushl pushf pusha pushl lea jne shr rol sub cwtl daa bt aad mov not sub sar rcr add sar pusha sar push mov bt bt test push lea je push cmp jmp cld js in jb mov shll ret push dec or mov aas ljmp mov or rcrl mov cmpsl mov push cmpsl pop test cmc sub lock clc out sbb stos pushf mov subb dec pusha jne popf inc push adc lock xor pop nop mov lcall xchg adc push sub decb adc cmc ljmp push imul insb push cmp stc jp repnz and pop pushf mov repnz (bad) incl insl ss sub mov cltd jp xor sbb mov xchg das (bad) adc xor xlat dec lock jno mov mov int3 iret mov mov rcrb xchg into xor cmp xchg daa ja mov cmp loopne push fsubrs push push rcrb xchg movsl xchg daa mov mov out lock cld add movsb jp loope adc cmpb test adc adc fs mov jmp sahf aam mov mov or popf xchg leave xchg or mov rorl xchg sub outsb ret cmpsl test mov shll inc cmp and std pop add xchg imul xor cmp mov add pop es inc fwait pop fsubr mov fucomp imul xchg inc add inc call mov outsb mov stos cmp push aaa xlat inc pushf and lret add mov not cmp fdivl and dec mov inc add xchg lahf mov jae into mov push out into inc jnp push cli test js fsubl mov sub das aaa push repnz inc fidivrl push call rorl push das mov mov nop ljmp mov js lcall sarl lock xor sub aaa daa out scas das imul jae sbb jb das cwtl sbb stos xor ljmp enter push iret adc int3 jp popa test jo stos add int inc fucomi sbb jle push cld dec adc push icebp xor mov mov (bad) cmp inc push (bad) push push adc and xchg mov mov cltd movsl scas xchg ror fisttpll cmp stos popa adc testl (bad) pop loopne cld pop jle int3 push push mov loop mov mov xor dec sarl adc nop xchg stos push call adc inc jle aad std push dec adc repnz adc jb xchg psubq imul daa aaa fildl push enter std inc inc rolb test mov mov jno push adc loopne mov push dec mov inc cltd mov xchg xchg lods mov jno jl mov pxor daa cmpsl ja sbb cltd (bad) pusha jge stc data16 (bad) and scas icebp inc ficomp add incl pop lahf mov lea je call xchg dec mov mov js lret jge aad adc sbb aaa sbb in mov (bad) aad shl jecxz jnp ret xor jecxz inc outsb mov xchg bswap loopne cmp loopne jne icebp push cmpsb mov jmp out mov jl clc xchg addr16 jns ljmp hlt xbegin insb xlat cwtl es mov aas sbb xchg lds imul fwait pusha jg fwait xchg pop xchg mov lea dec jno fcomps insl ror mov enter lcall xchg jno,pn lahf out cld bound push inc push dec xor cs insb add xor mov test call xchg je or jl xor mov int3 push stos cld add or add out xlat insb stos jae push enter push add hlt movsl sbb clc fcompl push xchg pop pop jnp lahf mov xchg and movsl dec mov rorl std and dec aam mov cmp adc pop mov or xchg pop call je xchg pop cmpsb es outsl xchg sbb mov insl mov (bad) sbb test xchg sbb pusha or add xor xor pop inc aaa inc daa pop frstor mov jb cmp sahf lret les repnz aas and push repnz sbb inc push cmpsb mov mov xchg jae xchg pop (bad) pusha mov pop (bad) or jne loopne pusha (bad) in sbb lods (bad) inc mov cmp xor jmp dec mov test data16 int3 addr16 cmp loop sub test or lock or mov add int sbb mov mov add lea jp test popf shl cmpsl mov into (bad) negl cmp push or adc pop (bad) xor adc sahf add and push xchg cs outsl int rorb push dec push mov cmovg aas lods jae pop cmp or mov cmp stos mov popa (bad) jno sub inc pop push mov or and pop call xchg jle sbb (bad) pop fs jle add out ljmp add adc je mov pop shrb or dec push sub pop sub pop mov push outsb or push pop and aaa repnz icebp scas pop jmp ds jno pushf (bad) jne aaa sub je pop imul nop das or dec fidiv mov jbe (bad) cmp dec repnz idivb out (bad) mov outsl dec dec xor ja lock push dec (bad) cld xchg jl jae pop cmpsb and imul xor stc sub out fwait cmpsb pop idivl bound dec lea cs inc mov mov mov fist mov jmp dec push mov or (bad) cmc leave fadd mov sbb pop pushf clc xchg add jae outsl xor jo fiadd sahf dec add adc les push dec push mov push sub jnp fist lahf add sahf mov (bad) ljmp mov ljmp sbb data16 daa pop test ret xor test add jle adc push pop xor jne push pop push push (bad) jb aad mov pop xor add iret jae mov bound xchg nop mov add jl mov pop nop sbb xchg jmp mov (bad) jb ret jl movsl fsubs add pushf adc sbb sub imul in push sub dec pushf inc imul push cld add in clc daa jl inc sub adc (bad) sbb nop xchg stos in out popa fstpl lods jb nop iret adc pop mov push fdivl push (bad) addr16 xorl (bad) nop into xor add pop cmp rcrb fs lret fsubl lods pop and popa push push jmp (bad) std movsb int3 push mov (bad) cmp (bad) int3 shll in or push or inc adc jno lcall and test jl add ljmp mov pushf adc xor sbb xchg test jne mov mov pop mov mov cmp dec xchg pop jecxz repz mov icebp adc fs push dec push mov das push mov lcall or outsl jo nop inc pop imul aad in stc xor mov iret (bad) aas das push dec xor aam cmp lcall and pop outsb (bad) notl popa adc aaa push jecxz or ss inc cld pop add scas mov pop cltd hlt fwait pusha sahf clc mov mov call mov mov divb dec pusha movsb dec add data16 mov aas or push rorb sub add cld mov incb sbb repz fldt inc push xchg test sbb ja fild mov lahf hlt std popa mov mov inc out push pop stos out xchg popa xor lret cmp popa icebp int adc jg dec push jecxz mov or ret cld or jecxz and jecxz (bad) ja in xor dec cmpsl xchg sub in rol fsubrp inc call mov sbb int lock or push scas adc lods pop cwtl insl test cmp adc xchg scas shl jno cwtl sbb test neg call push jbe (bad) xchg mov sub fwait pop mov int3 scas sarb les mov cmp out daa js pusha xchg je dec pop jae sbbl mov xchg hlt out pop sub je (bad) mov fiaddl cltd add cmp cltd test or das sbb mov das xor fiadd sbb jb scas xor inc bound popf call outsl (bad) mov sub xchg in push lea cld cmp aas mov (bad) lods repnz ss mov cwtl ret int3 (bad) cld stc clc pushf test movw call jmp repnz and xor sub icebp insl ljmp imul test mov jno ss inc push popa pop lahf call (bad) call mov cwtl outsl inc pop outsl lahf mov xor and movsl dec adc jno push ljmp xchg dec lock sarb imul mov repz shr shr aam es dec xchg pop lea cmp out mov ja ja iret scas lock std (bad) xchg xchg sbb pop mov xchg das (bad) fwait add hlt (bad) ffree mov add dec outsb je jb outsl arpl fs arpl insl outsb je jmp mov lea pusha movb lea call pusha mov lea jae cmc stc jmp push pushf mov mov lea call pusha movb sub mov pushf lea jne jmp pusha clc cmpb movw lea jne xor add sar mov bt pushf add cmc movzwl lea rcl mov cmc add cmp mov call sub inc addr16 mov cmc inc ds pop push xor adc sbb and pop sbb jp scas test or mov movsb mov test add lahf mov inc push pop insl cmp inc inc pminsw fidivl push cld xorl or ljmp mov mov jl clc lret jecxz mov adc or arpl sbb dec pop mov icebp lret mov int3 shll std pop add cmova icebp in fsub daa jno xchg (bad) mov in and in roll bound mov faddp fimul cli dec scas test mull cmp gs je std popa jb mov fcompl push data16 push sbbb dec push add add sbb jle xchg or sub pop (bad) jmp mov es rcr inc out pop cld mov cmp sti or shrl lock push mov test mov rcrl movsb jno addr16 mov cmp pop xorb cmpsl mov stos repz das (bad) push fwait hlt aaa or jb pop pop addr16 cmp sarl rclb scas adc jns pop arpl jo test in mov mov fninit rorl pushf sub ds out in pxor out jle,pt (bad) mov and jmp jnp mov push cs mov repnz dec xor jecxz dec pusha inc pushf lock push lods add outsl push (bad) mov ljmp adc jmp sbb and aam add mov repz hlt inc outsl pusha cmpsl add adc and js cwtl pop jbe dec (bad) (bad) jb lret xor sbb stos repz sub dec jmp xchg jle insl xchg and mov sub es inc pop mov icebp lea (bad) jne dec adc ljmp jbe pushf sti adcl insb jge out int lods repnz es stos jne push lret aad xchg jns dec out in mov inc in das add dec out dec mov inc fsubrl in add push push and cmpsb fbld sub (bad) mov pop pop fsub mov adc jl addr16 jae sbb fcmovbe leave push push imul mov xchg add inc sar fisub xchg std mov pop jne fist dec and into roll lret int3 lahf sbbl aaa (bad) mov and mov mov jle pop xchg xchg stc fwait movsb movzbl pop pusha push mov call (bad) dec xchg fucom nop scas out add addr16 push addr16 push ja xor pop fildll inc sbb scas dec imul mov lea rol insl jbe negb dec ss inc pop outsb cmpsb int3 sbb sti adc repnz push out sbb aad mov aam jb mov cwtl (bad) lock dec sub sbb push push or lret cmp loopne mov inc mov fs cmp xor jecxz pop sub mov xchg ss mov adc leave mov pop aaa dec push sub fs xchg (bad) xchg fwait test jno xchg and or int3 dec xchg push sbb imul cmp cmp jmp xchg insl mov je les pop pop inc cltd xlat (bad) or sahf mov (bad) (bad) loop xchg adc adc and repnz out imul sarb imul aaa pop (bad) jecxz cmp jne xchg sahf inc adc mov aas lahf loope xor and or std ret loop adc (bad) xchg sahf addr16 arpl fwait adc rep repz imul dec xor inc stos je jns xchg jno xchg cmp inc loopne ljmp imul jne mov fld fnstcw es sbb push jmp adc outsb push dec mov scas jp push out shr inc stc cltd sub stc (bad) xlat fcos scas outsl pop ret jbe fnsetpm(287 add or es sahf fbld jno (bad) repnz add add in mov fidivr mov jnp sbb mov mov imull cli cmpl aaa test jg ficompl push pop sbb mov stos xchg cmpsb push jmp lods cmp push sbb roll push xchg jno xchg (bad) or mov scas or push pop push and stos int3 adc adc nop hlt mov adc mov or dec and std in mov movsl loop sub sti (bad) repnz push sbb les mov (bad) mov or loopne dec bound imul xchg xchg mov lahf and divb inc stc cli into or push out fisttpll cmpsb mov es (bad) repnz rcl fisttpl stos jnp aam fwait scas cmpsb repnz pop (bad) mov fsubl data16 mov push mov lret (bad) shr xchg arpl cmp repz scas sti push inc mov neg add out ret (bad) dec idiv cmp push xor xchg cld sub or loope movsl push scas daa sbb dec clc or pop adc pop in fidivr mov sbb xchg out (bad) xor or cltd xor or insl aam rclb mov in sub xor int incl inc mov imul popf mov or bound mov inc aad xchg icebp or out (bad) daa add and sarb mov jo int3 popf in mov or push (bad) dec push cmpsb adc lods loope or xor test in jmp mov outsb jbe fdecstp das aad jmp adc or jnp and mov or mov (bad) push sahf jo setbe in fsub aad pop pop fmuls mov loop sub jnp notl lret into dec or aas or scas mov mov or jge test pop jne or xlat or add adc (bad) cs adc repnz and cmp stc mov mov inc or popf (bad) mov out ficomp jl push or adc sti jmp and dec push mov adc out out cwtl rcrl stos rorl mov or fisttp mov or cmp fyl2xp1 sbb sbb xchg push mov pop xchg dec jnp insb movsl pop jne push cmc and mov pop (bad) mov xor sbb fsubs out or mov aaa mov stos popa cmp dec nop test or call jno or fldcw stos loope mov imull (bad) xchg inc mov cmpsb jmp div jne cltd mov xor das shrl jecxz xor inc mov mov clc mov sbb iret xchg in pop inc data16 push fildl js xor sbb xchg std mov adc xchg add and jp hlt stos ljmp sbb enter mov fdivr push mul jle and push test rcr fcmovne mov sbb mov scas popf inc idivb adc iret pop dec lret mov inc lahf xchg mov stos or xchg jp js movsl push rcll stc leave xchg inc mov pop iret push jp mov lret push xor ljmp dec cs std lcall cltd add mov jo ljmp push or sub icebp (bad) push in movsl ja or cmp add mov and loopne or es stos nop sahf cltd out and sub movsb insl nop aas fs and dec aaa dec fistpl mov sbb mov mov inc mov mov pop or enter pop pop divl fild ret mov jp mov fstpl dec jb jae or mov sub or add adc or leave xor in push fsub rol sub push enter outsl test cmc dec pop adc leave xor std (bad) mov or stos inc adc testl sarl sub add mov insl rol dec mov cmpsl fsubl in mov test jnp pop or icebp loopne push sub mov inc out mov or jl lock lea mov cmp divb or hlt iret mov divb push dec and mov adc jp dec stc (bad) pushf or sarl or sbb js and hlt int push sub std cmp mov out jns mulb xlat lock leave mov aad mov mov mov mov imul stos test (bad) or xchg mov jnp div dec or xchg imulb loope shrb mov test sbb clc shll test sbb hlt insl push mov xchg test jns cwtl popf int xchg in test (bad) aaa rorl loope fwait xchg jmp cltd shr hlt dec fucomp icebp xchg vdivpd (bad) loopne mov hlt rorb dec (bad) insl in test call cltd cmc mov div mov fnstenv shl repnz xor (bad) add jmp push test out cltd arpl or fwait int ret hlt repnz repz cltd iret mov outsl std xchg aam xchg (bad) neg cltd cmpsb mov cmpsb xor push loope cld das outsl out cmp out enter xchg dec xchg inc lock xchg (bad) xchg cltd mov cmp lcall aad sbb mov xchg leave lock test mov std insl fwait in lea rcll loopne inc xchg loopne pusha enter movsl in shl fwait out pop jns push shlb jns jne lea jns jg lea xorl mov xchg push (bad) xchg mov xchg stc mov xlat xchg mov pop mov pusha mov adc fwait lds mov iret cltd (bad) xchg (bad) lods (bad) mov mov xor xchg in test neg jmp out xor test pop xchg mov add enter (bad) xchg xor sbbl mov cmpsb aas out ftst enter movsl xchg popa push jle stc stc fwait xchg mov cltd xchg sbb xchg xchg inc test rcl je scas (bad) cmp test mov cwtl xorb jmp mov lret xchg and jmp movsl xchg roll xchg cmp cld xor test (bad) mov cmpsb test enter sar ror aad jmp cmc cmpsl and std cltd mov mov addr16 popf xchg xchg xchg icebp mov mov std mov (bad) enter fisttpll jle fdivl hlt data16 stc mov testb inc stos mov outsl jo pop icebp xchg mov sbb idivl mov movsb mov push dec ljmp push sub push mov movsb std push sub inc lock loopne loope loopne jb pop mov int mov in jnp (bad) icebp sbb jnp imul rclb or push sub (bad) (bad) std or sti cli stc clc out in in loop loopne out in or jmp jmp or rcl rcl (bad) fisttpll (bad) fcmovu fadd mov (bad) ror int int3 lret lret mov mov mov mov mov mov mov movsl or scas lods or xchg xchg or sahf popf cmc pushf fwait lcall addl lea fstl xor mov mov test addr16 mov gs pop mov cltd cld mov push stc cmpsb sti movsl aad shr (bad) mov add mov scas xor dec xlat push ret dec (bad) in out mov mov cmc jmp wrmsr xchg mov ja cli jge movl mov xchg out nop movsb shl mov xor xor sbb push add jmp inc cwtl std (bad) outsl (bad) xor lods test std xchg jmp les fstps cmp cmc popf dec xbegin cmp loopne pushf dec fsubl pop dec mov std imul aad repnz sahf jg roll add sbb fcmovu add lret cmp gs mov aas fwait push nop ror mov repz cmpsb mov mov fnsetpm(287 sbb inc int lcall popf xchg in xor iret sub stos subl out out int3 cmpsl jmp rcr mov xchg jp (bad) mov movsl mov mov xchg fstpt loope pushl insb call (bad) jb mov pushf leave mov roll (bad) daa mov repz cmc jae jge jb out lcall xchg push daa xlat push xchg inc cltd xchg (bad) fsubl test imul jo iret inc aas jge push mov pop stos pop mov mov mov dec xchg add rcrb inc icebp cmp lahf jmp xchg xchg into mov push mov js mov xor adc jge xchg xchg xchg aas sahf test jl iret mov sub stos push mov mov addr16 jo xchg loope sbb das xchg jns cmc rcrb mov cmp stc test lahf mov lods mov roll pop pop xchg mov outsl lret xchg movsb test out push xchg outsb std leave or dec lock lods jns clc lock pop xchg icebp xlat out xchg clc cmp pop leave test jo out ficompl loope imul imul aad mov js xlat jmp sub jmp call xorl jo out aad mov arpl lds or sub and stc cmpsl nop scas push mov cmp (bad) inc mov pushf pusha lea rcll xor lret iret insl lds call mov xchg out pop or je icebp fadd mov mov hlt (bad) dec (bad) mov cmc xchg mov icebp jnp jnp jp jns call data16 inc negl or std jnp mov jae mov or stc adc in push (bad) out mul inc fnstcw mov ror rol inc mov dec setbe jmp pushf aam loop negl cltd scas (bad) rep stc daa in mov shl or push mov stc int3 jns dec out xlat rorb cmp pop ja divl jmp xchg jmp or or notl loop in idivl pop push or or or sbb mov and test jbe jne jae jno jg or jnp jns or arpl pusha outsl outsb or imul push push or push push push push pop pop or pop pop pop pop inc inc or inc inc inc inc dec dec or dec dec dec dec aaa or xor or cmp or and or sub push or adc push or sbb push or add push sti or push fmuls sahf clc mov or mov push cmp push mov mov pushf cltd popf xchg xchg lahf dec xchg (bad) scas mov sar loopne popf sbb xor nop xchg or mov push push or leave mov xchg push aam enter shrb add leave mov pop mov test fsubs mov mov loop xchg add int pushf add jmp and fwait scas pop test jmp pop pop gs mov mov add jne or js aad sub (bad) xchg lods jmp add stc frstor cmpsl stc inc push sub sarl sbb add aaa adc cmc cld scas lods mov call xchg jmp test jmp xchg push call fwait xor adcl jb mov aad call mov mov mov test cmpsl xchg xor test pop cltd lods push and stos lret fs leave or sub or sbb movsl push inc mov or fdivl xchg test popf pop lret mov leave sbb dec cli jecxz test inc test sbb mov mov js xchg shrb leave in pop std scas stos jbe (bad) xlat lock (bad) icebp aam loopne lock (bad) fistpll test nop mov ror rcr das clc stos movsl jmp int leave clc aam lock fmul fucomip stos enter xchg clc out scas loope mov inc mov cmpsl (bad) imul (bad) mov jle mov inc jl not stos jle and das xchg (bad) jmp loopne mov push cmc std loope in sahf (bad) pop xchg nop jg test xchg js mov (bad) nop sbb std frstor sub push mov or adc lock xor js xlat popa mov jne cmp fdivr xchg lock test mov js xlat mov leave int shl fcomi push loopne clc fnstsw rcl aad jmp in pop xlat std mov pand fdivs or lock adc adc js xlat and inc out aad mov js xlat popf mov fnsave clc sbb push mov js xlat mov jmp xchg sub adc pop mov jns test movsl aad stos push ret sub gs mov fwait mov mov push lock test out adc adcl mov xchg icebp das push or stos sbb rcll jmp in xchg (bad) mov aas test xor std dec rcll in jmp movsl lret sahf stc cltd test push outsb outsl (bad) lea push inc xchg mov jmp xchg (bad) lock (bad) fsubl jns repnz popa jecxz cld adc loope popf in mov jns dec popf mov cmp loope xchg lahf or xlat push xor xchg ror jge (bad) nop add add lods xchg pop leave aas xchg cmp std stc out sbbl jl (bad) ss test aas adc subb in roll bound jmp arpl call cld pushf lcall subl loope xchg jns or mov inc inc inc xchg push cmp and gs xchg test pop sbb push stos mov xor jecxz jns mov mov mov out popf xchg ss rorb stc xchg sub das xorl pop mov popa cltd sub push mov mov aad fwait or xchg mov loopne sahf int3 in push sahf sub push pop lret sarb sbb inc clc call ljmp adc push sbb xchg mov xchg test mov and lahf mov pushf (bad) mov stc mov cmp and mov xchg jne pop (bad) arpl iret mov mov sahf xchg in aas test (bad) std push lahf sahf xchg mov xchg gs pop std addr16 or int roll pop push jno in cmpsl push hlt std cmpsl popf mov mov adc push mov dec pop popf in sub mov add push jb xor shl (bad) sbb lcall movl or in jmp cltd (bad) repnz stc mov movsb hlt lods (bad) icebp mov int enter add stc mov aad scas mov hlt jmp loope mov cmpsb lret in cmp sub stc insl movsl clc inc leave mov sbb jno icebp mov dec xchg icebp xchg mov mov jae scas jno icebp dec movsb std icebp inc pop movsl icebp mov add adc js loopne cmpsl jns mov icebp cmp xchg mov (bad) mov mov icebp xchg leave lods scas icebp leave and xor clc sbb dec insl mov xor lcall movsl mov clc fwait fs dec ret imul cmpl movsl (bad) push sub icebp xor (bad) lds adc icebp xor add adc mov movsb icebp (bad) stc xor pop icebp testl cmc jge mov sti cmp sbb fxch popf mov xchg icebp js mov pop mov mov cmp ljmp fyl2x xor push inc mov in jl mov imul cmpsb std icebp cltd push leave rolb in cmpsl dec lds clc sti jns std cmp scas mov clc push mov push adc adc test mov mov adc loop ret ret sub icebp fdivl ss cmp xor mov shll sbb mov hlt and movsb test fdivl pushf mov mov (bad) nop sbbl cltd test mov mov mov adcl mov or cmp loopne call pushf scas imulb cmpsl insl std xor leave stos sub int les xchg scas fscale cmpsb js mov inc lock mov mov fsubs lock xchg fldcw mov mov sbb mov and jmp orl imul stos add sar lds idiv xlat loope rol bound xlat sti mov out jo out aam (bad) loope inc int (bad) mov sarl lds mov mov cmpsb out rcl fnstcw xlat pushf mov mov popf xlat leave mov xchg jo out aam (bad) loope outsl mov cmpl stos xlat xchg mov xchg jnp xchg insl shl xchg gs cmp adc adc fsubrp shl in jns dec pop pusha movsl mov in cmp pop adc rorb mov jb xchg push ret shr mov sub mov or les clc hlt out fmul repz mov in mov js icebp (bad) mov dec in cmpsl cmp aad xchg xchg mov mov adc es inc mov mov dec es inc inc pop inc push inc push inc outsb inc fs jp push arpl cmc dec push repnz xchg jecxz xchg jno inc or out mov out push in dec jmp (bad) cmpsl sbb hlt cmp inc aad sub sbb jae je sbb dec inc faddl inc out cltd xor jmp mov mov lcall xchg popfw and mov shll mov xchg ret insb dec bound or adc insl mov cltd test iret mov pop xchg xchg test or div lcall sbb ret push jno loop enter jne test mov popa dec mov mull dec jns pushf xchg and inc inc gs jne xchg and cs xchg lea jbe ja xlat pop xchg pushf frstpm(287 mov scas xorl cmp cld ret jg pop mov push mov sub inc pushf test pop movsl sbb cmpsb aaa mov cmpsb and (bad) enter outsl in hlt inc cmpsl cli sahf jo xor cmp lret orl pushf cs out xchg inc (bad) mov inc xchg sub mov mov adc cs xchg fild mov mov mov cmp mov rcll mov xor push mov aaa mov mov mov clc push js or fistl fistpll ljmp mov int mov fcoml push mov cld mov lahf adc add sahf ret xor lcall int3 js into pop xchg repnz enter mov xchg divl cmp push ret mov sarl fnstcw push rcll dec in jmp inc (bad) mov mov mov rclb push test test imul lahf mov mov cmpsl mov out out push inc jecxz (bad) pop sarl dec xlat adc pop adc pop (bad) test mov jmp mov outsb xchg jmp pop rcll sbb arpl push cld jbe dec (bad) cmpsl in loopne (bad) fildll (bad) mov aam test rcr jg pusha mov xchg lock xor and sbb mov sbb push inc lret cmpsb inc xchg sub mov lea xchg xchg and lret mov enter fsts sub dec and aam push or lret cmc adc mov repnz movsl mov push xchg in sbb stc dec mov and push jne push in mov movsl adc xor mov (bad) std in enter mov ljmp cmpsl ja fadd mov out mov mov fxch fidiv outsl jne mov xchg test xchg add lds pusha repnz pop adc jl pop test inc cs xchg adcl js out sbb add fwait inc (bad) fcompl stos ss rcr inc shrl mov jmp mov adc fwait mov xor mov push repnz cmpsl sarb xchg or je scas mov scas and adc sub mov or stos jo cmc adc and sahf pop mov pop scas pusha loope cmp jecxz imul xor dec inc adc divl fldl sahf subl jns punpckhdq inc leave test lahf jmp int3 scas xchg bound xchg fistl sbb insl cmpsb and fs iret cmp mov cmp sbb pop mov lds faddp pop lock lods mov nop mov mov mov adc fwait cmpsl out rorb cmpsl rcrb cmp mov adc cmp sarb call xchg mov std pop jmp out xchg stos jb rcll test adc mov enter test sahf mov mov lret (bad) aas (bad) jbe adc or mov inc loopne sarb jp fwait lock popa xchg outsb rcrb jns fsubl pop fidivl and mov push push jmp sbb nop jecxz pop lret cmp nop fcoml shlb xor and dec cmpsl mov cmpsl cmp fwait lds nop add or cmp xchg sbb push cli or ds stos mov dec push add pop mulb in rolb into add cmp pop fbstp cmc adcl iret mov and mov dec imul push out xor unpcklps dec xor in push imul bound cmp lahf jns ficoml aam lods mov push out fwait rol cwtl push push jg and test les fcom mov mov xchg mov xchg imul and in loop enter mov ret loope in inc push mov inc mov inc and int pop popf fildll rol add ret aad fdivs aas mulb in xlat add movb mov add sbb addr16 dec test pushf nop and push loop pop cmp lock sbb push mov test xchg jle ss xchg xchg jl xlat daa push jmp lods pushf fwait xor ret cmp xor iret pusha sub fist scas jnp mov fcmovne cmp mov in adc dec out sbb gs movsl inc dec mov sub cmp cs dec aaa push imul nop sahf mov jnp data16 shlb iret mov jne xchg xor adc in movsl mov pusha xor xor xchg loope cvtdq2ps mov fnsave fsubrs xor mov add cmp lock aam pop imul pop rolb adc enter enter cmpsb mov mov (bad) into mov pop into pop (bad) and stos dec lahf ja (bad) out imul out cmp ret xchg aas fsubl ret addr16 test insl lahf das pop cmp pop xchg mov loope cltd add gs adc lock mov jno data16 and dec mov popf jo out xlat or jge test movsl mov and js jo out aad mov jno jns adc push jo out aad mov js stc adc popa test out aad mov jnp pop js xlat cltd mov aad or pop out aad mov js stc sub pop mov movsl jo clc add pusha lock aad mov js mov jg xor mov js xlat aad sub lock test xlat or cmp xlat popa mov aad add push out aad mov js mov jae and mov js xlat std jmp pop jo out aad mov jne xor gs xlat movsl push clc cmp insl aad mov js stc add insl xlat std sti aam push leave repz aam lret loope jno xor popf xchg lds pop pop loope shlb aad lock insl jecxz add fsub cmp jo lcall mov mov out jo lcall test arpl add (bad) sbb insl (bad) bound gs cli out aam dec jge fisttpll sub (bad) (bad) lock push std xlat int3 scas ret popa sbb inc pop sub leave test mov mov push xlat push clc in call xchg xchg stc (bad) dec mov (bad) enter cmp inc or fsub loop and in mov dec (bad) mov pushf cltd movsl rorl sub sarl cltd movsl stc jbe dec out lock mov jge cltd stc sarl sub sbb fadds mov lcall or popf sbb jmp dec nop aad sub repnz lods pop xchg clc movsb push cmp leave lods repz icebp shrl cmp mov mov imul mov mov xor icebp cmpsl movsl iret ret xchg fwait and test mov test cmpsb inc xor das sbb inc in imulb aas movsl mov movd mov inc sbb sarb xchg jno andb andl mov enter inc add arpl push je subl (bad) xchg (bad) mov daa leave xor push les xchg push int xchg daa sub addr16 and mov nop fwait aas stos cltd xchg mov sahf pop inc rol addl popf int3 imul dec iret (bad) cwtl popf nop mov pop mov sub adcl cmp sub nop stos inc jo mov cmp jb ret andl mov adc test mov iret ja test adc cmpsl clc inc test mov lock sbb xor daa rcr test fstps ret add arpl repz xor lods aam push sarl movsl addr16 xchg sub aad rcrb pop mov xchg adc jnp add push divl lds gs ds (bad) add inc and fisubrl xor das movsl lahf mov pop insb cmp outsb jnp jae and mov mov das out movsl pop pushf nop (bad) jno cmp fld jns fcom mov icebp mov mov loope jae cmpsb loope jp fistpl outsl mov repz jmp xchg sbb sub (bad) adc addr16 jnp lods aam mov rorb mov and int3 dec push mov imul (bad) lods dec pop xchg call iret mov test mov sub jmp les mov in cmpl mov cmpsb enter nop mov test mov jmp lods mov ficoml and inc adc mov shrb push pop daa push inc and jmp and jno cmpsl lcall add fdivr push in add dec jecxz sub (bad) icebp loop mov push aaa mov cmpsl cmpsl add icebp and nop fxch in scas jmp aas fnstsw leave leave mov mov mov mov addl sub mov js fisubr fimul (bad) leave je fs inc insl and decl aaa aad xchg dec cmp sub fidivl pop inc jl test fidiv scas jne fildl pushf dec pop aam mov popa out push dec repz bound test pop or outsl stc or lret stos addr16 xchg enter xor cmpsl (bad) mov out push sahf mov js jns push lcall push loopne dec mov stc in shrb push scas nop std cmpsl mov jl xor rolb and mov sbb xchg mov mov js test xchg (bad) repz fldt sub jmp mov sbb mov push sbb sahf out add cmp shlb scas stos movsb aad jne xchg lret iret lods fs adc cli sub mov mov push repz ret adc mov mov imul xor shlb addr16 gs cwtl lcall test push call mov call jecxz iret test adc fdivrl inc (bad) idivl shrb movsl mov in add aam lods pusha pop xchg xlat cmpsl scas ss mov fwait push je shlb push sbb lock fsubr inc sti loop test pop (bad) mov mov mov test xchg mov jne xor dec inc (bad) jo mov cltd sti mov xchg in cmp mov xorl loopne lock popa dec adc fcom mov xor movsl lret in shrb adc xchg sbb mov xchg in inc adc test jno iret push dec movsb cmp fwait jecxz loope aad shl jmp scas sbb clc sbb lret addl sbbb out xchg lcall fstpl in int3 cmpsb xchg aam adc fnstcw mov stos mov int3 in pushf or lret adc jecxz jmp es addr16 (bad) fstpt mov fsubrp scas je int mov idivl fs ret jmp in xchg int cmpsl xchg push lahf stc stos out insb xchg dec (bad) outsb mov out mov call incl xorl and pop out and (bad) cltd xchg mov vpunpcklbw loope mov cmpsl xchg stc mov adc push cltd mov shl pop aas stc nop dec push jnp mov xchg test mov std push pusha in dec (bad) test cmpsl xor cmp call xchg lock mov cltd notl pop rclb cmp daa (bad) popf jge push jmp dec into sti hlt stc cmp in icebp xor inc jmp icebp dec aad xchg aad lods stc jae fyl2xp1 jb jmp mov imul pusha js clc dec mov lock mov xor push lahf mov sub sub popa push dec xchg rcrl leave xchg cltd xor dec push loopne (bad) test mov jl xchg fmuls adc adc inc in arpl sarb ret dec sbb icebp imul outsb pusha dec lock mov pusha stc jns fdivs pop inc jns pop xorl call cmpsb (bad) stos (bad) fcomp mov xor sub mov sbb in (bad) cmpsb mov mov sti sti enter mov mov gs mov mov js jl jecxz jle lds idivl push dec loopne clc ljmp stc out push out shl or aad jne jbe jne rcrl in sub aaa fsub lock inc mov (bad) and jns leave call mul insl push imul shr inc jge je lret out jmp cs loope cld icebp gs xchg stc in loopne loope in cltd jne nop in jmp loope pop fstp mov cld out lock daa lds loope clc insl xlat je call fldl sarb insb xchg (bad) fst push test stos lds mov cmp cltd lock aaa gs jae jns cltd leave cwtl or shr ret repz hlt ja cli in notb ror mov (bad) mov mov aad lds in out dec lcall inc cmpsl lods mov xchg mov mov cmp imul mov loopne push aad inc pop addr16 ljmp (bad) fs adc in out stc mov inc mov xchg pop shll in jae mov jno cli sar sti clc outsl int3 jmp je shrb jo mov mov gs pop call add and jecxz sarl loope sti js jle icebp mov push rorl nop mov cmp in cltd pop int lds aaa iret out clc movsl or cmp inc rcrb cltd cmpl jg xchg shrl dec sbb lds mov out jmp pop data16 xor lock push repz inc (bad) lret mov cmp aad roll insb (bad) jne add in sub mov mov lea sub fdivrl loope mov jns jmp in jle sbb pop fisttpl mov cmc enter lahf shll mov sarb jle nop int push in mov mov mov lea pop adc lds mov mov dec sub fcompl icebp mov loope outsb shlb je aad icebp fidivr jae cmp in cli mov lds cwtl adc xchg jno into leave mov in arpl (bad) jb shll jae jne and jb push in sub int or aad cmp push icebp std adc pop xor or pop fdiv and inc cmp pop fucomp or stos xlat xor icebp pop (bad) popf clc call xlat add and fwait lock icebp fstl enter lock mov pusha lcall dec mov enter xor add push lock pop sub pop lahf stc ljmp enter pop fisubl push jle and cmpsb outsb cwtl adc adc enter fnop lea stos xlat add aas cwtl mov push sub or js dec imul sbb add call fwait or mov test jecxz mov daa fnop lea stos xlat add ds cmc push out pusha sahf icebp addr16 jl hlt inc ja jp dec call lock xor lock cmpsl leave adc cmp ret mov fidivrl jle mov fdivr incl or mov (bad) jle enter xlat add xor pop fisttpll xlat add xor pop fidivrl jle stos xlat add xor pop fdiv sarb clc jle push mov jmp ja clc mov data16 adc add xor add sbb clc jg in enter or js jle out cmp xor mov outsb mov add mov test jle clc adc cmp daa fisubrl push stos ret dec fwait clc js sub xlat add mov test jle clc adc (bad) testb cmc aas mov scas fdivs pop fldt cmc jl dec clc mov jmp pop sub cltd xchg sar loop fadds mov mov clc adc mov out scas fimull jl inc icebp mov pop pushf clc pop fsubr loop cmp sbb push clc mov loop dec mov ficompl mov stos push or add pop fimul xchg sub fbld push push pusha clc push jne or daa aad lods xlat mov daa orb mov lock push mov lock push xor or dec leave scas ret adc (bad) stc cmc fstpt hlt adc fidivrl jle stos xchg push loop dec xor ficompl jle stos xlat add xor pop fidivrl jle stos xchg push jecxz pop not (bad) loope es jmp lock iret mov imul jl inc jmp rcrb lcall xlat add xor stos xchg jmp out (bad) lock sbb mov pushf loopne mov scas lock add xor pop fidivrl jg jbe inc fwait mov jns cmp or incl stos xlat add cmpsl dec push int mov jle stos xlat add (bad) dec sbb push fwait shr js jle movsb lret pushf mov cmp dec call enter inc fs shrl xlat sbb xor jge sub xlat fwait xlat call scas cltd into or call sti mov xchg sub jmp dec aad adc and in lcall popf ja sahf mov xor mov movsl xchg pushf pop adc sub scas enter mov stos mov jb cmp cmpb mov and loopne jo movsl xchg sub sarb stos xor cmp out sub stos jno shrl jecxz adc test xchg ret xchg fdivp lock aam (bad) movsl mov mov mov outsl xor (bad) fcmovnu test mul mov iret scas stc xor (bad) repnz fcoml mov lret cmp dec out idiv xchg ficomp sbb adc ja mov insb lds adc in ror cmp add test jo mov and mov clc popa (bad) mov (bad) jl (bad) vhsubpd rcr xchg pop xlat push fcompl add cmc (bad) (bad) addr16 mov mov rol xchg rol mov jbe in stos ret les mov inc add sbb fsts mov push cmp ret xchg popaw stos xchg jl mov sub jle xor and cld pushf pop jae cmpsb cwtl xor movsl lcall mov mov cmpsl cmpsb inc jmp test mov jns cmp add adc test iret mov xchg xchg rcl repnz cwtl mov popf insb mov xchg call mov mov push mov sahf and scas (bad) xchg popf icebp addb dec mov lock mov js xorb in jmp lock lcall or sbb push mov xchg jae dec mov push scas adc movb xor pop call icebp push jb push adc and lahf or mov mov cwtl xchg (bad) lret pop aaa out fcom stc mov clc and in mov sub stos mov and aad out clc pop clc jns es mov lret mov mov stc adc movb das dec out (bad) in je mov ja fild je das test push out insl sbb xor adc pushf (bad) mov or add ret mov push js mov sarb mov add cli (bad) lahf aas mov xor scas or push iret icebp sub loope add xchg fucomp fs pusha mov pop stos fs mov mov xchg mov in mov inc movsl push mov mov xchg inc jl dec fildll int3 mov and dec (bad) or mov mov js rclb xchg (bad) xchg inc push mov jmp scas mov (bad) mov or roll cmp ret mov in mov das test movsl lcall movsb loopne push xor (bad) mov mov add rcrl xchg sbb cltd cmp cmc roll aad imul mov push cs sti int3 inc cmp (bad) jmp mov mov das mov mov cwtl mov movsb iret mov clc mov jns push (bad) lock mov arpl jns setne jo mov jo (bad) cmpsb outsl and pop decl js sub lcall movl fiadd lea xor aam pop jmp sub sbb (bad) ds cmp bound lret stos pushf push es fwait xchg push ficoml (bad) mov sahf into cwtl sub ret pop into cmc mov cmp mov jmp sti popl cmp shrb sbbl popa jnp insl psubsb push jecxz inc cld cmp (bad) fdivrs push aas fyl2x pushf cltd (bad) bound mov push cwtl aam and addr16 (bad) clc cld mov push mov out mov in mov jecxz jg aam scas jg rorb loopne hlt icebp xor mov int3 out mov icebp jp nop jmp sub in les scas cltd mov xlat fistpll lock inc cmp into xor jg int3 fistl cmpl xchg jo mov xor pop call je inc lea mov sar shll jl sti or testl mov lock mov shll popl in scas mov jns test lods pop pushfw leave push inc in insb lahf mov ljmp inc push int ret fstl push in pop cmp arpl fdivl inc cld mov into aam push roll nop adc push addb call ret flds call mov shlb les and ret mov sbb in mov arpl mov std fstp xchg inc movsl jl icebp mov cmp sti jge mov daa icebp leave cli xchg jge push pushf subl cmc (bad) in push xchg (bad) mov addr16 jno std mov sarl hlt xor mov stos stc loope dec stos aam roll lcall pushf pop loopne leave aam add cmpsl mov das lods mov repz mov fcompl stos mov mul xchg push mov insl aam popa and mov push (bad) sub fld mov cmp mov popf cmp in mov clc stos cmc std fldenv out cmp ret (bad) shrl xchg push jmp lcall not out fs mov das sbb mov pop push mov pop mov cltd fs rcl mov out jne jg ret in int3 movsl insl leave xor in and ror movsb cmp push cltd pop (bad) push lock push fisubl inc rcr dec sarb aaa pop fdivrl jle lods data16 xor jge add mov xchg mov or pop and jle out inc xchg enter mov lahf ret lcall idivl pop add mov mov or and jmp adcl pushf pop shll pop test mov outsb jl sbb jge scas scas inc sub lea cld psrlw les rol insb aad push fdivrl jo and out mov daa aas pop mov das push jecxz mov enter je sbb jae sub lock inc add into add jmp add cmp xor icebp out dec jmp and inc inc push xor ss inc dec fnop and and xlat enter mov sahf in inc or pop and dec inc add xchg enter stc mov outsl cmp inc jmp jb (bad) in jno fwait mov mov shlb out adc cmp insb inc or inc lock scas xchg insl mov xorl popw (bad) into ljmp aad pop insl push popf mov popa ds test pop sbb xor insb adc mov jle jns imul psllq movsl xchg xchg arpl es ljmp jg or ror movsb in mov xor popf add mov (bad) call push sbb popf inc clc js add cmp sbb jl lds lret enter pop fistl and fst (bad) mov sahf subl inc pop in xchg add jecxz add sbb (bad) stos mov sbb ja mov rcr pop jp sbb jp xchg (bad) push xchg fcoms into pop fbstp inc mov cmpsl push mov xor cmp or fisubrl jl nop mov scas mov jg add and cltd leave mov pop (bad) mov sbb xchg mov xchg sbb sbb popa jmp fiadd lods ror xchg mov bound xor fnstsw in xchg mov add aaa add or rclb fimul loope in add mov or int jne es mov stos inc sbb stc inc push rolb sarl pushf sti lret jle cltd data16 ds lods cmp xchg in sar adc movsl icebp shll or inc inc in push adc adc jg push cmp aas fidivl dec lods inc cmp addr16 test push mov and shll (bad) mov pop cmpsl imul pop and (bad) mov mov enter mov and push pushf shl and sbb sub adc fcoms test dec and jmp cmp in arpl fild pop arpl in mov cmpsb mov xchg push fwait adc fstpl xchg ja mov ja lea xor scas rol flds hlt inc mov lea dec xchg jmp jo in ret pushf push icebp ljmp les inc mov fs fldcw mov pushf (bad) mov scas sbb push jecxz xor call mov data16 aam movsb push jge pop pop and pop or loope adc pop icebp dec xor mov mov pop aam jne mov mov cltd rcrb sbb mov ror xlat (bad) in mov xchg leave jb test shlb xor (bad) xor clc call fisttp push jmp pop test mov inc jae cmpsb lret mov fbld outsl adc test fldl mov stos inc mov sbbl mov jno pushl add vpmaxub out push pop pop stos cmp sbb scas cmpsl inc mov mov aam push pushf ljmp cli mov outsl or mov loope xchg mov fsubrp lods inc scas cwtl cmp cmp pop icebp (bad) imull call lods enter pop outsl ret std (bad) icebp vpand lret mov cmp loop lock scas es xchg roll mov sbb inc shl mov fs pop je shll and mov icebp in jmp sarl lock aam mov inc mov cmp add lahf (bad) mov shl call xchg test jmp loop fisubl mov movsl scas mov aam shlb ret sbb jno (bad) mov addb xchg std mov jge scas cmpsb bound (bad) xor mov mov jp ljmp sbb aas push add jns ret stc cmp lock in push mov jmp mov sbb or jo sbbl adc mov mov push shrb mov mov scas loop sub fs mov lds cli bound (bad) in sbb cltd adc popf mov loop frstor cmpsb mov inc fs xchg hlt push nop pushf and inc je aam xchg scas xchg pop inc mov mov stos jnp jns pop fimul cmc xchg (bad) (bad) idivb cmc pop hlt lret ja add xchg mov repnz push (bad) cmc std idiv push sti or orl xchg sahf icebp mov pusha cmc (bad) in (bad) jnp std (bad) cld push or sti rorl std or xlat lock pop out aad mov js xlat lods mov int dec out aad push ret ja mov aaa jo out aad mov js xlat addr16 daa jo out aad mov js xlat jg mov pop aad mov js xlat outsl mov das jo out aad mov js xlat jae mov jo out aad mov js xlat arpl out aad mov js xlat jnp mov pop aad mov js xlat imul dec aad mov js xlat mov out aad mov js xlat js mov pop aad mov js xlat jo mov jo out aad mov js xlat pusha mov and out aad mov js xlat je mov jo out aad mov js xlat fs and (bad) out aad mov js xlat jl mov pop aad mov js xlat insb mov sub int3 out aad mov fs test inc clc cmpsb fstpt es (bad) fstpt inc adc xchg js push adc (bad) fstpt jle out fstpt ds (bad) js pop adc sahf fstpt push adc out fstpt outsb adc scas fstpt cs into fstpt dec adc mov js push adc repnz jb out fstpt xor out fstpt push adc xchg fstpt adc out fstpt bound out fstpt and out fstpt inc adc (bad) fstpt add out fstpt jp out fstpt cmp out fstpt pop adc lcall ljmp stos fstpt sub out fstpt dec adc mov js or in dec xor jmp mov fnstenv out aad mov js xlat loope mov cmc aad mov js xlat in movsl lds out (bad) je lock ss js xlat xchg enter mulb jb arpl inc stos jge lock jo out aad mov js xlat repz sti jo out aad mov js leave mul xor cld js xlat divb out aad mov push repz out (bad) lock (bad) jp incb std lret or ljmp xchg in in jecxz loop loope mov xor or adc (bad) jne mov cwtl (bad) js mov or jnp out out in in mov xor add ljmp in aaa sbbb push push jo adc jmp (bad) sti inc sbb popf jns shr movsl mov idivb cltd pop leave jge lock jo xchg fldl adc xchg loope,pt cld scas mov movsl rorb scas enter popf (bad) rol add push push or jo (bad) in ss xchg daa jmp push imul mov loop out out aad mov js xlat into mov cmpsb jo out aad mov js fcoml and push test vmovdqa jo rorb lods add fmuls push aaa add dec fwait pusha push pop out jle or icebp out add pop loope dec sbb fdivrs aaa push mov cmp jecxz pop inc rcrl repz int hlt (bad) cmc js ds mov push insb lcall addb sub mov xor lock out and pop std xchg repz popa sar sbb jle dec adc test movsb out rcr std mov gs shrl std ja mov cmc mov inc in jno test arpl repnz (bad) mov mov les or xchg imul cs repnz inc sub sub and bound fidivr pop mov repnz js dec jns xchg stc inc mov jmp or sub dec jne and adc pop add jbe popa popf out dec push sahf xchg popl xchg or sbb lods or sti and cli (bad) cld or jl jmp or and cwtl jmp push cmp (bad) int and je daa sahf inc call push mov popf popa inc mov xor dec cs add push add lods sub mov fldenv rcrl mov cmp inc add inc mov cmp push dec inc xchg not icebp jno stos inc and std xor adc pop jb or mov dec int3 fcoml sub or or popa (bad) and jo mov ljmp push (bad) and repnz jnp lock popa or sub lahf mov int3 or or mov adc and in xchg je int3 repnz sbb repz dec add cli add xor pop xchg mov pop inc dec jle jno or xchg mov das in push or jge mov out mov test dec push pop (bad) dec and and xor or nop mov or fwait lds or das xchg cmc mov or test mov (bad) cld sub cwtl hlt mov sar mov dec jae std xor testb je cmp and adc sub stos popa xor rcl push cmp or xor int3 inc mov fcmovne lods dec inc pop popf dec or jbe sbb inc dec in outsl std pop insb (bad) leave daa pop test mov jmp pop (bad) leave insb in cs jbe jecxz xchg (bad) xchg push jne into xchg gs lahf pushf cld push test sti adc shlb imul mov cli sbb or jb pop or or aaa pause lods mov xchg xchg mov or and or (bad) das stc cmp lcall jnp adc loop negb adc jno data16 push cmpsl pop sub mov dec mov inc or mov fdivrp or mov mov (bad) cmc enter sub fwait or orb jge test ds jbe dec imul pop xchg cmpsl fs std or inc jecxz or fcmovbe hlt movsb dec into dec lret mov scas inc fdivp or and fmuls cmp inc jle and in cli pop sub roll xchg or jmp cli notl lock je xchg repnz mov dec or inc pop pop ficomp mov out inc std outsb jnp or dec and inc sbb cs and adcl sbb inc sub fwait jbe or cmp dec mov sub inc loope mov lahf cli or into repz lods decb clc jns xchg jp cli pop xchg add aad test xor jecxz or ljmp daa cld and aaa inc test or xchg push add test nop mov (bad) fwait lret mov sub or sub sbb and cmpsb or imul cmp mov or pop dec pop jg aaa dec aas leave inc cmpsb push push inc cli aad ret cmp repz mov xchg and fisttpl mov xchg or dec (bad) repnz push sub scas jl sbb arpl daa push pop popf push add int negb (bad) jno jns or imul adc sbb add or cli (bad) (bad) (bad) stc jmp fisubr repnz sbb mov mov cwtl mov sub ja int mov out jmp lret in pop fisttpl jecxz cli ds test (bad) sbb push or mov xor and mov or jp das sub aaa dec (bad) jnp jge lock es repz jnp push lcall outsb xor (bad) fwait pop movsl add data16 mov subl mov mov xor cli sub insb jbe inc add stc pop inc in lret imulb imul jns jae mov jbe mov pop xchg inc fldcw and dec push add jp dec mov mov or lock or inc pop mov jno jae stos xor dec data16 inc xlat mov repnz jmp jno mov xchg cltd lcall sub sub (bad) mov lea jmp or push stc lcall cmp push inc pop dec mov leave push or mov xchg fstps cli int sti or push or icebp inc stc call sub sbb (bad) cltd xor repz cli inc idivb subl loope cmp dec out jno mov or push dec cmp (bad) cmp sbb sbb test adc sbb fdivrs rcrb rorl dec mov jno dec mov push cmc cli cmp dec inc push divl sub xchg jno pop mov sbb lret scas cmc mov mov or shr jp xlat or xchg jmp out cmp push or out aad sbb lahf ljmp lock js xlat xlat leave rcr jnp mov je in lea or or jp pop mov (bad) or and or or mov xchg stos in data16 jp (bad) or imul or pop mov add fwait or pop ja pop icebp or lret stc xchg fidivrl iret repnz sbbl out fidivrl (bad) inc sti icebp cli loopne xchg cmp popa inc sbb or and fstp xchg xchg cmpsb cwtl lcall or mov fimul stos cmpl mov xor icebp ficompl or loopne cmp add cli dec out mov loop sti loope or roll stc jmp outsb call mov xchg xor iret cmp or idiv inc cmp pop jne xchg push test std insl cmp int3 pushl or lods (bad) xor jb mov sar mov xchg lods scas mov imul pop inc sahf or jmp or ds rorl mov push mov or adc sbb jb jg (bad) (bad) jns sbb or or and sbb popf test xor es xorb mov inc lret jmp add (bad) sbb or and ror ljmp inc xchg fwait xchg jecxz jmp bound push sub out mov or lcall in dec cli rcll or add loope movsb jle andl mov int3 sahf or (bad) mul fxam sub test or pusha add xlat or xor mov cmp or test ljmp cmp repnz jns xor dec fwait or xchg add add stos sbb or mov fisttpl add mov dec fimul mov cmpsb add jnp shll xor or fnstcw inc sahf xor or jns ljmp adc jp ret mov test stc inc cmp xchg sbb jne out scas inc fstpl or sub ret add jg repnz mov dec sbb dec movb mov or cltd sub jp pop push setne sarl dec or dec or popa pop push and xor repz jecxz xchg fdivrl mov test adc sub repnz or mov fdivr stos or inc xchg (bad) stos fidivl ret leave flds and bswap pop dec iret (bad) mov jb cmp sub xchg loop in cltd fs sar sbb test and jno rcl cmp popf sub fldl dec mov adcl inc push mov or mov cmp les push insb test cli into repz dec sbbl or pusha xor sti push imul mov cld (bad) test (bad) or ljmp xchg ds jb sub cmc or jp shrl sbbl dec in add and add lods xchg lods sarb call jno in mov rep or pop js or dec dec xor dec cmp dec test ljmp ret sbb or out adc ljmp scas sub repnz mov sbb mov jl push mov aas or sbb dec andl xor xor push sub sbb or ja mov repnz sbb fdivrl cli sarl adc mov in lods cmc xchg sbb data16 sub xor push pop adc xor or inc dec in push test pushf leave mov rcrb inc xor xlat mov inc or stc or out or test arpl fcoml and jne lret mov pop test lods xchg js push iret and test sbb sbbl pop into scas stos mull iret jb xchg dec mov mov and push or sahf cs repz or mov ja or into push out mov mov lds mov hlt pop xorl inc rorb or popa stos xchg movl xchg jecxz mov sbb imul addb push cmp (bad) sbb enter or ljmp or cmp sub mov mov mov (bad) mov fbld rcr push or xchg or fsub pop loop outsb fucomi out mov sub in es int3 iret push (bad) xor (bad) mov or jnp (bad) mov repnz out pop and int (bad) sub leave mov xor mov sub and in xchg lret (bad) in mov outsl ljmp sbb sub cld iret pop outsb sbbl jmp stos out xchg fnstcw sahf or xchg jns repz rcll loope jmp or fimul (bad) mov inc mov mov add or test data16 imul or or jbe lret add ss test addr16 sti dec lcall adc das push sub cmpsb leave add daa rcll xor inc sarl out xor and loopne adc or inc push cmc cli or inc data16 (bad) in push xor inc pop pop xor loope (bad) pop jecxz aad or popa fstl inc or push repnz inc insl jp test rcll jmp push mov mov push out xchg sahf lret iret push cmc ret aam shrl cmc jl jp or (bad) cli pop das dec out or jbe jae add imul (bad) stc or adc xchg inc push or sub add or cmc and test negl les mov cmp and mov cmp int3 push mov pop sub adc adc or sti inc js or adc cltd pushf dec (bad) xlat xchg or add outsb jno mov jns cmpsb loope mov int add out out jne pop or (bad) pop hlt cld mov xchg popf and push adc mov inc stos ja in jmp repnz pop adc mov iret pop (bad) (bad) hlt lock jno sub xor mov fisubr das (bad) fld1 cmp or pop icebp imul (bad) push and dec daa lds jge add lods gs sub cld mov or fisub lock or cmp outsb leave mov mov pop jmp aam pmulhuw into loope cmp or sbb inc in or sarb or and xor or mov or and dec xor mov rol daa sbb or mov addl imul sbb orl jns popa cmp jns sub call imul pop jno jns imul pop lret mov mov leave lahf dec cli loope sub adc test mov out mov negb or andl test push or sub jle adc stc add iret sbb leave xor idiv adc mov add or or inc push repz or and decl pop notl sbb add lret or fwait (bad) (bad) sub adc fs popa sub sti add or add or sub or popa cmpsl lock xor push (bad) push (bad) sub cmp out sub or push cmpsb into inc fisttp gs push jbe daa bound imul inc icebp in or ror mov sub divb cmc test cmc shlb outsb mov and ds push add insb jo inc add adc or rorb int3 mov jne cmc ret rcrb push push sti push push jge mov in arpl or je insl or jo in sbb in sub in int3 dec mov enter es and inc and or adc in sbb daa divb pushf (bad) je jne or cmp pop flds fdivrp sub and or mov mov test cmc add or int repz out cld xor loopne cli sbb shrb or or ret clc into in or xor or sarl das dec push or sub or call pop mov or shrl lcall xchg sub call into cmp or push mov adc mov cmpsl pushf mov xchg cltd push fist jne or push pop pop pop data16 in push pusha pop xor jg in or outsb cmp push xor adc sbb leave xlat sub cmp pop sub sbb or xor or jl je push sub and dec in daa in repnz xor cmp (bad) mov lahf scas (bad) cmpsl mov adc mov lcall iret mov ret cld test xor pop clc mov jge mov lret mov in add es sub or push cmp xor cmp or fisttpll pop xlat mov leave push jmp sti mov cli clc test leave mov mov je sbb sub or sbb push sub or cmp add (bad) icebp (bad) mov ss icebp inc stc int (bad) and (bad) repnz jo or incb jns lea das mov xor sbb adc sub int sbb popa add xor xchg sub sub sbb jno pop mov int3 pop mov addl sbb clc sbb jp and or pop ljmp orl push jno (bad) or out iret pop fnstsw cli mov mov test (bad) jmp mov mov mov mov mov dec or not xchg gs arpl mov mov int call xchg aas (bad) dec or or or push sub leave aad mov xor jecxz in out rcll adc or add and xor iret sbb flds mov xor hlt mov cltd out rcl cli cmp and dec mov scas sbb jnp or push dec push mov (bad) pop sbb add sub cmp jns or cmp sti xor sub mov cmp sub pop and jns popa (bad) push (bad) imul out jge or sub push xor iret pop int3 int lret mov jmp stc out loope leave or out sahf popa cli adc call sbb test jns popa sub movsb mov test int3 or jbe cmp push sub add and inc (bad) push jg jae or mov loope sarl sarl xchg xchg sbb rcrl sub das (bad) xor lret add mov sbb test inc sahf jns movsl or lea or and std sbb adc sub add jg push xor iret iret sbb int mov or or push sbbl jmp and xor push and mull push test leave sbb xor and imul mov mov mov mov (bad) aam sti adc cltd mov mov mov or mov cltd in xchg adc lods js ljmp cli push pushf jbe cltd adcl or pusha icebp push out scas or leave mov pop sub psubw push loope or icebp cld f2xm1 roll rcrl or stc cmp ljmp (bad) jmp out int ret loop outsb xchg iret or clc sub fistpl pop jbe inc adc push popa and jns cld mov cltd sub sbb test cmc sbb (bad) call cmp inc test dec push mov push orb enter cmpsl fcomps mov jmp xchg xchg mov test stos lea int3 and push cmp add sbb fs or je mov test pushf or aam fdiv les or jecxz fildl or xor shlb cli outsb loop cli jnp dec jmp ljmp dec add pop push or in push and adc sbb bound add arpl pop loopne shr push add or jb mov dec rcrl sub cmp (bad) push lret and scas ljmp cli fcmovnbe sub cmp or mov mov cltd rolb mov jle mov adc (bad) mov sub xchg cmpsb mov dec or push xchg outsb lcall pop pop xor arpl sub mov inc or xchg cld xchg lds add pusha stos cmp mov cli and sti lahf mov cmp adc icebp inc (bad) mov push aaa sti or mov decb xchg pop mov and pop (bad) ds jmp push lret xor adc sub jbe dec mov les es sbb out scas or push adc push popa cmp jmp or adcl ja jp pop ss mov cmp pop in adc xor xor (bad) (bad) dec add xorb inc or xor lret mov add push fnstenv ret (bad) cmpsb scas lahf stos or mov or (bad) mov lea test aad mov loopne or popa lds mov mov jmp mov jo jl addr16 test push gs adc dec popa mov or cmp jne roll lea or add dec or xor push mov mov imul std mov mov mov push test or fimull xchg in mov mov test inc stos or fisttpll insb ljmp adc js mov jb ljmp xchg sbb inc adc aam or mov jnp jae lock das pop fidivl fdivr inc aas rorb imul int cmp adc cwtl dec inc jl fcomp cmp shrb (bad) hlt cmp jge push cmpsl jbe push andnps js dec or je in ja repnz dec push add cmp xor jmp sarl jmp loopne adc mov or and dec int3 push rorb add pop inc jo ljmp add test or dec pop out or gs add popf xorb sub push arpl rorb mov sbb fnsave cmp aad or negl lret daa fldl2e or lods js or add xor sti and out mov cmp daa xlat xchg or and adc icebp mov insl cmovae out inc pop sub push mov std jb adc adc xchg or adc (bad) pop int lock data16 dec (bad) sti or repz std cmp dec or pop sbb out or push xchg xchg and or sub or (bad) in mov lret mul or fildll (bad) cmp and jno imul ljmp stos out out or imul mov mov or (bad) mov lcall push test bound or outsl or jp pop push das inc pop inc mov into leave adc or xchg decb repnz xchg sub or enter xchg shll mov lea arpl xchg std int3 loope movsb into adc or sti sub xor nop push cmp and cli push or or rcrb or add push cmp dec shrl adc and mov push fcomp scas sub cmp sbb sub dec fs jo idiv faddp popa push out sub insb neg inc mov int mov mov scas (bad) dec jne or xchg or insb and inc adc and test sub fstp fldenv or ss lahf ror repnz mov ljmp or ja test add adc inc imulb add inc popf xchg inc aaa fnstcw inc xor pop mov xor pop jb jmp fwait or stc cwtl imul dec cmpsl rcl lea push jmp lods iret lret cmpsl (bad) out (bad) ljmp test jle xor pushf lock loopne (bad) jnp cld jmp mov sbb popf dec push insl imulb and adc jno ds or shll imul and jb test cwtl wbinvd add jp je sarl inc (bad) pop sbb rolb or pop push outsb and jns sub (bad) and push jnp sub cmp xchg orl mov jmp sbb and aaa cld pop loopne inc fildll nop movsb xchg mov lahf sbbl scas and cmp dec movsl les in jmp in and or dec (bad) jne sub pusha push jge or inc pop xchg jbe pop bound pop mov movsl jecxz repz int (bad) mov sub test test or out xchg (bad) popa lods lret pop jecxz or and rorl test nop ret cltd int fisttp cli ljmp in dec mov cmp leave sub inc inc mov lret cmpsl fldcw popf pop xorl int3 and shlb dec dec pop cmpsb mov sarb or sahf addl inc or cld movsb mov movsl ds fiaddl pop fisttpl mov or mov sbb dec pusha cmp sbb jmp xor rolb cmp loope fdivrs dec jle dec imul add in stos mov or ret or arpl xchg xor std daa shl or jae or ds movsb cmp cmpsb inc insb cmp pop pop xchg iret (bad) in push adc mov cmp pusha popf inc cmc shlb wrmsr or add or mov ror out mov sub and (bad) aaa popa fidivr cmp or mov sbb call lret clc stos or mov dec inc mov out ljmp outsl mov and and sbb cmp fnstenv or or xor dec inc pop bnd jne mov mov call mov push xor jl push pusha mov mov or or push repnz hlt pop wbinvd dec sbb imul mov dec int jns fcmovne shrl loop xchg out mov mov mov jbe push cmpsl sbb add mov sbb cltd or jg jne or dec ror dec int lahf stc mov out loopne iret (bad) repnz xor dec lea or jns cmc and push ds dec arpl fist pop out sbb test lods loope mov inc fildl mov (bad) insl lret or fsubl or push mov test push or negb sahf or es xor fbstp xchg or add sub jl add sub xor addr16 add or insb mov or push cmp jne cmp bnd inc lea hlt decb outsb out iret adc sbb dec inc dec jp movsl (bad) jmp fcmovnbe enter dec add fistl push pop sbb cmpsb dec or sarb mov mov or cmp out add lods xchg loop dec pop or enter push or dec mov int xor and pushf or or cmp inc icebp sub sub arpl xchg or xor es xchg sahf push imul cmp push xchg stos adc mov inc dec (bad) bnd sar repz fmulp xchg pop repnz xchg les dec gs sti mov fistpll dec or arpl cli dec sarb leave cmp or pop lret lods stos xlat out xor dec cli and xor jp inc sbb lea jge sbb or or (bad) lea push not mov cld divb fimull ror or imul xor or (bad) in outsb mov mov loop mov ljmp xor scas inc jno rorl xchg mov jp or push fimull fdivs jg dec jl (bad) or push jnp outsb movsb pusha or inc mov xchg repz mov add pop mov (bad) inc ret sbb in mov and and or cmp out lret push xchg std jmp or pop out pop loopne jecxz jbe xor gs add or sbb dec mov clc cli imul call daa xor sub push inc in push push mov test xchg jb or or fstps add testb ss stc push mov rorl jge push adc outsl mov cli pop ret js mov xchg out sbb ljmp xor inc fildll test mov in popf insb bnd cmp mov mov cmp pushf xor enter xchg sti dec int3 push loop imull adc dec or inc mov mov sub or ror ret or (bad) int3 add (bad) loope cli test scas notb cli or jl cs or add jecxz mov mov or mov imul adc test or and imul and dec aas data16 or pop repz test jp fdivr pop xor (bad) imul out or dec add push inc and inc fimul jp adc setge shlb inc push (bad) out adc loope call movsl adc push testl or xor sbb fs jge dec jbe,pt add in sti pop inc or and push icebp dec fimul and addr16 nop xor sti cmpsl lea lock or jmp or mov adc cli std dec dec or popa repz add movsb or sti icebp or loopne notb fwait loop xor imul inc sub or sub sub out rorb cli push xorl out ret mov jbe test jl push movsl mov and out lret ret ljmp xchg aad ds and xlat inc jl add jge inc imul cmp push icebp shl ja jo mov fucomip cs int3 xor or outsl imul mov or push fsubl xchg xlat repnz lret or dec jle pusha inc mov lcall push sbb xchg pop or ret pop iret scas or mov loop imulb add push sar xchg xor jmp xchg or or cs lock or sub (bad) (bad) repnz sbb pop cmpl xchg loop mov mov mov sbb mov sub aam (bad) pop (bad) out and sub xor or test adc ja add or dec ds (bad) or cmp cmpsl or or rcrb or imul subl enter and push sbb xor or pop insb jp sbb bound mov and cmp mov or leave mov or repz lret sub or hlt out add xchg imul mov (bad) lret or dec jge lcall push test jns or pop std push jl data16 push sub jo inc pop int3 (bad) jne outsb jmp mov insl sub (bad) mov pop hlt aas or pop addr16 rcrb sub or cmpsb in jle push lret mov insl mov icebp xor enter ret dec fsts jb mov adc (bad) test or and or add xchg addr16 loop dec (bad) mov push add ret add or in (bad) setae leave pop sahf leave or xor cs push push enter or fld inc repnz dec pop bts aas xchg fwait mov movsl popa pop or popa and inc mov js sub ja (bad) and or stos lods mov or insb (bad) sbb dec xchg or lods sub aaa insl (bad) dec cmp add or fsincos lock mov jo cmp adc test sub adc add scas imull in adc cmp bound test movsb sahf stc sub xor cmp into inc mov (bad) daa fdiv aaa (bad) and inc or mov xchg jae leave out ljmp sbb add xchg dec xchg sbb jle or pop pop das or imul or jbe js jb xor (bad) dec inc fs fsubl mov mov jb stos cs inc sbb test fs stos sub or sub jne pop or jecxz jns leave or in dec leave xlat mov test mov sub inc lahf outsl scas arpl addl cltd lods ret lds mov inc hlt mov mov lret xchg sti cli mov lahf mov imul call adc and or dec dec jbe rorl insb or lahf daa cmpsb or lcall into call lret adc adc stos into lcall imul (bad) pop repnz imul leave sti jmp (bad) sub add pusha icebp jae dec lret sub mov out mov fdivrl fisub or data16 xor pop xor into je pop lods notb inc mov mov outsb aaa push or add or imull (bad) xor add cwtl and pusha add shlb jb cmp int rclb jmp sub call or mov fsubl or add push pop xor cli jmp sti mov xchg mov leave sbb cwtl or or (bad) add loope or sub jne ljmp in dec fildl lods mov (bad) adc test shrb ret cmp data16 ret or mov fwait cmp sub lock sub jnp mov in fxch xchg leave mov jg adc pop jbe jle xor jecxz enter xchg sub es lret jbe rep jns sahf stos pop into jle mov sub enter and mov sbb xchg push jge stc mov (bad) xchg jg test xor test loope mov subl dec sbb cmp out lahf jne cmc mov popa or jae rep inc orl jbe repnz or mov addr16 pop inc or mov pushf inc fnstenv mov mov mov or popa das pushf adc adc bound mov mov dec xchg mov das adc icebp and imul or pop fimull or cmc xlat sti imul leave in dec std push in pop mov jnp testl xchg cmc rcrl int in dec or ret mov cltd notb push in mov mov subl outsl iret cld or mov push add dec or cmp test leave loop in repnz cmp daa jge cmp pop clc sub cmp fidiv stos daa adc or add pop push inc testb sbb lds fisttpll cwtl data16 adc lods xor int into arpl or jo sti ljmp lahf fcomps lret adc in rol aad rcrl in sbb cmp sub mov call mov out mov or nop add in inc dec dec sbb imul jmp in sbb or pop lods mov cmc dec repnz pushf decb mov push push test pop dec divb repnz fnstenv in pop aaa inc mov out jg mov out enter movsl mov test push sbbl push in test (bad) pop cmpl lods adc jmp negb movsl adc cld xchg dec jb jge jns in popf push or push xor xor push jmp divb sbb xchg or cmp or ljmp sub mov or mov cli xor testl out xlat mov sti sbb jns loope jne add lret lcall jb lods or push dec cltd jnp daa xchg pavgw in lods push inc sbb les xlat (bad) xor jnp bnd es mov mov xchg inc or loope lods stos pop jne mov xchg mov xor insl aam sbb push push or xor shrb test or cmp inc jns gs inc and mov ret ror or out (bad) repnz sbb fsubrl movsl sbb repz ds imul fs sbbb loop push add cli push ja pop leave movsl int ljmp adc or aam jno jecxz mov or cmovns pop cmpsb sti repz and lahf dec pop clc xchg rorb xchg outsb add cld adc inc loop or pop inc push sbb movsl or (bad) mov mov xchg dec aas pop sti mov jo (bad) mov xchg cli fcoml inc cmpsb dec test pushf push jmp decb ljmp jl sub mov cld (bad) out imul ljmp mov cs or (bad) adc inc into dec add mov stos movsb or adc push or push clc mov into test sub adc add or jb add outsb xor pop adc or sarl jne repnz cmp adc sbb test jle imul push cmp pop and cmp mov mov xchg sbb ja pop xcrypt-ctr cmpsl pop or or iret fstpt jno aam jmp mov popf and or aad sti inc out inc (bad) imul jnp stos fwait mov mov lahf pop mov mov xor lds fsubl (bad) jnp mov push (bad) cmp je push jl das pop aaa push adc cmp pop or inc movsb mov negb mov cwtl xchg or dec lea das cvtps2pi mov mov int3 or lahf fst ss insl mov or mov or ljmp fisttpl jmp dec or add push or pusha pop pop adc inc jecxz and cmp pop dec sti push pop cmp shrb cmp adc push or shlb pop out data16 xchg pop cmp jmp imul pusha call pop mov dec les scas inc mov into jns sub cmpsl pop out out leave cli xchg mov outsl cmp int3 repnz push xor dec or imull cmpl jmp or sub into mov jo rclb mov jecxz cmc lcall inc jno xor outsb or leave cmp lahf sub lea dec into and sub inc xor cmpsb (bad) clc sbb andb jae stos mov or rcr sbb jno cmp or cli mov cltd and xor in jg or bound test sbb or push out xchg ror adc push or mov dec inc or stos jge or bound popf popa xchg add mov ficomp aad (bad) leave jl call mov cmc (bad) or stc jo xchg or pusha sarl or idiv lret (bad) dec push sub and xor (bad) bnd cmp mov mov adcl or test test cld aam lret cwtl xor mov add inc repz je dec sub push or pop and int (bad) hlt push (bad) dec xchg add ret or mov sti popf (bad) fwait ljmp mov inc rcrb in mov xlat (bad) mov lods cmpsb push or adc inc cmpl pop mov xchg cli sub lods xchg or sub sub shll sbb push idivb dec or xor adc adc or mov add adc loopne les jns aaa mov lock idivb pop xor and fs or outsl scas add aam pop or sbb pop or insb imul or jg bound cld sarl jecxz xchg stos pushf lret lods (bad) mov int outsb jb mov or xchg inc or lods test mov inc dec push add mov dec xchg mov shr call sub mov dec and adc dec and dec or inc gs stos addr16 jle jmp or mov out aam ljmp test jo lret xor movsb int3 mov cld or push fisubr dec mov int3 mov rorb int loope clc and push int3 dec (bad) into cmp or jl or push and sub sti sbb add or pop inc das outsl aas ss sbb sub mov fistpl push xor and lods lock ss lret sub (bad) mov xor jle jl pop inc jns jmp mov fstpl xchg pop mov imul ret aaa or or loope negl iret das inc hlt dec pop (bad) out pop or mov sub jnp pop xor mov jns xchg fisttpll int inc add cs inc sub and pop fisubrl or mov int cmp dec xor jmp (bad) mov rcll fiadd ret rorb out mov (bad) mov mov push push mov leave or cwtl xchg es pop ljmp (bad) test or sti xlat dec int frstor xor push (bad) in push (bad) testl jno stos push add pop int3 jne ljmp mov loop cltd negl jae and fiadd or jmp and sbb adc in int cmp jmp movsb sbb in aaa mov xchg test aas mov imul lock dec push (bad) hlt out jecxz hlt mov movsb call ret enter adc or addl int3 mov sahf inc les dec sti popa movsb jle jns or dec and sub xchg or fisttpl hlt cli dec neg std push (bad) orb lahf mov dec mov fldl2e sbb or int shrb jbe mov pop or cld out or xchg test mov fs in mov jo inc pop data16 sub add and xchg sub dec cmp or sysret es sbb int3 or icebp mov or push dec jle lar and stos dec cmpsb mov jno mov and div dec jbe push mov sub xchg inc or pop shlb lret lock add jl fcomps (bad) jne pop or jmp icebp add cwtl xchg sahf pop (bad) popf jo push or lea aaa add mov fcompl mov or insb call or (bad) scas insl mov dec jbe inc or mov and xchg in sbb dec or nop std (bad) inc call sbb lret xor pop rorl jnp rcrb out xor cltd dec and mov cmp xor or iret fsubrp mov adc nopl push popa shrl or push jb ljmp mov xchg sbb cmc adc xchg xchg or enter sub lea xor inc xchg popf iret or xor xor or push (bad) adc out mov out repnz stc es cmp xchg mov pop loop cwtl cmc push or popf jb addr16 sub jecxz mov pop gs cli cmpsb loope stos imul add mov jns ljmp sbb mov movsb scas or mov hlt repnz push cwtl daa cli cwtl mov test (bad) jae fs pop inc xor xchg das push nop or jmp cmc cmpsl adc inc jmp inc mov into or test repnz inc pop or movsl jge ljmp and pop mov out cmc data16 pop cld lcall lock dec jb or outsb pop outsl and pop cmp xor or std adc inc or pop jne sbb add mov adc push xor dec mov jno push dec bnd sbb leave mov jecxz or jns cmp jae dec or sbb and cmp shll int3 mov out fwait xchg ret test fsubs sub and jecxz xor popa push pop jb jbe test movsl mov xchg xchg jbe add repnz mov mov or mov jmp fcomip pop hlt rolb add push or outsl xchg sub leave fnsave aam leave or xchg imull sbb or add das jecxz in add rorb xchg mov push or es cmp pop shl (bad) jmp pushf sti or push or or inc pop das mov fisub lea cwtl push or stc test sbb ja insb or mov sub mov mov sti sub or out lods lcall in pop rorl add or xor sti cmc push fdivs adc or sbb mov movsb cmpsb icebp jmpw cmpsl push or scas push or xchg xchg (bad) dec pop ss cmc xchg sbb addr16 ljmp sbb pop adc or xchg adc in arpl out sti (bad) pusha fwait add shll push xchg adc es sbb sbb xchg frstor adc or jbe jg mov or outsl dec mov jno fcompl cmc fcmove or xlat dec jnp popl xchg inc lret jmp sub lahf test or xor cltd repnz cltd mov cmp xchg push loop (bad) fwait xchg icebp nop (bad) orb lods lret (bad) jo popf lcall icebp fst inc mov negl daa dec outsl in jb xor fstl rcl and mov vpsllw pop inc sbb shlb addr16 mov mov jg cli movsb inc cmpsb and sti aam jecxz cmp mov inc adc pop cmpsl ss mov mov lret push bound dec scas fcoml test fisubl cmc stc xchg mov test cmpsl xor push iret rcrb inc pop pop sub add (bad) (bad) test ret pop or hlt (bad) (bad) fnstenv rcrb fist in lret les xchg mov lret (bad) movsl inc jns or xor std mov ror sbb pop jecxz pop xlat outsb cltd stos cmpsl add fcmovnbe mov mov cpuid cwtl out lds ret mov dec fwait test jne xchg lock jo out frstor nop mov inc mov es movsl sbb push into test pop mov mov (bad) int3 mov mov pop adcl or sub pop dec hlt es add or cmp mov mov and push aas push (bad) pop sub in (bad) xor (bad) leave (bad) jmp loope aas and xor mov (bad) sbb mov cmp cld cwtl mov jle xchg fimul inc push and out cmpsb mov pop repz rolb incb fwait movsl and dec negl xchg lcall call lods aam out jnp pop mov dec jno movsb xchg xchg cmc std rdtsc add cmpsb pop xchg xchg xchg sub xor mov xor mov or sbb shlb xlat leave mov cmpsl sbb in jl jnp int3 (bad) sbb mov or into xor in sbb adc cmp xor lret adc mov scas mov jns inc outsl adc xchg pop in xlat xor (bad) pusha or stos push vmovaps xchg jns push mov sub mov cmpsb and gs mov fldl xchg xchg sub mov int3 aam lret sub push pushf sahf mov cmp dec inc inc aad push sarb in sbb pop or scas xchg test cs or xor into add jmp lret fwait cmpsb sbb cmpsl outsl mov push mov rcll fldl (bad) (bad) in test sbb fwait pop int3 jno add lahf dec add je mov aad movsb in inc xchg loopne adc xor push fstps inc cli incb sbb mov adc (bad) imul sbb test pop mov jp movsl out mov aam repnz xchg test push mov dec lds in mov push jge add xchg xor jecxz into pop leave in push push mov mov out mov xchg xor sbb push in mov mov and loope in and aam data16 call lret daa mov popf popa dec test mov fisubrl (bad) iret in iret mov pusha mov fcmovnb dec mov push push jl fimull popf shlb or xchg or jbe mov lods cwtl movntq pop push fs shll lcall pop and sarl add mov xchg mov aad mov (bad) mov fucompp mov push shr lock leave mov daa push gs nop loop inc xchg cmpsb and jl daa fildl pop cmp fisttpl xchg mov xlat push adc sub in ds jge xchg or imul push dec cs sti leave icebp cltd cmp pop lret popl inc push fs rorl stos imul xor aad (bad) mov enter add and and je arpl lock cmp jmp push mov out (bad) adc or shll mov pusha xor xchg mov loope add adc cmp push or sahf mov repz icebp inc cmp mul sub call mov outsl or mov cltd mov in lds lds (bad) jmp in lds sub xchg jmp testl pop xchg inc mov cli xlat divb imul pop lret mov dec (bad) jmp cmp jmp ljmp mov rcll lds popa cli leave lea call out loop popa pop jns adc ret in mov pop adc mov fsts leave iret call dec ljmp jns mov pop insl loopne call rcl call mov xor jg mov cmp adc mov cmp jecxz cmp add mov jno js pop push aad movsl loope adc popa sbb aas notl sar icebp aas add icebp fld cwtl cmc out (bad) call dec shrb (bad) (bad) cmc push ror popa mov in mov (bad) xor test mov fucom roll stc and rclb stc sarb mov xor fnsave (bad) lods adc mov push rolb mov rcl in pusha dec adc mov iret repz ret std into sar and jg mov xor iret andl jns adc (bad) icebp push in xchg xchg mov in imul std int sarl in jge js aas xor in and cmpsl iret inc clc gs push push out int subl jno inc mov xchg jl clc adc mov js (bad) xor insb or xchg add adc mov gs mov jge call cltd je sarl aas and cltd inc xchg mov jno mov add (bad) inc adc add or cli (bad) mov data16 in outsl xchg cmp cmp push xor into insl mov cmpsl cltd mov cmp test lcall sti (bad) xor mov sub scas mov xchg subb iret repz std fstpt or pop pop sbb push xchg or inc cli rorb cld mov (bad) mov cmc mov push scas or mov clc jnp sahf or cwtl pop mov dec testl and pop fdivrs push notb outsb jns or iret mov add add push push pushf leave fwait and repnz fldl cs inc or sub imul jo popf out or fsts pop push dec mov repnz xorb lea or inc xor or sub faddl pop mov and or lret push mov or pop cltd aam icebp arpl js xchg dec push sti cwtl adcl nop jmp repz movswl jno repnz lods sub xchg sbb adc inc add (bad) push inc fidiv lcall movsl outsl and popf mov (bad) mov sbb test sbb mull xchg lods loopne xor popf (bad) mull xchg insb roll jp inc mov int sbb ljmp adc xor (bad) jb push les mov mov ret (bad) mov jp jns cmp mov rclb in rcrl stos jmp clc frstor add mov or mov sub sbb gs leave sub fwait icebp lret dec mov and clc leave push push cmpl pop in cmc mov popa mov jne mov pusha mov imul icebp shrb loopne pop popa clc cltd lock jp icebp imulb jp jmp stc cltd ret cmc sub hlt aam loopne mov push cmp imul divl aas sbb ret enter jge sbb sarl lock mov jmp or jecxz mov mul cmp inc lret (bad) mov loopne sub lock test fiaddl fld push jno,pn xor cmp sbb adc aaa gs lock add inc push ret (bad) cld imul shrl insl (bad) in ss (bad) mov sub orl pop jns fsubs in imul mov lock inc push jnp inc sbb mov aas jle pop adc and add sub jl cmpl mov mov ret jecxz mov dec ljmp ret clc cmp fnstsw or adc in cmpsb stc movsl les stc jge lock sarl aaa fld fmul pop fdivs cltd int cltd cmpsb roll frstor mov loope push lret rcl pushf cmpsb in jne pop out addl (bad) sar movsl add jns (bad) pop add cli (bad) and test inc lret fld mov mov sbb pop leave addl aad jmp call iret int mov mov mov mov ljmp pop fstl adc push fnstsw lods js sbb jns xor mov test leave jge pop sub push xlat pop mov dec pop mov hlt loope ret dec (bad) mov cltd mov jmp test cltd bsf out dec call (bad) stos jmp mov dec mov in in adc sub pop in inc sbb mov popa mov sbb mov js mov inc pop xor (bad) ja in mov int3 rorl insl clc mov sub lds cmpsb jge add stos icebp sub sbb mov cwtl push pop fcoms lret cltd fnstcw (bad) jno adc jo mov lret adc leave lret pop in aad mov gs push int fwait daa test icebp test mov cmp js jg test cwtl dec cli (bad) push js dec (bad) mov push adc icebp add rcrl mov (bad) jno subb leave mov push aaa inc mov fsubs mov jne sbb leave in or cli mov inc leave jmp mov cltd jmp pop pop imul jmp cmpsl cmp cltd cmpsl mov jno movsb aad mov push sub xor add jne cli jne mov xchg mov cmp dec insl add xor mov movsl shrb icebp jno mov lock add leave mov jmp (bad) fstpt movsb aad int3 jne xor jg lret cltd mov jp stc add shlb and stc aaa ja add add xlat xor movsl cli jno adc into cltd (bad) daa sbb dec adc mov cltd cltd (bad) mov loope in mov mov cltd xor mov pusha icebp (bad) mov cmpl xor (bad) mov xor or sbb (bad) mov jge mov xlat xchg pusha cmc dec mov (bad) mov xor mov mov int mov sbb out push icebp mov loope rcrl test pop mov int dec mov adc or sub scas popf pusha sub (bad) push in mov iret xor add or gs or cmpsb shlb (bad) aad lds repz mov repnz or aam (bad) (bad) adc adcl divb cmpsb jecxz jmp pop repz push repz (bad) inc lods negl icebp ret mov gs add push fdivr jp or call cli add leave ret xchg in outsl or or clc fcompl ja into xchg push adc or sbb add out (bad) mov and cs gs sbb cmpl ffreep or (bad) aad scas iret jp sbb sub call pushf leave xor xor sub mov add and adc jp jle pop (bad) repnz adc pop or jbe,pn pop out or jo arpl es sahf lea (bad) imulb or pop push push or sahf xchg (bad) mov imul add roll inc fstp in and add or pushf adc or inc dec aad or lahf ret or rorb fnsave or aad testl (bad) movsl xchg icebp xchg aad mov js stc adc pop jo out aad mov js xlat fnstenv xchg test dec mov js xlat (bad) mov movsl jo out aad mov lock js xlat popa mov xchg out aad mov js fild jns adc js or mov popa stc dec lock popa pushl pop sub jmp xchg jmp icebp or sub aad mov js xlat lahf mov mov ret out aad mov call jmp lock xlat arpl popf jo out aad mov js xlat repz xor out jge clc xchg xor mov mov std jno lcall test dec clc xchg lock cmpsl mov ret jo out (bad) push jecxz repz cmp outsl mov xchg out shrl xchg mov loope jno test out aad mov js mov out aad mov inc mov leave stos sub aad mov jno lods loopne clc lea popf xlat mov shl in std mov stos icebp sbb xlat aas mov push jo out aad mov js xlat mov (bad) jo popa dec sbb jne sbb jge lock jo out aad mov js xlat mov sar jno pushf and lock out aad mov lock js xlat lea insl cwtl or negl xor scas js xlat iret mov pop cld sbb movsb mov inc jno dec out arpl mov std jbe aas inc clc push dec lock and (bad) cmp jno cmp std mov aad xchg std add pop xor jg (bad) xlat xchg mov leave jo out aad mov lock xor (bad) mov test out (bad) repz mov add pusha loopne lock out or lret pushf not div fiaddl outsb jns clc xor jmp adc push iret xlat lock lock inc jl jmp stc js xlat or out aad mov js xlat xchg out aad mov js xlat (bad) mov jg jmp loopne loopne pusha lock loopne js push xlat xchg adc repz adc mov mov (bad) lock xor mov adc sub push cli addl or sarb pop lret cmp or sub dec xchg lret or jecxz or dec adc sbb pop push loopne addr16 mov stos int3 xchg cli pop and sbb adc inc loopne imul (bad) cmc cmp dec mov mov lahf jbe test or push cmp in or and sub jne adc xchg out xchg jmp or dec xchg fldt repnz mov mov adcl fidivl cmp repnz outsb stc mov and ret or imul or pop test adc push icebp cs or lods in or dec or mov les pop add pusha cld push inc or clc in xchg sub notb sar mov dec mov movsb fs jp in pop cmp or cmpsb adc ss sub pop xchg add push popa fnsave lods or and sbb rorl mov jnp sar divb jl cmpsl cmp or cwtl mov or cmp or pop scas aas mov sbb call paddd enter mov aas ljmp mov inc or (bad) idivb xorb mov push cwtl xorl pop movsl imul sahf shl in pop mov lods or or inc or dec in aad into mov or iret scas ss (bad) cmpsb insb in cltd push jnp fsubl inc and pshufw (bad) lods cmp pop xor push pop and jmp cmp or rcr jo push call cld xor mov out mov xor mov mov cs or rcll and div shll sub ret and cmp mov mov fcmovbe aam lret cmc push repnz adc mov xor mov or dec gs outsb ljmp mov xchg adc jns xchg iret mov push or scas pusha (bad) add orl jmp sti push rcll cmp or into pop cmp clts inc sbb enter jecxz cwtl mov (bad) (bad) jb std cmc pop pop les jecxz or fimul or sub adc neg cmpsl out dec das test daa call adc sbb mov or hlt out dec aad das jge dec adc lods lret pop imulb dec sbb dec repnz call int3 push mov out jle cmp ds or add imul mov cmp repnz inc fcom or cmpsb mov xchg repz hlt xor jb imul bound mov jmp or pop jo ret loope loop cmp in mov mov mov inc and sbb mov arpl cmp jbe lods mov dec hlt or cwtl cmp mov jecxz adc in cli push cmc xchg sarl int3 dec and rclb xor sbb movsl sbb test fs push cli cmp or mov int3 les test aaa xlat dec xor mov xchg or mov jb sarl imul rorb lret notl adcl mov sub jo mov or out adc mov mov shll or ret or or cs flds pop sahf (bad) jmp mov mov or negb testl gs adc dec fld1 mov cmp mov mov or mov jmp mov rorl int xchg outsl insl pop mov inc or mov sbb sub xor cmpsl cmp jmp imul jg test dec je js jnp or pop fistpl and pop or lock jb mov loopne jmp or movsb pusha mov inc inc leave mov aaa mov cmp or sub xchg fldcw and mov or cs cmpsl (bad) clc sub ljmp or dec ss jmp add dec stos add ljmp mov or js (bad) sub (bad) cmpsl jb das shl test rorl mov dec imul popf insl lret sub ss test pop repz mov in sub xor icebp mov push mulb pusha mov cltd ss or mov adc std or call test cld push daa mov or push pop sbb icebp nop or mov fucomi ror outsl and stos lret lret in jb loope leave sti test sbb jo or jae xor sti es cli aam out mov or adc int call repnz xchg sub or insl loopne aaa call cmp mov cli mov inc or dec sbb dec adc or xchg add xor divb lea or sbb pop (bad) int3 jg mov (bad) cmpsb sub rcr push testb ds lds mov sub hlt mov or pop jnp and or push int nop or arpl push fstpl insb out adc daa mov cltd mov stc or jno mov test cmc stos inc out icebp or (bad) inc xchg lret pop sub mov sbb add sub sbb lds jecxz popf or sub or pop cmp dec or sub test repnz int cwtl or mov jp push lods push push xor mov stos lods sub movb addl test mov ja insl je mov lahf jb scas fisttp xor shrl (bad) sub subl test aaa or mov shlb push xchg (bad) or sub out test xor jno or or mov out and or sti (bad) lret nop pushf daa or push sub testb shll inc adc pop rorb dec xchg in mov xor imul adc or push shrb add iret or xchg xor jb sbb mov adc mov or sti ja or sahf and aam nop cli cli mov repnz dec mov into cltd xor or cltd add hlt or gs mov lds or aam icebp dec cltd js or in jmp aaa mov add mov pop jno lret cmpsb fstl and push enter jecxz jp mov or push popf insl mov pop pop fcomi and or (bad) mov mov pop (bad) frstor mov stos mov push sub das mov outsl push cli sub (bad) or jmp loopne mov mov das stos or dec ja test xchg (bad) bnd mov inc test out mov push out push scas insb int3 jno or (bad) in test dec (bad) leave pop pop jp int push pop or fmull jg jo repz or push test outsl mov (bad) popf aas pop mov or sbb push or repnz insb and mov lret mov adc xchg or cmp cli clc jl mul cltd adc mov cmc outsb mov and push test mov test test stos jecxz loope repnz (bad) adc aad rcl jp or imul (bad) cld sbb nop or scas or jg add mov pop xchg or shr test lret cmp jle int (bad) or jmp mov enter jl bound add jnp das or repnz sub out sbb or test (bad) imulb sahf adc and insb orb jne push aam (bad) sti mov pusha or or bound and mov jecxz xor xchg push repnz inc jmp sbb (bad) lock les inc daa jnp enter pop in in das cltd insb mov mov dec ljmp lds or movsl or xor roll fs popa adc push jl jns (bad) stc subl call (bad) in push repnz inc and leave pop mov in inc shrb push cli popa or xor adc sahf jno xchg or insl or or aam in sbb pusha push call dec push xor aad arpl sub movsl or mov xchg mov mov pop ds sar test mov fcmovnu cwtl int jecxz (bad) push or or lock mov or xchg into testb jo js sub jne push pop cwtl orl insb cmpsb mov cmp daa ret pop or sbb ret sub or xor mov fs aam push push push sub and cmp lret jmp cmp pushf lods sub ss repnz push inc rcll stc es jb or push arpl jns imulb imul mov idivl inc cmpsl bnd mov lret scas or sub pop pushf (bad) mov stc mov movsl adc mov daa push inc test mov pop lret pushf out test cli jecxz pusha or push lods sub or dec jnp jb inc add mov (bad) push xchg (bad) lods push shrl lea dec jno andb enter shrb pop rorb shrl add ljmp sub cmpsl pop scas hlt or or lcall push decl sbb or fimull adc shrb stos imul adc mov jmp addr16 mov test (bad) mov (bad) rcrl mov sti add jns lods or mov jbe or xchg and fsubl push jmp stos add cmc or sub (bad) mov pop mov fwait nop imulb jmp cmp mov sub enter (bad) insl ret mov sbb iret mov iret ja clc cltd add dec adc jle sbb mov inc add lcall pop jmp or in push popf (bad) pushf test nop mov dec dec dec pop or sub mov lcall lahf iret in push wbinvd dec xchg push adc jb out leave or icebp mov arpl jbe jmp not or sahf mov dec pop add adcl xchg out fldl or cmp outsb sbb nop (bad) (bad) jg les and loopne rcrb adc mov into push or stos aam mov cltd or mov dec pop or push xor jge push lahf cmp mov or mov push fwait gs cmp mov mov (bad) jnp test mov imul push mov sti add jo jmp cmp or jg or mov or ret imul test push xor lock inc pop pop or mov repz xchg jo or xchg push cmp mov loop and or lds mov or xchg push hlt in (bad) dec aam sub or and pop mov cmp sti (bad) mov in mov movsb lcall lods mov leave adc insl add loop int out add inc xlat jb jge in and inc sbb dec push rorb (bad) scas out bound dec or jbe mov inc cmp or dec (bad) ja push fidivl jge xor bound test adc mov sbb sbb or (bad) dec mov pop mov xchg cmpsb sahf mov rcrl lcall push and scas adc jl iret cs ret aaa xor inc mov fisubr xchg jb fsubrs ja mov xor add add iret movsb adcl or push scas repnz dec mov bound pop idivl lods sub repz roll arpl inc or cmp jae faddl or adc orl dec mov scas cwtl pop or pop js jae xchg sbb decl out fsubrl inc aas dec or mov push jle xchg repnz out imul jae inc fisttpll dec or mov mov icebp cmp test sbb loopne sbbl cmp or out test cli rcr dec sbb mov sbb in adc dec and gs (bad) repnz pushf mov lret mov lock mov or sub shlb pop or sbb xchg rcll cmp xor adc or mov test rcrb or dec clc fsts (bad) loop inc sbb push xchg and jo mov push jg ss addr16 les jle mov jnp dec (bad) popf gs testb lock cmp pop or jb or sub jo inc sub stc mov adc jge repz jb (bad) xor lret test jecxz mov mov fdiv out and lds flds iret fstp lods in jmp pop movb jp daa mov sti or and xchg mov mov pop mov sbb pop pop xor and mov in cld pop andb push addr16 fidivrl (bad) or or out pop call hlt or adc lea stos mov pop or mov nop sarb push inc inc dec (bad) or or sub mul or in sub jbe pop or mov andl (bad) sbb testb cmc and or push js xchg clc push or cs cmc dec adcb (bad) sub jo jle loop mov xor test sbb rcll jo jno insl addl mov enter (bad) sarl xor (bad) bound cmp sbb jmp flds arpl push dec loope fiaddl jle (bad) xor pusha inc add jno cmc xor (bad) push add stos notb ja cmp xor mov lret adc mov sbb sbb dec rcll iret arpl aam (bad) test movsb decl int call push mov add sbb jmp cmpsl fsubrl dec data16 add or (bad) xchg je inc or or cmpsb in scas mov sbb rol es jmp or inc jmp insb sbb ret mov or xor push adc imul cs adc adc xchg ja cli scas add and and mov mov pop mov xor imul (bad) xor dec insl jno jmp popa dec ret ss mov mov xchg mov cmp xchg or mov daa or and mov cli and mov pop adc in pop repnz mov inc rcrb repnz add stos xchg mov sahf or into sbb hlt adcb cltd repz adc dec in cmp or lock mov mov mov inc (bad) xchg xchg and mov adc or inc mov inc jno dec or push sub ja push dec or outsb lock sbb (bad) cltd fwait or mov mov sub leave lea xor pop pusha (bad) push inc cs cltd out xchg (bad) or outsl jns pop inc jmp sub leave pop jb push mov push or cltd sbb inc or and inc aaa dec xchg dec jnp jbe lret or cli jb mov or lods sbb sbb stos or stos mov or es leave movsl pop sbb or (bad) sub sub (bad) cmpsb mov push push or jge pop insb test aam or pop out mov xlat loop call add dec adc mul leave inc imul jb sti hlt jo xchg or hlt mov dec scas mov and pushw mov inc or addl mov inc mov cltd das or and or jmp or jp cmp sub xchg mov xor mov daa mov and cmp or jge dec lret outsb outsl mov insb adc inc jg push inc aam sbb inc (bad) lcall sub sub in imul xchg or bound ror add aam daa int in adc mov xchg pop test push int3 outsl sub fsubrs movsb or rclb jl sti cmp jmp push mov sub or adc or mov or xchg enter inc notb das std mov inc pop adc ds sub add push dec or sbb cmp add cmp or inc ss std or pusha sbb shr or mov or fdivrs test lea mov xorb inc mov sti jmp mov or outsb popa sahf dec mov cmp ljmp add and inc or sbb dec popa fimul mov add or (bad) and popa mov aaa repnz mov sti dec outsb lahf inc flds imul sbb or lret xlat add lds inc movhps cwtl xchg adc inc cld into sbb (bad) out lea lods push je or repnz xchg inc mov or cltd mov mov lods cli xor jno popf cwtl fmull mov jl xor push mov pop pushf or jmp mov hlt jge lds or pop out je ljmp loope sub cmp or mov mov ss adc (bad) loope mov sbb pop inc test std in imul jbe sbb or in (bad) lds cmp jno bound (bad) rol jnp flds push lods sbb mov push scas xlat lods test xchg and sub sbb add inc loop shlb iret mov xor pop inc sub dec mov adc cmc mov mov icebp sbb pop fcomi xchg push push mov decl (bad) lods dec or mov lea jmp mov nop ljmp popf jmp push cmp mov out mov jae inc pop and loope enter negb push int fsts cmc dec mov jle mov mov and or imul mov push xchg cwtl cld xchg jo inc fimul ret mov cli xor js or imul add mov or movsb pop pop test loope out iret inc pop arpl rcrl ss pop in mov mov xchg pusha jmp cmp dec xor pop outsl xor xor cltd es sub xor je lret mov xchg push enter or xchg outsl sbbb ljmp sbbl adc adc lods add mov or xor je mov std adc adc fiaddl cld push icebp icebp jno add xchg push mov push mov jl arpl bnd maxps je stos cmp addl fbstp or pop in sbb inc mov push sub loop sub sbb jmp fldl and pop mov xchg or jno in negl add xchg lret pushf movl pushf pushf push pushf lea jmp movl pusha mov movb movl push pushl push movb lea jmp or add cmpl jg sahf addr16 mov fildl cmp inc out dec jnp insb ror mov and cld out xor data16 and xor ljmp sbb jae into fs sub jne lds lods mov xchg stc dec jo fstps xor xchg push xchg cltd aad mov aaa hlt jg cwtl sahf sarl out fdivs lahf jbe push pop movsl bound jmp negl (bad) sbb push sub inc pop jg push fisubrl jmp lahf je push (bad) or mov sub stos hlt scas adc jmp loopne clc call out adc adc fildll and jo stc out sbb dec push (bad) cmp mov mov cwtl hlt fist mov sub loope cmpsb mov jns aad shrl adc mov stc in lret les xlat arpl xor pop mov repnz dec repz mov push cmp jno cmc leave fisubrl xor inc stc push jae mov roll cltd xchg rorl repz xchg lret jb lods jae imul stc add out jb inc jge pop inc pop scas or (bad) aas call sbb and enter aad sub (bad) aaa dec (bad) js enter mov call jo jb cmpsw pop mov aad sbb mov mov test dec dec jne in lods (bad) xor pusha mov inc inc and cmpsl or mov adc add cwtl jns jp jns inc sbb cmp mov sub sbb add adc xlat mov add add mov add mov lock fucomi (bad) inc ficompl negb es jo add jmp mov jmp cmpsb xchg adc inc or push push fstps bound mov insb jae or pusha add sbb add cmp lock inc inc push sub push outsl jno push mov (bad) cmp divb jp gs cmpsb mov lods les jbe mov mov dec jo pop outsb push mov adc sub adc pop gs loop inc or sbb xor cmp mov and jae ret jno jmp jmp not mov push pushl ret pushf not lods stc not call inc mov pusha cmc call (bad) bound inc test repnz fstps sub adc xor int ror mov xchg jns mov lahf push test enter xchg cs (bad) enter xchg sub mov into nop add dec in mov or je sub das sar stc dec mov insb jmp sbb mov int test (bad) jns stc jo jne cmpsb testb (bad) rolb mov push data16 in mov leave divb out ja inc mov mov add mov sbb test sbb test int loop int mov insb jno call pop movzbw mov pusha lea mov bswap bswap xchg mov mov mov push pushf lea jns mov movsbw pop pushf pushl pusha mov pushl ret movb pusha lea jne cmc lea rcr shrd xor cmp aaa pushf sar mov jmp mov jmp outsl cltd movsl (bad) mov jp sub and pop inc jns lea add push jmp out aaa cmpsb pop imul nop scas lock popa mov lock int int3 jge xchg and (bad) into push sbb int mov push imul jmp mov pop add gs (bad) jne mov fisub inc cltd sbb in pop inc add mov mov jnp mov lods mov jae jle scas nop mov xor dec jle fisub mov imul sti or je mov iret jno out popa sub sbb and bt mov pushf stc lea jnp repnz jns jne not setbe not jmp cld lret cmp (bad) imul jg cmpl xlat fistp pop pop mov pushf jno pop imul loopne bound dec icebp add push xchg inc push mov and dec pop inc dec pop xchg jg mov jb push stc cmc jno mov cld in shrd (bad) sbb dec dec (bad) movsb lahf scas add add mov jae mov or std popa mov shlb mov loop loope xchg cmpsl push (bad) cltd je test xchg dec insl jno jb pop jb add in jnp jg pushl xchg bswap pushl movl push setle lea jne lea pusha pushf pushl movl movb pushl popl pushl pushl ret imul jb add pushf pusha pusha lea jmp push scas jo shr insb push xlat insb jl or dec jae pop fs mov ja ret and adc repz into push bound xor out out out fdivl test pop add xlat jo push fildl out aaa insb test mov sbb jg jb ja jnp mov int movsb scas pop inc xchg (bad) leave rcrl movsb jp lcall jns std roll mov enter cmp test mov ljmp lock outsl jg loope jno in test in xor jmp int3 jmp ss repz and pop cmp out dec push mov mov jae push das cmp pop and mov or sub jmp and jno inc gs mov sbb rcrb xchg push push test ja pop dec mov or mov leave xor (bad) xchg cwtl scas push icebp test xor cld pusha inc popf push inc addr16 push gs stos pop xchg xor or mov xor push pop mov lahf sar jmp mov (bad) jae inc stc movsl fidivrl int3 fnsave in pop test jmp outsb daa js movsb aas adc dec push inc outsb add lcall les adc nop out notl mov cmp adc out adc and pop bound (bad) push jno cmp in dec shll imul lret js dec mov sbb or scas mov and ja xchg aaa out xlat sbb xchg jle jge (bad) in ret rolb xchg icebp sbb and adc xor jae test mov rorl cmp jnp pop jecxz or pop std std mov xchg addr16 pusha jl js (bad) leave pop insl sub push cltd adc out ss lods (bad) insb or jno dec dec in repz push lret add loopne sub test subl inc divb mov xchg push push mov adc mov call enter (bad) inc lods push sbb not clc rcl adc shl xor sub jmp test shlb fsubl mov pop in into icebp shr data16 mov mov dec test mov cmc test or add ret sahf xor xchg and pushf adc fsubrp adc es dec inc js inc push ljmp xchg loope rcrb inc cmp adc ds sbb (bad) lcall mov xchg mov add dec fist dec jg adc (bad) fisttpl mov aad out push cmp movsl jns mov mov pop je pop loop push dec push popa lret xchg lahf lahf inc jnp mov sub mov mov rcrl ret test push push stos add ss sbb xchg lods sub imul ret pop adc add insb ljmp test cwtl add sbb lret or xchg test fdivr jnp sub push xchg cmc push add cmp das in fsubs and call dec flds out cmp mov xchg (bad) xchg inc (bad) icebp insb xor mov xchg test push and fwait insl icebp xchg add ja inc clc push leave inc stc sub fsubl jns push push stc out out add inc sbb dec cmp sahf and movsl (bad) lds push xchg xchg (bad) mov xchg repnz hlt mov cli shr mov cltd je push daa out mov popf loope push insb add or sbb and out mov pop xchg aaa dec mov cwtl daa js enter lret jae xchg xchg into and and cmp sbb push dec mov enter dec inc dec push aad out and call iret loopne and lcall (bad) fcmovnb pop repz js inc adc push loop out mov mov jnp mov mov cmp imul (bad) out mov out lahf dec jb jne pop test lds lea jb dec mov jp hlt aam aam mov xor push bound cmpsl stos outsb and sub cs data16 pop cmp cmp mov mov hlt stos mov inc fidivl scas (bad) xor add cmp push pop scas cs in stc dec jg rcrb insl mov icebp xor and fldl2e dec dec add (bad) sub mov lcall in js dec mov cmp pextrw test fs pop inc pop int3 add add mov mov inc pop mov mov (bad) or ja sarl bsf push add stos xchg mov lods xor mov cmp pusha je mov popf bound and or jne dec mov mov test mov data16 ss jno fistp jl pusha pushl popl pushf pushl pushl ret push add xor push fildl stos sahf arpl ret das sbb cld ret sbb jb insl (bad) repz sub inc (bad) call movsb test mov cmp sub pop fisubrl xchg or dec push push sahf mov in push negl clc mov test jae addl in add or cmp mov repnz out xchg (bad) mov addr16 cmp incl outsl inc (bad) pop mov and sub or add pushf add scas or (bad) mov mov sub fimul movsl mov (bad) ja sbb lods xchg mov xchg (bad) pusha adc push imul inc cli xchg sub dec imull cmp subb mov lcall lock sar lret cmp cli mov jmp cmp mov scas xor cmpsb jge xor pop sbb jae mov cmc or fmulp push daa jno fucomp mov cmc mov test test mov jl adc and push (bad) loope jnp das cmove mov cmpsl xlat call mov mov cmp rcr imul fidivr push outsb xor ret in mov mov and or cmpsb xchg mov and push loopne outsb adc in dec aam mov ret fistpl loopne or cmp cmp mov sbb jo jge push add xor imul sbbl and cmp mov lea jb clc pushf bt cmp jmp pop test (bad) je jl dec shrl adc insb or cmp out das test xchg lcall sar pop lcall xchg mov repz outsl pop mov inc adc cmp dec mov shrl lret pop xor xor sete push cmpsl int fcmovb add push sub xchg xor addb movsl sbb js lea bound insl shr (bad) dec jno fmul lds sub shr (bad) sti ds pop les stos rcr sub ds jge adc sub scas rcrb add in dec aam jno vpmacssww dec ret cmp orl call xchg pop popf dec lcall call jae sbb mov imul xor nop add xchg dec mov into sbbl fs es (bad) push jns pop pop addr16 push push dec lea inc xchg push sub scas jecxz int pop fildl sahf addb mov xor call pushf mov call lods pop (bad) aad inc mov sub push hlt push or pop pusha (bad) jg cmp jnp adc xor dec xlat lret pop ret sbb push cmpsl inc sbb flds mov js imul mov gs daa arpl lods lds leave pop inc sbb mov lcall insb xor cmp cmp dec test jns ss pusha cmp fisubl insb adc call cmp xchg scas pop adc stos jne jle pop mov dec xor mov jno fisubl push mov movsb push dec pop in and mov ds xchg mov mov sub sbb xor jle mov ret cmp movsb add orl mov mov cld ret cld out or or mov fwait pushf jecxz push mov mov shlb fdivrl cmc sub jle (bad) mov jae clc lcall fs push cs push sub enter pop sbb cmp pop pop (bad) sbb shrl jp xorl (bad) ror fidiv fidivl pop lahf inc cli xor cmp stc dec aas (bad) adc xchg inc mov adc mov add (bad) adc cs sbb and or lods pushf loop adc int shr repnz and add push mov in out fisub scas xor mov and xchg jno pop add mov lock xchg hlt inc pop repnz std sub adc mov stos or mov lret mov adc mov (bad) (bad) cltd cltd iret nop pop in pop add clc pushf ret data16 or sahf scas cli and mov scas mov mov ljmp xchg imul jb cmpsb cltd sub adc arpl pop (bad) mov in add shl rcr shl mov jmp jmp add xchg enter mov cmp push inc cmp fisub mov jbe push push stos hlt cmp aad dec aas and loop xor setbe and cwtl cld arpl cmpsl into mov dec fisub mov ds ja (bad) xor movsl sarb call jle push mov daa push sub push push lods sub pushf lock xor push call and js jp push movsb pop loope push dec mov push in cltd loope jbe push mov cmc ljmp inc adc mov dec adc or and push or ljmp add int3 repz and (bad) enter loope xchg shrl loop movl and lret xchg lret pop fsubl test sarl push mov fisttpl pushf lods jg sbb leave add mov adc cmc cmp mov jp scas adc push jns fildll aas aas out mov push outsb in xor mov outsb xchg inc pop outsl (bad) fmull clc cmpl pop dec fdivrs test aad (bad) out mov pushf pop add xlat xchg cwtl loop fldenv pop scas xor jp (bad) stos hlt (bad) xor pop xlat mov enter lock not shr mov pusha cmp pushf test mov lea je cmp pushf sub push push pushf lea jmp fchs fild repz xchg lret jge mov xchg leave aad mov mov dec insl mov lods sbb inc add lret fdivl repz (bad) jno add xchg pop jg arpl fs insb pusha lahf mov popa xor mov dec jb cmpl pxor mov xchg insl scas pop ret cmp int xor js aaa pusha pop addr16 or pop (bad) ret movsl mov and outsb lock (bad) xor cmc jmp fidivr dec aam lahf incl enter xor (bad) fbstp (bad) lcall dec fiadd push (bad) ja (bad) xchg (bad) (bad) ror int loopne jns mov lcall dec mov pop fiaddl int js loopne xor fwait lods jge and inc out loopne xlat call aaa test cmpsb out jno aaa add fiaddl das or xchg cli xor fstps mov or pop xor ret mov incb xor popa decb inc cmc mov sahf mov daa push lock imul sbb adc and inc gs or icebp (bad) or sub cmp push out into jno aad pusha lahf jg movl and pop sbb dec (bad) (bad) cmp pop xchg jb push arpl cmpsl inc test and lret xor xchg enter aam mov lock mov pusha xchg xchg mov adc fwait inc mov sbb leave adc cmp cmc dec and fnstsw das xor icebp push or cmp xor scas in cmc push mov ret inc (bad) dec dec mov mov dec adc mov jnp push adc dec pop loop or hlt mov push gs adc push adc shr insl icebp ror or popf subl dec inc addl jns loopne fnstsw stos xchg in xor jns ljmp fs dec sub test scas mov pusha jmp fimull or (bad) cld mov lret push data16 and stc dec jb mov or xor jecxz dec pop add pop sub sub push inc rolb in fldl mov test call dec lea push stos push shll test loopne add pushl cli (bad) (bad) and mov jmp add fsubs add jp nop jne jno aam xor inc cmp pushl lea jbe shrd bts ror sub bts mov or inc mov shl movzbw bt add adc shr shl btr mov rcr ror add mov call mov (bad) sbb into js call sub test sarb sahf test movsl call sarb inc pop inc cmpl data16 push (bad) or pushf mov and mov test lods adc lds dec mov aam xor jmp mov fistp outsl lock add jb (bad) iret in mov and (bad) (bad) pop xbegin popa in mov fadd fistpl jmp mov cwtl es add fwait lods jno rcll or inc and mov pushf mov push pushl ret sahf inc mov and (bad) jp,pn mov in sbb xchg in adc or in add jbe push sahf repz sbb imul adc sub pop adcl mov or pop out divb cmp pop adc cmp push scas xchg mov dec lcall fidivl inc adc xchg mov add jmp xchg and aad lock mov mov adc (bad) cmc leave mov lock dec xchg jno,pn jle lahf add lret pop sarb push sbb add add fs pushl lea jae cmp jmp jmp jmp in ror in xchg out sub aad adc mov aaa push mov cmpl dec add xlat sarl mov xor xchg lock popf cltd in and push dec jp hlt push into mov mov sbbb sub xor inc push mov sbbl (bad) idivb insl and add adc xchg mov xchg lods xchg pop mov jbe stos mov or push or fisttpll in out cli aad fwait icebp mov dec (bad) repz sbb std cmp add cmp sub imul cmp push fwait test push sbb iret xor aam pop (bad) mov (bad) pop mov mov (bad) aas push push sub xlat pop inc cwtl out inc test popa jle shr mov lret mov arpl sbb jecxz out add inc jb sub and push jb inc ss xchg ss repz sbb pop dec (bad) or pop clc adc (bad) popf loop lea pop fiaddl cltd sahf rcl inc sbb dec fnstenv push dec sahf pop out js mov insl xor inc in push loopne add ret or pop sarb inc and mov xchg pushw lock pushl lea jmp (bad) into rcll lods cmpsb cltd stos loop pop lcall mov fadds inc mov jle mov adc jmp inc ficompl out movsl fwait int outsb icebp into shl out fisub or mov pop in and iret and pusha pop xchg inc test xchg jae arpl out mov push mov lock xlat js iret nop out jmp orl lock or out and xor mov cmc adc int3 lret (bad) cmp jg test sub cmp jge pop add sub xor and iret fnsave and jmp test cmp pushf cmp movb pusha call out xchg xchg xchg mov mov bound push (bad) mov cld (bad) inc jle mov add adc out (bad) xor iret push popa loopne orb and aas (bad) and rcrb aas push mov mov pushl mov add cmp es ss (bad) into mov mov out insb xor xor insl fidivrl adc pop rorl in sbb incl mov mov dec mov pop popa pop fs lcall push js jl jge sbb (bad) mov (bad) xlat ss add (bad) pavgb shrl mov aad pushl into (bad) xchg sub jl jo xchg into or jge leave or hlt stos hlt leave pop mov adc sarl sub iret ss xchg or or or sarl xor imulb xchg fstl int3 sbb sar (bad) pop xlat sub add dec mov fistl mov sbb dec and inc mov in rcr idivl cmc xor jl jne push pop icebp adc outsb add inc or call adc rcrb leave push sbb leave inc mov loopne sbb out flds loopne add cmp jo xchg sbb cmpsb mov pop int mov fs jb push movw pushl ret dec sub (bad) xlat lea nop push insl xor test (bad) sub test sbb jne mov addr16 rolb out loop fwait sub dec pop lahf pop (bad) or pop insl dec xchg test stos cwtl xchg scas pop test notb mov mov xor lret jo mov inc sarb xchg adc ja es sbb iret pop or sub sbb push jb fnsave into icebp repnz std push mov xchg jo test fucomi aam mov lret push or insl adc cwtl rcrl inc jecxz mov jmp fucomi adc (bad) dec (bad) iret lret jge push outsb ror mov lock rorl dec movsl pusha pop dec sub adc sbb cmp push gs mov aaa cmp push or mov fmuls inc pop aas stos xor cmp stos xor jae insb ljmp nop jge xchg jno int3 imul push movl push push pushf lea jmp lods xor and movsb cmp nop jnp in iret adc add stos inc mov dec pop mull push movzwl test jg add mov mov jne pusha out xchg ljmp dec (bad) pop loop cmc or push icebp mov popf pop cmp das jo ret ret in dec outsl aaa (bad) fdivrs mov sub lds cld push sub js les and mov pxor jae lods (bad) cmp cmc mov adc add sub popa sbb cmp das fistpll mov adc mov xor inc jnp ret jno int3 push mov inc jp inc push loop or mov xor adc data16 daa xlat lret adc loopne mov dec cmc ss and cli ja or iret adc and test adc jbe mov inc out dec or ret adc push test sub push mov mov sbb jmp into fist pop xchg pop adc xor outsb jge ret leave jbe pop aad mov and dec movsb push outsb jne dec adc mov dec fs aam xor rorl fs or hlt lret mov movsl stc in jmp shrl loop mov adc mov xlat jo inc leave push xchg mov (bad) pop test popa or jno lret adc dec or mov mov mov xchg mov sub push mov imul adc lahf rorl mov (bad) adc xor xchg stos jle dec pop inc sbb insb xchg mov lret data16 test add fstps push or clc push cmp imul lahf and (bad) mov pop inc hlt imul or sub adc push jg sti inc mov pop mov cs pop test xor cmpsl pop sub jle fisub mov test sub pop out push imulb push xchg loop mov mov orl or lahf ret pushf dec cli or add xchg das xor mov lret out push data16 cmp je mov pop inc cmp pusha stos push addr16 div in or vcvttps2dq leave push aaa inc jle cmpsb sbb es cmp jno leave mov movl push push mov push lea jmp inc inc dec xor cs insb add sbb sbb mov les (bad) fstpt or jecxz out sbb imul inc xchg xchg mov iret icebp push test in jmp sub add cmc leave sbb xor loope jge insb cmp (bad) dec imul lock hlt repnz add adc jne insl out in xchg push loope outsl cltd (bad) mov xor cmp mov sub insl imulb jnp pop ljmp xor jecxz (bad) adc jle fwait out cmc dec xor pop imul pop es pop xor add xlat push and sti add jne jle push daa cmp adc cmp enter in sbb shld lea add bsf btr (bad) lock pusha sete bt pushf mov cmp repnz mov jmp pusha pusha movl lea jo pusha movw movb movl pushf lea jmp shrb jne aas mov stos xchg mov seto int loope imul push lcall out or and xor cmc dec or (bad) enter enter sub imul dec jnp xchg add push push add cmp jle dec mov outsb movsl mov cmp int sbb mov into mov cmpsl (bad) leave sbb jge jne and out push sti test out pshufw xor insl cmp or sti xchg sub (bad) mov xchg enter loopne incb sbb sbb xor add data16 pop movl jb gs gs outsl jb add in test pushf cmp add lea jle pusha lea jne jmp call jmp scas das mov call mov xchg loopne stc xchg fimul (bad) adc xor or pop lock pop xchg mov popa pop sarb and sub aad xor (bad) fcmovbe dec aam lret or ss mov je jmp pop push push int jae in pop stc xor mov cli push xchg pusha daa xlat mov les push in xchg ret mov inc mov cmc flds inc pushf mov ja push mov (bad) cld mov dec mov test popf and push fwait mov adc mov cmp movsl jno (bad) pop aaa les inc jae sti test rcll sub sub cmp fsubrs mov clc pop sub out jae cmp mov or addr16 jge pop xchg pushf imul loopne ret xchg jp test mov xchg sbb add sub or cmpsl mov in jnp hlt dec shl in sbb in mov out loope pop push dec pop xchg mov not jg dec push inc fmuls jg push jecxz js enter sbb lods (bad) aad sti test scas out pop xchg push mov cmpl rcrb fcmovnb and sti jecxz in mov cmpl cmp (bad) cmpsb fsts test lods add (bad) mov es popa cmp call pop mov fadds dec or mov push test xor daa jl outsl mov adc (bad) jbe jmp push jns (bad) mov adc sbb xchg jns push add addr16 mov and or xor xor xor push dec jbe push dec pop cld into mov xor sbb popa pop outsb adc shr lret test iret rep in mov fnop mov or fcompl lahf and adc xchg (bad) std or cmc xor fildl adc pop lds (bad) in jmp pushl in xor cmp jge test jnp (bad) test jg andl fadd sbb imul xor xchg addr16 mov loopne mov fmull (bad) lods sbb (bad) enter lods leave inc lret jecxz add push data16 out leave add jne push gs mov pop addr16 jno (bad) adc xchg (bad) nop js mov ret fistp lock mov push loope or imul ljmp stos aam or icebp mov sarl jl lea sti and insb (bad) ret and nop cmp stc add jmp shr (bad) imull loop jl xor pop js call sbb push imul sub les xchg sub std roll call xchg mov out fcomip push or push dec loopne fcompl inc xchg sub (bad) and mov xchg mov mov jg (bad) lcall dec mov mov dec xor dec (bad) pop frstor mov call loope xor popf jecxz stos add pop push pusha mov mov mov pop ret pop xor push dec iret xor cltd scas bswap stos shr iret lock lock xor sbb jnp lret stos or xor mov (bad) pop sti inc push sub jp sbb xchg mov or pop cmpb mov sub jns loopne xlat jmp mov xor xchg or sti xchg or ljmp mov out sub sub push sbb xchg or jnp pop ret stos mov jp add add add and add add add adc add add iret sbb add add add pop add add add add add add xchg mov add add add push push add add add add add out and add add sbb push add add add mov add add add add add pop add add add cli and add add mov push add add add (bad) adc mov mov and repnz add add mov jmp pop push dec mov fidiv into aaa cmpsb push call sti cmpb addr16 addr16 mov lods rorb movsl adcl repnz cli adc add call xchg scas jmp addr16 mov lock fisubl add mov inc adc adc inc pop adcb jg imul xor jl mov in ljmp mov cltd push mov mov sub xchg or jno (bad) jne dec adc dec mov lds xchg push inc or clc inc xor push flds adc push xchg cmpsl inc pushf lods and cmp inc cmp push xchg nop xchg stos in pusha push fwait jecxz out sub jo jno lds fisub popa aaa cmpsl mov add rolb jmp sub fs into push push push mov sbb popa jbe fimul mov gs sub pusha mov pop or pop out mov inc fwait lods mov xor repz cli ja push or and cmp ss pop popa cmp push popa data16 xlat xchg into and pop (bad) push jb dec xchg mov xor lret call add inc gs gs je jo imul add pusha movb pushf pushl lea jmp mov cmp sbb sbb (bad) cmp out insl jno push cmp jns lods and sbb mov inc js inc movq in adc int3 jae insb mov bound cmp mov cltd popa jg jb xchg stos fmull pop pop mov fsubr pusha mov fsubr and wrmsr dec jb outsb push scas aaa mov (bad) jbe and inc fucom mov mov jbe test ljmp pop sahf outsb roll sbb scas scas mov loop pop mov cwtl inc pop fisubl sti inc into nop or fsubp push stos xchg es or cmc push loopne repz inc xchg lods xchg mov or negl add sub push daa stc and out pushf loop inc push xor inc and pop rcl sub mov adc das outsl jge (bad) sti pop add jno mov add and test sbb add push add add add add add add push add add add add add loopne add add add add add adc sbb push add add add add add mov push add add add add add loopne add add add add add push add push add add add add add push add push add add add add add in add add and add fsubs add add and add mov push add and add push add add and add push add add and add inc pop add add and add loopne add and add push add and add loopne add and add loopne add add mov lock aas pusha mov mov jo,pn and push cmpsl or call push icebp xchg (bad) xor mov (bad) sub repnz out or adc insl movsb cli and cmp jbe adc fldenv push or testb cmc dec pop ds lahf sub mov mov pop ja sub cmpsl (bad) or add fsubrl mov and ja xchg stos jmp adc fisttpll ds or fs xchg outsl fwait inc push sub jne xor icebp cmp sti adc outsl lock sub or clc cmpsb push les std add ja fs mov mov inc dec ljmp repz daa and es xor add sarb pop pop pop ret mov fsubr js pop lods adc mov (bad) sbb and arpl jno dec pop dec insl pushf je xchg lret lods in insb stc or (bad) outsl pop lret ret out mov icebp out dec cli cmpsb push mov push sbb xorl loope mov jns pop aam and mull xor cmpb andl scas sarb mov inc xor push dec push jmp stos aas lahf loopne pop mov cmp and dec jle xchg xchg out adc shr xor inc push or (bad) pop daa sti les jne sbb add jae data16 push stos scas push into fiadd out stos ja repnz imul push xchg cltd scas sub push add imul in (bad) adc lds sbb into (bad) popl xorb inc lcall fcmovb cmp mov xor repz and lcall pop jae pop mov call jne gs xor fs insb add cs hlt stos mov sbb pop jle (bad) pop push fisub movsb (bad) mov add fidivr push test movsl jp or aas or and or lret inc clc enter pusha adc add je sbb adc push add mov lods cmp icebp (bad) lea pop and xchg in inc jno dec pusha xor and popf aaa mov test addb dec orl jp arpl inc sub ja les adc xor pop mov jmp ret data16 adc or cwtl sti jmp arpl imul fisubl and sub adc and js mov je mov xor sahf imul mov subb mov jp jp jp mov mov pop lcall or inc outsb mov call (bad) push push xchg mov (bad) in pop jo stc in clc push aad jmp lahf push mov rol stc cmp lahf decl aam shll mov pop push mov jmp xor jg cmp pop mov jmp sub out shl cmp ljmp pop pusha out mov add xor popa sub (bad) fcomps and sarl adc jns (bad) dec cwtl dec xchg mov call fdivrl movsl aad fwait push or xor inc add in ljmp jle in inc cmp and mov lcall xor push ss and dec jno xchg inc mov mov in ljmp cmp xchg mov int3 scas sarb (bad) mov add nop outsb in repz jbe es push mov test pop cmpsl mov sahf loopne mov scas test pop imul mov cmpsb mov lret jo xor lret or in jl push cmc sbb (bad) inc mov sbb aas imul adc movsl pusha jno jecxz mov fcoms add mov cmp xor iret jo inc sub out aas addb xchg pop gs pop mov cmp mov push pushl call push insb jb ret sbb jo in jno or cmp cwtl es push jecxz lret sub xor push dec push dec nop sbb mov sbb dec xchg movsb les fist mov ljmp notb fistpll pop dec stos insb adc push pop mov xchg pop fs mov cltd mov in push cmpsb mov and dec pop and fnstenv push mov cmc leave movsl sbb data16 cmpsl scas scas out sbb mov and cmp movsb fildl sbb icebp pop and pop mov fiadd sti in jns cmp xchg int3 push mov cli jmp ljmp xor cmp xchg cmpsb inc mov adc pop ljmp pop sbbb je adc pop jae sbbl pop xor mov adc cli add sbb sbb add enter rorb lds fistpl scas mov xchg dec xchg sub lcall scas iret inc fsubr aad shlb adc add (bad) add (bad) pusha mov and pop mov mov pop push push movl pushf lea jp push push pushf movl lea jmp pushf pushf pusha push mov pushf mov pushf pushf pushl ret lea jae cmp clc add call sub cmc jmp push lea je movzbw setg lea mov bswap push lea jmp call cmp fidivr push and xchg mov mov movzwl cmpsl xor mov imul frstor fdiv adc add jmp loopne out or rorb js jo cwtl inc jb ret pop (bad) dec mov imul xor jne mov (bad) adc sub clc es outsl test fsubr push out inc les mov fwait lods scas aam (bad) sub cmp or or dec xchg dec shl fldcw mov add bound push ffree xchg stos rorb sbb pop cltd add mov lret ss enter pop mov icebp jge ret sti fwait push jno mov cmp and movw movl pushf push lea jmp call bt call inc push push add ds lcall sbb pop inc pop mov (bad) xor mov mov js or dec jecxz dec pop mov sbb out hlt sub pop lods xor in loopne fsubl jb (bad) dec fsubs lret adc cmc sub push sti pop or lea push fbld and pop popf test mov add pop mov xchg sahf sar jl mov push rcrl mov mov pop push push out add fild mov repnz jmp add mov js inc add jp mov or call and scas mov rolb fsts adc dec nop mov inc in xchg mov and sub dec push outsb into or sahf jns or mov lret or shr dec push push in push movsl gs fmull mov gs movsl loopne xchg leave fcmovu icebp jg daa push ja inc imul mov in (bad) and pop incb (bad) push outsb push mov pop test rcl (bad) xlat (bad) fcmovb sbb fidivrl cmpsl dec jl arpl pusha adc push sbb es xor lods adc inc cmp dec pop jno mov jmp out call adc add add bound je xchg xor xor xchg mov cwtl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or sbb es cmp inc ss mov ss aaa dec aaa pop aaa popa aaa insl aaa js jge mov xchg aaa cltd aaa sahf aaa stos aaa mov aaa into aaa hlt aaa pop cmp cmp lcall cmp cmp cmp cmp cmp cmp cmp cmp jne xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp fwait cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp test xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp stos cmp sbb lret or ds dec aas ja lret aas sarl add add add test add add pop xor xor xor xor xor xor mov mov loopne or xor jnp xlat xor xor hlt xor xor xor xor jb xlat xor inc ss ss sbb aaa xchg aaa cmpsl aaa inc cmp arpl jne add cmp cmp cmp cmp fstpt lock pop cmp cmp cmp cmp cmp fnstcw xchg ds ds adc inc aas data16 jl mov (bad) aas stc aas add add or add cmp inc xor mov fdivl add xor xor xor xor jnp mov (bad) xor xor xor xor gs xor xor xor xor xor test (bad) xor js cmpsb ss mov fidiv jmp aaa adc inc aaa push aaa data16 fbstp adc and cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp cmp jo jne jp jg test mov mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xchg (bad) cmp sbb and sub push ds ds ds ds aas pop aas pusha aas popf aas stos aas mov add inc add jl add add xor xor xor xor xor xor stos xor xor adc sbb stc xor xor mov fwait xor xor xor jne mov cmp cmp cmp jg mov stos cmp cmp cmp cmp cmp cmp pop cmp cmpsb cmp cmp cmp cmp cmp cmp cmp addr16 cld aas add add xor xor test loop in xor xor xor xor xor xor xor sub jp test mov mov xor jns (bad) xor xor xor xor xor xor xor xor xor xor adc sbb arpl jne xchg cmp imul mov cmp cmp cmp cmp das arpl je lds iret fdivrl adc and iret aas add add xorl les xor sbb and cmp pop ss xchg mov aaa ret aaa loopne bound jp cltd cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp aad sbb push arpl push movsl lods ds les lret fdivrs add or adc and aas aas inc aas dec aas push aas xchg mov mov aas sarb add add add add xor xor mov mov xor xor xor xor xor xor xor xor xor inc xor xor xchg xor xor xor xor xor xor xor xor xor xor xor popa xor sahf xor xor xor xor xor or xor xor xor xor xor xor xor xor xor xor xor xor xor xor addr16 jmp lock xchg cmpsb ss aaa sbb and xor cmpsb aaa lods aaa mov push cmp cmp cmp cmp push cmp cmpb cmp cmp cmp cmp pop cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp jns jg cmpsl cmp mov cmp cli cmp dec jne,pt xchg ds arpl jb cmpl add add add cmp inc xor push xor imul xor jge mov mov mov xchg xor xor gs xor sub push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp aas mov fdivrl loop add add cmp inc xor xor mov xor xor xor jl xorl xor jmp xor mov adc and cltd aaa test mov ljmp cmp cmp cmp cmp cmpsl cmp cmp cmp movsl ds ds add add sbb cmp mov adc mov xor xchg add adc and cmp xor xor xor xor inc ss ss cmp add add add mov xor xor xor xor cmpl cmp call cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ret aas aam cli aas add add add add add add sbb and xor xor xor xor xor dec xor push xor mov fnsave jmp add xor xor xor xor xor xor xor xor ss ss ss bound addr16 jnp mov cmpsl ss ss ds dec aaa push aaa pop aaa pop aaa arpl mov out aaa hlt aaa stc aaa sarl cmp cmp cmp cmp push cmp mov cmp cmp cmp cmp cmp xor cmp cmp sarb fidivrl loopne out cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec fdivrl cli add sbb sbb aas dec aas push aas (bad) aas sahf aas cmpsb aas mov mov rolb add add add xor xor push xor xor xor xor insl xor xchg xor xor xor xor xor xor xor xor xor mov mov lds ljmp xor jb jns xchg xor cmp cmp cmp cmp cmp cmp inc cmp jbe jl mov (bad) cmp inc cmp pop cmp outsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp arpl xchg lods cmp fnstsw daa ds mov xchg ds or and xor aas repz add add adc add sbb dec xor pusha xor xor xor xor xor xor xor xor xor push xor pop xor insl xor xor in xor xor xor xor xor xor xor xor push xor xor xor xor xor xor xor xor xor xor push xor in xor and sub aaa ss ss ss bound xchg aam fdivs fdivl loopne in call ss ss ss add adc and aaa clc aaa sub cmp cmp cmp cmp cmp jae jl sarl cmp cmp cmp cmp cmp cmp pushf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sarb test (bad) ds or adc aas jno cmpl add add int3 add add jo mov xlat xor xor xor xor xor xor xor xor push xor xor xor xor xor xor xor xor xor ret xor data16 jl mov aaa pop aaa mov mov lds aas cmp bound jns xchg cmp cmp cmp cmp cmp pop cmp (bad) cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp xchg cmp sbb dec ds ds ds ds ds ds cmpl cmpsl ds aas xchg aas lahf aas int3 aas repnz add add add rolb add sbb xor xor xor xor xor mov (bad) xor xor xor dec xor jno (bad) xor xor lea mov xor xor xor xor jo xchg inc ss divl and aaa loope ljmp cmp cmp cmp cmp cmp cmp cmp push cmp mov aad lock cmp and sub dec cmp lea stos cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ret cmp jecxz cmc ds aas jbe pushf aas fidivr call add adc add jae test xchg xor xor xor pop xor push xor data16 xor xchg xor xor xor xor xor xor xor xor ss ss ss jecxz or inc aaa push aaa jae lea ret cmp fdivrs sti cmp cmp cmp jb jl fwait cmp cmp cmp js scas cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jl cmpsb cmp add push sbb das jne,pt (bad) ds ds ds add daa aas (bad) aas lcall aas add add sbb add or adc xor pop xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor fwait xor xor xor xor xor xor xor xor xor xor xor xor add pop ss lock and xor aaa divl cmp imul cmp cmp cmp cmp ja mov xchg cmp cmp cmp cmp cmp cmp cmp inc cmp imul cmp nop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp addr16 mov sarl cmp push add add add pusha add add xor lods xor xor xor xor xor xorl ja xchg xor lea mov push cmp cmp cmp cmp cmp cmp cmp jnp mov inc cmp data16 cmp cmp loope adc xor inc add add add xor xor xor xor jp repnz xor xor xor xor bound jbe jnp lea jno xchg cmp cmp cmp cmp test cmp cmp cmp cmp cmp test jecxz push ds xor jge mov (bad) ds or adc inc aas push aas mov out aas cli aas add add add add push xor xor jecxz jmp xor xor xor xor imul lcall xor inc xor insl xor pushf xor xor xor xor xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jnp mov mov xor push ss ss mov ss cmp ds mov cmp imul ret cmp push cmp cmp cmp cmp cmp dec cmp ja cmpl mov cmp cmp cmp cmp nop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb cmp jb lcall cmp fidivrl xor cmp gs ds ds mov sarl add add add add xor xor xorl xor xor xor xor (bad) xor xor xor xor xor xor xor je xchg xchg xor xor xor xor xor xor xor xor xor xor xchg xor lods xor in call xor adc sbb and cs cmp inc ss ss ss jnp mov lea lahf ss divl pop aaa and cmp inc aaa pop aaa popa aaa insb aaa mov cmp cmp cmp in cmp cmp cltd cmp sarl fdivrl add adc and xor pop cmp cmp cmp cmp cmp cmp cmp cmpb cmp cmp cmp and cmp cmp cmp cmp cmp cmp cmp clc cmp add add add add (bad) xor xor xor xor xor xor xor xor jne xorb xor cmp inc ss ss cmpsl ss ss ss ss ss das aaa cmp inc aaa dec aaa push aaa pop aaa cmpsl aaa mov fnstenv in jmp or adc cmp data16 xchg lea pushf cmp cmp cmp cmp cmp cmp cmp cmp cmp xor cmp inc cmp dec cmp jb jp mov mov xchg cmp cmp cmp cmp cmp cmp cmp pop cmp jl add sbb popa cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov sub cmp add add add dec xor outsl xor xor push xor xor xor xor xor xor xor xor xor repnz dec aaa xchg aaa stos aaa mov cmp cmp mov mov cmp cmp aas cmp push aas jbe jnp lea stos aas add add adc xor xor xor inc xor xor xor xor ss enter inc cmp add mov add movsb xor xor pop xor push bound outsb ss cmpsb ss aaa push aaa pop aaa imul lret aaa fdivl inc cmp pop cmp cmp cmp cmp cmp cmp cmp cmp dec cmp jno ja jge cmpl cmp cmp cmp cmp cmp cmp and cmp cmp jmp cmp cmp cmp cmp cmp adc dec cmp nop cmp cmp cmp dec cmp lods cmp repz add add add jo ret xor xor xor xor xor xor xor xor xor xor push xor mov mov xor jle (bad) xor les insb cmp je js jl cmpb cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp cmp cmp cmp cmp xor cltd cmp or ss ds aas adc push aas xor aaa aas je xchg aas add add lock add xor xor xor xor xor xor xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor imul xor fdivl repz sbb xchg lcall ss aaa and dec aaa jae xchg movsb aaa add sbb inc cmp cmpl fidivrl add sbb daa cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp stc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp lock jb test aas add add add pop add add xor fidivl aaa xor xlat xor xor xor xor jg (bad) xor xor xor xor jno lods xor inc ss ret cmp int idivl mov cmp mov loopne add add (bad) xor aaa xor inc aaa fwait cmp cmp cmp cmp ds aas enter add add pusha add add int3 xor outsb xor xor inc xor push xor pop xor push xor mov cmp mov (bad) cmp fs cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp es aas mov add add xor mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp cmp jle lds lret cmp pop cmp cmp cmp cmp adc add add add xchg cltd cmp add add pusha add add xor pop xor xor xor aaa mov ret aaa adc sub cmp cmp cmp cmp cmp cmp outsb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp idivl sub add add add jo add adc aam xor bound push xor add jb mov and inc aaa push aaa lret aaa push cmp cmp cmp lcall cmp cmp cmp mov mov sarl adc cmp nop cmp cmp cmp int3 ds sbb cmp dec aas bound xchg aas mov sarb aas fidivr add add add add xor xor xor xor xor xor pusha xor jle nop xor xor xor xor xor xor xor pop xor imul xor jge jmp xor xor xor cmp inc cmp pop cmp insl cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp jnp cmpl cmp std cmp or adc adc sbb sbb and push jo je js jl loop in or (bad) adc sbb sbb cmp aas mov aas lods aas mov mov mov push add inc add add xor adc adc sbb jae mov mov xor xor lds popa cmp cmp cmp cmp cmp cmp cmp cmp ds aas add add xor xor xor xor xor xor stc xor xor cs ss ss or aas aaa inc aaa xchg aaa scas aaa (bad) aaa sbb inc cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp jg mov mov mov cmp cmp cmp cmp cmp cmp aas add add add add xor aad sub aaa cmp cmp aaa dec aaa push aaa push cmp cmp cmp cmp cmp cmp cmp cmp push cmp arpl cmpb cmp pop aas fstpt add add add add sbb and sub inc xor ja xorb xor repz fs xor adc inc xor xor pop xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor mov adc ss ss ss aaa pop aaa pop aaa push jo xorb aaa fwait aaa test aaa aam fdivl loop jmp aaa cld aaa add or adc sbb and sub cmp cmp cmp jl mov (bad) cmp cmp cmp cmp cmp cmp cmp outsl cmp ds ds xor xchg (bad) aas fwait aas sarb fstpt out add add and sub xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor mov xor xor xor xor xor xor xor xor mov mov aaa repz clc aaa xchg cmp cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp lods aas add add mov loope cmp jnp out push xor xor out xor int xlat ss out ss ss aaa jl lret cmp xchg cmp cmp add mov add add es cmp cmp cmp cmp cmp cmp cmp cmp in add or and xor aas ds ds bound jno jge mov scas sarb jecxz,pt in ds aas pop aas sarb rolb rolb add nop xor xor jae jle mov les out xor xor xor xor xor xor xor in xor arpl js mov aaa dec aaa loope cld aaa inc cmp cmp cmp cmp imul in cmp or adc sbb sbb and dec cmp lea xchg cmp cmp mov cli cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp xchg cmp movsb cmp dec jbe,pt aad add add push add add leave xor xor cmp fs les pop aaa push aaa sub push aaa gs mov (bad) aaa test mov aaa add xchg cmp mov pop cmp xchg cmp cmp mov aas lret aas repz add loopne add add xor xor xor xor popa xor xor xor xor xor xor xor xor xor xor mov aaa sub xorb aaa mov repz sbb movsl cmp cmp inc cmp mov jecxz xchg cmp cmp cmp add add add sub add test jnp dec xor pushf xor jmp out aaa repz divl sti aaa pushl add pop cmp cmp add add add add xor jle mov out in ss ss ss aaa mov aaa out aaa add adc and cmp pop cmp cmp cmp cmp cmp cltd aas movsb aas iret aas fidivrl call aas idivl add add pusha add add xor xor xor xor xor xor xor xor pop xor in xor xor test dec xor xor xor xor xor xor xor (bad) cmp cmp cmp cmp cmpb cmp cmp cmp cmp dec aas add add sbb add pop xor movsl xor xor xor xor xor add add xchg add add aaa xor aaa aaa cmp aas aaa inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa arpl addr16 imul aaa jae ja jnp jg xorl aaa mov (bad) aaa xchg aaa xchg aaa fwait aaa lahf aaa mov aaa je cmpb cmp jns test mov cmp add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ds add and inc aas dec aas jb test xchg aas add add add dec xor xor xor xor xor push ss ss ss aaa insb cmp cmp cmp outsl cmp cmp cmp cmp cmp cmp leave cmp es sarb adc and mov aas add add add add xor sub xor xor xor xor xor divl inc cmp cmp cmp cmp cmp enter stc cmp cmp push cmp cmp cmp cmp cmp cmp jp mov movsl cmp sbb ds inc aas push aas push jp mov aas out aas add add add add xor xor xor xorb xor out adc arpl in xor daa xor push jbe jge xchg cmpsb xor inc cmp push cmp imul xchg jmp cmp cmp cmp cmp cmp cmp cmp cmp add add add add xor jno js jg xchg xchg xor xor sarb xlat aas fidivr in in aas repz cli aas add add add add or wrmsr cmp push xor xor xor cmp cmp cmp cmp cmp cmp cmp nop add sbb add pushl and xor xor cmp cmp cmp cmp inc add add xor aaa xor add call cmp cmp dec ds aas inc aas push aas jp nop aas cwtl aas scas aas mov int3 aas aam in aas add add add or and sub xor dec xor xchg xor xor xor xor xor mov cmp cmp cmp cmp aas jns add add add inc add add cmp cmp jg mov stos cmp cmp push ds outsl ds fnstsw popa aas push aas sarb aas enter sarb aam fdivrs fdivrl loopne add add add adc add je jnp (bad) cmp or loopne add add mov xor pop aaa sub ss cmp cmp jae xchg cmp cmp cmp cmp cmp cmp add add pop add add xor xor jne movsl ss ss cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp insb cmp cmp pop cmp xor ja add add add sbb add xlat xor xor lods cmp add adc pop add add jno xorl push xor xchg xor xor xor jl xor xor inc aaa fidiv in test mov cltd cmp cmp cmp cmp cmp cmp fdivrl popf xlat ds aas add add xor add pop xor xor jle (bad) xor mov lcall xor popf lods ss aaa aas aaa add add add push xor xor mov aaa dec aaa nop aaa (bad) aaa cmp xchg cmp cmp cmp cmp cmp cmp mov lock cmp mov cmp cmp cmp cmp cmp cmp cmp in cmp insl ds ds xor jnp mov jecxz add add add add xor xor xor xor xor lea ret xor xor lahf xor xor xor xor xor mov add in xor out and xor cmp push aaa popa aaa imul xchg mov aaa int3 aaa loope icebp aaa cld aaa adc sbb cmp dec cmp arpl outsl cmp test xchg cmp (bad) cmp cmp cmp cmp cmp cmp pop cmp jno cmpl mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp popa cmp add add add fdivs xor xor xor xor xor xor xor xor xor xor or adc sbb sub xor cmp push xor mov lods xor mov cmp insb cmp je js jl cmpb cmp cmp mov add pusha add xor add les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor xor jo add add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor dec xor pop xor fs jo cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp pop cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb xor add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ds ds ds ds ds ds ds cmpb mov mov nop ds mov lods ds mov fdivrs fdivrl loopne in add add add xor cmp inc xor dec xor pop xor fs jo je js jl xorb xor cwtl xor movsb xor mov mov mov xor int3 xor fdivs in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb mov cmp cmp cmp add movsb add add fs ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa add add add sbb add inc cmp cmp cmp cmp add add add add add xor mov mov xor xor xor xor xor adc sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb dec xor pusha xor nop xor test lods xor fdivl hlt xor sbb sub sub cmp inc ss ss ss ss mov nop ss ss ss les enter fdivl loopne call aaa adc and sub sub xor dec aaa pop aaa pusha aaa push aaa xchg aaa movsb aaa test lods aaa mov int3 aaa fdivl loopne lock hlt aaa clc aaa add sbb sub sub cmp inc cmp cmp cmp cmp cmp cmp loopne in call cmp sbb and and sub inc cmp cmp insb cmp cmp mov mov cmp cmp cmp cmp cmp or or adc sbb xor inc cmp cmp pop cmp cmp movsb cmp cmp cmp cmp cmp cmp and xor cmp dec cmp cmp cmp cmp cmp loopne in call cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ds ds hlt adc sub xor push aas jo nop aas mov mov aas add add add add xor xor dec xor je xorb xor xor xor xor xor pusha xor xor fdivl loopne add and inc xor insb xor xor xor les int3 xor xor xor xor xor xor xor xor xor cmp dec xor xor fdivl call xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and sub xor cmp push xor fs mov lods xor mov xor in xor add or adc sbb and pop ss xorb ss ss fdivl cld or sub xor cmp inc aaa dec aaa push aaa je jl test nop aaa mov mov aaa add or sub cmp pop cmp cmp cmp cmp cmp cmp push cmp push cmp cmp clc cmp and xor push cmp cmp cmp cmp cmp cmp cmp dec cmp js test int3 cmp cmp cmp adc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp insb cmp mov hlt cmp sbb xor inc ds ds mov cwtl ds ds ds sbb and sub push aas insb aas cmpb aas xchg aas mov int3 aas loopne in aas hlt aas add add add add add cmp inc xor xor xor lock xor xor sub cmp pop xor xor xor xor xor xor xor cmp dec xor xor xor xor xor xor adc xor cmp inc xor push xor xor les int3 xor xor xor xor sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub pop xor nop xor les fdivl adc sbb cmp inc ss ss ss ss ss movsb les (bad) ss add add jo cwtl xor test lods xor xor (bad) xor xor xor xor xor xor xor xor xor sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les enter (bad) aaa loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp clc cmp cmp cmp cmp cmp cmp cmp cmp cmp je js jl cmpb mov mov nop ds mov add and inc aas fs nop aas mov aas lock hlt aas clc aas cld aas add add add or xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sub pushf xor sbb add mov cmp cmp cmp cmp cmp cmp cmp or rolb int3 cmp cmp cmp cmpb cmp cmp cmp movsb cmp cmp cmp cmp cmp cmp cmp cmp cmp or and add add add sub dec xor xorl jle int3 xor xor xor xor inc cmp cmp cmp cmp aas add add push add add (bad) xor add inc push add add int clc cmp imul push cmp cmp cmp add add add add xor xor xor pop xor or ss aaa push cmp cmp jae aam stc cmp cltd ds ds aas lds add add add add mov divb dec xor xor xor xor xor inc cmp cmp cmp cmp push add add repz ss adc fnstcw xor insb cmp push add add cwtl xor xor sub mov aaa xorl into cmp cmp cmp inc aas add add mov xor xor xor cld cmp cmp cmp jge or push ds add add add xor xor fwait xor xor sub cmp mov add add add xor cltd xor xor rolb and add cmp mov cmp cmp jne fdivrs cmp enter test add add dec xor aaa push cmp mov cmp aas sarl add add push add add xchg xor pop xor xor mov push xor cli aaa daa cmp data16 cmpl cmp cmp cmp cmp cmp mov aas add push add add add and cmp dec xor xor xor xor and and dec xor xchg xor xor mov mov (bad) xor or xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor dec xor mov xor cmp jo mov nop ss fdivl loop sub aaa mov loope inc cmp cmpsl cmp cmp cmp cmp pop cmp jae mov mov cmp cmp cmp cmp loopne (bad) cmp sarb sarb out add sbb and aas dec aas outsl aas cwtl aas test add add add add add xor xor data16 mov loope out repnz xor xor xor xor jns mov test xor xor xor xor adc xor xor xor xor xor xor xor xor xor xor xor xor mov ss movsb ss push aaa adc sbb sub cs inc aaa push aaa pop aaa xorl aaa xchg aaa cwtl aaa sahf aaa movsl aaa stos aaa mov mov aaa (bad) aaa fdivl loope out in aaa lock divb sti aaa push cmp cmp cmp dec cmp pop cmp jbe jl mov test cmp cmp inc cmp test mov sti cmp cmp test xchg ds aas add pop add add xor xor xor xor ja (bad) xor xor xor sub push xor mov xor xor xor adc xor xor xor xor xor xor popf xor sbb imul (bad) xlat ss xor gs movsb cmp cmp cmp cmp ds aas add pop add divl sbb xor cmp inc xor push cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp xchg ds fstpt in es addr16 sti aas add add pop add add add xor mov (bad) xor xor xor xor cmc xor xor xor xor xor xor xor xor xor xor xor xor dec xor imul lods xor in pop arpl jl (bad) ss aaa push ret cmp sub inc cmp sarl cmp cmp cmp cmp sub dec cmp imul cmp cmp mov lea sarb add adc sbb sub xor inc ds arpl imul jge lcall ds ds jecxz,pt ljmp aas adc and es push aas push aas push add xor test into xor xor xor sub xor jo (bad) fdivl hlt ss aaa push aaa enter lea lahf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc pushf cmp lods cmp sti cmp cmp cmp inc ds ds ds ds ds lods fnstcw add add add xor (bad) xor xor sub pop xor mov mov cli xor xor xor xor xor xor xor cmp xor xor xor xor xor xor xor xor xor xor xor xor cltd xor loope in xor pop aaa popf aaa sub dec cmp cmp cmp pusha pop add xor xor xor fnsave or sbb xor xor jne jl mov xchg xor call xor js or sub xor xor xor pop ss cmp xchg int3 cmp cmp cmp cmp sahf cmp cmp cmp mov loope repz cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp into ds fidivrl loopne out out ds ds add or adc sbb and sub xor aas dec aas push aas pop aas addr16 js lea cltd aas clc aas add add add imul add xor popa xor xor xor xor xor xor xor xor xor xor jno mov xor xor xor xor xor xor xor sahf xor pusha cmp jno mov pop cmp cmp cmp cmp cmp ds movsb js,pt jge (bad) aas add add xor aas xor mov les int3 xor xor xor xor xor xor xor xor xor xor jge mov xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor nop pop add add add xor xor xor xor xor xor xor xor xor or les enter add add call cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp xor cmp inc cmp dec cmp pop ds ds sarb aam fdivrs fdivrl loopne in call aas hlt aas clc aas cld aas add add add add add or or adc adc sbb sbb and and aam fdivs fdivl lods xor xor xor xor xor xor xor adc sbb xor xor dec xor xor xor xor xor xor xor xor xor xor xor sbb and xor xor cmp inc xor push xor mov mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor test mov xor pop ss ss enter add or sub inc aaa dec aaa push aaa enter or sub inc cmp cmp test mov test enter hlt cmp cmp cmp pop cmp insb cmp js jl xchg cmp rolb add add add add sbb and cmp mov xor or sbb sub dec ss ss ss ss ss aaa add or adc sbb and sub xor cmp inc cmp cmp cmp cmp cmp movsb cmp les dec cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb sbb and and sub sub xor xor inc cmp pop cmp cmp fdivrl call cmp cld cmp cmp pop aas jl movsb aas les enter add pop add add sub dec xor xor or adc add xchg cmp aas add add add add xor aaa xorl cmp cmp add jo add add add ds aas add add mov call cmp cmp cmp add add jl cli xor xor xor fidivr lahf cmp cmp cmp cmp cmp add add add add aad les xor add add das xor xor xor (bad) aaa jle daa cmp inc cmp cmp cmp cmp cmp rorb xor add (bad) xor xor xor xor ss aaa mov cmpsb aaa (bad) aaa hlt aaa push cmp jno or add add or sub add in dec ss aaa (bad) aaa or pop cmp cmp cmp cmp cmp cmp or xor add jecxz mov push xor out pop ss adc cmp dec cmp aad cmp cmp cmp aas add add or xor add jbe (bad) xor xor xor jmp sub pop aaa xorl cmp cmp cmp xchg cmp cmp scas sub push aas add add or and add jno mov scas xor xor add push xor ss cmp mov fdivrs push aas add add or sub add xchg xor xor xor xor xor xor adc xor cmp cmp cmp add or adc add cli xor cmp cmp or sub add xlat xor lods xor xor (bad) xor mov cmp cmp scas cmp cmp add inc or sub add mov fnsave xor ss push aaa jne and xchg cmp ds xchg xchg aas scas aas add add add add in ds aas add add add add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or and add (bad) xor nop cmp cmp fwait cmp cmp add orb adc add xor aaa pushf cmp add nop or and add inc cmp cmp cmp xchg cmp mov aas add add add (bad) xor out xor xor xor jbe and xor or sarb (bad) cmp aas add add and movsb xor movsl cmp cmp mov ds add add add cmp add rorb add add sbb aaa out aaa je popf cmp loopne add add add xor cmp cmp add lock sbb add lock ss ss loopne add add or and add fnstenv inc xor cmp cmp scas cmp cmp ds add add in xor xor xor xor xor xor xor (bad) xor xchg cmp cmp add or and add mov (bad) xchg xor xor xor fdivs adc add add or sbb add jae xchg cmp cmp nop cmp inc aas js (bad) aas mov add add push xor xor xor jno adc xor xor xor lret cmp cmp adc add add sarb lret aas add add add std xor xor xor xor push cmp ds add add add add add xor xor xor (bad) xor xor and cs lods aaa movsb cmp add orb sbb add sub aaa clc aaa pop cmp cmpsb cmp cmp cmp cmp add nop or sbb add mov xor mov push aaa ret ds ds dec aas sarl add add xor out xor xor push cmp cmp cmp cmp cmp cmp or adc add movsl xor aaa mov push aas push aas popf aas add or and add jle xchg xor xor (bad) ss (bad) cmp xchg add or and add pop xor xor xor ss sarb pop aas add or and add cmp push xor cmp cmp cmp cmp cmp cmp sbb add push xor fnstenv xor sbb push add add add add adc pop xor int3 ss cmp cmp cmp cmp adc add add add (bad) xor xor xor xor inc aaa lret cmp sub cmp xlat cmp cmp ds ds add or sbb add cmp fbstp lret aaa xor jbe cs cmp add add cmp jmp adc cmc xor xor inc cmp add add add add add xor mov xor cmpsl aas add add add add sbb cmp (bad) xor xor cmp cmp pusha or and add fdivl pop xor xor cmp cmp cmp cmp jo add add pop adc cmpb aas jnp lcall add add xor xor cmp add nop or sbb add popf xor cmp cmp cmp mov add insb aaa stc aaa xchg cmp cmp add add inc xor hlt xor ss fnstcw sbb (bad) cmp cmp aas xlat aas add add or sbb add aas xor adc aaa jne popf aaa push cmp add add or xor add inc xor xor cmp mov test xor xor leave xor dec aaa jg mov add add or sbb add add xor xor cmc cmp cmp add lock and add lret xor xor xor sbb fnstenv sub cmpl cmp aas add or adc add push xor add adc sbb add or adc xor xor (bad) add or sbb add sbb lock cmp sub sarb aas mov add or and add sbb (bad) xor cs add jmp cmp mov add cmp inc or adc add sbb cmp sub add add add add xor aas xor xor cmp cmp pusha or sbb add fs xor xor push xor xor xor xor xor xor xor add jecxz dec xor xor xchg xor xor aaa cmp cmp cmp cmp lock add add add push xor add cmp cmp cmp sbb add lret xor xor cmpl add add add out fs add add add test mov cmp cmp cmp cmp cmp cmp add or sbb add mov xor xor cmp mov sarb cmp cmp rorb sub add in xor xor xor xor cmp cmp aas xor jl ljmp add add adc daa ss mov fdivl or int3 cmp cmp add add or and add pop xor das xor and cmp cmpsb cmp or add fidiv or daa cmp cmp cmp add or add cmp cmp jecxz insl cmp or and add xor xor xchg xor (bad) cmp cmp cmp xor add jbe xorb xor adc cmp add add add icebp xor xor add ja add add add add add xor cwtl aaa adc mov lret cmp repz pusha or add xor cmp and add (bad) xor xor xor or das cmp ds add orb fbstp and xor mov aas add add ljmp xor xor xor xor ss inc aaa inc cmp stos cmp cmp cmp cmp cmp add mov add xorl sub xorb cmp xchg cmp mov add add add xor xchg xor xchg xor ds cmp cmp or add cmp add or add xor nop xor push ss cmp lea add add or add xor xor xor xor das cmp add lock add lea (bad) xor xor out pop xor xor xor (bad) cmp add add add add xor xor xor aaa les es add push add add jns add out ds cmp cmp adc add lret xor xor cmp add add add xor cmp add inc push add add inc xor xor add add add add xor ss pop aaa xorb mov add add add add add pushf xor xor sbb add add add add xor xor lahf xor xor cmp add add add wrmsr jns scas xor xor ss adc add add fs cmp cmp cmp mov add aaa xor xor cmp add add add push xor xor xor xor mov pop xor push arpl mov add add add xor xor xor popf aaa aaa cmp cmp cmp push add add add xor xor mov ss cmp cmp cmp loopne add add test pop xor lds mov cmc ss aaa inc cmp mov aas add push add add sub xor (bad) aaa lock lock test add add add add add xor cmp cmp fistpll sbb add (bad) xor cmp cmp cmp and add add divl sub xor or xlat cmp cmp cmp xor add add add sub sbb cmp cmp cmp aas add add add add gs xor cmp cmp cmp cmp add add add cmp push cmp cmp cmp add add add add and stos xor xor xor add add add add ss mov cld imul cmp cmp fwait cmp add orb adc add lea loope cmp sarl add add lea xchg xor xor push cmp cmp push cmp cmp xor add xchg xor xor adc xor pushf aaa into aaa cmp stos cmp cmp dec aas jmp add add inc xor fidivl in xor scas cmp ds ds lldt add add cmp cmp add lldt add add ss pop aas add add ltr add test xchg xor xor xor xor xor ss bound adc add (bad) xor add sbb xor sub jl pusha cmp cmp cmp cmp mov cmp cmp or das ds add add adc adc add dec xor xor xor cmp adc add add add xchg xor xor xor ss aaa mov xchg and add add add xor jg idivl leave cmp cmp cmp cmp xor add add cmp cmp cmp cmp cmp cmp cmp aas add add add add add cmp cmp mov mov push adc sbb add jno fwait xor xor xor or cmp add add add add add cli xor jo add add mov adcb and add mov xor xor pop cmp cmp nop adc and add arpl xor xor outsb cmp cmp cmp cmp cmp add mov add sbb pop xor cmp cmp lahf ds aas add add arpl (bad) cmp cmp cmp cmp sbb add pop cmp cmp cmp or rclb add add mov cmp cmp adc sbb add call ss cmp aas add add adc and add xor lahf xor xor ss ss ss cmp cmp add add add xchg xor xor mov xor adc adc add ret xor add adc sub add sub xor jns fdivs sbb mov cmp ljmp cmp adc and add jge das ss fdivs in pusha aaa jp sarl repz cmp cmp das aas add add add adc push xor add movsb xor xor mov sbb fidivr hlt cmp add push adc adc add add xorl jmp lea jne call movw call call mov ljmp sub dec xor or int3 scas lock dec pop jns lret add jl je sti repnz pop inc (bad) std ja movl scas push or jnp jecxz lret ret fdivr fildll shll aas call and sub pop push in sub mov sbb fidivrl pop cld enter popf outsl add or repz push push lds cmp (bad) push cwtl pushf mov sbb inc push sub outsl scas nop sbb scas out imul jae cmpsb stc sbb push (bad) jno insl adc sbb xchg adc pop mov mov add jmp mov pop int mov jp aas cmp sbb pop bound pop xchg push mov jae (bad) and cld pop add icebp xor adc jge data16 outsb cltd xchg mov or decb dec dec push jecxz (bad) sarb mov (bad) fbld test ret inc mov mov cmp inc push push mov scas add repz ds nop les pop pop and sub jle jl cs and rorb dec jno lcall mov sti inc stos je jno imul fs xchg mov imul sub sbb clc pop and das adc add hlt xor xchg les imul push jo pop cmc aad movsb pushf imul jg sarl lret cmp rolb add cmp popf test fstl adc ret push sub pop (bad) fsubr out das ds out lret dec mov pop (bad) (bad) jbe mov je (bad) adc in ljmp push ljmp repnz pop xor adc jae push fwait hlt je mov loope int xor add (bad) or or lret cltd (bad) sub mov loop xor pop add push cmp cmpl mov nop xchg mov lods push fiadd push xchg sub mov imulb repz mov push xchg data16 rolb sbb or popl jno imul xchg mov rolb cmp inc inc sahf fisttp xor inc sbb adc test lods inc jg pop cltd insb rorb mov adc adc and pop std popa fs push pop cmpb int3 jno xor pop sbb push cs jp lds and and int and mov outsb fldenv in repnz push fs insb cld bound cmp sbb popf sub inc push fcoml push mov sti dec scas push ljmp js jle push addr16 sti xchg jl lock xor lea add sub sbb jl out nop mov mov pop fsubrs mov shrl roll movsb cli enter xor int mov insl (bad) jno addr16 cmp pusha add push xor jecxz and push (bad) ja (bad) mov xchg sub xor pop adcl push push call fldl xchg out fldenv bound add adc xchg outsb cwtl cmp bound mov cld sub and outsb andb fdivr (bad) pop cmp ds lret int loope loope xor jbe (bad) pop xchg mov insb xor (bad) pop add clc cld or inc lock push push push cmp test bt sub call mov adc inc movsl aas or movsb inc pushf daa mov mov imul mov dec pop cmp jnp fnstcw (bad) jle scas out dec sti add rep cwtl mov xchg mov pop (bad) mov fsubl xchg push push stos xchg mov pop inc call jmp mov lock adc addr16 lock mov mul pop xor shrl (bad) leave push stos sbb push dec push push pop imul aas push test pop jo rolb outsl movsb push repz mov (bad) sub lahf add dec ljmp fildl inc fwait jno bound push inc not sets mov stos setbe not jmp lea call sbb and add (bad) mov test pop cmpb xlat repz daa push or outsl pcmpgtb sub pushf add fmuls adcl ret xor mov xor push push lods mov mov jp xchg test adc jae cld xor outsl dec mov xchg outsb pop jp out das addr16 les sub out das mov mov xor nop xor mov xchg adc lock sub hlt adc es cmpsl sti stos push push jns jl pop xchg test xor jb or ret sar ss jnp shrb push jmp aaa pop sbb fs xchg add mov mov out jb xor dec sub and dec stos xor or (bad) push mov add lret fs ret sti adc mov push inc push popf push mov pop lds xor xor test iret push push mov into aaa dec cltd xchg add xor mov dec aam ret push idivl cmpb dec xlat fcomp add adc pop add imulb cmp mov mov push jnp fs dec pop movsl cmp or jmp xlat addr16 js jno arpl pop adc push cmp inc cmp push or test push std cmpl xchg lret cmp mov sub shrl push pop add adc jmp mov mov mov sti sub loop push lcall mov ljmp ja pop mov sub inc lock sub mov and incb ja fdivrs cmpl push lea push jp dec xor ret jg ret adc cmp mov aas hlt push or enter insb inc sarb ret pushf ja popa std movsb cli movsb (bad) loopne jno arpl movsb cmp in dec mov inc cmp leave cmp mov xchg jae jmp mov hlt xchg push pusha jno dec pop das (bad) imul jg mov pop ja cld (bad) jno adc stos pop loopne pop lea xchg mov in and pusha stos je pop in xchg nop mov fistp jae int3 or pop aad leave jne mov mov inc push dec mov xlat sbb test lods mov js cmpl xor loope dec imul push mov jbe jno bound pop inc in test movsb cli or xchg scas cmp mov sbb or in and and inc push test outsb xor jb stc mov sti pop rclb lcall xor outsl in mov cwtl xchg notb jl xor out mov (bad) in aaa pop xchg jmp aad test and data16 jns lock out push popa sbb enter xor fs sub jg add inc lods pop lret lods repnz lahf pop test in or dec adc out pop cmp add mov sahf add inc and pop push mov and lea jmp push mov sub setbe mov xor call sarb jno int pop xor mov pop jg pop imul pop push fwait test cwtl loop in inc sbb in out xor mov mov test push sub inc push lret hlt mov or inc faddl sarb mov out outsl scas dec (bad) jl mov push jp fsubrs movsb orl mov test dec push sub mov nop in push or mov (bad) adc xor xor cmp dec jl cmpl inc mov ja pushf aad stc cmpsb out pop pusha sub fs jb pusha clc cmp push lea ja stc jmp (bad) ja xchg sub je pusha mov int std out cs mov fadd sub xor (bad) (bad) hlt or ss jg popa mov lret pop out adc rep addb shrb jp pop (bad) mov lods sahf rcl mov addr16 or xchg out gs pop xlat addr16 test pop add cmc sub flds mov jmp add add in imulb mov push testb sub test mov in and and js push xchg pop and iret (bad) adc mov movups inc jno pop sarl pushf movzbw push mov movb mov pushl lea jmp add cmp mov jge or cltd inc leave jbe outsb push push ret jns rorl xor sub sbb pop popf and scas or cmp cmpsw or xor cmp pop push add lods or mov or push fcomps dec pusha bound xchg jmp jmp je xchg mov into cmpsb sbb push xchg cwtl sbb (bad) shrb fcomps repnz sahf (bad) scas adc fnstenv ret inc cwtl rcrl (bad) xor or pop in ret sub pop pop call dec cmc push stos sbb pop imul popa pop jno push loope loop mov iret or mov mov adc in cltd mov leave ficompl mov inc add xchg mov or xlat mov mov cmc or fadd movsl cli pop and mov inc mov mov pop jns jle xchg lcall call push push ret add jmp adc mov mov jl loope or out je jmp fldl jbe lahf pop cmp push daa das adc in add inc pop jg jno pop imul jbe bound in xor mov arpl aaa daa xchg stos ror pop (bad) mov clc movl test mov movsb push neg xchg in data16 or sar or icebp add leave or jmp push addr16 mov test dec add enter (bad) pop popa mov inc outsb (bad) es mov xchg aad pop imul es cltd aad sbb push xchg jecxz sbb and add out mov pop bound jb push push in inc pop add aaa sub and jg bound cmp adc test pop fsubrs push out test insl fbld adc cmova mov pushf ret pop repnz mov lcall pop dec add inc pop data16 mov jne into mov and out rolb mov pop arpl (bad) leave mov imul jae sbb int3 repnz inc pop and ss imul cmpsb jns jb jno pop ss lea and dec pop mov jecxz mov push dec insl mov popf aam mov add xrelease mov pop cltd sub das dec cmpsb mov ss mov imul sahf scas aas add in add pop pusha (bad) xor mul cmp popf jecxz pop js in out adc dec mov mov xchg mov lret scas push loopnew mov subb cmc lds daa mov xchg shl xor jne imul faddl inc out (bad) push sbb lret push in cs jg inc test inc popf clc (bad) fsubs inc stc leave (bad) int3 repz xlat call jp (bad) call pusha adc or mov imul aad mov dec mov (bad) lock jo movsb cmp fs cs inc fwait lods add out addr16 mov lock add (bad) das inc frstor xor jg iret out dec push fs (bad) dec jb aam lret cmpsl pushf out cmc xchg pop stc dec add es sarl mov xor mov mov outsl shlb pop xchg movsb jnp adc mov push mov sub ja in call xchg jmp (bad) das loop (bad) pop rorb mov mov nop mov sbb pop add xor jl rcl das repz pop jmp mov cmp and aam mov inc aaa sub sub or mov insb in adc xchg or arpl das aaa or scas sbb lcall mov push mov insl cmp (bad) adc je push jmp and jae mov inc and outsl add (bad) mov add and outsl mov adc lahf ja clc xor dec xchg cmp daa pop incl outsb cs insl push rcrb pushl or dec call mov addr16 rcr jno pop fnsave push add mov xchg in std repz jnp pop pop and dec mov and add inc pop insl dec scas xchg mov adc mov mov insb push xchg lds lods xor dec sarl lret mov mov lahf and ja out add jle xor pop mov inc js aad sub pop add arpl nop jb popf jl sbb xchg push dec shl fldenv insb mov rcrb or pusha inc mov lock add stc jnp gs pop xchg pop bound out (bad) in xor (bad) ja (bad) push int3 mov xlat enter or ret pop push cmp push popa je dec popa je push inc add fs call pushf lea jg adc jmp ficoml fs out push je and aas add mov lock psadbw rep mov nop scas add mov xor pop add out nop in sub cmp inc push cmpsl lret cmp or negb xlat and aas xchg mov loope out hlt shll fstl out mov mov mov (bad) shll cs jno pop aad inc mov cwtl ja (bad) xor inc jle jmp add sub jp sbb das xorl cmpsl cmp mov popf adc lds cmp loope loop and jnp stos pop ret pop (bad) fstpt adc add dec xchg adc mov ficom push cmp adc bound cmp mov xchg and jb dec (bad) loope add (bad) cmp inc mov ljmp test test insl repnz das inc pop cmp push out fcompl cwtl pusha jg jb adc mov pushf pushf pushl ret push (bad) outsl outsl iret and hlt iret jns hlt push fiaddl xor cmp pop adc je sbbb cmpsb pop mov pop or push (bad) js add xlat daa push (bad) lds lahf xlat in ret mov cwtl jbe jle and imulb (bad) (bad) or sbb movsl cmp (bad) cld pop sub pop jg (bad) add outsb xchg cltd insb sahf pusha jno mov push adc cli outsb cmpsl test pusha jno rcll test cmp or or or xor and outsb jo inc jge jae and xor add push sbb je add std pop (bad) imulb push mov ret fiaddl sti jbe (bad) pop add lcall std inc and xchg sub pop mov ffree dec cli outsb icebp rorb inc jg iret sbb add xor aam and and mov fistpl or jmp ret adcb pushf or mov test push stc insl pop adc jno les out test std adc and jp cmp aad mov out push mov lods mov fcomps mov insb dec scas push inc mov dec mov xchg sub xchg xor pop fisubl mov sarl pop push negb adc dec lahf lahf mov jns dec stc fiadd imul leave cmp pop fisubl gs inc scas jno mov jmp pop xlat lock stos sbb js inc stc or push aas call outsb push sahf movsl inc mov push push mov inc outsl lret out cmpsl sbb and mov adc test enter repnz mov xchg lret cli pop lds push or cmp xchg out inc push addr16 dec or and jae cmp jmp fstpl mov lcall pop pop ljmp ja pop dec mov xor push sub jecxz inc pop scas iret xabort add push (bad) (bad) mov jno push stos in cmc sbb ds pop sub and xchg mov dec cltd lds mov mov sbb and pop iret mov (bad) dec mov mov push cli add xor cmp or (bad) repz das outsl sbbb pop jno movsl pop push jp adcb sbb lock pushf test cmp cltd push pop add stos push ljmp enter outsl aaa (bad) shl fmull leave adc sti lock aas loopne in jno movsb fbld push dec fiaddl lds fldt mov xchg cmp stos repz mov in sbb jno push ljmp aad or sbb jae and loope outsb rorl xor add popa test mov stc adc (bad) int loopne cmp sarb popa xchg fsts pop ret (bad) and lods xor clc cmpsb push push bound inc jle mov movsl xchg inc adc sbb xorl js enter push lods icebp add out sub jp sbb sar add sbb sbb (bad) daa cwtl test popa (bad) aas inc mov jge cwtl inc clc loop push sub mov out mov push sub lods shrl sbb dec frstor lahf cmp xor inc xor pushl bt neg call pop push sbb and ret adc fnstenv or loope cmc test push rcll lods or push add and imul lods sbb pop ljmp jbe xor push inc cld pop add jge movsl popf xchg push das test movsw stos xor repz jo inc cmp push je cs xchg je clc push mov inc inc lcall loopne cwtl jge mov leave dec (bad) adc jge ret inc sbbb adc cmc sub outsb push popa jno push mov adc (bad) aas sbb xchg test ret call out mov nop push test jmp jle aam mov and movsb int3 jae mov jb stc ja dec fildl pop aam loop out je stos mov call or inc icebp out push cltd aad mov inc fstps in cmp pop sbb xchg dec pushf mov out pushf hlt mov push sub add mov scas lahf push fnstcw adc test sub lds ret out nop mov inc cld jg mov adc xor stos inc sti dec int jecxz and mov fwait add arpl lahf xchg test popf sbb repnz dec enter pop push xchg stc xchg in pusha bswap lahf lea mov movl jmp lea je pushf mov pushl lea jmp cld jne je insb repz pop pusha outsl fstpl xor lcall adc pop subb clc push or xchg outsl jns dec loop icebp out inc mov popa mov cmc adc push inc pop lods lahf loopne shrb sahf add pop (bad) mov lock and mov daa mov fstl add xor ja inc popa pop mov rcll ja push pop faddl xor fs insl or inc pop inc (bad) cmp push mov mov les dec outsl je sti lea pop lea pop push push lea ja push push lea jb bt test cmpb jmp call call stc or mov cli or fidivl mov ljmp aad dec add test dec adc mov sbb inc sarl or lods mov adc dec xchg ret leave aad and or cs pushf sub mov sahf jb scas out icebp push addr16 jg cmp and std xchg push pop inc les jmp (bad) xor cld aas call jns xor fadd fcomps cli rorb ss jne pop mov xchg xchg stos mov subl js js pop push test (bad) std (bad) mov sbb lods test jae (bad) pop fist inc sbb adc push test fild mov shlb xor imul mov outsl add xor into lods shlb mov stos mov loopne or pop sbb test dec pop push jno cmpsl or ret xor insl add xor dec out addr16 (bad) lret outsl das inc inc popf dec jbe mov hlt inc rcrb xor push or jne inc pusha inc fdivrl das (bad) lret rcll enter (bad) cmpsl xlat sub dec jmp repnz sahf add sbb xchg and adc inc pop pusha xchg mov cli movsb cmp fdivrl and std outsl sbb mov cmp lock or int xchg leave (bad) or leave lods xchg xchg mov adc shrl sbb inc cld dec movsl js pusha fdivr xchg sub sub mov pop jae or das and add into and xor sub (bad) lock test sub mov lods test dec (bad) popa inc pop pop pop pop test lods ror shrb adc jno dec cmp cltd inc fwait mov gs xor xor sar dec bound in mov ret dec repz ljmp fldt mov shl sti or jb arpl mov call aaa call xorl or enter inc stc test sar xor add mov outsl out add dec jae inc outsb jne gs je dec outsl outsl outsb push gs imul push add call stc pushf sub cmc clc cmp movb pushf pusha lea jo jae pusha lea jmp repz adc mov stos jmp dec rcrl mov shrl pop cmpsl aaa pop sub in roll mov call addr16 outsl pop jl (bad) aaa dec addr16 pop mov in mov jno shll mov dec mov mov xor cmc popa test dec adc pop adcl sub lods adc scas shl xor inc (bad) mov pop xchg cmp into shrl add fcmovnbe cmpb xchg mov test xchg sub mov xchg dec ja mov in jno dec pop jo add in lcall or pushf lcall loopne fsubr adc adc push incl sub xor outsb cmpsl ja test sbb sub and ljmp mov and push push icebp (bad) fcmove aaa into xor xchg cmpsl inc add cmc popa xor sub (bad) movsl mov or lds pop loopne scas repz pop push pop movsl mov stos call arpl popa lret push insl xor sbb add fstpt jg dec xor and dec repnz inc rclb and test xlat jnp call pop out das mov sbb iret pop jecxz popa decb jmp jg xchg stos test jp lea fsubrl mov mov mov lds add roll fidivrl sbb std inc push mov sbb movsb mov mov inc sbb mov sbb adc leave aad sub ja pop popf and push xchg das stos cmc jl,pn dec std dec in and xchg mov shrb insb repnz sti mov mov pusha jle outsl movsb fwait addr16 adc ret addl rorl repz mov fs cmp xlat enter xchg fsubl cmp dec fdivl out push sbb jg inc jno lahf incl aas movsb sbb pop xchg mov mov inc jmp (bad) or icebp cs xchg sub nop out pop outsb adc and leave mov xchg mov shrl out add je cwtl mov mov add fldt push xchg mov or aad out out out sbb aad xlat cmpsb lods xchg adc mov fwait daa js xchg jmp mov add dec xchg xlat jno dec cmp adc fisub jg jecxz repnz and rorl sbb jle lcall sbb jge out sarl mov and fwait jnp adc jo cmp in pop adc aad sti outsb bound out add add xchg inc fistpl daa push psubb and insl dec fsubr adc sbb xor xchg addr16 arpl adc mov ror (bad) aam mov mov pop test repnz andl in imul in leave pop pop shrl add outsb cmp jp mov (bad) mov xlat cmp pop inc push jno dec test sti or sbb mov lock sub decb inc mov dec jne mov roll divl fs cmpb fcomp xorl and lods ja imul push jbe mov mov or and xor jnp test js mov push dec adc inc adc loopne xchg (bad) movsb ret sub inc xchg sub in popf scas add or (bad) pop or bound (bad) adc pusha mov cli les jb and jbe push push cli in or pop imul repz mov mov mov and (bad) stc xchg sub jne xchg sbb and cmp push data16 lcall and fwait push sub in sarl insl xchg add (bad) xlat sbb sub jmp push xlat addr16 jae repz jecxz xchg leave mov xor (bad) out imul cmp xor shrb jno lea mov negb sbb dec lds push xchg in pop dec sbb mov push imul (bad) scas (bad) jae fcmovnb (bad) mov cwtl xor pop test ffree std xor rcr sub sub movsl sbb xchg mov inc movsb jnp push loope mov jbe outsb lock pop aaa pop and add xchg mov aaa hlt dec pop xchg lret fsubrl push jle imul ss movsl pusha fistpll mov movsl imul cli mov jne jg mov lret sti xor idivb icebp ds inc cmp clc cmp popf sbb scas pop pop add jecxz sub mov and mov test sbb or aam gs sbb sub push mov and das sub lahf call add sub mov ss jmp (bad) xchg test adc popf push add jge pop xchg scas xchg jbe jne inc popa (bad) fmuls xor xlat cmp jle dec bound inc ds insb xor xchg (bad) ja fs mov cltd push lods dec pop inc js or bound xor adc ljmp imul or mov mov rorl sub stc daa imul pusha flds test out out das inc mov andl inc cmp lcall daa xchg dec mov fbld push sbb or out lea mov (bad) leave fdivrp push mov stos (bad) dec push pop mov sub jno sti mov pop in pop xchg or test mov add ds popf shrl in jne cmp or std mov popa mov push pop sbb add jnp adc cmpsl imul xchg arpl lret xlat repz xor inc mov sub pop stos xor push inc jns jb sub pop mov jno cmp mov repz pop xchg mov into sbb inc cwtl fnstenv inc and out adc sub xchg pop push dec jmp and push sub adc lds sub pop xlat repnz jge mov es and (bad) es lds jb jbe jp add or insl inc add pusha lea add mov jb sbb dec testb andl pop loop sub xchg mov fsubr lock call dec add rol roll pusha mov aaa cmc mov mov add push jno sbb adc daa cmp mov pop outsb es cmp mov inc cmp push iret mov lret (bad) and dec inc pusha fistpll test mov push loope imulb push cltd movsl inc popf es sbb (bad) xor dec xor jno dec aas (bad) xlat stos xor movsl ficompl jge mov leave inc shrb jne insl jg mov xor ret (bad) xor xchg add xchg sbb testl ss dec xor add pop cmp call mov out and testb mov adc clc mov sbb jno cmp das lods in loopne dec add mov adc push in stos mov call cmp sub (bad) push mov xchg cwtl jae pop pop ficomp adc jbe rcrb mov stos leave fcomps or stos xchg mov sti push orb cmp and stc data16 push mov mov mov into jb dec neg inc les pop jno inc mov pusha call jmp push nop jp ljmp jmp test stc fld xlat pop and inc test movsb mov pop cmp push adc jbe add lds rorl or int3 jae or push subl cli mov push mov add adc add (bad) cmp and jl test jne xchg or movsl clc into inc cs pusha pop pusha cmpl in je fstpt pop add mov movsl ficompl fdivs cs pop mov pop pop sbb repnz (bad) xchg out insb adc lret mov imul test push dec (bad) leave jno inc xor xchg cld inc call mov pushf push mov pushl ret sub test inc jne cmp (bad) stc in mov icebp (bad) ljmp leave add cmpsb jns insl lds push xchg insl jno cmpsb mov hlt or xchg arpl xor push add cmp xor cwtl inc inc mov popa test pop gs sbb repnz lret into lock adc repnz dec jle lcall push fsubr jmp in xchg movsb lret mov and bound push add rorl test fsubr mov mov shr rorl jno inc test and cld xor fsubl in or or (bad) adc data16 into ror popa mov push push add shrl pop repz mov cmpsl call (bad) mov enter aad cmp inc xchg pop cmp inc mov pushf add sub lahf cld lock push popa arpl mov xlat sub cltd lret mov dec pop rcl mov dec xchg aam movsl push adc lcall xor xchg nop cwtl or das sub lahf fildl jb mov pop cli inc jge adc sbb xlat cs mov sbb sbb mov test jle notl popa pop sahf push out (bad) (bad) cltd stos pop in mov sbb xchg negl ficoml sub and bound sbbl cmpsb stc (bad) jo mov jp mov xchg adc iret (bad) mov into dec sti or xor xor sub jbe popa scas nop loopne dec outsb fiadd sub int push jecxz xchg (bad) push inc movq lret orl in add dec push mov inc ror repnz loope in mov in inc nop mov fld xlat push sub daa cs sub sub cmp iret push sbb movsl adc xor inc cwtl xchg (bad) adc inc sti jmp int3 rcrl fwait (bad) aad mov xor adc mov (bad) cli or (bad) roll into test std fsub daa pshufw dec iret mov pop insl adc and add jb xchg inc cmp mov fcompl sub mov es sub push in xlat aas inc lret hlt pop add sbb push cld jecxz cld ss sbb add cmp aaa jno inc fnsave mov daa mov mov pop mov adc mov mov adc mov push jns lods and icebp icebp adc add out ja inc clc pop in sub add in cmp xor cmp test inc mov fildl inc lea mov fwait cmp add or sbb lcall in jae daa insb xchg push fldenv xchg call cmp mov pop out jo push in pop xchg and xchg cmp nop ret jl lahf or pop fisubrl push sbb and cld jecxz lock (bad) jno aas push jns pushf push pushf pushf call call pushf pushf cmc cmp pushf lea je clc stc jns cmp push jmp test cwtl cmpsl call nop les outsl rcrb pmaddwd cli in loopne (bad) cmpsb cwtl mov scas shlb (bad) jae xlat or pop push je sbb out adc xchg mov imul mov in dec lret repnz mov mov inc pop lret mov mov mov jnp cmpsb mov aas pusha mov dec xchg jg mov pop aas dec inc loope lea js push mov adc call les jmp add add push loope jno pop imul dec pop jb xchg xchg push add jmp push stos jp mov pop xchg pop (bad) add es sub dec adc and dec loope inc push pop inc xchg xchg repz in push lock pop call mov push lahf js or loopne data16 cmp mov fild das iret and xchg cmp adc inc push add jmp sub nop push daa pop arpl sub sbb add mov jno ds test into stc or sbb cmp mov lcall mov push add mov call (bad) aaa test push mov sbb enter out mov xor sub adc addr16 imul cmp adc stos aam int3 rorb sar inc bound mov loope or les lods adc ret mov xor and push dec incb and xchg jns xor (bad) or xchg inc push inc push and push dec fildl xchg jle loop out cmpsl pop (bad) cmp add pop cmp push jo fs push sub es push dec jmp pop xchg outsb dec xor ja mov (bad) daa cwtl (bad) frstor pop and stos lret dec xor jge sar enter cmc or into jge add and mov arpl cmp sbb xlat adc cmp dec mov or cmpsl cmp add stc cmp insl dec in mov xchg andl mov and mov aas (bad) sbb mov xor or sbb cmp adc xchg pop mov iret cpuid arpl insb mov iret ror mov adc cmp movsb cmpsl push movl pusha movw pushl pushf lea jmp push xor rolb jge outsb mov dec sub stos jo subb lods cmovno in inc ja mov arpl push add pop cmpsl cli movsb mov loope push repz not shrl lcall sub push sahf mov gs mov dec add cmc ss xchg cld ret popf dec sub cmp pushf fldl2e out dec mov lahf inc push fst sbb fld (bad) jp clc jle aas and adc add xor mov jbe popa push push arpl inc repz jle pop xor jno cmp (bad) flds adc repz dec mov pop mov gs mov in rcrb fucom pushf and adc fistpll mov lcall push ds aaa dec jo push leave in stos push cwtl pop ds inc pop xchg fcmovnb xor inc stc ret insb aam dec std cmp adc inc cmpl fninit (bad) push repnz push pop xchg int pop in push push dec jb and add cmp mov xor mov (bad) xchg and arpl iret adc inc or je ja int3 cmp inc dec outsl enter popa jge pop outsl jno cmp bt clc cmp pushf jmp pushf not pop pop pusha pop jmp movzbw push sub mov clc movzbw movsbw push bts btr bsr bt push push mov or push xadd xor sbb push shl rcr test pushf mov and bsf movl clc mov not mov pushl pusha pushf or pushf movb pushf pushf lea je pusha pusha stc or jmp shrl iret inc sbb cmp (bad) jne xchg jno,pn test insl lcall xchg cwtl xchg mov stos mov dec mov mov iret sbbb inc push imul mov repz pop lock cli xchg jb sbb enter cs mov roll mov es xchg lods repnz sbb inc es rorl imul test jl cwtl jns mov (bad) mov sbb xchg mov jo cwtl bound inc cld push (bad) xor aam (bad) cld ljmp out dec pop (bad) pusha push jns fnstenv cmp push sbbl test add pop sar dec cwtl insl jmp lea lods push in imul mov popa fstpl xchg rep shll sbb (bad) in ds outsb cwtl ret inc add mov adc pop lcall jl mov mov jno mov sub out xchg cmp or cmp mov sub int3 pop enter sbb mov mov adc out xchg dec lea push pop xchg xchg jge pop inc xchg inc cmp outsl das push push cmp jb dec cmp repz sub test push shll mov push and sahf adc sbb add in inc mov lods or gs outsb jg jg enter sbb xchg stc pop mov scas aaa or jmp xchg lret mov mov and cmpsb shrb jp xchg fmuls cmp aaa movsl fimull mov fs stos cwtd test and pop and dec jbe stos mov xchg imul (bad) sbb adc sub cwtl fstps inc test les stos adc adc das outsl adc sbbb jno cmp add xor int3 fstl and scas out scas test jmp pop inc ret in pushf ret fwait dec xchg mov push xchg sbb (bad) aas scas outsb nop in mov add cmp pusha bound push mov or jge inc subl imul mov mov int or das (bad) pop enter vmread sarl bound or sarb test lds das jl jmp fdivs lods rol inc sbbl imul push jne push jno jle push scas nop test iret int insb mov loopne or mov inc cld pushl jmp fsubrs and pusha mov mov push sub ss jecxz mov enter mov mov inc fnstcw jns pop arpl mov add icebp popf hlt adc cld and mov repz (bad) dec insb mov adc inc stos in mov jo movsb adc iret push inc cs sbb push call and xor roll out mov or mov popf xor sbbl or repnz insl mov or pop ss add cltd ljmp lcall cs popa int jl stos in lea pop insb mov imul lret sbbl ds test push das add ret xchg and inc jns loope in (bad) sbb push pop out clc xchg xor sub daa ret adc mov pop mov dec inc enter jl mov pop sbbb cmp icebp imul mov inc push adc or mov ljmp push popf jbe dec adc add fisttp cmp sub jno fnstenv and mov pushl lea je add sete lea bts sub lahf mov seto mov rcr cmc shr bsr and inc mov clc call inc inc push inc stc shr rcl mov xchg bsr setg cmp (bad) repz sbb shl mov cmc bt xchg ror rcl mov clc stc sub pusha rep movsbw mov mov pusha lea jmp dec call and bound cld mov add and sbb pop xchg lods mov push push push mov cltd inc jmp loop mov (bad) nop aaa imul aam addr16 mov aaa outsl test cmpl fnstsw addl movsb rcll cmp cmp lahf add cmp sub jo xchg push mov jp push mov rorb sub jmp fs dec adc test arpl neg loope jle xchg idiv xchg test dec lock mov out lea xor jno xor bound xchg bound in xor lret icebp push xlat xchg mov xchg mov add push ljmp cmpsl pop mov and cwtl das inc cmp mov push and sub xor xor xchg mov push pop rcrl fwait movsl jo cld or popf add es pop xlat pushf fistpl mov pop cmp mov or ljmp push jae sbb mov jge and and fsubs jmp roll popw addr16 jo test sub jge lea inc cmp es push push push mov aam cmp test pop bound (bad) push ljmp jl mov sub mov call cmp xor adc dec pop dec mov jge mov cmp sarl mov sub jns aaa insb cltd fimull mov inc mov dec push cwtl lcall sbb (bad) out cmp das mov push adc or ja lcall (bad) outsb rol cli jecxz xlat or insl repnz and lret adc pop dec push test cmp inc pushf lea js jae bt test test cmp pusha push pusha lea ja not pusha setp inc pushf sete call mov pushl popl cmp clc mov pusha cmp pushl lea ja pushf sub sub movsbw ror shr cmc sub add pushf xor lea bsr mov sub ror mov pusha pusha clc movw repnz call in cli cmp les xchg xchg mov aaa xor ret pop fisubr jge repz into mov hlt mov xchg xchg out and daa xchg jo (bad) mov cmpsl mov clc jmp cmpsl clc sarl dec adc (bad) inc or inc sub inc out dec pushf jecxz cmp (bad) data16 shr sbb mov add icebp xor (bad) out pop adc pop jne mov and pop dec iret mov fldt pop stos jo fdivrs and lea mov (bad) lcall mov daa mov addr16 jae outsb pop mov cmp loopne mov jo enter dec jno (bad) fsubs inc dec sarb in movsl cmp push pop mov push imul or clc (bad) fadd mov cmc imul mov rcrb pop std mov fidivrl (bad) dec sub aam stc push jns fistpll sbb test sarb in pop stc outsl lock mov xchg cs gs nop fs (bad) mov in cmpb lods icebp inc fcoms add xchg mov aas repz cld mov mov push or mov outsb in xchg les push dec push jne sub pop xor outsl push ljmp dec (bad) jb jns mov leave push mov insb jge repnz add daa cltd out push inc sub iret iret dec or add cmc lret dec push cmp inc pushf mov cltd ljmp movsl fldl in xor sub dec or xchg arpl jge jo scas data16 setnp pop mov lock xchg (bad) inc jne sub push in xchg leave xchg cltd cmpsb fsub push (bad) push xor dec or lret ret xlat test rorl repz aas xchg jno xor xchg sub pusha fsubp mov cmc jl push jb imul and xor adc add clc dec xchg or mov xor sub mov jae fiaddl sub push push adc je mov lea les sub fisttp ret sbb out decl testb jl cwtl into insb jmp scas shr das or and jl mov dec lret cwtl push sub pop icebp xchg xchg adc add es cmpsl scas je shl enter js out adc cmpl xor add out jo or mov inc jl sbbl adc jecxz (bad) hlt adc es call das push cmp daa sub repnz sbb xor jnp outsl mov jmp lods stos mov loopne fisubl (bad) xor outsb add inc add add sub push cmp xchg in int test dec loopne addr16 adc cmpsl push push mov ss test pop aaa sbb sub add jmp lods inc xchg (bad) shl rcl and push repnz into xor imul mov mov lods test jb push scas lock into shlb movsb fisubl add pop cs or into lret jecxz add stc stc stc mov push add jmp xor push jb sub jbe jne std loope int stc leave cmc les jl cmp repnz imul xchg imul mov cmp mov push push pop (bad) ljmp out dec add mov mov sub cmp sti pop movsb outsb sub (bad) into and test rcrb clts lods push mov inc arpl cmp adc mov fadd lock hlt stos pop cmpb dec mov imull push pusha pop (bad) pushf mov fimul rcll pop sub sarb push push push inc cli or out hlt push sti and rclb (bad) or fstl out rolb xor sti and scas cs fsubr push lret int rcrl xor mov push push es mov enter xchg dec mov jp fnop push add cld inc test loope les mov sbb jle jnp mov jecxz (bad) repnz int push xchg sbbl mov xchg push not lahf lahf mov movsbw lea call ja inc pushf inc lea pushf inc lea rcr rcl xchg xor mov bt (bad) repz and add cmpl fbld jmp bt mov stc bsf mov bts mov push clc test pushf sub pusha cmc cmp stc repnz push lea jne shr movzbl lea bsf mov call xchg add mov push sub push cmp out pop test daa cwtl push mov movsl push (bad) mov mov iret jmp add imul lcall or out mov mov ficomp push jo fwait push insb push dec in scas or jo andl iret pop test jge popw addr16 pop popf jno sub das icebp lea jne mov and dec mov cmc test jmp add arpl inc jb popa je inc popa jo jne gs imul pushl imul test add pushf pushf movb mov lea jmp iret adc loope scas nop mov cld dec clc inc cmovg cmpsl hlt mov dec push mov add adc dec pop test lcall jo dec stc push movsl sbb sub xchg dec adc std jbe sub aam ss jbe dec sahf sar (bad) jns mov insl fstps pop cmp mov add inc lret adc pop outsl cmpxchg jp pushf pop lahf fadds stos xchg sbb daa call push jbe mov pop aaa push movq js (bad) aad pop sub push test pop cmp shrb ss fist repz out jmp mov gs mov cmp addl fs pop imul sarb add xor pushf out pop inc cwtl fsts lret xor popa jae jecxz sti in sahf mov jmp movsb dec clc je shlb pop push push push (bad) into and xchg cmp dec jbe cmp lods cwtl rcr andl push sbb les clc out jno sub mov icebp inc std push mov sub js insl rorb jb dec jl gs mov push push cs sub xchg xchg loop pop or mov (bad) push mov rclb call or push xchg pop add std bound lret or fild enter fidiv stc das or mov ljmp icebp notb xchg ja ret lret inc jle rcr inc push fsubl sbb ljmp mov test xor and movsb lcall ljmp sub pop adc and fs je cmp call xchg cmc push mov and dec fsubl xchg cmp insb mov push insb adc into test sti add mov dec xchg outsl push imul roll add add jb out sbb testb push mov sbb jnp mov dec xchg or mov xchg imul and sub (bad) ja adc adc xor mov aaa mov std lods shlb outsb push xchg cmpsb gs fisubrl mov cmpsl xchg mov and (bad) loope sub cmp push or lods into adc sbb clc mov cli gs lea cltd out sti xchg jmp push rcl lcall (bad) mov sub xor mov imulb fwait push imul hlt or xchg ljmp pop xlat or dec and insl jb insb adc mov jne or cmp out ret inc fwait add addr16 pop sub cmp cmp jo int3 pop test mov mov xchg push out pop mov mov in std push lea pop inc xor imul jns sub sub lahf add das dec test jle out push lds xor lods (bad) test les fwait loop fwait (bad) aad inc movsl sbb inc js pminsw fldt mov cmpsl clc or lds repnz pop pop push or dec xchg push xchg outsl xor jno cmp cli jno sub mov xchg call mov rcr xor movsbw mov cmc bt pushf push sub movb repnz push lea jne setne bt rcr mov adc rcl sub bts clc and movzbw mov pusha stc test bt sub test call aad jmp pop pushf inc push mov lea or dec jo xchg push enter mov push pop lods cmpsl cwtl push jns cs xchg enter das cmp test adc ror cmc or shll mov lds (bad) pop inc pop mov fwait aad stos (bad) fsts sub add aaa mov test sti test and lods mov je jp mov mov inc lret jns xlat (bad) scas nop mov imul mov fprem1 sub insl dec xchg mov jne outsb mov cs jno es mov sbb xor out aam xlat xchg or xor inc mov cmp push (bad) sbb mov cwtl scas or pop inc lcall dec mov ljmpw xchg je divb imul and loopne inc push movsb (bad) lods push lret pop and or bound dec repnz (bad) aaa js std mov lods into fwait pop add mov lods sbb (bad) cmp mov int aam xchg jmp and std (bad) xor cmp push mov jno and adc jmp push and mov ficompl mov (bad) jg add jl and lods push arpl pusha lret inc (bad) test adc fldcw and cwtl mov mov adc push (bad) mov out jmp pop add dec fs adc jmp (bad) repz push adc jg jecxz icebp cli pop lods aad leave jne lret mov pop out cmp jns jmp loopne in xchg sub pop mov xchg jae mov jno add fs ja cmc push jmp jl mov jb movsb lahf lds in xabort cmp sbb inc repnz pop pusha imulb js fsubrs push lea mov xor sbb add jne sti sbb xchg movsb xchg or mov mov or jle (bad) les or adc dec movlpd fistp dec add xor aad push inc or jl fildll fcompl dec aad cmp mov cmpsb mov pop lret dec sbb aas fcomi inc arpl rolb xor inc push sub dec rep mov mov mov sub mov fs rorl cmp push mov pop imul mov xor das pusha pushf lods mov not test mov jmp call pusha cmp inc int cmpsl test movsb fwait dec ja pop shrl dec nop (bad) jg testl jle mov fwait sub fsubs jnp in fadd cwtl push lock mov push jp lods push iret pop inc push sub out jle and lods data16 xor mov jecxz rclb and test dec pop pop cmpl inc push (bad) int jp push pop int3 push out mov xchg cmpsb test lds (bad) cld xabort xor sbb icebp dec xor cmp cmp and pop and loopne fadd mov ljmp xchg mov mov push insb adc or pop mov repnz cwtl mov mov cmp mull sub nop or jo sub and stc jae pop cmpsl or jae ljmp int3 shrb jne fs rep out rorl outsl sarb add jbe mov je nop lret dec out pop jecxz dec push fist cmp cwtl mov scas add iret rclb xor push inc pop pop loop jecxz lods jb aam jno and nop and pusha and (bad) cld push call add push xor jne jno gs mov xchg or test dec les and mov and mov xchg push outsw lds (bad) aad jne sbb addr16 or sub jl xor xchg sahf mov mov mov enter push repnz jnp mov and pop mov jb sbb cmpsb push out push jne inc pop insl mov aaa mov dec push test in xor and or lock out nop dec xchg jo jg cmc adc std jmp aam fstps and fs jb push pusha test movb cmpb pushf push lea jne xor lea mov cmc jmp xor jmp shr cmc clc bt mov cmp jmp movb fisub ljmp and sarl jecxz iret sbb pop mull sub popa sub xchg int orl xchg mov push mov and push dec xlat jmp repnz adc adc mov or decl mov jne pop xchg in cltd ss cmp fs mov and fstpt pop xchg insl cwtl flds pushf repnz (bad) cmp push jge popf add repnz jle xlat mov xor loope sub stos hlt cli and imul inc jle (bad) xlat jno and jmp and cmp xchg cmp and adc lea leave and ret icebp aad inc fidivrl and out inc lret roll ret mov mov loop jns mov mov enter dec pop (bad) sbb sbbl stos jae test sub in add test push es cmp (bad) pop cmpsl ja iret adc test pushf mov xor negb bound sarl cmpsb out cmp mov mov pop xor jbe mov dec repnz ror cmp push faddl push testl (bad) ret jno pop push or pushf andl addr16 cmpsl mov rcll inc fadds jge in loope or aam pop (bad) inc jle mov out lret push mov (bad) pop add push je mov cmp aaa xchg lods or and jmp pop push push fs or jne push add cmp aaa addr16 js (bad) lods pushf imul sbb xchg push in cmp lret jae xor pop test pop adc xchg mov xor ds mov scas pushf ret cs xor aaa (bad) pop popf jno pop ja mov stc out push push add mov push add mov ss cmp pop cmpsb (bad) rcl push nop out add outsl adc leave negb es push loopne jnp sub ret push pop lock dec hlt xor imul sarl call mov mov test das or adc (bad) sahf insl sub dec pop popf popa adc arpl inc pop dec mov lds in xchg int (bad) aaa or jb or ret push push sub xchg js sbb in popf ret mov or mov or mov scas cmp sbb mov cmp and mov ss dec mov shlb xorb icebp (bad) add popf popa xchg jns push xor hlt (bad) int3 nop enter insl jle sarb cmp inc push cwtl out bound in mov fwait xor (bad) fdivrp push pop add add pop sub gs cmpb insb xchg or nop jb or add int mov and outsb scas fs cmp mov jg shrl loope out int mov repz adc fs sbb mov xchg add dec sbb pop push inc popa ljmp xor xchg fidivrl (bad) (bad) sub aas mov add adc rclb add aaa movl pop cltd mov sbb ss enter ret cmp mov (bad) loope dec divb pop add in mov cmp push out mov sbb std and adc mov js mov flds pop add inc fldl pop inc aas cmp fidivr ljmp in out add shrl push mov mov and ret fsts jno jns test or xchg or aaa dec jno sbb fisubrl shld mov clc stc shl call or or sub sub fs cmp je (bad) mov ret loopne xchg aaa cmp leave aaa pop xchg cltd mov cld xor add and sub xlat xchg shrb xor loope add jmp add xor mov lahf fxch mov loopne stc dec sbb xchg add pop push lret out sarb mov in push or (bad) xor ja mov sbb sbb mov push lea ja jmp (bad) in jbe mov adc lret cmp pop inc sbbl das lret cld and lods jno and pop aad icebp incb push sti cmp mov adc test fwait mov ds movsl cltd stos push cwtl in imul push inc stos movsl cltd stos loop sub jl loope ljmp lret popa jb imull rcrl (bad) xor pop pop xchg add aam movsb lcall cli movsl mov sti ret xchg jne or fisub mov dec xchg cmpsl jno sbb (bad) and xchg (bad) lock xchg dec pop jne cmp lea lahf mov icebp push mov insb loope or ds cmpsl pop pusha ljmp dec fwait inc mov jmp shr aam fisubl mov dec mov push mov imul xchg sar pop or gs (bad) xlat sbb popf mov xor cmp add in outsb and test push sbb ds xor mov stos adc and js in add imul clc adc lahf aas xchg jb cmpsl dec or jo dec xchg mov imul jge sbbl lret sub sbb ret mov pushl movw inc jmp pushf movzwl push movzbw movsbw pushf lea call cmp pop fist dec mov or mov dec sbb jbe sub and pushf cmpsl cli add lret xor inc mov nop jp fwait push cli add push out sbb add hlt or mov dec (bad) jne addr16 cmp inc pop mov jne sub (bad) call in jns sbb jp xchg add pop int (bad) xor dec shrb in aad xor in adc inc pop mov mov jg je inc sbb or mov fnop cwtl and jno pop test test cmp cmp mov jecxz fcompl add pop add out movsb sti mov jno sbb lods mov pop stc push pushf cmp call and sub (bad) ja pop in jno cmpsb cltd add popa cmpsb cmp jno lods shr stc in adc mov dec or mov jb dec aam cmp imul add aaa cmpsb movsl adc repnz push cmp xor rolb lahf fisubl lock pop adc (bad) mov pop push fwait data16 push insb dec push lods add repz xor xor ja out lods dec mov ljmp mov mov out sti push or sbb push pusha movl push jmp jg lea stos repz notb xor (bad) xor and negl sbb pop loope cld inc jecxz clc pop ljmp cld push xor ret jns lods push stc sbb sub cmc rcrl into lods ror mov ljmp cmp push fs popa scas frstor sti or jbe icebp jo outsl xchg add (bad) xor insl lcall fidivrl inc sarl lea popa adc cs movsb popa inc pop inc aas scas jno pop dec inc mov lock call lea jae btc mov setns mov movsbw mov pushf xor test stc repnz jmp sbb xor mov (bad) aas adc in inc pop mov jno sbb mov outsb mov cwtl jb pop (bad) icebp adc scas push fucomp shl lret cld pop mov lret (bad) enter adc pop mov fs pushf inc xchg push stos and loop xor pop icebp pop push fcoms shrl add lock mov mov aaa test clc ja sti rorl gs or or iret xor arpl or jne jecxz pop sub pop arpl arpl pop into dec pop aas xchg add adc push or popa (bad) mov stc pusha decb aas inc push jno push ret int3 cmpsl xchg jmp (bad) mov cld and fwait mov dec adc or dec push out jg stos pop cmpsl (bad) out sbb jo int3 mov add cmp mov pusha or add ljmp daa mov dec inc pop ss inc jnp mov dec ss or movsb call (bad) fldcw pusha repz sbb js pop stos sbbl mov add or imul loop jecxz call in mov int3 ss pop jno push mov xor xor pushl pushl ret movl pusha lea jmp lea ja pusha jmp xor das and sub jnp (bad) jne sub lds mov cmpsb fldl2t aad add int mov cli adc adc jge cs mov movsl mov cs mov stos pop std call cli into adcl jo (bad) hlt add (bad) dec pop enter cmc adc ds ret cld push sbb cmp cmp inc cltd inc pusha jle xchg jp pop adc mov mov mov imul loope lcall lods mov inc mov fcompl rcll cmp jl cmp addr16 loope repnz xchg gs mov mov add xor repz pop jg jae inc hlt mov insb shlb push lods repz or jno adc lods or ret fwait xchg cmpsl call xchg or dec xor xchg hlt imul int3 sub pop es hlt icebp in ret fcompl sbb pop cmp icebp repnz add dec mov cmpsb jmp mov push imul mov es push jns xchg push outsl aaa cmpsl scas nop mov mov pop fistpl jno ds cmc bswap in shl out sahf pusha cbtw in js fs push xchg jno adc or and add bound xchg sbb (bad) js scas fs leave push daa push imul loop xchg mov pop pusha pop dec adc cwtl xor add or clc or push xchg cmp jbe mov loope aad fwait jl jp jno ds test adc sahf loope loop in in fs xlat lock or or fadd cld mov icebp dec mov cld stos push cmp ret jo xchg bound repnz into aaa sti and popa lds ja jl lea push mov pop adc int in add add call or test xor cmp mov btr sub ror test push btc bt setb aad push setbe ror btc push rcl aam aas sub lea lea call lea call bt stc push cmp call xchg outsb mov jmp jg xor mov ljmp int test es (bad) mov push sbb ja jl mov jmp xor cli les std hlt push add add movsb inc dec cmc clc cmpsb aaa addr16 cmp ljmp andb sbb xor mov mov lcall cld cmp cmpsl (bad) lock xor (bad) jl fldenv xchg jno int3 xchg ret jl mov add push popf add and cmp adc test jae mov ret xorb xor lret ror sbb xchg lret cmp daa idivl aas lods jae xchg in push arpl arpl fucomi repnz sbb ja fcomps inc pop push sub mull out jo aad dec cmpsl jge mov inc pop inc cmp mov cltd pop push test test pop (bad) pushf test mov iret in ja fwait or cmp clc xchg xchg cli xchg in addr16 ljmp leave leave inc dec repnz sub push and push data16 jb into jl inc daa aaa aaa dec mov (bad) mov xchg ljmp js mov (bad) ret cltd sti ljmp imul mov iret out mov (bad) jg or pop mov sub je ds and mul std call jo xchg mov fnsave xor cwtl daa imul into push jecxz cmc dec or mov pop lahf mov fdiv shrl (bad) movsb (bad) and push cmp cmp aas adc mov aad cwtl cld andl push fcoml pop cmpsl sti shrb adc scas nop repnz mov pop out ljmp jne hlt scas pop stc mov lods mov sbb test in shll imul and iret scas xchg cmpsb fiaddl jle mov cmp sub mov in xlat dec sbb js add xor lret dec mov int lock jno adc mov push es mov leave stos adc ror mov repnz out add outsl iret inc sbb pop inc fdivrs in sub dec lods adc lods xor clc pop lcall sub sti (bad) loopne test sub test cmp loop loop mov or (bad) xchg push xchg fsubrs negl dec bswap adc or push pop in mov inc std data16 pop pop pop inc jl pop inc push push inc call mov pop mov sbb inc stc push push mov out pushl paddd and je push clc movb add cmp cmp pushf mov mov call sub inc in push mov cmp sub fsubs push imul mov mov mov inc mov jb jbe dec ss out popa test loope icebp sbb jp popf push sbb add ficom or gs and jle cmp aas shrb arpl aas lock (bad) add mov mov mov or pop test xchg movsb in mov mov nop lcall ret xchg pop in cmpb adc xor adc (bad) and cmc popa fisubr dec xor or pop push lret les add cmpl jmp out sub mov bswap xchg xchg mov mov and seto mov test push clc sub bt repnz pushf pushf lea jne lea rol btc mov mov sar shr rol sub cmc mov pusha movb clc sub movb jmp scas pop in dec ret xchg xchg imul in mov sub jns dec icebp in mov (bad) fldl mov push xchg sub push call xor sar dec test jb pop ja push repnz mov sbb rep mov or data16 jae lock sbb jl hlt and mov sbb cltd stc lods scas ljmp adc and lea test sbb (bad) (bad) mov nop add xchg call test pop scas xor push insb lret mov mov push jno or lea jb push cmp pushf lea ja mov mov rol add cmp seto pushf mov clc jmp inc sub out xor dec mov xchg dec xlat call scas mov les mov stc inc push out push popa mov push jo andl adc stc xchg xor fistp das imul push sub test loope mov dec and jnp inc je xlat pusha mov xchg (bad) xor out mov (bad) mov aaa scas das jo mov mov mov (bad) std mov fadds stc or xor addb cmp push fldt add (bad) into and jge lea and add adc pop addr16 shr and out iret out xor sbb cmp lret pop xlat cmpsl test js add aaa adc pop cld ja dec mov popf push or jecxz int3 and lods mov inc (bad) mov fsubs test xor std xorl movsb jp jno or sbb push cmp int arpl and movl aas fwait in mov test cmp shrb xchg mov dec lahf inc or ficom inc loop fcomip int3 xor cmp mov pop roll jae cmc ja lods mov daa sbb jns out inc data16 xchg adc dec xor rclb pop movsl mov lahf jg in je pop fucomi (bad) negl daa jnp ja das loope xchg leave fiadd (bad) cwtl mov pop jge and push xchg jns cmc mov inc push enter loopne push or pop or jns pop (bad) shrb iret xor psrlq and les or lret aam or dec fisub rorl dec ret cmp inc sbb mov pushf adc fwait out and out mov pop popa out fidiv xor cmp call aas ja popf jno or fwait and scas out std push (bad) xor sub dec iret jns mov sahf loope and sbb mov pop push mov jae pop add mov cwtl fsub neg fist fwait popf fwait out outsl mov mov fldcw stc sbb cmp push fnstenv ja mov test lock (bad) jbe jg jle add jmp mov cmp jecxz mov mov es mov shrl lock testl call fcompl out repnz ret or inc sbb inc mov push inc jp arpl nop (bad) fsubr jno or jg and neg bsr shrd lea mov test call pushl popl lahf cwtl mov movsbl movl bswap push movsbw jmp push arpl xor cs insb add adc push bound ret xchg imul dec jb pop cld bound leave mov fmulp ss push dec mov mov jnp imul xchg outsl xor loop int loopne dec push mov fucomi dec jge negb lods xchg push scas js jne test lods test fisubl movsb mov in clc test sbb push push test int3 jno add mov mov iret nop mov add push xchg (bad) test mov and cmp ffree popf add adc out cmp dec push loop lock xor xor lea jae pusha push lea jmp mov mov popa pop mov ds (bad) fadds sti inc ss pop cld divb lea mov jg inc xor int3 inc xchg (bad) in jae add out mov mov jmp mov push daa ss fbstp xlat ret inc pusha inc pop add dec jns loope pop dec dec outsb mov bound out arpl clc add out push jno jp (bad) add or mov xor lds cmp or jbe lods sarl inc cmp push add cs js xor insl cld mov xchg sti xchg jg fcomps mov xor fstl das xor out movl aas loop mov faddp int dec loope jmp dec mov inc divl popf push xchg rorb lock and push jae adc and lahf mov out or xchg pop lahf xchg mov in dec (bad) mov and add mov int lds add leave fimull cmp xor xchg sub stc jle lock and adc hlt mov faddl out lock mov (bad) faddl std insb mov (bad) mov push ja or je adc jno aas inc push les and insb lahf nop jmp insl popf mov mov test jg mov add jno pop ljmp (bad) jmp cs xchg sub adc adc (bad) into add xchg cli or outsl sbb sbb mov in cmpsl pop mov and fmuls pop or mov orl pop stos pop repnz sbb ja xorb in xchg outsl push cmpsl cmpsb js push mov jbe xor push sub popa mov out push scas outsb out mov sti push out out and push test mov addr16 (bad) or fild pushf imul test insb sarb mov out rol clc dec repz iret outsl mov (bad) jmp pop adc and inc mov rcrb gs jae pop push mov bt add mov push mov stc cmp push call add fistpll sbb cmp or gs pop rorl movsl sbb adc sti cmp ss bound mov xor rcl add mov inc int je loopne hlt dec or adc iret add pop cmp lods mov aad clc push jne ds aaa dec imul pop aas (bad) clc cmpsl xchg mov dec icebp outsl roll clc add mov mov (bad) or dec push inc lea imul fld pusha fbld add dec data16 (bad) jg cmp xchg jno and seto cmp in (bad) outsl ja push sub loope mov xor cmp pop add lds cmpsb pop rorb xor sti outsl fldenv (bad) or int and imul and cmc stos sbb push push mov xchg jecxz int xor adc fwait test mov stc pop and mov loope icebp pop cmp inc push sahf sub cmp dec jno clc cmpsb mov rep scas (bad) mov stc imul mov into pop add insb ja fnstcw push sbb cmp imul repnz jl jecxz jmp inc stc sbb gs dec mov mov xor flds testl popa popf test fs (bad) cmp std subl lret fldenv adc ljmp mov (bad) decl repz loopne call jp push into icebp sbb push inc dec les loopne repz out inc push mov loope mov jb mov (bad) dec mov dec lret add jge jle imul cmp sahf xchg scas sub repnz call cld push stos fsubrp pop mov ffreep sbb xchg add add pushw fild lcall sbb cmp sbb add jno add movsb pop addr16 adc pushf call repnz mov pushf call or mov loopne repnz out sbb mov adc in rorl mov pop and std mov loopne std outsl or and and mov daa int mov cwtl test add out mov dec mov add jno fsubl jns sti inc hlt inc dec ja sub inc mov pusha xlat mov hlt ja or aaa or into loope mov dec xor jbe dec push lcall (bad) xchg stos ror stc out sti loop test int add xchg sub popa aam dec (bad) mov jno add pop jno bt pushf add movw pusha pushf movw lea jmp out clc out lock loopne iret dec add push add or enter nop out cmpsb mov add add and adc cwtl (bad) (bad) xchg (bad) (bad) (bad) (bad) iret and enter movsb mov aas adc or fadds sub pop xchg mov mov push sub insb jae bound fstpt icebp push xchg pop cli mov mov adc push clc hlt lret inc fcoms adc dec jb stc xor rolb inc push jnp jmp fsts jno mov jo sub outsb imul dec pushf lods xor jecxz sub jl jne int3 repz cld xchg or adc mov xchg jmp (bad) dec pop jno add lea xor arpl inc push icebp dec rcrb jl push (bad) iret das dec xor repnz popa movsb cld mov ficom inc push lret push adc add fldl sbb in push sub addr16 mov mov mov push sbb call fsubr rorl bound pushf inc push cmp pusha mov outsl addb dec and xchg jecxz mov inc sbb decl push call lahf push sahf and inc fwait sbb pop lods jae ret and loope shlb jecxz (bad) ffree inc fiadd sbb and and (bad) enter or call cmp cmp and enter arpl xchg jl xlat inc mov data16 inc insl mov mov mov pop sub and push (bad) and adc mov scas xchg fucom loop mov dec movsb popa push dec push dec or mov xchg xlat aaa pop dec mov jbe push daa test sbb mov das imul stc push mov inc test loopne push and sbb fcmovb test lret in xchg mov insl mov sbb cmp mov fxam mov les cmp dec out mov lock and add fwait and call mov lea push call pusha pusha movl lea jae push push pusha mov pusha lea jmp aad pandn dec mov (bad) or xorb push dec or (bad) call loopne scas hlt adc pop rolb xchg mov mov adc xchg imul out lret sub inc test and add pop inc jmp push jae push and sub in stos push cmp mov out pop in and nop jno,pn mov cld or pop pop xchg push (bad) daa pop xchg outsl lret jo sbb or pop jmp mov std loop fildl std push jno (bad) out mov outsl (bad) mov inc std push icebp or out rclb enter add pusha push adc or add gs leave sbb js movsb adc das jo (bad) cmpsb stc shll add insl mov lcall adc mov movsl (bad) clc dec jb fidiv ds fisubrl inc cltd stos cmp rcr push sub sub enter xor sbb sub jg dec js cmp and bound add std bound ja das pop mov xchg ljmp std inc sbb rcll enter in jno incl mov xchg inc dec push inc push dec cs insb add je sbb movw lea jno pushf pushf inc movw adc push pusha movb pushl ret js mov mov je daa xchg inc outsl pop jnp ja mov mov adc pop hlt pop jg ret aam xchg jmp scas add ljmp inc mov or sti add clc cmovo js mov (bad) sbb mov je test mov ljmp into cmc ret add daa push mov jge movsb mov ds insl out sub test mov out mov jl fwait adc (bad) mov sahf cmp lods add ss bound out out jb pop imul cmp fcmovne xchg aaa into mov out iret scas sar add cmp aas inc (bad) sbb mov jno std outsl and test dec dec dec cs insb add mov rcrb dec mov add push mov in repnz pushf (bad) aad mov ds cli jp fwait xchg cwtl cmpsl mull mov xchg lods push in adc insl out inc cmp dec cmp cmc aad pop inc pop imul xchg mov scas adc xchg mov sbb xchg rcl ret push mov outsl or cmc in dec fistl arpl shr xor rorb and cmp push leave jne pop mov (bad) pop cltd xchg cmpsl xchg mov int3 push mov or cmp arpl push loop bound push ss aaa dec push sub aad cmp fcmovu icebp (bad) testl cmp dec adc dec mov fistpll mov pop sbb add mov fbld adc inc xlat (bad) mov test lret shr xbegin xchg stos mov std ret add push adc pop popf add inc sbb jno cld aam mov pop out pop dec pushf mov loope int3 or or dec push outsb jg add aad (bad) mov ret cmp push (bad) fildl jnp loopne out xor test adc cmp mov bound cmp sub jne add xchg test jle repnz cmp mov int3 xchg push mov inc lahf loopne stos jnp pop in jle inc xchg add mov leave mov or mov push stos xchg mov das jno sti in lcall push push cs int3 stc or mov pop or xchg dec push dec cs add jb mov (bad) jne push adc scas je mov push rolb shr inc pop jnp shrb pop pop pop jo push fwait lock jnp aas and cwtl pop xchg in int add pusha push or xor pop rcrl jns aad fwait (bad) leave stc cmpsb mov xor test fild adc ffree dec xchg cmpsl int ljmp clc out shr cmc iret and inc cmp pop fsubl mov gs pop sti popa cs and inc and ljmp jge push mov movb lea jne shld and xor btc bsr inc cmp mov shl pushf add inc (bad) lock ror mov pushf test clc test push pusha lea je pusha sub clc cmc cmc cmp pushf push mov push lea jmp movb mov test mov movw pushf pushf lea je cmp test sub push pushf movb pushf lea jmp pushl lea je test add cmp clc clc pushf cmp call lea ja (bad) lock call bsr sbb add shr sar bsf mov rcl mov call cmp pushl mov jmp lea jne setge shrd jmp inc push insb ret pop addr16 jl popa aam ss std adc inc mov std (bad) xor lods mov inc sbb hlt dec push cs inc mov rorb pop pop inc cmc fisttp xor push push rolb addr16 adc aaa add xor data16 push arpl dec mov adc jge shrl (bad) sbb nop mov dec cwtl scas sahf sbb clc cld cmp outsb frstor bound je push push out mov inc (bad) mov cmp insl out xchg mov cmp pushf inc mov call adc and cmpsl push mov jno stc ss pop or or pushf imul inc arpl sbb push pop nop fsubl add mov rclb scas pushf add imul popa pop mov scas popf jp cli test (bad) lock mov fldl jge pop pop sti and jo push jo mov clc inc dec clc xor xor cld mov inc jle push adc jnp mov pop inc sti mov xchg jle loope fcomip pushf loop sbb hlt rcll insb fnstenv sbb nop hlt jl js adc or push ja out pop (bad) rorl fiadd lcall push loop insb int3 out xchg dec mov outsl out sbb cmp jno stos cmp int3 adc mov cld add es (bad) sbb clc mov or add xor int das outsl adc test les jns jns pop clc test adc and jne jmp bsf mov and shl push clc shl bswap push rcl mov cmc bt test pusha test mov pushl pusha call dec inc pop fiaddl dec cmp dec mov fsubl sub xor test movsb cmp jp lret mov adc ficom mov daa aad stc call push test pushf sub cmp pop nop loopne frstor cld pop and xor pop pop cmpsb cwtl push (bad) cmc leave nop into call fdivl outsl jno (bad) mov addr16 les out imul xchg loope dec mov negb pusha jle aaa lods adc repnz dec mov pop (bad) xlat push pop and je cmp (bad) jae pop pop nop pop or pop and push xchg cltd adc push popf pop mov xor inc add push (bad) mov lea push cld (bad) pop inc push fcmovb cmp pop xor in xchg call sub vpsllw ljmp lock push in (bad) aaa je jae pop sbb aaa sub popa jne cmp in mov (bad) std mov outsb jmp push insb xor dec cmpb pop inc int bound negb fsubs scas pop mov or data16 lret dec push dec or cmpsb cmp cmc lret stos mov aas push test fisubrl cmpsl addr16 dec pop lret les scas repnz fmull jb adc mov mov aas pusha inc add (bad) jo repnz lcall jp mov fs cmpsl pop mov mov push fldl xor cld lcall jno cmc pusha das cmp mov sbb dec adc (bad) iret dec pop jmp mov pop xchg stos cmp and imul jno (bad) or xchg cmpsl jne stos in lret sbb push jns fnstenv dec pop mov jl jmp mov je or lret cmp aaa daa push iret pushf ss stos (bad) mov xchg sti in mov fwait test repz ljmp scas mul dec lock mov insb arpl jl mov sub ja je cmp arpl mov xchg int mov imull cmp cmc inc dec rorb in xchg insb xor ja (bad) leave dec iret pop test pop ret nop scas adc scas xor and inc mov imul mov add iretw pop dec cwtl mull jle repz loopne inc scas nop movsl cltd (bad) ficompl (bad) ja dec shl mov sub mov lret pop sub mov das xchg mov (bad) inc dec jne js popa jb ret aam pop lret mov js outsb call add mov push dec push aam pop add test dec push (bad) jmp pop mov inc or mov xor stos xchg lods lods icebp aad sub (bad) or ret inc pop and inc push sub sbb pop pop jmp sub into and adc inc xor lret mov sti jg push jl jno hlt xchg test call add inc gs outsl fs gs imul js add hlt call data16 andb lcall popf adc xchg or xor sub adc sarl push inc out xor mov inc aam and lret cld pop and cmp xlat je fs insl scas jae in dec jmp (bad) into mov xchg fwait shll leave mov push lock in mov xchg in pop xchg mov push jp add and mov insl scas aam add and inc js daa loop clc xchg mov or incb imul out ror lahf loopne and lea or sub dec in push push outsb mov out mov xchg or inc test repz daa mov jno sub into dec and mov subl stc or fs fs out stc cmc dec inc bts imul pushf bound adc cmp jg mov push (bad) (bad) mov sbbb xchg mov (bad) imul out fsubl test mov pop mov mov mov data16 adc aad add inc std inc cmp adc fnstsw adc inc mov sarb pop xchg mov lret xchg mov cmp xchg adc push faddl cmp ffree test decb cli inc xchg dec jmp sub pushf (bad) fs incl loop pop (bad) jecxz jl pop repnz or add cmc cmc cmc pushl add pushf pusha pushf lea jmp cld rcrb sbb mov repz aaa mov cmp pop idivl (bad) aaa test adc inc in pusha (bad) aas jns cmpsb dec cwtl sbb gs shl rorl cmpl icebp add fucomp add mov mov add popf imul ud1 imul lea roll sbb inc sub mov cmp xchg jo (bad) jge mov dec push cmpsb add adc pop insl movsl mov rcl es sbb pushf add popf adc mov rcrl lods xor lds mov rcrb lds sti dec jno icebp (bad) out mov push lahf mov pop lea call pusha pushf movl pushf pusha movl pushf mov pushf pushl lea jmp inc bt pushw popfw jmp and jp pushf (bad) fsts in add in loopne call stc in in cmp sub (bad) je out les jecxz into stc jb sbb inc add dec mov mov sbb lahf outsl xchg ljmp xchg aam jl sbb sub fsub das pop pop mov fldl loop xor mov imul mov lret or xchg jno push dec mov dec mov scas jo les loop xor push inc cmc mov adc sarl iret pop add fsubl jecxz inc cmp jno lock icebp (bad) (bad) clc cmp pushf push sub sub bt bt pusha clc or jmp lods sbb xchg fninit and std das fldt jns cmp (bad) popa pop insb mov pop push mov jmp aaa mov arpl push add inc push fisubl js push movsl add int (bad) test xchg stos xchg adc cmpsl js fs push adc ret pop adc jle and xchg lods mov jo loope mov cmpl add cwtl xchg rolb test sub push mov mov pop mov cmp add outsl lock dec ja push sub movsl cmp outsl inc js mov lods sbb pop out clc xchg fs stos mov xor push leave aad int jb outsb les data16 int jne xor cmpsb xchg mov aas mov mov push fiaddl push lret fcoml ss es pop cwtl jl outsl aam adc mov cmp lods add or jecxz sbb inc mov and test push mov shl push pop clc in cwtl stos aas or lret stos aad (bad) out pop out shrb inc jae mov xchg sub sub xor mov lods xor sub add xor arpl sbb daa (bad) or out or push outsb rol clc into xor xrelease mov in xchg or mov insb jae shrl jecxz xor gs lds call jb shr cmc sub les stos xor test mov mov aam daa cmp ds push fildl data16 test adc or xor in push jno push arpl sarl pop inc fwait lods adc push jecxz je lret pushf jne decb cmp push das (bad) jnp repnz movsb lcall lea sahf (bad) xor mov xor push lea ja push movl push mov lea jmp insl sub outsl lahf jg dec cmpsl fwait adc clc (bad) jmp hlt lret push cli push fwait push mov add mov mov das add (bad) loope mov push loope xchg sub inc xorl leave repnz and jns and mov xchg iret lock ret jp ds xor inc inc lea cmpsb mov sub push sti test push cwtl aam xchg aam push jl push (bad) mov jb mov sub dec jno inc pop clc jne xchg leave repnz test cmpl or ds pusha jno in popf repnz adc pop adc lcall js cwtl daa js or dec mov mov pop ret cmp cmp iret repz xlat pop addr16 popf loope push mov cmp jbe mov sub hlt stos mov sbb call mov gs sub rcl std out outsb xchg test push pop les sbb test cmp out pop xlat jge sbbl jae mov or sub in ret loope in decb xchg push cli add add into sub mov ret shr push rorl add adc loope jmp cmp in and mov mov cmp fld inc popf scas adc fmuls cmp sub (bad) js arpl test and int3 dec xchg in das xchg lea imul loopne sbb inc push push xor jge adc in and cmp test data16 push lret movsl test (bad) in fisubl in lods xor dec push insl xor fcomi sub xor sub push mov inc sbb adc call add data16 loope imul test cmp xorb dec xchg push rol stc movsl fcmovu inc in xor pop jmp out lcall push (bad) aad push decl push push pop fisub (bad) xor popf pushf add mov mov ret pusha inc sbb pop cmp les pusha aas iret dec cmp cmp roll fbld cltd push pop jle int3 stc or repz ss or dec cmp cmp add sub ljmp xchg xchg (bad) call pop fbld push imul mov aad testl mov jle push in sbb inc mov cmp addr16 dec xchg jge mov xchg cmpsl adc xor and adc pop xchg test in cmc fstpt dec stos popf mov adc sar lock out sti test repz dec xchg cmpsb fucom repz xor cmpl out sub adc clc cmp outsl inc fwait dec je mov add push cmpsb cld inc adc outsl adc jnp cmpsl push (bad) jo xchg xor sar dec mov xchg lds mov cli movsl sbb ljmp inc gs outsl fs gs imul add and jae push movzwl clc bsf shld pop mov cmp add bt call jp lods lds sbb or lea in xor sti pxor (bad) pop fs je rcl adc (bad) or push xchg ficomp aaa cltd icebp outsb push into push mov add inc shll popa fisubrl or sbb iret adc sbb fs jg cmp sub cmpsl iret iret lock lock and cli push mov rol addr16 and int inc or inc shlb adc insb mov scas xor aas jge scas std test push lret dec dec lcall aam mov dec mov mov scas jp es jnp mov pop jmp xchg jno inc ret out push out adc jnp mov fwait pop xlat mov addr16 lret pop and mov or cwtl mov test sti cmc jae (bad) call fiaddl cld or and ljmp rol xchg sub cld cmp mov shrl mov ficomp scas xchg pop sbbl dec (bad) out sub (bad) outsl push ljmp (bad) stos mov push std (bad) jbe outsb cmp xchg ret fwait xlat jo push cmp or test pop aas rorb pop es daa cmp pop lods xor pop aaa or jno call outsl insb xor cs insb add fs ja pusha jmp xchg lea movzbl movl push pushl pushf pop lea call jmp add inc gs imul outsl outsb dec outsb outsw inc add mov jl std pushl sahf inc (bad) loopne,pt dec aad pop xchg push fadds cmpsl pop test sbb xor fsubl movsb pop sbb jmp out call in xor addr16 jnp pop inc jl repz repz mov mov add fidiv jecxz insb mov aas adcb lods insb movb jb mov invlpg faddp sbb mov test and lahf and adc movsb lods jg push imul adc xchg adc iret jbe cmp loope (bad) xor in popf inc scas push nop das scas push jb dec adc inc int3 jae push jno mov sub aaa js pop out or inc ret jnp xchg push lret fcoml inc add imul (bad) jmp test sub push ja sbb dec push or xor dec inc imul test rol (bad) add push sbb pop adc mov sub xchg repnz pop (bad) pop mov mov or pop aaa dec dec or outsb jne lahf aas push xchg mov aas loopne int3 loope mov xchg jle jno mulb mov popa push cmp imul mov mov sbb pop (bad) (bad) btc sub push dec ss and (bad) (bad) (bad) jmp test pop inc pop les push adc lods ret pop pop cmc mov ds stc gs inc pop inc pop jno out rorl jp add xor xor jns mov lock rolb sbb mov imul insl shl clc push fildl jnp adc push lods adc sbb test and mov cmp mov ds movsl mov sbb mov cltd stos fimull pop pop les sub push or movsb lods ret gs cmp push data16 cmp (bad) nop (bad) jno in arpl (bad) pushf fst aas pushl popl pusha pusha mov pushf pushl ret add test xor sub add hlt push dec and fldl lret adc and jo mov aaa pop pop into xchg stos popf rclb pop ds in imul jno cli fidivr mov in fwait sti pop or aaa test or outsl push movsb or cmpsb lock sti cmp push mov and or jl inc lcall cmpsb insb repz cld cmp sarl mov and mov in jb jle stos je jns int3 aad adc or (bad) dec adc into push xchg sub pop in std push sub lea fldl dec mov mov mov stos sbb mov cld inc lcall xor push inc xchg sub add sbb and jecxz sahf shll push les cmp and andb push mov sbb pop adc push mov cmpsb fcoms sub lods cmp dec pop js ja imul aas add and dec movsl pusha rorb comiss pop in shrb add xor (bad) (bad) mov addr16 out pop fldcw dec dec xor inc in jne xor in cmp or in mov mov rolb dec mov fwait das loope stc dec push adc lock ret jg hlt movsb cmp cld mov or popf lcall lahf stc in icebp cld inc fldl2e arpl mov cmp and hlt pop fildl and push icebp mov popf dec aad lds lods fs sbb push scas cltd lds add mov in jb sub mov pop jecxz mov mov lcall je jl cmp rorl roll pop cli test lret in repnz sub call xchg sub add sub and test dec mov cmp push iret push inc jg mov dec aad mov aad das mov jbe (bad) out into push push lds mov rcl cmp pop pop sbb mov and (bad) js rcl loopne and pop mov adc int sub mov jno mov push out fsub dec repnz xor dec (bad) mov push icebp outsb rcrl inc test pop xchg (bad) cmc leave jp dec push movsl xchg or movsl nop dec out leave ror repnz inc std push lods (bad) cmp aam test cmp mov imul loopne,pt mov outsb aaa outsl inc mov push (bad) pop rcll pop scas xor cmpsl cbtw dec jno fcomps xor mov shr incb push dec pop addl jg xorl or add pop loop cmpsb mov pushf movl movw pushf lea jmp lea mov lahf mov movzbw lea call push mov xchg lret notl pusha mov rcll add mov lea lods inc std ret int or jne jns mov mov repnz int3 ret fldt jno push mov and push add dec (bad) push int (bad) sbb rol sbb mov in mov mov pop mov icebp pop xor mov pop dec lock xor push cmc push (bad) jnp push mov icebp lods adc pop insb fstl push cmp mov scas mov mov pusha push jno lods mov dec fistpll sub jecxz imul notb mov loope hlt out aad mov js xlat std mov (bad) lock in xor and int icebp cli pusha mov jo mov rol stc enter sarb aas cmpsb icebp xchg mov lea jmp mov (bad) (bad) icebp ja jmp mov js shlb jns push cltd xor inc xchg pusha jmp in std lds inc movsb cmc cltd stc jno lret mov stos nop sti fwait xchg lcall cmc dec jns hlt stc fnstenv or cmc add mov test dec pop loopne mov push jno aad lret or stc les (bad) jmp test xchg xchg xchg xchg xchg xchg xchg nop or lcall test (bad) jae enter mov mov or mov cmpsl cmpsb movsl movsb mov scas mov daa fcomip pop mov pop pop ja leave or out icebp push ss call push icebp (bad) push sub mov push test push das adc cmp mov loope push icebp cmpsl inc fstps cmp push adc int (bad) scas scas hlt jns mov mov stos xchg dec stos xchg lahf jne fcomi and sub neg mov pop or mov lock xlat xorl mov js xlat (bad) mov (bad) jo out aad mov js mov out fidivrl cltd jno mov aad mov imul lock inc jo out aad mov js xlat mov rorl dec adc mov jo out aad mov js stc add dec jo out aad mov js xlat jne lea aad mov js xlat int shr jle ret jno mov out aad mov js xlat jge cmpl mov aad dec call pop dec popa cmpsl mov jne xchg addr16 sahf mull sarb cmc (bad) mov or or jg nop add (bad) rep icebp or aam push out mov mov push jno jnp (bad) clc push mov iretw cmp jmp jmp (bad) or imul (bad) testb outsb mov lods mov cmpsl mov fistpl jmp or or popf lcall xchg test xchg fwait xchg test sub xchg xchg (bad) jmp xchg test fstl jb jl mov push mov fldl xchg fstpl cmpsb xor push fdiv movsl mov mov (bad) out aam (bad) stc gs addl popf insb sti test xchg mov jno ljmp loope in cltd xorb xchg xchg test rcll rol fadd (bad) ljmp (bad) popf aad test cli xchg sub sbb xchg mov mov imul mov (bad) pop cmpsl repz mov cmpsb sti test fistpl hlt xchg test std and test test rcll jno xchg insb mov and gs aad mov js xlat rorl sbb sub js xlat push mov jne test xchg aad mov js in outsl fnstsw clc cmp xlat lock mov jge (bad) out pusha aad mov js icebp out add loope xor mov pop or (bad) in nop adc lock mov loope icebp scas mov mov imul xor std mov icebp jecxz insl mov aaa mov aad out mov mov mov dec dec loopne cmc cmc dec xor jnp jmp cmp aaa es inc cltd fdivp push pop xor nop dec cmp jnp loopne jbe cwtl arpl and hlt jl pop lea add mov mov jp ja inc add or cmp mov orl jge mov or dec je or sub jnp add mov pop mov push cmp jne (bad) mov repnz loop add push xor lidtl sti push and mov mov cmp pop imulb push push mov adc std test mov xorl mov push data16 inc inc sbb cmpsb add xor jbe imul cmp push push jge test in or scas mov aam jo or rorb mov or fwait mov or cmpsl test push cmp cmp lret (bad) jmp push cltd hlt ljmp mov out add ss inc cmp sbb cli sti (bad) jne out enter sbb leave push or popf pop hlt dec ret push or int3 dec mov adc gs jmp (bad) ljmp scas sub adc xor cmpsb into test outsl pop or xchg dec gs mov pop jmp cmp or (bad) xor dec or jle iret or (bad) ljmp fidivrl repz push mov or jbe pop mov sub xchg lea lret xchg mov cmp jbe js int3 (bad) iret loopne or pop int or (bad) ja bound or or sub pop adc push jae (bad) mov jne mov or test cs (bad) cli cwtl in daa (bad) or sbb push jb dec mov or (bad) pop xchg inc clc push or stc fst or mov sahf mov cmc push dec sub or adc scas mov jbe mul mov dec jp repz mov lods sub cmp xor sub and mov dec mov xor mov sbb lcall fmuls mov rol (bad) mov jno hlt std cmc (bad) icebp xchg mov stc adc lock imul icebp jmp outsl jmp lea shrl jmp (bad) jmp cli movsl test out repnz push jg stc xchg sar ljmp jecxz xchg adc js jle stos xlat nop lock adc test sarl xor xchg enter cltd push icebp mov xchg jle cli xchg mov shr imul jnp leave jmp repz shll cmpl (bad) clc js xor adc ret icebp xchg jno mov jmp jnp movsl xlat in movsb clc push xchg lds xor cld js xor adc jne mov jmp icebp (bad) lods gs jmp (bad) cmpsb js xor adc jnp popf (bad) frstor stc aas std icebp xchg jge mov mov jnp cmpsl aad or xchg (bad) jnp xor xor adc ja mov mov xchg scas (bad) out js xor shlb (bad) fistpll xor adc add mov inc cmp mov rol leave addr16 xchg in sarl pop (bad) repz xor adc insl in xchg jnp mov lret js xor adc dec in sti jnp jnp mov push mov (bad) add aaa xor rorb mov enter mov ljmp add inc mov jo mov pop pop movsb shl mov mov (bad) les pop xchg rcl pop jnp hlt (bad) je mov pop add xor mov (bad) fdivrl xor adc pminsw adc sub (bad) xchg xor add push mov (bad) jbe mov adc mov (bad) out js pop mov into in and sahf xor adc jle mov mov (bad) js xor add pop (bad) bnd xor jnp ljmp shrb (bad) lcall xchg mov ljmp add ljmp pop lret or xor push ljmp and js or ljmp fs or mov cmp mov pop sbb js or mov or mov pop push lret or mov inc add ljmp push jp outsb mov add xor or or mov bound and xor mov or mov sbb push xor or mov mov fnstsw stc clc mov cmc mov leave js mul mov aad mov mov icebp cmpsl js call xor icebp dec push negl mov call repnz repz cmc rorl jno xor mov cmp out loope xorl xchg xchg popf lods lcall ss stc sub ljmp test push clc push inc lods jmp sub xlat inc mov insl jg in enter nop xchg jmp test shlb jns je loope stc cwtl rclb icebp insl aad mov icebp sbbb jnp dec sub subl je cli mov push (bad) jno cltd movsl test pop jmp rcrb sti mov test add xchg ffree mov fwait in jmp cmpsl lcall cli mov nop stos rorb rcl movsb (bad) (bad) mov stos mov jnp sbb in fs jns push mov and mov push clc test fwait insl mov cmpsb popf xlat add mov je xchg pop cmc jnp das or test (bad) mov cmc icebp mov mov std xorb hlt jmp stc cli lds cld jcxz mov xchg hlt jmp mov xor lods sahf aam repnz xchg xor std ljmp icebp arpl fwait (bad) imul dec repnz std aad enter rcll stc aad mov xchg lcall in nop mov and or addr16 jnp fistp mov iret movsb popf or xchg adc adcl (bad) aad lcall lock (bad) std and lock fst mov iret gs or lock in ss push xor loope inc ja xchg dec jmp aam mov xchg pop out xchg and xor lret fs inc jne xchg cmpsl xchg inc push (bad) mov sbb cltd sarb mov jnp (bad) stc mov push jmp lds mov or js sub mov addl std aad lcall icebp aad jb mov rcrl or popf or jmp mov push add jmp fst mov faddp in in aad mov (bad) aam xchg cmp xchg popf jecxz fcos pmullw popl inc popf aam xchg in (bad) call jns hlt je fstp aad pop scas and popf stc fstps mov call ret lds js xchg mov adc std jp sbbb int mov add aam dec aad mov or xchg pushl add cmpl aad mov test mov jmp jne ja lcall cmc cmc mov scas sub ss loop sahf mov outsl stos mov mov adc scas and or (bad) lret cld inc loopne xchg xchg mov sti jno test cli (bad) (bad) aad mov mov xorb icebp insl aad and clc js push xchg mov mov sub (bad) (bad) xchg mov mov out js test icebp je cmpsb jbe fnstcw and jns lods sahf push mov xor icebp int3 aad andb out xchg js (bad) aam sub jecxz mov mov mov add sbb icebp pop aad sub loope js out pusha movl roll mov mov lcall push std je xchg (bad) bsr std mov and push out and insl shrb popf xchg stos and in push mov xchg xchg int3 nop (bad) in icebp aad jns in push bound jmp movsl fldcw gs cwtl call lcall cld mov sahf xchg out and mov push mov test aad mov inc mov aam mov test pop ds jno nop out xchg test mov inc xchg jge mov out xchg test jecxz fmull fadds out mov ret push push lods sahf test jnp into aad sarl out lcall (bad) xor andl push lret cli (bad) jae adc int3 or andl sbb push test xor ss scas lahf popf or imul call or or pop jbe or xchg (bad) adc (bad) cmpsl or dec push imul xchg inc or push mov or or xchg imul mov (bad) (bad) and into rorl sbb call or rcll xor mov or out inc aad loope jmp std fs or push or mov push jecxz push jb pop pushf or mov and sahf jp int3 icebp or data16 (bad) idiv add lods sti add and out or pop test or loope sarb or mov (bad) or push mov or in pushf in mov sub jl lcall sti fldcw push and sbb test or lret or dec or mov mov or clc in fisttp cmp mov jmp or int3 lods lret jne ds cvtpi2ps mov or xor aad pop or adc or bswap xchg mov push dec cs repnz frstor outsb ljmp inc out mov mov scas (bad) (bad) int (bad) sbb lcall xor fcomip and mov push or jnp cmpsl or mov xchg icebp xor jne int mov enter push pop or cmp das sti jp mov or insl xor or ds test push or xchg and jmp sbbl int3 or hlt sbb or push sbb jnp mov cmpsb (bad) push xchg lea pop movsl idivb dec xor xchg test lock xor jae popa xchg testl jno,pn out jnp jge hlt add dec cltd jbe dec stos push cmp mov adc adc sbb inc jb mov pcmpgtb push orl or jnp lcall add xor sub mov sub pop in nop insl orl add pop pushf std or jl cmp xchg and pop loop cmovne add sti inc divl loope cli or imul add into js mov dec add lret out clc or fisttp or jo and add or insl pop pop ljmp outsb fs ret xlat jmp shr leave data16 dec repnz or fdivr cmp pop or sub sbb loop jno (bad) mov scas sub cmpl test dec jmp dec sahf leave roll or bound mov xorl rorl jecxz pop stos xchg call or imull insb cwtl push or mov test inc stos mov jns decb shr pop mov sbb cmpsl repnz mov mov pop das cld cmp out ret xchg mov jnp mov test pop xchg pop mov sahf (bad) sbb jb cwtl or pop sub sahf or or inc or add xchg push sbb pop xchg adc mov inc pop mov mul ret scas nop or and or xchg jp mov pop jmp xor ss add mov or outsl inc xchg adc inc fdiv rcr push pop add cmp add negb jns mov or jno std mull pop (bad) daa inc cltd push and inc int pop or sub lret mov jbe mov outsb icebp dec arpl rcrb jb dec (bad) xchg mov dec push inc sub stc out lret sbb dec jle jge mov insb pop xor fldt cmp push sbb nop add ja mov xchg push xchg pop push sbb or xchg and sbb sub dec daa mov ret xchg cmc movsb imul dec arpl out insl sti sbb stos cld jmp pop or cmpsl and bound das or fwait or repz (bad) jecxz mov psrlq sbb movsb lret xor sub push mov or ret or inc lods outsb sbb es push adc pcmpeqw cmc cmp push or adc cmpsb dec (bad) xor mov daa or cmpsl in mov divb (bad) imul cwtl gs popa inc pop aas or aam lret mov stos mov scas xor or jmp cld inc in fimull lds and bound daa scas add in sub mov push mov sub outsl pop mov rcrb dec push push dec into or lea (bad) dec movsb pop ljmp negb inc pop sub cmp loop ret es adc push insb mov sub out shr stos or jo dec pop dec aaa or xchg loope pop scas loop orl enter je mov jge inc pop sbb ss sub cwtl mov ror or decl inc mov (bad) repnz mov xchg cmc inc or int3 or adc cld or mov xor fadds psubd mov dec push jmp sbb ljmp fwait mov insw (bad) push popf or adc xchg js test jnp jae xchg xchg test xor into jo or outsb mov sub les mov or mov xor aad inc adc (bad) into shlb add push movsl lahf inc xchg sub xchg or cmpsb push jo xchg mov int3 test aam js mov repnz (bad) nop mov fwait out or jae sbb es gs jge sub mov xor mov xchg inc repnz lret adc stc push stc test jb pop test loopne sub xor add jns or popa cmp hlt sbb adc or movsl arpl sbb das daa inc jnp out je jecxz dec sbb cmp mov inc (bad) jp out jmp stos add (bad) add xor mov dec xchg sti fisttpll and pop aam push cmp xor nop or je or call ret or loope rol lods inc or fsubr frstor adc mov xchg push repnz out pop jmp iret andl fbld push sbb add rolb or fsubrs or sbb cs out pop pop aaa jns aas cmpsl xchg scas xchg lret imul xchg inc or enter xor add js mov or jg icebp or sub sub mov pop cmc hlt ss es or in lea push out out idivl lods inc xchg pop and or and cltd repnz mov mov fisub cli and jno out je (bad) fcoms or and or (bad) ja pop lea xchg push lds loop std xchg fs outsb xchg or jne jae daa dec cli or dec fisttpll les cld bound incl stc xor or gs xchg dec xchg fldl or scas and pushf movsb or (bad) mov lret popa xlat or xor push lahf decb adc shrb push (bad) or or add jne pop mov (bad) push cmpsl sarl in or mov out jl inc sub or jns stos and repz dec scas jb sahf sbb hlt cwtl xor push xchg mov mov jecxz mov inc or js or xor jecxz inc enter dec dec loopne js in imul dec or pushf mov (bad) repnz pop or add dec xor jb sarb lods or cmc popa jo push test rcl pop aam or pop dec mov roll push xor in loopne es or lods push xor inc (bad) les lret movsl popa data16 or xchg push (bad) or xor fsubrl cmp xlat jbe daa hlt stos mov bnd fisubl lcall adc or call jns or dec in and adc imul or fnsave jbe lods mov mov (bad) imulb clc es ljmp add mov xor and mov push lods adc les cmp cmc loopne sub (bad) mov mov inc inc or adc push cmp xor sbb inc jmp pop lods fistl repnz into xchg stos lcall or fcmovnu xchg adc or jmp sub or or mov shrb mov and lret test cmp scas (bad) dec cmpsb loopne jnp or push (bad) lods int mov lds mov mov or call orl add pop jg ljmp or mov je mov dec xchg or sbb or pop dec add ljmp adc (bad) or addr16 (bad) cld int add xchg pusha push or pop adc ficom fsubl in nop dec or or pop dec or pop loopne jmp ret aas repnz dec maxps or mov repnz pop je or cmp or cmp or push cltd jmp sbb cmpl xor (bad) fisttpl add pop adc dec cld or rcll loopne jb or lret jl rcrb lret wbinvd bound or mov pop out repnz add test and inc (bad) std push sub mov jno xchg inc or out mov pop xor mov cmpsl inc loop sub sub jmp dec or mov out or mov ss or or cltd js or cmpsl xor and and fisttp and mov adcb test or lret or int3 push jno into popf fidiv lds adc and or lods test cli int3 loop movsb or mov or xchg lods out mov aam sbb push or orps xlat sbb (bad) dec or fsts outsl pushf (bad) cmpsl or or (bad) cmp ljmp aad or fisubrl call repnz jecxz nopl sub mov or sbb pushf inc mov dec icebp dec es mov test repnz mov lahf sub notl movsb ss xor add loope dec adc outsl push mov or cs inc push add push mov je mov ljmp ret inc adc popf arpl idiv aad movsb sbbl inc jge sbb jmp and adc lds icebp arpl add xchg scas mov mov mov jmp cmp cld pop or pop push mov xor mov outsl div fimul jno js lahf repnz std or and add aaa ret xchg repz mov lret push (bad) divb jb lret test test fdivl push inc sub sbb in dec jecxz fldt or (bad) pop out lods (bad) push pushf jp cwtl adc das xor push repnz pusha sub xor xchg cmc inc insl mov or loopne sub rcrb arpl pushf xor or out add adc or mov xor mov scas pop inc test shl sti dec cli lods pop push jp mov xchg rcrb mov mov cltd imulb cwtl or lret adc cmpl aas in dec mov std mov in sbb fisub push lret lock xchg fmull push (bad) or mov test or cmpl enter ljmp insl mov sbb and int3 aad or xchg data16 bound sarl pushf js or aas and lods hlt pop iret (bad) mov scas mov in mov push sbb sbb aam fwait or xor out flds int3 fdivrl inc cli out dec aad cltd cmpsl dec pusha (bad) or into mov pop xor test (bad) insl jecxz mov repnz sti inc not shrl xor or jns loope push rcrl or gs dec xchg inc (bad) std pop sub xor fisttpl adc mov addr16 xchg sub mov mov pop icebp add not ret sub cs mov or aas or push fnstsw mov adc imul outsl and aas push or sub mov xchg sti push jmp or adc das push fcomps test mov repnz and mov dec (bad) in dec add or add lret or or sub or lods mov out (bad) and inc or subl scas adc push inc or out arpl int (bad) repz sub adc nop stc lahf or xchg or pop mov add jbe sarb push insl xchg movsb arpl mov cwtl or rolb shrl stos push fadd jle dec sub (bad) cld negl add mov xor push popf out push pop call in mov jbe aas int3 mov pop sub aad and popf or rcrl aam jmp mov cmc jge mov lret mov and mov scas mov or sub or in cmpsb test push es out pushf or inc aad jne divb or jns add mov test jg adc xchg mov call mov or jge lock ljmp gs jle into push lret (bad) neg stc jmp (bad) in je in in add mull cli inc scas dec xlat or out lds enter mov jle or in pop add xor xor mov mov rcll aaa cmp lock jo cmpsb insb loopne clc pop xlat jecxz mov add cmp push dec mov fsts lret push xchg (bad) xchg (bad) pusha mov in xchg aad test cmpsl emms xchg test stos mov mov ljmp test stos push pop (bad) movsb notb rcrl xchg ret mov push push loop dec movsl jmp push leave or mov arpl jno pop mov jl cmp mov (bad) mov aam mov push push movsl push mov xchg gs mov adc psubd xchg leave mov in inc pusha pushf inc sti in loop test mov mov andl pop xchg insl je,pn xor sbb push or cmp xchg in ja movsl sub fwait cltd add lds or shlb and xchg push movl mov call pushf push add mov call pushl popl mov mov lea jmp push mov pusha pushf popl movb push push pushl pushl popl push push movw push lea jmp pushf jmp cmp xor test lea pusha bt not pusha xor mov bt push sub call sbb lea cmp cmp jmp bt push mov stc cmc cmc mov sub pushf pushl pushl call mov pushl mov push pushl pushf popl push call bt mov cmc pushf not cmp pushf cmp not pushf sub pushl mov jmp pushf mov push pusha movb pushf lea jmp pushf lea jne pusha call jmp cmp add movb pushf jmp mov pushf movb pushf mov lea jmp mov pusha pushf push pushf lea jmp pushf lea jnp push pusha pushl push lea jmp jmp bswap bswap neg call pushf not bt add test clc push test sub jmp pushl popf movb movb mov lea jmp aas xor mov test add call stc clc clc sub stc bt xchg pusha mov cmc jmp mov pushf clc call pushl popl push mov push lea jmp lea jnp pushf push pushl push pushl pushl popl pushl lea jmp bswap aas bsr mov rcr not pusha mov pushf stc mov mov add jmp pushl popl mov lea jmp pushf mov mov jmp setbe shl mov cmp jmp lea pushl pushf mov mov std bswap bswap mov movb jmp pushf lea jmp mov cmp cmc sub pushf pushf mov pushf lea jmp add pusha call stc xor call mov pushl jmp not jmp push bswap clc add cmp add cmc bt sub stc ror jmp inc stc clc call rol shr test dec mov bt add push lea jmp clc sub mov pushf jmp add movsbw push inc dec jmp pushf bt add pushf call cmc neg mov stc clc add pusha add jmp mov mov movb pushf push mov lea jmp bts mov push test pusha call stc clc ror stc sub jae xor test pusha stc lea mov not stc clc bt xor pushf call mov pushf mov pushf push pushl ret jmp call push push mov push movb pushf lea jmp rol neg mov shl inc stc pushf add call mov cmc shrd call add add rol mov xor bt ror mov cmp sub pusha movb cmc shr pusha pushl call bswap mov pushf mov mov pushl call mov pushf pushl jmp mov pusha pushf popl bswap mov bswap pusha mov lea lea jmp movw jmp pushf popl jmp jmp cbtw call pushf mov pushf push lea jmp shld notl shl mov bt cmp cmc sub push cmp mov pushf and call pushf pushf popl call mov pushl pusha jmp call mov mov push pushf movb pushf lea jmp xor clc add clc cmp mov sub push mov mov lea jmp pushf mov pusha movl pushf pushl ret mov pushf jmp call push mov mov lea jmp shrd bts pusha movzbl movb bt add not sub bts ror inc inc adc and pusha add pop movsbw inc movsbw mov jmp mov pushf jmp mov pushl popl movb pushf pushf movb lea jmp call clc rdtsc stc sub push mov jmp mov movsbw mov mov movw call jmp call push btr push btr mov movzbw push jmp jmp pusha mov pushf push pushf lea jmp call pushl pusha pushl pushf popl jmp bts call movsbw shrd pusha or mov sar test inc mov bt mov sub cmc pushf call mov jmp mov pushf popl call mov mov pushf pushf lea jmp mov jmp pushf pushl jmp pushl call mov call add xchg add loop add sbb add imul add imul add adc add cwtl and bound add inc daa add and es addr16 add jp add daa es repnz add jmp add in daa add nop sub mov daa add inc es in daa add sub and and es cwtl and loop sub bound add xchg es in daa add lock jp add xchg es mov sub add add lret mov xchg add in daa add jmp add xor add jp add nop sub daa es repnz add push es mov es sbb add mov add xchg add mov es jbe add repz bound add add and add adc add adc add bound add jmp add jno add imul mov lret bound sub sub ret add movsl es sbb daa add inc and add add and add push es test sub inc daa add repnz add adc add mov add inc es push es mov es movsl es push es and sub push es push daa add inc daa add jbe add jmp add sub and add adc add data16 cmp add sub daa add sbb add push es push es push sub sbb daa add cwtl and ret add push daa add push and add sbb add movsl daa add inc and add pop daa add push es daa es bound add repnz add movsl es pop daa add xor add push and add add add jmp add or es push daa add sub es push es repnz add jp add test and bound add and es in daa add or and add push es fisub add es push es push and add imul add mov add movsl daa add adc add jmp add xchg es jno add add add imul add inc daa add test and add daa es cwtl and loop es push es jbe add adc add pop sub lock sub (bad) add and add inc daa add movsl daa add jp add inc es mov es adc add adc add cwtl and inc lock or sub bound add fs add mov add or and add bound add data16 data16 nop sub push es pop sub (bad) and add mov inc and add bound add test sub mov es inc daa add mov es movsl es mov es movsl es and daa add test daa add push es inc es sub bound add inc es sbb xor rol sbb clc mov mov setns add pushf ror cmc ror shr call add jmp mov mov pushf mov pushf pushf lea jmp mov movb pusha lea jmp pop pushf pushl ret push mov call jmp setns movzbl pusha mov bt rol test add pusha mov mov mov mov push pushl ret test add mov movb pushl lea jmp movb mov movw movl pushl pushl lea jmp inc sub mov test pushf push test sub cmc clc push shl pusha push call jmp jmp pushf pushl inc stc xor jmp cld push push jmp div mov mov pushf movl mov pusha pushf popl jmp clc and jmp jmp sar pushf or mov add bsr add push sete inc ror xor mov jmp push mov movb lea jmp pushf mov mov pushl push lea jmp jmp call pushl popl pushf pushl lea jmp mov pushf popl mov pushl popl pushl pushf mov lea jmp mov mov pusha push push lea jmp dec shl mov push pusha mov add pushf jmp xchg pushf xor pusha ror stc bt pushf lea cmc push clc cmc xor call mov jmp pushf pushf pushl popl pushl lea jmp movb mov pushf pushf popl movb call pushf bswap movsbl bswap mov pushf movsbw lahf movsbw mov jmp lea jg push pushl popl pusha lea jmp mov dec push movb push push lea jmp mov mov movw mov lea jmp stc rcr das movzww stc clc bt jmp bts sub call call lea aad mov jmp jmp rcr setns sar mov add ror mov add jmp adc mov call pusha mov mov pushf lea jmp pushl pushf pushl popl push push push lea jmp (bad) icebp add cltd rorb in add add pushl popl mov lea jmp movsbw mov jmp call shr jmp mov pushl jmp rcl mov clc not btr dec add bsf btc sub or mov call pushl popl pushl lea jmp dec shr inc add not dec add rcl (bad) mulb push add add pusha mov pushf movb push lea jmp pushf pushf mov push push mov push pushf push pushf popl pushf jmp pushf pusha call clc lea jno and stc jne cmp jmp imul pushf pusha mov mov jmp jmp movb stc sub call jmp call bt btr cmp mov sar rol clc rcl mov bsf or bsf or mov bt sub push mov call jmp pusha movb pushf popl call call test not jmp pushf pushf jmp jmp test shl cmp cmp bt shr bt clc bt cmc or cmc jmp pusha jmp jmp lea lea jo rol sub call pushl test call jmp pusha lea cpuid pushf sub pusha cmpl movb pushf call mov pusha jmp pushf call jmp call add mov clc call mov push pushf popl pushf mov jmp movzbl btr not not call pushf mov pusha push push pushf lea jmp push mov mov push pushl pusha pushf pushl ret push push mov pushf pushf pusha lea jmp mov movw mov call shl setb jmp jmp mov dec call jmp call and movw pushf mov jmp bswap mov pushf pop mov pushf mov jmp call cwtl cmc sub jmp cmc stc mov stc stc sub pushf mov pusha pusha push lea jmp push jmp pushf jmp bswap cmc bt popf pushf pop jmp pusha mul call (bad) lock pop pop add not cmp add clc lea jno add jmp pushf mov sar mov pushf neg sub js cld pop jmp mov pushl popl mov pushf pushl lea jmp pushl popl mov mov pusha pushl lea jmp pusha pushf popl call dec cmc pushf stc add pushf add jne clc stc mov clc sub jo mov push pushf pushf lea jmp mov call xchg pushf clc bt xor jmp lea push pushf lea jmp pushf mov mov lea jmp movb push jmp pusha call rdtsc mov sar and or mov cmc jle bt pushf sub jmp movzbw add sbb mov pusha jmp neg inc movb not push dec (bad) repnz ret bswap call call pushf popl jmp mov push call pushf pusha mov movb pushf popl mov pushf push movb pushl popl push lea jmp add add daa pop rol xadd pop bsr rdtsc pop xadd not pop bsf dec pop shl jmp pusha mov mov jmp movw stc lea pushf jmp bt not mov stc xor stc test clc cwtl pushl jmp push pushf movw idivl call rcl rcl mov rcl pop das not jmp mov pusha push pushf mov lea jmp shl jmp call shl lahf not mov (bad) repnz xor mov (bad) icebp shl test or mov stc jmp sub call cmp sub pushf pushf pushf pushf mov mov lea jmp pushf rep bswap rol neg cld mov pop shl std pop mov stc movb call cmc pusha ror cmp cmc xor call pusha jmp call jmp mov pushf lea jmp jmp push pusha pushf pushl popl mov stc cmc add cld bt stc pushl popf pushf push lea jmp pushf popl pushf pushf mov pushl popl mov lea jmp movb pushl mov movl mov mov push pushl pusha pushf pushl ret bts mov pushf call dec push movb lea js inc push pushf call mov jmp push ror lea pop dec pusha rol xor or bswap lea shr call mov pusha mov pushf pushf pushl lea jmp mov mov cwtl setbe mov pushf push divl call pushf mov bt rol xchg push movsbw bswap push pushl popl btr xchg stc push not rcr rcr rcl mov mov call bt lea mov pushf mov pusha stc clc add pushf jmp pushf sub push push call pusha mov mov movl lea jmp mov movw mov pushf lea jmp jmp stc cmp mov add clc call rcr ror mov pusha push pushl stc sub stc add push pushf popl push jmp push test sub stc mul call jmp (bad) testb mov cmp setp movzbw mov test add pusha pushl mov pushf mov movb push lea jmp sub pusha lea jne jmp push pushf lea ja sub mov cwtl shrd shrd lea lea jmp movsbw push call pusha mov pushl movb pusha lea jmp adc mov bt push bt sub clc pushf add movl call movb movb pushf popl movb call mov pusha push mov pushf lea jmp jmp pusha pusha not mov movb mov pushf lea jmp clc mov pusha call shrd rol pop sub neg and popf bswap pushf mov pushf mov pushl ret cmp aad mov adc adc daa mov jmp mov push pushf pushf lea jmp push lea pusha jmp mov pushl lea jmp mov push pushl lea jmp jmp push jmp dec rol mov call call push pushf mov pushf pushl call imul jmp pop inc or and add adc btc pushf mov cmc cmp sub call pushf pushf mov mov jmp cmc mov btr movsbw mov stc pusha push add call lahf shrd shld mov cmp sub push pusha pusha call pushl popl pushf pushf pushf lea jmp pushl popl movw pushf lea jmp push pushl popl mov pushl lea jmp mov call jmp mov shr clc shl mov call bt clc or call movsbw pushf mov jmp pusha mov jmp cmp xor push jmp mov pusha lea jmp movzbw pop sbb movzbl cmp clc and xor add pusha adc sub movsbw movsbw rcl ror lea jmp bt sub pusha shl pushf call push call call lea jne test sub pusha push call mov pusha movb lea jmp cmp add cmc call mov push pushf add call mov call bswap not ror xor (bad) icebp shl add shld sar shr shr movzbl mov lea jmp push mov movb pushf lea jmp pushl mov pushf pushf pushf popl push push pushf pushl popl push lea jmp inc neg mov and or stc mov push bt add call cmc sub bt push shr movw mov push mov jmp dec mov jmp inc btr cmp mov jmp call pushf pushf mov pushl push pushf lea jmp push bt add pushf jmp jmp pushl popl movl movw lea jmp sub add mov (bad) repnz mov jmp clc pusha jmp mov sbb bsr add add shrd cmp bswap shl mov pusha shrd sub bswap not adc ror shl bts neg pushl cmp shrd xor call shrd dec mov cmp clc cmc jmp cmc mov cmp xor pusha mov bt cmp pusha sub pushf mov shr jmp rol mov seto stc jmp add lea jle mov push lea jmp mov push mov jmp bts mov sub daa sbb aam mov cmp sub push cmc pusha stc imul call bt mov cmc stc bt neg mov clc cmc not pushf not stc pusha clc cmp and push jmp call movzbl test add pushf dec pushf pushf ror cmp bt clc neg pusha jmp call pusha mov push pusha lea jmp pushf push lea je jmp push sub jne bswap cmp clc cmp pushf add cmc cmp cmp push add cmp sub call pushf mov pushf pusha lea jmp mov call add jmp pushl popl mov movw lea jmp cmp pushf call stc add clc cmp stc add jmp pushf mov push lea jmp adc mov pushf stc clc cmc sub call mov pushl push pusha mov pushl pushf movb lea jmp pushl mov movb lea jmp jmp movzbl bt test add pushf jmp das cwtl sub bsr and clc ror lea jmp push pushf jmp call push pushl mov lea lea movzbw bswap push repz popl bts push rcr call not and not stc dec dec sub jmp stc add bt shrd push call call daa daa mov call lea jbe pushf call movb not stc cmp add stc test movb call sub jmp jmp shld push mov mov jmp pushl popl push movb movw push lea jmp sub btr jl mov push adc mov stc add movw jmp pushf popl call pusha pushf cmp pusha pushf jmp mov pusha pusha lea jmp pusha mov movw jmp stc cmp jmp add pushf pushf popl pushf pushl popl pushf pushl lea jmp lea jne clc (bad) repz xorb pusha setbe movsbw bswap mov push push pushl movb lea jmp pushf push pusha mov inc jmp pusha push push movb sub pushf call rol movzbl setle btr mov push cmc rol cmp sub jg push add jmp mov inc pushf pushf decl push pusha call pushl mov push mov jmp call pusha mov movb lea jmp jmp pusha mov test pushf call ror neg sub shl adc xor (bad) (bad) mov pusha test dec jmp jmp pusha lea jne pusha sar xorb lea not movzbw call lea jne movsbw clc mov call pushl pushl jmp mov push pusha mov lea jmp lea jne bswap ror xorb movsbw movsbw pop push push push lea jmp add add add lock add xchg add and add orb test jmp add cmpsb ss (bad) ss add add ss add imul add cmp push cmp js add mov add jmp add sub add pop cmp fwait cmp fstpt add adc add cmp mov add lret cmp or add dec cmp jnp add fnstsw add or add cmp add add mov add cmp add cmp add cmpb add ds sub add pop ds mov add (bad) ds or add push aas add mov aas add lock add adc add add test inc add sbb add add jnp add mov add fadds add inc add inc inc add addb mov inc add pop inc add mov inc add das inc add cwtl inc add loope add xor add inc add xor add add sti inc add sub and 