xchg mov jb int3 mov jb sbb jb jbe jb add jb jne jb or jb ret mov jb push jb add jb dec mov jb mov mov jb xchg mov jb bound jb xchg mov jb xchg movsb jb mov xchg jb lret mov jb fwait mov jb lcall sbb push mov jb jg jb jne jb dec mov jb xchg mov jb call xchg jb mov mov jb add jb adc jb add jb xor movsb jb dec mov jb ja jb and jb mov mov jb mov mov jb out mov jb (bad) mov jb frstor jb lahf mov add add inc push add add add sarl add add add add fisub add dec add add add inc add add add dec add cmp dec add ds add ds add aas dec add aas dec add aas dec add dec add dec add inc dec add inc dec add inc dec add inc dec add inc dec add inc dec add inc dec add inc dec add inc dec add inc dec add dec add inc dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec add dec dec add dec dec add dec add dec add dec add dec add dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec add dec dec add dec add dec add dec add dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec dec add dec add dec dec add dec dec add dec dec add dec dec add dec add dec add dec add dec add dec dec add dec dec add dec dec add dec add dec dec add dec dec add dec add dec add dec add dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add push dec add dec add push dec add push dec add push dec add push dec add dec add dec add dec add dec add push dec add push dec add push dec add dec add push dec add push dec add dec add dec add dec add dec add push dec add push dec add push dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add pop dec add dec add dec add dec add dec add pop dec add pop dec add pop dec add pop dec add dec add dec add dec add pop dec add dec add dec add dec add pop dec add pop dec add dec add dec add dec add pop dec add pop dec add pop dec add pop dec add pop dec add dec add pusha dec add pusha dec add pusha dec add add dec add dec add pusha dec add pusha dec add pusha dec add pusha dec add pusha dec add add dec add dec add dec add popa dec add popa dec add popa dec add bound bound inc bound adc add dec add dec add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add jbe lcall repz dec and add add inc jo arpl je jb add push add add add add add add inc add add add and pop add add add jl inc add add add and pop add add and pop add add add add add push inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add jo add add add pop inc add pop inc add add add jp add add add inc jns push inc xor add or or add add add cmp inc add lock and (bad) decl add add add add add add add add add inc add push inc add add xchg add nop add add add add arpl arpl outsw jb xor dec jne jae jp xor add imul add add adc mov lock scas dec xchg push and faddl xchg add add dec add add add add add add add data16 and sahf xor aad push leave jae add add add add add add add add add enter add add lods cmp (bad) (bad) (bad) incl add add add dec add add add pop jbe xchg sbb add add loopne inc add add add add pushf sbb add add cwtl sbb add add pushf sbb add mov push sbb je dec add add add jl add and add inc add pop add add adc inc add (bad) (bad) incl add add add add sbb sarb add inc add (bad) (bad) incl add add inc add push inc add push inc add push inc add add add push inc add add add dec add (bad) (bad) incl add add inc add jo add add add add add sbb add add in inc add add add sbb add add fcomps inc add add add sbb add add fcomps inc add add add inc add dec add add add jp add pop inc add inc add pop add add adc inc add (bad) (bad) incl add add add add inc add jle add inc add (bad) (bad) incl (bad) cmp add movsb and add add in inc add jle add add inc add add add movsb and add add cmp add jle add add add add fcomps inc add inc add push inc add push inc add push inc add sbb pop sbb (bad) push inc add push inc add push inc add sbb pop sbb (bad) push inc add push inc add push inc add add add push inc add add add cmp shlb adc add jo add adc dec add inc add add add add add cmp (bad) (bad) (bad) incl add add enter jge dec movsb pop jno mov gs add add sbb inc add pop inc add add add add add add add add add inc add (bad) (bad) inc and lods pop inc add add add incl add add add inc add (bad) (bad) call and mov add add pop jbe (bad) incl add add add (bad) (bad) dec and add add cmp add add add pop inc add add add add add incl add addb add add dec gs jb jae add add jb jns jb push popa insl bound jne inc jo arpl je jb add test in sub cmp and ljmp dec lods cmc pop leave xchg cli add mov lock scas dec xchg push and faddl xchg and insl dec icebp aam dec mov cmp mov dec lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add sub inc add add add add add add add inc add inc add dec add jne cli dec lods xor or stos add xchg inc popa je xor add inc popa je xor add or dec add push jl out jle mov ret xchg mov xchg cmc dec mov data16 and sahf xor aad push leave jae roll loop orb mov test or adc add add adc add or or add add or add or sub add add sub add or push add add or add push push inc push xor cs dec dec add adc add inc outsb jne push push push imul add push and pusha and add add or mov or je jmp push mov call jmp add add add add push dec inc dec xor add add or add push insb gs js lods and mov add adc dec add or je jmp push mov call jmp add add add ja outsb imul insb add add dec outsb je jb gs outsl insl bound gs jb inc add and or inc add add and mov or je jmp push mov call jmp add add add add imul sbb add inc jb popa je inc dec inc push popa je gs inc jb jae push je pop and and add add sub dec add or je jmp push mov call jmp add add add add addr16 insb je add inc add add cmp mov or je jmp push mov call jmp add add add add gs xor add add add je inc add add and add inc add add inc je add or je jmp push mov call jmp add add gs arpl push arpl add pop and inc and add add push je add or je jmp push mov call jmp add add gs gs dec bound arpl add pop and mov inc add add pop je add or je jmp push mov call jmp add add add add add add add add add add add add stos xchg add add add add add jb outsl add imul add add push add add jne data16 outsl add add add add push add cmp das add add imul add jo add add add xor add das add jns bound add add arpl jae das add imul outsl add add imul outsl add add jae jo add add add add add mov and push add xor and push add xor add add xchg and add add inc dec lods xor or stos add xchg inc add add add add add add add add add add add add add inc ss dec dec add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc jb inc gs jb arpl add pop pop jbe popa push popa jb jae dec add add jbe popa push je inc insl jo pop pop jbe popa push popa jb fs jbe popa inc jb gs bound add add jbe popa dec bound gs fs data16 add dec add jbe popa dec outsb inc jb outsl jb add add jbe popa push popa jb jae inc jno add pop pop jbe popa dec bound popa jb pop pop jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa push popa jb gs bound fs data16 add pop pop jbe popa inc jb gs bound imul pop pop jbe popa push je push outsl push outsb imul add jbe popa inc jo xor add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa dec outsb push je add pop pop jbe popa inc jb gs je dec imul pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push je push outsl inc outsb jae add pop pop jbe popa inc jb inc outsl outsb jae jb arpl add jbe popa inc jb gs je add add pop pop jbe popa push je push popa jb outsl jbe add jbe popa push popa jb outsl jbe add add pop pop jbe popa dec outsb push popa jb pop pop jbe popa push popa jb imul pop jbe popa dec xor popa jb add jbe popa push je inc outsl insl jo add add jbe popa inc jb gs popa jb imul pop pop jbe popa dec xor jb add jbe popa inc jb gs popa jb add add jbe popa push je dec outsl jbe add add pop pop jbe popa inc push inc imul add adc mov lock scas dec xchg push and faddl xchg test in sub cmp and cmp xor or stos add xchg cmc add add add add add je jb jae or popa bound insb gs popa outsb add add inc add add (bad) (bad) (bad) jmp add bound insb gs popa outsb add mov pop add pop adc add add add add add popa xor and or adc pop adc inc add arpl add jae and xor xor xor xor cmp adc add add add add sbb popa xor sbb add add add add add popa xor and or cmovne adc inc add arpl add jae and xor xor xor xor cmp adc add add add add sbb popa xor sbb add add add add int3 xor add jmp (bad) sahf xor aad push leave jae push jl out jle mov ret dec lods xor or stos add xchg xor or sub pop add jb jns jb or outsl jb jbe outsb xor sbb add and loop add add loop add add loop add add add add add add add add add add add add add loop add arpl push gs sub mov divl sbb mov xlat and outsb sbb lock cli imul xchg sub and loopne pop into nop push mov clc pop and xor mov dec rcrl mov mov jae lcall les lods (bad) ret jg lahf mov xchg dec pop dec nop xchg movsb faddp sarl mov pop mov test dec cld insb push dec (bad) loopne test (bad) jl ret arpl iret mov outsb mov pop bound and push xor mov dec mov imul sti xlat sbb das mov mov or add mov xor sbb add inc btc daa mov cmpsl sahf fnsave inc sub cmp mov sub sbb dec jnp xchg bound add inc mov add jns inc jmp fs mov aad push push push or test xchg cli das jp jg dec xchg arpl dec jl sbb popa mov mov pushf (bad) xchg out push push xchg add subb into dec ret imul dec inc pop paddsb xchg cmp cmp rcl movsb cltd jecxz xor mov int js mov push mov add mov sarl and jbe adc pop and pusha imulb lea and pop xor and enter subl lods pop push stos push mov loope adc pusha cmp dec mov and push mov and push and or cmc pop mov loope leave cmpsl icebp ret fisttpl mov (bad) lret (bad) adc sti out lock aaa mov sub repz out test xchg add sbb cltd stos fbstp inc sub adc cmp dec fs dec jl xchg arpl inc xor ss jmp cmp je mov (bad) mov inc jmp jo test imul cmp pop sbb push dec movsl repz mov inc cmpl ja inc sub jns mov (bad) pop cli rcl xchg dec addr16 ret out dec push ljmp shrl popa and int3 testb test rorl enter ret adc and lahf dec inc adc neg cmp push ror out loope fdivrl fxch push mov mov add daa adc sbb loop mov adc and pushf arpl hlt stos or dec and fwait xor and imul jmp scas pop dec cmp lods xor shrb mov aas and shll cli push adc or fs test sbb sub mov je or mov inc add mov dec in mov jns outsb or pop mov in test inc (bad) lock (bad) jle and xor jge sbb repz lds jmp mov sar out je dec fmul daa loopne ds add push repnz testl push loop push cmp into jnp inc cmp or scas xchg (bad) push jp clc add pop or cs dec in xor iret movups scas add and fdivrs xchg mov adc mov test dec push mov out push and pushf and ret daa pop jae pop push push cmpsb push int inc add cli inc ljmp push in shl leave sbb (bad) iret lods sbb mov sbb mov pop aaa jnp xor lea in js lds les bound cmp fbld jp popa ss aam sbb and pop std dec and hlt fnsetpm(287 stos mov addl ret mov enter outsl icebp scas and outsl dec out mov loop mov shll lret sub inc imul sub xor (bad) cmpsl mov dec cwtl mov cmp cli subb mov mov cmc jo call dec mov mov mov inc sub mov or xlat sbb pop imul add dec mov sar in jb dec (bad) mov or add jge add cmc ds xchg and int3 mov lret in push test inc adc push cmp out fcmovnu lahf dec cmp sbb ret sbb push push ret jmp mov adc push in nop mov rcll push fs xchg cmp movsb xor pop mov jae lds fnstsw mov pop xchg dec movsb xchg (bad) ja call imul (bad) cmpsl pop or aam out pop ja cwtl (bad) or push nop mov pushf jns outsb jno cltd mov jp jne pop jge fisubl sahf dec adc sarb fcomp mov xor (bad) ss scas pop and push call or negb fabs test aas jmp sar (bad) sti sub inc adc mov lock rep mov lahf scas lcall leave imul sahf xor leave jl out es lret pop bound sub mov mov or jo (bad) je xor loope popa or scas xor mov ljmp int push fnstenv call test les dec push xchg mov cwtl mov mov in shrl add adc mov add xlat lea insl inc out aad sarb popf mov test inc fimull movsl and (bad) xor sbbb shrl ret repnz cmp jnp push ds out inc push or jp stc add movsl enter leave sti jmp xor ljmp adc adc mov into inc call xchg cmpsb mov (bad) insb fcomi jns mov push and arpl sbb cmp out xor (bad) imull pushf push mov fisub pusha lret shlb push lahf and pop and test mov inc shll mov and sbb (bad) in lock dec cmp scas xor cmp fisub (bad) fistpll push pop and bound ja inc shlb push popa pop dec sub mov mov dec stos inc jle dec jnp jo mov xor or jb dec data16 xchg repnz call cmc in lret cmp pop aaa mov (bad) js test dec xchg xchg mov xchg into in int3 sti rcll cmp ret mov mov jg cltd mov push in push cmp mov inc aas aad movsl jne push insb mov add cmp cli add cmpsl leave pushf lahf pusha or jmp dec ror and push and roll jb jle imulb icebp clc roll fidivrl xchg jp push adcb out inc addr16 int3 test adc inc out push loopne or sub sahf and call xor push adc into dec mov adc push mov addr16 lret lea mov std aad dec data16 lods pop cmp xor pop dec sarl stos outsb (bad) imul pop push shlb bound cmp repz sbb in je mov or mov mov mov cmp int3 mov add jmp mov add jecxz jp (bad) lahf mov xlat jecxz add jne arpl cmc lods lds dec in pop mov and (bad) jmp sbb sub (bad) insb or push adc xor xchg icebp daa pushf mov outsl out or xor push jo stos inc std test cld push lcall jno testb adc outsb hlt sbb pop dec cmpsb popa dec mov incb fdivs inc call arpl cli rol xchg dec addr16 fisubr push cmpsl jle stc xchg js mov pop (bad) fisttpll pusha popf testb lret mov push mov mov jbe mov ret adc add std xchg (bad) xor sub dec inc out (bad) cmp sarl mov repz stos or fdivp scas fmul shll rorl lds jnp push jg gs push dec in lea cmp jp jl adc jecxz and jo mov lods scas icebp sbb xchg mov imul inc add pop fidiv sahf loope mov pop (bad) cli sbb mov push jae and lcall xchg daa xchg movsb mov cwtl je fs out add insb pop dec or cmp je mov cli jne in arpl fsubrs shrb dec xor pop push ret jnp std or in div fidivr and push aad insb ja inc ficoml jecxz add pop dec (bad) mov scas cmp (bad) dec cltd sub sarl insl dec scas (bad) hlt int3 inc inc pop push pop aas movsb por loopne daa dec inc (bad) xor bound push push add dec xchg adc ljmp adc fcmovnbe imul or mov sbb test cwtl push sub nop xorl addr16 mov in mov or push inc xchg jo xchg sub aad push lods arpl cld repnz add (bad) jge jmp (bad) jb mov and out stc ljmp xlat cmpsl cmpsb sbb fsubp cmp daa cmp sub inc mov or imul sti lods neg inc icebp into adc mov inc lret add roll xor dec sbb cmp (bad) cs lahf int clc mov sub js jae rcrb aas sahf push in pop xor aaa (bad) (bad) rcrb xchg inc xor and push sbbl jbe js adc xor gs jns lcall clc or mov sub pop roll fidivr in and enter mov push adc add lds mov popa xchg (bad) pop ljmp aaa or xchg stos xor sub jb or (bad) icebp mov mov cmc fist sub xchg xchg pop (bad) inc sbb outsb or (bad) push sbb nop push pop push sub jge ret fwait cmp std pop adc int3 jecxz arpl add out pusha in jl and push repnz push xchg dec ret sbb cmp mov rcrl ds lcall insb rolb push push sti push push inc lock pop mov inc mov jno addr16 adc imul sti fidivr and jmp (bad) xor imul adc mov nop inc inc xchg lea jae fnstenv mov sub jne (bad) lods jbe fucomi or mov das cmc clc xor mov iret cmpsb jp mov sub inc pop mov xchg dec add (bad) fldt xor leave ficoml mov jbe cmpsl scas ja cwtl ljmp or int popf sub push adc cmp mov mov sahf jge xchg adc mov xchg adc add (bad) lds or test je outsl clc pop enter sahf mov pop ds cmpl movd sbb iret stos out mov mov (bad) in and pop imul (bad) adc mov inc les sub pushf jg rol mov or bound jge inc dec adc psraw movsl push inc xor mov pop xchg sub push adc pop (bad) lock rcll inc dec pop xchg jnp xor push jmp xchg test (bad) cltd mov pop push add stos aaa mulb (bad) xor jns lret sbb jecxz jb xchg gs adc sets push lahf test mov cli fnstsw loop jae int3 lods push and cmpsb mov add mov addl add and cmp movsl movsl jecxz push sub jg and (bad) mov sbb sub mov mov cltd das mov lods dec and sub lret in rorb xor adc addl jno mov divb iret sub hlt loopne sub imul lret int3 mov add ljmp cmp lods loope js sbb inc jae adc pop subb test fmull divl ja inc les pusha jle sbb (bad) flds pushf push add enter insb out mov (bad) xor leave (bad) lcall mov mov pop adc xchg jmp popl (bad) xor lret mov mov sbb enter or fcoml and dec in ret fstpt (bad) mov mov repnz and adc aam inc sbb outsl push test jg lret fcoms stc or pop imul mov xor nop les sbb je adc mov mulb dec cwtl add xor daa jnp mov rclb mov (bad) sbb mov fisubrl mov popf shr push pusha lds or and cwtl mov add dec mov sub rcrb rolb push in dec pop js daa repnz gs xchg sub (bad) shrl jns imul lds push push ret dec inc fwait jmp lcall hlt int loop frstor aaa mov stos push lods ja out mov mov inc pop out (bad) inc cli pushf jge out and jae cmp jo push rclb in negb pop xchg cmpsl arpl inc inc mov pop mov xchg test sbb cltd xchg inc cmp add push lods in into cs je mov (bad) xlat mov pusha cmpsl cmpsb iret roll stos jecxz mov adc sub inc xchg je enter add jo mov pop aas lds ficoml and cs fdivrs lods into mov lock (bad) out cmp cmp (bad) push roll adc push cmp (bad) pop stos (bad) push imul lcall pop push cld fldt mov push inc icebp mov popa mov std mov das addr16 push jecxz rclb es mov xlat test mov ficom ljmp ret ret jne nop pop jg jp or mov movsl stc (bad) gs ds cmpsl dec jge test enter call and dec add pusha neg out mov loope iret inc movb add lret dec sbb mov mulb jb ljmp xor sub outsb cmc mov rcr jnp push sarb cmp xchg add and xchg pop inc push faddl push inc add mov ss test fisubrl cwtl mov mov mov fwait lods loope jns dec sti mov inc sbb xorl stos dec ret stos add mov jl inc in pusha jle xlat push push add leave ret insb (bad) (bad) in jecxz or xchg loop xorb pop mov jae xchg xchg push fistl int xchg aas enter mov sub sub test ds pop cld fucomp push test (bad) aam popf out xor sarl or and in cmp bound aad cltd rcll mov rsm bound sbb icebp popa jp fwait aas or test lahf jl jno mov rcrb xor mov in pop jmp movsl xchg mov sbb pusha out pop sub mov push in dec inc xchg push daa stc pop cmp sub int ret xor into orl pop test pop push mov hlt cmp sub divl imul cmp dec add test popf xchg add loop xor cld inc pop xchg inc xor nop push lods mov sbbb and inc lcall out js dec (bad) inc js cmp fldcw fidivrl lret add jle out and ja mov xchg aas sbb pop push jg mull pop xchg test fldt (bad) mov jnp inc xor mov stos mov inc or mov loope dec out lds (bad) insb mov and and adc xchg dec fsts inc xchg add or push sub mov xor dec (bad) adc pop mov loopne add cltd mov push out daa in sub sbb data16 add sub addr16 insb and (bad) cltd xchg mov cmp pop mov push imul (bad) xor xor mov jae inc jo gs adc stos cwtl (bad) popf mov push (bad) jecxz xor push sub movsb mov outsb dec insl inc mov mov (bad) fldcw (bad) lock fcoms xor fs movsl lods mov das mov jb dec xor (bad) lcall push mov div pushf mov repnz push xlat add js inc (bad) sub into push ret pop or mov mov iret in (bad) mov ss jo ret cmp rcr cld pop outsb mov mov frstor rcl sbb mov imul addl mov dec aaa popf cmp aas pop cwtl sub jge adc xchg mov lods mov pop mov cs inc jb mov pusha nop sub push lds push decb xchg int call imul and (bad) xchg xchg cmp js pop xchg jg icebp jbe leave sbb test and push pop push xchg inc pop xchg adc cs push jmp push adc fcmovbe mov cmp sbb test hlt pop cmp xor cmp test arpl enter adc test gs jg cmp fprem pop cmpsb jb in and stos or push sub in push clc loopne mov imul lea rcrl mov aad divb bound xor (bad) dec outsl ss xor (bad) pop push ret cld or in cmc repnz and push aam insb jbe aas ficoml daa loop add pop dec (bad) mov scas cmp fdivr dec cwtl sub mov jp push mov scas jecxz aaa xor cld inc das xchg (bad) ficompl iret sbb aas xor imul ret repz xor out push cmp fldcw fstpt lret adc stc dec out mov pop mov sub and sub or insb jmp je xchg push pop cltd adc mov push inc xchg outsl adc adc xlat sti repnz sbb fwait test aad pop call (bad) jb mov or and out clc jmp adc pop insl (bad) push aad out push pop notl dec sub popl sti cmp jl ret adc (bad) or repnz push adc mov xor jns in and xchg imul bound into cld sbb mov push mov insl int adc mov ja or popa dec push rolb out mov lret xor icebp punpckhdq and js cltd test out jne xor or mov sub push roll fnstsw in and (bad) push adc adc add sbbl xchg push jne je (bad) lods mov (bad) or lret (bad) das divl mov clc cmc leave jnp lock rcrb jns push fst sub into inc ret sbb test negb inc lds std (bad) push out pop cmp sarl dec inc sbb jmp or sub sbb std push adc int3 loop bound add out pusha in jl and push repnz adc dec ret dec or push cmp lea rclb cmp (bad) jge imul incb add int out into add mov xchg push jmp cmp and aad les push rorl or test sub ror fwait xchg jno stc jle mov push sub push inc lock aaa pusha push fdivr mov xor mov rcl imul aas pop es mov fisub dec (bad) insb lret ret into cmpsb jns mov sub push mov xchg dec add repnz enter mov in xor lods and cmpsl scas ja xchg ljmp or int3 sbbl int3 lods mov mov add test mov (bad) xchg (bad) mov or jne in arpl repnz lea dec cs les cmp adc sbb jl repz pop out push mov aad icebp ja push fistl jecxz inc push pop sub or lahf cli inc ret scas fdivrp or push rol mov mov int3 outsb inc sbb inc dec adc pavgb movsb push inc xor mov push xchg sub push adc pop (bad) lock rcll jnp das iret push ljmp cmp cwtl mov pop push add test mov and adc (bad) xchg call inc add (bad) sub mov xlat sub mov xor dec (bad) pop aad ljmp add push mov ret in pop movsl movsb jecxz push sub jle and mov pop jp sub mov scas or shrl aaa pop daa out lret or addl jo mov cmc xor cmpsb cmp fbld push icebp mov sbb mov sahf cmp loopne ja sbb mov adc inc jo call cltd push jne,pt lret jns aaa imul and ss test lcall out hlt rolb fidivr and mov mov sbbb push cwtl (bad) mov pop adc add xor lret mov mov sbb (bad) xchg inc pop or fcoml and jmp fidivrl (bad) mov mov icebp scas and adc rcl inc sbb jle lret xlat adc or push push jmp jge lahf fwait cmp movhps frstor divl (bad) scas jno pop dec xchg add xor add and in rcll arpl pop std sbb mov cmp loope pop push xor dec sbbb je mov and xchg mov add popa loop dec mov sub mov (bad) sbb js es sahf movsb cmp or test js push add push ret lcall push bnd mov loope frstor ss test out mov mov inc pop out fcmovnbe inc stc fwait jl out and jb cmp push rolb push jge cmc pop mov popl inc mov push xchg xchg test sbb cwtl xchg inc cmp add dec lods in int aas jae mov mov mov dec xchg xchg mov fwait shr mov out test jae (bad) mov mov mov pop les fsts and cs pop into stos int movsb adc out lods popa out cmp cmp aad (bad) mov ret mov out xor jns mov cwtl les sub leave scas dec pop mov sub cwtl and and addr16 mov popa mov test adc mov ret cld xchg push aam leave outsl lea lret stos arpl pop fcom repnz pushf sti push inc sbb (bad) icebp mov je (bad) push jle jp or scas fisub push adc loope dec jl cmpsl cmp (bad) cmp sub mov cmp shr dec out (bad) popf jp outsl mov fnop mov or and jecxz push out jle xchg mov and sbb push leave cltd push inc scas lods dec ljmp lret in cmp test and rolb jno add std xor cmc sub cmc je imul jne scas dec add add sahf cmp jne cli mov inc sbb adc sbb gs roll add fdivrl in pop jge xlat addr16 inc jns dec add cmp pop xor inc sub adc xchg xor (bad) adc jg cltd data16 inc mov add out ja inc (bad) push fadds (bad) fcmovb pop push insl (bad) leave in mov fwait add jle subl xchg jcxz subl pop outsl shrb mov mov adc inc push aas test cwtl rclb outsb mov push stos popa push dec sbb pusha jp lcall test out xor jnp jo mov rcrl xor xchg sub push xchg aad inc fadd jo adc subb sub mov ljmp sbbl adc fistpll adc mov cltd out (bad) cld cmp mov movsb jge xchg in pop push out or pop daa ja data16 cmp or imul and jmp pop (bad) xor push add cs cmpsb movq inc push adc xor insl loop fisubr cmp addr16 mov lods dec inc lock pop pushf jge pop push sub sahf add dec mov xchg add out mov xlat xor fs dec stos bnd lea dec cs jno cmp sbbb jl hlt enter idivl push add fistp int fistpl in add lahf cli jo mov cld lds fidivr lcall ljmp outsb or jge inc dec inc in lret movsl adc loope sub enter and pop inc add dec ret ret cmp je aaa pushf pop test jp ds xchg daa xchg mov andl inc inc pop or cmp and and lahf sub xor push test add lcall sub xchg int3 cwtl fs (bad) imul mov sbb xchg pop cmp ja sahf xchg jg lock enter jnp movl push arpl fwait test leave xlat jle movsl cmp cmp jno pop sub jo push stos mov in scas divl pop xchg jg lock leave sbb jnp enter (bad) cli test gs jecxz fdivrs movsl cmp in pop mov and jo push stos or mov scas mov addl aam xor cmc popa and in jmp mov iret in mov (bad) sub test xor (bad) pop push mov outsb add mov out and dec rcll imul fstps loope add dec les aaa cli pop inc sub fdivrl mov adc mov lods pop into lret pop mov jmp push inc fisub pop jg push and inc lcall out xor dec (bad) add cmp imul add lret adc lods dec in mov pop dec xchg jle dec sub and popl pusha mov ljmp cwtl test mov push inc outsb mov mov bound aam adc pusha jp fwait cli icebp inc sbb aad or jl jno xor xor and mov fistl dec (bad) frstor sbb aaa pop cmp sti mov push sub loope cmp (bad) rorl cmc jb cmovno outsl repz stc xor das and push jecxz rclb es sti sbb dec cmpsb mov xlat test mov ficom ljmp ret dec incb outsb pusha out mov subb jae in fs imul or je xor stc repnz pop sub shlb cmp mov jmp scas mov pop jge push adc mov pop adc add les mov mov sahf lds add stos ss sbb cmpb mov div fwait jp xchg push mov (bad) add js inc fnop sub into push ret sbb addl pop lds (bad) pop push out pop cmp sarb dec inc (bad) ljmp add cld bound in xor in or jmp dec adc ss adc test lods dec push push mov cmp mov iret xchg cltd xchg sub cmp pop mov push push dec push push stc sbb push ds mov jae (bad) jo cmp gs loope pop adc andps mov fs and cli loop xor jmp int ja adc mov add mov scas mov sti mov sub loop pop rcl adc and pop data16 mov aad in xor imul adc test jns mov nop inc inc xchg mov jae fnstenv mov jecxz cmpsb or (bad) lods jbe xchg jmp das cmc clc lock sbbl leave lds xchg adc xchg shrb ss (bad) cltd sbb mov or out mov xlat out sub dec xor ret fsubrl pop adc sbb or in cmc repz fimul jbe inc ficoml daa loop add pop or scas hlt sahf or cmp sti add jle rol mov jmp mov inc inc sbb push aas movsb pminsw loopne es inc (bad) in mov push xchg adc rol inc out dec xchg adc das dec adc into push and xchg xchg aam and lds mov fdivrs nop cwtl (bad) insb dec popa gs and adc xchg add push sub (bad) int adc (bad) daa dec push sub jmp mov mov dec (bad) int3 aam mov loopne add push mov shr in sub pop jge and pop mov data16 clc repz scas or sub and in ss sub movswl add orb pop adc xor xor movsl aaa and sub into std sbb mov and mov sub or lea ja addr16 or add outsl popa dec or inc inc cltd out mov lret cwtl push ss out repnz xor gs xor out jne in mov repz in fcmovbe inc clc fidivr in and enter mov push adc add sbb inc inc mov sbb lahf mov sbb fistl and jb,pt (bad) aad and lods icebp mov inc scas pop test paddq cmc xchg xchg (bad) xor leave mov mov jp sbb xchg aas push or cwtl dec stos aaa int3 sub jb jmp fidivrl aad lds and mov loop inc fisttp stos sub mov rcl inc (bad) push outsb leave adcl clc pop lods dec aam nop push push call jge lahf fwait cmp push pop adc fsubl mov fstl (bad) scas jno pop dec xchg mov add and jp mov iret adc pop std sbb mov cmp popf xchg addr16 or test push sub push inc lock aaa pusha push xlat cld mov xor ja loop rclb movsb and mov cltd mov movsl cmpsl mov insb lret ret mov fnsave fs sub shrl dec mov jg dec enter jb jecxz xor lods and cmpsb push mov cmpsb dec in mov xor or mov iret ds mov mov pop jl xchg adc sahf dec adc lcall sbb inc test pop movl les inc pop cmp dec inc and imul inc cs std ficompl iret rcll aas xor push lcall dec xor out push cmp fldcw xchg mov xchg pop adc mov stos mov pop mov sub and popl pusha mov cmpsl mov ret jmp add lea jbe outsl lret xchg out aam shrb sti icebp popa sbb mov icebp mov jae or lds jmp adc (bad) cmp jl out (bad) cmp mov push sub (bad) outsb lret or dec dec (bad) pop aad ljmp mov iret push mov ret in pop popa movsb loop push out jle and js pop jp jecxz mov scas enter inc (bad) stos dec and pop aaa push daa in lret ret subl bswap addb pop cmpsl cld jo mov hlt xor cmpsb cmp fbld push lods je mov add movsl ja xchg add loopne ja sbb mov aas jb adc push jg negl fs test mov add mov jbe inc ret inc mov data16 fdivrs js xchg add pop cmp lods loope xor sub adc adc das mov (bad) sbb and inc cwtl data16 inc icebp mov ja jl inc in sbb inc xlat addr16 mov enter insb (bad) (bad) in lahf xor lods sbbl sub loop subb mov push mov push xchg xchg add inc push aas test insl push xchg sub sub test ds pop cld cltd cmpsl or into (bad) sarl out xor sarl or and in cmp bound aam movsb and jns and pop stc mov push daa fs mov dec ljmp clc stos cmp test lret adc les xor test (bad) cld lock add dec mov sub jl fs (bad) sbb js daa repnz gs xchg sub (bad) shrl xor jmp push subl aas outsb or xor jp int loope frstor aaa jno data16 ja out mov mov inc pop out fmull mov and jae cmp push sarb push jle negb pop xchg cmpsl bound add hlt das je mov inc mov jnp sbb push inc push cltd sbb jnp repz mov lcall ja push fcmovne sub int3 inc rcrl lds jbe hlt lahf cli inc ret scas (bad) les add sbbl jmp mov outsb inc sbb dec por loopne movsb push inc xor mov push xchg sub jns rclb sbbl dec rclb aaa mov mov into xchg test imul (bad) cwtl mov pop imul cmp pusha dec xorl aam sahf cmp inc outsl bound and pushf adc push xchg cld addr16 cmp cmpsl testl shrl cld cmovae xchg xchg stos pop cmpsb (bad) repnz cmp jbe popf nop push jle jp movl push adc loop dec jge cmpsl cmp xlat cmp sub mov dec add or fsubp scas mov loope mov mov lret dec sbb mov mov divl ljmp xor sub outsb cmc mov inc je rcr aaa pop push sarb or cmp xchg (bad) xor rclb faddl push inc add ret ret jae ss push test xchg daa test mov andl repz or fsubl rcl sar out je dec fcoms push (bad) add and jae ss cmp add xchg daa ss jl adc int mov lods pop icebp lret pop mov call dec inc cs and ja pop (bad) test push les in dec add std inc dec push xchg js sub (bad) jmp or cld scas pop sbb xchg xchg cmp xor pop nop jle lock enter jnp movl adc dec xchg aas fs xlat jge movsb cmp jecxz push mov and jo push stos or sub in push fiadd iret addb mov and in adc aad fisubl dec mov sbb sbb mov and lret dec inc xchg imul fnsetpm(287 out int3 stos rol in ficom int ret add (bad) cs mov repz mov sub cmc popf daa jmp lret insb aaa xchg add js dec mov scas loope xor push xchg cld xor into (bad) adc addr16 jg push data16 inc cltd inc rolb mov xor inc addl fsubrs fnstcw ret sub xchg loop sub and addb loopne pop mov ljmp xchg mov mov mov pop les (bad) and sub incb into stos mov out lods popa out cmp cmp xchg adc imul sarl aad cmc dec out dec push data16 push sub cli xchg jno cltd cmp sub sti fisubl inc lock repnz xchg cld pop clc xor and js jecxz pop rcll pusha and mov movsl mov (bad) test jle dec mov adc bound jne shrl pop pop jecxz jno mov pop cmp pop xchg pop jo dec pop add add pop xchg pop mov push pop xor pop sti pop push pop or pop rcrb pop pop pop adc pop js mov adc pop in sub pop push pop mov pop and sub lds pop push pop rcrl pop push pop sbb pop movsl pop int xchg pop scas pop cld pop inc pop fcompl pop xor pop add pop out jmp minps pop popa pop mov pop add pop gs inc pop push pop xor or pop insl pop hlt pop test pop jecxz pusha pop lds pop (bad) pop test fstpl pop aad sbb pop sub pop bound pop test pop int3 pop cmp pop fistp pop push pop jbe xchg pop dec pop and pop xchg pop cld pop pop pop pop pop push pop es dec pop cli pop cmpsb pop xor pop mov pop loope bound pop push pop outsb pop push pop aaa pop lahf pop mov pop (bad) pop pop pop js xchg pop negb pop and pop gs (bad) pop int xchg pop ficomp pop es pop pop inc pop hlt pop das pop sbb pop xor mov pop cmp pop rcrl pop push pop out add pop mov ret pop in (bad) pop pop pop leave pop xchg pop pop pop sti pop dec pop fcomps pop ds mov pop rcrb jge sub pop dec pop adc pop in pop lods pop dec pop dec pop cmp pop xor pop pusha pop xor pop out pop sbb jle pop pop sbbl pop rcrl pop std pop outsl pop mov pop jg sbbl enter and pop mov pop nop pop push pop das pop pop pop lahf pop clc pop lods pop mov pop lods pop pop pop mov in loopne insl pop sbb pop lock dec pop std pop pop pop rcrb push pop icebp pop mov jle push pop sub pop and pop jne xchg pop ds pop pop or inc pop fistpl pop movsb pop pop pop push pop rcrl push pop out pop cmp pop outsl pop mov pop pop fcompl pop xor pop xchg pop sub pop cmp pop mov pop or pop sbb pop and aam and pop fwait pop out imul pop je mov jnp (bad) pop jecxz push pop in push pop enter popf pop jno sub pop jg push pop test pop dec pop push pop or test pop lcall pop negb pop iret pop sbb pop jg dec pop nop pop inc pop mov pop mov pop sub inc pop popa pop cmp pop mov pop or pop push pop daa pop xlat pop mov out pop lcall pop std pop push pop ja and pop pop pop loop adc pop imul call pop pushf pop in pop sub pop jle out pop mov pop negl pop xor pop aas pop and pop test inc pop test pop pop xchg pop inc pop jns push pop lcall pop cmp pop cmpsl pop dec pop imul push pop sub pop daa pop test pop in sbbl pop cwtl pop fs loope jecxz or pop pop pop adc dec pop ss lock push pop repnz enter dec pop sub pop inc pop ficomp pop lds pop pop pop or pop sti pop pop pop and pop xchg pop xor jp mov pop dec pop cltd pop push pop dec pop pop pop outsb pop out pop mov loopne add pop mov pop pop pop pop pop adc pop pop pop pop pop test pop or xlat pop jae aas pop sbbl dec pop push pop (bad) pop inc pop dec pop es fistpl pop (bad) pop push pop mov pop inc pop daa pop add pop xchg pop dec pop dec pop xchg pop jl (bad) pop sbb pop inc pop jb aam xchg pop dec pop jb pop pop enter push pop or pop negl pop dec pop pop pop inc pop rcrl ret pop loopne cltd pop popa pop push pop pop pop pop pop adc pop pop pop xchg pop push pop enter xor pop adc pop dec pop lock inc pop inc pop pop pop sub and sbbl pop iret pop icebp pop pop pop add cmpsb pop mov pop sub pop scas pop sub pop inc pop and movsb pop push pop or (bad) pop in pop adc pop push pop pop pop test pop inc pop mov pop clc pop lret pop add pop fwait pop adc pop xchg pop stos pop (bad) pop pusha pop fs add pop xor pop popf pop inc pop jg (bad) pop aas pop sbb pop ret pop std pop cli pop and pop sbb ret pop pop xchg ljmp pusha sti push dec jne sbb push jae mov fsubl hlt mov (bad) adc shrb add pop xchg clc cmp mov aad es jns cmp aam rorb push sbb pop decl in xor rolb push out outsb dec sub hlt sub mov dec ret out es mov and dec pop iret cld scas inc inc in dec push into jne pop add ja push fidivr adc lcall pop pop inc je bound hlt pop mov mov pop loopne dec (bad) xor inc pushf xlat popf (bad) aaa int3 mov jecxz clc xchg sbb dec ret inc jecxz popa mov (bad) shr sub (bad) (bad) in ss jmp (bad) enter jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std mov and icebp (bad) hlt mov (bad) adc shrb add pop xchg call lods cmpsb xor sub cli jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf mov fstl das int3 fildll ret inc jecxz jno push lock shr mov jne mul mov stc shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fadds and mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret fs inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push add je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov bound add std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret add add mov fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret out push cmp int popf cmpsl dec pop mov cmc pop jno xor mov fsubrp push cmp push and jecxz push mov daa mov sbbl in bound fcmovbe push aad sahf out (bad) jp cs insl mov xor pusha out push mov fbld sub andl andb or lahf fsubrl ret fimull fcoms pop (bad) jno mov sahf or xchg mov movsl mov mov ret mov (bad) shlb ds xchg cmp push xchg add mov cmpl and mov cmp je pusha sarb fimul xchg int pop xchg and and jp lret loopne adc dec outsb addr16 cltd aam lds (bad) fldenv inc iret pop arpl mov xor hlt es sub mov pop and ret and fwait xchg cmp loopne leave pusha xchg sti lcall ret outsb push xchg fdivl insb pop xchg fcompl (bad) nop xchg popf nop jb xor sbb scas inc xchg test cmpsl cltd dec pop fidiv push add shrl fs pop fldenv xor shlb add fucomi stos addr16 test xor int jb (bad) hlt iret in (bad) pop popa (bad) cmpsb inc cmp imul sbb mov orl inc sti push mov jns dec cli mov adc sti xor scas in add enter pop cmp stos and sbb jno lret out iret (bad) cmp rolb loopne subl sub arpl jb xchg ret lret (bad) test xchg mov mov rcr push jge test mov les outsl in stos lcall mov test push jbe decb cmp jne out cmpsb mov dec sarb popf mov int3 xchg in xchg ds add ds jb call and fst addr16 inc push push and movsl dec pusha cli pop xchg call (bad) push (bad) rolb jo iret cmp xchg sbb fbld push sub dec cmc jmp add iret cmc cmp sub fistp mov mov mov jnp cmp cmc add mov (bad) and dec div jno add adc dec call push xchg sub pop loop addr16 ljmp cmp (bad) mov sbb add lret add cld cli sarb adc xchg int3 mov add jne (bad) insb jae sti inc jl adc cltd pusha repz adc movsb fcompl insb xchg push pop pusha add or dec inc mov mov pop push adc sub (bad) in or push inc mov pop test loop outsb lahf jmp mov xor pop add cwtl lock xor push ss leave mov daa mov (bad) (bad) rep (bad) dec std out popf adc add cmp sub aas mov xchg xor mov int3 sub psllw xor pop loop adc movsb loope aam add sahf dec mov sbbl dec add sub mov xor jle jmp fidiv (bad) dec popf call jnp out je (bad) insb arpl (bad) pop shrb adc mov movsl mov lret ss popf pop pop push test outsl arpl inc pusha (bad) insl (bad) or and dec xchg (bad) push out out mov adc inc push das stc dec xchg aaa je arpl cmp pop mov jo dec jno int3 scas or jae ds push sbb jne dec (bad) pop ds test or jmp push hlt movsl jecxz dec sti repz (bad) jns xor test aas loop jns xchg pop xchg arpl cmp sahf pop inc sbb xchg and push test mov movsl ljmp fistpl lock (bad) ljmp push mov fmulp push sahf and push call cmp add jae gs fdiv xchg add mov fstps or ja push push cwtl out inc sbb cli inc shrb ret sbb add ret sar (bad) mov out and (bad) mov ds xor enter jmp push inc int3 push les (bad) out ljmp int jno and std fwait das (bad) mov xchg cwtl stos inc stc js cld cmp mov mov aad jae test mov pop mov xor mov or jno jae push sahf addr16 xchg insl dec pushl imul jbe or and dec addl clc lods jne and xchg xor jns push sub adc and mov mov out or xor fistp int sbb cmp in rclb pop lret add cmp adc inc gs fs xor cmpb dec cmpsb lea lea jecxz seta subb (bad) in mov leave ljmp (bad) (bad) rcl fldt cmp out addl inc sahf lds xchg jne daa jmp dec push mov jnp pusha xorb or jl jae mov inc movsb xor xor jle fisubr int3 sahf adc insl loop push mov dec push inc sbb jge rcrb (bad) dec pop pop push pop mov push call xchg mov gs dec jp cmp outsl aam lahf dec sbbb dec pop imul js jae aam push xchg aas jecxz push les dec mov xor int3 test int3 fidivl les popa inc enter stc mov xor mov mov inc sbb orb jno insl (bad) popa xor inc fnop xchg aaa sahf popf add dec and repz jno xor or cmp add push sbb dec push inc sar stc sub dec pop sti jl test sarl inc in stc jge and shlb movsb int je mov in adc xor sbb inc push movsl (bad) test scas (bad) dec dec dec fucom mov mov gs fild sub xchg jle add cld mov mov (bad) jmp mov cmp push and movsb ja sub dec cld (bad) mov (bad) lcall pop add push out mov ss add or and jae jecxz mov (bad) test adc enter pusha out sti test rcrl xchg idivl mov and daa ror lock jbe out pop inc test fist adc push frstor rcr imul aad and cld cmp in test dec jb cmp and push jno jg sub mov cmp and mov in jns (bad) pop pop add push sbb fiaddl jle xchg sub lret dec add cmp xor cmovns add iret or lea or loop out inc aam outsb push xchg lret jbe insb pop xchg xor or xor cli jb push jle adc jbe shrl mov jecxz popa (bad) jbe xlat shr dec mov cmp push into pop push stc dec mov in xchg in pop add mov arpl in sbb mov cmpsl mov aaa repz dec (bad) adc push ret pop push pushf loope push pop xchg stos push pop arpl jbe adc xor jo jp push add ret movsb jb ret faddl cmpsl cmp js pop pop cmpsb (bad) dec test test or div jo mul loop jbe xor jl mov push xor mov (bad) dec jne ja add scas mov lock cmp inc fisttpll mov mov dec push testl test fildll repnz dec mov jle jae popa mov cmp mov pop stos xchg mov shrb mov mov sbb xchg incl iret adc pop mov or cmpsl push mov lret iret stos pusha xchg sti mov jp add mov xor sub dec xor gs push iret vlddqu or sbbl xchg and movsl iret popa js fsubs sub adc (bad) mov int cmp ret dec (bad) gs dec add cld jno arpl xchg adc push pop jg xchg call daa cs or ja bound pop lds inc pushf test sbb mov addb dec dec movsl aaa pmuludq (bad) jns jmp enter aam fs in ss movsl shll (bad) jmp loopne xchg push outsb ljmp imul jnp dec mov loope jbe,pt arpl sub bound push adc cmc insl insl outsb jle fstpt cmc sub cli or inc sarb mov popa aaa mov and sub test out int jl (bad) inc stos ret xlat cmp dec inc add inc (bad) push push sahf dec dec mov loop repz adc cmpsb xor stc lods rcr push mov xor add xchg loopne adc xor add push xchg call mov in or test aad ja mov pop stc sbbl pop xchg xor stc and ret das sbb and adc enter nop loop popa add loopne and push ljmp cmp jae lock mov lock sub add add and ror push test dec sub push xor fbstp dec mov xor aaa pop hlt clc std mov xor out push adc dec push mov or inc movsb mov push add adc (bad) or sub stos pushl out or out xchg (bad) xor fdivrl or push out jp outsb fwait add mov mov xchg out add (bad) push aas cmp push mov pop in pop lds xor sbb mov hlt jge scas sbb sti add xor (bad) in std stos (bad) lea add andl add adc inc data16 push pusha (bad) xchg cmp push ljmp adc mov pop cld int sub decl xor add mov (bad) fs inc out clc cmp jecxz dec sti repz add jmp pusha cmp stc test push push jb and sbb loop out mov (bad) ja data16 add daa faddl ficoml das ficompl scas sahf les jl jo cmpsb add movsl mov xlat mov inc (bad) mov outsl pop icebp xchg and call clc jo loop call jge xchg dec jp add push or js mov ret sarb aaa int pushf mov jne punpckhwd repz jo je (bad) imulb lea jle mov adc cmp mov mov (bad) ss mov mov sub jmp scas ret jg jo jecxz mov daa roll lock jbe (bad) sub test mov jns mov xchg mov std add pop (bad) jae jmp enter aad out xchg xor outsl push mov lea clc push mov push mov lret ret orl sbb in xor imul popf cmp (bad) (bad) dec mov add dec jmp sub push xor repz stos cwtl jo sbb stos std jno movsl dec clc mov shrb mov ret push cmp jno lds (bad) mov outsl addr16 out lock or mov (bad) xor aam pop in cmpsb mov xchg fistl push out sbb xor pop data16 add adc loopne ficoml mov lods imul seta sti aas add daa dec sub out test jg dec out xchg scas (bad) adc cmpsl (bad) pop insb adc push icebp adc mov pop lock inc lods ficompl (bad) pusha (bad) mov cmp jge mov xchg jg cmp push adc mov pop fsubs lods out pop lret addr16 gs cmpxchg (bad) mov ja lret xor push push leave pusha lea adc xor pop imul adc sbb (bad) cmp add test mov leave enter or mov cmpsb arpl mov das xchg fisttpl push out jle aaa movsb and xchg jb rdtsc dec mov mov je aad cmp aad repnz shlb dec push cwtl adc sub insl jle loopne popa sub pop in ds mov xchg xor jecxz pop (bad) hlt mov dec push iret mov adc cwtl sub nop add add repnz imul cmp pop or clc push xor das aas jmp push push std stos jae sub cmp out sbb sbb mov ss xchg das inc push sbb lret inc xchg je js adc and in mov lret add mov call imul add xor xchg jecxz mov xchg fs add bound mov ret inc inc movb push aaa adc fstl cmpsb popa mov sar xchg xor in mov pop add mov mov xor mov icebp xchg jae fisttpll jmp outsb jae fwait cltd lret xchg pop ja xor pop cmp mov aad popf (bad) std pop mov dec (bad) hlt mov cwtl sahf ret jp (bad) jp mov lret (bad) or adc pop cmp cmpsb data16 mov sti xor push (bad) dec jb rorb fucomip mov cmpsl ds adc ffreep addr16 xchg jb mov mov push sahf mov call inc cmpsl cwtl orl or hlt rcrl jmp adc ss or push int or popf cli sarl out aaa js xchg mov inc icebp stc pop push repz sub dec enter inc pop xchg insl out movsl mov sbb test ret and push popf popa and aad imul inc sub inc sub clc shrb addl ret ja imul or sbb xor xchg cld bound jmp movsl loopne lods adc mov jbe mov insb pop lds mov mov cmp orl aas jmp xor mov push add mov dec fistpl arpl pand sub mov in pop push pop iret ja or jl mov cmp fnstenv fmulp add popa idivl inc lret mov add ja call (bad) out jnp,pt daa test lods push xchg fldl or add sub aad nop and shlb shrb lahf stc imul test lock or aad mov jnp,pt aaa lds xchg (bad) daa (bad) enter sqrtps nop jmp adc mov loop xchg movsl mov xchg jge pop imul xchg (bad) hlt loopne lods adc push push push stc sub pop sbb (bad) push inc sar repz out and push add icebp jmp inc (bad) inc std pop xchg mov ja sub lock std fnstsw jns rclb dec test inc nop outsb (bad) jbe in or mov jle es lcall mov inc adc mov setg jae add scas (bad) icebp lret jne loop inc mov enter sbb and sbb adc fstl xchg cmp dec ret fs inc mov jnp adcl mov sub pop mov jnp loopne sti addps pop mov mov sbb test cmpsl mov aas cwtl or cmp xlat and js clc or out cld inc cmp mov imul jb push cmpsl cmpsb xor icebp jns fidivl pusha rclb out jecxz mov test adc push jns dec jnp mov pop jl ficompl pop and sahf adc jne add mov cmp or or lret mov adc out adc fmulp push xor iret mov icebp ret and ja jne fisubrl insb icebp lea in or call out lcall (bad) mov inc int3 mov insl jne dec jb outsb push pop sub repnz call add push xor lret cmp or (bad) jmp loope pop push jp xor ljmp add jg arpl loopne sub xchg (bad) iret test lods dec jle mov sti pop jb int adc xchg push add adc pop scas mov jnp fidiv mov xorb cmc xchg out or cmp shrb xchg mov ss test js sbb or or and jae iret pushf cmp mov arpl and inc out pop lea dec inc xor mov jo gs sub (bad) sti sbb (bad) (bad) jae pop xchg call arpl push nop test add fucomp lcall cli cmp inc lret xorl fnstsw dec add jbe (bad) mov mov jno cvtps2pd jmp (bad) cmc mov test push jp sub jmp stos cmp mov jae es pop cmpsl fsub in push xor ret and imul clc (bad) hlt bound adc push insl sub mov clc push cmpsb add stos mov imul jp verw sub pop mov (bad) ds cld lret in add xchg push mov (bad) mov cli (bad) push push pop or enter movsb xlat or push mov iret inc imul fmulp pop roll jns and mov add adc daa popf call push das cmp movsl cld icebp or cwtl or xchg xor fdivs cmp movsb push test daa cmp cli out popa mov adc std pop rolb mov fwait xchg nop xlat loop sub repnz pushf mov cmp cmp fnstenv lcall clc inc lock (bad) out js (bad) fcmovnb mov (bad) pop daa repnz arpl decl cltd aam adc lret ds movsb sub jge adc cld icebp push pop mov push jge inc jl aam xchg dec mov jp and fcoml sbb mov push lods ljmp cld arpl loop repz insl sbb pop mov insb pop data16 outsb cltd jno call incl (bad) push xor jp pop in or sub into out lcall mov pop int pushf adc call fldl fcmovnbe aad out sub pop cmc test lock cltd push andl cwtl (bad) test addr16 mov xor xchg ret jb mov (bad) mov sub ret inc push mov fistl loopne repz dec (bad) push bound inc or pop loopne pusha cwtl jecxz loop outsb adc cmpsb pop xlat cmpsb imul mov mov add outsb insb pop mov dec jnp clc out fnstsw (bad) jns push mov dec test scas test scas sahf sbb push mov jle mov cmp xchg (bad) mov (bad) sti int jno lcall out push add mov push inc xchg repnz cmp xor xchg pushf xor pop inc addr16 push dec dec icebp popf mov mov popa daa call cmp in sub clc rorb or adcw mov cmpsl push jg loopne and mov cmp int3 inc xor push out sub js inc push jge lret cmp add adc xchg outsb pop push push dec pop pop iret mov stos mov (bad) out cs stc push adc repz daa sbb sub (bad) and ficoml push cmp push popa sbb loopne xor or test rcr rcrl mov fstpt ret cmp jge fs bswap mov xchg dec jp or jnp repz outsb aam cli aam or or mov into pop sbb lea inc jle lahf inc out push (bad) jle pop sub hlt loope (bad) mov (bad) aas mov mov pop mov (bad) enter mov data16 paddb imul dec sahf mov btr and lock lret cmp (bad) or jne pop call sub mov pop cmpsb xor pusha pop outsb fs xor inc (bad) sti enter inc sub (bad) mov das and xlat mov (bad) jns pop out adcl test adc mov sarb fisttpll add lock push and outsb jo mov adc daa mov scas jbe dec mov out lretw test lret test mov push pop insb loope jnp popf nop icebp or sbb nop icebp or sti cmp aaa into sbb pop lock mov jne (bad) insl cld sub fisubrl shlb loop addr16 mov sahf sub jo mov int3 xor (bad) std ret cmp dec mov push lea or pop jns aad inc mov jo cmp xor xor shr cmpsb jb in mov ret cmc bnd add cmpsl in pop data16 inc dec push data16 mov sahf and or cli sub mov adc dec add cld jno loopne or xor add cltd or pop jae negb dec in jg (bad) out mov ficompl cmp inc movsl mov xor mov ret arpl popa mov sahf rcl (bad) mov dec mov repnz cmc xchg clc insl adc ret imul in out mov addl mov cmpsb jno ret stos xchg pushf dec mov or cmp mov out cmc (bad) sbb add gs gs enter mov push jecxz inc push ja mov aas jmp xor mov inc movsb cmp movb jne add cwtl scas push pop xchg push adc sar int3 push push testb jge in popf xorl or mov push xor mov fwait xchg out sbb cltd add xchg (bad) imul je pop cmc lods mov in mov pop fistp and leave movsb out fsubl dec xor inc imul lods sti lods (bad) push adc in lds int3 daa scas pop pop scas sub leave or and imul pop and pop (bad) imul icebp push mov cmp ljmp jae leave xchg push xor xchg xor insb sub push scas lock js sbb mov stc jae roll movsb mov das ljmp push stc mov adc in push mov add xlat scas mov iret test xor dec cmp inc mov add cld jno adc xor cmp mov lea pop jb call (bad) je push cmpsl jmp movsb ja rol xchg frstor dec out inc ret (bad) popf nop dec les jecxz mov cmp xchg stos pmulhw fsubrl jg movb leave cmp testb bnd out pop adc fistp in pop popa xor imul add rclb sbb or inc in stos inc or sub adc xor (bad) fisttpll mov cli stc add rcrb lea xchg ljmp aam and pop (bad) push adc fld1 and ficompl xchg mov mov ret push popa mov icebp loope cmp jae and mov sub aam jbe mov cmp pushf (bad) mov imul dec dec push sub push les popa cmpsb push imul and push mov movsl sub bound in sbb pmulhw cmc outsb push notl leave (bad) std inc jecxz dec lret mov cwtl adc int3 cwtl adc icebp loope or iret ss lahf jae mov movsb (bad) test das or sbb js sbb lcall rol in aas lods and cli jns mov mov push pop xor mov inc loop jecxz add inc mov repz ret sbb in cmp ljmp push (bad) push lret clc add orl cli popa mov xchg mov lods xchg insl or xor pop nop cmp fcmovnu aad sub movsl xor xor outsb mov outsb sub dec dec inc fwait lahf sbb cmpsl aas cmpsl inc adc pop js adc push mov add rcll mov jge xchg movsb mov cli dec push cli dec repnz sahf mov pusha push add bound test mov jge les sub inc sbbl lods pop xor adc stos imul in mov adc and jp pop xchg xor outsb test imul stos cld lret flds (bad) lahf and cmp sub dec mov xchg loope js mov inc sbb dec mov xchg cmpl mov iret ja mov gs xor fwait cmp jmp cli stc pop lret lahf mov sbb adc lret xor pop (bad) pop cltd xchg cmpsb sub sbbb in fdivrl insl das iret cmpsb imul test cmp sub popa mov pop xchg popf xor lods push scas sbb xchg sbb sub leave xchg jmp pop loopne popl xchg or stos (bad) mov aas lods and jno idivl iret in cmp pop inc mov pop icebp inc movsb cmp cmpsl lret mov ficoml dec xlat xor outsb dec mov (bad) cmp xchg dec adc sbb (bad) out movsb imul mov imul add adc cmp fcmovnu aad outsb (bad) sarl push in pop push test (bad) in lret jo pop loope ret cmpsl cmp or adc inc mov add dec push test fsubp cs addr16 pusha mov out push mov mov inc leave cmp xchg and inc adcb push push or inc push jg not xchg pop dec lods ds cmp dec cmp push ljmp loop or ss or sar or stc xchg sbb lea (bad) cmpsb arpl sti xor mov xor mov push es mov jle out jbe lahf jno out (bad) jp fsubs jne iret imul push arpl int3 ljmp xadd fucom rorl into cld cltd rcrl icebp xchg fildl mov jg or les test test pop (bad) bound pop idivl sbb xchg das sbb cld push or jns or outsb jmp dec lds nop push cwtl in aaa pushf add jl sub jo jae add mov mov mov and fmuls mov cmp gs xchg lock xor sub mov and xor pop push xchg mov inc add jae cmpsb jnp movsl lods xlat icebp mov adc jecxz xor push bsf push movsb pop sub repnz daa dec pushf call scas push push add add xor xor mov jge cwtl lds push shl (bad) xor adc jl dec inc mov lahf test lcall and je (bad) jns adc push adc imul cmpb int3 sub mov mov cwtl out movsb adc clc cli dec loopne dec and add mov adcl or lds jge xchg jmp pop aad xchg lret and push mov push jno mov es repz test iret mov sbb jle and lret jo or pushf mov out rcrb pop fmuls fs repnz cltd shlb mov xchg (bad) push push mov add pop inc mov cmpsb inc xor cmpsl mov nop cltd psubusw inc in push (bad) (bad) (bad) imul mov push xor or int3 push (bad) gs stc popl mov mov and popf mov jge xchg ja add stc sbb stos fmul ja bound cmpsb movsl mov lcall pop fnstenv call sbb sub call mov pop cmp mov sbb push push push xchg mov adc mov loop sub repnz pushf mov ret sbb mov mov xlat mov je mov bound (bad) cmp les fisubr in pop xchg jnp sti mov lods cmpsb aas push icebp in jns dec sbb fildll (bad) lcall enter out ret notb and sti fwait xchg insl insl pushl push int xchg pop or jmp (bad) aaa push je (bad) rcll movsl pop cmp icebp sub adc add pop dec leave fwait push and popa out pop js xchg or in adc or sbb xlat adc and and jg push dec dec jmp xor mov mov mov sub xor xlat mov int3 and fs lcall jle (bad) insl cmpsl mov div xlat iret mov cmc jns idivl add lds repnz ja ret ja mov push mov dec pop xchg jne mov mov das mov pop mov adc pusha mov dec clc scas call xchg mov jae inc je add push stos out pop fisubl (bad) (bad) fsubp mov push (bad) out je or test scas xor fmull mov push call mov rclb fcoml add add xchg cmp fisubr lcall es fcompl pop or mov jbe int fbld decl rcll push test ret sub push aad sarl mov cmc xlat in mov dec je mov cli cwtl aas (bad) lods cmp sub insl idivl iret fild gs aad mov (bad) ss cwtl mov std aam adc sbb jne pop inc rcll add jo sbb jo imul xchg icebp jge jno ficompl repnz loop test sahf adc fsubrl adc adc fild or inc or cmp fdivrl or inc push sub inc lods jns pop and xor (bad) fsubs aam jae jge xchg dec jp mov in subl aam pop jecxz or pusha stos int xchg jno lea push notb movsl lods fmuls push mov mov nop mov out pop movb (bad) mov repz xchg rorb subb movsl and unpckhps or imul lock xor js pop sub imul lods rclb mov insb (bad) dec std out popf into lret cli movsl xor icebp movsb push inc insb pop pop xchg jg cs pop dec push push sub stos jnp and andb add mov and fistp js push push mov enter sahf dec or (bad) mov dec loop repz push test mov mov push lret (bad) movsb jmp je adc neg fdiv mov je ds popa in addb (bad) sub fsub lcall push test (bad) and (bad) and lods fcomps outsb insl push adc add push lock nop (bad) jmp fldl pop push jp xor subl jle call incl fstpt add jne cmpsl add rcll js cmpl xchg pushf pop vcmpsd push adc jnp fildl pop pushw stos hlt scas sahf inc cmp xchg sub hlt adc pop jmp insb push adc jbe mov fcoms push call xchg push mov or std fwait inc lret in push mov pop fistpl cmpsl out cld jno pushf clc ret pop inc leave sti pusha or (bad) xchg mov imul inc movsb in lods and xor lock pop loopne lds xor and (bad) push pop jecxz adc dec cmp mov jns push sub in jl pop test int dec clc paddsb ret nop dec jae xor (bad) ljmp or xchg jmp cmp fimul inc je cmp lds add mov lods popa jne inc out jns ja sbb mov jae sahf movb mov xchg fadds cli or dec jnp popf jbe and fild pop mov repnz popf pop sub or jmp dec stos jge movb lcall cmp sub popa mov cmp ret sbb je fs sub in dec cmc (bad) outsl mov mov pop repz sub orl xlat into sbb push jb jecxz clc inc inc push dec ret (bad) add (bad) rcr jno mov push jne push and ficoml int mov adc mov dec pop sub xor xchg and xor enter push cmp ljmp fild sahf push xchg (bad) sub add imul mov mov sub adc cmp mov inc out addr16 push sbb lret insb sti push sub (bad) incb sbb or mov push sahf cmp sbbl add add add dec lret outsl cmp xlat mov addl add call add mov push jp sub imul iret shlb call jne nop xlat popf xchg pop shr dec int jecxz insl stos inc inc mov movsl push jecxz popa std pop cmpsl xor addr16 xlat dec lss mov xchg rep push aam popf xor ud2 (bad) call out pop push mov orl jp (bad) mov dec push and (bad) cmp pop sbb lcall dec insb clc outsl mov add jmp std addr16 xlat aad mov xor mov jne jmp jle dec or push test pop in test sahf das mov stc sub fnstenv push sub ret gs pop mov dec repz dec adc test jmp cld mov add ret lods push and cmc aaa xor and mov push adc pushf xchg sub test popf cmp inc sbb sbb push xor xchg cltd fisub xchg leave pop push cli mov lds push lret push mov xor pslld jle pop fdivr cmp xchg lock aaa dec pushf add sub hlt pop xchg inc stos cmpsb orb (bad) jne sub aas jg rcll mov nop xlat (bad) xchg adc pusha rclb repz and xor mov push dec jnp xchg push mov xor nop/reserved std push push bound and jle adc sbb sbb dec cs cli push and aam add lahf mov je aad xchg call xchg push push or leave push aad cld cld (bad) lret xchg cmc mov fisttpl popf xlat push push bound (bad) (bad) lahf stos shrb dec and (bad) and add sbb addr16 mov add add clc push or inc leave xchg mov (bad) testb or pop sub movsb lds mov sub stos iret mov insb daa (bad) jb jl outsl int jne push adc popf xor mov mov out xchg jae cmpsb jnp repnz lock mov push mov mov das aas jmp pushl ja ljmp mov or xor out or mov adc aam push ljmp (bad) xchg fisttpl fidivl insl lret cld int int imul aas sti sbb jno les scas or out push cli out jmp cmp nop jecxz jl clc fstpl xlat sub mov stos in push arpl mov loopne mov scas in (bad) addl test add enter call aaa mov push cld icebp jge sahf in xchg pop loope jno push or adc hlt outsl xchg repz mov and testl inc pop mov sub or mov hlt cmp push pop iret pop fs xorb ret jns ja cmp dec and xchg (bad) dec repnz jns xor loop adc jbe sub daa outsb enter popa mov inc or inc push loopne ret lret xor ss cmp iret dec add loop sub jno mov xchg pop dec out push popa mov lahf gs xchg cmc (bad) push in mov lcall xor push fs push iret aaa pop shrl pop imul sti adc aaa ljmp and sub movsb mov insl mov xlat push cmc inc jge rcr fbstp in adc psrad mov lock clc pusha xor fdivr rorl push jmp movsl testl inc js pop fstl call loope add int xchg (bad) xor and cmp sti jae dec lea mov push dec add jb sub inc pop dec repnz jno stc add fcoms sub mull jns out dec incb xor mov mov or inc dec pop jge inc out xchg fdivl sub dec add loop nop shrl repnz rorl (bad) mov jno sbb pushf pop mov xchg mov xchg das int3 xor rcr sbb cmpsl in xchg (bad) pop and cmp addl sbb mov mov xchg mov mov jnp stc push cli (bad) mov push push push in mov jnp arpl xchg movsb ret add test cmp data16 in pusha add flds sub fs imul xor ret int aam xor fisttpl fs les inc (bad) nop out jae cltd xor jno iret std fnstsw or aam das lds jno and ficoml xchg (bad) mov mov sbb out and arpl ffree add ljmp cmpsb clc xchg pop jmp movsl fsub outsb insb inc loopne xchg pop mov out xchg pusha sub jg jmp rorl popa outsl lea das inc or pop xchg test xor push test push fstp jo pop push ja (bad) fs addr16 xchg jns bound fcom push cmc bound cmpsl lahf mov in lret mov les icebp add dec inc and (bad) push sbb push adc ret fldcw inc stos ds mov je rolb jb sub mov jge and loop bound (bad) pop lods sub loopne pop ret mov or inc push loopne jecxz xor ss cmp mov inc lods jge clc test xchg mov mov pop dec (bad) in in fstpt xchg outsl cmp adcl outsl arpl add dec push lret lcall pop int cmp push lods fistl es mov outsb or pop mov enter fs pushl movsl movzbl bound xchg rclb sahf out sbb cmpsl lahf mov mov rcr mov xlat je mov mov fstps jb loopne in mov mov push int3 inc (bad) mov inc pop push xor dec mov pop subl mov into (bad) outsb add arpl (bad) pop pop fucompp les pop push mov or ljmp loope xchg and nop ret test popa xlat adc pop jno negb xchg xchg ret xchg cmp dec sbb test nop sub fstps fnsave pop fidivr inc movsl test push mov pusha jne (bad) jbe add cwtl mov gs fucomp xor push push pop dec in mov pop popl mov push loopne popf inc in adc cmp xchg jmp and jge (bad) incl (bad) fcoms inc jle adc hlt xor pop mov push (bad) xor rorb repz pop test pop push xchg mov sub sahf jne jl pop bound (bad) push lods sub loopne insl inc in push popa ret lds jbe addl cmp jne stos enter (bad) fimul out sub ljmp push adc sahf ljmp push pop dec in adc pop arpl jg jmp leave xor lds dec stos push push xchg push inc inc popf test loope jno lods clc lods fistp cmpsb mov xchg rclb jnp stc jne (bad) mov push push in mov jnp arpl xchg icebp ret and leave add and clc test call add add sub mov fisubr dec clc xor es push pop in sub mov sub imul (bad) lods dec and dec mov add and mov sub or mov arpl mov pushf outsb sti aas leave (bad) test iret jo cwtl xchg (bad) mov mov (bad) sti pusha xor lret sub sub in ljmp test fs mov mov ret scas cmp nop jb push jbe in rclb push pop ret pop adc popa lock fcomp push sub sub dec adc jb cmp sbb fsubs xchg loop ficompl xor data16 insb iret mov push scas push aas fbld push sbb (bad) push jae jns xchg jne xchg sbb mov pop mov inc mov xchg adc (bad) mov loopne jge stos inc lahf mov jae ds sub pop test cltd cmc fstps mov xlat pop lock lahf daa ret or cmpb sahf jnp aaa xor cmp mov clc or arpl movl loopne xchg mov scas push jle jmp adc shlb aaa stos xchg stos cmpsb fbld jle push psubd jmp int3 mov sbb sub jmp cmp fsubrl sub dec shrl jg inc pushf jnp dec pusha dec idivb fwait outsb in test mov mov adcl bound push jno in push xor push mov fild xchg lret popf or jnp std dec sbb sti mov cmp js adc jmp data16 ret in push mov jg dec movsl mov cmc nop rol mov and (bad) xchg test and adc xchg ret (bad) clc test sti rorb inc push mov mov push cwtl icebp fstps (bad) jno pop outsl and push into pusha stc jns push lock in test add in cmp shl movsl ja bound ret pop pop (bad) xchg fild sbb xchg inc shll cli lret test push fdivr inc jecxz movsl test mov mov cli jle (bad) in pop out sbb add and sub dec enter mov jo xchg jo mov cld andl push daa or or sbb test stos mov push mov push icebp cli sar cmp pusha add lds fs lods pop sarl aas (bad) jb mov push jg jp mov jmp into sahf repz or test scas xchg (bad) push jmp push (bad) push xor repz out loop or (bad) fistpl lods ret ficomp (bad) lcall xchg cmp add lcall sbb add push je jne cmp jae push lret pop loopne inc (bad) fistl xlat push push jbe jecxz push pop xor fsubs movsb jo xchg sbb fist jecxz cmpsl out add xchg rcrl inc cmpsb mov or int3 bound xchg andb subb push imul pop fcoms mov repz ja ficompl pop cmp xchg (bad) rorl sbb mov mov mov pop pop stc jno jecxz in jle movl je sarb inc xchg repnz mov clc mov mov mov push pop repnz push aam stc ljmp jle ljmp sub dec xchg fistpll aam divl mov test lea push and sub and aad lea fwait lahf adc test enter inc adc lcall push mov lret jnp push adc insb mov ljmp mov sub xor xor pusha mov add xchg jnp arpl mov pop loope pusha stc (bad) ret cmp cmpl scas push aaa adc cmp mov push jge repnz push dec sahf jl add shll xor adc es roll cmp and call cmp outsl inc jge sbb maxps mov lret sbb sbb ficoml or movsb dec dec mov adc fimull scas aad inc mov xlat adc out cltd jo push rcrb popa and out fdivrl je push pushf lods add push flds cmpsl cmp or fcomps jp xor mov scas out (bad) pusha jne out bound sbb cwtl stos or xor lods scas bswap sub rorb jecxz mov int inc outsl lahf push and mov aas adc addr16 movsb insb cmp icebp inc dec pop sub aas sbb push and xchg lea ret fnstenv hlt inc mov popa addr16 cwtl das mov scas xor lods mov sub (bad) cld movb loopne bound into pop lods cmp clc pop pop aam and sbb mov leave divb jle mov in gs clc lds out pop lcall test mov dec fdivrp push popa mov xchg jle (bad) push in lods testl in ret loop cmp sub xchg addr16 push movsl fistl es stos push outsb or pop mov enter loopne int3 shrl jo sub shlb test mov (bad) out sbb cmpsl xchg mov call (bad) xchg jge ret and push lcall or ret fnstcw jmp pusha pop cwtl sub test adc lret stos and sbb insb (bad) dec bnd dec xor and gs into dec jecxz add add mov jb (bad) inc (bad) sbb (bad) mov (bad) (bad) ds jne jno jmp inc push push and loopne push xlat test lret mov pushf push bound sbb pushf aas mov mov jno and lahf (bad) lea adc push and lret stos xchg add rcll int3 cmpsl ljmp dec out dec inc fsubs std mov iret addb cwtl push fmuls sub jo cwtl mov mov sub stos xlat sub pop mov cmp andl adc push popf lea lock jle sti xor aaa sarb sbb xchg sub test sbb cmp (bad) and or mov fs (bad) pop incb xor lods clc add inc sbb (bad) xchg ret test cmp add test jo ljmp scas mov fstpt jno dec mov scas outsl pusha jo pop imul inc adc (bad) dec pop les sbb mov int mov roll in clc (bad) mov outsb scas cmc ds nop mov add push cmc inc inc push rcrb fistpll adc mov ss loop xchg push out mov ffreep dec stos mov into ljmp mov (bad) dec jp rorb mov std pop push xchg sub outsb imul aad out xchg jle adc xor mov fistpl push or js inc js outsl mov sub add mov adc (bad) aaa mov xchg aam inc jae hlt dec or mov mov das aad stc lret lods cld add sbb les pop adc pop mov loope insl jnp pop mov (bad) insb addr16 add test mov ret sbb fwait pop loopne and in adc add and xor push mov (bad) in mov stos icebp push stos and sbb mov ret mov cmpsl mov jne lahf iret xchg xchg add jl or lahf pop inc iret xor xchg lds movups pushf sbb lds fdivs pop out hlt scas stos inc xchg in mov aaa mov ret xchg push xchg mov mov clc mov xchg mov and push imul jo movsb shrl or mov ret add add inc in (bad) sti ja mov mov insl fs in adcb pop and mov fisttpl dec pop mov int3 js sti mov call pop mov jmp sahf fnstcw decl test dec sbb ss sub enter loope (bad) dec mov ret sahf lret ja mov repz mov pop dec cmp aas mov (bad) adc shrb pop xchg mov inc rclb mov sub adc movsb fsubrs shrb jne loopne test xor aad je outsl jl mov lret sbb (bad) int fsubs fldl dec pop or dec mov stos xor push inc push movsl lret jle stc int ffreep push mov into cld jno out scas xchg mov mov jge add in mov xchg jmp push mov out pop sub mov rcrl jo adc push test mov fwait or mov popa cmp (bad) push sub jne push and jb sub stos addr16 mov popf sbb xchg repz jg lock imul lock outsb pushf add jge outsb sbb es inc shrl gs add xchg push adc cmp mov jno out comiss add add cmp dec clc add cs fst xchg mov pop sbb sub sbb and js fsubs inc mov xchg test ficoml add jg andl mov (bad) lret add hlt jno jmp fidiv sahf mov inc xchg cmp imul mov push push lods outsl aam lahf adc lcall mov call lds cltd pop adc dec ret mov into lods inc cltd cmp adc and outsl insb aaa cltd inc cmp mov imul out loop aas insb int cmovno aad and pop dec inc xchg or ret inc pop pop lods jae in dec mov sbb mov inc push lcall sbbl insb enter sub fprem push in cwtl mov add xchg pop cmpsb dec in xlat inc mov ds test jnp sub cmp (bad) ss sub lahf (bad) and jno jb adcl push push adc mov and xor mov jbe xor clc mov xchg or int jl popf mov mov mov lods out pop daa test push add xor cmp popa push xchg icebp jne sub addl mov lret and inc jp push pusha rolb cmpsl jns and mov xor push call inc (bad) adc fxch mov movsb loope nop jnp mov (bad) repnz inc std rorb ret lock fwait xlat iret or pusha push mov dec dec push fwait pop push sub aaa mov inc lret or fistpll pusha inc ljmp (bad) negl jno lret sarb sbb push jp inc popf push push jae adc lds sub jl push sub xor sbb iret fmuls repz test dec cmp std or into fwait cmp dec adc (bad) pop pop jnp dec and cmc lods mov xchg popf out xchg or ret xchg pop xchg jle jmp mov cmc cmp fbstp sub aad pop cltd mov mov pop mov enter xor out xchg hlt add es cmpsl test icebp fcompl in push das gs xchg cmpsb jmp movsl sub and (bad) test je imul lret daa rcrl outsl test push nop sahf test dec cmp sahf inc addr16 sub sbb dec repz (bad) or mov pop repz sub mov inc sub inc adc imul insl mov cwtl dec cmpsl cmpsb (bad) adc test dec divl ds pusha mov stos sub mov cli and arpl xchg inc mov lock sub jg loop andl sbb pushf push add jo insl mov push aam repz adcl adc inc cmp (bad) jo xor sub ror and mov sub sbb pushl add push pop stos fmuls subl jg test sbb aas dec mov jecxz xor push aaa xor jne jns lds sbb dec push adc fdivrs push add sub jp orl dec add xor cmpsb pushf test jge dec mov xor shrb mov cmpsl add mov add jecxz sbb fucomip sub inc dec cmp cmpsb inc jecxz sbb lea jg xlat stos jmp cld adc lock call insb ja adc push int3 cmp das xor adcb jle lahf dec aas mov pop enter hlt data16 lock xlat mov push les sbb daa xchg pop xchg rorl add out iret and lods test sub icebp xchg mov inc xlat es adc ret pop jb or gs inc add inc repnz fs mov add lods cmpsb outsb pop into mov aam jmp data16 das aas jmp pushl int3 inc (bad) dec add jg jne add dec pop jnp data16 or idivb leave mov ret mov roll or testb sarl jne lret push or (bad) std jno sub pop jno mov or pop and mov xchg jmp fwait scas mov cld adc imul jecxz xchg jb jns sub outsb jmp adc xor and in aaa pushf sbb jl pop les cmp mov imul (bad) xchg xchg xor loop,pn cs mov ret jno and in jp inc xchg lret (bad) decb mov repnz (bad) dec mov dec cltd aam outsl sti (bad) ds mov mov sar icebp popa adc pop push push and dec into stos push mov pushl (bad) repz dec jns aaa fsubrs das lret sahf and movb mov in (bad) rcll xor jmpw pop pop or sbb loope cmc mov in clc cs xor mov mov pop adc fstl das sbb div inc xchg test cmpsl (bad) sbb adc cmpsb or insb aaa cltd xchg pop xchg mov inc push add shlb in addr16 pop xchg stos sahf mov out subb jl pusha xchg iret mov out rorb outsl std sub in xchg (bad) adc sub dec mov lods (bad) xor mov pop jo add pusha shrb pushl ljmp lret ljmp push into pop add data16 add mov sbb imul or divl add add hlt jmp mov into mov nop fstl mov (bad) test pushf dec call cli hlt jae test int jge and or mov ja mov mov fmull push loope ds cmp sub push xor or xchg mov rorl mov repnz xchg fisttpll insl sub mul push lcall mov pop mov repnz hlt mov push inc mov imul rolb aas lods sub nop jp fs cmpsl sarb aas jne jo aad or ja jl inc movsb xor mov andl xlat fistl data16 inc push pop jecxz mov xor pop inc scas sahf lret mov fimull cmpsl in add push push (bad) (bad) rcrl mov loop cld clc adc sbb in adc das rorl loopne sub mov mov jbe shrb in (bad) mov ret (bad) stc mov inc fnstcw or test ret adc push lock cltd fucomip mov pop (bad) jg dec pop mov mov jge xchg in or xchg insl subl sahf iret jne sarb ficoml jno mov movsb add xor pop add jbe sbb xchg call lods icebp not sub cli jns ja xchg mov mov pusha pop stc jl jae pop cmc (bad) out mov push rorb (bad) lret in push bound lock dec mov or mov (bad) in stc popa (bad) add pop mov and or add ja and gs mov (bad) in orl push (bad) xchg (bad) mov aad mov cmpsb dec stos inc xchg push dec dec and jno lds push lock call ljmp add add xlat pop std dec jae inc pop or mov mov xchg lret push and notl ljmp mov (bad) std jge fcompl adc jne pop mov adc fstl pop or fidiv xchg out jns insb lahf mov sub mov lds jne sub and pop or xchg push in mov adc add call imul test mov lretw add std jno out in xchg mov incl mov mov cmp jecxz js dec test lcall push (bad) mov ret xchg or mov jo roll cmp adc push insl or test push xchg in inc xlat and jge xchg sti lds dec insl cli and mov fstl shr push cmp je jl sbb pop aaa push push fbld push cmp sub dec (bad) shrb cmovnp jns les mov sbb cmpsl mov pop in pop popf fwait das aas jmp xor cmpsl movsl lock lret bound pop cmc and mov loopne adc pop jmp add stos popa mov mov and fsubl dec xor cltd hlt sarl mov sub arpl lahf mov cld lahf push and movsl test push test aam sub lcall (bad) xor pop adc es scas dec fldl hlt pop dec ret leave mov je (bad) in les cwtl cmp mov testb or por ret dec (bad) repnz or stc sbb dec mov xchg bound repz xor mov mov mov jmp mov mov in mov aas pop pop jmp xchg sub add mov adc inc fistpl xlat ss adc and add xor cmp sahf push fsub dec test (bad) or test mov sbb cs insb fisttpll add mov stos pop push hlt xor fs mov lock and sbb (bad) movsb ja mov insl xchg into aas xorb dec jno xchg repnz movsb scas leave push pop mov sub aaa cltd sub les xor fcomp fisubr push jmp mov mov cli jne xchg decl xchg and mov add stos inc jae sti loop jno lret (bad) xchg jecxz xchg xchg adc xchg pop cmp pusha repz das xchg or cmp dec aas je mov mov pusha sub jp (bad) sti or mov add mov mov mov lds addr16 xor push jl xchg lret pop mov mov mov push mov dec sbb loop call call adc push mov add lock imul inc stc push les fldl hlt mov ret adc xor faddl mov imul test or jmp xchg jb mov dec add mov daa stc pop xchg lock pusha std sub (bad) mov or cmp add ss or out (bad) test push jle or mov divl push lods inc (bad) sti jae rorb mov div push add inc pop fldt push add dec push push (bad) xlat (bad) arpl cmp sbb dec add aas insl test dec fild in dec add and sti push pop sarl push arpl js sub sahf push push nop sub daa pop out lcall (bad) mov dec pop pop imul xchg jb out jns movsb and lcall lcall push pop nop pop jg mov popa dec inc xor ss adc and pusha lods mov ret sbb test mov cmp pop int3 lods inc xchg lock popa std sub add daa xor pop push cwtl clc sub pop xchg adc std mov adc outsl jl stc xor jb dec mov add mov mov jnp sti scas add inc push xchg or xchg push pop std mov jmp jl scas sahf ret pop in jbe (bad) jle dec fwait sbb repz outsl fisttpll mov push call shrb pop inc cli adc push insl xchg (bad) push in test pop pop pop loopne mov int3 mov mov pop jle inc add dec ret push dec popa mov (bad) xor enter cmp ja push nop inc leave cmp adc (bad) enter mov cmp mov hlt rol aaa imul loopne jg mov inc sbb fisubl pushf xor xor pop push lcall xchg test cwtl cmp js or sbb add pop push xor mov (bad) pop mov xchg fs ffree pop adc jge mov loope subb sbb cld sub jae add dec and movsl fldl pop sub (bad) jno popa loope aaa les add add dec adc pop jmp fidiv test aam cld stc cmp mov fdivl dec (bad) xor pushf aas xor adc sbb test or xchg loope popa jecxz mov cmpsl orb jne xchg psubw push inc mov sub ret sbb jg inc (bad) insl cmpsl aas mov mov sbb lods js in in repz xor punpckldq cmp stc out cmc movl add adc cmp cmp lods cmpsb xor js push out sub mov insb repz imul (bad) mov cmp pop setle je sbb stos mov (bad) inc pop or orl fs xorl (bad) fwait push or enter sub sbb int3 cmp or jb,pt cld dec mov xchg add push jl mov mov in or not int or push rcrl icebp inc inc (bad) daa cmp sbb ficom aas into cs xchg and mov js push lock (bad) fildll push or add cmp pop (bad) xor xchg lock in out insl rcl fldt sbb and fisubr fwait push pushf adc sbb adc roll test xor jnp add jecxz sub dec fdiv and enter inc sub pop dec mov cs xor xlat data16 cltd shlb push push fistpl lock cmp and rclb loopne dec cmp sub add mov mov pop jno jge adc (bad) gs lea test adcl pop movsl movsl pop or add popf nop jb jecxz push dec iret xchg or inc sti les cmp push sbb inc xorl aaa mov sahf cmp mov and loop das cmpb dec mov or dec imul push cmc andl fstl dec or aam mov sub outsl test cli inc xor cmp rclb ds push daa dec mov cs push lret in in sahf (bad) add cmc mov bound sar adc pop loope inc or xor sbb xor jmp fimul dec and mov mov add lahf or jb jae call xchg shl je add js gs (bad) imul lock add fsubs and sbb in push ficomp and sbb call int3 mov jl and ss flds or fwait add in jo dec dec mov xchg pop out push enter sbb dec imul ja cmp mov mov dec (bad) adc clc mov mov mov sarl aas enter mov (bad) ret xchg xor mov andl loop cltd sti inc adc adc and sbb jb neg out pop add orl inc push mov push daa xor or and insl xor xor data16 mov lods xchg loope mov sbb mov mov fs lcall movsl inc js inc (bad) in movsl addb xchg and test mov je cvtps2pd ret imul xchg orl mov out imul jg cmpsl nop xor in mov mov mov push cmpsb push bound lcall (bad) cltd nop inc lods dec add sbb jno mov ds dec jnp sub jno jmp pop in nop cmp jmp inc cmc sbb loopne jge cmp gs pop pop out or pushl movsb test dec push dec add mov lret mov fmulp add std jno pop popa jns popf jno pop mov ret dec xchg popa cs ret push jne fwait dec (bad) pop loope mov xlat test mov xchg pop rolb outsb cmc sahf sbb test xor mov aam jge shr repz repz imul outsl inc dec adc jp sub xchg lods cs inc and cmc add das sub shrl lea test lret pop and ret roll and or jmp cmp cwtl lahf xor push sub jno ud1 pop xchg jecxz aaa mov icebp sar xchg push dec push cwtl (bad) xor lods (bad) or cmp xor aad pop daa adc add and push pop test jge dec jo cwtl js ret sarl and inc mov fsubl cmp adc ja cmpsl outsl xor mov add nop xchg push push out rep in dec bound sbb mov cmpsl fisttpl push inc inc movsl push inc jecxz xor add in sub push mov lea call bnd sbb jns mull xor xchg adc xchg mov lahf enter pop sti adc ds mov cmp adc pop push adc push dec mov in sti xor and jno pop jne xchg outsl push fs jb aas pop inc xor mov xor and sub mov push sbb xchg jle adc cmp push std pop imul xorl sbb fistl mov push call (bad) sti pusha (bad) or pop (bad) pop cmpl xchg out js (bad) push in mull xor pop or stc (bad) xor test lahf mulb cs mov push test ret inc outsb xchg insl jne jnp add sub push mov jl sub or jmp rclb pop xchg dec xchg push mov and adc cld scas dec imul repz aaa cmp dec xor insb mov push adc jno adc das lods cmpsb mov das jb sbb sbb cmp in divb ficompl xlat mov popl and push dec out outsb fwait sub add xchg push xchg add add xchg dec mov test pop push jle sub push cmp and add cmp into cld jno jge insb dec out push add sahf push mov insb xchg mov xchg lahf nop int cwtl ficompl cmp inc pushf mov inc shll inc inc pusha add mov std adc lcall push sub repnz cmp imul test mov xor mov mov movq cwtl xchg or cmp insl shrd xor rcll fisubl xchg scas daa xor lahf jb sti push xchg or mov mov imul int cmp xchg lret in xchg das xor (bad) outsl cmp pop xchg movsb mov add enter cltd xchg rorb nop cmp dec pop mov cmp sbb pop dec leave mov or xchg or pop call cmp arpl mov push mov push out push or xchg mov sbb pop loopne int3 jns xor xchg xchg jge repz cmp inc das hlt pop dec ret adc xor faddl movb pop popa inc lret cmp testb cmp push cmp pop xchg lods inc subb xlat arpl pushf cmp imul jl lods mov and imulb lahf jae std jge fist cmp mov cmp js adc sarb mov std cld push push mov xchg mov loope sub (bad) pop or repz cmp mov and inc in orl mov insl push sbb and or das icebp loopne push imul mov mov adc jmp fdivrl gs setp inc (bad) xor inc pushf xlat cmc nop (bad) int3 mov sbb pop dec xchg in jae call jmp fdivrl outsl xor mov stc xchg jae dec test jmp loope sbb or jo iret fist cmpsb fidivl imul repz ja mov mov or push push sub inc and sub xchg clc imul lods xchg scas into jmp jecxz aas jmp and loop jns stos dec adc mov in std adc add xchg stc jmp jae (bad) push loope lret or xchg fs cmp gs out jo imull mov xor jmp or push sub je push xchg aaa and fistpl sub xchg push rorb dec loope xchg xchg arpl out lds das dec xchg das out pop dec lds and sahf jbe rdtsc xchg and mov popf xor adcl shrb ror arpl dec mov icebp mov icebp loope push std (bad) inc ret ss or and cmp inc stos mov or in outsb adc cltd mov xchg sub mov jp inc lods xchg jge and adc mov lret jne test and jge sub cld and cmp push fsts push popa mov test out pop xchg sti jl enter jecxz fisttpll mov std sub rclb outsb lea nop addl lea std cli loop fisttpll rcl js mov fcmovne pop popf xlat push push jle ret and imul js jmp xor ljmp pop add push dec inc pushf inc leave cmp out fisubl inc dec inc jmp cmpsb push cmp pop xchg mov subl pop xchg mov lcall cltd icebp sahf mov or mov xchg shr add mov xor cmpsb jb add int in movsb aam pop addb add fs (bad) movsb and sbb stc hlt aad (bad) sub pop fisttp jmp andnps xchg mov push test or mov sahf fs push dec jge pop cmp icebp xchg xor sub pop xchg out fs mov icebp cltd cmp outsl push popa jg push fwait cwtl pop pop mov fild cmp or inc das hlt pop dec ret jno push mov mov push pop jg push sbb cmpsl sbb rorb inc std sub int3 ret sbb addb lret jae dec rcrl nop xchg bound and jns (bad) xchg std pop and push imul pop adc dec loopne push scas pop pop xchg inc out enter xchg xchg push mov pop icebp int3 icebp inc mov lret movl cltd xchg ret xor scas ljmp xorl rorb inc sbb xchg in adc (bad) sbb mov (bad) fwait push and xlat xchg dec jp cmp mov add jl adc cltd push pop shll xchg sbb (bad) mov stc and movsl test jns xchg inc push out mov loope dec addr16 mov xor xor pop add cmp lds push xchg (bad) jae aad mov push push jg xor (bad) ljmp add jnp and fistl xchg ljmp mov pop push mov outsb pusha cmp jns or push lret push rorl mov xchg push je jg pop data16 arpl and pop push loope push pop mov mov out pop or fldenv push jl xor pushf mov in mov into jb andl ja enter fwait and imul push stos xchg jnp jmp and add cwtl pop fldenv lret insb jmp inc pushf xlat jmp das fstl and fs mov mov (bad) cltd (bad) or pushf jne xchg push jb mov xor jp xchg ret dec mov adc movsl mov inc scas or scas jbe dec push lret inc sub decb outsb adc sbb adc les push lods div push xlat sbb jp rorb outsl gs stos enter inc das not loop out (bad) mov jo add add mov and inc or sub call into or xchg xlat lahf push dec cmpl add sahf mov lahf mov sbbl jnp (bad) out mov insl xchg sbb arpl test aam lahf and cwtl ficompl or adc fwait push rcr addr16 and dec dec cmp cli loop popa mov sub mov pop add cmc jge add sbb pop push loope dec cmp (bad) gs insl cmpsl out in arpl dec pop mov xchg aad int3 aad (bad) hlt add icebp js call inc std es or (bad) scas mov and cmp loopne pusha xchg cmp (bad) stc pop adc cli jg push movsb mov repz jae fstl sbb or iret dec mov loope pop cmp push mov mov jb in stc sub dec push lock nop and mov outsl sub lods cwtl adc out icebp adc push (bad) sbb in add xchg push icebp out cld push nop test jg xor mov dec int3 aas call ljmp scas sbb rorb mov aas mov xor xchg cmp fs or mov ja adc push mov ljmp icebp push xor js pop bound jne xchg jg pop jnp mov jbe lcall aas lods and (bad) pop jbe lock lahf das push xchg int3 insl and xchg movsl xchg push xchg and push jp (bad) dec adc xor inc daa (bad) mov arpl jmp or (bad) out or lods cmp insb fisttpll (bad) add shl push add push arpl popf arpl dec push push outsb or add mov xor pusha adc push fwait lods add nop icebp or sbb lcall add (bad) jge mov mov rol (bad) addr16 xchg mov in and sub das test pop loope dec daa sub int test mov push clc add jle sub sti punpcklwd adc (bad) (bad) push insb dec sbb dec mov dec cmp cmp movsb neg fbstp out cli aas and mov jp dec js pop mov pop dec mov mov clc mov pop ficompl xchg mov inc jne jg lods pop add hlt and loopne and mov gs int add xchg movsb repnz (bad) cwtl les xchg add or lret mov jmp xchg push stos nop push cmpb sub stos repnz faddl sbb or push push test add mov lea push cmp outsb dec outsl cmc jo or sub nop xlat loop iret adc add mov fadds jnp movq call jg add int cmpsb fadd sahf jecxz ss and movsl cmp jecxz aas dec push insl sub lcall dec idiv mov pop adc mov popa sarb mov daa ja sti push fcom xchg push sbb rorb mov sub (bad) repz sahf call add and fsub (bad) (bad) push jecxz jnp into loope lret les cmc mov inc or cli nop push leave or mov shl adc test lods sub cmp mov imul fdivs das popa cs rclb mov mov cmpsb pop loopne xor data16 movsl mov rorb shlb inc shlb in (bad) dec inc test fildl jo xor add xchg repnz and push inc adc shll sub cmpsb ss mov out ret sahf lret jae (bad) subb rclb dec jne ret jge dec push dec xor jns ss fsubs or insb pop sti xchg jae outsb pop push dec pop fisubrl out xor arpl out idivb addr16 fiaddl out bswap inc jnp (bad) dec xor sbb outsb adc icebp fldt and lcall ljmp dec (bad) xor test add dec rorl into cld jno mov sbb enter add jo call fwait out cwtl pop push lcall sbb and mov mov into xor mov ja loopne inc mov in rclb xor adc cmpsl cmp aaa (bad) sbb or push cwtl mov paddb jae and mov push lods dec (bad) xor cmp lcall push movsl fcmovb fs lcall mov mov pop pop loop jns xor dec fcomip icebp jmp push repnz (bad) adc dec and mov mov into adc repz addl xor pop rcrl pushf push dec inc pop cmp jne iret dec sbb xor push xchg xor nop inc jo call gs pop clc lds outsb arpl imul push lcall jno out lcall sub inc pusha outsl lea and adc ffreep dec lock test mov mov (bad) xchg dec sbb lea add add and movsb xor push ljmp imul cs jns jecxz dec test stc lret out or shrb ret xor cltd aam or in imul mov xchg cli mov push sar icebp pop pop mov push jge jae push lret mov mov jnp xor and fcmovnu push (bad) adc pop and mov lods ljmp xor and hlt shr xor and (bad) and cld sbb fs dec out (bad) push leave pusha and fwait push sbb or (bad) sbb inc or (bad) (bad) gs cmp mov xor push out js mov jecxz sub dec rclb je push jae les sub in repnz push inc shll mov (bad) jae loopne sahf lret ja cmp sbb push add (bad) cmp ss scas jl cltd push stos or bound pop push stc sub jae mov mov mov lahf (bad) jmp aaa aas enter pop aaa xor mov scas push xchg pop jno add xor test xchg aas mov adc add call mov jecxz lret lea fmull lret pushf aas add shl dec or add aaa sarl mov cs movsl ja (bad) (bad) or or dec (bad) xor cwtl adcb and mov lock ret fs out movsl lods data16 andb add ljmp out lret pop mov es adcb test andl in mul xor xchg add js lods pop push adc fnstenv scas mov mov icebp or aad push in jge xor rolb shrl jb jmp jle dec add add add add sahf xlat adc outsb repz add xor pop cmp test jle sub lods cmp jl push sub jae mov scas scas pop cmp push adc pop pop cld xchg test inc mov jg shll sub in lods and cmpsb fldenv int3 adc sbb adc js xor mov jns or mov aam sbb shrl movsl push xor stos (bad) hlt or (bad) xlat in cmpsb dec popf iret sbb fwait dec or addr16 pop add sub jo mov imul shrb data16 clc jnp scas adc fild xchg lret xor aaa cli adc xchg fistl ds popa mov xlat sbb xchg cmp inc sub lods stc push fs clc mov or push push dec pop xor addr16 jmp pop dec push or mov dec mov jmp loop or mov testb cmp inc pop faddl arpl int rcrb mov push and mov mov adc rcrl fldl mov fwait addr16 push mov jle (bad) out sub mov stos xlat nop lock (bad) push jmp lret cmp sub xchg call ss stos ja sub dec adc cmp insl shrd sub and inc repnz pop imull fisttpl repz into push daa xorb sub adc iret sub stos jle rcrb test jb pop or inc dec scas push mul add ss mov loope lret cmpsl xchg sahf test mov stos jp inc mov inc out sbb inc push fildl cmpsb mov out (bad) sti pop int xchg fwait push jae mov sbb add sbb aaa mov rol jnp loop xchg pop pop lds loop add notb pushf (bad) rclb leave mov push fldcw fbstp popa (bad) icebp mov cld xor sub int3 xchg jecxz cld imul dec inc div lahf xchg inc sub ljmp adc es push mov (bad) jg ss test mov lods insl or push addr16 xlat mov (bad) mov dec dec dec mov mulb int jno jmp iret ret int (bad) (bad) mov lcall jne xchg test adc js aam imul push loop push fnstcw pop or pop jno pop inc int pop push sbb in sbbb outsb popa push pushf jbe xchg loope sbb pop out pop push jbe imul scas imul pop aam sub push dec fistl popf pop dec sub inc push jnp push xchg sub pop into outsl push adc rclb xchg (bad) cmc cmp hlt push sub movsb aaa xchg dec xchg xchg hlt fidiv jl adc push cmp mov jo loopne inc xor fmul mov shrb mov insl dec lret loop dec cmp aam jno psllq insb jmp fs neg (bad) loop andb bound dec cmpsb (bad) repnz mov or push (bad) mov cmp cmp push hlt add scas test mov jnp jge ficomp jbe cmpsb pop cmp test adc xlat arpl cs es shrb jno lret sub mov fcoml cwtl pop fs sub xor shrl pop pop jo or jl divb in push xchg dec mov adc jne ss add push adcl or cmp outsl out lret adc cld cwtl inc dec mov lods push cmpsb and push ret dec pop dec add inc xchg xor mov fimull xor add pop jl lock out outsb cmp stc xor jp into movsb insl xchg cmpsb aad sarl or cltd lods and and loop mov out mov jecxz fsts inc push test cmp xchg dec sbb sbbl pop ret or ret mov mov dec or mov (bad) outsl fidivl outsb popa push xchg cmp cwtl lcall push mov popa jp jmp dec data16 or pop jo or add push xchg dec mov sbb and adc cmc pop mov push adc pop cwtl lock aas scas mov ljmp test (bad) ja mov cmp imul pop aas add sub jne jns daa xor sahf rclb jecxz pusha cmp aam jno pop repz or sbb or (bad) loop andb (bad) mov xor inc dec cmpsb scas cwtl xchg adc jae gs mov addl lock ja jge inc in je sbb push or mov ljmp push add jp mov imul push xchg sbb adc je sbb lds adc iret pop pop shrb cmpsl nop out movsb push scas and loopne xchg icebp mov adc sub inc outsb sub mov xlat insl mull scas mov int3 mov pusha lcall pusha repz adc dec add pop nop cs xchg popa or xor (bad) inc sbbl fisub sbb adc notl jb cs aad out movsl imul dec lret push jbe sbb adc xor mov dec inc adc movsb push data16 pop cmpsb jg dec pusha jmp daa or int3 inc lahf outsb jle out dec or (bad) jno repnz push lea pusha mov adc insl or cmp or mov vucomiss or jne xchg and and mov sahf popf sbb cld mov pop or je out dec push push jnp jecxz rclb ss and xchg fsts and pop divb loopne inc pop in in gs imul loope lds inc mov xchg cmp mov cmp enter leave xchg mov inc sbb icebp mov lds daa sarl ficompl or sbb jmp ret pop int mov leave std (bad) (bad) and xchg and call pushf adc shl push mov push imul mov scas mov loopne gs sbb mov inc arpl xchg fild clc bound cmc (bad) xlat lods mov daa adc mov sahf pop sub push popf arpl add ret es cli mov xchg in jbe inc sub mov add xchg mov mov out xlat sbb stos sub mov pusha sbb out xchg lcall ficoml pop pusha repz pop inc test jb outsl enter out push inc iret jle,pt hlt test out push mov (bad) cltd data16 dec lahf (bad) mov xor loop xchg (bad) cmp popa (bad) test je sub stos das mov scas inc daa pop call scas (bad) fldt xchg aam inc jae push or pop pusha inc mov mov sbb pushl dec icebp cmp xor int or (bad) movlps mov push sti cwtl and push std popf lea push cmpsl and das (bad) cwtl pushf nop loopne mov push jbe (bad) mov inc pop xor mov shlb sbb repz roll outsb aas add push sub inc mov adc mov cmpsl cmpb push addl add mov sub test add test ds in sbb es (bad) popf add jge je add es fnstsw stos jnp and mov orb ret jp jbe add std lcall cmp jne (bad) mov push push enter sbb xchg sub inc outsb push dec add aam lcall sub lcall (bad) popa scas mov out gs js xchg movsb cmc repnz (bad) das pop add loopne inc fs bound and rcrb cwtl and or ret das or stos sub ret inc mov pop jo int3 cmp or repnz pop movsl push cmp movd arpl ficoml ss mov lcall sbb add jmp lret ljmp out sahf dec lret hlt push mov aam dec hlt add jmp arpl mov je dec clc pop or sahf fnop push push inc addl out in cmpsl faddl mov jae sub mov cmc cwtl mov rorb or cmp mov or scas sbb sbb es daa mov loopne loope out data16 fsubrl gs sub out pop xchg sbb cmp pop xchg mov fisubr fstl das movsb push test add jle pusha jg mov test and ret cmp and test mov jb sub or ja and hlt lods aas or cli iret jne rclb hlt lret sub dec lock stos out dec ds push cmp outsl cs mov sbb int repz outsb mov and ds clc js das aas jmp push pop push (bad) in dec insl pushf adc sbb xchg and popw in xchg icebp scas mov stos loopne lahf popa fwait inc inc cli dec add or rorb fisttpll mov mov (bad) loope outsl in inc jne jge xchg jg push push xchg or pop sbb inc (bad) and aad addr16 cmpsb out outsl fisubl inc or int pop fdivr addr16 jo or out fwait cltd fcompl push or push xor mov jge sub int dec sbb pop dec imul pop inc jmp loop cwtl lods bound movsb or imul lock repnz or xchg aaa cmp movsb icebp add lods sub rcr pop mov mov mov lea test fnstsw pop adc or lret imul add std leave lds xchg pop fsubs jne pop xor xchg and movsl jbe mul mov jp movsb lahf push int or sub xchg aas cli adc jp add add dec popl pop and add jne (bad) insb addr16 lock pop mov into dec pop jbe rcrl daa les imul movsb pop pop and loopne daa ret mov ficom xchg mov aaa cltd inc cmp call jb and call rorb jnp xor out mov loop xchg repz lret jb ficom xchg movsl mov repz mov mov mov cs repz (bad) lahf je pop aas fbstp (bad) mov loopne lret jle xor or adc outsl sarl std mov je jle pop adcl das loop scas sahf lret or jle cmpsw xchg xchg mov nop js mov sahf pop mov (bad) mov jne push add (bad) adc ja add push cmc ja and sti sub or pop outsl movsl fs pop fild nop push jno (bad) or sub jb lods scas sbb sbb or insl mov pushf int3 push sub add sbb dec adc test xor leave or xor pop adc js lcall sbb dec jae mov mov fstps jne or cmp push adc lcall jmp addr16 in addr16 (bad) jmp aaa aaa popa push mov dec addr16 test lds outsb and lea mov mov popf sub scas xor lcall push mov aaa arpl mov jle push dec dec cmp fwait (bad) loope arpl add mov jae mov insb xchg mov (bad) test sub mov lcall (bad) xor push adc mov fnstsw sbb divl mov xor sti fcomp pop mov in clc mov mov ss mov and and sub mov das lock call ljmp fcmovnu in ret sbb xchg bound cmp hlt add fwait (bad) adc xchg outsb xor or imul or ds inc clc scas sarb out cmp pop mov jle dec or or sbb mov xchg pop fsubs dec clc pushf push popa sbb mov repnz inc inc leave das xchg inc xchg pop inc mov (bad) or mov mov jo push jp mov or pushf push jae sbb sarl push mov push inc pop sub fstl mov les xor (bad) pop lret ret sbb dec lock fldl hlt imul popf adc add sarb and mov xchg sub push jmp pop push lret lock mov movsb push xchg jnp repnz add jo or mov xchg out sub jns inc xor fsubs (bad) jnp pop lea fstl jge or sub fcmovb in xor jnp fdivs jg mov inc or stos and add push (bad) (bad) int3 das pop loopne dec sub add (bad) loopne cltd repz dec pop out out popf ret and xor fbstp mov mov sbb jge rcrb sub add mov cmp xchg aam xchg call xchg push sub in mov or mov hlt rcrl and rorb cld pop dec testl out popa mov jne daa sub repnz std (bad) mov je aad lahf pop test xor inc fnsave popa jl,pn dec mov imul lock cmp sahf scas jp int3 add push (bad) dec jns xchg outsb rclb or ljmp mov hlt jbe jmp pop addb hlt jle sbb sbb clc mov hlt bound fisttpl cmp or jecxz mov (bad) movl testl sarb test inc push lret (bad) movsb cld cld ret insl dec inc push jge sbb movl vpshuflw (bad) push cmp pop enter insl inc faddl sub (bad) xor add inc and mov out jle std in and pop or movb std and mov lret push cs dec sbb jmp (bad) fisubrl lahf iret ss xchg jne (bad) jl jbe cmpsb popa sub lea and es lcall pop jb cmp sub scas jne sti dec or fsubrl pop xchg xor dec push sbb rorb mov sub and add inc fldt loope std adc xchg out stos xchg push sahf mov mov jmp fwait rcll inc xchg and cmpsl push inc mov push call cmp add test out clc idiv push orl adc fmul push cmc add mov idiv rcrb pop mov mov pushf fistpll xor inc ja cld sahf jbe sbb inc cmpsl imul inc pusha xchg mov add and pop push push in pop mov jg jg out or cmp push movsl lret cmp (bad) fadd sub pop dec dec jmp lahf xor cld out les adc leave push pop mov hlt ja jmp ss mov xor in testb stc jb (bad) or xchg (bad) daa sub mov mov push imul cli scas jp fstps repnz (bad) aaa push lods fisttpll frstor and cli push arpl fmuls dec andb fs std pop pop repz clc mov mov mov xchg iret jns pop icebp pop push inc andb dec fldl pop pop into cs mov jecxz lcall pop (bad) ljmp mov arpl mov in fsubs mov mov in fmuls ret sbb inc xchg bound cmp (bad) xchg cmc aad jo jmp ret push xchg sbb aas jg sarl ret nop (bad) (bad) cli jns mov iret cmp lods cmp inc movsb mov sub mov lods cmp pop (bad) jne cmp das or test mov dec dec mov roll in cli mov aad ja add adc cmp add mov mov repnz dec mov sub xor fisttp pop js or lret pop sbb lea inc jle fwait jb fcomip pop xchg inc test mov (bad) and (bad) andb jmp adc pop push stos aas jo inc inc mov mov dec lret push sbb cmpsl out sub mov mov lret push lods in in push mov popl inc jae or xchg or nop sub aas jg jbe or notl scas push popf xor das outsb adc mov jge stos push outsl sub cli sbb divl jne stos or nop push repz push pop iret out cmp addr16 xor mov outsl inc add lcall dec add add sbb jp or cmp out add pop fimull push gs out jg outsb mov cmp adc (bad) data16 ret test inc or sub aaa xor push dec sbb xor lods rcrl aad imul test sbb mov scas mov xchg mov push jmp mov mov mov add sti orl jns xchg outsb insb (bad) pushf cmp dec xlat aam mov push mov jb nop jmp (bad) jnp cmc push mov sarb mov aas push pop push mov test adc insb (bad) cmpsb ret ja mov inc int3 pop ja cltd xchg xor lods sahf dec mov fidivrl cld es lret (bad) mov or rcr push push sub arpl out movl cwtl xchg xchg dec or outsb outsb and mov addr16 sub inc adc adc dec je int3 sbb js les mov pop push lret cs test push mov push or aad jge xchg jmp pop xlat dec add add cwtl aas shlb imul scas out mov adc jmp mull mov xor xchg ficoml mov adc sbb sar mov cmpsb xor push outsb jb jae nop in pusha sarb out icebp rorl rorb std test movsb js add jle mov and adc add xchg mov mov sahf dec loope pop add jnp loop movsb mov aad mov lret add cld and add add mov push dec leave pusha xor fwait push lock test add pushf pusha xchg test cmp push mov mov sub shlb xor aas mov ljmp scas xchg fnsave mov cmpsb aam pop movsl push xor repnz cmc outsb (bad) dec dec adcl xchg fwait dec or add in pushf movsb cmp sbb movsb lds mov jg scas imul dec inc sub aad cs mov sbb (bad) dec mov adc out sub cmpsb pop aad insl and inc mov mov test pop out out pushf xor out lea mov fistl fadds push sarb (bad) jecxz mov adc cmc mov xchg pop dec xorl mov xchg lret inc and xchg int3 je lds inc xchg fsub (bad) jae lcall push push (bad) sub outsl pop call xor fidiv sbb jle mov hlt sub cmp loop call test xchg push (bad) jnp xchg rorl cwtl pop push add cwtl adc and push arpl aaa sub push jo pop stos test (bad) jb xchg sahf std pushf cs lret push movsl fcmovb push repnz pop xchg stos insl stos out (bad) inc adc out out pop adc cwtl pop mov insl push ljmp adc mov clc mov mov or mov adc rcll bound addr16 roll lcall ficom pop cmp imul adc ja scas sbbl out cmp jmp hlt js int3 jo loop or push aaa xchg pop ret mov scas mov sub xor jecxz mov dec mov cmp addr16 scas add xor adc add push ja sub jl in add bound sub arpl sub mov stos cmp (bad) inc std hlt out mov (bad) test sbb pop iret mov or cmp mov fcomi cmp adc push xor dec jnp cmp mov xor xchg (bad) aaa fmuls jecxz mov push hlt add orl jo mov gs mov sub add jne scas add sbb lahf loop ror mov jecxz jns scas aad lea mov pop imul call popf nop (bad) or stos jp das sbb jmp sbb les add and in mov cld mov or adc ret pop add jmp and jnp,pn insb int pop popa push lahf iret xchg je sub imul push (bad) mov lahf push push sub jnp imul sti cmp scas idivb jns gs xchg dec les mov clc push push sbb mov xchg dec jnp mov push scas rcll pop data16 or jg dec test add or dec mov push push or xor cmp ret push mov push cmp add jle adc pop lods xchg loopne xor das push and jnp outsl aam cmp test or inc lds jmp xor add hlt cmpsb lock scas cmp mov push xchg or les mov mov xchg xchg mov addl sub movsl mov rcrb cmp jnp js cmp dec xor mov sahf jbe jae (bad) jno add and stos adc pop adc xor int3 cmp cmp lods inc movsb cmp outsb adc inc fisttpl data16 scas repnz xor dec or adc inc pop repnz inc cmp lea dec fmull mov fdivl jge and (bad) fwait push pop stos (bad) push mov in in mov stos aas pop xor out lcall sub mov out fcoml lods fcoml sahf xchg pop ret adc cvtps2pd lret fistpll (bad) enter mov stc inc in cwtl or (bad) stos addr16 xchg adcb xchg push and pop cmpb lcall or aam daa xor mov icebp cli imul jbe or iret test xor sarl dec out loop adc stc push ret ss pcmpgtw ret pusha push sbb adc pop mov (bad) push jmp jecxz add lar es xor push mov push sahf or cld and add mov mov jle sahf push xchg call dec push sti push or xchg jbe insb pop lcall xor or cltd jb (bad) jb push jne test sbb or pusha mov and jge leave inc cwtl push lret leave inc cwtl xor mov lock outsb insl cmpsl cmp (bad) popa xor dec ret sbb adc cs fwait dec mov lret repz mov xchg in mov ljmp xchg lods xchg (bad) shr xchg jecxz or dec setl fist dec fmuls sbb mov mov adc enter cltd sub mov int dec aam iret shrl loopne and add je xchg inc ficompl imul lret (bad) pushf stos cltd jmp icebp xchg xor sub addr16 addr16 lcall test xchg jecxz ja fcmovu jno movsb sbb pop pop arpl dec (bad) mov popf shlb push ss in rcrb imul add or jle push jae fiadd cmp scas cmp push in inc jmp outsb arpl push mov sub jl and cld jne les adc sub push xlat mov repnz stc popa out sbb mov xchg mov aad insl (bad) jno inc inc xchg les mov and mov mov movsl add xchg xchg ljmp pop test inc nop bound fildl rorb sub inc inc andl push mov mov popf adc fsubr icebp clc sti inc mov addr16 jno fwait push and call jnp outsb je imul test mulb pop adc clc pop inc mov mov inc sbb cli daa pop jmp inc out cmc inc mov add add pop in mov jne test movsb enter test push in addr16 inc sub cmc or out imul lahf lock loope mov aaa int iret es xor push mov ja nop cs adc sti enter jg hlt mov outsb pusha sarb add jge mov movsb mov jle add outsl imul jecxz push loope push cmp or or fucomp mov mov mov fs lret in cmp jae gs cmpsl adc push into fisub or mov out xchg (bad) imul cmc cli sub xchg mov pop adc (bad) jo cs in fisttp jmp popa flds xor inc adc and or push sbb sub inc jmp or ljmp sub jl push xchg lock mov cmp mov jo xor mov sbb adc push xchg sarb (bad) cmpsb popa (bad) ret into jo sti add rcr nop jnp mov mov xchg sub cmpsl cmp (bad) push adc mov inc pop ficompl xchg cmpsb jp rorb jecxz push xor mov mov xchg out pop cmp repz cmp out roll adc mov cmpsl mov lahf mov pop pop stos mov cmp sub mov add out pop adc sbb sub loope mov sbb and mov mov push daa adc jl insb dec cmp mov aas int and or in cmpb add clc inc and imul pop inc mov aad push hlt mov cmp sub push inc sahf sub (bad) mov jns sub ja arpl jmp xor mov xchg mov imul cmpsb mov test jnp ja add outsb xchg pop lcall std jno jmp int3 nop push popa mov cmp mov cld iret into dec andl add mov pop cmp lods and xchg cld or dec test jge jae gs sub insb cmp xchg sti push nop test cli fcoml or or subl xor push sbb scas dec div and pop pushf jbe jnp mov repz lret cmp sbb or mov xlat adcl scas cmp pop xchg pop iret into add test movsb loop dec sahf call cmp mov adc (bad) adc lret cmpsb jnp sub iret sub mov jecxz sub dec fdiv stc testl stos insl pop mov cmpsb loopne jne mov in stos fcomps pop out loop mov lea stos inc imul or adc push jmp add call ret or mov sbb or nop data16 popf push push and cmp inc push out lcall push neg cs pop shlb out (bad) loop das sbb insl cmpsb dec negl fs adc xor mov popa out repz cmp sub ljmp and sub cs adc jg jge pop cmp xor adc sbb cmpsl jne ret mov daa mov mov out ret test adc push dec sbb add pop jbe fdiv cmp inc (bad) clc jae sbb loope sub popf cs and fistp mov es test dec rol push popa mov inc in jmp repz inc (bad) lcall dec iret pop mov test icebp adc pop adc (bad) inc cltd mov adc mov outsb sub push fwait cltd subl lods fs cmpl mov aaa imul sub or inc repz mov fnstenv minps leave aas mov and inc cmp pop jp dec inc ror dec mov push movsl addr16 cs dec push push jle subb jbe adcb add lret push in mov incl lahf cs scas jo or sahf inc ss xchg jnp jecxz (bad) fsub mov adc pop adc aas pushf adc gs sub in mov cmpsb (bad) mov mov outsb inc repz mov add and jg pop addr16 and adc roll push mov imul jns and jl mov cmp pusha loope fwait push sti xchg imull jae test xchg fwait addb mov xor mov dec cmpsl lret pushf inc pop test sbb xor cmp das lahf xchg movsl sub inc jle pop mov add in mov xor push and cmpsl fwait scas adc andl mov cmpsb cmpsl mov cmp int3 cltd pop cmp xchg loope add add ds lds (bad) jecxz xor std les lret in or adc pop mov stc mov roll nop js ja ds push mov jp pop (bad) cmp lret loopne dec sub mov cld and sbb and push adc sbbl repnz cmp adc and mov dec mov adc pushf (bad) out push and stos mov mov mov iret fdivrs jmp jbe rcrl push cld test jmp inc mov jnp fs cmp jmp clc fucomip inc xchg pop mov cmpsb imul int3 lods jns and pushf lea inc adc xor rorl nop je mov mov push pop xchg mov cwtl ljmp pop ret xor jp jb daa and lods (bad) dec mov (bad) adc adc pop push adc out sub gs inc insl push push xor lcall mov jmp push gs stos jae xchg xor adc lret in stos add xchg push xchg icebp ret movsl push data16 push leave mov loopne (bad) mov repz inc add leave sub icebp xchg cltd adc cltd call or sbb sbb sub ljmp in sub mov rcl pop jmp sbb cltd and incl fstl lods fcoms rorl xchg or out dec mov mov xchg es pop in inc lods mov mov mov xchg jae pop sti inc jmp outsb imul xchg enter loopne std jno mov iret cmp loop das (bad) jb int3 push mov sbb shlb lret mov dec or mov stos sub jp scas test or aas mov div verw hlt (bad) int3 rcll mov dec jnp xor and xchg dec mov fildl or xor dec cltd jb in hlt repz lret add cmp adcl mov cmp inc push push int arpl pop push jae sub push ljmp add adc pushf sub loopne xor and popf nop dec push push fstl pop and cld cmpsb jb push test js adc jns mov in daa xchg subb add (bad) stc cmpb jmp and pop inc sbb xchg inc loopne shll mov lds fimull sub xlat cmp out or add fstl mov ljmp icebp xor cmp jb aaa ret pop in lock jecxz arpl fwait xor sub call pushf and jge jbe loop xor mov push popa lret xor sub sbb pop dec leave adcl movsb outsb jecxz outsb in mov je sbb mov jnp or test (bad) iret inc xor or orb shlb in jg add fcompl dec dec xor test push into pop jnp mov stos mov incb xchg roll xchg jae sbb outsb inc ficomp sub ret out dec jb mov xor ret cmpsb mov mov (bad) dec mov js push push pop jae std xchg outsb pop mov shlb pop data16 cmp stc jo fucomi cmp test sub push push jmp outsb sbb and cmp outsb inc nop jbe gs xor popa add dec mov fisttpll and loop cmp jns mov sbb outsl andb divl test imul mov addr16 sbb sub pop or xor movl das dec (bad) in mov add (bad) sahf jbe xor (bad) xchg or cmp add push stc stos pop jnp movswl shlb inc and subb je sbb test lods dec (bad) out mov jl mov rorl jne add gs shrb (bad) jle sbb fnstcw imul mov mov sar icebp sbb mov push fdiv out mov movsb xor mov andl (bad) repz xchg mov (bad) push loope xchg lret or jp lcall (bad) pop insl fisttpll add stos cwtl jbe jno call sti outsb lahf loop nopl (bad) pop cmp pop test sbb xchg es dec jg pop xlat jne mov int3 lcall cmpsb mov jecxz stc and movsb stos push out mov lock dec push adc icebp mov or ficomp push stc stos and xchg adc or movq enter aas xchg mov out stc ret in loope leave fild xchg lret sub xchg sti or pop xchg test jbe (bad) push pop popa mov arpl addl mov push mov imul fldcw stos xchg inc fldt xlat or (bad) rclb add xor adc iret dec jae testl js sub arpl in es push call cmp push mov adc xchg loope jl add dec mov add movsl out mov leave adc arpl popf call jecxz insl mov add lret stos lcall mov dec jle (bad) in popf jge in mov dec fs stos es xchg (bad) mov outsb lahf jmp adc jg dec lods sbb lock insl shrd lods ret cmp xor ljmp xor cmp add sar fsubrs xor aas in test mov (bad) mov stc push and jecxz add add jle or mov js fsubrs cmpsb push lods sub mov mull testl and cwtl or fidivr dec adc mov icebp pop xor (bad) sti pusha fadds maskmovq imull adcb xchg push nop xchg pop out lcall mov and xor push enter cmp in mov mov cltd popa sbb (bad) mov mov xor sub inc fisubr xchg ss leave dec mov movsb push xchg cmc es ljmp xchg (bad) sbb imul mov (bad) xchg jecxz or test jne pop inc rcll daa lret out hlt ja lock lahf das mov cmc lea lahf sub dec sbb xchg adc (bad) (bad) cmpsb pop inc mov cmp out dec data16 pop pop addr16 and mov lcall push add scas cltd lret or xchg xor sub pop fadds (bad) arpl (bad) sbb xchg dec aam in add sub pop mov pop pushf or mov (bad) rcrb jmp push imul fwait or outsb xchg test jnp subb stc xchg cmp sbb repnz sbb lods mov pop bound or aad cmc cmp mov in mov push mov out mov jo lock in daa xor mov stc pop xchg jne sti mov sub sbb outsb pusha xchg dec push jp test lret call lock hlt bound inc fisttpl cmpsb adc fsubs scas cmp xchg (bad) pop or or (bad) mov add xor insl push stc leave push int or and das mov mov cmp add fwait (bad) mov insl stos adc xchg push ret sub cmp repnz pop pop loopne frstor les mov shlb in fstl lods fmuls outsb pusha leave (bad) push nop add add (bad) xor and inc and ss adc jb sub or mov pop push loope sub mov insl cmpsl xor iret mov int mov push sbb mov inc sub sti insb (bad) jns add pop (bad) jne sbb push notl scas push add pusha (bad) mov popf sub cmc mov sbb in xchg mov fstps pop jmp data16 daa fsubrl mov add in popf orl sub add xchg ret pop das mov test int (bad) fwait push jae lods lahf sub mov add mov jge or cli dec adc pop lahf jmp loopne sbb lret lock dec in jle (bad) out imul mov sub inc addr16 add fwait jmp and std fsubs decb subb in popfw pop push jns push xor push outsb inc sub cmp xchg cmc popl std rorb vmwrite in mov sub sbb jmp sbb sarb fmull aas test stc (bad) sub jle jnp (bad) dec adc into scas cmovno and loopne daa lret fbld hlt dec loope test inc movsl or stc inc gs decb push cmp nop ja fmull int lret add jne call dec add jne add inc fcompl or mov cmp test adc sbb sub jecxz mov mov adc (bad) xor mov (bad) mov lods inc or (bad) je or adc push xchg jnp cmp mov mov mov lods dec adc sub inc leave cwtl jb pop out shrb mul add mov jmp cli dec repz out aam or xor sub pop push mov sub pop inc out lret xchg inc das loopne cltd or hlt mov xor dec or add jns lret outsl stc pop mov mov fwait mov ss fistp dec leave jno mov adc mov jl jge add xchg mov push push (bad) iret and cld mov cltd loopne lret push cmp sbb inc jns jne scas sbb jecxz pop add loopne (bad) shr mov aas cmp sbb repnz into lea mov test push sbb adcb mov adc mov add aad or mov sbb push insb adc loope adc ds bound adc jmp fldt lds sti loope mov jnp cs fld xchg sar outsl jbe pop (bad) mov and test not or dec or repnz lcall and adc (bad) fidivrl arpl ss cs repz movsl push nop sub gs lcall sti mov (bad) shlb or pop ret scas xchg push mov mov popa jecxz cwtl (bad) shl enter (bad) jne pop imul xchg (bad) jae popf leave inc jmp outsb cmp xchg movb mov or push fdivr add cltd pop mov push jb sub adc or out jp mov push push sub sbb pop mov out mov sti xor rol dec jb rorb fucomip or inc movsb xor mov lock das fisubrl or or fcomp add xor sub sbb ret or jl mov sbb (bad) aad and push lret stc cmpsl pop xchg xor mov cmp add add sbb (bad) scas mov insl imul or and inc adc into mov sbb mov imul rcrl jae mov mov push out inc nop mov jecxz loop push jge cltd rcll pop jg outsl push jg sub sarl adc or ret das icebp movsl shll xor xchg nop lcall in and mov pop mov dec imul dec fiaddl sub add cmp imul cmp inc sar fnstsw adc int in movsb sarb push mov rorl mov adc add jge sub add (bad) xor scas bound les sbb dec push loopne xchg and push xchg push mov inc shrb mov xchg gs push out and mov mov bound fstpl pop cmc sbb cmc (bad) jo mov jecxz sti and sbb sbb ljmp mov scas mov sub ds or loopne and mov dec cmp xor dec nop jae negb mov sahf dec jno push fs pop insl popf add int3 (bad) or push (bad) jge aaa push xchg pop cli out mov adc les mov jns ja ds jo ret ljmp push xchg mov mov test inc fistpl xlat repz shll (bad) cmp xchg std into mov cmp xchg imul pminub addb bound daa test arpl add (bad) mov cmp call popa xchg sbb and mov rorb pop imul xor imul cmc jecxz and adc movsl pop mov inc mov pop pop jg imul subb pop test cmp addr16 into adc loop sub insl cmpsl cmp mov out mov push mov add cmpsb push sbb ss movsb icebp adc mov mov ds ficompl repz jge xor mov jp mov mov icebp sub movsb inc sbb stos jne mov pop fistp in mov xor (bad) (bad) push add divb mov mov mov sbb and xor push call mov jge pop fwait repz sbb aam sbb pop cmpsb pop cmc and fs lods fisttpl bound int3 xor add jmp dec sbb nop or sbb movsl mov push in mov mov sub push cli add dec pop dec jmp daa repnz cmpsl push cmp pop xchg insl mov insl and out ss inc int mov push or cmpsl test rorl fsubl sub fmul orl inc sahf dec into pop xchg inc data16 mov nop sub add xchg lahf das imul pop fnsave cmp pop dec clc adc mov sar call test xchg mov imul lea lfs aas mov xor (bad) dec cmp shll xchg mov jge iret fisub es jae sub add mov imul sbb je dec cs xor lret dec lea (bad) xor adc xchg shrl dec sub adc rsqrtps sahf test aaa dec (bad) add pop test aas stos outsb lahf in xchg dec jg pushf jg icebp pop divb inc xchg lock xchg sahf add jg js andl mov mov out sbb xor iret sub inc and in (bad) dec jb pop cmp mov pushf mov ds jnp mov jo out enter inc dec xchg cltd fisttp add repnz les cmpsl xlat or inc insl loopne fmull cld add xlat mov mov and add adc adc test xchg mov loopne int3 jo inc loopne ret scas aas cmpsl inc div lret mov sbb test sub fwait inc jecxz movsl lods (bad) xor pop movb fimul pop adc dec (bad) enter (bad) std xor mov lods mov ss inc int nop adcl sub and lret and or pop xchg test jbe ret push pop popa adc cli jns xor sub cmp push enter inc das lret pop imul test fstl (bad) repz sbb cmp cmp and out xchg or or mov jmp mov cmp inc rclb pop inc sbb jp cmp sti or lock lock mov mov scas jns cli dec jno test (bad) jmp popa (bad) notb mov mov jl cmp int rorb loop cs inc test xchg sbb inc adc sbbl mov cmp mov cltd dec lods hlt xchg outsb movsb mov add shlb push repz jnp xor mov jp mov sbb push fist sub add dec cmpsb mov jne call inc mov push pop fsubrs xlat fucomp add mov jbe (bad) mov add push inc or aad into cld es enter add jae cmp push jmp outsl mov sbb pop pop mov pop mov dec pushf xlat jne sbb xchg mov push test xchg xor jecxz add mov jne pop push cmp pop lea addr16 mov pop loope fstps cld push (bad) mov mov out rclb push mov loope (bad) and enter cmc add or pop push inc sbb xchg or mov mov lods cmpsb pusha adc mov sub icebp decl pop inc mov (bad) stos sub jecxz and inc mov push (bad) and pop cmp push lods ljmp mov and xchg shr xor std (bad) rorl lcall rcll incl aad (bad) fwait mov add stc popf jge outsb aam mov push rcrl mov xchg pop cmc jb mov sbb test ret iret mov xor fs fst mov mov ja lds push ds xchg enter lods jle in pop loope scas sarb nop loopne adc xchg (bad) iret cltd pop aad shrd sub push cs inc pop and xor mov decb pusha cwtl jecxz in outsb adc sub sar pop pop sub jns out mov bound repz jp cmp push dec lds push sbb (bad) jnp jne push lret sbb or rcl add in push bound mov or mov popf dec lret xor sub fs mov add ja lret in xchg fistl push add fbld cmc push jae (bad) cmp mov je mov repz repnz or int fldl jg fstl movsb mov movsl scas sbb ret adc pop sbb jl popf gs ficoml enter mov loope fsts imulb xor push dec xchg call mov (bad) std test push add test push adc cmp sarb and out jns repnz ds pop aaa scas lea add add push push push repnz stc adc pop into mov jg mov push outsb cmc adc ret loop xor cmp push popa lret arpl jge dec inc sbb jg lea dec rcl add adc sub or cmc mov lcall cmp pop jno je push incb fs xor sahf clc int jle int3 inc popf xlat popf nop notl lret outsl fwait cltd test dec ret fs loopne fildll pop lock cmpsl ror or push jae xlat in test xorl (bad) enter add adc andb cmpsl mov ljmp out push mov xor ret xor rclb xchg mov std jle dec aad lock pusha cmp ja pop mov jle lea pop call jb sub mov mov mov jmp test fsubl (bad) mov add pop (bad) jmp dec mov add inc add mov fistpll inc mov sbb call jb out ss xchg shr les incl cmpsb mov dec pop loopne lds rcll jb xor xchg movsl lods xlat sub movsb in mov mov flds sub loope jl in ss pop pop lahf dec es std repnz mov loopne sbb xchg ss mov rclb jbe mov adc jns (bad) ficoml mov adc daa jmp xchg xchg clc mov xor lods cmpsb mov sub mov cmp xor stos and mov mov int3 xchg pop adc fsubs mov fisttp pop cmp test dec inc xchg (bad) out push out xor popa decb jbe call cmp add pop pushf push jae popa mov (bad) jno mov out dec incb add add sbb movsl lock jbe and jmp mov sbb mov ret ss pop or lods sub mov cld lret jne (bad) std inc (bad) mov stos addr16 push mov xor and or fsub rcrl repz xor inc sbbl lret (bad) push repz movsl rcrb xchg xor fdivrp icebp fmuls out repnz jle or mov jge mov call push icebp sub ss pop dec jnp popf xchg inc pop fistpll cmp fst cmp fwait xor mov pushf in pop push adc mov pop inc add subb aas pushf adc pushf call outsb outsb xchg (bad) push aaa jae imul fdivs test rcrl jae fstps inc ds (bad) xlat popf rcrl out mov push sti clc lock ret xchg mov jmp push mov andb cmc mov stc inc (bad) mov mov int unpckhps xor test sar imul into xor mov test (bad) push out lahf jle fild xchg lret add aam sbb aam mov push mov dec mov sbbl sub popf mul xlat add xor fcoms in int mov mov (bad) sahf ret addr16 popf lcall adc outsb into lret orl (bad) imulb pop rcr xchg ss pusha pop mov dec insl push popf xor or pop jae out aam mov xchg and aas xchg jmp faddl mov mov jle push aas hlt inc arpl add inc mov xor xchg flds sarl mov mov test sub mov pop loope fldenv and in jl mov out sub aaa aad xchg sub sti clc rolb jae or rcr dec lea sbb test adc adc mov xlat jge mov aas jmp push push test push (bad) testb ret lock sub fistpll (bad) cmp out int3 mov clc (bad) pop rclb xor mov sbb iret fnop insb (bad) ffree pop push out add dec xor test xchg inc dec (bad) cld insb sarl outsl fnstenv dec (bad) fidivr out out sub inc jecxz test inc or (bad) (bad) fucomi dec ss fnstsw into mov inc dec jno (bad) fs and pop ror (bad) jo ror int cmp stos (bad) data16 (bad) jg xchg push xchg jecxz and jmp (bad) sub push lret lea imul test cmpsb pop fsts cltd xchg imul repnz jmp or fsubrs aad push (bad) scas ror push mov ljmp inc movsl sbb fldt jnp and in xchg lahf xchg fs mov pop sti leave and and pop pop stc cs push lcall xor dec lret pop call out or subl mov (bad) aaa adc xchg lock popf inc fmull repnz mov lods push inc mov sub lock jecxz xchg out ss cmp add mov rcl or out gs into in xor mov inc push fisub adc (bad) push movsb push cmp push cwtl mov daa lds add pop push jl mov push leave mov mov jo push int3 fist (bad) jle popf mov gs mov jno xchg jle adc mov dec mov and mov sbb pop or jge and mov inc or xor pop and cmp add movsb in cld fnstcw mov mov sub and xor subl in sub out sbb in fidivr int3 inc into pop adc (bad) fistpll sbb test ret into icebp add aas repnz xor adc test add movsb add push outsw (bad) inc in pop mov xchg mov xchg inc rorb fisub inc cld sub mov lcall push and adc sbb jns add fldl ja iret adc add or sub movsl mov xchg and ffree and bound repz mov jae sbb push cmp adc cwtl or ficom inc loop xor inc pop (bad) gs divl cmpsl and pop jg inc out rorl pop daa mov push mov lahf cmp add sbb bnd xchg xchg adc repnz or daa dec mov lea sbb test rolb sub pusha mov in mov (bad) sbb and mov dec psubw pop les mov pop popa ret sbb xchg out pop (bad) lea xchg ret or xchg mov sub mov lret (bad) cmp mov and mov popf fwait jmp sub popf (bad) jo sti out cld jb push mov xchg mov (bad) (bad) std repnz jge addb mov out jbe pop aam xlat xlat pop mov sbb xor rorb fisttpll mov repz outsb in jae je sbb in nop test jmp cld cmp cltd pop fldenv int cmp dec popf xlat popf cli jbe xor fstpt ret jo add roll shrl or cmp xor pop push je adc leave add jmp dec lock popa fwait add mov mov push aas in and push test dec ret mov inc je dec ja lods xor (bad) xor jb (bad) clc std mov xor outsb sbb movsb sarb aaa dec jbe add jge and (bad) sub mov sub (bad) pop pop xchg cmpsb or scas cmp push push sbb iret dec jnp (bad) mov mov mov in jo pop syscall pop lret iret inc test cmpsb lods adc push ja dec (bad) fwait cmp movsl lahf cmp adc push stc jne push inc movups pop pop or mov (bad) xor lods xor bound or stc or sbb pop xchg or or mov cltd xchg pop xchg mov jnp add shlb fadds (bad) pop and cmp lret ja ds out cmpsb je je (bad) mov mov shrb and xchg jno mov pop aad cld mov out mov lcall aas scas cmpsb xor sti xor in dec mov add sub aad push mov stc es jle repnz sbb out aad jne fsubl iret aad mov dec mov jl xor dec lret xor xchg lret enter ja push arpl push sahf mov lret and test push mov inc cmp fcomps loopne rolb inc int notl and push push stos adc lret stos push pop pop call push add and cmp out dec and mov push push sub or mov repz xor sbb jbe mov cmp inc lret fs ret pop push adc clc cmp iret pop lods cmpsb mov cld add or cmp sahf out mov push jg sub fs nop cltd sub mov sbb add sbb pop aaa push icebp xor add insl (bad) cli adc lea xor int3 dec andl push jbe and sub add mov mov pop fwait push clc data16 out cmp sub loopne dec pop pop loopne neg adc inc pushf fcomps pop jb mov sbb cs inc jecxz ljmp cld das add xchg subb ret adc in or addr16 data16 lcall imul mov lock loopne xchg xor jnp cltd dec imul or lret pop dec rcll jbe sbb jne ja lods dec mov jge sbb mov jecxz cmp jge mov adc out lret mov mov sub in and or int cmp cmc notb repz sbb dec insl fisttpll add fwait outsl pop lret (bad) xor cs jmp mov ret mov psubb test pushf (bad) ss pop and cmpsl ja mov imul fcomps mov bound sbb test ret (bad) (bad) or push mov mov jae (bad) in mov aas ja dec sub jmp xchg testl (bad) lret inc stc icebp add fldt jl jne or sahf mov icebp js decl out xchg mov out adc movl aad pop cmpsb jns xor in inc (bad) fisttp incl sub dec push xchg dec mov add cltd sti inc sbb bound push sahf das add mov dec and push je and mov add cld cld enter mov cmp lahf mov push xchg jae (bad) imul (bad) lds and inc mov loopne mov adc xor and rolb add inc iret fcomps dec xchg mov fstl mov les popf lea in mov adc jle dec (bad) enter jmp ljmp add push mov repz stos lock test bound movsl cmp jecxz mov (bad) aam inc jge sbb imul test lock pop outsb pusha cmp pop cmp (bad) push xchg mov fstps clc pop test and js ficomp ja jae (bad) push xor lret mov lods mov arpl dec xorl cmp dec test icebp dec inc mov jbe addl mov call push jecxz lcall (bad) stc adc insl mov dec xchg xchg cld mov clc js (bad) sbb or or sub fs push shr sub cmp adc lds je fmuls aaa pop test push stos outsb lahf std dec mov jg test leave mov sub push fcoms cld rorb fsubl insb dec daa xor lahf jb adc xor pop add sub pushf lock ljmp das jle push orl arpl loope (bad) push jnp add sbb adc mov xor cltd dec mov pop aad testl sub cmp mov icebp cmpsb jno imul cmc mov xchg push les loope mov in popa add fs and (bad) notb (bad) mov fs pop jge jb out js inc xchg sbb sub inc adc xchg pop and idiv mov in mov xchg pop xchg mov inc test stc rorb sbb sbb add aas pop ljmp mov (bad) xorl pushf xor or xor sub mov std pop add pop ret repz add mov repnz cmp cmp xor mov xchg mov fisttpl jle fimul call add add cmp push sub fsts inc loop js stc mov and cwtl jle fwait cmp inc mov ret loopne pusha ja push int mov or push add push sbb or les int xchg pop enter cmp out shl push inc xlat movsl pop dec test lahf push outsb (bad) mov (bad) cmp andb fsub icebp inc sub stc shlb bound cs mov icebp mov icebp loope adc adc lock inc loop jle adc stc push jge aaa or (bad) and cld in mov dec cmp jge push inc roll sub addl pop mov pop push mov xchg mov jae imul jbe fnstsw jne pop pop out out or and test xorl pop in repz gs mov jbe mov ja icebp xchg mov cmp sti mov loopne sahf ret lcall subl lcall shlb lods repz (bad) dec in scas mov fsts jle mov adc add lret in hlt push xchg ds movsl lds sbb or addr16 or jg mov sub mov imul jnp cmp sbb hlt mov push xchg lods sub enter xchg clc dec out adcb aad xchg out repnz ljmp xchg jge and xchg (bad) sbb fistpl and popf (bad) popa js pop fsubs (bad) pop mov stos jmp fmull (bad) mov movsl mov cmp ftst ror add cld jno sub sbb adc add or int jecxz push or in adc mov mov test iret jmp (bad) mov xchg (bad) jno sbb into jp aad jecxz adc (bad) shr repz fs in lds enter jg pusha in pop mov cmc out ljmp out adcb mov xchg bound or xor xor or icebp cwtl cld out push cld pop sti lods lods sarb test movsl (bad) add xchg stos push jp pop pop xor cmpsl push adc pop xor mov xor (bad) in cltd sti inc pop mov pop dec test xchg mov or add inc test xlat sub adc mov out imul pop aam movsb cld sbb jg mov pusha (bad) fwait push lock clc loop xchg (bad) xchg push pushf or nop push popa jae mov movsb cmp fnstcw lret pop jl adc and fdivrl (bad) xchg push jecxz add ljmp fbld mov cmp clc cmpl icebp push dec xor icebp adc push inc ret sbb inc adc and (bad) sbb stc lock sub subb xchg and sbb (bad) aas jg mov nop shl cli jns ficoml jo icebp stc sti add xchg or test or decb inc mov inc sub pop jecxz jbe pop aam lret add ficoml jae popf mov dec andl cwtl je fmulp add cld repnz clc je enter roll fistp ds out dec xlat stc outsb push jnp repz push nopl pop lret and adc in and or out adc and out movsl push xor and cltd fidivl xor enter adcl xchg push gs mov sbb hlt into add js movsl shl rorb not hlt mov xchg ja inc jg inc dec into adc pop xchg nop xor jmp test ja jbe sarb cmp mov cmp push xchg mov into mov add ficompl pop jmp jbe mov sub adc pop or jmp les divl jp cmp or cwtl mov sbb xlat jge cmp add push adc jle imulb push fisub and movsl ja sub or jae rcrb lret stc sub in mov aaa pop jmp pop push aad (bad) xor (bad) out insl mov (bad) out adc clc dec and inc leave xchg fwait dec add imul sbb adc lahf imul sub or icebp dec lods dec sbb add test fistpl add mov (bad) lcall dec icebp call aad gs xor pusha mov (bad) and (bad) (bad) sub loop adc push dec adc std mov xor sbb dec movsl add pop (bad) mov push push enter jge icebp add mov rcr mov push cmp add cmp outsb popl mov mov insb out mov and in mov pop mov sub mov or and inc (bad) and test jp cmc inc jecxz ljmp cld and scas cmp jg orb enter xchg adc mov icebp mov hlt loopne scas xor xchg dec adc das push xor repnz dec pop xor adc lcall cmp (bad) das pop xor sub xacquire lahf xor cmp lea clts aaa cmp insb xchg enter out sbb add pop jno add jecxz cmp mov or pop arpl (bad) or test movswl fstp xchg (bad) cwtl in pop cmp jnp and jno mov or xchg lret sub jo arpl sub movsb jle or add fs prefetch pop mov popa popf nop stc mov xbegin inc push test cmpsb stos cmp mov mov mov mov lds push xchg rorb lret jmp jmp mov subb mov mov enter xor out push jmp and popf je,pn xor fcmovb imul lods int3 xor test repnz sarb aaa dec bound xor pop leave sti lret and sbb xchg mulb test cmp or repnz aas dec int3 jp bound fdivs (bad) jge cmc xchg cli (bad) lds sub popa test gs in mov xchg adc adc (bad) lds mov rcrb cmp jecxz rclb pop mov pop adc jne divl or push sbb dec ret cmpsl mov movsl push xor stos or xor sbb into cmp add fnsave (bad) icebp inc jmp sub lock fldt sahf iret cmp imul ret cmp push lret xor popf mov fstps clc mov in jns js cmp stc adc lahf (bad) jmp xor add rcrb adc std mov jae sub (bad) pop setb mov hlt xchg aaa insb mov jecxz mov cld mov out push in xor popa scas enter mov (bad) sti into out add imul test pop in push jp inc (bad) jl mov test or xchg sbb insb sub and jecxz insl xchg lock mov push cmp add inc mov lds sub mov sub in repnz mov dec inc loope rorl adc inc add sbb jne inc shrl mov (bad) push inc and mov mov pop (bad) ja or jmp xor add lea dec push mov push mov cli jnp (bad) dec adc cmp mov cmp xchg dec mov xor add insb jbe mov loopne cwtl nop push pop mov (bad) pushf jno ja icebp xchg loopne test popf mov (bad) mov insb jmp fnsave repnz js lcall push dec xor popf lahf lock and and aas dec inc jecxz popa (bad) ficom xchg inc cld mov sub ljmp js icebp (bad) enter andl popa push mov fmul cmp lret jns mov jns cmpsb pushf (bad) std in push hlt dec (bad) jbe daa jge loope loopne out loope add insl inc jnp jmp jnp loopne mov mov jno cmpsl xchg iret rorb inc add sub cmp movb mov mov sbb nop push bound xor add inc inc pusha scas sahf mov roll ret mov test cmc (bad) dec or mov aaa fsubr movsb fdivr sti pop xchg xchg fldl hlt (bad) push outsl cmp les pop cmc and popa and sbb and and movsl aas xlat or add xor push andb xchg idivb jecxz push stc inc pop loop add imul stos outsb and insl jmp sub stos jmp xchg into mov adc add sub hlt test adc cli lods push (bad) sti jbe sbb out aam hlt cmp lods cmpsb xor (bad) cli jbe in outsb pusha push inc orb jge pop mov lea push mov fldl fsubs hlt faddl dec cmp adc jo or outsl and sbb sbb lcall les xchg pop push fcom clc mov cmp adc fwait push lock cld loop repz xchg decl sub cli jmp lahf sahf sbb sub xor sar idivb adc sbb test ret jbe add mov out (bad) shrb scas dec jge (bad) mov fidivr push stc xchg test and pop add movsb addr16 or jg call (bad) cmp jbe add xchg jae mov cmp cmp or or lock mov or adc pop js lods cmpsb data16 mov sti xor xchg (bad) dec jb rorb fucomip dec adc mov fnstcw repz (bad) (bad) fnstsw xchg mulb fwait mov out stos xchg push out out or cmp jle sbbl jnp adcl repz push lahf in out cld aaa push das mov fcoms dec add int out aaa jae lods out mov xchg or cmp movsl cld leave out pop or in fstl sbbl fst push cmp or cmc and lds adc jb mov add dec and add fs add scas (bad) sub mov cmp outsl sbb imul ja cmp gs popa lods pop test jb xchg sbb add inc pop test aam cli hlt scas mov jecxz nop (bad) dec jb pop int mov ret sub cmpsl dec mov (bad) sub xchg pop out sub fsubs xchg mov out xchg push dec hlt jo movsl imul jmp jno and into cld repnz lods je mov mov paddusw mov ret les add mov (bad) mov add add adc jmp (bad) lahf stos pop stos push push dec imull daa sbb mov jge and enter jg (bad) (bad) addr16 dec enter fimull lcall xchg xchg jge pop out jns sahf iret fild mov loop out mov scas (bad) hlt mov in popa lods pop insb adc xchg pop mov cmp test push dec jns pop adc jne mov jo dec push push push (bad) loope push adc add adc fwait sub push dec pop in arpl adc mov and dec mov add or sub andl int rcr add aas mov pop cmp mov cmp xchg call outsb xchg sbb pop mov push fs or mov (bad) and mulb in (bad) hlt and cmp out arpl call scas int cmpb mov pop mov dec or lret add push movsb arpl sub movsl or ret push mov jmp aas movsb xchg add movsb icebp sbb push icebp mov push fidivl (bad) xchg or aad outsl mov xchg lahf das imul mul push add jno jae (bad) notl repnz test mov test dec pop cld adc mov add out dec dec pusha scas sahf sbb loopne dec mov or xor xchg and dec mov cli cmpsl sub push mov out (bad) lea jl jge (bad) dec out imul jnp sbb adc cmpsb (bad) jne mov int3 testb int3 aaa cmpsb cltd xor sbb hlt pop and int jns jecxz ljmp xchg pop fiadd push jp cmp test sbb pop loope inc pop or mov sbb lret (bad) shrd stos ret ret xor lret test xchg adc lahf and inc cmpsl cmpsb xor stos arpl dec fildll loop loope jge mov clc inc sbb xchg and add (bad) pop adc and (bad) (bad) ret push int add imul leave out inc xchg mov dec dec iret clc cmpsl pop xchg sahf stos cltd sub push insl cmp or push cltd insb iret imul icebp add adc es dec mov sub and shl aad mov fs leave loope out icebp pop lock ss inc mov test icebp jp xor pop jnp out dec in pop loope pop mov addr16 jge pop cmp xor int xchg lods dec imul test hlt add call mov stc inc and fdiv xchg clc adc sarb and faddl adc inc out cmp cmp jp mov out push fild xor popf push stos and fistp ss jmp cmp xchg call fidiv rcrl orl sbb dec xchg and add and fsubrl (bad) add (bad) data16 mov mov xchg push icebp push cld push nop test lahf mov xlat mov pop and (bad) and das xchg ret int out daa (bad) aaa lahf inc outsb inc in fidiv and icebp (bad) lock sub fs or add (bad) dec leave or sub jne (bad) test lock pushf aad clc call or rol or scas jp int3 sbb inc scas ljmp lea inc into cmpsb popa jo arpl movsl mov sbb in mov dec jb loop and jge mov pushl out (bad) lock fstl mov inc outsb repz and mov lea adc and hlt lahf adc (bad) out push in xor push leave (bad) iret cld jno add add insl or dec out push add dec push jle scas mov test push push ds idivl insl pop enter lods mov mov mov cmp cld fistp push jecxz popa popa rcrb fcompl and cs mov sub push jb sub add addr16 lds lods sub cmp (bad) popa dec jno push xor mov cmp jo push cmp lret bound add scas push or pop ret dec adc lods sub ja xchg ss fldpi cmp ss sub xchg dec mov mov jbe enter xor mov rorb cmp xchg dec mov xor jge orl movsb xchg mov and or shrb insl xor jl roll mov test (bad) xchg pop mov mov or jne int xchg mov sbb or push dec sbb mov jecxz loop pop jae int3 rcrl mov mov xchg and lret jmp (bad) leave cld xchg dec sbbb xor jne cmp sbb sub push int3 pop mov mov int3 xchg out cmc push adc dec fnstenv test lods sub jns adc movsb int3 mov cmp (bad) push fildll test push lock add mov jg xchg out sbbl rol dec push aam or and or (bad) (bad) out push out xor and jns call cmp int (bad) lahf push jae xchg ret push into jle mov lds jnp fist pop das orl xchg inc sbb adc imul push push inc sbb and dec jmp sbb ja in sub out js xchg test push add and adc and add xchg mov arpl insb hlt dec das ljmp jnp dec (bad) out test movsb popa leave jp or inc xor js or mov (bad) fs cld enter mov repz test lods fisubl stc jne mov add add out lds xchg inc mov inc aaa nop jns fsubs jne inc xor xchg imul mov scas mov cmp lret add hlt and inc ror nop mov enter cmp into test sub mov and aaa inc add fadds mov cwtl lret cmpsb pop mov jmp xchg or add mov aas jmp cltd pop mov inc js adc ret rcrb repnz stos addr16 (bad) sub loop adc imul jo mov push fmuls fcmovnb mov cmp lods inc sbb shlb sbb inc sti mov insl adc lods cmpsb mov xchg stos gs jecxz jnp dec push mov lock jecxz arpl icebp push lea add xchg lcall add cmpsb rcl stos fiaddl (bad) hlt (bad) fsts aaa dec dec mov push sbb rcll push mov fsubrl push add ja or lods cli rcrl cs cmp movsb orb xchg sbb test ret push int3 aas nop cmp xor dec add mov in jecxz ss jo (bad) mov imul mov mov or imul pop xchg and out sub into cwtl pop mov lock cmp and mov (bad) sahf jb xchg fdivrp or sahf gs outsb jae out cli in fmuls out repnz cs xor mov push ljmp test lds mov fisttpl adc jns push add add cmp dec xchg stos mov lock cmpb adc mov sbb sub jno mov sub fwait add and cmc lods mov sub movsl mov sbb in xor es mov fcomi jmp jp mov xor test inc mov or cmp pop or (bad) test add ficoml dec cwtl test cmp arpl popa in push jbe cltd pop mov sbb cmp dec dec xchg jo pop push xchg adc push cwtl xor jg xor das jne dec outsl mov push (bad) mov pop sub out loope (bad) push dec add mov loope mov cmpsb fcom mov out call sahf rclb add xor je orb or cmc jbe xor adc jae push dec js pop cmp lock pop (bad) fiaddl sub ja xchg add stc pop xchg cli cmp loopne mov pop jne or adc imul pop sti and mov arpl or jecxz pusha fild sbb pushf shr and stc lds jmp dec les (bad) icebp cmpsl cwtl in inc jmp and outsb subl jbe adc jge push sbb (bad) sub mov sbb (bad) (bad) adc or cltd inc in jbe lods stc xchg clc jp xor mulb repnz cli jns jg add subl cmp rorl mov xor push das fisttpl mov pop fsubs mov xchg push int3 lret pop movsb pop and cmp lcall lret mov jb mov (bad) mov sbb les sub in dec push and int3 cmc and cwtl pop shr sbbl lcall or in xchg dec inc xchg add add movsb adc rcrb xchg pop test inc es inc mov test std push cmp call dec pop imulb mov loop adc mov mov mov sub movsb fistpl or sbb inc sbb jae (bad) test mov jge mov cmp xor dec test adc mov dec jnp lods or adc int jns push jbe cmp push add and xchg test dec xchg (bad) data16 ds xlat adc xchg add adc imul push sbb xor out mov dec mov movsl fidivrl rolb sbb repnz adc jns add outsb jmp jp mov xor add loopne aaa pushf cmp mov popf dec xchg push xor aad dec dec pusha dec inc dec std bound xchg imul push popa cld jne xchg lcall jmp lods repz mov inc addl xor inc mov inc mov jb xchg and lahf cmp jo add pusha mov jecxz mov test ret xchg test jp data16 xchg loopne sbb dec scas jecxz pop pusha stos xchg sub pop fsub xchg sub xchg ret jmp mov lret add mov clc mov outsl in jae mov cmp aas pop gs imul mov data16 (bad) xor shlb pop mov pop sti inc push mov dec rcl pop add mov push aad repz in mov mov (bad) enter pusha out ja movsb push or push cmp jno xchg jo iret mov mov cmpsb icebp scas in sub inc mov shrb add push sti clc mov lock std cmc fsubs jge pop pop outsb pusha push ljmp and mulb pusha adc inc (bad) mov divb sbbl push shll repz push (bad) (bad) in ss sahf dec add jmp adc dec lret (bad) cmc (bad) dec mov mov inc aas mov push lods lahf mov add pop jae imul xor add jg sub hlt out lcall (bad) mov dec pop stos imul push test inc mov pop or hlt stc scas lret xor mov jns fwait je mov nop jbe and mov dec push add mov pop scas aas and daa adc loope xor divb leave bound pop jmp pop jg test xor push sub mov lahf mov das aas jmp push dec stos and les popa and divl pop mov push pop into out cmp pop cmp adcl lret inc cmpsl xchg scas dec xchg push or in sbb into cmp xchg push insl repnz pop or add pop insl xchg sbb or test jns inc adc cwtl cvtps2pd (bad) sub xor pushf movsl popf push imull inc shll popa das jne outsb sub loope cmp fs and xor andb sbb pop pop ds jne aaa repnz xchg cmp jl sahf arpl decl xchg adc lods lods dec imul mov mov jl repnz sub adc (bad) stc pop lds fsubs add outsb cmpsl push dec dec jb int push mov xchg sub dec lds and dec out add ret stos xor pop mov jmp xchg and lahf (bad) and movsb sub test and sbb outsl pop lret aad adc cmc call mov fsub (bad) jae xlat imul xchg cmp add add dec or out lcall pop jle int (bad) int3 (bad) lcall sub imul (bad) xor pop cwtl (bad) shr das add cmp in jae or scas sub enter cmc das cmpsl loop lret pmuludq test cmp iret cmp sti hlt push mov popa xor push (bad) hlt add xlat pop loopne push stc shll scas push insb cli dec pop jbe out cmp bound icebp pop cmp inc idivb (bad) ficompl inc push out dec mov scas (bad) mov pop data16 fsubs scas pop pop std (bad) push out lcall mov ljmp sbb pop roll xchg push cmp les icebp inc fs lock clc out test add in addb inc es cwtl cwtl pop or or xchg lahf adc aas cmp int3 cmp imul sbb pusha jge jecxz aaa test mov mov sub or les pop pop scas sub add bnd das cmc das cmpsl loop (bad) cmpsl outsl sarl pop dec xchg (bad) popa dec jno int3 scas jmp xchg (bad) std jno shll mov lahf mov xchg push pop dec into add pop xchg mov daa jecxz test (bad) sti xor or jp pop or cwtl mul test mov mov xchg or jno mov adc loop and mov popf mov jmp iret mov jl dec inc pop xchg xor xchg mov cmpsl cli mov xor push je push or (bad) icebp rolb imul imul sub or pop mov cltd inc aam sti sbb push push es adc xchg sub stos adc int3 mov sub jo cmp jne xchg adc ss pop leave mov or mov jne mov leave mov sub cli iret rolb mov rclb add std in push hlt dec (bad) and imul leave call jnp out cmp mov pop sbb sub xor rclb stos and xchg cmp out sub popf xchg fnstsw push mov cmp arpl or jne dec dec mov clc aad dec insl jo (bad) sahf jno (bad) mov (bad) sti sbb xchg out and mov xchg add stc pop xchg cli cmp mov jo (bad) loopne push pop jbe adc aas cmp xor adc fiaddl jne xchg xor loope loopne faddl cmp lds sbb fmulp or xor loop cld outsl (bad) cmp arpl sbb icebp push mov cmp iret jo push mov (bad) adc or js mov sbb pop lods cmp xchg xchg xor in pop aad jb in fnstcw xchg push (bad) jg frstor jg xchg call pop pushw xchg push inc (bad) xchg das push mov lret add arpl (bad) xor pop dec mov es xchg cld and dec fisttpl push mov cmp or inc inc xchg sub js lret jo shl lds dec popf nop icebp or pop scas stc and movsb stos lcall xor adc addr16 in mov mov test ljmp loop sub mov in jb dec mov jle data16 sbb push (bad) adc adc rolb mov push and cmpsb xor loop in mov (bad) shrl aad xchg rorl inc sbb mov sub pusha mov mov jne add mov cmp or out mov mov mov xchg add (bad) iret mov outsl pop notl pop jb mov fisub push push jae sub in ret ret cmp push in adc in dec xor pusha pop test stos xlat popf adc push jo or mov stos pop and push xor cmp jl in mov popa (bad) enter lods inc fildll xchg push (bad) loopne jo jne sbb std sub js imul lods pop push ja inc mov jecxz cmp fidiv sub cli pop jb movsb pop mov repz mov inc and push in sub jnp jne mov arpl data16 aam jmp (bad) xor ljmp fistpll sub sahf dec lret in cli mov lret arpl in std cmp push out (bad) sti into out dec (bad) addr16 jns lods xchg push insb xor mov mov loopne xor pop push int es adc adc push push xchg inc jecxz push inc cmp sub xor in mov lock sub inc dec adc test mov lret sahf in mov sbb jg mov je sub rcrl cs bound mov (bad) adc cmp push xchg or mov test inc lcall stos fidivl repnz (bad) mov lea mov es dec pusha cmp imul mov add and es push cmp roll jmp pushf fistp dec lret call pop inc lret add lods cld add pop notl in inc adc cld in add lret repz nop mov or pop pop loopne pop cmp cltd cli insl dec js fstl das dec add test mov mov popa mov push cmp adc inc xchg sbb cmpsl mov add (bad) hlt enter subl pushf rorl xor pop ficom pop lods cmpsl mov cmpsb dec dec cmpsb ljmp cmp mov mov nop (bad) outsl mov out es ja cmp mov ret add int aam mov dec inc sbb decl js pop pop fcmovne lds push push clc rol loop cmp in ja aas lret add cmp addr16 out adc inc push push call ficoml add mov fsubr data16 push in cmp and mov outsb arpl pop pop loopne iret mov ret mov shll in jl mov daa int3 jmp cmc hlt add add pop mov adc jl gs stos shl insb push and loope sbb sbbb jno (bad) sahf ret (bad) inc pop mov bound lods js pop mov inc adc jo push xchg popa (bad) inc sar int aam mov fs jmp out jns dec add lahf fistpll push cmp push pop orl loop pop enter or mov fs (bad) push popa mov pop loope testl call fmulp mov call mov cmp dec xchg bswap push jno gs movsb jl or ja jmp sbb inc xor iret adc xchg nop jb push sahf inc adc jbe ret mov fwait or loopne aaa add clc rcr roll mov mov push mov xchg fmuls push sbb sbb mov loop lcall sub xor xor test fisubl xor pop adc movsb out lods cmpsb xor jo pop and insl dec pop mov mov mov in push sbb rorb mov dec dec mov sub das loopne popf fwait repz jecxz and lret les or mov call call push mov mov iret addl sbb stc push je add sub ja stos sub or lods mov xor in inc repz add fisttpl ret inc imul (bad) and mov pop test pop in (bad) (bad) outsl dec inc cwtl add sti inc inc dec mov pop loope flds dec cmp xchg mov in mov dec mov mov (bad) mov cmp push push rcll xor fidiv aam sub scas jmp nop cmp pop inc (bad) rclb loope aam int data16 fcoms mov test mov cmp mov (bad) cmp outsl mov mov jl dec lods (bad) push dec pop je stos sarb sbb sbb lahf std (bad) cmp push jae mov cmp fs or sub lcall push aaa lock xlat popf lahf cmc jne fstpl cmp loop cmp xchg popa mov (bad) push cltd or mov xchg cmp out js inc in or add jnp adc mov in or dec sub push add rolb adc adc push cmpsl pop push adc inc xchg xlat aam mov sub mov mov out je icebp and inc or xlat mov sub into pop pop sbb std mov mov bound mov negl jns or dec lret dec mov adcb mov clc mov insl mov add sbb (bad) ret add push or xchg pop mov lods (bad) lock (bad) not (bad) in js cltd push or fidivr fs add cmpsb xor inc in mov jne orb xchg jae gs push jmp ljmp xchg std sbb inc xchg mov std test pop jae lret ja in inc lods pop lea sbb adc mov add insl jns mov cmp lea out cltd inc (bad) push mov test out push sub and mov fistl adc push xor mov add add jmp cmpsl pop mov xor and pop movaps lcall leave push dec (bad) sub add ja jp call sti xchg out or loop pop mov cld adc push sbb mov pop pop inc pushf pop fadds mov sub adc dec fs inc mov or sub lock dec jge mov push and add (bad) mov test cmp pop sub inc pop xchg pop xor inc cmp shrd xor jo lock pop sbbl inc pop xchg out mov xor jne repz rcll cmp js xor mov repz mov sub (bad) dec decb test mov lds (bad) (bad) cmpsl addr16 pop pop addr16 out loop aaa inc inc lret lret outsb mov or movsb test into cld lcall mov xchg xchg cmp add test notb test (bad) sub insl cmpsb mov cwtl dec rcrb inc pushf xlat adc mov jle shll sub addr16 jecxz pop add inc mov subl mul (bad) (bad) imul adc mov sub push cmp pop xchg vmovdqa (bad) popa popf cmp fwait or (bad) mov and jle or inc shll in inc lods pop insb adc push test add add inc (bad) lock mov xchg (bad) mov test sub mov (bad) js mov test fistpl and adc pop fsubs scas cmp outsl cmp jne testb loop sbb push jge inc in xchg aas and fnstsw xchg insl std insb dec out cmp add mov gs fs jp cmp nop push popa outsl cmp xchg sbb pop loopne ret xchg and hlt jb aam mov xchg xor and fs inc mov ss pop sbb inc mov mov psubw cmpsb mov or addr16 fcomps dec bound in ljmp push mov sub sti push dec (bad) adc shlb add jle rclb mov adc jecxz lahf push jmp roll mov sbb sbb mov jge push decb and fsubrs (bad) mov (bad) (bad) push xor lret arpl adc sbb icebp pop lcall xor es push call sar fcmovu push mov pusha dec jp cmp outsl pop jecxz xor call xor ret cmp fucomp push xchg push mov out mov sbb push and std test add popa aaa lds cmp mov pop mov outsb mov jl sub aas inc hlt iret in inc jnp xchg daa or repnz lods in xchg ljmp push mov mov sub gs jnp adc dec pop jbe push sub push fcomi (bad) stc jo rclb out push inc test sub das outsb and faddl xor and gs fisttpl xchg dec xor stc xlat test movsb test into std jno call cmp add add pop or test add pop mov ret push imul push je push fstpt fldl hlt cmovns cmpsb adc push lock (bad) in adc adc leave cmp xchg add xchg loope mov adc pop cmpsl fdivr in outsb xor mov add xor jo add xor xchg (bad) cld out (bad) adc push and add jmp jle rol sbb mov xchg mov insb pop mov faddl enter cltd xchg or xlat xlat mov loope je ja mov or cld and dec mov insl test pop roll jge jae icebp xchg les jnp fs and add scas jmp outsl aam mov out daa movsl push loopne dec cmpsb cmp jne psubsb cli lret test lret lods push in fistp in cmc push inc adc divb xor mov push loope sbb jg mov lods js nop xchg push xor in stos and repz cmc mov (bad) std mov or push imul aad movsl stc xchg mov and out sub push mov cmp push add cmp push les dec pop sub cmp (bad) fnop dec jmp cltd xchg wrmsr das push push jmp sahf lret test dec cmpsl or mov mov sbb rorb jl lret add jno stos mov cmp push jae mov push gs out or test cltd pop cld sub cwtl pop or fmul sub rcrl popf nop ljmp fstl das xchg adc xchg fisttp lahf inc mov mov add fstpl push or test imul and enter bound aas shrb sbb jg es add loop xchg imul push xor cmp outsb jbe loope cmp xor aad std rorb daa mov test iret sub into lahf loopne sarl mov test test or jbe jg int mov add adc inc scas or push fsubs pushl imul sarb inc gs dec lret gs fmulp pop roll xor pop xor enter adc addr16 call dec add daa pop mov xchg test inc data16 cmpsb mov mov jl leave leave sub ret and jecxz and adc sbb cwtl jnp jecxz outsb or out sub pop imul cmp popa jnp inc in stc shrb sbb insb xchg pop adc push mov sbb fidiv cmp jle mull lahf out cld test xchg decl cmpsl mov leave sub cmp pushf dec ss loop mov inc fistpll add jg pop or push adc cmp mull mov sbb call sbb push mov insl jno loope in inc dec loope vmread push mov mov pop (bad) stc addl jbe movsl mull mov rcrb cli (bad) mov sbb sbb pop or nop push xor mov pop mov cltd lea iret jns pop xchg nop loop test rorl hlt movb jmp add loopne adc sub int (bad) stc popf (bad) fsubp mov test mov cwtl scas push adc or test xchg cmc jns sbb and hlt mov movb fmull push mov mov lret xor mov adc and jp inc (bad) mov stos and daa outsb not mov push inc sbb stos add pop pop data16 (bad) xor add pop ror or xchg or sbb add stos cwtl sub in hlt cld js mov sbb int in adc push outsb arpl test jae outsl aam stc mov pop insl dec cwtl (bad) bound sbb enter js xchg add cld dec divl dec fs iret scas mov popa push jge fcompl cmpsb mov push in ds pop push scas xchg int inc or jmp pop push sbb insb and iret cmp inc mov std sub mov and daa xor pop pop xchg jle sbb mov mov mov hlt mov inc in enter das pop push scas imul das (bad) into mov dec lds and mov fmul adc inc shll push bound lods pop cwtl popa or fdivl movsl imul into sbb jne insl fldl shl lret inc (bad) cli fldlg2 sti xchg mov shrb into cmp add cmp sub or insb adc icebp mov lcall rcrb adc aas or ret sbb aas stos adc dec test js xor dec push jbe (bad) shr lock dec xchg xor fidivr xlat push stc dec mov ret call push loope xchg je jmp cmp stc lret xchg lock xor js lock xchg jecxz xchg insl pop sbbb add or adc jbe ds dec sbbl stc mov pusha (bad) mov mov pop cmp (bad) dec dec sub das popf push mov inc fcomp push loopne mov test mov (bad) (bad) ds lret cltd fstps dec cltd pop bound xrelease fisttpll stos (bad) into jg addr16 mov cli pusha ja iret or rolb loopne test aas std push or cmp out lcall aaa outsb push sub dec sti (bad) aas ret das sbb (bad) stc sub and mov in mov add add es loopne les cmp cmp jae ss jmp sti xor (bad) xchg pop cltd cmp adc jl sub xchg (bad) (bad) iret mov xchg mov std mov fldenv lret addb out mov mov inc rcll xchg aas mov scas jno adc movsb hlt mov out stc xor stos push xchg xchg mov inc scas mov push push (bad) mov fbld mov sbb pop pop add decl push mov cltd inc xchg pop dec aad xchg mov cmpsl cli mov xor fisubr ljmp and arpl js ret (bad) cmp cmc xchg out mov fs mov lds test frstor push sub jmp sti (bad) or mov pushf cmp test outsb fs sbb jl sub loop and pop jmp insl and lock outsl mov ljmp (bad) ds push movsl stos loopne jmp mov (bad) ds das mov or aad hlt lds cmp nop fstsw or mov mov stc jo imul adc icebp sub ljmp mov sbb mov pop out jae cmp imull sahf dec or sbb (bad) arpl icebp sti xor and or mov lods or or ja or jno inc mov (bad) mov xchg push (bad) out pop imul in jmp lcall jnp xchg sbb jb js pop adc fcom test test movsb stos mov test push xchg gs sbb (bad) in incb or movsb mov bound icebp pop dec jo inc enter jp lcall jp sbb out (bad) adc xchg (bad) pop insb adc adc mov cmc arpl out fcom ljmp add add test es mov jb (bad) and cmc lcall out and sahf dec loope or jp and repz inc gs jl mov push xchg xor push call outsb in xor je adc mov add in addb cmc lahf mov lcall andl cli dec inc xor in (bad) jbe clc daa pop pop mov or (bad) lock lods pop jg push mov mov push aas fisubl push push in xor aam outsb loop insl cmpsl fiadd mov xchg mov std sub icebp and sahf mov dec fwait cmp jnp adc mov cmp ja ret xchg fidivr mov push jecxz cmp rol jns push cmp fisttp lret (bad) xor ja add outsl aas in xchg pop lods add dec bound dec lcall mov cltd div repnz xor (bad) adc fnstsw push cs fwait (bad) cltd std cmp fmull cmp int add imul push mov xlat stos divl add cmp in rclb loopne inc cmp mov stos (bad) push push mov pop mov sbb mov mov xchg repnz adc adc mov add iret mov push mov dec imul xchg pcmpeqw or loop or inc and pushf outsb pop lds mov aam add test jecxz jae aam jge and shrb popa movsb cli out or push jne add add pop or sbb aad movsl (bad) int3 sbb xchg (bad) mov push aas lret mov lods fimul lock mov inc sahf xchg ret adc inc das in icebp fwait xchg and rclb sub ja add out pop fstpl adc xlat popf js dec mov jbe ret mov fwait or mov scas push stos andps adc repnz out lds push pusha mov insb loop adc ljmp xchg and daa cltd loopne (bad) jbe out pop sub js test stos mov xor pushf pop xchg jnp pushl sub mov xchg xchg mov xchg in pop jae jb in cmpl icebp sub loope sbb repz fnstsw test mov fnsave push bound les inc hlt jo movsl or andb inc out sbb mov push call ret sti pusha (bad) push pop jae imul loop or and inc mov pop cmc lret push cmp xchg push jb jb (bad) rcl adc xchg fucomi pop out jle aaa movsb lret mov mov and insl add leave in fidiv fisttp stc dec fnsave sbb pushf mov xchg cmc into adc arpl test mov inc push sbb (bad) loop popf add jb push sub jne sub js (bad) mov sti xchg pop scas outsb pop push mulb mov cli jns idivb mov idivl push scas inc (bad) cli lods xchg xlat pop mov lret cmp lods dec loop cltd cmc or push data16 push cmp jbe or or or test gs popf jge and cwtl adc aas call mov xlat add jle add rol (bad) mov or sub out lcall adc jne sbb mov inc gs mov fdivrp in movsl push xor stos call xchg ds dec leave cmp lret and enter push clc jle insb mov icebp mov icebp cmp mov sub lcall rcr push ret pop mov add movb fcmovnbe loop rcll cmp ds notl sti cmc push decb rcrb dec aas and int insb gs mulb das sub jne inc (bad) or imul cmp (bad) ja lret dec scas pop or pop or mov repz mov rcl insl mov pop pop in (bad) or xchg jbe clc insl lahf out inc ficom scas repnz repnz je inc fs aam ja in cwtl pop xor xchg inc push popf nop icebp or imul xchg mov pop jecxz loop inc jne test inc fs jl in ss xlat jmp add add inc push ficomp mov loop jbe test mov mov cmp popf fwait mov add sbb push std mov mov pop mov jno adc sti aad out aas repz insb adc push jb aaa xor insb lahf lret xor (bad) mov scas or dec lcall (bad) mov in ret pop push hlt dec push dec (bad) call repz lahf pushf rorl mov inc dec dec sub mov imul gs out fidivr test pop and out lcall (bad) (bad) pushf xlat adc mov adc lahf xchg test outsb cmc inc mov jae (bad) outsb aaa or pop arpl stc xchg jne jge inc jmp in mov paddb jae lods cmpsb xor arpl nop jmp jbe nop mov test je cmp xchg lret mov xchg sahf lahf xor xlat aam mov push mov push push pop outsb adc pop mov xchg rolb sbb mov (bad) xor loope outsb (bad) mov stos add xchg push mov ret xchg daa shll push add mov out js inc mov xlat add add arpl in or call mov inc fcompp jp call ret push je inc sbb aam ja stos and roll popf icebp jb sti loop adc xchg in jle pop inc ret dec addr16 mov (bad) push cmpsb in or sub mov pop cmp jae shrl enter jecxz test ret sbb mov mov imul jnp mov (bad) std inc sub (bad) stc mov pop fldcw and sahf jge cli mov fildll out jns jg aas xor push lea inc cwtl ljmp andl push je jg call shlb (bad) ficoml xchg mov pushl or or hlt pop rorb mov dec lret cmp mov push dec add (bad) movsb cld cld add ret mov sbb mov imul (bad) out je mov inc adc xlat pop ljmp pushf pop fdivs popf push ficomp xchg add lock int3 out popa mov fcomps out or xor inc xchg push je movsl movsb and jmp test leave sbb sarb dec mov xchg (bad) adc lock jg popf jb hlt pop (bad) es iret adc aad add cmp ret xor mov mov cmp lea aas push pop ljmp adc cmp mov mov pop ss ret in mov loop (bad) (bad) fnstcw pop int3 mov mov stc dec lret cltd xor rcr ss stc cmpsl pop dec dec clc jnp call fcoms pusha test fisttpl cmp out mov subb jge out jae pop pop loopne mov cmp lret popf xlat popf sbb enter js xchg adc dec mull mov xor (bad) (bad) shrb push stos xor pusha sub scas pusha int3 add pop inc jmp stos ljmp (bad) ljmp and sahf iret rclb bound mov ds jb rol jne xchg pop shrb jmp and mov mov out xchg lahf pop mov test ja adc mov divb xchg fucomip aam fistpl adc jns push shlb (bad) cmp data16 push sahf (bad) fimul add jl push dec sbb fisttpll push mov add out (bad) (bad) adc sbb mov in xchg cmp or fmuls into fidivrl int pop xchg mov xchg sbb xchg or push cmc sub push xor add mov add rcrb lock mov mov nop test js adc cmp addr16 (bad) mov dec out xchg arpl popa jp iret add xor sub fcmovnb js lock jg mov mov outsb jbe xchg adc rcl (bad) lods movsl lock out into sti push cmp jmp das xor mov scas out pop and std mov pop ljmp (bad) sbb xchg mov sub adc hlt adc ficompl cmp cmp out push in xor ret fmulp push push imulb (bad) icebp ret test ja lock fdivrl push (bad) pusha cmp adc or iret repz jo and cmc ret sub xchg adc int cs test scas pop fwait mov fs sub xor test mov fwait pop lds push scas xchg lods mov in icebp jmp pop jecxz unpckhps xor in inc pop xchg imul or jge lods js cmp xchg lret jecxz fs pop scas insb adc dec or mov lods cmpsb pop (bad) xchg lcall sti pop adc ss jle gs lods pop push rcrb mov cmp scas xchg fcoml or aaa fdivs adc sahf lret popa mov jl dec popf sbb mov shr xchg pop jmp int3 or mov out xchg mov xchg push nop nop add pop outsl aam dec leave aaa xchg sbb pop loopne jno ffreep sarb dec mov das sbb nop fnop adc or cmc inc mov mov push push adc arpl cld mov insl into lret mov fimull and cmp jmp repz sbb jge pop in subl push call jo sub movsb pop xchg inc jno fild adc xor lret in cmc jae adc aad ljmp mov (bad) cmp call jmp dec sbb test (bad) repz lods mov cmc mov dec sbb div fnsave mov sbb cmpl dec fwait xor hlt sub lods outsb ret mov xlat outsl push sub mov sbb fwait scas (bad) cs loope test fldl lods mov fnstenv rcll lods pop lcall adc fild lcall leave cmp cld mov insl dec add mov enter pop shlb inc inc sbb or sbb adc insb psubusb cmpsb loope rclb cltd pushf cmpsl (bad) stc rcll mov xchg adc pop adc jle dec sahf sub jns sti adc pop adc pusha mov in xorb mov or in mov cmpsb push push jne mov mov add out out or dec mov insb pushf and xchg stos lret push jg icebp fmull cli cmpsl pop xchg or xchg jbe pushf sub stc sbb sarb mov out adc stc push cld adc daa (bad) sub fstpl shll dec das add outsb sub mov xor and (bad) stos (bad) test es inc mov mov inc jbe rorb xorb or cmp andb jp (bad) popa xor inc div xchg aaa mov and repz jno xor arpl out mov pop xchg adc mov nop shrl jb out and sbb inc scas xor mov pop arpl daa mov lret les scas sbb and cmp fwait or fistpl jle push mov xchg dec or add dec test mov mov push xchg icebp push hlt hlt xor or mov push test aam ja mov int mov jae (bad) xor outsl lea out mov jl xchg pop dec mov js cmp jbe cltd (bad) sarl push out mov xchg rcrl lcall fwait pop loope fstps sub xor adc sahf iret fildll xchg jecxz mov inc and mov nop shlb test adc jae jbe (bad) das bound call mov bound insl aas clc jbe out sbb jge dec or cmc loope xor dec clc add das (bad) xor outsb jecxz and xor mov and out loop aaa pop xchg adc fs cmp push cmpsl cli mov xor mov add inc push mov sbb jmp cmpsb subl lods data16 rcrb insl orl xchg add aaa push aaa imul repz mov mov push mov adc push cltd pcmpgtw data16 cmpl aad cmovns inc dec (bad) bound dec pop pop sbb or sti inc in mov jae ret dec sbb and mov jns enter mov push push adc pop mov jg add divb mov and outsb cmpsl xchg mov lea bts cmc dec sub jnp xor add into pop pop sbb push jbe popa mov (bad) jbe decb or out loop out cltd movsb das jne insl pop dec jmp aam inc orl cmc mov bswap dec and sbb mov (bad) loop and jecxz outsl aam lahf pusha cwtl lcall rol sub (bad) gs jb xrelease scas fildl movsb sbbl or mov (bad) ljmp add dec pusha cli inc js fsubrs jnp cltd jne lds and dec lock xor xchg popf std sub test (bad) hlt mov inc mov jne mov sub cmpsb cmpsb xor (bad) xor (bad) icebp jb mov out sub (bad) cmp inc adc mov inc in (bad) push push nop idivb gs sahf lret push roll testb adc cwtl xchg mov push mov cmp add mov lock nop pushf insl mov push pushf out cwtl pop shrl lahf sub aad nop decl aad in jg add fistl dec sbb push scas inc jecxz movsl mov mov mov es mov in mov xchg lods mov out data16 addr16 pop push mov adcb std cmp or mov add std sub aas icebp shll jno pop adc repz push ficompl cmp mov les aad mov cmp mov cltd inc jb xchg add hlt ds pop test jge push mov mov mov popf cmp loopne stc mov repz lods lds enter mov (bad) jno,pn stos mov cmp add les add arpl pushf in jnp mov push push gs rcrl xchg divb int pushf pop bound mull shll cltd jp aad lods dec xchg (bad) jb or daa lock mov test mov ss mov jmp stos in test insb mov pop pop ljmp lcall (bad) loop mov jae and aaa int dec mov inc xchg mov dec or movb cmp ret sub mov jge xor mov mov icebp loope (bad) cmp inc sub inc inc mov das pop (bad) push jo xor dec data16 cltd call push adc or pop into or repz lret lds push sahf mov cld cli shr xchg mov ds sub (bad) jae add xchg sarb xchg push daa ljmp ja push idiv mov sarb inc (bad) mov sub clc inc add ret mov fisub mov (bad) cmp mov ss push pop adc jge enter insb push imul test in ljmp pop (bad) dec add ficom insl popf add and mov loopne xchg lea sbb mov sbb push pop pusha mov adc inc outsb pusha push call xchg inc (bad) push jg das mov cmp push push push nop sti out stos pop fsubs lods out mov sahf sbb test je or shll js inc test rcr xlat xor fisubrl imul bound sbb fwait or fwait add push push mov in mov pop xchg push enter aas jo jb xor out cmc scas sbb pop movsb in jns aas stc sahf jbe and (bad) popa lds inc mov mov ss dec cmp or ret mov test pop roll iret add add (bad) xchg jge (bad) dec cltd add jg aad movsb or add push push mov icebp (bad) clc cmp cmp sub rcrb add sbb orl and sbb sub (bad) mov enter xor jge jae pop and dec mov test insl push jle movsl mov cmp rorl add dec movsb pop mov add inc dec out (bad) push into add mov mov xchg (bad) sbb shrb shll or fs cli jae scas jns cli push push ret mov fwait movsl stos add mov popa das pop pop movb sbbl pusha dec movsb out push fimull dec leave insb outsb sub and jne jge arpl xchg and daa sbb lcall repz ss cwtl stos loope js cld or out shrl dec inc cs jns out add push jns cmp inc sbb lods jnp pop mov mov les add adc jge daa lret int test inc nop jp pop cmp movsb lahf xlat loopne repz pop cwtl jp inc aas mov xor (bad) dec cmp rorl xchg mov jne enter bound std imul mov mov test aam mov sbb sbb adc adc movhps and inc xchg pop mov push fcmovnu jne daa sub repnz out jecxz not and (bad) cmc pop aas stc pop pusha adc or sub (bad) repz (bad) insl sub and adc add aad loopne jbe or sbb test lods rolb push (bad) adc bound jmp rep add xor push das dec test shrb mov xchg addb and call xchg pushf fisttp (bad) cmc cld stos add mov or pop sub imul sbb gs loop rcrb (bad) xchg clc pop dec imul (bad) jp and sub pop push popa jg stos push adc cli loopne dec sar inc or xchg nop jb aaa pop add xchg js fcmovnb fs jns or (bad) hlt sar or (bad) mov adc pop (bad) enter pusha out (bad) aam xor call jmp in jnp sub xchg jmp sub adc inc xchg std jne test xor xchg jbe pop mov mov clc int3 ss lock fisubr sbb (bad) out xor jge dec add sub push xor dec jnp mov out sbb mov fist icebp or outsl out dec lret sub leave xor mov mov outsl cmp aas into pop adc adc mov scas jmp sbb test in sub or loop popf sbb (bad) aam mov scas sbb cmpsb out jbe rcll mov andl ja jnp add data16 dec out mov pop add jl jl cmp nop sbb adc jo cld mov mov repz es ja punpckhwd outsb idivl sti ficomp cmpsb stos imulb jbe in and sub out dec lds test jp int xorb cli dec pop lret js adc sub in jmp jle mov or pop dec lret arpl neg mov faddp mov dec dec mov jb out xchg mov mov jp and cld ljmp jmp outsl aam xor pushf pop shrl stos iret leave fistpl push jle mov lahf scas stos (bad) dec rolb xor pushf (bad) pop mov add cmp out iret mov popa out lret out stos ja dec bound push jp popa es adc inc clc mov (bad) repnz js mov sub iret es aad fmull xchg dec fs call outsb pop lds out sbb and dec mov push xor mov jecxz xchg cmp mov scas or dec inc mov pop fsubrs das jp scas sahf (bad) into clc pop fsts cld loop jo loop fstp mov push cs fwait jns pop xchg arpl mov scas or loope out and invlpg fsubr lcall xchg cmp aad nop lret fisttpll pop or adcb xor mov cmp fsubp (bad) push cmpsb loopne ljmp (bad) sti xor pop pop je sub pop push cwtl outsb lahf stc inc fnstsw mov (bad) fs lret ds ret mov std sub lock xorps mov sbb cmp movsb out lods cmpsb xor jo cmp add rolb add das aas jmp push xor push repz cld lret clc stos add xchg push xchg ret mov adc (bad) add push cld dec or (bad) sub add mov (bad) push jg push popf ret add or pop sbb xor cmp outsl aam jno mov loopne or ret push jge sub pop jae inc lods loop cmpsb sub dec ret dec in xchg push lock and jecxz scas mov (bad) outsl out dec pop test int xor or dec movq cwtl call jnp cwtl pop cmp push push jne in js test push and addr16 jbe xchg sbb (bad) repz repnz add mov xchg adc xor mov add cli loope sbb mov in lds and ficomp (bad) xchg (bad) jg push data16 push cmp jbe loopne or jo lret cmp (bad) dec fwait das mov and mov mov into (bad) (bad) icebp push sbb xlat xchg push mov cmp outsb aam add loopne pop cmp popf inc pushf push pop xor (bad) cmp jge mov into push insb scas sbb mov sbb mov mov cmp les sub cmp pop mov loope dec pop hlt sbb jl pusha lds mov push jmp arpl test lods dec add jb xor fmull call aad gs js push sbb jbe (bad) xchg mov lods mov test sbb pop andb fistl aaa fmull cmp cmp jbe fisttpl or cmpsb shrb sbb and dec xchg push cmp nop ja or sar mov add and cmp lahf loope and add (bad) out lock xor inc mov or xlat popf nop jb sti fcmovu adc sbb in push out mov mov push jecxz loop jne sbb cmc rorl and (bad) addr16 lcall or xchg xchg pop hlt scas lahf ljmp (bad) aaa in ret cmpsb mov mov scas movsl mov dec inc (bad) outsl cmpsb cld pop push lcall fs arpl in push push sahf cmp cmp mov jp push fnstsw test stc ljmp pop stos sbb jne push xor cmpsb pop pushf popa repz mov xchg mov out arpl out pop repnz jl enter movsl (bad) jns adcl (bad) dec cmp (bad) int3 cmp gs adc (bad) jae and test add inc adc or add dec (bad) xor insl lea out js push dec sbb sub inc movb cmpsl mov jmp cli (bad) xor inc cmp call jb sub xchg in push xchg dec xchg jl loop jbe xchg pop mov (bad) sbb mull mov mov adc daa xor inc cmp dec ret scas rorb hlt fnsave mov mov aaa mov stos push adc pop dec (bad) mov dec inc pcmpeqd mov inc push pop jmp orl push jecxz data16 into lock add pop xchg jl (bad) fwait (bad) mov nop mov dec pop mov add jp inc cmp dec mov sbb test daa or cs cs loope sbb das mov pop dec sbb aaa jnp lahf jp add and inc hlt inc mov or cmpl dec xchg push jb int or pop mov and adc sti (bad) insl and icebp data16 mov mov adc pop (bad) lods jmp cmp lcall andl push inc and dec vmptrld add loop xor mov xchg xchg jge outsb jecxz or rol mov push mov push and (bad) jae jne mov push pop out xor or mov xor std int3 sbb pop loope div subl imul fisttpll add and nop repz in sarl or push mov sbb pop loopne in fs jns loopne leave adc inc pushf xchg icebp xor mov xchg pop mov xor (bad) lret or fsubl pop pushf (bad) and sti lock mov test or mov gs jp jecxz mov aaa out sbb mov aad outsb or or xor sbb add add jbe xchg sbb push ds cmpsb xor adc int out sub or inc adcb js movsb mov xchg mov pop inc fistl pop adc pop fsubrs (bad) cmp mov and mov fmull dec push xor lea (bad) pop or or lods into xchg jno call jne lahf add call adc and andb jp add nop push jno and sbb scas jle jne loopne inc jecxz xor fiadd mov jne insb jecxz ss add pusha or repnz lcall xchg outsl jg arpl cmp push sbb and sbb mov bound cmp dec jo loopne mov pusha add mov popa xchg mov insl cmp push sbb inc lea mov loopne test mov push sarl divb push inc push pop jecxz dec add cmp xchg sub jmp iret dec ja testl and add std popa push add sbb call mov (bad) pop and gs or mov mov addr16 lahf jo lcall fnsave scas push lcall aaa sbb test xchg test pop xor mov pushf or jp pop sub push popa sub push aas dec leave dec outsb sub popf inc push hlt (bad) inc out inc je mov lahf out movb (bad) loop sub movsb pop xchg inc je pop jnp cli mov pop jbe xchg xchg mov jno xor sbb jns ret or popa in jl mov icebp icebp sti roll movsb movsb cmpsb xchg mov (bad) out andb mov cmp xchg (bad) mov push pusha inc test sbb cld iret lahf dec andl leave addl add repz adc icebp xchg xor and sbb lea xchg jmp subb hlt inc loop sbb pop loopne lret sub ret (bad) popf nop icebp xor sbb sub imul lcall and mov out (bad) sub sbb push cmpsl fwait jp sub scas adc (bad) mov dec (bad) cmp xor test dec add sbb push loope sub mov faddl icebp jbe pop jnp cli mov out cld lcall fcomi gs sub cli inc cmpsb ficompl jmp sarb mov test subl ss pop (bad) ss cld ret mov or pop (bad) lret popf push outsb jp sbb dec sbb es add push hlt outsl or (bad) and mov mov cltd (bad) les mov adc sarl in xor int inc adc or push or test and lret jge jle push divl push incb push dec ret dec mov lock sub xchg pop mov fs sbb test repnz mov push inc int3 and push mov mov popf imulb sti pop mov arpl or xlat adc mov cld push in ss lcall js sbb mov das aas jmp pushl insl or leave xor out dec sarl mov add jno ss rcll das lahf dec test (bad) pop jmp push out mov dec lret dec xorl loopne jo and lods cltd mov icebp xchg cmp push ja call shlb dec jp cmp test pop xor or mov fs push cmpsb aad xchg mov sbb movsb fstp dec repz lcall push xor scas xlat sub cmp (bad) mov sbb sarb fsubrs cmc in or add dec pop xor cmpsl cmp sbb pop repz (bad) lock (bad) jne mov push lods jo push cmp lods inc xor pop loope and data16 cmc jb (bad) daa call xor out fdivl xor andl push adc pusha pop jmp insb push adc and pop sbb insb push (bad) popf cmp addr16 push popa lret mov cli ret jmp sub fdivrs xor orb xor out mov inc mov xchg jbe (bad) jb mov jle xchg add mov imul outsl aam lods jge mov xchg jmp aad (bad) fwait sbb (bad) xor test decl ret lods fs shll in and lcall (bad) daa xor push mov cmp inc push insl pop sub loop sub jl popa mov xor or xor and jno,pn lds fmul repz xchg push lcall xor pop xor js jmp lahf (bad) mov cltd sub jne enter inc daa jnp in adc ret mov push sbb sbb int cmp jne (bad) mov push push int jecxz or (bad) or mov mov jae fisub dec pop mov cmp lock mov clc push jae sub rcrb out mov (bad) sti ds sub pop cmc sbb sub or popa outsl lea fcmovbe xchg jb loopne ret stos or or xor add icebp mov push and sub sbb test in cwtl jmp add and loopne cmp hlt int3 out imul loope cs and daa xor lret mov dec push jns gs mov dec popa pop fisttpl mov sti xor dec or stos lods pop mov mov clc mov dec pop add data16 data16 sub mov das cmpsl adc pop dec fsubr pop loop jl rolb nop addb shl sti je sub xchg stos cmpsl gs mov push push lods arpl pop lret or xchg pusha cmpsb jg and in cld call insl rorb shl inc adc lret adc out testl xor cs mov shl sub fnop mov sub pop mov test test test inc fnstsw test push mov call mov pusha aam notl dec icebp add ss jmp cmp dec aad add mov scas pusha cmp js add aas mov dec inc leave call sub dec stc jge mov push rcr jmp mov add aaa iret add ficompl addr16 testl pop xor or rorl cmpsl pop cmp dec out movsl stos xchg mov add nop or repnz fdivrs sub fisttpll in (bad) icebp adc push push fmulp cmc mov mov shll std adc pop cwtl and in xchg add out es and loopne cltd and insb es sbb cld mov stc shlb push inc bound push in test out xchg in pusha lods cmp adc aaa push pop call jp clc mov fisub imul not jecxz mov pop stos sbb in jne mov or popa out lds jns sti imul mov dec pusha sbb and subl ja fsubl faddl cmp cpuid inc (bad) lds cmp mov xchg adc push out xor adc jns mov (bad) sti sbb xchg fisubr cld mov xchg loope insb mov cmpsl jmp movsl ja data16 shll (bad) xchg pop aas lea sub daa push out scas cmp inc test sub out je sahf (bad) fsts pop lock pushf enter cmpsl mov ret sahf lret jnp xor xchg pop dec add mov dec jne mov jnp jg jbe cmpsb lds jbe repz pop call out popf sbb std lock aad sbb repnz xor aas jmp in neg sub rcll dec jo dec mov adc data16 inc fistl aaa fnsave pop into xchg cmp stos (bad) idiv hlt jl jbe repz inc fidivrl bound and xor or push sbb in outsl outsb lcall xchg call (bad) add jmp hlt js lds pop pop loopne push pop (bad) nop xchg nop jb jp (bad) and inc fisttpll sub mov cmp adc movsl push xor scas (bad) sub ret (bad) es or sti dec and lea (bad) xchg add ret sahf or cmpsl mov mov pop add int jnp mov cmpsb and lods in sahf into adc xor ret pop push inc sahf dec inc pop xchg jnp (bad) cmp mov mov lahf (bad) jmp aaa loop push mov not xor mov jg fsubrp cmp fistpl call pop and add cmpsb cli adc fwait xor (bad) cmpsl jo (bad) mov or and out mov into add sub insl mov pop pop pop jmp out loopne xor fwait pop and sub xor int3 cmpl inc ljmp movsl les inc jecxz data16 (bad) xor pop aad std fisubr fsub mov rclb test dec jo inc jo lods mov mov gs xor (bad) mov xchg ja or in sbb and pop adcl and add std adc or (bad) loope xor test (bad) cli aas add add xchg push push inc std push and sub xor cmpsl lds outsb daa add dec jmp xchg pop out out or and test cmpl or rcl mov shlb cmp jne mov or mov in jbe enter pusha addb call jo movsb pop cmc lret push and push dec ret lret and aaa lahf push scas icebp inc xchg test cmpsl js adc push cltd lret addr16 xchg sub dec xchg call hlt add fidivl sbb cmp addr16 mov test bnd out cmp rol out ret dec imul dec not pusha cmp dec lea xchg or fcoms iret push out mulb lods in cwtl (bad) xor jns sbbl loop lret insb (bad) pop lock mov mov mov cmp aaa insb mov jo or pushf jae leave inc add mov rorl cmpsl pop cmp flds xor cmp sbb pop loop push inc mov mov cmpsb js ret cmpsb data16 int3 xchg int3 xor adc inc rcll out scas stos mov fwait leave jle xchg jbe pmulhw fsubrl jle (bad) out dec mov fst or xor andl jne pop jge subl fdivr in bound mov test fnsave leave dec adc push aaa jb idiv mov movsb xor repnz in jp jle,pt in pushf and pop mov adc dec daa mov cmc nop rol push sub pusha or cmp jbe add adc in movsl rorl movsb dec lret popa cmp rorl (bad) fistl xchg aas dec ds mov int3 or or inc clc nop jmp fldl add jbe push inc xchg sahf adc out or enter and js adc pushf dec enter push lcall mov stc gs pusha mov bnd pop inc or and rclb outsl ljmp jbe jecxz xchg jae mov cmpsb icebp test (bad) jg xchg add or mov add xor xchg sub mov sub jns stc bound mov gs push cmp stos add mov mov sub (bad) fstpl xchg mov js out faddl jmp add add out in mov xor pusha lret add (bad) outsl pop and int3 lods and xchg aas add xchg popf push sub mov (bad) ljmp imul pop jo pop pop pop or inc lahf mov into stc sub in loope and and mov jle sti mov add (bad) push std mov mov fsubrp mov mov xchg movsb cmpsb or dec pop xchg jne subb sti ljmp scas or cmpsl jge mov inc orl mov push dec push jns rolb push insl pop and push cltd popa in cmp push jl and pop scas lds mov push cmc je push pop push pop paddsw scas cmp outsb xchg push cmp mov (bad) mov lods fidivr lret cmp xchg fdivrp ficom sbb mov add inc push arpl jge xchg arpl mov jecxz fcoms dec add mov ja mov in xlat mov dec pop xor add and jp adc sbb insl mov cmp mov test push cmpsb hlt sub mov (bad) xlat add lea pushf int3 pop adc pop (bad) addr16 fsub (bad) sahf lret jae test clc call inc in adc push lds mov js in inc sbbl addr16 outsl cmpsb push mov inc add jae cmpsb jnp in mov sub in scas sub movsb fcomip loope add das inc cmp pusha scas mov sub push pop loop adc or test movsb fsubrl xlat push loope xchg sbb pop loope inc or mov or mov inc jo sub inc mov fcoml cmp icebp push and add mov adc (bad) iret or sub fs lcall aad xchg pop enter stos mov pop stos jecxz jne xchg xor popa or pop sbb outsl movsb xchg data16 and jno mov scas loopne dec push pusha xchg mov dec or out (bad) cmp pop push cmp dec mov adc xor scas fsubrs loope push sub dec add pop fdiv push cli call aad sbb cli aas ds cmp ja or and sbb lret insb into pop divb ja mov bound aam xchg jo mov gs xlat scas mov push (bad) xor fsubl inc and out idivb imul push mov aad iret int3 ja push lods std clc mov push (bad) sbb adc or mov push cmp jae push out xchg rcrb clc mov push rclb lret and aaa lahf push stos cmc inc inc (bad) daa cmp jle ja add call mov out sub (bad) movl and das in popa mov mov (bad) xchg cmc inc sub out jbe (bad) movsl int in out pusha jbe cs xor pop inc daa xor push test jne inc add sbb (bad) hlt repnz and movsl (bad) icebp mov scas jo jg adc mov push test andl cmp jp adc cltd leave repz movsb jl div std dec xchg add jmp fcoml mov xchg in xchg mov addr16 adc (bad) inc xchg test lahf jmp inc fbstp pop mov pop sbb fistp stos mov inc pop mov mov out in fistl fneni(8087 xchg cmp pop adcb ljmp and lds in mov sub int3 cs pop pop je cmp jmp push xchg xchg adc lock jbe mov js fdiv (bad) out mov jl push lcall cmpsl push fadd add cmp daa inc insl push sbb movsl repnz outsl xlat fmull das aas jmp push cmp test adc in mov clc inc jne cs jp pop (bad) or (bad) fwait popf jecxz pop mov (bad) push out pop and testl push sbb jae pop nop cmpsl inc mov jno (bad) fwait lods cmp stc outsb lahf (bad) pop push fwait xor push add es cmc outsl aam xor xlat inc or aaa sbb pop fistl cmp outsl jb pop add xor mov pushf sbb jecxz push dec fwait and mov enter mov and hlt in or push xchg mov lahf cmp (bad) mov add fnsave fcmovb pusha cmp repnz sbb jae ret jne out (bad) mov sub and test xor outsl dec inc fnstcw adc call mov push pop add push sahf pop lods cmp aas pop outsb into xchg lds shlb mov mov repnz mov cmpsb lret lret fistl push fcoms imul jmp mov lcall xor or pop rcll je jb lea cmp lahf sub les adc (bad) or pushf lock inc adc xor loope jo rclb pop inc xorl test jg test pop add add pop loope arpl push inc enter (bad) jg fs decb jno xlat cmp cmpsb inc leave mov lods test rclb (bad) sti sbb push push (bad) adc push sub dec jle xchg mov lods inc int3 lods in pop mov lods cmp lahf inc popa mov int3 sbb pushf inc repz (bad) int xlat cmpsb push clc mov cltd loopne mov xchg cld adc into mov in jae hlt loopne mov test ret sub mov movsl pop mov test xor sub les jne nop jmp out stos cvtps2pd (bad) gs and jne lret lods push sbb adc mov mov add mov clc call add int jae mov jnp mov hlt mov lock scas push data16 jns scas pop xchg clc mov cld add sub cli hlt mov inc jecxz sub dec pop icebp icebp ljmp jb mov xchg mov jecxz jnp lea adc in xchg pushw cmp sahf dec add clc into sbb jns (bad) jge pop jle cli fmull and ss pop pop mov xchg popf out aam (bad) je ljmp sarl jmp fwait scas (bad) cs loope adc dec shll popa mov adc stc pushf mov dec pop and adc push sbb xchg shr and aaa mov lea imul push jp fisubrl (bad) push pop lret jbe xor jp inc cmp jle sub lods pop in (bad) jne sub (bad) jne dec test subl out mov jo cld clc std jle rclb aad out cld dec int3 jmp add incl stc scas inc or and aam add dec jnp popf xchg inc mov lcall ds movsl inc jl push popa and fstpt adcl (bad) xchg and fsubp add add jbe add pusha ja (bad) cld push adc dec jp aam je (bad) insb ja loopne mov daa pop xorl and cs mov test into push pusha into test xchg lock ret jecxz lods mov into jmp adc mov inc jmp xchg sbb push rcrb movq sbb std imul rsqrtps and mov rcrb mov xchg and push repnz pop xchg roll ja xor adc adc mov mov rorl pushf repnz imul push push jle cmp xchg fstpt cmp hlt stc mull lcall aas cli mov aas inc mov inc cmp mov arpl (bad) cmp sub popa or test lcall cmpsb mov pop rcrb inc push xlat jmp inc fsubr std dec fucomp mov mov out mov (bad) mov mov xchg jne (bad) mov out dec test push sti subl ja adc xchg jg xchg jno iret in push pop scas dec imul rorl fiadd popl push into js outsb sbb sarb imul movsl sub jae pusha (bad) mov push repz fcmovnu lcall in (bad) mov rorb adc push call data16 ret in scas mov push popf adc mov or jl (bad) xor les mov lret add ret and jge outsb dec out imul rolb mov lret hlt push inc daa lahf movsl ja stos push pop data16 push pop and xlat int add add inc sti ficoml daa xchg add cld dec dec movsl xchg cwtl or xchg cld mov pop mov test inc jle inc leave xchg or sbb je push jnp mov pop cmpb int sub fistpll (bad) dec inc lock cld bound sti jb test (bad) hlt mov push fabs insl add hlt sub aad sbb pop test mov sti xchg xchg sbb pop pop frstor outsb push popl popa std aad testb int3 movsl or cmpsb inc sub test jns dec mov js sahf push addb test sub or neg pop test into rorl icebp repnz ret aad das xchg insb mov jmp test mov xor pop push adc add pop sbb call xor push aam out cmp int test icebp popf cmpsl popf in mov xor and int push jg jns aaa sti or stc push dec xchg xlat jg inc fist add stos popa jl std push xchg dec add xchg imul loope cmp or xlat mov pop stos aad sahf dec and push mov xchg icebp fmulp mov loope push pop adc mov inc es and sub dec std std add sub popa sub pop imul insb ljmp adc mov in rorb adc cmp mov jmp arpl lcall push aad mov aad fadds cltd dec mov ds mov (bad) aas add jmp cmc jle (bad) sar sbbl rorl mov mov or sub mov jg sub fnstsw push push js mov sti sub jo cmp aas int mov mov mov mov in mov add mov jg inc fiaddl add icebp pop shrl (bad) and push fsubs addl gs sahf lahf mov push pop cwtl pop decl mov daa (bad) xor ffree iret cli mov cmp add (bad) divl enter pop pop sub iret icebp add mov fmuls xchg jne cmp (bad) imul fcmovnbe adc or push xchg mov and sar lock push jge pop push xor jg sbb sub scas pop arpl outsl mov inc mov mov pusha mov stos add push mov cmp or or xor outsl and jbe pop subb (bad) in push data16 ret fs int3 jmp notl cld inc jns xor and test mov mov scas dec lahf fidivrl sub cmpsl popa scas push aam mov mov das ljmp inc shrl push and mov adc movsb in jnp mov sbb out jg addr16 mov in scas lock inc cmp (bad) jbe xchg es hlt sahf or mov das cmc out outsb pop jns jns jbe inc lds hlt fisub lea dec xchg lock call push cs jmp jno jmp sbbb clc in movsl inc test jb inc xchg pop push and adc aad pushl cmpsl lds rcl test stc call or mov xchg xchg adc inc or xor in mov (bad) mov xor lcall fbstp mov loopne xor fwait cs iret ljmp xor jne xchg add ss xchg mov (bad) mov dec mov mov lret movsl test cs mov sarl call lods add out inc add iret stos mov mov ds push pop pushf cwtl shlb (bad) jne sub popf xchg xchg nop sbb call mov and (bad) pop sub enter sub lock pop popf fs dec daa or mov push mov stos push insl mov test ret jo pop and iret pop xor in (bad) out cmpl dec jne jae ret std mov dec xor gs jmp adc sbb inc and incb int3 mov inc repz cmp pop mov sub cmp movsl and (bad) clc cmc lea lods push loop mov stos mov arpl mov pop jmp xor sbb push inc pop mov mov xchg xchg cmp and loopne inc dec adc pushf jle xchg or loope pop jb add jp and out push aas pop andl stc mov sub add shr stc xor or mov xlat xor sahf rol jb pushl shlb roll aad mov xchg sub in mulb pop stos orl in (bad) outsb and pop rcl neg lahf mov in add jb icebp ljmp sbb ja out jecxz mov hlt or inc das dec lret arpl cmpsl and lcall or sub mov xlat movsb mov das scas sub push xor shrl xchg sub and adc add sarb pop inc adcl mov or pop add mov mov lock aaa stos add pop sbb sub mov rorb mov (bad) sarb inc mov divl push cmp repnz iret aam leave out mov pop sahf mov adcb xlat inc inc xor repz dec repnz add add sub sbb pop mov or and inc pop pop pushf mov setne mov fcompl pop and test mov or xor add out mov pop inc clc arpl cmp or pop sub sub xchg mov imul lods loop cmpl adc (bad) in add xchg xchg cld gs mov sbb fwait movsbl aaa xor push daa clc seta xor ss pop aas popa xchg sbb inc in add or xchg jp and clc jb icebp ja push fwait push jo mov (bad) (bad) jbe pop pushf fwait ds pop and movsb insl or not cwtl xorl push aaa addr16 and and je and je inc test (bad) in mov inc faddl xor int jecxz and insw push outsl lock push cmp adc aaa pop cmpsl fwait incb ljmp stos push in add in jb mov adc inc inc jne (bad) data16 mov xchg scas push rcrb mov inc inc cli icebp dec cli loope add mov sti int pop stos cmp jle pop inc insb pop aad mov sub addr16 mov sub cmp add pop cmp ljmp mov xchg loope pushf out jnp (bad) mov (bad) xor pushf or cmp inc pop (bad) stc xchg pushf adc fs sub add add in mov jne adc pusha ds cltd mov and inc push loope dec lock popa xchg add popa std lret daa out adc add cmp int adc sub sub xlat cmc cwtl adc xchg clc test aaa pop outsb push stos cs in arpl xor xchg push jb addr16 test jne lea inc and xchg xchg cmp pop mov adc add scas hlt dec push pop icebp fucomp xor fdivrl mov xor int mov fwait push aad stc les xchg cmp add mov sbb les or in adc sub push fwait cwtl pop pop mov sbb arpl pop jmp test dec bswap cmp punpckhbw or lods cltd push xchg mov cmp inc rcr mov sub or push jmp out insb roll leave lcall mov mov test ret push test cmp xor push inc loope add sub adc jo xor sub xchg hlt ljmp jp push mov test les in adc jg mov jns sbb jmp jb pop push sub push jmp jge fnstenv mov jge sbb insl pop dec int or (bad) dec dec (bad) arpl mov add or push xchg push and xchg push daa jecxz loope aam mov push in sti or popf add xor push iret aas jo jb cmp imul pop ret mov mov sbb fwait arpl lods lahf mov lods std adc ljmp ja mov inc in jo roll popa repz mov aaa xor std sub push cs jl push in jo inc xchg pop or add pop stos mov jnp enter and in fdivl mov es push out out mov mov pcmpgtb or daa fsubrs js push or mov mov mov repz inc adc dec (bad) or push call add sti sahf or pop sti adc fnstsw test loopne dec xchg scas jecxz and ret aaa outsb push ja pop js mov pop mov fldl hlt adc xor xor sbb add (bad) fstpl pop push lahf pop dec mov (bad) in jp (bad) (bad) test int push jge mov add xor mov insl aad push sbb pop lret sub arpl mov clc mov into mov cmp and lret sbb xchg jg sti jmp (bad) pop stc cs int faddl pop add mov pop loope add in xlat dec in jo pusha or cltd push in aas fsubr (bad) shll sub ds (bad) mov pop adc jg add fdivrl add insl mov pop sbb cmp sbb xor mov sub scas (bad) idivb cmp std mov mulb std std pop push test mov je insb mov mov adc out hlt test cmp (bad) xchg mov cmpsb dec leave add mov xlat fisubr in adc rolb les test mov popf mov fstps and jae into rol cmp and pop lret dec jg mov xor clc inc pop and rcll jnp enter fistp mov in data16 test jne jo mov test not std jno inc cli outsl hlt xor mov mov lock pop nop push in rorb jb jnp mov loope out sub inc add mov movb xor xchg adc outsb repz jg mov mov fwait xor inc push (bad) and scas or enter pop fsubrs mov pop and aad int std jb mov push scas lahf lcall std outsb clc clc and (bad) lcall notb call cmpsb push lcall cli pop dec or aas jb bound xchg xor mov jge test ret xchg xor dec ja sbb jnp jae int3 xchg add cmpsb mov (bad) out adc add xor loope pop out pop sbbl arpl nopl pop dec pop nop in outsl mov mov js adc mov paddusb lods cmpsb loopne push cmp std out xchg inc pop imul xor inc js sahf repz push mov add sbbl jl ret (bad) addr16 sar ret dec addr16 cmpsl add jbe fdivs scas ffree push sbb xor add mov int jecxz sub js mov (bad) imul out lock xchg dec repz mov push xor in xor xchg out mov and sbb mov or das enter sbb repnz in cmp shlb mov cmp sbb (bad) or test mov push add mov add lret adc andl or aas js (bad) sbb call jne into or xchg push jae add dec jp insl xchg add test aam and cmpsb rcll mov pop enter push scas jecxz das lahf xchg lods lods fisttp ret (bad) and (bad) in icebp (bad) (bad) mov gs cli jecxz add outsl pop imul push and loop mov jl in dec mov icebp mov hlt loopne add iret mov push add std jp mov mov sbb daa xor pop push adc mov fidiv aam inc inc sti xor inc jno dec push push push xchg push (bad) std mov dec mov andl and cltd cmc adc (bad) mov mov (bad) imul mov mov xor test rcll push add lds cmp pusha or fwait push sbb jge xchg sbb pop hlt add js pop adc sbb xlat adc mov jmp add lcall dec inc mov inc add add and dec out sahf cmp leave cmp (bad) enter shrl sub gs and call and daa inc js pmaxub outsb lahf add jl stos inc (bad) hlt mov or push mov pop jnp mov out (bad) popa cwtl iret sub int jecxz sub mov fisubr dec sbb xchg fdivl xor daa jae pop mov and or repz aad dec lret pmuludq dec je and push dec mov insl or out push (bad) fwait push fwait adc stc es nop test lahf call sahf rolb mov dec int3 mov or sub xor orl mov pop test rorl xlat loop sub repz mov test push pop les inc ret inc icebp add sub cmp mov js cld cmp jns out jle (bad) (bad) mov sub cmp popa std push or mov cmp mov test mov data16 mov adc insl clc cmp sub aam cvtpi2ps mov cmp mov push inc pushf fdivl aad pop es push and ja fdivs sbb inc pushf dec xchg je jge lea lock pusha (bad) jmp add (bad) xlat and mov stos mov fs push loop je xlat and dec mov cvtpi2ps mov ss lods out div in mov mov pushf test sbb sub mov call inc xor pop pop mov sbb out pop mov xchg or sub xchg sub mov mov adc sbb pop (bad) aaa mov (bad) jecxz leave clc (bad) sbb xor push adc mov push sbb push and sysexit add mov or hlt mov aad enter jns ret inc push cmp insl repnz cmp rol aaa repz and lods popf out jbe xchg or cmpl xchg push jae sti jne cwtl movsb mov xor sub in mov xchg push movsl cmp add shl add jae xor test xchg cmp fisubrl adc xor mov fsubrl popf gs adc or das dec out icebp inc push xor mov rorb inc push (bad) jecxz cmp pop fimull movsb insl outsb cmp cmp and test test out loopne xor mov jae mov pop cmp sbb xchg push sar sbb mov iret inc and add pushf push lcall stos scas or fdiv stc lock mov or mov jbe ljmp mov pop add inc jg adc jo (bad) adc jb out lods iret mov mov sub jne pop shrb or mov pop xor pop jmp mov and xor inc pop stos jp sub (bad) cmp lods fsincos cmpsb cmp inc fmull jg pop push repnz xchg leave std mov mov das and sub dec or mov mov and enter fwait es and addr16 xor sbb cmp and fiadd xchg pop mov loopne repz pop out pop imul in dec mov clc xchg popf pop pushf fsts int3 into dec loope or frstor nop mov pop rcrl sub and repnz ds sahf add add add mov repz (bad) hlt in dec sub scas popf ffree push or fbld mov jge je in nop gs dec popf xchg adc rolb push aam enter mov push out psubusb daa sbb push adc test jge sub leave flds inc pushf aas dec (bad) add jno xlat leave mov in ja pop mov sub dec sbb insl mov push and ret insb sbbb xchg adc call push push xlat std or add test dec and mov test sbb mov (bad) pop mov jl sbb xchg stos or jmp or out pop or xchg test lds and pop ljmp addr16 pop es pop int3 out inc pop pop cmp shrl pusha outsb mov pop out (bad) repnz push jo lods dec sbb mov sbb add push push scas dec add movsl inc sti pop dec jmp jo clc push out ret into loop mov dec jl pop sbb sub fcmovnu add push sarl mov loope cltd dec idivb xor sbb and rcrl (bad) push (bad) (bad) jne mov dec bswap loope cmp push sti fdivs les jle mov mov fcomp fistl fstps lock fnop xchg mov inc mov (bad) xor adc add out jmp adcl cmpsl dec mov xchg lods adc jge out cmp fistpll pop je xchg pop pop ljmp dec jae jp fimul hlt dec mov adc insb fucomi pop sbb (bad) mov fcoml cmpsb add (bad) sbb and int xchg lahf repnz or xchg jl pop sarb xor jmp (bad) push xor test cs pushl sarl outsl add xchg ja incl insl inc xchg cltd push mov adc and aam or dec setb mov loopne jo pop push icebp adc pop fimul (bad) not lock mov dec das ds push inc pop jb adc xchg cmc cli loope (bad) adc sbb push push add daa cs movsb xlat sub cmc bnd (bad) mov aad fs push lock aaa cmp mov and test cwtl and add jmp sbb lea lahf mov enter flds push (bad) sahf mov (bad) fnstcw fstps cltd adc movsb in jbe test repnz mov pop (bad) lods fcmovu adc mov sub lods rcrl das sbb mov sub xor inc roll xchg cmp mov cltd mov mov mov and lock mov andl dec cmp es daa add lret adc adc jle cwtl cmp cmovbe adc mov subb xor push dec dec push mov sub sbb into xchg push (bad) jbe add push addr16 mov (bad) stos cmp add andb add pop push ss imul sub xor cld leave dec adc ror rclb shlb dec outsb xor in dec add jno out xchg mov cld shrl out ret sbb push lds xchg mov les jbe ret sbb inc sbb iret jmp jbe nop in das or leave (bad) hlt or lret inc out rcrl mov inc sahf std and jnp idivl pop outsb push stos cs sub mov cmovge arpl cld xchg or or scas add add mov xor lods orl dec mov repnz push push sbb dec icebp lea dec xchg fisttpl adc call cmp fcomp push scas mov scas xor out imul loop test cwtl pop pop loopne (bad) xchg lret rorb adc (bad) mov xchg in inc jle sub outsl pop sbb sub or xor sub mov (bad) cmc pop push stos dec mov fisttpll mov pop loope nop dec xchg mov aas cwtl or mov sbb lods mov ljmp lcall add sbb subl aam jns stos insb dec xor inc das aas jmp divl popa push adc mov mov (bad) int3 shr and inc arpl iret inc pop (bad) int3 inc jecxz push push pop pop fstl jg xorl adc ret xchg (bad) mov sub hlt jno mov or lods push fmull fimul repnz frstor outsl aam cli sbb or push adc popf js jecxz sbb dec cmp fidivrl or pop cld lret cmpsb int3 lods movsl stos mov addl jne xchg add push mov leave mov add mov and xor push dec ljmp gs gs xor lock mov inc repnz add cmp cwtl cs adc call fucomi mov xchg lods test mov jbe enter push push mov test jns mov jle add sahf iret xchg xchg xor mov out dec push mov popa mov int3 or loop mov call mov push imul mov (bad) sti int leave mov push and lods mov cmp dec popf sbb aam and mov cmp mov arpl ret incl testl add add test jle fs ret andl pop push movb push aad ss rorb and fimull dec leave inc mov pop bound adc shl and xchg (bad) into daa popa je lock fistpl lret cmpsb bound hlt adc push imul rcll int inc outsb inc fiaddl aad imul (bad) jecxz aas in inc addl jae ret sub aas inc mov cs inc add inc push push sysexit sub enter dec add scas int into add xor jbe andl in loopne jl push dec (bad) and call in adc and pop push in and mov sub push fsubrl pop mov mov (bad) rcrb imul iret outsb ficoml (bad) loope mov clc xchg fidiv icebp push nop int stc or lahf mov lock je push sbb test (bad) out js fcmovu ret cmp cmp lahf movsl push mov adc and and sbb mull adc sarb aas fstpt mov bound dec push mov sub mov sbb dec aam popf gs cltd movsl in addl adc repnz ja or cmp cmpsl call mov pop mov cmpsl imul (bad) xor icebp sbb mov cwtl cmp arpl jo mov imul cmpsb fldenv push jmp mov int add lods orl inc imul mov cmp outsl push rcl in aam sbb scas pop pop push pop loope push sub dec add mov nop jmp push and test (bad) jae mov xchg or xchg lret push adc ja arpl imul add jmp repnz daa scas in dec lods add test or jp int pop dec idivb add (bad) movsl pop push adc pop pop (bad) ret mov ds mov or pop cmp cmp sbb and and cli (bad) nop mov xchg mov sub (bad) pop and xchg test test push mov sahf fcompl xor adc inc pop call fstpl inc mov mov fdivl mov mov pop jg push cmpsb stos and bound push cmp sbb adc int xchg imul jnp cwtl dec imul jns dec sahf mov add (bad) cli mov fimull int3 and int3 xor jle xchg lahf pop sub jecxz mov push out dec mov mov dec imul pop or jle pop mov pushf popf cmp fs sbb repz nop popf orl cmpsb and enter xor movsb cld sbb js xchg inc (bad) icebp push ja ljmp loope lods sbb pop push inc (bad) push pop mov loope int out pusha dec mov xchg mov mov (bad) jg adc ret pop and mov add jle pextrw insb aaa cltd inc cmp lgs lds push lret push mov xor xor dec pop into adc addr16 adc iret cmp push lcall sub jns (bad) xchg std aaa sbb js jne ret fcoms fcmovu stc cmp sarb fldenv (bad) jns mov mov push push mov ret sub out loop xchg fs decl notl pop mov out (bad) push (bad) mov pusha cmp loop jne lret dec sub fstp mov mov push cmovns add mov inc xchg mov push decl call add xchg push cwtl ret in adc pop adc fsubs fcoms pop int pushf test sbb jo cs loop test xor cmc lret gs push jnp insb shr mov popf jne sbb in psubw dec mov jmp push ljmp xor hlt (bad) out adc mov loop (bad) lret arpl xchg sbb out adc js cli lods cmpsb xor mov xor jecxz repz jp jae cmp pop and xchg mov (bad) push ror add inc scas add and push push sahf cmp jg or and sbb mov adcl arpl dec xchg add jno add jl test das sbb mov jbe mov loope dec andl nop decl shlb in inc sbb outsl sub loope cmp add xchg cld mov shr mov jne push out mov aas je xor imull lahf in stos inc or ljmp subl jle sub shlb pop jno adc xor pop test je dec mov lds dec xor xor in push fisttpl test mov cs mov jb orl faddl sbb movl mov inc xchg or xor and popf lcall pushf push mov out xor cld adc push stc inc sar mov leave and mov push int hlt mov testl loopne lds (bad) mov lea mov cli loop test pop test mov jbe xor orl lea test xchg dec aam or addr16 rclb out (bad) sub pop push mov add add insl shrd xor cltd ss movsl pop or xchg fucomp fcomps rcrl pop out (bad) mov out sti clc push sti out push lods dec inc adc sbb fistpll add xchg into mov dec ret mov adc inc dec push dec (bad) ljmp (bad) mov daa das (bad) inc pop or orl bt rorl add lods dec sbbl pop add insb dec out mov lcall jmp fwait inc or in stos mov lcall dec adc (bad) push movb xor aas xchg push and sub lods cs adc or (bad) nop sti mov js (bad) cli scas mov xchg repz mov test test lock jbe cwtl push xchg mov adc push cmp outsb jbe and in js call ss enter sbb inc add jae cmpsb jnp pusha repz xacquire jle aaa cmp pop sarb test pop inc lea xchg out and adc icebp rclb cmp or add jmp divb icebp (bad) imul mov aad mov popf pop cmp jp aad sti sbb lret call hlt cmpl jp add and pusha mov xchg iret rcrb loop pop int3 xor xchg adcb and jmp in inc or and sub imul or repnz call sbb enter cli dec sub and dec pop jo sbb int mov xchg dec pop dec xchg sbb lods test shlb pop (bad) insb (bad) test vpsubw sahf xchg popf dec push inc fstp inc sub incl mov cmp add sbb das jbe ret es cmp jmp mov sub data16 or push adc inc pop lods inc fucomip cltd adc pop (bad) cmpsb cmp or add pop add orl sbb jecxz insl fisttpll lret negl icebp xchg pop ja sti pusha loop aad xlat call inc insb xchg popl mov call movsl ja movsb pop cmpsb xor pop rcll pushf aas mov ljmp sbb dec sub mov fdivl (bad) in dec sahf movb subl adc loope aaa addr16 pusha sub in pop loope pop lret adcb push imul (bad) mov jmp xchg aaa jne dec xchg xchg xor or leave mov out shrl lods cmpsb fcomps call jb sub lea out jmp inc shrb sbb mov adc xlat data16 mov loopne dec fsubp add adc inc or (bad) cmp cltd pop add dec lret insl xor fisttpll fadds add sbb js repnz stc add orl pop repnz cmp mov jno lods and pop imul sbb pop pop loopne add int3 xor (bad) adcb into mov jecxz ret in xchg lret (bad) data16 inc or mov mov out mov sub roll aad mov and adc rclb shlb pop movq gs xchg pop fmull mov xchg sbb out insl dec dec movsb pop jb enter ror js (bad) dec (bad) xchg add pop adc (bad) cld mov xlat sub lods sub dec insb pusha shrb xorl push xchg mov mov into jle mov movsb sub sbb dec js pop pop movsl xchg mov (bad) jbe test or repz and sbb adc adc xchg push adc addr16 (bad) aad movsb mov loopne imul imul cmp loopne mov xor push int3 mov test or ret (bad) loope in add (bad) and (bad) xor mov sbb lahf jecxz aas scas add cmc jmp stos ljmp sub pop mov jne mov xchg or lock jb xor cwtl and repz cmp movsb icebp add movb adc fstps lods xor aas sti sbb jp sahf jne (bad) stc je add sti jbe push xchg lock int jb lcall cmpsb jp rclb (bad) mov xor loop push popa lret arpl jl mov sbb repz ss aad pop inc or sbb jb mov mov add push jae mov insb jmp inc push cltd movsl ja das cwtl enter or gs adc dec in dec fldl hlt aaa push dec cmp adc push test lret subb ljmp mov hlt enter call push cmp dec xchg ljmp imul mov xor cli sub or xor pop mov repnz sbb lcall sbb mov mov pop and mov jp imul add notl and cmpsb mov adc pop inc fcmove pop adc es xor pop jmp movsb loope xchg and testl xlat insl in mov (bad) mov (bad) adc jbe icebp sbb add popa test imul add test dec push insb sbbl or or add mov std adc xchg adc xchg mov mov dec lock clc repnz repnz push (bad) (bad) outsl out lret sbb fstpl mov mov sbb or scas cmp jo iret mov ret sbb dec imul mov or repz mov icebp mov sub hlt fcomps aas ds lods jp cmp pop icebp ljmp add or cmc lods sub jnp jne sub fimull mov mov xor xor cwtl jecxz cmpsb mov pop out pusha and ja xchg push dec jle,pn test xchg mov call bound cwtl sahf gs dec mov xchg push call stos mov sahf out jg xchg fsubl dec pop cmp loopne cltd mov fstl mov setle xchg adc faddl into sbb cmp mov dec pop call pop mov (bad) and in push or sbb xchg jl cmpsl mov lret iret (bad) push xchg (bad) std stos xlat aaa sub rolb mov pop push adc stc or cmc xor das daa pop jg pause inc xor loope movsl pushf imul fucomi and dec jmp mov outsl fs jne enter out cs dec and mov cwtl rolb mov loope in (bad) mov cld repz lret jge jl stc enter (bad) cmc mov push (bad) adc andl xchg imul jp ret push in (bad) jg test mov dec fstpt sbb leave (bad) dec push mov in in pop repnz inc jnp cmp out xor xor jnp fiadd sub cs popl fbstp fnstcw push pop insb xchg sbb idivb lock pusha xor push mov jmp jle idiv loopne push das gs mov mov cmp jle dec mov mov jg xor (bad) icebp push pop xchg sarb gs sub mov lods add inc push dec iret mov pop fmuls cmp sub push or push shlb pop ror (bad) hlt cmp xchg loop jle sahf mov xchg call int outsb xchg push ret cmp inc adc loopne aam sub sbb xchg pop aad and mov lods loop scas sbb sub in jecxz xor fidiv and aaa and xchg addr16 mov xor ret mov and jns (bad) mov icebp test loop enter testl (bad) cwtl lock in mov cmp jg fimull sub dec push inc mov inc add xchg dec inc mov daa (bad) or addr16 (bad) jmp xor lds insl pop sarb lods mov stos inc movsb jmp jle add or jno cmpsb pop xor xchg pop out (bad) jo pusha jmp repz jl and cwtl test fistl lods lods into lods cld out cli xchg mov push (bad) adc sbb xchg adc movsb aas pop mov movb repnz push and test lods jnp stc and or ret mov aam dec jecxz aaa fnstcw negl test mov addr16 xchg xlat pop cmc nop scas lock pop mov ja and sub xchg mov xchg cmp je js xchg mov out dec (bad) es movsl sbbl pusha sbb xchg mov pop dec push outsb sub repnz repz repnz inc add mov insb or mov cltd mov cmp ja jnp les pop mov (bad) cmp jne fsubl iret fbld mov or xor pop jmp movsb daa imul mov shrl pop pop and in (bad) hlt enter or pop clc fdivrp cmp cmp jmp test (bad) cmc lahf enter rorb lock lea jecxz fldl pop pop (bad) mov lock cmp rorb mov les cmpsl mov aam xor pop lret mov push mov adc adc and mov loopne jg push mov inc xor cmpb int daa arpl add (bad) mov adc js sub (bad) iret add mov lahf (bad) jmp xor lds insl inc sarb lods mov stos inc movsb jmp jle add setl push jne pop xor std popa cltd aad lret (bad) or mov out push out test fistl mov into lods cld out cli xchg mov push (bad) adc sbb xchg adc mov in fs lret xor inc mov (bad) fidiv stc and or ret mov aam dec jecxz aaa fnstcw notl lods decb xchg xlat sbb push orl out xlat cmpsl sub dec jl sub je js xchg mov out dec shlb and movsl sbbl pusha adc xchg mov (bad) or stos xor std hlt iret add sarl push dec pop faddl (bad) jne push into mov jb mov lods movhps repz data16 sbb nop jle adc lret or inc shr mov adcb cmc cmc imul sub add ficomp fdivrp cmp cmp prefetch cmp lcall (bad) mov mov stc cltd lcall in dec xchg sbb xor pop notl les push mov mov inc movsl lcall loop test xor push lret adc jg xor stos mov loop mov sbb (bad) jbe xor xor sahf bound xor xchg out popf hlt cmp out outsb inc mov scas pop jo xor sub sub push dec ljmp push divb mov fdivr repnz jbe and dec ret cli adc add out mov dec fwait (bad) xor insl fstp xchg ss pop mov add hlt jp test add xchg lret fidivl xchg sbb hlt (bad) divb pop imul pop test cs xchg and mov push dec insl dec and leave scas sbb dec inc mov sub mov aaa cmp test xchg mov cmp lret pop (bad) out outsl adc xchg ja adc mov into daa orl jmp and inc xchg add dec xchg andl or adc cmpsb jnp pusha repz repnz inc add mov test push mov popf mov cmp addr16 cmp nop inc jb or std pop xor (bad) popa fwait aad lret mov inc inc add xor dec mov nop push jnp push mov jecxz icebp xchg cmp (bad) ficompl mov mov insb mov sahf dec leave jle dec test jecxz sbb xchg pop aad and popf inc fldl lods jb scas sbb sub incl mov sahf clc and aaa and xchg cmp daa xchg push adcl push push cltd mov icebp test loop enter fildl jo inc add in mov and jg (bad) dec pop aas mov xchg andb adc inc or sbb cld (bad) iret pop jne cmp jmp xor lds insl jne jge lods mov lods inc movsb jmp jle add or jno cmpsb pop xor xchg pop out out arpl push imul (bad) out push out test fistl xchg fdivr xchg mov push (bad) adc sbb xchg adc mov in fs lret xor xchg jp pop (bad) scas (bad) xor or ret mov sbb aam dec jecxz aaa fnstcw negl movsb decb xchg xlat pop jmp pop lret in cli cwtl cmp add add add cmp je js xchg mov out dec adc and movsl sbbl pusha cmp popf aam cmp sbb mov mov sub bound stc cltd sub push inc ljmp adc inc ss adc jmp inc sub push mov fmull jbe pop fsubl iret fbld mov or xor mov lcall fldln2 push mov cmp arpl into add lcall sub jmp sub loope adc stc mov add xchg inc fldl lods push movsl scas sbb sub std inc jecxz xor fidiv and aaa and xchg sub mov stc sti in mov pop cs cmc mov loopne jg push mov inc xorps cmpb lret arpl movsl pop push lcall cs repz loope mov jmp xor lds insl jl jge lods mov lods inc movsb jmp jle add cwtl (bad) jb jns xchg xor incl xor adc add out mov dec fwait (bad) xor xchg ss add dec fdivr adc jp test add xchg lret fidivl xchg sbb hlt (bad) divb pop imul pop test cs xchg and sarb push test dec and leave scas push loop inc mov sub scas push sbb cwtl lahf sahf addb cmp pop (bad) out outsl adc xchg ja adc (bad) mov daa loope xchg lock mov mov jo loopne inc xchg add dec xchg andl or adc cmpsb jnp pusha repz repnz inc add mov call sti enter inc das ljmp lcall jbe or jb mov xor pop inc or or divl xor pop mov nop push jnp push mov sub xchg cmp (bad) ficompl (bad) mov sbb hlt (bad) divb pop fcoms pop push mov sbb xchg pop aad and lea mov sbb sub repz jecxz xor fidiv xchg icebp imul cli nop xlat loop test sbb push stos adc jg xor mov mov sbb scas mov add popl daa add jns or adc mov mov cli sub js pusha shrb gs mov push xor mov or cmp cmpsl sbb push sbb popf outsb lea adc sbb mov dec add jecxz loop movsl and xorl test push mov ret cli add jp xor sub pusha pop aad pop cmpsb subl loopne cmp fwait loope pusha add test mov pop sub push loopne push (bad) fstpt xlat push lds sti sbb pop lahf xchg mov xchg out mov mov sub pop jnp cld andl repnz insl xchg pop mov dec sbb test push mov push and sbb sub je js inc mov fsubrs xchg inc call hlt fcompl or xchg dec adc jo outsb std pop loop jbe xchg cmp cmpsb dec sub int3 or das aas jmp pushl test popf mov (bad) repz or inc lea ja xchg jbe cmp jle sbb pop pop flds (bad) repnz or cmp pop lahf orl and mov popf aam insb or pop clc push lock push (bad) je mov jmp movsl ja mov loopne sbb pop lcall lret inc jle test repz add sbb movsl push xor stos or and cld pop lds (bad) enter push mov xchg dec jae insl add mov ljmp xchg rcr inc sub fdivrp xor dec push xchg clc insb stos push mov ljmp lahf add dec xchg mov sbb scas mov push sbb lret insb sti inc sub xchg adc sbb xor outsb fcmovnu and cmp jbe adc roll int3 sbb xor (bad) mov and push out test (bad) push xor call outsb add fidivl lcall cmp movsl push pop imul (bad) jmp push imul pop int3 adc jb call sbb and add pusha (bad) jno fisub repz sub cmpl sbbb in movsl pop lret pop (bad) out outsl adc xchg ja cs cmpsl mov cmp sbb jbe and pushf lcall xchg mov push jle push push (bad) xchg xor xor jge adc clc xor push mov and jecxz pop dec lods cmp add bound jno push outsb sbb cmc ret mov fidivr cmp inc sbb call mov (bad) xor cmp xlat push or (bad) cmp out push sbb cld and ja push jge jae arpl pusha pushf std mov mov in test iret je or or fs enter mov test pop push mov (bad) xchg push sub push mov pop mov xchg stos mov sub lea jnp icebp fdivs in test out aaa jns cmp pop cmp repz cmp sahf je mov in mov imul fdivrl jbe popa inc in push lock sub cli adc add dec pusha les das dec mov mov mov jge out mov and and gs (bad) adc rep mov sahf dec jne jl xor test jae xor std popf or and fsubl iret jb divl xchg push mov push out mov jbe ret repnz adc xor pop mov neg lret (bad) lcall dec add out mov imul stos lcall pop (bad) aas mov mov das lock aas dec in pop test pop push cwtl xchg xchg cmc outsb adcl popa xor push lds add jb sbb shrl sbb test clc out mov or adc add data16 ret into add add push cmp cmp jb ficomp in xchg mov pop bnd xor lea xchg mov test mov lds jb or ret mov aad mov sub ss cmpsl lret in stos cltd adcl outsb mov lods mov dec loopne,pt sub sbb cmp mov lock mov int3 cmpsl arpl xorb xor cmc inc js int push out mov ljmp test inc pop call cmp mov push rorb or dec (bad) cmp add sub cmpsb add rcrb movsb cmp adc push mov inc out clc cmp out outsl dec es ljmp out div jecxz cmpsb sub mov mov jnp imul jmp and push mov jae push xchg cmp mov divb mov imul inc push data16 mov adc rclb mov ret roll loopne in into data16 dec or sbb rcrb stos (bad) iret shlb cmp arpl outsl stc subl dec mul outsl fwait or daa push call enter mov inc test mov fldcw lret or xor mov fs jl arpl ljmp mov mov fnsave lret lods jo rcrl push push inc sahf lds jmp push lods int3 xor int stos jl cmp shlb ja dec outsb sbbb out arpl ret or into scas adc cmc loop fsubs movl jp shl xor sub loopne adc xchg mov pop push sahf mov or jl inc inc push (bad) sbb cmp shrb pop jne add imul jmp or mov mov aaa fstl das sbb sub ret dec push in mov daa repz dec xchg sbb orl jnp fwait outsl cmp int3 in cli dec dec gs ja dec (bad) pushf sbb int jae lcall aad (bad) mov xchg cs push cwtl xor pushf sahf in movsl xor icebp gs cmp push insl test cmp sarb enter inc das insb negb cs lcall xor lret aam (bad) cmp jbe push cmp enter divb xor inc sbb ficom mov push mov cmpsb sti pusha or push xchg push lahf mov pop ja sbb mov in pop xor test jb leave nop lods sahf push inc xor call pop test test and push xor mov jb outsl cld xchg es (bad) shlb (bad) out xchg dec pop rorb addr16 cwtl push mov cmp xchg cld ja lods cmp aaa int add scas jo mov inc sahf movsl test pushl js and mov push int in movsb aam repnz pushl xor mov inc movsb jns lcall ss xchg mov lods out cmp xchg and dec mov imul dec xorl int outsl aad add jno stos mov push jmp ja or lods lock (bad) out test mov mov outsl aam jne das sub jnp (bad) xor int3 (bad) icebp xor pop sub jns fucomp mov subl xor xor pop mov and lret push stc sub or repnz pop loope sbb test movsl out cmp dec jae xchg adc push xor sahf push inc lods sti out mov dec push xor xchg shlw xor sarb in sub out mov adc mov dec pop adc fsubr mov test mov push mov or mov cmp int in cmp xchg push call gs pop (bad) adc pusha and mov xor je mov pop pop loopne aaa stos adc out je push out (bad) out dec jl das sbb and in or out mov push pop xchg imul insb aaa cltd xchg mov mov mov xchg mov loope sbb dec cmp scas or inc sbb jbe in and repz adc or adc push jne sbb pop xchg jae lret xor sub repnz outsl xlat pop jge push mov jmp push jne ja ss repz cmp xchg pop sahf sub (bad) mov jmp xchg ror (bad) repnz hlt push stc or in add std jge sbb push push imul clc jno add jle xor xor dec xor cmp shll sarb jnp inc inc clc ss rcrb or lahf cmpsl dec mov xchg movsl push xor stos (bad) hlt pop sbb xor aad add inc dec bound ret sbb or sti jecxz xor lods (bad) mov xorl push es hlt add lahf shrb ret insb push sbb add add cmp mov sarb shrl sbb ret mov sub data16 add lcall cmp lcall mov lea xadd call mov pop aad inc mov fdivrl (bad) adc aam jecxz loopne mov mov or in clc mov test add cmpsl mov (bad) mov imul bound clc inc cwtl loope cmp ret (bad) xor adcl insb aaa cltd inc cmp or dec cwtl mov mov lock sbb and hlt ret push lods dec imul cmp and fxch xchg ret push pushf and lds mov mov inc jecxz inc lds adc push fisttp sub dec mov das popf jbe fnstsw popf fistpl aam iret xor mov dec mov jge cmp rolb cwtl jo fmulp add mov sbb sbb pop dec and push movsb dec (bad) jae in clc mov sbb ficompl sub sbb nop (bad) popf nop and (bad) sub rcrl loopne ret (bad) pop cld sahf jbe sbb fcmovnbe in and sbb xor cmc aad add pop dec bound ret sbb or sti jmp cmp pop cmc cmpsl mov cmp mov inc stos mov push out mov add roll les insb sti dec adc sbb jmp aam outsl pop or rorb mov arpl loop mov mov jno call js sahf mov jbe fild das dec imul mov fstpt fst add cmpsl es push call jge (bad) rcll ret sarb (bad) xchg in or cmp inc sbb adc jo or pop sbb stc and jmp push test mov inc popf sbb mov push ss dec outsl insb aaa cltd xchg adc push imul jmp out fwait jge movsb aas xchg ljmp pop scas scas xor xchg mov sti (bad) jne movsl lods mov sub sahf ret dec xchg mov std push push dec or test enter sahf xor jnp std jne xor mov mov shlb sub iret inc dec xor int imul sub sbb (bad) sahf fwait repnz or mov jl cmp (bad) add dec sub ret ret cli pusha loop (bad) pop and mov xchg xchg sbb dec cltd clc xchg mov adc jnp (bad) push inc lds push pop das dec mov (bad) sbb jmp (bad) aam fxch shr shrb addr16 (bad) (bad) in mov dec scas in add inc mov xor xchg hlt mov icebp mov icebp jno xchg jo iret mov sarb jne movsb popa lds mov inc sub push cmp cltd decb jno xor test add xor push dec clc scas ljmp int3 fadds dec add xchg sbb jno mov jmp cli mov add sbb sti push jl mov sbb sbb loop jno popf mov or adc xchg clc out add sbb sarb out nop pop push inc scas ja mov sub mov inc pushf xlat popf adc sub push cs roll (bad) out in test mov fucomip mov mov mov sub push aas and and stos addr16 (bad) xchg xor lock xchg pop xor mov mov icebp xor ret cmpb jg gs cmp jp (bad) je stc test fidiv or sti xor sarb cmp add scas sarb out jecxz mov dec xchg adc mov scas enter cltd sub and add xchg jb xchg push (bad) es mov or sub jb andl inc in in and jg push gs inc out (bad) outsb lahf fsubs je mov push jbe es loopne push nop push add movsb pop mov lods mov sbb jl fldl hlt cmpsl dec ret adc (bad) sub push mov in cld pop sahf sbb xchg (bad) in add push in sbb fwait jg arpl imul xchg lock aaa push (bad) std sub mov and loopne cld xchg lods pop rcll pop xchg aas jg mov mov push cmc jp xor mov div inc add xchg cmc aad push adc dec cmp lea and inc xor faddl loop jmp inc pusha scas sahf mov cmp lods fnstcw imul insl fucom imul (bad) xor mov mov cmp test sub inc (bad) lds push cmp jbe sbb gs add add jb fcoms aad fstl push sbb add jns push mov dec mov mov inc shll xchg sbb out mov xor sub scas cmp adc test cmp sub cmp (bad) push pop ret sub dec inc ret inc aad movsl stc jo outsb daa jecxz subl xchg xor jmp imul sub out imul push sbb mov xchg inc lcall cmp outsb sub pop jge push mov inc xorl sbb inc add pop jne fiadd push lcall in icebp sbb ror mov jo clc (bad) in jecxz xchg nop movsl mov fstl (bad) aad ja stos xchg out adc mov pop fistl je jmp std inc mov pop gs loope test pop mov stos int mov mov cmc dec fs dec mov pop rolb inc int3 hlt scas imul je loopne jg push mov xchg imul mov lods xor out mov ja insl push movsl stc jo cs sti repz outsl inc or addr16 (bad) jmp xor inc push mov stos inc aas xchg aad das (bad) (bad) jb xor fisttpl sti cli push movsb and sub jmp pop (bad) lret xchg (bad) das mov pop sbb out push out test adc in popf into cld pop outsb loopne sahf cmp test push pop xchg fldt jp icebp lret jne insb xchg test push inc mov andl stc and or cld mov xchg or out mov mov and fdivrl repz fidivl in aas push and leave pop outsb sub cmp dec jae mov je pusha adc in loopne daa in cmpsl push cld add dec pop sub cmp mov out cmc movl fistl ds xchg stc push jmp outsb mov add das aas jmp pushl stos inc lahf sub lods aad loop xchg add jno mov sti fistpll clc mov jne fsubrl xlat fildll mov pop add ljmp inc pop test lahf orl test xchg lods test sbb mov add ficomp push pushf cmp fwait add and cmp mov pop xor sbb mov negl (bad) xor inc movsb popa pop and out mov inc in sub incl jl sub insl pop in test lea in out imul mov cmp inc dec mov jnp xor push xorb lods mov jp mov xchg push pop mov mov sub (bad) repnz lods xor rolb shll lods adc xchg and mov push outsb jmp lock mov xchg jp xchg push movsb lods fwait mov push sbb push xchg jne adc pop xor mov ds std mov adc xchg gs dec test rol inc pop and adc or or mov int3 inc add pop jno xor inc movsb or daa pop out rolb in les cld dec jg mov pushf cs push in or xor shlb loopne popa (bad) idivb pop mov push (bad) fucomi enter sub test pop inc das push xchg mov push jle push push (bad) scas mov mov (bad) cmpsb popa test mov xchg in movsb sarb and sub and add inc lock pop jns fucomi sub sbb daa iret fbld cmpsl enter add loop mov lcall cmp mov cmpsl jp out (bad) sti add add xchg pop push sub loop jo hlt and jmp push mov add int pushf xchg aad pushf push outsb inc in rcrb imul in leave mov xor sbb mov loopne rcrb mov rcl jnp push in stc shlb in sub addr16 icebp pop hlt lahf outsl add test movsb mov add inc (bad) push lds inc lods jo xlat cmp stc out cmc movl jo cs int3 xor cmp outsl pusha sarb ljmp mov dec lret aam jbe or fs inc fwait fwait sub rep test inc adc icebp add cli adc mov or movb pushf mov shrb (bad) xor arpl push enter inc and jecxz mov inc ficompl fild (bad) rol out pop cmpw ret js movsb mov imul stos test outsb cmp sub adcb outsl push push add mov rcr stos jno addr16 mov test or jmp icebp cmp add lock scas dec cmp je js push shll push mov ljmp daa inc cmc shl push fistpll adc add fisubr push pop mull mov icebp icebp or divl jo xchg scas adc dec mov mov dec popf and adc fadds cmpl sbb push fs rcll lret cmp xor adc jo call leave dec mov in mov inc mov cmp (bad) int cmpsl inc jae adc adc call sbb in adc in mov cmpsb das into xchg iret pop subl fucomp cmpsb inc sbb popf mov cmp push add frstor clc mov inc nop xlat loop lea mov bound (bad) sbb add sbb mov dec mov push loop mov rep or sbb aad out pushf pop mov daa sbb sbb jl xor in and mov arpl or mov pmulhuw push lret insb incb mov inc aam pop pop mov dec cwtl push or mov push inc push lret inc lods jp fsubl das vshufps test imul dec xor pop mov dec pop nop aas ret sbbb jno insl mov bound pusha inc data16 sub lds fcomps je clc inc (bad) aas ret das sbb aam sbb inc std cmc inc jecxz adc rolb (bad) pop pop in mov mov shl mov add fwait lea lahf adc adc mov enter in adc sub test sub jne xchg std push iret repz sub in mov xchg shrl lds cli mov cmpb inc add mov mov jne dec clc adc xchg and ret dec gs push lret in in mov inc ja imul cmp jl mov movsl dec adc push lahf cwtl dec out or cmp mov movsb or cli loopne inc mull push mov mov mov or pop or cli mov push ror mov pop mov xor fistp and push aaa leave xor sahf jbe lock rcr inc dec xor mov sbb lahf mov add pop dec sbb icebp std daa test inc fistpl xchg insl pop leave je insb sahf xor jge test cmp (bad) dec inc pop xor lret adc xor insl push int and push cmp ret addr16 (bad) jmp aaa xchg aas jb faddl adc push lods aaa jmp push sbb scas dec cltd outsb out mov jmp int3 (bad) (bad) push push add add clc lret or inc xor or xchg xor cmp int3 jb add sahf add les gs cltd fild call loopne cmp cmc repnz adc fs das out imul mov popf (bad) repnz test sbb xor mov cmpsl (bad) nop test test pop dec mov out aaa cltd xchg pop mov jno xchg sub jns fsubrs std in nop dec fld imul daa mov imul pushf push cli imul add std in push xor adc add cmp lock mov mov and sarb mov icebp loope pop call jg mov inc (bad) mov xor imul sbb or (bad) push xor pop jp push push dec jne or sub ret adc or aaa shr xlat std cmp sbb xchg stos mov xor push push outsb jmp in jle orl or cmp nop shrl enter rclb jg sbb pop scas sbb dec mov stos sbb ret xchg jnp rcrb stos (bad) icebp outsb push cmpsl sub cmp leave fxch mov arpl (bad) sbb mov jmp subb cmp adc mov int mov scas pop dec scas pusha call xchg dec push aaa mov repz insb lock dec add xlat js in dec push popf shlb mov std jecxz aas dec mov push sbb xor mov sub (bad) pop pop xchg cmpsb or add mov cltd stos hlt adc roll testb adc jg push imul add hlt cmp bound aam mov lock lds inc roll imul insl (bad) push push stos mov in cmp repnz loope adc inc push mov push sbb dec ret test inc inc cmpsl lods enter adc aaa cltd xchg subl push mov mov stos stos out test mov fcomip adcb sti loope lods repz pop int enter aad lret mov or imul pop gs mov movsl out icebp gs stos frstor and out das aas jmp ljmp loopne mov or xor mov jle and adc stc pop faddl jbe pop and dec mov or jp or std pop inc enter xor leave or stos int3 ss decl mov jmp xchg mov mov call adc xchg dec test adc adc jae xlat test incl lret mov shl test (bad) xor hlt jle jle mov (bad) fcmovnu repz (bad) loop leave cwtl xchg pop mov push lret and jb addr16 pop imul jle pop cmp mov dec xor out js rcr ret cmp cmp mov or stc mul mov sub xchg push in add xchg stos jl sti roll iret lock push dec inc loop call mov jl ds aam adc inc add in imul or or imul test xor pushf sbb movl clc mov incb fwait mov add jmp mov gs adc pop sbb mov jae (bad) mov mov ret dec cltd test mov and rcr popa cld lods jnp rcrb pop jle (bad) out (bad) xchg fisub aas xor mov mov pop adc movsb bound or inc cmp jle sbb iret mov lds jo mov hlt fimull sbb mov stc out std dec adc xor in mov cld outsl int3 jmp xor inc inc jb add add xchg popf lret lret jns ds sub popw (bad) mov sub sub add (bad) cmp je add push mov cmpl mov lcall dec fisubr dec or push insl cmp mov stc adc in push stc xchg imul (bad) mov fcmovu fs and cmpsb pop xchg (bad) jnp push inc dec (bad) pop adc mov das pop outsb and cmp fs sahf (bad) mov gs cli cwtl cmpsl add xlat loop sub dec or push sub mov arpl outsb jo lahf cmp push pop daa adc push jge aas dec push ficom ret sbb pushf rep loope outsb dec (bad) push mov or jmp and test sahf inc clc scas nop adc mov inc dec jb mov lock neg mov mov add mov xchg out pop imul mov jmp call ret mov cld mov inc incl jl fnstenv das out pusha dec jp fidivrl push outsb (bad) sub fmull xchg jecxz fcomip repnz lea (bad) adc test cmc daa fcmovnbe mov out outsb sbb sbb stos (bad) (bad) jl sub mov out dec jl loope icebp push loop,pn xchg vmovsd push cwtl sti sbb sub mov pushf jg xor jae cmc scas aaa dec mov push out rcl (bad) pop imul in fmul iret sbb push cwtl subl icebp dec cmp jle pop iret push dec fwait stos mov lahf inc inc movsb int3 mov (bad) mov (bad) call into xchg push and outsb lret lcall and sbb adc (bad) dec cmpsl xchg and mov arpl es pushf xchg adc insl mov or mov cmp imul nop push popa jnp add xor outsl cmpsb movsl gs cmp jge repnz pop fstps lods adc stos push and clc dec sbb sbb xor in cwtl movsl shlb mov out test stos sub pop aaa bnd das in cwtl insl pusha loope sbb (bad) jl sbb or or aad das xchg mov test dec loop jns sub cmp (bad) pop mov sbb mov aad mov (bad) (bad) in dec scas dec dec mov jae rclb das lret mov add mov and test mov xor lret popa ret pop ficom jns add dec mov int3 inc loop add cld pop fidiv addr16 daa mov push fldt mov add jbe or xchg dec cli pop fist fnstenv and and rcr popa cld lods jge fdivl cmp aam js shll jl popa pop inc push pop lret pop (bad) out ficomp repnz sub add (bad) cld add jle push aad cmpsl stc decl into mov xchg mov pop jle fnstcw test dec lock push pop cmpsl cli or mov cmp stc dec (bad) push mov insb add sbb xchg hlt bound inc fisttpl push jnp pop fsubrs cmp push pop int3 ja divb pop push orl inc add aaa stos cmc mov mov mov out or (bad) pop dec (bad) pop xchg push call add cmp dec lret fldcw sbb ds shrd jmp out popl aad pop fiaddl or pop int3 andl xor mov sub test or xchg not fs jecxz andb or cmpsl (bad) xchg xchg mov xchg add add dec jp fcmovne repz fsubrs adc push in lahf je pop aas mov dec lods push jbe add cs dec add dec rorb mov sub sbb push sahf ljmp cmp push cmpsb je (bad) cli mov inc out dec sub cmp mov leave into lea jbe pop cmp xchg jle sub sbb ja fucomp dec dec mov divl faddl (bad) jmp lret stc sub jo lcall lret xchg and test push and xor pop (bad) cmp sar and mov push sub inc leave dec sub jge push in inc mov or int3 mov shr mov push jo aas ljmp repnz or xor out push test hlt sub sub gs inc insl push mov sbb movsl or shll pushl int3 adc xchg mov mov stos add nop push outsb adc ja lcall jnp or jge dec lret xchg inc xchg mov dec xchg daa push or (bad) and mov cld mov xchg adc cmp xchg test and jg,pn mov mov mov pop adc inc mov (bad) dec fldl pop pop enter pop and test aaa xlat aam mov outsl mov stos dec js sahf xchg scas pop in mov idiv sub add js pop jge xchg cmp outsb add xchg movsl sarl xchg inc ja mov push aam add or adc imul jno or das out xchg daa ljmp push mov pop adc cmp push es xchg or leave test dec mov pop (bad) (bad) cmp int push aam xor mov xchg push or (bad) out push xor and xor std fs pop pop sub arpl (bad) and push add les xchg cmp mov std loope stc movsl mov pop xlat cwtl or dec mov je insl outsl lea and pop add mov xchg mov mov std loop pop jne test (bad) cli add (bad) (bad) in mov leave (bad) mov mov push adc xchg addr16 cwtl cmp data16 mov cmp ret daa xor pop lea std push in xchg aaa imul push out ljmp mov or pmulhuw dec jge sbb dec movsb imull lcall adc add mov out and mov pop mov mov mov and lcall dec int or sub pop lods pusha mov add push sahf mov jnp or adc xchg pop add push iret iret sub sbb sarb mov inc inc movsb cmp dec jne (bad) xor out sahf sub cld addr16 nop cltd adc xlat loop inc pop loop xchg cltd pop bound adc or mov int3 xchg dec loopne mov mov out mov repz hlt add pop jnp scas xchg push inc sahf in mull cmp push call inc lret mov add xor insl add imul or jle push cmp aam mov pop xor jae (bad) push push cltd int3 dec jge add decl mov js (bad) sbb xor xchg fdivrl mov adc pop clc (bad) in scas cmp fwait cmp inc nop sub mov jne,pt nop add xchg iret jns pop sbb inc sub pop sti inc dec icebp mov out dec retw fidiv mov sti cmp mov test add add sub insb xchg cmc gs xorl jae mov cmp lods (bad) jg xchg add lret xchg mov std add pop (bad) lret repz mov pop mov pusha shrl cwtl xchg cmp lea push stos inc (bad) sbb pop inc jle sti or adc (bad) mov into add mov arpl and jle pushl pop and lcall int pop xchg pop nop ja or cmpsb sbb sbb (bad) test test adc clc cmp pop sbb sbb sub stc mov jecxz sti (bad) lock repz xor sub data16 cmpl cmc in sbb cltd lods lahf jge lret jno xchg lret pop mov dec jl je xchg ss xchg xor and jmp insl pop das or push ret mov adcl iret push lcall les cli test push jmp add dec test xchg arpl xor insb ja sub (bad) pop pop jbe sti inc pop sbb cmpsl add cmpl je int fsubrs fistpl or pusha and pushf movsl cmpsb xchg jg push sub loope cld fs pusha jns fs lock in or xor xchg test inc pop pop popa pop in pop inc cmp mov dec sbbb mov xchg push (bad) cli lock cmp jbe out loop push jae fcoms enter imul cmp cmp leave inc sub aas mov icebp pop das popa daa movsb popa repnz (bad) movsl iret xlat aam cmp inc jmp js rclb mov sbb add sbb scas mov add xor test out testb pop xor loopne sti xor add sbb add push decb xchg mov fisub jecxz loope mov xchg mov div mov mov inc cmpsl in test push (bad) and ljmp cmc xor (bad) fldt sbb (bad) mov or in adc (bad) clc lret sahf rcl mov movsb (bad) lock lods pushf xlat popf nop sub (bad) cmpsb push lcall loopne inc mov popa mov sbb cli repz lds lds out fistpl cmp dec add mov rcrl shr mov or or jmp mov fidivrl fnstcw sub out mov fist inc gs push (bad) xor pop xchg in ja movsb push punpckhwd or mov movsb jb lret out and fisubl int3 jl jb mov rcl jae add cld or fist inc rcr pop jns out sarl inc dec ljmp test mov popa cld int sbb stc lods fs push sub mov lahf jb fxch sub stos das mov xchg aas add ds stos pop pop push arpl je je cld aaa shr cld (bad) cmpsl pop fiadd add not xor iret inc mov xchg sbb pop popa stos ficomp xor xor push (bad) mov push je outsl push inc pop imul mov data16 stc mov sbb (bad) (bad) clc cmp imul stc pusha ja outsl pop mov test xor (bad) or xchg xchg mov pushl flds outsl cld jnp,pn bound mov and shlb lahf dec insb (bad) mov push rcrb sub shr rclb stos mov leave inc mov rclb or lahf icebp mov push in jns orb test sub subl rcrl jnp fcomi aaa das xor js mov das and addl mov mov imul add dec ljmp sti jnp arpl jb out sbb mov pop ljmp lods pop sti mov pmaxub bound inc mov xchg out mov or xor pushf add dec pop push adc mov insl call mov cmpl scas ret sbb or push sub mov scas jle bound outsb into xchg fwait (bad) push fcmovb push dec stc mov rorl xchg pop sti movsl sub subl push xorl cmp adc in addr16 outsb xchg sbb ja popa insb scas dec pop and push inc jno shrb (bad) fwait cmp stos cmp and in mov inc mov or lock daa mov xchg (bad) adc and fucomp aam test dec adc dec jb clc movsb push mov sbb fs xchg jge shrl ret inc xchg nop mov scas jo cli push cmp subl sarb or hlt repz das mov (bad) xlat mov pop fwait data16 stos pop (bad) xchg pop lds pop cmpsl jno add scas (bad) mov jp xchg xor scas fwait push (bad) js add jle mov or ret sub psubsw xor cltd mov ja xchg in or add sbb sub adc insb sub sub (bad) cmp negb aam sub (bad) push or cld xchg (bad) repz gs lds pop sub mov hlt dec (bad) push aas fdivs ds movsb or roll inc and push xchg jnp mov mov sub sub pop fildl xor aas dec out nop stc xchg xor aaa sub jae aad cltd mov add add inc aas arpl loopne add xchg push mov pop (bad) jne iret stos inc (bad) ret xadd addr16 mov push lock icebp sbb cmp mov xchg xor test (bad) fist jp jae rclb mov cli xor mov das xchg and (bad) mov pop roll fst sub scas add push in jno mov mov addb in scas fldenv icebp inc xor inc xchg pop into imul sub fildll lahf or push sarl shr and xlat xchg inc mov jae iret cld inc mov mov sub jmp jae loop test daa int3 les xchg imul xchg mov rcl fisttpl (bad) cmp dec mov lret mov push jbe push pop xchg jmp js sbb pop jnp mov dec inc fnstenv mov cmp push (bad) xchg lea test jecxz push sbb roll push ljmp fidivl pushf cwtl int3 scas in aaa xchg push js ljmp lods clc cmp negl xchg (bad) adc rol hlt fmull pop mov shlb lods cwtl mov adc data16 cltd inc mov ss std pusha leave push cmp mov jae jp incb sbb fucomi (bad) divb (bad) scas (bad) das add cmp test fld and mov cmp adc (bad) mov fwait adc push sub (bad) pop jae inc and daa dec mov jecxz out dec xchg xchg adc cmp push cwtl (bad) fcoms fcmovnb out cld add xor iret clc pop fs fidivl add jge xchg jg stc push mov inc push xchg mov lret (bad) fnstcw ss mov push stos mov mov pushf mov jb mov int3 pop xor cmp arpl jl in in inc lret mov xchg push and add push scas mov mov lods cs lock xor lds mov (bad) fadds or rolb fsubrl aaa xlat (bad) jle sub jg scas inc mov (bad) xchg mov test sbb arpl fldcw push in mov xchg xor push mov inc adc jb imul pushf inc inc hlt incb add cs pop xor cmpsl (bad) fcmovnu test (bad) outsb pop sub dec test jno xchg jo lret mov cmc mov pop cmpsl das adc xchg jnp push stos and add popf pop adc xchg lcall imul or negb push lret ds sub dec sbb xchg in or js xor jno cmp std dec xchg and dec xor mov mov scas leave orl das sbb mov push mov push xchg dec jae (bad) mov add jns shr fucomip mov das push jnp ja jmp jbe or cld ss xor roll pushf lods test sbb or inc add inc xor insb vmovaps xchg (bad) jb sub pop loopne shrl lock ja mov cs cs sub xchg (bad) movsl test ja cmp dec cmp jno lcall pop neg mov sub insb in jle inc mov lcall fsts jecxz or mov pop adc insb insb jns lea sbb xchg inc aam push dec mov pushf stc push shlb mov push test jge mov add mov xchg inc mov test and les cli pop push stc cmp sub add xor push cmp cltd data16 ljmp repnz push push or xor xchg xor xor das or inc in sub fcoml push jecxz jo (bad) and jno shr mov addr16 xchg dec (bad) cmp inc scas leave inc dec sbb push aaa sub lock xlat jno insl lea jg mov in or hlt push mov loop push mov mov xlat (bad) es dec inc leave jg lods jecxz mov ffreep insb xchg dec out outsl or mov inc test les mov fwait in mov mov inc movsl adc pushf scas pop and stos popa mov cltd or push lock xor nop and inc mov enter mov jmp bound xor pusha xor mov nop jl ljmp add jns aad or inc cmc popl jecxz aaa push sub lock lret movsb fidivr pusha cmc aaa xchg sub jns rcll addl (bad) mov cs fbstp xchg mov dec insb addr16 loopne push and int3 jp aad push scas mov mov int3 xchg incl movsb ja repnz sub cmp xchg in add test (bad) insb hlt adc sbb push adc out sahf mov push fwait or popf fist mov cwtl out inc mov pop repnz lret and dec fs mov mov fimull (bad) out or movsl mov mov pushf fwait and inc aaa (bad) mov add or orb movsl pop aam imul and rorl sahf dec cld aad fdivl add mov cmp adc cmpsb repnz or push or cmp movsl xchg jp cmp push xor mov mov mov adc xlat and (bad) mov orl dec push mov fwait inc dec sub add pop adc inc lcall mov push dec movl dec sti aam xor cmp test shr mov xchg sub and mov in ret add cmp push xorb jmp lods dec push pop mov fst xor and xchg lock xchg cmp (bad) or mov mov std inc stc jae insl aaa icebp data16 ftst insb jg jae shrl clc shlb sub repz add sbb addr16 mov mov aaa dec mov repnz lret dec cmc mov aas add pop mov xor fimull (bad) fisubr xlat (bad) add (bad) aaa cld mov mov test xchg xlat add sahf addl ror dec push cmpsb cld sti adc push or (bad) cmp pop sbb imul cmpsb cwtl or inc pop cmc pop lods cli and ret pop outsl inc cmp jle and aad push (bad) aaa mov fnstcw sbb cmc jmp sbb stos mov dec icebp pop mov jle or mov mov or in ds gs or je add jne cmp xchg gs xchg jnp test cmc daa fwait mov enter popa ret or push loope inc sbb lods fildll movsb aam ljmp addr16 jno lea movsl inc mov and hlt push ja xchg pop shlb push hlt or push or dec fidivl or (bad) add imul ret scas das add frstor clc ljmp mov push call imul fucom adc mov adc movsb jns insl xchg ds add out test jmp je sarl int3 inc and or add ss iret sub jge (bad) mov xchg ret inc mov es lds jno sub cmpsb or pushf (bad) xchg (bad) cmp test out sbb inc sbb pop flds das pop sub adc xchg aaa data16 adc push xchg in sarb stos or rclb adcl jg xchg adc cmpl push daa movsl mov mov cmc in cs mov idivb mov fsubrl adc cmpsl pop inc adc (bad) adc loope sti adc sub fstp bound lods clc sub (bad) xchg insl xchg pop lret gs ss fisttp scas nopl fstpl movsb enter cmp xchg in aad jbe incl pop aaa cld ss push pop cmp add sub add fwait sbb sub xchg fsts (bad) sub pop aad dec pusha jge cmp push adc (bad) mov inc mov push lock sub mov and jnp cltd mov inc or std andl sbbl mov inc mov mov mov and sbb pop fldenv and dec test lret jo push jb or xchg icebp ds shlb jl dec stos cmpsb sti adc inc or fs jl cmc stc pop mov dec arpl sub jecxz mov adc mov jne ret sahf icebp mov mov fstl das inc xchg cld and xchg push xchg inc cmp sbb xchg xlat je test das add cld inc add jb js pusha cld fildll mov mov or cs mov xchg (bad) les ret outsb fdiv movsl (bad) jnp out int push dec lock fiadd cli add mov push push enter out sarl adc aas or cmpsl push add or ficompl mov or and and nopl ss je mov mov add push and pop mov andb lds lcall std fnstcw and mov jge mov xor in inc cmp xchg in sbbb xchg sub sbb xorb sbbl cmp test inc (bad) sbb sub leave js cmp lahf sti rcl push cld xchg aad sbb aam jmp mov sub lret icebp add (bad) mov push and imul stos hlt xlat cmpsl pop rcrb mov (bad) jge test movsl fsincos ljmp insl lret ret sbb jle lds cmp aas (bad) sbb scas fisttpl xchg xor sbb insb inc sub nop lea addr16 scas popa imul push add xor xlat jnp loope (bad) cwtl insl and fwait fwait popf ljmp sbb fsubrl xchg xchg push push sahf out das jge sarl mov jecxz sub mov bound xchg fistl test addr16 out sar pushf rol inc jo xor (bad) adc jmp add scas push outsl or or mov jae aad inc jo xor leave jno cmp int3 xchg out cmpsb stos outsb popf cld cmp lahf les in (bad) mov (bad) and jb cmp xlat das cmpsl xchg imul rolb ss adc inc sub rorl push std or adc dec xchg lods mov mov rclb gs jne aad sbb lods xchg mov jae arpl mov call test xlat mul dec cs das mov popf xchg sbb push mov jg xor (bad) or pop add stc leave mov addr16 (bad) xor mov mov mov test loopne push mov pusha stos stos adc adc add mov xchg push mov in fwait das mov movsb push (bad) or sbb loopne xchg fildl fsubr add dec jns pop dec cmp xor out fdivrs cmpsl ss or cmpsb rolb fistpll mov cli idivl jge imul pop (bad) jg popa iret mov jp iret sbb push into ljmp sub mov lcall dec jnp adc jbe loope mov xor jle jae (bad) mov adc mov jno pop cmp cmp inc std scas es mov scas sahf dec mov fidivl sbb inc lea mov rcll mov fwait (bad) icebp gs xor inc and (bad) fwait push sub loopne jbe mov test cmp (bad) rorl mov push fstl das inc xchg cld and cmpsb ficomp icebp das pop mov enter lcall push hlt cmp int shlb bound loopne jmp aam mov dec dec fbstp or imul xor hlt mov (bad) dec in xchg test je pop jns jne (bad) repnz dec pop addr16 popa rorl div inc dec mov mov and iret arpl push (bad) mov xchg sbb (bad) arpl add test mov aam test cmc xor addr16 xor inc mov or das out push int3 repz pusha je imul mov test xor jl (bad) sbb rcrl adc jns orl or in in aaa int mov popf popf test jg jne lahf pop lds arpl int or mov imul aad mov fadds jb mov lea push ret xchg cmp sbb sarb push xchg jmp mov add pop es test sub divb mov loopne mov out mov mov mov lahf pop lods and pop outsb lret out cmpsb pop or mov pop cs push inc fbstp mov mul mov test lret mov push sti cltd add aaa mov xor push cmc pop inc outsb fldl sbb or mov sbb push push ss add jmp xchg imul pop popa jo mov dec push scas adc mov push inc inc push std xor xchg sahf mov adc add add xchg jno add push rorl xlat mov inc out mov mov cmc mov insb insl adc mov mov xor ljmp in mov cs pause push pushf lahf sbb cmp sbb sbb jl lcall mov sar cmp xchg mov push jl xor ret adc jmp nop imul mov xchg mov int3 cmpsb xchg ja fcoms (bad) call inc dec mov dec leave xchg lret (bad) fcmovnb std push fsts jp outsl ret sub jge pop int3 gs jno inc repnz jl sub insl enter xor and out pop sti fadds push dec cmp pop push test insl lods sub scas jge popf mov icebp pop cli (bad) pop inc mov lret movl enter faddl push cmp mov test dec xchg (bad) popa dec test punpcklbw mov scas or jnp insb or xor dec mov inc test dec mov add repz in inc loopne,pt jmp cld lds gs pop jle dec sti inc je adc (bad) fs fsubs mov fdivs mov scas movsb jnp stos outsb jae clc addr16 add cmc add fwait repnz enter sub cld mov ror xor add mov rcl ss jb (bad) lods mov push add shrb fldcw rcpps std mov push mov sub xchg dec sti in subl and sbb xor out inc inc clc dec xchg pop sub inc rcrb inc xchg (bad) popa cmp jmp xchg rcrb fisubr add cmp dec imul push cmp repnz dec pop mov jb jmp hlt out cwtl xchg xor pop insl push jbe es test push cwtl or dec jae addl ja push cld sbb ficompl push fisubrl push push jl dec test ret and xchg stos imull scas push and sub (bad) repz addr16 push ret push dec add paddusb adc in daa in xchg or je pop mov pcmpgtb inc test decl pop lret stos lret stc daa rcr or pop out and rcrl xlat jle lods pop sarl mov gs inc daa pop add lds cmp inc ficom mov push les inc xchg sarb das inc push adc ja mov (bad) cmc xorb leave roll pop mov xor std xchg fdivs out xor arpl addr16 mov xor lret pusha call clc lahf inc or cmp jecxz sbb mov scas sahf jns pusha std mov aaa fstp fisubrl (bad) xchg dec mov ret leave mov lods idivb jnp or mov lret fidivl mov xchg cmp jnp mov (bad) hlt cmpsb cmpxchg pop dec inc xor mov add mov xchg outsb hlt sbb jmp (bad) jno repz pop aam clc imul out das loop sahf mov je daa inc inc scas mov cmp mov js leave insb imulb addr16 adc in lret push mov push dec lock add add adc pop lods popf imul aad scas iret jp sub xor (bad) (bad) and inc sbb cmpsb out mov xchg adc sub mov sub fs pop std repz cmp loopne jno jb lret xor pop inc mov jge daa dec ret int movsl xchg cmc sub xchg pop into (bad) insl xchg scas insl lcall mov or sbb xchg daa mov push shrl movsb inc and jecxz rcl cmpsl dec cmpb mov arpl xchg xchg dec push inc es jo push aam mov xchg or lods mov jmp jle std or icebp dec (bad) call xchg fisubrl cmp push xorb xchg lock add ret hlt cmp int out insl std jp cmp pop add pop rcrb sbb adc sub inc lods jmp or jns (bad) int mov rcll inc gs push and dec jnp jne ret lret sbb ds add (bad) (bad) push push pop mov jp and and in aaa in shll and mov (bad) into cld sub shll ja inc jae jae call sbb insl popf outsb loop nop pop dec ja out lcall pop fisubl js int3 mov xchg fisub es je cmp add or sub fiaddl pop ds lds inc in or push movsb add push mov das pop mov inc xchg lock ljmp aam xor jne cs adc out mov icebp pop xchg clc cmp iret sub push cli jns xor pop mov add inc mov mov jae test inc sbb lahf (bad) js sbb add (bad) mov bound mov lret loope mov sbb mov cmpsb push insl fisttpll mov fist and sbb pop stos lret nop xchg inc cmp scas inc cld es ja mov (bad) sbb add outsb mov (bad) out jbe xchg je cmp test jmp push in addr16 cmpsb loopne sahf jmp mov pop (bad) (bad) ret popf sbb cmp imul and int notb mov or mov rclb neg mov push cli loopne jge pop mov mov inc add cwtl and cmp push xchg mov xor mov fwait lds push gs or imul xchg cmp jg movsb aaa into in (bad) sarb in mov in dec bound push xchg pop out push xor sarl pushf or mov out or arpl aaa cmp push aas int3 push test dec push inc add pop add cmp push mov loopne dec dec add rclb adc pop lcall jbe sbb jo mov mov add fwait cmp xchg cli inc push pop mov out test fimul sub sbb cmp xchg (bad) dec jmp sti idiv fsubs cmpsb hlt les inc loop jl in mov ds jge dec dec negl movsb and fstl lods shrb lret and out xchg push cmp imul sbb (bad) push cli cmpl cli lcall mov sbb pop dec add push and inc sub adc and movsb popf cld mov jb xchg stc add nop scas inc sub stos les leave orb lods sbb fsub push mov dec (bad) mull jno add in mov xor push fwait pop fidivl dec (bad) pop jg adcl fdivl push push inc and or inc inc pop pop ficoml gs icebp jg cmpsb xchg jge clc shlb stos ret xchg jae in outsl jo sbb adc push and lock fcompl inc sbb gs jns and pop imul mov inc dec gs sbb and sub mov mov pop popf cmp xchg mov imul rcrl jl (bad) mov psrld add xor jns gs iret nop dec sub xchg js das mov shrb icebp (bad) sub popa fstps ljmp int pop cmc movsl pop inc inc (bad) enter xchg pop xchg xor and pop dec jl aas daa mov ret xor lret xor fidivrl pop movl pop aaa shr xchg lcall iret aaa (bad) (bad) push add into cmp mov cli jns ja popa aaa fwait loop jns out arpl inc es or pop aam scas imul sub dec movsb cs (bad) lahf mov mov inc and psubsb sub test call iret push lcall jp jae cmp inc lock (bad) (bad) (bad) jnp and sar imul or mov outsl add repz push lahf sahf mov pop cld xchg add xchg dec xchg ret pop roll dec stc push cmp outsl daa mov sbb (bad) sbb fistpl inc sarl jmp jbe insl ffreep jbe jmp push test add (bad) fcom and fxtract test fisubrl sbb lcall and aaa fnop fdivl (bad) xchg pop sub and push rolb add add ss jle popf ret pusha sbb cmp sub je outsl xor mov loop jne nop push pushf ror pop add xchg enterw xor inc sub or cmp insl dec lcall insl mov cmovge mov fisub sbb push push xor sbb (bad) mov ret or push hlt xchg rcr addr16 int3 and sahf inc (bad) push in scas (bad) cmpsb xchg mov sbbl lds xchg mov jnp mov out jae jmp cmp adc nop in (bad) sbb (bad) jmp push pop mov jns push mov xchg dec push (bad) cltd pop or scas loop stos test pop cmp xlat ret outsb pop test jb push jnp and mov pop daa lods les ss int sub into into jl out or adc cmp scas and and imul (bad) jb (bad) nop js aas adc mov (bad) rcr lods mov mull jne sub in sbbl jo jg push fild mov jle or ds xchg pop outsb pop into sahf lret pop into iret or jmp inc and or adcl lock stos inc cmp cmp mov lahf pop and setnp sub loope xor lods icebp or adc dec out pop adc jns loop dec mov imul (bad) daa xchg lock jp push icebp dec repnz pop cmp push adc insl lret test jecxz dec loopne repnz push fcmovne out adc add movsb xchg or fs add pop jb dec loopne inc (bad) inc sub cmp xchg in cld pop stos mov mov test icebp movsb mov pop xchg add andl add scas pop out in call pop (bad) push xchg decb inc cmp and cli cmp add outsl add bound daa or lcall rolb in xchg aam mov xchg pop test dec mov xor arpl adc js xchg xchg ss stc push mov lret (bad) ss lcall mov push call push aad push enter jns add loopne (bad) add sub lret inc push add pop (bad) mov in lret inc (bad) outsb xlat inc mov xchg mov dec jns dec mov jecxz outsl (bad) sbb cmp or ljmp jle cmp ror loope aam sub mov xor pop inc sbb arpl in daa (bad) xor insl inc (bad) mov lods fldl adc out (bad) push sti xchg inc mov fstpl jnp (bad) jg lcall xchg negl adc fwait lock or xchg adc arpl jp std cmp (bad) or addr16 aam add mov add cmp sbb ss jnp xchg dec jecxz sbb cld scas sub out rorl sbb xchg xchg cmp sbb dec lock pop inc jecxz ss enter mov idiv je lds pop pop push popf mov sti fucom imul xor pushf out mov xor mov fmuls rorl dec add cmp ss pop or iret adc cwtl lahf fcomps popf dec popf mov push test cmpsl cmpsl hlt xchg lods mov add pop movsl xchg xchg xchg pop dec daa mov cmp in pusha sub adc mov xchg add in mov inc jmp imul dec xchg (bad) outsl push inc fcoml or sub rclb fildl or in dec fidivr daa lods push daa (bad) sbb dec pop mov push xlat mov popl or pop dec jae pop xchg addl mov mov jmp sbb (bad) imul int3 cmp xchg popa frstor daa mov iret ds mov inc out adc mov xchg fucomi sub movsl (bad) repz add add mov push outsl idivb int mov xor jae mov sub jle mov push cwtl test xor push loopne insl outsl push insl popa sbb aad insb sysenter sbb lds jnp stos mov call and lock pop lret and mov in push mov icebp ljmp lret mov inc popf jp dec pop push add jne push orl sbbl add test push or lahf bound xlat popf push stos leave movsl inc stos gs push cmp sahf cmc xlat and orl dec lret std jp push dec or sbb mov je je js test xor cwtl rorl mov jbe movsb jle sub or mov fcmovu mov mov std inc add lcall xchg jbe lods lret je stos lods shlb gs daa stc pop mov and inc push fcmove push mov mov in mov sar inc insl pop jns ds mov inc test dec sbb hlt sub inc or add jo xchg lahf cmp mov int3 data16 and mov jmp aam or sti iret ret pop cmpsb data16 iret and push dec pusha int sub or rcrb or mov sti out (bad) adc and (bad) xchg outsl pop call insb mov rcl mov mov rol push insb add mov stos (bad) xor ret stos daa push dec or out mov mov pop movsb shlb adc je add das stc mov adc arpl xchg aam adc outsl dec pop adc push das sahf popf xor inc xchg cmpsl mov add mov mov aas enter cmp inc mov mov imul inc inc jl mov bsf test mov mov imul arpl push mov sbb lret mov pop or sub pop mov test cmp lods pop aad push dec push mov dec testb xor add test and push clc adc popf ss dec movsb or sub dec jo xchg mov imul mov flds add dec dec iret jp cmp scas (bad) into jg test push dec outsl push dec (bad) xchg cmp pop push jae dec test cld jp stc add sub mov in scas nop and dec outsl ja xchg lods and mov (bad) dec arpl xor sti or (bad) jmp lock fldcw loop hlt repz lods sub ljmp andl xorl (bad) mov mov insl pop push xor sub mov js dec adc mov pop xchg jns mov cmp (bad) je mov outsl fiaddl (bad) jo mov js insb mov test mov jnp lea pusha sbb sti xlat movsb xchg daa in dec dec aam psrld and cltd mov mov jl lea mov movsb dec out (bad) jge (bad) and push sbb repnz push jne lods cmp cltd push pop adc (bad) mov sbb jl push mov pop add push cld test cld ret push (bad) pop inc mov cltd (bad) in adc fwait sti lea mov mov cmp loopne mov scas out sub movsl (bad) flds adc add jae dec imul vpand fs inc test inc arpl jp mov into xchg adc sbb mov int out jb cmc into insl mov (bad) cs sbb cmp mov xchg mov aas cmp testb insl (bad) jmp aaa mov adc cmp inc outsl mov cmp inc jge dec mov lods movsb cmp loope add xor pop cmp jmp jge xchg sbb ficomp pop cmp out add (bad) mov stc dec (bad) (bad) inc insb mov ds mov in inc out ss popa outsb adc addl fldl xchg xor decl xchg pushf adc insb pop pop or in jae out sub in mov stos inc mov (bad) in out hlt sub inc pop lahf ds inc sub arpl fstp xchg jl xchg xchg push nop not mov lcall mov stos pusha sbb xchg sahf test iret fcmove sub mov sarb test or mov cmp das sub cmp jle lret dec (bad) adc inc lock xchg xchg sarl push and popf xchg xor mov mov jb sbb addr16 in xchg xchg inc int3 js push xchg push lock rcrb and mov xor loope sahf loope pop clc dec adcl xor jle sub ljmp je insl gs enter addl push add dec jne pop (bad) in test popf mov (bad) sti neg (bad) xor mov add add dec das adc repz or in fwait dec ret js xchg jg cli mov push sub push leave subl ret sahf (bad) jl fisub into sub dec sub scas add and push test imul (bad) adc jae decb addr16 iret imul push lea cmc adc fadds bound cltd into lods insl mov dec scas jl push push mov jbe lcall xor xor popa pop adc fidiv cmc mov fdivrs adc mov and dec xor inc in push imul mov push mov mov mov or mov xchg xchg repz adcb add popa xchg test out das mov add add ss (bad) jne add fidivrl cmp xor mov sub push sbb jno sbb cmp outsl (bad) jl push jl sub mov sub enter or call js movsb sarl or addr16 js push xchg pusha imul das div jl arpl ja mov les inc int fwait idivb (bad) adc call daa inc push jns subl or fstpl push pop jno adc lock rorl and imul push lahf fmul mov hlt dec lret xchg push loop pop or cmp cmp jle sbb or inc scas sub dec sub xchg inc test enter jle mov or lea lods repz mull push cwtl mov add pop in mov and and mul and out push stos or negl push mov and cwtl inc popf enter add add test sahf sbb fildll stos lea (bad) fnstcw sbb mov outsl mov dec gs push push inc out dec mov mov cmp outsl cmpl push fisttp xchg and push push icebp add stc sub push and push jl sbb dec scas xchg js dec sub xor aam rcrb jp inc outsl (bad) mov (bad) aaa cltd imull sbb jnp mov jp mov mov sbb xor add loope inc adc or out addr16 fisttpll scas xchg adc (bad) cmp push lea mov das pop (bad) mov push dec mov dec jle ss mov sbb cmp hlt les mov je push cmp push pop shrb inc and nop insl sub cmp push add sub jmp lcall dec jle mov or push inc sub out (bad) (bad) adc jo xchg pop scas test ret in mov (bad) lahf fcmovu xor loope dec das jecxz ja add mov and push leave sbb rolb pause push test pop mov pushf cmp lret pop cli mov popa es jno sahf out movsb (bad) and push (bad) xchg mov jp scas repz lock (bad) jnp inc mov sub imul lock cmp and dec pop cs (bad) pop sti jbe insb add jp push xchg mov xchg popa shlb cmp mov cmp mov xchg lret stc cmpsl jge dec les dec gs adc add clc xor (bad) jo push repz jae xchg inc sub js or ret stc aas push push cmp jbe lahf lock daa pop popf test inc (bad) cmc dec dec data16 das cmp or daa clc mov mov call xor cmp jmp jle lret xor adc pop loopne jle fs stos stos enter repnz test pusha vpavgw arpl mov fsubl mov sub in push add pusha sbb jnp cltd sub adc xor nop mov int dec jae hlt lret outsl fimul sub bound adc adc and sub cwtl mov mov push (bad) in or repz clc lods ret sti mov lods lods gs push clc jb sbb stos xchg sbb (bad) xchg movsl or cli (bad) leave pop data16 mov mov inc mov test loopne xor cmpsl or xchg xorl mov sbb (bad) movsb dec mov cmc outsb pop mov lret and inc iret jbe iret mov addr16 push sub push mov push test sahf das mov push mov cmp dec jmp mov xchg lahf test and sbb cmc mov loop cmp ja adc sar (bad) adc inc fdivrs jl test lods and movsl and aas or lret and inc cmp push xchg mov leave or leave aaa sti jo ret xchg dec xor int3 fs roll xor push int bound (bad) int3 xor jp or adc mov pop pop (bad) lods push out std data16 cmp rolb iret add mov sbb test mov xchg pop cmpsl mov mov push imul iret push cmc std add pop std inc push ds dec imul js aaa ds sbb sbb xchg lret clc mov sarb pop xlat and jns out cmp shll mov push in les add add dec mov jecxz in push cli icebp (bad) in mov xor dec in sub xchg inc ja ret pop fcmovnb inc sub inc fmuls movsl xchg mov push (bad) or cmp pushf mov loopne jecxz xchg jmp jne pusha xchg sbb or sbb loope fnop xchg cs jbe imul xchg andl xorb fstl jge cmpl mov imul push lret fild jbe xchg mov insb adc xor mov (bad) fcmovnbe jmp xor lds das cmp popf gs cmp stos mov sub out div push sarb jnp cmc bnd test inc aad insl mov test loope pop cmp les and pop mov add aaa sbb es cmp test lcall jns lods or dec inc pop (bad) and lcall push mov leave out sub andb mov mov mov test je (bad) cld fucomp mov mov fnstenv jl loopne push mov cvtdq2ps scas movsl shr mov add sub sub lea pop mov push stos adc testl push push test (bad) xor icebp jecxz xor lods lahf std xchg jp lds lea out loop dec inc repnz rcr jp push std (bad) scas aas bswap xor aas cmp lds dec sub imul fldenv and push in int3 mov fcmovnbe (bad) pop rcll leave addr16 mov (bad) fmulp mov cmpl push in js xor jno push inc or mov push xchg leave mov mov push fsubs xchg or aam rcr in lret insb adc xchg pop jnp dec lret inc test out bswap inc xlat mov cltd aas mov mov (bad) mov mov add adc lret fstps js mov xlat out cmpsb sbb xor int pop xchg sub test loope sbb loop sub xchg jge stos pop push and ja lcall mov lds push cmp pushl bound jl into icebp mov (bad) mov cmc adc lds das rcl inc cs and clc fidivrl js fidivrl sub test mov xchg jecxz mov mov loope gs movsl pop shrl scas call insb in mov mov pop pop and push mov jp push insb out rcll jecxz in add outsl cwtl push (bad) shll push aam mov dec xchg sub mov mov loope addb xchg loop aaa mov test add pop or cmpsb int jle xchg dec add jno loopne (bad) ja inc and or mov cltd movsl mov pop mov and xchg xchg mov cmp insb aas cwtl cmp xchg cmpsb (bad) xor pop dec sbb dec loope xchg adc xchg fcoms lods (bad) xor clc je xchg jle outsl mov and xor inc outsb dec scas sub jp push mov sahf (bad) outsb data16 (bad) or sarl mov cs jmp repnz addr16 out mov sbbl outsb dec ret push pushf jmp scas pop mov add push repz jnp fiadd pop mov xchg pop or insl or lock enter mov fimull into cmpb pushf in lods pop cmp ss mov mov lods das jge sub adc out mov shl xor push (bad) in sbb sbb inc adc push mov ficompl enter lea test cmp mov outsl into test jmp add movsb je (bad) fucomi fs in mov sub adc jno sub clc std das fisttpll pop test and in cmp fs or inc mov sub cmp imul fildll ret popf hlt (bad) test xchg jmp cltd push xchg or mov inc dec sub mov lahf lret and cs (bad) xor lea push inc lock mov aas aaa nop ret or outsb pop inc scas inc mov data16 hlt push (bad) pop imul xor and cmp iret fimul xor inc cmp rclb popa inc rolb enter bound popa xchg sti or mov jno pop in cmp in or jl (bad) dec loopne cmpsb cmpsw movsb sub push mov movsb je loope xor mov (bad) ja cmovl adc xor xor pop jp pop dec push std in hlt stos (bad) lahf mov lods jmp sub nop ljmp dec inc add fstl push mov sbb sbb mov sbb pop rclb iret dec fadds jge cmp pop and je repz repz xchg dec xor or add fnstenv push pop fcomps pushf insb sub in sbb cmc mov jbe push lcall sbb sbbb sub pop ja (bad) (bad) jb xor jb push pop xchg int insl lock fcompl js into out fiadd lahf mov outsb or mov mov mov mov mov pop fidivr jb mov push push ficompl iret out cmc mov jmp mov das push and adc lods (bad) je mov sub pop jnp sahf into and (bad) fild out aas xchg insl pop or ds xor jae addb sbb dec inc mov xor cmc sbb nop xchg test add add push mov das dec arpl lods outsb or pop movsl push loop or mov push ljmp push jl and mull pop hlt movsl aas dec loopne cmp fadd cmpsl repnz mov cli push nop inc ljmp loopne mov jne or sbb je mov and das sysenter sub mov pushl add aaa js push mov cmpsb not hlt inc add sub movsl push and mov pop jno sbb mov pop out adc fisttpl add popaw scas (bad) fsubl add push sub cli stc push mov sub out xchg or test push sub daa jmp lods pushf ljmp jmp mov mov enter test cld xchg xor addr16 leave les outsl test sbb into scas sbb sbbl ds xchg roll ljmp sub out movsb mov aam dec popf push les and cltd cmp mov and cld movsb popa shrl (bad) in into xchg fs push cmp mov sub rcll ja je sahf add cmpsl loope lds sbb pusha sub jmp add mov push arpl outsb dec sub aaa sub and mov lds xor mov jmp push dec bound fldenv add mov jge loopne aam ljmp stos fidiv test lods pop hlt nop or add mov daa stos (bad) mov in leave xchg push mov jge push sub push shll sub loopne pusha add stos lret pop mov adc inc and mov dec jmp out cmc jns jmp xchg pop stos cmp ret out movsl fisttpl mov stc push dec popf leave loope or push loopne movsb iret movsb jnp mov int pop bound out xchg push and rcll shrb setl sbb jecxz ret stos loope movsb add in lock std lret fildl pushw les out mov test test adc xorb xor dec xchg sbb (bad) pop xchg xchg test or cmc fwait shlb mov mov add daa jb and and js cmp inc push insb fsubrs dec jp mov sbb add push iret lcall enter jae les out fnsave and imul push mov repz loop mov aad sbb add dec push jp add lods stos or (bad) add lock cmp push xchg xor sub test pop shlb inc cmpsl xchg mov jbe imul xor pusha sub outsl fwait das jns fwait adc cmp icebp (bad) cmp mov cmp test pop fcomi push fiadd repnz (bad) jno add faddl fs push repnz repz or add sub bound sub jecxz lret in add sub stos mov sub int jo jbe xchg add xor pushf stos xchg jmp leave xor hlt sub adc out popf or mov sahf mov xchg ds ljmp mov ja cmc jne aad xchg add dec inc xlat aas push stos andl cmpsl int cli loope pop es xlat or cld and es (bad) xchg mov jbe imul xchg add pop es je out and sub add (bad) mov pop fwait push pop push enter movsl rorl pusha insb mov adc stos xor enter call jle js ficom or notb ljmp out jne cmpsl mov xor movsl fs push pop aam sahf lock pop inc lret in insl je jp add mov fnsave adc aam ljmp (bad) xor fsubs and push jb imul lock add sahf inc sti mov je inc repz pop out popf lock rclb sbb inc fcmovnbe and int dec lret mov in (bad) mov jmp and xchg xor in div pop cmp lret mov jne (bad) insb lds adc int je shrb push data16 mov dec push and mov test pusha lcall adc outsl mov mov inc add enter mov insl (bad) les cmp xor push nop aaa pop out sahf (bad) or fldt dec dec xchg js out cmpb pop mov or dec pop call lahf pop pop mov (bad) jl pop jo or pop sbb stos adc mov leave std inc lea xor lock int and jg aaa mov or or addb daa fcomps aad sbb ret mov (bad) lcall pop adc inc imul lret xchg add jns xor lret psubd dec (bad) add xchg jg mov in jecxz cmp inc or mov push clc test push xor jnp (bad) sub out cmp push cmp pop xchg fldpi dec xor data16 loopne jge jb cmp cltd daa xorl pop add out cmpl in mov sub sahf lcall cmpsl pop and sbb xlat movsl push cmc outsb outsl cmpsb mov fcomps add push or das jg iret rcr popa and push sub inc in ret cs xor lds fildl add add jp add clc mov ss fs adc not mov add inc xchg push xor jp cmpsb lods aam cmp movsb sub arpl pop lock xchg (bad) or fdivrs and push mov jmp mov (bad) in or sahf inc add sti push xchg stos push sbb scas xor lcall or fcompl mov test or ss nop (bad) mov popa es ficoml cld inc fwait mov dec in pop fisub fs (bad) jne clc jle jb gs int icebp subl out sub push mov adc ja gs out ljmp dec xchg lcall das scas lea or test or xor mov outsb insb pop cwtl mov cmpsl shr call movsb add sub pop cmp shl sub jmp mov rcrl xchg icebp js stos outsb mov stos adc out movsl test mov jle cmp mov sarl add ljmp cmp aaa cmp mov mov or outsb test xchg add cmpsb xchg in lret xorl pop or (bad) jmp and mov mov rorl jbe inc xchg sub in sbb (bad) fisttpl popa loop mov (bad) popa mov hlt adc cmp loope push sub fwait jge dec enter pop xchg nop aad jo cmpsl loope xchg jns push dec mov les pusha jns data16 roll cmp xor fs push dec cwtl jo mov mov add into push test xchg pop sahf scas rcrl movl sbb loop and push ret push xor fsubrl xchg loop inc jae adc ljmp in cs dec cwtl imul iret sub inc xor inc jge add add sti mov test movsb ficomp mov faddp fldenv (bad) dec out mov popa inc mov adc lcall mov aam je icebp dec scas inc adc or scas rclb dec fstps mov mov and (bad) out outsl std test (bad) sub add test or (bad) hlt fwait push mov push or jb xor xor dec loope xor cli jle mov dec sub ret mov ss pusha xchg insl (bad) faddl mov in inc mov subl pop adc mov mov hlt mov mov shrb insb cmpsl and add test mov mov lret fisttpl data16 hlt frstpm(287 inc jne loopne (bad) leave in or sub cmovb and pop gs and xchg and ds inc dec add sbb inc mov iret ds mov and popf stc fstl and sub inc xor stos jmp out sub add inc mov icebp xchg aas push test or jmp mov push ficompl add lea pusha sbb sub or test push ret xchg lods jmp jecxz out mov data16 inc in lods ss push and popa cmp xchg shlb rcrl sub sbb insl fstpl pushf jo adc lods (bad) gs pop pop push addr16 out ss adc imul leave push xchg in sarb (bad) cwtl insl cs pop popf or ret scas and cmp or (bad) sub movsl cmpsb xchg xchg pusha rorl inc push aam test jae jbe adc pop mov push mov mov mov jecxz into and cli mov sub movsl jge sbb popf jae bound (bad) ljmp mov add xchg test mov loop lahf out gs mov sub push xchg test inc pop xchg in mov adc pop xor adc mov jb test inc movl jmp xlat (bad) xchg rorl and imull adc dec outsl cld lret sbb push xchg jo mov (bad) xchg jb xor das and into imul jl mov push dec lods into or rorb dec dec pop cmp dec xchg sub sub jmp and test xchg je cmp popf sbb loope jp insl aas push bound mov sbb dec (bad) push add nop jo test and ljmp jo,pt xchg xor je cmpsb leave adc push and jnp jns xlat aam mov push mov dec add push pop js mov std outsl mov test stos jne fcmovnu mov push pushf ret and sub sbb xor aaa cmpsb js lods sbb sbb pop sbb jne mov ljmp push cs lret mov mov cmc add imul lods aaa cmp inc mov (bad) movsl and pushf std add sbb and imul sbb popa stos pop inc push adc push jo lret std pusha or movsb adc sbb mov ss mov cltd dec push cltd xor popf xchg mov pop mov jnp insl ret and fcmovne fdivs in movsb inc add sbb scas fist aas sahf mov push or jg shlb stos sbb mov in mov or fstl in (bad) iret mov inc pop lret jo sbb jmp fwait push out mov loop out fsub mov out mov xchg or dec ret imul sub push (bad) inc ficoml movsl mov jns int add add cmc (bad) mov cmc inc jmp inc into pop xchg (bad) in addr16 aas xor (bad) inc jns mov (bad) cld xchg pop pop mov cmp sub mov cltd cmp cmp push xchg call fisubrl es movsb out frstor xor push into jp imul mov xchg insl int3 jb mov push out xlat popf pop fiaddl popa movsl das out add xor cmp mov enter ja movsb xchg adc xchg loopne mov lret xor out sti adc (bad) jo pop pop jbe fnstcw dec adc mov mov xorl pop fmulp or outsl sbb push icebp jo push and cmpsb xor mov jecxz idivb popf sahf fstpl pop sbb stc leave and push jb lahf xchg (bad) cmovne adc xor repz enter pop and adc mov jnp push int3 xchg jbe and jp sbb sti cld mov dec imul mov dec mov jb outsb (bad) cmpsb outsl icebp inc scas lret push lock pop movsl push jg pop jge xchg adc adc ds mov cli movsb inc dec adc mov fnstenv rorb aaa loop lds repz iret dec mov fsubrs lock test add shll lahf rorl out pop and mov popf into or jg idivb pop push call outsl mov aaa push jp push push push rcll mov or lcall inc sub in push das mov ss xor imul fucomi mov mov mov xchg mov or cmp mov lcall jecxz enter add ss in ja jae popf adc mov push jb (bad) int3 out popf xchg into xchg fsts push xor pop push icebp dec pop imul add fldt andl cltd cs iret lret jb cmp inc adc mov inc pop lds outsl aad cmp (bad) (bad) je sub pop pop loope cmpsb adc push or cmc adc xchg bound and add shll add xor xor lret arpl int3 or mov stos jb fbstp dec xchg outsl add out and sbb xchg jl loop ds sub lcall ljmp jge out cmp enter lcall inc add jb sub mov inc imul outsl ja sub xchg inc popa mov in dec lock jbe in cmp xchg lcall dec out xor ret or and push add mov and or dec mov sahf ja and (bad) call scas sbb out aaa xchg sbb popa and ret cmp (bad) in inc cmp fidivrl inc mov inc shr aaa aam mov imul subl out bound xchg or mov sub bnd and inc sub fstpt jno,pn je mov cmpl (bad) rorl mov push sbbl insb shll pushf testb pusha je xor sbb pushf xchg cmp popa mov enter mov icebp andl or jmp outsl xor addr16 stc xor (bad) call sahf fisubl or cmp sbb jnp bound push push cmp rcrb dec aaa repz mov mov insl dec pop cmpb int and jo adc dec push mov cmp mov xorl mov hlt push xor movsl dec nop lahf inc das add inc and mov popf push add mov cmpsb test into inc mov jl or add mov xchg jae cmp and scas inc and icebp jl mov xlat sbb loopne cmpsl nop lea stos pop (bad) fidivrl or in mov mov aaa daa stos dec das mov xchg push or imul fsub (bad) and sbb cmp and add test ss xchg pop std adc xchg xor sbb std lea xchg ret jmp idiv xor and hlt scas mov mov cmp or sbb je dec adc add neg xlat (bad) dec pop cmpsl xchg sub sbb mov mov mulb or mov nop xor (bad) xlat (bad) leave bound popa hlt mov fldl dec cmpsl and lds jnp mov dec cs push negl inc cmp clc int3 mov lret push mov out daa jno jp addr16 mov mov sub movsb inc sbb inc push fs jmp mov (bad) jae sbb jl,pn jge pop mov (bad) cmc es out pop mov (bad) or push sbb gs cmc pop push outsb push int data16 inc mov xor xchg push sub push mov popa add cmpsb cs jl in xchg mov js and mov cmc mov mov add and punpcklwd jb pop push jne fwait dec jp adc xor adc out loope (bad) cmp mov pop out and sub sbb mov xchg fwait mulb push mov in sub dec ret enter push pop sub dec dec ret mov iret pop in loopne and rclb pop into arpl dec cmp into (bad) pop xchg jle lock (bad) (bad) ret push pop repnz or fisttpll pusha sub (bad) adc nop add mov mov mov leave inc cmp pop outsl into (bad) outsb inc mov jo add jnp lahf sti mov or mov repnz (bad) mov mov inc ror inc jg cmp (bad) dec or stos dec adc inc pop jecxz jbe push push scas (bad) into and dec sbb inc push lea lock push icebp les mov adc cld mov std leave lea mov hlt push call je jmp test pop out mov sub dec rclb sub mov into lods jo pusha movsb xor inc and fwait sub mov subl and inc (bad) out fldenv rcrl icebp mov clc push fs or jnp adc add shlb dec in inc or cmp inc repz icebp xchg dec dec jae ja (bad) mov xor cmpsb ds (bad) cmp addr16 rcll cmpsb xor dec mov imul and movsl sbb in jmp jne mov jecxz mov pop rolb arpl push mov scas and jp mov (bad) loop jo xlat pop pop ror xchg jecxz xchg fdivr in lods fsubs cmp movsb xchg roll popa xchg fidiv pop lahf in fbld cmpsb cmpb or bound lret fs insb jl push mov jmp and mov pop clc sub xchg inc sbb lret mov jecxz addr16 jmp cltd sub fcmovu loope cmpsl xchg jge addr16 test jmp jmp ljmp add jns adc dec outsl repz pop jg xchg pop mov inc aaa jne,pt mov pop adc movsb or cmpsl jno shlb out ljmp jne sbb js jg cmpsl in and jbe mov push ficomp sub je pushf (bad) xor data16 mov aaa fsubl jae adc or jmp add add dec push (bad) mov fcmovnb arpl faddl aad (bad) repz and inc and mov rcl and or cld push (bad) ja mov hlt or mov mov dec xor and sbb cmp cld adc icebp xchg cmp sbb mov inc jbe lahf pop jns sbb xchg int3 out xor xchg mov jle pushl inc mov inc scas sbb push cwtl pop into aaa fild popf gs sub in push mov dec repnz cmpsl xchg mov pop imul hlt add jge push push inc cmpsl sbb mov pop xlat cmp lock fstl fs mov xchg or push (bad) dec les and icebp mov cmpsb ret js inc sub sahf pushf xchg iret adc mov push sahf jne leave popa repz or mov int inc rol divb (bad) loope outsb push inc xchg nop pop stos and mov loope subl divl addl repz sbb adc aas ss icebp mov push ss mov dec sub adc fisttp mov mov movsl pop push (bad) sub pushf stos daa loopne out fldl mov leave popf inc xchg insb std lret data16 add adc rcrl lods add pop test arpl std or mov out pop push sub setb xchg aam cmp (bad) push push mov xor imul xchg adc shrb outsl jg lods jnp and xchg jne push (bad) ret (bad) movsl sbb pop mull (bad) mov mov pop mov cmp shlb mov mov gs cmp add and push push inc xor lea rol and push int push or (bad) lods sub xor add add xlat xchg cltd es incb dec jno xchg jb pop jae stos test push mov xchg je subl lcall dec mov xchg in mov inc out ret push subl inc ja add dec cmp mov popf sub movsb mov stc mov mov xor scas adc pusha test loop xor out lcall test pop ret pop xor xor or out imul xchg push add xor adc movsl int3 push pmaddwd or inc inc or and movsl ret mov jbe fs popa pop (bad) xor jno bound add cs adc lret push mov daa xchg push add jecxz push or cmp push sub out push mov bound add shrl push add (bad) dec push xor pop jge pop addr16 cmp cmp stos or lods xor xchg aad das push cmpsl sbb sub call push cmp mov imul gs fs and xchg xchg push dec shr int3 sahf (bad) sbb cwtl out mov and or gs loop xor movsl je and adc jbe cmp pop adc jns mov daa mov lock fld into loop popa leave lret mov icebp xor std das inc mov or ret push add jno int3 aaa outsl jns push in xchg ret adc push add shrb clc mov je mov or add loop jne (bad) push outsl (bad) in mov pop in xor sti repnz (bad) aam sub and mov fsts outsl lds inc xchg lea mov xchg xlat xor add jne incl dec pop sub dec xor js ss jae push adc cmp and push mov cmp or mov sbb push sub jmp mov shrl mov xchg cmp out xor outsl imul jne inc out mov js std out dec fiadd push mov repz lcall add mov pushl into or jle mov les repz jg das inc clc xor lea popa pop cs xchg fldt fidivrl int inc das daa and pop sarb jle mov adc inc out les call mov mov or xor xor add jns dec ret xchg mov pop pop cmp mov ds and jmp push adc test out out jne push cmc push sub push cs inc pop fild enter int fsubrl cmp xchg cmpsl cmp cmp sarl xor aam out (bad) out das fnsave ret fldcw out call daa cs stos shl push imul mov fdivs fmull fdiv mov popa sub out push or push xchg fprem1 xor addr16 scas sbb xchg lret ucomiss scas popa rorl (bad) and push (bad) cld rcrb (bad) insb stos mov mov jp je ret cmc jnp sub cmp mov dec jne outsb out scas mov jno lock lds sub adc pop push jb rclb lcall pushl repz std out fmul inc dec (bad) mov aam cmpsl pop stc push push lcall repnz mov jge loopne into cmp test mov xchg call sbb push mov jb push in jecxz std (bad) mov jmp imul add lret (bad) jnp mov pop std (bad) out xchg shll and inc push (bad) fwait jo outsb scas mov pop sarb add add push push and pushf test js aas (bad) std into add pop (bad) lds pop jmp and cmp mov adc lods mov aam cli hlt pop ficoml rolb sahf cmp sahf pusha pop xchg or js push push test and sbb lock mov repnz loopne ret mov fwait xchg cmp out xchg sbb cmp fisubrl and cmp adc or push je dec into or fisttpll and rcll xchg mov lahf bound bnd arpl insb fs mov fisttpl jbe scas push adc or sti sbbl pop adc jno or js loope out or mull mov sub xchg je ljmp iret xchg add xor aas (bad) in xor push scas aad bound ljmp mov int3 aam fild push pop sahf stc adc mov push dec and jns jne jbe rcl rcrl iret fs sahf add push add mov mov sub or dec fdivrl mov jns lds mov adc jmp sub xchg or lcall xchg mov enter fimul inc icebp add jns mov push mov insb out add cmp fildll loopne adc lea jge sub pushf xchg adc stc fst add lret daa lock bound xor or sbb pop dec sbb add pop nop push pop and push lods mov mov loopne sbb xchg pop bound mov xchg inc mov hlt sbb fistpl data16 lods jno push mov arpl jl iret cmpsl pop add and clc (bad) cmc mov pop or (bad) dec sahf das adcl mov stos mov add pusha jo sub loopne xor les sti and add xor (bad) insb leave sub mov pop ret cmp (bad) jg lcall adc or ret (bad) mov ret sbb pop movsl psubusw inc hlt mov lds xor into or aaa push jle or add lret outsl arpl inc icebp dec xor mov xor (bad) mov add mov loopne sbb mov ficompl pop jns fstl xchg enter andl pand adc mov push test mov lods jg fwait jle jl repz mov xchg jge stos loope test sarb sub cltd fdivrs adc insb pop sbb xchg push int3 dec sbb lret out sbb pop adc pop pop cmc aam ss pop in inc imull mov loop loopne push dec cmp xor imul push jno (bad) mov dec mov outsl jl jecxz jne push push pop fnsave mov jge xor aas mov aam and call sti pop add punpckhbw in fcoml (bad) pop lock pop lods xor das lahf or push iret andl leave fimul jbe push popf ss inc mov call repz push rclb or imull loopne insb push xchg fwait push les jl shr push mov scas test or subb int3 fsubrl cmp adc add jmp add push in ret loopne or and outsl inc iret xchg leave mov popa popf mov pop icebp ja rcl inc and mov icebp mov rolb lret sub rcrl lcall pop lret lret pop add xchg (bad) ja mov jb int mul out push andb sub xor mov stos cmp cwtl ljmp test lods sbb ja adc push mov lret inc je add bound repz lahf fwait icebp mov fbstp and jno jge mov xor aaa dec mov aaa lods mov loope mov mov xor adc sub cwtl scas pop addr16 (bad) xor add cmp push es (bad) rol enter or jb add xorl adc icebp in mov xchg fwait (bad) insl test mov sub mov test int3 and jno iret xchg inc (bad) jp fild addr16 je or sbb push xchg scas and cmp cmp lahf jle mov or mov insb ds cmp mov clc icebp stos jb das (bad) xchg cmp lock decl fs stos xchg xchg sti dec cmp fucomi push mov scas or shlb les lods fsubrs add rol inc in sub in hlt mov js push pop in gs adc sti stos ud1 xlat push fcompl adc lahf les lds add loopne cmc push mov inc sub adc xchg imul sub pop or std push int xor stos cwtl xchg leave pop xchg movsb push sbb adc push xor adc fstps jl das push in fdivp add xlat jle test xchg fs and rolb pushl popf xor (bad) negb lods lea mov lock xor movsb mov fldl inc xchg (bad) inc fmul cmp jo into lock or inc dec dec insb jno ss mov jmp sahf test dec dec loope mov push ucomiss stos cld and pop add jb out sbb sbb cmp stos pop testb add add in xor cmc sbb or inc insl mov in aam pop pop add test cmp or and fiadd xor clc push mov cs jno adc lock sbb mov sbb mov dec mov je aaa jle out dec push add stos mov in mov push add mov sar in pushf pop rcrb sub cmp jae mov subl xchg xor leave (bad) cmp inc mov and enter mov mov mov sub mov sbb pop jbe mov repnz insb mov pop xchg adc imul aad test mov fist xlat dec fisttpll sbb iret sub push lcall dec inc xor xchg xchg inc and dec mov stos sub ret scas xlat xor xchg dec cmp mov lret mov mov cmp out jo dec adc mov loop adc ja iret jae mov dec cmc cwtl shrl xor je ja push call adc lods mov mov cwtl pushl test and cltd sub jge mov fdivrs es insl xchg lea jb das fwait sbb fidivr lea arpl sub jbe push cmpsb je mov lret loop popf cltd test add sub mov roll jbe xchg jnp loope mov ret jne dec mov inc mov lret ds cwtl jp out scas adc pop incl cmc adc (bad) pop jnp inc cmp pushf pmuludq (bad) aam xor jmp (bad) imul inc repnz lret js data16 insb outsl mov insl xor shr sub stos mov rclb inc pushf into pushf nop cmp outsl pop dec ret notb and das hlt xchg scas stc xor and out pop adc mov dec add fidivrl ret mov mov insl adc testl mov mov iret gs aad add pop push loop fadds movb inc mov rcr pop jp jmp stos stos sbb (bad) dec inc lret push js lahf inc xlat cmc jle dec jae inc push (bad) jae cmp pop cld xor dec test mov aad data16 out movsb pop imul sub mov fs cli and call or cmpsb jbe loope xlat xor cmpb out lahf cmp mov and push or xchg cmp stos (bad) xor mov rep and fcoml ljmp rclb and iret mov js inc cmp mov (bad) addr16 cmpsb daa ficomp add cmp (bad) lahf dec push dec f2xm1 icebp movsb mov mov push jb jno mov inc or xchg fcom sub fdivrs cmp in incb vmread xorl sbb in loopne call into js mov ds lahf lea mov mov pop fidivr lcall imul inc (bad) ds fistl fistpll push cs call out dec or mov push mov or jp sarl inc inc lds mov and or jns sarb jno cli loope (bad) cmc xor cld push in jmp sahf ss fldl mov pop cmpsl xchg test test fistpl adc jmp shrd xchg mov adc sub neg mov ss mov lret dec adc jns jp sti and movb mov sti cmp or adc pop cli add and sbb rorl or mov divb push adc sub mov pop repz sbb pushf test push add sahf lea mov sub test and push dec repz push sahf test lahf mov subb push push lods in xchg mov xor (bad) mov or mov and pusha lds mov hlt repz mov mov and sbb (bad) fildll ret mov addr16 out iret mov xlat xchg mov lahf movsb scas arpl rolb les jae loopne fwait adc or pop scas dec in int les loopne cmp xchg jg adc mov jl nop jg inc mov insl push out pop in fidiv push jmp inc and leave lods mov addb out in insl aam mov pop sbb dec jg fstps mov lret fcoms std xchg enter sbb out sub repnz mov xchg sub or jno hlt lods or push clc add or dec and mov mov roll lods jno sub pop mov call add lret or das lea stos subl sbb cltd sub pop pxor fnstenv arpl lods fwait and in sbb loope pusha mov xchg xchg mov cli push in adc push outsb add xchg jp mov into out push cmp mov sbbb popf xor stos repz cmpl inc leave ss lods inc fdivs loope sub out cmp and add fucomip dec (bad) sbb pushf ljmp and outsb xor aaa or or push inc push cmpsl sbb movsl mov (bad) ficompl fsubr scas fistpl pop sub pop stos std mov sub int loopne (bad) adc scas (bad) cmp push fxch push sbb stc repnz pop lock cmpb leave mov sub pop rep or inc xchg xchg and sub test pop je inc dec and mov sbb fldt fucomp aas fstpl push out xor scas sbb push mov and fistl inc imul movsb add repz (bad) (bad) fidivl xchg xlat mov or cmp adc pusha in fistpll lods add or call lods adc lods xchg and pop cli fildll push psubusw add (bad) (bad) xor dec sub adc (bad) (bad) adc cmc out ffreep xchg ret scas inc mov pop lock scas stos push test lods sbb mov int3 jnp push insb sub cmp pushf dec push movsl outsl cld icebp stos cld mov lcall lock dec cmp push inc dec es test inc in sbb dec xor push clc into pusha mov mov fnstenv jl ljmp or (bad) lods mov xchg arpl out inc (bad) int cmp and adcb dec cltd out push mov push addb call dec or jl pop xor (bad) or (bad) leave jp sub adc add out inc sub lret fs bound adc mov mov xor jo pop cmp adc add je jmp into inc aam dec inc call push xchg cmp out and sti outsb push ret cmp mov hlt dec in rcrl loopne dec jnp xchg cwtl xchg fwait test cmpsl jge mov dec push test pop (bad) xchg push shrb pop sbb loopne mov mov cmp inc pop aaa xchg cli les jge repz dec xor test daa mov jmp jo push xchg push mov cmpsl daa adc mov pop add dec clc (bad) xor pop xchg push lret pop pop or test pop lods movsl cmp das xchg jg jg outsb insb sub mov or (bad) iret mov jecxz dec mov icebp mov dec xor dec sahf sbb lea mov test sub addr16 lcall gs sub sub cmpsb push and mov (bad) dec pop inc add dec stos sbb adc fnstcw xorb iret testl and test dec and jb xor mov loope test test push cmp xorb mov jno pop xchg vsubss decl push xchg aad xor sbb sbb out xor adcl insb pop inc mov dec and scas sub (bad) (bad) add inc scas cwtl out popa bound adc xor inc lods add icebp sub push es xorl jmp adc xchg jno leave xor cmp (bad) fldcw push inc mov sbb fdivr and add jbe mov insl das addr16 xchg lds (bad) mov pop les lahf mov movsl and pop shll nop adc dec xlat js push dec clc mull add (bad) pop jne rol xchg mov mov cmpsb cs dec fs mov xor dec and arpl popa outsl ret lcall xchg decl das mov jne sahf or int3 mov cmpsl sti xlat or cmpsb sbb cmp popf popl cld ret cmp clc push imul add mov stc xchg test mov sub mov ret fmull dec and shlb cmpsb jge rcrb lret daa cs or lret xchg mov pop scas mov mov mov icebp (bad) sahf repnz addr16 pop sti cmc and and leave pop insb outsl adc xchg jno add add clc lods cmp sbb pop stos mov jne fidiv ja and cmpsl call mov les inc enter (bad) into xor sbb xchg push jnp insb les mov cmpsb hlt lcall fiadd rorb out icebp lret sbb out inc cltd xchg js jns fidivrl or out insl repnz scas sbb cmp inc dec sub mov push (bad) jmp les imul dec lcall jp lds (bad) cltd and mov push dec movsl imul aam dec test cltd mov data16 xchg sbb lods fisub adc pop hlt sub dec inc mov jb push les mov jle (bad) test ret cmp inc cmpsl loop xchg adcb or fwait jno pusha cwtl and test pop iret out pushf pop push hlt shlb mov dec (bad) test es dec js mov ss dec mulb xor pop and popa sub sub mov lods inc or cmc sbb ret (bad) movsl mov (bad) xchg out test les sbb mov rolb jbe call rcrl add xchg adc inc inc (bad) aaa inc aaa push adc bound inc lcall jo fcmovnb inc icebp and mov stos mov jb fdivrl (bad) outsb je cmp mov mov mov sahf outsl xchg dec jne out int3 mov inc jns jmp pop (bad) pop inc stos outsb pop das out mov xor insb mov hlt scas fstpt pop aas mov pop cmc adc (bad) push (bad) jge pop cltd (bad) in stos adc in jmp push stos js or lds lahf das push or jp cmc mov push push data16 aam hlt push cmp stc sbb inc negb mov das cmp mov push xchg jbe cmpsl mov cmp ret inc pusha stc in cmp mov add or imul mov mov add rorl and insl in jbe nop mov test and add (bad) pushf adc es cmp nop jno cltd or push je iret aaa mov pop xchg insb loop outsl aad (bad) je push adc es ss adc inc xchg jns cmp pop or mov cs jne xor stc dec mov je push stc xor icebp jle aaa repnz (bad) xor lea jno inc fdivrs cltd (bad) jb push hlt icebp (bad) cmc (bad) jg jg sub adc pop and call scas dec lea (bad) scas stos add bndldx repnz cmp mov mov (bad) repnz cmp loope cmp test dec out xor out cmp push lret cmp addr16 aaa sbb adc mov jle jns cmp test out mov ret popl (bad) push or incl lcall adc les (bad) or and cltd lea xor pop or or mov (bad) popa sbb sub sub outsl ds test movsl pop aas out in ljmp mov scas dec leave pop ja int3 test imul xchg rcrb pop js mov inc mov jbe cmp mov and fwait sahf dec fist lret pop (bad) mov insl cs push hlt sub fisubr andb jge aaa mov xchg nop mov xor jns lods mov cmpsl jb push adc mov sbb loopne sub push punpckhwd cmc lock pop leave lods inc aam push and aas pop in aad cmp xlat cli pop mov cld inc inc aaa pushf inc and jns out push faddl push cmp xor cmp add jmp mov addr16 aad ljmp dec arpl cmp mov xchg aaa stos out ss dec sti mov bnd and push sub addr16 jb add lcall daa out dec add mov lret fwait ds mov jbe fisub (bad) push dec aas pop cmp imul cmp and pop push outsb pusha int3 mov leave imul adc stos out mov out xchg or push sub addl lahf mov mov fwait andb sub or je (bad) test add fidivr jae ficoml xchg mov daa adc imul cmpsl jg ret aas or icebp out les lea bound stos jbe jl mov or adc lcall mov imul dec xlat outsb sub scas lahf mov and adc mov xchg loopne push add mov lret fist mov or in stos adc enter dec xlat or mov in addr16 lds xchg add adcl inc scas cmp icebp fisubrl lock mov cwtl cltd test mov push jle,pt lods push sbb lea push sbb mov jp push fdivrp icebp mov outsl push popa sbb add cltd cs lahf dec (bad) jne fldl mov scas add sbb dec jmp xchg iret nop leave out ret push mov ljmp push inc and les sub (bad) scas mov in mov push (bad) int3 dec sbb inc push pop lock push lret stc and (bad) sub adc in or movsl fsubrp lahf push test and inc cs out or jb lods add lock outsl cltd adc lret imul or mov push mov aad push ja push movsl rcl dec mov je lahf xchg (bad) stos xchg int call adc lcall (bad) sti cmpl inc out xchg (bad) inc hlt pop and popf inc xchg mov push cmpb xchg sub add aas cmpsl call add add stos mov movsb out sbb lods arpl incl pop add mov or push popa mov (bad) jb (bad) ds xor add repz or insb cmp dec stos aas sbb xor cltd in aad and adc mov adc frstor inc pop cs mov and or xchg and addr16 dec cli mov pop jmp mov adc stos cs in xor lods scas sub mov test mov loop imul lcall int3 dec lods jns pop xor jnp enter outsb jnp ja mov sbb push aad adc sub pop add lock addr16 jp pop and inc push lahf jae stc cwtl cmp insb jp dec xchg push pop mov mov jg xchg loopne into lds xchg push loop icebp jns or sub mov cmp mov or mov dec cld fs movsb xchg push sbb sbb sub mov xor (bad) and pop xchg adc sub sub pop jo pop push mov hlt mov adc fwait cmp (bad) imul dec fstpl push (bad) shll repnz ja dec sbb cmp inc jne pop xchg into adc push into (bad) aaa jno (bad) std dec xor sbb and aad aas insl popa jmp hlt xor dec movsl xchg lcall pusha repz dec pop jl addr16 pop cli mov sbb pop xor andl lods xchg pop push cmp add imul repnz (bad) adc xchg pop push mov addl dec inc lcall cmp jmp push orb jle and inc dec movsb ficoml sub cmp jl push ret outsl or sti xchg jmp pusha jo cmp loope clc enter jne aam clc pop push xchg push inc cmp aaa jle stos and int arpl push push push xor jp loope out adc add sub mov cmp lock mov mov rolb ja loopne push cmp push mov and dec aaa pop in loop test stos fisubr cwtl mov mov arpl jmp rcrb in push popf lods ret pushf imul pop jae (bad) in stos les or into pop jg inc imul sub scas mov punpcklwd aad sub or jne adc lods dec mov push outsb daa sub das fnstsw push das adc outsl insb (bad) shrl shrb mov popa in fiadd mov jl mov jns lcall (bad) mov or sub push stos loope,pn pop pop add jnp adc (bad) dec push imul cmp lret stos mov jecxz jb add mov (bad) aas cmp cmpsl pop or cwtl pop out sub and in mov mov jge pop (bad) aam ja fwait sub pop enter dec cmc mov dec loopne pop push or ret movsb cwtl rolb out outsl daa or pcmpgtb xchg jecxz insl bound add fwait push jge dec push sbb outsl add push repnz aaa cmp xchg jge mov sub ja add fidivrl js jne (bad) dec mov jnp jae movsb pop push pop adc iret jl ret bound mov inc ss mov inc push mov mov jp out pop leave data16 jne movsl popf rclb jb mov mov dec add and adc in inc xchg cmc push cmp mov push pop lea xor loopne mov cmp push cmp outsb push inc cwtl imull repnz or incl cld daa mov dec cli arpl inc mov add inc hlt xchg shrl xchg sbbl aad int3 popf pop jbe inc sti shrl lret mov addl cmp cmc pop (bad) xchg cmp or movsb mov cmpsb mov adc add mov aas pop cmpsl aaa jbe call push sbb jl enter cwtl jle pop jmp mov mov out push (bad) sti arpl jecxz pop (bad) adc mov jg sbb je sahf mov andl mov push insl fsubl add jmp aas cmp xor iret loop es imul jle movsl jl inc jb pop and push es bound mov aaa jp jmp mov scas sbb xchg cmp out out adc (bad) sbb in push ss push xor roll (bad) jl add stos adc dec fwait and mov out mov lahf mov push xchg loop adc xor faddl (bad) inc jbe les je out cli hlt xor add and pop mov push mov hlt jg inc dec into fildll mov test jp gs cli ret fistpl mov out insl (bad) fnsave or inc pusha enter insl gs aam mov hlt jl jge xor and aam xchg inc mov aam and pop inc cwtl test fisttp sbb andnps xchg push add xchg das test pusha mov into mov fdivl and fincstp stos or mov adc jmp rorl push and out out pop fs adc sub movsb mov pop lods ljmp sahf fadds or (bad) into pusha je pop mov push aaa aad scas pushf sub jecxz icebp push aaa pop jmp mov xor jnp mov pop es add xchg push push xchg out insb cmc sahf (bad) (bad) loopne adc idivb mov (bad) sub cmc add sahf mov aam push (bad) push push mov and xchg nop cmc test dec imul ss sub xchg inc int (bad) and pop inc mov push dec dec xchg aam push push out cmpsl sub or in gs mov xchg mov (bad) adc imulb outsl xchg lahf ljmp popa jle lock cmp out mov ja mov imull cltd add ret push cwtl ds ret and (bad) jae sahf mov movsl insb lock sub faddl sti lea (bad) dec and popa xor push and adc in aad cwtl dec clc jae outsb jno jge in mov push xchg je scas sub mov aad jge stos imull push push cmp cmp (bad) ret jbe mov orl mov pop xchg call mov out pop int (bad) adc push cmp aaa push adc in into jp add test adc js addr16 mov icebp dec mov fs lret mov pop sub (bad) lock or mov movsl mov xchg mov lods adcl adc xlat enter lock stos mov push test push mov mov lock lods in sti insb pop sbb mov add jns cld dec mov js int3 mov cs out pop int fist popf cmp adc cmp (bad) cmpsb leave inc sub lods hlt ret pop inc jmp mov lds loopne pop push and push mov sti lods sbb xor jb xchg push cmpsl (bad) movsb xor cli ret xchg push (bad) mov push cmp pop or mov inc test pop sbb xchg xor insl mov cmp add inc leave mov (bad) mov ja ss xchg stos movsl add sahf mov (bad) ss or pushf das mov fnsave add push stos adc scas je mov es ja fcmovu loopne jnp std test jns adcb add test dec add outsl cmp inc xchg push dec jno push and orl ret xchg repnz fiadd imul pop xor fs in cmp insl fcompl sti mov leave push bnd fidivr imul dec xchg cmpl jb push sub push out sbb inc lods out xchg ret lea jmp push dec test loop clc mov (bad) or js lea jl mov or jo xchg cs sbb mov out icebp push adcb xor and inc int3 mov mov push inc inc test push push ret cmpsl and mov inc mov (bad) (bad) out add stos lods adc int jge (bad) pushl push (bad) cmp loope mov dec sahf sbbb jp aam cltd push mov jne imul leave ret xor add jge fsubs inc jmp sahf fstps or and test cmp dec jae (bad) mov mov cs sub fdivrl jns shrl adc fistpll (bad) aas sti xor dec gs or lods in mov loop adc sbb and jne pop mov leave sbb sbb sahf scas mov ss sbbb in sbb or aaa lcall inc out lret arpl mov js outsb and fdivl adc test push in je insl pop sti cltd lods (bad) adc pop push fdivr ss pushf inc xchg sar pop jnp inc testb mov mov into dec sbb mov cmpsb pushf push lcall push sbb xchg xchg aaa mov add mov in icebp mov pusha sbb cmp iret ret cmpsb lods mov int3 mov push data16 and insl or inc (bad) sahf std mov cwtl mov (bad) jns xchg int3 loop lock mov xor outsb or push movsb xchg repz push cmp outsb inc xor dec sub jmp pop jl sub mov mov test sbb jp and (bad) jnp (bad) nop loop jns imul lcall adc xor pushf pop adc incl inc jns sbb mov push xchg rclb add jns mov push xor push mov inc jecxz ret xchg into lcall lahf push jns maskmovq negl mov pop sbb rol mov sub and and sbb mov cmpsb (bad) adc sub mov pusha hlt mov xchg sub dec mov mov mov inc insb icebp add dec mov sub test mov ss (bad) sbb adc mov or mov lcall inc xchg dec cmp imul xchg (bad) movswl fcmovnbe mov outsb jno sbb stc dec enter pushf out stos mov mov pop addr16 dec js jecxz insl mov mov aam or (bad) mul ret cs addr16 pop ja jo pop (bad) arpl out jle xor sbb cs divb sbb rcr (bad) lea repz pushl jle cmc std sbb and push and mov pusha out xchg das arpl in insl faddl incb insb js (bad) repnz mov adc aas in fstpt and (bad) mov roll add add or hlt (bad) scas sbb or dec call push lcall ret loope or ret dec mov dec xchg cwtl sbb out icebp pop ds out (bad) pop push les (bad) pop xlat lods xor jb xchg and inc push gs (bad) movsl cwtl addr16 sbbl fisttp insl xlat data16 imul cwtl mov mov leave cs mov in push scas dec adc push pop sub dec les shlb bound mov adc loope mov sub iret inc dec and adc mov stos cmp add sbb sbb (bad) rcll popa xchg movsb inc mov sbb and sbbl je or pop pushf add push inc subl loope lods enter sub and aaa jae cmpsb (bad) push movsl push or (bad) daa sbbl adc cmp std in lret lods cmp in dec fsts sub adc loope setle push nop push xchg pop rclb mov stos mov popf (bad) push xor xor mov repz popf je fnsave mov adc sub lcall jbe push movsl rcrb inc rol stc imul enter sub add jno push (bad) adc xlat inc mov out jg sbb je call xor inc xchg push fildl test in push and gs cmp dec cs call sarl jmp aam loope ficoml je (bad) xor adc popa arpl lock shl inc cmpsl jo out std jae and dec or or dec iret and or inc fstpl test mov js sbb mov notb fwait push mov sbb loope movsl pop xor and int push sub sbbl add gs push inc push les push xor (bad) jp sub cmc daa inc xchg ret cwtl movsl sub and inc lock push sahf push inc lock (bad) cmc addl out inc push mov jmp cmp ds lea pop xchg test inc mov xchg xchg push or rorb pop scas ja adc das push mov sti std mov outsb sub jae xchg out aam push push in mov mov sub pop xchg add in dec mov addb fs insl xor test push push fsub loopne (bad) mov test sub pop cmp lahf push pusha fldenv idivl ds xor in jo gs insb dec andl and jb sar xor (bad) mov xchg inc ja dec test jg mov test mov inc sbb in daa repnz repz jb jns mov xor jnp jns dec mov popl push dec imul add mov (bad) cmp cli les (bad) cmc adcl pop lods pop sbb jmp inc pop mov xchg andl inc pop fxch adc sti cmp lds test mov jnp addr16 pop shrb in les (bad) adc jbe test xchg dec dec test les out adc fistpll sahf adc push dec cmc pop lods xchg fildl mov push je loop test lret enter adc mov mov add adc movsb push jp,pn mov adc daa inc std push jnp pop mov ret pop jg dec lahf cmp sbb mov sbb (bad) dec and xor insl stos add or xor lea mov orl call in (bad) xor hlt lods shrl xchg inc fild add pop xchg fsubl movsl arpl (bad) aad lret imul (bad) adc and fimul xchg pop and jg add push sbb lock pushf (bad) lea pop and xchg cmp mov fistpll into ficompl movsl lock sub pop insb push fldcw inc push cmp fildl in fldt insb (bad) stc inc pand inc fmuls xchg or pusha mov add rcrb jle lods out in and scas adc fsubs imul lea push les bound jne pop push ret scas pop fldl ss mov loop and dec ds cmpsl iret rcll loop aad repz jg fs neg inc push ljmp outsb cmp pop and insb sub and scas push or xchg sahf adc cmc ss daa adc scas sub push inc mov cmpsl inc or adc pushl pop out rcr inc cmp mov xchg adc mov decl je jae mov jmp jmp push mov jb and sbb gs int (bad) inc out (bad) out mov jle fwait jle push (bad) push or out lcall mov loopne iret mov into mull popl push movsb out sbb (bad) xchg js in jl cli fmull mov mov inc in cli sbb adc pusha push les and idivl es lret movsb inc push ds ret jae scas lods cltd mov sarb es fistp push inc gs mov push mov xchg cwtl rcr stos clc out (bad) out outsl jg xor int3 xor repz jmp push ret xchg adc xlat mov shlb rcpps add test (bad) and mov sub lret mov add (bad) fmuls or push pmuludq sbb inc dec pop insl int3 or xchg jmp cli or mov (bad) enter mov mov inc dec sahf sbb (bad) jl cmp mov jno subl (bad) pusha (bad) lret mov gs and enter repnz xlat ret mov js dec mov jno scas movsb jmp fwait or mov mov lret and ret int addr16 mov add mov popf out push lds dec out push jmp or into cmp addr16 dec int3 push push leave xchg cmp call mov cmp into mov cmpsl cmpsl (bad) (bad) repz inc das sub arpl jmp pusha pop xor aaa sbb in in inc inc push add arpl test in inc dec push xor mov ror mov lods adc pop mov pushf inc (bad) xor cs mov movsb and xor aas mov push cld mov jp pop adc add lds ret fistl or movsb fdivrs jp dec adc add arpl and aam jge sbb cmc rcrl inc mov cmp and dec pop or lods fwait cltd sbb pop pop lock sub xchg or inc xor aam mov loop jle or std lock cmpsl out in add (bad) movmskps das mov in dec jecxz xchg stos cltd jnp (bad) inc sub xchg push or jge lds dec enter scas xor je lret ja sti add imul (bad) aaa inc out je mov sub sahf stos (bad) mov pop fwait cmp adc aam aaa cltd xor jp dec fmuls into jb test jl mov in mov fwait jno testb aam insl or cmp adc mov inc fsts xchg xchg lds pop movsb leave divb xchg jnp ret dec add xor ds jae add pop cwtl movsl popa leave cmpsb sbb jmp add and xchg fld xlat xor clc dec ds mov cmpsb inc jge lahf and push ret fbstp lods movsl pop cmpsb xor mov push (bad) mov xlat or push inc loopne rolb fldz push stc jb rcrb sti xor xor test in dec and mov iret sbb push stos and push pushf push decb insl popf sub mov mov lods xchg imul sbb xchg (bad) xchg and repnz (bad) jmp jmp fdiv push sub mov enter sub xchg pusha mov (bad) hlt xor or enter ret je cwtl cs adc sbb mov js clc clc int3 mov xchg clc fstl cs inc mov adc push int inc push (bad) xchg cs mov movsb xchg mov scas aas xlat ljmp add xchg add (bad) lret (bad) or dec jp rol cmp mov dec dec aam mov or mov das sahf jns fistp ret mov emms sbb jg dec insb loope ss fsubl stos inc in mov (bad) push inc (bad) xchg sbb pop push mov nop outsl pop sbb sbb sub and je xchg push adc imul jle inc lock sub mov inc jbe sub inc mov xor inc or ljmp mov rcrb cltd mov sub add repnz pop xchg es lods cmpl popf push or push sarb in and cmp push pop pushf push fcomip pushf xchg popa dec mov cwtl dec test es add jl shrl stos outsb add jl cs fildl test roll in mov inc loop xlat jne (bad) adc imul push mov aas das movsb shlb sub jnp (bad) icebp das (bad) xor mov mov nop xor push call in repz out insl fsub icebp mov pop cld pop fist xchg fadds mov subl out push sti out popf jp mov aad dec push xchg jno ljmp adc xor lods (bad) sub lahf ljmp mov js ss mov pop push std jecxz mov stos xchg cmp dec mov or mov mov pop push jge sbb push lock idivb in pop iret lds push jge rorb push loopne sub xchg imul cmpsb jae lret int3 lret fisubrl sub insb fstpt sbb dec fisub push into cmp lock hlt movsl and dec mov adc mov xor int3 or xor jne cmpb pushf loop jae or and mov stos sbb popa jmp bound push xlat jle or sub ret daa push lock mov mov cmc dec jns cld jo scas (bad) nop sahf pop (bad) dec test (bad) and cpuid mov ret bound enter int3 ja jne repnz popf (bad) fs mov out dec cwtl sub pop xor mov aas and sahf cmp add leave cld in adc stc (bad) adc cwtl xchg sub inc cmp in das jnp je cmc insl mov xchg popf dec imul and (bad) int3 sub jl or ds xchg in out or divl add push mov (bad) xor daa pop add and pop add out flds in push jno ldmxcsr adc jge adc sbb mov and inc and xchg mov push cmp jle push shlb cmpsb cmpsl push (bad) and loop jbe xchg mov sub loope inc fdivrl adc (bad) cmc jge xor mov sbb mov or cmp rcrl mov imul test push push mov in cli aad aas repnz movsl pop dec cltd mov (bad) fnop (bad) inc std data16 in or stos ret (bad) fidiv (bad) lcall test push pop push xor mov and and dec sub add sarl mov jo jnp cmpsl repz popa inc shrb jns fldl push jge fidiv ja add mov mov dec repnz cmc dec mov pop in dec ljmp xorl imul stos test lods or jg jae pop jno movsb mov ja into fcmove push in cmp pop into lret or jnp,pt nop loopne fistpl dec test sub xchg sbb adc ss pop jbe mov out push cmp orl pop in mov cltd cs or mov pop or add mov scas loopne adc je xchg pop add mov loope cld insl enter icebp and in fistp cmp mov sub lahf rcll inc add mov seta xchg (bad) gs (bad) mov rep (bad) xor inc lds cmpsb lcall or pop cmp movsb data16 pop dec das stc add inc push int3 fdivl scas sbb and jae test sub dec pop popf xor (bad) mov push cltd sbb fwait mov push mov push jo mov dec or mov fadd mov jg lahf or jnp (bad) jbe jmp push cmp sbb xchg push jp sbb jae sub push pop shrb mov dec pop test push pop push mov enter push add popf leave clc sar ret sbb xor adc inc xor xchg addl sbb popf lods clc sarl aas in fldcw lret (bad) pop lcall jb push or push xor cmp lret inc lahf je scas das lock test fdivs cli daa dec js mov fisttpl mov div mov xchg fsts mov xlat (bad) icebp xchg loop stos sahf mov push mov fdiv cltd (bad) std add pusha sub pop mov mov js sbb and adc test push arpl xchg sub lds push test or mov xchg xor jb cmp pop test cld (bad) call cmp mov ds mov scas and leave jge sahf out (bad) das cld test fstl les pop pushl push sar repz mov mov shr fmul adc fsubrs push adc je mov jne and inc fdivl test lock fdivs bound dec mov sbb inc enter sbb aam mov mov fildll sub bound pop and or loope stos or fptan ret outsb sub or jmp or dec lock push addl lods (bad) jmp test or push mov mov cmp mov cmp sub xor push xor add add outsl and inc adc cmp jp lds xchg stc (bad) mov or test mov add push xor pushf fwait fs dec dec mov jae out psrlw cli test sub mov dec xlat (bad) out adc movsb sub pop mov insb mov mov push mov outsb aas ret xchg inc cmc les cli mov add mov fldt sub push aas sub dec cmp movsl inc mov sti rcrl aaa cmp mov js (bad) dec jns js call push cmp cs xor cmpsl outsl mov fcompl cmp xchg ds lock in xchg pop lea pushl loopne inc sahf imul rcrl aam aaa cmc pop popf int3 mov out add pop out stos or mov clc les (bad) aaa out xchg mov cwtl sahf mov jb clc mov (bad) stc jl rolb dec int3 sub std add mov pop and std loope aad inc dec mov pop hlt mov push pop inc mov pop enter mov sbb mov in movb iret push cs xchg ret inc popa cmc xor test iret pusha mov sub cmp int3 mov mov lock jbe push inc dec push cltd into mov cwtl jnp push addl leave sub (bad) out insb pop adc mov fdivl add xor mov cld mov ja dec shll pop (bad) jg bound add sbb sub out mov cltd (bad) cmp insb (bad) movsb (bad) out pop inc cmp sub sbb cltd xchg dec stos jge,pn icebp push test fbld int ljmp notl fldlg2 jns xchg xchg push negb loop aas push popf pusha dec cmp clc in pop sub add arpl pop in aaa bsf dec and dec mov mov (bad) jne jmp xchg aam les popf xchg hlt (bad) jbe xor sarb lock int3 and std shr notl orl daa pushf pop cmp dec fsub sub iret jge pop rcrb cmp mov aaa sbb aaa xor dec repz xchg adc pop movsl sbb and jnp sub daa leave xchg (bad) dec or (bad) mov or (bad) xlat stc mov inc mov es cwtl push je adc inc gs sub add fbld push sbb (bad) pop adc in adc andl gs inc and sbb jg sahf mov cmp and out xchg fnsave shr xlat (bad) daa dec call imul or lret xchg sub jns outsb jp add fisubl mov stos jno jne fnstcw xchg lidtl xor sub mov imul xchg es xchg mov sbb add adc mov push clc in loop bound jle jne call pop lock rolb out push or in in data16 sub jns mov into pop shll inc xchg xchg mov addr16 push dec lcall call call nop dec sub repnz mov jnp insl add xchg sbb aam mov pop sbb mov out pusha mov fnstsw push repnz sub outsl jo aad movsb lea or mul arpl stc xchg xchg adc push add test movsb dec mov add and push mov loope cmp ds pop in sub insl dec sub or lods dec inc mov aad push inc scas xchg arpl sub pop test pop ret fldl outsl pop test jmp subl add lret fnstsw pop lret cmpsb mov and mov cwtl jno rorl test cmpsb adc into inc mov loop xchg stc mov mov or mov lea sbb mov cmc sbb mov add insb jb (bad) sub icebp lahf cmp inc jge,pn push add je inc hlt xor inc fisttpll xchg loope jg xchg aam xor cmp lcall add push pop daa movsl or push pop ror arpl mov mov je sbb outsb sub push jmp pop cmpl ret fistpl fstpl mov scas or adc hlt popa xor lahf fbstp clc xor mov fs shrb jl push (bad) imul dec jo or insb jb add scas (bad) outsl mov inc cmpsl scas stc ficom ret cmp pop shlb mov dec push pop or jb push push adc aad push fdivs stos mov repz push cltd jle or loop mov ret negb push icebp jp pop pop mov xchg mov sahf add inc dec sub xchg cmc add inc int3 inc sub jg test imul fdivs jecxz in mov loop cmp push mov cld mov out aaa xchg lods fxch inc sbb fisubrl scas pop xchg aad or dec popf sbb mov insb insl adc adc out mov push pop push dec cmc xchg int3 mov jno mov cmp mov ret inc xlat sbbl pop les movsl or add pop cli shll (bad) je out adc scas cmpsb mov shrl push jmp cli mov test mov pop lahf mov pop (bad) xlat movsl adc mov xor sub ret and scas frstor (bad) test ss int3 pop cmp inc adc xchg mov rcl sbb int3 sub cwtl (bad) in cli repz pushf ds enter or mov jmp add dec pushf dec (bad) in pop ds call lcall (bad) push adc add jmp push xchg adc inc push enter cltd xchg in out mov xchg sbbl insl sbb mov sbb sub fcompl mov nop pop mov (bad) mov daa mov add push iret lret stos xchg pop pop lahf and imul aas or and sub in int fildl inc push or ja xlat push movsb sti popf push mov and das and pop enter scas fsubrl mov xor fwait (bad) stos jge lret cmpsl lret (bad) cltd jbe rolb mov adcb mov dec arpl ret loope loop scas fcompl call mov push ljmp xchg mov push push pop push jns (bad) mull imul mov lahf out jne pop lds mov ud2 cmpsl cld ds pushf sub stc int sub addr16 das mov lahf push cld or iret inc inc cmp stos popf data16 hlt fcoml xchg out pop sbb or add push sbb in cli shlb jmp adc (bad) dec js push stos repnz mov mov iret adc outsl cs push xlat test cmc sbb cmp xchg lret sbb dec mov push adc pop in pushf aas xchg xor lods xor test add out or cmp sahf and mov nop lea sub push add push in push fbld jmp xchg aam aam adc adc or jge (bad) push sarb xchg rorb call and xchg imul sbb les jno cwtl inc push loope (bad) sub aad (bad) mov xor pop scas mov fs jle push lock imul mov scas push mov pop int3 jg testb mov out xor dec and or push out repnz in rolb inc inc mov aam add jbe rcr mov les addr16 imul dec mov repnz test adc repz sbbb sbb ljmp and push fisttpll or outsl add ret ljmp aad (bad) movsb stos cs mov inc jg add outsl and shrb aad xor jns xor push aad inc mov adc mov push jmp popa in fisubrl sbb mov cmpsl cmp hlt test push dec push mov xor sbb xchg pop leave scas sbb stc dec mov fst sbb arpl lcall fucomi je mov mov xchg xchg cmp dec rol mov pushf in aaa adc sbb sbb jae and cmpl push jmp rol fmul jmp dec int adc jb (bad) in lret cli iret mov negl lea sub jo jp mov jecxz mov repnz jo mov dec data16 in into lret fsubs push push inc jp and dec in adc outsb pop cld mov lods bound push sbb fs fs mov mov pop adc mov aas data16 xchg sub fimull push inc clc lds adc jbe inc (bad) in mov cwtl cmp imul addr16 jo dec jl mov xor jmp or jbe dec push mov mov (bad) (bad) or lea aas sub iret repnz sbb lret std sti push sahf std jmp inc mov and cmc adc aas loop mov repz ljmp or inc js pop sbb add add xchg aaa cwtl inc mov push orl enter xchg pop imul inc cs or in popf (bad) sbb and adc cs js pop pop lahf fistpll mov es (bad) (bad) dec loope sarl sub (bad) ds int3 fmull add rcr sarl aas pop sub add push jmp stos popa fidivrl or inc ficom adc imul mov fiadd sub or loopne pop fdivs cmc inc dec sub test ds and jle inc jle xor call cmp jb xchg add or inc popa and aam into cmp test jge xchg fildll test cmp jno enter inc mov jne jnp push movsl xorb dec outsb mov jmp lret or das enter mov inc pop mov jg mov lock in in xchg dec mov inc inc aad (bad) xlat aaa lock and ds push in dec xlat into lahf xorb lds rcrb jo add mov dec out mov loope pop lret int pop and inc js sub mov pop in lock pop test add sarl lret add scas cmpl pop sahf push rorl add hlt mov add sti push aaa in or jnp out cs lahf jnp inc jnp pop push mov mov jne mov mov iret push jecxz arpl cmpsl mov sbb sbb xorb dec es scas xchg (bad) leave enter js aam (bad) mov xor inc mov adc stos int aaa mov pop mov in jo lret mov mov fstp jmp jecxz adc xchg mov decl pop mulb flds (bad) ficomp test mov fcomps mov jmp (bad) fcom pop push andl cmp lea mov insl imul subb ja cmp lret adc aad push out insl sbb sbb sbb es flds push (bad) mov ljmp cmc out mov into jns and (bad) cmp pop add adc xor mov mov push popf pop xchg repnz mov out data16 cmpsl sbb cmp rcll pop jg cmpsl ficom aad adc hlt or jp cmp add mov out xchg dec add sub fs jp sub sbb mov cmp jo mov cmp hlt sub repnz (bad) in rcrl shlb inc or psraw xor cs sbb imul xor jb pop cltd sbb cmpsl add cmp rcr scas jns in push mov fsubrl mov and ret mov adcl aad and or (bad) in mov out in xor movsl pushf and aam movsb outsl data16 (bad) mov repnz or lock shlb add (bad) popa mov xor jbe data16 nop inc or push int push adcb xchg arpl adc mov int3 dec lods out stc shr nop loop mov test cmp pushl iret sbbl mov inc pop js test add pop sub daa adc mov xchg xor or pop xchg dec rcll add mov jmp ds or stos and data16 arpl sarl jns adc mov cmp pop cmc insb aad (bad) hlt les (bad) mov mov mov jnp cmp jp pop or ljmp jno mov inc rorl add lahf xchg lret pop inc mov push add xor inc dec js push shl mov loop dec cmc jnp clc fdivrp inc movsl cmc xor movsl hlt daa push cmc push rorl push jmp xchg ss push cmpsb popa jmp xchg mov pop ja mov pusha sarb xlat jae jb xor stos push adc cmp dec mov ds lds jecxz cmpsl xor push into clc add inc push and inc dec imul (bad) and icebp cli int pop cmpsb cs lds dec mov pushl in inc testb sub ljmp xchg jl (bad) std or dec iret loope adc xor push mov ret push or and cld aad push xchg cmpsl popf jbe mov sub sub loopne or stos (bad) lock add negb pop sub lret cmc insb mov in pop add mov cmp inc inc xor mov mov sub xor notb gs mov sbb mov dec dec repnz stc mov stos ret stc cmpsb inc jae lcall add adc pop mov inc cmp add xor loop push lods mov cmc (bad) pop dec outsb mov popl push stos lahf pop push adc jle out aas inc fcmovu (bad) pop lret pop cmpsb sbb lds lret mov mov mov mov stc mov jge ret imul repnz add arpl cmp lret outsb (bad) jns pop xor ds dec xor aaa rolb xchg mov das jno jl (bad) mov out ja or mov test inc fs jae les xchg das adc aad push pop inc test inc loopne sahf lret popa or dec iret gs mov add ljmp and cmp pop jb push adc jne scas icebp popf movsb dec xchg xchg into sti stos pop sub loop mov cmpsl movsl inc mov orl push insb call fsubrl and mov lods adc cmpsl adc bound jbe flds out mov repz mov dec mov popf in idiv pop sbb std or inc int3 cmc int3 imul dec pop or and popa movsl inc imul mov sub sahf adc rcll es inc aaa iret lret in mov aad outsl bnd shrb sub pusha (bad) jp xor cmp lret lods mov out mov and sahf jp ds fistl test aas std mov inc inc jle or cltd inc xor adc add cs sti fisttpl xchg test push or ud2 lret cmp adc pop scas add sub fadd stos and daa (bad) (bad) ljmp mov add cmp lods fcmovu sbb lret (bad) lahf push test pop push or (bad) and push jne adc sbb cmp mov loopne sbb dec sbb pop mov xor sub xchg dec xchg es enter lretw push fwait mov mov cld test lods enter js inc mov jns jbe xor pop fldenv aad cmc xchg inc cld xchg or mov out or xor pushf mov mov icebp das pop mov sub leave ja and xor jae jl mov xchg shrb sbb xchg ss cli sub sbb xchg add sub in cmpsl jns (bad) mov xchg outsb or mov mov pop inc mov sub add insl adc rorb lret xor inc insl jle call mov enter pop add stos xlat test (bad) repnz jnp add dec fdivrs popaw fisttpl (bad) or sbb lea sub into in cmc pusha cmpl popa cmpsl cmpsb in add sub mov daa test loopne das xor cltd lea lea pop mov repnz dec in jo jg popa xor popf test aam nop lret mov jno jb push add iret pop clc popa dec (bad) push push jmp fdivl aam mov mov sbb stos mov cld lock repz dec or nop iret xlat dec push lods sub cmp js int mov inc xchg ds (bad) cmp cmp sahf out cwtl push add cwtl std cmc shrb ficom imul test adc stos insb clc mov mov fidivr cmp loope andb cmp and mov (bad) repz fidivr xorl sbb xchg pop jbe pop mov into mov enter cltd mov fiaddl cs or xchg aas sbb popf xor out int3 mov mov push ljmp adc aam int3 jnp cmpsl or in xchg cld (bad) cwtl js (bad) and push cld loopne sbbl lret test mov adc jae xor insl dec cli mov jmp xchg les loop stos cmp out jb fist cmpb pop xor xor out dec xchg adc pop je setg sahf dec push fcoms or int3 add add (bad) jae repnz mov jp ret xchg loopne (bad) out test sub xor addr16 dec mov test sub (bad) nop pusha mov imul push (bad) gs add aam push mov sub stc mov or inc xor rclb dec and aad (bad) pushf dec fst cld and lahf call pop mov sbb test into popf push movsl popf mov fmul adc jnp push adc bound mov nop add add xchg cmpsb in out cli fwait ja mov mov fwait cmpsb fistp mov or xor sub into arpl lods call adc nop aad mov add xor fdivl scas sti xor pop dec push aad subl dec insb (bad) push inc cwtl mov adc pusha jge hlt scas mov fldt imul sbb outsl cmp sbbb ss or int3 insb xlat sub push sub inc lock mov or repnz sub jmp inc push pop (bad) lods dec and pop fisttpll sahf fstpt push addr16 in inc (bad) xor cwtl pop pusha lahf jmp loopne and mov sar ret iret subl frstor adc loope shr in xor pusha xchg bound lods jge cld push std arpl pushf shlb inc xor aam das inc mov push enter xor pop incb insl mov pop cmp jle xchg cmp cmp popf cwtl sbb adc xor adc xor test dec fstl fidivl inc cmp sar and hlt clc pop fadd in and das push mov pop mov lcall test xor add adc (bad) stc push data16 inc int (bad) data16 or inc sub or adc dec dec dec loope loopne notl aas ss xor adc (bad) into sbb int3 dec iret mov cmp mov mov cltd cmp adc aas (bad) sbb outsl cs stos adc sbb or mov or (bad) mov outsb (bad) shrl lcall xor sbb imul mov stc lahf jo xchg ror shll push outsb mov jl lea (bad) adc repnz fucom xchg lcall jp rcll push in adc sub cmpsb test mov sti add insb sbbl push cmp add xor fiaddl jae sbb and addr16 jbe int test out rcl int3 cld pop in inc out push int mov push xchg sub sub push loopne pop repz arpl push in jbe sarl xlat pop mov iret fst repz jae sub lods les ret xor test mov mov lds (bad) faddp or (bad) rcr addr16 loop arpl and (bad) dec adc mov hlt add jge jae add jbe add int adc lahf mov mov loopne out cmp out into dec mov push mov pop (bad) pop inc xchg loope cltd icebp (bad) sub and lea insl pop enter rcrl sbb pop xor jg inc pop mov (bad) mov mov pop pop cmpsl imul lock add loopne xchg sub inc add lcall stos mov xchg imul dec insb sbb inc stos (bad) jo xchg mov or cld dec sub out pop pop push cmp stc pop (bad) adc ret cmp push nop xchg in mov addb xchg jbe enter gs or sti or pop aam test (bad) mov (bad) aas leave gs je int3 jno mov ljmp ret pusha adc or and xor test sub lock movb ljmp add std add adcl mov (bad) out iret outsl repnz cli loope imul shrl scas adc push jb out loope adc (bad) cmp adc mov imul fs rclb sahf lods scas pop rcll sbbl sub (bad) jae push nop leave das sbb clc mov cs outsl movsb lods mov adc xchg sahf jp lods push push and add inc outsl fistpl cmp stos mov pop stos and lret jb cmp mov fwait xor fdivrl loopne pop out sahf or rcll das xor push push xchg push pop ljmp sub fsubl jle ja out dec inc data16 mov sub lret data16 insl roll ret test xor in outsb push xchg insb mov push jb dec in xor or xor pop add sahf mov rorl ret sub (bad) mov jp test ret das (bad) push cmp push out add mov mov out xchg cmp enter jl pop sub cmp mov mov pop xor js js rcrl imull outsl pushf push adc xor and sti (bad) jecxz inc push sahf popa sbb jo mov cmp mov (bad) push mov fistpl insb mov push rcrb rcrl movl cmpsb loope shlb sub mov xchg push dec sbb pop jne and lret adc mov xor notb xchg clc jo pop xchg movsb adc (bad) in lods xor addr16 (bad) (bad) jge clc fs gs mov mov int jg mov shlb (bad) mov mov and imul iret aaa and cmp std andl shlb and jmp push mov dec pop sahf lcall mov aas icebp pop leave (bad) (bad) je mov lret jae mov mov int3 mov lds mov in out std cmp rcll mov mov and xchg (bad) ficompl mov scas cmc pusha push pop movb mov ds test add mov xor sarl or jbe pop adc adc mov add add sub adc (bad) js inc lcall dec cmp xchg and jo testb sub dec pop cmp mov mov xlat or dec push dec js push popa stc pushf xchg inc jmp jne sub inc sub or loopne out cmp cmc add or cmp push sbb iret repz mov adc dec xchg pop mov jno inc or (bad) daa imul xchg stos jmp push movsl rorb dec lods inc adc inc push mov jo mov mov arpl pop movsl cmp subb es mov popa dec and loope call fbstp adc je std lods jg mov fisubr xchg (bad) mov (bad) pop mov sub into add cld xchg lcall jp inc xor popf mov test fsubl jb fsts (bad) fwait out mov es mov (bad) sbb imul sub sub ret adc (bad) pop xchg and sub push adc aaa loopne and push inc into mov push test shrl and repz cmc xchg mov lcall mov repz ret add jnp jno fcomps add pusha add push (bad) xchg and mov (bad) pop outsl jnp push int3 push mov dec in std and ljmp sbb aaa push dec adc adc rcll add int3 xlat cmp jg jg hlt (bad) adc xor test call jle mov inc xchg insb les loop out dec inc push mov xchg lahf add sahf mov je mov and lcall mov icebp xchg dec xchg cmp inc cmpsb dec fwait lods pand lods pushf jp inc xlat dec icebp sti mov jns mov push inc jns sbbl out adc imul xor les pop add out mov adc jns mov jecxz jno inc push (bad) mov push stc mov xchg (bad) lret cs nop sarb rclb sub mov mov ds cmp xchg bnd enter notl popa rcll cld push (bad) data16 sbb lods insb jmp push dec sub stos cs cmp jnp sar mov out iret lahf notb xchg jge inc xor dec sbb sahf mov mov out xor inc mov movb loopne in mov mov push lods movsb icebp and xor fisttpl mov or dec add cli sub cmc (bad) movsl scas shrl and pushf js cmp pop je mov add (bad) std adc sbb pop push je aad sbb xchg (bad) aas sub push sti add test jmp insl or add mov dec dec jno pop and dec scas popa push (bad) dec inc add aaa fwait cmp pop in mov lods mov hlt jne xchg (bad) je repnz mov test out cs pop insb in push out nop mov cltd xlat mov sbb lret shll outsl jl inc inc gs jl mov (bad) mov push ss xchg xor (bad) add in or leave cmp jnp push lea push xorl mov ret mov add or sahf xchg add imul pushf and ss fucomip sti fwait testl dec dec and jp sti stos lret mov cmpsb aam pop or movsl fiadd and arpl add pop call mov sub mov lahf inc lods xor sbbl pop sbb jge scas sti mov mov clc push ret jno mov xchg dec pop mov sbbl xchg notb inc test jl sbb inc leave hlt or push outsl ljmp scas mov mov adc sti cmp cmpsb cltd insw mov outsb out push jecxz sahf loope mov fistp adc sbb inc sub test adc cwtl inc lcall pop shrb push into ret idivb sub push ss push pop xor jecxz jbe xlat push cld fwait add jb sbb xor inc ret or mov mov (bad) int3 movsl cmp (bad) xor (bad) or push cmp jecxz lcall (bad) insl add shlb int3 mov jecxz pusha mov cli ret mov sub aas (bad) mov in push jns out insl ret xchg (bad) cwtl lods pop fnstcw jle fstpl ret and sahf cmp pop repnz push xlat cmpsl push xchg jb lahf inc je push dec dec jge popa dec int unpckhps mov or jmp push icebp adc insl cs test cmp (bad) mov jmp fldt ret out adc js and cs or lret xchg test dec pop out test mov xor in mov push fstpl hlt fisub popa jnp test orl cli call fwait jo mov aad mov dec push pop aas jae gs adc jae and cmp insl pushw push (bad) popa mov outsb xor jno loop or mov in lods fsubl cmp lods mov fist ljmp (bad) push in lea mov mov in daa xor jg and cli clc rol popf movsl push adc loope pushf iret add fnsave push dec cs scas xlat das adc movsb mov jno movsb fwait push (bad) lea or jno inc dec orl jle xchg dec jb push cmp or cmp aad xor fidivrl roll (bad) push sub in xor xchg mov or repnz shll inc fcomi fisttpll inc cwtl divb into repz testb sbb add jnp sbb je add sbb inc inc fbstp mov mov popf mov inc out mov mov mov adc dec inc cmp pop dec xor aas ficompl std mov jb clc int (bad) sarb inc gs push sbb daa idivb xlat int outsb outsb pop rcr pop mov inc shrl jbe fisub fwait out sub inc mov or jns xchg in repz sub or stos xchg mov dec insb movsb add call inc sbb lea jo sub fs xchg outsl dec xor jae mov pop mov sbb jnp test aaa hlt cs inc ret push adc ret xor cmp lock or inc jmp mov stos (bad) inc rcrl push les stc dec mov std sub mov push aad lods call lock movsl int3 or adc add lahf pop fsubrs jnp mov loope int movsl mov xor pop jnp in cltd int3 inc and cld imul lods in aam pop cld mov fdiv pop jnp ljmp outsl jnp mov aad es imul movb call cmc or push sub or cmp std xchg jg add inc push sbb xorl pop sti inc das xchg sub mov dec sbb sub fidivr lret xlat xchg (bad) mov les inc int adc les mov and movsl xor inc fwait cli cmp sub insb mov (bad) out dec push pop mov clc in cmp add mov and xor or pop jno jge jno fwait cmc fnstenv bound sbb mov inc fisttpll cmp xchg mov test adc pushf adcl aam fistl cli adc pop daa jmp push lret adc add (bad) imul lea jge addr16 cltd jno sub clc addr16 sbb dec fnstsw dec clc mov and sbb add cmp adc aas jmp gs inc ficompl aaa scas int aad lret jae xchg inc xor xchg sarl push sub icebp je test outsb test cmp popf jmp insb imulb xor leave inc (bad) push das add out add xchg (bad) push int3 repz xor push call lock and or pop jne sahf int3 lea (bad) ss dec stos (bad) inc insb fwait call mov mov jnp mov xchg adc cmp scas mov ljmp in addr16 loopne stc pop fcoml add addr16 jmp aam seto std jl pop icebp adc push xchg int aas jle rcrl cmp push (bad) adc inc mov adc jae loop js push mov mov fcmove push icebp in mov cmpsb lret dec adc and and jo adc jb fisub test sbb xor pop sti inc daa aad les js inc or idiv shrl fcmovu rcr or add adc fdivr add or add in push adc xchg adc in jge or movsb jp inc stos bound testb rol inc ret mov pop cmpsl stos inc push add outsl jge push mov mov mov mov xchg cwtl movsb add mov repnz jno out mov inc sub mov je dec jmp sti lea push (bad) push shlb sti and je addr16 add test rolb sub js push mov and and das jno lret cmp scas xor scas ss daa mov cwtl fld testb (bad) cmp add fidiv fwait cmp dec push inc xchg scas add inc loopne insb lahf popf xor in cmpsl inc sub inc cmp inc imul (bad) mov das in std imul loope jg jge push lock hlt loop mov out enter imul popf xchg enter cmc dec push lret enter mov cli cli rorl adc push and mov lret lret out cld neg test xchg pop jns add inc out sbb daa jl mov pop add jmp std insb push adc pop mov push loopne jbe (bad) push das std test or jp inc jge push and mov imul sub push sbb sub jne scas xchg add xor pop dec or sub scas icebp inc test decb enter cli das cmp dec (bad) hlt push lock and imul out ja fmulp or mov xor mov icebp pop push cmp xchg imul sbb mov xor les jns mov movsl push pop in fadds roll pop jnp adc mov cmp ja rolb stos jmp flds and cmpsl shlb pcmpeqb jp or push test in pop lret scas jp imul pop (bad) mov mov sbb ret ret int3 add jns add or (bad) jae cmp mov mov je push mov mov cli sbb jg test faddl adc std sbb cld or call (bad) push push daa mov jno lods aas jbe ja push and mov xchg mov push push pop stc jmp imul cld push cmp cmp inc test test sbb xor test (bad) imul xchg mulb xor data16 (bad) out xchg imul jbe adc pop mov fldl add sbb mov xor jne (bad) call jp push mov xchg sub jo and adc sub sbb sub jl lahf bound cmp xor push lods dec (bad) in jge pop leave mov xor adc cmpsb in jns inc lods leave int3 mov popl pop jb fisttp cmc fadds add inc out lds mov or lods nop xchg jne fndisi(8087 push xor repz div scas inc or in aaa int3 scas mov add push loope sub mov enter push cmp aaa mov dec mov lret xchg into bound sbb jae repz repz scas inc ret and gs mov cs xor or cmp (bad) repz add repnz sbb repnz inc jo jle cltd fstpt or roll xchg sar inc sub test sub gs in inc pop push aam nop aad pop cmp scas cld out dec and cmp fistl push dec (bad) out adc dec mov inc fimull pop fstp test std or (bad) push push dec das pop adc sbbl inc lea cmp sub xchg inc cmp hlt mov imul pop fidivl pop push mov or mov (bad) lret ja fcomi sub (bad) mov adc jg mov mov scas jl ret pop xchg push push popa addr16 dec xor pop fildl jmp push decl mov pop gs xor dec dec mov or out ficoml std (bad) mov push (bad) cltd popf fwait sub sub xchg adc cmp add mov xor test add add lods sbb and mov pop jbe and inc inc pop jle jecxz sub mov mov daa or (bad) jae outsl mov jp dec pop in xchg in cmp scas xchg sbb mov aad and adc xor fmuls add jp cwtl inc mov adc pop jns in mov repz push pop jecxz call rcl dec (bad) pusha arpl dec (bad) cli out shl imul popf test dec adc inc sub loope pop imul iret sti sbb push jle int3 out repnz push mov hlt iret sbb cli cmpsb (bad) xor sahf mov push popl jno and call push ret xchg mov cli out mov je adc rcll mov sbb sub ss cmp aas jmp mov xchg (bad) dec sbb adc fs addl push lods leave dec out push (bad) inc out mov adc xor gs stc pusha push cltd adc inc dec push push cmp cmp xlat jle add imulb pop flds xor sar fs div and cmp mov dec mov and out adc test push cmc sbb and jmp lea push sahf aaa std sbb adc jecxz mov xor test scas mov popa aad (bad) fcos mov pushw adc out (bad) lds dec int decl repz ljmp inc test lds in cmp nop mov add inc jbe stos push out add ja test fwait outsb xor xchg out loopne adc enter add imul and add shr mov cmp sbb jl loope dec sahf cld or add jne add or and pop adc sbb sti push mov lea out test insb mov jns sub cli (bad) lahf dec or add rol (bad) ljmp dec imul dec mov loop mov leave popa lret pop mov cltd adc lahf loope mov jmp cmp hlt std mov das outsl ja or xchg sub shr xor xchg mov movsl repnz ds mov aad mov outsb lret rcll jl ja mov or xor sbb (bad) jp (bad) cltd pop (bad) mov mov xor sti fwait cmc int3 jl cli rorl mov repz (bad) jl xchg arpl xor cmp fsts mov or adc jge dec popa (bad) dec insl pop jno es mov clc xor jne cmp xchg mov and outsb int pop push push lods dec je fucom fs aas pop xor mov push jno,pn push cli jp mov bound mov arpl fisubr cmp es xchg sub add negl push leave gs pop cmp call mov and add mov pop fbstp cmpsl xchg movsl sub or mov sub and sbb ret or cmp fldenv aad mov cmp ss std or andb divb andl dec pop mov dec pop jnp notl jae push mov or subl aaa jp dec sub or aam or shrb and es mov cld pop repz pop xchg out data16 pop pop sbb pop or inc call mov add daa add fabs (bad) fisub inc aaa push stos mov lahf xchg into test fiadd bound inc sub push mov add stos cltd and or mov shll lock bnd sbb mov cmp jle cmp mov std ret movsl loopne cltd lcall mov adc push push inc mov adc les decl or ret das push mov dec leave add sti mov sbb sbb push cmc add dec lahf jb lods fmull sub nop pop test (bad) outsl and daa push mov jg ja dec popf pop xchg imulb mov outsl dec fwait es add popa jns and jp jge cmpsb jp pop ja ja cltd push ja push xor mov inc xchg or sub out push sub decl fistpl mov fnsetpm(287 ret arpl mov and cmp cltd andps jno leave lods (bad) imul mov int3 mov out in (bad) dec in daa sub aaa push mov sbb rcrl mov in ficomp lea mov jp cmpsb mov pop jae inc mov sub push jnp xor cs stos sbb inc push pusha insl shrb xchg cmpsb mov cmpsb add jecxz addb popf pop fucomi mov or push cmp leave lret inc mov push mov dec je mov imul dec insl iret and rcrb repz add iret hlt lea sbb push loop sahf fiadd xchg lahf mov xchg fidiv pop xor pop vhaddps cmc dec in jnp cmpsl daa imulb pop xor or lret add shrb adc fldenv xchg repnz movsb add sub sub pusha daa pop cwtl jns or adc or add jmp lahf icebp movsl fisttp (bad) and mov inc icebp add mov lods and (bad) jo std cmp mov jns jno lret xchg jle pop fisttpl and fnstcw enter mov sbb xchg cmc jl and fcomps mov fs xchg icebp cmpsb cld (bad) out jns mov popf jno roll add dec scas add pop and stos inc or mov xchg pushf mov dec and sub mov outsl inc aam lods push push aaa xchg mov jmp mov xor fs sbb xchg xor mov mov lods out dec insb cwtl xchg stos fmuls push and dec or dec out clc out xlat or jmp xchg aam pop into inc fcoml ljmp sahf cmp cmp inc daa pop cwtl inc gs jae aas add (bad) mov pushf jecxz cld inc cmc dec pop xchg xchg sbb std pushf lock inc mov dec mov in cmp and mov in shll popa or mov push adc jl clc (bad) cmc cli outsb mov mov pop mov mov int mov rcll push sarb or fcomip and loopne in adc dec jno ds loop push and rcll (bad) jb and mov adc pusha enter (bad) test ljmp addr16 push fwait imul sbb cmp fdivrl push sbbb dec or arpl stos leave cld mov cltd sbb ja mov sub dec out imul mov dec insb ds ljmp das cs outsb das ret hlt jns test xlat pop (bad) jnp push jo fisttpll loope add ret lret cmp jae fs leave je mov add rorl sar (bad) xor in icebp clc adc call or bound push mov xchg mov fildll xor sub sub pop xlat mov (bad) jae je jae mov xchg jo pop int3 push out in mov (bad) rol arpl cwtl aas out movsb xor iret ret add sbb pop mov in stc xor movl sbb xor add inc fwait pop cli dec insl jmp jl pop dec jno shl gs jne and clc fs cmp or cmp test xchg rolb (bad) and inc fimull loopne lock sbb (bad) cmc sub fistpl popf mov pop mov dec xor cmp push cmpsb mulb push cmp mov sub cmp out popa sub loopne cmc push cltd mov pusha jo cmp cmpsl push add mov mul lods inc sub loopne cpuid adc into lahf sub arpl aam cwtl mov dec aaa out mov add sub outsb add and loop std call andl rolb xor cs and nop (bad) pop pop movsb test or lods stc jp daa push and push and sub xchg pop inc pop test inc push adc mov push iret je add mov in mov pop fucom iret push imul fistpll fsubp or pop mov enter dec loop int3 sbb popa aas (bad) loop stc (bad) rcrb mov sahf xchg jo aad adc inc movsb jle mov mov repz gs push jg inc push or loop add xor mov add and xchg outsb jno sahf ds cld loopne dec add xchg pop lahf ja repnz cs enter mov push mov jno fstpl inc lds aad and or adc mov outsb hlt jnp fcmovbe cmp adc repz imulb pushf xchg enter and sbb jmp ja imul add or xor add stos xor ljmp outsb cmp adc sbb and and sbb sub aam jns ljmp sbb (bad) pop fldl sub add pusha mov loop or scas cmpsl dec xchg loopne xchg dec scas sub ror cmpsb mov fisubrl adc pop push stc cwtl jmp xchg stos repz fdiv data16 jge out fildl in sarl mov cmp xchg mov shrl fsub (bad) xor jle and pushf mov stos inc pop dec pop xlat inc jg xchg push fsubs pop outsb sti cli int stc push lock and clc test or lcall cld cmp inc divl dec loopne mov scas sub jmp jns mov ljmp call fmuls push xor xor ja popf ja mov xlat dec orl insl push fildll mov (bad) mov pushw jp sbb jno jb iret xchg repnz add lret std xlat mov cmpsb js xchg nop lods lock in in or bswap push leave (bad) hlt pop int3 das stos sti repz out and call (bad) pop xor lds gs jp adc call pop dec push inc push adc sbb cmp das sub jo out sbb mov cmp sub cmp mov (bad) lret sbb insb push xchg outsb fcomp pop call aaa push cmc (bad) mov pop (bad) (bad) leave inc add icebp movsb mov sub or inc inc push adc and push notb (bad) dec pop pop inc stos push loope imul loop mov (bad) clc ss into xchg fcomps out jmp mov je shrb in lds jno push mov enter inc inc (bad) mov (bad) dec xchg rcl rorl movsl dec pushf add cmp sub movsl inc jle scas jle scas aaa sbb loope lahf mov aam push and insb push push dec cmpl setno loope mov or push movsb jae repnz ljmp push cmp jmp outsb add cld dec jae loopne xchg das xchg shrl out adc sub pop add sbb mov insl lret mov aaa and movsl (bad) pop ret aam pop sbb mov test push push daa shlb mov cmp xchg xor or loope cmp clc pop test sbb in in pusha not out xor dec xchg jne jp mov lret and ret outsl add push and repz mov push mov adc fbstp pop mov cwtl push or stos mov (bad) add and dec (bad) in fs negb out repz ret mov stc or pop inc mov std call enter and (bad) out fcoml repz push mov iret cmp out sub adc and xchg add xor mov push adc clc int3 imul rclb push jne or jo mov (bad) outsl cwtl inc fwait lods lahf ret mov ret movsb test out cltd sub jle push stc subl rorb pop cmp push lcall add imull xchg jge jl pop aam stos mov hlt arpl jbe push push in push jbe add outsb insl sbb add add arpl xchg fsts scas mov sub out fcmove push xor xor stc aas pop pop bound mov jg jno pop xchg inc xchg enter aaa out mov mov mov cmp mov mov roll push arpl (bad) push adc cmp addb lahf lret out xchg out (bad) cmc mov ds cmp jns loop clc sti leave pushl jp (bad) xchg lea push mov cmp das cmp nop stc lods sub jns xor mov dec js adc or xchg insl popf inc mov mov das mov bound add lods (bad) lcall lods fisub in jl out je mov add cmp push aas rcrl into or std fisttp or cld xor xchg movsl mov jnp xchg mov lret mov addr16 cmpsl scas dec bswap out cltd sbb mov hlt enter mov or jnp,pt movsl inc add mov mov inc and mulb in loop mov xchg aas fdivs jb rcll clc pushf int3 and jno add push out push cmp and lret sub icebp in stos loopne xchg (bad) ljmp cmp out xor xchg xchg xlat ss mov je int pop cwtl inc lret outsl repz push dec jge gs aas dec xchg stos pop jno push or adc mov out pop ljmp and aam lea jle rcrl sarl fldt sbb pop push jnp sbb push loope mov add shll pushf jae mov jg add mov cmp pop (bad) sbb adc xor rcl jecxz pusha xchg xchg ja lds lahf mov mov outsl out adc mov pop daa fwait push push enter jge jge fs and add add icebp sarb push mov scas outsl hlt pusha outsb pop fwait and arpl adc dec cld sub std fstpl mov pop mov lcall pop repz insb enter hlt fiaddl xchg inc data16 fwait stos js pop xchg imul xlat pop add jle push and in jecxz sbb dec lahf pushf dec fld1 sti aas or push dec pop int out fidivrl jecxz scas jns ss cltd scas imul mov push aam inc cld ss mov mov jge orl push mov sub in pop pusha push sbb mov lock cmp dec lods sub arpl je mov adc and (bad) mov jnp add (bad) rorb std sahf or inc mov pop pop aad lds (bad) cmp int3 out std and shrl fstl pop and push cmpsl xchg or fs mov push dec rcll pop loopne in and outsb fs add ret stc mov das adc mov insl push jb insl sub or or lahf sbb lret cmp (bad) into sub hlt ds mov cmp jmp sub jecxz jne cmpsl sbb inc adc dec jbe pop push cs sti inc push fdivr sysret (bad) jne push fwait outsl orl pop data16 movsb enter out movsl lods push xor sub push sbb shrb les jne sbb pop sub mov imul sbb sbb rep mov fbld cmp mov loopne stos cmpsb ljmp inc cmp inc push dec inc out movsb xchg mov dec or popa xchg xor aaa movsl bound popa fldl push xor xchg fisttpl enter (bad) lods (bad) dec or push pop out rcll scas sub cmp lock add inc xor and movsl in and les jecxz cmpsl lret jne (bad) lcall fstl test int3 aaa jg and inc mov or lret movsl out dec and fbld lret imul lret sbb shll test js xchg adc ds (bad) mov push jno sub cld addr16 push mov testb test and pusha js push or daa sbb pop xchg jge push (bad) and cmp das xor push fsubrs push pop mov inc fwait mov push mov idivb adc lods jne fsubs aad movsl rorl sbb movsb std lock fs out push cltd pop jle inc jne das daa push ret in daa inc (bad) and jns shll notb fild out es jae xlat lcall sbb aam dec data16 adc mov test adc (bad) les or xor sahf ljmp xchg push jle mov les dec dec xor push loopw call pop xchg shl push enterw roll arpl and cmp inc inc jo cs and scas dec dec push iretw clc aaa (bad) stos xor sarl xor add mov test popf push inc pop push js in and in sub add mov (bad) (bad) adc inc loope inc hlt mov cld sbb jmp out jb imul pop adc fisubrl movsl mov add pop nop lods fimull add cltd sub xchg out bound xchg dec imul das or into test adc add cmc out loope or decb fstpl xchg push pop in adc fadd in sahf std mov nop int3 (bad) mov aaa push fsubs cld fcompp sbb pushf adc mov pop rorb jmp je pop push sub jo aam inc scas loop and mov pop stc or int3 js push daa push add add loopne mov insl dec (bad) jno jb (bad) out push cli xor arpl xchg xchg fildll pop push pop (bad) fcompl shrb pop fs inc and test pop sti sbbb ror jecxz call (bad) dec jg (bad) mov push dec clc ret inc or sti fistl sbb push lcall sarb fnop xchg jae push cmpl pusha or push xor mov das in pushf enter dec ss sub mov into pop aaa dec inc pushf dec pop in lods cmp ja cmp push lret (bad) push add xor sub xor test lahf imul pop lret pop andl sahf adcb jle xor cmpb cmc insl push iret cmc pop cmp mov lret sub mov fstps add cmp and into fldcw in inc outsb mov pop add flds xchg xor (bad) mov xchg mov (bad) rorl jb mov insl or sbb fcoml mov mov (bad) aam test movsb dec sub in push movsb cwtl insb inc mov xchg lods dec repnz add fildl scas clc sbb lods xor outsl mov das jp and fwait divb aad push inc fwait jbe pusha sub cmpsl and cwtl adc adc int3 xchg jg stos mov sbb mov in lods enter pop je test inc repnz shrb push xchg inc mov mov fidiv lahf mov divl xchg arpl movsb cmpsl mov out fadds jae inc js push xchg or mov gs imull pusha fwait rcrb inc js cmp mov jnp (bad) test xchg pop push adc xchg fsubrl adc stos jp jb popf add jo loop push and out pop cli movsl mov bound das cli adc out mov or mov insl out sbb pop shll mov call cmpsb pusha scas cld mov add xchg loopne cltd cmp sbb sbb pop or pop add add or lods lods fs aam daa sub sbb inc mov adc adc inc xchg mov or lahf mov mov sti mov and imul mov jnp outsb cmpsl xchg inc sub sub lret sub data16 in icebp icebp and aam es aas xchg fs mov aam or dec repnz and or sbb outsl pop jg rorl ret jp repz jl ja jnp call mov push rol orl and jae shr lcall daa (bad) fs cmp pop test scas and sub xchg daa gs inc or cmpsb les fstpl or sub aas outsl addr16 clc mov fisttpll jne pop dec dec add ret ret ds cld add mov xchg hlt test mov imul rcrb andl pop fmull (bad) push int3 int3 popa sub inc andl (bad) pop insl popa add sbbb dec scas mov sub jnp mov psllq inc stos cmc daa addr16 add loope jae and xchg loop or fmull into cmpps inc xchg fldenv ret jmp mov push ret insl jmp xor out (bad) xor imul push or pop ljmp cmpsl xchg cmp jns push imul movsl inc mov sbb mov fdivs mov shrb test cmpsl or sbb cmp mov je and cmp je sbb xor or sub sub push jne ja lods add fs adc aam daa push jecxz ds cs mov rol xor movsl aaa pop pop aad mov aaa or xchg fildl adc and cmpsb push pushf dec scas sub (bad) sbb test push mov mulb (bad) mov push adc add jo push cli shlb sbb fldcw out xor push dec pop out fs mov mov dec in push pop icebp fwait pop sbb rolb je pop lcall aam dec push std (bad) xor pop jecxz and mov mov xor (bad) outsl lods sahf movsb test lock sbb arpl cld sbb rclb mov xchg into lret loope fist xchg dec pop push sub xor iret cmp outsl cmp pop mov mov pushf sbb jl inc jno pop and lret adc mov and (bad) cli repz xchg pop cmp xchg test or frstor push scas xchg out pop movsl inc iret sbb pop hlt fcomps jge jne sbb mov mov cmp in jg push or sub sahf mov inc inc xchg push shlb cmp out fbstp sbb push stc pop jge sbb sti test sub push inc and xchg inc roll ret test and repz imulb mov sbb movsl mov add sbb lods scas imul daa rcrl or stc xchg fnstenv and outsb push dec jge sub sub or cli push fnstcw pop popf lds xor gs enter sbb rcrb sti jae mov les mov add jg (bad) mov sbb mov sti sbb inc (bad) jp in in pop jl cmpsb aaa add enter mov js inc pop sub cmp les xchg push dec (bad) dec xchg dec mov ret xor or cwtl cmp ds jo repnz xor cmp sub mov or aaa dec clc iret xor cld fsubrl mov mov (bad) xchg scas mov or ret rcll stos xchg popf lds adc pushl add jbe jnp cli test jns jecxz dec clc inc or lods (bad) xlat loope (bad) jne pushl mov cld stos xchg inc lret addb test inc push bound xor arpl cld push in dec shlb gs xchg (bad) cmc out mov xor sub mov pop movsl andl lret mov push inc pop popa sbb mov dec dec fcompl iret rcll in ret test lods ja pop mov insb repz mov and loop mov das and inc frstor lcall das cmp repnz (bad) mov lods sub and and (bad) leave mov std (bad) in popf inc leave outsl xor mov jge mov or ds push aas adc pop jbe clc lock imul mov sbb mov std addr16 push sarl jns das add inc mov mov stos sub mov fnstcw jb jae sbb jg mov mov pop dec fild decb jo scas roll sub jmp sub cmpsl js mov (bad) gs (bad) mov inc sub add outsl (bad) mov xchg inc push cmc lock pushl loopne cmc cmc mull and sbb bound sarl fmuls mov push jno fsubrs mov sarl in pop mov lock fimul leave mov ss shrb cmp jmp push jp es lods xchg scas xchg pop inc sahf xchg mov popf mov inc arpl dec push lea shlb nop pop insb adc pop mov out push stos jns daa add mov or mov mov and jae and loopne or xchg lcall lcall lock inc push sub loopne jns xorb sahf mov xor pop test call xor mov cmp cmp mov cltd mov add push scas aas dec jl out dec mov enter sbb cmp incl xor scas test or or lods ljmp dec jp sbb cmp dec sub and pop (bad) insb xchg or in push push (bad) jbe mov stc ds dec test fcoms xchg fdivl std aas sub or sub dec mov ret dec sbb loop out not mov lock sarb psubb ficomp int3 mov jecxz sbb mov mov and ret ljmp pop jmp jno dec or pmulhw in leave (bad) cli jbe mov lock sti and out and push cmp mov (bad) les cltd jnp lret mov and out dec out adc (bad) xlat (bad) rep mov jbe sub dec arpl mov add xchg jno int mov push fisttp xor iret repz aad sbb pop ror movl add lret lds test clc xchg or adc push pusha movsb jno push loop insl inc ss nop icebp les sub dec or into jp aam (bad) sub push and fstpt xor cwtl push cmp sbb rolb pop push push mov pop or mov sub loope movsl pop lock mov mov ljmp rolb movsl gs stc lahf jg mov mov sub or push pop pop fs mov inc aam xchg cwtl sbb lods (bad) dec popa ret fild dec jp leave jnp mov push loop push scas (bad) aad xor dec xchg mov leave mov in ds (bad) icebp fbstp out xor nop mov or mov (bad) int popa pop rcr adc call (bad) lock mov icebp and (bad) jecxz push mov bound mov lea loope lret dec xchg out inc in mov xchg mov or test push add adc aad (bad) mov add push xchg pop out inc jbe and cmp dec ret stc mov push cmp iret out jg jno sub scas inc faddl or dec iret cmp lods mov fdiv dec cwtl sub and fisub dec push ljmp outsb cld sbb pop xor je add insl out push sbb (bad) or mov xor dec lds cld fldenv sub jo repz push sub outsl inc loopne push mov dec sbb hlt into or into (bad) cld jo push xchg mov int lds push ret mov pop dec nop adc fwait (bad) popa or inc push imul mov and inc jmp fs subl xchg and xchg (bad) mov ret ret leave push js fdivrl popf rcrb lcall mov jle jge add pop arpl mov aad out jno fadds jmp in aaa xchg and les push sub pop adc leave mov sub rol inc sbb xorl jp,pn add fidiv sub xor sub mov rcrb fstps enter aad (bad) shlb (bad) jp cmp sbb fcmovb mov jmp lahf adc sbb ficom or jb adc jne test nop rorl pusha (bad) sbb add scas mov jmp mov into sub push sub lcall push aaa push sub fstpt movsl jmp cmp das ljmp jmp push jne ja or lea jb sub sahf mov imul xor dec dec dec ret addr16 insb loopne add pop icebp inc fistp or add ret push mov (bad) adc or mov scas jno in sti lret xor loop lods cltd xchg shlb cmpsl or aas pop in icebp mov and test adc cmp push pop jmp jno ret mov xor xchg scas cmpsl pop sarb xchg sbb ds je pusha jle mov scas cmp aad adc lods cmc mov xchg pop push enter mov mov sub xor addb mov lods mov add call stc mov out and gs leave mov jb int jnp daa add leave repnz out adc push fmul mov xchg js sub into mov ljmp and std jns or inc cmp xchg pusha xchg xor or test mov fsubs add jo cmp nop inc gs fcmovb dec ja sub loope inc or add lock sbb jb fsubl jo ljmp mov ds xchg add mov mov outsl movsl ds push cwtl sti ds inc inc iret (bad) push fisttpl int3 or test jb adc test inc fcmovnu cwtl nop (bad) es or cmp and cmp cmp and pop dec shl sbb fdivrs pop sbb ss shrb mov (bad) sti aaa dec das (bad) xchg dec mov adc mov jg jmp mov mov std loop jae test leave insb or jno or adc ja notb femms and jl fdivrs data16 and pop int daa lock sub cmp mov pop ds sub fnsave daa mov ficompl iret loope mov in ds push xchg ljmp ds jns push xchg cmpsb xlat push bound andl jbe mov js and sbb xchg pop out dec sub scas sbb gs push xchg lcall scas shll jl insl fs std mov mov stos icebp cmpsb mov or cmove mov pop push jle adc mov repnz scas nop or adc mov pusha fisubrl shlb dec dec mov and outsl jg and xor mov mov or xchg sub inc sub mov btrl push (bad) jno pop addr16 cwtl fiaddl iret push cs cli (bad) into call mov jnp jo dec dec lcall dec push hlt icebp aaa in lds jl xor aaa scas repnz jl fsubrp jp decl (bad) out (bad) sub mov in jb jle lahf rcrb dec push je mov mov pop bound mov xchg ljmp movsb sahf sbb mov add add out push adc lahf and mov mov xchg fisubr jecxz push sbb xor sbbl sub push fildl inc mov mov jg dec inc movsl mov loope in push sub mov mov jge jns mov repz sub in xor xchg iret mov sbb hlt push inc mov add aam and cmc popf adc sti inc jg std mov std push cmp xor punpckhwd mov adc pop push adc leave sbb inc andps mov jp or mov test subl aaa jne mov push adc sbb scas loop out sbb dec lods in cmp cmc jecxz ret arpl dec xor dec jbe enter push xchg fnop mov iret sbb mov cmp adc ljmp test outsl cli jae adc call mov clc sbbb sub mov cmp jo icebp sub out orl mov push (bad) jo xor mov dec (bad) movsl and mov dec vcvtpd2dqy cli adc jnp lods clc pop out dec in hlt stos sub repnz mov push push jne addr16 lods shrb lret or push sub or dec (bad) or sahf mov adc test or cmp (bad) adc dec mov std and pusha xchg lds push fdivr data16 scas mov test push add cmpsl aad sub push stc mov cmpsl push test imul add insb sub je (bad) dec lods dec (bad) pop and inc xchg and xlat dec sbb stos jo (bad) cli cmp std int3 in mov xchg push cmp cmp pop (bad) or (bad) mov pushl sub or (bad) mov add add mov jns dec ffreep int3 shll std data16 jge je push mov dec bound mov mov mov cmp push inc ja test or mov cmp es mov cmp xchg out lret sub add dec and mov sbbl leave inc mov sub jge imul xchg fwait pop cwtl and xor cwtl pop in popa (bad) lret in mov dec push pop or test inc dec inc mov ss popa imull cmpsl jno or mov daa mov or jne dec stos mov lods push shrb cmpsb cmpsl sub rorl adc outsl sbb push in xor (bad) push sub push cmp int3 add jmp rcll mov fnstcw sub mov jge scas test pop add scas stos out sub movsb cmc mov cmp adc pop and mov roll xor out mov in mov jno mov das fbstp xor adc es rol out cld xchg test (bad) jns adc jbe (bad) pusha pop fcompl pop cmpsl movsb je adc inc mov jb inc inc pop mov cmpsl xor dec cld cmp stc lods and jae mov jns imul stos mov dec push push pop (bad) mov sub xor push dec inc xchg fisubl cld or adc mov stc cmp add inc rclb subl rorl inc int3 scas xor (bad) jb or push mov stc sub nop fisub (bad) jp iret pop int pop stc inc push imul cmp push jle fs sub clc jnp xor fldcw push mov (bad) sahf roll jns xchg cmp or inc xchg dec add jle or add daa pop es popf cld lret mov hlt dec xchg testl mov test in mov mov lods loopne inc mov fisubrl jo iret push inc xchg ret (bad) lds pop sbb xchg dec leave pop add popa popa cmp lea fnstenv popa imul adc mov stos inc jns add scas inc icebp nop sbb pop shlb mov mov adc popf mov movsb dec xchg popa mov iret test (bad) xor and dec add pop sub addl test pop int3 dec ljmp adc mov into push negb lret fisub in adc punpckldq out push test push xchg push push sub enter or out daa iret mov jp shll jp std mov xchg popa pop leave mov push iret test inc (bad) leave pop adc sub xor fstl cli push mov in dec mov sub mov jle xor das decb jl sbb push lret jecxz mov sbb and cwtl sbb mov sub (bad) adc out dec xchg sub inc and and fmul inc in pushl push sbb cmp xlat shll jl lock dec imul sbb jae lods sbb jl cs add cmp xchg out ret cmp (bad) fwait (bad) cmc jne,pt inc and gs xchg xor push sysexit ret leave loop out sub adc and cltd out jmp jg scas hlt and ret jecxz jne add or out cmp lods adc push (bad) cmp mov bound and mov scas mov xlat adc dec into dec loop fsts inc mov mov test ja xchg mov mov (bad) or pusha ret add iret jns xor lea aam scas dec ljmp sub cmp adc jle mov or aad cmp (bad) cs push das fsts jmp cmp aas ljmp mov repnz faddp sbb inc out add fsub pop pop xor sahf jno into sub shlb movsb fisttpl icebp mov das pop xchg fstl out popa aam popf imul fidivl adc int jae jmp cmp inc pop pop mov out test push cmp cmpsb sahf xor and bsf adc arpl (bad) mov (bad) cmc out in sbb sub and or cli dec (bad) push aas push mov add inc inc mov mov inc or jmp fstpt (bad) in add sahf out mov and dec enter movsb xlat mov fisubl js xor cmp fcmovnbe scas mov jnp or imul mov enter es out lcall ds sahf les aad sbb movsb pop aad mov add outsb lcall (bad) jge in xor or xchg push xlat shll sarl pop scas mov add add xor xchg jno (bad) sarl or lea adc (bad) mov gs mov jp fs addr16 in inc (bad) jmp icebp aas dec out push inc test sub cmpsl jns pop xchg mov (bad) es xor inc jnp inc (bad) mov rorb int pop xchg lahf lret xor in push dec (bad) mov fildll push inc cwtl jb push (bad) repnz mov jle xor fldl scas movsl add xor js scas push (bad) or cs pop ljmp adc cmp mov ret sbb fdecstp (bad) std aam hlt cmpsl jb cmp popl mov cmc add orb mov mov mov inc cmp xor cltd loop sub xor out push fs xchg pop inc repnz adc mov fwait jo js or test movl loopne aad cmpsb andb (bad) sub insl adc adc or ficoml idivb sub sub xchg jp (bad) movb push femms pushf xchg andl cli stos (bad) push fstpl sub jp mov push jg mov (bad) mov in inc xchg cmpsb mov arpl pop or cli and sarb jb sub fisttpll movups (bad) fwait dec add dec jecxz sub push sub adc mov cmc cltd stos mov pushf push mov sbb insl fbld in je cltd movsb inc or sub popf sti mov mov ds lds mov xchg xor std int out or loop test aam push insl leave (bad) cltd mov ffreep adc loop int3 lret mov movsl subb lods xchg push cmpsb js mov pop pop loopne ficomp aad popa sub sahf and (bad) incl cmp out push or daa dec adc fadd jge pop add loop adc roll hlt sub out icebp jge ret xlat lret cmp insb pop (bad) ss add or mov stc mov cmp loope push xchg jecxz sti and loop nop dec inc test dec xor pop dec mov fucomp rol mov dec notb pop push inc xchg arpl and jge mov cmc enter fistpl sub lea sbb mulb mov mov mov rcll lock dec xlat cmp les and stos fwait js inc popa sub push cmp mov (bad) decl (bad) shrb xchg clc inc in mov and pop repnz mov in das jge (bad) xchg out shlb inc js mov pop pushf pop lods push dec sub or frstor lods rclb add loopne jge insb data16 (bad) aas lret call and pop adc in in sub jmp jg lea out inc cmpsl negb mov mov rcrl jmp cmp push lods repz pop out mov cmp (bad) std out adc push and out sbb (bad) xor adc leave je,pt rorb sub cmpsl inc cmp mov mov adc sub xchg scas cmp fadds pop fistpl cmpsb or pop inc mov fadd and fs fbld stos xchg and into xchg dec mull (bad) pop or aas stos (bad) push repz and cmp cmpsb adc push xchg or cmp add mov mov jno pushf test sub mov push cmpl ja mov xchg add mov lods mov (bad) shrl xor lds push mov popa loope fwait xchg and mov aas inc adc insb (bad) jbe sbb (bad) cmp lods or bound cmp clc and xchg scas and dec sbb out je shlb and cmp iret xchg notl push pmaddwd sbb cmp test sarl mov out imul push shr dec repz mov adc pop imul mov rorl or popa les aam lods pop and dec jnp sub sub jmp repz hlt xchg jae,pn push ret in sub pop push sbb in addr16 (bad) mov ja sub push cli jbe mov and inc int3 add pop and push cmc jno daa aaa bound imul sub fdivl jmp stos mov mov jb xchg das fidivl mov stc xchg clc pop sbbl push jb (bad) xor adc xchg sti mov pop icebp ja and popa or popa movsl stc xor xchg cmp adc int mov jb and push sub lahf mov test push push mov icebp test or pop inc and jbe cmp lahf outsb fcomps (bad) sbb dec adc push inc cmove push aas mov sbb out jl mov mov xchg gs jg adc dec xor pop xlat loopne sbb ss inc and jge sub sub and adc cmp (bad) ds sbb or pop orl jge inc push adc test mov xchg arpl adc stos sub ds stos iret hlt enter fsubl mov inc in push mov sbb push adc das jae dec jo inc lods lods push and scas mov call es cmp mov push adc cld and sub les pusha push jno mov movsl xor sub lock jecxz inc mov mov test pop imul cwtl das lahf lcall and fldl mov add test sbb xor inc adc outsb sub mov es adc push xor mov repz add pop mov arpl shll xchg mulb ret popf inc sub aad imul jbe pop jp ljmp xor call and sahf test out into int mov popa mov push sub jge sarb lcall je jecxz aaa cmp cmp sub div mov add add jmp mov and fs movb xchg sbb sub sahf mov rcll imul mov scas dec stos test bound in lahf cmc add adc or das insb pop sub inc test cmp ret push sbbb inc mov pop test sarb mov leave arpl ja and inc subl or jae sbb aaa push dec int3 repnz xchg mov inc int3 mov popf fild aaa xor mov clc jnp jge add cmp xchg ret aas enter and mov lock call (bad) lea out aas inc xchg push andb push cltd inc cmp out mov mov lret cmp inc (bad) xor dec inc lds mov int mov xchg dec dec (bad) xor adc mov inc mov pop dec and pop lods lock scas das sti push adc ljmp xchg fs xchg or in lcall lahf movsl push aas decb imul cmpsb inc mov pop pusha movsl les in out mov mov add jo into xchg insl call iret cmp cs pop push jbe xchg test fild push jnp aam movsl jecxz cmpsb sbb insb sbb xchg popa mov fisttpl imul (bad) mov lret lock mull mov mov cmp cmp cmp stos ret loopne loopne jmp xchg incl fs inc xlat jp push pop mov mov push inc push (bad) rcr orl xchg (bad) out and sbb daa jns add mov mov decb push outsl push dec pop addr16 xchg add bound test sub and negl sbb cmpsl mov mov mov add (bad) jle in cmp test pop je (bad) cli add imul pop or mov lock lahf call stos lret jno or mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp loope sbb subb ljmp sahf iret mov xchg lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret add add mov fidiv ret mov cli xor pop mov insl cmpsb fistp push mov fldenv cld xor js xchg fsts lret add scas push jp inc (bad) add je out lahf sbb cmp add arpl add in and js stc dec mov dec test xor dec mov xor push mov add js outsb test sbb sbb jbe clc xor out xchg mov fistp push mov sti xor mov in and inc lea (bad) (bad) cmp loop push (bad) (bad) jmp aad inc cmpb mov ss loop push mov sbb sahf jecxz push (bad) add jae in iret dec xchg int aas jns ljmp mov out je and loope push (bad) add jno loop push sub lret add je in push mov jg push inc jns in and arpl mov popa (bad) or mov daa popa lcall aas js ljmp in imul xor pop jne mov daa pusha cwtl fnsave jo and movl repnz stos out pop nop leave add jno loope add pop xchg int ja,pt call sub in jb and daa popa lcall daa pusha lret dec test xor ret (bad) aaa outsl test sbb ret cld pop xchg rorb inc jp push push ret loopne push mov add xchg clc pop xor mov mov fdivrs (bad) aaa jno clc push mov (bad) mov push xor lcall sub ret (bad) bound cs stc cmp scas out mov and adc es cli push and lds cmp rorl in es cwtl rorl inc jnp in inc xchg inc cwtl and repnz ficoml dec mov add add loopne loope push (bad) movl (bad) enter ss loop push (bad) (bad) pushl jo in ja jmp push movsl pop imul mov lods out pop xchg int3 add and cmp mov mov cli xor push lods or add lods in push mov pushl or stos jecxz push (bad) (bad) (bad) cmp clc fwait out pop xchg int3 push aas ja jmp add pop cltd add scas jmp pop xchg into push aas ja out pop sub mov fcoms dec test pusha cwtl rorl inc jnp add jl out daa pusha mov inc popf (bad) popa mov daa pusha cltd rorb inc jge out sub dec xchg rorb inc jnp in and inc jns jmp mov sub aam inc jg aas test xor call ja jmp add int inc jle out sub dec cwtl rorb inc jge out daa pusha cltd rorb inc jge push inc jl dec test cmp push (bad) (bad) outsl rorl insl mov and iret or mov pusha lcall sub (bad) das imul dec mov sar push nop xchg loop push xchg lret jbe mov push (bad) movl push push nop leave add int3 add out daa cmpsb add push fcoml dec sahf add ret mov fistl pop inc jle icebp sub adc mov (bad) cmp jmp pusha mov es cltd rorb inc xchg cmc pop mov outsb lods call or xor in daa pusha lcall sub push inc jp lock or repz dec dec les jle hlt sub dec repnz rorl sub jo out pop xchg iret or xlat cmp push mov std aaa jno sub sbb mov and clc (bad) leave add jl lock (bad) cmovnp push dec mov cld xchg mov push cwtl rorl sub fiaddl divb insl cmpsl loopne push mov std outsl test mov sub xchg negl adc push pushf xlat adc mov cmp fcoml xor fistp jo in push nop lret js cmp mov and stc insb (bad) xor push push mov and jne dec mov xchg push mov hlt xor and sub fstl push sahf add in es scas pop jns movsb or adc xor mov (bad) cmp push inc cmpl es cltd rorl nop lock lahf ficoml mov cld xor mov sar pop jl hlt sub dec mov cld outsl test lock xlat adc (bad) arpl movl cmpl arpl sar outsb test sbb leave add inc cmpl xor ficom les mov fcoml loopne push mov (bad) aaa jno jecxz pop xchg lret add hlt sub notb sbb lcall pop jbe and pop cli pop mov jge cmp (bad) std pop xchg iret or out sub lret sub cmp lret push inc jp out sub (bad) adc push mov (bad) pop xchg iret or mov sub cmpl sbb mov inc (bad) mov ficoml std mov mov cmp out pop xchg int inc lcall xchg iret or pop gs and rorb clc pop pushf aad dec cmpl sbb vandnps scas jmp xchg (bad) cmp in rcrb jne,pn ljmp pop pushf (bad) adc mov fistl push mov (bad) aaa jno in insl add xor stos in lret pop mov pop push mov std dec repz xchg lret add ja ljmp jnp out dec cmpl pop mov sub add cmpb push repnz xchg into or mov es cltd rorb xchg sti xor test sbb sub push push mov adc mul push (bad) movl push push nop leave add inc in sub or mov cmp insl xlat cmp sub fsubrs mov xor stos in pop xchg int3 push inc jp out sub (bad) xor loope push (bad) add push mov ret insl shrl outsb test sbb movb adc xchg into or mov sub (bad) adc mov add js jmp jg dec daa movsl cmp or lock out pop ret es in pop xchg int3 sub fsts dec test dec xchg stc xor frstor mov mov cld ss out cmp jmp pop xchg rorl inc jge lock aad imul std inc mov (bad) cmp in pop mov movl sarl jne call pop inc jp in es cwtl shrb bound idivb lcall outsl test adc mov cld xor xor loop push mov add jae out pop xchg lret es lcall cmp das push hlt push mov inc cmpl imul jecxz push nop lret and into or mov xor cli inc cmpb sub cmp pop xchg rcrb jg sub mov sar outsb cmpsl loope push mov push pop xchg int3 push inc jp in xor mov sub (bad) fstpl adc cmp out add mov fcoml xor js,pt jmp pop xchg rorb arpl pop pop xchg rorb inc add add add cltd and ficoml sbb leave add mov and rorb inc jl adc mov fbld test leave sbb gs xchg stc xor xchg scas (bad) cmp out pop xchg int inc jp adc sar outsl test cmp mov and xchg rol inc cmpsb add pop xchg lret push (bad) add je out pop xchg int inc jnp or mov fcomps fildll dec xchg adc xor sahf fcoms dec test jle icebp sub cmovs mov in pop xchg lret or and or mov nop jmp or mov pop inc jle icebp sub aad inc cmpb xor sbb (bad) lcall adc mov out addl dec mov cli xor xchg hlt xor sbb (bad) jno in pop xchg in sub (bad) adc mov dec test in jg outsb rclb dec test icebp xchg repz fstl push mov std ss in push xchg in daa popa fwait aam inc cmpl das addr16 or mov sti xor cld cmp in push nop leave add scas out pop xchg ljmp jge repnz mov inc jle lock in std arpl add and mov xor fistp push mov (bad) aaa jo or and mov test sbb pop push andl fsubrl into sbb mov dec pushf ljmp rclb mov inc ret jne das imul es cmpsb loop push nop lret jne call push aas jns in and inc lcall or (bad) js and into aas jnp in daa bound mov sub rorl inc jl in es cltd rorb inc jl out sub inc mov cld ss jae add pushf (bad) aas js jmp pop xchg rorl jno loop push mov std add loop push mov std xor imul jns icebp sub push nop leave add lods in popa cmp lods in push nop lret jbe es fcoml mov cmp pop xchg pop xlat push mov out sub jnp out sub aad dec cmpl sar insb movsl add sbb add or icebp sub lcall pushf (bad) cmovs or sub cmovs mov mov and lret jae pop iret xor iret or sbb (bad) (bad) rcrl push (bad) add xchg int aas js ljmp push push mov sti xor cmpsl inc (bad) aad lcall cmp leave add ja call rorb inc jnp sbb adc scas adc dec xchg aam pop mov adc mov mov and inc jg repnz fsts dec test fstl jb or or mov sub cmp (bad) xor fistp push (bad) add push push mov add je out pop xchg into or mov sub aam add mov das xchg jecxz push nop leave add cmpsl out pop xchg into or mov (bad) add jbe call pop inc jp in es cwtl rorl inc jle icebp inc add mov pop push mov cld xor es or mov sub cmpl push push mov cld outsl test leave adc push push jmp (bad) cmp in pop xchg cmp pop push mov (bad) cmp out pop xchg int add mov sub fcoms dec xchg ficom push mov std pop xchg icebp push mov addr16 dec mov xor aaa cltd dec mov (bad) in jl inc movsl lock mov dec xchg scas sub sbb scas or outsb test sbb (bad) jb in push (bad) cmp fnstcw popf out pop xchg rorb inc jl lock aaa fwait (bad) pop mov xor add mov test popa int3 das fwait or mov xchg sbb add je in adc iret or mov daa pusha cltd rorb inc jge arpl iret or lock aam inc cmpb int inc jnp in daa pusha cltd shlb (bad) bound (bad) (bad) cmp in push (bad) icebp sub adc mov fistl fdivrs xchg aam inc cmpb insl lds jg cmc das imul jecxz push nop leave add jae in push (bad) add je out pop xchg shl dec mov (bad) jno pop mov outsl scas jmp or and inc cmpl mov fistl sbb fcoms dec cmpl mov sub aad dec jmp push push nop leave add je out pop xchg lret add ja jmp in mov aaa jno in pop push arpl popa cltd rorb dec fisubrl arpl mov fstl push mov add je out pop xchg fmull out push movsl loope push (bad) (bad) jno dec pushf (bad) pop mov mov push mov (bad) cmp out pop xchg int3 push inc jns out sub aam dec add (bad) lret add and dec add test leave add xor sbb (bad) std aaa jo sub into or mov jno xor in arpl pop scas punpckhwd lret jne bnd add pop xchg int inc jns in and inc jge xor movl sbb (bad) movb popa sahf fdivl cmpl mov cmovns mov sar insl cmpsb add sbb fiaddl add jmp inc jge icebp sub test adc mov push mov std outsl cmpsl loope push mov std aaa jo jecxz push mov add jae sub sub insb movsb fstl dec ljmp add and (bad) cmp out pop xchg int3 add and cwtl rorb fs sbb mov and inc out cmp add jbe call adc mov fsts dec cmpl adc mov outsl fsub pop shll ret into xor jg jae inc add and bound (bad) repnz (bad) xor sbb call imul out int ret pop out push mov mov mov add mov insl into dec pop cwtl pop popa sahf fcoms dec test add icebp pop mov ret outsb mov stos in push nop lret jbe jmp mov (bad) cmp in pop xchg int pop xchg rorb inc jl out sub inc xchg std aaa jno in pop xchg int3 out fwait aad dec cmpl bound pop cwtl rorl inc jge lock xlat xor loop push (bad) add cltd sti push xchg rorb fs fsubrs push pop xchg int3 add imul (bad) mov loope jne ljmp stos or fcoms dec test add jb dec mov cld ss jecxz push xchg lret or leave add pop xchg shrb push mov (bad) cmp or mov sub aad xchg call or mov sub aam mov daa popa lcall dec xchg fistp push ljmp or mov fsts dec xchg stc xor jp out daa popa pushf (bad) adc mov add jae out jne cmp out sub aad inc cmpl test loopne push (bad) movb out insl cmpsb loope push nop leave add mov sub adc and fstl push mov std aaa jno in jle xor loope push mov add je out pop xchg xchg add jnp push inc jle icebp sub adc es in pop add push cmp mov adc into or mov sub fsts dec xchg sbb xchg lret add daa and sub adc mov mov fcoms dec (bad) mov ss in push nop lret ja or mov fistl test enter xchg cld inc jl icebp sub fistl mov hlt addr16 dec mov sbb enter mov sub mov (bad) cmp jbe inc cmpl sahf push jne shlb cs add pushf repnz movsl cli pop shll xchg negl sub fwait or into cmp leave inc mov mov data16 push sub jns inc lods adc inc add fldl mov imul mov mov jne out cmp add sti aaa jno jecxz push xchg imul push ficomp push mov (bad) cmp dec mov cld ss in pop xchg int inc jnp push dec (bad) mov fisub jmp push push xchg lret ja xchg xor push mov (bad) outsl test sbb cmpl adc push mov std ss loop xchg cld inc jl out sub rorl inc jnp out daa popa lcall mov out daa popa lcall inc cmpb sub in pop xchg int3 push inc sbbl call or mov mov jmp pop xchg rorl inc jge cmovs mov xor jecxz push xchg lret andl mov and add aam inc cmpl push nop leave add mov sub aad (bad) in addr16 push mov (bad) cmp cmpsb divb insb movsl fistp push mov (bad) cmp in stc xor test sbb add lds js in and repnz jno cmp in and add jne call pop inc jnp pop cwtl rorl inc jl out daa popa lcall push mov mov push mov dec test fistl ja ljmp jl out ret push dec (bad) mov fsts push nop leave add je jmp ja jmp or mov push pop xchg lret add ja ljmp int3 push aas js jmp pop xchg rorl inc jl adc mov fdivl xchg out xor fcoml xor lods add xor loop push (bad) add jne cmp jmp or mov xor (bad) cmp out pop xchg into and fwait aam inc cmpb aad dec test ficoml dec cmp test fcoml dec mov cli xor add and daa mov sub aam inc cmpb rorb sub xlat adc in cmp out pop xchg int aas jns jmp pop scas in daa popa lcall imul std ss mov mov test or push pop xchg into or mov daa popa inc xchg iret or mov sub aam inc cmpb adc repz mov in sub aam push pop testb sub fcoms dec test rorb inc jge lock xlat adc mov and pushf aad dec cmpl cmp scas jmp or mov (bad) ficoml xor push mov add mov and adc rcll outsb test sbb cmp in pop xchg lret in imul movsl fistp push mov (bad) aaa jo jecxz push nop leave add scas call jb push inc cmpl in daa popa lcall sub xlat adc adc aaa jo in push nop lret jbe add mov in pop xchg lret and decb mov pop xchg rorb inc jl out sub xlat adc mov fstl jno push push mov sub aam call arpl repz loop push ficomp push mov (bad) cmp out pop xchg int inc jge icebp inc test sub (bad) jno lods out pop ja adc xor pop push sbb fsts dec test fstl push mov add jb in jae push jo pop inc jnp in daa pusha cltd rorl and or mov daa rcrl pop xchg int3 add and pop inc jnp in daa pusha cltd rorb mov xor fcoml call push mov sti xor (bad) int inc jnp out daa popa lcall outsl test sbb add icebp push scas out sub aad inc cmpb in push pop mov enter adc cli xor icebp push mov or xlat sub punpcklbw imul and mov jbe inc mov xchg clc pop mov jns inc scas pop mov roll cmp iret cmp addr16 and xor xchg out sub (bad) dec lcall cmp scas out pop xchg ss mov fistl dec test push cltd rorl bound mov rolb or out sarl mov mov sbb fdivrs lods sbb sbb in push (bad) add fstl push mov sti xor pop dec mov std aaa jb stos test inc xchg clc xor fsts dec in cmp in add add outsl test sbb ret imul aaa jo loopne push mov cld xor dec xchg fs (bad) push inc jg lock rorb popa xor dec mov aam jbe or mov and or repnz aad mov insl xlat cmp sbb cli xor push (bad) xor mov and pushf sti imul int3 inc mov mov imul (bad) sti retw aad xchg (bad) push (bad) fbstp mov adc jae sub jp es xor cmp repnz shrb sbb mov aaa stos pop popa mov mov insb ret int3 xchg add sbb xor push icebp cmp scas jmp add js ljmp lahf or int addr16 dec xchg clc xor fsubrl push cmp test sbb shrb mov outsl stos hlt jl adc xor sbb or xor or imull das addr16 dec cmpl add sbb (bad) jo loop push (bad) (bad) (bad) cmp stos jecxz push mov (bad) cmp jecxz push mov dec xchg int inc jns jmp pop xchg into pop push stos sbb pop (bad) xor hlt sub rolb int3 push aas js ljmp pop push mov add jb in push pop add sbb lret je out push nop leave add jae out pop xchg lret xchg iret or add dec in push test scas cmp (bad) cmovns pop pop xchg lret push inc js jmp pop xchg into pop inc js ljmp cwtl rorb inc jge out sub rorb inc jge out es pop xchg leave add je in push (bad) add scas divb imul mov mov fcoms dec lcall xor insb fisttpl sub or xlat dec add sub add push lret or add add sub sub in ss fild aas fwait clc rolw pop movsb add stos add fisubrl mov adc adc aas scas bswap pop lret sub sbb ret cld xor push mov sti xor fldcw insb movsl fstl dec test pop xchg int3 add and fstl cmpsl repnz sahf xlat adc mov (bad) cmovs mov sbb rorl inc jnp in sub add push inc mov push mov pushl jo inc cmpb or sub (bad) cmp loope push mov dec test ficom dec mov cli xor sub aad inc jle lock rorl xchg loopne push mov sti xor fcoml test cld xor addr16 xchg stc xor fcoml xor push mov ret cld xor fstl push mov stc xor fistl dec test and int ja,pt and into push cmp push mov sti (bad) in es xchg rorb inc jns ljmp jnp jmp pop xchg int jbe,pt out pop nop leave add jno add loopne push mov cmp in push (bad) (bad) outsb mov (bad) cmp jecxz push mov cld xor dec xchg adc lock xlat adc mov mov fcoml ja call add jne out mov and xchg iret pop inc jns ljmp sti xor movsl ficom dec xchg clc xor ficoml dec mov sar push cmovl xlat cmova ja,pt call add lods ljmp mov daa pop cwtl rorl inc jnp in and pop xchg iret or loope jbe out push pop (bad) outsb movsl fstl movsl fstl dec xchg stc xor out test fsts pop xchg lret add jne out pop mov and int aas ja cmp jecxz push mov sbb add mov aam inc jge add add sbb aad inc jle out daa pop xchg iret or rorl inc jnp in and mov push mov adc mov ficoml add mov aad inc xchg rorb jge out es xchg iret pop aas js call sub rorl inc jp ss loope push mov cli xor fistl cld outsl test sbb ret std outsl cmpsl loopne push lea pop xchg int ja,pt jmp add pop xchg into pop aas js aaa jno jecxz push (bad) add jae in movb jb in push mov add jb in xchg iret or mov es xchg rorb inc jp jmp (bad) mov ficoml dec test aas js ljmp ja idivl adc mov xlat adc mov cmp in push (bad) add jb in outsl lods out pop xchg lret je daa popa fwait dec xchg int3 cmp or in cmp add pop nop leave add sbb cli xor sub push mov insb xlat fisubl sub mov mov jne cmp fidivrl mov mov dec mov jae xor mov imul pop xor insl cmpsb or mov addl mov jle out sub rorl inc jnp in and cwtl sbb aad inc jg out daa pop cwtl rorb pop lcall sub aam inc jge out daa pop cwtl rorb inc jns ljmp repnz or daa jb cmp scas out pop nop leave add je in mov das push cmpl mov and aad outsl fistpl pop popf xlat adc ret fcoml dec mov adc (bad) adc divl imul in push (bad) sub test sbb (bad) fistl daa popa fwait aam inc or repnz fdivs jbe jmp pop inc jnp adc mov add add adc bound hlt sub dec xchg cli xor cmpsb fistp push mov (bad) mov sbb nop leave add rorl sub aam xchg jmp pusha cltd rorl inc jnp xchg cmp in pop xchg int3 add (bad) xlat adc rclb cwtl rorl cmpb cmp in pop ret ficompl push (bad) movl sbb pop xchg lret add imul out daa pusha lcall dec xchg dec stos divb imul outsb mov inc jnp out sub fcomps out pop xchg int imul jae push aas jns jmp je es sbb nop leave add and rorb inc jp out daa pop cwtl rorl inc jl pop lcall das push lods in outsl ret and push nop lret ja jmp fisubl js jmp pop xchg rorl inc cltd fcoms dec test lock mov aaa jno in push xchg arpl cmp scas call jno stc xor inc cmpl test out push mov aaa jno out pop xchg sub mov jae add je in jns push mov (bad) cmp das je out pop cmp cmp and jecxz push (bad) xor ficom dec lods call pop inc jns or adc mov pop cmpsl jmp repz dec xchg add xchg loope insb cmpsb loopne push mov (bad) cmp mov and mov addr16 dec xchg push xchg out lahf fcoml dec mov cld xor data16 leave and rorl jg repnz ss loop push (bad) xlat cmp iret or or xchg in mov ret cld xor gs fsts dec test and rorl inc jge lock clc xor ficomp push mov mov lret add ja add add outsb lret sub scas out pop xchg lret add mov sub fcoms dec test cli ss in push xchg jmp pop xchg rorb inc jge out xor pop movsb fistp push mov (bad) cmp in push nop leave add pop xchg int inc jns in daa js icebp sub xlat adc (bad) xor push inc jp in xor inc xchg rorl inc jle lock aad inc cmpb rorl inc (bad) mov add je out pop xchg in dec stos jmp imul pop iret dec xchg rorb inc jnp out es cwtl rorl fwait in pop xchg jmp sbb (bad) (bad) aaa nop lret ja jmp push lods jmp pop inc jns jmp int xchg std outsl test sbb (bad) std aaa mov cmp dec mov cld xor imul add ret daa (bad) rorl inc jle icebp sub and inc mov add xchg lret add jns pushf adc mov and movl push push xchg out push test lret jne addr16 sub mov mov cmp xchg rorb inc jnp out daa cmpl loop lahf fdivl add je out (bad) aaa mov (bad) aaa jo jecxz push mov add xlat pop pop xchg int3 add and fs xlat adc loope cwtl aam inc cmpb push in bound ret outsl test sbb sbb sub dec test (bad) cmp in pop fwait sti pop lods out pop xchg iret or mov xchg push stos in pop xchg into pop inc jnp out daa popa fwait sbb cmp pop xchg rorl popa sahf fcoms dec test push add xor push (bad) sbb and out daa popa lcall cmpsb fistp push nop in sub lahf fcoms dec cmpl push mov push sahf fsts dec xchg stc xor mov test push and call push mov sar outsb enter push inc cmpb enter cli xor push dec mov cmpsl loope push mov add jne jmp or fistpl je inc mov push fstl push mov js sbb repnz xchg or xor add xor push (bad) add jne call cmpsl loopne push mov (bad) cmp jecxz push (bad) add xlat adc mov fsts imul (bad) aaa jo loop push mov add jb in pop or movl sbb dec rcrl jae in push nop leave add je out jno jecxz push (bad) add jae in push nop enter lods out pop loop data16 fsts dec test fstl mov sar insb movsl ficom push mov cld dec mov cld outsl test sbb add or fnsave lods out pop xchg int3 add and push sahf fsts dec xchg (bad) movsb ficomp push mov (bad) cmp out pop xchg int3 push aas jns in es divps mov addr16 mov es cltd rorb jg repnz and aam inc cmpl ret jno in push out dec mov std outsl test enter pop push mov (bad) cmp jecxz push (bad) add jae out jp out daa pusha lcall sub lahf fcoms dec test dec (bad) mov fsts dec xchg mov add jae in pop xchg lret add ja jmp jnp out sub xlat adc mov fstl push mov std cmp aaa jb in pop xchg lret jbe jmp or mov sub (bad) cmovns movsl fbstp outsl test enter scas out pop xchg int3 push aas jns in es cltd inc xchg lret add and xchg rorb inc jnp pop test sbb xchg lret jbe call sbb lret ja ljmp jl out sub aad dec sbbl popf xlat adc mov fcompl push mov dec xchg int3 push aas jns and notb fild (bad) leave sbb ficoml sahf lods sub pop push mov cli xor push in cmp out pop xchg lret add aas jp in es cwtl rorb inc jge lock aad dec cmpl sbb add je out pop xchg lret add in push test fldt in dec movsl loope pusha mov mov in and dec cmpl or js sub mov (bad) cmp loop push mov std xor adc mov fsts xor fstpl ret adc cli xor cmpsl loope push (bad) movl and or mov repz mov rcrl mov add js jmp pop cltd rorl cs cmovp ficomp push mov (bad) aas mov push mov add je call or mov cli xor cmpsl loope stos call or mov mov cmp and int aas js in sub fcoml xor push xchg lret ja or (bad) mov fcoml ss jecxz push (bad) or push pop xchg lret jbe jmp insl cmpsl loope push (bad) movl and int push nop lret ja jmp pop cwtl rorl inc jle repnz fsts mov aam inc cmpl add and inc jle icebp sub sub aad dec cmpl sbb push (bad) add scas jmp lahf fsts dec test fistp push mov add jne call or mov sub out pop cltd rorl cs mov dec test imul ss inc cmpl mov std cmp in pop xchg lret add daa popa fwait aam inc cmpl cmp pop xchg iret or mov cmp in movl and fistp xchg int3 add and inc jle icebp sub fcoms popa fwait aam iret or mov sub aam inc cmpb cmpb adc adc cli xor cmpsl loopne push mov add je out pop xchg into or aas jns in es cltd rorb arpl loope push (bad) add xchg jmp pusha lcall (bad) sbb leave add loopne push (bad) movl and cvtps2pd mov sub adc (bad) adc outsl test lret js jmp pop cwtl rcll leave add scas call or xor test sbb add jb in pop xchg out pop xchg into or mov sub aad dec (bad) mov loopne fistl xor push nop leave add divb imul aaa jno in pop xchg in pop xchg int inc jnp out daa popa lcall sub dec into sbb add jae out pop xchg int3 add cltd rorl cwtl rorl dec xchg pop push mov (bad) cmp in pop xchg lret add ja in add fs xlat adc cmp add jae out pop scas or push mov jmp repz ret (bad) xor outsl fidivrl pop ret rcrl add jno hlt push mov inc mov dec mov lahf (bad) std pop test enter or sub out push mov adc loop cmpb sbb fldl and mov push daa jns adc cltd stc inc cltd repz mov es pop mov add pop imul push mov shrl (bad) in push scas out sub movsl clc ss adc mov cli xor fistp push hlt inc jge lock (bad) adc dec xchg fiadd mov sub aam inc adc dec test fistl arpl mov cmp pop xchg into or mov and mov and inc jl out sub cmc cs scas add loop push (bad) add scas jmp mov sar insb movsl ficom push mov jle icebp sub adc mov cli xor cmpsl jecxz push (bad) add cwtl ficomp push mov (bad) aaa jo call jnp out daa pusha cltd rorb inc jge out sub jmp imul xor insb movsl ficom push mov sti xor rorb inc jl out daa pusha cwtl rorl pop or nop leave add je out pop xchg lret add ja ljmp loopne push mov std xor outsl test sbb push (bad) add in pop xchg lret add ja jno divl push fcoml dec mov cli xor jne call pop inc jns ljmp and int aas jns jmp js push dec (bad) mov cmp jae out pop xchg int inc jns out sub fistp push mov (bad) cmp in pop mov and xchg rorl inc jge out sub mov dec xchg iret or mov sub aam inc cmpl movl push push xchg lret mov add jne call pop dec lods out sub rorl cmovns mov mov cmp in push nop lret jne call and xchg rorl inc jge lock mov inc (bad) movl pop push nop leave add jns hlt sub dec test fstl push mov cld ss sar outsl test push push nop leave add add add gs fcoms dec xchg cmp mov sar jo inc jle lock (bad) cmovns mov fistp push mov (bad) cmp in js add jb repnz inc mov lds jle xor out xchg lock cmpsl add mov xlat adc mov (bad) push inc jg icebp sub dec sbb sub mov mov rorb inc js call lds cmp jecxz push nop dec pop mov cmovs lahf fcoms dec cmp pop xchg iret or mov and inc jnp out daa insb in push test sbb (bad) (bad) outsb cmpsb fist inc rorl dec cmpl add lret scas out push (bad) (bad) insl movsl fstl cmpl mov es xchg rorb inc jp fisubrl aad inc jle out daa pop push sbb imulb push cmpsl loopne push mov cli xor fistl test outsl scas js add js jmp popa fwait aad call int3 push inc jns in daa popa lcall pop xchg rorb inc jge icebp jae or mov daa popa lcall sub mov ret outsl test cs mov sti xor jne call and jns in and adc dec xchg cli xor cmpsl loopne push aad bound mov ficoml insb test lret ja jmp lods call push aas js cmpsl pop push fistp push mov add jae out scas add add jmp pop cwtl rorb inc jle icebp sub cmpsb loopne push (bad) (bad) sbb clc xor fstpl push mov pop movsl fistp push mov (bad) cmp in pop xchg lret add int push mov (bad) aaa jno in pop xchg lret add (bad) movl and iret ss rorl inc jle icebp sub and in es cltd rorl sub lahf inc mov (bad) cmp out pop xchg int3 add inc jge repz add add mov xlat pop mov in es cltd rorb arpl push push xchg lret jne call and cwtl rorl inc jle or out pop xchg into or mov mov aam inc cmpb adc mov sub xlat adc mov hlt cs mov and repnz addr16 dec cmc inc jl out sub aam inc cmpb jne call or icebp sub adc (bad) cmovns mov sbb (bad) je call xchg int3 push aas stos or out sub adc mov pop inc jnp out sub aad mov add je out pop int push mov (bad) cmp in pop xchg int3 push inc test fcoml push mov std aaa jo in pop int3 pop jne dec dec mov jnp fs aas lahf add cmp push mov sbb inc mov int gs inc mov (bad) cmp sub ficoml mov cld ss push int cltd aam dec (bad) mov sbb outsl test lret out test and popf add or xor sbb hlt dec xchg into or mov sub inc mov jle or sbb and out jns,pt fnsave jb cmp sub cmc dec scas adc ret outsl test dec test jp out sub xlat adc movsb and push (bad) movl fsts outsl test mov inc jge icebp inc mov (bad) cmp in push xchg and scas jmp or mov sub fbld jmp pop cwtl rorl inc jge icebp sub xor ficomp push mov (bad) push push pop xchg rorb push jmp or mov sub (bad) adc xor loopne push (bad) movb jb in jno in pop xchg lret add sahf fsts mov cld ss aaa (bad) mov fstl push mov std aaa jo jecxz (bad) pop pop xchg into pop inc jnp out sub aam addr16 push mov add adc or icebp sub sub ficoml dec xchg sti xor fwait in pop xchg int3 push aas jns in daa pusha lcall dec xchg std aaa jno repz mov push mov add adc mov std aaa jno in pop xchg lret add movl and or mov add xor xor scas call push mov ljmp cmpl sub dec mov (bad) cmp cld cmp ljmp leave daa push xchg pop mov repz dec xchg inc xchg int inc jl out sub (bad) adc mov add je out mov repnz lahf fcoms dec test (bad) adc mov fistl xchg cli xor loopne push mov (bad) cmp add mov daa popa fwait aad test sub fistl push push lock adc mov fcoml dec pushf sub out pop xchg int inc jns or mov fiaddl jecxz insl cmpsb loopne push mov (bad) aaa jno inc cmpb dec lods or fwait push addr16 outsb fistpll mov push sub movsl or fsts dec test inc mov add xchg into or adc mov fistp push mov (bad) cmp in pop xchg int3 add jnp out sub aad dec cmpl loope pop mov jno in push (bad) add mov mov sbb cmp stc pop adc scas pop outsl flds lret jecxz mov inc mov bound jnp divb imul loop push mov add sub aam inc or std dec test or add jae call or sub in es cltd rorb int popf add sti xor fldt mov push fstl push mov std xor fiaddl lret push inc jp out sub aad cmp adc sar insl cmpsb fbstp dec mov add cmp mov and dec sbb into sub sbb ret cld outsl test and out daa popa lcall sub (bad) mov fcoml push mov or ss push aas js ljmp ja idiv jbe repz push inc jg or sbb sti xor push mov and xor fstl push mov cld inc mov js,pt jmp pop cwtl rorb inc (bad) lock mov stc xor loopne push stos pxor leave add cli push lahf std pop mov pusha enter int mov sti xor stos or aaa jg cmc das imul ljmp arpl (bad) add push jns or jecxz push (bad) and or jg repz mov fstl jbe aas mov insb movsl fistp push mov inc lods adc loopne push mov decl jp pop inc jp in es repz dec (bad) mov cmpl pusha ret xor sbb cmp push insb mov imul lods add rorb pusha les xchg fisubr loope push cmpsb or pop xchg rorl inc jle icebp sub and data16 lods adc dec mov jae cmp pop xchg rorl inc jle icebp sub out pop xchg rorb inc jge lock mov adc mov fistp push mov add js add daa bound divl push fstl push mov shlb pop xchg rorb inc jge icebp sub ret (bad) mov fistl xchg sti xor jae out and int inc jp in daa pusha lcall cmpb adc rorl fs xlat adc mov divl imul cmp in pop xchg lret add (bad) adc mov fcoml dec mov mov in and inc jg repnz mov fcoml push mov std aaa jno in pop xchg lret add ja ret push dec cmpl iret push lcall addr16 push scas ljmp jg repnz lahf fcoms dec test mov cmp call or lds dec mov cld mov dec cmpsl loop push mov add je out pop xchg int3 push aas jns jmp pop xchg rorl (bad) mov fcoml (bad) cmp and into pop inc jp in sub icebp sub fcoms dec xchg stc xor loopne push (bad) movl cmc xor fcoml dec mov cld xor out pop xchg int3 add and xchg rorl inc pushf xlat adc mov fistp push mov (bad) cmp out pop mov cmp scas jmp or outsl test leave add scas jmp or mov sub (bad) adc mov fistp push (bad) movl lret js jmp pop cwtl rorl inc jge jnp (bad) cmp in pop xchg lret add ja ljmp cltd rorb cmpb adc ret cld ss pop stos in pop xchg int3 add es cltd pop movsl fistp push (bad) movb jae out pop xchg int3 pop inc xchg rorl inc cmpb adc ret outsb test sbb (bad) add scas jmp pop inc jp push (bad) add xchg into pop inc jp out sub ljmp cmpl sar outsl stos dec lcall das imul sbb (bad) (bad) cmp in push nop int3 pop inc add mov and inc jg repnz lahf fcoms dec cltd pop movsl fistp push mov (bad) cmp in pop xchg js,pn jmp pop cltd rorl cmpl fstl push mov (bad) aaa jno in pop xchg int3 push inc jns in es fwait pshufw add and mov in test pop inc jbe sub jmp cmp cltd std pusha ret repnz mov outsb mov sub divl push fstl push mov add je out pop xchg push push (bad) add jbe insl add sbb cmc cs fcoms dec addl and inc jp jmp pop cwtl rorl inc jnp in and icebp sub rorl jge in es xor push mov std outsb cmpsl fistp push mov sbb (bad) cmp in push mov (bad) cmp jecxz push mov add jb pop xchg iret or mov and xchg into pop dec aam push nop enter lods in push pop add jb or cmpb adc mov ficoml dec xchg arpl mov (bad) cmovns sbb movl pop pop xchg lret je or mov sub aad inc cmpb cmovs sahf fsubs ljmp js jmp pop mov into pop aas js ljmp cmpsl loopne push mov std add jecxz push mov pushl jo loop push mov pop mov sar insb movsl fstl dec xchg or mov (bad) cmova mov fistl dec test ficoml dec test push popf xlat adc mov (bad) cmova or jge out es xchg rorb inc jp or mov and add and lret add je in push mov jae in push (bad) add jno loop push mov pop mov mov fcoms dec pushf fcoms dec cmpl adc mov fcoms dec (bad) mov pop cltd rorb inc jge out daa pusha cltd rorb inc jle inc jg icebp sub aam inc jle out sub or jg repnz aam inc jle out sub rorl popa jecxz cmpl xchg jae in push nop leave add lods out pop mov daa pusha cltd rorb inc jl out daa pusha cltd rorb inc jge out daa pusha cwtl rorl dec repz pop xchg int3 add sub stos in push mov (bad) aaa outsl test sbb ljmp jp in and inc jp in and xchg iret or push mov cld xor push mov (bad) aaa mov in es xchg rorb inc jnp in es mov sub aad dec cmpl enter add push (bad) add jbe out pop xchg adc push cltd aam inc jge repz fcoms dec cmpsl loopne push mov cld xor cmpsb ficom dec mov stc xor fcoml xor adc imulb push (bad) mov inc jns jmp add and call int ja,pt jmp add jbe jmp add mov and (bad) xor dec cwtl hlt push scas or repnz jmp test cmc dec mov mov jp fimull popf std pop mov sbb dec mov test (bad) enter ja inc scas (bad) inc cmpsl push test push mov dec test inc jge out daa pop cwtl rorb inc jp ljmp je in enter mov fcoml xor push dec cmpl mov add jae in push pop add jb jecxz push mov (bad) cmp loop rcrl cmp push pop xchg lret enter mov fsts dec cmpl outsl test sbb (bad) outsl test sbb (bad) cmp jecxz mulps scas call add pop xchg int inc repnz out pop xchg lret je out (bad) mov fsts dec test adc mov (bad) psrlw push (bad) lds cmp jecxz push mov adc mov fcoms dec (bad) mov cli xor outsl test sbb ret cld xor cmpsb ficomp push mov cld xor ret or mov sub rorl inc jge out das cmpsb in daa pusha cltd rorl inc jl out daa pusha cwtl rorl movsl adc mov add jb in push mov (bad) cmp in push pop add and inc jnp in and xchg into pop nop fsts dec test (bad) cmova lock mov sar imul cli xor fcompl mov in es xchg rorl inc jnp in es adc xchg fsts dec cmpl inc jg icebp sub aam inc jle lock rorl inc jle out sub and lret jae in mov in push xchg lret add jne out jl out sub rorb inc jge out daa pusha cltd rorb inc jge out sub rcll lods imulb add fcoml xor fsts (bad) fsts dec test xlat cmovs ret cld xor cmpsb ficom dec mov stc xor fcoml das addr16 (bad) adc mov fsts dec (bad) mov xor dec xchg fsts insb cmpsb fistp push mov sti xor push dec mov stc xor fstl dec mov add mov (bad) cmova icebp sub sub rorl pusha cwtl rorl gs xlat adc mov fcoms dec cmpl dec test pop xchg lret add jne out pop nop leave add mov and inc jns ljmp mov and rorb inc jp in and inc jp cli mov adc mov fsts dec cmpl lods in push nop add add jne add ljmp test mov jae aaa js jmp jns push lahf ficoml imul int aas js ljmp jnp in and lret add and int ja,pt inc mov pushl jo loop push mov (bad) aaa outsl test cmp mov and or mov daa pusha cltd rorb inc jge out daa pusha cwtl (bad) jb imulb push test aaa jg repnz aam inc jg lock sarl js in and inc jp in and xchg iret pop inc js jmp pop xchg into outsb mov aad inc jg lock ds cli xor push dec xchg cli xor fnstsw jae out pop xchg lret jne out pop xchg leave add je out pop xchg lret icebp sub aad inc subb push mov push dec xchg (bad) (bad) cmp cli xchg stc js,pt in and inc jp in and cmc inc jg icebp mov outsl test sbb ret sti xor sbb xchg lret jae call add jae in cmpb adc mov xlat adc mov xlat arpl int3 add ja jmp xor test sbb (bad) std outsb test sbb les push xchg lret jbe jmp push inc jns jmp pop xchg rorb inc jl out sub dec mov cld xor push mov (bad) aaa jo inc mov std outsl test sbb lds pop xchg int aas js jmp add and int3 add and xor fcoml cmp jecxz je mov jnp and int3 xchg and int3 add push push mov pushl outsl test sbb ret mov fcoml dec mov sti xor movsl ficom push mov cli test or mov daa pusha cltd rorl inc jl or mov fistl insb movsl ficomp push mov cld xor aad dec (bad) mov fcoms dec cmpl lods out pop xchg lret jne add (bad) aas jns jmp pop xchg rorb inc jp in and inc jnp in es cltd shrb daa popa lcall sub insb mov sub aam inc jg icebp sub (bad) xor fstl dec mov cli xor movsl fistp push mov cld xor cmpsb fist push mov jno cmc addr16 dec test fcompl loopne push mov (bad) aaa jo loop push mov and inc jge out sub aad inc cmpl mov jge out daa pusha cltd rorb inc jl lock aad inc cmpb fsts dec test (bad) cmp jecxz push (bad) add jae in push nop leave add cmp and int3 add jbe call jle lock aam inc jle adc sar insb movsl ficom push mov cld xor push mov std ss dec lods out pop xchg lret add jbe call pushf sti loopne and mov mov aam xchg hlt push cwtl idivl int lods sbb lods add pop cwtl rorl inc jle cmc cld jge daa mov negb daa (bad) mull xor lods out pop xchg into or mov mov hlt cs aad dec xchg cli xor cmp mov and xchg rorl inc jge lock (bad) adc mov lock push mov (bad) cmp out rorb jg repnz sahf fcoms dec test dec test ficomp push mov add je out pop xchg int inc jns or repz mov sar les dec test ficomp push mov (bad) cmp pop push mov (bad) cmp in pop xchg int3 push aas jns in es cwtl rorb dec cmpl sbb movb adc mov sti xor push (bad) movl jge out sub aad dec cmpl ret std outsl test cmp out pop xchg into pop inc jnp mov add xchg into pop inc jp daa outsl add stos in push (bad) add xchg iret or mov sub aad inc cmpl das push imulb push xchg push add push mov cld xor push mov std ss loop push mov (bad) cmp cli xor cmpsb loopne push mov (bad) cmp cltd in pop xchg lret je shlb gs xlat adc mov sbb movl pop pop xchg lret jbe jmp pop inc mov cmp and lret jne call es cwtl rorl inc jl outsl test (bad) jo loop push mov (bad) cmp inc xchg outsb test sbb (bad) std outsl test sbb mov bound dec test stc xor fcoml das push cmpl daa jae out pop xchg int ja,pt out pop xchg sbb aad inc cmpb or jge adc mov cli xor pop push mov cli xor fstl dec mov stc xor add rorb inc jp in and inc jp daa bound mov sub rorl inc jge adc mov fcoms dec (bad) mov ficoml dec test dec (bad) mov fcoms dec cmpl jns in and inc jns jmp pop scas jmp pop xchg rorb inc jl out daa pusha cltd rorb inc jge out daa pusha cltd rorb inc jge dec xchg stc xor fstl dec mov cli xor cmp in push (bad) add jb jecxz push cmpsl in pop xchg lret je out push nop leave add je out pop nop fidivl cltd jmp and cld pop fidivrl mov adc addr16 stos pop jl jno in js call dec mov clc xor fcoms dec cmpb or mov and outsb test sbb (bad) std cmp jecxz push mov imul movsb fcoml pop xchg lret add jne out pop xchg lret jbe call add jne arpl icebp sub rorl mov and xchg int aas ja jmp inc jnp in es xchg rorb inc jp jmp pop xchg into or mov and push mov cld xor cmpsb ficom dec mov stc xor das imul lahf fcoms dec cmpsl loop push (bad) (bad) jo loope push (bad) (bad) outsl test sbb sar imul mov cli xor fistl (bad) add rorl inc jl out es cwtl rorl inc sahf ficoml dec xchg fistl test pop xchg int dec in push xchg stc xor fcoml xchg rorl inc jge out daa pusha cwtl aam inc mov ret insb movsl fist push mov cli xor pop push mov sti xor push mov std outsb cmpsl fistp push mov cli xor xchg stc xor cmpsb fistp push mov sti xor (bad) (bad) cmp jecxz push mov (bad) aaa jae sbb cmp jecxz push adc cltd rorb popa lcall cltd rorb inc jge out daa pop cwtl rorl inc mov sub aad inc jg icebp sub aad inc cmpb push dec push push mov std aaa jo in push nop enter adc int aas ja jmp add inc cmpb push inc jg mov xlat adc stc push call xor ficoml dec test pop inc js jmp add jno loop push mov cli xor ficoml dec add sar outsl cmpsl loopne push mov cld xor lret add jbe call add rorb inc jge out sub rorb inc jge out daa pusha cltd rorb inc jge icebp aas cmc js,pt jmp pop xchg iret pop inc jns jmp pop clc inc jp in and inc jp jmp cmpl adc xchg fcoml xor pop push sbb rorl popa lcall lret jbe call add add inc jle lock xlat adc mov fsts dec test imul xor sbb ss jecxz push mov add add and jnp cmp jns movsl and jg add jbe push push nop leave add sbb ret insb movsl fstl dec mov stc xor fildll ret mov and xchg int3 add je in xchg clc ja,pt call add jae jecxz push (bad) add or mov and lret jne out push nop enter popf xlat cmovs sahf xlat and xlat adc mov xlat adc mov (bad) cmp out pop xchg int3 push aas js ljmp cmp ficoml dec test mov xlat adc mov aam mov mov fistl imul jno jecxz push mov (bad) cmp loop ss jecxz push (bad) (bad) outsb cmpsl fistp push xchg lret add xchg int aas js ljmp js jmp sbb or mov and xchg into pop ja push pop xchg lret ja jmp add jbe call sub sahf fidivr repnz push xlat cmp fstl push mov sti xor movsl ficom add fcoml imul pop xchg lret je in push mov add jno jecxz inc jg icebp sub rorl sbb rorl arpl mov inc jg repnz xlat adc mov (bad) cmovs jbe call add jae out hlt cmp in push mov (bad) cmp in push pop sbb leave add jb jecxz push (bad) (bad) outsl cmpsl fistp push mov or cltd rorl inc jnp out sub (bad) mov push (bad) add je out push nop leave add jne out js ljmp jp add in and inc jl call icebp sub rorl jl cld pop mov ljmp ja jmp sub aad inc jge out es xchg iret pop aas js call lret movsl ficom push mov sti xor push mov jecxz push (bad) (bad) (bad) cmp jecxz push (bad) (bad) and iret pop inc js jmp pop inc jns ljmp gs fcoms dec cmpl sti inc jnp in and aas ja call and cwtl rorb inc jp in es xchg repz mov mov es fistp push mov (bad) aaa jo cld mov out daa popa lcall dec cmpl mov fsts dec cmpl mov mov (bad) mov ficoml dec xchg fidiv jo loop push (bad) leave add je in push nop leave add jae sti pop roll jp in and mov jge inc mov xchg inc cmpsb xor sbb jg add jb pop ljmp xchg clc xor inc les inc cmpb adc rcrb lret jbe call push jp,pt in and stc inc jle lock aad inc cmpb lock aad inc cmpb das imul movsl ficom push mov sti xor cmpsb movsl or addr16 dec test push ret pop inc jnp in and xchg into push ja,pt call and pop xchg iret or mov daa pop cwtl rorb inc jl out daa pusha cltd call imul cmpsb (bad) repz push fcoml xor pop push mov sbb enter lods in push (bad) add je out pop xchg loope mov xor cmpsb ficom push mov cli xor in sub (bad) cmova mov mov imull imul mov shlb xor add sbb ret imul rorb daa pusha cwtl rorl inc jnp or mov and inc jns jmp pop xchg into pop aas js imul jp in and xchg iret or enter or out sub rorb inc jge out daa pusha cltd stc xor push mov sti xor movsl ficom push mov cli xor push fildll arpl mov mov cmp out pop xchg int3 add and das push cmpl adc mov nop hlt xor sbb ret cld xor mov ja clc xor ficom push lcall cltd repnz popf (bad) cmovs fwait rorl pusha mov mov mov adc imul sti xor add je add nop enter stos loop push nop leave add jae xchg divl imul xor adc mov fistp push mov (bad) aaa jo jecxz push xchg in daa pusha lcall addr16 dec xchg cli xor in sub aad inc cmpb jno repnz fcoms dec test fstl dec mov and rorb inc jl out sub fs xlat adc mov xchg and xchg iret or mov and test and xchg int stc les out dec mov jg fbld popa lods jmp add jne lds cmp in jnp in and aas ja sbb sar push ficoml dec test aad inc jle in sub rorl pusha scas adc cmc addr16 dec cmpl dec test sbb add jae out mov push mov rorl int inc jp in and inc jg sbb ret sti xor cmpsb fist push mov cli add push mov dec cmpl dec test cmp pop xchg int3 add jbe call add pop stos jmp pop inc jp in and inc jl out daa pusha popf dec xchg int aas js jmp add jbe cmp lahf xlat adc mov (bad) adc xlat adc mov fistl xor pop push xchg cmp insb movsl ficom dec mov cli xor fs xlat adc mov fsts dec cmpl mov fstl dec mov cli xor sbb jns,pn mov sub rorl arpl sub aam inc jg repnz adc aam inc cmpb cmovs lahf fcoms dec mov sti xor cmpsb fistp push mov std outsb cmpsl loopne add (bad) cmp and mov ficoml dec cltd (bad) pop cwtl (bad) cmovs fwait rorl jge in and aas ja call add jne out push pop pushl jo loopne push mov push (bad) add jae std ss push mov (bad) aaa jo jecxz push mov (bad) cmp cs xchg insl cmpsl loope push mov (bad) cmp jecxz push mov add jae (bad) cmp in push (bad) add je out pop xchg int3 pop inc jnp insb cmpsb loopne push mov std ss loop push mov dec test fcoml xor repnz cmovs mov mov leave adc mov fistl fistp push mov std outsl test sbb (bad) std ss cld xor cmpsl add push push nop leave add je in pop xchg lret jne fs xlat cmovs sahf xlat cmovs lock aam inc cmpb adc xlat adc mov fcoms dec (bad) mov fcoms dec adcl xchg rorb inc jnp in es xchg rorb inc jp cmp in push (bad) movl sbb (bad) (bad) (bad) cmp stos in push pop add jb in sbb and popf aad test sub dec test fistl enter stos jecxz push mov (bad) aaa (bad) add je in push mov (bad) cmp add sbb mov pushl jo push mov std outsb cmpsl fistp push mov cld xor jecxz gs xlat adc mov aad inc jg lock and push aas ja call add add mov mov mov push push nop enter stos loop push mov cld xor movsl fstl dec sahf xlat adc mov aam inc jge lock aam inc or (bad) outsl cmpsl loopne push mov cli xor addr16 dec (bad) (bad) xor add popa enter dec cmpsl add mov cmp in push nop leave add mov xor fcoml dec mov sti xor cmpsl loopne push mov add cltd ficomp xor jmp add jbe out repz push inc jns ljmp mov push fstl dec xchg aaa xchg repz adc mov dec test arpl pop sbb add sbb scas adc int3 sub aam (bad) icebp push mov imul jle dec dec ret and pop ret jecxz fwait (bad) pop mov shrl notb push mov pop mov jae inc aas mov nop ljmp xor push mov insl leave and ss in dec in fiadd sbb lock enter push mov jp cmp cmp cld pop mov xchg repnz out and test rcrl stos cmc xor fsts dec cmpl scas out push pop add jo loopne pop xchg lret add je in lret push cltd rorl sub rorl stc cmpl adc test pop inc js jmp add je in push mov pushl outsl test xor push mov mov aad lock nop leave add jae out pop xchg lret popf xlat push outsb lods out push nop enter stos jecxz push lea add (bad) aaa outsl test sub jmp add fild mov xlat adc mov sbb (bad) jno jecxz push mov add jb in push (bad) add jno in push pop pushl jo loopne xchg stc js,pt ljmp in es std xor push mov cli xor fcoml xor fldt mov inc jnp in daa pusha cwtl rorb cmpsl xor js jmp pop xchg into pop inc jns jmp mov add jae in push mov add jo loop push mov std outsb cmpsl fildll adc xchg fldenv xchg xor cmpsl loopne push mov (bad) aaa jo loop cmpb adc mov and std pop xchg rcll dec mov movsl pop pop cwtl rorl inc jl in es cwtl rorl push ficom dec xchg fsts dec cmpl dec cmpb negb pop int (bad) out dec stos or es les jg adc test pop addr16 and lret sub or sub test test jnp ds std pusha mov (bad) out dec test mov pop mov xchg pop aad popf std pop mov fidivl xchg clc pop mov movsl pop bound mov push mov lds xchg repz scas push cmpsl or and or sub sub scas adc and cmp ret push insl int (bad) in dec stos or pop shlb enter inc popf sti mov push mov ja xor lock scas or enterw inc cmpsb popf sbb ds std pop mov mov notb adc ficompl sbb xor stos jecxz push nop decb mov ficoml dec test pop pop xchg leave add je in push nop leave add je out pop xchg iret xchg add jmp pop xchg rorb inc jl out daa pusha sti ss movsb fistl dec jle in and (bad) (bad) pop add add movsl fcoml dec (bad) mov int3 add jo fstl (bad) mov mov push mov loop (bad) xor pushf (bad) popa les (bad) out push scas (bad) cmp in jle ds jl cmp and xchg cmc push mov test dec lcall out sahf sub fsts dec xchg gs mov lahf sub hlt push mov jl cmp clc inc jnp in aaa pushf add cs add je or rcrl jo sub mov dec mov jb sub das xchg hlt pop mov sbb pushf add sub pop mov fdivrs lcall inc cmpsb add inc mov jae xor add and cmp out cmpsb or sbb or daa cmc (bad) and out popa mov test mov bound fisub (bad) cmc pop mov jl inc xchg arpl sbbl add push mov mov mov xchg popf adc aam xchg notb pop mov jl jl,pn push data16 nop in test dec lods or aas lods adc mov ret add out inc popf das xchg cli data16 mov test data16 xor xchg hlt dec lcall mov repz mov and and (bad) pop mov push xchg inc mov negl sub cld pusha ret and or enter ret fistpll std pop mov xchg add cmp jnp push mov mov push ret ret daa mov sub cmpsb fistp push cmc inc jp in and inc jp in and outsl test sbb pop imul mov es movsl push inc mov movl mov add sbb lcall mov push mov push mov cmp movsb dec (bad) dec mov js dec cmc add popa lret add cmp add xor pop loop mov cs ja scas add (bad) push cmpsl stc dec cmpsb sub and shll jp and lds pusha mov (bad) cmp xor jecxz xchg in inc lahf stc pop mov jae js inc lcall fisubr fadd jg,pn sub adc push cmpsl clc inc xchg fbstp jg sub or xchg rorb inc jnp in daa pusha cltd rorb inc cmpb test stc xor push dec mov stc xor sub call add jne out push nop icebp sub push inc cmpb cmovs popf (bad) cmovs push mov ljmp lret inc roll push jno cmp jbe dec mov lods sbb in dec test lock test mov cld pop mov sbb cmp imul icebp push loopne xchg out dec cmpsb lcall jb mov inc mov ret sbb (bad) sub out jecxz cmp jg cmp jle xor cmc dec or xor es sub and (bad) sub and mov mov inc pushf (bad) dec int3 sub aaa cwtl clc push in add lahf fistl cwtl call jmp (bad) xor aaa mov (bad) notb aaa cltd (bad) dec cmpsb add xor cmc dec loopne and dec mov or daa xchg dec cld pusha mov jge inc mov adc xchg hlt push or mov frndint mov jbe inc movsb add hlt test mov dec stos popa fmuls add xor fcoml jge outsb adc sahf add or out mov mov mov jne xor xor or or je or leave or adc and test rorb inc jp jmp jnp in and inc jp add add and (bad) aaa jl out sub cmp je ss std stos divl push add daa pusha movsb sti popa (bad) insl loopne lret cli cmp stc push xchg int fldenv popa cltd out push mov inc jle out daa pop xchg jmp cmpsl in pop xchg lret je in jp in and xchg into pop inc js ljmp jmp cmc inc jl and jmp xchg into or sub stc pop stos out pop xchg leave add jne out (bad) mov aad inc jg out sub in daa jmp jbe cmp and push cmpsb loope push mov cld xor jl in and inc js call jb jecxz and add and (bad) cmp push push jbe divl push fcoml push mov (bad) outsl cmpsl loopne push mov sti inc mov stc into inc jp sub add inc jnp xor scas call and (bad) call add adc (bad) adc sub push xor sub dec test inc xchg rorb inc jnp in and bound mov es lcall xchg iret or pushf clc pop mov call jge cmc sub dec cmpl outsl jns dec lahf lock cwtl jmp cmp aas lcall jle xor mov mov popa (bad) es std push into sub push mov jmp (bad) aaa jns jmp pop xchg shrb addr16 dec cmpl ja sub out sbb bound mov dec cmpl mov push mov add pop imul gs cmp es pop mov ds mov jg xchg add cmp jmp (bad) (bad) aaa jno jecxz push mov fs and sub loop jecxz test and enter test push push xchg lret je and lcall dec addb add mov repnz mov sbb mov pop mov jo repz popf (bad) cmovs add je and ljmp cltd rorb inc jge xor pop inc jns jmp loopne jecxz mov mov dec test inc jg lock cmpb or leave sub (bad) aaa outsl cmpsl loopne mov xor adc js mov daa pop cwtl rorl inc jge cmp jg repnz push inc xchg cld imul movsl loope xchg iret or mov and mov jno jecxz push (bad) (bad) jno xor jo jecxz push (bad) add je and in jg repnz inc xchg out push mov mov push push adc mov pop xchg iret or rorl inc jl out daa pusha cmpsb or je call dec mov and lret jae inc mov add jno in ret repz mov add push test push mov inc add mov xor out push nop into aas mov cld xor dec mov push mov pushl jo loope push xchg cmc push mov pusha lcall cmpsl or in push nop leave add jae sbb xlat cmovs cmpl lahf fsubrs data16 mov sbb fnsave js jmp pop xchg iret sub cmpsb ficom dec xchg stos jb dec cmpsb add rolb lds jns cs cmp cmc arpl sub loop test adc xor repnz mov data16 xor fldl adc cltd rorl dec lods adc jmp pop xchg iret or fs pop pop cwtl rorl pusha (bad) sub mov jle repz and dec mov push mov (bad) cmp add lret iret or mov pop rorb mov mov push mov sub push mov inc test dec test les (bad) out dec mov sti xor icebp push mov repz (bad) ss repz mov add es push pop xchg out mov popa pushf (bad) adc mov push mov sub mov test pop inc jp out sub xor test gs int3 and push inc jnp out inc movsb pop push mov test or sbb fcompl push (bad) and imulb push scas sbb in pop xchg int3 adc cmp popf xlat xor inc jnp inc scas adc aad dec lods adc fstl push mov and cli xor xor inc jp in inc scas push (bad) (bad) pop push stos setno mov mov inc movsl pop addr16 das xchg stc popa les add ret push jl cmp pop test inc xchg loop xchg xor sbb adc test sub sbb mov push movsb cmc inc xchg call jge pop jo adc push pop mov push movsl divb jp sbb and (bad) sbb or dec pushf in ds cs fsubrs jnp sbb mov jle and adc mov push cmpsl testl sub sbb mov add clc dec cltd repz lcall xchg sub aad mov das adc xchg sub ss sub fldcw sbb push addr16 cwtl or inc mov mov icebp xor pop addb outsl test sbb repz mov aam dec test sub daa arpl ja,pt call scas call add cmpb adc sub in push nop leave add mov test sbb in push nop leave add jbe aaa (bad) enter lods out imul (bad) (bad) pushl jo loope addr16 imul std ss add xor ficoml dec test adc mov sbb lods adc fstl push mov cli xor push xchg int3 add and jmp pop aas js or sub and fistl movsl or ficoml pop call dec test sub mov cs insl movsl ficom push movsl push add mov sub aas ja call push push mov lcall addr16 dec popf fcoml xor xor addr16 pop mov jnp out es xchg rorb push repnz nop leave add lods out cltd fistl xor sti cmp add lret add dec push and es xchg rorb inc jmp movsl fist push mov stc push scas in es lcall dec cmpl pusha ret aaa divl xor fstl xor push xchg rorl jl cld xor movsl ficom dec test pop pop nop leave add mov dec mov (bad) cmp loop xlat pop ret data16 mov inc jg icebp sub aad jle sti xor cmpsb fistp push scas jmp add mov pushl outsl test sbb cmp add clc xor fsts and aam inc jle lock lcall sub jmp pop xchg int3 sbb aam jle repnz lahf fcoms ret add mov (bad) adc add push mov sub rorl inc mov mov dec (bad) add out sbb popf add aad inc jg lock sar imul outsb cmpsl loopne push lods out pop xchg leave add xchg repz mov (bad) aaa outsl cmpsl fbstp mov jnp in and movsb push pop xchg lret jae in (bad) add jb loop push cmpsl loopne push mov stc xor cli xor xor jbe call or add cmpsb or rcrl adc cmp (bad) cmp jecxz xchg clc js,pt xor data16 fistl dec test mov (bad) cmp jecxz mov jg lock shll xchg sub dec test fcoms dec test (bad) cmp jecxz jb xor pop xchg lret adc (bad) jmp adc call aaa jno loop push (bad) (bad) (bad) cmp jecxz mov inc jnp in daa jg cmp mov and mov in push (bad) add xchg cmp inc jnp in es xchg rolb or jge out daa cmpl adc in inc jle lock aam inc jge xchg or ret insb movsl ficom dec mov cli aas adc adc mov add jae out jl jg,pt repnz adc jl inc cmpl mov mov aaa jo loop push (bad) (bad) (bad) cmp in jp out sub notl sbb inc mov push mov adc mov sbb dec xchg clc xor fistl xchg stc xor fsubl jg cmp out push mov add sbb sahf xlat adc mov ficoml dec test fsts dec test fistl lods in push nop leave add sbb dec cmpl das push test insb cmpsl loopne push mov cld add jno loop push (bad) (bad) call enter lods in pushf cld js,pt ljmp jl rclb xor pop push add mov cld xor push mov std ss loope jae out pop xchg lret push outsl rcrl pop xchg into pop aas js call sbb mov std xor dec add ret insb movsb fstl xor push outsb cmpsl loope push mov add ret sbb inc jns jmp and fcoms dec cmpl sar push fistl dec test (bad) movsl fstl dec xchg add dec add mov or jle out movb add and lret js ljmp fwait shll ljmp cmpl add and int add pop pop xchg lret add jne out push nop enter stos pop mov sub shlb fsts dec test fcoms addr16 xlat adc mov xor fcoml xor fcoml dec xchg or adc xor fistp push mov mov pop les (bad) outsl cmpsl loopne or pop stos cld cmp add adc cs or inc and dec mov xchg fs aaa lcall test xor (bad) clc pop cmp jp pop insl mov arpl leave sbb push pop lods cld (bad) mov arpl inc mov mov mov push mov inc lahf std dec popf ljmp mov (bad) xor jmp jp sub das xchg repz mov leave xor or out stc popa lret aas stos mov mov push sub dec mov lds xchg add or out inc movsl add data16 negb lods sbb sub jne sub mov imul jbe sbb or lret in cmpsb xor inc xchg pushf adc lock mov lcall stos push mov dec mov mov sub movl inc xchg mul popa int3 sub (bad) jmp stos or dec movsb cld cmp sbb loop inc mov sbb pushf cli push mov ja imul fdivs or mov mov dec cmpsl pop rcrl aad lcall and and outsb jns jbe sub jg sub out push mov sbb push addr16 and add addl cmpsb fistp push (bad) movl or leave add xchg int3 push aas js jmp pop xchg rorb inc jnp adc mov fisub xorl in es lcall fldenv inc jg repnz fcoms dec test fcompl push (bad) (bad) sbb jb,pn push mov push iret xor mov aaa pushf cld bound inc movsl or sub nop out dec stos or cs inc stos xor insl jbe dec mov fstpt push pop xchg int inc jns in es cltd rorl cmpb cmp ljmp jl mov daa pusha lcall sub lahf ficompl rorb inc jl out daa popa lcall sub lahf fsts dec xchg adc sar aaa jo in push xchg push mov ret outsb cmpsl loopne push mov xchg ficomp push mov std aaa jo jecxz push (bad) add jne ljmp jl or repnz lahf fsts dec mov (bad) cmovns mov rorl repz sahf fcoms dec test push mov add jae std aaa jo in push xchg lret add xchg rorb bound mov jae in push xchg int3 add sub aad inc cmpb sub mov rorb mov sar imul std ss adc cli xor cmpsb loopne push mov (bad) cmp add jne call or cmp ret std aaa jo in pop xchg lret add js lock ljmp jl mov xlat adc mov divb push ficomp push mov (bad) cmp mov daa pusha fwait aam inc jg hlt sub add scas call pop inc jns in es cwtl rorb inc jle icebp sub sub adc mov jg hlt sub add add dec xchg stc xor mov cmp in push nop leave add xchg int inc jns in es lods in and inc cmpb mov fistp push mov (bad) cmp in divb push fstl push mov sti xor push (bad) movl cmp loop aaa mov std ss jecxz push (bad) add je jmp add jne call pop inc jp in es cltd rorb arpl and into or mov sub scas jmp or icebp add push ss jecxz push nop lret ja jmp pop cwtl rorb jg hlt cs jno in push xchg lret and loop push nop leave add pop mov js jmp pop cwtl rorb inc jle icebp inc (bad) fisubr ja adc xor out pop xchg into or insl test sbb (bad) add pop pushf xchg ficomp push (bad) iret sbb pushf adc or mov and int pop adc pushf xlat adc mov movsl ficom pop cld dec cmpl dec test cmp fsts dec popf fcoml shrl pop insl pusha fiadd adc dec les mov xchg clc pop mov icebp pop les imul addr16 pop mov mov cmp cwtl xlat adc stc xor sbb out sub aad dec (bad) mov fstp bound cmc das imul jge sub out pop (bad) gs push mov inc stos adc inc mov idivb popa les xchg add (bad) xor or test cmpsb adc cmp pop (bad) mov fwait cld push negb xor mov mov arpl sub add mov xor ficoml sarl add ljmp ds data16 aaa jno mov jl push sti movsl daa mov add pushl push stos add xor (bad) xor int mov out insb jmp lret cmp sub fist sub push jge push ds xadd mov dec mov xchg adc in data16 enter fiaddl sub lods sub loope mov mov or adc test pop mov sbb out lods sbb jle jb inc popf fstl push (bad) pop enter inc sahf dec popf negl and jo xor hlt push xor and outsb iret lock xchg hlt pop add (bad) ret outsb in jae xchg cld pop ret sub push and scas (bad) pop xchg (bad) arpl push dec xchg cld ss jmp bound shrb (bad) pop mov xor loopne push sahf push jl gs mov aaa mov fimull sbb mov aaa movsb add inc das mov xchg pop ret add dec test sti xor mov cld inc rolb sbb and out xor mov leave sub mov test sub mov mov jne rclb cli push mov sub xchg or pop lret lret push int3 mov test sbb xchg int inc mov push mov jmp daa lods lock loope pop xchg into or mov fistp push (bad) add sub repz mov mov pop mov movsl (bad) jmp mov (bad) (bad) cmp daa bound lds lahf or int3 pop push scas adc loopne lret xor lcall mov push les sbb out push shll mov repnz jge repz sbb inc jge repz push mov add js out sub cli xor add out dec mov in pop xchg rorl inc cmpb gs daa bound sar jno out pop xchg rorl cmpl jp dec stos (bad) pop mov and rcll loopne push nop lret add sub adc ret std aaa jno in je sbb in es lcall test int3 push inc jnp push mov fnstcw movsb or rorl dec (bad) mov jecxz je notb jg add jp jb popa pushf xlat adc xor fist and xchg icebp push mov xchg repz stos or jno xor push (bad) lods add push inc imul inc (bad) cmp inc cmpsb or jle cmovp mov (bad) cmp jmp and push dec test dec mov jno ljmp or add into cmp insb fdivrs add pop jl inc movsb pop data16 loopne fwait cld push mov cwtl cmc dec stos add fcomip push xchg int inc jle hlt das push loope mov inc mov pop ret loop (bad) faddl adc and and and push add in popf add sti ss xor sbb fadds pop dec mov icebp pop cwtl rorl dec cmpl jno xor xchg in and rcrb push popf std (bad) leave cmp xor (bad) out mov dec mov insb stos out xchg rorl (bad) aad dec xchg es or je aaa lahf jnp inc lods adc iret or mov adc repnz leave jns,pn push fs dec stos call pop (bad) in mov pop pop xchg rorl fmull cmp mov inc popf add aad xchg add lret test push mov sar mov (bad) mov xor push jb ljmp jo inc add push push cmp leave jbe es inc mov sbb fdivs mov pop lcall lahf add int jns icebp dec mov or data16 das jb or dec xchg rorl pop ja sbb and xor add jns sub xor stc pop mov and xchg in stos outsb enter das xchg ficomp push lcall mov aad jl push mov pusha popf insl repnz mov dec mov xchg fsts push mov scas jmp xchg ljmp inc mov mov popa lret or push shrb xchg cli pop sahf cmc pop ret mov and mov and mov or cmpb (bad) (bad) cmp add sub xor mov adcb int push mov jb in mov push stos jmp dec mov mov inc stos push je adc mov inc test pop xchg jmp rorb jnp pop test cmp mov and rorb movl lret push xchg out push mov cmp dec test push mov aaa mov cmp push pusha mov lret add nop jecxz pop xchg int3 add and leave add jb jecxz push mov cld xor jbe nop lret push inc jp in daa popa pushf cwtl xchg decb ret insb movsl cmp pop xchg int3 add and int3 add and insl jecxz lods adc jns inc stos xor mov and mov ja cmp mov mov jnp leave dec mov jbe inc movsb aaa mov xchg repz mov lods jmp in mov sub adc sbb jecxz (bad) fldcw lret push jb push imul std dec popf out inc xchg and xchg push test dec fwait repnz xchg out mov das jle pop jb iret cmp add jns adc add aam je divps mov jp adc mov inc xchg loope jle sbb push int3 xor or sbb xor sub (bad) cmovns leave add xchg int3 push aas js jmp pop xchg rorb inc jl out or in and inc jl out daa popa lcall js ljmp xchg lret jne out pop xchg lret add jne call or mov mov adc mov fcoms dec test push nop lret jne out pop xchg lret sbb (bad) jno jecxz push mov jno sub and dec mov push cmpsb add add sbb pop push inc stos or adc out pop xchg into or mov inc cmpsb or mov fcoml dec mov cli xor pop pop out xchg into or mov sub mov (bad) in mov (bad) imul outsb rclb fsubrs out test dec popf out inc xchg jecxz jo adc lods call repz xchg in inc xchg out scas add hlt inc xchg call mov sub mov pop stos (bad) push mov add out inc cltd in aas mov pop mov push test push cmpsl stc dec mov dec fwait out inc xchg in mov xor sub sti dec mov ds ljmp add sti dec lahf icebp inc xchg in mov sub shll jmp xchg sub outsl sar movsb cmc inc lcall fldt aam popf icebp inc xchg out mov xor xchg xor cwtl ljmp xor push mov mov mov and cwtl rorl inc jge lock xchg cli xor cmpsb loopne push mov (bad) aaa jno in push cmpsl out sub aam pusha mov ret outsl test inc jle repnz cmovns mov add je out pop xchg into or mov add add bound mov xor add pop push mov add insb test enter scas out inc jle add adc add sub adc mov imul xchg lfs jae out pop xchg int3 add mov inc jge lock aad inc cmpl sar mov (bad) cmp jmp es and inc jl repnz adc sar imul sti xor loop push (bad) add je call and iret or mov xchg pop dec xchg stc xor fstl dec mov adc out sub rorl bound mov ficoml outsb test sbb add jb jmp sar insl cmpsb loopne push mov fistpl push nop leave and xchg pop fisub pop xchg into or mov daa ja lahf fcoml dec mov cli xor pop push mov cld xor push mov std ds out stos cli ss cld mov sub adc mov outsb test sbb add jb in pop xchg lret jp in es lcall push mov std outsl test mov pop xchg into or es add cmp mov (bad) cmp call or mov dec mov add jb in pop xchg lret cmp and or mov (bad) lock adc and (bad) adc mov fidivr jge icebp sub adc mov jo in pop xchg lret add mov icebp sub adc mov loop push nop lret jbe ljmp movsl loopne push mov mov mov sar insl cmpsl clc xchg and cwtl rorb cmpb adc mov test jmp pop xchg rorb pusha fwait aam inc jg icebp sub out xchg repz fistp push mov add jae out pop xchg into or add add mov sub aam gs fistl xor enter sar insb cmpsb fistp push mov cmp rorl sub dec xchg sti xor push nop leave add rorl jg repnz sahf out push mov aaa jno in push nop leave add mov aam push xchg lret add and inc jle hlt jp,pn aas cmpsl xor sub lret (bad) movl and fild in sub xlat adc mov loope pop xchg int inc jl lock xlat aaa jae out pop xchg into or shll push xchg lret ja jmp lret test ficomp push (bad) movl and int aas jns jmp cmpl aad fcomps nop lret add and push dec test loopne push (bad) movb je out pop xchg into or mov inc jge icebp sub adc aad cmpsl out sub adc mov push jge add je call or mov sub aad dec test fidiv outsb cmpsl stc cmp and pop icebp aaa jno in push (bad) add jbe and xchg cli xor test sbb inc jp out sub (bad) adc xor (bad) adc mov pop rclb dec xchg stc xor push lea ret cmpb adc sar outsb test sbb nop leave add jnp out sub aam inc adc fwait pop and push addr16 inc mov gs rclb mov cli xor cmpsb fistp push mov test rorb inc jnp in popa mov ret cld cmp in pop xchg int3 and or sub mov mov jmp or and mov fisttpl movl and xchg iret or mov dec test ficoml dec xchg scas icebp sub (bad) cmovs mov mov (bad) std xor xchg int3 add and pop inc jns or sub dec test lods out sub aam inc jle lock cmp mov (bad) cmp add rorb addr16 dec test cli xor loopne push mov push xchg ret lea gs push sub scas adc push mov xchg jecxz xchg dec lahf add add cli dec sahf out inc (bad) arpl adc jnp and daa jns cmp xor push mov pop mov pop scas add cmp icebp inc cltd in inc xchg add push cmpsl cli fsubrs cmp cwtl ljmp das adc jae and sbb bound int js pop jb xor outsl pop (bad) xlat sub je lret push out pushf out inc xchg in mov dec mov inc cltd in inc xchg or add cli dec mov dec lahf icebp inc xchg out mov insb iret and sbb xor fisubrl shll jp inc cltd in inc xchg in mov lret ret push imul mov push stos and sbb push outsb ret aam adc js push jnp sub pop jno adc fidivr xchg in mov jg,pn inc xchg out (bad) fbstp mov xor inc lcall das adc jg sub and pop imul sub (bad) dec fwait out inc xchg in mov scas adc or add push push and ret sbb insl in mov xor pop fldl call xchg sub and out inc cltd in ds loop xchg in jne lahf fsts dec test push mov add mov and or aad dec test ficomp push cltd rorl xor fstl push mov std ss jecxz push nop add rorl inc jle icebp sub fcoms dec test add mov cs sub adc sar je xor data16 mov sbb (bad) cmovns mov sar outsl test lret js pop inc jnp out sub (bad) adc mov cmp and int inc jns in es lahf inc (bad) movl and iret or mov fcoms dec test or cs add mov sti xor cmpsl loope push (bad) movb jb in leave add pop xchg int inc jp out sub aad dec cmpl ficomp push mov (bad) cmp and or mov sub xlat pop pop xchg int3 add xor fs in pop xchg int inc jp cmovns movsb ficomp add xchg cmc mov scas push jbe stc xor icebp xchg loopne push (bad) add jne jmp pop cltd rorl cmpb ss in pop xchg into or aaa cmpl sbb enter scas jmp jl lock fsts dec xchg cli xor test sbb (bad) add ja add es lcall mov sub (bad) adc mov loop scas jmp lods divb insb movsl fistp push mov (bad) cmp in pop mov sub aad dec cmpl lods adc dec mov imul test sbb add jno in push icebp sub dec xchg cli xor push nop leave add xchg int3 add xchg iret or mov sub aad dec (bad) mov fcoml push mov cld test movl and into pop inc jnp jb imulb imul stos in push out cmp out pop xchg int3 add es cltd rorb fs daa popa lcall sub mov sbb (bad) jb in pop xchg lret add jmp push pop xchg int3 push aas add in es cwtl rorl inc mov (bad) jbe jmp push divl imul cmp and cltd rorb fs fcoms dec test ficomp push mov (bad) (bad) cmp out pop xchg int3 popa lods out pop xchg int3 push aas jns jmp pop xchg (bad) jo hlt sub dec test fstl dec mov cld outsl test sbb push push mov (bad) cmp in push xchg lret in push nop lret ja jmp out push mov dec cli jge dec scas or mov fistp push mov (bad) mov (bad) leave add cmp dec cmpl push dec mov cld xor jmp or sub aad mov mov (bad) aaa jo loop push mov add je cmp out pop xchg lret jbe jmp or mov sub mov sar jp push mov add jae in pop xchg lret add ja divl cli xor cmpsb fistp push mov std ss in push nop leave add jne ljmp jle icebp sub cmp movsl ficom dec mov cli xor sbb mov and inc jnp in es cltd rorb inc jge out sub icebp sub adc mov inc mov (bad) aaa jo loop push mov (bad) cmp in mov call add and int3 push pop lods call sub rorl jg icebp sub cmp out pop xchg int3 add and push sahf fsts dec xchg add sbb (bad) jb and mov sti xor push mov cld xor aam inc cmpb adc int3 dec xchg rorl inc jl out daa pusha cltd rorb inc jge lock aam inc jg lock ljmp jle icebp sub jo jecxz push mov add jb in push nop leave adc add mov cli xor pop dec mov cld xor push mov decl sar imul sti xor cmpsl and ficom push mov cld xor push mov std mov rorb inc jnp in es cltd rorl fs aad mov jnp icebp sub mov mov add je out pop xchg int3 push aas js inc (bad) int3 and inc jge icebp xor out sub aad insb cmpsl loope push (bad) (bad) (bad) cmp in js jmp daa popa adc fwait aad dec (bad) mov ficoml loope push nop leave add jne call or mov cmp bound mov mov cld inc jp adc lds push xchg shlb je sub fistl dec test pop popa int3 aaa lcall rorb inc jge lock jnp add je call or std aas lods in daa pusha cltd rorb jge lock aad dec cmpl inc jg repz mov cmp jae out pop xchg into or mov sub aad dec (bad) mov cli xor loope push mov add xor ficomp push mov (bad) cmp and sbb (bad) adc mov fstl push (bad) movl pop pop xchg add or rorb inc jg repz fnstsw pushf sti fs and lods xor insb shrb add es cli inc jg repz push ficomp push mov add je jmp or mov add pop cltd fisub fstl push mov xor out pop das xchg ljmp stc xor loopne push mov add rorl inc jle repnz lahf fsts dec xchg mov sar outsl test sbb jecxz lods adc repnz push mov add sahf ficoml push mov push inc xchg aas mov sub mov int movsl adc add add das sarb mov shl push cmpsl (bad) push test push cmpsb lahf or adc packsswb outsl les xchg jmp xchg in xchg gs mov addr16 js xor push mov adc (bad) sbb sbb (bad) cmpsb sbb mov jns and sbb js push outsl rclb mov movsl adc add dec cmpsb (bad) cmp inc cltd mov imul cmpsl imull imul mov addr16 pop stos std push movsb (bad) dec pushf mov aaa mov cmp sub sar (bad) aam pushf rclb mov jno dec mov jae and lret es out ds add cmpsl test test sub push push loope mov test xor aaa xchg pop int3 sbb int3 and daa jg and leave sbb ret mov xchg dec lods pop pop mov and sbb adc in mov sahf (bad) jno push mov hlt push mov arpl decb add scas decb add cli dec cmpsb testl push test dec movsb add dec mov insl loope xchg out mov inc and xor faddl stos es push mov inc stos push inc xor lods iret jmp mov jo insl out mov in adc or rcrl pop xchg lret je imul cmp ljmp lock mov stos adc ss in jne jmp cwtl fcoms dec (bad) mov fstps jmp sub test cmp (bad) adc sti ss insb ljmp (bad) dec mov jmp mov xchg add cmp xchg cli push mov (bad) aas mov or (bad) mov test aad dec cwtl (bad) fsubrl loop pop xchg shrl je pop test inc test jmp xor mov add add stc pop mov cltd shll mov lretw or ss in jae adc or mov add loop mov and enter dec mov jmp hlt imul aad dec test sti xor cmpsl loope push mov add cmp ljmp jge lock sub mov (bad) (bad) aaa jno in push xchg int inc jnp out sub fiadd dec test pusha lds cmp jp cmp push mov sub mov insb lret cmp ds push outsb (bad) xor lock fsubrl arpl mov fstpl stos hlt cs mov cld xor push nop lret js in and inc movsl loopne push xchg lret js in cmp and rorl inc jg repz mov xor push nop lret ja jmp pop lcall das imul lret ja ljmp or mov add mov and xchg rorl inc jle icebp sub adc cld aaa jno in pop xchg int3 push inc xchg rorb inc jg repnz fsts lds dec cmpl push push mov pop lcall inc jns in es fwait aad dec test loopne push mov add nop int3 push inc jns in daa popa fwait aam mov icebp sub adc mov push mov (bad) cmp out pop xchg into or iret sub divb imul movl fdivrs pusha lcall mov rorl fs (bad) adc mov fistl mov std ss loop push (bad) add call pop inc jns call lods push cltd sbb mov loope push lea add mov sar insl cmpsl loope jnp adc sar jno in pop xchg int3 push aas jns out sub (bad) adc mov (bad) cmp out pop xchg iret adc stos in push xchg lret jbe repnz or mov push mov jns push inc jns icebp sub aad inc cmpb outsl test sbb ljmp fistl test jmp enter lods out pop xchg lret add xchg int aas js ljmp xchg loopne add pusha imulb or sti pop jp nop out push mov sbb iret pusha rolb std pop mov adc movsl fistp push mov add jae out pop xchg int inc jp in es cwtl rorb push loope push mov add jne call cwtl rorb data16 xor inc movsl or loope push nop lret js in sub aad outsb stos in push nop lret inc jnp in cwtl out pop xchg iret or mov daa popa lcall mov sar insl cmpsb fistp push mov add xchg into pop pop cltd aam inc (bad) mov fstl (bad) (bad) cmp in pop xchg shlb ljmp jle repnz lahf fsts dec mov sti xor push nop lret lret in pop shlb mull dec les mov push scas adc add movsb decl jae nop add sub mov mov push cmp jne cmp data16 fsts dec test dec mov std ss jecxz push nop lret pop mov ret outsl test enter mov and or mov jl,pt icebp sub adc mov or sub lahf fcoms dec add or sub dec xchg cli xor test sbb enter scas out je call pop inc jp out jnp (bad) cmp in push nop leave add adc mov fistl insb cmpsb loopne push mov add je out jb out pop xchg int3 push inc add jns in dec test sbb (bad) add scas jmp push dec (bad) mov fistl std cmp in pop xchg iret or mov sub (bad) adc (bad) adc mov fidiv clc xor ficom push mov cld xor int3 push aas jnp in daa pusha cltd rorb fs fsts dec xchg (bad) addr16 dec mov sti xor mov fcoml ss inc (bad) add pop xchg into or mov daa add fsts dec xchg fidiv insl cmpsl loopne push mov add jne imul mov cmp outsl test lret ja jmp pop cltd aam dec (bad) mov fdivl insl cmpsl loope push mov add mov mov daa pusha lcall sub stos cmp cmpsb loopne push (bad) movb jae out pop xchg rorb inc jl out sub aam bound mov cld xor in pop xchg int3 push inc jp out daa popa mov xor fcoml push mov and add xchg iret or mov inc jl out sub pop mov imul mov jg ss jmp and int3 add out daa popa popf xlat adc mov incl mov sub aam inc cmpb adc mov fcoml dec test fstpl push mov popa stos in pop xchg lret add ja ljmp in pop xchg lret add and iret or mov daa pusha cltd rorb inc jge add mov sub aad dec pop test lret add in daa pusha mov cmovs popf (bad) cmova sahf xlat adc mov fldcw arpl mov push popf xlat adc mov fstl push xchg sbb dec xchg cli xor sbb (bad) (bad) cmp in push nop enter lods add add ss loop push (bad) add ret jae cld aaa jo jecxz test sbb (bad) add jae in push nop lret js jmp pop xchg rorb inc jnp pop inc jl out sub (bad) cmovns adc xchg cli xor fistp push mov inc cmpb adc mov ficompl push mov add jae in pop xchg lret xchg lret ja jmp xchg rorb inc jl out sub rorl scas out pop xchg lret add jbe jmp or mov sub add cmovs mov fcoml sahf fcoms dec test push mov add je out pop xchg lret add ja ljmp jp in es xchg rcrb pop xchg int3 add and pushf xlat adc mov ficom push cltd xor icebp sub cmovs mov mov fstl dec mov push dec (bad) mov fcoml jb out pop pushf or leave add xchg into pop inc jp in es lcall sub sahf lock lahf fsts dec test aaa (bad) mov fcoml dec mov cld xor cmpsl loopne push mov (bad) cmp in push xchg lret stos jmp or pop inc jp in es lcall mov es cltd rorb inc jge out sub and loopne push mov movl pop pop xchg lret add xchg int push aad insb test cmp mov sub aad dec cmpl add je out pop xchg int3 push aas js jmp pop xchg rorb inc jl lock hlt das push mov jno in cs aad inc jl in and hlt inc jnp lock sub push xchg lret add es pushf divl insl cmpsb loopne push (bad) movl repz ss jmp call out jb in pop xchg lret add ja ljmp test lock add pushf aad inc cmpl mov fistp push decb (bad) (bad) cmp in pop xchg int3 add inc jl repz sbb (bad) sbb lret js in es lcall fwait aad dec cmpl sbb cmc aas jns in daa popa fwait aad dec test in pop xchg int inc jnp push inc jnp out sub xlat adc mov dec mov std aaa jno in pop xchg lret push aas jp inc jnp out sub aad dec (bad) mov fstl push mov (bad) cmp (bad) cmp out pop xchg into or mov sub pop xchg rorl inc jg repz mov dec cmpl sbb movb jae call sbb fistpl push mov add mov and inc (bad) adc dec cmpl sbb adc xchg rorl inc jle repnz lahf fsts dec xchg cld ss in pop xchg pop lcall sub sbb pop add mov fcoms dec mov cmp in push movsl add mov ficomp push mov add jae add pusha lcall cs mov sti inc jle cmc das push xchg ficom push mov (bad) cmp in push nop out pop xchg iret or mov sub aad inc (bad) ss in pop xchg int3 add and scas call pop inc jp in es test bound js sbb mov pop stos sti dec popf lock stos push lods std mov addr16 push cmpsl cld dec mov dec pushf adc mov pop mov push test inc xchg out mov jg,pn adc clc xor fstl push mov cld xor push (bad) add mov and cltd rorb add add sbb (bad) std aaa jo jecxz mov es cltd rorb fs (bad) cmovs cmpsb loopne push mov sbb (bad) add scas add sub mov fsts dec test fistp push mov std outsl test sbb add jb out sub (bad) cmovns ret std outsl test aad pop xchg iret or mov daa popa lcall mov cld xor push mov add jb in daa pusha cltd rorb inc jge adc mov cmp out sub aad inc cmpb sbb sbb movl pop pop xchg into pop inc jp in clc push aam scas or sahf fistl stos or pop mov pop aas ja call adc test jmp lods add jb loop mov push jg adc test xlat adc loop push mov cli xor imull push push mov push es aad xchg sbb sar data16 xlat push insb movsl fstl sub fdivrs jle lock rorb rorl jl and lret add xor notb cld xor dec mov cli dec mov cld xor pop mov gs (bad) cmova inc movsb pop imul clc movsl sub mov rorl inc jl in es lock rorl inc mov add jo fildll mov mov pushl jo loope (bad) sub fstl sub gs (bad) pop sahf xlat adc adc int jbe,pt out xchg inc rcrb xchg lret add jb loop enter aad inc jge add daa pop xchg iret pop aas ja jmp and lret popf decb divl addr16 scas push and fs (bad) cmova inc jl in and ja,pt out pop xchg lret cwtl rorl inc jns jmp outsb cmpsb ficom stos cmp in push pop pop jbe sbb std xor dec test (bad) push push (bad) mov cmp scas call add sbb addr16 dec (bad) mov dec (bad) mov rorl inc jl in and pop xchg int jbe,pt out ja sub mov mov sahf sub (bad) push inc jge out test dec xchg aad inc jge in and pop cwtl rorb inc jns jmp xchg aaa jno loop push mov adc push (bad) (bad) pushl add in jmp push jg out es xchg int cmp jge out daa popa cltd rorl pop mov pop xchg lret add je out and pushf aam inc jl add rolb ja call add jno loope push mov sti push nop leave add jae in jl das push fistl dec test adc xchg aad sti inc jp ljmp jb loop push mov cld push mov sti xor fistl int pop xchg lret add jb loop add push dec cmpl pop xchg lret add je in push (bad) movb jb jecxz jp jmp pop xchg int pop mov sti xor fstpt push mov cmp lods in push (bad) lds jge push or sar insb loopne jne in jns jmp add sbb leave add jo sti xchg add enter mov fnsave ja,pt call add jno loope push mov push push mov cli xor fstps cltd rorl inc jns cli gs and mov ljmp aam inc jp jmp pushl outsl cmpsl fbstp ret push jge inc mov or (bad) cld xor pushf stc mov sub rorl inc jg icebp sub rorb inc jge or mov fsubs xlat cmovbe add fstpl push mov imull data16 lock mov das push jg out daa pop xchg iret pop inc jns add js jmp or mov in jl dec mov das addr16 dec cmpb add add xor cmpsb fstl dec test (bad) push inc cmpb cs (bad) and xchg iret pop aas js add and mov out cmpsb ljmp je jecxz push mov cli xor clc outsl cmpsl ficom dec xchg inc jle out es xchg loopne loopne movsl out sub rorl jge push mov jecxz push mov sti xor fsts dec cmpl fsubrs mov daa pop xchg iret or mov negb imulb data16 (bad) push inc jle dec mov loope push mov cli xor fistl dec test das addr16 (bad) sub int cmp pop mov aad inc jnp dec mov ficom dec xchg (bad) cmova mov shrl mov and int cmp push mov sub aam inc jnp das (bad) aam inc jg lock rorl inc jns ljmp xchg into push xlat cmp rorl inc jnp pop lret aam inc jg lock cmp push inc ja out push mov std xor dec test repnz shrb in push pop (bad) ss cmpsb push jecxz test and lret jb inc scas lock rorl inc jns call add jo add jne in push pop pop jle pop dec xchg push faddl jecxz push (bad) (bad) insl rcrb movl sbb aaa jo loope push (bad) fistp cmp repnz mov xor fsts dec (bad) (bad) xor adc cs mov (bad) push inc jle in and aas js or mov and xchg shrl mov pop push mov pop and cmp out push outsl cld cmp loopne push mov sbb adc xchg inc mov jp add jno loope push mov mov xor ficoml dec cmpl lret or mov and (bad) xor mov dec add aas mov mov or mov and leave add jo fist dec test cld xor mov mov aaa outsb test sbb cmp sub je in push xchg and mov pop push pop (bad) xor push push mov sub cmp jecxz push mov or jge in and scas call pushl outsb cmpsb fstl sub gs aad inc jle pop je add jb jecxz push cmpsl xor pop push xchg lret jb xchg fistl data16 (bad) push inc jle out es xchg out daa pop xchg rorb inc jns adc (bad) ss loopne dec lea lahf add in push (bad) (bad) std outsb adc (bad) xor mov fcoms dec add (bad) (bad) adc mov adc (bad) jo loope push lcall jg lock rorl inc jge out sub lock pushf aad mov xor fstl cli pop test (bad) (bad) ss mov or mov and lret jb pop aas ja out push (bad) loope mov (bad) jo stos adc jmp pop xchg lret add mov dec (bad) add jno loope push mov divl addr16 fcoms dec (bad) fstl dec xchg clc xor add in and ds and adc cmpl scas out push pop (bad) ss movsl fstl test xor fsts test xor aam inc jg out sub sahf add cmpsb loopne push mov clc xor clc aaa (bad) fildl call add jb add sbb (bad) out cmpsl out push (bad) add xchg mov pop pop nop leave add (bad) loope test fsts dec cmpl ficoml dec cmpl outsb mov daa pop cwtl rorb inc (bad) in dec movsl add fcoms dec cmpb jnp out daa pop xchg iret pop aas ja out push (bad) add add jbe push aas js call push cmpsb loopne dec xchg jge inc mov sti xor fsts dec jmp mov rorl inc js out push (bad) add jno add jno loope push mov inc pushf xlat adc mov jnp aas xchg stc xor ficoml dec in xchg rorb inc jns jmp add jbe cmp inc adc das imul cwtl rolb aas ja out pop pop (bad) outsb movsl fstl add jb loop push add in dec xchg int or mov and jb jecxz push mov sti xor movsb fstl xor fistl dec test mov fcoms dec sbb adc mov pop xchg rorb inc js ljmp je in push pop add jo loopne jne xor mov mov fstl sub cmpsb lock rorb inc jnp in and xchg into pop aas ja call add mov outsl scas out pop nop enter lods dec lods maxps mov and enter cli mov add jb jecxz push mov std xor push mov clc push test sbb ret cld xor movsl arpl inc cmpb pop aas ja out push mov dec xchg clc xor fsts dec (bad) mov fcoms dec cmpl push push mov stc xor fsubrl dec test xlat cmova out daa (bad) jmp jo loope push mov (bad) outsl test (bad) outsb cmpsl fisubr jne xor fwait aam inc jl test adc mov aad pop add mov fstl xor fstl dec xchg clc push stos or fstl sub pop xchg int cmp push mov cld xor decl mov aad inc cmpl mov inc xchg negl rorl inc jl in and cmp call add cmp in push fsubs jne in push (bad) add jo loope push mov cli dec cmpsl push pop lcall and enter lods in push mov sti xor fcoms inc enter mov roll or mov and xchg int3 add jne in xchg out dec pop (bad) cmp loopne push mov clc xchg or xor movsl fstl aas leave adc mov xlat adc mov aam inc jle out inc mov push jbe,pt in push pop cmp jp ljmp jb loop push mov push mov cld xor movsb fcoml test aad inc jle out inc mov pop aas ja out push mov jge aas jns ljmp je in mov outsl cmpsl fist dec mov stc xor ficoml dec test (bad) xor imull imul imulb addr16 xlat adc mov push fstl dec xchg ficoml dec cmpl xor cli xor fistl dec test jno dec xchg sub cmpl imul sub int3 dec movsl add insl fnstsw arpl cmp scas hlt das mov add out mov xor fistp push mov std cmp push mov inc jp jmp pop xchg fstpt out dec fsubs arpl mov int3 sbb leave add repnz mov cmp pop cwtl rorb inc jle icebp sub xor sbb add pop insb (bad) xor shlb mov xor adc outsb test sbb xchg lret add daa pusha lcall sar outsl test pop (bad) sub mov xor mov (bad) cmp out add rorl inc jg add call mov xor je sub ja jg cmp addr16 dec mov adc sar mov (bad) cmp jecxz add enter add cmp in pop xchg lret xchg push nop lret add daa popa lcall cs test sbb mov es cltd rorl jg add fistp push mov (bad) cmp out movl and int inc jns in es cltd rorb inc or out sub icebp sub fcoms dec test jo jecxz push (bad) add or mov sub rorl sub ficoml dec xchg fsts dec xchg std dec mov std aaa jno in pop xchg int3 pop stos divb imul aaa jno in movl and int or mov sub (bad) adc (bad) adc mov divl push fstl push mov add sub aad inc cmpl sbb (bad) (bad) cmp out pop xchg int inc or inc jnp out aas jle repnz lahf fsts dec xchg cli (bad) fistl aaa jo jecxz push mov fwait sbb cltd rorb popa fwait aam inc mov or mov cmc cs mov jmp aad dec (bad) mov fistpll (bad) cmp in pop xchg lret add ja ljmp mov or cmpb xor sbb movl xchg int inc jnp icebp sub fldenv jmp pop cltd rorb cmpb adc mov (bad) cmp scas out jae out pop xchg into or mov repz push dec test ficomp push mov pop mov (bad) (bad) aaa jno in push nop lret js jmp pop stos out pop xchg int push lods jo sbb imul dec xchg cli push nop leave add xchg jmp jge out sub aad dec cmpl pop xchg into pop inc jns out sub aad dec sahf loope push mov add lret add ja jmp or inc jl out sub aam inc cmpb add xor push mov add xchg lret add jge out sub aad inc cmpb xor ficomp push mov test or jg repnz lahf fsts dec test gs xlat adc mov fistl xor pop xchg into sbb xchg into or mov daa popa fwait aad mov fistl dec mov cld xor fsts dec test fcoml xor cmpsl loope push (bad) movl cmp pop mov sbb add jp,pn lock adc cli xor push xchg lret push inc fwait sti inc jge repnz mov (bad) cmp and and loop push nop lret jns in es fwait idivb jp out sub push mov and mov insl into xchg in sub push mov (bad) jb out pop xchg (bad) xor mov fistl aaa jno in pop xchg into or mov sub fnstenv jno in pop xchg int3 add xchg into or mov sub adc mov fistp push mov (bad) cmp out pop xchg int3 push inc jp in daa pusha lcall push (bad) movl and cwtl jns,pn out daa popa fwait aam dec cmpl enter mov and cwtl rorb cmpb sbb movb je (bad) aas jns add sub adc shll stos in push xchg lret add and inc cmpl sar insb cmpsb loopne pop xchg int3 pop inc jp in daa popa lcall inc jg repz mov and xchg rorl inc jle repnz sub adc mov fistp push (bad) movl es cltd rorl fs fcoms dec test sbb lahf fcoms dec test fstl push mov (bad) cmp out pop xchg int inc jp out daa popa lcall xor fistp push mov sbb leave add add sbb (bad) adc mov ficomp push mov add je call or mov sub adc cli xor cmpsl loope push (bad) sbb enter scas jmp pop xchg rorl inc jle add cs mov (bad) cmp out pop xchg int inc jnp out sub aad dec cmpl pop push mov push push mov (bad) cmp out pop fwait mulps mov sub std jp,pt stc xor test sbb nop lret loopne out push mov js ds (bad) xor negb inc lods sub cmc adc xor and mov add out pop xchg into pop inc jns jmp pop xchg iret or mov sub lahf fsts dec test (bad) cmp in push xchg push popa fwait (bad) cmovs mov hlt jns,pt in es cltd rorl das push xchg lret add daa popa fwait icebp cs mov cld ss pop xchg rorb inc jge out sub aad dec (bad) xor sbb (bad) jo jecxz push mov add xchg int3 add inc jp in daa popa lcall fwait aad dec cmpl add or mov fcoms dec test ficomp push mov (bad) aaa jo jecxz push (bad) in pop xchg iret or icebp sub fs fsts xchg cli xor cmpsl loopne push shrl push fstl push mov cld xor push mov dec mov pop mov loop push mov add orb xchg into pop inc jp in and inc jnp xor loope push (bad) (bad) (bad) cmp in push nop lret ja jmp or movb mov and inc jg pop xchg rorl inc jge lock (bad) cmovs loopne push mov (bad) cmp jecxz push (bad) add scas call or lds cmp pop xchg rorb inc jl aaa jb in pop xchg lret add ja ljmp (bad) add add dec cmpl sar insl cmpsl loopne push add outsl fcoms xor xchg into pop inc jns in and xchg iret or mov jb out pop xchg int3 add sub aad inc cmpl dec mov inc pushf notl jae cmp pop (bad) xor cwtl icebp push mov jno sub int xchg clc pop mov sarb sahf or cmp and and sti out jp inc popf clc push mov imul shrb mov dec lods push insl (bad) sub aas fwait cli push mov mov clc jno sub out mov mov mov dec lods or int icebp pop ret sub pop ret aaa fwait cld pop mov mov insb (bad) and inc mov jns adc push mov jne sub in cmpsb add adc push jne aaa xchg hlt push mov push xor and out mov mov cmp adc out cmpsb add and ss icebp ss lock push mov popa mov or fidivl xchg repz stos sub mov push push popa mov pop fs push bound cmp data16 mov and xchg inc pushf sti int3 inc sahf std shrl in or sub jmp mov popf negb push outsl lret sub add push mov jae ss hlt (bad) notl sbb xor icebp dec stos sub ljmp pop mov aas sahf lcall and push dec cmpsl add inc movsb add or jg icebp sub cmovns aaa cmpb adc lods cmc das imul test sbb nop call or repnz fsts dec xchg loopne mov xor test sbb js,pt jmp mov ret std aaa jno in pop xchg int3 push inc jp cmovns add push mov stos push (bad) out cmpsb shrl (bad) xor cltd cld popa (bad) sub xor out mov (bad) loope pop jmp fistl push add ret cld xor push mov add jns cmovs lahf fcoms dec cmpl adc mov dec xchg fstl dec mov cli fsubl pusha fwait aad inc cmpl aam inc cmpb adc mov fstl dec mov add sbb (bad) std xor sbb enter sbb ret cld xor push mov (bad) aaa jo add divl push ret xor out lret sbb js,pt idivl add mov and xchg rorl inc jg repnz (bad) pop bound je inc mov lahf in es lcall sub mov insb movsl ficom push mov js ljmp (bad) cs call cltd xor call mov push inc cmpb or sub rcll jo cmp repz popf negl out push mov jns outsl cmpsl fist dec xchg and fist lret add jbe call or into pop pop xchg lret je mul addr16 das xchg (bad) aaa jo hlt push mov inc cmpb push fcompl (bad) sbb fiaddl (bad) popa rcrl (bad) adc test in cmpsb jmp add movsb fldl mov sub rclb fnstenv movsb fstl dec xchg rolb sub dec (bad) mov mov jne pop pop xchg lret and dec or xchg out cmpsb std cmp jecxz push mov lds repz dec test call dec cmpl push lods jmp jae out push nop fbstp mov in push nop fdivs cltd ficomp jbe cmp je in cmpl shlb lcall negl divl imul push mov push mov (bad) cmp loopne jl and mov dec mov cmp push push (bad) fisubrl sti pusha mov ficom push mov in adc sub xor data16 iret daa data16 fcoms dec test (bad) (bad) addr16 int mov jb out dec test dec mov sti xor push mov out pop xchg iret or mov pop mov outsb rorb mov dec (bad) sbb lret jne call aaa jb jecxz push (bad) add enter mov les jg adc test sbb fsts dec cmpl push inc jg sbb enter scas call sub into push ds out addr16 ret jno loop push mov cld xor pop xchg int jbe,pt out push nop enter rorl popa fdivrl fwait jmp pop cwtl rorl pop mov daa insb inc mov fistl dec test or jg icebp sub aam inc jg sbb add jno loop push mov daa mov sbb cmp imul xor movsb fstl ds loop push (bad) (bad) jo loopne push mov sbb (bad) fbld popa lcall outsb int inc jg icebp sub pushf loopne push (bad) (bad) (bad) cmp in movsb add jne call add jbe sbb cmp lods out push nop aad fwait jmp or call sbb ret imul xor fcoml data16 add nop enter stos add les cmp loop mov add jne nop aam inc cmpb push inc clc inc jge out daa pop xchg iret or mov inc jle lock rorb inc jge sbb add sub push test (bad) outsb cmpsb ficom ret cmovs pushf aad inc jg adc mov fsts dec or mov adc mov push inc cld ja divb imul test lret add je in push mov inc jge out daa pusha cwtl rorl inc jp sbb jl in es lret add xor mov and int3 add jae in push mov (bad) cmp or mov sub aam inc jle and jg icebp dec cwtl rorb in test (bad) aaa jo loope push mov cli aas mov cmp scas out pop xchg leave add jae cmp sbb jbe pop inc push mov and into pop inc jns ljmp cmpl push inc jle push push mov cli xor sbb inc lahf add dec mov add jge mov sahf add and dec adc lock cmpsl add arpl xchg (bad) sub dec scas adc cmp push inc jg lock in add rorl ret insb movb pop xchg int jbe,pt es or lock pop mov sbb cmp in and inc jns ljmp ja pop push mov cli xor push dec mov dec mov ret imul rorb inc jp jmp pop fwait sti aas jns jmp pop xchg into pop aas js ljmp mov mov pop jl sti xor cmpsb fist dec mov insb lds jle icebp sub ds dec stos or xchg iret or jecxz push nop leave add je out pop lahf add cmc addr16 dec push data16 je out daa pusha cltd rorb dec shll pop xchg int3 add and lret add mov xlat adc ljmp mov dec xchg testb popf (bad) cmova or mov daa pusha cltd rorl inc jl out daa pusha fstpl push mov (bad) aaa jno jecxz push mov and into pop inc stc inc mov dec xchg lret add jne out push nop fistpl fstl dec xchg sub cmpsb fistp push (bad) (bad) (bad) aaa jno sub jae loop pop or adc fistl dec test test (bad) cld xor dec mov (bad) (bad) outsl cmpsb fist dec sahf jmp out push nop enter pop arpl push push (bad) add jno inc xchg lret add jbe out pop xchg lret jne or mov daa pusha cltd rorb inc mov dec fwait (bad) cmovs pushf call std outsl test sbb (bad) std dec (bad) adc divl imul and xchg into pop inc jns jmp pop mov jns add sub dec cmpl lcall and mov and xchg into pop inc lods mov dec mov sbb std xor jbe jmp add lods in push ljmp mov cld xor lret add jbe out push pop add and ja,pt call jecxz mov cli xor fistl dec xchg adc lcall sub rorl inc mov ret cld xor cmpsl loopne push mov xchg in dec cmpsb add ja and push shlb push ret sub mov mov outsl int3 daa insl int3 pop inc jns std pop (bad) sub in inc std je add int3 add je in mov pop aas jbe out push (bad) (bad) cld outsb cmpsl ficom jb nop add jne push movsl loope (bad) lock mov bnd dec scas adc into cwtl pop and mov loopne roll mov ret cld jecxz lret lahf (bad) arpl stc xor movsl fstl dec xchg xor (bad) cmp (bad) (bad) pushl jo loop pop int push mov cld xor cmpsb fist push mov stc xor pop addr16 dec test add fcoms (bad) lret jbe adc sub aad inc jl in es xchg into push aas int push mov sti xor fcoml test dec cmpl mov push mov dec (bad) xor lock jle pop test sbb pushf cmc push mov xchg cli cmpsl and dec test jne out fs lods adc push mov mov xor aad jl out sub int3 add jmp mov outsb movl sbb (bad) cld xor movsl fstl xchg int3 add je out pop xchg leave add jb loop in aaa jo loopne push movsb add int3 add cmp lods in push (bad) (bad) outsb cmpsb fist dec xchg arpl int3 add jne out push mov pushl je outsl test sbb fisubrl and inc mov es inc scas and mov jo add mov and cmpsl loopne jae aaa mov lret sub cmpb sbb adc test ficoml dec test push mov stc xor (bad) xor sti test pop lcall addr16 add nop enter stos out movsb in daa pusha cwtl rorl jge out es (bad) xor jno aaa (bad) (bad) fldl daa insl mov pop xchg in outsb loopne mov mov pop push mov stc cmp call cmp push aas ja or sub lock test jb inc scas xchg call (bad) decl or fadds or push adc mov pushl jo loope push mov cld xor and int3 add jbe out pop lcall hlt leavew and ds icebp dec mov push mov jl inc stos adc inc sahf frstor and aam cltd stc jnp inc xchg ljmp inc mov push mov jg dec cmpsb add clc push mov lods or inc lods adc pushf call add int3 add jne out push (bad) push inc jnp in and aas ja mov es xchg into push inc jns ljmp nop lret jae in push (bad) (bad) pushl jo push inc cmpl ret insb movsl fstl dec xchg fcoml cmpsb ficom dec mov stc xor fcoml xor mov mov xchg or mov and xchg into or mov fwait aam inc jg lock rorl jge out addr16 dec cmpl sub rorl pusha mov mov sub rorl inc jl push xchg iret or mov and xchg into pop inc js jmp pop xchg int pop xchg rorb inc jnp cmc jbe clc xor or jle lock fisub aad inc jg icebp sub fsubs pop push nop enter stos loop push mov sti dec xchg fsts dec test aad mov mov fcoms dec andl dec test or es xchg iret pop aas js call push push pop add jno loop push test mov fcoml xor aas mov sti xor pop dec mov clc xor ficoml push mov cld xor insb cmpsb fistp push mov sti xor cmpsb fist push mov fs aad inc jle out sub rorb or jbe,pt out push pop add jno loope push mov cld xor movsb fcoml dec test inc (bad) outsb mov fstl dec mov cli xor xor mov (bad) cmovs fwait rorl jge out es cwtl rorb pop cwtl rorl inc jnp jmp pop xchg int mov repnz or daa pusha cltd pusha stos jecxz push (bad) (bad) outsb add (bad) xlat push push stos push mov adc or sub (bad) loopne cltd notl pop je push mov js xor in mov pop push and clc push add jg cmp hlt dec mov sti xor sbb popa lds cmp out pop xchg leave add xchg lret add jne out pop xchg lret je out pop mov dec mov stc dec xchg add sbb out inc mov je push ja adc movsb mov dec scas inc mov insl enter jge cmp outsb shrb daa mov inc xchg in dec cmpsb add daa nop ljmp cmc push and jne xor add cltd notb or mov and and in dec stos or (bad) xor hlt dec stos pop imul je cs inc adc cmp pusha mov nop out std pop mov insb lret sub pop jp ss out dec push and lahf std pop mov jg cmp cmp add sarl cmpsb or out dec lods or mov cmp pop mov jno sub adc cmp insl aas lds and xchg pop negb sbb aaa xchg sti push mov test mov je ds adc repnz mov jno mov test dec test mov mov push ret loop xor sahf add popf (bad) pusha les mov dec mov ja add jp push mov jo cmp pop inc jns ljmp lock scas out pop xchg leave add jae in push pop add xchg fsubrl addr16 dec cmpl xor out daa pop cwtl rorb inc jns ljmp lret add jne out pop nop enter stos in imul addr16 and xchg int aas js jmp mov imul clc xor ficoml dec test inc jge out sub rcrl jg or sub sti xor movsl add jne out pop xchg int3 add sub dec cmpl add lahf fcoms dec cmp jle lock aam inc jle lock aam push movsb fistp push mov push push mov cli xor fcoml dec sbb cmovs pushf aam inc jg das add fstl xor ficoml dec cmpl inc jg or mov and leave add jno loop jge arpl mov aad inc (bad) adc fs into or adc es xor fstps xchg in movsl popa cmp sub push test mov jb sbb mov cmp loopne jle sbb add icebp inc (bad) (bad) (bad) (bad) insl adc or mov and inc jns out xchg imul ss pop bound mov sbb movb cmp xchg rorb inc jge lock adc mov ficoml in push cmpsb fistp push mov sti cmp js adc mov fsts dec mov or jmp imul cli dec mov sub or mov and leave add cwtl jecxz push (bad) add jno jecxz push (bad) (bad) (bad) aaa outsl sbb (bad) ss and xchg int cmp pop jle or sub aam rcll push fistl push sub or in es xchg into pop aas jns jmp mov push inc jg out sub lock aam inc jle out sub xor test sbb (bad) jo loope push mov add jae in mov dec test fcoml xor mov daa pop xchg iret or mov and lret add mov out pop xchg lret jb loop push mov cli xor fsts loope push fcoml xor fistpl test pop push mov sti xor push dec xchg clc xor jecxz push (bad) (bad) outsl test and add add sub loope imul mov sbb (bad) outsl test sbb mov (bad) cmp jmp pop xchg int3 add jne in push (bad) (bad) insb movsb fcoml or mov daa pusha cwtl rorb inc jns jmp cmovs cltd rorb inc jnp in es sub popf aad inc jge in and cmp push mov incb pusha pushf aad inc jg lock push push mov cmp scas out push (bad) add jno loop push sub ficoml dec cmpl xlat cmovs cltd rorb lds dec xchg sti xor cmpsb fistp jne jmp stos cmc das push test fistl leave add jae in push (bad) add jb in push mov add ss loop push mov cld xor mov loop push mov cld xor movsl fstl xchg repz ficoml dec (bad) mov rorl inc jnp in and les pop mov mov xchg (bad) push inc jle out and out pop xchg lret add jne out pop nop leave add (bad) aaa mov add jb jecxz push mov (bad) cmp loop push mov std outsl test sbb jne cmp icebp xor push stos jmp or mov push fwait aad dec (bad) mov push mov inc add int3 daa test add jbe call add mov and iret or aam xchg lret add ja jmp cwtl std push (bad) leave xor jl inc mov cmc xor in es cltd rorb inc jle lock jb out pop xchg into pop push mov jbe xor add mov std inc jge out sub aad mov sub aam dec (bad) mov sub in pop xchg int3 push push mov jp ss add push mov enterw lret add pushf aad inc cmpb push dec xor xor fstl lock jnp sbb or add sbb sub push xchg loope push mov add jae out pop xchg lret add ja insb cmpsl loopne push mov decl adc shrb jae cmovp sti push (bad) add mov xor sbb pushf (bad) cmovns adc sub cmpsb loopne int3 and jmp mov jmp push xchg ficomp push mov std outsl test sbb pop cltd rorl inc cmpsl or and pushf aad inc cmpb and rorl inc jle icebp sub js in es cltd rorb int3 push aas jns in ss cli push mov pop lcall jecxz cwtl divl jno out push nop leave add into pop inc jns in and mov mov push and fwait aam pop sti push and cltd rorb rorb inc jge lock (bad) cmovns add jne out xchg sti pop mov add lock rcll xlat push pop xchg into or mov jns out sub aad dec cmpl (bad) add dec test je and dec lcall cmpb xor xchg rorl inc jle icebp dec lods adc addr16 dec xchg push mov inc jle repz stos out pop xchg lret add ja jmp pop xchg sbb fiadd jne and hlt std stos adc xor mov outsl lret mov pushl outsl mov je and fcoms dec (bad) mov add out pop nop enter test sbb mov fsts insl sub mov add je jbe inc lods ljmp inc cmpl scas insl out enter and xchg iret or cmp jmp or out pop xchg int inc jp icebp push mov popa fwait (bad) mov out inc cmpb xchg into or ficoml dec mov cli xor cmp add mov mov cmp or (bad) xor push arpl adc xlat adc jecxz push nop leave add ja cmc push mov pop xchg sarb pop (bad) call movsl fistp cli inc cmpb cmpl out pop xchg int3 and std cmp mov ds xor xor dec test sbb divl nop int inc jnp out sub fdivs cltd negl push inc xchg rorl mov es and out sub movsb fstl dec mov pop jp xor in sub aam or push mov cmpsl repz cmc xor adc mov lock mov push mov scas adc or cltd rorl dec push push mov add pop xchg int inc fwait aad dec cmpl pop mov pop xchg lret or imul cwtl (bad) push (bad) (bad) (bad) cmp mov sub ficoml movsl ficom dec mov stc xor lock mov je adc mov adc mov xchg jecxz js xor fistp jbe ljmp js or mov sbb or insb aad xchg add movl lahf fcoms push and rorl cmpsb loopne push (bad) movl addr16 and les cmp xor jl rorb inc jg repnz repz push mov das xchg icebp push mov xor test add stos or pop mov stos adc sbb test sbb mov loop cmc das push cmpl mov pop roll jnp out sub mov cmp pop xchg gs sub aad dec test in xchg sti push nop lret mov dec mov xor test sbb out sbb icebp sub aad pop arpl mov fistpll cmpl add xchg cmp out pop xchg into or int3 sbb cmpsb loop push mov add jb in pop adc lcall sub sahf fnstenv jle icebp dec xchg inc movsl call pop inc jns sub js call add in insb cmpsb loopne push (bad) add jae clc push (bad) sbb lret add xchg mull hlt cs fcoms dec xchg imul cmp scas call test lret jns in es lcall cmpl lods in sub rorl lret jns out sub aam dec adcl push push mov (bad) cmp add nop leave and dec cmpsb or add je out pop pushf sti std jl imulb push cmpl fsts dec test cli xor push mov and dec cmpsb or cmp and inc (bad) cmp lret push aas jns ljmp dec (bad) mov fsts dec test das push fcoml pop shlb int3 pop inc jnp out sub mov fistl or mov daa popa lcall fs fdivs insl cmpsb loopne leavew sub lret add sub pop mov sar imul lret je out pop xchg fnstcw jbe add jae cmp mov ds (bad) aaa jo jecxz push lcall mov and xchg rorb inc jg sbb aam arpl xchg add jno jecxz push popf cmc fstps (bad) cmovs sahf xlat adc fwait aam inc jg lock icebp inc jp cmovns repnz mov and inc xchg add add in push nop leave add je out add loopne dec xchg daa data16 repz loope je cmp movb je out xor iret or mov es cwtl fcoml (bad) (bad) aaa jno in push xchg in outsb cmpsl add js ljmp add add sub out push arpl loope mov daa arpl adc sub mov xor sbb stos cli push scas in daa pusha repz jp out daa popa lcall sub js sbb call adc mov and xchg rorb pop movsl loopne pop mov bound mov dec test fstl push mov xchg out sub (bad) punpckhdq cmp out sub aad push outsb call and pop xchg rorb inc jl inc xchg int inc jns jmp pop xchg rorb inc jl sbb ficomp push (bad) (bad) call addr16 dec mov cld dec icebp dec scas adc (bad) std ss loop mov cmp and int3 add and cwtl divl jno add aas js jmp lcall jbe jmp fisubrl addr16 dec test (bad) mov fsts dec out imul icebp inc test fs ficoml dec test cmpsb or mov ficoml mov cmp in push (bad) add jb in push xchg in sub fs (bad) sbb cmp mov and xchg int3 push shrb mov xor push mov xchg es and cmc cmp pop popf divl jb jecxz xchg call int inc jns jmp in inc lods adc movl ljmp call push cmp cltd rcrb jns jle,pt out sub rclb enter inc cmpl xor loopne push (bad) movl and repz clc xor das (bad) cmc inc jg mov fidivl mov jns and inc cmpb mov sub aam inc jg icebp sub add rorb inc jge lock mov pop xchg rorb inc jle mul inc test ljmp loopne push nop leave add scas call or fistp push nop in push nop leave adc push fcoml add cmpsl adc sbb js,pt jmp ficoml xor push mov add jbe adc push mov adc fsubrl push ficomp push mov or push mov add je add jl add xchg into pop inc jp in es mov cmp inc jl notl and aad inc cmpb xor fcoml jae clc xor fcoml dec xchg stc xor pop dec fwait in sub clc xor add aas cmpsb or xchg fstp aas mov ficom push mov (bad) jbe cld xor push mov (bad) sti push mov jns push cmpsb adc in inc jg icebp sub cmova imul movl dec mov dec mov stc xor fistl add adc cmp mulb push inc cmpb adc mov int inc jns add pop xchg into pop aas js jmp repnz cmpsl loopne push mov (bad) arpl (bad) jo loop push mov add jb jecxz push scas jmp pop xchg (bad) xor jmp pop xchg and movsl ficomp push mov incl pop xchg rorl inc jg repz dec scas in es lcall mov sub (bad) adc dec test (bad) (bad) cmp out pop xchg int3 push inc jns in and inc mov enter fiadd dec mov inc jle icebp sub adc lds js ljmp jp in and mov add je adc das imul add jbe xlat sbb (bad) jo loop push or leave add xchg iret or inc cltd loope push mov es cltd in stos add pop cwtl rorl into cmp aad dec (bad) mov insb mov fcoms dec test or push dec mov das xchg out das push add push mov incl cmp out pop xchg lret sbb pushf aad dec (bad) mov fistl scas lock repnz push mov lock adc jbe sbb cmp scas out pop sbb fsts dec test fstl push mov sub repnz pop rorl mov fcoml dec mov in push nop leave add xor lock aam inc cmpb inc pushf (bad) adc lret jmp aam stos stc xor test sbb movl or clc cmp out sub cmpsb add rcll mov std cmp stc adc (bad) movl and cmc cs xchg cli xor into or xlat adc add or jg repnz add movb ja ljmp dec mov sti xor cmpsl loope push (bad) movb lcall dec xchg cmp loope push mov mov dec mov das imul mov lock aad dec cmpl adc ds std cmp pop xchg (bad) inc cmpsl repz movd cmp stc dec mov (bad) out xchg or pushf jmp in es cltd rorl jg repnz lds pop xchg int3 push inc jns in es lcall inc jg mov std aaa jno and sar push fsubrp data16 sub aad dec cmpl bound mov or rorb inc jge cmp cwtl rorb jg rorl fistp push mov std outsl cmpsl loop pop pop xchg int3 add and pop stos out jns in and sar jno jecxz push mov lods pop xchg add js in and icebp sub fcoms dec xchg cli xor sbb lock mov inc cmpl mov and inc jp in and add int3 push aas js jmp pop xchg rorb bound jmp pop stos or jae in push (bad) lods and test sbb xlat or lock aam inc jg icebp cmp rorb inc jg inc lods repnz mov rorb add xor push mov (bad) aaa jo mov add jne call or loop jo in push mov xor push mov ret cmp jns dec mov mov pop cmpsl in push nop leave add ret xchg lret ja cmp (bad) jo aad mov sar insb movsl mov aam dec cmpl jae jmp jg icebp sub and mov es lods test pop movsl loopne push mov add jne icebp xor ficomp push (bad) movl jmp pop xchg rorl outsl test push jb clc xor ficomp push mov std aaa jne mov fstl push mov cld aaa jo mov adc mov (bad) jbe ljmp shlb rorb gs xlat adc xchg rorb inc jge out daa pusha cltd aam inc jg mov and xchg iret or mov aas xchg cli dec mov sti xor fdivrs mov daa pop cwtl rorl inc sub scas call or push mov sar insl cmpsb fildll cmpl inc jp jmp pop xchg lret add jns out sub aam dec (bad) mov (bad) movl push push nop leave or fstpt jb in pop mov or cmp pop cwtl rorl inc and mov and xchg into pop inc add jge icebp sub aad inc cmpb fs xlat adc or xor or jbe cmp mov mov push mov cltd rorl jmp push aas js inc cwtl std arpl (bad) push inc jg lock add ja cmc cs fstl dec xchg stc xor pop shll popa fwait aam inc jg repnz push add jmp sahf xlat cmova xchg shrb sbb (bad) (bad) outsl cmpsl loopne lds inc jg out daa pop xchg iret pop aas jbe out push lea insb aam pop xchg leave add jae in push nop loopne cmp mov sub aam inc jg icebp sub cmp out pop xchg lret add and or and lret push aas jns in es cwtl rorl inc sahf xchg push pop xchg lret add jbe out pop xchg lret ficoml xchg clc xor fcoml xor (bad) sbb loope popa fwait aam inc cmpb or mov sub (bad) adc mov sub aad dec (bad) mov fistl fldenv pop cwtl rorb mov leave adc cmp in pop xchg lret add test stc xor sbb nop rorl lret jp in daa pusha lcall scas jns add je out pop xchg int inc jns in sub ficom push mov cld outsl test cmp xor std aaa jno in cmpsb or nop fistl push mov sti xor cmpsb fistp push mov jns (bad) cmp jecxz push (bad) add jae sbb cmp call push mov out jp sbb (bad) jb out pop xchg int inc jp cmp mov and dec movsb add mov pop lahf cmc pop ret mov (bad) adc and dec xchg sti dec mov cmpsl adc sub or repnz fcoms push fsubrl fs ficoml dec xchg fstpl pop xchg lret jmp xchg add and mov add je add and xchg fstpl push mov (bad) cmp and int3 sbb insb aam (bad) sub dec scas adc aad nop out mov arpl sub lret xor sub add pusha sub jnp add ja ljmp xchg jmp rolb xchg adc roll loop cwtl out inc cwtl jecxz scas add mov popa mov mov push mov icebp push lods add scas adc fwait sbb or rolb std jbe dec mov insl (bad) sbb test rcrl mov addr16 mov mov gs sahf out dec mov xchg push int3 sub int3 sbb clc dec lahf icebp dec fwait ljmp cmp int3 sbb outsb mov pop scas add jns cmp inc cwtl icebp inc cwtl ljmp ljmp sub pop mov stos pop addr16 xor dec mov inc xchg in sub shrb int3 xchg inc cwtl add pop mov sahf add sub mov add cli dec xchg repnz cwtl xchg decb adc imul xlat sub pop jb adc das sbb jns sbb mov adc js sbb xchg js sub insl (bad) xchg jae sub daa xchg std imul stos adc dec sub int mov popf (bad) xor xor decb lock mov outsl rorb scas std dec mov fidivrl inc lods sbb (bad) aaa cmpsl sbb in pop (bad) jno push lods or sarb dec loope mov mov loope aam jg and fisttpl xor dec cmpsb add cmc (bad) push mov pushf or fiadd rcrb xor sub mov gs cmp flds dec shrb into xor cli xor out pop mov jae roll mov ret push je in arpl (bad) jne call or loope add dec mov loope test mov xchg pop cmpsb loope push add add mov imul loope mov fild pop push mov add je out pop xchg lret add mov imul cmp mov push pop xchg int3 push inc jnp add sub xchg add mov and aas ja push popf xlat adc mov fistl push (bad) movl and into pop inc jp out mov repnz pop mov test int3 push aas jp in daa popa pushf (bad) adc mov sti ss inc cmpb mov cmp jmp (bad) lret add jecxz imul xor push (bad) movb jb in js in daa pusha lcall sub in fnstcw lcall bound mov (bad) cmp jecxz push mov add jb out pop xchg int3 sub adc mov ficoml push mov inc jnp out sub push repz mov mov fistp push (bad) (bad) and rorb inc add sub lret dec (bad) das mov add je out imul enter scas jmp or mov sub xlat xor loop push (bad) add lods call ds cmp and rorb jg push dec xchg stc xor test leave add int3 sub jmp or jle lock rorl fistl dec test fcoml push (bad) add je out pop xchg lret je in jle pop push push cwtl or out pop xchg iret or mov sub (bad) xor cmpsl loopne push mov movl push sar jae out pop xchg lret add movsb repnz lahf fsts dec test fcoml dec mov push pop xchg int inc jp in daa outsb lret das (bad) fsts in push nop ljmp ljmp mov add fs cmc inc xchg sbb add mull daa (bad) (bad) das outsb mov movsl std inc (bad) xlat adc add repz sbb dec notl lret push inc jl cmp or mov add js in sub xlat mov (bad) adc sar outsl test iret or cmovnp stos in pop xchg iret or add fisubr mov ret std aaa jb out pop ss dec cmpl and out push add int3 push inc jnp out sub mov fistl cmp notb lret js in es fwait aad dec test cli xor cli xor pop xchg rorb inc jg std aaa push push loopne push mov add pusha lcall lret add daa popa fwait aad dec adc dec mov std aaa jae jmp or cmpl xchg iret or repz mov repz mov add jne add arpl ret (bad) cmp xor pop xchg into or mov fistl test into or mov sub fistl pusha ficom sbb aad dec test call ret (bad) cmp call or cmpl sub fsubs (bad) jmp cmpl iret or cmc cmp test pop pop xchg int inc jl icebp sub ficoml mov repz nop lret jp pop inc jge and fsts dec mov std cmp out pop cwtl jb cli xor js in daa popa fwait aad (bad) es fwait (bad) adc ret jb out pop xchg out pop xchg rorb xor loop push xchg int3 pop pop dec lcall xor loop push xchg lret mov sbb enter mov daa bound push push mov add jbe jmp pusha fwait (bad) adc sar jno add add mov sub ficoml cmp cli mov xlat adc (bad) cmp call lods jmp insl cmpsl loope push (bad) movl repz push mov add je jmp jle icebp sub fcoms push mov std aaa jno or mov ja,pt jmp pop cwtl rorb (bad) (bad) cmp jmp or xchg into or mov fistl cmp or mov ficomp push (bad) enter mov cmpsb adc mov or fcoml push xchg sub in daa pusha fwait aad dec test loope push test and rorb xor sbb lret sub adc ret jo in lea fcomps push mov adc lock cmpl (bad) add cld outsl test sbb cmp jecxz push mov (bad) cmp loop push xor movsb ficomp push mov (bad) cmp in lcall inc jg repz fstl push mov (bad) cmp out pop xchg int inc jp in cmp jle repz dec xchg sti xor lret js in es lcall imul add jne jmp or (bad) mov jg repz dec xchg cli inc (bad) and rorl cmpl ficom push mov cld outsl test sbb add jb in int3 sbb add jne call or cmp mov and xchg rorl inc jg bnd icebp sub adc cli xor test sbb nop lret js in (bad) adc sar insl cmpsl loopne push mov add test jb out pop xchg int inc jnp out inc jle repnz mov (bad) (bad) cmp out pop xchg into or mov ret push dec cmpl pop push mov (bad) cmp push (bad) add pop cwtl rorb fwait aad dec test cmpsl loope push (bad) add js in es fwait loop in cmp and or repnz mov inc jp out sub add adc (bad) adc mov fstl push mov (bad) cmp out pop stos in adc mov cld xor push nop leave add shll pop xchg int inc jp out sub aad pop xchg rorb jg repz push mov std aaa jno out pop stos in adc mov loopne push (bad) movl pushf (bad) adc mov fnstsw mov and dec (bad) mov fstl push mov (bad) cmp out or add pop xchg iret or mov xchg fistp push (bad) movl inc jge icebp sub lahf ficoml mov cld ss in fs fsts dec insl adc xor xor test movl inc jle icebp sub ficoml dec xchg fstl push mov std outsl test mov and or mov add out insb lret or mov dec test loope push (bad) add xchg into or mov hlt inc jl lock adc mov jo sti xor push (bad) sbb int3 push inc jp in daa popa fwait aad dec cmpl leave leave adc aaa jno in pop xchg int3 push inc subb mov daa popa popf (bad) adc mov stc xor sbb add jne call in js cmp cli cmp in pop xchg int3 add daa pusha cltd rorb popa lcall mov ficoml dec xchg cli push mov mov clc xor sbb lret ja jmp pop cwtl rorb in daa popa fwait aam dec cmpl cmp and into pop inc jp add mov sub adc mov fstl push mov std aaa jo nop ficoml xor push add add cmp out pop xchg lret add cmp add rorl sub lahf repnz repnz or out daa pusha cltd rorb pop test mov loopne push (bad) enter aad dec (bad) mov fcoml push mov cld ss jecxz in cmp out pop xchg int inc jns in and mov pop mov sub sub mov adc mov cli xor cmpsb loopne push mov (bad) (bad) fs fcoms dec test fistp es repz cmp mov dec mov stc xor fstl xor ficom dec mov cli push in aaa jb in pop xchg lret add and testl fwait aam dec cmpl in push nop leave add xchg int aas js jmp jmp sbb add jb in push incb mov fistl std ss (bad) cmp out pop xchg int inc jp in daa popa lcall rcrb nop lret ja ljmp and sub push push mov and into or mov daa pusha lcall sub xlat adc repz dec mov cld mov cmp in pop xchg int3 add and mov ret std ss jecxz push nop leave add daa bound imulb push pop push mov (bad) cmp in push nop leave add jne add jns in daa popa fwait aam inc cmpl ret add lods in pop xchg lret jbe jmp jno out pop xchg int3 add and es fwait aad dec (bad) mov fcoml push mov (bad) aaa jno add add pop xchg iret or mov sub clc pop shrl cmpsl loopne push mov js in es cltd rorl cmpl ret hlt das imul scas out sti xor add loop push (bad) add pop xchg in sub adc stc xor sbb movl popf call or mov sub (bad) adc add jne call or mov push aad dec xchg fnstsw movsb add dec test fistl add je out pop xchg out sub (bad) cmovns mov (bad) (bad) aaa jo repz ljmp jg repnz pop test or adc dec xchg rorb sbb push (bad) add mov and lcall xor ljmp (bad) adc mov cmp out pop xchg int inc jp out sub in daa popa fwait aad dec cmpl sbb movb jae out lock fcoms dec xchg loopne iret or lock (bad) adc mov repz mov add cmp call or icebp mov adc cli xor cmpsl loope push mov add add ja jmp pop cwtl rorb inc cmpb sub mov sar outsl test lret add js in xchg loop push nop lret ja ljmp rorl cmpl ret std aaa jo add jne call or mov sub (bad) adc mov (bad) mov fcoml push lcall das imul sar jo jecxz push xchg lret add es cltd aam movl and xchg rorb mov fistp push mov (bad) cmp out pop movsl jecxz pop xchg int3 push inc jp out sub (bad) adc mov loop lret jns in es lcall clc jne sti xor push (bad) add cmpsb jecxz pop xchg int inc jnp out sub fcoms dec xchg sti xor adc ss in pop xchg lret add add xchg iret or mov sub adc (bad) adc mov jecxz push xchg lret add js in daa pusha lcall test sbb nop lret ja jmp addr16 mov and inc cmpb xor fistp push (bad) enter mov and cwtl rorb cmpb (bad) add pop cwtl rorb inc jg repz sti xor pop xchg int3 push inc jp add pop cltd rorl das push ficom push mov decl ss in pop xchg int3 add and rcll lret add es mov sub fistl push mov (bad) cmp out pop xchg into or sarl inc jnp out sub (bad) adc shrb sub dec mov cld ss jecxz pop scas ljmp jg repnz dec xchg sti xor fistl aaa jno in pop xchg int3 aaa (bad) mov fistp push (bad) movl and and rorb cmpb push push mov (bad) aaa jno cmp test sbb test imul test pusha scas call add and iret or fcoms dec xchg loope push (bad) (bad) (bad) cmp in push movsb inc (bad) add je out pop xchg lret jne out fs pop inc jp out sub inc jle icebp sub adc xor lret jbe jmp push inc jns dec xchg int inc jns in and inc jnp in daa jae jmp pop xchg rorb inc jge out sub rorl fs push mov mov fstl push mov fsts dec xchg ficom push mov sti ss add jae out pop xchg lret add ja jmp or pushf rcrl fdivrs add dec cmpl aaa cmpl cld outsl test sbb cmp add add rorl inc jno repz dec xchg stc xor loope push cltd leave movsb std push stos or mov pop mov pop mov push mov mov push movsb (bad) dec sahf test xchg out mov adc or push pop stos std dec lahf cmc js and and jae push imul xchg in mov ja push movsl (bad) dec mov inc fwait out outsl (bad) sbb pop ja sbb ret sbb sub test xor sub js cmp xor jge pop enter push test mov fs push scas add cmpsb cli push mov outsl lret push jb and sub sbb lds rcrl or or mov pop stos outsb xlat sub fldt adc jecxz mov inc xchg jmp (bad) in mov imul jns jae out pop xchg int inc jge out xor dec mov or sub adc sub sti xor push xchg or int3 push aas jns in and inc cmpb cs cmpsb fistp push mov add jae out pop xchg int dec popa fdivrl popf add xor jle and rorb cmpl jmp or mov daa popa lcall aad cwtl (bad) dec mov (bad) aaa jo loop push mov and rorl test cwtl in inc stos cmc xor fstl push xchg inc xchg int inc jnp out daa popa fwait aad dec xorl addr16 dec mov sbb int3 add and xchg rorb arpl sub xchg sti xor lds dec xchg cli xor loopne push mov (bad) cmp in pop xchg into sub ficoml dec mov sti inc cltd sti pop fwait xlat adc cs xchg frstor test fstl push mov cld outsl test leave add jne out jbe ljmp lcall in je add iret adc lret add and inc jge repz dec xchg push push nop lret ja notb or mov push xchg lret add ja ljmp in pop xchg int inc jnp out sub aad dec (bad) mov (bad) push xchg in inc cmpsb cld cmp in enter ret std ss in push nop lret xchg sti xor cmpsl loope push (bad) (bad) (bad) cmp in push nop into pop inc jp add jle repnz pop jge aas xchg cld cmp adc cmp in push xchg int3 pop inc jnp out sub aam inc cmpb adc mov fbstp jo in jnp inc mov (bad) cmp in mov cmc addr16 dec xchg add je out pop xchg int3 push aas add out sub aam inc cmpb xor jb adc mov fistl sub aad dec (bad) mov jecxz push nop leave add mov and or mov sub cmp (bad) dec mov cld ss out pop xchg int3 add mov and inc cmpb push pop xchg lret add and xchg rorb inc jl rsqrtps cmp and iret or mov sub (bad) pop movl and int inc jp in es lret mov cld xor push nop lret xchg sbb jle repnz lahf fcoms dec test pop mov fistp push mov std aaa jo jecxz mov in and inc cmpb fidivr cltd cld pop mov sub aad inc jg test pop jbe cmp adc push sti xchg add adc or xor leave add pop cwtl shlb dec test fistl mov es and adc or iret or mov sub aad dec test inc lods call or sbb cmp adc add and cmpsb repz cld dec frstor pop xchg lret add jbe ljmp js jmp mov ss stc dec sbb push mov add sbb adc mov fistl xchg or xchg rorb inc jl out sub aam inc jg pop stos add push test sbb (bad) jo loope push mov (bad) cmp daa jae jmp or mov es cwtl rcrl out pop xchg int jnp xor loopne pop xchg icebp sub dec test ficomp push mov movl xchg rorb addr16 dec xchg sub int3 or mov sub divb imul cmpsb fistp push mov std outsb test adc xor loopne push (bad) movl mov pop push mov sti xor cmpsl (bad) cmp in pop xchg lret jns in es cltd rclb leave mov cmovns sahf xlat adc inc mov add pop lcall push mov add js in es lcall movl and into or mov xor jmp cmovns loopne push mov (bad) cmp and int3 add sarl jp in es cltd rorl int dec xchg sti xor test sbb add inc mov ja sub cmpsb or in sub hlt cmp jmp pop inc rsm cli ss jecxz push nop lret add hlt xor fistp push (bad) movb ja in es cltd rorl pop xchg rorb inc jge lock (bad) cmovp xor jecxz push nop lret fsts pop ret mov add pop mov fcoml xor pop cmp sub adc mov jle icebp sub fcoms dec test loop push nop lret xchg rorl dec (bad) mov fcoml add mov cld aaa and sbb (bad) jno in loopne gs fcoms dec test jb,pn out pop xchg into or adc lcall aaa xchg aam dec cmpl pop push mov jg cmc das imul lods out gs fsts dec stos in add iret or mov sub adc cwtl rorl sub lahf fcoms dec or lret add and inc cmpl loopne push (bad) movl and into or jne (bad) sub push test push scas adc lods adc lds fdivs jle repz out mov mov inc (bad) fstpt cmp sub pusha lret sub mov decb or lods jmp add jae in push (bad) lds add mov and xchg call or or mov and call add and xchg into push aas ja adc frstor xchg iret or fidivrl xchg mov cmp mov dec test loope push mov (bad) cmp out pop xchg int3 add (bad) loop pusha cwtl rorl pop lret std cmp jecxz jge cmp arpl into push jbe,pt out push pop or mov and shll pop xchg fnstenv push outsl into sub gs out mov push aas jns jmp pop xchg into push aas ja jmp pop xchg int aas jp xor repz sub jnp adc mov mov in and mov inc jnp in es xchg rorb inc xchg adc cmp fcoms dec (bad) inc icebp gs and mov addr16 sbb leave add jae jecxz push mov (bad) outsb cmpsl fist push mov dec test bound int mov es test push mov std outsl cmpsl loopne push mov sti xor movsl fistp push mov cli xor mov dec lods rcpps xlat aaa xchg fcoms dec xchg (bad) rorl pop cwtl add add or mov and leave add jb loop push mov push mov je es test lahf add cmovp inc jl in es xchg iret or add push ja,pt out pop nop clc pop mov inc (bad) xor mov or ljmp jbe out push pop (bad) cmp in push (bad) (bad) orl (bad) pushl outsl lds mov dec test and inc test (bad) (bad) outsb cmpsb fist dec xchg fsts dec (bad) mov xchg out das push xchg dec mov das push xchg icebp push cltd rorl jge out daa pop xchg rorb inc jns ljmp jne out push (bad) adc std xor push cltd and cli pop movsb fistp push mov cld xor or es xchg iret pop aas js call add (bad) in lds sbb cmp mov sbb rorl dec movsl xor sub bound mov and xchg int3 add pop pop nop leave add cmp fwait loope push mov xchg sub pop push mov std outsl test sbb ret cld xor push mov sti xor sarl (bad) mov test push push pop add (bad) loope mov (bad) cmp in push (bad) add jae in push nop leave add je out pop xchg sbb clc xor fstl jbe in and add xchg int3 add jbe out pop nop leave add jb call add jae jecxz push (bad) or mov sub aam dec or out (bad) lret add jns jmp jb xor jmp pop xchg into pop aas js ljmp jns ljmp je leave add pop fdivrl mov cld xor sbb xor jge out sub rorb inc jnp in daa pop cwtl rorl inc jp in and (bad) std xor push decl add and jo in add add push nop leave add je out pop xchg lret ja ljmp jp arpl lret add xor fistl test mov fcoms dec cmpl dec cmpl dec (bad) adc out daa pusha fwait aam inc cmc xchg inc mov sti xor outsl test sbb and ficoml push fstl dec mov cli xor cmpsl loopne push mov std xor ficom push mov cli xor add inc js jmp mov daa pusha cltd rorb inc jge out sub rorl popa cltd rorb inc mov push in push mov (bad) cmp add divb imul pop push mov cld xor push (bad) movl pop pop xchg lret movsb punpckhwd mov fnstcw jl out daa pusha cltd rorl push mov pop xchg lret add jne out pop xchg lret add call adc mov dec xchg into pop inc jp in xor or mov rclb mov adc xor fidivr shll loop mov pop mov imul (bad) and add addps xor or cwtl fbld fs inc xchg adc imul scas mull jno or (bad) outsb rcrb pop movsb ljmp int3 adc in jno add es mov inc xchg adc in jno or fbld insb int pop mov add jge or frstor imul repnz or cltd fbld insl mov data16 add loope mov push lods cmc cmp mov pop dec xchg frstor mov inc (bad) xlat push lods repz out jbe push dec xchg call push add arpl adc jmp push cwtl fbld outsl mov dec (bad) xlat pop scas idivl xchg adc jnp sbb repz jmp jp or fwait jecxz jae mov push lods repz lret adc jmp dec xchg (bad) mov inc mov daa jo or fwait in jne add dec lods dec nop leave add je negb xor ljmp cwtl rorb inc jg repnz lahf fldcw imul inc cmpb loop push xchg or scas jnp pop mov ret std js insl adc mov dec lods repnz push cmpl sbb (bad) jb in xchg clc push mov jae push inc cmpb pop scas ljmp ja or jle out sub mov sub rorb inc jnp in and cli jnp inc xchg rorb inc jl out rorl adc fcoml xor (bad) aaa jno in push cmpsl in push xchg leave add jae in push (bad) (bad) sbb dec (bad) mov cwtl rorl inc jl out sub aam inc sub mov outsb lds inc jge out daa pusha cwtl rorl inc jnp in jmp cmpsl loope push mov (bad) aaa jo loop sub dec mov sti xor cmpsb fistp push mov pop pop xchg lret add cmp pop xchg rorb inc jl lock arpl sar insb movsb fidivr push mov (bad) aaa jo loop push (bad) movb je push dec cmpl xlat cmova fwait shll in dec nop lret ja ljmp push pop xchg into pop inc jp out sub rorl mov (bad) jno in pop xchg lret add and lret cmp mov add fiaddl jmp arpl pop enter mov out sub aam inc xchg ss (bad) adc mov (bad) cmp and int inc jp in sub aad dec (bad) mov scas call or mov pop roll jl out sub rorl inc jle lock cld ss loop push (bad) enter lods out pop xchg int3 add add ja,pt cli (bad) adc aad dec (bad) mov repz mov cmp out pop xchg into or mov sub add jbe ljmp jle icebp sub fsts dec xchg iret jns icebp sub push inc cmpb sar insl cmpsb fistp push mov (bad) cmp add and xchg rorb inc jl out sub aad dec cmpl lret add pushf sti cmp in pop xchg lret jbe jmp pop mov fcoms dec test fistl xor addl cmp in push nop int3 movsb push inc jge lock xlat adc mov clc xor loope push (bad) movl pop pop xchg int3 push aas jns mov push nop leave add lods out push nop into fs sbb add jae out pop mov daa popa lcall sub dec mov sti xor test pop mov out sub (bad) adc ret es fwait aad dec cmpl jecxz push xchg lret add ja ljmp jnp out daa pusha fwait jmp imul aaa jo inc mov loopne push mov cld xor push push fistp push mov std outsl cmpsl loope push mov std outsl test into pop inc jp in and mov rorb inc jp in and inc mov mov fistl imul push xchg lret jbe call jg sbb (bad) add je out pop xchg int3 add dec (bad) mov fcoml aaa jno in push (bad) fisttp cmc xor fcoml xor rclb push mov std ss loop push (bad) (bad) (bad) cmp repz lahf ficoml insb movsl ficom push mov jno imul stos inc mov xor ficom push mov cld outsl test sbb or cmpb push dec mov cld xor add add loop push mov dec test fistl mov sti xor hlt das push mov cld xor aam leave mov idivb dec lods adc lods or in xchg int inc jp in lds mov imul add (bad) dec mov cld xor mov cmp push push (bad) add lcall cmp push push (bad) add dec xchg fsts dec xchg dec jmp pop pop nop leave add jae in push (bad) pop popa lcall es xchg rorb inc jns ljmp insb movsl fstl dec xchg fstl sub rorb inc jge out es xchg shrb imul mov mov std ss loop push mov cld aaa jo loope add rorl jge out sub rorl inc jl in dec xchg stc xor ficoml dec test xlat cmovs sbb std xor dec xchg clc xor inc mov cld xor movsb fstl sub inc jg dec xchg clc xor fisubrl jnp mov rorb cmpsb icebp sub popf aad inc jle out es xchg into push push aam push pop (bad) cmp loopne push mov clc xor ficoml dec cmpl sub rorb inc jnp in and rcrb push (bad) (bad) outsb cmpsb fist dec xchg adc int3 add sbb outsb cmpsb ficom push mov pop push mov std xor dec xchg fsubs mov call add jb loop push mov inc jns ljmp jne in pop xchg leave add jae jecxz pop xchg into pop inc jns jmp jbe clc xor ficoml dec cmpl or rcrl push (bad) (bad) outsb cmpsb ficom push mov stc xor ficoml dec test (bad) cld xor dec xchg aaa outsl test sbb ret insl movsl ficom push add jecxz push mov (bad) cmp jo loope push mov std outsl cmpsl icebp das cmpsl inc jle lock iret pop aas mov ja jmp add je in push nop or cmp loop push fcompl push mov cld xor popf aad bound mov daa pop xchg rorb inc mov outsl test sbb ret sti xor test sbb ret call add je in push mov add jno loop push mov adc mov aad inc jg lock rcrl jecxz push (bad) (bad) outsb cmpsb ficom dec xchg inc jnp in and xchg into push aas ja call add je add lods in push (bad) add je in push mov cmpl mov daa pop xchg shrb jmp pop xchg int jno jmp pop xchg into pop aas ja call sbb pop inc jns ljmp js ljmp (bad) (bad) pop mov ret mov sub call arpl es dec loopne mov movsb add cs shll ljmp lahf adc inc jnp jmp (bad) data16 push mov stc xor fcoms dec mov inc movsl or cmc sub dec (bad) mov xchg sbb (bad) std outsl test add and iret or mov and int3 add and int ds rorb pusha cwtl rorl inc jnp jmp pusha xlat and int3 add jne out pop nop leave add cltd stc xor fcoml xchg xlat cmovs fwait rorl cltd rorb inc jl in es xchg rorb inc jp jmp pop (bad) xor push dec mov stc xor fcoml cwtl icebp sub push inc cmpb or sub rorl pop xchg iret or mov daa pusha lcall sub push xchg xor movsl lcall adc sub or nop in dec test (bad) ds (bad) jl pop jle sbb sub sbb add mov test es pop jo adc push push sub and adc push push call (bad) dec cwtl jmp lods decb icebp inc xchg jecxz xchg sub cmp mov and int3 add and adc mov xlat cmovs pushf aam inc cmpb push (bad) (bad) (bad) cmp loope push mov cld dec int3 pop push mov cld xor movsl ficom dec mov stc xor iret pop inc js jmp add and int pop scas pop pop xchg iret pop dec lods push jb sub inc jg repnz cmovs fistp push mov cld xor push mov std outsl cmpsl jmp push mov rorl inc jge out es aam pop xchg lret je in push pop (bad) cmp fistl test xlat adc mov adc rorl jge out es xchg iret pop inc jns jmp sbb cmp in push pop add jno (bad) cmpsl fistp push mov cli xor adc xor loopne push mov clc xor fsts dec cmpl xor fistl outsl test sbb (bad) std outsb cmpsl loopne push mov cld xor cmpsb fistp gs xchg lret je in push (bad) add jno loop loop gs xlat adc mov aad jp adc mov aam inc jg lock xlat cvtps2pd pushl jo and out movsl add adc loopne out movsl pop gs mov inc jg icebp inc pushf in aas (bad) inc cwtl repnz mov pop xchg inc sahf cli push mov outsl int3 sub je sub out or cli pop mov push mov inc mov jp cmp push cmpsb testl xor add sub lret mov push cmpsb clc inc xchg in mov add add out aas nop loopne jg fidiv add add sbb mov dec test fcoms dec (bad) mov fidivl jno loop push mov std outsb cmpsb ficom dec mov clc xor fidivr std outsb cmpsl fistp push mov cli xor fcoml int3 add push push (bad) add jo loope jno loop push mov (bad) cmp jecxz push (bad) (bad) (bad) aaa mov jmp pop xchg int ja,pt out mov in push mov (bad) outsb cmpsb ficom dec xchg fldcw push or imul xchg stc xor fstl xchg fstl push mov clc xor ficoml dec cmpl push inc jle or cmpl inc jle out daa pusha cwtl rorl lods imulb addr16 fcoms dec cmpl xor ficoml dec add sahf fcoms dec (bad) mov aam arpl out sub rorl inc jnp in stos hlt sub inc jg out daa pop xchg iret ja stc xor fistl das push (bad) jno loop jo jecxz push nop leave add ja jmp or aad inc cmpb or out push nop enter test (bad) (bad) outsl test xor fstl xor ficoml dec cmpl int aas ja call insb mov es xchg iret pop aas ja out push (bad) add jb jecxz push mov sbb (bad) aaa jo loop push mov (bad) outsl test lcall cmp in push mov jne clc xor ficoml dec cmpl inc cmpb and int ja,pt add and inc jns hlt lcall cmp loope push mov ja stc xor fistl test push bound jge and sbb or outsl shrl xchg jecxz adc pop test inc lcall decb hlt inc cltd jmp mov dec xchg pop pop mov push test fadds loop (bad) fistl push (bad) notb std jo inc jnp outsl fiadd inc cmpsb cmp jb or hlt fild icebp push mov push pop xor daa pop cwtl xlat xor popa lcall dec jg out sub rorb inc ja call movsl ficom dec mov sti xor fcoml test stos hlt cs xlat cmovs lcall inc jns jmp pop xchg int ja,pt call add imul clc xor fsts dec (bad) les enter stos loop push mov cld xor movsl divl push fistl dec test fcoms dec (bad) mov jae in push pop add jno loop push or pushl outsl cmpsl loopne push mov stc xor fcoml jg icebp sub or sub shll (bad) pushl jo loopne push mov cli xor mov or jl mov rorl dec cmpl rorl pop mov sub push inc jg lock and stos jecxz push mov cld xor dec xchg movsb out daa pusha cwtl rorb inc jns jmp pop aas ja add jno loop push mov sti xor movsb fcoml jp in and xchg int cmp push lahf jae imulb data16 xlat cmova pushf aam inc jge and out dec stos stc xor push mov sti lret sbb (bad) outsl test (bad) jb cmpl decl mov out sub rorl inc jl in and inc js jmp mov and inc jp in and xchg into pop hlt aas js ljmp ret loope mov sub sbb mov push jbe xor sbb add cmp and sbb lret sbb mov push lahf in ds xchg clc inc xchg loop jnp adc cmp pop insl mov inc sbb jecxz mov sub inc xchg or es and push jbe,pt out pop xchg leave add jae test pop cltd rorl loopne mov movsl repz dec test fsts or leave add jae in push nop leave add je out pop test and int3 add and int inc jns jmp je out testb in and aas js jmp sar push fistl test imulb push xchg stc xor fcoml xchg xor arpl dec mov add in push mov jecxz push mov add jb jecxz push lods call add xchg lret add jne in add cwtl in pop xchg lret pop push das imul jo loop push mov es cwtl rorl inc jge out sub aad inc jg imull and fs sti (bad) lds xchg or sub rorl sub cmp loop push mov std outsb cmpsb ficom push mov push push xchg leave add xchg std movsb xchg loope push mov add jno loop push mov (bad) aaa jo (bad) aaa outsl test sbb (bad) jno in mov (bad) stos in lahf pop pop cwtl rclb (bad) pushl outsl test sbb ret imul xor fcoml xor adc outsl scas out push (bad) pop inc jnp popf jmp push aas js (bad) cmp loope push test (bad) cld xor movsl fstl in (bad) inc xchg out nop loopne adc ja sbb rcll mov push movsl sti dec popf in ds push stos add push mov jns push jne xor sbb ret pusha mov push sahf hlt dec popf lock mov jle adc mov xlat adc pop mov sub rorl inc jl in es loopne push (bad) (bad) (bad) aaa outsl test push push (bad) add xchg iret or mov and inc popf jmp test adc jo js add (bad) aaa jo jecxz push (bad) (bad) jno jecxz push stos jecxz push (bad) sbb adc popa leave sbb xchg out lods or jg push aas js jmp pop inc js ljmp movsb add les test push mov lds out sub aad inc jg icebp sub push cltd rorb inc jl out sub or js jmp add inc cmpsl or ds jns aaa xchg out ss in push xchg add push aas popf loope mov inc cmpsl add adc inc jge out es xchg iret sbb jle jle add je in push mov pushl jo loopne push pop pop mov insl lods out pop popf or and rorb inc jl out daa pusha cwtl rorl inc jl out push fcoml xor ficoml xchg cmc push mov jbe,pt out shlb clc pop stos out push stos push fldcw pushf fnstsw push stos out pop mov jo xor add jae in push mov sub mov xor shlb mov lods adc push les dec test xlat cmovs pcmpeqw cmp lahf add sti push dec mov (bad) and ret adc pop jb sbb and and pusha loop test mov aas fwait notb or mov sbb mov push test dec test mov inc lcall roll jns and bound dec xchg call xlat inc stos adc dec movsb decb repnz xchg call ja push insl mov daa adc jae pop outsl mov outsl les bound inc xchg out add clc inc xchg fildll (bad) adc mov ds loop jnp pop test and or out cmp aad jo pusha and (bad) jecxz subl outsb (bad) sbb or adc mov dec popf in ds loop pop insb mov add add call repnz xor insb aad test je sbb pop scas add (bad) push mov aaa mov sub lret sbb mov mov mov dec mov arpl je and push jae adc (bad) sbb adc adc cli gs cmp popf repz push insl mov pop lods cltd std dec pushf jmp mov cmpsl punpckhdq push stos std dec sahf fildl loope adc insl aas lahf icebp inc mov inc xchg jecxz test push mov popf add fs mov dec pushf icebp dec xor movsb cmc dec stos sbb enter adc adc push pop mov aaa xchg daa jl sbb sbb fisttp sbb icebp pusha mov bound dec fwait out scas inc sub xchg daa test push mov mov pop mov jb sub and lock or sbb lcall and test inc lahf lcall mov mov jo jge cmp sbb stc pop mov ret and roll or sub inc nop loopne adc jno punpcklwd jno adc add testb xor fldt adc outsb mov loope test es sbb adc xor sbb adc add popa ret lods hlt push mov shll (bad) xor stc pop mov adc xchg sti pusha les jb cs lock (bad) daa xchg inc cmpsl add lds cmp (bad) cwtl cmc push mov outsb shrl out movsb add sbb lds add mov cmpl inc cmpb lret mov insl push addr16 lret ja push dec (bad) mov fsubs or ds inc mov adc test aas lahf and rorb inc jnp add add es xchg rorb inc jl out test imul mov outsb cmpsl loopne pusha fwait rorl inc jnp jmp pop xchg into push jbe,pt or mov es xchg iret or mov and jecxz push nop leave add jae in push (bad) add pop xchg lret jne out push nop enter lods in push mov sbb (bad) (bad) aaa jo loope push mov std xor into pop inc jns ljmp jne push fwait aam inc cmpb or mov and pop aas ja (bad) aaa jo loop push mov std outsb cmpsb fist push mov jle add pop (bad) cmp dec xchg rorb inc jp in and xchg into push inc jns ljmp jbe add jae in push stos (bad) (bad) sbb std (bad) les and (bad) xor xchg (bad) pop lret aaa cltd sub in pop ret sub adc cmc inc xchg call (bad) add testb ss es pop adc loopne movsl clc dec cltd jmp (bad) loope mov sub cld dec popf jmp mov xor and cltd out pop xchg lret add pop cwtl loop push (bad) (bad) outsb cmpsb ficom dec xchg loop push mov sbb cmp in push mov add jb or inc jns ljmp rcll mov popf ljmp test adc fcoml dec xchg clc xor fsts dec (bad) mov (bad) jle push inc jns ljmp js arpl into add inc jnp out daa pop cwtl rorl inc jle lock jmp pop inc jns in and xchg rorb inc jnp jbe daa pusha cltd rorl bound and int3 add and leave sbb arpl fistl imul xchg int3 add and loope xlat adc mov xlat adc mov aad inc adc dec (bad) mov xlat cmovs popf add (bad) jo divl imul movsl pop test sbb (bad) (bad) (bad) aaa jo loop push mov std aaa jo loop push mov push dec mov cli xor cmpsb fistp push mov cld xor cmc addr16 dec test push popf fcoms dec cmpl adc mov fcoms dec (bad) aad dec cmpl add jno clc xor fcoml xor pop lods out pop xchg lret jne out pop xchg lret jne out pop movsl loop push (bad) enter lods in push xchg lret jne movsl mov push mov (bad) sti popa (bad) mov iret xor mov mov inc sahf cmc dec mov (bad) aaa mov push (bad) xor xchg push mov outsb mov lret cs inc movsl add shrl fistpll cmc push mov jo aas jge adc daa jle xor mov mov mov inc pushf clc dec stos add fstps sbb out dec cmpsb mov addr16 xor arpl dec mov jbe cmp mov int jle xor pop ret and sbb loope mov lds outsb mov aam inc jnp cmp jp sbb (bad) jo loop push mov (bad) aaa outsl test xchg cli xor pop push mov cli xor jle repnz cmovs sahf push dec cmpl mov ficoml dec test push mov (bad) aaa jo loop push (bad) (bad) jno in es cwtl rorb inc jl out es xchg rorb inc jp or sub aam inc jle lock rorl inc jge out daa pop cwtl cmp lahf fcoms dec (bad) mov adc int3 add inc jp jmp pop xchg into or aad dec (bad) mov xlat cmovs popf aad inc cmpb imul cld xor cmpsb fist push mov lret xchg push hlt inc pushf hlt cmp or jnp add add add add jne out pop xchg int3 add jp dec test fsts dec (bad) mov icebp sub aam inc jg icebp sub aad inc cmpb or jle outsl test sbb (bad) cld xor push mov inc cmpb or jge out daa pop mov imul xchg loope mov ret adc sub rorb lods (bad) (bad) inc lcall aad jne sbb pop push mov push mov jecxz mov sub out daa pop mov mov mov xlat cmovs fwait rorl inc jl ja jmp pop xchg into pop aas js jmp push (bad) add jae in push nop enter (bad) (bad) aaa jo loope push mov std outsl test sbb (bad) cld xor push sub call add and sbb cmova popf (bad) cmovs mov (bad) cmovs sahf xlat adc mov jp in es xchg rorb inc jp jmp pop xchg add aad inc jle lock rorl inc jns add jbe call add jne out pop xchg lret add add imull addr16 fcoms dec cmpl sbb aaa jo loopne push cmpsb loopne push mov or out daa pop cwtl rorl inc jnp in and inc add xchg int ja,pt call add lods in mov or mov and inc mov add jb jecxz push mov (bad) cmp loope push mov std outsl test sbb les leave add jae in push (bad) (bad) pushl jo loope (bad) fcoms dec cmpl dec fwait (bad) adc mov aad inc jle out sub rorb inc jl in es decl mov (bad) push inc cmpl and cmpsl add pop nop enter stos loop fs inc cmpb pusha cwtl rorb inc fwait (bad) cmovs popf aad inc jg out sub rorb inc jns jmp mov cmovs fwait rorl inc jnp out jg add pop pop nop enter add mov inc (bad) fsubrl je xchg testl pop stos pop rorb fisubr into pop insb mov dec lcall xor jle cmp orl sahf hlt ret xor mov xor push outsb mov (bad) dec sahf lock xchg loop adc mov push cmpsl clc dec mov push test dec fwait ljmp and inc test movl sbb vpmacswd enter or mov and add cmp pop xchg lret add jbe call add xchg dec xchg rorb inc jnp out sub rorl inc jnp push lahf fcoms dec cmpl push inc xchg into pop inc jns ljmp js jmp add ljmp adc xor ficoml dec loope arpl mov sub rorl inc nop lret jne out pop xchg lret jne out insl lret xchg icebp aad enterw fidivrl or mov jo out daa pusha cltd rorb inc jge out daa jns cmp hlt sub jmp mov js stc xor jle add and int popa fwait aam inc jle out sub rorl dec test pop cwtl rcrb loop stos or clc scas cli xor mov jae clc xor fcoml push xchg lret add and int3 add xchg lret psrlw inc jl and push mov push jae divl imul movl push push (bad) add push mov or or int3 xor pushf jmp loop push cltd and jns stc xor fstl push (bad) add je out pop xchg add lret add fwait aam leave adc fidivrl mov xor and lock movsl loopne push mov cli xor loop jns ljmp cli les xchg neg inc adc push mov add inc sahf fstl dec mov cli xor loop jnp out es cwtl rorl inc movsb or jecxz int3 cmp cmp xchg int3 add and push aas ja call push push xchg in mov dec cmpl dec test jl or mov sub aad insb movsl fist push mov std outsl test sbb (bad) jo loop in pop lcall xchg fstpt xchg int3 add jne xor cmpsl fistp push mov jecxz pop xchg rorb inc jnp in daa pop cwtl rorl inc jge cmc popf jmp data16 sub aaa (bad) movl mov ret cld xor jne jmp or mov daa pusha lcall mov cmp sub scas hlt xchg fstl push xchg negb add sbb ret cld xor cmpsl loopne insl movsl ficom push mov sti xor cmpsb fistp push mov sti xor movsl out lcall mov es xchg rcrl sbb add ficoml insl cmpsb fistpll scas call add and int ja,pt ljmp das mov add jbe hlt xor ficoml dec xchg repz cltd rorl sub (bad) sub xlat adc mov ficoml xchg in cltd in push movsb add pop xchg lret add icebp push xchg int3 add jbe adc rcrl mov (bad) cmp loop push mov std outsl cmpsl loopne push mov or inc mov dec lcall cmp jecxz push lods push mov mov (bad) sub dec cmpl dec cmpl xor int3 sub ret cld xor scas cmp (bad) xor gs fcoms dec test add add call add and out pop xchg lret add cwtl rorl sub adc or fcoms dec cmpl das push inc jnp out sub rorl push pop scas adc stc xor or inc (bad) in push xchg int3 add and jmp arpl mov fcoms dec test fnstsw add lahf fsts dec test and test leave add je or icebp sub aad dec cmpl lret pop lods in pop mov jne jmp pop xchg into push pushf aad inc mov add sbb pop xchg lret add jae in push popl lret jae in push mov jnp add mov dec nop lret je out mov cmp lock aam inc cmpb xor cmpsl loopne push mov (bad) cmp jecxz push (bad) jmp jbe jmp push fwait aad dec test imul mov outsb icebp lods cs inc and pop test adc pop add adc lahf jmp pop xchg rorb inc jge or jg icebp sub (bad) cmovs lahf fcoms dec cmpl sti pop popf (bad) cmovs imul lods mov mov fidivrl lahf in xchg clc push mov push (bad) iret push mov pushl outsl stos jecxz push mov std ss jmp mov fisttpl imulb addr16 fcoms dec cmpl xor fcoml in pop nop lret add jne out jno daa js ljmp jno adc sar imul in push mov cld xor mov dec jmp jae in push (bad) fnstsw xchg jmp bound mov es xchg iret sub sahf (bad) cmova movsl pop hlt inc jl out daa pusha cwtl rorl inc mov inc cmpl inc add hlt sub popf aad inc jle xor add mov and pop aas jns add ret insb movsb fstpl push mov push lods packssdw add nop enter stos jecxz jno dec (bad) mov hlt xor push repnz jnp out daa pusha cltd rorl mov pusha mov imul arpl das mov jge or pop adcb inc jp sbb rorl inc test sub aam dec cmpl mov ficoml dec test cld aaa jno jecxz push (bad) add jae xor sub aam inc jg repnz sahf sbb aad inc cmpb cmovns mov mov hlt cs test xor fs (bad) cmovs sahf pop addr16 test or add cltd rorl jg push dec cmpl push push mov sti xor pop mov das push test fsts dec cmpl and fistl cmpl pop push mov pusha lcall sub adc sti xor push mov std outsl test sbb (bad) (bad) cmp jecxz jns in daa pusha cltd lock adc mov push xchg lret jne out pop xchg lret scas imulb push cmpl dec cmpl aam inc or inc jge out sub rorl int3 add and int3 add mov mov fsts dec cmpl jp in es xchg out sub roll push inc jg icebp sub dec mov cltd notl sub out dec stos or sub add cmp cmp loopne dec xchg aad inc mov inc jle out daa pop cwtl rorb inc jnp daa pusha cltd rorl inc jp in and push xchg sbb ret sti xor movsl fstl dec xchg jnp in es xchg iret pop inc js call outsl add (bad) (bad) cmp loop push mov cld xor movsl fisubr gs (bad) push inc jle push inc jle dec mov (bad) ss cmpl mov sub in push pop add jno loop push mov cld xor jge out sub out sub rorb inc jl in es xor push mov cld xor mov loopne push mov sti xor push dec xchg clc xor fcoml xor icebp sub aad inc jg lock aam inc cmpb or jge out es cwtl rorb cmp jecxz push mov pop (bad) fidiv stc xor fcoml xor test fsts dec cmpl stos jecxz push mov std outsb cmpsb ficom dec xchg ficoml dec (bad) rclb ret std add jb in push mov pushl jo push mov cld xor cmpsb fist push mov cli xor inc jl out es xchg rorb inc jns jmp pop xchg int pop test inc nop fsubrl je sub mov mov fsts dec (bad) mov pop xchg rorb inc js jmp push lods repz inc jg out aas mov sub sar insb ret std outsb cmpsl fist push mov stc xor inc jg icebp sub rorb inc jnp in and clc inc jns ljmp je in push (bad) add fildll out pop nop enter stos jecxz push testl cwtl rorl inc jnp in and stos jecxz push mov pushl outsl test sbb ret add ds or inc jle lock aad push add mov ficoml dec test jb jecxz pop push (bad) add jno loop push mov add cmp sti xor push mov std add mov (bad) cmova repnz xor cmpsl fist push mov cli xor fistl test add cmc inc xchg out mov add jno cmc jle repnz dec xchg clc xor fstl stos in push pop add jb jecxz push (bad) (bad) (bad) cmp and outsl test sbb (bad) cld xor movsl ficom dec out insb movsl ficom push mov cld xor push frstor popa fwait aam inc jle lock rorl bound cmp in push xchg lret ja jmp sar outsb cmpsl fistp push mov cld inc les dec (bad) mov ficoml dec xchg fstl push mov pop mov cmp cmp test dec mov mulb add jo xor addr16 mov mov dec test gs xor push cmp cmp in ret adc mov (bad) rorb or cli xor cmpsl loope push (bad) in cmpsb or add jp in and shrl sub fisubrl (bad) in test sub pusha lds inc jge lock pop xchg inc mov sar jb xor test dec cmpsb jmp mov mov adc mov jns sbb jmp pop popf negl and loope stos clc xor add jnp out and lods adc rorl sub add fistp push mov std dec stos pcmpeqb sbb in scas push pop xchg rorb ficoml adc lret add jbe call add or push xor add lret sar push out daa jp icebp sub and loope pop scas adc notb and mov in mov sub fstpt mov test or les mov adc sar (bad) shrl pop (bad) into or pop adc test push mov sar xchg cmc pop mov cld (bad) icebp pop ret sub data16 xchg ljmp icebp sub sarl add xor or xchg in inc fwait repz aam dec cmpl bound pop mov mov xor pop push mov sti xor movsl ficomp rorb inc jl out sub loope mov sub (bad) cmovs mov ret jno in and mov and inc jnp add add je out pop xchg int insb mov sub (bad) cmovns mov sar insl cmpsb fistp mov ret insl cmpsb loopne push (bad) add add jb in mov pop rcrb pop pop scas adc sub fsubrl mov push mov cs sti xor fnstcw mov call push pop xchg rorl inc jle es push mov jno aas cmpsb and jcxz ja cli xor pop testl cmp sub ret push jmp popa pushf xlat adc push mov enter mov daa popa fwait (bad) adc add and rorl xor push pop xchg into or mov jb stc xor loop push nop lret add push mov (bad) jae add and dec lahf fistl push mov add jbe jmp pop cltd rorl dec (bad) mov in pop and int3 pop inc jnp lock adc push mov add pusha lcall push nop lret push inc jp out sub adc ret jo in fcoms cmp and aad test into or mov sub fstpl push cmpsb loope push xchg lret add sub xlat adc sar outsl stos in lds cmp ljmp cmpl or mov fistl push mov leave add js in sub xlat adc cld aaa jb call daa bound stc xor in fwait (bad) adc mov loope push xchg lret add add dec cmpl sbb nop lret add icebp sub fistpl in pop xchg rorl cmpb pop mov enter mov and dec cwtl aam dec cmpl sbb nop lret add sub faddl sbb xchg lret push inc jp out sub mov add je jmp or cmpl lock adc ret (bad) cmp call xchg iret or mov fcoml push mov jns,pt out sub xlat adc cli xor push jecxz push xchg int3 or mov fcoml push mov add jne inc xchg int inc jl lock fsts dec xchg xor push mov enter scas ljmp mov (bad) je call or rcrb sbb leave add pusha lcall jle repz push (bad) movl xor loope push xchg lret add sub push cltd aad dec cmpl sbb xor mov fstpl push (bad) movl and repnz push mov (bad) cmp out pop xchg iret or cmp jae call or mov and rorl cmpb pop insl test into or mov sub mov lds cmp cmp cmpsl loope push xchg int3 push aas jns sbb movsb fistp push mov add mov and cwtl rorl popa popf fcoms dec xchg sti xor pop xchg int inc jl icebp movsb rclb adc outsl out mov cmp pop xchg iret or mov dec xchg ficom push mov cld outsl stos lds mov daa pusha test or and cmp push mov sub (bad) push inc jle out es xchg loop mov out pop xchg int3 push aas jge push mov (bad) cmp loop push (bad) (bad) incl cmp lods in ja ljmp jp in and inc jl out sub scas daa jnp repz dec xchg inc xchg rorb inc jp in and xchg iret or mov and mov and xchg iret or mov and inc jl out daa pusha mov push xchg lret jbe call jnp out daa pusha cltd rorb inc jge out sub rorl pushf aad dec cmpl sar insb movsl loopne push lcall mov sar insl repnz (bad) (bad) (bad) cmp in push (bad) add je call cmovbe push push mov add jae in push xchg pop les dec cmpl sar cmpsl icebp sub push inc cmpb push data16 mov fistl imul xchg lret inc js jmp pop xchg into pop inc (bad) inc jl out es cwtl rorl inc jnp in dec mov cld outsl test sbb (bad) (bad) cmp jecxz push mov add jb in mov xor cmpsb fistp push mov std outsl test sbb add jb jecxz push nop leave add je out inc cmpl mov fsts dec test fsubrl out sub rorl bound mov fsts dec test fisubl dec (bad) mov fsts dec test fcoml xchg fistp push mov (bad) cmp jecxz push (bad) movb jae in push nop leave add jne out pop xchg lret add stos jecxz push nop leave add scas call pop inc jp in sub rcrl lods clc xor pop push mov cld xor push lea leave add xchg int3 add cmp pop xchg rorb inc jl icebp sub (bad) cmovs les sub aad inc mov inc cmpb or sub shrl data16 mov fcoml xchg aad cmovns and int3 add and out xor loopne push mov std outsl test pop lahf out cltd and add jae loope push mov imull jge cmp pushf fstl push popf fcoms dec testb out sub aad dec cmpl call sbb (bad) (bad) cmp jecxz push mov add jae dec xchg into pop inc jns jmp pop xchg iret pop inc jns in es cwtl rorb inc jge out sub aam inc jg icebp inc cmpb mov mov ret add xor mov adc (bad) in sub pop pop xchg into or mov sub aad insl mov sub mov sar insl test in jbe ljmp jle icebp sub ficoml xchg sti xor sar insl cmpsl loope push mov add jne jmp or icebp sub fnstenv fwait xor cmp out push lods jno fiadd adc les pop (bad) fisubrl and in inc mov xchg add inc mov das mov test lahf or xchg jmp or mov sub jnp data16 adc test pusha rorl (bad) rcrb lcall push and dec mov jle cmp dec mov cwtl or xchg repnz lret xor mov int3 sub loope loopne xchg sti push mov in pop int mov mov jl inc cmpsl add js push mov jno movsl cmpsb packuswb and rcrb jp xor inc sahf (bad) fsubrs inc mov push adc test add aas cmpsb push test cmp lret aaa lahf or (bad) les xchg cmc dec mov sahf or in mov jb xor xor lds xchg adc loope mov sub in add and ds repz int3 cmp dec mov fisttpll and lock stos pop test jns pop les xchg icebp dec mov insb fmull and (bad) inc mov (bad) jmp imul mov mov mov jb mov mov jp out xor cmpl lock ret insb movsb (bad) xchg sub dec cmpl mov sub aad inc jle lock movsl ficom dec xchg cli pop mov add jb in push mov adc xchg rorb inc jp jmp mov aas cltd fsts xor push cmpsb loopne push mov stc xor fisubrl mov pop push mov cld outsl mov gs xlat adc mov fsts dec test fcoms dec (bad) mov stc xor fstl dec mov add jmp pop xchg iret or mov arpl cmovns mov mov xlat cmovs or fwait rorl pop cwtl rcrb mov push test fcomps rorl pusha cwtl rorl inc jp jmp pop xchg into push jbe,pt out jp in es xchg iret or mov incl mov mov jg lock rorl pusha mov mov xlat packssdw ret insb movsb fst cmp call add lods call js ljmp js jmp add and lret add iret or mov and into xor push (bad) (bad) (bad) outsb cmpsl loop pop push mov std outsb cmpsl fistp push mov stc xor ficoml dec test mov fsts push fcoml data16 fistl adc mov shrl stc xor fcoml push cmpl or lahf fcoms dec (bad) mov (bad) ja,pt call add jb stc xchg cmc xor fistl dec test push dec (bad) mov aad inc jg lock test xlat adc mov dec xchg fcoms dec cmpl test (bad) push inc cmpb push inc jg lock xchg ficoml dec test (bad) std outsb cmpsl fistp push mov arpl sub dec xchg fcoml outsb test sbb (bad) std pop xchg lret add jbe call mov inc jge out sub rorb inc jl mov xchg iret or mov and rorb inc jge out es xchg iret or mov inc jg lock rorb inc jnp jo inc jnp in and inc jns push fisubl pop xchg int3 add and lret jae in push (bad) (bad) (bad) outsl mov lcall adc sub popa les sbb popf sti cli sarb movsl lret xor mov (bad) in daa test and int3 add jne in mov aaa jo loope push mov sti xor movsb fstl xor (bad) jno jecxz push (bad) (bad) (bad) cmp loop mov xlat adc mov xlat pop movsb fstpl jae xor repnz or sub rorl inc jge lock test fcoms dec (bad) into fs out pop xchg leave add add in push mov dec xchg lret add adc (bad) out movsl jecxz push (bad) (bad) insl movsl fstl and ds push push ficom push mov push sahf fcoms dec cmpb or fstpt cwtl (bad) cmovs lcall dec test jnp add jno loop push mov std outsb cmpsl loopne mov (bad) cmova repnz rorl cmpsl in push mov pushl outsl cmpsl loopne insb movsl fstl dec xchg xlat push xchg int cmp push (bad) (bad) dec sahf negl and roll add add mov inc stos adc cltd movsb or into xor stos sub stc push mov adc mov aam inc jnp ljmp jae jecxz jns ljmp je push mov mov fcoms dec cmpb inc jp in and xchg into push js,pt ljmp jbe out pop xchg leave pop pop xchg lret add jne out push nop leave inc mov push ja inc nop lret jne in push (bad) adc cld push mov pop cltd rorb inc jp cmovp fwait rcrl je mov jecxz test dec movsb sbb adc mov (bad) cmp sbb mov cld xor push ja adc sbb aas mov cld xor movsl ficom dec xchg inc jge out es xchg iret pop inc js jmp pop xchg int3 add and lret je add and int3 add cwtl rorb inc jns ljmp jne out push xchg leave add jb loop push mov cld xor movsb fstl dec xchg fsts dec test jno xor mov sub push jge lock pushf aad inc jle repnz imul xor fcoml xchg fistl test sti outsl test (bad) outsl test dec xchg cli xor pop dec mov cli xor dec cmpl dec (bad) mov xlat adc mov (bad) and inc xchg icebp dec sahf fistl in daa pusha cltd rorl inc jnp in and jae and imul jno add insl je inc mov cld xor push mov push lret cmp and push adc inc mov out ja push mov mov jmp cmpsl or or pushl sbb xchg cmc pop mov test mov notl and push jne cmp enter inc xchg stc xor sbb enter addr16 dec xchg adc ret outsl test idivb dec mov arpl xor jp or das push mov mov push push mov (bad) aaa jno jecxz push (bad) pop jo insl test cmp push jno dec lods pop int in push mov in and mov sub aam inc jg repnz sbb xchg lret add and xchg rorl inc jle repnz out mov pop xchg iret or mov sub inc jp out daa popa lcall xor rorb sub dec xchg cli xor cmpsl loop push nop lret xchg shlb jge dec mov jnp sub out pop xchg int3 add and xchg rorb scas sti xor push mov add jne out xchg clc popa (bad) xor test popa fisub pop mov xor loope jne xor push in jle adc bound sub aam push loope push mov sti xor jg std cmp add pop cltd rorl push mov add jae add jne ljmp fsubrl arpl mov fisub jnp stc xor loope push mov add je call or mov dec (bad) mov cmc xor ficom push mov std fisubl dec (bad) mov fcompl mov mov inc test scas inc mov sarl test adc sar jo in pop xchg int inc jnp out sub aad dec cmpl push mov and or and (bad) adc and rorb cmpb adc aaa jo in pop xchg lret add and inc jg push dec xchg sti xor jnp out sub (bad) adc mov aas mov clc outsl aad xchg icebp dec mov inc cmp (bad) cmp jecxz pop nop enter add cmp in sub or mov arpl ret std cmp sbb loope movsb in add mov or sar loop mov adc call mov cs (bad) movl dec xchg (bad) cmp call or sahf jmp jmp add mov cmp (bad) cmp jmp pusha fwait (bad) adc rcrl xchg fidivr mov pop mov jnp decb adc push mov insl stos in xchg testl test sbb xchg int3 pop inc jnp adc mov add jne ljmp cmpsl or ljmp pop mov xor divb imul add jns or cmpl push pop xchg into or data16 call xor or sbb mov movb jne jmp xor test into or mov add rorl pop jp divb mov dec (bad) leave add xlat adc cld ss in pop xchg repz fistp push mov add mov and (bad) xor stos in jb xor mov inc loop mov (bad) cmp in pop xchg lret add inc jle repnz mov sar mov push popf fldcw mov cs inc test mov ficoml xchg sti xor test jmp pop cltd rorl cs dec xchg shll mov jae in es cmp out fwait and jmp or cmpb cmp and cltd aam dec cmpl lcall in daa and xchg push jb ljmp cmpl out pop xchg rorb inc jg cmc xor sbb cmpsl in jnp xor adc push mov add popa pushf hlt das push loopne push nop lret jp lock sbb mov add shrb outsb test lahf fsts dec xchg sti xor push xchg out pop xchg rorb inc jle repnz mov sub in stos aaa test sti inc cmpsb or (bad) sbb or mov ficomp push (bad) in pop xchg iret or cmc xor loopne je ss out lcall mov jnp dec mov add mov sub fcoms dec mov sbb sarl add add sub lret add ja jmp and rorl inc jge lock aam inc cmpsl loop push mov add jae out pop xchg lret add jbe call test leave add mov sar outsl test enter lods out pop xchg into or aam dec (bad) mov fstl push mov (bad) cmp fwait aad dec (bad) mov fcoml dec mov outsl stos jecxz push nop leave add xchg int inc jl lock cmpsb loopne push (bad) movl and pop xchg int3 push inc jnp out daa popa lcall sahf xlat adc mov fistp push (bad) enter mov and mov fistl mov sti xor rcrl pop xchg into or mov sub xlat adc xlat adc mov ficom push mov add jne jmp hlt cs mov (bad) cmp out xlat and rorb inc jle icebp sub fcoms xchg ficomp push (bad) movb je and push inc cmpb xor ficom push mov sti xor stc xor test sbb add jae out pop xchg int inc jp in es cltd rorl sub dec mov cld ss cli xor test sbb nop ljmp enter lods out pop xchg lret add mov and xchg rorb inc jnp out daa pusha lcall addr16 outsl stos in pop xchg lret add jbe jmp imul in es cwtl rorb inc jle sub fstl dec add add test movl and jecxz push xchg lret ja ljmp jl dec test fstl push add inc jle icebp sub aad inc cmpb adc mov repz xchg cli xor sbb sbb (bad) jo in push nop leave add jne jmp pop inc jns in and xchg rorb inc jnp in daa popa lcall dec cmpl adc xor mov sub adc mov fcoml xor cmpsb fistp push mov (bad) cmp in push xchg lret add xchg rorb inc jge icebp sub (bad) cmovs icebp sub fcoms dec test ficomp push mov (bad) cmp jecxz push mov add jb in push xchg lret js ljmp xchg into pop inc jp in and inc lret mov sti xor cmpsb loopne push mov std aaa jo in push nop leave add pop cltd rorb inc jle icebp sub lahf fsts bound cmc cs xchg stc xor inc jp in es lcall sub sbb nop leave add je out pop xchg lret add jbe ljmp xchg iret or mov sub (bad) cmovns out sub aad inc cmpl int push mov jns pushf adc add je repz add jne call pop inc jns imul stc xor loopne push (bad) movl inc jp out daa popa lcall mov aam inc cmpl sar outsb cmpsl loope push mov add je out pop xchg rorb inc jl out inc jle icebp sub fcoms dec test fcoml mov rorl inc jg repz push mov (bad) cmp in pop xchg lret add and xchg rorb inc jl out inc jge lock adc mov add add xor fsubp bound mov fistl cmp pop xchg into pop inc jp in sub xlat adc mov divl imul cmp out popf jmp outsl test sbb les push or mov sub aad dec cmpl push mov adc movl and int inc jp (bad) mov adc mov fstl push mov std aaa jno in pop xchg int3 add and xchg rorl inc jg repnz lahf fldcw push mov (bad) cmp in pop xchg lret add lcall addr16 mov sub aam inc (bad) mov ficoml dec xchg fidiv test sbb enter lods out pop xchg int3 push inc frstor bound add decb add adc xor mov imulb imul cmpsl call jno in pop xchg lret jbe jmp imul cld xor push (bad) movl ss in pop xchg int3 push aas jns in es cltd sarl cmp scas call or mov sub bound hlt sub dec test fsubrl gs fcoms dec xchg stc xor sbb (bad) push lahf jmp or out sub rorl outsb test sbb add je call or mov inc cmpb adc cli xor popa fwait aad dec cmpl jecxz jp in es cltd rorb inc jle icebp sub (bad) cmovns mov jbe jmp or mov ja cld outsl test sbb add jae in xchg rorb inc jl out daa pusha lcall sub aad dec cmpl int inc jns in es cltd sarb add je out pop xchg lret add jbe jmp xor ficom push mov add sti xor test sbb add jae add js jmp pop cwtl rorb inc jge lock aad out pop xchg int inc jns jmp pop xchg rorb dec (bad) mov fistl imul xor jb in push xchg lret jbe jmp adc insl mov xor or mov fsts dec xchg cli xor cmpsl fs xchg rorl inc jg repz lahf fnstcw ret std aaa jo in push nop jmp cmpsl in push xchg add or adc sar insl cmpsl loope push mov add sbbl dec mov cld outsl test push mov std ss loop push mov add jne call or mov inc jge icebp sub adc mov inc (bad) movl and lret add jne stc xor sbb (bad) std aaa jo jecxz push (bad) add jne cli xor push (bad) add scas jmp dec cwtl rorb inc jg icebp sub adc mov sbb (bad) jno in push nop leave add pop xchg jmp popa fwait aad dec cmpl and loopne push mov add jne call jne call or mov es lcall sub gs fsts outsb test sbb inc mov add xchg int inc jns in test or mov sub aam inc cmpb sbb jecxz pop xchg int3 add es cltd rorl jg repz or sub dec test xor ficom push mov std outsl test leave add ja add scas jmp or icebp sub or inc jp in daa popa lcall push popf fcoms dec test ficom push mov (bad) cmp out pop xchg jecxz push xchg lret push aas jns in daa pusha lcall (bad) adc mov ficoml inc lds dec cmpl push dec mov cli xor loopne push mov sbb movb jae out pop xchg int3 push aas jns jns in daa pusha lcall sub mov add je add and pop inc jp in es cltd rorb inc jle bound repz sahf xlat adc mov aaa jno out pop xchg int3 push inc jns cmp mov ret outsl test sbb enter lret pop inc jnp out sub aam mov add je cmpl cli xor test outsl test movl pop pop xchg int3 add inc jl lock adc clc xor ja cld outsl test enter lods out imul xchg int inc jp in es cltd rorl test cld ss in pop xchg int inc jp out sub xor mov xlat adc mov adc int inc jp in and inc jl out sub (bad) cmovns mov mov ret cld andl test sbb (bad) add xchg testl fwait aam inc (bad) mov inc scas push mov or pop outsl lret sbb int inc jge out sub aam dec movsb or xor in pop xchg lret test pop cwtl rorb inc jle icebp sub adc mov fcoml push mov std ss loop push (bad) add jp dec xchg sti xor test enter scas call push aas js ljmp jnp out daa pusha cltd rorb inc (bad) int inc jp in daa popa lcall sub add mov fstl dec mov cli xor loopne push mov (bad) aaa jo add push push nop leave add je out pop xchg int3 add cmp out pop xchg int3 add and aad dec (bad) mov fistl lods icebp sub xlat adc mov ficoml dec xchg stc xor sbb in pop xchg int3 push aas jns in es cltd rorb mov fcoml xor loopne push (bad) (bad) (bad) cmp jecxz push nop leave add je add (bad) movl cmp out pop xchg int3 push inc jns in es ljmp xchg int inc jp in daa cmpsl pop inc jl icebp sub cmovs mov mov cmc cs mov cld xor push (bad) adc inc cmpb adc and into pop inc jns in and inc jge insl mov es mov and add inc jl in es cwtl rorl inc jge js,pt out daa popa lcall sub fstl push mov std aaa jo loop push mov add jae in pop xchg lret xchg int inc jp out daa pusha lcall sub fisubl inc jg repnz adc mov fstl push mov cld xor xchg rorb scas ljmp lahf fcoms dec test sbb outsb test sbb movl and xlat adc mov fstl push mov std ss jecxz pop xchg lret add xchg rorb inc jge icebp sub adc mov (bad) and inc movsl or jmp mov inc mov rorb inc jl out daa pusha cltd rorb inc jge icebp sub aad push fstl dec mov sti xor cmpsl loopne push mov (bad) aaa jo lods in pop lcall mov stc xor push or add int inc cltd aas (bad) mov fsts dec (bad) mov (bad) dec fdivrl mov icebp pop (bad) xor xchg out push lods sbb ret sub xor in in nop aad retw stc les jl sub out mov mov mov rcrb aad xchg icebp nop add mov mov cmp dec lcall sub add mov rorb inc jle or lods call add jne out pop xchg in pop xchg lret add jbe call add imul pop mov jl (bad) aaa jo cld mov xchg notl fcoml dec mov cli xor pop push mov sbb add ss out dec pop cmp xor loopne push lahf lods or adc ss jecxz push mov es cwtl rorb inc jge out sub aam inc jg outsl stc push scas adc xor push fbstp test dec xchg rorb cmpl aad dec test fcoml dec mov cli xor repz cwtl std pop mov rcll cmp faddl sbb cmp push inc cmpl mov dec xchg rorb inc jnp pop out jnp add dec mov cli xor fcoml insb movsl cld xor push mov cld xor push mov fstps pop mov and xchg inc iret adc sahf xlat adc mov ficoml dec and push mov (bad) aaa jo loope push mov std xor adc movsb jmp sub pop mov cltd negl sub jnp inc movsl (bad) sbb mov in dec mov xor repz sahf xlat adc sbb cwtl out sub (bad) cmovs fcoml test dec nop leave add xor out inc jg repnz cmovp mov fstl dec mov sti xor movsl fstl dec xchg and xor out daa pusha pushf xor out jae xor jecxz push (bad) add jae in add pushf (bad) cmova popf (bad) cmovs cmp movb jae push mov inc jle out sub rorb inc jp jmp pop stos ljmp lret cwtl rorb inc jl ss fistp addr16 sub loop push mov rcrl add test inc movsl or and js (bad) sub stc push mov js dec out test pop xchg rorb inc jle repnz fsts repnz jle pop (bad) sub std pusha shll fisttp cmpxchg mov xor jecxz pop xchg into or mov xchg xchg sbb xlat adc aad mov and iret or mov add sbb fidivrl sub sub mov xchg out push mov sbb xor jno xor xchg lock inc test arpl sub mov repz or es xchg into pop aas ja call add jb jecxz push mov (bad) outsb cmpsl fist push mov stc xor fstl das addr16 mov out pop nop leave add stos sbb add jno loop push out pop fwait (bad) cmovs popf aad dec ret jno,pn adc mov repz sahf (bad) cmovs fwait rorl inc nop shrl fcoml xor jge (bad) aaa jno loop push mov add jno and rorb inc xchg or daa pusha cwtl rorl inc jp ljmp lods in push nop lret jl jnp jle repz dec test js clc xor fcoml xor ficoml dec test int3 pop pusha ret sahf add adc in cwtl divl outsl stos jecxz push (bad) out sub aam inc jle out sub rorb inc jl out es cwtl rorb inc mov or leave pop pop xchg int ds dec nop lret lret pop push mov cld xor ja jmp add jbe out pop xchg lret add jne out pop lods sub in and add adc sar push pop push mov cli xor fcoml addr16 dec cmpl pop mov sti xor mov push push pop push mov std outsl aad dec cmpl dec test ficoml dec xchg jns mov ds add mov and mov dec mov cmp pop pop mov sub aam inc jg icebp sub aam inc cmpb cmovns out pushf std cmp and into xor icebp dec mov cmp and repnz sahf fcoms dec test fcoml xor pop push cli xchg adc push pop xchg int3 add lock mov dec cmpsl pop push and cld data16 mov jo push stos push (bad) stc gs xor inc movsb push dec xchg or cmpsl loope sahf hlt xor ficoml dec test fcoms insl stos jecxz push mov add jb in jle jo inc cmpsl or mov mov mov nop lock movsb incl pop cmp add sbb fdivs call enter sub mov fidivr xchg ja cmp movsb cld push mov imul mov fcoms dec mov daa mov insb (bad) xor gs (bad) arpl dec xchg stc xor sub test push or sub rcrb movsb push insb mov lock push mov jl push das sahf jmp stos or stos add sub xchg negb cmovp pop mov js sub ss icebp das imul mov jp xor negl or insl sarl mov test dec xchg aam xchg push mov jge xor xchg clc pop mov xchg clc pop shll fstpt add cmp insb int mov arpl das (bad) out das mov push mov jge outsl scas out pop mov test mov xchg cli popa shrl xchg repnz mov add inc xchg repz mov inc test popa mov xchg flds imul call int xchg repz mov jge cmp imul xchg ja cmp add add add das xchg clc pop lods jmp movsl add mov rorb or (bad) xor mov jno xor hlt insb into packuswb add and cmpsl sbb mov (bad) loopne cltd negl fmul inc mov mov lcall xor cmc push test jae add sahf pop jbe push rorb je push mov pop iret cmp xor and enter jp push mov aaa movsl add inc test (bad) add arpl inc mov std jns cmp stc push jmp ljmp xchg cmc pop faddl push data16 and and xor dec shll mov hlt xchg pop (bad) xor push mov jo pop lret inc mov xchg add jp sarw lret jp pusha roll cmpsl adc pop (bad) xor std fs inc fistl das xchg jae ficomp sub mov clc pop rolb pop (bad) movsl sbb cmpsl sarb pusha fcoms xor dec stos and xchg add flds in dec les and jo pop mov add and stos dec enter arpl push mov popf or pusha into xor test mov outsb fisttpll lods push mov test cwtl sti outsl fiadd and ret pop (bad) mulb xchg ds cwtl or xchg pusha aad stos and mov popa sbb dec mov mov fisttpl std inc movsb pop xchg add adc loop and xchg or xor jmp imulb dec (bad) out pop lds xchg sti sub sti ss in push xchg out adc push adc cmpsl or xor lods sbb mov popa enter fisttpl fdivrl lahf add xchg mov push mov mov add xor fsts mov add int3 ja mov imul call or lahf push jg arpl inc lds popf mov mov fs cmp call or xchg arpl dec (bad) cmp lods sub xor jbe xor mov xchg aam xchg sbb clc pop mov fwait std pop mov nop out dec movsl loop cwtl notl sahf add mov jae xor jbe cmp cmp mov jbe add or negl sbb cmpsb js aas popf loope pushf add mov cmp test inc cmpsl pop fidiv add xor jg jp mov jbe ss jns dec lods or xor jns xor push mov mov fstl dec mov cli xor mov (bad) jno es sub sahf xlat adc mov in cmpsb out dec cmpsl stc jle (bad) cmp in push nop leave add je out pop lahf pop test sbb movl and aam inc cmpb push inc cmpb push stos lock test stc xor loopne push mov (bad) aaa jno pop test sbb cmpsl push je push sub mov and rorb inc pushf add dec test fistl xor cmpsb fistp push xchg dec cwtl rorl jg icebp sub ficoml shrl xchg pop shlb fnstsw dec movsb ljmp insl stos clc xor and loop push (bad) (bad) (bad) cmp out jl out daa pop cwtl rorl inc jnp in and inc mov fcoms dec test fsts dec test dec xchg fistl dec xchg add jb in je out pop xchg lret add and int aas mov (bad) (bad) cmp in push (bad) add jne out sub rorl inc jg icebp sub aam inc jg repnz xor jecxz add add leave add jne out pop xchg int3 add fistl imul rorl sub cmovs mov sbb cmp scas jmp or lret jbe jmp rorb jg repnz add dec mov hlt addr16 dec test clc xor fstl push mov cld xor push (bad) xor mov fistl imul mov sub aad dec cmpl (bad) mov es cltd rorl push xchg lret add ja ljmp or mov es das push (bad) mov (bad) cmp loop push mov cld xor movsb fcoml and lods out pop xchg lret add ja ljmp and int inc jns in and inc cmpb xor push (bad) add mov and and sbb movb jae out out cmp and into or mov daa popa fwait aam inc cmpb xor push xchg lret ja ljmp push dec mov (bad) (bad) aaa jo jecxz fildll arpl mov fsts dec test repz sbb add jae out pop xchg int3 push aas adc cwtl rorb gs fcoms dec mov cld xor push (bad) (bad) (bad) cmp jecxz push (bad) add mov inc jl lock (bad) cmovns mov mov mov ficom push cmp outsb cmpsl loope push mov add jae in pop xchg lret pop pop xchg int inc jp in daa pusha lcall sub sbb fistl imul adc xor test enter lods out pop xchg loope pop xchg int3 push aas jns in and inc jg icebp sub xchg lret add and xchg rorb inc xchg in push nop leave add scas call push aas add add add inc jge icebp sub mov sar insl cmpsb loopne push adc iret or mov sub (bad) cmovns jno in push (bad) add je out pop xchg imul cmp out pop xchg lods xor js aas popf add and icebp push mov mov xor (bad) loopne mov push lahf fstps jae rcrl adc aam mov add stos or add and add cmpsl or ljmp sub bound loope cmpsl or call js cmp mov inc movsb mov jp pop inc jns jmp loopne push nop leave add je in (bad) dec mov sar imul imull xchg iret or mov sub (bad) push dec cmpl mov push aas js jmp sbb movsb divl push mov sti xor adc nop lret add test fsts dec cmpl fwait aam inc jle lock gs fcoms dec (bad) mov (bad) cmovs aam dec cmpl mov fcoms dec or push dec (bad) mov fcoms dec pop int and fisubl add stc dec cwtl loope jns or loop jae mov dec xchg fbld insl mov inc mov sbb sbb out jbe or and fwait jecxz je add jb lcall nop loopne dec xchg iret or mov dec xchg stc xor fstl xor fistl dec test fmul (bad) (bad) push stc inc (bad) aad cmp incb (bad) push mov sbb jge sbb (bad) std xor pop xchg shlb rorb inc jl in and pop loope data16 xlat adc mov aam pop cwtl rorl inc jl out sub rorl bound mov dec test fistl (bad) inc xchg rorl inc jge in dec test ficoml dec test ficoml dec test mov fcompl push mov cli xor fcoml jp (bad) add jae in push pop add movb jb in push (bad) add je out pop xchg lret cmp scas call add and mov (bad) push inc cmpb and aam inc jg icebp sub aad inc cmpb adc jnp add jno loop push mov cld xor fs pop xchg int pop ret fs inc cmpsb push data16 sub dec add ja cmp in es cwtl rorl inc jl in into sbb (bad) cmp xchg (bad) push stos cld pop mov sarb sub push (bad) (bad) das sbbb jmp rorl hlt sub jne jmp add and int3 add and xchg iret or fstl dec mov cli xor fcoml mov sti xor fcoml jae call cmp jecxz push mov add jb in push mov (bad) cmp sahf fcoms dec test adc mov pop xchg into pop inc jns jmp xchg arpl mov daa pop xchg rorb inc jp ljmp jne add pop xchg iret pop inc js jmp add mov sub rorb arpl mov fcoms dec (bad) mov fsts dec test adc int3 add and lret lret je in push (bad) add pop aas js jmp add jne out pop xchg leave add jae in push (bad) cld inc jg lock rorl jl in daa fwait in iret or mov pop xchg rorb mov and sbb (bad) std outsl cmpsl loope push push mov add jb in push (bad) add adc icebp cs dec xchg int3 xor in push mov incl add aaa outsl test sbb ret insb movsb fcoml fcoml sbb in arpl cmpsl loop push (bad) add jae in jge push mov int popf pop js xor add xor mov shlb cltd rorb inc jnp in and xchg shrb xchg push jbe dec mov cwtl jmp pop xchg into pop aas js jmp lahf fdivrs je out push nop leave add je out push nop leave add mov and rorb mov aam inc jle out daa popa sub pop xchg into push aas js jmp lock stos pop and fmull and or sbb jns sub aam out pop int3 sub and xchg iret adc ficompl aas stos or ss pop jns push mov fdivl imul pop pop xchg fnstenv nop test push mov jo out mov push adc mov daa pusha cwtl in movsb adc ret dec lods and xchg cmc pop sarb scas pop test push mov jbe mov and cltd push imul mov inc movsl or push mov jnp push aas js sub add push jo inc mov jns push bound pop or inc orb push mov jmp rorl inc jnp adc mov fcoms dec (bad) mov (bad) push inc dec mov sub rorb inc jl xchg adc fsts dec (bad) mov fcoms dec (bad) (bad) cmovs fwait rorl jge out es xchg rorb inc add jns in es test inc movsl in daa popa cltd rorb inc jl in sub fs insl cmpsb fist push mov sti xor movsl ficom dec mov stc xor cmpsb loope push mov cld xor shlb aam (bad) and int jl adc call add je in push mov (bad) cmp loope bound mov fcoms dec (bad) mov rorl inc jge in es mov fsts dec (bad) mov add (bad) push inc jg and (bad) xor fstl dec mov pop test or sub rorl inc jge out daa pop mov fcoms add mov fistl dec fwait cli pusha or or loop movsb ljmp push dec xchg inc cmpsb pop js icebp sub rorl inc jnp jmp xchg add bound stos out sub aam inc jle lock negl cmpsl divb imul mov sbb cmp sti pop cwtl rclb sar imul xor clc xor fistl dec test cmp inc mov dec test test ficoml dec test fsts dec movsb fistp push mov sti xor cmpsb fildll mov push cltd aad push push lret cmp push dec scas push xchg dec fnstcw sar imul pop xchg iret pop inc jns ljmp or xor push dec popl sbb cmp scas out pop mov insl lret sub cld xor movsb fstl mov xor push dec mov je dec mov test jb cmp out push lds sbb mov xor cmpsl loopne push (bad) (bad) (bad) cmp loop push mov (bad) cmp clc pop mov push nop leave add jne nop icebp pop push cmpl cs pop push lods in movsb pop mov mov mov outsl rclb (bad) into or mov and add and lret fnstsw flds or cmp xor jb out daa mov mov cmp in pop xchg lret (bad) sub jmp or mov and int3 cmp icebp sub aam inc bnd jmp into push aas ja call push ja,pt jmp xlat xor ficom dec mov clc xor cmp outsl test add sbb (bad) std xor aam pop xchg leave add jb jecxz push mov std outsb cmpsb fistp push mov data16 push xchg clc xor fistl dec adc ds aad dec cmpl sar loope (bad) cmp movsl fstl pusha ret es fistp push mov (bad) aaa mov pop adc rorb inc jl out daa pop cwtl rorl inc jnp popf out pop xchg int3 add jbe call pop sub (bad) xor shlb xchg inc add sar insb cmpsb fistp push mov std outsl test inc jle lock aam inc jg cmpsl push enter mov and negl (bad) cmp dec xchg sbb pop pushl outsl cmpsl fist (bad) adc imulb addr16 fcoms dec addl jmp lods add (bad) push inc jg out daa imul mov stc aaa jo sbb pop jne push or xchg clc pop mov movsb (bad) pop mov bound dec test fcoml sbb dec xchg inc stos or fcompl add jno cs hlt xor cmpsb fistp push adc rorl jge out daa pusha cltd aam inc jle mov (bad) push pusha ret into or ret pop pop mov xor fistl push mov (bad) aaa jo loope push mov std inc adc cwtl (bad) xor xor aad scas sti pusha lds popa lcall and jb dec mov jb push jecxz cmpsl pop pop mov mov lcall retw sub mov or mov sub sbb sub sahf xlat adc inc jg hlt addr16 dec cmpl ljmp ja jmp add add cmpsl loop push (bad) add mov and rorb out cmp call push aas jns jmp popa mov mov fstl push mov sti ds daa (bad) repnz stos out pop xchg into pop inc jns jmp pop cwtl rorb in cmp add jne jmp or mov sub adc rorl inc jg repnz sub movl sbb (bad) cld xor push mov cld ss imul test sbb xchg lret and or push mov or das xchg sub imul test imul inc jle push xchg into pop aas js in inc mov aas jns in daa popa fwait aad dec (bad) mov fcoml push mov (bad) cmp fisubrl fs fcoms push stos or fildl jmp mov lret and adc sub daa popa lcall sub aad dec test cld aaa jno sub cmc push mov cmp and iret or mov sub (bad) adc mov mov fcoml dec mov std aaa subl (bad) push nop loope cltd mov adc mov xor push fild or inc cmpsb adc movsl adc sbb out bound call (bad) inc fwait out inc cwtl jmp nop je pop mov pop mov pop xlat sub fnsave fnsave test cs jbe repz pushf in inc shlb xchg inc test fcoml (bad) (bad) (bad) cmp jecxz push (bad) (bad) (bad) cmp jecxz push mov std ss sahf fcoms dec test ficom pop adc cmp repnz lds add adc cli xor loopne push add jne cld outsl stos in push nop lret jl test push mov and cmc das imul stos jecxz push nop leave add dec pushf (bad) adc cli xor cmpsl loopne pusha sbb clc xor sbb out pop xchg iret or mov sub adc stc xor loopne push mov inc ret cmovge lcall xchg std pop enter insb fild add jns jmp sahf std pop mov test fsts dec cmpl add add dec mov leave add je in push (bad) iret xchg ficomp push mov (bad) cmp xchg ficomp push mov (bad) aaa jo loop push cltd push mov (bad) cmp out pop xchg int inc jp in daa popa fwait aad add ss mov fdivrs xchg outsl rorb pop mov aam pushf (bad) lds xchg inc movsb lcall sbb sahf jmp es mov addr16 sub adc sbb fistpll pushf sti pop mov cmp push scas or or sub pushf add daa xchg inc lods push sub xlat aaa fwait std jno and lahf lcall and pop mov mov js xor sti lds cs std pop mov into sub or sub std ja xor (bad) cmp jne xor push jge cmp jne sub in dec push into xor js xchg dec lods or lret adc xor push mov jno cmp std pop mov push mov jne xor aas mov jl cmp xchg icebp push lods or aas stos adc aam (bad) sti jnp aas sahf (bad) pusha mov add es into sub nop out pop xchg int aas js in es cli xor sbb (bad) std outsl lock ss repz cmp push mov jmp or (bad) cmovns movsl ficomp push mov and loop movsb add and push test outsb int3 sub add pop (bad) jmp sahf std pop mov out dec scas push jae arpl sub inc cmpsl bnd ds fimul psrld cmpsb adc fsubs adc dec mov stos or and push and pushf jmp xor popf or fwait notb sbb sbb cmp adc ret xchg std add add (bad) xor ss push mov mov jno sub and test pop scas add cmc inc cltd jmp cmpsb notb std dec add cmpsl mov lock mov xchg sti popa shll loope mov out push mov jg ss stc pop mov pop mov jnp and sub inc mov mov (bad) xor out fidivrl sahf pop movsl fistp push mov jge push inc pushf add aas mov cmpb sub pop lcall addr16 dec (bad) loope insb iret xor sti outsl lods out pop xchg int inc jns sbb sub rorl inc jle icebp sub adc inc test mov pop xchg iret or adc pop into inc nop mov mov mov fwait push jbe and rorl gs fsts dec xchg cli xor cmpsl loopne push (bad) movl out push mov jmp insl fdivl test cs jns sub add dec stos add mov pop les jbe sub inc cwtl lock mov jbe sub dec test outsb aam ret mov xor push (bad) add jne jo stc xor sbb and aam dec (bad) mov fistp push (bad) (bad) sbb in pop loopne mov mov (bad) cmp mov adc stc xor ficom push mov std push (bad) movb je out pop xchg int inc jp in daa pusha pushf jmp add dec scas divb imul and insl mov and inc xchg in dec cmpsb in pop xchg lret add ja jmp mov fstl push mov std ss and mov add in push shrb cmc push test pop shlb fistpll pushf jmp and iret std jo ss notl jns cmp xchg and fildl and repz rcrl pop xchg int inc jp in es fwait aad add add dec sbb enter mov xchg push (bad) and aad inc jg hlt aad pop xchg into or mov and push and test int3 and adc scas push pusha fwait in js lock cmpsl inc scas sbb bound xchg cld fsubs fsubrl mov imul cli imul (bad) lcall aam inc jg or pop (bad) xor fidivrl xchg in inc xchg out mov xor punpckhdq (bad) push jne aam test xor popa mov jge sub cmp in fwait (bad) popa ret cmc push mov mov (bad) (bad) cmp jmp or icebp sub jmp pop lret cmp adc pop lods in daa popa lcall das imul outsl leave das mov int aaa jae or push les lcall and cwtl pop (bad) in push les cs cld pop mov (bad) ljmp das (bad) jmp mov xchg repz scas adc das (bad) in dec cmpsl add mov js xor pusha rcrb fdivrl xchg and push daa xchg inc sahf sti pop mov adc or mov mov dec test jnp cmpsl adc decb fsub push xor out into push inc jg repz data16 xlat adc mov or mov and add cwtl rorl inc jns ljmp test ret cld xor fcoms dec (bad) mov xlat adc fcoml scas sub xchg xchg jge bound movl mov jae sbb ss cld pop lahf clc arpl mov mov push mov out inc stos push xor sub cmpsb sbb sarb mov dec mov js add je and mov dec dec mov aas xchg rorl jge in and loopne push mov sti xor movsl fstl jns out daa pusha cltd rorl inc jnp in and inc js ljmp sbb (bad) std push pushf xlat adc mov inc jnp in es xchg rorb inc jl out es repnz adc mov fcoms dec (bad) mov xlat sbb push pop xchg lret mov mov js ljmp inc jns ljmp fwait aam adc mov ficoml dec test ficoml adc cltd rclb insb stos jecxz push (bad) (bad) (bad) cmp pop pop xchg lret add jne out pop xchg lret mov mov fsts dec cmpl dec test ja ljmp cmpsl loope mov cmp out pop xchg int3 add jl,pt out sub rorl popa lcall sub aam mov cmp call cmp mov outsl test sbb (bad) std xor jno in push nop leave add jae in push nop leave add mov and or leave or jecxz push (bad) add mov es cwtl rorl inc jnp in dec xchg fcoml imul std ss lret push mov call add jb jecxz lcall pusha cltd rorb inc jge out cmpsl out sub rorl jl in and jbe,pt call add (bad) or cmpsb loopne push mov (bad) jnp pop pop nop leave add jae in push mov (bad) pop xchg lret jne out push nop enter stos in push mov (bad) cmp clc mov cmp lods out mov add jno jecxz mov out sub rorl xchg stc xor fstl dec xchg ficoml dec test int push mov or pop nop enter jp out daa pusha cwtl rorb inc jnp jmp (bad) mov (bad) cmovs pushf aam inc jle lock rorl mov push lcall add es adc lcall (bad) dec mov xor fcoml xor ficom add (bad) jo icebp cmpsl repnz sahf (bad) sub fs (bad) adc rorl inc jl in and or (bad) pusha mov and lods adc fildll flds adc test out stos cmc addr16 dec (bad) mov aad outsl test sbb (bad) cld xor push mov sti xor les mov or inc jl in mov inc jns jmp pop xchg into pop aas js jmp das push cmpl dec (bad) mov in mov cmp in push mov add jb in rcrl pop xchg out sahf clc push scas push dec mov cli xor fcoml xor ficoml dec test fisubrl ficomp push mov cli xor fsubl stos divb imul lahf xlat sub dec cmpl cmovs popf (bad) cmovs push sahf xlat adc mov (bad) push inc xchg dec cwtl rorl inc jl in and movsl stc inc (bad) mov or mov and or cmc xor fcoml xor std mov cmp xor test sbb ret and pop inc jns ljmp jbe out pop xchg int3 add jne mov (bad) cmovs pushf cmc lahf in es cltd hlt push mov xor fistl test fcoms dec (bad) mov fcoms dec or (bad) mov xlat adc mov cmpl dec cmpl fistp push mov (bad) aaa jo loope push mov std outsl (bad) xchg ficom push mov cld xor push mov xchg loopne push (bad) (bad) jo loope push mov sbb add jb in push (bad) add jb in push (bad) add jae mov adc mov fcoms dec (bad) mov xchg add add jbe call add arpl repz sahf fcoms dec cmpl dec cmpl mov xlat adc mov js xor sbb pop add jno loop push mov cld xor movsl add dec cmpl xor mov aad inc jg icebp sub pop pop cltd hlt das push cmpl inc cmpb or jge cmp lret jbe jmp pop cltd rorb inc jge out daa pusha cltd rorb inc jl adc mov fsts dec test fcoms dec (bad) mov (bad) push dec out imul mov enter lods in push (bad) add jb std aaa jo loop push mov std outsl cmpsl loopne push mov sti xor cmpsb fistp push xchg pop jb in and lret add jne push jno xor jbe mov sbb leave xchg jp mov sbb mov add jb jecxz pop xchg lret jne in push xchg sub mov push sbb cmc jae jmp sbb dec shll cwtl loope cmpsl adc or loop scas add popa adc clc pusha mov jg,pn push ret sbb jecxz cmpsb or lods out mov xchg in sub sbb out dec mov adc inc or xlat inc cmpsl push dec xchg sub cmp shrl lock pusha (bad) sub fldl pop inc jl sub mov dec test inc mov data16 jne pop push cmpsb or xor jmp xchg add add jbe cmp push (bad) jmp or arpl (bad) setbe (bad) (bad) and (bad) inc mov cmpb mov mov jbe in cmp cmp sub dec mov jg add xchg stc popa enter les jge lock add popf add stc push mov push test pusha cltd flds xor cmp push (bad) loopne (bad) sti pop popf xlat adc aaa mov and push push stos adc push dec adc stc push mov jle jle push mov push mov sbb imul rcrb push mov sub sti int3 pop ret adc loope lods outsl (bad) sbb inc cltd aam inc sarb lods or xor xchg (bad) jae (bad) cmp cmp xchg add push xchg jmp mov mov test xchg cli pop (bad) mov mov es cwtl rcll leave add jae in push pop add jb out scas and daa mov sub cmc xor fstl push mov (bad) aaa jo jecxz mov sar imul xor cmpsl loope pop adc aam inc jg repnz aad pop xchg add gs fcoms dec cmpl dec test add aad mov (bad) mov outsb or fcoml xor push sarl jae ljmp leave add jne call add and int aas ja jmp pop xchg rorb inc jnp cmovns mov sar test fstl push mov in push xchg rorl inc jl out daa add cmovns lahf fsts dec test add js ljmp jl out cmp out daa mov sbb (bad) push movsl or mov fstl push mov std aaa jo in outsb mov sti xor cmpsb fistp push mov cld xor push loope addr16 dec (bad) or or rorb inc jle icebp sub adc sar insl cmpsl loope push mov lret js in es cltd rorl jns sbb (bad) add je (bad) cmp in push nop leave add fstl push mov cld xor cmpb adc mov cld inc pop push (bad) movb test xor add add xor push nop lret js jmp pop cwtl rorb arpl jecxz push xchg lret add cmp stos in mov sbb (bad) add (bad) ret stos adc icebp sub fsts dec xchg push inc jp in es cltd rorl jg repnz js,pt jmp xchg out pop xchg into pop popf ljmp cmpb adc mov fistl xchg lcall and daa aam xchg int3 add je out pop xchg rorl inc jge out sub aad inc cmpb adc mov (bad) cmp out pop xchg int inc jnp out sub int pop mov in (bad) adc mov ficoml push ficom push mov cld xor outsb test sbb add je out in push fstl test adc mov popa fwait aam inc jg repnz cmovs mov movsl loopne push (bad) (bad) (bad) cmp jecxz push nop leave add enter sar test and xchg repnz lahf fsts dec test fcoml xor cmpsl loopne push stos in pop xchg into pop inc jnp out daa popa fwait aam insl mov xor movsl ficom insb lret clc push mov (bad) cmp mov imul jbe flds std pop shll int test jl cmpsl or cmp mov xchg hlt test arpl sub les mov (bad) xchg xor xchg jp inc xchg out (bad) insl fiadd xor mov (bad) out push mov push stos adc sbb xchg push scas hlt push mov mov cmp inc test test orl mov jl or stc pop shll out aam cwtl cli dec test xor iret xor cmpsl adc cmp mov push ret daa mov stos add pop mov mov add cmp pop xchg into or xor mov aaa jno jecxz push mov and pusha leave sub out icebp sub adc mov fsts dec test push pop add rorl jl in and or mov outsb cmpsl push fwait (bad) cmovs sahf xlat cmovs xor push mov cld xor push mov add xchg cli xor fistp push mov std xor sbb and out in jg repz dec xchg cli xor stos in pop xchg lret add inc jge lock aad dec (bad) mov push mov std outsl test movb mov sub cmovs mov (bad) (bad) cmp jecxz jno in pop xchg lret add and rcrb push xchg lret jbe jmp or mov sub aad dec (bad) mov jo jecxz fwait add pop leave and in mov jo dec mov sub into sub sbb in pop xchg lret add and js (bad) cmp in push (bad) add ret insl cmpsb fistp push mov cld xor push (bad) movl sbb push mov add jae out pop xchg lret push mov mov ficoml dec xchg dec xchg fstl dec xchg stc xor fstl dec mov stc xor fcoml mov sar insb movsb ficom push mov sub cmpsb fistp push mov cld aaa jo pop cltd rorl inc jl out daa pop cwtl rorl inc jp in and inc jnp in cmp jmp pop cwtl rorl inc jle icebp sub mov add jne jmp or or nop leave add je out pop xchg int3 add and or mov inc jle icebp sub adc mov sbb jb aaa adc cmpsb in lcall jg adc add add icebp inc cmpb adc ss test or xor rorl sub and call push (bad) xchg divb outsl leave sub sbb aas mov lcall sbb sti pop (bad) xor add sub in inc movsl mov sub aaa xchg repz inc mov cs out push lahf fistl jecxz xchg aam xchg repnz popf fcoms insb push leave or in push mov dec mov mov fcompl jne cmp or sarb mov sub aam mov push mov cwtl clc arpl xor mov sar insb cmpsb fistp push mov cld ss jecxz push (bad) sbb lret add and inc jg dec xchg rorb inc jl out daa pusha cltd rorb inc test gs fsts dec test ficoml imul popf (bad) adc mov fstl push mov rorl inc jl out daa pusha cltd rorb inc adcl inc jg icebp sub cmovs mov mov divl imul mov addr16 dec cmpl enter lods in push (bad) add jb in pop xchg lret jne out jb in push xchg lret jne out pop xchg aaa cmpl test in push nop leave add fldenv pop cwtl rorl inc jnp in es cwtl rorl inc jl add js ljmp jns ljmp loop push mov (bad) aaa jo loop push mov and fsts dec test fsts dec cmpl dec test stc xor fstl push mov sti xor xor mov sub aad dec cmpl mov push fwait (bad) adc mov fnsave jo jecxz push nop leave add xchg sub in and inc cmpl lret add ja ljmp jnp out sub add aad dec (bad) mov cld outsl test leave add test outsb test enter lods out pop out insb cmpsb fistp push mov std outsl test sbb (bad) add je out pop xchg into and or lock xlat adc sbb adc clc xor pop xchg into or or aaa jo jecxz push nop leave add je add xchg int inc jl jb and in mov in ja in and inc jle repnz fsts dec test test jne in es cwtl shrl loopne push test fstl push adc test cld dec ljmp ret std aaa jno in pop xchg lret add push mov (bad) cmp daa mov dec movsl loope push dec mov mov add into xor fs xlat adc ret adc test outsb shlb push test mov nop lret add lods in pop xchg int3 add and inc cmpb cmp repnz mov sub (bad) pop je out inc sbb mov fcoml dec mov cli xor sbb lds cmp mov and push jno cmp adc cmp ret imul stos in pop xchg int3 pop inc jnp adc cmp xor jno mov push mov jo in aad cmpsb loope push mov add jne call or mov dec mov cld ss xor sbb add cmp sbb jo out pop xchg int3 add and xchg iret or mov dec xchg stc xor sub inc jmp loope cmpsl or aad les rorb inc jl out sub aam inc cmpb cmp in pop scas adc fiadd iret or jne aas popf lcall rcrb add fstl push mov cld xor push (bad) movl inc jg mov sub adc jl dec scas add mov push dec test jae push movsl loop outsl pcmpeqw ss clc push xchg int3 sbb xchg push stos call add jbe out pop nop in sub sahf (bad) adc add das add aaa out fnstcw pop pop xchg into sbb inc (bad) add jbe jmp push aas jns jmp pop xchg divl insb movsl loope push scas adc cmp loopne sarl xchg (bad) dec mov or pop xchg rorl inc jl out sub rorl arpl sbb sbb xchg cld inc frstor cs icebp inc test (bad) std aaa jno jecxz push mov add jae out pop xchg icebp sub lahf fsts dec stos or aas mov std dec out leave sub push xchg into and mov push jne movsb add clc pop hlt out push mov or rolb jne ljmp jle sbb nop leave add sti pop mov aaa lds nop repz mov das enter fsts dec test fistl push mov cld outsl int pop xchg iret or gs xor mov dec mov bound scas repnz scas cli xor test sbb add ja (bad) movl mov xor js cmp adc inc jge lock (bad) cmovns cmpsl loopne push mov es cltd rorl scas adc mov stos adc sub cmp jmp pop xchg rorl inc jle icebp sub adc inc jle repnz in push mov imul add pop pop cwtl jmp in pop xchg lret jbe call push aas js push inc cmpb mov sub inc test insl int outsl test scas ljmp jge lock adc fsts lcall loopne ret add sbb xchg ror sub dec test sar add push dec mov sti xor dec mov cld inc mov jb out push mov push repz fistl ss jecxz push xchg iret or rorl inc cmpl popf xlat daa mov cmp sbb xchg fadd sub adc mov fistl xor jae out (bad) push mov and jecxz mov dec lods add mov push nop lret ja ljmp jl out sub aaa jno in (bad) in mov popa popf xlat fmuls adc daa bound aam inc cmpb adc mov add mov xor pop xchg rcl dec test pop xchg cld pop ret pop inc jg repz dec mov std aaa jno in pop mov sub (bad) adc add mov push jb push jp cmp cli cmp push xchg sbb mov ret std outsl test enter int3 push aas jns jmp cltd std pop rcrl xchg lret (bad) cmp dec xchg outsl repnz jp in daa pusha pushf aad inc cmpb push inc movsb fistp push mov lcall and xchg sbb dec lods adc inc cmpb sbb faddl or mov (bad) lretw xor shrb cmp pop xchg rorb inc jge icebp sub das imul mov mov mov cmpsl or mov fcoms dec test fcoml push nop lret int3 xor sti jnp,pt push imul cmpsl clc xor scas mov out sub rorl arpl cmova adc sub sub inc or or mov fsts dec test fcoml push mov adc ss divb jo test inc lods clc xor pop add xor test sbb add jb in pop add int inc jp icebp push lods adc andnps xchg hlt dec mov add jb scas data16 loope push mov cld xor movsl ficom dec xchg cld xor sahf add lret jne push sbb leave add aad mov into pop inc jp in and inc jle lock movsb fidivr popf std cmp mov and jnp outsl aam dec mov cli outsl les int inc jl lock fcoms dec test jecxz jp lock xor out pop xchg loope cmpsl icebp dec mov xor push xchg cmp adc xchg cli xor cmpsb loopne push mov add push inc jns cli pop rclb outsb test pcmpeqb pop push mov lret jbe jbe sbb add add ja ljmp jl out sub movsb out movsl (bad) cmp scas call push scas add or mov das cwtl ficomp push mov (bad) aaa jo loop push (bad) (bad) (bad) cmp in jns in daa pusha lcall cmpsb loopne push mov cmp xor push pushf test and xchg rorl inc jl out sub rorl sub mov ja,pt jmp add lret jge out sub sub mov xlat adc mov fcoms imul and fcoml dec mov inc cmpsb out dec lods cld cmp out pop cmpsb les dec test fistl push ficom jb out pop xchg iret sub or sahf add pop mov loopne push add mov cld xor push mov or jno in push (bad) (bad) (bad) aaa outsl cmpsl loopne push lods inc xchg lret pop inc js jmp add mov dec movsb loopne push mov mov inc lahf ficoml dec adc inc movsl pop push mov cld xor push mov and iret or (bad) cmp sbb push inc jg jne add add js cmp insl movsl fstl lds fwait rorb inc jp ljmp loopne insl ret (bad) cmp cli pop mov xor fldl sbb and pop push enter cmpsb fstl push mov cli xor shrb xchg loope push cltd movq xor and pop push mov cld xor movsb fistl dec sbb dec xchg adc test and push (bad) (bad) pushf add adc mov imul mov sbb ret sti xor add jno loop imul pop mov sub pop push mov cli inc mov dec mov sub sub push inc jg lock icebp sub rorb pop mov and cmpsb out push (bad) cmc push (bad) (bad) decl or sbb sti xor sbb push pop xchg lret jae jecxz push cmpsl out pop xchg lret push push lods jmp inc mov out xor fistl outsl aad xchg jmp xchg fsts dec cmpl je in push (bad) (bad) jo add ja out mov push aas ja pop js (bad) aaa jo push mov std dec mov jae and aad inc jg out cmp clc cmp loope push mov clc xor cld aaa outsl test sbb lods or divb push testb int3 adc pop push mov cli push mov inc jl in es xchg iret or iret or mov and mov xor aam imul mov leave or push inc jg out daa pop xchg iret pop aas jbe or mov and js and into or fstps mov lcall sbb add sbb mov inc mov fcoml out pop xchg int3 add pop pushf sti pop lods out pop fildll arpl popf lock call or fcoms dec mov sar lcall (bad) int3 add add lahf xlat sbb fild in daa in cmp cmp fistl dec test cli xor fstl test sti xor mov cs fcoms mov pop jg cwtl jecxz js cs adc xchg adc sub aad dec test dec mov sub jle or sub fstl dec mov cli xor sbb and jnp in daa jne cmp jo sbb mov sub sbb xchg stc xor pop push mov sti dec mov cmp loop addr16 sub mov sub xchg iret sub test sbb ret imul das push mov add call xchg cmc pop sahf fcoms dec xchg (bad) je out pop xchg lret add and xchg iret or mov daa pusha out lods or lahf fcoms pop repz mov xor ficom addr16 pop cltd aam inc cmpl dec xchg loopne push mov cld xor fcoml aaa call mov xlat adc bound sar insl cmpsb fistp push mov (bad) aaa jno lods out pop xchg lret add movsb or pop xchg int3 add ss jmp pop cwtl rorb add fcoml push mov cld outsl test leave add scas jmp or and out sub rorl shrb jecxz cmpl adc jb out pop xchg lret add jbe out pop xchg lret jne out pop xchg lret mov jb out push nop leave add pop les outsb test leave add mov popa pushf (bad) adc mov fstl push mov std aaa jo in push nop lret shrl mov and pop les loop jp in sub rorl pop hlt push test cmp pop pop xchg lret jne out pop xchg lret add ret mov daa pusha cltd rorb or out daa bound fwait aad dec (bad) mov add addr16 dec xchg add xor push mov add mov pop pop xchg lret add jns in and mov mov add jae out pop xchg int3 push aas jns in daa pusha lcall sub adc testl fs ficoml dec test enter stos in push (bad) add jae in push nop enter lods in xchg push mov add jb in lahf or and mov sar dec mov cld xor push (bad) add je call pop inc jns in es adc aam inc cmpb shrb mov popf pop imul mov sub aad inc cmpb adc inc test aaa add mov mov popa aad dec (bad) or inc mov add mov cmp push jmp or pop cwtl rorl xor loop pop xchg into or mov fistp mov or mov lods or mov cld xor fild clc xor jecxz pop xchg int inc jge hlt imul cmp mov sub aad mov dec mov dec xchg lock ret sub pop mov mov push dec cmpl cwtl std mov dec mov and inc test rorb xchg cmc pop mov xchg int inc jg hlt das push loopne push xchg int3 pop inc jge repnz pop push (bad) push stos xor cld jns,pt out sub xlat lret xor out pop xchg rorl inc cmpb xchg int inc jnp out cmp adc push and or movsb inc mov (bad) cmp in pop xchg sbb int insb fcompl push mov add inc cmpl cmp and lret xor pop cltd aam dec test in pop xchg iret or hlt push fstl push mov adc clc cmp and rolb push inc jp add mov sub adc ret jno out pop xchg iret or or mov idivb je call mov adc mov jecxz pop cltd rorl dec (bad) mov test push xchg lret add rorb pop inc jg repz mov inc jge lock adc cli xor test lret add insl (bad) sub fsts dec xchg adcl xchg rorl push push nop lret jp out sub adc ret jno out pop xchg iret adc mov clc mov jle and into or mov or mov loopne push mov add mov and cwtl rorb cmpb (bad) and popf pop mov xor call or xor loope push nop lret add js imul jg jnp sbb leave add js mov std cmp out pop xchg rorl inc cmpb sbb das pushf cld aas jp out sub mov xlat pop push mov add je pop jmp jo in sub in test mov mov jle mov data16 and (bad) ja cmp in and pop test and int ja,pt push roll pop xchg rorb inc jp in daa popa fwait aam bound rolb leave pop pop xchg int ja,pt stos and aam inc adc xchg fistl outsl test enter mov and mov inc jg hlt sub jne pop pop xchg iret or mov jne out pop xchg lret add jbe call pop pop cltd rorb (bad) push push mov (bad) cmp mov mov in es cltd inc rcrb push mov (bad) cmp jecxz push mov add jae in jnp out daa pusha cltd aam xchg idivl jb in push nop loop scas add or add add dec rcrl push mov add jb in push mov add mov daa pusha cltd aad xchg cmc xor cmpsl loopne push mov in stos jmp push inc jns in and sbb lret ja ljmp cmpb xor cmpsl out dec mov inc jge icebp sub inc test sub cmovns dec cmpl stc xor sbb in push nop lret daa mov sub xlat adc (bad) xor and iret or lret movb jbe call push aas js jmp pop xchg rorb lock addr16 in cmpsl (bad) cmp mov and ljmp in push xchg rorl jle repnz fcoms dec test fistp jno out pop xchg fdivs mov ds xor movl lds cmp scas call pop inc jp in and bound mov pop xchg int3 add (bad) xor movl cmc xor fistl xchg stc xor ficomp push mov cld pop xchg int aas js push outsl rclb aaa jo sub and inc jg mov aaa jo jecxz push lcall inc jns jmp cmpl cmp and xor add divb push mov ret outsb cmpsl loopne push mov std outsl test xor jecxz push mov cmp cmc xor fcoml pop outsl lds cmp pop test pop xchg lret add jbe jmp or mov dec xchg stc xor push mov pop jne cmp out fimul cli aaa jb call (bad) cmp jmp pusha fwait aad dec test sti ss in pop cwtl rorl mov loop push movsl adc inc popf ficoml ss jl add mov sub fsts dec mov (bad) cmp sub xlat adc xchg outsl ret add mov daa bound mov jge sti xor pop or add push inc jnp out sub adc cmp ljmp adc es or add jns out sub adc mov (bad) cmp and cltd rorl dec (bad) or push dec test or cli xor pop rep out pop cwtl rorb xor stos in pop xchg rorb xor fisttpl in pop xchg iret or negb adc data16 fsts sti mov push dec cmpl sbb xchg int3 pop inc jge icebp sub mov push jl add mov sub adc and dec stc xchg or hlt das push fistp push (bad) push inc jnp lock fistl lds aas jns out sub sub lahf fcoml push mov add bnd add jns in sub xlat adc sar jo in add rorb inc orb mov in pusha pop test push lcall mov xchg rorb inc cmpb sbb enter mov sub xlat adc jnp add jne test dec cwtl aad dec test mov jecxz pop xchg into or cmc xor sbb inc (bad) add outsb test je inc mov add jbe jl cmc das imul out sub ficoml mov (bad) cmp push cmc jp xchg stc xor sub push nop lret push inc jnp icebp sub mov sub ret (bad) cmp xchg cli pop mov into or mov in pop xchg iret or divb insb cmpsl loop push xchg int inc stos sbb hlt cs hlt imul cli xor jne je out sub adc cmp ljmp test cli xor loop push xchg int dec out lret xor hlt das insb cmpsb loope sbb push jo call push dec cmpl sbb (bad) negb adc pop jno das xchg cli shlb scas adc jle dec cltd aam dec cmpl dec (bad) mov fistl mov sti xor test inc jnp out sub daa xchg add xor sbb mov add or (bad) (bad) cmp in pop xchg lret add and divb insb movsl fistp push lods or data16 and mov fsts rorb rorl inc jle lock (bad) cmovns mov loopne push mov jp hlt cs popa lret mov es lcall add scas jmp or mov daa popa lcall push mov jne lock aad or inc xchg sti xor cmpsb loopne mov sbb (bad) (bad) cmp in pop xchg lret add jbe pop inc jp in es cmp lods in lret add jmp or sar jo fist dec test cli xor sti xor movsb fistl push lods adc ljmp push mov push pop xchg lret cmp mov mov fstl dec mov push push nop leave add add fstl push mov cld dec mov jne jmp or add in push nop lret jne out pop xchg in daa popa lcall test enter mov pop lcall inc loop jg repnz sahf fcoms dec test ficom push mov and into pop dec lods adc fcoml cld mov sbb add (bad) (bad) aaa jno in push nop leave add cmpl xchg int inc jge lock lods adc sub push mov add dec mov (bad) aaa outsl test sbb (bad) std xor push mov push push nop lret movsl pop pop fwait aam dec cmpl push aas js ljmp push mov cld xor push mov (bad) aaa jno pop inc jp in daa and cmp scas jmp dec test fisttpll inc jl out daa pusha cltd rorb add mov (bad) cmp in jns inc cmpl xor push xchg int3 inc scas ljmp dec test fistp push mov (bad) cmp add mov mov je jmp sbb insl cmpsl loope push (bad) (bad) (bad) sahf adc fwait pop mov or out sub cli xor cmpsl loopne jns aas jg repnz xchg adc daa cmpsb cli cmp in repz cmpsl loope push mov (bad) aaa outsl test sbb (bad) std xor fistl mov and insb shrb fs in sub xlat adc mov fsts dec test sti xor test inc jge icebp sub add aad scas or fistpl pop xchg lret mov push nop lret je out pop xchg lret jne out pop mov daa popa lcall test sbb sbb aaa cwtl cld aas sbb jno clc cmp add int3 cmp adc rorl inc jle add pop arpl sbb inc jp jmp cmovp fstl push mov cld outsl stos jecxz push add push mov outsl scas jmp xchg pop mov (bad) cmp sti pop ret or mov fsts dec xchg fistp push scas ljmp fidivl insb cmpsb fistp push mov mov ja ljmp daa bound hlt sub dec test add jne out mov stc xor test pusha leave pop jge sub adc addr16 sbb leave add pop xchg rorl dec (bad) mov add js in inc cmpsl or cmp (bad) adc outsb aam pop xchg iret or mov jmp jo jecxz push mov add jb in pop xchg lret add cltd rorl mov push (bad) add je (bad) data16 xchg and ret sbb leave add pop xchg rorl inc jg repz jne jmp cmpl jns sbb (bad) cld ss lock mov movb jne ljmp mov lds jb sub adc ret push mov repz lahf dec fldenv pop xchg iret or mov sub aad dec test add jae ljmp add ja pusha in inc mov sti xor add xor cmpsl loopne push mov (bad) cmp jecxz push (bad) add xchg into pop inc jns notl adc ret outsb cmpsl pop mulb adc stc xor fsubs pop cwtl rorb inc jle icebp sub adc mov (bad) cmp in dec stos push inc jge out outsb into xor std pusha jg push mov jge inc mov test outsb mov sub aad xchg testb repnz sahf fcoms dec test ficom push mov (bad) cmp in pop xchg rorb inc jge lock fisubl push dec cmpl adc or repnz adc mov ficoml dec test cli xor sbb ret cld xor push mov dec mov cmp out pop xchg int aas jns or ret jno in push (bad) lods cli xor test enter scas jmp cmpl jo adc sar insb mov add ja ljmp fcoml dec mov std outsl test sbb (bad) jno in push (bad) add je sub jmp or icebp sub push lods ljmp jbe jmp add jbe cmovns movsb fstl push mov add jne call pop rorl mov sub lock mov lock adc divl imul mov sar insb cmpsb ficom push mov sti xor or shll jge push dec (bad) enter and inc jg repz mov (bad) mov fsts dec test fcoml mov xor test sbb push mov xor fistl outsl test sbb (bad) (bad) cmp in push (bad) add jae in push nop leave add je ss out pop xchg into add inc jg pop lods or divl push fstl dec mov cld stc inc cmpb adc divl imul ss cs fistp push (bad) leave add lcall xor fcoml loop push nop lret jbe jmp or icebp sub mov dec xchg into or mov aad push lods adc aad dec cmpl push test fstl push mov cld outsl scas sub mov add je shll int3 push inc jp in daa popa lcall mov fsts dec test fcoml xor lods cmp leave add mov fidivrl xchg (bad) cmovns mov jns in and inc jge lock (bad) cmovns stos xor movl xor mov sub ja (bad) cmp in pop mov addr16 ja les jg xor pushf adc call leave add ja ljmp ret sub jecxz mov cmp mov sub adc push xchg int inc jle je std aaa jb call daa popa mov jb jmp pop cltd sbb out sub adc ret std cmp out pop cltd aam dec test cli xor out xchg ficoml cmp ljmp cmpl push mov incl add add jae jmp and mov inc cmpl cs xor fstl push mov aad inc cmpb push mov sbb xor mov sub loop and jl lock aam repnz dec mov add cmp out pop xchg int pop xchg rorl inc xchg jo lock adc and xor in daa pusha lcall cmp in push (bad) add je out pop xchg int3 push aas js idivb jns in es fimul rorb inc jge out sub jecxz xchg stc xor sbb cmp ja ljmp jle repnz mov loopne push mov xor push and xor mov (bad) ret (bad) mov fcoml cmp and into pop inc mov xor fstl push jb inc mov (bad) aaa jno in imul dec cmpl mov ficom push mov sti xor cld pusha cmpsb loope push (bad) (bad) (bad) cmp in push xchg rorb inc jge lock jecxz cs push mov (bad) cmp out pop xchg rorl inc jge lock pushf xlat adc mov jp cmp imul mov add jae out pop xchg lret ja in and inc jle icebp sub push pushf (bad) adc mov mov push inc cmpb mov sub aam inc cmpb adc xchg cli xor cmpsb loopne push flds leave add xchg into pop inc xchg stc push (bad) add cli xor sbb fstpl push mov (bad) aaa jo call (bad) movl test sbb add sub cmp icebp inc adcb cmpl push mov (bad) cmp out pop xchg int3 add mov sub (bad) xorps fdivrs jle repz dec add add xlat adc sar insl cmpsl loope push (bad) add xchg rorb inc (bad) sub arpl xchg inc jge lock test pusha imul push mov xor ficom push testl dec xchg stc xor sub dec xchg fstl dec mov cli xor fstl dec xchg sti xor sbb jecxz push (bad) (bad) out xchg inc test stc xor sbb push call mov fcoml xor ficoml push xlat test fstl imul fwait aad inc jg icebp sub inc jnp out daa pusha cltd rorb inc jle lock aad dec or ss sbb movb lock cmpsl or mov add je in int3 pop push mov (bad) cmp in push nop leave add jbe jmp pop inc jnp in es pop lcall sub or adc iret or mov xor or mov ficoml xchg cli xor cmpsl loope push lahf in cmp pop mov jmp fildll mov sub dec rorb jg repnz xlat adc mov ficom push (bad) (bad) (bad) cmp in mov push aas js jmp aad and jb out pop xchg add or adc mov fstl dec mov sti xor test sbb (bad) pushl jo loop cltd std dec mov (bad) cmp in aad and sbb (bad) std aas fsubrl bound cmc addr16 dec mov sti xor push (bad) movb enter loope push leave or push mov push (bad) movl and pop xchg shll inc (bad) mov fcoms dec cmpl xchg cld dec mov std ss jecxz pop xchg cmp sub fsts dec xchg jae out pop xchg iret or mov es cltd rorl jg repnz seto dec test fistl dec test xor test add push mov pushl jo data16 sar insb movsl fistp push mov std outsl test (bad) pushl xor loopne push mov sti xor test cmp call pop inc jns push ficom push mov std ss loop push nop lret jne call pop xchg jp,pt in es cltd rorb inc jge ja inc cmpsb or sar insb cmpsb fistp push mov std outsl test sbb (bad) jno jecxz push (bad) add jae in lods adc lret ja sti test dec cmpl pop xchg into pop inc jns jmp pop xchg into pop inc jns ljmp jbe out pop xchg lret in cmp and int3 add icebp xor sbb (bad) std aaa jo jecxz push (bad) (bad) (bad) cmp in push nop leave add xchg int3 add outsb cmc test push mov ficomp push mov (bad) cmp and into or mov insl shrb push lods or pop xlat es lcall sub dec xchg sti xor push mov (bad) cmp in push nop leave add je out rcrb jbe es pop aad pop xchg iret or mov daa pusha add sar xchg aaa xchg repnz mov and popf add mov push jl dec or inc jnp out sub aad push fcompl push mov add je call pop fcomps rorl inc jl lret daa mov inc cmpl and lret add jne call push aas xchg rorb inc jge out sub popf (bad) adc mov mov inc repz pop insb into sub xlat adc ja,pt jmp pop xchg rorb inc lods jmp pusha lcall sub mov inc cmpl test cmp and inc cmpb adc stc xor lods out pop xchg int3 add inc cmpsb or (bad) (bad) cmp in mov out add add pop xchg int aas js jmp pop xchg rorb jg stc xor sbb (bad) jno in mov sti xor rorl aam pop xchg int3 push inc jmp sbb lret add and sar outsl test movl inc mov divl insb cmpsb sub jmp test cmp pop pop xchg rcll dec cmpl dec test lret jbe jmp pop inc jns out dec lods or mov inc cmpb cmpl movsb ficomp push mov add jae out jp repz dec xchg cli xor test inc mov icebp sub repz scas add js in data16 sar insl cmpsl loope push (bad) movl dec cmpl ret shll pop xchg rcrb dec mov (bad) mov (bad) push jg xor loope pop lock mov inc jl out inc ljmp sbb cmp xlat xor ja cmp aam inc cmpb adc xchg sbb sub adc sbb nop int3 sub int3 push aas jg stc xor loopne push (bad) movb jae out sar jo loop push mov add jae (bad) pop mov test sbb das (bad) loope pop xchg and fistp push mov std xor push mov std lods ljmp jnp in es cwtl loopne mov add test or mov inc cmpl ret std ss loop push mov add lret jne call push aas js or dec xchg sti (bad) ficoml xchg in pop xchg into imul mov fcoms outsl test lret jbe call inc mov hlt mov cmovnp sbb movb jns in es cltd rorb fs (bad) adc fild sbb (bad) std aaa jo loop push mov cmp out sub adc cmovns push push mov (bad) cmp adc sar insl cmpsl loope push (bad) movb lcall xor fstl push mov aaa cwtl in sub aad dec leave adc popf loop pop xchg int3 push mov cmp in pop xchg lret jne call es cltd add cmovns movsb add push dec cmpl ret rorb dec cmpl leave add scas jmp or aad dec cmpl fistpll lahf in sub xlat push scas stc xor pshufw aaa jno in pop cltd rorl cmpb adc clc push nop lret js jmp pop xchg rorb inc jge sub (bad) lods divl imul (bad) adc sbb (bad) jb out mov (bad) cmp jmp or int3 sub xchg int movsb icebp sub add repnz push inc cmpl mov xlat jg,pn hlt sub dec test addr16 imul out les dec xchg cmp ficoml sahf ljmp jle add sub jae out pop xchg int aas jns in es popf sti pop mov (bad) mov sbb std aaa jno lock adc sti xor pop xchg into and aam inc cmpl jecxz movsl call push scas or gs fcoms dec test loopne push (bad) (bad) (bad) cmp in jl lock xlat adc mov push ja add jne push mov jge lods sub xchg loop mov sub add adc cli ss mov add je out push nop leave add push pop xchg rorb inc jg repz push mov sbb int inc jnp out sub xlat adc loope movsb out pop xchg int lahf in daa pusha mov jne add fisttpll mov fcoml pop cltd rorl sub dec mov dec test and xor repnz mov xor and into or mov es cltd aad inc cmpl jecxz push nop leave add (bad) xor mov xor sub movsl fistp push mov std ss in push (bad) add je add jg icebp sub (bad) cmovs rcrb leave add jbe (bad) mov adc lahf jmp ficomp push mov push repnz mov mov cmpsl loope jno in pop xchg lret add js jmp pop mov ja sti xor test push mov sub xlat adc mov xlat adc mov (bad) das imul movsb fstl dec mov and xchg fistp push scas adc out pop xchg lret jns (bad) cmp in push nop leave add scas jmp push inc jns jmp lock sub pop push mov (bad) cmp push dec mov (bad) cmp push mov add je call sub dec xchg stc xor sbb or repz sbb inc xchg repnz xchg rorl dec mov std aaa jno in push xchg lret ja ljmp mov mov ficomp push test push cwtl rclb adc or fstl push mov add cmp in push (bad) add jae out pop xchg lret cltd rorb inc jle lock aad dec mov and pop movsb fistp push mov push jecxz push mov add je out push nop leave add je out pop xchg in pop xchg into pop inc jp out daa pusha lcall movsb ficomp push mov gs jmp jl icebp sub cwtl rorb jg icebp sub adc mov divl insb movsl fistp push mov (bad) aaa mov dec cltd aam inc jg insl mov inc xchg add add cld xor iret or mov sub adc xlat pop push (bad) movl and or add loope push lea arpl or dec test fsts dec test fcoms dec mov sbb (bad) jo loope push mov (bad) ss dec xchg add push dec (bad) add ret xchg cmc dec mov sti xor cmpsb loopne push mov std xor push (bad) (bad) jo cld xor repnz mov outsb shrl icebp pop (bad) (bad) iret xor add push nop lret test and dec stos or mov sub outsb stos in arpl and pop cwtl rorb jg repnz lahf fsts dec xchg loopne push mov add mov in or dec mov mov jg addr16 adc mov add je call pop inc mov cmp push mov imul lods or mov push jno pop inc jnp out sub aad dec (bad) mov ficomp push mov (bad) cmp repnz ret std xlat dec popf fsts outsl (bad) xor scas out fcoml push mov std aaa jno jecxz push (bad) add mov and xchg rorb inc mov sar ds add lret or mov sub in mov cmovns mov sar outsl test (bad) cmp mov sub or ficoml mov (bad) int inc jl out sub aam inc cmpb adc sar (bad) int3 push aas jnp out sub out inc jle icebp rorl mov cli pop mov sub mov sar outsb test sbb nop leave add je out sub (bad) punpckhwd sub loope (bad) icebp sub jbe sub mov cmp pop xchg rorb inc jge lock fcoms dec test stc xor mov sub add rorl data16 add sbb lret jns (bad) cmp in push nop enter scas out pop xchg rorb inc jge mov cld xor js xor out in pop xchg iret or pop xchg int sar jo jecxz push nop leave add cwtl rorb inc jle icebp sub test and out jne jmp jno in xchg cli cmp scas jmp or mov es cltd rorb dec cmpl mov cld outsl test cmp fistp push mov (bad) pop mov push icebp sub adc divl push fcoml dec mov sti xor js in es cltd rorl push sub out and pop xchg iret or (bad) in daa pusha pushf (bad) cmovns mov sar outsl test sbb mov es cltd rcll jae sub ljmp jge and cmpb xor mov sar imul and jne imul pop and pop push aad lahf add lds (bad) pop push sahf adc mov fistl data16 ficomp push mov (bad) aaa jno gs and inc jnp in sub aam imul pop xchg into pop inc enter roll rorl jge lock fistl push mov cld outsl test movl and cwtl rorl push push mov adc and rorl inc aam pop xchg iret and int3 add inc jp in es cwtl rorl inc jl out daa bound mov xlat adc ficom push mov or sbb add sti inc (bad) mov inc jl in es in cmp out pop xchg rorb inc jge lock adc mov (bad) cmp out mov in mov cmp push mov in pop xchg int3 pop inc adc dec xchg cli xor loopne push (bad) (bad) (bad) cmp in add je call and rorl xchg int3 es push dec mov std fldt arpl mov fistl imul sbb sbb es fwait aad cmpsl repnz popf in pop xchg rorl outsb leave add js jmp pop cltd rorl imul leave add add inc jle repnz cmp popa mov xor stos adc push inc test cmp outsl stos in pop xchg lret sub outsl mov loopne mov jmp dec stos (bad) cmp pop push xchg lret je out push nop leave add pop inc jns cld pop rclb (bad) std ss imul push fstl rcrb cs add jae in push (bad) add jno loop jnp in and xchg xchg add mov sub es fwait aad xchg jecxz pop xchg int mov or sbb ficomp push movsl sub add lret push jo xor mov (bad) sub arpl add rorl test out lods stc xor push xlat and clc push mov js cmc ss or stc xor ficomp push (bad) movb je out pop xchg lret es xlat adc mov push mov sti inc fisubl ja aas sahf add lret add jbe call add ja call add jbe call sub push inc jg adc push dec cmpl jnp (bad) cmp out pusha lahf fcoml outsl test leave add je jmp xor stos in push nop xlat cmp jbe add push inc ret scas out pop xchg int3 sub adc lret fsts nop fcoml push mov inc lcall xor loop push mov (bad) aaa jo in push (bad) add jae in push (bad) and cltd rorb inc jl sbb sbb dec mov cli mov cmp push jo cmc das push xchg lret add jns jmp pop xchg iret or mov es cltd rorb inc jge adc ret std ss or (bad) cmp in lods cmovp or jge out xchg loop push (bad) add xchg int inc jns in es cltd shrb gs fcoms dec xchg aaa cltd loop push nop fldenv in es lcall xchg rorb inc jle icebp sub adc mov fcoml dec mov cld xor jno in push nop ljmp int rcrl push loop mov enter lods out pop xchg lret ja ljmp pushf aad dec (bad) (bad) xor shlb arpl inc xchg int3 add and xchg rorb inc jl out sub aad adc mov stc xor jb sti xor lret jns xor jae dec lcall addr16 dec test fistl mov (bad) aaa jno sbb jp bnd add leave daa cmpl push mov cld xor dec xchg clc xor fsts dec cmpl adc je out lock adc sub aam dec mov sti xor cmpsb fistp push mov (bad) aaa jno jecxz push xchg lret add ja pop inc jnp out sub or sti xor aam dec test dec xchg iret or mov sub fsts dec xchg loopne push mov add jae out pop xchg hlt xor fistp push xchg repz movsb loopne push mov dec xchg rorb inc jg inc mov (bad) cmp cmp test movl pop pop xchg iret or mov inc cmpb jnp (bad) cmp mov adc lock cwtl rorb das imul stos in pop xchg int inc jl out sub clc xor loop add push pushf add call or dec xchg into or mov sub fsts dec xchg std ss jecxz push nop lret js jmp pop cwtl hlt cs xchg negb loopne push (bad) movb rorl inc xchg notb rorl mov daa popa fwait aam inc cmpl enter movb popa mov xor imul dec in cmp out pop xchg int3 add and nop hlt pop push repz sahf fsubrs sti pop mov stc xor ficom push mov add jae in push nop call pop inc test inc lahf ficom push fildll data16 fcoms dec mov sbb int jbe,pt out push pop add jo jecxz push mov std xor dec xchg sbb cmp xor lret jne out mov es mov sbb push sahf fsts dec mov sti xor sbb aas js jmp pop xchg in es cltd rorb inc xchg repz lcall insl mov xor in es lcall xor fstl push mov (bad) cmp ljmp jge adc stc xor aaa xchg sti xor mov and scas out pop xchg into pop inc jnp in daa popa lcall sub lahf fsts dec test lret js jmp pusha mov cmp imul movsb pop and mov inc jge push inc jnp out sub (bad) sub or mov daa imul cmp inc (bad) mov inc xchg rorb repz imul stos jecxz push nop lret ja ljmp mov push push mov arpl aaa js ljmp rorl jg repnz sahf fcoms dec test fcoml push mov std aaa mov dec xchg into or leave push mov and fistl add ret jo in push xchg lret add ja jmp or mov sub cli xor cmpsb loopne pop mov and push popf fcoms pop mov cmovns movsb ficom push mov (bad) aaa jno add and into or mov sub xor loop gs sub out sub inc cmpsl loope insb int push xchg mov sub aad dec cmpl sbb (bad) (bad) cmp add sub aas test inc (bad) enter push dec mov std ss jecxz push nop leave add je out pop xchg int3 push aas jns in and inc mov movb cltd sti add add js xor mov cmp mov and push mov (bad) cmp out pop xchg int3 pop inc jge repz mov out pop xchg rorb dec mov popa pushf xlat adc mov dec stos or ret std aaa jno in fisubr gs fsts dec xchg std aaa jb out pop xchg iret or push push mov (bad) cmp sti push (bad) movl mov sub in xor and or cmp mov es lcall xor fcoml dec test lret scas adc or jg dec lods call sbb mov mov add nop enter js in and inc jge repnz xchg stc xor fstl dec mov cli xor fstl push mov cli xor mov and mov and decb mov dec xchg stc xor cmp cmpsb fistp push mov (bad) cmp and into or cmovns std push (bad) add add dec mov cld dec stos or mov add je jmp popa fwait aad dec cmpl sbb enter rorl inc jg repz cld outsl mov jbe sub mov sar fsubrl gs fcoms dec test loope push mov add xchg add into or mov aaa xchg testl stc inc cmpl sub inc xchg int3 push inc jp in es cltd aad dec (bad) mov fsts arpl sar scas adc lret add cmpsb loopne test das push ficomp push (bad) movl cmpsb fistp jbe ljmp sbb leave add sbb aam inc jg dec sahf xlat adc pop xchg int aas js jmp addr16 dec xchg stc xor ficom dec mov cli xor jbe ljmp repnz dec fwait aad jne pop pop xchg into pop inc jns in daa bound cmp out pop xchg lret add ja jmp sub (bad) sbb sub push xchg sub mov out pop xchg iret or or (bad) mov fistl xchg sti xor ja in daa pusha lcall mov and jecxz xchg repz sbb enter addr16 dec xchg cli xor cmpsl loope push (bad) add int3 add inc movsb add mov jb in lcall pop xchg lret add int3 push inc jns in rcrb push (bad) add jae in jno in push (bad) push push jb out pop xchg int3 add daa mov sub xchg (bad) dec mov (bad) cmp sub add push mov add jl push mov (bad) cmp out pop xchg int inc jge icebp sub es inc (bad) mov fisub mov addr16 jecxz push clc inc cmpb sbb lret push inc jg hlt cs (bad) cmp dec mov pusha pushf xlat adc mov pop outsb stos in pop xchg into or add mov (bad) cmp out pop xchg iret or mov stc xor in in aad pop cwtl rorl inc jp ljmp cmovnp decl sar jo in pop xchg rorl inc mov ret std aaa jb out pop xchg shrb mov xor in pop cltd push mov das imul push inc jl pop cwtl aam dec xchg sti aaa xchg rorb cmpl sub pop stos in pop xchg (bad) xor cltd ljmp mov sub adc mov add je call xor test sbb xchg lret add fs sbb dec fwait (bad) adc mov dec test gs es lcall xor test and lock adc mov std cmp clc pop rorb (bad) lret push inc jnp out (bad) (bad) xor iret or cmc das jmp jb call or pushf xlat adc ret (bad) cmp jmp xchg jmp pushf xlat adc and aam dec xchg daa jae jmp adc sti ss in push dec mov (bad) cmp xor fcoms push (bad) movl aaa mov push mov (bad) cmp out test pop cwtl rorl push mov stos addr16 sub adc dec lods push push (bad) cmp add imul xchg int inc jge cmc das ja cmp dec xchg push movsl fbstp pushf add and iret sbb xchg fdivs pushf add icebp sub lret jnp out sub jns adc ret aas cmpsl or cmp cmc xor sbb lret sub and idivl xchg stc pop les mov sub pop stos add aaa popf add sub mov and enter push xchg rorl cmpl and cmpsl ljmp inc scas adc cmp fcoms dec mov cmp inc jg cmc das push fistp insb into aaa popf jmp or adc mov daa mov push mov jp push mov icebp push mov push (bad) enter mov dec mov and mov repz add inc jge adc add add cld aaa jb out pop xchg rorl inc and mov jp sub fstpt mov cwtl notl aam nop idivb mov test pushf add lds iret inc leave sub js mov fistl cwtl sti pop mov shlb lods out add rcrb int sar outsl test leave add pop xchg rorl inc jge jo add jae in push nop fidivrl pop xchg adc and inc mov (bad) cmp in pop xchg int3 add es les stc inc cmpb xchg (bad) cmp xor incl adc push mov icebp sub lahf loope push (bad) movl mov jne out daa pusha cwtl rorl inc jl sti xor push dec (bad) mov fcoms dec cmpl push dec mov sti xor lock movsb loopne push mov std outsb cmpsl loope mov and inc jge out sub aam inc mov jmp pop xchg rorb inc jnp in and inc jg addr16 and inc jge inc mov adc xchg cli xor sbb add add out pop xchg int3 add and or jmp in push nop leave add rcrl mov and xchg rorl inc jg clc xor ja in and inc jle repnz xlat adc mov push mov sar insl cmpsb (bad) inc xchg cli xor fistp push (bad) movb lret js ljmp jl lock aad dec (bad) mov pop mov (bad) jae clc lret inc cmpl mov push mov (bad) cmp jecxz push mov add je out pop xchg lret add insb movsl ficom push mov jnp and ret insl cmpsb fistp push mov dec xchg cli xor cmpsl loopne push mov (bad) aaa jo loop push mov add addl push (bad) (bad) (bad) cmp repnz rolb sbb nop enter jbe out mov adc mov fstl push mov std ss out pop xchg lret add mov daa popa fwait aad dec cmpl jmp or mov inc jp out sub aam inc cmpb adc xchg cli xor sbb les cmp in and ficomp push mov (bad) cmp out imul movsl loopne push (bad) movb jae out pop xchg rorb inc jge icebp sub push xchg rorl inc cmpb mov and int3 add sub in push (bad) add xchg iret or mov sub or mov cmp sub je lahf cli pop mov je dec inc mov jp and stos call xor mov and aas ja add jnp or inc mov dec test lods add and das addr16 xlat adc mov pusha mov icebp cmp scas pop jl (bad) fs aam inc jle xor xor aad inc jle notl or dec mov clc xor fsts push divb xor lock rcl push ret fcompl jb jmp add insl leave adc mov aam sbb pop aas js jmp faddl aas js call das data16 (bad) and sbb ret cld xor movsl fstl xor push pop xchg leave add jb jecxz push mov cld xor sahf xlat cmova cltd rorb pusha lahf fcoms dec cmpl push inc jg lock rorl rorb jl in and aas ja out les es xchg int cmp js jmp pop xchg int3 add and leave add jb jecxz push mov sti xor sub sahf (bad) push inc add fwait rorl repz pushf aam inc jge in and push xchg int3 add jne in push mov pushl outsl test sbb sar imul imulb addr16 xlat cmovs lcall jo loopne push mov clc xor movsb fcoml addr16 fcoms dec cmpl push nop enter stos loop push mov std ss call add jno loope push mov stc dec mov std outsb cmpsl fist push mov stc xor fistl dec test or loop arpl in and cmpsl loopne push mov stc xor fsts insb cmpsb ficom dec xchg clc xor ficoml dec cmpl push inc cmpb mov jno sub mov pop mov sbb sahf add pop movsb (bad) dec xchg jmp test xor cld pop mov xor clc push lcall mov leave sbb (bad) (bad) push test insb int3 and sahf (bad) cmova out ss xchg adc lret loope mov cmpsl pop arpl inc xchg int3 add stos push push mov icebp sub cmc pop mov mov sub sub (bad) scas push lds mov push stos or push mov cmp jge cs inc cltd xlat adc mov add mov out jle inc stc pop xchg into push ds inc mov add push mov es add add int3 add jns cmp ret sti xor shlb fnstsw jp cmc stos (bad) dec test imul ljmp xchg into pop inc jns add loope pushf ficomp push mov add adc jle ret (bad) mov dec test lcall mov xchg repz mov std dec mov inc jge stc dec test jbe,pt sub stc inc sahf add push push mov xor and into xor add mov dec add lret jns xor mov in lcall xor add push rcrl push mov push mov sub sbb dec test fsubrs (bad) jmp push inc imull jecxz push (bad) (bad) push pop xchg int aas js jmp add and xchg iret or mov stos sbb mov imul fdivrl fwait sub loop mov inc pushf add and out dec mov icebp dec test sbb cli push lods movd popa mov dec test push push scas or mov out pusha mov sbb fistpll lcall and mov cltd sti pop mov jo mov pop mov js mov js das mov dec mov imul adc int (bad) fidivl xchg in dec ficompl or or push bound (bad) outsb cmpsb ficom dec xchg aad mov fcoml sub rorb inc jnp ljmp jo (bad) cmp push pop add je in push mov (bad) cmp loope push mov and aad inc jle out daa pusha cwtl rorb inc jns test inc stos or sti push lret cmp sub outsl lret (bad) add je mov ret outsl test incb mov sub (bad) adc mov fstl push mov std ss data16 and cwtl rorb inc cmpb lahf fsts dec xchg sti xor push (bad) daa popa fwait aam inc cmpl sar insl cmpsb fistp push mov jbe std ss in push nop lret ja ljmp (bad) adc mov push jb and sbb cmp into or mov sub xchg pop movsl cld pop shlb cmpsl adc jae ss repnz mov push mov push sarb pushf push jnp push repz add add int3 sub call push inc jns cmp mov aad xchg xor jge dec lods push cltd rcll rorl das imul (bad) xor push test aas xchg and and cmp mov int popf add and jns cmp inc mov lret in mov nop imulb cmp dec xor xor cli popa into cmp (bad) ss stc pop mov imul cwtl inc repnz lds fidivr cwtl xor mov sbb push xor fdivrl lock mov jns cwtl cld (bad) and movsl add je sub push fnstenv lahf or xchg inc mov insl or sub mov inc (bad) sub call sbb cmp mov into xor js mov mov pop je sub xor jg xor in lcall (bad) xor xor out dec mov jne sub cs cmp fimull test cmpsb sbb xchg rorb inc jge out sub sub cmovs sbb adc inc jg (bad) cmp in pop xchg into pop inc jp sbb movb jae in push nop leave add xchg into pop inc adc rorb inc jge lock aad inc sbbl push mov cld xor push movsb loope push mov add jb in push nop leave add je out add rorb inc adc or mov es cltd aam inc sbbb fsts dec test ficoml dec pushf ficoml insl cmpsb loopne push mov (bad) cmp in pop xchg int3 add mov sub aad inc cmpb addr16 dec test fistl mov fsts dec (bad) mov aam inc mov (bad) outsb adc rorb inc jp in es xchg rorb inc jp push mov cld xor push mov daa pusha cltd rorb inc jge out daa pusha cltd rorb inc jle lock aad push add xor push mov cld xor out push fstl xor fistl aam inc jg icebp sub (bad) cmovs sahf xlat adc addr16 dec xchg fistl jmp jo jecxz push mov add cmp pop mov fcoms insb cmpsb fistp push mov (bad) cmp in push xchg lret jne jbe jmp pop inc jp jmp pop adc int inc jns jmp pop mov sub aad inc cmpb adc mov fcoml push lret mov sti xor outsl leave adc cmpl add sub out pop xchg int3 add and xchg rorb inc jl out sub inc jl out daa pop cwtl rorb inc jl out daa pusha mov call pop inc jns in mov out pop xchg lret add nop leave add jae in out cmp pop pop xchg lret add jbe call ja jmp push aas ja jmp es cwtl rorl inc jl out daa pusha cltd rorl inc jl out daa pusha cltd rorb inc add mov std outsl test sbb mov add mov cmp out pop xchg lret jne out jno jmp pop inc jp in and inc jge lock aad dec fsubs inc jge out sub aam inc loopne arpl mov xlat adc fsts dec xchg stc xor sbb (bad) (bad) cmp out pop xchg into or adc xchg cli xor sbb (bad) std ss adc mov ficom push mov sti insl imul cli pop mov bound adc mov es cwtl rorl inc jnp in es pop cltd rorb fs (bad) adc add jbe call xchg into or jp in es cltd rorb inc jl out daa pop cwtl rorl inc jge out sub in push (bad) fnstsw mov xor push clc xor loopne push (bad) (bad) lcall or icebp sub xlat adc mov fistl out sub icebp push mov xor and pushf aad dec or dec add cmpsb fbstp jb out pop xchg lret ja ljmp jp in fwait out pop xchg jmp scas out sub (bad) out sub (bad) popa scas ljmp jle repz mov (bad) cmp in push nop leave add pop xchg int cwtl jecxz push xchg in dec lods jmp pop xchg ficompl pop xchg int3 add jbe daa xchg (bad) cmp jecxz push (bad) add into pop inc jns in and inc jl out daa pusha cltd rorb xchg jecxz push nop lock repnz lahf fsts push mov std cmp push inc jg lock aam fs xlat adc mov fsts dec cmpl (bad) adc fcoml int mov loop cltd aam inc jg icebp sub aad gs (bad) cmovns popf aad inc cmpb or xchg cli xor test iret or push pushf (bad) adc fiadd rorb inc jp in and pusha cltd rorl inc jnp in and aas ja ljmp loop push xchg in push test pop pop xchg int3 push mov out lcall sub jb in pop xchg lret jne jmp push aas js repnz aas js das xchg xlat adc dec fwait aad dec test inc xchg iret or mov sub aam insl cmpsl loopne push mov add jb in push nop leave add add scas out fild in push nop leave add dec scas hlt addr16 dec xchg adc movb jnp out daa pop cmp cmp in push nop lret popf (bad) push inc cmpb cmova sahf xlat adc xor or aas jns jmp pop fwait pop imul add add jo loop push mov sub fistl imul xor cmpsb fistp fsubs mov fistl adc out pop xchg int3 add inc jp in es cwtl rorl inc jge lock aam inc jg repnz pop lods adc lock out pop test sbb (bad) dec movb xor push dec xchg clc xor (bad) aaa jo loope push (bad) lds cmp sbb (bad) jae add mov daa pusha cltd rorb inc jge lock aam inc jg icebp sub bound imul mov xor ficomp push mov stos out pop xchg into pop inc jnp out sub xlat adc mov push test xchg push movsl fistp or adc loope push (bad) (bad) (bad) cmp pop inc jl out sub aam inc jg repnz adc mov dec popf (bad) pop mov (bad) jno in cmp mov fstl dec mov sbb (bad) add je out pop xchg lret jne out pop xchg lret add jmp xchg into or mov sub fbld sbb add add mov inc (bad) mov ficoml insb movsl fistp push mov std aaa jno cmp or addr16 es out pop xchg lret add jbe or mov fcoms dec test fcoml ss xchg int3 push inc jns in and sub out pop xchg lret add ja or mov sub adc mov fstl push mov decl inc mov adc divl imul (bad) add jne add pop xchg iret or mov sub xlat adc mov je aaa cmpl sbb int add js,pt in es cltd cmc xor add add pop push mov cld xor push (bad) add je out pop clc inc movsb or (bad) adc mov mov stos jecxz push (bad) add je add pop cwtl rorb das push mov cld inc (bad) and fidivrl mov std ss jecxz push (bad) rclb or mov and xchg repnz dec xchg fistl dec test xor repnz inc xchg sti xor sar mov inc jg icebp sub aad dec sbb cld xor push mov std outsl test sbb mov dec mov (bad) cmp pop cmpsl loope insb shrb outsb test sbb add jp adc mov fistl mov sti xor cmpsl loopne push mov ficoml shlb test imul xchg cmp pusha cltd rorl (bad) fistp push mov (bad) cmp jecxz push mov (bad) cmp in push popl enter xor jmp pop cmpsl and pushf add mov (bad) aaa jno out pop xchg out sub (bad) cmovns dec jo inc mov cwtl repz inc fdivrs (bad) (bad) xor pushf add adc aaa jb out imul xchg sti pop ret test pop mov push (bad) push jl je add jbe call add mov dec xchg sti inc movsb pop popa popf xlat adc mov (bad) minps or jg repnz (bad) cmp jecxz push (bad) add je out pop nop lret add and lret add mov addr16 dec xchg cli xor sbb sub dec xchg add ja jmp or mov es cwtl rorl inc jl out daa pusha lcall mov mov ficoml je es fwait aam inc cmpb dec test fistl pop xchg int pop ret and jge stc xor and in js test add mov add daa popa popf xlat adc mov loope push dec mov inc test push mov (bad) aaa and mov add cmovnp fcoml push mov std cmp in push nop leave add je out pop adc cmp pusha std insl scas ljmp add pop pop xchg lret jbe push aas js in daa pusha lcall sub aad inc or addr16 dec testb push mov cld outsl test sbb mov sub fsts dec test fistp push mov (bad) cmp push out jnp in daa ja cmp notl add jno jecxz push mov daa pusha fwait aad inc cmpl mov test add sbb (bad) aaa test cmpb push aas js in and gs fcoms dec test ficoml dec test jns stc push mov push mov cli xor pop ret jge out sub (bad) push inc cmpsb in push nop lret jbe call pop inc jp in and out dec scas or icebp xchg sub call rorl inc movsb loopne push nop leave add scas call push inc jns in and lds imul pop xchg int inc fimul lret fstpl pop add jae in push scas in es cltd rorb inc jle lock aad dec cmpl adc cmp arpl xor ficomp push mov (bad) cmp mov fcoml dec mov cld xor fs out test cmp and insb test dec lods divl imul pop jle aas mov arpl call (bad) adc ret outsl test scas cld cmp in pop xchg lret add ja ljmp jg outsl test cmp pop xchg int aas js notl add js jmp pop cwtl rorb add add (bad) jb out pop xchg int3 pop inc jnp out sub cmp push pop xchg lret add ja ljmp xor loope push mov add int inc jnp out sub aad dec test loopne push popf sub stc pop rcrl (bad) movl pop movsb jmp push fstl dec mov cli xor lods in pop xchg int3 add and rorb inc jge jae cli pop rorb jge lock fistpl in dec scas divl insb movsl fistp push mov (bad) cmp mov and inc cmpb adc pop fs loop movsb cmc xor ficomp push mov push popf in movsl jmp or mov clc xor daa and mov cld inc fildll mov fsts dec adc roll jno loop push mov (bad) push xchg int3 add jne out push pop add jno loop push mov cld dec loopne gs out cmpsl divb imul xchg aad lcall cmp jge lock aam inc jg icebp sub aad inc cmpb xchg fstpt fwait jmp pop inc leave adc lret aam dec (bad) mov fcoms test fistl dec test fsts dec (bad) mov push mov xor add lds dec add mov push inc cmpb punpckhdq ret cld xor sbb pushl jo loop (bad) and in cmpsb jmp pop cwtl rorl inc mov pop or aas js ljmp lahf fcoms dec cmpl dec cmpl mov sub mov sahf fcoms dec test push mov (bad) cmp jecxz push (bad) (bad) lcall iret or mov and inc jl out daa pusha cltd rorb inc jge dec cmpl adc mov xor arpl lock rorb jns in add and inc idivb ja jmp add stos in push mov add jno loop push mov ja ljmp jbe out push (bad) add lret add jne out pop nop leave add jb in push mov pushl jo inc jp jmp pop xchg into push aas ja jmp add add fistl test xlat adc aam inc jg icebp sub aam inc jle out sub rcll xchg fistl (bad) and notb adc daa sbb mov add or dec mov ja divl push or dec mov jne jmp jecxz mov das xchg clc pop mov mov fwait aam jle pushf divb int3 xor push mov stos call (bad) adc (bad) mov mov (bad) cmp cmp dec sahf add mov dec mov jns jmp test dec test movsl icebp dec stos adc or cmp lds inc jle or xchg shll xchg dec lods cli outsl test pop mov call test mov test sbb sub (bad) jb out stos or hlt sub imul mov jmp push push xchg lret add cwtl sti popa (bad) sbb leave movsl push jl push inc jns jmp jns inc stos xchg in jb inc scas or mov (bad) sub mov inc mov insb cmpsb loopne push mov inc test pop xchg rcrb fs (bad) pop jl fisub pop xchg fstpt mov sbb mov es mov js in and inc mov mov sub popa mov sub xchg add add je out jge push push and inc jl lock mov sub aad dec cmpl cmpl lahf in push xchg leave add jae in lcall dec xchg in push add or mov negl and pop sahf xlat xor test mov adc fstpt push mov inc stos adc dec cwtl in mov xchg stc dec mov mov xor test repz sub mov test push stos call or jge out cmp cmp in push nop leave pop pop mov xchg cli outsl test sbb xchg or test inc mov gs jle cmp push dec mov push testb loope pop xchg iret mov test sub sahf xlat sbb int3 sub pop xchg dec xchg sbb cs (bad) and inc lahf clc push mov ja xor jecxz push nop cmp test inc (bad) cmp arpl mov and mov aad inc cmpb push mov (bad) aaa add call add and and iret or mov and inc jnp in es cltd pusha stos in push nop enter stos jecxz push cltd and ficom push mov cli xor pop dec mov cli xor outsl test sbb movl push push nop leave add je push cwtl rorl inc jl in and outsb cmpsl loopne push mov sti xor movsl fstl dec xchg stc xor cld outsl test in push nop enter stos in push (bad) add jae aas mov sti xor movsl fstl dec mov xor mov aad inc jle out sub rorl inc jnp add xchg lret jbe out pop xchg lret jne cmp fsts dec cmpl jnp out es cwtl rorb inc jp jmp pop xchg int js,pt (bad) cmp in and lret jne out pop xchg lret add jne dec xchg rorl inc jnp in and inc jns inc mov std outsl cmpsl loopne push mov sti xor dec mov sbb (bad) cld xor push mov cld xor push mov mov or mov mov (bad) aaa jo jmp jae out pop xchg lret je out pop xchg call push aas js ljmp jp ds dec stos in push xchg leave add and push imul mov mov outsl test sbb (bad) std outsb cmpsl loopne push mov cld xor (bad) push inc jg lock aam inc (bad) push pop cltd rorb inc jnp in and xchg int ja,pt out pop xchg out pop xchg lret add jne out pop xchg lret add and sub cmpsb fistp push add inc cmpb push inc jg lock aam inc adc dec cmpl dec cmpl adc xchg jp in and inc jp jmp pop xchg out aaa jno loop push (bad) (bad) outsl test sbb (bad) (bad) aaa jo jnp out daa pusha cwtl rorb inc jl out es xchg rorb inc jp jl out sub rorb inc jl out es cwtl and loop push mov cli xor fistl dec add mov ficom dec xchg clc xor ficoml dec cmpl pop xchg lret jae jecxz push mov cld xor push push mov sti xor movsb fcoml push (bad) aad inc jg lock rorl jge out es xchg rorb inc jns ljmp call add jae in push mov call mov and shrl xor movsb fstl push mov sti xor cmpsl sub loop push mov add jae out pop xchg xchg push or clc pop mov pop mov xor gs fsts dec test fistp push mov dec mov into sbb leave add je jmp pop inc jns data16 sar insb cmpsb fistp push int3 pop push mov and (bad) add ja lock (bad) xor loopne push mov add je out pop xchg into pop inc xchg mov std aaa jo loop push lea add (bad) cmp icebp sub adc mov fstl push mov xor ss xor scas sbb adc (bad) in shlb int rclb cmp test sub sbb or js pop addr16 dec mov sti xor push (bad) (bad) and rorl inc jle repnz fcoms dec test pusha fwait xlat add mov sti xor push mov repnz sahf fcoms dec test in pop xchg rorl ret insl cmpsb fistp push mov cli xor sbb daa jb out pop xchg int3 push aas js jmp fs inc cmpb adc mov fstl push mov sbb movb je jmp or icebp sub push mov add je out pop xchg int3 push inc fsubs pop xchg into or mov sub aam inc cmpl ficoml insl cmpsl loope push (bad) add stc xor sbb (bad) (bad) cmp adc mov ficomp push mov std ss in push xchg lret (bad) movl and or mov sub inc cmpb adc xchg cli xor or icebp sub adc mov cmpsl loope push mov sbb movl and iret or mov sub inc jle icebp sub fcoms dec test inc jg repz mov mov fistp push mov pop push mov (bad) cmp in pop xchg lret add and int aas js in es cltd rorl add pop xchg iret or mov daa popa fwait aam inc cmpl xlat adc mov fistp push rcrb push (bad) add scas jmp or or icebp sub (bad) cmovs mov rorl dec cmpl pop push mov (bad) cmp in pop fildll fs xlat adc mov add add adc jae out pop xchg int3 push aas jns in and mov jns and sbb les mov add decb ds fidivr (bad) out test and fs pop or xor sub and sbb lcall xchg sub daa jp dec mov inc nop fbstp adc mov fidivrl mov fistp push mov and inc cmpb adc mov imul cld outsl test and ret cld xor push mov (bad) aaa jb in push nop in pop xchg lret add js jmp pop xchg rorb inc jnp out xor add je out pop xchg lret jne out add xlat adc mov fcoml xor das push mov sti xor cmpsl loope push (bad) movl mov std aaa jno in pop xchg int3 add mov std ss jecxz push nop lret ja ljmp xchg int inc jnp out sub xlat adc mov and int inc jge lock (bad) adc lret add ja ljmp jle icebp sub daa popa fwait aad dec cmpl sbb movl mov sar outsb test sbb in es lcall addr16 dec mov std aaa jno add scas jmp or mov fisubrl mov rorb cmpb adc rorl cs xchg cli xor cmpsl loopne push add int3 push inc jp in daa popa fwait aad dec (bad) mov push mov cld xor jg add js jmp pop cwtl rorl inc jle icebp sub fsts dec xchg cmovns mov ret outsl test sbb cmc xor fstl push mov std ss jecxz pusha popf xlat adc mov fistp push mov (bad) cmp in push mov push (bad) movl push mov (bad) cmp in xchg clc xor sbb (bad) (bad) cmp in mov ss jecxz push nop lret jbe ljmp aam adc jnp and sbb mov inc cltd jmp xchg in mov sub or lret pop jno adc fdivl xchg sub lcall ds icebp inc popf lock xchg pop (bad) sbb insl repnz sbb xchg add and or out push mov popa fwait aad dec cmpl cmp test and cltd rorl test push mov loopne mov push mov mov add xchg rorl inc jle and iret or repz test lcall cmc push mov int3 xor add sub (bad) ljmp sub mov ret clc xor loope push mov (bad) cmp in pop xchg lret add dec test fistp push mov (bad) cmp in arpl cmp pop xchg iret sub sar outsb cmpsl loopne push mov (bad) cmp in pop xchg int3 add inc cmpl sar insl cmpsb out mov fsts dec test pop js jmp pop cwtl rorl inc jge lock aad dec test std aaa jno in pop xchg int3 push inc jp in daa bound xor sbb movb jb dec xchg into or mov sub aam inc cmpl fcoms dec xchg loop push add mov push lods call or mov sub cmp outsl test leave add xchg rorb inc xchg int inc jnp out sub (bad) adc mov fimul in pop xchg into or mov sub adc ficomp push mov add je out pop xchg rorl in cmp rclb add mov cmp or repnz add sub fistp push mov jg push xchg iret or mov imul leave add xchg into adc iret or aam lcall dec mov add jne jmp pusha lcall cli aaa jno in pop xchg jmp aam pusha fwait (bad) adc ljmp popf xlat mov jp icebp sub mov add xor call aam pop mov pop xchg rorb inc jle arpl lret jecxz pop xchg int inc jl lock in (bad) mov fistl (bad) outsb les ja,pt jmp pop cwtl or mov (bad) cmp insl mov fstl push mov (bad) cmp xor repz ficomp push mov add je das xchg repnz (bad) cmp and pop dec test pop test sbb aas js in sub mov ret lahf add out sub divb imul inc cmpb mov movb jae cld pop ret fsts sahf in dec mov push (bad) jmp popa fwait (bad) adc idivl mov and cwtl rclb (bad) adc mov push mov cld je dec mov (bad) adc in ret add es lcall sbb nop lret js in es lcall rorb inc jg repz push mov jge repz mov jne ljmp add push mov (bad) cmp or mov fistl xor mov sub aad xchg icebp inc scas adc rcll dec xchg std pop fsts pop xchg rorb cwtl fstl push mov add je add scas adc xor adc xlat adc jge hlt das imul push dec xchg sti xor pop xchg into or add add cltd in lods adc int inc jl push (bad) aad cltd sti aas jnp lock ficoml mov std cmp or mov loopne push nop lret jp fwait add inc jg hlt jne,pn sbb jbe (bad) cmp jmp pusha fwait aad dec test sti xor jnp icebp sub push mov add jns mov jle stc xor loop push icebp push mov sbb lret push inc jnp icebp sub mov out sub adc out stos in sub icebp pop mov (bad) cmp out jns push mov adc ret (bad) cmp and dec scas in sub fcoms mov add jne add sub out sub push (bad) movl fistl push mov add je jmp cmovp add jne ljmp cmpl inc jnp out sub sbb pusha pushf xlat adc mov loopne push nop lret add jns in es mov sub ficoml mov (bad) cmp adc pop outsl stos out pop xchg rorb inc add call imul mov sub ficoml test rorb inc cmpb stos daa je jmp pusha fwait (bad) adc (bad) call sbb int3 pop inc jl icebp sub fistl cmp mov loopne fwait add int mov pop and cmpsb add sbb mov cmpsb pop addr16 dec stos adc stc pop mov mov dec mov mov push scas adc xchg pop mov jp ss add mov mov test js dec scas sbb dec test sub mov xor ret lds lahf add and call cld pop mov arpl sub push gs jo or mov push scas push push arpl cmpsl or jb inc movsb add je cmp xchg clc pop mov (bad) xor (bad) cmp fcoml push sub into ss je (bad) jb mov mov xor mov inc mov mov dec lods and xchg cmc dec lods jne pusha (bad) xor daa test cmp jl mov fnsave xchg cmc push stos or and sahf add and xor mov mov jo dec mov out shrb xor in repz lds xchg stc repnz sarl sahf hlt xor fistp push mov add je out jnp sbb dec mov jbe push stc jno and jne cmp jns aaa cwtl notl hlt test dec mov insb iret xchg or push mov jbe inc popf lcall and inc mov mov js inc mov (bad) dec mov xchg negl icebp dec scas mov outsb (bad) xor aad int3 xor xchg in mov mov xor test imul mov push mov bnd inc lods push pop ret add mov pop ret sti roll fs popa lret jmp frstor dec and lods or lret push imul iret ss dec stos or add leave add jns in daa bound ja in es lcall das mov fsubrs xchg inc test jle sub loopne and jmp pop xchg iret adc test pop xchg int3 add and ljmp je in push mov pushl jb loop lret mov stc xor fistl test pop pop nop leave add jb jecxz push mov std outsl cmpsl loopne push fcoml xor fstl das push xor fcoml cs fcoms lods push inc cmpl mov sub aam pop xchg into pop aas jns ljmp add add and lret add push dec mov stc xor fistl test push (bad) movb cmp loop push mov (bad) aaa jo loope push fcoml das push (bad) mov aad cmpsb icebp sub aam inc jge in and add ljmp jle icebp sub test sbb (bad) cmp in push (bad) add jae in pop xchg lret and pop xchg int3 add and iret xchg adc mov fcoms outsl stos in push mov in jno in push xchg lret jbe call add and xchg rorb test jecxz push mov add jb in jp in daa pusha cltd rorb bound jmp pop xchg iret or and fistp push mov (bad) cmp out pop xchg aam mov sar imul sbb (bad) add je out pop xchg lret add ja ljmp push out insb cmpsb fistp push mov (bad) cmp in push stc inc jle lock cmovs mov fistl xchg stc xor sbb (bad) std aaa jo loop arpl dec (bad) mov ficoml imul test movb cmovle mov mov fistl test cmp call push inc jns jmp pop mov sbb (bad) std outsl test cmp ljmp jle icebp sub (bad) adc mov ficoml push out imul cld outsl test sbb push mov std ss loop push (bad) movb xchg iret or mov es cwtl rorb inc jge lock aam inc cmpb xchg iret or mov and inc jp sbb add ret sti xor cmpsb fbstp outsl test sbb mov add jae in push xchg lret jne call push dec lock out pop xchg lret add and test add pop pop xchg lret jne out jg icebp sub aad dec cmpl mov fistl xchg iret or lock rorl int3 add and and aam inc cmpb adc mov fcoml dec xchg sti dec (bad) pop ret cs in dec lods adc in jmp jecxz mov (bad) cmp jecxz push mov add jb in push pop and lret mov in es lcall scas clc xor fcoml test (bad) aaa outsl test sbb ret imul xor out push testb repnz xchg lret add jne in push mov (bad) cmp addr16 jo loop push mov (bad) outsl test sbb (bad) cld xor push add cmp xlat adc mov rcll sahf out enter stos in jne call add lods in push mov pushl outsl stos jecxz push mov (bad) ss pop xchg int3 add and lret jne dec nop lret je in push mov push pop xchg int3 add and lret add jne out push nop leave add jb loop push mov inc jnp in and inc jp in xchg ficomp push mov sti xor movsl fnsave imul cli xor fcoml xor ficoml dec test dec xchg clc xor fistl dec test fcoms dec iret sbb (bad) outsb test xor cmpsl fistp push mov cli xor push dec xchg ficoml dec cmpl ficoml dec test fcoms dec cmpl inc jl out es cwtl shrb bound mov rorl jge out daa pusha cltd rorb inc jl out daa mov jmp push ja,pt call mov and xchg into push aas js add mov and xchg iret or mov and xchg iret or mov and inc rcrl push mov add cmp in push (bad) add je out mov cmp jecxz push (bad) lds cmp in push (bad) add jb in push nop enter stos in push pop je clc xor fcoml xor fsts dec lds dec cmpl (bad) cmovs sahf xlat adc mov aad inc jg imul or mov es xchg cmp lahf xlat adc mov out sub sahf fsts dec test fistl imul add jbe call add je in push mov pop mov je cmp stos jecxz push (bad) in push mov sub rorl leave in test adc fidivr jnp cmp xchg out jno,pn sub (bad) dec mov cld xor (bad) sub out pop cmp xor fistl mov int3 add popf cmp out sub ljmp out pop xchg lret or mov adc mov loop stos dec movsl loopne push mov cld xor es push mov fmull push das mov das mov outsb xchg mov ljmp inc push loopne lods or sub in mov lret xor sbb daa arpl stos add hlt pop mov push cmpsl add sub sub sbb movsb or mov mov jnp aas mov dec mov xchg (bad) imul mov bound cmp lock lahf cmc dec lahf cli arpl fbstp fnsave xchg sbb adc adc add add dec fwait in cmp test inc cltd jmp jbe in mov sub jmp fwait sti pop (bad) xor xchg mov movsb ljmp jo or cld arpl or mov dec test sar outsb popa inc lods or cli cmp loope pop repnz ret mov (bad) cmp sbb out inc jle add add sub shll lock adc inc xchg stc xor jns mov add xchg dec lods add jge out cld test adc mov ss sti cmp xchg nop fcoms dec test adc cmp ret cmpsl add leave add jge push mov xor inc jle lock adc out imul or std outsl test jno dec scas add repnz push push push mov cld xor lcall mov or sar push fwait sbb repz sahf stc pop std push (bad) add jne add sub and pop push cmp xlat push pop mov mov outsb mov jl divl insl sti popa (bad) adc push mov test add cwtl aad dec mov pop sti inc sahf add pop push mov std ss sti cmp in sub mov sub rorb inc jge ljmp jmp jg push mov mov mov test cmp pop jbe out es cwtl rorb inc mov jbe divl push fcoml xor js,pn in and inc jnp in es cwtl rorl inc jnp in and inc jns jmp jbe in and repz (bad) adc mov rcll outsb cmpsl fistp push mov or mov aam inc jge in es xchg iret pop aas pushf (bad) cmovnp das test fcoml in push xchg lret add or cmpb adc mov or repnz int xchg std outsl test sbb mov sub dec (bad) jbe pop inc jp in es cwtl rorl inc jge out sub scas call js out daa pusha cltd rcrl push mov std xor mov cmovs sbb (bad) (bad) cmp loop push (bad) (bad) pushl adc mov divl jge inc (bad) add jbe call (bad) push xchg int3 add jbe out mov mov rorl inc jns jmp add int jbe,pt out (bad) in push (bad) add xchg mov (bad) push inc jg pop xchg lret add jne out pop xchg leave add jns jmp pop xchg int aas xchg clc push xchg lret add jae in push xchg sub imulb addr16 fcoms dec mov inc jl in sub rorl inc jp jmp jbe call add add je in push nop and mov and leave add jo pop xchg lret push jbe,pt out pop nop enter stos loop ja call add xchg notl (bad) clc pop int3 dec mov jbe sub jmp mov jg push mov ret cld xor rorb inc jnp in sub sahf (bad) pmaxsw into pop aas js jmp add adc inc jge out sub fsts mov sar mov dec xchg fcoms dec orl ljmp ja jmp push fistl dec test sub notb sahf std pusha mov fsts dec test push xchg in dec mov sar insb loope fs xlat adc mov xlat adc mov sbb (bad) mov add jae in push (bad) add in jle cmc jae,pn or aas js jmp outsb lods in pop xchg int3 push dec scas adc iret or repnz mov xchg fidivl jno loop push mov cli ds xchg decb mov xlat rcpps xchg fcoml dec mov cli xor pop dec mov cli xor outsb stos sub in jge out daa pusha cltd rorb pop shlb (bad) mov aas mov dec cmpl dec cmpl stc xor fcoml push mov std outsl test sbb fldt imul testb add add push aas jns jmp pop xchg int ja,pt addps scas out pop xchg leave add jae in jl out daa pusha cwtl rorl (bad) les pusha pushf aad inc cmpb cwtl clc cmp jecxz push (bad) (bad) outsl test pusha lcall sub aam inc cmpb inc jp cmp scas jmp jp jmp jne ss call pop cwtl rorb inc jl out daa pusha cltd rorb inc jle lock xchg lret add jbe jmp lcall pop cwtl rorl inc jnp call adc test fstps lahf jmp pop xchg rorb inc jp in and fs fsts dec test dec xchg ficoml (bad) and adc mov (bad) and push aas js ljmp mov mov dec xchg fistl pop inc mov in es xchg rorb inc jp decl cmc sub dec test clc xor fsubrl mov xor push (bad) (bad) decl daa popa lcall sub cmpsl loopne push mov std cmp jecxz push (bad) aaa jae in push nop leave or sbb enter lods out rorl into adc mov ficoml cs ficoml dec cmpl sub aam popf loopne xchg repz jno in push mov push fistl dec test push (bad) add jno in push mov (bad) cmp cld cmp pop pop xchg lret cmp out pop xchg fistp push add xchg lret jbe call pop mov ret cld xor push mov push pop xchg lret add inc stos add pop xchg fnstcw push ja sbb ret cld xor gs (bad) adc mov dec cmpl outsb cmpsl loopne push mov or pop push mov cld xor aam mov sbb aaa jo add in bound out daa pop cwtl rorb inc jns or jg lock shll test and inc jnp in movsl add cmp jecxz push mov (bad) cmp loope push mov std xor cmpsl cmp adc fsubrl mov dec xchg inc jns jmp jg inc (bad) mov arpl add ja call xchg int3 push push in jbe cmp mov sub aam and sbb lret sub std push xchg lret jne add lds lods out pop xchg xchg or mov aad inc jle imul stc xor repnz push test pushl jo loop push (bad) (bad) pushl jo loop push (bad) loopne test fist push mov cli xor adc divl push fstl push mov (bad) cmp out jnp out sub aad dec (bad) mov fistl mov addr16 dec test pop int3 or mov daa popa lcall sub aad (bad) cmp sub and js daa ja sbb sbb jle das jg es push jo adc lods std out push cmpsl cld push cmpsb cli dec lahf icebp inc xchg out xchg sub leave sbb cmp cmp (bad) aaa outsl test sbb jp repnz aam inc jge out fstps jmp push aas js ljmp repz sahf xlat adc mov add jae in push (bad) add jb jecxz push xchg inc int3 ret jns ljmp repz sahf fcoms dec test fstpl push (bad) movl inc jns jmp pop xchg iret or mov and mov mov in pop xchg int3 add icebp sub cmovs lahf xlat adc mov sti xor cmpsb fistp push mov sti xor cmpsb fist push xchg cmp (bad) str mov cwtl add ficomp push mov add je out pop xchg lret add jl out dec xchg cli xor loopne push mov std aaa jo loop push lahf sub mov add jb in push cmpsl cmp cmc sub dec (bad) mov (bad) es ficomp push (bad) movl and adc and jbe,pt in push (bad) vmulps test (bad) imull addr16 (bad) push inc test pop xchg int aas js ljmp hlt sub dec test fistp push mov push pop cwtl rorl inc jge lock (bad) cmovs sub mov and and mov mov jg cmp jmp daa xchg cmp bound hlt addr16 dec test ficoml dec test (bad) aaa jno (bad) pop lods add hlt inc fwait repnz xchg jmp test es sbb or push ja sbb adc pop stos cld dec popf xor dec popf icebp inc xchg out mov sub and adc mov lret je out push nop lret cmp and lret add jbe mov out daa pusha cltd rorl inc add mov mov mov rorl inc jp ljmp jns jmp pop xchg rorb inc (bad) ljmp ret jo in aas cmpsb add rcll mov mov shrl xlat sub out mov push fwait out test mov mov dec mov dec lcall fstpt lcall xchg ja sub and cld dec popf jmp mov outsl rorl icebp pop ret adc or or or testb inc aam mov cld xor movsb fcoml gs aad cltd out pop nop enter test sar push and test sbb ret imul out pop xchg leave add jb jecxz push mov std xor push or add ljmp inc sbbb pushf aam inc jge in es xchg iret pop aas js jmp sbb std outsb cmpsl fistp push mov cli xor fstl dec xchg arpl out daa pusha cwtl rorl inc jp cmp pop xchg lret jae in imul fcoml jmp movsl ficom dec xchg fcoms dec (bad) add xchg fcoms dec cmpl aad inc jle out sub rorb inc jge out sub rorl dec out cmp jecxz push mov cld xor xor ficom dec mov cli xor fcoml test sbb pop leavew sub cli imul or cld outsl test sbb ret mov (bad) outsl test sbb out test (bad) repnz mov jp fnstsw cwtl stc pop mov jb sub (bad) jecxz das or adc movsb frstor or lods in push or leave add jae jecxz push (bad) add jb inc jnp in and aas js call add movl sbb (bad) (bad) pushl jo loope push mov cld inc enter (bad) cmovs test fsts dec ljmp mov cli xor fistl dec test sub rorb inc jge out daa pusha cltd rorl inc jge out daa (bad) bound mov sub rorb inc jl addr16 and add push push (bad) add sar push fistl xchg ficoml dec test or cmc sub dec sbbl aam inc jle out sub rorl push xchg into push jbe,pt out pop nop leave add jae jecxz arpl imul xor fcoml lahf xlat adc mov rorl inc jge icebp cmp mov and int jbe,pt call add push pop nop leave add jae in push mov add (bad) cmp daa popa lcall sub rorl jge out add jp in and inc jp in and add mov fcoms dec (bad) mov inc jg icebp sub rorl inc jl in es xchg rorb pop cltd rorb inc jge out sub rorl jge out daa popa cltd rcrb mov aaa jo loope push mov std aaa jo loope mov iret or or sub rorb pop xchg lret add jbe call add jne out pop xchg lret add or mov (bad) cmova icebp sub push inc cmpb or jge out inc jg icebp sub cmova popf (bad) cmovns popf push imul mov sar scas call add jne out pop nop leave add sar imul xor fstl dec xchg movsl sub and lret jne out pop nop leave addr16 and pop aas js call add cmp loope push mov cld xor push mov sti xor out push fcoml xor fsts dec cmpl (bad) (bad) (bad) cmp loop push mov std dec mov sti xor movsl ficom push mov sti xor ficom push mov sti xor cmpsb xor bound mov daa bound sub dec (bad) mov xlat sub aad inc jg repnz aad inc cmpb subps inc mov or sub (bad) xchg clc gs xorb test (bad) xor jb inc fiaddl add pop leave push mov ss jmp pop cwtl rorl inc jle pop fidivr ja ljmp js sub leave add mov and cwtl rolb push inc cmpb add ss add pop xchg int3 sbb sub movsb ficomp push mov add bound add sar jo in jge hlt imul scas call add pusha int3 sbb enter scas call push inc jp in daa popa lcall push xchg lret add es cltd aad adc ficom push mov cld xor mov cmp pop xchg rorb inc jl add sub ficoml divl push outsb mov jae mov jno adc mov cmp mov inc lcall fmull pop test inc cwtl js xor and lock jecxz data16 fsts dec xchg cli push (bad) add pop cwtl fldl xchg fistp push mov add mov and or mov sub aam inc cmpb adc mov fstl dec mov sti dec cmpl sbb lds (bad) (bad) cmp in pop xchg lret add and inc jge lock aad dec (bad) mov fsts dec test cli xor cmpsl loope push (bad) movl jge lock aad inc cmpl xor fstl push mov sti xor and into or mov inc jnp out sub (bad) cmovns add ret std ss in push nop lret ja ljmp or repnz sahf fcoms dec test fnsave insb movsl fistp push mov (bad) cmp in pop or add jne out pop xchg int3 add add mov and inc jle icebp sub (bad) cmovs mov fsts dec xchg stc xor push mov (bad) cmp in push xchg lret add mov ret outsl test sbb enter scas out pop xchg int pop xchg rorb inc jge icebp sub jns (bad) cmp out pop xchg int3 add cltd jecxz push xchg lret ja ljmp jge lock add pushf aad inc cmpb sub aad dec (bad) mov xor fstl dec mov sti xor mov js sub and std sarb call xor sbb sbb inc lods adc arpl shrl pop mov push movsl repz nop fisubr jnp sbb or add push mov fsubrs mov imul jnp sbb gs pop mov pop stos sub sbb adc pop scas ljmp jle icebp sub popf xlat adc mov loopne push mov (bad) cmp in pop xchg int inc jns push dec test fstl push mov push mov ret jo jecxz push nop int3 dec xchg iret or icebp sub fcoms dec xchg loope push (bad) add add fcoms dec test dec cltd aam dec cmpl push mov inc mov aaa nop iret or mov aas xchg int3 push inc jp in es cltd rorb inc jle adc and stc ss jecxz (bad) repz int3 dec xchg iret or or and rorl inc jg cmp inc jl out inc test ret xchg repz mov mov outsb test sbb call mov sub std pop mov dec cmpl cltd rorb shrl sti cmp in pop mov jle xor jecxz push fwait negb inc xchg sti xor push mov sub in dec lods adc mov inc test insb mov loopne mov dec mov dec xchg sbb ss stc cmp aas cmpsb or sub fsts dec stos inc aad jno in push xchg add pop mov es cltd rcrb inc jg repnz popf jbe sub push pop mov jge jge repz idivl jns out sub sbb cmp ret in lahf inc xchg int3 adc (bad) xor aad dec cmpl js,pt ljmp dec lods packssdw adc cs aam jbe sbb inc stos cld push (bad) pop lods decb inc test inc cltd jmp (bad) fidiv xchg sub shlb in inc xchg in (bad) jae xor and push push outsb rclb movsb fistp push mov (bad) cmp in push nop leave add je push inc jns in es cwtl rorl inc mov xchg sti xor cmpsb loopne push mov (bad) aaa jo loop push int3 adc xor push mov (bad) aaa jo jecxz imul rcll adc xor fcoml inc jns in es cwtl rorl jg sbb (bad) jno add pop push and iret or mov sub adc mov std aaa jo jecxz push nop leave add pop cltd rorl cmpb sub dec mov std aaa jb xor sbb movl and cmovp fistp push (bad) movl and or mov sub in es lcall xor inc jg repz dec xchg cli xor cld xor push mov add je call or mov sub in es lcall fisubr arpl mov fbld nop ficoml mov cld outsl test lret jbe ljmp jle icebp sub divb imul add push push mov (bad) cmp out pop xchg int3 push aas jns dec xchg sti add jb in pop xchg lret add es lcall sub imul add add mov std aaa jno in pop xchg int inc jp dec test loopne push mov add jne jmp or lock divb push ficom push mov (bad) aaa leave and cwtl rorb data16 cmp mov and rorb inc jl lock adc adc pop pop (bad) sub sbb cmp aad jne sbb leave sbb or add popa mov push cmpsl stc dec popf in aas nop jecxz mov cs hlt inc lcall in sub shll int3 pop jno adc fstl dec xchg stc xor fstl dec xchg stc xor fstl dec test leave add je call xchg int inc jp in daa pusha lcall sub imul add jne call or mov daa pusha cltd rorb jge lock adc xor out sub aam inc cmpb and cmovns mov (bad) (bad) cmp in pop lods cli lret (bad) lret roll sub dec test jb and ds xor xor stos adc addr16 jno imul test mov adc incb int3 xor and ficoml mov inc mov fs jne cmp (bad) aaa jo push (bad) in repnz pop mov sahf in jne jmp cmp stc push out pop lds sbb pop xchg enter dec sarb add jle repnz loopne scas pop and pop outsl into int3 mov add mov and mov or mov sub ficoml mov std aaa jno out xchg rorl cmpb sbb outsb cmpsl loope mov repnz stc xor loopne mov out pop xchg int3 push aas jns in es lcall pop cltd push add push nop lret jns mov test sub hlt xchg and cltd rorl das push mov add int3 pop inc jnp out sub fcoms dec xchg sti xor xchg repz add mov xchg fcoml push mov add je call or adc and rorl inc cmpb sbb repnz lahf fcoms dec xchg xor test sbb (bad) add cmp scas jmp or rorl inc cmpb push push mov add jne jmp push mov (bad) cmp out pop xchg int jno divb push ficom push mov (bad) cmp out pop xchg int pop xchg into or ret call outsl test jge dec stos icebp cs xchg sub mov jle adc jno shrl xchg negb or sub out scas adc divb push fstl fs cmp mov inc test insb rcrb push lods adc lds adc fidivl xchg cld pusha scas jmp and push mov sbb in push mov scas adc inc sahf cmp cmp test pusha (bad) sub cmp movb mov and dec mov push mov pop add scas jmp test jbe push (bad) sub jmp pusha lcall cmp arpl sbb lods or xor (bad) sub call lret adc iret push (bad) cmp mov pusha (bad) xor stc inc jge repnz loope add pop xchg adc inc jns out dec scas adc pop orl dec xchg cld aaa jno out pop or leave add jns in sub xlat adc ret xchg rorb inc cmpb pop push mov (bad) cmp xchg ficomp push (bad) add jns in sub dec lods call or mov fstl push mov mov sub fcoms dec xchg cld ss in pop xchg loope mov loopne push xchg lret add icebp jno divb push ficomp push mov add je call and or mov ficomp push (bad) movl pop mov loopne push (bad) add test int inc jl lock adc rcll jne ljmp test jecxz movl es fwait aad dec test add add jb divl insb cmpsl loope push (bad) add js in es fwait jmp adc ret jb out pop xchg iret or mov dec mov (bad) cmp out pop xchg rorb inc jg repz in pop xchg iret or mov sub mov in pop xchg iret or mov fcoml push mov add jne push mov add jne ljmp (bad) mov push xchg lret pop inc jnp out sub das add loop push nop lret jns in sub xlat adc sti ss cmp ljmp cmpl je clc xor loop push nop lret js (bad) cmp and cltd rorl dec cmpl sbb lret lock mov daa popa fwait aad dec test jle push inc jnp out sub fcoms dec xchg adc mov cld aaa jno out pop xchg iret or repz or cmpl sar jo in pop xchg int inc jnp cmc outsl stos stc xor test sbb leave add ja jmp pop cwtl rorb inc dec popf push outsb stos out pop xchg into or mov jp lock adc sti xor pop xchg ljmp cmpl sbb leave add outsb add sti xor push add add add pop cltd rcll xchg sbb movl es fwait (bad) adc sti xor lods clc xor loope push (bad) add mov and ss out pop xchg into or mov sub ljmp test loopne push (bad) movl movsl loopne push (bad) add pop cwtl rorb push aam pop xchg int inc jnp out sub aad dec test pop push mov add jne jmp or xor dec xchg iret or icebp sub fsts dec xchg cli dec fstpl add es pop mov scas push jb cmp add hlt sti add mov scas lock aaa fwait in pop xchg int3 sbb inc cwtl aam inc or xchg stc dec xchg cli xor fldl divb imul scas divl xchg int jns inc fcoms dec test daa mov inc test movsl stc outsl test xor and cwtl icebp push mov rolb mov cmpl imul ret daa (bad) repz jle add add loope ret frstor inc xchg lock rorl inc jge out es xchg sub ljmp jns ljmp jbe call add lret jne out pop xchg lret jae sti xor movsl ficom dec mov cli xor fstl push mov cli xor outsl mov sub rorl inc jnp repz test sbb push in push add mov and cmpsl jo cmc addr16 dec test fistp cmp out pop xchg lret add jne sub mov ficoml pusha sahf xlat adc mov fcoms dec cmpl mov and lret add lods in push (bad) cmp mov mov ficoml dec test lock aad inc cmpb xchg stc xor push dec mov stc xor fstl mov and pop aas jns in and inc jl out daa jns out sub rorl bound popa lcall sub jmp insl cmpsb fistp push mov sti xor cmpsb loopne push mov (bad) cmp jecxz jno in push nop leave add xchg int3 adc out pop xchg lret add in and lods in push nop leave add xchg lret jbe out insl cmpsl loopne push mov (bad) cmp jecxz push mov adc cmc das push xchg fsubrl rorl jle icebp sub aad inc cmpb adc add mov imulb imul cmpsb fistp mov rorb inc jge out sub (bad) setae push push mov sti xor cmpsb fistp push mov std outsl cmpsl loope push mov std push (bad) movb jb in push (bad) add je out loope push pop add jae in push (bad) or mov xlat cmovs sahf (bad) cmovs mov and xchg rorb inc jnp out sub aam int inc jp in and inc jp hlt jne clc xor fstl dec xchg stc xor fcoml cld xor push mov sti xor cmpsl loopne push mov decl mov cmpsb adc imul mov pop xchg iret pop inc js jmp pop push in jl out daa pop cwtl rorb fs (bad) cmova lock rorl inc or (bad) std xor mov and (bad) and lret jbe out and int3 add sub aam inc jle out jae call add jae in push loopne gs xlat adc mov xlat adc adc mov ficoml dec test ficoml dec test xlat and rorl pusha cltd rorl push lock in push (bad) add jno loop push (bad) pop pop xchg lret je in push (bad) (bad) (bad) outsl cmpsl loope push mov std outsl test xor push mov cld xor push loop fs (bad) push inc jg lock rorb inc mov call add jb jecxz push mov pushl jo loope push mov sti dec mov sti xor cmpsb fist push mov sti dec int push mov cli xor fistl test xor push mov stc xor fistl dec test stc xor ficom dec mov stc dec add mov sar push jmp xchg lret add nop enter repnz aam inc jg lock rorl sub rolb add inc jp in and inc js ljmp sti xor movsb fstl push in and inc js jmp push ja,pt call adc sar insb movsb fstl dec mov stc xor push in and inc jl in es xchg (bad) ss lock rorb inc jl in es xchg xlat adc mov aad arpl repz sahf xlat adc mov sub aad inc cmpb adc mov fcoms dec (bad) mov fsts dec cmpl gs xlat adc mov sub loope sbb cmp pop pop adc out es xchg iret pop inc js add jl in and inc jp jmp mov pop xchg lret jne out test cmp in push mov std xor dec (bad) (bad) insl cmpsb fstl push mov pushl outsl cmpsl fistp push mov clc dec mov pop push mov stc xor ficoml and scas out pop xchg lret jae in push mov (bad) cmp in push (bad) test add push push (bad) add sub (bad) jl inc cmpsl add rorb lret sub ret and in int3 inc xchg rorl inc jl out es xchg rorb test xchg std outsb cmpsb fist dec xchg clc xor fsts dec cmpl das push insb sar pop mov mov push mov xchg add rorb mov aam inc jge out daa ret jg repz sahf xlat adc mov (bad) push inc jg lock jmp arpl mov out enter push push scas and fistpll add push mov xchg and or xor stc pop mov js xor cmp loop mov jp pop mov cwtl cmc mov cmpsl pop add push xor imul test insl iret sub test inc cmpsb incb ja xor fdivrl sti pop mov pushf stc pusha mov inc lahf jmp mov xchg cmc push lcall dec stos or and xchg cmp and arpl and pop mov jne xor jb mov jl cmp clc push mov ja xor pop mov xchg cmc enter push push iret sub lahf xlat adc mov rorb inc jp jmp pop movsb add aas lahf std push cmpsl loope push mov std mov cmovs mov mov adc test fldcw ljmp sbb cmp xor cmp jg xchg sbb pop mov fistp push mov add jae out pop xchg repz mov (bad) cmp in push nop int3 push sub (bad) cmovs (bad) add jbe pop lahf fsts dec test lds clc xor fcoml in push xchg add cmp out pop xchg int3 push inc mov sub aad dec (bad) mov fcoml dec mov je xor push (bad) add jae push int3 pop push mov std cmp jecxz push mov (bad) cmp in outsl lods out pop xchg int3 add and int aas jns push fistl insb movsl (bad) popl aas jns ljmp js jmp add inc jle lock aam inc jle lock jmp jg icebp sub adc aad lcall (bad) lcall xlat sub push nop lret ja jmp or mov daa test ficomp push (bad) movl and roll mov xlat adc mov fistl xor fstl dec mov cli xor xor test leave add add cmp (bad) xor push popf fcoms dec test fstl push mov add jne out pop xchg int inc jns in es cltd aam dec cmpl fstl push mov std outsl test enter sbb add je out pop xchg shll in pop xchg int inc jl out sub (bad) adc mov add mov and rorl inc jle repnz lahf fnstcw (bad) cmp out pop xchg int3 add cwtl rorl sub mov mov (bad) loop mov xor iret and adc cld je sbb adc or and jge and mov pop lods call imul imul cmpsl cli dec lahf lock inc cmpsl jecxz push nop leave add xchg rorl data16 sar insl cmpsb loopne push mov (bad) aaa jo jecxz (bad) (bad) cmp jecxz push (bad) add je out lds dec (bad) mov fcoms dec test ficomp push xchg stc xor sbb (bad) std aaa jno cmp mov ret outsb test bound imulb push xchg cli xor sub push mov add je out pop xchg int3 push aas jns in and ret outsb cmpsl loop push mov add js push mov (bad) cmp in pop xchg lret and in outsl test sbb (bad) cld xor push mov sti xor cmpsb ficom push fsubs cwtl rorl inc jle lock aad dec aad pop xchg int3 add and xchg iret or mov pop cwtl rorl inc jg repnz adc mov fstl rcrb push (bad) add jne out pop xchg int3 add jl out sub aam inc cmpb and aam inc cmpb adc mov sti xor stos dec cwtl rorl sub lahf fcoms dec test cmp and into or mov daa popa lcall inc jle icebp sub fadds add add dec test dec xchg into or mov sub aam inc cmpl sub aam inc (bad) mov fidivl imul (bad) cmp in push nop lret jbe inc mov (bad) cmp in pop xchg lret add ja sub pop xchg rorb inc jl out sub aam inc cmpb xor fcoml xor cmpsl loope push lcall jno das mov push mov int3 aas mov dec lods dec mov xchg dec enter dec mov (bad) std (bad) enter lods out pop xchg lret add ja jmp or subl aaa cltd in cmp mov fcoml push mov bound (bad) cmp mov fwait negb mov lods or and out sub divl push xchg lret add jns in es mov and arpl daa addr16 dec test xchg clc cmp ljmp jl out sub in sub lahf fcoms dec test fstl dec mov pop cltd rcrl jnp cmp call xchg cld pop mov clc xor ficomp push mov std aaa outsl test jmp pop xchg iret or mov and in inc cmpsb push dec test and stos in sahf cli aaa jno jecxz push (bad) movl sbb (bad) fstpl push mov (bad) cmp loope push mov std ss pop xchg rcrl jns cs ficomp push mov dec xchg add adc ret cld xor push nop lret jbe or mov ficoml mov sti xor xor andl add daa mov push lahf fistl lods dec mov adc push fild or and sub fidivl popf add push pop cwtl rorl inc jge lock clc xor mov fcoms dec pop insb cmpsl loopne sahf add mov pop xchg iret sbb fcoms dec xchg sti xor test out sub fcoms dec xchg sti xor pop lcall jno and lcall fwait aam mov daa popa lcall xor movl daa popa fwait aam inc cmpl cwtl cli cmp and or mov pop mov out sub aad dec cmpl jb out pop xchg into or push push xchg aad inc cmpl xchg int3 push aas jns stc push mov in es cltd rorl cmpb aaa jo jecxz push nop leave add iret sbb xchg int3 and fcoms push xchg int3 add pop ret push inc jnp out sub fcoml dec mov cld xor jae out pop xchg int3 push aas js jmp lahf (bad) cmp push mov aas jns in bound out dec mov xor test sbb add je out add jle adc daa mov inc jge lock aad inc cmpb xor fstl push mov sti xor cmpsb fistp push mov cld xor push mov std aaa outsl test sbb cmp pop pop xchg lret add jbe jmp pop inc jns in js,pt in and inc jg repnz xlat adc mov fcoml xor pop push mov sti ss jmp or push mov sti xor jp push pop xchg lret jne out pop xchg jecxz stc push (bad) add jb loope push mov pop fbstp jb in push mov (bad) cmp jecxz push mov add jb jecxz js jmp pop xchg iret or mov cmp xor fstl dec call xor cmpsb fistp push mov cld xor cmpsl loopne sbb mov add jb jecxz js ljmp jge out cmp pop mov ret insl movsl ficomp cmp mov lahf fcoms push cwtl rorb inc cmpb or mov ficoml dec xchg lret jae add add (bad) std dec in xchg stc xor fcoml xor ficoml imul (bad) outsb cmpsl fildll ret cmp out daa pop cwtl rorb inc jp ljmp icebp sub rorb inc jnp in and xchg into push jbe,pt out pop xchg lret lcall sub aam mov aas js jmp add lret je in push (bad) add jb in push nop enter test jecxz xchg add js call jg icebp sub aam inc jle lock sub lods out pop nop leave add jb jecxz push pop add jo loope push mov push push nop leave add jae in push mov (bad) mov mov (bad) cmp jecxz push mov add clc xor fistp push mov cld xor push mov sti xor cmpsb divl push mov cld xor xchg cld inc jp in and inc jns ljmp dec cmpl mov daa pusha cwtl rorb inc jns push dec (bad) mov aad inc jle out mov mov (bad) aaa outsl test sbb (bad) sbb pop pop xchg int3 add and pop inc jns jmp pop xchg into pop inc jns or sub adc mov mov es cwtl rorb inc jnp out xchg cmp pop push nop enter stos loop push mov cld xor movsl fstl push mov cli xor cmpsb fistp push mov cpuid sub and lret jae in andps test sbb (bad) cld xor push mov cli xor add je out push nop lret add jne ljmp cmp in push nop enter sbb lcall and aas ja jmp xchg std ss loop push mov sbb xchg into pop inc jp in es cwtl rorb inc jge out sub shll mov push fcoml addr16 xlat shlb cltd rorl jg icebp sub pushf aad inc cmpl fsts dec test ficoml dec test sbb nop leave add je out pop xchg int3 ja dec test fsts dec test xor test sbb (bad) outsl test sbb (bad) cld xor incb mov sub aad inc jg add mov dec stos adc rclb addr16 popa (bad) or mov mov add adc fildll data16 fcoms dec (bad) mov inc test movl sbb and inc mov sub lods in push (bad) (bad) or (bad) add jb in pop xchg lret insb idivl jne out push pop (bad) cmp loope push mov push pop xchg lret jae in push (bad) (bad) outsl cmpsl fistp push mov ja dec mov sti xor movsl ficom dec xchg (bad) ljmp test fcoms dec cmpl fcoml add imul decl mov fsts dec test cmpb cmova fwait shrl bound mov es cwtl rorb inc jp out daa pusha cltd in fisub pop xchg lret add lods in push mov cmp add jno jecxz push (bad) (bad) (bad) cmp cli cmp in push mov add jae in push (bad) (bad) (bad) cmp data16 cmp mov and int3 add fisub pop xchg int cmp push pop add jno add and xchg int jbe,pt out push nop enter test lods in push pop add jo push ficompl pop nop leave add jb jecxz push mov sti xor cmpsl add push pop pushl outsl test sbb sar push pusha in xor movsl ficom dec mov clc xor dec rcll xor add adc xor movsl add (bad) add jno loope push mov sti xor sti inc jge out daa pusha cwtl rorl inc jnp dec mov out pop xchg int3 add scas call and add jno cmc pop leave adc divl imul movsl add ja ljmp jl in es cwtl rorl inc jl popa (bad) sbb (bad) cld xor push mov jo adc mov (bad) cmovs popf clc xor push mov cld xor push mov (bad) insb aas lods dec mov test push lret cs cmp fs sbb mov (bad) cmp jecxz lret fcoms dec (bad) mov clc xor fstl dec mov stc xor fcoml push inc or mov fcoms dec (bad) xor jmp add jne out rclb dec (bad) mov aad inc jle out daa pop xchg adc dec aam push mov add jo loope push mov mov out push (bad) add jo loop push mov pop pop nop leave add jb loop push mov cld xor movsl fstl dec xchg int3 adc xchg clc xor fistl mov mov das addr16 dec cmpl (bad) adc mov rorl inc jl in and xchg int3 add aam push pop add jae in push test lods out pop xchg lret add jne out pop nop leave pop inc jns adc mov fcoms dec (bad) mov fcoms dec xorl repz popf (bad) cmova cmp push (bad) add jno loop push mov sbb cmp loop push mov cld xor push movsl cmp or jg lock aam inc sbbb lret add and int aas js jmp and pop inc jns ljmp jnp in and mov fcoms dec (bad) mov xchg fcoml dec mov cli xor pop push mov sti xor int3 or mov daa pusha cltd rorb inc jl out daa pusha cltd rorb inc subl lret jae jecxz push mov push mov stc xor fcoml xor lret add jbe out pop xchg lret jne out pop nop leave add je mov aaa jo loop push mov std ss jbe hlt sub dec (bad) mov fsts dec sbb dec xchg fcoml xor fstl dec popf pop outsl mov sub aam inc jg lock xchg fcoms dec test fsts dec cmpl insb movsl ficom dec xchg fcoms dec cmpl popf (bad) push inc jg icebp sub xchg fsts dec test fcoms dec (bad) mov cli xor fcoml das addr16 fcoms dec cmpb divl imul cmp dec mov movb ja,pt call add pop stos repnz popf aad inc jg out sub mov or add popf (bad) push inc jg icebp sub cmc addr16 dec cmpl inc cmpb call add lods in pop idivb add je out pop xchg lret ja inc jmp loopne pushf add mov lcall add mov xor in pop nop enter test ret adcl loope push mov std xor push in jae repnz or daa pusha cwtl rorl inc ficoml dec test push inc jg out sub rorl inc inc stos out push nop enter stos loop pop in insb mov and aas js jmp or ficoml dec test xlat adc mov aam inc add mov sahf xlat cmovns daa insl cmpsl loopne push mov cli xor push mov stc xor mov mov (bad) adc mov inc mov cld xor movsb fcoml test in and xchg int3 add je in push mov add xchg iret pop aas js jmp add jae jecxz push mov cld xor push mov stc xor fcoml pop mov adc test fcoms dec cmpl (bad) cmova lcall and xlat aaa jl icebp sub rorl inc jl in and call add jne out pop xchg lret xchg rorl inc jl in es cwtl rorl inc jp jmp pop xchg rorb dec hlt jge add jno jecxz push mov std aaa mov pop cltd rorb inc jl out daa pusha cltd rorl inc jl out daa (bad) mov movsl ficom push mov cli xor fistp push mov sti repz add jo loope push mov cld xor lret je in push mov pushl outsl test sbb loope push lods out sub or daa pusha cltd rorl push ljmp rorb inc jnp jmp rolb (bad) aaa outsl test sbb sar push fistl insb stos loop push (bad) add jno loop push mov cld xor imul daa pusha cltd rorb inc jge out sub inc mov std xor dec test fsts arpl mov fsts dec cmpl pop shlb fistp push mov cli xor push sti pusha popf (bad) cmova pushf aam inc jge out sub lahf fcoms dec cmpl outsl cmpsl loopne push mov cli xor test stc xor insl cmpsb fistp push mov std cmp push sahf fsts dec test cli xor push dec mov cli xor fstl inc loopne cwtl rorb inc js call add dec mov cli xor fistl dec test punpckhdq sar imul pushf aam or in push (bad) add je out mov cmpl mov sub aam push test fsts dec cmpl paddw fcoms dec test nop out push mov jne cmp mov (bad) xchg stc pop fadds and rorb inc cmpl mov add add addr16 fcoms dec (bad) mov aad jo loop push mov (bad) aaa outsl test sbb (bad) std xor push mov sti add outsl test sbb (bad) std ss loop push mov std outsl cmpsl loopne push mov cld xor cmpsb fist push mov sbb (bad) cmp loop push (bad) (bad) (bad) aaa jo loope push mov std outsl test (bad) std aaa (bad) in dec stos jmp add jbe out push xchg lret aas jge out sub rorl ficom push mov sti xor and push mov ret cld xor xor push inc jnp in and fs (bad) push inc jg lock rorb (bad) cmp lret jne out pop xchg int add sar insl movsl fstl das push (bad) mov or ret insl cmpsb loopne push mov cld ret jbe cli xor push push mov push icebp jle inc xchg ljmp mov jne jnp cmp push push sub adc push lods push inc cmpl mov add je out pop xchg int3 add and sub fcoms dec test fsubl ficoml dec test je (bad) (bad) sub mov mov jns and repz shll dec mov or inc lods push jnp push stos push jb pop jbe pop shrl cmp lock mov insb mov or and cmp stos cmp cli pop shll (bad) insl fildl pop mov pop aam stos or and xchg in dec lods xor loope xchg repnz mov popa roll adc mov mov rorb inc js out push mov pushl jo jecxz push mov sbb outsb cmpsb ficom dec xchg xlat cmp rcll mov (bad) aaa jo loop push mov (bad) aaa jo loop add lret add jne out pop xchg lock sahf xlat adc mov fdivrs fidivr cltd sbb xchg into pop inc jns jmp pop fdivs add add mov ficom push mov cld xor push (bad) (bad) (bad) cmp push inc jg mov pop ret enter (bad) popa push shlb (bad) std sarb and adc sub fs mov in pop xchg int3 push inc jl adc mov fsts dec cmpl dec (bad) mov adc xchg addr16 pop xchg iret or mov sub sbb int3 push aas js in and inc jge icebp sub (bad) cmovns stos clc xor test sbb jp,pt out lods push pushf xlat adc stc xor ret add daa pusha lcall das imul fisubl inc cmpl xor cmpsb loopne push (bad) movb je or add fistl xor push nop lret ja push popf fcoms dec xchg pop popa int sahf or daa xchg cmp (bad) dec in mov xchg cli push mov jno xor stos or enter aas sarl mov jge cmp loope mov jns xor insb leave daa test ds shrb (bad) jmp and jae adc pop shrl lock shrb mov jge add je out pop xchg into or ljmp movsl push insb aad popf add and pop xchg rorl inc jg repz push cmpsl call or mov sub (bad) adc mov sahf ljmp mov cmp jge lock add xchg rorb inc jge or sub dec test add sbb push lock adc mov fistp pop xchg rorl dec lock cmc pop ret and adc adc push pop xchg pusha lods out pop xchg int inc jns or mov leave and rorl inc enter jl inc lods add mov and pop cmpsl loop jl push ret or dec scas add daa pusha cltd rorb inc cwtl xlat add dec test fcoml dec mov cli xor pop push mov ljmp cmpb cltd rorl cs mov sti xor js jmp pop cltd rorl das imul push mov (bad) cmp in pop xchg int inc jp out sub aad mov inc test add and mov fnstsw and add mov and imul movsb fmull push cmp and in data16 ljmp jp in daa pusha cltd rorb inc jge out sub rorb inc jge imul lret add jmp pop xchg outsb in imul pop aad pop xchg into push inc xchg rorb inc jnp push shll xlat cmp sti xor movsb fstl (bad) jo loop push mov (bad) outsl test cmpb push inc jg adc pop mov adc mov fistl dec test daa jb in push nop leave add jae in push nop and fstl dec mov cli xor cmp or in and aas ja jmp js ljmp jne out push nop or cmpsb loop push (bad) (bad) (bad) cmp loop push mov and iret pop inc jp in and inc jns jmp pop xchg into pop inc orl loope push mov (bad) aaa jno cmp scas call add jbe out pop xchg lret cmp pop pop xchg lret mov add jbe add sub out daa pusha cltd (bad) pop xchg rorb inc loop data16 fcoms dec (bad) mov (bad) cmovs mov ficoml dec test fsts dec cmpl outsl test sbb ret cld xor cmpsl loopne push enter mov xlat cmovs popf call or mov and inc jnp mov es cwtl rorl inc jl inc cmpl mov cmp jecxz push mov add jb in push (bad) sbb (bad) std aaa jo add push push (bad) add jae out pop xchg lret add jne outsb cmpsl loope push mov (bad) aaa jo loop push mov aas xchg stc xor fcoml xor divl imul xor movsl ficom push mov cli xor cmpsb fistp push mov or rorl inc jnp in es xchg rorb inc jnp adc cmp loop push mov sbb (bad) std outsl test sbb (bad) outsl test sbb (bad) std ss push (bad) movl sbb cmp and fistl xor pop push mov adc mov fcoml xor sbb rcll push mov cld xor enter lods in push xchg lret add jbe call dec mov sti xor cmpsl std aaa jo loop push mov add je out pop xchg lret add and int aas add mov fdivrs jmp aad outsl test movl sbb sar imul inc (bad) or lock adc mov fsts dec test push push nop lret jne out pop xchg lret add pop je jmp popa fwait (bad) adc sar or ja in es pushf (bad) adc std cmp out pop out lods out pop xchg int inc jns in es sbb divl insb movb sbb fcoms dec xchg cld ss in pop xchg int inc cmpsb in pop xchg rorb inc cmpb sbb mov in pop xchg int or inc jge repnz mov (bad) (bad) cmp out pop mov ficomp push mov add js in sub outsl ret add jp xor mov sub ficoml cmp and aam dec test or mov fstl add push mov add inc jl icebp sub mov movb add bound std cmp (bad) cmp mov es in daa popa fwait (bad) adc mov loope (bad) mov ret std aaa jb out mov xor pop xchg into or mov sub test int3 pop inc nop lret push inc jl icebp sub fistl jo xor in pop xchg int inc jl lock mov sub (bad) adc mov loope push (bad) add lret jns icebp sub mov movb fldenv lcall xor loopne scas divl insl cmpsl loope push (bad) add pop cltd aam dec (bad) mov std aaa jno in pop xchg into or mov sub sbb leave add pop cltd rorl test sub mov ret jo in pop xchg rorl inc jg hlt cs mov loope popf ficomp push (bad) movl xchg int3 push inc jp out sub jmp mov fistp push nop lret jns out sub xlat adc fsts dec mov cld aaa jno in pop xchg into or adc cmp and cwtl rorl cwtl rorl das push mov add jne jmp daa popa pushf (bad) cmovns movsl fbld mov cmp jmp or mov sbb leave add inc jp out sub (bad) adc mov loope outsl stos out pop xchg iret or repnz mov js,pt out sub (bad) adc mov push mov add je call or repz push clc xor sbb nop (bad) (bad) rcrl jae push ret jbe jge stos daa test and dec (bad) mov aam inc jge in es xor bound (bad) std cmp enter stos jecxz push (bad) (bad) pushl jo loop push mov adc jmp add jbe,pt cmc pop cmpsb fistp push mov sti xor cmpsl fistp push mov sti xor (bad) std aaa outsl test (bad) outsl cmpsl loopne push mov cld xor addl or mov es xchg rorb inc jp out push mov sub rorb inc jl out es cwtl rorl inc mov sar push fistl push test pop xchg int3 push aas ja call pop jge add jb jecxz push mov sbb cmp enter test xor fistl dec test add and cwtl rorl inc jl out cmp ljmp jge out daa pop cwtl fisub pop xchg lret add (bad) or leave add inc cmpb adc stc mov (bad) cmova mov and cmpl daa fs aad inc cwtl rorb push xchg rorl inc jle repz jp in and inc jnp in or inc jge out sub aam inc cmpb xchg cli xor sbb push mov add divb imul cmpsb fistp push mov std aaa jo out mov cmovns mov lds imul mov pusha cltd rorl fs xlat adc mov in jbe sti xor push mov std outsl test push fsubs pop xchg into pop aas in gs xlat adc aam inc jle lock rorb inc jl out es xchg rorb inc jns in jl add je out pop xchg lret jne bound into pop inc jns jmp pop xchg iret or rorb inc jle icebp sub adc mov ficoml mov ja,pt ljmp jnp out daa pusha cltd rorb inc jle lock aad inc cmpl xlat adc mov fistl xchg cli xor test pop pop xchg lret add and insl test sbb (bad) (bad) cmp jecxz push (bad) add lds add (bad) cmp jecxz push mov add jb jecxz push nop lret jne out sar insl cmpsb fist push mov sti xor movsl ficom pop out aaa jno in push (bad) add jae in je call pop inc jp out daa pusha lcall sub adc das jns in es cltd rorb arpl inc jle icebp sub aad mov sar insb cmpsb fistp push mov cld xor push mov add jae pop xchg rorb inc jl out sub aam dec cmpl inc cltd repz mov fcoms dec xchg out dec mov cmpsb loope push (bad) add rorb inc jle xor out dec lods add js ljmp ret push inc jl repnz hlt cs mov cld outsl stos in pop mov sub outsl into and pushf (bad) adc sahf jmp insb cmpsb fistp pop mov jecxz push (bad) add je out pop xchg int3 push inc xchg rorb inc jl xor out cmpsl add add in and inc stos icebp sub push xchg repz sbb add jne call or ficomp push mov dec mov push mov shrb xchg fcoml push mov add push mov std outsl test sbb add je out pop mov sub pop and test in pop sub in sub aad dec test and sbb (bad) add je out pop xchg lret or jmp lds inc jle icebp out xchg out movsb ljmp test jnp out sub (bad) cmovns mov in pop cmpsl or and add fidivr sahf in pop cwtl rorb test dec fwait (bad) cmovns mov (bad) xchg rorb inc test inc cmpsl cld pop mov jmp pop sub loope add aam inc mov cltd in pop xchg int3 add and inc lahf ficoml pop push mov ficoml icebp push lods jmp pop xchg rorl xlat adc mov loopne push (bad) add mov push lods add les ja ljmp jle add pop mov or out sub aam inc cmpl aas mov cmp out cmp and int inc mov mov adc mov fsts dec xchg add (bad) loopne sahf repz mov cs pop lcall (bad) add sbb add mov and cltd rorl xor flds add xor cmpsb loopne xor push mov (bad) cmp ret cld xor in es cwtl rorl pop pushf (bad) cmovns movb jne out jno sbb ret std aaa jo loop outsb or int inc jnp in es xchg rorb inc jl out daa jl lock xor push mov ja cmp mov ficoml dec (bad) mov gs and sbb push mov and (bad) enter sub fstl dec xchg clc xor test popa mov pop mov add js call aas movsl loope push mov std outsb cmpsl fistp push mov cld xor jne out pop xchg leave add jae std pop mov or adc sbb in es xchg rorb inc jp jmp pop xchg iret or rorb inc jnp in and inc sbb movsl lock cltd ficomp push mov sub xor out daa pusha cwtl rorl inc jnp in and pop fwait aam inc jle lock rorl lret mov mov aaa xchg icebp dec mov cld xchg xchg sti xor push dec mov stc xor fistl stos in push (bad) add jae add and rorb inc cmp cmovp pop ja jmp pop xchg into push aas ja call add add inc jns jmp jae iret or jge out daa ja les mov push inc jns jmp jno xor in and inc jp jmp pop xchg into or fcoms dec (bad) mov bound mov (bad) ficoml imul lret jae in push pop add lcall lods push push (bad) add jno pshufw pusha les dec mov pop push mov push scas push dec cmpl dec (bad) mov xchg out dec lods add jnp in and xchg int3 add xchg cmc push cmp mov sti xor movsl ficom shll mov mov ficoml outsb test dec lahf ficoml test xlat sbb xor stc inc jp in and inc jnp in (bad) xor push (bad) (bad) outsl test sbb add nop leave add jae in push add imul stc xor fstl dec xchg mov out pop xchg lret jae in (bad) out dec stos jmp add and sbb lods call push ficom push out mov and xchg into push aas ja jmp push mov dec mov std outsb cmpsl fistp push mov cld push mov adc gs (bad) push inc jg out sub pop fwait aam inc jle out sub rorl inc jl cmp in and xchg int ja,pt push jne adc sub loop push mov sti xor movsl fstl adc mov (bad) cmovns ljmp fidivrl add sti imul mov xor jmp pop inc jns add (bad) cmp out pop xchg lret add jbe add or mov sub rorl inc jge lcall jg icebp sub aad dec cmpl (bad) mov mov sub aam inc jg lock mov sub push inc jg icebp sub aad fs aad inc cmpb or inc jle lock rorb sarb mov es xchg rorb inc jp jmp xchg idivl pop xchg leave add jb jecxz push (bad) (bad) stc jno xor cmpsl loope push mov std dec jmp push (bad) (bad) (bad) cmp jecxz add pop xchg lret xchg sti pusha sarb jns jmp pop xchg rorb inc jp jmp pop xchg into pop inc jns jmp (bad) out daa pusha cltd rorb inc jl out inc mov clc xor fcoml xor fistpll jae in push nop leave add je out push nop leave add jae in ret int3 add and rorb movsb daa outsb test sbb (bad) std outsb cmpsl loopne push mov adc mov std ss lods in push nop lret jne out pop xchg lret popa sahf fcoms dec test fldt mov cs test ficoml dec mov push pop xchg int3 push aas js ljmp jp in es cwtl rorl or jecxz push mov (bad) cmp loop mov aaa jno in push (bad) add je out pop xchg int arpl mov cmp in pop xchg lret pop fstpl push mov std outsl cmpsl loopne mov ss in push nop leave add je out pop xchg int fs xlat adc mov fcoms dec test (bad) negb int ja,pt call sbb and pop inc jns ljmp jge adc sar insb cmpsl loope push (bad) (bad) (bad) cmp in push nop leave or sub rorl jge out xchg sbb add push inc cmpb or dec mov cld xor push mov sti xor adc stos xor sub rorb inc jnp out xchg adc aas ja call add jg lock rorb inc jnp in and inc js jmp jmp or mov mov pop xchg lret add jne out pop xchg lret add jbe or mov sub rorl inc jl out es xchg add add or mov fild mov aad inc jg hlt mov cmp in push mov (bad) cmp add js jmp add and lret jne out sbb (bad) push inc jg push outsl (bad) xor sbb jne push xchg int3 fbld fcoml xor fucom dec xchg stc xor fistl dec test (bad) outsl test push push nop leave add jae pop inc jns in and or jle add add mov (bad) cmovs adc mov ficoml dec xchg stc xor fstl dec mov cli xor (bad) cmp jecxz push mov add jb (bad) push push push mov std outsl test sbb lds pushl jo loopne push mov sti inc mov jle loopne jl out cmp ds xor push mov sti xor adc das push ficoml dec pushf ficoml dec cmpl (bad) add or jle out inc lahf sti cmp jecxz xchg cli xor fistl dec test push inc cmpb or int aas js call jns jmp aam inc jg lock test aaa jo push fwait aad inc jle out daa pop xchg iret or mov and int3 add jne in push scas out pop xchg leave add gs sbb push out cmp in xchg lock addr16 dec mov cs ficoml dec cmpl inc jg out sub rorb inc lcall inc stos add sub adc mov cmp jecxz xchg sbb mov add jae in push pop add jb jmp pop xchg into pop aas lcall dec stos add mov push inc cmpb jno in popa lcall sub xlat adc mov ficoml dec test cli xor xor pop mov sub sub xchg lret add jbe out pop xchg lret je add push push nop enter lods in push mov (bad) cmp jmp jbe call nop leave sbb adc mov inc xchg int3 add add pop xchg into or mov and xchg iret or rorl mov inc jl out sub in dec lods hlt cs xchg inc xchg lret add and lret add jbe jmp add inc jle stc pop mov jge add jae in dec stos repz mov adc mov fsts dec cmpl adc mov (bad) aaa jo loop popf repz pop movsl fistp push mov sbb or jl push xchg fsts dec cmpl dec cmpl xchg aam mov es cwtl rorl sbb test adc mov int3 or mov es xchg iret or mov and xchg into pop aas xchg into pop js aas push andl pop mov movsb sbb dec mov dec add int3 pop inc jnp lcall or mov dec cmpl dec test add jae out add int aas js jmp or mov es negl cli xor stos in push xchg rorl cmpb adc cmp add pop xchg rorb inc jge or push dec (bad) mov inc jge adc or out fs (bad) adc mov (bad) adc mov icebp sub rorl jge out daa pusha cwtl (bad) xor jmp sbb (bad) cmp xor fcoms dec test fistl enter sar insl ret outsl test sbb mov add je (bad) pop (bad) push dec (bad) mov fsts scas sbb push aas js ljmp out imul xor test sbb (bad) aaa jb add add fsts dec xchg sub add mov pop xchg add or lock aad dec movsl loopne sbb cmp mov and xchg loopne mov aaa (bad) mov stc pop mov sub mov xor cmpsl loopne push mov (bad) aaa jo loop push lret push inc cmpl lret loope push pushf dec xchg rorb inc jge sbb int3 or mov outsb mov xlat adc mov fsts dec daa cmp pop cmpsl loop push mov sbb sbb lret fcoms dec xchg stc xor sbb (bad) (bad) aaa xchg rorl cmpb jp daa mov adc mov jb in pop nop loopne popf ficomp push testl lahf fsts dec xchg sti xor jno ljmp cmpl cmp test loopne pushf fstl push mov cmp test sbb add mov sub movsl add sbb xchg lret add (bad) rorl and mov push mov icebp or lret add and scas jmp xor ficomp push mov std cmp adc jmp in cmp sbb ficoml insb cmpsb fistp push mov (bad) cmp scas jmp or lret loop pop stc inc jle icebp sub add out sub push inc jnp out daa pusha lcall sub lahf fsts mov ret cld outsl test in dec lods jmp pop cltd pop bound cmp mov ficomp push mov sub mov mov add xchg iret or adc leave add jb in push mov cmp xchg rorl inc jl out aas xchg xor adc xor jo jecxz push (bad) add ja ljmp imul popf (bad) es cmpl cmp in das push movsl in push nop leave add je out pop xchg lret loopne xchg cmc aas jp add es cwtl rorb inc sub sub fisubl jb out push nop aaa jo loope push mov cli xor ficoml dec test (bad) push test pop mov repz sahf xlat adc adc fcompl (bad) add dec test sbb (bad) cld xor push mov std xor push mov add call adc divl les les pop cwtl rorl inc jnp inc lcall fbstp (bad) shlb mov xor sbb enter push movsl hlt dec lcall sbb push or movsl add shrl fsubrs jl adc mov and xchg rorb inc jp jmp or xlat adc mov test fistp push mov std nop daa push fstl dec mov sti xor cmpsb fbld xlat adc mov pop inc jns or out sub rorl popa lcall mov adc mov fcoms dec cmpl lret je out cmpl insb movsl ficom push mov sti xor movsl loopne push mov cld xor ficoml push fistl jne dec xchg fdivl jnp cmc cs imul mov xlat aas test xchg jg,pt cmc jae,pn and inc jp jmp pop xchg int cmp push (bad) ficoml xchg sti add outsl cmpsl loopne push mov sti xor pop arpl mov pop inc xchg rorl inc jl out es cwtl rorl inc jnp in and xchg into pop aas js aaa cmpl cs loope push lcall pushf cli pop xchg iret sub sbb ljmp ja call add jne call jb out push nop leave add jb in push mov push in es cwtl rorl inc jnp std push mov (bad) cmp test sbb sar push ficoml dec (bad) mov add add mov and push aas js jmp push dec or ficoml dec test push aas (bad) lret add and xchg rorb inc jp in and inc jnp nop hlt pop ret in arpl cmp jmp pop cmp and (bad) xor loop test sub pop imul test inc rclb ret and shlb or addl and popf jno inc xchg jmp push cmpsl loope push movsl or loope push mov cld xor push mov fcoms dec cmpl dec cmpl (bad) aaa jo loope push movsl fistp push mov sti xor movsl fisub test and sbb pop pop nop leave add jae in push mov outsb (bad) cmovs lahf fcoms dec mov ret insl cmpsb ficom push mov sti xor cmpsb fistp push add mov fidivr lahf out sub ss jecxz push (bad) (bad) (bad) cmp loop push (bad) aam roll jp in and xchg iret pop inc js ljmp or mov es cwtl rorb inc jge out daa fsubl pusha cltd rorb inc jge out es mov ja pop movsb jmp jno sub fcoms dec cmpb sbb adc (bad) add (bad) add mov aaa outsl test sbb ret imul xor cmpsb fist push mov cli xor pop push mov sti scas clc xor fistp push mov sti xor movsl ficomp lods divb push jecxz pop xchg lret add jbe call sub rorb inc jnp jmp pop xchg int3 add jne in rorl mov aam inc jle lock stc xor fcoml das push cmpl sub sahf (bad) cmovs sahf xlat adc mov insb cmpsb ficom push mov stc xor fcoml jae in lcall cmp jecxz jae out pop xchg lret jb in add (bad) (bad) outsb cmpsb fistp cmpsb pop je lcall add ja call data16 mov fcoms dec add sarb cld pop lds imul repz and adc mov pop scas pop pop ret mov jecxz mov sub loope test mov imul popa mov pop test dec popf icebp inc cwtl jmp mov (bad) cmp jecxz push (bad) add jae in push (bad) add xor fstl dec mov cli xor adc xchg stc xor fistl test ficoml mov mov fistl imul and inc jns jmp pop stos xor jp in and inc jns ljmp aas mov out cmp in push mov pushl jo loope mov jmp add lcall sub aam inc jle lock (bad) cmovs xor loopne push mov sti xor movsl ficom push mov pop movsl fistp add (bad) jo loope push mov (bad) push mov (bad) outsb cmpsl loopne push mov cld xor movsl ficom dec xchg cmp mov mov aad pop fisub pop cwtl rorb inc jp ljmp adc sar insb movsl ficomp push mov cld outsl test jge add je out pop xchg lret add ja jmp aas mov ficoml dec test (bad) cmp jecxz push (bad) (bad) (bad) cmp jecxz push mov test or mov es icebp sub inc jnp out dec cmpl adc ret cld push mov (bad) aaa jo loop push mov (bad) aaa outsl test sbb ret mov into pop aas js jmp add add fs (bad) push inc cmpb pop pop xchg into push ja,pt out pop nop enter stos loop push mov imul push aas ja jmp add jb jecxz push mov dec mov add add (bad) (bad) outsb cmpsb in inc xchg loop lahf out pop xchg xlat xchg fstl push mov sti xor push mov std ss sub lahf xlat adc mov fsts dec cmpl insb movsl in inc lcall (bad) stos adc push pusha mov push cmpsl clc dec fwait out aas (bad) loope test sub and xchg out xchg cs and pop push or jmp mov push movsl testl pop xchg iret or mov xor fidivr jb in push xchg lret jne out pop xchg int3 add and xor sbb ret cld xor push mov outsl mov xlat adc mov fisubrl dec test fistl push fstl ret cmpl xchg lock (bad) adc mov in push mov push mov cld xor dec xchg clc xor ficoml dec test xor movsl ficom dec xchg clc xor or cli inc cmpb je out pop xchg int3 sub aad dec cmpl mov ficoml rorb inc jle lock rorl sbb mov and fiadd int leave adc mov ficoml dec test fisubl mov pop nop leave add jb jecxz push (bad) iret ja cld xor dec mov clc xor cld cmp in push (bad) (bad) outsb cmpsb ficom dec xchg fsts fistl dec test out push lds cmp xor mov cmp das push and xchg iret sub sahf fcoms dec test ficoml dec test or pushf aad inc mov dec xchg rorl lcall data16 xlat str in sub sti inc jp out dec mov dec xchg fldt jns push mov sar insb movsl ficom dec xchg sbb lahf repnz jl icebp push mov jae or adc negb and add push insb int jp aad sti popa mov mov add dec (bad) sbb rcrl rclb mov inc xchg fisubr leave mov pop movsl repz call loopne mov sub fs jno push addr16 loopne (bad) jmp mov pop mov repz lahf hlt inc cwtl jmp adc lock test fcoml push push (bad) (bad) (bad) cmp loop pop mov cmp add pop nop leave add jb jecxz push mov push arpl inc jg icebp sub aam inc jle lock cmp call add push mov and lret jae in push mov (bad) aaa outsl cmpsl call xor adc imulb addr16 dec (bad) mov push mov add xchg fistp push mov and leave add jae in push (bad) (bad) outsb cmpsb jmp cmp inc mov (bad) aaa outsl cmpsl fist dec iret add xor mov sar imul cs fistpll jp in and into pop aas js jmp inc jp in and inc sahf or xor loopne push mov (bad) aaa jo loop push mov and fistl adc cmc cs xlat cmovs cmp and lret add lahf in pop xchg jmp push aas ja call add lods sti dec mov cld ret or sub aad inc cmpb push mov (bad) cmp jecxz push (bad) add jb in push pop add jno cli dec mov js cld xor push mov sti xor movsl loopne movsl (bad) ja,pt jmp add in push (bad) loop push (bad) (bad) test std xor cmpl (bad) (bad) cmp out pop nop lret fbld pop cwtl rorl inc jnp in and movb jae or mov es cwtl rorl inc jl out es cwtl lock mov jnp sbb push add inc (bad) daa xchg dec test outsb lret (bad) fsubrs lahf fcoms dec mov ljmp out pop xchg int3 push inc jnp cmovns lahf fcoms dec cmpl push in imul cli xor push push rcrl cmp in sahf ficomp push mov std outsb (bad) (bad) cmp loop push mov add jb in push (bad) add out cmp and lret add jbe call inc jle repnz cmova popf (bad) cmovs mov daa pusha cltd rorb inc jge out sub rorl repnz scas call add jns cmp fiaddl push dec mov add xchg (bad) cmp jecxz push mov add (bad) lock movsl in pop out jle sub out push mov stc xor push mov clc xor ficoml dec fsts dec test fcoms dec (bad) mov (bad) push inc decb mov fsts imul pop xchg lret add jbe jmp arpl ja ljmp jp in and mov sub cmova out cmp jecxz push (bad) (bad) outsl cmpsl loopne push mov sti xor (bad) std outsb cmpsl fistp push mov sti xor adc xor das push (bad) mov aad dec in xor cmpsb fist push mov stc xor xchg fcoms dec movsl loopne push mov sti xor adc das addr16 fcoms dec cld dec (bad) add fsts dec (bad) mov daa jb in push mov add jno loop push mov (bad) aaa xchg (bad) aaa jno jecxz push (bad) (bad) (bad) aaa jo loope push mov cld xor mov es xor pop push mov jbe sbb ret (bad) cmp in push xchg rorl inc mov ret std outsl test sbb (bad) cmp in gs xlat adc sbb (bad) cmp jecxz push mov add and lret add jbe jmp add and int3 add inc jns jmp pop xchg rorb inc jnp in es cwtl rorl std pusha fwait aam inc jge out daa pusha cwtl rorl inc mov push mov add jae in push mov (bad) outsl cmpsl loopne mov cli cmp es or cmpl dec test fcoml dec mov cli push mov loop push nop lret add mov std outsl test sbb lds rorb inc jnp in es cltd push ficoml push mov cli xor push dec mov stc xor ficom dec movsl fistp push mov decb rorl mov dec xchg dec xchg fcoml scas clc xor fcoml xor fistl loopne imul aaa xchg iret or jae imul scas pop jle inc test ret stos in push xchg lret cltd rorb arpl mov cmp in push mov pushl jbe cmp sub xor jmp mov pop lcall rorb jge out daa pop cwtl rorb inc jp testb ljmp jbe out pop xchg lret add xchg rorb inc jnp in aaa test fistl xor out push mov xchg add sbb ja,pt call add xchg int3 push push (bad) (bad) decb fcoms add in mov rorl pop insl mov cmpb adc mov xlat maxps mov push aas ja call lcall push aas ja jmp add sar outsl test sbb ret cld xor movsl ficom dec mov sti xor mov fistl push fwait add ret insb movsl fstl push mov cli jb imulb addr16 fcoms dec cmpl mov daa jge out sub rorb inc jge out daa pusha cltd rorl inc mov (bad) fistl add sar push fistl dec test popa lcall and ja,pt call sbb (bad) outsl cmpsl loopne push mov cld xor cmova lcall stos daa mov or mov sub fs xlat adc mov stc xor sbb ret (bad) aaa jo jecxz push scas add adc mov (bad) aaa jo out lret jne out pop xchg lret je out add int3 add inc cmpsl sbb enter ljmp cli xor fcoml movsb fstl dec mov stc xor fcoml push sahf fsts dec test adc mov nop fistl xchg clc xor fcoml xor fstl xor ficoml dec test fcoml movsb fstl dec mov cli xor push dec xchg stc xor xor fstl dec mov stc xor faddl mov and inc jns jmp add cmp pop xchg lret jae in pop mov xor stos call (bad) fildl jmp or mov xor stc xor repz xchg lret or mov test ss xlat adc mov mov add jae in push mov (bad) cmp loop jo loop push mov pop xchg rorb inc jp in es outsb mov (bad) cmova pop pop pusha out nop stc pop mov int3 aaa nop imul mov loopne pop nop leave add je in push (bad) add jae in push pop add int inc jns jmp pop xchg rorb inc jnp in es cwtl dec xchg rorl inc jp ljmp jne push arpl mov shll pop cwtl rorb inc jns ljmp (bad) mov pop test out xchg testl pop test (bad) outsl add test sbb ret std outsl test cmp out push nop enter stos loop push mov cld xor clc xor fistl addr16 mov cli dec lods or ret sti xor movsl fstl dec xchg clc xor fstl cmpsb loopne push mov push lcall sub inc mov std ss jecxz push mov add jno jecxz push mov adc mov std outsl cmpsl loopne push mov std xor push mov pop mov sar insl loop jl jae in push mov (bad) cmp loope push mov sti xor movsl fidiv insl cmpsb fistp push mov sti xor cmpsb fistp push mov sti xor cmpsb pop cmpsb loopne push mov (bad) cmp jecxz push mov add je in push nop leave add or xchg int3 add or cmovs fwait aam inc adc xchg ljmp ljmp mov xor push mov stc xor fistl dec test sahf fcoms dec cmpl adc sub pop xchg int3 add and leave add test (bad) (bad) cmp jecxz push (bad) (bad) jo dec xchg iret or mov and xchg iret pop inc mov imul mov mov fdivrs jns jmp pop xchg into pop inc js ljmp jp dec xchg int aas js jmp add nop leave add jae in push mov add jno loop push (bad) (bad) pop push mov cld xor push mov cld xor push mov test fsts dec cmpl lahf fcoms add imulb addr16 fcoms dec cmpl iret or mov and xchg into pop inc js ljmp cmc addr16 dec (bad) mov push addr16 dec test fsts dec test es cltd rorb inc jl out sub in and pushf sub pop xchg rorb inc jl out daa add add adc inc cmpb adc mov out sub push inc jg icebp sub aad inc jg icebp sub cmp sar imul xor xor out es xchg rorb inc jp jmp mov aas js or sub rorl inc pop sbb fcoms push dec test dec lods in es cwtl rorl inc popf cmp in pop (bad) loope push mov std outsl int3 das cltd call outsl test sbb jecxz cmpsb out pop push mov movd (bad) fcoms dec xchg cli xor sbb (bad) (bad) cmp mov daa pusha lcall (bad) aam dec fwait add call pop movsb fistp push cmp ret std outsl test movl mov sub xor movb ja push outsl mov inc mov std aaa add out pop xchg int3 push aas js in cmpl pop push mov std ss pop jns std cmp inc jl cmp sub mov daa popa lcall das cmpl pop push test pop mov sub xchg fcoml push mov dec lcall add ja jmp or mov sub repz dec xchg cli xor sbb (bad) cmp add (bad) mov ret cld xor push (bad) (bad) (bad) cmp in js in and inc jnp in and mov inc mov add jae jge,pn repz insb movsl ficomp push mov std ss ljmp cwtl rorl inc jle icebp sub mov dec xchg int inc and cmp add test enter lods out jae out pop xchg int inc jns out sub adc repnz fldl sar outsl leave sub out sub fs xlat adc mov add adc cmpsl loopne push mov (bad) cmp jmp jge div push (bad) (bad) outsb cmpsb ficom outsl test sbb sar push fistl dec (bad) out push lods jmp xchg int3 push aas jns cmp jp lock (bad) cmovs mov loopne push mov (bad) aaa jno jecxz push mov and je cmp push fwait aad dec cmpl mov cld xor push mov sti xor lret sar loope mov sub sub in daa add fistp push mov std aaa jo loop push mov add iret or inc jle icebp sub adc notl fcoms fs je,pn jmp popa mov sbb pusha pushf aad dec (bad) fldl sbb incb test pop mov in ss cmp push mov cmovns push mov pop xchg int aas js jmp les adc mov mov push mov dec xchg stc xor hlt jno lock (bad) adc mov loopne jp in es cltd rorb outsb into xor repz rcll fistl mov pop cltd rorl imulb imul cmpsl loopne jns in and inc jge out sub jp out cmp pop mov push pop cltd rorb call aaa jo jecxz push (bad) add jne jmp sub lahf fsts dec test cmp movl jecxz push mov pop cltd rcll adc leave add je out pop xchg int3 add scas out sub add adc mov cmp pusha pushf (bad) adc pop xchg rcll out mov std ss loop push (bad) add jbe jmp sub fcoms dec out jg,pn inc test fistp gs and (bad) adc xor fstl push mov std aaa jo in js jmp pop xchg rorl inc jl out sub inc mov push pop xchg rorl push mov pop xchg iret sbb es fwait aam inc cmpl (bad) and aam inc cmpl push push inc mov add cmpsl add je and cltd rorl cmpb adc xchg and or mov sub (bad) adc sbb mov cmp and insb cmpsb loopne xor loopne push mov (bad) cmp in push nop leave and rorl inc jge out add fs xlat adc sbb sub and mov mov (bad) cmp out pop xchg int inc jp cmovnp movsl fistp push mov (bad) cmp call leave sbb adc int pop xchg shlb mov or mov sub aam inc cmpl out pop xchg int push mov pop cltd aam mov cmp out jnp sub fcmovb sub fsts dec xchg fistp push mov sbb add jne call or sbb (bad) into ss out and mov or cmpl ret xchg lret add ja jmp pop xchg rorl pop mov into ss out mov push mov clc mov push xor cmpsb push xchg fistp push mov add adc jmp fs fcoms dec test loope jnp das imul fcomps (bad) je inc jl out sub aad dec (bad) mov (bad) cmp call or mov cmp or pop push mov cld push mov inc jle mov repnz fcoms dec test std cmp in pop xchg lret add jp in cmp push insl iret sbb enter adc shrl ss jecxz push nop leave add scas or mov sub adc xchg sti push mov dec mov jle cmp call add (bad) (bad) repnz imul cmpsb loopne push mov push push nop lret js jmp cltd std inc jle mov push xchg lret or sbb (bad) sahf add mov and inc jge lock cmc xor fistl outsl test cmp add push dec test js,pt popf push inc jge lock (bad) cmovns mov jecxz push nop int3 push inc jnp out inc cmpsl add jle lods adc mov push arpl or idivl popf (bad) pop mov xchg pop (bad) repnz mov jo xor mulb inc cltd enter push cmpsl std push stos add sub cmp or sub in popf adc sbb (bad) jecxz xchg adc leave and xchg ljmp fidiv xchg push shrl or add pushf negl mov xchg (bad) push inc scas push lea inc mov xorb sub jmp shrb ljmp aas stos adc fiaddl dec mov pusha ret xor jno push enter jnp push inc loopne mov xchg add call pop xchg pop (bad) xor mull xchg add push mov push push cld jb or xchg stc pop mov mov ja,pt out pop nop leave add jae jecxz push mov std ss iret or mov and lret add je in push mov std xor dec mov cli xor ficoml dec cmpl or add popa lcall and xchg int cmp jae in push (bad) (bad) outsb test sbb ret sti xor adc das addr16 fcoms dec cmpb or mov and xchg int jbe,pt out pop nop enter mov sar imul (bad) mov fsts dec cmpl mov and lret jae in push (bad) add jb out jne call add jne out pop cmpsl popf ljmp jl out es xchg rorb xchg fildl add add xor ficoml dec cmpl dec test daa pusha cwtl rorl inc jl in es xchg imul in and push frstor pop xchg rorb inc jp in and inc jns ljmp xchg into push aas js jmp iret pop inc jns pop cmpsb loopne push mov sti xor xor arpl mov and xchg lret add jae jecxz push mov cli dec xchg fcoms dec cmpl aaa outsl cmpsl fist dec xchg fcoms mov cmova lock rorb inc js jmp add jb loop insb movsl ficom dec xchg fcoms dec cmpb mov fcoms dec cmpb sbb in push pop (bad) cmp loopne push mov ficoml dec (bad) mov jmp add jae in push lcall xchg lret jno loope push xchg adc xchg iret pop aas ja out pop nop enter test sbb sar push popf xlat adc mov add ja ljmp jb loop push mov pusha stos add and enter test sbb sar push fistl dec mov cli xor fcoml test xlat andps xor fcoml push xchg push pop cltd rorb inc jl in daa pop xchg iret or mov and lret mov sti xor push dec xchg jae in push mov pushl outsl cmpsl loopne push mov inc (bad) add je in push mov (bad) outsb cmpsb fistp push mov stc xor sub xlat cmova lcall and or mov and inc js jmp movsb fcoml das addr16 xlat adc mov rcrb pop xchg int ja,pt call add jne out into sbb ret imul hlt sub popf xor pusha cltd rorl inc jp hlt sub add or repnz ficoml dec test ficoml dec aad pop xchg iret pop aas js jmp add je adc push pop mov push (bad) out xchg popa (bad) and mov sub scas adc inc pushf notb or into and xor sbb stos in push (bad) add je in pop nop leave push pop lcall sub rorb inc jge push nop leave add jae in push (bad) (bad) outsl test sbb (bad) outsl test sbb ret cld xor push mov adc mov fistl test js jmp pop xchg into pop inc js ljmp aam inc jg lock (bad) cmovs pushf aad inc jg pop inc jle lock aam inc jg icebp sub add jmp pop xchg into pop inc jns ljmp mov fcoms dec (bad) mov (bad) adc rcll lds nop leave add jae in pop xchg lret adc iret or mov and inc jge sub rorl pusha lcall daa pusha cwtl rorl inc jl add js ljmp js ljmp add and int3 add inc mov xor (bad) aaa outsl test sbb ret insb movsb fnsave push ficoml dec test cmova cmc xchg or jle out daa pusha cltd rorl inc jp jmp pop xchg cvtps2pd mov and xchg rorb inc jns ljmp xchg lret add jne out pop xchg leave add jb jmp rorl sub rorl inc jns jmp fs add adc mov fcoms dec cmpl bound mov sub rorl inc jge out xchg or mov and inc js jmp jb in push nop enter stos jecxz push mov std xor addr16 dec cmpl sldt dec cmpl cmp push pop (bad) cmp xor mov sub rorb inc jl in and inc jl or mov and inc jns jmp pop xchg into sbb into push inc js call add jno cmp lahf fcoms dec cmpl or out daa pusha cwtl rorl inc jnp in and rorb inc jge in es xchg rorb inc jns ljmp fist dec xchg clc xor fsts dec (bad) mov out sub gs (bad) cmovs lahf xlat adc mov mov (bad) cmp loope push mov sti xor pop imul popf aad inc jle out daa pusha cwtl jmp popa cltd rorb inc jl out daa pop lcall sar push fistl dec cmpl inc in addr16 fcoms dec cmpl mov out sub aad inc jg icebp sub rorl or lock jecxz push mov sbb (bad) (bad) insb movsb fcoml cmpl pop dec xchg sbb xor stc dec mov cld xor cmpsb ficom push mov jle,pt lock rorl inc jl in daa pusha cltd cmc das push test fistl dec test inc mov dec test or mov and leave add jno and fsts dec (bad) rorb inc cmpb xchg int3 add push sub loope push push push mov sti xor movsb fstl xor fsts lret sbb pushl jo sti xor cmpsb loope push mov (bad) outsl test sbb add push xchg out push mov push mov (bad) cmp sub rorl jl in es xchg iret pop aas js jmp add jne add lods in push (bad) add jb loop push lods or jp,pt jmp pop xchg int aas js call je out push pop (bad) aaa jo loope push mov std xor insb movsb fstl xor ficoml dec xchg mov mov (bad) or and fisubr popa lcall es xchg iret pop aas js call sbb (bad) std xor push xchg out dec scas inc nop leave add jb jecxz push mov sti xor movsb fstl nop enter test ret mov and xchg into push aas ja call movl popf sbb cwtl add sub dec test push dec mov cli aas popf add adc sar push cmpl and lret add lods in pop lcall jbe,pt or jge out es xchg jmp cwtl icebp aas lcall inc adc fistp push mov cli xor jb or aam jae in es ret daa nop in inc jge mov mov xlat cmova (bad) into xor scas daa les mov dec mov jp sarb mov rorl inc jl in imul or mov and xchg into push jbe,pt out push mov nop repz mov std (bad) adc mov aam inc jge out jo repnz rorl inc jnp in and xchg int3 add jbe add push mov test xor fmul sbb (bad) outsb cmpsb ficom dec mov clc xor addb imul fwait rorl inc jnp in and enter sbb fidivl mov cmp xor arpl pop mov stos cmc xor fisubl (bad) out mov and icebp xor fcoml mov aam inc jle lock data16 xor mov mov (bad) cmp jecxz push mov (bad) cmp mov add add jne out pop fwait sub and mov data16 enter sub cmovs or xor fstl or sbb aaa outsl test xor add add loope push mov or xor fcoml das outsl dec mov out es xchg iret pop aas ja xor sar imul imulb addr16 fcoms int aas js cmc inc xchg loop jl push inc cmpb jmp add jo lock or jle lock aam inc jle lock cmpl imul xor fistl dec test bound repnz aad inc jg add idivb jns jmp pop xchg iret or mov inc jge out sub xlat sub xlat adc mov fsts dec test add popa fwait aam inc jg icebp sub cmovs xor fcoml mov call (bad) cmp divl jno loop push mov (bad) aaa jo pop test sbb (bad) test cmp cmc xor fcoml push into and rorl test fistl lret add and pop inc jns out xchg or mov and inc jp jmp pop cwtl shll popa fwait rorl jns ljmp jb or cmp scas out push nop enter stos jecxz push mov stos jecxz push nop enter rorb inc jp and mov and pusha mov shrb insl cmpsb repz sahf xlat paddsw in push (bad) add jb in cmpb or out add gs (bad) push inc cmpb sub rorb inc jp jmp jge lock rorl inc jle out sub (bad) xor fistl test xlat adc mov aam (bad) or std xor dec test inc mov and inc jnp in and inc jns add mov and scas call add jbe xchg sub aam popa into xor dec xchg iret or mov daa pusha cltd rorb inc jge out sub rorb inc jp jmp pop xchg int aas ja call cwtl rorl inc jl out daa pusha cltd rorb inc jl or add pop mov mov add sub aam inc jle dec mov sti xor push dec mov stc xor decl nop mov mov bound push (bad) sub (bad) push outsl loopne mov jne cmp push mov jb dec and (bad) std jo inc scas dec mov (bad) xor cltd cli gs cmp push mov xor fstpt mov pop sbb jecxz push mov add jne call cmpb adc mov mov mov add je out pop lcall ljmp test sbb fnstsw popf lock push (bad) lret sub shrb mov add nop enter fstl push mov cli xor mov pop xchg int3 add jbe out pop xchg lret jae in push (bad) fcompl push mov std xor dec mov stc xor ficoml push adc rorl mov inc mov adc inc movsl add ret fnstsw popf sub jne cmp (bad) in push mov jae cmp sub jno pusha shll loop mov and lods inc stos or cmp pop int sahf add dec test push retw aam pop shll jno xchg notb sbb fidivr pop mov sahf notl loopne jp sbb (bad) aad dec test jne out pop xchg lret je in push iret xor push mov add jb jecxz push (bad) (bad) lcall xchg int (bad) rorb inc xchg pop imul icebp sub aad inc jg push dec xchg stc xor fistl test fsts pop xor mov aad inc jg lock cmp add addr16 fcoms dec cmpl (bad) adc mov xlat cmovs pushf aad pop xor arpl out daa pop cwtl stc inc jl in and inc js jmp add mov sbb (bad) (bad) (bad) aaa jo jecxz fisubr fs loope add jae in push (bad) (bad) lret mov sbb or adc mov fistpll popf push push fcoms dec test fcoms dec (bad) bswap sbb les (bad) in push scas adc sub movsl or cltd rorl insb adc inc cmpb adc inc jl out daa pusha cltd rorl inc jl in es cwtl rorl inc jge outsl xlat inc cmpsl or dec test mov aaa mov pushl jae in arpl push nop enter stos jecxz push mov std xor ficoml xor cmpsb ficom push mov cld xor je pop xchg rorb inc jge out sub rorl jle push xchg roll or jge out daa pop xchg rorb inc jns ljmp cltd rorl inc jge out daa pusha cltd rorl inc jl out cmp dec mov stc xor fistl dec test jnp in and lcall sub outsb cmpsl loopne push mov (bad) aaa jo in push (bad) add push mov (bad) aaa outsl test inc sahf fcoml mov fistl imul mov fcoml imul push mov cli xor push dec or (bad) jo loope push mov cld xor push test lret jne out pop xchg lret je out or xchg lret jae in push nop enter cld inc cmpb or jl in daa pusha cwtl rorb inc xchg iret or mov and inc jp mov daa pusha cltd rorl addr16 stos or cmp push test fnsave xchg out pop xchg in dec scas push fs add add xchg aaa (bad) mov fcoms dec (bad) mov sub pop xchg into push aas ja ljmp (bad) lret jne out pop xchg lret add jbe call or lods out loopne push mov cld xor movsl fstl xor data16 fcoms dec (bad) mov fsts dec lahf fsts dec test cmova lock rcrb hlt inc fwait add sar insb movsl ficom dec out outsb cmpsl loopne push mov cld xor cmpsb fist push mov sti xor sar insb movsb fstl dec xchg clc xor fistl test arpl push push mov cli outsl test sbb (bad) cld xor inc cmpb sub add adc xchg stc xor xor notb out fcoml push mov cli xor fist push mov stc cmp cmovs fwait rorl inc jge out es jmp pop xchg (bad) cmp (bad) cmovs sub and int inc js ljmp jmp pop xchg iret or mov and mov cmp jecxz pop cwtl insl mov and lret add jne out enter sar imul xor (bad) loope mov cmp scas jmp int aas js ljmp cli xor movsl ficom push mov cli xor push dec mov cld xor jae in push nop leave add scas out pop xchg lret pop je push mov mov fsts dec (bad) mov dec cmpl mov daa jle icebp sub aad inc cmpb push imul mov mov push push add nop leave add jae in ja ljmp js jmp add jbe hlt push lcall (bad) xor xchg int3 add and lret jp jmp jl lock aam inc jle lock rorl jg add mov mov add cmc cs fcoms dec cmpl mov (bad) aaa jo loop jp in and inc jp sub mov lret jne out pop xchg lret je arpl mov aad inc jg stc xor mov ret insl cmpsb fistp push mov sbb dec xchg into pop inc jns ljmp ja testb jmp add pushf loope push mov (bad) cmp jecxz push mov add jb notl js dec test (bad) push inc jg sub mov and lcall aam inc jg repz mov fcoml cld xor push mov sbb fistl stos addps mov mov or sub (bad) cmova mov xlat cmovs pushf aad test inc in imul fwait aam inc jg dec xchg iret or mov aad inc cmpb das push test ficoml dec test sbb decb mov fcoms dec (bad) mov cmp mov mov ficoml push ficom push mov cld xor push mov std outsl test dec (bad) popa lcall sub aam inc stc inc jle lock aam inc jle lock aam pop xchg into pop aas js ljmp ja call popf jmp pusha cltd rorl inc jnp in and cwtl loop push (bad) movb cmp jecxz push (bad) (bad) outsl roll adc mov rorl inc jl in and out sub rorl jge out daa pop cwtl rorb stos repz dec (bad) mov (bad) cmovs mov ficoml dec test ficoml adc xor imulb addr16 dec cmpl jbe in and xchg into push jbe,pt out xor int3 add and xchg iret or mov bound mov sub aam inc xchg repnz xchg xlat adc mov fistl (bad) add jbe call push aas js push shll mov es cwtl shrl mov sub xor popa lcall sub popf (bad) push inc mov sar imul sar sbb in push nop rcrl loope push mov mov sar outsb cmpsl fistp push mov cld xor jne out pop xchg lret add cmp mov and daa jno out pop xchg lret pop inc jnp out sub rorl dec xchg stc xor sbb lds rorb inc fwait cld pop mov shrb lods out lds jo out pop xchg lret js ljmp xchg rorb inc jl out sub rorl lahf fsts dec test popa lahf fsts dec test sub cmp out daa popa lcall sub sahf xlat adc fsts dec test fcoml test lret sub pop cwtl aaa cmpl jge lock aad dec cmpl loop push mov add jae in pop xchg int3 dec (bad) ret outsl lods das jp in es xor lods out pop xchg lret add jbe call add inc jle icebp sub aad inc cmpb lcall insb out pop xchg into pop inc js jmp add enter mov sub rorb inc jl out mov mov mov lds loope push (bad) movb jae in pop xchg lret pushf (bad) cmovns mov mov mov inc xchg pop test sbb shrb push mov cld xor push mov sti dec mov std outsl cmpsl loopne push mov cld xor add add pop push xchg into pop inc jns and add loopne outsb int3 xor push push (bad) add add fwait cld dec mov sti xor cmpsb ficom push mov cli xor adc pop xchg into push aas js ljmp sti inc mov add je sbb fsts imul pop cwtl rorl inc jnp in and xchg into pop inc xchg stc mov inc mov out daa pusha cltd sbb xchg adc xor push cmpsl lock sbb (bad) (bad) (bad) cmp add es add sbb jge stc xor fistl dec cmpsl or fcoms dec (bad) mov int3 ss (bad) cmp push inc mov push xchg rorl dec loop movsb lcall (bad) sub ficom push mov jnp cmc sub inc nop sub inc jns or xchg cli jl (bad) ds rorb sub aad (bad) lret push aas js ljmp icebp sub aam inc xchg stc arpl das cmpb cmp inc xchg aad dec cmpb dec pushf (bad) cmovs fidivrl imul jb out pop xchg out addr16 (bad) movl inc jg out sub out cmp (bad) (bad) cmp loope (bad) sub icebp sub aad inc out xchg lret add jae or jg std inc xchg rorl inc jge in es xchg ljmp movsb fcoml out mov sti xor push loopne mov cld xor bnd cli inc xchg lret add jne out push (bad) (bad) dec cltd aam inc jge out daa cwtl sti push (bad) (bad) pushl jo loop push in xchg lret je or fcoms imul scas inc xchg int3 add and add jno loop push push xchg clc pop lcall les imul and aas jp adc loope push mov sti cmp xor fcoml decb pop inc js adc sbb cmpsl loopne push mov cld aaa jo add dec add stc dec mov cld xor movsb fcoml dec (bad) add je or mov pop cwtl rorl bound mov sti push xchg rorb inc jnp out sub out es xchg into push aas repz out mov (bad) cmp or sbb lcall push (bad) enter stos add dec xchg pop xchg into pop aas ja call fwait incl mov and lock pop mov call push ja,pt punpckhdq sar mov pop inc jns ljmp inc cmpb jge repz mov (bad) aaa outsl test sbb (bad) out xchg cli xor ficomp je xor lods in push pop (bad) cmp jbe cmp bound mov or les mov pop mov jo es push (bad) cmp sub add jae add mov (bad) aaa outsl test sbb shrl nop ficomp push mov cli dec in iret ss fistl or out cmpl adc fnstsw cmpb sbb aaa jbe ljmp leave aaa je jmp inc movsb or les pop xchg iret pop aas ja out push (bad) mov fadds push mov add clc inc loope das imul mov add jno loope push mov cmp bound sub fcoms dec cmpl or fcoms pusha pushf aad jb in push (bad) add jb es test sbb fdivl (bad) repnz push push popl lret add mov and push push mov cmp mov dec mov sti xor movsl fist push mov sbb jae sub mov mov and cltd rorb inc xchg jecxz mov pop cwtl rorl inc jp ljmp rorl jle icebp dec mov dec test adc les dec test add push bound add sub or int ja,pt call cmpb psrlw push pop xchg lret add mov sub in jle dec in popa mov push out movsb add mov es xchg rorb repnz add push mov (bad) cmp jecxz push mov add lods add adc xchg stc xor fsubrl (bad) ss cli inc jge out daa addr16 cmpl ja call push mov std outsb cmpsl loope fwait cli cmp loope push mov sti xchg add aas xchg (bad) mov cmp lock jle out sub rorl sahf out jnp in and mov jecxz push (bad) movb cli aaa jo loope push mov pushf sub jmp js call add mov sub fstl xchg lock push (bad) mov outsb cmpsb ficom push scas in cwtl and call and lret xchg fdivs jo loope push mov cmp jmp push mov (bad) aaa jno jecxz pusha mov xchg sbb fidiv outsl cmpsl fist dec xchg pop pop xchg into pop inc jns (bad) pusha lds dec (bad) mov cmp sbb nop pop push scas rcpps push mov (bad) aaa mov and jmp ja call add xchg in outsl cmpsl loopne push mov mov ficoml dec cmpl stos in insb mov cltd out jo loope push mov cld xor sahf xlat cmovs sbb movl lahf popf jmp push inc fidivrl ss in pop xchg lret xchg out xchg inc movsl add ret sbb jecxz mov repz dec xchg xlat cmova in es cwtl loope (bad) sar imul xchg rorl inc jl out sub movzbl mov and pop inc jns ljmp rorl inc jnp add mov and xchg int ja,pt out pop xchg lret jne out push (bad) add aad hlt cmp or rorl and out pop xchg lret add jbe jmp pop inc jp add mov (bad) aaa jo loop outsb mov add ja adc sub out sub rorl inc jle lock aam inc jg icebp sub xchg addr16 dec xchg mov push mov daa popa lcall es or mov and xchg iret or mov cmp ret stos jecxz push mov sti ds loope mov ljmp test and xchg iret or mov in and xchg int cmp push mov ja xor push (bad) (bad) decl in lods lock cmp lods out push mov std dec mov sub xlat adc mov aad inc jg lock jmp fcoms dec cmpl ficomp push mov dec scas or mov and xchg rorb inc jns ljmp jbe out pop xchg flds je out cmpb sbb cmp js pop push mov cld xor cmpsb ficom dec mov cli xor fcoml dec mov insb frstor bound mov xor into sub ficompl pop xchg leave add jae in jae or sub rorl inc jl in and inc js push pop push mov stc dec cwtl test es mov loope push mov sti pop add fstl dec xchg stc xor fistl test pushf or (bad) mov rorl push inc rcll push mov dec scas adc jecxz aad cmpsl scas out dec mov sub (bad) cmova cltd rorb inc jp jmp pop xchg insl add mov ficom push mov imul out daa pusha cltd rorb inc jl out dec (bad) out pop xchg iret or mov and xchg into pop inc jns ljmp pop xchg add add or mov and mov sub cmova lcall jns add lods in push mov (bad) outsb cmpsl loope push mov or mov and xor add xchg lret add jne call pop xchg lret cmp push pop add jae in push mov fcoms dec cmpl es cwtl rorl inc jl out daa pop cwtl shrb mov jbe out pop xchg int3 add jne out push (bad) add jo and scas out pop xchg lret je ret (bad) cmp loop push mov (bad) aaa outsl test cmp push dec mov stc xor fcoms dec cmpb or jb adc mov ficoml dec xchg movsb in daa pusha cwtl rorl inc jnp in and pop mov cmp loopne push mov sti xor adc test jne imulb push cmpl divl push test (bad) enter stos in push mov add jno jecxz push lahf xor lret add jbe out pop cmpsl inc sahf fiaddl push dec mov cld xor push mov cmovle aam inc jge out sub rorb inc jge out daa pusha lods inc mov xor ficoml dec test cltd loopne push mov std xor push mov pop pop mov xor pop push mov cli xor push dec mov cli xor add popf fcoms dec test fsts dec (bad) mov xor fistl dec test adc imulb push insb movsl ficom mov repz mov sar push fistl mov sub inc jg lock rorb inc jnp in and cmp loop push mov (bad) cmp inc jp in es lcall push lods out sub rorl jge out es cwtl rorb inc jp jmp pop push mov fistl dec mov cld xor movl sbb ret insb movsb stc aaa xchg cmovs fwait aam inc jge in es xchg rorb inc mov mov push aas js jmp add mov mov (bad) aaa outsl test sbb int3 adc push mov sub aam inc jle out sub ljmp (bad) icebp push fwait aad dec (bad) rorb movsb std pop imul add dec lock dec jmp fdivl mov sub pop imul add dec movsb pop (bad) jo xor adc jno repz sahf xlat adc mov xchg into pop aas js call add je in push (bad) lds cmp insb movsb fstl dec xchg stc xor cmp popf (bad) push inc jg out sub cmc xor fcoml addr16 mov mov xchg loopne push mov std outsl test sbb mov xlat adc mov cli xor outsl test sbb movl sbb (bad) (bad) (bad) cmp mov cli xor ficoml dec in popa movsb fstl dec xchg clc xor fcoml push mov cld xor push mov std outsb cmpsl loopne push mov cld xor out push xchg rorl inc jl in and inc sub scas call add lods or iret add inc jnp in and xchg int3 add sbb aaa clc ja hlt sub popf aad inc jge in es je call add jbe jmp sub adc cmpsb fist push mov stc xor fsts arpl sar jb jecxz push mov std ss test xor push outsb lds pop xchg lret jae jecxz push mov cld ss lods jmp add and xor in and inc js jmp sub aad inc cmpb or sub rorl cli mov or mov es xchg iret or sbb rorb inc add repnz cmovs out daa pop cwtl rorb inc jp ljmp jbe out and movsl fstl xor push popf ficoml dec test add adc push mov add jno jecxz push mov (bad) cmp loop push (bad) (bad) call test stc xor fcoml dec cmpsb push dec test pop mov sbb ret cld outsl cmpsl loopne push mov cld xor push mov sti dec bnd add jbe call push push mov pusha lcall daa pusha cltd shlb pusha mov das push xchg fcoml xor pop adc mov sub aam inc jg out das rorl add je in push nop leave add je or out daa pusha cltd rorl inc jnp in and inc jnp in sub sub rorb inc jge out inc mov hlt sub sahf (bad) cmovs mov sub push dec cmpl add add push jp push mov jl cltd in movsl push ja dec lods adc sub dec test adc mov fsts dec movsl or pushf push rclb push mov cld xor ja hlt cs add scas out pop xchg lret add jbe jmp add ss xchg stc xor fcoml inc xlat cmp pop pop xchg leave add je out pop mov sub rorl pop cltd rorl inc jnp out daa pusha cwtl rorl xor outsl test sbb add cld push mov jle or fcoms dec test xlat adc mov xlat cmovs dec (bad) movl inc cli notb add scas decl dec cmpsb add lock cmpl dec cmpl xchg into pop inc jns ljmp repz sahf (bad) cmovs mov fstl push mov cli xor pop add ret outsl test xor in and inc jns jmp cmp jmp push aas js add nop int3 push aas js ljmp jns in es cwtl rorl inc jnp in in push mov add jae in push (bad) pop mov sbb (bad) jo loope push lods out pop xchg int3 push aas js in and inc jl out sub shll repnz xchg lret jne out pop nop leave sbb and lret add jne out push nop enter rorb inc jge out daa pusha cwtl rorl dec xchg rorb inc jp jmp pop xchg into sbb inc jp jmp pop xchg int jp es cltd rorl inc jnp in es xchg rorb dec mov es xchg rorb inc add in es xchg iret or mov and int3 sbb dec cmpl sahf xlat adc mov fcoms dec pushf (bad) cmovle movsb fstl dec mov stc xor fstl dec mov cmpxchg imul clc xchg pop pop cltd aam inc (bad) rorl inc jl in es hlt sub dec (bad) mov aad inc jg icebp sub aam push (bad) add ja (bad) aaa jo cmc push outsl lods in push (bad) add je in jno jmp push nop enter test sar imul pop xchg lret add je out ss jecxz push mov add jno jecxz jp repz popf (bad) cmovs popf aad inc jg icebp sub aam xor loopne push mov std outsl cmpsl cli pop rolb jne out je aam xchg in mov sbb ret push fsts dec jg out and cmp cld mov or mov aam adc lret add jbe call add inc jnp in and inc js jmp add aas js call cli xor loopne push mov addr16 xor loope push mov std outsl test sbb in and inc jp jmp pop add mov and icebp xor cmpsl fistp push mov cli xor (bad) out sub cmovs popf (bad) punpckhdq (bad) std outsl test sbb movl sbb (bad) lret push xchg int aas js ljmp in es cwtl rorl inc jnp in and mov mov fstl dec mov stc xor fstl dec mov jne dec test fcoml or sub aad inc jg lock icebp sub dec cmpl dec test repnz mov aaa jo in push (bad) (bad) (bad) cmp mov xor push dec mov stc xor test out pop xchg int3 add and int ja,pt call insb fbld cwtl rorl inc jl out daa pusha cltd out jecxz push nop leave add pop add (bad) pushl jo loop push mov std outsl test sbb aad (bad) sbb (bad) aaa outsl test sbb aad xchg fcoml dec mov cli xor fcoml push mov std outsb cmpsl fistp push mov cli xor fistl test pop in xor push mov add cmp pop xchg lret add jecxz ficomp mov sbb mov add jno jecxz push mov pushl jo insb sti inc jle lock rorb inc jg es adc mov ficoml dec test aas js jmp add je in push (bad) (bad) outsb stos pop out push xchg movsl cmp aam inc jle out sub rorl arpl icebp sub aam inc jg lock rorl out pop xchg int3 add and ss ljmp jns in dec cmpl adc divl imul mov je out pop xchg lret ja mov out daa popa lcall dec (bad) (bad) incl cmp loop push (bad) (bad) (bad) cmp in push (bad) add jae dec mov loope push mov cld xor mov fstl push mov sti xor cmpsb fistpll pop fwait rorl popa lcall daa ja xor cmpl add (bad) aaa lcall mov dec mov cmp and xor jae sbb loope pop nop leave add jae in push pop add jno jecxz push mov lock xlat adc (bad) (bad) cmp in test popf sub popa lds mov or sub push inc cmpb insb cmpsb fistp push mov cld xor dec mov sbb (bad) (bad) (bad) cmp loop push mov std xor xchg out xor cmpsl loopne xchg nop cld cmp pop insb (bad) aaa mov add jge xor push data16 es and daa mov popf std arpl xchg stc pop mov sbb cmp fidivl cwtl clc pop stos out pop mov stos jecxz test inc stos xor daa mov inc test or aam push lods in and xchg fcoml int3 adc jecxz push mov (bad) cmp loope xchg loopne push mov cld xor movsl ficom dec mov cli xor fcoml cltd jmp pop xchg rorb inc js jmp add jb xchg iret or mov cmp call jae in push mov (bad) cmp loope push mov cld xor push mov push dec xchg clc xor ficoml dec test fistp lret jae jecxz push mov xor aam inc jp out pop pop push hlt das push test push mov and push jbe,pt out pop test stos (bad) cmp push jbe,pt out push (bad) add jo loope push mov add mov pushl outsl test sbb ret sar insb movsb fstl dec xchg divl push test sub cli xor fcoml cs xlat cmova adc mov fistl dec test fcomps fstl dec xchg loopne push xchg icebp xor (bad) cmp in push nop leave add je in push nop leave add fcoms dec (bad) mov (bad) sbb les imul cmp pop xchg int3 add and lret add std aaa jo loope push mov cld xor movsl ljmp fcoms dec (bad) mov fcoms dec mov cs fistl test xlat adc mov add mov and add sub movsb fcoml test xlat adc out faddl add cmp jle inc lahf (bad) pop mov mov lcall adc xchg stc xor dec mov push nop leave add je mov cmp loop push mov cli xor ficoml dec cmpl inc xchg fistl dec xchg and loope nop mov ficom push mov cli push rclb movl sbb cltd rorb dec xlat adc mov hlt cs fsubrs ja jmp mov sub rorl bound mov aad cwtl add (bad) std xor push nop not jp,pt in and xchg into pop jo in push nop cmp mov sar imul sti addr16 xor xor fcoml jne out pop xchg leave sbb fsts dec mov outsb cmpsl loopne push mov pop lods out pop xchg leave add jb out mov fs fcoms dec test or mov fldcw mov add pop xchg int aas js jmp add and iret or lock shll ficoml dec test add adc add add mov mov ficompl or add add je out pop lods jp cmp jecxz push mov sbb aad int3 push aas js ljmp jbe jmp pop inc jns ljmp adc xchg inc rcrb push (bad) (bad) insl movsl loop jp decl mov (bad) xchg add jne out push nop leave add sub inc xchg outsb jmp push dec xchg adc ret std aaa jo loope push mov std outsl cmpsl jecxz push mov add jb in mov add jae in push stos repz rorl inc jl add cmp dec xchg stc xor fstpl push mov std outsb mov into adc clc xor xchg loopne cmpsl jmp sub fldenv mov cmp jecxz push (bad) (bad) (bad) aaa jo in push mov (bad) cmp jecxz (bad) sbb pop xchg int3 add and gs out es xchg aam insl cmpsl loopne push mov dec fstl int3 add test stc xor fsubl sub rorl inc jl in and or in pusha cwtl fldcw insl movsl fiadd jmp pop xchg into push aas ja in and xchg into pop aas js jmp cltd rorb inc jge out sub outsl ficomp aaa jo stc inc jle pop inc mov mov sub jmp les xchg pushl outsl test sbb inc sub sar imul aam ret sbb movl sbb dec (bad) or mov and inc js pop cmpsl loope jne lock rorb inc jge out daa jg add lret mov mov test das imul cmp xor hlt cmp lret je in push pop (bad) aas lcall popf pop stos in push mov cld xor dec int3 cmovp sahf (bad) cmovs cld dec lcall add popf aad data16 add sub pop (bad) adc mov fistl cltd insl fcompl push mov std outsl test sbb (bad) test xlat cmova out sub mov xchg and inc js in and mov xchg lret je in push mov (bad) cmp and int3 add and xor fcoms dec mov clc xor movsb fstl sbb (bad) std xor push mov stc xor add jne out push pop add fstl push mov inc scas std int dec test insl loope pop nop enter test pop dec xchg jbe in and cmp loop je lock loopne (bad) push mov xlat adc fcoms das addr16 fcoms dec cmpl add ret insb movsb loop je jmp pop xchg (bad) (bad) (bad) or sub inc xchg jno loop push mov sti xor (bad) lods cli push xchg iret or mov and xchg iret or ficoml dec test outsl test sbb cmp repz dec test cmpb aas js ljmp cmpsb fistp push mov push mov call add adc xor fstl mov dec mov std outsl test sbb (bad) std push cltd rorb inc jge inc mov xor fcoml xor (bad) enter scas out pop xchg lret (bad) pop push mov or sahf fcoms dec test fistpl scas out pop xchg add add jae in push (bad) (bad) jo scas jmp pop xchg int jbe,pt out pop nop leave add or pusha pushf aam inc jge in and pusha mov hlt popa mov jle lock cmc cs fcoms dec cmpl push xchg int3 add jne in push mov (bad) push fwait aad inc or mov addr16 imul pop mov push fwait add adc mov (bad) ret (bad) cmp nop lret test dec xchg into or mov sub adc stc xor loope mov add xchg rorb inc and pop scas in sub xlat adc mov rorl inc jg repz push mov (bad) cmp in nop int3 push inc jns in es cltd rorb inc jle mov and inc cmpb mov loopne pop xchg int inc jp or cmc cs mov std ss aaa xchg rorl inc cmpl clc xor loopne push mov add jne call or fstl push mov cld xor pop mov push popl int3 add mov outsb test sbb (bad) add xchg iret or fcoml dec mov cld outsl test cmp pop lahf fstl push mov (bad) cmp out sbb sbb ja,pt ljmp jle repnz cmpl sbb xchg int3 push inc jnp ds punpckhwd enter mov and dec nop lret ja jmp pop cwtl rorl inc jge out sub aam push ficom push mov std aaa jno in pop fisubrl js cmp stos in pop cltd sbb cmp out sub aad dec test fistp push mov lcall or repnz in daa jl cmp mov loope movsl repnz jmp cmpl push dec mov cli xor pop push mov sti pop xchg into pop inc jl out sub aad add jle inc mov (bad) cmp and psrlw ja jmp pop cltd rorl dec (bad) mov fistp push (bad) movl inc cmpb sub dec nop lret jns in and (bad) sub jecxz pop xchg int3 or repz push mov add int3 push inc jnp lock adc adc leave sub mov and inc test add lcall and fcoms add ss in pop xchg int3 push inc jnp out dec test loopne push (bad) movl or icebp sub pop mov mov daa pusha scas or sar push ficom dec mov stc xor jmp fsts dec xchg stc xor fistl daa insb movsl ficom push mov sti xor push mov pushl jo loop push pop add jb jecxz push mov add cmp divl add jb in pop mov xor call add or sahf and lret mov and aas ja call add jae in push mov loope or hlt cmp arpl sub in push mov add jl repnz fnstcw jl out daa pop cwtl rorb inc jns ljmp jmp mov movsb fstl dec pushf lods inc test leave add aas jp out es cwtl rorb inc jge lock aam inc jg lock jge sti xor sti les aam mov (bad) cmp jecxz pop jmp mov jl pop inc jns jmp pop mov push cmpl sub jo in push add xor (bad) pop jl cmp scas call push aas jns jmp pop xchg add or jle lock out xor push dec xchg push rorb enter lods in push pop add lret adc xor cmpsb ficomp push mov cld xor push mov (bad) aaa int (bad) mov fsts dec test cmp lock aad dec nop cmp mov mov ficoml dec test fsts pop in nop lret jns jmp pop pop aad xchg rorl inc jge out sub xor repz lahf fcoms dec cmpl dec test fcoml popa call cmp scas out pop xchg lret add add jno loop push mov sti xor add insl cmpsl loopne push mov sti xor movsl fstl dec mov stc xor fcoml test push cwtl rorb inc jl in and aam test or and mov cld add jo loope push mov std outsb cmpsl loop push (bad) (bad) enter out pop xchg lret jne out inc cmpb or sub inc cmpb or mov and xchg int3 add jae jecxz popf add iret or mov and enter mov sub aam inc jg icebp cmp mov inc jge out daa pusha cltd rorb inc jl in sub adc xchg out mov dec mov cli xor push dec xchg stc cmp call add and lret je in mov sbb (bad) jo loop hlt inc jp in and cmpb push fcoml xor fstl dec mov cli xor fstpl lods sbb xlat adc jo cld jl inc jge out popa out push (bad) add jno repnz mov cli cmp jecxz push mov std xor dec xchg fcoms sahf add (bad) (bad) (bad) cmp in push mov mov sti xor movsb fcoml push mov clc xor fistp push mov sti xor pop push mov sti xor movsl fisub mov pusha fwait aam inc jg lock aaa stos or mov (bad) push inc cmpb test fcoml dec mov sti xor cmpsl loope push mov incb xchg rorb inc xchg scas call pop inc jns in sub insb movsl fistp push mov std outsl test sbb movl push mov or sub clc cmp jecxz push (bad) fdivl aad popl ja cld xor push mov add jno jecxz (bad) xor jecxz push mov (bad) aas lret aam addr16 dec test adc sbb fistp push mov cld add xor cmpsl loope push mov (bad) cmp jecxz mov adc mov sub cmc cs xlat cmovs pop xchg int3 add and int3 add and adc mov fistl dec mov xchg sub dec xchg fcompl fistp push mov (bad) aaa jo loop push (bad) (bad) (bad) cmp jecxz push (bad) (bad) or call add ljmp jle out add arpl cmp scas call mov mov dec scas or adc jmp push or test adc movsb jmp jp jne add insl mov inc mov sbb push dec xchg loopne add icebp push mov add jl push xchg lret jne out push nop enter stos in lret add and lret jae in pop xchg int ja,pt call and lret add jbe out pop xorps lods in push mov (bad) cmp loope int3 sbb ret imul xor fsts dec (bad) mov decb out push nop inc (bad) add jae in push (bad) add jb cmc jae push mov (bad) cmp loope push mov cli xor fcoml sti xor dec mov stc mov cmp loop push mov cli add stos hlt das push xchg cli xor sbb (bad) (bad) cmp in push (bad) add mov sub (bad) seto adc xchg fcoml xor and int aas js jmp pop aas js jmp pop xchg iret or mov std ret insb lret adc lret repz fisubr jp movsb adc lods cmc xor fistp (bad) add adc xchg stc xor sbb les js jmp pop sahf in daa pusha lcall sub aam dec xchg clc xor fistp push mov adc pop inc jns in and add add or or cmpb cmp jmp or mov popl dec mov cld outsl test (bad) scas sbb int3 add jbe out pop xchg leave add je pop inc jns jmp pop sahf out add iret or mov es lcall adc clc xor in jecxz push xchg fcoml push mov std outsl rolb jp in and inc jg pop fwait push push xchg int3 push aas js jmp pop xchg aam fldenv pop xchg into or mov daa popa lcall push mov add jae add jne call add xor jns in es cltd rorb xor push (bad) add je out pop xchg sti aaa jo jecxz push mov fcoml xor repz inc jle icebp sub fcoms dec test sub aam inc cmpb xor loopne push mov (bad) cmp in pop xchg lret ja add xor loop push (bad) add je clc push mov repnz lahf fsts add ret cld ss or repnz mov sar insl cmpsl loope push mov jp push xchg lret jne out pop xchg in test loope push mov add pop cltd cmc xor fstl push mov std ss jecxz push (bad) add shlb pusha cltd rorl inc jl in es cwtl (bad) push aas jnp out sub rorb inc jl in es cwtl icebp sub aad inc jg icebp sub aam inc jle lock jmp lods in pop xchg lret jbe pusha jmp push push xchg lret jbe ljmp cwtl rorl inc jge lock (bad) cmovs mov cmp and rorl inc jle pop jecxz addr16 dec xchg stc xor fistp push mov and into or mov daa pusha lcall sub lahf lock idivb add out sub (bad) adc les push inc jl out add fs xlat adc mov or mov sub fcoms dec test loopne push nop fild in daa popa lcall sub rcrl push (bad) (bad) (bad) cmp in push nop leave add mov sub (bad) cmovs mov aad cmc aas jp in daa pusha cltd rorl fcoml push mov cld xor jne xor addr16 and jle dec stos sbb shll in scas mov insl test lret ja push push fstl push mov cld xor push cmpsl in pop xchg int3 push inc jl out sub aad dec cmpl add je pop stos in pop xchg aad dec xchg outsl test sbb (bad) std aaa jo (bad) cmp jecxz push mov add jno jecxz push mov add jb sub scas out pop xchg int inc jp push xchg lret add ja jmp pop xchg rorb inc jle icebp sub mov fcoml xor cmpsl loopne push (bad) movl mov (bad) cmp in push nop leave add je pop xchg into pop inc jl out sub aad inc cmpl fstl push mov cld outsl test enter lods xor mov and inc jge push (bad) add je out pop xchg int3 add and mov and inc jge lock aad inc cmpl and iret or mov and out jnp out daa add aad inc cmpb adc pop push mov cld outsl test sbb (bad) cmp in pop mov es cwtl rorl inc jge out sub dec cmpl adc divl push fistl push mov add jae out pop xchg into pop inc jp in es pushf inc xchg int3 add and push aas (bad) call sbb (bad) (bad) aaa jo jecxz push mov add xchg rorb inc jg repnz cmovns lahf fsts dec test pusha lcall sub aad inc and adc xchg stc xor fstpl push mov (bad) aaa mov add scas call pop inc jp in es cwtl rorl inc jl outsl test leave add or nop lret add jns in es cwtl rorb inc jle icebp sub mov sub (bad) adc xchg fistp push mov (bad) cmp imul stos in pop fdivrl jb out pop xchg int3 push aas jns jmp pop xchg rorb inc cltd rorl sub dec xchg stc xor sbb add dec cmpl adc (bad) xor sbb (bad) jb in pop xchg int3 push aas xchg into or mov sub aam inc cmpl xchg into or mov daa pusha lcall fs xlat adc mov fstl push mov std ss add mov and or mov sub aad dec addl lcall sub dec shrb mov sar insb movsl fistp push mov (bad) cmp stos out pop xchg int3 push aas js jmp pop cltd rorb sbbb test push stos add jno add adc push mov pop mov sub fcoms enter cmp repz dec stos adc inc movsl or fidivrl divl push fstl dec mov sti xor lcall xchg cli xor stos jecxz jns out sub aam inc cmpl mov push mov std aaa jo jecxz push nop leave add call sbb add rorl test fistp push mov (bad) cmp out pop xchg int3 push aas jns inc jle icebp sub adc mov and into or iret xor in push xchg lret xchg lret add jne call push aas js ljmp jnp inc cmpb adc xor sbb enter add add je sub test leave add rorb inc jge lock lahf fcoms dec test fistp data16 push fstl push mov (bad) aaa jno in pop xchg int3 push aas jns jmp pop cwtl punpcklbw mov hlt addr16 dec xchg stc xor sbb leave add push pop xchg int3 add and xchg rorl inc movsl out sub aad dec xor xor cmpsb fistp outsb test sbb add scas call pop inc jp in and mov (bad) aaa jno in push xchg lret mov rorl inc jg jns,pt in and add cmp in pop xchg lret ja ljmp lret pop push mov (bad) aaa jo loop push (bad) (bad) (bad) cmp rorl inc jge inc jl icebp sub fsts imul stos in pop xchg lret or dec test ficomp push add loope push (bad) aaa mov pop xchg int inc jp in inc cmpl std cmp in pop xchg lret add ret test ficomp push mov (bad) cmp leave add movsl fistp push mov (bad) push (bad) add scas jmp or mov sub adc inc jnp in daa pusha lcall das nop fsts dec xchg stc xor sub cmovs mov fcoml xor pop push mov sti inc mov cmp and int aas js ljmp ret outsb fisubr gs fcoms dec test cld xor push mov (bad) cmp in pop xchg int3 push inc in cmp in push (bad) add jae in cmpsl lock (bad) cmovs out pop xchg into mov sub pop push mov (bad) cmp out pop xchg int3 add jge lock aad inc cmpb adc clc xor and cwtl rorl inc jl out inc jg repnz inc and add sbb imul (bad) (bad) shlb fisubrl loop push mov xchg (bad) pop movsb ficom pop mov push (bad) leave add xchg int3 pop arpl arpl and icebp push mov gs loope cmpsl loop push (bad) fdivrl lahf cli pop adc fistp push mov sti xor push mov (bad) aaa outsl test sbb ret sti xor movsl fstl dec xchg data16 mov fcoms lods sbb cmpsl loope push mov (bad) cmp loope push xchg notb xor adc or pop imul (bad) (bad) aaa jo loope push mov std outsl stos jecxz mov and xchg into or push mov mov fdivl xchg idivl jbe out pop xchg lret jne out pop mov sub rorl mov (bad) cmova lods out pop or scas cmc cs fcoms dec cmpl push push add and lret add je in ret xor pop pop test and int3 push test js jmp pop xchg into pop aas js jmp mov rorb mov ss out dec mov int mov dec mov sti xor lret add ja jmp add and int aas js out lods cmp sahf xlat adc mov jle out daa pop xchg rorb inc js call and xchg int jbe,pt out pop nop enter lods in push (bad) (bad) adc add jb jecxz push (bad) lds stos or mov hlt addr16 dec cmpsb loopne addr16 dec xchg fstl dec mov cli xor sahf das jno jecxz push mov (bad) aaa outsl test jge dec mov cli xor fcoml das mov std xor push mov std outsb cmpsl fistp push mov sti xor fwait sub sbb (bad) std outsl test jg dec xchg fistl dec test cmp jecxz push movsl loop push lea add (bad) cmp loop push mov adc fstps pop xchg lret add jne out pop xchg lret cmp push push (bad) add jno in xchg add jb jecxz push (bad) (bad) outsl test sbb ret sti xor mov and lret add jbe (bad) pop lds inc jle lock push inc cmpb xor push mov stc xor fistl dec test fimull add and lret push bnd jge pop (bad) sub aam xchg cli (bad) aaa mov lahf sti xchg push add aas test mov mov dec lods or cmp and mov add jae in push mov pushl out jns divl imul pop sahf fistl test sbb xchg iret or into pop inc jns ljmp ja add push push mov cld xor push mov arpl push pop mov daa pusha cltd rorb inc jl in cmpl adc mov xlat adc mov ljmp and lret jb sti (bad) in sub rorb inc jnp in and push fcoml gs aad inc jle out daa pop xchg into push jbe,pt add adc sar insb movsl fist push mov pop call adc test ficoml outsb test sbb cmc inc jp in and aas js jmp jnp cmp loope push mov sti xor enter mov fcoml rcll dec test and iret or mov and mov in push (bad) (bad) (bad) aaa outsl test into adc xchg stc xor fistl mov add jb jecxz push (bad) (bad) (bad) aaa outsl test sbb pushl jo addr16 cmp pop pop xchg lret je dec into adc xor fcoml push (bad) (bad) pushl jo loop push mov std cmp loop push mov (bad) outsl add test ljmp cmpb jecxz fs (bad) push inc jg icebp sub rorl inc jle lock sahf (bad) cmovs pushf aad inc jg pop int inc cmpb or (bad) sub mov (bad) cmova (bad) (bad) outsl test sbb ret imul xor pop ljmp das xchg cld imul int3 sub mov jns push mov dec repz les xchg adc cmpsb mov lds lods sbb cmp pop out pusha int mov adc xchg add mov jp popa fsts wbinvd pushf pop (bad) cld jbe popf or and scas push pop lods in push mov (bad) cmp out pop xchg lret add add sti xor adc cs xlat cmova jg or mov and xchg iret or mov bound mov mov cmp xor sub lcall insl movsl ficom dec xchg clc xor ficoml dec test cmp (bad) pop mov jp mov jg inc movsl or push xchg lret add jne or (bad) xor loope movsl test insb (bad) ss shlb out jle adc xor fistl test xlat adc mov lds cmp pop xchg lret push fs mov mov fs push mov fistl cmpsl pop outsb shrb mov dec dec (bad) aaa jp out sub out movsb pop mov fdivs xchg sub mov aas popf add add jae in cwtl or mov jo loop push (bad) (bad) (bad) cmp jecxz insb enter cmp call xchg std dec xchg stc xor in cltd cli pop test mov push js cld xor fdivrl aam add and jl mov arpl daa mov dec mov je inc cmpsl add add add shll dec mov outsb leave sub push std jae inc test jo push outsb aam rcrl jge dec ret and punpckhbw cmp insl mov sub inc cltd fnstenv repnz mov mov pop xchg fnstsw jne jb,pn cs repz dec lods adc xchg adc mov mov sub cmp (bad) aaa cmpb lret adc (bad) lret jmp pop jae je ss add fldl test cwtl daa mov push mov dec scas adc add add adc xor iret sub jmp cmpsb add sub adc mov pop scas in and movsl and fnsave xchg mov mov iret das mov dec popf fstpt mov rorl inc jl in and xchg int3 add je (bad) mov fcoms dec cmpl mov sar push fistl (bad) adc mov xlat cmova cwtl rorb inc ja out pop nop enter adc test fcoms dec cmpl cmp loope push lods call add adc mov sub sarb xchg iret or mov and lret jbe dec test sub ret sti xor movsl fstl cs (bad) push inc jle out es hlt js,pt in and cld mov call add mov (bad) cmovs popf (bad) cmovs popf (bad) cmovp add pop xchg int3 add and dec test fistl int mov incb mov and inc jl in es xchg fcomps leave add jae in push mov pushl jo inc jnp in and aas sahf fsts dec test fcoms dec cmpl add add cmovs lcall mov and add and dec cmpl dec mov sar push ficoml dec cmpl or es xchg fisubrl daa pusha cltd rorl inc jl in and inc jecxz gs (bad) push inc popf add je loop push xchg rolb jne,pt loop push ljmp (bad) (bad) jo loope lods imulb imul mov cld xor sbb (bad) (bad) pushl jo loope push mov (bad) outsl test sbb push pop xchg lret jne out pop xchg lret fcoml push mov cli xor fcoml test std xor push mov stc xor fistl dec test bswap adc xchg fstl dec xchg push (bad) (bad) cmovs fwait rorl inc jl in and pusha cwtl rorl inc jp ljmp jne out pop xchg leave add repnz push inc jg lock rorl arpl repnz popf (bad) push inc lcall sub rorb inc jl out daa pusha cwtl rorl inc jp jmp (bad) cmovns pushf aad inc jle out mov or mov and aas ja out (bad) mov fldt mov sub rorl inc jl in es cwtl rolb or or sub rorl int inc jns ljmp fist mov fcoms dec cmpb or mov and adc mov xlat adc std mov imul cmp add and inc jl in es xchg rcrb mov outsl test arpl cmp xor add pop pop nop lret add jae in mov cmp in push nop leave add jae in xchg aad mov sbb ret sbb jecxz push mov cld xor dec test clc mov add xchg leave add je icebp pop movsb fstl dec mov stc xor push dec test stc xor out (bad) add lods in pop xchg lret jae in mov aaa jo loope push mov cld xor movsl ficomp fcoml dec mov stc xor cmovle (bad) outsb cmpsl out dec lcall addr16 dec cmpl mov mov in movl push push cltd repnz je call xor mov xlat adc mov aad scas clc xor fcoml xor jmp push fwait aad inc cmpb inc jle icebp inc cmpl mov add je in push sahf repz scas call jno loop push mov std xor mov (bad) cmp mov sbb and xchg (bad) nop into pop aas js jmp add lods in (bad) adc mov fcoms dec (bad) mov inc (bad) mov pop inc jge out inc (bad) mov jmp cmp loop push mov (bad) outsl test mov daa pusha cltd rorb inc jge out daa pusha cwtl shll and int3 add push nop leave add in es cwtl jecxz mov cli xor fstl dec xchg stc xor fisttpl mov fcoml jbe stc xor fistl dec xchg in cs fcoms imul and push pop (bad) cmp stos jecxz push mov cld lea push mov (bad) aaa outsl cmpsl jmp dec mov stc xor adc mov add (bad) push dec ficompl push mov stc xor jmp ficomp push mov cli xor fcoml cmpl dec xchg out sub imul out push pop pushl jb loop push mov mov adc mov fcoms dec or jp in and inc mov and int3 add lahf xlat adc les push add add movsb fstl nop fistl push test popa lcall pop xchg into and rorl inc jg push imul stc xor fistl test jl out daa pop cwtl rorl inc jp pop mov sar jae add dec test add je adc not (bad) aaa cwtl stc pop mov xchg rorl mov inc jge xchg into pop aas xchg hlt push mov jno jg pop inc jns ljmp js test (bad) fbstp adc lret xor rclb xor add lret jle,pn adc adc sbb ret imul (bad) cmp jecxz push mov movsb and fs xor stc popa (bad) sub negb fbld jecxz xchg rorl inc jle lock std push (bad) add jae in push (bad) (bad) (bad) cmp loop push mov and icebp push mov and inc jp lea ja out daa pop xchg rorb inc jp jmp test sbb std xor dec xchg push dec test hlt das push out sub mov lods out pop xchg int3 add lods out pop xchg int3 add and and rorb inc jge adc in cld dec test fcoms pop push mov add jae jecxz push mov cld xor lock jge xor and inc movsl out push mov xchg push outsb mov and xchg into push aas ja jmp rorl sub rorl inc jl out es cwtl rorl inc jnp adc in mov sar push je ljmp jp sub mov and inc jnp in and inc jnp in and pop mov ja stc xor push dec mov aas fwait jmp ficomp push mov sti xor cmpsb push imul cmpsb fistp push mov std outsl test sbb in add add pop test sub aam inc jg dec test sbb (bad) std xor mov aam inc jge out daa pop cwtl rorb inc jp in es mov sub sbb jo loop push mov inc mov adc test dec cwtl rorl inc jge out sub sub sbb jb cmp rorl inc jp push clc xor fcoml mov and inc js jmp add and mov sub sub lods out pop xchg push mov and lret add jne aas mov mov fsts dec (bad) mov fcoml dec mov pop mov sub inc lods adc in push (bad) (bad) outsb cmpsl sub call mov pop push sbb push mov in mov jg xor or loop outsl frstor (bad) fldenv scas cmc cmp lret lahf movsb or loop jo incl cli inc (bad) aad arpl and idivl mov sub add aam bound stos std cmp cmpsb loopne push mov std xor push mov cld xor enter mov and into pop inc jns in and inc jnp leave add xchg int ja,pt xchg sti xor adc xor fistl test fistl xchg fistl sub dec cmpl pop cwtl rorb inc jp in and inc jp into or mov and xchg iret or mov and inc mov sub push inc jg icebp sub mov daa pop cwtl rorl inc jnp in and inc jp push aas js ljmp jnp in es cwtl rorl inc test in and inc jnp in and fistp push mov sti xor movsl ficom dec mov cli xor xor add add push mov std outsl test sbb (bad) jnp mov cld xor push mov sti xor test movl sbb (bad) (bad) (bad) cmp in push scas jmp pop inc jns jmp pop xchg iret or mov and sub aad inc jg lock addr16 dec test fistl test repnz xlat adc mov ficoml dec test cmpsb loop push mov leave add je in push pop popa pushf aad dec (bad) mov (bad) cmovs mov es cltd rorb inc jge lock aad inc cmpb lods out push nop leave add jb in pop xchg rorb inc jnp in and inc jp in and inc xchg rorb bound mov sub aam inc jg repz (bad) in lods or std cmp xchg rcrb ja push nop lret jbe jmp or mov es cltd rorb inc minps cmc push scas cmc xor pop xchg rorb inc xchg hlt push stos jmp sub cmovs sbb ret insl cmpsb fistp sbb xchg repz lcall mov add push addr16 push mov sub fsts dec xchg fistp push mov (bad) cmp in pop or xchg add dec lods or stc ds pop xchg out stos add js jmp es cltd rorl inc jnp in and xchg int jbe,pt out push nop enter sahf add and cmp sub arpl iret repnz mov popa rolb mov push mov jl inc movsl jmpw mov dec test push sub lods push jb cmp fnstsw xlat aas mov and cmpsb add sub jp bound cltd cli pop mov fwait cld pop mov mov push mov jno and insl mulb adc mov (bad) aaa jo loop pop mov test gs and add shlb inc lods push jns dec scas aas mov inc jl out sub (bad) adc mov in push mov push mov jnp cmp cmpsb add (bad) sub popa (bad) xor add sbb cmp cli int3 inc lahf std pop mov xchg ja cmp jae es inc mov and cmp inc mov mov outsl (bad) cmp bound addr16 mov aam xchg repz mov xchg hlt push mov jne xor cmc dec lods push adc test sbb push insl int3 sub pop jbe ss notb adc stc sub inc mov and cmp dec scas or iret das sbb xchg cmc push mov cmpsl add es ret fdivrl cltd clc push mov jo pusha mov xchg icebp dec test pop ret jmp insl leave sub pop lock mov outsl aad test sub adc xchg notb mov in mov scas adc adc jg add es dec scas or movsl push push xor mov mov jp (bad) xor and sub (bad) and and mov sub dec xchg xor cmc push mov cmp mov fldenv popa fwait aam inc cmpl cmp and int dec lods andnps loopne mov (bad) out dec lods stos and je cmp sti arpl xor jno pop mov pushf add sub insl aad xchg cmc push scas or sub push gs test ds fdivs cwtl clc test xchg xchg push (bad) les (bad) out dec cmpsl pop int3 sub bound mov jo cmp nop lock mov (bad) jmp mov sbb ss out push loopne mov xchg inc mov mov dec lods add or and cli push mov outsb int mov mov dec test jne xor xor outsb int mov inc lahf lcall dec mov mov push mov cwtl notb jecxz cmpsb push shlb mov dec test pop rcrb push push push mov fnstcw cmc push pop (bad) xor or sub push lods or nop out dec lahf stc pop mov push leave sub push inc lahf cld push mov cltd or sub imul mov jns (bad) xor notb sbb ret and mov fstl push (bad) movb jae call lods in pop xchg int3 add mov sub stc push mov js inc (bad) cmp stos in push nop lret jbe ljmp push (bad) add xchg lret and repz test gs daa mov xor mov je aaa repz cmp cmp jne cmp xchg jae enter scas or jnp xor js xor pop mov dec scas or xchg repz mov insl lret daa xchg add out push repnz adc xlat xor lahf add lea outsl (bad) cmp pop fisttp or cs ja cmp and mov xchg stc dec cmpsl push icebp jge dec test imul (bad) cmp (bad) xor lock xor jns inc test jo xor out dec test add daa (bad) jmp push mov jb xor adc lret sub xor popf std arpl and pop jle push scas push insb lret mull sub je push shlb loopne cmpsb push lds xchg inc movsb add nop loope xchg hlt push mov mov pop mov outsl (bad) xor pop pop xchg lret add and iret sub jmp add add push jge cmp push mov fnstcw fwait clc push rolb (bad) jo mov inc popf cld subb test ds testl in sahf sti pop mov xchg lock mov adc or inc lods or ljmp sahf or push out dec test lds movsb add repz lods adc sbb popf (bad) pop mov jp cmp rorl or leave sub nop lock mov jae xor fwait (bad) addr16 xor (bad) lds jl cmp movsb or sbb cmp mov mov stos push dec iret mov adc xchg loop push mov (bad) cmp loop or (bad) jo loop push mov cld xor xchg int inc jp in es cltd rorl dec mov and inc jnp (bad) sbb lret add ja jmp add popa cmpsb loopne push (bad) (bad) (bad) cmp jecxz push (bad) add jbe fisubrl dec xchg mov add mov (bad) cmp loop push mov std xor popf xlat adc mov (bad) cmovs pop out mov inc jl in es or std imul mov cli xor xor pop push nop leave add jb jecxz push mov sbb repz mov pop or push mov mov xchg pop jne dec mov mov jb jecxz loopne mov lahf push addr16 es push leave daa jg pop mov popa mov insb mov insl rclb mov pop scas add xor es pop gs jg dec mov les fsubrs inc ljmp pop rcll jge adc les bound jae es and inc lahf hlt inc sub pushf in cmp or fnstcw fwait add xchg in dec stos xor add add ja adc bound add mov jb adc cli push mov inc xchg out lods cld dec pushf repnz movsl (bad) dec xchg out and adc ficoml icebp inc pushf out inc lahf add sbb dec scas or out jle xor mov mov insl mov inc xchg ljmp cmp xchg negb daa and pop outsb rorl and mov cmp movl cmp insb inc movsb cmc inc xchg jecxz mov sub cmp pop addr16 push mov mov dec movsb add negl add cmp add stos or sbb adc xor je adc mov pop stos clc inc xchg in jge sbb mov dec mov xor icebp push mov inc cmpsl std dec sahf out ds (bad) cmp arpl inc xchg jecxz xchg and out mov xchg dec scas adc mov jo and shrb lds sbb dec mov pop mov mov inc mov outsb lret lock lods or jg movsb divl imul outsb test sbb (bad) aaa jo inc mov fstl dec xchg clc xor fistl rcrb nop enter lods in pop nop leave or rorb inc jge out sub rorb inc jle adc js jmp pop xchg int aas ja call add daa test dec lods or int lcall aas js ljmp (bad) and pop inc jl in es xchg iret pop inc js jmp add jmp add and mov jp cmp inc (bad) in dec mov add out pop lods sbb xchg into pop inc jnp in es xchg shrb test aas jge push dec cmpl mov daa pusha cwtl rcrl (bad) cmp jecxz push (bad) (bad) (bad) aaa outsl cmpsl loopne xchg loopne push (bad) (bad) (bad) outsl cmpsl loopne push mov das xchg sti pop loope mov je cs dec stos pop sub inc jp sbb jo sbb int arpl adcl ret (bad) cmp in push popf hlt pop mov push mov outsl lret adc mov inc stos or (bad) xor lods or sub cmp lods out pop xchg leave push les dec (bad) mov pop xchg into push aas ja call daa pusha cltd rorl inc jns jmp add jae jecxz fwait out pop xchg lret add jne out push nop leave add add jae es xor pushf sti xor push (bad) out cltd repz scas adc out sub rorl arpl fnstenv xchg add inc test xchg add sub push scas adc cmp and iret bound int push xor data16 push mov std outsb cmpsl loopne push mov cld xor add and inc jns jmp pop outsb add sbb (bad) add jb jecxz push mov std je cmp (bad) pop mov jno cmp ljmp cmova mov call add jne or jle lock aam inc jle lock aam loopne movsb push jb inc mov sahf fcoml mov pop mov pop mov push (bad) (bad) (bad) outsl cmpsl loopne push mov cli xchg ficomp push mov cld xor cmpsb fistp push xchg out push cmpsb loope push mov pushl jo loope push mov cld xor movsl ficom dec xchg push dec xchg fsts dec cmpl mov cmovs pushf (bad) rsqrtps dec xchg xchg cli pusha mov jmp ljmp mov je push mov jb inc mov mov pop mov adc clc xor sbb dec test cwtl stc pusha lds and mov add add lods in push test arpl aaa cwtl jo insl iret xor mov sub cld (bad) lret fisttpl sub rorl mov in push pop add jb in push mov sub aad inc jg lock ficoml dec mov std xor push mov push sbb ljmp js lock rcll mov pop xchg rorb inc jp in and inc jp push mov dec lods or sar imul fwait rorl jl in es xchg into pop inc jp jmp pop mov sub rorl jge in es xchg into pop aas ja jle and daa pusha lcall xchg lret add lods out je cmp add mov adc add adc iret dec mov cltd std gs lods jmp pop xchg into push aas ja call jge add cmpl mov popa sarl cmc xor fistl dec andl mov (bad) cmp jecxz push (bad) (bad) (bad) cmp loop push mov fstl dec mov cli xor push dec mov adc xchg stc xor fistl loop push mov sti xor adc das push ficoml dec movsb ficomp push mov cli xor fcoml inc lcall rorb inc jnp in and dec cmpl dec test fcoms dec test (bad) aaa jo loope push jnp mov xchg negb cwtl add ficoml dec test fcoml jo in push (bad) (bad) adc mov fistp push lea sar outsb cmpsl loope (bad) sti pop mov sub push mov std outsl stos jecxz jne call sub outsl test add add or mov fwait adc clc push scas sbb inc (bad) mov ficomp push mov add jns in es lcall push mov pop jg add inc scas push inc jg repnz fcoms dec xchg stc xor (bad) movl and int aas jns in and inc jge lock aad fs mov test dec test leave add scas call pop inc jp icebp imul stos jecxz sbb mov pop test sbb aas js ljmp pop pop xchg lret add ja ljmp jl out sub aad dec (bad) mov scas ljmp sbb (bad) jo jecxz push jp,pn out sub aam inc jg repnz ficoml insl cmpsb loopne push mov pop mov ficoml dec mov (bad) cmp jecxz push mov add jp (bad) add scas call add and xchg rorb inc jnp in inc movsb push imul into or mov sub aam inc test jmp xchg dec test cmp repnz adc mov (bad) mov ficoml dec mov push dec (bad) mov fistl or movl and into or mov sub (bad) cmovns inc jg repz push mov mov (bad) cmp in push nop lret pop mov pop cmpsl cmc dec lods add lods daa (bad) loope cwtl notb sub ljmp repz mov pop mov or mov dec fwait ljmp add ss iret sbb mov add mov mov imul insb test sbb add jae in pop adc rorb inc jge out sub aam inc jg repnz lahf fcoms dec test divl jo jecxz push (bad) add jbe cwtl rorb fs xlat adc sbb ficoml dec test fcoml dec mov cmp pop cltd out sub dec mov aas popf add cmp add jne jmp add pop xchg in jne push xchg iret or mov sub pop pop xchg int3 push aas js jmp outsl sbb fistl xchg sti xor cmpsl loope push (bad) iret or mov sub lock jl or cmpl mov es lcall sub stc xor loopne push (bad) movl and into or mov das imul xchg jmp or icebp sub cmp out pop xchg int inc jp out daa popa fwait aad dec (bad) mov incb adc cli xor loopne push add repz dec xchg stc push add lods out pop xchg into or mov daa popa lcall sub sahf cli inc jle adc mov loop push cmp aam dec cmpl cmpsl loope push mov add je out pop xchg rorb inc jge icebp sub jg adc sar outsl test dec test xlat adc mov lahf fsts outsb test sbb nop lret add sub stc jns,pt or mov fistl xor loope push mov add nop lret js jmp pop cltd rorb cmpl in push (bad) cmp out pop xchg into or roll jne call or pop cltd rorl sub sahf ficoml dec xchg cli xor sbb out imul push (bad) add mov into or mov daa sub popa lcall xor cli dec xchg in sahf std dec movsb clc inc sahf icebp inc mov sub dec add loope sub loop (bad) stc dec movsl add ficomp or rclb lock dec mov xor push mov push mov inc xchg loope jp adc add inc test jb adc movntq and rorl inc jg repnz xlat adc mov fsts dec test add das push mov and sub xlat adc mov xchg rorb inc jge out sub aam dec cmpl dec test fistl push fcoml pop test lret add jne out ljmp lret sub cli xor pop push mov imul xlat movsb movq mov jp icebp sub (bad) adc lret mov cmp pop pop xchg lret add pop xchg int inc jl sbb in pop xchg int3 push aas jns in daa or lock aad dec cmpl jo jecxz push (bad) add je out pop xchg lret ja adc fsts dec test fistpl and jb jecxz push pop add add (bad) std ss loop push (bad) movb jb in push nop leave add ja adc aad dec (bad) mov fcoml xor mov and int3 pop add (bad) std outsl test movb jb in push nop leave add jbe push inc xchg aam inc cmpb sbb inc popf ljmp jle lock cmp in push nop leave add je out pop xchg lret jbe call xor outsl test lret add fsts dec test fstpl mov adc clc xor fcoml xor sbb mov add adc dec pop inc jl push (bad) or add jbe jmp or loope push (bad) movl cmpb dec movsl in sub divb imul stos add and int3 push aas js jmp push push mov std ss jecxz push nop leave add mov and or ficomp push lods out pop xchg int3 push aas js ljmp jae out pop xchg iret or inc jle icebp sub fcoms dec test ficomp push (bad) movl dec mov sar imul aad dec (bad) mov add fcmove sbb leave add jne call or mov sub aad dec lahf in pop scas jmp or sti (bad) and ljmp js icebp xchg add mov and inc jge out sub aad dec cmpl pop inc js ljmp sti push xchg rorl inc jge out sub aam add jne jmp or mov sub fcoms dec test push add aam inc jg icebp sub (bad) mov sbb ret sti xor cmpsb out sbb enter lods out pop xchg lret ja ljmp pushf loopne imul add jb jmp push stos in pop xchg lret jbe in insl mov ficoml dec test fstl push mov sti xor push mov sub mov mov pushf (bad) cmovnp loope icebp sub lahf fcoms dec cmpl dec test out fcmovu pop lds xchg pusha lret int3 push cltd aam inc test fcoml xor cmpsb loopne push mov (bad) cmp mov sub jmp test enter scas (bad) stos divl test sbb add je out pop xchg into pop inc jp in daa pusha lcall inc cmpb in insb movsl fistp push mov (bad) cmp loope addr16 dec xchg cli xor cmpsl loope push mov add jae out pop xchg lret (bad) movl and pushf add js in and dec xchg imul test sbb nop leave add pop xchg rorb jne cmp test xor fstl dec mov (bad) cmp (bad) int inc jp mov sub aam inc jg icebp sub adc mov out ja and rorl inc jg (bad) adc aaa jo jecxz push mov data16 es cltd rorb cmpb adc clc xor imul mov std xor push mov rorb cmpl dec mov movsb lock adc mov fcoml push mov decb pop insb stos out jne jmp pop inc jp out jno in pop xchg lret add jns out xchg fistp push mov add jne jmp or mov fidivl repz xchg rorb jg repnz (bad) mov fcoml push mov nop fistl xor push (bad) movb je add sbb xchg int popa fwait aad inc cmpl rorl inc jl out add mov push mov std ss jecxz push nop lret ja ljmp or push mov std aaa jo mov aam inc cmpb mov sub adc mov fcoms out pop xchg into or rorl sub xor cmpsl loope push (bad) movb jb cmp cmpsb loopne push mov (bad) cmp or add ja jmp push pop cltd rorb inc jl out es scas imul mov cmp cmpsl loope push (bad) movb jae adc add sub aam push mov cld ss cmpsl hlt das imul lods xchg loopne push mov add je out pop xchg in dec scas (bad) cmp jmp cwtl sti push cmpsl or dec mov xchg add outsb xchg xor lods sbb dec mov mov shrb add push mov mov in mov lods jne xchg negb and mov add ja in daa jg dec stos add sbb pop imul adc or pop les cli pusha enter or lret add (bad) xor pop ja sub sarl ljmp (bad) je sbb jae cmp cmp dec sarl cmpsl adc out test add vmwrite dec test iret sbb jns dec mov ret (bad) bound ja push enter cmp pop lret xor ret inc stos adc stc add push les xchg cli popa ret clc push mov xor ret aaa lahf xor inc aad lahf adc dec mov leave cmp mov cltd cli pop mov std pop and aad mov xchg dec test leave xor pushf xor (bad) cmpsl sub pshufw ja aaa xchg inc pushf fsts push stos or pop idivl dec mov and pop xchg out pusha into xor lahf add mov mov icebp jno fs mov icebp dec mov jns cs (bad) jnp push mov js je cmp cltd jecxz pop xchg fild push xchg add sbb dec cmpsb or or adc ds cmp orl ss jecxz push (bad) add jae scas or mov fsts pop adc aam inc jg repnz adc sbb xchg lret jbe jmp pop inc jns out daa popa lcall sub xor loope push mov add repz jns in and inc jnp in sub fistl xchg stc xor fstl dec mov sti xor cmpsb loopne push mov add jae out pop xchg out pop xchg rorb inc jge int mov add call or loope ret es dec mov scas adc cmp mov jbe out sub (bad) xor mov (bad) sub add cltd push arpl xchg jmp add adc and mov pop ret ljmp xlat dec mov sti sub jg hlt das imul mov sub aad dec cmpl int3 push aas jns in and imul add add aaa out insb int pushf icebp jp,pt lods add daa pusha lcall sub pop xchg lret add and xchg in daa pusha lcall (bad) icebp xor push nop lret jne call mov sar insb movsl ficomp push mov (bad) aaa jo loop push (bad) (bad) (bad) cmp add je call pop (bad) in fstps push mov (bad) cmp scas inc scas push mov ds out xchg hlt push mov or and daa mov pop mov sar insb movsl ficom push mov cld xor sbb xchg lret jbe call daa pusha cltd rorb pop inc jl out sub aad dec cmpl mov js jmp pusha lcall push test imul inc jnp in es cwtl rcll (bad) (bad) aaa jo jecxz push nop leave add scas call or mov es mov jp and or pop push mov (bad) cmp in pop xchg lret mov adc mov fcoml xor push xchg lret jbe ljmp scas or hlt mov hlt addr16 dec xchg (bad) into or mov sub aad dec test ficom push mov std aaa jo jecxz push test ss repnz jmp mov (bad) cmp in push xchg lret cmovs add (bad) std aaa jo jecxz push nop leave add mov pop out pop mov cmpb push dec mov cld cmpsb repz dec xchg cld xor push mov add xchg in dec xlat cmp adc iret or mov daa popa lcall ret cld ss in push (bad) add jne call push inc jns jmp pop mov fstl push mov or rorb inc jge lock xchg adc mov fcoml dec mov sti push into stos adc fstpt repnz mov inc cmpl (bad) clc pop mov scas adc adc pop mov fstpt xchg iret or icebp sub push movsl fistp push fistpl mov jl sti xor push (bad) (bad) (bad) cmp in bound inc cmpl sarb cmp and int3 push add mov sub fcoms dec test fcoml dec movsl loop push (bad) add scas sti mov in es cltd rorb inc jle je cli xor cmpsl loopne push mov (bad) aaa jo jecxz push (bad) add jne out pop xchg into pop inc cwtl aam dec (bad) mov fdivl out pop xchg int3 push aas js jo divb imul cmpsb fistp push mov add jae out pop xchg lret add inc jge lock aad or mov sub aad inc cmpb pushf (bad) cmovns mov ret outsb cmpsl loopne push mov std ss leave add jne call stos divl imul std aaa jo fs ljmp jge out sub aam inc cmpb adc mov sti xor push (bad) (bad) stos add xor cmpsl loope push (bad) movb jae bound iret or mov daa popa lcall sub fcoms dec test cld outsl test sbb movsb lock adc mov jl add jne out pop xchg lret add jbe jmp or mov sub aam inc xchg rorb inc jnp out sub loop out sub (bad) cmovns mov push mov std aaa jo loop push mov add jae out pop xchg lret add jbe call and inc jg pushf call or mov daa pusha lcall sar insb movsl fistp push mov std aaa jb in pop xchg lret jbe call sub aam inc cmpb enter lods out pop xchg add dec lcall sub lahf fcoms dec cmpl sbb ret cld xor jno imul xor loop jae cmp in pop xchg int3 push aas jns repz in daa pusha lcall xchg rorl inc jle out sub movsl ficom push mov cltd out pop xchg into pop inc jp out daa popa lcall mov ficomp push mov add je call or repnz mov rcrl or mov push lret or lock aam dec cmpl sbb ljmp jnp jp add mov push call add mov inc mov jecxz mov inc mov jae xor and cmpsb cmp out push mov add push jle inc mov inc test dec test arpl xor add sub mov jbe std pop mov mov imul test (bad) sti pop mov xchg icebp push mov inc cmpsl add (bad) pop mov xchg notb push imul mov mov les jg in sub sahf xlat adc mov fcoml dec mov sti xor cmpsb add jns jmp pop xchg (bad) mov cmp sbb cmp or mov and sahf cmp jecxz jg icebp sub imul cmovs popf jl add jb in push (bad) add jae in push nop leave add jbe push aas js ljmp js add and add jbe out pop xchg lret add daa pusha cwtl rorl inc jnp out daa pusha cltd rorl inc jg lock in sub rorl jnp in and jmp add jne out push nop push fwait aad inc jg lock aam inc jle icebp sub aad inc xchg ljmp add aas ja call add jne movl push push nop enter cmp insl movsl ficom push mov cli xor ficom push mov cli xor movsl cmc das push test ficoml dec fwait inc mov sub aam inc jge out daa popa fwait pop test sbb (bad) outsl test sbb (bad) (bad) outsl test sbb loope push (bad) (bad) (bad) cmp loop push mov std outsb test push mov (bad) cmp jecxz push mov aam inc jg lock add or sub aad inc jg adc mov xlat adc mov inc (bad) add lods out push (bad) add xchg nop leave add je in push pop add jno jecxz push (bad) (bad) (bad) aaa outsl mov fistl imul cmpsl loopne push mov cld xor push mov pop xchg iret or mov and xchg into pop aas js ljmp jns or out sub and scas call add and ljmp jl mov aad dec mov icebp dec mov adc mov jmp pop xchg iret or mov and xchg iret or fcoms dec test fcoms dec cmpl mov mov xchg int add in and inc jns jmp pop xchg int aas ja mov sar insb movsl ficomp push lea fnstenv je out pop xchg lret add js lods call or mov es cltd rorb bound pop push mov cld xor pop out xchg repz mov inc xor sub rclb push sub or jmp scas adc and xor sub repz xor cmp push icebp push mov sbb cmp jecxz test aaa inc mov add mov dec scas or in mov pop rcrb fistpl pop add add and loope popa fwait aam push xor icebp sub aad inc jg lock rorl gs fcoml xor fistl add mov fsts push pop push mov cld xor test pop mov lcall (bad) mov xlat adc mov jne jmp add and dec xchg fcoml xor fistp pop xchg int aas (bad) int inc jns jmp pop xchg iret or mov and ficoml dec test fsts dec (bad) and int ja,pt ljmp js ljmp mov (bad) cmp jecxz push (bad) (bad) jo loope push sbb fcoms dec (bad) mov add adc and int3 add and lret add lods out pop xchg leave add mov add xchg lret add es jecxz push (bad) enter stos in jmp outsl test sbb (bad) std xor push mov add outsl test sbb ficoml dec test fsts dec cmpl inc movsl add push inc stos jge pop mov mov jg dec repz cmpsl pop lds xchg inc mov test fstpt sahf add and or mov daa (bad) popa fwait aad dec (bad) mov fstl push mov ljmp jge lock pop xchg lret jne out jl xchg aad dec and push (bad) add xchg inc xchg into or mov aas xlat popa (bad) sub pop xchg rorb repz xor fstl xor sub aam out fadds mov aas (bad) mov sbb push repnz nop lret ja in daa pusha lcall sub je call test cli xor test xor addr16 push mov (bad) jecxz test loop push (bad) add mov and add add xlat adc sbb out pop xchg int mov fwait aad dec (bad) mov mov fistp push mov (bad) cmp out pop xchg ljmp mov imul lds dec xchg cmpsl loope add lret add ja jmp or fcoms dec test push mov das imul out pop xchg into sbb sahf fcoms dec mov sti xor push xchg int3 pop inc jnp adc cli cmp pop inc jns ljmp xlat adc mov test sbb lret ja jmp or iret or mov sub ret outsb test xor dec test fmul xor loope push (bad) add je out pop xchg int3 add dec cmpl aas js in jecxz mov pop xchg int3 push aas jns in into xor loope push nop lret jbe jmp or rorb cmpb nop leave add je in xor repnz lahf fadd sub fcoms outsl test movl jae out (bad) out cmpl inc cmpsb or ret outsl test mov xchg rorl cs mov std aaa jo add jne jmp cmpl and in push xchg lret push xchg into or mov sub aad dec (bad) mov (bad) aaa jno in mov inc jg hlt cs xchg xor push mov mov push mov add jbe call push inc jns in es adc (bad) (bad) push mov mov les in outsb test sbb (bad) pop mov cmp ljmp movsl loope push mov add and push push (bad) movb cs js,pt jmp pop cwtl rolb and fsts dec mov adc insl add (bad) cmp add aas mov mov js dec mov xchg clc dec mov sti xor push (bad) (bad) (bad) cmp in (bad) and mov mov frstor dec enter iret or mov daa pusha lcall cs xchg loop push mov pop cwtl incl mov ficoml pop in (bad) out arpl mov sub mov pushf fistl xor int3 and rorl jg repz and rorl inc jl out push mov ret outsl test sbb add jne call or mov ja es fwait aad dec cmpl fstpl push mov add jne call arpl mov fistp push mov es mov (bad) xor loop push mov adc mov jnp in es cwtl rorl inc jge out daa popa cltd or inc jns out daa popa lcall sub xlat pop ret test fnsave xor push add cli xor cmpsl loopne push mov dec mov push (bad) add jb in shll cltd rorl jge js pop les (bad) loopne pop mov add mov sub (bad) cs cmc pop pushf (bad) cmova (bad) pop lret sub fstl dec mov cmpsb add sbb add sbb sti xor mov sub (bad) cmovns leave add add ret cld pop mov sub cs pop inc (bad) mov cmpl test stos out pop mov pop pop xchg iret or sub test push mov add and push test pop xchg rorb leave cs rcll es hlt cmp ljmp ss xor sti cmp mov xor in (bad) enter (bad) aad push mov push js inc xchg rorb mov push mov add add push mov xor or lret sbb inc xchg rorl aaa jno repnz mov je dec mov inc jnp adc fstpt mov jns sub fsts arpl sub and (bad) xor (bad) mov ficoml dec xchg into sub sub lahf cli push mov jne jnp imulb cwtl iret push cmp dec test dec cmpsl or lret add push xchg int inc jns sbb sbb mov jo out pop cltd cmc pop les outsl stos push inc jge aaa mov mov outsl test mov inc jl out sub repnz shlb lods out pop xchg fdivrl lahf cmp movb test sbb leave add data16 sub stc fs loope push mov sbb lock dec mov dec mov nop lret jne or das jno in mov je inc mov (bad) cmp call test cmp pop inc jnp sub ret push test aas jle repnz in push cwtl rorl inc lods adc sti aaa jno add and inc mov inc jp out sub or test and inc jge icebp sub sbb fistp push mov and pop inc jge repnz sub sbb mov pusha decl lds xchg dec nop lret add pop mov cmp mov push mov mov inc stos adc rorb inc jl pop ja aas (bad) mov (bad) jg dec popf fsts dec xchg cli xor loope mov pop xchg into or inc stos or outsl mov lret push inc jp cmp add lds nop hlt dec xchg sbb arpl test mov pop mov sub aad xor mov insb mov fstl push mov mov cmc sbb outsb test add (bad) xor add mov outsb (bad) xor addr16 movsb xor int js inc xchg int in or js jmp jp dec mov xor ficomp pop mov push mov std aaa jo push sub sahf ficoml dec xchg or mov sub mov cli pop ret and rorb inc jge or stc pop popf (bad) adc mov add je out pop xchg in dec mov pushf call push mov push out movsb (bad) dec movsb divl leave add and xchg rorl inc sbb ficoml dec xchg fistp push mov daa mov lock aam test mov out push mov xor loope mov lods outsl jmp repz mov bound sbb (bad) jb push ret das cwtl jl les and cli gs es add inc mov push ret sti pop mov mulb sub cmp ljmp cmpsl loope push mov add add (bad) jb in pop xchg int3 push inc xor ficomp push mov std outsl test leave add in and push mov cld xor sti xor cmpsl loopne push movsl jecxz arpl cmpsl in pop xchg lret add jbe call or mov sub pop les jb out jno push mov sub punpckhwd xor jo sub movl add cmc xor repnz inc movsb loope push mov xor add jg inc mov add jae daa mov dec mov (bad) aaa jo dec mov pop xchg rorl cmp pusha ret and push (bad) out mov xor cmpsb loopne int3 cmp vxorps inc jge out cmp mov (bad) fidivrl (bad) mov (bad) jge inc mov ficom dec pushf clc pop int3 pop pop xchg rorb inc jnp push jp dec enter add (bad) sbb in dec cwtl aam dec cmpl mov into cmp jmp pop mov adc mov sbb jecxz nop lret add and mov cmp int lahf call inc test outsl fmull ja cmp mov sub fcoms test push mov xor loope or out push mov adc or cmpb movb je out pop xchg lret add test dec loopne ja jmp outsl int cltd loopne lcall push mov clc pop mov hlt rcrl pop xchg int aas js jmp pop xchg iret or pop inc jp add adc pop jge cmp ficom movsl fistp push mov sti xor sub aam push mov sti cmp mov sub aam inc cmpb adc pop lcall dec (bad) mov fldenv xor addr16 dec test xchg int aas js jmp pop cwtl rorl inc jl out sub rorl jg repz dec xchg cli xor sub fistl xor cmpsl loope sbb (bad) cmovns mov sar imul xor mov rolb fisub out pop xchg int3 add and ficom push mov std outsl test movl pop pop xchg lret mov add jne call sbb sub fistl xor fsubl popa lcall sub cmovns mov mov clc xor sbb ret adc add aaa mov or push push mov cld xor push (bad) (bad) (bad) cmp in push (bad) loope jo in push mov add jno loop and cwtl rorb inc jge lock aam in pop xchg lret jne out pop xchg int3 add and pop inc jns jmp js in es cwtl rolb or jg add or sub lahf fsts dec test pop xchg into pop inc jns ljmp ja jmp iret pop inc jns ljmp xchg rorb inc jl sti mov icebp sub (bad) cmovs and rorb inc jnp out daa popa lcall sub xlat adc mov repnz lahf fcoms dec test je out js pop jnp pop mov data16 and sbb (bad) pop lahf add flds adc fxch dec mov fcoml dec mov sti xor push (bad) movl pop pop xchg lret add ljmp jge hlt enter (bad) (bad) cmp fwait add pop cwtl rorb inc jle repnz lahf fsts dec xchg and mov loope push lahf (bad) dec test ja sbb fistp push mov (bad) cmp mov std ss jecxz push nop leave add pop xchg iret or mov dec xchg stc xor loopne sbb nop leave mov out sub aad dec add mov ficomp push mov (bad) cmp out mov and mov jecxz mov es dec cmpsb in pop xchg lret add jne out pop xchg lret xchg call rcll or int3 xor (bad) pop mov jbe add and in fidivrl cmpl and cmpsb fistp arpl xor jb std push mov jns cmp jne cmp in daa bound lcall mov dec lods pcmpeqd cmp mov leave push cmp pushf xlat movsl sub insb mov aad xchg clc pop enter mov insb shlb ss add jne stos xor xchg jmp pop shlb fildl or mov pop ret inc stos adc clc xor pop (bad) loop scas adc push mov movsb or addr16 mov add jnp popa int pop cltd rorl jns dec popf fsts dec test xor push xchg int3 add ret jecxz popf fcoms dec xchg in dec mov mov sub push sarb mov ds add adc (bad) cmp nop ja aas mov mov daa popa fwait aam xchg clc pop ret jecxz pop xchg iret or add pop (bad) xor cs cmp std aaa jno mov mov arpl out scas adc fisubr mov inc mov cltd add cld jnp dec mov and inc mov mov icebp push lds cltd pusha jmp mov aad movsl or aam mov (bad) les xchg add lds outsb iret xor push mov dec stos adc punpckhwd das (bad) rcrl notl and arpl xchg dec dec mov jge aas sahf divl jo or fwait cs call test cmp add sub mov sub dec scas (bad) fadds addps pop rcrl loopne nop int inc jge repnz and daa bound daa mov sbb mov fild or sub adc mov (bad) cmp ss out popa pushf xlat adc insb lods or or movsl and xor push loope push mov jle cmc xor loope pop xchg rorb movsb add add jne xor cltd sbb add push mov add jbe ljmp lock mov std js inc xchg dec lret mov imul mov es fwait adc in dec lods in sub rolb imul mov loop xchg std cmp call (bad) adc fildl (bad) xor mov mov push mov call add pop xchg shlb je in sub fcoms dec mov std aaa jb xor sbb push inc jle inc cmpsl sti cmp sub pop mov out pop xchg iret and jmp adc std cmp sub lds ds mov sub adc mov sub jbe cmc xor fistp push mov push imul or mov sub jns inc mov roll insl (bad) xor divl (bad) jmp les cmp jmp pusha fwait (bad) adc incl fild add rorl mov dec mov mov sub fsts dec xchg adc dec mov (bad) cmp and movsl sbb add das pop push movsl push addr16 movl out sub adc mov sbb lahf ficoml cmp and sbb or cmp push mov dec mov call sub fcoms dec mov push data16 enter mov daa bound addr16 xor pusha adc sbb dec xlat daa arpl (bad) jbe add push inc jnp lock ficoml xchg or es insl xor nop xor test sbb outsl stos in pop xchg int inc jge hlt cs dec scas pcmpeqw aaa mov lds out sub out sub xor mov dec repnz jl repnz push mov add jnp icebp sub mov lret (bad) adc out sub pop (bad) in mov push dec icebp inc jnp icebp sub mov enter mov fistp push mov sub jp repnz xchg lock xchg lret push inc jnp icebp jl or hlt das push fistp push nop lret push inc jl icebp sub mov and mov add add (bad) icebp dec mov std aaa jno in jl push inc jl icebp sub fcoml push mov add jne jmp mov and pop jg sti inc or std push xchg iret or pusha fwait (bad) adc mov jecxz pop xchg int inc jge adc fcomps push mov jno ljmp fbstp outsb test rorb (bad) mov in pop mov jl bound xchg repnz stc dec mov (bad) cmp add inc cmpl pop pop xchg iret or hlt inc test jne divl test and mov push fisubr push loopne gs sub out aam pop lcall cmp out pop xchg jecxz stos or sar jo or or xor add jecxz mov es outsb test rorl mov loop pop mov sub fnstsw movsb or xor fs es jmp (bad) and lcall sti ss in xchg sti push cwtl aam dec xchg cld aaa jae movd xor test xor cmp cmp in es pushf repnz mov push inc jnp out sub das xchg notb add sub imul outsl stos in pop sub lock fistl mov cmp dec mov jmp nop out push mov (bad) movl daa bound inc test out pop xchg rclb xor repnz inc (bad) mov inc test jo in pop xchg jmp test sti ss out pop xchg ljmp xchg int mov cli inc stos or fistp push xchg int3 push inc cltd cmc push mov (bad) repz mov sbb jg jns in es xchg push push mov push pop xchg into pop inc js jmp test sub dec (bad) mov push jb cmp mov fsts dec test dec xchg int3 add and inc jns jmp pop xchg repz (bad) adc mov fistl ljmp int add add jbe out push lahf add pop push mov cld xor push mov add jb add es cwtl rorl inc jnp or rorb inc jl out daa test dec xchg repz mov add jbe ljmp js xor (bad) push inc jg out sub loope stos adc cli xor cmpsl loope push mov add jbe cmp cmpsb loopne push (bad) movl and sbb cmp insl aad xchg idivb adc pushf fcmovbe dec test fstl dec mov pop mov jmp pop xchg into ret xor mov enter sub negl pop mov jns daa arpl push fstl dec mov sti stos adc inc fsts dec test bound and pop inc jns jmp pop xchg iret or inc test sub sahf xlat cmovs jp inc xchg rorb inc jl mov inc xchg notb into pop inc jns in and inc jnp out sub sbb fsts xor in sbb add in push nop lret repnz (bad) sub and lret add nop enter iret cmp rorb inc jl lock sbb sbb ret std xchg in pop mov imul (bad) aaa jo loop push (bad) (bad) (bad) cmp dec scas icebp sub xlat adc mov notl fsts dec test mov sbb ret cld xor push mov std cmp dec scas icebp sub cmovs out push cltd aam inc cmpb mov sbb add jb in pop xchg lret js pop mov fstl pop mov sub sahf fisubrl test sar insb movsl ficom push mov cld xor push mov jno add jbe call mov hlt addr16 loop popa mov dec xchg stc xor fstl add push mov cli xor mov das imul inc jl inc mov jl inc stos or mov je jl dec scas adc mov shrl in pop (bad) ss cli pop shlb lahf sbb xor fcoml test xor push call movl pop pop scas adc loop call or mov and popf ficom push (bad) (bad) pushl jo loop push mov outsb lods out pop xchg leave add jae in sti pop cltd rorl arpl repnz mov enter stos jecxz or add je out pop xchg (bad) ret cld xor push mov std outsl test sbb xor mov fstl add imulb addr16 xlat adc jp inc jnp in es cwtl rorl inc jge out daa pusha cwtl rorb inc lahf pop insl mov sub adc mov inc xchg ficoml dec xchg outsl ljmp nop leave add pop xchg int3 add mov sub aam dec (bad) mov xor out insl xor sub push mov (bad) outsl test sbb (bad) cmp addr16 dec xchg mov xchg int inc jns imul jp in and inc jge lock aam inc mov cmp in push (bad) push shlb out inc cmpl stos in and push fstl dec mov cld ss loop push (bad) (bad) (bad) cmp sub dec (bad) mov dec test push cmpsb loopne jl sub fcoms dec test fstps push mov (bad) aaa scas adc fs (bad) push inc or cmp and loopne push mov (bad) aaa jo loop and adc sti xor cmpsb fistp push mov std ss adc in and inc jns ljmp dec test fcoml push mov push mov (bad) cmp in out sub cmovns add mov lcall rorb inc lahf add aas rolb jns jmp lcall loope push xchg int3 push aas js ljmp adc xor stos sub repnz dec cltd rcll jno push pop xchg lret add jbe call pop inc jns jmp pushf add loope push mov (bad) aaa jo jmp mov pop xchg rorb inc jl inc xchg int3 or pop push mov (bad) aaa jno jecxz push nop leave add test push fwait xlat adc mov jo out pop xchg int cmp cmc aas jnp out sub inc xchg iret push jne sbb ja,pt ljmp jp in and fstl dec mov cli test insb cmpsl loopne push mov push mov inc jp in daa popa lcall cs lock xchg rorb inc jnp in es lcall xchg into or jge,pn repz mov ja,pt jmp pop xchg rorb inc cmpl pop (bad) repnz xchg into or mov sub or fsubs inc mov lods out test xor pop push mov cld xor push mov cld push shrl lods in push nop leave add jle or add rorl inc mov outsb test inc test fsts dec cmpl dec (bad) mov imul out sub inc jl outsl stos in push pop sbb xchg aas jns jmp pop xchg into push jns dec mov cli xor pop push or aad mov call arpl outsl test sbb add jae in pop xchg leave add inc test ficomp pop add xchg divb jo loope push rcrb pop xchg lret fistl push mov cli xor ficom dec xchg clc xor fistl cmc dec mov std xor pop add xchg out xor fistl mov add pop aas js call add je in push (bad) (bad) (bad) jne cmp jl out daa pop cwtl rorl inc or cmp fldl sbb add add jae in push (bad) add jb jecxz push mov cld jae xor push nop enter push insl xlat cmp in push (bad) fcoms repnz mov xor ficoml dec (bad) mov aad inc jge in fs sub test enter lods jmp adc outsl test cmp popf (bad) push inc jg lock rorb inc jnp in pop lds imul cmpsb in pop outsl rclb mov sti xor push sbb into pop inc jp repnz sahf xlat adc mov imul sti outsl test sahf sbb sbb (bad) std outsl test sbb sub xchg lret add pop xchg lret jae in shlb pushf aad inc cmpb xor cwtl rorl inc jge adc shlb popf (bad) cmovs popf xlat adc mov jno in pop nop leave add push mov inc jnp in es xchg rorb inc jp cmc cs fsubrs (bad) cmp in push (bad) add jae in push nop leave xor in es cwtl rorb inc lds lahf repnz dec cmpl push lcall cmpsl fistp push mov cld xor movsl fstl sbb leave add je in (bad) cmp movsb fstl push mov sti xor shrb (bad) dec test ficoml dec test mov sar lods sbb mov stc xor fsubl fbstp jnp lock rorl popa cltd rorb inc cmpb fwait aam adc mov mov sbb enter lods out mov and into adc fcoms dec (bad) mov (bad) jns or es lcall sub sub int aas js ljmp repz add dec (bad) add jb loop push mov cld xor cmpsl loopne push mov xor fistl dec cmpl out pop xchg int aas js jmp mov add xchg rorb inc jp jmp pop xchg iret or mov and xchg into dec mov dec cmpl les xchg fistp push mov (bad) aaa jo loope (bad) adc mov (bad) outsb cmpsb ficomp push mov stc xor ficoml dec cmpl mov ret xor (bad) std outsl test sbb adc fsts dec mov cli xor push dec mov cli xor add push nop enter stos loop cmpsl sub mov fcoms push mov (bad) cmp loop cmpl mov fcoml lods cld ss loop push mov pop mov (bad) rorb inc jl out es cwtl shrb hlt das imul pop xchg rorl inc jl in es xchg rorb inc jp sub ljmp jl out mov inc cmpsl out pop xchg lret je out (bad) (bad) (bad) cmp jecxz jg lock rorl inc jge out es xchg iret pop aas js sub int jbe,pt out (bad) arpl xlat adc mov xor cmp ljmp jbe out push pop add jo and sar push fistl out cmpsl jmp add imul xor scas call add and int3 add fwait jmp pop inc leave cmp pop mov or xlat add mov adc sbb add cmp gs (bad) cmova fwait rorl cmpb or jno push mov cmp repnz mov push mov cld xor jae out pop xchg lret ja ljmp jle cmc repnz es cwtl rorb cwtl loop push fwait sti pop mov sub (bad) cmovns add pushf ficoml mov cld xor push mov add jae (bad) aaa jno negl adc into or decb negl call or aad dec test ficomp push mov std cmp in pop xchg int3 xchg in pop test imul xchg loop pop stos or imul and inc jg repz mov ret outsl test mov adc pop mov sub (bad) xchg or xchg hlt push mov movb ds into or mov sub (bad) cmovnp movsl ficomp push mov mov adc sahf (bad) arpl mov adc sti pop movsl loopne push (bad) movl pop xchg int inc jns out daa popa lcall sub lahf in or lods adc stc xor nop fistl mov sub aam inc mov movl and cwtl rorl inc jge icebp sub ret lcall lahf fsubrs lds dec mov and or push push mov (bad) cmp and rorb jne inc lods sub mov mov xchg fistl dec movsb push gs outsb mov divb push fstl push mov (bad) cmp jmp or mov sub movsb and test sbb add cs cmpsb loope add lret ja jmp popa fwait aam dec (bad) mov fstl push mov push mov aas jns in es lcall daa popa fwait aam dec mov (bad) std cmp out pop xchg int3 push aas jns in es cltd rorb mov cmp sbb leave sbb add adc stc xor scas jmp pop cwtl rorl inc jg repnz fcoms dec test jb clc xor inc jge jbe sti xor iret or mov sub cmpsl loopne push mov add jae out pop xchg lret add ja pop movsl fistp pop mov add add fs xlat push mov pop jb jmp lds xchg hlt push mov jp inc cmpsb or cmp clc fistpl sub cld cltd push imul fistpll mov gs nop out sub mov leave push adc sar outsb test sbb or mov sbb xchg testl popf addr16 pop popf fcoms dec test aam xchg into or mov sub add push xchg rorb inc (bad) loop cmpsb or or adc sar js icebp sub xlat adc rorb repnz lahf fsts push mov dec test std pop ret xchg lret add jbe pop stos lock mov inc jnp out daa pusha cltd shlb out pop xchg into pop inc jp in es loop pop xchg int pop cwtl rorb add mov xor loopne push mov fdivl fwait hlt aaa jno in pop xchg into mov out ret movsb out sub xlat sub fistl dec mov cmp ficoml dec test cli pop roll jne call pop movsb ficomp push mov (bad) aaa jo loop mov adc mov cld push (bad) enter mov popa fwait aam inc adcb cmp repnz dec cmpl xchg stc xor sbb mov cmc cs lret cmovp mov mov cs xchg push fwait aad dec (bad) mov fistl jge lock cmpl (bad) or cmpb xchg in test daa popa fwait aad dec test cmpl or cmpb xor adc push pop xchg int inc jp xchg fidivrl popf call or mov outsb cmpsl loopne push mov (bad) push scas in daa pusha cwtl shrl dec test aas movsl cld cmp in push xchg push mov xor cmpsl loope push (bad) fcoml dec mov sti imul cmp jns in and add add or xor mov xor xchg lret pop inc jp add ret std aaa jno in xchg fsts pop xchg into or add xor aad dec xchg jl sbb nop out dec mov les inc (bad) lret add xchg out sub lahf fcoms dec mov jg sbb mov fcoml (bad) movl aas movsb in pop fwait adc adc xor jg jbe or adc and in fmuls sub push (bad) xor push dec mov pop (bad) sti pop leave aaa daa int3 inc mov xchg (bad) jmp push cwtl or dec mov adc mull dec mov mov fmull cmpsl sbb inc mov mov jae jb pop iret cmp popa (bad) aaa lods sbb imulb dec mov and lods sbb push mov (bad) inc mov mov xchg cli fs lods sbb call sbb push ja pop ficom es or fistl xor (bad) xor insb fist xor vmwrite lea jae inc mov mov imul sahf push xchg add cmp pushl push les cs movd hlt mov imul mov loope add inc mov stos sbb dec mov jecxz mov fisttp scas sbb add das adc jle sbb scas clc movsl incl out pop (bad) xor mov push sub mov rcrb cmp pop int test mov out lret inc mov icebp arpl mov mov in enter mov repz sarl cmp xor out pop xchg leave add lods out push (bad) add jne out pop xchg jmp xor push mov cld xor int sbb push (bad) add jae in fistp hlt push mov imul xchg cld pop mov fistl js cs fstps sbb fadds dec xchg shrb and xchg stc xor fdivrl (bad) arpl cmc addr16 rorl jle icebp sub aad inc cmpb fs xlat adc mov fdivs js jmp pop xchg into sbb xchg int3 push aas js jmp add and dec test fistl imul push push nop leave sbb in pop xchg lret nop leave add je mov and int js,pt jmp pop cmpsb loope push (bad) (bad) (bad) cmp in push (bad) add fildll fs (bad) adc mov or out inc jp in and inc jp in and inc adc sbb (bad) std outsl mov jle icebp sub fsts dec test adc xchg divb imul mov sbb adc mov aas xchg cli outsl test sbb sbb push mov sbb movl sbb (bad) aaa jo loope push sbb jo push dec (bad) mov ficompl loope push mov (bad) aaa outsl test dec mov (bad) outsl cmpsl fbstp jo loope push mov cld xor dec mov stc xor dec xchg roll aam inc jg repnz cmovle pop push mov sti xor out dec xchg stc xor fidivl imul lahf xlat adc mov outsl test xor repz sahf xlat cmovs in push (bad) add jb sti dec mov sti xor movsl (bad) push (bad) mov aad inc jle out sahf jmp inc mov test dec sarl mov sbb idivl test pop jae push dec xchg testb sbb clc inc mov sbb cli mov push nop imul sar push lock mov sub xlat sub dec cmpb or repnz loop push (bad) movb fcoml test sbb fistl test push inc cmpb xor ficoml dec test mov rorl inc jge out daa pusha cwtl shll loop push mov sub push outsl into daa fs pop and lret sub adc lahf and sbb fstpt cwtl in inc inc stos out pop pushf clc push movsl add in push scas adc sbb xchg int nop lock mov and lret or ret mov imul lods xor jae sub js jmp dec stos adc xlat das xchg repnz mov adc in insb enter inc test pop pop movsb add mov add add int3 add add dec scas adc pushf cltd and and int3 add and into or mov es cltd divb push fstl dec mov cli xor sbb (bad) std les dec cmpl aas jbe out push mov test pop inc jp jmp pop xchg int3 add and jmp push aas ja call add je out rcrb (bad) loop push pop add jb in push (bad) add xor movsl fstl dec cmpl repnz in fsubl pusha cltd jmp jae out push xchg lret add jne jp in and inc jns jmp pop xchg into pop inc jns push inc jns in and inc jge lock aad mov pop push (bad) add jb jecxz push mov bound mov xlat adc mov repnz sahf fcoms dec test ficoml dec test inc jle pop push mov std xor fsubs pop xchg into pop inc js ljmp ja jmp and lret add jbe jmp push inc jns ljmp add fsts add mov daa pusha cltd rorb inc jl out daa pop cwtl rorl inc jl out es cwtl call or mov and inc jp in es sbb inc js jmp push pop add jno jecxz push (bad) (bad) pushl jb jecxz push (bad) loop push (bad) (bad) (bad) cmp loop push (bad) (bad) jo loope cmpsl repz sahf clc inc jl out daa pusha cwtl rcll xchg lret jae in push mov (bad) aaa outsl cmpsl loopne push mov pop push mov stc xor cmpsb ficom dec mov clc xor ficoml lahf jmp aas jns jmp pop xchg rorb push fisubl inc jl out daa pusha cwtl rorl inc jge out daa pusha scas jmp pop xchg iret or mov es xchg rorl inc jl add nop out jno jecxz push (bad) (bad) decl mov fcoms dec cmpl adc fcoms dec cmpl dec test fsts cmpsb icebp sub inc cmpb push js adc mov ficoml dec test adc sbb push lds ret lock add mov das jns in es cwtl rorb inc jle lock aad dec cmpl fistp push mov cld xor push mov incl int pop xchg lret jae in push leave xor sbb cmp clc dec xchg out fwait cmc inc fwait lock imul mov push movsb icebp gs (bad) std gs xor adc xchg stc xor fsubrl xchg inc lahf std ja,pt jmp xor fnsave sub aam inc jg lock rorl jle out sub repnz push inc jg icebp sub aam inc jle push (bad) out pusha lcall mov and int3 add and lret je out push scas call add and int aas ja jo jecxz pop sub in push mov add add nop iret or mov and lret jb jecxz push mov cld xor add cld xor dec mov sti xor fstl xchg rorb inc jge sub dec mov add jbe out push nop leave add jb jecxz push (bad) (bad) outsl test sbb sbb (bad) outsl test sbb ret sti xor pop mov icebp xor pop dec mov insl cmpsb loopne push mov sti xor movsb fstl xor fstl dec xchg fsts dec cmpl lcall push test pop xchg rorb inc jns jmp pop xchg iret or mov and xchg int ds stc xor movsl ficom dec mov stc xor fistl test imul imul stos loop push mov sti xor movsb fstl das push lahf fcoms dec (bad) mov (bad) cmova sbb mov add cmp in pop jmp pop dec xchg fsts dec cmpl adc rorb inc jge out daa pop cwtl rorl inc jnp in and xlat cmovs fcoms pop in push ficoml dec cmpl dec cmpl int aas ja jmp add and pop cwtl rorl inc mov sub mov sub push inc jle out daa pusha cwtl rorb inc jns ljmp mov and xchg into push inc js jmp add jae push xchg lret test push pop nop enter and iret or mov and push jbe,pt call add inc jns ljmp js ljmp (bad) cmp (bad) (bad) fsubs pop xchg int3 add pop pop nop enter stos in add lret add xchg int ja,pt call add adc pop inc xchg in sub push inc aam push nop leave add jb jecxz push mov pushl jo loop push mov std xor add cld xor dec mov clc xor fistl pop add imulb je adc mov push mov (bad) outsl test sbb ret sti xor mov imulb jle lock rorl inc jns jmp add stc inc jge out daa jo cmovns add pop xchg lret je out push nop leave add je in je ret rcrb push mov imull gs aam inc jnp ljmp fwait in sub pinsrw sub rorb inc jl in es stos adc push mov or loope jmp mov xor or mov or loope jo add out jp or add fldenv scas idivb scas idivl mov sbb out lahf adc cmp jecxz jo orps push scas idivb test adc call ret sahf out jne add loop jno add xchg fisubl push fsubs imul push fwait loop jbe add pop push mov or repnz out js push lcall movsb jmp jns pop dec xchg fsubl shrl jo decl loopne outsl mov dec xchg fisubl push lret adc jmp jge adc data16 cmc cmp lret lahf out jbe add sub mov sub xchg fisubl push int pop mov adc call jo incb aad fs repnz sub fwait jecxz jb or negl sub sbb ret cld xor je in push nop add add push (bad) add int3 push push mov sti ds out jo loop iret or mov and xchg into push aas ja call push pop xchg iret pop pop xchg lret add jne out push nop enter stos in mov out jp cld xor sar imul xor fcoml xor add add aad inc jle out daa pop cwtl rorl inc jp ljmp mov adc mov out pop xchg lret je in push (bad) add jb in push (bad) add (bad) pushl jno loop push (bad) (bad) (bad) cmp loop scas cli xor movsl ficomp jae stc xor fldt sub aad inc cmpb push inc cmpb xor push (bad) (bad) (bad) cmp loop push (bad) lds xchg loope push mov std dec movsl in push add mov rorl inc jnp in and xchg int cmp pop xchg int pop xchg lret jne call add stc xor pop ja cmc addr16 cmpl mov daa pop xchg rorb inc jns jmp pop xchg int pop xchg rorb inc jnp in and xchg into push aas js jmp pop xchg into pop pusha stos in push (bad) add (bad) and cmpsl loopne xchg jns cmp lock pop xchg int inc jnp add sub ret std cmp out pop xchg rorb inc jle repnz mov add jne jmp addr16 push arpl (bad) je jmp xor sbb leave add js in daa popa fwait aad dec test cmp in bound lret ficoml aaa jno in pop xchg int pusha popf xlat adc sti xor push xchg lret add sub fcoms jne sti xor popf fsts dec mov std pop mov ret outsl test lret add dec test loop push xchg lret pop inc jl out sub xlat push lock inc (bad) add js in daa popa fwait aam dec (bad) mov fcoml pop cwtl rorl xor sbb movl and rorb ja lds cmp pop mov les ficoml mov std aaa jno in pop xchg int pusha popf fsts dec mov std cmp add out pop xchg rorl inc cmpb jge add mov pop scas jmp pop cwtl sarb cmp pop xchg rorl inc cmpl jmp pop cwtl rorb cmpb push push mov (bad) jno popa test adc out sub fcoml push mov add mov add popa fwait (bad) outsl mov es lcall addr16 daa popa pushf xlat inc mov add xchg rorl xor test int fs fnstenv ljmp jle icebp sub fsts dec xchg fs sub fsts rorl inc cmpb mov sub xlat adc cli pop xchg rorb inc jg hlt add loopne push nop lret jns in sub out lods call inc mov add int inc jl lock xlat adc mov (bad) cmp out pop xchg into or mov sub adc rcrl sbb mov cld xor cwtl jecxz pop xchg int3 sbb dec scas and mov ret outsl test leave add mov and cwtl fbstp cmp insb test fadds iret or repnz mov ret pop push (bad) add js in daa popa fwait aad dec cmpl push pop xchg fdivrl add jns and in pop xchg xlat dec xchg into or mov sub adc mov add je call or mov fistp push (bad) fldcw out sub out push (bad) add mov and add or cmpb adc xchg cmp ret jno in pop xchg lret daa sub and call xor sub pop jl sub mov repnz sahf ficoml dec test fistl xchg cli xor inc cmpsb add xchg hlt push shrb aad xchg test dec test fstl push mov (bad) cmp add out sub (bad) xor pop arpl dec lods push push mov sbb (bad) (bad) aaa jo loope push mov (bad) aaa jb in jno in push (bad) in push mov ja and lcall in daa popa mov roll mov sub adc mov sti xor cmpsl hlt push mov push xchg sti popa push pop sahf jno cmovns mov mov fistp jbe ljmp push outsb rcll push mov nop jecxz pop add jo jecxz push nop leave add xchg into or fsts dec xchg fstpt push inc jns xor jmp sar jno pop mov ficom push mov (bad) cmp in pop xchg int3 push pusha fwait aad dec cmpsl psrlq xchg int inc jge hlt pop mov and or jmp xchg std aaa jo loop push (bad) iret pop enter dec scas adc or cmp clc xor aad pop xchg lret add and xchg rorb inc jle icebp push mov and imul and enter scas call add lock (bad) movb jb out pop xchg lret add (bad) xor in dec scas cmc xor fstl pop mov sbb lret add sub pop dec mov cli xor fstl dec xchg ret jb push lahf cli pop mov clc push mov sbb (bad) jo sti add and int inc jp in daa popa mov push mov inc movsl in daa pusha movsb add and loopne mov (bad) (bad) cmp sar jno jecxz push mov (bad) cmp jecxz outsb rcrl fcoml mov aaa jne (bad) das xchg rorb jg icebp sub movsl loope push (bad) (bad) (bad) cmp pop pop xchg int3 pop test pop fwait aad inc adc movsl add and addr16 dec aaa pushf fcoms dec test ficoml add add add mov inc xor pop ret daa (bad) mulb cmp adc popf xlat adc mov or mov in push add mov fsts dec cmpl test pop xchg leave add mov shlb pop xchg rorl inc jge lock aad dec subl lods out pop xchg lret je inc jg clc jg add xchg lret jne out pop movsb mov mov adc mov fstpl push mov (bad) mov in es cltd rolb push dec cmpl sbb ret cld xor mov xchg iret or mov sub aam dec (bad) mov imul in in mov outsb stos in push (bad) and adc jns dec mov xchg cmpsl sbb mov fcoms dec test daa popa lcall xor cmc dec test xor fcoml xor imul adc xchg fstpl pushf (bad) cmovns es fwait aad addr16 dec xchg cli xor sbb (bad) std outsl test push (bad) (bad) (bad) cmp in push nop leave push xchg loopne push mov add xchg hlt push popf fcoms dec xchg jne jmp or mov es cwtl rorb cltd in pop xchg lret add and or test sbb pop jns sbb nop leave and int3 add and int inc jnp in es scas dec cwtl rorl jg repnz fcoms dec test push mov outsb lods out pop xchg in pop cwtl rorb inc jl lock rorl sub shll rorb inc jge out sub aam inc rcrl cmp jmp cltd xlat adc mov cld xor push (bad) movb jae out pop mov cmp out pop xchg lret add ja ljmp and jbe jmp add add out sub adc mov fsts dec test in pop xchg int3 push aas js ljmp aad dec movsb add loope push xchg lret or mov inc jg repnz lahf fcoms dec test fstl add movb in es cwtl rorl inc jge lock xor fistp push mov cld outsb cmpsl add jae in push mov (bad) cmp loop push mov cld xor rorb popa cltd rorb inc jl in inc mov bound mov fcoml dec mov lock (bad) cmovns mov dec mov sti xor push mov add mov daa popa lcall fbstp imul insb int3 test xor sbb (bad) (bad) cmp out mov cmp in push nop leave add ja jmp add inc jle repnz (bad) sub mov mov xchg fistl xor cmpsl ja,pn ljmp jnp out daa popa lcall push (bad) add je out pop xchg int3 add and inc jle icebp sub adc mov cmp pop xchg rorl inc jl out daa pusha cltd aam dec sbb sti xor cmpsl loopne push (bad) (bad) (bad) cmp in out push fstl push mov cld xor push in push fstl push mov std aaa jo jecxz push mov add jp in es lcall sub adc xor fstpl push mov (bad) aaa jno in pop fsubs pop xchg into or mov daa pusha cltd rorl data16 sub adc mov fistl icebp cmp jecxz gs fadds adc xchg stc xor ficom push mov sti xor jae out pop xchg int3 add and inc and leave add push push xchg lret add ja ljmp jnp in es lods ljmp jl out sub aad inc cmpb add cs mov sti xor cmpsl loopne push mov (bad) cmp inc jp in es cwtl rorb inc jge out sub aam inc adc inc cmpb adc cli xor cmpsl loope pusha cltd rorl jmp or mov daa pusha lcall mov add jg ds xor loope push movsb (bad) jge inc cmpsl add push xchg pop mov push jmp mov jae sub loopne mov mov outsl lret loop movsl push jbe push mov fnsave sahf or in mov xchg inc mov jp loop mov jne xor mov inc fwait mov sbb sbb mov pushf (bad) pop mov mov dec movsl add mov lret fnstsw nop jmp mov xchg cmp add shrb in fnstcw mov (bad) cmpsl or (bad) jae ds pop mov std push mov push mov pop shll icebp ss in push mov (bad) aaa (bad) int aas js jmp add lods out push (bad) add aaa jb in pop xchg int3 add ds sbb out scas (bad) stc dec cmpsb xchg or std push cmp mov addr16 dec lods or push jne ss hlt push mov sahf out inc xchg ljmp mov mov aaa mov xor and adc xchg clc pusha mov xlat popa (bad) and lods or cmp xchg ljmp dec mov mov xor outsl iret cs dec (bad) aaa (bad) out stos adc std sbb jns mov mov inc movsl add add xchg inc (bad) pop outsl into xor jmp and sub shrl (bad) jmp mov pushf stc outsl mov movsl add mov jmp fdivrl fwait std popa enter dec stos or int (bad) hlt cmp mov (bad) pop enter inc mov outsb iret xor popa mov mov cmpsb add mov scas or and sbb pop mov xchg cld inc adc xchg sti pop rclb call dec mov cld ss in (bad) shlb cmc outsb scas in dec stos pop dec sbb test sub ljmp mov daa popa fwait aad dec (bad) fidivrl mov or fnstsw cwtl clc inc xchg dec rcrl push nop lret loopne push nop lret scas jmp push aas js mov daa popa lcall sub cmovs mov push xchg lret pusha lods out pop cwtl shrl nop in pop popf adc dec test loopne push (bad) add jns in daa popa fwait aad dec (bad) mov sbb xchg arpl aam xchg ficomp push mov xor hlt cs dec and movl daa sahf ficoml mov std aaa jno in pop sahf loope mov add fs add jbe ljmp test xlat adc ret std cmp jbe jmp cmpl and aad dec xchg sbb cmpsl loop pop xchg into push out cmp mov daa popa pushf (bad) adc rorb or cmpl sbb pop xchg rorl dec add aaa jb out pop xchg fdivrs cld pop les test xor in pop xchg iret or mov cmpl enter rorb inc (bad) mov loope push xchg shrl jnp repnz mov mov leave add jns lock add jns lock fistl push mov add int inc jge repz push mov jne,pn in daa popa stos mov adc cld aaa jae call lahf fistl push mov add mov sub fistl (bad) add pop xchg rorb inc cmpl mov loope push xchg int3 push inc jnp mov add add add mov sub ficoml push mov add push dec (bad) mov loopne push (bad) aad jbe in sub dec decl ret jae jmp cwtl aam dec test out pop xchg jecxz (bad) je xor movsb call adc out sub fistl push mov add lret jp lock loopne jb call push dec test push push xchg into or or repnz push mov or lcall xor jne jmp pusha lcall xor add mov add xchg int3 push inc jnp lock ficoml out sub ficoml cmp call and lcall xor dec mov add cmp scas jmp or dec xchg rorl dec cmpl sbb lret xchg rorb xor pop xchg jmp sub mov pop lods call adc sar jno inc xchg iret or hlt das push fbstp je ljmp test sti xor xchg iret or mov jne out sub adc mov add sbb lret push inc jnp lock fnsave pop lcall xor mov add js pop lods call push dec test in lods clc xor movb js out sub (bad) je ljmp mov std cmp sbb rorb dec cmp insb lret push sbb outsl fildl jge pop leave and (bad) inc test aaa outsl test sbb test ss in jo sahf jmp jo loope insb int3 sub repz or jge in and aas ja out pop nop enter dec mov (bad) cld xor cli pop scas ljmp mov loop (bad) jmp popa lcall and leave add add cmp dec cmpsb in push nop enter ficoml arpl sub nop enter test pop dec add fcoml cmpl mov es xchg int aas inc call dec test add pop push pop (bad) outsb cmpsb ficom dec xchg std test mov mov ljmp jle mov push fstl dec mov dec (bad) mov sub mov repnz (bad) (bad) (bad) cmp push or call add pop xchg lret and add mov inc mov sub push inc cmpb add jb add and mov and push push fisttpll pop xchg iret or mov sub and int aas js jmp push aas js or mov xor mov xlat adc popa (bad) daa data16 mov push dec cmpl adc mov fsts dec fstl pop stos out pop mov sbb dec mov jb xor push dec xchg dec xchg fstl dec mov cli xor sbb aas mov pop into movsb add lock (bad) inc xchg pop leavew or jg icebp cmp out daa pusha cltd shlb (bad) cmc cmp pop mov sub sahf xlat cmovp adc test or (bad) (bad) cmp in mov imul xor ficoml dec test xor ficoml push mov addr16 dec test les popf (bad) push inc cmpb mov and int3 add and int fwait in es xchg iret or add int jbe,pt out (bad) cmp clc xor cmpsb fidiv xchg idivb jne pop jbe jmp pop xchg int3 add js jmp push (bad) push push (bad) add jne mov outsl iret push push mov pusha pushf (bad) adc mov stc xor loope push (bad) add mov fistp push mov (bad) cmp sub fcoms dec test ficomp push mov (bad) jns,pt aaa jae out pop xchg rorb inc jle repnz rorl fcoml push mov (bad) aaa jno in pop sahf fcoms dec test cli xor loopne push (bad) enter scas jmp das push fstl push (bad) movb je out pop xchg iret or cmp pop xchg rorl loope stos ljmp jg repnz mov shll xchg rorl cs mov std mov aaa jo jecxz push nop leave add sub mov loope push mov add mov and cwtl cld cmp and into pop inc jp in daa pusha lcall push inc jns in and push dec mov jmp pop xchg rorb inc jge lock std cmp out pop xchg int inc jp in es cltd rcll mov repnz lahf fcoms dec test xor ficom push mov std ss in push xchg lret add js add jne call or mov sub aad dec aad pop xchg iret or mov sub aam inc addb add es lcall cs popf xlat adc mov loopne push (bad) (bad) or lret mov pop (bad) mov push (bad) movl and or icebp sub clc xor test sbb nop lret js in rcrl push xchg ss xlat adc sar insl cmpsb loopne push mov (bad) cmp add ja jmp pop xchg rorl inc jle icebp sub mov jmp pop xchg rorb inc jnp pop cmpsb loop push mov add je out pop xchg lret add and popa fwait aad inc cmpl sar out pop xchg int inc jnp out sub aad inc subl pop xchg int3 add and xchg iret or rorl dec (bad) mov add add adc xor cmpsl loopne push xchg es in pop xchg int3 add and iret sbb movb jae out pop xchg int aas jns or icebp sub fcoms dec test loope fildll fs fcoms dec test fistp push mov pop mov ret std ss push nop lret js or icebp sub fistl dec mov std inc lods repnz divl imul (bad) cmp in push xchg add mov ficom push mov std aaa jb in pop stos jmp or addr16 dec xchg cli xor inc jle repnz lahf fcoms dec test inc stos (bad) sub mov adc out xor ficoml mov xor test sbb ret inc test das push test mov cld xor push (bad) add mov dec mov sti xor cmpsb fbstp cltd divb push mov roll fs fcoms dec cmpl ljmp jns out sub rorl dec test dec cmpl mov inc jge in and xchg loop fstpl push mov (bad) cmp in push nop leave add je out jge lock aam mov sub push inc jg (bad) pop mov fistp push mov cmp lret js ljmp jp jmp cmpl jge out daa pop cwtl out stos jmp sub loop push (bad) loopne fistp push (bad) movl and lret add ja ljmp pushf aad cwtl in sub rorl inc jge pop (bad) cmp and dec (bad) add pop xchg lret pop jle push aas js ljmp lcall jb sbb (bad) std outsl stos arpl pop mov loop cmpsb sbb xor jmp or mov dec cmpl inc stos jmp push pop ret iret or add leave sub mov aad dec test cmp and int mov and lret add enter cltd loopne push (bad) (bad) (bad) cmp push xchg add and or add mov dec test out stos cmc das imul loopne push (bad) add cmp jecxz push nop lret ret sbb outsb mov outsb (bad) xor push leave or pop roll or mov and xchg add cwtl add xor ficoml dec cmpl mov sti xor mov out pop cwtl rorl inc jnp mov in push mov add jb jecxz push nop sbb lea outsb data16 dec test (bad) insl cmpsb fistp push mov das xchg jecxz push nop leave add jae pop out push mov fcoml sbb (bad) std xor push mov sti xor cmpsb divl jo loop push (bad) aad cltd fistp push (bad) (bad) adc daa popl sub dec stos or xor rorb inc jle fsubl xchg cmp in es insb lcall aaa jno jecxz push (bad) and cltd rorb add jge divb imul jbe jmp pop sbb stos in push xchg lret ja jmp pop cltd cmc xor pop xchg ljmp std cmp dec xchg into pop inc jns ljmp js jmp add push xchg rorb inc subl into or ficoml fistp mov call add jbe out pop xchg lret jae dec mov jne jmp pop and inc jle lock lcall cmp scas call cmpb pop push stos or inc cmpb adc xor fstl push add mov ficom push mov std outsl test lret ja pop mov fs fsts dec or add sbb (bad) (bad) cmp push mov std cmp in push nop leave add pop xchg int inc sahf pop push call add in pop xchg lret add int inc jp out sub xlat adc mov fstl dec mov cld xor push pop cwtl rorb inc or adc mov add mov loopne push (bad) movl and into pop inc jnp out sub dec popf testb hlt jns,pn js ds cld xor push call dec xchg fstl dec mov sti xor cmpsb fistp push mov cld xor adc aas repnz sub lahf fsts pop (bad) das movsl adc cmp add add adc xchg rorb inc sti jae cmp lods out jno xor mov sub adc mov loop pop xchg int3 add sub sub movsb fstl push out arpl sub jmp pop xchg rorb dec xlat dec (bad) movl and int3 push aas js out sub aad dec cmpl outsl test sbb ret mov es cltd rorl mov adc xchg stc xor cmpsl loopne push mov add je out pop xchg lret add mov dec xchg ja inc mov std outsl test out push in pop xchg lret jbe jmp inc cmp mov and xchg dec mov or ss std pusha ret jns jmp gs dec test test or fimull or inc scas clc xor push dec (bad) ja push inc jns ljmp repz stc ds out sub aad inc cmpb push inc cmpb push inc out mov push fcoml xor dec (bad) pop push nop leave add jbe call or sub dec test fcoml inc push add inc mov pop dec dec pop call jg arpl imul lock mov (bad) std sub hlt mov (bad) adc shrb add pop xchg clc cmp mov aad out jns xor pusha sarb mov jp pop push mov xchg mov mov jnp jne add inc fistpl pop data16 pop fsubs (bad) mov (bad) (bad) push push sahf dec mov or jl dec lret gs fmulp add cld jno call cmp mov xchg call xchg push je add mov pop loopne dec (bad) xor inc pushf xlat popf nop jb mov sbb test ret inc jecxz popa mov (bad) shr mov jne (bad) in lds shlb jmp dec pop call in cmp cmp cmp cmp cmp test mov test cmp cmp cmp cmp pushl cmp cmp test test cmp pop cmp cmp cmp cmp cmp mov test test cmp cmp cmp pushl cmp cmp cmp test test pop cmp cmp cmp cmp cmp jmp cmp test test cmp cmp cmp cmp cmp cmp test test cmp cmp cmp cmp call test cmp test test test mov cmp cmp test cmp cmp mov cmp test cmp cmp test inc cmp cmp cmp test test mov cmp cmp cmp cmp test mov cmp cmp test cmp cmp ret pop test cmp cmp cmp test clc adc test cmp cmp cmp cmp call pop jo mov xchg mov clc push iret push mov jb xchg (bad) jecxz or int3 roll pop in notl movsl lea pushf in jno mov (bad) (bad) jmp (bad) mov cmp cmp test cmp jmp cmp test cmp cmp cmp pop test test cmp cmp cmp clc adc cmp test cmp cmp test mov cmp cmp test cmp cmp mov cmp cmp cmp cmp test inc test test test test test inc test test test test test inc cmp cmp test test dec test test test cmp cmp test test test test dec test cmp cmp test test test test test dec cmp cmp test test test test test cmp cmp dec test test test test test cmp cmp test test mov test test test cmp cmp test test test test xor test cmp test test cmp cmp test test test push cmp test cmp test cmp cmp test cmp test test test jne mov test cmp cmp cmp test add test test test cmp test mov cmp cmp cmp cmp test add cmp cmp test test test call cmp test cmp test jmp test test cmp cmp test pop cmp test test test cmp push cmp cmp test test test push test cmp test cmp cmp push test cmp test cmp test mov cmp cmp test test cmp call cmp cmp cmp cmp test pop test test cmp cmp cmp cmp jl cmp cmp test test test mov cmp cmp cmp cmp cmp sub test test test cmp cmp mov cmp cmp cmp test test sub test cmp cmp cmp cmp call cmp test test test cmp mov cmp cmp cmp cmp test inc test test cmp cmp cmp push cmp cmp test test test mov cmp cmp cmp test cmp inc test cmp cmp test test inc cmp cmp cmp cmp test push test test test cmp test push cmp cmp test cmp cmp sub test test cmp cmp cmp dec cmp test test test test dec cmp test cmp cmp test push cmp cmp test test cmp call cmp cmp cmp test test jmp test test cmp test cmp pop cmp test cmp cmp test inc test cmp cmp cmp cmp inc test test test test cmp inc test cmp cmp test cmp pushl cmp test test cmp test pop cmp cmp cmp test call test test test cmp cmp mov cmp test test test cmp jne test cmp cmp cmp mov test test test test cmp cmp cmp test test sub test test cmp cmp pushl cmp test test test test xor cmp cmp cmp test popl test test test cmp cmp test jne cmp test test test jmp test cmp cmp cmp ljmp stos jge hlt lahf sahf pop pusha in dec fdivrs rorb mov xor sbb push and dec call neg fyl2x test test fucomi sarb adc (bad) sub into adc out mov repnz sahf in fistp and out imul mov mov add xor inc clc (bad) stc (bad) iret lret sbb gs jl pop arpl inc add fidivl jmp jg cmp je aad mov push (bad) mov or cmpsb inc test addb loopne sbb (bad) add pop push dec xchg push sete clc push iret push mov jb xchg (bad) jecxz or int3 roll pop in notl movsl lea pushf in jno mov adc lods jne stos jge hlt lahf sahf pop pusha in dec fdivrs rorb mov xor sbb push and dec call neg test test test test cmp mov cmp cmp test test pushl cmp cmp test cmp cmp pop cmp test cmp test test mov test test test test cmp mov cmp cmp cmp test test push test test cmp cmp cmp mov cmp test test test test mov cmp cmp cmp cmp test mov test test test cmp cmp inc cmp cmp test test test inc test cmp cmp cmp cmp cmp jne test test test test cmp mov cmp cmp cmp test test inc test test cmp cmp cmp inc cmp test test test test inc cmp cmp test cmp cmp cmp jne test test test test test pop test cmp cmp cmp test mov cmp test cmp test cmp mov cmp cmp cmp cmp cmp mov cmp test test cmp test add cmp cmp cmp cmp test mov test cmp test cmp cmp mov cmp cmp test test cmp add test cmp cmp cmp cmp mov test test cmp test cmp add cmp cmp cmp test test lods cmp test cmp cmp cmp test je cmp test test cmp test add cmp cmp cmp cmp cmp mov cmp cmp test test test cmp jne test cmp test cmp test mov test cmp cmp cmp test cmp jne test test test test test mov test cmp test cmp test push cmp cmp test cmp test pop cmp test cmp cmp test push test cmp cmp test test push cmp cmp test test test push test test test test cmp push test cmp test cmp cmp push test cmp test cmp test push cmp cmp test test cmp push test test cmp cmp push cmp test test test test call cmp cmp cmp test cmp add test cmp test test cmp ret fyl2x test test fucomi sarb adc (bad) sub into adc out mov repnz sahf in fistp and out imul mov mov add xor inc clc (bad) stc (bad) iret lret sbb gs jl pop arpl inc add fidivl jmp jg cmp je aad mov push (bad) mov or cmpsb inc test addb loopne sbb (bad) add pop push dec xchg push sete clc push iret push mov jb xchg (bad) jecxz or int3 roll pop in notl movsl lea pushf in jno mov repnz jmp mov xchg push sub and (bad) add pop push push hlt in mov add cmp mov into imul push adc or jg cmp jae jne insl jns adc add cmp fs xor cmp je push push outsl pop outsl or inc or push push outsb sbb inc pop inc cmp outsb dec push push outsl pop outsl or cmp inc insb dec cmp cmp or inc lds clc or xor jns pop lods jne stos jge hlt lahf sahf pop pusha in dec fdivrs rorb mov xor sbb push and dec call neg fyl2x test test fucomi sarb adc (bad) sub into adc out mov repnz sahf in fistp and out imul mov mov add xor inc clc (bad) stc (bad) iret lret sbb gs jl pop arpl inc add fidivl jmp jg cmp je aad mov push (bad) mov or cmpsb inc test addb loopne sbb (bad) add pop push dec xchg push sete clc push iret push mov jb xchg (bad) jecxz or int3 roll pop in notl movsl lea pushf in jno mov adc lods jne stos jge hlt lahf sahf pop pusha in dec fdivrs rorb mov xor sbb push and dec call neg fyl2x test test fucomi sarb adc (bad) sub into adc out mov repnz sahf in fistp and out imul mov mov add xor inc clc (bad) stc (bad) iret lret sbb gs jl pop arpl inc add fidivl jmp jg cmp je aad mov push (bad) mov or cmpsb inc test addb loopne sbb (bad) add pop push dec xchg push sete clc push iret push mov jb xchg (bad) jecxz or int3 roll pop in notl movsl lea pushf in jno mov adc lods jne stos jge hlt lahf sahf pop pusha in dec fdivrs rorb mov xor sbb push and dec call neg fyl2x test test fucomi sarb adc (bad) sub into adc out mov repnz sahf in fistp and out imul mov mov add xor inc clc (bad) stc (bad) iret lret sbb gs jl pop arpl inc add fidivl jmp jg cmp je aad mov push (bad) mov or cmpsb inc test addb loopne sbb (bad) add pop push dec xchg push sete clc push iret push mov jb xchg (bad) jecxz or int3 roll pop in notl movsl lea pushf in jno mov adc lods jne stos jge hlt lahf sahf pop pusha in dec fdivrs rorb mov xor sbb push and dec call neg fyl2x test test fucomi sarb adc (bad) sub into adc out mov repnz sahf in fistp and out imul mov mov add xor inc clc (bad) stc (bad) iret lret sbb gs jl pop arpl inc add fidivl jmp jg cmp je aad mov push (bad) mov or cmpsb inc test addb loopne sbb (bad) add pop push dec xchg push sete clc push iret push mov jb xchg (bad) jecxz or int3 roll pop in notl movsl lea pushf in jno mov adc lods jne stos jge hlt lahf sahf pop pusha in dec fdivrs rorb mov xor sbb push and dec call neg fyl2x test test fucomi sarb adc (bad) sub into adc out mov repnz sahf in fistp and out imul mov mov add xor inc clc (bad) stc (bad) iret lret sbb gs jl pop arpl inc add fidivl jmp jg cmp je aad mov push sbb movsb xor test sbb adc mov push and jne fwait dec hlt add or sub sbbb call pop or pop jl mov lcall aad cmp out adc or jb adc div jle in shrb test push fwait test test cmp test test cmp cmp push cmp test test test test cmp cmp cmp test cmp xor test cmp test test cmp test cmp test test cmp pop test test cmp cmp cmp test test test cmp ret cmp adc lret jnp int repz dec mov ljmp (bad) repnz jno inc push inc (bad) adc sbbl pop ret xchg data16 fisttpll aaa jge ja inc mov mov push or pop push cmp push jecxz (bad) lock xor fwait (bad) lret xchg outsb daa arpl test mov sti das xchg xlat cltd push fisttpl into enter cwtl iret mov cld insl fcoms sbb in push sbb movsb fiadd test sbb adc mov push and jne fwait dec hlt add or sub sbbb call pop or pop jl mov lcall aad cmp out adc or jb adc div jle in shrb jne adc lret jnp int repz dec mov ljmp (bad) repnz jno inc push inc (bad) call ret ret sub jmp add add jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb jae jb mov add pop or jmp cmp add jmp or add add dec ds inc cmp fsubr je (bad) add add add add add scas add add add sub aas pop push cmp lea pop mov or (bad) cli add or (bad) mov imul add add mov adc add add xchg xchg add add add xchg xchg add add or rolb pop roll add pop push aaa add addr16 ss add cmpl cmp imul pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb movsb pushf sbb mov xchg lahf cmp add stos (bad) or push ret xor add push push xchg jbe mov mov mov (bad) ljmp (bad) (bad) add add outsb or add xchg add add add cld ljmp inc cmp lea call add add cld scas or add add jne or (bad) jbe addl add add ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret inc jnp ret addr16 mov cmp or (bad) popa jae stc repnz push movb mov lea sub cli orl roll xor mov addl mov pop rcll mov mov add cmp (bad) pop mov lcall ljmp jle iret pop rcr mov mov add jb add mov (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp mov xchg js (bad) add mov cmp or mov pop shl mov hlt cmp cmp dec ds cmp add jmp add add add dec ds cmp add jmp add (bad) add add dec ds cmp test xchg add add dec ds cmp nop add lcall jmp cmp lods add sahf add add dec ds cmp mov xchg adc (bad) pop mov or jmp add add popa pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne pop pusha loopne cmp (bad) add add sti cmp jmp add and add mov mov cld push lea jnp jnp cmp (bad) jbe mov or jmp inc cmp ficoml cs add jmp add add in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in pop fsub fstpl in or cmpl cmp or inc or ljmp add cld repz add inc jp jp xor add add (bad) pop push in and add inc bound lds cmp or inc or ljmp addl add add std pop pop cmp (bad) imul (bad) add add (bad) aad addl push jge and (bad) add mov add cmp (bad) add add ja inc push addl add ljmp push shr rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll jmp rcll mov dec add cmp inc mov or jp add add add (bad) (bad) addl (bad) daa (bad) add sbb imul (bad) add call add add push lds mov add or call and fbld mov les pop imul pop lds add add pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound pop bound imul push call push jle (bad) push mov mov inc mov or shl or (bad) add push or mov stos (bad) add push cmp (bad) inc push aam js imul mov xchg push mov mov fnsave es les lds scas pop ret dec stc addl mov add cmp (bad) push aam dec in xor push rcll push add add push outsb std push cmp inc addr16 xor adc jg mov or add mov aaa mov xchg push add mov addl sti inc or inc adc rolb inc (bad) xor sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub dec ds cmp fsubr xor jge (bad) inc adc jmp (bad) inc push jmp xor ret or add or std cmc (bad) add add call add ja cld dec jge,pn cmp (bad) add cmp (bad) sub add mov imul add cld lds mov or (bad) add and (bad) inc and fstps add xchg adc (bad) pop mov mov jecxz (bad) add iret or insb test cmp je std jge (bad) mov add jmp add add ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret sti ret dec xor jo cmp fsubr hlt clc jge push mov cmp imul add xchg cli (bad) ja mov or xchg movsb sar cld dec push or mov ljmp add push call sarb or mov outsl ss cmp (bad) call stc jbe add push call add add ds or xor xchg add add add add push pop lahf cmp (bad) mov push xor cld (bad) mov cmc pop mov mov or aad mov cmpsb lds add pop imul (bad) cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add mov cmp add call jb std mull lds mov jge lds add lea mov cmpsb lds dec call jbe std cmc pop mov mov or aad mov inc nop add mov gs shrl mov add cmp cmp jecxz sbb jo mov sbbl add pop imul jp xor add pop pop dec in ret add mov cmp aas mov xor add dec xor leave sub add jmp cli jge lds mov jge ds push add lea mov lcall adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc call sarb or or sti or mov jge (bad) sti cmp (bad) mov add mov (bad) add add sub jmp and insb hlt jge lds mov jge ds push add lea shll ret xor add push jge lds or pop mov or push addl adc add mov mov add (bad) and divl lds imul mov jge mov (bad) add std push ljmp fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl fstpl (bad) imul mov add push or mov add mov jge lds imul push or dec stos mov mov stc mov or mov add mov jge lds imul addl add add add sarb (bad) add aad lds jge and jbe cmp fimull cmp call mov add xor push lcall push jge mov (bad) add std aad rcrl add mov pop rcr movsb add pop push leave std jge mov jmp add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec ds and add jmp repz mov add cmp or push jge mov out mov imul add cld (bad) and add push mov out push (bad) sti cmp mov call add add add std pop xchg add add push notb dec xchg out (bad) add and (bad) inc pop mov or std push mov imul add cld lds cld ljmp add push call add std cmc pop mov mov or pop scas cmp (bad) les add or dec mov dec lret ljmp push shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp shr rclb ljmp adc add imul jo cld ljmp add add dec ds sbb sbb jge mov push add add cli mov add mov jge (bad) mov cmp (bad) add std add or (bad) mov imul add cld lds cmpl (bad) mov jge (bad) dec ds and add jmp out jge mov cli add add dec ds and add jmp out jge mov incb cmp or (bad) adc add test test add add mov jmp add add hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 hlt je int3 push cld cmp or aas xchg addl push jge inc add add add add mov movl (bad) add add or testl xchg add add or (bad) incl add add or lret addl jmp add add std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds std lds pop inc (bad) add or (bad) ds add add add or jg add aas xchg cmp (bad) add jbe ja,pt shl push pusha dec outsl bound aas addl cmp (bad) add inc addl jbe ds add add add or jmp add jmp addl pop mulb push add scas add add std xor cld lea adc ljmp call lret ljmp lcall cmp (bad) cld lods jle add jmp (bad) add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp ret lcall cmp (bad) cld lods jle add jmp std vpminsw cmp (bad) cld lea xor cld lods jle add jmp std (bad) test cli xchg or daa jl lds sahf std (bad) clc mov add imul add ds or xor xchg add rorb add ret xchg cmpl (bad) mov jge lds ljmp lcall cmp (bad) cld lods jle add mov lret add idiv push or scas add add xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods xchg adc xchg lods mov stc jbe add push call add add mov pop mov or pop scas cmp (bad) ljmp or mov outsl cmp fdivr jge jg add cmp (bad) addr16 sbb xor dec or subl cmp cmp (bad) cmp in es mov or cmp ja dec (bad) add xor dec cmp in push or lds add mov add cmp (bad) add (bad) add addl add add add cld scas sbb btc (bad) push cmp add (bad) mov (bad) add xor cmp or arpl shr pop add or or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or lea or jle dec push add cmp (bad) add add ljmp pop ret cmp (bad) jmp add fldt cmc subl cs es in jmp repnz cmp (bad) (bad) mov mov hlt mov lcall ljmp addl add add shrb fdivrp jge cmp imul push add (bad) sar outsl dec or mov mov push jge add ljmp cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov cmp (bad) mov xchg imul pop xor add push lds aam outsl push aad mov mov clc inc (bad) add mov or dec xchg jnp (bad) mov or clc jns sahf or repz add cmp (bad) add call add ljmp push lret mov cli adc add cmc dec aas mov add push aam outsl dec aam outsl push imul (bad) jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns js jns cli xchg cmp (bad) (bad) std add mov addl sti add addb imul pop mov sub ds sub addl dec add ret inc pop xor add les or andb lea cmp add cmp (bad) add call add ljmp push lret cli xchg cmp sbbl mov jmp sbb add (bad) std add add add xchg add pop xor mov add jmp sbb add jmp add btr add cmp (bad) add dec mov or clc cmp mov addl lds inc les inc (bad) je and add add push or mov add lret mov mov lds cld add (bad) add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub std mov add add pop cmp add ds jge ret add push into cld (bad) cli xchg cmp xlat push (bad) notb cmp mov imul add cld lds addb push or mov add add call imul packssdw mov jmp jge outsl cmp mov or inc add cmp rorb mov mov xchg mov or (bad) inc mov add out stc cmpl add add sub (bad) pop mov or rorl add repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz lret repz add sahf adc (bad) add ljmp sub imul add add mov aas cmp (bad) ljmp cltd mov out or (bad) add inc mov cmp cmp sub (bad) cmp or or adc add cmp (bad) add mov daa mov inc add mov dec add cmp cmp xchg mov or jmp add add ret imul add sahf or (bad) add add sahf push add or xor add ja or sub sub addl scas sub mov add add add add (bad) mov cmp add add pop xor loop fild (bad) add out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) out outsb out (bad) subl add add add mov add stc cmp mov xor mov add cmp (bad) mov arpl add add ljmp (bad) arpl add push sbb loop cmp (bad) add mov pop clc push (bad) or mov daa mov mov mov or aas add mov cmc pop mov jmp add add push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul push imul add or mov ret or arpl jno stc add add addl stc mov daa mov cmp mov jnp mov addl add ret mov or mov xchg stc add dec add imul (bad) add jge scas scas (bad) add pop or push inc add push (bad) jmp loop cld push jo pusha pop jno dec pop outsl in jno add fscale jge cmp (bad) add loope push fscale jge and (bad) add incb mov mov or mov pop mov xchg fimull xchg rcrb icebp dec xor add push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push (bad) push outsb push push in std jge dec data16 outsl cmp inc mov shll inc lock jo insb pop addr16 jmp (bad) jge push lock pop outsb mov cmp mov ja jcxz insb imul dec arpl dec pop outsl in jno add (bad) std jge pop jbe bound (bad) jno insl lock mov lds ja ja jo jo insb dec add in std jge dec push lock addr16 dec jbe bound out push jo add jmp cld lds ja imul jns imull add cmp (bad) sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub aam std int3 ja insb out bound jmp dec dec in pop popa imulb insb (bad) jmp xlat jge je (bad) dec outsl jmp pop jbe push push jo bound push out std jge dec inc lock jbe push push jo bound cli add or lds dec addr16 inc dec addr16 ja ljmp jnp out insb pop arpl data16 imul dec arpl dec pop outsl in jno add cmp (bad) jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ljmp push addr16 imul addr16 xor (bad) ja testb mulb jbe imul addr16 (bad) fcmovb std int3 ja testb mulb jbe imul addr16 xor (bad) dec inc in outsb push arpl addr16 in insw add in jge pop jbe jno popa out dec inc (bad) push push out push jnp jmp jecxz cld jge testb testb out dec insl loope dec jno jmp lds jns out dec addr16 jno popa out dec push (bad) jmp fdivrl jle loopne pop push out push in pusha pop jno dec push outsb out dec push inc cli push add cmp (bad) xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas xchg pop xchg scas ljmp pop ja inc pop jbe jne push lock pop addr16 jo ljmp dec jbe bound lock dec loopew jg (bad) jmp fidivr jbe jecxz jbe loopne pop jo inc cmp aam vpaddq jbe bound out outsl push popa (bad) jnp jmp add add in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jo std jge pop imul push jo pop ja inc dec addr16 ja ljmp pop arpl pushw insb dec addr16 imul addr16 stos fadd std lds push lock pop inc out dec addr16 jo ljmp dec push lock jo ja inc out bound (bad) jmp mov out dec add in jge push insb imulb ja inc pop pusha mull out dec add stc std jge dec jcxz pop inc jmp pop push (bad) jmp sarb jo ja inc jmp pop add sti std jge push insl icebp data16 in addr16 addr16 jmp in cld imul data16 lock jbe jno inc cli push cmp jnp cmp (bad) push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg push aaa jg jmp loope cld outsb add add rolb pop add test jge push addr16 outsl or (bad) jmp out jge imul inc dec jbe push ja dec push (bad) jmp ret jge push imul cmp adc vpsrlw outsb out inc inc loopew dec addr16 sarb cld lds ja insl in fs imulb arpl insw add sti std jge pop jo push arpl pushw in pusha pop jno add arpl lds ja imul imul ret lds push out dec push jecxz push push (bad) ljmp in pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs (bad) std jge aas add cld jne mov jno push out dec outsl out je cli ja or dec and jo push ljmp inc lock jbe dec pop push mov push jbe push push addr16 outsl sbb (bad) leave inc and inc outsl pop shrl cmc bound fimul popa lock dec insl in push jmp pop insl cmc jo inc divl addr16 ja addr16 insl in pop push popa out cmp inc in std mov imul outsl push sub pop push lock addr16 dec out push and cld sbb mov push pusha and push push addr16 outsl adc imull and cld add cld lds (bad) add ljmp cmp push test jge cmp (bad) jmp ret jge cmp (bad) add ds cld lds push fdivr jge pop imul push arpl data16 cli data16 lock std fidiv pusha in push out cmp jp vaddsubpd imul dec jnp dec pop jnp dec pop outsl out shr cmp pop jno push sar jge pop pop push rclb jnp add icebp std jge cmp (bad) jmp jmp cld bound (bad) add clc imul cmp xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg dec (bad) xchg inc insl pop lret cmpsl test stos and push xchg inc stos in fiaddl sub and add mov lods push pop push outsl ljmp mov rolb imul (bad) xor dec sbb mov call mov sbb lds cmp (bad) (bad) pop push movsb jl cmp sti loop mov insl test nop inc leave ret sbb or jne mov cld jbe out fs call sub jb dec xor (bad) cmp les decb hlt fistpll repnz push (bad) add loopne fcoml pop pop dec mov cmp (bad) dec fwait sub ret test das outsl push scas (bad) cmc int inc pop adc movsl adc xor sub push inc leave xor arpl or mov test icebp and dec fldt rorb lret pop adc dec lock pop mov cs and out test jecxz arpl mov or push inc mov jno cwtl sub lods fs (bad) hlt arpl sahf stos adc fdivrs jmp cmp mov and mov cmpsb cli in data16 fnstcw test loopne cmp sub (bad) mov pop sub mov push out dec popa xchg insl out cld scas clc fild iret adc enter push mov dec out es insl pop rcrb sar sbb mov test dec fidivl (bad) push in (bad) data16 jns imul lds push push ret fwait jmp lcall hlt adc and jnp fwait stos push lock xor push cmc mov sub and inc aas fistpll out and lret xorl sahf xchg ljmp inc mov bound mov sbb xchg inc cmp inc and lods xor cs jae or fisttpl scas jecxz xchg flds cmc jnp push (bad) sub sbb test je or pop incb jo add pop jmp aad dec dec inc push aam jns outsb gs cs or into in adc xor (bad) out jle and insb cmp (bad) push pop xchg mov lds rorb push cmp (bad) pop stos rcrb aas lret jb fnstsw insl roll push pop push cld and mov push inc icebp mov popa mov inc mov jae push pop push fcoms push add es std loopne xor sbb in xor adc adc test mov inc inc mov mov jne fidivl mov ja xchg scas js fsubr mov cmpsl stos out xor fsubrs les shrl stos jb cs dec or mov lret fcompl mov js test in xchg out mov repz xchg test gs mov cltd adc adc add (bad) sbb xchg cli pusha lret stc lahf mov pop inc fcmovnbe cmpl and (bad) mov or push iret sbb data16 adc icebp arpl es and insl cmp or lock jecxz lcall sbb adcb push pop adc adc out push inc xor movsb sub jl and pop push leave pop aad dec ret pop add sbb pop in rcll cmp and rcrl add fwait cwtl aas push stos cmp arpl mov jg int3 mov mov es adc imul test fidivr in jne into scas mov sub mov aam mov add mov fnstenv mov sub ljmp lods mov xor (bad) jae cmp lret (bad) fildll pusha adc jb lock rcrb repz push fcoms sub inc fstpl in pop or test idiv or cmp orl xchg loopne add mov jb ja inc mov (bad) inc je adc pop (bad) lods cli pop ret pop push stos addr16 xchg mov dec jge stc xor dec movb jg sbb popf push add lret push insl icebp mov add lret dec fcmovnb sub stos rol dec jo scas movsb cld mov adc push fadds leave xor sbb sub movsl push sbb adc movsb mov test aad push call sahf mov xor xor and out sub call and sub imul popl lods dec xor mov int3 out cmp xchg and ret xor adc inc pop push inc aaa cmp (bad) cwtl rcll shrl in add sub repz lods cmpsb xor nop sub push cmp jp (bad) xor push add dec jb ljmp inc mov into fwait cmc cmp jmp mov and cmp js lock (bad) lea jle aam sti loope mov lret mov (bad) pop ds pop sbb mov pusha adc xchg add inc enter inc and rorb leave sbb sbb ficom es dec out iret faddl mov fsubrs movsl and adc xlat sub xchg xchg adc fsts sbb pop insl push jmp xchg mov mov inc jne enter fadd es insb mov test mov lods in mov adc sub xchg (bad) jno adc fisubrl or xlat mov jmp mov (bad) sahf inc pop ljmp fbstp add lcall call movsl rcrl out dec pop add jp cmp lea lahf shll push (bad) xor add dec jb ljmp inc js mov outsb jecxz fildll cmp jns pop mov icebp jmp pop popf jle lock mov sbbl pop push jg mull pop xchg in fs (bad) ja cwtl aaa ss out test and jns lcall clc sti hlt mov sub fidiv mov cltd push (bad) mov mov cmp add mov leave inc popa mov mov mov dec pop inc fistl and aas jb or lods rcrb cmpsb rolw mov mov neg pop aam sbb ret xlat push (bad) dec lock in mov je cld sbbl pop pop sub imul incb idivl arpl add movsb es in push mov inc pusha sub jns ljmp shrl (bad) hlt inc sbb xchg lods adc pop je hlt lahf xchg ret xor mov sbb test cmpsb pop in addr16 fist push fstps pop jmp and sub add pxor popa xchg loopne in scas clc leave inc mov rolb imul aad cmc (bad) dec stc je jmp push xor (bad) mov jp jo ret mov jl push ret cld mov aaa or dec xor (bad) sbb mov imul addl mov dec cmp cmp aas or insb jnp rorl xchg mov lret mov pop mov das or jne and pop push lods cli push les stos addr16 push fidivr inc out js dec (bad) imul push outsb stc lret push or xor xchg xchg (bad) mov loope (bad) std or insb movsb mov jmp push push iret inc pop inc leave xor (bad) fisubrl mov cmpsb push dec sbb icebp popa mov test aad lahf call (bad) jno mov rcrb xor and cmp xchg pop jmp movsl xchg mov sbb out mov mov fwait in nop inc xchg scas push daa cli pop cmp sub int ret xor into orl pop stos add ds test movsl pop ljmp xlat fisub popa call addr16 mov pop sub mov push in sti pusha xchg and sub lods cmp xchg and xor iret je add sbb cmp dec cmp mov movsb data16 sub adc cmp dec push mov jnp xchg add mov mov dec xor pop inc xor lods and imul lea jg dec lock cmp fdivrl lret les outsl cli nop out mov popf add dec and xchg xorl push shrb mov or push inc xchg jo xchg or push pushf push insb cmp xor push dec out lea (bad) outsb nop fisubl xchg les sti dec outsl adc mov xchg fistl int dec (bad) (bad) jb push xchg or iret fsubrs pop sub movsb push dec sbb mov push sbbl popf sub ja mov and repz or fs dec cmpsb movsl sub addr16 add call pop sub mov hlt push cltd das mov cmp xor out add push adc inc jno mov divb shrb cmp push cmp pandn in jbe sbb adc xor into scas mov movsl dec outsl mov xchg inc add repnz (bad) ret or data16 push mov scas mov fstpt dec xor xorl adc das bound (bad) lret icebp push rcrl repz push (bad) sub iret inc les test pop jae or mov loopne (bad) pushf sub aam inc dec xchg insl fs jno sbb pop inc dec adc int out push inc xor movsb sub imul push xchg dec ret sbb cmp cwtl stos xchg outsb and mov fdivrl insb rolb push push test xlat inc xchg sub jns bound stos popf pop pop popl pop xchg pop mov dec lcall adc fcmovnbe mov jg lahf add inc push cwtl xchg lods pop test xorl sbb test and cmpsb push sbb push sbbb and es push add adc mov mov mov xchg jecxz mov sbb mov (bad) mov jne in arpl ss mov dec ja (bad) fsubrl or lods mov out insl cli xchg in addl push xor ret sbb (bad) divl in arpl pop call sub out clc dec fdivrs dec cs les cmp push ret fstpl (bad) pop jo jl hlt or or push add and xlat (bad) add ja push fistl pop sub lds lahf aas inc or sub fwait jg push ret test shrb mov int3 outsb inc pop rcrl adc psraw movsl push inc xor mov bound pop push push (bad) pop (bad) lock push add test and fadd pop adc int3 out mov pop mov sub push xorl push shrb mov in lcall xchg push aad lret cwtl sub (bad) jmp or push repz cld cmovae fcmovbe stos pop ljmp ja loop pop jg mov and cli or gs push jmp aas frstor cmpsl dec rcr cmp sbb push call and mov pop out dec inc xchg insb push in pusha neg out iret lods (bad) movl add push sbb mov mulb mov das movsb sub pop sbb (bad) sahf push loope mov fldcw mov loopne pusha push dec les bound ret lcall push (bad) jne int3 jns aaa insb and jp xor or inc xor cld hlt rolb fistpll and mov mov sbbb push cwtl (bad) mov pop adc add xor lret mov mov sbb xchg inc pop or xchg lods cmp sub pop fidivrl sbb or scas mov repnz fs push out sub testb pop std jae outsl clc add inc call pop orl jns outsb rorl incb add adc xor popa out jge out push jmp cmp and aad les push sbb or stos mov es fwait xchg jno jle,pt mov push insl pop push inc lock pusha push fadds cmp mov daa pushw xlat imul aas pop push mov and in in xor insb adc adc iret cmpsb jp mov outsl inc inc push mov xchg dec add (bad) fldt jg lea je imul pop shlb adc daa movsl mov loopne mov fsubrs shrb fist mov mov xchg inc add dec repz jne mov in test js ja xchg scas mov in int xor cli repz push xor mov jle scas adc lahf jecxz cwtl xchg mov pushf aam movsb roll (bad) sbb xchg stc pusha incb jo mov pop aas or (bad) dec dec inc ficoml and sbbl into mov lock xlat push sub inc fcompl movl mov idiv or cmp addb ret mov mov into outsl or dec inc in adc cmpsb adc mov out xchg and and lods pop aam dec ret dec icebp sbb pop in jl stos shrb ror cltd (bad) mov cmp add lcall bound (bad) xor jns xchg sbb hlt jg int3 xchg mov and cwtl (bad) sahf out jno (bad) (bad) jecxz je sbb int mov mov outsb test nop add lock xchg jbe mov cld ja pop xchg call and sbb imul popl lods dec das cmp es out cmp test and roll jb inc pop adc cmp loopne sarb jne push cs lret pop mov repnz cmp scas loope jns dec inc mov inc sbb xorl dec ret inc (bad) clc mov jge inc xor inc sbb mov add leave pop pushf push insb (bad) (bad) in jecxz or (bad) fwait (bad) fcmovb lret dec arpl rol mov and mov mov xlat xchg push fistl int xchg aas enter test sbb sbb cs fildl mov xlat test rol rep and adc aam sub inc orb fsts or pop insb dec ljmp mov xchg lds sub jne mov and cwtl add xor sub out aad sub rcrb mov daa repnz lods movsl cmp or sub adc (bad) data16 or jno push movnti fwait jmp lcall hlt adc and aaa mov stos push lock lock (bad) mov mov loopne mov and lret (bad) fs add dec jb ljmp inc ja mov hlt insl loop fisubr cmp js pop mov lods lea mov popf jle out and ja mov pop mov jno pusha rcrb in arpl inc inc test ret mov pop jl sbb xchg inc or add push scas cmp das loope dec in (bad) faddl mov popa test iret ret and adc (bad) inc fsts lret test cli or pop insb push jmp mov mov dec adcl sub mov mull dec cltd mov push out es sub pop rcl aad out push sbb sub popl sti sbbb push sub push mov std inc repnz bound mov xor mov in rcll cmpsb daa into inc pop sub push mov outsb int adc lea ja addr16 sub popa xchg push rolb out mov lret ss out xsave and test out mov repz roll fnstsw mov pop jle cwtl adc adc add (bad) sbb inc xchg movsl addr16 stc xor sub in (bad) mov jns outsl or mov jl push rcr sti lahf insl mov decb xchg add and aad inc xor imul (bad) add push or mov test icebp and pop fldt cltd rolb xchg mov lods mov pop mov cs daa out test jecxz arpl test push lds push decb lret jno cwtl call lods fs fscale hlt arpl popf stos adc xchg jle cmpsl ja mov jbe or mov xorl ficom fdivrs test cmpsl fdivrs jmp push mov and jo push out dec push test aam sahf out xor mov (bad) xor out or in push call movsb nop mov sbb mov imul popl lods dec es pop cmp sub int3 out rol xor adc orl pop test pop push divl repz mov sub divb push mov lret scas jbe mov add cmpsl jns xchg add loop jns push cld mov (bad) inc je adc pop (bad) stos stc pop ret pop push stos push xchg mov out js dec movb jg fsubrs mov add xchg add pop ds scas jecxz aaa xor std inc das xchg inc pop arpl push aas xor lods and addb pop push inc hlt mov jns jle dec out push cmp fldcw fstpt lret les outsb stc (bad) out mov pushf add dec and nop (bad) jo loop movsl mov jmp jne xchg xchg or push inc xchg outsl adc adc sbb repnz pop (bad) pushf test (bad) jge jmp (bad) jb mov and out cmp push pop xchg xlat andl daa cmp mov pop sub mov dec sbbl ljmp add lcall lock dec movsl movsb sub push data16 add out or pop sub mov repz cwtl mov mov paddsw test and addl jno mov cmc xor iret outsl in fildll cmp push icebp mov pop jmp cld sahf jg lock aas mov inc jb adc push subb test fisttpl divl jbe mov inc mov stos or cmp mov std xor (bad) cltd (bad) fld es insl mov data16 add jns push fst sub iret inc les test pop jb or mov loopne (bad) fwait sub pop orb addb sbb jmp or jo sbb inc dec adc int3 loop cmpsb push inc xor movsb sub jl and aam adc dec ret pop mov cmp rclb cmp and jge imul dec push push aas push cmp xorl pop int inc mov jno mov es adc adc cwtl ds test fidivr and ljmp mov sub mov nop inc mov add mov fdivs jbe gs mov jne (bad) lods mov and and lods push add pmulhw mov scas (bad) test jecxz mov rcrl mov aad divb bound xor (bad) mov dec jbe ret fsubrl pop push ret cld or xor aaa fnstsw and xchg sbb mov imul inc add ds scas cmp and dec cltd sub sarb insl dec lods mov pop push push aas mov sub dec inc (bad) xor popa nop push stos js push push add pushf mov mov pop jmp cltd gs fcmovnbe push jle lahf (bad) mov (bad) jae (bad) (bad) pop inc dec adc stos push dec ss sub xchg xor pop int3 pop fdiv push or push dec push pop lcall sbb icebp fidivl inc adc add popa outsl rorl xchg sahf fwait inc gs cmp cwtd xchg clc jge rcrb inc call je push scas sub sbb push pushf inc insb ljmp shr (bad) sarl out sub js push mov and xor in (bad) jb out mov xlat mov dec ror and lds mov cld imul cmp fs hlt mov xor lret inc cmp leave loop add pop test jne repz or ret pop add fistpl jb pop inc loopne cs inc mov movsl das icebp (bad) cmp cs je (bad) mov xchg jns or andb mov xor dec push lcall inc outsl mov outsb sub dec mov cli mov mov jg inc dec loopne into loope popa sbb add lret xor mov jmp xor sub mov xor jae sarb pop repnz push lahf mov xchg ficompl jbe pop xor iret out push popf imul push clc dec and fdivl cmpsl andl cmp fld test mov sub add int3 push stos sbb imul push fucom lods sub and and ds add jp mov leave adc sbb sub dec stc jbe and add dec or sub jno ljmp imul movsb inc cmp fidiv xchg je out repnz push xor gs push pop dec dec jne in push (bad) push mov rcrl in jle push jno cmp push jae adc dec cmp add nop inc pusha xor in (bad) repz mov xchg push pop sbb mov xchg lock xchg or lret mov iret dec addr16 ja ret mov lock or dec loope mov rdmsr sub inc js add mov (bad) stc out pop fimul xor xor aad lret mov std fs int3 inc out push pop out dec pusha inc and xchg dec push repnz test rcrb cmp in jmp pop (bad) cmc lock jo fcmovnu sbb mov mov pop push vmovddup scas aas dec mov pop sub sahf mov iret les loop pop jb outsb push pop and mov mov jp fnsave inc rorl outsl call push pop arpl nop lahf inc in add out add cmpl (bad) aaa xor jno jecxz cmpsb scas stos push jne sti mov mov add inc cmp ret sub pop pop sub fs add cmp (bad) aad shl sbb scas lods xorb cmpsl or dec mov xchg mov pushf xchg jnp loopne cmp adc sti jl xchg mov setle adc mov clc rorb sbb loop (bad) ss mov enter popf sbb mov movsl pop fstenv cmp in test adc inc into or std movsb inc maxps fcomi jg je xchg xchg xor and mov push out push or cmpsb push notb sub cli sub sbb add adc aas in or xor enter push mov mov dec dec and repnz out cs dec iret repz sub mov fstps dec notb sbb ss sbb (bad) pop sub pushf lahf (bad) inc int ret loopne pushf jo mov lahf addr16 and cmp cmpsl lcall and test imul sub sbb movsl outsb jmp loope jecxz (bad) daa in add ret jp pop out adc jns (bad) mov es movsb lods test or mov leave fstpl add push gs push mov mov push fistpll push xor cli cmpsl lahf jno inc mov push xor sub ds (bad) prefetch sub pusha sbb cmp cmp lods aas sub xor out xor pusha outsl (bad) mov or mov and inc in out movsb jnp mov jbe inc and sbb xchg and pop push mov push enter imul std nop or (bad) (bad) dec aaa jl dec lret pushw lea push lret fisttp pop jb into bnd mov int3 jae fildll leave mov sub sbb lcall or popf sbb adc sbb push dec and cmp push mov fyl2x mov (bad) clc test dec mov mov inc mov std pushf fimull adc fldl add jno pop jmp pop popa pop out cmpsb add and inc sbb xchg cs mov jp sbb pop js cmp cmp orl das test (bad) sbb xor pop add scas ret clc adc mov mov repz xor mov adc imul out adc push dec lahf pop inc jl rolb in daa insl pop cmp je adc dec cmc in mov in loop sub mov mov xchg pop pop sahf (bad) mov cwtl icebp lods xchg or int cli shrb jae cmp push je int mov mov dec cmc mov (bad) in and sub mov je xchg pop fadds cltd repnz xchg lds lods imul and mov mov inc push and lahf lcall push repz inc jp int3 lret (bad) data16 lods aad dec mov mov std mov ficomp rorb ficomp lcall pop jb lock cwtl (bad) popa pop cmp push xchg cs jnp ret mov ret js notb hlt push in sub popf das sbb and (bad) push and rclb movsl sub stos inc notl pushf xor pop xor loope sti mov mov xor dec jmp ljmp fs mov mov (bad) xchg jae in fs and and je add add add add xor add add add add add and add add add sldt sbb add add or enter mov add adc add add or push push add sbb add add sbb dec pop add out add adc add add sbb push sub add add add add add add add or add add orb add add add imul add pop add insl inc add je add jbe add jnp add jle add data16 push jnp leave sbbl jecxz pop add mov fmuls insb add mov lret add xchg jbe in arpl jmp fwait jae call movsl jl pop mov into add int3 add add add add add aam imul add fadds je roll jl roll jno flds jns flds dec mov loop push mov loopne addr16 jge aam jge fldl pop ret push shr pop ret in add (bad) gs add jecxz (bad) leave out insb lret arpl ljmp lret push jmp jb jecxz jnp loope jb call add add add jmp add repnz push hlt add stc xchg cld add repz push add testl outsl fdivr add hlt add add repz hlt add sti add cld add sti add std push jl cld add mov mov scas movsb add mov add mov addb movsb lea (bad) add lods xchg add mov add movsl xchg repnz xchg in xchg add mov add mov test fdivs mov out movsb add mov mov add (bad) mov add shrl cli shrl add lret mov out sarl push cmpl add mov ret add lret ret aad mov aam test roll (bad) leave (bad) add ret fwait (bad) roll xchg lret aam cwtl int3 aam xchg lret fldl xchg faddl xchg (bad) fiaddl test leave lret aam add lret roll mov into flds push int3 rolb mov xlat flds mov aam mov aad add fnop add fildl or loop test call add in add fsubr add fucom add aad add (bad) testb fdiv add clc add (bad) add aad add fptan add fucomi add out mov in add out add icebp incb xchg idiv add ljmp cmpsl (bad) repz xchg add in icebp add idiv add into movl (bad) aad add ror add iret aam ret add aam add fcmovnbe add (bad) add push flds iret aad add fcmovu add fcomp add fcmovbe add into sarl movl jmp fst add loop add jecxz add in add loop add out add icebp faddl rcr add fsubp add fsubp add ljmp fnclex jecxz aad out aam jmp add jmp add icebp out add icebp out add in into ret ljmp shr repz out testb icebp repnz hlt lock ljmp ljmp add icebp repz div add sar add (bad) incl add movb add add add add add add push push add add mov mov add pop pop and add into add add add mov inc aaa das es sub xchg xchg (bad) jmp add add add stos aas inc cmpsb mov dec inc xor and push (bad) jl mov add push add add stos aas cmp mov push dec dec dec dec inc cmp es and mov add push add lock cmp movsl mov jg push push dec dec dec dec dec dec inc cmp push pop and xchg add (bad) stos cmp inc scas mov pop pop pop pop push push push dec dec dec inc inc cmp aaa xor and sahf add lds mov mov pop pop pop pop pop pop pop pop pop push push dec inc cmp and lds mov mov pop mov pop pop pop pop (bad) push push inc cmp addl add add add add lds mov mov mov pop mov mov push push inc cmp mov add add add push add add add cmpsb ds mov mov mov mov push push push push push xor add cmpsb dec ss mov mov mov test test cmpsl cmpsl push inc xor add mov ss inc mov rol into mov mov mov movsb movsb mov mov in add add push add add add mov inc xor inc scas mov sarb rol rol sarl test xchg in add add xchg add add mov dec ss movsl leave leave leave rol rol ror lret lret lret rol test pushf add (bad) mov push ss ror leave leave leave ret lret rol ret ret lret mov add mov push dec inc ss mov leave leave leave leave lret ret ret popf cltd popf popf popf cltd popf lahf ret ret rcrl (bad) mov push dec dec ss scas (bad) leave lret lret ret cltd into xchg cltd popf lcall ret ret ret jle xlat (bad) mov push dec dec dec inc inc lods (bad) enter out ror jno xchg lcall xchg xchg lahf out cmc lahf cwtl addb movb add mov mov dec dec inc inc movsl mov push lret jno jno lret rcr out ror jno xchg rcr out out xchg jle (bad) mov mov push dec push push movsl mov pop pop pop pop pop pusha jae fsubrp (bad) jae jae int fistpll out orb add add mov mov pop push push scas lods mov pop pop pop pop pop pop outsb int3 rcr fmul je jae jae rcr imul in popl add add add add mov mov mov bnd add add lret into into int3 je je je into fdiv stc jmp (bad) nop xlat add add add lds mov loope arpl push push push push add int3 jae outsb je jae je fdiv in (bad) xchg adcb add les leave enter outsl xchg add add add or pusha push lret jno pop pop insb insb insb je into loope out adcb add mov ror in stc fisubl pop add add add push bound lret pusha pop pop pop pop pop pop pop fs jmp add add add mov leave rol lret clc fisubl or add add add push insb into into outsb bound or out nop iret add add add lds lret clc jp adc add add add pop adc into jne adc add add push je fmul aad add add add (bad) leave leave ror idiv clc fisubl or add add add or data16 js adc push push pop pop push insl fsub testl add add (bad) (bad) leave leave leave leave lret clc (bad) movb add add add fldcw adc add pop adc fndisi(8087 clc repnz leave leave leave lret clc fldt adc add add add add punpcklwd fldcw or add pop jne loope hlt icebp (bad) lret out stc clc loop sbb or or adc or add adc fcmovu js or or sbb loope add (bad) mov loop push adc arpl or adc fnstsw adc or fnop idiv into add (bad) icebp icebp repnz idiv clc (bad) sbb sbb jne popa adc pop outsl fcmovu (bad) sbb adc jo clc clc clc hlt idiv cli loop imul imul outsl fcmovu fnstsw xchg sbb clc cli idiv add push add sti sti cld cli loop imul jne (bad) jp (bad) fstp jo sbb push sti push add cld cld cld jg jnp imul fcmovnu (bad) fstp fstpt push clc clc cli cld cld cld cld cli loop ja jbe jnp fstp loopne jnp imul loop cli cld cld add add add cld cld cld cli jecxz loopne jnp jnp jnp jnp jbe jns loop cli cld add add cld cld cld cld cld cli jecxz loopne loopne jnp jnp jnp loop (bad) cld cld cld add add xchg add add cld cld cld cld cli cli cli jecxz jecxz jecxz jecxz jecxz cli cld cld add push add cld cld (bad) cld (bad) cld cld jg cld cli cli cli cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld add into cld cld cld cld cld cld cld cld cld cld cld cld cld push add cld cld cld add add add add add add add add add push add cld cld cld (bad) (bad) (bad) (bad) (bad) incl add (bad) incl (bad) incl add add (bad) (bad) incl add add (bad) (bad) incl add jg (bad) (bad) incl add add (bad) (bad) incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add into add rolb add incl add add add incl add add add aas add rolb push add add rolb add aas add rolb add aas add rolb add aas add rolb add aas add rolb add sldt rolb add add add lldt rolb add sldt rolb add sldt rolb add sldt rolb add aas add rolb add aas add rolb add aas add rolb add aas add lock add aas add lock add add inc add add add inc add add add push add add add push add add add (bad) cld add add add (bad) cld add add add (bad) incl add incl add incl add incl add push add incl add push add incl add (bad) decl (bad) dec add (bad) decl (bad) incl add add add add add add add or add add addb add add xor dec push add pop add pop add pop add add pop daa add bound add imul fidivl add je int inc add jns add jnp add jp add (bad) jns xlat push pop add orl (bad) mov lea (bad) xchg je ficoml arpl jmp movsl je (bad) mov add js add test insb jle add sbbl adc mov add mov add xchg mov push orb inc adcl push nop pushf add lea push mov jbe mov outsb sbbl jb mov add test jne mov add mov xlat add test add fldl sub add scas fiaddl sub mov add push add mov add mov ljmp mov faddl jbe movl inc mov in (bad) pop mov xacquire fildl js fildl jl push add in add out push lret jecxz push int3 out add add cmc add sti add in jno loope jne out jge in je jmp add ljmp sar add cli add cli add add incl ja cld add add nop nop add xchg cltd add pushf pushf add sahf mov add mov add mov mov add mov mov mov stos cltd add mov add cmpsb mov cld mov xchg add mov scas add mov mov sarl add les add mov mov lret mov (bad) xchg add (bad) mov (bad) (bad) mov dec fisubr add int3 mov not mov add leave int xchg ret movb iret aad mov flds mov lea xchg (bad) fiaddl cwtl aad add rol add aam add rcr add (bad) add loopne add jecxz add int add shr add aam add aad add xlat cld add fdivrp add fneni(8087 add repnz out out add repz jmp add out add in incl mov incb pushf (bad) repz cli incb cwtl (bad) incb cmpsb out add out add jmp incl dec repnz movsb (bad) incl stos cld incl mov lock sti std add into rolb mov (bad) xlat lret aam add fisttpll add iret ret xlat int out flds cmc fst add in ret add loopne add in add repz (bad) cli fildl into in jmp add out add jmp add lock add in inc add cmc cmc add repz std incb lret sti cld add div add idiv add repz add cld incb (bad) cld add in add aam add cmc ljmp ds add sti cld add std std add cmc hlt add cmc repnz sti cmc add std std add (bad) std add (bad) incl add add add add imul add add mov sub push add add pop lock cmp es add add int3 add gs dec cmp imul add add add inc add add addr16 cmp add add push push push and add dec arpl mov mov mov mov pop fs test rol sarb add (bad) (bad) (bad) (bad) les mov push push lods pusha mov add add add stos mov inc std mov mov lods fwait pushf pushf pushf pushf popf popf xchg lea add add add inc mov inc lock mov aam aam aam ljmp add add add ds dec lods icebp enter aam aam test test jmp sub add add add add popa popa push std rol leave in in shll mov add add add aam mov bound (bad) in clc out mov mov xor add add add gs aas stos mov test icebp xlat lea mov outsb les add test push cli cli xchg ss nop fcomp nop (bad) (bad) popl add add dec mov xchg pop or je xchg (bad) xchg nop nop nop nop nop repz movsb add mov (bad) hlt std sbb or lea mov jb (bad) xchg xchg xchg fdivr cli and add add enter or or or (bad) jle jno or xor add add mov enter cld hlt adc or inc or adc (bad) jle or or hlt cld outsl add add add enter cmc adc or or or sbb (bad) sbb or aam cld jbe add add pop not ds sbb or or or pop jge fimul or sbb cmc ja add add add clc in in loope xchg adc adc pop sbb les or test loope add add add mov dec pop stos (bad) cld sbb ficom push (bad) fcoml or cmc (bad) (bad) dec add add hlt jmp sbb cld sti (bad) std adcb add lea add (bad) jmp mov sbb repz sbb xchg (bad) call add add (bad) push fist jg loope jmp inc add add hlt (bad) (bad) (bad) cld cmc jecxz loop (bad) (bad) (bad) loopne add loopne cld (bad) call (bad) (bad) (bad) (bad) hlt fiaddl add add add add cmc loope cmc sti hlt loope add add add add add (bad) (bad) (bad) jmp (bad) (bad) inc pop (bad) inc add inc add decl add rolb inc add jg add jg add aas rolb aas rolb pop rolb pop rolb xadd add rolb pop rolb pop rolb add add add add pop rolb pop int3 add pop rolb pop loopne add loopne add incl add incl add jmp add lock (bad) cld add (bad) incl sub add sbb add xor add add or add add mov add add fs add xor into imul add imul aam cmp (bad) jo add jl add jno add jae add ja add js add jp add jl add adcl xchg pop add xchg ficoml ja fistpl add pushf test popa test add lea ja xchg add mov pop pushf mov cbtw test add add add mov add scas add mov imul add mov inc mov (bad) lea lret lods roll inc mov add fldl push mov fldl jl flds push shl push shr pop ret push enter into in add icebp add repnz out add jmp add jmp add repz repnz cli add repz repz hlt add testl insb aad add incl insb aad add add sti add incb js incl jle incb js incb jg testl jle incb lcall add mov cltd add mov mov xchg lods mov lahf scas mov add dec lods add mov mov mov test add lods cltd add mov add cmpsb test jmp mov cmc stos orl enter out cmpsl add mov test mov mov add (bad) mov ror add enter les add ret mov fcmovnb mov rol mov add ret (bad) int add int3 lods add (bad) mov jmp lret out int3 mov add (bad) mov sti fcom add mov add (bad) fadds adc add rol mov rol add fxch add loopne add lret test mov jecxz mov loopne mov in mov out add fnop add fnop add (bad) add fsub add fdivp add in add jecxz add loope add in add out repz in cld add hlt add incl lods in add ljmp mov out lock loop add out add out std add cli add aam mov cld add ret iret lret aad rolb ror add fcmovnbe add (bad) fadds (bad) fcmovu add (bad) add xlat aad fcomp rolb ljmp add fcmovnb add fiadd add in add loop add jecxz add in add in add jmp add icebp flds ret dec out ret add in in add out jmp (bad) lock add call repz jmp testb jmp add in (bad) (bad) aad hlt add hlt cmc add hlt repnz clc testl loop out out in add in out in jmp add out add ljmp repz jmp add repz (bad) clc jecxz hlt lock add repnz add icebp repnz cmc repnz cmc icebp add stc repz (bad) incl add aam add add add add call sub add add add out mov xor daa add add inc sahf scas push push push push push dec inc cmp and xchg add add add mov lods lods lods lods lods lods lods lods push inc cmp add add mov mov lods stos stos test stos push xor add add mov mov mov cmpsb cltd cwtl cwtl lea add add add mov scas cmpsl mov mov mov and add inc add ret mov (bad) les jmp add add movsl dec dec cmp jb xchg xchg jb (bad) pop sbb mov ds lret ljmp sbb add add fnop popa push pop fs ror js js sti pop push add add mov mov (bad) rorl int3 ja jns (bad) (bad) int add add (bad) mov ret cld outsl or add adc jnp pop push pop jnp dec add add ret ret cld insl or add add add push add mov jl pop push add or push push or enter add aad push adc rep or shr iret add add jecxz fwait mov sbb sbbl repz stc inc hlt jge sub repz imul xlat add std (bad) cli (bad) xchg (bad) cmc add add add aam add add std std (bad) (bad) clc fdivrl idiv cli stc add add std std (bad) std cli cli add add add add (bad) incl sar add add add add add dec sldt add add add add add add add add add add add (bad) rolb add add add add add add add sarb int3 incl sub add adc add and add add or add add inc add add add add addr16 add jo add jno add jb add ja add jl add outsb add pop add adcl xchg mov rorb add pushf jle jmp movsb jle imul add fiaddl jnp fidivr pop (bad) imul ljmp into jmp add out jl in jno out add in jnp out add test into repz hlt add icebp add repz cli add std add add stc add cld add lods add lahf addl int3 lods popf add lods mov call mov add mov mov out mov mov add ret mov add int3 mov add ret ljmp add into mov add iret mov clc fdivrs xchg leave rolb xchg int3 fiadd inc enter into fiaddl mov roll cmpsl xlat flds test fcmovbe add (bad) add into in (bad) fucomi aam fucomip add (bad) idivb mov icebp add fsubp add repz out add in incb xchg in add in test (bad) lock cltd repz add out add jmp add jmp add call cmc add repnz cld cld add xlat lret add fxch add (bad) add aad add (bad) add fcomp add aad add faddp add fmulp add fcmovne add fst add (bad) add jecxz add loope add loopne add (bad) add jmp in add jmp lock hlt lock call in std cmc out div in add bnd cld cmc in add repz add hlt repnz div aam clc cmc add stc cmc add cli clc ds add mov add iret pop add lock add mov add popf push add scas jno inc xchg add (bad) mov jmp roll (bad) (bad) inc add add push add add add nop or add or add push add jmp adc (bad) ds add pop push add jp add xchg xchg add mov add aam add (bad) incl add add das add add pop add and lea sub mov ss add lock call pop add xor add push xchg pushl add xchg mov pushl fild (bad) (bad) incl add add das add add add dec add bound mov js iret add add adc add push movl call in call lock (bad) incl add add sub das ds add imul nop add add add add add adc add xor add push incl divb add xchg incl stc mov (bad) sti sar test (bad) incl add add sbb das add add push add add iret add adc add push incl ret add xchg incl fdivl incl (bad) (bad) incl add add or das add add sbb nop add add add int3 add adc add incl jno incl mov add mov add sar add (bad) incl inc push pop adc inc dec (bad) add push sub and dec add add add sbb aam pop pop sub daa sbb add add add sbb arpl pop push push and add and pusha gs push inc add add push and jno dec dec dec push push dec add add test sub jae dec add add insb ja add cmp jne add xchg dec add ss xor add insl jo inc pop add or das add addb add or or mov add inc xor jns adc add add add mov jnp inc inc orl add xchg nop xchg add add add inc incl add pop add orb add pop add addb add add add add aam add add add add pop add cld sldt (bad) aas add sub add sbb add xor add add sbb add add and add les add test dec fsubrs gs lods (bad) int3 lea int3 add add fistp notb jmp stos lret pusha test pushf mov add add add lods fsubr push mov aam pushl jae ljmp cld ds pop enter loopne mov push cmpsb shrl mov les add test jmp out jl (bad) jnp (bad) jnp (bad) jnp (bad) jnp (bad) jp pushl std outsl (bad) dec (bad) icebp push ret mov push cmpsb rorb add xchg aam push shr shl ljmp incl incl incl incl (bad) jl std outsb (bad) pop mov inc add icebp inc mov cwtl lock decl incb hlt (bad) loopne sbb jg out jle cmc jbe in mov add mov hlt inc mov stos cmc decb decl repnz loop fwait jecxz test ljmp mov fidivr fdivrs fistpll into lret fcmovnu add add add stos fdivp outsl int3 clc push (bad) repz call cld call icebp stos icebp icebp mov divl icebp mov lea stos in out xchg fcmovu jle lret lds add int3 add add sti pop leave cld pop shr jmp stos div mov cmc mov loopne (bad) int3 lods aad scas xlat int3 scas (bad) lret mov fstpt imulb mov add add std insl aam push (bad) icebp jb out in iret icebp hlt shr out enter lret lret in (bad) mov mov out ljmp xchg lods mov les add test add add add std jns pushl std jae icebp scas (bad) mov cltd lahf lahf xchg test mov loop shr in iret ror mov rol (bad) out fsubr out test add add add add xchg jmp xchg (bad) scas in icebp repz int3 (bad) insl inc shrb inc scas mov mov enter mov leave mov clc clc scas enter inc add call cld aam call cwtl js addr16 xor outsb inc aam mov (bad) lods scas cmpsb scas cmpsl fwait ds lahf ret fadd mov loopne (bad) lods mov (bad) aad test lcall sti out jmp in out xchg push int xor addr16 lahf mov call (bad) jo mov pop mov into fcomp fisttp movb add add add add lcall repnz cli in out mov outsb cmp imul xor jno fdivs loopne (bad) int cmp push into int3 inc in aam in out mov hlt lods (bad) ljmp jmp sahf jns inc inc shrl insb cmp insl cmp jbe call xlat aad push shrb aad push cmc loopne out call add aam cltd xlat ds jecxz mov repnz in div test fidivrl scas cwtl call dec int cmp in jmp je jecxz (bad) cld repz test fild add add call (bad) out dec cld mov lock (bad) loopne mov int out test in jmp mov mov aad clc cmc repz call add add cld div std cli clc (bad) jmp inc fwait cmc mov in sarb in repz cmc mov stc mov (bad) stc testb add div std sti cli call in (bad) jmp std loopne clc xlat scas idivl test iret test cli div xacquire add add add div std stc clc (bad) (bad) sti (bad) (bad) idiv cld in (bad) clc call sti cmc std sti clc clc cmc repnz lea add add div cld div (bad) stc idiv stc idiv div cld (bad) int3 stc hlt repnz inc add cld div sti cmc repnz aam add ds incl sar add add add add add add add add add add add add add add add add add add add add add add add add add add dec inc jg push incl sub add adc add and add add sbb add add inc add add test test test test test lea test add add add sbb mov or jge adc stos pcmpeqw jo pop insl mov imul add add xchg int3 lcall test aam push cmc gs bound pusha stos lret rcrb loopne std std add aam stos and mov mov shr mov in call mov mulb fcomps (bad) mov out cwtd test shlb sub (bad) hlt lahf test mov std mov ret xlat pushf (bad) mov (bad) xchg (bad) jecxz lret lret add test ret pushl cwtl lret mov cld cmpsb ror mov mov enter test ror mov std xchg aad lea test lds pushl cltd int3 mov fisub mov int mov aam leave mov (bad) mov shrl subss xchg (bad) jp ljmp kxnorw lock lret mov (bad) mov into sar div (bad) enter jmp mov (bad) leave (bad) (bad) std pop popa xchg add xor and jb iret imul jnp addr16 mov lods lret xchg pop jb pop adcl xchg add add cwtl lret xchg idiv mov push icebp in out lods mov pop (bad) int pop test mov lret mov dec adc pushf jns cld stc test add cltd int3 (bad) (bad) lcall out in repnz inc loopne xchg repnz loopne mov fbld cld loop aad movl add add (bad) (bad) stc icebp in stc hlt icebp jmp lret stc mov int3 lock mov (bad) (bad) std ror int add add cltd int3 cmp clc repz cli out push sar in (bad) fidivr (bad) fstp aad add add add cmc call cmc ds call add add add add dec add add add add add add add add add add add add add add pop add cld pop add (bad) incl add incl add add jb jbe outsb xor xor addr16 add rolb add add add sub dec add js add add pop sbb (bad) (bad) (bad) incl add add cmp add add and dec add cmp and dec add add add add add add enter (bad) (bad) (bad) incl add add cmp (bad) (bad) (bad) incl add add add inc add add add dec add add add inc add (bad) (bad) incl add add cmp add add and dec add cmp and dec add add add add int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl xor mov mov mov mov mov mov mov mov mov mov mov mov mov lea push call fldl call fstp lea mov push movl mov call mov mov lea call mov lea call lea push call lea push lea push call lea push call lea push lea push push call add push push push call lea push lea push mov mov call push lea push lea push call push call mov push push call mov lea call lea lea movl mov call lea push lea push call lea push call mov lea call lea call mov push call mov lea call fwait push jmp lea push lea push push call add ret mov lea call lea call lea call lea call mov lea call lea call lea call lea call lea call ret mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov mov call push push push mov movl movl movl movl push push lea push call movl movl movl lea push push lea push call lea push call mov lea call lea push lea push push call add movl movl push lea push mov push lea push call push push lea push call push push lea push call push call call mov push lea push call lea push lea push lea push push call add movl push mov push push call mov lea call push push call sub jo push mov push call mov lea call lea call movl mov movl movl mov movl movl mov movl movl mov movl movl mov shl mov movl movl mov shl mov movl movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push call mov call cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push push flds call mov flds call mov mov cltd idiv push flds call mov flds call mov mov cltd idiv push push push mov push mov push mov push call call lea push lea push lea push lea push push call add movl lea mov movl mov movl movl mov movl movl mov movl movl mov movw movl mov movl movl mov movw movl movl movl movl movl movl jmp mov add jo mov mov cmp jg movl jmp movl cmpl jne push push call movl jmp movl mov mov push lea push call movl push push lea push call push call add movl cmpl jne push push call movl jmp movl mov mov mov movl movl movl movl movl movl mov call mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl movl movl lea push lea push call movswl test je jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov mov movl lea lea call movl push call movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl push call movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push call push lea push call push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl movl movl lea push call mov lea call lea call jmp movl movl movl movl lea push lea push lea push call mov lea call movl mov and jns dec or inc xor mov movl lea lea call movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov push push call neg sbb inc neg mov lea call movswl test je jmp movl movl movl lea push lea push call movswl test je jmp movl mov push call mov lea call movl mov push call mov lea call movl movl movl cmpl je movl mov imul jo mov movl push push call fstpl movl lea push call lea push lea push call lea push call mov lea push lea push push call add movl xor test je movl push call mov movl movl movl lea push lea push call push lea push lea push call push call mov movl movw movl movl movl or test je movl movl movl movl lea push lea push lea push call mov lea call movl mov cltd mov idiv mov movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl lea lea call movl push mov push fldl call push call mov call mov mov movl lea lea call movl call fwait push jmp lea push lea push lea push push call add lea push lea push lea push lea push push call add lea push lea push push call add ret lea call lea call lea call lea call lea call lea call lea call lea call lea call lea mov lea push push call lea call lea call lea call lea call lea call lea call ret mov mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf in or (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or add add xor add or dec data16 dec add sbbb add or jl or nop data16 mov data16 add data16 pop add adc or call or push or push or xor add or push or push add cmpb add or mov or ret add or call or xor add push push or ss or push push or pop add sbbb add add cmpb add fisubr add push add or add add sbbb add imul add adcb add or outsb imul add adcb or push imul add imul add imul orb add or push push add push add add add push inc push dec xor inc dec dec add add pop inc dec arpl add add pop popa fs data16 popa outsb add add pop pop jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs popa jb add add jbe popa push je push popa jb outsl jbe add add jbe popa inc jb gs popa jb imul pop pop jbe popa push popa jb imul popa fs imul xor add pop pop jbe popa inc jb gs bound imul pop popa fs data16 gs xor add pop pop jbe popa push gs jns je insl inc jb outsl jb add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb push popa jb add pop popa fs imul xor add pop pop jbe popa inc jb inc gs jb arpl add pop pop jbe popa dec outsb inc jb outsl jb add add fs imul imul pop jbe popa dec bound gs fs data16 add fs imul xor imul jbe popa inc push inc imul inc dec jae outsb add add pop pop jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa push je inc insl jo add pop pop jbe popa inc jb inc outsl outsb jae jb arpl add add jbe popa push popa jb jae inc jno add pop pop jbe popa dec bound popa jb add inc insb insb inc jne arpl outsb inc popa insb insb add add fs data16 je outsb add add inc dec push pop push dec dec dec pop push gs gs jae add add pop inc dec jae jb add add inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl add pop pop jbe popa inc js gs dec popa outsb fs gs add add jbe popa push je push outsl push outsb imul add fs data16 gs add add pop popa fs imul ss add add jbe popa inc push inc js gs imul pop pop jbe popa dec xor jb add add dec insb outsl add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec outsb push je add add pop pop jbe popa dec gs add add fs imul xor add add fs imul xor imul jbe popa inc jb gs je dec imul pop popa fs imul xor add add pop popa fs imul add pop pop jbe popa push popa jb jae dec add add jbe popa dec xor popa jb add add jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa push popa jb fs add jbe popa push je inc outsl insl jo add add jbe popa push je push outsl inc outsb jae add add pop pop jbe popa inc jo xor add pop pop jbe popa push popa jb gs bound fs data16 add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add add pop popa insb insb insl jne add add dec je outsb add add pop inc dec gs add add pop pop jbe popa inc jb gs je add add pop pop jbe popa inc jb gs bound add 