loope sahf (bad) aas popf mov ffree xlat mov pop loope out mov es pop pop xchg pop cwtl xchg mov fwait out ret (bad) xchg xchg decl xchg cs fdivs repnz pop mov inc paddusw ds xchg cmp xchg adc daa stos mov je pop mov shrd fcoms ret cld xchg mov stos ds mov fsts daa and push imul or insb jo bound cmp mov ja or add addr16 out inc dec push inc int3 mov jge push mov repz mov xlat cmpsb gs push outsl jp add (bad) lock stc ret pusha les push or lcall ficoml mov scas fcompl outsb xchg pop (bad) push jns push ja cs or mov add outsb je outsl insb push gs imul or fldl and mov push movl pushl ret pushl lea jae btr pusha mov bt not lea jb bsr mov rcl bts adc mov jmp lea jne push call cmp sub in movsl dec fstl xchg (bad) ss push jb dec xchg outsb or inc mov xor clc cmp xchg adc push mov lods and add insb pop out ret ja jmp call xor in stos test sti adc cmp in mov sahf popf insb inc sub inc mov or (bad) clc inc mov adc jns mov inc rolb out fistl addr16 jns add add loop mov push dec sbb or inc add push jbe adc test add stc mov not sar sbb not sub sbb adc mov pushf clc sub mov jmp jne gs xor fs insb add clc add repnz pushf lea jne pushf movsbw call cmp add lea cmp pusha clc add jmp ret and xor out dec adcl cmc mov add es inc pop pop shrb or pop push cmp mov lcall and fxch out sub mov mov mov cmp mov mov mov or push mov leave flds loopne mov or jae mov jmp push out mov test dec aad pop mov leave fisubr xchg jae mov loopne sti cltd mov aaa lret fwait dec fist fistpll cmp inc cld dec mov stos out adc cmpsb xor in sbb inc jo pop faddl jmp call pushf movw lea jne shld test aad rol xor btr not mov sub inc rcl add cmc bt and mov bt test pushf pusha call clc pushl pusha stc stc cmp pusha jmp mov inc push rorl repnz mov push pop stos or insb mov sub arpl jmp pop pop mov ret lcall or xchg inc popa test mov repz dec inc sete adc dec mov popa and mov and fwait cmp leave loopne inc mov add or outsb and push add aam out outsb lock push sbb mov rol or inc lret or ds movsb jb pop fist repz in mov pushf xchg fidivl jns int inc stos scas jge and push leave pop arpl cli les inc mov jne inc or test pop sub xchg cmp add int push roll jns pop out lret push push mov sarb xchg or mov mov adc insb imul xor pop (bad) adc ss sub es notb dec rcrb cmp mov (bad) mov add loop xor call add add test add or insb xor xor xor xor sbb push xor xorl xor xor xor xor je mov (bad) xor xor xor xor xor xor xor xor xor xor jns mov xor sub cmpsb cmp cmp test js jbe test cmp cmp cmp (bad) cmp or xor push je,pt (bad) ds add add add xor add jmp xor xor xor mov cmp cmp cmp cmp cmp cmp aas add add add js add push xor divb add test mov fwait xor xor xchg cmp cmp jns mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp stos cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp les add and (bad) sbb popf aas add add add xor xor xor push xor test fbstp in xor xor xor sub xor cmp inc xor push xor insb xor xor xor xor xor mov les daa aaa xor aaa aaa cmp aaa jb inc cmp cmp cmp dec cmp cmp cmp cmp cmp add add add add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor jecxz repnz ss repnz cmp fnstcw es cmp cmp cmp cmp cmp aas xchg in aas add add add add xor xor xor xor pop ss cmp ds enter add cmp add js jg movsb xor xor xor xor xor xor xor xor ja or aaa sbb sbb jp (bad) ds cmpsl aas add add add cmp bound jg xlat xor xor xor xor xor xor xor xor out xor xor and and sub sub xor jp xorb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and sub movsb xor (bad) xor popa ss aaa (bad) lock sti aaa cmp cld cmp stc cmp cmp cmp cmp nop add mov xor lahf xor cmc xor aas ss jns (bad) ss cli ss aaa jp call aaa cli aaa add push cmp cmp cmp cmp cmp cmp cmp dec cmp cmp outsl cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp lods cmp fstpt add or sbb es push imul xchg ds ds aas imul add push add add xor xor xor pop xor xor xor xor xor xor xchg xor xor sbb dec ss mov aaa (bad) cmp cmp cmp cmp sub add add add pop xor xor xor daa xor xorl mov (bad) ss ss ss add ds lds (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp scas cmp cmp je (bad) cmp cmp cmp cmp cmp cmp cmp cmp ds fdivrs xchg mov add add and add sub inc xor nop xor xor xor xor xor xor xor xor xor xor xor xor xor xor jo mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb cmp addr16 pop ss scas ss aaa movsl aaa lods aaa (bad) aaa lret aaa (bad) aaa loop in aaa icebp aaa or cmp cmp pop cmp jne mov lds iret cmp cmp cmp cmp cmp cmp cmp cmp push cmp jbe mov mov cmp cmp lods les lret sarl fdivrs fdivrl loopne or das aas dec aas push aas pop aas pop aas pusha aas fs push aas mov aas enter add add rolb add xor cmp xor xor xor xor xor xor xor xor or or push xor xor xor xor xor xor xor xor xor jp lds lret xor xor xor push xor xor mov xor jno jnp mov xor lods aaa mov aaa xlat aaa inc cmp hlt cmp cmp cmp cmp cmp cmp push cmp popa cmp cmp cmp cmp cmp pop cmp cmp cmp cmp push cmp popf cmp jg popf ds mov sub xchg aas popf aas add add add dec add add xor or sub xor dec xor xor xor xor xor cmp cmp cmp cmp cmp xchg cmp into aas add add xchg add add xor xlat ss aaa xor inc aaa push aaa imul lahf aaa mov ret aaa aad out (bad) cmp cmp cmp push cmp cmp jno cmpl add cmp push cmp pop cmp sarb fnstcw fistpll cmp test test mov into cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp arpl imul fstpt call add add popf xor dec xor ss xor xor xor xor xor xor xor stos aaa scas aaa push cmp cmp jae jns jge cmpl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp add add add sbb add inc xor mov xor lea jecxz sub add add add cmp add mov dec xor xor xor xor cmpsl cmp cmp cmp cmp cmp cmp cmp cmp cmp clc cmp ja add add add dec add add xor xor xor pop xor xor xor int3 xor cmp cmp cmp cmp cmp cmp or or adc adc sbb and cmp cmp lea mov add add add cmp xchg ret cmp cmp jp stos cmp cmp cmp cmp mov cmp cmp cmp lods cmp inc aas outsl aas mov mov aas sarl aas fdivrs loope out clc aas add push add add xor xor xor xor xor xor inc xor popa xor js xorl mov xor xor xor xor xor xor xor xor xor xor xor xor xor inc xor popa xor js xorl mov xor xor xor xor xor xor xor xor xor xor xor xor xor inc xor popa xor js xorl mov xor xor xor xor xor xor xor xor xor xor xor xor xor inc xor popa xor js xorl mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and inc xor popa xor xorl mov xor out clc xor sbb and es inc ss ss ss ss xorl mov ss ss fdivs loope out clc add push aaa sbb and es cmp inc aaa inc aaa pop aaa popa aaa data16 js xorl mov aaa (bad) aaa (bad) aaa fdivs loope out clc aaa add push cmp cmp cmp cmp cmp inc cmp popa cmp js cmpl mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp popa cmp js cmpl mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp popa cmp js cmpl mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp popa cmp js cmpl mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pusha add lock add xor adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor nop xor test lods xor xor xor xor xor xor xor xor xor xor xor jo add add add mov xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp add addb enter int3 xor xor xor xor xor xor xor xor xor xor xor sub cmp test cmp inc cmp push cmp cmp pushf cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub xor push cmp jo mov lods cmp mov ds ds mov sbb cmp inc aas pusha aas cmpb aas sarb aas call nop add add add xor xor insb xor nop xor xor adc sub xor push xor insb xor xor xchg xor xor xor xor xor xor xor xor xor xor and sub xor cmp inc xor xor mov in clc xor or and sub xor inc xor insb xor les cld xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor mov movsb xor aam fdivl hlt xor or adc sbb and sub cmp pop ss ss ss lods ss ss ss add sbb and sub inc aaa dec aaa pop aaa jl test mov xchg aaa pushf aaa movsb aaa lods aaa mov mov aaa fdivs cld aaa add or adc sbb and sub xor inc cmp cmp cmp mov enter fdivrl or and sub xor pusha cmp insb cmp mov cmp cmp cmp and sub inc cmp push cmp pusha cmp cmp cmp add mov add add add xor cmp and push cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp and cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ds sbb sbb and and sub sub xor xor dec ds ds ds ds ds ds ds jl,pt cmpb mov mov nop ds ds ds mov ds xor inc aas pop aas js xchg aas mov mov aas les enter sarb aam loopne add add add or add add add add add sbb add jnp cmp dec cmp aas in add add add or add inc cmp or adc add add add dec aaa mov adc push cmp cmp mov cmp cmp jg sarb cmp cmp test nop ds and add add (bad) xor xor xor mov xor xor xor (bad) mov fidiv (bad) cmp cmp cmp fnstsw insl cmp cmp add add push add add xor xor xor xor xor loop jo divb dec cmp jge mov cmp cmp cmp cmpb cmp cmp aad cmp xchg ds push add inc add push add add xor xor xor xor xor xor repnz sbb bound icebp cmp cmp cmp cmp cmp cmp sub ja lds push aas pop aas add add add add xor xor xor xor mov test ss ss aaa js (bad) aaa xchg cmp cmp cmp cmp data16 cmp xchg int jbe scas aas add add add add cmp push xor add das xor xor xor xor xor xor ret aaa fidivl sub mov cmp cmp cmp (bad) cmp fnstcw or cmp cmp cmp cmp cmp aas add add add add mov out xor nop xor xor jb mov movsl xor into aaa popa cmp cmp cmp imul ljmp aas xchg aas fstpt add add outsl xor xor xor xor (bad) xor xor xor je xchg xor enter mov cmp cmp cmp cmp cmp cmp aas inc aas les cli aas add add fdivs mov jnp jg loopne add xor xor xor ds mov std aaa jae push cmp sarl fnstcw jnp mov or lods cmp add add add adc cmpsb xor xor xor xor xor xor xor cs bound push cmp lcall cmp cmp cmp cmp cmp cmp cmp in add add add push xor xor and xor xor xor xor mov in test push cmp cmp cmp cmp dec aas add add dec add add xor xor xor xor fwait ss aaa jo (bad) aaa dec cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp idivl add add add add add cmp mov xor mov cmp cmp cmp cmp cmp cmp add add add add jle daa xor mov in xor xor (bad) aaa sub (bad) cmp pop cmp cmp cmp cmp sbb js add add add add jle lock jge inc xor xor fbstp inc xor xor xor xor cmp jbe inc aaa and arpl mov cmp cmp in cmp cmp cmp cmp mov jo add add lret xor xor xor xor xor xor xor xor mov or movsb cmp cmp cmp cmp cmp cmp cmp outsb cmp cmp cmp xor inc mov fdivrl push aas int3 aas add add add mov (bad) xor xor xor sub inc xor xor xor xor pop aaa xorl cmp cmp sub popa cmp cmp mov (bad) jae sahf aas hlt aas add add lcall xor xor and cmp mov xor xchg and icebp aaa cmp cmp scas cmp cmp cmp sarl add add cmpsl xor fidivl add push xor xor xor xor xorb xor mov or aaa mov cmp adc jb sub test cmp cmp cmp cmp add add add mov cmc xor xor movsl xor divb sub xor add aaa dec aaa jge outsb cmp cmp popa cmp cmp cmp cmp cmp cmp cmp add cmp add cmpsl xor xor inc xor insl xor xor ss adc xchg sahf aaa inc cmp cmp nop cmp sarb mov and js add add inc add add xor xor xor xor sub (bad) pop ss aaa lret cmp cmp cmp cmp cmp cmp cmp cmp cmp fstpt adc gs add add add sbb add test (bad) xor xor rdpmc mov pop xor add ljmp or jnp mov cmp xor btc bsf push xchg neg neg push bsf setnp sub mov dec btr btc mov clc rcr mov shr and sub jmp call add xadd and shr push sub jg bts mov rol bsr add movzbw pushf call out push aam inc push cmp cmp xchg mov cmp xchg push nop dec or add mov cmpsb aam mov cmpsb test (bad) out sbb popf xchg leave xor rcrb popa (bad) or push mov (bad) out xor insb jne xor (bad) mov in loope or and mov jg adc ficompl imulb sub insb test add and jge mov or inc popf mov cs jp mov in rolb jmp test cld push and or movsbw movzbw pusha mov lea cmc btr clc mov push jmp imul cmp fdivs xchg addr16 cmp pop fisttp adc sub sbb sbb adc mov mov mov in xor mov stc rorb movsb inc mov cwtl into pand xlat xchg cld add push sarb or sub cld or cld lret (bad) lcall push inc jg add push push pop aaa mov lret scas mov stc dec mov xchg inc rorl (bad) xor mov stos push inc popa mov xchg in adc pop mov jne adc sbb sti hlt mov pushf cmp sbb mov ds xor inc or pop movsb mov movsb scas sub hlt in lret adc inc mov stos sub push mov mov lods cmp fidivr out cmp xchg clc cmpsl cltd sbb data16 cli pop test push and mov cmp iret jnp add mov inc lret bound or sbb fdivl fs or pop mov notl sub lods xchg cmpsb and xchg xchg xchg clc jae,pt push or sar out and out test mov daa aam jmp jbe (bad) jnp sub xchg add push push test mov das mov dec cmpl (bad) dec popa and cmc or arpl cli nop pop rorb fadds pushf cli cld xchg mov aam add je loopne xchg push cmp mov xor cmp insl push sbb cmp xchg push dec cmp orl inc hlt add mov bt aaa cld inc or xchg out add ljmp jnp dec es in sub imul or (bad) xlat mov out jbe jne inc mov rcr aas xchg rcrl stos add test jle cmp shrl dec mov andl xor sbb inc mov pop std lea jne neg push inc sar mov call add dec outsl arpl inc insb insb outsl arpl call insb sub in inc push mov mov jmp imul sub sbb test divl xchg ficoml shl ljmp addl pop shl adc pop inc imul mov jecxz cmp je sbb cmpsl adc das lret mov cmp out xlat mov jne and sub ljmp add cmp mov int outsb mov mov mov jbe cmp cmp jns cmp rolb add fs hlt lea enter or or adc xor cs insb add inc push in mov pushf stos fcomps and mov push clc out cld push xchg xchg pop test cmpsb (bad) (bad) iret xor push cmpsb or test sbb icebp mov test fwait mov or in fdivrs push adc insb xchg xor icebp loop mov jmp push mov clc add jb adc daa xor js ret sbb shl xor pop xchg outsl inc (bad) jns out xchg lea dec inc stos daa xor decb fldl sbb cmpl jo pushf inc imul std sbb out add jmp jmp cmp jmp std fistl adc push add insb lcall sbb in cmp bound shrb and mov imul ss mov fldt stos jmp scas test out ror (bad) cmp (bad) jl add xlat sub (bad) mov cld sti or lret lahf jg push jg in mov jns jbe cmp aas daa pop aas inc adc inc inc sub out jmp xchg mov adc mov xor jb mov jb sub push std adc loopne pop sbb stos pusha fdivrl cmp lods call add inc insb outsl jae dec popa outsb fs add aas fwait movhps push in call mov pushf adc fidiv push xchg je sbb sbb jb rclb adc pop sahf popf out jnp push adc xchg pop shrl push mov inc inc fildll js (bad) pop xor (bad) mov mov adc push repz (bad) adc push bound (bad) imul cmpb inc inc (bad) and addr16 aas out sub push cmp imul push jle and stc xor mov cs xor xor pop jl repnz (bad) ds dec dec push inc push dec cs insb add addl push pushf call lea je stc sub jmp push lock std std test xchg imul fadd lret jg and pushf mov pop popf ss pop pop mov mov and aam pop leave add loopne and test sbb xchg xor repz cmpsb push push in xchg push out add (bad) add pop push cmpsb adc jmp sbb dec mov pushf pushl ret movl xor cmc pushf mov repnz mov pusha lea jne bt cmp movsbl jmp cmpb jmp bt call jmp pushl lea call pushf cmp pushf pusha lea jae push call lea jne pusha mov movb pop pusha mov jmp mov call mov inc push adc cmc sub jecxz or cmovg mov cmc dec jg and shrl int3 mov insl cmp fldcw dec int dec jge inc lret mov adc lcall std loope stos (bad) cmc pop mov xor push cmp or jp sbb into popa jmp dec add mov mov push ret hlt mov div dec fsts icebp sub aad cmp (bad) (bad) das dec sbb cmp lea jle mov pusha sti pop out aaa sub dec nop sbb icebp std jg jle stos or test or negb pop in sahf ret sub xorb inc xor inc cmp xchg pop jecxz nop (bad) mov cld push jge jge lock enter shrl jp mov (bad) pop mov sub push push ret sub add fldcw enter pop jle pop mov xchg addb push xchg mov push leave mov pop ds (bad) sub insb push push test popf gs movsb leave pop add (bad) call dec or cmpsl pusha scas ret inc dec xchg cmp imul or stos inc xor insb and pop jne int sub pop repz jmp pop fimul popl xor pop loop inc mov jg jle fldl sub repnz cmp (bad) mov xor rorl stos (bad) add mov out sbb (bad) fnstenv psrld jne jg sbb push lret mov jmp int3 pop mov jbe test mov mov cmp sti pop insl test push push lahf icebp inc movsl lods xlat cltd pop push cmp orb out stc add dec jp xchg sbb insb mov ja shlb insb jnp adc (bad) or dec push jbe imulb aaa rcrb mov ja cwtl jnp repnz adc bound or lahf in sub dec mov push in and stc xchg or and adc cmp js rcl xor cs les in jae or (bad) cmp push mov stc dec test outsl push dec mov mov dec inc mov clc dec push cmc les shr sub inc mov xorl orl push mov shr shll int xor push jmp jbe push out cmp mov mov mov pusha lea mov call lahf xchg mov jge mov dec push pop cmp inc popf aad cmc xchg or pop xchg jne inc scas loop sti mov sub repz psllq sbb mov and xchg imul mov mov cwtl ds push idivl js les fwait xchg popa jbe jbe mov sub in mov sbb lods sbb mov adc rorl xor lds add (bad) mov mov or rorl daa xchg jns repnz jmp gs int inc push xchg stc sub pop mov cs data16 inc test movsb dec mov jnp insb cltd pusha or lret push fisttp outsb cmp ret inc add daa jbe sbb (bad) ss shlb loop popf out bound and out mov fisttp mov insl repz add mov sbb stos jge sti xor movsl cmp into dec mov ljmp mov (bad) cld insl cmp xchg mov inc outsl xchg lds test jne nop iret push sbb aad mov push add jo icebp lods adc mov cmp lods adc test sbb add inc stos enter icebp lods ficompl out leave cmp mov call add stc jmp jmp mov jmp mov push add enter xchg jo jb (bad) xor jbe fidivr push mov jo sbb pop inc int jmp das push leave test xchg inc lods xor fisubl aam sub (bad) mov sbb popf mov lods lret ja jg pop lock mov xchg mov ror sbb fisubl cmc lret (bad) sbb jp mov mov fimul daa pop jne dec mov dec pop repz push (bad) and jp js ss jge test and dec into out push (bad) push lea je sbb mov rcr add and btc mov test pusha test pusha jmp clc pushf test cmp pushf call clc bt add jmp sub cmp pop jae adc insl lds fsubr adc fcmove in jb notb jle test (bad) or mov inc ret orl jbe adc sub jo aam mov xchg jnp jecxz mov fnstsw lcall jb nop dec (bad) hlt lahf hlt cli dec push fwait pop enter jns xor das mov dec fwait sbb xchg pop jp jmp lret inc outsb pop fimul aad das fcoml sbb fidivr (bad) lahf jb sub aas rol fisubl (bad) loopne xor pop (bad) cmp (bad) bt test movzwl lea bsr mov bt mov add clc mov pusha test pusha call sub clc clc pushl clc clc bt pusha cmp pushf movb pushf lea ja pushf sub bsr neg bsf rol lea add bswap jae mov shr mov clc mov stc clc clc stc repnz pushf push mov push lea jne pusha pushf pushl movb push pushf push lea jmp imul cmc bt jmp daa (bad) rclb inc push pcmpgtb cmc lret sti flds or ds data16 int push outsb mov test inc and pop fnstenv inc mov in in inc inc cmp imull push daa dec (bad) das fiaddl pop add sbb mov jno jnp icebp or jno jmp nop movsl enter push cmp push adc mov push pop outsl or cmp push dec adc std cmp push fsubl inc stos ret inc push addr16 repz and adc push imul outsb lds mov add xor jmp pusha movw lea jae push pusha pusha pushf lea jne pusha movb call xor push mov inc push sarl xchg mov in in mov add push ds add sbb pop in add mov xchg lret jp xor mov movb mov jno adc push mov push jle and ljmp int3 ret roll out icebp xor in insb icebp and mov lods push das add fistl xchg adc inc ret or cmp jle int mov push fcoms movsb fwait xchg xor ficoml test rorl adc jge mov sbb fs jne shrd not stc sub pushf mov test adc xor add sub mov movb jmp mov mov jmp push dec dec dec push push push cs insb add inc push int3 xchg xchg xlat lahf int aam mov pop inc mov push lods push inc sbb pop sub mov add ror ret mov int in repz or rcr inc repnz fnstenv or popf out aad cmpsb lret adc mov push aad pop mov outsb ss sti popf xchg xor test inc xor inc cmc jne add dec mov and pop lret pop test inc jnp or test jnp repnz xor dec in cmpsl pop pop sub ljmp jne into movsl mov inc xor dec mov push xchg inc lock outsb cmc stc clc sub xchg mov and repnz xchg insl rolb push xor leave jne mov push sti test test cld add lahf push inc xchg stc jle (bad) jae jb or xlat sub push pop fild add adc xchg sbb lds xor mov test xchg scas and inc cmpsl or je push lret add or jns stc xor stc jmp add dec outsl popa fs imul add test je add stos shll mov rol test rcr sub sbb data16 (bad) mov pusha sub test pushl popl bt jmp inc ret pop lea inc push shrb inc iret sub inc lods jge mov xlat cmpsl jmp std push hlt lods dec (bad) clc mov lcall add pop jmp iret dec (bad) mov push hlt jnp jl pop arpl cmpsb dec adc ljmp push and (bad) cs cmp repz test loopne cmp fistpl jae leave jl xor xchg outsb cltd out shlb int3 jmp rolb ljmp push out inc stos sbb dec mov jmpw xchg inc lcall cld test ror pop xchg push sti push mov daa and xchg xchg mov adc jae sbb xchg outsb cmpsl and hlt jle adc mov jp add inc scas xchg inc into sbb lock data16 cld push push sbb and aas jb and popa test adc sub jg cwtl and shlb ss and add pop out out icebp cmp cmp and pop mov mov mov mov js inc push insb and jecxz xchg cmp sbb adcl (bad) dec cwtl and sarl inc and and mov xor xchg mov push test out lret icebp xor ja adc mov add push fsubl fcmovne out inc jae es cmp push stc data16 fdivrl les xlat (bad) dec push ljmp lahf (bad) fistp xchg jns movsb push movl in mov ret mov mov lods popa push cltd (bad) outsb xchg or dec rcr or (bad) bound cwtl daa xchg xor xchg ret (bad) stc inc js cwtd cmpsb fldcw daa dec jae mov pop xchg fs mov lea call cmc mov clc test push lea je stc call push mov popf and jne test push jns roll lds shll (bad) jb cmc mov xchg test clc aas rolb mov lret aaa mov dec outsb pushf sbb cs mov imul mov inc fimull dec add adc in jnp sbb dec out push outsb aad ja push and push and in data16 mov adc ss movsb stos jl dec outsb data16 push ja cli rolb pop fdivs inc inc pushl cmp mov cmp ljmp in xchg das jae mov and dec pop gs add ret jbe lret add (bad) push sub xlat jnp popa jp pusha fistpll fcmovne inc lret in ds ret sub dec in ret sti pusha orl mov lods dec and popf dec lds sub mov xor fist sbb notb inc xchg int je (bad) scas jo adc ficompl inc push int3 xor insl ret adc dec sbb push outsb cld sub movsl adc out push stc or mov mov icebp dec movsb (bad) xchg dec and ds test icebp aad out cmp mov cmp inc pop (bad) sti pop cmpsb push mov dec scas repnz addr16 xchg rol push push mov push lret lret or sahf stc and mov push stc ds mov xchg sub (bad) xchg bound cmpsl jp fcmovnb enter pushf xchg test in fimull adc cmpsb lods xchg xchg cltd jge add lds jo push push or push inc cmp add adc fsubl enter cmc jecxz xchg fs push cld (bad) je les xor data16 in dec lret (bad) out rolb adcl and jp push or mov mov aas lahf sahf insl inc push dec mov mov ss jno bound and lods pop (bad) loopne mov sbb and ja push int3 mov dec out mov fildl les mov pop or cmp stos inc cs inc inc arpl dec loop cmp or pop adc inc dec clc mov xor arpl or dec popf and ret aaa dec mov jne push arpl fwait xorl ljmp scas scas cmp lods jl enter jmp stos push cmp mov fsubrs nop mov faddp xor pop icebp sub fwait xchg lret sub xchg sbb add (bad) jbe test inc mov add insl test xor sbb ret xchg rclb push insl xlat mov jp ret fisubrl pop rcrl fsubr and (bad) cs add push (bad) adc in xchg into aad nop das fdiv fwait mov xchg and push pop push dec mov push hlt or sbb and mov push (bad) std ret mov fnstsw jmp xchg add push mov enter loop add mov cmp ja hlt and add je mov and push ljmp mov icebp sarl xlat ds sbb jp js push jle push cmpsb out mov (bad) jmp sub inc stos sarb test sbb push jno sbb arpl movb mov loopne lahf bound out push push mov xchg sbb mov sub sbb push push jmp add shrb push shrl xchg les in (bad) inc pop cmp and stc and sub sbb xchg pop ja ja insl cltd sarb cmpsb sub mov add lods xchg ljmp int dec mov fwait push mov xlat jmp (bad) cli dec xchg xor add adc fdivs ljmp xchg cmc and add mov xor dec dec mov lods cld add inc push mov dec imul and inc call xor jecxz pop push xchg ljmp movsl imul cmc lret sarl clc insb data16 inc ficompl inc dec cltd xchg sub dec cmp lds and jp addl ret adc jmp pop xor pop xlat jg push movsb fimull mov lea ljmp lods mov scas ret rclb out and push rcr sub pop out push pop loop inc jecxz xchg fdivrl jo pop xchg cli cld push sbb ss test sub fldl2t sbb sub ds pop and push (bad) cltd call fiaddl scas pop sarb (bad) psubsw jecxz add data16 lcall (bad) jmp add call jmp test pushf push jmp and in js inc push out movsl mov loope jl jl bound lret push add das out pusha andl inc loope cmpsb cmc js test cs cmpsl xchg icebp lahf sbb and adc int3 mov push mov or dec cltd push jbe in loope dec sbb jecxz and lahf dec jmp or mov out (bad) repnz repz dec inc std jecxz les fidiv xchg jmp xchg push ss in dec mov out popa adc lods xsave jg ja repz cmp std jo pop mov insl dec lret push xchg (bad) cld (bad) in lret into fnop out out cwtl sahf sbb iret mov aas cmpsb lods sbb (bad) enter ds ret (bad) and bound push gs and add test sbb dec jp mov mov out sbb pop stc std repnz sahf add stos pop mov popf jmp rcrb mov jb push inc fwait cmp sub ret xlat std jecxz mov sbb mov f2xm1 inc (bad) and cltd jne jbe insl (bad) pushf mov lea mov mov movl movb pushf call test pop lds push lcall dec fdivrl (bad) xor stos push sbb mov and outsl sbb and pop mov ja add ja mov cld mov push mov dec lods pop inc fistpl dec (bad) leave popf fnsave inc push out int3 iret and or out push hlt or (bad) xor (bad) jae pusha or cli or call stos notb fwait sbb lret into aad test push mov lods fildll in sub int3 out cmp push xchg or orb pop sub mov add lcall pop dec mov out jl cmp sub fdivs jb sbb push daa mov mov outsl fs int3 sbb stos lahf in adc dec inc mov push loopne test push scas (bad) pop add mov mov jge out push stos push push mov mov sbb cmpl dec jge mov stc push or xchg negb sbb lret popf mov or aas loop xchg jp lahf dec jb sbb push mov iret mov xchg sub add das aam cs push pop movsl fistpll fucom cmpsl out movsl les mov lret jbe cmp dec fnop repnz mov mov stos xchg adc jnp lea (bad) jbe mov cmc ja and hlt into adc mov mov dec shrb mov leave pop lods mov inc out or xor pop fistl push push pop aad repnz out ret xchg cltd add dec in lret or out rclb xor and (bad) fstp jmp repz call mov push xchg dec arpl daa push lahf mov xchg pop jmp (bad) jmp inc adcl scas je push fdivrl clc (bad) sub mov movsb pop movsl inc adc cmp xor sarl imul test and mov ja icebp push fldenv or jae sbb leave jge push sub int (bad) jecxz mov subl lcall cmp push es jo in out cmp jno mov in daa nop pop stos and enter call bound div adc pusha push lods pushf ss hlt mov ja divl sbb jl lret aas xchg ljmp xlat xor sbb sub mov icebp push pushf cwtl call sbb jmp dec outsl xchg or push mov aas out psubq lock inc mov pop push mov adc movsb data16 test or insl inc insl cs cli or inc ret psubd in and and mov (bad) lret pop cmp jg icebp mov pop mulb mov data16 push mov add popf mov mov gs or orb cld sarb (bad) or mov div push jnp cwtl fldenv sbb and push test sti nop mov lret (bad) mov add push add pusha lea jmp mov call lea jp push push mov lea lea movsbw pop pusha pushl ret (bad) hlt pop mov inc push cwtl (bad) xor in cmp (bad) lods lods out mov pusha mov das mov jns mov jmp into jae mov repnz mov cmp or out or xlat mov dec mov push jmp (bad) push aam add inc idivl mov fs fs cwtl adc xor push push adc js fidivr mov stc fldenv popa or xor cmp inc push stos xor sbb sbb mov fcomi es adc or xchg stos sub xchg stc xor mov adc leave pop xor lods in mov cltd lcall sub test xor mov insl mov xor popf testl sub xchg dec inc push push adc aas and cmpsb into lock es ja add xchg inc std cwtl add dec test dec cltd jno flds ret popf add sub cmpsb xor xchg in arpl cwtl xlat inc clc inc je lcall add mov stc sub or ss cld mov clc (bad) mov xchg ret jbe ljmp sub jecxz mov jno scas jnp scas pushf idiv lret dec adc add dec repz push mov xchg enter (bad) mov jp dec stos insb lret out mov inc or in jmp adc insl fidiv dec fistp mov cmp and xor ss int3 inc or cld ret pop das mov fwait cmp mov adc or mov outsl mov push mov sbb nop les sub mov sbb push mov bound push sbb (bad) jle adc movsl and add mov (bad) pop xor jp dec pop arpl adc (bad) dec fwait pop nop or mov lahf add sub mov popa push inc mov adc jp popf cmp cltd pop gs xchg inc in xchg add in or xchg out cmp stos dec dec out incb insl scas (bad) and lahf insb cli push cmp and stc and ret jmp lahf imul rcrb dec mov movsb call (bad) xor imul or outsb sarl sub mov outsl sbbl push jno inc push stc in repnz in dec (bad) into push lds idivb mov push and sarb int mov xor add fnstenv stc sub xor push inc mov xchg mov movsl cmp test cmp mov in mov cmp iret cmp dec lds outsl mov enter mov fwait jmp ret cltd rorb stc cltd fsubl icebp xchg loopne xor test cmp into mov test sub mov ret rep pusha xchg rorl xor fs clc push movsb popa fimull jmp sub push repnz mov repz mov and add lods pop sub mov addr16 adc mov xchg cmpsb icebp push pop push xor (bad) out pushf push sub xor mov xchg js fiadd mov or xchg movsb adc cli cmp lock addr16 outsl fnop ja mov mov iret mov pop lcall push test repz jg and cmp lea mov xchg xor daa cmp mov imul imul sub addl fmull dec and shrl mov fcmovne add (bad) xchg inc mov lods and pop jnp push mov jnp (bad) pop pop cmp mov mov jnp test fldt test fidivrl sbbl sarl adc jbe ret lcall inc sahf ret out cli loope pop fimull push (bad) pop in call call xor int3 sbb aaa ret imull mov (bad) div and aaa outsl mov jae ror lcall cltd jns push adc inc mov (bad) insb lret cmp mov and and jno mov jns adc pop and mov incl push outsb mov jns adc pop scas fnstenv dec xor ficompl or xchg test inc je push test addl (bad) push (bad) xchg sarl xchg jmp mov mov pop mov cli sub into rol nop xchg cld push xlat jne pop out scas fucomip push cwtl aas dec xchg out insl xorb rep bswap movzbl mov movb pushl lea jmp add and ss push loope jle push mov push push pop hlt es (bad) xchg call js push aad int inc add xor dec add rcrl add xor out adc lods push rcl mov xor xor adc add sub jns das or dec js sub pusha outsb and sub and pop dec leave movsb push mov nop out sti cmpsl es popf pop lahf int3 xor dec cmpsb inc and and or push push (bad) sti fwait outsl idivb jo cmp orl daa jle rorb dec mov inc xorl outsl ficoml das pop mov mov jecxz cmc popf fistpll lds adc (bad) dec stos bound pop adc js out adc test adc push stos sbb sub lock pushf jp xchg imul add jno into cmp inc lods aaa jecxz push (bad) (bad) xor or push cmp sbb out dec out ja pop mov cltd xlat imul jp xchg fst push inc cmp cmp push adc and call mov mov pop adc call outsl mov push adc push test lret xchg pop js or test scas cwtl jo mov mov test add in cltd mov cmp dec xor add mov das scas test or jg ret jo cs mov push cwtl aas lret mov push xchg stc and add pop fmull or xlat pop outsl inc mov xor fnstsw iret sbb inc push inc loopne,pn mov negb adc incb jl pusha add (bad) or push mov mov lret sub add adc mov inc mov (bad) leave (bad) jne notb fsubrs leave dec loop add push ds sbb loope inc adc cli mov cwtl jb cmp std addb scas mov cmp shlb incb xchg sub xchg xchg ret xor jb mov jge or rcl pusha enter les mov inc xchg gs pop and mov lahf dec es (bad) out in push out int push mov insl xchg jne lds pop data16 push (bad) mov int xor fadd cmc in xchg xlat out mov mov xchg jno adcl iret xchg outsl mov inc cmp repnz (bad) scas ja sbb nopl ret xor dec cmp cmpsl fildll dec out aaa add stos jmp subb in dec mov (bad) xchg mov ficoml shr mov testb cwtl lcall sbb and sub mov test dec fmuls in enter arpl sbb push mov in sub js data16 mov lahf jae mov push inc push push dec inc pop inc xchg (bad) mov bound jmp jmp jmp jmp sti nop arpl jg jnp add cwtl pop mov stc ss pop (bad) inc out icebp fxam jmp jmp jecxz add mov (bad) mov add dec and or (bad) stc sbb stc btr mov add call test stc cmp pushl movb push pushl lea je pushf cmp jmp jmp divb add (bad) je mul jle push call push mov or sbb sbb mov adc push lret mov lahf (bad) pandn mov push jmp xchg mov adc outsl mov andl repnz mov mov fsubr arpl pushf call jmp js and xor out adc fsubrp les mov or mov sbb sahf in cmp mov fcompl or loopne shll pusha pop clc sbb sub test mov daa nop adc mov mov jecxz out jge push mov jno pushl xor ret mov xor imul xor loope cmp leave stc jl rolb lock add push call fsubrl test (bad) enter mov pop (bad) addr16 in inc adc xchg xlat clc jmp jae cltd dec xor fiaddl leave jecxz xchg daa repz pop cmpsl push or fnop in jg ljmp loop repz xchg xchg sahf inc mov jbe arpl jb add (bad) ss pusha xchg adcl sbb add in std pusha pop push cltd xor rcrl inc push bnd in inc sub hlt or loope test dec xorb arpl jg adc dec shrb ljmp add jno add pushf lea ja adc sub jmp jo arpl cmp push jne push je faddl push and scas mov lcall clc and movsb aad call in push das mov xchg rorl ss xlat scas adc mov fldt cld xchg repnz adc icebp popf push fldenv lods fcompl mov or lret push data16 in ds lds inc nop mov arpl in mov jmp mov loope faddp jecxz add mov inc inc xor mov pop pop jl xchg (bad) dec mov fs adc xchg (bad) jmp lods clc cmp test call inc insb jb and loope pushf cmp mov aam frstor jnp add pushl pushf lea ja cmp pusha not bt sub setbe shrd add add adc and mov and neg inc rcr mov pusha bt repnz movw pushf pusha lea jne movsbw movzbw not jmp jmp xlat dec mov cmp inc fdivrs repnz jbe jle mov loopne out int3 fcoms loopne mov cmc test stos push aad pop fnstcw movsl nop push jno imul scas outsl lret lret xor js nop (bad) ja out int3 and movsl mov decb xor jg pop sti stos and push scas or push sbbl sti or test gs sbb in fdivrs pushf out pusha lods push ss popa aam add test xor shrb (bad) sbb ret xor addr16 mov push mov in pop inc ja push test (bad) lds xlat lds or rcrl pop in ss push ds push inc sub fisub xor fisttpll aas mov test push push int3 test movq mov pop js movsl hlt and ret dec loopne xchg stc jp sub in cmpl mov out cmpl xchg push mov subl jne lea mov sub das mov pusha fwait in dec ljmp loope inc push ja push or incb (bad) clc cs mov sbb dec stos sub dec ds ret lods mov (bad) iret jecxz aad mov jp mov sub sbb test and mov ss jnp lock fs mov mov scas fstl sub mov ds test pop pushf jecxz sub mov cmp sub pop mov inc mov and rclb cmpsb scas or fildl fildll in mov aas inc push ret aaa ret and mov movsl and mov pop ljmp pop xor mov cmp cmp cmp or fdivl rclb clc cmp push in xchg adc xor call xorb adc xchg push xlat jbe or adc test xor xchg movsb or mov cld pop mov mov int3 pop sbb or cltd jo clc neg jg sahf into dec in pop out pop sub loope add or rol pop pop adc (bad) fst loope mov loop outsl out inc push push mov mov outsl and into mov jb jle inc pop push adc or sbb ljmp pop ljmp xlat out inc data16 insb scas les pop insl aad fwait ss scas fisttpll sbb cli sub jne pop cmp (bad) push jmp push jb jb jae (bad) ds cwtl out sub inc and into mov mov ja inc mov arpl add inc push imul xchg cli add xchg cmp jbe sub mov or jle xchg xor xchg jo pop retw xor jp jle and or jno call js std push fmull sbb adc (bad) jp mov dec test fsubs (bad) popf jge pushf ret cmpsl inc inc rorb xlat jbe gs mov mov pop out add push mov aam mov insb sahf cwtl xchg mov cltd and dec inc jnp push leave jle (bad) jg lahf cs fimul adc out jmp cmp add loope jnp jg push (bad) xor mov lods loopne (bad) mov cmp xchg mov add xor js frstor xchg jns sbb cmpsl andl call mov lods jge push sub sti out sbb jecxz sub xchg lea xor test add pop dec movsl xlat push lahf fucomip push out xchg mov mov and (bad) imul das stos dec daa aaa repz sub mov ljmp ss adc inc aad fcomps das adc mov fisttpl or mov aam xor jp add pushf bt cmp jmp out inc sub cmp adc addr16 jg jg jns push fbstp xchg xchg xchg flds sbb icebp fimul inc pop fisubl push mov and sub mov test add leave sbb testb mov scas mov aas lea bnd paddusw fcmovnbe fwait xchg cmc cwtl (bad) shrb scas cmp or jmp fcomps mov lock addr16 cmp inc or add int pop push pop out (bad) push mov fnstsw shrl stos pop mov push mov loope mov sub inc mov dec stos dec (bad) pop (bad) jns xchg in popa pushf cld mov xchg roll out int3 cmpl push push adc into dec sbb jl inc fnop push ja or jnp aad push mov mov mov pop (bad) jae roll pop jo mov dec (bad) pop or mov add xor (bad) mov push idiv in jae test inc push sbb xchg and push outsl (bad) nop mov cmp outsb lret gs dec cld xchg roll sub mulps add jbe into push (bad) shll cld ret fwait mov lcall in (bad) dec and outsb cmp test mov call push mov in je pop aad stos nop call push and faddp or jb mov (bad) ss mov fstcw jb jl in ja nop inc inc xchg (bad) sahf sahf lcall cli add or and pop adc inc mov iret into xor push jecxz sub or iret push lcall inc and pusha cmc bt cmp mov pusha pushf lea ja clc sub shld add mov bt mov pusha inc ror mov movw repnz jmp jmp test cld inc inc push push rclb mov fimul ljmp mov sub in jb sti (bad) jmp or cwtl lock mov cmpsb movb inc popf ss enter jb (bad) pusha icebp clc rcr inc lahf inc push jg mov mov out (bad) iret cmp or aam pop cmp mov adc xor cmp (bad) fcomp out pusha (bad) jg mov and das insb push adc inc and sub push add push mov lea jne call add push test das incl lcall mov dec data16 arpl bound outsl cmp cmp and stc xor jl push insb (bad) hlt and mov mov sahf shrb xchg fadd mov mov inc inc add inc das testl aam (bad) sub out out fistpl xchg inc jp popa add pop enter and orl xchg inc push or xor jmp fmulp xchg addr16 fs (bad) jnp stc xor mov xchg (bad) int3 imul popa fucom or hlt pop outsb rcll scas stos push inc sarl movsb jo and push sub mov pusha repz inc ljmp scas test test cltd push out fwait loop inc bt mov pusha test movl movw push call and lds push lcall cmpsl jnp pop shll outsl lahf imul inc mov cmp pop repz faddl inc scas push iret push mul cwtl mov cmp bound add rol push test clc or sbb test rcll out push mov inc js push mov cld cmc mov cmpsl lods dec stc jmp (bad) inc mov rorb xchg fcoms out pushf in js mov ficom cmc ds flds (bad) out mov lods idiv dec or outsl cli add pop mov idiv fsubs cmp fwait pusha mov lea ja call call lea ja shl cmp cmc cmc sub inc and add test and cmp mov push mov cmp stc repnz mov call jmp pop jb test inc push ds gs fwait adc cmp xor fnsave or push adc divb mov pop data16 lahf adc ret icebp and jne push aam xor xor dec stos aaa push popa mov or jbe out inc mov add (bad) hlt (bad) mov mov cli hlt mov xchg dec jbe imul repz mov mov (bad) xor pop and cmpsl fs lcall pusha movsb or adc paddd aaa (bad) push push lret pop mov or aad sti ds mov (bad) fidivr sbbb rcll adc scas mov fimul xor andb inc inc push (bad) xchg andl or pop fldt jg inc addr16 mov aas push (bad) je push push jmp sti xchg bound sub xor dec std jns mov push push sti lock (bad) sbb jns push cld add mov cli repz icebp icebp cmp je mov out cs add sbb sti push xlat dec out out xor cmp dec mov fisubrl add inc cld shl adc inc pop insb sahf (bad) jae out adc sbb mov call nop out fwait inc cmp pop cli sbb popf cld and pop incb loopne test cmp hlt fimul dec lods dec inc dec sahf dec jae cmp std test add add add add cmp add add or add add add add add add add inc add fiadd add inc add adc add inc add mov add add add inc add repnz add incb add jae popa insb insb add jb imul add jb imul xor push gs gs dec dec cs je add lahf dec inc inc push fcoml jae jnp push or mov push popa xchg jge jae sti adc ss aad xchg inc mov out push inc jns dec and mov cmp das sbb cmp lds sahf cs mov cmpsl jecxz push pop enter gs aaa test bound pop xor and popf pop daa mov shrb (bad) and jo xchg cmp jno loopne adc jl loope cwtl mov xor mov fiadd mov add cmpsb lret movhps add (bad) inc dec aaa push lret js or inc sub pop pop mov sub mov (bad) push add and mov adc mov add (bad) clc jmp mov mov and mov jp,pt les scas in fadds dec push (bad) pop mov inc jl push rcrb xor je xchg mov jb adc pop dec popf cld jae jmp (bad) movsb ljmp pavgw cmp ja and add mov scas dec dec pusha push or scas pop aam iret out dec sub add or add mov pushf (bad) scas std das rcrb or xchg aaa pop gs jg int3 cmp (bad) psraw int sub popa inc xchg out int icebp fiadd in cld mov popf sti fildll mov loopne mov cmp fnsave test xor xor jmp inc jnp in cli mov (bad) leave or mov pusha lea ja jmp movl jmp jmp jmp call jb pusha pusha push pushf pushl ret pushf jmp rol arpl cmp rol pop (bad) in cmp aas hlt sbb push int3 cli add (bad) loopne xchg outsb faddl and fwait or aad mov cmpsb lcall clc mov les dec lcall je sbb and push pop xor fs es mov inc hlt mov or xchg fisubr inc mov jmp in push inc sub mov dec inc push cmp je pop mov cmpsl pushf dec lret adc gs pop push ja adc push push xor in aam xchg jns icebp and pop lods sbb sbb movsl adc jge mov jg mov sti cmp dec xchg leave mov int3 pop inc scas xor or (bad) call sub lcall lahf lods pop jnp mov jns enter adc insb out xor sarl (bad) repnz or sahf scas test mov fisub mov mov cmp push pusha pusha movw lea je pushf mov pushf mov lea jmp xchg push pushf pusha movl pusha pushf call pop push mov div push jbe je test jb push sbb nop in out or or mov mov and dec std jmp in cli fsubs and sbb or xor in sbb add aas pop les or inc jl push loopne (bad) pop iret inc pop jne add arpl out push push mov jbe or lcall dec xlat adc add push gs jb arpl jae imul popa je outsl outsb add je or push pop out lea jb test pushf call bsf mov call jge xor dec inc push jae push mov inc dec mov fiaddl fisub stos push pop mov push sub pop rcrl gs adc mov jno (bad) dec movsl lods sub test cld lock push rcrl jae (bad) lds jo or scas fwait sub push dec sbb dec mov rcrb int3 clc fadds loope bound outsb mov push (bad) mov push in cmp xor in xchg push in push int mov rol xchg lcall int3 bnd push jp pushf hlt and int3 pop dec dec loop fdivr dec mov push stos lret pushf in aas test imul (bad) (bad) repnz sahf dec lods push adc mov mov jo lds cmp mov sub mov cld pushf lret test test pop push mov iret aas ret cld and jbe mov (bad) imul inc push dec daa (bad) xlat mov sarb ret insb pop ret pusha cmpsl lret lds fs push mov sbb dec mov icebp and cmp ljmp push cwtl movsl jl ror mov and add push not xchg in pop mov mov mov andl ljmp cmpsb cmp out ljmp inc dec pop popa rol lods or pop or (bad) mov jbe cmp mov cmpsl aad mov xchg stc sbb or imul imul jecxz dec sahf push cmpsb jg clc add mov mov add jecxz std push test imul out jbe data16 sbb out repnz dec jmp mov sbb int3 sub mov push xchg mov xor mov lea jge ror pusha call pushf movl pushf mov movw mov lea jmp push movb movw pushf mov bswap pop lea call pusha lea mov pushf pushf lea jmp push mov movzbw mov call push pushf mov jmp btc sub mov jmp cmp push mov xchg mov dec dec push cmpb outsb mov cli or rolb cmc mov push or sbb mov adc xchg (bad) lcall xchg fadds add pusha mov dec fcompl jecxz outsl and xchg add pop xchg out xor xor push xchg push add pushf sbb es je loope fs dec int3 xchg mov imul lods int3 dec push aad das xorl mov lock addl notl mov inc push insl data16 push dec insb add sub pop cmp loope ret scas push xchg dec sub pusha mov jne adc push cmp jns and popf adc xchg sarl (bad) xchg push ret adc adc stos andl test pop popa cmc incl mov cwtl data16 je sub daa push cmp cmp shrb pop sbb je xchg xchg or lea std mov lods test sbb leave xor mov dec pop and or daa lock mov loop mov lea jmp jecxz int3 in or dec lea xchg add push lret (bad) fstpl push fstps clc or mov adc das mov push or lock loop mov or push out push dec (bad) fwait aad call lret repz dec mov add jmp ss xchg adc xor inc mov sub xchg cmp sub addl imul (bad) sbb pushf or mov xor rcll jns in adc sub push test enter xchg xor mov lcall pop adc add jecxz cmp xchg rol rcr mov shl rol cmc pushf mov cmp bt xchg dec pop mov movb push push sub pushl call lea jne jmp mov push mov mov mov mov pushf lods clc call mov push add push push stos mov stos aad sbb jmp inc mov pop lret idivb out mov xchg adc les push adc movsl cmp sub jmp xchg jnp jnp xchg mov mov rcrb sarl xchg jg sti dec out push lcall xlat mov jnp push sbb js fsubs xchg and (bad) xchg ficoml jg cltd pushf cmp mov (bad) into movsl xchg lds pop imull movsl dec cmp lea pop jecxz out mov addr16 notl je lahf fnstenv cmp out fdivs enter negb jg lods aad call fistpl inc sbb cmp sbb pop mull daa dec lods frstor mov mov mov fistpl imul stc enter stc cmp cmp adc add aad pop push sub pop lds cmp cld dec pushf mov mov adc xchg xchg ret sti xchg clc mov jg cmp inc insl or jg dec pop cmp cmp test or cmp push cmp in sbb mov mov scas pop std sbb jne inc push loop sub enter stos fmul add out sbb and adc cmp scas sbb mov outsb inc push mov pop dec lahf je mov call ror mov pop and pushf sbb aad dec mov push xchg inc fdivrs xchg das stc test (bad) and jecxz lods inc icebp dec cld jnp ds jno cwtl mov aad call push push pushf sub cmp ja idiv cmpsl bound xchg dec sbb popa push and shrl mull sbb (bad) pop or cmp and xor (bad) mov jecxz pushf adc cli pop insl lods orl insb (bad) push push xchg lods iret mov adc fs sar movl popf xchg inc push xchg push pop mov stos mov cwtl jle (bad) sbbl fsubr pop pushf lahf fwait stos pop xchg jns inc (bad) pop adc xchg sahf push nop lret inc pushf add sub xchg lcall push cmpsl hlt pop or inc and pop rcl fcmovnbe movsb in xor push les sbb dec sbb fucomi inc fnstcw shll stos lret cmp scas mov lahf hlt je jnp fs pop cwtl bnd (bad) lahf lret cli mov jecxz cmp push iret xor and dec ret xchg jnp inc insb (bad) dec fstpl fisubrl int3 leave data16 icebp xor lods lret test cmpsb ja sub push cwtl enter xchg mov dec mov xchg cmovae pop jno sbb mov mov mov mov ret mov pop mov sbb test lret movsb (bad) nop and rcrb aad cwtl in and (bad) roll out add lahf inc lcall pop lahf rcrl bound lret mov lea sti faddl sbb jbe in push push cltd shrd lods xchg cmp dec push inc mov out xchg mov sub xchg pop sub pop cmp and rclb fistpl cwtl cmp xchg subl push pop xchg notb push iret sbb fsts xchg or iret (bad) dec andl mov cwtl sti jnp cmc shrb outsl mov and daa lret xchg cmp (bad) jge sti loope movsb mov jns aad xor sub ret loope or pop cltd lcall xlat andl mov and rcll fiaddl dec not loope (bad) imul mov mov lahf cmp (bad) fyl2x or fsubrl inc xor push inc bound xchg lahf outsl shrb inc or outsl loop (bad) push pusha sub mov sbb popl pop dec cmp stos sbb jmp cmp pop add dec sbb mov idivl adc mov ss adc lret xchg loop adc push jp jg jnp ss xchg (bad) mov aas cmpl jmp cwtl fsubrl out cli fild pop sub nop in xor dec sbb cmc test je or mov addr16 das add aas mov push bound and xchg pop ret jo fwait mov lcall xchg pop adc adc inc sbb cmp int lods (bad) fldl in stc notl sub int mov sti outsb dec in add stos inc xchg cmpsl push push xchg (bad) insl sub ret jmp push loope ret xchg fstl add rcll xchg mov cli ljmp dec mov push sbb and aam dec aam sbb mov xchg sarl arpl cmp mov pop mov dec bound aam lods pop mov sti pop shrl cmpsb imull xor rsm (bad) aad push xchg jmp mov xchg cld je xor add xor loopne push fstps lds push dec jecxz push cmpsl or mov dec das xchg gs lret cltd mov and or adc jle pushf inc mov dec push cli dec xlat sbb mov xchg jae dec iret notl and sub dec sbb xchg push pop das scas data16 mov fwait jp mov dec adc xchg jecxz out pop inc sbb (bad) (bad) sbb add sbb adc fs xchg stos xchg ret mov and mov icebp push xchg mov repz mov push mov movsl push cli adc insl inc xchg iret mov sub sbb fs dec dec mov sbb jnp (bad) mov ret xchg push sarl stos cmpsl shlb xchg test push cwtl xchg adc pusha mov mov jp (bad) sbb adc mov cmp inc xchg (bad) sti pushf inc and add xor fiaddl pop das test add test inc pop test cmp int cmp push (bad) sbb inc cltd jb pop xchg mov and jmp push clc adc push xchg push iret jb jno es icebp pop or fwait stos leave pop sub push or daa dec pushf insl fmuls test jae mov pop stos pop cwtl ret (bad) xchg leave or stc popa inc cs (bad) fcoms ss pop jnp stos cmpsl mov inc jmp adc sbb and aad pop pop les xchg or loopne sub out (bad) and pop and leave mov xor iret movsb pop cli dec pop add add lds fistl into fdivr inc pushf mov (bad) mov jp call push pop enter cli leave xchg int pop (bad) (bad) (bad) loope (bad) cli dec cmp fwait mov sbb add popf fwait mov mov aad cwtl in (bad) popf insb in lret leave int3 jns sub lret xor inc pop aas sbb or (bad) pop addl sbb inc outsb fwait adc jbe adc div sbb int pusha jg xchg pop cmp jg dec xchg mulb and mov pop cwtl (bad) pop cmc (bad) xchg cmp es fstps (bad) xor sbbl inc cmc cmp sbb aad test (bad) (bad) push and dec pop jmp outsb jb mov fstps ret sahf lret out fldenv jnp or sarl or fistpl ret test ret testb xchg pop lahf pop into and lret mov ds and mov inc mov push in or ja mov repz mov mov stos cmp (bad) push xor adc stos cmp pop pop in out mov movsl (bad) dec cmp mov mov lods mov out es mov lret pop fcmovu adcl mov (bad) xlat pusha jb xchg fsubl xlat push div jecxz mov sub stos loopne dec mov jmp imul mov xor inc scas pop and inc mov stos ficoml jg cwtl sbb pop pop das scas neg mov adc lret aad mov xor addr16 gs dec inc lods xchg sbb shll and aaa out sub test test out xchg int3 push lret and mov adcl lods in cltd sub jne xchg (bad) sarl clc mov lret xchg test mov pop dec cwtl cmp stos pop pushf mull lahf or cmpsb out pop sbb sub xchg dec fistp rorb inc fiaddl adc decl xchg fcomps mov xchg cld jnp cmp ror sbb push xchg mov pop jo push pop push and jecxz sbb mov lahf gs jg ja orl test inc mov sti repz in js movsb xor mov or fwait pop push cmp es (bad) cmpsl (bad) flds add add mov add push ljmp test push scas leave or dec mov test in pop rcrl repz mov sub fldt test arpl test mov pop (bad) out aad inc sub fsts or ja lds int3 xchg mov push mov adc inc inc add pop adcl mov int3 test lcall mov adc xor inc dec push or flds cltd pop in and cmp flds loop adc xchg xchg mov and mov push xchg jbe rcll add inc xchg inc xchg mov push mov (bad) mov in popa mov pop insl sti imul jge pushf mov std imul mov out jae and sbb cmpsl aaa in pop dec pop cwtl movsb add xor insl fildl pop sub pop outsl pop cwtl out inc ror jg sub sarl es inc subl and or adc cmovbe jmp pop xchg xchg dec cli pop push push cmp push ja test roll aaa push push addr16 mov cmp je xor ror (bad) in subl fs icebp pop scas in iret in cwtl (bad) and imul (bad) mov fcmovb test scas mov xchg (bad) push sbb mov xor push adc sub adc sub mov pop jo inc lds rcrb out dec dec sub dec out leave cmp addl xchg mov mov icebp popa and wrmsr (bad) adc cli (bad) mov mov lcall (bad) imul jno inc and nop les idiv stos jg cmpsl rcrb xor test xor and inc inc cltd sbb inc daa es dec mov cmp fwait ja pop cwtl sbbl mov jle xchg pop subl sbbl leave lahf lea xlat test cmpsl xchg hlt sti mov or loopne and ljmp fdivr xchg cmp dec add out inc (bad) jnp sarl ljmp mov mov and mov dec sbb (bad) cmp jns pop cwtl fs scas or and add sub cmp cmp pop push jo aas xor outsl xor cltd sbb pop ret dec push dec into adc mov movsl sub lret mov xlat mov aaa cmp ljmp sti pop mov push adc mov xchg add jnp imul pushf pop pop push cmp jle les es xchg mov pop fdivl ljmp xchg dec (bad) ror imul imull add inc mov pop sti mov (bad) movsl inc push jge (bad) mov inc das daa cmp int inc sbb xchg push cmpl fimull dec mov mov lahf or cltd jg adc loopne and jp jns lds sbb dec cwtl or enter sbb cmpsl (bad) in push in aaa aaa jg xchg push pop daa cld jns aad sti sbb ss insb xchg rorb pop scas adc sbb inc xchg (bad) add mov iret sub mov jns cwtl mov (bad) add rcrl cwtl jb inc mov ds lahf mov pop jns jnp iret xchg bound dec fnstcw dec mov lret pop into push int ret sub mov flds fcoml cwtl and in ss xchg in ret fcom cmc push das push mov inc dec jmp stos (bad) xchg adc push xchg mov lock and dec stos pop pop xor fstpt or xchg cmp movsl out int jg pushf mov icebp mov adc mov cwtl cmp aam out pop fldcw and xchg mov mov ret cmpsb in mov xchg shrb fmul inc fwait cmp cltd xor aaa mov or cmc sbb (bad) int3 leave les mov (bad) clc mov fwait insb cmp sbb test inc cld test lcall adcl fidivr pop pop jnp push leave rcrl xchg sbb stos aaa jnp pop inc and pop lahf pop mov std mov jp mov dec mov (bad) fildl or xor sbb add xchg je sete je jg test lcall fstpl fistp test (bad) fistp pop cwtl sti sbb xor sahf xchg inc inc sbb jecxz ret cmp push into sbb aaa cmp xchg fcmovu mov mov jg cli cwtl xchg fild inc fstps mov cltd sbb fnstcw xchg ss lcall jmp mov pop and inc lahf bnd inc cmc cmp mov jnp ret xchg cmpsl js int3 pop cmp cmp ficom lret jmp cmp pop test and nop sbb fistp mov pop lcall fadds aad mov push (bad) mov cltd lcall sub cwtl fcomps je mov mov (bad) jmp mov call mov in jnp lcall ret (bad) popa pop mov ds cltd add dec lahf nopl cli sub sbb pop lret inc mov cmp jnp dec push lret adc mov mov vpmovsqb sbb call repz cltd sti lahf dec or pop cmp hlt test jo fisubrl sub shl les sbb mov cmc and fwait mov rclb push bound pop sar aad aaa pop orl push lods sbbl and test xor pop movsl test test cmp sub pop mov ljmp xor icebp mov pushf popa push pusha dec xchg push loope dec fwait xchg mov rcrl dec mov jbe dec les dec push add and mov pusha adc mov jno xchg lds popf pop loop mov rorb adc daa xor negb outsb jo pushf loop in fistpll or push mov dec fisubr mov cmp or sub out movsb mov sahf loopne imul add xchg dec test dec mov cs jl cli xor xor jg xchg movsl dec daa (bad) cmp (bad) mov test aad and sbb cmpsl add ljmp and les xchg jnp pop and xchg repz xor mov test adc ret mov xor pop pop jle mov jp rcrb dec xor imul ret pop adc dec pop idiv sub xchg sub xchg sbb mov sbbl mov ret xor stos xlat add jo xor xchg hlt ss inc xchg lods add push sbb lds dec pusha dec sbb sub fs sub jbe daa pushf xor fsubs inc out mov mov (bad) stos pop minps adc push mov sub inc (bad) outsl mov sbb and cwtl das sbbl fcompl (bad) mov inc lds pop (bad) fimull aam iret and inc int add inc std cmp pop mov pop fldl2e xchg pop sti mov rorl fstl dec cwtl mov mov mov ret hlt jp jp insb aam cltd mov (bad) sub add xchg (bad) cmc adcb jge lds and (bad) sbb fs xchg push icebp mov jmp dec inc cwtl in cmpsb lahf mov std loope addr16 cmp cwtl outsb mov dec out xchg movsl out ss jbe pop pop je xchg js push xchg sbb ffree sbb cmp mov xchg cli fimull adc mov fs (bad) xchg and data16 mov lret cli jp ror jmp lahf sbb repz clc mov imul xchg jns jne lret mov xor hlt xchg xchg sbbb orl xor fbld test jl into lods xchg pop sbb cwtl mov cmp in jbe push pop daa and pop pop lods jecxz popf sahf psllq inc mov data16 out movsb nopl xor and pop jg push sti pop dec mov rcr sbb sbb adcl xchg add in jne mov dec mov mov or sbb lcall pop dec mov test dec add mov pop mov adc pop inc xchg fwait and add inc fwait xor lcall dec pop rcrl je and mov pushf push push push popf or mov jl mov and ret pop imul repz leave or mov sbb xchg adc faddl int cltd and lret jmp xchg gs test adc aaa pop aaa lds add ljmp stos (bad) loope ret sbb lods mov addr16 jge pop jmp add bound aaa rcrb repz (bad) xor stos dec sti pop push rcrb push cmp mov mov mov push out (bad) sti xchg setne adc adc scas das sbb or stos lcall mov lods xchg add push aad xor jns pop cmp jl add std pushf xchg mov adc stos lcall stc aad movsl inc mov xchg mov push repz enter out xchg adc (bad) jae add (bad) daa pop and pushf mov dec fucompp daa das jl stos pop pushf (bad) je inc lahf fistpl insb cli leave fwait aad adc push sbb sub sub xchg pop add add subb pop xchg nop and pop mov push adc push test dec jns lret xor pop and cwtl shll adc mov scas cmpsl push fidivl dec dec test and out js (bad) adc inc add cmpsb les dec lods cmp sbb (bad) sbb loopne fdivl adcl inc lret xchg insb mov xchg aaa lods dec (bad) mov call int3 mov fdivp rcl cwtl pushf dec lcall enter inc outsb jl xchg and pop lcall dec cltd xchg sub leave xchg jno cmp mov ljmp rolb pop test or stos mov pop test jmp push sbb xor ret popf ds pop test sbb rcpps pop (bad) jmp jmp xchg mov adc into inc pop test inc mov dec xchg int3 push mov fisttpl lock daa aaa jp test inc je mov inc sbb push xchg repz add and dec flds mov xchg ret cmp fcoml daa test (bad) pop cwtl in enter movsl stc out mov sbbl pop xor addl dec dec pushf xchg pushf test add xor xor mov fs sub (bad) movsb cld movsl mov mov cs or cmp fs cwtl out adc xchg cmp pop fbld fdivp pop fsubrl push addr16 push inc ljmp movsb lock mov or mov popa mov xorb inc sarl cwtl jno mov rolb ficom and (bad) lret dec dec or jnp popa cmpsb jp mov xchg test cmp fldenv (bad) or sbb int3 (bad) push into pop test jmp int sbb testl xchg adc mov sub pop pop pusha xchg mov xchg cmp pushf xchg sub sub and mov xchg add push out enter outsl xor mov mov stos mov cmc add icebp (bad) repz shll lock mov xchg cltd rcr xor imul icebp inc daa hlt push loop add sbb xor jg inc cmp jge lret add lods push add adc inc xchg lahf dec push mov mov cmpsl sbb cmp test xchg loop inc dec js je pop push push (bad) jb dec mov dec mov sbb mov push xorb (bad) lods testl arpl lret sarb xor mov andl xlat xchg push mov stos stos sbb xchg mov repz and dec push lret cmp cmp lods mov daa test mov mov cmp aam test ja inc fcmovnu xchg sbb int mov daa popf das test jmp (bad) cmp orl fidivl ficoml hlt and and pop repz fmul in rcrl aas lret loop jne adc jo dec loopne je and ficomp mov ss enter sub aas popf aas jbe clc lret sbb pushf push pusha xchg pop jmp cmp inc pushf adc cli iret popf aas shl testl test mov cltd lods dec xchg pop xor sti xchg movb int3 dec and cmc mov fstpl test test fwait push dec sbb outsb (bad) and imul cli push inc pop xor pop aad repnz rcrl mov lcall sti mov ds dec xor dec out movsl movl (bad) pop lret cmp scas xchg xlat inc out sbbl insb cld loop call cmpsb ret xor jg sbb arpl lahf sub pop pop cwtl (bad) rcll aas pop cli jmp js (bad) or mov cmp pushf inc jge (bad) mov ss loope sbb pop xor dec dec insb (bad) icebp and jmp cld les jl orl cwtl in xbegin xchg test cwtl das outsb xor icebp sbb iret fisttpl pop int3 push dec sbb sub inc mov inc push loop and dec icebp lahf and pop out jno mov mov jp in push andl iret scas mov pusha xchg jg mov pop sub cmp mov sbb out sub aas out mov lcall sub xchg adc (bad) sti sbb mov mov mov (bad) icebp mov sub push adc mov cs cli in pop cli xchg lret arpl adc xchg sub sbb jl fidivl jnp in push push aam xor or xor and pushf gs or xor insl xor jb fistpll jae fbld mov sti sti scas pop sti push sbb or dec add (bad) scas pop and outsb ret pop ja xchg test insb idivl movsl inc mov data16 aam jl or sbb push push cmp mov insl xor push mov and and ja repnz adc xchg inc stos xchg pop bound cwtl mov ret ja div dec inc mov inc pop pop popf push lahf fisttp pushf scas cmp insl movsb xchg jb jg clc sbb sbb push jp inc or mov cwtl lock insb dec inc jle fmul ja mov pop out cmp sbb sahf aaa imull mov fcmovu aam insl push mov sbb ret mov iret (bad) repz adc (bad) mov mul xchg leave jo cmp xor lock lock sti mov das xchg or or pop iret scas pusha lcall jl push mov xor (bad) cs aad lahf pop jle pop cmpsb idivl pop mov inc test inc dec adc xchg sub mov lcall loope (bad) mov adc movsb fwait dec idiv and mov push pop jb out sbb (bad) mov aad pop jecxz bound xor cltd jg leave xchg and lret add dec mov xchg (bad) mov lahf movsl mov cmc test inc push test mov in leave sbb lock sarl fcompl (bad) cmp pop xchg clc push lret mov clc inc test mov mov mov xlat out pop xchg stc add mov loop out mov (bad) fbld pop xchg jbe mov ror mov or xchg cmp subl stos pop data16 sbb add mov sti shr out adc in mov shrl pop xchg pop pop xor or insl sbb mov xchg arpl sbbl iret rcrb sbb sbb sar iret clc lea rcrl push xchg in data16 lret (bad) xchg pop cmpsl pop cmp push mov lcall xor xchg cltd push xor lret das dec xchg xor inc imulb negl (bad) int cmc sub push fs jmp sub ljmp jbe mov cld xchg iret outsb cltd mov lret insl subl cmp push lret aam leave mov insb pop pop pop and mov mov push jl sti js mov mov xor push dec inc cwtl inc cmp mov sbb sbbl fisttp adc adc or stos movsb ret fisttp pop adc push pop (bad) popf sbbl pop sbb adc mov sbb cmp insl bound xchg int push jg pop stos jg push push mov adc mov sub cwtl sub ret and aaa pop ret into (bad) xchg movsb leave and in cmpsb adc jg mov and dec or xchg or push repz outsb mov (bad) or cli stos cmp push popa incb inc iret pop ficom hlt push lret cwtl mov mov xchg repz or (bad) (bad) inc jbe imul fidivl jp (bad) ljmp cmp iret cmp lock cltd inc imulb cmc pop lods aaa call pop out xchg xchg negb sahf mov ror cmpsl inc sbb movsl aam negl iret shll xchg repnz lds add dec lea cwtl pop mov fstl push mov jmp inc sbb cld dec lock mov push mov push in cltd pop mov lret outsl add or cmovg sub mov add dec mov aaa imulb cmp cmp xchg xchg and add (bad) mov cwtl sbb and fadds xor pop push cmc jne cwtl sub sub ds data16 daa lret mov dec outsl cltd inc jg mov jne aam lahf enter ss jg pushf out push bound push mov adc cmpl cmp rorl inc mov jmp orl mov lahf mov lret push sbb xorl inc lock jne les or sub mov fcomi push cmp sbb inc rcrl xchg in outsl lcall sub js adc xor (bad) out lret xchg hlt iret fbld inc add jae pushf ja rcrl mov dec push jne push out sbb mov lds inc xchg lock shlb dec loope orl in mov pusha fcom jmp and pslld dec and xchg pop out and mov cmp mov lods std ja addps ljmp pop cwtl xchg addb and cmpl out hlt adc cmp xor pop mov ss jns (bad) xchg sub imul lahf mov mull adc pop out inc sbb cwtl enter aas sub jg std (bad) push mov loope jp mov sbb mov push rcrl lods cwtl xor icebp push fiaddl and and cmpsl lahf les adc mov mov dec add push pushf mov and xchg sbb adc jnp mov push xchg daa stos mov ss pop ror xor sbb pop test mov xor sbb inc sbb push enter dec sarl popa fdivs jp int mov cmp push leave xor mov mov pop ljmp sbb imul mov and and (bad) arpl cmp pushf cmp aaa cs addr16 add insb mov sti mov mov (bad) lcall std jl xchg xchg mov jmp sarl out fistpll sti mov (bad) cmc inc pushf jmp cmpsb pop push test orl dec dec cmp fwait inc sti lcall loop stc shll jge sbb jg (bad) aad cld cwtl rorb jmp mov repz cltd inc insl pushf inc (bad) sbb dec fcmovne fs dec xchg mov xchg xchg ds sbbl scas mov cli cwtl push jg fist mov or xchg push ds outsl mov add fucom mov push add out mov jl xor pop cltd sbb neg pop pop (bad) sbb pop shlb insl fimull mov jns pop xor popa imul (bad) dec pushf jl sub sub xor sub scas xchg mov adc lcall pop rep ficom out test cmp xchg icebp cltd iret xlat jne and es push fmul jno dec mov (bad) loop xchg (bad) enter push push push sti cwtl adcl cli sub push xor dec xchg jmp pushf push dec lret cmc (bad) daa imulb lcall imul aam cltd test test cs nop fcmovnu or mov les mov fcmove (bad) sub push negl mov push pop testl enterw je (bad) and adc int mov mov adc movb hlt les sub lret lock fptan mov xchg and mov ljmp sarl repnz sbb xchg rolb insb jge mov jns xchg mov mov ss leave pop push push xchg sbb pushf in sub (bad) into shrb icebp mov out lcall push cltd fimull lea ljmp sbb lret jle xchg iret add xchg test mov fstpl or aas dec cmp rcrb xor sub (bad) mov (bad) cli repz inc decl and repz inc inc loop rcrb (bad) cmp xchg aaa pop mov pop fwait add sti and jg cmc arpl sbb sbb mov iret mov lret mov push pop and sbb ja cltd lds jl (bad) cmpsl and leave insl cmc out cmp dec cmp data16 mov shll sub cmpsb push inc dec jns test xor add data16 xor cli jmp xchg ljmp xchg pop (bad) iret mov call gs jmp mov adc mov dec stos sub cli sbbl loope pop cwtl das or push mov adc cmp add dec incl adc inc add pop jmp add adc sbb inc xchg jne cmpsl mov shrb test data16 push pop pop sub cmp cmp ret xor cmp pop out dec fistp call push pushf out jmp pop pop sysret jnp outsb fcomip and add push dec push int mov in rorb jo inc pushf cmp xor imull aam push push imul std scas mov dec dec mov hlt pop jge adcl mov fisttpll jo rol sbb adc jns sub aaa jp sarl or cmpsb mov push lods pusha xchg jnp nop jmp inc and pop pop imul sbb repz test pushf es inc and movsb hlt push rorl iret repnz (bad) fistpll pusha pushf addl xchg (bad) jo pop pop scas mov adc mov sub mov cwtl mov and xor pop pop outsb lahf push rcll sub mov or lret fldenv jb mov jmp cltd jo ror pop add adcb and pop or pop fiaddl inc xor aaa inc or push (bad) (bad) jb das lock cmp hlt or push (bad) (bad) mov or xchg push test push lret cmpsb jg mov int3 lds pop adc xchg inc xchg std repz imul jnp inc jle stos dec dec fwait (bad) jp sub pushf mov jg mov bound sbb fistpl mov cmpsb pop fbstp outsb ja mov push and pop fistpll fcompl add popf dec jg sbb lret out sbb mov xor fdivl sti add jae sub mov pop sarl cltd mov roll inc (bad) sbb inc sbb mov pop push pop fs test mov sbb flds ljmp cmpsl mov (bad) daa pushf add imull test lds jmp ljmp pushw pushf icebp xor rcrl jp call pop sub inc pop lcall xchg inc dec mov xor add insl xlat lret mov pop (bad) lret add sub pop ficoml faddl mov ffreep aam lea and inc pushf enter jmp mov or xchg fmull and (bad) movsl push push popa add fwait lcall fwait add dec repnz addr16 mov jns add or mov xor mov ja xchg into jmp or sbb cmp fidivrl mov aas push xor sarl xchg xchg xor or pop inc test fs fsts dec repnz lret rcrb lcall leave negb (bad) mov add add pop sub mov push arpl mov mov fildll loopne in mov lahf add dec out xor sbb add adc loope mov ret popa (bad) stc lahf repz shrl pop push inc jg fxch pushf add mov inc pushf rclb dec cli xor ret lret mov pop mov cwtl cmpl int3 in repz and mov xchg xor ret aad jns shl lahf lret inc movsl push dec or xlat jns pop sub adc mul mov out add mov and inc dec xchg sub and dec fcompl insl mov call mov fidivr ja pop scas pushf push xchg movsb inc xchg mov cmp out iret cltd mov xchg mov inc mov fsubl mov mov mov jae lds cmp repz rcrl ret xor xchg fs mov pushf jno mov or fstps xchg xchg mov or lods lock adc and pop aas (bad) mov inc ds icebp leave inc scas fildll in cmp xchg mov movsl mov pop and cwtl (bad) inc (bad) fadd cmpsl pushf xchg hlt (bad) sub mov insl sbb push push popa mov popf lds mov adc mov pop in mov or xor inc add xor inc pop cli stc out (bad) sbb lgs pop cmp xor push mov adc pop and adc pop xchg les hlt iret push repz cmp sbb andl pop scas cmp mov xchg rcr popa inc lods cwtl mov lock xlat adc insb (bad) mov jmp int3 ret jae mov enter mov jle (bad) xchg sub pop push loopne push out adc movsl add fcomps call xlat loop sbb shrb nop jbe cmp dec aas pushf and jnp sarl mov or mov aaa adc or (bad) or pop xor pop adc cmp ficom (bad) inc and movsl bound push mov xor inc aas inc popa pop lret jle fistpl mov xchg and imul jae and cmpsl sub inc jg repz sbb neg (bad) pop and leave jne dec lcall lahf dec (bad) adc lahf cmp dec lcall les scas pop add aad push mov inc adc das or pushf pop sbb imul or aas pop mov cmpsl aam cli mov sbb daa aas sbb inc negl inc daa sub pop dec cmp mov inc pushf stos pop sarb cwtl repnz adc jb (bad) icebp aam jg pop pushf lea cmp lods das adc or (bad) pushf insb inc imul ret jne sub cwtl adc adc jmp jmp fildll jmp fisttpl pop movq mov fwait pushf cli cmpb (bad) out inc inc fbstp push pop neg aad ja mov and stos cld dec je sbb (bad) mov ret loop test in cmpl xchg mov mov lret inc dec decb push adc jp jecxz and movsb sahf inc jno or xchg pop lret or jnp pop cmp movsb sbb lret push cltd sti adc pop xlat test push jno (bad) scas aas pop imul (bad) xchg pop xor aaa jno sbb cmc mov repnz fldt pop adc aaa mov (bad) (bad) push dec jle mov sti sub cld fsincos jns add pop ds jg aad add outsb dec in pop lcall mov out add nop (bad) notl pop mov loope inc pop popf xchg test fmuls fiadd out fisttp pop or les imul loopne cmp jle,pn pop pop adc mov xor mov sub sbb jo fist (bad) arpl add out lcall adc imul cmp test (bad) into das pop pop push cmp ret es adc sbb repz and push xor popf fild out int push jp fcoml cmc loope mov sarb inc or adc pop pop out popa mov (bad) enter mov mov rolb mov cwtl cltd ret pop cmc (bad) outsl pop mov xor (bad) aad stos fcmovnu aas ljmp repz pop sbb insl sbb dec xchg push into xor push adc in es push movsb cmp xchg in popf cmp inc pop pop lea xchg sub push cmp pushf sbb dec iret test imul pop push sbb data16 call ret stos ficompl mov scas addb insb (bad) pop imul pop mov sub sti lahf jge orl pushf dec movb into mov ss sbb or scas rcr mov shlb adcl icebp cli cwtl imul fimul stos fsts outsb push fistp arpl arpl xchg and mov mov fildll sub or adc mov lcall pop addb sbb mov or shll pop xchg leave mov fistl push or xor stc pop sbb inc cmp xchg sti jge jmp mov mov fwait pushf lcall mov int3 push into push jg repz xchg jae cmp (bad) mov subb (bad) mov and pushf (bad) aaa or lods xor iret (bad) mov push sbb sub test mov jae jnp test iret or dec cmp push ficoml fmull addl jbe cs xor jb or iret outsb leave icebp mov leave cwtl xchg xchg scas fimull xor fwait insl sbb ja cltd andl jns xorl sbb cmp (bad) add insb test (bad) aaa pop stos out inc dec lea adc xor movsb cmp clc fisubrl in adc into sbbl lret mov fisttpll mov lahf mov mov je cmpl clc push icebp cwtl or or fist xchg push xchg sbb dec mov or xchg pushf (bad) fld push pop or mov rcll pop lcall inc arpl dec xchg or pushf jo jl inc xchg imul and pop pop cwtl sbb bound jge cmp xlat sbb das les (bad) fnstcw xchg xchg adc fyl2xp1 (bad) stos jg pop fwait pushf rorl inc stos les dec adc std adc (bad) js mov xchg xchg fwait push mov in cld cmp mov and mov xchg mov xchg mov push aaa cli sub push lods mov sub lahf imul pusha cmpsl ljmp push insb (bad) mov stos cld in xor ja push out xchg repz (bad) adc jecxz push ljmp repz inc mov dec xchg mov jge psllw lcall bound fdivrl flds and mov daa inc dec cmpsb (bad) push or fstps jne fsubrs and cwtl push xor pop fldt fistpl (bad) enter mov mov pushf or mov or mov and push jno addr16 sub lahf ss push mov jge aas xchg mov std fistp jle jno repz sti mov dec sbb mov (bad) jp pusha adc dec adcl jb dec lahf push dec repnz scas fstpl stc movsb loop fildl cmp sub fs addr16 addl cmpsb mov orl movsb cwtl loop adc out push mov lods jns sub and fist cmpsl lret pop xor lahf not mov lret push lret adc cmp mov sub mov pop cmpsb push inc sub int3 push cltd mov cltd xchg sbb cmp pop jle adc les and es outsb jno cmc jl loop jecxz lea and pop gs pop or pushf sbb (bad) icebp or icebp ljmp adc mov (bad) loop inc stc mov pushf xor adc out jnp xadd or mov xchg fwait ljmp loopne push repz aas dec stos lahf dec sbb inc repz jne mov sbb cld xchg xor rcrb sbb cmp fstps sbb (bad) data16 sub adc inc lahf push outsb adc sbbl pop cmp (bad) adc jmp adcl sub lret sbb fwait pop inc or popf adc adc inc in pop in cmpsl imul inc xor xor xchg aas mov js fyl2xp1 inc inc leave push aas lret (bad) mov data16 loop,pt lcall mov scas pop adc xchg and jecxz push sbb xor xor fdivr lret inc ret cmp cmp push xchg xor mov adc aad dec mov push jno push mov les fidivrl insl daa add in data16 dec jns jmp out repz pop je adc xchg xor jmp das test (bad) stos shl data16 andl shrb dec sti cltd mov mov mov pop outsb adc ffreep cwtl dec repz pop jmp pop xchg cwtl mov mov enter iret xchg push leave sub inc sarl jne (bad) nop dec xchg (bad) (bad) clc pop mov cltd movl sub js pop xchg cwtl push int3 in adc addl outsl decl jbe push hlt add iret negl jle mov jae stos in out shrb das imul (bad) lahf fsubl inc and fucomi and out jo pusha stc add mov sbb adc aaa add sbbl (bad) sub push ja jb adc inc cmp sbb sti rcl and lds add and iret mov das inc cwtl lock mov aam dec andb leave sbb sub push gs insl leave or mov adc cwtl pop jmp jns cwtl jle fwait xchg ljmp jb (bad) xor pusha xor xchg add lcall pushf or (bad) idivb sbb lahf fwait xchg pop or sub rolb out cmp popf loope sub mov xor aad pop cwtl mov jb in popf pusha or mov mov cs jae xchg cmp fwait aas xor cli dec out dec inc cwtl push loop mov sbb lock jns fsubrs shrl rol cmp push inc loop push inc jle mov (bad) jno shrb clc inc lods push pop xchg lcall (bad) mov mov sub mov jmp ficompl in enter jg mov xor inc inc and outsl inc cltd pop push loope fcmovnu cmp (bad) subb lahf dec mov pop mov push mov bound roll stc rorl int sarl and iret (bad) xchg pop fnstenv (bad) mov cmp pushf data16 popf mov sbb test fwait stos popa adcl pushf rcl cmp adc cmp lret orl rcr xchg (bad) mov adc pop inc cwtl cmp call xor aas pop or xor fnsave pop cwtl push ficom sbb sub pop jae out mov mov sbb cmp inc mov push xor mov adc sarb fist mov inc shlb (bad) movsb adc fs icebp lods lods jae pop pop jmp xchg shll cmp pop or dec push je inc jb ja xor leave sbb jb clc cwtl jmp stos pusha popa pop dec mov xorb out lods daa lret or daa inc stos pop mov or popf and inc fisubl pop cmpl xor out mov shll mul (bad) fild jno fwait lock (bad) and ss int xchg js mov pop cmovno jp mov (bad) adcl mov pop lcall sbb dec mov (bad) repz push push sub sub sub cmp cmp stc add fcomps cmp mov xor sbb push sbb leave jl das fldcw xchg je popf adc setle pop cmpsb cmp les sarb or (bad) fwait jle test xchg dec ficompl sti aad scas fildll xchg rolb cwtl mov out mov push dec dec mov ja rcrb std cwtl push jecxz mov push mov insl and xchg adc inc push cmp cwtl pop xchg push es shrb aaa daa movsl imul aaa pop mov xor pusha scas outsb test adc (bad) idivl jne inc jns push scas loope cmpsb js add outsb fisttpl ljmp mov sahf and in lret mov dec mov xchg rorb dec and stos dec subl xchg (bad) movsl sbb and pushf push popf xchg sub popf dec jle adc xchg sub mov inc pop divb dec push pusha mov add stc shl pop aam cs jmp mov jmp push mov popa fs fidivrl push cmp in add jns fist leave mov dec mov ljmp sahf xchg push and mov cmpsb (bad) leave jg aam cmp dec mov lds lcall mov stos xchg inc cltd or (bad) iret sbb inc jecxz xchg cmp outsb lea and sbb sbb fcmovne push clc dec cwtl push mov push xlat pop les lea cmp add pop test outsl iret jg mov jb cmpsl (bad) orb jne dec fnstcw mov and xor gs xchg fcoms xchg mov inc pushf in mov push (bad) (bad) ljmp or es or dec fcomip cmpsl adc pushf (bad) cltd and sbb cmp xorps jge lods xor sarl sti iret xor dec imul push add fimull ficompl cwtl xor mov xchg or sarb inc mov repnz mov dec xchg xlat js mov and inc pushf loope mov xchg mov add pop mov je ror int3 sti sti xchg outsb (bad) pop xchg mov out inc data16 (bad) stc call jo mov inc mov inc xor sbb inc xor fsubrs lea lock repz divl mov icebp pop push daa dec pop fcomip fwait call pop sub enter or or lock icebp ret ljmp mov into xchg rclb dec xchg test mov add inc repz enter icebp sbb push mov jno push push mov add (bad) xor loopne jns (bad) fistp iret and pop out jg add test bound or dec aaa adc push push loopne aas mov (bad) repz pop test dec xchg mov inc push stc and lds xor inc dec lds and push (bad) sti cmp cmp pusha iret push subl data16 fwait add mov jecxz mov adcb adc daa xchg ficomp fwait js icebp leave mov rclb loopne lret pop je int in stc mov fsts test iret inc jle (bad) cli movsl scas mov (bad) pushf cltd mov data16 or test mov in insl repnz push jae cmp lahf call shr xchg ret (bad) xor jno cmp lock negb mov cmp es int3 xor jle pop jle cltd sbb and shlb xchg sbb push iret cwtl xchg fwait sarl pop pop nop mov (bad) roll xchg xor addr16 push mov cld sbb adc mov and cmp fistpll push test jecxz push rcrl ss mov inc das pushf sub mov dec push shlb jb cmp popf mov aas aam js xchg add jecxz div fimull jg inc push lret xor jb mov scas mov and repz sahf push pop call (bad) leave dec sub cli bound jbe movsb and mov or push cmp test lret sahf fiaddl mov repz or mov pop pop (bad) mov sbb adc mov pushf xor out xor and rolb lock mov xchg inc mov lcall inc pop mov sub xchg pop (bad) insl dec cmpl das imul push pushl test ds shrb out add pop inc pushf gs imul mov adc ja lea xor les ds sub adc add cld test xchg adc iret jno out mov push mov pop test push cltd jns pushl repz mov jns pop inc and (bad) mov mov mov xchg jns cmpsl push sub jbe icebp into jne icebp loope dec int sti cmpsb scas jnp jae adc les (bad) cwtl jp mov fldenv push mull and aas je adcl aaa in popf push sbb jge push xchg stos icebp xchg sub jle (bad) pop je cmpsb adc adc fsubrs aam cmp xchg scas mov cmp cs dec sub mov and inc call cli lahf hlt push mov aas rorb pop gs xor leave movl iret sbb (bad) pushf xchg push cwtl fcompl push lahf sti scas int mov cmp inc jns ljmp in adc mov add lahf js mov pop push out outsb or mov push inc pop cwtl mov xchg sub inc xchg iret jge,pn mov push and sub mov dec iret jg mov pushf int3 cmp clc jne sub cwtl xor arpl push mov jnp xchg dec sbb inc mov mov pop fcomps imul daa cmp lods push out pop fistp cs push nop in adc adc jg mov pop mov mov iret xlat dec jmp mov push sub int3 hlt mov movb cli (bad) mov mov adc fs jne or clc cmp pop test sahf call in xchg pop setl inc iret mov cmp pushf xchg fnstsw xchg sub pusha lods leave test lret sbb mov scas aam mov xor xor cltd fmul push in add (bad) jl and pushf daa sub xchg jmp popa mov repz (bad) icebp aaa mov sub xchg inc shrl dec rclb fs popa aas ds fistpl sbb pop leave pushf xor pop call xchg ja pop fsts mov adc lcall (bad) fdivrp push cmp fadd inc and pushf cmp repz inc lock pop mov add js xor jle sub fstps sbb push loope xor push mov xorl xor mov sbb rorb xchg test dec inc sbb sbb fdiv mov mov test mov cmp or mov xchg push ficoml push imul imul ret std pop dec cwtl ja jle xor aam mov jle ret iret (bad) rcrl mov sti mov inc mov xchg dec xchg pop call loopne loope cmp addr16 add xchg cwtl loope fsts mov dec cmp icebp mov insl repnz les adc test rolb inc pop jl lret sbb nop stc decl lcall xchg hlt enter or orl repz push push lret cmp sbbl mov adc sar sub cmp pop push adc fwait divl outsb das das push aas cmpsb cld (bad) les sbb pop ljmp rcrb test adc push jmp sbb aam jne cmp sbb jmp lret jge push fwait sete cmp add lret push jg mov pushf hlt cltd push xor add (bad) ljmp pop cmpsl cmp (bad) lea dec (bad) movsb sub sbb mov leave mov rclb adc push (bad) ds andb mov fsubr (bad) rorb add cmpsl jmp sbb adc popf out mov idiv je xor (bad) xchg and int jg imul iret jl sbb add lods xchg xchg mov mov jae into sahf mov repnz int lret mov sbb push aas pop out xchg xchg xor and loop iret cmp xchg pusha push insl inc das sbb add sahf mov cmp cmp lea dec js (bad) int3 rol movsb leave nop (bad) repz int3 lock fmuls xchg jmp and jg pop cwtl add icebp fist jmp xor aam and or pop mov pushf sahf xor pop pushf mov rorb cmp (bad) cs xchg test addr16 loop loop mov paddsb (bad) xor lcall inc jmp fsubl ret mov pop sbb stc push lret sti sarb mov xchg mov xchg fsts movsl imul xchg sbb aaa lahf inc in pushf std popa cltd fldl mov repz or mov xor jmp xchg mov pushf fsubs ror add adc mov jno testl pop negb inc pushf enter leave mov les sub cwtl test mov lret cmp pop pop mov mov cltd push pop dec push cmpsl mov cmpsl sti andb fsubrl inc sbb fsubs (bad) out push pop test je xor cwtl sub xchg popw je loop pop repnz mov mov icebp (bad) sub mov out mov mov (bad) mov pop push ficoml mov cwtl jl xor pop iret hlt adcl adc jp subb dec pushf cmpsl fldenv hlt mov mov add es fstps mov push inc stos mov stc dec or aad sbb sbb adc cs dec xor inc das stc sbb mov add sti mov mov inc cwtl test ret jo scas push je pushf fstpt xor mov lcall jb add jae add mov test ja mov cmovo add sub jo aaa sbb lds lcall xchg lcall mov mov cltd shr andb jp xchg add cmp fnstcw (bad) cwtl xor cmc imul or adc dec mov pop and jb in xchg jbe cltd clc test aam test cwtl xor mov repz leave pop je icebp xor lahf sarl add adc dec xchg lahf mov push add fbld mov pop in lret mov inc mov xchg in mov ds jp pop insb pop outsb sbb mov sti aas dec sbb lret into test or and pop xchg and mov fnstenv jmp fistp mov rcl mov (bad) push add fcmovne jae es mov push xchg js dec movsb dec and push inc sbb cli pop xchg adc test jmp das push cli pop bnd cmp push leave jge cltd lds rcll adc sbb or push popf mov fsubrs mov xor (bad) int3 push cmp and mov in out rcrb pop loope or jg adc sarb pop clc (bad) cli jg cmpl add pop xchg shrl into lds mov cwtl fild int or add iret fistpl je into sbb push fwait hlt sarb push or cmp movsl cmp insb xorl inc push xchg pop cwtl jno ds rcr lret pop into dec into pop xor xor inc mov das dec addb xor xor addr16 cmp imul imul or (bad) enter push ds pop cwtl sbb add jo mov or (bad) jns mov aad mov imul mov xchg orl int lock dec iret cmp lcall jle rcrl push xchg jo sbb xchg (bad) add inc stos sub daa fcmovu mov (bad) mov and inc cmpsl inc nop sub push xor mov js inc xlat jl and mov jg push sbb inc inc ret leave fldcw cmp xor pop out mov ss je (bad) out mov xchg das xor (bad) mov daa fistpll xor mov cmp cmp imul xchg cmp or xor rcr xor or les lods push pop ds aam pushf movsl jno dec pop lcall imul sbb pop sbbl mov sbb or mov pop and pop in ret aaa pop sti cmp pop mov pop jl dec (bad) cmc pop (bad) insl sbb popa xchg mov stc fldenv xchg jne stc fcomps adc or loop fdivrl test cmpsl mov (bad) or lret ljmp icebp mov mov addr16 sub sahf sub adc push xchg dec sbb jl lock jp and ret dec pop push add cmpsl ret mov adc xchg mov cmc adc pop pushf das mov ss (bad) inc out aam and mov (bad) mov rclb mov lds ss jo stos cwtl orl cmp bound data16 jl mov mov push inc xlat xor dec xor pop xchg jmp pop (bad) mov push sub xchg pop xchg (bad) mov push test pop sub call pop fild bound fnstcw pushf mov mov dec call stc dec pop push lahf adc popa loop dec mov ror dec out mov sbbb and jno stos xchg pop push dec mov push aaa std inc popf mov xor cwtl repz dec das repz jp nop sbb inc stos lahf jnp test mov sti leave pop jecxz movsb test pop out sahf xor push sbb jg popa fwait pop mov push ficoml sahf (bad) mov fldcw add cmpl mov sarl pop pusha mov push mov enter aaa jns loop or cli es cmp leave adc pushf xor dec dec mov (bad) or pop movsl push jne pop cwtl repz xchg fwait xchg jmp mov pop es cmpsl fisubrl cmp fisubl shll ja mov int mov iret inc xchg push cmpsl add pusha mov add test ret dec lret (bad) iret sub xchg xor pop mov lret xchg (bad) cli (bad) cltd cwtl insb sub adc fstpt mov adc call mov rorb xor mov stos fld cli lret cwtl inc mov dec xchg adc movsl popf cmc je inc jns test popa pop repz fist lret xchg enter iret jmp mov mov inc pop pop lods mov pop cltd mov sbb cli cwtl scas fstpt xorl and fistpl sbb sbb jbe xchg aaa mov sub inc fcomi adc shl pop leave xchg mov (bad) aaa pushf scas test mov cmp subb adc mov lods cmp cmp pop jmp andl subl mov xchg dec lods xchg std mov popa mov aaa mov push cmp mov popf lock jno pop mov xchg out xlat scas aaa add xchg jp call lea add lock aam pop mov mov fmul pop mov je mov mov mov sub out jle je jmp pushf push clc mov shlb insl inc lods lahf clc repz xchg cmpsb lock daa sbb cmp out mov cmp orl mov repz xchg xchg fs jp mov mov and xor xchg adc push stos pop mov notl inc (bad) or mov mov loop or push sub push cmc push cmp xchg jp push lret push mov and push pop test mov inc aam and mov dec sbb pop stos (bad) outsb mov and sbb stos add add jle fstp test testl pop mov lahf mov adc test int sbb cmp xchg or pop pushf sbb xchg in es ret cmc leave push popa aas cmp in sbb mov fdivl mulb fwait lret (bad) xchg push mov fstpt xchg push xchg adc int3 popf xor mov adc or lret mov negl pushf popf aas leave pop rorb movl push aad pushf popa jecxz fildl xchg jle pop mov nop rep data16 pop addr16 sub mov inc por push lahf int xor push cmpsl into pop leave push out add fcomps cs fstps jns xchg inc xchg enter push mov jle xchg mov fldenv mov test div xor dec lods fst mov dec mov fnop pop ret scas sahf xchg orb jbe cwtl mov (bad) pop idivl cwtl adc pop jle sub xor (bad) jle xchg and pop and xchg and xor out sub test lahf xchg jp adc jb mov icebp lock push inc mov cmp sbb mov pop and mov inc aam mov clc mov movsb fldt fstpl adc xchg inc xchg fiadd (bad) mov pushf (bad) loop sub sbb pushf cmc xchg imulb mov jmp fs mov jecxz jp fucompp xchg cmp ret into scas jl fistpl stc and mov (bad) imul push js push cld xorl out mov iret neg sbb loop jg jbe sub sub pop cmp or sub push sbb lret nop gs subl aaa (bad) dec ss jnp iret push cli bound adcl xchg lret jns add leave pop push (bad) mov inc mov test pushf dec jge lret fnstcw xor sbb dec xor push ficoml push cli cmp je (bad) cmp inc xchg mov pusha cli iret (bad) lea out insb aad addr16 sub (bad) sub xor cld cmp (bad) mov icebp (bad) iret les in sbb adcl mov pop shr cmp jg and inc mov lret sbb mov nop cld xor into pop pop cmp into call add xchg cwtl cltd or lcall push adc testl mov mov fdivrl xor fistp daa add ss xchg mov inc dec mov (bad) rcrl add test mov mov add pop jno scas mov outsb jl cmp jae adc ffreep xchg mov sub fstl mov xchg (bad) and and insl aad sub jae xchg pop jno sub mov adc outsl test daa jo pop icebp lahf cmovs pop inc ljmp (bad) mov out add cmpsb scas cmp mov fildl lock shl inc push shl fisub mov mov test jne xor insl mov mov cs fisttpl loop adc inc cwtl mov sub insl stc push scas add pop (bad) cmp or ds iret idivb stc orl fld rorl mov cmp push sti ret es icebp mov sub imulb cwtl gs dec inc loope mov (bad) or mov cmp je jne dec (bad) sub jbe mov daa das xchg pop adc xor insl add pop xor mov rorb lcall jne fdivr xor pop inc pop leave das cli mov lret je dec inc int3 xchg pop fstps push lret movsb cmp mov push sti lods mov dec and cmp push inc add xchg or sub mov push aas outsb mov outsb sbb pushf loope lret decb dec mov rcrb popa icebp hlt out inc xchg xchg and call mov mov dec pop scas mov lret jge dec xchg cld jbe (bad) xor les and pusha ret jnp dec sbb cs popf pop jb mov movsl ret fldl push test sarb pushf andb fwait (bad) or lret pushf jbe popf push push (bad) int3 xor mov (bad) cwtl mov (bad) test xchg adc sbb mov pop jne clc xor pop rclb mov (bad) xchg cmp pop fstps jae aas sbb daa mov xchg sub mov xchg fcmovb cmpl sbb insb movsl in push loopne,pn add imul lds jo outsb jg hlt cmpsl test jl incl inc and cmpl jecxz mov arpl push lahf add repz jns sar and addr16 popf fcomps dec pop fs xchg out or cmp add fidiv pop push fstps sbbb cmp pushf imul (bad) lret in shrb fdivrs cltd rcrl sub repz in lods rcll divl lret adcl and pop pop out xor inc leave insl ljmp sub sbb dec cmpl scas loopne and imul out out sub stos xor int3 mov mov hlt dec out out test das imul cmp or cmp rolb sarl leave cmp adc xor insl mov sub les and adc adc pop mov pushf ds cmp jecxz sub sbb rcr ret int mov (bad) jno xchg or sub dec in lock or sub rcll test jl ud2 lret push mov lock (bad) pop push fidivl test rorl pop lcall xchg addr16 ret mov lea fbstp pop sbb into mov mull sub or (bad) jo mov jbe movsb loop add call mov jno (bad) in push xchg gs imul data16 pop xchg push iret fstpt pop ret sti push sub and lret in data16 stos arpl cwtl adc aad fcmovne or or cmp ss popf js xlat sub adc add ds sbbb stos shlb cmc mov mov pop orl push test cmc imul std test mov out mov mov ss push popa ljmp repz mov fisttp out pop cwtl outsl mov imul push or push and xchg push pushf (bad) hlt push imul push add mov jo test jle sti sub inc (bad) jb (bad) push (bad) stos xchg sti imul adc xor cld mov ljmp jnp hlt fiaddl test pop insl xchg push repz mov fwait into pop cmp adc sbbl pop mov xor xchg mov insl ret call out sub je in inc and int xchg pop dec lock xor fistl add xor xchg add in pop out pop fcomps ret inc inc mov jg mov push jge jb sbb out mov lcall xor (bad) pop add outsb mov sarb pop lret call cmp pushf jg fbstp add xchg sub fild push mov mov into fdivrp popa pop cwtl or xor (bad) jno pop adc xchg jae mov outsl pop or xor mov pop das out repz mov (bad) jno add cmp mov push mov in sub and stc iret stos lods jle mov mov inc pop insl into adc aaa andl xor fwait leave pop mov pushf mov fstp das xor daa (bad) aaa aad xchg rol outsb aaa xchg pop movsb lea or dec pushf pop add or mov faddl pop imul fimull add out repz ljmp lret mov insl cmp dec pushf mov cwtl push sub hlt mov mov stc adc lea mov or push mov and js inc sub stc push xor lret dec repz mov mov cmp in cmp out addr16 mov mov fbld cmpsl lock push push cwtl (bad) sahf mov or mov sbb push leave or arpl lods cld or add or mov jne pop pop sub push push mov adc xlat sbb (bad) fwait mov jle and and fcmovbe fwait ljmp test loop lret add cmp sti in leave fsubs xchg pop inc mov push aas in xchg push and push xchg mov push dec jle adc mov outsb fcmovnb cwtl popa or xor pushf (bad) hlt jb cltd sahf mov xor in enter popf dec shlb je shr pop lcall aad ret mov lock ror rol mov ja dec add cli xchg sbb and aad sub jmp xchg inc sbb insl push leave mov sbb fildl in mov insb movsl cmpsl stos push (bad) roll inc adc mov aaa pop mov out loope loop (bad) call cli outsb insl adc pop sar jns int3 (bad) dec push cmpsl push xchg cmp jns sub icebp fildl mov or ret mov cs or or jae xchg dec pop jnp xor imul jg aas mov fwait push dec sti push xor popa movl cmc std mov sbb xor loopne loope jb fwait cmpsl and xor popa movsl inc bound mov sub mov add enter xor ret inc and loopne adcl cs jno inc hlt or fcmove int leave les adc mov ret or jne xchg stos mov cmpl push in mov jle fbstp lea pop sub loop ret sub lock cltd fistp fwait rolb pop hlt call dec lock xchg pop or clc pop lea pushf aam pop shr loope sbb sbbl lcall dec pop pusha (bad) sbb mov xchg adc iret clc loop imul mov jp gs adc loope mov lds (bad) mov outsb clc in adc or adc (bad) stc test lret jns xchg shrl pop jecxz jg (bad) push pop or (bad) xchg loopne gs in psubusw pop cmp push mov add xlat jecxz inc adc pushf dec inc rcl pop mov sub clc sbbl jp cld adc mov ret pop push cmp pop mov jmp mov scas push lds cmc cli jle fmul push pop sbbl mov jbe aad mov sub inc das rcll rcrb add sbb iret into mov push push lods fcompl xor inc (bad) xchg add rcrl or xchg cmp fdivrl daa fwait insl and lret sub sub test xlat (bad) repz es inc push out mov movhps pushf aad mov cltd or ss sbb stos test and (bad) je fcmovbe mov fstps (bad) outsb jg (bad) or lcall jp aaa inc stc mov jnp test ret jb push jo fnsave (bad) push xchg nop nop inc xchg mov lret xchg cwtl aam push (bad) push cmc pop xchg cmp pushw fisttpl aam scas xchg dec frstor mov dec or pop dec lcall push popa xor pop cld add or out je lea or hlt pop imul inc mov xor sbb daa lods xchg aaa and mov mov addr16 xchg sbb cmp test inc sub idivb pop aas es and push aad ss lods daa scas repnz sub aaa mov iret insl xchg and and icebp and sbb (bad) (bad) stc jmp jge out int push (bad) push mov cmp cmp xchg (bad) xor (bad) fbstp and pop mov out push mov inc (bad) fbstp dec dec out cltd mov sbb pusha adcl andl xchg sti cli mov add dec daa push fnstcw xchg sub dec add daa mov cwtl mov cwtl cli mov push mov mov push popf inc cmp (bad) imul pop mov push sarb enter pushf cmp sahf dec xchg ficom popa cmpsb icebp mov sbbb pop mov xchg pop pushf mov xchg and push sbb jge daa mov dec imul xchg adc movntq mov pop pop fwait dec push cltd out adcl add push pop jo sub pushf mov sbb xor adcb xchg call fwait add les (bad) cwtl lret adc sahf jg mov pushf jo fistpll sbb push in inc lock shlb mov cmp in or ret into cld xor jns test js inc xchg loope or xchg cs cld aas daa adc gs push fdivr adc pop xchg or or popf cmpsl ss jbe int push jne icebp sbb mov fisub mov cmp jbe sub cmp fisub jg je inc lahf jne inc sub pop pop adc es (bad) xchg enter stos cwtl add jmp push insb decl inc mov adc (bad) repnz mov sarb test cld fdivrl fwait jg or imull mov (bad) cmpsl push pop int cmp lods xchg cli cwtl xchg mov arpl pushf shll adc icebp and mov jns fwait into jae sbb das mov and icebp jno out lret add fsincos stos outsb (bad) jno insb dec push mull mov fwait rolb inc in xor mov test fwait sub dec cmp (bad) mov lret mov push mov lds inc mov xchg hlt mov inc aas push (bad) jo mov (bad) dec inc cwtl push rcll pop test (bad) pop sbb popa fwait xorl sbb xchg xor rep jns cmpsl pushf sbb ret pop mov cld stc push cmp and pushf rcrb sub adc nop imul cli lods lahf leave cld sbb inc cmp repnz shlb or mov inc push scas fs inc mov into add sarl fisttp (bad) jo fwait popa pop sbb or enter dec pop pop jns fs xor jg sbb and popf dec mov icebp dec daa mov rolb dec and inc pushf pop jno jo push fstp pop pop dec mov js inc push mov inc pushf xchg call or adc push and leave xchg popf mov sub and push adc fs cmp (bad) stc sahf mov adc pop clc test pushf das push jno imul in addl rcrb fistpl test or outsl aas cmpsb (bad) in aas (bad) mov lea fnop xchg or mov lds cmp aad rcrb icebp lcall or rorl iret mov jae repnz gs pushf cmp repz rcll and cmp in pushf stc movsl xchg pop jge xor inc fcompl add push mov insl (bad) and sub leave (bad) pop inc push adc ja push inc lods pop and and add imul lods sub mov xchg fildl fs cwtl frstor mov inc out fs inc cmpsl loope scas mov clc lea adc jo mov lcall insl lret fdivs out and push inc pop xchg pusha bound cmp jns push pushf dec cmp jg (bad) pop scas mov mov mov dec dec jno and xor (bad) je test scas stc movsl or pop fcoml mov jg cmp cmp cmp sub popa pop les adc add xchg and sbb dec fucomi xchg xor fnstcw cmc incb cltd in sbb cmp xchg sbb aad dec cmpsl loope pushf push mov cwtl xor cmp dec mov push push pop pop test cmp lahf int fs pop fmull icebp cwtl (bad) lret pop insw sahf sbb (bad) cs pop lret pop sar xchg inc pushf push test stc mulb xchg and cmp cmc stos roll icebp xor dec mov aaa popf pushf mov mov insl fmull dec popa lahf add ror mov push xor dec stos cmp in sub mov sbb daa mov sub adc mov xchg shlb int pop adc into daa xorl movsb pop loop pop mov (bad) mov (bad) ss ds js repz mov inc inc sbb mov pop test dec sbb fsts xchg cltd popf and aas or cmp (bad) pop cwtl scas mov rcll stos and dec mov cltd mov test jbe push addr16 xchg pop jge cmpl cwtl jmp add mov gs xchg (bad) icebp pusha mov cwtl or fiadd add fbstp mov sub xchg (bad) repz mov aas xor in (bad) adc lods inc dec xchg push negb add jle js cwtl mov xor cli nop fildl xor dec xchg mov hlt lahf or pushf pusha pop fwait mov mov pop pop lret lds dec fidivl inc scas sub psrlq fsubl jp (bad) sbb mov in pop fidivl outsb mov hlt (bad) outsb xchg sub sub ret xor xor ljmp xchg pop mov test pop and mov jbe xchg ja (bad) (bad) rol xor ds jns cwtl sti sub push repnz mov les mov or cmp adc (bad) mov pushf iret xor dec pop testl jbe push ja dec sub cmp out leave scas fs pushf arpl mov pop xchg fwait pop mov stc cmp repnz mov cwtl jge rcrl inc lds cmc mov pop scas fmull fldcw imul ja mov xchg pusha ds lcall out and int3 inc jmp or ret mov aad repz push xchg nop push fwait add paddsb mov popa xor ljmp out cli mov fbld push ss pushf mov fnsave pop outsb fisttp mov xorb pop ja sbb cmp add push pop jl jns out jg xchg xor data16 shlb pop sbb pop imull cmp add push xor (bad) into push inc in test movsb sub leave fs negl inc hlt fist inc cmpsb fldl mov jmp inc roll pop push fildll mov sub (bad) ss push adc mov lds pushf sbb cmp dec imul mov fdivr mov and sub xchg pop push lret loopne mov in dec ljmp xor sbb push test mov adc divb and xor (bad) imul insl pop fidivrl inc sahf jl jmp insl (bad) cs sub push icebp add lock pop adc jbe decb outsb dec xlat test sub and jo inc lock pop mov xor pushf ficom subl and cmpsb (bad) dec ffree cmpsb jnp jmp mov dec or (bad) sub imul dec jp mov fsubr notl arpl fnstcw mov pushf push stc outsb les (bad) pop jbe mov loop sbb rol lods xchg pop repz int cld movsb xchg lds jl (bad) xchg or mov jbe and cwtl fmull test lock fs push cwtl leave add or cmp stos jne jle xor lret sti and cmp inc jmp fild dec and xchg int3 je stos adc and pop jmp pushf cmp jg ret rorl das adc cli scas rclb pmaddwd mov mov mov jae xor jl out fnstcw jecxz xchg cmp add push (bad) fimul (bad) mov test rorb lret push mov adcl imul fdivrl outsl and scas stos popa and pop or pushf rolb iret mov and lea jb pop ds inc iret adc rcrb mov push inc mov xchg pop inc insl loope ja push icebp sub jae mov or inc and jb idivb mov and daa pop cwtl push inc cmpb add (bad) sbb fs repnz jmp test pushf aam or push pop cltd cwtl dec mov cmp test dec data16 fnstenv je push fbstp call pop and sub sbbw iret and inc xchg jmp sti inc in imul jno inc imul mov inc outsl pushf cmc jo push popf cltd xchg xchg pop xor fsubrp push mov sbb pop popa lret les xor (bad) sahf adc mov mov movsl mov rol pop outsb inc fdivrl add xchg (bad) push mov mov mov mov add ljmp leave pop aas lods mov hlt in fwait pop pushf mov sbb lcall out mov imul mov jmp push xchg mov mov pushf xchg dec sub jno into inc jg push or mov ret mov push pop sbb negl (bad) pop pop mov xchg (bad) mov (bad) jb adc add fistp aad data16 pop mov stos xor sub sbb sbb lods fwait dec (bad) fildl xor inc je lock in push sub imul or push sub cmc insl data16 stos test xor std dec mov cmp xchg aas and mov test pushf in mov aaa repz xchg jg movsb pop add loop mov cwtl cmpl les cltd fwait or xchg fwait inc push idivl cmp push mov cmpsb ja or adc fildl pop add idiv inc pop push ss inc and pop pop pushf cld ds xor adc or add imul lret jae xchg pop (bad) mov sub add sbb dec pop sbbl pop push mov shll pop inc xchg add xor rol mov out push mov (bad) push xor in add jno sarl scas sbb cmp movsb outsl or adc xchg push mov adc cmp inc sti stos sub fnsave mov jp outsb rclb movsl pop and (bad) adc pop sub movsb js pop sti jle loopew fisub sbb inc inc push push lret lret popa out pop adc and cltd cmp mov jb,pn dec lcall (bad) ja cwtl or adc dec cmp loop,pn sub loopne mov mov sbbl pop sub xchg and push fwait pushf jle sti fistl sbb xchg lea push stos fbstp iret or insl imul mov andb push xor cld jmp add je pop mov jns sbb sarl push or and ja push stc and icebp and (bad) pop pushf in pop mov loopne notb repz (bad) imul repz movsl inc lods or adc mov pop xchg (bad) dec gs xchg mov ss mov daa imul xor sbb subl jae push and rol mov fidivrl cmp xchg adc adc test sarl or and pop or lods aam cli push mov outsl bound lock leave cmpsb sbb aas daa rcl ljmp or cmp push ret ficompl repnz jae cwtl mov mov loope call mov mov mov sub jecxz idiv in mov jne xchg cli popf pop jb aaa mov je xchg test and popf movsb inc sahf insb or inc lret repnz pushf fstpt test mov ffreep test aaa pop lret adc (bad) pop pop lods sbb cmpsb (bad) repnz fwait add push (bad) mov lret insl add xchg jg stc addr16 test ss ljmp fisttp ret xchg fwait jb clc jg lahf data16 push mov movq jle push jle add scas lret sub cwtl in cmpsb test lahf or xchg fcmovnu insl les and inc push cltd cwtl xor pop sub fild or cli pop fldt cmp repnz sbb and inc icebp sub sti je add test sub mov mov and or jae (bad) push test xor pusha xchg iret add addr16 adc sbb lds imul (bad) negl orb add cmpsb fisttp xorl loop mov xchg xchg sbb (bad) push jne fs cwtl repz in bound ret sub inc xchg jb push adc movsb jecxz out xlat pop and je pop into hlt popa inc xchg cmpsb pushf sbb pop pop scas mov mov cmp pop pop cwtl in xor int pop xchg icebp popa clc mov mov cmp je aas xchg icebp xchg (bad) movsl sti jnp mov pop lret or jg cmp loop lds mov add sbb push lahf push pop pushf fmull pop lahf jecxz mov jae fmuls xchg iret push jo sbbl xchg fistpl mov sbb pop jb sbb xor sub shrl lods dec les test sub mov add xchg in xchg ljmp cwtl sub popa fstpt iret (bad) jmp xchg push add out sub jno add das jle sub movsl jecxz shrl lret shl mov mov outsl mov jns int lret repnz sub sbb cmp out jmp cmp std stc mov repz ret push mov out mov sub jmp sbb pop imul imul test add dec xchg in xor add rorb pop (bad) pop fwait jecxz sysexit cmpsl std pop arpl sahf mov pushf add inc inc insb dec mov test adc dec loop xchg add xchg rcll inc test push data16 lea push stos sarb test cmp mov enter push das and je dec mov add hlt loopne inc sti iretw ret lods or dec push sub lahf mov dec out frstor ljmp inc or fstps daa pop xor (bad) out or sbb inc xor xorl push ret sbb or sub pop mov sub (bad) dec rcr (bad) aas fisttp les daa mov cli js pop cwtl scas mov jg mov int fwait in mov lcall fnstenv push cmc cwtl and push imul data16 push mov int cmovns leave repz xor or sti shrl sbb lret sbb ja lcall cmp or xor xlat inc xor xchg dec mov and or ja push pop hlt sti insl int mov loopne push pop js loop shrl mov repz xor pop (bad) inc lea loop test sub scas sbb or or jl inc pop inc sahf or xchg outsb pop mov jp push cmp sub cwtl dec and subl (bad) mov fwait add pusha out enter and xor push cmpsb push fwait or cmpsl adc sbb fucomi xchg mov lods inc sbb jae cmp xchg adc pushf cmp cwtl xchg je sub push dec mov sbb shl mov fldenv push dec or rolb and cli or cld pop mov cmp imul gs pusha sbb inc pop les (bad) aaa pop xchg xor fwait inc xchg pop push or jo jmp xchg sbb out sbb mov xchg mov mov mov add inc outsb ret pusha mov call dec add frstor mov pop add xor addl sbb into mov rol xchg xchg lods jmp je mov rorl out negb add addr16 mov lods pop dec adc leave xchg ret fiadd pop push iret mov stos ret pop sbb pop push movsl or mov arpl aad mov or clc lahf push lds or pop adc xchg and fiaddl jge push inc les mov mov or adc int out ds sarb jg ret pop clc js sub pop dec adc cs jnp and idivl add std xor out (bad) rcrl cwtl mov jb inc mov xor push cwtl pop insb push cmpsb daa test dec xchg push imul jne icebp dec xchg push and fist pop xor inc dec pop adc fwait inc push push flds jns loope add pushf (bad) xchg mov (bad) cmp dec pop insl mov or shlb int add dec adc cmp sub pop sti push icebp movsl jmp jnp cmp sbbl adc outsb mov mov push ffreep (bad) in bound mov aad cmpsl push ja into mov or lret arpl ret push insb sub out idivb popa mov divb dec adc jo lahf mov stos pop leave mov insb fcomip icebp jg jns push or jbe sbbl ds mov iret lds jns fucompp mov shr push xchg (bad) mov sti xchg dec mov lods es (bad) xor mov sti (bad) pop sub push cmpsb sub (bad) jbe mov xchg icebp push arpl rorl jle push sub jmp lcall cli mov or push lret cmpsl mov in pop mov pop test in fs scas outsb add (bad) pushf out xor sub faddl jge mov fldcw mov test or ss lods fsubl mov mov mov add fnstcw outsb mov sub sub push jo inc das jbe imul sbb pop xchg jns sbb out andl and inc mov les and cmp sbb push cmp and pop jle orl out sahf out mov daa cmpl aaa lahf sbb jmp iret mov adc dec outsl aam iret pusha test inc push rclb push loop cli (bad) mov xchg mov bound pop idivb sahf mov and lea cmp fs sbb xor dec sbb xchg inc push add xor addr16 push adc fdivrl inc mov loop sub jl (bad) aas push rclb xchg mov lcall or movsl inc inc mov in dec pop icebp testb lock mov cmp ss roll xor rol mov jmp push rclb fdivl xchg ljmp cli ljmp js mov insl arpl dec push aas adc out jl sti add sbb mov pop mov popa cwtl pop fisttpl outsl and pop sarb subps push and jb mov jp les sbb mov cld dec xchg sbb sbb ffreep ret lds or ja ja subl rorb mov clc push mov sahf add mov xor xchg jmp popf (bad) repnz jns imul push push adc in lock lahf mov (bad) push repz test adc and xor sti mov stos pop inc call bound jae pushf insb lds leave xor fxch ss cmpsb cmp pusha mov out dec xchg (bad) xor sbb dec repz adc inc pusha cld and andl sub dec mov adc adc icebp fstps adc icebp xorl pop ret xor fs pop mov mov je mov mov imul sbb dec andnps sub maxps out and aaa xchg enter repz ljmp xchg or push mov sub popf into xchg push ja (bad) idivl sbb repz mov insl enter mov cmp fildll cwtl and jns cmpsl test fbld lahf movsl mov xchg pop sub jne sub cmc and (bad) jno inc mov dec out cltd xchg sti (bad) cltd pop inc jmp lret iret outsl subl dec push outsl jecxz push cmp ffree and pushl inc mov dec inc sti pushf lock cmc inc loopne orl fidivl (bad) mov lds xor (bad) out sub sbb sarl imul sarb pop mov sbb adc cmp into jl xchg cmpsb cmp outsb fildll in (bad) and loop nop sar cli xchg dec xor jle (bad) adc xchg clc popa lret mov add loopne jb push rorb sub jno xchg sbb lret lcall fwait adc fsubrs fistl jbe cwtl xchg sub push jge js pop add mov pop std inc inc aam rcr mov push loop mov lahf outsb sbb aas dec and add stc (bad) fisttp movsl xor pop hlt js lret out xchg (bad) mov pushf mov jp xchg ret rorl dec mov scas fs inc xchg push and call bound jp mov inc or in pop lds rcr xchg aaa pop pop out rcll pushf addr16 rep pop cmpsb cwtl dec xchg loop andb icebp xchg fild cwtl scas lret insb loopne push mov xchg lds pop subl ja adc add ret and popf rorb and popa andb and or mov mov mov jno xchg inc xchg popa call aam push cmp add add mov jg xor pushf sbb jle shll cmp aad mov sbb fstpl cwtl shrb pop xchg cmp out addl cmpsl jp sbb fldcw pop pushf push imul lea dec xchg dec mov sub mov and stos or cmpsb aam cwtl xchg cmp es dec fisubl enter pop push mov add mov jp cwtl cltd outsb inc push insb iret pop int3 push repz jnp shll inc sbb mov dec outsb sbb ret call movb addl scas sub xor clc out sti jl adc mov jae jg bound push and inc and cs pop rcll pop add (bad) fistl movsb xchg sti pop mov adc inc scas leave (bad) pop repnz xor push sbb jg sahf jo xchg or cmp (bad) cmp push test andl jne push movsb (bad) icebp mov repnz frstor jmp sbb dec pushf xor (bad) mov and mov (bad) jnp pop jg dec aam daa test jle repz push mov sub mov jb dec inc in rcr imul adc xchg mov sbb ss adc enter shr leave push lret push out add je sbb into inc and out mov ret daa pop sbb pushf mov inc out xor addb pop in dec xor sub xchg int3 popa imul mov (bad) xchg out shrw mov lcall fildll stos (bad) in dec out dec inc iret in cmp pop leave xchg outsl add cwtl (bad) jae xor mov cs cwtl data16 daa aaa andb je das jnp lret aad das imul pop pushf sub lcall push add cli mov inc cmpsl cmc aad mov mov faddl lret jmp negb daa xor mov pminsw icebp jbe mov cmc jne jmp sbb jp push xchg (bad) stos idivl loopne hlt mov xchg mov mov (bad) pushf rorl jbe scas loope jl (bad) daa decl xor push jbe cmp jns mov jecxz pop push loop mov ds cmp dec push xchg pop shrb or hlt fbld repz popf movsl stos pop and xor jno push pop movl add cmp inc add cwtl (bad) mov dec std push fbld stc (bad) js pop xor push and mull xor inc mov out mov and negl push or push pop lcall int sub mov mov call or stos lea loopne inc jno out shll mov (bad) imull jo inc xor or push test cs lcall fcmovbe push rcrl xchg mov lock and aaa fsubr pushf pop sbb gs mov cmp scas cmp cwtl shll (bad) incl xchg cmpsl ds addr16 xchg nop sub cwtl pop mov xor stc cmp jne sahf fcompl xchg pop pop fisubr cs fild pop nop int sbb jno scas rcrl cli xor and dec and sub mov sbb pop cmp or xchg cmc xor cmp adc xchg repnz cli cld or inc arpl popa cmc pop addr16 add and sahf data16 mov enter dec rclb push pushf mov and and dec and jo test test sbb (bad) test out fldl inc push movsb dec mov cmp leave mov push fisttpll pop out jge xor and fldcw cli jae lcall pop cmpsb mov add xchg mov pop dec add in pop int3 xchg xchg dec outsb dec cld add fucomp ret and shll bound inc pop and dec lahf jne lahf in out sahf out lahf push cmp cltd divw iret (bad) sbb jns inc mov loope and and dec dec and (bad) mov inc dec lahf jp mov negb jne mov sub fwait inc into fstpt shll std pop out popa cmp push cld or pop sbb fistpll mov (bad) jnp xchg xor iret xchg adc cwtl cwtl jnp push mov leave fldcw and inc add xchg (bad) pop stos mov inc pop shrb or mov pushf call lcall (bad) mov rcl outsl dec push sub pop sti pushf push mov fxtract mov cmpsb dec cli roll test mov inc mov cwtl cmpsb movsl cmp test (bad) add or add xchg ljmp jl cmp sub mov mov cwtl xchg stc fwait std and stos mov jnp inc clc xchg push mov xchg scas sbb mov pop in dec mov icebp xor les add fldt dec dec dec mov out xor sub shlb or or or ja pushf movsb jecxz mov dec jb cmp lahf adcl inc pop cwtl (bad) shr cltd stc sbb jno xchg (bad) leave (bad) mov xor xchg or enter cs xchg das mov icebp je xor inc push setl lret jl cmp adc sti pusha lock enter cmpb pushf jns int3 xchg jno cmp daa movsl mov test add aam jbe or push pop pop mov cli adc adc dec aas popa jle and in imul repz or dec in mov mov cli bound sbb pop mov sti or cmpsb movl inc outsl cmp or repz push sbb inc pushf movsw and push jbe jns imulb cmp pop or mov adc sbb pop and in dec out or arpl inc aam call dec pusha ss pop popf pop frstor lret popf lret out push cwtl popa and mov add xchg sbb xchg cmpsb loop add jge bound test insl push cmp addr16 cmp push jle inc in add and jnp dec in clc jle (bad) sahf lds mov sti stc sbb cmp bnd pushf push fnstsw (bad) test sub fcmovnb lock push enter or sbb xor cmp inc xchg pop (bad) (bad) mov dec cwtl mov testb je xchg dec sti js sbb cmp xor test mov aam ficompl xor nop adc sub pop pop cwtl dec lods ret (bad) jle mov out xor cmp push ficoml sar sbbl aaa mov xor lret jo mov mov (bad) xor mov cwtl addl add out inc mov lcall (bad) mov fldcw aad inc (bad) push push mov icebp dec fstl imul mov xchg jmp mov neg lcall pop fldl adc sub cmpsl cmp clc jne xchg pop add test jmp dec ret stos jo mov xchg pusha iret inc js xchg outsl pop out push sbb ss jle and add jns insl inc mov fildl repz jno cltd mov divb jge cmpl rcr lods or dec pop and push test sbb push xchg (bad) push cmp aam xor cmovne cmp xor int3 cmp loop xor jge mov test ds xchg lds stc mov (bad) and jg scas mov push xchg sub xchg lods stc mov jp jl popf or xchg pop push ret movd sub rorb cmp repz rorl pop xchg pop sub inc subl cwtl mov lahf out xor fstpt lea sbb jl mov insl outsl testl pop ss mov and ret mov nop aam arpl inc out sub inc mov inc inc movsl pop push adc pushf push roll cld movsl popa xor imul in imul pop shlb xchg out sbb out stos enter add xchg push mov aas dec mov lcall incb jno popf sbb cwtl mov xchg mov fisubr movl push enter cltd (bad) rcrl mov xchg cli cli jg cmp ds xchg jno fisub sub (bad) push rclb dec mov pop and test xchg fistpll daa jmp (bad) and xchg sbb aaa fwait aad cwtl scas sbb out xchg or mov xchg jle mov push mov jo push mov xchg sahf push movsb out lahf mov jp mov sti mov popa xchg test fadd push mov lods or stc pop enter sub push pop leave xor cwtl sbb das jp inc sub adcb xlat int3 call xchg xchg les lcall mov test out (bad) stc mov mov jp push notb pushf js push (bad) mov icebp outsb mov stc cmpsb sbb jmp push or push cltd xchg popf ja pop sub adc mul lret sub repz pop outsb cwtl call mov js xchg cmp mov lcall and mov xchg loope,pt aad hlt xlat imul fwait and (bad) mov les mov insl in mov inc out mov push into push pop push pushf inc adc push mov dec das leave and subb jmp cwtl sti (bad) addl xchg xchg movsb xchg mov gs imul fistpll sub adc cmp (bad) lock dec lods ja or sbb pushf fidivl aad pop test adc push jg xor outsb sub mov mov (bad) cmp push xchg cs pushf xorl scas xchg gs dec in adc movsl add movsb jecxz xchg sbb jne cltd push and pushf pop pop xchg xor cmp lods fsubs xchg inc outsb pop push ss std jae sub dec aaa lcall pusha mov dec out mov int adc cmc mov out jp aad sub mov xchg cmp rorl rorl notb push fsts jnp lds xchg fisubrl mov mov lret pop jg ficoml pushf lcall and push dec or cmp push out mov xchg stc or inc pop jl mov rorb xchg cmc push iret adc mov insl imul fcmovnbe fwait xchg roll xor jo lods dec mov jmp rorb fistpll outsb out xchg push lcall hlt and xlat xor jns dec pushl (bad) pop mov mov fnstcw in adc jno sub xchg mov in enter fbld xchg bound mov orl orl sbb mov fistp in cltd pushf sbb stos cmp xchg ret xor pop lcall or sahf lods lahf aam inc fistp sahf xor or xchg pop jb cmp inc cld (bad) xchg jl mov flds fwait pop mov dec pop pushf (bad) jp jb or test ljmp mov popf and mov test push test sub in push push ljmp xchg push inc jge mov pushf movsl aam push call mov (bad) into jg popf lret popf (bad) aad movsb push dec mov popf push xor ret inc and stos pop add dec divb (bad) and xchg lock sbb stos sbb cmpsb jbe xchg sbb cmc pop movl jg jl fnstcw add xchg and (bad) ficom cwtl cmp mov rorl sub pop ret xchg add push pop push roll jp out popf or in ret and xchg sub icebp pusha jae add xor pushf ret add (bad) pushf jle ret mov cwtl fldz dec mov in pop cmpsl pop leave inc jbe cmpsl cmp icebp test xchg arpl gs sbb sbb scas (bad) iret enter sbb je mov add push mov mov dec cwtl jns cmp xlat mov test outsb jo xor mov sub jnp rolb insl dec cmc dec test add (bad) pop fstpt jg sbb das popf bound fwait push cwtl rorl mov mov dec aaa cltd sbb nop pop xor out pusha adc fs xchg sub adc dec loop icebp mov pushf outsb out xchg leave sbb data16 gs frstor mov out xlat sub xchg ja add daa pop jmp enter jl sub xor dec fwait pop aaa mov xchg xor jg mov cmc or das nop dec fsubr adc testb or test pop pushf pusha mov lret clc stos ss pop cwtl (bad) dec loopne lahf ds push (bad) outsb lods addr16 lret out mov (bad) (bad) or mov add dec cwtl loope insb fisttp out inc ljmp push sbb xorl clc pusha jmp iret cmp out leave xor push fildll fild push cmpsb idivb inc fiaddl and daa fs fwait pop in dec xor sbb mov xor rol push test fbstp xlat test ss pop mov add inc xchg mov (bad) mov sahf gs inc mov mov pop or push adc mov cmp dec pop inc add and dec push mov (bad) iret imul and or fwait (bad) cmp (bad) out (bad) (bad) fmull dec inc in xchg addl sub pop pop das mov inc sbb inc (bad) mov shrl lods repz sahf repnz faddl pop insb xor popf mov sbb inc movsl jmp and dec sarl cli pop adc in pop jbe dec out fs push stc or adc lods push sbb iret add arpl sbb xchg (bad) hlt jbe testl jmp pushf into pop xchg jae adc add loop cmpsl jae hlt inc std jge jnp adc hlt mov jp mov cwtl lret pop loop es push jg dec cmp xchg lret cmp into or dec jbe mov jns fldenv mov cmp movsb outsb ja sbb fst dec in mov cld inc fadds inc push adc mov cmp pop les and push (bad) fs inc cmp inc mov stos mov rorb inc call (bad) mov hlt mov cmpl xor pop pushf jmp push mov sbb mov inc dec push sub dec add cmpsl fisub mov sti xorb cwtl fwait insb aas inc fidiv sub push dec jp or ss xchg std jle push mov jnp iret xchg adc fisub push rclb addb jp movsl mov push fnstcw scas xchg push cmp pusha push jle xchg cmpsb pop dec int3 xor jb test fwait pop mov testb mov and jmp xlat sti sbb jle ffree pop fildl cld invlpg or push cltd sub out (bad) jno or xor xchg mov std add mov mov jl imul push stos push jp (bad) mov mov (bad) fild mov pop sahf idivb rcr and dec es xchg push in mov icebp cmp mov push stc sarl lahf jns dec cli pop pushf int dec inc push sbb lock sub in inc in adc mov inc jns cmp test push dec sbb xchg inc xor push add pushf jns (bad) dec mov mov pop xchg fucomi (bad) jb cmp jge mov shll mov add ret cwtl out (bad) lret pop xchg push lea push push push leave rcrb xchg inc xor cs dec inc mov test push out js std stos inc out enter xchg fwait in aaa xor sub notb sbb inc mov xchg pop cwtl or adc inc pushf insb cmc xacquire (bad) jmp add mov sbb cmp jne mov jne imul das testl test mov jg in js stos push std mov mov push int3 dec and xchg cmp dec add and in into dec add mull notb lret sub xchg or loop cmp jmp xor or fwait jmp je push sbb (bad) sbb cs fwait aad (bad) leave push test icebp add fidivr mov pop add cwtl shl sti arpl into xor and int3 mov test cmp mov (bad) pop dec xchg or inc movsb icebp sub insl (bad) mov cwtl or movsl dec stc or xchg leave aas inc pushf (bad) or pop fistp adc aaa fmull fiaddl in pop jno mov bound push lcall jns add lcall mov sub jmp out xor lret movb xchg mov jne pop adc cmpsb leave repz daa test daa and dec add out outsl pusha clc push dec out std je xlat push dec mov roll ljmp subl dec imul pop inc idiv cmpsl cmc seto ftst enter sub adc cmp adc ds mov jl popl (bad) ja inc push mov cmpsl outsb inc cwtl test push ret jbe rolb push mov popf hlt sbb dec xor xchg cmc inc xorl in fldt push mov pushf cs push repnz jo xor push mov xchg pop lahf cwtl cmp (bad) and mov cli mov jo xchg shlb inc test jmp push in sub dec (bad) push hlt iret push out lret movsb shlb xchg movsl xchg popf test jg out out cli add cmp inc mov lret xchg pop inc xchg adcb mov icebp push xchg js gs daa mov fistp mov enter push and cmp sbb lods push (bad) and xchg cmp add adc lods cld mov dec adc cmpsl pop mov push cmpsl xchg push inc clc adc dec adc or xchg xchg mov ja outsl insl movsl pop or mov adc pop xchg jb jmp dec in lcall les test push mov outsb sbb push iret mov ja ljmp fcoms inc stc dec popf pop leave das xor pop adc pop lods sub ficompl xchg mov pop imul inc imul lcall xchg mov push sbb adc mov xchg popa subl mov test add rorl sahf jg add lahf push cmp clc gs add mov (bad) add jmp cmp sub dec jno and mov sub cmp sub xchg xor sti sti pop outsb sarl mov xchg xlat adc pop shl xor jne lock pop loopne xchg lret ja outsl xor les aaa imul lret and or dec xchg push pop cmp (bad) adc push or xchg push or lock sub into or jnp into repnz gs repnz cmc cmp (bad) lret and mov popa pop icebp hlt inc mov mov ds loop inc lret jno je xchg scas (bad) jbe sarl in push out sti and popa je lret lret cmp mov cltd jge push das (bad) fildl gs dec push cmp (bad) fldcw fdivrl pop sbb push xor sbb das insl lahf pop fwait sub mov and xchg xchg mov xchg dec inc (bad) xor (bad) fldl fldenv pushf jno les stc iret jecxz cwtl or cmp inc in popf push cmp xchg fcmovu repnz add lods push je pop outsb sub aad enter pop insl fbld mov das sub xchg inc int pop xchg mov and adc iret mov addr16 test popa fwait imul mov fstpt add popa repz and or (bad) shl test cs push mov in aaa shrl xchg test stos insb loop fnstsw push pop mov sub dec push mov pop inc rcrl dec pop icebp mov adc rclb dec fidivl xor ja inc push add add les cwtl push mov out stos jg sbbb loop ud2 shr adc push adc xor sbb andl out cmp (bad) fildll call sahf mov mov fwait pop dec jbe mov shll fadds jge ds ret mov push mov mov ss jns dec pushf sub mov and je mov lds das lods jb cwtl aas mov into rorb jb lods mov int3 out pop stc push int xchg mov test les mov jg xchg adc mov and in enter lahf out cli and and jne pop fldenv mov dec jns idivl out sub adc sbbl inc inc adc pushf ret (bad) bound sub push or hlt (bad) fbstp shl add cmp push scas xchg mov sbb (bad) loop xor lret fstpl sarb push fwait call nop mov mov out xlat lods inc xchg xor imul pop mov insl mov xchg jmp lea push (bad) dec push imul xchg call pop pushf lods cmpsb iret or cmpsl cmc sub xchg mov lahf pushf int dec jne,pt andl in sahf sub (bad) mov xchg mov lcall cmp adcb jno (bad) repnz orl outsl and xor pop mov inc btc rcll loop sarl pop mov xchg aad mov ret cwtl fcmovne loop cld lds jmp xchg cmp push (bad) push mov xor or push push xchg add xorl es dec dec push rcrl jne jle cwtl xchg sbb mov (bad) int out push leave and sub sub mov fstl xorb xchg inc jmp or repz (bad) or pop mov (bad) dec test das push mov popf or sub dec sti pushf test mov sarb push mov stos pop icebp cmp mov or push lret repnz add ljmp pushf daa jne dec sbb ljmp xchg out cwtl ficomp in ja xchg mov fsubr lahf xchg test ret lods into dec fmull mov xchg mov data16 jge cmpsl mov icebp or jmp sbbl xor das dec cli sarl fnstenv sarb pushf icebp out mov (bad) mov dec mov xchg cmc cmp dec push pop jbe icebp cmp jnp cs and mov xchg pop movsl aas push cmpsb fcmovbe sbb pop dec or lcall pusha iret mov lret pop (bad) jns mov pushf test iret (bad) stc pop rcrb xor jo ja push add mov pop in xor insl test lret xlat ret lret cwtl cmpsl cwtl or xor (bad) daa jno clc sub sbbl leave addl daa in mov shrl jmp and shr out test movsl imul lret je loope sbb cmpl rclb pushf stos inc fs cmp fisttp push (bad) adc fistp (bad) addr16 cmp mov push xchg jb hlt jge xor insl lcall and cs mov inc jb adc stos lds fsts add js stc hlt xchg xchg sbb jo fcmovnu jge aaa aas push mov ror add xor (bad) in pop in push (bad) imul jno pop inc pop outsb push bound lea (bad) negl pusha data16 fsubrs test mov lahf (bad) inc in into sbb xchg movsl (bad) mov pop inc es or (bad) dec adc mov bound aad sti std mov cmp sbb cmc xchg sbb lret fildl push dec mov add imul fld1 popa test fstl mov mov adc inc lds mov cs pop and or jmp jg inc fwait loop rep adc data16 add shrb or inc mov and sub (bad) dec adc and cmp fwait cltd leave dec sbbl cmp jo pop add imul dec push xchg addl mov (bad) xor pushf xor pop cmp mov and sub mov roll addps inc jnp in or (bad) mov xchg fnstenv cmp cmpsl xor lret push fstpl das fs sbb lret inc dec dec jne sbb int rol imul cmp js inc and fmul adc adc mov sub and push cmovl int3 mov leave sbb jle xchg cmp aas sarl xor or jle loop xchg fsubr das (bad) xor leave adcl pop push xchg cmp jbe (bad) sbb cmp cmpsb fsubrs (bad) les cmp shrb mov mov in fsubs or test repz lods mov lods out adc mov test mov cmp and insl push addl jns loope xchg mov xchg dec insb mov sub push lods mov idivl xor scas mov xor cli mov nop and sbb sbb fbstp xchg adc test dec sbbb test cmp jp jno mov push popf cmc dec pop pusha mov lods xor and std inc mov xchg pop cli xor outsl sti aaa in dec sbb fisttpl lahf aam adc daa gs mov shrb mov outsb dec sbb pop pop add (bad) pop cwtl (bad) xor or aaa inc inc daa mov imul sub mov push cmp insl mov and out icebp in pop int mov shrb daa push xchg adc xlat push inc sub sub xchg out mov and mov add addr16 and aas mov fstp (bad) lods cmp nop movsl mov cwtl ljmp and aam ds aaa pop jbe lea ret test out xor adc jecxz movsl negb pop jg mov icebp movsb pushf or es aas lret push imul add mov or push adc pop adc push pop pop cwtl dec jecxz shll rcl mov hlt add mov loop adc daa push (bad) lea adc daa lock pop cmc lcall cmp (bad) sarl (bad) mov push gs fnstsw mov movsl pop out addr16 leave aas mov sbb subb outsl adc adc js push dec outsb xchg sbb add daa cmp mov sub push push push mov or ja adc in sbb pop ret scas or rcll fwait dec daa fidivrl mov mov mov xor fisubrl xchg and test xchg add popa push push insl push (bad) (bad) mov push jae dec xchg dec scas xchg popa or inc adc pop sbb jns notl fidivl dec or cmp sbb pop fist pop add xor stos fnsave jg jne xchg cmp sbb imul adc xlat loope dec adc inc inc imul rcrl loope mov adc xchg and fisubl js push fild inc aad mov push js aad orl pop cmc mov add dec cli fcmovb mov add es pop fildll test sahf fistp mov cltd xlat fsts outsl sti push das orl sbb inc pop sti fbld or aam cltd adc sti jnp xchg sbb xor flds fcom js mov pop pop mov jp jmp sbb adc fwait roll add push aam lock jg pop pop mov sub daa rcr adc xchg lcall pop aam fidivl ficoml and mov pop pop sti push mov dec mov pop push lahf fstps rcr pop pop push cmpsb cltd inc or xchg icebp push cmpl push cmp pop jp xchg dec xchg mov pop mov sbb xchg decl add aam mov push popa push mov inc mov (bad) jbe jg notb lret sub mov fwait inc gs daa xorl and js fbld xchg xchg fbstp (bad) cli gs cltd clc pop stc adc sti mov sub fwait inc jg sbb mov pusha sbb push pop cmc mov mov pop lret cmp pop and pop inc cltd test mov jg fbstp jae cld mov mov (bad) mov fdivs cltd xor push push aam mov lcall loopne fcmovu mov fcomps jns mov pop jmp pop mov push (bad) dec add push or jecxz aad fdivrl test sbb sarl xor into imul sbb fimull or cmc mov push nop inc in lret andnps adc sub aas lret cmp push ss pop cmp leave ss cli and inc sarb repz sbb adc lret lods jae xchg (bad) std aam xor pop adc stos ficompl hlt sbb mov or pop xor dec pop mov mov stos add pop pop jp das lgs jne push (bad) iret pop pop clc test push (bad) mov add mov (bad) stc jbe (bad) fidivl lcall pop lcall jp xchg rcrl fst xchg aam inc into pop popa bndstx sbb cmpsl lods stos loopne mov in sbb fidivl add repnz ret fwait add xchg lock pop cltd xor aad adc push das fimull pop mov addr16 adc mov (bad) mov mov add (bad) push cmp fmuls test pop pop pop hlt stos fldt sbb mov loopne sub mov pop popa les or call xor pusha lret mov iret pushf adc test cmpsb mov cli loopne cli add scas negb cmp pop push push sarb xor scas sbb repnz push push fnstenv fisttp xchg test jecxz popf ficompl push inc xchg idiv mov fs inc add test xchg clc dec cmp jns cli out sbb sbb push lcall cli and outsl inc cmp sub (bad) jbe sarl rcrl fist adc aam outsb sbb dec lret out lahf xchg sbb pop sti mov inc add xor dec jp iret insb cmpsl mov push mov xchg sbb mull pop (bad) cli jmp adc dec inc jnp push cmp pop insb aam cmc rorl outsb popf fcomp push out sti inc sbb sbb xchg cmpsl dec test cltd pop sub pop sti in adc flds sbb rcl divb hlt lock data16 aas stc inc xor lahf arpl fsubs push xchg mov pop sbb sub cli push iret xchg mov int3 andb dec cltd fidivl (bad) mov inc rcll mov mov mov das inc or mov mov xor mov dec jp mov fldl je daa jle fstps icebp pop pop push aas lahf inc jbe ret ss fcmovb pop hlt sbb push popa push pop repnz add cltd mov je mov adc lods adc repz cli mov cmc pop (bad) jne negl or xchg pop jge idiv fiaddl jg data16 repz pushf scas setnp and leave mov cmp repnz push cli mov inc jnp pop mov pop inc sub fcmovbe xor and sub lods ficoml stc test test dec lret (bad) xchg adcl icebp sbb mov or fldpi sti adc cmp sbb dec jne and lds dec insb in xorl js fstps cmp push and dec dec in (bad) jg mov xor pop loopne xor pop lret mov dec mov inc nop dec xchg xchg xchg aas add mov cmpsb faddl or mov lcall stos sbb int fistpll cmp mov test pop sbbl jle idivl pop cwtl add mov mov sub pop orps sbb out sti mov push mov adc xor mov pop xor dec outsl push pop mov not mov pop cltd jg xchg push js inc jae divb mov xor insb test dec dec aaa fstl sbb pop cmp xchg les pop pop (bad) int das pop lret xor sbb mull inc cmc push xor sti mov int sti inc and xchg mov xor mov inc lcall out mov cmpsl adc cmp call sbb lcall ficompl pusha push rolb in sti dec push mov xor adc dec mov sbb fwait test or popa sub jns or aaa lds pop push insb fnstenv ljmp inc mov mov negl jns mov mov inc xor mov repz cli insl or icebp inc cmp push cwtl push cmp sbb imul mov adc lahf aam dec and sbb sti xchg sbbl out push rcr mov cmp mov xchg pop push or mov sbb cmp popa add dec ljmp cmp cmp adc mov cltd outsl lahf (bad) sbb sti lar inc jbe xchg je in js imul popf jbe pop sbb sbb push mov into rcrl lahf ret xor jbe cmp fnstcw dec fild insl xchg lods mov stos pop lret jp cmp jbe gs mov fwait adc push fdivr and test mov stc mov pop cmp popf out aam fistp inc and mov fs mov jmp or aam aas cld mov cltd push ss xor (bad) lret pop push into xor pop sbb mov jnp in xchg cmp int3 mov ss subl imul fstps not dec shll stc xchg push (bad) or xor fsubs stc es jge push (bad) xlat dec push fstps ss fsubr pop cmp scas pop rol jp xchg dec je fistl sbb cmpb adc pop jnp cwtl mov call lods xor loop addr16 outsb ss mov jp out xchg pop sbb cmp mov mov cmp mov addr16 je cli cli decl add stc cmpl pop mov cmp mov pop lahf lret pusha mov jg pop or adc lcall test jb cmp dec pop fwait lcall je (bad) fbld mov adc xchg pop aaa inc stc sahf js dec mov adc xchg out inc adc mov pop mov mov or cltd cs lahf adc idivl fstps and test (bad) jnp xor xor adc cmp sub pop popf cmp lds jge mov mov dec mov jp movsl lea jno add jp jg xor mov and xor mov hlt cmpsl nop fistp imul scas inc test push dec xor pop clc pop jl xchg jnp mov fsubs ficoml ja add lcall ljmp mov inc xor xchg push cmp sbb inc negl (bad) ss dec fwait out fwait test mov pop sti mov pop cmp cld cmovns inc stos test rolb sti pop pop pop inc loopne,pt cmp mov jg adc stos dec mov lock (bad) cmp cwtl lahf pop mov add pop and mov leave mov (bad) (bad) mov pop jg aam in lret mov inc rep cmp loopne cmp and add fbld or popf mov adc xchg xchg fildl dec cmp xchg test aad mov ret out mov lahf dec and cltd and lock loop dec jmp negl clc inc out adc repz leave mov mov jmp inc inc push hlt popf cmpb cltd push dec dec jnp test lds jne xor rcll sbb jnp or add add cmpsl js xor cmovbe sbb mov fwait mov adc lods ljmp rcrl jne jno add aam mov jle mov xorl mov sbb clc mov enter cltd sub xchg aam xchg addr16 ror xlat loop xor pop or inc sbb inc (bad) mov push inc cmp pushf jge xchg sbb add rcr in enter movsl minps adcl pop jne cmp xor push lock (bad) cli xor jg pop notb daa mov fwait out mov push sub mov fwait mov push in cmc push mov lcall (bad) fisubrl lahf pop xorl test imul mov or jbe and pop fstpl mov mov jg pop mov pop fist adc aad repnz xchg cmp mov aad fwait lret inc (bad) dec aaa rorl mov jne rcrb push lret loope sbb ss rcrl (bad) dec mov hlt add ret sbb cmp cmp lret scas mov fidivrl cmp imul mov ja pop js stos sbb jo,pn cltd andb xchg jmp inc (bad) pminsw push fcompl push out pop inc and ss cmp shll xchg mov jo stos in mov hlt xchg rcll testb push inc push adc jno cmc inc int inc push sbb xchg mov xor inc lock std ficoml mov cmp repz ficoml mov adc leave pop (bad) ficoml fadds icebp mov jns aas pop addr16 pop push subl icebp cmovg mov fldt movsl ficompl stos cmp sbb pop push pop pop clc ret mov cmp push ss cmp fcomip in loop fistpll fsubrs negl cwtl cmp jno (bad) fiaddl cmp sbb pop mov xor mov aaa fisttp (bad) pop lret sbb xchg sbbl sub pop cmp into jp push jae mov xor fild (bad) repz push stos andl cltd ss xor cmp adc jno mov fdivr adc addr16 mov cltd enter push jbe xchg mov adc orb sti (bad) pop sbb dec sbb lret cmc pop lcall in lret dec inc lock (bad) mov (bad) sbb pop mov push dec sbb sub push sub sbb pop or sti sbb push push stc pop cltd add mov pop mov cmp out xor cltd (bad) dec imul ficompl fbstp dec cmc mov xor push mov fcompl and dec pop sti sbb movsl int3 pop fucomip push jmp xchg out dec cwtl popf je (bad) js sbb mov cmc movsb iret js pop into or sub xor (bad) adc cmc ljmp pop icebp inc hlt or mov mov cmpsb mov daa jg mov cs fisubl stc mov push add or (bad) je jbe fucomi inc incl or xor or sbb sub xor mov icebp or cli push cmp out mov es mov inc lret jecxz sahf inc xchg mov scas cmpsl fistpll mov lret jne cmpsl lret pop jp xor pop mov ss cltd push inc xor mov push mov shr jecxz cwtl push sbbl sbb iret cmp add mov sbb fcoms dec pop lahf movsb (bad) pop leave rcl or mov cwtl mov push inc inc xchg jle mov pop fwait loope inc jg mov fistpl sbb pop pop pop mov mov xchg hlt mov dec mov sti push adc pop xchg xor setbe fidiv cmp xlat je adcl add jp push ss pop jbe xor pop sbb add aam jg out pop mov stos push loopne add push cmp fucomip ret jbe adc fwait and mov incb pop fisttpl adc leave inc sbb fstps xor sub in jecxz ret inc fisttp pop mov pop fchs lret daa mov js fs adc imulb (bad) cmp idiv mov xor or pop and cld lds dec movsl out pusha xchg in or adc pop mov in (bad) mov pop push bound jns outsb (bad) mov xchg and dec xor dec aaa pop movsl inc sbb lcall jae mov aaa ret mov ficomp jmp dec int test sti bound ds or or nop xlat daa lret jbe ss rcrl sbb iret sbb inc pop cli push push sbb jne js jmp cmp dec cmp movsb inc xchg mov into sti or push dec sbb fstpt scas fmul cmc stc jne xchg popf data16 pop xchg ja (bad) mov aad mov mov fdivs mov and jecxz mov fistp stos inc mov sbb cli pop mov inc stc outsl ss mov les je mov stc dec int3 xchg inc fidivl out loopne xchg cltd lcall cmp fsubs (bad) repnz xor pop jne mov addl mov and daa mov push fwait lea inc cmp mov hlt mov bound sub popf push mov shll movsl sbb sbb fiaddl lret ret inc add cmp mov pop jl icebp xchg xor repz dec insl xor xchg arpl sbb cli je adcl mov xchg push sahf fild pop mov inc les pop cltd push sbb jecxz mov dec sub mov or movsb shrl iret aas sbb cmpsb (bad) jmp and xor cld ss sbb iret mov call xchg cmp pop (bad) repz in push aas sub ljmp aam jmp dec iret jns ss push scas ss pop ficompl pop inc idivb mov pop idivl test inc xor pop ss cmc sbb adc in cwtl push mov rorl sub jg ret fsubs cli pop jg lods fidivrl fdivr outsb add arpl orl adc jb sub xchg inc fsts mov pop push (bad) mov xchg sub lret cmpsl sub xchg sub aad or cltd icebp dec add adc lods pop cmp aaa cltd cmc mov mov cltd stos mov nop sti ljmp xor lea dec lds fistp dec inc add inc sbb push jp lret jp icebp lcall cwtl fwait psrlq add sti mov adc fnstenv push jbe and fwait mov dec ja js xchg push fcomip stos dec jnp push jp in imul cld adc addr16 sbb clts sub lahf sbb jg dec xorb cmp cmp ret pop jne ss pop pop stos lea xor mov inc mov fildll jno mov mov adc or push lock mov sti into cmc enter inc cmp sbb xchg jl mov ss mov (bad) repz sbb inc mov mov xchg jmp lods inc xchg add and xor pop mov mov xchg dec jecxz xor lret jp lahf mov je mov dec call pop push das mov fsts imul lcall adc inc mov push scas fldenv mov xor mov mov test jg cmc inc xchg pop aam aam jo movsl mov das xchg pop mov bound iret sbb pop pop sbb jecxz inc fldenv jp loope les sarl andl sbb enter sbb dec nop stc pop dec mov mov mov push xorl fist rorl mov mov mov pop andb inc mull repz mov and push pop fwait mov lcall outsl mov mov sbbl cltd loope jae icebp stc add sbb loope cli xchg cltd rorl out pop push lret jbe repz call push xor loop pop add hlt sub inc sti add (bad) xchg iret aam inc sbb in pop pop addr16 push lcall pop pushf add sub inc jmp outsl rorl imul sbb cltd das out dec sti and (bad) jmp push mov cmp pop push pop sub enter out (bad) cltd je sub loop adc and adc and mov pop imul xchg xor (bad) jmp pop pop repnz jg cmp orl add jl dec sarl mov fiaddl cli aad jmp fwait (bad) stos mov mov orl cltd stos and mov jno aad sbb xchg lahf sbb mov in jbe mov push stc ror lcall dec rcrl push adc inc push mov adc jmp gs add daa inc ficompl jns xorl loop cli pop pop js icebp dec cli dec fcmovnb adc lret fstps fucomp clc ret xchg mov rclb icebp cmc sbb add mov pop xchg cmpsl fsubp scas inc cmp (bad) dec fs jno mov cmpl out ficompl int3 xchg loope sbb mov rcll jge fdivrl cwtl stos adc iret fldcw sbb dec adc sahf ss clc mov mov mov xchg lock js cltd js push sub or fldl pop repz aam icebp negb pop mov add lods push or inc jne (bad) mov into lcall push mov mov mov out xor jg pop mov (bad) sbb mov sbb aad cli mov push xor pop inc dec cmp pop adc cmp imulb adc xchg sbb push lret mov inc jnp fdivrl fmuls stc mov pop fcompl jbe xchg jg push inc xor cli mov rorb adc fiaddl cmp fstps test pop pop dec fisubl icebp aam cwtl pop add sub dec (bad) (bad) loope fnstcw ja test push sti repz adcb push notl (bad) mov mov xchg cmp sbbl pop jne inc xor xchg cltd movzbl fwait cmpl aas shll pop andb mov negb and adcl fsubs xor lea pop push pop inc stos sbb mov mov dec pop fwait lahf jecxz aad stc push cmp adc cmp (bad) jb js ss or int shl xchg inc cwtl add jne inc xchg sbb sbb fisubrl pop xchg insb sub mov (bad) jp mov jnp rorl xor iret pop inc pop stc xchg arpl data16 arpl mov enter mov repz xchg arpl push rclb mov pop sbb stc add jge add dec push push insb pop mov pop stos scas cmpsl add icebp push loop xor xor outsl aaa sbb fidivrl (bad) sub ss cmp mov outsl pop adc mov xor adc pop mov fwait jns loop stc and mov (bad) (bad) stos sbb pop out push xor xor fwait add push add sbb jno inc aam (bad) aas dec add lods stc pop cmp icebp pop cli mov fstps sbb jg sarl movl cld xchg jmp jne pop xlat in push mov adc jns repnz shll mov dec cltd mov sub mov push mov push dec cli pop mov xchg fdivrs sub cmc push sti dec (bad) (bad) xchg pop sbb sbb mov push hlt dec push add sub push sbb aaa mov push inc sbbl je stc (bad) cmc mov xchg (bad) cmpsb negl scas je xor into pop cmpsl loope xchg dec hlt jge jns push aad mov fsubrp outsb cmc dec mov lds fist and mov pop fisubl lret daa les xor mov sbb mov (bad) jbe dec push dec insb mov enter cmp mov cli xchg sbbl xchg fcoml enter pop fwait aam pop orb and pop cltd hlt pop das rorl (bad) icebp rcrl test mov (bad) stos xor dec push inc das mov imul adcl lea add in mov stos lcall xchg mov lea xchg rcrb xor sbb inc pop outsb out pop pop sbb push xor fistpll xchg mov jns fcmovne mov (bad) dec test xlat dec sarb adc jmp clc sbbb jno mov pop xchg (bad) pavgw (bad) fsts stc popf cmpsl add les sbb inc mov jns hlt (bad) divl pop xor xor mov pop dec imul sub sub pop xor push cli xor xchg adc insl out hlt jmp xchg xor mov ja dec cmp aam mov cltd dec jb dec fcoml dec testb cltd hlt mov jmp cmc (bad) dec lcall repz dec push dec aad popf in and cmpsb pop mov je cltd jg repz dec int fstl (bad) inc ss loopne loope pop mov mov mov mov dec (bad) xor or pop pop call daa or aas or mov jmp mov inc cmp jg push pop sti cmp push test add inc (bad) loopne leave roll mov sti gs adc imul leave add arpl adc dec jb inc aad mov lea mov (bad) or addl xor rcrb aas cltd mov cmpl mov aam mov call mov pop sub mov and fimull and fcmovne aad mov pushf xchg arpl mov mov je icebp push pop (bad) (bad) mov addr16 aam jne hlt fstps lods ror fsubrs pop cwtl lcall (bad) addr16 lahf xlat add mov js imul fbstp pop xchg sbb scas stc cs fimul mov push cmpsl xchg mov clc repz adc lds sub repz sbb aad ss sahf push in mov jl fistpll nop adc pushf mov mov mov cmp sbb ljmp jne lock mov mov xor or mov lods cmp jns (bad) adc add loop push sbb lds adc mov pop xchg xchg mov mov mov inc les lods mov inc daa nop cmp rcl push test stos cltd dec mov lcall pushf jb sbb stos jp pusha cwtl jno cmp movsb fcoms push jae xor sub and mov push sbb adcl mov and xlat rolb aaa mov pop outsl loopne ss (bad) push repz jbe adc inc sti jge sub cmp das ficompl mov repnz (bad) fwait bound lret in pop fwait movsb mov sti fnstcw pop push fildll add ja inc pusha add mov adc repz pushf inc xor mov sarl pop cmp xchg inc lahf das je mov repnz xchg jp inc xor mov mov ret xchg dec push loope dec lcall jecxz add cmp pop add mov xor in push dec fcoml adc stc push fstps cltd stos andl cmpsl mov pop cmp pop scas cmpsl push pushl jns pusha mov dec jg mov aad sbb ret je lahf xchg pop fwait lcall pop lahf sbb mov and sarl push mov fstpt sub aam (bad) pop stc fbstp push xchg sbb or jo sbb jle not shl imul or (bad) loop mov push mov (bad) xchg mov insl mov fnstcw test test dec sbb jmp mov fistp jge mov cmpl shrb gs push sbb and pop cmp jb divb setbe push addr16 mov mov xchg xchg adc pushf aad fwait nop (bad) jp add sbb sbb sub ja jns pop or leave pop push add mov mov adc iret mov lea and mov mov inc mov lcall (bad) xor mov or xorl test jno repz mov adc les pop (bad) cltd sbbb sub cmp sub xchg xacquire push dec fildl rorl mov dec fs adc scas out mov (bad) in sbb jb sub push enter sahf je pop mov cltd xchg in jg mov xlat (bad) stc sarb sbb inc xor pop cmp mov inc inc out mov mov (bad) cli sbb push xchg sarl jle lea iret fidivl jl pushf mov or or jp cli xchg mov xorl mov stc push adcl icebp cmp push xor aas outsb mov and dec mov fwait jmp lds adc pop stos fwait stc xchg jg pop cltd fdivl stos sub push fbstp lahf jmp jmp shrb cltd mov and aad push fnstcw das pop repz xor and and pop cld push fwait aaa pop insl ja inc mov aad mov push fistpl sar in into xchg negl fs sub repnz cli or inc mov mov movsb mov or cltd sbb pop sbb movsl xorb subl fdivrs mov xchg js xorl pop push cmp aaa mov loope mov or sub mov stos mov mov imul pop push jmp mov mov testl adc dec mov inc fnstcw xor cmpsb aam aam rol adc sbb pop lcall mov mov icebp negb mov and push movsb add daa fidivl mov push dec xchg jmp cwtl sbb sbb sub jne hlt dec jns jge aad pop cmp add jmp movsb xor mov xor push rcrl arpl jbe cmp test mov xchg insl lock pop dec fdivp inc sub pop jmp xchg pop dec xor jge inc sbb cltd mov push xor sub jne pop add xor js dec sbb fild leave mov stos and addr16 ret jnp aam in xor xor jbe lcall ficompl (bad) mov xlat mov out fstps arpl push loope cmp jmp xchg jnp shrb (bad) pop test xor ret fsts jle mov stos pop scas push jbe out and pop aas js dec jne popf mov inc mov xchg mov mov enter out jg pop mov inc fwait xchg push stc dec and or leave and outsb cltd mov pusha adc mov outsb popf xor sbb in pop and mov cmpsl sbb sub in pushf je fiaddl jg pop insl dec (bad) fistpll lret mov inc clc out push icebp rcrb adc sbb das or cltd mov aaa mov (bad) cmpsl dec sbb mov sub mov fstps or nop jo mov (bad) fs addr16 (bad) pop cwtl xor mov push jmp adc cli jae into lods pusha mov xchg xchg pushf xor out in adc je (bad) repz inc and jne loope pop cmc mov aam adc rol add rclb cmpsl lret push xor out lcall push push add int3 pop aam mov mov shr sub (bad) mov or jbe xor jle dec (bad) cli inc (bad) iret (bad) fcoms sbbl push dec mov jle sahf mov fwait stc aam adc mov aaa sbb aad sub mov xchg insb or pop push mov (bad) fistp push sbb xchg inc cmp repz rcrb xlat lret cwtl adc pop jmp fcomip (bad) cmp lock lahf fwait in loopne movsl cmp xor mov sbb cltd lea out sub aam push mov or inc aad aam in mov cs scas sub icebp dec cmp xchg mov repz pop dec (bad) sub pop or jno push (bad) (bad) push inc sbb pop (bad) pop or mov enter out aas push outsb adc andl jne cmp fild mov outsl sbb mov int pop cmc stos pushf push mov rcrb lock mov idiv fwait pushf push push out push or lahf mov lcall lods xlat sbb stos enter pop mov pop lcall mov (bad) iret adc dec cmp jbe clc xchg jno xchg sti insl push sbb sbb pop xchg dec mov mov push jmp xchg xchg call cld mov int or fcoms jbe enter cmp push adc hlt aaa mov mov adc mov loop and mov ret lret outsl jns dec sub add inc testl in mov fistpl jb xor fdivrs cwtl pop cmp mov pop jmp mov icebp fwait cltd jne inc dec stc mov mov stc mov cmpsb loop xchg pop mov test imul jnp pop cmp mov ds xchg cmp dec adc pop fcomi pop ss pop int3 mov testb cmp loope mov or jnp je jne xor cmp dec fucomi inc push das loopne inc xchg stos mov stc push pop xor lock xor call (bad) mov aaa sbb lret pop mov pop or cmpsl xor ret push outsb sbb xlat lock pusha lahf jns inc sbb pop sub cmp fucomip mov lcall (bad) out mov stc pop dec js dec cmp fstl das icebp (bad) ret call inc xor push dec sar sbb outsb mov jne adc insb mov popf xchg gs stc push pop repz fistpll dec roll or ljmp mov pushf dec push imul xor stc cmc cli mov add mov jae lds jbe mov jnp and stos xchg or pop xchg testb aas js add shlb jp push inc mov (bad) aam jg inc xchg and clc xchg pop fisttp xor mov jbe and fmul mov jns or cli adc cmp fistpl ss sbb pusha cmp and or xchg sbb loope mov andl movsb sub and hlt dec aam fdecstp cmp sub cmp (bad) xchg cwtl jae inc rcr fldcw sub jo mov in and cltd pop pop je sub sti adc call push xchg pop mov pop jg pop icebp cmp xchg cltd adc (bad) aaa jge jne xchg aam cli and (bad) ljmp xchg mov adc jno ficoml ret sbb mov jns jg sbb adcl daa mov or mov cli bound pop outsb or push fwait jmp xlat adc push imul outsl sbb inc fwait mov mov pop popf jne cltd xchg scas ds sbb xchg imul insb dec push (bad) sbb jbe mov push outsb in mov cmp jns push or mov add scas mov jae mov (bad) mov (bad) pop sbbl fdivs mov push xchg push sbb jmp push sub jge aas pop repz mov and pusha test adc cmp cmp (bad) (bad) dec add mov mov les lcall pop outsl adc push fs mov mov or sti pop sub jbe into addr16 lcall sbb (bad) cmp lret pop mov fdivr sbb adc (bad) or cmp mov or mov cmc hlt out enter fistpll adc call sub loop (bad) cmc rcrb cmp mov sbb adc sbb popa cmp jg mov stc adc mov out xchg jnp dec mov jg mov fstps inc adc pop and loop fucomip mov cli push adc sahf cli orb jmp shlb mov xor pop adc or (bad) sbb or or jae mov pop aad inc add sbb lods sti fimull inc pop cmp mov data16 ss sti repz xchg push movsb inc sbb cltd jb jg pop mov and push mov leave jg xchg mov jle sbb in and iret cmp inc push or roll je sbb (bad) mov cs out fimull div mov negb ror push cmp ja fstp jle inc push adc inc pop lcall xor adc fildl out scas ficompl pusha add push lret jle push push xor aam adc cwtl pop mov jg mov jmp scas adc (bad) mov outsb fisubrl mov sbb jnp push fmul push xor lret dec (bad) dec fist lret daa push ss cmp insb push xor icebp scas cli shlb jg mov jb cmc mov cmp out sbb push xchg sub pop idivb sbb jb lret push inc cmp or and cli pop scas lods aam in lret fs mov dec pop inc loop outsb (bad) jne (bad) mov inc pushl jbe mov lods movsl stos sbb jns pop (bad) lock adc stos bound ror ss pop movl xor mov add inc sub fwait push inc daa jnp cmp dec fistpll hlt xchg dec stc test pop stos adc push fdivrs aam xchg (bad) aam icebp cmp aam test add xchg mov scas cmp add pop or push imul xchg xor adc cld xchg (bad) cwtl lea lcall or or popa mov hlt dec adc mov hlt xchg dec xchg jo fbld lret mov lret icebp jecxz cmpl mov sbb shrl fcom test mov ss adc xbegin ljmp hlt jb dec cmp iret mov sbb xor mov loope fnstcw jge js outsb inc enter mov je push pop mov inc xor mov pop das orl out xor push pop cli mov das into push or xchg jne jo aas push jmp js fcmovnb cmp rorl inc push je pop push xor fistp cltd mov sub pop sbb sbb sahf lret inc and lahf and pusha daa stc jmp mov cli repz jno pop mov arpl sbb lcall lock mov cmc mov mov aas or psadbw fmull mov icebp pop cwtl dec and ss jnp (bad) fdivr pop fisubl lea loop mov lds add xchg ja into and aam scas xchg jns mov push addr16 mov inc scas xor xchg mov push add fcmovnu pop lods adc or cmp dec pop push xor xor mov sub cmp and xchg notl pop adc dec pop push pushf cltd jge lahf outsb mov add jmp je ja cli and xchg cmp inc mov mov aaa enter mov bound mov call or cli push sbb lds ret pop cmp sti cmp out fiaddl push inc (bad) mov or push xchg stc xlat sbb cmpl rclb lods mov dec jns js inc push mov cltd pop push ficompl mov add and and jnp or fidiv (bad) jno dec mov into fildll je cltd xor sarl fildl divb fistpll call (bad) jne (bad) sbb dec stos frstor aam cwtl fbld neg aas xchg push addr16 xchg xchg fbstp mov leave aam adc push pop push aad pop nop cmp mov cld aam push cwtl jno lods xchg cmp or loope pop pop shr lahf dec jne stos xor mov sbb imul pop mov pusha mov sbb imul aad pop xor popf cmp ret xchg adc pop pop cmp jp dec fdivl pop cmp ja cmc and das (bad) aad push sub loope mov iret ror in icebp daa push test sub lds test int push and xor add jae pop pop xchg or pop insl pop sbb dec cltd cltd and (bad) cltd mov (bad) mov aas pop daa call cmp insl pop js fldenv lret pushl jl fcmovnu lds dec dec fwait (bad) push mov scas stos cltd fildll lret pop sbb and cwtl mov mov mov and mov int jg pop jp call jnp mov sarl (bad) lahf inc fucomi ret xlat dec sbbl push mov cmp mov inc call inc shlb mov pop stos cmpl ficomp xor add pop inc pop test mov lahf (bad) xchg jns mov or aad pop jle xchg xlat jb mov mov adc js iret mov hlt call int mov lods push test xor sub test jno outsb cmp ss stc fidivrl sub js stc lret mov or ja outsl (bad) xor call sahf aam mov xlat push lcall push xor (bad) sub fdivrs push pop enter out aas push mov xchg adc ds div fbstp mov add pop jg aam xchg (bad) xor decl pop sbb (bad) ss in sbb arpl psubusb je jp addr16 mov xchg jl inc stc mov mov pop sbb cmp or xchg jb adc cltd icebp sbb mov xchg stc dec data16 cmp cmp mov iret imul test aam test fisttpl cs aad xor cmp pop push push pop lahf fldenv lea xor mov ret repz pop push mov jne cmpsl xchg orl (bad) sbb fild cmp sbb test or cwtl pop jne mov sti arpl stos pop xchg test cmp (bad) fcomps push cli cmp sti pop and xchg jg mov fsts pop add dec pushf sbb inc adc popa sub int3 icebp movsb jnp cmp adc and inc invd in daa cmpsl aas add pop push jns inc fmuls pop mov pop out in xchg hlt rol or cmpb cld iret inc fmul xchg sub jo cmp inc jae and sbb cmp jb sbbl cmp cmpsl push fwait cltd xchg mov sbb cmpsb jmp add iret adc in ror pop insl add loop cmp adc pop ret lea lds sbb push ds sti pop xlat dec insb or push lahf inc sbb xchg or outsb xchg stc xchg push mov sar xchg rorb inc push inc inc cmp cwtl iret fwait adc sub inc test fwait dec clc addr16 sbb fistp or (bad) push dec inc enter test xchg jno inc hlt daa (bad) mov add pop fbstp aas jmp popf add push mov pop fwait daa jbe mov call jecxz or cltd fild push insl loope stc mov or dec and jbe sarl fstps shl mov pop cmp fwait xchg sarl add xchg sub sbb dec mov jbe sub pop or pop pusha cltd and jmp add jb popl iret sbb push xchg mov insl xor enter xchg mov jle sbb xor mov and cltd push repnz ss cli push pop rol and push dec jns fidivrl mov clc fistl inc lahf push jg mov fcmovnu call lcall negb (bad) cwtl cmc dec sbb cmovb sbb mov jg jb mov call pop pop mov bnd jg xchg xchg cwtl mov lret fistpl lcall imul xor js lahf push gs pop jmp aam pop mov jge pop jmp mov inc mov (bad) pop jbe in push ss and mov inc int pop pop push xchg cwtd shl js and (bad) cmp out (bad) xor (bad) dec cmp (bad) push push sbb jp (bad) sbb ficom mov or cwtl leave jmp leave adc (bad) jmp call pop lahf jnp mov pop aas pop jecxz aam cmp sbb pop pop ret orb cs mov in aaa icebp lods stos jp mov (bad) cmp jge int dec jmp xor cmpsl es sar js rolb sbbl loop cmc mov fdivrs pop cmp cmc push xlat and dec mov ror sti loope dec add les addps push orl mov xor lcall cli inc (bad) addr16 mov js fnop pop pop jne dec cmp cltd fild fwait (bad) pop cltd mov pop mov sbb sti xor ljmp ret (bad) and jbe jecxz and mov cltd pop pop (bad) sahf mov icebp jns xchg loop les sub jne inc cltd inc mov loop fwait je nop and sub xor das lret push mov mov pop clc mov dec (bad) cmp push xchg fcomps xchg mov sub dec sti jo outsb or jmp aas js dec pushf stc int mov fistp out jb scas xchg push cmp jne add mov out pause fistl push sbb inc cltd outsl pop into and xchg mov in add mov mov sbbl gs fiaddl push push pop lret (bad) out push rcrl or dec mov pop cmc imulb or insl hlt stc iret xchg push cli repz test mov push jbe lods sub repnz cltd daa (bad) lahf inc popf rcr loop adc lock push mov daa xor outsb mov xor sub inc out inc pop mov movsl ds mov in in das sbb sbb leave mov mov cwtl jbe push lret addr16 mov xchg inc xchg fs and aam sub je or pushf dec cmc cli cltd rolb pop sbb jbe rolb sbb pusha stos jbe xchg ficompl scas and adc outsb mov loopne dec sbb or stos mov push jne,pn push call pop addr16 push push cltd cmc jo sub call pop rcl cltd dec fstpt xchg mov mov dec fildll stc sub hlt fidiv xor xchg inc stc jle adc sahf movsl xorl xchg inc add cwtl mov sbb mov sbb nop mov fistp mov mov jg mov or in repz push pop les fwait sub cltd and data16 mov cmp jg push js stos mov sbb data16 sbbl in pop dec pop aas aas inc jl rcrb aam xor xchg cmp pop hlt lods push sub mov in shrb mov jnp ret lds mov push and push xor mov mov (bad) je imul adc mov and jnp pop jnp cmp shll pop rorb mov sbb cltd (bad) mov sbb xchg cltd jmp (bad) mov mov aad push out push mov fcoms adcl rcr dec mov mov xor inc dec mov je mov jp movsl fistp rcl jp ja inc or adc mov push ljmp fistl jbe shrb mov pop mov daa pop adc es rorl sbb fimull mov pop push jge fmuls roll jecxz loope fisttp jg sub hlt sub sbb cs xor shll movsb stos cltd inc mov jecxz and stos cwtl cmp xchg les mov adc icebp mov aam jp and jge aam stos push xchg es inc negb inc jp out cmpsb in cwtl mov inc add xchg adc xchg inc and mov test pop sbb mov cwtl pop xor cmp stc aas push push pusha insb fdivs shrb sbb mov sbb adc lea dec (bad) cmp jle add pop imul jmp mov (bad) mov popf aad mov xchg add test pop cmp ret pop cltd jg out adc mov outsl xchg xchg loopne or pop pop (bad) cmpsl dec stos (bad) icebp mov ss adc sub mov and pop pop cltd pushf pop sti lret loop pop sahf jbe cmp dec push sbbl out sti adc push xor xor js iret or cmp cmp mov and daa xor cltd jg or fcomps (bad) (bad) xlat sbb mov sub adc jbe inc into ja cli adc leave pop mov mov fwait mov pop add jbe adc negb das mov shl dec fld1 lcall add push hlt not aam decb sbb adcl mov negl xchg icebp xchg ss fwait cmovns mov lods repz cs sbb pop cwtl dec lret stos and pop lahf mov mov sti js (bad) sbb fldl2t fbstp cmc daa lahf fdivrp pop mov adc mov add lds lcall pusha inc mov in pop xor sbb mov orl xor mov sbb fldl xlat inc mov imulb xor in insl mov imul pop mov (bad) mov out mov iret adc push mov aas cli pop je mov aam add mov rorb inc (bad) xchg sbb imul aad dec out adc dec push xchg ret enter lret fildl mov rcrl xor mov fidivl jp pop mov sti dec (bad) xchg (bad) xor sbb mov out push mov jns aam repz loop cmp mov mov sbb icebp xor (bad) inc jg mov jo sbb inc push mov hlt adc and in pop in leave sub or lret push out push adc cs jne lods ljmp sbb imul xor enter cwtl add mov mov pop (bad) fwait je lcall pop js mov mov jp mov xchg pop popa rol lret inc add sbb repnz push and out lcall cmp out inc lret shrb pop mov pushf inc push jge cmp (bad) pop repz int pop pushf cltd mov push es lret inc mov dec push mov mov or mov vunpcklps int inc sub mov push dec dec cmc addr16 (bad) jb test push mov lock pop mov stos (bad) xchg (bad) dec jnp inc push jo fildll das cltd ss call les test div push sub cli (bad) dec fidiv jns and aas xchg stos fstpl xor fdivrs cmp push (bad) jns fildl les or push sbb ja xchg sbb mov fbstp repnz or pop adc push lock rcr or sete jns cwtl loop mov dec xchg add scas mov xor outsb mov shll test inc mov or jns jae fistl cmpl mov (bad) mov mov push mov push adc dec into push divl jg xchg arpl push lcall jg aam add cmc jne jns subl vmread mov pop das mov mov adc cmpl mov pop pop mov ror mov pop sbb pop mul ss ret sbb daa sahf gs cwtd mov imul in lret push dec adc mov inc push dec aam mov nop mov stc sbb mov ss mov bound test cmp sub push jl loop dec mov int notb inc push sbb fistl lahf jp ds and or mov push dec js sub enter mov mov xor mov pop stos mov add aam sbb (bad) mov aam dec outsb add inc cli push push (bad) push aaa jne push (bad) stc js mov sarl adc mov dec enter fadds adc inc fistp add mov add fldcw sar mov (bad) mov adc xlat pop cltd or fildl mov pop notb (bad) rolb ret stos xchg lret pop sub aam jo out iret jns cmp mov push scas sbb (bad) dec xchg mov loopne or loop push inc pop leave ss rol adc mov test lcall jbe das dec xchg test in popa mov aas mov jns jnp popa xor sbb push imul push iret aam jg out jle cmp pop add sub xorl pop ss aaa add rcrb mov lods xchg subl xor adc push mov jmp in sub cwtl fmuls jne mov xchg fsts mov jbe xor dec cmp inc mov dec mov dec mov sbb sbb arpl push lcall push mov inc int roll fistpl fmull add dec gs arpl adc enter push leave cmp mov add dec cltd popa add loope mov iret lahf adc lret add push (bad) aas pop dec and sub mov mov jp xlat test loop fbld jb dec jbe cmp push ss arpl dec pop cmp xchg jb jmp pop loop in and mov sub mov notb test cmp cmp (bad) xchg subl (bad) fcomi jge dec pop jne jmp jecxz adc imul out inc mov (bad) das push jge pop sbb loop imul mov test xor jns (bad) push xor jb or push fbstp pop sub cld insl in cltd inc (bad) (bad) (bad) (bad) icebp mov pop aaa adc jne inc jg scas cmc stos push xor sbb mov mov leave xor pop add dec jb mov push mov pop cmp lahf jno jmp fdivrp jnp mov pop adc sub adc pop and jns or jmp add pop aam sub jae cmp sub mov and stc fiaddl je cmp mov mov (bad) cltd icebp xchg sbb push incb sbb jne fisubr xchg sbb test cmp dec jl ja adc stos push push les lahf js jmp sbb negb jmp icebp adc mov (bad) inc fld lret inc fcmovne repz fdivrl push sbb bound lods jbe fistpl sub cmp (bad) cmp mov push jne mov aaa fstpl fadds push je out cmc inc lahf nop xlat das or add mov addr16 lahf mov adcl (bad) pop jmp adc ficom sahf cmp sbb jle (bad) mull icebp xchg mov aad push or cmpl sbb xor adc cs pop or nop fcoml inc (bad) mov adc push dec push pusha sbb dec mov mov inc sbb stos jmp jl dec (bad) adc sahf mov jns outsl mov lods lods inc xchg aaa je (bad) das cmp insl ror rcrb sti sbb or mov pop ficompl rol stc stos jo dec inc into inc push mov mov fucomi loopne xor loope lods leave into aas fadd aad and jl or jne lcall adc jecxz add dec cli imul imul sti mov insb mov dec push and push sub fidivl or cmp jmp lret lea adc push mov into fstps xchg mov push push flds push mov bound cmpsl or jns pop andl sti (bad) and push mov adc cmp add xchg xchg scas sub fildll mov fisubl icebp addr16 jae mov inc insl ljmp icebp mov mov xor inc xchg push mov mov test mov mov cmpl lods mov aam jge data16 cli cmp (bad) mov mov mov xor pop jp pop xor xor push into adc repz (bad) popa or jae mov cltd mov jg lcall hlt sbb leave jb and cltd rcrb sub scas xchg sub stc fidivrl fidivl icebp add sbb mov sub sbb jg (bad) icebp mov cltd inc mov pop dec (bad) xor dec mul ficompl cmp mov imul add lahf jecxz mov fcmovbe xchg pop je lock adc pop mov xchg sub (bad) push push pop cmp insl xchg or cmpsl fisubrl ss roll mov jle inc lret das pop dec sub cltd inc cwtl stc rcll cmc (bad) cwtl (bad) xor pusha mov push iret (bad) insb xor fwait xchg jg fcoml mov dec dec movsb pop or iret sbb (bad) fldt mov and ja inc pop loopne mov fmull cmc testl loop stc xor inc fsub mov hlt sub movsb push es pushf xchg pop leave js mov xchg mov es xchg popf fisubl xchg daa adc movsl push rcll iret dec (bad) aam (bad) xor inc and adc pop pop mov dec and hlt mov es (bad) push popf ss mov sbb pop pop pop fidivrl jo push jae cmp jle jmp pop push mov push ds jle gs aaa sub sbb cmc outsl dec and mov pop mov mov decl push mov adc mov jbe call enter mov or push ret dec pop cmp in cmp push outsb mov sub cmp xor cmp fistp xchg jns fsts shlb mov inc subl clc push xor jle pop ds rcrb jge mov scas adc sti inc xchg sbb movsl mov xchg pop mov pop (bad) mov mov pop inc mov hlt dec adc cmp addl jg outsb (bad) sbb pop pop imul ficompl or into pop pop jnp cmc xchg xchg pop and ja (bad) jo cmpsb push cli and or dec cmp pop popf sahf (bad) scas ss sti pusha jmp outsb cmpl mov push pusha movsl jb adc (bad) pop pop inc xor mov cmc push adc leave bound rol cmp fs cld and test pop push in popf mov outsb sub rcrl arpl cmp pop int cmp lods cmpsb pop call repnz imul pop orl cvtdq2ps cli xchg add lcall fadd stos mov and ss incl (bad) ljmp add cmp pop jl lea xchg xor push pop fcomi jne test les pop pusha bound sub popf pop push xor xor dec pushf inc jecxz inc xlat rol sub adc cmp sub adc out mov sub ret es add cvtps2pd aas aam decb loopne fdivl jmp dec mov pop mov inc test cmp (bad) mov push mov pop das out fs mov int hlt dec out pop xchg nop mov out dec xchg sub shrl aad pop pop add push (bad) inc xchg int3 push xor mov xchg lds dec cwtl cs pop daa rcrb fisttp (bad) ljmp or cmp or xchg lods sbb es inc jb cmpsl out inc xchg pop aam pop mov cmp mov (bad) insl enter push pop jle mov test leave inc imul inc mov stc add jns (bad) enter mov out subl cld hlt pop arpl outsb test int push and xchg push pop xor or or loope mov popf and dec add je fwait xor (bad) adc js scas fstps and mov dec inc lsl xor xchg ds and jne add adc xor mov fdivrs pop push out lahf iret imulb ds inc jecxz push test adc jp sti pop fnstsw (bad) insb sub pop test into loope dec mov pop or dec adc jge shl mov jnp (bad) mov in je mov shll jns and fstp pop inc add xchg sbb sbb loope mov inc scas movsb xchg jnp test cmp mov aam lret cld call jle,pn pop (bad) pop pusha mov addr16 ja adc sti sub in xchg leave pop and pop js jge (bad) lock push fucomip inc rcl push (bad) mov fstps dec push sub sub mov or je negl (bad) cltd jbe xchg and cmpsb or (bad) lock fwait lret fstps movsb out mov mov mov aaa pushf test dec sbb insb mov push cmpl dec cmc jo mov clc add arpl mov pop scas adc mov push jb pop xor sub (bad) xor jns mov xchg test inc rcr push repz push mov pop ljmp je mov pop leave idivb aaa and mov pop sti add adc adc sbb clc mov and mov push cld xor inc imul loop jg sti scas out jmp notl bound dec jnp mov sbb or xchg inc push dec mov jo jne pop pop sbb lock pop sub ret xor pop hlt pushf add add dec jns xchg mov fmuls xchg imul adc push xor fwait js int3 and cmpsb or and pop xchg fidivl mov xchg mov imul in sahf mov push leave insb pop fsubrs xchg sbbl sub push jmp fwait jb pop cmp aas ds pop sbb mov pop or sbb mov push and and sarl add pop dec das dec and js stc inc aad jne and or call repnz adc (bad) jbe xor cmp fstl lcall repnz stos xchg mov mov pop cmp ss pop sbb notl xor pop pop stos mov cmpsl mov call mov pop pop mov pop test test sub pop jle adc mov lret xor pop out mov mov push (bad) clc rcr add mov mov test (bad) arpl lret ret das add dec jmp lods rcrb push inc pop hlt test aam xchg mov in cmp mov pop call push fistp jne mov pop xchg or (bad) pop hlt pop jmp and inc aam pop inc xchg dec sub xchg add push arpl sub pop mov (bad) mov dec mov sbb jo (bad) hlt xor jno fbld pop insl jbe cs cli sbb push and pop or ljmp es pop out push mov cmovl pop lret xorb sub cmpsb push inc jo pop std sbb ds hlt imul jp jge in pop int3 inc addl adc das cs cltd aaa pop xchg jmp lret push and bnd mov push enter pop mov mov or ficoml mov inc lea ret jg cli jle sbb push pop (bad) lods scas pop sarl imul stos sar dec pop ror xor inc pop movsb push lds or mov data16 pop icebp push imul pop add je test jp pop pop inc or add mov xor jnp pop dec mov ror js push push jmp fstps call pop in rclb mov jns test pop lods mov sbb pop sub loopne cmp cmp pop scas pushf jo dec repnz stos cmp sub cmpsb movsl push mov inc push ss arpl mov pop adc inc (bad) sti outsb test adc mov sbbl sbb out jle push pop ss addr16 push pop jmp add mov pop dec in pop outsb sahf inc (bad) insb xchg outsl and test push ljmp sbb add jecxz pop nop out scas jo push cmp loop adc addr16 and sub jo sub jge sahf insb jmp js pop pop jne mov push mov xor ljmp lret xchg rcll pop fstp bound sub stc or pop push mov mov add inc mov or int (bad) add and cmp lock sbb and inc arpl popa decl pop jmp inc cwtl cmp jecxz mov add movsl xor jne mov pop loopne les pop in insl repnz sarb fwait jno push rcrl mov cmp ret adc sbbl stos sub mov inc mov dec mov imull add scas movsl dec in lods and pop loope,pn fsubrs push fisub pop xor stc jmp mov icebp jb lahf pop js lods jg fdivrs pop inc or pop or repnz cld push lret mov add pop out mov sahf ja mov outsb xor cmp mov sbb mov (bad) pop rcrb mov push in adc lcall pop insb push push and fistpll rcr pop sbb sahf pushf loopne xchg or jb pop and push call repnz loopne pop outsb cli jnp and pop xchg xlat notl lcall cmpsb stos arpl (bad) ss lret pop call cmp js push inc mov or loopne add cmp cmpsb (bad) cmp inc xchg pop or sub fmuls int stc cmp sub mov xor ret pop pop sbb mov inc xor lret fcomp jecxz pop jo cmpsl mov pop xor in lock ds mov stos pop inc inc lods ljmp ds sbb call cmp ds lret pop lods mov push out pop aam push hlt pop fwait mov fs xchg pop or push sub pop add negl sub pop sub aas pop add das mov adc mov pop sub sbb out pop repnz fist pop cmp or outsl pop mov addr16 sbb pop mov and lods sub xor pop lret mov movsl lea scas dec das or cmp leave jmp push lahf out enter out or jae xchg rcll mov or bound insl pop test rcrb push cmc (bad) xor dec pop mov (bad) stos jl mov and mov int pop or mov (bad) pop jb inc push jo shrb mov mov adc ret out pop (bad) (bad) lea lods aam fdivl mov mov jmp xchg shrb enter xor sub xor adc ja jae push adc nop push xor mov es jecxz call cli inc jb add test push dec pop push fmuls pop adc pop jno les enter inc pop into mov sub xchg scas mov xor or (bad) repz daa sbb movsb in test mov pop bound jns xor push jecxz or rclb xchg pop pop add adc gs scas hlt push orb fcomps push adc pop out lret out jmp inc scas or mov imul pop sub sti (bad) pop mov inc test sub adc jno sbb fwait push pop jle test sub aaa std jge mov cmp jmp cmp push pusha enter pop or (bad) or and lods dec pop ficomp push jbe jnp mov xchg aad or loop out lock fsubrs pop mov add pop pushf cmp (bad) iret (bad) xor stos insb push pop pop push xchg scas sbb mov aam jo fiadd shlb inc mov pop divb push ficomp icebp addr16 les lods pop jl xor push mov add pop std inc adc movsl cmp jmp pop insb ja lea lock (bad) jnp or mov xchg and call shl fstpl pop mov push dec out push jnp (bad) (bad) pop mov int cmp lea mov jno inc xchg mov clc aaa adc adc js pop and (bad) icebp sub pop mov mov xchg xlat add pop aad dec js out jmp push int push and jl pop cmpsb icebp jp pop fnstcw out rclb or and jmp stos enter dec clc cmpsb pop popl xchg pop sarl pop add lret cmpsl push xchg outsb test ljmp xchg pusha push cltd lahf xchg jb pop cmp mov xchg test scas add pop push sbb int3 popa xchg stos xchg shll int pop call add mov xlat or out mov in ds lret repnz mov jne mov pop rorl mov lcall inc dec stos in jb mov mov add pop test test jmp popa jns pop jno cmpsl leave mov mov ss jae pop mov mov repz sub pop pop adc pop int3 pop fldt push sbb xor into pop rcrl jmp lds mov jecxz mov call adc sbb jp (bad) push ret stos add push lods loop in adc sahf cs (bad) push enter pop pop pop mov popf push cmp dec js sbb popa lret psubusw xchg in xor xchg add mov fs adc data16 pop hlt mov int3 pop mul lcall out add imul fstps fsubs mov xchg pop test int3 stos ja mov pop jle sbb pop in pop rol pop dec fisttp ss cmp pusha lret mov xchg adc ret push pop dec fmuls lcall rclb mov pop pop push dec mov xor pop adcl ds mov pop mov imul cmp or sub arpl cs pop mov pop imul jl inc cmp fmul aad push pop mov push outsl idivl icebp xchg jo scas repz imul (bad) (bad) int3 pop and je dec lock pop pop jg movsl or scas loope sub cltd mov movsb loopne pop test adc nop dec rcr clc xor (bad) jmp pop (bad) je sub mov mov sbb push jbe adc js push or test insb mov adc jl pop jge fisub stos into push pop mov insb stos imul data16 fxch xchg mov push mov mov and outsl jns pop pop and or pop repz xchg cmp lret xchg mov xor ljmpw xchg xchg dec xorl andl xchg jne ffree cmp sbb pop test dec mov imul iret sti and jl (bad) add sbb xlat pop push sub jle push and es sbb jnp or gs inc add pop cmpsb pop dec fucomi dec in popa rcrl and sbb jmp out mov push push ficomp pop jmp nop decb mov fisubl xor cmpl pushf repnz aaa iret sub xor out mov dec jmp data16 push pop clc setle inc sbb push fistl sarl int addr16 aaa pop sub enter pop fnstcw inc mov dec in inc jbe fildl (bad) movsl ljmp mov je pop repz or xchg and mov jecxz pop enter iret adc xor push pushf popf fs inc mov pop lahf mov mov gs pop iret mov inc mov inc ret mov lods adcl xchg mov pusha fstps (bad) dec xor idiv mov push rolb jp jmp or and into and inc pop jmp xor icebp mov jle js pop xchg imul pop pop jecxz xchg loope movsl xchg inc pop scas sub stc sub cmpsb sbb mov adc mov mov xchg jb sbb pop outsb cmpsl fwait mov ret mov out push imul cmp popa cwtl mov pop dec mov pop sbb nop adc int pop and inc xor addb dec in aaa cwtl xlat pop add jp push pop fisub mov mov nop pop sub int3 jne pop mov mov jmp add pusha xchg std xchg or mov mov mov cs (bad) or push fdivrp push pop pop adc and adc jae fnsave incl sbb sub inc xchg bound pop das sub or mov outsl mov andl jle fimull mov xchg in dec (bad) stos rep cvtdq2ps mov ret mov cmc sbb push mov pop pop mov (bad) stos push mov fdivl adc sbb loopne fiadd push dec movsb pop pop mov xor pushf add pop or shr jl dec pop mov or aad sbb pop sbb das lock add cmp add leave sbb dec rcrb ret add push cmp push stc adc sub jnp ret cs loopne or adc xchg mov pop fs out fwait inc sbb dec and xchg std sub aam mov fst leave call stos mov fcomip inc jge mov shll pushf out hlt idivl xorb dec pop pop xchg jae (bad) sub push repnz mov stos int3 int out rcll push push fs pop fs shrb xchg and sub cwtl repz push adc pop xchg test test ja push stos fcmovnu pushf test aaa pop iret jno or push inc sbb in pop pushf jl jae push cmp sbb jle mov (bad) mov or cmp (bad) cmp pop int mov ss shrl inc cmp xchg loop sbb sbb inc lcall sbb leave in ror add repnz mov xor ja rorl mov jns data16 das in fisttpll jbe movsl rcrl jl and add jg ret les mov xor inc pop jne loope mov mov pop sub sub xchg push out adc inc sbb mov mov add (bad) xor or rcrl sarb inc push inc xchg fs lods mull inc pop inc jecxz sub fist inc pushf mov (bad) test pushf push lods insb mov dec (bad) iret fldcw fildll inc jmp enter lahf and movsb dec les cwtl sti fisubr stos mov or pop xchg mov negl ljmp dec and shrl sbb scas mov movsb out pop iret push shrb cmp vcvtss2sd inc dec push je dec xchg push or es data16 pop fisttpl repnz cmp mov pusha inc mov sbb stc ljmp push outsb cld xor adc or insb lret fsubl pop sbb sub aas dec idiv sbb and ret lcall nop rcrb divl jg int3 sbb out ljmp jp pop cmp (bad) pop and jmp jmp sbb andl rcrb sarb push lock movsb nop pop insl mov mov pushf pop mov ret mov lret adc ret xor mov inc xchg popf mov pop dec mov push xchg cmp ja mov xchg dec dec dec or mov (bad) iret test jbe fwait cmp inc cwtl fimull nop in inc (bad) lret pop push mov sub mov out cmp inc mov xorl or lret subl xchg and push sub cmpsb xor lahf cmp jl xlat insl cmc mov pushf mov fnstenv jge cwtl push mov mov jo xorl mov mov mov push push insl repnz cmp popf and into js xchg cmpsl sub or in stc mov xchg lcall sub ljmp les (bad) cld mov imul xchg jl mov fdivp shll lret xchg add dec adc mov inc pushw pop cltd jg icebp (bad) jnp pop inc mov xor hlt mov jbe mov in in sub ljmp or fs xor in inc mov xchg iret xor or xchg add jno ja mov pop popa add in jns,pn inc insl adc mov imul mov daa jmp pop xchg xor dec scas or cwtl mov aas pop int3 fdivp enter mov mov pop sub jecxz sub js stos inc sub dec hlt js ret mov ret sbb jp mov or lahf mov push mov pop push (bad) sti bound mov adc arpl inc push jno xchg adc jnp call inc cwtl movl cwtl ror mov sbb push repnz pop pop dec popf movsb popa fisttpll push xchg inc pop (bad) shrl sbb dec jno movsl iret out add lret xchg insb test loope xor outsl or jge sub out (bad) lods lret jnp test add pushf dec jmp xor ljmp xchg lahf sbb mov cmpsb pop fistpl xchg leave cmp mov fnstsw cmp loope in pop pop jp sub idiv stos pop inc xchg sbb ret imul mov test stc cmp ficompl repz inc jno and push cltd lods dec mov sbb cmc xor or cmp cltd (bad) cmp leave mov (bad) or sub sbb sub rorb xchg xchg dec mov daa mov scas xchg jmp stos jmp inc iret (bad) jl negb cltd inc xchg inc es xchg addr16 push lret inc inc sbb jl and xchg push pop and aaa mov xchg ljmp stc sahf lock xchg sub xchg xchg adc (bad) daa gs enter pop xchg cld or xchg adc cmp data16 leave in iret popl fild cs cmp sbb mov (bad) popa ja int3 xchg lret cli pushf dec add inc daa je push cwtl movsb sbb fsts jno lahf lcall out call jno repz pusha cmp call fbld push xchg pop das popa fisttpl enter shlb dec jl jge lahf das push sbb and sarl add sbb mov dec push adc out sbb pop mov pop or iret push int3 sarl or pmulhuw push mov pop out cld mov xchg lock xlat xchg cmp call adc sbb mov out pop imul jecxz pop sub add daa jne pop pop cwtl sub pushf and sti xorl les pop xchg (bad) fwait push xor fnsave (bad) (bad) out xchg mov xchg sahf je adcl jl jmp mov fcompl rcr pop int cmp outsb out insl pop or cmp rol xchg fs add inc lcall cmp fsubp inc mov ss xchg (bad) push mov cmp pop aam iret sar pop fs scas das in mov pop addr16 inc push mov jbe or pop xor cmpsl xlat out test mov mov sub dec cwtl mov out (bad) xor inc adc out mov mov mov mov stc xchg lods cmp xchg xor imul or movsb cltd adc out stc (bad) data16 das ficoml pushf adc test inc pop leave and fimull pop icebp out cmp lahf mov imul dec pushf ret and sub stos mov jbe ljmp (bad) fimull mov and push rcl mov mov inc xchg lret mov pop insl xorl movntss ljmp xor cwtl insl pushf sub (bad) nop add in repnz inc (bad) mov xchg push cli insl in add sbb pop sbb xor cwtl xchg pop mov push mov jg inc ret inc cmp and insl daa gs fildl into adc push sub xchg xchg (bad) scas xchg jle lods push cwtl fmuls xchg call cmc mov pushf dec xchg jne lea inc inc xor lock mov aaa sbb maskmovq negl cmp sti js shrl adc rcrl add xchg jnp cmp adc sbb jmp pop dec pop jecxz cmp (bad) fs adc cli dec pop or xor in iret adc sbb cmp pop pop xchg iret jp xor add js push jne insb push lds mov jnp cmp out cmp popa inc adc cmc push frstor sti mov in pop cwtl pop (bad) push pop das mov addb jns inc xchg iret popf bound out cmp pop inc std xchg cmp sbbb adc lahf adc jno neg mov aad cli cwtl cld dec push push pop mov aas stc mov test ljmp mov test loop ljmp fisttp (bad) jnp pop cmp push add dec (bad) repz nop call jg dec push sbb and push push ss (bad) jbe pop or push mov mov sub test icebp adcb xor jne (bad) data16 and insl test dec subl push mov les jo inc cwtl push jecxz arpl mov xchg int inc call jl rol mov mov mov jb leave jl test fcmovne add addr16 mov xchg dec lds pop pushf js imul fsts xchg fild mov popf and lret (bad) imul xor lahf (bad) aas and jb mov adc lcall xor (bad) dec jmp xchg jbe test call aaa jnp pop int3 loopne mov in sub sub je addl out out cmpsl cli rcll imulb lret pushf mov cmp xchg xchg cltd repz adc mov mov lret xchg inc mov movntq push jno push data16 inc (bad) or mov jnp push fisttpll jo inc pop sbb stc xor xchg pop jg lret dec xchg inc inc pop arpl cmp cmp (bad) lods (bad) sub jmp push push lea mov push sbb ds cwtl aam int3 pop test mov inc mov les loope pop mov cld push in fstp inc jbe cmp ja jmp data16 rorb leave and xor aaa cltd jl loop stc lret subl ret pusha xor pushf mov fstl lea mov cmp scas int fildl push push fmul and dec mov jmp mov insl (bad) jle dec iret pop mov fucomp (bad) jns adc std push mov mov repnz and in push sbb cmp ret xchg adc divl pop mov inc cmp mov outsl cltd (bad) shrl call ss into xchg inc and mov mov jp sub jo jb pop lret into aaa cmp xchg loopne repz sbb and mov sub subl mov loope jecxz add out sub (bad) idivl inc iret int loop and xchg xchg sbb mov (bad) fildll and div popa jge and sub cld mov cs (bad) sbb push xchg mov shrb cmp lea cmp jg xor daa mov xchg int3 push and outsb divl rcr inc test xor inc dec xchg cltd xlat fsubr gs insl lahf mov jg cmpb in mov pushf outsl leave inc jno outsl pop sub stos adc repz xchg mov or scas inc pop andb dec in sbb leave add mov fwait or clc adc ret je jnp sub xor mov push fmull sahf arpl mov and push push aam pushf jbe pop inc popa and lock inc mov push mov xchg sbb pushf (bad) cmp nop andl and call fildll stc cmp fiadd lods (bad) mov lret mov mov pushf stos pop int3 int3 jle mov mov inc clc jo addr16 push dec std shr sub (bad) decl dec or jp adc fldcw sbb (bad) out xlat push inc fisubr push subl jle cmp popa sbb andl fistpl adc sbbl push inc or sbb outsb jns mov enter xchg mov (bad) dec dec dec rsm pushf inc jl mov lcall icebp fisubl jp jno dec pop jle pusha sbb je push xchg sub pop cli push mov test jno iret sbb std fist je sarl push cli inc fimul lds sbb cmp xchg xchg cwtl cmp je dec mov push call and push and rdpmc lcall arpl outsb popa push pusha mov subl mov pushf fcomps mov xor repnz sub cmp sub fist mov cli or mov (bad) cmc sar dec mov or xor dec addr16 push sti push sub leave mov sub (bad) xchg imul inc test cmpsb xchg jg fwait scas push pop xchg cmp ss mov and (bad) cmpl loop (bad) xor lods mov movb xor xor syscall xor pushf iret sub insl fistpll outsb jne mov fcmovu or repz and inc outsb mov dec jns xchg stos aad daa lcall mov sti and icebp push xor (bad) mov cmp pushf lock in xchg push outsb es into test iret lret lahf cmpsb jb lods mov loop mov gs mov repz pop mov adc fs in mov faddl and mov popa fildll and sbb add adc sub sub addr16 add pop and call ja out movsb sti lret add adc stc mov inc pusha lods idivb add out cwtl push mov repnz xchg outsl es cmpsb or mov sub (bad) mov jb xchg frstor adc icebp sbb mov pushf mov dec xor test adc or adc roll push adc ficomp movsl lods jno add test fwait xchg sub push out mov push je ja arpl cmp mov xchg and lds (bad) inc (bad) mov rcrl jmp mov xchg iret and scas cmc fsts roll push lods xchg dec jl les sti flds pop outsb mov jno das cmp xor pop jnp xchg ret mov stc sbb adc daa cmp xor jecxz fimull mov fisubl xchg cmp or (bad) or sahf add pop pusha xchg inc das mov adc mov push inc out xchg push in lds push xchg cmp je pop pop ds rcll mov shlb sbb mov fs pop arpl pushf pop push push sub (bad) iret cmpl mov jle popf cs inc xor jo jle scas push (bad) or in cmp ret pop insl ja or std loop fmulp mov xor popa insl aaa lahf dec out out in xor cmp call cmp dec mov xor pop xlat jo hlt xchg int inc sbb dec ret mov fwait iret jle inc push cs shll push lahf mov push test jno mov inc outsb cmpxchg es divl rcrl mov lods addr16 pop mov repz mov and shlb jns mov cmc mov (bad) and mov lcall scas outsb cmp lods call sbb xchg mov jne fstps xchg fsubs lds (bad) aad xor dec mov (bad) push jecxz test jmp jns jno xchg pop mov pushf add pop adc mov mov mov jp mov rcrb sti (bad) mov and fcmovnu xchg push ret push inc ret mov idiv rcrl xor push das sbb mov ljmp addl add jle pop xchg cli pop inc push dec popa mov lds pushf cmpsl daa xchg cmpsb pop dec cmc mov lahf cmp jae mov xor popf leave lahf test push arpl into mov mov xchg outsb ficoml or and insl test dec sbb (bad) xchg mov xor out popf inc sub dec sti and and dec adc ret jmp ds or rcr pop xchg push jno mov sub test mov dec mov fstpl pushf mov (bad) roll sbb cwtl mov stos data16 cmpsb jo aad nop cmp pushf adc outsb inc push xchg mov pop outsb clc sub cs xchg cmp repz sbbl movsl cmpsb xor fsts pushf jle addb sub xor movb icebp ret cwtl inc testb mov call pop jne aaa cli aas mov mov adc mov xchg sbb fadds (bad) lahf jns xor xlat jp xchg push fidivr ficomp aaa dec adc pusha sub out outsl adc mov jno xorl add mov xor xor outsl mov rclb dec clc rcrb jmp fild and rep sbb dec mov icebp push je sub cltd xor add test and int3 or mov pop push pop xor mov pop xor iret mov add jg mov fmuls lcall xchg sbbl pop (bad) pop (bad) cmp iret push ss xor leave outsl push stc xor pop lret lods dec dec out or popf int3 loop iret dec js dec dec pushf push jp xchg cmp lret (bad) jle enter cmp jno lret push xchg hlt inc cwtl and add std (bad) iret ja fmull mov pop mov (bad) or ds stos xchg scas lock pop lret sbb cmpsl adc lods dec sti stos cmpb mov hlt lcall pop (bad) mov push xor inc inc cmp (bad) adc nop sub fistpl push mov sbb fsubrl inc sbb mov lods stc and xchg addr16 aam sti cmpb stc cld xor fwait push ljmp and xchg push dec cmp fs stos add inc mov dec clc lods (bad) or into mov mov mov xchg das mov sbb (bad) (bad) test xchg fildll pop lcall fwait mov xchg jecxz xchg mov fidivr fistpll add jmp cs pushl add sbb xorl jecxz dec xchg test in jo mov nop leave xchg dec or sub xchg dec dec push insb enter aad sub fwait pushf jno add sub fdiv adc mov push push xchg sbb push shlb jecxz hlt test cmp dec je mov and cmc mov pushf mov xchg cmp push adc mov stc mov pushf mov iret (bad) aas sub cltd test mov xchg repnz es and or pop mov inc cmp or lahf jbe and mov mov iret fistp jmp xor leave iretw stc push rcrl mov lahf call inc daa arpl push pushf sub adc xchg lods dec out (bad) mov mov out inc (bad) jns,pt icebp popa mov aam gs cmp in pop and into test push dec push fildll adc push je and clc sbb iret movsl pop pop xor jne mov xchg inc aas fwait and loop and inc pop push loopne inc rcll add cli fwait jnp jg push in add jmp jmp test lock mov data16 mov fcompl xchg movsb inc and aam jl (bad) mov mov stc sub inc mov shrb lret mov pushf test lret pushf sbb scas mov test es sahf mov ficomp inc jnp jno mov push pop jae,pt loop fistl xchg mov pop push jno xchg lahf pushf xchg imul push (bad) aaa xor jge sub mov sbbl sbb jp fstpt cmp call jns,pn pushf and call add push inc push mov mov jle jmp mov or or and xchg and mov push dec inc fstps test mov jg (bad) mov mov out scas loope (bad) stc jae jmp sub (bad) sub in rcrb cwtl or mov (bad) notl mov mov lds jbe pop dec sbb shll jns or mov rcl xchg push add js jecxz insl (bad) repz leave pop pop leave cwtl mov imul pop clc popf push inc jle pop lret jbe add lock adc pop dec ret inc pushf and sbb leave sbb xchg jle out lret xor fistpl mov icebp das mov nop/reserved pop cwtl rol adc and fistpl sbb shrl mov adc orl pushf into rclb push (bad) shll aad jg loopne and hlt push mov sub sub fld fist inc xor xchg and rcrb xchg xor adc hlt pushf sbb icebp std inc cmp out aad mov inc lahf (bad) gs xor xor jl xchg (bad) dec cltd sbb xchg jno addl scas out imul sbb adc shrl (bad) ljmp and test inc mov cli clc or xor inc popf mov shrl in adc imul push jl inc clc lahf (bad) (bad) sub sbb mov jno mov xor pop mov in inc mov jmp mulb mov mov mov and mov lret mov mov mov xor fsubrl jmp pop loop mov adc in inc (bad) mov pusha jmp mov mov daa and mov shl adc mov popa mov adc (bad) int (bad) mov sub pminub (bad) int3 cmp pop iret les cltd bound icebp xchg adc rorb out repz inc inc jnp gs dec outsb aad mov je cltd subl (bad) loop les mov sahf (bad) popa pop fwait out sbb adc rclb push add mov ficompl lcall popa xor insb xchg cli jnp jmp add sahf dec xchg out push sub mov outsb sub fstp mov addl aaa sub cmp les out inc sbb xchg dec cli stc out lret pushf hlt sbb ljmp push cmp mov add (bad) out mov xchg adc into ficompl out into push mov mov jecxz pushf xchg loope add cwtl ret xor aas fildll fildll popf push xchg xchg mov ret or mov in rclb xchg lds pushf adcl or les rorl pop and icebp pop in mov xchg cmc idivl cmp ss push (bad) cmp cli mov adc ror movsb adc (bad) cmp add flds shl inc clc jge sub imul cld and push mov mov jl scas aas dec pop cli ss dec loope (bad) adc mov lds cvtpi2ps ljmp jmp mov cmp mov mov xchg pop es loopne (bad) roll inc mov mov add push xlat int repz mov fbld pushf movsl daa jecxz sbb add sub ss mov fistpll lahf cmp sub and shrb addr16 loopne lds dec pop pop shlb jnp (bad) jge inc fisttpll mov push dec adc iret (bad) cli push or mov das xchg xchg or mov cmp sub cmp pop xchg roll pop push xchg imul and fs pop dec icebp lea fimul sbb cwtl inc hlt and scas rorb pushf das and add inc dec imul cmp dec subb mov dec sbb push pop in mov outsb lret push xor cbtw gs aaa xchg test adc sbb lahf sbbb notl or sbb pop cmp ficomp xor stos data16 test push aaa jbe xchg nop fistp adc test div lcall and xchg sbb lahf clc jno mov rep pop and (bad) psraw stos jns mov sbb jns mov in xor scas mov and mov bound cmp icebp add xchg mov or (bad) out ds push xchg pop jmp sub loope rcrl data16 jne rcrl cltd or fidiv int mov sbb stos lods inc mov jg fidiv jp adc jno negl mov pop dec sub lds cmp pop fsts js lret lds mov (bad) scas lahf jnp stc xchg xchg lcall jge pop push cs (bad) and sub pushf stos decl xchg push and stc pop inc (bad) std xchg movsl mov xchg jo push jmp loop movb shrb cld inc xlat ficoml add mov ljmp into pushf stc or jmp xchg cli pushf mov fwait jo es pushf stc repnz loop sarb sub push rclb cmc iret je inc jg xchg fnsaves fstp lock mov dec and push (bad) fs pop sbb out jmp sbbb cs shlb scas push (bad) mov mov mov mov pop push mov dec (bad) lea aaa outsl pop insl mov ficom dec test and mov add or rorl push rclb (bad) int iret sbbl andl fnop daa inc xor fcmovnbe fs (bad) sub mov int3 fiadd sub cmp sub stc call push loop scas adc je push xlat adc xchg xor or jbe pop and mov xchg andb jg pusha mov adc je add sti xor cmp jle adcb stos loope inc lret loop incl arpl sub mov xor fwait or repnz das pop jmp test cli pusha shrl int mov cli rcll and fisttpl repnz pushf adc in sti xor cli addr16 das pushf push mov dec dec inc mov xchg in hlt insb rorl pop shrb or fistp mov pushf bound call sti xchg cmp daa js addr16 push jle pop xchg jmp push (bad) clc aas fdiv push mov movsb pop lret mov lds lahf sbb mov insl std out mov cmp adc mov mov cmp fwait mov xor leave xor xchg sub mov mov pushf ljmp ljmp popf mov dec xchg and push cld inc push pop rcr sbb pop sub (bad) mov xor cli rolb bound dec sub sub sub fldt xchg lcall xchg mov jle cltd pop cmpl and inc pop pop fisubl stos jbe pop lcall dec push sti loope add xchg (bad) fsubrl sub add stc cmp sbb stos clc lock dec testb xchg push push sarl mov dec xchg xchg iret pop adc and gs loop xor sbb mov mov into add insw imul pusha cltd mov cmp xchg sarl pop cmp dec mov sub add jle xchg ret imul adc mov movsb rcrb repz pop hlt inc dec out sub sub lret add stos inc cmpsl sbb push sub xchg cwtl movsb and sbb bound test mov shlb lret jbe int3 mov adc lea (bad) push (bad) adc push push cwtl dec jge xchg mov (bad) mov xchg int int3 leave lods mov fs inc sbb popa lahf stos push call hlt mov adc push jl fstpl cmpl div jno call mov (bad) jl (bad) lods leave mov in rcll jbe and rorb pop and nop adc mov mov pushf jmp mov jg leave mov and out scas mov pop mov cmpsl dec icebp fwait sbb (bad) jge jmp xchg push (bad) pop cmp sbb fild dec (bad) mov divb sti subps outsb adc jmp or inc sub aad cwtl (bad) arpl iret imul popf mov scas jge out sub pop hlt push ret hlt loope lret sbb jo loopne sbb test mov aad sub mov lea stos popa cltd xlat pop out aaa jg imul test cmc push pop add add popl jne inc xor (bad) sub push bound cmp mov cwtl xor inc aaa stc hlt mov add dec fistpl sarl je cmc adc jne,pn test inc pop pushf daa jb xchg loope cmp scas (bad) and ds or sub gs add shl jl in mov stos out repnz cmpl and adc pushf jg ret jnp cwtl push ljmp out and mov jb in push xor (bad) loop sbb out xlat (bad) std lret and push rcrb mov je lea dec adc cmp dec lds pop inc or or cmp movsb (bad) mov cltd add in xchg dec sub jmp aas jb leave add cmpl mov push cmp lahf mov ret adc and adc ret jg aad dec mov inc pop cltd xor mov sub in jns xchg push in xor fbstp dec loopne pop push push sub mov ret push inc rcrl pop enter pop pop fild and lods ret scas sbb adc fidivr push inc pop fidivrl insl inc test or in pop arpl dec lret mov sbb fcmovnbe loop loope (bad) xchg or sbb fwait cwtl inc or mov cld fadds push test movsl mov mov sbbl jbe inc pushf loopne xor cmp sahf adc imul adc std divb popf sub lock fnsave or out mov cmp mov lock subl jne pop scas (bad) rcrl call and cltd test inc ljmp adc test hlt push mov push jg repz into decl adc int xlat xchg pop repnz es mov pop and cmp inc pushf xchg mov outsl jb lea inc (bad) jae leave xchg loop gs repnz movsb sub addr16 sbbl push cltd sub std orl xchg sbb ds aas pushf push cmp in or add dec repz movsl dec and adc push in dec shr inc fldenv mov and gs xor jmp adc xchg in ljmp dec fs out inc sarb push jae dec test xor mov jecxz lahf cmp pusha lret cmp pop ficoml inc sub jle iret dec pop xchg and mov es xor je adc push sahf (bad) dec jbe jge inc sub lahf mov pop rcr pop ja jno push dec mov sbb scas sub pop sbb popf testl adc les jl pop vaddpd sub fnstcw dec aaa pushw (bad) (bad) pop mov pop int dec adc lahf call cmp sbb dec push jo jmp aam popf pop push push pop mov mov arpl cwtl cmp adcl xchg push iret mov andl gs xorb jmp jge cli jnp out (bad) call pop mov dec dec mull mov (bad) add or sbb or cmp (bad) (bad) sub push mov sub jl inc add mov imul fcomps inc ficoml jp push insb push stos jl sbb mov pushf (bad) testl std stos xorb pop test dec pushf mov out adc dec jge js,pt jg (bad) mov push test idivl cwtl sbb pushf add xor and sbb xor mov lcall mov daa adc lahf cmp test xor (bad) aam mov push push call push sahf test adc sub sub bnd xchg loop das test jg inc cwtl repz mov jmp push xchg in push insl sbb (bad) mov ljmp fwait or std outsl in sahf cmp (bad) xor push sub repz push pop push cli divl stos cwtl data16 stos inc out imul int lds xchg lds inc popa mov repz pushf imul faddp fildll or aam and mov sar daa xchg and in xor xorb outsb jae lahf into mov or and mov push jnp (bad) jmp shll movl adc lods add ljmp pop pop pop out and jg (bad) jg xchg movsl sarb and (bad) cli sarb xchg cwtl and mov xchg test mov push xlat sti jno pop gs mov outsb stos inc fcmovb outsb rolb pushf dec fwait sub out mov fadds cltd inc inc cmp dec lret popa mov pop jmp ss pop cwtl ret xchg lret cmp mov scas add push pop repnz mov xchg scas cmp jle pop jbe,pt dec cmp pop loop mov cwtl test pop cmp dec xchg inc test lods test ja and lcall std insl aas sub dec push movsl cmp popf jmp sahf mov add mov aad jecxz scas inc pusha ja call fwait enter xor rcrl addr16 mov cwtl push fwait (bad) xchg mov mov cmp iret scas movsb dec jmp mov shrl xlat sub out mov sbb stos idiv hlt ds jnp inc mov xchg add pusha sbb dec push out gs add sub ljmp (bad) xchg in es cmpb dec mov enter fidivrl jno outsb call sbb xchg jno test mov or outsl arpl shrl fistl pop pop push pop rcrl push test push (bad) dec popf push orl cmp cli mov mov cmc cmpsl or sbb into (bad) imul out cmpsb push repz lock fwait pusha pusha (bad) cld sbbl push fs xor ror mov push sahf pop scas mov lret mov adc (bad) mov pop pop pushf rolb jp push xchg mov and xchg mov int3 addr16 stc ljmp xchg mov pop xchg push cmpsl imul jge movsl pop cwtl out leave repz or inc xchg add cli aas icebp mov mov and push sub es cmp stc inc gs dec cs pop shrb mov pusha xor jo ja dec push push pop cwtl scas dec sub pushf ss fldl repnz movsl cmp jnp pop sbb xor or jb in loop in push and (bad) fiaddl mov mov push loop and aaa push jno mov roll into mov push lea or lret in faddl jo fcoml lahf jns movsl fcoms (bad) mov inc pop ret clc and pop pop call lea fldpi cwtl inc add jne jae imul loope jl push pop jl mov lahf adc pop leave pop cwtl mov xchg mov stos inc sbb test pushf ljmp (bad) lahf stc cmp cmp xchg adc std lret fcoml ret data16 mov scas outsl gs and stos jnp in mov adc adc cmp jae movsl inc add lret adc xchg (bad) mov and jmp mov hlt dec dec cwtl inc cmp faddp jo cmpsl inc ja cmc xchg push (bad) cmp loope adc fisubr cs lds mov ljmp xchg fcmove or (bad) pop cwtl cmc icebp xor mov das ret pop and pushf xchg and jnp dec xchg (bad) mov fwait fs aaa dec pop xor and inc ret or xchg sub pop fs outsb outsb adcl in orl and test andl iret cmp inc mov idivb mov addb scas (bad) jl rorl adc aas dec mov cwtl ret fmul mov hlt lret daa mov ja cli and popa xchg cmp pop test imul inc and test ss (bad) addr16 push scas loop mov dec dec rorb cwtl ljmp or jne adc repz inc out mov pop mov fs test cwtl mov xchg and mov lahf push imull decb inc xor iret push mov push dec stc aad repz pushf mov pop icebp fistl mov pop adc xchg lods pop cwtl mov mov pushf (bad) lahf xchg hlt mov push out lcall mov and out sbbb pop arpl cmp xor mov rol ret pushf add in mov lods les mov pop inc pushf movsl and jne jp dec in jae xlat push mov adc and scas xchg pop jnp adc adc xchg ds js (bad) mull or pop sbb and in lret int3 (bad) pop adc inc fbld cltd dec xchg xor daa shl or ret mov popa aam ja mov jp inc lock dec imul dec jl fstps repnz sub or mov cwtl adc imulb pop mov dec xor jo incl and cmp xor lock jle and inc dec scas mov pop (bad) fld1 repnz popa test xchg xchg jle cmp inc outsb xchg call push dec rcll push cmp mov mov sub fdivs mov dec lods popa xchg popa xor add es popa and and pop iret adc cwtl into xor orl mov pop xchg cwtl (bad) lret test pop out sbb nop imul xchg arpl mov push pop and cmp ss out xchg sub cmp dec jecxz enter jo dec iret pushf sub daa mov rclb push sub fstpl fsub pop adc loope jb lods dec mov shlb insl bound adc ljmp cld push mov xor sbb and das dec ds aaa pop mov (bad) ja mov add (bad) mov and rep test test xchg push ds mov das (bad) enter flds mov inc sbb rcrb and fcoml insl stos mov push pop into sbbl pop adc mov xchg mov mov mov fild sub pop fwait sbb xor or dec data16 xchg loope and inc sarb leave or nop dec push loope xor cltd popa cmp lahf cmp roll pop std fwait mov adc jns jle pop or xchg fnsave sub sbb popf pop cwtl or mov xchg js adc repz jp test cli jb dec loop cmp fildll aas inc ss mov sub sbb adc cmp (bad) push into cmp out leave xchg xchg push inc out aaa (bad) stc xor mov lea into xchg mov fistpl and ds fsubrs inc dec xchg pop mov pop repz cmpsb insb inc push sbb (bad) dec jnp push mov rcr push inc inc and gs xor mov (bad) movl test or xchg push pop pusha fistp sub xlat xchg ret pop pushf out dec pop outsb jne fwait push stc dec jb mov mov out jne jmp and mov xchg (bad) ja dec xchg and sub ficompl pushf ljmp pop push out mov cmp sbb push adc mov clc jns addr16 icebp xchg into imul cwtl cmc lret fstpl mov mov dec (bad) mov sbb mov jmp mov and imul ror push pusha xchg ficom out jmp mov fisttpl popa pop lret lods cmp and and pushf or jnp xchg test stos xor mov push jg sbb mov mov and icebp dec xchg xchg jmpw pop mov loop push mov jle gs add add insb add ret ret xchg aam lods fs jle ljmp fldz pop daa cwtl test jg sbb cli cld int3 jne stc add push cmp mov clc mov fs out loope jns fstpl push aaa inc fwait push lods sti pop or ljmp mov fsubl icebp and in lea movsl xor jb cmp dec fwait cmpsb imul andl inc out das decl sub sbb mov loop xchg cmp add iret sub and outsb push inc or js jns flds imul in test jno es fisubl ror cmp xchg mov pushf xlat icebp test adc lret sbb das jg lahf xchg pushf cltd jmp pop dec jp ljmp sub mov daa jl (bad) adc test pop roll cld movsb loop mov jb or (bad) lret pop dec dec fisubrl cmp loop ljmp mov cmp lret lahf xchg jb lds add pop push popf pop inc pop out xchg call lock test mov mov fcompl xchg push loope and push (bad) xchg (bad) xor xchg xor jbe and ffreep (bad) mov xchg test cwtl adc ds imul sarb out sub int3 push (bad) and xor test outsl jge jo mov jle sub mov xor inc pop adc fildl ror hlt data16 pop inc pop cmc daa push daa sub jb mov cli lret mov adc ljmp (bad) aam dec sbb and mov int3 jb push jnp push or je mov push (bad) adc repnz sti mov pop and cmp or repnz aas pushf roll push and inc fdivrs cmp cmp lcall sbb movsb loop dec and cmp negl pop jp enter add xchg inc pop inc mov mov pop addl (bad) xchg jo jl fist pushf xorl or fsubr jbe add cltd push mov push loop ret es dec adcl push dec cwtl enter popa pop jg imul arpl cwtl test (bad) and movsb inc fildll ljmp xor mov mov pop xlat jle addr16 rclb add pop add push fildl mov xor fldenv inc ss cmp vpmacsswd call insl inc cs inc das pop dec push dec das dec sarb mov pushf repz xchg int je lahf jp pop insb ja jl push das aam mov xor (bad) mov (bad) cmpsl (bad) dec push xchg adc pop repz fprem mov pop mov leave pushf jmp add fs adc push out mov xor (bad) xor lcall std jmp lret push add push inc outsl sub lock lea call aaa cwtl ljmp xchg pop loop dec (bad) sarb jl adc insl daa sub push (bad) sub into aaa fisttp mov xchg add les cmpsl sub add aaa push sub daa stos mov push imul xchg pop aad xchg (bad) sub rcrl clc stos ret cs jo out out les push mov mov mov xchg and mov addr16 cmp push sbb xor xchg lret ja mov adc mov repz push imulb sbb out aad sar pop cwtl inc jmp scas (bad) xchg mov mov (bad) jg rol inc sub stos sub addr16 push push inc fstl pop jbe cmp adc clc das add rorl xchg fidivrl jp pushf sub daa xor cmp jg stos sub pop pop or ret test push (bad) imul adc cs cmp cmpsl stos rcl scas mov lcall cmp sbb outsb pop in data16 fsubrs pushf in mov adc rcr jl sbb mov cltd mov lds andl sub fsubrs cltd jmp mov and jbe inc pushf std mov pop lods cwtl aad add dec dec cmovnp xor std mov dec sti pop push gs add sub dec testl xchg cmp mov push out inc mov add mov adc in pop mov adc lea test mov xor insl cmp addl (bad) sbb sub test test push sarl adc dec int sbb aas or pop cwtl dec fwait cmp jo lock movsb fdivrl ret out call mov repz loopne or leave js xor cs lahf ljmp pop cwtl xlat rep loop insb lret mov xchg and mov dec ficompl imul pushf sbb icebp cli test js iret inc mov push movsb add push leave inc data16 and pushf sti push mov fstps decb adc sub push sub lock jl add mov push mov inc stos sbb dec inc xor mov leave adcl out and mov lahf int3 xor mov out rolb lret addr16 notb pop imul push loop jecxz sbb scas mov mov sbb sbb std dec out jp jecxz pop cmp mov popa or pop cwtl jg dec stc dec lock divb (bad) movsb mov add pushf out and push and push add xor fwait mov (bad) out jge and testb push fisubrl xchg adc pop cmp pushf xor pop dec jp jg out jnp dec std pop inc push mov inc inc repnz sbb pop push mov mov sahf and adc push movsb mov imul or push mov push cmp pop mov xor xchg push cltd scas lret mov jp sahf es mov xchg add stc sub jp xor inc sub in mov jg push insl xor xor lds aaa xchg inc cmp cmp xchg aas and inc int adc and push push fmul (bad) sahf jge jb cwtl fildll mov add or fidivr es int adc mov dec mov lds dec push addr16 pop pop pop mov jp iret or fstpl adc mov xor sti xchg (bad) xor scas mov mov jns scas and adc test ljmp aaa imul add fimull jle ljmp cmp adc daa (bad) adcl cli jl xchg repz (bad) pushf test xchg (bad) popl dec pushf (bad) les insl jp xchg (bad) xchg jb cmp es sub pop and jns cmp jl and adc mov imul xchg inc test pop adc lds pop push cmp cli pop insl sahf jmp addl dec (bad) leave pushf push pop or pop lahf mov jl mov or pop imul cmp into test fidivl inc cmp ficomp fisttpll hlt nop dec enter adc jno mov sbb fisubrl cwtl push lock lret jp xor push and xchg test dec mov xor sub jg jg dec dec add icebp inc pop icebp shlb not dec fisubr or movsl call sbb lahf mov movsb mov repz xchg arpl jae and push mov mov daa enter push xor xor pop sbb mov xchg and imul push xchg call jp mov jns mov decl test sub pop pusha ds jl mov not negl dec or aad mov leave mov in jg mov push push xor loopne sbb leave add sub inc fwait es cwtl and pusha iret ja notl push xlat xchg test jns lock test popa popa inc cwtl mov add imul (bad) insl mov push into xor or adc pop lods rcr loop sub xor xchg iret bound or mov pushf push idiv movsl jg push xor push xor xchg add std (bad) fild mov movsl cmc (bad) idiv xchg xchg xchg (bad) cwtl xchg sub xor sbb movsb das je addr16 jbe hlt (bad) es add xchg jbe (bad) popa subb cmp iret ja cmp addr16 xchg pop cltd jg inc pop ss fstpt inc rcrb mov xchg sti inc andl add push leave fsubr test sub sbb dec out cmp or das xchg arpl bnd pop or movsb add fnsetpm(287 movsb ss inc pushf pop loop int3 push xchg sti or add mov or inc inc push in leave and jg pop cmpl aad icebp scas jne insl pop stos out (bad) movsb mov jmp sub dec rcrl adc cli in xchg adc fisubl out test lods popa or push scas cmp jns orb dec lds xchg lret fwait mov stos (bad) loope ds jge xacquire ja sahf mov cmc rorl mov data16 lock pop call mov dec push ret adc push push sbb mov arpl fidiv push stos add jle adc (bad) iret mov jle xchg fistpl sbb mov jmp xchg xchg xorl jecxz mov insb hlt lea mov mov cmp cwtl mov shlb pop mov inc cli pop add mov mov into insb pusha push add jecxz and enter shr xchg mov aaa (bad) iret pushf jge adc xchg es mov cmp fstl fldl cmp sbb mov mov pop sbb push push sub fwait mov rep xor cmp inc and aas push add cmpsb pop in pop repnz loope pop rclb lea sub pop loop addr16 mov cltd adc pop ljmp xor ss add js xchg cmp insb fs mul pop negl mov scas pop and test or or xchg push adc gs xchg fadd (bad) xchg pop out sub mov push jge icebp scas adc insb dec icebp xchg cld pop enter leave jbe jbe mov mov fbstp push mov cmp call mov sahf (bad) ss repz mov or out andl iret repz sarb cli mov retw ret inc leave je pop rcrl dec iret lcall pop mov or (bad) lea movsl shrb push adc or dec cmp sub idiv dec movsb andl xchg int out cwtl sbb and adc scas lea add mov sbb int3 lods repz lds (bad) and jge sbb xchg add push cmc mov xlat mov mov cmpsl xor rclb add add shrl jge add ljmp lea test mov push mov lds test or hlt icebp sbb xor fnstenv adc mov push mov test dec cmpsb pushf cmpsb push les cs imul push adc loope jg dec sbb popl mov xchg in ret adc and cmpl jo sub aaa test mov cmp adc pushf in dec mov cmp mov dec mov xchg or lock testb jmp cwtl dec clc dec jae and mov pop insb punpcklbw and mov daa or xor sbb jle pop pop insl pop push (bad) jge (bad) or mov mov xor popf cmp addr16 or je sbb insb rcll pushf (bad) jg test inc xlat dec (bad) xor xor sbb push int3 sub pop pop fist negl or mov out mov inc (bad) pushf idivl dec inc xchg lahf or (bad) sbb repz scas in xor stos enter dec fldcw icebp pop insl cmc outsb sti je (bad) arpl dec or lods add mov imul mov or fldenv (bad) or or pop les cli std mov les xor and push das xchg ja sarb outsb sahf mov stc cmp push (bad) jmp mov sbb inc shl or xchg dec loop clc into pop dec jo popf jo or or cltd jle arpl add (bad) in outsl movsb cmpsl jno negb cmc or lods ds popf mov jg mov (bad) fnstcw pop push mov dec and inc cmp scas xchg jmp pushf loope sub pusha xor mov inc int3 cmp push mov js adc imul mov mov mov leave inc mov fidivrl and fcompl mov jp (bad) pop adc mov stos out test xchg icebp pop out clc mov imul and les jmp shr mov mov dec adc xchg or lds pop ror push outsb pop push in add dec pop cmpsl jno leave pushf inc loopne mov outsl mov pusha iret arpl mov arpl pop jnp mov addl call or (bad) mov jg sub inc dec add inc (bad) aaa cmp pop add lock (bad) push jl aam fistp out roll inc xchg lcall mov jb and mov (bad) ljmp repnz lock out addl enter sbb jg insb sub aas mov mov lret insb (bad) or jmp fnop fdiv and imul fcoml scas insl inc cmp gs cli fwait mov lods out push scas lret mov push xchg or fwait jne mov inc mov inc (bad) out js fwait clc idiv jle dec cwtl aad notl mov repnz iret insb jae fimull inc xlat sub xchg insl mov jbe jmp xor cwtl dec xchg popf cmpsb jmp add xor xchg sub pop addr16 fiaddl pop xchg (bad) fisttp icebp cwtl jp pushf rolb xchg sub or call les mov push fisttpl jg hlt xchg shrl jg lcall push adc and cmp arpl xorb dec cmp fisttpl jle cwtl dec int sub test addr16 in or pop iret addr16 fs sbb hlt das stos inc fisttpl jg lds fcoml mov aad jge lods lea out jno mov in dec and xchg jge lods jnp and icebp and imul jnp sbb or incb xchg in mov lock push mov pop inc pop xchg jle mov ljmp fidivl or js insl and dec je (bad) jle fcmove lds loop not mov adc aaa lret int lods cmp jle mov (bad) jge pop sub popf mov push popf pop insb sbb dec out xchg jecxz,pt adc addr16 xchg push or mov sbb inc cmp (bad) clc cli xchg movsb mov dec lcall xor add sub ret scas mov cld or sbb daa sti ljmp pop jl (bad) mull outsb lret test sbb push es push push test es dec pushf mov (bad) sub jg fsubrl test pop popf mov xor jae xchg and mov sub push or sbbb cld xor pop in or adc xchg inc (bad) and mov fldcw repnz in pop popf mov insl and fsubr mov in mov insl xchg dec pop cmpsb inc jbe lret push adc jmp jle cmp xlat sbb sarl pop shrb inc mov jg mov mov repnz les (bad) fisttpll jmp int3 cmp aaa mov pop pop test sbb das stos mov out rcr push jp or imul push lds push and lret loop imul jo and mov nop xor push out push in xchg mov aam push pusha movsb jbe and jge arpl sub mov mov arpl inc and inc shrl mov xchg pop lds fwait lret adc jg popf fisttpl mov inc cmpsb lret mov pop add iret rcrb push push iret add popa inc (bad) popa xor enter roll enter push adc test pusha addr16 sbb push mov mov int jae or (bad) fs loopne (bad) ja sub mov fs inc insl sub cli (bad) (bad) out sahf add jae inc cmp mov aaa cmc es adc outsl movsl test adc lret es adc lcall pushf mov lods in xchg jns (bad) repz mov insb or adc pop dec push cwtl aad mov jg push jg std xchg ljmp push sbb sub insl sti pushf xor cmp dec cmp test icebp fcmovbe xchg insl aad test hlt xchg add pop xor out fldenv fdivrs cmc pop cwtl mov mov sbbl or sbb jns daa icebp mov pop xchg jne pop lret mov pop test clc or lahf icebp mov dec xor popa fs scas jo (bad) jne loop mov fcomp (bad) insl mov sti push out push adc adc xor xor cvtdq2ps das xchg repz jmpw jg int cmc add adc in jnp lahf fistp rclb gs pop add sub pushf jl sub pop lcall sti testl push jmp ret adc das push (bad) push adc daa push pop outsl pop or scas jnp fildl sub repnz addr16 mov movsl adc adc shlb mov push xor loope ficomp xor mov (bad) mov cmp mov sbb gs pushf push sbb jle push clc (bad) add or ljmp lock mov fistpll cmc jns sub push daa sub mulb xchg movsl sbb pop sub cli inc sub dec inc and sbb adcl into mov out movaps mov jg ret lods mov cmp and (bad) sbb pushf mov adc or xor (bad) stos adc cmp xchg repz or test inc dec repnz stos sub xchg sub xchg dec mov mov mov adc xchg sub test jns inc xchg icebp sbb int3 mov mov cwtl fstl mov test icebp adc mov cwtl in int jnp dec sub adc imul sub aaa hlt sti sahf push lret cli jp xor adc mov (bad) repz jle jle repnz lock imul data16 pushf lock mov xor fdivrs pushf das rclb mov (bad) and in pushf or mov addb testl cli sub mov orl stos bound sbbl mov dec fisttpl fsubrs insb push xor mov and into out inc mov sub xchg and int ds mov pop push jbe mov (bad) fldt cwtl pushl sahf dec pop sbb lock or js pop cmp stos pop bound fistp mov push sbb lcall add push lods adcl xchg in pop inc pushf insb sbb add aas ficompl xchg inc pop push sbb xor (bad) (bad) pop les enter mov repz add cmp xchg mov out daa in ljmp dec inc mov fdivp xor incb arpl mov scas cli ds push shlb popf sub mov rcll lret fcmovne pop lret pop sub out or or ljmp sub std pusha xchg xlat dec and aad xchg lahf push into xchg test mov imul sbbl jb fsubl clc add cli ficompl loopne cmp sub ret je (bad) cli push call lock scas push xchg data16 dec test xchg adc pushf ljmp fneni(8087 mov cmp add jb xchg adc pop jge outsb rcrb add xchg sub pop cwtl push cmc pushl insl or mov cmpsb inc inc js or pop cmp ds pop cmp mov mov pop push ficompl cmpsb mov les pop aam stos pushf adc std xchg mov lret out add sti popa push push inc dec sarl flds aam xchg insb pop xchg jg cwtl lahf test fidivr fs pop pop mov xchg push cli fwait push mov mov dec popw cmp sbb pop dec loop enter adc les inc fmuls sub popf xor repnz sub roll jg mov inc push inc mov fs xchg negb add jl movsb dec test les add jge inc cmp into (bad) inc cwtl repz rorl mov dec shrl popa clc cmc lret xchg sub mov je or std add orl out stc or push repz dec lds cwtl xchg xor xchg push or rolb push cmc cmp xor enter xor xchg cwtl inc xchg int3 adc cmp neg fsubrl lret rcr std jge jnp out loope (bad) xor cmp inc movsl pop iret jge popa cwtl insb dec jp lahf mov inc mov fmull mov lock stos dec rcll push in sub sbb ror xchg (bad) xor mov sbb and mov sbb lds jae aas cltd fisubr jg cmpsl les stos add mov lods and orl aad cmp rcll addl xor lahf loopne bound xchg add lock dec mov fisttpll insl dec addr16 sbb inc mov and data16 inc cmp pushf jns icebp push mov fs pop fsub (bad) stos dec dec or cltd jp movb scas mov and shrl neg pop cmp aaa pop or sarb (bad) in pushf mov test jl loope lods xchg sub gs mov cmp sbb xor xor pop cltd push sub sbb jb cmp sub inc in cmp (bad) lret xchg int3 mov cmp pushf pop inc mov lcall push aaa mov cld xor mov mov xchg cli mov pushf ret lret add adc sbb inc out dec stos (bad) les icebp (bad) bnd and inc dec inc outsb test push in sarb mov lret dec add stos repnz jbe iret push push test push mov divl mov sub sti sub mov sarb inc int3 dec test in mov mov cmp cmp and add push pushf or ds out enter mov imul cmp out xchg lcall and xor pop cli cmp cwtl nop mov into inc clc and std call rorb mov lds repz fs push mov sub and bound enter lret mov fistpl cwtl (bad) adc lds jbe add jae fidivl aam jl mov sub jns rcll mov xchg pop or push int3 sbb lahf jo dec push add outsl jne sub psubw lea jo test and push xchg xchg mov dec sbb push or cmc gs ljmp lods lahf mov jb xchg jmp nop dec mov dec mov ficompl adc flds notb ja mov dec pop dec and adc xchg loope inc xor or cs insb ja adc pop cwtl stos adc call push add dec repnz sub jge mov sub push movsl rcr push pop sub cltd adc insl popf cmp adc sbb jmp (bad) xchg imul mov jnp fistp xchg loop addr16 xchg leave jae movsl dec sub lock into add mov cmp pop cmp pop addb movsb push icebp mov sub inc adc int3 pop popa xchg mov or jmp pop dec repz dec call mov adcb push test xchg pop outsb adc add xchg sbb mov dec cmp sub mov mov mov outsb xchg xchg outsb (bad) shlb pop es or out mov adc mov cmp pop or cmc hlt (bad) mov outsb sub fstpl cmpsb or pushl lret cmp jl (bad) outsb sbb pop rcrb mov pop inc cld xlat inc add cs jno outsb dec jge repnz mov inc bound out and sahf xchg push pop outsb lea sbb xchg (bad) jge stc out pop aaa pop nop dec rorb call or stos dec adc inc (bad) cmpsl (bad) mov lahf push imul mov mov mov iret enter jns outsb inc mov iret rcrb js pop outsb xchg adc pop mov jb (bad) icebp lahf insb jne adc push lret xor fild xchg (bad) ficompl (bad) out or add push inc dec (bad) (bad) push mov popf mov test inc nop sbb pop fistp add cmp fistl inc xchg push out cmp mov adc xchg sti adc inc rclb call or jns dec movsb jne jo mov adc lods xchg cmp xchg mov sbb pop fstps pop fmulp pop repnz jmp test pop mov adc test fistp xor pop xor xor out dec xchg movsl pop or fcoms pushf xchg jl int3 sbb jb mov mov cwtl push (bad) dec cld movsb mov push jo pushf shlb fs outsb div dec pop mov pusha iret (bad) jge push out sub mov push sub sbb hlt pop ljmp xchg sbb popf jg inc mov hlt push sub lret mov fbld or stos push xchg dec push xchg lahf inc mov adc fsubs lds xor mov jbe xchg (bad) jl sbb mov (bad) pop test xor out xor cmp or jge scas insl mov cmp (bad) das mov into shll out inc inc test mov fwait jb xchg sbb pop cs imul imul inc cmp and lods pop cmp aaa xchg in adc loope xchg hlt decb cmp in xchg xor out imul lret mov sbb leave in mov fidivr push jmp adc xor lret pushf xchg les cmp pop in ficompl test incl push (bad) stc out (bad) cmp dec mov or xor (bad) aam cwtl movsl push inc jecxz xchg mov pop pop out cli popa mov (bad) enter lret icebp sbb lret repz movsl cmpsl jecxz fs cmp mov xchg sbb pop (bad) ffreep movsl loop fsqrt lea int3 movsl xor add iret fldt xchg jecxz lods xor sub rcl pushf ss gs or mov pop pop (bad) xor in cmp (bad) leave sbb mov stc repz leave or fwait test push roll icebp mov gs daa adc hlt popf dec pushf pop sbb movsl jmp scas xchg push cwtl add fdivrp hlt pushf cmc xchg mov scas jp ret adc imul mov add pop push mov leavew pushf push pop iret jbe mov sbbl scas or and out inc sbb div or lret stc cmpsl xor dec mov shll fucomip pop cwtl addl jge sub les ret ds mov and test aam push inc aam xchg cmpsb sbb out inc cmc iret ja mov jno jmp mov add xor popf pop dec (bad) jle iret out adc sbb mov and imul les mov pop cli inc shrb fmulp test jb imul xchg push scas fnstsw rcr lea lcall jl stos es xchg xor repz pop fistpll insl mov test cs jne add pushf fwait mov out jle gs dec adc xor loopne call add push and xor lea mov hlt mov jle (bad) sub popf jmp inc pop xor cmpl pop out mov jle movsb addr16 cmp pushf add sahf sbb jno roll in mov jle ljmp les xchg push loop rcll aaa xor daa push jb fidivrl xchg mov xchg or sub push ret cwtl and nop cltd enter pushf xchg sahf (bad) loope dec add ret or inc xlat negl pop out repnz aad in (bad) dec mov std inc test enter mov test jl push (bad) fs and xchg rep cmp xor loopne adc lahf mov call jg xor enter fnsave bound stc pop les inc out pop adc fwait in mov jno std in sub shll shlb stos inc scas or test ljmp insb xchg push leave dec jae add adc (bad) (bad) (bad) dec loopne cld (bad) adc jg push push sbb into xor in sahf mov test fs mov cmp xchg mov or or push imul lcall mov jns mov cli inc bound push scas and cwtl add gs xchg js in xor pop je xchg xor sub in repnz sub js pushf fldenv xchg cmp pushf (bad) outsb push fs mov icebp pop sbb lret les rorb pop cwtl sahf fistpll ds daa (bad) out movsl inc (bad) mov mov int3 push int test pushf cmp pop lcall sbb imul icebp (bad) je movb adc cltd push pop fabs in iret sbb pop pushf repz cmpsl push lcall imull and arpl fwait push mov mov jg jmp rdtsc imul lret xchg xchg xchg insl sub fwait movb cld cli mov cmp sub pushf pop (bad) adc push es test add test loopne inc add repnz push xlat sub dec pop decb fwait push mov loopne lahf add jno jle inc xchg mov call outsb movsb jne pushf mov mov icebp lret fs mov inc or fs mov es lret mov mov (bad) test jge cmp out adc or rclb sbb arpl mov movsb adc mov dec inc test scas lock aaa mov push xor fild dec or cmp or aaa pop stos push adc orl mov (bad) stos fistl inc cmpsl xor pop cwtl pushf aam ds mov cmp and loop lods ds push adc lret xor jle dec hlt sub insl (bad) and pop push mov xchg popa aad push xchg jnp sub mov pop jmp or lea xchg jl adc inc pop fildll cli xor test (bad) or and cmc mov and lahf in cmp dec mov xchg jp lcall nop pusha repz xchg js lahf cmp or mov add les (bad) pusha movsl jnp divl cwtl (bad) ljmp mov lret data16 ss sbb mov xchg aas sbb pop cltd out push (bad) jmp ficomp sub adc dec stos xchg dec xchg fdivl adc aaa popf cwtl and dec cmpsl paddsw arpl adc les mov mov outsl dec pop jg jmp inc or repz mov mov in mov xor xchg ret aas nop inc pop mov cwtl or fistpl es jb movsb xchg (bad) stos jge add iret cli jbe jno ja sub gs (bad) mov mov and divb jno xor jp orb test stc daa lds lods adc mov push cmc arpl sub clc fld1 sub call je iret jge or out sbb enter nop cltd test adc mov rorl ret (bad) mov lret pop mov inc mov push push cli mov (bad) shr icebp mov xchg je add lock mov leave sub nop xchg xchg adc mov test mov jmp repz repnz ret add pushf aad push xor flds pop xchg xchg mov and cmp loope pop ror xchg test outsb aaa pop or mov push in jns sub add inc add jno mov lret popa stc stos sbb arpl mov pop (bad) jnp leave xchg daa xor andb inc cmpb xchg sub inc mov pushf lds cmp roll xchg ficoml cpuid xchg into fsubrl inc out xorl iret mov std lods or repz and jle shrb scas sub fstps scas icebp push out lock or out frstor jo mov enter pushf rorl and popf dec aad scas inc fcmovnbe mov pushf add cwtl jnp lcall mov sahf push icebp mov dec out jp mov and sti (bad) jp push xlat adc mov cmp lret mov mov inc fwait and push repnz ds ds adc mov xor test jmp sub cmp out gs sub add mov out mov addl mov movsb mov test lret pop push push aam sub ffreep pushf in loop push repnz cmp fwait loopne lcall sub push (bad) insl shlb pop jno cwtl adc sarl addr16 movsb xor clc repz xchg add icebp jo inc push push ds sub pushf stos cld jnp cmp out ja pop mov shlb dec dec mov cltd fildl iret es mov ja hlt sub cwtl push cmpsb lods xor movb dec popl jg push xor aas orl adc sbb cs cltd mov fisttp pusha pushf imul cwtl adc outsb inc outsb xor out inc xor fcmovne jmp (bad) dec lret xchg dec cmpsl jl sub add leave out data16 fldt imul movsb cmp das inc pop pop xchg fldl lods outsb sub xchg jmp scas mov popf test dec ror (bad) cmp test aaa jecxz sti add rclb cmpsl xchg xchg adc andb add rcll mov adc loope add enter cwtl faddl in jl xor jmp xor mov xchg xor xchg cmp inc sbb enter push sbb xchg fisubr mov xchg mov in sti adc fistpl sub cmp cs out cli addr16 sarl xchg sbb xchg mov sub rcll pop dec push dec sbb inc cltd sub add sub mov push jl test and in aad push (bad) std in rorl mov (bad) insl into (bad) mov fs sti push xor les add push cs rcrb mov adc jmp pop jge rcrl (bad) sub and (bad) mov js cmpsl out daa data16 mov jge loop jne or xchg pop mov mov in mov xchg jg cmc mov mov aas dec js xor imul (bad) sti xor stos push or cli pop mov sahf mov and (bad) leave or outsb enter pop fs fcomps xchg dec jecxz insb pop rcrb cmc cmp rcrb out (bad) mov and daa (bad) pop cwtl or sbb xchg add inc lds cmp cmp orl push (bad) xchg or scas repz lock pop or pop cwtl (bad) jmp sbb nop jle test xor xchg pop adc sbb xchg rcrb push fistp push xchg sub ret push pop out std jb jl ljmp xor adc pushf sahf lret rcll lea add adcl into fs ret sub adc xchg outsl cmp cmp shrl dec add or test in pop mov inc adc push imul gs pop cmp pop imul cmpsl inc lret sub in mov xchg fwait sub mov ss hlt out jg and roll xor fs add sti dec popa and test repz mov (bad) repz xchg inc fstps xchg xchg fnstsw arpl mov cmp ret mov loope sbb das jns scas pop insl je subb jge mov pop ret sbb and mov xchg or adc cmc cli adc sbb std jmp push lods int3 imul clc inc jle aam jno popa xchg jae push out int3 fmull jge lock sub mov imul (bad) cwtl imul cmpsb fildll lods jne pop jp out movsb lock cmc clc mov pop xchg mov xor prefetcht1 xchg mov ds aad fsts pop and dec repnz aas mov and jae adc mov int (bad) push inc xchg jl mov ret mov or jne shl fldcw arpl push sbb push mov jmp enter mov ret sahf fildll mov test repz jg arpl jno test icebp pop or into cltd mov xor lcall sarb add insl ljmp adc jmp in adc ja das arpl movsl mov fnsave dec or sahf leave mov addr16 sarl dec push xor cwtl pusha test cmpsb jg push cli daa popa sti adc into push popf and xor mov mov mov adc sbbb jmp cmc push fsubrs cli rcrb je sbb popf mov and cld sub fs jae sti negb rcrl pop or (bad) mov add lods inc xor cmp xor pop cwtl mov call mov xchg cs repnz jl cmp lahf mov inc jecxz mov leave repnz (bad) pop push pop xor or ret jae push dec mov dec movsb es into sub ficom cwtl inc cmp in daa fcomps pop outsl aam pushf adc mov rorb xor adc add xor pushf ret (bad) cld vpsrad (bad) scas adcl std mov mov hlt push lret mov mov bound adcl push xchg cmp pushf xchg roll andl out mov jmp cmp xchg pop adc cltd loope inc xchg and adc inc xor pop xchg push sub gs rclb fcompl dec stc sub mov adc adc jge push in or fs imul cmp out imul and or push daa cltd xchg cld call (bad) dec pop jb cmp push mov rcrl cwtl stos xchg cmpl fstps aad das xor pop or lahf dec stc jo call andb add push mov lcall mov xchg jo add icebp lods xchg gs pushf inc clc dec pop cmp hlt lss push sbb rclb out cmpsl (bad) rol push cmp (bad) or mov xacquire mov lret push adcb push mov popf mov fnop or (bad) outsb (bad) cmp mov rcrl inc push scas subps mov push pushf mov pop pop push mov inc and sbb mov es imul scas movsl iret sbb les push out dec sarl mov and (bad) ja insl mov insl out (bad) jl (bad) int3 mov lods xchg cli sti pushf and daa jne mov aad mov cmp cld popf (bad) push pop (bad) jbe outsb sbb pop and icebp pop mov jg cmp popf lock repz and mov mov inc fwait inc sub dec ret daa sbb push push push loop jbe jp mov mov cmp mov call lds or inc addr16 adc sarb int pop sub loopne mov mov sbb sub sarb subl push jecxz jg sub pop andl mov adc push dec imul out mov (bad) or mov mov xlat fbld sub pop pusha ja shll lods test daa insb inc xchg inc push add mov sub out fdivr arpl sub mov lea frstor cmp mov icebp xchg xor xlat mov subl std rorl push push inc ds xor stos xchg add and sbbl loop jae data16 mov fcomps xor jl or sarl lret dec mov addr16 mov aad pop pop ret fs aaa mov imul mov repz mov pop movb pusha popf push scas mov dec pushf cmp sahf xchg leave or jns rorb and aas adc (bad) sub inc call les dec mov lahf sarl pushf xchg aam scas test std loope in mov cmp inc dec cmc iret gs sub lods cmp pop jne dec xor pop cmpsl pushf addr16 pusha pop popf ljmp inc (bad) cmp sub mov mov fmuls out pop outsb cld (bad) xchg (bad) lret pop adc test jl xor adc pop sbb sub hlt pop in pop dec mov inc roll lret xchg dec cltd pushf (bad) cmp mov jne aad xor test pop jle sar lock dec xchg push les fistp xchg jl je addr16 mov jo,pt (bad) pop xor mov xor xor sbb pop jle inc dec jle xchg xor mov push pop out dec xchg sbb mov sub push mov jecxz push or or add jb icebp xchg call mov loop inc enter (bad) jbe cmp (bad) mov xchg push xlat fsubp aaa fwait imul mov aas mov jo lds notl xorb adc or loope lcall imul sbb sti and outsl dec fwait push push cli inc lret pop push aaa sub aad jg popf sub mov pop sub xor mov (bad) out jbe in mov in jp xchg jno mov imul lock pusha js lods cmpl adc in xchg xlat xor push scas call mov stc sbb loop sbb test sub (bad) cmp pop out movsl jb jnp mov je aaa icebp jns sub pop ss outsb lret cmpsl xchg ja fbstp pushf stos in and push adc push cli loop fcoml movntq out and ret push or add bound mov cltd loope dec jns jns mov out dec push aas sti xchg xor outsl adc push (bad) lret mov fidivl jmp (bad) data16 aaa pop fsubs xchg inc mov adc sbb xor xchg xor xlat cltd jle or sbb jl int addr16 cwtl movsl cmp pop es leave les inc dec sbb mov jo stc ds mov adc mov (bad) or (bad) adc in xor stos in xchg (bad) push les mov fs notl push icebp pop fwait aas mov lds roll mov xchg and mov aaa mov mov mov pushf adc (bad) flds pusha xchg loop (bad) jae pop ljmp fisubrl repz in std lods mov es fild dec cmpsl xchg loope inc fstl cltd outsb hlt cwtl stc leave dec push sbb dec mov lcall jo aaa es cwtl pop mov mov cmp push pop cwtl mov sub daa or inc aam aaa js stos adc int3 pushf popa fsubrl adc sbb imul jne cli lock mov aas jp xchg sbb stc outsl lahf pusha rcrb sbbl inc add cmp jmp xchg enter xchg fscale gs pop movsb idivb sbb imul mov addl sbb pushf icebp mov movsb (bad) push jl inc lods pop iret mov sbb js cmp fcmovnbe jl mov roll lret lods adc sub test (bad) mulb enter pop jmp lods xor mov and and jge inc pop out mov adc ss aas imul cmp add add mov and sbb pop lock ss inc sub js jmp push loopne mov adc jnp fildl hlt out push pop (bad) fstpl jmp xor jge dec and mov fisub and shrl jge mov cmp push jnp mov pop aad js or lods iret loopne ss inc pop xchg push cmp shlb pop rcrb cltd jne mov sarl sub jmp xor cld add es mov movnti fidivl test pop sub mov test sub in push pop pop sti or mov out xchg iret test ss pop inc inc pop pusha pop adc pop rclb jnp xchg (bad) test pusha xor rcrb xor aam repnz pop sub inc pop pop pop push mov aad test xchg scas divb and dec fwait push pop jp sbb adc mov ss xrelease pop ficom push pusha cmp (bad) jne nop adc fistl idivb roll mov pop mov fnstcw pop insb xchg and pop pop adc outsb inc inc in fisttp das mov call flds test hlt arpl sub mov ss cmpsb pop std popf insb jle mov fistl fstpt jne push stos add inc or (bad) mov hlt sub jmp scas mov faddl push jne inc pop sub sahf stos pop jo inc and leave jecxz dec jp and jne es inc jmp adc pop pop in shl xor mov lods fucomip adc sar jge sbb mov cmpsl imul sbb iret movsl jne cmpsl popa mov inc pop push xchg sub ss jge xchg sbb aad jae mov dec out iret dec lcall jo cli add adc inc inc mov pop nop push dec xlat (bad) jle pusha push mov mov xchg arpl and xchg or pop rol adc jb jne sub mov adc dec lods lcall add mov mov inc push aad and subl mov out mov ret test movsl fimull loope stc sbb iret mov lds insb dec mov pop mov pop fsubs pop sub xor xlat cmp xor push mov xchg mov add inc pop sbb pop andl imul int3 hlt mov add test adc or out xlat rorl gs xchg adc push out jle add jp sbb pop inc lods cmp pop inc adc es aas or push pop mov aam ss loopne sarl adc inc xor pop push ret add sahf pop inc aam sbb mov loope mov (bad) mov ss push inc pop in into pop push xchg mov pop cmp lahf hlt and icebp jnp mov sbb and lcall inc and stos add rcll sbb xlat mov test sti push dec (bad) jo cmpsl adc lods inc ret (bad) imul rcrl jmp lock pop popa fucomp leave push mov mov adc rorb xchg mov mov (bad) mov or les dec sbb lea in les shll andb jmp pop adc je sbb or rcrl inc jns pop ss push dec jge gs (bad) cmp xchg and mov jl push add icebp bound jb shrl inc adc dec dec push cs rcrb sub das (bad) pop insb cli out jp (bad) popf in pop inc and pop stc xor lea lods jnp jmp xor dec sbb leave lods dec pop bound in xor xchg pop into add pop dec push pop (bad) fimul dec sbb pop lds mov repz mov xchg aam cwtl mov fs fildl sbb pop cmp aaa mov shll adcl in lock xchg adc mov lods pop cli adc pop sub and pop lods je cmp xor push mov dec adc call mov and xchg fcmovb (bad) aad inc fwait pop outsl into movsb ds ljmp movsb and out mov adc xor fwait xor pusha push mov sub xchg je adc (bad) jbe aas test adc mov mov add or sub addl jae clc in xor mov xchg push mov dec pop jo pop dec jl popf cltd or cmpsl pop xor and pop lods mov lret daa push mov fucomi andl ds jb or insb roll pop jns mov repz jge sbb lahf adc cmp adc cmp in sbb lods cmpsl adc loopne enter mov inc (bad) aad loope inc repnz ljmp fisubrl sub mov pop js and pop outsb push pop sbb cmp xchg aaa into push add pop movsb add pop les cwtl stos xlat mov xor xor int3 fldl mov ret pop hlt ljmp fiadd adcl mov mov mov jb add mov ret into jge (bad) add (bad) push xchg movsb outsl inc cmp adc je adc cmp rolb dec imul or jge mov repnz dec xchg std or inc pushf les xor adcl sti (bad) pop jle rcrl into repnz push jg ret insb fldt sub sub stc inc faddl ds pop outsl cmp enter xor ja and xchg sub pop mov icebp cli mov into dec test outsb inc int mov mov xchg sbbw dec mov fadds pop cli adc (bad) sti mov push mov lods mov cmp pop fstl addr16 lods arpl adc in lods mov dec fstpl loopne (bad) and aaa or insb pop mov lret js cltd pop in xchg into jp lahf (bad) iret pop cmp sub cmp pop mov pop mov movsb inc mov icebp adc inc pop cs mov mov mov push pop jge cmp pop movsb js jp popf (bad) xchg clc out mov pop arpl dec ljmp dec sub jae lods ljmp xor cmp pop insb dec sub sbb push pop imul cmpsb mov jnp pop test inc stos inc inc xchg jge dec fistl pop les pop (bad) insl inc iret ljmp inc repz lods jecxz push pop bound or test call adc mov in add jns jbe in mov jge (bad) push ret push aaa fidivrl add sub cld and pop enter sub stos loope ds data16 or out cli into sarb nop (bad) ret gs cmpsb in sub mov maxps sbb std pop xchg mov ja (bad) insb mov lea mov xor inc jle xor push mov pop push daa sub xchg sub rcrl pop (bad) orl cmp sbb dec add adcl xchg sub popf inc cmp or stos xchg stos call loop clc popf pop mov sub cmpsl fsubrl shll das or cmpl pop in ss repz mov pop ds loope and fwait adc jge sub add pop pop stc bt sub push pusha cmp pushl jmp cmc mov pushf cmpb push call lea ret not cmc neg jmp bt cmp push lea jae pushf movsbw mov mov pop mov lea mov pusha pushl pushl lea jmp call push cmp out inc push mov (bad) mov cmp dec dec fcomps mov push nop scas test inc movsl xor xchg xchg test gs pop jmp dec ret dec cltd mov dec mov int3 bound push repnz shrl test mov daa xor jo daa jp cmp sbbl aaa inc in aad or je fwait (bad) stos push insl fist add and lock adc push icebp pop jecxz adc add xorb or mov iret and jne mov xchg js aad popf mov mov in adc inc sbb push fcmovne inc push test cmp lret cmp cmc or arpl dec pop popf leave aad in or pop scas cmp xor leave test decb fidiv (bad) xorl (bad) dec pop jp shrb xchg sbb mov int dec in into add arpl jno inc fstpt clc jbe inc popa inc test rcll pop sub fsts or dec xchg mov (bad) xor in xchg ds cmc jg jbe mov mov enter mov lea inc cmpsl jl stc adc jne cmc mov mov inc push dec in inc mov pushl call inc jmp bswap push setns sbb or mov jmp add call bndstx jg mov dec aad jns in lods xchg mul test fistl test out push fbstp cmp outsl mov js (bad) pop sbb mov xchg cmovo dec adc or insl ds mov ret daa stc pop xchg daa jle push sub aaa pop loop push cmpsb (bad) insb insl sbb fbstp add lcall sbb arpl fdivl out add test bound inc mov aas out dec addl test or loope fcom data16 push dec inc gs outsl insb fs popa je inc add test sub stc pushf clc cmp pushf mov pushl lea ja jmp ds lods leave inc push repz pop lock mov push and ljmp xor pusha imul mov leave mov pop rclb fsts mov xchg xchg jne jne outsb pushf xchg add (bad) in cld cwtl popf mov add sahf fxch sub xchg inc adc ja movsb push daa dec test dec xlat pop or sbb sti imul bound cmp or xchg stos rcrl pushf pushf lea je pushf lea jmp sub movw test repnz movb pushl movb jmp test test cmp clc cmp jg pusha pushf pusha lea je push push pusha lea jmp test test sub jmp movb lea call pushf push lea jae call pushf pushf pusha push lea jb stc bt cmpb pusha call mov lea jae setbe movsbw or jmp dec cmp xor pop pop sbb mov es cs les jo (bad) xor pop adc pop lock pop xchg mov andl mov mov in sbb scas dec cs in pop out xchg adc cmpsb inc xchg divb adc inc fadds aaa and push aad pop ja shlb test add repnz loopne lahf ret sub add call clc in frstor mov notb lock enter jnp cmp mov cmpsl pop cmp std inc lcall lea pusha not mov pushf pushf pushl push pushl ret and push lea mov test les mov mov sub mov div icebp pop sbb sub mov rclb inc out inc jnp sub dec sub mov movsl sbb sub and push mov pop in dec lds ss xlat mov mov setno outsb mov mov cltd iret mov sbb add hlt pop fcoms cmc push and pop fildl call pusha push movl push push movb lea jmp xchg push dec movb jmp mov mov push pushl ret pusha lea call call pushf movl call call add inc js je jb arpl jae lea call pusha call cmp mov mov lea jb push pushf test cmp pushf pushf lea jae push movl pushf mov pusha mov bswap lea mov movb lea jmp cmp jmp jmp push push dec pusha lea je rol pushf cmc mov cmc neg cmc cmp cmc not pusha jmp inc inc push inc push dec xor cs insb add nop jle decl adcl add insb push addb lea jmp lods pushf neg xor pusha xor cmp sub rcl stc bt ror (bad) repz sub not stos push pushf jmp pop dec cmp aad push mov out mov jmp outsl mov xchg iret push push addr16 lods fisttpll fistp mov mov pop cmp push sbb mov push or pop ret mov sarl loope scas lds cli repz arpl cwtl outsl test fsubl fldt push mov push xchg incl dec cld test add xor ja add cmp mov in xor mov test xor jo push pop stos sub cmp stc dec mov jae or pushf adc das aam cmp in push rcl inc push mov popa mov roll add out hlt mov xor xor mov dec mov and out test add cltd dec mov dec mov sub cmp mov inc ret xchg sub push aam xchg aaa fldcw push or aad add fsubp mov std dec in daa les (bad) fistp lea and fs insb mov mov jae in xor xor xor (bad) xor mov xor sub push sbb push jle xor fisttpll inc mov add pushf repnz pushl pusha jmp add clc mov stc call and inc push in pop into in or sub inc cmc insl fisubr adc call mov add push xor lret ret inc lahf xchg mov addr16 insl frstor mov test xor pushf notb aaa ja les mov add or push and imull test or lods enter movsb sub daa lcall gs sub mov pop shr outsl mov popa mov lock mov sub fwait imul push pushf fimull jne nop jb ret jo jg imul call pop mov sbb lds andl inc cltd sbb xlat ljmp cmp js inc sahf and adc lcall xchg xor nop popa adc sahf aad test (bad) lret (bad) nop imul test xchg cmp inc (bad) dec out pop lcall scas adc insl mov inc fwait adc fstpl pusha stos mov lea jmp (bad) les rolb dec and lds jg ret sub dec pop xor ja ljmp sub mov push std (bad) lcall dec (bad) sbb xor loopne fadds or add mov shrl (bad) stc scas pushf jg mov dec push xchg jo arpl daa jge arpl (bad) daa or pop mov inc lods es mov mov clc push push pop rcll loopne inc (bad) mov adc jp mov pop fdivl push mov (bad) ljmp repnz test cmp (bad) in fs int pop sti (bad) (bad) jmp pushf lea jne sar cmp rcr mov bt pushf cmp cmc add pusha stc mov push movzwl shrd pushf btc dec mov bt jmp stos pop test inc push mov sbb cmp cld mov int3 xor shrb push aad cmc stc pop push or jmp mov popf push push push dec stos push mov inc in pop or and mov fdivrs dec out dec int3 jnp push and lret or add jmp cmc inc dec cwtl xchg pop sbb hlt out jne inc cli out inc aaa sub imul mov rolb or es lret sub aad lret add dec and cmc int ja pop mov pusha xlat or push cld inc mov mov jae outsl adc mov jns addr16 or je inc faddl xor repz out mov mov leave push test or call xchg jecxz adc mov lds cltd call clc test sti mov add je rorb mov stc out mov mov mov pop jno jecxz or push sub (bad) aam (bad) add mov lret outsb jmp or and lret ljmp xor scas (bad) jne dec pusha inc pushf jmp lea jae clc push cmp movw cmp push movb call call pushf push mov call mov inc lea stc (bad) repz dec xchg ror shl neg mov test sbb stc mov cmp push sub not movzbw lea mov clc jmp divb add (bad) in cwtl xchg ljmp lcall pop lahf insb xchg pushf imul movsl push cmp xorb cltd fiaddl mov push (bad) lret (bad) maskmovq notl (bad) jmp and mov pushf js aad lods mov adc jae je lds and jno jne insl mov adc push xchg cmp fcompl pop dec add cmpsl push pop sbb rcll stos or (bad) mov or or inc sarl insl or push pop fwait stc sub lea fcmovbe fmuls mov test mov fs popa test call int3 in adc test int mov ja dec pop les push test inc nop push enter cs in and js cmp nop cmp fwait icebp inc icebp fstpt call cmp sub fldenv (bad) cmc movzbw lea test pushf sub stc cmc pushl popl pushf pushf pushf jmp mov neg inc sub bt bts dec bswap mov cmp cmp sub pusha pusha call call jmp lea ja pushf pushf lea jb jb jno cmc pushf cmpb pusha jmp test pushf jmp movw bt add jmp std sub movsl (bad) aaa sub (bad) rcr cltd xlat adc data16 movsb inc into gs inc int3 xor stos iret sbb xor adc mov cmpsl jg jns dec xchg jg aaa outsl aam out or inc cmc addr16 sbb adc jo sub mull iret iret leave add sub and repz int inc aaa lods adc fstpt sub loop mov pusha mov addl movsb outsb rolb sub jmp stos test ret (bad) lock sahf mov fsubs cmp scas hlt cli aaa movups push cmp add add pop mov pusha lcall or pusha cmpsb notb dec test push es dec or jg adc pop push in dec notl xor shrl mov jge (bad) sub push fiadd or lahf or mov ret sub gs aad mov or cmp mov out in dec aam fldt test std test outsb and clc cli adc ficompl mov lcall ret loope dec iret cmpsb test (bad) xchg mov into out dec xchg sarl mov mov cmp js dec (bad) xor add aas int pop pop pop push js push test mov cli movsb stc nop (bad) gs div or sub lret (bad) mov adc push idivl mov sbb or stos push xor sbb cli call pusha mov not push xchg jmp cmc not pusha neg bt bt pushf ror pushl pushl jmp jmp sbb cs fild movsb adc inc mov clc inc fcoms clc push xchg xor jp pop ds jle shrb idivb pop in cwtl imul mov test push lret jo push int xor dec xchg in pop (bad) jno outsl (bad) rolb xlat push pop ljmp xchg inc aam jo scas je or sarb aad cmp mov nop je pop shll fwait jp mov fcomi sahf subl sbbb rorl sbb sbb lods incl dec (bad) jae (bad) movsw xlat mov mov xor insb mov jmp movzwl sbb mov cmp pushl pushf add mov pushf pushf mov stc test pushf jmp call push and fnop inc push dec (bad) xor mov seta dec arpl test adc outsb mov cmp xchg (bad) push out aas stos out and jg push mov pop shr out xchg pop adc arpl jae pushf pop mov das ret and test aas (bad) (bad) cmp mov aaa ja jmp mov lret imul add and cmp and stos aad sub sbb and insb dec addr16 dec sbb mov sbb inc sbb jnp flds les mov daa scas jnp dec ret fistl imul adc lahf xlat loope cltd cmpsb fnstenv pop add jns jb mov adc cmpsl inc aad bound adc popf jecxz and test or sub adc add ret leave jp add lods inc mov addr16 lret sbb loopne sarb popa adcl xor jnp xor pusha mov xchg sahf pop adc push cmpsb sub pop xor add push and iret cmp lret add push adc ret jae sub push push mov adc lret test mov pusha cmpb jmp movb lea jne push call test push (bad) stos adc inc mov cmpsb (bad) push mov mov jb jbe sub pushf push jecxz push cmp pop loope rclb loope pop repnz pop imul cmp stos cli fs movsl aam out mov jecxz jp jo or sbb inc aas xchg leave cmp (bad) pop out ficomp sbb (bad) lock out les pop mov sti xor imul (bad) inc push jno cmc pop push fwait lock sahf xor mov icebp fiaddl scas lds arpl rol adc out aaa iret aas iret das mull rol mov sbb loope and push push stos mov mov out daa jb pop lods xchg dec and outsl in or aam ljmp test xor gs fist sbb out leave ljmp mov add (bad) jb push fiadd jle mov inc shl dec sub mov pushf loop outsl jg imul stos adc movsl pop mov inc imul sub nop xchg sti jg,pt lods lea nop clc mov push jmp insb cli adc lods cmpsb rorb or lcall loop sahf xchg cmp fnstsw pop cmp into int3 test or mov lods push xor jnp mov add cld inc inc lods frstor dec inc repz mov cmp loop mov popf les xchg inc xchg inc cltd dec je cmp cwtl lods pop gs adc popa andl clc inc data16 jae pop xchg sahf jnp idiv inc mov enter das add jns sbb add decl cmp or int xor test aad pop lock mov fcoml hlt ret test pop shlb pop je cmc jecxz pop sahf cmpsl sub inc pop stc aas add pushf cwtl popf flds hlt dec das inc mov dec pop mov mov repz sbb ss dec cwtl push xchg mov cmp sbb iret (bad) fsubl cvtdq2ps (bad) jb or jmp jp mov mov pop and inc (bad) loop inc pop in xor das jecxz xor push rolb jno addr16 push jo mov lret dec cmp inc cmp call jne push mov adc addr16 jp xchg mov mov daa pop jl jecxz cmp pop pop inc jbe jne push pop rcl out xchg aaa mov (bad) mov das xor nop push xchg (bad) (bad) mulb push fild mov add pop push push xchg sbb pop jge cmp sbb add inc fcoms mov je mov pop and dec mov pop pop mov inc lock adc stos in pop dec std mov mov call aam push or pop add dec fildll inc add (bad) out push test inc inc cmp enter (bad) fdivl pop jg incb sub jge sti xchg cmpsl fisub fimull dec xchg pushf xchg fwait loopne push inc jbe pop jb stos call out xor pop push ret jmp or enter clc pop mov aam xchg mov inc jecxz and sbb pusha jmp cmp rcrl add sbb (bad) cmp xchg outsb pop test ud1 adc mov pushf int3 pop push in jecxz inc jns push push aam je fnstcw fdivrl inc inc push roll push movl pop mov push dec push push sarl fcoml xchg mov xchg adc (bad) js mov dec mov js mov dec sbb xchg (bad) cmp divl xchg mov dec fcoml xchg mov xchg adc (bad) js mov dec mov js mov dec sbb xchg (bad) sbb divl xchg mov dec fcoml xchg mov xchg adc (bad) js mov dec mov js mov dec sbb xchg vmwrite ja ret fisub mov fnstenv inc jae sbb neg (bad) pop inc sbb xchg add call adc ret sub rcrl (bad) aam pop mov inc mov (bad) mov ja and xorl pop fidivl sub (bad) mov inc xlat cmp fwait mov sub mov xorl add mov push cld xor cwtl into pop jae fisttpl dec mov jne imul sbb notl in out lods mov cwtl jno jnp sbb cs mov rcrw cltd mov mov sbb iret mov dec shlb lret test dec call push xor and inc lcall mov dec daa jecxz cmp jmp movsb shl fdivrs dec (bad) cmc xor fcom mov imul cmp sti in mov cwtl sbbb test add push cwtl add and sbb lret cwtl (bad) xchg mov cmp cmpsl fild cltd js sbb js sbb cltd xor (bad) add out fstpt inc out dec xor cmp insb (bad) sahf inc pop sub fldenv scas (bad) xchg mov call and loopne arpl add add mov loopne std xor arpl mov idiv jecxz add sbb mov inc cmpl dec mov aam shrb push sti (bad) mov cmp xor add nop mov pop stc mov mov mov cmpb mov imul xor fnstsw inc stc mov add inc cmp outsl mov mov cmp jp mov cmp (bad) mov inc pushf ret ret xor loope push lahf jp sbb mov mov cmpsl dec xchg leave lock sti stc sbb sbb stos ljmp clc xor call mov jns xchg mov sti mov lea jno ficompl dec mov mov orl fistpl lret xor and adc pop add jae arpl pop pop inc dec mov mov (bad) mov cli loop rcr pop ret cmp sub sbb or bound pop adc mov sub pop icebp stc loope rcr ror xor and adc add pop jno popa imul mov orb and shlb sbb or push mov mov mov adcl (bad) dec loopne fadds mov (bad) fcomp sub call das ficompl (bad) mov jecxz mov stc aaa cmp xchg mov lcall lret clc loope inc (bad) push mov jmp fwait xor clc loop pop cmp mov std dec add jne enter pop lds sbb jmp and inc mov test mov sbb mov arpl xor inc sub cltd pop or or sar loope lret push cmp pop cld mov mov mov jne pop pop out daa shrb inc jnp in adc lret cmp and in mov adc loop fistl cwtl lock jbe adc mov movsl mov cld and (bad) add lcall jns cmp sbb addr16 (bad) push and flds call pop pop cmp lcall scas pop cltd ljmp (bad) jp pop in and arpl push aad ja mov fwait or (bad) leave xchg cwtl fadd adc cmp aam mov (bad) cmp pop enter dec mov push stos ljmp repz aas aas sbb pop mov and pop popf and lds jl mov pop push adc inc ja add fdivs jle cmpsb repnz sbb adc inc sahf mov int jb stc jmp cmp mov test jge mov push test and add loopne jne pop in aad cmpsb pop push stos scas xchg xor (bad) out mov cmp push aam mov adc adc icebp sub pop xor fidivl fcomps imul cmp sbb (bad) sbb in add sub int fbld add shlb loopne fstpt push or sub inc jecxz mov leave xor push cs xchg (bad) lret test mov pop mov leave sti cmp pop fbld scas dec cmp inc dec xor rolb adc add pop dec cltd gs dec pop aam mov lret cltd mov fwait sbb pop dec add loopne jae fnstcw imul push lahf adc inc pop lret fistpll fwait sbb js add lret je jp push (bad) jnp loope mov cmp (bad) je sub mov repnz mov movsl stc and sarb orl mov nop stos aaa loopne js pusha stos mov (bad) jmp or dec sbb jns jp or and repz mov out out mov xchg xlat add roll mov jp xchg lahf ss sarb mov fadds pop pop mov loopne fdivr mov dec mov mov pushf stc enter cmp dec adc imul push sub sbb loope pop pop dec push stc mov add (bad) in cmpsb cmc lcall mov mov xor sub cwtl enter bound jp loopne call sub add add call ret roll loope jge cmp mov mov aaa rcrb jmp push or stos sub push sub mov adc cwtl int sahf mov (bad) lods jge push leave sbb jb rcrl dec add mov popa fstps fbstp cltd and cmpsl imul fistl cmp pop sbb dec cld rcr fcoml sahf lret jne sub or int inc leave cmp cmpl mov leave jne (bad) lea imul adc es mov push add mov push push stos lahf imul xor pusha push stos xor or addl xlat repnz xor pop test pop add cmpsl lret jge xchg sbb push shrb mov orl sti iret imul jp mov fwait test add cmpl js orl lahf lcall jg mov loop mov nop lahf dec sti jecxz repz mov jnp fwait and xchg jae inc outsl sbb stc aaa dec jmp lcall pop nop imul adc cmp cmp ret push cmp fcmovnu or or cmp xchg flds push xor lret push mov jecxz loopne push lcall fstpt fidivrl sti fcomps lret mov adc aad xchg pop sbb stc jbe push xchg lret (bad) mov jg pop mov lret lahf mov js xchg lret fdivrs mov sbb stc cltd cltd (bad) mov sbb cli cltd lcall je dec mov adc dec mov mov sub push dec push mov lret cltd mov sti dec mov xchg cmc xchg lret mov (bad) fcomi cmp mov lret fimull pop out hlt xor adc lahf jnp pop jns jge adc movsb mov xor je shlb das pop jnp push push (bad) lahf pop ljmp cltd xchg (bad) mov rcrb lret loopne lods nop cli dec fwait inc xchg sbb fdivrs adc inc out pop dec mov loop and mov inc dec xchg inc push pop pop mov cmpsl add jp lret (bad) cwtl (bad) inc mov inc sbb dec insb pushf dec mov dec push dec mov cmp (bad) inc inc xlat fidivrl dec dec or pop lret int3 jl adc inc dec mov pop cmpsl scas xchg lahf xchg out xlat ffreep iret aaa aas pop daa das pop pop pop emms jg outsl outsb push pop inc dec mov mov xchg out (bad) faddp into ss ds push push push jbe jle insl push pop inc dec mov mov test in aad (bad) pop cmp add gs push pop inc dec mov mov test aam (bad) int3 xor cmp sub sbb or sub (bad) xchg ret rcrl and pop leave pop out xchg mov sub mov xor out out ret xchg sarb cmp add pop inc cmpsl jnp (bad) addb subb (bad) and fnstcw fcmovnu xchg jg loope cmp imul mov mov mov pop jae sbbl cmp mov xor mov sti inc lcall out sub xor mov jp sarb scas fistpl lods test push push sbbb adc lcall lret cmc dec or and jno fwait loop xchg push popa mov adc inc daa jecxz or dec bound jecxz mov mov sub xchg sub jmp pop sbb test mov (bad) aas pop cmp mov jle or sbb jns in xchg inc sub stc mov jnp and jo call icebp mov xor ljmp or mov mov aam jo mov jg mov cmp stos cmp cmp mov and stos sbb mov rcr insb and sub fnstcw xorb lock mov push dec mov sub add into sti jmp loope xlat mov stos cmp test mov out or call dec fnstenv xchg adc push xor jbe jg (bad) mov (bad) jno inc cwtl push (bad) cld in push mov stos (bad) xchg mov inc lcall inc cmp lret cwtl pop jg push out adc sbb mov cwtl popa or aas test cmp mov ss out clc cmpsb cmpsl fsubrs push xor and xor jns push test xchg test pop xor je lock pop ljmp imulb popa mov mov dec and loopne add lcall loope loopne iret dec inc lea add es pop cmp inc or inc fnstcw dec cmp lahf out mov fistl loopne lret fcomp loope imul push jecxz inc inc outsl push xor lret fwait lds jnp dec (bad) aad push orb ss dec inc fdivs xor rorb fistp lock cmp gs or imul imul je loope lea (bad) xchg cmp xchg jo jno (bad) sub es jns push push dec aas pusha cltd and cmp stc mov sbb in pusha cwtl lea lcall neg jns mov rcll jns daa dec jb xor rcrb add jp (bad) pop loopne test push push cmp shrb mov and dec pop jp mov xchg cmpsb out jne mov add test xor push mov xchg cmp adc dec sbb mov and jnp xor lret ficoml mov sbb cmpsl jns lahf ret mov shl repnz ja into stc or mov test nop leave mov cmp fisttpl (bad) jmp cmp push cmpsl inc out add push aam std mov fldt fsubrl xor fcmovbe dec ret ret add inc dec jp sbb xor fcmovne ja inc iret lds cli lea mov sbb cmp cmp pop aas fstpl or mov pop xchg jmp ljmp xrelease adc push jge jle (bad) lcall repnz fisubl cs aas jno ret cld mov lret (bad) aam mull idiv cmpsb ret cmp jns (bad) (bad) jnp push mov cmp inc jns (bad) pop sbb cmp mov inc push icebp lcall sbbl pop notb pop mov hlt icebp cmp dec je sti pushl flds dec mov xchg hlt sbb rcl decl fxch stc inc jns flds insl aam call ret fiaddl in fisttpll cwtl mov pop test xchg mov js inc aam stc (bad) mov js lahf pop out add inc fadd jg xor cmp cmc cmc inc cwtl das cmp sbb pop out fstpt (bad) cltd jbe cltd cltd pop jl sbb sbbl lods ljmp add test dec loop adc hlt sbb pop inc lcall mov divl xchg rorb and mov mov push jno xchg pop sub pop cmp inc dec jnp lahf dec clc ret jecxz jp sbb push in outsl dec nop push test pop mov lret in adcb test xor lods scas fcmovnu adc das mov pop das test sbb addl addr16 push ret in cmpsb inc cmc push call add jle mov jle je (bad) push lcall test xchg lcall sti test adc inc push jne sbb jge (bad) jecxz gs rcr inc mov dec pop je mov cld (bad) push inc mov xchg xchg mov pop cmp sbb (bad) pop fnstcw incl jg pop mov dec push pop fwait pop movl andl lahf rcrb cmc xlat lahf mov (bad) jns sbb enter pop pop cmp dec mov push adc fcomi aas sbb jp sbb (bad) fild mov cltd mov mov lcall out inc daa jns fistl sarl or inc lcall pop insb rcrl (bad) (bad) push mov jp xlat mov jp xlat test xor aam xchg push push mov mov jp sbb cltd pop sbb mov mov sbb fwait dec pop mov fild cmp outsl cltd stos scas pop hlt mov cmp sarl loopne dec cmp mov fidivrl inc (bad) icebp inc sbb push ret aam or mov xchg daa (bad) stc (bad) pop jb (bad) jp cmp mov (bad) nop dec mov mov xchg mov outsb dec cmpl repz sub push jl loope add mov mov inc cmp sub mov jmp das (bad) lcall inc lods pop aam popa cmpsl inc adc jnp xchg sbb fwait pop adc out xor hlt mov pop call aas xchg fwait xchg lds adcl sub mov mov ret inc (bad) sbb ficomp lret sbb inc fldl2t (bad) mov xchg sarb (bad) xchg pop (bad) iret dec stos xor pop js mov mov xchg fdivr cwtl adc xchg (bad) mov mov lret stos ja mov inc mov fwait rcl pop sbb push inc nop fwait aam dec cmpsl in pop rcl sbb fadds sti inc add add mov cmc fidivl sbbl xchg jmp cli cwtl jg call push test push les push mov jle fwait arpl ror fwait add xchg cmpsb pop xchg movsb mov clc rsm mov cwtl rcrl jg cmpsl inc push sub sbb sbb xchg pop adc sub xor (bad) iret stos sub or inc and cmp or add mov sub mov scas pop adc add and jp mov pop or and pop jnp test inc xor push repz xchg xor mov mov pop inc and inc je aad pop inc mov cwtl outsb cs lcall fsubrs pusha out jle (bad) je bound pop cmp and xchg andl push stos test cmpl add dec test (bad) dec push mov lret cmp imul clc sbbl sbb or subl dec orl mov aam push lret in cwtd xchg aas dec dec mov lret cltd stos test mov (bad) dec jne movsl xchg dec mov push fidivrl lahf xorb andl rcr dec push mov ret mov push leave (bad) call xchg xchg xchg mov sbb fidivrl and mov (bad) out jbe test pop mov dec pushf sub mov lret imul lcall push mov pop jge shrb xor in push mov enter (bad) jg (bad) mov lret cmp pop vaddpd es (bad) pop adc or pop pusha sub pop hlt jecxz xchg mov add (bad) jp mov lods jl mov xchg jmp test xchg jo push call inc pop jge mov cwtl xchg addr16 mov pop sub and and fwait xor push pop xlat xor std mov mov pop fisubrl pop pop adcl pop fwait lcall pop jns es sarl roll mov pop loop lock inc mov aad pop and lret xchg jmp xor xchg xorb call sub inc inc cltd lds mov or mov les or pop add mov lcall outsl xchg iret xor dec dec stc mov cmpl pop mov mov movsl call das clc push popf pop add xor mov mov popa ljmp stc dec jb icebp cmc add dec add pop push or adc mov imul sbb pop cwtl adc mov push fs cmp ret iret bndstx fsubrs cld inc pop (bad) mov jno jmp mov push outsb pop mov sub xor jp mov cmp add adc pop mov xchg leave push fcompl divl xlat inc fdivrs mov push cwtl cmp pop pop xchg jl les shrl add add mov push sub xchg push jnp cld cmp adc inc adcl (bad) outsl mov mov mov hlt pushf (bad) negl sub mov addl pop xor pop or mov mov inc mov pop pop cld sbb daa dec pop out dec mov outsl xchg fisttpll insl test adc sbb dec cld mov or (bad) mov inc ret adc or stos and mov loop fcoms cltd imul leave dec mov hlt add mov jnp mov arpl dec out or ret pop pop stos and or mov cmp scas (bad) bound insb or adc mov pop mov call sarb add xlat inc xor rcrb adc pop and cs pop outsl push xlat xor out lods sbb jecxz mov scas pop and mov fwait imul sub lret push mov outsl xor mov fild call enter fimull je jb pop jbe aas sub arpl pop imul jo lret mov pop and sbb out test ja push inc (bad) lods push push inc imul lret gs fs sub sbbb mov push pushf push sub fcomps lods ss lret push xchg adc fcomps xchg inc push sbb pop jo repnz cld fwait add inc mov (bad) outsb xchg xchg dec (bad) ficompl mov das sbb xor in cltd dec mov in or lcall pop adc jle push faddl ja adc mov ds shll mov xchg push push repz cmp lods xchg in fisttpll mov out ret mov mov pop not stos jns imul imul jl (bad) jae lahf pop push icebp mov in inc in rcll inc pop jns sbb pop mov dec adcl (bad) movb mov or cmovl sub stos adcb cmp in pop test in add pop shr jbe inc dec jno (bad) mov lahf adc jnp xor pop pop and scas jns imul scas sub or test inc xchg push lcall push out mov int and mov aas or jnp jb inc arpl frstor ret mov int3 pop or mov ret mov and pop fsubr nop mov cmp push aam pop lods fwait test mov pop mov lea dec pop xor sahf push inc in sti pop int3 jle and add add mov adc cmpl imul jbe or sbb cmp in rcll pop xor push or dec xor iret mov shrb push pop xchg ret incb out repz lods gs xchg add aam jge fsubrp iret pop aas adc or loop mov sub xor pusha fstp xor fcoms dec adc fnop push mov mov sbb lret push xchg ljmp (bad) aad add jns fcos dec jo xchg or pop mov popa cmp and push in in jmp xor xchg xchg pusha outsb lahf push gs sub fnop int3 xchg push (bad) xchg pop inc ficoml xchg push loope sbb jne push push jg popf and pop loop int3 je fadds cmpsb lea fs ljmp addr16 mov inc pusha femms and jb adc mov repz pop xchg jmp aad popa xchg inc push mov in (bad) push cmc jp,pn inc pop arpl dec mov cmp mov aam xor gs call push in dec mov mov cmpsb test xchg aaa (bad) jge in cmp xor popf (bad) mov pop sub add pop push movsb adc adc inc hlt or cli add xchg popa jno movsb pop flds fdivs pop push xor push je fcompl mov andl lcall loop stc mov in jb in mov iret fstpl fild bound inc xor pop mov mov xchg lret cs fstpl lcall xor mov scas push add test push and pop mov push cmp pop push pop cmp and xchg pop mov inc std jo enter lods imulb push pop add cltd or jb stos xchg mov or imull aas push int mov jo sub loope mov aad leave push imul or les dec mov (bad) add (bad) pop pop clc mov jg mov mov lcall (bad) sbb adc les movsl sub xlat pop mov xchg xchg mov pushf insb mov mov pop inc lds lods adc sub scas int3 jbe adcl cmp call fiadd mov shrl (bad) jae fstps je bound lds jmp inc mov mov dec insb and push xchg pop cwtl pop xchg pusha movb (bad) mulb sub pop addr16 popl jnp (bad) xchg pop adc (bad) mov inc popf arpl jmp popa pop (bad) out subl pop xor cmp cmp pop sbb data16 gs push je xchg adc pop mov cs std (bad) pop add and sahf or dec xchg and push out inc shr sub mov cld sahf ficoml inc imul lods jb lret iret rcll ret pop rcrb insb in (bad) jge pop lods xchg pop pop aaa cmp mov es or xchg inc pop cwtl pop shr int3 dec bound cld dec out push std iret nop pop jecxz out or loope in mov les inc data16 lahf outsb lahf pop push jl mov pop pop dec dec rol test fs mov hlt jne jp pop pop and mov rorb js in das test or into pop mov mov sub ja pop je xchg xor jbe mov inc enter out pop cmp movsb in aam and add pop dec adc inc xchg insl add xchg sub leave pop sbb ljmp ss pop movsb or test mov jne push sub and lret adc clc jb pop (bad) fbstp xchg and sti xchg es (bad) or push sarb inc imul add (bad) lock sub mov aam pop push jae andl xor xchg loop dec dec push pop inc pop in lea xchg jg test add inc lahf jmp mov stos mov sbb pop mov jnp sbb inc pop xor adc out pop adc aad outsl pop or scas ret mov addl ss adc pop pop inc outsl sub pop sbb sarb mov into (bad) pop dec add pop ficomp inc jmp rcrl add sub cmpsl inc imul ret int3 jnp pop adc mov pop scas sub push sub mov js or cs sarb mov sub mov dec xor rol ljmp cltd lods test bound pop (bad) rcrl arpl das rcll jle xor in cmp inc push imul xchg fnstcw cmpsl ja pop lods push sarl mov pop stos jbe addl popa mov push dec fsubr imul and and popf sarl int3 jl lret ja mov por inc lea pop adc mov pusha pop mov lea out jp stos sbb dec push or shrb and fwait cmpsl add jg js adc xchg mov (bad) and cmp push or inc inc (bad) pop jl push test js add xlat cmc push lret pop inc push xchg decl incl sub movsb outsb lea mov leave adc lea mov sbb mov pop or sub icebp icebp mov jae mov jg out pop scas dec nop xchg out xor mov fdivs mov in pop pop sbb js std pusha loopne (bad) popf xchg xchg imul in out dec pop (bad) push inc pop or fcompl mov (bad) shlb mov scas imul rcll (bad) out mov mov int mov push (bad) jns inc sub lahf lea negl scas ja mov notl sbb insb push mov ret mov lcall push lret mov fstps xchg lods rorl pusha mov mov lea cmp fidiv iret push mov loope lcall push clc stos push mov fbld int3 mov cmp je mov frstor imul cmp test add daa cmpsl ds enter aad add fbld ret insl movsb (bad) lds lds xlat into push cmpsb pushf notl sbb out insb pop jmp js and mov cmp xchg lret (bad) push aaa pop mov jmp mov push mov push es int ret subb inc rol out and icebp inc sbb lret test push cwtl pop clc les test imul das fild add lret gs xlat fistpll pop and or jns pop stos push and xor cmp lock aam (bad) (bad) fs xor mov sbb inc sbb jle push popa dec loope jne pop aaa xlat insb add jge and divb fwait mov jo push adc dec mov mov inc xchg push outsb fstps adc scas rcrl mov mov ret test mov jae aam fst inc add push enter xor scas lret sbb and cld mov inc mov mov inc cmp lods rcrl push ss sarb insb mov jnp jns lret mov cli add outsl mov xchg push popa cmp add mulb cli popa sbb push sub add outsb add push ret sarb enter out push fcoml aad mov mov pushl add mov outsb out xchg ffree lahf mov pop xchg dec mov lret lds push lcall push sti jbe,pt xchg mov fsubrl push mov imul mov xor jb lcall push mov jmp fcmovnb test xor pop mov orl xor ljmp ret hlt pop (bad) jo sahf aam and jmp fistl mov cmp arpl lret lahf xorl mov pop add gs (bad) das mov and out push xor dec cmp pushf shl lods enter mov fcom shl mov xor testb cmp jns data16 jae jns,pn pop cld lods rcrb pusha mov stc add pushf cmc test call push hlt sub add push pop addr16 (bad) icebp popa cltd jno cmpsl rcll roll pop ja lahf fwait lods out int3 jl pop out adc jp lea fildll add cli and test imul adc push negl int mov (bad) punpckhdq andb mov or gs xor adc movsb sbb pop xor test jns adc scas icebp dec dec and loopne inc xchg inc xchg sbb push aad adc push inc jle bound pushf sub sub mov inc cld stos lret dec cmpsl pop push (bad) (bad) xor ret fs jb stc call and data16 inc push and fmul enter shl aam pop mov mov rorl gs pop adc xor out xchg push iret inc and dec shrl gs mov mov dec jnp sbb sti adc sub cwtl (bad) lret push pop cld mov and pop fwait repnz cmc movsb aam mov icebp push mov adc loope (bad) and jmp sub mov hlt add inc in push mov lods ds pop or jp ss or pop adc aad sbb call je imul lds push push mov sti sbb fldl jo sti shr inc mov in das lcall inc push scas lds popa pop inc outsl lahf pop fstpt dec inc mov and popa test nop test jge outsl stos jmp lea xor inc aam stc leave dec and lret mov ss scas ss je ljmp cmpsl inc movsl xlat (bad) fldenv mov pop add in sbb in cmpb xchg out aad dec push mov mov dec mov popa push mov (bad) sub inc ficom push (bad) bound or mov sbb pop or inc sub push xchg cmp (bad) xor fdivs (bad) (bad) cmp nop lahf jb mov add cmp push xchg sbb insl cltd cmc popa push inc push divl pop and imul mov xchg and inc xor (bad) stc lret push fisubrl pushf xchg sahf cmp mov pop push dec test out aad lret adc dec into xchg cmp hlt mulb faddl scas dec mov xor xchg pop xchg jmp pop cwtl mov sbb pop cltd push mov xchg sbb dec lret dec les stos inc stos mov repnz js mov jp fadds lods sbb dec pop repnz gs or (bad) stos insl daa jnp loopne (bad) jne hlt add inc gs outsl fs gs imul add clc add jmp lea jbe bsf sbb mov call pushf ror call test movzwl sbb movsbw btr sub mov mov add jmp movl movb pushl mov mov mov mov pushl ret (bad) ret inc cmovb push in pushf ret pusha scas jo push xor test jg mov subl sbb or das aad mov xlat mull repz (bad) sbb xlat js xchg movsl pop mov inc mov dec xlat adc mov pop pop xchg fsubrs out in stc adc push inc jecxz outsl mov adc dec mov jp xor daa xchg xchg lret jle push in imul push jecxz test cmp arpl fcoms jo push dec inc mov inc mov mov sub mov cmc or stos push dec jecxz in dec aad imul test mov push jecxz inc cmp pop xchg fcoms dec int jmp sbb mov sub ficompl imulb push out sbbl jmp (bad) mov (bad) scas sbb movsl jecxz movsl stos push sub pop push and popf mov push jge lods jge sbb mov add adc xchg or jle or jg mov cmpsb sbb in decl jne or mov repz xchg arpl cmp xchg scas xchg popa mov scas das jecxz (bad) xchg imul pop pop sbb pop loop mov (bad) stos hlt fs xor lahf jecxz add inc mov test iret pusha fucomip andl mov cltd sub push push in dec rcrb addl mov mov (bad) cli divb push dec scas lea scas mov aam mov jno xchg mov or pop cmc popf lock out das out fadds push movsl add adc hlt mov pop aaa int3 aam insb or scas aad rolb fwait lea jl or add movsb call call lahf push cmp and mov clc sub mov jmp cmc mov call add call add add add inc dec add add add add add add add pop int add add add inc push add add add push add add add add add or add add add dec push add (bad) add push add stos push add add add sbb dec mov pop idiv mov hlt adc or (bad) add sahf (bad) xor adc jbe push mov nop movsl decb cwtl cmpsl dec dec (bad) jg jno and cmpsl add xchg popa rorb dec mov das xchg data16 enter lods sbb imul int ret xor push scas data16 rol mov xor stos adc ja out push in mov ss stc mov ja jg iret iret (bad) out and mov xor and aas mov and enter enter aas arpl test inc insl jl xor stos mov leave pop or les pop and int3 enter sbb lret mov mov inc adc test sub sub movsl jnp ds inc cs sbb sbb aaa ret call lahf mov jge loop mov pop out or pop push ja inc pop fucomi in data16 cmpl and xor fisubrl push (bad) aaa lea cmpsl jo jbe xchg add addr16 or and popf hlt stos jmp stos (bad) mov dec fadds dec mov adc lock and popf negb push jge cwtl pop pop xchg popa cli gs dec xor adc inc add or outsb inc xor add dec adc jnp outsl jge cmp or dec push andl push scas cmpsl aaa lahf std cmpsb push dec adc lret or repz jbe,pn push push imul mov or dec cmp mov aad add xchg inc cld jb sbb jg out xlat and sbb push mov fsubr lds fbld dec xor enter adc into mov fcompl jmp and jge inc or pushf pop rclb fadd pusha pop and lods fcoms test lock xchg in sbb sti fs out ljmp mov dec loope xor mov mov in xor jbe mov mov mov push xchg bound xchg adc pusha push jbe pop or ja ds outsb mov or jp addr16 (bad) hlt shll push cltd outsl rcll leave pop mov sahf sub cmp lock lahf mov lahf test adc test call mov cmp jle outsl cld pushf scas add pusha imul je push lock jae jp pop cmp (bad) ljmp setne xchg add lret inc push push call sarl es and dec push daa xor out xchg jne lret gs xchg mov aam pushf mov scas xor int3 xchg pop xor lcall cmp adc jo xchg outsb out fidivrl inc fildl cmp xor (bad) pop cwtl or fcoml push sbb pop les sbb mov mov sub xchg mov xchg and (bad) sbb mov jns lods je out mov stc fs lcall lahf test sbbl (bad) test ret sbb pop cmpsb sbb sbb mov add or inc pop cmp cld cltd adc xchg push loope aaa push std adc lods xchg pop pop cwtl test sub idivl stc or or mov and jmp push cmp add les dec xchg push std (bad) andl lret (bad) dec in (bad) lock idivb pushf jp lret or fistpll movsb lods add clc mov mov jno in test loop adc pushf add (bad) push fstpt popf pop sahf cmp push mov cmp loope and std pushf inc and jno insb jecxz fs fcmovnu push cmc cmpsl test pop stc xchg ficomp cwtl push std jno int3 cmc jg jno jnp rcrl shrb or rcl enter jb ret fisubl je pushf jb mov jge test pop dec mov aam scas inc mov dec loopne dec (bad) insl dec loope add mov pop rolb addr16 and in loope pop pop pop add jl test push add adc hlt cmp inc fsubl xchg lret cmpsl mov mov xchg add repz imul xlat cmp pop (bad) orl nop inc cmp gs mov iret cld pushf (bad) push mov lods sahf xor jmp xchg mov sub dec (bad) movsb das cmp push adc clc xlat xchg sbb add mov loop xor mov or jns cmp test in cli push into movsl imul lea loope mov cwtl jecxz lock inc jl insl les mov or rorb mov cli or scas stos inc sbb (bad) fcomps fldt in dec mov in lock inc fsubrl imul mov dec lds mov jg dec int3 jb cmp sbb and stos push lret insl (bad) mov fisttpl lcall pop ljmp xor rorb cmpsb test mov outsb sub and (bad) sar inc mov and lea push data16 mov insb push adc inc push jbe movsl leave inc push add adc std adc pop pop fidiv jle jl ds push fistpl test int and fwait mov adc jbe mov (bad) enter dec mov mov rcl add lcall loope pop push dec aam fstp push in sub mov xchg pop gs int pop or mov add (bad) out decb push inc inc inc mov jb in out cltd ror jle in mov or lods xchg jns jle xor dec movsb outsl inc fcmovnbe ja pop fsub lods inc dec jns ret das xor adc mov int3 out subl cmp adc daa cmp xchg inc mov jns mov xor into push negl dec inc (bad) dec imul mov xor loop adc and rcrb inc outsl (bad) mov add js inc pushf aas repz negl outsl add xchg push mov lock mov xchg arpl out cmpl loope,pn test or fdivp ljmp adc mov and cmp add data16 mov aaa stos inc fisubr or or dec repnz xor pop popf (bad) or add push insl (bad) jle lock or call jecxz enter lea mov and xchg pop dec std jo out js jno arpl (bad) dec (bad) clc (bad) ja inc int3 adc adc into inc movsb or cltd pop into jmp ljmp push insb mov fmuls mov jl inc rcl scas cmp xchg je inc test and mov cmp (bad) (bad) popf cld adc inc lret cmpl mov pop xor fsubs mov loopne xor in out out fsubs fcompl inc dec fsubrs push fwait jmp in mov dec negl gs fwait adc mov xchg xchg dec fisttp pop les inc movb push jbe add cltd (bad) leave (bad) test add lock xor adc frstor shlb in pop mov xchg xor std sbb in aam dec es lcall jne movsl (bad) jo cmp pusha mov (bad) adc cli mov mov push cmp mov jmp fdivl sti out cltd or loope ret adc push iret jbe mov (bad) jmp (bad) push jmp cmp movsb jl lock mov push push dec or or or das pop fsubs out push iret scas or sbb lcall add jb dec pushf xchg mov add pop and pop sahf je mov out xor adc aaa or sbb inc fcom jg (bad) jb cmp inc sahf jae iret sub dec sti test dec mov jbe pop aad inc scas ffreep mov andl pop es lret mov mov xchg xchg add and xchg jecxz loopne mov jne lods mov stos sub mov cli mov aam test sti fistl dec push lea imul movsl int dec fcoms scas rorl dec (bad) mov xor fwait xor cmp popf outsl adc stos mov dec adc or inc cs scas or and xor nop cmpb pop leave mov scas jmp inc push adc icebp xchg sbb dec push (bad) (bad) (bad) xor decl inc push cmp cmp xor cmp icebp jp loopne add or xchg (bad) sti lods insb cmc hlt cmpl js sub inc xchg movb dec mov add daa and shll cli fcomi mov js push leave scas pusha out dec aad leave push out dec and stos ret loope fwait mov xchg add dec lds out insl rep mov (bad) enter pop (bad) aam xor dec inc dec xchg sbb mov push pop in test test cli add ja int ss fdivs inc pop mov fistpll sub mov xor clc push fisub sub fsts and (bad) or fdivrs loop cmpsl popf mov insb and pop lods or or or mov mov jp int3 inc outsl xchg and jbe mov xchg nop leave pop cmp mov mov jns push lcall out push stos cmpsb movsb hlt or xchg repz push sub ss fsubrs fist mov xchg shrb push xchg inc cltd rol lret inc mov push dec stos lods adc pop mov icebp scas fucomp outsl dec scas lret mov sub dec adc (bad) mov pop mov icebp and adc lahf shlb jl stc cmc or subb sub push cmp jo loopne daa pop lods movsb sub add xor fidivrl popf out out or jo stos xlat ss mov inc rcrb in (bad) and mov hlt (bad) std adc pushf jmp ret push repnz xchg add dec push movsl dec pop pop pop inc js aad fcmovnbe jmp mov adc out push (bad) fldcw and adc pop mov lret cmp lret inc shll lods rclb ret outsb xchg jae mov pop cmpsb imull sahf add fcompl jo mov mov into pop popf scas pop sti push jns sub repz or pop (bad) (bad) sbb (bad) repnz test xlat adc movsl outsb xor std push push or dec es add sbb jne push sbb mov fdivrl xor cs test xor xor jp inc ja (bad) mov jg mov dec xor roll out sub sub inc xor lahf loopne adc (bad) sub fnstsw scas pusha dec inc ljmp inc test jb (bad) push cmp add nop popa xlat jmp lods add add add or mov and mov xor in lahf xlat push push jb (bad) jmp mov xchg xchg and jg sti sbb xor cs pop ret sub xchg cld pop in push stos or lret test inc aad add in sub mov les adc jg cmp and pop push jecxz,pt and mov in sbbl pop dec and push and mov mov inc loope xor push push in inc imul xor cmp je ja stos cmpsl jns out sbb popf pop div cmp pop xchg orl mov or add mov data16 dec mov (bad) cmpsb or iret sbb push cmc jmp into push push or pop push xchg push push sbb mov cmp pusha sub in jbe mov (bad) loopne mov scas in xchg cld push pop fdivrl dec pop xchg loop jge sub into push (bad) aad fbld rorb adc push data16 dec ret mov cld fucompp repz xchg xchg ja add inc push push pop inc xchg jno inc cmp test mov jecxz dec mov fimul insb fdivrl scas push or out or pop add call aam cld add jnp lock xchg popa jg idiv xchg andb (bad) cmp scas xor out lret ret mov dec orl mov pop (bad) loope pop rol mov pop fwait cmp sub jge scas sbb gs daa xchg mov lock adc adc stos rcrl pop xchg (bad) push mov movsb nop aas ficomp cmp inc push icebp lcall mov imulb pop pushfw jb dec mov stos xor jo dec idivl insl xor std fs cld adc jmp mov fcomi jne jle pop jmp les mov pop (bad) sub fsubl cmp lea fcoml xor (bad) inc xchg inc arpl mov out sbb gs scas or outsl and addr16 (bad) nop loopne,pt jo inc imul fnsave mov xchg outsl mov mov sbbl gs or or pop jbe fdivp sub pop (bad) and pop mov scas jo push add test sub pushf pushl movb pushl ret pushf mov call add dec outsl arpl inc jb add add or mov ljmp fildl loope mov nop jbe,pt mov sub xchg and xor xor mov sub out add mov fsubrs (bad) jl push movsl and daa inc js mov xor mov sub popf push xchg xor nop (bad) or andb xchg xchg jnp movsb push mov hlt sub imul int3 adc push lods iret xchg mov jae dec mov das fstpl lds nop mov cmp stos jno repnz in jnp popf jle xor push mov lret outsl notl lods pop inc pop xchg subb cli xor scas sub fs scas stc adc insl dec out outsb out push hlt push pop incl mov and inc inc jo push and pop dec popf xchg cli out clc ficoml js out pop mov pop mov mov xor in rorb jb stos jne dec push add inc int cmp sti add popa popf mov dec (bad) int3 sbb xchg loope,pn dec stos int xor fs out outsb in pop sub loopne adc in or imul mov movzbw mov shrd btr mov and inc shl mov pushf jmp inc push call loope je xor push je cs faddl jo and jecxz sub cmpsb xlat sub cmpsl mov jmp pop push and dec or pusha shll mov insb out or mov push xchg mov ljmp sbb aam mov daa sahf insl ja sub jge stos mov sbb cmp int3 imul test pushf sub int3 mov push cmp add out pop lret hlt push cmc add or jg rolb ret movsb aas in jbe pushf jb pusha push (bad) and lret push mov cmp dec in lock pusha mov pop sti sub lods daa add mov mov outsl or add fs pusha call mov lea jb pop pusha pushf pushl ret push lea jb pusha bt call jb push call push int jae inc push sub fstpt sbb sti jns xchg add bound fsubl jbe push push insl aaa addl adc add jecxz int in lods cmpsl aaa add std loop adc hlt pop movsb add mov mov add in push mov int call cmpsl add lret and lds push arpl xor fidivl adc mov inc movsl roll pop push add addr16 mov pop inc (bad) rorb std ret xchg pop aas lcall mov jmp sbb push dec push sbb scas or adc or dec mov xor (bad) or (bad) leave rolb xorb aam xor mov adc lcall mov sbb push xchg sti lcall fnsave xchg outsl or aam mov dec jb sahf mov push cmp adc jbe and out cltd or jmp jno push call xchg dec or fcomp sub fcoms loopne jl in push inc out rorl scas imul shlb push fistl dec xchg pop xor add stc mov or ds sbb cwtl arpl adc loopne push mov pop adc mov inc mov lods dec xor and loopne dec and in adc jle fsts xor out mov cmpsl inc jl jo jge pop push mov fisubr sarb enter or lret adc cmp mov fcmovne cmp lods lds sub jne jg xchg push enter arpl jmp cmpsl jg mov mov xchg roll imull sub xor addr16 and outsl nop jecxz sbb xchg dec xchg inc popf dec dec mov test (bad) test pop add scas and frstor jmp mov push mov movw lea jmp stos movb pusha push pushf lea jmp pushf mov call movb mov cmp movb jmp pushf add movb xor mov lea js add cmc clc mov neg pushf mov jmp pop jb push bswap mov not not push pop mov bswap pusha movzbw movsbw mov pushf pushf pushf pushl ret ficomp push mov add int3 fmull xor sbb mov mov pushf aas fistpl jb sti lods dec out repz cmpsb cmp enter dec push cmp movsb in dec dec mov sbb icebp icebp adc jb or adc add jmp out pop add insl pop out cmc lods dec (bad) (bad) xchg mov rcrl push or cmpsb outsb jl lods sub adc sub cmp lret xor inc das rcrl xchg dec addr16 pusha pop and notl fiaddl push cmp and cmpsl (bad) jo into sbb aas jge adc push mov imulb sbb popfw out jle cmp pop repz xor inc push movsl ds mov and jl jo ss add pop outsl push repz out paddq push dec push adc dec ds jp adc addr16 cli gs test andl add xchg (bad) imul pop leave loope or jb cmp (bad) push xchg push mov sti xor insb pop stos xchg clc in sub jno pop sti jne lcall mov cmpsb dec idiv fistpll cmp call les jno int int3 mov sub cvtpi2ps leave xor xor je or rcrl mov sti cmp lahf outsl mov push jns jb int jbe xor push pop pop jmp cmp call das lret dec fistl out fwait push push cmpsl push mov test xchg sahf and (bad) or stos xor fcoml mov loopne jp mov and inc add xor jmp repnz xchg outsl xchg aam jo push adc xchg repnz sbb push mov mov pusha add ds fnop jmp stc xlat mov pop xchg data16 sbbl (bad) and push cltd xor inc (bad) adc xchg jno xchg and xor mov test pop sub fsubl int3 ret call sbb cmpl stc test xor aad sub roll or and aas daa pop jge jne xor mov xchg (bad) cmp jecxz decb lahf and pop (bad) hlt fs loop lcall mov inc and push nop pushf roll or inc jmp mov loope test jo push inc push mov fwait jnp sub aas add movsl daa mov addl pop lds jnp (bad) iret mov jl adc test sub lock stos push and mov push jg cmp push cmc inc mov (bad) stc loope pop fistl push ja repnz out cli jnp inc adc xchg add mov and cld dec shlb dec (bad) lods jo adc ss std or das aam jle xchg sub add imul mov xchg ret or push data16 lock mov add gs shrl push mov test popl repnz adc (bad) (bad) divl (bad) dec push inc or jle hlt inc mov xchg xchg or out out push fstpl cs dec (bad) mov out aas shrl (bad) movb push mov cmc dec int adc adc push rorb jno decb and mov popl loope sub das sti cmp cmpsl rorl out je fldcw leave fwait push (bad) hlt mov (bad) fwait aaa dec or scas lahf dec ret cmp jbe js cs xor int3 add jne inc test add jl scas out ret push mov sbb cmp test push mov addr16 ss mov fisub es es or pop sub push mov mov add push pushf pusha movb lea jmp xchg js inc push xchg sbb xchg into in es jp pop lret cmp or repz jnp jl or in add push rorb mov and dec mov mov stos pop sbb sub std add int3 mov cwtl mov notb shll mov or mov xorl jb push jl addr16 inc int in call pop dec xchg pusha call ret mov xchg and out into cli adc pop pop xor add sub mov mov int3 pop jg xchg sahf shl jnp (bad) cli lods rclb shlb mov rcr enter (bad) outsl dec (bad) mov pop push test mov add pop ds add fsubrs dec mov mov das dec sub or cli clc sahf cwtl xchg (bad) rolb jecxz push pop sub sbb xchg and (bad) out in xor cmp neg stc add bts mov rcr mov cmp push repnz pushf push mov lea jne cwtl cwtl movb pusha push pushl mov pushf jmp movsbw jmp push clc sub cmpsl int3 xor pop (bad) test pop pusha scas fs mov ds push xor dec insb int sub jl or stc adc add jnp aam je adc pop outsb sbb shrl jns stc adc dec call ret xor adc jnp jns add jns in imul cli add sar dec mov (bad) mov lahf mov cmp stc add test test out mov jae push mov orl dec jo or mov push inc cltd loopne data16 repnz ret call outsb add inc fndisi(8087 insb (bad) out mov sub or xor dec cmc fistpl pop out pushf pushf rep jmp pusha push adc pushl mov movb pushf lea jmp lea jne push pushf lea call push pusha movl lea jmp push xor mov inc push (bad) arpl test cli or sub and imul leave fldt jmp ret add pop insb mov mov cld ss or lock (bad) ds insb test xchg and and adc cmpsl std inc xchg (bad) out inc or push nop push rorl xor (bad) (bad) pop add jmp pop aam lcall pusha sahf xor dec jle loopne mov mov outsl lods in mov or in mov cmpsl outsl sbb (bad) xor aaa out sbb inc popf and pop pop (bad) aad pop call adc jp std fs sub inc dec into lock (bad) push or js fnstcw pop and mov add sbb lock xchg lods movsb (bad) adc dec mov inc cmp daa or (bad) fstl xor sbb inc (bad) and adc dec cmpsb cld fsubs push mov fsubs dec mov xchg mov test jecxz aaa sub (bad) js ja aaa data16 xor mov and lea rcr jge jmp (bad) (bad) push xchg pop pop adc (bad) mov push scas insl or fs jge mov daa (bad) jbe ljmp pushl clc pushf dec dec movsl sub aaa stc fist lcall push test mov (bad) arpl xor lahf xchg repz jmp adc and jg (bad) mov insl daa popf adc les sub mov (bad) pop test add cmp aaa lahf repnz ljmp inc lds cmpb in ljmp cmpsb adc ljmp daa scas xchg addl (bad) add mov jge loope pop fs test push or dec add dec add cwtl test mov outsl add lock and cmp cs rcr (bad) jmp pop push push stc cmc popf xchg xchg pop (bad) dec fwait and jbe loopne mov js inc mov cwtl cmc fild fdivs xor add test add ljmp inc std jmp pop pushl mov stos jecxz rol add and (bad) mov jl jbe jns push sbb loope xor inc push ss (bad) (bad) mov movsl or dec push das out sub or outsb mov iret sub fidivr sub bound dec dec pop jbe das mov pop adc dec ja stc stos repz test mov mov mov cmp sti lret xor sbb cmp cmpsb adc fidiv jo in je das cmp jmp mov jne pop sub bound mov mov mov xchg sbb dec and push test mov bt jmp sti mov cmpsl inc inc push clc xchg jg inc ret aaa (bad) (bad) iret pop fwait arpl arpl mov fist jge das adc and scas and jl xor xchg insb mov aaa sub (bad) jbe xchg fisttpl xchg aaa dec jmp inc ret jp mov cmpsl push mov fdivr sbb es into movsl jno adc jge rcll push dec insb imul sbb adc sbb dec push fist mov in add adc and fsts insb std in flds inc sub in js inc in mov xlat outsb mov push mov mov insl mov jnp jl adc not mov (bad) hlt (bad) lea je pusha cmp mov add call push pushl or jmp movzwl neg rcr mov cmc jmp add movb pusha pushl lea jmp xor outsl mov push jb xor fs lods jle bound js mov sub leave in movzwl std jmp and rclb mov out and scas pop (bad) pusha or mov test sbbb in add (bad) std lret ja dec mov dec out push adc lret jb cs std add sub nop pop lret aad add in andl jl (bad) mov popl in pop cmpsb (bad) inc ss or cltd loopne stos push mov into mov mov in popf xchg repnz pop aam fsubrs pop ss loop fs nop les push in inc fs imul jp aam in (bad) cmp mov gs data16 cmp bts neg mov clc mov clc test clc repnz call jmp pusha test add cmc mov cmp pusha lea jb jmp jmp mov inc push rcrb out leave imul inc xlat xchg sub adc dec xor pop pop roll jl mov aaa lret pushf data16 testb or push pop xor out jne pop (bad) jmp xor insb xchg mov ja jns sub test mov xchg pop movsl fsubrl out dec scas aam add repz rolb sub int jnp (bad) leave loope mov jbe cmpsb push idivb popa daa jg lods iret xchg inc dec adc dec xor lods lahf mov cmp loope incl mov notl mov inc scas sbb js mov sub int cmp ljmp enter push lea je pusha pusha lea jmp mov mov push call aaa sbb push xchg cwtl fdivrs jp ret xchg cld sub jns popa cmp imul cli mov or inc lcall hlt add insb flds xor sbb ljmp in lds cmpsl pop sarb xor in mov pop cmpsl loope (bad) sbb pop aad fldt mov loop lds stos sub xor inc inc movsl pop lods outsl inc int add sub cmp stos lods jno out ret xchg jmp jle inc mov mov popf into xor pop mov xchg jo (bad) pop dec or and scas (bad) mov fldcw adc dec and in pop nop jp lret insl adc popa or inc cmovne pusha movb pushl lea jmp lea jne jmp pushf lea jg je pushf jmp shlb scas inc inc push cmp push lods mov aaa addr16 sbb xchg mov xchg jne adc or arpl jge jbe test inc sub xchg test jae xor inc or or stos jno ja pop cmpsb gs mov mov and mov pusha stos mov xor or mov mov mov idivl scas cmpb mov mov cli mov negl or adc cmp int gs pop out lea in push scas fiaddl push mov xchg jne xchg ret test lea inc jmp xor out loopne inc inc push aas xor sub mov dec dec fs mov mov inc lahf jg insb (bad) mov pop stos pop (bad) pop mov jle pop jae scas xor mov iret jle fisttp stos sbb mov negl cmpsl aad aaa sub push mov stos mov jmp mov add push pop in lods and stos ljmp loop sub int3 inc mov push sahf adc or ret movsl dec fs adc push mov lea jb push movw pushl ret mov jmp pushf pushf mov lea call call call bt cmc sub jmp lea ja mov pop pushf mov bswap seta call stos pushf pusha pushl lea jmp lea call push pushf lea jae xchg jmp lea jb pushf test clc test cmp pushf jmp lea je cmc jmp add push imul outsl outsb outsb arpl pushf movb or pushf lea je pushf or btc clc sub cmp bsf shrd inc mov aas shl mov and shr add jmp test push xor movb call xchg in mov jb jmp dec mov pusha testb mov addr16 jno jmpw fmuls sub lahf xchg loope jno jnp mov pop out cmp inc cltd shrl xchg push cmpsb lahf dec adc or add sub adc cmpsl mov mov jmp jno and lds push and cmp pop popa dec push jmp fiadd add sub mov or lret (bad) xchg pop cmp push stc push cmpsl lahf fistp add xchg notb mov pop (bad) jle or sbb notl adc xchg xchg mov jno rcll pop sarl xor (bad) jae pop sub ret int (bad) movl xchg mov and cmp xchg fld lret adc inc das ljmp imul sbb cmp aad sti inc imul adc xchg out mov and xchg jmp xor outsl idivl xor std lcall mov pushw popfw mov pusha inc movb pushf call lea jae clc rcl cmc mov sbb mov cmp btr inc mov stc cmc stc stc xor pushf repnz pusha jmp lods stc not stc neg call jmp mov adc not mov cmc sub call inc mov push arpl clc ds (bad) xor xor or lock push hlt js or dec xchg dec pop test (bad) emms scas aad popa mov test test ljmp adc add cmp test in dec and push popf cmp jl in sbb ret mov fnsave sbb call pusha pop sub sbb (bad) dec cmpsl ds shr dec mov xchg xor sbb fmulp mov jmp outsb fisttpll mov add je outsl fs gs popa outsb fs gs add cmp add test cli in adc lea jp cmp call fs xchg dec inc push xchg outsb insb sahf mov cmp xchg aam add lods imul xlat sub pop add movsb (bad) ret (bad) pushf fcompl clc xchg insb adcl or gs or sbb lret std pop imul scas and ss pushf pop stc xchg jbe push shrl out mov jo out xchg popf (bad) jl pop pop and (bad) in jge cmp data16 out and mov mov (bad) adc aas inc rcr rcl not push sub movzbl push xchg sbb call adc pushf pushf pushf lea jae push mov jmp pop aad imul xor leave or mov stos cmp mov ret stos icebp cmp cmp divl insl xchg sbb xor xchg mov test cmpsb lret ja cli and unpcklps adc ljmp dec es arpl cmp arpl mov mov xchg in dec xor dec lds sbb lds sti adc xchg (bad) push xchg jne (bad) xor repnz ljmp adc sub and mov or push mov pushf mov pusha pusha lea jmp lahf lea jmp ror pushf inc movl clc xor pusha pushl jmp jp push push movb lea jmp cmpb pushf lea jne aas shl sar bts sub push das adc lahf mov (bad) lock movb clc mov cmp test pusha lea je bt call sub sbb dec inc push xchg cli sub push or into push (bad) cwtl ds dec lock sbb cmpl jg pop mov arpl mov outsl lahf cmpl movsl test (bad) dec inc xchg inc lcall cmp nop in test arpl add rcr lds data16 out popf dec insb out xor je daa mov pop stos and sahf inc inc and (bad) fmull aad (bad) mov mov arpl call (bad) fistl mov xor shr das inc es mov mov dec sub lret test push hlt inc dec int3 ja pushf add pusha call lea jne data16 imul pop std std jmp (bad) jmp jmp and jg dec inc push cli xchg cmpl push jae aad jmp lods jne out xor xor sbbl inc dec aaa cmpsl dec aad lods jl lahf push loopne sarl mov jecxz mov xor rolb orl xor pop mov daa xor mov ret jecxz jmp or add in or imul in inc lcall sti arpl mov mov fcomp jecxz test mov mov jns clc enter cld out outsb jns dec cmpsl mov addr16 fdiv cmp adc mov jp sub icebp xchg out das xchg enter repz sub inc pusha pushf mov lea jno push mov mov lea call push push pushf adc call push pusha mov inc lea push pusha push movb lea call pusha movb movb adc pusha call pusha lea jb stc cmpb pushf push lea jne bsf cmc mov test add cmp stc jmp stc bswap dec mov cmp rcr xor sbb add call call pushf lea je call arpl rorl push inc dec push adc and cmp sub and cmpsb mov pop dec mov mov scas es rcl ja add out adc xchg jp loopne mov outsb jo lods sub push inc dec push inc add insl movsb ret aad in cmp cmp cld dec popa test jnp mov and mov and sarb or pop stos das mov lods mov movsl mov push stos fldl (bad) push aas mov mov xchg jmp (bad) std xlat insb cs jle ss cmpsl add aaa outsb cmpsb jbe sbb addl jo negl fcompl sub jne sub inc test (bad) decb imul dec inc push scas in inc mov (bad) aas repz and push mov inc jne icebp cmc std lahf das sbb out pop movsb cmp loopne into push lds sbb sbb push pop mov jecxz scas mov shrl pushw iret dec jns sub add nop movsb aas inc inc sarb test mov inc or stc and rclb outsl fst scas xchg mov loop jne push fcompl das data16 fcmovnbe mov dec pusha rcll pop stos adc dec jmp mov push ss jbe inc cli shl int inc mov jle lea jae push pushf call add and out push fs push pusha lea jmp lock jne inc push sub adc xor ja and lods cmc std insl mov (bad) mov add mov fsts jp push and inc int3 movsl xor mov paddsw bound pushf in mov insl ret mov xchg add dec xchg jno dec (bad) and cli out jle mov dec aas mov mov cmp mov sahf and test xrelease sbb inc and scas mov pop push imul mov stos outsb mov lock repz insb or push int popf jns sub test in cld mov add push inc push adc out div cltd mov sbb outsb movsb jbe push pusha insb mov fldpi mov popa in mov in cmc lahf lds nop lahf mov imull dec movsl mov hlt jno dec push movsb cmpsb aad imul jns pop cmc loope inc dec mov movsb lret and outsb int3 ja or mov mov icebp inc push mov je,pn cld inc mov xchg jmp mov fldl2t test adc pop jle mov inc mov xlat (bad) mov rcl cld pop test lahf xchg (bad) sbb xor fbld push sbb lea jae pushf cmp add pushf pusha pushf pushf mov pushf lea jmp dec pop cmp push mov inc inc xchg dec jo sbb mov mov sub sub xchg pop xchg inc pop arpl push out jge push sub and lds push addr16 jecxz out lcall out in movsl dec inc test ljmp and pop push gs repnz push mov cmp mov cmc test jle adc mov arpl das push lods (bad) mov fs mov movb pushf pusha lea jne pushf pushf call imul add int stc sbb xchg pop inc mov insl pop mov or les inc and jl out mov fstpt sbb sbb xchg inc or adc dec push push sub dec addr16 xchg and outsl icebp ficom mov or jg push push sbb jg bsr mov and andl sbb and xchg mov call fwait insb sbb or adc sub std pop and mov ss push add fist or add cmp inc addr16 sub lds adc push add jmp mov bswap pusha mov pushf push mov pushl ret pusha cmp jmp push pusha push call jo mov inc push add adc dec repz lds js or les inc popf movsl fistp mov push xchg xchg test call cltd or jg fisubl in rclb add fstps xchg and int3 call int3 fidivl xchg jnp sub xchg mov xchg mov push cmp rep pop fmul or mov mov inc or sbb jmp inc outsb add inc rolb insb data16 bound in push inc dec fs xchg mov addl (bad) loop jle or jno dec ret xor fwait loope (bad) out or mov ss or imul shr (bad) idivb movsl ljmp mov jbe and mov add in cmp lret ds or sub rcrl mov movsl adc jb incl lock (bad) aam outsl (bad) xchg (bad) dec scas imul movsl pop inc xor nop stc lock xchg xor xor movsb je call xor push rcrb add stc and pop js inc mov mov lea call pushf pushl pusha mov pushf lea jmp push add movb push lea jmp lea ja shr sar sar sub not adc add mov mov neg rol jmp sub popa mov mov lcall aam (bad) in sub sahf mov pop push and orl add das sbb adc hlt xchg add ja loop cltd scas int3 inc lret in cmp adc mov out out or xchg mov jb clc pop mov in jo and loopne sarb loopne xchg testb insb fwait test jne scas mov insl cmp xor dec dec xor mov dec adc dec mov mov jl das out xchg mov aaa push mov ret sub adc lret (bad) lock aam icebp xlat jbe pop jge push inc push add imul inc fldl ja sub cmpsl das jmp mov cmc jecxz jp test mov shr dec hlt fstpl mov stc mov fistpll jmp std pop push dec jns mov outsl jl dec shll fs movsl cmp cmp imul fcomps dec movsl and (bad) loop mov push dec ret das fdivrl lods pop hlt cmp jg sub add push inc lock xor fs pop sub stc xchg movsl mov pop aad jmp xchg cmc lahf xor dec mov adc test (bad) cmp jne and add in mov sbb bound repnz shl pop stc cmovo xchg pop out jb jo scas and push xchg fldl call fcoml pushf adc mov cwtl jle sub xchg or mov andl fnstcw iret (bad) dec mov cmp sub mov insl fmuls fisttpll sub add dec mov xchg adc in xor or (bad) xor add div inc mov push call cmp shll adc mov inc mov cmc and mov add cli into movsb hlt lret adc jg cs lret incl xchg ds or mov lock lea mov insl xchg add jmp pop repnz fstpt fildl shlb mov pusha xor inc stc jns call sbb rorb jno add jp jae rcrl jle add jnp add lods lods mov inc scas sub xor addr16 dec mov gs xor xchg sub repnz or push (bad) or leave mov pusha call xor jmp jmp sub bt bt pusha repnz jmp jmp jmp lahf ja dec pop inc push push lods xchg adc sti (bad) negl jae xchg popa adc xchg imul mov jecxz jmp out sbb lods scas xor and add sub out mov sub jns aam rclb scas adc mov inc inc (bad) int3 insl sub xchg sbb lret data16 orl in jmp sar cs mov sbb (bad) int notb ficomp clc push das out push inc dec sar inc icebp fidivr and mov stc (bad) flds jecxz (bad) fbld and lret aaa loop dec jg cwtl movsl cli (bad) sbb jb add or shr cmc hlt (bad) decl sub push mov sub cltd jb xlat scas test (bad) repz inc dec or push and fistpll push sub imul add xchg ds jecxz sub xchg mov add jne dec faddp ret imul cwtl jbe inc loopne stos nop jo push add sbb sahf pop repnz jne push (bad) shr data16 pop add adcl (bad) repnz outsl mov mov push repz lods pop mov aaa popl cmp call pushf lock push sbb daa popa (bad) nop call data16 pushf jbe inc mov sbb sub sbbl bswap mov jge in inc in and jg xor fwait loopne,pt cmp repz sbb popa mov pop pop hlt rolb std ret ljmp out jge lods rsm or jl cltd fdivrs outsb pop inc (bad) sub pop je into loopne out push icebp push jno and push shl push dec xor push call lock sti pop inc push movsb iret inc mov cmpsl addr16 imul (bad) jl push sbb pushf shrb (bad) cli push add in and dec in mov (bad) push (bad) cmp push add jg ret sarb ljmp mov test mull adc mov sbb pop mov in test adc lds scas pop mov mov xchg cli cmp cmc test popf pushf mov sbb sbb (bad) in pop or out xchg add lods jne push popf insl (bad) jbe cmp push push pop je ds and push jmp pushf jmp pop gs jnp inc push and iret psubq test add add std push not jle and in ffreep dec dec and mov fidivr xchg sahf cwtl outsb jo out std sti jp stc sbb mov sbb mov pop loope movsb jae data16 inc lds (bad) andl dec aad test out mov loope in push das dec cmpsl insl lea mov loop popa mov hlt push (bad) inc cmpsb mov push ja push xchg add dec push int jbe test cs sub cld imul arpl add (bad) push inc into popa jmp mov dec pop data16 imul loop int mov inc test jnp cs xlat pop js inc and dec jmp mov add sbb xlat test fs jmp lea jne call jmp shld mov stc stc test pushf cmpb movb jmp lea je shld shrd add shr bswap sub lea lea shr shr dec not mov ror btr dec add pushf xor add sub mov sub mov pushf shr call mov mov call or pusha movb jmp adc or pop inc push dec add mov movsl hlt push mov pop bound pop (bad) fadds sbbb stos xor mov (bad) pop shl sbb push rcll outsb cld or xor mov and cli lods outsl (bad) loop xor aas inc jne sub xchg lods sbb xchg jae cmpsl and js loopne (bad) pop xor pop mov movsb mov cmp repnz xor sbb popa cld cmp jmp mov adc sbb sub js inc push insb and in insl jne pop pop rcrl mov and push and bound pop pop mov inc movsb mov out rcrl mov mov xchg (bad) jge xchg mov xor adc rcl in outsb xchg sti sbb xchg inc adc mov jnp test nop xor or mov iret push jnp mov dec mov add in mov test mov adc shl das rcll cwtl or jns ret daa mov or jmp dec cmp or push aam jnp lahf and int3 das stos sbb dec mov dec arpl pop mov lcall xlat push (bad) add or in mov aaa inc sub xchg cmpsl jb inc push sub mov mov ror roll lea aad xor mov sub push js les (bad) inc popa icebp sub add ret movsb mov jae rcrb and pop in imul clc cmpsl xor mov cmp ss xchg xchg xchg or shrb mov (bad) cli nop cwtl xor std jo mov push push cs jecxz pop cmp inc jecxz mov loop jp sub push daa aam pusha in jmp dec xchg xchg rcll movzbw lea push call lea jbe rcl mov btr sar cmc add clc pusha pusha adc mov xor rol sar jmp bt cmpb mov pusha jmp jno sub sbb and imul jae jne sub xchg push dec js dec xor and (bad) arpl inc sbb (bad) je pop cmp or enter nop cld sub and movsb xchg adc decb mov addr16 pushf mov mov mov cmp frstor fistl inc addl jmp jne push mov pushfw popw sar mov clc cmp cmp cmc xor cmc jmp pushl lea je stc add test cmp stc cmp pusha lea jnp jb pushf cmp pusha call push jp fbld cmpb pop sarl (bad) cmc and sarb bound (bad) adc mov add cmc xchg push icebp sub (bad) pop or lret inc mov sub insb inc jge push out cmp cmp dec icebp cmpsl cmpsl push jecxz fbstp sbb jnp pop jmp push mov nop dec (bad) cmp movsb aad xchg out nop mov sub pop cltd lea daa push das cltd and cltd mov fldenv mov mov mov in sbbl push mov movl pop adc rcr mov mov dec sti dec add dec mov adc pushf test fcoml dec push je inc mov push test add mov fs je jmp push movl call xchg jne and push mov lock inc les or mov aas outsl xchg xchg add mov std push test cwtl das mov xchg jbe or stc cmp sub xor mov xchg pop (bad) cli sub daa stos into ljmp (bad) popf mov mov jo ret cmp les or insl jle rcpps mov pop cmc lahf bound das int3 ret (bad) adc jecxz loopne clc aas enter loop mov aam incl (bad) aaa xchg adc jne enter imul rcll outsb xor dec lods daa mov push xchg sarl divb inc push sub sahf mov ds bound inc rolb dec jae jns loope sub das inc mov daa fxch sub mov ljmp ss nop (bad) pop ss xor das mov mov in aaa sahf divb imul jmp insb sbb jns insl testb (bad) jle leave mov mov inc push out test pop mov stc sbb fnstcw pop scas and xchg loopne or sub xlat ret aas jmp lods and mov inc je cmp xor jp aas inc lret aam ljmp dec cmpsb pop push sbb loop loopne mov js lea out cmpl (bad) lcall mov xchg mov rcl lea emms pushf adc push imul cmp pop arpl cmp clc fsubs dec shl sbb jne xor int int xchg out mov insl cmpsl out adc (bad) mov adc in leave je mov mov in mov imul sbb push stos adc je in cs sbb dec repnz sbb ds push mov lret out call repz dec and adc xor sub sub inc movb negb sub call jp (bad) adc mov mov xchg push dec cltd pop loop jnp sbb jns (bad) sbb int3 loopne lahf out inc xlat sbb xchg cmp dec test idiv cld cmpsb repz pop xor daa lods pop fstpl cld (bad) cmc je dec mov push push lahf push adc push inc mov or bt cmp sub sub je stc pushf cmp shr pusha pushf call cltd xor js imull pop jmp mov mov push lcall mov inc addr16 dec inc push xchg push repnz cmp pusha cs jae arpl mov mov pusha lock push lods dec icebp icebp aas inc ljmp or (bad) xor inc clc es test dec cmp xor nop sbb mov add ljmp dec cmpsl aaa cli pop gs in dec scas es daa cltd xchg cmc push movsb or and enter or xor sbb fs leave fs push lea jae inc pushf mov push pushl not call mov xor bound out aas ja (bad) aas (bad) xchg (bad) cmp cmp fild add add sub mov jo adcl inc loop repz xor aaa add stos pop clc enter mov ret repz and lret call mov jp pop jns hlt lahf orl hlt adc fcoms adcb aam flds add or xlat mov int3 mov inc fstl mov in push movsl push push call cmc and lea push (bad) mov int push fidivr mov cwtl (bad) xchg mov fnstsw xchg es jge bound mov dec imul lahf in xchg jmp pop add jg imull add (bad) fisttpll test fldl push add mov add ljmp mov push xchg bound sahf pop or add push movd mov sti and fs (bad) xlat mov out (bad) xchg add mov adc mov pop test aas mov cmpsl insb (bad) xor fbld pop dec or not dec fmul mov add in fisttpl dec jecxz enter pushf mov jne xor and (bad) jg inc push xchg (bad) sti jmp jno mov sbb lcall sub mov sbb cmp outsb lds stc xor loope cmp call fs adc call mov jbe cmp sub sti jge xor add lds addr16 jg out lea (bad) fndisi(8087 adcb stc in and dec mov adc sub jp test lods and sbbl hlt pop xchg cmp js mov push outsb in aaa xchg (bad) out int3 mov popa mov xchg ret insb inc push stos pop adc int3 and fcmove in repnz into pushf cld jl add cwtl ss cltd out fstpt jmp jnp fisub xchg out lds pop xor (bad) cmpsl pop inc and scas scas mov faddl xchg out rcr es imul inc push adc inc or in scas pop incl dec out push arpl cld xor dec (bad) mov mov in (bad) xor bt push test mov pushf pushf lea je bt sub bt call pushf call mov bsf bt add call call repz inc insb inc push sbb lahf iret inc mov aaa xor pop dec rclb nop dec dec mov push test mov or popa shrl xchg fsubs and adc imul lcall mov rcl mov insb cs xchg loope push add and jae inc scas fsubp lock xchg stos jecxz,pn push sarb cmpsb les mov pop fistpl mov xchg cmp fstps and and ret lods ds pop dec nop xchg mov cmovae mov sub sub popf data16 pop mov and inc fdivrp (bad) cmp ret insl inc push pushf addr16 dec and or sub subl popf inc xor hlt setge inc mov aam add push pushf lea fmuls shlb stc (bad) cmp jne xchg stc outsb cmp lret jmp std insb or (bad) dec jle xor aas movsl inc js jl push mov cmp jne movsl idivl in clc xchg sub push in push xchg (bad) pop lret and mov in mov mov jmp lea jne bt mov push bt add push bt cmc bt movzwl add sub mov pushf add bt pushl sub jl mov push cmp clc clc test pushl pushf lea je pushf pushf add mov stc cmp pusha pushf pushf lea jb push cmp pushf call add mov add push add adc add mov add add or push add mov add add add mov add lods push add adc add push add sbb push add push add adc sub push add push add push add adc add push add push add adc add push add push add push add add sub or lret sti sbb jmp fwait ja xor aas pop and dec cmp sbb add test mov cmp sub cmp sar lret push adc mov mov or arpl dec loope jne inc xchg cmp mov btc movzbw mov pushf pushf cmpb pusha pushf lea jne mov shrd aaa rcl xor btc aaa mov sub or mov and add mov mov stc clc test pushf test pusha lea je pushf test cmp sub pushl cmp pusha movb lea ja clc imul jmp lea jne rol sar or mov call imul pusha bt clc add mov movb lea jmp cmp call push jle lret push jno inc jae sahf xchg sbb mov xchg mov xor iret fstpl sub adc mov push ret pop decl daa ret inc (bad) adc aas dec and dec ret adc inc xchg add xor pusha into dec mov pushf mov mov jmp and xor in pushf inc pop push sti leave push xor xchg pusha lds jnp inc pop test jae loopne dec ds adc pushf inc imul inc xor stc or out imul push sbb cmp sahf push pusha lds dec dec imul push imul stc cmc sub std in (bad) fucomp adc jae ja scas mov jl and loop aam sbb movsl mov cmpsl pop push pop jne pop sub push and mov mov xchg jmp cmpl sub pop ss lock (bad) mov cs lahf mov call mov xchg inc leave cmp xabort cmc jmp jg ret jge push sti lods (bad) inc push xchg pop xchg (bad) jo aam xlat add adc jns mov sub stos inc scas mov jb mov scas inc addr16 jbe dec scas mov xchg add fisttp rcll pop pop push fs cli outsl cmpsl ja push in clc mov inc addr16 (bad) mov jo pop aam jmp stc popf sbb push fisttpll rclb sub icebp or aaa int3 loop les imul jno movsb inc aaa fimul dec mov or jle pusha mov into push leave mov repnz aam xchg sti js out das stos xor xor sbb jl jle xlat int scas (bad) jne pop lods and fsubp cmpl call adc stc jnp bt cmp jmp pushf push movw lea je jmp test inc push sbb and jo or in ljmp mov loop add adc mov (bad) mov jno xchg inc dec jo into push adc push jbe mov xor aas fidivrl div addl lret fiaddl into movsl cli mov aam nopl repnz ficomp fdivs inc dec outsl mov int3 lret jl jmp jecxz xchg std adc idiv or insb loop jnp inc mov jno (bad) jnp push (bad) mov test jmp mov in cmpsl jnp cmpsl icebp pop ret adc xchg mov cmp mov ljmp cmp adc mov mov push lret pop and mov cltd mov ret dec fdivrl xchg sbb jnp cwtl aas ficompl daa (bad) (bad) push mov lcall dec inc xchg pushf rol cmp test test xor call imul jo fs insb add pushl jmp inc pushf jmp test add pushf pusha mov lea jmp ficoml je push xchg nopl test mov and xor call or push mov int sub sbb pop mov adc mov loopne and push jno add pop mov into out pop into lds mov cltd scas loope or dec and sbb jae and or ljmp cmc add mov and mov mov xchg push push cmp mov lods std hlt fsubrp testl pop or ljmp cmpsb (bad) lcall sarb fidivr lcall aaa cmp xor jns loop ljmp pop dec mov jnp mov pusha dec and repz and inc andl js or pusha into mov lock jno stos jle inc push push lret cmpl iret cmp xchg sub into cmp lret repz mov mov sbb add add data16 or jge add mov int mov movsl mov sbb pop aaa ret and lods movsb fucomp mov in into stc fsubrl std ret push push jl loop cwtl mov stc in lods add or lcall jge adc lcall ret negb xor cmp outsl add dec mov mov fidivrl pop sub repz in jg nop lahf fwait mov popa outsl lods or mov xor stc mov es stos jo mov cmp lahf xorl dec push mov (bad) mov pop movb mov outsl inc xor jb inc sub xchg fistpl sbb add and shld ror movzbl mov movzbw mov jmp popf pop mov arpl rolb mov sub xchg sub test xchg (bad) adc mov mov push out push sbb outsl cmp and popa clc repz adc aaa ljmp imul in adc (bad) mov mov js ret jmp jge xchg pop mov outsb out xchg int3 insb (bad) or sub add addr16 and and xlat mov out push lods dec into jns mov push lods jle cmp inc adc add pop aad jno xchg mov pop xorb mov lret push inc mov inc cwtl cmp (bad) daa shrb popf mov js lods call jne mov sub adc add cmc mov movzbw shrd ror pusha mov bsf rol mov jmp popa popf mov xor (bad) jae adc mov bound dec pop lock aam add jnp xchg cmp inc pop out cmc xlat push stc dec (bad) pop into fisubl adc (bad) adc xchg jle jns in into or xor xor push outsl fiaddl lods dec pop jle lods mov mov sub jno adc sub xorl outsl ficoml inc add xchg call cld inc and pop cmp jne mov sarb repz fs pop mov push push add jge iret push lea dec mov cmpsb sub out movsl movsl dec xchg pushf jbe rclb lea fs ja call xor movb mov jmp call lea jne lahf movb pusha lahf push mov pop call jo xchg inc jno push sbb jp call mov testb (bad) into pop inc xchg out and cmp cmp cltd sbb dec jge dec les mov add dec xrelease movsb aam pop lods fsubs mov lock jg and mov mov cmp in or jg adc (bad) aad loopne cmp mov and xchg pop xor mov or insb fiaddl fwait out mov xor nop dec das pop lock inc mov rcrl xor push movsl movsl mov sbb (bad) lcall into sbb (bad) aad jp inc gs xor mov push sbb push jno push ret in notl stos arpl xchg inc pop aaa imul popa loop cli xor das shrb outsl loop cmp orl (bad) insb xor sbb fild adc jge xchg shll xchg pop mov mov scas cmpsb out gs (bad) repnz mov adc out iret cmp cld xchg in dec or pop ret ja cmpsl push fldl inc mov lahf xchg movsb xor mov mov sbb xor outsb cs nop and call lock icebp inc faddl rorb jne in mov and jge cmp pushf lea jb jmp rol mov btr mov clc sub bt stc repnz call cmp pusha cmc cmp pushl lea ja pusha push stc imul push add pushf lea jmp cmp pushf sub movb mov pushl jmp mov pushf lea jae neg lea mov xadd mov sar mov jmp test cmpb pushf call sbb out jae push cmp (bad) movsb mov cmp lcall mov or sbb imul icebp lcall loope jl pop (bad) popa in inc sub mov and mov and nop lods fnop or mov lret repnz cmpsb (bad) pop dec and cld push jge inc (bad) mov mov pop and insb push daa push adc shll mov arpl xchg mov scas push inc xor add pminub push stos and cmp dec sbb or icebp inc out sub or pop pop xor push lods daa lcall inc push ja and vpmaddwd mov sbb push mov sti fwait addr16 pop lahf arpl gs imul xchg aad das push sbb pop pusha ljmp mov sarb or out pop (bad) mov or dec movsl aas jle in jmp in ficompl xor lahf adc movsb pop test mov aam jae sbb fbld pop imul or dec call fcoml lret sub aas cmpsb mov clc nop xor popf icebp lcall mov lea je btc call jmp lea jne lea data16 (bad) mov push jmp lea ja pushf push push pusha imul mov call mov inc push mov clc mov push xchg loopne and sahf cli pop cmpsb push mov mull pop iret pop (bad) lret sub sub mov cld jb inc cmp cld xor jl or cmpsb sbb sahf dec fmull (bad) test aad dec adc xchg insl pop into sbb (bad) mov (bad) insl subl (bad) xor jle and out popa (bad) mov adc pop sub ja xchg stc stc cli icebp aam sbbb jno subl xorb sbb rolb cli lret pop xchg sbb and cmp add aad imul dec test rcl jo add adc sbb (bad) repz push fdivrp sub pop lret lahf mov fisubl repnz inc dec pusha cmc jb cmp cmc pop scas decb rclb add jb pop testb call or mov sbb jns and jg dec jmp jb add out sbb cli push xchg xchg pushf jmp (bad) and cwtd mov adc addr16 pop imul sbb mul jecxz adc pushf xchg dec dec cmp leave lea cltd pop out lock sub lcall sub xchg xor cmp pop iret ficom or clc push fdivs hlt lret cltd xor or fstl imul xorb mov insl iret (bad) and xchg dec lahf xchg push mov and add mov xor je mov adc bound ficompl in sub imul rorl mov pop adc mov scas add jl sub dec push jg xchg xchg mov sub add popf and bound sub and (bad) fisttp or mov out xor mov and ficompl mov clc popa iret sub dec inc mov jne fldenv fidivl repz (bad) mov in push fisubrl fsubr aaa xchg adc test add call xchg fisubl inc mov mov or test scas or cwtl nop cmp icebp push push inc sub sub adc mov adc les sbb test pop stos ret (bad) mov aad push sub fbstp in imul mov xchg cld mov push hlt dec sti cmp ret in pop lea jmp pop sbb xchg aad xchg sbb imul jb xchg mov rcrl pop inc loop mov ja outsb ja in push dec loope sbb jp das jecxz add ja mov dec popa mov xor jl int adc stos dec in add movsl and inc jno cmp dec jmp dec adc mov mov (bad) xor sub (bad) cmp inc push arpl idivb xor ljmp dec push sbb sbb cmp push out in repz inc nop movd sub aad pop data16 lret leave std (bad) lock lock lahf imul test cli imul loope push sub loop loop cmp adc das lret adc push in rorb jb cmc pop rorb mov mov pop fadds repnz xchg test push leave sahf jmp aam subb pop icebp push mov pusha jmp dec inc push dec inc dec xor cs insb add in jns push cmp int3 adc lock push mov stos (bad) pop ret aam pushf data16 cli clc js imulb xor jo pop aad aad pop jecxz sar out push mov inc mov dec mov scas movsl xlat cmp aam mov jb mov xor add or in call cmp and popl pop out add (bad) or pop int aam fucom add call xchg pop sub divl cmp repz push lods inc (bad) cmc push sbb cltd bound rorb rol inc icebp insb nop or xchg jae push jmp popa cld jecxz adc sub scas jp push cmp stos enter xor push cmpsb add nop movsb or push mov or mov and (bad) dec rorl mov imul sbb cwtl insl mov sub repnz (bad) rcrb cmp fdivr repnz mov sbb sub fs xchg (bad) lahf test cld jb sbb dec mov jmp jmp mov rcl push or or dec or lods xlat xchg mov add jp jae ds jb les cld xor scas out lods jns stos xchg inc jnp push sbb loop out mov rcl lret mov push incb sbb and push add in sbb mov scas (bad) out (bad) xlat cmp cmp pop dec out jnp popa (bad) lahf mov adc cmpl loop jge push ffreep ror pop fmuls adc fstpt pop sbbl test repz xchg add mulb and repz mov int3 jbe sub and scas add and sub dec jmp bound adc mov mov push pop jno add inc and or inc outsl push clc dec adc mov ja push imul sub je add pusha mov mov movb lea jmp mov bsf ror bt call bt mov pusha clc stc and stc jmp push xchg iret adc inc test cmp fbstp arpl or pop push cs loopne mov inc or push sbb cmp lret inc jmp out (bad) icebp std cmc jae fsts xchg inc std add adc loop inc lods imul orl or inc sti shr add and nop movsb ljmp mov jnp lret les add xchg xlat fmul pushf pop ret insl cltd ljmp inc popf and sbb in and int ds shrl adc jg adc or icebp pop cltd mov pop scas dec xchg arpl jo push popf xor pop test lods aas imul mov inc mov data16 inc mov test xor shr adc aas pop (bad) je ficomp jo cld sub mov xor mov xchg scas testb mov lods out sub cmp dec jb popf jae daa jp ljmp add cmp rcll xchg lea scas jno xlat xchg cmc jae xchg mov push xchg aad pop pop insl test pop jecxz inc imulb or mov outsb icebp push (bad) in stos fsubrs and popf and imul and mov inc pop std sbb add jp,pt lds pop mov push stc push xchg cmp (bad) mov add jns adc popf mov lcall or and jmp pushf push lea je call pushf lods clc stc bt call movb lahf lea call rol push shrd add btc jmp lea jae cmp bt bt cmp push lea ja push pusha jmp ljmp mov cmp add push xchg xor or jae sub stos xor cmp jnp ret or mov xor xor test sbb xor scas add nop push jae fisubrl jge cmp les in mov in sbb pminsw add shrb fwait jg dec lcall push and lock push lcall push xchg jo pop lret ret mov les xchg lret inc pop cmpl fsub imul fucomp sub and inc xchg rol pop ret sbb add je inc imul jae add fisubrl pushl imul data16 fildll movl cmp movsb pop xor dec mov sub out cmp fistp add pushf ljmp lea jbe inc test xchg cmp sub mov fidivl mov pop sbb std jno cmpsl push cltd repnz popa stos nop nop dec cmp dec jmp cmp rcll pop mov adc xchg push xchg or test push cwtl inc ficoml push dec repz mov out test jns aam pop pop lahf jecxz pop inc mov ret mov (bad) or push mov mov dec cld and cmpsl fmull lahf jo clc (bad) or inc mov mov pop inc (bad) je and xchg lcall repz jle test sbb repnz ljmp fwait (bad) jmp or arpl inc in jge push dec (bad) and cld divl insb push sub pop andl inc imull fidivr decl jp nop push xchg dec mov fsubl pop inc mov pop xor insl push pop sarb cmpsb fadd lahf mov mov nop imul inc sbb and ljmp out imul and insl dec fwait and (bad) int3 je add (bad) jge lock arpl lea inc movsb (bad) xlat xchg sbb sbb sbb sbb ja jge out cld stos bound mov xchg call arpl clc loop sbb das fildl or je jmp cmp inc mov or dec mov sub in les insl push sub pop push pushf inc fwait shll mov push int3 cmp mov add rorb out pop mulb int3 or inc scas aaa dec push (bad) sbb gs inc jl cmpsl xchg push inc xlat pop repnz sub movsl push (bad) ja lods dec (bad) aaa das mov inc pop (bad) and arpl cmpsb and jns adc jbe xorl repz push lahf insl sbb imulb out fwait xchg add and inc stos xor mov mull and pop mov lods pop sub or arpl lock cmp mov lret insb ret cmp arpl (bad) clc fwait repnz or xchg pop mov and das popf sbb (bad) inc push in nop into pop xchg stc jmp repz xchg int repz xor push xchg push mov es xor or ror mov mov dec adc (bad) (bad) das mov call xor pop adc xchg inc dec xchg xlat ss inc loope outsb js or insl insb mov movsb pop lea mov sbb or dec adc cs ds outsl add pop xor movlps and adc sbb leave test adc xchg aaa xchg dec add cwtl (bad) jmp bswap sbb inc and sbb mov test stc (bad) call fs jmp xchg pop daa mov inc push and jge mov insl sbb mov adc les das frstor stc sub ljmp push lods pop stos leave cwtl xchg xor cmp and stos pop jecxz mov and xchg in jl int (bad) mov cmp lcall adc nop add cltd add sbb pop xor ret (bad) hlt cmp pop mov cld fldt lock fisubr and xchg out jnp imul mov test mov outsb shll icebp pop mov xor mov movsb push hlt (bad) jns adcl cmp dec cmp jge and cmpsb orb inc push add push sub dec leave add inc mov and (bad) jo push fnop mov enter gs outsb pop push call sub pop mov ret push cmpsb ja fbstp push mov repz xor pop popf insb mov mov in lret jg lods shrl sub ficompl (bad) jl push sbb call imul cmp fistl loopne mov pop push mov test xor or gs out inc jae adc xchg cltd mov push jae insl mov pop xchg inc (bad) call cmc adc push (bad) cmc mov leave ds mov (bad) pusha jbe lock loopne pop mov pop lret mov lods push or or mov mov jge pop sub pop mov mov push fwait stos test add add xor pop aam mov and inc fisubl fucom adc push hlt and ss mov repz cld test dec (bad) push mov cmp mov jmpw push mov xchg push cmpsb cmpl xor pop lret mov push movw lea jne xor ror neg cmc mov bts rcr sub and not mov cmp bt jmp out jo inc add clc fldcw dec cmp add dec push jnp inc add fsub pushf popf and add ljmp mov clc jg ds push (bad) loope mov and inc add mov gs pop cmp iret sub mov nop jg and inc add loop ret dec add sub add push or push les es add add mov sub add jbe fs sub lcall or data16 in loopne nop xor sub or pop add inc add add (bad) mov jmp lcall pop pop arpl ret sub cmc adc lret sub add in push roll or add add cld imul add (bad) adc cs sub add (bad) jnp push dec dec pop pushf sub in repnz inc add add sbb fbld aas sub add loop dec jns jl jne inc add hlt sub push int (bad) sub add negb pushf cmp pusha pop sub add aad popa add lcall inc dec loope rcrb call nop xor inc add add sub pop lods lcall sub out je pushf sub jns outsb or add loopne mov mov (bad) cmpsl loope dec aaa js sub and cld lcall insb insb xor adc inc add (bad) in cmp sub sbb xor inc add add fildll cld sub pop pop sub add push inc jns mov xor inc add (bad) pop cmp xor test es add (bad) out add addr16 add jbe add pop mov add and (bad) std cmp sub add ljmp fwait sub add add sahf aad push fs in pushf ds pushf clc cmp not lea mov mov jmp lea call pushf jmp call lea jne ja dec call call add add add inc dec add add add add add add add pop int add add add inc push add add add push add add add add add or add add add dec push add (bad) add push add stos push add add add inc and push sti pusha pusha lea jmp cmc pusha clc cmp pusha call call lret sub inc push cmp adc cmp pop xor stos movsb lret dec jnp jmp rcll iret pop enter mov js in ss nop or lret call ficompl or mov and pop mov popf xchg cmp inc jl jnp out aas out movsl loopne mov sbb and dec aas push mov pop and jns rsqrtps iret pop pop std xchg push or pop sbb xchg dec or (bad) jae cmp jle jno add call or into inc cmc cwtl or dec fdivl (bad) (bad) xchg push xor cmp mov je loopne lret aaa mov movsb pop mov out adc jle std xchg mov mov cli (bad) js ret pop out sbb div divb roll xor jg mov daa shl inc int loope mov mov js jp imulb movsl cltd xor fsubrs aaa out ds ljmp cli into pusha sahf out inc lret pop lret gs adc loop stc add popa mov dec and pop loop outsb cld push inc lret mov ss pop pop ljmp loope pop bound add imul mov mov mov out lret mov (bad) jbe dec push mov jnp and mov iret jle push pushf cmp pushf cmp mov call cmp movsb and inc push xor pop or fidivl xchg sbb add dec mov mov shll add or dec sub lea pop cmpsl imul pop lods push movsl mov or cmp fisub insl mov or jecxz and iret and test std xchg ficom fidivrl push cmp cld cli je jg mov sbb mov (bad) mov out test mov mov clc mov jmp add das inc fdivrl shll clc cmp mov sbbb and push mov inc push dec std sub fnstenv es pop jp inc mov mov mov sub jmp mov jnp std scas pop cmp pop cmp xchg cs jno xor outsl adc dec pmaxsw (bad) push rcr mov lods cmp mov pusha cld in inc ret or mov pop fwait (bad) movsl xor xchg inc repz pop sub push leave and and pop sbb adc inc xor pushf xor xlat dec push dec (bad) in loope into (bad) testl add sbb and fwait xor push lock xchg jle add and adc test lret mov dec bt add test mov not xor mov test pushf pushf pushf cmp call push push pusha lods cmc cmc stc clc xor clc sub stc jmp jmp adc lea pusha jmp sub lahf inc xchg inc push sbb jge daa aas mov sub popa test mov mov cmpsb aas int mov js dec enter test mulb shlb cld inc mov pop push pop inc das inc aam mov mov xchg mov dec and insl mov xchg cmpsl shr jecxz sub add and jle mov outsb xor sti test mov cltd jne aaa mov inc push add in sbb mov lahf repnz (bad) jmp jp inc (bad) or and pop jg sbb cmc jecxz in push pop mov fabs sbb cmp cmc jne dec sub jnp push mov or lahf xchg faddp cmpsb sahf push sbb sbb inc mov mov jns sbb add pop cmp pop and dec orb icebp fisttpl rolb sbb leave push subb mov fcompl jle ret pop pop fstpl mov loopne sbb mov adc leave fbld stc xchg cmove sub fsts adc in inc push icebp mov mov adc mov jg cmp popl and cmp dec cmp into cmp mov adc jge add inc orl outsb test fidivr xchg cmpb movsb sub xchg arpl ficom fdivrl ret xchg loop in rcrl outsl imul outsl (bad) mov fs ljmp outsb cs add (bad) xor imul (bad) scas jg xor les and xchg sbbl les pop mov scas sub sub dec sti inc sbb icebp inc jg ljmp inc mov mov imul fs jmp lea ja jmp push cmp jmp add dec popa imul jb inc imul jns popa je inc js jae jae pusha add pushl call mov pushf pushl ret sub push xchg inc push or pop ret xorb nop jb inc stos push movb fcoms mov imull mov hlt inc shlb fisubr scas ss lods lods cli sbb scas inc into movsl imul outsl arpl (bad) cmp ja insl (bad) and out or aas and jl ficompl fadd scas push shrl cmpsl mov ret (bad) imul fistp out sub loop scas dec in mov stos mov sbb push push pop jp jmp add stc repnz adc xlat fs cli daa lods jno gs outsb jp push mov inc sbb aas bound jecxz or cmpsb mov add cmp inc mov dec pusha call or sub pusha jmp js adc jnp cmp cmp add into push cmpl push push and or lods push test mov pop ret (bad) inc xchg fnstsw adc push int adc xor stos test jbe mov inc in (bad) scas jle pop jg lea xor xchg fsub adc ss int3 pop mov (bad) jne jbe mov xchg xchg add adc sub notl (bad) xchg add aas imul cmp push or push sbb xchg and sub pushf pushl stc pushl popl bt pushf pushl cmp pushf jmp (bad) sbb addr16 inc push icebp cli xchg jo push int3 in mov push xchg jmp xchg sub jmp imul cmpsl pop xlat jecxz out shrb dec mov loope sbb mov call jne,pt add xchg adc pushf fucomip scas leave mov xchg pop adc xlat fcomps stc jmp ret push cltd add ja cmp xchg jmp mov or jo repz lret ja mov out push loopne or movsl sub dec pop dec push loope or dec and (bad) mov push out adc xorl or shl sub rcrb mov push call leave xor jmp cmp jmp call jmp push jmp adc mov xchg inc push insb pop out jg xchg (bad) ds or or popf dec movsb sbb xor dec (bad) push mov movl les cmpsb adc (bad) mov fdivs shrb and xor outsl pop in add inc movsl in xchg (bad) icebp movsl aam out mov lahf pop add scas jae jne mov ss mov out lahf cmpl jp bound and xor idiv add pop aam pop mov pushf mov inc sub mov mov das mov pop dec shrb inc aad fs cmp aaa xlat adc jno sub addr16 mov xchg push sub jno jecxz cmpl (bad) fsubr leave dec xchg inc push push jge movsl mov icebp xor ja cmp dec notb (bad) aam inc lahf or jo jle adc js jp and pushf fsubrs pop (bad) add js js rorl jp and popf (bad) dec pop movsb out es aad enter jo orl push mov xchg dec (bad) jmp sbb popf pusha cmp cs sub rorb imul mov push fnstcw cmp pushf jecxz inc push ficom mov xor mov ret scas fnop ror bt clc sub push lea call bt pusha cmp pushf jmp add add sub inc push outsb add sub ret lret push lahf outsl pop xor (bad) pushf mov adc jmp dec fidivl sub jmp test jne icebp push lds inc xchg lds fnstsw movsl out push adc dec jge sub sbb jae scas cmc (bad) nop xchg xor or mov je js pusha (bad) cmp push sub xor aam sbb adc rolb addr16 or mov xchg imul xchg inc push jne mov push add into add lock movsb ret fadd sub mov or test xchg push adc enter cltd leave add push or lods push or addr16 aaa aam aas add (bad) cmp adc (bad) dec movsb outsb xchg ret add pop push pop fsubrs mov lds ja mov pop xor repnz push push lods sarb cmp mov pusha into xor dec fmul out movzbl lret int nop call sbb mov movsb pop push inc dec pop inc cmp clc shlb stc xchg push rcrb and or mov call movl pusha movw movb pushl lea jmp rorb lock inc push data16 and ret mov mov outsl jg inc add scas aas mov sub lds cmp aad dec ficom fdivp in xchg sbb mov (bad) inc rol add decw rcll lret mov (bad) out and cmp or mov or and call add jmp out out daa sub subb mov push dec or shlb test std push into mov popf adc add dec adc sbb or jbe pop adc leave inc cwtl das mov sbb in push adc out jle std jg aam clc gs dec bswap (bad) mull push stc call icebp icebp test popf inc push cld jae pop push lea out xor popf lds dec loopne loop mov jg mov jnp xchg push cmp push fisubr imul pushf pop pop push (bad) in dec pop or fiadd pusha rcrl and int3 gs jmp insl cltd mov pop ss mov in (bad) (bad) (bad) into mov sarb push rcl jns std pop mov loop push mov pop cmpsb push repnz adc std pusha mov fwait or sub sub scas and rcrl (bad) sub mov decl fs je cmp stc add push cmc pusha call lea jne xadd mov movsbw sub bts add btr mov jmp inc setno xchg bsr mov cmp mov call rcr mov lea test cmp push lea jbe clc sub shld neg bswap dec mov call (bad) (bad) xchg inc sahf inc push push jne sbb cmpsb pop xor jae cmpsl push xlat dec jg sti adc or mov sub int3 dec ret jae rcrb add das jae xchg popf into xor scas inc ficom loope mov flds daa sbb insl jnp jecxz enter xor mov push dec mov mov aad cmp or sbb adc ret xlat in pop xor push mov cmp pop in in inc jne gs inc inc pop cld xchg cmpl stos shrl xor pop popf xor pop stc xor cli cmp fisub lods popa (bad) mov lea jne shl xor mov neg neg sub data16 testb cmp bt clc jmp mov inc push and iret aas fucomi in xor sub mov pushl inc (bad) jno or fstpl mov nop sbb mov cmp inc out inc ror cmpsb inc flds xchg ret in dec jo sub mul mov add push sub repnz gs pop fiadd add jns push or jnp sbb in stos jecxz mov ja cmp aad pop hlt and ficompl bound scas aad test xor mov dec inc and popf pusha jmp dec mov data16 repnz inc push ljmp xchg jbe dec lcall sbb mov sbb mov loopne mov or push aas xlat daa sti add addl mov pop out cld lds ljmp dec mov insl cmp push mov das ss jg lods sarl stc sub lods dec sbb ret fxrstor aas add pushf int3 mov cmp jle enter cmp adc in jecxz xchg aaa xor icebp adc sbb rolb in cmpsl mov cmp push jns fistpll adc xor mov gs fcoml dec insl movl call ret inc sbb lods andl cld or leave (bad) lahf loope jg pop xchg test ret adc adc test jb xor in cmp out xchg js or sub add adc jae dec add test fs sub sti adc jbe sbb cld xor lahf pop test mov sub inc enter out loop pop or popf (bad) in push mov dec jecxz ljmp rep add inc in gs nop ror mov ljmp cmp and lea jae pushf cmp pusha jmp cmp push lods and ss cmp rclb hlt push pushf xchg out mov cmp fimul dec adc outsl sahf mov daa dec out and and or (bad) mov jmp push push dec stos xchg jg jo test shl aas mov fbld dec ljmp mov stos inc cs xchg adc test jns sub out jne stc shrb nop stc add leave rcr adc sub push call subb scas mov inc jge sub les mov jo jnp sub jl les lahf sub jbe lds mov leave cmp cmp inc push faddl xchg mov cmp lods bound pop iret fisttpll or fcompl lret in mov sub or adc and std sbb lcall mov out fwait pop mov add xlat jne cltd adc push sbb cmp mov or scas push mov dec out inc mov in out sbb dec mov stos mov lret and push faddl mov mov (bad) outsb out sahf add mov xchg inc cmpsl pop mov sbb inc testb inc iret pop xchg xor dec and shr movl call test outsl fwait inc push xor mov das sub stos jmp jae push (bad) sub sub mov cli adc (bad) stc jmp mov lret push test adc out outsb fstps pushl sub int mov out sub cwtl and mov stc js clc clc push mov pushf test pushf lea je bt jmp pushf cmpb pushf mov lea jne sbb mov bt cmc call pushf bt and test pushf bt pushl add push mov lea jmp xor fidivl sub add mov test pop sbb jmp add mov pop nop fwait out js inc (bad) jne add subl pop inc popa jne fnstenv sub mov fwait mov lret jecxz stos cltd add dec sti xchg fwait mov aas mov repz loope dec fwait roll sbb stc cmp xchg loope dec sbb and fildl xchg mov fnstcw aas leave sbb lret pop js stc sbb xchg fdivrs mov push ss stc fwait dec cmpsb pop xchg mov mov (bad) xor repnz fistpll mov xchg scas mov pop pop sub cltd sti cmp fimull push mov out ljmp push cmpsb (bad) roll inc (bad) pop incb sub dec mov mov orb fcomps enter sub sbb add mov inc dec mov mov orl leave xor and adc add mov andb and ds mov pop dec add insb fwait fwait pop mov je fistpl pop cmc xchg inc pop add cmp (bad) pop fwait aas fimull mov (bad) es inc mov or mov and mov mov add sbb pop int gs sbb ret or pop cwtl pop pop jnp sbbl cmp sti lret fwait ljmp mov lret mov push cltd jbe push dec ss lret mov push cltd jg pop dec aas mov lret fadds ficompl cltd stc (bad) mov lcall mov sub xchg dec adcl xchg cltd push (bad) fisttp mov lret jp cmp jnp cmp xchg xor hlt cltd mov xor xchg (bad) stos fidivrl mov clc (bad) jns cltd mov adc (bad) pushl sbb push push (bad) xor mov js fistpl pop dec stos flds lret fwait push pop inc jp mov loop mov cmp cmp js pop xchg ficoml pop les fcomps sbb add cmp mov mov xor push pop inc mov mov jnp or cmpsb mov mov mov push rclb enter pop xor mov sbb cwtl inc mov pop shlb cmp test enter out cmpsl inc pop cli dec mov (bad) xor pop dec cmp mov mov cmp jmp xchg dec inc mov push mov sub mov cmp mov stc lahf jnp sbb jne jbe mov sbb jns cltd cmpsl (bad) cmp sti movsl jl dec sbb adc scas pop hlt lods push movsb cmpsb or cld jmp les mov je mov in jmp cmp push pop clc out mov mov bound or lods dec inc jl in mov mov inc loope data16 daa movsb popf fmul push xor and out push gs push aas mov mov insl push mov jbe jb inc (bad) or pop and pop push lret push push push sub stos iretw cmpsl and insl cltd jmp pushf add test mov pop negb jbe js aad jge push jo cmc mov cmp mov movl add mov mov push negb inc xchg sbb pop sbb push pop sub fwait jae ficom movsl mov es and or sarb push lret pop fisttp add imul lret (bad) pop ret scas leave outsb mov cli mov cmp (bad) xor in pop xlat add inc pusha or movsl imul lahf or (bad) jp fstps dec sbb icebp mov stos out stos aas pusha ret jns outsb in xchg mov fsubrs pop fstpt sub or fwait sub mov dec push xchg shrb data16 popa sbb xor and jmp cltd mov lock out or pop lock clc mov cmp in test popf add repz popf aas scas push in std mov xor mov (bad) or cmp (bad) pop out mov jp mov push mov data16 or (bad) out add jb adc cltd fs adc rolb jns data16 jbe inc test push (bad) fbld mov aas insl cld insl add xor scas cmc js jb xchg sbb test divb push outsb leave sbb mov fsubs sbb mov dec sahf mov movsb jb inc mov (bad) fmull rolb cmp pushf or outsl popl push rorb hlt stos hlt pop imul clc cmpsl pop cs or lahf or ret jg movsb je clc pop adc movsb mov aas jns xor out adc insl roll adcb cmpsb dec mov push mov push cmpsl out call xchg mov sbb cmpb jp pop fidivrl push mov inc push in dec sbb mov nop pop es adc js fisttpl inc push aad bt xor clc push pushf ror stc cmp cmp bswap cwtl bswap lea lea movsbw call jmp pusha jmp pusha rol bt pushf stc neg test stc cmp not push mov call movl mov jmp pusha pushf pusha jmp jge mov mov mov and mov cmp mov cmpl pop ja adc xchg jecxz push cld and shll xor mov movsb pop sbb ljmp notb cmp fiadd xlat dec call inc xchg jns sbb dec movsl add cmpsb push jno jmp push fwait ljmp pop nop pop and pop aam aaa mov jmp sub ja repz push xchg xchg and sub ror test xchg es pop mov cmp stc pusha loope or std (bad) inc shll push inc adc lret les push sbb nop push sbb jne dec jnp (bad) adc out cmp mov insl ret enter jo dec sub cmp in test push lret push stos addb cs adc jg jnp (bad) pusha xchg hlt insb inc jmp (bad) fs dec out (bad) lret mov mov icebp cli mov jne popa lret pop jmp jne enter add ret and rcrb xchg insb mov jmp das data16 idivl (bad) clc xchg gs arpl pop push lods inc sarl jl mov dec fimul xchg sbb mov mov inc add dec or push (bad) je loopne clc bsr push bts push add mov mov stc test call mov inc push and push lds dec mov mov mov mov push pop push outsb inc into gs movb and jg mov xor arpl or and sub jo aas jbe cmpl jmp jne push lods pop sub enter int3 ror mov pop lds rcrb adc loopne xor push das bound add mov xchg sti call insl movsb fsubrp sbbb aaa fwait mov push add xchg (bad) (bad) cld adc cli das jb push add jne repnz mov cltd push jnp pushf dec scas inc push push jge in adc outsl pop cmp mov stos jae and cwtl into mov add dec mov fcmovne repz sub mov jns loopne mov fidiv inc and (bad) jnp lock or add imul lds fisttpll icebp push mov in mov movsb mov mov push jae loopne xchg push enter addr16 or cli adc insb out aaa pop mov sub xchg cmp pop adc mov mov fisttpl jmp jae jne out cmpsb xor fucom push or test mov inc nop mov lea jne das xor bt mov shr setns xor sar add call add inc gs outsl fs gs imul add movw stc ror mov mov mov mov inc cmc stc xor lea jl ror test test cmp setle movzbl lea cwtl cwtl movzbw mov pop push jmp pushl lea ja clc jmp adc bsr add call loopne out outsl scas inc push xor bound fist lsl imul std jecxz fisub rorb jne fnstcw loopne rorb popa add ds pusha test adc mov loope push test out cli repz mov jbe call fwait add in jo aas notl xchg clc cs add push dec mov inc sub mov dec xlat mov das xchg or pop int3 cmc rorb jle test inc das xchg scas pusha mov sub scas adc insl (bad) adc pop jae fsubrs sub xor les mov pushf clc stc mov movb pushf call mov stc call xchg mov test cmc bt add pushf lea ror test movl bsr inc push mov test mov cmp mov pusha lea jbe add not shl rol sub pusha stc bswap movzbw mov lea lea rcl btr mov sub or stc add not bt shr inc mov shr add pushf movzbl mov movb pusha mov push movb call call mov lea call ss ret push das jo mov sbb push jmp test sub xor repz out popf inc xchg in and loope push or xor dec mov push inc and stos dec xchg add mov and xchg leave pop je ss dec cmpsb pop das in sbb adc arpl mov (bad) jne sbb jle,pn shlb bound outsb shrl inc pop sahf jae scas sub cltd jecxz fadds or push loope push sbb ja cwtl mov or in xchg jp sub ficomp xchg sahf add pop mov inc lock mov pushf test jmp push dec inc dec dec xor cs insb add jmp hlt xor pop and mov (bad) or adc jmp mov (bad) int fldl popf adc inc pop mov fistpll mov sbb fldl pop pop sti sub jae cmp jmp pop mov xchg inc rolb jae mov lret xor testl test cmc or fcomip push push loop test push imul xchg not out push (bad) adcl inc mov push repz pop gs push and xchg xchg repnz or ret out popf fs mull popa sbb (bad) cmc inc mov and inc pop mov aaa dec adc ficom mov mull mov inc mov push sbb pop jne jmp (bad) mov (bad) aaa sahf mov lcall aam je mov mov xchg sub jp xchg push add adc jg mov testb mov mov cmp mov icebp repz push ss call divb push xchg mov sbb js and cmp lahf insl xchg jecxz cwtl mov out fwait stos icebp adc mov enter dec fsts xchg cmp dec inc movsl xchg mov leave iret mov loopne cmpsl push xor mov push sahf push in mov push imull test sahf loope inc sahf loop ficompl iret fucomi dec aaa pop mov fnstsw push rcrl loope movsb cwtl push xchg push fcomps sub (bad) js pop (bad) shll lahf fwait and sbb out jmp jmp xchg pop pushf fidivr lcall pop pop mov sbbl insb lret pushf ljmp mov cli sti jle inc mov ss xlat sbb mov inc lahf xorl test lcall pusha adcl mov jmp adc xor (bad) lcall (bad) jl xlat cltd mov fcmovne mov (bad) (bad) fldcw push adc pop or cmp push or stos pop fistpll inc pop dec je jmp stos push pop mov sti lahf loope cmovae sub lahf xchg mov imul addr16 popf xor ds pushf insl dec popf xchg pop popf pop push jne inc sub rcr pop xor rcll xor stos sti test loope jb push dec mov mov adc pop outsb pusha pop sti out nop pop mov lock loope std pop fcomip mov mov cmp dec (bad) lahf dec (bad) repnz dec sarl push mov cmp and sbb push xor push ljmp out cltd mov xor mov inc pop dec lea repnz sti fstpl (bad) (bad) gs xchg subl xchg aam stc dec stos jne sub les push shll ds pop mov mov push mov jb jmp pop sub test fs js jnp and jbe inc jb mov ficompl push mov in inc mov jb xor sub sbb xor enter mov repz mov dec rcll fwait fwait jmp push sarl call lahf push sub movsl jnp dec outsb jb xchg mov pop pop inc xchg xor mov push xlat mov ret hlt popa inc in xchg sub shlb mov cmp xchg xor rorl dec lret repnz movsb jmp pop mov push dec in lds inc sub mov lcall (bad) xbegin nop fs xchg std or enter mov push cwtl stos cmpsl fnop ss pop jae dec sbb mov cmp push fcoms xchg pop and xchg nop stos daa clc stc mov lret mov xor cmp scas add hlt xor xchg cmc test outsl (bad) ja fwait jb or sbbl push dec ret ret aaa ja jns xchg flds popf nop push stc sahf inc inc mov rcrb ret pop mov cli lret push movsb sti ljmp inc repnz mov fwait inc loope mov jns popa (bad) aam fbld mov repz (bad) mov pop stos sti pop pusha aad mov fcoms cltd inc fcmovnu jbe mov stc pop push imul xlat sub fnstcw dec icebp push dec xor pop stos sbb mov pop mov loop test stos jb adc jg xor xchg loopne out push icebp sbb jmp (bad) fidivl cmc inc sub or lods cli sub cmp out cmc xor icebp add rdpmc popf lods xchg sub add (bad) pop rol push aas lahf jg dec in xchg jl rol rorb mov mov mov (bad) xor cmp sbb fisttpl sbb lret xor inc gs jb cmp xor sub adc or ret xor iret push sbb cmp dec leave dec mov adc stos mov imul lcall xchg mov jg and xor fistpll xor test ds mov popa mov and dec aam jl popf sbb stc cmpsl xchg (bad) dec int in push imul mov push xchg and push add jmp out add sbb ret xchg mov mov stc mov ja cmp pop xchg xchg cltd arpl jns or sbb loope mov iret outsl aas leave stos pop add push scas xlat mov fcoms sbb sub stos daa pop jne cli push pop inc data16 jmp cmc sub fdivs (bad) inc mov fwait xchg pop pop into call mov add dec mov push cli mov mov fistpl mov repz mov sti (bad) aas pop add and mov ss pop test push cli sti jbe fnsave leave (bad) fnstenv cltd scas (bad) das inc cmp stos jne leave add sbb dec (bad) out xor sub xchg xlat loopne jp dec fcmovnu inc popf push pop jg xchg cmpsb pop mov push test xchg lret enter sti sub pop mov cmp out test fadds fisttp fadds clc mov mov jns xorl xor stc ss jp fwait xchg cmp fbstp cmp fimull pop dec lahf (bad) and xchg lcall sbb (bad) fdivs adc push aam mov movsb mov push push dec lahf xor pop out push lcall push out mov inc (bad) mov mov pop mov lcall gs test lahf jmp push dec add fdiv jns fidivrl push fsubrs sti leave icebp inc inc cmp cmp mov pop mov pop lahf and sbb mov xchg sbb cmp popf mov jnp jmp mov sbb fcomp mov add fistl cmc inc ret jmp (bad) jne adc mov jp mov mov add and jns mov shrl mov pushf pop or out test mov inc push jg out xchg in ljmp xchg xlat xchg clc mov ret pmaxub jbe stc hlt mov cwtl jg adc outsl test mov and mov call push ret mov dec icebp mov xchg out dec cwtl mov cltd sub jmp mov (bad) cmpsl push movsl mov xor lret mov ret out jp jnp sbb mov and push js push xchg mov and ret imul sub pushf loope mul mov cld jge inc stos aaa ss dec stos (bad) push cmp xor stos aad daa xor stos (bad) mov mov add cwtl stos mov lcall leave inc addr16 les jp jo stc sub push in clc fwait jb div cltd nop or div sbb jp jo leave sarl mov push dec cmp popf inc (bad) sub and mov inc leave sub daa mov add (bad) fninit dec (bad) jg loop dec mov test jp push and jb and inc fstl lcall xchg ret xchg orl (bad) mov ror sti imul lret notl sbbl ss inc push mov add dec iret cmpsl inc sbb rcl daa pop cmpl icebp adc mov mov loop cltd xchg sbb (bad) and jbe sbb out nop fcmove rclb xchg mov xchg int3 xchg mov outsl add scas xchg stc cli jne ret pop xchg pop insl xlat xchg mov mov mov repz cmp add mov stc fwait jnp mov enter cwtl add inc inc fisttpl or bound sti push stc inc lcall push aad scas (bad) mov inc pop lods adcl dec mov fs xchg out mov dec mull cmp fdivr movsl xchg out test push jo xchg push fildl sti les (bad) lret btrl mov dec shr test dec xchg stos lret imull outsl pop mov jecxz (bad) divb ret mov mov loopne inc jmp mov test xor pop xchg cwtl mov push jmp imul mov or stos mov xor pop cmp jbe dec cwtl and jmp les mov jns nop inc cmp fistpl sbb ficomp lahf sbb inc lcall sbb jae popf shr jp cld dec mov mov dec inc adc xchg fidiv pop jns lret lret push dec rcrb cli stc sbb cmp sbb test xor jp mov pop jge aaa mov lahf ret lcall fildl lcall cmp stc xlat mov sahf lcall ret xor mov popf jmp push pop out lahf cmp cmp cli divl dec cltd fildll ret out mov inc enter cmp fisttp mov inc and sbb mov test cmp push fnstcw jne inc mov mov aad adc test inc insl xorb clc xor mov cltd leave sub mov fsubp aas sbb sub shrl pop jg inc fldcw inc in es mov (bad) xchg addl push pop dec cmp xlat mov cli dec data16 xlat arpl and lea xor push xchg lods adc (bad) xor add push cmp mov mov repnz xor mov or push jb lods cmp adc stos mov mov stc cli or push popa nop (bad) add fadd pop adc pop stos mov cs sbb pop adc pop rorl (bad) bound ja nop rol push js mov adc push mov fcompl push pop lahf addr16 dec repnz sti jns ret jo cmp pop iret pop mov push inc sub lret pop out pop adc sub xchg pop arpl daa fidivrl pop dec push popa aas aad fwait dec mov adc pop and mul sbb push mov xchg jg arpl sub mov ja mov or pop pop (bad) in or pop or pop add mov bound mov jmp lret jo sub mov adc cltd cmpsl or xor sti ret xchg mov mov je scas cmp cmpsb sbb fcoms mov cli xchg pop test nop xchg push iret xor lcall mov (bad) xchg mov inc cmc sbb mov push les inc orl xorl adc (bad) cltd pop add int pop add cmp adc pop inc pusha or sbb or movsl enter stc lds fistpl jae mov mov into pop stc test pop push mov ret (bad) fwait mov notl (bad) (bad) fisttpl inc call (bad) not ja or cmp mov cmp push test js fs fsubrp inc lahf cmp cmp cmp add cmp stc or cmpsl add jmp pushf mov ror cmp test pop in fdivrp mov sub mov jns lahf aaa cwtl mov adc or out jno mov or xlat or pop inc lcall arpl push cmp jns outsl jecxz stc inc sub mov jae mov mov push sahf pop pop xchg leave mov xor xor inc popf int aad pop rorl jno inc jp and xchg (bad) dec leave cmp setp (bad) pop xor dec cmp xchg cmp adc call (bad) out sbb or mov jg insl (bad) xchg imul ficomp or dec sbbb sub jg outsb roll xchg push (bad) or roll jno mov setb out ljmp push jne fildll int3 lcall rcll mov xchg aaa ds stc sti clc jbe mov dec xor pop dec mov mov inc push loop ret sti pop and or cmp sub aaa aas add sarl xchg sbbl ljmp mov adc popf jp movsb mov xor out and fcomps or and rcl out push idivb jmp pop sahf push leave repnz pop fldenv ret fsubrs dec movsb jns pop cmpl sbb es mov inc adc ja idivb sub xchg repz lret jns pop enter sbb mov aas sbb clc lret jns push sbb mov adc dec pop cmpsl sub jo jecxz data16 mov imul cmp xorl adc ret (bad) dec lret and inc jecxz bound insw and shrb or mov mov cmpsb xor imul testl mov push test jmp xor mov hlt inc leave sub cmp push jns inc dec stos xchg rcr xor xchg jo mov popf icebp repz sarl and aam sub mov pop scas mov iret inc xchg hlt sbb ljmp jg jno mov movsl iret push add sbb dec add out inc movsl jecxz jecxz xchg sub inc gs hlt je jnp mov lret scas jbe (bad) jg inc divl sbb push je lods cmpsl daa mov adc lahf push fistpl test inc and cmp adc pop (bad) cmp cwtl fistpl lcall jg lret rcll int3 inc cmp sbb lods pop (bad) (bad) mov stos mov hlt mov stos lods pop (bad) jbe fwait ret push jnp repz mov dec bound (bad) sti xchg sbb jle repz aad fistl scas jmp jecxz mov jne add cmp inc cltd pop mov scas out mov dec cmp lcall dec jp push mov inc je fwait sarl (bad) fldt dec cmp inc pop insl pop push mov pop dec lcall cli lahf inc dec push dec inc fidivl ret or jbe mov push lret mov jp and xor rorb stc (bad) dec mov fstpt xor cmp testl fsts adc imull add sub pusha pop clc adc ret mov inc ret xor pop roll inc js sarb pop inc pop lahf (bad) pop pop fwait mov mov and fwait leave fst mov dec enter dec orl sbb or xchg lcall and push lahf adc pop add mov mov xchg cltd orl (bad) dec adc add mov mov nop cwtl orb and push lahf adc pop add mov pop scas xchg lahf xchg lahf pop xchg aaa aas daa dec aad das pop pop pop ret xor mov adc xchg mov (bad) into dec push pop ss mov push push push pop inc xchg lahf dec mov mov xchg popf pop test lahf vcvtpd2ps fldt fwait add je mov movsb lods adc xchg pushf test and and int3 xor mov adc dec sti mov cmp cmpsl xchg roll xor lret xchg and mov pop test or xchg cli xchg rcr ret ret xor je mov insb pop mov jnp pop or adc mov cltd lcall fwait stos lret inc rol mov fwait cmp dec xor mov dec imul or pop mov and fisttpll fstpt fwait mov fcomps daa mov mov pop (bad) and mov pop stos and arpl stos pop test mov adc cmp jmp or dec jmp test jmp jmp mov repz sub fwait inc jmp or stos stos jmp cmpl stos mov stos jmp mov jl jmp (bad) pop add jmp dec jl sub fild xor jmp sub fcompl in jmp dec fsub mov cltd in cmp iret jmp cmp mov mov or das adc insb iret push adc mov dec in rcrl sti mov xchg (bad) hlt dec ret out leave int push mov inc jmp inc (bad) repnz rcrl sub out xchg fsts sti or mov sbb ret mov cmc xchg mov pop test std pop jno mov (bad) mov cmp mov mull mov xor loope rcl (bad) mov flds mov pop stos xor adc aas mov mov cld sub fwait ror cld mov xor leave sti push movsl test loopne push mov mov cltd pop fwait sti shll xchg lahf inc cs pop pushf mov lds xchg and xor (bad) push mov xchg jl cmp mov rcl leave cmp mov inc mov pop ror add iret lret sbb std push inc or xchg dec out enter xchg push xchg xchg mov fisubl push inc or xor stc xchg (bad) hlt fisubrl add aad mov xchg jmp cmpsb cs dec mov scas pop rclb dec cmp jne dec cwtl push aad mov fdivr inc mov je inc sub or jae aas pop dec clc test nop xchg cwtl nop out push adc aas cltd imul mov sti cmpsl xchg mov push dec mov cmp push dec jp test pop cli sub lret inc push or lcall sub divl lret lods push subl xor sub fwait inc out into pop jbe sbb mov push xchg movb sarb xor loope adc mov bound xor mov ret mov test pushf push jno sbb imul cld (bad) add mov xchg dec push sub mov cmp adc xchg or mov mov ret ficoml (bad) fmulp dec ret xchg dec adc mov stos mov inc mov xchg pop xchg dec (bad) cltd mov push lret imul sub jbe cwtl aas out jecxz jl add mov clc (bad) dec lret mov xchg xchg fldcw jmp adc cmp mov or jb sbb pop push add or (bad) xor sub rcr roll inc mov sbb clc imul fbld adc or fcomps sbb (bad) iret inc jne sti shll jmp push and jnp sub stos fwait pop adc mov iret push lret fcomps stc dec cmpsl and mov mov mov das ss cltd jo js dec jecxz fildll push mov pop fstpt or mov sbbl fsubl push push dec popf push hlt insl popf icebp fcom mov push pop mov repnz cmp lahf popl pop imul mov jb enter xchg jecxz lret inc cli lods adc mov dec mov out pop pop cmp mov das ret dec es pop push pop fistpll jle lret or mov cmp xchg sti sub mov fnstenv test dec pushw mull dec shll inc pop popf inc ljmp jne adc xchg fisttpl xor ja and movsb cmpsl sbb sub cmp xchg jle dec je fnstsw movl dec cmp or mov mov aaa rorl push mov fwait out lahf xchg arpl mov lahf lret ret jns dec daa lret mov mov pop mov jnp stos mov mov push adc ljmp add sti mov lret mov mov (bad) xor (bad) add xchg add add cmc js adc xchg out xlat inc roll inc pop (bad) (bad) dec leave sbb xor push (bad) inc pop xor mov sub in mov leave push cltd mov xchg dec out jg idivl inc lods stos subl aad fisubl push test add and mov cmp pop or lahf cmp pop jb lods js imull aaa mov das hlt dec fildll enter mov int3 sub cltd aam push outsb inc ficoml lods or loope or or xchg and push dec subl mov cltd fincstp subl je das push movsl imul in mov lods ficomp mov push andl push or mov sub sbb and xor dec pop rcll adc pusha int dec adc mul mov (bad) adc cmp cltd mov popf jne xorb push inc jbe icebp push (bad) fnstenv (bad) js xlat dec cwtl mov cli repz repz xor xor or (bad) sarl jae leave dec ficompl mov lret push and jns jmp pop mov push xchg mov mov mov pop cmpsl cmp mov cwtl xor adc inc dec push les test arpl sbb std cmc and jp pop inc and ret sbb stos cmc pop cltd adc cmp bound test push push hlt test cmp loope cmc stos aad stc negl addb int test cltd adc fistpll sub mov pusha mov adc sbb mov sbb insl ret jne dec sti mov js cwtl cltd into dec cmc lea lcall roll call dec and ror pop push sub xor and or pop clc nop mov adc adc jmp sti outsb push push imul lret xchg sub jae fildl aad fwait mov jns add sahf sub aad mov push inc ljmp jbe pop loope mov sbb enter mov pop inc enter dec jns xchg sbb lret ljmp push aaa sub out fwait xor xchg pop pop push out mov xchg clc notl ds jle mov pop neg stos rorl popf and int3 mov mov mov int3 mov std mov and aaa xchg lahf movsl push and sbb fldenv cli ret pop lahf mov xchg lods mov pusha orl inc push out repnz stos fwait lahf sti dec pop jge and hlt xchg jne push cmp pop mov aam adc cmp mov xlat mov dec xchg xor (bad) aad in xor push inc xchg mov mov mov or (bad) jecxz push dec mov pop or push mov or mov imul jne test (bad) cld aas jmp and repnz loope mov mov lret push push repz inc in mov pop fisttpll insl lcall cmp add test insl (bad) roll orb add lods mov mov ja stos movsb add cmc cs lds and pop mov xchg lock or daa mov push jb push cmp loope mov rcrl push mov inc incb dec adc sbb jle cmpsl lds in fucom sbb push jp sti lds pop pop xchg sub sarb fwait xchg loop lret xchg fisttp push ficompl push adc adc dec (bad) lcall lods xor sar ret repz ds pop or psraw fcoml jp cmp push in sub repnz jno in and icebp fwait and lea bnd outsl cmp cltd in lret inc mov jb cmp pop jnp,pn xchg (bad) sub outsb hlt pop sbb push jae daa mov sbb mov lret inc mov mov daa sbb pop adc push out test cwtl scas xor loop ret fist xor fidivl mov fld push popf push pop and hlt gs mov pusha aas adc jmp imul mov mov in jp fwait mov in pop sbb pop mov mov xchg or scas addr16 mov pusha adc das cmp pop (bad) sbb push pop test add ret jecxz jnp pop loop out cli out mov inc dec mov mov and ret inc lahf add out and mov movsl cs xchg mov or (bad) mov enter inc xchg aad and mov mov stos aas ljmp ret out (bad) jmp pop stc idiv andl sub insl push xor (bad) aas loop sarb dec mov stos dec pusha (bad) xchg jo shl cmp inc mov mov xchg xor sbbl (bad) fwait ljmp dec sbb sti xor mov lret xor je fistp pop imulb or lret sub out ficoml add popa fbstp xor bound push adc and sti or andl fisubrl push xlat jb cmc (bad) mov or stc add inc rcrb leave pop mov adc inc mov shrl jmp cltd mov int movsl dec iret lret in cli mov mov stos xchg mov lret push add gs add pop lret fistpl fidivr pop jne pushf pop jmp (bad) and (bad) out inc mov inc lcall pop xchg xor (bad) cwtl (bad) adc aaa out icebp sbb lret jg test mov scas mov dec mov adc (bad) (bad) inc or outsb cmp inc repnz (bad) jb cmc sbb xchg iret das push (bad) pop mov rcrl loope (bad) xor cmp (bad) push scas add cmp lret push ret xchg fisttp call cltd inc cmp (bad) pop inc andb (bad) pop mov jmp add mov dec inc aam pop and mov mov add adc inc fisttpl fistpll mov sub xchg test sbbl fildl pop test cmpsl inc cmp dec mov stc test pop add repz fistl aam test rol jne cmp fwait mov ret jb fisubrl jle fwait add xor cltd hlt imul imul cmp leave adc ja mov xchg (bad) sti sub hlt mov dec xchg popf jp mov enter fidivl (bad) dec stos insb bound stc push mov push in xlat dec in cmp mov scas rcr cmpsl aas inc mov mov and sbb xchg xchg into inc or sti aad adc xchg pusha stos mov inc push xor loope (bad) ljmp jns inc mov cmc pop rorl adc pop xchg ja fiadd xchg in sub repnz das and adc imul icebp or pop mov xchg test loopne int3 xchg cwtl mov xor aad test mov stos into sub aad jle fldl mov les xor movsl lahf movsl test fwait (bad) (bad) jae sahf dec dec or mov (bad) dec sub sbb ret jb aad mov inc mov sbb cmp jmp movsl fwait xchg add xchg mov mull dec adc mov stos or test dec cmp repnz frstor rolb xor cmp add loope rcll add mov xchg xor jmp mov stos cwtl cwtl fstps mov movl sbb inc pop stc imul scas push xchg ret lret jmp sub pop cmpl push stos push pop pop adc test add adcb aad ret sbb adc jns es stos add je imul cmp cmc imul cmp out jne add jne pop test jnp repnz mov push sbb pop jp xchg mov test mov test (bad) (bad) fwait or jbe scas imul lods cmp add inc mov repz mov clc mov inc mov adc mov inc add jle mov mov sarl xchg cmpsb sub iret xor hlt xchg dec mov inc and cltd mov xor (bad) xor aam inc pop (bad) bnd or sbb and add icebp mov add imul jmp into push popa scas xlat shll movsl cmp sbb mov inc mov jg rcrl sub enter rclb mov leave cmp outsl pop inc iret adc lea inc pop jb pushf test stc pop pop inc sub ret inc repnz inc fcompl push push stos inc jmp inc mov scas fwait inc or mov cmp xor mov xor mov (bad) cwtl inc mov ljmp cmp repnz in repz mov test rorl mov sub mov mov ret xchg (bad) or enter test scas stos aad sti adc leave mov push xchg xchg xchg or lea or inc lds xor addr16 push inc les or and adc stc or dec push add les mov fcoms inc mov add fmuls add sub sub lds (bad) insl adc adc andl aaa cmp mov dec mov pop or add or mov hlt fcomp (bad) cmpsl (bad) xor pushl xchg mov push fisubrl push fwait xchg out (bad) and int je push jbe mov jnp push push (bad) mov mov adc xchg sub (bad) add enter pop pop jle or sbb xchg xor mov sbb call (bad) mov stos push cltd inc jns jb push insb pushf fdivrl xchg daa (bad) mov out test and dec aam inc rcrl xchg sbb add mov and leave lods mov xchg inc repnz dec xchg mov lret add iret sti fistl jecxz dec imul jecxz pop sarb test outsb mov enter cmp or imul sub adc (bad) pop es insl mov inc cld sbb mov jne lods rcrl pop das repnz push pop cmp xchg dec jb and cmc imul dec jge lret movsb mov popf test cmpl xor mov add add jmp push xchg or mov (bad) jno xor cltd fdivrs mov adc mov cmpsl and test add repz push dec jb adc icebp push out or push jg aad test adc adc incl mov orl jbe push (bad) jle push cmp out adc stc jb sbb rorb push ret jmp inc adc mov dec or ljmp sti mov dec ja mov pop fistl fcmovb (bad) xchg inc jb loop pop (bad) mov popf push cs lret lea jg xchg in mov (bad) movsl inc sti and cld and aas fcoml lcall mov sbb inc fildl aam repnz adc adc jno shrb repz repnz fstpl popf inc mov int3 fwait jmp insl pop xor mov sbbl mov mov inc ret xchg dec push mov mov test sahf xchg lods decb push dec sub xor xchg repz call jnp jmp mov mov inc sub sub xchg jno sbb pop cli addl fildl add and jno mov inc mov movsl jae sub dec sub roll addr16 int push jnp cwtl (bad) dec orl xchg pop stc push mov and lock out or sub pop popf fwait int3 push xchg push sbb (bad) or fsub ss imul pusha fwait inc push addl mov popa jns inc mov enter in and push js xchg int dec inc (bad) pop adc fstpt repnz scas jmp and hlt jmp xchg mov inc mov mov sbb iret sbb mov fild daa int add xchg xor hlt pop push dec dec pusha cs in xchg or adc sub xor imul xor sbb cmpl mov mov fsts jae mov pusha aam pushf add mov leave jbe mov js add adc fmull mov inc push inc enter stos mov jecxz add cmc cmpsb je cs dec dec leave and xchg push xrelease mov xor push push fwait add fwait pop stos aaa lods loop fbld push popf xor xor inc test sbb leave pusha pop mov loope repz add leave movsl sbb lret sbb fsubr inc xchg add (bad) jbe pop adc mov call push inc mull das xchg fidivrl addr16 mov and aam cmp push mov fwait jp mov push adc icebp cmpsl lds mov xchg push test dec add cmp (bad) fstpl sub pop test sub or push fildll lcall out inc xchg sbb adc pop mov subl out test js mov pop push dec pusha push jecxz call popf jnp push out or fsubrl ss sarl (bad) adc (bad) push jmp jecxz stos lret fs dec or jl rorb xor mov push test int xchg cmp fstps repnz ds sti sbb sbb pop adc out std fidivr xchg fcoms xchg sub push dec mov pop xchg dec push or mov pop cwtl cli iret mov xchg dec pushl std or fst mov and (bad) jge sbb sti test jne int3 xor xchg pop mov faddp imul cs adc push nop aad inc dec xchg inc add jmp insl xor (bad) ljmp (bad) and pop mov xor mov mov fwait (bad) (bad) mov cmpsl pop xor icebp je lret mov pop mov ret mov xor dec mov dec mov push xchg lret mov adc mov lret dec adc (bad) test pop (bad) pop mov mov leave lret jo out ret aam call add hlt xchg adc mul cmp inc add lret adc pop inc mov vmptrld jnp iret mov lret cmp xchg mov insl push jecxz test pushf (bad) mov and ret clc imul inc stos popa test xor pushf pop mov test xchg sub cltd jecxz insb dec or pushf adc inc insl repz cmpl pop fiadd stos dec mov les nop push cmp cmp scas lahf sub int3 mov and sub (bad) (bad) leave (bad) mov mov cmpsl adc cmpsl push mov (bad) fwait dec jmp and adc xor stos decl andl lods lods adc je mov fwait (bad) jp jle or jmp jle imul pop cmpsl iret mov cmpsl test xor mov (bad) mov js adc or jno enter ret and loope test fnstenv mov sbb scas rcl pusha lret scas inc adc mov push imul orl fwait dec xchg mov lahf jae mov repz enter mov popf nop adc andl (bad) js cmp daa aas icebp stc insb lcall (bad) mov push adc jmp adc mov jecxz and ffreep loopne adcl sbb inc adc dec xchg push icebp lods imul push rcll mov jae sbb adc rorl daa jb add jns fwait scas repz mov cmc cmp jbe mov cmp add mov stos inc in int3 movsl sbb sti pop in aam subl mov jae (bad) imulb in aad mov push jb cmp dec jae xchg imul jb mov (bad) inc lahf std pushf mov addr16 inc pusha cmp mov push (bad) xor subl mov outsl inc jmp movsl dec and sub jae stos push ret stos cmp (bad) cmc inc sub mov pop movaps stc mov dec in pop orl sbb xchg iret jl lods and (bad) fdivrs mov xlat pop test xor dec rep in jg dec je mov aas icebp cmp jp lahf dec mov jne xor mov sbb pop xor or inc xchg xchg jo adc jns pop mov xor enter pop xor dec (bad) inc test add add adc add mov jnp test adc dec popf fisttpll add imulb dec pop sahf cld fisttp sbb aas sti dec (bad) in insb pop test add and repnz dec xchg adc add dec cmp and lret adc push dec ret xor movsl xchg mov lret lret jl (bad) push pop inc jle,pt mov push (bad) jge mov testb jp roll mov mov adc inc lock fpatan (bad) and xchg mov fsubl push lret and (bad) jnp xchg lods cmc dec jae xor ljmp rorl cmc mov lret sbb outsl clc cmp dec xchg sbb fisttpl shrl xchg push test fsubl sahf adc adc mov hlt adc sbb fmull mov movsb loope push sub xchg cmc mov fwait xchg sahf adc sahf mov leave pop and imul inc jecxz dec mov lahf loope (bad) xor lret popa mov data16 mov pop leave stos dec cmp std lea mov sahf dec cltd lahf sub sar clc lahf mov notl stos lret fstps mov xor (bad) xor mov sub (bad) loop sbb sbb mov dec mov jb cmp adc inc in out push cli ja movl dec adcl lods stos sub mov dec push jp,pn jbe mov sar and or dec adc and xchg jno mov enter adc mov dec jnp inc lret jns arpl data16 adc loope lods cmpsb bound mov sub sbb (bad) cld lahf mov ficomp dec add (bad) mov cmp pusha sti enter xlat popa pushf mov sbb lcall and sub sbb fstpt lea mov cmc mov cli pop inc jle mov pop mov or mov adc arpl cmpsb test stc push jnp (bad) pop dec sub mov mov jae dec (bad) inc inc push inc xchg mov xor mov or (bad) xor inc mov cmp cs testl xor movsl data16 enter fisub (bad) xchg inc outsl cmp icebp jae inc add sbb xor (bad) in imul pop stc or xor mov cmp mov push ss imul fdivs rol scas pop cmp stc pop xor and movsb adc mov or mov dec xlat mov xchg clc (bad) pop xchg mov fs xor bound ret sub pop cs xor mov es daa xchg rorl loope jo aas imul mov hlt pop inc fnstsw jne aaa hlt aam mov pop mov cmp mov leave cmp add mov push pop xchg fwait fwait in adc (bad) mov lahf loop xor cli and jmp fs jno sub push dec pusha push mov and add inc jmp jp imul adc dec cmp clc jmp cld mov or push cs mov pushf and out pop ss mov mov lcall lcall pop icebp mov mov push (bad) or imul enter pop roll xchg mov xchg and negb aaa popa fcmovnu loope xor (bad) out cmpl push mov sarl inc add xchg sbb inc mov jmp cwtl movsl call lcall mov add xor sarl xor rolb sub das jmp and sub inc xchg xchg mov and mov fwait rcrl fisttpl pushf push push jmp bound (bad) xor dec xchg jae push mov mov push mov pop jmp sti into add dec jge fimull sti sub xor aaa and adc and inc cmp pop jbe push dec inc adcl in adc sbb add ds jl ror shrb sub cmp add mov lock jmp adc and cwtl xchg push mov je rcrb fistp cmc jp cmc or cmp sub mov pop sbb loopne ds mov sub (bad) aaa in test fstps (bad) movsb mov jb movsl sbb push push inc aad jg jg mov adc (bad) mov stos mov push in jle add and cwtl push pop int3 pop popf out add loope pop dec push addr16 push xorb inc int int3 pop sbb (bad) mov inc fnstcw jnp loope leave lea dec cs ljmp xor in movsl inc adc push and (bad) mov pop (bad) fcmovnbe addr16 dec leave xor fnop add addr16 sub mov enter pushf (bad) pop pop inc jl mov cmp add push xor enter mov mov clc jae stos ret lcall or sub xchg lcall insb and imul lcall lret leave push mov or mull mov fcmovb xchg mov and jl aad pop xchg inc sbb pop (bad) mov xor and xor daa sbb fisttpll mov cmpsb in sub popf fxch (bad) jl mov movsl lahf mov cmp out repz test pop popf mov pushl aad push dec xor fwait push or sub jmp (bad) ds aad test dec fimull sub fucomp repnz pop sbb push jg xor fdivs popf shr dec sbb in inc jp jbe repnz sbb jmp push cltd jne xor sub pushf popf pop xor imul pop js xor push repz popf bnd test lds mov cmc cmc out cmpsb iret and test inc leave mov pop cmc push jno pop pop test adc insb sub mov pop jmp mov jnp cltd mov sub jb ljmp xor mov cltd mov dec cmp mov lock inc cmp and ficompl imul xor mov jle adc test inc sbb call stc fldt inc dec adc add lds pop fwait mov cli xchg repnz lahf sbb nop imul add popa mov adc inc imul mull adc (bad) mov lea and push loope mov xor aas aaa (bad) je and sub das cmpsl loope xchg inc fadd enter xchg fdivrs sbb sarb lcall loope bound (bad) je jno add mov mov and enter mov mov adc popl in fld or cmc adc cmp push fisttp sub or adc dec cmp nop fcoml cmp and ret pop dec mov xor aas dec mov jns inc lcall insb inc cmp sbb mov xchg mov mov sbb cmpsb sbb (bad) jnp divl push mov aas pop lea push mov (bad) adc mov aam pop push lods mov jp stc mov data16 push cmpsb fwait shll mov ret lahf sbb bswap sbb and sub and xor mov bswap outsb cmpl add shrl lahf sbb lods movsl fidivr mov dec and arpl xor and lea inc xchg sbb sub push scas sbb sub adc les sub mov dec and sbb fadd jno dec in pop sbb imul mov mov xchg mov cwtl add mov mov test jmp adc adc mov xchg jo xor adc inc enter adc sbb mov hlt stc xor xor inc xor cmp inc clc movsl pop xchg bnd lods inc or dec jb fcoml adcl push lcall mov cmp sbb push mov imul mull mov add int3 fsubr (bad) lret xchg lock push test in test sbb xchg inc push jecxz push cmpl dec mov leave iret mov insl lods les push imul int3 scas pushf loopne xchg cmp popa and roll jo rclb jae xlat jbe dec cmp cld cmc pop add out (bad) adc jp icebp sbbl sti aas push shrb add sahf pop pop icebp jns jg jae fiadd pop jne mov roll pop mov lock pop xor adc bound repz mov inc and xchg and fnstsw cmpsl mov push mov pop cmp adcl xchg inc dec nop mov xchg fisubl mov and jae ficoml or or icebp pop mov add dec sti pop pop scas sub les lret and pop xchg cltd cwtl sub das fs dec dec dec out inc xchg mull jno popa mov loop jmp outsl sub dec adc dec push cltd push inc sbb pop push enter bound xor push lods roll movsb test pushf xchg aas andl arpl mov xor imul daa pop jl xchg xchg mov push sbb dec out out push int ret cmp mov aad xorl fisttpll test ja dec out mov lods popa fcomip ds fsts jmp add mov jp andl adc mov xchg lret mov outsb notl xlat stc ret xchg divl aam mov xor mov je jnp mov aam adc jmp leave cmp pop xorl cltd mov sti enter lret mov cli pop out ret js iret enter lcall jnp fldt mov sbb repnz scas add fiaddl add cmpl cltd mov clc push mov (bad) push in test jno test out and xor jp mov ss jbe into addl adc xchg dec aam adc or cltd jg jnp mov cmp mov sti popa dec mov popa mov cli pop jecxz cmpl fwait push es call enter js repz inc add mov negl pop stc and stc mov push xchg insl pop popf jecxz jns dec and mov sahf xor inc les shlb adc or cwtl arpl cmp jp leave adc (bad) lret dec je mov add dec rclb adc sbb mov in pop inc add xchg and pop pop mov (bad) and adc xor cmp pop sbbl mov xchg mov cmpsl ljmp jp ja push test repz adc fimul mov pop cmp daa stos inc lods mov mov dec dec lock test push gs and and xchg shrl sub cmp xchg lret dec xor pop cmp cmpsl cmp jle xchg lods jg jo pop test pusha mov lea adc mov pusha push out push arpl mov add pushf xchg jmp test xchg bnd mov mov lret stos push pop rcr fstps icebp add cmc mov push cmp hlt dec lret mov test mov push push lahf sbb mov inc or and icebp popf (bad) mov sub mull xor sbb sub ficompl mov lret lods (bad) xchg cltd jmp pop imul push scas mov fnstenv ret (bad) icebp add test andl adc mov test sub mov imul mov dec enter pop cltd push (bad) and rcr jb fldcw leave fwait pop pop aad ficompl mov fmuls xor inc insl sti pusha fwait ds and push xor mov inc xor hlt sbb jno xlat adc pop mov fidivrl push pushf insl and sti push mov ljmp rcrb aam xor adc mov cs pop icebp adc incl rcll lea flds pushf aas jmp adc fldt test jmp or mov daa mov scas mov push clc lret sub cmp mov mov cmpsl stos movsl repnz dec pop imul bound mov sbbl adc (bad) adc dec mov fsub mov fcompl adc xchg cltd lahf aad jle lahf inc pop mov mov dec adc sbb and xchg rorl rorl xchg bound insb or xchg rorl addr16 sbb cli adc adc aam lea pop fildll push and lret sbb add fidivrl jecxz mov inc and in sub int3 cltd xchg stc aas call cmc xchg jmp pop and xchg cs sub or rclb mov shrl cmp xorb jecxz inc ja cmp (bad) cmp mov dec mov (bad) xor stc or aad lahf xchg ret (bad) cltd jmp fildl adc inc adc sub hlt add std and fdivs mov add lds add (bad) dec aaa mov (bad) xchg leave and ret push or adc sub adc xchg lahf popa push add iret lds ss xchg jb icebp imul pop xchg pop cli shl xchg jbe pusha inc dec xor mov jecxz je in cltd mov dec lods cmp mov push xchg (bad) stos bound cmc (bad) pop inc sti and sub lds xchg out inc sbb cmp mov add sbb fcoml inc jb cli add xor mov ds (bad) mov mov or mov cmp repz hlt andl pop xlat test imul jae xchg leave xor mov mov and popa pop lret push sub insl and pop les or cwtl jb iret test into adc pop add push add loope xor xchg mov mov popa das dec dec bound inc push xor sbb pop inc dec dec enter sbbl fisubrl add jg fisubl mov jl fs xchg addl hlt insl mov and xchg lds mov sub adc fcomps add ds in les cltd xor push out inc outsb cmp xlat xchg cmpsl js inc out hlt and rcrb sbb add sbb int or shlb popa mov mov sahf push cwtl dec out leave mov sbb flds test lret mov loopne adc fild cli fwait (bad) sti jecxz dec js adc dec in fwait jno xchg cmpsb fisttpl adc pop and jmp cmp sbb aad test sub bound test mov lea sti rorb xchg mov adc sub mov fist scas mov popa adc push sub jns xchg xchg xchg sbb loope pop in mov sbb movsl adc out mov lret adc add or sub dec jb xor push ficomp enter pop adc sub into xchg mov xchg fwait (bad) and cmp mov shr mov push add mov or mov adcl and out push bound inc iret pop lods dec pop adc mov repnz sub dec and inc pop call fidivl mov mov inc pop mov push (bad) cltd mov outsb inc or and popa (bad) std push mov and pop add cmp sbbl mov cmp sub add adc cmp imul cmpsl sbb xchg (bad) lahf xchg mov pushf aam lret (bad) ror mov dec inc mov sbb xor cmp das jno imul sub pop hlt test test and cmc xor xchg pop pushf outsb push sbb mov imull inc and xor pop inc cmp lds ljmp fwait sahf pop mov sbb (bad) and ljmp push xchg push sbb push (bad) xchg mov les cmp es add int (bad) shll add repz enter shll iret lods leave aas cmc xchg push xor addl mov cmp lods push pushf and and out inc xchg dec mov inc and movsb repnz push mov sub enter js adc movsl pop test or inc sub pushf mov and dec lods cmc scas adc fwait push xchg and cwtl adcl les push cmp mov dec mov lahf jno and add xchg inc jb inc cmpsl xchg adc sbb mov sti push lds sbb push xchg scas scas pushf out les divb sbb mov jb lea imul sbb andl imul movsl fstpl ret mov cmc jecxz sub stos mov fbld sub cltd aam mov imul mov test mov jne mov (bad) xor or fadds xchg jecxz and push add mov scas xchg mov repz and inc mov push ret std (bad) xor mov mov popf xor mov jl mov xor (bad) stc jecxz xor scas or lods stos xor mulb xchg stos rorl mov (bad) mov xchg stos mov fwait pop sbb mov (bad) andl jb xor loop leave inc add lea pushf lock mov fnop shr dec lock mov mov sti lods xchg mov pop lret fsts and inc sub or decb sbb xchg xor and push loop lcall fcmovnb push das les insb ss stos sub movsb jp sbb cmc test xor sti sbb sti fwait daa pop (bad) shrl mov daa mov jmp mov mov rolb fiadd mov inc xor inc mov xor dec or xor fistpl inc mov lea mov pushf loop mov dec sbb dec mov cmpl jp pop add dec flds sbb pop mov add mov ret pop repz mov lds mov push popf mov jge cmp bound push push jno sbb dec pop xchg push bound pusha cmp int push inc lret repz xchg jae dec repz iret xchg fiaddl bound cmp inc adc mov push and sbb jae cmp popf jge fmul clc jmp (bad) jno sub cmp testl adc push sub mov insl pushf jge dec les mov lret add inc mov (bad) rcl pop stos and lret adc cmc lret mov insl repz movsb icebp bound jg iret mov sub mov cmpsb mov or out cltd les cmp popa out jnp lret cli mov mov push stos mov ret mov lret mov push and arpl xor lret xchg into stos bound mov ret mov mov pop or imul cmp jno mov mov lret sti inc loope jge push xor and xor mov inc mov inc jmp fdivrs push stos and fwait and bound test and scas inc arpl lahf mov sbb stc lahf jg dec mov out fwait sbb fwait aam push (bad) lods mov inc mov out cmp arpl mov mov clc imul fwait jmp cmp sbb (bad) out cmpsb push push icebp iret mov or or cwtl sbb sub roll cmp out (bad) fwait hlt inc ficompl icebp or mov (bad) icebp jge and mov arpl pop fistpll incl mov repz and popa dec sub mov mov andb jmp mov pushf xchg (bad) incl aad mov bound push mov fwait sub outsl mov jp dec or ljmp lret mov push pop xchg (bad) inc sti iret add ret dec mov cmp jnp jne sub inc (bad) in dec fistpll jae fstl inc les sbb dec xchg and call jne fimull mov divl xchg aas loop pop dec mov mov xor jmp or gs fisttpl lahf cli test mov (bad) stos popa dec ret ret movsl mov inc pop test cltd hlt mov cmp mov and push notb testb aaa jo cmp xlat stos xchg testl push mov xor insb fistl inc xchg test repnz dec cmp jl je fs adc xchg pusha pusha fnstsw push pop test out ja test rcl mov jmp pop fldt add adc xchg inc adc sarb lahf repz ljmp xor pushf adc push inc fsub es cltd and and dec sbb andl sbb inc repnz movl ds movsl sub lret dec cmpb dec pop mov xorl test sbb dec push pusha (bad) jnp aad test testl adc cltd mov inc push mov imul pop mov sub adc hlt and add and rorl push pop fs stc xchg incl adc enter xchg pop mov jb xor mov dec (bad) dec mov out mov mov sahf cmpsb inc sub mov (bad) push add sbb sub cmp dec xchg test inc lret dec cmp loop sbb fxch add loope inc loope dec xchg dec jno push inc mov xchg test insl fildl mov pop (bad) loop pushf mov jmp mov jae jle int3 push mov rorl mov fs lea (bad) sbb cli cmp mov das out mov (bad) dec aas xchg inc jecxz mov add gs leave aad mov decb and data16 inc out push int3 mov ficom mov ret pop xor pop pop inc es pop aam stos mov push xchg add push push popf pop dec push ficompl pop mov and pop aad cli movsl pusha int lcall imul lcall inc stos sub mov or sbb xor pop pop push (bad) mov js mov mov inc pop adc into jnp lret xor lods push push ja mov ret fwait out dec outsl (bad) scas dec xchg cmc push dec or (bad) in push out adc xor je fcomps mov ss add add mov or cmp inc fisubl adc divl sbb or rolb sti xchg (bad) pop imul or xchg cmp adc fucomi inc cltd mov or pop sbb lret inc jb enter rcrb pop xor push push or and push mov jge jp loope xor sbb xor cmp mov leave (bad) stos dec mov sbb pop sbb pop scas inc (bad) adc lea mov jno xchg cmp cld cmp cmp test lea fidivl (bad) push push xchg (bad) (bad) adc fwait ds jle pop test daa adc xchg out scas inc addr16 lahf cmpsl mov mov lahf jg dec cmpsl aam sbb xchg fsubs (bad) lret lret aam in lret push (bad) out mov jecxz pop jmp outsb andl out lds push xor (bad) mov fcmovnbe jmp push or dec pusha jno test xchg adc in fisttpl xchg mov or repnz mov aad sbb inc jg vpshad cmp mov push push sbb outsb out push stc cmc lcall or stc cmp cmpl cltd inc lds enter cld pop fcmovnb adc mov sbb ficom mov jmp jl pop xor stos mov mov das jb jnp sti ja out inc push mov daa mov (bad) lods aam insb ret and cwtl aam daa dec pusha repz xor fwait mov cs fstps add (bad) not mov hlt bound xchg addl sbb into dec lcall aaa stos in test add out fdivrs fs shr mov xor gs jbe gs dec fistl loop test cmpsl add lret xchg cmpl mov sti outsb sbb sti dec push out pop mov cmp mov sub sahf xchg inc jae call mov aam pop rclb or pop adc pusha jg cmp ss sub or xchg add mov popf pop dec inc add and enter cwtl fwait repz xor les (bad) repz ret shll (bad) stos scas adc mov and lret cwtl stos and int xchg xchg das adc mov das ret imul or cltd fwait mov mov xor pop mov mov pushf add cmc sub test cmpsl insb icebp mov insb pop mov leave fld inc cwtl fs mov popf pop fwait mov ficoml xor cmp scas iret jb add nop add mov out int jns daa xchg repz mov mov mov mov cmovb ret cmp inc pop icebp pushf push fabs dec ss xchg inc and mov fnstsw push lds dec jns test push les xchg movl jnp sbb xchg and (bad) sub lret add pusha test lds adc ja aaa faddl aam pop outsb jb imul mov leave cwtl es adc pop xchg pop mov mov rcll mov pop fwait cmpsl jbe ss repnz or xchg xchg sbb pop push add xor scas mov xchg mov add nop enter movsb repz push cltd sbb dec mov lds sti repnz xor and (bad) pop push lods mov mov sub into leave mov fistp lea dec cmp pop enter mov and mov repnz out jnp clc mov repz pop sub lods cmp sti inc dec mov push lahf add (bad) (bad) mov push jp adc mov push in fisubrl fidivrl adc sbb xor push cs cwtl mov inc and pop sub jae sub pop cmp mov addr16 stos fwait jb hlt int mov add xchg gs cld inc dec adc out jae int3 into cmpsl push xchg shll xchg test movsl mov jg xchg and xchg lcall jo adc leave mov mov dec test jmp pop push xchg mov cmp aad push stc sub xor popl sti sub push cld mov inc stos mov lret pop dec mov cmpsl xchg js sahf cs ljmp push adc xor pop aaa ds dec push and or rcr adc pop in jle mov push pop stos lea xor cli sbb jno cmp out lret add xchg xchg sub sti pop in cmp lret (bad) aad xchg add in (bad) cmpsb (bad) mov mov lods sti xchg stos jne pop or add and inc sbb out xor (bad) cmp sbb xchg pop shll dec sub lods jle jns clc adc imul sti and pop push add fwait imul cmp xchg xor pusha cli cmp pop dec and aas (bad) jae and cld xchg fwait cmp (bad) pop pop push mov popf cmp fild mov inc (bad) push popa cmpsb bnd xchg xor roll loop lock popl dec hlt stc xor loop sbbl bound mov push xchg test pusha mov jbe xchg dec xchg mov push fs iret test std sbb out mov mull repz xchg xlat xor mov pop (bad) sar sbb mov pop mov xor mov inc lret xchg sub sub inc adc jbe outsb data16 icebp push dec clc push aad pop loop sbbl pop ret orl scas mov mov dec hlt pop mov daa les pop inc cmp xchg sbb add adc stos mov daa ret rorb sub pop ret xchg sahf ret rcll push stc cmp adc add rcrb into mov mov jbe (bad) mov daa push outsl and pop push shrb sub mov ret lahf dec insl sbbl cwtl sti xchg add and sub dec int3 jg pop and mov je stos idivb pop push sti (bad) jo and ss push stos mov xchg rcrb cmp inc lea mov in jmp push mov ljmp repnz clc cmp je mov adc outsl lcall fmuls insb jg sub adc cmp stos aam mov inc xchg fcomip xchg jbe mov xchg mov repz dec aas movntq repnz rcr std cmp pop jle (bad) and sub mov je icebp mov and imul push mov mov pop mov rcl pop fcomps pop sti ds lret dec testl add cmp mov xchg out stos cltd inc mov cmpsl sarb popf jb dec and pop or inc lahf daa in ret mov push inc mov in imul sar add out push jp js fbld daa mov stos bound mov xchg in jns cli push jbe xlat jb rcll je pop es sbb lahf sub js xchg js cmc js aam mov cmpsl out popf push cld cmp sub fwait jmp cltd push mov stos lea mov mov adc xchg lret adc jae dec dec imull cli pop pop sbb xchg dec jb pop add sub lds in lock mov test xor pushf push push adc dec xchg (bad) cmp (bad) stos inc xchg add jecxz loop in rol shrl cmp or clc inc sbb cmpsl and or clc and fldt out mov fcoml sti pop adc lahf (bad) mov jp and jo cmp sbb dec dec jp pop (bad) fmuls xor lret cmp pop dec fucomip xchg fwait sbb lahf rcr sub sbb stos lahf sbb imul incl out or flds inc push xchg lds mov dec mul aad mov fcom inc out mov adc fwait out dec add cmp xchg clc repnz xlat ret add imul push pop cmp stc lret cmpsb (bad) mov mov pop push movsl test stos adc pushf sub shrb fiaddl fldcw loope jg (bad) push inc and and call pop mov mov fs pop mov pop test and (bad) pushf cmc push adcl dec (bad) push cmp dec inc imul cmp shrl xchg xor mov out test xchg jmp inc xchg rclb pop nop cmp inc xor sti mov (bad) lahf xchg and add jg js rclb jb cltd lock cmp dec sbb insl fs mov and mov and adc mov inc test adc fcom sbb daa mov mov outsl nop jmp sti cmpb mov test dec pop call and push pop mov fwait mov (bad) mov pop mov imul notl xchg fs aad mov sti test jne add mov mov mov pop call ret imull push push jnp aaa adc sub mov sub dec cmpl mov xchg orb xchg cmp jno xor xchg lcall popa stos lcall cmpsl push inc movsl popa bound sub loop leave lods and inc lahf push stc (bad) out pop lahf pop fdiv adc test and or cmp xchg mov testl xchg lret fdivp mov lret xchg cmp (bad) icebp mov lret jnp lcall (bad) pop mov inc mov sahf lock roll xor cmp inc pop leave jle pop pushf sbb scas inc fcmovnu pop jb inc repz aad gs sbb xor inc js ret mov call inc xchg sbb inc dec lahf xchg pop jp xchg mov add lret (bad) pop inc mov add ficompl fstpt sbbl cmpsl cmp movsl inc push and pop sbbl sub repz pop dec inc mov pop testl xor lcall sub or xchg fldt add pop fistpll and rcll inc mov stos sub cmpb (bad) dec rep and out int3 ja jge pop (bad) gs stos push jmp loop sub pop leave fnstcw movsl pop fidivrl hlt xchg add btr jmp int3 repnz test sahf bound dec xor pop add push adc dec xor inc inc ficompl push subl divl repnz xor push mov mov pop mov cmp mov shrb inc (bad) rcrb (bad) fidivrl xor loop and sub push repnz mov inc mov or movsl daa repnz inc jns and nop inc pop (bad) pop rcll jmp cld fisubr push insb mov cmpb loop mov repz lret sbb fwait add dec repz jle cwtl mov iret jno xchg push int jp dec or cmp pop popa push repz pop cltd sub stos jne sbb ja int movsb fbld push js mov and cmp sub xchg (bad) idivl jo stc (bad) int3 and mov xchg dec ret and sti ljmp bnd cmp sub mov int3 hlt or (bad) and cmp mov xchg pop int mov cmp (bad) mov lahf mov xor fisubrl mov dec add std sahf repnz mov dec fild out outsb sbb xchg fwait cltd (bad) cmpsb dec les xor mov dec push or adc jecxz sti cltd es jnp sub ficomp fwait mov mov push sub xchg aam iret in mul test jae in xchg or pop in stos out push sti xor push fcomi push out inc mov lcall repnz pop lahf fistpl and xor cltd cmp add jnp clc adc js cltd iret xchg stos mov (bad) hlt aam lahf andl ljmp movsl add dec (bad) addr16 in mov es out stos mov inc adc repnz lret aas jecxz pop mov xchg xchg sbb mov inc scas dec pop jnp and (bad) adc subps jl pusha mov lret fstl xor ret mov lock dec cs jo mov mov xchg sbb out jmp stc stos mov mov lahf into and pop andl fs ret jae jg dec hlt push insl mov cmp dec and daa inc stos out jmp push mov mov pop stos mov add mov shrl dec sti js push pop push mov mov flds in adc cs mov mov xlat xchg inc (bad) mov adc pop les aad clc dec (bad) adc adc fs scas fldt movsl sub xchg push mov enter mov mov sub jns or xchg es fisttpl stc fs pop decb ret cs pop mov imul rclb pop (bad) lahf out sbb aas sbb (bad) vmread xchg xchg lock xchg repz xchg adc pop fdivl mov mov mov leave and imul inc jmp mov cltd loopne mov mov sub repz cmp xor pop jns sub mov sbb pusha fnstenv jmp adc (bad) mov pop mov add sbb mov movsl (bad) mov sbb (bad) aam enter xchg jl xchg and pushf (bad) cwtl cltd lret adc dec xor mov xchg xchg fwait xor out jnp movsl ljmp mov jge push xchg rcr scas je pop pusha in scas int out and (bad) jmp popf or mov pop rcll mov xlat lock (bad) sbb out cwtl fidivrl repnz mov xor (bad) pop cmp mov aas xchg insl inc lds pop rclb iret push inc test dec pusha into mov imull fwait add mov sti (bad) jmp hlt jns or test push mov mov pushf ss xor pop mov and push push pop dec mov push fs rcrb (bad) or sub nop jne popf xor and pop mov orl mov xchg pop dec mov xchg fistpl mov mov js (bad) jecxz pop sub cwtl imul fsts inc dec cwtl pop xchg cmp cmpsb sbb sbb xchg test mov push int3 mov loop xor sbb mov push push cltd leave je and loop fsubrs push or imull xlat sti xlat std jno shrl xor xor xlat mov sub xchg call outsl jmp fisttpll pop dec mov aaa and push nop fistpl inc push repnz fbld mov bound stc mov int3 sti or mov pop mov pusha jecxz jmp sbb mov pushf in das icebp ficomp aaa dec fistpl fsts cmpsl movsb push jmp xchg lcall xor in push dec and cmp and cmp dec dec mov decb imul mov or sub popl adc push mov cmp rcrb pusha dec lret (bad) sti cmp mov cli dec add fwait sti cmp xor inc shrb push popf mov pusha (bad) les xor mov push mov or push aad fwait iretw dec inc jo stc cltd mov mov mov out mov cmp mov xor loop loop outsb mov test dec ja in jl idivb insl pop add mov scas lock cmp pop dec cmp bound lcall test adc test push mov add dec test add mov movsl lcall push ret mov mov lahf (bad) dec cmc mov lods stos mov (bad) aad daa add inc push ret call xor adc cltd out mov leave xor out mov mov xchg cmpsl (bad) repz push imul lahf orl test add popf push mov sti inc cmp pushl fisubrl dec lcall mov mov adc mov xor ljmp dec inc pop xchg mov dec pop not jg mov push push adc scas inc sbbl dec pop jp ret or adc jle xor leave hlt divb xor jae cmp cmp jne (bad) popf jmp adc dec scas pop aam mov inc and mov lods jb pop aam inc dec jns movsl imul sub add xchg and inc aad jecxz fwait pop xor pop pop jmp and ficompl or fwait cwtl xchg je lahf test push cwtl cmp jecxz cmpsb in pop lods lods test jno sub xchg xchg cmp int mov jmp inc mov mov pop mov jp (bad) push int3 fild cmpsl xchg popa fdivp test pop fildll mov pop ret or lret test insb add dec or inc cwtl sbb jp popf sub jp dec pusha (bad) je cmp mov adc add aad xchg push neg scas mov insl repz add arpl push fs fcoml or jnp and pusha and popa out jp add push int cwtl pop lcall cmp xchg aad fs mov mov test mov ret cmp sub pop sbb add xchg cltd mov inc jns inc scas xor or add movl loop cmp xchg ret rol cmp jo pop cmpsb xor adc mov ret leave incb jb adc out pop xor fcomi mov imul jb fwait mov dec sbb pop movsl adc push dec pusha icebp jge mov adc insl fdivrl out xchg and imul ljmp add mov loop pop or pop push add push dec (bad) sbb pop mov inc inc cmp dec jbe xchg enter jecxz mov lret fwait jbe lret cmpsl dec dec xchg ret lcall cmp pop mov js mov xor stc jp xor jbe mov cmp orl pop rorl xchg push imul and ret xchg incb add fnstsw jne mov stos iret xchg inc cwtl scas inc mov sub mov cmovns xchg fiaddl fimul fwait data16 dec les cmpsl xchg or dec add enterw scas pusha mov cmp ret sub xchg out fistl xor cmp mov test mov adc mov push ss push aaa pop push xor test xor sbb sub dec in repz imul cmc mov mov out scas nop cmp sti fwait sub jo xor je loop adc mov xor cmp dec mov leave pop ret cmc xor dec aad data16 insl test pop lods mov mov push icebp fxch push jae adc jb inc xor xchg out add arpl dec dec fcoml mov push adc jle rol rcll arpl lret (bad) (bad) jnp lock xchg addr16 vminps cmp push std ljmp dec cwtl mov jmp inc popa and mov mov mov test xchg mov cmp mov cmpsb (bad) cmc (bad) mov and cmp lret mov inc loopne mov mov fnstsw mov dec cmp dec stos test ret int subl mov lret xchg xor fstl (bad) jb sub hlt neg movsb fistpl (bad) cmpsl add sub push mov push fidivl mov mov sub jg pushf pop mov popf sahf cmp scas mov ret sbb divb movsl xchg cmp aad lods inc fs fstpt sets mov add inc pop cwtl adc out pop rcrl and mov mov xchg mov inc pushf je xor add cmpsb (bad) cmpsl mov sbb rcl js scas fsubl xor adc add stos enter adc sti add xor push adc xchg test push push movsl test js mov cmp cltd jge sub shrb mov push int iret mov dec (bad) xor divl pop pop xchg addl mov xchg xchg in fisubrl push (bad) xor (bad) aaa mov jle jp cmp loop jb cmpsb inc adc int3 jp mov icebp out and mov into and push sbb lcall test pop fwait jb mov repz inc sub in xchg sub hlt rorb loopne pop and pop sbb xrelease fs mov in cmp xchg ret mov inc mov xor pop sub je (bad) fisubrl icebp cwtl jne punpckhbw cmp pop adc and inc pop or sub test loop test (bad) push or pop sub push cwtl lock sbb pushf push (bad) aam shrl mov sub mov notl fstpl cwtl mov into sbb js test (bad) jbe lret adc push pop xor int3 lret sub (bad) cmp pop mov fsts scas cmp xchg mov xor xchg mulb negb test pop (bad) sti stos xchg lahf jmp add pushf sbbl sub dec in mov jnp lahf popa or inc or sub xchg lods xorb add cmp fmulp lret aas inc jae (bad) arpl adc sub xor lcall fdivs frstor or jb cmp stos sbb push cmp push (bad) mov (bad) mov dec mov cmp idiv fwait xchg int dec shl mov fst mov jae cmp and pushf or xchg sub mov test pop dec adc rorl aas fadds or fwait and push lahf cmp imul jmp mov sbb mov add pop repnz arpl inc (bad) enter andl mov adc push mov mov lcall or lret jb cli or ret roll jp lahf push fnstcw jmp enter repnz (bad) nop cmp fnstcw sbb sbb ret pusha pop fistpl bound push adc pop dec ficompl aam lret mov adc push xchg subl fistpll jg inc roll mul sbb inc and js mov jecxz xchg (bad) jno fstpt leave pop mov mov sbb add xchg dec mov pop inc push in push fwait xor ret fwait mov (bad) in xor (bad) push rcrb push in ljmp xor (bad) mov cmpl incl cmp fs ficom sbbl (bad) adc sbb xchg sub mov aad jns xor lret xorl bound jns and jns test sbb fcmove sbb je adc mov pop mov sub xor sub add mov sub pusha movsl jno scas xchg aas aas jb outsl incb test pop cmp mov mov mov mov add daa xor jmp mov stc mov ss xchg fcmovne popa jnp pop aaa pop push mov cltd push shr popf inc sub les icebp fbstp aad addr16 jb and pop (bad) sub or test cmp mov xchg movsl cmc inc jae xor ficompl pop out or inc movsl inc pop jb enter test jns xchg sub xchg cmc fildll mov sbb mov dec data16 adc gs cmpsb xchg add arpl pusha or insl mov xchg imul mov lahf lret das xor push aas push pop xchg or xchg push jp xor jcxz mov (bad) xor in dec jb enter mov sub push cmpsl or (bad) fstpt cmp mov popl mov dec pop dec es pop scas (bad) imull cmpsl mov and aam mov cmp pop bound popl test mov mov lahf and movsl (bad) leave jp xchg pop jmp mov or and pop js adcl shlb xchg jmp out jo cmp pop call pop push pop dec or mov xor push dec and pop mov ret (bad) fwait aas inc xchg into and jns mov (bad) ss adc mov jecxz sar cwtl and xor xchg pop push js xor push (bad) in mov and mov mov sub xchg inc shrb mov arpl jns cmp imul xor xchg enter adc push add dec inc imull pop pop ds dec jnp xchg rol pop sub cmp rcrb aaa pushf pushf fbld bound stos inc xchg sahf fwait sbb iret out push jnp mov mov je call adc cltd dec xor mov dec xchg inc pop push iret cwtl sbb jbe popa cwtl popa add push sub cmp xchg inc das mov and ss sub mov addr16 repz leave lods idiv rolb add push stc mov stos bound mov lods jno daa test sarl xor sub insl les and cmp cmpl inc stc (bad) xor and or into or xchg mov push sahf lds icebp fwait mov dec dec xchg cmp shll dec fldcw push xor inc adc stc stos cmp lahf inc test or xlat and sbb outsb dec daa mov lret movb call adc test dec sahf add mov mov pop fistl pop idivb dec stos mov inc test out stos ljmp push mov stos add jecxz,pn xchg mov inc mov pop dec jo sbbl ffree and iret cmc scas inc cmp mov fwait cltd mov push mov rcrl mov sbb cmp cmp test test xor or insb push sub or inc ret jmp jbe cmpsl imul std push lcall lds inc cmp mov sbb dec lahf arpl xorl pop lcall dec inc mov jmp sbb mov or (bad) leave test pusha xor mov fs cmp bound push xor je dec mov pop lods dec out shll xchg xor subl lds add (bad) pop push mov lcall pop cltd dec adc cmp test jno mov push mov jp dec xor xor and gs mov test add inc fisubl adc fwait or repz or repnz testb xchg or push sub cmp xlat ret inc mov vpacksswb jecxz xor jb xchg sar add lcall add in fldenv xchg inc or sbb stc (bad) (bad) insl mov fs mov loope lret stos jns imulb movb mov jmp cmp xchg fistpl fidivrl push jmp enter and adc fstps mov pop daa adc mov sahf pop fwait or ret inc (bad) mov pop xchg lods push in or mov fs pop sti inc sbb pop js negl push sub imul mov (bad) (bad) fildl call mov shll mov xlat (bad) scas fwait ljmp imul dec inc out jmp ss xchg mov add cwtd lds pop mov xchg pop lcall ljmp push test sub das fyl2x fs lds adc push xor insl jmp pushf insl adc jecxz pop aam subl mov xor mov outsb insb test xchg add sbb lret fildl test fnstenv push sahf data16 jo sarl mov sarw mov (bad) jecxz lock xchg push lahf lods inc mov and (bad) mov je int mov mov jp mov enter mov dec push and push fidivrl (bad) mov mov pop loop or fdivrl xor dec cmp mov cmp cmp push add int and inc std stos cli inc xchg movsl fwait inc fs pop push xchg addl cmpsl pop xor enter loop xchg mov dec sbb dec mov repz sbb cwtl jmp in mov pop arpl (bad) mov mov arpl pop out cmp xor imul xchg lods mov mov sbb or sbb inc mov std xchg adc popa je pop and (bad) sti adc jo daa mov (bad) adc arpl xchg sub test pop dec incb sbb mov mov shrl xchg adc dec (bad) hlt push add mov pop fwait repz sbb adc loope jle xor fcomip jno pusha mov mov cld cmp push inc sbb or clc inc cmp sub xchg adc mov and push mov xchg call pop lea jle call xchg je in or adc neg jno ret xchg mov lret dec dec xchg fs pop push std or leave sub int3 inc jp stos pop inc sbb mov jns lret repz xor cltd sbb aas inc negl test xor inc cmp sub shlb and sub mov inc jb enter scas mov xor inc adc mov mov fs sbb jp jne or scas cli ret aam insl mov jle into or push and xchg and pop lcall scas mov pop mov fs repnz adc jle jge push fwait inc popf inc add ljmp inc push out adc insb sub mov jl fidivrl adc fstps push fisub cmp fnstcw lods je jae sbb lcall orl jmp or sub insl push and sti lcall sub cmp lods mov (bad) add cmp into sbb inc and add cltd rcrl sahf mov push push jmp aas idiv lret icebp fwait data16 lock and fnstcw add jno cs imul pop inc imul or mov sti cld lods cld sbb mov xchg out mov dec xor sahf sbb mov fild pushf and fistl outsl sbb aas mov xchg add rclb jecxz out mov xchg mov rorl (bad) mov stos push leave js icebp in ret adcl addb in push (bad) or pop pop jl or insl inc or fist mov jmp loop sahf sub mov jnp jle sub (bad) dec cs mov add lods mov mov sbb add mov aam rcr stc ret inc mov add jnp push inc sub cmp dec and lahf add and into push gs mov mov fsubrl mov js (bad) jecxz pop xor negl stos and addr16 cs mov sub sbb in movsb fwait lods pop (bad) xor xor pop mov mov mov xor sti stos rcl mov mov mov adc daa sbb cmpsl xchg andl iret mov jns mov mov mov and or fwait mov dec jl ret scas scas add sub addl out dec rcrb mov andl and mov push rcll sub fimull mov push push and fcomp outsl lret and lahf int mov mov rcll add xchg fnstsw sub test in mov jne dec and adc xchg xchg cmp pop xor lods shll sbbl inc fcmovu pop lahf fnstcw xchg inc ja and js sub (bad) mov out cmp jmp cmp and xor jo inc cmpsb pop test pop xchg cli mov push mov push lahf sbb add fstps ds xchg (bad) repnz dec jnp inc mov mov cmp pop icebp xor pushf and aas push mov addr16 pop imul movsb mov push adc add ficompl rcrb mov xchg xchg jbe adc push loopne lcall imull xor jnp push lret mov cmpsl (bad) stc sbb dec popf aad xchg sti sahf lahf out jecxz jl inc mov xchg pop (bad) sub daa push or (bad) jbe jno jmp pop fimul inc pushf arpl mov std dec inc xlat rorl lahf mov dec mov mov jmp incl sub fldcw clc xor popf add cld sarl pop rcr cltd mov test mov jns imul clc pop (bad) mov xor (bad) scas xor mov imul ds inc mov repz mov mov les stos mov mov sbb (bad) fnstcw lahf and aad std or pop pop xchg mov inc or out cmp mov add lcall xchg add add mov or adc mov stc xchg mov call fadds adc mov xor add inc test sub daa mov std bound in or mov sbb cmp xor pop mov (bad) into dec ficompl sbb fnstcw add and and mov xor mov sbb into pop cmc cwtl or add cmp sti mov (bad) (bad) fwait dec pop push xor test pop call inc shrl xor mov orl ds hlt out or (bad) leave fs cmp jb mov cwtl mov dec xchg inc cmp xchg loop jnp (bad) loop out icebp mov fdiv rorl mov pushf fwait mov xor lahf cmp mov jnp mov mov cmpl ljmp dec jno sbb orl orl mov lret stos push mov pop mov mov and lahf jnp inc jecxz test inc divb enter mov xor cltd fadds lret lods aad xchg mov pop fwait mov cltd lcall xchg and movnti mov mov push gs ds std lahf cltd xchg jbe popf fwait into adc pop mov mov gs push dec mov or aas rorb xchg (bad) dec adc subl jle leave fs adc inc repz inc rol ret icebp cmp int and lcall (bad) sbb xor pop cld cs stc inc and pop dec or in sbb hlt sub (bad) aam sub pop adc pop insl mov bound aad leave xchg popl gs lds test movsl sub or xchg test or mov (bad) mov push lea ja push aaa incl or pushf daa repnz sbb sarl call ds xchg add cmp jp push dec adc insl fwait pop mov cmp clc lret mov js add xor test ret xchg cmpsb push outsb movsb jb push pop dec std pop cmp stc pop xor or int mov pop jnp sub loop pop mov xchg repnz jge push imul andl xchg mov push lahf fnstsw mov loop jnp popa mov mov or adc leave andb adc out daa sbb fmul cmpsl cmp adc inc adc xor ret leave cmc inc pop jp lret inc xchg push jo sbb mov pop in and (bad) stos ret lods cmp fstps movsl xchg or sahf pusha lock fstpl std in mov fwait cmp xchg jno mov scas or jno sbb cmpsl cmp clc or out jp je (bad) cltd in lods into add jle imul (bad) cmp push dec (bad) sahf xchg icebp push lcall int3 in aaa pop ret lods mov jmp imull je mov clc testb or ret sub jecxz lret inc pushf adcl sub mov sub test xor or sub je loop add xor pop push mov shll or insl sub repz (bad) gs mov mov lock and adc pop xchg aad mov sub cmp lcall dec lahf stos into xchg mov loop test ret ficompl sti add adc dec scas lea push lret xchg and lcall xor add mov dec mov jle inc mov inc in aaa jp fs cld insb lcall lock negl daa cmp aaa mov sub lcall rol sub call aam push cmc mov pop fwait mov xor cmp xchg mov xchg test repz and sub pop lret mov jns ret rcll inc mov stos add sub xor lret inc sti sub xchg adc test imul es dec and cmp int push mov sbb insl push outsl sub negl dec pusha inc pop mov adc jp repz mov dec adc cs lods popa lcall fisubrl roll and mov sub leave and sbb push inc pop loopne mov hlt xor dec sub out aam adc adc lahf cld call sbb and mov jns aaa dec adc test xor out cmp rolb pop mov jnp add pushf xor cmp dec jle sub pop les sub xchg mov pop je cmp pop das cmp (bad) setle into subb lods aam ss ja inc ficom jmp mov loope leave add sti out inc gs in rol sarb mov ret es inc fildl pop mov mov sbb sahf mov mov jl mov (bad) mov mov roll pop sub stos pop mov mov mov push ljmp adc cwtl je dec sbb pop sahf sbb push push inc mov xchg ffree mov bound sub or out or (bad) push sbb pop pop pop inc mov pop cmp dec hlt in xchg jbe dec aas inc mov fs jnp imull imul sub fnop sub xchg fistpl pop xor inc ffreep sub jl fwait xchg in add fwait cli pop cmp aam scas sbb mov flds roll jp inc cmp inc pop sub add cmpsl ljmp stc mov xor sbb jns fs daa jp inc and mov cwtl inc movsb outsl clc (bad) fcomps in sbb mov (bad) mov sub movsb lahf pop sub mov lahf fisttpl xchg (bad) mov mov add fucomi xchg jg mov push ret sbb mov mov inc xchg fisttpl jbe adc push ret cli sti mov mov inc xchg fldt xchg cmc mov mov push pop repz xchg sbb mov movsl scas in fwait push scas dec hlt inc (bad) fbstp dec lsl xlat scas dec adc mov call xchg mov ret sbb lret cmpsl jmp cltd add mov mov (bad) sti jnp mov inc pop (bad) xchg mov fstpt dec cli inc (bad) (bad) lahf lods mov sbb inc movsl fistp push mov cltd fwait mov fwait pop sahf add fwait lcall scas dec sbb fistpll lock cmpsl sbb movups add jb cltd data16 outsl bound (bad) stc lret (bad) repnz fwait push mov fcmovnu mov push dec stc jno jb js (bad) sbb cwtl iret mov test fdivr inc cmp and mov mov lret cmp add jnp lcall mov pop xchg cwtl mov fstpt lahf sbb pop xchg (bad) mov fwait mov mov mov sbb scas (bad) imul jnp test (bad) fistl jmp mov xchg inc inc rcll mov mov fs (bad) stos jae movsl pop dec xchg xor push cmp cmc push xor cmpsl dec fsub test jae stc stos repz jecxz sti and pop jecxz xor bound (bad) mov jno adc fistl cltd dec pop popf loop pop sub inc leave aad jp rcrb test adc dec cmp rcrb pop sbb (bad) cmp and adc fmuls inc fxch pusha repz cwtl mov cld fcmovnbe stc jle inc xchg call mov (bad) mov divb pop sub add mov adc lock sti mov aaa push mov movsl enter push loope imul dec data16 inc mov inc aaa sub dec popf scas adc cmp rcrl dec add pop mov dec add mov xchg xchg ljmp cmp cwtd dec pop push mov adc int popa push mov outsb stos mov mov mov sarl lret test cltd mov fwait pop sahf cmpsb pop mov data16 rcrl sub aaa pushf mov (bad) mov mov mov fisttpl cmc mov jns dec or repz in sbb imul fwait cmp mov (bad) not pop or pop push mov ss cli push mov jne lret mov mov pop add add mov pop adc mov imulb push aad mov xor push add mov rcll jnp pop loop dec cmpsl aas shrb mov jnp mov insl sahf adc xchg mov mov push or adc mov leave dec mov hlt pop jecxz je dec sbb mov popa cmp inc xchg lret fisub adc das pop loop xor popf jge js pop insb mov lahf cmpsl add mov adc dec mov icebp int3 fcompl cmp stc jnp leave out lods es jg cmp adcb outsl repz daa pop into cli cwtl and xchg add ds pop sti aam inc leave int sub sti addl mov pop mov pop mov fnstenv cmp (bad) (bad) cmp out hlt mov or lret and (bad) arpl aad cmp mov push adc pop or jno or sub or dec jle pop loope popf and lods jge and cltd pop inc dec and and push inc sub scas loop gs inc subl xchg and pop sarb test or fwait add fcoms ds aas out shl mov aad das (bad) jnp xor add sbb push inc fdiv out jmp xchg ret adc (bad) neg sti stos sub push (bad) mov icebp and xchg inc rcll daa mov (bad) fstps mov mov imul jle pusha (bad) cmc jnp adc popa push cmp jecxz dec push cmp pop jns mov jecxz jecxz xchg inc push push lock cmp mov mov aad hlt mull inc mov and pop mov pop add aas (bad) push mov (bad) and xchg mov fbld test adc daa sub imul fiaddl dec sbb and push pop sub push pop or mov dec lret inc popa das aad mov jo repnz daa mov add bound rcrl mov test test aam lahf pop shll outsb add pop xor and mov and repnz or add (bad) mov mov pop cs cmpsl ret pcmpgtb pop rcll jmpw rorb xor jl loop fstl or daa mov stc addr16 xchg sahf lcall inc andw pushf sbb push les imul pop aas pop mov sub lea jmp loope iret or mov es loop aas xor jae xor lahf div xchg mov pop pushf js fidivl lds leave insb add mov inc fnsave pop popa xchg inc sub xor pop sbb pusha pop addr16 or (bad) out out xchg push call mov adc lahf and mov fstps or mov rol scas pop cmp pop jmp mov stos xchg mov and (bad) iret add aam popf xchg xchg cmp sub sti and (bad) push into xor scas inc jb xchg sbb xor int3 cmp add les (bad) (bad) push pxor inc jne sbb jecxz sbb inc dec cmc dec es mov (bad) adc dec pushf jg inc mov ret adc jno xor jbe mov lret (bad) pop lcall bound fs dec and stos lret xchg jl inc mov mov add xchg fldl call lahf iret iret das sarb or pop cmp fsts cmp out jl adc mov loope lods push std and and nop xchg add lea jns xor repz or cs into sub es aad stos mov mov jbe lods enter dec adc movsb data16 dec shll push mov sub mov dec sub inc dec jno repnz fdivl or pop cmp out pop jmp (bad) dec cmp fs push inc mov mov push mov mov inc mulb pop cmpsl pop lcall rcll dec add mov mov pop xor pushf addl cmp dec jne,pn pop pop jl sbbl xor and dec imul sti aaa (bad) xchg add mov sti or mov ret mov adc loopne pop xor jmp push int lods ficompl pop paddq jne fisttpl fwait inc cmpsl mov sub mov lods leave pop outsb sub cmp pop fsubrl adc xor fs aam xchg ljmp add cmp lcall adc repz push cmp mov sub and imull call or mov mov mov flds test adc xchg in push xlat inc or test xchg jl repnz sbb stos and repnz imul mov mov push iret stc jnp dec adc ja push pop xor scas mov jb sbb imulb xchg jmp fnstcw push movsb xchg aam sub mov xchg ficomp stos add sbb inc xchg repz xor lea aaa xchg mov mov mov add loopne jns test hlt push inc adc sbb xchg mov aad movsl mov push pop mov cs gs fst not push cmpsl or aaa ds in and inc dec cmp int3 addr16 xchg mov test mov cld sbb jg int pop xor nop divl sti icebp mov pushf fs xchg ss mov add js cmp das adc (bad) sbb inc pop and adcl sub fild (bad) mov adc sub and adc sbb pop xchg pop jnp dec stos (bad) aam fdivs jmp jle in dec cmp stos xchg xchg inc stos sub fcmovnbe rclb sahf mov lcall jg xchg loop mov adc pop inc sub in add cltd jno (bad) je sarb jb in sub push insl sub push stos test ret xor jno into xchg sbb mov sbb into sbb (bad) repz fildl sbb adcl iret int3 cwtl mov test movl pop out jge outsb shr mov xchg stos movsl adc roll mov mov cwtl mov xor stos lock cmp mov xchg push mov je pop sub test mov jmp sti adc dec ds stc ja in movsl inc cmpsb fcoml pop inc pop insl fstpl test arpl cmp in lds repnz test pop and ror jns mov cmpsb lcall repz fstpt stos addr16 xchg cmpsl orl pop xchg mov bound pushf repz adc call jno arpl mov aam cwtl xor cmp jp hlt stc xchg mov cltd jno xchg jmp pop mov vpcomuw adc movsb fs clc es fdivrs pop lods mov add dec jnp pop dec pop mov loop lahf ljmp mov dec cmp sti or out inc aad inc add xchg sub adc or iret mov inc pop pushf data16 fstl inc mov dec mov jnp push and stc inc outsb lea out pushf pop repnz mov mov fwait ror xchg jae lret fistl in xchg mov push xchg inc add mov ds addr16 jne xchg (bad) leave mov push cmp loope in rcrl and xchg in daa cmpl mov push mov repz (bad) push arpl cltd repz notb ret cltd pop ret data16 cmp pop outsb inc push mov (bad) loopne add (bad) out mov mov or arpl (bad) adc js sbb shrl lret jns popa hlt test js shl cmp xchg xor fs cmp or cmp repnz negl mov dec scas pushf mov cmp add xor pop hlt jecxz push cmp daa movsl mov or dec ja inc inc sbb jb mov lret cmp pop mov mov mov dec sbb (bad) aas jo cli popf inc dec xchg and mov movl lret loope popf cmp dec iret inc jnp data16 jns cmp insl fld1 aam xchg icebp outsl fisub push sub loopne sbb mov fldt mov push inc (bad) add shrl mov sahf sti jnp mov iret pop (bad) in pop sbbl pop jo xchg repz add xchg push adc ret pop jnp stos inc sbb fcom xlat and stos (bad) pop stos stos fnstenv xchg nop jl in jp icebp lcall mov popl xchg std mov cltd (bad) js fcomp (bad) sub fstpl ror xor adc test adc pushf scas stc sbb sub test cmp cmp xor dec arpl inc cli xchg jp adc bound aaa sbb mov mov dec cmc xor push mov out mov xchg adc ss adc pop lahf into stc push scas push in jnp test inc mov aaa push push inc mov push outsl enter fadd rorb stc (bad) scas int mov cld (bad) jbe inc push mov jge xlat jb lret sti xor xchg das cs inc dec test (bad) adc push int3 call bnd ret je aas mov movl xorl sub pop iret ljmp ficompl push adc add mov fsubrs push jo mov paddusw cmp aad jmp in outsb xchg cmpsb in mov aaa imul rcrb xchg and sbb (bad) insb insl in cmp cmp ret mov mov mov sbb mov mov lcall test mov mov cmp sub add mov adc add data16 in jge xor addl dec scas mov push add je cmp pusha cmp jb sbb mov xchg cltd xchg mov or pop rclb ficoml mov adc imul add sbb xchg mov xchg aaa adc (bad) cmp mov mov dec rol mov add stc fdivp (bad) ffreep push inc jnp xchg ret jae shll mov mov cs mov add das mov movsb sub loopne ret pop fisttp xchg push popf xchg enter xor xlat jns aaa inc cmpl and sub cmp and pop cmpsl pop inc fnstenv add dec imul mov or mov sub test (bad) fsts (bad) mov xor push divl aam inc mov sub mov pop sbbb pop ret jae (bad) icebp lods shrl test mov push aaa xchg jns test dec fwait (bad) outsb push in nop xchg movsb inc arpl dec push int3 cmp fistpll les mov mov aas jae lea jnp fisttpl inc sub leave cmpsl and mov movsb jnp mov push pop lret movsb mov cmp jb xor nop xchg cltd adc xor sbb adc xlat fcomps dec negl mov push repz xor or stos pop or (bad) mov add and pop inc mov jge fmuls mov in cld in inc jne inc mov cs enter push in lcall popa sbb repz jge shll inc cmpl inc nop js outsb xchg sbb ret (bad) mov dec sub dec inc xchg dec repz lret push enter (bad) inc repz fcoms dec cmp dec sbb jae lret fnstcw cmp movl aas lahf mov shrl lds or sbb sar push sahf xchg jmp mov les call dec mov and mov mov mov and rclb loope xchg fistl (bad) cmc jns jb push push stc mov push (bad) pop xchg rol clc mov adc test dec cmp leave outsb ljmp lods jmp andb mov mov rcrl mov aaa jb dec cmp and leave sub push push (bad) movb dec inc int3 ret aam push adc fstps mov push fldt mov add (bad) jb xor lret inc jno pop jo fwait mov enter inc out out in les push mov mov xchg mov add movsb sub stos dec mov jge sub push mov aaa popl xor jmp iret rcl aaa xchg adc popf mov popf lods cmp rorl popf (bad) mov pop je push cmp fs push cmp pop into mov jnp outsb ret ret push pop mov fisubr sub push jns int (bad) (bad) or loop out adc jle sub sbb outsl arpl fs sub push out xor mov nop push out dec popf jo dec test das test nop fs outsb or jmp orb shrb xor (bad) jl lock push inc xchg xchg xchg pop out mov fisubl lods push push cmove ret jb cmp orl pop and and pop flds aaa shlb outsb cmp push fisttpl sahf es mov xor mov mov cmovb sbb (bad) jmp leave add out orl aad cmp jns pusha cltd fistl leave fwait xor fldt (bad) sub jnp or jae xchg cli jae xorl in mov xchg xor mov and stos lds orl jns jge (bad) (bad) imul pop mov out mov inc sti jbe mov xchg xchg and push sub mov mov inc push aaa repz jge and sahf arpl adc jp fs aad cs pop jbe ja out pop popa xchg lahf jmp push hlt repz sbb call sbb and cmp imul or xchg sti push add mov pop sbb mov pop or not push cltd push sbb jbe repnz dec pop xor imul cltd dec mov lahf mov push test mov sbb mov or insl lods roll jmp repz push loope mov fwait popf (bad) jns into dec xchg (bad) repz ljmp and sahf pop subb xchg pop lods pop pop pop fldenv sub js mov imul mov mov sahf pop sub cmp or and aaa je in sub and jbe sub movsl lahf mov push xchg sub mov fistpll adc dec mov adc inc sbb imul cmp sbb shrl andl or cmpsl xchg adc (bad) jmp clc cmp push loop int3 and xor push or and arpl pop adc xchg (bad) mov mov mov paddq sbb and das cwtl jbe fbld fsts mov dec outsb pop pop mov stos adc or push cltd add adc fidivrl mov mov pop or pop mov (bad) xchg mov mov int mov pop sub rorl in fsub je xchg pushf repnz cltd mov add adc mov cmpsl sarl sbb fldenv outsb fs fwait xor fild js or jne xchg insl je divl dec mov insl lret je idivl mov (bad) icebp jnp fisubr cmpsl and jns xor fnstcw jae mov iret xchg dec es mov shll push sbb mov mov push xlat mov cld add imul repnz sbb cltd cltd popf jne mov cwtl in xor pusha pop lock xchg in addb mov mov xor mov pushf jae inc mov stos dec push push repz add and mov andl cltd mov push push lds repz rcll cmpsl iret mov fisttpl dec mov aas lods inc cmp imul pop rol jle dec pop lock lock fs add das mov sub fcmovnu cltd and mov pop dec mov mov and fs pop pop push lods jge fcoms movsl fstps pushf mov insb pop iret repz cmp mov shrl jae mov (bad) not aam dec push insl gs adc mov dec xchg xchg vminsd dec ficoml stos and inc shll mov mov cltd fsubs xchg add mov adc push mov in lret jne cmp inc fildll mov fwait sub in xor xor adc fistpl cmpsb stos mov stc push mov mov adc sub insl loope jge xor inc lret (bad) xor fwait arpl xchg adc dec xchg add xchg cmc xchg out push test mov imul mov jecxz js xor inc and loope out adc mov pop ficompl lea push pop adc and xchg pop dec or pop cld sbb sub ret sahf mov scas add mov jnp cmpsb in sbb xor fidivr (bad) mov mov xorb and pop xor jae sbb or fs addl jecxz mov xor inc add jb js mov and add xor leave stos pushf sbb (bad) xor and jnp aaa int jge cmpsl lds ljmp xchg push clc loope out test test mov sbb ret hlt xchg or sub jecxz xchg sub push inc and adc xor sbb lret sbb jmp xchg mov pop inc sarl dec fstps sub push sbb xor mov push or movsl test mov cmpb in jnp (bad) pop and mov xor add mov aam pop and mov inc push movsb or xchg mov add or stc enter cmp xchg or dec adc sub inc loopne push xlat xchg popa pop (bad) sub jns imul stos xchg rorl orl or (bad) mov out dec jb cmp lcall (bad) push in orb pop or inc sbb or in xchg jmp movsl roll or test push daa pop pop inc mov in push insl mov inc test imull fs sahf movsb sahf lea das out or jns je add and iret jmp push sbb mov xchg stos icebp inc or cltd pop test jg pop out je loop repz pop mov (bad) mov sbb hlt fs repnz inc push mov push jl cs jnp iret lahf mov xchg dec sub or cld into cmp cmp adc mov cmp dec test add pushf jmp and inc cmp mov add mov stos inc dec mov daa add xchg adc out or fwait icebp jnp lds scas dec jnp sub inc fdivs xor movsb test sub inc xchg pop pusha mov out pop loopne (bad) mov fwait inc incl in push add pushf dec aaa mov jmp push iret push sbb addr16 enter fildll sbbl shrl scas in arpl loop xchg mov (bad) sub icebp xchg js sbb popf xor pop pop cmp dec jle sub mov xchg cltd mov pushf rorb xchg lret insl cli jecxz xchg push jne cmpsl mov bound push (bad) jae mov jne xchg mov cmp push mov adc adc stos or or cmp lcall push (bad) inc ret adc popa xchg cli mov sar dec fisttp mov mov sbb divb data16 pop popf repnz mov dec push imul (bad) sub lcall lea xor xchg cmp add push mov mov lahf stos jb push mov jmp sahf jmp aad subl pop pop cli cmpsl (bad) cli (bad) repz mov xchg lahf sbb pushf std insb movsl jg cmp lret pop mov mov sbb enter add sub jmp push push das lcall mov dec and jns sub jg mov sti mov push adc jle loop fucomi mov rcll jecxz idivl or pushf jl jp aaa lret lret add aaa jb xchg jo dec fidivrl mov sarl inc add inc mov jb mov jb mov mov mov xor sbb aad and loop pop adc js ficompl adc xchg popf mov fcomps cmp test cltd lret fwait jno in test and xchg jge jne movb cltd aad xor into cltd push push in movnti lcall xor or jle mov xchg or test stc cmc or xchg mov aad or push cmp xchg daa imul pop xor and sbb cld add dec pusha and sub mov cmp daa js test xchg add sarb gs in ret inc cmp fdivr adc jae dec iret sbb lret faddl jnp sbb mov cltd jnp fildl loope xchg jo jmp cmp push cs inc pop sbb xor mov jo (bad) aad test inc xchg cmpsb int3 pop push lds ret out (bad) or inc pop gs mov fisttp and jecxz xor pop mov popf sbb xlat loopne cmpsl mov push cmp adcl mov push mov popa ja in cmp pop sbbl loope xchg jbe stos sti pop aam jne addl out into mov push and xor stos adc or push xchg mov push add (bad) ja jecxz lret js sbbl sbb mov dec stos sbb jne xchg sti and cli mov mov push rcrl shl xchg inc pop mov inc scas inc push int adc sub sti xchg adc mov dec out cmp mov lmsw rcrl sbb aad pop or adc inc sub cmpsl cmp xchg add jne mov int3 and call jno inc lods sbb (bad) mov push xchg mov sbb fnstsw mov sbb stc mov add movsl call enter sbb pop adc mov movsl or pop addr16 enter xor push cltd idivl addl mov push pop and inc stos xchg cmp inc pusha mov out repnz mov (bad) mov and xor adc leave jecxz (bad) jb pusha lret adc fcom fcmovbe repz repnz mov adc (bad) dec dec mov sbb daa movsl cld scas inc lds mov pop xchg (bad) and sub push jbe out jns push add cmp mov addr16 in sahf repz cmp or dec stc js fldcw add pop out adc repnz stos aad rorl xchg daa mov push push sbb and sub test das ret arpl cmp adc and cltd xor mov mov inc jmp sbbl ret sub (bad) mov adc and mov mov sbb mov sub in cltd add jmp push inc stos aad jo jo xor testl (bad) loop imul stos cmp stos jb (bad) jnp lcall inc loope mov negl in mov ficom mull leave pop mov scas push mov pop push xchg or in dec push mov rcrl lcall in (bad) in mov xchg and xor xchg dec aad shrb int scas xchg repnz stos push lods bound cltd call imul sbb std lret inc dec push xchg add mov add jl loop xor repz daa (bad) xor (bad) xchg (bad) and cmp les add (bad) cltd (bad) jns gs inc sbb dec adc bound lahf dec sti test sub adcl sti mov mov push pop jg (bad) aas push add and xchg out loopne cmp leave adc jp sbb xor push fwait pusha sti outsl fwait imul mov mov ficoml sbb rcll (bad) loopne loope dec pop cltd in pop sbb adc mov mov lcall add xchg repnz lods inc jecxz lds dec js in (bad) repz push inc ror pop adc fistpll or pop mov sub mov out jp aas dec cli loop rorl dec rorl inc mov out (bad) jbe mov push xchg inc arpl mov and push aas xchg loopne pop (bad) inc add inc pop sub pushf clc (bad) int3 mov or push iret inc mov add mov adc xchg xchg mov (bad) cltd sbb cmp pushf lock add stos out dec inc loope or and sbb (bad) sbb jae mov dec rcll testl (bad) notb sbbl mov lcall sti mov pop sub add jge (bad) (bad) notb pop mov jp sbb xor decb xchg cmp push sbb das push add xchg cli sub fild dec mov sbb xchg push sub sub imul or rcrl ja test mov mov daa fucomi jl andb outsl test add pop lock data16 out ret sbb cmp or push ret lds pop pop repz rcl insl test ret jae test cmpsl fst pop push andl and mov xchg xchg mov xor notl push loop pusha pop sbb mov pop fistpl pop mov aam shll xchg jo (bad) mov jmp adc add stc dec sub not and js jmp pop push pusha push or (bad) jl pop mov sub out les hlt push test add addr16 jns test cmp lock push cmpl (bad) test mov int3 xchg (bad) pushf inc js pop push pop popa pop cmpsl mov ret call cs inc mov (bad) in mov cmpsl pop inc movsb lret jp jne out lahf sbb fildll sub pop lret lods mov pop jmp ret movsl push xchg push jmp in jecxz pop xchg bound ret lcall mov and push xchg nop fisttpl cmp inc sbb mov sti adc xor test and stos inc xchg push pop sbb test popf sub inc xchg pusha dec test mov sahf jg lcall jg mov scas sti push divl lret sub and inc notl je out dec mov mov dec ss mov adc test aad in dec xchg loopne subl lods or xchg push pop add push sahf cmpsl popf push push dec sbb in insl inc mov frstor push and aam test inc sbb popf lret and in leave loope inc adc dec mul dec mov jg mov and dec inc cmp out push and loopne pop push push inc in repz push xor jecxz jmp and pop sbb cmp mov cmpsb mov adc mov add mov and xchg fisub mov cmp call dec push lds mov jae jmp fwait ljmp mov enter pop popf mov inc sbb inc insl ds mov lret jb (bad) dec repz cmpsb mov movsl add test loope mov sub inc bound xchg or mov cltd cmc jmp notb cltd mov (bad) js cmc dec and cltd test dec das aas mov xlat push push std adc rorb (bad) xor icebp mov ficompl test add pop test adc (bad) push fildl test mov fwait loopne outsl dec lahf jae inc ror lahf mov mov mov add and dec and push jmp test inc push sub aad inc sub jg outsl loop mov fisttpl (bad) dec pop cmp ret jecxz imull jecxz xchg lock and adcl add push pop in mov daa push pop lahf insl dec push lods sti mov fidivrl mov repz dec scas lret pop repnz inc test inc push jae pop jle (bad) or jae pop inc pop je mov xchg mov in pop outsb mov push push xchg push and ficomp pop lcall arpl mov push imul mov mov cld lcall scas rcrb test sbb loope scas xchg xchg sbb xchg das loope mov lret hlt pop adc jmp push popf insl adc or and inc ljmp add xchg mov sbb stc sub mov mov scas (bad) mov (bad) sahf jbe test sub jo repz into scas dec movsl pop clc jbe pop push xchg stos aam xor adc inc neg mov cld popl cmpsl ret dec mov popf in and mov imul movsb (bad) lret outsl mov dec fistpll adc fldt pop mov lret pushf lds mov lahf mov push fadds into dec cltd pop fwait sbb les (bad) mul (bad) testb nop loope (bad) (bad) out stc jecxz push icebp xchg loope out aas pop mov (bad) (bad) repnz sub sub out xchg pop and jb inc sub pop push movsl adc sti stos inc (bad) aas mov push add fwait push add mov lods mov pop adc pop pop lret xor adc jnp je aad push pop pushf push repz xchg pusha pop or test pop loopne test loope xor adc inc mov scas icebp push xor and pop and add fdivs and fsubrl fs faddl sub or fs or sbb sbb rol add fwait push inc loope jae xchg jae dec and les sti dec jne,pn ljmp push js cs int dec jns mov fildl imul outsb dec sbb cmp pop aam dec rorl xor (bad) inc dec push mov adc pop fyl2xp1 dec into sbb push clc add and xor repz icebp jl sbb roll pop fadd repz cmp xchg sti inc fistl movsb pop pusha test and and xor jl imul mov fdivrl inc aas xorl inc add mov xor mov pop (bad) adc add dec adc push idivb stos por sub pop xchg jbe lahf fildl add nop sbb push pop lahf loopne xchg push pandn in insl mov add movsl mov mov adc (bad) test lea fidiv clc xchg lahf (bad) mov repz pusha lcall aam xchg mov popf xchg pop inc and pop and mov push (bad) and mov inc movsb add ss cmp dec cmp pop mov jmp jnp and dec xchg out insl jnp movsl fsubr pushf xor and mov push adcl dec in inc std and fwait pop xor imul outsl dec mov shlb ljmp jbe or xchg sub sbb push subb xchg sub loopne iret fwait mov sub xchg divl mov xor movsl adc or push dec pop out ds arpl and mov mov sti lret jae pop fsts cmc in xchg call push adcl lret ljmp fstl dec xchg icebp popf loopne dec cmpsl inc je xor and int xchg data16 inc fsts aad jbe and mov popf clc popf movsl xchg cmp cmp mov jmp mov pop sub repz and pop mov mov icebp (bad) dec cli mov dec repz pusha jmp inc dec mov andl or jg fwait mov fs stos adc lea pop icebp leave dec jmp cmp adc mov mov and (bad) jmp and mov cmpsl in std inc test xor in pop in (bad) or pushf ljmp fistl (bad) sti jae xchg mov fisttpl fcmovnu inc xchg pop sub jg pop pop repz (bad) lea pop jmp test adc iret cmp adc gs sub lods repz adc xchg jmp fstpt jae cmp jno popa and inc mov sbb test fild cs push test cmp dec jmp pop stc ja je fwait ret inc stc or dec push sub mov or dec pop (bad) push jb sahf pop lea xchg mov pop mov pop cmp imul sub mov lahf mov int push xor xchg sbb or loopne mov mov or jb adc jbe icebp dec fcmovnbe dec inc pop adc sbb mov pop outsb inc fldenv xchg mov cmp adc adc adc repz cmp ret adc in jle pop lret and dec inc xor inc dec sahf mov stos pop pusha sti jmp mov popa clc imul ret adc popf cs test (bad) popf pop push popa test xchg dec push mov sti movntps je cmpsb in movsl pushf fwait jecxz lds pop mov xor push and push mov repz lods mov push hlt das out jle mov imul mov dec mov ret or leave jbe notl fidivrl sahf out pop pop xor pop stc push lea mov insl mov mov sbb push test jno add mov inc ljmp inc dec fwait sub sahf and push xchg mov xor insb lret add inc mov popf cltd aad repnz fstl gs sub test cmp and dec cmpsl in iret mov js pop mov stc dec loope xlat mov cmpsb mov mov xchg movsl arpl lods in (bad) lahf test ret gs iret inc lret cli xchg aam pop std out dec pop divb fildl jns mov jmp lcall mov xchg scas mov lock inc sbb jae jo inc arpl gs leave sbb xchg and popf aas pop outsl in pop sbb out xchg ficom mov xchg and jbe imul xor (bad) xchg push pusha xor pop xor cs popf cmpsl dec xor cmp inc mov jnp jb insb mov jnp pop loope fsts or movl or bound sub ret lret jb fisttp lahf adc aam jmp and aas add imul mov fsubrs dec pushf insl lahf mov lret mov ficomp cmp jle and inc pop nop aam mov add fnop xchg imul pop mov dec sbb cmp mov adc and push jbe lret push ret fcompl insl aaa fs mov mov test mov mov lahf (bad) sbb cwtl enter cmp inc and push cltd mov cmp out xor movsl push bound jb arpl push inc mov xchg sbb fwait insl inc add fmuls aaa lea jne fwait mov mov pusha dec inc outsb sub mov scas sbb mov repnz out sti pushf cmp sub dec repz push mov mov ret test xor mov mov mov mov loop lahf lods and scas fisubrl cs jbe mov test xlat ret cmp inc jb gs push lods jg sbb nop lcall sbb sbb adc mov xchg adc (bad) mov push pusha pop pop fwait pushf sbb ret adc pushf cmp (bad) jle aad insl mov mov sti (bad) mov dec fs cltd lcall add lret cltd pop inc xchg jnp jmp dec mov mov test lret movsb cmp mov pop aad dec jns cmp test pop lret ja jmp fwait out (bad) mov dec mov jp and lahf sbb dec repnz ret fisubrl dec sub js aad dec adc add add (bad) ss ljmp test int push lods fs xchg dec add mov cmp insb dec jnp mov mov data16 ds mov pop push mov dec push xor call jecxz (bad) iret mov or pop popa push pushf push add mov ds jb sub repnz fsubrs mov sbb and (bad) stos in bound mov in xchg test mov xchg lcall cmp inc fdivrs mov mov ret fwait mov or push mov pop pop lahf pop ret stos and addr16 dec stc jg mov push ficomp dec cmpl xchg sbb repz scas dec test mov jp (bad) (bad) pop (bad) mov lcall test (bad) out cli inc mov lahf je rol dec mov clc fildll mov cs aam jp jge sbb repz cmpsb or push out pop insl stos jb or dec aas lds mov cwtl pop jns dec pop ret pop dec mov push pop inc sbb xchg loope or jno pop mov pop fisttp jb roll rolb mov jg lcall aad push in stc mov sub pop inc divb aaa pop dec test fbstp xchg lahf mov fimull arpl loopne sbb dec pop xchg jg dec scas sub push mov dec pop jne pop ret lret lods fcmovnb ljmp leave jl push clc inc adc lret inc pop cmp cmp lcall mov cli jno fcmovu cmp pop mov jmp dec (bad) sbb cmpsl ret push stos sti fcmovu test cmp mov cmpsl roll and (bad) cltd ret sbb push bound sbb das je dec int mov cmp or xchg mov lret pop dec cmp push aam xchg inc mov mov lahf pop mov pop fcmovnu dec xchg mov mov mov sbb scas push (bad) leave pop scas inc cmp (bad) pop cmpsl push push sbbl sti and dec pop pop lahf mov jae (bad) rolb popa mov pop push cmpsl mov hlt jl pop sbb cmp sti xchg loopne leavew maxps sub clc mov pop or pop icebp xor dec dec cmp mov lret xchg (bad) dec pop ret test lcall pop dec rorb jp out popf push pop pop addl out adc fidivrl cli push pop jg pop dec jns inc rcrb inc or fcmovu lcall scas dec pop lahf js dec push push leave mov imul ficomp mov mov frstor jg mov jp rep dec je push cmpsl pop jnp push mov test dec push fstpl push adc add pop das cmp adc pushf icebp push stos imul push add dec inc sbb pop push lock mov je inc inc mov cmp data16 xor (bad) and pop lahf xor and call jnp sub adc push popl dec pop push dec hlt cmp sti pop mov ljmp pop out or pop out fs dec jns pop mov pop lea out inc push pop (bad) mov lahf ret dec push lcall daa xchg pop aad pop xchg sbb cltd repz (bad) adc lahf inc jns push fistl jmp nop subl pop push jecxz inc inc pop jbe fistp inc cmp mov xor pop push mov pop pushf mov popf push mov adc pop jg inc mov mov mov mov js xchg sbb inc push (bad) push subl mov movb lret lahf sub xchg int pop mov icebp mov jmp lret inc cmc add xor scas xchg inc pop or dec roll int pop and lcall (bad) aas inc jne push stos leave imul fistpll mov inc and negl jns pop push jmp cmp pop sbb pop (bad) (bad) les dec sbb int pop pop mov pop pop jp fistpl mov pop lock dec mov mov int (bad) pop add xchg cli pop sahf xchg pop jnp or orl das pop sub (bad) movsl dec je inc dec mov adc push adc add xor push jmp and das pop jns lds pop dec xchg cmp (bad) cli pop adc sbb or cltd int pop fcoml pop mov (bad) cmpsl fistl push mov pop hlt jmp movsb dec (bad) dec cmp jno test das dec mov fnstenv outsb jo dec cmp test lods add nop stc (bad) jnp test loop pop addl push inc cmp sub inc mov mov pop dec cmp loopne sti sbb pop cmp add stos pop lods xchg pop adc dec mov js sub sbb stc (bad) dec jg add lea insb lods orps scas dec pop (bad) js mov inc push push aam ficompl xor ror pop xchg pop adc sbb loope xor pop pmulhuw mov divb cmp out cli push scas inc loop lret cmp lea xor das lret icebp cmpsb sbb pop or adc mov pop int pop rclb jle inc push divb leave push cli cmp mov mov add repnz lahf and sbb dec push cmp pop xor hlt fldcw bound mov stos push in lret inc stc cmp aas push jnp pushf cli pop dec pop bound pop fisttpl xor cmp sbb insb pop mov push in jne sub subl int pop mov cmp enter mov cmpsl fistpl dec inc pop loope imul and sahf mov fmull icebp int pop xchg lret pop dec mov in mov int pop int pop jo fwait jle ss aas js sub je aas fwait push adcl mov xor pop cmp mov jmp jmp cmpsl movsl stc insl outsl inc push xor iret pop bswap mov popa or jnp cmp sub js push mov and sub mov inc imul repz mov rolb inc or inc inc mov add and or adc pop pop movsl cmp imul pusha outsb in push mov shlb les mov icebp cmp xchg cmpsl repz jge mov adc add sbb lcall or mov ja xlat jle push sbb xchg insb ficompl xor xor jbe or mov pusha sbb out dec int3 add inc add mov mov jo jbe jo je stc test mov jbe mov lret cs lods insl dec andl imul cmp cmp repnz jecxz orb mov lret aad std dec jno out (bad) aaa cmp sub ret repz int in mov int enter call and bound add and dec fcomp repz xchg out cmpsb push push or push imul cmp cld jg push jmp lea jne push not pushf movzbw movb movsbw setbe mov pop pusha pushf lea pushl movl movl pushl pushf pushl mov push pushl ret jmp test push xchg (bad) xor into in push mov cld jl hlt pop lods add sbbb xchg (bad) clc imul (bad) jne adc push or xor dec inc mov jp or cmp push xor xor out inc fild jno arpl mov movsl je hlt fcmovb fwait pop insl mov in adc or fisttpll jb,pt push dec and and push leave and cmp inc sub mov out cmc xchg push push sub pop pop (bad) int3 jb les or sti jge js std xor js jmp cmp pusha lea ja stc mov not sub sbb bts add cmp stc call pushf call out out jmp mov int3 fisubr dec ficoml fiaddl or xchg jnp xor lahf xchg ja mov fild push mov pop mul and sarb insl in cwtl (bad) and push sahf divb popf movsb jne aad scas lods lahf jmp into cli jp xchg repnz adc cli xor call dec mov pushf push fidivr cmp pop ja rcrl cmp in mov test mov jbe cmpsb call nop sub repnz and out add mov ds test stos mov adc cmc mov ds ja inc aad in fadds cmc arpl rcrl test push xchg sti mov jbe data16 adc lds jae cmpsl mov xor mov cltd dec mov add ret sbb pop fimul addr16 mov bound pop rorb jb sub clc add shlb jp jmp sbb mov cmp inc scas std (bad) dec mov loop andnps or rcl (bad) out int aaa (bad) loope in cld mov das cmp pop mov mov xor fst fsubs mov cli jb cmp repz mov aam mov or push pushf lea je pusha adc pushf lea jmp repz cmc imul sarl sub xchg mov je and in and cli inc jno (bad) or (bad) test pop es jae out lahf inc fstl test fstpl data16 lcall sub cmp loopne iret sub jne aaa out imul fnstenv fwait mov and cmc cmp mov loop lret (bad) jp lcall dec lods lfs shrl clc stos push mov mov jmp out insb and dec jae lock std std xchg push mov ret jl mov pop and pushf mov pop xor xor sub dec std jge mov inc mov mov pop pop movl cwtl xchg jbe test (bad) sbb in add adc (bad) push in xchg push mov xchg movsl ljmp pushf mov call enter aam inc push ss inc push jne push mov cmp rcrl add jg iret cmp fs (bad) push aam test xor fs stos or jecxz dec lret mov (bad) das dec (bad) aaa dec test adc insl inc cmp dec xchg stos xlat mov jno xor lret out aas (bad) (bad) sbb inc adc or push dec mov insb jmp adc or xor sub mov cli dec mov pop repnz xchg cmp lea and pop jne cld push call sbb ja loope lret add pop jge ret stc push jmp cld jmp daa lock inc push out (bad) pxor jns icebp pop int mov sti pop mov (bad) aaa clc aas (bad) pop jns (bad) xor xor int mov icebp adc imul mov repz adc jne add jg fdivl addr16 mov push roll xor xor mov xor cld jnp cs loope sub push rcl mov ret hlt or fcmovnbe test (bad) dec (bad) jb xchg lret lret mov aaa push sub sub mov mov inc int insl cltd sbb dec xor and imul cmp sbb (bad) iret mov (bad) cmc call clc ror cmp stc cmp cmc cmp setl lea lea bswap pop push pushf lea ja call pushf popl pusha mov pushl popl push push push pushf lea jmp btr daa mov sub shr rcl mov call pushf lea jnp push pusha pushl push pushl ret add pusha pushf mov movl call mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call call divl push mov push mov push jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp pushf lea jo popl pushf pusha movw lea jmp add push push pushf call mov jmp inc clc shr mov sbb call movb jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp inc neg mov cmp clc add push pushf pusha jmp jmp mov push call mov push push jmp clc pushf clc add jmp cmp mov cmp add stc clc stc movl mov movb sub call pushf popl push jmp lea jne or jmp or movl stc xor lea jae pushf inc call call test stc bt sub call add call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call jmp pusha push movl call cmp sub call pushf pusha movw mov push mov jmp das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp mov pushf pushl pusha pushl lea jmp lea jbe mov pushf lea jmp jmp pushf call call jmp mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret push jmp call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp bt add mov push pushl movl mov push pushf mov lea jmp xchg jmp jmp pushf mov pushl pushf popl pusha jmp pushf popl call mov push movb push lea jmp movb call and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call add add push pushf mov pusha pushf mov jmp sub call pop pushf rdtsc shl pushl popf pusha mov setl pop call pushl popl pushf push lea jmp pushf jmp clc pushf ror push mov lea mov call not pusha cmp not push cmc sub jmp ror mov movsbw pushf mov movb pushf mov movb pushf call ror add pusha mov mov call not clc bt not test pusha cmp and pushf movl jmp jmp pusha mov call mov push pushl mov pusha mov push jmp stc mov pusha call jmp cmp stc add pusha jmp mov call pushf mov mov mov pusha mov call movzbw mov cmc (bad) icebp add loope dec add mov pop add clc add push pushf clc neg call shld mov movzbl mov bt stc pushf call pushl popl push pusha push movw lea jmp push lea jp pushf pushf pushf pusha jmp lea jns pushf mov call call sub jmp jmp call call neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call pushl pushf mov pushf movb mov pushf mov movw lea jmp shld aam call mov pushf jmp call push mov push mov lea jmp jmp push pushl popl movb pushf movl push lea jmp jmp pushf jmp pushf popl jmp lea pushf movb pushl push mov pushl mov lea jmp push mov pushf mov call btc mov call pushf pushl pusha mov jmp call jmp movw movb movl pusha jmp shrd not mov stc bt stc add pushf mov jmp mov call adc push jmp cmp sub pushl cmp push cmc sub call or mov push pusha lea je call lea jne push push mov pushl push pushf lea jmp mov pusha jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp mov push call test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp add pushf mov mov pushl lea jmp sub cmc add jmp jmp rol movzbl push add pusha pushl inc call clc test btr rdtsc call mov pushf lea jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp mov pushl call movw pusha pushl popl push movw lea jmp cmc cmp shr jmp mov movb push pushl pusha lea jmp push mov jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp call jmp mov pushf lea jns push jmp movsbw mov pusha pushf mov jmp lea jge push mov mov jmp bsr inc mov test add pusha pushf pusha lea jmp call mov jmp pushf mov pusha jmp pushf mov jmp jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp movl jmp btr dec shl bt mov stc test add call pusha pushf pusha pushf popl call push push mov push pushf lea jmp mov pushf jmp push movb call push pushf pusha jmp jmp mov call shrd inc mov jmp daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp jmp stc call not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call pushf mov push lea jmp movl pushl popl pusha pushf push lea jmp rcl rol or mov bt pusha add mov pushf sub cmc pusha call stc bt sub jmp mov pushf pushf push lea jmp btc btr cltd mov btc pop inc jmp bswap add lea push pusha cmp jmp jmp mov push push movb lea jmp push mov call call mov pusha pushf movw pushf lea jmp bts shr pusha mov cmc bt sub mov test clc call mov bt or movb lea je stc push pusha pusha xor pushf jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp call mov pushf lea jmp push call push mov pushf pushl mov pushf pushf movb lea jmp mov call jmp movb jmp call mov pusha push push pushf mov call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp jmp mov mov pusha mov push mov mov pushf mov call call push rol mov cmp cmc mov pushl call mov call xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp shl bt shr pushf pushf bt call add movw pushf pushf pushf popl pushf movw call pushf popl jmp cmp sub call pushl push movw pushl popl mov movb lea jmp mov pushf mov lea jmp mov pushf lea jmp cmp sub call jmp mov pushf lea jmp jmp mov push push lea jmp mov push push mov movb lea jmp jmp movw movw mov call pushf stc sub call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp mov movw pushf lea jmp inc dec movsbw lea xor movzbl stc bt pusha call mov call lea jne call ror clc clc call cmpsb outsl clc out ret out pop test out cmp clc out push jo out mov clc out icebp mov out movsl outsb clc out cmp clc out ret imul out pop test out adc clc out inc mov out jnp clc out inc jle out jg clc out movb out push test out mov clc out mov out mov clc out jnp clc out dec cmp out mov clc out popl clc out cmp clc out sbb clc out cmp clc out push xchg out orl clc out cmp clc out ret out test clc out icebp mov out cmp clc out mov out push xchg out out clc out mov clc out loop clc out and clc out jg clc out dec jne out ret imul out lods mov out inc cmp orl clc out dec cmp out out clc out push test out inc test out adc out dec jne out cmp clc out pop test out push jo out ret out inc cmp lods mov out gs clc out adc out out outsb clc out adc out cmp clc out push test out orl clc out arpl out icebp mov out gs out inc jle out icebp mov out out clc out movb out xchg xchg out lods mov out mov clc out mov clc out gs out and clc out ret imul out xchg xchg out adc out push jo out test clc out jnp clc out adc out lahf jg out and clc out gs out mov out gs out mov imul out lahf jg out adc out popl clc out out outsb clc out adc out adc out xchg xchg out mov clc out sbb clc out inc mov out xor clc out ret imul out inc cmp cmp clc out adc clc out push jo out push xchg out mov clc out aaa jae out mov addr16 out mov cmp adc clc out xor clc out mov sbb clc out and clc out ret imul out jg clc out movb out and clc out adc out dec addr16 out inc jle out jg clc out dec jne out mov out and clc out dec addr16 out pop test out test clc out cmp clc out push jo out xchg xchg out mov cmp clc out push test out cmp clc out and clc out dec jne out lahf jg out ret imul out mov push clc out jg clc out subb out clc out cmpsb outsl clc out lods mov out mov out adc out inc jle out jg clc out ret out ret out popl clc out inc mov out lahf push out pop test out cmp clc out adc out inc test out out outsb clc out movb out aaa jae out orl clc out cmp clc out jnp clc out jg clc out ret imul out subb out outsb clc out lahf jg out inc test out xchg xchg out gs out mov clc out dec cmp out orl clc out mov clc out mov clc out mov push jo out inc cmp adc clc out adc out push jo out cmp clc out movsl outsb clc out call pusha pusha pushl popl push movw movw lea jmp mov call pusha pushl mov jmp pushl popl push pushl lea jmp inc setno neg pushf pusha ror call mov pushl lea jmp shld mov jmp movsbw bswap mov lea mov js pusha lea jmp call jmp pushf pushl popl pusha pushf push lea jmp push mov pusha mov push jmp cmc movb rol push call mov mov ror (bad) repnz call lea jo push pushf mov jmp pushf pushf inc pusha decl movw pushf pushl jmp shl pusha mov push mov mov call push mov pushf pushl mov mov pusha pushf mov mov push jmp mov pushf lea jmp jmp mov pushf pusha pushf pushf popl movb jmp pushf push pushl jmp movb call call movl jmp pushf mov movb pushl pushf lea jmp mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp pusha mov movb mov mov pushf lea jmp cmc xor stc stc mov bt test stc add pusha jmp jmp jmp pushf jmp call pusha mov call pushf pushf mov pushf push push lea jmp jmp push pusha mov pushl mov pusha mov jmp mov mov pushf mov pusha mov pushf pushf jmp test pushf cmc jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call push push inc jmp mov pusha mov jmp mov pushf jmp pushf jmp pushl lea jge push mov call mov mov pusha pushf pushl ret push pushf popl pusha mov mov pushl popl push lea jmp bt xor movl jmp push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp pushf jmp movw pusha mov pushl movw movb lea jmp pusha mov jmp pushf popl call movl mov call mov jmp bt ror bt clc cmp sub cmp test cmc mov bt sub jmp push movsbw pop lea push jmp push push pusha pusha call mov jmp mov call bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp pushf lea jmp pushl add pushf lea jo push pushf mov mov lea jmp sar add xor bswap rol movzbw mov call mov call lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp movw mov pushf pushf pushf popl jmp mov movb push lea jmp sub stc sub jo push mov shr pusha call mov pusha push lea jmp movw mov pushl mov pushl lea jmp add cmp cmc std pushl popf push lea jmp movw jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call pushf mov pusha pusha mov lea jmp add clc clc pusha shrd pushl mov call pushl popl pushf pusha push pushf lea jmp mov not mov pusha mov jmp push pushf mov pushf pushl ret call mov cld call cmc cmp add call mov movb push push pushf lea jmp call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call xor cmp xor call bsf bts rol mov jmp mov push movb lea jmp call cmp shr pushf movb mov push pushf popl call ror movb jmp mov pushf jmp call pushf mov jmp call and lea jno push movb pushf mov call mov pusha call pushf pushf mov pushf lea jmp call pushf pushf popl pushf jmp call call pushl popl movw lea jmp movb mov pusha push lea jmp pusha mov call push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp movb pusha jmp xor neg movzbl cmc call mov mov push pushl movb lea jmp mov push mov pushf lea jmp cmc cmc add call call push mov mov mov pushf mov pushf mov call pushf pusha mov movl push movw lea jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp pusha xchg call jmp pushf popl pushf pushl popl pushl lea jmp pushf mov jmp bswap mov neg adc sbb mov pusha shr dec call mov pushl mov mov pushf mov pushf lea jmp mov mov pushf mov pushl push pushl lea jmp call mov call call stc sub cmp jmp ror aad xadd ror mov adc bts jmp pushf neg cmc call call pusha push pushf mov mov push call movb mov pusha pushl mov pushf call cmc pushl popl test call cmp neg neg add sets xor rcr add rol dec add jmp add pusha movb pushf lea jmp push push movb pushf mov lea ja pushf mov pushf push jmp bt shl sub mov add shr add mov cmc call mov pusha jmp mov push pushl ret call xchg cld pop mov pushf cld lea call jmp pushf xchg jmp call mov inc clc pushf neg call push mov pushf call movzbl lahf lahf mov call bt clc test xchg cmp mov call xchg stc clc cmp mov bt movw pushf sub pushf mov jmp pushl popl push pushf lea jmp call push mov pushf push push mov call stc cmp mov sub jmp bsr neg adc notl dec mov cmc call pushf pusha mov mov pushf pushf lea jmp mov pusha movb mov pushf pushf mov call inc push push mov pushf lea jmp mov pushl mov push pushf mov push pusha lea jmp pusha mov push mov lea jmp call pushf push pushl popl pushf mov movb lea jmp mov pushf pushf mov pushf pushf mov lea jmp push pushl mov pushl pushl pusha pushl ret bt xor mov push bt cmp bt sub jmp clc lea jno add pusha jmp jmp mov call pushf mov pusha lea jmp push push push pusha mov movb pusha lea jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp dec btc or mov push add mov clc add jmp push jmp push push movb movb mov pushl mov push jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret jmp pusha mov mov call pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call jmp mov pushl pushl jmp lea jne stc push stc sub pushf call movl mov jp pushf mov pusha jmp call pusha mov pushl jmp mov call cwtl mov pushf mov mov pusha pusha mov push push lea jmp mov pushf mov mov jmp cmp bt sub push push jmp mov mov push pushf lea jmp pushl mov pushf mov mov jmp test movzbl call bswap call daa mov dec mov pusha jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp call pushl popl pushf pushf lea jmp or call bt xor push jmp mov jmp pushl popl mov pushf pushf lea jmp pushf pushl call bt bswap lea jae stc xor bt pushf sub jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp call cmc jl daa not notl aas mov push stc test sub jmp movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp push xchg lea mov mov jmp stc add lea jno mov pushf lea jmp push call mov push mov lea jmp jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp mov mov movb pushf jmp test xor test sub movb mov pushl movb lea jmp jne push mov pushf lea jnp pusha movb mov mov jmp call neg shrd movzbl shrd sub jmp pushf jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp pusha clc mov bt clc clc push add movb call pusha mov pusha mov pushl mov pushf mov movw push lea jmp pusha pusha lea movl jmp call dec stc rcr ror btr lea jmp pusha mov call pushf movb mov movb pushl lea jmp inc pushf clc bt add jmp bt sub mov mov mov mov mov push pushf lea jmp pusha aam add mov pusha call push pushf pushf push mov pushl ret aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call movb mov jmp call call jmp jmp mov stc call pushf pushl popl movl pushf movw pushl lea jmp pushf mov call mov jmp pusha sub jmp add add and pop adc add lock add inc fild add add add mov add rorb add dec add cmp add add cwtl dec add rorb call dec add dec add nop dec add leave dec add adc in add and add add jo add lcall add dec add push dec add js add 