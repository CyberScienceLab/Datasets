mov cmp pop (bad) sti iret les rcrb and mov add mov jns lds jne jae sub inc sub std dec mov pmaddwd icebp dec add sub pop sti or xor stc das xor sbb xchg insb and arpl or lret mov js pop mov jae aad jl inc ret in (bad) push enter or std dec pop xchg cld dec test add xchg cwtl adc mov mov cmc sbb enter test push push repz dec enter outsl mulb sti mov pop inc dec sbb pusha adc fwait inc fs sahf sahf jno flds int clc lods out pop pop (bad) int3 fs insb inc insl xchg inc jl dec cmp test and mov dec out jo lahf in call pop (bad) insl (bad) iret sbb xor sbb (bad) mov jge stc divl test mov std push xor inc and jnp sarl fucomp jge leave add jp ret cli push outsl sbb test ljmp aad dec insb pop inc mov lcall mov adc xchg mulb std icebp iret and shl ss js xchg stc inc shll sbb out and jge aas int sbb ret mov cld jno mov inc movsb stos lahf fnstcw in les adc mulb xchg pop pop push les fs fiadd idivb push or sub add (bad) fimul test je push pushf repz lds or jno gs mov sbb mov cwtl icebp pushf mov cmpsl mov or mov push jg scas mov leave loopne mov mov xchg sar int mov stos lock fisttp push xchg mov dec mov push dec mov pop dec enter inc movsb add cmc add rcll mov iret (bad) cmc push lds rcll loope inc loope push inc sub insl mov mov repz add mov int3 lea dec sub lea (bad) loope push push neg lods sub hlt and push insl movsb or mov cmpsl and push and jl sbb push rol mul mov adc xchg add leave mov lock dec mov cmp in dec gs fisubl fmulp fadds int3 sbb fildl push dec test push push jne rolb add out jg lea dec cs pop sbb mov hlt jmp dec lods inc sub or lods push xchg pop test (bad) gs es adc bound mov xchg ret jle add mov jo lods pop and rcrb mov sysexit test xchg dec add mov cmpsb sub add push push mov sub inc adc adc and enter sub lcall jae test sti dec mov jmp push mov call push enter daa shll inc and (bad) mov fistpl jne pop xchg cld jno and mov push sub lret dec or stc xchg mov rcrb push loopne xchg mov fs (bad) pop insb imul out imul aam jne jmp loope gs inc lods rorl mov (bad) cmp mov sbb push idivb test int scas in cmp jbe cmp adc fist loop cmpsl out mov out cld mov adc xor insl js jno xchg std push gs shr push ret test addr16 or add lds ds mov pop add jle aam es movsl mov rdmsr xor in xchg jp xor inc adcl mov cmp dec hlt push fldenv stos adc add or jbe call sbb das enter stos loopne scas out mov xchg loop cwtl fnstsw mulb jne loop mov add xchg jmp sbb cmp pop faddp dec mov cmp cwtl outsl push aad mov insl pop inc dec stos jae stos test ficompl mov adc nop shr test push add addl dec sbb pop ror inc and out jge pop sti and or and dec inc fdivrp ss and dec sub jg fs push jmp inc xchg movsb ficompl leave mov jo xor sbb pop dec xchg adcb push inc out cmp mov jmp push in ljmp sub push add jl lret pop mov push xchg mov mov imul std fsubl iret aaa test loop out and (bad) push mov jne bound jmp ljmp stc dec outsl cld inc ret dec ret in push into push repz add mov xchg mov jl mov dec lock inc jb ficom mov push jnp test jns mov sti cmc (bad) mov add ret mov das (bad) mov lods dec jo (bad) dec mov es iret jecxz stos aas mov das sub adc in push sub mov daa das cmpsb xchg mov push mov or push stos (bad) jo mov add dec sahf out dec pop mov mov push xor imul pop les (bad) out jne imul mov fstpl scas lahf sbb das cld pop frstor (bad) enter insb or xchg leave mov lea sbb cmp and sub add and repnz adc inc les test cld xchg jg adc inc inc mov (bad) repnz push lds pusha mov jo popf popf aas sub dec out lahf fs dec test mov popl fs mov lods sub jp outsl push add mov pop and mov negl call mov rcrl aas cmp pop add ret inc clc mov mov sbb inc (bad) add out std js xchg xchg jnp fs sahf scas ficom mov pusha push add push push (bad) push lds out mov mov adc lods jp ds inc xchg ret test popf faddl ror test fimull aas fiaddl push mov mov repz pop add mov pop (bad) leave (bad) push stos jmp out lods (bad) mov out test dec pop adc ljmp cmp (bad) arpl ja repnz add hlt sar leave push xchg cmp in hlt fbld mov fstpt icebp dec xor dec pop (bad) mov imul dec lods jne hlt mov int3 jmp sbb mov shr inc xchg out sub call jbe popa pop cld ret sub mov dec loope cmpl je arpl pop cmpsl push stos or mov (bad) call stos inc inc aam cwtl aas gs inc xchg adc insb lcall shrb inc ret dec push outsb dec dec not in addr16 (bad) iret and stos cltd in or xor cs pop repz loope test xchg test int3 mov into adc adc test xor jo xchg and addr16 push mov sbb (bad) pop stos lret xor fcompl arpl push fs mov enter xchg in mov or xchg mov mov jg pop in xchg mov aaa mov fsubrp xlat adc sbb movl out aas push loopne insl outsb xchg mov lods dec push lock divl push add mov (bad) aas hlt mov aam in xor ret mov mov dec movsb movsl dec mov (bad) mov jo dec in scas aam fs enter fsubs (bad) push subl add insb rcll cmc or mov out jnp xchg mov jo mov aaa or outsb fwait inc mov in loope push mov or inc movsb xor add test pop ljmp push mov jo xor dec stc xorb xchg aad idivl mov test in shlb mov push repz dec adc mov pop js cmp sti inc jl adc rolb push cld ja xchg xchg lock rcl add pop inc outsl and pop push pop mov xchg inc inc sarl mov mov pop sub jecxz jle out mov mov das (bad) sahf incl sub (bad) sbb std aad jp dec jb xchg lods test stos jg push insb jl mov push popa decl push fwait roll add fs enter scas pop adc enter mov fdivs fwait aad xchg (bad) mov cmp pop rorb clc inc push cmp mov fsubs dec dec add (bad) sbb adc mov dec pop enter popf insl pop test jbe jge sbb mov pop out push push inc push aas pop dec push xchg push mov test sub inc dec es jl fisubl mov dec or cld lahf outsl xchg pop clc add pusha xchg out push ja jg sahf mov rcrl fs xor je mov dec or call dec sbb fs rolb sbb mov test mov outsl jg mov fs mov (bad) cwtl push pop out pop repz push das jns adc les (bad) pop into out lods mov mov inc xchg pop mov pop sub scas aas in aas mov sbbl jmp es push imul das adc stos imul pop hlt hlt icebp rcll mov ljmp lock xchg pop jne push mov outsb shlb cmpsl cli sub outsl jno mov xor mov (bad) push sar or cwtl loope cmpsl dec inc xchg je push pushf das dec xchg mov or rclb mov js adc jne lods adc xchg and pop clc push jae mov mov pop push (bad) int hlt mov sti mov push rorl (bad) cwtl adc fwait adc aam mov test fimull inc imul mov sbb xchg mov cmp pop in (bad) movsb or lods xchg xchg mov imul push scas lret ljmp push inc mov xor fwait data16 sbb add fisub adc mov xchg sbb pop idivb push imul (bad) xor dec cld adc outsl loope dec and loope pop fwait iret or add into fisttpll out cmp jl jo dec dec dec pop rclb inc pop mov rcrb ret (bad) clc jl pusha pusha mov insb imul outsb pop fwait and xchg lret loop fwait nop in test int3 mov dec test cmp sbbl hlt mov rolb jno repnz push mov dec out adc out sbb movsb jl ret sub push sahf push hlt pop jae call and pushf add jns pop jno push mov lds in dec icebp cwtl push lcall xchg jno xlat cli xor xchg (bad) in push mov or mov adc push mov data16 (bad) fcmovbe lock pop and sbb mov push jae imul inc adc in cmp nop cltd ja xchg data16 lret rorl fisub mov xchg outsb sarb into mov iret sub notb addr16 lds mov xchg fnstsw jne dec sub dec cld xchg pusha in sub adc sbb dec insl xchg xchg xor mov or std fdivrl pop (bad) jmp int3 and xchg cmp mov xchg aad jne scas jecxz lds push xchg int push bound mov in push inc in movsl pusha fdivrl aad imul mov push in inc icebp add cmpsb add out mov cld adc test mov int imul out add or ficompl jecxz xor mov mov hlt scas sbb xchg push es stos adc pusha movsb sahf xor movsl fcompl std mov nop adc imul rep jg mov stos mov inc adc pop pop inc cmp bound leave mov (bad) jl clts scas stos lods (bad) lods mov mov xor jecxz (bad) iret insb dec fwait hlt ret iret push lcall add pushf hlt fdivl pushf ja sbb insb ja mov mov jae iret leave in int3 xlat inc pop adc imull (bad) vmulpd pop or (bad) cs ljmp cmp hlt xchg xor idivl sar nop jmp test add xchg jle or or pop sbb xor inc ret xchg inc int adc stos add xchg pshufw add xor loop and jns or dec out cld movsl mov in jne jp repnz or sarl and jp cld pop push mov fs lea (bad) call movsb popf inc sub xrelease fisttpll mov call pop (bad) mov mov stos add loope mov jge push fs push (bad) sbb les add push dec dec pushf jb fisttpll arpl mov add dec add or pop mov mov mov jne adc fdivrs cli add mov mov sub popa stos push test mov xchg xchg pop jecxz adc icebp data16 cld pop int3 scas and push lock fmuls push outsl decl dec lds hlt mov lods sbb js jne (bad) jecxz addr16 and arpl mov push dec loope negb test add shr test push stos imul inc les dec sahf add cwtl js push aas addr16 movsl es out ficompl or repnz call (bad) xchg pop (bad) add ds mov xlat popf sbb mov xchg push daa jns or iret bound push shlb push sbb jp dec int3 (bad) xchg into test es mov (bad) test mov dec push add jg add js add popf into mov dec es mov enter mov test in push xor dec dec test sbb inc gs lcall xchg push jle inc inc int add add outsb enter push cmpsb sbbl (bad) cmc xchg insb xorl insb movsb add pop push jl in jmp mov fidivr xor mov push fldcw adc fwait test push jne sub push push mov movsb out in xchg sub lret cld push jp inc jo nop in fdivl or test jl icebp dec add adc (bad) cmp sbb in lods jno xlat cld rolb movsl mov pop jecxz loope lds outsb hlt outsb jae jge test movsl (bad) or movsl mov pop fwait aaa jne leave pusha loope sub dec fildl cmp xor aas xchg cmp cli add mov xchg push imul push ja xor pusha cmc in mov fwait adc or push and pop mov int3 pusha mov int in rcll std adc add leave int adc xor sahf cmpsb (bad) cld mov hlt pop loope (bad) ljmp aaa mov mov into jge mov push ret dec add ret gs loop mov push into test add int3 xor dec arpl or and call (bad) adc outsb sub in dec vmwrite xchg xchg icebp xchg lret stc outsl iret push repz std in imul fs fild mov push and rcl ficom or dec es pop push dec adc dec (bad) into mov js test repz daa xchg push insl in push pusha test jl inc sti mov test sub outsl mov and jo ret mov sahf repz std and xchg pop ja dec dec data16 in adc loop cmp jbe push mov mov inc (bad) mov jmp mov pusha out xlat adc sub daa je popf lret jb rcrl out push sbb xchg mov push xor out pushf daa mov pop cmpsl and test sbb bound or jb repz movsl leave dec roll sbb es into lods lods push test cld xor mov mov (bad) (bad) mov push push dec push and inc mov dec jge icebp jbe adc mov or push fyl2x movsb mov pop inc stc fistpll int3 mov scas nop pop clc scas fsubrl mov scas xor call scas pop je shlb scas xchg leave push sbb popa add sub cmpsl cltd mov jne push cmpsl mov scas mov dec scas or push add sub dec pop mov shld cmc test fsubrp mov or mov int3 cmpsb mov out jb lret out repz scas sub xor (bad) fimull call inc stos fcomip loope mov push mov inc mov mov jl cld pushf sbb pop xchg mov je es out dec jle stc ffreep adc xchg push pusha add lods jl inc pop jp push add lret loope inc and in mov dec in les (bad) push cmpsb icebp ja mov sub sbb inc mov dec xchg arpl ljmp divl cmp ljmp jmp jmp or out movsl pop cmp xor or popf sbb rolb mov pop lret inc mov xor or faddl add mov push and stc pop mov (bad) mov imul nop xchg aas jge out faddl orb repnz xchg mov sbb lds pop dec pop jae dec mov mov xchg negl jle sub jns xchg xor push shrl push gs mov inc scas fisubl pop inc push mov ret leave stos adc test xchg lock add mov int faddl stos mov mov sbb mov stc insb jl fisttpll int3 js xchg lea (bad) movsl mov ljmp xchg int3 test bound (bad) mov mov jmp mov out pop push jnp arpl into stc or ds xor lods adc fucomip sbb ljmp out aam les cmp mov and iret mov lock fwait les js mov (bad) jge shrb xadd mov xchg mov js inc mov adc icebp xchg mov lods jno mov push insb mov nop xchg outsb outsl adc fimull mov stos imul lods (bad) out mov sub cmpsl ret je mov adc outsb rcl inc add dec push fsub sar arpl sbb add fdivs xor rcrb adc pushf xchg cs idivb mov and or sbbb jo cltd adc mov scas mov or inc xor cmp pop clc cmpb mov mov mov mov sub mov cmp dec scas pop es xor xchg imul push pop aam int cmpsb fdivs stos movsl clc loopne dec mov push iret mov rcl add sbb mov cmp dec std and or pop mov scas mov fisttpll jne xor in inc or dec (bad) data16 add icebp icebp enter or cmp outsl inc cmp jmp ljmp movsl fnsave dec rclb mov jge cmp cmp mov cmp lock cmp xor call cmp dec jb mov addl outsb rorl cli sbb inc clc insl inc add sbb xchg inc mov into cmp cmpsl hlt decb int3 test call repz jecxz jnp xor cmp ss xor pop pop popa scas aaa and gs xor mov dec fisubrl sbbb incb int3 push adc pusha add pusha mov dec (bad) call pop iret and lret jecxz cmpsl mov hlt xchg mov and pop and add cwtl push push into push mov in xor jbe inc sub jge sahf mov xor out aam pop jmp push fldt aaa ja out jne pop jne ret vmovmskps icebp popf mov into (bad) cli and mov pop mov and in imul or adc xchg loope or scas add sbb (bad) mov dec and loopne icebp mov push aas jno cld xchg test scas inc jb (bad) lret popa out mov inc loopne push cld (bad) adc jbe test mov and inc mov jae faddl pushf mov cmc out int3 loope cs pop jle xchg push push xlat push outsl dec mov (bad) idivl or inc inc mov dec test out scas sub or jge lods dec xor in pushf negl (bad) or add psubusb xchg subl insb rcrl pop and ret sub loopne jle push sbb inc jmp loop in jns push mov xchg pop rorb incb jp shufps icebp push (bad) mov fnstcw or pop or dec sarb jb sbb adc jns (bad) cld les sarb test inc insl sub adc mov test jp js jl ljmp sahf mov andb pop addr16 fcoml fistp imul jae lods push dec hlt push or clc mov xlat adc fs lahf test mov xor daa out lds cmp mov pusha mov outsl repz add xchg fs jo push ss mov xchg jb (bad) stos mov mov adc iret iret dec jns fmull test ret ja into lods xchg stos inc mov pusha xchg mov mov mov outsb test mov lods loope leave push or xchg rcr push push repnz nop out ljmp inc pushf dec pusha mov sbb mov nop ret inc sbb adc scas ljmp jae lods or fimull jge or and xchg sub mov adc adc cmp add ret lret jecxz pop pop out das mov dec jbe cmp ljmp test adc pop jl pop int insl in mov and inc mov mov xchg mov mulb mov ja int3 inc push shl dec dec pushf add fsubr add movsl icebp jbe dec je (bad) in mov out xor in mov pop adc sbbb test (bad) js jne pop jne push lods call sub loope xchg fstpt dec push xor push repnz xor inc sbb xor les sbb or xchg jp push cltd xchg orl aaa push ljmp pushf mov pop mov or into sub mov pop mov fldl cmp jns mov mov cmpsb lret das out jl xchg mov fisttpll jmp lock popa or imul add xchg push cmp mov jmp sahf lcall mov jnp in mov pop cwtl sub jmp add jnp xchg sbb push push pop xor fs pusha movsl dec repnz add loopne sub cld xchg arpl dec outsl push sbb addr16 sbb sbb add xor gs inc out push xchg pop inc jnp (bad) cld lock push sbb mov inc mov push fs loopne lahf mov dec sbb sbb lret rclb stc mov lods adc test arpl cmpsb test xchg mov fsubl lahf cmp in fisttpll mov pop xor daa in push mov pop mov (bad) or add jp sub pmaddwd loopne rclb dec rolb jnp jge adc bnd imul int or mov inc fwait pop xor jmp push mov int3 pop in pop daa addr16 push push jl mov into adc (bad) loopne lcall or jl adc insl add and sub rolb in xchg push adc sub outsl or adc ss fmuls (bad) push (bad) sbb add and jbe push insl andl inc adc cmc add int3 sub push sub arpl cmp rcrl stc scas ljmp xchg test pop xchg imul aaa popa or insb jmp je pusha ljmp loopne adc dec xchg (bad) rolb and mov ljmp push cmp popa cmp mov adc xor push test dec mov cwtl outsb or inc fdivs (bad) adc mov cmpsl cmp jg ficompl xor in jge add (bad) lock mov xchg pop sbb push inc stos movsl repnz xor into and popf stos aad das daa in xlat pop popf mov (bad) icebp mov and mov adc fcomip pop jo lds hlt push cmc mov mov imul pop and leave adc dec inc inc push adc aad and push nop sti mov fisttpl lea mov mov pop adc xchg in fcmovne shlb xchg es test sarl push push (bad) mov nop sub dec xchg fmul or fcmovnu cmpsb hlt pushf pop cmp xor shr sub mov popf imul and mov push shlb jl fmuls jbe pop mov int stos jbe rorb mov mov mov sbb ret mov aam daa pushf std mov dec mov enter rclb int3 mov inc rcll sahf push sbb add adc inc lahf orl test or fdivl jp stos ljmp rcrl aaa mov dec jl dec fs pushf adc scas xchg pop push (bad) jo pusha cmp stos and sti push inc jo stos out dec xor and mov sub in insb mov inc inc mov ret ss enter sub dec std xchg scas jbe mov mov gs (bad) in mov in cld mov dec je es sbb and xor adc out xchg sub shlb dec sub es inc js imul push inc iret fs jge int3 jns rolb in pop mov xchg stos and lock xor iret jo pusha call stos and sbb xchg (bad) xor push mov or adc fstpl add add pop dec iret sbb inc mov in inc lea mov pop hlt (bad) mov pop mov jle and std fsubl mov lods sub adc push sarl insl xor xor stc inc dec scas adc xor daa jo pop movsb mov mov mov mov hlt (bad) pushf push mov dec cmp xchg aaa imul sbb pop out mov arpl (bad) pop cmp mov add mov mov cmp xlat and jmp pusha in test call add dec xchg int jge mov push pop pop add pop int3 push push aas icebp add mov hlt mov pop lods pusha incb test cmpsb std stos sub jb es (bad) fwait dec adc roll xor pop or sub fcoml bound xor and scas inc std mov ja cmp mov pop sbb jecxz or jmp add add ljmp add sbb orl lret mov in frstor cld xchg adc add or mov push shrl shrb or mov hlt fnop jl ret xor loopne test pop hlt pop call add andl iret mov bound xchg mov and mov outsb insl popf or je dec movsl push int3 push mov stc scas lret stos dec or fidivrl int3 dec dec (bad) mov les add dec sbb lahf dec add add fdivr and loopne movsb lods loopne pop jl dec jnp mov cmpsb (bad) cli cmp in pop add ret xor ret and faddp pop sbb aas jo pop jge das pop jp shlb inc cmc or les add xchg pop dec repnz loopne mov movsb mov pop repnz jle cld (bad) jae fsubl roll bound xor push pop xor xchg aam cmp and sbb pop stos arpl int push sbb int3 into sbb js bound popf nop divps mov mov xor jns bound hlt mov xor pushf mov push mov in mov rcrb pushf push and in enter add imul dec sub fcompl jne add pop enter mov fisttpl add sbb fwait add mov test fbld nop sbb or lods mov les and enter sbb lods iret cmp sub cmpb sbb pop push sbb pop xchg loop sbb cmpsl (bad) loope mov fwait jl add fmull out xchg xchg add cli jmp enter mov dec cld push fs in inc scas xorb and loope dec (bad) xchg add inc pop popa cmp mov and push and sub or xor int3 adc cmovo es enter imul in inc dec nop lock inc scas lods stos sti add rclb js mov or hlt imul clc loopne movsb shrb push and jno dec or iret sbb push xchg cld inc mov lock cmpsl xor jp rolb je leave iret test rolb xchg jle stos push push sub push scas test orl jne loopne test inc movsb sub dec push je xor sbb adc mov je sub push xor vpmulhuw pop inc pop xchg pusha loopne pushf push in lcall mov movsb test lea (bad) jno or jb fcom pop mov cmc leave andl sub xor pop aam inc cmc mov int3 stos fldt pusha adc sbb test mov jmp dec push pop fwait mov iret jecxz sub repz pusha cmc push mov xor lock mov sub out xlat dec rolb loopne jae imul sbb xor xor and loope dec movsl rolb dec xor mov jle sub stos dec stos push cld inc roll loopne int3 jo pop call ljmp xor xor jecxz sbb mov jno mov js xor sub xchg addl push stc fs pop push ljmp dec aam or mov aad jl sbb jns xchg nop xchg dec add popa add mov xchg in xor ljmp mov out and jl aad mov movsb jl aad mov add insl mov adc inc add test pop pop inc xchg push jl gs iret xchg xor call loope iret loope popa add fdivrs fisttpl fldl inc add mov push stos adcl mov adc cmpsl mov jge cmpsb (bad) enter dec stos in je fnsave mov push lock add sbb or jle fnstcw sub shlb in lea mov mov dec icebp mov nop iret jo mov or sub ljmp test jno int pop pop popa mov scas or bound je dec mov or (bad) ljmp stos jecxz arpl jmp jl and nop xor push and fs daa cld pushf lret cmp mov bound pop (bad) mov jns int3 push or jge add inc add fldenv or out sahf push dec int3 cli fbstp push test fs mov in inc scas cmp (bad) insb daa movsb jl mov mov sub mov add and and sti add sbb js movsb mov pop inc sub xor xor cwtl sub fcoms pop arpl pop add sub sbb push shl and nop bound pusha stos es push mov scas aad push loop push incl mov in mov stos jmp shl shlb mov adc jne pushf xchg mov mov test out xor fs or mov loope dec out int3 xor addr16 pop pop add inc fwait (bad) cld add xor mov add cmc push int inc xchg jecxz fwait pop sbb out and pop xor movsl pop push mov cmpsb jb loopne cs mov jl inc pop jo imul push and call sub sub and xor mov in jo clc popf xchg lret dec and mov adc xor mov xchg pop loop fwait test hlt pushf mov fs jge movsl mov or pop jo mov xchg loope iret (bad) sbb add pusha lret cmp mov (bad) sbb stos jno mov jl out adc add cld hlt aaa xorl aam sbb scas dec mov into push mov xor jecxz sbb inc scas insb stos mov mov xor imul cmp jmp and fdivl inc xchg test repnz jns or dec push fbstp dec pop insb repnz jns,pn mov lret cmp enter sub add add pop mov mov aad jne push jns mov dec out and out out imul fs sar adc mov mov pop ljmp push je jp dec jl adc faddl and andb faddl pusha aam pop pusha jo pop loopne (bad) ljmp adc xchg cmp adc and movsl adc jns test fs je cmp inc xor push icebp jl addr16 hlt pusha movsb dec push popf ja cmc call imul xchg xor adc xor adc xchg scas mov (bad) mov loop std int3 lods iret std les movsl hlt fsubrl fs sbb andl popa and fs outsl aam insl push call hlt push inc test xchg jb,pt xchg test clc xor mov and sbbb inc dec pusha je movsl jne pop sub xchg loope dec inc bound cmp jne sbb jno adc ret mov je xchg loop mov mov jmp jecxz and fwait inc jmp mov imul jbe test pop insb pop add pop cmpl aam fiaddl and arpl cmp pushf mov (bad) adc mov addb cmpsl call adc add push mov mov std int3 bound xchg rcll js aam cltd loope mov (bad) jo loopne or jne push mov scas and movsl sbb jno xor add insl (bad) iret push jno arpl jne ret in dec scas fcomps jo arpl or mov rol int3 or jne push ds rorb xor push fdivl mov shll loopne ret and int3 loopne scas xor or mov or loope cmpsb insb addr16 iret inc fwait xchg adc popf mov dec repz popa adc mov icebp jle mov fcmovne mov hlt cld dec sbb mul neg dec scas scas stos xor fstl mov mov clc push out imul mov or and fs or (bad) mov adc pop add ret mov imulb xor and loopne push jl push in rcrb in popa and pushf pop subb bound pop (bad) mov (bad) hlt add mov or push (bad) hlt add scas hlt aad std int mov stos sbb or mov gs cld jno enter xor xchg mov or lret lcall or test movsl das mov ret lcall pushf jmp imul sti add xchg lahf xchg icebp mov jge test inc pusha bound xor or nop mov loopne cmp inc mov nop mov es mov add jl dec stos cmp push mov pop or in sbb inc mov fsts mov (bad) ds xor jecxz sbb sbb (bad) adc mov dec mov sbb (bad) dec es sbb std mov mov cmp mov jmp sub or cmpsl mov adc jbe movsb inc push movsb mov inc dec nop xchg push xor add cmp in and (bad) cmp std and clc push or sub or out (bad) loopne or popf roll rcrb adc jge pop cmp adc lods and mov loope jae jne dec hlt call aam aam int3 lods cmp fmull insb stos aas fs fmul les sub (bad) add mov mov cmp or or je xor mov mov jo (bad) mov in xchg jl xchg iret or into push xchg incb mov mov xchg notl test fldcw scas xchg cmpsb rcr daa scas cmc sub jp xchg mov std cmp xchg xor ror pusha enter add repz bound lods iret lock cmpsb popa hlt pop pop out aad sbb enter xlat xchg dec test bound movsb sbb out sahf aam aam cld mov dec je xor imul fmuls lds jne jg and xchg cmp mov cmc pop in addr16 stos mov loope add mov lods xlat ret lock fiadd xor aad inc dec pop leave xchg or loop cmc les jl js scas or es or call fstenv adc mov mov push xchg inc dec cld xchg mov jns inc mov inc stos addr16 dec in push mov (bad) xor js movsb iret std pop shr sbb jmp mov sbb mov in enter mov jne cmp (bad) stos sbb (bad) cmp and nop test xchg sbb pop dec inc push pushf lcall mov inc stos xchg (bad) xchg test and or in aaa mov cmc add ja mov add enter or pop movsl clc (bad) (bad) dec mov xchg adc fsubl outsl bound clc imul or xchg pop mov cmp sub and dec dec push lcall cld xor call mov ja xor test nop cwtl out nop sbbb jle and mov mov xor adc xor popa dec adc pop jg xchg push jo iret push adc mov in mov call mov mov dec (bad) add movsb pop in mov loope in loope inc and mov fucomp and dec pop fimull add cmpsb add jge sbb dec test rclb loopne sbb sbb push mov mov lock xor insl lods lods mov dec out test and push add repnz hlt in rcrl sbbb sar mov xor xor xor jg aaa mov test jl pop xchg fldt cld lcall lods and adc add cmpl sbb xchg pusha js jo mov int3 push mov jge pop mov mov jne add jl jae push enter mov pop push add mov fcoml fucomp nop mov jl xor stc xchg in call fmuls cwtl stos and loopne,pn mov mov shl xlat movsb adc sub in mov insb mov and fnop in xorl sbb mov add pop je sbb fs addl in and aam orl dec pusha push pop les fs lock shlb fs xchg sbb xor insl jmp and out in mov fs fadds out xchg imul push pop dec mov aam jne xor test repz push dec dec aad add jp and loope int3 push loope jo iret push sub stc mov cld push rorl lock pusha inc pop int mov xchg dec push jo and das scas test jmp or sti inc popf (bad) mov pop mov mov (bad) add pop add out jns fcmove mov and or js fistpll adc dec add popa je mov and ret lret mov inc in sti add iret push pop ljmp jne mov inc stos enter ror mov mov cmp jne adc rcrb or wrmsr pop insl xchg or repnz call cld rcr jo cld int mov stos jl mov xchg mov aam aam mov mov ljmp lahf mov icebp mov pop xchg mov stos jecxz pusha mov nop sahf mov pop js dec movsb jl daa int3 pop push leave enter cwtl jb andb stc and fucom out bound mov push sbb clc call push int3 js mov pop scas adc xor in jo and test nop adc dec xor push nop jle mov gs push cmp (bad) jne testl jne push push dec int3 addl push cld sub add mov mov loope iret push sbb jmp enter repnz dec jne fcoml call push push (bad) and and jmp add mov (bad) ljmp xchg mov pop cmp enter or out mov or (bad) out xor push movsl inc call movsl dec mov sbb mov in jno mov addr16 mov adc sub sub mov aam jle lods add imul or jge pop int3 jo xchg repnz add faddl and xorb inc in pusha aam pop imul xor xor push adc pop sub iret push fsubr out in popa jo and fidivrl movsl adc pop adc pop pop movsb push and pushl or in mov push pop lea dec mov push (bad) cmc sub roll mov cwtl aam lret mov test or dec inc fist sti gs dec sbb das inc imul hlt lods mov dec lods or negb mov mov xorl sub mov mov stos enter dec inc jmp inc mov adc xchg pop in js gs mov rcll (bad) bound jmp sbb scas jo dec push nop (bad) loopne or lods and fdivl sbb pusha inc (bad) mov call xlat mov jl pop dec push pop mov scas sub mov jge andb hlt aam popf push roll sbb xchg or sub and xor rcll in xor incb add jne and aam push addr16 les jns and jmp adc add out jmp int hlt icebp arpl mov pop adc jne enter in mov or mov push scas xor ja sbb lahf add jno mov leave mov loopne push fs mov ret pop mov pushf ljmp (bad) cld movsb adc lods mov add les pusha jl mov scas mov les add scas insb jecxz add push (bad) lahf (bad) jl mov pop jno jo mull inc xor dec jo push ret jmp mov in int3 dec inc push lods in push add testl add enter adc inc scas je xor cmp lods adc fs pop cmp sbb in push push ret pop inc movsb sbb mov stos insl push sbb cmpsl cmp cld loope lods pop inc fstpl mov pop mov cltd ret jp orl pop js pop or (bad) cmp mov loop stos mov pusha sub adc add sbb add orl push cld jb lods mov cmpsl adc mov jle sub mov enter shlb rorb shll sub repnz idivl mov or (bad) push jg jo adcb cwtl js shlb jmp add popa cmp mov or dec jle cs sbb icebp pop dec sub js ret push je movsb es les push mov add nop aad int3 popa (bad) mov ljmp adc lock int3 jp and cmp push sub sbb stos insb insl mov dec mov add movsl xchg fs pop enter jmp ljmp (bad) mov rcll mov addr16 dec insb fnstsw arpl mov jl (bad) dec xor xchg or lahf jmp pop mov cld or mov and push test loope mov or pop mov adc mov inc jmp je pop out mov jg xchg mov lods (bad) jl adc cld cmp fsubrs pushf stos daa jg mov cmpl je enter mov nop icebp stc mov xlat movsl xchg lret repz xor fs jmp jecxz sbb xchg stos jno mov cmpsl or enter xor stos pop cld test xor or or iret push or jno mov jns dec mov jecxz stos add aad jne jmp arpl roll jecxz enter cli loopew leave push sbb xchg dec add mov and aam out test fadd or mov dec sub orb popa mov push stos push mov mov test inc cmc aam scas adc xchg pop or mov mov dec movsb mov mov jae cltd xchg jno sbb jmp jg and pop cmpsb mov fs xchg dec mov add sbb rclb orl dec cmp inc pop (bad) call sbb mov data16 xchg js pop mov fcompl call sbb mov sbb dec cld je xor push lcall cmp enter mov push xchg mov push cmp sbb jg and iret pop dec lock push clc scas call pop add fwait scas (bad) in mov ja mov clc int3 (bad) lock cli loope jns xchg mov inc lods pop pop cld sbb lods iret orb loop dec pop lock jae (bad) sbb dec pop xor jbe mov loopne out cmp (bad) mov mov jbe mov mov dec jo jmp mov ds jne,pn xor je movsl pop jl and popf sbb sub in cmpsb dec test pop push jl aad test mov mov ljmp scas loop aam xchg arpl sbb pop push mov mov iret pop test jmp mov jno (bad) dec je es jge xor cmp mov fmull lock or pop fldl pop sub out lret in leave mov iret lods sub sbb mov shrl adc insl add jg stos sbb mov add iret ficomp out add xor add bound rolb add jge cld pop mov dec mov loopne dec cmc gs jo shlb ja ret push fwait or mov fcoml mov mov mov jns fsubrl js sub in mov inc call loopne enter enter pop jge jns ja and (bad) mov mov imul mov dec add add mov loopne dec fcompl pusha enter jl push in leave xor push cwtl inc movsl enter push xchg or xor popa and mov movsl pusha imul adc lcall sbb mov jb stos pop in mov scas leave mov pop push cmp mov cmp mov pop xlat push int3 in jns jg or dec add jns pop test push inc inc in or sbb mov lret add dec fdiv inc inc mov dec inc mov xor enter or inc and mov and xchg and cld xor jg sbb mov jecxz imul popf push push adcl iret push in jns mov loope cmp test in sub lds push std pop mov stos lods je mov push cmp fs mov sbb popf sub cltd movsb and or pop shrl pop push xlat xchg inc out lock sbb mov adc stc jns pop cli jge insb mov jmp sub adc test cld lcall pop into int3 jl shlb mov push in sbb push cmp stc mov js push (bad) mov scas cwtl stos and mov cmp call dec push (bad) mov loopne out lods pop ret mov and mov pop repnz pushf jbe lea pop (bad) es pop sbb stos mov mov add insb pop loopne sbb adc shr mov in popa fs jae int3 sub out shlb sbb lods fs into add sub les dec insb push enter xchg int3 ljmp mov in clc push es pusha in test lock sub cmp mov pop push insb out bound sbb into mov lcall andb xor push in sub jae stos repz push cmpsb mov test pushf loope int3 lock daa and fnop clc mov es mov dec popa and mov xchg rcrl (bad) push loopne aad add mov test mov jl sub movsb (bad) sahf push dec loop fmul dec in xor xor push add pop jo and xchg scas xchg clc nop push cmpsl xor nop jo push jle mov pusha ljmp dec jns negl xchg hlt sub jae mov inc xor inc fs pop mov mov loopne lods jecxz dec rol in sbb cmp mov das pop subb (bad) mov test adc jnp pop frstor push fst clc mov add sarb in movsb or lcall hlt test inc or add mov mov jae add (bad) repz dec shrb mov jp mov sbb lods ja adcb sbb jp stos in mov int notb (bad) aam mov cmpsl jmp insb push cli in mov test movsl pushf push in shl insb enter mov (bad) lock mov hlt (bad) (bad) fdivl sbb adc fwait lds out call je and add push cmc and jl jne cmpsl mov xchg jo bswap loop lds inc jno pop mov cmp out mov mov sbb jge out je arpl js adcl (bad) or sbb push test jne rol stc iret fwait repnz repnz jo (bad) movsb addr16 fs je mov mov cmp or insl cmp daa das sbb lods add pushf xor xchg dec or outsl cmp fbld adc dec inc stos add dec add cltd push mov mov xor lret scas or sbb jecxz fs sbb insb mov loope fs inc fwait (bad) ljmp ret mov dec insb sbb jmp js addr16 sbb mov xor add dec ja jo sub xchg arpl lahf jle out push push add test loope lock add roll cmp push mov push icebp popf rep inc stos js pop mov mov xchg ja xor mov pop fsubrl les cmpsl rcrb mov jge int3 jmp iret cwtl in adc (bad) in pop shrb cmc pushl pop outsb sti add lret insb pop and xchg shlb xchg push dec insb and cs pusha jg (bad) sbb adc and push dec popa mov xlat xchg dec iret push out cmpb cmc loopne int ljmp es dec inc cmp adc dec push push mov pop test pop in cmp test ljmpw enter xlat xchg pusha cld sub xchg dec sbb mov push pop frstor lret dec inc mov mov aaa les pop aas jmp and mov sbbl dec jo mov jo arpl mov inc sti aaa sub addr16 lods lds push in xchg stos sub movsl jg fsubrs fs popf ficom and sbb (bad) int3 sbb mov test or sbb dec lds xor movsl ret inc mov fsubr fstl add aad fstpt add ljmp adc or push bound push repz mov cmpsl aad dec push fcomps jns das insl insb dec xor push fwait mov imul out in icebp push and jbe dec cmp insb mov add or out lret dec inc jae cmp push mov jge or inc aam push hlt mov sbb (bad) fdivrl jo xchg mov ljmp xchg push inc int3 push mov push stos sbb dec xchg adc pop jl pop ret (bad) (bad) (bad) adc pushl xchg jb iret les inc jg xor int jo mov xor xchg js mov inc jge lahf and or mov shr or xor (bad) nop repnz dec (bad) mov mov hlt lahf xchg gs outsl ljmp sub les mov bound pop xor xchg int3 int3 shrl mov mov fwait dec dec pop lock lar and inc adc rcrb sub mov das lods lret sbb push leave mov add jecxz or cwtl adc push jbe frstor inc push mov sub mov arpl movsl cld push insb adc loope popa push fs lock or icebp push xor sbb xor sbb xor sti dec push xor (bad) jb dec jecxz sub je dec cs xor cmp or dec rcl mov call mov mov jge pusha push test lods shrb scas mov (bad) cmp xor xlat mov aad dec or jo adc inc pushf lahf add jns,pn mov aaa movsl (bad) cli call (bad) loopne cmp (bad) (bad) int (bad) lods lods addb in lods jge mov cwtl sbb push imul push xor or insb and jg ljmp aam jns push movsb imul mov psrld mov or movsl pop mov and lret pop hlt pop popa nop ret mov sbb das out dec subb popf mov loopne jb daa or jl or movsl xchg jmp jmp cmpsl cli leave adc mov ds push xor inc sti lock jg mov lahf cmp std aas aaa pop inc int3 daa dec pop enter test loope jae and jp mov fidivr hlt hlt aad sbb xor jle dec mov imul arpl push aaa inc notb xchg push inc adc adc inc lret push ds call inc bound leave aad sarb js jne dec mov inc cmc insl cli pusha inc js jne or pop dec cmp mov iret stos es jno dec (bad) int or jl rclb pushf rolb sti js dec pop mov mov sti outsl cmp or push shrl jge sbb mov mov aas mov adc loopne add jnp out fidivl mov ljmp or cld xor xchg into and (bad) sarb mov push inc aad cltd xchg adc out inc dec and mov xchg lret or ljmp mov aas dec pop mov bound add jo adc int3 mov jge jbe adc push ja punpcklbw std push push or insb movq ret adc idivl dec jbe lods je jmp xor mov call (bad) mov je (bad) jecxz in pop inc push fs add imul enter mov test rorb xchg sbb mov pop std push mov iret test nop ljmp lods pop and js fcmove push or inc test hlt dec cmpb das push ret shl cmp gs sbb jg in mov icebp outsb inc mov outsl mov imul mov repnz push xor xor cmp nop pop pop xchg adc in sbb lcall movl mov sti cmp mov rcll fsubs arpl pop andl xchg cmp and inc add and repz push in fucomp sbb add sahf sbb orl add fcmovnu inc mov push test mov and test sbb mov clc mov sbb or push iret adc push fisubrl push push fwait inc jle mov sbb inc test rcrb cmpsb mov outsl icebp aad (bad) adc xor test lret gs lods jmp in dec jg or in xchg cmp mov ss mov mov outsl (bad) mov push or call xchg push in push lea cmc lea pop or sub aas lret pusha adc sub xor sbb dec inc xchg mov inc test mov in leave mov ret (bad) in mov leave loop (bad) testb (bad) call adc pop std mov xchg jo dec shrl (bad) dec lock mov xchg xchg mov cmpsb jecxz xchg (bad) and into push push push std mov mov xor iret ffreep jmp xor rcll inc xchg push jmp push push pushf out dec xchg stc fs mov in scas add mov pop pop pusha inc cmp lds dec imul lret dec cmpsl shlb out xor sbbl xchg dec sbb push and adc sub mov mov sub (bad) mov cmp adc cli test lea dec push lret mov mov adc hlt xorl mov (bad) mov mov mov cld xchg sbb (bad) iret sub mov mov inc pop mov or inc adc push test cmc js mov or push js repz mov fwait hlt pop jne or add dec call ror ds jno int3 mov (bad) dec adc add lahf lea cs subl movsb ljmp pusha mov and dec rcrl adc xor mov sub out dec cwtl mov add test fstpl mov popf cld and lea jb inc jg add xor xor mov scas das (bad) arpl ret sub in sti out mov adc xchg outsb fwait push aam jb adc fsubs xchg sub daa scas aaa adcb rorl in inc les mov adcl pop fs mov xchg dec mov add or jmp push hlt push mov adc enter aaa jmp lret cmp cs inc push lcall mov add insl sub cmp scas cld test mov repnz int3 xchg mov popa sbb lret dec popf insb test pushf in add pop cli out sti add inc pop pusha push dec mov fidivrl mov cmp (bad) movsb jge mov lea (bad) imul lock push mov call sahf sub mov aam lcall gs cld push add jns xlat icebp ljmp je outsb fsubrl dec mov in cmc sti movsb pop lds mov loope and mov std sub in xchg push mov dec cmp push inc mov sbb xchg and xchg les lods (bad) mov rcr es outsb xchg jo lcall xchg iret stos pushf cli (bad) push lea fist cmc jo xor not dec stos pusha mov imul mov mov dec push (bad) jg push mov fcoml mov or loope push mov call mov sbb mov and jg mov jg jo mov call stos scas mov movsb je mov aam inc add outsb fdivrp pop jle aaa repnz aam xchg push xor je sbb aaa lret mov fstpl push inc xchg and sahf jg aaa cmp mov int3 fdivrl mov mov and add movsb ljmp in mov dec and (bad) xlat dec xchg lahf xlat fstp jbe sbb mov mov loopne cmp stos inc mov mov arpl cwtl jae lock shlb push mov pop hlt mov stos ds fistp mov stos outsb mov (bad) push mov jmp fisttpl mov xchg fcmovbe xchg repnz ficom ja nop std aaa xchg xchg and or jg xchg or pop dec cmpsl pop push and cli dec inc lods mov fiadd xchg xlat inc cltd sub out dec xchg test andl scas push mov and enter addr16 nop lret (bad) in je rolb sbb loop jmp cmc js call call jbe mov adc ret and cltd pop test fisttpll push and clc xor xchg push imul mov sub xor andl les pop inc mov into mov ljmp movsb mov scas fwait je rorb or lock sbb sub ret pop test rcrb lods cmp idivl pop and sbb cmc (bad) lods inc cmpsl scas je xorl pushf pop aaa adcl rcll mov cmp icebp fsubrs lcall std das jecxz sbb mov das jmp inc cmpb mov pop add sub dec cltd inc pop cmp inc push (bad) outsl cs in cmp (bad) clc mov dec mov jle cmpsl add in push push jno mov jns and mov movsl push leave aas jg or inc fs arpl movsb fwait sub rclb pop mov inc andb jnp cmp jo int3 or in pop jmp bound sahf adc dec ror fistp bound jl (bad) add mov mov and dec xchg dec adc (bad) pusha adc jae lcall ljmp negl add pop jecxz push data16 or pop sti (bad) in test cmp lock sbbb test (bad) aad add and push mov gs or cmp rcrb repz mov imull loope xor lds mov (bad) leave pushf xor pop (bad) test aam mov jp mov mov hlt cs popf pop mov (bad) hlt orl aaa mov (bad) xchg repz fdivr int jno cmp cmc mov pop in lret gs mov sbb je sub mov gs add jnp fldl scas lahf push xchg fldt sbb cli rcr or fisttpll mov sub push loopne cmp jge jne (bad) les sub sub mov add pop push aam mov dec mov add fildll push mov add lock imull rcrl fbstp pop jne and sub mov mov adcl hlt add inc jb sub and je fisttp sub out sub je call mov xor xchg fiadd mov jmp outsl mov lods mov dec ljmp cltd push xor es sbb sub pop push in js loop ds adc push fnstsw les dec xchg xchg frstor jne jne shrl xchg jae dec jns ss sbb rorb pop outsl jp fiaddl mov ljmp mov push mov ret mov jnp cmp or outsl bound xor jp shlb mov punpckhbw add xchg mov sahf (bad) fnop clc lcall dec inc aam daa test inc in inc and movl mov test adc push call nop out fstpl xchg loop xorl jb stos or push or outsb xor sbb sbb (bad) pop pop pop clc mull lret lahf fisttp xlat in xor push inc jge cmpsb divl cmp movsb sub mov hlt scas xchg sbb jne (bad) test mov cld nop pop mov test ja add cmovs lock dec jbe mov adc in inc lcall cld jecxz ret xchg jb icebp push cmp arpl jnp dec sub sbb sbb imul testb repz push mov pop sbb divb iret pusha cmp psrad adc pop clc dec adc imul push je icebp jb lock ret out pushf pop or xchg leave pop shlb cmp out inc push es maxps mov sbb jle and dec sbb cmp xchg dec scas ljmp jl jae mov push xchg inc shll mov rcrl incb xor cmc fisubr hlt jne leave or xchg pop lods cli add cmc push loop inc mov stos lods mov mov dec lods mov push mov push mov in jge andb mov into add xchg sbb inc test pop pop pop jb dec ret (bad) inc les sqrtps bound cmp hlt scas idivl in icebp pusha mov push inc inc inc adc into add pop stc out jmp pop push inc scas lcall dec inc cli ret out out (bad) jge xor imul xor test out sti jbe (bad) mov xor insb pop les dec (bad) enter icebp mov ret jle movsl int sbb jbe out frstpm(287 dec dec add adc int3 jl sub test jne mov cmpsl cmp out repz and (bad) pop and inc imull jnp sarb jl cmpsb cmp scas icebp push cwtl add sbb dec ret in mov cwtl cmovae add loopne mov icebp mov daa test arpl in add push shrb sbb sub or movsl gs rol xchg in lock test and pop int mov int sbb int3 jp les mov in and int inc sub mov mov int3 pop mov xor cwtl insl cli pop mov push jg push dec mov dec mov jmp mov or leave dec xchg dec test ficomp push add mov inc stos inc cli push pop pop into push inc add hlt inc test leave mov aaa sub or icebp cmp xor adc jne mov and xchg add mov pushf pop mov adc pusha ficoml lahf xor (bad) xor stos jb aas mov dec in insl sbb or bound cli xchg jnp stos ljmp sbb dec dec jo jcxz and dec hlt pop lds fisubr leave aam cltd dec ret mov cld inc xchg cmpsb call mov inc sbb cmpsl stos sbb in mul repnz in fdivp pop lods sub cmpsl inc xor aad enter in jno scas (bad) inc push aaa cmp negl sbb dec insl loope mov leave inc sti xchg adc dec leave push or lock fs xor test or fimul rcr je in jns cld push dec push push mov ror (bad) rolb or repz pop (bad) pushw out in (bad) enter (bad) out or jb jne add pop lret dec stos out lret sbb pop leave mov and jns jns and cmp insl xchg sbb and xchg test add std or jl dec add jb adc push movsl fwait mov pusha and cmc mov lock pop push push in jl popf es (bad) mov and loopne adc lret test jecxz push jo js jmp pop xchg int3 mov hlt bound mov pop testb in mov push lret cld xor jp (bad) lock movsl xchg push rorb jo jp push clc (bad) jb xchg mov jne mov adc dec push test fidivrl movsb cmp jb popl and adc mov adc adc mov (bad) xchg mov sbb lods xor out xchg xchg icebp aad jle mov rorl xor int ds in inc rcrb (bad) in std inc mov and test (bad) lods outsl mov loop push push xor lods xchg imulb cmpsb lock push lahf cld test mov outsl mov fcoms lds clc inc jg lsl dec inc jle mov sti cltd in cmpsb xchg in cltd out ljmp mov adc push push xor jecxz icebp mov ja aas es jne aad (bad) mov lods mov mov jo mov sub pusha mov mov ds in mov test mov adc sbb push lods mov dec jae gs das (bad) dec pop jg push (bad) cmpsl push xor mov push popl or xchg (bad) dec js jbe mov sub scas test cli subb clc mov cwtl jecxz test ljmp and jb (bad) (bad) mov sti sbb arpl adc je in adc cmp gs or mov cmpsb dec rolb mov fist roll sbb sbb (bad) int3 mov sub call aam mov pop xor push cli inc insb sbb pop ds hlt adc lret mov pop shr push mov lds or jae addr16 pop lods fwait mov (bad) jnp (bad) xor mov xchg mov ds rclb ss jecxz aad enter dec jo pop and stos pop lock jge mov (bad) sti loope cli push xchg loop jge sub mov js inc call and adc add sti mov arpl jmp enter repnz repz pop stos lods (bad) repnz dec mov orl adc rcrb jbe mov mov insb cmp xchg or (bad) cmp sti aaa xchg (bad) into mov ja mov roll icebp aam push dec imul movl test pop scas add stc sbbl mov pop jle mov orl cld mov pop sub out repz pusha inc call push jle push add adc cwtl cwtl test mov pop (bad) sbb std jmp dec or leave mov xchg sbb jmp fs (bad) sti (bad) mov xchg jge mov sbb lods mov insl xor sbb inc xchg cld dec movsb pusha js inc adc sbb jl cmp sub xchg ret das out rcl fs aaa jl daa cmp cmp dec in push movaps mov popf insl je mov mov mov ds xchg int sub inc jb dec addr16 fs push cltd xor lcall pop pushf (bad) xor (bad) pop pcmpgtw fst icebp mov pop enter div mov (bad) je mov pop pop pop shl push in sbb flds lret pop cwtl push sub mov (bad) sti mov lahf mov fnstenv es movsb cmp adc (bad) in aas push addr16 cmpsb inc jmp in lret (bad) sbb stos adc adc cld jnp dec xchg pop movsb outsb push mov cmp adc (bad) fildl jmp fsubs stc pushf adc and fs out decl cmpsl adc xor scas inc or pop pop mov xchg lret pop lret insb xchg or pop cvtps2pd cwtl jge xchg test adc mov push push cmp jle sub xchg mov inc sar push rorl idivb dec cwtl adc add or in arpl cmp jnp cmpsb (bad) ss push mov (bad) dec sbb mov rcrb pop dec add es jae scas cmp cmc inc jno cmp iret ja mov pop sti mov lret cmp cmpsb and jg sub dec mov inc (bad) fwait dec xor in add addr16 clc gs (bad) (bad) mov je (bad) outsl sti sbb add jb inc adc shll addr16 cmc fstps and mov xchg xor icebp mov loopne lods mov push or out push sar push int3 addr16 add fs mov movsl call jg pop mov std stos pop xor mov (bad) nop xchg (bad) (bad) add mov dec jo and lock sub (bad) inc outsl (bad) cmp sbb pop int pop and sub push push lret push mov sbb and cmp das jno adc cld popf mov das xchg push lcall add sub xor adc xor xor lea cmpsl repnz sub lahf mov fimull adc lahf (bad) dec hlt test mov xchg aam repz mov mov cmpsl push test iret mov mov dec sbb popf ret sbb dec push into jne cli lock push test loopne dec adc icebp arpl mov cld jae push dec jecxz shll repz xchg mov in jne push jo outsl mov pop or inc int3 pop es sub mov fwait or mov je fcomip insl adc push mov dec or sar push enter or js (bad) fstpt vmovhps mov push fsubl cwtl pop mov (bad) jb (bad) int3 jmp mov push push (bad) jns push add mov stos sarb mov jno cli lahf dec test jmp mov sub and insl dec pop xor and lods push fwait arpl into jmp pop aas (bad) outsl lcall (bad) jb jbe mov imul xor jp outsb sahf outsl (bad) or and mov sub mov lock lcall insb in es mov (bad) jb or (bad) dec jo xchg sub imul subl jl or pop pop mov aad hlt fmuls mov xchg std mov xchg idivb cmpsl bound lcall mov mov adc les lret pop leave js xchg std dec push pop xor lock (bad) xor inc inc push inc dec add and dec jge adc sub imul aam outsb prefetch int3 loopne jle popf jg jg idivb das add nop pushf out mov xor or notl xchg push dec mov cwtl push (bad) jbe mov adc fcoms loopne cmp (bad) mov stos jnp in adc mov outsl fcomps pop sarl fwait aaa std sbb xor xchg cmp mov push jne shlb pop push push jo test cmp fsts inc mov insb lret jns scas and mov inc sbb shrl addr16 in in mov and push push dec jns int3 loop sbb loop bound pop scas out inc adc inc test test (bad) daa int3 cld subl xchg or outsl int (bad) cwtl sub cmp addr16 cmc mov push mov sub loop jmp inc push push add mov lods mov iret in xchg jbe mov push cmp mov aaa adc cmp lret fwait xchg fldl push or imul int add sub and (bad) out jae sahf xor hlt inc or out jp rorl movsl or inc mov cli testb scas xchg insl or dec mov mov inc lret pop mov push fadds push repnz outsl fcompl pop push push cmp in push repz popf in loop test mov mov dec cmc dec mov stos mov jbe mov es (bad) pop cs or repnz adc clc stos mov fs jbe pop and cwtl add sbb mov ljmp jnp push nop dec fwait stc mov cltd inc fisubr stc dec mov in inc (bad) int xchg xchg lods faddl icebp inc push in inc repnz neg sub push in jge gs repz fbld jnp inc sub xchg fcompl insb dec or fwait int adc cs pop sbb sbb mov sub sub push xorb insl addr16 mov sarb movsb xor inc pop inc mov scas jp inc cmp pop cli nop inc adc call call int3 imul sti mov adc imul mov jb mov xchg ds pushf push push cmpsb popa cmp (bad) insl hlt mov sub and inc xchg scas pop movsl cmc aad add xchg fildll sarb mov faddl in push xchg sar adc shlb mov cmp mov mov or sbb xor outsb mov enter inc rolb adc mov cmp xchg loop and pop int ret pop call fistl dec jne mov adc inc ds movsb xchg (bad) iret adc outsl inc dec adc popa or mov and out ret daa mov movsb mov push mov out cwtl cwtl sbb cmc (bad) jno cmp aad testl sub cmp push inc xchg and mov cli pop sbb aaa xchg lods mov data16 cmp inc loopne cmpsl sub daa cmp fs fucomi mov cld mov sbbl or aaa mov jl cltd mov and jne daa imul mov cmpsb and add into add arpl imul rcrl pop pop sbb into inc test pop sub fsubrl jmp sbb int cmp nop jns leave (bad) xor mov jg jg xlat dec push lret call fwait push arpl js mov mov or nop dec and inc inc in jns int3 movl mov mov arpl pop mov sub imul scas mov mov out (bad) jae (bad) hlt out push push sub in mov scas jle xchg call popf (bad) iret push xor mov pusha mov and mov cmp add (bad) xor test sbb pop inc out adc std sub ret popa mov add jo adc js jo lret lods push decb mov lds scas in cmpsl mov scas jne fwait int call mov test adc scas mov push in (bad) loopne fs dec ret into mov popf (bad) test test dec sub xor (bad) loopne or call mov jae push lock jne lods cmp (bad) das ret pop adc mov pop dec cmpsb pop cmpl faddl jno enter dec loopne ror pop mov jmp jnp dec jmp test adc and adc data16 xchg push adc int js or jo dec aam sbb inc cs dec test inc jmp push lock lcall cmpsl aad cmpb jnp mov adc repnz jns aaa and (bad) jnp add push mov cmp xor ljmp dec inc arpl inc imul fstps lret hlt movsb sub add adc ljmp add mov loope inc jo and shrb or jae je nop repz jne (bad) shlb movsl arpl pop jg dec push fwait push movsl sbb mov sbb cmp pop (bad) dec pop inc fstpl negb xchg in or js jb leave sub jo xchg push outsl sub jecxz xchg mov in pushf (bad) cmc and decb mov cld (bad) lret mov call push imul ds repnz jne jb insb jns lcall xchg xchg push jae lock ljmp inc or cmp das push xchg mov mov push rolb hlt xorl dec xchg mov mov dec stos sbb or xchg pop std cltd mov jno movsl rol cmpsl xchg mov (bad) rcll aas notl (bad) sbb out addr16 rorb sbb mov (bad) stc jg in gs rcr daa pop mov sub jle in fnstcw stos daa lock pop in or (bad) dec add or cmc and jg mov (bad) mov mov or nop shll inc scas xor cmpsl push push mov in shr sbb stos push dec stos (bad) ljmp mov inc jp xor sbb pminub mov and jl mov sub dec push fs lcall outsb test adc jbe pop xlat lcall add rcrl mov stos sti jg mov ret sub push dec add mov pusha pop lret (bad) lods test mov test jns (bad) adc xchg outsl int3 cmpsl int cmpsl or std or hlt test add call stos mov xor and jbe sbbl push push out add sarb repz cmp inc lods loopne outsl and fnstsw scas (bad) in sarb add fcmovnu fcomi arpl xchg inc inc sub and mov add dec ror push cmpsl repnz cld out or out mov pushf scas repnz test (bad) scas fistp mov lods push rcrl std inc sti mov jle xor cmp lods outsb inc (bad) ss out xchg sub jl push sbb lods push nop add mov mov pusha test sbb in cmp iret cmc dec ret out jle sub cli jp dec int in cmpsl aad and pop or lret add call pushf fisubl cmpsl mov lahf fstpl mov sub imul (bad) dec push inc push je pop cs inc js sbb mov cmp sbb dec shlb out pop rclb push adc adc pusha or clc jle or sbb fnop repz mov add bound ret ret add cmp mov push push movsb xor clc sbb sbb add jnp dec mov cmp xlat dec fcompl clc jl mov nop sbb idivl and rcrl iret out outsb and movsl sbb jg pop mov movsl ljmp stos push mov mov cmp mov cwtl lcall xchg cmpsl (bad) das adc (bad) int3 fs call mov and jl icebp mov lds pop jg cmp pop adc mov ret ss xchg adc mov sub insb into push mov cwtl xchg or icebp out test scas mov insl pop (bad) mov test repnz pop enter pop jg or (bad) fs lea dec je or inc aas jle pop cmc ja mov in aam jl icebp cmpsl int3 jbe mov pop sbb enter das bound decb ja lret or bsr fstp mov lods addr16 mov jle leave push and xlat or out pop or and gs idivl shlb adc adc into popa sbb mov cmp je pop loope jne int (bad) ret cmc push (bad) (bad) inc shrl pop js out jp repz pop loope je jae adc jge rcrl push mov mov inc vpsrad ret ja mov je jo push repnz std jp pop cltd xor xor fwait adc nop push repnz dec cltd je insl xlat stc push pop outsl and mov mov lahf jae sub xor mov scas mov mov lret pop xchg stos loop lock fsts xchg in mov add xchg je pop fdivl pop ret sub lcall es jmp sub mov mov dec popf xchg sahf and sub cs jl inc int3 and jg pop or stc data16 xchg stos mov adc dec gs jle into jl sub repnz xchg jbe xor mov mov sub jno push out movsb mov xchg dec ds loope sbb lods pop sbb scas jae out lahf mov mov popa jbe lea push lods test (bad) ja inc cmp jo cld fstps add sbb test pusha mov lock mov inc js cwtl pop cmp leave mov les int3 scas or xchg cmpsb sbb ret mov fildl push in mov jl push mov les scas push insl fisttpll pop rcl lods xchg add xchg xchg mov jg popa int3 push (bad) sti inc (bad) call int loope dec sub inc sbb pop jmp xor sub push xchg xchg in insb out pop cli xchg jb movsb mov sbb mov gs mov mull mov inc jno add cmpsb pop int popa out cmp rcl in rorb dec aaa and dec pop mov mov inc (bad) rolb pop dec xchg gs pop push cmpsl inc repnz xchg xchg xlat sbb (bad) push push mov rcrl pushf subl adc xor xchg jmp movsl testb popf in inc xorl inc cli inc push sub push push addr16 stos xor mov sbb clc loopne add sbb mov mov out xchg outsl aas pop imul sbb out xchg jl sub inc xchg push jae and (bad) data16 push add aaa nop add jnp lods pop jmp iret pop repnz out dec (bad) sbb scas adc add call push or cwtl sbb adc jge into les decb xchg pop sti pop mov imul loope or sahf mov cld (bad) repnz daa pop iret push and stos pop pop inc mov push push fs or inc mov mov arpl pop dec mov jno or mov hlt into lret loope mov cmc xchg mov jae cmp pop jne adc jo,pn xlat sahf push xchg push mov fidivl inc popa ret rorl outsl sub sub pop sti push push loop icebp test shlb ret push addb ss jbe movsb (bad) sbb in xchg fwait aaa jl adc xchg in repz jb dec cltd outsb xchg les or bound std push dec mov in hlt inc push and sar jl (bad) sti xor test (bad) pop das movsl pusha dec add dec xchg push jbe xor into dec xchg jge pushf in loopne jle push xchg xchg imull adc jle mov push cwtl mov push mov js test ror insb nop cwtl (bad) out cwtl dec fadd push aad dec js imul mov dec sub sbb notb ljmp imul and int3 dec fst xor sbb dec inc inc cmp push hlt je dec mov pop loop in cwtl add jno cmpsb dec int inc and fwait iret (bad) mov inc paddusb stos movsb sbb adc rorb push and xor add jp sarl adc pop mov jg movsl cmpsb jae in inc clc dec push mov dec pop clc xor push dec fiadd ss pushf jle cmpsb push or sub jge stos dec add fwait xchg inc addr16 xchg int mov cwtl or xor push idivb and pop out push in push fs mov mov sub fiadd mov adc shll insb jns pushf mov mov fidiv nop lods inc stos js pop movsb adc sbbl xor sarb mov mov xchg jns mov mov sar movsb xchg ljmp mov sbb insb xchg jmp aas xchg jo rorl int sub mov push push adc das mov rcrb lahf movl xchg push orb ljmp pop dec popf jle sub jge mov (bad) cltd icebp int push negl mov mov push insb lock mov jecxz pop rolb cmp and imul out or jge lea xchg lds dec sub pop cmp xchg out mov lahf sbb add pop test push cmp js mov push xor (bad) mov xlat loope xor mov or lret out int3 pop xor ljmp outsl lret push push fidivrl dec jnp stos insl int cltd stos mov add movsl jmp dec or imul shr sub pop mov cmp mov sbb push (bad) mov mov mov into xchg shrb push cmp push add cwtl movl xorl jae push dec bound push inc bound ret cwtl fdivs xchg or out cmpsb push negb and push in mov jmp mov outsb mov pop (bad) pop iret add into cltd cmp inc sbb fiadd fs out dec icebp or hlt jge popf adc je enter daa xchg inc sub stos adc add popa jg outsb test push adc cltd (bad) icebp adc gs mov (bad) repnz ret lods nop dec dec mov xchg (bad) out test mov mov mov adc hlt push fstpl lock add divl and in popf dec bound sub adc lret nop insl ss cs push popf insl aad std popf jg test loope ret xchg (bad) testb hlt pop and enter jmp pop sub scas inc scas jle dec in mov stos add cmp mov xchg inc fimull out mov dec jne mov rorb mov jge fiaddl dec stos cmpsb dec adc sbb mov in call cli dec imul sahf out mov sub sbb rcr or enter mov int3 imul les mov lds out push xchg pop loopne out mov movl push neg add ret sub sub outsl sahf cmpsb sub ret cmp les sbb sub inc in pushf sbb (bad) je cmp out popf not (bad) je pop sbb lcall mov jo fwait inc mov mov std or je in in fisubrl addr16 push addr16 iret push popf lea add mov pusha push les ljmp push fwait jg ret in (bad) imul imul dec dec fstpl xor lahf imul fmuls adc xchg je pop imulb bound mov out fwait arpl mov adc sbb movb mov add lods pop imul xchg cli popa loopne insl dec std stos push mov stos dec das shll insl push mov mov mov jnp lret insb push xor fmul out stos mov mov and jnp dec pop gs stc pop cmc ljmp insb mov iret pop call cwtl jne mov sbbl test pushf sub push inc add loopne mov push pushf call cld lret add jge shr test lea mov mov sbb dec (bad) cld dec xor mov repnz fstps out jbe orl lock ret aam cwtl addr16 loop mov xor out icebp in sbb stos inc mov xchg rcrb bound fs movsb icebp sahf xchg loope lea enter mov mov mov in inc ret adc in pop dec clc shll push mov xchg sbb les cmpsb subb push push pushf mov mov xchg cmp pop bound add pop adc pop into ret add cmp cmp xor lods cmpsb icebp nop adc int3 pop in movzbl cmpsl sbb cs cmpsb pop sub sub lret mov cmp shrb js dec fmul mov cmpsl into mov xor jle jp ljmp stos arpl push jns mov repnz push hlt and mov cmp out push or push lock xchg or popa dec push inc test xchg (bad) xchg test xor (bad) jb mov or sti xchg (bad) mov (bad) call ljmp pop aas loop xchg bnd or sub insb stc inc out push stos (bad) jl dec inc dec cmp xor int3 dec fmuls sahf stc and xor xchg mov jecxz imul mov scas inc sbb out xorb xlat xchg mov fldenv jl leave add jmp sbb pop idivb add cli sbb jp mov ljmp inc icebp loopne dec inc sub pushf fstpl roll cwtl lods insb jne push test dec pop ljmp push movsl int cltd inc inc push mov cmpsl xchg icebp je or cmp push ja fndisi(8087 (bad) dec xor sysexit mov aam lea xchg add jmp test out add nop rcl or arpl fs cmpsl rcrb mov in aaa int3 add mov xor test imul push stc divl sahf pushl in out aad push into push out dec aad imul push gs stos cs sbb mov popf add cs xor add inc add or cmpl sbb mov cmpsb imul dec push push aam loope or ds xchg mov stc mov mov stc int3 lods out ljmp mov sub sti test pop sahf lahf xchg cmpsl push dec int cltd lret cmpsb pop xor fcoms push dec jo int3 call dec push or cmpsb sbb js es es mov mov popf stos loope jge inc (bad) jge cmc sub xor jge mov adc gs fsubr int test das sbb inc push push jae mov inc cmp xor push fldenv sbb fisttpll daa lock insb pop lods fidivrl or push int3 or sub aam push or cmpsb repz mov dec sbb enter call inc dec or push jb push data16 jo xchg sarl sbbb das adc leave add push inc negb scas or cmp mov imull iret mov outsl rorb out outsl pop cmpsb cmpsb jl xchg int3 jecxz rorl (bad) cwtl push in hlt mov js sbb leave pop mov xor imul xor (bad) negl cmp repz pusha ds cmpsl repz mov aas idiv jno push dec movsl inc pop sbb ret cli clc lcall push sbb outsl push push aaa icebp mov add dec xor dec out outsl adc mov mov test enter mov mov gs addr16 cmp cmovns sti insb loope pop sarl mov xor push out mov jnp cmp jp cwtl call mov pushf sar in sub mov js add cmp int3 push jo sbb mov sbb and insb ret fimul pop lods pop aaa adc sub dec negl sub repnz mov ljmp insl rclb sti dec push xchg dec dec aaa mov mov iret shrl aaa cld mov shr aas dec sub outsl cmp dec push cmp dec stos cmp ljmp mov push into adc mov push or leave push and dec jge test out scas std sahf ds fiadd xor adc sub cmp fldl cwtl adc out sbb add dec in xchg dec sbb add jo pop shrl mov jmp cmp out iret mov iret sub addr16 cld aad fldt dec enter inc into scas pusha lods mov repz inc mov (bad) and add and movsb cli jecxz inc mov (bad) adc and aaa adc cwtl dec in fwait (bad) mov adc xchg pop xchg fstpl sbb into lods je pop stc or insl push dec mov vpsllq in jg mov lret leave gs hlt mov mov mov fiadd jge pushf popf in iret aas les ss or (bad) leave addr16 dec lods adc test imul add mov aad dec je inc clc mov mov scas ja int3 pop xchg jle dec mov leave ja aaa push pop sub xchg add fdiv sbb sub jnp popa sub ret jl mov lods bound orl ret fimull mov mov push add ret jo sbb inc cli xchg adc in xor sbb fsubrl jo pop (bad) add xor ljmp push pushf test xadd je lret repnz mov xchg out out out sbb cmp (bad) sbb pop dec push pop xchg cmpl out cld lds and cmp dec fsubl sbb aam lods cli mov das pop push sub pop lds fwait adcb cmp xchg stc ss daa cmpsl add scas pushf mov outsl inc push dec xchg sub fimull das cwtl pop push cmp out (bad) lock adc pushf push fisttpl mov cmp mov dec mov aaa dec pop xor mov ret and xor mov movsl idivl hlt or dec and push mov xchg sbb lahf lret pusha sbb sbb fildll out aam sbbb pushf cmpsl adc (bad) cmpsl inc cmp lret mov mov js cwtl jle andps pop or aas arpl shrl je mov xlat cmp rclb repz mov outsl outsl in fcompl push jle mov pop push notl scas out jb jo xchg outsb idivb xor loopne sbb mov add (bad) jne popf add dec call push stos mov test pop pushf test movsl cmpsb mov ret sti cld ret je notb enter shll add out xchg andl movsl dec dec push adc cmpsl mov ljmp mov pop xchg loopne sarl scas adc test or (bad) mov ficom cmpsb andb movsl daa mov sbb mov ss push es mov sbb xchg scas outsl aaa rcl xor enter sbb ljmp scas jl bound movsb (bad) mov test xor stc jae jl push fs cmp movsl pop inc push cld (bad) mov mov scas inc ds push dec lcall lods je lret push sti fmull cwtl add popa mov je lds les push bound shrb das aas add je mov mov scas xor loope insl pop sahf inc cmp repnz stc sub fistl ljmp sub dec or insb push push std mov gs pop js xchg pop mov dec cmp lods inc (bad) sti jbe inc loope sahf push int mov xor xor lock je push push jae int (bad) pushf push mov mov cs mov xchg inc pop mov mov mov cmp or enter leave insb (bad) xor or mov out mov inc sub xchg sbb push insb into out scas data16 movsl dec adc sub adc pushf outsb cmp sub jg inc (bad) xor clc icebp mov frstor fucom int3 push ror mov ss cmpb mov dec sbb xchg cli sub xor loopne xchg bound fldlg2 dec inc jl sbb cli adc out test cmp incl das or mov lock xchg shll out insb inc idivb push jb fnsave adc jmp iret pusha (bad) cmpps add xchg push imul (bad) pusha int lcall je or add fwait fwait mov sub lret cmpsb cmpsl in mov insb pop stos sbb mov push inc sahf jne push and jno push ret mov sahf es lret rcrl ljmp scas xor js jb pop orl sbbb in cs out lcall mov pop call mov cmp sbb inc mov sti cmpsb out adcl addr16 (bad) out pop inc (bad) mov push push adc sbb aam xlat cld sub push mov scas aam jns int3 idiv xchg inc (bad) pop pushf mov mov mov repnz mov (bad) pop xor inc dec popf add push loop and sub mov lea mov jb in inc idivb xor mov jno cwtl push lahf inc mov inc ja ss lods adc lock sub enter js inc in pop push arpl out mov call mov in inc mov mov inc ja or add sti push scas insl repz or ficompl mov cmpsl cmp bnd das inc sbb mov sub lock cmpsl (bad) (bad) push pop aas repnz jae sub dec data16 aas addl enter dec cmp mov leave xor std cmpsl dec cmp arpl jle jge and xchg pop ja (bad) loope mov out stos repnz cmp push cmp test push mov dec bound and ret idiv push adc mov pop inc hlt pop pop and sbb (bad) jmp jmp mov ds dec jecxz in pop pop mov or jl stc roll adc fnstsw and inc test inc jecxz pop xor test pop jle pop pop aad repz pop add (bad) gs push mov jns mov shl data16 inc aaa popf pusha push pushf xor test lcall mov jge test fiadd iret pop (bad) enter push push jb push dec movsl aam gs or ss ret mov cmpsl jecxz push dec mov and fistp gs mov stos scas daa push push jle push cmp pop clc push sub jnp loop mov mov pop pop loopne jno push cmpsb or subl in pop in jg add (bad) icebp add addr16 push pop sub xor mov push pop mov sub jns pushf or movsl arpl jno cmp mov test cmc adc mov mov push imul jne scas xchg jnp je sub push add pop xlat out pop test push dec mov cmp (bad) ds pushf push mov shr cwtl xchg adc dec xor les dec cli inc dec repz (bad) jmp inc inc shlb outsb loopne psubusb inc popa adc or gs push test and divl test xchg addr16 mov repnz jns cmp push sbb sbb pop push adc pop enter xchg (bad) enter xor imul out adc dec iret cmp push push sub cmp adc call mov add pop and jns,pt ss pop dec push sub popf cmp and push xor add test or bound fild int3 les mov and sahf sub mov mov adc sbb das adc add daa push outsl add inc mov mov push add cs mov outsl lds push js shrb das mov adc dec test pushf out jo adc mov or inc adc nop mov xor push or pop pop cmp push pop insl mov imul ss es sbb stc pop pop mov dec inc xchg stos push inc mov rorb and mov jge jnp (bad) xor dec jb adc inc pop dec adc sbb add out cmp cmc into mov lds hlt jno xor sti fnsave push or mov cs jno in fildll cmp add mov xchg lods adc mov lahf orl loope mov pop dec pushf sub jno fcoml lock jno stos pop aad out int jmp inc test push jno in hlt mov movl xchg push jne rorl sahf out adc insb movsl mov daa xchg shrb (bad) jl loope push mov sahf arpl cmp movsl into cwtl out sbb scas (bad) in mov (bad) push inc xchg sbb jmp cmpsb les push loop xchg icebp js adc out repnz pop lds (bad) jnp mov in xor (bad) clc add mov fwait pop stos jge dec jns divl outsb push into mov flds xchg add clc add stos inc cltd dec lcall adc adc lock lahf pop sbb lcall xchg xor sbb imulb adc repz cmpsb add or add cmp sahf dec sarb pop enter inc cltd mov and pop dec adc mov inc push sarl adc cmp push dec idivb pushf pop ds sahf gs push pop jmp call or pop sub lods xchg lock xor or mov int cmpl cmc push into test pop mov lcall mov dec fdivl add adc mov jmp lock mov mov xchg arpl or pop (bad) mov sub enter ret cmpsb sbb stos adc mov jae jnp ficomp push aas xchg mov out cmpsl pop lret add jno int3 pop (bad) dec or xchg jle xor jl push xchg xor jae in into push jp arpl push xor mov out lock addr16 mov cwtl jecxz mov rclb mov mov test hlt mov cmpsb loopne rorb inc and fcmovne test pop popa test (bad) xor aad mov rcr and cmp jne and sahf call lret daa add loopne repnz sub pusha (bad) in popf fs cmp ljmp sub stos add xchg lds je mov js mov push test push dec (bad) (bad) push (bad) jp or test mov inc aas dec ret or cmpsb lock dec dec mov adc cli stos mov push mov fidiv mov jns pop clc in jnp shr aaa xor ret jae test or push test push pop cmp inc mov in mov (bad) pop push add in (bad) xor lock mov data16 das ljmp xor orb adc or sahf add rcrl pop add in idivl and test push fs push (bad) stos add enter loope or pop cli xchg push ss cltd shrl mov sbb and or (bad) out dec xchg and cltd inc and cmp scas pop lahf mov mov inc push lcall in xor icebp mov sub cmpsl (bad) stos mov movsl mov (bad) rorb mov or clc dec push jg icebp add movsb jl dec adc or jp test pop test add xchg call rolb lcall cmpsb jmp push hlt add pop stos insl jl aad rcrb xchg ds inc stc les and fild (bad) (bad) xor in bound pop lret cmp inc fnstsw inc in loopne pushl arpl mov flds into mov jl mov fnsave popl hlt push in nop js xor ja mov lods sub loop pop mov inc cmp jle or insl sbb xchg jne daa jns ss xlat sub cmpsb fucomp outsl add movsl test push ljmp out lods nop add cld pop pop jb push sub jl fiaddl lds inc imul mov cmp out mov adc add out mov inc add adc inc imul movsl repz test sub int3 je fwait mov mov mov jae sbb dec adc lgs andl sbb jl lods mov mov lock cld adc stc mov and gs sub (bad) dec dec out xchg daa mov sub sbb add (bad) mov and cli jns (bad) imul xlat jge push mov push lods pop mov mov stc push nop nop in (bad) cmp lock inc aam adc xchg testl aad xchg (bad) cmp push sub jmp mov (bad) mov xchg jnp mov dec cmpsl (bad) mov mov mov sub adc dec adc inc and test mov push dec cwtl aad and pop (bad) dec pop aaa cmp lods lea sub out enter cwtl xchg scas lea mov jno mov push nop call add leave aam pop xchg fadds insb jecxz dec sub jno out sub ja pop lods and scas push add mov add movsb gs xchg popa jo lods std dec dec outsb mov xor cmp cmp (bad) cmp mov dec and outsb xchg dec sbb fwait cld call pop into gs imul mov mov cmpsb xor mov mov lahf inc jbe cmp je inc outsl pushw hlt push pop inc loope lret jns cs outsb jg ret rcrb mov adc mov (bad) xchg in xchg sub iret rcrb mov cs jae negb lret aad cltd cmc sub clc cwtl jo xchg cltd outsl int3 fcomps mov repz rcll les sub je jg and rorl (bad) adc xchg or or fisubrl add sarb push dec out out cwtl call jmp lock pop sarb cltd cmp neg bound mov gs std jne mov mov mov cmp inc negb adc cli lods pop pushf repz mov and lods in insl push cwtl push mov or pusha (bad) or fcompl cmc adc cmpsl cmp cltd pop cmp aaa mov mov mov movsb lods mov jae adc js lret xor bound mov pop addl lock or imul pusha in aam jge cmpsb mov sbb stos add sub pop inc cltd xor or lret jno add jo fs dec or cmp ss in dec adc dec enter arpl test ja add cmp sbb into popa inc popa mov call pop insl sbb roll adc call out inc jne push add imul mov add cmp mov sub push lods rcrb (bad) push cmp mov clc jne push lods std icebp mov pmulhw fnstsw (bad) mov pop push test shll movsb lock jae cmp scas mov cmpsb gs mov cmpsl push inc dec jns test in sahf sbb or pop sahf jnp jo sbb mov cmp cmp orb ret nop adc mov mov aad xor mov mov cld mov scas pop adc or cltd stos je mov loope dec mov insl frstor inc idivb dec popa seta lret pop rcll das xchg cld lahf adc (bad) pop jl inc enter rolb or mov in dec pop iret xchg xchg imul pop dec push dec repnz dec test in xor lods outsl int3 mov and adc repnz out push nop and push js xchg push sub or adc jg (bad) mov add outsb or cmp mov mov lret sbb pusha test add fsubs shr jae pop mov in test xchg movsb aam lret (bad) popa dec inc fisubl push aas popf (bad) imul push pop inc in enter cltd loope mov std push pop repnz adc lods xchg cmp cltd xchg and lret test mov (bad) mov nop stos aaa sbb lds push adc mov setno xchg sarl jno scas jnp xchg cmpsb mov lock sbb xlat orl mov and cmp inc enter (bad) (bad) jne pop adc push sar xor stos test int scas lods mov test test adc fstpt mov push data16 lods mov jecxz dec push jnp pop ret popf mov push xchg inc push cmp jo pop sbb pop or cmc jmp sbb out cmp enter mov call adc push mov std pusha cmpsl icebp cmc mov in cmpsl mov mov repz (bad) xor fiaddl into mov mov stos cmp sbb das cmp ja cwtl in push sbb daa cmpsb cmpsl scas stc cmp cmp (bad) dec mov push outsl sbb fiadd dec mov les sbb inc ds push jnp (bad) bound sti lock jp mov test inc (bad) or in cmpl aaa push mov (bad) insl adc aas aad jne xchg sub jg sbb xlat sbb ret outsb adc sub push add sbb stos pop test insl and mov fs mov pop imul sub (bad) mov sbb xchg dec jge in insb (bad) jbe fcmovne in pop adc scas repnz repnz inc shrb rcr ficompl cmpsb ret adc inc loope nop fldl mov mov jne ja aas test sbb out out mov xchg mov rcr std arpl pop inc outsb jnp enter xor aam add call jo sub clc rcll sbb int push push cmp mov push (bad) jne push rolb aas dec repnz mov dec or jp lock push cwtl xor pop fcoml mov iret ret hlt les push xchg xlat addr16 dec pop push ds lret cmp daa call (bad) sbb gs pop cwtl jecxz pop push jo enter xchg pop xor shr mov popf xchg movsl outsl outsb scas mov pushf imul push loopne stc mov hlt xorl jmp xor push cmp imul mov rcr cmp jnp and xchg add gs pop leave dec (bad) shr rcll dec rolb loop pop mov mov sbb pop mov fcomps lret push dec movsb xchg add pop mov push xor push pop (bad) idiv (bad) jge mov mov push outsl mov pop sub in (bad) pop xchg (bad) sbb leave inc aas jg insl icebp fs pop rcl add (bad) pop in sbb push adc sbb mov clc pop sub stc push cmp repz shlb jl push xor sbb inc mov mov dec enter xor enter cmp push notb cmp int3 and push mov cltd inc stos dec push std addl sbb lret jge inc mov scas (bad) pop or mov jns scas adc out dec jb push inc in cltd cmc aad jl leave pusha neg sti mov roll in dec or mul mov jo xor insl decb enter sti mov mov bound pop push mov pop ljmp repz inc cs pop pop inc cmpsb inc cmp xor outsb movsl lods fild cli into imul dec push dec jmp push lcall pop jle scas mov dec std jne jae roll loopne dec leave pop aad scas push pop jl push gs pushf mov adc adc (bad) mov push mov jo (bad) jl lret and or (bad) rcr cmpsb cmc shll inc out dec test lods out pop mov mov pop mov mov xchg std stos rep mov mov addb mov mov mov aad insl mov pop repz mov (bad) out cmp stc inc out jecxz out shll inc sbb dec or mov out repnz pop jl bound scas dec sbb mov cmp out inc dec push bound add mov cltd iret mov clc in pop or mov mov imul (bad) cs adc dec jnp lret popa aaa or and in lods xchg xor aaa pop adc jle sub mov push test jnp push mov dec sbb pop out test outsb jns sbb sbb mov aam shlb mov popf int3 jp push lret loopne pop mov dec jnp mov sbbl or mov test inc add lods push out aam adc imul jae shlb inc sbb mov lret das inc add adc push cmp movsl xchg mov push out mov inc sbb xor pop movsb mov adc push inc lods dec pop sbbb sti add xchg mov inc adc push lret or sti int aam sbb fwait in out aaa adc (bad) mov mov pop ds fs scas dec dec xchg pop out xchg inc xchg sbb pop push cmp xorl (bad) mov push ja pusha xor dec jecxz rcl outsl mov fcompl cltd xor add mov loop enter cld pusha data16 push imul fcompl iret std or loopne sbb inc arpl sub roll repnz movsl mov aam xchg test int3 insb mov stos pusha stos dec pop pop push pop push jb push daa int3 insb sub push fsubr pop sub mov js cltd in add jg fwait and inc xchg sbb and add xor jg mov jl add sbb es push sbbb xor pop lret mov mov pop and fs pop push xchg cmp or jo jg sub gs scas fmul and sahf aaa push lret push mov imul dec sbbl imulb cmp js bound cwtl arpl sbb pop fs in jl dec data16 jmp lods ficomp out xlat jmp or sbb cmp push xor aad push cmp movsl xchg ss and loope push iret push aad mov mov mov add push jg bound gs pop (bad) (bad) dec add pop sbb push push inc cwtl fs lret shll add cli ljmp push sbb pushf adc out inc push in jno jno bound fimul dec push add pop (bad) imul cmpsl jl push jmp sbb mov imul add cmpsb in fcoml lock sbb fwait sbb pushf dec dec pop insb cmpsb test cmp jge jne push and jmp fistl push enter pop xor sub push xor imul cmp lock and mov jl jnp sbb flds iret sub push fwait icebp cmp dec int jp sbb dec arpl shll js cmp jp iret out cmp popl pop jmp (bad) mov or test inc sbb dec (bad) int3 in jge jno push push mov aaa mov out out jb sbb mov gs push xor push mov cmp movsb sub sbb pop mov jo inc cltd mov cmp stc dec shrl outsl jns jno mov (bad) mov ds rorl adc outsl enter dec add and popa push insl mov test dec sbb add xor cmpsl out adc fisubl dec hlt lods sbb sbb lods test rolb rol js test dec inc movsb (bad) sbb movsb lcall jnp lock jne adc std sbb insb and sbb repz sar in in imul push iret rolb int inc xor lret inc insl and add sahf in push xor hlt mov dec jo fiadd jne cltd dec rorb mov enter jne cwtl (bad) jnp mov test scas xchg or push push mov mov cmp dec push push (bad) cli mov in in rolb xor pop cmp cmp cltd repz lea (bad) repz lock xchg or arpl sub mov into inc inc cs jae data16 mov jne test dec jp mov int add push (bad) adc scas pop cmp fldl test cld adc xor inc insb jmp js mov push outsb dec outsb sub ret cld leave fstpt je call cmc inc ljmp outsl lods sbb jg adc pop iret call push add into mov jg aaa pop cmp push xor lods das fwait cwtl jae data16 rcrl push mov push lret repz add inc xor sti (bad) loopne (bad) (bad) or adc inc dec mov mov enter jge call repz in xor mov mov imul stos lds icebp test loop mov insl xor in dec pop jmp ss test pop fildl in cmp push (bad) mov insb mov mov bound push scas lods dec add mov std hlt ret mov mov mov push mov fwait cmpsb lea xchg or cmp adc mov sahf outsb xchg out stos dec cmpsb test ja mov push int push fsubrs imul cld loope cmpsl fs pop mov es push or inc sub xor jo pop (bad) mov out pop xchg std add push mov out and jne popf pop xchg push fsub mov add mov xchg dec stc mov enter and inc fsubrl pusha xchg je dec xchg pop adc dec mov cltd jbe jbe rorb push cwtl mov (bad) (bad) insl (bad) mov icebp jp rcrb insb inc and shlb popl fwait cmp mov lret ljmp outsb add inc pop cs xchg icebp and sbb in mov fisubrl or add repnz inc mov push int out inc lret lods and fsubp out add push or sbb or aad fs bound icebp pop pop int pop ljmp cmpsb inc test movsb cld sub mov fcompl addr16 jo push jne js pop mov test ja inc jb cltd lahf lea leave cltd push dec leave push addl (bad) inc pop mov cwtl out dec gs xlat inc sub push je lods inc (bad) rcrl pusha dec dec (bad) sbb sub dec mov hlt jg js into xor mov jbe jne out inc inc fs xlat sahf repnz lahf jmp insb pop adc (bad) mov pusha insl icebp std xchg and pop sub js mov scas jmp imul out setne bound jo sub xor imul push cmpsb jmp xchg mov lods sub dec lock (bad) inc xchg mov jge cltd lret movsb sub xchg mov adc cmp (bad) inc inc pop jo jmp pop dec jge mov jo cmp repnz push push dec dec inc out call mov fdivl test jle imul sub (bad) mov lods int3 sub (bad) mov lock rorl xchg ljmp inc mov push or stos ret fs mov mov jnp and jle sub in stc xchg mov out repnz push push mov js add bound mov push int3 pop jbe out pushf sbb test rorl cwtl lods pop sub sahf es inc jns or incl jl test push ds rcrb loopne jecxz push icebp pop mov rcl mov xchg fisttpl subl jp push or movsb les (bad) pushf les dec lret out sbb cmc cs pushf outsl lret mov jp mul gs mov push arpl dec addl xor (bad) lock ret mov mov mov int3 nop sahf adc mov into dec push inc xor sbb rorb mov stos mov cwtl cmpsl jg dec pushf cmp (bad) into add test pop imul je sbb jmp inc push pop and dec and mov flds lods sbb mov out inc movsb adc subl dec scas fwait int3 dec sbb sbb sbb inc cltd mov out sbb fadds xor and int pusha ljmp sbb mov mov in cmpsl mov scas push js sarl rorl mov rsm jns gs pop mov inc cli mov jmp rolb outsb loopne jge xor stc dec shrl xor in jecxz movsl in xor popa mov lds clc or adc mov xchg test jp push lods and shrl aas push (bad) call or push adc bound push stos out lea arpl decl mov mov dec outsl adc dec pop push arpl push ds bound cli add gs pop mov mov es ficoml inc adc rorl lret sarl push rcrb cld cmp pop push daa or mov add sti jmp pop xor inc cltd (bad) enter cmp adc pusha cmp movsb imull fisttp dec adc ja lock fs mov and or jne rclb jb push (bad) cmp imul loop mov and int3 popf leave and bound mov in push (bad) lock insb push push scas or xor hlt insb daa mov (bad) aam clc outsl into divb (bad) cmp fcmovb ja inc add popa lcall mov out mov xchg add std push test ljmp or jle dec cmp pop inc aam pop or sub jg lods or push lret aam in aam test xchg fnstsw in mov mov shl jae push (bad) lock cld lcall cltd dec cmpsb mov fcmove mov pop mov mov dec or fiaddl mov test push cwtl mov and adc mov sub lds std mov mov imul popl mov add add mov scas test push stos xchg push jmp inc cmpsb int3 pop in dec mov out dec adc pop adc mov movsb scas addr16 fidivr addl and pop mov push mov sbb jl fwait dec sub (bad) and repnz push das add cltd dec sub sahf rol int add stc (bad) cmp push push dec xchg push mov loope out mov xor pop lock test in sarl rorb out icebp fwait push fdiv nop or inc sub add mov adc jl inc add ja jecxz insl sbb mov jne sub lods (bad) (bad) adc (bad) adc leave mov sbb outsb jle jns jae or outsl clc push dec lods sbb test cld data16 insb imulb inc mov mov sbb sti jl lods lods jl lods movsl js int3 lret xchg jnp insl (bad) or mov inc rdtsc dec dec sub sbb mov (bad) cld xchg popa adc dec dec mov mov xlat mov out (bad) cmpsb pop or (bad) pop pop pop push outsb popf aas mov dec fdiv shr iret push xor mov shr iret jp mov mov sub fwait inc scas cmp arpl push mov add inc (bad) or mov sub adc stc movsl outsl ds lods int3 test push fbstp ficompl cmp sbbb mov inc int clc lock sub inc xchg inc dec mov clc mov stos popl ret outsl arpl hlt hlt daa jp mov sahf sbb into outsb adc (bad) mov mov cmp mov mov cmpsl andl xchg pop jno sub jnp dec mov push mov out repz add cmp popa jecxz xlat inc pop cwtl clc (bad) ja push sub lahf ljmp and pop mov (bad) je dec ret iret xchg xor sarb add in mov gs roll cs in gs add repz jns pop push ljmp repz test mov pushf lds mov leave lds enter cli cmp int adc inc (bad) shll leave or movl fnstcw fwait sarb rcrb ljmp out adc int mov jp pushf add push fiadd mov syscall pop adc popf mov xchg pop sub cmp ret sub test cltd pop movsb jne rolb xchg pop pop dec test mov nop cli sbb movsb data16 mov idiv mov hlt add aas push out lcall enter jge xchg test popf decl push dec dec inc push seto cwtl mov popa adc lahf imul or pop setg stos and cmpsb lret call aaa out repnz fwait mov clc cltd pop sbb mull jo push into adc add dec mov gs xor fs sarl aad test mov mov xchg int scas jl enter scas pop imul dec sub push lcall push mov cltd sbb jp adc rcrl and xor xchg hlt or insl dec call xchg pop mov addr16 js iret int pop dec lret add push mov loop mov inc scas mov adc sub add xchg in sbb lret rolb push movsl and insb push daa enter xchg out mov lahf mov jecxz mov (bad) xchg pusha inc jo inc ljmp imul movsb ljmp sbb sbb mov cmc cmc arpl push in sahf sbb fmull pop dec push push clc cmc xor lcall jo (bad) jle inc xchg lods insl jp jne add dec rcr inc shl jno and add lret (bad) xor jae (bad) mov mov dec xchg pop mov pop bound repz mov cltd hlt dec int and insb (bad) lock pop jnp xor pop insl or popa mov es xchg jp mov cwtl cmpsl (bad) (bad) jle shrl sbb scas dec test mov push outsb daa and jl stos scas inc cmc repnz jmp loope pop loopne jnp repz and mov push sbb inc jmp push xor push sub fstl test int3 push add add push jns in loope (bad) jmp mov lahf fwait cld xchg dec ss movsb push dec mov inc push lret data16 aas xchg sbb mov add or mov (bad) push add aad fs loope cmc js push fwait xchg push mov push dec mov push imul jle lahf xor nop inc xchg push enter adc push mov outsb movsb je int3 out jge sub push (bad) sub in mov in pop and call flds test je (bad) loope xor int3 sub sbb mov or lods xchg aam daa ficompl in and je pop mov mov loope mov dec pop out mov movsl xlat cmp xchg pop push jo and mov frstor shr jmp mov jne dec test addr16 daa sbb mov aad adc and and push add int cmpb ja loopne sub js test in and repz aad aas pusha cmp sbb adc add inc or in push test dec dec es icebp push dec sub xor cmp and cmp ljmp dec inc sub fs dec fs data16 gs xor xchg push fidivr test push xor clc int dec mov (bad) adc mov clc mov mov mov lcall add mov dec sbb mov xor wrmsr push lock popf test cmp in xchg mov sub xor sub out mov repz mov xor pop xor rorl or rolb jbe mov jae jp dec cwtl es and xchg pop nop mov cmp dec lds lcall jl pop fidivrl jb mov mov mov iret imul pushf or mov pop jp xlat pop push ljmp mov jl outsb jle sub cwtl repz jge or sbb jle pusha jmp bound stos dec inc sub dec adc jae movsb xor stos mov fisttpll or cwtl lea xchg sbb push in lret jae mov push outsl cmp add adc push mov inc lock in ror sub pop insb inc push xchg aam int scas addr16 push rorb add dec hlt fwait shl jno arpl lods push sub jl into xchg mov shrl and adc inc (bad) push in xchg idivw pop mov sbb stc mov dec dec lds fwait inc sub insl jmp dec sti sti out jmp ret cli inc jge icebp adc cltd dec and sbb fidivr mov addl fwait mov adc pop fwait push popf iret push jp rcl ss sub loopne mov xchg xchg pop sbb pop jne sbb outsb sbb dec insl sub push sbb fs dec jl jne jmp dec outsl sub imul and mov das call xchg outsb add fs mov in jb in loopne out jle push lods xchg jg cmp cmp xchg out inc out cs test jae out mov or mov in (bad) mov mov das out mov mov shr jg shlb (bad) push movsb mov jmp test jl outsb inc bound cmpsl adc popf test adc addr16 inc and sbb ss jl fs (bad) ja jge pop (bad) (bad) or sbb jae push dec ss sub add jl roll jb adc mov dec data16 cld je xchg pusha shll lods repnz lret aaa stc push xchg cwtl xor testl dec jl mov pop jae sbb fstpt popf mov stc (bad) sbb cs mov adc push dec pop ds dec mov lods int3 cmp mov xchg sbb jmp cmp xor mov pop stc jle pop pop inc inc insb mov lahf cmp divl cltd stc mov xchg insl mov sbb aad adc inc pop dec and fbstp test xchg das dec push xor jle mov (bad) sbb lret mov fldcw (bad) or sarl leave mov jns dec rorb cmpsl fmull xor mov decb jg repnz or and push inc push ja enter int cmp push sbb in inc jae mov push (bad) (bad) fbstp test push test roll fistpll mov pusha je adc push stos mov imulb cwtl sub dec jp out sub lds xchg pop into cmp pop lods pop inc inc imul sbb inc push mov xchg in cmp pop ljmp js jno dec cld mov add mov pop push mov cmp jo pop popl lock out xor cwtl ljmp or dec adc xor adc or in movsb jl sub ficompl jmp xor pop rorl jo ss ja in cmp ffree in mov pop ds push in and repnz mov pop ret arpl sti mov xchg pop dec ss int push cmp pop mov xchg mov jmp arpl add into push (bad) scas mov pop aas xchg pusha add jle sbb jo movsb imul mov push push fsubrp mov rcl int3 ljmp push inc cmp scas pop cli mov mov jg jg jl scas dec jl addb pop mov fs out and fisubr mov out xor test dec sub inc cmc or scas es iret mov adc test sub or test (bad) int push cli cmp fdivs daa std insb fisubrl inc shlb mov test dec push js mov jl je push and sub pop mov lods mov jne dec sbb test ret mov jecxz pop mov mov ret hlt lock ja psubusw mov popf adc out out in sarb imul lret jo pop dec mov scas test inc adc les adc add push in hlt push cmc cld fisubl add fisubr sahf dec dec pop je mov das das fistl das and mov loope rcll lret adc xchg ds or inc push sahf sbb pop mov pop cmova adc or push lret hlt sub sub xchg std js sub cli aad xchg out xor (bad) movsb push adc xchg stos mov insb pop stos bound leave addr16 (bad) leave fs mov daa lods xchg insb mov sub adc fwait jns scas xchg dec stos loope push ljmp inc xchg pop mov icebp jns mov xchg aam rorl mov repnz push sarl lods into fs xor xchg mov into push lods add lods mov cmp cmp or test and std scas jne cmc int3 xchg rorb adc xchg rolb ds sahf add jge outsl call inc (bad) je inc inc add jmp scas out lods ret lods pop fldenv xchg xchg jno in sub adc xor xchg lods mov pop push jge mov adc sub push xchg idivb sbb cs cld jp xor add cltd jmp cld lcall inc adcl lods shll dec fnstenv push inc mov es scas pushf loop mov sbb fdivrs inc cmpsb mov dec outsb (bad) aam insb and jle jno push jo loopne iret lahf hlt xlat jmp inc add sub outsl jmp out xor sti inc cmp jecxz mov (bad) je inc in dec jecxz xor xchg mov aaa dec mov test and xchg jne jl push cmpsb mov fist aam enter sti jno sarb imul inc outsl fs xchg icebp int3 lret (bad) push sahf iret push call add int3 sbb mov mov cwtl repnz add frstor sub je sbb fidivl xor fistpll mov pop andl xchg hlt mov jbe mov dec je push xchg or add arpl and (bad) jbe adc xchg loopne les dec add fcoml pop insl sub sub fsts xlat add leave add mov dec shrb in sbb jmp push out movsb js std cmp push in dec (bad) pushf daa insl push jno dec pop or jp mov push lret and imul rcll pop cli mov popf inc je sbb lds add test fwait push stc push lret lcall push mov cmpsl pop adc shl jp xchg inc dec rcll mov mov mov dec mov test dec (bad) jb sub pop xchg (bad) repnz lock jle inc repz std fnsave sbb jae cld insb sarb sub jns in outsl pop push or lock ret inc inc dec mov pusha cli sub sahf cltd std xor arpl int3 js aam jg fimul sbb inc mov scas mov lret jge jp in pop rcrb mov inc inc inc mov pushf lods pop dec (bad) out es in imul add cmp jne ja std test add or mov pop adcl out outsl loop gs xchg ljmp pop das mov push je and lret (bad) negl mov in push sub int add repz ret inc xchg xchg pop ljmp adc xor mov movsb or sbb stc xor jg popf insl roll (bad) xlat cmpsl add adc jno test loope jecxz (bad) and and adc mov xchg push loopne mov or push push cmpsb sub push fmull (bad) mov push aam cwtl fcompl ja push fwait in and sarb fidivrl xor (bad) jle addr16 jmp imul pop inc movsb push sti movsb test mov call adc pop std cmp pop jmp out sub mov sub repnz add add pop movsl cmp sbb dec dec imul cmp loope lahf lds call loop fstpl lods sub lods adc adc (bad) xor inc stos pusha mov idivb out lods push imul arpl fimull ret mov imul js pop stos jmp insb jno sti das fcmove mov faddl xchg inc xor aam push fsubl je xlat rorb gs ret scas sti outsl xchg push and push outsl xchg xor rcrb cmp sbb outsb xchg pop mov dec insl (bad) sub stos jae jp movsb fwait mov mov push scas push insb jbe and int and cmp add jns inc mov cld mov mov in cwtl (bad) lret int3 mov lods xor je adc dec xlat mov cmp imul popf mov movsl xchg sbb test fsts scas pop ja cmp push mov inc mov jne dec dec cmpsl (bad) test inc xchg mov in jne lds or push sbb inc hlt rclb push int3 je test jne dec cmp out sti loop pop insl enter or cli jl pop addr16 inc jnp pop cmp push adc dec fsubl loope (bad) mov cld jae fwait dec mov mov push inc outsb out mov outsl js xchg push ja dec xchg fnsave mov cmp mov das popf or fwait or scas maxps scas cli cmpsb jg lret inc andl xchg pushf push jmp mov incl jecxz cltd sub push xor (bad) lret dec push mov mov sbb jo loop jnp add jae mov add fsts ret test ljmp and mov and ret fs dec push push push pushf ljmp divb mov cmpsb add scas out xchg hlt mov stos hlt inc les xchg loopne cs dec adc les lods sub sub and dec popa add push shrl xchg xchg push xor mov scas mov cwtl dec mov dec outsl dec sbb leave clc (bad) xor leave dec dec cli movsb aaa mov pop dec or es inc loopne sub sbb xchg add icebp add adc movsl mov out dec mov push jmp inc add (bad) jno sub mov sbb or insl fcomip mov js int out cmp cmpsb out loopne lcall xchg jo add mov fdivrl mov popa enter cmp repnz xchg in dec mov sub ficoml stc in (bad) out fisttpll cli out and sahf inc in jle js mov int3 adc aad or insl fstpl pop insb popa push aas enter jp mov hlt lods adc xor sahf data16 and inc adc test in les pop add cmpsl ss test dec stc mov sub aas stos jb mov xchg sar dec sbb js insl cmpsl sahf xchg in sub push adc adc jnp pop dec fdivrs ss movsl pop mov mov mov add cmpsb push cmp loope add mov fwait cmp fwait cltd mov xchg in inc pop jl inc xchg push imul mov push sahf lods mov movsl lcall mov or pop jne imul gs adc pop pushf ss pop and test mov mov dec cli call inc cli (bad) testb (bad) adc (bad) sti iret push call fsts adc enter add mov out cmp repnz rcrb cmc and (bad) negl rolb mov dec pop jnp cwtl inc jl xor mov cmpsl sbb test dec mov sub icebp mov cli js popa push cmpsb mov jl popf imul pop push ja mov loop lock mov call (bad) out and push test cli mov xorl sub mov test mov fcmovnbe push jb mov jnp pop mov pushf outsl pop sbb xchg movsl pop push shrl sub jne call push ja aam jmp mov insl push dec sbb push adc (bad) (bad) sbb and ret in outsb mov add lods jge rolb adc mov xchg jg call pop int3 js scas aas and roll or icebp into mov pop adc jl xchg stc fcmovnbe test stc ljmp pop or int jle pushf add stc inc mov xor shlb push sarb sbb adc mov jo cmp int3 movl repnz mov mov jge clc cmpsl push mov arpl fwait mov enter xchg inc pushf popa into adc pop fistpll shl popa pop int push push sahf push or xchg (bad) nop jg hlt aam test (bad) lods (bad) and dec out jp movsl hlt shr mov cld jge aam jge pushf jo loop mov scas outsb inc cmp or lret jnp pushl pusha data16 in das mov (bad) in inc sbb xor add xor mov cli les fildll mov pushf or mov in pushf int3 lods pop mov stos pop mov bound pop xchg in mov hlt stos ret mov add mov cld dec leave cld gs fdivrl and shlb and sub fimul test jl jne pop cwtl pop add cmc mov and mov pop mul int sbb or imul lcall imul test cmp pop sub outsl (bad) jne mov ja iret loope js es jle scas jb push sub aas add stos inc lds test xor add pop pop jns mov testb dec sbb mov sbb shrl pop arpl (bad) xchg jno and push push xchg mov and mov shll leave or (bad) lods mov ja into das imul push scas roll rcll cmp repz cwtl frstor fiadd rep std dec sbb int shrl adcl addr16 pushf mov fsubs pushf or sbb (bad) jbe pop pop sbbl icebp es pusha or inc out das aam cmp jl neg movsb push mov lret mov pop popa lret pop dec ja inc pop pusha xchg rcrb fs int3 push jle add cld jecxz cltd xchg pop adc out out aam je jne scas push push pop rorb dec dec dec das shlb sahf adc or loopne pushf imul call add out sahf jns lcall xor stc into xchg (bad) inc mov sub cld test std stc mov icebp cmc mov or push arpl sub ret lods and sbb push or sub call daa xor ffreep jle sbb ljmp repz push add adc rol add out dec les popf dec rcll jge jne,pn inc inc fsubrl inc push cmp push add push and mov (bad) cmc das mov mov xchg pop lods xchg push dec (bad) jg je jp loope pop insl push mov mov cld xor push hlt inc jo or xchg mov push pop in dec lea push fisttp in js mov ss push dec maxps movsb fwait rol inc mov push mov insl dec pushl insb outsb push mov mov sti insl cli or mov jbe cltd ss in push push imul scas dec sahf dec push jmp xchg pop jecxz and add (bad) sbbl cmp mov in fs je je aas jmp testl pop inc nop adc dec mov mov in dec in test pop bnd jnp xchg pop fldcw clc inc cli mov pop mov pop xchg iret into pop and push (bad) fwait lret arpl ljmp insb jne mov or push dec cmp (bad) sbb xchg enter inc das lahf add cmpsl aas cmp stos jmp push ficompl dec xchg push or dec stos in hlt add or into (bad) jmp mov push shr add pop fisubl leave outsb (bad) cmp or xchg insl and xchg dec jl lea adc add enter mov add or jmp push ljmp lret pushl jmp add xchg jo shl lea cli jo jmp cmpsl pop movsb rcrl xchg loope out dec idivl mov std dec lahf mov cld mov loope push les icebp add nop sbb or mov jp icebp jge in adc lock xchg and add out dec xor cwtl adc push sarl scas outsl mov cs rsm mov dec cli mov lahf js mov cmpsl push int bound shrl dec loopne lret call push mov mov dec add xchg push push dec cs shrb xchg icebp stos or jbe cmp fisubr (bad) xor leave inc (bad) out (bad) cmp mov shll and pop hlt push pop and dec or sbb fldt dec (bad) mov ret pushf sbb mov aad xchg sbb inc (bad) icebp stos pop int andl fs hlt and stc lods outsl popf nop test mov dec inc fs push add js repz lcall mov mov cli aad test stos xor cltd not lods xor jl out movsl stos loop sbb mov adc sbb sbb jo adc outsl push (bad) (bad) aaa cltd ljmp jg xchg inc mov outsw mov xor cs shrb sub mov sbb or push jg lret jne adc jge lcall jl popa pop cmp jge (bad) or in or insb adc mov insl ljmp aad fcmovb repnz subb mov pop jb and mov rcrb push sti mov fimul xchg outsl arpl nop sub sub cltd out dec bound outsb and mov and pop or xor adc pop adc xchg dec adcl dec test sbbb pop add sbb int3 pop cli sbb sbb jo xchg cmp (bad) add xchg sub jg repnz rolb pop pop mov sub fsts mov rcr outsb nop mov jmp add nop insb fmuls mov lods lcall or popf call pop dec pop push dec lods mov cli adc (bad) in sub push out cmp sub mov cs ret dec outsl lret add lock cmpsl int3 scas (bad) mov js stos iret cmp test cmp stos cwtl jnp sbb mov hlt xor scas jns sti pop adc or out mov jle add jl je inc or jo cli fiaddl lret enter adc fadds loop mov mov xor out mov or and sub inc cmp jmp cmpsb hlt in add sbb jecxz (bad) jb cli std stos and negb jge fnstsw ss sub push xchg loope gs mov pop imul mov dec dec pop int3 repnz pop das arpl push sbb popa jb or adc cmpsl add push gs add push outsb pop mov ljmp cs mov dec sbb ds ss data16 sub movsb in inc and icebp jno leave add mov push icebp loopne dec mov adc fnop aaa out adc jne iret mov cmp pop lock push insl xchg ret movsl sar add mov fsubs xchg cmpsl sub ret add (bad) fdivrl aam stos dec mov jb (bad) loopne xchg xchg push loopne jnp push imul fisttpl adc add jne cli push mov ljmp inc fwait xlat mov in inc mov (bad) dec cmpsb inc mov aam pop mov sub mov pop dec out push ljmp (bad) nop enter xor test sub je add scas mov mov cmpsl movsb fcoml or dec sbb pop stc mov mov enter fs lea fs call call sbb fisubrl xlat dec sub fiaddl js jg pop jnp sub out aas fnop xlat mov call sahf stc fisub or mov dec lods mov fidivl pusha cld arpl add pop inc push negl xor lahf dec push sbb (bad) mov cmp adc cmp fmull mov jnp pop in push sub cwtl pusha jmp fmuls ret xorb stc xor (bad) cltd add movsl or popf mov cwtl lea xor int xor push repz jne and sbb cmpsl scas jecxz sub repz pop bound or lods nop lret mov scas push mov mov jp add sub cmc sbb jns mov cli xchg idivb test jnp cmp add cltd jns subl enter dec pop stos jno mov out cld (bad) ljmp les cwtl out xchg outsb xorl jg hlt jle sbb pop sbb dec mov jns lcall cmpsb mov gs das xchg in ret dec mov sbb xchg les gs frstor inc in in add (bad) cmp mov adc push mov push or xchg xor jo jnp jg jae mov stos jle dec cmpsl iret mov or xchg das insb stc sahf out data16 aaa pushf jb rolb pop dec adc rorl mov push add fidivl xchg fwait loopne dec stos shrl or mov sti push sbb mov adc ss das cs mov insb movsb test push adc add cmp pop sbb cltd dec xchg test js loop pusha (bad) dec out jae pop push packuswb dec loopne iret mov (bad) mov push xor imul cmpsl jo mov in stos test cs arpl xor scas xchg xchg cli push icebp jle push mov mov arpl or add jmp adc in or hlt mov mov std daa fs lds mov bound jo addb or mov (bad) scas lds cmp sub sti cli inc sbb mov jo sub xadd into in lods jo test push cmp push jmp ret dec add ret scas cmp mov mov in std jge sub gs lods mov out mov fsubp jnp cmc and xor push add push setle nop add push dec push int3 ficoml mov rclb inc fwait adc push adc aas out mov std sub xlat ljmp mov nop adc (bad) and pop dec (bad) sub jns stc mov stc and movsl icebp sub adc cmp adc dec dec add cmp into orb aad jecxz into push in popl lahf mov sbb cmpsl xchg cmp pop dec movsl inc adc cmp pop call jns sbb (bad) fisttpl push cltd call jno test push int3 mov lea out lods sub pop movb or push push nop outsl insb pop pop xor add icebp add cs addr16 popf add or pop in test pop std adc dec xor dec add sbb out shll lds mov pop shrl push mov call add lea xor and push add adc out (bad) xchg xchg ficoml icebp cwtl dec jecxz lret inc jge xor sbb pop or int3 (bad) aaa pop movsb nop inc (bad) lods inc or xor test int xchg les inc test cwtl mov mov pusha jne les mov mov xchg mov adc movsb xchg into ret sub repnz cld adc into mov test fisubr jbe (bad) lods xor xchg roll pop sarb je into mov adc nop ret (bad) mov mov xor xchg push add out jno int3 push lock dec lds imul movsb out jmp imul mov out and lds loope addr16 xor rorb sarb shl insb push leave push fdivl hlt cmpsl mov dec or cmp lods popa xchg (bad) fnstcw pusha mov ljmp cmp pop cwtl dec dec jno in stc icebp mov in in aad test pop inc sub mov ret xchg jg push sbb mov and es mov mov sbb lret fisubrl or cmp adc push inc adc sub mov xor shrl lods cmpsl lods pop cmpsl (bad) pop test mov mov int pusha push incl push mov xor inc jg in xchg (bad) mov mov mov (bad) nop pop mov cwtl push mov ret xchg int3 inc add adc jmp jnp fist sbb scas pusha shl out out sbb adc jmp pusha outsl movsl inc mov jb ja inc dec jb in xchg mov inc mov sub jnp mov sbb push jge mov adc subb adc pop add mov mov ja ja insb xor out test mov cmc inc out mov lods push mov sub dec int hlt inc std test test cmpsb adc cwtl add and dec push out sbb dec xor enter push adcl addr16 nop ror cmc mov dec pop cmpsb xor xchg sbb movsb mov xrelease lods cli movsl out int3 cs (bad) gs (bad) sbb mov imul iret cltd (bad) rolb pop (bad) fwait movsb (bad) ja movsb andb push in hlt (bad) jnp lret cwtl mov arpl sbb mov test insl push (bad) cltd push outsl aad rorl std inc lcall imul push jo imul push push lea inc fadds cltd push (bad) dec push clc add loopne jbe sbb pop jg push in sub push imul xchg out mov jae into daa xchg cmc push pop loopne sub fbstp jle fisttpll test jmp push xchg popa lds scas popf out movsb aad mov jge jns jne and lock insw std xchg or mov fmul lock xchg adc sahf add (bad) adc mov loopne pop je fmull mov dec pushf decl imul pop and mov inc lock jo mov cli pop cmp cmp iret dec jmp dec add inc lods scas sahf inc xor lock cmc stos push pop incl mov lret xlat inc imul in mov lret jp or mov and sub sbb decb xchg popf (bad) hlt repnz cmpsl iret or and gs movsl iret outsl and add push mov test or sbb push mov stos hlt cld and test stos add loope std inc mov inc test mov pop inc jb,pt mov test mov push cmp mov fwait test pop and adc test sub push nop test mov xlat mov add inc pop (bad) add cwtl enter lods push nop cmp jecxz mov cmp (bad) out push loop testb (bad) fdiv pop jnp mov adc and pop or ja pop dec addr16 gs cmpsl rcr sbb add outsl push fnstenv iret mov es daa movsb aad mov lret mov rcr imul adc in cmpb add movsb lahf cwtl push inc outsl sub rorb push into mov test (bad) hlt push jae scas and mul out fisub mov fsts rcl cwtl mov push sti outsb cmpsl and hlt mov ds pop adc mov imul leave (bad) jo enter cli mov pop repz sbb sub mov hlt dec add je int3 cmc push sub lods (bad) fwait dec mov cmc push add movsl add sub mov icebp gs ljmp cld jecxz xor cld movsl out hlt mov push scas jno je mov mov ja mov cmp lods cltd movl addr16 xchg sbb dec int call mov inc scas fcoms loope and push icebp ja sub jns jl mov lods xor mov dec daa push and pop xchg dec push or loope ret cmpsb int pop sbb sbb in mov scas inc mov push aaa add xchg icebp pop xchg loope jo lea cmpsb cmp push outsb mov pop in insb pusha andl aad xchg les jl sbb iret bnd loope and smsw outsl stos loope sti dec lods nop inc dec sub aaa das jae xor push lea fmuls pop or shll lcall mov or daa sbb jo jg loop enter adc and dec lock loopne jle aad sub pop insb sub push mov push fisttpll pop cwtl in cmc dec fdivs out fidivrl outsb cmpl mov sub add mov imul cli jae jne mov cmpsl mov dec arpl iret (bad) xchg adcl mov scas (bad) lock and pop outsl inc into mov lods and sti mov cmpsl stc loope iret dec idiv insl cli add scas scas into mov mov push lods xchg (bad) jmp jne cmp add cmp push dec mov and loop les pop sahf adc shrb add fnstcw add add xor cmpsb push pop stos sbb imul push xlat lret ret push adc in or and nop push fcomps cltd pop mov lret mov xchg sub (bad) lods add mov lds or adc mov adc fwait (bad) sub mov push sbb popf stc lds (bad) (bad) or jne ljmp cmc jne fdivrl and push fldl jnp int3 aam es insl mov add mov pop leave call or pop loope fsubl (bad) int lahf pop (bad) clc mov loopne sub inc sbb aaa stos push mov xchg nop outsl in aam sbb push xor jp push dec dec ja test (bad) stos mov pop pusha fwait mov xchg pop frstor or mov (bad) push cmpsb in out fcompl cmp out pop lahf mov les push lahf out sti cmc pusha jge pop sbb pushf jp (bad) mov lods push inc cmpsl adc sahf or rorb inc out cmovae lds js mov adc fadd and stc pop cs pusha rcrb xchg ds das ljmp in popf push jmp fnop in sub fwait loope int sub mov xchg cwtl pop pop lcall fidiv leave ds test xlat das mov inc shlb pop pop stc mov cmp pushf sub enter addl gs fsubl mov cmpsl std lds mov test insb pop inc shl pusha aaa sbb inc test data16 xor lods insl negl adc jmp pop loopne jo jno xchg dec insl and movl scas or mov cli mov fnsave js dec inc mov mov push aad leave dec mov mov movsl mov add xor inc cmp pop dec mov jbe shrl arpl sti mov mov test fabs orl cltd adc insb call pop inc push jmp add movsb hlt mov cltd cmc mov add mov fs repnz pop scas pop inc sti push xchg or add lahf pop icebp xchg stos pop cmpsb lahf cmp popl pop sub rol cmp push sbb addr16 inc nop rclb aad aaa inc jne xchg fwait mov push jmp outsb sbb sti ss rorb rcl mov insl push adc aas scas dec subl inc jnp pop js or addl (bad) cmp cmpsl xchg (bad) sbb in adc and test xchg jbe lret imul aad pop adc (bad) sub sbb mov in scas les ret std sub push ficomp scas push pop pusha stos jp nop and sbb or mov andl stos repnz pop (bad) aad lods or xchg imul dec rolb push cs scas adc stc jbe jne sub lcall or fstps ljmp mov les in jb fldl mov cmp out outsb int outsl mov shrb xor fsubr mov push data16 dec jb,pt lret sub push dec or push sahf daa jge adc outsl in jnp rcrl mov arpl pop jne addr16 mov test xchg aam subl insl out ret inc (bad) scas lcall test notb iret inc cmp lret dec movsl and hlt mov xchg push push bound adc pusha movsl add xor push movl add mov push dec xchg fs cmp addr16 dec cmpsb enter add (bad) out aaa jno mov inc fnsave adc mov jnp fistl sbb (bad) ja scas xchg bound sbb mov pushaw xchg mov mov sbb push inc inc inc popf jno and sub stos push aad or mov sub push jae adc xlat sarb mov pushf fsubr adc cmp sub in mov jl in adc out mov hlt pop movsb out movsb aaa push mov sahf outsb or sbb sti in in rep jecxz inc mov and repnz (bad) lret mov in icebp cmc iret inc fdiv iret dec fdiv iret jo test jg movsb iret mov jmp test addb in ljmp cmp dec inc cli pop mov mov icebp lds (bad) idivb std gs daa dec mov hlt in jns inc inc add jo lcall in adc dec lret loope scas (bad) std jnp ret imul pushf xor add adcl cmp add xlat jno mov dec or lahf mov call xor or movsb jns push push mov pop dec jl adc push movsb stc pop xchg pop fwait and sbb imull imul inc out std clc ja and es in push mov cmp adc dec xor lret mov mov adc pushf pop shrb jmp nop dec imul lea hlt imul xchg jns imul mov stc jecxz lds pop (bad) out mov mov hlt call sub pop push mov sbb or mov nop js pop cmp add pushf jg lahf pop cwtl mov arpl insl cmp test pushf pusha mov js add cwtl loopne adc mov add int3 std cltd data16 lods fidivr push xchg in and fs dec inc pop lods mov pop mov outsl repz fistpl mov ficom xchg add imul mov aam mov fisttpll into stc jae paddq mov (bad) jmp push shrb aas loop mov inc fbstp mulb vmwrite pushf pusha out xchg mov sub xchg por ljmp or cli jle add mov mov jae outsl mov test mov cmpsl or adc sarb hlt mov arpl sbb aas nop in leave negl push mov sub mov jge es in inc inc int div stos movsb xchg jno adc add fs add js lahf inc int sahf std sbb cwtl stos add xor adc insl fptan out mov in lds mov imulb mov sbb jmp test jne arpl push dec call loop fadd mov mov cwtl xchg xchg pop enter dec jl mov jno sbb mov mov inc jnp add xchg data16 mov cltd enter lds xchg inc adc out fs sub pop movsl in leave rcr bound popf aad lods std jp fldt stos roll mov leave mov jno xchg or enter add add dec bound lods or adc add and lods push clc adc cmpsl sbb sti roll mov (bad) push lret rcrl sbb adc pop nop jo jnp mov rorb dec sub sbb mov roll jp scas lds test cmc mov ret or dec ficompl out add pushf add std das mov pop popa movsb (bad) hlt icebp mov (bad) mov xchg pushl push daa pusha mov out faddl jbe pop je stos cmp push js lcall fsubr repnz int cltd push (bad) icebp mov cmp (bad) pop pop dec xor ljmp sahf dec inc dec xlat jp and pushf push add call inc loopne and dec mov or xchg repnz sbb movsl sub jb fcompl sbb sbb sub mov push (bad) push mov jg fdivrs adc xchg shlb adcl je imulb and movsl dec and aas cmp imul stos out sub test lock sub stc popa ficom movsb jnp scas sbb push dec adc shrl in inc movsl cmp imul or xorb imul in jl add sbb adc daa and (bad) sub xor ret into insl test mov cld lret ljmp mov sub xor jmp arpl lods stos in adc cmp outsb lret pop adc cld cmpsl mov dec inc push outsb cmp dec dec dec dec pop ss xchg jp lret push mov stos js mov inc icebp lea ljmp fucomp jg pop rorb in lds push outsl xor mov adc adc and cmp je jnp ss les aaa es mov icebp push pop sbb push (bad) xchg arpl jecxz rcrl int daa xchg in push jl fst (bad) fisttpll xchg push cld add das iret inc leave and imul jb mov lock (bad) je movsb inc dec out movsl ljmp jne adc jo pushf lret add sarb inc sub inc or cmp add outsl push paddw or js adc push ja popf scas sub inc out mov add or bound aam adc repnz lock sti mov mov adc scas loopne mov out mov popa inc (bad) int3 ret pop add pop js test das inc shr mov clc adc xchg ja xor outsb in (bad) mov mov mov lret daa movsl jle pop mov aas push inc cltd cmp push dec mov sub sti or xchg lods cmp dec arpl cmpsl sarl dec dec mov (bad) cmc cwtl mov adc pop test cmpsl mov fwait pop adc push or cmp ret dec mov leave pop cmp or pop xor lods sarl add addr16 inc es dec push mov sub push call adc bound stos inc mov mov dec movsb popf fldcw test pop aas mov mov sti enter ficompl pop mov push leave xlat (bad) sbb int outsl pop test out (bad) xor outsb push add inc inc ljmp in xor mov sbb inc rorl adc jne pusha in cmpsl or (bad) mov addl pop sub cmc cmp mov bnd cmpsl imul lds push test sbb in push inc test pop push imul mov fisub fadds sbb dec icebp inc leave jl icebp rcll xor jle addb stos mov jns loope jno dec stos decb bound push mov push lods xor fcompl ret cmpb aam iret cmp mov pop xor lods stos dec iret lock cli jecxz std push or dec (bad) cmp out pop mov lods into or das sbb aaa or in mov (bad) jo lock stc adc mov ret (bad) cmp repz add inc (bad) jo pop popa jmp or and cmpsb sub add mov lods push rol mov sar pop add adc push jnp adc mov loop jp jle xchg mov decb dec sbb jnp push addr16 shufps mov xchg (bad) jbe and mov in dec mov push mov jmp (bad) add fwait sbb fsub mov pop test icebp dec dec insl push dec bound cli (bad) xor outsb nop mov adc mov jle test jo add inc rcll (bad) fmuls cltd or cmp xlat or jnp dec iret mov out hlt or int3 outsb jle xchg mov out jle add sbb jge mov push sub fwait or add add pop mov inc int3 add fs mov pop mov pop cld rcll sbb sbb adc loop movsl push scas or aas fcomps imul ret xor adc mov loopne notl inc lahf js push imul (bad) lock mov in repnz xor push nop pop cmp inc add sbb mov in inc popf loope insb test test loop cmc dec mov jbe jb sarb cmpsl popa push jb jae adc dec clc push dec in jae jae mov ss dec lea stc and in ret hlt or lock pop cmp dec hlt js sub int3 clc adc leave jo enter stos sbb sub dec xor sbb jne call adc xchg in sbb loopne js and in sub sub sbb loop bound test mov ret int aad scas lods out sub leave test lods fiadd sahf out dec pop xchg leave cli dec test outsl cmpsb cmp xchg pop push cmpsl mov push scas repnz dec sbb (bad) jne inc test sub xchg lret loope pop dec iret push scas or or (bad) mov pop mov xchg sub mov cwtl pop icebp pop sbb push pop mov ja insl sbb push (bad) jae lea xor int in stc pushf mov cmp iret cmp pop insl push clc mov movsb mov clc fisubrl pop and and adc hlt pop cmp jl into lea add xchg ficom xor (bad) jno in lds xor and ljmp adc dec inc mov cmp int3 xchg or clc js pop cli inc push sahf cld je pop lret dec dec fdivr push mov outsl inc icebp (bad) mov bound xchg mov call mov fdivs adc xor (bad) mov sbb fbstp jbe sub jne ja inc cmp jle sbb jae loope inc fwait pop cmp or and push or pop (bad) fs pop ss insl mov and xchg sahf loop aam test and xlat add mov xchg xchg dec xor add push mov sub mov adc mov jp adc push inc sbb aas mov cltd or adc loop push gs and push mov mov lcall lea dec mov jle imul aam roll xor cmpsb cmp loopne fisttp ss xchg inc or lock cmp rclb mov jb hlt push aaa sub dec call xor mov lcall mov pop out in xor mov push in cmp int lock mov fs loop (bad) mov dec int3 arpl pop (bad) (bad) outsb xchg orl dec mov repnz lret pushf int fisub pop and imul lock test rorl call mov mov jmp inc jl jbe ja dec mov pop or mov cmp vpaddq out test movsb push add jmp xor lcall sub mov out pop add xor mov fs push add pop fwait mov movsl and dec mov push or jg xchg inc rolb mov xchg and inc loopne and sbb js fildl xlat sar xchg fdivrl ret into aas (bad) sub xchg add lods aad imul cwtl (bad) in mov mov dec mov add mov (bad) jge dec in out adc leave inc jl mov dec jno ljmp mov dec cmp mov mov sbb scas leave out lds xchg cltd test dec sbb shlb lret dec pop (bad) or push daa xchg cmp xchg pop call mov or inc add sub das (bad) jg addr16 adc or pop jo stos out (bad) xchg mov inc lret mov cwtl repnz fcoml insl mov dec iret jbe lcall xchg jp cli clc iret inc in enter mov xchg push ficom in test imul clc cwtl jp outsl addr16 (bad) jae pop xchg jns loop dec cs cmp mov push cmp stc add (bad) ds (bad) mov (bad) popa jbe xchg jne (bad) mov data16 or inc je cs push shll popf xlat lods add outsb loope aas pop imul mov popa add dec sub mov (bad) gs (bad) push (bad) dec test or push add fsub ret insb fcomps cwtl mov jl out in mov xchg pop enter jns xor repnz pop xchg mov shlb mov (bad) jge sub or int3 push scas xchg cmp loope inc jno mov hlt leave add lock (bad) sbb iret inc insb pop rolb cmc adc punpcklwd inc mov inc dec lret loopne and in mov popf cmp cmpsl and mov mov add out test in jp mov das cmp lret mov sub sti lock jle fwait (bad) jmp jmp dec bound dec cltd jno pop sarb jp scas mov fstl (bad) lea loope aaa clc inc (bad) nop mov sub xor das push and jnp xchg lds cld fwait cld pop jle out push mov out pop inc iret out hlt dec xchg sub inc cmc lahf pop dec pop mov push and lock jno sub mov lock (bad) jbe in cmp mov fbstp sub fwait pusha mov sub test or out inc mov mov (bad) rorl xchg (bad) inc loope adc loope call cmp pusha add loope push mov dec lea mov xor popa xchg mov in lcall sbbl fistpll fbld mov push inc sub add notb sub (bad) enter test pop cmp lea inc clc in xchg je cmp into mov insl hlt mov test std and or fs loope mov pop test ret icebp icebp addr16 sbb imul loop sbb mov xor inc es lcall movsl in arpl xor xor adc pop and mov cmpsb mov mov int3 arpl sti jnp or push mov cmp pop mov test repnz nop push test std lods or dec push int popa and dec imul fsqrt enter ret push push jns in hlt lahf xchg or sbb in pop inc sub dec lahf out sbb iret push inc into stc aaa fild int3 sbb (bad) ficoml xor sub mov popf in scas je adc xchg leave push sbb pop sbb in les mov jmp aad jge pusha lds lahf push mov mov xchg dec cmp loope xchg push and lcall mov pop mov jne out sti call lahf dec cli adc cmp xchg push pop sbb lock insb mov jnp add dec mov pop xor push sbb inc repz ret pop repnz ds popf ficompl mov popa dec in mov shr arpl push (bad) mov bnd xchg repnz add not mov nop imul arpl movsl insb push cwtl adc (bad) mov cmp sbbl and shrb pop out mov mov addr16 addr16 mov es loop cwtl data16 sub enter pop dec mov dec adc sbb je imul fildll fisttpll test les dec ss dec xchg mov cmpl mov xchg lods xor mov xchg rep mov test rolb shl push push fcmovnb mov mov inc out out add lods loope (bad) hlt mov sub jnp add mov fcoml out mov (bad) sub test popf arpl leave push and enter jmp adc data16 gs mov cmp push adc es fadds lock jno push (bad) xlat loopne cli icebp movsb cltd jb xchg pop mov (bad) js lea add jne fwait inc int je (bad) or in movsb add out in dec clc (bad) int3 mov repz jne push mov es ljmp inc cmp push push add jg dec dec mov jno fmuls je jecxz mov and test lock movsl inc adc mov inc adc cmp stos jg out ret lock sub pop (bad) mov jns pop jg cli sarl out xchg jecxz pop cmpsb pushf adc andl inc in dec pop sub cmovae adc mov sub sbbb dec adc push fsubl stos sbb (bad) fstl call sbb cs jp ss out sbb fyl2x mov mov aad je pop nop outsl ds scas (bad) fistl in int adc jle xorb test (bad) in out add mov add jbe int mov jo jge cs pop jno (bad) xor push rcll stc or pop stos jle mov xchg and ret stc mov popa xchg cmp (bad) stc lahf scas sub pop mov sarb xor daa add inc rcrl sub (bad) les js (bad) fnstcw adc out mov mul push mov sbb lods arpl aam push xchg leave iret push inc mov in stos xchg ret or dec mov addb cld xchg cltd aam add test out mov adc mov or fs bound and xchg cmc js pushl inc mov lods sbb pop push ret xchg imul mov mov je cmp lea sbb jno mov jle call aaa push cmp or jmp arpl scas fsubr test cmpl aam jp cmp add mov js pop jo push sbb (bad) mov mov lahf movb add (bad) mov inc xchg ret xchg cld push dec jge dec and pusha lcall jle out lahf mov xor es in adcb xor rcrb mov bound cmp rolb push jno inc popa popf pop fdivrs jno and adc pusha enter push jge and jne and cmp mov push push sub pop xor scas bound clc or inc jnp and inc fldl mov push inc sbb mov inc cld push aad mov push dec xchg adc jmp or add out jo push arpl mov sbb xchg jae ret push stos out add aam stos xor or jbe jbe pushf shlb or lods out cwtl (bad) ret inc jne addr16 push andl (bad) fs add out jne xchg lds push and jge gs jge sbb icebp cmc aad sub inc mov mov xchg push pop das mov or mov in inc inc cmp pop mov je lahf adc leave call icebp in mov add fs xor xor dec ja push int3 fsts xchg pop scas scas fwait stos push stos mov mov jp in jbe jl lock repnz repz sub push fs add shld jmp mov call sub sub pop push int3 movsb dec movsb aam or out mov inc xchg stc sbb cmp mov xlat in mov and gs call mov movsb jl pop jmp push pop rcl pop daa mov mov addr16 sbb ss or dec jmp cmc pop xchg pop push in shlb rolb cmp fcmovbe call popf dec pop movsl iret inc ss xchg js dec ret adcb mov dec inc scas mov mov push popa mov push (bad) std inc inc cs inc iret in loope adc out std popf dec shrl push cmp test arpl repnz out pop fwait jmp iret mov mov repnz addr16 addr16 call call sub cmp jb fwait add cmpsb outsl jp pop xchg (bad) push gs test xor mov or outsb mov (bad) jo xchg cmp gs jnp cmp mov pop ljmp inc and insl nop push test cmpsl push in mov mov (bad) pop mov sbb movaps adc push addr16 jno fnsave imul (bad) jge and decb mov dec push frstor inc push icebp addr16 icebp jmp bound pop xlat lret inc imul int adc dec or add mov mov mov cmp jle dec test std (bad) push mov inc jge mov fisubl dec lcall stos cmp mov xchg pop rorl sbb outsl inc mov insl fimul addr16 repz jno mov repnz pushf pusha jae int adc (bad) mov and mov sbb in lds fnstcw xor je push ja popf call ljmp js sbb inc mov inc fs inc adc pop nop int rcll and push pop or stos out adc mov xchg inc mov xchg mov mov out out jno hlt dec cld popf lea adc pop xor shrl push dec in push repz sbb stos mov cmp and and cltd and xchg mov sbb inc mov jmp or rcll cmp and lea pop sub inc gs in or mov add ss pop push pushf inc or add push dec xchg push jae movsl fidivr mov adc inc shl outsl inc inc es sub outsl imul cld stos dec mov movsb mov dec cld insl xlat and xchg sbb into jns scas dec (bad) (bad) mov pusha cli js loopne jo and mov call xchg cld fdivrs dec mov xchg icebp cmp pop push adc adc mov pushf xor fprem1 inc fldl xor or outsb cld dec mov mov in pop loopne (bad) cmp jmp (bad) sub mov xorb inc ret leave add hlt repz cmp dec lods icebp pushf jmp or push ret cli or fwait js int pushf mov jle (bad) call mov ret mov int3 lahf (bad) sub loope cmp inc ror mov inc push xchg ret roll mov push jbe mov or sti push leave test imul aam imul mov pop mov cmp sti push sbb gs mov push cmp add inc adcl jns (bad) xchg gs js pop lret repz add push pop sub (bad) lock and pop flds dec ss (bad) jmp dec xchg pop adc into inc fucom push xchg loopne dec xchg es jno xchg aaa nop leave in xor cwtl push and inc call adc xchg sbb jp and pop ret out pop ret movsb sbb pop dec fiaddl pusha sbb xlat addr16 je sub xor adc or sub lds add and mov xchg inc (bad) pop gs adc inc stos imul daa lahf sbb sbb sbbl dec inc pop into cmpb xchg pop pop jbe dec hlt shrb dec test cmp jmp xor and dec push cmp or shrb out stc xor and pusha lods and (bad) mov popa dec jb mov xchg lret rorl bound lods test add add ja sbb add cmp pop xchg mov inc lahf sub push cmpsl add mov dec push cmpsl jmp mov test xor cwtl lcall ss js cmp pop add ds je fwait dec test xchg mov aas rol out or and adc in hlt cmc aas pop movsb pop test mov mov out mov mov sbb int pop add cmpsl sbb stos jmp cmpsb sbb mov mov stc test test int or xchg cltd pop jne mov mov sbb xchg add sub ret jmp pop jp ja cmp les mov adc test mov and push pop lds jle xchg out imul jmp and and mov aam xor add cmp insl clc orb cmp xchg xchg (bad) mov fdiv (bad) sti test inc ljmp cmp push xchg inc es pop insl daa lods or pop pop repnz scas jae (bad) loopne sub push push push cmc xor faddl xor imul mov dec mov icebp mov add push pop pop int3 aad adc cmp (bad) stc mov jno in push cs push bound adc dec mov test cmp jnp ret or lods ss jl mov cmp das dec and jno jbe mov mov stc dec jmp test mov xchg jbe mov (bad) imul js adc shr or (bad) jo inc mov adc fadds outsb mov lret jl inc pop addr16 (bad) je inc pop mov dec jmp rorb test lahf aad mov dec aad xchg pop ljmp pusha scas sarl jmp loopne inc pop test cli aad push jmp clc mov pop ljmp iret dec jmp insb mov xor jl sbb mov js xchg mov or mov movsb push (bad) jo pop sbb xchg or int3 stos test mov dec sub test fcompl xchg cmpsl (bad) pop fsubs xor sbb push and sub ret popf push imul xchg sbbl mov in adc dec xlat push mov jo xor jo xor jp inc mov arpl stc jno push xlat xchg scas das push ret pop insl jno stos movsb xor sub push mov push lea sbb push sub or jl push dec inc jns pop sbb (bad) ds dec mov and xlat int3 or and jae push stos andl push (bad) push mov mov and jae imul push jno push xchg sarl js pop jmp hlt mov push cmp jl std cs xor mov call jne movsb loop cmpsb add insb jecxz push lock mov (bad) movsl xorb mov mov push jmp dec and dec imul xchg sbb pop test jecxz xchg mov es fs fisub pop inc push pop xor nop dec lret call jmp and push inc sub dec lret adc lahf dec xchg push adc sbb xchg mov xchg gs out add jnp xchg pusha mov inc xor xchg and pop add inc xchg inc adc mov scas rcrb or stc sahf cmpsl lds pop jl subl mulb mov cmp xchg xchg add movsl cld xor jne cmp icebp jge aaa outsl pop lods cmpsl loope gs push pop outsl push mov popf lods pop jo daa push icebp jmp pop movsb dec out mov add and push fidivl dec rclb es dec cld jno mov adc dec rolb ret scas add bnd mov cmp and sbb popf je cmp lods aaa cwtl mov pop lret fsubs lock es pushf mov flds je sbb sub push js inc movsb push dec jno mov inc mov pop add dec orb (bad) rcrl data16 out or inc cld mov aas mov jne mov ficom lds jge mov in mov pusha xchg in stc inc cwtl and daa out subb pop stos or cmp mov je fdiv mov (bad) lret ret jge mov or cmpsl cmpsl push icebp jp rcl stc pop xlat dec jne out xor sub mov sbb cmpsb rolb rcrl loopne iret jl out lret bound mov add add movsb addl xlat lcall out add je xchg dec mov or out xadd mov sbb pop pop loopne int cmp pop mov jns inc mov rorl and push call cmp dec mov sbb iret jle push adc int3 mov jp xchg add inc nop push add fistp mov fsubs jle in loop,pt pushf movsl stos xor or jne xchg dec bnd mov bound mov cli int3 mov xchg cld mov sub cwtl scas cmc pop lods and push fisttpll test lods push adc add ja int dec aaa cmpb in jnp add dec xchg dec jge jne daa cmp mov mov (bad) mov lret js jb mov sub js aad xor js pop dec imul shrb xchg lods gs (bad) fwait repz loope iret rcl hlt sub xchg pop repz imul push scas loope icebp mov test mov push (bad) cmp push shrl xlat mov sub sub out sarl sub aaa ret pop cltd adc push popa cmp push inc push xor cld test mov fidivrl push (bad) mov lods call pop xor and dec arpl iret jo xchg jl call push into mov jge lds outsb cltd in jnp mov (bad) mov daa sahf add push ss je jne dec push data16 outsb mov enter cltd out xor sub lods add inc dec mov mov dec push bound and or int popa inc push cli push or jle mov inc inc mov jp jb loope mov icebp mov or mov add les sbb cmp and pop dec xchg dec out loope (bad) mov sbb xchg inc jno jg xor add lods in push (bad) push fwait es dec pushf or shrb out movsl xor in scas dec repz mov pop inc xor cmpsb pusha mov cli dec cmpsb xchg hlt push xor or ja push add inc xchg pop test jmp (bad) adc ds js push mov push test push movsl push mov lret out jb imul xchg rcl clc mov xchg push stos mov mov or inc xchg lods pushf mov or mov mov sbb mov (bad) loop adc pop or call leave add jo dec jb pop outsl lods je sub cli loopne (bad) mov xchg pop and sbb dec sub fisub cs std out add cli insl lods push popa cli mov push mov jle add das out hlt mov (bad) mov das mov (bad) aam cli in add ja mov push cmc mov lret stc jns mov fbld push divl push mov mov repz imul pop dec sbb sub adc in in inc je lcall mov add mov loopne sbb jne adc stos pop loope aam stc push dec cwtl add dec pop mov jnp push push (bad) push or fstl out ret mov pop adc push cmp repz stos subl loopne std push repz gs cmp sbb lea leave pop (bad) int3 mov lds jne daa inc sbb test and push std pop (bad) js inc repz aas rol shll xlat inc dec adc js jne inc xor dec js jp mov adc xchg cmp push adc cmp mov push pop pushf aaa sub hlt or add lret cmp xchg xorb idivb push ds mov pop arpl out cmpl gs cltd jne in inc dec shll mov mov in pop jo mov sbb adc jns inc mov pop test xchg jo cmc or out leave mov push inc push cmp sbb add repz je mov mov xor mov js call cmp inc jmp or cmp add xor cmp jnp pop ss lds dec sbb loopne movsl or adc out mov mov cmc lods push pop jp stos fdivr (bad) in or xchg in rclb sub jnp (bad) loope adc mov (bad) icebp dec iret fwait pusha lds push cltd insl pop lea mov daa dec imulb std or shrb fmull and inc dec lcall out jmp pop call mov inc int3 mov sahf mov jecxz or mov pop ret mov and movsb out mov inc cmpsb mov stc movsl sub js mov call (bad) clc pop or lds in ret call inc push mov lret mov lods out rolb cld adc mov add jae and push cmp fsubrs add lea mov scas test into mov fistp dec mov jb mov mov and pop scas int pop lock fistpl add fisubl movsb stos (bad) adc outsb add in sbb (bad) sub add inc pop mov ret mov icebp mov cs sbb data16 lret push cmpl mov in ljmp outsl pop mov pop into push cmp (bad) adc and mov jnp mov sbb push aaa popa insl divl test lods mov sbb f2xm1 adc out dec jo js rcll add sahf gs andl jp xor inc in and mov loop,pt imul lret push or int3 dec mov dec in repnz bound roll sbb mov repnz mov fs in dec jb mov mov mov add mov insl push jno fnstcw push push mov pop test out mov lea iret data16 aad pop (bad) out push push and xor xchg scas ret pop and repnz lds hlt sub jecxz sub aam scas mov call sahf and fs popa mov mov mov mov pusha sti js call inc inc aaa jmp lea gs repnz leave mov mov and lock sbb cmc mov dec mov add cmp movsl xor xchg jl inc dec mov shl scas imul je lea or push sbb sti aas add lret push add mov mov fsubrl jne shl imul pop mov cli and pop sahf notb inc aad adc dec jg adc fbstp lret inc leave add sub mov and lods jl int3 aas or mov adc and mov xchg push out scas mov lret jp idivb lds cmp inc in pop (bad) cltd and test cwtl push inc int aad add sbb repnz adc sub mov addr16 cs mov push and adc test xor or lea push loop xchg insl pop xchg ret push or jmp cmp adc fadds popa inc push pop call addr16 mov dec or xchg push adc dec fnsave clc mov mov (bad) adc (bad) and popf scas sti sahf xchg pop cmp jg call jno fs add hlt sub add and rcrl loop mov sub mov lret push xchg icebp out dec jmp mov push popa pop repnz cli xor mov sub es jno insb xor cmpl imul cltd mov fdivl and sbb leave addr16 jge aas mov (bad) scas (bad) (bad) mov pop sbb icebp aaa or xchg xchg pop mov jae mov dec mov mov cmp rorb mov push inc sbb xchg dec (bad) int mov push scas cmp into clc bound loope into hlt fs dec sti mov scas int aad mov xor loop stos xlat mov out xor jmp cld mov inc ja hlt add movsb push std inc lret leave cmp fs inc push pushw repnz xor lea cmpsl push hlt or mov xor ret push jp out mov mov sbb clc (bad) mov test cs jne icebp sub mov xor loope cld inc in inc rolb aas out dec sbb dec inc jp jb mov ret push lcall pop jmp push mov ja in (bad) hlt inc xor dec cmp xor mov outsl cmpsb addr16 push add cmpsl imul jg mov add jo icebp add push inc or rorb push push mov adc inc add nop das cli pop mov and sub aad out adc cmp jl out mov push bound sbb xor insb out imul mov nop xchg or rcrl out outsl pusha jbe rcll push movsl shrl fwait mov arpl inc xlat (bad) int aaa and cwtl mov push in pusha add cmp sti push add mov out aam aas mov out inc repnz cmp sbb sbb and pop (bad) daa dec out add adc or or and and pop cs fwait (bad) insl push ljmp sbb out xchg dec mov js popa inc hlt inc orl aad and rorl test out pushf pop in mov cmp inc jbe sti or mov jmp mov cmp inc jl std in scas or push dec ljmp mov fsts adc sbb testl lods inc dec dec mov jo std repnz out ret push in hlt jg sub inc lods cld push xchg fs cs adc xor jno cmc add add loop xor (bad) sub mov jno sbb lea xor mov das and cmp mov push mov adc (bad) mov (bad) fbld mov bound iret insl jb cwtl inc int3 push je les stos push je cmpsl adc (bad) sbb mov test mov pop (bad) jmp mov or movsl push sbb repz pop cmpsl pop popa lret cmp js fbld (bad) std pop shrl xchg scas lret into add mov mov mov lods scas leave xor mov enter inc xchg stc fwait jb xchg pop push jp rorb (bad) shlb push adc pop addl dec mov jne call cld stc dec sarl cld sbb mov into popa imul insl jae sti adc jg cld divl daa or loop jo xchg sbbl das push dec stos push loop add imul in pusha fild jmp outsb sbb incl or inc mov xchg dec rorb dec add pop in int3 ret sub daa repnz sub push cmpsb jl inc push xchg mov lahf lcall cmp push imul enter mov mov (bad) cmc jmp bound rcrl clc sarb mov leave xor push or push shrl dec or movsb push data16 inc mov mov push clc dec std pop leave outsb or aam push popf scas out clc lret inc lahf push pop push mov fisttp test in cs add lcall push push xchg dec in push sbb add jmp xchg push inc add inc (bad) sbb mov add push je cmp imul lods lret fwait mov mov frstor scas out idivb jg push loope mov lcall (bad) scas repz add sub mov imul xor lret dec xorl lea je outsb mov add ret cmp sar in jecxz pop xchg dec mov cld movsb dec daa adc leave mov dec cmc stos xchg pop stc add adc and and xchg fdivrl sub cmc andb stc xor pop test in sbb nop shrb xchg sub jbe jge dec ds fcomps sbb iret xchg loope insb lea and decb sbb inc shll push rorl movsl pop popa pop rcr fst mov jecxz (bad) cld gs fcomps add dec fnstsw inc rorb test fs sub mov adc rol popa mov sub mov sbb fildl cmp gs dec pusha out add inc arpl xor lods push js mov cs sbb in in in clc aad mov fldt push cmp jl xchg jae push (bad) mov js iret in inc (bad) loopne mov ljmp les add pop mov or mov hlt rcrb mov mov cmp and (bad) and jno pop fimul loop (bad) jne in mov in cld nop mov add orb mov lds mov mov ja dec sbb js xor (bad) dec push outsl inc pop icebp sbb mov in mov jns inc stos jnp mov mov mov clc pushf or xor cld sub inc mov rcrb in js (bad) (bad) pop std inc outsl pop add cltd loopne mov fistl pop push push mov sbb pushf outsl mov out pop cmp or xor push ret pop scas int sbb repnz jbe cmp scas cld mov mov jno pop mov call xor mov ja cmp sarb jb sti mov test aad je and lock push sbb stos popf rolb inc add scas sbb lods jbe sti sbb pop (bad) aaa sub (bad) decb addr16 push jbe add xchg test adc and jge jl ficoml int add (bad) pusha dec loope pop rcrb lahf into mov loope fnstcw dec and (bad) xor mov (bad) scas pop mov mov in push cmpsl jl xchg mov cmp imul js pop pusha mov xor or in lods sub cmp enter pop adc rol jge andb arpl cmpsb leave addr16 mov jae adc or das test sub (bad) mov and sbb xor sbb pop je subl loop adc mov addr16 xor je inc cmp adc xor sbb mov (bad) dec jmp in jae push push xor adc sbb in or dec dec sub or ret mov xor imul outsb and daa icebp mov mov pop rclb imul test cmp or mov jne mov xchg xor ljmp popf xchg in icebp test arpl push das imul (bad) push (bad) lea sahf in insl and andl stos or out pop sbb cs xor xor lret pop xchg int clc jle xchg push cwtl adc in call sub dec pop mov inc xlat or adc jno mulb lcall lods pop insb daa jne mov pop inc sbb dec jne pop pushf cmp out (bad) mov xor mov aaa xchg jp xchg sbb pop mov stos xchg mov inc mov adc (bad) js mov sahf pop xlat mov outsb imul outsb dec call xchg popa or repnz mov mov stos iret je inc mov push popf mov gs push scas push popf das stos repnz loope mov adc push mov and sbbl pop sbb iret shll sbb xor jl add enter dec sarl stos aaa push btr or xor xor add icebp push fnsave (bad) in sbb add add (bad) sarb lods lret adc stos pushl inc icebp int add fstpl test push push lods push mov das mov jb,pn pop jbe or or jne dec iret push dec dec adc test pop cmpsb dec cmp jp popf push inc jae sahf jmp sbb or pop imul xchg sbb mov dec loop out nop pop push int3 dec add mov mov cmp loopew aam sbb xorb (bad) outsb mov addl pusha rorb pop jae out push fs add mov mov (bad) push cmpsl addr16 sub dec add sbbb sbb jns xchg test mov call cmp mov mov push inc mov jg push subl jno mov push or adc (bad) scas mov xchg mov add dec mov adc test das mov xchg jle jmp push cmc push xchg shrb push adc insl and push fisubr xchg shll lds pop das mov ss fwait and mov (bad) arpl scas mov loopne and or pop int3 dec cmpsb xchg cli shlb scas fadds mov repz and jmp or outsb dec ss dec test lcall loope (bad) mov jo mov in jne pop push stos lods push cmp stc lahf xchg fprem1 mov sahf jp sti stos lahf addl add in fnstsw out jno rorl cmp ret pop cmp xchg push stos mov movb cmp fwait lahf mov int3 xchg lds dec push xor dec or enter push mov mov and inc dec mov es mov push (bad) into aas push mull bound in sub mov mov xor add insl dec cwtl scas sub lret and or out mov scas das dec pop insb in jnp inc pop clc adc int xchg gs push or mov xchg call hlt roll jg pop fwait addl mov or push es jge test pop jbe rcl push (bad) or cwtl push (bad) sub pop add push ja addr16 pop push in jle jb jp rcrb dec pusha jae out jge insb fdivrp lret aad adc divb or dec dec add enter pop jnp sub mov movsl dec lret fstps adc push xchg movsb in imul sbb ret fwait add ret push lock inc xchg add mov fwait mov jae jp outsb mov xor adc pop aaa repz dec push shrl adc dec add mov repz test xchg insl je fidivr inc push and xor xor cmp add jg outsl test repz mov ds dec ds sbb (bad) jg pop mov (bad) cwtl in inc jp call cld lods outsl daa xchg int3 pop pavgb aas jmp mov dec pop add xchg xchg jge dec mov call lds in movl js sbbb inc ljmp cmp pop (bad) out cmp in das sub rorl ret and out test test sarl inc mov imul bound dec or mov in rcll insl fwait pop cs jo or add sub jl sbb je or pop inc push sub mov push push lods call pushf bound insb iret fdivl leave cwtl push sbb cmp stc pop into mov sti mov mov jl ljmp test nop cmpsb hlt movsb push scas jle sti scas add loopne adc fs jmp loop xlat cs dec fcompl into fcoml sbb inc add jnp into or jge dec dec xor xor cmp xor bound xchg iret push lock xor jo loopne sbb mov scas test in mov clc jne push imul mov xorl push iret push xor test xor loopne sbb or dec inc add jg push sbb cmp adc pop stos push jl adc pop jge dec pop call stc xor cld lods cmp lock int ror bound iret mov addr16 gs mov pop cmpsb mov lods iret mov mov loope dec push bound sbb push jo loopne sbb lods lock push sbb add mov orl fdivp cwtl inc scas lahf stos out mov cwtl cmp ret mov pop xchg add push xchg aad dec jle in mov sbb xor aam mov in mov pop repnz rorl push inc push xchg movsl addr16 adc inc pop push jle mov jbe bound daa dec sub fiaddl and add mov inc test cmp fbstp mov enter xlat add sbb add call scas lret adc inc fdivr sbb add lds push mov sub test pushf ret mov cmp dec into adc xor jle jo mov or test dec divb inc daa insl lret jbe sub in xor fbld mov inc xor add outsb xchg int xchg stos enter int sub sub xor jne inc sbb jnp data16 aam jp inc (bad) cwtl sbb dec imul in push dec insl jmp push or cld pop loope js (bad) test ds stos push dec mov repz push mov inc ret rcr adc inc ljmp inc or lret repnz xchg insb push dec decb mov push or push js mov xor sbb cmp sbb mov mov sbbb clc add xchg xor fwait pop stos int int (bad) mov iret xchg pop fbstp scas cmp lock insb pusha lcall test lods out call add clc jns sbb test movsl push mov repnz repz clc int3 dec lds je in cmpsb mov jne pop std xchg and jmp add repz dec pop jl fwait outsl (bad) int add repz cmp in sarb push mov call xor stos dec xchg rcrl imul test jb cwtl into mov push out mov dec movsb xchg or scas movsb mov clc cltd dec nopl push dec cmpsb cmp stos adc inc dec inc js insb mov mov popa popa rolb adc ljmp sbb dec xchg mov rorl cltd icebp int mov pop mov sahf or mov mov sub add sub mov stos lret push roll in jp sub jl adc or insb divb mov push std out int3 insb push insb sbb push callw fsts repnz andl inc sub sub push or iret lods adcl dec test xchg data16 icebp mov cltd sar les dec in dec add inc xor inc pop lret sahf xchg mov xchg sbb xor jmp xlat mov jo add mov add lds mov push in sbb jl lcall je scas sub mov ret popa pop scas bound mov into push movsl jnp ret jg and push shrl loopne push fidivl adc add bound mov mov and push inc sbb hlt bound pop mov mov pop sarl sbb lcall jl inc cmc aaa mov scas inc jge loope pop sbb insl push dec push jbe jmp (bad) sbb cmp xor leave pusha je movsl push fistp mov pushf ror pop mov mov add xor pop insl call iret lahf lds cmp in in sarl (bad) (bad) mov out sbb pop mov js inc lcall stos xchg mov push sub or xor in adc and jmp push inc call nop loop lret adc or xchg addr16 lret mov mov jecxz sbb pop lock cld hlt aas adc imul cmp mov cli scas or jb mov mov sbb pop pop add pop pop repz int mov and pop mov imul cmp mov lods xchg fbstp bound push mov dec lods lea inc sub fs push push pop mov lods in mov flds ss ja mov mov jne repnz adc std jae je inc xchg out and pop jo xor xor lods popa roll inc lret repz clc mov mov jno cli mov dec cmpsb fisttpll stos mov sbb push dec (bad) (bad) jb mov fwait inc es mov fistpl gs pop push les push aas or mov push lods or shlb dec repz imul pusha sbbl stc push inc (bad) mov mov nop mov insl inc negb pop dec scas aad fnstsw xchg push int3 adc stos add fstpt mov add aam inc lcall add mov ds movsl jl loop iret mov sti push add lret adc mul pop nop out jns mov push out mov push std cmp mov nop mov jae movsl dec cltd out or hlt ds xor add xor ss adc xchg loope sti mov xchg in inc jmp fimull dec js sbb lret stc cmp cmp in clc xor mov pop movsb in arpl cmc bnd push push sbb lea not pop ror out mov insl repz stc divb ja adc adc jbe inc dec adc dec adc repnz test movsb pop xchg push sbb push jg push test pop fisub push jo push addr16 idivl and rclb pop push fdiv jb inc push ljmp sbb jne xchg cmp psraw das icebp rorb mov aad fdivl rcrb popa and cli rcrl mov jl mov vmread out test inc es mov loopne out jae mov jbe dec sbb dec and sbb sub rcrl (bad) enter inc pop inc divl (bad) pop push ljmp insb cld pop pushf xchg inc and insl add out mov loope or pop push jle lret push (bad) dec (bad) nop jne (bad) scas test xchg mov lods loope pop sahf ds lahf (bad) fstps mov xchg mov lds cmp imul mov (bad) xor lods add xchg repnz ss adc pop int3 dec icebp les xlat jmp lret push and insb ret sub inc push aam jge mov cmp scas arpl in sub mov je sbb not mov jecxz inc sbb or dec inc lods jbe insl das sar or cltd cmp sbb add mov insl pop cmp cmpsb nop dec shlb aas (bad) rclb jne ljmp stc sbb insl push jae adc mov add mov divl pop dec sahf mov or dec mov je push inc and mov lahf mov lahf adc inc inc in sarl daa cmp jo dec xchg addr16 (bad) jae les xchg push (bad) sbb in out (bad) dec pop jae mov in dec pop push je ret rcr (bad) xchg sub add outsb lcall sub imulb in push in leave arpl leave sub in mov mov fisub jne inc lret dec jno and (bad) sbb stos cmp push inc mov sub lahf (bad) jne pop int3 xor push xor leave and test leave je,pt inc repz and in ret mov cmp ror dec lahf xchg repnz sub ljmp mov jl lret cmpsb adc jmp cld in insl pop test mov std xchg add sub (bad) jo pop xchg in movsb jmp pop movsb push cltd mov movsb je subl nop mov leave cmpl pop mov stos arpl push les test push lcall dec inc sub in scas sub xor ret int3 cwtl ss dec xor cwtd mov inc dec inc fwait mov mov in stc iret or rcrl outsb sub jle ficompl pop psrld fs xchg imul adc scas cmpl push adc inc insb stos sarb stc xchg shll dec jmp push popl and dec and js mov sbb push lcall mov arpl in pusha jno icebp or rolb mov push stos clc jbe pop and sub or jo aam sub outsl dec out pop push pushl mov push jbe jl push xchg adc pop push pop xor cltd ret stos mov test jb les push nop gs xor std xor gs adc repnz cld stos outsb das scas lret pop fiaddl mov mov sahf inc mov adc mov aaa stos lds push pop mov pop int3 dec (bad) outsl adc insl lea or xchg jge adc xor dec mov idivl xchg pop fstpl dec push mov cmpsb pop test inc sub jne roll mov stos hlt aam inc cmp movsb roll cmp dec rorb jg push adc lods leave dec mov inc push jp adc imul push popf pop int out cmpsb sti pop mov mov cmp cmpsb mov in inc jo fldt js aas and lcall push ret jmp xor xchg xor xchg aam mov push out pop sti push cmp fimull inc xor jmp lock push jno push hlt jmp jecxz (bad) sub adc dec scas arpl jmp (bad) imul sbb jae scas lods aam jae repnz jb and test fsubrp push aam cmpsl push cmc data16 xchg (bad) movsb mov jnp fadds sub pop mov movlps sti mov das out xor in cmpsb add in cmp mov mov jl fcompl and pop rcrb mov adc pop mov jmp mov mov (bad) fisubrl mov inc add xchg stos sti (bad) notb ds mov cmpsb dec hlt mov cmp (bad) clc cmc scas inc daa mov lret into push mov jne scas mov or lahf das shlb or addr16 out repnz mov in loopne daa xchg loop icebp (bad) repnz in inc adc adc pushf pop mov insl push xor into and lock out cmpsb mov sbb arpl rorb adc data16 rcll adc int cmp mov lods movq pop movsb jmp sbb dec test pop out xlat adc ret pop mov xchg out pop and push xchg jl mov in iret rcll dec cmp cli dec fistpl lds dec jnp or cli cwtl cmpsb mov xchg mov push inc push or in movsb ljmp outsb pop dec xchg or frstor xlat pop stos xchg cmpsb or dec aaa sbb push fdivrs das (bad) iret les and inc adc (bad) pop fs out xchg outsb add js pop popf cltd call mov inc or adc scas jmp inc outsb out mov cmc sti add mov push fisttpll in jns and bnd sbb mov sub mov lret inc xchg adc mov jg push jle inc lods and aad push pusha mov inc cmp bound lahf lods cwtl push aas leave mov notl ds data16 in mov lcall icebp stos push adc mov fcmovnu cltd jmp mov push sub mov xchg shrb mov scas cmc std out jg addl and ljmp jl sbb in into pop xor call loop mov mov les pop mov enter or pop repnz bound movsl sub repz nop sub inc sub test adc mov jl in mov mov cltd fisttpl in dec imul mov pusha das test ljmp nop fcomps dec sbb pop inc fs push dec movsl cmpsl lret call xchg repnz rcll enter aaa aad mov dec lods ds and mov loopne repnz jne mov imul call xor push in cmpsl and jg jno jle fisttpl out not xorl fisub out and mov add push adc inc mov (bad) jne mov mov scas add (bad) xor jg or loope stc test pop push flds ret dec add pop xor dec fisttpl pop push scas (bad) jns and sub mov sub jl jbe jbe cmp repz cmp out (bad) mov push fmulp mov pop lea lahf adc inc push mov hlt mov add push xor xchg inc loope jmp sbb adc enter ds mov std test lds inc movsb push pop jp call test mov jl test data16 shrb push aam in mov rol cmpsb push fcoml loopne fadd in shl fsubs jle mov out fs in mov ret int3 push push into dec jg xor dec mov (bad) pushf les sub lods test push aam fisttpll cwtl stos imul nop add out inc pop sub mov shr xchg mov out test pusha repz movsb icebp fdivrl pop (bad) mov rcr sbb adc push pop or xchg shl movsl dec rclb leave mov pop jl hlt data16 int3 rorl adc imul mov cs insb insl cmp outsl sub (bad) pushl and aaa and mov je jne or xor jb nop mov sub inc roll xchg sub add xchg mov mov mov mov adc imul push daa or xor dec or add js fcmovbe mov adc and pusha test arpl and mov ss pop pop test cwtl sbb notl pop fwait sahf mov sti int3 mov jae dec mov mov add in push rol into pop ljmp shlb jmp inc imul sbb fistpll out xor pop dec imul mov out stos scas jnp es sbb mov sti add mov sarb in out cwtl adc pushf cmp sarb frstor leave lret shrl mov inc add xor cmc xchg repnz movsl jecxz rol sbb lock jp cmpsb popa ds adc jmp inc inc clc jecxz push push sub enter and mov add pop sti mov sbb repz aaa adc push sbb jmp or outsb lcall mov push (bad) xchg into pop insb dec xor ss jmp mov mov cmpsl xor fwait sub sub int3 push add outsb xlat add dec mov sbb out fwait mov imul push test dec rorl sti (bad) iret lahf arpl fadd sbb gs push movb add enter (bad) enter mov in pop xchg pop inc es xor mov stos shr or sbb stc jae aad mov test mov jg push fadds mov js imul nop sbb dec sarb ucomiss jmp test lret mov mov adc xchg inc sub and dec mov push jge dec loop sub (bad) data16 push adc jae stc mov jbe gs daa mov clc (bad) pop pop dec pop es push (bad) lret mov push inc mov pop dec scas mov adcl fsts dec into mov adc push test sbb stc or daa or mov jle repz mov push call jbe push push repz jl xchg movsb adc mov lods int popf mov jb push push (bad) xor movsl mov cli push enter cmp movsl in xchg jl cmp dec cmp add mov imul adc pop push loopne (bad) test push xor mov mov in mov mov xor adc dec mov xor jl std push ret fldenv (bad) out lcall push xchg out mov idivb rcrb les mov sub xchg push fnstenv xor int3 fs push pop inc or dec push lods dec mov and movsb adc mov movsl xchg push fldt xchg jg enter mov jbe in add aad sbb jb jle lea cmpsl fildll sub lahf mov and adc push scas dec mov dec jns loopne jbe sub sub dec cmpsl push sub popa dec movsl dec fistpll loopne cmp mov sarl or mov scas cli mov pop xchg add out out mov les jl mov mov js shr fcompl dec into in dec rorb out cli lea adc loope movsb neg fistl or xor rclb repnz mov inc adc std idivb add xor sahf (bad) xchg lret cmp cmp scas push test mov movsl (bad) loop xor es repnz icebp jbe dec mov or inc pop sbb push shr mov xor test add ret lret movsl lret aas or (bad) cld mov xchg movsl int3 cmp lods pusha mov cmp bound shld dec (bad) int inc dec inc add aam push and push lods ja jae popa jge sbb inc sub or (bad) mov inc cmp and loopne call add mov add aad ljmp mov cld jb in std fstpl sub arpl mov xor lods cli dec insl jle mov mov and mov in and pop dec out cli or dec xor fiadd jb fmull xchg xchg fimul ljmp outsl sub sbb dec push rolb int pop movsl das push mov mov pop in adc mov mov (bad) lods leave mov fwait lret jns rorl xlat fildl pop xchg mov addr16 cmc fisub sahf js xor out cmpsl xor push ja and movsl xchg cmp fdivs pop inc (bad) rcrl push sbb mov (bad) sub sbb add das clc repnz push lahf xor sbb stc push cmp les inc in pop test mov push lea xchg add lock in rcl std ss sub into stc iret xlat mov lds add (bad) mov into sub das fwait adc inc mov sub ret shll (bad) aam mov std add es jne rorl jbe inc lret in lock out inc imull inc imul mov pop adc jo mov sub jne in int lahf sbb pop mov in cmp cmp dec adc stos mov cmp cli mov mov insb mov lea dec add jbe jl mov mov insl cmp cmp mov int3 jbe in cmp pusha cwtl adc js in sub pop xor and cmp lcall sbb sub (bad) movsb std hlt lahf inc mov push inc dec movsl icebp xchg js ja std or pop cltd mov fwait iret dec push jne js ret test lods addr16 rorl into cmp loopne inc and (bad) mov pop rclb clc jg (bad) dec lahf sbb (bad) test mov les mov add mov xor (bad) out add fsubrs int cmpsl jae fisttpl jno test pop inc xchg stos inc inc cmpsl pop mov icebp lcall add mov ljmp lret push lahf scas cld mov divl push push adc add xor iret fs sbb mov aas hlt (bad) jo xchg repnz rorl cmp lcall pop xchg cwtl mov lret or push jo xor std into movsb lcall jne ja push add pop jmp in (bad) pop cld lret bound stc sub push push stc jae sbb fist pop or mov test inc (bad) inc scas inc add xchg cmp dec fstpl sbb jno xchg out pop popa pop push sbb mov rol push adc popf pop movsl outsb clc jae jne mov movl iret fmul mov cmpsb adc rcll fisubrl adc into mov pop add push cmp scas cmp cmpsb cli lret cs sub cs xor dec mov into inc out push push pushf pusha int3 pusha popa add pop and stc dec out (bad) call pop jle (bad) xchg xor xor jnp mov sti xor int3 sbb shr repz sbb mov mov int movsb push mov inc mov lods scas lods push shrb repnz pushf push pop dec repz (bad) iret lock inc dec push rolb jmp dec outsb loope add pop push inc cmp out xchg fs lret test clc xchg call sbb rorb add mov testl mov sbb add and enter adc jo push jg jb iret pop stos sbb rcrb stos mov jbe push lods fnstenv pop test data16 fmul js xorl jg sbb test pushf jne into pop lea rclb aaa ret scas (bad) sbb jae xchg cmp dec dec aaa adc jl sbb dec cld js pop jno imul sub ror out inc in cld jle xor push xor inc imul mov mov into out or mov inc dec lods test int imulb xchg adc movsl or pop push cmp push mov pop jbe jecxz movsb leave xlat hlt das sbb fbld push inc in sbb xorl cmpsb adc inc mov cld mov and movd sahf pusha add pop dec push pop or dec iret push insb dec mov popa or sbb gs pop arpl add cli dec out pop mov sub push in dec fdivrl inc xchg nop cmc sub int3 inc push adc dec lcall or cmp or in bound (bad) jno lock add adcb push inc icebp ds movsb std in stos stos ss ret or xor (bad) lea int loopne ljmp das lock and and xchg imul xchg inc gs add mov or add jae pop lret sbb fimul dec and push sarb cmp lret cs mov (bad) jb pop add aaa imul sti loope aad mov push xor push ficomp pop sbb mov cltd sub pop leave out out xchg add push lods pop std sbb lock push push push dec push push loopne cmpsl sahf xor (bad) pop xchg mov js xlat pusha cmpsb in jmp andl dec add lods mov xlat mov push add adc sbb or mov push dec fs repz mov sti fsubl inc imul mov ret xchg and insb mov sbb adc mov and je dec xor scas mov xor sahf mov xor mov (bad) push out sbb (bad) push insb test cld rcrl lock mov das les xor enter jae orb pop or rorl push pop push pushf xchg xchg int out icebp pop jns and int pushf cwtl dec jb sahf stos cmp jnp fidivrl repz adc xor ret and mov cld mov iret or imul inc pop test pop imul mov rolb or push jecxz stos mov xchg out mov lahf add cmp data16 or pop lds inc ret movsb daa ret cmp cld repnz js loop jle or jns enter inc push sbb test add hlt sti outsb cwtl dec (bad) lret cmpsl addr16 ss inc push push lods dec sub lret bound aam or adc mov jns lods pop lcall lret push into dec imulb push pop mov and call inc xchg jp inc test stos gs xchg iret and loopne push int sbb inc (bad) (bad) outsl je mov int and in xchg push jmp ds imul push xor mov (bad) xchg xchg push inc (bad) js push jl imul (bad) xchg out dec jne daa rcrl push cmp sub rorb pop push test pop mov (bad) push ja add fs das leave cmp inc push vprotb add out rcrl pop rcll in (bad) scas (bad) lahf fsubl lods mov repz data16 sbb fwait pop xlat into cwtl push loop outsb rorb xor push push cmpsl lret mov testb jb lods (bad) xor in inc sarl (bad) xor out add push inc test (bad) les xchg xchg mov inc sub inc mov lret cwtl mov mov pushf cmp dec sbb sbb adc xlat cmpsl and mov subb sbb fs pop out sbb scas push test mov pop int inc dec stos jo mov adc jns inc jmp movsb xchg fcoml push movsl in cld mov testl ja scas pusha int3 test mov int lods add mov ja jae mov mov cmpsb add xchg sbb pop sbb fsts test mov movsb int pop push dec sbb rep imul lret dec in sub xor scas add enter sub loope jno cmp push lcall cmp sarb or stos divl aaa popf mov imul xchg adc inc pop inc and fnsave dec popf outsl mov pusha mov jecxz out push int add dec adc adc fnsave addr16 sub lods mov push mov movsb cmpsl sbb scas xchg pop jb cwtl pop and lea lret or dec inc bswap dec dec or sbb or lret in xlat cld je or mov leave (bad) cli cli rcrl rolb sti dec repz lock mov in cmp dec xchg ror lods loopne cmp das in pushf dec cmp mov cmp xor mov dec nop cli popf cmpsl adc pop push lods sti sti dec shrl jae mov sbb in test inc pop inc adc inc xchg int3 cmpsb push and stos movsl aad insl (bad) loopne mov imul jno dec popa fdivr sbb daa push jno mov add xlat lods test popf dec push les push push arpl es lcall scas not jmp arpl xchg repnz adc aas dec push dec out push rorb cmp adc gs or push inc fst iret sbb pop sub mov xchg mov into jl or (bad) pop les push movsb sbb dec clc jbe dec add xor pop out pop jnp movsl push int3 jle je jno,pt repnz lea mov (bad) cmc push xchg in pop imul clc add fiaddl mov sbb out dec scas (bad) lods sarb adc add add and scas std push mov ret (bad) stc das push out mov jl dec (bad) negl adc xchg pop cmp xor movsl jmp movsl out int3 rcrb rcl jns add rcr stos rorb or icebp cmp mov mov aaa sarl inc pop ret mov sub xlat push hlt mov mov call push adc inc scas fs mov mov fadds or mov comiss adc fcoml aaa mov insb jp rcl in jb rorl fs gs dec ficompl test mov jge jge mov sbb xlat std xor add add lret shll mov add aad incb jo lret dec lods inc lahf imul jge mov jae lret and dec xor mov sub inc leave dec aam dec fs or pop sbb inc sti jmp bswap jo sub mov cmp sbb push mov pop ds shrb lea lret sub mov xchg ljmp push das xchg or test pop stos fistp xor sbb cmp xchg adc push xor sbb jno shlb incb jp mov (bad) push cmp aam dec shrl in nop adc jmp jmp out pop cmp push in and pop jne or in xchg jnp les lcall sbb cmp aaa pop shrl inc rcrb roll mov outsl cmp fsubrl hlt and push and inc add mov mov out or addr16 shll in sub cmp test stos ds add out rol or mov mov jnp ss jae xchg add push insl jge dec loop test cmpsl ss xchg jge test shl add inc sub inc pop pop cmp xchg xor pop cld mov fs jbe fsubs or sbb clc std popf add push push or insl inc push push sub movsb mov std ret adc xchg cwtl mov sub xchg or inc cltd cmp test xchg mov fs test inc sub aaa xor sub xor sbb std test pushf dec das push dec mov loope (bad) cld sbb or add aaa xchg test stc enter sub inc shl or push inc mov push cmp pop in js xchg mov lahf jns or dec shrl mov add jne cmp xorb and shr sbb mov pop aam mov sbbb out pop push jge loope inc or repz in lods push cmpsb xchg mov xchg mov pop xor test adc add push push cmc aaa sbb pop (bad) xor push lret int out lahf sahf addr16 xor or insb dec call push inc es mov push push mov rcll mov outsb std lret cmpsl adc (bad) mov pop and inc getsec fcmovne mov aad scas sahf xchg mov mov and sbb mov add mov lret add insl enter nop fwait je mov movsb pusha pop lea cmp mov aas jg cltd nop popf dec aad or add jne adc cmc push push (bad) pop push cld insb repnz cld ror and inc xchg sub mov lods sub into enter dec mov xor mov mov jne jg nop std xor bound int jg sbb add fidivrl and sti and call dec subb or loope fild fnstcw jmp add out test dec decl inc mov (bad) dec mov pop dec lds add add pop rcrb (bad) pop sbb int3 es mov lds and cltd push flds and insb icebp nop mov jne jmp scas push push (bad) mov lock hlt sti xchg cmc xchg adc jmp in push fmul sbb xorl orl movl jns inc cmp push icebp notb sarb inc adc jl push inc or fdivl rcrb cld jno push xor int adc xchg orl mov call (bad) ds stc push mov loop sub mov int add sub lds mov jge xlat daa push inc xchg icebp xor adcl xchg (bad) cmp add ret inc rcrl je in stc cs add xor jg sub or ja or mov sti mov dec xchg inc into sbb lods gs dec mov (bad) mov je dec aad scas les (bad) test mov out adc (bad) outsb add fsubs mov fdivrp push (bad) outsl or push cmp int3 push inc push movl movsb cwtl in and loopne mov push mov inc lret mov add mov push je aam sub lods repnz mov mov pop push arpl mov mov sbb jae push das out fs xor test scas cli lods mov stc data16 sbb fxch jmp xor mov push xor pop lahf and adc ja leave mov fucomi mov lock nop test dec or (bad) out movsl icebp int ds lea dec or or cmp adc fcompl shl sbb loop cmp cmc jmp fidivrl mov inc stc inc and fwait cmp not fwait lea adc cmc mov fs mov dec sti dec sub mov cwtl pop int3 cmp dec sub mov das sub out lahf pop mov push jmp mov inc add xor pop sbb cmpsl or dec lods enter mov xchg add shrl rorb mov int inc and repz iret cmp cli outsb xchg sub pop pop shll adc cmp ficomp sub jl scas fsubs push fs sub mov ret jg (bad) rcr rcrl aad and xchg adc lods fldl pop es and xchg xchg popa jne mov cs and adc inc arpl imul jnp lock mov cmp push sbb cld push lahf sub jns xchg insl push int3 sahf mov fwait sbb adc xchg jo xor popa mov xchg jo mov rcr dec mov das mov mov mov push fwait je jge mov int3 mov mov or ljmp dec mov push and call mov adc xchg push xor sbb rcrb push jne sbb jl mov push dec push cmp out sbb xchg sahf mov inc add mov adc es xor repnz adc faddl cmp or and andl dec jl frstor fisttp lret jb cltd rorl pusha jnp stos sbb mov sub int mov and push cmpsl ljmp pop adc cwtl jge mov xchg xchg and sbb pop and jae (bad) rcrb mov je pop pop rorb mov sar pop loopne cmpsb (bad) insl sbb inc adc jns negb or sub add cli fs dec jns cli lock test pop icebp out sbb int lock ret lods xor sub andl (bad) lea dec lock int3 or pushf mov jle adc pop push cld mov mov and int3 sbb repz movsb adc call fisubrl enter test jecxz mov xchg xchg pop mov and pop repnz inc (bad) incb or push and jne mov xchg call sbb cwtl rcr jmp cmp jae lock jbe sub pop stos lahf or stc pop jo jbe (bad) ficomp lea mov dec jnp or scas push fs push xchg pop mov lods mov jae jmp popa adc stos sahf mov les fstpt pop inc mov enter or test dec sti call fdivr mov and cmpsl cld rcrl pop test outsb icebp jp xor lcall xorl scas pushf jmp pop insb arpl sbb inc ret push add sub out mov pop adc and out inc idivb in je jnp pushf imul sub pop daa push mov xchg sub or (bad) fist jle insb test mov jns cmp xlat lcall pop popa insb imul inc imul leave lahf outsb mov sbb dec pop insb nop adc xchg pop (bad) sbb lahf xorb and adc xor xchg jnp add dec sub insl rcll adc sub loopne int into add xchg (bad) iret ljmp cmp loope cld sub dec pop jae insb mov rcll adc adc fwait pop cmp (bad) les or std movsl xchg scas int3 es mov fdivrl hlt mov dec xor (bad) xor sar fdivrs mov nop insl or mov pusha (bad) ffree jne push jo ret int3 idivl cmpsl (bad) cli shrl push clc jmp mov or inc push xchg das ret adc fstpt mov enter sbbl push je adc mov xchg adc xlat out test adc lds jmp xchg jp jp lahf mov sub les cwtl mov cld mov mov mov or cmp out in mov ss ds lcall adc pop mov aas and push int negb mov mov inc xlat and mov push lea sti lods jg movsl add sbb push dec xor in jp adc cltd stos xchg jecxz mov push fwait and jb das jb mov jge xchg push fldcw cmp insb mov fs or mov iret test fisttpll mov mov mov push idivl jne mov lock sbb or int3 addr16 lret or loopne lods cmp icebp mov sahf sub cmc jnp inc fcmovb leave mov fistl in mov mov add mov and out movsl shlb push xchg lret leave sarb popa (bad) es imul or jle push sbb pushf fstps dec mov leave adc data16 or push push mov dec sarb push add pop outsl loopne mov add jge icebp flds inc push pop or js (bad) lods jae insl sub fadds xor lock pop sub aas test and xor data16 repnz repnz cmp adc jns cmp mov dec push mov and and loope es inc loop jl mov sub in or sbb pop in (bad) mov push or push add in idivb shl mov lock pop leave lock cmc add fistpll add pushf push dec sub jns mov mov inc jge out pop jns jo sarl cld mov insb sub add push mov cmpl out xchg xchg dec sub mov inc popa lds pop mov (bad) iret stos mov push out in pusha pop test adc mov ret sbb mov imul fsubrs dec fist int3 (bad) xor mov shlb (bad) ror and arpl push jnp jecxz in pushl push test jl and sub pop and icebp pop xor stc xlat insb cmp in and push adc mov (bad) je mov mov leave call jecxz,pn mov aaa (bad) or cmpsb push mov and adc inc int3 jne sub ficom inc dec and push rcrb adc lods stc movsb sbb imul mul out les dec add lds inc gs andb sub jae,pn push cmp aam sub ret cld sahf add lods std cmpsb xchg in into (bad) out jne sub xchg mov push (bad) lea loopne dec sub cmc out jns dec loopne sbb adc dec int sbb or fistl loope adc cmpsb mov fdivp inc add mov and fsubrs and call icebp add stc popf outsl cmpsb loopne lcall sar adc mov sub jb inc jae test add inc int cmp sub push jns jns outsl adc lock outsb mov jb xor inc dec mov je cmp cmp adc dec (bad) pop jmp pop or mov clc jle add js inc (bad) ljmp call xor sarb test push mov dec lods jge imul mov int and sti orl jbe fdivr inc mov imul in push decb mov add jb aas sbb mov pusha xor subb mov xor fist pushf mov (bad) int3 in mov (bad) inc jg cmp (bad) pop jge mov negb outsb das imul lret hlt mov sbb in dec mov std fidivrl push sub xchg (bad) pop test ds nop xchg sbb xor mov outsb jae inc and pop mov jg jb lods ss outsl fs xchg mov pop mov push mov jge or loopne out in inc or push sbb test mov jo int3 arpl (bad) lods pop jno fwait adc (bad) in mov clc enter mov xor data16 repnz sarl xchg rolb adc out mov jno in xchg shlb pop hlt lds ja popa push mov lahf movsl adc pushf rcrl nop rcl clc mov sub mov mov test pusha fistl push xor insl addr16 sub cmp in dec adc xor sbb mov rclb ds negb cmpsl xchg repz clc icebp xchg and mov movsl aad lods push or insl add cmp cmpsb or fisubrl ljmp or mov hlt cmp mov mov cli sub sub mov aaa pop add cmp arpl js lea xor pop push (bad) es mov sub mov cmp sbb (bad) jae mov or cli and jge (bad) jne xchg (bad) mov mov fcomp movsl aad loope int sbb jl sbb icebp iret xchg (bad) mov sub lods sbb xor mov dec dec rorl movsl popa xor les sub mov mov jb ret (bad) out lret dec sbb in cmp loopne xchg jae idiv mov sbb mov leave je pop mov dec (bad) addr16 inc mov mov aad ret jl mov lret mov dec insl call lcall ss mov into mov jno icebp daa cmpsb add mov mov sahf pop jg add adc es mov out cmp pop xchg cltd pop test dec incb xchg pop test inc push daa mov sbb lock imulw jecxz pop xor ret lock jge cmp mov gs cwtl push bound in pop fwait dec cwtl stc adc sahf aam xor nop dec loope adc and outsl stos int3 into stos xor adc xor inc sub mov out aaa cmp popf nop cld push jge repnz out (bad) adc pusha adc ljmp adc stos fldt stos pop hlt fisttp or jno into mov (bad) xchg pop mov addr16 sub mov les enter movsb insb xchg xchg nop or jns xchg mov test inc dec push test int3 and ret or jl mov sbb mov xchg hlt mov push and fcompl xor sub rclb lret push int3 js lea push test pop jp dec pop test xor mov sbb cli xlat mov pop nop jl out (bad) add add sbb inc or repz push repz cwtl fstps test test (bad) cmovo in pop cli aam les cmpsb ljmp add rorb fidivr dec xchg adc test push (bad) lret cmp out mov xchg push mov sub push enter test push adc js lds jl pop inc sbb lret jb xchg movsl pop movsb mov jo adc and in (bad) mov sub cmp ljmp ja (bad) rorb push adc inc idivl cmp addr16 adc movsb mov push inc mov lret xor add jmp cmp mov mov cld lods lods gs cli sbb jg mov hlt int cmp sbbl or ret fiaddl scas scas negl pop pop rcrb cmp inc enter xor (bad) push repnz pop or loope test decb mov aam and subl movsb xor sub pushf push mov jl test jno mov mov sub insb inc dec xchg test lahf sar xchg jp mov or mov test push pop sbb pop ja add ds insb ljmp dec xchg hlt addr16 dec or cmp cmc jbe mov mov pop outsb mov es (bad) call hlt sti add xchg push pop and ret out out test test in xor mov mov jge push scas (bad) call add ret sahf ret push data16 fisttp add decl mov or jle out push add in or out loop arpl aaa inc sub push mov test jne lret and jmp push ds aaa std int3 pusha xchg (bad) push js loopne lret push hlt popa ljmp shrl fisubrl les repnz or push push jecxz orl iret mov nop movsl and sbbb mov scas add lret insb and xchg (bad) cmc pushf stos xor jecxz rcl hlt test jns sbb inc les ds ja (bad) mov imull std mov xchg jle jo stc popf push xor roll (bad) push icebp mov cwtl add jns fstp xor fs jle add outsb jge jae dec jo,pt insl mov add mov mov push jne jo mov call out pop in adc ror fstl adc dec call aas in adc cmpsl cmp add stos std xor mov stos lahf inc hlt rclb mov lock loope sbb mov mov adc sbb lret int3 push movsb lahf push ljmp mov icebp lcall inc (bad) mov out jne mov or push test push cmc pop scas ret mov adc (bad) cmpsb lret dec idivb rorl adc jp jge mov insl lcall popa xchg pop mov in loopne in test push cmp push lods and mov test rol scas dec mov cmp or mov aas dec or cmc pop dec push leave and rcl gs add std xchg mov add ret push add lods test dec jecxz stos loop or jno lahf jne ljmp jmp mov mov shlb addr16 sub addb jnp push lds lods sbb (bad) push lds jmp push dec mov push xor es jmp out sahf mov in outsb adc int3 sbb ret pushf cmp (bad) rcll mov sbb popa sub inc or rcl pusha inc adc insb mov sub or and ds or aam pop mov dec cs adc iret mov addr16 xchg jp das jb jle pop repz mov hlt mov mov into adc add mov jl aad lods lods dec imulb pop pop rorb bound jbe (bad) jp or mov jb push repz cmp sbb insb mov jb pop lods ds mov push (bad) cmp (bad) push mov hlt inc test jge or xorl cld (bad) add cmp add dec xor mov add pushf push repnz and pop fs out xor and jge,pn mov outsl test dec lcall (bad) mov mov xchg mov mov lds cmc outsl in adc stos icebp test dec or int3 mov lods pop pusha movsb cmp jns testl les inc cmp hlt ss or out sti mov sarl clc dec or xor inc jmp pop shrb cwtl ljmp repnz aaa xchg mov push fcmovb push cmp mov and sub fidivl push lds call lret loope mov in jecxz aad xchg icebp push repz jmp cld mov dec lods lret sbb test rolb leave dec mov sbb sbb popa mov and jp dec ljmp je dec inc (bad) push dec clc ffree cmpsl cmp add cld mov jne mov aam dec sub jl,pn jmp inc mov movsb imul xchg int3 mov js dec addr16 call sbb add insb and and daa pop cld inc jne pop fistpll push or and xor dec dec outsl pop xorb cmp adc fs cltd mov hlt and test mov test stos add inc lret add sbb jl aad pop div mov out or sar sub adc xchg pop jmp xchg insb jecxz mov paddsb bswap or loope pushf jecxz enter pop addr16 scas sahf arpl jbe inc push xor ds hlt sbb insl aam jae dec add cmp sub jp add cmp loop pusha add sar mov cmpsl fwait lahf add in mov mov mov cmpsl sahf jle dec xchg imul mov test pusha or sbb repnz mov pop mov push jecxz or iret inc push cwtl fsincos subl shlb lahf add mov lret fmul push adc repnz fs sbb mov mov pop out inc inc jnp sti pusha mov or and sub insl dec xchg adc adc jne mov aam xor rcrl and mov xchg lcall fsubr mov or mov mov cmpsb xor stos xor or pop in je jl pop mov dec gs mov loopne lahf dec call das xor mov (bad) lock xor mov in lret lea jp adc cmpsl icebp int3 enter jne push push xor push out cmpsl cmpsl dec adc sub outsl jg lods add rolb hlt cwtl fldl ljmp pop xchg nop push pusha push loopne out inc hlt das xchg cmp jmp out jl cs cmp (bad) repnz cmovle ret xchg xchg inc js dec out idivl out mov or lods pop inc xchg mov fldcw stos (bad) repz aas mov mov add xor icebp lods jl mov sub mov aad loope daa mov in jne repz les cmp (bad) xor sbb les or sub int mov push mov mov (bad) xor sbb pop xor stos out test out (bad) test push push lods cmp gs mov pop or ds inc cld jnp xor das ret imulb mov mov rorb repnz pcmpgtd lea jle mov popa test inc outsl jno insb push stos sub int3 pop xchg pop push cmp (bad) in mov sub dec jmp mov inc xchg rsm (bad) push or or outsb or bound lret mov or inc gs add cltd (bad) mov xor lods cli fs mov or bound push mov pop lret pop inc outsb les push cmc cmp lods push inc lcall or ss mov scas inc movsl aam sub push js inc mov mov test mov or rorb out das ss inc cmpsb out add out je js inc mov jp push push push rcll mov into jmp or pop addr16 lods pop push adc cmp ror cmp out (bad) jb lock add out mov loope (bad) popa into stc aaa lret push dec imul (bad) cmpsl lret mov leave pop inc test pop lods cmpl daa js das sub add insb dec and mov push jl shl jge and ds cltd cli in repz lea out pop ljmp insl int loop aas mov in test std out movsb cltd push push stos or call out add xchg add mov dec std add and xlat jo mov dec (bad) icebp mov jno or dec pop lret add xchg push cli cmp cmp pop xchg add les imul or push or pop lods inc jb cmp lret rorl scas (bad) pop mov std (bad) (bad) xor std sti scas leave jp xor pcmpeqb xlat dec test arpl hlt repnz jecxz arpl xor xor daa cmp dec sub cmp les bound (bad) jp jb das push scas add jns rep adc dec aad inc push push ja js cmp xchg dec scas rcl shll hlt rolb out inc mov rolw push cmpsb sbb xor add and add or dec pop gs inc mov popf push jne or cmpsb inc jae inc sbb hlt or and imul cmp dec sarl imul mov pushf jne nop xor das adc fisttpl out lret movsb movsl (bad) pop (bad) hlt cld adc pop adc dec or mov fdivrl (bad) sub mov push mov in jb iret push or mov rcl pop sbb in add test gs push push call stos aas inc push xor mov pop pop ficoml divl add (bad) and pusha clc pushf popf repnz (bad) mov push mov popl sar addl jno xor idiv icebp jp into dec leave in subl lcall fs dec lret shrl jne jg jge mov jns add cs pop pop (bad) jle mov in sub dec ljmp pop jg push cs and rcrl mov jg pop push int enter sub jo dec scas repnz out mov inc and lods es mov pop fldcw or dec (bad) jl sbb mov xchg ret mov sub hlt xchg cld js mov push add mov add adc cltd sahf pop dec inc lods fldl or mov into dec leave cmp inc push out test addr16 or cmp imul or lock jle or mov pop in ret ret push nop int or push inc mov pop iret push dec out pop adc add pushf mov bound out sub cmp in es pop ljmp rclb enter test xor in andb jp pcmpgtd leave and cld xchg leave or jnp adc pop js mov pop mov movsl rcrl shll inc fsubp ss adc mov dec and daa ffreep push pop mov (bad) imul push test adc mov js cmp negb movsb loope mov push adc dec dec dec imul ja aam (bad) loopne jne leave push cli loopne icebp enter or aad call cld pushl aas rol xchg mov cmp adc jbe jne jge sbb cmp sbb cmp fwait scas adcl pop add mov jns mov rcrl or testl lahf pop add outsl sbb in aad stc add rcrl (bad) icebp inc dec cs mov xchg (bad) mov cmp gs std sbb add ds dec mov sub xor aaa mov into jle xor fstps mov dec out sti gs or xchg adc inc mov mov push fist add mov shl jne push arpl pusha mov mov idivl sub jl xchg stos pop push je jle pop cmc je bnd cmpsl ror jmp jbe push jno cmp out jg push sbb in shrb fdivr in xorb mov inc aaa les pushf mov cmc mov pop cld cs loopne fs std jo lods push sbb and loope add shll test inc arpl sbb dec mov push dec push jno movsb dec ds ret test daa jecxz insb lret inc out and push nop dec cmp mov sbb push xchg in mov mov or imul stos dec test push pop mov and movsb in ljmp fsubrs xor aaa cmp popf and sub mov cmc and jno sti shl mov loopne pop insl pop cmp cld test or mov (bad) jge pop add jp push pop dec sub jge pop mov add pop movsb lods mov ret inc mul dec add mov adc jae or in ss or inc mov mov das out cltd sub pop dec cli jge cmp dec jnp (bad) movsb stos call pop fs addr16 je mov fidivrl xchg push decl leave pop lahf hlt stos repz pushf inc mov fcompl loop adc cmp mov stos dec and push in call add stc sarl add mov fs loopne inc dec (bad) aaa dec arpl push gs add xchg bound rcrl int cmc sti dec mov scas shrb xor xchg push sbb out inc add sbb arpl lahf js aas mov push lret jl jp inc rcl scas sub cld das sbbl mov in mov or and mov xor sub inc sbb dec test pushf push hlt cmp hlt cmpsl mov xchg adc fmull add push sub stos fwait out sti or mov dec scas dec or pop test push leave in (bad) fistpl outsb (bad) aam repnz rol push lahf test inc mov xchg push mov hlt mov cltd mov or mov and icebp (bad) jae jp faddl dec push cmp jne mov sub inc ss xor insb jl fmul aam inc fs clc std dec out lcall pop push adc not jmp xor pop adc aas mov and cmp je (bad) inc push outsl sbb sub (bad) jl inc push or mov adc xor lret and mov rcrb sbb dec insb or bound adc pop xchg test dec or lea push sub dec sub pushf ror jmp cmc inc lcall dec jae idivb sbb xchg loop cmp out sub nop mov gs movsl (bad) stc ror je pop je mov outsb rcl jge push int3 loop inc cld xchg cld out mov and faddl cmp cmp or test int add xor dec notb scas stc stos sbbl mov cmpsl outsb push movsb mov loope test aas ret cs mov clc inc movsb sub inc add (bad) mov outsb scas inc mov push hlt mov add fdiv mov pslld xor rcl mov cwtl adc test scas sbb nop ja and cmp xchg add int3 in aam fstps or stos test jg (bad) mov push push mov or mov xor jbe (bad) mov test fnstenv inc clc push das sub cmc fstl or idivl in je sbb and sarl xchg ret sub roll push mov out sbb std push in cmp sbb mov mov mov add adc out inc dec lods enter dec iret rol les (bad) sahf sbb push inc mulb lods hlt mov pushf cwtl add mov mov lods xor sar mov setno inc movsb cmp cld cli hlt ret push dec test sub stos inc pop inc aad xor out sub cmpsb lret clc aaa leave adc pop popf xor xchg into mov jge lods cmp hlt out movsl mov in lret pop out leave sbb cmp leave dec inc das push push test add lods push xchg cwtl and push outsb sub sub popf pop stc add jne sbb decl mov jl dec or inc add xchg loope or mov xor jl stc cmpsb push test repz push add add jmp scas mov fmull gs roll in fbld dec jae ret test add dec push jge in imul imul and inc hlt sbbb aaa fisub orl xchg mov add adc sbb push fwait stos mov sbb insl hlt mov ret lods xchg popf (bad) push insb lds es mov dec out jnp mov icebp or fisubl add mov dec push pushf add dec mov lcall (bad) mov mov repz mov mov (bad) stc ljmp test jp sub xchg mov push sbb out ljmp pushf add (bad) sbb add fidiv dec (bad) or push add dec sahf adc js int3 pop jecxz int3 popf adc movsb loop repnz aas xchg ljmp jnp popa push insb fmull xor xchg cmp in xor lea mov xchg push sbb dec test cmpsb cmp add pop mov (bad) xor pop jmp mov test mov cmpsl jns mov sub imul push jnp (bad) sub test inc lret in dec in mov addr16 out cld popf jae lret inc and lods (bad) mov ss test mov mov (bad) incl inc cwtl or movsl repz pop adc rol (bad) push push daa pusha mov fildl push out sahf hlt les sti mov ficomp loope fnstenv inc ja sbb aam out sub idiv pusha (bad) pop mov xor jle or (bad) push cmc div cmpsb push rorb les dec mov pop loop xchg arpl jl ja insb xchg xor jp addr16 inc add xlat mov (bad) jg jmp insl pop sub mov loope dec mov mov rcl cwtl nop cs xchg out dec aad mov mov adc shll int3 movsl or mov pop in fild shrl inc daa dec arpl push fdivs mov pop cmc pop loop mov xchg inc outsb inc outsl mov or mov (bad) xor popf scas push cs in mov cld das or mov or inc repz (bad) pop push add std add push push out int3 jne ljmp pushf in jns rcll (bad) popa or xchg mov mov add ror push push add or addr16 in adc fs scas shll aad loop clc das jbe sub (bad) pop nop push or std mov dec cmp jns push xor lcall clc cli pop xchg mov push (bad) dec scas cmpsb lahf imull push mov mov cmpsb push add outsl lods xor adc xor jb lret inc lcall jg mov mov push fildl scas mov stc or push scas dec in cmovne cmp mov push in neg loopne push mov fwait add add jb add jae mov xor sarl fs pop or addr16 jmp xchg push rcl leave or jne cmc add jb jns in std and sub adc lods loopne lock scas icebp sti adc imul js push out (bad) in pop inc and int3 pop arpl xchg xchg test jl aad xor add sbb xchg hlt jae sti mov cs dec ret mov dec mov mov lock xchg lods ret jnp or int3 insb mov lock aas jae fdivl dec add mov mov push mov (bad) jbe mov hlt push adc mov mov cmp jbe sub loope int3 pop mov mov pop mov and stc je in mov in xchg cmp xor inc and mov arpl scas stc outsl jle mov cmpsb sub jne sub mov push outsl cmc je sub subl imul mov out lods xor add mov fwait (bad) jnp addb dec in mov movb xchg mov popa lods sbb out out xor jo adc add aaa fdivrs sub rcll adc jge stc cltd push add mov pop pop pop stc dec mov jl inc lahf push cld (bad) pop cs icebp sbb xchg (bad) mov mov mov add ds je pop mov arpl cld jns dec aad sub mov test mov pushf mov adc test (bad) jp cvtdq2ps popa cmp nop sahf fidivl xor sub mov jmp lea or or test mov pop mov (bad) jo add mov and inc rcrb add pop xor ljmp push jne stos inc addr16 mov lock jae mov leave jge lock inc cs pushf mov cmpsl arpl scas fs push jns or mov push mov dec fwait inc rcrb mov jb (bad) hlt fs dec (bad) fildll xor arpl out xor std add sbb (bad) push aad push out mov push aas jge add das ficompl js popf fs adc shl cltd outsl insl arpl inc mov mov daa jmp cmp out in mov stos xchg mov inc les ss sti xor inc ljmp idivl or push popf jno in push pop faddl lock enter add aad dec call jnp aaa sub (bad) mov sti test sub rorb sub jmp gs fcmovnbe and ljmp loope andb pop dec out jl jne lods or int xchg daa sub sub xchg cmpsl cmpb pop in repz scas cs icebp aas leave lock out aad sahf lret (bad) lcall loope mov mov mov aad and or rolb jg sub mov mov push push cmp leave xchg add fisttpll loop jns cmpsl xchg cld outsb mov lods test pop mov nop push jmp pop test mov sub mov rcr mov std in and push adc leave jo xor bound imul adc and inc (bad) push rol nop pop ljmp mov push scas (bad) mov scas sarb jmp pop mov sar stc outsl hlt and push lock jmp jb pop inc mov pop (bad) xor inc jns jbe cwtl add das loope add add cmp int mov (bad) inc mov push push add lods movsb (bad) cltd jmp mov das dec dec fnop cli imul pop sub fdivr jne pop cmpsb lods jmp add pop sub in cmc cmc push popa pop jne popf (bad) mov std repnz divb ja xchg imul and inc mov mov pushf push cmp insb sub dec int or sub (bad) pop mov add mov into dec mov sbb (bad) xchg incl out add test bound loopne sbb mov mov outsl enter jle mov and xor dec movsl mov mov out mov adc cli in sbb gs lock mov mov (bad) or sbb cmc insl inc roll orl arpl adcb xlat push loope push adc movsb or xchg push xor mov push mov scas mov and out mov pop lods jl cmp int cld inc cmp pop fs fs mov adc fsubrl icebp pop push mov pop pop mov notb mov jo add dec push or (bad) lahf hlt pop sbb cmc jmp cwtl jbe pop cmp jp lcall jo add enter call fiaddl ds ds fiaddl sub add mulb (bad) stc adc pop or lret jno rclb cltd inc mov (bad) cmp dec adc sub jle add lods pusha cmc push js test mov loop subl out push mov mov sub pop inc insl inc data16 div add mov jl mov push push inc test stos fs xorl mov movsl mov push pop and scas xor mov dec gs cwtl xlat xchg jle xor sub mov or icebp shl dec mov cli jle lret fbstp mov jecxz sarl adc lret mov cmpl pop sarb push mov clc or imul lret outsb xchg rclb mov mov pop outsb shll and test sub cli push lea jecxz notb mov adc sbb jnp jae cwtl xor push data16 nop mov andb andl mov loopne add sbb dec pop push mov dec mov stos (bad) pushf divb sahf dec dec notl adc inc or addr16 movsl jne dec bound shrl fbstp mov xchg jbe clc dec mov test sbb adc pop lock fwait out adc dec and mov jecxz jbe push cmc ljmp in dec and push (bad) jno or xchg xchg lock pushf cltd inc pop jb scas pop out popa lock inc aam cltd and xchg ja inc jbe bound add jb mov (bad) icebp outsb mov xchg inc outsl imul mov inc pop xchg dec xchg out mov sbb icebp add and lds mov pop dec and jl (bad) jo mov cwtl movsl ds rol mov and mov cmp (bad) dec repnz mov pop mov jo push in faddl outsl xchg rol pop or loop jnp xor sub pop push mov icebp pop mov pop sbb aam mov jge mov cltd into ljmp dec enter push or mov cmp cltd mov leave (bad) hlt ds mov stos stos push cld inc js rorb push test addr16 (bad) cmp add sti rolb inc ret add mov mov and in xchg xlat mov xchg pop (bad) mov pop nop jl enter or xor jle scas inc lcall cmpsb (bad) sbb (bad) (bad) jge cs sti mov pop xor add jae fldt std xchg mov ss add in lret pusha pushf loope imul mov pop enter inc mov ljmp js dec dec xor shlb mov push sub nop jl pop mov cmp adc sub into push (bad) in dec cmpl stos dec xchg js sub lock cmp ret movsb in lds push mov test sti xor or mov dec mov cmp mov js mov and sub cli jmp sarb iret mov cwtl jb jmp call xchg gs testl movsb jp rcrl or or push mov cld daa sbb and and or fs adc jns lea lds push dec sbb rcll push sub pop shrl inc ds mov or scas (bad) rorb add cwtl call dec mov test mov gs xor jl mov (bad) pop std dec jb push mov jo cmc mov es xchg ret scas cmpsb pop and or add mov push xor dec aad mov incl or pop pop iret jecxz loope out xchg mov les cmc ja imull adc jbe push imul xchg sub mov fwait test mov fcoml xchg lock or push push xor das xchg in arpl outsl jge pop and add rcr or mov sub insb ret (bad) dec push hlt jns pop pop addl jmp pop (bad) or lret pop push js xchg test das push add sbb es aaa cmpxchg mov inc stos int3 stos int repz xor cmpsb push cmp in int3 icebp pushf je int lret mov cmp mov jp ljmp push int3 xchg int in (bad) jmp bound mov or mov out fwait aas mov inc adc fidivrl pop pop xchg clc push call fiadd inc adc cmp xchg pop fs dec cmc lret insl mov add mov xchg arpl fldt mov mov dec stos loopne ljmp stos idivl cmc xlat test sbb inc (bad) lods insb mov out repz mov insl push and jp push movsl adc mov xlat inc ret mov idivl fdivrl je xchg and pop push xchg jno sti psubsb dec insl mov push pop mov ret or mov xchg xor push pop mov mov mov push push ss mov dec into imul push lret jecxz inc mov sbb jl cltd adc insl in fidiv out or dec mov mov xchg dec cmp (bad) call cld mov or std lods pop jo addr16 test mov test xor fs xlat add movsb add leave ror insl push into jl aaa mov into push (bad) into sub mov mov jg inc je lahf sbb sub or fabs aas arpl mov (bad) mov jecxz cltd lock pop sbb loope icebp stos mov cmp push movsb mov cmp imul out dec or fidiv je aaa fwait scas adc (bad) cli pop movsb mov jmp mov push out xchg add scas cmp imul sarb shlb test xlat sbb pop xor or sub lcall std call fidivl push and sub das mov mov mov les jl sbbb (bad) hlt fidivrl jmp out jmp cmpl push (bad) cli (bad) in mov test mov ljmp mov dec cwtl ljmp jp sbb shrl mov or iret je lock jge cltd nop out lods (bad) sub je notl test pop mov movsl test lahf adc enter or inc lret push jb inc pop cld fadds pop inc je loope jb pop nop lock popa or (bad) popf mov shrl call cmp loope test cmp sbb push dec cmp sarl jg (bad) cmovns jge lcall jno leave jo (bad) mulb stos aaa push xlat inc insb add jmp gs in fimul mov clc call inc in (bad) push shll adc lea (bad) outsb mov das push cmp cmc flds hlt movsb lock push rcrb iret inc mov push lcall scas sti lods das in aad fistpl (bad) test sti push ror mov icebp dec cmpsb mov sbb ret xchg push int3 iret mov aas (bad) mov mov sahf inc je pusha or aam push dec ljmp shr mov (bad) popf test dec inc add mov lods xor fs dec outsl aaa xor mov xchg adc iret inc loop outsb loope stos call pop xchg and int add or (bad) xor mov xchg call adc jl cld clc mov pop or ficompl out inc mov in cmp jne mov pushf inc mov ret stc jg mov rolb xchg jno repz call push sub or cmpsb push inc lods jle and sub outsb iret stos xorl pop flds movsb mov inc std mov jne rcrb inc sub in lret mov or dec xor mov jo xor ret jne or sbb std (bad) out int stos dec shrl or inc cmp in sti or cmpsb or mov dec mov repz cld jmp xchg das pop mov adc inc push jb pop mov rorl aaa fsubrs xchg (bad) or push fwait in sbb mov stos les mov aad pop pusha fwait sarb pop dec imul dec or jmp push add frstor (bad) rorb mov and sahf pusha cli fcmovb inc jl mov or push jnp sub ds sahf mov cmp push sbb out pusha pop or fucomi push mov je stos dec cwtl out enter (bad) mov stc jmp pop test mov xor jg mov mov dec pop or arpl mov sub push jmp (bad) movsl push call iret mov (bad) mov xchg inc pop popa in dec push mov inc cmp negl and (bad) neg call add rolb inc adc (bad) adc and adc stos cmp in (bad) fidivl fdivs cmc mov pushf outsl inc cmp push mov cmp (bad) lret mov cmp scas jnp mov ss pop jmp xchg push pop cs pop imul cmc jle scas pusha gs lret fisubrl or xchg dec mov out push out movsb xchg mov inc fcmove mov popf (bad) testb dec fstpl push push ss mov rol xchg sub push push orl jmp rorl sub sub shlb dec daa (bad) in (bad) adc sub push or lea hlt jg add fist (bad) lret lret pop jge nop add cmpsl ficompl mov mov iret or out es push shlb lret inc push outsb adc sbbb in jecxz std das pop fidivr mov or and fldl and dec imul sbb cmp mov inc out aam in lods push inc xchg mov (bad) call pop aad jl js cmpsl js outsl outsl sbb cltd sbb leave jp ret test jle incl ret out jb leave scas pusha scas sahf mov ret push or clc push out pushf inc dec fstpt mov fcompl test dec stc dec dec xchg lods mov pop fstpt inc fstl push cmp fisub cwtl push xchg xchg sahf cmpsl fnstsw dec lea dec aam adc pusha mov push push ja,pt inc rolb cmp addr16 xlat cltd jb mov repnz pop mov mov dec out cmpl (bad) pop lods loopne push add stc dec jns lock jmp mov int lock jno mov dec push mov roll mov or xchg push insl adc dec pop dec incl adc stos or sbb or sbb (bad) inc movsl fstpl push bswap jl push outsl mov pop push xor dec xchg ds dec scas cmp mov insl push lods mov outsb dec iret sbb cmp mov or xchg call mov add xchg test mov mov addr16 mov in and adc push inc sbb sbb xchg stos pop sbb jecxz mov dec lods cmpl cmp mov stos mov test fidivl sub lock into mov or xchg mov pop pop clc out (bad) pop roll sub inc lret dec mov mov lea push inc push mov jo xor jno xlat mov out push push sarb inc icebp call mov inc mov push jns call xor and mov movsl jne outsb mov (bad) cltd push xor and sub aaa repz dec ret push pop cmp icebp clc jbe sahf push fcomi mov fild or jae add test pop inc mov fnop xchg jbe xchg xor popa sbb push pushl sbb cmc stos xor iret mov jns out scas in dec ss xor cmc js push lea stos (bad) mov in cmp fsubrl sub repz test or dec xchg mov sarb mov bound iret pop dec pop mov inc push je stos cmp adc add fsubrp xor sub add rcrb arpl xchg sub mov add sbb enter and ret das mov cmpsl mov mov or arpl mov lcall mov shr arpl adc call ja cmpsl dec test jo mov cmp sub ljmp (bad) jbe cmp push or mov in fisubl push or mov test mov das das inc scas mov lods and movb mov inc fmulp mov lret pop ret cs mov mov inc cmp mov add pop mov mov iret mov aad mov data16 push jmp popw jo mov pop mov pusha rorl aas cwtl out push jns mov xchg insl inc dec and scas dec aam mov sahf add jge cltd add mov mov push mov stos add (bad) cld test mov dec je sti movsb push inc cmpsl inc dec mov push xlat frstor mov jecxz cmp inc dec loopne fbstp mov stos popf add pop dec dec pusha lea bound adcl adc dec fs xchg add fmull xchg sub xchg jg iret or icebp mov into sbb nop jnp lahf insl call stos xchg adcl mov sbb inc add in inc loope and cmpsb dec (bad) cmp mov je push cs mov test jbe push pop loope mov jo arpl sub mov mov int3 movsl dec mov jmp sti mov movsl lods sbb mov in xchg (bad) shr mov mov xor mov cmp and mov test dec sub sbb xchg adc icebp xor and insb lret jb dec pop sbb repnz fsts icebp not jmp and mov pop pusha xor repz ja mov sarb add cwtl rorl pop mov adc push lods mov dec movsb xchg cmc sub mov jl xor std sbbl lods add imulb xor pusha sti inc fadd mov jae test cwtl pop flds rolb jle mov int3 pop imul enter xor pop stos dec test stc dec cmp test out movsb sub cld js jne sub test idivl jno mov push mov int daa test add pop int hlt mov scas jo lret ja cmp mov mov fcmovbe and pop pop (bad) jbe stos cmp lret sub mov sbb jmp mov divl (bad) repz lret pop iret dec pop jle mov dec data16 add sbb xchg lea stc mov push lods lock dec dec push shl ror dec lcall std mov inc adc xchg gs insl pop mov xchg dec aad sub out add std int3 lahf imul fisubr out popa xchg cmp (bad) jae dec or mov test daa dec xchg aaa imul mov rolb cmp mov and ret lods inc cmp call sbb mov mov sarl push xor andl sahf xor mov or lret pop fs pop mov and jne mov cltd sbb test ds aaa jl addb xlat or mov xlat add cmpsb (bad) negl orl mov sub lcall or xor jg insl std add rorb mov mov sti scas rclb and sbb jl mov shlb movl cmpb and or sub cmp jb cmc add mov js mov in jl repz mov dec mov add xchg and cs lahf and jle fbld lret pop inc insl fcompl sub jne int3 cmpsl and adc idivb (bad) loope les bound and or icebp fsubrp pop out cld pop in xor aad mov jge mov dec xchg mov add shrl add scas push (bad) scas andb cltd jecxz adc xchg dec test notl mov inc out and push insb xlat stos or xor xor hlt push cmp sub in push decb fdivp int pop sbb pop rcl push pop mov clc xchg aaa scas jno insl mov repz fwait pop and aam adc push (bad) jo cld outsl mov enter (bad) or dec mov xchg cmpl jae push lods cmpsl dec cs movsl adc pushf lods les imul ret movsb dec jns (bad) (bad) xchg sbbl inc inc sbb stos push fcomps or bound stc bound scas lock imul jecxz xchg push fwait outsl cmpsb jle mov stc jg xor sbb ds xchg dec in scas (bad) jmp push lods dec cmp jl pop push add in xchg loope lret lret in repnz mov rorl hlt in jmp lods negb scas addl icebp or push jnp inc ror loopne mov int3 push mov imull add cwtl int3 loopne ret daa das lret add int pop (bad) fnsave inc rol js dec lret movsb mov mov daa adc pop pop add add (bad) dec or movsb inc push movsb into sahf mov sbb cli test (bad) inc xchg xchg std or jno repz push out push lea mov stos xchg fsts add leave or mov inc mov jle xchg out xchg (bad) enter ja cmp movsb sbb dec jmp xchg pusha xchg (bad) aad xchg mov dec pushf (bad) mov movsb sahf inc std and ret test leave xchg add sbb stos fiadd push ss jne jg mov insb cmp test lahf out jmp call roll cmp outsl fsubrs stos bts clc pushl xchg (bad) hlt (bad) xchg push xor fbld inc lods inc mov (bad) xchg adc ret pop cld mov xor xchg (bad) idivb loopne cmc (bad) cmp and cmp or inc jo loope or ss cmpsl fwait xor xchg push lock shll enter fbstp xchg jae stos push cmc shr mov jo jle pushw mov jle lret lods cltd sub ss and mov sub and in call repz jae or jge idivb jne mov in movsl inc mov mov jne inc int3 popa out sbb mov mov push mov or int or adc daa pop jns out inc int je push or push sub js or testb shl add insl add aaa inc in movsb sub hlt ret mov push ja jmp sbb cmp jge jbe push dec pop negb leave xchg cmp int enter int3 mov add sub xor xor outsl cmp cmp (bad) icebp stc xchg movsb out mov xchg pop ffree lods aas neg dec mov loop cmpsb and pop mov jl pop inc std add loopne or mov add (bad) dec adc mov jecxz data16 inc jnp,pn add jl lret std mov std mov push jp lods pop sarb in pop fwait jmp and pop dec out mov es push hlt mov dec xor movsl or cmp andl lret pop aam fcomp dec shrl adc aad sbb jo outsb mov inc std fs xchg pop lcall push jno fistpl mov push rclb ret dec int pop (bad) push (bad) out pusha popf mov push push push or out sbb nop lahf sub scas lock cwtl xchg inc push daa pusha cmp fwait push cwtl and loopne loop sti cli cmp mov in mov (bad) push mov sub mov and push outsl lea enter xchg inc push aas mov movsb sub loopne out movb push inc lea and mov mov fldcw sbb pop push and xor out dec shr adc inc mov jp and (bad) lods (bad) xor outsl xchg (bad) mov test in adc mov jb imul mov jnp xchg sbb cmp mov add sub gs outsl jp mov lock sbb xchg xchg jmp popf aam xlat jl test hlt std inc pop je pop jae mov xchg (bad) repz outsb hlt dec mov stc stos sub jle stc xchg aaa mov add dec cmp or dec push pop mov xor in enter fwait imul mov divb outsb push test xchg fnstenv out jmp lds pop pop mov push fwait sbb mov fidivl loopne xchg incl xor test mov inc inc pop es mov and dec out cmp push loope lahf lea in in in adc or stos lods jae sbb sbb test sbb mov data16 dec test lret loop lcall jnp scas sbb out jne add cmpsb xchg sub lcall insb lock out sti lock andl cs fs (bad) ret jo (bad) jl inc or iret lods sub js lods inc inc cmpl dec inc rorb rcl lcall or pop cmpsb scas (bad) aas in das hlt adc sti je xchg cwtl mov outsl mov cmp push cmc xor addr16 cmpsb std nop cmp and insl pop xchg (bad) xchg jne out pop lret movsl insb popa dec sbb mov (bad) xchg dec stos (bad) insl add mov popf test pop test dec lcall xor push mov movswl push push mov sbb push outsb xlat scas pop sbb popa out xchg js sti mov cmp inc mov xorl clc xchg dec (bad) xlat add bound mov mov sti mov rolb mov push adc add int3 jmp jl pusha dec notb pop lahf pushf les jecxz rcrb push subl ljmp out sbb shr xchg mov jg adc pop in mov hlt (bad) jbe sbb sbb dec cmp mov arpl pop ljmp ds sub mov jl push (bad) xor xor pop cmpsl mov xor push gs and and insl sub es xchg xchg adc shr test or mov lods andb bound movsb xor aas (bad) xor dec int icebp cmc push fdivrl or lahf rcrb push dec pusha jo cmpsl add stos insb js and push push insb add xor dec rclb adc mov (bad) xor pop mov ja push movsl cli cmp sbb sbb push push lea add cs sbb hlt repz pop dec lret in gs push movq add stc mov mov js dec mov (bad) mov xchg (bad) or mov pusha iret mov add and adc out stc jl decb fidivrl xor dec insb mov adc ds push mov insl or adc jb lcall push enter arpl stos push cmpsl xor movsb sti aam push push dec ds int3 movsl jns into sbb enter pop test cmp xchg or sbb sbb sub cmc mov cwtl out push jl,pn aaa and xchg and lahf lock idivl sahf bound gs sub insb jnp cmp lea pop lcall xchg sub lret dec arpl mov test loopne mov rorb in mov (bad) pop call jl cmpsb test insb pop xchg in ret xchg adc test add in jo cmpsl stc pop pop push dec loope nop dec push nop mov jno repz dec sbbl int3 adc adc mov dec ds ficompl xor es jmp in and testb insb push push jmp mov sti fistpll inc scas jg xchg bound pop adc sbb lret shr (bad) mov mov (bad) mov push ja pop mov (bad) int3 (bad) cmpsl jo mov es jb sub lock mov mov add sbb add mov push out fwait clc push call popf inc scas pop xchg jno (bad) sub xchg mov xor xchg je push sti pop push xor enter jmp out sbb push lcall jp fcomi jp sub and fdivrs adc scas cmp scas sub (bad) pop inc xor sbb js je and iret mov cli dec adc jge stos lods call adc xchg pop mov dec jl add pop jo lds sbb sbb xchg (bad) sbb xor negb mov xor ret dec rolb jo jle mov or push stos insl ret xor in jl fistpll (bad) bound jo aaa int repnz mov jne push dec sti dec pop movsl push add (bad) mov xor ljmp adc cmc out fisttpl inc add add adc xor lods sbb pop and mov lock jb incb test inc mov fbld loopne adcb push sub out pop enter cld gs mov fild lock or (bad) mov in pop mov inc lock popa inc push push add lea jno mov mov add adc cmp sbb test dec add out cmpsl adcb mov stos cmp les jle mov stos fild xchg ret cwtl fisubl fs inc jecxz xor jno sbb data16 dec aas data16 sbb test insl subl inc mov sbb pop ljmp hlt in xor aaa mull loop inc xchg mov mov fwait movsl mov jo (bad) mov mov dec xlat push sarb push sahf dec fsubrs cmc xor mov push in mov mov roll inc mov jmp lods or sbbl in mov cld fdivrl dec icebp testl sub dec pop arpl dec (bad) sbb fsubrl shl das data16 push lahf cmp divl js and out in xor push (bad) js shrb repnz inc adc stos les das bound lds jge pop jne mov pop and lods mov add or xchg jecxz stos pop and mov les mov mov cmp arpl daa int3 sbb mov jae xchg adc lcall fisttpll (bad) mov fdivl jnp decb pop dec clc dec fdivs je test (bad) outsl sbb adcl ljmp fadd (bad) in add sbb push mov es cmp dec xor cs in popf cmp (bad) xadd mov scas rcrl dec outsl js loopne movl push inc pop test rcl adc data16 lahf lods inc mov mov jae inc out jno mov push sbb iret pop sbb cld pop or add nop icebp sbb loopne jg lea cwtl out push jl mov push daa push repz aad jnp imul shrb jecxz dec mov mov mov sub outsb sub add scas xchg sub nop mov inc adc shll iret test js loopne adc leave jno cmc ja jo adc push ja or xor mov pop jb cwtl outsb jle addr16 jmp test pop test push loopne dec or dec pushf xchg rorl insl test mov rcl jno mov or xchg into insl xchg inc dec movsb mov repnz mov push lret xor mov and pushf mov push mov lods outsl mov outsb adc xor idivb movsb adc fcom or dec jo inc jbe (bad) mov loopne jo push mov mov call xchg into pop mov out stos negl aaa mov jge (bad) pusha push sub jo and jle push pop es std js dec dec (bad) xor lret push insb fwait mov jl (bad) rol push lret in rclb insb pop into out add push rcr push out lret jo add je jne pusha mov insl pop mov js insl pop (bad) das mov stc add fisubl mov ja push inc in add jnp inc test cmpsl out jl jl jo cmpsl cld pop jnp push cmp stos int3 pop insl xor pop (bad) jnp packssdw iret mov movsb add push rcll xlat mov push cltd stc cwtl xchg popf xchg inc daa jmp arpl mov test push add clc push aam push mov sbb inc mov movsl (bad) out cmp and shrl jle stos inc jmp xchg sbb xchg xchg and pop rorl in mov and ficomp mov std arpl test jmp push adc mov pop hlt fwait or outsl mov or add push in aad lret adc xor imul sbb mov mov imul frstor test mov mov push adcb add test pop mov cmp lret sbb sub jmp adc pop les jmp mov mov lea lret sti xchg inc jmp sbb in cmp imul (bad) jg push pop add dec jmp mov pop add inc test shrb subl jmp cli in cli clc fwait dec or gs jle dec into jecxz add add dec daa lock call push pop aad fdivrl arpl mov sbb (bad) (bad) dec xor or aaa jmp test inc mov mov outsb xor ret dec ret adc xor cmp mov cwtl shll dec pop insl mov jo cmpsl adc dec das mov add push test data16 push jmp mov push (bad) lret and dec repz testb pop dec xor lcall inc dec nop push iret jo je or cwtl (bad) sbb xchg fiaddl call pop or int mov sub push xchg shrl jecxz pop or sub push fmuls lcall push ss fimul dec outsl sbb aas pusha add leave mov mov ret lret popl sbbl fadds mov outsl xchg mov jo jbe push xchg mov je (bad) lock mov (bad) out mov xchg scas das xor insl jmp test adc and aas ret outsb rolb (bad) je aaa dec lods fnstsw inc leave fistpll jns out jl fimull xchg cmc idivb data16 daa dec nop sbb das xchg jnp test sarb mul push (bad) test mov mov mov aad pop addr16 pushf add xor mov xorl shlb mov and dec test imulb mov cmp dec arpl loopne ficom clc addr16 out push repnz mov cmp insb jecxz fs subb lcall mov add popf add push and jno mov and (bad) mov cld jne pop push sti js jno jno xor mov jp (bad) xchg ja mov sbb dec es lock fmuls sub add add mov inc dec stos jmp mov stc pop outsb popl sub lods aas repz lds andl sti imul cmp loopne mov bound bound call repz std xor cltd in add adc or push movb mov je hlt rol inc test outsl push xor cltd or cmpsl adc xchg jne jae js cmpsl xchg cmp cmp clc add pop outsl adc jne adc (bad) sbb or dec stos jo or lods mov xor ljmp dec push mov mov add sub pop (bad) movsb addl cmc aam inc xchg inc lds cmpl inc out insl or iret pusha adc test sarb in addr16 mov imul jl jl lcall aaa pop xchg mov (bad) pop or enter cwtl lods and fsubs mov hlt jns xor mov ret sub xchg ljmp or adc adc shll or jge push jns sub int jle pusha mov and popl pop dec sbb (bad) int3 sahf push incl shrb iret fwait imul scas (bad) cmc subl test xchg xchg mov sbb dec fcompl lds cli cmp movsl adc (bad) movsl ja cltd push pop stos cltd div (bad) hlt insl mov or js loopne dec xor mov scas xor push sar dec push cs sbb and btr (bad) jl dec js ret jne jo mov dec or push popa out push lahf xor jmp nop (bad) mov or int test ja imul xor dec fld mov sub iret mov cmp sbb pop cmp lods mov cmp lods dec inc mov lods xchg mov add sbb out dec jns adc hlt in xchg cmc dec cmp xor test jb pop mov mov add cmpsb xchg cmc adc mov pop out (bad) aaa fmull mov popf movsb inc fwait lret jle jo mov sub sub push mov jo pusha xor pop mov sub mov dec scas outsl adc mov add mov push push sub pop inc pop enter mov lcall mov int3 inc pop xor dec push xchg int3 pop dec into mov int3 fsubr sbb jb hlt roll dec cmpsl cmpps mov cmpsb inc shll stos mov sub lods int or inc (bad) loopne (bad) repz xor arpl cltd push leave cwtl jns mov je cmp mov incb cs nop hlt cmp int3 pop push pop xor fs jne aad sbb sbb ror leave xor outsl add shld mov dec add jp (bad) dec stc push xchg inc cwtl fwait pop es add sbb xchg and icebp gs dec lods dec inc test insl pop out mov in sub and sahf mov sbb out xchg lods lcall mov mov bound scas pop ja pusha stos stc inc gs xor inc cmp jmp or stos inc ret lods es js dec jo nop add je push enter (bad) in movsb push sbb sbb xor mov mov call push push out (bad) hlt (bad) push stc test inc sub or xchg mov (bad) mov cmp jae xchg xchg inc inc clc sbb push dec dec jo pop or sbb sub push jno lret inc add incb bound cltd mov orl movsb addr16 cltd int3 jle ret pushf ljmp mov pushf jg mov data16 cli jl add xchg fistp insl int dec jnp and pusha mov inc mov cmp inc and cld cwtl sarb aas stc fdiv mov out push in dec inc andl and sbb push adc in adc mov push and xchg add icebp pushf aas dec rorl aas stc hlt adc push dec xlat loope cmova pop cld loop push (bad) into sub js mov int3 dec push arpl pop daa cld push pop sahf dec sti xor shlb xchg sbb fnstenv cmp arpl cld mov dec jne mov sub jae out pop fildll jl fdivs (bad) scas sbb in mov or inc stc add (bad) mov insl movsb xchg shrl fisub js add les cmpsl in pushf clc sbb (bad) push out pop mov pop movsb xchg das mov xor data16 clc in into sti cltd loop pop jle (bad) hlt dec std jae std mov ret jp jecxz xchg push push daa mov or dec inc add int imul je fs test push mov xchg nop lods adc jle xchg xchg test cmp jmp mov push dec fidivl ds mov imul or pop dec dec push jp outsl lret xchg dec ret push pop dec inc aam sbb jge pop int cmp jp insl push xchg roll push fisttpll dec movsl fsubrl cld fcomps jns,pt cwtl add jno in into scas mov ja xor call jnp stos imul or mov scas cmp fcoms aas js inc push jle lahf sbb jne sub lcall push pop es mov rcrl inc mov sbb out cmpsl jp xchg inc add jge aaa push cmpsb add jg out lock cli cld fldt pushf int3 jp mov xor cmpsl dec in es jp rclb xrelease ret inc jbe mov xor jg xlat push or ret mov jo cwtl jmp inc add jle out jb cmp mov (bad) shrb loopne dec push pop ret xor xchg (bad) mov mov loopne mov inc xchg push mov adc pusha cs cmpsl in pop pop outsl dec and push adc mov or jg mov xchg sbb popa in and iret jne (bad) push or xchg or lea inc test stc dec xchg hlt xor jp mov sbb dec ret inc ret das xor push cmp into hlt enter aad test xor cli sbb xchg push jbe (bad) je enter cld ja jns mov hlt mov dec and push mov ljmp test lods es jle cli mov arpl mov dec lods pushf dec jne or in es in lds outsb mov or mov push xchg dec dec scas pusha xchg sub outsb dec mov mov stc imul dec (bad) cmp mov mov inc sbb in jno rclb clc pop lods clc aas add mov dec sbb dec pusha mov (bad) call in aaa mov push stc sub xor add sbb xchg and in fwait inc xor clc mov enter mov stos mov mov push push xchg scas outsl lea cmp scas push jle push pop lret mov jne lret ljmp incb leave add aam aam add je fs gs stos das stc fnstcw lea (bad) jp pop lahf cmp cmp mov dec loope dec jae scas pop cmp xor add xchg sti aad mov loope mov pop cmc lods aad inc xchg mov mov leave fucomp dec mov int3 fdivl jno jle jp pushf push pusha push rolb dec outsl inc add and mov sti aaa sbb jb inc or push (bad) aam sbb mov mov insl cld mov arpl push test icebp pop push dec fstpl add sbb jns aam push movsl push hlt int pop out cld jb and sbb mov mov leave or mov xchg sbb add fwait add or ret int push jl mov cmpsb iret mul scas cwtl push mov cmp inc add loope adc stos insb into lahf inc clc pop scas pop scas pushf xor inc add lock adc (bad) iret adc stos pop push xchg mov mov popa clc popa lret lds push jecxz pop inc int3 jp lret (bad) mov jbe jp xchg mov push imul adc inc sarb lret rclb das daa aad cmp mov jno (bad) pop test jp or push sbbl enter mov std pop xcrypt-cfb cmpsl mov xchg sbb out outsb add lock xchg inc icebp cmp data16 pop cmp in dec mov hlt scas rcrl jmp mov js sarb rcll mov mov in loopne lock stos les xchg lds sbb or into cltd imul jno or add hlt aad mov repz lahf and cmp pop push mov shll inc xchg and and mov lods sbb rcr mov cmc xchg nop lods cmc mov pop jno es mov or and jbe sbb mov addl and lret clc cmp xor ret out and sub in insl sbb sbb mov nop dec cmp xor push rorl jne scas pop mov stos lret outsb insb test lods int loope inc or mov xor dec or push ds es call popf ja scas lret pop mov inc dec sbb xor xor lock mov jb sbb scas xchg (bad) ljmp arpl mov loop mov mov cltd fsts mov xor lods add dec xor jg dec addr16 fs mov insl cmp sbb mov ljmp add out sbb (bad) lods fs scas mov jecxz inc lcall dec adc push int test sbb pusha out rorb aas cli dec push mov into push cwtl in lea je mov adc es xlat mov xchg pushf bound arpl (bad) mov sub sbb and xchg push mov fsubr lret mov movsb push inc inc mov inc icebp mov scas jbe inc into mov push fmul push dec ds rorb push inc push or int3 in xchg repz into dec out mov test paddb cs enter pusha es scas mov mov fs push iret mov pop and leave mov shrb js push mov lret pop pop mov in stos dec imul js push cmp xchg pop push scas daa js pop outsl aas roll add es fistpl dec fcoms test outsb fidivl cltd fdiv (bad) insl xlat stos push mov mov rolb jp inc (bad) push lret in sbb xor xchg fnstsw push mov adc and test cmpsl xchg stos xchg gs inc (bad) loope movsl hlt push lods into sbb lahf fs in and gs stos (bad) jp pop push cltd idivl inc mov jg sub repz shr mov ljmp inc dec and lea pusha fstpt out rcll push rorb fidivr sbb inc test xor and (bad) sahf adc mov ficompl push call outsb add add cwtl adc adc ds sub dec pop ror adc mov sub push xchg mov mov (bad) je xchg adc pusha lods arpl push push inc inc loope rorl cmp jb push pop and sub aad mov daa rcl leave or add push lret pop (bad) cmpps sbb repz icebp test xlat mull cmp mov xlat out cmp sub mov int3 cmp push fstpt lea cmp imul mov rorb pop push mov into jle xchg fcomps xchg jb loope or repz je jge xor jge movsl mov cmpsb das cld insl bound mov mov lahf push dec pop jp cld jne jecxz pop inc repnz and adc mov call add mov xchg aaa fcomps mov xchg sbb xor jne jge add xor dec pop push cmp sub sub outsb pop clc rorl movsl pop inc and jnp inc push mov out dec pop mov inc mov dec push fldcw add sub nop dec cmp xchg jne fs sbb xor mov outsb xor fistp mov movb cmp movsb xchg std mov (bad) fistpl out or push test nop mov sti push fiadd test cmpsb cwtl pop sub xor push ds popf inc push add push mov push mov fisubr mov cs stos dec push (bad) sarl sbb out sbb leave cltd push add repnz stos insb bound std pusha or mov xchg rclb insl sub aad sti dec mov insb mov iret scas mov lahf aas ja cwtl pop outsb gs xor icebp jle push mov std sub mull div jae repz js movl adc inc cmp (bad) pop pop adc mov lea push push dec clc hlt lcall test into mov cmp push add fs sub cmpsb stos inc mov pushf hlt out dec dec test push fistp or jmp insb in pop cld cltd adc mov mov cli ljmp xor aaa js adc popf mov mov dec lods stc imul sub or arpl stos int3 dec mov popf mov in (bad) inc mov mov mov jmp xchg mov nop fxch jns push out cli pushf push aaa inc mov inc jno int3 loop xchg fcmovu fistpll dec cmp (bad) out inc or mov bound loop mov push xor cmp repnz fiadd out jecxz pop push inc jmp jnp pop jg movsb pushl add popf xchg (bad) dec movsb mov or xchg jae pop sahf jnp sub cltd das xor or jp loop dec loopne int3 dec dec dec fcomp loope cmp lock out mov movsl mov xchg sbb dec lock inc mov mov movsb adc xchg inc out inc movsl bound sub or cld pop push out cmp and or mov and aas test pop icebp mov ljmp and xchg mov mov mov hlt cmp jg cmp add movsl push push jp aas mov enter xor mov push iret add lret fcomp jp popa jae mov xchg sbb mov aaa in xor int3 cwtl ret xchg sub pop jecxz pop xchg ja stc cli outsb inc dec in push xor dec sub int3 add in jg dec popf sub pop stos add xchg das into cli addb pop (bad) out mov fldl push xor ja insb pop jp daa adc dec nop outsl mov cli or (bad) cld negl (bad) adc mov mov aaa int dec push addl hlt sarl sbb add xor jbe mov (bad) mov add in (bad) xchg pop and jbe call adc sbb inc or and repz or mov mov cmp imul sbb out dec dec outsl mov fdivl sbb jae mov out inc adc mov jle mov push mov cmc imul andl (bad) push imulb pop cmp or stos mov adc xor jae aad pushf mov lds mull hlt test mov addr16 repnz in add ret cmp or (bad) movsl dec mov movsl adc fiadd xchg push imul lods sahf cmp cmpsb inc cmp cwtl push xchg add add inc inc push pop xlat sbb or orb pusha loop cltd and jmp push lret jo pop std (bad) adc fidivr scas add test xor scas push dec xchg negb divl test addr16 inc dec inc or movsl ljmp push out dec sarl or test cmp inc xchg ret loope imul gs pop mov iret loopne mov loopne int3 push jno mov sbb negb mov (bad) fwait loopne sub mov push mov push cli lock mul fbstp push pusha fsubl mov cmp int3 xchg mov xchg scas mov out mov lock jns pushf mov cwtl cmp cwtl repnz movsb leave scas xor mov rorb int3 jae push pop sbb jnp sub push in cmpsb addr16 xor div in xchg mov sbb in stos pop pop out cmp or addr16 lods push jne fstpt sub xor inc add loop repz test gs or inc jo ss daa pop dec push insl jno outsb popf movsl add cmpsb sbb hlt ljmp adc aam add xchg jbe ret jl xor sub pop jge flds jns xchg in cmp rorl mov xchg lods or (bad) xor ja mov or in mov call mov push lcall mov js pop pop dec sbbb and sbb mov fstps movsl lods xchg jg lcall (bad) and popf add mov mov ffree mov cmpsl mov sub or call subb je mov out out es cs test cmc les xor mov dec inc xchg add repz mov sbb lahf imul outsb std mov inc mov lock fadd (bad) sub mov es pusha jge cmpsl jl dec cwtl mov arpl adc sub addr16 outsb xchg mov push sti mov (bad) jae inc cld inc add fsub enter mov es addr16 jg pop sub xchg adc cmp mov mov loop dec jecxz (bad) out sub xchg jo cmpsb lock mov shlb sub and test je mov insl addr16 add xchg test jno and popf cmp xor pop push xor cmpsb cld cmpsl iret sub mov in mov (bad) xor sti xchg loop jnp lret pop mov pop cmpl pop int3 mov (bad) arpl mov pop xchg repnz xchg push pop js,pn or jne add sti pushf pusha inc add inc push mov sbb xchg pmaddwd jmp push fs pop sbb int3 push jge and pop mov cmp insl jbe push arpl imul lret dec jno mov movsl in shrb add outsl mov cli imul fs or (bad) fstpl (bad) enter adc mov nop mov mov push jno cltd lahf jns enter outsl sbb fs lods push pop or dec outsl cmp in (bad) lods out int3 adc xor inc dec shlb cli and mov xchg sti xchg mov js mov out mov (bad) mov push fmull cmpsb repnz mov push mov sbb mov cs imul in push stos cli cmpsl dec int pusha (bad) repnz dec mov (bad) adc and lahf sub dec jbe stc lea xchg orb insl cs mov jns xchg push pop mov nop int dec pop mov aas inc cwtl sbb sbb mov sbb xor ljmp jns (bad) lahf test jo rolb cmp push dec mov mov stos xor inc aaa out mov sbb jne pop das cmpsl cltd mov dec push inc lahf in dec mov int3 inc insb outsb mov (bad) sbb out jo in mov xchg leave dec pop imul daa idivl scas add arpl icebp fcom xor mov enter jae arpl adc jns dec mov xlat mov ret push mov sarb push jl fld and je popa pop cmp aad jp push sub shl mov dec mov mov cmpsb in or je xchg imul movsb into pop iret mov das sub xchg loope popf out xchg xchg test hlt sub lret (bad) dec mov lret mov cltd loopne lahf pop fnstcw (bad) sbb xchg and pop inc (bad) xor sub imul test pop inc push mov mov out rolb jne stc clc lahf pop loope subl add add inc sarl and mov arpl sbb repnz cmp mov push stos bound mov outsb xchg mov nop lret xlat repz mov mov sahf mov jo inc mov gs sub dec mov push jl aas arpl movsb xchg mov or push or add xor lods xchg bound sahf push out popl push and mov out dec ret fmull add cmpsb jle sbb rol repnz xor adc scas popf cwtl jno pop loope mov arpl lret roll aam jb pop sbb in lret dec push xor out and dec std aaa push pop lods dec adc or mov sub pop (bad) jp mov push fwait mov or int3 mov lods push int3 mov cmp pop movsl xchg jp daa ud2 inc sub xor arpl xlat lods jo je cmc xor mov or addr16 push lds stc je mov mov in jl sbb loopne jb rep mov (bad) pushf scas sarl pushl push iret xor dec jo push cmp aaa jb sub push cmp or loope ret mov iret cltd mov mov lea ljmp xchg or xor enter in inc mov sti adc jne test ficompl adc adc xchg sbb data16 mov pop inc sub cmp xchg mov sub mov fsubrl leave adc (bad) or cmpsl cmpb dec mov cmpb clc push ret sbb mov insl and fs ret subb lahf sub sti int3 sti lret ja push (bad) lret jmp push lds and mov jnp pop mov lret fcmovnbe or mov pop adc add pop adc scas push dec jo imul adc (bad) cltd add cmpsb sbbb sub pop mov in cmp out adc mulb mov jb (bad) push cmp mov or adc xchg pop out or mov lds aam aam imul cltd inc jb add add adc push pop mov lret xor pop dec movsb std ja popf stos je sti mov dec xchg mov insl test lock sub sub pusha jne sbb sti push sbb mov lahf xchg (bad) hlt xchg jo jge inc (bad) mov lock scas xchg fbstp pusha sarb sub lahf mov mov jge out rclb sar ja push clc jnp pop (bad) int3 push lcall adc fdivs int js cwtl xchg pop jl mov in lahf push in sbb movsb jb sbb xchg mov fwait stos sub cwtl jb shll repz test xor das das push aas and sti out mov imul mov and cmp mov iret xor movsb mov inc inc (bad) arpl adc mov gs into test and mov add scas jp rclb jg push adc inc aam test rolb out mov inc hlt testl rcrb add int3 pushf fildl xchg mov mov cli hlt cmp aaa lods jne sub scas in xchg inc adc cmp or sbb inc or call xchg xchg rcll test cld adcl scas pop les mov cltd lcall xchg mov lea mov scas (bad) jno jmp sbb fwait cltd push pop pop outsb mov sbb xchg or add jo push out ja lahf into neg xor sbb lret (bad) mov dec cwtl test sarl clc adc pop xchg push nop jns pop xchg mov adcb into scas push pop push cmp hlt icebp mov test (bad) stc xchg mov scas movsb mov mov sub sub jno sub scas mov ljmp inc dec sub in cmpsl inc out xchg dec pushf es sub add fwait cmp mov xchg jne xchg inc cmc subl inc in scas cs mov out xor xchg mov mov enter dec adc lods outsl sbb push outsl and insb (bad) mov or sbb or test sub loope pop hlt xchg jp push adc dec push sbb imul jnp shlb insl repz stos cwtl in out inc add xchg mov dec pop and imul xchg lret mov dec mov push pop mov pop leave adc push scas dec xchg push test das out sbb arpl xchg icebp sub mov mov imul mov lret and loop mov mov mov adc mov push jle inc and fstpt aaa into mov shrl enter (bad) aam cwtl mov (bad) (bad) sti movsb out mov rcll mov xor mov jmp xchg adc leave popa sbb scas cmpsb lods mov inc fsubrs roll dec das test pop pop push lahf movsb (bad) je in lods sub xor movsl std std push push fisttpl dec ss call loop test push and int3 and pop (bad) jno jbe call cltd jp xchg inc mov pop addr16 or xor fwait icebp inc add mov in mov mov shll mov jge pop enter sbb xchg sbbl sti movsw inc cli adc push mov repz nop (bad) lods pop icebp ljmp movsb imul dec movsb fnstenv xor movsl (bad) popf or (bad) mov stc or inc repnz cmp ret fwait add inc push push lcall mov push push dec dec or dec inc xor sbb xor scas in mov mov inc stos lock jo,pt pop enter sbb and push fs iret adc sub into sbb cwtl lods movsl xchg and xor xchg mov ljmp xchg xchg jecxz ljmp push adc cmpsl sub dec (bad) ljmp icebp adc test shlb ds mov rorl stc mov dec repnz mov fs adc dec out mov insl sub mov lods jno dec mov dec sub mov in data16 or jb push push out (bad) mov in pop test sbb sub adc sbb aad loope and pop loopne movsb test loop aas cld jl push repnz adc mov and dec add push ds add in (bad) cld add movsl mov jae and nop inc jecxz enter adc dec jmp (bad) ds stos in lds cmpsb sub sbb test dec js cld jno cmp (bad) sarb repnz or pop mov outsb jbe lcall (bad) mov jge call icebp adc addl sbb push mov movsb xchg mov mov jno cmp or xor xchg fisttp (bad) ja repz test mov (bad) test adc decl pop ffreep sbb jae fcompl sbb or push inc stc jl shrb or sti add mov add cmpsb xchg pop fdivl vmovq mov jb int adc aad cmp pop inc rolb mov mov clc dec adc (bad) in pop (bad) mov fs stos lret cmp mov mov cmp push mov cmp add in pop adc cwtl xchg cmpsb shrb popa dec jnp push in sbb and rcll cmpsl ss int jae inc adc mov enter and push xchg fcoms lock into inc mov leave xchg xchg xchg dec mov in (bad) aaa cltd in xchg push scas cwtl pop mov fistl mov dec ljmp mov inc ds leave (bad) xchg adc sbb mov mov aad jg into cmp jbe sub aad pop (bad) mov and add inc xchg sub fbstp push push bound data16 sub mov or aad roll test es push in sbb cwtl inc push imulb sub out movsl bound mov int3 std inc inc aad in mov pop rcrb insb push dec dec push and jle jo mov xor (bad) sub in popa mov lods inc mov pop js scas iret lods xor push sub pop mov insl xor fstpt ret inc test stc fisub test in inc lock pop jnp mov sub mov pop xor sbb lret in test add xchg mov cmpsb jl addr16 test outsl movsb dec inc mov lcall rcrb and dec cmc xchg test push mul sbb inc test xor sbb jmp fistl xchg cli in mov push push ds aas mov mov or lock xchg mov add lahf and push movsb je pop movsb in sbb pop mov cmp shrb inc lea xor insb jb dec inc xchg ret mov add fiaddl mov mov dec cmp repnz stos leave inc in dec mov pusha sub les jle pushf dec insb mov dec (bad) imul stos aaa cld pop aad js jnp in popf dec push jl jns dec jmp in enter sub icebp in aam cs jmp mov inc test pusha mov jb lret enter idiv fcomps add imul cmp leave nop mov leave mov fst xchg loopne add test jl loopne enter or mov jns or cmp jns sti aam nop dec and test in jp add or into inc mov or cmp repz movsb adc mov and inc cmp push ds leave mov dec ds lods or call rdtsc call pop mov pop sub mov sbb dec imul or mov pop mov xor js out inc jae jg sbb xor mull lock pop jns (bad) insb sti sub inc ds mov push push int jb repz xchg imul jae shl outsl nop dec mov pop aas sub popf push pop adc mov iret push stos leave cmc insb repnz lahf adc adc les cld jecxz and mov xchg cmp jl jp enter xor xchg in fnsave hlt scas out cmp xor subl push mov ljmp (bad) jo inc mov call mov jo jae enter outsb lret ds add shl dec mov lcall cmp mov in dec sbb pop cmpsb movl dec int3 dec mov (bad) cld mov outsb repz lods repnz test in jnp pop bnd cmpsb pop stos scas mov pop fsubl (bad) cmpsl sahf mov or rclb pop cmp cmpsb jmp cmp mov sub push and push cs xchg jmp test jl stc out or aad push jge cs mov jnp iret cmpsl les lds int3 mov neg cmp mov movsl in xchg adc and lock inc stc or jmp cmp int3 xor in jg xor mov xchg (bad) push add push idivl lods pusha mov push into push iret (bad) shlb outsl jo lea mov int adc dec loop or arpl (bad) cmovbe (bad) adc clc add js iret pop outsb ljmp lods pop inc xchg add (bad) or push or add mov pop xor lret dec dec (bad) jno dec or (bad) insl ror fdivrl lret jl pop es movsb stos push popf (bad) test nop pop add pop cld test (bad) movsl dec loope xchg push repz sbb in sub out mov divb dec movsl nop (bad) (bad) xor xchg push inc fwait or clc cmp jle push movsl lods sbbl sub fsubs push xchg inc dec mov rcrb mov adc popa push ds pop insb xor sub mov (bad) hlt out mov jmp lods push std jg shlb fucomp and pop mov aad pop mov or xchg les push push popf out (bad) cmp xchg pop sub dec xchg dec shlb test mov cmpsb jmp cmp in (bad) xor ljmp into lock lock sahf (bad) cmc push mov fcomps inc orb push push ja movsl rorl call in mov push movsl mov sbb inc xor (bad) ss out lret mov je add test repz je dec xlat ret adc (bad) cmc lret lret mov ja,pt or (bad) lock dec add imul or loop (bad) fdivs roll jb lcall mov mov int das cmc push hlt push lcall xchg pop dec pop adc cmpsb push dec inc int3 addr16 push in (bad) imul push cmpsb fcomps mov imul pop jno ret pop inc lock sarb xor gs js jg adc pop popfw add cmpsl sti pusha popa sbb xchg jecxz lds das inc dec sbb mov cmp or jg mov mov arpl roll push out jnp ss inc jecxz pop lea (bad) ret mov stos popf aad jns pop sbb je loop mov fldenv rorb out clc add es jmp mull ret (bad) jge pusha pop dec sbb jge push shll xor pop sbb gs test sbb fiadd outsl jae adc rcll repnz cmpsl int3 test cwtl pop cmc repnz xor lret sbb push push dec inc movsb (bad) pop lahf cmp stc jl test push vphaddbd mov cwtl push mov lcall xchg fsubs leave mov adc in mov add popf out inc sti (bad) mov cmp daa pop cltd mov scas rolb rcr jmp push aam xchg inc cltd inc push xlat orl add roll and fmull inc and jbe dec or daa lret xor or jle icebp fsubrs sbb repnz (bad) xor mov fbstp or imul movl fistp sti std lock shlb mov jmp and jne pop fiadd fldcw mov and mov push test jecxz sahf int clc jbe sbb or xchg icebp inc cmpsb popa push fldcw pop daa and mov dec lds pop sbb notl fldenv or fidiv out xchg (bad) mov mov inc and xor jno outsb ret movsb test repz mov mov ficoml in cmp inc sub test bound (bad) jns and scas cwtl pop cli or cmp inc or add rcr insb cwtl imul inc rorb mov rclb cmp aaa inc jl mov inc inc repnz jle inc pop test cmp cmpsl push pop jmp test push pop outsb dec add push pop dec xchg clc in in inc pop pop jp icebp repnz mov lds (bad) (bad) adc pop orl fstps shr cmp loopne adc popf and xor movsb int3 jne in fldcw les dec mov fs inc add adc and gs mov out addb jnp mov cmp dec push movsl insb leave jbe cmpsb pop call pop push int3 imull xchg inc test lret scas push push and pop out lods pusha mov cmc shll dec int3 in cmp xchg push jl mov stos adc cmpb pop and nop xchg daa pushf push and idivl mov inc xlat lret mov push iret mov xchg add or les sti insb lock cmpsb mov xchg and inc fidivr sbb lods inc lock cmp jg fidiv jnp inc sub jl int3 cltd std (bad) icebp sbbl in xchg je mov inc fcoml mov dec dec rcrl jne sbb pushf sti ss iret adc mov stos loopne inc cld (bad) bound pop dec fwait lcall jno jg mov cmp cmpsb and jns jae xchg into loopne (bad) jg sbbl fsubl pop pop shlb das mov imul repnz push inc and clc inc mov dec or cli stos cmp mov adc loope stc int3 mov movsb mov cltd push (bad) loope push lahf mov sub mov jb imul push sbb stc cltd and nop jns call (bad) adc mov dec jo mov add std xchg sbb mov insb pop xchg jae (bad) fisubl out mov xchg (bad) push xchg bnd inc nop mov and int3 push sub inc (bad) sbb sbb dec pop sub or idivb sbb in sub aad cld int3 adc add mov cmpl jne pop cld sbb or roll insl daa or add scas mov sbb mov cmp adc jl add sub ja adc dec test mov int3 iret stos and mov and inc gs outsb fisub inc inc jno xchg (bad) (bad) repz push stos or dec mov out mov scas mov nop call mov jmp out pop sbb xor and je add cmp (bad) jmp test (bad) cmpsb arpl sub adc jecxz into sub push mov dec dec mov popf popa enter push imul push loope mov iret fisttp sbb xchg dec iret cmc fbstp cli cmpsl ficompl faddl ficomp sub inc cwtl inc leave icebp movsb fstl test cmp cmp xchg mov xor xchg or (bad) mov jge mov and fidivrl out dec mov sub in test fimul int3 iret jge lds cltd aam dec dec and and mov rcll push xor lods and jp (bad) inc negl mov sub lods outsb bound cmc add (bad) pop aaa dec jno xor push leave jl push mov inc adc (bad) xor inc bound loopne cmpsl mov dec movsl notb xchg mov jle or js mov xchg pop jmp adc adc or sbb scas mov lods xchg into cltd in fcomps imul pop pushf dec test test jl mov mov out jp ss lret push sub aaa and (bad) into pop cmp aad fcomps push mov pop outsl loopne adc xchg xchg sbb cs or xor mov stos jae mov and add dec cltd pusha adc or in mov outsl add jns aas pop mov push (bad) cmc mov lret imul mov repnz adc (bad) cmc adc in pmulhuw or cwtl gs push dec mov dec push jno imul dec scas dec inc add dec pop data16 add push arpl mov or lcall dec mov pop mov or subb sbb pushf test lahf jl sar jmp or jmp icebp mov outsb jl push cltd add mov shrb mov data16 jo push adc jle test sar sub add jp adc pop divl popf test add adc cmc outsb test xchg adc mov popa rcr enter push push inc and push xor scas mov ret adc test push mov adc ljmp bound mov xchg dec sub mov jo iret inc push (bad) cmp outsb aad adc jae,pn ss pop mov stos push popa pusha jno dec cwtl mov out std pop push call scas loopne inc jno xchg dec ljmp jle mov mov sbb and test pop jmp loope pop js mov dec cltd fs mov out mov icebp pop sub loope les out setp cmp stos adc scas push psubusw pop sahf out xchg sbbl pop orl or dec pop leave out mov lds ljmp lcall mov sahf mov repz cmp push mov out lods dec test movsb test bnd push inc mov mov addr16 fdivs or inc sub in sub aaa ror xchg int push mov (bad) in jge add popf dec call das inc stos in push cltd in int cmp loop loope mov mov inc inc cmp scas data16 je add insl imul in cmp or into lret popa movsb xchg inc inc sbb ret xchg roll xchg movsl jmp into ret and sbb js pusha shl iret sbb pop xchg int3 inc nop sahf add mov ds inc mov movsb push fldl xchg mov fcmovnb cmc aas lahf loope mov insb jp dec pop (bad) mov jno out gs xor xchg inc add dec je lds dec test repz sti adc addl addr16 push ret mov mov int in aam xchg push cmp dec aaa scas mov cmp push or mov int and (bad) jecxz mov xchg xchg in mov jle adc sub stos mov or mov fsubrl push outsl in mov stos sti cmp shrb cld jl outsl cmp mov scas pop stos sub xchg push mov cmp repz sub push mov pop repz hlt sub sbb leave add popf jbe out mov arpl scas lds (bad) lock das stos out decl jbe cmpsl add mov loopne mov leave xacquire cli nop pop dec into cmp and int3 es xor cld sarb cs push mov sub xchg mov (bad) mov push dec mov inc push cmp rclb bound shrb gs mov xchg nop dec (bad) sbb mov pop test sbb sahf mov call sub mov pop repz adc sub gs pushf jb push fsubs mov rcll add pop mov mov test ja dec mov sub xor out ss sbb cmp pop dec xchg cmpl js int3 adc inc rcll add stos dec push cmp cwtl and (bad) push sub xor jmp xchg lcall sbb (bad) dec dec pop ja jno loop xchg add imul mov insl int xchg lds xchg stos xor data16 mov icebp mov mov and mov add inc scas cli pop or pop stos add mov aam mov iret cmp icebp pushf pop in jbe cld push pop mov repnz dec mov push xor mov test sbb outsl xchg add mov mov decl pushf and cmovo sub jecxz push add cli sub shlb lcall mov (bad) aam or mov mov jle mov mov dec mov in sbb mov sub shlb mov xchg repz mov pop movsl adc jg pop lahf mov imul ficomp rolb adc push mov test sbb dec mov jns repnz test xlat mov andl data16 mov mov hlt mov shr popa pusha push inc jne jns test mov cmpsl flds fcoml ret mov ficomp mov mull dec popf sub lret cmp inc sub aam pop (bad) lea int adc add movlps dec notl pushf in inc out out leave adc arpl jp dec adc push shrl dec bound lret cmp mov dec pop pop call push dec inc or mov xchg fadd add imul add faddp push pop push inc fdivp mov ficompl les add xchg inc jmp jge adc inc lahf stos adc or stos mov (bad) lea push fcmovnbe sub jno (bad) fwait imul jl push adc arpl fsubl imul sbb stos mov aas (bad) fisttpll push stos loope testl in push sub pop inc sarl xorl push add ficompl daa pusha (bad) loop cmp loopne inc mov and movsl jecxz push stc xchg in xchg mov sbb mov sbb inc push pop xorl xchg imul aas (bad) insb adc jl add push (bad) or mov loopne out loopne repz sub and clc sbb jp xchg je es ds inc stos cli cwtl lea ss push add (bad) adc cmp (bad) adc sbb je outsb push fcoms inc test xchg fsubp je mov aam cli loope dec repz adc (bad) loope fcmovnu inc sti push jecxz sbb add lods jae cmpsl jle flds xchg test pop imul mov rcll (bad) xor or push divb sbb pop or sub lea mov cltd mov sub mov inc mov insb fisub add jbe outsl loop stos lds aam bound shrb inc jnp dec mov mov mov mov int3 adc and lcall lock shrb cli mov in jl mov fdiv je push mov icebp sbb cld test dec sub mov adc sahf je (bad) mov (bad) (bad) sarl push (bad) leave sbbb out nopl sub icebp inc push jl das repnz xor repz cmp inc fcmovb lea movb shr add (bad) mov sbb outsl test (bad) lds add jae xchg call push pop jne imul rcll jmp push (bad) (bad) adc xchg dec xchg add mov lock xchg dec jl sbb mov inc icebp jle ss inc stc fs mov aad cmp bound add fmul sbb out (bad) and movsb lcall lretw pop (bad) jae inc fcomip xor jo inc push (bad) mulb sub jo sub fiadd in loopne mov inc fs ja add (bad) fcmovnu push into decb scas out insl in mov jl aam dec mov mov and (bad) add (bad) gs pop shl sub mov addr16 add das adc push push push cmpsl mov add or loopne les mov test adc pop pop mov pushf icebp and xchg mov pushf mov jmp movsb push pop and out icebp inc idivl ljmp loopne test mov jae out xchg dec mulb cwtl popa push shll lahf sbb mov push adc pushf loope inc dec test push arpl cld addb cmc sub xchg mov aam fildl dec sub sti cmpsb pop push pop xchg xchg sti int lods repnz (bad) sbb mov out sti js cmpsl ret jecxz jo sbb mov mov popa repz sub mov aad inc push dec sti jno in xor lds iret inc sbb cwtl pop xchg and adc sti cmpsb and icebp jnp fwait fwait cmc ret fidivl xorl xor and test insb or mov fistpl (bad) fcoml pushf test and dec sub sbb test int sbb incb pop and ror cmp sahf outsl stos mov aas mov and cwtl (bad) and mov or push fistpl cwtl lret scas adc (bad) cmp gs mov xchg inc push js sbb adc fstpl jo fnstsw cld lods inc push out mov push fisttpll out jb jge sub cs cwtl popa das ret add pop addr16 fildll imul ret adc mov mov cmpsb cld push lret call mov lret xchg outsl cmp mov in (bad) push aas mov imul dec test repz sub (bad) sub mov enter mov jne fld imul inc mov loope push imul pop jge mov (bad) scas scas sub jp sub push outsb add dec mov lahf cltd mov aad aas in mov dec dec sub sub lods xchg xchg xor mov les push dec jge cmp jb lock dec or jg jns call cs aad shrl pop pop dec cli dec loop aas icebp add mov jp sahf ja std lods lahf sbb cltd mov sarb or dec int push adc rcr xchg dec push das fwait (bad) (bad) push pop pop (bad) dec lea jns pop mov mov lret ss repz loopne scas loopne mov mov adc mov repnz insl inc dec mov mov push cwtl mov (bad) push insb or outsb movsb stos mov or sub std cmpsl cmp mov notl dec lds mov fiaddl scas test mov sbb or ljmp in pop enter sub jne mov add rcrl ja push sbb add sbb cmp dec lock ja xchg enter stos inc test cwtl call lods xchg int3 cmpsb push ret pop mov std and or mov lcall (bad) jbe cmp idivb xchg fdivrs pop xor push and jne dec cwtl mov lods pop mov fwait jb mov push add scas and into push xor sub and stc xor in outsb mov lods jno lahf xor repz push ficompl icebp add cmp dec lahf es lods jne sub adc negb cltd pop sbb leave inc cmp pop inc cmpb out shrl add mov push xchg inc data16 dec jae sahf push dec jne cmp push mov sbb mov sbb js movsl je hlt adc xchg loope mov (bad) (bad) icebp ljmp or jp fcomip outsw push inc faddl (bad) mov int js (bad) scas les jne (bad) jg xor sahf sbb mov cltd aas pop (bad) pop scas cmp adc insb sub inc push incl dec mov lods gs data16 or inc outsb mov jmp add inc cmp dec inc mov cli sub popa mov pop mov xchg dec das jo inc out cltd (bad) fidivrl xor inc aad or in test inc add cld test pop test or xchg sbb mov sbb dec jecxz popf mov sahf cmp lock inc xchg xchg imul add sbb pop cmc push sarb xor in pop sti sub xor mov ss repz mov shl inc mov inc add rcl sbb in push xor mov sub out adc mov mov fsubr sbb cs lret or xor inc and inc out mov adc jp mov les cltd mov outsb or mov lret inc scas or jle cmpsb jno ljmp ss inc (bad) mov int jnp fbld dec or in popf pusha mov push sub sti jae fiaddl iret dec jmp mov stos xor je push loop inc in inc xchg clc fisubr mov and mov inc adc push jle mov adc leave les loop ja loopne cmp enter dec dec aad or mov mov xchg inc out test cmp in jb push leave dec cwtl dec lahf cmp inc in in xchg jns push jmp sub popa lods sete sahf mov popa lea fldpi loop mov ficom adc mov adc jg hlt cmp in nop cli (bad) stos pop pandn xchg pop out aaa add mov jecxz dec mov fldcw loopne dec xor out scas cmp add mov cld pop ret (bad) jae ds sub in repnz fadds mov add and dec dec ss sbb mov jbe jle rclb fwait (bad) loope das xchg incb icebp mov jg in jle jno xchg sub inc int3 sub test sub outsl lcall push fild fldenv stc mov sub cmpsb ds pop (bad) lods lcall outsl inc call adc (bad) jl std mov add ja lret mov inc pop push cmpsb cmpsl push and in lock repnz int3 jmp xor push call fs test jp adc cmp xor push lret jbe lods sbb xlat (bad) push ds mov int gs outsl pushf pop in sub (bad) ljmp fsubrp jl sub movsb add sbb movsl or sarl dec gs leave cs imul cmc pop mov lret (bad) mov je jno mov repnz in add cmpsb loopne mov xor add mov imul bound xchg neg mov lods fptan pop mov aaa cmc push repnz loope test lret bound enter mov xchg mov or jnp push xor lret push pushf dec aas jg pop cmp or decw inc jl lods push cli daa sti cmpsl mov lods pusha or cmp mov aaa pop xchg mov add sarl cmp sti loopne mov mov scas in inc idivb rcll mov lahf inc xor pop sbb int jmp data16 jnp popf out insl stos cs movsl mov push mov mov ss jl add shrb dec mov fisubr jno aam jmp cmovbe inc fwait popa addb lds xchg pop push ret orb mov enter mov mov sti sub mov scas (bad) mov mov mov popf mov ja pop cmpsb push mov adcl pushf jp out idivb stc push in test jne jp add jnp cltd and stc outsb jno xchg sahf mov jle adc scas pop test stc xchg arpl bound in ss stc and and ljmp or jmp (bad) (bad) dec scas cltd dec sub mov add dec dec test pop add scas addr16 pop xchg mov push test pop aam mov sub lea fdivl fimul fdivl je pop adc push or test sar stc call clc clc cmp decb sbb lock mov sbb cld inc (bad) movsb pop lds sub rol sbb stc jmp adc push pusha insb xor mov jae pop cmp adc push inc sbb rol jge aaa nop (bad) repnz std dec cmp js pop iret push sub ret iret dec (bad) and ficomp (bad) mov mov inc push xchg fmul or cmp aas mov cmpsl add addr16 std mov test scas out fmull mov popl mov adc mov sbb cli pop sbb add rolb and int test adc or cmp lods xchg mov int3 cmp jg pop gs test push stc je mov test adc cmc rclb pop xchg fldt jg cmp mov call stos repz fs push pop enter hlt jnp mov push rcrb or iret mov mov sub mov int ficoml and ja std fidivrl dec test jne push popa mov loopne and mov push call movsb or and scas hlt scas mov (bad) jb pop jmp (bad) dec rep and pusha pop xor mov sbb dec lods scas adc scas aad mov sub sbb rclb daa lock pop lds push push push inc adc xor mov movsb scas mov lahf call js inc mov jo mov push sahf or loope add (bad) mov or call mov out outsb mov repnz test dec int xchg gs xchg ret fnstsw in mov push mov mov mov xchg push dec fcoms jp (bad) movsb sub dec xchg inc sbb mov (bad) xor mov pop leave sub out lods push mov js int3 sbb sbb ret in das addr16 xchg lret mov cmp push in xor imul (bad) xchg orl out les test orl inc jo jns or dec mov in (bad) mov jmp fdivl lcall mov dec mov xchg stos iret pop cmp shrb mov xchg adc pushf pop adc sbb loope icebp and mov dec (bad) sub mov (bad) out pusha inc das jle test (bad) mov movsb or (bad) fsubs mov rclb mov cmp mov inc ljmp insb out pop xor mov pusha xchg xchg mov stc test pop fsubr jl push push jo inc ds sti jl adc mov sti jns hlt leave repnz and fs scas push xor sub dec test mov out test (bad) mov sbb mov mov add pop mov cld mov xchg in dec cs mov repnz call loope and (bad) je push sbb mov mov fs add add ficomp fsubrp cltd push imul lea (bad) in adc fwait (bad) fldl inc fs or das int dec mov cmpl dec popa mov jns mov mov inc push pop add test outsl mov mov dec das pop sahf into test xchg ja popl fs loopne dec out and stc mov add sbb out push adcl loopne cwtl ret add leave fdiv movsl xchg push int3 paddw je test pop rolb ss add shr xchg push mov mov fs add mov scas call push xchg call xorb push pop repz xor in and xchg sub int stc sbb aaa push inc imul (bad) leave scas sub rcr sbb (bad) ja cmp mov adc jnp xchg adc dec adc cmpsl mov or in hlt int inc mov repnz enter adc adcl cmpsb inc fldl pop lods mov lea sub (bad) mov in adc adc mov xor mov imul mov cmp mov mov adc jne sbb adc mov faddl and or nop repnz jo fdivs cltd arpl mov or dec out (bad) ljmp pop into mov jle pop mov movsl insb pop call sbb dec mov mov jns xchg push jmp push xor mull lods mov and mov add sti insb fbld mov pop xacquire hlt movl loope in and mov stc and pop or mov mov or mov rolb dec cmp fildll or jl xchg adc adc (bad) adc jns call addr16 add xchg arpl rep inc jne enter inc lret mov add lods pop in xchg popa shrl rorl es int mov js in xor push jge xchg jle cwtl test xchg stos jno cmp loop dec lahf and loop hlt ljmp mov das adc dec push mov into or les nop mov adc aas jl (bad) imulb call pop fdivl mov arpl sarl stos mov mov sbb sbb xchg and inc sbbb stos pop adc aad add ds sub xchg scas cmp icebp jg jb sub cmp inc test dec pop loopne xchg xchg std mov ret push sbb mov add in mov mov inc add cmpsl push sbb fcom push incb sub ds pop sub xlat pop pop out inc dec arpl fmull push xor jo dec lea add hlt int3 fildll cwtl mov in push movsb xchg sahf inc mov pop or (bad) lock stc fcomps int roll std push or dec ret mov ss add mov enter mov fisubrl xchg (bad) subb ret inc add mov mov ret jo (bad) jae cmp fs sbb cmp cmp in (bad) pop ss int pushw sti jno aad fwait mov in lahf mov cmp stc scas stos mov jae jne lock data16 loop rorb (bad) xor cmp test sbb aaa decl ja movb jae out xchg jl pop push mov js sub addr16 jle sti cltd mov das sti and (bad) (bad) fdivl imul mov adc (bad) cmp mov adc add pop rcll lds adc xchg lcall out mov lods test in lock fistp xchg mov lods lcall leave cld sbb lcall je xor jmp inc push push push dec std adc adc fsubrs popa in ja loope cmpsb insl stos outsb jg sbb push push clc sub sub and test ss cmpsl add scas js lock imul arpl dec shrl cltd jmp (bad) jo fsubs outsl cmp inc ficomp xor xchg ja mov pop out js repnz shr and inc lods add push stc aas out mov aaa pop sti dec push lods mov mov rcrl paddb mov sub mov jl xchg add xor cmp inc rclb (bad) into or mov jae inc push fidivrl out add icebp jmp (bad) call je cltd mov fwait cmpsb stc in sbb insb fwait scas stos cmp loope (bad) cmp nop inc (bad) js push subl jmp stos inc sub (bad) in fmull jo push addr16 pop cmpsl test dec rclb fldt cmp push push mov mov notl in cmp pusha fwait dec in and sbb xchg inc ret pop cmp cmp (bad) lret repz dec movsb add notl stc out pop mov mov lds jb fdivs fstpl imull jbe addb pop add movsb xchg sbb push sbb cwtl mov std mov out jbe cmp (bad) mov xlat cs test fdivrl pop or je inc dec lret popf adc dec in pop movsb imul push and outsb (bad) mov sub aam mov pop inc jge pop rclb pusha ret lods cmp test mov ljmp outsl js out ss dec mov xchg es xor xor jge add sbb or lds xorps mov mov hlt mov adc sub outsb jl dec scas sbb cld out mov js sub test jbe push (bad) mov stos sarb lods arpl lods fdivl in jno xor insb subl cwtl mov sbb nop movb dec and rcl popf sbb les mull adc cmp stos mov push jecxz adc push stc jo (bad) outsl mov pop adc (bad) dec loop out in sub loop out jp das xchg cmpsl jns (bad) push movsl add lock mov xchg push icebp addr16 loope lock sahf lock mov sbb int3 stc or xor mov faddp int3 cmp ret mov stos punpckldq jge push popa push hlt xor dec scas xor push mov fsubrl js sub lods mov lods test js (bad) push aad pop imul add popa (bad) mov pop std add pop mov sub out mov xchg sahf jmp mov add arpl jl jo fwait pop pop cwtl mov pop shlb movsl mov jo iret adc pop stc dec push pop sti mov fs push push movsb je adc push dec pop adc dec stos dec jb roll lods aad icebp add jl sub and sub pop movsl pusha mov dec mov mov pusha sbb inc add test std cld bound push hlt mov and jmp add mov test cmp mov mov pusha stos mov fdivrs sub or (bad) lods add daa cld sub insb sub scas test pop stos pop pop mov shrb popa mov sahf mov jno divb stos dec mov daa sahf mov in or jl pop mov fcompl xor outsb pop popa testb sub push insl sub loope mov sbb iret loope adc lret xchg cmp mov mov repz mov sbb out repz ljmp mov les sub movsl std int fcmovne sahf mov push mov jp sbbl icebp sub add repz test in jmp add mov add jne adc negb scas fstpt iret pusha mul nop aad mov xchg flds add adc inc push arpl out sub popw xor inc popa dec or jnp mov (bad) push sbb dec push push ljmp nop push mov push nop xchg in sub inc or loopne mov jae add jae out pop dec stos jb dec mov inc jle pop or mov repnz lahf sbb inc mov int3 dec sbb and sbb insl or inc push jmp les fucomp loopnew push cld push stos jmp in add test imul sbb lock lcall les mov xchg out dec inc adc add xchg sub (bad) mov sbb (bad) jl mov mov (bad) pop stc in push ds nop insl and lahf neg fdivs insl cmp icebp jbe lods imull lock mov jl or mov imul or cltd in aad mov mov push dec pushw xlat ret xchg int hlt leave lahf sbb dec push lods je iret pop cmp decb xor inc ja or mov sbb int dec inc lds (bad) notb in push jae mov jmp sahf push or dec (bad) push divb push jmp sub mov (bad) repz push sbb pop nop lret inc lds (bad) xor pop (bad) cmp push adc scas addr16 add xor into std jo jb mov int3 les scas sahf push dec mov inc int3 mov push nop mov ljmp mov dec adc xchg cli inc sub dec repnz dec add scas push xor jnp mov cli cmpsl or push xchg mov and mov add and leave (bad) notl jnp pop es test mov cmpsl in aad mov in pop lds push call mov icebp lods mov and iret mov pop jns and cmp loop dec push fucomp mov movsl into and add loope add loopne outsl mul mov enter cld adc stos rorb mov ja pop fs dec rcrl (bad) lret imul ljmp push jmp pop mov or mov loopne inc push mov lods xchg push dec cltd add lods cmpsl mov (bad) in adc jmp dec inc xchg fcoms dec pop nop (bad) scas and fwait sbb push mov mov and push insl push pop repnz ds mov nop ss mov js and lds mov mov mov cld cmpsl (bad) loopne rclb cwtl or sub ja inc (bad) scas jnp int ljmp mov pop lcall iret sti dec aad test jae leave ja mov leave mov push mov mov loope imul fwait repz imul jae xchg jecxz loope mov movsb cmp ret sbb ljmp imul jne inc mov outsl outsb lods or shr xchg movsb xor jmp popf iret test mov lods faddl in out insl lods lret cld roll pop mov insl add dec xchg hlt lods into lock in dec hlt pop fadds idivl jae dec stos inc mov arpl xchg call mov scas clc mov imul mov push mov jp rorb jl imul outsl jl test adc callw pop push cwtl sti leave or (bad) push xchg mov rolb push lret out cmp jno icebp dec dec sarl add xchg (bad) int3 and mov adc int pop pop cmpsl pop mov jne dec xchg dec xchg push clc cmp std fs lock inc dec inc sbb inc shll out inc or jmp pop jb dec in pop sbb mov cmpsl adc icebp push push (bad) (bad) push adc in mov adc outsl pop (bad) push test jns push (bad) sbb (bad) je or xor insb subl scas in aad mov cli mov mov ljmp mov sub cmp ja cmpsl xchg jo insb stc and lahf mov je adc stc sbb adc cmp lret scas inc sub fwait cmp jb sbb (bad) ror mov sbb lret mov xchg sbb in pop repnz fmull dec rcrl (bad) jle lods out shrb sub xchg loop adc leave inc mov mov rclb push push pop adc jmp adc fucomp dec xchg cmp mov leave mov mov mov cmpsb ds pop arpl enter scas pusha in mov sahf push inc cmp jge out sub call sbb ss jmp mov sub push (bad) jge push inc int3 call mov repnz push pop in out loop out sub mov push xchg jge pusha stos lock (bad) fisubl sub dec mov xor dec jmp lea fistp mov (bad) rclb mov mov xchg sub xor cmp mov out pop jge mov cmp cltd mov jl xor push loop ss lods shrb push or lock cmp xchg mov xor mov xlat xor jo imul test sub mulb mov outsl add ds mov inc mov and aam and cmpsb jle fisttp sbb les movsl ja popa loope jne inc imull mov mull rcll pop cwtl lret cmpsl sbb inc dec or pop dec cs fdivs imul scas sbb sbb mov daa ret lods mov (bad) jno out sub mov inc ss jecxz or inc xchg shrl notb out int and cmp pop mov lret (bad) je add push push (bad) fist test scas xlat lods sti dec (bad) mov cmp aas bound hlt xor cwtl sbb add int3 repz adc testb mov fnop cmpsl xchg dec pop add dec or mov mov test sbb sbb jge shll das mov std pop in rol jb stos xchg push cmpsb xlat inc into dec mov push jmp rolb pop jb (bad) mov xchg push mov mov shll sahf lods adc push mov jecxz out sbb imul out jl add stos (bad) into imul push jb mov xchg mov mov push pop dec (bad) mov jecxz jp clc jl jecxz dec jmp mov sahf lods rolb mov inc jne or cwtl stos add xchg xor (bad) mov mov leave pop cs faddl jno fcoms lahf dec mov nop mov xchg mov push cmpsl repz adc push cmpsb movsl push mov bound pop sbb mov ds scas jnp stos push call fist jp lds ret jecxz push aas iret pushf into out js cltd or cltd jnp push jne out pop ret repnz pusha faddl cmp in cli cmp jb mov dec pop aam dec hlt lahf movb mov pop test inc sbb incb xchg push cld dec rcrl jl ja inc dec pop jb fwait xor mov xchg in pushf jle xor xchg lds fcompl popa dec push shrl xchg loop sarl and cld (bad) xchg stos mov fwait stos mov in popf sarb popf dec mov push stos fimul pusha movb (bad) lahf icebp mov add pop dec repz fdivrp mov push out stos lahf cmp and sti std xor inc adc push cmc daa in sahf (bad) lock jle stos fwait mov push sub cmp sub lods or cmp mov add push push add aam sti stos mov push push cld sbb jg sub das cmc sub mov loope int outsl and stc addr16 (bad) add pop push jae insl jae cltd cmpsb xchg fsubrs stc stc xchg fnop inc mov mov push cli mov xlat and loope out scas push jno mov jmp mov andl gs xchg and jo popa mov outsb lods dec lret je push fisubrl out cwtl dec or inc push stos mov outsb sbb mov inc dec jne cmp out push sbb sbb pop push cwtl push fsubp ds pop sub dec push jb dec mov (bad) jge ja lods cmp mov mov inc sbb jmp sbb dec das daa xor gs insb dec add fsubr stos in dec push adc lea sarl xor orl imul push inc mov lods repnz loopne call sub sub nop (bad) ljmp xor int iret aad and test sbb mov outsb xchg jecxz sarb imul adc inc inc fwait adc sbb enter int3 call in in insl push xlat outsl adc subb in jo jb inc call mov nop push dec cmp jbe xchg test (bad) and lds cmc call mov lcall js mov inc pop fwait ss pop mov push inc pop cmc dec (bad) sub repz fcmovnu aam outsb sub fcomps je pop pop pop into xchg sahf std dec rcrl push jno lods lcall adc and jl aad mov mov cmpsb movsb xor fmull mov sahf mov cld rol dec cmp pop inc inc or int3 lcall jmp stc pushf ds lock (bad) pop and sub push insb addr16 sbb enter and fisubl add adc add or xchg mov and mov notl sbb (bad) scas sbb sbb dec inc movsl xchg add lods mov subb cmpsb inc pop pop xchg xor pop xchg ljmp pusha xor les cwtl add aad inc scas cmp add or push push xor pusha sub mov fadds gs or cs push mov add aas data16 and sbb pusha sti mov push imul or dec rcrb pop push clc fist xor adc or in (bad) mov lret cmp xor in sbb cmc lods mov mov dec dec adc loopne dec dec sub arpl inc or mov inc jnp jmp mov or sahf imull jo hlt cwtl mov add daa dec push xchg or push jns or sbb fadds push outsl int3 push adc es add adc hlt and loope push sub xor pop cwtl push push jb cli roll stc sbb aas ret outsb push xchg sbb inc push mov jne cs jb call fnstenv out push xchg mov and or fs fwait hlt lahf jo jp mov repz cmp sahf (bad) ds push push (bad) aam add test in mov mov into int3 jecxz push jmp mov bound lock push jmp pushf inc or push mov push push jl pop inc and xor mov mov bound mov lcall cmpsb test loopne push out clc mov mov mov dec lock fnop dec (bad) push (bad) or cmc imul imull xchg stos pop clc mov mov xchg imul mov cli jge push xchg pushf xor mov adc adc xchg imul imul dec rorl out mov bnd out stos xchg sub inc into pop push (bad) inc pop test xor loop in mov xor call test in adc ret or es std loopne out fidivr insb nop push pop or addr16 add adc mov push int (bad) sub movsb in aad jnp int3 js ljmp mov bound cmpsl xchg lret pushf mov adc (bad) mov mov sbb mov stos out (bad) mov mov insb faddl xchg jmp push mov cs addr16 movsl scas dec mov sbb das mulb shll or (bad) mov lcall mov call sbb int3 outsl push pushf jge aam jo stos or out or sahf sbb leave rcrb dec push pop dec scas adc sub inc movsl dec mov (bad) scas (bad) dec cwtl dec cmpsb dec dec sub fdivrl xchg mov outsl cld dec movsb mov out popa cmp mov jecxz retw mov xlat mov sub push push ss aas pushf mov or ret or mov or mov or test cld pop xchg stos sbb inc jmp sub sarl enter cs aad fs push xchg add xor xorb xor jb (bad) je int3 data16 imul add jl cmpsb inc loopne push out jne aaa (bad) (bad) mov cli insl mov mov push jl cmpsl test dec adc insl mov dec mov scas sbb dec lret adc pop out inc mov xchg loopne in cmp pop jo push sub dec xchg xchg leave mov push push incb push dec in jo js push mov push adc (bad) fimul xor outsb push push add and inc lcall or pop mov je shld lea add aad dec adc push ljmp lcall xchg ss call xchg mov addr16 pop popf popf enter jno mov inc dec das popw aas push rol push mov cmp mov js dec enter cwtl mov dec add mov stos ss push dec xor lcall js xchg mov lods inc push cmpsb insb stos clc (bad) out test and and les jl adc inc repz xor add push enter pop mov xor shl push push inc shrl xchg fwait inc push in (bad) and cmpsb xchg inc into cld jecxz lock push pop or xchg cld adc add add jmp int3 inc sbbl call cltd jae mov jnp or lret cltd fcmove loope xchg jge jo xchg (bad) fsubrs (bad) divb sahf mov out cmpsb ds mov add adc pop lock outsb jb lret mov lahf ret inc sub loope add jmp cmc outsl sub mov add mov loope imul inc cmc push (bad) mov dec into lea in shrb add mov insl fcomip out (bad) lds sbb scas (bad) or movsb mov or test fs repz jl xor test xchg dec outsl dec ja cmp push dec rcrb nop add xchg iret or adc lds sub mov dec sub jae mov jb xchg sbb xchg mov mov xor fdivrs add int3 imul push loopne add push push xor mov addr16 mov inc outsl push cmovo inc andl mov xchg movsb jecxz mov jne cmp jp adcb jge dec inc fsub (bad) arpl movsl and or scas inc test jge and (bad) jne loope aad ds cmp loope jle fisttpll call (bad) sbb (bad) out enter pop negl push mov test xchg push jns push jle pop sbb push dec gs dec dec adc sub ret jne lret dec inc icebp lea loopne mov sbb (bad) mov xchg rorb pop imul out xchg cmp addr16 and mov mov repz dec pop dec fwait push es mov (bad) xor mov pop scas ljmp jge xor push dec cld (bad) les jo dec push test cmp popf cmp scas call aas mov push adc dec push or or dec sbb pop push flds dec popa inc cld div (bad) xor add int inc cmpsl call (bad) jnp add dec cmpsb movsl aaa fwait rolb jmp xchg adc mov pop cmp lds sub adc movsb sbb jl repz fucomip loopne mov sbb (bad) fldl jle pop jg es mov ja lret inc aaa and dec test xchg xor inc xor sub mov popa outsl cmc jb inc mov jo mov (bad) dec cwtl add jl test call adc mov mov jl and jno lahf add pmulhw mov sbb call sub rcr xchg shlb outsb les add mov cld inc daa push pop pop in cld mov push cmovge int pop dec pop xor mov mov test aam add es insb aad loop mov cmp and dec cmp (bad) xchg call pusha push int3 sbb dec xchg iret data16 mov pusha gs adcl xchg sbb xlat dec pusha cmc loop inc inc cmp outsb bound fdivrl lods popf dec fldenv sbb fdivr or mov push cmp pop mov inc mov les or and mov cli inc mov adc call mov or and jb mov dec lea jl or jno lds insl xor jb lret (bad) push lds clc push iret in sbbl (bad) lret cmp lret dec pop pop pop cwtl loop xor shrl and jne adc mov jmp les in add popf push call pop fs or cmp pop jb ss or sub lahf scas jl lcall jmp xchg mov and and movsb fimull and lock movsb cmp iret inc mov pop icebp inc nop fisub xor (bad) cmpsl mov sub adc js int sti nop dec mov in out pop (bad) pusha and jle mov push (bad) leave push jecxz dec jns lcall dec call js sahf es je out (bad) mov shll inc lods (bad) mov insb in cli mov aaa mov xlat mov jle or gs and mov pop cli mov push cmp mov xchg call add insl lds bound xor jne adc enter arpl (bad) push push push pusha in push pushf rclb bound pop or dec sub sahf mov xor in cli cmpsl pop stos (bad) xor stc push loope in adc and add fsts mov cmpsb inc adc mov int sti std fldcw xlat roll leave mov rep add fildl dec dec loope inc clc push pusha add arpl push lcall inc cmp gs add jmp xlat mov flds jae call fwait inc call dec push cmpl inc (bad) out fisttpl push rcr outsl sub and dec dec out add inc data16 int adc ret (bad) dec leave in hlt xlat nop rorb inc rcr jp cltd mov pop fldt cltd out cmc jne ljmp and jo dec mov jae dec dec int3 lods jae fbld jo pop push dec jno iret xor push cmp andb dec stos add push mov out push push mov and mov cmp pop ja movsl cmp pop mov jp sbb pusha and adc test xor lds jno test fs iret adc sub sbb test mov aas or in mov enter push in shrb inc and pop jmp sti adc rcll shl mov out xor (bad) and cmp rcr push jne sahf jnp pop (bad) lock popf xchg and mov pop adc outsl rcrl jb in mov push loope cltd push xor in sub and xor lahf xchg orl mov call or cmp push outsl (bad) mov xor jo xchg lret or cltd scas push int3 je add fs cld in push loope sarb ftst pop sub or in dec xchg pop lahf sbb gs xchg enter xor cmp popa xor sbb movb sarb cld pop (bad) rclb adc inc or mov cmp stc sub cmp pop loop mov or cld scas negl jbe mov or pop sbb inc inc and ljmp dec fwait addr16 xchg repz inc or inc gs xor bound mov push sbbl cmp popf insb push jb sti call and lds xor adc test mov xor adc divl (bad) ficompl sub add in (bad) inc sbb out subb sbb arpl pop fimul cltd and mov inc sbb mov pop pop insb mov and push lret add into (bad) mov js repz pop sbb pop dec mov xchg clc mov int faddl scas push cmc xor adc jp sub lock xor adc test inc insb add repnz jb mov sbb inc fdivrs test jnp inc sub pop push test data16 inc pop mov aad or jb pusha scas xor rcrb mov jb rorb inc loopne addr16 pop cmp cli test out dec (bad) pushf pop jne inc mov ljmp cmp lock xlat adc rol sub mov out push jge outsl jnp dec stc jb (bad) outsb inc xor cmp sbb dec cltd (bad) cmp cmp lods in mov ss mov mov loope sub push mov fnstenv pop sbb iret dec ficompl mov inc dec push or jmp mov in rcl pusha pop mov pop insl push scas sbb sub sti fisubrl cmp jo aas mov add fld rclb ljmp sarl xchg int3 jmp push subl pop leave addr16 loopne leave lock repnz fidivl aam enter and mov insb fisub cmc xchg jle mov lahf sahf inc lods stos ja cmp pop out loop lcall or (bad) jb lahf test leave shrl mov jo dec dec cwtl pop (bad) repnz add enter push push ret inc inc scas mov and mov and jge pop rorb cmp mov daa xchg inc inc (bad) sbb inc push mov mov sbb pop dec (bad) jb enter dec fsubl push punpckldq or rol mov test dec xor es test pop pop xor in cmp callw stos inc stos int xorb ja faddl pusha xor test mov lods sbb ffreep ficom xchg mov sub inc andb movsb pop rcll push mov xor (bad) out mov leave rcrb (bad) mov push cli ret pushf fwait pop pop insl jne mov sub mov push cmpxchg cmpsb loope ss adc aaa push or orb mov pop popa sbb push mov or push stc jg jns imul mov (bad) xchg inc or pop stos mov push mov pop movsb inc test shrb fimull imul pop cli mov mov lcall (bad) xchg jge push insl or nop mov or sbb rcrb jl dec xor test xchg push (bad) repz push test mov mov adc ret popa push mov aaa push lahf cmp push lahf sub xlat cmp push cmp sbbb jno out mov int3 lods test mov jb xor add imul lea push ss mov scas lcall pusha inc pop mov jg fildll jl sbb push mov push jle dec dec mov in jle push adc fisubr add insl stos xlat push test adc lcall sub rcrb jle mov sbb inc lock loop add movsb les cwtl mov mov lds (bad) cli enter stos dec lret mul pusha icebp cmp dec add loopne pushf dec jle in sub mov outsl mov push jp adc ljmp jp mov sub inc hlt xchg test jnp xchg gs fwait shrb adcl inc cld aas aaa mov jbe jns in aaa push and cli repnz mov lcall insl loope mov dec test mov mov push loope mov add decl lods lds int outsb cwtl mov jno mov and repnz fimull jbe sub jp inc cmpsl sub mov mov push mov enter fcomi (bad) xchg cmp out jmp xchg stos (bad) xchg std fbstp popf clc mov mov mov mov in dec dec je mov sub push data16 cld in fildll add lea sub mov and sbb insl out lods xchg push mov sub add jle call jl je jl fldcw icebp int3 inc jmp jge inc mov fwait xchg add jl xchg push lret rclb sbb inc jge pop mov int3 inc rcrb push gs call or aad or sub jo or pop rcrb insl pop int3 stos or cmp aaa es mov push lret and and push rolb imul rclb pop mov xchg aaa scas xchg xor or insb inc mov xchg pop push into fwait sub add sbb xchg jl jne je (bad) aad scas aam in outsb pop rorl adc (bad) scas addr16 mov pop xor or out and push cld and sar xchg insb inc jbe (bad) out popf scas mov jmp and fidivr sbb mov mov mov scas inc pop or mov (bad) popa jle sti cld and push aam bound dec push pop inc xchg pop pop pop repnz scas dec add icebp dec sub roll xor mov dec out mov pop scas pop lret xor in loope fstp mov mov (bad) in movsl or mov inc loope insb loopne dec adc addr16 shlb push push enter inc xchg lret iret inc in pop cld aam (bad) mov sti setnp repz sbb ret push aas push lret mov fs bound roll xchg jae add sbb xor cmp sub in (bad) jae push call jne push inc jle mov cmp cwtl xor or outsl popa bound inc hlt xor xor mov dec movsb imul dec and sbb xchg rcll fistpll aam xchg hlt arpl in call outsl dec push aad dec xor repz and jne push mov sub mov pop cmp dec shrl int repz pushf popa mov lret pop mov jmp mov out pop mov insl in mov dec sbb cmpsl lods sbb lods dec adc scas inc adc mov xchg pop or inc popf popa add push lcall pop (bad) (bad) lods mov (bad) (bad) mov push cld cmp sbb stos les mull adc xchg mov mov pop movsb mov fimull int mov movsb fwait aad vpunpckhwd jae mov lods xchg push add (bad) mov inc mov out aaa out adc ljmp mov hlt icebp andb fmull cmp and aas mov dec insb insl adc sbb lds dec xlat das clc movb orl loope pop push inc adc call test adc lock xchg sub jmp lahf or gs mov cmpsb inc push inc add subl iret icebp or push leave jae in sbb or imul jne jl insl pusha dec push mov adc mov adc or xor mov ret inc push xchg xor shrb insb cmc mov das loopne icebp test sub mov dec in mov mov xor cmp ds int out ss cld rorb mov dec pop loopne dec xor push or mov aam scas lock rcl dec xor test js pop rclb dec dec sbb mov lock gs rcrl cld inc loop ja push jmp std jbe out mov xchg leave outsl fs pop in icebp jno rcrb cs jecxz and popa jbe gs pop xchg inc cli dec inc inc std pop xchg jl xchg dec outsb std xor mov pop mov (bad) js in cmpsb lods sub inc xchg outsl aaa push cmc add xchg les adc mov cmpsb sahf (bad) mov mov movsb mov test stc fnsave inc or repz xchg mov inc rcrb or mov cmpsl pop pop xor (bad) cmp fbld les pop sti lods fsubrs insl push test loopne shlb jle lcall add popf pop jmp dec push sbb dec mov arpl les sbb call jne jae aaa loopne pop pop adc lahf sub inc int std jnp pop js xor mov dec pusha mov aam shr jnp jp inc int3 cmp jae outsb sbb ja (bad) mov fwait push rorl cmp pop mov mov sbbl inc into mov mov into cmp pop into lods mov push sbb fwait shlb mov pusha sub jae in rorb xchg xorl scas mov outsb mov inc jle push lahf scas mov or fldl sti mov mov mov lds in sarb jo aaa mov (bad) push in lea test add jl dec cmpsl lods nop pop jbe jmp cwtl pusha jns mov out push dec xlat mov cmpsl outsb int seto mov pop jle hlt (bad) mov loope lret mov popf mov insl mov fisubl pop int gs dec mov pusha mov cmp sbb xor inc jae add dec mov clc or adc cld sti mov push mov dec adc jge dec rcrl dec repz aaa int in inc movsl (bad) jae xor jns pop sub ja or mov mov test jb (bad) mov repnz dec and dec cmc push rcrl stos push pop adc xchg jae lods or adc push outsl jecxz mov mov push popa jp sahf es xor sub loope fdivl enter dec insl mov in scas sbb add out iret bound push mov js add or lret xchg mov inc cs sbb xor add or cwtl pop pop pop mov rorb les and scas sti fiaddl incb push movsb add push dec adc pushf pop and jl outsl adc in test inc addr16 xor pusha jae xchg xchg push dec sub mov test das not sar movups call ds in nop fisttpll cmp in outsl addr16 pop mov adc mov sti mov xchg (bad) mov in mov mov push ret jns xchg add sbb xor ret xchg pop call jp fisttpl add outsl add imul inc sbb jl pop mov outsl mov jnp pop cmpsb dec or fdivr inc in bound lahf push dec es sub addr16 insb or sbb push inc dec jnp pop test bound mov dec mov mov dec cmp clc movsb mov fcoms inc push inc test inc mov inc iret jbe stos xchg cmp inc xchg not cmpsl cmpsl dec popa test jl mov daa outsb (bad) into pop sahf push jp mov int3 imul sbb loopne aad cmp ficomp jl and push mov lret mov int3 mov xchg add (bad) js push ja push sti sahf dec pop pop imul cli add sbb add push mov ja pop pop fmuls pop into jl or inc adc pop pop push pop mov cltd stc mov xchg lret add repnz sbb adc insb fs fisttpl into ffree push stc pop mov outsb xchg stos faddl sub aad loopne dec out loopne inc in scas sbb mov ret (bad) mov xlat out jae xchg or lcall rolb int3 call mov jmp repnz dec in inc dec ss inc dec icebp add mov (bad) cmpsl insl mov adc pop mov pop mov insl jg add clc mov loopne xchg roll xor cmp repnz movsl mov jmp icebp jno popa sub sub xor adc xor dec outsl mov sub shrb data16 mov data16 fidiv xchg add jge dec push jne dec arpl dec jp push dec jno pop mov out je dec mov adc push inc push or mov add adc into movsb add roll sbb add lahf hlt mov xchg cmp push bnd push jmp rcrl lcall ror je pop cwtl in jp icebp mov (bad) insb mov out adc dec fimul ss mov jne repz cmp int dec pop dec inc inc lret pop mov shlb test and dec hlt addr16 dec aad pop sbb test mov (bad) int sbb enter inc in pop decl mov pop fwait pop mov leave push xchg movsl inc inc mov (bad) das rclb jle lods inc mov cli iret mov movsl loopne fidivl fcmovne enter dec cli pushf mov hlt push subb sbb push lahf push jno dec in aad sbb in push pushf adc push daa xor push sahf pop sysexit pop call test iret aam xor mov insl mov fwait sbb lods adc sbb ret jne pop xor mov push cs cltd pop dec rclb insb cld add out stos imull lret cmp stos je adc pop sbb cmp jno dec lret cmp add jns inc inc cli and cmpsl sub mov insl cltd push out outsb and outsb sub cltd frstor decb cli outsl inc push cli test and xchg mov adc mov cmc stc add gs xor add lods pop adc push addl jmp int cltd roll in rorl (bad) pop mov (bad) out mov nop aaa jg dec add adc mov imul inc ret les loop inc stos shrl xchg cs (bad) xchg sahf shrb pop xor push call aaa mov shlb gs jae mov or cmp rcl pop hlt aam mov iret push add mov cmp (bad) pop pop dec lock push mov fisttpll scas lahf outsl sub inc rorl js xchg cld push in ret lcall xor call mov pop push xor xchg dec scas mov pop adc adcb pop cmp out insl dec sbb push mov decb cmc add jge out sahf xchg pop and mov gs mov fmuls lods js mov push test repnz xor loop mov call test mov stos push sub jecxz imul stos inc lock hlt gs jmp inc ret and repnz mov push rcrl fs cwtl addr16 stos in lcall inc es (bad) ljmp inc dec (bad) pop and gs jno inc ds cld out loop popf xor or mov cmp iret cmc cmpsb add in int3 cmp adc sub or mov cmpl jnp jmp mov mov arpl push outsb push dec fldt cmpsb and mov in repz (bad) test dec mov std loope int inc xchg push mov mov pop scas xchg add cli lods jns lret add xchg (bad) into idivl mov andb add ja icebp arpl lret jns xchg les pop xchg sbb cld outsb lahf jp xchg pop fdivl xor push push add inc aaa ficompl add jnp in callw or ss sub stos popf or scas int sbb push mov lock repnz sti jae fs inc adc mov jle repnz loope mov xchg xchg enter mov dec int3 adc dec lret fstpt push test cs scas ss test mov fsubs sbbb mov aad add inc lds call add sti push dec mov mov jge mov jle mov jl pop andb aam icebp mov fdivs push inc dec cli jb ljmp sub stc ja jo sbb loopne ja add iret inc sarb sub dec addr16 call mov pop lods jp add out scas fwait mov xor and add (bad) sub dec push (bad) (bad) icebp idivl xor and and lret dec in movsl js pop fs inc xchg (bad) mov ljmp lods mov (bad) inc mov pop int dec mov (bad) xor pop cmpsl inc xor mov lods jmp dec dec jno mov sti loope push hlt icebp ja dec jns rorl or scas fidivl pop jecxz (bad) mov xor dec and xchg jecxz (bad) pusha hlt js imul add dec adc push pop jne ret scas daa mov mov dec dec mov test out pop jge movsl nop lods push sbb (bad) cmp pop or and mov dec pop clc jl add arpl jnp faddp hlt push dec hlt lcall xor ret inc cmp or fwait enter test mov fwait mov mov lods add mov push jge jle push pop cmp xchg movsl (bad) jmp aam xchg mov push mov enter dec fstps jnp hlt mov ja mov aaa (bad) dec push ror push inc icebp and push jg dec adc inc push addl lock push cli fwait jmp dec movsb dec push add jl adc icebp int3 nop int3 out cmp pop test fs rclb sarl push insl mov fiadd adc mov pop cs ror pop js les shl cmc movsb jns scas push ror inc cmp (bad) xchg inc jns add jmp and out cmp jmp loop call cmp cmpsb xchg (bad) test mov movsl sub je pusha cmpsl cmc and fdivr push jno inc movsb xlat sar inc dec out mov mov cmc dec sub push cmp mov mov mov jg std push rcll jo scas jae pop rcrl (bad) jns movsb mov mov icebp (bad) cmc out lods mov nop loop dec add (bad) movsl in inc mov mov xchg jg fsts pop push (bad) movsb jbe int hlt leave les je dec data16 adc movsl push sub pop ds stc ljmp mov add add (bad) fmull xor or mov xor jmp (bad) cmpsb and (bad) lods fdivl ljmp cmp xor shlb ljmp int3 movsb dec gs insl jg inc aaa pop into pop inc xlat aam mov push js xor inc or mov mov push sub sbb jno jp movsb dec loop into jmp mov leave xor cmc shll inc (bad) mov into dec faddl scas mov dec lret scas outsl xlat sbb bnd (bad) xchg lock mov push cmpsb mov add daa jp (bad) divb mov pusha dec or xor les lock add insb js or cwtl fnsave xor add cli mov add lahf mov mov inc pushf ret loopne inc cld mov dec into (bad) push inc addr16 pop roll stos push in inc cmp aas mov (bad) push imul icebp in icebp and add inc cmp pop mov and mull rclb cmp fsub hlt out sbb cld jmp pusha xchg mov test sbb dec daa push (bad) xadd mov fwait push inc jg mov ljmp mov test sbb sbb les cmc cmp out in mov mov jb dec mov out mov dec (bad) sub add inc jnp dec stos inc dec dec movsl jle sbb es mov push adc pop or repz jbe xchg not or fcomps outsl mov call inc shrb push push mov out sub scas cmp pop dec repnz sti (bad) adc nop sbb push and inc les cli scas fistl add pop xlat scas adc mov stos sub cmpsl mov out xchg mov or cld push (bad) xchg xor fdivrs inc xor jo add lods ja mov dec fisubl sarl dec test pusha (bad) in (bad) cli (bad) loopne lods rolb es inc and int adc dec push mov icebp test mov rcr test push fdivrl sbb inc xchg push test and icebp fs int mov out dec or (bad) out loop mov or (bad) mov add sahf mov and mov cmp call aad xchg xchg aam dec (bad) mov cmp mov popa push cs shrw pushf pop movsl addr16 push insl dec je cmp add idivl int3 and sti mul mov or xchg cmp push in addr16 pop sbb mov (bad) mov (bad) out shr jl fadds push stos xchg in xor iret cmp pusha inc push cltd cs add rol fstps stos sbb lahf mov cmpsl cmp push lret mov aam and into dec add jg dec and jne loopne outsl push or popf pop fldcw data16 mov inc (bad) mov xchg scas xchg int3 imul sarb adc pop loop xchg fwait inc aad jne scas cltd sub inc add int in pop xor sbb repnz sbb stos mov pop hlt clc mov arpl lods mov push inc xchg cltd and in pop popl dec dec add mov ljmp pop stc push pop movsb push push push stos jno lahf adc jg ljmp popa xor scas adc jl repnz jmp mov pop inc xchg mov les icebp stos out xchg or sbb pop rcll out pop mov int pop mov incl in shlb ljmp mov loopne xchg and mov test (bad) std mov loope fs into cltd cld ljmp repnz lds pop ja cwtl bound mov push scas jle aaa adc pop stos add lods sti jo in mov scas inc fcompl popf fistpl int3 mov adc mov iret dec icebp lcall ja add sub push xchg pop sbb cmp mov (bad) aam xchg push dec imul scas incb add aaa push push mov xchg lds adc (bad) int test and stc jns sbb xchg out insl mov mov add stos jl lret popl jne (bad) ljmp cmp xchg ret out mov xchg mov jnp push rorb test scas test pop insb cltd push shlb mov cmp add outsb das jae scas jmp movsb sub dec into dec adc call mov enter and scas stc sahf outsb aas scas aad sbb xor ret add adcl jae jmp sub add sti or paddsw stos cltd lcall loope push aad leave cmp aam xchg pop and sbb adc or outsb jae lahf test call and jg mov push out (bad) xor nop (bad) xor xchg inc sbb cltd (bad) mov lret pusha mov test ret (bad) mov movsb aad push push cmpsl jmp lock push xchg ljmp mov jo repnz dec in loope inc sub in mov (bad) adc push sti jmp cmpsb push cwtl dec jae in stc pushf insl inc out aad jo ljmp cld pop ja xchg loop movsb icebp jge,pt add ret xchg lods stos lea test jp movsl sub sub jmp adc push (bad) hlt mov jmp setle jg out cmp pop repnz push inc xchg out jno inc lods cwtl stos fidivl es mov or pop lds and or jmp cmc bound push in cmp dec rorl xchg lahf pop pop pop in cmpsb adc sbb (bad) push popf cmp add (bad) sbb mov pop in scas pop int3 cltd add xor out andl mov bound shll insl push sub cmp (bad) js icebp inc mov addr16 pusha adc cltd xchg out add push mov sub pop mov xchg sbb bound and adc mov or (bad) rclb popa push adc insl push xchg pop mov cs test and out mov inc push cs and lods fldt push movsb inc mov mov jb sub mov addr16 cmpsl (bad) jle mov testb cwtl sahf int3 mov fimull adc jl jg loopne fwait xchg lds repz mov aas loope arpl push int3 in push inc loopne into je (bad) hlt inc push pushf mov rorb int sbb mov gs mov xchg sbb mov push stc lock mov cmpsb fistp dec inc in mov aam pop (bad) cld insl or out sarb add mov sub (bad) mov clc clc push nop je cli adc mov in mov push xchg pusha mov mov pop push inc jmp (bad) jns mov mov lods mov inc push adc repnz pop push xor (bad) dec fcomps jl push test js in and loop or repz fisttpll or fidivrl inc or mov lret repz mov cmp nop mov inc rcl lret jae in ljmp mov inc hlt push adc (bad) hlt call dec xchg stos jecxz dec pop mov (bad) lods lock pop insl xchg mov clc pop sub and xchg or mov xchg push popfw adc cmp in xor out scas inc je cmp inc sub push dec cmpsl pop add stc push lret add sub adc repnz inc (bad) jne pop adc jp mov sahf pushf outsl jmp mov test jae pop and jecxz dec push mov lret or or mov dec mov movsl mov inc adc xchg (bad) mov adc outsl dec push inc rcll push xchg aad or jne lret pop jo and and xchg rcll negl push mov sub cld sbb jg fwait into inc loope je or ret sbb shrl sbbb popf inc mov mov mov mov cmp test or call lret cli pop pop jg jle sub rorl or cmp xor push xchg xchg jno mov sub jmp scas mov dec xchg sbb flds pusha pop mov mov xchg xchg test popa xchg dec in sbb cmpsb in ret add and outsb iret sbb in jae aam mov ds pushf cli (bad) ljmp jmp popf mov call mov inc cmpsl adc dec jns pop ljmp inc sbb xchg ds addr16 and pop and sbb stos rcl push jl in dec or rcr arpl out movsl push jle pop push sets test jae stos lods cld push in je xchg xorb jo jns jns inc stos rorl call jnp mov out je xor data16 aam push adc and xor mov jmp and inc sbb ret loope subb bound or inc pusha sbb (bad) or das xor incl divl mov jno add addr16 popf mov je cmp add add mov xchg jp jg pop jmp sbb and push movsl shlb fsubrl std pop sti inc sbb fadd loopne adcw mov mov xchg insb mov jle in movsl pop jl dec (bad) mov movsl leave push sbb ljmp popf jno mov in push cs orl sbb pop or into outsb stos adc jae test scas scas push jnp repz call cltd jle out xchg jbe dec mov mov repnz in into mov sub insb push repnz lods push or in push mov add test rcll adc iret cmp pushf test xchg push sarl test pop or mov pop mov mov cmp cmpps dec pop push mov js,pn loope mov push pusha push js pop mov mov xor add mov aas (bad) sbb pop mov ret fsubrs push (bad) repz sub mov psubusb imul xchg aad adc mov inc cmp jge sbb es sbb imul mov cmp push dec test outsl pop and lcall add sub popf (bad) (bad) call insl int3 nop fdivs sub (bad) or add loope push lcall out mov mov stc mov xchg cltd xchg lock push test in in call xchg cmp cs cmp js pop mov lret test mov pop inc adc cmp or out mov daa jns cmpsb mov mov dec xchg int lea lods out dec out shrl sbb (bad) bound movsb adcl ret sti xor mov inc pop hlt loope pop inc adc pusha mov clc mov or push sbb xchg negl fnsave inc sbb jne jl xchg and nop inc push adc adc add mov js shll jle mov test and push add jbe xlat jb (bad) jp (bad) xor jmp in mov sti jmp mov (bad) cmp xchg lods (bad) lods test jmp adc pop ret push flds repz ficomp (bad) cmp dec gs lret fstpt inc ja pop xchg stos mov (bad) dec test icebp aaa mov mov pop jnp repnz pop fimul imul dec outsl pop in sbb out mov or or sbb jle xchg mov rcl outsb insl ds push int3 mov inc fcomip dec cli push scas fs movsb dec imul dec jmp mov repz and inc lret andl fisttpll mov dec mov mov mov ss sbb daa mov xchg or sub icebp (bad) push push mov push iret pop std imul or cmp pop ret xor inc jle inc jge int3 pusha sbb cmp das push jns insb cld icebp mov cld mov push or push adc loop dec xchg dec dec insl outsb or sbb popf add and ja dec mov jbe and fs sbb in stos jne add cmpsl dec dec rcll push mov std mov leave or inc jae and (bad) jmp icebp add popf stos push sbb sub fidivr push push iret ret push (bad) sbb xchg rol mov rorl inc lods daa sbb aam cmp rorb ljmp cs lods into cwtl shll mov mov or pop push (bad) out loope in push xchg mov clc imul xchg inc movsl loopne fcmovnb mov push aaa scas pop mov dec xorl adc ss dec into sub insl inc subb pop (bad) mov fmul mov adc inc outsl scas aad sti push cmp lahf repz in add bound mov dec sbb dec xchg inc mov push scas cli add fnstcw adc sbb mov (bad) mov dec push sub test ret push imul sub jno std scas leave stos xchg sub mov imul adc xor testb jo sbb cmp add das notl push mov repz nop jg (bad) adc stc dec leave test cmp popa adc lcall sti imul hlt dec mov cld ret lea dec lahf xchg cs pop loop clc xchg dec jb pop aaa mov mov (bad) loopne xchg xchg data16 ljmp inc dec jae lcall movsl push rclb in fmuls in lods aaa push in das (bad) mov push mov mov cltd repz das mov sub mov or mov and dec fwait or pop (bad) mov cld jle mov mov (bad) add ficoml mov pushw ja xchg mov pop mov jg push inc stc xchg or mov sbb add nop mov aaa mov inc sahf inc (bad) loopne xchg jae je clc fisttp xor icebp push xchg pop imul loopne dec in push test pop push xchg mov imul xchg mov clc rcr fs faddp or cld inc ror pop sub adc insl insl push or adc idivl aaa nop inc lds (bad) mov int3 mov mov stos mov and (bad) push xor sbb pop jno scas ja push xchg or iret xchg dec std mov or (bad) (bad) jl (bad) jne std push pop loop pop dec dec lahf int call call orl push (bad) fs mov iret in sbb sbb cmpsl gs or loop mov cli add ret push ret add xorb jge cmp sbb add ja xor jecxz inc mov clc xchg in pushf sarl cmpsl jmp clc lahf scas or jl fstl popf dec mov (bad) adc mov int cmp repz mov dec sbb mov jle movsl int insb in mov (bad) cmpsb roll push jb mov push mov xchg adc data16 push sbb mov nop (bad) mov add imul dec insl and mov adc push movsb divb inc mov orl jns sbb in jbe bnd mov fs hlt add (bad) cmpsb addr16 sbb sub in adc add cltd sub xchg lret push out and lret mov pop xor sti sub xchg add repz clc adc lret sahf inc mov cltd pushf aam mov fdiv sbb int3 pop jb pop inc sahf notb mov test push jns and adc push fbstp stos ret mov xor xor in sub int sbb add adc int3 std ficoml push repnz add inc divb call jle mov push mov mov lret adcl xchg rcr (bad) mov insb mov sti stc (bad) mov cmpsl pop adc mov mov inc sbb add dec mov int3 mov pop stos sbb dec icebp inc shlb rclb dec pop cmpsb mov xchg mov or loopne icebp int3 or imul ss popf mov cmp ljmp cmpsb mov jp lock dec insl push push or mov aas xor pop lahf lahf scas repnz dec or dec scas cli mov test jmp (bad) mov jge mov cmp mov jecxz mov lahf cmpsl lock out add inc xchg sbb sti jo add sti daa int3 dec test cltd repz or scas jbe xabort repnz mov sti je int je sub mov test pop cmp mov mov nop fs clc stos test fistpll daa arpl jno js enter dec sbb js push cmc pop mov pusha xchg (bad) adc xchg les lcall dec addl mov in mov inc insb popa mov js hlt and push push xchg nop and iret adc repz int mov mov popf cli shlb mov adc dec add out sub lods pop xor addr16 push xchg lods xor sub imul add gs cmp repz hlt cld xlat xchg and dec xchg dec mov mov fsts cmpsb xorl insl scas loop mov push aaa xchg cmp out dec div push sbb cld cltd mov hlt icebp mov int sbb inc mov out pushf push dec xor fdivl in stc (bad) mov insb and push xchg outsl or leave xlat mov cmp (bad) lock xchg lcall imul mov mov mov dec sub pop scas lcall test mov dec mov mov int3 outsb jle mov xchg movsl outsl bnd js xor in and push adc jg cmpxchg jbe loop sarl test and test cmp xor pop pop push js and ret mov push mov int push bound inc pusha mov cmpsb cmpsl add adc insl dec movsb fldcw je in mov jp ret rcll fs hlt sti dec fidivrl loope adc cs push out jno out sbb inc aaa dec mov adc dec pusha ljmp dec or push rcll or imul jne je out sti gs sbb sahf popa pop push sub sub push mov je fwait lret sub mov xchg push arpl (bad) mov scas pusha lcall gs mov jecxz pop movsl xor test cmpxchg xchg call sub cltd nop adc pop xor data16 (bad) je stos inc (bad) xor test out leave add xor jmp inc (bad) icebp lahf pop sbb dec push cs test inc scas dec xchg mov cli dec add sahf and fcompl les jmp add push mov lahf push jmp jo (bad) jp aaa lret ss js insl call sbb jecxz or lods inc dec pushf cld hlt adc push into movsb sub fisttpll and push lea sbb jbe int3 mov (bad) mov sbb icebp int jge push movntps cmpsb (bad) shrl push push dec dec shll mov scas sbb enter ljmp dec or in xorl iret outsl cltd push movsb jmp cltd or and insb fidiv sub pop sbb iret iret test out sbb xchg aaa scas aad cld adc add stos mov sbb jne fucom in add leave cltd sti pop inc pop scas mov push push sub into ret rcll jbe add dec sar loope mov test jns fistp xor jp popf dec int hlt shrl xor lds mov xor xchg mov out mov mov pop std mov and in pop mov sub mov out xlat jl repz out jbe mov jae mov cmp pop (bad) cmp popa pop lret pop cld data16 aaa push jg jp pop and call inc repnz pop out cmpsl aam push popa lock pop dec push mov cwtl (bad) int3 push mov stos negl (bad) rclb adc lahf (bad) cmp mov push and add je sub jno (bad) sbb js imul mov adc je sub sarb jne push insl lcall sbb (bad) sub inc (bad) adc xchg xchg mov sbb push repnz pop cmp lods rclb sarl sub sahf fs enter and cmp inc or inc dec lods xor adc scas cmp int fildll dec lahf cmp xor popl in mov data16 aas scas jle add fcoms and cmc loop cmpsb cmp pop mov (bad) cmpsb in aad inc mov stos movsb push and lea stc cmp cmc pop test je rcll mov add into add jae ja add fsubr andl icebp inc das (bad) mov icebp fs sbb adc pusha mov add mov cmc jnp in sahf jmp inc push daa fs xor aam cwtl movsb sbb ss lods mov xor lods mov inc adc sbb hlt jno pop add pop into int fisubr imul and cmp movsl hlt in lods dec cmp aad lea sahf adcl stc push std adc push leave push or xor jl mov push insl es fbld mov push jnp lahf sbb lahf jo int pop ret ds jno push jb jmp mov js fwait mov dec pop jne loop fisubr (bad) popf cltd push jmp (bad) jno (bad) in cmpsb jbe mov outsb in je scas sbb push out inc or int3 dec hlt aam sbb clc repz into cs into lahf repz loope imul frstor insb add pop aam fs insb pop fld (bad) xor js call or pop adc jno jb out cmc aam xlat incb sub (bad) out sub adc je xchg mov imul jne stos push aam pop dec dec sub push dec in lahf cli dec sbb and xchg xlat data16 lahf (bad) sbb adc mov rorl pop cmpsb outsl mov inc lret cltd or (bad) insb loope inc mov sub pop sub cld jno cld or xor lods cmp or cmp loope sub nop in jle push call (bad) in mov jg insb pop bound lahf push or inc mov jns fldl std mov cli push and xchg mov outsl pop mov push mov (bad) pushf lock sub lea (bad) push scas hlt pop pop push pop vpunpckhwd inc pop ljmp sub push test dec fstps daa pusha cmp or test rep das hlt adc adc jne shrl pop mov cmp dec sub mov pop ret mov push xlat add or ror cltd out inc cwtl sbb mov cld push and insl pop push sti das pop cmc idivb arpl jp jnp das mov mov and jl cmp movb das in xor insb push xchg (bad) icebp jle push movsl andps inc mov test dec xor pop popf add dec mov fwait mov jge and cmp int sbb dec mov xor (bad) sarl sub mulb push lods ret jnp dec mov fs add loope rol pop pusha outsb ljmp popf (bad) insb jle push ja das mov cmpsl jb shrb addr16 adcl in inc dec subl xor scas leave sbb or subb cmp xchg out jnp out sbb in adc orl push fs out jp inc jno (bad) scas mov add cli sbb jle add and lret sbb xor sbbb ljmp lret mov cmp xchg test sbb sbb jbe mov lret pop hlt dec adc push imul leave addr16 pop mov mov inc xlat dec int test pop mov pop ret cmpsb aam xchg jg sbb dec rclb sahf fisttpll stos imul in pop jae push adc cmpsl push jecxz inc nop lock sub pop xor mov adc mov popf fwait repnz hlt xchg sub aas clc pop outsl dec adc js mov test or outsl jle ljmp mov lds adc mov nop (bad) test and mov les adc not push jo xor or flds mov int3 mov in fisttpl mov shrb stos sbb push sbb push nop leave push (bad) out dec pop out mov mov pop mov icebp mov add adc in adc mov pusha ljmp jno mov lcall shrb xchg mov std cmp jl adc cmp cmp inc sbb mov int outsb xor xchg rolb outsl cmp add pop lods jg in stc enter inc movsb bound xchg shrb pop in imul dec sbbl or mov lret ficoml stos pop ret int3 or and pop popa jnp repz sar mov and mov xlat jl arpl mov inc arpl adc out loope mov jno push adc inc test xchg sahf xchg addr16 dec jge cmp ljmp fucomi xchg mov push mov dec mov ja stos mov xor je xchg loop lret jp je xchg and stos mov push std inc push cmp out pop and pop adc cld dec jge pop pop lret lock or inc pop and sar add pop inc xchg sbb mov into leave push sub inc pop push (bad) push mov das or xchg loop adc ds loopne adc mov pop mov jb adc rorl mov jge dec mov shr cli pop rolb xor (bad) dec push cmp stos or test lds sar lret inc dec sub cld mov mov in and sub dec pop xchg lds cmp inc out sbb loope lahf lahf les cmpsl mov leave out xor cmp fnstcw std sbb fmull sbb sub mov nop inc stos outsl xchg dec scas push or pushfw pop mov data16 pop mov data16 data16 mov dec mov ja dec mov ja dec test sub lods jne ljmp jp sbb xchg jp sbb xchg jp sbb xchg sbb mov sbb mov sbb lea sbb cltd lods out push mov lcall inc adc mov (bad) cwtl dec hlt popa lock imul and dec inc push dec into xor mov xchg (bad) lret fstps or inc pop jns ficom movsl sti lods adc orb iret sbb in movsl inc xor cmp inc pop cmp lahf inc sbb outsb sub (bad) xorl add mov divb push jl cmp jl cld inc dec sar dec ds lods les movsl mov xlat xchg gs mov sahf sub jg cmp sbb and loope push mov cld jmp inc push add push andl pop push inc mov cmpsl dec mov adc repz (bad) lret dec push add push out push xchg sar outsl jo imul inc (bad) mov iret pop (bad) mov ds cmp in test pop and push (bad) mov jae std jmp sbb outsl jno arpl lods inc (bad) popf rorl or push inc mov xchg ficom sub mov in mul std mov shrb sbb sub dec dec les push jns jbe lock outsl rorb add loopne xor xor adc sbb popa pop ja cmp dec lds call call mov cmp arpl mov inc xor cwtl imul mov pusha leave push rorl ret jmp inc and dec arpl mov nop pop dec cmp jns mov icebp fcompl adc in scas lahf inc (bad) jns sti mov dec dec or inc mov in jmp add lods inc adc jg jl mov mov xchg aam xchg fidivr gs pop jge jns mov or jp adcl out jge int3 xor jg lret adc or jo int3 cmp inc rcrb push push mov push push popa movl push adc adc ljmp dec ja add pushf sbb inc icebp jl add jge outsb idivl popl scas or cmc push je data16 pushf push cmpsb mov pop mov cmc in cltd cli mov and sub idivb mov dec inc mov lds ja pop add psllq sbb mov cmpsb pop add dec add mov popf inc fcoms ret scas xchg mov ljmp sub scas (bad) repz pop in cmpsl jecxz adc inc push mov inc mov clc ret cltd stos ja mov dec mov popf std mov push xor dec lcall lods push dec push and xchg add add jae pop inc ss aam xchg inc mov cmp cltd push xchg or nop or mov es mov test ret notl cmpsl imul and stos icebp roll imul shll lock sbb pop movsb mov push dec adc sub sbb leave lahf dec int stos dec mov pushf sarb dec dec add shll mov mov lret sub mov xchg or push mov pop stos imul xchg mov lea mov or or cmp mov inc fiadd scas jb add out icebp jl (bad) mov (bad) mov mov jg (bad) mov pusha sbb cltd inc xchg pop subl sbb nop inc push pop jo mov mov popf or inc and cmpl ret push lcall mov jg hlt cwtl mov add loop sarl cli adc mov adc stos sub cld add js and test ret hlt negl ljmp xlat mov movsb push cwtl ljmp cld mov movsb fidiv mov inc mov notl jae push pushf xor mov xchg sti jbe lods les push in lds (bad) dec std loopne or xchg push jno xchg movsl pop dec mov les xor int pand jp fwait sub dec pop adc iret cs insl xchg sbb mov cltd mov mov sbb (bad) (bad) jno movsl mov add mov lock shlb xchg mov lret (bad) hlt dec adc dec xorl sub movsb nop inc and mov and adc pop aam or call sbb pop sbb movsb je mov mov pusha ret inc std jl adc push push mov adc (bad) aaa (bad) mov sbb cmp pop sbb push rcrl push pop aam cmp pop lcall mov sahf sub adc cmpsl mov mov pop out dec dec mov jl (bad) and mov test js jns call sbb mov movsb add (bad) fdivrl add rorb mov int3 mov and (bad) mov not push pop push or mov xchg xlat stos mov xchg sbb pop mov add xchg or pop push push xor lods fidivl arpl ret popa stos fldt gs or pop lcall lcall loope inc push cld mov mov jmp mov pop cmp aad inc dec pop imul xchg movsb dec lahf jmp inc cli mov mov (bad) fsubrp dec xchg jl test leave mov adc pusha mov es jo push inc pop pop jg jb (bad) and mov and fdivl dec outsb fbld popf inc inc bound jp sub mov insb inc enter shlb rcrl fistpl scas and cwtl in or call jns adc div cmp inc lret pusha pop inc in insb outsb pop dec push fsubrs shll outsl or fsub dec sub adc push lea insl es (bad) push xor add icebp cmpsl mov nop xor adc jno sbb sbb xchg and test sub test js mov lods in es mov xchg pop in dec mov jne fcmove lock imul (bad) mov push (bad) fstpl dec aas lahf or push fs xor in inc fiaddl cli xchg cli mov bound loop insb std scas icebp push ror and xchg xchg insb jge and lret imul test test (bad) icebp add mov pop xchg or test negl push xor das cmp pand xor les out xor mov int movsb rcrl (bad) mov cmp jnp movsb outsb loopne sahf int3 test add int3 fisubr js leave rcr cmc scas repnz push sub sub loop andb inc push leave (bad) sti rcrl ret ret stos mov mov lods je cmp push insb call dec push push inc lret dec pop mov movsl mov push xor push stos push dec mov pop lods or leave bound adc pop xchg outsl je das push dec push push xchg movsb or sub stos clc jl je into dec pop das lret mov ss cmpsb inc int sub mov call xchg nop mov mov lods or inc xor push fistl adc mov repz adc sub sub scas fsubrl ret sbbl xor sbb ljmp inc hlt into xchg addl insl mov jge outsl stc stos dec mov sub mov loopne leave pusha rclb aas pop inc inc xchg sub enter addr16 cmp push test cmp sbb xchg xor mov mov dec mov mov mov shr xlat aam sbb mov lahf out inc jl pop cmp sahf and pop scas jmp ret and test push mov jle inc cmp subb or les xor adc leave sbb rolb lds ret mov icebp repnz add outsl test out lcall push sub or test add sbb adc push or mov pusha push faddl inc sar jp push leave repnz cwtl sub inc push (bad) mov popl ds fwait xchg sub ret cmc clc sub cli les jge sub idiv je les xor dec out mov fildl cld divl (bad) pop push stos out sub in mov sbb jg stc fisubrl inc cmp jnp push jg mov inc mov hlt aas jbe repz outsl push rolb rcrl cwtl sub ljmp sbb insb scas inc lcall ja dec aas (bad) testb sahf stc test xchg out scas nop call sbb dec mov mov shll push es sysret (bad) mov scas iret js xchg push cmc pop pop dec mov xor push ss pop in ret imul sbb lods cld cld mov pop push xchg inc jge popa lds and lods das fwait or push out or jl push mov jo rep mov cmp insb insl mov cmp ljmp add inc fcoml popf sbb pop (bad) jecxz test xchg or movsb push sub jb adc sub mov iret lahf addr16 out fcoml push lahf sbb arpl mov insb mov dec test pop pop hlt mov push sub int test fs jnp rorl icebp or push or lcall cld dec mov xlat push dec (bad) popf sarl pop cmpsb ret cli (bad) sahf xchg sub (bad) clc leave scas dec xchg fs imul inc enter jmp loope lods sbb mov (bad) shrb cld (bad) repz (bad) pop out aam jp lahf mov insl push jmp pop or lods int3 movsb sbb push dec (bad) xchg jno jo jae leave stos mov sbb dec out jge cld (bad) inc ss cmpsl loope jp sub push sub cmp popa xchg popa jb cltd and push add cmp hlt cmp scas xor aaa subb jmp add bound pop mov dec fs pop cmp xchg sub pop jle pop xor xchg leave je adc jns pop sub dec dec xchg mov stc addr16 lcall scas les lret mov iret or cmp xchg cld mov test fcompl je dec mov or mov mov movlps call adc mov scas inc mov fsubrs fistpl push add add push imul lods pop out add mov (bad) imul fisubl push je push jge ja pop shrb (bad) arpl jno adc jnp fs psrad je out mov dec xchg mov loopne pop or dec dec faddl (bad) iret stc mov xchg bound popa mov and scas mov sub xchg cmp addr16 jbe cs out js iret stc mov lcall roll dec test enter outsl cmc jecxz or lods mov adc popa insb rorb mov sbb in sarl pop in jmp jne movsl xor mov fbstp mov adc add dec sbb jle inc adc cs pop out leave dec lods jl push sub loope or or jl nop mov int cmp (bad) jne xchg mov outsb mov ficom adc mov sub mov push shlb jmp data16 fbstp orb inc push dec outsl insl mov sbb (bad) in pop mov decb dec (bad) dec call jne,pt rcrl repz fiadd fbld jo mov cmc (bad) insb cmpsb dec out pop xor faddl test arpl call lahf mov in fild loop pop inc xchg xchg addr16 pop hlt or arpl jl,pn push mov jo mov jnp stos mov shrl dec sti sub bound cli pusha or test xchg faddp and pop push adc pop ret xor adc inc push inc add adc and sub push add push push icebp jne pop stc les cld adc cwtl loopne jge fiaddl das or jnp dec inc insl mov xor sti adc ret stos sbb dec sti cmp loopne sub mov add jl fdivs and orl (bad) test loopne iret jl fs adc jno aad scas loope inc aam aam add mov jnp jg lcall mov inc test iret jo xchg xor fdivr iret sub push cli call leave sbb push cmp (bad) and das mov cmpsb in pop shrl xchg dec out int3 lds divb fstps aam test clc fsts insl scas mov lds mov fs aam mov in enter movsl lahf leave in pop push lahf pop inc dec xchg in iret lahf (bad) mov or jl push sbb dec hlt xchg daa aam cmc (bad) pop jge mov inc ret dec mov std adc mov mov leave inc test jae cmpsb adcb xor sbb add dec test or int inc int3 (bad) hlt xchg pop mov and sub mulb jg xchg repnz insl pop or jp lret mov mov test sub mov addr16 sub push cmp mov jae clc add xchg out jae popf sbbb sub push mov sbbb dec jae inc cmpsb out xchg loope xchg pop mov mov ret scas in push jns mov pop sub rcrl mov mov jge pop cmpsl push (bad) addl jle lock adc dec lret mov call enter enter jns xor std ret adc mov sub and popa jnp dec mov mov clc shll sub sar mov enter punpcklwd (bad) or mov outsb int3 mov add cld pop insb ret xor in adc mov js lock push imul xor dec sbb dec stc sbb dec adc xor (bad) je rcll xchg ja ret ss sarl mov lret mov movsl cmp outsb mov xor pop jl inc bound aad fild jle,pt inc jl push jnp cld mov dec cwtl add outsl mov hlt (bad) xor mov lds movsb cmp lret fs mov insb hlt fist push inc inc rorl push sahf and push insb push aas roll clc add pusha std out fidivl add fdivs addr16 sbb (bad) lret push in daa (bad) lret cwtl and in scas adc jne test mov jne xchg movsb rcl (bad) mov xchg mov je fs mov push out mov jl adc adc xor out mov fs vpsrlq mov push and mov int push movsl andl mov insl add mov mov dec mov mov dec in lret dec mov add pop ljmp insl lods mov or imul movsl pop and jnp cmp mov xor sahf cs iret divl adc pop add and mov out adc (bad) mov add jnp into sti push pop xchg jbe rcr repz sbb jnp movsb test pop (bad) mov xchg sti jmp arpl insl jmp stos inc cmp push push mov and scas imul lret cltd in jb cld jge add les in ret add cltd sbb push mov jle inc rclb (bad) in loopne cmp push xchg jb sbb push insl xor pushl pop push jnp (bad) cmp mov jle add stc in pop mov adc add repz mov xchg cmp pop pop (bad) loopne inc test pop lea jb dec dec loope sbb pop movsl push dec xchg hlt pop mov ja lods sahf iret fsubrp xor cmpsb cwtl add cwtl call xchg (bad) xor call mov or cmp sub bsf loopne dec mov mov lea subb sbb adc movsl push popf loopne sub add dec sbb mov (bad) jmp xchg out mov decb pop push add jecxz dec (bad) rcl mov add dec mov cmp and mov mov movsl push push mov inc (bad) mov out inc mov (bad) aam pop mov or int3 dec repnz lds mov fidivl fwait lods aas lods imul stos jne xorl adc pusha sub pop mov leave dec rcrb xchg push mov pop in push std push in fnstcw sbb or mov jp lret jno gs lea mov fidivrl xchg and fsubs xchg mov adc ljmp mov mov cld clc pavgw push xchg flds pop inc in hlt jle jne jp out xchg rcl (bad) push xor mov idiv lea cwtl mov sbb mov subl dec fldenv xor sarb sbb mov cld pop mov push sub inc mov loope ret scas pushf cmp imul mov outsb sbb out inc icebp outsb jp mov clc sub into je,pt sbb not out mov fsts jo jb cmp xchg push mov dec (bad) imul adc pop rclb inc pop pop js dec mov stc shll in ljmp push pop lahf xchg adc js add dec inc mov add mov xor aad fiadd popf outsl lcall dec jns xchg and fdivrl xorl inc flds mov lods xchg add test jb aad in mov mov std adc ljmp dec jns mov jnp (bad) xor mov adc mov jecxz fdivrl mov mov movb jb xchg xchg mov mov push cmpsb fidiv and or push and dec (bad) (bad) scas movsl jo xor int3 arpl adc sbb jns movsl lahf adc popf sbb out sahf aam push add test adc ljmp jmp xchg lods (bad) loop bound rcl add arpl icebp cmp push test adc cwtl jmp lea aad cltd sarl lds push int3 sbb nop repnz push xchg add (bad) cs add int3 lcall test ljmp mov mov jo sbb cmpsb mov and push dec cli jb aam in subl in xchg cmp pop cmc in mov sbb cmpsl sub mov sub sub out out mov rol jo sti or and mov insb xchg pop sbb jl sarb mov arpl and int cmp sbb (bad) test mov xchg sbb pop out (bad) sbb jle cmpsl sub or mov mov jp fwait insl bound (bad) insl jg ret mov mov pop mov (bad) cld mov das lods cmp pop push mov xchg inc push jle rclb sbb dec stos lret jae jg sbb fstps addr16 mov cmp and jne in inc pop hlt pushf loope sbb cli pop (bad) repnz data16 repz mov xor xchg and mov push mov mov pop jae sahf repnz pop mov inc dec push movsb cld adc imul and jecxz lds inc rclb out push mov inc dec lret out mov add (bad) mov repnz sub dec ss xchg cmp loop cli mov (bad) mov fisubr inc inc rcrb and cmp mov fstps push mov ljmp jl mov mov xchg setno and mov sub add dec push and in lret js pusha mov xor mov mov jl pop inc cmp dec xchg xchg jo rcrl imul cmp lea jo call jno cmpsl test mov mov xchg mov xchg pop scas sbb jl xor mov jl mov dec call mov mov fldcw dec push cltd lods hlt pop fild push inc xchg test dec shl jge bound (bad) mov push shll push imul sarl sbb clc jmp ror int pop pop call inc xchg std sbb mov mov jp cmp scas fiaddl test (bad) xor in push adc mov add in insb dec xor je cmc clc dec arpl push sub in xchg lret fidivl lahf es cmpsl ret add pop pop mov arpl test rcll or incl rcll repnz xchg inc int3 test fwait inc inc es loope push xchg mov cmp outsb sbb adc pop test ret (bad) sbb dec test mov arpl cmp pop xor jl xor roll leave mov test adc mov int imul push or cmc push cld xor or outsb add jbe fisubrl sub mov mov push pop mov in sbb jl push movsb lods and in adc push lods into ja test in rcrl (bad) inc (bad) incl aam or lods jecxz jle adc popf mov popf in pop sub inc mov int fstpt pop push rorl rclb xor and adc adc jne add mov ret je dec and test fmull jnp pop testl imul enter or int3 cld jae into mov push (bad) dec push push cmp cmp rolb mov cmpsb jo out nop and xor xor out roll fnstsw idivb subl leave cwtl je imul sub lds test jge cli pop movsl loope clc xchg pop push dec stos fiaddl pop and mov and xchg mov sti xor in test scas iret test jb addr16 jmp mov and lock xlat daa orl mov jmp mov jl insl cs cmpb div (bad) divl dec add adc push mov in mov aad (bad) push mov sarl mov cltd cltd sbb scas incl dec or mov xor sbb push jmp into fstps out popl sbb mov lret pop jns mov cwtl pushl iret dec hlt adc push repz stc xchg mov adc sbb jnp mov pop mov xlat movsb mov popa inc add out xchg add add stc js cs rorl pushf push jmp imul dec cmpsb incb mov flds jle mov xadd movsb inc push cmp push jbe mov lahf jae icebp (bad) icebp out aas pop nop in outsb std xor sti fbld inc fs cmpsl in jnp and or jne mov scas repnz daa mov outsb decb outsl cmc sbb mov shrb jnp inc or mov test sahf jno popa fbstp or xor std test push dec lcall mov and and ja or pop inc mov in cli into jmp add push js add push in (bad) cmp adc adc mov das pushf scas push shr popa or sahf ffreep stc push arpl call int repnz mov jnp pop out xor int sbb ds mov fwait (bad) mov push dec pop fldl jb scas pop pop (bad) je test out or loop mov enter xor outsl adc mov je mov inc mov hlt inc mov ljmp fs xchg (bad) in xchg xor (bad) ret outsl cmpsl add push push pop mov sub inc mov in in mov push out fmull dec call out adc shrl sbb dec sbb mov int3 pop fldenv or jmp mov dec gs dec push mov mov mov mov test mov mov jno mov inc jg jle lcall xchg hlt mov xor pop mov inc mov addr16 ret scas xchg loop jp xlat sbb imul mov pop cmp xchg test addr16 cmp lea adc rcrl repnz (bad) mov ja,pn xchg (bad) out dec in je jnp hlt inc inc sub sbb fdivrl inc int scas and addl sub inc scas (bad) xor (bad) in mov call dec push jle outsl or mov clc push stos out inc xchg out mov in test in pop jl ficom and ss ficomp mov push cmp in int mov mov pop sbb popf push popa stos je mov mov or sub outsb (bad) (bad) in out test movsb xor rorb adc xchg cmp clts dec sub mov push lods cwtl push mov lds outsl jbe inc in add add fistl (bad) adc fnsave sti jmp or dec in (bad) push mov js or sbb test dec cmpsb inc pop jg fisttp inc mov (bad) fbld test insl or popf decl enter lret sbb das mov stc enter dec (bad) push pop les mov mov xor pop pop ret scas leave sarl fdivr das pop pushf fimul fsubrs test adc adc rorb add cmpsb jl inc leave hlt dec int cwtl push adc or xchg add or inc cli mov pop dec insb mov jne pusha xchg out (bad) xor jo outsb sbb sbb ja,pn jnp cltd jecxz pop les popf inc imul mov faddl lret mov mov mov aas shl dec jns xorb xchg pushf movsl add out and cmc icebp mov insl inc adc aas das mov fwait pop adc adc pop push rcrb lock int cli sti mov inc std mov int3 loope pop inc inc insb mov les mov movsb push xchg mov jmp sbb sub lahf jo fist pop mov push js aam nop stos xchg push lds rolb stc dec sbb and cmp data16 add nop xchg push mov aad mov aas adc add stos (bad) enter dec cmp sahf mov or test xor fsubs repnz dec cmp add cld pop mov std (bad) mov in jmp outsb jmp js shrl daa mov or dec mov xor push out cmp xchg pop repnz sbb push push dec es mov xchg inc jb bound add fidivl popf mov out mov mov mov shrb mov loop lods xchg pop jbe int3 dec stc aad das imul out aad mov jle or pusha add imull aam (bad) les mov xchg mov push lods pop push and cmp jge in dec out orb add pop xchg cmp pop (bad) mov push (bad) fimull push dec push inc and js repz sbb inc btc mov inc sti inc or add mov ret sub in popa mov push push inc sarb push sub ss push xor or mov mov or pop and decb mov int and fs mov add xor push push xchg mov inc adcb cmpsl ds movsl push push lcall or std pusha jb xchg mov mov std inc push mov push dec gs adc dec xchg inc and enter out test (bad) cmp cmc lcall inc stos fild sbb sbb or pop sub add sub push adc cmp fbld inc cmp mov js nop stos mov cmpsb mov lret push leave idivb inc xchg cld lock xchg out mov pusha sub or fs mov push arpl popa ljmp push pop (bad) xor lods call add xor (bad) imul in daa sub fisttpl adc pop notb add rcrb leave ja push nop cmp sbb insl cmpsb push push mov push jbe pushf push mov stos or pop xchg (bad) xchg (bad) mulb jae ja pop in mov es cmp xchg and out addr16 mov dec test scas mov mov lret ljmp mov adc insl lods je imul cwtl sti nop xchg call cmpsl daa into neg fsubl add and mov sbb stos and xor in in push cwtl adc sub push dec pop test lea adc push pushaw mov jbe int ja test cld gs insb out (bad) mov inc cmpsb xchg stc sbb in xchg roll dec or mov or mov add into mov int3 dec stos mov repnz faddp push cld cs pushw add sub xchg cwtl iret test imul inc pop imul popf pusha mov pop jle push repz mov test jmp (bad) shlb data16 xchg mov push cmp push imull mov pop mov cmc scas shrb mov lods inc add out or in push sahf jmp sbb pop aad loopne mov fisubr rorb cmpl dec sbb rdpmc imul jbe mov push pop mov insb shlb xor adc test and xchg and frstor loope sub mov push js fisttp inc scas fs jecxz inc nop popa push adc lods add mov out or pop xor scas inc icebp popa jp inc clc (bad) mul cmpsb subb iret adc into cld mov in lea jb (bad) sub xchg cltd sahf cld enter je,pn shlb pop jmp jnp pushf lock jge insl (bad) popf jbe in mov outsb cli adc mov fsts jge mov add mov pushf enter cmc push stos xchg sbb xorb nop subl incb adc icebp mov jnp mov sarl jo (bad) cmp pop arpl push punpcklbw sub jb jecxz jne mov dec jge icebp lahf add push (bad) (bad) xlat ljmp outsb lock (bad) std jns shrb push bound sub notb lahf lods aas inc inc call xor repnz pop mov mov enter loop sub xchg fistl pop jle jp push inc leave sub pop mov lock jne dec daa jno sub adc mov std xchg fs in pop ds mov movl insl inc sbb test push pop imul sarb mov jge inc popf adc xchg pop out mov bound add jno or jne (bad) mov inc push jno xchg push aad repnz mov test pop fldl push add adc jle stos xchg std movsl std or ds dec (bad) cld sub adc dec stos mov inc xlat lret mov cmp xchg sub stc (bad) fadds (bad) stos mov sbb cwtl insb insb xchg push adc add inc push and aad xchg dec cmpsb ds shl sbb mov clc in xchg std add aam add fwait mov fadd sub jno mov dec orl in fisubrl xchg ljmp jg jb repz mov in in inc inc dec cmc in cmp into push inc xchg jno out jo xchg mov into ret dec (bad) xchg jl ror pop pop insl lret (bad) aad mov dec cmc add sbbl pusha pop push (bad) jae les push dec mov aad aad in daa push push pop out icebp jb loope pop mov cmp ss mov lods jmp stos sub loope xchg movl loopne mov mull in and jbe int3 repnz adc (bad) and scas test mov xor mov xchg add lock test std mov lret pop dec scas mov and icebp cmpsb inc sbb add in push arpl xor test jp sub cmpsb insl loop ja xchg cmpsb sahf inc and mov sbb mov add std and (bad) mov push icebp shrb mov fwait (bad) adc mov xor push iret ds push jae jge cltd push mov pop out xor (bad) std cmpsb rcrb mov dec loope rol push mov leave hlt int3 gs sbb fwait scas test fsub call push cmp stos mov adc cli xchg loop test push mov mov lcall mov insl dec and sahf cs mov mov pusha dec (bad) fiaddl sbb fstl sahf cmp mov ret mov or sti jbe mov or sbb iret (bad) enter mov aad sub sbb lods sbb icebp cmp insl out sub imull mov or mov push and xchg adcb jg mov jp mov sbb sub fwait or push sub andb inc or or movsl enter lcall imul int mov inc fmulp dec mov out aad in stos adc xor xlat add dec rcl mov in sbb (bad) cmp push mov sbb psllq arpl in pop and (bad) xchg mov sub xchg xchg sahf push outsb mov cmpsb sbb scas and cli lahf outsl add (bad) jecxz mov sbb add fwait stc out push dec cmp mov inc push loope jo fildl jne push (bad) jo aad (bad) js xor push (bad) xor push icebp dec xchg stos ljmp mov test popa cli dec stos push decb pusha add sbb dec enter jecxz js or mov inc insb lret aaa dec icebp sbb inc ret cmpl test sbb mov inc lcall cwtl movsl adc loop std (bad) xor arpl aam ss lret push (bad) cmp dec pop push out fiadd scas pop xlat (bad) jae lretw (bad) pop enter test xchg int imul test cltd call imul sub cmpsl inc add scas adc stos jb pop iret fsubrs (bad) push outsb js repnz fcoms gs data16 out pushf (bad) or xchg adc pop notb push adc adc push fisubl popf flds push push (bad) xor repz imul mov cmp ret (bad) pushl fstpt lock inc jl jmp xor into sub leave je fnop inc hlt rol cmp xchg inc jnp pop sub xchg je adc ljmp mov sbb adc lods xchg or dec push fstps mov pop inc jle add jg je cli mov (bad) fnsave scas loopne rcll sbb inc out lret dec addr16 call call xchg cmp jne pop xchg out cwtl fadd leave dec (bad) cli sub xor call add ljmp cltd mov dec int mov push test pop cltd sbb cmp push pop movsl xchg test adc in cmc faddl jb mov ret cmc (bad) out loop jno jnp (bad) lock add int3 push and stos out inc inc rolb push jns out les inc rclb scas pop mov inc adc out dec pushf (bad) ficompl flds jae test int3 fsubrl adc stos jp sub mov xor and in std adc push clc outsb add pop in loope rcrb in loopne int in popa cmp push ja outsb or je repz gs pop adc inc idivl mov add fcmovne jo fmull popa pop push jae aam iret es nop loopne popf xchg outsl dec mov movsb mov mov fs gs ja xchg ficoml stos push (bad) imul inc add push dec faddl mov lods adc or test push push cmp dec xlat xor mov stos stc jb jae fstps push push stos sarb dec in xchg cli push imull cmp xchg mov push dec out inc cmp jo stos ret (bad) (bad) out mov push jo clc aam in cmp push aad mov test data16 adc loopne cltd call pushf push mov pop ror cmpsl lea mov xchg mov inc cld add icebp hlt jbe outsb xchg rcrb insl aas inc lds jae shr fwait mov mov mov dec das xor test rcrb push fsubl call mov mov cwtl stos sti or xchg xor subl bound sub sbb dec cmpsb (bad) icebp pop adc std (bad) and mov ljmp ret fisubl push mov push cmpsb mov pop add leave push push jbe loop pop mov jp sub sub mov hlt adcb dec (bad) scas inc lret mov mov xor add push ljmp mov and mov add push or and mov lock pop lock cltd mov adc pop adc andl push xchg into lds adc pop scas adc xor mov and les mov scas and ret jb and fdivrl out inc faddl cmp dec mulb push clc xchg inc push (bad) mov xchg cmp imul mov arpl mov pushf mov inc dec ljmp sti ss sbb adc fwait test pop push pop mov jb xchg fs lock cmpsl out mov popa mov lds inc adc adc (bad) mov xorl sub mov cmpsl jbe stos xchg icebp dec dec sbb call or sti (bad) dec and fmul and adc mov mov enter or outsb outsl iret cmpsb cmpsb stos ds lods jecxz add hlt inc or test outsb xchg mov mov xchg leave jg mov pusha movsb shll adc aam jg leave pop subl xlat add push out loope ljmp jmp add xor (bad) dec aad push (bad) jl and outsb mov xor dec stos dec fnsave aad cli cli insl outsl test fistpl call in adc sub pop pusha in aad rolb mov xchg adc add pop jno mov cltd xchg mov data16 inc out test push sbb cmpl cmp xchg int or ret inc fwait into push daa cmpsb sbb test movb push sti dec gs cmc and dec daa push pop fldcw mov mov mov xlat jp jg mov add xor outsb sbb or scas cmpsl aam je mov jno or sbb jno lahf or pop pop inc fs mov xchg cwtl lds popf cmp ss mov fwait call jge (bad) popf or fild mov movsl push xchg xchg mov loope jne jnp imul sub jmp push sub jo cmp movsb int pop std mov dec cltd and and or cltd push adc mov or xor mov push aad mov test out adcb pop (bad) xchg cmp stos inc sbb das pop jns mov mov lret pop sbb ljmp push or push and adc loop jo lds dec jbe icebp (bad) pop notb lods jg xor imul add ds lahf mov pop loope stos shll inc cmpsl ficom inc mov xor mov das test addr16 adc popf jecxz mov sar add rep inc push in lret jge xchg push js test fcoms lods push xchg mov fnop inc push gs adcb inc adc fistpl fiaddl insb inc sub xchg jmp popa jae dec push inc lea insl or inc rcrb sub mov lds out das mov inc stc cmp mov (bad) cmp and js pop mov addl (bad) scas insb add push (bad) and ss xchg cmpsb (bad) mov movsb fistpl inc mov push repz inc (bad) sbb in mov ljmp nop add mov neg adc jnp pop fcmovbe or jne mov xchg cwtl test popf cld add lds dec xchg (bad) (bad) pushf mov or sbb sub pop push cmp adc cmp xchg sbb scas inc (bad) jle aas pushf cmpsl ss jmp push pusha bound pop rcll inc adc xchg dec repz enter push mov aad sub ja xor rorb outsb int3 add cmp jnp fmull pop lret push mov adc cmpsl xchg mov mov pop push (bad) xchg add add add cmp inc (bad) fild or pushf insb xchg xor out fwait divl xchg (bad) fmuls xchg push jno sahf les mov or (bad) out stos sub (bad) and dec movsl dec int3 xor neg push cmpsb aaa lahf fwait lods out jae loope cmpsl icebp ds mov cmpl addr16 jbe xor jb push mov (bad) sbb mov pusha jl mov test test push and jmp cwtl int adc jbe xor rorb int3 lock ret mov pop out push pop pop mov cs mov dec push int3 pop into and aaa inc in push adc iret int3 imull xrelease shl xchg out sbb dec ljmp and jne push mov ljmp inc pop imul ljmp lock loop sahf std (bad) sub add mov (bad) ret mov fnstenv lcall lock and and mul pop pop fstp fistpll cmp sbb enter sarl pop arpl mov or les cld loope push cld add mov jb push (bad) addr16 imul mov dec sub xchg cmp (bad) mov inc add jo inc movsb jo arpl jo mov sbb lea dec adc push add leave cmp jp aam ss jge push mov dec in (bad) adc xor jecxz rclb loope jb (bad) mov jmp int3 xor add stc dec pop insb xchg aad jno mov lds mov mov ljmp mul lret nop outsl cmpb dec test xor and sbb cmp push push jb mov arpl jl stc push aaa xor faddl pop mov or cmpsl lods or movsb dec mov jo push test testb out add rorl inc mov lds mov adc daa dec cmp movsl clc imul inc jge mov cmpsb out xor popa and pusha xor cmp inc iret aam mov icebp pop std push mov loopne push ret inc pop scas lret jl xor mov das ja jl cmp loopne loopne out sahf adc or push or inc inc add xor adc loope insb cli test mov mov xor lods (bad) fldcw xor test rcrl jp pop mov mov in insb lret dec mov pop sti pop or sbb dec sti fidivrl pushf enter sbb mov dec push xchg test pusha dec out outsb push (bad) clc add rol cs icebp in test push or in (bad) cltd jne movb mov lock pop xchg (bad) jbe lods clc mov cwtl lods push mov ljmp (bad) jo dec outsl mov adcl sarl pop rclb push loope add arpl ja inc adc xor dec loop sahf push inc (bad) and out jns mov arpl push xor mov fcoms lret mov sahf data16 add shrb sbb jl pop mov jno (bad) or or jb xor out test mov clc out adc push insl (bad) iret xchg cmpsb js jbe adc sub hlt cmpsl sti lods sbb add fcompl pushf (bad) hlt jo loop add cli xor lcall dec add outsl add cld hlt orb jb lret stc fmuls mov jl inc jae cmp pushf scas mov test rorb adc xchg xlat pop pusha fisubr push in add inc add jge rclb cwtl adc (bad) out jbe add xor mov inc jbe jp mov loop mov push scas mov jge pop insb or movsb stos inc ds in hlt mov cmp fldenv mov shll cld sbb jno (bad) push iret and jb addr16 (bad) push dec sub sub andl sbb mull push push pop (bad) rol push pop aaa mov mov dec cmc jno jo in int lcall repnz out add mov sub mov decb adc jne cmp ror push xchg repz jl (bad) (bad) aaa mov cmpsb cmp in pop repz ret ret pop into cmp dec push inc stos sub cltd xchg test cwtl fdivl loope outsl push mov out jl test mov mov push rcr lock in dec sbb cs push ljmp mov dec adc mov (bad) aad push adc jle (bad) jno mov popa adc pop pop dec xchg add jns mov nop jne or shlb test jne cmp inc fsts ret shr leave xchg test push cmp xlat mov outsb aam stos pop mov popf lcall and fwait adc (bad) dec xor jo inc xchg jge cmp inc (bad) loop lods dec pusha stos sahf inc lret out (bad) movsl mov cmpsl pop xor mov or sti call pop movsl in push push dec push xor test or fcmovnb movsl mov daa push incl (bad) cmpsb xchg and call scas les lds xchg loop ljmp sbb cmpsb int daa sub jle mov dec mov pop inc (bad) jmp inc xchg or mov stos or negb stos lret jnp sbb push xor je push or (bad) into jle inc jle test test jmp mov ja xchg or sub sub fsubrs adc test add pushf push inc pop xlat pop (bad) dec scas mov xchg and xor add movsb mov sbb jne xchg mov ljmp lret mov icebp test sbb mov sbb mov mov cmp mov push dec xor movsl das aad (bad) mov dec pop dec adc mov outsb push jb (bad) xchg adc inc sbb push mov xchg repnz ss sbb mov pushf and movsl lahf inc movsb inc xchg xor int3 (bad) incb mov shrl pop into ret mov ret aam int lds insl jmp scas fs je or mov xlat fsubl test mov shl inc and push bnd push fistpl incl xor adc sub adc lea sbb pop pop sub pop int sub mov pushl xor fnstsw push xchg sub cld cmc pop pop jbe mov push test xchg pop dec mov cli mov mov pushf push (bad) std cmp stos push shrb and dec popa test jb es js xchg in int3 nop out xchg out adc test vminss mov test cli jl mov and mov lock pop lahf test dec (bad) mov lods cmp std stos and stc dec out mov add stos dec fiadd pushf cmp js outsl adc dec add (bad) out data16 nop hlt movsb or cltd push push mov hlt lock lds je addr16 xchg gs mov fmul adc iret add or jne test mov xchg insb add pop pusha pop pop stc cmp inc push pushl aaa xchg add inc repnz lods dec loop je jge popf (bad) xor stos insb mov fsts or add cmpsb imul jle push mov sarl xchg leave sbb pusha xor std fwait dec mov inc aas and dec insb pop mov xor and test push (bad) jno mov mov cltd loopne mov xor xor aaa mov imul mov cmc repz rcll mov mov inc stc popa cwtl sub fldt les leave insl lods fs mov adc pushf mov add int3 or andl push inc lods pop (bad) and lock pop insb fnsave push push pop sbb outsb or insb cmp xchg sub cmp in fnstsw test daa xlat call sarl ret lcall loope enter push jbe dec pop icebp scas js (bad) jl std scas int3 ja mov lcall cli lock inc les sbb nop pop data16 add cltd pop or js hlt nop adc push mov fstpt (bad) mov push lds (bad) cltd add arpl and jnp jl,pt add (bad) adc xchg mov mov cmp mov je pop and xchg cli loope push cltd jl push xchg dec mov mov test mov push stos in jo mov xchg mov xchg mov test mov mov sahf mov int or or outsl push or add out (bad) xchg jp jne mov cltd pop fdivl and push cmpl pop cmc mov inc xchg pop bound jb jg sbb aas aad aam movsb fsubs les call pusha dec inc adc mov pop addb int loop enter inc push mov ret inc jmp stos pop push js ficomp sbb xchg push pushf jo push jnp je mov repz imul jbe mov cltd loop pop mov sar jmp outsl mov push dec mov sub jl mov adc add sti ret jb iret testb cmpsb sub inc and cltd fidivrl add jnp pusha int3 jo nop pop fdivr xchg xorl popf outsl mov lock loope inc push test mov mov in fs in push enter loopne push xchg ss lds or push or (bad) mov aaa in and daa mov xchg lahf cwtl dec cli sbb fwait push popw jo pop mov (bad) iret dec jb mov or jl cmp lahf sub sbbb push (bad) fldl add les nop jmp xchg mov test (bad) je push sti jle jno cli add dec pushf add aaa lret scas stos call and scas addl push sbb shrl jp lds jns or xchg pushf stos mov adc mov movsb xchg repnz or mov add in push sbb pop je adc or sti leave dec lock pop push pop xor push mov fldcw and sbb add push cmp push sbb mov cmpsl dec out pop (bad) andb ljmp shll dec (bad) std je push cmp mov push out jo xor mov out imul popa jge lods lret push inc fdivr pop rcl jmp int3 xlat jge lret add das add mov insl lods out lds popf jge sti in jg cmp fistpll sete pop scas imul scas fwait jle pop ret lahf out inc cmp outsl dec fcmovne (bad) frstor jo hlt pop mov jb inc inc xor shrb push std enter xor int3 xchg mov push das dec mov rclb (bad) out fmull mov insb dec cmp and mov in int jg add (bad) dec test imul jl sbb xchg negb inc add cmc fwait rcll and cmpsb jb push nop cli (bad) jmp pop and popa insl pop jecxz mov or xorl mov rorl movsl test je (bad) jb es cmp js mov lods ds hlt ret cmp mov mov (bad) push test ljmp lods push mov inc mov shlb pop cmp mov loopne outsb xchg mov rclb test ds (bad) cmp add sub sub mov xor les movsl pop or or fmulp out jecxz aad sub mov js dec (bad) jge (bad) hlt sahf iret xor (bad) movsl xchg inc imulb cmp mov scas pop add mov and adc mov aam push xchg stos inc bound adc push sub incb and (bad) mov inc mov mov xchg cmp jle inc insl adcl jp shlb inc aam rol xorl xor add test icebp xchg (bad) jno shr addr16 std lds dec jnp in push cli sub dec pop test mov fdivs add inc lods pop jae pushf inc jnp jmp mov mov mov repz mov push dec pop add pop mov fistl or enter lods jmp das daa cwtl stos add repz aas cmpb (bad) scas leave dec and mov movb leave daa rcrl insl and add push dec test inc mov cmp inc jne les pop dec mov sub int3 (bad) mov rorl fmuls in jno adc ds cs jns pop adc fist lock lcall in xor mov js fmuls imul ret and and inc jmp fiadd push mov dec daa or loope dec fnstsw pop push or inc push int jmp loope outsb pop pusha in add sbbl mov mov push sbb mov js xlat test out inc (bad) jge jb ds push (bad) hlt stos fwait or cltd in mov jne lahf xchg rorb repnz (bad) sbb fwait stos sbb mov in les jbe mov test mov push incl sbb les jle mov cmp or icebp or inc or mov xor shll mov subb fisttpl and outsb lret popa fwait mov sub hlt xor add xchg jle scas pop test scas sti push out mov add and push stc mov sti into add xlat enter loop sub out test add pop mov jg stos in inc icebp mov pop sbb call (bad) push jl cmp bound rcll sahf pop sbb cmpsl and xchg mov leave mov in int adc aam dec stc xor cmp xchg (bad) cs cmc ja dec rorl xor sub icebp or add add pop pop hlt push xchg test insb xchg push and jle xor xchg dec sbb push pusha cld inc pop nop incb add in push pop mov cld pop xor ljmp outsl push mov mov mov inc mov dec xchg stos repz sti cmp add loop pop jb add movsl jge (bad) xor pop lds movsb (bad) jbe (bad) xor into cmp addl jl iret jg mov cmpl and mov cltd jb push lahf mov rsqrtps pop xor jb xchg dec in dec adc lret into mov and mov push xchg lea or xchg pop ret stos sar in imul inc sbb jge and xchg les movzwl loop (bad) fptan mov divl pop push inc imul add lret sub sub jp push dec adc cltd xchg (bad) dec push mov dec orl jbe dec test aaa fs lods jae xchg mov inc sbb mov dec pop jne scas jmp gs cmpsl frstor cmp test in mov (bad) repz into faddl in inc xchg adc cli leave adcb cmp das enter jb jg xlat cmp popf movsb outsl stos leave add and (bad) inc lahf not sti jo jmp fucomi cld out push cmp outsb push test or mov jb xor popa test jge insb pushf inc sbb fwait inc fldt repnz or mov pop dec xor xchg inc cmp inc fs sbb lods int3 inc int3 mov inc dec pop or sub gs mov mov ret cmp and (bad) loopne popa mov mov (bad) xor cmpb or insl popf sbb outsb fxch and cmp fmul or mov hlt inc lods test sbb pop push inc mov negb pop adc jns cmp jmp mov dec loop sti rcll je hlt negb scas jne ret (bad) repz jo pusha lret loopne mov xchg ds sarb xchg jg nop test or sbb movsl popf push fs ficomp dec jl push jns fstps and test pop ds outsl xchg out and push hlt mov addr16 js int3 mov rcrl pop nop lcall cltd in int3 fcmovnu mov (bad) fs loope insl inc jne aas cwtl adc jbe shlb cli push add sub or (bad) daa mov inc push mov pushf xchg stos ljmp inc ds (bad) or dec (bad) cmc mov jg dec cmpsl cli mov sahf fimul pop mov xlat lret xchg and inc sbb dec daa lret dec xchg in inc or dec mov pushf pop mov and jo cmc popa push in lods or bound enter or mov aad pop hlt rorl dec js inc pop out mov daa rorb sahf cmc lock test leave test inc lahf adc mov test mov int3 mov pop scas (bad) mov addr16 stos sbb lods mov inc adcl jmp cmpsl jle mov gs icebp mov out (bad) dec inc test mov jae cmp jno icebp lds mov sti gs fildl std scas dec int fdivrs fisubr adc push mov mov mov inc dec int add mov inc mov fsubl mov xor xor jne mov sub call push cltd dec nop or js xchg jmp cs push sub xchg inc stc aas sti cmpsl add jmp fistpll xor pop mov jb inc dec push popf mov lahf mov stos fsub cs aad jb mov fs and add icebp mov bound clc fcompl push enter imul std cmp dec shlb adc icebp stos add adc bound bound fwait dec stos cmpsl ja push mov push daa push mov jae ret dec or cmp mov add sbb mov mov clc (bad) divb add mov add iret loop aam insl add jp mov inc jno movd push bswap test fdivl movsl mov cwtl push xrelease scas clc xor mov mov jl pop fmull mov loope mov dec addl cmpsb add and lock cmp jnp xchg jne outsl test pop jp xor repnz dec or jno jne mov test cld mov neg inc fwait incl aad lods test fisttpl jne repnz or inc jl jl mov jge iret jle jae jmp test mov mov jb (bad) test stc scas (bad) lock movsl adcl inc push and ljmp cmpsl lret push push xor cmp mov sbb (bad) and imul jl cmp mov add (bad) fs (bad) fisttpll xchg clc aaa sbb push rorb mov (bad) in lret fs lods cmc into leave cmp xchg sub cltd daa and mov sahf jg or mov das loopne dec daa cmc fldl add xor in mov push pop dec sti out and fistl not enter movaps mov std popf dec sbbl pop iret cs adc mov push popa xor sbb ja dec js push xor mov xlat pusha rcr sbb pop lret sbb xchg mov push dec hlt xchg cli jg ret shll movsl das push or adc (bad) fimul pop scas dec (bad) (bad) hlt push mov (bad) pop orb loopne iret push cmp mov prefetchw or dec push aaa sbb mov ss lret stos mov nop fst lods insb sahf lods lods imul lods and sub sbb js sbb sub sbb xchg and cmp lcall fcompl mov xchg sub jae mov xor push cld adc aaa lods mov push add (bad) sub and xchg mov hlt es and pop sbb shl repnz push rorb scas insb aas mov jne inc jnp inc loope cmpsb xlat adc (bad) movsb pop dec frstor cltd scas stc aaa push mov mov aam inc rorl inc stc addr16 dec add add lcall jb pop mov dec imul cwtl lahf lret jb push mov ret (bad) int3 mov jp adc nop jmp call mulb and pushl icebp out mov (bad) out loope xor je xorl lods jl lds aaa in test in lds cmpsb dec enter mov (bad) shrl cmpps int mov jne popa insl jno dec loopne lret push dec test test jbe push sub mov jge mov js or lahf outsl sbb (bad) dec sbb cld mov test je mov mov repnz mov shlb pop jae cli int cmpsb js fldenv addr16 inc adc pop cwtl in push push adc movsl ljmp dec or and insl push arpl pusha dec (bad) in jecxz xchg xchg les adc inc lret dec sbb clc add enter insl loopne cli dec push or test or movsl (bad) add fcmovne pop outsb mov hlt icebp lret (bad) inc test adc xor xchg jecxz cmc xor jecxz xchg lret call push fstpt mov out int jge in popa loopne mov mov out inc in lods cmp lcall push ds jo cmpsb rolb pusha inc in mov outsb inc jno lret jge mov imul or mov sbb mov inc gs (bad) iret mov lret inc inc imull mov mov push adc inc arpl mov fistp lock sub push sti push mov pusha test xchg pop sbb add hlt pop movsl jl mov fistl insb cmp push sub (bad) xchg sbb scas sbb ret dec cltd push arpl cld outsl imul faddl sbb sbb dec int3 push movsl add std xchg fs push inc repnz pop ss jmp (bad) insb and loopne push cmp cld les int3 sbb mov dec jo inc and cltd data16 cmp jg mov push jo in mov lret adc pop mov cmp lods into xor iret lcall test mov add adc in mov leave fidiv jb dec push push dec lods lea movsb into lock mov push mov repz mov pushf (bad) movsl mov push ljmp sub pop gs pop out cmp sbb mov mov jl iret and movb lock aad dec mov outsl or (bad) ja enter lret and je fdivr jnp outsl cmp les add outsb clc lock sti add rorl adc adc sbb pop (bad) xor insl push mov mov inc in adc (bad) xor popf pop mov mov jecxz cmpsb mov aad repnz test gs cmovo icebp punpcklbw sbb popa sub (bad) pop mov dec mov cli jnp fs je scas xchg ljmp jnp mov sbb rol loope dec or add adc outsl test xchg loope pop cs (bad) (bad) ja clc dec scas cmp xchg les pop (bad) hlt outsb daa xchg jl ja out inc or mov dec cmp pop mov movsb cmp or (bad) jb iret push sbb leave rcrl mov lods and (bad) pop out cmp cli in ss nop int mov xor movsl xor inc lea add and sub mov icebp jmp push lods js sub inc out pop scas leave mov adc jl or imul rorl inc or andb pusha cmp jg imul aaa jl cmp arpl dec je out mov sbb push fisttpll outsb jo adc inc pop insl sbb dec mov in dec jg icebp or insl pop pusha imull push mov push mov dec (bad) nop sub gs dec pop scas and rolb mov (bad) mov mov or xor fidivr mov and orl dec test xor mov hlt mov jle into add mov add mov mov mov mov mov hlt lcall inc bnd mov push aas xchg inc pushf test cmpsb and mov (bad) fdivs inc push jae shrb int3 fisubr xchg int3 scas dec sub xchg mov sbbl int3 je clc lahf mov pop or or adc (bad) insl jo (bad) popf mov cli stos outsl inc jecxz and test lods roll loopne push lods push (bad) xchg into cli ds (bad) lcall mov cmp jae sub mov mov mov jl cmp bound add shlb jbe dec mov mov outsl push (bad) les aas loop int3 arpl dec dec test call push jg push mov repnz push int3 sahf sub add in add lret ret cmp jne add push push jl jbe sbb cwtl mov loop dec test jns stc idivl inc pusha (bad) enter mov shrl cwtl sbb lds or jecxz sub js cmc mov movsl or xor dec push lcall sub mov cmp jecxz push add dec jnp xlat xor out cmc dec mov mov call dec pop push xlat cmp sub mov pushf (bad) xchg push mov push sti push push outsb xor or jl fsubrs jno pop or ret outsl rorw movsb loopne lahf xor test je push or xlat pop test mov les xchg aam mulb movl outsl add inc pop (bad) pusha dec addr16 fdivs inc inc icebp mov jne pop xlat mov jmp aam sbb push (bad) mov pop inc or insb cmp mov jnp push ds sti pop mov in mov scas sahf arpl dec outsl movsl xchg push push sbb arpl add into lea cmp mov cltd lretw test or rolb mov and in mov adc sahf (bad) stos outsb inc push jo (bad) insl sbb cmc inc mov mov adc in pop xor in xchg cmpsl lods int3 popf test add xchg jg push loope in pop idivb leave pop cld call mov push dec dec xorl inc push ret mov mov or fmul mov cmp add or icebp mov pop mov pop shrb mov cmp lret mov adc scas int3 adc sub test pop movsb fwait ds hlt cltd rcrb xchg cmpl pop and mov add std jne xchg fsubs push bound and rcll add imul leave lods lods xor mov adc or sbbl leave sbb jbe lds push jle pop or mov pop rcrl lock int3 adc jae jno out icebp sub mov dec int3 push pop pop add mov sub les hlt je lock mov repnz shll fwait mov xor rcrb or xchg out stos dec int cld addr16 dec pop loope dec sbb test add inc push clc xchg (bad) fnclex push fwait incb adc inc mov lods pop cltd cli out add aad or push addr16 popa mov cld and sub mov inc cwtl js mov cmp js into movsb scas test push les mov lods jl mov xor jecxz mov out push call jle daa fcoml into test ret rcrb push movsl stc call pop mov mov stc fisttpl jmp push std cmpsb mov les lret dec mov pop andl addr16 pusha inc dec or fs mov pop mov aad in dec scas push in (bad) jb mov jecxz mov rolb lock jno push xchg push pop ds test (bad) xchg inc loope ret cmp in icebp mov inc lret pop jno enter mov jle (bad) sbb or mov jnp movsl mov push xchg lods icebp jmp fwait jl stos aaa repnz and push inc mov dec xlat mov in mov add imul sti arpl jne jae sbb loope test in sub repnz dec pop xor mov addl dec sub cltd aad daa and or dec rcrl les cmpsb adc push xchg sbb cmp movsl or mov dec sub je xchg push mov lret add xlat sub scas lcall pop loope mov push (bad) out data16 fs add scas push aaa and jmp mov cmc popa (bad) fs js aad enter mov xchg add cmp cltd neg sti out sti (bad) outsb loope scas rcrb cmp mov sbb add (bad) cmp notb lret and popa jns stos addb sub leave lock cltd pop push in inc sub test fidivrl add pop cmp fldt inc inc rcr adcb sbb mov sbb sarb xchg shr loope out mov push push jl and pop (bad) outsl test fwait sahf pop fisubrl dec imul std inc (bad) aad loope cmp push sub pop or sbb pcmpgtb fnstsw cli (bad) ja mov and push imul stos push or add sti push gs addr16 push addl add and mov into jbe jl add rcll inc mov aad f2xm1 fmull in fsubrs mov pop mov int3 cbtw inc sub jp punpckhbw adc stc pop call push pop (bad) cs push mov add sub sahf ret mov dec dec faddl adc lret dec cwtl jno icebp fs addr16 inc xchg jl adc sbb jg es push mov stos fs cli scas aas xchg push loop,pn iret adc mov pminsw je outsb inc pop stos mov aas scas mov fiadd scas cltd bnd jnp aaa repz pop aas subl (bad) jb je push repz insb rolb xchg jns lret sbb rclb lock lahf js add xor xchg movsl mov int jns fdivrs or pop lahf cmpsl cmp lds adc inc (bad) rcrl push xor pop iret xchg jmp or ja dec movsb add movsb gs inc mov enter inc sub adc and cli stos nop arpl jp jg push jbe enter push push sbb lds mov inc das and inc inc je cld out (bad) mov mov orb inc in sti xchg stos adc jl mov repnz lds mov mov fwait ret xchg incb mov and repnz inc push imul sub popf aam sahf call cmpsl adc scas xor int loope dec lahf adc dec mov xchg lret sbb inc popf rcr mov lcall mov out aam dec jle (bad) into loopne rcrb mov into mov rcl xchg dec jnp jp shr adc aaa out mov push ljmp dec leave fidivrl cld fsubr loope in xor lret rorl jl add mov mov and mov cmc adc adc aam push push in ret mov cltd inc (bad) xor icebp dec scas mov movsb lods fisubrl cmpsl push je cmp or sub test mov shll imul adc in test int3 mov popl lea adc push lods jnp push and das ljmp or mov dec pusha divb mov rolb or insl mov loopne cmpsl adc mov adc or out fdivrl dec pop xor or and sub xorl insl cmp (bad) jmp insl call or mov lret mov test pop xor movsl ljmp sub pop in dec mov je test arpl mov cwtl mov fcoml dec pop mov inc inc out mov fincstp or loope jp (bad) xor arpl mov pop dec adc xchg mov add jae sbb and clc jmp mov es iret dec jbe rcrb int imul push mov test push add insb lahf adc jl arpl lea pop in test cmpsb jno cld add adc dec rclb lds and lahf (bad) adc jne mov and mov jo and lds bnd pop imul pushf insl push dec and mov jb (bad) push dec xchg movsl sti sub nop add sub or rclb es test int3 push insb leave loop arpl arpl cmp popa push nop test (bad) xor scas dec ja jge (bad) inc cmp (bad) mov rorl sbb pop fisubrl (bad) ljmp (bad) pusha in ja pop ss cmp cmp (bad) mov dec adc cld xor imul fsubl jno int3 xchg sbb jge int3 adc movsb js push popa push mov cmc jle pop inc cmpsl sar int cmpsl hlt inc lods cmpsl lret add xor cmp dec std xchg out mov dec inc insb ss add sbb mov ja xchg jbe mov push adc stc push rcll mov mov cmp inc int3 icebp leave inc sub pop dec gs lcall adc jecxz sahf jb mov cmp lcall mov push push xor sub mov cmp inc push mov test jle xchg scas popf out and (bad) dec lods jg sub adc jae or outsb or jle leave gs dec inc lret test div (bad) and push fisubrl jl das insb inc int aaa enter xchg lret insb inc test lods sbb mov jne insb mov arpl xor push psubb mov jns inc add lock iret ss lea imul mov leave pusha scas jg mov sti in bnd dec cmp les movsl inc dec inc fwait jl (bad) xchg cltd adc add inc inc and sub xor sbb cmp int3 pop dec and push (bad) jne push in sub cld addps clc cltd mov jg (bad) lret (bad) xor aas fnstenv test fiaddl pop lock in push sahf xor fsubs addb sbbl cmpsl sub add aam cltd mov rorb in rclb out add push xchg add shll sbb push mov iret xchg pop cmc jl rclb ja in adc jae adc in cmpsb shrl jno dec fs bound pop or adc dec push lods push mov scas lea fimul (bad) lea into scas cli imul xor pushf sbb out adc jmp ds fnop cmp rcrb out add fisub das shr aas into loopne fwait (bad) in movsl clc (bad) mov mov cmp addr16 insl mov (bad) leave cmc push mov or xor xor aaa aas sbb in movl fsubl decl sti mov std stos repz cmp xchg call cmpsl sbb add ja dec imul into std or inc hlt dec mov jno (bad) insb push ja jp inc ret lods fldlg2 jmp add shll mov push call pushf mov mov cmp int3 push into dec xchg push ret mov inc sbb aam fisub cmc addr16 pop lahf sub xchg popa cmpb dec sub add subl inc test jno push out sbb inc mov dec fst pushf add mov sbb fstpt adc or movsb test aad mov bound dec gs testl xor (bad) pop dec imul outsl int daa jle jnp pop dec fisubl outsl inc les imul sub pop imul (bad) rorl cmp (bad) jae xor test jp pop fistpl icebp mov pushf mov daa add mov adc outsb push cmp or push add insb (bad) (bad) jg jle test push enter jne iret cmp cmpsl or sti sahf int pushf jae pop cmp mov out outsl inc or or sbb sahf sbb push adc lahf (bad) mov stos cmp dec or int mov pop or push data16 leave push cmpsl mov testl ret cli cmp (bad) lods mov jo xor sbb push mov repnz xchg rolb decb out or push in mov mov mov sub mov push push scas cltd dec sarl cld arpl xchg cmp loopne loope rcr cmp dec or imul pop mov jmp jmp jne jl lahf mov fs movsb mov addr16 inc push push push mov iret into fnstcw out (bad) mov test jne mov cmp push test mov add sbb dec fwait std aam enter lcall sbb out lret shr fsubrl and mov in outsb xor xor (bad) adc add mov push movsb push (bad) leave and test and lret loop ljmp xchg mov (bad) ss loopne leave sahf stos out mov lods dec mov test fs imul ret mov inc fdivrl cwtl aad les shrb lahf lret xchg mov jbe jg push mov add inc xchg ficoml add andl je add mov dec adc xchg outsb add inc ljmp mov push std xor rcrl cltd jns ret xchg scas sbb fwait and jae test (bad) fsubrp add pop mov (bad) adc sbb jae in pop pop dec pop fs cmp jmp xorl xor dec cs stc push (bad) in sti inc xor arpl lea popf repz xchg mov out or loopne int sub push adc lret test push and call cmp pop pop popa inc dec stos subl ja jns inc movb mov sub test xchg icebp sub dec sbb out push cmp bound (bad) jmp lods xchg sbb std fstpl sub stc lods xchg div inc shrl push shlb cli push xchg pop repnz adc iret leave lods cmp or std stos stos repnz in dec lods add sub push xchg outsb decb jae inc shr dec shrl sbb call jge setg movsl dec pop out jne jnp jp jg push sbb or sub shrl add cld mov ss (bad) jle mov mov add test incb in xchg sbb add cmp mov xchg pop sahf outsl sbb cmpsl loope repz mov es sbb lcall or insl int3 ret or sub out (bad) lret imul dec icebp out jmp int3 dec push movsb inc pop test icebp insb jne cmpsl add and xchg mov mov cmpsb aam sbb push cmp mov fucomi or aad or fnstenv (bad) pop push dec jp popa sbb (bad) mov and mov inc jl jbe scas push pop mov stos mov test sbb add (bad) cmp inc push sarb insb cltd (bad) iret out adc xlat cmp mov xchg add js repnz ds insb test (bad) jnp lcall inc popf push mov cmp mov in and sub cltd (bad) or xor push dec cli dec push das les arpl inc or imul icebp push mov cmpsl push out or in fucom fist xchg xor mov cwtl push fstl inc sahf hlt int3 sbb mov cwtl jmp mov rclb inc mov and pop cmp popf js xor out or inc jp push mov stc ret fs fistp sub popf adc test and jge push mov jne add outsb pushw mov pusha adc sarb pop leave dec jae xchg (bad) fcomi pop fs out leave inc addr16 int fsts imul lahf inc sub inc pop sbb adc or dec in (bad) loop test pushf add out mov (bad) and lods call in mov movb aas in xor xchg imul pop in and loop push aad out movsb sti push fbld jecxz jae into fstpl sarb ret pop js mov xlat sbb (bad) rcrb adc xchg mov dec in xchg pusha into fcom ret in jmp push jl pop stos stc push out sbb push ljmp pop leave int pushf push out cmpsl imul clc mov dec mov inc or dec push gs insl shlb cmp or into xor inc mov loopne fwait gs add lock add (bad) ljmp push add mov cltd and out enter mov je pop xchg push les (bad) cmpsl inc fistp pop adc pop subb jecxz inc dec xor hlt int inc roll (bad) adc xor push imulb inc outsl pop mov pop shr inc xchg pop js cmp sub divb pop sbb jge jne cmp push popa call (bad) xchg shll xor mov sbb test push jl icebp (bad) mov push lahf fs push outsl cmp shrb dec pop xchg mov insb rorb or out jnp dec inc (bad) into dec mov jns mov sbb mov jp xor dec rolb mov (bad) pop scas adc mul mov or or pop fimull add push imul inc jne jmp adc pushf jecxz dec ss ss into and fdiv mov push pushf inc mov adc jb sbb dec mov inc inc daa subl test push cmp adc push inc sahf or mov cld ror daa fmull lret in mov mov xchg test sub add inc add test sbb mov call aam inc into into mov xor sub jmp push dec xchg shrl out lcall cmp dec lret cmp jl lods cld jo insl pop pop mov dec rolb mov das cmp (bad) aas rol mov sbb mov cs pop mov repz mov mov test rcr mov add imul fildll bound pushf inc push and movb xchg fwait adc aad jbe push pop or outsb mov cld test jg mov loopne jle jnp dec cld out gs jno mov xor les sahf push mov call (bad) mov pop dec ljmp mov insb je arpl adc jle ror xor sbb push push insl (bad) mov xor xor add test test jns out cmp inc pop pop xchg push fisub sti std scas xor dec scas in clc inc mov add mov mov fs dec dec pop (bad) lret inc bswap mov jno xchg xor int mov pop test cli jecxz int fwait lock daa lock out cmp adc push mov xor lcall pop push dec arpl pop rorb or adc es sbb outsb movsl rol mov gs sbb in data16 enter sub mov dec xchg sub xchg ja or movsb je fwait sbb (bad) sbb dec test fnstsw loop mov mov pop or jecxz sbb xchg in inc mov loop sub cmc (bad) cmc and xor (bad) stos (bad) mov mov mov cmp sub sahf mov sub outsl mov clc and pop dec scas mov in insb stos push mov mov ret mov (bad) mov fadds (bad) icebp scas loope cmc lods mov mov mov shlb and outsb test imul xchg dec ret cmp arpl cmp sarl (bad) iret aas es inc inc xchg jno lods in fs int3 jae insb test lds jns add out test add pop push ja fxtract push cmp jecxz mov xchg ret xchg bound pop push add cmp loop cmpps or pop jb cmpsb ret push sbb adc pusha add xchg dec test in xor leave xor and xchg pushf ss sub insl sbb mov dec aaa mov and add mov xchg dec cmp sub jp cli sbb scas push das pop xchg add mov mov push mov jbe rclb sbb mov or mov rdpmc sbbl mov mov js test xor addr16 mov mov ret aaa pop (bad) cwtl push (bad) or add adc into neg inc (bad) (bad) sbb sbb cmp cmp mov lcall int insb movsb std mov es pop adc push cmpsl popf out dec pop sub je loopne icebp (bad) xor rcrb fldcw roll nop and mov add bound cli cmp imul jge pop in inc sbb out je mov mov hlt movsb mov push enter lds scas mov outsb mov sbb push adc mov jg pop pop xor pushf cmpsl mov cmp push inc (bad) xor and pushf cltd sub xorl aaa push outsl outsb and add cmpsl js mov in repz inc fwait aam fisub or xor or loop addr16 sub xchg ret add ljmp scas call mov je dec push cmpsl in mov dec pop repz imul test fdivr pop pop addr16 adc sbb (bad) mov fildll pop les cld pushf push stc inc mov inc scas js out int aas add out les mov xchg mov or scas mov arpl repnz mov xchg adc lods ffreep jmp pop pop insb mov jge or loopne loop dec and fisubrl cmpsb (bad) in dec xor mov aas inc ja rolb and jp scas inc test mov mov or xor xor (bad) outsl test jmp call ret push pop sahf adc in xor or and (bad) mov faddl mov add shrl jp xchg jns repnz dec cmpsl lret aam pop insb leave aas xchg add pop pop dec add fildl mov int in scas in (bad) pop mov cmpsl mov aad in js (bad) je lcall int lock iret xchg sub add test mov mov enter mov mov xchg inc jnp jne es mov int mov clc mov (bad) ficompl int3 cmp in lcall push in mov xchg sarb leave enter repz pop pop mov lods insl int pop aad jae ljmp cmp and out dec xor sahf sbb repz into sub push hlt pop push mov int3 push loope imull mov call and loopne test lock stos enter xabort and cs cltd pop sti sbb cmpsl ljmp sbb mov rclb test or cmp and pop inc fnstcw add adc or cwtl mov sarl cmp ret out hlt fpatan cli sbb adc cmp gs xor sarl insb insl xchg adc mov mov inc ficoml data16 mov jl xchg inc push loope and pop scas psubsb lcall jl add int mov or fst fidiv mov jmp rcll cld jno pop cmpsb xchg lds add test xchg sbb ds les adc mov inc ljmp cs pop sbb rcll xor lock pop fwait cmc inc mov repz decb jbe inc and out test dec int3 call aas lret jno add jo gs or dec cwtl inc jae arpl jp add sub adc hlt pop pop out mov sbb sarb aam jp mov call xor mov xlat rclb mov inc and bound fadd push dec inc sbb cmp call adc outsl cmp jae mov shl lock mov mov int3 ds inc test int3 adc inc sbb push daa dec sbb push cmpsb xor cmp jnp jae nop sbb fs push mov pop mov cli mov and jno mov dec dec push out movsb stos lea pop shl push push (bad) rorl pop rcrb fcomip lret fldl mov add lods push (bad) ret push adc mov mov pop into int xor mov in pop mov ja stos add xchg dec loope aaa dec addr16 jl pop addr16 add shll fnsave mov pop or outsb cmp jb sbb adc push jp cmp lcall dec mov xchg sbb shlb push dec loop bound mov enter xchg pop sub test jnp cmc adc cmp jge mov mov gs les dec shlb add mov lock nop mov popf std test ficoml xchg dec or mov gs je cmp stc das inc mov pop int add and jle mov (bad) sub mulb xor cld enter sbb (bad) ja icebp ja lret adc mov jmp das arpl xchg adc sbb jns ss mov in inc subb and sbb mov test lods inc shrb fldt lret pop jbe pop pushf ljmp (bad) push jb lcall movl xor dec pop pop das in notl lret hlt push sbb js dec mov jnp mov ja sbb add scas nop jb enter imul clc add adc sbb jg cwtl (bad) xchg mov pop mov fisttp jle,pt and push xor mov add mov pop adc imul xchg and xchg lods add xchg sbb mov scas subl mov (bad) push xchg ds pop sub cmp call xchg add mov pop lahf fs inc icebp or clc andb adc in stos test cmpsb pop jno xor ret ror mov cli xchg adc inc jle mov dec xor jbe (bad) xor out sub inc cwtl push sbb sbb and insb xchg pop lret push arpl push aam in (bad) dec idiv sbb push frstor inc sbb push call jp pop testb push jnp int3 lods add jp idivl adc mov jne or enter into test xor (bad) roll call aam out xlat mov mov ljmp (bad) scas stc jmp xchg jmp imul fdivl and int push add pusha icebp imul popf lock movsl jg push sub je fistpl push (bad) jp cmpsb jns int3 pop jp jmp jl mov dec pop pop inc push dec loope cmp adc je jb lock mov or loope push insl cltd cwtl test inc mov mov movsb push lea cmp sub inc jge loope aad dec scas popf push sbb inc and (bad) and dec imul cmp repz mov pop sbb inc (bad) out add xlat dec inc mov fdivp js jo fsubs ret push xchg aad sbb ja xchg mov sbb mov mov cli scas icebp push rorl mov fnstenv xbegin jbe std cld xchg nop adc arpl push mov inc aam fincstp push lds sub sbb mov adc iret fistl stc push lds ret xchg cmp pop jbe lret std push leave adc pop adcl push outsl jbe mov push mov inc add jl jp and mov int3 lds jecxz imul scas lcall xchg xor pop mov mov mov inc pushf add add shl mov mov adc adc dec and add mov jmp imul movsl popa push std push insb mov jo mov add or inc rcrl out push hlt repz das cmp je jp dec jae shlb push or (bad) lea mov and xlat shl imulb ds loopne mov inc cld jl lret test adc or stc faddl push cmp add push insb pop xor mov pop repnz test jno cmc jno mov test xor and mov test inc mov int mov xchg dec push int3 mov jecxz scas dec test sbb cli call icebp pop cmpsb lock cwtl inc cmc lock lock push cltd sbb popf pop icebp lock mov (bad) cmpb mov mov lcall jns (bad) repnz jmp pop ss cmp mov mov push cld inc sti sub xlat inc ljmp int rcll mov pop adc out push inc cld arpl lret clc or mov scas pushf stos das cld xchg adc hlt mov jecxz and sbb les insb int stos sub jp dec js or push xor in push addr16 push lds gs push ja and cmp add adc (bad) mov sbb jno insb mov arpl push or pushl test push clc dec ja lahf xchg add lock pop aam into mov sbb jecxz adc xchg push stos and pop or test sbb popa mov push sbb mov pop lds cmpsb sahf icebp cmp xorl xchg aaa stos sahf xor mov fiadd push dec out in add sub jl (bad) bound mov movsl fs jl mov fldt dec pop lds jge insl insb test adc inc sub xor aad sub aad jle mov out cltd (bad) add scas out loopne sti pop mov cltd inc insb inc stc inc sar jns xchg scas pop inc call dec aas sbb sarl jb push xor hlt fnsave push call sahf cmpsb popa popa notl cmp cmpl sub stos add clc decl das loopne mov jge fadd js jmp xchg mov and add sahf mov aam (bad) in or cwtl pusha outsb and pop add cmp lret add mov mov rcrb xor ret xor push stc push pop cmp shll dec mov pop push sti add sarb xchg mov sbb add dec ficoml jb add fwait call lcall jl jp ss gs aad jo or das pushl xorl movsl mov in push inc scas pop lock scas int dec cmp inc pop arpl xlat cmp adc cmp inc jo jno aaa dec fisubrl add enter cmpl pop rorl mov sahf or xchg sbb inc clc loopne dec mov hlt adc lods jno mov (bad) outsb mov lods xchg in jmp mov mov call int3 lret arpl pop push (bad) scas in lock inc popf mov icebp inc (bad) aas scas daa enter fsubrl (bad) jbe or shl xchg mov clc loope add cli fst and outsb mov mov addr16 (bad) push fstp cmpsl dec iret loopne lcall inc mov push xchg xchg jmp cmpsl and mov stc aas mov or xchg cmpsl push cmpb shll js mov and shrb or pop pop inc adc mov (bad) (bad) jl outsl pop test subb cmp pop mov inc sub xchg test jae in mov ret pop mov sub aaa adc xchg ja into addl rcrl xor in pusha cli mov jne jno imul je jmp stos out popa push scas imul lcall lahf outsb mov adc int in ret iret dec sub xchg dec dec dec out es dec outsb or xchg jp adc mov in xlat xchg inc addr16 cltd loop mov in inc mov jne scas mov jae and push sub (bad) call push lods pop loope int3 ret inc jmp imul cmpsl les call (bad) cmpsl add xchg xchg or gs dec jbe loopne push add xchg in push or int push jbe test mov xor in jl,pt push ljmp popa outsl pop jge push pop stc sti insb jne test into test pop stos jae mov sbb jnp add je mulb inc add sub lea push push lcall shrl mov sbb outsl cs pop cmpsl test sub mov lds iret xchg add adc enter cmp lock or outsl adc mov sub xchg pmullw insb pop lds pop mov sti in dec sub fwait std jo (bad) or js gs mov sahf xor mov cpuid (bad) int3 add shlb pop inc lods lods push loopne test pop pop hlt fisubl inc pop cmpsl xor sub hlt pushf (bad) fwait je xor sbb xor ja pop jg jo scas push sub sub lock pop adc imul lds sbb or lahf in cmp pop ret adc xorl iret or inc inc mov xor ss lret lahf mov xchg ljmp jmp xchg push mov out idivl iret int stos cmp inc rorb cmp inc inc (bad) or ret mov fwait std std out mov push pop dec mov push sbb dec lahf pop cltd stc outsb xchg mov hlt xor clc lods mov mov gs dec mov in clc mov sub mov mov jne adc pop add mov (bad) jmp out mov out cmp push push pop cmp fwait int3 mov jo into jge sub mov inc lahf mov call (bad) addr16 pop sbb lods add loop (bad) in add test push lods in int fcoml add mov mov pop sub push push sub pusha dec popf fwait and je adc jge enter jmp outsl call mov imul dec repnz fcoml xor pop dec stos mov out cmpsl xchg std repnz mov xor add rolb dec call jle dec cli xlat hlt sbb out dec push or mov sahf xlat cmc sbb xor mov (bad) je mov xchg out leave add scas lds movsl xchg cmpsl xor add inc test movb or dec add dec test push movsb lret sbb gs popa mov push out clc jg loop out daa lret cwtl insl cli mov insb aaa jbe lods sub mov jp push and (bad) cmp mulb (bad) mov xchg inc add nop aaa out daa outsl jae icebp push pop mov ret fsts nop xlat icebp fnstsw cmp in fdivp xchg call and sub cmp insl inc xchg icebp out push test in arpl push nop adc jmp out adc xorl cmp (bad) mov and ss xor push adc jnp (bad) icebp cld in or mov jmp jge cltd mov (bad) nop int add mov sbb test pop mov push notb stos in daa cld adc es push in adc mov int push sub fidivr into mov xchg stos aad mov jge es add mov int je adc (bad) push (bad) xchg sarb push jns lock frstor add cld xor in jno gs sub lock std dec into sbb in test (bad) les cmpsl mov lcall je mov jb ljmp stc cmp outsb sbb mov (bad) icebp xor or scas inc mov sub aaa mov xor lcall int in push gs in adc mov add jnp jl jne dec mov add push lret fidivl (bad) pop icebp lock mov in or add mov (bad) in mov lret insl jb rorl push imul scas out adc dec test pop ljmp fcoms xor pop (bad) mov cli fst jo jl jne popf int3 in rorl jno pop add adc xor mov adc xchg push movsb sbb ret sub loopne xor lahf imul sub gs jmp mov mov cmpsb or out js scas adc dec push xchg test rolb push push mov fwait lcall xor add mov pusha lock cmpsl mov mov inc rcl inc int3 mov add cmp xchg stos leave cmc hlt xrelease jne divb jge push add leave mov popf pop insb xchg or push rorl mov dec inc subb ljmp (bad) xchg neg test cmp jo ja lahf push xchg inc adc mov pop push add or push inc pushw popa cld push add mov sbb test into pop jo aad pusha in pop jle gs cmc sbb pop jl sbb jg dec mov out or jno mov mov leave jnp dec cmp outsb sub (bad) lock jno push ret add mov fiadd or idivl repz dec push dec outsb xorl xchg pop mov sub push test addr16 data16 mov mov cld arpl jge xor mov jl add sub subb in pop jne lds lret (bad) lods ja jecxz inc sbb out inc (bad) out jle icebp adc sbb (bad) ljmp mov les in cmp inc aad jl (bad) mov mov mov mov sbb test test add rorb insb sti push movsb pop xchg inc loope dec rcl add ret inc int3 mov sbb and dec jae fildll xlat scas stos faddp test out cmpsb int3 adc jle inc in inc int3 stos lods sbb jne jge cltd cld dec inc inc in mov push repnz mov test scas movsl sarb fwait dec int xor daa out dec int3 insl jo or leave gs nop add xchg in ja push ss pop and outsb (bad) mov or hlt lret adc stos shll loop inc mov and and dec pop iret xor mov hlt cmp cmpsl scas cltd out xorb (bad) sub sub lcall (bad) lret fcoml jne push inc add dec fist lods repz mov and add jnp mov inc mov and jl push dec mov sbb mov inc in test lcall ds or cltd loop mov lret cmc test lods jnp jnp gs jae cmp cmp pop cli mov ja pop inc in push lahf in nop and mov or add test push lock in jl push add cmc or push jnp test stos or inc adc js gs push inc sbb sub lea repz push hlt nop test scas lret lret xchg fcomip fnsave and xor sahf sbb mov push sahf std stos stos jle inc shll shll aam and out push pop scas xorl dec push sbb cli mov add sahf lods addr16 testl mov cli outsl movsb mov mov push inc mov cmpsl icebp mov shrl or mov ret mov repnz push iret fstpl ret pop inc call jno shrl pushf mov xchg inc jl je ljmp adcl lock mov cmp pop nop mov cmpl dec cmp ss in or lds fsubrp pop push mov mov fidiv setl nop pop pusha jle jl in xchg xor pusha rcll adc xor je mov push pop ret push xchg jo mov adcl fstpt cmpsl repnz movsb int repnz lock outsl mov mov jbe aas clc xchg aam pop pusha mov clc mov mov aaa nop xchg ja call push sti inc lock or imul lock (bad) pop push scas iret and inc fnstcw push dec pop imul repnz mov push adc push and stos out in mov xchg adc mov fucomi push push ljmp shlb push mov or lret jmp sub cmp mov std movnti mov aas jmp xor adc dec pop add sbbl stos sbb adc fistl push push loope int3 sti scas pusha push in bswap mov outsl push adc rorl sub mov pop inc frstor lods hlt push mov mov adc int int lss lahf adc mov pop cmpsl dec mov test (bad) repz (bad) ds xor ljmp outsl iret sti and adc pop pusha or insb or sbb xor or cmp mov adcl mov or push sbb push sbb aam loop and sub push and pop movb test addr16 repnz arpl in sarb mov fnstcw sub cltd mov push mov jge daa lcall and mov add sub mov jbe xor rcll dec cltd movsb imul adc aam push scas lock xchg popa xchg push dec bound sub sbb sub mov pop pop xchg jle hlt imul lcall mov xchg xchg mov mov out sub repz popa sbb jns adc dec cltd pusha fidivrl pop lahf test nop push int mov sbb fdivl xchg pusha call add sub mov dec add cmc fnstcw idivb vmovupd sub int jmp mov dec add icebp mov (bad) cld icebp mov cmc dec aad jge ficom mov movsb in pusha das pop pop xchg add pop push lds arpl adc push inc cmp mov mov rolb pop pop and ret lret push cmp jle je outsl inc lods rorl test mov mov ficom (bad) jnp add leave lods or or subl and inc dec xor add and pop into push fs (bad) sti jae fbstp push mov dec xor add test sub mov loope,pt cmp test xor orl icebp push xor outsb mov (bad) je sahf sbb rolb and jne push out pushf data16 lret dec ret push (bad) movsb imul adc add cmpsl sub and sub enter inc cs xchg adc repz push jae lods aaa arpl int3 fdivl adc cmpsl or pop mov out pop scas repz mov pop (bad) and js sti loope popf int out lods cmp adc mov mov hlt mov fs xchg ret rorl adc iret pop jmp or loope push loop sub (bad) inc or vmread push call push mov stos dec lods dec jge daa xor jo rcl imul data16 mov mov mov neg mov push dec inc fdivr xlat pop loope sbb mov inc jae push add icebp push adcl mov hlt mov push lcall (bad) popf (bad) jnp mov les icebp sub mov cmp and js fs out je inc rcll mov pop aad xchg mov add or and jo mov mov int3 lock push cwtl adc push mov movsb push jge fdivrl imul imul or inc sbb sbb jp sbb pop inc jo in sti insb insb dec or scas out cmp dec push rorb add jmp fisttp push push adc fwait sub js inc fcomps loop outsb mov cmp js ror push scas jbe dec mov inc sub adc int mov mov mov dec add pop xchg push dec inc mov cwtl dec pop adc lahf imul mov test (bad) sbb or add cmc and xchg adc movsb (bad) insb mov pop or (bad) mov stc dec inc outsb pop cwtl cwtl push jns jmp mov int in lcall sahf bound scas push lds sub fidivr mov bound push sub xchg sbb cmc test ljmp aam sahf jmp dec lret push or ss fs adc cld shrl xor sub mov adc inc daa dec or xor test sub movsb ret sub cmp and je clc add adc (bad) and push sti sub xlat inc shrb mov jmp jno mov insl mov jmp xchg in sub sbb inc sbb jp sbb and les (bad) call shll lock inc jecxz push inc mov int3 dec mov add clc mov sbb adc fistp jno jne adc add pop inc mov (bad) sti pop push xchg mov mov sub rorb or or inc leave lods adc mov ja das ret jmp pop inc imul (bad) je stos mov testl int3 inc and lret sbbl sbb mov add dec (bad) push adc (bad) push lahf fldl xchg (bad) adc (bad) pop negb pusha cmp jno pop pushl test je adc jmp mov xchg xorb testl je call call push add push lock rclb into lods adc adc ja andl ljmp in jl jae cmp xchg repnz int3 mov push stos leave xchg adc mov xchg xor push xor xchg (bad) mov vmwrite xchg add xor inc dec lock push (bad) iret popf mov outsb push fbld jecxz in push out jae jmp jl push jo orb inc or cltd adc test ja in add fistp ja fs cmp in test stc cli jne das mov mov jl fidivl (bad) jle pop int3 stc push mov cli rcr setg je xchg inc dec push push mov sbb jo pushf popa xchg xor les add cmp das sbb cmpsl aam fcmove leave xchg les rorl jmp add pop xchg jnp cmp pop test jge rcll sbb xor adc das sbb (bad) mov pop insl and divl push insb lods shll bound mov inc fidivl jnp mov cld push shl pushf sub fsubrl and lods xchg in dec popf fistpll or xchg in out mov push pop int dec cld cwtl mov mov sbb int3 subl stos dec inc insl jo faddl mov mov pcmpgtb pusha jg add (bad) lret fs lahf or movsl pop lret sahf jmp test in les or test les xchg mov ds insl xor sti xor or not and dec ljmp fucomi jns scas jne (bad) mov test jns js inc xchg mull mov push jnp rcrb inc cwtl cmp pop adc jecxz pop dec pop popa lcall test jae (bad) mov stos addr16 inc lock cmp add or sbb rcll inc cmp inc fucomi arpl push stos fwait jge dec notb pop xor xchg rorl (bad) ja loop ja jecxz dec rorl (bad) mov pusha rorb mov inc in pop mov dec inc xlat sti test add cmp xor fs sub pop mov mov adc out and ljmp push inc jmp mov div stc cmp jge cmc xchg mov (bad) lods jb daa arpl push sub data16 cs add (bad) jo sbb and insl jecxz data16 xor idiv fcos sub icebp pushf push cmpl repnz test inc jae enter xchg or dec push stc add fisubr int3 mov leave dec push inc cmp sbb lods add not and add jle je std lods jo push pop or mov lds ds stos in push lahf (bad) out lcall test pusha rorl inc pop iret and pop cs nop mov jae movsb in jmp jb ja mov or or xchg aad adc lods push xchg inc fwait or sub push hlt fcomps aaa inc out mov popl jbe (bad) jp hlt iret mov jge push (bad) pop in and cmc sub and testl cmp int3 (bad) ljmp push inc pop inc sub frstor jbe or jl jl adc or pop icebp mov mov (bad) icebp xor adc and mov xchg testl adc mov lcall aad sbb out out lock lcall lods mov stc mov mov sub xor in or loope mov jp push mov or push inc push jg cmp jle mov xor cwtl lahf add jmp fs fwait roll push gs loop dec (bad) (bad) shr mov jbe mov add add fs push dec fwait push popf ficoml arpl mov cmp xlat cmp mov pushf pop lcall js jg push iret lea pop add hlt dec pushf jge dec xchg jge dec lods jge dec movsb jge dec mov jge dec int3 inc jae roll and or movsb mov push stos stos shll test shll and add fildll xchg push inc test dec inc in fisttpll loope out outsb (bad) test sbb inc xor sti in clc cmc div pusha lahf jl cmc test pop in stc mov shrl dec add mov jne cwtl pop adc imul push fimul add xchg frstor sbb mov inc inc icebp in loope repz gs cld sub or push and adc imul lcall (bad) mul (bad) or loopne push add ret in (bad) cld or leave lock out inc cmp or push mov lret stos pop cmp pop mov jo mov cltd or stos adc or inc push lahf push xor mov mov sub pop mov xchg add movsb imul pop lock (bad) aam rcrl ljmp flds repnz (bad) in negb mov rcrb movsb movsb jno jne mov jge mov mov or mov gs jne nop punpckldq roll jl call scas pop inc in mov mov sahf insl cmc loop xor pushf rcrl mov pushf test fsubl mov popa out cld fisub sbb mov mov das sbb stos int3 mov aam jl fwait imul push clc test xchg xor jmp add push clc xor jp cmp xor push xchg sahf in jmp (bad) icebp into imull test push mov adc jb dec sbb or cli sahf outsl fimull jne push fwait std jmp cmp push sar adc and arpl imul loop addr16 or jle lock lret iret movsb mov sarl sbb mov inc call mov mov mov sarl xor rorb lock orl push movsb aad (bad) xor in mov or std cmp pop fwait jb xchg sub adc mov je aaa xor dec arpl daa int3 out push sbb pop lahf psadbw loope fwait jb cmp mov stos insb inc xchg inc dec dec sub (bad) repnz push pop rclb and sbb mov out dec dec or jo push adc inc fsubrl dec shrb and mov leave std cld lods mov xlat and sub sub sbb push add mov jnp insl stos mov cmpsl call inc lahf fldenv movsl cmpsb pop sbb push mov shrb inc jbe fimull mov xchg mov and mov test mov cmp gs mov cld mov mov sub cld xchg pop (bad) jb xchg inc cmp mov dec push inc jle push xor lret aaa pop mov imul mov aam jno xchg shll int pop hlt mov inc mov loopne adc addl aaa in mov fcoml or sub jl mov pop scas mov shrb mov das pushf cmp cwtl in or cli and xchg cld jno ljmp mov sub repnz jb add test test cmp call out je mov inc enter icebp dec lcallw cmp test aam xchg dec enter push jno jmp loope jge sub imulb mov mov adc xor lods movsl inc add stos ror add ljmp fnstcw push fxch add outsb orl and push sbb sbb push pop (bad) stc push imul pop add dec out clc ret movb (bad) icebp xor cltd frstor (bad) repz shll pushf pop xchg (bad) popa gs pop idiv mov jl dec jge push sbb cli sbb add adc push mov aas inc rcrl das or mov repnz add dec call out adc cmc cmp adc pop scas sub mov pop xchg out int3 lods outsb pop mov aad and (bad) dec movsb (bad) cmp outsl adc push inc test es dec lcall out lds cltd call shll mov xorl daa testl mov or push push xor in mov adc cmp jbe cmp mov leave inc inc fidiv mov iret ret lcall js push loopne xchg cli int3 dec sbb scas rcrb lock mov in push jno int3 dec iret mov mov lret fmuls les in bound test sub add mov sbb (bad) negb cs lret fldl sub out sarb push sbbl fsubrs sub add sub inc cwtl add test movsl and pop sbb sti rol movsb xor mov loopne enter ret jo dec lods adc pop scas jo add in mov push push data16 mov mov pop jb cmc int cld jnp jle rcr inc sarl fisub xchg addr16 sti cmp in mov mov enter sti sub pop mov or dec outsl mov aaa add jg in fnstsw aam mov pop mov push lods int add divb lret cmc cmp add (bad) (bad) stos mov push loop cmpsb sub rcrb pop push popa inc (bad) fnsave cmc je and iret out std ds push das (bad) lret mov scas pop fstl (bad) cli and loopne and ljmp mov stos add pop fadds add decl xchg add cmp dec push add sub imul call mov push mov mov dec loope jg pop jl mov cli jbe (bad) std push xlat and sub mov mov sub mov shlb mov stc add sub insb mov jb insb mov push jb mov and dec dec lods sahf loop mov nop das lods and adc stc adc mov sti push cld andb add push scas scas out cmc mov movsb pop mov jae insb rclb add dec movsl inc adc xor std fiadd jl outsb sbb imul cwtl faddl fildl sub cmpsb xchg test out sub mov push dec jle scas cmpsl ret push ljmp inc test popf sub jne (bad) mov int3 je inc pop and cmp lods cmc test mov adc test push lds add xchg sbbl leave gs ror jge sub cmp and pop xchg push imul cli cli cwtl sbb mov incl icebp cli sub pop out in mov (bad) loop scas sub xchg or dec jns mov push or mov adc inc scas mov push cmp aam pop iret sti iret push xor sbb test lea jne movl cmp clc jmp dec jnp push dec mov add les push push sub jne mov sub lods lods mov fs xchg insl into mov outsl mov push push jno add add addr16 and mov daa dec pushf or iret xchg or test pop pusha repnz adc or add xchg les testl jne mov leave inc fldenv out sbb or jb sbb xor push mov jno xchg or je lret xchg (bad) cmp mov lcall mov dec mov xchg xor in dec pop push int3 inc inc jne fwait mov imul adc or data16 or mov pop xlat cld push dec movsl ja xor iret pop cmpsl push cwtl rorl cwtl mov and ljmp ljmp jne fdivrs sbb mov sbb jo lahf rcll jmp add repnz (bad) inc pop or nop or lea jmp out mov stos clc jne into xor lea fs inc mov (bad) fildl add stos stos call mov add int adcw xchg mov inc mov jl stos add dec mov jmp jle mov mov xor add leave (bad) cmpsl clc sahf in (bad) hlt iret sub pushf lahf (bad) fcomip repz ljmp stos xor andl pop bound nop mov pop sbb inc xorb push rorl lret dec push aad push idivl rcl cmpsl fnop mov pop sub fistp test jle pusha and cltd les and inc dec loope (bad) in movsb clc sbb jbe sub jmp jecxz lds outsb pop sbb fs push add add inc or roll jb or les rorl enter rorl enter mov inc pop push (bad) mov cs gs jmp in outsb push cli add mov mov (bad) mov je mov mov xlat dec jns icebp add insl push sbb mov xor outsb stc xor push test mov andl aad aas cmpsb fimull dec faddl sub mov pop and stos lods lds lahf xor add outsb mov add out les xor pop ds int movsl push ret push jge pop pusha cltd jo clc fstps nop cmpsl fild jl fs mov cmc pop xchg sbb jecxz test adc adcb xchg fwait insb add xor roll mov dec xchg dec imul push aam or scas and rcrb xchg aaa inc mov jg sbb lcall mov enter arpl or add jl push mov popl daa xchg jecxz je jecxz mov jmp mov fdivs push mov xchg movsb add notl test mov outsl lods add mov int3 add mov shrb sarl jmp and daa mov test xor pop inc and mov or in nop das cmpsb (bad) fmulp mov mov das fwait loop push cs andl push pop sub fs xor xchg mov outsl sti aaa dec (bad) int mov dec jl fistpl imul adc and scas or cli or cld add inc mov push mov aam sarb jmp ret cltd das rorb movsb mov jge (bad) cmc jo push pop jo fmuls jp lret es in add je test sahf jmp jle stos pushf (bad) cltd jbe mov fs jns mov mov bound fmul sub (bad) roll loop sti mov adcl pop rcrl add inc mulb jle ret lret fiadd test int3 lea stc push dec icebp mov js inc pop aas cltd xchg gs fisubl jno cmpsl (bad) xor out pandn jl incl xor mov mov std dec and jne jp inc mov xor xchg xchg push xchg ficomp jmp inc mov lcall cmp repnz fstp aas scas bound mov fisttpll dec insb test cmp push shr mov (bad) (bad) mov adc push xchg es xchg lods mov add mov mov loopne push stc push xchg lcall mov mov sub dec add in (bad) mov jae movb aad cmpsl rcl stos movsb lods popf scas push aad jle add sbb jmp pushl lahf ds dec pop inc push xor (bad) xchg mov pop rorb imul inc jl rcr mov outsb push int3 stos aas or in inc sti push mov push (bad) xor loope inc aas push add add dec int3 push mov xchg lret sbb test adc cmpsb in icebp sub test shl inc lds (bad) fsubrl into stc jl and push out mov push pop es pop pop sub icebp into sbb cwtl jb std sbb mov stos inc pushf js xor push add xchg rorb in pop jne add rcl dec add adc sbb das mov aaa jo inc add iret mov or lret scas inc mov lret and inc into jmp in mov aam call jno and mov (bad) lea repnz jne xchg outsb data16 mov mov mov in and xchg hlt and clc das outsl push pop out mov mov fiaddl mov pop pop push mov rorl sub clc dec dec or inc jge inc inc dec sbb in cmp or xor jnp dec or push (bad) sarb lods jb cmpsb les mov jg and (bad) in cwtl into push lock adc mov sub jo pop ret push inc mov into push pop inc push lea push (bad) xor jecxz loope popf aas fidivl mov sub ljmp das movsl push push bound lahf cmpsl ror cs mov cmp ss lret rcll inc mov adc gs jecxz push push rcl mov pop add push cmp mov mov movsbl lds hlt inc mov jmp data16 lahf rol (bad) add push add push mov pop mov cld (bad) sti int3 adc add jno stos pop (bad) jmp push mov sbb fisubl push shr (bad) or into insb leave jmp (bad) adc test push icebp js mov dec adc in xchg std mov sbb pminsw and repnz push into pop sub pop cmc mov int or sub adc outsb jge jp inc inc mov fcomi or lcall xchg mov test mov lock add mov mov pushf inc mov cli cli lods call sarb mov gs mov fbstp mov sbb or in and push mov lret dec hlt mov ljmp shrl cmc lcall adc and icebp addr16 rcrb dec add notl adc sub lea mov cmp out dec cmp sbb mov push (bad) sub adc fcmovnu cmpsl daa cmp data16 test push add xor gs adc clc insl pusha jmp loop dec mov int cli fstps jmp dec (bad) mov or pop in sbb movsl xor aam data16 ret sbb test adc arpl adc fisubrl jb mov (bad) sub lcall mov (bad) add mov pop xor fnstsw xor sbb imul aaa inc into pop rorl jnp mov cmpsb daa and ret inc pop sbbl out ds dec dec fistl fstl add sub mov cs aaa xor mov in lds loope dec mov out (bad) out test jle pusha jno or push mov sub shll popa movsb xchg mov xchg sub dec or into inc add jbe jnp and and push xchg mov pop dec lock or cmp dec out xor sti push dec daa push scas sub jno inc shrl out sub cmpsb add mov in loope shll mov daa xor mov mov call mov cltd pop out push inc xchg sub les popf pop aad cmp dec sbb das imul subl sarl aaa cmc imulb mov pop mov mov jmp mov jbe fstpt (bad) imul add mov les sbb cwtl mov mov (bad) sub loopne jae test cs outsl mov or and lock adc fwait pop gs (bad) xor stos (bad) loopne mov (bad) mov mov inc jae cmpsl sub jbe in mov fnstcw ss popl lret jp rclb dec test adc pop icebp jo xor and cmp adc adc mov xchg lods jmp xor pop mov or mov mov aad test mov xchg (bad) ret das dec in and xchg bswap sub dec out add pop xor aad and cmp ss ljmp sub test push gs cmp call stc icebp fwait cli scas fcmovnb loope stos pop cmp jo (bad) stc cmp sbbl out cli xor std xorl and jl adc pop movsb daa push rorb mov mov fistpll add cltd push mov aad cwtl pop jg lcall repnz mov mov stos outsb inc push dec or je pop add (bad) sbb jns pop insl and popa cmp or adc imul adc sbb je or fmull or lods dec (bad) call pop sahf lcall add (bad) push scas call add enter (bad) in outsb push pop lcall push xchg outsb (bad) mov mov push mov xchg mov frstor adc inc aaa jb lods mov sub sti es cmp inc jp test es lea push js and xchg (bad) xor pop add cli lock es dec cmpl je ss mov add add dec fadd sahf out (bad) rcrl mov jae jecxz ljmp push push mov adc dec adc js cs cmp add adc loopne cmp hlt cld pop mov addr16 pop hlt cwtl ljmp push cmpsl xchg fnsave movsb orl push out movsl mov int3 test cmc xlat hlt jg or xchg rcll mov push sbb mov dec pusha add cltd dec xor adc inc jp out push fist in adc (bad) lods imul fdivrs mov mov stos stos fstpt push insl fsubrs adc pop (bad) gs lret mov nop imul mov ret lods mov push cmp push jle jno ljmp adc add ret xchg test leave in mov mov lret ss in and repz (bad) mov cld mov scas out outsb and dec movsb lcall and mov or fs fscale and mov push daa aam test fnsetpm(287 mov jge sbb add mov movsb xor push mov mov pusha pop add mov mov lods add jnp jo stc mov (bad) mov mov pop repnz enter or sub and cmpsb adcl add hlt xchg scas in inc das sti mov leave pop mov aas ret pop out adc ja test dec adc hlt aad mov jo cli inc add arpl pop pop ja sbb mov out or imul jnp movsl cwtl jmp jo loopne mov in adcl movsb repz xor mov mov inc in pop sub test jmp in in inc push mov cld sub rcll cmp mov sbb je insb or push cmp je lret inc neg and movsl pop mov in (bad) push loop mov iret or bound add push cld mov xchg xchg add (bad) cmc jmp push mov fiadd mov (bad) add test jg sahf rcrl adc int loope addr16 cmpsb xchg jno clc add aas mov mov push pop test std jb fidivl adc pop and pop push int3 dec (bad) loop loopne mov sub imul fsubrp push pop pop out lcall out pusha sub cmp in addr16 sub ss repz xor pop ljmp dec repnz scas lock (bad) and lock mov push mov scas adc and stc (bad) jmp or lea roll push and leave sbb gs and lret daa nop adc sbb sbb in leave mov mov xor and jecxz enter scas jne stos cmp sbb outsl outsl enter fs lret mov icebp xchg rcl outsb push sbb in cld int or into lcall cmc xchg (bad) xor jge gs dec (bad) (bad) pushf jne dec adc test (bad) push mov pop pop int lds test xchg xchg pop mov and pop and xchg push adc idivb addr16 lds ficompl inc popf int3 aaa pop jl jae icebp pop in in lcall adc mov call aam mov pop fstpl xor push pop mov shrl inc and add push mov sahf adc aas add inc int3 cwtl sahf mov jbe mov mov iret pop in cmpsb sbbb (bad) pusha mov test in mov xchg scas stc xchg int mov call push add adc and fdivl cmp push lds inc mov movsl inc jle mov jmp or sbb jge cmc fnsave pop sarl test inc das xlat sbb xchg mov pop xchg sbb pop aam xchg faddl mov hlt nop sbb repz pop jb adc cmp xor xor in xor xor in xor xor out xor xor out xor xor push xor stos sbb push xchg lahf ds jb push das dec inc add jb cs repz lret push mov xchg add icebp push ficompl pop roll mov jl xchg stos sub pop pusha xor jge aas loop cmp in cmp sbb bnd rolb test inc test jae pop scas jl,pn xor pop fwait andl or ja out mov jne dec xor fs xchg lods icebp pop aas cmp lods mov pop pop mov push loopne scas mov call pop xchg sub ja mov adc jle jae jbe pop add (bad) icebp xorb add inc jno cmp outsl lret mov lcall in pop xor fmuls jle inc lods imul xchg mov out jp jg push ret inc pop popa mov insb xor test out out in inc lods daa iret dec mov out add sbb fwait repnz or xor pop ljmp dec in pop xchg icebp mov fcmove test arpl lcall pusha pop adc (bad) lahf and push or dec scas int out test cs repnz js daa sti les mov pop mov inc in jl ss cld call mov push pop add bound jl int mov fs (bad) ds lcall daa fs nop jmp or mov es sbb test rorl outsl xor push gs mov pushf cmc inc sbb jbe pushf sub popl fdiv loope shlb iret push pop fidivrl inc pop mov scas fsubrl pop cs mov lea adc cmc inc addr16 push je or sbb fisubr cmc int mov (bad) mov mulb fcompl dec or out jp lahf in dec mov int3 hlt (bad) sub xchg mov mov sbb xor idiv mov jmp mov call fistpll outsl insl jno xchg pop adc add xchg inc lods fistpl loope add int out inc out fdivs mov insl sbb repz push sub loope xchg cmp mov adc leave adc adc rep xchg lcall mov push stos push xor hlt test pop push lds xor fcoml pop mov lea mov pop movsb sbb add xor outsb in mov pop mov mov cmpsb jne fsubl xchg and push lods vucomiss aas mov add push popf inc jg movsb cli cmpsb mov clc or arpl iret xchg hlt dec es leave bound jne ret ljmp lahf outsl repz adc jb orb dec nop dec lods (bad) mov jle or stos push push dec (bad) sbb mov lcall cmpsb xor je cwtl test pop mov cwtl mov lods das fs popf push mov lahf (bad) outsl push xchg sbb add cs inc in or xchg push roll pop add push dec dec stos imul push mov mov adc pop pushf mov xlat xchg popa push outsb pop mov bnd out lret test je fucom jno mov xchg push addr16 xor int lret movsb dec add repz std cmc sbb and mov dec fcoml nop gs pop ret xchg imul sarb mov xor movsb mov gs cs mov dec cmp add fidiv xchg insb cmp repz dec add aad lods sti pop sub cs lods xor (bad) jne mov mov test push sub je lret dec dec cs xor (bad) popa or sbb dec dec in add mov mov pop inc lret adcb mov ja jp mov scas lock cld aam into push hlt lods in fsub test lea push cmpsl xchg jb cld adc movsl xchg je idiv icebp sbb inc stc les add jg mov jecxz test fcoml mov cmp mov leave xor mov aad xor push int sbb xchg repnz lods jnp daa ljmp ror or in mov outsl xchg mov mov out stos push sbb (bad) xchg push jne dec pop leave xchg jge inc push sub inc lock fmuls dec dec jb (bad) jno mov mov iret mov mov dec int3 bnd hlt lds lcall jmp dec and sbb fwait stos mov mov xor xor mov push sub or and push outsb test mov lods sub icebp sahf repnz scas scas push cmp icebp ficompl outsb outsb and insl insb adc mov fucomi mov cmp in mov push mov loope nop and push jae push (bad) mov sbb or mov xchg out xchg cli dec push daa push dec nop and inc leave mov mov lods pop push cmp push push pop inc mov mov mov lods inc enter mov sti (bad) mov add add (bad) fildll je sbb lods (bad) cmpsb sub out or fwait cmp mov pop cmp dec mov aas jnp adc pop mov inc sbb je scas mov mov in int3 inc pop or cmp lds add cmpsl mov int3 shrl cmp (bad) cmc lods stos sbb test fimull nop mov or lret mov jmp xchg or icebp sub (bad) mov imul push aam sub call dec xchg xor fstpl inc lcall mov int nop out jmp test adc dec movsb fsubs xchg out out jnp push stc out sub xchg in push ss out cmpsb adc inc xchg shrb sub push push mov in mov lret call js nop mov and repnz ja adc gs icebp and cmp mov xchg xchg mov sub lret xor iret mov cmc ss xor add or into sbb mov (bad) fsts jb ljmp xchg lret stos mov js,pt jno pushf not jmp pop jo cwtl sub inc repnz mov sub stos add adc inc (bad) cld stos and int outsl int mov push and test xchg cmp inc mov push sbb jecxz mull loope pusha and push repz (bad) xchg popa test jge insb xchg mov cmp push dec scas xor cli mulb inc mov sti fistpll (bad) jno xchg inc cmp inc stos adc ret jge adc lock push dec dec push mov js pop inc and mov cmpsb jae scas inc lods pop fldcw test jp xor dec push call sbb std xchg icebp pop push mov pop dec pushf lret dec jb dec xchg ljmp sti pop mov push lahf test int pop rolb repnz and xor or std mov dec push jns dec jge add mov mov jnp test cmp nop cwtl xchg xor sarl add jnp repz xchg adc into lea imull adc ja repz inc sbb cli test jp int subl inc cmpsb outsl pop jb adc and stos cmpsb or cltd inc xor cltd or cmpsb sahf mov mov fwait daa xor sti and mov lcall shrl jns cmp jl,pt push xchg mov or shl aam and adc pop xchg dec leave mov jae push repnz dec shll rcrb lds sahf idiv dec lods test xor jo repnz je lahf push jge dec cmc out scas cmp lods cli mov cmp push mov dec xor cmpsb ds int3 (bad) (bad) lret icebp or fstpt mov and dec movsl (bad) add jg push les push int test hlt int jecxz leave push pop adc je add loope movsb int xchg insl fcomi les aaa out push scas outsb (bad) out js sbb cmp pop jecxz dec mov xchg pop enter push test movsb and (bad) sub inc cmp push fistl bswap clc inc push sub lods mov xchg shrb mov pop dec jecxz xchg cmp push fimul fildl mov sarl mov adcb int sti jb sub pop cmp cmpsb inc mov or push nop mov (bad) adc jge pop loope (bad) stos dec movsb mov dec inc sub stos or pop (bad) xor jecxz and jge icebp les lock je les repnz dec jb addr16 mov movsl pop push (bad) or lcall test pop out xor (bad) fsubs mov and add jp shrb aas pop and lahf cmpsl cmpsb sub sub pop fs mov mov xchg test je call push xchg xchg xchg pusha push mov jg or movl jge push mov sub fcmovnu into inc (bad) sub inc insb sbb xchg jl xchg pop xchg fs inc mov js sysexit jno sbb mov adc push scas mov mov xor arpl push cld jle mov pop lahf nop xor data16 mov dec cmp cmp das mov jno push lahf xor pusha adc inc jecxz in in ja fdivs (bad) mov xor fldcw inc in sbb subb imul fldl iret dec xlat adc lret aad imulb jecxz dec push mov pop les jp cmp leave sti mov xchg pop pop push jo sarb imul pop push or inc adc fstl ret jge mov xchg lds pop dec adc aas pop and nop outsl (bad) mov fcomps or adc push inc popl xor add push sub movsb mov mov mov lret je int shlb ja mov test incl push int3 in and push int3 mov pushf adc (bad) jmp jl sbb cmpsl push xor std mov push clc (bad) (bad) mov or int3 data16 leave pop or jb out enter dec jecxz outsb rorl int3 fsubr cmp xchg stc (bad) outsl mov ja pop outsl sub jb das ds mov fistpll sub aas out jnp jle stos cltd jmp jo push mov mov inc ret add sbb cmpsb or mov xchg inc push vdivps mov push mov loope,pt les mov jbe jns jbe pop test lds test lret adc sbb xorl pop inc cmpsl cmpsl fs (bad) jne (bad) mov scas clc imul sahf push mov loope int data16 frstor jbe mov push out mov dec pop jae pop add inc idivl jns xchg push xchg or jns jl sub dec scas jae xlat sbb lret cli enter pop jne sub push pusha pop and aaa sarb cmp or cs xor adc or lret int dec lods js push outsl mov int3 or xchg iret fs push (bad) lods notb je cltd dec fisttpl stc stos fsubr daa nop jecxz das push bound adc mov clc (bad) cmpsb call jno cmp cmc or pop mov xlat dec jns cmc pop aad dec pushf sbb dec ljmp pop xchg inc icebp icebp inc addl push xchg iret out push es pop (bad) test (bad) hlt mov gs dec mov stc out or push push xchg cmpsw in sbb loopne pop xor pushl hlt call (bad) sti push call jno sub into ds pop push nop aad cmp loope in adc gs insl jno lret jge insl sbb jnp xor inc sbb push arpl cwtl addr16 mov stos aas jne adc out scas or inc or pop scas and mov mov aaa imul mov pop ficompl mov fs fnstsw scas daa jle insb cltd mov dec fnstenv push inc popa fs out out inc fldenv add push int3 pop adc inc push xor sbb add adc inc push scas hlt inc xchg test rorb mov repnz sub xchg jns lahf sbb jl lcall pop dec xchg xchg push (bad) jmp in sarb (bad) xor xchg out mov in push cmpsb ficoml sbb dec rcrl loopne push inc (bad) adc lret adc push cmp push xchg add sarb fstl test test (bad) inc adc dec push enter push pusha repnz xchg mov mov mov scas mov (bad) mov repnz mov bnd mov mov and (bad) cmp pop pop cmp jmp add push cmpsb pusha sub (bad) xor add rcrb sbb jb in inc (bad) xor and lcall add lss ret pop adc call fstl lret sub (bad) (bad) mov push fdiv clc icebp xorl std testl mov xor test add insb clc movsb or mov jmp (bad) (bad) cli decl aam gs mov test imul imul gs xor lret adc lret push adc mov dec clc mov pop cmp xchg std in mov jbe cmp jne lock jb loop add movsb lret push add xchg push out fistpll mov xlat mov mov jmp (bad) mov push pop out adc nop pop add mov dec pop dec dec dec mov mov (bad) and cmp sbb mov test stc inc push (bad) and pop mov or pusha (bad) dec xchg call sub imul jae adc mov std add sbb xchg xchg scas push cmc jnp add loopne mov mov imul ficoml xchg fmull mov or dec popf sbb or popa inc sub pushf mov ljmp aad mov repnz (bad) fs mov mov adc hlt out adc mov mov (bad) test inc test scas sahf mov lock jl hlt jb pop into fstpl test ror int dec mov mov mov xchg dec mov ret iret xchg add sbb adc mov call xchg ljmp adc cmp fs das dec pop fimul cmc jne xchg out movsb loope mov nop xchg jbe fisttpll mov mov xchg rolb stos ds mov pop cmp inc and out (bad) imul bound je movsb lods (bad) lock dec adc ds push out pop pop stc and fnstsw cs sbb imulb mov dec pop outsl into pop insl mov mov es rcll or jo sahf xor scas or sahf neg cmc js push fiaddl xchg and and sub and mov lret jmp (bad) (bad) mov cmpsb (bad) or pop cmc mov insl and sarl lcall sbb or dec and std lods push rcrb fs fldt cmp push sbb scas mov adc mov sti mov add movsl pop shll or movsb in mov aad jns push sti stos dec outsl (bad) repnz sahf or enter out mov shrb outsl inc in dec sbb mov push lods adc sti xchg or cmpsl roll mov scas xor cmpsb (bad) hlt outsb scas cmp ret sbb movsl sbbl push sub iret add sbb in inc shl jle enter pop sub mov add sbb (bad) ds ss xchg inc mov push and dec or mov adc dec insl and lock arpl push inc jl sbb or enter int pop dec xadd ss mov lahf or jo jno mov fs in pop and out jp lds dec lods pop jbe jne cmc inc adc imul scas xchg lcall sub mov jmp je sub jo adc mov xor sbb cmp scas xchg js push popa aas xchg mov pop sbb jmp enter stos xor mov inc inc sbb (bad) scas stos cltd pop mov lock mov dec lock aas sbb lods nop add jg sbb mov inc add in dec arpl inc and cwtl cmpsb mov ss lods in out fwait shr cld xchg xchg test stos (bad) out stos xchg aas add add mov inc add add ds pop mov (bad) pop inc mov dec jge ljmp outsb adc cmp xchg cld sbb (bad) lret add into mov inc mov cmc add cmp lods roll call (bad) fist sbb sbb and mov into mov or jg or mov push (bad) jns icebp adc pop sahf sbb lea mov (bad) xchg lock add out mov lret pop inc jo addr16 cli mov scas pop adc inc push jge mov sbb adc aaa dec pop sbb mov mov call xor xchg mov lods bound jmp push dec or inc push adc cmp add push xor mov rcrl inc loop inc push mov push dec fstpt push push or loop add cld and push xchg sub xchg push or push shll jne adc cs lahf cmp rcl aas cmc xchg xor (bad) in clc push shrl mov int3 and mov adc xchg js cmp inc iret sbb popf hlt iret xchg mov push je rclb or popf or xor xor dec in inc dec mov stos xor (bad) mov mov add sbb or (bad) ficompl adc test push (bad) in test mov out push lahf pop lock (bad) hlt in leave rcll fisttpll idivb rcr pop adc mov sbb mov push cld (bad) sti and test aam aad mov jmp popa lock cmp (bad) jmp gs mov sbb mov cli call add lret (bad) repnz shrl cmp xor lret leave mov xor jge gs sub cmp jns adc sub xchg in shl push cmc aam mov pop or adc sub adc mov stos fcmovne es fwait aaa aaa cmp sub mov cli test add mov clc xchg enter mov out xor xchg sub ret dec es lds mov add jg out leave aam push dec dec pop jge faddl enter lods and cmp in jnp lahf jo cmp jge mov xchg mov (bad) and out jp dec pop mov addr16 sbb sbb inc add adc mov sub lret mov (bad) int cli pusha sub hlt or xor push add and paddw mov (bad) pop lret cwtl dec cltd movsl add pop inc popf cli aad cli cld add or dec xchg (bad) scas scas push fistpll inc sbb aaa js sbb call das jg out lods add (bad) add add mov pushf js inc xor ja addb cltd mov fdivr in mov mov shlb cltd pop out xchg mov jnp (bad) in lret add pop lds dec mov jge negl push or sarb mov mov lds pop rolb push rorl (bad) mov push (bad) jmp (bad) jmp dec lret out lods test xchg std loop pop test test (bad) cld adc addr16 add add jle xchg mov pop mov and fild inc pop int3 fstl xlat enter stc cmp aam bound lret js imul movl outsl fs pop mov mov or lret inc jl int xchg add lcall jg sub push dec lahf mov arpl mov mov jne mov and push std movsb (bad) in inc sub xor adc jmp in dec pop mov popf int3 mov jl es shll jle pop mov xor (bad) lret jb mov es push jge cmp adcb pop movsl add std jp rcll sbb lods add and lods stos sarb repnz lods in mov xchg sahf jb mov jl mulb arpl js mov xchg push sub mov inc pop xor movsl mov sub lods pop cwtl sub sbb out icebp cs pop dec pop xchg sub jg xchg or insb jl push pop push mov cmp (bad) and inc inc stc ds push add push addb in mov lds rclb pushf add mov sbb lret sub xchg sti popf cmc bnd cmc mov out aad lods clc pop xchg les decl mov nop inc mov rorb add pop add mov fldenv repnz data16 pop lret push jle mov cmc out mov xchg out mov rcll adcl cmp hlt push jno dec scas dec pop xor pushw push cltd pop in pop jne mov cmpsb fmull push mov sbb ud1 mov mov pop jmp mov or ljmp je insb ja mov loopne aas repz pop lock mov loope es jne (bad) mov mov out mov pushf stc (bad) adc mov int out scas shlb cmp lret pop rcrb pop pop pushf xchg mov test and out daa cmpsl mov in jne pop and jne mov pop sub jo xor jge mov dec (bad) jae je movsl sbb sub rcrl xor cmc outsb inc inc inc jmp je pop (bad) jo hlt popf cmp lret sbb jge rcr xor cwtl add mov dec scas daa roll jno icebp sub xorl jp xchg cld arpl sbbb xchg outsl mov repz pop sub movsb or lds jae sarb dec and add xor test aad daa jnp clc or dec stc inc and or aad mov dec nop dec imul in add cwtl movsb push hlt mov leave call fsubr and fldl jmp (bad) sbb jle or out jo cld cmpsl aam (bad) cmp iret adc cmp push mov ja dec ret push outsl data16 test std addb add int3 rolb inc mov cwtl pop mov testb pop (bad) xchg pop inc (bad) push mov outsl xlat add jae push inc pop ss mov call in mov xchg jmp ret imul mov inc push insl cmpsl or fdivs push pop mov fistl ret fwait loopne out arpl inc push insl nop flds mov test incl cmp lcall pop sbbl mov mov (bad) jnp dec dec sub add jne stos xor mov pop cmc sub dec mov and inc (bad) lock dec nop mov inc xorl cmp sti mov lods push and xchg mov pop sbb test mov repz xor in outsb cmc js (bad) cli int ds pop fs ljmp out hlt scas pop cmc dec add xor mov push pop mov jle (bad) cmpsl in mov sub mov int out pop add mov and inc pop inc scas xor insb add jp adc or bound push push push movsb mov push in lods push xor adc mov adc lret call add dec (bad) pop movsl cmp jo cmp adc xor jmp call in mov push jae mov sub out cmp in fsts cmp cmp scas ja jmp jb dec popf aaa adcl rclb mov mov mov movsl cmp es clc insl push cli fmuls mov lods pop cmpsb pop lds push sti jp or push hlt sub scas and fs adc cmc sbb call jns ds inc hlt cmp cmc push mov cmc fildl imul mov dec and or rolb scas roll (bad) (bad) aad jns stos fwait sbb xor xor jmp je pop and js (bad) and test scas rcrb adc adc push jl cmp pushf nop lret adc cmpsl into mov push in xor ret inc cmp test mov mov xrelease xor das in xchg imul mov dec fdiv lds pop xor cmpl sbb push clc cwtl hlt (bad) out nop and in out scas insb enter loopne in dec mov decl push fxch mov xchg adc xchg xor push cld pushf sub jl outsl pop (bad) sub es loopne sbb loopne sbb sbb fwait xadd pop add movsl ret xchg addl push pusha sub adc cmpsb ljmp jns inc mov aam mov push cmp mov mov push push mov cmpsl aaa mov mov sub sub add hlt dec pop out (bad) out fs repnz add jge mov ror mov std mov mov cmp roll mov jg dec push in xchg or pop (bad) jns or stos gs push push mov popa add mov (bad) jns aaa and pop mov mov negb int adc adc lods pop cmpsl mov iret pop (bad) xor sbb repz test mov das mov int bnd aas xor outsb orl mov sbb mov addb je dec adc cmpsl mov sbbl and pop int inc cld call push jmp fwait mov test lret stos xchg das jns stos fstl outsb adc outsb test stos adc sbb lret sub pop inc scas or cmpsb test stos push arpl mov arpl stos cmpsb cwtl jmp inc cs int3 mov lcall sbb ja adc out jp jl fcmovnb gs inc push fwait dec pop outsl iret lock jnp roll in mov jne cmpsl mov add pusha and add pop insb int3 mov mov frstor xchg (bad) std cmp std jp popa jo cld icebp shlb fstpt andl mov xchg or mov daa sub mov push push cs imul pop mov fucomi mov pop in cmp gs sbb add add jns movsl pop fadd (bad) (bad) mov or (bad) or cld shr leave insl push lock pop stos movsb rolb sbb add inc mov lock inc mov dec add jb popa push push js cmc mov sub jg xchg aad out jge sub addr16 dec xchg (bad) adc ret cmpsb movsl mov mov push clc (bad) dec mov cmp lock push push dec mov sub sahf mov loope push movsb mov or and jmp cmc adc fcomi mov je jecxz insb mov jge pop mov mov cltd loop or movsl mov lcall jge xchg and inc lea cmpsl stos adc pop dec sbb xchg test jge jg and cmp loopne xchg xor (bad) aaa push hlt jns fcmovnbe in sub add sub cmp mov push or add stos mull arpl mov ret repnz add test dec mov xchg int inc mov jmp push add mov (bad) shlb loopne mull fcomps jnp cld and psadbw (bad) out mov jg cmp out je mov rorb les inc adc add sub fildl dec sbb leave cmp insb inc hlt xchg out lds jae add test shl jb stos push nopl mov stc push inc clc push cmp lcall xchg sbb push (bad) xlat nop add pusha ljmp push lea orl adc mov imul xor lods daa sbb daa mov inc push ficoml push dec icebp or leave fwait cmp repz add sub sub and cmc fptan movsl mov mov inc or popa shrb jp add inc jle repnz subb mov xchg imul in push dec icebp cltd push sbb adc ss sub (bad) idivb in adc xchg (bad) daa ja icebp mov jbe jo sar add stc scas test jbe fdivr stos gs cwtl cmp stos inc sar adc mov pop xchg adc xor loopne mov scas rorb adc sbbb and jno sbb cld fisttp ficom jl cmpb dec and test mov pop cltd loop or cld dec (bad) xchg mov sbb jmp fsubp mov inc or adc inc jl push negb mov imul fwait outsl mov lds sub (bad) jno cltd mov shr stos lcall push outsl adc ret flds mov sti dec adc xchg mov das lock dec sub xor enter addl or sahf outsl enter fimul cmc pushf mov je fmuls jae rclb adc into or mov mov jnp mov or adc push push icebp je mov outsb ss (bad) hlt add add negl dec fwait js cmpsl mov push dec call add xrelease mov loop adc mov mov jbe call push jne mov enter xchg mov dec mov lock mov xchg pop sub movsl dec sahf insb adc push enter sbb hlt dec loope js out mov jmp movsl jmp and sbb mov mov lods sarb or mov jge inc push adc test push jnp icebp adc imul rcrl xchg mov inc mov outsl adc mov movsb mov in push (bad) fldl icebp in gs push mov mov int and xchg xor cmc xlat cld or dec (bad) xor or add inc add sbb shrb outsl pushf pop por lods daa xor rorb dec mov in push add gs mov xchg aaa mov inc scas daa inc lods inc dec out leave pop sbbl (bad) push jo ja xchg lock sbb cmpsb sahf jnp mov (bad) mov lea push inc and aad mov mov loope es add sti (bad) mov inc ret test xlat lods inc lods pushf mov jo add (bad) push clc jbe adc ret mov ret mov mov orl inc icebp cmpsb pop leave movsl (bad) mov pop imul mov loope adc mov cmp jmp repnz in and in jae jg in mov cwtl popf movsl add rcrl mov (bad) dec pop lock mov push (bad) mov clc and push test push pop movsb jl mov shlb sbb jnp outsb faddl xchg and int lahf dec sub es popf jmp out dec lahf outsb int insb in or pushf mov mov pop mov push sbb aad mov jg add in stc sub hlt cmp pop sbbl cld fwait repnz repnz pop mov movsl pop bound or aas mov (bad) jmp mov dec sbb xchg mov and hlt loopne pop out ret js xchg mov pushf fs cmp sbb xchg rorb pop repz call loop jbe cwtl xor cmp sahf (bad) mov xor lcall out nop xor sub test dec and dec sub cmpsb (bad) xor dec cwtl inc pop call push pop cmp popf loopne pop dec fidivrl mov dec leave jl inc (bad) mov aas iret cs lock notb hlt inc data16 xchg lods mov scas stos push jl aam jle movsl movsb adc mov push sbb imul cmp outsl rolb movsl sub sarb movsl dec (bad) fs sbb loope fstps ss sub call pushf xor in xor sub sti mov insl arpl push xchg popf mov hlt stc inc fsubrl pop popf repz push mov xchg es dec loop into mov inc bound pushf pop jne stos cwtl xchg out ja inc lods xchg jne push in inc mov dec push movsl mov jne icebp cmpsb imul sbb push movsb mov mov (bad) mov jmp or cld call sub adc data16 pop int3 les (bad) inc xor jle fcmovne aas dec sub (bad) mov pop push shl cmovne inc pop xchg pop mov aam xchg mov imul out pop pusha iret call mov cmp jge fstpl lcall xchg jl cltd out pcmpgtd or push dec push dec (bad) mov cmp and test ss stos mov leave and dec sahf adc ds (bad) push lods push ret inc jmp mov in pop lahf xor sbb mov jg ljmp adc sbb push cmpsb sarl mov xor (bad) leave mov sub iret and add shlb dec mov jno ret repnz test add fdivrl pop push or add pushf popa test sbb sbb and xchg test (bad) jmp inc idiv fwait outsl push adc lock out inc sbb call or mov inc (bad) icebp sub jp int roll fbstp cwtl rorb fldenv cltd mov xor push icebp push repz in hlt inc out push dec push cmp push fisttpl pop pop xor inc fsubs mov stos push dec push mov xchg push inc outsl inc sub sbb mov jb loope ljmp lcall push jb mov lods (bad) lods push mov dec add dec int3 inc cmp push mov cli jmp xor fst (bad) enter jb mov pop xchg inc int3 cwtl lods mov dec xchg inc lods mov adc fwait inc shll cmp inc cld mov pop int sahf pop mov addr16 pop jmp cmpsb leave add jo jl or (bad) jne aas mov add push push sub xchg jae idivb jo mov push or adc push add xor cmp pop add in inc mov ljmp pop mov push dec dec jecxz aaa int mov andb dec mov xor add lods cmp loop add mov cld mov movsb addr16 xchg test imul mov mov cmp rcrb xchg aaa xchg clc push out stc dec (bad) cld (bad) orb test mov sbb movsb out add xor mov addr16 mov push fsubl add dec jne mov sub mov adc andb stos into inc int mov jne push push lea pop dec mov add push mov add sahf int3 (bad) push or in push add insb mov imul xor gs mov xchg push sbb push scas inc lret jl xlat (bad) xchg adc ljmp adc repz push shrl inc loopne mov std add mov cmc cld fdiv mov sbb mov mov movsb inc jno fs movsb stc sarb cmp xchg inc jg or (bad) cwtl mov xchg dec and (bad) jnp adc inc sbb cmp xlat sahf sbb sub out stos cwtl stos inc inc xchg scas xchg pop js clc xlat add (bad) jbe stc mov pop push sarl xchg sub test es pop sahf jo insb mov into mov mov rorl xor adc or cmp loop shlb push inc mov sub mov pop int arpl dec pop pop sub andl ja (bad) icebp lods setne scas push lock cld pop (bad) pop lds shl outsl sub repnz lret imul outsb in movups add mov pop inc pop aas mov hlt les or cwtl cwtl push mov rcrl inc movsb in dec mov leave shrl repz mov (bad) iret mov sbb cmp dec das cmpsb das push push push iret push imul pop shufps rorl loope lcall xor insb mov sbb mov data16 call pushf cmpsl jecxz push insl aad or sub pop pusha les sar dec in push das out cwtl sbb xor hlt dec lods ds outsl dec pop xchg or or int pop add adc jo push clc jge pop jne (bad) xchg iret push cmpsl inc add scas int push cld popf addr16 cli push insb inc jecxz xorb fs js or lcall (bad) cmp cld lret sbbl int3 lahf mov dec pop iret inc xchg xchg sbb adc sahf ljmp cld mov dec dec jge imul std cmp mov out (bad) sub fstpt in cmpsb pop jecxz sub pop ret mov add inc les call cwtl fldcw add jne sub mov mov pop sbb test jg dec cmp es cmp lods mov arpl pushf outsb into or sub popf push add jae xchg fcomi into mov or out push xchg xor (bad) loopne into in cmp mov and arpl adc fildll jl xchg mov xchg pop jne mov aad dec mov sbb push rclb cmc jns adc push push mov and xchg adc or xlat dec mov inc adc mov mov scas sbb and in inc jae sbb test leave inc add cltd pop aaa fisttp pop mov xor call inc mov mov or lret cwtl sbb xchg int push lods inc push insl mov scas pushf mov pop fs imul jecxz dec scas push inc lods fcoms add xchg iret inc mov sub mov call fld1 aad stos cmp jnp popa mov lcall pushf outsb push sub test push cwtl xchg inc lcall inc jge fwait pop add int js push lock add imul fdivrs test and fs adc cmc mov imul aas push mov outsb mov add push and addr16 sbbl mov mov cmpsl (bad) sub pop adc pop (bad) xchg mov adcb (bad) sar dec movsl jg dec pushf push mov leave sub repz inc movsl xchg add jp insb outsb (bad) mov sub fcomps les mov rep shrl sarl mov into sbb pop cld dec adc lods jne mov scas jb out mov scas xor mov lea xchg js sub cmc aad jl gs add jp movsb pop cmp out daa sti es xlat sub outsl call iret icebp cmc mov jne test push jle insb or aam push lock sbb test les mov mov jno lret cwtl cmp mov (bad) fadd sub xchg jb adc sahf (bad) (bad) cli cmp add pop test jo or jg mov or inc inc testb jae push dec daa mov (bad) jne jg sbb leave fdivs jg mov xchg test cmpsl mov cmp inc jae xor jbe mov xchg cli pop stos test test sbb je xchg movsb enter sbb rcl push xor ds ficomp jns ror sub scas push sbb mov aaa adc stos adc jmp lcall push or pop mov lcall shlb mov push inc mov xor add mov cmp je sub mov push push mov cli ss pop imul out in mov inc add in ja decl ljmp and icebp hlt push jmp (bad) insl fcomip push and das mov jns (bad) in lret inc cmp aaa dec (bad) lods std dec in mov cmp sbb xchg les pop popl inc mov inc lahf add mov push or xlat mov bswap mov out repnz adc nop mov in cmp jnp (bad) inc pop or xchg xchg jae add jmp add and lods cmpsl push cltd gs push das lea sbbb push push dec bound clc loope push repz (bad) jns test mov in popa insl push xchg call lock dec lcall push mov or scas out test jmp test call adc pop mov ja cmp inc dec xchg into or test mov hlt jge test decl dec xchg in pop mov test cmp mov arpl arpl pop push rolb dec int3 mov sbb (bad) push (bad) icebp or rcll jle add adc dec sbb add inc cmp or xlat sub gs (bad) into subl je xor repz mov xchg mov push xchg divl or sbb insl sbb pusha into ljmp lds sbb xor clc insb (bad) jo dec push inc int3 xchg jnp and dec aad mov icebp in aas cmc aaa dec aam fstp or outsl inc test mov add mov data16 dec subl repz sahf cs inc cmpsl pop movb inc sub int popf mov sahf mov in inc mov loope mov push sbb add or in mov mov push sub sbb shll cmp and jo xchg mov push repz adc iret nop push mull addr16 in inc inc pop or test scas mov int3 mov outsb add dec (bad) lock mov xchg adc xchg mov mov inc dec sub nop pop jge int3 das lcall dec pop xchg dec add mov (bad) xlat je ljmp jo cwtl pusha or pop (bad) sahf es std stos cmp inc pop ss lds push outsl xchg fdivr (bad) mov imul lock out movsl dec faddl fs iret insl mov xor (bad) mov aas insb adc cmp push fisttp jns and cwtl cmp sbb pop and push mov (bad) jns data16 jno insl pushl in push inc fstl mov mov std push nop (bad) out jo in loopne idiv lods shll mov dec icebp jmp inc dec push sub hlt pushf pop (bad) and popl nop cmc sub jg ret push insl into insl or add sbb jl in dec sub mov lea jno fnstcw mov jecxz dec jecxz out (bad) or in call lcall lds sbb cs mov push jo hlt arpl and test mov hlt pop hlt xchg repz lods add add into push loopne cltd pop xchg cmpsb xchg divl sarl in mov pop iret aad aam pop (bad) call orb (bad) out lahf in sbb scas out out pop push rcrl out pop mov clc lds aas imul loopne push xchg xchg test mov jb pop jb dec pop mov (bad) fs hlt mov push xchg cmpl mov fsts adc mov shlb jle inc pop int3 cmp ja cli test sbb lret mov je inc jp insl enter sarl cmp addr16 int3 jb xor pop sbb mov pushl out adc mov sbb lds dec add cltd pop cmp lds dec mov in sbb test add clc je sub adc jb sub add dec rolb xchg loopne jne dec repnz jb cltd mov stc fdivrp fmuls lea jo inc scas ljmp dec scas push lock imul mov jbe leave adcl xchg test (bad) das jo sbbb adc (bad) mov addr16 in sub mov or fldt stos sub mov push call sarl lcall push scas mov addr16 int adc pop sub dec xchg inc mov sti adc stos dec nop or dec ds daa scas fsubl xchg sub inc jo popf and pop repz lods lods es data16 mov imul in or inc add insb scas mov sahf es or or js jae (bad) leave mov outsl leave inc nop lea and out mov ret xor movsl mov or mov pushf sub sub cli adc or or cli mov out int3 xchg insb lcall and (bad) outsb and add test pop ja setl insl xchg xor cmp push cld add in push pop cmc je adc icebp mov mov push fisttpl orl inc mov test repnz mov push inc into mov jle int3 pop sbb into into int jb mov push lods inc mov loop push add dec mov push in nop mov icebp push cltd out dec cmp jno fs loop cmp dec cmc mov jne or loopne iret sub mov scas inc jnp push add dec hlt arpl mov jp cmp jnp sub inc fsubs xchg push xchg cmc adc push jp cli ficom xchg fwait add icebp mov rcrb addr16 xchg jg roll movsb mov or (bad) cltd and scas hlt add shrb mov mov add pop sbb fcomp ficoml imul dec push add mov les sti imul push fildl mov inc add cmp je leave jle fimull add xchg js into mov add mov mov int insb inc mov inc imul rcll lret out pop mov and pusha dec pop cltd jmp cli repnz mov jp idivb xor xchg gs (bad) mov sub lahf or dec mov jg repz pusha scas pop hlt stc sbb movsl push xchg es xchg test mov psubw mov adc int pop dec push test lcall (bad) lods push sbb repnz mov sahf add push daa movsb mov push xor (bad) iret int inc icebp negl adc mov xchg xor fildll and mov add inc add sub stos cmpsl je in loopne cmp jmp push mov stos outsl cmp dec push inc mov in cmp dec pop push ret push aad movsl les or push cmpsl inc lret or mov push mov mov movsl ficomp mov jae jge and or push mov push fidivrl sbb aaa out adc and mov mov inc bound nop dec cld inc fs push (bad) stos nop cmp mov mov dec inc aaa lret mov mov mov push dec test stc mov out mov test jp rorb jo insb aam mov mov (bad) je ficompl mov xchg push and xor adcl dec es je mov je jns jno xchg adc pushf gs push cmpsl (bad) mov mov movsl gs cmpsb cmp cwtl loope out sbb or repz cmp adc or into sbb leave jo rcpps (bad) subb (bad) mov repnz loop mov and cmp or ret mov das ret inc pop jge or dec lret scas jne dec push js pop sbb inc add leave loopne (bad) xor loopne fs sbb dec enter cld push int lret dec sbb clc cld dec or test mov push xchg xchg iret aaa (bad) fisubl mov aam dec xor xchg inc or out xor cmp pushf sarb and xorl mov sahf pop lods (bad) out xchg fstpt std lret repnz lret pop (bad) and popa mov js cmp dec fcomps cli stos sub mov int jae cli xor sub scas adc pop cmpsl xchg xor xor pop aas pop int3 (bad) outsl pop jmp mov mov out idivl sahf shrb mov addr16 dec mov or rorl push fwait in push clc sti jb lret sub cli mov inc push xchg in push jecxz nop out xor add jnp adc push addr16 xchg movsl push rcll or xchg or cmpsl clc cmpsl roll out pop jo lds mov mov inc and sahf lahf adc xchg pop pusha scas mov in jl push adc (bad) stc mov insb mov mov test dec inc jmp (bad) gs sbbb ljmp inc ljmp push sbb data16 push cmp push insb inc js stos std add inc mov xchg cmpsb leave repz push fisubr mov in ret outsb add mov scas stos out add hlt leave cli mov rcrl pushf std mov or arpl lock dec cwtl mov rcrb mov ss jge add adc xchg cwtl in repnz dec push mov jl scas push icebp je dec lret hlt dec imul stos out sub lcall ret icebp cs push idivl hlt pop mov (bad) fst or fidiv decb dec in pushf hlt push push in sti test mov pop out (bad) ss sbb pop loopne mov gs jbe negb mov fmuls adc insb mov jae lret and dec sub imul jp cmp lret aam lea bound xor data16 test xchg inc stos xchg mov jmp inc inc test decb inc lcall mov aad jl lods fisttp add xor ret dec out inc leavew jl imul jg ja clc mov dec add inc fcomi out imul push frstor fdivs sbb popf inc mov mov pop sbb dec jg insl mov xlat and aad cmc into cmp cmp pop sbb sbbl push push dec (bad) mov cmc loope pop jae int jb mov dec push fwait cwtl jbe scas inc or sbb xchg jne cwtl lahf scas cld inc lret clc mov and xchg jg aas jnp push mov cltd stc mov cmp sub mov adc push dec repz shll repnz push imul aad (bad) outsb and pop pop inc mov push fucomp mov outsl push pop pop adc js adcl aam ret int3 dec bound (bad) jae into cmpsl inc xchg cmpsl dec dec das fs mov inc out xchg cmpsl xchg mov cld popa push pop pop sub push into jnp int cmpsb pushf mov leave rcrl jbe repnz fdivr xor pop or pop in (bad) push adc or mov jne add pop mov adc add xchg cmp popf adc jns mov outsl jnp shrl adc scas cmpsb dec and adc fild mov cli clc mov cmpsb dec popl mov inc das mov divl cltd xchg inc adc and dec mov das add dec (bad) stc outsb xchg inc (bad) jmp push inc cs jle mov jne stos adcl insl imul or test ljmp (bad) sbb pop rorb add js cmp inc sub xor lret adc cli push dec dec jae mov aam fild popa dec fnsave in adc in into out loopne stc cmpsl jbe add jp test addb scas xchg insl dec fnstcw mov stos xchg pop jno sub cmc mov aas cli jb add leave enter xchg jl push hlt pushf mov jle xchg testl jecxz push add shrl mov lds seto mov mov in mov outsb dec sub pop imul orl scas dec xchg inc test int3 test in les inc stos iret pop push (bad) pusha out sahf gs jns lahf sub (bad) mov cmpsl (bad) jo imulb xor jl adc scas movsl pop pop fs mov pop cmc lcall xor movsl insb (bad) loopne int add xchg and inc loop add mov jmp jp test jp rol loope call push dec ret cld xor test roll loope cmc test mov rorb push xchg push pop jnp fwait outsb into inc ss jmp lods scas out sub mov push leave mov dec jle mov lcall pop dec mov and xorl sub movsl pop pop clc mov outsl add add mov dec mov rclb push mov lcall cld cs outsl jg dec mov mov fbld cmpb xor movsl outsl call out leave pushl sahf aaa divb jbe rcrb int pop das sti sbb mov int add imul js mov or mov lahf lods scas and outsl decb bound outsb (bad) pushf stos inc lock mov imul pop push mov dec or mov mov pop xor cmp adc xor fnstcw sbb ss fmull mov jp hlt add add cmpsl mov jmp mov inc leave mov es outsb push and outsb mov mov shr mov pop out mov or mov and outsl in inc ret arpl mov sbb push pushw cmp jmp mov shrb cmp sbb inc iret pop adc leave mov add movsb lods xor and js test decl add sub xchg stc mov loopne push (bad) cwtl out mov loopne (bad) stos jno sub pop out mov xchg cld repz sbb aam xchg dec scas clc aam in push insb inc xchg xchg stc gs inc dec fdivp xchg sbb (bad) push repz rclb fcomps insb idiv sbb (bad) jno cmp cmpsb sti data16 bound add jns stc into xor scas jecxz cmpsb aam out (bad) sbb loope cltd mov push repnz push sti push inc js fmull fcmovnbe lret adc dec mov shrd mov daa sti cmc and nop dec movsl rep adc dec mov pop data16 std adc mov dec xchg div mov fdivrl mov inc dec test sbb xor pop stos aaa jp or push mov jp rorb outsb push add and xchg mov push add scas lahf pop lret or mov lods cmp call stos mov movsb cmp fdivrl and sub (bad) sbb ss clc cmpsl leave int3 add repz dec scas nop add pop push mov cmp pop icebp lds xor outsl jnp mov xchg mov xor cmp mov push sbb loope inc cmpsb test test mov jecxz ljmp icebp js sbb inc in ljmp mov repz xchg push negl sbbl xchg pop inc or jno mov gs mov xchg (bad) push inc push xchg dec in aam sar clc sar inc loop mov cld mov into out xchg js hlt push pop pop lahf mov repz pop xor scas jmp jge cltd dec pop lods mov inc inc (bad) (bad) (bad) xchg add out into into aam leave jbe inc inc addb scas lret mov rcll cmp (bad) pop pop (bad) aas xchg ret and or adc push push or mov and sbb fisttpll and rclb add xchg inc incb lock pop lret loop jae insl or outsb scas push in inc call clc add cmp cmp cmp sar sahf mov mov repnz push mov loope jae push inc test js int3 mov jae fnstenv inc jp mov add mov sub adc sbb pusha mov sbb sbb pop sahf mov jb jl aam sbb addr16 (bad) out cld pop rep jg (bad) jp in lahf outsl dec movsl mov pushf mov mov rcl jl xor inc call xor lods lock push (bad) stos add movsl dec outsl mov dec xor lahf inc js push cmc arpl std pop dec pop inc jp cmpsb test enter ds scas cld mov iret cs fsubrs icebp sbb or cwtl leave jbe push icebp cs add jmp cli push sbb dec fxam xchg gs or cld fcomps insb into cmpsb sbb or xor inc test or or popa hlt je adc push inc or fstl adc cmp (bad) je dec adc jmp js xor cwtd repz rcrb dec dec mov mov nop arpl data16 sahf or mov popf fdivrs rcrb test lock jg sub mov dec (bad) in add addl cmp nop or inc cmpsl fsubl cli repnz dec add mov add push lods or mov clc bound fldl add sub mov sbb push dec movsb add fwait mov jl mov loopne insl mov push popa mov inc rcrl lret pop aam add cli mov xchg dec jge cs pop in jmp mov cmpsb xchg out test and inc scas pop mov inc cmp or test bound in scas jge lods imull loope enter movsb mov cmc xchg and push push neg and scas sub lcall cmp mov xchg mov js shrl int js fisttpl stc lret or outsl inc lock outsl mov enter add fcoms loopne push cmpsb dec sbb xchg dec lds iret pop fiadd test push sbb add inc add (bad) (bad) rcll lret dec push dec (bad) int3 cs xor out ja xor cltd fisttpl vmovsd loop in add cmc mov xor repnz dec into dec add push or pop rcll movsl mov cmp and ljmp mov orb xchg push and and lods aam bound adc insb mov cmp mov repnz mov jl clc andl mov push xchg jno cli mov dec fcmovu movswl add push (bad) mov stc shlb test notl jge pop sub mov mov stos push add mov test add pop (bad) addb fwait pop sub jnp mov enter inc stos pop mov push sbb dec in push scas outsb popf pop pop outsl incb orl pop jecxz idivb movsl cmp ret mov mov jne bound xchg sbb ret mov pusha jg lea int3 or mov pop repz and cltd pop bound sti fnsetpm(287 sbb push push loopne xchg out and or push inc push outsb dec dec data16 lock or imul xor inc (bad) sub out cmp sub imul movsb pop mov inc xchg dec js pop aad lock xchg (bad) lds push xchg inc rcl or xchg outsl cld popa jnp (bad) in inc sub push int xchg movsl into jl mov jmp imul rorb pop cmpsb mov sahf mov adc add adc dec js outsb add clc or mov jge lods adc jne mov xor in mov out int fs adc cs push lock (bad) icebp out out xchg inc inc pop add jp dec rclb arpl xor hlt loop (bad) out mov (bad) in lods (bad) stc push jo jl cmpsl leave out push mov jo cmp stos xor (bad) outsl scas insb and xchg cli mov ja cmpsl push int3 (bad) std hlt add popf dec inc insl xor cmp add adc push mov leave xchg mov repnz insl and mov fnop in aam loop cmp movsl sbb adc adc xchg fbld clc rcrb mov mov ljmp dec in push loopne pop pop inc sbb inc jne mov int or mov call xchg aam lret xchg or cwtl std test popa aaa inc add mov or adc gs sar pop and push cmp pop sbb mov or dec lock xchg cltd xorl int aam in dec sbb mov mov cmp jp jne jo dec mov cltd push loop push adc xchg ljmp aas test enter mov sbb pop ret mov xor mov push mov or jmp aam inc enter repnz je mov pop add dec stc aas mov pop data16 fistp jns pop mov add xor dec mov inc in adc lods adc inc les mov sbb cli insb and repz loop pop aad jne cmpsb enter push fsubrs xor add add sbb in test andl mov inc sbb fwait push (bad) push decb loope cwtl mov lods es cltd mov ljmp imul in mov ret lea out dec inc mov int3 arpl adc pop dec enter mov or jo jb mov ss mov ja addr16 sub xlat subb push iret decb leave call pop pop (bad) mov jne fiadd lds enter test fisttpl push idiv xor (bad) fcomi imul push jl call fwait roll test sub push sti cmp movsb cmp ja test lods insb pop data16 pop adc jae sub out xor (bad) jb add mov mov test ret dec rclb push cli fadd push (bad) push (bad) and lds gs fsts dec or pusha xor (bad) mov jl push mov push push cli dec xor pop pop mov cmp xchg fildll push push cld in cmp jbe xor push mov and pop loopne xchg imul ja pop test dec in adc jne mov lods cmc push in dec sbb popf and (bad) xor stc or push push fisubr add mov sub dec sbb inc sub stc mov sbb outsb mov jmp movsl cltd push mov movsl fs (bad) mov xor fcompl add cmpb inc pop pop sbb mov (bad) fistp push sbb aam push mov sub daa in mov rcrl loope push ljmp xor xor dec mov lcall scas mov mov inc xchg mov outsl add inc xchg stos rorl (bad) fiadd fiaddl sbb xor sub in push out jp cli lahf testb jo cld sub stos pushf adc inc insb adc sbb cmpsb (bad) aam js imul pop sti xchg daa lock ficompl jmp aam cmp testb mov jle mov cli mov out pop sarl pop xor arpl (bad) and xchg pop iret push int3 dec add out sbb mov shrb arpl xchg rcrb pop loope add adc cmc subl sbb daa add mov push sbb adc sbb fisttpl inc pushf sti les mov mov sbb jecxz xor (bad) leave sbb mov jg jmp xchg lahf outsb xor ret xchg fidivr aad xchg (bad) jge nop enter adc pop fs xchg mov es mov mov dec push add jbe jecxz adc cmp push jmp inc xor stos add (bad) sub call lea fstpt dec jae idivb xchg mov nop int3 dec enter out inc mov mov getsec pop sbb dec test aaa jnp sbb lahf push cmpsb (bad) (bad) dec scas jno aam lcall dec out into shrb xchg mov pop mov xchg xchg sti cmpsl inc std cmpsb iret mov pop mulb jo xlat aaa mov pop leave fldenv sbb aaa inc or mov mov ret mov sub inc cltd in leave cmp ret push sub jl out sbb sti cli les push cmp or js les add (bad) cmp das out into sub xchg pop push push loopne subb sti push xchg mov jbe mov adc and (bad) fcmovnu sub push adc pop stos outsl pop out adc out xchg inc out iret subb pop (bad) mov push dec shrb sub fwait repz ds gs mov sub icebp inc push push cld mov or in icebp sbb mov sub sbb mov loopne cld rorb pop dec jge xchg enter dec (bad) (bad) ficomp sub jg cli mov push inc jmp jp xchg ret pop mov pop push dec mov std lea xor mov dec js jno push inc adc xchg sub mov js fnop movsb mov mov outsb or aaa xor ss pop test bound fdivrl mov rolb cmpsl sti push cli arpl in adc popa lods daa cwtl mov cs aam xor (bad) fsub pop dec and lock ror fs les sbb js loopew in popf jmp iret cmc mov mov push mov sbbb scas imul or lcall pushf out aas mov inc popf jg push test xchg ja les fsubrl call mov adc pop aad inc ja inc scas cli xchg test sarb roll pop jl imul and pop and push nop mov (bad) add adc insb sub pop xor hlt mov rorl je (bad) imull leave inc sbb mov stc (bad) jbe ret push push setl inc jno les add push les push mov out in cltd inc test cmpsl or imull es je mov (bad) mov test in or push fwait daa (bad) stc ja mov test inc or jl rcr sub mov popa jns and lds repz add or je adc aam popf mov push stos push sbb das push test lret pop jo xor call adc ja insl movsb xor inc push push xchg mov mov lcall cmp lods lret inc sahf jae fcmovnbe jl rclb aam add inc sub outsb xchg (bad) in ret sub cli add jbe mov add and lock loope ret cld test lods loopne,pn sahf dec lods inc cmp test bound add dec xor rorl lahf shl loopne mov addr16 xlat scas cmp testb sbb add hlt mov jns fs into cltd adc xor jg jp add xor lds cmpsl sbb jmp xchg iret inc aas xchg (bad) xor in add inc cmpsb jg enter jg push leave shr pop arpl lcall sub xor xchg leave scas sub or shr mov (bad) cli cli out pop xor adc pop out std and pop add pop popa push dec adc adc add or pop sub rorl loopne sti mov es ss inc add jns pop out out xlat loope lea mov push out adc ret fdivrs xorl inc cs icebp stos test mov adc mov sarb mov pop lock push lahf test push adc push in xor inc or cmp inc xchg ss jno cli test lea mov fs icebp push into jl lret cmp das cld fs icebp repz in scas jno push mov (bad) in jl pop enter add sbb xor int mov cmpsb jne scas int adc in bound stos and fwait mov or gs mov push adc mov pop int3 cmc dec aam js sbb sarl lret lcall inc dec (bad) into xor loope push into sbb mov cmp loope jmp xchg pop dec test pop insb mov sbb aas jle test adc xor lods sbb idivb and and add stos cltd insl icebp pop orl push idivb js lods add add dec in fneni(8087 dec pop je dec fcoml les lea cmpsb mov xor pop and sbb rcll fsubrl inc push mov pop dec bound inc iret add cwtl mov mov ss xor inc adc mov stos dec mov in mov mov js mov push dec mov insl (bad) int mov shlb inc sbb mov dec jl dec out dec lods int3 cmp loopne xor jecxz sbb nop mov ficom ljmp sub in push movsl loope lcall (bad) mov jnp cmp test xor adc outsb sbb lock xor mov jo test dec push xor mov popf mov outsl cmp cs mov bswap mov dec cltd sub and addr16 pop (bad) shll loopne xchg dec sbb sub adc pop mov cmp mov xor cmp mov pop stos jl js jns jl xchg dec outsl mov movsb (bad) pop loopne mov add push sub cmpsl enter inc imul mov jmp gs sbb movsl pop push sub mov mov push mov ljmp dec lods push cmp loope mov nop inc jo mov subl loope lret mov inc cltd pop stos out scas repnz dec sub cld nop sbb adc xchg nop mov inc mov jne pop and push lcall ret xlat in xor xlat dec add test mov gs sti (bad) lock adc lcall fwait cmpsb add sbb sub andl sbb xor xor pop dec cld movsb enter test jl sub inc nop inc roll mov mov scas icebp iret mov xchg or (bad) fsubl mov xchg jl sarl ljmp dec mov insb dec fdivrs mov xor adc dec adc bound popf mov xor or movsb dec mov sbb pop rclb iret testl xchg int xor scas std jo repz repz mov adc ret sub scas fidivr mov call cwtl stc cmp in loop hlt xor (bad) lret rcrb fs cmp xor wbinvd dec int (bad) in test pop and hlt mov (bad) push and outsl inc loopne out push test jp fisttpll mov mov add (bad) dec ds sub dec int xor push insl movsl cmpsb (bad) sbb leave popa pop clc xchg (bad) in push scas es mov fildl sub call pusha adc or ljmp and addr16 int pop loope lock jl or xchg push loope lret test mov js pop mov jae out movsb add mov and mov nop out push aam lock mov lods test sbb enter xor pop sub (bad) fnop and scas adc and fsubrs inc leave adc cmovle fdivrl subl pop les adc (bad) dec sbb dec (bad) lods or int3 inc subl out cmp cmp (bad) ret jo test mov es dec mov es aad and jnp mov imul (bad) popa test push popa push shrb cld fs int add pop pop fcmovnu lock je pop cmp inc lea inc xor outsb data16 out test add push mov rcll pop and ret mov pusha add xlat jo dec mov movsl mov decl adc lret mov scas aad loopne adc loope mov sbb inc mov aas cmp cmpsl repnz add push pop cmc xor push sbb pop lods imul pop mov add xchg sub outsl dec aas (bad) sbb dec inc xchg hlt dec dec inc insb dec and jno iret cltd dec push sti add or call mov aam mov xchg icebp mov jo orl adcb mov ffree insl clc hlt xchg sub ret lea inc fiaddl lock adc pop pushl or scas bnd push test fld mov icebp inc mov lock std pop dec mov pop outsl pop lret (bad) xor cmp in test push inc mov and and mov pop (bad) dec xor sahf lahf iret xor ljmp or jbe jnp cmp sbb pop cmp arpl and mov fwait jno sti and pop test inc xor sub or add xchg rorb dec push push pop je cmp scas inc fistl and fwait insl push inc js lock cmp (bad) mov mov xor subb xchg adc mov fnsave scas or test nop movsb cld jge movsl add jge das xor stc je,pn loop add jb sbb mov sahf cli xchg icebp fwait sub xchg imul sbb outsl jns data16 dec lahf divl sahf (bad) outsb sub inc xlat int pmaddwd push push icebp mov lods lock fs mov mov xor cmp inc pop add stos add add lock xor push loop js pop add (bad) mov nop pop pop leavew enter mov jle (bad) (bad) xor inc jp shl (bad) sbb hlt mov stos int3 jl (bad) imul test xchg mov push test dec xchg dec into scas adc mov stc or jne lret imul adc mov mov add int pushf inc sbb sar push sbb fildll pop pusha xchg sub dec call ds lock je das imul lcall and sub mov cs out enter fwait lods jnp clc cmp push push dec test sqrtps fldt jnp jno rcl cld lret adc stc (bad) rorl jg push dec sbb sarb pop insl push xchg gs rorl push sbb ds aam jl fdivrl mov subl lea pop xor cli test mov jns mov enter jecxz push sbbl mov inc push mov mov or stc dec scas ljmp mov cmp fisubr cld jl stos repnz and push call ret push inc loopne ror fisub imul xchg or inc dec cmp pop mov jmp out add lret gs push or cwtl jg dec adc jae sbb rdmsr addr16 (bad) imul pop mov sbb adc shrb xor mov xor or cmp mov ja cltd out loop stos inc adc test sub gs lods sub dec jb add (bad) xor icebp push xor jg push add hlt imul stos scas pop (bad) cltd (bad) out add xchg cmpsl sub adc mov (bad) icebp imul sti outsl inc pop push mov mov pcmpgtb cmc add mov add or int dec and push adc insl mov nop pop sbb cmp or dec and fdivrs lea lods ja xchg dec imul add stos jo sub add cmpsl push stc lret ljmp dec lock lahf out jle jo pop (bad) dec sbb sub xchg mov sub inc push fs imulb scas inc add jo mov mov subb lods mov je fdivrs dec push out pop data16 movsb aad ja inc push mov gs sahf scas mov nop mov or fs ja pop in in faddp jbe fsubrl cmc popa pop pushf jl lret sbb xor cmpb outsb inc (bad) mov xchg sbb nop and pop aad (bad) ss inc imul call push in mov gs in xchg call daa aas jo cli lods jae sub iret rorb cwtl cmp xor pop notb addl pop xchg out test add adc lea hlt int3 mov stos rcrl cs pop pop orb movsb pop dec sub add out (bad) mov push divb rolb into es xchg and cwtl ljmp sahf ljmp xchg jne dec pushf cld xor lock dec shrl jge fldl jno ss or (bad) push and cmpsb xchg pop outsl scas mov sti ja or jl pop mov (bad) mov cs je ret out mov test leave cli xchg (bad) mov sub cs (bad) icebp sti mov cmpsb adcb lret inc pop nop ljmp pop call in push pop leave xor pop repnz pop mov lcall inc push inc lods cwtl inc push test aad xchg or ljmp testb into push inc movb insb pop jg cli jae xor sbb jo test jns mov sub insb mov arpl fs fsts int sbb (bad) cmp outsb lock lahf inc dec jl cmc dec pushf adc nop push jmp xchg (bad) fucomp sbb lods xchg dec push stc ja,pn pop sarl mov ljmp dec mov dec push mov add add push loop pushf movsb das push cmp scas jo mov dec dec jne jae lahf (bad) insb mov fsqrt lea add in xchg loope mov push enter add jmp sarb test cmp (bad) jb mov outsl cli insl jo adcb or jp push out fcmovbe sub mov loope inc das xor inc jl push (bad) cmc dec out jmp cli lods leave test dec idiv cmp mov mov jg xchg add cli loopne call sbb out adc push lock lcall jne sbb xchg xchg cwtl in xlat imulb pop add mov lods pop jbe cmc cmpsb mov (bad) xor xchg sub xchg dec (bad) adc mov orl mov sub icebp adc mov xchg outsb and jl xchg sti xor pop sub out jl mov decl repz icebp mov mov fldl enter xorl mov xor fcoms stos push or scas push subl adc stos sbb pop addl mov fnstenv mov mov pusha sub xchg inc inc fwait cmp or add cmp inc fwait fs adc shr cld int3 pop rcr movsb xor push and je push pop sbb push rorb lods popw sbb scas jle dec pop adc dec push cwtl add lock pop roll lret scas dec jns cld enter insb mov or lcall lea pop pop push dec push jg fnstenv daa rcrb out int3 mov sti mov jns inc cwtl mov ljmp jmp call or push mov mov inc mov and mov cmpsb stc xchg cltd (bad) repz mov das pop ficom bound add lock idivl sub mov outsl orl xchg mov (bad) xchg shr aad insb out and xlat pop pop jl,pn or fadd outsl xchg push (bad) hlt add or mov xchg test sbb jge push inc fistpl in xchg or lock xchg loope sub cwtl cmp cmp stos xor dec rclb lret mov pop icebp add jp bnd loope xor es fcompl inc lods andb fsin dec sbb cmpsl (bad) or stos jns addr16 ds outsl or test cltd icebp or and repz out cmpsl pop sub inc and test pusha cmp mov dec jl push rolb and pop inc push aad adc xor test and cmpl sbb jbe cld xchg aam adc test arpl call inc pop lock or sarb pop iret hlt push sub mov adc std cmp iret into ja test les jmp lahf std adc push adc mov aas lods (bad) mov incl std mov aad call inc adc mov das mov xchg xchg iret xchg shll insb pop pop movsb hlt movsb dec mov shrl call ror xor aam dec js lock jl test call pop jbe or stc dec lods jle or insl sub out enter push xor add out hlt fiaddl jno fcomps je and push add mov and stos or sbb cmp dec adc iret out jnp push xchg stos jle mov or stos imul stos repnz mov popa mov lds inc ja xor gs (bad) sub dec dec fiaddl js test mov lcall inc sarl xor dec (bad) out dec aad mov dec ds aaa cmp shl xor out aas movsb sub xchg scas or in dec (bad) xor aam nop pusha sbb xor repz mov dec and stos dec dec jmp dec hlt cmp xchg push call addl jl icebp or mov rclb sbb cmp mov loopne hlt (bad) mov dec mov out sbb stos mov loope mov or mov adc pop in std in mov jmp dec mov pop jo inc ret dec (bad) adc xchg lods sub sub mov cs outsl sbb and sub nop pushf inc (bad) shll das jecxz popa mov mov cmp mov je inc mov xor iret mov fldcw aad stos push push mov mov popf (bad) lock jp,pn ljmp in jge adc fistpl leave shrb call and pop ljmp fdiv popf in pop (bad) push mov jne and mov popf stos addr16 mov ja pop lahf pop stc in repz push clc jp cmp aad push lcall jbe dec adc (bad) mov imul test dec dec push gs fidivl xorl sti shrl push dec call and xchg add xchg inc (bad) xchg fldt stc shrl ret adc cld xchg add jnp cmpsl in out mov or adc inc loope and and outsb ds push in mov aam icebp je cs insl sbb ljmp mov inc xchg inc std (bad) frstor cli call dec dec outsl push mov mov jmp mov and push add pop push sahf xchg jle mov cmp test movsb ljmp xchg push cld test insb out jne int mov imul sub jne lods mov in jle sbb (bad) mov inc loopne in jmp lock push add insb push mov movsl cmpsb push js loopne cmp xchg out jb out or and clc sbb pop data16 push push cmp mov lock pop mov dec lds mov mov xchg dec xchg adc fs movsl cli mov mov rcrl dec and andb out xchg lret nop movsl and sub dec add jge and mov test mov cli (bad) jnp add jne dec ror call stos mov sub stos inc xchg sub push jno xchg push shrb fildl sar ficoml jg mov mov inc in pusha mov or cwtl rcll sub ret add push sbbl jb test insl fidivl out jne dec mov mov ja movsb xchg xor xlat aad out scas jne hlt fcompl fcmovnbe sbb loope pusha add sbb lods xchg jecxz gs mov mov loop cld jge leave stc cmpsb lea push loopne loop stos mov das lret xchg inc inc mov rol jo inc mov sub pop jns (bad) out fdivrl inc out shrb add int3 sbb fwait enter cwtl pop dec push fild fsts popf mov lds icebp (bad) js pop std xchg pop enter add xchg jo aad dec scas cltd in jmp mov mov mov nop data16 fmulp sbb dec xor push xchg pop clc test mov ss in pop jl lock inc mov xor jae imul sti stc rcl sub (bad) or bnd ret add push mov rclb mov int rclb and jmp test sub pushf (bad) cli adc sub gs loopne iret in push hlt mov xor cmp int sahf jg sbb pop sti mov pop jge adc das cmc pushf pop adc adc arpl xchg push mov repnz nop pop xchg mov mov mov movsl mov rcll insl cmp jmp pop jne stos movsl int cld jns ss negb sbb sbb jge fs in push dec ja xorb push fild lock dec add ficompl (bad) sub mov adc push pop fidivr stos ljmp inc mov xchg outsl movl mov xlat stos fldl mov aaa mov xchg or push jle scas out das jne mov inc lret lock dec lret inc jmp pop lods mov in (bad) cltd frstor add jmp in cmp jno inc cmp scas lret cli rcrb sti jnp repnz fwait (bad) mov mov xor jl xchg mov test xor xor hlt xchg pop dec test mov dec add push iret loope xor pop mov pop mov cmp das fsubrl xor push packuswb push das xchg cmp and add loope pop aad ljmp add mov and jg or mov sub mov cmp pop lods test mov stos cmpsb popa jbe (bad) sahf mov fdivrs add je lcall mov cmc (bad) or cwtl sbb sbbl pop jp fsubl repz inc sti inc pushf jl (bad) aaa test lods stos js mov mov or mov rclb fiadd addl testb push shr ret jecxz fstps dec adc das mov and je cltd cmp cmp cmpsl pop int shll lret imul ret outsb call fildll add das imul mov inc fwait adc jne,pn cli add mov out jmp mov pop rorb bound xchg and movsl ljmp fnsave jae xor xor fmulp int3 xchg popa aam add mov in jbe outsb and inc and xchg call pop dec call xchg gs xor shr cmpsl pop sqrtps sub loopne daa push and popf mov mov jmp jne jne movsb je sub mov out sbb pop jae cmpsl xchg aas fisubrl sarb adc xor mov int3 ljmp mov (bad) ds or bound ds or adc popf mov les adc and data16 lock sti xchg cmpsb (bad) arpl std je jp (bad) mov mov sbb add mov pop lods mov xchg fildl int push mov sbb iret ret jo pop or in push (bad) cli movsb sub mov inc jnp jg dec sbb in test or notb ss sub mov (bad) push adc mov cli mov dec fldcw outsl stc insl outsb stc mov repz mov or ret mov (bad) mov mov pop repz hlt lods mov es icebp pusha inc loop imul adcl jns xor push mov ret ret lds cwtl pop mov sahf (bad) mov fs pop cmpsb and ljmp push mov cld jns pop mov fmul jne arpl add movsb push cmp fisubl cmpsl mov or cs bound mov das jns push sub jo pop stos addr16 rcrl arpl aad mov xchg xchg roll out lods ss shrb sub adc imul xchg and xor push push rclb stc loope je mov dec mov mov jmp inc in hlt jle cltd add xor inc fst lods push insl sub lret and fcmovnb mov push es inc adc mov cs shll sahf in mov loop sbb push aaa addr16 adc jo mov push fstl mov ret and mov dec dec jmp or int3 sti int jl pop dec (bad) addr16 sti and jge hlt out js fdivs lahf loopne imul and push sub inc in fsubs (bad) cmpsb adc insb popa inc mov cltd jle mov mov push aad cmpsl icebp and mov mov int3 js sbb xchg lock (bad) jl in jno fwait aam nop ss xchg push add pop flds xchg stos movl jo dec jl pop and lods insb xchg ds ja push sub cwtl push lret fdivl lods lods outsl push add jns inc and jno fs push loopne pop loopne pushf or pop jo test add fwait add shrb out adc add xor insb (bad) jae out push stos stos hlt dec bnd pop push or (bad) lock jnp test cmpsb cmpsb cli add xor out xchg sarl in or out push jae mov lea jno sbb repz in jo add dec adc jne scas sbb lea pop fcom rcl shlb mov sbb nop pusha fisubl out in xor pop shrl hlt mov lret movsl dec mov mov decb pop das add mov cmp sub cltd shr fisubl ja repz insb inc lock ss (bad) adc or test cmpsl gs mov jge or jl push bound add xchg mov pop loopne or test scas mov cmpsl xchg pop cs push ljmp mov rcr xchg mov mov jnp jne push or mov push xor jo jne jb jge mov xor rolb das out lock pop fstl cmc fwait jge cmpb les or notb jg jl xchg daa mov add dec push test inc and sub mov or je (bad) xor sub xchg adc jmp outsl pop pop or xchg lock loopne fcoms shrl add bnd cmp mov fs repz out mov add xchg ds jno jns push dec (bad) mov stos jp jae dec shlb rcrl mov out add sbb mov dec jb leave inc add inc sbb adcl mov loopne insl repnz je push imul rcr imul xor int3 rclb push mov in cwtl ss inc mov adc or ret lods cmpsb in add stc pop inc adc push lods jecxz push add mov aam cld scas fistp xchg push inc or cltd ret pop shrb dec lret cmp fldenv test push cmpsl pop lods adc sbb cs dec in pop enter add xchg les int3 dec rolb (bad) xchg out (bad) js outsb fisub mov sti mov loop icebp (bad) jecxz mov xchg xor icebp in push outsb lods fistp add mov ljmp add jmp icebp dec adc mov dec icebp sub out or scas std lahf ja adc shrl insb call gs pop pop cwtl incl js push (bad) jno sahf repnz push cli sub jnp xchg js add dec int clc push (bad) gs push lods push xchg les cmpsb (bad) inc imul or ficom stc aam sahf das (bad) cld icebp daa inc int3 cmpsl lcall test cli lret fdivs out cltd dec xchg fcompl cmp jae or ljmp jp ret xor ljmp inc mov add or mov pop mov ds pop outsl xor insb lahf sbb rclb pop cltd pop mov sbb jmp xor outsl stc xor add adcl jno movsb add or mov dec push xchg (bad) sarb outsb inc mov shlb xchg sbb xchg mov test int3 lea add push jns,pn hlt ds movsb xchg int3 sahf mov scas mov mov inc mov imul jbe jns pop pop adc inc (bad) mov hlt pusha (bad) in movsl ret jo fs xchg cmpsb add rcll adc std add add dec jp out in (bad) adc dec stos xlat xor out or add push lods out xchg mov dec int3 movsb pop stc (bad) and stc inc out xchg lret sub jne add xor lret add inc mov xchg cld (bad) call ret fcmovu mov test lret mov mov xor sti sbb jge xor fmulp in in fisttpll inc iret shrl inc push add dec sbb push call and pushf cmpsl aas (bad) arpl cmp aam out lods dec jg xor in loopne out mov pop fisubr push mov push sub or adc fistp adc pop mov aam pushf iret mov mov outsl les cmpsb pop arpl and aad pop jmp sbbl pop lods in cld ljmp sbb push (bad) pop mov xchg fisub sbb outsb out clc ret jno mov into inc ss hlt inc push icebp xor xchg sti lcall repnz sahf or pop ja in stc lea pop mov and lods mov dec pushf in mov jb ds add fwait lds fadds (bad) push dec cld call mov in push fimull movsb int3 (bad) cmpsb xchg add jnp inc jne pop (bad) stos mov popf mov test adc xor jno dec lods cmp stos push ja dec sti leave adc (bad) ja ja (bad) out or pop xchg and cmc sub aam mov out jb cmc outsl adc or lcall jl (bad) out push cltd hlt jae dec jmp mov iret adc mov mov out cmp jle push sti dec xchg nop xchg jb mov test rcr sub nop pusha dec pop fdivr sahf out (bad) leave call nop xor shl lods and mov jne mov push mov int3 movsl inc cmpsb adcl push inc mov lods dec push rcrl sti (bad) xor jb jns and xor or cld mov fiadd mov movsb pop inc lock pop mov push adcb cmp dec call pop or divb mov fbstp mov loopne std cli cmpsb (bad) (bad) adc sbb mov das cld sbb and xor xchg arpl cwtl stos sub dec inc fmuls jne loop xor ljmp pop arpl movsb pushf lcall cmp pop lret loopne cmp mov stc imul stos fs mov jns cmc scas push inc leave sti or loop enter lods mov cmp das push pop outsb adc stc xchg push icebp stos mov lds dec adc sbb dec (bad) popf std sbb sti dec shrb addr16 adc mov jne lcall push int3 lods cmc and into insl pop mov fmull dec xchg push lahf test mov rolb rcr icebp cmp xchg dec and data16 (bad) mov movsb jl sbb push shrb add cmp sub cmpsb push adc pusha push push (bad) stos mov push inc xor mov gs rcr (bad) and test mov sub fpatan repnz sti cmc hlt aaa cmp (bad) scas xor mov arpl mov sbbl loopne mov lds cmp (bad) (bad) sub lea stos repz addr16 cmpsl (bad) loope mov fldenv mov (bad) adc or inc sbb cmp mov out xor xor lods dec insl (bad) lret cltd jo inc inc mov mov je fdiv or and mov dec sahf out rcrb dec xor cmpsl js inc adc ljmp mov sbb mov sub cli adc frstor push in xchg (bad) pop cwtl lock mov jg mov add outsb ret repnz mov inc loope jnp imul jne fsubl mov jns shrl pop add xchg ret rol xchg js ja lea sbb loopne pop (bad) iret and fsubrl and fcmovnu cltd jo inc lcall cltd or mov repz (bad) xor mov mov add loop dec faddl rclb inc lcall xchg ret xchg js fwait out sbb push add test add pop xchg iret notb jne mov jae jl push adc (bad) stos mov clc xchg push adc push inc ljmp mov pusha add dec int3 mov push dec sahf jo es jae cs push addr16 mov ret hlt adc scas sbb js stos fisubrl jns stos cld and add push sbb ficom mov fdivl adc sbb fnstsw cmp jge fnstcw pop xchg cmp pand pop pop dec add (bad) push xor sub or imul mov mov (bad) test cmp scas mov std or repz (bad) dec push sub xor mov pop (bad) enter jle in (bad) aas inc jo call jns jge add es aas aas sub stos lock and xchg xor rclb mov mov mov out fs outsl jl rorb js sti lret add jo xchg (bad) sbb inc and shll (bad) mov in repnz ja sahf test add gs sbb lods test int3 lods mov mov (bad) dec push les addr16 sbb test fwait or push adc lcall cmp xor sti jl xor jmp leave (bad) imul jae dec dec mov inc cmp inc mov icebp stos inc mov mov add jnp jnp jnp mov sti jns in iret lret dec ja outsl lods xchg in dec int3 sti stc sbb dec or (bad) loope pushf mulw xchg ret add sahf mov ret cmp xchg roll mov test out daa cld pop fwait xlat cmp dec test movsb js xchg test scas jmp push xchg jb loopne pushf test xor jnp mov pop idivl repnz inc iret xor or (bad) cmc bound push negl dec sbb pop jae pop and mov push add mov lods loop add in xor jo insb shlb push fdivl add leave sbb sti adc xor sub xor pop ds push (bad) xchg ja push aam jns pop fisttpl ret fmuls mov push inc adc push cwtl sbb mulb rol adcb mov cmp int adc pushf push out push jb rcrl (bad) (bad) sti mov aad loope mov push mov movsl adc cmp repz adc scas or fild add in dec pop cmp aaa pop enter (bad) out out int3 js dec jo,pn fstpl cmp cmpsl push mov (bad) push mov and push in add xchg fs inc scas into sbbb stos xchg sub rcrb adc sbb sbb push out into mov clc push fsubrs fisttp sub push insb pop xchg lret sub enter lods mov dec insb push imul jl fcmovbe pop inc es (bad) jg iret or pop or gs pop mov jg in inc adc push (bad) lds or ds mov pop push stos shr scas fimull aaa fwait les mov data16 bound or insl rolb ljmp sti lcall (bad) mov mov or xor imul cmc (bad) out dec adc xchg subb adc jmp not (bad) pusha out mov (bad) int3 fisubl push mov scas push inc in cmpsl push sbb adc mov mov mov lahf iret or xor scas push out pop jle fwait sbb dec arpl lods test pop lahf jp jb imul inc repnz fisubrl rcrl pop adc jae xchg dec mov sbb push or mov sbb test imul sbb lret arpl jmp pop outsl mov ljmp dec mov xor ljmp jnp add jp pop sbb cld lds push movsb mov dec push jne orl mov in (bad) test popf pushf aam rolb jmp movsl shll push mov push hlt lods pop jo in sub dec mov fsubrs mov jno mov sarb (bad) mov lods jle inc mov ds icebp push and dec jb xor jp fwait push push jno lcall dec xorl es sbb cmp push loop aaa dec fldpi inc dec arpl xchg fsubl call std inc mov fdivp dec xchg sbb jmp lds inc das add int js mov jl dec icebp decb leave mov adc sbb enter sbb divb mov push into dec sub dec int sub xchg in int3 dec lds in aad in or in stos pop (bad) nop mov inc ret clc mov sahf pop (bad) and repnz dec mov out and cwtl ret xchg je popf inc leave jmp jl out cld cmp push mov jp pop dec add cwtl jmp push fs roll pusha (bad) push cmp outsb or inc rolb cmpsl mov in outsl fdivrs mov js test mov and mov ss xchg or dec stos and cltd icebp jae in xchg jp mov shlb or jno mov adc jp mov jge xlat mov adc sbb int xor sub add (bad) push (bad) mov or scas mov aas ret fldcw sti inc orb pop stos jg add xchg stos shl push sbb adc lea clc xchg jbe inc mov sahf push dec out scas movsl dec jg cmp mov lcall cmc loop sahf mov ljmp cmc push adc in and and movsb push add cli shlb push lods adc jae mov outsb outsl int sbb lcall lods mov pop into mov xchg subl pop xor movsl pop push cld int3 mov leave negl jno jo xchg (bad) popa out pop push dec jl dec xlat loope push mov sbb jg mov jno inc fcmove xchg and (bad) cmpsl and addr16 xor pop dec add mov fwait nop data16 scas mov cli out les out cmpsl inc pop bsf cmp adc ja jle pop movsl (bad) push addr16 mov inc push loope pop inc pop sub lcall outsl mov test cs mov push jb ffreep add dec jle incb sbb mov pop lock adcl pop int3 in insb pop into mov (bad) test int add xlat cmp cltd mov int pop mov pop stos in mov jbe dec xchg sub pop cmpsl lods bnd dec cmp mov outsl cmp push sbb mov jnp aas jl pop insl inc xchg out idivb aaa adc jmp outsl push stos pop pop sub popf dec popa das out in aas dec repnz sti aas jb movl pop add idivb aad addr16 push sbb test cwtl mov dec xlat xorl sub in cmpsb push inc push cld add rorb ds pop inc cltd inc lods dec push sub sbb lods adc push jne push ret ret jo adc jb bnd lods dec jbe or inc movsl jb push xchg popf (bad) jns jae inc mov mov call in andb xor rcrl jge leave je (bad) cli jns pop mov sbb mov imul sub pushf popf cmovb loope push push dec das aam in fildl test subb in subb in loope lret or mov mov outsl jb outsb mov or push xlat pop leave jge popa mov xchg mov (bad) repnz shlb sbb popa mov adc or rolb dec push cmp dec pop jnp jo adc mov lock xor scas in add push xor lods iret inc dec mov adc cmpsl push sub push jp pop fistpll or (bad) rorl mov popf test pop xchg sbb mov cltd jae pop insl lcall cmpsl js adc (bad) hlt scas mov lcall sub pop lock lcall scas shrb (bad) jo insb inc stc andl adc mov inc xchg sub xchg pop adc (bad) bound jl or int3 mov repnz stos jbe clc inc repz mov insb mov mov jb popf sarb outsb sub lods movsl in popf mov add mov insl and fndisi(8087 mov subl xor or orb hlt or movsl cmc mov jecxz inc push stos addr16 fmuls mov fs jnp and popa mov (bad) repz push stos add mov push sub mov mov dec cli sahf dec pop sbb movsl in or push sbb or imul or mov xchg mov jp mov nop pop lock inc cwtl mov aad mov sub xchg or sbb mov out orb ret mov pop add mov fistpll idivl push mov loopne cld cltd or mov adc inc movsb xchg mov push out insl jmp and sti (bad) dec fimull test jo push outsl into xchg test in or pop lods pop jle or hlt inc sub xor adc cs dec (bad) xor jae mov inc push mov xor mov sub jb cmp inc xor xchg movsl mov bound lahf dec sarl dec call xor mov dec push stos cmpsb cmp mov dec jb daa add sub and or push out je fstp and jl cmpsb push fcompl (bad) inc jbe dec mov inc (bad) xor pop sbb inc or adc scas mov pop mov add push sti adc (bad) jmp hlt repnz and cmp pop push pop cmp xchg inc jg and jge xchg cmpsb jnp push pop in test inc scas ja and xor lahf mov mov push inc in repz out mov xchg es xor imul dec mov inc ja test leave test rclb inc jmp lds test cmpsb mov xchg insb mov popf mov xchg sbb movzbl dec call mov mov movsb mov pop (bad) lcall out sbb mov out or into push (bad) push in stc jl stc sahf jmp sub lret cmc lcall adc jg (bad) leave mov jmp sbb inc bound sub in xchg mov test lods ret xchg insl dec stos push dec and and pop cwtl in lds (bad) fldcw xor ror mov adc push leave dec test lods jo cmpsb or sbb pop dec inc sub or and nop xor jmp rcrl (bad) insb in out jge js mov or mov lcall push stos rclb mov sbb stos pop stos in xchg ret xchg mov add pop xchg cmp xor jo cltd stos jb dec out mov sti add imul adc sbb gs mov sbb add xchg jae push mov sahf push out fwait outsl jg out fs xor pop shlb sbb jl lahf xchg mov dec scas fs (bad) clc stc xchg sbb lods inc scas adcb mov mov les or ret dec repnz mov adc mov jnp ret aad stos outsb inc mov loope sahf adc es (bad) and cmpsb jl and and rcl sub loop repz sbb cmp mov mov imul xor fistpl dec lret sbb dec xor call xorl inc inc out jb fisttpl pop and out std out pop out psubw insl xor (bad) jne insl inc dec roll inc add icebp mov decl in mov sti ljmp jbe cwtl les lds lahf in leave cli stc out or inc cmovnp mov popa and xchg ja loop xchg mov push icebp mov mov inc scas lret xor adc mov jb jp cmpsl mov jl mov bound pop add dec (bad) pop mov jecxz add aaa pop ret mov xchg leave fisub (bad) lods or mov ljmp ljmp decl mov in sbb incl xor out cmp clc mov add inc xchg xor mov inc loopne cmc (bad) (bad) rcll inc xchg cld jbe jl dec push or adc cmp lret add cmp mov jno repz loope clc stos (bad) inc and (bad) mov push (bad) pop data16 mov (bad) in dec cmpsl inc mov mov imulb sub jmp imul jmp and dec shrb aad or mov mov cmp xchg sbb jmp shll mov mov sub sub cmp fsubl mov push popa lods fsubr or adc ljmp (bad) insl xor sub cmpsl xchg mov pusha jno jecxz ljmp mov adc sbb cltd push rcll test out mov mov stos fcoms fiaddl pop in movb popf mov xor notb push jecxz adc icebp push mov xchg mov pusha mov out jge das cmpsl dec imul leave inc dec nop pop and imul loopne divps js aad in rep mov add pop xlat inc gs icebp es addr16 je inc leave negb jnp dec cmp shrl sub add mov jae mov inc cmp enter popf dec pusha scas fsubrl jno push xchg jae cmpsb lcall lahf jmp push aam test sarl ds inc ja data16 outsb ss adc mov push daa sbb adc sbb xor scas jbe adc sub dec fistp and cmpsl popa mov mov iret and push add fcmovnbe lcall repnz outsl sti sbb movsl outsb inc int (bad) mov or inc push adc es lcall add adc psrld outsb jno xor mov in and push pushf mov test push and mov jno xor clc mov xchg je push cmp push loope addr16 (bad) pop cmp pop xchg xor mov ret outsl outsb mov test in ljmp push add and jnp push pushf aam (bad) adc jl cmp xchg notb fsubl test push int3 les rorb push xor xchg mov jnp fistpl mov fstpt data16 gs sub or mov mov in mov adc ds scas sub and inc adc (bad) lods out dec and cwtl dec mov test loopne sbb sub rolb adc add in fdivrs stos imul enter pop stc stos iret in sbb add jge lret xchg mov lods dec mov jl ret dec icebp faddl pop movsl mov std dec or cwtl out sub dec repz inc out jge pop hlt mov xchg sub subl mov scas pop inc outsb sbb jno pop stos clc popf outsb fwait or jae mov pushf xor jmp xchg mov cmpsb ljmp scas movsl mov out sbb in jle lods push xor jns dec mov cmpsb mov mov in icebp insb aam cmpl hlt (bad) sti jo pusha dec mov out push stos dec imul xchg push ret sbb insl inc (bad) roll enter push nop mov dec (bad) loopne xchg jge in adc aad mov mov dec js ret pop jg pop js imul cmpsl inc sub or les dec jmp xchg pop mov stc imul (bad) dec push (bad) mov movsl lods inc adc test sti inc call inc (bad) sbb ret jns aad lret (bad) repnz mov test adc iret pop (bad) sub cmpsb addr16 adc dec ja loope int3 mov (bad) xor add jb pop in (bad) xchg fisttpll stos ret xchg insb pop std cmpsl cmp (bad) or lret xor jle jl scas rorb das xor jnp xor push push (bad) jne xchg insb jmp jecxz adc add mov into arpl pusha int mov in lret cltd fnstcw xchg or lods xchg int3 add call xchg imull mov pushf and dec call inc outsb roll jb arpl out jo or arpl jge pop and push xchg push inc mov (bad) iret push lahf faddl sbb stos loop jg inc pop sub ret cmpsb mov jns sbb sub lods lods jle xor inc loope in jp repnz fstpt push jo stc pop and mov rcrl jae in pop test xchg inc xchg inc imul test jbe sbb rol aam insl fadd aad mov jae adc sbbl cmp das mov push fild jle,pn pop (bad) in pushf daa ss out mov cmc cmp test inc push sbb imul lea stc xchg dec push ret and pop cmpl or xor aad add fdivl addr16 loopne jnp aad cwtl outsl mov fmuls mov ds mov adc mov and sahf mov fcompl inc inc int jnp fistpl cmp mov popa lret xchg or dec inc push dec add xchg outsl (bad) ds jo sbb punpckldq and or mov sbb pushf out sbb dec xchg mov fs add sarl mov mov push mov (bad) aaa fisttpl ret movsl pop ficom xchg subl xchg mov in cwtl gs (bad) in add mov fistpll rolb iret sub out push iret leave dec cli mov loop sbb cmp inc fstl sbb xchg pop in or inc mov pop jl add mov (bad) ljmp hlt mov jle inc adc xchg (bad) cwtl xor push in fimull push adc popa sub (bad) roll jmp outsb sbb testl ret (bad) imul incb mov cmc fist push scas mov test push stc mov jbe (bad) or mov mov pop xor mov in push xchg inc (bad) mov incl sahf mov sub int3 rcr in dec test enter pop fidivl pop data16 sbb jp scas cmp sub inc mov je aad inc loop out and lods shlb and mov mov lret xor aas mov or ss lea pushf jp popa xchg dec cmp out xchg andl mov test (bad) hlt test and insl adc es mov mov push jbe inc insl xlat mov scas pushf cmpsl xchg (bad) jnp lds js outsb les xchg cmc movsl call cmpsb in cmp push jb es jo dec hlt jge or cmp in xchg mov imul pop cmpsb cwtl cmc movsl inc inc in sbbl subps int add jo (bad) dec std pop and xchg cld cmp adc mov imul pop sti lcall loope enter mov lret fwait shll pop lea outsb push xchg dec sub add nop int inc movsb jmp xchg rcl push cmp cmp inc adc mov js lods jnp cmp mov repnz xchg adc mov in push icebp stos sub cmp iret popa jmp push push add dec mov jp cs (bad) jae mov stos shr sub jb test data16 pop mov xor test jne dec pop insl inc adc call divl dec pop jno add (bad) imulb int popa int mov sub out jns gs ret xchg sub scas enter cltd out add mov in fidivrl outsl pushl push leave jecxz mov test (bad) sub stos push xor xorl andl mov imull add adc xchg xor mov mov nop test scas jecxz stos pop pop (bad) cmpsb mov (bad) ficoml stos out outsb int3 mov adc sar orps push into sbb or sub jmp cli sbb fs mov mul dec movsb dec xor add cmc sub mov ret cltd xor (bad) sahf mov mov inc in pop xchg cmp loope ret pop or ret jl stos lahf icebp adc push push add movsb out fsubl int mov insl add imul xchg out push fchs mov dec mov cmp xchg fdivr js pusha loope or jns es scas xchg or jp pop lds mov mov pop mov out sub movsl lods pop sub ds or jg xor adc punpcklbw sub adc push (bad) in cli inc in cmp pop dec imul fsubl cmp xor daa lods mov fadd sahf jmp ss out in fidivrl rorb pop fldcw cwtl sbb sahf lods shr push out jo xchg add cmc inc cmp mov or mov clc xchg inc dec das push mov cmpsb cmp xor lret cs icebp sbb pusha insl (bad) sub cmp daa xchg sub setno adc out call jle mov out pop inc mov (bad) jmp mov (bad) or sbb and lret rorl imul xchg jb lea jmp jg cmp stos fisubl jg xchg cwtl cmpsl jmp fiaddl iret repz movsl mov push xchg je mov push outsb or int3 mov mov lcall movsl mov stos arpl fcmove dec enter out (bad) cld popa mov mov out push mov test xor pop int3 lcall mov in mov les and mov mov outsb lods mov insl pushf add gs sahf xchg jmp out inc sahf cld icebp mov mov push xchg mov movl push inc ljmp and cmpb lea xchg xlat fcoms sbb pop ss push int3 test jbe decb mov ret in xor js call pop fldt lods (bad) cld mov enter xor inc mov dec sbb sub mov mov push pop mov js mov repnz inc cmp sub out icebp iret mov dec dec xchg mov and xchg bnd (bad) mov fistpll ja sti aad mov or lret mov dec popf nop cmp ljmp iret test cltd fildll repz add push add int imul dec sahf lret in push test dec insl aas mov scas and lock jb es push pusha add and mov jno dec jne aas push dec mov out je int lahf push mov popa fs aam xor stc lret in jle mov cmp jns add push outsl loopne dec cmp push out mov pusha mov popf out pop sahf xlat push mov pop sub icebp ret lea xor cltd (bad) mov and dec add ds push push and push shlb popf hlt and xor add frstor cwtl icebp scas mov xchg cmp add in lods jns (bad) mov in cltd fmull (bad) sarb xor sub repz push sbb dec xchg cmc pop pop mov es (bad) jno int3 test iret pop pusha pop mov in push xchg jne sti pop out (bad) fidivl inc xchg or leave or outsb jle ds pushf mov popl push add jno mov mov and daa or fnsave mov mov push adc push (bad) mov sub fidiv sub and mov enter lcall or inc pop mov jnp icebp lahf sar cmp jp int mov pop pop insl xchg adc push out sete and js stos mov fstl enter mov dec in push xchg push bound out jp cwtl mov aad xchg stos jno mov xorb fcomp (bad) sub call call lea inc push mov and adc prefetchw jmp xchg jae fstpt mov nop (bad) adc pop in dec insb jae xor jecxz push stc cli sub mov (bad) popa loopne mov dec cmpsb cmp cmp cmpsl test fsts mov jno subl pop adc mov dec fsubp and push sub rcll sbb xor rcrb cmp (bad) mov cwtl adc stos add lahf iret pop fdivrl xchg scas popf sub add (bad) pushl add mov lock push roll ljmp jae or mov jp jmp mov and jg enter outsl mov into adc loop (bad) or dec int3 mov inc push arpl popf push ja aas add or cmp movsb dec mov bnd (bad) dec jbe push test gs cli mov dec adc pop push xor pop or pop int3 pop aad jo ljmp adc dec ds shrb shrb xchg pop mov loope mov sub push pop out js jl or pusha xor dec cmpsl sti mov addb push push mov sub cmp cwtl and ret jae ja leave inc push mov arpl pusha xchg mov add push insb jp fstpl pop cmpsl test (bad) inc test iret xchg fcmovb enter sub std leave std inc pop xchg jb sub ss dec cmc push lods int add inc into lret outsl jmp rcrb pop notb insb cmp mov cmp (bad) std popf mov dec sub xor sub push jno mov cmp push stc frstor sub cmp pop sbb pop dec cmp fldcw loop cmp mov mov jne pop outsb mov jae sub jb js mov pop pop or in xchg xlat mov mov mov idivl test push mov dec mov lock fnstenv outsl xchg xchg gs jnp in and cli stos add jae fstps pushf imul jae out sub mov imull lods push dec mov jmp adc dec sub adc (bad) xchg mov xor (bad) cmpsl push mov sbb cmp subl pop cmp cmpb fist inc xabort sbb jg adc testb xchg in js add xchg test sti add mov mov paddusb mov loopne xor repnz push pop sbb inc add sahf cmp mov mov popf pop (bad) popf jle xchg jbe pushf out inc pusha mov in out mov pop lea pop jle add mov sbbl dec mov (bad) fcmovnbe jo aam ret icebp (bad) jo iret stc push ret inc sbb adc je lock pop in add das aaa test xor repz push testb jno fiaddl rorb (bad) lea repz sub push and out xorl test cmp repnz scas or cmpsb dec rcrb mov mov addl lock lea add push or mov inc mov cmp push andl out cmpsl fsubl adc fldt mov fstpt lods lret aaa ja divb sti lods ficoml jl sarl ret and xor scas js je insb sub inc daa mov (bad) pop jl lret inc lea stc cli lret jmp mov jecxz push jl popf imul testl pop gs insb fs adc pushl mov in mov test incb movsl mov mov out fstpt inc sti jmp mov mov jle dec pop sbb in icebp mov mov pop mov jbe (bad) adc orl jno mov cwtl popf outsb lret mov in add popa (bad) fcompl outsb jle cmpsl sub je mov lock adc (bad) mov repz hlt cwtl add mov mov shrl mov pop inc lods mov fildll and dec test jmp dec icebp fdivl pop iret jl fs mov loope jl (bad) sbb jae (bad) jbe pop add hlt and push jg (bad) mov js push rcr dec mov push pop push cld lahf pop enter arpl lock je testb mov pop int3 dec fwait les jb jle or cmp (bad) hlt aas mov (bad) xchg xor pusha ret sbbl xor add movb out push jle lcall pop int pusha int3 push and pop loop push dec in or lods fsubrs mov mov mov (bad) xchg divb xchg (bad) jb or test mov movsb inc sub mov mov adc cmp fidivr out cmp xchg jne cmpsl scas mov xor push js mov pcmpgtw cs (bad) imul and mov mov push inc cltd pop push iret call push insb pop lea push scas loop pop mov jo adc push test pushf mov jo adc (bad) lock icebp dec in mov mov xor mov int fsub xchg xchg sub fwait into mov aad add scas pop cmc add loopne pop lods aaa jne repnz ss lea insl push pop xor movsl jae adc pop in inc lods lock xchg add mov out jmp or cmp jne loopne aas push adcb mov mov ja adcb js adc out (bad) loop inc jmp xchg stos sahf pop (bad) fwait xor (bad) mov inc scas repnz push inc and imul fimull call int3 popa mov enter fsubrs dec sbb insb mov pop lea jbe mov xchg ljmp lea cld loopne (bad) cwtl jmp jne test das dec data16 jmp cmp sub or add push movsl or aam outsl mov inc scas jge sbb fptan repnz jnp xchg (bad) mov loope lods inc ljmp xor hlt push in add and fisttpl and rol push dec stos test js (bad) jecxz or mov push xchg lcall dec out arpl imul test mov pop scas adc movsl xchg dec (bad) mov xchg push jbe xchg mov stc pop lods adc pop fwait dec push mov js stos jmp pushf cmp out mov rcl and xorl mov aam mov test push dec jle mov inc pusha loop mov inc sbb icebp in or gs aas mov out cmp mov mov and fmull dec xchg repnz jle cmpsb or je jns,pn lcall outsl and add test and lods lods push cmp pop pop cmc sub and adc jnp mov push pushf add or scas pop js sbb outsl movl mov divb fsubl cltd fiadd cmpsb mov adc lret inc pusha mov cmpsl mov mov arpl sbb jecxz cmpsb adcl push data16 sub popf jl lcall jne stos mov cmc cwtl aam mov outsl cwtl pop sbb hlt outsb xchg xor mov (bad) lds lcall ja (bad) mov les xchg add inc push das dec out mov stos push call mov jge test jbe jle adcb orb jecxz adc pcmpeqd (bad) lret in pushf insb (bad) mov sub outsl cwtl dec rorb clc hlt fnstenv stos sbb mov or push fcoms fildll gs xchg mov xchg push leave lea cmpsl mov stos icebp jnp sub fcomps fwait add repz or xchg pop lcall pop dec push addr16 sti leave or dec test mov lcall out sbb and js outsl cmp shrl mov sbb or push mov cli or sbb enter lcall jl xchg jmp mov ret xchg ljmp scas iret ljmp inc add scas cmp test lock adc sbb push push clc push ftst jg add fsub mov lods pushf test dec push add pop sub dec sbb ficompl test call sub dec pop in scas movsl lahf mov movsl jb cltd es pop cltd es enter hlt aas imul xchg sub cmp pop or and popf aam sub mov mov cmp dec xchg xor cltd pop cli fwait stos inc and in lods mov imul test popl cmpsl fucomi jb mov mov hlt fistpl out push pop nop pushf mov ljmp push xor ret es in cld xor fnstenv push ds sti movsl addr16 gs sbb rorl dec mov xlat fiaddl outsb lret mov ja xor xchg mov push xchg nop mov xor sahf jb mov jl (bad) fsubl in sub dec push rol test test add cmp add fnstsw jne dec push out xchg add inc mov xor (bad) jne sub mov out ss xor pop jne mov mov mov xor aaa jb mov inc mov mov (bad) pop int jle jp lea jecxz rcr clc inc mov test dec int3 (bad) icebp push or hlt and repz push adc sub adc icebp popa (bad) pop inc push outsl int3 lret inc sarl mov jae add push ljmp lds push lods movsb push in mov clc adc adc in push test jno icebp push scas xchg add push mov (bad) pushf test js mov cmp mov lods jns out in fcoml hlt call js outsl les pop add int3 mov cltd inc jb push inc sub out gs out test xchg js mov fnsave sbb and push movsl or inc sbb pop lcall popf (bad) cld dec lret pop addr16 inc and jle popf cld mov and push stos popf ja inc xrelease stos mov sbb mov pop mov movl xchg je cwtl dec pop add mov xchg jo xor lea sbb cld sub sbb sarb or jecxz cmpsb push cmp add into jmp test xchg (bad) jnp push mov lods mov jns and inc out sbb dec mov jne pop push pop jg pop and cmp xor add lods jle sub cmp jle pop int3 push inc lock fs xor mov mov test sar mov imul dec mov inc push js mov daa sub int icebp outsb je outsl mov inc bound add jns mov popf je jge cmpsl inc call iret test inc sbb mov lock dec cld dec lods int3 insl test repnz je stos mov inc mov (bad) push pushf sbb mov lock push addl std adc cwtl jecxz or ss lods jne repz push outsb add fwait ret dec into sbb dec dec jno and and inc add in add nop cld iret daa jmp mov lds cmpsb mov jo or mov push mov into nop out dec mov push out pop jne stos hlt outsl jmp imul xchg lds cmp popf cmp movsl mov sbbb bndldx jecxz pop (bad) dec pop push pop cltd mov mov add or scas sub fcomps negb lds and inc or iret xor mov andb lea push inc xor jb mov pop mov mov mov cmpsb lock scas jmp (bad) xchg icebp nop outsb mov mov inc lods nop xlat lods icebp mov or repz pushf sbb dec outsl sub repnz cmpsb rcrl popf arpl mov and aam ds fidiv lahf jo sti cwtl (bad) jge ss mov mov push dec movsb mov lods fs xor in loop dec icebp enter dec inc sub add mov mov sti or mov clc xor imul inc cmp in jae sub mov into call inc test (bad) in dec lahf scas adc mov stos push in inc sbb rolb adc popf rorb push icebp icebp push cltd mov push bound dec (bad) jl lock mov mov cli or repnz mov aad push add and xchg in js in add daa push mov mov cmp ljmp adc aam mov lret js imul out jae mov xchg mov aaa gs pop cmpsl enter or push lret add notl sub jb pushf jp xchg mov push add inc xor call jnp cmp lock in xor repnz mov jo adc notb jnp xor push cmpsb push push aaa in xor xor pop movsb add idiv sub test mov inc add leave cltd mov mov mov je pop mov je and pop scas dec cmp in out out add leave insb inc outsl fnsave xchg (bad) repz cwtl adcl aam (bad) sti stos (bad) xchg mov popa sbb std pop sub pop pop push mov ss and popa clc xchg mov movsb in es aam or lahf hlt mov add arpl xchg sbb lcall jnp mov outsb imul in push stos mov out push mov lret dec dec and xchg adc xchg jp mov icebp leave xor stos std mov pop cli push je nop mov test addr16 push idivb adc dec mov xchg mov mov mov arpl test cwtl ljmp jge ds cltd shl lods loop mov lret dec leave jo lcall lahf fstl push cmp xor fnsave (bad) cmc les xor jmp jne jg shr xchg inc notb cmp notb mov addb repz sub xchg adc repnz test mov imul inc test lcall sbb popf mov ljmp orl mov rorb stos dec add daa sarb aam mov mov fistpll mov mov jns dec inc and sbb (bad) cld fxch xchg mov push inc call jp stc push pusha add mov fwait sub mov xor add sbb mov jns jle and sahf in push sbb rclb in mov inc mov pop ret mov adc out movsb and mov mov mov or mov stos dec daa repz rorl sbb inc fnstsw ds and scas xchg std cmp inc pusha cmp mov xchg mov scas lods fbstp mov incl lds inc sbb sub in xchg push mov outsb and push jae mov mov imul xchg sbb mov rol inc sub or sub mov mov mov adc out mov repnz add (bad) jno sti (bad) mov (bad) xor fs jno in repnz mov or or mov jle dec shrb sub pop (bad) hlt test icebp and jbe xchg inc lret data16 stos jns inc addb test mov adc adc xor push mov push xor lods cmc fsubl jp shrl push cmp in (bad) dec xor popf and lret popl mov in test pop inc inc mov adc popf cld pop mov call inc shrb and lock addb inc ret sub rolb clc movsl inc jl mov pusha out mov or pop cmpsl xchg nop (bad) jns xor mov or test das ljmp jge push lret and or mov sbb sbb cltd daa bound jb mov xor ljmp mov mov sub mov aaa lret push push iret inc insb daa mov mov (bad) (bad) xchg mov hlt (bad) fbld fcomps push roll sbb shrl sub (bad) cltd mov cmpl enter dec cmc mov aaa push imul mov push pusha lcall stos jecxz divb xor repz pop sbb and push cmc add dec stos cmp xchg add aaa test jnp jae shrl xor sahf mov imul and stos cmpsl mov inc adc or fiaddl imul das mov xchg xor or aad rolb stc push xchg fldl sub dec rcr mov imull lcall daa xor mov push cwtl pop jle gs mov loope adc cld loop sarb call gs xlat nop cltd add fistpll xchg inc pop lahf push iret decb gs (bad) lods xchg (bad) fdivrl and pop lea pusha xchg mov sarl ret cmpb push push lods mov dec call icebp mov sti fistpl rorb sbb jno stos push mov or rcrb jge (bad) mov push scas in mov add mov imul sub ret out adc xlat ss adc pop xor out outsl test mov test mov ret outsl mov ss loop pop xchg js lods jmp sbb leave mov dec sarl inc nop xchg adc jecxz lret push cmp ss out lods insb adc divb mov jge inc ja lds mov bound test outsl adc cltd sub jmp xchg cmpsb mov sub sbbb into loope in push jne pop out mov push stc incb mov cli cmp jge test or jno mov mov cli mov cmp adc mov sbb ljmp cmc inc dec pushf sub inc mov pop dec je out movl xchg xchg dec stc mov xlat das push pop fdivl cmpsl mov scas pop jb jmp daa pop insl ljmp (bad) xlat imul mov dec or inc fcomip mov cltd pop insb lahf or jl mov jo (bad) enter push xor inc loopne and pop mov test xor lret fsts icebp ret int3 sub idivb iret aas outsl lcall (bad) jns addr16 or test je aam jnp adc add and shrb in (bad) fdivrs jne and mov cltd pop insl orb (bad) (bad) sbb (bad) into push push push loope movsb cmp add jmp mov pop (bad) jl js dec cmp lock inc inc jge pop idiv testb xor pushl stos jno mov (bad) nop or add mov push in rcrl inc pop popa or cmp idiv mov add dec jo lods mov sub adc xchg ja (bad) jno push ret insl mov or cmp jns pop push xor lock lea in and leave adc int3 loopne adc lcall dec in dec jne sarl aam push add mov inc dec popf testb movsb push jg or aam add mov movsb (bad) aas int3 mov (bad) scas loope mov sti iret inc addr16 int mov push add mov jg push mov cmp sub ror dec jo lret bound dec cltd jmp and and stos insl mov imul xchg leave mov pop mov adc push add loope push cmp aaa cmpsl pop lahf stos js jns mov add test dec jbe,pn cmp nop inc mov daa adc add loope dec xchg or ret lret outsl xor ror es adc add cltd jg mov loopne sbb (bad) mov incl xlat les (bad) or hlt ret adc mov dec int3 popf pop imul and int3 sub lds pop and loopne xlat pop jno cmpsb add lods adc ret pop out push icebp (bad) and mov dec stos or sbbb add cli movsb jo push push xchg cmp shrl lret add jge add fiaddl cmp les test mov xchg xor push repz cmc or lret (bad) jge mov xchg cmp mov dec fwait adc jae leave pop rcr mov and xchg jno je fistp popf mov mov adc (bad) clc adc ret or xor sub dec inc dec repnz addb iret adc repz jo scas mov and aas cli dec xlat inc fldenv test loopne lods push sub into sarl lea aaa cmp lcall mov icebp cmp cli mov (bad) hlt add jne inc cltd push std cmp and add mov jecxz rcr mov mov dec mov repz push xorl das repz sbb mov xlat (bad) add outsl mov ss mov lods add push sbb popf cli dec or test dec int ss xor es push inc mov inc dec in les push lret repnz aad (bad) les fsqrt stos loope and pusha inc mov fs icebp ret mov (bad) pop in loop jecxz je fadds dec stc nop mov js scas inc pop fs cmc test jae push sub (bad) ljmp jnp out jecxz insb jmp pop mov dec fsubs movsl mov repnz fs notl mov (bad) jbe cmp dec addr16 dec (bad) xor int3 jne fs mov cmp sbb cmp or aaa add mov sbb cmpsb pcmpgtb or lock enter inc (bad) inc mov enter scas icebp push insb imul pop insb mov inc xor cmc divb lret xor repnz adc xor pushf in pop and lcall pop jge and out (bad) cmp fadds cmp xor mov add mov sahf jne add jnp fwait pop or rorl mov add les adc cmpsl sub ret cwtl das jae stos lods ljmp mov addr16 mov inc and out out sub stos cld inc mov adc fistp popa in movsl mov mov push mov outsl pop dec xchg lods inc adc hlt int pop js adc ljmp gs mov gs jns icebp lock test pop mov rcr mov cmp loopne inc mov jne int3 cmp cmp inc rcl icebp lret push sub or cmpsl add into mov lret fwait jmp mov js cmp cltd or notl outsl fcoml cltd sti fs lock jmp and or shrb lods loope int push adc mov in pushf pop mulb sahf add mov jno jae inc mov adc aad (bad) pop in xchg mov add jle notl and mov pushf outsb jge cli sub rclb pop push push jl add sbb pop pop jp (bad) int3 jne (bad) pusha mov xchg sub into push or add mov push inc pop pusha js iret push xchg (bad) scas jl (bad) xlat pop pop push xchg adc in fisttpll (bad) mov cli jecxz stc and lods xchg test inc add mov pop xlat in out into jmp mov pop ss pop xchg jecxz xchg arpl dec xchg push or inc sbb in ud2 xchg jecxz mov push push lcall cmp outsb pop jno les lahf stos cld paddb mov push dec rclb inc (bad) or pop loop stos (bad) iret cmpsl xchg repnz jne ds dec fwait xlat cmp insl push bound pushf cmp shrd and in inc fistl and (bad) sbb xorl out inc dec lret jmp cmpsl rcl dec out mov ds xchg hlt sbb outsl subb pushf fwait and dec sbb fisubl cmp dec mov aaa push (bad) jae lcall lds jg (bad) scas mov sub insb fdivs das pop push push loop sbb mov and jne mov loop lds xor sub adc in jno nop cmp push push xor xor or inc inc cmp pop or loope pop mov sti stos xchg out ret aaa test inc mov (bad) dec jbe xchg test lods out arpl rcll mov cmpl out lahf lea inc fidivr sub jns cwtl (bad) faddl add (bad) daa and rorb fwait stos and (bad) cmc dec pop mov add sub nop add lahf out gs pop jp jns out add pusha cwtl movsl lea lcall cmp xor pop add pop in loopne inc pop mov inc (bad) fldenv push jmp jecxz inc jns jl xchg aaa cmp daa mov fbstp sarl popf cmp outsl fs cmp xor sarl mov push imul pop pop (bad) stc test inc cmpsb mov mov loope sbb sbb push jne mov insb or xchg cs ja shll jp mov push or mov leave stos push imul sub lds fsubrl sbb stos dec mov mov push and or push stos xchg mov add repz inc adc rorl sbb or stc sub xor ret outsb stc (bad) fidivr push cmpsb xchg add add push xor pop mov or sub int3 inc sub (bad) sbb outsl enter icebp hlt mov cmp (bad) rcll cmp (bad) (bad) int3 mov push sbb dec mov inc push stos mov ja lret (bad) cmp push adc cmp add lret sub mov dec sbbl jns mov sbb add lahf inc xchg stc aas jmp (bad) cli add mov scas jg jnp test lea jae mov jge lret pop pop repnz push fwait stos xchg lret cs xchg rolb outsl scas mov rorb sar lods pop rclb and fiaddl sahf push xchg pop rcrl mov mov cltd gs jne popa scas add mov sub and cmpsl adc jecxz xchg leave sbb inc xchg icebp in sbb inc inc mov cmp and movb and lret and cmpsl mov inc mov pop mov or jne dec inc jle xor es mov fildl aaa (bad) mov sti xlat mov push fisttp popf ljmp std lock sbb push inc sub scas mov lods dec xchg push mov repnz dec js scas inc xchg add arpl jecxz push jnp cli push je rorl fs (bad) lods hlt loope sbb es adc scas pushf lods dec mov gs je xor hlt add xchg aam (bad) dec inc pop test push mov (bad) or inc mov outsl cmp loope sbb in push mov test pop ds lret movsl mov es test push inc ds ljmp cmp mov push lahf adc sub stos std repz aam jmp andb (bad) pop or fldenv add push add dec dec dec mov out push imul jns jbe adc adc mov mov std sbb (bad) aad mov mov pop lahf inc jge ss sub cmp inc xchg out pop and fldl cltd test pop mov repnz push add push lret jmp lock pop rcr mov aam mov push movsl les and xchg lods pop into in push stos inc sub lods aas (bad) fist sbb jl mov fucom jge cmp in ror js pop inc inc jne int3 rolb dec cmp insl nop and mov nop ja dec outsl jp push ds mov cmp popf mov inc inc mov out shlb clc in pushf mov push cmp arpl add push push pop xor stos out sbb nop mov and push js mov rcr mov push fs test jle loope dec or adc addr16 adc xchg push pop bound fidivl mov cmovle jo sbb or push jnp xorl pop jns cmp enter jmp jne jns fcmovne cmp push xor push subl movsb lock enter outsl inc test sub data16 scas pusha cmpsl movsb dec cltd xlat dec mov dec cli pushf movsl (bad) pop out sarb lods (bad) inc fldcw sub jo push out adc mov jo adc (bad) or or (bad) cmc sub in or aas xor std (bad) jg or jg into mov lcall cltd ss lods xor dec dec dec cmp jne add mov jecxz jmp aas (bad) negb sbb cmpsb dec adc push call std jecxz jle inc inc mov push repnz or stos sahf hlt aas push push fs push int ret pop in mov fs test xchg test mov sub arpl push dec push outsb into xchg sbb xlat sbb lcall and xor jbe out dec xor ja test mov cli ljmp stos in leave rcrb cltd cmpsl in or push (bad) repnz mov addr16 push sbbl ficom int stos icebp mov pop add add xchg ja hlt dec in cli out dec add jnp stos hlt cltd addr16 cmp movsl cs cmc xchg int fnstenv lret aaa jo xor test lods sbb iret dec push add inc dec repnz arpl adc iret clc stc and inc dec xchg test pop inc xchg lds dec mov push cmp cmpb pop xchg xor mov cld mov cltd mov mov cld loop mov mov or iret adc cld pop jae adc hlt in aam or int mov pop inc mov xor jns movsb and (bad) push add enter fdiv test imul dec popa adc movsb loopne push dec add (bad) add jge pushf stos sti or (bad) sub or cld mov bound dec mov (bad) jmp out mov insl leave dec xlat outsb xchg dec lret outsl cld jl dec std adc in push pop push sbb or mov dec subl out mov loopne lds dec movsb push jne mov fisub ds cltd insl imul fwait push inc loopne (bad) pushf iret mov mov and ds out repz call cmp mov xchg clc cmp (bad) cld test into in dec aam sub rcll add clc (bad) into add dec stos dec addb pusha int3 into pop xchg sbb aaa in xor scas aad lods dec std pusha mov sbb mov enter pusha mov pop fcomps adc dec mov sub add inc rcrl xchg mov push pop repz dec aam xor ret imull sahf lcall icebp fidiv inc daa hlt popa lcall aad lret or (bad) mov jnp add int notb inc lcall fs mov xchg sbb loope pop mov pop or fdivrs lahf push insl sti adc ds xchg test repnz (bad) dec pusha cmp mov lahf add pop mov std arpl pop xor faddp rclb cmp rolb add mov sbb pushf add fwait mov shrb mov call lret faddl mov pop push scas notl addr16 sarl xchg sub cmpb lods mov adc xchg mov mov mov roll mov arpl adc mov into shll add jns pop iret repz lret out test mov arpl movsb es std mov mov pop push rclb cmp pop push (bad) out (bad) push xlat imul sub sub fs inc xchg les xchg mov dec mov roll inc fstl cltd in hlt icebp loopne pop call call sbb xchg leave icebp sbb mov repnz and rorb mov xchg addps mov dec mov sahf jmp mov pop scas inc movsb je dec mov inc jp xchg daa mov mov cmp add into xchg leave call rolb stos mov sbb das js aam cmovb xchg xchg mov gs popf push call jo cmp jae mov out mov pop mov lock push test and dec aaa cld pop mov mov cmpsl stos je push mov jno test lret cmc adc xor pop cmpsb repz int stos mov xorb add xlat dec cmpb fs inc inc sub pop and lds ja nop aas mov mov mov push adc jbe inc mov inc inc mov mov xor or lcall repnz dec cmp add inc pop loopne add mov test lret mov or pop lods cmp push lahf cltd and inc push sbb jae push xchg stos mov sahf xlat cwtl leave stc pop xchg test cmp push inc pop (bad) or xchg test xchg add push sbb iret aas or scas movsl lds (bad) xor sub sub divb adc (bad) jo popf xchg cmp sbb in add push xchg out push cwtl shrl popf in test shll sbb sub pusha push test xor iret inc mov mov mov sahf xchg popa pop lods stos inc jbe xchg fldl2e mov or pop rcr cwtl sbb ret mov mov jne push pop or pop cmp ret xchg pop pop ljmp ret add lret xchg or pop jecxz pop lods inc cmpsb push pusha xchg dec icebp mov mov in out or pop call out roll (bad) and fwait js mov jmp push xchg sub mov arpl push or cs ljmp pop or rcrl cmp jmp inc pop dec xor das into dec rcr pop pop test push scas jae push adc outsl jg inc in aas scas fdivrs ss adc or std push int3 repz inc insl rorb mov adc addr16 leave js enter out call nop int sbb push cmpsb mov sarb xor add mov adc mov lock mov insb ss mov inc cltd cwtl push cwtl xor test sub (bad) xchg inc or jbe sbb insb into mov cmpsl push mov mov cmp in mov mov lods sbb iret lcall (bad) jmp fwait dec incl pop xor das pop sub shr cli jae lret or movsl jg inc rcll and mov pop int jl sbb (bad) mov jne sarb fs dec cs stc (bad) xor inc mov pop sahf inc insb pop sti jns lds dec lcall loopne stos push inc xor repnz pop mov pop inc pop mov movsb dec mov hlt sub mov cs (bad) dec jb fsubs loopne (bad) movsb sub loope sbb movl mov dec jo fmuls mov lods push ret push sarl nop ret cmp jo adc pushf mov add fcoml mov dec (bad) fwait sub insl xchg fldt xor test add push and sub sub push pop je ljmp cmp push pushf mov xor push fwait jmp outsb (bad) hlt fstpl mov inc pop test outsl loope or adc rcll inc or cmc ret out push jl pop sub gs cmp jbe es movb inc rol int3 or iret cmp (bad) pop stos inc sub fiadd pushf adc and mov add out mov xor inc push mov (bad) or out push bndstx dec adcl xchg inc ret sub (bad) (bad) int3 test push popf adc lock es inc push jmp ss repz int xor pusha popa rorl add lds fistpll call cmpsl xchg lock xor or decb pop jmp fidivrl jae mov sub repnz xor outsl in dec call push popa and lock scas scas push push (bad) roll shl andl cmpsb sub pushf rorb inc xchg (bad) jne mov lods push inc out sbb adc lock inc inc scas stc push adc lods jg dec jmp inc lahf sbb test mov test and mov mov (bad) sub lds (bad) and sbb mov xchg mov (bad) mov mov fildll popa adc mov jl stc dec leave and add push mov pop push sub mov outsb mov aam js je into dec test jns xchg mov mov sbb jb cmp movsl popa (bad) scas mov adc popf xchg sbb vrsqrtss or cmp pop xor jl mov jg add ret adc outsl cld sbbl cli shrl sub test dec dec dec aam mov fild xchg push sub push sbb stos les les test movsb pop dec fstl or cmp stos std jl (bad) aad mov leave mulb test hlt mov mov test (bad) sbb (bad) divb cmpsb push fstpt mov es or cmpsl xchg xchg or aaa rcrl lock in out dec fwait jge xor divl test mov stc xchg sbb cmp xchg cmpsl mov sti and sub push clc or lods (bad) repnz addr16 push loopne gs pop or adc es mov icebp in mov (bad) addl mov aam hlt pushf push inc pop cld scas stos fldenv mov dec cli rcl jns popf fldl cmp lahf inc inc pop mov in sub push cmpsb daa jbe stc imul call outsb int pop das shrb cmp dec nop inc mov dec stos pop push dec inc ss iret push mov scas aad adc sub cmpsl inc je test fucom gs dec insl dec jg outsb fcmovb hlt (bad) jp je fcompl out shl mov lret jecxz xchg sbb xchg test icebp push (bad) xor test loop mov mov aam pop xchg dec lods pop or pop in insb jb fwait jle pop adc mov mov push push outsl out push aaa jne (bad) (bad) popl bound stos inc xchg push dec repnz inc shlb inc lcall push jns mov sar push mov mov push imul sub inc scas mov call xor mov push enter imul inc pushf cli push ds sbb dec rclb xor lds ja mov push in fild cwtl pop lret int3 push xor sbb sbb or int3 push loop push je les jecxz bt (bad) inc (bad) dec std dec sbb pusha pushf hlt out js cwtl pop enter push mov dec mov push insl pusha adc push clc inc mov and js pushf cmp repz sarl outsl fdiv bound push push adc lret cld pop pushl inc jl jo stos sbb add movsl push add cmpsl jo dec mov add sahf mov sbb in out mov adc pop test out pop jo inc idivl lock cmp or sti ljmp imul jle lret mov call shrd push or in adc lods int3 cltd in cs add in pop xchg dec and or push inc add mov or rolb jmp shrb test jle pushf stos adc (bad) inc int add test rorl or jo sbbl sub xchg (bad) jbe (bad) inc push jae inc outsl inc push lods lock leave xchg add es adc jmp test cmp xchg mov mov xchg andb dec fsubrp inc and das dec idivb shl adc or int3 into dec inc mov movsl sub clc jne or cmp xor and sbb repnz ljmp sub xor inc mov sbb es mov rcll jg push js jg push data16 lret ret repnz push (bad) jo lea pop xchg hlt adc lahf imul pop cwtl cli roll pushf pop aaa mov lds imul movnti (bad) sub cld sbb inc les out hlt sbb mov and scas fwait xchg aas xor pop jecxz inc or ret outsb push daa imul inc cmp sbb mov divb jbe popa stos dec enter dec cmp mov jp sub popf outsl pop dec xchg pop lcall dec leave and pop and push (bad) and (bad) push (bad) jae and test mov pop test jg xor scas pop push (bad) pusha mov ljmp mov insb xor cs xlat push push lcall mov add and int xchg and inc test sub cmp cmp in adc adc ret ds cmp cmp into cmc out xor mov xor leave jnp mov int mov stc mov xlat int inc out stos outsl push jb add adc jl (bad) inc aaa (bad) dec smsw addr16 jecxz das punpcklbw lea std aad xorb pop mov push xor pop (bad) mov hlt out dec jmp add std sub lock iret mov in sbb popa lret movsl add fldenv dec inc sbb pop jns xor pop mov sti sbb jge shrl pusha pop jae (bad) (bad) or adc and adc cltd in pop push fwait xor jns or xchg pop jg add cmp jmp and shrb xor iret jle repz rcrl flds out push scas cmp cmpsb movsl pusha cmpb lock add add dec push popf daa mov (bad) fnstenv bound das lods loop jno dec aad fstpt lahf add lret push or cmpsl inc clc inc sbb stos or inc add mull mov adc and je add pusha fisttpll leave pop enter add jb stc lods in hlt pop pop jmp movsl push push test das sbb jecxz cltd loop cwtl fadds orl lar iret push or call add dec fiadd pop adc jnp push dec push inc test jl aaa in lods leave dec call popa sub scas cld mov fdivrp test xor cmpsb pushf jmp (bad) test cwtl (bad) and in iret adc cmpl stos adc inc leave ficoml mov mov push aam fisttpll pop ds sbb imul in hlt jg ljmp jge je mov pop cwtl lods ljmp sub or mov mov fcompl fidiv icebp push or loope nop loope xor stos mov mov jnp push fdivrs aad adc iret jge jns jbe stos lea cmp (bad) ja ret inc push outsb xor in (bad) test call sar mov les add and repnz dec inc add cmc adc cmp pop lods cld mov xlat push out sbbb adc sub mov fs in jne adc sbb cmp mov jo out gs dec mov out popa sbb enter mov dec ret dec std mov dec mov push loopne int3 test mov lcall in loope dec sbb add add inc mov loope lds dec int inc push mov pusha mov mov mov mov mov dec pop call xor (bad) je mov jl and pop xor xor inc dec dec int3 inc incb hlt xor in rorb in jecxz mov pop xchg push inc enter adcb mov push int sub aam jo ja inc or das ror sbb inc jmp dec inc arpl dec lea sti fs test add shrb fbld push add xchg add sub test jl adc scas jge push (bad) ljmp mov mov mov sbb in loope pusha loope xchg int stc daa inc sub shr adc mov inc mov add lods repnz pushf push mov inc add jnp enter xor pushf cmpsb imul push (bad) adc lret dec push cmp jne in xor insb push pop cmp movsl xor pop das jmp sahf out mov mov mov jne fs repnz xor nop into leave inc push fnstcw (bad) fucomp mov mov lods jmp dec insb cltd pop add pop push fisubrl daa rcr sbb and in test out push push inc mov outsl mov push inc pop mov mov inc mov xchg fcoms sub fwait xchg jge mov sahf clc adc out sub (bad) stc or imul jp push (bad) cli lods push data16 lods jae lods mov and movb cld je jo xor cmp ret adc loopne fdivs rcrl divb pop call push inc fldcw out pusha sbb jb fcomip (bad) out sahf or fidivrl mov xchg jg mov rcll hlt mov inc (bad) jecxz cwtl cmp cmp orb mov dec (bad) jo sub mov rcl inc dec mov fs add inc and popa inc dec shlb mov or dec xlat sahf out adc inc cmp push clc cmp inc std sbb cwtl outsl dec add cmp test push negl adc lock ja mov xor stos sub pusha xchg push sub rcrb cmp pop push sbb mov sbb sbb and out stc mov dec xchg sub (bad) sbb push rclb and cmc ljmp lea rorl (bad) jecxz icebp out xor cmpsb jge stos adc dec (bad) jle mov iret inc imul orl pop in scas mov sbb jle,pt stos daa inc (bad) jns dec imull pop imul jle mov jmp jmp out in mov jbe push mov and mov adc aad mov mov adc dec xchg xchg (bad) std and mov or mov mov (bad) jno mov sahf int fiadd jmp xchg cmp subl int xor inc sub mov ret xor pop insb je lock mov and and cmp lods stos dec arpl and adc insb out jo pop adc add mov push (bad) jb push loop add or mov push cld xchg jle flds pop cmp rorb int mov dec out sub push (bad) hlt call adc adc pop ds lods (bad) test mov test dec add add enter cmpsb lret (bad) mov stc xchg jl cmp in cli dec pop push jl fildl insl loopne aam scas (bad) sbb xchg dec push ljmp sub (bad) imul int3 in xor jg jne lods lock pop pop jb or add and xchg je xor pop inc je cmp push inc mov ljmp fistpll cld lods stos icebp in xor xor add in sahf sbbl jo sbb push and cmp cmp push addr16 cmp gs and outsb add int cmp outsl cmpsl or jo push jbe js dec int3 add (bad) movsl (bad) cwtl mov lcall rorb mov addr16 ds loope adc fisubl je push xor int3 fistpll sbb fwait jne jb push je loopne dec je cmp clc pop fldt int fisubr aam cmpsl or mov push inc mov jne test cmpsb aam into mov push mov (bad) push adc scas sarb lea andb jmp out addr16 mov push inc cs out call sar mov mov dec mov adc outsb push cmc ret cmp add push pop cwtl adc loope (bad) iret mov fnstsw fadds popa sbb loope in or mov push inc add icebp push inc sub jo mov and adc pop jns (bad) test cmp or mov in push sarl mov lods loop add clc jns push dec enter push fmull insl dec xor fucomi fldenv ds js aad call jno inc xchg push push push sbbl xorl fldcw out cmp jmp stos sub pop mov mov (bad) mov xchg cmp ljmp push fimull or in icebp (bad) cli inc lock xor and ss or adc cmp repnz dec (bad) jmp dec fildll sbb or imul xor scas pusha ds push lahf outsl lret sbb jecxz cmp mov int sbb nop dec sar ret dec and out dec ljmp jbe mov xchg push push and xchg dec imul lret ljmp or sar (bad) iret mov push iret imul and movb jg push fiaddl rolb cmp mov cltd mov (bad) icebp ret and add imul mov push mov xlat mov jb mov inc movl imul lea js fistpl ja fld (bad) cli adc mov mov popa loop pop adc adc xchg movsl (bad) jne fdiv add push or ret jae inc mov shll fdivp das lds sub or bound jmp sbb lcall adc fwait out jmp dec pop test lea repz jo lahf cmpsl dec cli icebp mov imul out adc jmp fs repnz sbb sbb cmp mov mov mov dec inc hlt call test out mov pop test xor and cld outsl stc arpl mov xorb cmpsb jge stos sub inc pop leave push inc adc push mov jae pop jno jp in dec inc ds (bad) jns call pop mov jge mov (bad) dec enter gs cwtl js pop in jae xor cwtl test inc test push pop fdivrl mov in dec sbb push je xor mov gs adc js out je ret js dec outsb lahf ret lea adc popa in mov mov sbb jo movb push add aam and or push loope pop jns inc iret popf in dec push push scas add add lcall sbb and jns rcrl push dec push cwtl rclb push imul test iret jp sahf push aad inc pop test iret es pop movsl xchg mul cmpsl in jp aaa jne js clc cmc adc inc mov sub cmc inc and mov (bad) leave mov mov adc pusha inc add dec pusha and cmp pop (bad) std xor sub add inc xor in mov dec dec mov pop aas movsb or and adc lahf xchg (bad) add mov stos inc mov popf adc xlat push mov dec int3 push mov aaa or loope lock push pop push mov push cmpsb add imul mov je aaa adc xchg pop xor adc out sbb cmp test sub je mov jne sarb mov and aad jmp push stos and or jge lea push cld test xchg add inc mov test push fsubr cmp inc mov inc rorb out mov xchg add cmp push adc ficompl leave pop stc xor (bad) ljmp and rolb add test in mov pushf push dec enter fs xor bound mov push pop cmp pop push mov daa pop pop loopne inc lods dec mov mov pushl mov daa pop lcall lret mov pusha shrl mov enter fwait movsl out sarl in inc sub lcall test (bad) push in nop and mov sub inc stc cli mov and lods call (bad) lods fdivl jb lock mov repz test scas dec xor out int3 inc jl scas mov sbb mov mov or sbb adc inc sub sub push fwait loop in test xor dec adc adc stc pop sbb ja mov lret int3 cmp pushf mov sub sub leave push and xchg pop push int xor (bad) adc gs out pop dec push mov (bad) nop sbb lahf push lea mov xchg in movsb or sbb loopne mov fucom adc pop es ficomp cld lahf (bad) dec int3 jno iret sbb cmc repz rol scas test int3 adc adc mov pop sbb cli insl decb pop jne or enter fstpl mov stc dec dec mov sbb enter in push hlt cmp fcmovbe jmp push test or cltd fcompl ljmp gs dec adc dec gs sbb mov call iret add data16 and cmp mov stc pusha sub stos fs or (bad) xchg xchg ss mov xor add xor imul mov movsl (bad) xchg aaa jne loop mov sbb xchg (bad) mull mov jno dec nopl pop push xor leave mov dec insb and stos mov out test adc add adc das push add mov cmpsl or stos xor push mull stos mov xor jbe fdivl dec in xchg mov fsub mov mov inc repz inc arpl pop mov push stos mov mov into rolb inc gs outsl adc inc adc dec xor stos inc movsl rorb nop dec sarl mov inc out xabort cltd out sbb mov pop jle lret call out clc xchg rcrl lcall addl jge ret mov adc popa mov mov shlb push mov sbb popf lret dec xchg sub add mov (bad) mov xor imul cmpsl mov xchg pop push roll xor enter push lret add cmp add mov inc push repz inc in pop xchg jo les xor sbb mov mov xchg fldl sarl (bad) stc mov cltd pop jle or pop rolb cmp mov in jbe enter fsubrs mov popf fcmovnbe sub arpl xor sbb lock (bad) (bad) cmp push rorb jg stos inc fcmove out mov fs rorb repz lock inc mov nop inc clc mov int xrelease repnz rolb pop iret (bad) aad and inc or lcall (bad) stc dec outsl push lods mov mov lret sbb xchg xorb add dec fwait push hlt pop mov xor std jp dec lods mov push (bad) and int sbb movsb outsb (bad) mov ss adc jno jle sub jl test je mov fcoml test test nop mov push aam movb xchg cmp push xchg loop cs inc test mov movsl out mov je dec sub dec mov cwtl aaa add iret adc mov push enter sbb dec jnp adc pushf sbb vcvtps2dq mov mov pop (bad) ja idivl inc sbb (bad) sbb or push dec roll jmp lahf test cmp out jg fiadd fnstsw aas ss shlb stos sbb nop rcll mov pop mov fbstp jnp jo js (bad) lock push dec cmpsl imul gs mov jae adc mov enter lods lret enter push cmc fcmove push aas inc lahf xor dec mov pop push hlt ret inc loopne add insl int3 (bad) into lea jb inc cmp mov jl lea pop or int cmp push xchg mov addr16 stos pop clc cltd scas mov adc movsl aaa shrb push stos and aas iret mov (bad) push in gs sar jl and out dec dec ljmp cmp shll jne fs push push push xchg push mov adc or pusha (bad) (bad) dec ja imul mov aas in push gs scas sub jbe jb jge pop out mov fs lcall push mov test push push mov lahf fsubrs dec cmp insl into cs xchg push add nop dec sub xchg ss jmp lods jns shrl mov inc push mov fidivl pushl xor pop dec mov fcompl test jecxz mov sbb jbe int3 sbb sub mov ja or inc addr16 (bad) rcrb es jae aas pushf pusha cmp scas out cmp lea and push lret lods adc sti nop jno mov je xor cmp push sbb in jnp inc into (bad) jo rorl or pushf cmc inc mov lcall xchg inc sahf adc mov subb mov clc inc mov insl cmp mov push dec inc nop xchg hlt jge fnstsw hlt fnop mov and sbb pop dec loope les push dec push out ret mov je mov hlt jae pushf (bad) inc or repnz loopne call cwtl stc push and cmp dec aam xor imul dec (bad) mov push in js cmpsb imul jne movsl jge xor mov rorb mov add sub and mov cld jae test xor flds div push mov adc aam cmpsb fsubp sub mov ss mov pop adc call into pop mov adc dec xchg jg push or pop adc jae push dec or cmc setne add add enter aam push aam sbb lds or fnstsw movsl jne mov mov inc dec push add test pop sub cmp xor xchg cltd jmp xchg sarb pop (bad) lret jnp (bad) xchg cmp mov push add jle jecxz cltd stc pop call xlat xor (bad) jb sarb outsl mov adc hlt frstor pushf mov pop js stos inc xchg outsl and in lea lock jno insb rcl push xchg pop push mov push push dec nop mov dec imul pushf test push out add pushf pop mov or icebp out nop mov mov int3 dec lds add push sub (bad) idivl jb test ljmp jecxz mov inc adc or sbb cmp mov scas sahf and shlb inc sub flds dec lods dec pop or mov xlat add xchg fmul lods sti ret xor mov imul sbb pop sub xchg push ljmp test mov mov negb cltd fwait mov mov movsl cmp orl xchg sbb scas jne out or stos inc in incl cs push push dec icebp stos iret adc (bad) cmp push ret adc (bad) mov (bad) dec mov sbb lcall pushf ret sub push imul addr16 mov xor ss mov pop ret ds xchg xchg fldl lcall lock andb cmc mov imul mov pop call inc in cmp rorl mov jle pushf push jmp dec testb out in push xchg das jbe mov jae jns stos mov icebp xorb lods cmpps push aas or pusha xor jle sar ret cld and xor cmp add or push (bad) (bad) rcrb roll push sbb xor push cwtl stc xchg xchg dec xchg mov insb aam lea sub xor sbb pop dec mov ss or add andl clc mov out dec lods mov (bad) jno add out mov imul cmpsl cmc mov add xchg out stos cli fisttp mov dec into dec fs cld imul add push inc incb shrb xlat popf flds inc jmp imul cmp rolb ficompl mov (bad) adc daa add bound lahf lahf pop sbb sbb pop xchg mov pop cmp test push lods in pushf push push in jb das rcll inc in call pop xchg sbb push push aad mov mov dec lock sbb outsl (bad) scas lods push mov jbe or pop pop adc sub jmp (bad) icebp repnz scas and movsb sbb std in outsl pop pop add cmp mov and pop jne fdivr pop loopne xchg test mov test inc popf cwtl outsb rclb pop das jbe ss fwait sub push hlt dec scas xchg cmp xchg inc in dec lcall icebp lods mov pop xchg mov jnp inc roll (bad) rolb test push leave dec mov pop jb pop xchg mov jo mov lret xor imul or cmpl sbb xchg lret push mov cld jns mov cmpsl cmp (bad) daa mov js popa lret push leave notl lcall movsb xor sarl stc cmpsl (bad) cli mov push and jne inc push sub stc mov sti mov (bad) ficomp add jns adc cs (bad) push push test das or push add add aaa cmc mov adc pop cs repnz jns xor addr16 jne jmp mov mov or cmp dec sub scas push push mov lret enter add aam call add pop pop int lea add pop pop les stc inc push xchg in mov mov or sbb fildl lods inc pusha subl adc insl pusha xchg scas dec xor jg rorb insl push test pusha cmc clc je sub ficom or sbb push cmp mov inc call lea and jae adc imul dec pusha (bad) hlt rolb push out ror cmp xor test stos pushf repz aad pop ljmp in dec mov mov cmp fisttpll or shr call xchg loop adc push enter fdivrs cmp mov mov add (bad) jae adcl dec pop jae (bad) das fildll insl push mov shlb mov pop ret mov insb fildl mov xchg retw dec sahf (bad) adc pusha pusha addr16 jge jno jno insl or fidivl (bad) cwtl push lret (bad) cmp add add adc lock sbb es mov adc pop mov in mov aam mov addr16 mov movsl movsl mov mov add repnz enter lret aad imul inc mov je jo inc into (bad) jno adc xor test jo mov outsb dec (bad) inc and pop adc incb insl call pop adc or mov mov ja mov jns xlat push and mov lods rcrl mov fisubrl shrl rcll in leave jne dec dec adc lret pop (bad) mov ffreep lods sub and push leave cmpl pop add (bad) (bad) sub and sub into mov addr16 addr16 xor jns jmp xchg in jge (bad) out int3 test es pop mov jmp sbb inc sub or lea cmpsb mov jge (bad) and mov mov jl mov cli adc add pop push repnz iret mov scas stc mov sub push mov daa adc inc push dec sub repnz push loope cld (bad) test xor popa fbstp in test and push daa addr16 movsl jo or loopne push js pusha call inc cmp int3 in dec bound push cmp mov leave adc xor idivb inc jb adc mov pop pop (bad) sbb out fs sti mov (bad) xchg sub (bad) movsb add inc cmp push or sbb push cld add push hlt sti leave sub pop aas xchg inc (bad) mov icebp mov mov xor pop popa pop mov stc lds push iret out int3 sub repnz dec xchg cltd stos mov fldl adc out stos sbb xchg outsb adc aam push leave cmpb jno dec test je out sbb sbb pushf arpl mov jno bound daa sbb ljmp mov cltd inc leave pop push cwtl mov or lods test xchg push out sub dec push (bad) sbb add ljmp mov dec xchg jno pushf cmc dec (bad) mov cld cld fwait sub xchg fs lods jmp adc ja cltd cs and add les ljmp in lock inc mov adc xor std pop test inc cmpsl les and icebp jecxz mov fsubl or xor shll test es cwtl pop sub mov into sub mov pop sti std (bad) repnz sbb lea arpl mov mov in dec jo or fnstcw cmp mov mov fisubr pop mov sub cmc cmp add mov xchg stos cmpsl add in inc mov ljmp jge scas or imul xchg cld xor or pop inc xchg int3 arpl insl push dec pop mov dec and js outsl in inc in sahf add mov dec std stc xor push or lahf int mov imul fistpl dec add mov ljmp add dec mov fbstp out jg push add lcall xchg cs ret mov fsubs shrl lahf fldenv inc add push jno rolb sub sub pop call push or cld pop je fstl in xor mov xor rolb dec loopne popf pop sub mov test stos xchg or push sarl push insb sub or inc cld data16 sarb roll jnp out inc test js mov mov imul aas inc adc imul popf xor scas aam insb (bad) pop cs push pop mull pop icebp jae mov xor mov in inc pop pop es clc or lret (bad) or cmp xchg add rcrb daa xchg push outsb js (bad) mov popa mov inc stos sbb xchg shlb fcoml add (bad) cwtl stc push ss bound arpl shrl test addr16 xor mov jo sbb xchg add mov inc xchg pop lds movl jo bound pop lret mov jb iret jecxz sub adc fs hlt (bad) into test push idiv rcr dec js cmpsl dec jl xchg and dec adc xchg dec loopne test in cmpsb (bad) jl xchg add mov popf xchg in cmpsb punpckhbw xchg jo cmpsb inc dec mov xor and imul call popf add and or mov cmpsl in xor test pop callw fcomps mov add adc mov push and inc sub sbb push xlat test push bnd push loope jno mov sbb inc xor pop adc insb sub push mov cmpsb jmp cmp mov lea cs xchg lods cmc mov cmp mov mov outsb lods and scas loopne mov xorl push mov cmp out fistl add pushf es sub jecxz xchg aas icebp sub popf scas inc (bad) mov xor aam outsb sbb push sub test mov fs sub into pop push pop sbb call mov mov add sbb into pop xlat hlt pop dec and xor jns xlat xlat lcall push sub (bad) hlt iret js lods lcall out fwait movsl jae mov mov (bad) sti or mov pop xchg mov fdivrs or outsb mov or arpl jnp ret push mov jecxz popf es lea mov lods les xchg ret sahf mov cmp outsb pop xor imul scas (bad) push dec andl ds ficom popf mov nop mov mov ficoml mov lods pop xor mov cmp mov daa cld les dec cmp sbb inc adc adcl daa push jecxz popf es sbb cmp (bad) pop out push popa fldenv inc in jns test push push sbb (bad) imulb jmp mov lcall out and adc jge jne out aad xchg movsb fildll aad mov mov mov and repnz into push sti inc xor sbb cmp mov or dec xchg and mov insl lock ds xchg mov ljmp repz (bad) mov dec mov bound fdivrs test xlat in vpunpckhqdq inc gs (bad) add push inc lcall and inc jmp mov sti cli das sub mov xchg iret adc pusha (bad) stc das rcll cmp in icebp xchg adc lds sbb repz pop mov (bad) aaa add in es push daa in adc lea add das jg mov jbe js adc scas ret stos inc push push sub xchg inc iret pop add ret movsb icebp je mov jo lea in dec bound or aas push jge add mov or repnz stos enter int3 inc adc pusha and (bad) add add rcrb pop xor int3 jno add loop cli out and mov and push mov cmp mull pop in adc out int repnz popa mov das mov stos xchg (bad) mov mul fnop nop and and int ljmp jle mov dec stc lods clc dec jp je mov cmpsl loope xor nop xchg imul sub mov mov mov bound sbb ljmp mov jno sub ret push xchg fisub das fs mov pop xor fidiv and jp cwtl out test mov pop cmpsb shrb xchg rcr pushl xor repnz sbb xchg sbb pop mov cs jno out (bad) mov mov sarl fwait stos adc mov in daa ljmp mov jg mov mov fcoml sub cmp in leave mov mov lock pusha jmp pop in lock lcall mov rorb imul js arpl (bad) xor cmp pop inc or sbb mov adc lds jg xchg (bad) mov xchg div add outsl out pop add pop mov sahf adc or les pop fidivr mov xor cltd xchg dec and data16 scas cmc cmp je mov and or popa call (bad) in dec cmp add insb cwtl mov ret popf cmp and mov dec pop adc sub xchg lahf (bad) jb ret fsubr cmp mov pop (bad) int shll aad movsb xlat mov lahf mov lods les rcr icebp pop or push dec or (bad) cld mov iret jle inc (bad) ljmp xchg (bad) repnz addr16 cli jg aam aas sbb pop sbb mov out sbb adc (bad) inc sub shrb outsl or out jmp imull mov cmpb aaa out dec dec mov and fcompl cmpsb mov hlt dec (bad) inc pop scas cmovle (bad) nop jb mov cmp pop out xchg pop mov stc es pusha stos jl sbb or in pop mov pop lea mov adc orl sub pusha mov repz imul jg test inc mov lods push mov js call fs cmp loopne inc loope fs cld cli stos sarb cmp push mov mov dec push and jns test xor mov test or into push and movsb xlat mov mov movsl mov inc inc inc fldcw cmp mov in in ret out add pop mov movsb push jb sbbb stos pop pop pop cs xchg mov push mov jae add sub jns inc push mov test je cmp xchg sbb adc daa ret push (bad) mov xor rcr (bad) cmp movsl xchg popf cmp sti inc call xchg jae mov sti insb ret mov push xchg mov punpcklbw mov push (bad) fdivl push fdivs clc test sahf sbb add xlat inc inc sti push add in mov adc push lods adc fiadd inc jo pusha dec repz imul push pop cld shl cmp pop or imul push xor pop loopne add scas std adc add es mov loopne mov (bad) push cmp or popa inc mov lods sbb xchg loope dec int jno jae cmpl push fcomps test jmp std xor dec inc popa and mov sbb and adc add push mov imul repz or push ja movsl nop jne fimull mov (bad) adc inc jge push dec fwait jne arpl and test mov add add push arpl pop adc (bad) cmp fldcw enter or (bad) dec and sbb xor adc cmpsb push sbbl out test in cmp ret sub rcrl enter mov icebp xchg popaw adc xor in es jle cmp pop cwtl push (bad) sbb clc push mov adc pop pop pop mov clc sub outsb out icebp scas cmpsb roll (bad) xor imul xor jno push dec mov je sbb jns sbb pop xchg stos push arpl mov cltd cwtl loopne mov mov cmp dec iret cltd mov in and dec sahf stc jae xchg pop or add aas sarl fmull xchg jle leave xchg mov cmp out sub scas ret sbb rolb mov pop jle fidivl rclb sub mov fisubr sub dec (bad) clc test inc leave movsl jl mov sbb fbld out cmp dec sahf cwtl scas lods int3 cmpsb pop (bad) loop xchg ds ljmp xor mov or inc test adc in fs jns push cmpsl inc test outsl mov pop sti movsl jmp mov in mov sbb lods movsl add xor shll xor dec mov push dec repz in int adc mov sub cmc add sbb jmp je imul mov push cltd cmp insl push or jns and mov xor stc insl jl (bad) lods sub andb aam inc xor mov roll js cmp mov jne jl mov or mov mov mov mov stos push xor imul push mov add iret mov outsb mov movsl mov mov (bad) rcrl iret adc mov mov mov pop lret mov mov jmp insb and add test sbb movsb xchg scas push mov dec inc cmp bound addl stc and mov sarb add les into arpl popl pop mov ret lods fisub xchg mov in add movsb cmp imul outsb lods lods xchg or push arpl ljmp add rcrl mov shll cld sbb scas clc add js leave lret inc or lock pop ret adc pop mov pop call pop cmpsl adc fwait imul idivl pop (bad) push aas mov or xchg push push push ds xchg mov sbb push jne ds lds lcall inc adc jns cmp mov ret mov into or mov lcall mov sti ljmp ljmp lods sarl les in dec mov push xchg mov jns sarb jne or mov inc std adc xchg cmp sbb adc dec adc inc ret ret sahf and and mov jae inc mov xor (bad) aas inc push or adc std je mov dec jmp mov lock jge mov add cmpsb inc push popa adcl lods mov cmc mov mov pop jne inc jno jnp sahf mov mov mov add xchg mov fmulp scas xchg jmp arpl xor mov stos sub dec ds lds cli push shll pop mov jle fs adc repnz scas ret cmp dec mov cli je jecxz mov xor movsb stos xor xchg mov dec fnstenv repnz scas mov jg aad sbb gs xchg inc mov sub nop lret sub scas adc fistl jg add lret pushf jmp enter iret mov jnp push jno nop sbb aad js (bad) dec enter cltd lods adc xchg pop or fidivl xor jb and fsts push rep rorl ffree mov jbe icebp mov inc mov lods sbb mov pushf mov loop dec mov jae ljmp or jno les cmp jne lret sbb lcall sbb ror mov inc es arpl dec xor out dec int3 add nop mov pop jmp push push and ficom sub pop jne push addr16 (bad) mov jl pop outsl ret ss stos lea insb leave int3 xchg pop or out xchg sub rcl clc adc dec mov jne mov out mov icebp or cwtl pop (bad) dec andl fs sbb aad push stos xchg jns jnp notl stos fsubs cs inc rcll jg lahf stos push aaa mov fnsave movsb in adcl mov lcall push lea and cmp sahf mov (bad) gs test adc roll mov lret pop jns adc scas in and or in inc push fstps or ljmp les jno repz add ror xor push mov mov push ret lret dec fildl pop or addl xchg mov pop dec jno ror jnp cmp std inc ljmp fsubp cltd mov ds push je ljmp gs cmpsl mov sbb fbld mov push fwait repnz sub fs insb dec mov pop and lcall jnp call inc pop hlt and add loopne stc sub incb in push or hlt inc inc add xchg pop fdivrp loopne imul adc cwtl pop mov add sti leave xor outsb xor test les xchg icebp jl pop or xchg dec push jne test add and cmc sub mov jno pop mov mov aam (bad) rcrl jno std mov mov or add lret test loopne ficoml out lret int in fs fildl adc out jle jmp fsubs das int dec push fldln2 ljmp sub int jecxz adc cmp dec dec insl jbe add std dec enter ret push int3 gs lea stc test outsl (bad) std sbb in out add pop sbb mov push mov mov jns mov pop int das adc mov mov ret inc sbb push mov mov js xchg push mov dec pushf jno iret push or xchg in xchg mov cmpsl sti mov mov dec sti pop sub imul js mov xor jnp pop bound xlat mov mov pop adc xor call mov push inc icebp push test insb dec test test or shrl and jnp mov push jbe outsl jmp ljmp xchg mov cwtl pop mov sbb into pop push arpl xchg cld cld aam shr addr16 jbe sub cmp mov clc xchg scas cmp shrl mov imul fldcw fidiv xchg xor adc mov (bad) cmpsb repnz orl add sbb in imul repnz xchg mov sbb jl subl push (bad) lods sti int leave push jnp dec mov sub nop jmp add cmp icebp mov xchg aaa roll iret xchg in cld jne push xchg jle mov add xor arpl mov or pop xlat ficompl push mov test dec sbb scas cmpsl jno mov jae add dec push and inc add subl add fs or lret mov inc fnstenv mov dec call dec adc (bad) jbe movsb sarl scas cmp notb jbe mov outsl decl movsb frstor icebp mov adc fistl into nop hlt sbb adc dec pushf mov sbb mov push loope mov data16 mov pop cmp movsb dec loop imul jge lock rcl lcall dec or rcll jmp inc jno add push sbb call sub jns rcrb sbb pop lods lods mov repnz xor fs jg sbb mov mov mov cs sub fs je mov es push inc jl sub dec out pop jns or or imul out fnstsw mov fistpll adc pop cs leave sti scas ret push mov ds cmpsl mov test in add lret out (bad) and out leave pop rcll mov call insb inc loopne lods ljmp inc xchg sub shlb cmpsb mov stos cli stos scas sbb add mov xchg orl cmpsb mov das lods xor ja push in fadd and test fs mov xor sahf movsl xor pushf xlat sub gs ficomp mov mov lcall inc sbb aaa daa push mov call xchg inc cmpsb add dec dec adc inc sbb lret popa loop inc sarl sub pop (bad) sar xor and and push push (bad) lods pop adc in movsb xchg xchg dec jbe nop pop rorl or xlat fisttpl das add sbb pop aas pop add jle test ss lods mov orl lret pushf insb (bad) mov mov mov movsl push je inc push std pop mov mov add lcall lea xorl dec fstpt sub (bad) sub mov dec repz in push test jb icebp add cltd or mulb insb mov std fdivl mov cmp push ret outsl (bad) or mov xor rolb in addb (bad) scas add mov push imul push lea add negb push cs mov xchg jp xor sbb jbe xchg cs scas inc and scas push dec stos add sbb cmpsl mov fdiv sbb movsl cltd (bad) lods pushf pop mov jb cli rcrb inc xchg mov in in mov nop and inc stos test stos movsb inc or (bad) dec or mov cltd cmp cltd xor dec mov cwtl cmc (bad) insl imul sbb inc test mov in adc mov into cltd sbb cmp or lock mov xchg mov stos call pushf mov push inc jne dec cmc push mov outsl shlb xor mov inc js pop cmpsb mov cmp test dec xlat cs mov insl add cmpsb cwtl js push or inc pop fwait movsl xlat cmc xchg out jo rcl add mov je xor outsb or test (bad) sahf arpl jle pop outsl adc dec and stos in add add mov inc fdivl (bad) sbb pop mov push mov sub xchg or jb nop out xor add xor dec scas xchg inc test jne mov lcall in sub jp (bad) mov add mov xchg dec loop ret dec into icebp movsb movsl add mov sahf cwtl divb pop pop or jl dec xor in mov xchg mov rclb dec rcll jmp dec sahf mov sbb lahf push adc push mov sahf fstpt dec pop inc pop cmpsb adc mov test cmpsb call clc adc mov into popa mov ror xor or xor scas fcomps shrl movsl ljmp sub sub fdivs unpcklps xor lods loopne push mov jge pop pop fsubl xrelease ficomp popa xchg xor xor lock repz cs sbb mov dec scas popa js inc test lock leave jmp push sbb push nop sub jl and ss in add add xor das jns cwtl sub scas inc stos stc stc xor data16 mov sbb push inc movsl sbb inc mov (bad) shrl cmp mov mov inc jmp add push pop sti mov sbb mulb adc ficoml xchg xor lds addl cmpsb sub cltd loope clc outsl or mov push xchg sbb xor jns jg mov popf sti pusha sbb in insl aam xor lods dec xor adc cs scas clc push loop xor mov cmp pop lret mov mov lea not add inc in mov jne fldl loop cmpsb inc adc cmp scas lock addb mov scas push cli mov ficomp fistpl lods jp outsl sub shr dec sti loope jp hlt sarl rolb dec in inc outsb mov sbb insb dec dec jge jae rorl jnp jg add je das or stos out icebp insb xor jo cmp movl pop push push mov stc pop in mov loope icebp sub mov or push mov lret sahf mov sbb mov jp mov sub or jno out and popf jge shr xchg (bad) scas mov int mov stc movsb movsl (bad) divl iret cs sbb mov ds lock mov push or rorb ffree sbb jl outsl xor ret cld push mov (bad) arpl or popf fs lret loop sahf mov cwtl cmpsb mov stc lret pop push int popf push sub stc scas rorb sarb xchg lcall repnz jl (bad) jo aam xchg out pushf jle popf inc or or mov cmpsl into mov xchg inc sbb andb sbb xchg push push fildl idivb repz call repz fs cmp int3 push sub test cmp lods enter push push repz lods mov and pusha loopne pushf sbb mov adc push (bad) jg and mov sub repnz sti or repz push inc rclb xchg shr sbb loope iret mov or add add negl dec out int3 push xor inc mov and incb jae aaa test lret mov fisubr pop ja les lcall inc lahf lock imul xchg gs sbb pop lahf sbb out std and add mov mov insb mov popf jno stos dec pop jne cmpsl inc jb rol aam and inc or push mov jb (bad) inc adc inc xor sahf or inc (bad) or lea inc fmuls stos push leave adc mov test jo ds ljmp fbstp mov imul inc imul pop leave push cmp into je pop test mov dec arpl inc mov fistp sub in dec lods jnp push in lods sahf cmp clc sbb es lea out add enter and out cld repz popf dec orl pop pop xchg sbb inc cmp pop int3 jp clc cmp jge cld fcmovnbe or cs jae daa into pop (bad) js dec inc test rcrl sub scas mov ret insl pop test jb icebp nop into scas pop add xor imul xchg int3 sbb sarl cli push sbb or out mov test ds fwait or ret jl test inc in mov pop pop lahf shll add and ret int sbb adc leave sbb jne int xor iret fldenv jns loope mov and mov mov (bad) fcoml add enter jno mov mov loopne jnp mov mov fsts pusha xchg imul and popa pushf cli mov push rdpmc testl xchg adc lahf pop add push leave into push or icebp mov rcrl mov enter push push lods (bad) in jb cmp mov xor fcmovu loope leave stos mov in ljmp mov add (bad) inc enter add (bad) pushf out dec push jae xor dec push int3 push cmp shrb test std mov pop loop shrb sbb push popf xchg fcomps lds and repnz push pop mov mov mov stos mov mov ret mov insb fist pop or mov subb mov outsl dec mov stos imul xor std xor sbb inc outsb loope jge xchg xchg std sarl lock push push pushf dec lahf icebp add rorl dec and add mov sub (bad) pop sub pop mov ret (bad) xor (bad) dec mov dec and inc (bad) sti push sti pusha std pop cli ljmp test inc mov hlt push dec in mov xor out mov pop xchg xchg and test stos ret arpl and stos addr16 std pop add iret xor lds cmpsb and pop mov stos mov mov out movsb rcll lods mov rcrl out jae shr jo popf mov icebp sbb cmp cmp dec dec in cltd xchg aaa jb xchg aad int3 es add mov or je cli ficomp push dec cs adc mov push rolb xchg sbb sbb cmp mov hlt sub repz jl inc jnp pop outsb sbb jge,pn add xchg mulb xor int3 arpl adc dec dec sbb adc inc lock mov enter xchg sbb pop push inc adc mov cwtl and (bad) and das iret push aas sti xchg lds push scas negl vpackuswb jmp mov sbb nop and mov imul sub push test ljmp stc adc or stos lahf (bad) lds shr xchg xor stc enter dec loopne int sahf ficompl imul or (bad) fwait insb loop dec add inc push jg and leave pop (bad) pushf inc add push add nop xchg icebp je addr16 jl push push add lock movsb jg int push mov pop stos roll inc shrb js clc sub imul push aas dec movsb lea popf mov cwtl movq imul test adcl mov mov add or enter or popa or mov sub int add loope leave lds sbb adc cmpsl inc mov push inc into mov scas bound mov lds jmp dec sbb imul cmp and arpl arpl pop xorb imul outsl jne cld pusha rclb outsb sbb pop dec (bad) mov (bad) jno lea xchg sahf xchg jns adc inc hlt cmp icebp push outsl jo xchg pop dec add dec insb xlat out jns movsb mov cli out shlb xor xchg xchg push mov mov out aam js pop sub cli into and pop (bad) shr int xor inc test jns adc fs daa clc lods ljmp xchg decb jnp push movsl into rcll movsl mov movsl cmpsb pop insl mov mov lods jmp sti push lds and mov jo cmp cld and xor mov push loopne in sbb movsl dec pop rcrb int3 scas jecxz adc sub negb out out in repz into repz mov and push gs mov xor inc pop add jge mov std mov dec sahf fdivrs rorl jp cmp ljmp inc adc mull sub adc mov cmp adc (bad) ljmp in add je cli push (bad) mov mov push lea lock pop pop rcrl cli incl lea sbb data16 xchg rorb lods (bad) out and push inc imulb fwait cmp stos xchg dec and xchg mov push sub (bad) jbe mov pusha daa test ficoml mov xchg inc inc adc stc push mov jecxz fiadd (bad) pop mov pop iret cwtl pop xchg cs cmp cmpsb xchg mov movsb push jne mov push and clc pusha adc push (bad) fiaddl push cltd sbb lods inc dec xor lock imul rcll jno into data16 movsb lcall aam xchg ljmp hlt cmp and ret lea sarl cmpsl push jb out aam cwtl mov stc mov in jle push andl sbb mov adc in ficompl shr cmc je aad leave popf popa pop (bad) lods cmp sahf jo (bad) sbb mov adc xlat es bound jg mov push loope aas xchg jmp jb add push xchg cmpsl mov js mov xchg or xchg cmp dec mov mov jo mov sbb inc dec and iret out push pop push dec lods mov mov pop test js ror sahf out mov pop repnz hlt ja movsb loope cmc xor out cmc pop and xchg dec adc inc add sahf sub xchg push mov sar inc jo outsl mov jno mov xchg inc and out (bad) ja mov sub int3 loope cmpsb sbb push hlt out out pop xchg mov clc push sbb scas (bad) jb pop insb push cmp cltd xchg sbb cmp (bad) enter mov sti push push (bad) in jne sub jp test loope mov xchg pusha jmp dec int3 cmp inc (bad) aas lcall and fldl2e jmp shl cli (bad) cmp enter adc insb sahf cli inc insb mov jnp pop mov mov faddl ret outsl xchg enter bound fnstcw cmp xchg movsl mov cmp (bad) in ss lret je mov dec jae mov inc outsl (bad) mov push pop cli rcll cli (bad) xor movsl repz mov xchg pusha out outsl clc les sub mov sbb leave lea cmp jg jno cld fisttp xor dec dec xchg xchg jecxz adc xor clc inc jns and xrelease movsb xchg cli lea js test adc cmp scas aad dec js push pop out (bad) aad fs inc gs test hlt movsb cmp pop push jnp inc mov insb call sti idiv imul mov std mov mov pop lods in pop (bad) or xor stos and (bad) lret test sahf stc sub mov stc das sub cmp (bad) cs pop cmp fcomip mov xchg repz (bad) jbe mov jns lahf xlat enter repz mov mov mov inc in xor dec cmpb icebp (bad) daa pop (bad) sbb repnz mov mov (bad) stos mov mov rorb or adc pop jae das ja movsb test inc dec pop xchg or insl jne jecxz test or das ficompl sbb mov sub rorl dec inc push mov icebp lds or inc dec pop sbb (bad) movsb mov sbb mov orl insl (bad) cmc addr16 inc aad repnz movsl jge in push mov xchg dec inc iret jl scas ss rcrb jb movsl lret pop or and das pop (bad) push jp jecxz jo popa mov adc jg frstpm(287 pshufw outsl cltd pop test shl pusha pop jg mov (bad) lret aaa mov clc push cmp or mov test jo jae jmp push pop jl popf cmp jns push mov arpl pop adc or ljmp adc xor cmp mov pop hlt jl lret or (bad) inc in aas (bad) into mov or xchg cmpl stc aaa dec icebp mov adc adc daa sub (bad) rcrb notb in mov xor lods dec inc stos stc scas jo test jmp repnz rclb mov in insl lcall emms cmp (bad) lret les cwtl or loopne mov jo mov mov (bad) xor xchg fprem1 loopne lock (bad) cs xor pop pop addl roll mov sub inc fcoms loop std sar mov dec ficomp mov adc dec mov add sti and or xchg push sbb fs imul dec fbstp sub cs jge fdivp xchg insl lea ficom sahf dec addb (bad) in xor test sub or outsl mov mov lods fdivrs daa mov inc insb sarb xlat xor mov and inc push push push int3 nop and popf aad push imul or jns rorb dec sbb fcomps iret imul dec or add test (bad) ds sub stos repz inc cmpsl into js clc cmp out mov fcoms insl or and cli or lock dec inc test push fsubrl dec (bad) jae pop jnp out mov lahf ret or push out inc pop iret fsubr call ret xchg shr push in lret shlb and adc mov stc xor (bad) and mov mov (bad) push addb sahf lock dec loopne push or jo enter scas inc dec pop js xor je cli mov xchg (bad) addps test lods int inc (bad) hlt (bad) mov test lret mov and fs jp xor das jle xchg (bad) fcoml data16 (bad) dec (bad) jo lcall lret js push test insb mov sub movsl dec es mov inc enter in jp dec je add xchg xchg adc out fmulp or jp pop sub int push and jmp fimul movsl loopne test mov in push icebp lea pop mov jbe xchg (bad) dec push mov ljmp push mov mov mov adc sbb mov call mov mov mov mov jl xchg stc or cltd mov (bad) and fcmovnu aas into inc out gs repz imul mov test push add push popf out rcr (bad) testb test test mov cmp add lods scas cmp xchg and iret dec lea es cld mov mov cmpsl mov cltd lret pusha xor or cwtl sti cli add repnz mov mov mov bound iret (bad) jno popa fidivl push mov pop inc or std xor or xchg (bad) jp call inc xchg sbb pop ss adc cwtl jo daa dec (bad) ja test cwtl dec inc test sti (bad) or pop fadds in inc call mov adc repnz dec cli pop addr16 and popf cwtl cld mov ret mov in and lcall ss push ret sti js lahf mov dec (bad) xchg pop inc hlt mov adc cltd into rolb add cmp jg daa cltd mov fbld xchg (bad) inc xchg or into sub sub out jge pop pop je cmp movsl jle push pop fbld outsb cmpsb xchg dec psubsb xor lea lret and pusha push mov sbb sarb adc test cmp into (bad) cli ja das ja push and stos gs pop cmp std jecxz je mov pop and pop adc fs xchg pop xor mov pop sbb iret add mov jle imul sub out lcall pop (bad) jo push cmp bound aas mov adc cld fidivrl sahf mov push lock movsl sbb lcall mov adc or iret push mov cmp inc inc mov data16 sub jns sti mov sahf add adc ret lds mov jmp insb mov lcall inc loopne mov pop sti adc test push stos imul shrb call push inc xchg sti out inc lock xchg jae pop addr16 lods jmp jge cmpl xor jle sub sbb jmp repnz lock mov test ds mov inc jp jle push cs outsb push jge in ret loope add test xchg imul arpl roll dec movsl or das pop in xor adc or mov add add xor out jae cld imul jp mov repz pop adc sub xchg mov sbbb inc pop call cmp push repz lods dec push xchg sahf mov lock loopne adc cmp mov and dec stos insl stos pop push movb mov sbb scas xchg pop int ficompl iret lea adc adc call aam pop cmpsb jne loop adc loop adc mov inc subb pushf ds adc sarb out jmp movsb rclb aad cs ret (bad) clc stos add adc cmp cld iret dec addr16 mov lret xchg fidivr add jns stc jne (bad) in call fldcw stos push dec repnz iret stc (bad) mov popa pop adc push xor pop dec sub xchg nop pop nop pop pop sbb add call mov call pop lcall call or repz cltd stos repz mov js stos popa mov imul scas int3 movsl or fcmovnbe hlt xchg mov call push push sbb mov fs push test daa sahf loope in gs mov in pop (bad) inc lea pop clc stos inc sbb in mov add movsb sub push push push inc jo cmp jb (bad) pop and (bad) repnz cmp sub lea mov je jns scas mov cmp rcrl repnz push pusha xchg and inc stos jo notl sub shrl mov loopne mov lahf iret cmpsb mov imul pop cwtl pop push das add bnd push mov stos popf fs ficom or movsb fcmovnb mov bound ljmp cld add xchg int3 (bad) mov in fwait mov js push push mov mov pop shrl add inc sbb sbb ret add cmpsb insl sbb xchg jno sbb popf int3 loop hlt test test sbb add adc imul inc sbb pop and jbe mov cmp sub jp call cmp scas std lods in in fdiv mov mov dec inc (bad) imul jae mov adc popa sbb scas jge lods pop and adc mov sbb add push pop xor lock push and ret (bad) jl jo add mov dec push add (bad) enter popf outsb lods pop insl sub lock cmpsb push or stos push xor (bad) jge cmpsb sti call test jne (bad) jmp mov scas mov inc sub loopne jg test (bad) cwtl cltd rcl movb popf in dec aas (bad) repz mov out push dec push sbbl gs mov pusha xchg ljmp cmc test out insb push push mov movsb mov stos push icebp xchg dec jo (bad) sti sbb and in out leave orl inc sti add jl call pop xor inc daa inc or (bad) xor adc xor jno insl rorl mov in jo cmc or dec and daa sub bound add pop loop and insw fs mov adc mov and adc mov jecxz sub mov je arpl or movsl add enter in out adc mov mov dec (bad) pop mov arpl sub lahf je mov fcomps ror adc mov mov and js add sbb xor (bad) call dec cmp lods and inc daa in mov and aam sbb nop movsl rcr xor sbb mov loopne xor divl in mov mov jecxz mov jns mov arpl or scas inc mov aas stos dec or mov jns add mov or and mov pushf adc sub imul (bad) or clc inc inc push sbb push les (bad) jns mov bound and icebp add sbb add les mov gs lds jp int neg stc sbb jmp pop hlt lahf add mov jl or lret mov sbb lahf cmc adc pop mov inc orl add int3 sbbb jo jl mov inc pop lret in stos or jae xor gs or fwait imul fisubl mov add xchg fs pop add mov lea pop xchg arpl jl repnz sbb lods jl jmp push mov icebp pop outsl jg mov test sbb iret dec pop xor mov out push sbb jbe jmp fcoml cmc aad sbb and cli adc xchg cli into jecxz sar push adc xor sbb pop jecxz pop cmp sbb sbb jmp mov push rorl lds fstps add les mov inc mov jmp iret add pop sahf repnz mov xor xchg (bad) xor cmpb test mov mov cld sbb test scas (bad) push mov pop xlat sti ret inc test rcl push in xchg mov push scas idivb loopne pop inc test ret sahf imulb and int pop ret scas xor mov idivl jns xor (bad) jns cmp dec fwait int3 pusha cld xchg rcrl mov mov mov outsb gs dec pop iret bound adc xor nop mov jmp jne hlt dec int3 cmp int3 cmp aad push mov dec xor mov pushf sub pusha clc xorl cmp jns pop test pop test mov mov fnstsw testl out rcrb enter (bad) fsubl int cmp inc sbb repz out xchg dec data16 sarb fstps cwtl scas mov mov out out (bad) push xchg lods popf dec test imul lcall jnp lcall pop lods cld lret inc std scas cmp (bad) aaa fwait and dec mov push dec push xor push cmp gs test int icebp xor test xchg fs lock shrb outsb out push ret ljmp or mulb lods fs and cmp fdivp fidivrl or inc cmp fsubs iret in ret or or and icebp add xchg lds jnp mov xchg movsl pop and arpl loopne scas clc cmp push push dec xchg pop gs addr16 xchg pop push add bound add loop dec cmp lcall mov pop mov jne pop jbe nop loopne into mov sub (bad) pop and addr16 jmp jb jne pop push insb pushw sub xor mov nop in cltd mov push cmp es mov mov jle xor imul and mov testb jl add lock cld xchg pop mov xor js,pt mov inc (bad) push add adc out push aad inc adc sti loopne daa pop mov dec sub lahf jno nop and scas sub or icebp xorb (bad) mov aaa in int3 inc jge or outsb test sbb shr and xor icebp mov xor ds or inc cmp test loope xchg pop mov push jmp les in push xchg arpl xor sbb rcrb mov lods sub cltd mov rcr pop sub cltd mov add dec jg inc xor imul and fwait out in test je (bad) aad dec scas push xor mov jmp cmpsl dec push xchg pop xor mov fmuls in jo adc call mov data16 or xor cwtl mov or arpl (bad) mov test dec mov mov jbe push push loop dec shll ds jno test mov scas xorl jb or aas fwait arpl cmp mov xchg pop mov add dec mul pop mov popf add aas or inc mov push lea test lods xchg and fisttpl mov xchg scas dec in incl out (bad) sub jmp cwtl fs out add shrb stos pop mov mov jo subl mov mov rolb xchg adc test xchg loope mov std jno dec adc mov mov or jno hlt inc dec add adc call add pop imul pusha cmp ret call add (bad) mov mov sub sub mov js enter aas pushf push rcl js mov clc lods push fnstsw push pusha rcrb ss orl push mov sub cld mov xor in pop xchg mov mov fwait inc pop jle sub push dec cmp pop shlb xor punpcklbw int xchg adc test jae fsubrl inc pop mov cmpsl adc aam test icebp jmp xchg pop rcr push push mov mov outsb lock add mov scas sarl ljmp mov xchg adc scas or push pusha fisubrl inc cld call dec dec pop push gs test mov stos aam xchg and mov jne dec ss iret orb mov scas mov out or movsb mov mov je (bad) adc sbb push (bad) cld and dec jecxz outsb inc fs insl xchg or push mov push dec or xchg adc adc inc add lret adc (bad) insb daa call pusha xchg outsb push test idiv sub jge xchg iret cmp psllq and repnz and add int das inc push adc mov in lds movsl and jno push mov sub mov cmp (bad) push dec cltd push xchg jp loop cmp scas push cmpsb adc jecxz and lock cld cmpl sbb sbb dec shrl add jo lret mov pop ljmp add mov push push ret xchg push push jnp pop icebp push popa int3 sahf shl jns mov mov mov mov adc rclb movsl xchg jp jp sub ja faddl add imul movsb movsb repz in les push sub out sbb jno into push jns scas decb adc mov jo arpl sbb data16 fildl bound repz clts mull add fimull add pushf std adc aad dec lahf (bad) jle xor push cmp cltd push (bad) cmp imul test pop sbb mov dec xchg mov cmp mov test mov je leave stc jp pop xor push add cli movl les sbb pop jle insb rolb push mov das leave (bad) in add insl mov imul mov xor pushf out cmp xor stos or clc in fwait mov xor jle pop in cmc stc and and dec sbb lds sti lret imul jge add dec pop jmp mov push test ja inc sub je inc imulb jb push mov dec push and pop or in adc dec les dec sbb adc xlat add jns lret out inc or inc mov or fnstsw pusha frstor dec movsb sbb sub mov mov jne fwait scas (bad) test mov aad int3 add stc dec mov xor mov stos jbe cmp mov lods inc add mov adc clc lahf call jno xchg inc (bad) jge push ret fs push lods xchg icebp cmpb jb add pop mov inc add and mov (bad) pop repnz leave dec adc and (bad) (bad) push xor xor inc ja jbe idivl fdivl pop addr16 sahf lea outsl fsubr leave jne lds and lcall and inc xorb jbe add js mov out es sbb pop (bad) addr16 cmpb adc adc loopne cmp mov shrl sbb imul repz cmp insb sub cmpsl jge push aaa je pop mov cmp popa out fldenv jl cmp mov or fsubrs hlt cmp repz insb push jnp jae clc je cmpsb out sbb (bad) xchg push in mov mov lds pop jge push aam sarb les and cli adc mov add (bad) sbb (bad) cmpsl cmp stc push pop (bad) fist jmp lods test or or stos mov jno sbb loope ljmp in push (bad) mov adc icebp pusha aas lock push leave pop add or push xchg mov mov aas imul mov cs ljmp or sub pop jmp repz pop gs mov cmc xchg push pushf dec sbb lret mov cmovnp cmp xor adc jnp movsl mov sti test xchg mov cmp push jns add xchg mov jo pop mov adc push and pop or cld lcall das fldcw fisttpl adc adc mov adc in (bad) ss stos pop (bad) inc xor pop push cmpsl (bad) jle mov mov jo (bad) push (bad) test movsb (bad) pop adc insb push insl xlat add rcrb mov dec or push das push movl outsl outsl dec mov add icebp fcmove adc lret in pop aaa add stc mov movb cld pop mov inc test and sbb jnp and ljmp mov mov fmuls and sarb mov (bad) pop inc shrl dec (bad) out int inc pop mov pop and fs mov insb loopne and imul aam in mov cmp (bad) mov mov xchg add mov nop cli (bad) push pop jp ret test sbb push sbb mov fdivr mov mov jle icebp test pop or sahf iret insb or cmp dec sbb jp mov ss mov ljmpw jmp ja sahf ljmp cmpsl int3 dec jbe pop xor orb mov jmp js,pn and popl (bad) out pop cli pop dec mov push imul jae or cmp int xlat push inc cli jbe xor aad or pusha inc add xchg fcmovne sbb test fcoms movups ret inc jae add xor inc inc dec inc movsl repz jl mov jbe hlt aaa fimul mov sbb adc inc dec mov push sub test add popf sahf jb fist pushf cmpsb ss test scas outsl (bad) ja test fstpt loope add stc xor imul outsl repz lds (bad) mov not add fwait push xor (bad) mov inc xlat subl inc test cmp lods cwtl in lahf jl lods sarl mov xchg mov out addr16 mov mov pop fdiv add pop ljmp jne mov jb test cld fs roll inc jp dec push fcmovnb fcomip jl mov divl or dec hlt andb mov fimul inc xchg iret push in pushf mov jb pop xchg pop push push pop jae fisubl scas clc cmp nop les js xlat movsl fs lcall inc lea scas ja sarb dec cmp mov sahf cmp pop rorb imul cs mov sbb xchg dec pop mov mov out icebp or push pop aam inc jae stos xchg addr16 clc or shrl inc nop scas (bad) or cmpsl inc mov ret mov insb push ret (bad) jmp test cmp jmp es jl mov pushl clc mov jae jae mov insb nop dec adc jbe mov pop mov adc dec lods push mov mov adc pop and iret cs fnstcw lret adc sti jge inc test jge subb jmp mov pop int sbb inc mov inc pop in mov (bad) mov inc jo mov mov sbb dec inc pop stc cli sub fsubl pop lea xor pop pushf mov scas cli dec fsubs mov cmp (bad) (bad) outsl push movsb fdivrp sbb ror leave pusha inc mov mov (bad) mov iret lahf cmc pop jns mov inc sub test inc loope movsl push imul incl mov push sub pusha rcll sub rorl fsubrp xchg lahf pop fildll pop pop mov rclb nop ret test add fstpt push pop sbb addr16 (bad) je xor rcrl push mov sti nop cwtl mov inc out fisubl das pop xchg enter pop rcr lock sub mov sahf in fisub xchg add push jecxz insb mov mov pusha jp mov movsb jno ret in cmpsl push add aaa push lret test mov jp fidiv shl out mov lahf sub call sub cmp cmp sbb pop hlt data16 loopne and fwait iret adc (bad) aad and insl cmp fisubrl pop sahf subl popa hlt fcomps xchg insb sbb and mov sbb sti stos sarl add out push dec xor out sarb push or xor inc mov add stos idivb rcrl outsl and cld lods xchg lahf mov jl ret (bad) sbb rol cmp int or shll pop lret jl mov roll jnp mov jmp movb call dec insl sbb and out pop xchg sbb mov jg je mov inc jno movsl add call mov sbb lret (bad) sahf mov rorb gs push inc icebp lock mov stos scas repnz mov jo mov pop push into ret aaa push fucom lock test mov shlb sbbb test test sbb push std mov ljmp cltd sbb loop push stos adc mov ror xchg sbb enter jmp daa es inc dec mov out arpl cmpsb mov cmp mov jne mov lcall and insb loope cmpsb shr inc movsl fwait mov lcall scas inc cwtl mov mov idiv repz jnp in lahf mov icebp iret loop adc shll in xchg jo xchg std dec cmp cli sub mov cwtl jp mov aad dec divl or popf pop stc mov sbb in jae aad pop pushf outsb cltd std out out push es call sbb mov mov xchg std add shrb test pusha mov stc sub cmp lock dec fcomps cmp repz mov pop add (bad) iret or call ret lods mov pop test mov push stos dec pop cli pop add loope int3 mov xor lret inc adc mov mov add (bad) jmp test popf push mov push aam rclb insl adc sbb bound pop pop pusha add arpl mov or lahf emms mov jae add jne sbb repz lods push xchg lods sub mov out cmp mov mov xor mov outsl loope and jle sub cli pop add mov shrb cmpsl or inc mov pop inc lret dec ja ja xor jns ds mov inc xchg stos xchg mov xor push sti sub fcoml mulb pop or outsb cs cld mov inc loop mov dec call pop jmp and imul test adc lock mov sti xor imul test cmp and mov push inc add mov das sub data16 xor jno mov imul add mov or adc sub jbe pop je xchg and aaa cltd xchg lds inc push mov xchg out sbb dec lahf in popa cmc mov dec dec dec fimul mov ljmp pop xlat push int push pop scas mov or xchg mov mov sbb outsl clc add and inc dec sarb fwait popa fisubr aam push mov das jmp push int test int3 push pusha add fs jns inc je stos aad adc sti cltd out lcall pop xorl push andl gs jno jo es (bad) hlt out dec sti jg push les jnp test aaa daa cs je cmpsb int mov inc (bad) sbb jge adc cmpsb jmp (bad) shll inc cmpsb inc jbe data16 iret add shlb inc enter push or push sbb dec xchg daa test mov mov andl jae lahf sub xor cld jp js jb or add pop (bad) mov mov out mov arpl (bad) push out lret mov jb push push push (bad) (bad) push je xor leave insl cmp ja stos pop stos jl mov sbb and pop stos loopne fwait imul push jbe inc andl cli stos (bad) jne push inc (bad) push mov sub arpl mull gs jbe pusha rorb jns push aad outsb jl sarb aad into dec fdivrs test lods adc std fs aas pop mov xor sbb inc addr16 (bad) out dec inc icebp sub add inc sbb in jb leave imul in (bad) cmc in dec lods shlb sub jle sbb inc cmp jge cli adc mov in lods pop mov int dec jb adc lods adc and cmpsl jo jo fs addl dec out mov jle stos cmp lock (bad) outsb cmc dec rcrb xlat cmp in iret adc out push (bad) push inc sbb adc push xchg cmp loop arpl xchg int pusha (bad) out push bound iret sbb hlt lds and dec push (bad) pop jo sub iret mov scas jl xor (bad) mov push add (bad) les gs push rorl lcall xchg sub push dec add scas push fnop adc andb adc jnp mov sbb ss adc in hlt sub sub push sbbl test mov xchg cli mov push into cli pop mov scas std aam fcoms xchg (bad) icebp jg mov dec sub or sbb jo in clc add adc mov iret jecxz (bad) push loope mov pop mov and adc std sahf cltd fcomps jl mov (bad) mov jnp push cwtl jmp ret in mov mov push cwtl jmp cmp dec nop add jns stc (bad) mov fwait pop and push or mov rcrb leave cmc mov mov xchg fiaddl mov mov repz test pushf pop cld push jne sbb adc dec rcr or push push stos inc in lea aam inc fs push sbb jle scas je out lret (bad) mov in maskmovq divl (bad) jg adc hlt mov fsubs pop xchg mov inc lret push jl mov or jge push push stc test testb mov pop and rclb ds jle xor mov (bad) lock int3 decl imul nop scas xor jb add inc popa ljmp mov int repnz inc add inc xor sbb inc es push mov (bad) pop movsb inc jl lods das bound cld subl xor cmp add scas dec mov lods jge loopne stc push std add addr16 xchg inc xchg bts adc ljmp outsb cmp imulb or sar mov repnz inc xor cmp gs stos push jo adc call or push mov mov sub inc in cmpsb pop pop push fwait rcrb push push cltd fisttp jl imul (bad) or cmp xchg mov lret aaa cmp add cmc dec and cld sub mov or shrl mov test movsb cmp in mov xchg inc daa adc and jo xchg mov or add adc cmpsb popf cmp pop and jl iret jb (bad) xor jne xchg cmp jb das fwait add sub xor fidivr pop adc lret icebp iret xchg xor arpl adc or push xchg movsl test insb jp iret pop adc push jo pop jnp (bad) js ret dec fs and xlat add mov lea inc test or and in inc or stc pushf sub xchg ljmp lods test jmp loopne dec pop cwtl movsb leave cmp push adc sahf sub inc mov loopne test jp pop popa leave faddl lcall mov ret mov dec mov cmp test jge dec push in or push jns ljmp pushf push mov xor push fcomps (bad) and or jae dec int3 adc mov jl lods mov jae (bad) cmp mov mov ljmp or pop push jnp push lahf pusha pop xchg das adc hlt xchg dec dec jo fist fwait jecxz sub xchg out dec std cmpl in call and in subb jno sahf inc mov mov push dec mov adc pop pop movsl lods ss mov sub pop and cmp push jo or xor (bad) icebp mov call xchg push inc sbb jne bound adc test fild adc mov mov mov and mov or push sub sub mov lahf inc xchg fdivl sub dec mov mov insb outsb rcll jl xchg push adc popf inc xor sarb (bad) xor dec addr16 and mov pop ret adc (bad) cltd imul pop dec lock jb push push push add aaa push mov (bad) mov dec add ljmp ret mov inc push pop loope or xchg sbb add add add or and fistpl sbb cmpsl xchg subl mov sbb sti std aad xchg cld jge xchg inc jno mov lds mov inc repnz les lret mov fwait js ficom cli sbb add gs les les and adc fmuls dec mov sti loope dec out jno xor arpl std mov cmpsl cmpsb sbb fs dec pop jg in ficom and mov stos mov mov fdivr ds add gs roll push aad dec lea mov adc hlt jg aad mov (bad) rorb (bad) add inc mov scas fdivrl cmp je mov lahf mov sub aam jmp fstps cs adc aaa scas cmpl inc mov xchg hlt arpl xchg roll sub in in dec jmp pop push mov push mov xor sbb out lods stos hlt int3 int out sbb idivl inc jo sub sti pop fucomi and lock movsb add mov mov xor test sub adc fcmovb jge sbb ljmp jg aad sbb cmp dec inc inc stos sarl xchg fstpt mov ljmp mov cld jg int pusha movsl mov fiaddl int mov adc mov in cmp (bad) ja cmc jne mov sbbb imul jns add ret push adc sbb scas (bad) jp iret or cwtl dec pop arpl in mov stos rcll pushf and (bad) inc sbb test aam dec (bad) iret orb add sub adc sti sahf lods inc call sahf mov imul (bad) subl arpl insl cmpsl outsl push mov jp test add wbinvd out pop ja ror rorl and dec rcrl lret jbe pushf bound jecxz packssdw rcll sub push dec lods jo xchg repz and in gs jne (bad) or rorl popa jo adc push fidivrl jmp outsl pop dec sbb ret jns fadds fsubl fnop pop jne xor or in std aaa out ljmp inc loop jne jg adc xchg push jp repz pusha insb jg fstpl add aad fidivrl xchg out popf outsb cmpsl jae lret mov cmpsl subb pop push pop jnp cmpsl cmp jle int cmp cmpsl dec hlt and rcrl leave xor sub xor insl sahf jns (bad) sbbl mov inc es jns adc cs es insl ret ljmp cltd pop lock mov js lods je add lret hlt (bad) cwtl pop sbb cli sub out push pop sarb mov mov test jl push (bad) fstpl ret mov pop mov std lea jns lidtl clc scas outsl (bad) int3 mov cmpsb jle dec xor imul lea leave sub jg jmp popa cmp mov add push mov mov outsw mov out call mov pop jnp lds aaa enter and add clc lret jmp ljmp ret nop iret xchg jmp or fdivp cld mov dec mov cmpsl mov cli pop xor mov fldt sub (bad) cmp ret sbb test daa jno sub pop insb mov push sar lcall jl jg je cmpsl outsl fcomp mov (bad) loop and sub sub test or add and xchg lods call stos mov orl add mov inc out ja dec jnp rcll mov or test push adc jg add jns rorb (bad) jno sub xlat fisub aam pop inc negb mov jnp (bad) sbb dec xorl mov mov lods xor ja jb mov mov or out popf pop jmp icebp je pushf add xchg jne fbstp jmp dec sbb bound jge bswap movsl mov or push sbb pop aad or bound xchg pop testl mov aas mov out add incl inc sbb stos and push inc out xor fs pop loope adc pop cli dec add lds frstor (bad) mov pop (bad) fidiv mov cwtl bound xor test xchg jle aam imul xchg or jge into adc xlat add cmp popf lock icebp mov or push jge (bad) int movsl scas cmp push dec jne lret pushf inc mov jne adc mov and lret xlat pop int inc adc or xor leave shr pushf rorl cwtl or pop or out movaps sahf lret jmp cmp fldt jle mov daa cltd add and imul jns call and js mov jne xor (bad) jns cmc insl jne xor add add adc push adc aam std lods ljmp inc jmp or fs enter jbe mov or xchg mov (bad) cmp inc cwtl loop xor mov dec mov jne (bad) mov sahf pop lar jle jne dec jge lahf mov mov stc mov and repnz pop movsl sbb mov mov adcb shll aaa jnp inc es shlb xchg lock out movsb mov jl adc mov hlt xchg and mov out mov dec fwait xor xchg cmp lods test xchg lods xchg repnz cmpsb test cmp mov mov cmp mov out loope add add popf sbb ret add push push js adc adc adc cmp (bad) push fmul mov popf rorl psrld and data16 xor mov inc pop dec or in or lahf xor fadds ret inc or lock mov dec (bad) xor and sbb std push xchg test out rclb jmp sbb xchg sbb lods jno cmp sbb mul pop jge icebp into sahf xlat daa popf rclb dec int cmpsl or fwait dec dec or dec xlat icebp ud2 pop in movsl mov mov fwait xchg sub stos hlt shrl sub jne xor dec pop fcmovnbe adc jg aam jo dec rclb cli sbbb mov or movsl sarl loope call cmp out jmp lock mov scas xor out mov jb fcom add jp mov sbb icebp or out mov (bad) (bad) icebp movsl mov lods xchg cld adc pop in adc aam sbb sub lods push mov push pusha jge jl jle iret int cmp enter movsl aam jno aam stos dec sbb add stos dec sbb nop cmc push jns stos std jl xor popf cs fimull pop add pusha adc xor adc xchg dec stc into dec sub inc inc cld mov pop sahf test (bad) repnz or jge pop jae mov aaa out jecxz,pt push or adc cltd outsl les arpl out (bad) fnstcw cwtl outsb cmp push nop ss minps in insl xchg inc cmp out sub or mov adc mov jno push push nop pushf outsb inc jl sarb xor scas pop sbb push das and iret jl cmp xchg mov push dec cs sbb sbb lea push mov add arpl mov lods sti mov fisubl shr imul nop dec js jo inc ret sbb jbe scas cmp insb jb jnp mov pop iret sbb scas jb pop dec sub add mov jnp push cmpsl xor pop inc test inc lcall je xor mov pop (bad) cli pop in jl mov push lret loopne je maxps xor sub jnp xorl pushf ljmp pushf in cmp addr16 mov test scas sti leave sahf enter test xchg mov cmp fstps and dec pushf into test movsl rcr inc mov fldenv push ljmp mov stos mov mov shr bnd (bad) and xchg aas jl lods pop ret mov cmp jb xchg std mov in xor icebp mov cmc pop mov inc push fldt ss xlat ja pop dec insb inc and dec xchg ss mov cwtl jns and and js dec aas pop lcall push sarl cwtl pop add xor stc (bad) int3 repz mov push push scas and repz xchg insb sub add (bad) inc das ret and xor (bad) push imul rcl fs cmpsl jbe adc popl outsb call aad dec lods call or inc fimull dec and sbb ret jns ds cmp (bad) and fcmovbe pushf cmp out cmp mov push adc push mov cli mov ret out mov pop mov xor jae xorl cwtl into and mov inc insl jne iret jg hlt cmp lock dec scas divb arpl (bad) out pushf out xchg jns lods mov mov loopne inc jge rcr fcomps lds jo mov push lock jp outsb or cmpsl iret stos dec sbb gs sub call ja xchg nop or lods shrl mov add imul xchg popf insb pop sub dec bnd into jo or ret insb push in mov sub js mov out int3 in fnstsw jae repnz mov imul cmpsb ss pop dec lods add aam xchg cld test dec popf fcmovb mov xchg cmp sub cmp xchg fmull fnstsw mov out sbb push jmp cmp pop mov jg outsb xchg xor sbb sbb test ret adc iret leave sahf test xchg (bad) mov dec mov jg mov push insb pop xor mov mov mov das dec subl (bad) mov mov jae movsb and xchg jb (bad) std jb scas mov out sub or mov ja lcall mov pop jg dec insb mov insl int3 pushf icebp jmp test mov xor add dec lea ficompl fistp loope ljmp in jns dec scas jno cmp mov or jl rclb mov loopne std into lods loope dec mov dec (bad) clc (bad) xor lock hlt mov into jmp xchg xchg inc add jmp lods int std movsb xor xchg dec insb lods dec or cli dec je or movsb jne int3 in xorb out sub xorl repnz js aaa xchg orl mov (bad) jmp dec jo ds and (bad) ljmp sbb jne push sub add (bad) popf mov inc lea jge arpl call cmp xor ljmp adc lock jae jp aam sub ljmp inc ljmp push out mov mov jbe inc outsb std mov fwait shl test and into (bad) pop xor in add pop pop inc push test std aam xor fistpll jmp scas jmp jl xchg mov push push insl push ja inc mov push or cmpsb stos ljmp or and lea aam sbb push mov dec stc dec xchg lods mov jmp mulb lret stos jecxz les jmp pop push jp mov jae add dec (bad) cmc cmc ja pop es enter mov mov loopne lds inc nop cld mov sub cmp fisttpll cmp jnp jge out inc dec sub aaa test sub dec inc gs adcb cld mov in js les push or imul and in jecxz arpl dec sbb rolb mov pop cmpl movsb and pop (bad) push pop dec stos imul call inc cmp icebp fs into xor add popa and sub adc cmpsl mov ljmp inc jle or dec hlt inc sbb add (bad) icebp or mov cmp mov ret adcl jge mov dec push xor int adc xchg test dec mov enter dec lea and test sahf popf mov icebp cltd in gs push out pop negb push and pusha stos aaa movsb jl xchg nop or (bad) gs jne dec or cltd decb movsl cmc ss jl xchg adc js pushf xor pop cmc mov jl jne fcom ficom aaa mov mov stos test rsm mov inc jmp and dec test sbb ljmp es lods icebp scas add mov adc cwtl nop push fstpt in rorb mov jmp cmp ljmp bnd mov mov rclb mov test fs scas push jne fcoms sbb aam lcall aas (bad) push nop cltd aaa loope test popl dec stos sti mov scas loope push or cltd mov or fst mov int int3 cmp mov mov sbb cmpsl sub test mov xchg mov mov dec jl xor cltd hlt faddl push mov dec (bad) stc mov dec jmp dec lret pop mov jmp mov out dec mov jno les stos cmpsb dec sbb mov inc adc xchg inc clc mov nop pop cmovge push inc les mov insb mov or xchg std mov mov in in (bad) jecxz fsubrp out test repnz adc ljmp (bad) shrb fsts pop inc sub sbb sbb push aad cwtl cmp shrb (bad) std imul lret aad lds std inc aaa jne pop (bad) mov mul cli sbb xor adc inc leave dec repnz push add loop sub xchg stos mov sbb loopne or adc icebp jmp fsubrs daa fsub push push mov js xor out out shr lock push push inc ss call or enter xor jp lcall mov mov push ret cld (bad) and mov rcll js out leave je negl cld call stos pop cld push hlt or xor pop push test std xchg add scas and lock jp jne ss pushf adc jmp adc xor cmp inc loope fucomp test mov push (bad) pushf xchg popf cmpsb fcoml or sbb into mov gs sbb sbb mov jne fstl mov (bad) pop insl push mov sub add xor dec loop add daa movsl jae lahf out xor pop mov loop out and and popa gs xor notb insb mov inc add int in std out loope push popf ret int3 sub ds cld xor (bad) hlt outsl pushf movsb imul fdivrl (bad) lock jmp lahf fdivrs pop je and sahf xchg sub movsb cs imul ds xchg dec jbe fs inc push sub ds pop dec mov and and movsb and cld paddq and in (bad) rcl mov shll xor lahf xchg mov mov inc push movsb adc push rcll aaa cmc mov aad inc popf int3 xchg repnz hlt xor pop scas cwtl cwtl jmp cld lea pusha xlat es sbb jo xchg in call lret xorl xor lret bound push hlt les lahf xchg movsb pop push dec les adc pop dec lock jl cmp imull jmp mov push pop jmp arpl cli data16 aam pop movsb dec test movsb mov pop fisttpll xchg fscale cld stos pop dec adc xchg mov popa mov mov repnz cmp imul bound jns daa sbb enter adc aam mov or aas (bad) cli lods xchg inc cmp loop stos test movsb pushf and jle sub sbb sub shlb pop dec outsb popa dec movsb lock dec push ja xor dec fidivrl xchg mov jl jle clc icebp and or aad sub cld mov dec adc adc pop ret dec mov mov cli or test or mov ret mov mov cmpsb out fdiv (bad) outsl in fcompl cld fwait sbb testl fldz bound xlat out loope hlt test gs mov mov xlat loopne imul mov sbb call fwait mov cmp lret mov xor pop xlat call push loope adc push inc add pcmpeqw int3 test or push mov pop inc (bad) cwtl dec cltd mov sbb lock cs push or sbb sbb in xorb lods mov pop push mov mov mov lods mov movaps cmpsl mov cmp pop xchg xor repz test (bad) xchg jmp push jp nop inc xchg inc outsb nop push or lock addr16 movsb cmp and cmpsl dec dec in int fdivrp pop insb lods leave lret sbb loopne mov jecxz lcall cli aas pop outsb test dec add xchg (bad) xchg cli stos mov testb clc dec ror or (bad) push cli and pop sahf dec jae inc out clc lret inc jmp jb dec loopne xlat dec cld imul xor pusha loop insb arpl cmp addr16 and sahf sub lds aaa sub mov (bad) fisttp push insb cmpl rolb or and xor mov sbb aas sub jb aas and and jns es gs imull or insb add push ja sbb jnp pop dec jle sbb pop push inc imul mov xchg xor inc arpl fldl aad faddl mov or loope pop call in adcl pop jo push xchg test sbb bound pop push stos enter (bad) push scas and imulb jecxz scas pop aad xchg imul iret aam push imul jae jle dec mov jns mov pop jmp adc mov adc imul cmp adc sti daa pop dec int3 loop test inc iret dec in mov lods push xor xlat sbb jge into cmpsb or loop jle in call mov mov inc pop adc cs mov xchg fmull push push inc data16 add inc out sub sub push add sub push push fmuls cmp out int repz push ljmp test stos xchg mov dec xorl in jne push mov rcrl out cmpsl mov rclb and mov inc sbb sbb ret jb imul inc sbb cli leave call add push cltd popf jns inc cld and xor or sbb mov movsb inc cld lret icebp push jmp adc hlt bswap push mov enter in add not jecxz leave sarl sbb mov pusha inc stos mov mov push mov fsubrs fdivl cmpsb push fwait jge imul aaa cmp lds xor popf sbb mov adc fidiv stos sbb adc dec fwait xchg mov es mov push or das jbe mov in lea jmp inc int and mov shr mov sub inc jge jmp in test mov push jmp ss loop hlt cmpsb sbb sbb mov xlat fs test cmp (bad) mov test mov inc adc mov movsb testb loope mov imul ja lea incb adc rcll mov mov nop (bad) movsl in aaa test iret mov ss sbb lods mov (bad) std mov xor jg push mov or mov repnz inc adcl xor imul dec sbb jnp sbb sti (bad) xor lods push outsb and ja cmp pop std xchg stos daa test leave dec call mov pop clc sub in pusha mov pushf xor (bad) aad jle mov test adc mov sbb or imul dec inc add add shrb mov jl sub ja jo mov sbb cmpsb enter in pop call std loopne pop stos imul nop dec hlt mov pop jb gs pop cmp je (bad) fsubrs add xor cmp mov enter inc enter and ror in jno mov pushf adc popf push (bad) rcrb imul push lods adc movsl in cmpsb jl adc je jmp xchg pusha movsb sub sub pop (bad) into adc sti in mov sbb xchg add add sti out in ss pop or xor mov mov rorb nop mov scas call and nop jg mov inc dec mov jl and jmp mov push cmp mov (bad) in inc jecxz cld dec sbb add movsl push inc pop and inc push repnz ret pop aas test imul lcall shrb mov sti fcompl xor mov xchg sbb ds or or test fldl mov mov int3 mull pop cwtl mov popf xor rcr test sbb mov cltd (bad) shrl jbe nop int out inc adc mov test nop mov incb mov mov enter loope out (bad) xor test test mov (bad) sub lods fimul or lods sbb cmp or pushf rcll or addr16 mov lret nop dec pusha mov jg test stos iret lods lods fstpl mov xor (bad) repz cltd sub jo (bad) xor mov sbb rcrb clc repz lock xchg pop cli (bad) cmp lret xchg mov push frstor xchg push shll adc xchg add in mov (bad) fld1 ljmp loope cmp jl lcall sarl xor cltd xor ljmp inc jb fild xor mov adc stos test insl inc enter aaa and mov lahf movsl adc pop add push mov cwtl mov dec dec mov and fcmovnbe ss jnp lods gs loope and cmovs test xchg cwtl scas in mov pop scas movsb rcrb movsb int push sahf dec ja and mov mov sahf and loop cltd pop pusha (bad) jbe push fsubrl cmc bnd hlt cmc lds xchg jecxz gs xor das std pop mov (bad) inc jge int3 out outsb cwtl fnop or cmpl cmp out lods enter aad lea xor dec mov push inc jmp inc fwait mov dec xchg pop jmp loop fsub testl imul mov icebp sub divb cmp fcoml popa cld int3 fs out movsl ret jge mov psrlw cwtl cwtl (bad) lods je loop mov aad pop rclb pushf clc inc pop adc test mov mov orb mov xchg dec sub not pop or dec insb mov adc rcr mov fsub test (bad) les (bad) jmp bound fcoml push icebp ficom pushl sbb mov add inc enter int3 mov mov loop mov mov mov lahf push add dec xor xchg aas subl imul adc mov pop mov daa jno (bad) loop push nop cld ret lcall mov push mov (bad) adc dec sbb push test (bad) imul hlt cmp xchg or xchg dec rcll in (bad) out fsubl gs mov sbb loop aam or dec lods hlt mov repnz pushf fsub sarb jns cmpsb adc dec outsb and out adc (bad) loope int mov sbb lock pop xchg daa or jecxz (bad) xorb sub in or cmp xchg mov iret leave call inc jno push ljmp dec cmp xchg jns push cltd pop std inc mov in mov repnz fs sahf lcall mov mov lock mov pusha adc les stos jo fwait mov sbb lods pushw fldl outsb test xchg and adc xchg mov inc dec push scas sahf dec lahf push mov insb loop mov and cmc xchg fnstcw fdivrl add mov mov push push push adc fldl jge cmc and and pop push sbb lock jnp jbe (bad) hlt fwait in mov cmc fimull pop (bad) scas dec in sub idivb mov js rclb jb add icebp sub cli sub clc test adc and sub lret inc pand cmp mov or pop inc xor std lcall in sbb cltd cltd xchg cmp sbb jl shrb insb (bad) ss lods add pop je out loop xlat lret (bad) div xor stos adc stc out add lods cmp in mov xor in movsl pop movsl stos out sbb fs ds mov inc mov jge mov jne pop stos scas jmp gs faddl (bad) mov lods scas push ret test sbb sub or cmp jecxz mov ss enter and scas mov sbb push mov movsb repnz jbe mov mov stos scas cld ret repnz xor adc cwtl sub repz out fwait mov push sahf xor std loopne in lahf jo shrl mov sub cwtl aam jo push add movsl enter xlat pop push sub and xchg dec push (bad) in sbb mov insb dec cmpsl sub mov pop negb cmpsl cli push adc aaa mov loope mov mov dec cmc xchg pusha mov jp inc mov sahf fdivrs (bad) lock loope jne jmp mov cmp scas loopne popf jl inc mov nop or mov xchg adc imul lret push sub mov add fwait pop fidivrl and stos (bad) jns dec lods mov loop sub cmpsb add fimul mov std dec add mov cmp add lcall mov xchg ljmp xor pop lret pop in adc dec iret movsb sub jg mov in mov out pop and mov sub sbb aaa or adcl pushf mov or mov jecxz pop push lcall mov lea outsl movsb inc test std lock jb insl out std sub imul cmp paddusw inc pop leave cltd cmp sub or (bad) stos decl push sbb fisttp test pushf sbb pop test pop iret addr16 push cli stos fisubrl and mov sbb cmpsb jae push ret repz add cmpsb add stos loop popf mov (bad) pop inc xchg sbb jb push cli and mov push test xchg mov xchg aam (bad) loop inc shl mov insl cld movsl shll pusha push std mov in jnp out (bad) addps into or jge jle push xlat pop sbb aad pusha fcomip mov jmp outsl ja sbb leave call xchg inc outsl cmc xor xor xor (bad) loope lret fcmovnbe mov mov je mov fwait push loope add out adc stos and hlt call mov int ja fcmovne icebp xchg enter int3 pop pop (bad) inc add inc xchg in jge pop in mov lock cwtl mov sub rorl mov loope sub aaa mov push ljmp ret (bad) cmp repnz daa aam mov dec lock mov arpl out sub xlat sub fimull (bad) fwait div push in cld inc into cs pop cmc mov aad add push mov sub push dec pushl daa mov call dec mov mov or jns xchg sar into mov test add notb push idivl xchg test ja cld out ret push mov (bad) xchg cmpsl cli scas or xlat jno adc cmp lods xchg fildl or fucompp daa iret mov xor imul xchg test stc ja mov pop stos push jg in jne and push sti mov daa out jle (bad) das mov jo or pop popa mov mov xchg dec daa subl lods pushl testl mov inc inc (bad) mov cmp sbb lahf sub aad (bad) dec and rorb adc sti cmp fistpll cmp test jo mov mov xchg xchg sti xor ds scas mov xor push mov xor add sbb jg jl jl fucomip xlat sbb sub jnp shr dec and ss lock fucomi mov mov call pusha inc out imul mov int3 stc push andb and and adc arpl mov scas aaa jl out mov pop cmp lcall pop in fs sub stc push out sti scas jbe cmp test xor rcl pop leave mov outsl mov outsb pop mov testb int3 imul gs or push leave scas repz cmp lret cmp lock mov sub aam mov push loope leave cmp pop dec call mov popa hlt aam popa hlt insb adc cmc or lea inc jp notl call stos pop mov sub pusha aad andb mov cmc push cmpsb jbe pop add sub inc enter loop jle cmc dec xchg mov add dec (bad) cld icebp test add dec insl sub icebp fs mov ret ss mov jae pop (bad) xor or jns add pushf sbb dec dec cmp mov jp scas jb jb outsl mov push popa adc push popa jle push popa cltd push pop leave mov outsb hlt testb sub ficomp mov ljmp cmp pop mov jne mov popa cmp lahf mov mov pop cltd test mov or sub add or frstor aam mov inc leave mov loop push data16 inc jecxz sub arpl sub into les pop jg insb mov lea leave lods dec repz test add sub leave inc (bad) daa xor jne outsl popa mov push movsl cltd fistpl loope movsl lods dec dec stos loop and fldl push fxam ljmp pop mov mov pop loopne leave pop mov pop jne leave dec xor cmp pop in push stos loop (bad) loopne add inc popa mov fmuls cmc cld sahf test inc mov push insl xchg or popa (bad) gs cltd out pop and mov and mov rclb dec cmp je sarl sub popa insb inc scas jns enter cmp xchg pop loop arpl fiaddl adc sbb jge add or pushf insl (bad) xchg test push push push push imul cmpsl jno std cltd sar and sbb and repnz mov jbe mov ret sbb push data16 leave lds nop sub aam push jge mov inc notl inc je pop sbb pop push rclb pop jp adc pop jg push push pop insl inc mov push (bad) mov in in inc out adc jb scas stc pop dec (bad) aas xor inc push mov aam out cmp or xchg jo pusha jo xor lret dec lret fadd push cld mov loopne inc gs jo xor call call jmp mov stos ljmp mov add int3 fwait xchg es jne cli aas mov dec add (bad) fcmovb jnp adc cltd mov or insb iret not mov inc dec stos inc lds sti dec mov cmp ret in fistpll mov cmp pop dec xchg or jb iret or push mov js stc test dec mov mov push sub add xchg pop xchg fisubr xor push inc adc mov jbe sbb (bad) loop inc pause pop mov pop sti push mov or lret insl clc les fwait jmp mov sub int in int3 bound adc lock lahf addr16 mov cmp rcr xchg pop addr16 mov or jmp sub jnp jnp sahf fs and sub test lret push and adc ss imul lea lcall aam mov mov xor frstor xchg xor pop fisttpll sahf xchg inc test fnstenv arpl clc pushf or imul jne dec push sub pop out mov je ja test add adc pop mov fwait daa jnp push ret or add out and mov adc shl loopne or scas or mov or lahf adc data16 data16 mov icebp aaa push in cwtl nop in mov push mov sahf xorl cmp xchg out cld sbb test xchg dec pushf xchg push (bad) (bad) ljmp das loope or inc int3 xor jo adc lods xchg nop int mov jbe cld addr16 in mov jbe pslld mov dec iret mov aam sub in inc or mov jne cmp pop cmp lret sbb int xorb dec fisttpl out push sbb mov iret mov adc xor mov idivl out jno adc add lock mov frstor es mov xor gs pusha and je mov icebp xchg popa scas push cli cmpsl loop pop insb in inc lcall das loope outsb (bad) pop jle fist ja repnz sbb or scas mov clc repnz xor int3 insl or fdivrl lahf mov test fs cmc xchg icebp mov jns xchg xor add rcll mov mov sbbb mov dec mov rorl andl popa mov cmp mov in inc scas xchg sub mov (bad) scas cmc inc adc or inc pushf arpl (bad) repz mov sbb mov mov sbb out ret repnz jmp adc out jo or aam sbb test das js jne push sub and or out dec pop or fdivl mov add or (bad) mov mov xchg fwait or xchg cmp test into sbb add call movsb xchg jmp xchg inc stos mov pop sar pop iret adc mov sub lds sbb xchg das sub rep fsubs pop mov push jp pusha mov sbb xor ficoml adc std repnz mov pop cld push dec ljmp (bad) pop inc jo sbb pop icebp es (bad) out call mov cmpsl or or rclb bnd and ds jnp mov jg pop sub es scas xor and mov pushf (bad) add mov movsl scas sub cwtl mov daa lds and sti leave mov ja jnp stos test sbb icebp aam lret mov mov std xchg and jb push jecxz xor fldcw cltd push mov int jmp pop push enter mov add push rcrb ficom mov stc sbb mov lods cmpsb insl inc xlat shlw mov mov adc sbb out push cli mov outsl sub pop mov jnp das and mov dec shrl fcmovu lock or popa je outsl or fldcw out sbb rorb enter push fwait not jno push pop mov jge cmp add push pop add jo xor push les cmpsl mov jl lea imul (bad) psubw cmp insl daa stos and in mov xor mov adc sarl push (bad) sub js out inc (bad) ljmp in stc pop (bad) icebp push mov movsl jbe sbb (bad) (bad) (bad) mov dec popf adc sbb add xchg push pop push xchg xchg mov xchg jle fwait pop (bad) (bad) repz push fstl and cmpsb adc cmpsb dec xchg test push scas mov push mov xorl shl mov sbb in cwtl loop xchg xlat add (bad) xchg xchg cmp fmul and aam shlb loopne test into mov call scas push jl scas push (bad) mov xor adc aaa jb dec rclb js fiadd lret inc scas mov std add push shl mov test push (bad) mov cltd xchg movsb movsl fdivrp mov lods cmpsb xor sbb sub inc addr16 mov shl fist insl jp fwait or sub cmp jo movsb push mov enter lods lods fcmove jmp mov out in (bad) lods out push ret aam mov call lret jno data16 mov pop xor fbld mov in (bad) push or mov jo test fabs adc js lea mov mov xor (bad) out or add mov mov movsl push leave mov stos pop jns or mov (bad) cmp xor mov sub or and mov lea scas in rorl jne xchg std jbe mov cmpsl popa adc mov mov add lods stos pop sub jb,pn es loop sbb cmp push ficompl mov (bad) push sbb sbb loope stos mov stos mov mov (bad) aas test cli orb hlt (bad) loopne dec sarb or mov repz in sbb xchg inc jne mov or sbb (bad) mov hlt dec add and das gs jo int3 mov je mov ljmp push and mov fwait cmc outsb jge subb lods scas ds (bad) cltd mov mov push nop test enter js mov push xchg stc bsr sahf hlt sbb xchg add loopne mov movsb loopne push bnd mov jl std add int3 fld1 mov mov enter test mov mov test mov negb movsl stos sbb in jbe pop or out cmp sahf mov js lods repz or loopne jmp fsubs cmc lods aaa rolb mov inc mov aaa or addr16 jno dec push xor lds les out lods stos stos lret rorb pop mov mov adc or fmuls xlat insb or insb scas call fmulp cld sarl or fidiv xchg xor sbb ljmp sbb lahf cmp mov leave out nop sbb mov ret mov jbe test dec jmp aad mov sbb and gs jns dec in sub jecxz cmpsb in les cmp xor mov in push push push pop lods and xchg or mov xchg (bad) ss shlb dec inc pushf insl sub pop xor push sub daa dec in loopne jl loope mov add cmpsb leave and adc mov test add in pop ficomp sbb test fildl dec nop pop push in dec loope or mov inc insb popl dec mov das push inc loopne hlt mov mov imul fwait movsb inc clc and imul inc stos cmp sbb mov jne out (bad) xchg bound pusha cmc fs fcompl (bad) mov leave push sub jl cli or xchg cmp cmp scas cwtl pushf mov lahf pushf xchg addl iret les (bad) sub or arpl ljmp jo push add pop sbb orl dec inc add aam and je fldenv loopne in fsubs movaps sbb mov pushl xchg je gs mov mov data16 imul mov loopne and cmp cmpsl adcl ss sahf sbb sbb in stos sbb lcall arpl leave push mov mov jecxz mov jb jno dec movb popf divl lock sbb sbb mov add jl out mov rclb add xlat push imul adc outsb movsl sub xchg pop xchg je shll test lcall push stos inc mov mov (bad) jmp mov mov xchg pushf adc inc jo push jns lcall insb xor sti test adc scas adc add add inc push out cmp adc inc orl add (bad) loopne pop mov jl and adc stc dec call and hlt cmc push (bad) sbb jle rcl inc sbb pop fadd mov mov inc push push or call mov ficompl (bad) stos push bound gs sub or mov fcoml popa xchg ret cwtl ficomp daa dec mov push mov mov mov movsb bts pop loope or push stos aad (bad) es mov mov jns je lcall add push enter push dec jne pop popf or mov pop inc and jo cmp add add xchg mov outsb cltd push mov jg sbb push push xor stos sbb aaa or push pop xor imul adc sti fsubrs loop fcom mov hlt mov frstor dec sbb clc shrb jmp sbb cmpsb test repnz xchg or cmp mov clc mov fldcw and jnp (bad) mov jno jb pop fisub sti cmp mov inc pushf sbb pop movsl push xor jle cmp lock cmpsb fisttp es ja sbb mov cmc push mov imul inc mov cmp dec bnd (bad) mov dec adc jp pop xchg imul cltd dec adc lcall mov inc push sub iret sbb or call pop icebp test mov xchg inc mov mov cwtl dec adc pop stos mov dec outsb lret dec inc xor mov repnz leave test stos add inc cmp or lahf lret daa mov mov subl jo push xchg stos xor mov adc fdivl push stc sbb insl call adc sbb or mov je sbb scas divb repnz in adc mov xlat inc (bad) mov repz mov push in lods xor movsl push xchg jnp int3 mov (bad) pop sbb mov ds mov insb ror pavgw (bad) mov jae push js aaa test je sub inc scas xchg mov stos clc pusha or sti aad movsb je jae pop pop cwtl out cmc cmpsl cmpsl and add push ds clc rclb mov mov jle lods xor dec subl data16 cmpsb mov adc dec jne pop pop int3 scas mov jg cmp and dec loope ficompl adc mov mov scas mov in xor daa push and xchg scas add push xor xor push jl xchg repnz push add xor cwtl or or xchg imul adc jmp mov jbe movsb aam out and jnp cltd rol into jo xchg xor ss je adcb loopne sub xchg addr16 out pop movsb int js push sarb (bad) mov jp jl inc stos in cmpsb mov scas sbb mov push mov lret movsb cli add jl imulb cmpsb inc aas ja fnsave sahf inc mov test std sbb loope cltd repz pop push lahf test das ss in fnsave call pop lahf pop or mov mov lcall inc push adc push push loopne jo loopne add dec xor in mov imul cmp mov pop cmp inc mov test (bad) imull mov (bad) cmpsl decl ja jl sub cmp lods lods fsub mov out notl jno jl lret cmp xchg or mov cld dec sub or pop add addl fdivrl std jo negb push mov push addl mov mov sbb arpl int3 mov mov in shrl iret inc jno dec sbb jb nop add mov mov cli out pop pop cmpsl hlt inc pop dec scas sub repnz mov xchg test stc and dec (bad) push int3 pop adc push loop xor inc mov jle pop xorb je sbb pop mov out jno int3 sub movsl pushf test (bad) divb jge jae lcall xchg adc (bad) jg xor cli movsb sub or dec sub mov cmp mov dec and repnz popf lds sub mulb mov cli adc lods dec sub push adc (bad) fsubl pop fwait cli and push icebp jecxz outsl cmc mov loopne sbb mov ja dec mov dec lret js sahf mov sbb test xchg xchg or fist add pcmpgtd rorl shlb (bad) mov cmpsl sub imul and fwait rorl (bad) push sbb adc xor mov (bad) jb test nop (bad) cmp popa orl mov mov loope mov andl mov jp jb inc push mov adc cmp lds push dec and sahf es mov sub inc pushf ss push and lods mov dec adc xchg sub lock mov hlt idivl pop (bad) push push push sbb shlb fnstsw mov cmp pop out cmc stc inc data16 jnp pop negb pop dec movsb repnz mov or inc push pop out adc out mov pop loopne adc inc movsb fcoms or lods cwtl pushf dec repnz je popf inc loopne xchg sarb js or push sub jmp ljmp lea mov je mov mov push add mov (bad) and cmc scas push outsb scas movsb dec jmp adc mov jae lds inc xlat clc out mov cmp jnp cs cmp inc jo xchg push or mov mov mov and xlat popa or decb pop sub cmp out outsb icebp mov loop popa rorb mov mov vpsllw or xchg xchg fidiv test xchg lcall rcrl dec pop (bad) bnd xchg xor dec stos nop mov mov lods jns mov cmp (bad) ljmp repnz inc gs sbb xchg out xor dec jb or test sub sbb dec jo repnz into (bad) xchg out fimull (bad) mov mov and push xchg mov pop dec adc scas mov xchg test imul fucomi xlat adc adc stos xchg push addr16 jo lods faddl cmp push in subl arpl sbb movsl jg pop push lods scas xor (bad) (bad) lods test xchg les leave push pop dec adc mov push xchg out xchg lods cmp pop mov mov ss nop (bad) lret arpl shll add outsl int pop adc dec scas notb ds and enter mov fwait call aaa inc (bad) push ror xor jae push (bad) insl xchg mov add fiaddl sbb lret inc or movsb mov xlat fsub adc inc fldenv dec mov out faddl imulb fs pop xchg jle lret out int3 outsb mov push mov test lret add xor mov fildll mov cmpsb gs pushf mov mov scas or inc std xchg inc test hlt cmp sbb or xor aad add (bad) adc mov (bad) mov mov jecxz int cmp nop mov lcall push nop jge pmulhuw imul hlt adc adc push les lods (bad) xor lret or and jecxz icebp xchg or xchg imul js notl lcall pop xchg xlat loopne jne fwait stos es fldt mov mov and jo pop (bad) rcr or push xchg sbb scas loopne push inc sbb sub cmp clc sbb mov (bad) push xor push cmp lock cmp ja fs mov or mov shrb shlb jmp add pop xor xorl into scas mov add mov clc aad pop orl xchg adc pop rorl or fdivs cltd mov les fnstenv pop lds sti repz pop mov jmp inc rcr xchg out sbbl jo push in mov sahf mov fdivrs xchg repnz mov xchg and cmpsb cmp mov mov sahf mov movsb je (bad) pop lods mov and adc and scas bound xchg ret imul mov inc roll cmp test cmc mov sub mov add rcl push cld adc fbld and dec mov and hlt scas sarb lahf cmp add jl lods cwtd mov fdivl pushf popf mov test xlat mov pop push cmp fdiv mov mov mov jo cltd cmp fsts sbb jb xor xchg adc icebp js cmp insb push imul push adc push ret push jg mov adc push enter adc insb xchg call sbb rcrb rolb adc rcll mov mov inc out and jmp setb add mov repnz es pushl arpl and sub lahf adc fmuls jbe mov jae fwait repnz icebp loopne inc ljmp pop lock mov std lahf mov lods mov aam test add sbb pusha push sbb ret (bad) sbb xchg sub (bad) (bad) jb adc fcoms and or jge mov js sub arpl mov (bad) xor mov lods or and xchg sti mov jmp inc lods sbb jb jle mov (bad) lds lret jbe adc ret add mov jo loopne test (bad) cli adc gs ret mov cmp sar pop sub xchg repz arpl mov loop movsw cmc lret xor sub int aad xor mov ljmp loop xlat xor or dec adc nop mov loop,pn cmpsl stos mov aas cmp pop lods shr imulb xchg dec jae scas stos or add lods sahf mov adc cmpsl push scas fs mov sub add fidivr fldt sub fcmovnu enter popf sbb fdivr xor pop loope mov adc mov or insb add (bad) negb cmpsb mov mov test lcall mov cmc adc jno mov stc cmc mov mov mov jo aaa movsb daa or mov add pop shll mov loop fistp cmp pushf jl ss jge lods pop mov dec call pop (bad) add push mov pushf cmp jnp mov dec inc xchg push popf js ja sarl xlat xor into ret add mov mov (bad) xor and out inc (bad) jb add loop mov dec pop adc sti das mov sub loopne inc icebp and mov ds movsl in and int3 cmp stos xchg add shrl cltd jns pop lods xor sti out inc and lret insb adc (bad) cs arpl sti nop xor mov daa xchg movsl inc rcrb sub and (bad) xor vmovups aad sub into pop mov pop nop jle (bad) scas (bad) jae (bad) sub jb pushf stos test cmp pop sbb lcall xchg xchg stc sub mov xchg data16 call repnz adc insb sub and cmpsl adc dec mov adc sbb or daa mov ljmp add out jne pusha pop pop sbb popf jo pushf es popf (bad) pop push ret fiaddl in mov ficom push in das xor repnz mov bound repz dec or pop inc scas push mov into adc scas iret test pop js push ret xor jmp push inc out fs lea cmp mov fldl leave adc push adc lods adc popf sti mov scas xchg inc (bad) lock jle shl scas rorl lods les mov popf fnstcw mov mov jmp hlt cld mov (bad) push (bad) leave cmpsl test dec add lods sahf push add inc repnz jb ret xlat lock iret mov mov cltd dec xchg pop dec mov dec sahf lods lods sbb push mov call fs je or inc stos pushf xlat and xor or sub sbb mov adc xor ss and movsl push mov adc inc mov add mov mov cwtl jp mov in push mov jl inc mov jae mov lock clc or mov ret in test mov mov or fnstsw into notb lods mov push xchg lods mov mov stos lods cmpsb in inc dec mov andl mov gs negb or cmpsb (bad) pop pop mov pop mov ja loopne ret xchg lods aaa in enter fimul push push stos rcl adc (bad) xor ds mov xchg in sub out xchg std push jb inc pushf dec scas lods xor pop iret jmp jle repz push ret (bad) push xchg cmp sub addb aam mov cmpsl pop jmp jmp aam rcrl int3 mov jp jae push xchg add push (bad) and and sub inc dec cli dec jl scas insl bound test pop jb inc cld les adc loop cld leave popa arpl mov insl lods fmull les xor or inc mov frstor loop leave (bad) out sbb je xor in fldcw xlat mov int3 dec pop dec scas in daa mov mov lret repnz sti mov sbb pusha xor aaa cmp mov push sub loope mov xor mov stos mov xor lds and das add cli rcrl fmul or adc mov lods jp sbbb pop xchg cmp shlb xchg adc mov cmpsl jno add sti roll sahf mov dec int sub push insl fmull sub aam pop fdivrs xor inc scas insl push rcll pop jl dec push xor lar and dec mov out leave mov adc (bad) rclb or dec and pop pushf dec mov xchg mov popf lret pop jns lods sbb test lret and mov inc lea sbb lock popa repnz pop inc cli fsubl jo and fistpll movsb push xchg mov jp inc dec xchg xchg mov ljmp mov pusha xor in pop sbb xchg adc xchg stos and ljmp test loope mov mull lea dec insb pop xchg and fnop dec cld lods pop inc fdivrl (bad) and cmp sbb and inc cwtl push mov xchg dec insb push dec dec jl (bad) int3 stos jmp movsb mov mov js inc dec sbb pop insb dec pop cmpl sbb or imul call pop xlat sbb mov inc (bad) cmp push adc in pop inc inc stc pop lds mov pop es sub inc jo mov or push fstpl xchg pop cwtl loopne (bad) or dec loopne sar stos int icebp dec dec pusha ljmp jo push mov cmc iret js movsb mov mov ljmp mov mov mov insb pushf out mov gs std in rol insb dec xchg es popa in or cmc sbb mov std adc cmp stos and dec lahf ficom int3 xor movsb mov sti mov pop cmp btc xchg cli test imul cmpl and fsubl popa push pop iret stc cwtl xlat ljmp dec or push fucom movl lahf lock js inc sbb aam push test fdivs fwait mov inc in icebp inc push pop sub mov inc js cmp std fcomps shr mov int3 sbb jmp xor sbb inc dec cmc sbb jno mov mov mov sti movsb ljmp pusha jno mov sbb vmwrite mov in pop mov sbb mov test pop dec pusha ljmp push sbb scas or in pop inc fucomip cmpb fdivrs (bad) das jnp pop daa stc dec lods gs fwait mov mov pushf adc push sbb lods aaa sub cmpsl subb sub lahf fs daa push leave rol test sbb por push dec lods insb and push lds scas fmuls incb pop mov ljmp xchg inc lods sbb add mov mov dec hlt push iret rcrl fs adc cmp sbb mov js xor out sub rolb (bad) lea mov int imul repnz inc nop ss clc jns or (bad) or stc inc insb leave fidiv mov mov repnz add inc push ljmp push sub addr16 ret sub insl insb js add imul mov (bad) addr16 mov add pop divl (bad) test dec and stos call adc movb (bad) inc adcb jae cmp sub mov (bad) stc aaa mov and fcmove insb sahf aaa and pop sub popa inc pop lret int mov adc push or lds imul sub sub pop sbb or ret push dec mov and pop aaa fidiv xor lods mov xor or jb (bad) mov icebp cltd inc arpl pop push dec aad repnz daa pushf jg pop sub loopne xor xchg dec sti (bad) pop inc sbb ja adc mov cmp imulb sub sahf stc push insb mov aaa rcl mov cwtl sarb rcrl cmp xchg dec pop in lcall and mov sbb insl outsl lea div add jmp ds cmp jecxz insb dec popf test xchg fcmovnbe incl lea jne lods movsl test ljmp loope dec sbb jge pop test xchg mov push inc in push test inc inc xchg rcrb ja and dec mov nop shr inc fiaddl xor sahf insb loope out mov mov inc stos outsl std pop insb inc sbb xor iret ja cmp (bad) or roll mov mov xchg popf in cmpsl sub ja insb push movl pop cmc adc div mov test movsl pop mov pop mov test mov xchg dec arpl mov popf (bad) out sbb cmpsl fucomp pop sbb dec sub xchg sub jg outsb shll inc fidivl sti movsb bound add dec aad insl jns xor mov jmp mov jno mov sbb jl mov gs call in add out push mov dec adc jp or dec jmp aad jle mov mov imul sbb call push xor lock (bad) mov daa or test dec dec push push mov mov sbb (bad) imul test stc dec mov mov sbb stos and ljmp jl jl dec and or stc mov sbb pshufw int3 xor in xchg imul mov jl imul adc sub cmp shl fcomps dec or add sub mov mov fmuls addb jno mov cmpsb dec int3 ja add jne push subb call xor call orl es (bad) psubw jns jnp std in jns lods sub mov jmp rclb inc mov mov shlb adc inc cmpsb mov fcoml addr16 (bad) cli or fsts add add push jbe push xchg mov (bad) push sub stc fsub xchg in push and sbb jb push fsubl sbb inc clc mov xchg decl pop fidivrl jl dec push dec mov setge movb and jbe popa jns test dec inc aas jp aas sub (bad) (bad) shl fsts xor dec mov jecxz int mov push int3 insb jne movsb (bad) add arpl fistpll cwtl stos sub movups ror (bad) xor leave inc (bad) das insb or push (bad) xlat sti and aas mov add hlt push js clc mov jl add push test pop in xchg les mov cmp insl ret mov (bad) sbb pop dec les (bad) mov and insb mov fadds shlb push adc sbb lcall jno pusha mov cmp inc fldl (bad) in insb sub insb into xor enter jbe int loopne lret ror (bad) test xor fistl sbb sbb xor out lahf jmp push faddp int3 ret and ja dec push fs andl les mov insb add nop jo pop xor pop jns mov jns dec add je or inc movsl in sbb jne testb test pop orl popf and cmp sub sbb pop dec dec jb (bad) jne scas inc and (bad) or dec mov and inc cld andb dec xchg mov push cs add sarb les iret movsb pusha xor push jmp ffree (bad) repz ljmp pusha adc sbb les ds cltd fbld dec lahf mov cmp addb imul hlt push outsl js adc push add in gs mov insb and mov fldt push clc loopne push shr enter ficom ss lret add lcall aaa cmp (bad) cmp daa arpl daa insb lock in push clc pop cs dec in mov ljmp leave mov out (bad) clc (bad) mov aas jo (bad) xchg and cmpsb and ret push (bad) dec scas xor mov sub sub (bad) (bad) clc add xor (bad) inc mov lea push cmp adc insl mov into ret dec xchg (bad) adc (bad) mov mov sahf cmpsb mov dec fst rorl les out sbb sub mov mov (bad) dec add ret sbb dec std xchg add inc clc cmp (bad) mov dec pop mov add or cmp sarb xor mov mov lock repz test xchg dec int push mov into imul rep mov dec mov subb mov enter ss cmc (bad) jno mov ljmp push aas jge popa add pop fbld les in movb ret pop cld pop sbb adc aas xchg clc cld jmp push push clc addr16 pop movsb repnz in ret pop aas mov in cmp dec into int3 push sbb cmp or outsl add lods insb fildll push jp sbb stos clc cmc or into testb and jge fstl xor cwtl pop rclb daa (bad) mov jo movb ja pop mov out xchg cmp int3 ret mov xor test xchg fidivr (bad) aam in subl clc insb insb mov inc cmpxchg8b (bad) iret fdiv sub jnp mov test fs pop lock cmp popa mov data16 pop xchg (bad) sub cmpsl xchg call xchg je ret jl pop stc dec xchg repnz and cld sub sub test ret mov mov nop xlat (bad) xor inc frstor push xchg cld mov cld stc mov addr16 mov push fs shlb dec test pop pop jno mov sbb or addb or and sub leave add mov mov xchg jns adc mov sub orl sbb imull js mov test inc jp daa insb mov (bad) (bad) in dec scas push pushf pop jbe push push jbe mov int (bad) pop in xlat loopne pop aad (bad) imul repnz test xor mov jb add jp jbe mov in mov pop mov pushf or nop aad es adc adc xrelease (bad) xor push pushf cmp xchg inc je pop fcmovne inc (bad) jns test mov jmp mov xlat popl loopne push adc packuswb push pop dec adc inc ss jo je test roll jo cld lds sbb aad f2xm1 out inc imul dec pop pop sbb je movsl push int pop and lret xlat mul mov sub cwtl out add mov (bad) sti add dec lock add rorb movsb mov and pusha xorl xchg sbb je test insb std mov pop dec jl inc cmpsb adc inc push dec sub mov sbb jo mov pop enter jecxz icebp sbb push rolb pop cld dec mov stos mov sbb xchg jns inc sbb add push je subb adc inc movsb add fnstenv lods imul ret xor and clc je lds dec cmp int push enter movsb inc sbb sub cmp sbb leave dec sbb fdivr cwtl xor sti pop mov cmpsb adc mov mov leave jp cmpsl into (bad) jb ss pop shrl repz add cwtl lock test int sbb enter push mov mov pop sub fs dec std les dec adc mov js aam mov sbb or imul out out dec mov pop cwtl imul mov sti mov js pop adc xchg cmp adc cmp gs shlb stc pop pop sahf inc clc pop test icebp jb inc or les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les les .byte out lahf or es jb add jb push xor mov xchg iretw xchg data16 adc pop aaa mov pop int3 mov mov data16 xchg data16 xchg data16 stc mov fsubp loop data16 xchg inc in mov (bad) (bad) add xor repnz orl xchg data16 cmp mov xchg pop pop add xchg adc mov pop mov mov (bad) aad into xchg data16 xchg data16 int3 or imul cmp in (bad) mov mov jmp in xor data16 push mov mov xchg ret xchg data16 insb gs xchg imul jnp enter flds repnz in cli xchg loope mov or and sbb data16 sub nop ficoml xor fwait in (bad) movl popa cmp sbb mov fwait in (bad) movl adc mov ja inc icebp mov dec mov cmp push repnz xorl dec or data16 xchg push sub mov ja inc icebp mov dec es fwait inc push gs xchg icebp lahf jb data16 xchg push sub mov js inc icebp mov dec es into or or xchg data16 push inc mov mov xchg fs aaa fwait in (bad) movl adc mov pop call hlt mov (bad) and cmpsl mov fcomps xchg data16 lods out test movsl mov add test scas addr16 push pusha std hlt pop cmpsb pop mov xchg jmp rolb jg test xchg data16 mov or out in sub lock xchg push push imul pop dec addr16 repnz int xchg push mov gs jmp lds pushf faddl jbe xchg cmp (bad) loope insb sbb xor repz and testl fbld and fsubs data16 outsl mov mov ja sub fsubrl in lds inc stc cmp ds sarl pop mov xlat push in sub mov divb add das jge add sub adc (bad) icebp fcomp mov mov jle jecxz movsb test adc push mov push hlt jno data16 sub xabort sub and mov mov xchg repnz mov inc enter lods movsl fld in adc sbb pop cltd add add pushf mov arpl add sbb and nop and movsb pushf in mov sbb mov mov mov les cli (bad) pop clc (bad) sti clc inc outsl jecxz pop adc mov pop sub dec pop out (bad) std xlat in int mov pop popf pop jmp insb jmp in test xchg jno aas xchg sub inc dec test cld sub push pop cmp les mov je (bad) data16 (bad) xchg jl out mov mov call (bad) lret xor loopne push pop inc sbb pop mov pop arpl test inc jle push xchg mov mov jnp cmpsl cmpsl pop fiaddl mov out in pop mov cmc int3 xor loop cmp fldt call and ss or xor loopne and je or fildl enter add lods loopne push ss pop lods lock (bad) and sub xor pop adc cmp mov xchg mov js insl test shrb cmp jmp enter dec xchg adc addl xorb xchg xor push scas xor (bad) push (bad) (bad) mov test (bad) cmp jle cli jp aaa (bad) leave dec inc cmp mov pushf arpl aas mov leave add xor cmp add aas push aad xchg xchg add push fldenv (bad) aaa push cmp aam sub (bad) (bad) fstpl sbb stos sar icebp rcr xor hlt inc ja mov push xchg mov mov mul clc ja lods jae dec xchg cmp fildl mov sbb pop adc sbb clc popl mov xchg xchg scas or xor add inc jno scas add mov xorl push aaa js leave test adc pop inc out and loop cmp rcrb xlat movsb pop aam or jg aam mov aad mov cmp repz imul ss mov loope pop (bad) mov out (bad) iret mov js mov add nop mov cmp pop out xchg jecxz adcl int cmp enter sbb out jo in adc cmp lahf jle ret ja mov scas mov fs cltd mov in mov jae int3 push shl ja inc out lret (bad) mov lea scas shl test mov imul mov push lret cmp cmp or dec in dec sbb (bad) pusha out insb out dec cmp dec mov jcxz (bad) scas loopne jmp and sub cs test bound fimull mov lods adc cmpsb sub out xchg mov aaa lcall fcmovu or mov and mov lods sbb in mov les inc fidivr cwtl xchg mov aad xlat call mov into loop xchg out xchg out or in call and test xchg iret cmp andb movsl js pop je sub or icebp insl add aas gs mov xchg pushf out (bad) mov aas in movsb outsb aad push cmp rcr inc movlps lock (bad) fdivl push ljmp xlat (bad) xor xchg stc jno cwtl adc jb popa iret movsl out xor (bad) (bad) hlt test xor test mov lods into fistl (bad) addr16 pushf not add jno xchg mov ficomp mov push xchg cmp mov push iret out es sbb push repnz daa daa loop inc lcall mov ror dec push mov aaa (bad) int stc and jmp mov jge fsin mov inc push das cmp sub push sub mov or fstps fnstsw test mov aaa lcall fldt repz xor andb fcoml shrl inc cmp rorb inc stos repnz xlat cmp mov mov mov cmc sti adc into add test or mov aam cmp xor sub cli xchg andb mov jae aad xlat pusha sub cs adc fadd mov jmp push xchg (bad) and pop movsb inc test xchg and fs push sbb adc adc orb mov popf int iret pop (bad) stc test popa jbe and or fnstenv rolb shl inc aam xor hlt addr16 push shr mov (bad) lcall shl incl push xchg repz pop mov imul xor xchg out pop stos xlat rol adc ss cmpsb xchg inc adc test xor or pop jae jecxz icebp leave imul push repz xchg int3 ss cmp cmc icebp push rcl mov pop mov cmp in cmpsl push insl xchg push lods rcl inc add mov out inc jb leave mov xchg add jle pop ds gs (bad) push jecxz test repz add jb or mov cmpsb call outsb mov pop adc xchg sbb cltd ret sbbl lahf aaa jae jno jmp lcall cmp in push pop inc inc daa xchg pop cmp jecxz pop es xor push jge (bad) out icebp int or and adc push push pop in push mov data16 and fs out pop or lcall (bad) sahf sahf js lods test cmpsl push arpl lcall out jae xchg mov jo clc cmp fstpl (bad) mov sub scas push mov jmp cmp mov xor or addb xchg data16 and pop jmp sub in sub (bad) mov ret mov pop cs mov xchg out rcll lods xlat xor xor pop adc xor sbb xor dec sarl sub inc mov pop out popf dec scas into push je xor fsubs cld int mov push fimul cmp aad call repz outsl dec sahf jae dec loope orb cmp dec mov jne and (bad) adc mov or lret xchg sarb (bad) out fsubl leave or adc (bad) dec ficoml mov pop jl test jle xor aad adc addr16 xor add psubq in inc fsub (bad) dec xor mov (bad) ret mov pop and xor dec dec cld add test sbb pop (bad) mov iret fistp sbb mov adc loop jne decl mov mov sti fucomip or call cld nop xchg dec and cmp adc pop jne aad xchg inc xor rcrb mov insl ja sbb push sbbl dec cmpl cs aam dec nop orb push (bad) fs or out sbb (bad) (bad) jl and mov push jmp dec inc call xchg sbb (bad) xchg mov xchg xchg jb add sub daa push xchg xchg imul call pop xor imulb inc push js pop sub ficom xlat mov mov jnp fmull cwtl dec iret jl mov pop jp out cmp cmp in out in into xor cmpsb rolb loop and aam pop call sub pop jp jle out out es fsubrl adc int jo adc ljmp cmpsb fmuls add cltd mov inc push jge enter and sti pop pop mov das int3 ret add shlb test pop call test movsl cmpsb jp rcr cli mov sub aas mov cmpsb and int mov lahf (bad) (bad) call lods mov rcll sbb pop add in push aas outsl (bad) mov cmc fisub sbbl lock pop mov sti icebp jg stc mov scas xor test push scas mov xchg push out mov and mov movl shll movsb cwtl outsl stos sub pop mov jo popf add cwtl fbstp jns aaa lods mov pop out jl bswap ljmp clc fcmovne sbbl xor and jb pusha mov fisubrl jno fisubrl adc int inc (bad) je cltd inc sbb sub stos divb pop cmpsb cmp mov into xor mov jp lret mov sbb or movsb in push insl or stos enter fwait jns push sub cmp lods enter mov xlat fisttpll (bad) mov mov mov jno lods and cld repnz dec aad adc loope out mov dec mov pop aam mov mov jg pop sub pop mov pusha sbb (bad) (bad) ret dec cli cmpsb (bad) (bad) movsb mov cwtl in cmp gs xlat fwait sub xchg sub mov and cli cmc jo sbb daa xchg mov hlt movsl sub out inc dec fstpl lret mov loopne fcomps lds xchg lea mov test adc or xchg mov cmp pusha adcl mov fs test lods xor jnp lcall jecxz mov mov inc fstps add outsl in jle or cmpsb pop in rclb loopne mov (bad) pop pop je stos inc jecxz mov pop or fstps push arpl scas jle (bad) jns inc cmp ljmp dec lods mov xor out cmc cli aaa fsts xchg jns lods push ret les lods pop inc mov (bad) push out inc jge lods es leave jae shlb sub mul sbb xor adc cmpsb or mov dec and adc iret dec in xchg (bad) inc (bad) pop out mov xchg or clc xor mov scas es hlt in cmp jge fimull insb ret mov adc mov pop ljmp xchg dec ror push dec (bad) fwait rcrb (bad) and push push cltd sbb test cmc and mov nop and sti sub hlt int shll nop movsl in lcall subb loope fbstp jbe adc jne enter js dec add push and and test xor popf cmc dec and add pop cmp aaa (bad) jg pop mov repz lds push xor movsl inc pop aam in mov jl jnp or nop (bad) cmp pusha fwait cmp push gs in dec mov ss (bad) inc subl mov or ret push push shlb adcb test repz loop xlat add ds fcoms adc and and adc popl ret (bad) mov es adc inc adc pop outsl mov add repz add in stc lods push jno popa mov push mov incl jae pop into (bad) rolb mov pop ljmp mov lods inc push enter add clc mov mov out pop push ds dec and mov ret mov imul not pop xchg or cwtl pusha dec sub scas inc ss lahf shll jo sbb xor cld ret pop lods add dec mov das sub jae jp or sahf mov or imul sqrtps aam xor iret mov add jp xchg pop sbb add lds jnp sub lock shlb xor stc test sbb ret test xchg jp jne jecxz xchg daa sbb enter adc mov sbbl mov addr16 sbbb xchg cmp lret sub pop jnp shr cmpsb push jns popa nop in hlt or pop mov jl pusha jno mov lea arpl xchg or daa sub xchg jnp loope or cmp mov mov clc test iret add or sbb pop jns shr arpl pusha ret insl mov in pop mov (bad) test mov out cmp sub add xor test or dec lahf test mov mov lock cltd push push sub jle fmull mov sub xchg ret test mov scas daa bound sbbl mov pop xchg add jns add mov flds icebp mov xchg mov push sbb adc gs xor jns bound sub add pop into pop mov and les mov mov dec sub inc inc lock mov mov xchg xor push xor outsl es dec jb sub movsb cwtl adc arpl addb xor test (bad) pop nop or stos lea cli cmp lret mov sbbl addr16 xchg add adc pop mov adc test into cmp enter repnz mov push test xor stc xlat lods jne arpl sub or mov mov pusha cmp ss dec sbb or cld repz push xchg fdiv xor js push in bound insb jg add lock or sbb pop repnz subb mov or popa lock inc loop loopne nop repz or adc ja xor ret inc and add or mov movsb shl mov sub and es sub loop cmp pop shrb adc adc fs and xchg adc cmp or jmp mov icebp loop adc or xchg xor adc lock (bad) xor mov xor adc lods adcl or pusha int3 lahf pop cmp (bad) hlt push call pop add mov cli imul arpl je xchg cwtl push push add mov lsl cmpsl add lock add cmp adc sbb mov inc pushf js add cmovs cmpsb mov or mov jno fsts hlt sbb pop imul pop jns add fsts aad inc add cmpsb daa jno neg pop jns push rorl pop pop push lret mov adc inc add aad test and jl add (bad) sbb sbb add mov sar pop mov xchg andb lock enter add sbb in sbb cmc jnp mov inc add lock leave nop fs xor test iret rcrb pop or push mov mov jnp repnz mov in imul arpl mov insl lds xor fildl mov pop mov lock push int3 addr16 cmpsb faddl sti (bad) pop pop cmp arpl and sub add push repnz bound or adcl cld test cmp mov hlt std out dec or adc inc mov je pop xchg push pop into xor dec jbe andl loopne call addl adc rcrb jo mov push xchg mov std adc or and repnz jl jmp mov sub mov popa xchg pop inc into insl sbb fnsave sbb fidivrl cmp mov insb pushf mov (bad) in mov add addr16 mov or icebp or jo mov shll push adc inc push ds sub ja or jle in pop nop insb dec iret dec fistpll loopne cmp pop add mov fnsave insl sti add shlb roll cmp popa or jge xor nop inc xlat pop pop cmpl sub cmp pop shlb and sbb mov enter pusha dec fcomps test mov nop dec and mov jp push add xor cwtl shrb mov test inc adc jns cmpb mov mov es pop pop sub fsubrl cli fdivl adc push push pop mov and xor stos clc xchg (bad) sbb jns iret sti (bad) imul pop popa sub xor lock adc or cmp je xor dec out in adc mov adc xchg iret or add mov je sub enter sub testb insb add ds cli or mov addr16 lds test (bad) repnz clc xchg in addr16 nop dec push clc mov addr16 add and push mov sub add pop int imul or xchg enter mov cld out xchg sub popa add pushf jp cld adc inc push mov lds ret pusha xchg pop loop xchg or mov sbbl mov add xor xchg bound and push inc add xlat nop in fist pop sub mov pop cmp add icebp sub dec pushf aad lret mov jle push bound mov and (bad) shll pusha xor icebp pop int add sbb cmp jmp (bad) pop test mov or test sahf sbb pop push ret call push jne mov add popa (bad) push push and imul imul in jl adc cwtl sub sbb add lret hlt add jle adc add pop pusha pushw enter sub push test push sti call mov jp clc mov add inc xchg mov pop mov pop jp and hlt js rcrl cld sub rolb pop (bad) pop int3 mov xor mov inc loop nop or push mov pushf adcb sbb cmp nop push xchg lods cli dec loopne add imul in xor xor push inc repnz mov js lods out add fisttpll or dec andl fcomps pop dec xor repnz pop pop aam xor add sbb push inc add cs pop sub pop pop les push lock out add lret jae cmp inc mov add or cwtl shlb cmp (bad) adc sar pop lret test xor sbb cwtl pop mov shl cwtl call arpl add inc pushf cmp pop cmpsl or mov or in testl pop or cli lods add xorb inc sti xchg or xchg outsb jnp ret gs subl rol test xchg sbb cld xchg in cld subb push cltd mov daa or and rcll mov push push int mov (bad) push in cwtl es icebp arpl mov mov cmp sarb push mov pop mov push pusha ret rorb add push mov mov add pslld nop inc scas cmp push jno and mov cmpsb jl jmp cmp (bad) ja cli fistl dec (bad) add ficoml in mov add jno xchg nop xchg fwait in insb xchg jo mov loope sub dec enter rol and mov pop jle push pop mov jbe dec mov inc and lock mov idivb jo clc loope add cmp (bad) lods mov stos cwtl cmp or repnz jo gs pop pop pushf lahf inc lods pop sub sbb jne add clc insb (bad) xor decl push daa or ret arpl imul add fs jl repnz jb add (bad) mov dec sti lock out icebp sub jp or enter call lock notb std and xor jno xchg (bad) int3 xchg sub addr16 sbbb inc cwtl pop pop jno repnz jae sbb ss adc and addb cmpsb add xor dec sub sub add ljmp shrb inc fbstp pop jns add sbb pusha cs test add add arpl pusha (bad) mov cmp xor dec or sahf sbb sub and xor test xchg xchg mov adc les mov add int3 stc inc inc cmpsl jge xchg movb inc nop or aad dec xchg popa es enterw imul pop psubq adc phsubw pop (bad) fstl cmp cmpsb mov (bad) jmp enter (bad) loope mov add push scas call pop arpl jp fstpl inc or (bad) or xchg scas aam andb sbb ror popa push xchg add mov (bad) dec or inc fdivl dec enter addr16 cli rorb dec xor pop sbb xchg jne mov mov dec lea int3 inc daa in cli add dec cmp loop leave mov aam das add outsb mov jp mov inc fmuls jbe jns inc popf pop out je inc notb or mov adcb mov jnp inc scas negl jb test rclb std orb in inc push call cmp cli jle push mov bound push in loopne orb mov pop hlt rep sub clc movsb popa xor push push (bad) mov cmp (bad) out xchg pop jnp cmp dec aam push pop pushf xlat mov test mov insb sub mov add lock push hlt rcrb add jo sub mov leave add and rcrl out repz rorb (bad) fwait add popa dec popa andb adc or add rorb mov out sbb cld icebp inc pushf roll test xchg in jno aam adc in test add add push stos icebp pop fiaddl bound call xchg xor dec jb dec mov xor adc inc push mov xlat hlt addl and ds fmull sub dec faddl xchg and add clc mov xchg loope or mov push addb cmp cmp clc mov sbb test dec pop test call notb outsl fdivr mov pop push dec icebp sub dec mov add add inc (bad) and sub and leave mov rcll data16 sbb inc adc cmp mov mov add rclb jne push xchg mov pusha neg push sti sub lods shlb jecxz cmp lods scas movb adc and sub push rclb call adc xor iret xor pop push aaa icebp add sub imul or xor mov jo insl imul dec jp iret rcll add or push inc inc mov loopne push cli rorb or mov sbb jb test insb mov fwait outsl es jnp cwtl add aad mov push shlb add dec xchg outsl cs out xor push gs dec add push outsl out dec sub scas (bad) mov or add cmc dec insl inc call sbb jg test or xchg adc adc jns,pn cmp sbb inc hlt dec leave iret add xchg es mov loope icebp cmc int3 inc lea loopne xchg mov mov lea pop mov lods add call rcrl inc inc mov or pusha add test arpl adc dec mov dec add sarl xor movsb fwait out sub lock xchg addb sub outsl adc jle add loope sub mov jmp add out add subl add jbe call sbb xchg and sbb psrad pop es and push mov sub dec jbe dec dec sub add pop shrl decb mov (bad) orb hlt stos push mov lahf lret and cwtl aaa push dec fsubl jl outsl in test sub xor js (bad) loop cli cmp in or clc fwait mov xor and cwtl add mov or or outsb push nop mov xor test cmp mov outsl loop nop les ja mov mov addr16 ret bnd inc or dec mov aad pop pop or clc bound push inc sbb in addr16 sub imul lock addr16 mov push add out add mov adc push fldcw mov dec popf pop push nop outsl jecxz loope iret sbb rclb loope clc divb call dec xor cmp and (bad) fwait sub jo sbb pop (bad) sub loopne mov icebp icebp push jo rorl pop insl mov call sub pop mov loope sbb jo rcll lea nop repz mov flds insl sub imul ret dec mov cwtl jb push clc mov push es mov cmc aas or inc (bad) inc pop xchg xor or or sub (bad) xor xor jp xor faddl xchg cmp and lret or cs sbb mov mov jmp std int3 movsb sbb sub sub cmp fmull mov or jmp lods dec or dec adc xorl sbb rcll add packuswb ja stos sbbl dec gs dec pop xor adc ret mov js test jmp pushf lahf insb rolb data16 popf add adc popl enter sbb pop pop sub mov nop inc xchg jmp push shrb enter stos dec insb fadds aaa and inc add (bad) jne jmp cmp sbbb mov xchg inc cld adc in xchg add je (bad) mov cli add or mov or fcmovb or cwtl xor dec adc pop add aad mov loope sbb cld out test ror add xor scas sarl mov mov mov ss rcrl sbb mov bound inc xor jp (bad) mov outsl mov cmpl sbb mov scas sarb dec cmp add sbb xchg and test std subl sub and incl inc and mov pusha mov sub push fbld sub xor sub and mov mov lock sub fs mov and and and xor (bad) jae movsb dec sbbb mov adc popa cmp xchg xchg adcb adc xor inc test and jp loopne loope xor jge add loopne xchg andb jge mov bound mov pusha dec sbb push lret mov sbb mov mov ret mov add es iret dec and mov es jno push into leave push inc jl cwtl test sbb aas inc fs mov push rorl adc imul insl out rclb or sbb rorb insb xchg mov les mov or mov adc loopne sbb push leave test pop sbb cmp jno jno adcl mov (bad) jecxz addr16 into add push adc xor xchg cld aad iret cwtl jne fs and push add addb and or fs jo cld or mov sbb loop enter lret (bad) mov add addr16 movsb mov dec sti mov (bad) adc out jecxz mov or aas movsb and enter dec mov jne add std scas push sbb insb inc xor fldt push leave dec push rcr sbb sub sub push dec or and and sbb ret mov add cli imul cld aam lret sahf add jno push aam jecxz sti clc bound loopne in loope outsb gs cwtl mov jne hlt sbb jns jmp aam dec dec jns loopne lcall mov mov lea dec and pusha add fs sbb add add outsb cmpb xor dec test push repnz repnz js or lock xchg sti xor push mov icebp hlt adc mov arpl (bad) in add daa mov scas loope lahf pushf mov les in mov dec outsb xbegin jne and lock push shll sub or mov loop mov (bad) jne push movsb cwtl mov ds sbb out and je or mov loopne dec imul adcl clc push dec insl inc fs movsb push add push (bad) rcll (bad) mov fsubs pop mov sub insl xorl es xchg push mov xchg inc sub test mov inc adc sub dec not cld adc movsb and add dec jle add pop cli (bad) (bad) dec inc and mov dec xchg add jmp sbb and jmp inc push sub ret dec aam sub lea push fadds nop or (bad) jmp mov mov add pop jecxz cli sub lods adc dec aaa push or into or lcall add mov mov mov cmp push jae xchg in add lret fistl add into loopne xchg nop shl gs push push mov jno add cmp arpl fs jmp add scas in insb ja pop or pop faddl sbb dec imul pop jmp inc lods lcall fbld cmp sbb mov out fdivl adc inc and test ret out dec rcll lea pop sub dec cmpsb push arpl sub (bad) inc test popa jns push movsl xor push sbb test pop fxam and push (bad) pop jno and sbb cltd pop into adc lock enter dec popa rclb outsl cwtl addb (bad) mov dec bound hlt add sub movsb enter int lods jne loopne add dec js lods mov xor nop je mov loop inc pop (bad) movsl jnp test add outsl mov fimul add cmp inc dec es bound xor pusha add mov ret out or stos daa mov imul sbb imul int3 arpl xor les dec call and js mov mov mov testb or dec enter and and sub cmp fimul mov mov add iret mov or sub sarl scas xor fsubr add adc cmp or lret and outsl add pop out pusha rolb stos lds xor loopne dec dec sub inc faddl mov add jl pop pop dec lea lods adc mov in test mov cld push test dec xlat mov add dec lahf xchg js rcr pop sbb and test fsub cmp sub push mov divb leave pop int and nop or mov inc rclb test add push repz mov push add dec cmp add nop clc add ds adc fsubrs mov cmp wbinvd jae dec or test out sub (bad) mov mov dec add and out out dec add lods push mov fdiv movsb add and test sub int rclb fsts adc xor add inc aas xchg fs pusha pop pusha loop mov int imul add roll (bad) lds add mov add pop idivl mov dec loope rcl or psrlq sub mov das jmp mov sub lods test sti adc inc rolb mov addl sub push loopne inc and adc les inc jns mov adc push in movsb add xchg insb and sub cwtl or jns mov sub rorb add test ds add xchg out mov inc fs pop andb bound ror pusha les sub inc outsl mov movsb xchg cli lock add add arpl in cld jle cwtl ja mov mov dec lds (bad) mov orl pop cli sbb jecxz xchg or inc push pusha push shll cmp cld adc pop add clc addr16 adc mov sub inc mov in mov lock lock sub jo dec inc sbb dec jmp add insb sbb add aas xchg jne nop cld fidivr and pusha sar dec pusha ret shrl mov adc and xlat pop ss xor mov add xchg incl aaa xchg add fs pop jo sub fwait mov fdivl or add pop and int3 rorb scas les sub pushf test mov or jns (bad) hlt and mov sub cli mov dec rorl cmp and popa pop addb rorl in rolb mov nop pop push les inc sbb int rcr push add jns pushf adc add je outsb xchg fadds addl shlb scas mov sub mov inc clc push je add movsl mov stos hlt or out and adc fdiv es mov add mov jl enter movsb or xchg out lods jno add cli std es mov (bad) cld in xchg push sub lds add xchg bound gs sub sub pop sbb mov cmp enter push mov test mov cltd call in and add arpl fs mov andb xchg lea out mov fs int3 jo (bad) xchg fsub sub mov xchg aam (bad) mov inc in push ljmp xchg add (bad) movsl arpl cmp lret mov shll mov xchg jno addr16 xor mov shlb notl sbb (bad) sbb (bad) add outsl test xchg subb loopne jbe xor popa mov jp stos push inc neg or push cmp sub sti orb jb add aas push repnz (bad) mov lods add (bad) sti cmp adc sbb rorb cmp les add (bad) ja dec dec out add cwtl xchg mov xchg clc add dec cmp cld gs addb clc inc add fs sarl add (bad) mov cld cmpl std (bad) mov mov dec and test mov fcomps sub hlt sub inc loop lds ja mov in and outsb int3 inc in inc or sbb sbb fcoms lret lret fldenv out hlt add and mov fs mov enter test jmp aad adc rcrb mov mov mov loop jb sbb (bad) push rcrl and sbb mov cmp bound (bad) dec pop adc push mull adc or and xor loopne mov push cld adc jle loopne fcompl (bad) cld mov sar push jno adc test xchg (bad) and loop push pop outsl imul ret bound cmp jb add notl jbe,pn lock cmpsl loopne sbb xor xchg adc push or cmc pop inc pop inc add add mov mov xchg call (bad) in aam xchg xor pop xchg mov sub and aam pop js and enter fildll popl xchg mov xchg arpl pusha int3 and test std or test xor add mov inc out enter add mov jmp (bad) push add jecxz mov je clc inc add mov cld push cmc cmp pushf inc nop out push cs xor xchg push add int add stos fmuls add mov imul sub sub inc in jne add gs xor pusha cld popf iret ljmp es lds mov sbb inc aaa mov adc jnp and mov add pop and and pop lea push mov sarl adc mov sbb push fsubl mov push jl in sub jl lret cmpsb bound pop pushf test mov ret push jne or add inc out push aas and adc jne adc rcr je cld or add std jle inc add dec fildl cmp mov or loop test sub cltd std cltd sub dec dec jo mov movsl aam hlt jns xor stc js movsb loopne dec cld mov sub int fadd jl xchg movsb adc push lahf popf add add jmp xchg add push in xchg popa mov mov pusha pop inc mov in arpl aam dec xor mov xor and jb sub or and leave lds adc cmp sbb out inc pop arpl loopne in dec std sbb nop push xchg mov rolb add scas or ret orb dec pop xchg and js nop fadds sub lods mov out insb cld mov int xor push add dec inc jecxz (bad) dec mov les xchg shl mov test lea dec inc in adcl rorb xchg stos (bad) popa js inc xchg and scas and lock mov jecxz das mov insb inc js jp jg mov stos lea adc in nop (bad) leave cmp lods mov ds gs les out add loopne clc lods adc push cmp mov adc (bad) mov (bad) fist push mov ret lahf test mov push add dec out jge dec mov in mov sub les mov or (bad) mov fs jns add leave les sbb cltd frstor inc adc mov jl sub (bad) sub dec and fadd js xchg or add (bad) sbb push sahf add jmp test jno push push orb add and scas sahf add push or and add cmp out repz stos xchg enter aam les cs sub pop and or (bad) adc cmp and rclb sub xchg push in in sbb jg arpl mov xchg in jl sbb jae push sbb std adc push jle xchg (bad) lods add in add aad add lret fs int3 mov mov add into clc jg inc mov add dec and fist cld inc ret js adc push dec inc loopne dec popa ja add mov push call fcoml aam pushf add in cld mov ret subl insl push dec add inc in in inc dec or sarl clc outsl and pop xchg into inc popl nop mov inc push cmp mov insl dec xor xchg cmp in loopne xchg xchg movsl enter subb add xchg push push fcoms sbb popa in popf insl fs call mov fsubl jns and in pop enter shrb mov insb xchg (bad) out or aam adcb add push cld inc mov mov dec pop test ret add rorb sbb sbb jns dec fld adc cs push data16 lock push or sub cld mov push adc ja add loope mov inc enter and sahf lock stos adc fs mov inc cmp xchg xor bound outsb movsl mov adc mov jo cmp incb in std pop and pusha (bad) sbb pop sub cmc push sarl sub pop mov pop xchg in or add pushf xchg js xchg mov dec les xor mov mov dec jo adc jle hlt lea add mov fcomi pushf aam call sub add jge repnz es sub mov xchg adc fs sahf hlt dec pop xchg mov push mov cld xchg and clc sub mov add bound cmpsb mov add out jo lock inc mov imul or ja aad xchg sub sub fs rcrl mov jp mov testl ja mov inc adc mov sub sbb xchg cmpsl lret test pop pop jns mov outsl in dec cmp jmp jbe std inc xor scas pop mov bound mov and mov or jecxz (bad) popa pop push popa call aam pop andl popa movsb sub addb out das arpl add outsb push xadd dec std sbb sub clc out jne data16 jl adc dec adc popa lea adcl ds inc mov mov fs movsl fsubrs mov push add lods sub stos arpl lret fadd and xor mov jns xchg clc stos push sbb dec dec xor add in sub int inc add and add icebp xlat cli or jl add hlt dec sub and mov aam adc pop push movsl rcr add lock int dec fs inc and (bad) mov xlat (bad) xchg xor or push fdivrp int xchg adc xor jp dec add xlat iret std xchg rcll ja clc add lds xor add fldt imul loopne jg fs xor or xchg test inc rorl int dec cmp in mov add lock pop insl xor icebp jo pop mov add and addb (bad) lock add fucomp sahf add adc mov pop sub fdivrl dec cmp notb jb inc lret adc jecxz adc push out aam sbb sub adc push cmp sbb jns in add mov cmp jo stos sbb je mov adc dec sub fldl (bad) cli fucom jae add jmp shl (bad) xchg add sub add dec sub xchg push inc or neg loope insl fwait mov test add in sbb fcoml dec aas xor add daa push mov xchg and out in test call add add loopne clc out or cmp add out popf xlat jnp and add mov and rcll pop xor ljmp aas add ficomp repz mov push fcoms add in jno pushf mov ds inc out lock cs stos mov shll add fcom addr16 xor cmpb int (bad) repz test roll mov mov cwtl pushf mov sub nop xor into and popf orl dec mov push inc add cmp test add sti add mov gs sbb out sbb jmp sub loopne push sub pushf rolb push mov and add mov and dec push je es jl and (bad) (bad) pop sbb mov and mov mov call daa lret jo push sbb lea enter les dec mov add mov xchg lahf and mov push adc sbb pop js adc pushf test leave ljmp pop lret and test mov pop adc add loope outsb push xchg mov icebp xor enter cmp and (bad) in popa add add iret dec aas cltd or daa dec fidivl mov add movsb mov test fadds test inc cld adc fs push aad insl push popf mov dec or add scas mov mov movsb sub aad in test pop fs ja xlat (bad) mov (bad) subb inc push aam dec cmp mov sub je lods fcompl adc xchg dec test cs add sbb cmp (bad) adc mov inc stos lea and dec pushf adc add sbb addl leave out add enter test push push mov (bad) jo lods (bad) dec mov or or stos sub push mov je push mov inc into push js xor and out jo push ret ss nop orl out stc stos int add xor mov push mov adc hlt clc dec add mov andb adc inc dec or or fstpl mov int3 mov pop cwtl dec mov imul sahf cmp adc out dec adc dec jno mov scas push mov dec ljmp lock das mov inc push mov pop in sub lret fisttpl cld sbb mov jo or not mov hlt xor bound test pusha dec cltd in mov (bad) pop jmp jl sarl and scas lods dec idiv sub pushf in jecxz and dec pop push xchg push test pop or pop call aas mov aaa adc xor std out pop pop or fsubr (bad) idivb mov mov and stc dec popf call or dec sub xchg mov xchg dec add inc sahf xchg push add lahf adc repnz adc cmpsb pop sbb and das les add jb add cmp cld sbb outsb add call and clc std pushf and xorl in (bad) mov or hlt dec dec and mov jmp xchg xor daa icebp dec mov mov (bad) push dec add pop addb frstor scas lea mov pop jg inc sbb (bad) jmp gs addr16 test sub xchg mov xor xchg mov adc adc mov in (bad) or je jo pop out add push out add add mov jne jns push xor rorl mov pop mov lds (bad) cmc sbb cmp push (bad) rcrl add out call xchg in fwait sti pop push cmp sub call mov ds clc xor xchg test outsb (bad) and mov jo pusha imul xchg cmp loopne (bad) pop cld mov dec call jg mov add pop mov nop movsl dec clc fimul (bad) jp add lea xor inc push popl inc inc (bad) xor adc es arpl movsb lret push cmp dec add sub sbb mov add (bad) xchg mov movsb addr16 inc test dec lods fs jbe cmpl add es mov in jp adc dec sub mov jmp adc rclb das cmpsb loope adc ret (bad) xor pushf cmp outsl clc cwtl inc repz push mov aam push in ds xor or and push xchg subl lock and enter cli add jl push mov hlt outsl lods ds cmp out add (bad) shlb jo add adc jnp je dec xchg (bad) mov inc add (bad) mov ret or ja (bad) sbb incb nop dec pop cwtl cmp xchg xlat ret add (bad) or jno jne jne add (bad) cld nop mov loopne mov mov or sub dec int3 nop pop ja stos xor inc and push sub mov adc in or das xchg (bad) sbbb pop sahf sbb stc pusha rclb cld jb divl push test je mov cmp push sbb pusha cmp nop loope jne clc adcb jmp mov push or adc sbb rclb xchg test inc sub mov popf sub jo cld xor vmovlps cld push js cmp push repz lahf adc in pop dec loopne xlat inc dec out cmp mov arpl dec popa mov fndisi(8087 jle and mov movsb pusha mov (bad) sbb lods xorb stos sub inc cmp push xor pusha sbb es lret push lods andb jbe lea aas dec jo ficoml mov mov dec or mov mov dec pop inc rorb insl js icebp test add dec outsb mov mov xchg add dec andl imul lock rolb outsb lds pusha adc insl mov sarl jno or mov jns pushf test and add test mov inc daa cs push fistl and sub into and icebp inc sub xlat xor add and bound or xor jg xor add mov mov daa clc adcl mov cmp ja push lods and add cmp pmuludq rolb dec jo scas push pushf rol jno mov fcom aad mov and pop ljmp jp push clc enter cs aam mov mov idivb jne dec mov aaa int movsb in xor jmp add adc lock flds or mov in fidivl imul inc test mov lret or outsl stc cmp sub or js inc dec xor sbb insb ss rclb mov add fwait (bad) je add dec (bad) movsb xchg lods stos xor cli mov pop inc sub sbb rcl mov dec pop bound add (bad) xor in jbe jae sarl or mov subb out adc jg inc test shll and sbb gs nop js xorb mov inc (bad) dec push pop hlt pop clc in fcoml xor call fs sbb lahf scas push dec or and leave xchg fstp pushf inc mov call and mov or pop lcall jb movl mov (bad) rolb in dec dec push xor push cli and xlat movsl jne cmp loop cld dec fsubp std enter lds loop push sarb and nop cmp pop and enter jbe push mov cmpsl rcll fs xchg lret add xor and adc aas xchg add pop into and add and mov aam mov pushf and or mov setge jl mov test inc sub lock scas adc add test cmpsl sub inc inc sub test or push adc cli in adc clc enter hlt nop clc jne and mov subl iret nop nop xor in or or jb inc sahf enter pop add add inc dec ja les or data16 mov js sbb inc mov je lea or pop xchg sbb and push xchg das mov adc dec test clc xchg inc adc rorl rcpps jmp inc in insl jle lcall mov test pop xchg fnop and mov mov call mov insb cld les push push xchg inc dec and mov ds loopne mov ret mov call mov mov insb inc xchg popf or push mov nop dec out and sbb xchg fdivs xchg mov cld enter xlat push and add inc fdivr scas xor pop pop xchg fmul mov addps mov pop adc addb cltd sbb fsubl les xchg mov xor cmpsb enter lock xchg jne test push lods pop out hlt adc ja or push les lods lea inc pushf clc sbb push jo scas sub lret mov (bad) inc icebp loopne aaa xchg adc jb cmp call sbb sub jb xchg sub mov ret sub sub add dec mov leave jmp loop in dec cltd cltd mov xchg pop mov and add lods lea test dec add (bad) push xor push xchg clc mov insb orl mov (bad) sarl rcrb push add andb (bad) inc pop daa jnp push mov mov call adc mov and push (bad) inc mov addb pushf mov push pop adc ljmp pop repnz movsb and inc sti sub cld dec popa sbb and roll or mov pop pop call push mov adc pop scas add ffree cld push add push adc inc push mov jg stos pop mov dec or in pop xor pushf mov rcll lea bound les mov jg or xchg xor add sbb stos out popa lock mov jns dec and (bad) lock push and add in ret rcrb clc push sbb dec ljmp adc sub cmp dec xor dec flds add loopne sti cmpl daa loope leave pusha mull adc dec enter stc push fadd mov xchg roll push jnp xor push out cs (bad) xchg inc mov popf and sbb lds inc (bad) jo cmp sub mov clc jno roll sbb jo test mov xchg (bad) cmpsl sub mov rcr enter daa iret mov cmp sbbl aam outsb xchg ss push mov push adcb test outsl enter sahf pop mov cld dec push (bad) stos fcoms lock mov sub into cmp push pop mov sti gs sub (bad) rcl sub inc fiaddl add fsubp and (bad) or mov hlt adc adc orb es incl fs inc add out sarb mov and mov xchg xchg push outsl cmp dec int jns add sbb xchg push leave popf scas add dec jp test daa lock fistl xor lret and cwtl sub inc outsl cs jbe nop or stos lret xor pop pop out mov cmp testb arpl int push dec std jo inc rcrl jae sub mov add js test ljmp sti test inc inc pushw mov inc jnp xchg mov cmp imull mov pop or and nop cwtl xor xchg lods test jb subb imul ret inc adc pusha or sbb cli clc or add cmpsl outsl inc add mov mov and aad andb and es hlt add (bad) adc add adc or fs mov pop ja test sub push mov pop test sbb scas lea pop js fcoms cld daa push mov jle jns fs addb dec (bad) sti inc mov sub push push add mov jo pop adc and int pop jle shlb or movsb cmp orb sub dec fcompl inc in or sub mov cmpsb xchg subl dec mov test push loopne movsl and call push push hlt imul loope sub adc jmp daa cmp loop and push xchg push cmpsl je sub lock in dec sub mov sbb test js add (bad) cmc andl jo add mov sar leave adc inc cmp test cmp adc ja or lds mov mov into sub insb lahf dec xor cld add mov xchg scas dec lock inc in pop pop (bad) testb adc in xchg icebp push mov xor les dec adc inc xchg mov sbb sub sti jmp ja xchg pusha je loope stos jg adcb inc push addr16 push push mov in hlt imul lea addl pop add in jns scas inc loopne adc test sahf (bad) fistl xor cmp sbb lock dec imul add or mov nop mov sub shrb add orl pop mov inc ret or jp or cli jg dec in inc fsubrl aam cwtl jbe mov xor ror ljmp push mov add aaa pop out xchg add in jb jae enter fwait mov mov in sub mov icebp in or shll call loop imulb pop jo add jmp fwait jg popf adc pop sbb pushf and xchg adc sarl dec aas adc pop shlb adc xor jg pop je xchg bsf pop ds iret adc int inc or das js cld and inc test or mov bound int3 mov loopne add js in mov gs cld rolb and aas sub xchg rcrl and loopne xor ljmp and sbb dec dec call aaa or mov inc and inc push xchg mov orl les cmpsl test cmp add (bad) pop dec int enter push (bad) mov fldl sbb or mov call mov jmp pop and or ljmp push into xlat int3 add aad add iret jg sbb rclb mov stc orl and pop add hlt sbb xchg lret nop in adc daa mov xor dec cmpsl in loopne mov sarb orl mov pop jg lods cmc addr16 cmp call inc mov jge scas mov (bad) lock xor call jge pop pop mov scas sub rep vcomiss outsl cs fsubrs add jo div mov aad dec rol and roll idiv lahf cmp (bad) pop (bad) adc jge dec (bad) pusha (bad) mov cs or int3 orl fsub inc ss out scas pop enter cmp sub xchg push jecxz cmp (bad) loop dec es and sub leave or add in pushf adc mov pushf incl ret add xchg inc push or ret test mov adc mov dec pop xor je add or int imul std mov adcl addl sbb jne imul (bad) hlt dec sbb mov pop dec aam imul in add pop xchg jl push sub clc mov out add inc sub sbb je xor add out icebp sbb sub ja xchg lds mov pop cs mov scas loopne push lcall (bad) jmp xor pop js inc daa mov bound mov fild add and pusha and mov sub adc xorl roll and enter cmp jmp cmp dec and sarb das pop insb fldl ret loopne jae orl je cltd add push push xor test cld pop mov cmpb dec rsm or lahf add or mov enter mov xchg push lods nop mov out push dec push cmp jge (bad) pusha push mov dec scas dec pop add call push mov out testb in repnz inc dec or stos add lahf jnp mov add mov adcb cmc (bad) mov ja adc dec push add push and fdivr stc mov aas mov repz dec fst test mov pop insb int3 sub pop icebp mov cmpl repnz add sub repnz popf xor stc (bad) mov (bad) mov dec fsubl dec dec imul jg inc sub xchg hlt or sub mov stc push cli xchg leave sarb jge pop stc pop in shlb xor mov mov lret lods jg aam daa popf cmp xchg stc fadd and adcl mov push inc or mov pop sub cld sub out inc mov in ret pop pusha ja les in hlt loope jns add mov xchg mov loopne dec loope inc mov jl push fdivl jo mov and jmp and hlt inc lock xchg adc imul sbb fcomps jns inc jle and jecxz shr or xor or lock pop notl out push add cli dec je call add int3 xor inc pop imul mov jns cmpb leave mov aaa pop test xchg cmp jnp adc mov cmp fs jge nop js cwtl dec mov mov mov pop and cld movsb xchg mov rcrl adcl mov daa inc fsubs pop cld in push mov cs cmp pusha mov (bad) shrl xchg je add shlb mov push andb nop sbb mov mov mov inc stc mov jne push lods (bad) fbld (bad) dec clc and ficompl dec adc mov inc fwait add call pop mov push out sbb sub xchg push or aam lds cmp push dec lret fs jo mov cmpsl mov xchg arpl loopne daa lods mov in cmp and mov in xor hlt (bad) dec cltd icebp enter jg or pop addb mov push dec inc ret in or mov (bad) les or andl xchg add add add mov jl mov fnstcw inc lea and roll push adc sbb incb mov js or ret mov jae add cld in xor mov addr16 or es or rclb pop scas pop cmp dec sub add rorb lahf mov sub inc (bad) idivl push shl ja (bad) inc mov cmp and js xchg in stos inc push xchg xchg pop int hlt shrl lods hlt pop repz pushf sbb cmp lret rclb add arpl mov and aaa mov add mov mov and (bad) test dec xchg lea and rclb inc jle hlt dec mov mov dec add pop mov in add (bad) (bad) lret mov mov test popa adc loope cmp and dec arpl sub mov add push mov loopne xchg dec xor lea and mov nop dec scas cmc mov pop xor xchg enter js leave (bad) in (bad) loopne fcompl out push bound mov adc jg jae and pop inc fisttp rclb jo or hlt (bad) test cld sub lret dec xor push and add mov sub pop push add or add and add fdivs jg les xor sbb dec xor push mov adc sar mov mov out mov mov xor das push js pop jecxz add and addr16 add popa test sbb push std je xor mov inc add sub dec in add jmp mov or mov popf add jmp or mov aam push mov cmp aad add cld cmc push mov mov popa ds lahf or sbb add out add pop mov std xchg popa lock pop nop sub nop in js or rol xor cld cwtl xchg pop mov leave mov lcall js adc mov push sbb stc cld xchg adc js mov in test push test lods mull add xor dec subl xchg add mov arpl test sub xor add inc adc adc jae push (bad) mov xchg pop lods sbb adc cmpl push test mov fisttpl sub sub and pop dec in andb (bad) leave fistp popa lock cld stos clc add (bad) std shl rorl aam jg inc mov jecxz sub and adc mov les and shrb and xor xor mov mov sbb clc sbb cmp and insb cmc jle jmp fidiv sbb loopne addr16 and push clc dec adc (bad) xchg adc push mov hlt xchg ss mov xchg in add out inc bound mov mov bound jb or pop aaa inc movl mov pop cwtl adc outsb in adc mov or inc addl lods fdivp mov cmp sbb (bad) xor mov sti jle xor jno cmp sbb jne je imul jb pop arpl cmp shll and mov jo xor dec in mov movsb fadds arpl test enter sbb sub enter inc cmp pop imul inc add add push or jmp ljmp xchg inc fbld js cwtl xchg adc sbb xorl add pushf lock rorb add repnz dec push shrb and dec ss mov add and (bad) pause cmp shll add xchg add pop iret xchg inc int3 jo stos fistpll out or popf rcll pop add cmp jo jo imul add scas cmpl out (bad) test xor gs add rcrb mov sub (bad) hlt ret fs lea rorb in mov lods push or mov dec xchg jp dec out add pop lret rcr dec sub popa jl mov pusha xchg push mov sbb add enter (bad) and arpl subb or aaa js popa dec dec (bad) sub xor imul aam inc and jae ret test xor mov das inc xor test jle mov test test lods (bad) jb and add inc scas (bad) and in and aam adc add movsl in adc test fnop hlt mov (bad) jae jge std inc mov subb inc imulb or mov jae and lret cmp sbb es and test iret xor and insb movsb pslld shrl pop incl inc test lcall ret in sbbl arpl rorb xchg xchg cmpsb sbb aam lds mov ds cwtl and and out dec arpl and mov sbb xchg call pop mov sbb mov or or je incb dec add mov mov mov sti inc and add in dec mov and test pop xlat pop sarl jecxz movsl pop rorl add jle cmp aam aas jmp and add lock fbld repz aas jae add sub mov imul push xor xchg hlt outsl mov leave adc es pop clc movsb lods cmp movsb inc adc mov xchg jle js or nop xor mov push popa test mov popf pusha cmp pusha xchg jno cli mov add ffreep test lds mov call sbb jns out jmp loopne mov add or sbb insb inc or add add scas push cli inc push sbb loope cmp cld mov mov in and pop mov xlat mov fwait daa out out pop (bad) rcrb inc movb es in insl movsb jge pop xlat fwait inc rcll and add sti pop xchg cmp insb loopne dec mov scas addl mov push sbb mov mov iret add sbb push dec add jne sbb js sbb idivb and mov xor adc pop repz cwtl xchg mov push dec cwtl into add push out add cwtl push sbb pop sbb pop leave fsubrl sti sbb or ror test xchg fidivr loop mov push add movsl sbb or add imul lods push cmp sub pop pop enter dec in jl adcl cmp inc sbb xchg adc lods jmp push mov adc and adc pop add pusha xchg pop fnsave push cltd lock popa push cmp aad sbbb pop mov insb jnp dec jle out and je insl mov adc and push and jmp adc lock in add cmp and (bad) dec xor mov xchg mov jmp xchg or and popf fsubs outsl cmp sub nop push mov (bad) mov inc cli push subb mov fcoml cmpl (bad) adc int3 cmp cwtl jne cmp jmp inc out push mov notb add push or dec pop (bad) inc movsb xchg hlt add gs add fcompp sarb test mov aam push mov adc cmp sub test add inc dec fisub and cmp xor pop les loopne push (bad) mov testl cmp and inc add test xchg add mov (bad) in and int3 adc cmpsl (bad) add jbe and and (bad) pusha inc nop iret push subl jmp call rorb adc ljmp xor lret dec test insb xor cmp sti dec add sbb sbb lret (bad) xchg inc cmpsb mov push pop sbb sub or pop dec add call adc inc fs out mov int3 mov cwtl rorl in bswap pushf add pop bound mov dec add sahf fisubl adc and lock out test fucomip add and pop inc xor mov adcl les mov mov push or mov pop inc add addl push int3 (bad) sbb ret mov popf imul push out hlt and movb js mov inc push lret lods (bad) icebp test push xor or adc mov add mov (bad) out jge add movsl xchg xor mov pushf repz xor jmp add and fs mov sbb adc or xchg inc and cmp ret cwtl and add jge add mov jb (bad) enter push mov pop aaa pop add mov or loop insl orb jb loope repnz pop test cmp in (bad) xchg ret and adc test fsubl xchg inc cmp nop mov inc lods lock mov push dec add adc in subl mov mov push shl add mov pusha cmc sbb lret cmp and dec cmp add sbb adc and mov movsb add repz mov cwtl cmp jne,pn cwtl dec jmp mov movsb (bad) jo sarb insl xchg push iret cld sahf in mov enter in xchg adc (bad) dec call jl sbbl fnop add xchg jl aad lock inc scas mov xor js repnz pop shrb (bad) mov nop jl out sbb mov mov adc test xor fadds pusha pop incb and adc adc pop in cld call add fidivrl add mov mov out add bound jmp adc inc test add stos adc pop stos sbb mov or fbstp pop aaa push test adc push pop push xlat mov fcomps dec jmp test adc jb and and sbb push mov and jmp add push xchg nop mov and mov push mov ljmp ljmp insb test cmp sub (bad) rclb in pop mov cld lret jno and inc sbb mov xchg mov add sbb mov and xchg inc mov add into add inc out sbb xchg test push es add xchg daa ljmp nop pop outsl and lods cmp xchg xor or inc imul mov adc xor repz aam imulb jb aam inc xlat scas xor mov pop popa sbb pop shlb xor (bad) jmp inc xchg dec xchg shrl out jae outsl es ret inc or push add or sbb out pop mov push dec mov mov js clc mov popf outsb xchg jl iret dec mov push roll jns cmp faddl sbb fmul rclb mov jg and push les aad dec (bad) xor (bad) xchg xchg pushf mov add arpl int3 andb inc pop push sbb arpl push jno in out adc add inc add test push aam rcl roll outsb mov push pop xor inc mov dec xchg sbb or shrb sub fmuls mov orb test add roll fisub repnz mov adc jl adc sub pop imul and enter fistl jecxz and in add push call inc (bad) into rcrb movsb sub mov sbb xor repnz movsb jbe push pop xor inc test or mov push faddl ret mov dec adc call push insb or inc jle xor push cld xchg or adc hlt inc test xchg pop sub mov out xor imul inc shrl out mov pusha xchg push or scas xchg mov fcompl add lret cmp movsb daa ja mov jl call inc add dec inc xchg mov pop fisubr dec add jmp cmp mov movsb add jmp add bound in mov or cmp push mov or test push stc movsb mov and xlat mov xchg mov jo adc ds pop mov (bad) jl nop xchg and les imul rolb test fdivs xor push or mov or aas pushf fiadd xchg (bad) push stc sbbl es adc call sub insb adc fisttpll dec enter in pop cltd cmp sub mov and addl andb in xchg and faddl and inc add repz mov cmp mov imul push add mov das and bound sbb mov inc and mov out pop and imul pop push clc add jns or daa (bad) xor adc sbb test xor lea ret mov in mov mov dec push call add mov dec cmp or mov mov mov sub mov test loop push xchg imulb xor and ret jmp or add add pop xchg imul test cld cmp ja rcrl cmp fisttpl sub rcll sbbl jb cwtl inc push lea mov sub es fisttp insl mov pusha add xor jl scas or mov push mov popa adc sbb es iret pusha pop xchg test orb push insb (bad) inc sub inc lods dec add jns in push push ja add pop and push and mov add add jbe repnz adc push cld adc shrb loop adc inc mov sub clc jle ljmp aad inc lods bnd adc pop (bad) mov loope aam mov les js add pop sub mov mov sarb jo mov (bad) jno and adc test pop inc and mov sbb adc pop pop fsts int3 lods or jg mov outsb pop mov add ds inc fucomip add pop xchg fdivl insl lock call inc mov xchg pop in mov insb mov bound outsl pop and cmp jle ljmp rcll lods or mov cmp and sbb jmp xor out push sub add into dec xor fmulp stos iret sbb insb and xor push loopne inc mov adc roll ds sub xor inc pop push adc mov adcl add loopne push add int3 or mov inc in mov pushf jge in test adc in cwtl jl add subl jno inc pop sub (bad) (bad) lock ljmp mov jge lock imul call aas fdivs mov or fild add ret cmp adc scas test and push rcrb test push xchg cltd jns jmp mov cwtl lcall and std jo insb lcall imul push inc notl pusha fsubs adc (bad) jmp add movsb add and and das test nop pop and push in (bad) aas mov jo mov (bad) pop adc add cli inc lock daa or (bad) jns hlt repz mov ret xor xchg add mov xchg jns adc pop enter fdivl in icebp fnstenv xchg enter xor xor jne fnstenv lock sbb pusha rcrl insb jmp sbb and mov dec cmp add imul fsts mov pushf and dec icebp add lret (bad) fiadd outsl ds sbbl xor mov fs push push roll mov xchg test (bad) out and es pop mov lods xchg cmp scas daa cmovp jae xor call pop fsts pop inc xor sub arpl push and clc daa movsb add ret inc imul xchg nop roll movsb add push xor inc jo subb mov gs push inc sbbb push mov mov cmp sarb cmpl or pop push js scas bound inc xor adc pop test pop (bad) movsb rcrb test mov and pop (bad) cmpsb mov inc jecxz adc cld cmp inc sahf test rolb roll sub sub jl mov mov sar xlat inc test nop fs mov add jge imul cmp shlb jle bound clc jno add add inc dec cwtl mov ja aam pop or pusha (bad) xchg les mov (bad) incb mov dec rcrl stos jb mov or repz fadds (bad) out mov add dec adc scas (bad) mov push loopne mov mov push stos xchg movsl sbbb add pop ljmp jo sub cmpsl faddl mov (bad) std addr16 ja jp cwtl sub sub popf xchg sbb mulb pop cmp idivl aam add les pop jmp jo mov lds test icebp mov and inc fsub fwait xchg add mov and and cmc nop hlt inc jmp out xor cmpsb shrl cmp inc pop adc and subl (bad) jbe and cmp cmp ficomp insl mov pusha stos nop mov inc fdivrp mov icebp orb or not andb add mov and fsubrl jp push out mov push cmp insb cld mov enter cs inc xor xchg leave orl adc popa sub les je (bad) mov push xor dec (bad) lret rcll jb inc (bad) negb xchg mov ljmp test jb stos sbb or sbb add push mov ret sub xorl inc rclb push test sbb add ret fisubr or stos jmp orl push or cwtl cmp cmc cmpsb mov int3 pop mov ljmp and pop dec test pop adc mov push push add jmp cld sbb pop mov add loopne cmp out adc pushf adc add stos test pusha imul notl cmp add and and loopne cs hlt imul inc dec fs icebp mov movsl (bad) jae insb nop sbb add sbb test inc test outsl add popf pop add mov rcrb mov add stc xchg shlb and pop push mov pop and cmpsl mov mov sub popa shlb mov mov and inc adc jl xchg mov inc loop insl sti cmp popf xchg xor adc xor mov adc jbe insb and (bad) jle (bad) (bad) repz pusha popa xchg cmp mov pop aas daa mov cmp pop adcl out push sub (bad) (bad) jg rorb mov and cltd mov xor rorb int3 (bad) mov clc insl seta flds lret push sub mov aam cmp fisttp push je push dec adc add fst jbe mov pop call sub cs (bad) (bad) test xchg in xor mov (bad) xor mov adc repnz (bad) sub frstors mov cwtl loopne xor hlt pop dec mov add pop icebp in test fs cmp jne ret or test mov (bad) in je lds ljmp cmpsl inc aaa adcl cmp push popa mov out sub es lahf lock pop and add mov xor jnp cmp or jl loopne dec (bad) push xchg jmp add add movsb fcmovne adc add cmp push xchg sub mov push mov dec std jne fadds sub stc pusha xor jmp testl out add add out fistpll out shlb add test adc stc fadds ss adc add pop jp jmp sub push sub dec add sub jmp pop mov adc test jmp cli jge pop fiaddl dec pop xor xor or movb cwtl add jnp pushl shl flds cmp int add pop jmp mov sub mov int3 add add jnp fidiv jg ret jl mull rcrl sbb sbb (bad) mov out (bad) pusha lock pop dec repnz add lds lea adc pop not jecxz push or pop or lock and out and push jmp pop xor ret mov xor jmp sarb adc lea daa add shr add rolb mov ret pop sub adcb fdivs fild adc jmp popf add stos pusha repnz jmp pop add clc rol les inc (bad) rolb adc mov push mov outsb jmp add adc push sub jp inc xchg mov push dec push xchg dec mov imul sub inc mov mov jmp mov iret xchg and mov or jmp jno cmp cmc adc int leave (bad) mov subl xchg and lea or xor add add dec nop dec and lahf jge test movsb mov xlat jbe int (bad) aaa or std jg movb xor push jmp add jae rcrl lcall push jo cmp ret push jmp jae ss imul and repz or xor push mov or or ds mov lcall out and in and aas adc push in cli (bad) ljmp daa aam adcl lods add jp and test pop inc into sarl shlb push test or jbe mov mov and lret xchg and and rorl xor rcrl dec and dec xchg inc mov mov (bad) push push cmpsl movsb cs xor pushw xchg (bad) cmp imul xor xor push mov andb or je push xchg pusha inc js out mov xor sbb inc ljmp es mov rclb repnz or cmpsl insb or jns flds push mov pop add jg pop push (bad) lds cmpsl xor leave fildl (bad) and icebp xchg add lods cmp push pop adc add imul push cmp inc jg sub lods add (bad) xor or mov fidivr pop call mov inc ja (bad) mov lods push inc fsts add pop popa mov cld xchg mov and pop pop icebp adc inc addr16 pop mov cmp pop es or sbb jl decb and ljmp aam inc adc add xorl shl jmp clc sub cmp or arpl ss xor push push push pop daa gs lods icebp loop loop lock fildl cmpsl mov das neg scas or jmp je les and movsb sti and outsb xchg inc mov or xchg inc jo ljmp adc cmp adc pop lea adc push mov xlat fiaddl pop addl ret xchg or push push mov cmc pop xor xchg pop xchg xchg imul push inc test stos pop addl adc loop test sbb add push push pop mov or jle add (bad) test push add add imul cmpsb jne enter into pop add aaa in sbb movsl pop push mov pop sub jmp sarb mov popa add and cwtl clc nop sub ret ret sub and pop adc mov or mov fcoms std push pop push jo das pop push popf movsb xchg and pop ret test rorb test mov out xor adc (bad) or push push popa ret inc xor sbb push cmp popa sbb frstor adc pushf add andb jnp repnz lods and pop (bad) pause addl cmpsl pop ret ds xor dec xor xor iret adc addb (bad) add test dec (bad) imull aad in jge jae add xor pop lock push jle jo fs nop icebp add push add stc add pop pop cmc xchg jmp xorb inc mov push mov mov and jne and push push or xor push (bad) mov mov pop xor neg push ret popf pop leave and dec mov mov sub movsb fsubs subps add jg xor loop mov loopne xlat fsts mov inc fld dec aam sbb xchg ret outsb inc out fs adc in sbb pop rcl sbb negl repnz sbb push test (bad) xor xchg lods jns dec or mov jle cmp sub jne jmp and loopne or in jo rcr ror jns and out cmc pop bnd add jmp jo loope mov and dec jne cmp in fdivs dec push sbb jmp push nop and jns dec data16 sub mov jmp jb cwtl icebp sti cmp shrl mov sbb sarl out inc push daa cwtl outsl pop push mov xchg add mov jae cmpb dec lret shl add ds mov mov clc repnz xchg testl outsl add sbb orl jmp push aas push daa fldl mov sub iret loop push push test hlt pop cmp call or aad push sub ja xchg add or test loopne (bad) jno movl aas and push pusha xor pop repnz sbb push mov cmp xchg add es jge and inc and fldl add clc lret xor pop or shlb dec outsl jp push inc (bad) pop xor lods movsb cmp add adc aas in inc pop repz cmp out jl sahf xchg xor test push mov pusha inc xor mov pop pop push pushf mov into and push cltd in imul add lods test sub mov mov push out pop mov pop push data16 outsb or jmp xor jmp cmp jo mov or sti pop adc std icebp push jg lods push mov outsl mov out jmp int (bad) ret mov pop rcll mov rcr bound pop sbb lahf xchg (bad) fiaddl mov je clc fidiv xchg ljmp xor shll inc add icebp xor (bad) or or mov cmpb out in add push into insl push daa mov xor negl andb (bad) pop jmp loop loope (bad) add inc (bad) int sub pop out xor pusha jecxz push pop mov (bad) pushl inc ret inc xchg cmpsb adcb sub stos out jp and jo adc pop imul xlat xchg daa aas dec mov or push jmp test mov dec add or test inc adc xorl add scas xor (bad) (bad) xor cmpl push (bad) mov leave dec jecxz xchg cmpsl sbb ret mov adc xlat jg inc mov or pop and std repz cmp mov stc xorl xchg ficompl das add push pop pop fnstenv mov aam sbb pop jecxz repz mov cmc sti dec iret sbb test in push cld into xchg push in mov adc scas adc pop jle xor xor (bad) mov movsl call dec pop cmp push lds nop sub rcll inc in adc sub lahf stos mov mov sub insl fbld movsb ret aad xor add push sub not cmp (bad) or fldl data16 adc mov mov int3 js cmpb adcl int3 clc pusha inc and pop pop add mov test pop pop inc fxch pop add jge mov stos (bad) adc pushf test or mov mov and es sub and cmp jp (bad) cmp sub (bad) sbb in push movsl daa sub and inc push aam lea repnz push and or addl cmp sbb mov aad add cmp push (bad) push and adc inc es les leave ja fs xchg stos pop add and aam inc add and add and pop adc jb cmp cmp xchg nop xchg paddq and xchg jnp add mov add sub jns lods lcall xor (bad) call mov xor sub adc dec or and and cld imul repnz jmp and jmp or pusha jg into inc mov outsl adc xchg and fs bnd push dec scas mov inc cmp js push push fisubrl dec test push inc jno cmpb sub test push mov jnp jl jmp cmp outsl sahf or loopne sbb pop out lods into stos add jg movsb cmp lods xor jmp insl in cli cs addr16 xor sbb enter and add dec sbb jl add fidiv hlt xorl js cltd repz mov jg fs pop insb xchg pop xor jmp xchg shlb jne sahf pusha jae (bad) pop dec icebp add jmp add add mov or push add cs repnz cmpsb ret subl jmp xchg stos sub mov (bad) dec xor loopne dec jnp xchg and push lods lods dec gs test in ficompl aad sbb das cmc and adc pop push rcll mov not jae rolb jg (bad) (bad) lret movsl mov mov aaa nop xor add jge dec pop pop testl jecxz inc cmp shr testl cli add jmp or cmp sbb rdmsr test mov (bad) mov xchg fndisi(8087 mov fadd mov push fildl and or stos mov cmp pop test add inc dec mov in (bad) adc icebp pop push lret push into sub pop jecxz fbld pop push mov adc add xor push (bad) stc in scas add cmp orl cmp gs sbb jg pop or aas popa icebp mov ss dec call sub add (bad) or sub pop inc popa xchg (bad) dec jle mov ss add int cmpsl ljmp pop aaa mov and inc xchg orb test into adc (bad) inc stos out sub add das add dec push dec (bad) mov pop sub add bound or pop in mov sbb jg (bad) xor add sub xchg hlt and sub rorl insb pop push fcmovnb pop aaa in xor sbb pushf dec and (bad) iret xor mov or sbb dec fsts pop pop rcrb popf dec lds into xchg dec imul pop movsl jecxz inc test lret push push rcll dec cltd mov cmp out jns das or and (bad) dec pop mov xor mov and push popl mov adc sti jge xchg sub sbb mov fwait add pop xor jmp cmpsb (bad) dec cli xlat test fnstenv adc add jmp loope js jo xchg lods pop push sbb out addb sar (bad) push push sub adc (bad) (bad) std sub adc aaa xor outsb imul pop cmp out (bad) push mov push sahf inc (bad) push push jmp and mov dec adc out rcr push dec in cmp cmp (bad) mov rcrl je lcall int3 vunpcklps ja add cmp jnp leave loopne (bad) pop aas lahf push shl gs mov jecxz fsub (bad) sub or in das mov push and sub idivb loope xor xor pop or xchg sub jo and imul test pop sahf clc push addb rclb fist xor cmp sbb and mov lret add cmp jle mov cwtl insb repz adc out pop stc sbb adc rcrb jmp jecxz loopne ror lret fsubp out sub jmp adc mov in repz jmp out push xor (bad) mov cmp out add (bad) shl repz jo adc imul sar fwait jae dec orps shll mov dec pop xchg and sahf mov lds test pop cmpsl push mov push push xchg and test inc rcrl push dec mov mov popf mov sbbl cwtl push dec mov mov mov cs jnp pop cmp cmp out add outsb add xchg out push mov jl jmp pop scas jge jo jge dec fstpt or loop lods pusha inc adc repnz sub and ficompl add fs lds ret and or add mov mov sbb adc or push mov jmp lods fsubs fdecstp frstor mov jmp int rorb mov push out jl (bad) pop or mov fwait jb xchg push outsb adc std pop add pop mov add add and and popa imulb jmp dec or pop xor pop mov xor in scas xor cmpsb jecxz pop (bad) lods mov sub pop jmp xor test mov popf inc fcomps aas add fistl push xlat std nop cwtl dec in xchg lcall sahf push xchg (bad) xor (bad) dec sbb pop out mov dec xor sub pop or ljmp push ret lods mov fwait inc pop fsts inc cmp ds lahf mov cli shrl out out dec jg sbb sub adc insl lods inc lret ret push sarb sbb sbb adc jmp dec lret mov movsb dec and mov xchg sub out or dec adc pop adc or xchg popa or adc push ja xlat mov data16 mov push and adc mov cmp push add rcr dec (bad) jmp imul mov pop fdivl dec (bad) pusha imul movsl cwtl jno jle nop cwtl jp sub int jle adc cmp lods movl adc xchg popa imul lahf xor adc pop lds mov cmp sbb movzwl bound mov addr16 add or cli mov sub bound cmp arpl adc cmpsl xor jmp loopne adc cmp push pop xor ret lods data16 mov aam pushl lret push stc rolb out jbe pop fucompp pusha outsl push or shrl ret or call loopne pop jnp adc or jno add xchg dec std pusha cli ret in and push rcll (bad) mov inc out test add cli mov push and or sbb push pusha scas sbb pop cmp les add sbb sub pop out or pop rorb jg xlat cmpl mov jl push test sbb sub shll mov rorl xchg adc push xor mov mov sbb add and and push mov cmp push or pop cmp test xchg mov jmp inc pop mov test add out dec test sahf dec fwait adc jbe in jns xchg mov pop jno adc or daa add or or repnz iret add ds out sub push pop mov negb pushf mov add mov mov ljmp fisttp into mov jge sbb sub adc mov and stc lods nop cmp and push sub ss rorb mov pushf pop or xor pop mov push adc inc and and repnz (bad) ja and pop and mov cs shlb add or jo lods xor dec repnz or pop add nop or jecxz es sub add xor push dec and jmp pop xchg leave ret xchg add (bad) loopne mov dec aas push mov mov sbb or and mov sub shl add mov xor (bad) out mov or les or sub mov inc xor pop inc xor xor mov nop sub test sbb add xchg test xor dec stos sub outsb in iret and inc inc and ret aas (bad) push daa js dec test xor mov hlt fs fdivrs cltd inc xchg ret (bad) lret out sbb repz jmp fdivr xor dec cmpsb push cmp xchg rolb push and mov or insb popa pop xor movsb cwtl cmp sbb into jp pop and lock test sarl dec or add xor xorl and sti vmovntpd push icebp mov cwtl push mov xor or add mov dec mov and push add mov xor cltd inc xchg inc sub mov add xor dec shll or shr add into and add nop push add lret cltd push lcall leave test xor call rcrl xchg sti mov or sub jns lock inc mov subl lods mov loop fiaddl mov xchg xchg and popa sbb push or adc xor mov jecxz jb and les imul and mov or lods mov add pop xchg or rcrl and sbb dec mov add dec pop xor adc aas xchg in jns and mov out push lret jbe test mov rcrb dec sbb xor mov mov xchg or test decl (bad) pop mov jmp out fs mov rolb or lock (bad) mov xchg adc sbb sub sub push push inc mov test and jl inc je sub clc or mov icebp cmp sub scas and out mov xor add sub add and pop sbb into test pop fs mov inc xor sub xor jns xchg xchg cld jnp cmp out sub add (bad) ret inc and lods imul js std adc out sahf xchg and dec out cltd inc push mov rorb mov dec add or cmp nop popf lock xor int inc cmp push pop lea call mov mov mov aad enter xor dec adc rclb pop xor xor popf mov cmp leave scas add pop or add ss in dec bnd (bad) int cmp outsb dec adc sbb iret inc ljmp inc adc ret and mov sahf insb les sub arpl and mov clc push dec push loope mov mov adc mov mov mov mov repz xor ret fcomip clc icebp and push fcoml gs jmp sbb clc mov repz sub arpl fldt adc popf subl aad mov and cmp outsb nop icebp sahf push outsb push (bad) fmuls push dec mov xor call data16 sub and fs int test sub dec scas popf xlat and or add leave jbe xchg sbb repz leave push mov add aas jecxz adc (bad) out imul xor es repnz cmp dec enter xor adc cmp dec repnz mov popf xchg notb divl lret fmull lret into inc in and (bad) jno pcmpgtb cmp adc pop fst jmp ret jne sub daa loop jae sub or lock xor out (bad) arpl (bad) or repz or cltd loope inc dec in out sub inc mov cmp mov insb sbb sub or and add cmc and sbb mov repz in dec xor cmpsb xor (bad) and fistpll in nop or add fs enter xor sub xor dec or sub dec loop mov mov sbb das adc iret xor shl mov sahf (bad) imul cmc add mov or lods outsb or cli and jb mov (bad) out sub pop loopne dec aaa sbb fadds or cmp mov sub xor adc test ficom shrl inc idivb (bad) test sar xchg movsl or add inc mov jno nop in and sahf aaa arpl add sbb lret sub or roll pop cwtl or repnz call cmp mov (bad) add inc add sub notb shll fsubrs xor test mov ret and lret adc xchg xlat mov mov cltd gs xchg jecxz mov lea mov push cltd inc fyl2x dec mov dec pop insb adc adc (bad) je push adcl (bad) (bad) mov ret fimul or mov bound cmp dec xor imul aas push scas and xor rcl mov jmp mov sub lret or test cmp mov iret mov jb sub pop xor mov xor in mov inc stos loopne mov call mov xor es scas loope ret push repz adc movsb mov rcrl cmova pop (bad) cwtl sbb dec decb test adc (bad) sub pop (bad) dec xchg push dec lret test (bad) mov cmp xor iret fdivrl mov push sub adcl arpl sarl push clc test xchg imul shrl jp lahf in mov jne and push add mov and outsl test add int3 aam nop stos test into jae aas add add and sub stc lret out imul sbb or les adc xor repnz pushf mov ret bound adc dec adc shr sbb scas movsb adc push add cmp lret jmp jno addr16 xorb mov out dec mov ljmp (bad) sub pop mov clc js (bad) jo in scas sbb add ficompl les jnp push je movsl roll adc xor add adc jno mov or sub adc add push and dec mov pop ljmp or mov pushf int3 test scas lds (bad) mov test imul jns sub pop or inc call push cmp and stc js nop and popa scas xor (bad) inc sub jne sub mov add adc fcomps inc adc imul mov lret push and enter in lods sbb shrb inc sub mov mov dec cmp hlt mov mov xor sbb sub movsb cmc sub adc stos divb sub xchg (bad) xor loope xor leave dec sub xchg adc cmpsb es mov inc mov loope sub mov lods fisubr xor and and jmp xchg daa push add xor dec (bad) mov sub dec mov sahf pusha ret repnz nop loopne fstps fbstp insb adc fwait and sub leave xor out xchg rorb enter sub sbb or ljmp gs adc out xchg mov or loope rol mov push (bad) std push bound add dec jmp dec daa out cwtl int3 xor mov lds dec sub push mov ret xor (bad) out inc or mov movb adc fild rol or pop adc xchg xor daa mov aaa fwait mov or and inc ss lock jg pop adc movl or xchg mov fs pop and push leave fs bnd xor (bad) mov lcall rcl es fwait xor and adc ret dec int adc test add bound out enter or pusha jne,pt leave out lea scas and mov xchg lock add mov mov sbb dec push xor pop xchg (bad) xchg or (bad) mov dec clc andnps inc mov stos ret push mov xchg out out inc sti push (bad) xor push ljmp mulb dec (bad) rol (bad) pop cmp xor pop fwait jnp adc or shll pushf and push sub test repnz xchg cmc in (bad) stc mulb sub aaa xchg (bad) lods mov insb mov inc mov xor aas outsl sbb andl sub xor inc test mov je int das and mov push pop aas test ret push bound aaa mov pusha iret and sahf cmpsl vmovaps add test add pop mov call icebp jp pop and mov (bad) dec xor pop jmp xor and out dec sbb fsts icebp sbb cld or rcrl bound jbe daa into pop std ss dec mov adc (bad) xor imul mov ret sub lods sahf cltd mov adc xrelease shrb xor add push add and mov and cmp adc cmpsb lods ror ffreep hlt dec jbe addr16 lcall xor pop sub (bad) or jb adc neg mov xor pusha mov arpl (bad) repz nop or or rcll ret lock push and or sub mov ljmp push (bad) jecxz sub or or dec aas mov dec mov hlt and pop (bad) repnz cltd loop jae,pn xor out (bad) fimull sahf outsb scas jae lahf adc lcall adc incl pop loop sub sub lods pop jl mov push js inc sub xchg push leave mov push push outsl add mov outsb dec dec rcl xor mov nop jp pop icebp xor mov or fadds and and outsl lret repnz int3 cmp hlt xchg aas lret insl dec cmp mov push push daa or dec cmpsb xchg add ljmp mov sub push xor cmp gs push inc mov icebp add ja mov push out fistl sub dec push out jno xchg jmp ret inc sub fnstenv insb sub sub add xchg jo or pop jo xor mov mov call adc popf imul xor (bad) popf xor loope rcll or add xchg pop inc fs dec loope mov mov cmp in movsl xchg dec jbe cs leave gs adc sbb jne bound sbb cmp pop movsl mulb nop cmp mov mov loope repnz adc and cwtl addr16 (bad) test rol xor sub movsb xchg std jecxz fistl mov push push movb std popf or outsl cmp into in add or mov mov and lret add or daa adc repnz cld inc and mov or stc pop xor push cli lods test mov pop or xchg (bad) enter xor sub and pop out or push (bad) ret ret mov xor cmp adc mov push mov inc or lret and cmpsl and or mov lea loop push mov add add pushl nop aaa popl in mov sub (bad) xchg adc xor test fdivrs mov dec popf push cmp orl cmpsb fbld adc outsl push xor or out add imull push sti pop in dec and dec jne mov clc dec push inc xor outsl aam xchg lock and xchg jge push xorl cmp jb ret mov xor mov pop nop rcl lock dec add ss xor dec stos and mov pop enter test pop iret pusha pop push sahf xchg clc adc xor jae and mov xor (bad) mov pop rorl xor and sti scas xchg enter sub cmp daa add ss rorl repnz jae dec sub xchg rclb push fidiv adc adc dec imul adc pushl test mov adc add scas push sub nop das pop aaa cltd sub fisttp xchg call jns jmp lock out inc sahf cltd ljmp call adc add rorl lret data16 test and daa testl sub xor inc imul mov adc add out mov or xchg or cltd cmp push xor rorl and add dec or xchg jecxz ret dec mov sub inc mov cmp inc (bad) and xor and jmp sub mov daa xchg dec lods dec mov adc sbb sarb xor mov sub movsb insl insl icebp jp push out outsl pop (bad) sti inc nop xchg mov int xor fist add xor inc mov mov mov ret inc out cld popf or and add int sub popf xor repz push ret sub mov fcoms dec fs int stc (bad) imul add xor push adc push adc lcall lret out xchg test mov mov cs in or mov or pop dec fsts jl xchg adc or mov jns push or out or dec mov sbb (bad) mov xor push sub aaa dec les pop jmp sbb outsb ret mov push jno in xor or sub js inc inc adc sbb insb dec and and popa mov sub mov pushf and add js dec stc fwait rorb leave sub mov or xchg sti or sub dec mulb frstor das dec sub xchg pop push push push out dec mov add nop aaa movl cmpsb mov pop pop or mov pop xor sub fstpt data16 cmp pop icebp add repz lods loopne fs mov add mov mov and sbb test xor add or popf rorb sub jb sub push movswl dec xor shl sub test sti cwtl call daa inc mov mov or into in xchg les orb mov in xchg sbb push popa mov in in xchg inc pop mov je xor and sub add mov push jl shr aad adc push push fld or add or fmulp add mov cmp xor ret lcall cmp out ja popf adc lcall pop sub es pop or repz sub pop mov cmp test inc xor xchg xchg cs sbb jmp mov sbb mov ret sub pop sbb sub pop or int adc adc sub lret mov dec test pop xor xor xor das aaa (bad) xor (bad) in pop sub xor jno fs sbb pop pop ljmp and jmp mov test daa add cmpsb sti movsl outsb pop cwtl cmc or je bound push adc loop repnz cmp or or flds loopne sbb cmp sub out xchg mov aas push (bad) into inc lret xor add jmp cmp or jae inc clc jle mov and or push and popf sub pop dec mov dec int cmc pop adc fisubrl int inc push push mov lcall ja jmp pusha mov cld and and mov mov jns add add iret push inc das inc mov repnz loopne call shrl jle imul add and mov sbb mov and pop frstor je sbb sub shl movsl dec mov jp iret mov add mov in scas insl in imul mov js sub inc pop ret xor or mov je pop (bad) inc addl mov xchg xor adc (bad) xor incl push add in and pop adc stos (bad) icebp add sub test add out les stos mov xchg dec sbb jmp or push adc and sbb lock subb leave cwtl jg inc mov lods inc cmp inc clc inc call push iret test or jbe bound (bad) pusha sub xor rcr mov mov push pop pusha repnz xor pop lret dec or hlt jmp in xor add sub jmp jecxz js cmp out lds clc icebp movsl pusha or mov cmp dec adc sub stos scas addr16 xchg sub daa mov add in xchg mov addr16 sub (bad) test aas adc pushf stos jne movsb cltd or push pop xor fmulp mov ret mov out sub imul ss or xchg push pop cmpsb inc push (bad) push call push or es xchg jmp sbb stc mov leave out mov adc jmp cld mov cmp in imul popf shll xchg loope imul lods scas pop mov push inc icebp sahf lret mov adc ds ja popa movb adc mov (bad) jp sbb mov repnz push or pop or add fistpll inc mov sub in fsts push pop pusha outsl or jp popf fs imul mov and sub push jmp shrb cli pop (bad) lea js mov dec mov movsl push enter mov pop aas cmp fs iret popf xchg jo mov pop and es add into sub dec aaa mov dec gs mov sub push das (bad) and lahf out inc in add sub mov scas out sub push or add adc add or loop mov adc pop mov mov push xor pop xor inc (bad) xlat aad idivb xorb hlt mov sbb xlat pushf ret daa inc add out lods mov mov test or orb (bad) (bad) or or int3 jbe pop add ljmp ret cmp lret adc out cli add xor aam scas or ljmp imul mov and inc xor idivb mov loop mov sub cmpsl mov push jne mov pop gs aas gs rcrl lret loope aad xor movsb pop xor ret and test sub jg enter out push lea adc idivb aas fmull gs imulb mov adc ret and lcall fisubrl incl and mov adc mov xchg sbb dec sub sub je mov add sub adc mov into sub cli cmp lret outsb jg sbb repnz push movsb pop push and mov repz dec dec popa push rcrb rorl ret push lret lret jns sub add dec lea mov daa mov iret mov pop jmp lods cmc movsb repz sbb ret xchg in or bound (bad) int3 jg sub add test mov adc or push adc into jno loope clc out mov xchg lock out mov pushf adc mov outsb xor (bad) or movsl or inc out sbb cltd lcall lahf push dec mov stc pushf movsl inc xor bound or xchg dec push dec repz inc (bad) cmpsb lock add scas xor shl mov lret xchg sbb mov dec (bad) jb or sub mov lock adc push jecxz shlb sub jo adc push xor add dec mov ja aaa enter pop dec add test imul insb xchg mov leave mov out mov sub xchg xlat mov add (bad) and fs cmp mov xlat repnz ljmp adc sti popa inc sub imul aas lds pop cwtl mov and mov jno pusha fsubs ret ds or mov es mov jns rorl sub mov rcll mov repnz jle sub sti scas dec lds adc inc mov pop adc ds (bad) (bad) lock test repz test das fmuls test (bad) push add push (bad) mov xchg add ficom (bad) and mov rcrb adc xor sub (bad) xor or push lods cmp test clc mov add cltd dec faddl push ret jae push gs mov outsl xchg jge jle imul rcll clc in (bad) mov pop and and xor out push test mov out clc ljmp pop mov jl push push lcall scas jle adc sub enter repz pop xor pop aam mov das rcrl sub xchg fsubrl fmuls (bad) daa mov leave fiadd xchg roll pop and mov test out xchg rcr outsl std push jle mov mov sarl leave and popf insb outsb mov data16 mov xchg jbe jmp cmc add sub jmp push popf and or dec pushf stos (bad) xor sar sub dec mov in mov or js inc pop hlt (bad) push shlb jmp lock icebp mov add clc push lds jne rorl xor out add in xchg mov fist or inc test lds adc mov mov sbb push test xor xchg push subl jb mov fbld hlt mov pop inc pushl cmp add cmp fistpl (bad) or push incb ret out lahf pusha arpl xchg sbbl push lcall call (bad) ds dec sub push outsl mov cwtl push jb es mov ja and pop cmp inc cmp ficomp push mov pop and stos xor pop add push addr16 or xor insl push leave jo jg sub add sub sub in mov sbbl push or cs pop test xlat mov movl or add in push push xchg push adc jecxz adc fisubr je dec push jne pop mov add cmp push pusha sar mov sbb icebp push mov cli imul pop or pop pop cmp out adcl mov aas sub int3 mov ds in add sub out pop and lock jg repnz cs leave dec dec push jecxz mov rorb fcmovbe outsl jns ret inc (bad) fldenv sub pop or lock decl jmp (bad) out sub test cmp and sbb mov adc mov jae add cltd add not push mov (bad) dec jg add xor pop bound pop clc testb sbb or negl int inc mov cmp (bad) pop push push pop jg ljmp pop je movsl (bad) and repnz mov add push xor mov jecxz fisttpl subl pop push sub fld bound lcall sbb repz dec (bad) xchg or sbb idivl xchg mov sbb pop xor mov push push ljmp mov rorl jae lock (bad) cmp inc pop shrl dec or outsl int or ljmp sub pop pop and fxam cmp sub lods jb or test pop push gs mov cmp cvttps2pi das xchg ret mov jp dec das xor mov or mov (bad) repz lds pop cltd loopne jle enter push add cmp daa out mov adc jg mov pop push xchg in push data16 fadds popa adc xchg push (bad) xor pushf cmpsl sbb dec mov dec inc pop daa or loop dec pushf nop add int js mov shll push jge adc stos sub sub add add mov cmp test popa rorb or mov pop xor and jno add sub or sub or test pushf mov pop mov xor jecxz dec or xchg push sbb xchg mov cltd mov or sub inc or mov pop shl iret mov mov mov lret daa xor or pop lock in jmp sub stc dec (bad) fisubrl incb rcll dec mov pop and xor scas push in xchg cltd cld cli hlt ret sti sub int3 arpl xchg scas (bad) std stc sub out and mov idivb popf adc add xchg outsb ds aad mov dec lret (bad) or add jge jno dec mov js sub and aas sub inc xor out sub insl das sub add cs (bad) push mov mov cld sub jno inc jb jae fidiv gs ret mov shll cwtl movsl mov or pop nop les and mov push xchg adc inc or sub adc add cmp mov sbb scas or mov mov mov dec repnz daa cmp cmp dec push add cmp call pushf sub pop mov jecxz pop lret adc lahf cmp pop jp xchg inc shrb xchg push fsubr scas gs and daa xchg cli in mov mov mov setne or (bad) fisubl fdiv mov repz xchg cltd cmp push cmp sub xor mov in jl xor pop or adc cmpsb pop dec lods ds mov xchg mov dec mov testl cmpsl xchg pop or mov es xor add mov sub hlt (bad) mov fcoms pop and dec pop cwtl sarl push rcll xchg outsb dec out fisttp pop cmpsb and in es loop and lea repz ljmp cmp jmp xchg mov cld popa rol cmp aad scas mov xor push xor and pop iret jmp (bad) inc icebp mov (bad) and mov pop imull test mov mov mov negl dec and mov hlt popf (bad) mull lds xor sub mov sub pop sti pop jl and data16 inc add test dec shl mov mov repnz sbb add or sub xchg rcrw and mov or iret scas push mov stos insl add pop repnz xchg jmp or xor xor movsl (bad) bound notb xor mov sub testl fcoms jbe gs add push movsl stos (bad) cli repnz (bad) mov pop jmp leave jle orb mov add ja adc loope xchg add push dec inc test and bound repnz xchg and int3 xlat dec jmp test rep bound (bad) and xor (bad) jmp imul test cs in sahf clc push rorl xchg xchg xor pop cltd add xor or mov add jmp jnp mov rcrl inc inc xor aam call insl ret and sti rcll cmp jns mov fcomip jp jle push sub icebp dec mov pusha or dec or xchg dec idivb xor hlt lea lret imul jns leave and (bad) xchg int outsl (bad) jae add lods jns pop jmp sub sbb aam sub pop aas mov adc xor add test ss mov pop test popa fsts add pushf push pop mov in xchg mov daa repz mov repnz or sub sub cwtl fldl sbb (bad) jb ljmp sub push and pop or ret or push adc inc test mov insb sub jmp mov jmp sub pop hlt stos bound pop pop mov bound int3 leave cmp (bad) xor mov or fstpl mov pop out rcr mov mov xchg in xchg lret stos mov popa and add cltd xchg jo or jbe loop rcr mov pop or ss xor push xchg lds or cli and (bad) out testb mov sarb pop add jbe clc sub in into sbb push mul jp push mov sub loope mov sub mov (bad) leave iret das int3 xor xchg into in (bad) frstor mov sub mov bound out stos mov xchg lods or xlat iret lret jne xchg cmpsb xor xor divb xor pop out pop int ds push jmp jno clc daa cs ret inc or popa sub push sub sub (bad) int imul or imul aam sub mov imulb jns std lods xchg sbb cmpsb into daa rep mov mov (bad) out sub loop (bad) xor hlt nop aaa push mov and xchg scas sub ret pop add inc pop xlat lds test jno repnz xor xchg lret movsb jp xchg jb sbb or pop jl dec bound bound adc mov clc lods pop loop imul outsb into scas adc add leave and stos xor mov jbe push xchg lret dec or pop xor jbe out dec and sti popa loop mov data16 call sub pop (bad) bound mov lret inc pop cs pusha std fisttp sub cmp cmp (bad) adc lahf daa mov ja notl icebp movl test or dec mov test push and push jecxz mov jo sbb cli (bad) cld loop fcomps xor fs mov xlat push repz inc mov nop mov lahf cli fsubs push leave daa in daa fsubrs test or mul in add mov mov clc mov xor test loop (bad) cld jmp mov mov and mov cli push pop or lret je pop xor rclb cli cmpsb icebp mov mov test leave inc or xor dec mov sub icebp sub ret adc lds shlb pop mov es cmpsb out or stc hlt pop or xchg mov sbb xor jbe push pop sbb push mov jecxz adc dec mov popf push adc sarb sahf gs xor or mov int3 out sub and dec or loope and fcoml sarb adc add adc notb imul jbe icebp sarb xchg roll dec pushf adc pop xor loope jb xchg mov pop ret jns sub movl in int3 lahf mov xchg loop xor lea test jmp and lods dec repnz mov in dec fsub out stc cmp jecxz mov mov jmp (bad) xor pop or lret sub fcompl pop outsb pushf pop and sbb mov mov fwait mov pop mov sub inc (bad) out movsb roll mov and das xor movsb test (bad) repz lret and sbb mov ss inc sbb mov xlat scas or xor mov repz lds cwtl fild jecxz and jg xor mov movl push lock iret lahf dec fistp pop pop or or sub (bad) jge sub ficoml fdivl sub sti mov repnz shll adc daa cltd mov cs jg mov adc adc pop out pushf out xor jne into pop pop les adc pop and popf dec or iret mov bound adc ljmp rolb push lds xor xchg push xchg hlt ja cwtl loope sbb add fdivr push add and sarb push nop or repz das add xchg jns int3 lahf add pop mov mov rcrl adc sti (bad) and arpl add cmp sub xchg stos icebp subb pop sub std cmp xor push fstpl or and rolb push inc inc ret sub int3 cmp or (bad) popa add xor fs in xchg insb sbbl bound fsts mov sbb cli pop scas xor and xchg inc or pop cli lea test rolb and jnp push (bad) or xchg pop and push lcall gs cmp sub sub sub dec pushf aad or mov mov gs sub jno cmp xchg div pop mov add mov pop fmuls subb (bad) lea cmp add call call popf lock ds mov cltd mov pop mov cmp lcall dec sti cli add xchg daa push ret adc adc and and mov push cmp pop rorl mov stc loop pop lea jmp dec sar (bad) adc push rcll test mov and xchg in cld xorb xchg pop jmp mov sbb dec (bad) je sbbl ucomiss sub out pop inc je lods sbb (bad) sub out mov pop fs popa xor imull dec sub lds bound lret cmp xor jne sahf push push jne subl lcall xchg loope ret into sar hlt pop mov rorl sti pop xchg cmp mov insb add push push push push push aas sub sub scas sub add pop (bad) (bad) or add ljmpw mov and adc nop iret add daa pop adc xlat call ja push loop gs arpl mov sbb pop scas mov addr16 bound pusha popf add clc pop mov repnz das ret sub pop test imul fldenv mov and cmp pop pop pop cvtps2pd ret je ljmp xor cmp scas popf and iret adc sub (bad) cmp shrb outsb push xor repz (bad) cmpsl mov je or adcb jmp mov xor push int3 push xor out incl test loop iret repnz sub bound push (bad) lret lcall mov add mov mov aam lret push mov push add push cld repz dec (bad) ljmp iret leave add mov es mov xor mov lret add mov je mov xchg in sti jge loope xor pushf push push lock dec or add loope je xor scas leave pop gs jnp shrl xor sbb mov push add and icebp pop nop push adc add pop dec in pusha push or xor and dec or ret or mov (bad) and fisubr pop inc and xchg shlb ljmp mov repnz ret or jne insb mov push mov add push in push sbb push xchg jno mov xchg std mov and or pop jle ret adc rorl insb cmp xlat mov or into xor cmp pushf addr16 out mov arpl dec xor xor outsb fsubs enter mov call xchg sbb (bad) adc xlat sub xor jecxz daa or into push xor add (bad) in cmp and imul orb add mov test fucomip popf mov jecxz lahf xchg sbbl mov or loope rclb in mov mov push aam ret fimul jp popf inc or es lret sbb call (bad) (bad) flds add fimul sub and add or push in cmp jmp lea jp add xchg loope sub (bad) out mov aaa mov dec mov xchg fdivrl mov sub arpl (bad) faddl adc mov sub out loope adc repz add or leave sarl xchg xor jae sbb notl jle ret cs int cwtl pop add mov mov repnz sub xor pusha jbe dec aaa fsubrl xor xor icebp into dec push dec lds add mov or divl mov cmp (bad) rcll mov pop xchg rol jo popf or inc mov sti pop adc add imul push dec sub lock adcb rolb cmp lret leave xor xlat push movsl add les insb push pusha and dec xchg scas shr xchg xor xchg mov add xor mov into pop cltd dec push outsl es xchg adc in out mov sbb cmpsl hlt clc test stos nop movswl mov push js (bad) pop (bad) mov pop (bad) lret and jecxz test jp sbb mov xor push imul scas mov rcll add mov adc xchg jmp sub fmull fcomps push scas lea mov pop call inc sub test addr16 add mov out pop add sti (bad) loop add add pop out mov bound jle aad das rcll pop mov xchg inc pop arpl jecxz sub cmp add jge nop neg push add fmuls and dec les into inc test popa xor sbb and xlat pop inc add xor nop pop (bad) std ja outsl add rolb jge push out out push cld scas sbbl push (bad) aam std xor das push push cvtps2pd mov jno mov jp add and aas add jg add mov pop nop push movsl or aad or or gs push push lret mov inc add add mov adc out sti std pop mov adc push pop xor jle lock sti cwtl fcomps sub pop stos lds jno les sbb imul cli test mov pop clc dec mov rorb andl test inc rcrl repz out leave inc into add outsb sarb jmp or mov idivl adc popa add add add sti adc cmp and inc repnz (bad) mov xor inc dec mov push sub int jecxz fsubrl or mov and mov pushf stos sub repz add add jg mov ret and add stos int sub mov into push lret push adc mov or push lock loop dec imul inc jle mov cli dec int3 mov cli push leave (bad) mov xor mov mov xor stos push es dec xor mov or iret mov mov ljmp or test xchg jle sbb into lahf lcall test (bad) lret xor cltd (bad) daa xor data16 and js xchg mov cmp xchg ret sub or fisubr adc mov outsl inc jne dec out and stc test fwait pop xchg and push dec enter out mov out clc sub rcll adc sub cmp jge add int cmp sti mov xor mov (bad) daa roll jnp movsl mov mov out sbbb xor (bad) movsl xchg cmp mov add stc rclb (bad) or addr16 cmpb cld (bad) inc sub mov (bad) divb push movb mov sahf adc gs cmp jb dec mov (bad) dec mov add lret xor mov adc mov and movl jno and cmp repnz mov dec jmp gs adc mov xor sub (bad) loopne rcrl sub sub sbb xor ret mov and and dec dec xor popf orb inc dec (bad) jbe or push stos ds je stos xor rcll fiadd aaa movsl shr das add dec sub insl sar adc adc xor ljmp pop (bad) sbb cltd je and mov mov adc dec enter daa std or adc inc jno push iret das jecxz test mov jnp dec lock xchg aaa rorl stos mov cmpsb push sub mov xchg and jmp icebp data16 sub mov and or xchg je sub xchg xchg sub sti pop or jmp mov es and (bad) lock test mov movsl inc cmp sub insl pop imul repnz push test and scas dec cwtl cmp sbb jae mov or mov pop add popl and lods xchg out adc (bad) jae mov mov nop lret cmp dec mov add js jecxz push or loopne (bad) das add mov icebp mov nop js subl rcll add int3 outsb dec daa ficompl popa sti testb pop test lods lret push adc cmp pop (bad) or xor ffreep mov icebp mov add push cmp xchg lods mov jp pop je clc cld nop (bad) int cmp cmp dec sbb imul fisttpl das push rcrl loopne add sub repz cmp inc push add adc jb cs mov lret push mov lcall dec iret lods gs push or inc imul mov repnz nop andl xchg adc lahf insb dec and (bad) aam aas sub xor jg pop jg (bad) push call xor or cmp ja and iret xchg dec cld jl daa mulb data16 adc mull (bad) dec add inc xor fstl or jbe shr lret xor sti sub add fdiv ret cld and mov cmp xor nop dec nop cmc dec mov pop pop mov in fwait push das lret cvtdq2ps mov inc rcrb ret inc mov xor fbld test cltd lret cmp add stos fs sbb loop cs push rep sub shl out dec cli add xor (bad) enter lcall add dec movsb fcmovu pop add rorb and and add jne sub out jne addr16 jmp lret cmp mov adc sbb mov inc sbb push or pop add dec adc mov repnz aad (bad) xor mov push std jge or ljmp stc push fldl dec or in cmpsl les xchg mov ja add and aad dec or cwtl xlat adc rorb xor clc sbb hlt sub movsb push ljmp pop adc mov gs test push pop xchg ret fist repnz adc xor dec movsl sub pop push sub lock pusha rol sbb arpl pushf stos sub mov mov lds mov adc shl lods das int3 inc and int3 jnp pop add adc add loop jmp adc xor sub add sub iret in daa out daa pop cmp ljmp mov das (bad) int3 xchg mov (bad) jno loope adc push push and xchg push push call shl imul iret insl inc js movsb (bad) adc push lret push out xor or or add vpmullw sub call and push add repz out add into lock inc leave xor cmc nop push sbb mov mov es je xor mov cmp xchg push shll out xor out or fsts push test mov push andl cli mov mov inc stos sub add movhps or inc or adc jle jecxz add pushf mov xlat dec mov stc sub mov fs cli test inc int sub jecxz adc test adc lock test iret cwtl in mov mov sbb dec add xchg lods jle movsb imul int3 hlt pushf mov imul jnp (bad) and dec shl jb add cs lcall mov fild dec enter (bad) push out pushf or mov imul and sbb xchg pop mov int3 cs xor or mov insb popf mov add lret mov mov fwait dec inc or out jo push mov dec xchg adc xor mov xchg loopne ret xchg add leave adcl dec sbb insl leave out mov adc cmp sub jo jns dec inc out xchg outsb mov dec mov popf in outsl cwtl cmp adc ret outsb adc out dec loopne je sbb out sub nop lods dec fxch and cmp std inc mov testl lcall jmp loope in cmp shlb das lcall stc jge and daa outsb or jne lock xor and lods ja cmp push bound cmp icebp jmp and pop sbb adc or xor or ds nop adc xchg mov (bad) pop inc dec sub fdivrl sub outsl pop iret mov jns xchg int aas push cmc lock lea movsb repz jmp pop lds mov stos (bad) inc test mov pushf xchg pop aad jb mov in push cmp loopne and call (bad) pop mov fsubp dec add cmc sub mov test cmp mov shrb xor inc xor sub add xlat or (bad) into sub aaa lock push mov push ja repnz out and fsubr rclb stos jmp and je fstpl cmp addr16 push push jae lods cs mov or pop lret lcall or dec mov cld mov mov adc adc pop nop cmp in xchg lods imul and pop mov xchg jbe adc test scas (bad) pop cmp cltd je add pop jmp jno xor mov or xlat cwtl in (bad) or insl cmp out pushf test fdivrp jmp mov adc pop xchg lret icebp inc das mov dec movsl bound push xchg push cmc insb std jl xchg adc fisubrl int3 cwtl mov (bad) xchg and jae into add sbb pop cmp xor ret lret add loope call ja push sbb es mov and repnz loop add (bad) repz imul (bad) push jae adc dec les out xlat or push in fs (bad) sub loope mov sub cltd fdivrl xchg lods xchg adc add ss jmp sahf mulb adc push (bad) mov xchg repz push repz sub mov adc pop mov mov pop jmp mov loop and mov dec out rcll test daa pushl push cld mov sahf mov xor mov icebp pop and xchg adc idivb mov cmp das pop mov lea pop outsl repnz outsb out and mull decl xchg test outsb (bad) cmpsl xor mov lahf mov shrl xchg adc and push jmp movsl pop (bad) loop (bad) lds lret rcll and daa jbe ret jno add jmp clc cmpsb mov sbb out inc push jmp arpl jle scas mov cs xchg lea movsb push dec movsl cltd mov mov xchg adc test add (bad) and fidivl sub adc (bad) cmp xlat jae mov push push mov repz rcll (bad) dec pushf sub sub or sbb shll push xchg nop repz push repz movsl stc jae add mov and jge arpl mov loope,pn ret push dec mov pop outsl lea int cmp leave rcll mov and das (bad) or dec out test push xchg call inc and push and mov pop sarl xchg mov sub xchg mov dec mov repz or jno into xchg dec xor pop add in sub addl jl loop pop sarl add sub adc adc rclb add sbb dec sub stos js js jmp imul iret pushf mov lea or icebp cmp pushf fidivl fcomip in xchg nop cmp mov add movl divl ret pop mov jo xchg add fisttp mov rcrl and stc int3 adc aas jecxz mov jbe leave sub push in dec xor sti and into dec in ljmp (bad) sub add dec add daa jnp adc sahf sub xor test nop jne cli push mov test or mov push push cld movsl pop or pop sbb in rcll push jnp popf mov dec or mov cld sub gs out pop add in aad mov insl cmp (bad) sub pusha and js pop iret mov ret lret mov mov dec test les xchg repnz int jnp dec ljmp outsb (bad) mov cmp add adc popa xchg and data16 pop add xlat je (bad) iret mov dec or (bad) add sub dec fistpll dec js add push mov daa (bad) dec pop dec sbb aam das mov sub into xlat das sub sti roll icebp lea jno dec (bad) cmp mov mov loop lret ret push popa jne push and and dec fild fist lret movb or mov mov leave pop xchg adc out add lock cmpsb out ret dec movsl rcll test shrl sub add out and and arpl xchg cs stc fmuls inc and or push xor clc test sub mov and add in lahf jb mov push cli idivb and jnp sub stc into jp scas dec and add fstps or in stos jo xchg fdivl lahf lcall lods (bad) dec or jnp jg push fnstenv fs cmp and xlat cmp fimull sti pushf lret push mov pushf mov call adc xor fnsave shll clc lahf xlat in cmp xchg pop icebp or sub (bad) jge lea movsl xor and cmp clc aas repnz dec push xor outsb out add lock or push add mov or pushf or nop pop adc sub xchg imul icebp or ljmp sahf clc dec ffreep xor mov jp jecxz add mov jo lret or jl and mov sub out xor ret nop adc mov or sub and dec fsubl push aaa (bad) cld xchg pop mov arpl test xchg ret push or ljmp sbb out dec and pop mov dec jecxz sub ljmp add dec rclb lret push rcrl mov daa cmpsl pop dec mov lret pop addb xchg sub or jbe or sbb in sub pop in movsl (bad) cs sarl loop xor dec lret leave fsubrs cli fnstenv sub or dec push sub adc adc (bad) into or repnz ret lds pop gs xchg add and int3 inc sub cld cmp jns push mov cwtl inc inc mov cli stos daa aad outsl scas std js or or gs in and ljmp (bad) imul cmp outsl or shl mov pop mov adc jecxz xchg mov jnp mov mov stos and push out mov (bad) xor jo mov xchg or enter adc in adc sbb repnz cmpsl pop jle add loop xchg test leave sbb or add in dec lret or jb and cmp xor ds adc jp lods pop mov loope sarl xlat aas (bad) int3 add lea enter fsub add lock loop push sub sti gs inc or xor xor add into sub and call fcmovnb pop add mov (bad) sbb inc rorb ss jp scas into and stos dec and mov add mov cmpsb dec (bad) (bad) test into pop dec int3 (bad) dec ret mov and fidivr and or out mov jmp pop xchg call pop imull mov test rolb insb pop sub icebp shrb xor mov push out icebp scas fldenv fisubrl jmp cwtl pmaxub inc or sub andl jg ljmp xchg push cmpsb jbe into lods mov shr cmp sahf int3 out rorb mov pop add dec and iret call xor scas push mov leave mov (bad) mov mov mov pop je add mov fist sbb (bad) mov pop lds call das (bad) movsl pop loope fcmovnb cmp pushf testl mov cmp xchg clc pop pop stc dec test sbb shl cmpsl rcrl out ret lahf sti es push adc (bad) mov jbe adc cmp or dec stc and ror aam jmp popa jb sbb loop pushf cmp mov mov push lahf xor and int3 cld adc mov mov cmc add and sbb sub sub rep mov rorb and repz lods mov jb dec mov xchg ror and int dec out in or add xor jle daa outsb xchg into jmp mov mov loope mov ret inc sbb mov xchg add imul add (bad) xchg stos stc mov sub mov (bad) repnz idivb (bad) xchg inc cld adc xor out or and fs lds or clc outsl dec jno xor ss push xchg dec stc rclb enter mov (bad) push inc jb out dec ror push scas adc repnz movsl out add int3 les pop insb fsubs push test fs fnstenv repz mov mov shl inc xor (bad) push in fmuls fstpl aas xor xor sti cmp inc out cmp pop jb (bad) std xchg shr push adc push lea mov push mov out and pop mov add outsl mov dec xchg sbb and test xchg push daa data16 ljmp fcoms mov push and stos mov or insb or adc add loope pop add push dec fnstsw aaa pop stc push ds mov lea loopne add xlat xor mov and pop mov inc xor imulb lret push push lret lock lret or pop xor jg add pop push xor jae cmp add push fcmovb mov fadds sub leave push add sti lahf movsb and or mov sub test xlat or and rcrb mov imul or out cltd mov scas jmp lcall adc (bad) loope daa insl sti adc add in sub add cmpl push cltd addr16 adc repz mov leave mov mov xchg cmpb popf and adc mov dec mov jp ljmp loope outsl mov mov xor and (bad) mov xchg (bad) cmc or mov addr16 jp (bad) xlat lret and mov sub lods inc cwtl mov lret inc add xchg (bad) pop orl push xor push mov or cltd orb lret and xchg fisub xor dec cmpsl xor mov mov and jo jp cmc xchg pop push out push push (bad) push jne loopne jmp (bad) repnz rcll fildll repnz jno lods lcall sub sub in out jle jmp mull mov test repz clc sbb aad in push lds xlat mov les inc sub xlat xor or imul add outsl lea push jp push repnz push popf data16 xor daa add cmp jnp lret sub movsl shlb xchg xor mov movb mov pushl mov aas popf scas pop hlt mov dec push lret xor pop sub mov or popa mov sbb loop (bad) inc scas add dec lret xor scas xor pop xchg rcrl cmp stos cmp or xchg stos mov leave jge dec push mov (bad) and pop out sbb jmp das popf dec lds inc mov xor mov mov sti mov inc ret je or aad mov movsb test sub scas ret inc or (bad) xchg push or lahf cltd outsl mov (bad) insb bound shlb les mov addr16 icebp scas aaa xchg and mov sub add pop pop pop dec (bad) (bad) out sub repz out popf arpl dec or sti mov (bad) and inc xchg gs adc into inc adc sbb adc in loope push sbb push rcrl mov (bad) sbb push out sub call iret (bad) (bad) mov je push add roll push pusha mov xlat jle or loop pop sbb out cmp xchg mov movsl movsb lds pop mov pushf js repz lods nop xor xchg mov negb mov bnd lret aad add jbe mov add jmp or xor mov adc or and dec pop jl sbb xor shr push popf xchg inc mov xchg rcr sub repz in fistpll negb mov mov and pop dec fdivrl (bad) jmp push xchg push push std cmp test aam mov mov fiadd ret or fs stos mov dec rep sub es or lds xor fsubs jp repnz xor xor sbb mov daa or and cld add push aas xchg (bad) mov jl popa stc sub cmp sub lds push adc push mov bound dec sub call es mov push rcrl adc cld lds pop fnstcw xchg leave imul ret add dec mov mov ret cld clc push js pop jecxz in popa (bad) repnz pushf xor and (bad) push mov ret test jge inc in cmpsl cltd xchg ret xor sub aad push push mov clc inc mov mov cs xor fist scas mov stos (bad) xor aad dec xor testb int3 addr16 mov (bad) popa loop and xchg lret or imul and inc and xchg sbb leave lcall sbb mov pop mov (bad) outsl push mov and jecxz orl mov xor loop popa repnz sbb mov xor mov sbb xlat data16 rcll int3 loop lahf add mov (bad) mov mov mov fnstenv and pop inc mov or dec ret xchg xor cld pop (bad) dec loope sub ret or enter lcall stc and cmp call add fmuls les test pop idiv xchg inc mov jl cmpsl lcall hlt or and push add lret fidivl sub int add les jle mov (bad) icebp jecxz pop cmp lret and cmp add mov and idivb cmpsl (bad) mov pop jge idivb arpl and pop icebp and enter (bad) xor push xor popf or pop data16 push dec popa add fildll (bad) push inc sti xor xchg negb nop mov pushf and pop push push add pop and adc pop lds push lret add aam pop sbb movsl dec xor outsl and test jnp mov fwait and mov xor or dec mov push mov insb call mov aam stos fisub jmp sub sbb mov add sub pop insb cli mov in repz mov pusha ja cmp dec leave pop nop stos and rcrl jmp pop or sub dec add xor out jge xlat mov inc xorb cld movsb cmc adc lret and xor std push sub xor sub test sub mov cmp xor adc fisttp insb data16 fisttpll pop pop inc lea dec clc movsl dec lret (bad) inc (bad) imul shll xor jmp out das out xchg fs test test (bad) ljmp add mov adc and sub int3 sub test mov rorl xor sti sub ret mov cmc pushf sbb mov test movsl mov mov subb push adc lods imul push enter mov mov jg sub mov xor out mov add cmp jne mov jmp xorb pop int sarl test push pusha mov fs scas pushf push cmp mov daa mov sbb ja (bad) lock cwtl sub xchg out sub sub jno mov fmuls jmp pop shll js mov (bad) pop mov and cld or aas sub push (bad) outsl mov fsub push cli lahf sub test add cwtl add sub or adc mov (bad) and mov iret ds xor test jae sub mov or mov inc pop shrb jecxz fs ljmp jne (bad) ds call ficom mov je push stos push xchg xor and jmp or pop inc icebp sub mov out in ficoml jnp loope push dec imul lods jge sahf pop lret out and ss ljmp fsubr fcomps and jmp jae scas dec jmp sbb rolb pop repz xor stc xor int loopne and das fdivrs out xchg stc or aaa (bad) push mov outsb stc pop mov pop xchg ficom fs xor cmp hlt out inc sbb mov cmp sub pop push ljmp xchg movsl xchg xchg pop pop adc fs mov and push pop xor mov sub lcall push jmp mov sarl clc test (bad) cld cli movsl test push or das (bad) loop mov notl out xchg nop cmp ficomp ret in cmpsb (bad) dec cwtl aas repz push cmp add test cmpsl cmp cmpsb or mov pop adc ljmp xlat movsl push clc sub cli cltd (bad) mov fcomps popa sbb nop cltd xor and int3 xor out mov push mov push cmc mov int3 mov push jmp jecxz sub scas call lret (bad) sub insb adc adc out popa rol es dec jno xor cmp arpl add cmc dec leave adc and bound add daa add xchg and mov (bad) sarl mov shll ficoml dec xor dec and lcall (bad) int mov push out sahf lea xor push cltd pop daa faddp pop scas inc aas ret add in icebp lock cmp inc repz xor clc test repz sub mov inc mov pop adc push dec loopne ret loope std dec pop xchg ja in lea adc imul gs mov pop push dec mov dec lods fimull bound xor xor div jne mov mov (bad) mov or sub or stos or add mov repz xor xchg push inc push pop insb lds mov or add jbe andb inc push jge mov dec scas (bad) mov in jge mov xor xchg pop push jge dec lahf popw dec mov aam mov jle std jge add adc mov xchg shll xlat adc pop negb movb repnz dec call clc rcl xlat outsb ret je imul mov mov add dec xor into push jbe mov incl pop fnop mov adc mov les sub ret xlat insb jo ret insl fidivl xor (bad) jmp test dec test xor lret (bad) stos jg jge mov inc in loop inc cmp cvtps2pi adc lock pop cmp pushl stos or sub pop fmul (bad) xor neg sub cmpsl das mov pop push push inc dec daa je jmp mull push shrl dec jae dec or icebp data16 adc and sub in lods jae mov cli inc xor xor call and dec mov push xchg sti mov outsl mov mov mov push mov icebp repnz xlat notb cs and cli in stc mov (bad) pop scas xchg iret mov sbb movsb jno nop or fstps repz out cmp mov push push pushl in cmp jno or sub data16 (bad) pop (bad) mov dec icebp icebp imul outsl jbe stos and (bad) cmp out xor mov inc pop mov jae or and xor and add rcl mov lods loopne ljmp or or xchg dec mov data16 or iret fbstp lods push and div dec mov xor jmp (bad) or pop jno ret pop push test or pop sub ljmp mov or into add inc and (bad) into sub mov repz fisttpl (bad) cld dec movsl xor inc mov andb mov push dec (bad) pushw ss mulps sub pop jmp push xchg push cmp add mov test push mov sti pusha imul jnp xchg fld repnz repnz mov dec inc adc mov andl lret pop hlt mov or cmp arpl es lret leave (bad) cmc ret inc mov inc mov jne cmp ss sbb into movsl cmp dec fucomi mov or push inc or pop xchg mov mov or xlat inc ss (bad) pop or push push das out xchg test lods adc sub inc sbb ret cwtl cmp inc or (bad) fimul call out sti push dec mov gs insb inc into lods out mov (bad) sub cs fdivrl xor pop bound (bad) jnp and dec cmp mov mov mov xchg faddl jno push and or js push stos or rcr outsl adc push fisttp xor jmp pop aad xchg inc imull mov (bad) lods pop imul testl cmp push cmp mov pop mov fimul scas or repz cmp add aas sarl sub sub jae adc inc fwait out add push sub outsl add lods mov mov cmp sub mov push pop ljmp push xor and fcoms ret ror leave fcoms and push cld je mov mov aas fldenv ss jne (bad) adc pop pop xchg xchg repz xchg (bad) sbb ja mov lret leave mov inc ljmp scas dec out sub or xor sbb dec mov pop in sub pushw push mov iret adc lods push pop ljmp fisub fstps jl int sub xchg jmp fcmovne les and adc test mov xchg (bad) push int push (bad) ljmp loopne ret aad mov sahf pop xor ret push (bad) scas pop test mov stc or es cmp ficomp fldl cmpsb movsl pop mov in jmp push inc push sub notl pop mov lea das xor or aas sub aaa add lea (bad) dec add fadds stos mov inc add cmpsb leave sub cltd call xchg dec daa call and add or or xor ljmp sub xchg inc pusha (bad) imul jmp cmpsl clc or out sub and dec adc pop lock jne jmp (bad) mov cmpl jo jno fwait (bad) mov hlt dec push xlat jmp sub (bad) roll mov xor cld movsl (bad) add sub dec fs enter mov leave or bound sti jb sub daa add mov scas cltd aaa xor push or and cmp out mov fbstp daa enter sub scas sub xchg movsl jmp jmp in jb xor xchg cmp lret mov dec cltd enter mov (bad) and push repz add dec (bad) aam mov push in or xor jmp hlt and mov jne push or xor hlt loope lret gs aas shrb cmc mov mov enter popf or cli repz mov out pop stc and xor fsubr clc adc mov xor aas add and out lock imul jbe adc mov int3 scas stos in (bad) jg inc ficompl mov (bad) repnz dec push add cmp notb xor xchg cli je lea test mov (bad) hlt (bad) std (bad) cmp decl and mov insb pop fcomp test or das ja (bad) fmul imul pop add stc test sub mov dec pop jmp dec mov add dec cmpsb (bad) mov pop hlt xor sar or xlat gs xor repnz xor mov imul push add sub mov mov or mov adc ja push cmp clc dec sub test lret das lock pop lahf xchg cmovp fldl xchg and hlt repnz add add adc xchg inc mov ret pop add mov xor cmp lds lcall (bad) fsts into sub loope add aaa jbe jg or hlt xchg push and daa sub hlt mov sub mov (bad) in iret mov clc lods mov sub mov pop imul mov ret pop scas xchg int3 sub mov pop repz cmp test ret sub mov bound rcll movl cmp mov (bad) mov sarl cmp (bad) ja daa pushf scas imul xor pop lcall pop ror (bad) loop (bad) ficoml btr loopne mov popa imull das push sti lret mov push xchg mov xor divl adc mov fwait sub mov pop pop sub jl dec cmp mov dec out and or cmpb mov movsb fisubl or push mov xor iret mov mov fnstsw je sbb mov jae loope and sub (bad) out dec out xor (bad) mov rcrb dec loop test fimul (bad) mov xor cmp iret lret out push fs outsb mov mov mov xlat dec jl sub in daa fadds dec call aam arpl add sub ret cmp pop repnz addr16 incb xlat dec je lcall roll sub dec out adc sbb int lret rcr pop or jb mov and sbb imul data16 (bad) xchg pop aaa pop sub mov add addr16 add jmp mov and sub mov add sub lret lds mov pop or push dec leave sbb sub (bad) mov movsl out ja cmpsl xchg xor add or dec mov sub scas push repz movsl ss cli fwait popf fmul rolb push push mov or popf popa add gs add das enter stc add mov or daa leave mov int3 sub icebp leave xchg mull lods cltd inc scas jnp cmc adc cmpsb pop das pop aam mov sub mov repz inc out and cmp add push test rcrb sti xchg xlat ret aaa ds xchg cli mov xchg cli push inc mov pop mov pop and pop dec (bad) xlat mov xlat mov jl sarb xor je sti mov repz mov ljmp (bad) leave subb ds jne repz jp and mov test sub aas ret ja inc out mov test mov sbb dec loope mov pop gs es inc mov pop lret stos and shll or es fmull stos pop mov dec aam mov ds and aam mov movsb je js and pop daa in insb pop stc jb sbb jne lods aas mov pop int3 cmc ret mov pop ljmp inc mov divb mov or (bad) push loopne test pushf lock sahf xchg outsl mov adc pop add lock movsl inc js sub xor mov mov enter adc lahf jecxz test push jmp xchg addr16 sub outsb int3 push jmp inc fldl mov jmp mov or sarb (bad) mov sbb ret (bad) jb negl dec ret into imul mov out mov sub out xchg xor and mov mov fsubrs es rcrb jl inc mov repnz ret cmp and push imull or xor sbb cltd jae xchg (bad) mov and out fldenv out (bad) out push or enter dec xor sbb mov push (bad) aam jae push pushf dec je jle pop out xor repz add or push lcall (bad) imul mov lcall mov mov inc ljmp dec sbb and cli and inc insl cwtl mov fildl daa sbb fmulp and out mov aad shrl cmp js das jne mov push dec xchg ret and jnp mov mul outsb cmc adc jge cmp movsb loope jnp aas and daa add cld sbb imul mov cli jbe push or (bad) xor aam sub dec jge into dec and sub movsb add or and mov sub pusha mov pop mov mov cmp (bad) xchg jbe push bound pop insb or in xor fxch push xor mov dec stos add ret pop xchg out pusha mov push jge dec out sub or data16 test push jns jecxz and sub aas (bad) ret adc pop lret and out or pop popa bound ds data16 das and lock cli imul mov ret fwait stc imul and cmpb sub mov int3 jmp sti dec jne ljmp mov aad bound (bad) nop (bad) mov movsb jge sub xor xchg jecxz inc push pop leave fldcw or and cmp xchg dec mov mov jns (bad) mov and mov xchg pop repz orb sti int3 push sub aaa and or lret (bad) lea add test dec int3 jno dec ret cwtl jno dec and nop fistp mov xorb sti xor clc movsb pushf pop add mov fs imulb and push or gs daa or add loop jno addl repnz push inc jmp pop arpl (bad) cltd jbe test fs loop pop test jb mov lret add je mov pusha (bad) sub shrb or testb and loopne (bad) (bad) xchg or and fwait (bad) lds fldz icebp xor or dec push popf aam sbb mov insb pop cmp mov sub jnp (bad) ret sub jle sub das and sbb sbb pop nop std bnd fidivr bound xlat jg adc cltd pop repz sar sub sub xor push sbb movsl adc imul ljmp jnp or jbe movsb fwait inc scas inc mov aad hlt push rclb inc sbb insb xchg mov lods (bad) xchg adc lods mov adc jecxz insl out add mov push out lret adcb mov xchg inc or adc xchg in cs mov das push mov clc xchg xchg test xor mov fcoml or sub and je jno jnp fildl shrl out or shr dec gs rcr or daa xchg in xchg xchg inc or mov stos mov loop push or mov (bad) cmp clc dec int jmp sub sub push mov cmp sub mov dec int3 jns ret pop and lahf jle gs in out pop mov fsubp in movsl (bad) daa mov sbb or stc xlat xchg repz jmp push jmp xor add dec jbe mov repz and lret inc sub clc clc mov or jmp or ja retw cs fsubl (bad) cmp js xchg in mov (bad) cmp data16 icebp jbe sub mov cmp jle fdivrs es push and sub mov je,pt cld nop mov incb add cmpsl mov mov mov sbb push (bad) imul sbb pop test mov mov xchg call lds or inc cltd daa sbb seta jno imul mov mov js divb or fcmovnbe (bad) jns and imulb in das inc mov push and cli or fsubrs nop dec push sarb dec roll mov pop and pop lea lret inc fucomi adc jmp inc jo mov add or jl xor enter pushf test adc lret std (bad) movsl mov pop stc sbb push fmuls push std cmp cmp call (bad) es fwait lret jno add or lea cli add leave mov and out xchg push jge icebp adc stos inc cvtps2pd mov dec (bad) mov pop cltd roll and (bad) (bad) ret stc aaa xlat adc xchg jl (bad) cmc addr16 mov adc lds lods clc mov mov pop sub cmp pop fstps neg inc jnp hlt rcrl adc lods jl movsb xor add add mov pop iret fnstcw push mov shrb push push lahf pop mov scas sub or mov stos loop xchg arpl in mov add pop gs fs out dec inc push (bad) xor out je adc push std fs jbe add mov push sub sti out iret inc or subb add push pushf in jbe mov cmpsl and pop loop xchg (bad) pop lods add ret imulb rcll clc popf rclb (bad) jne sub jae addr16 mov xor scas repz outsb pop daa mov ja xor add lcall fstpl xor pushf xor mov mov outsl cs mov sbb xor mov xor (bad) xchg jbe pop repz lret leave mov sub stos fxch daa scas and (bad) fildl mov enter repz rcr sub daa push jne cld or out jp outsb test movsb pop sbb mov lea repnz scas mov add sub jnp xor and ds out mov mov imul sbb dec insb mov jnp mov or sub jmp or dec imul xor out cltd add jmp mov (bad) jecxz stos add or cmc dec (bad) mov stos add mov dec stc mov and xor sub int ds in das xchg scas cmp lds mov add mov pop cwtl fucomp dec xor nop mov gs jne icebp mov adc shrb and dec into pusha xor add sti sub mov mov push mov push dec les gs jmp call add mov das insl inc test xchg in push movsb stos cwtl xlat jecxz sub repnz dec ficompl out and loop pop xor shl jo sub aaa cmp pop in lcall mov sub movsb cmpsl je pop and bound pop xchg jge dec dec pushl mov repz movl jae call stos jb add jno mov push fstpl cltd push pusha es add popf rorb loopne xor jo mov pushf popf iret movsl jno inc mov mov or out mov fdivrs xor mov pop cmp jne and ficom and push scas pop into push mov xor sub rcrl xchg and movl addl jmp sub mov mov dec sar mov notb push add insl shlb loop push outsb adc sbb mov push jno or pop cltd lds mov neg xor or and mov mov mov dec xchg jg stc cmp cld dec mov mov imull mov push (bad) sbb ljmp add dec jae pop ljmp cmp xor pop or xor mov (bad) xor sub std push les incb dec sbb pop loop xchg pop pop jmp xlat dec push xor repz decl sub rorl mov out test or jbe xchg and mov aaa and cmp int3 sub mov (bad) and in fiadd mov jnp mov mov or dec xchg ds mov jb (bad) ja frstor out mov sti and dec mov jb and add cwtl xor pop jecxz inc mov out or cli mov js lahf ficom lret jns adc leave call or jnp mov xchg repz cli mov std pop (bad) cli xor push out mov lret xchg (bad) int imul and mov aaa sub push cmc inc ljmp out int3 cmp stc cmp daa push xor dec imul (bad) and sub lret stc inc pushf xor adc mov or and hlt xor add mov fiadd add add out jnp popf hlt cs ljmp mov push jl (bad) push mov outsb cwtl and jno in inc inc pop sub xor nop negb jmp aad mov sahf pop cmp xor and jl sarb cmp imul sbb (bad) and out (bad) add inc (bad) fnstenv mov xlat dec and xor insb das nop jns in loopne (bad) xor adc loope sub sti dec mov dec stos pminub imul fidivl add ljmp adc inc add mov leave and mov adc lret adc pcmpeqd jp scas xor mov mov or cld (bad) adc cltd push xor dec mov repz loope xchg jmp stos aad xchg stos ret inc xchg dec add dec xchg adc mov movsl js shll mov sub ljmp add mov cmp iret add mov arpl add cs outsb push inc dec into pushf push mov ljmp imul repz mov dec mov add shl les jb loop push fwait test or mov jb leave push out or divb cmp cltd outsl dec sarb fbstp cmpsl pop fs data16 pop repz xor and add leave sub adc (bad) cld xorb and rclb mov lock dec or add sub cmp aad jno pop xchg in ds out jne stos sub and bound jb xchg cwtl lds fcmovb lret pop notl imul ss fsubr xor aaa and sub in repnz fsts pushf fcmovbe rcrl xchg mov push pop push xor sub push mov inc gs repnz xor or inc int or xor divl rorb mov test cli mov icebp mov sub imul add xchg mov lret mov push movsl jl testl add addr16 jp sti sub arpl lods (bad) mov scas loope or loop mov pop sbb xchg ret and or mov jg or sub mov xchg dec mov test lret sti cwtl push cmp into pop inc mov jbe add sbb jno dec or mov iret in add loopne sbb sbb pushl (bad) adc push dec mov sub add enter aad pop mov nop inc dec and pushf ret push or outsb mov dec ret inc movsl xlat sbb mov pop popf int3 lcall int sub adc (bad) data16 lret int popa xchg leave pop movsl inc jge pop sbb or cltd movsl mov idivl cltd aas aas xor jns add add (bad) fnop out xchg (bad) xor (bad) and push or mov jns sbb popa dec adc (bad) popf cs ljmp adc inc jnp sub mov pop outsb cmpl out lods or movsl test shrb mov pop fisttpl push lret xlat jp cmp adc xchg aam jb cwtl cmp pop pushf pop jmp (bad) mov test pop pushl dec push pop imul icebp mov sub (bad) int3 and popf jns in addr16 bound rclb or mov mov inc jb sbb cmp ret mov xchg loopne jmp xchg mov imul jns imul adc push mov inc adc pop mov jmp mov mov and ds loope mov mov int sub clc adc pop (bad) stc fs mov test xchg scas sub leave lret ficom and out dec xchg je push jne jo rorl jmp out or fsubrs ret dec inc movl dec mov je jno mov repz mov xor js or xor mov icebp stos aaa pop test and pop xor and jmp fstpt int fidivr outsl imul cmp jne sub not arpl jmp push (bad) mov mov mov push fstpl jmp mov sub call lea sub (bad) jns inc add jb pop icebp xor rcll inc or mov das outsb (bad) mov push and xchg hlt imul push jb jbe pop out lods or and lret out bound (bad) movsb push leave (bad) cmp js xchg cli add mov mov mulb pop pop push push enter fdivrl sub fnstenv push lods push dec pushf add scas dec loopne enter sub into fbld fucomi dec lock mov sub loopne ds or pop ret push sti lahf adc push jno lods cwtl cmp (bad) sub fdivrs repnz cld jecxz ret xchg pop add ljmp jmp xchg mov popa outsl cmp (bad) push sub cmp (bad) stos (bad) divl adc jg push pop xor mov mov cmp lret std adc aam jne aam (bad) mov rcrb ja js imul mov xchg push sti lahf bound ficompl arpl lret xchg push add xchg dec out cmp (bad) pop andb fdivrs lret out (bad) rcrb repz jecxz sub ret jl push shr push outsl sbb imul push (bad) mov or shr sahf hlt popa mov mov cwtl nop mov js inc movsb sbb or mov lret and out sub inc testl jmp mov sub mov dec imul push scas adc fmuls xchg mov xor fcomps fsts jmp shrl jno mov enter aad xor dec sub sub dec mov dec and cwtl xchg cli adc pushf loope das mov jns dec adc dec sti out xor push sub mov cmp imul sub mov adc mov mov push dec jl add test clc in outsb xor loop jns or jg pop xor out mov dec jecxz sbb mov (bad) jecxz ds sub shl mov jb sahf jb cmp in sbb jbe sub inc xchg and ret mul aad ss (bad) or call inc (bad) xor (bad) fidivrl pop jnp ljmp mov push popf and sahf lds jg iret sub inc add and xor rcr scas mov or decl xor or jp sbb dec jmp and out iret cmp or loope test ds icebp and sub daa and ret and push push nop and lret nop adc add or cltd insl ret jo xor dec sti lret xchg cli test jl leave int3 aam ret xchg push mov jnp mov jge push jo daa repz pop sub (bad) push dec shr xor mov pusha dec pop or insb std dec lret sub rorl sub out sub inc push das out lock arpl push sbb mov (bad) ljmp mov div jnp jl daa inc jae frstor rorb mov dec out pop fiaddl lret add repnz inc cwtl mov int mov mov push pop xchg loop dec lock lret cmp ljmp mov imul pusha pop loopne cmpb adc pop push imul loop lcall add push loop sub xchg pop mov cmp mov test push mov imul int loope aas sub jnp incl ret adc sbb mov and popf mov add xor out pop push (bad) sub adc mov cmp into jle jmp (bad) ja cmp sahf inc xchg in xor aaa adc add xchg push mov mov adcb outsl and sub fisubl (bad) int3 push cmp es sub inc inc jmp out mov es dec dec into lds xchg xchg call gs out sub cmc xor (bad) xor mov icebp lea add in xchg and test pusha adc push fisubr dec sbb out lds js (bad) (bad) jmp cld daa sub pop mov add (bad) cld sub and jns xchg jmp dec jnp cmp jecxz test adc and sbb cmp aas adc call or jmp shlb fwait cmc fsubr pop cmp js mov (bad) mov aas xor mov aaa jl mov lods bound xchg lret test (bad) xor cmp xor out out mov and lret sub mov nop orb sar adc jl ret leave mov popl dec pop inc push or in xchg rorl xchg jecxz or xor mov test lcall cwtl push and jmp jp xor test cmpsb mov mov inc dec repnz pop (bad) shrl lret sub loop fldenv das mov adc lret lret ljmp les jno loopne jp lret adc loopne test lret mov out lret dec push popa cmpsb movsb mov inc (bad) mov dec mov inc cmp sub dec jo test mov test add xor dec insl pop adc out sub lods test xor int pop fisubr cmp test pop out scas fcmove popa mov repnz das nop dec cmp lret call lods ficoml lods adc pop or add jl fcmovnb test gs test mov dec lea xor gs mov idivb mov (bad) (bad) mov test xor or rcll mov xchg into mov sbb sub loope pop cmpsl xor mov pop mov lahf mov jnp lret mov int3 loope mov pop sub les inc dec lds jb into pop pop dec adc out out lret les adc into cwtl mov mov and rcrl xchg jno cmpsl jp rcll dec cmp pushf movsl mov mov sub cwtl ret xchg data16 or and shrl mov es add inc lea dec mov stc test negl adc ja (bad) push (bad) dec mov rorl xchg mov xor (bad) mov pushl jo in xchg jmp mov pop sbb mov xchg ds and imull pop dec jge pop add inc cmpsb movsb fwait dec movsl shr movsl fsubr push add add movsb xchg jbe xchg xor iret inc es mov xchg mov mov lods dec (bad) stc mov loope xor ret movsb in or mov xor inc mov (bad) mov jle pop (bad) jecxz,pt dec mov add movsb sbb mov fldt clc jecxz ljmp out rolb mov dec mov xchg movl xor stc lock add xor jle pushf loope in movsb test enter cmp pop popa xchg mov outsb mov dec test xor adc ljmp scas imul movsb stos jb xor pop mov lods mov fs adc fmuls arpl ss mov dec ljmp sub sub adc xor inc movsb and adc lea cwtl sub inc xchg push lods push mov cwtl cmp push adc scas push cmp pop imul out xor jg outsl mov aas lods (bad) fs loop jg ret (bad) mov sub jmp rcll mov sti push ret push pop fdiv gs sbb sti dec lret fincstp imul in pop push out xor jnp cmpsl inc mov jp mov add jno out outsb push out inc repz insb imul jo xor into or xchg mov pop lret lods mov lret in lret aaa dec (bad) lock jge sub sub jo shrb push rorl loop pop (bad) mov push mov add or shlb mov xor jg gs testl in test out push call or sub cwtl sub add mov mov jge ljmp repz dec fcomps imul icebp push xchg pop (bad) std mov inc stc cmp mov pop and pop dec mov lea inc mov adc or insb (bad) pop jmp test lods shrb mov loopne fildll mov lock pusha inc jmp add adc mov xor sub or or pop and lock jmp clc popf movsb out add out mov ficoml lea mov mov out into or test pop xor out dec fisttpll jecxz inc xchg out xchg in fstpt out lret icebp mov pop mov imul fstpt cwtl sub sbb mov lds stos loop addl mov leave jnp movsl imul xor mov int3 push or (bad) into mov cmc cmp sub adcb or pop lods es rcrl icebp cld pop dec fstp mov jp xchg push pop xchg pop and add xlat sub fstps or mov dec dec and inc pop nop adc lods pop mov adc sub mov adc pop popf dec ja mov imul shrl inc (bad) repz repz ljmp mov stos sub push dec stc add out and shr push in sub jp leave sub pop jmp add aas and push inc jnp fidivl add ljmp and xor push in in pop iret and out pusha and or rcll xor lds out inc icebp add rcr jo mov xchg add (bad) fisub psubsw ret dec pusha sub popa mov imull cmovs shrl xor inc arpl add jns sub iret ret mov jle fsubrs push andl adc lods (bad) or adc or pop mov pop pop cmp mov sub lds mov hlt or sub xchg xor adc ja (bad) pushf push out outsb sub or icebp sbb test mov divl adc (bad) jno add idiv fxch adc iret mov dec je (bad) sub or (bad) repnz jecxz sub pop mov test dec ret mov bound dec decb negb jg rcll ret test (bad) lods fisubr sbb scas into lahf in es scas outsb mov sahf push mov add push and or xor sub shrb into jb repnz aas lret outsl mov pop xor xor lods das outsb icebp sub jmp rorb sahf mov xchg cld push sub clc push mov adc rolb xor mov call outsb sub xor jp xor arpl inc sub hlt sti mov xchg popa xlat add aas bound xor add pop rcr not jb push cmpsb pop dec lods adc cmp shll loopne jg dec or fld and inc mov jbe ret push xor repz clc daa pop xor fisub scas sub push or (bad) push jle push sub push into push mov push xlat mov popa daa sub cmc adc or adc dec (bad) popf insl jno sub sbb (bad) data16 out and outsb fstps mov popa (bad) (bad) fbstp dec or and dec push movq xchg mov dec test mov or adc out aaa stos int das icebp adc pushf xor (bad) jno xchg stc int insb push ret icebp pop fsubs int jnp arpl insl andl xchg rcll aad repnz xor push lods sub insb xchg dec fcomps shr fs adc pop push out inc out mov mov cltd out sub ret into dec mov fsubrl iret fsubl fcompl xchg sti mov and jle repz fsub mov jle mov xlat mov jb jbe out leave out test repz xchg pop lret and outsl push xchg jmp jl call stos xor sub mov xor divl cmp pushf push out or mov fxch and xor cli and mov shll leave or sub mov add sahf jge repnz cwtl pop iret sub cli iret dec ffreep mov imul xchg mov adc dec jge mov es jecxz imul dec scas push push pop sub fldcw pop or mov jae add sub and and daa rorb int3 adc sub add xor stos repz (bad) je push push scas insl fs testl jmp and pop cmp call pop repz cltd sahf lcall aas fucomp sub scas data16 pusha xchg in das jge pop xor mov std lret std (bad) ljmp sub jmp add sbb inc gs jmp leave pop iret imul test (bad) (bad) lret imul inc jecxz mov mov fstpl nop or notb inc add xchg mov stos loop xchg out rorb cmp sbb inc adc xchg sbb repnz mov mov pop dec mov inc mov jmp (bad) test aam dec and or mov inc inc xor and (bad) out (bad) mov and fcompl negl or xor into mov jns rcll and mov stos popa jmp dec in fiaddl mov aam testb jp mov pop mov xor xlat adc push (bad) and push pop sub jmp adc pushl pop stos str rorl mov adc into add ret add push adc popf inc mov ljmp lock into or xlat mov fs scas and dec cwtl mull add scas outsb add xchg lret jne dec sub bound pop ja repz add sub mov daa pop mov pop mov add aam cld nop mov inc shrl fisub ret (bad) adc into addr16 jmp adc (bad) and adc lahf loopne stc xchg popf cli jae xor cmpsb sbbl mov or das mov sbb movsb xorl pop test and mov addr16 add xor sbb jle (bad) aad and sub addr16 call mov and fsubp loop notl bound bnd xchg aad cmpsb push add xchg ret mov lret mov sub (bad) fildll mov dec ret and xchg into or xor add xchg adc in xchg jnp mov jne ret cli or and mov cld and xor out mov add gs fwait stc popa dec cltd pushf sub dec mov dec in out mov ret pop dec ret push xor rclb outsl lock mov aad sbb lods jnp (bad) repz sahf adc add sbbl scas bound mov add sbb xchg push push sub pop cmp mov cmp rolb pop push xchg push loopne ret rcrl mov mov add mov inc inc or icebp popa and and outsb lods sub mov push dec inc and xchg ret push inc mov loope ds xchg je xchg mov jae inc xchg cmp test mov fcomps push clc add mov adc pop rsm sub mov push mov pop xchg jae xchg or lret lret aad js pop pop les mov repnz adc pop xor insb mov call adc icebp jg stos xchg clc sub das flds sub mov cltd sarb push add add or ret lcall jg xor or addr16 dec into sub imul outsb imul notl xor mov xchg pop enter push jg xor xchg cmp out adc icebp sub cmp pushf mov (bad) adc sbb ljmp popa add jp sarb int3 jge jl mov in repnz call fcoml insb mov and dec ret add mov add js scas or imul adc (bad) ljmp (bad) ret xlat or mov adc lcall add mov xor cmc lcall sbb or cmp and ret orb clc xor scas hlt test cltd dec ljmp cwtl cmp ret jle lret and xor std jle cmpsl (bad) or and neg and daa jge mov inc xor divl sub shlb scas sub out in add sbb in pop andl daa fstpl or adc mov (bad) xchg lea (bad) repnz rcr add leave sub std inc stos movsb add icebp scas bound je enter fbld das mov sub out gs add lcall loop xchg push dec lods fsubs mov shlb inc repz shrb fiadd sbb pop sarb mov fsts inc loope mov out dec loope das mov sub in and push or or mov fildll enter pop lret leave dec out pop dec dec jmp cmp sar add frndint cmc ret dec and pop xor (bad) icebp shrb leave add or xor dec outsl add mov xchg mov and cltd fisttpll sub pop cmp mov or lds cwtl jno xchg pusha jmp clc movsl daa add (bad) xor inc test sbb cltd popf (bad) jle rcrl insb xchg (bad) repnz jp sahf xor cltd xchg jnp dec iret test movsl movsl adcl lret push ficomp sbb das xchg xlat and or dec or inc dec je inc add sti (bad) sbb movsl or sub mov cli push out jle adc mov stos aas loop lret ljmp mov sub (bad) sub imul sub repz pop dec mov adc add mov xchg mov out stos dec (bad) repz dec mov dec (bad) jg xchg (bad) repnz ret mov rcr and push dec sti sub xchg jbe (bad) sbb jge aad negl inc pop js mov pop rep dec enter nop negb jmp xchg jecxz,pn push int sub repnz sub add mov inc mov repnz mov mov pop stos sub call daa mov jne fadd jg sub and aam ret sub das pop adc popf repz call js mov xor shrb xchg xchg cmp add cwtl pop adc test jmp dec pop sar xchg xchg adc pop mov movsb sbb pop test fstps pop gs or sub cmp sub jbe loop jno inc dec aam clc jo pop pop cmpsl (bad) dec sub idivb (bad) (bad) shr shr std rcll (bad) dec mov fs add lods fidiv pop xor iret decb lret movsl push ljmp (bad) hlt scas xor (bad) push jns loope jecxz fs mov lret xor cmp xor pop add sahf das sub push jno gs in pop sti je lods pop cmp dec sub inc sbb sbb push fsts add or sti fist orb in bound faddp iret jns xchg or repz mov scas gs movsl pop jg and (bad) mov xor mov pop sub repnz pop lret test test sarb adc mov jmp push pop xchg mov mov and mov out xor dec cld movsb movsb mov cwtl jmp aam outsl push cli cmp ret dec sbb imul xchg sub imul cmp imull stos cld in pop notb ja stos cmp fisubr mov sbb push fsubrp das out cmp mov icebp cmc and sbb jne push dec (bad) xchg pop stos xor or xchg hlt mov (bad) cmp pop sub xor cmc in mov mov lcall jl mov (bad) cmp pop fimull (bad) cmpsl jmp mov jmp add pop mov daa cmp sbb in sbb jl insb (bad) fisttpl lret sbb lods std inc pop out push out xchg dec xchg sbb xor lret adc sub sarl xor das clc fsubrl (bad) mov mov dec popf mov jnp sbb mov (bad) sub pop scas aaa ja sti out mov leave out icebp mov int3 push mov mov shll mov stc or lds mov cmp sti sub pop sarb or ret pop adc (bad) xchg ja jnp call stc repnz jecxz pop bnd push sbb shll mov xchg jge sub call jge dec pop inc dec test addb mov das dec repz push mov or jg inc cmp xchg ljmp and pop fwait mov mov pop les push xchg icebp xchg pop insb das push pushf fisubr daa or push mov fucom fldenv repnz xchg in ss pop mov mov sarl sub lea loop xchg jl add adc sti sti and mov push mov push pop faddl fsts nop stos mov idivl mov dec sub jl icebp inc fwait cmpsb add leave icebp (bad) ja (bad) mov in (bad) mov dec mov add decb mov ss mov rep mov push loope mov cs loope adc sbb roll add ffreep inc adc mov pop ljmp and pusha ret push and movzbl push icebp bnd push mov imul and lods add cld pushf lret fcmovu mov dec mov add ds jmp inc add (bad) fs icebp fdivl xor ja dec ljmp add fwait pop pop fisubrl and dec xor mov cmp (bad) fs loop and out xor rcrl (bad) movsl in or notl arpl sub mov jnp (bad) mov aam stc adc lods mov adc adc adc (bad) xchg mov add sbb xchg fidiv mov lret jmp dec out loop rcrb lea sub lods xchg jecxz push rolb fmuls cli daa cmp or cltd into cmp or jo movsl ljmp push iret adc jge xor ljmp out cmp adc mov jne jmp mov inc outsl xor xor mov mov stos out dec pop pop movsb inc add pop stos mov mov or mov stc ljmp imul cmp xor jne call lods adcl lahf stos cmpsl sti sub lock push xchg test or dec xor cmp mov and adc mov repnz add xchg int3 mov (bad) cld sub adc xlat mov jno sarl popa lds (bad) cmp xchg les stos icebp rorl add xor mov mov and das nop aaa mov shlb (bad) xchg data16 pushf dec jecxz push jl fcoml add (bad) adcb incb leave insb lcall lret xor mov jns (bad) dec lods push and leave lret repz out sbb push and inc and xchg lock cmc push cmp leave ja sub test out (bad) out into and enter sbb push jbe or ja mov adc aaa mov jo dec imulb dec cmp inc and sub arpl mulb idivb push lcall cmp cmpsb cli and inc jge xchg add pushf sbb xor xchg out loope and lock inc sbb xchg fisttp out mov push pop fsubr leave hlt xchg imul rorl mov jmp (bad) xor das or (bad) loope loop xchg (bad) ljmp xor sahf mov xor mov jmp jb fbstp dec xor jg mov adc sub ret sti pop and (bad) popf sub fisubr das sub inc dec gs ret mov stc ss cli shl lret mov leave jmp dec cld sarb in scas adc inc shl cmp jnp adc in xor vunpcklps cmpsl mov sub sub mov hlt clc lods sti nop adc out mov xor lret mov stos pushf xchg or mov loop idivb (bad) enter cmp movsl test lods jl sub and test push int3 mov jg xchg mov out inc repnz lcall imul push mov bswap dec jmp xchg push dec decl out lret mov pop adc sub xchg lds (bad) mov cwtl sbb div mov loopne aad mov jno push lock pop xchg add pop pushf xor out xor mov lret mov xchg mov xor repnz pop push arpl xchg (bad) dec cltd xor dec out xchg inc xchg fnstenv int3 lret (bad) and jnp adc xor cli mov repz pusha enter fwait sub in xor sarl in mov lret fsubrl out clc and ret mov adc test sub push sti xor loopne cld rcr (bad) repnz mov (bad) dec loop,pn push pop jge xchg dec cs mov inc pop dec loop xchg add leave pop xor std cli pop dec out mov pop add xchg sub xor mov mov or lret add jmp pop add cmp (bad) sub cmp out out mov dec or rorl nop xor adc push adc (bad) fsubs pop add loope mull imul (bad) sub sub ret or clc std xchg (bad) addr16 add xor add push (bad) aad jno das data16 jnp mov and cs adc daa in cmpsb pop and lret xor in inc icebp cmp mov std sbb dec lret aam (bad) sbb loop mov or addb ret push and add rorb xlat stos (bad) sub out out pop push or fisub add jge or sarl push stos fldcw cmp imul int fs (bad) rcrl mov in mov sbb push test fdivrs and xlat stos in outsb mov test clc push iret cmp xor cltd inc and xchg mov pusha pop out movsb mov pop rorb add push adc dec ljmp shrl mov xlat inc insb sbb test and cltd mov dec call (bad) fist sar outsb xor into mov xor icebp and sbb mov std xchg out pop and roll xor jge les btrl pop setp xchg mov lret ret sbb out jbe aas add jae xchg adc loop test adc fcomp mov and (bad) mov shrl pushf sub pop test es inc sahf pop push out fs dec loopne out lahf xchg ret (bad) movsl mov lods jbe in xorl add lea xor cs or je fs mov das sub dec mov add and ficoml inc lret sbbb (bad) mov jecxz or or mov jne sub jno fimul inc out cmp lret mov jae bound mov gs aas mov iret int3 test lret shll mov add xor inc lret sub add outsl test cmpsl fs add stos xor scas mov or add gs pop orl jecxz fistl push push js mov and xchg mov xor xlat add mov xchg or mov xor jle daa cmp and sub jg iret xlat ljmp rcr xchg add mov mov cmpb sub pop enter divl mov sub xlat mov test out pop lods int inc xlat fldenv mov dec imul popa or mov loop sub mov jne fcomip iret lret push pop gs ljmp sub add xor jmp inc lock inc mov mov out repz inc imul (bad) xor mov inc cmpsb aaa push sbb dec pop int3 push loop sti arpl shll add sub pushf push and cmp mov divl mov xchg inc push pop mov scas mov push les ss jecxz jg out inc test mov jmp sarl iret in and lds xor ds popf or sub les popf icebp mov lfs aam lret jbe fs scas (bad) (bad) in scas popf jae push (bad) dec pop xor repnz mov mov pop aaa jle add repz or sbb (bad) mov jnp jg mov xchg pop ljmp ljmp lods sahf mov fsubl test jns inc xor mov mov nop rorl jle mov leave cld pop scas xor repnz push xor cmp orb push (bad) (bad) xor or xchg push mov data16 xchg into loop cmp gs xor mov insl adc adc xchg mov je cli xlat push or pop push sarl xor cmc push mov cmp (bad) outsb add (bad) idivl fidivr cli add das in lea scas or xlat push inc cmp clc mov or repz pop and leave aad ret push add jecxz mov pop (bad) xor outsb sti mov push sbb mov or (bad) inc or insb sub ret xchg sbb es or (bad) jnp xchg add lock (bad) fwait pop cmp stc ljmp stc and pop (bad) jmp inc rclb out jmp sti sub das xor cmpsl xchg adc leave cli aam fs or (bad) sahf notb adc jo mov xor in call sub add mov dec mov cli and cmp inc (bad) cmpsl fsubrs dec into pusha sahf gs mov or clc out adc ret mov sti and (bad) mov pop and int jl dec lret jl repz repz ss cmp sub loop (bad) hlt sub sub or add mov ljmp mov das pop nop es dec lret mov adc mov je out inc repnz add cwtl cwtl iret mov lds mov mov and mov (bad) stc jmp imul jg cwtl das loope cmp pop shrb iret cmp jnp repz rorl (bad) jne stos aaa imull sbb loop idiv push imul into mov in or jmp inc dec int3 lcall pop xor sub aas push push repnz fisubrl sbb jmp cltd (bad) jl test (bad) scas dec (bad) repz dec pop ljmp push aam and inc mov xlat xchg mov push pop idivl gs xchg sbb cltd cmp add cmp das or sub lret or xlat (bad) push add cmp ret cmp and xchg pop dec push shrl sub insb and mov lcall inc jmp push mov cs mov mov test shrb sub shrl push cs in push adc or push push mov cli and jbe mov movsl stos lret les fdivrs movsb (bad) xor std pop xor into inc jns pushf cmp and dec adc shr mov cmc xor gs jb and popf xor push pop fwait push add shll dec pop jecxz pop in dec push pushl popf jge pushf hlt pop or scas mov pop call scas loop rcll fmuls mov imul adc mov inc mov dec cmp lock cs lret sub mov sbb sarb leave lcall sub scas xor (bad) (bad) mov (bad) outsl cmpsb mov ljmp xchg iret sti sub or sarl imul lcall push and idiv add sbb call fldenv movsl jg mov sbb and pop pop int3 or sub jo jb and cmp loop cmc cmp mov inc aaa sti add push test jmp pop dec jecxz pop les jecxz jle pop shl rolb fidivl sbb pop jno and pop lahf inc push dec out mov aam scas insb int and lcall (bad) jne stc fs roll bound out jb mov je pop bound in sbbl xor (bad) mov inc jb mov pushl out out scas lret cwtl cmp imul jbe add fs loop loop dec pop out push add dec mov jns imul test lret adc mov sar or add push rorb in (bad) lret mov rorb mov add and mov cmp movsl mov in jbe das pop aas imul sub sub fsubl inc (bad) mov sub mov out dec or icebp or scas xchg stos (bad) mov test mov dec (bad) mov push dec and jo leave stos xlat mov not ss scas out mov (bad) stc test jno mov es adc (bad) (bad) dec and inc pop push xor mov jp or into sub mov adc mov xchg xchg add mov jmp scas jle pop jo mov pop push xlat int3 mov lret xchg lds xchg adc mov xor inc imul pop mov sub sub repz or mov aas inc push jnp mov cmp out (bad) push bound fs in mov leave jno mov dec repnz popf jbe dec cld out mov or jnp test fucomi push cmp push and call gs test (bad) jmp sbbl movsl adc lret call (bad) das daa inc dec and into popa test mov stos cltd push add jmp loop stos or sti ret or and xchg sar push jg cli cmp les scas sub mov aas mov repz and cmp push xchg mov jle push data16 adc xchg lock or or add pop iret icebp jp mov cmp cli cmc sbb or stos mov mov pop xchg imul jbe cltd sub fdiv inc and dec sbb lcall push push pushf inc mul push inc ret jg inc ds pop (bad) mov lret and xor rol jmp pop sarl jmp clc xchg hlt ljmp sub repz test lret dec sub push lret dec sbb pusha (bad) sub mov sub daa pop adc or dec test (bad) mov outsl out jbe mov and jne repnz jno bound call out or pop leave push icebp rclb sub cmp sub add call sti gs mov pop (bad) and loope,pt (bad) mov jno inc and mov fwait stc or push inc or sub xchg imulb int sub enter je (bad) into xchg pop pushf xor lahf lds jb pop mov add add out pop into mov pop or adcb popf mov sbb xchg (bad) (bad) and repz test movsb mov in sub jecxz std lods add loope loope jp aas mov xlat fsts or js sub rcrb mov shll sbb in push out xor xchg sub lret adc (bad) add aaa cmpsl in and aas xor (bad) mov dec mov jecxz or cmp movsl inc loope daa xchg push jbe or adc ljmp (bad) xchg cmpsl dec dec clc mov xor pop ror jg stos (bad) or je (bad) test frstor pop sbb clc mov mov lea imul mov bound clc aam rolb rcrb and or or sti fmuls lret int3 xchg push pushf fmull add sub (bad) insb pop add mov jns loop test and dec (bad) sub pop mov mov fdivs das lret xor mov (bad) aaa sub push test rcr mov add jecxz loope push mov sub and xor push cwtl xor lret push add stos jecxz pop cmp sub aad mov mov push adc sub sub mov jns aam jb ret aam lret push or xchg ficompl loopne or lcall inc cmp adc sub popf in mov jmp lret std adc ljmp in xor scas sub jecxz imul pusha repnz clc adc sub mov imul and or decb xchg push out dec les std outsb and hlt mov cmp inc nop (bad) cli fld outsb in push fidivl xchg push mull mov push out inc xchg pop dec mov add jmp adc sub and sub xchg fistl mov (bad) fbstp sub mov daa push cli mov jb stc ret dec xchg inc inc mov into int3 mov add sar cmpsl sahf pop mov lahf data16 and pop stc leave ret das call pusha mov fisubrl dec pop ljmp and and leave divl pop jno test outsb dec lock or push ret mov sbb leave mov imul pop ret negl scas jae mov or lods out lds mov gs ss adc xor mov xor leave and stc stos mov and cmp test jmp mov xchg jns mov xor icebp lds sub movsl or and sub adc call inc and (bad) sub jns lods fstpl and add ljmp add xor push jmp sub in push int3 fmul test cli sub ss and dec hlt cmpsb mov mov mov je fcoml push leave sti cmp lret xor ret inc sbb push pop jmp dec cld gs repnz dec mov push pop xor popf fcoml push movsl and mov shrb ror jnp mov stc and ret fisubrl add mov adc inc mov mov cmp test adc arpl fstpt xor pop lods test mov jmp bsr mov xchg addr16 and or mov inc ds pop mov add jne movl mov mov dec cld ret mov mov gs or icebp sub mov fpatan lret fbld mov mov std insb sub or push xor pop jecxz or clc inc dec sub rcll bound (bad) pop mov add (bad) leave and into cmpsb ret pop add mov inc dec sbb frstor or test out push insb sti push icebp xor mov addr16 call dec and cwtl imul mov xor jae lods jg (bad) std xchg outsl mov (bad) (bad) add cltd mov push pop adc sbb mov xchg or repnz icebp xchg mov pop fstl repnz fistpll icebp mov sub out mov sub mov gs mov sub (bad) test mov (bad) das sti jb out inc adc (bad) lock ret sbb out jno dec fildll push jns popf sahf lods mov loope mov out das mov push stc pop sub mov imul iret xor rolb inc xlat pop mov ucomiss cmp mov jne adc pop add sbb into fist out loop lds push mov pop lods pushf dec clc pop loop push icebp iret mov (bad) mov mov mov mov andb cmpsb xor sub imul mov imul fisub xchg and fdivs dec sbb mov ja push icebp jnp stc adc stos mov ficoml mov jecxz sbb (bad) and sub push stc xchg pop enter mov jns je loopne and clc xor add aam test add xor cld dec bound enter jecxz inc push aad ja or fs push iret xor ljmp jl test movsb xor cli push push mov leave fmuls add mov cmp test and movsb adc mov add ret shrl xor cmp push and sub cmpsb mov outsl out jns lret pop mov je imul in mov pop aad sti push sbb mov iret add add iret mov push (bad) idiv cmp call cmpsb (bad) dec fildll shll or lcall (bad) gs aas ret mov mov xabort fwait les outsb add lret add int daa jle movsl pop push add mov sub (bad) jp push faddl inc jg sbb inc or ds mov push mov add jle inc sub add out add ljmp popf and das loope xchg push daa xor lock (bad) mov notb das jae sub add sti cmp (bad) stos repz lret loopne lahf pop (bad) mov inc (bad) pop fistpl cld jg xlat fistp mov out xlat xchg repz movsl fnstcw xchg sbb (bad) jno jl movsl (bad) enter leave pop shrl cmp mov inc sarl pop or inc orl sub adc ljmp into negb and pop jg mov call pop pop lods mov ret dec mov icebp mov into push pop lds mov pop xor out xor mov sbb xchg or inc lret (bad) outsb and pop add push int3 xlat push jo sub cs cmp int3 lret xchg add and mov fisttp mov xor cmpsl adc lret ret ja ss and mov jmp clc jg stos negb push add xor jae adc fildl fucom sbbb jne push repz (bad) enter pop push push or test ret xor mov mov imul lret imul pop leave jne cmpsb stc inc xchg pop fmuls add mov fs icebp into push dec jmp mov divb push enter pop fildll dec mov fs inc dec pop iret cld add cmp push xor sub and lcall idiv sub or xchg stos lea sub pop xor lret sub mov (bad) and (bad) (bad) and (bad) imul int3 fwait neg pop pop lea pop int fimull stos mov mov pusha iret test add clc add (bad) aad xor sbb in cmp ret add test stos add loop xchg mov (bad) das mov cli sbb sbb or xor fmuls repnz sub hlt sub sbb push inc popa clc xor rol fxch cmp jecxz dec clc repz shr popa test fldenv cmp sub jnp adc mov repnz out push jne pushf push inc leave aad insb scas rcll movsl imul jmp jns add repnz pop jb add jbe int3 mov popf (bad) mov jle lods shll mov add jbe (bad) mull jge mov je ret aam push sub mov in mov pop dec je fs clc or scas xor (bad) repnz out add aas mov mov imul aaa data16 and pushf bound out fwait inc outsl dec dec push movsb push sub mov ret test mov xchg push pop or cmp lcall lea add jge int jbe push mov xor inc (bad) cmp (bad) xchg idivb mov fstps pop add adc roll xchg jle in loop add sub mov mov mov das mov rcrl shrb cld adc fidivr mov mov aad mov into bound dec sti cli bound mov (bad) mov (bad) mov insb dec out iret mov negl lods (bad) xor (bad) add jbe push jo loope cmp jle push jmp sub leave rorb (bad) popf push clc push mov push pop or mov call jecxz sbb pushf lods outsl (bad) xlat xor stos ret pop cs flds inc add fild into jge mov mov push add jmp jns mov adc sbbb cmp das mov mov dec adc leave std lcall pop mov sub popa ja stc mov push push and xor and sub mov orb aam (bad) aaa aam sbb cld mov mov mov or test pop in adc mov mov imul lcall out sub push sbb dec lock push lcall inc xlat int3 mov or pop jp ret add popf push push (bad) in dec leave iret jne push (bad) (bad) scas rorl xchg lcall sub inc push xor cmp mov stos dec sub jg idivb push in and mov imul daa ljmp jnp sub pop movsb inc adc pop orb lret loop fistp jmp loope cmp mov and fist and jp mov xchg xor cmp mov mov rorb fsubs mov push fcoms repnz lock es adc xlat mov fcmovnbe movsl pop mov mov xor das inc div (bad) mov imul test lods outsl cld dec test sub (bad) xchg inc pop jge ss (bad) data16 push loope mov into pop sub mov sub xor fs jmp jmp lea sarl sbb jmp xchg mov pop dec test or sbb dec mov dec mov pop cmp mov out orl ja push push jmp into jmp push xchg in les or sbb fcoms movsb outsl movsl lahf fdivl dec mov mov imul lret arpl mov divb cwtl or sub test sub add add or sub popf insb repnz incb fs xchg lods jo xor and int3 leave push test (bad) sub sti or sahf and xchg rcrl sbb je and jnp sti adc xchg stos je fcomp jmp clc (bad) dec ljmp les cmp stos xchg divl gs dec sub xchg (bad) pop jmp (bad) dec mov sub lahf jae or lret out das sub les add rcrl inc jge js add fs scas jmp inc ljmp lret add jb in into dec mov lcall popf pop (bad) aad mov aad mov es xor dec repz cmp pop test ficoml lods push inc sub ret icebp xor mov jmp aam push xor push or sub fwait xor mov and lock add add roll add hlt into jmp aam scas or (bad) pop leave jne aas daa in std and add insl jge dec and hlt dec xchg into stos mov ds pop clc pushl mov shrl dec das or add loop fildl jmp mov pop sub and ret or scas popa adc inc outsb cmp cmp xor jmp jns push xchg dec mov cmpsl (bad) bnd in mov dec dec sahf scas cltd mov and xchg pop xor in stos mov xor repnz nop sbb (bad) call ljmp lret pop ret or lcall inc popa and sub inc or dec or and ret push icebp aam cli loop jl push xor mov pop mov das add and push or negl sub xor cmc xor icebp daa js mov leave out (bad) mov shrb (bad) loopne pop fcmovnu mov fdiv pop mov stos jl dec test sub pop add cmp mov mov add hlt push (bad) pop pop xchg adc mov bnd imul cmc add sbb cwtl or and xlat mov jne mov daa cld mov cmpb int3 xor inc sub pop int3 ljmp movsl insb mov or mov jbe aaa loop nop pcmpgtb sub icebp leave dec or mov mov loop ret pop dec cld mov loop out lcall inc ret pop cmpsl mov ret add xor int3 mov dec xlat (bad) dec fdivl add cli popf push lods pushf and push movsl mov jns (bad) mov sub addb xchg xchg pusha repz notb es mov adc sarb ss and lcall jmp andb rorb cld and mov js outsb fstps test mov sub test push mov cmp add cltd mov ja lret mov xor pop mov mov rorb xchg mov jge jo xchg lahf push (bad) dec jo push ljmp pushf add pop popf shrl aaa dec mov lahf xchg aaa scas rol pop push mov and sub pop pop cld cmp mov mov dec (bad) shrl popf and subl in test pop lret into or sti xor and cmp xor call pop jmp inc aam daa or clc sub sub outsl mov mov cs gs cmp jmp inc sub push add jb pop daa and mov sub dec mov sub xchg pop cld sub or mov lds mull cmp jle rorl sub mov xor mov pop cld icebp cmp mov dec cld cmpsl rcrl mov mov sti xor mov mov push or inc loope jnp sarb xchg mov jbe pop pop movsb sub cmp out outsb push ja repnz push fldlg2 mov adc das mov (bad) icebp sub popf test sbb sbb or pop jno xchg repnz inc repnz push or ds and push mov and stos sub ljmp dec stos dec inc mov jp or mov push sub xor add pop mov addr16 sub pop add fisubl enter mov mov mov jge fisub loop xchg out inc subb outsl jbe push xchg adc push mov jnp pop jle pop xorl shrl pusha (bad) cmp popf push xor xchg and insl mov adc push pop xchg jp aaa push test and xchg jne dec add cmp cmovo (bad) hlt xor into sub pop xor cwtl call pop ds jge push push mov jmp lock inc jge or and or add or addl jmp pop in scas (bad) xor loopne ficomp cwtl or ficom xchg push cmp and dec out mov fisubl push xchg imul rcll pop leave push push cld cmp mov dec push jnp sbb mov loopne sub adc ljmp fptan sub dec pop mov mov inc xchg dec jmp push bnd lret pusha outsl cmovge pop mov repz mov push mov add sub pop mov adc push push adc add jne xor pop jmp push add push mov jle sub mov pop dec push cltd add and js sbb out jae jmp loopne or add xchg xlat jns push out pusha sarb jp aad std lea gs xchg mov orl mov jle rcr jmp mov pop lahf jg inc jmp insb xchg adc (bad) xor pop invd pop sub push jnp mov or mov insb pop mov jle push push and or pop dec mov xorb xor sti cwtl xor cwtl lea mov lahf jle ja mov rorb sbb je stos out es ss stos sub xchg mov nop pop cmp in mov push mov or clc pop push push shl dec adc orl add lret test or push jo push (bad) std outsl not in out adc out lcall icebp pop mov into in xchg cmp xor jle imul jnp mov sti ja mov int3 les dec xor jo add mov aas or in std clc fmull mov (bad) pop inc cmpsl xchg pop sub mov das push mov pop lods lds push and mul pop add mov sahf cmp mov bound mov out arpl inc xor push aas out aas out push add lods pop shr add fld scas lds jae das mov and movsl out cld pushf mov inc testb mov push cld jg jnp lds mov cs sar rcrl jmp int3 sbb (bad) jmp sbb adc (bad) das mov or iret jmp pop jle leave les sub sub mov movsb aad (bad) call int3 push icebp mov fcomps sub add cmp or xor xor jmp daa mov cmpsb push dec out cwtl fucomi mov (bad) push stos inc popfw test sub xor add rorb sub mov data16 mov xor cmp mov sar xchg mov lock adc push push jbe imul lods sbb cmp sub jo dec (bad) jg mov fmuls (bad) fisub or fnstenv jb jge pop jmp fisubr mov sub orb sbb add enter mov jns sub sub lretw inc rcll mulb ret addr16 add and das mull cmpsl ret in push aad xor add cli lds pop or mov adc adc push in mov call dec pushf xchg das cmp js xchg int3 rcll pop mov jns repnz xchg xor hlt ljmp push pop and es cmpxchg xlat jns mov and aaa repz (bad) push and pop xor fbstp push notb inc and push jle iret or push or roll xor (bad) xchg pop mov pop mov dec mov xchg sbb sub (bad) xchg add xor scas cmpsb mov xchg inc loope cmp xor test sub sub pop jmp addr16 or add sub out mov sar (bad) dec or ret shll aaa scas rorb sbbb (bad) out mov dec scas cltd ja mov int3 xor or mov dec jge div xchg sub add mov hlt cmp pop mov inc rcl ret jmp jmp punpcklwd xlat pop or rorl (bad) jo xor int3 and test aaa lods mov sub (bad) jns addr16 imul cltd mov mov fcompl outsb inc dec or ljmp xor enter stos aam shrl mov mov (bad) jno inc add mov mov stos lret pop sbb push add fisttpll je loope andb mov pop daa add push pop lds dec rolb mov sbb sbb cs rorb cmp divl mov roll leave enter mov fcmovbe xor pop (bad) fldcw mov dec test in cmp sbb sub mov mov sub push pop (bad) jl gs push imul das fbstp xchg pop sub or xor jae dec jns aam add mov ror les pop movb in jl xchg mov jae ret pop cmp rcl sbb ljmp data16 xor lods (bad) fist in cwtl ljmp sbb mov jle jmp stc icebp add movsb cmp sar stos lds pop pop int xor repz in (bad) in sub xor mov loope jl and notl cmp (bad) jo xor pushl sub and hlt cmp out call mov notb es insl test jp mov idivb jg bound imul (bad) pusha movsb call pop and fistpl int3 (bad) std rcll xchg pusha repnz mov shrl adc mov pop or cli roll loop shrb jmp mov gs dec or shrb (bad) nop jmp mov cmc or lods les push and and mov push das lds mov dec xor mov mov hlt xchg (bad) out (bad) loop xchg sub sti outsl add (bad) add push lds or xchg mov pop (bad) fs clc mov mov xchg sub idivb loopne push (bad) xchg je rcrb dec push xor mov dec adc clc popa iret pop jmp stos scas in std mov in and icebp dec lret cmp mov insb dec xor fs or mov mov pop xchg (bad) rcll jmp fwait mov ljmp scas xchg jmp inc fidivrl iret test or ret fmull sub mov (bad) loop out dec dec fadd repz or sub push notb ja cmp aas and and pop mov adc mov mov addb lcall repnz repnz leave cld mov ja or push cltd addb mov pop mov xchg jns add imulb iret sahf test or shrb lcall lahf sub sub pop in sub les and scas jp out (bad) pop adc push sub inc mov pushf shlb ret dec sub mov hlt je xor imulb jecxz mov push or fisub out adc orb cli test leave sbb cmp comiss or ja and gs adc out mov loope pop jl inc sub pushf mov mov scas fdecstp adc stos or cmc jno aas sub mov mov cli int jnp sbb mov test add fldcw (bad) arpl cld dec sbbb jmp (bad) xchg dec pop cmpsb movsb sub cwtl jo fsubrs repz je dec iret mov jle (bad) jl add ja jne,pt fsubrp out mov sub movsl test pop (bad) cmp mov or jmp mov mov mov sub imull mov jge xlat and mov scas mov out and xchg and ret pop adc xlat pop mov add add sahf cmpsb rorb (bad) mul pop jns add sub rorl dec in insl mov loop dec jae (bad) test cmp lret test cld ja and lahf fsubrl xlat mov pop dec inc adc es pop cli cmp push adc lret sub (bad) je loop das mov adc mov sub add jle aad js fsts enter je push push (bad) dec in jb xor sub pop xor outsb sub sub add push movl and cmpsl push push pop adc ljmp or xchg out cld mov je push push pop sub dec mov cmpsb icebp and sbb sarb popf cmpsl jb inc inc lret adc xor divl scas test mov mov dec xchg sbb sub inc arpl mov fisubl jle jmp shlb mov aaa dec fbstp in mov mov sti aas lea add and movsl push jbe or idiv scas cmp jmp jecxz mov and (bad) sbb mov bound xchg mov mov push xor add mov outsl std pop movsb add mov cltd xor aam pop repz mov dec (bad) xchg or push inc cmp (bad) push rcl xchg cmc mov cmc (bad) inc mov rorl inc jge sarb add loope or jb insb mov sbb cs icebp sbb cmp sbb imul jg mov (bad) jl push or adc inc cltd lret dec fdivrl add or jno fs js lahf cli rcrl or pop inc dec jge mov xor mov jle sbb sub dec loopne pop cmp push or add push mov xchg or xchg add jl leave ja mov aas mov mov lds in pop mov push sahf into mov mov and dec mov lea sbb mov xlat xor pop jmp pop mov mov inc rcl pop das cld and mov pop jb inc pop test roll in xlat ret hlt arpl lret sbb xor std jmp sub cli mov iret fbld scas lahf fldcw cmp jp icebp and (bad) test lret cli fmuls dec aas arpl ja xor mov imul mov mov add int cmp test movsl mov mov in ret movsl mov pop adc push jns (bad) cmp les push dec jge out mov bnd xor testl sti das lea pop and mov gs mov or test dec and fwait dec and xchg movsb out mov dec cmpl jmp or nop aad clc sub rcrb xor xchg enter jmp adc xor in fwait pusha dec sub xchg sub inc mov cmp xor (bad) cmp sarb fstps and fcomps imul rclb lret jnp jno fsubrs sub (bad) lret lods jae mov sub roll or sbb popf push mov jns inc inc sub js aam and cli rcrb xor jmp mov ljmp mov mov pop pop push inc pop enter pop mov imul pop sbb dec dec mov mov sub and sub mov lret std popa pop jecxz lret xor cmp jl dec mov mov push scas inc or mov adc mov mov inc hlt pop sub jge dec int3 add out dec mov xor jg loop dec add mov aam les (bad) mov push push cli adc out js js add xor sbb loop inc mov or (bad) dec jmp repnz dec fldenv jmp leave cmpsb (bad) mov ret cmp decl dec push imul pop das insl xchg cltd call nop mov push jle and and imul xor rcr faddl jne shlb (bad) mov xchg imulb rolb and xchg lret sub les sbb cmpsb pop pop xor loopne xlat lahf cltd lods out push jo cwtl mov pop mov (bad) addb xchg (bad) cltd insb add mov sbb jecxz pop mov add jmp int jp notl and pop ja lea sub jmp in xchg sub mov iret mov lock sub fidiv fnstcw (bad) lahf jno pop lock sub mov pop dec fdiv lods inc push add imull push ficomp movb inc mov add fidiv adc jns test inc data16 add cltd stos cs mov cwtl pop lret cltd xcrypt-cfb cmpsl loope sbb sub rcll (bad) popa movsl ret and adc jno cltd xchg add xchg stos xor sub cmp movsl lods outsb dec popa xor push xorb sub inc dec out cwtl insb ret mov mov push std int3 xor in dec lds mov les xor subl push cmp das repz mov iret xlat stos iret mov movsb sub jle push mov jp arpl mov mov xor mov movsl cmp cld dec push xor mov pop adc xor xor jecxz imul fistp pop clc fs lret pop dec mov adc sti ljmp dec (bad) into leave jg and mov mov pop sti push mov leave (bad) incl xor (bad) adc divb add loope sub (bad) rol jge mov out popf xlat or (bad) push and movsl sub inc insb push aad jno xorb sub or fisttpll vpshaw (bad) inc int3 pop xor sti gs je sub loop test mov adc jmp lea push xor cmp (bad) pop xchg fisttpll out daa pop push push pop push jge lcall mov nop pushf pop (bad) mov and jb push out aas imul mov dec scas bound icebp aas iret mov mov ret lret push push dec sbb adc fcoms (bad) jl xchg insb int int3 push (bad) fnsave mov jns dec push xchg push xor jl jmp add jno and cmp xor or inc fwait mov jle sahf (bad) pop jecxz test fistp orl sub xchg adc pop mov mov add lds inc test sub adc addr16 adc lods fcmove ret xor lds iret cmovg jmp and xlat and inc cmp stc and pop adc pop repz cld pop adc add push cmp outsl xchg scas repz dec call sub insb inc imul mov xchg mov adc add add lods jp mov sub add mull (bad) jo movsb aaa xchg aam push pop xchg mov sbb dec ret test xor and inc sub xor je pop pop ret dec pop inc pop pop pop cld jns (bad) mulb mov adc push stos sahf and sarb jb lods test or mov sarb cs sub inc sub daa pop add lret lods lea out sub pop jg push jle xor gs add xlat xor push loope call pusha xlat ljmp mov icebp sub in inc xor ja loope ja fbstp mov xor xchg cld ret jbe jmp out cmp clc jle ss outsl sub aaa (bad) sub (bad) negl push inc xor daa mov pop rcrl imul mov dec dec jno movsb add pushl mov daa daa mov pop inc pushf fisttp (bad) test in ret xchg or jne lods movsb pop lret mov mov (bad) repnz add jmp ret mov in xchg jp dec xor lcall and jno xor movsl js in sbb or pop or mov xchg cmp sub mov mov and sub push mov jmp xor idivb add add xor fidivrl xor xchg sbb rcl or in jle shrl aad out out sub je adc jg and cmp jo xchg inc les add popf rol cmp iret aaa fildll and pop rcrl std sbb pop shrl roll dec ds orb fcoms jmp and jo sub or pusha lret adc push mov dec pushf insl jno dec icebp andb ds push cmpsl mov add pop xor inc push in add mov dec mov ds (bad) sub loop sbb inc dec ret adc pop repnz xchg adc fild push in scas mov fsts popa mov mov pop div cmp lret push repz dec shl int3 stos das cld je add negb jns mov jno sbbb add das jl aam cld cmp popa syscall xchg pop data16 fdiv dec inc (bad) xlat or xor lock in mov adc mov pop or mov xor xchg (bad) stos nop lret ss xchg mov call mov punpcklbw xlat mov jmp test mov pushf dec mov mov adc les and out std mov inc cld ret or xchg lahf xchg jmp rcll and in push add pop and cmp mov mov dec repnz cmp push bound or inc xchg xlat test mov mov jmp mov dec pushf adc mov sub int3 sub pop lret int3 sub pop xor xlat push fninit cs iret pushf adc pushf cltd mov sti imull or repz cmpsl push dec dec push lret lods dec and mov sub std xchg jp loope sub mov lret and xor fdiv mov and jne faddp mov xor and rcrl pop bound in cs and jae and push jecxz cmp leave std mov ljmp mov push mov jl pop mov adc dec add adc push fsubrs mov sub mov sub (bad) cmpsb enter insb pop add fbld jmp das sar lret cmp mov pop pop sub or sub repnz sarl data16 sub shrl add push out adc popf into jle in cmpsb cmp out mov bound push int3 pop cwtl inc xchg (bad) ljmp movsl int and or push sub push outsl leave in cmpsb lahf cwtl dec stc add sub (bad) jmp push ljmp mov sub pop pop stc in or iret pop (bad) dec pop dec mov pushf outsb ret sub cmpsb push repnz popf repz cli leave and lds or mov sub xchg push repnz cmc xor push shll sub into pop fiaddl mov mov dec mov push and mov jno pop je (bad) xor ljmp mov mov out pop sbb push dec pop mov cmp xor cs add sub sub out mov lcall leave daa notb dec fincstp push pop push nop xchg daa sbb or fwait pop bound or aad movsl xchg call (bad) fstpl fcomps out fisttp pop out stos jns outsb icebp push pop mov adcl and and pop lret (bad) adc and aam out jb out stc and clc pop or push adc out bound pop fmull and sub ret pop xor (bad) add aaa add stos bound mov pop sub lds movsl lods push fisubrl jmp cli scas int3 (bad) jmp push sub mov add mov mov pop loopne wbinvd into mov jge scas movsb data16 push sbb dec in xchg mov push push call (bad) (bad) jmp mov jecxz cwtl push xor mov cli xor mov leave jge jl cmp or add xchg inc mov (bad) dec insb jecxz push jle dec fsubrs movsl mov push fcos dec aam leave mov xchg rcll idivl dec in xor loop pop mov into and repnz (bad) xor xor or add test dec repnz cld and fcoms ret (bad) rol pushl movsb nop xor push adc xor mov cmp mov clc sti ja push jns sub imul xchg jmp pandn out xchg and leave push in jecxz cmp sub fnsave repnz movsl (bad) in mov repnz or add sub or cmp pop fsubs cltd push in cltd jp je clc xchg out sbb jne fcomp add dec outsl dec and jmp (bad) js xor roll nop iret xchg mov imul in lcall dec jmp mov xor aad ret sub xchg push xor imul sbb push leave repz jns or das iret notl loopne lods mov or out jb xchg jge mov or jmp fldt dec fbstp add addr16 sarl add bnd lret push pop jb push cs jp mov dec mov xchg pop lea inc leave scas clc orl movsb (bad) (bad) lret inc dec loop lret leave pop gs push mov adc dec lods xor cmp dec cmp into pop lret in jg rcrb sub fdivrs cmpsb xchg and repnz push cmp lret add xor mov push cli mov test push push aam (bad) xor add and or xchg (bad) sub mov data16 out push jns lods repnz in xchg icebp std cmp scas adc inc push xor cwtl jnp jbe movsb mov ret loop jns mov add ret enter and or dec repz add adc add mov sti and mov mov mov loope bnd aad mov dec int sub lcall inc fistpll daa sbb pop cli stc fildl pop and sub lods (bad) add or cmp jmp popa cmp leave and pop xor sub sub pop adc fistpll das sub imul pop sbb sub fdivs xor jmp iret dec mov popw sub xor rcll pop out sub xor push (bad) and sub dec xlat adc or out cwtl sbb sahf or mov bound mull (bad) std cmp or in aam xchg sub push lret or push cli and pushl dec pop cmpsl xchg repnz or jmp mov xor mov test iret dec cmp xlat push roll test pop sub add xchg add inc cs xor mov mov lret sub sub negl mov mov fs mov aam or jbe ss and add push test ffree sub xchg sbb push sub add xor xor std fcmovnbe leave pop int3 mov add or imul ficompl pop out push sub mov in xlat xor cli inc sub pop xor stc les adc or cmp pusha inc (bad) xor inc push (bad) mov test ljmp arpl movsb out int cmp rorl icebp lahf outsl out daa ret enter cmp pop ret jb dec mov push ds pop movsl dec sub inc fisttpl mov rcrb (bad) mov ret xor lret push aas mov icebp push push (bad) lahf and mov xor mov xlat xchg jecxz imul addl mov dec jmp xlat xlat test mov imul std and push pop inc gs sub int3 (bad) stc lahf add push daa or loop cmc leave and mov jecxz mov add cs les or test or imul push lds inc fs add jb inc scas cmpsb xchg dec xor into xchg jae adc int bound adc mov add xchg mov mov sub aad jb mov pop add jmp clc jle mov movsb movsl arpl add call mov divl or xor jae cmpsl hlt jg jg cwtl add xor inc pop and leave ror das jnp clc lods sti popa outsb cld mov xor mov jnp imul mov sub je and out test mov pushf test cld adc lock into xor or mov xchg out mov fs jecxz dec sti into (bad) mov das clc add mov mov adc call sbb aam lock and (bad) or test xor insb sti adc (bad) sub push add mov lret out mov and decl pop out sub adc or dec outsl inc jne lods fist jg shll inc xchg not xor and xchg push pushf repnz aad pop cmpsb jp mov push outsb pop mov mov sub ds ret jbe rcrl jmp xchg popa mov mov test shll add and xor and xor pop pop cmp or mov les and sbbb loopne das pop xor mov pop idivb xchg and (bad) or adc lcall jbe sub add xor es xlat dec push addr16 movsl fsubs (bad) cmp inc mov ja fisttpl xor xor or jno or ror ret xor shr xlat outsb ss jp mov fs cmp xor mov sti mov dec lods outsl sub adc add and loop push (bad) push push test (bad) jns xor pop dec out das into push ss sub inc sub repz push divb iret cs pop sub push (bad) mov pop cmove stos das lret fwait repnz xorb xor mov aad adc or test and mov lea cmp pushf pop jmp or adc imul pop mov imull neg dec xor inc movsb mov das mov scas jle gs mov (bad) lock pushf imul and out xor into pop pop mov dec add mulb in in push mov xor das and push nop pop enter lods nop lds iret push sub mov (bad) mov push adc sarl xor cmp (bad) jo pop enter (bad) or or sbb adc adc add lods movsl lret neg gs and xor lcall jo sub lahf loop (bad) insl ss inc das jecxz mov icebp sbb hlt inc add sarl repz mov sub or pop (bad) shr pop (bad) add mov mulb call jl bound sti pop add fldl sbb out nop xchg les jmp mov dec and in pop (bad) or and sti mov sub jg andl cli lret mov cmp lock mov ror mov push xor daa pop sub test mov (bad) mov push push pop mov inc sbb notl pop or das div mov movsb lahf and sub xor lock decl aam lods mov fmul or (bad) or mov loop (bad) jne jne push inc fbld xor jle pop into ffreep jns dec repnz shr xchg jmp add ljmp inc and (bad) repz sub push movb push push xchg nop adc add push out sbb jbe and dec fsubr fildl cld jle out add mov fisttpll jo (bad) xor sub push pop dec or mov insb push cld dec sub inc add mov sub out mov das fs or jae cmp jo popf or fwait lea ljmp ja dec cltd xlat in xor call push idivl lret stos pop or int3 and xor jne and xor fcmovne pusha xchg xor iret daa repnz lock xchg mul push xchg mov lock add cmp pushl idiv jmp int3 out test mov and or outsl xor mov cmc (bad) repnz nop add adc repz jne or jne cld lds leave aam push and dec xor xor or dec add icebp xor add jg sub xor jl mov clc cwtl xchg jmp mov repnz jecxz mov push repnz lret and pop roll mov and dec repnz test add mov mov out pushf clc add and in (bad) push and das fistl pop shr rcll mov or push dec incl scas jnp shlb adc push sub iret pop pop jge add jg sti xor stos gs leave out and xchg inc xor stos (bad) movsl adc or lret call arpl ret push and push les push in (bad) mov xor xor (bad) aaa cli loop inc jmp mov xchg xor ljmp adc pop mov stos fsubr leave xchg aad mov (bad) repnz fs adc and bound iret fs test fistpl push divb lcall cwtl or scas mov lahf lds icebp movzwl sarl sub gs in loop xchg stos mov sar (bad) sub imul adc stc cwtl mov in repz lret lahf push cmp ja sub jne addr16 sub jmp mov sub sub xor dec push popa xor ja mov add fstl dec xchg adc sahf rorb fmuls mov cld les xor (bad) daa add pop cltd scas aaa das mov sub scas lea add cmp and mov adc cmp sbb jno and add dec outsb push cmpsl insb adc mov pop xchg dec pop jle in or negl mov jns mov ljmp and cli pushf movsb inc sbb add and cmp (bad) and fmull icebp cmp mov and dec or out dec out pop stc or or sub roll ds sti or sbb inc mov (bad) aas clc sbb movl out push mov stos mov cmpsl sub add lods cmp lea jmp mov in lods clc xchg mov xchg aas les jle jg mov dec mov aaa sbb mov or sub lock fcoms mov dec pop int3 mov xchg imulb push push aas xchg iret jmp and scas je mov add and popf sub adc stos lret jmp aaa sub xor push mov (bad) cmc push jnp mov mov push sub xor (bad) jb lret or sbb and add mov (bad) xlat cmp (bad) push mov pop fdivrs movsb or xchg (bad) jb mov lret scas cmp add push lea call addl (bad) js dec xorb xchg adc jmp das adc addr16 adc add sti enter andb dec mov iret ss cs roll push mov rcrl inc leave push dec or (bad) jne sub enter pop (bad) iret out jle push mov nop pop out xchg mov (bad) add and or xchg jne jbe jb data16 add cmpsl rorb fsts pop inc sub icebp dec cmp repz pop movsl mov add mov nop fs mov cmp sub loope inc xchg stos mov shrl dec iret dec repz movsl ret addl loop fisttpl cli dec (bad) xchg popa add mov dec and testl cmp push and lahf push pushf lahf add mov push add movsb stc push push push aaa (bad) negl and cmp (bad) (bad) push test cmp sbb xchg (bad) mov out sub mov xor fnstenv or pop std out mov jmp xchg das sub in jmp negb xchg (bad) mov xlat stc lods dec test stc jo lods xor addr16 and dec call and mov pop daa push in aaa pop and (bad) jb push pop outsb sbb lahf (bad) ficompl pop lret cwtl out ss lret add or and inc mov nop and xor ret push cltd nop ret aas in stos iret lock adc mov mov pop mov aad adc scas out xchg out adc mov pop ljmp in cmpsl or or sub pop mov jge cmp jne mov lds jecxz xor rcr dec ja pop and test sbb adc mov mov repnz sub rcrl iret jbe adc sbb mov movswl ret (bad) lret add pop es and stc mov adc pop ljmp loopne lods xor jmp jecxz ficom popf cmc push rcrl xor fildll xchg cli (bad) lock sahf dec ljmp popf or roll je adcl mov jmp fwait clc pop mov push rorb lret movl xchg jmp fs add in adc sub dec shlb test xor xor out or imul mov sarb mov jle (bad) dec inc les cli mov movsb shlb lods cld lahf push shr or mov repz in dec sub adc push lds loopne enter mov add sbb pop push (bad) jb mov cmp xchg dec adc dec cli mov add push das cmp and and or cmp mov repz mov (bad) movsl inc xor add xchg xor mov mov mov xor negb ds inc lret lcall int3 mov sub sub pop inc mov icebp stc iret sbb mov int3 mov dec int and add inc xor inc mov inc iret adc cmpsb adc xor pop in add pop fxch scas idivb mov jo push mov in mov out cmp mov jmp xchg call mov mov xor mov pop and sub cld bound inc mov out int3 insb nopl sarl or push int inc add xor insl paddw in xchg push mov sti xchg push pop pop inc push push mov push mov les pop or xor cwtl push jmp (bad) pop dec cmpl xor or (bad) popa cmc mov lcall and jmp cld mov push sub testb fiadd jne inc jne sub es fisubrl push jns add inc push add fwait gs adc jmp adc cmc gs mov popf cmc xchg cmp pop pop xorl imul cmpsl jle addr16 mov pushf push fidiv dec pop or cmp sbb mov mov pop adc in cld inc ss push std mov push push pop lds sbb rcl je dec popl add insb fcoms xor push mov rclb sarl cmc pop and pop push xchg das (bad) lcall sub jno add add ja fcmovb loop out lahf push (bad) rcrl sahf xchg mov fs into mov xchg cli pop xor pop add in add push jnp mov data16 adc fbstp add lds jmp sbb inc jns les rorb imul jge jnp ret pop mov add repnz pushl rorb xchg not fmuls push jge jae (bad) hlt add add sti mov fidivl lds into push push and and push mov mov fdivr adc or pop add push mov push dec add rcll cltd xor popf imul push sbb pop dec inc push or mov and mov jne or add push xchg std jge jecxz add iret outsl add xchg pop out adc jns sbb pop push pusha pushf push mov jmp pop popa add lret bnd daa (bad) sbb add cmp insb pop (bad) jne sub xor sub pushf pop ret (bad) cli int cmpsl movsb pop adc or int3 (bad) jne int3 jno sub inc jmp lods fstps xchg cmp fldt dec pop in inc (bad) test push leave sbb push xchg ljmp in call aam (bad) mov out das into pop push (bad) cmp add scas ret stos (bad) jne loope nop dec add dec mov jno pop pop ret jno mov sbb sarl decb xchg pop push dec cmp xchg sub adc sti pushf out jbe je roll out stc stos jno outsb repz shrl jp arpl cwtl out lret ja mov jp je (bad) lret xor or mov mov rcrl push pop xchg andb pop gs mov jae xchg add xor repz cli popf iret js or mov or mov fucom dec push or sub xlat sbb andl mov and xchg xor pop push xchg add cmp inc cmpsl aam and sbb cmc xor pop sub jp xchg ss scas repnz aaa pusha aaa adc dec dec outsl std mov jle dec inc movsl in outsb rolb das sbb loopne bnd pop mov (bad) cmpsl add test out and pop ljmp jb push clc data16 or inc call jo xor adc xchg sarl cmp ror testb cmp (bad) stos sub xor idiv or sub shll daa mov jge scas xchg cmpsl push pushf adc sub jmp out jnp enter subb mov out xor dec shrb add mov aam das sub add push pop pop (bad) sub xchg scas fs or and mov and fisub test out jo mov (bad) or and into cmp sub mov outsb es and int cmpsl xchg nop mov or add ja or or cmp xchg lock out mov rcr arpl clc xchg enter aad ss mov subl push test mov or xchg jno dec mov into sub inc ret stos out push dec pop xchg or cmp inc fwait cs xor lahf (bad) out mov lods das xor mov cwtl std outsb sbb fldt or sub mov jl daa or xlat dec mov mov mov add test rolb daa icebp inc imul movsb xor dec adc (bad) xor or rcl cmpsl lcall and jmp add es js mov roll sub sbb int mov push int3 fisttpl in add fstps sub fstp (bad) bound (bad) push and pop and jmp fldpi dec test xlat rcll and or imulb loop jle rclb sbb and sbb shlb dec xor popf dec js int3 add xor imul (bad) push dec scas inc out and pushf arpl mov test or insb push dec push xor out cmp loope aas test pop (bad) sub hlt (bad) lods push xor mov gs cmpsl push inc in test xlat push out das loope bswap jb sub mov xor jae fcmovne cs or (bad) and or mov mov fmuls xchg mov sub xor jg (bad) int3 sub push dec xchg popf dec mov fs sub mov subb mov daa inc dec lret out lea push inc addr16 lahf int or jb decl sbb jne mov mov push pop cmp mov call stos (bad) aad sti push dec cmc insl das jmp jl mov jge std insb hlt imul test mov popf add pop and scas jmp or add mov fscale mov ljmp popa sub add sub push leave shrl jge pop into mov dec pop xor repz dec test lea repnz mov lds ret sub aas arpl jmp xor das cwtl cmpsb sbb sti jp sti test in push fimull adc add sub xlat stos shll frstor insb sub lcall cmc jb cmp adc xlat lods hlt jg out sti vpxor iret dec popf xchg lret xor test sar fdivrp dec mov lods xor cmp sub fcmovnb mov xchg and enter repz or mov add rorl and add xor inc addl jg push or popa and jno je mov sti imul and out (bad) in push icebp fisttp ds add mov stc test (bad) sub aas neg dec lods test and les scas xor pop mov and test xor pop jnp hlt mov jne xor push xchg jle jb mov shll adc add outsl andb xchg out je adc pop leave jmp loopne fld add cmp xchg mov iret stos jmp or and in pop arpl lods pop out cmp pop xor movsb mov insb loopne (bad) pop push xchg adc out stos je jmp ss pusha mov daa shrb or sub push and fwait scas (bad) icebp jne dec ret xor jle (bad) repz xchg adc and lods jns lret or pop or mov mov pop rclw rolb adc das and (bad) jmpw out jmp stos (bad) or cmpb push ret pop adc mov mov ret push outsb xchg (bad) push pop in mov (bad) cmpsb pop bnd aas (bad) xor packuswb pop icebp lock imul sub sub or (bad) adc icebp add mov or sub mov mov push les das enter in sub push icebp stc and (bad) mov daa cmp push mov ret loop hlt (bad) outsl fbld and pop cld xchg outsl leave add xor or xchg aad push xlat jg lret (bad) jmp add or out sub repnz sub add or cld fbld faddp int add call pop mov xchg jae pop loopne loop (bad) inc xor shll in jecxz xchg (bad) outsl push fldenv push xor decl lock lret stos ret ljmp ret mov mov push loop push jle in stos xor push fucomi es cmp fiadd adc stos les cmpsl jg cli fs mov jb push fsubrs bound jmp test lret out jne in sub movsb pop daa or data16 cmpsb testl jae lods jl in and ljmp jbe or sti dec stc lea out cmpsl push nop mov lcall jbe jne ljmp dec mov pop xchg decb ret xchg es (bad) mov mov mov cld jne lret mov adc fdiv sbb adc out sub test ds lock fnsave push aaa xor adc test mov mov mov int3 arpl fistpl xor sti idiv adc xor cmp inc sub out cmp jo mov sub and iret mov jmp cmp dec mov ret jg xor aaa mov jle jmp fcompl xchg fwait push daa jg pop or jge fsubrs xlat movsb or cltd mov movsb incb ljmp aas mov cmc sbb imull dec shlb and rol jp movq push push cld xchg aaa addl pop mov clc mov pop xchg scas cmpsl loopne push pop xor clc pushf sub repnz push push pop imul call dec neg mov xchg imul dec pop or push mov sbb add das xchg lret (bad) pop out add pop daa and sbb or sbb loopne std pop adc addb jg pop adc addr16 pop add outsl neg jle pop add jbe add xchg mov ret jl push pop incb (bad) push mov cmp in add call enter (bad) xlat sbb jns stc jp add das sub or push cltd in cmc test mov rolb (bad) add add jnp fs ja jl mov push sub pop shrl out push clc rorb sub ljmp decl fsts pop loop or jge rcrl cmp cmpl inc xor lret repz (bad) push lahf aas add push gs add inc mov dec pop (bad) cltd jmp or mov xor pop lds iret inc xor lahf push push sar push mov cmpsb xor shrl jg inc add sti dec (bad) scas pushl std sbb enter push jge mulb mov inc arpl in cld out mov inc xor icebp push cmpsb fstl pop (bad) pop jmp ret not out or sub out bound roll (bad) dec add mov pushf mov in or test fs cli xor stos repnz test fildll sub mov (bad) fwait imul mov mov fnstenv cmp dec (bad) hlt sti call jmp adc add sub gs ds xor jle lret jno sub add pop out push dec jo sub sub jno sub sub and jnp icebp mov mov fstpt icebp sub movsl cmc in mov mov add lds sub pushl (bad) adc cmp mov (bad) cmp and lret xchg cmc orl neg bound fbstp int3 and repnz (bad) imul hlt jg sub pop adc int3 inc add cmp and push sbb fstl and lock loope mov xor (bad) gs mov xchg and aaa sub push mov or xchg pop mov pop (bad) xchg ljmp mov mov in movsl xchg mov adc mov pushf dec cmc lcallw (bad) dec and xchg mov pop je loope negl ficompl lock mov rcrb incl rcrb jg pop cwtl rorl push and pop clc mov shrb movsb add mov cmp test mov leave add (bad) imul bound push dec fstpl adc mov mov (bad) fisub pause ret addl rclb mov mov mov rorl add je pop dec jmp and lret pop pop push sbb call daa into loope lock (bad) pushl mov neg and mov ret aaa movsl rcll xchg repnz scas or test stc loop inc es jno imul ljmp jb ljmp mov fdivr in out fnstcw pop gs and pop and popa int push cmp add mov mulb popfw adc loop lods jns xor push jbe pop out xchg sbb mov pusha bound idivb movsb xor sbb add add clc jge pop imul popa sub sub outsb test out pop (bad) (bad) xor xor movsb jg cmp adc gs mov fidiv mov enter testb mov mov inc int3 popf jecxz into pop push jns (bad) lock lods sub ja cmp and call repnz nop xchg imul inc push js popf adc xlat add push mov pop test mov lods aad addb incb mov mov dec add pushf mov xor scas enter loope mov and in xchg mov (bad) adc sub pop pop adc xor icebp pop jle pop lcall jae cmpsl or scas sub mov inc sub xchg clc fnop xchg adc and imul iret jmp fldcw mov lret mov mov lret xor pop jae and xchg mov aam cmpsl jle pop repnz xchg jp test das xor jl jp push mov mov fcompl dec (bad) or xchg mov xchg dec dec dec into mov and cmc adc mov mov pop add scas xor cmp xor sub std in cmp movsl inc sbb das loop xchg ljmp mov sub mov js fsubrs push dec lret push push dec fdivl pop daa jmp pop cmpsl dec inc sub mov xchg in leave jmp mov lods or xlat add imull divl fistpl mov nop stos sub mov or pop ret (bad) mov shrl adc sub icebp or lea xor cli xchg pop push jno xchg movzwl jmp push loop xchg stc call fstps mov aas mov inc aaa add out xlat fldcw inc add push jb sbb fdivrs xchg rorb xchg (bad) aad testl sub mov ret inc mull pop xor ljmp push mov mov jg decb sub jp in push shrl sbb test out cs xchg inc mov bound (bad) loop popa lock ja into nop sbb mov or sub ffree sub iret pop (bad) imul sub (bad) and push xor (bad) adc popa sbb sbb sub (bad) popf rcll pop pushf mov and (bad) mov add (bad) jbe gs sar not call mov jo fcoml int3 push push incb mov mov testl pop stos pop mov bound cmp ja sub in (bad) pop mov scas mov jp or ret stc sti imul sub xchg and das (bad) mov das sub dec ret cmp adc dec ljmp dec pop test in mov dec in loop adc mov mov sbb jl out xchg push xchg imul icebp add cmp fsubrs cmp ljmp aas xchg push lahf xor jmp jmp shll dec (bad) cmpsl nop js xchg in adc sub out loopne mov call xlat sub jmp pop xor jne sub and mov add fsts ds inc and adc cmp inc mov sarl pop sbb push and lods (bad) shlb test and xchg (bad) (bad) loopne leave or dec mov add xor xor push xchg rcr (bad) sub (bad) pop sarl xor jnp dec mov (bad) mov repz or testl aam jmp dec mov pop pop divl fnsave add (bad) int push mov sti xor test mov mov ret jge lret movsw sarb cmc jmp es fs adc inc xchg cmpsb xchg sti shrl pop jb sub cmp push sbb push xlat inc xor int mov jecxz,pn pusha add scas cmp out xor ljmp lods sub cmp into mov jle jmp scas xor jmp icebp mov sar shrl fld outsl xchg jmp pusha test shlb cmp in adc mov mov mov dec ljmp stc sbb or pushf fldl mov sub repnz out dec and (bad) leave clc cmp sarb sub pop mov dec adc fisttpll mov mov mov rcl sbb sbb cli inc int loope out xchg ret dec (bad) pop mov mov cmp lcall lock (bad) xor pop les (bad) mov sub subl bound (bad) sbb sahf xchg (bad) adc jo ljmp hlt pop mov sub pop dec sub sahf sbb loop pop outsl mov push add aas mov dec push loope test negb xor xor cmpsl fild adc les sbb and scas addr16 test mov dec arpl xor call in mov adc sub hlt mov into dec fild ljmp ja and jge adc add cmp or cmp xor enter fisttpl jecxz ja lock pop xchg adc add or (bad) (bad) mov add ljmp in arpl iret jnp out test mov repnz xchg pop cs lcall dec sub jno movsb rcl fdivp daa lods in jnp cld lahf imul xchg rorl mov pop pop jns inc push push cltd push xor xchg fmull and jno bnd jb scas jae xchg in or sub push das lock push roll cmpsb out and jle push cs repz lcall cmpsb cltd gs ffreep fwait movzbl mov jl cmp (bad) movsb cwtl dec jmp jb adc sub adc sbb movsb ljmp imul dec mov (bad) push or xor lret jnp xor cmp out cltd mov jecxz push pop or repz ret gs cmpsb dec insl and cli sub pusha and ss insb stos popa add cmp mov aam cld (bad) jg xcrypt-cbc cmpsl push ret ret pushf iret jg mov in popf push cmp out lods (bad) xchg mov xor add inc mov inc add mov sub and adc rolb sub pushf lahf jnp pop into xor jne xor xchg sarl (bad) addr16 loope fidivr ficom (bad) out popf test movsl ret mov das pop xor dec (bad) (bad) outsb mov adc mov iret stos lea nop into and popf dec lahf loop jg scas mov push xor leave (bad) fstps xor pop addr16 xchg and (bad) mov push or jmp or xchg inc and into shll or or out jbe cld push lcall xchg test ret or push push or pop daa jb in stos bnd popf fwait das (bad) sub or dec jmp popa lret cmp pop mov dec dec shl outsb fdivrs movsb dec mov sub and jns pop je imul in and and mov (bad) icebp dec sbb sub xchg insb xor sub scas popf mov sti imul loop pop cmc xchg iret mov popa bound xchg adc and loope push inc push ja fcomps mov mov mov rcll lret jecxz dec std adc sub fildll pop pop (bad) aas lods (bad) or or pop pop jae xor xlat in mov out sub sub out mov cs or push inc dec cmp and or mov sub (bad) cmp adc scas mov adc cmp jno loope andl jae adc shr xchg leave js add mov int3 insb dec mov out and out jg xor push fisttpll cmp outsb xchg mov push add divb stc sub dec xchg jge or add (bad) add dec dec mov push and nop sti test je mov jo add ret mov fistp leave lcall pop mov fsubp leave push arpl pop in test pushf inc cmp mov xlat loopne fmuls xor test jmp cmc and sbb rorb mov popf and pop lock pop mov lcall mov mov mov add dec popa loop in xchg clc ss rcrb pop or into pushf lahf jl mov mov (bad) out out push add mov push ljmp pop ror jge pop push rcl sub xor les mov and fstps sbb lret or dec push or mov mov xor xor daa xor xchg gs and ret jmp and sub ret aaa mov test into jnp pop xor stos fimull adc push push pop push push inc fidivrl lahf dec push mov repnz test xor mov lret loop dec dec inc cs pop adc sub sti xor xor pushf fwait int3 adc das add jg in (bad) cmp aad je jle xchg loopne scas pop mov jo adc icebp xor add xchg (bad) mov and repz pop sub cmc daa clc je (bad) ss cmp mov xor xor out xor push xchg xor pop mov (bad) xchg mov sahf imul jl push jne in lahf nop mov xor scas sub mov inc int sub sbb negl mov xchg mov fdiv out adc call sub gs aam and pusha sbb das cmp cmp mov sub push pop pop or mov int outsb mov and int3 jae call out or (bad) in gs mov adc (bad) jle lods cmpsl pop mov push das adc ror clc loop stc orb divb jmp test cmp mov push loop ret sub movb fisubr (bad) mov (bad) roll dec add repnz adc sub nop push loop call ja roll add jp inc push xor inc les sarb hlt ljmp movsb pusha pop push push test or cmp ljmp xor sbb insl popf pop xchg test (bad) jg mov add inc push or sbb lds add and cwtl sbb sbb ret popf mov xor aad push xchg out fs adc push inc scas je pop ss repnz pop mov jb in (bad) mov sub add sbb or lret dec hlt daa push (bad) xor dec mulb popf je xchg sbb mov movsl jmpw int mov and xchg sub cmp pop mov xchg dec hlt xchg pop insb mov cld (bad) ja outsb dec std inc sahf sub lock adc sar jmp test out imul sbb aaa xchg mulb xchg jecxz or rcr sub test xor pop outsl fs out testl lret sub lods shlb decl xchg cmc mov data16 sti add lods loopne push rcrl push and arpl xlat and sbb mov fidivrl lea idivb pop popf fsubs mov dec cltd cmp or data16 and int sub adc (bad) adc jnp int push push scas lret xor mov (bad) mov sbb sub inc scas cltd lahf sub dec sub and or dec jne fsubl fist mov outsl or je imul insb inc mov sti xor out mov or jg lea fbstp xorps movsl pop inc popf fnstcw sbb js dec jmp cwtl aad std sub and cmp decb rolb cmpl mov lods cmp xchg push or xchg mov sbbl bound adc repnz mov xor push pop (bad) hlt iret jg call adc mov shlb inc xor xor aaa add inc inc fidivr into sub push lret std sahf sub es jb pusha mov aad leave sub mov pushf cmp test xorb fs icebp mov or insb mov xor stos cltd fildll inc leave dec sub rcl dec mov jecxz or xchg pop cmpsl dec pop out xor and jo pop add pop loop mov fnstcw inc add sarl insb and stc sub ja mov inc push stc push dec data16 add in or jno mov xchg repz and (bad) jecxz push mov lcall xlat mov push mov (bad) (bad) lret sub and scas xor xorl movsbw mov cmp mov xchg imul jle (bad) jmp mov dec fcomps lock xor fwait daa daa incb cli push push or add mov shll xor mov daa push pusha pop out fstpl push fnstsw lcall dec dec and aas push mov into (bad) jle test or int3 and out dec daa push ret loop mov inc rorb fimull mov and push xchg pop or mov icebp arpl push push mov out add cmp xchg fwait push (bad) pop inc add aas push push add sub or (bad) pop movl das std cmp sbb jb rcll jmp inc and fistp outsl fnop mov (bad) and mov push jg outsl inc add lock ja or pop adc pop add loop jg push push aas test in scas add mov call pop add adc or pop xchg add in push popl adcb pop inc ret (bad) loop js pop pop jge sbb or mov cld pop lret pop jne dec cmp dec jmp mov adc iret cmp das repz cmpsl rolb (bad) in mov adc xor imul leave pop dec das mov je rcll arpl xchg (bad) addr16 fistpll jg pop iret pop jo daa mov push movnti clc mov sti add push mov lret popa pop cmc sahf loop insb mov (bad) sti (bad) repnz mov fld mov adc das xor push stos sub mov rcrl cmp adc clc ja ljmp rolb (bad) outsl int xor xchg ja fwait test jp inc rcrl sti arpl mov push sub mov rcr (bad) scas popa push adc mov jns cmp add ret loop (bad) cmc fldcw fistpl outsb clc mov adc orb adc (bad) sub add push insl dec (bad) lret sub nop rcrl xlat push jmp fucomp arpl xchg dec add or xor and sub jg std adc or out fstl enter mov add add push cmp xchg sbb jns and mov data16 loop and test mov int3 dec cmc sbb and mov dec mov lock mov mov lcall or test mov add loop (bad) jecxz dec sti xchg sub mov cld test adc push repnz dec fs int mov test shrl dec mov fldl adc shr (bad) rcll das sbb sub adc (bad) dec sub pop add iret xor xchg out mov stc ret or (bad) popa jmp outsl push mov xrelease pop scas pop hlt jne (bad) jbe loopne mov pop add out and sub jge cld inc cmpsb inc mov or sbb and mov fimull pop pop scas ret push sub loope mov jp outsb stos and mov dec push pop push (bad) fmuls into int3 dec mull add repz pop scas repnz push fbld push pop scas and pop mov mov pop dec das scas cmp mov imul ret pushf or pop fstpl adc add sub push scas push pop xchg nop xor sub add (bad) fsts in jmp ret inc jo or cli (bad) bound add and std pop adc pushf insb lock fldenv out mov dec lods fbstp je pop pop xchg mov lods xchg mov aad sbb push pop lods push cmp sbb ljmp leave ficompl mov add idiv xchg aas or pushl into xor pop ffreep or adc jmp test rolb imul cmpsl push lods aam jp mov mov xor cli test dec icebp nop ds xchg lret into pop stos sbb pop inc dec mov mov push mov test outsl das ja cmp inc dec ja in jecxz fwait popa repnz imul cmp mov or enter push push test sub int outsb adc cmp shlb and xchg out lea pusha scas or cld das clc fldt jecxz stc dec movsb mov jb xchg jg lock jne add bound bound scas xor loop into dec adc gs mov int xchg les lret pop xor aam or pushf jo lahf cmp cmp lock mov mov jmp dec xchg pop ljmp lock mov xor or xchg bound lret das inc push pop xchg outsb fdivr into lcall sub lods imul das sti ret in inc cmc cs jmp push add mov pop lods in negl mov repnz push mov jg xchg xchg fsubl fiadd mov test mov dec scas bound (bad) push xor cmp fbstp repnz mov cmpsb dec jg dec scas daa fidivr jnp adc add jbe mov aam cmp add pop pop dec mov push dec scas xchg sbb xchg adc jns jae adc aaa insb xchg ficomp mov jns push or ret xchg adc mov cld or lret (bad) sti mov or imul sti and jmp mov fnop imul rorb ret dec iret icebp loope push dec andl lods jmp subb gs mulb ret sbb pop xchg lret out ret sub shrb mov sub adc (bad) adc cld mov clc (bad) out sahf add std dec mov pop pop lea or adc sub or xchg xchg push pusha adc (bad) xor pop mov std xchg leave lods gs loopne add sbb mov sub or xor sub add push push int3 inc jmp sbb push aam xor imul dec xor sub jnp dec add (bad) stos jmp gs pop jmp dec cld mov mov sub aad mov xor mov dec xor sbb or adc push (bad) call mov dec cmpsb fidivrl fist les mov leave or lock test add mov mov inc mov fidiv sbb adc add lahf dec cwtl lods icebp stos popa andb sar ret jge gs mov mov shll cmp dec idiv jb inc fdivr (bad) push sbb jg jbe gs ret das pop inc xor sub mov pop clc dec daa pop jecxz sub mov mov bound addb jmp cmp aam mov mov outsl adc pop inc and sub aad stos sub jbe pop add mov in clc pop xor jo pop (bad) mov and loopne rcll dec cltd pusha jnp lret dec mov rclb lds sbb add test sub js push outsb scas sub jb sub xor or push sarb xchg std pop push xchg test mov push ljmp repnz sub push ret mov inc (bad) push rclb in push mov adc push (bad) dec pop out and or ljmp test jge jne cmc sbb int mov mov test xor ljmp dec and sahf or pushf cmp and clc imul push pop lret ljmp push pop ret test mov sub repnz jo jns scas pop jns fnsave rcll push loop xchg pop add dec ret and icebp sbb shr pop iret sti sub in lret sbb lods dec mov xor and popa ret arpl push xchg pop xor aas jmp and ja xchg sti or and mov push mov jbe pop mov jmp push das mov sub ss (bad) lds lret xchg pop and sub ds or or sub leave ljmp or lret xchg pop xchg pop call idivl push test (bad) add out jp xor xchg aad xor sbb and lret fdivl jmp sub push push push lcall scas xor repz inc lahf mov add add in movsl jmp xlat jl fistp xor mov push push sub leave pop sbb xchg icebp mov ja push stc mov in mov pop jns xchg leave xor xor adc sbb cwtl xor xor xor pop sub sbb sarl push mov lock push xor and in stos test xor stos or in mov jmp add jmp mov (bad) adc test das jmp mov fldl inc fimull and xor sar lods or mov and mov ret xchg inc stc ja rorb (bad) mov daa loope xchg repz cmp lahf mov xlat data16 xchg pop mov cmpb (bad) mov popf ror stc (bad) lret mov rcl lods pop cltd adc test xlat test scas push push jb outsb lahf push fnstenv stos mov iret mov jno sbb outsl add mov rorb test (bad) mov test scas iret pop sub push sar arpl mov inc cwtl xchg xchg inc lods lret fisttp dec xor sahf (bad) cld pushf add popf or and xchg ljmp pop sbb shr mov sbb xchg mov rcll neg push inc inc add std push xor pop movsl (bad) out and jns mov adc (bad) scas arpl cmp sub adc scas and daa adc popf shlb sbb faddp scas fmull (bad) mov inc jb fwait outsl pop stos cmp cmp jo cmpsl inc insl daa mov jg int loope jmp xlat xchg or mov dec fidivr fldl2e (bad) cwtl gs loop aam dec cli sub into xchg jle push dec mov xor pop out dec mov cmp dec push sub fisttpll push dec not inc lcall pop xchg jnp add jnp jo leave (bad) add or dec and mov pop sub mov mov and add pop aam xchg iret scas into stos dec mov das jmp or stos std adc cmpsl ja mov loope mov lcall adc pop cmp fdivr popf sbb je dec push fldcw pop jnp insl test mov enter cli mov inc nop imul je inc scas int movsl or and push (bad) jae in and push jl daa jg pop cmp repz cmp and xchg or xor clc sub pop fildl sub adc pop or pop rclb subl sub xor in rclb jbe jmp sub fnstsw cmpsl out push mov (bad) repnz xlat push add xchg jnp daa pop out cwtl ljmp sbb jbe (bad) out mov sbb loop nop ret sub xor mov (bad) jno or jl clc enter xor dec push in cmp into loope mov sub inc add lret push lds cltd ja jp push not scas psubd scas sarl push test fildll push ret (bad) or lahf pop xor mov js dec (bad) je lret jg xchg dec repnz mov out fsubrl mov xor push jecxz aad cmp or push pop and pop sbb and mov xlat adc out push in adc loope outsl push fmuls popf (bad) and xchg jbe push dec and ret ret mov or stos outsl cmc out pop dec mov bound mov inc rclb pop or fsubr insb dec das (bad) mov xor add push fxch or ret mov and sub scas stos sub clc jb adc inc mov xchg (bad) push std or jns fs xor sbb push dec lahf mov adc sbb iret ljmp jp adc daa dec xlat jmp cmpsl faddl jecxz aas pop sub imul addl jl out (bad) cmpb mov or mov fdivl aaa mov xchg scas mov lret jecxz in xchg ljmp sub mov idivl and xchg push inc fdivrs ss icebp pop pop inc pop inc addr16 push mov movsb fsubrs dec stos int sbb jl das jmp aaa xor add sub stos cmp dec pushf mov and lahf mov flds leave ja pop sub gs test icebp out and jb ret sub sub xchg ja push inc hlt or fcom mov outsb xchg cmp les repnz dec mov pushf cmp into leave pop or or fs jg pop adc mov jg lret (bad) out jne je insb ret dec jmp int add loope fistp mov push out stc aad into jne stc inc mulb outsb mov ret (bad) ror (bad) jne add lods sub das jge sub in mov jg jae and mov mov jle imul pop shl cmp and imul mov std xor sti jns xor mov cmp dec mov pop and ljmp sbb cli in fnstsw adc dec mov xchg adc mov jmp sub adc or jmp or dec push jnp jg adc pop jmp xor jnp inc movsl xchg jno rorl jno mov add mul insb or iret mov mov mov lcall adc mov adcl imul pusha and pop movsb mov sub push dec scas jbe push iret and adc or xor sbb (bad) movsb mov ja mov shlb jnp or add fs out push mov shrl push and adc (bad) call iret or add loope pop mov enter ja cmpsb push pop insl xchg add mov jecxz sub lods and ret add sub xchg cmp popa (bad) and push sub stc ret xchg mov shrb and pop xor and pushw pop leave outsl cld mov inc and add jo out xchg pop gs mov adcb mov repz mov sti repz push pushf daa es das xchg mov rcr sub jbe jmp int3 add mov mov pop add sbb push lret sub xor mov loop hlt cld push lret mov cltd cmp popw js call or xchg sub scas jnp pop ret mov sub pop ja dec dec (bad) in xor mov incb cltd pop and mov ffree mov mov aam ret mov xor jno xorl jbe and decl fs packssdw sbb sbb popa add mov lret imul ja push cmpsl jae lods jae movsl fcoms mov jns shrb mov ficom pop fadd pop das pushl push xchg adc dec xor sbb dec das jle or mov sbb pop out jo sub mov or div out not xlat cltd negb loope sub nop dec mov or jne jno push cmp cltd inc and cmp fst and imul push push aam lret lock push push cmpsl and push fnop jb and shrl mov movsb pop inc icebp out repnz lcall sub lods ret std (bad) sbb jle das (bad) push addr16 adc (bad) and xchg ja bound popf mov cmpsl push (bad) mov cmc jno enter cmpsl jg lods mov sub pusha cmp mov add pop out outsb and jge stos mov bnd or mov test mov sub xor leave roll sarb adc mov mov rcrb xor lahf jae mov mov and cwtl inc and mov and pop fwait pop (bad) aaa add mov pop cwtl jecxz mov addr16 pop (bad) xor sub xchg push xchg lds push jmp or ja ficompl sub sub xor out inc cld out sub mov adc sbbb (bad) ljmp call (bad) inc test ds mov (bad) xor sub push clc mov div pop mov arpl pushf in iret cmp (bad) jmp shlb stc cmpsl (bad) jmp mov fist pop lods push ret (bad) std in js push lret adc nop xchg fiaddl xor loop (bad) std loop negl outsb fcmovu std out push sbb sub pop dec push sub xchg mulb sub leave pop mov dec xchg out mov sub pop daa ret ss sub dec shll adc pop (bad) mov jne inc (bad) mov or icebp cwtl jno mov mov das mov adc mov ficompl inc mov add lea lret jmp push lret push (bad) daa loop jnp fwait mov mov xor (bad) dec mov arpl push mov pop pop (bad) sub mov sbb mov sahf push fldcw fisubr divb icebp clc test push fadd cmp push and mov inc test cmpsl mov in dec loop idivb sbb mov adc lods or fincstp imul dec lods in mov or mov ret jno xor inc test popf and stc and lods mov fstps sub jne mov jmp jnp mov mov xor and push dec stos pushf ret and add add lret jmp sub mov pop pop test loop xlat sti cltd add add sub xchg ret or pop cmp jle into into imul mov cmp pop mov fild and fcoml add lahf dec push pop neg dec ss adc and mov adc mov out (bad) pop cmpsl pop sbb pushf leave cli fidivl adc inc xchg test add ja push pop and mov lret mov dec daa add shlb push mov push mov std out (bad) jns dec push cmp ret sub or pop dec jns and inc pop mov movb incb add lret out cltd or mov rol add lret xlat push out out jmp xor mov xlat cltd iret test sbb xor mov repnz and cwtl mov dec clc ljmp mov dec iret pop mov movsb sti mov xor into es pop or dec ror mov pop sub lret in pop mov add adc mov movsb sbb lods xor pushf sbb mov cmp and dec jmp sbb cmp mov into mov lret add ss jl xchg sti in jne cmp and sahf stos bound add xor aaa (bad) jb pop pop test clc lret ret or xchg std xchg ja lods sub mov (bad) repnz push pop js das ret or out sub adc scas mov aam dec out fmull data16 pop imulb stc or (bad) dec xchg dec mov xor mov (bad) xor pushl (bad) dec loop daa xor shrb fistpll mov movsl (bad) scas sub jl sub int3 adc pop js adc sub sub or xchg scas loop inc sbb pop ds stc (bad) cmpsl push cltd inc adc add mov rorb lock in mov cmp pop xchg cmpsl imul into mov aas mov ja lahf (bad) mov add xor hlt cmp and push movsl not daa push (bad) adc test mov dec mov dec lea sbb fnop negb loop ret sub xchg jg call lret cmpsb mov jnp call push icebp (bad) pop mov cwtl and mov out push add (bad) sarb out pop icebp ss or ljmp inc es xor in jb out sub fsubrl addr16 popa sbb aas cld xor loop jle cmpsl mov add fldt adc jno stc mov rcll subb inc out cli push inc mov fidiv pop dec (bad) outsl daa xor leave notl push imul lds das sbb (bad) (bad) mov xor das ljmp pop sbb sub or subb adc add pop neg add jns xlat push lcall dec push decb sub push jbe add shrb xor mov pop or out lock push out or push out nop roll sub push jbe insb pop or out ja (bad) dec adc inc movsb or inc push add pop clc (bad) dec sub out cmp add push rclb mov (bad) outsl push mov mov adc test cmpsb stos je imull pop inc cmp pop int3 add addr16 mov sub roll add jl xchg mov lret xor dec inc mov movl fcomps mov loope jg js orb xchg inc pop add push in xchg cwtl pop outsl shr xor aad push jo pop ja mov push mov nop mov mov dec push addl das mov pop and inc lock pop or insl shl sbb (bad) add and xchg pop sub sub pop mov mov pop inc popf rcrb jae ficomp out jo shr mov dec ret sub mov pop add lea or enter aam add loope sub xorb test int3 orl in pop or xor sub inc mov cmp repz and inc cli lock lock fs mov push ret test sub xlat jecxz or stc push dec icebp xor pop pextrw dec mov stos cmp or ret pop lods and sbb jnp fst icebp outsb loop,pt rorl sub push out out mov pop sarb pop sarb stos les les sub fisttp std insb push cmp add mov mov push jb lea movsl xor mov xorl xchg xchg jmp jb sarb and lods pop (bad) lret jg xor push gs mov (bad) pop xchg sti bound pop jo testl lret and hlt add and fidivr sub sub std xlat xchg mov mov mov dec loope jle lcall add in push cmc mov pop int add stos in cs mov lds or inc fmull and stos lret jbe negl mov mov jmp push mov nop sbb push rcpps dec out xor lods xchg mov mov lret mov ja fmuls ret test jmp fmul enter xchg sbb xchg nop in cli into (bad) dec in iret pop add (bad) (bad) (bad) or inc iret mov sub (bad) lret xchg push mov inc add pop (bad) or mov sbb daa pop repnz cmp rolb jne mov add je add (bad) xor jle shll (bad) push inc push ds aas cli bound mov movsl icebp pop mov xor push inc shl sub mov cmp mov or xor xchg pop cmp add push sub movsb jge ret je jb xchg std xchg js xlat push int cmp jb pop fist pop mov add sub mov pop pop push repz sub pop addl mov sub cli jge push daa (bad) lea leave pop lds and adc int3 cmpsb icebp mov mov into or sbb cmc popf mov dec jg nop sarl fstl popf shrl push jle (bad) out xchg pop xchg add or lret movsl notl fdivl data16 or ja and (bad) xchg cmp and (bad) daa sbb shrl pop notl lods into out add jg mov shlb push lds xchg mov jns and das ljmp out sub gs and testl jnp mov adc pushf mov imul addr16 ror sbb push push pusha or pop hlt leave mov sarl sub and aam mov mov (bad) jnp push mov pop cli lret mov and and xchg rolb cltd xor aas cwtl fs cwtl xchg cmp (bad) lret jo mov das cwtl aaa sub test daa loop icebp scas or xor fildll dec dec or shll stc pop sahf adc adc or lahf push xor jns jge or jl out ljmp dec or push mov and jb push das aad je mov xchg repz push jbe sub dec and rolb sti (bad) call scas mov push das ljmp or lcall out mov ja inc push mov ffree icebp clc cmp jns jmp mov mov lods and push dec jbe daa jl gs stos or jmp gs test repnz aad scas rcll sub sar or adc dec xchg fnsetpm(287 lahf fstps mov and and mov je shrb mov fisubl daa xchg cld or daa push push mov jnp add push in xchg dec mov mov lods push mov adc iret and dec xchg sub sub aam sub jb mov bound sub pop push xor pop jg or daa les test popa jno outsb lret rcrl pushf pop mov notl stos sbb test mov div ljmp lret mov daa add push xchg popf insl jle and xchg in or lret jne fmuls rclb mov add in mov jecxz mov mov pop mov pop adc pop rorl cltd mov xchg cmp pop pop lret ret lahf sbb xor movsb push mov out xchg ja (bad) addr16 test xchg push call adc add and cld jo out lea cmp adc pop mov push scas sub lds adc test in or arpl mov mov lret and (bad) push xchg sub pmulhuw fsubl fcomps mov mov not out add aad ja mov fucomip (bad) lahf sti add and mov mov lcall lock mov and mov repnz and int3 jne jmp sub jmp xor dec cmp dec mov shr ret mov or xchg int3 sub xor xorl std ret sub jb jp dec (bad) lret pop jge fmull push and repnz xchg scas mov cmp add sti ret stos push lock mov mov outsl mov mov xlat (bad) call rclb faddl xor std xor gs dec sbb lahf jbe (bad) push sub or in cmp ret outsb ljmp das mov insb fstpt (bad) stos clc push xchg daa ret mov push fs mov jnp ds add ds loope xchg mov pop leave fs imul push inc jne (bad) in inc push xchg loope push sbb jmp sti jmp xchg xchg cli pop mov test (bad) and push adc add sub push pop ljmp idiv rcrl dec mov daa jne sbb lock push add xchg rcll mov repnz jle adc fldenv adc dec inc sarb sub fstp jo fnstcw push push aad js push (bad) sti or sarb fsubl in jl pop xor jb lock xchg pop pushf pop out aaa xor push stos inc iret cwtl pop add push xchg fistpl imul jg clc fs cmp mov dec in pop lret repz cmc dec lret mov add adc mov inc mov (bad) int mov icebp push sub test xor daa and add pop mov push cs aad clc ret popa divl aam out daa add ja sbb push xor pop or dec push add pushf inc out dec sub loop dec cmp imul mov fs sub dec inc xlat xor pop mov fcmovb fnsave dec ja jmp inc orb adc sbb lcall sub sub loop xchg (bad) xor jns xchg ret mov inc pop (bad) icebp cmpsl inc lcall push pop ret inc pop push jle push push icebp stos imul shrb fisttpll xor ja jbe jecxz lahf sub sub and add arpl inc sub push popf idivl ljmp cmc inc xchg sub out imul add mov ds gs xchg repz jns pop pop fidivr jmp sub cmp sub dec js mov fwait movsl das rep popf shll push pop inc xchg and and jg xchg ljmp adc dec sbb sbb sub pop mov popf pop xchg pop mov in lds scas out sub lods gs and cmp fdivs fmull ret xchg pop pop xor pop jno pop add out xchg insb pop clc scas jbe dec or (bad) xor icebp mov jg rclb (bad) repz sbb mov pop clc test lods out mov push mov sub jmp fild or into and ds push or jmp (bad) jne movsl movsb mov aam dec jle add call sub (bad) mov jg insb fistp pop inc add sub iret data16 xor xor add pop xchg pop adc scas fistp pop loope sub out enter mov lret adc and xchg (bad) mov sub outsb int3 pop jmp mov hlt gs cli cmp mov mov jmp push push fwait stos (bad) std jmp ss sub cltd inc loop cmp sbb cmp adc lods pop dec decl mov mov or mov inc xor mov inc mov xor sub adc fs cld repnz xor xlat (bad) xchg cli (bad) xchg mov movl jg insl pop ljmp add xchg fidivr sub adcb add xor and scas mov sub (bad) xchg mov idiv inc sub es cmp gs repz add cli sub adc sbb popa jge push cmpsl sbb mov mov push pushf or pop add cmp repz pop fisttpll movsb pop xor aaa dec jecxz lcall leave xlat fistp xchg repz cli xchg dec (bad) enter mull fstpl daa jg int3 or add repz scas (bad) cmp mov adc mov iretw jnp jle push xor dec mov add and and iret (bad) sub repz lahf out aas sub sub add (bad) enter popf adc fstpt mov inc (bad) jb mov mov shrb pop pop test dec jns dec sbb adc xorl or dec push (bad) push sub sub movsl out add and lcall sub jle push mov jp mov jne (bad) and add or insb dec add mov cmpsb xor xor inc sub mov in xor pop jbe pop out or test jae movsl clc leave movsl xchg mov and data16 push fstps jbe stc icebp enter sbb jg data16 sbb mov sub inc sub cmpsl bound sub outsb adcl aam sub jo mov or ds jb idiv int add mov shr mov lds mov sub (bad) jno cmp rcrl dec leave fs ljmp aas rcrl jne mov push sti cltd pop lods or adc mov add inc mov stos pop jmp mov aas mov dec popf mov imul add jmp out push aas xor ja mov mov pop jle imul repz bound and sub xor clc jo sub mull jb repnz sbb (bad) test mov mov ds xor (bad) sub dec clc scas cwtl jbe pop add mov sbb xor mov sub sub shr add bnd in mov xchg test mov inc leave (bad) std movl xor out xor and out cmp jno pop mov add pop mov mov pushf daa push lcall daa push daa fnstcw popa adc dec pushf push xor or pop adc cld jmp popf mov mov nop xor xor sub xor mov inc or pop cmp xor into inc xchg and call push sub sub into or sub xchg ljmp mov cltd add call fistpl movsb scas (bad) jmp ret fistpll add xor jno dec daa les mov das cmp (bad) push pop lret push nop inc test (bad) stos inc int3 enter rcrb jne call mov mov mov sbb mov scas push je mov cmp push and data16 pop std fisubr add enter and pop fisubr fcoms ds cmp in lret and out mov jb or push bound cmp jl pop test ljmp xchg or dec bound rorl dec test dec push cmp das sub mov mov xchg (bad) mov mov dec sub adc xchg push fcmovne lods mov out and add in or (bad) mov push or and fild push dec sub push mov or inc mov dec mov jg push in xchg mov jge mov sub jmp (bad) stc and jne imul adc jp or push and push cmp fisubr jmp shr lret inc lcall ja imul cmc out pop fisubr ja imul lahf jge cmp inc sub sti sub dec pop in mov mov (bad) repnz insl inc dec push stos xchg add inc fucomp rcll jge xchg lret xacquire fist inc add mov sub movsl xchg aam popf iret xor sarl into je xchg mov xchg cmp (bad) mov pushf or cli fbstp js pusha xor mov into (bad) cmc sbb hlt shrb pop sbb or int outsb add out cmp pop xor daa sbb or push or sub leave sarb test test into xor mov inc aaa stos fbld and or pop push je out fbld icebp xchg jnp sbb jg mov aam add mov into push cmp ja into cmp jp notl stos and add stos mov push dec data16 sub jnp rcl mov cmp pop mov movsb sti sub fidivl xchg xor or popa mov inc es rcll lods jo mov idivl (bad) into pop cld xor adc jp xor jo nop jmp jns (bad) repz into push loope icebp and (bad) (bad) or hlt mov je popf push mov dec pushf loop mov ffree pop dec into mov sti into push adc bound (bad) divb or push ror js mov (bad) jb rorb push xor (bad) lods pop call jmp inc or xchg jg aad jo xchg ret iret movsb push xchg sarl jb pop sti stos (bad) or add shll sarl jbe mov pushf and pop imul xor inc sub repnz mov lea mov rclb mov inc fnstsw and adc dec repz mov mov adc leave ljmp adc test inc push sbb jb shl mov cmp je leave and mov or adc (bad) ds dec lods xor clc gs push sub jb (bad) fstpl mov icebp sbb cmc testb pop push or add inc mov daa mov xor cmp push out jo and cmp or dec xchg addr16 (bad) mov xor pmaxsw lret repnz in dec ljmp and loop mov xor sub mov enter cmpsl (bad) or or rclb mov pop ds or adcb jns sub scas enter fsts add cli test pop pusha lods pop les mov jbe xor pop insb scas negl adc and add sub dec push mov daa std xor add mov in xor jg sahf sub imul jmp popa mov or scas enter jle inc pop dec adc pop push mov jno scas in icebp mov in pop shl push pop mov ret xchg leave mov xor jp mov sub aad xchg mov add clc add adc jns cmpsl (bad) fidivrl and addr16 repz jbe xor or outsl xchg jae leave pushf xor fcomi imul xor ljmp movsl lret icebp or adc add loop adc mov insl rol cld js jg dec dec fs loopne test mov sbb add iret nop divb pop dec pop icebp mov dec call dec mov sub out out pop mov add cmp cmpsl jmp in and and scas jae and (bad) leave mov lret jmp pop jae or lods cmpsb in out jle out in shlb lds sbb pop (bad) leave test mov push mov (bad) decb push add mov inc out loop aam les or pop xlat ljmp das or xchg leave mov div jg and push jle imul rorl pop cmpb jae inc mov (bad) pop leave mov rclb or mov lret or xor xor fs pop xchg popa sub xchg add mov (bad) f2xm1 movsb arpl fcomps jo test shlb mov sti gs into adc push (bad) sub loopne and push into (bad) adc clc mov dec jns xlat pop (bad) pop sub mov xor mov fdivp jp or adc xchg mov pop or jg into mov or mov pop popa add mov mov lea inc dec and iret jp xchg rcll fldcw stos adc (bad) xchg clc lea (bad) shr jno sub sub mov in das lock add pop mov sub jnp or stc shll sarl (bad) sub int3 and repnz ficompl push int3 in pop sub bound mov test adc mov (bad) loope add icebp leave cmp stc sub cmp (bad) aad lods and or mov mov std ds (bad) and xlat shll sti xchg out push add mov icebp daa jg ss inc fcoml xor adc dec mov add pop inc in push lods xor pop add imul cld mov xor and lods (bad) in xor aas inc fwait lcall adc mov adc and xor lock mov or mov jg sub bound cmp insb (bad) xchg out xchg popa in and mov test pop iret xor dec repnz xor xor gs movsl test jecxz xchg mov mov push push icebp or mov push (bad) aam mov or xor mov push mov add jno add js fbstp repz adc sbb in sub clc test loop addr16 mov enter dec (bad) out mov aas xor lret push daa bound adc add ljmp addl pushf or in shrb data16 mov cs xlat sahf lcall sbb roll daa pop arpl adc (bad) jne jno imul mov sahf in (bad) mov mov jge mov ljmp sarl clc sarb or and dec dec ret das cmp nop fsts cmp or mov insb inc jns int and sub mov imul mov ret pop sbb jmp call dec dec mov sub fdiv repz int add add mov test sub and (bad) outsb popa jl fstpt leave iret lods lods mov push xlat bound jl in sub pop repnz gs pop lods scas dec pushf data16 test sub mov mov pop sbb jmp imul gs test popa sub pushf mov je into xor sbb out je jmp dec idivb push dec daa pop loop cmp xchg dec cli stc jbe loop imul shrl mov cmp mov pushl xchg add leave and in and lods cmpsb (bad) and dec adc xchg dec cli add mov icebp das push mov dec jmp mov mov sbb dec (bad) out (bad) cld pusha push (bad) mov or or sahf mov pop add mov and or inc call inc fsubl dec jne pop jne sbb xor push pop add ret bound add (bad) rcrl and mov pop mov out push xchg imul (bad) (bad) movsl jb sbb movsb es daa mov lret xor mov pop mov ret sub or ljmp and sub daa icebp pop pop dec dec add cmpsb push scas push repnz xchg sub imul (bad) mov fbstp fisub fistpll mov mov or jno xchg stc ljmp imul stos cmp loope push insb jns cmpsl roll (bad) bound xlat fincstp sahf or xor push in mov fisubl add movsl push cmpsb ja into ljmp or loopne in roll inc aad mov aad and jmp or xlat outsl sti pushf add inc dec clc mov div arpl adc or or je lcall call icebp cltd add xor sub aam std jg or inc dec add jmp fildll in test (bad) dec cltd adc xchg xor mov add push adc push fbstp push lock out pop out daa out fdivl mov fs xchg lods pop (bad) mov mov sbb push movsl pop fwait push sub (bad) leave mov clc inc mov mov push mov cmp jp xchg stc (bad) mov clc ja pop mov sub test fistpll add insb add xor mov fldcw insb loopne arpl jg divl (bad) ljmp add mov sub mov sbb shll ret pushf mov dec sti out xchg loope mov or movsl add mov movsb sub (bad) dec jb pop fs cld inc mov leave add add aas cmc jecxz dec (bad) decb mov pop sub ret call ljmp mov xor sub lds lret loopne lock (bad) rclb test jne in ja leave fdivl test inc mov js lds fnstcw repz lret pop fstp pop or (bad) pop shrl lods xor mov push sar jmp cli mov inc lahf fyl2x xchg ljmp mov movsl lret xor jo cmp mov jnp sub mov and mov cld mov loop daa push decl pop pop add push xor pop subb inc cmp add push mov sti jg push add pop push mov sbb add sub push push push inc add repnz fidivr add pop pop jl or cmp pop mov adc pop sub add sub mov nop pop push mov jnp mov mov scas aaa repz or fdivs dec add jle in add mov xor pop mov pop sbb push push push pop xchg xchg sub dec xorl ja in mov xor repnz or add jmp push mov add rclb jge and push add lret pop xchg test lret arpl sub adc dec and inc sti jnp enter test (bad) inc movsb out cmp inc push dec jbe add sub sub mov je in mov or dec pop push push movsb mov test jg push ljmp loope jp mov push mov xor add cmpl push sbb rcrl or cmpsl movsb add rcl sub neg mov mov xchg add dec mov mov ret push fisttpl andb daa jnp push lahf rcl sti imul negl inc sbb (bad) dec xorb loop mov or inc sahf (bad) into cli mov dec pop in jns mov cld shlb jo (bad) xchg out and jb test mov sub and xor ds cld leave (bad) cmc cmpsl jne (bad) ja rolb or push xchg inc bound mov bound dec pop repz dec mov das xchg cmpsl xlat inc dec dec add inc mov fldt movsl into int and jle insl push cmp and push jmp aad in dec mov jecxz xor stos je scas repz add adc jmp inc imul rep mulb mov outsb mov pushl clc pop data16 cld or les xchg pop ds sub enter lock test mov clc push mov outsb call mov inc mov sub insl ss stos lret arpl add pushf mov dec cmp imulb push lock and (bad) xchg outsl outsl push jecxz adc mov pop out dec int sub int3 data16 pop inc (bad) pop ss dec lret ss ficompl xor scas daa enter or mov stc sub stc dec (bad) ds push je ret sub in xor mov push xchg enter sub clc mov mov icebp fcoms and sub movsl stos xchg mov iret sub mov mov sbb inc mov dec jg add insb xor cmp pop cmp fcmovnbe lods xchg (bad) (bad) jg loop adc xor cmp mov add sub leave push add imul pop or mov (bad) or xor stos outsl jne mov xor push adc jmp addr16 repnz (bad) pop xchg add mov push lcall jg pop pop mov pop repz and pop push mov sbbb (bad) fild pop push mov xor dec add xor xchg outsb mov outsl sub sbb or adc dec inc mov jnp push push mov cmp xchg xor xchg add test push fcmovb out loopne pop add inc or mov neg add jno sub or dec mov das mov hlt fmull cmp std xor loopne (bad) xor adc push or dec pop scas add ret outsl pop inc xchg pop jae jl (bad) pop repnz sub jecxz adc mov lods mov add mov cmp add push push push pop (bad) cmpsb add std popa add pop push andl repnz pop jle add arpl scas sub adc aad pop jnp xchg adc sbb push jno cmp mov pop lahf pop outsl loop flds out or sub or push aaa add shr or (bad) pop pop mov jge dec subb dec mov push push xor insb call sbb and andnps add mov add push push pop nop xchg cli shll sub mov jmp add sub pop movl sub fistp adc out sub test pop mov xor loope int3 push xor ret das pop in xor xor fisttp sub je adc stos lea and (bad) sub loope sub fnsave fdiv lret xor sahf cmc addb mov dec mov push mov loop adc or adc repnz mov push inc mov (bad) or pop out mov mov outsb sub ss and pop sub xchg popa dec and push movsb mov sbb loope cli out (bad) aaa sbb sbb xlat (bad) (bad) popa add mov icebp daa das lret xor popa pop aaa sub (bad) out cwtl xor popf (bad) addr16 mov dec and push sub mov lret nop xor ret outsl adc mov xchg pop dec (bad) decb ja push in xchg xchg mov cmp dec movsl std sbb popf shll das sub jmp lods and pop lds imul and and mov aad adc shl imul mov fidivr outsl in (bad) mov add mov (bad) lods out adc push pusha ret jmp inc out pop jmp scas testb jmp adc push lahf push sarl pop in xchg mov aaa fcoml bound leave addr16 and sbb lods push sbb mov (bad) aaa cmp pop pop adc or xchg pop test daa out mov out pop stc cwtl dec jg dec stc das sub or dec test leave (bad) (bad) (bad) (bad) cli std not stos aam dec xor add jnp stos fistl mov out dec mov xchg push and iret xchg decl dec jno cmp bound sub sbb xor jmp xor jmp iret or xor cli mov lea push cld pop jbe bound ret imul cmp std dec cli sub xor (bad) or mov loopne mov push das stc jl cmpsl push mov mov scas pop je lahf outsb cmp mov sub sbb mov mov fstp movsl inc xor jo pop jmp or mov stos cmpsl sbb sbb xor clc or leave fnstsw ds bound mov stc sub outsl mov stos jmp and and dec xor movsl movb add pushf lock sbb inc push aas (bad) mov lahf jbe (bad) shrl push aam out sbb shrb jo add das mov daa xor mov shrb (bad) adc cli sub outsb push call fs scas repnz aas stos movsl jnp xchg mov (bad) outsl iret xchg fidivl ret ret push or repz mov stos sub mov fist add pop add jne fsubrs lret sub mov or and sbb fbld cmp push fistp jmp ja hlt sbb or and cli xor shlb into pop cmpsl pop mov adc mov dec push pop add mov adc stos xor pop xor xchg imul jge dec jne imulb adc or xor daa ja out jecxz mov cmc add insl fdivrl add repnz add sti push cmc cmp rorb orl add cmc rcrl xchg xor adc and jge leave mov sbb lock or jae jmp push cmp ljmp fwait data16 or pop mov sbb test lea sub scas fistpll cmp out je clc test out loop lret repz xchg pop sub pop dec dec xchg cli push stc mov xchg cmp sti mov dec push sbb push sub cmc adc movb iret stc fisubr pop xchg xchg (bad) push ds pop mov dec sbb ljmp out sub repnz lcall pop mov pop add sti aam xchg out mov sub and mov (bad) das mov repz jp pop andb sub push popf stc mov popa sub dec push clc or int3 por cwtl adc mov test mov or into lods xchg fist fisubrl mov shrl aad add and stos mov test (bad) adc sub sahf in push in pop test add leave adc push int3 mov into loop scas test scas into cmp out mov mov adc jbe insb push negl rcl (bad) bound insb cmp popf push push jmp lds jecxz sbb loope leave icebp ret repnz push lret pop add and out (bad) scas lret sub clc decl adc scas gs and dec (bad) stos pusha (bad) fiadd cmp adc adc xlat mov ds mov js in xchg and mov mov jbe ds jp sub es das mov rclb mov popf jbe es out loope or sbb lret add add movsl cltd adc push and mov lea stc jnp ficompl sub fs test loopne mov pop movsl out push je (bad) mov cltd leave out ljmp das push jl lret jg addr16 test sub in push daa or jns dec push gs mov pop popf test push jmp push sbb jo xlat cmp lret jnp jns popf jae add push lcall fnsave sbb jns cmpsl test inc ljmp and xlat and add (bad) dec and add mov and das lret leave and jno inc cmp mov movl clc data16 je sti out mov push push adc les sub or lcall enter fs popa add mov dec sub xchg cmp mov out or adc xchg push mov sub jp (bad) xor mov fs cmpsl jo test repnz cs mov sub or jg ljmp lret mov jmp and pop mov or xlat gs and jns ret jmp or pop push call sbb adc icebp fmul mov adc addr16 mov shr mov leave jle pop fcoml and pop out cmpsb pop sub stc ljmp add icebp mov divb sub mov cmp push mov call fiaddl lods dec mov inc mov notl dec lret popf fdivs je dec (bad) sar xor cld xchg int jb test sarl inc push aaa push int nop (bad) icebp cmpb mov (bad) jae or and pop mov xchg test hlt sbb xchg lret pop mov ds nop lret les ret push addr16 add std xchg out xchg pop cltd bound bound aad fsubs push adc das or sbb pusha insl dec or xor add mov inc add rclb mov push das sub lcall mov mov inc rcll es cld mov mov fisubr and and mov mov dec out adc pop out aad fbld inc and daa and rorl mov cmp pop sub leave sarl cmpsl push enter xchg pop jg pop (bad) gs mov dec mov xchg sbb sub or jl jp mov cmp ficom ret inc mov (bad) popf ja lods (bad) imul aam std stos xchg mov pop stos push (bad) stos pusha inc aas xor popf pop pop int xor lds pushf sub int mov gs jle mul sub dec repnz andb fdivrs lret cld sub or lret jle inc dec lods mov stos cwtl lds or mov or mov repnz (bad) insl cmp shl dec jno cmp and test into push subb call cmpsl (bad) adc and out cld sub jecxz pop or push push xor push or or pop mov (bad) sbb push sub jecxz (bad) pop (bad) mov ret enter add test out pusha or pop or (bad) mov mov rorl pop or mov adc sub mov shr jecxz pop mov test pop jmp inc testb pop inc fcoms xchg cmpsb inc ja into mov sbb pop (bad) scas xor or call dec cmpsl xchg xor ds push mov in addr16 enter jmp subl inc movsb out push sub daa xchg ljmp sub cmp cmp mov add pop jmp push jbe fistl push xor les test (bad) cli push push mov xchg jge adc into movsb or cmp sti xor fcomip and sub push out mov pop rorl mov xchg cmp mov adc sbb mov xchg fisubrl jecxz lahf mov dec shlb stos mov or fs hlt ret pop jle jb sub jb dec cli jmp stos fiadd cmp sub mov xchg pop adc jl xchg cld push push sbb dec dec inc movsb es inc and mov fnstsw das std mov push jg lods lods clc jmp pop sarb jg jne xchg ret test leave pop inc loop rcll xchg shrl add ja mov mov inc fwait iret add not lock lcall and test mov cltd sbb pop xorb lock std les mov push jno sub (bad) je inc xchg add adc lods jmp test lret push pop popa lock adc and push push jbe push mov ss pop not ret cmp pop roll xchg lahf (bad) pop mov imul mov jns xlat (bad) mov push push mov add sbb std pop xchg leave or sub pop mov cmp sub insl push or dec stos and pop jg mov push scas lods out add jnp pop adc test icebp insl mov movl inc (bad) pushf movsl sbb or pop imull add cmc bound mov mov mov add xor or (bad) stos push scas lock jecxz mov addr16 xor ja push pop pop and jmp call inc adc cmpsl add mov xchg xchg cmp shr or add cltd movsb ret mov inc xlat scas jb sub lods dec push push sub jns inc or std xchg inc mov fwait jbe outsb push icebp push adcl mov not stos int jp pop add jp call not inc or dec repz pushf mov (bad) cmpsb ljmp push testl add xchg jne mov xor and pop sub pop ljmp aaa jb add adc cmp sub lea or inc xchg gs ret pusha or sub add sub aas ret push repnz std xchg xchg lahf push jg or notl pop push mov or mov inc pop or pop adc xchg icebp shlb sti mov sub std ret push inc call or stos imul scas cwtl jge popf push movsl inc lret or xor and xchg scas jge rorl lods jnp ds and jg mov mov lcall in add pop loopne pop mov sub jb ret aaa push jle les ficoml hlt jg imul gs movsl xchg out jle pop cmp lcall lahf lds xor lea jbe (bad) mov add sti int add stos sub daa lret addr16 xor fcmovnu and jg loop add xlat xor xchg andl mov out out dec mov adc adc das (bad) sti repnz mov fstpl dec cmc clc mov pop and call and fsubs fidivr mov mov inc mov dec mov xchg pushf and inc testb insl push and in std or pushl ljmp fiadd push push cld fucomi xor xor repnz lret and xor sub mov cmp and insb push ds or fisub (bad) mov mov (bad) aad lock or jmp dec out (bad) arpl sarl mov addl fstl xchg or ss lret test rcll fsubs mov or jmp sub lcall cmc pusha enter movsl fmul pop loope je stos les lods pop lret mov mov mul mov fst outsl pop and into inc cmp cmp (bad) sub jg jb icebp popf push nop pop iret cli sub leave and pop ret aas testl repnz xor sar icebp dec adc fmuls test cli test mov adc cld mov cltd add pushl pop lods mov out cld xor jecxz add pop pusha xchg sub pop mov fidivr fcmovb xorb cmpsl loope dec jae rorl mov dec subb push (bad) jns inc dec xor or (bad) or push xor loop xchg scas (bad) cmp daa enter call lret add mov push mov xor rorb mov mov xor sbb pop or xchg lahf aam inc lret mov lret pop popa mov repz das sti pop in and lods or and lret jo leave ljmp or mov or dec mov and mov push ja add xor (bad) in adc xor xchg xchg cmp scas jne daa mov (bad) das sub jle jmp lock leave and push and sub or mov sub cmp orl (bad) (bad) rolb sbb jg mov imul sub ja ficom jle mov sub out iret addr16 jo cmc dec xchg jo loope addr16 inc xor add xchg pop add mov (bad) sbb dec cs rcrl int3 adc dec sarl push jg jne and nop popa pop or xor mov out dec mov mov and out scas lret pop sbb jno outsl or and xchg xchg mov clc mov mov pop (bad) packssdw out (bad) scas fstl popa jb and sbb (bad) cltd add mov add sub aad stc (bad) mov mov movsb xchg (bad) mov add lahf jle dec jge and jb,pt into mov pushf call (bad) cmpsb ss push add jno push jmp add ljmp add sub xchg pushf movsl (bad) or stos dec jns orb jmp sub fdivrs or cmp jmp sar jae sub icebp loopne std (bad) dec push out xor xor rcrb push and adc decl jmp mov inc add jbe enter lock ljmp lods popf push scas push clc and bnd test fisubrl xchg xor cld cmp add adc xchg jg add add push data16 into arpl xor loopne into xchg ja jno xor pop repz sub push and mov repnz mov push cmp out in and xor mov mov xor xor and repnz mov popa push out (bad) aam pop pop insb cmpsb add pop mov cmpsl ss loope loop shr xchg and sub jg js popf mov pop shlb test dec adc jne sub lahf stos or mov fstl rclb mov lods cli test idiv jo or pop and cltd pop push mov sbb push pusha mov add adc sti cltd adc mov lods dec push (bad) mov lret insl ljmp (bad) cmp pusha adc icebp and mov push add stos (bad) (bad) jle push cs es mov out popf fstl push fsubp fcomps jbe push out cmp call add stos cltd sub jp mov xlat ds in adc in mov icebp movsl push cs pushf jae (bad) jo adc lea scas gs add lcall sub aas push cld icebp mov enter or js fstps jnp call js lahf xchg inc rorl stos or or jle pop sub xchg data16 sub ret mov and push neg jmp inc fmuls mov push cmp popf pop adc mov out cs pushf cmp imull adc jno cmp sti sub push stc clc push (bad) jbe xchg pop mov xor lods lret inc sbb pushf out or aaa xor fnstcw inc xor cli sub inc dec cs dec lret push bound sti frstor dec cli inc push call push ss cmp or or (bad) adc push or iret xor aad iret jg and outsb movsb stos and or pop daa ret scas lahf ljmp rcrb push popf les mov xchg lock jg jno dec add fbld push cmpps outsb adc adc fsub enter pop jb sti out fisttp mov addb cmc xlat pop ljmp sub negl test or and sub pop iret iret insb pop int3 ja sahf orl push add flds pop add xchg inc pop mov sbb push inc xor pop cmp and stos je mov fstps data16 or xor or std dec (bad) jns sub lahf pop addr16 adc sub mov loope mov mov mov cmpsb lods aam (bad) (bad) mov jmp xchg xchg loop idivb sub mov push nop out test cs jns dec inc repz pop xor lcall mov pop ret mov fcompl lret fcmovnb mov inc xor pop (bad) xchg push (bad) sub clc bound addr16 push (bad) enter repz imul push hlt xchg iret dec cltd stc sbb inc movsb test mov mov or xor aad jecxz and inc fisubl lcall adc in (bad) xlat cmp ret mov xchg cmpsb dec pop call sub jb jno scas dec rcrl and dec gs xor js ljmp dec idivb and push cltd sub movsl scas sbb cmpsl decb push aam inc sar pop aad pop cmpsl jmp dec sub xor and or jne out push cld clc jl jle xchg sti xchg movsb in cmpsl jne ret ljmp mov or and mov stos inc xlat inc psrad lcall mov mov scas negb pop sbb repz adc xchg push cmpsb xchg repz out cmpsl mov xchg ret jmp mov pop iret xlat leave iret fstl mov sbb outsb sub addr16 push call je call sub cmp adc add adc mov stos cmp sub or add icebp xchg sahf jmp pop (bad) mov inc sub xchg popa adc pop ret inc in es sbb out xchg fs push movsb stos in xor sub and lods jmp test fbstp and sub cmp adc data16 ss xchg rorb push pushf daa sub icebp and cmc lcall aaa pushf and jbe xor loope pop xchg stc xlat mov call mov add fistp jb dec daa fisubr pop mov mov ja stc movsl jne sub mov repz out lahf lds stc push adc imul (bad) clc jo sbb je (bad) mov mov jge ficomp xor (bad) dec pop adc push adc sub (bad) and idivb pop lret or ss sbb (bad) bound (bad) jge test dec dec jbe ret adc mov shll mov ds sub dec es jge ljmp into ss or adc (bad) rcl pusha in cmp pop or pusha or clc cmpsb jo and push adc or xchg daa leave je leave hlt and imul sub add push lret xchg pop pusha and mov imul mov movsl popa mov leave leave sub insl hlt icebp sbb leave push cmp jne inc push iret or fldcw mov (bad) cmp sbb and push sub push xor mov fidiv mov imulb ljmp mov push inc jmp or lcall pop int3 sub jne popf iret push add pop inc movsl mov in mov jb repz sbb imul sub lret sbb mov inc lds xchg mov icebp (bad) xchg (bad) daa xor push and ds test xor mov ret pop and lea aas out sub test sub cmp cmp xor test les clc cltd out dec xor cmp sbb xor out mov adc mov jmp ljmp sub jnp and pop fistl shl js insb or es pop insb stos lds ret push outsb pop in iret xchg sbb push dec andl rcrb inc fidivr ss xchg inc sbb sbb push cmp mov mov push inc popf adc push xchg push (bad) jb not push aaa imul add lret popf dec hlt xlat sbb cmpsl popa and pop sub ja jno sti inc movsl xchg aad push icebp pop outsl lret jmp jno xor out in push arpl cmp push testl add sub mov idivl pop mov scas in pop icebp ljmp pop daa leave jbe pop rolb repz jae cmpsl je pop loope stc jnp pushf pop std dec test sti in fcmove or mov (bad) mov (bad) (bad) outsb mov (bad) stc dec rclb std push xchg adc (bad) loop pop push fs hlt push cld jl stc pushf movsl leave jg pop inc leave das cmpsb loop rolb adc icebp adc cs decl lret repz nop ss cmp adc xor bound cltd (bad) push ds xchg mov sub jl std pop push dec lcall sub xor xor sub jg mov xchg push xchg bound pop lea xchg dec aam pushl pop and push inc outsl ja mov sub shlb repz lret out call insl mov pop pop pop ret lret inc (bad) mov mov xlat int3 mov mov add push dec in mov fsubs (bad) jl pop add mov xor mov mov inc jno inc mov sub lret dec out fwait add or data16 dec fsubrs or cltd fwait cmc nop out in push iret divl cltd das xor push repnz fisub rep xchg out pop xchg shll xchg (bad) cmp xlat ljmp out xor mov lock popfw mov cld mov imull xor and mov ret cmp ret int3 pop xor xchg out mov pop jb mov sub out mov ficomp ja and and pop xor dec cltd pop dec jge daa xchg sbb cmpsb jnp and add and xchg xchg loop test (bad) cmpsl cli insl data16 mov into mov popf gs lea mov jmp pop mov and mov pop test adc xchg jb jge test sarl ljmp lds iret mov dec hlt mov jge lds mov icebp mov or ret arpl cmp out pushf icebp (bad) sub add test pop jg shr repz and xor pop mov mov cmp out out jnp xor iret cmp dec sub push jg or call mov xchg jecxz jp dec xlat fldl (bad) pop xchg shrl inc fldl aaa dec (bad) movsb (bad) sti and mov and adc cmp hlt or adc push test push ljmp xor sub sbb or pop jb sti cltd daa jnp pop mov lcall decl out sub dec test and mov lret stc dec stos cwtl arpl dec out push out pushf push leave or adc jno sub jmp icebp xor sub jo and scas mov mov out mov inc or ja gs adc or mov and inc sub cmp add jb adc sub mov mov pop lcall dec add daa dec mulb ror sub sub cmp pop sbb scas and cli icebp xchg push jle xor (bad) sbb sti inc xchg and (bad) dec sbb sti pop daa fdivrp repnz xchg outsl mov les repz and lods sbb jne pop pop icebp mov shrl cmp mov pop or adc add mov push pop scas cltd cmp flds and popf sarl daa icebp sub jecxz pusha sub jl inc ljmp daa add (bad) std push inc fildll clc mov clc loop lds fdivr lahf fcoms xchg es pop xchg cmpsl pop cmp mov jb xor clc sub insb test sub xchg mov and sbb pop inc rorl xchg dec scas iret test pop loopne hlt rol pop clc fiaddl mov sub cmp mov pop pop fnstenv xor std mov push mov mov leave fild aas cs lods js repnz (bad) mov pop sub push fsubr leave or fistpl sbb or pusha sub mov cwtl jne xchg enter push fidiv daa leave sbb imul dec and (bad) add xchg xor mov out rcll mov dec movsl mov fmuls pop and nop imul mov fwait mov (bad) mov shll fldenv pusha imul add adc xlat icebp xor xor dec int out sub push mov decl fnstsw pop sub mov mov jmp (bad) xor imul push sub gs imul repz mov jg mov fist iret jmp cs aaa sbb in mov xor scas fdivrp pop mov and push sub xchg ljmp pop push pushf mov mov or out or adc sub jg lods mov clc adc sub push cmp mov xchg pop xchg nop add negl in adc add inc icebp movsl inc cmp loop or add out pop les pushf xor push inc mov adc aad pop pop das out mov or call movsl addr16 and sbb fisubr xchg insb jecxz daa or mov sub mov mov test xor mov push push lret (bad) das insb ja jmp add mov jmp pop add lret and pop (bad) cli xorl lods enter mov jle lret sub mov and mov push in cmp fldcw movsb adc jg jmp fldenv (bad) sub pop stos sub adc cwtl cmp popf xchg mov ljmp out call xor mov imul xor outsl sub fisttpl (bad) xor mov push mov add add or jmp pop leave jmp scas stc mov sub sbb xlat mov pop repz lods add iret lret sbb cmp (bad) in push (bad) cmp ficom mov mov add icebp cmovnp addr16 (bad) jg clc xor and (bad) adc jno or xor jno mov push inc jae xchg stos outsl (bad) dec jl int3 jl (bad) stc xchg daa int3 (bad) sahf (bad) (bad) enter bound ds jge xchg xor mov pop out ds jne fbstp mov jg flds jmp sbb idivb cld mov (bad) lret vcvtps2dq ja xchg (bad) xor hlt leave mov pop repnz fmulp pop icebp sbb xor jecxz adc popa cltd movsl ret mov jl in mov out std sar sbbb fildl or cmp in inc movzwl fildl mov sub in mov out or test leave and mov lret mov sub rolw mov jg jnp sti (bad) jmp icebp adc test testl adc rol insb add mov dec imul jb dec stc mov out xrelease or movb stc jmp movsb je popf popf icebp arpl rcrl sub lods fincstp cs insb hlt cli jmp inc adc xlat (bad) addr16 mov pop jmp mov mov mov dec cli into push sbb sbb mov cmpsb or out dec pop loop aad and out mov pushf popf push sbb pop loop inc jge stc pop jnp nop or fsubl ljmp das fdivrs adc cltd mov xor dec pop and adc mov out or or push and sub xor or pusha pop cmp xchg mov xor jge (bad) push test or mov (bad) dec xchg adc and ret jne mov xchg dec outsl repnz mov call lods pop or xor xchg mov push sub and outsb lahf lock inc or jmp sbb add daa (bad) jg pop sub xchg or xchg mov mov add movaps or incl and repz loopne push aam sub push pop ds pop shll inc icebp xchg lret mov mov or adc and mov jne dec and inc add daa js lret pop stc jnp jl or fistl iret adc sbb cwtl mov cmp sarb imul test mov xor xor ljmp sbb ror pushf imul mov jmp out dec pop les icebp cli pushf ror xchg lds gs or sbb les sarl inc out popf push hlt roll sub sub stc leave pop jno dec inc pop or push and jne cmp dec and and jmp (bad) jno std xchg mov jnp add xchg hlt stc jo (bad) popa cmp leave dec cmp test mov xor cmp int3 mov icebp scas (bad) xchg (bad) cmp leave sbb sub stos out mov aas (bad) jns dec push pop clc js push mov fistpl daa dec fiaddl push out repz je repz pop jecxz and es les mov clc xor lods pop sub xor fisubrl repz sub cmp repnz cmpsl push and roll mov call and xor pop orl mov or add push push daa xor call cltd leave (bad) inc jecxz and or pop out popf loope mov pop aad scas fnstsw and sarb or and aaa cmc inc ss mov enter mov add xor pop inc aam in inc jle inc jmp ret rcrl out popf or lahf jo popf cld sub pop les xor mov lahf mov pop inc mov pusha xchg mov std sbb pop fs call int aas loopw add scas inc sub out pop and daa divl xchg mov test movsb rorb pop or in push jne rcr inc mov pop ljmp (bad) mov push imul stc imul aad leave dec iret enter scas xchg sub adc sarb in bound inc mov pop adc mov jno xchg lds daa jl lret lock xor data16 mov mov es es mov pop or xchg out mov cmp mov and in sub push out out cmp aaa jb outsb and in pop inc dec in in xor test in mov add int3 or enter pop cmp not cli mov imul addr16 fisttp jae pop xor xor push add push in cmp call jno lea xor xchg rcrb mov ret and (bad) xlat add js adc cwtl std (bad) hlt fstpt mov sar mov jo mov imul xchg dec mov imul and push cs fidiv pop idiv xor adc xlat jne or push jle (bad) mov push xor (bad) jg lret xchg jnp dec daa push ficoml xchg sbb js xchg mov and xchg repnz mov adc lret sub adc jno or push push (bad) sub (bad) mov pop pop je rcll aas mov mov pushl sub mov add pop (bad) (bad) repnz fnsave andb cmp jle dec or cmp pop mov lods ljmp aas je push cmc ret xor lret icebp ja out sti imul pop mov js pop sub dec or ret leave lea sub scas ret cmc xchg pop imul popf sub ljmp jb dec ret scas cmp outsb call icebp rcr or xor xchg rcrl sub sub push mov jmp bound or cmc jns inc roll rcrl leave (bad) repz rclb ret mov and mov (bad) out add or jmp sub pushf add popf jne,pt das ljmp pop push popa mov jge mov enter sub ffree fdivrs jbe (bad) imul cmpsl dec push xchg and xlat out call sub imul or or mov iret and insl or fs mov jb sub adc lods fs pop loopne stc mov mov jb pop lock daa sub jge fcomps fisub ja scas inc sub movsl aad ss pop adc cli cltd imull xor icebp inc lret add pop ljmp sub int3 dec dec leave mov shlb xor push icebp repz sub in das or lock loope test loopne jbe sub sub mov lds mov dec add inc scas lret or scas sub mov jmp mov mov ljmp incl inc jp xor sbb inc enter cld cmpsl xchg pop jmp add or and ret test mov xchg scas popf jmp shl xor xchg in and mov sarl inc mov rorl pop xor inc and scas repz push ss int hlt ja (bad) mov lds enter add xor popf jae inc ja pop mov pop add pop mov out lahf jne jge mov inc call mov (bad) pop subb pop xlat (bad) iret inc fisubrl or fdivp stc scas dec aad sbb movsl pop jnp mov mov xor mov shll lret lcall sbb sarl and xor ljmp les ja shl aad add mov stos mov shr mov fs stos lods push sarl sbb xor cs adc xchg adc (bad) ficompl mov pop (bad) sub or jns mov stc out push push mov fstpl sbb mul jg sarl repz pop pop mov sbbl sub (bad) sub sub xchg dec pop mov dec push outsb mull sbb ss popl mov aad andl sbb push cmp ficom cmp (bad) (bad) negb sub mov push mov popa mov mov push sub cmp dec xor xor or leave sarb outsb (bad) outsl (bad) or call out inc fisubl xor mov dec lock push mov lahf xchg idivb ljmp nop jmp sub pop out repnz xor stos les subb into add adc dec sub dec add pop add out jl fmul mov sub mov jl setl lds es push cmc cltd inc into leave (bad) sub mov iret push sbb mov adc pusha xchg outsb (bad) sub sahf mov or mov sub mov pop fnstcw jbe dec mov sub pop dec push xchg sti fmul push loope and cli xchg leave push push cmpsb imul dec jg test repnz add xchg pop out (bad) out mov adc adc mov fs xchg bound pop or adc push insb scas or mov mov jmp fcoms add or mov or loopne ficomp rcl arpl xchg (bad) cmc or jno mov inc fwait inc leave dec out (bad) fsubrs xor pop je loop clc jle push movsl jno dec lock cmpsb jb les or movsl xor ds hlt xor outsl sub mov icebp add xor inc cmc adc xor repnz add in popa mov enter roll iret mov mov push in and lahf or cwtl leave dec add fisubrl push rolb or idivl pop jmp in dec loope (bad) mov call adc sub (bad) not nop xchg jmp lahf je xchg out mov (bad) cmp sarl push or sub fmuls mov jb mov or xor std mov data16 repz push not jmp fs add push clc stos or ret pop pusha push sub mov and jmp out cs or ret fiadd fcomps test repz dec out sub (bad) test jmp push pop mov push cmp adc fwait lock fstp mov pop (bad) gs mov popf subl sub jb stc (bad) cmp aam icebp lahf loop add repnz test movsb mov jb out mov in and cmc mov jne lock scas mov adc repnz ljmp cwtl dec repz dec jo and std pushf int3 ficom add xlat add pusha xor dec dec jne aad or scas cltd mov movsl leave pop sub sbb mov lcall in comiss jmp mov lret (bad) xchg sub js popf mov xchg lret push mov cmp xor outsl or jmp sub push xchg lcall mov lods shrl test in cmpsb ja cmpsb fdivr cmp pop lcall sub movsl loop rcr inc data16 lret (bad) fcmovnu lahf or or negl aad xlat xor adc mov scas sbb cmpsb repnz ljmp loop xchg call (bad) dec sub sub or pushf cmp (bad) xchg fdivs and (bad) shrb and scas mov pop mov jns loope xchg test stos jbe mov jmp scas xchg dec mov cmp mov xchg or gs jg and fsubp lock push lret mov pop or cli xor call out adc sti (bad) dec insl loop mov das cs sub mov pop or cld test rep mov xchg in mov mov ja popl ret mov inc (bad) xor repnz push add push push or ret (bad) repnz sbb mov mov int3 (bad) leave adc std lds add xlat mov imulb loope and add (bad) jg aas adc jo ret push mov insl repz pop push addr16 push xchg icebp stos sub dec sub (bad) lock sub add (bad) out push sub cmp jo shll lret fwait xor xlat lcall out movsl stos adc mov cmp jecxz push and dec imul scas and sub cmpsl cmp test pop (bad) lret dec or jp and ret pop jnp and inc add mulb fisttp jns mov lock mov rcrb imul or xchg loopne xor dec imul sbb iret sub mov add xlat pushl out je jmp rorl lahf pop imul cld and xchg jmp cmc jle movsl aaa pop (bad) and mov inc fwait and cmp aas test out test mov pop mov js (bad) cli negb push mov cmp dec test mov cli mov js popf sarb lods pop (bad) or rorb popa fidivr mov push out sub loope cmp mov sti lret lcall data16 mov or cli cmc inc xor or mov js clc mov rorb add or gs scas pop movsb lods pop jnp (bad) out js in xor into xlat mov jo adc jp mov frstor or shrl pop cmpsl fstl ja out das lret jg data16 sarl push push arpl (bad) fidivr nop adc (bad) lea push ret cmp xchg mov cmpsb adc push fidivrl mov out cmp pop stc and and or cwtl adc sbb or stc jg mov mov aaa add xor stos fidivl lods and sahf sub (bad) or jbe shlb (bad) adc outsl sub sub imull sub lret mov jno in adc (bad) out and lods ds push dec mov lods sub out adc sub movsl jb test lret dec xor push push jae dec out and es ljmp dec (bad) and dec inc push sbb fsts adc stc mov out jle sub bound rorb xor fsts mov lret mov cld push imul (bad) push stos mov nop push adc cmp add jle mov inc repnz inc jmp pushf xchg lock lea and sarb inc jmp mov push and scas mov subl adc in mov fs pop ss sub add out data16 add movswl insb xchg jns inc add orb jmp inc mov roll mov sub mov xor les mov test mov push and (bad) (bad) dec jns mov xchg cmpsb mov ljmp cmp jbe lret aad sbb xor loope fiadd stc pop push push mov ror add mov pop roll or add ss or inc rcl jb add add (bad) lock in xor mov and and xchg bound lds push push cmp push pop jb (bad) (bad) rcrb pop cmp cli sti stos mov inc mov xor jo lods dec push mov std jl push sub out std pop inc les repz mov xor cmc sbb or pop (bad) cli cwtl jnp pusha dec add mov mov jle icebp mov jle out popf push add inc xor ljmp (bad) pop int pop mov push test fisubrl dec sahf test sarl cmc popf mov mov ljmp inc add add sub sbb push mov inc mov pop mov xchg aam push sbb jg rcrb test add jo mov sbb push addr16 cmp pop dec pop (bad) or sbb push push clc push ds pop mov pop inc mov add in xor fldl sub xor imul xchg inc push test pop mov stos mov xchg pop inc pop int3 push push jnp mov inc pop push push mov dec adc div jg (bad) mov xor adc cmp ds test sub mov xor mov xchg xor add pop icebp push movsl fidiv pop or rorb and and std shrl sub xlat jns idivb das je popa fisubrl imull push out pop sub cs mov pop sbb shrl adc adc add popa mov lret test push sti mov inc daa and pop xor movaps movsb mov add fwait mov icebp cmp push leave jns (bad) insl nop sub mov sub stos jb sbb xchg pop jb mov jmp xor hlt pop push pop push fiadd loop xor pushl adc rorb movsb call lods daa loope (bad) pop adc movsl inc push xchg loop xchg mov jne pop repnz and mov fwait sbbl adc clc hlt lret xchg mov xchg ret and les xor or cwtl movb mov xchg (bad) adc pop cmp jnp popf push ficoml imulb xchg adc cld pop scas xor mov or adc push jmp mov dec (bad) int sub sub stos push lods push jne mulb mov mov enter cmp add bound nop jmp loop xchg lea push jnp lods scas lds ret imul xchg clc stos and cmc jmp sub xor test adc aaa imul movb repz and iret cs mov test lds shlb or into outsb pop scas adc sti mul push dec iret pushl cs lcall jge add or sub stos fcomps lock mov aam jg jns cli cmpsl (bad) jnp sub cmpb jmp dec out out sub arpl aaa rol ja and int3 pop xor or pop mov sbb cmpsb adc mov pop cmp xor cmp add jmp jne mull test icebp ret mov add jbe popa or pushf mov jno push ret test call in leave ljmp cwtl xchg int3 jne pop stc lods jo mov cwtl (bad) negl popa dec jmp ret add mov sub in (bad) mov lods push mov and xor into add pop mov pop inc dec xchg jecxz leave clc push rclb mov xor pop (bad) jns sub or fiaddl sub cli mov jecxz lcall mov adc loop (bad) mulb test out repnz mov and fs in icebp sub cmpl movsb dec and adc icebp mov mov xchg (bad) imul scas mov out imul iret fcoml add xchg push mov xchg leave jg dec lock xchg lcall push ds adc ret dec adc pop pop ret mov (bad) mov xchg test cld mov lret mov sub bnd xchg sahf sub xor addr16 fsubl dec lret cmpsb xchg pop jmp xor pop mov mov scas popf xchg xchg mov xor (bad) ljmp mov jle or loopne inc mov jno sub outsl dec ret dec dec xchg pop icebp daa ficom fwait nop in dec mov std sub test xchg xchg jecxz sub std jmp outsb cmpsb stos das out ljmp dec pop pop dec test adc push sti jl cmp add or loope sbb jbe (bad) xchg out jae cmpsl push push adc in bound into add or fistpll scas xchg add cmc or jne mov cs scas shll (bad) lcall xchg fs mov sub shrb fwait mov jno xchg call stc fsubrl xlat lret (bad) ret or pushf mov gs clc cmp (bad) pop and push jle jl xchg call adc xor pop icebp stos mov add ss popa (bad) or stc dec lods pushw pop mov cmp mov sub sti in mov idiv daa push inc dec ljmp insl inc dec jbe push inc or cmpsl or and fidivr adc and lea add mov pop sub incl dec push mov fld clc add mov out out dec xor push add bnd leave jp lods insb gs (bad) dec popf pop sub xchg sbb pop (bad) cli mov dec sub sbb dec xchg loop imul inc mov jmp int3 cltd popf jns lods and mov mov lods sbb cli fs lock das cmp out ljmp push push push movsb sar out rol in xor clc pop icebp xor aaa or add je or jmp lret jns fs push popf push sub jmp fstpt cld les jne imul daa test inc inc add mov xor xlat push out cmpb cmpsb push sub pop insb or push mov or lret repz pop (bad) mov jle inc or xchg xor rorl xlat lds mov daa lret adc and int jge jecxz adc dec pop mov and imul adc jg int stc ret ds mov jl movsl or xchg rcl add idivb je mov cwtl mov into dec mov aam neg pushf popf mov mov ret int3 mov mov sub cld pop fdivr enter imull loop pop add notb in fisub or cmp shr xchg test fs cmpb push repz or cwtl ret jmp sbb mov pop cwtl scas idivl mov daa add out sub pop (bad) ss mov mov and pop lret leave jl movsl hlt inc flds insl sub loope lret sub into push sbb mov jmp stos leave or ja imul xor (bad) out add scas push adc lea push (bad) jne jno jmp dec mov (bad) jbe mov into je push fcmovb xlat push ret cs add dec sub roll bound sub outsb aas sub inc sbb pop adc dec divb pusha pop push (bad) mov jle adc pop insl setb mov ss push mov popa nop fimull mov pop subb lds dec push les mov xor or push pop mov sub int dec fcmovbe sub repz pop and les sub xor cmp lret popf lds nop and or pop dec in out orb aad in icebp sti jle (bad) lret ja dec bswap sbb add xlat stc xchg (bad) repz push or lock xchg (bad) push or xlat pop adc xchg pop dec adc int xchg jmp cmp (bad) sub xchg fs repz pop jecxz adc and scas (bad) mov das daa add fwait mov incl repnz stc (bad) xchg mov or cmpsl in sub xor out dec mov or mov mov cwtl insl popf sti push or or dec dec cmc push mov inc pop and (bad) mov cmp cli out jne in push pop mov gs out push jmp mov push and pop push mov repz inc popa xchg das test pop jmp lock cltd pop push shr (bad) jmp jg jmp mov in insb repz mov cmp jb add mov push dec adc sub xor sbb add mov loopne jmp fstpl cmp (bad) int3 push pop test xor sub hlt adc pop pop mov ljmp call roll aam (bad) fiaddl xlat and mov add push cwtl dec xor das or jle (bad) lock mov push jne mov adc jmp dec into mov dec xor pop pop jmp xchg decb movsb cmp cmp dec imul adc dec jecxz pop cwtl cmpsl add pop mov es movaps cli mov adc pop fnstenv inc stc push ljmp lcall in xchg jg jl mov std and sub rcll and pop sub fs pop mov sub sub add into out pop cli data16 lret ret negb imul mov scas lret ljmp push or push inc xchg out jg jbe add jg sub mov jb jmp inc daa lret and pop sub sub sub cli clc loopne mov mov outsb xor sub sti or xor test movsl mov pop mov decl pop add and loop fs scas loop and pop xlat mov icebp push xor pop mov mov pop xchg data16 jge (bad) jl sub xchg sbb jecxz adc (bad) xor leave inc xchg mov movsl mov push rcrl in mov in dec adcl cs stc mov insb les test mov pop inc pop mov push clc aam out sub clc aam add (bad) into divl scas loop addb std in mov lea push xchg dec out mov mov daa lods das out jg jle mulb xchg scas xchg push jmp aam push jecxz sub ret popa sarl and lods sub mov subb jmp mov int3 mov pop add xchg ja mov lret and sahf insl dec cmpsl out push sub pop sub mov outsb in shlb push jo imul lods imull jg pop (bad) sub sub out and or dec bound leave dec icebp mov sti mov ljmp ret lahf jne repnz add js roll aaa stos pushf (bad) cmp sub add push xchg outsb and pushf mov mov sti flds test lods dec movsl icebp mov push stos fs (bad) sub dec fs in cmpsl pop das xor lret sub sub add jae jl xchg sbb push add pop ss pop in in leave mov (bad) mov jl push rcr cmp shll add sub cmp fsubrs jecxz and mov loope and mov inc xor cli leave mov inc mov aas jmp pop insl loop (bad) scas pusha sub (bad) xor sub sar xlat sti push adc mov mov (bad) and mov mov (bad) mov dec jmp dec xchg push mov push in jb in mov adc dec sbb in notl notb imul sbb divb sti mov outsb das pop sub add stos or cmpsb test ljmp dec mov aaa push (bad) jae xchg and pop js mov (bad) jge jo cwtl cltd mov not lret add cli fdivrl lds mov pusha mov dec stos mov dec out xor clc ds mov (bad) jno (bad) sahf enter icebp sbb in pop loop jno and jg inc dec and in fcomps ret push xlat negb sti pop xlat jmp jle (bad) mull (bad) insb push fbstp ljmp add (bad) bound sbb data16 push fldl xor mov ss js divl je icebp lea add lret ss lret push fnstcw xchg lods xchg xchg sbbl or mov out pop cmpsb leave sub cmp mov outsb jle xor ja xor mov stc pop scas js mov ret es dec ret and fcmove pop roll lret jo xor cmp cmp (bad) mov stos cltd and dec hlt mov arpl pop aaa or (bad) xlat lods cs test int3 in xor sarl sbb mov jns movsl pop mov leave xchg add sub ljmp adc mov test iret add test and mov adc xchg mov das mull adc mov (bad) stos test add popa (bad) stc cmp les leave ljmp xchg icebp mov mov movsl popa dec add cmp adc repz add push hlt mov mov mov (bad) add sub pop xor insb cmp xor (bad) (bad) sahf sarl xor xor aam dec daa dec test out iret adc pop call mov out add push int stos lds inc mov sub jp imul jae jns dec (bad) add jg dec mov std test cmpsb ds jg adc mov ret dec sbb cs ficom repnz pop fstl cmc fs sti mov iret pop xchg (bad) fwait in or stc sub (bad) roll and xor jmp cmp sub mov inc jo xlat mov mov xor xchg push mov and test mov cwtl xchg sti fcompl mov jne jge mov pop fidiv mov scas loop sub dec enter das add mov ljmp pop mov mov xor xlat repz and xor mov mov addl mov and ja pop mov mov dec push xchg mov push fsubp push push pop lret aam ljmpw aas notb xchg adcl stc stc sahf call mov add sub out lret pop push cld pop out repnz push bound inc scas fcmovnb daa js scas fmull jle lcall xchg sub fwait and dec in lret pop and or cli mov (bad) out push fstps (bad) sbb ret test lret mov or scas hlt add sahf enter adc insb and daa xor jbe inc out out je loop xchg loop leave jmp ja pushf cmc pusha adc inc mov out pushf int3 push hlt inc lds out popf es cmpsb das cmpsl mov mov insl pop sub ds jmp push sub fistp loope aas (bad) in push and cmp es pop popa xchg cmp es mov jge test xor jecxz mov xabort scas js jb pop jb or sub test lret xor ds mov and loope cs push (bad) xor inc lcall (bad) mov add xchg out dec (bad) je xchg sbb enter push dec push push dec mov icebp daa shrl xchg push cld jmp jno imul std test fs cmp outsl push fdivr movsl insb mov icebp mov mov scas mov mov or mov mov push repnz fmull (bad) je clc movsb mov mov rcrl dec jle out (bad) or mov pop jne fwait daa fdivs into sbb pushf sbb inc push cltd jns loope idiv inc dec pop stc mov imul jne or cmc movsl mov popf fs pop mov pop xor fbstp lds mov into (bad) dec adc lret (bad) dec int3 test ja lods ja xor or lret mov pop fisub push and (bad) jecxz jl (bad) pop movsl jmp push or sbb sub dec sbb mov dec jbe out dec cli leave movsb cmp lock addr16 scas lret lds mov jge cli mov lods adc inc mov adc (bad) ljmp popf out insb dec ret fistpl dec xchg fnop jbe sub (bad) maxps flds ficoml or dec mov cs and sarb cld js (bad) adc or mov das jmp jns loope adc push jge outsl adc mov dec mov adc fsts pop push incl adc fidivrl or jg daa dec or jo or (bad) adc aad jp cli das sub (bad) or mov sub pop jp fisttpl add fldt add xor repz js mov enter mov dec xchg mov sbb aaa dec xor xchg xor dec or fadds and dec mov pop loop inc bound (bad) or cmc repz dec imul dec sbb je or bnd jne fsqrt dec cmp xchg notl nop xchg xchg (bad) mov inc xor insb imul out or sbb and sti rorb xor clc xor jne xchg sub into and rorl or (bad) fnsave movsb jmp or jmp pop jp xor outsb mov lock iret sub ja cmc in dec ror (bad) xor cmp out mov sar pop data16 or mov sub jbe adc (bad) push ret pop jl repnz sub addl jmp mov inc xchg rol addr16 dec andb hlt lcall push icebp push inc iret inc mov sub btr cmpl cmp sub cmpsb fsubl jmp loop (bad) nop andl and ja divl out das out lods xchg clc pushf inc call mov out xchg cs mov mov mov cld cmp rorb sub (bad) push push aam xchg insb inc dec xlat jecxz push or ljmp insb aas repz fidivl adc jno or fdivp lea imul fimul xchg ljmp nop ds dec mov sti test or pop jns call dec cld (bad) out sahf shl xor das std ljmp icebp (bad) cmp push outsl imul (bad) jb add in push mov ret (bad) mov pop insb lret mov test and loop je into mov sarb jmp sub adc xchg ljmp roll cmc mov sarl mov lret mov mov scas lret ljmp sahf mov or inc push outsl xor gs cmpsb jns sbb push adc cltd jg iret cmp cmp repz sub callw flds test shrl xchg test sar jecxz jle and cs pop mov aaa enter inc cwtl adc add adc out test cmpsb add add mov jl leave jg or push movsb hlt iret mov mov shlb mov or dec mov shll cmp dec mov inc pop add stc dec inc sub and cmpsl testl and jg add xorb mov je pop push les repz pop jnp stc insl sub aas mov sub mov rorb adc fildl push lahf adc scas out pop lods cmp pop int3 addr16 mov push sub xor cmpsl sub sbb sub and int3 lcall fcoms xor ret ret xchg ljmp lds mov das push mov dec icebp and scas xchg movsb mul out cwtl shll ret jo clc xchg loop test and ja sub inc lods dec (bad) cli sub xor in push sbb ficomp dec push or sub cmp jle xor inc in jnp xchg mov jmp mov pop xchg call mov hlt mov ja mov dec mov data16 sbb inc inc dec jae cmpsl out or or icebp pop mov dec pop das or jbe movsl push xchg stos popf adc dec pop cmpsb rorl sub mov and daa loope add test or and sti cmp ljmp sub ficom mov nop pop into scas sub jno push lds xor into fildll jnp sbb jle cmpsl inc add jae mov stc lods xchg add jecxz dec decl cmp into dec (bad) cltd hlt std call pushf out fdivl dec jle rolb test fild mov ds sub xor or cmpsl mov push xchg add aaa pop subl lock mov xchg shll jp pop movsl (bad) mov mov mov xchg rcl or cmp add add stc xchg xchg mov fs lods ret xlat jecxz pop (bad) rcr test aam sub out and dec lahf xchg out mov push mov sub (bad) in in pop ret (bad) fucom icebp cmpsl jae adc adc pop fldcw pop or dec pop mov dec outsl mov fstl inc cli xor sub xchg mov push ss mov xor adcl in cmpl (bad) leave pusha cwtl or sub xor lods mov or std (bad) (bad) icebp rorl ret test andb je inc mov xor sub cmp mov pop xchg adc and movaps mov mov jle inc jecxz push cmp popf popa enter out (bad) hlt (bad) dec cltd in adc shlb push movsl std inc call repz out mov pop iret imul out xchg fadds cltd nop imul mov adc shr (bad) icebp fnsave xor fidiv rolb (bad) fidivrl and mov xor jno sbb xor sub pushf push dec test push push enter pop fcoms pop ljmp jmp sub inc loop loop mov in cmpxchg into jbe pop and out mov ljmp mov ret add popf push adc (bad) inc test wbinvd (bad) cli xor (bad) push cmc daa icebp dec xchg repz adc pcmpeqd jno inc dec mov andnps jo lods lds xchg mov or mov out jecxz xchg jge cmp pop pop mov dec mov popf ret je pop xchg pop (bad) stos or xor out inc lret push rorl aad inc imul enter xchg scas cmp das fadd aaa sub lret cli fs and dec fisub insb in mov jp ret rcl je pop lods sub cli sub loope xor cmp pop add xor jg adc pushf pushl dec ljmp test loop mov rcr mov sub pop or and in jp jge bound pop cwtl adc cli cwtl sub pop repz test or mov and xchg stos int3 fimull mov push push adc movsl or sbb and push xor enter sub or fist inc dec sub jns sub fimul fs test mov or js aam pop and lret sbb add mov mov mov mov pop jmp push (bad) jb fistl into lods push mov push xchg adc ljmp stc sub pushf ffree test sub push cltd or aas mov adc lock stc jns andl sub push pop xor rorl dec pop xor es push test mov add jecxz mov push shlb sti inc daa inc mov loope int3 stc gs sahf das xor jne cmp add cmpsb daa xlat xor scas and rorl mov dec jg rcrb in and jb push and xor enter xchg into pop dec lods push pop fsubrl pop sub stos lea clc not add out int3 fs dec add rcll popf push pop dec xlat push sti sub dec les in out int lea jmp cmp mov mov ds mov cmpsl push jg pop dec shl cmp das loop xchg pop cld ds mov out sub ja lret aas sub mov adc sub add and jl fxch lods jle in or lods jno (bad) sub enter mov dec mov bound push js out mov pop add push xor stc dec pusha jp push inc xor push inc ja imul push cmp imul mov pop outsb lea add movl jae out dec cmp xchg xchg adc jmp jge lea xor sub xchg mov sub fidivrl mov or fiadd sarb sbb xor mov addr16 mov (bad) mov inc in test fidivrl cld addb pop sar cwtl xchg mov pop js xchg (bad) outsb fisub jmp cmp negb adc xor or xor jae pop out push pop push pop cmp fldenv fmull push inc arpl icebp ljmp imul mov jg sbb push add in jle jle push push cmp stos and mov dec icebp mov mov mov pusha add ds lea cmpsl out fsubrp xor sbb je dec push imul or pop and movsl adc mov lahf pop jge sbb xlat and imul sub mov push into mov clc and adc loop mov cltd xlat or adc stos cltd xor ljmp fcoms fisttpl mov and negb jmp add mov mov lret pop xor pop mov (bad) shll cmp fdivrs sbb insb pop or mov sub push and adc repz sbb incl insl push mov (bad) and outsl lahf jbe add mov mov ljmp cmpsb jae pop jo pop push xor pslld testl sbb outsl pop xor pop jge mov inc add repnz inc not push add xor xor ljmp dec shl inc fistpl or xor push and sbb stos cmpb neg xor cmp scas add xchg push push pop pop maskmovq xchg ss jmp popa pop push outsb jge pop and lock mov jmp mov add inc sarl push shlb into add mov mov push (bad) sbb and and push rorl repnz dec push cmp test int3 pop ret roll movsl shl scas mov jnp sti cmp push addl mov sub rcr rorl stos adc or fisubrl out jg cmp mov xchg jl jns inc dec in mov inc or xchg mov add push movsl or and aad mov enter repz int mov out jb mov andl xlat xchg (bad) (bad) (bad) mov pop test dec cmpsl push dec mov bound das pop jl mov sub jbe xor xlat pusha test sbb mov fdivs inc or sub divb mov adc pop xor sub sub xchg jno and push mov mov fldl adc dec enter sub stc sub mov sub xor stos imul stos int3 lret cwtl mov scas test stos sub and call call imul mov cmp mov enter neg jg mov push cwtl rcl cmpsl dec and cmc out xor (bad) or les jg ds das or mov aad in add ret inc pop push fsubrp pop xor dec popf je push mov sub pusha adc pop push add jmp mov inc adc test pop add mov lds push lds sti leave out pop dec sbb in mov add loope out sub xchg mov movsl int3 dec push (bad) outsl mov add out lods push in enter (bad) scas xchg sub cmp test cmp or insb jbe mov jnp jns movsl aad push mov enter aad scas hlt pop push pop repz imul (bad) clc mov outsb sub or dec fisubr incb imulb fcom ljmp imul sbb and xor loop push inc pop out xchg lds cmpsb sub push rclb xor std xor cld xor inc inc mov pop push inc sbb ret stc jbe imul jnp mov pop out imul xchg dec loope xor test add sub mov mov and lods pop movsb call pushf or add std stos sarl das sub xor xor lea and lods adc fldl add repnz ljmp lds inc mov ss fildll ljmp lock cmp (bad) aad imull push sub xor outsb pop mov sahf das mov sub popf ja xchg (bad) in (bad) fdivr push inc fisubl push and mulb stc mov add mov mov or out ds cli div nop sbbb add stos loopne jns xchg inc mov cwtl imul push sub adc insl data16 cli bound mov out inc mov ret jle (bad) repnz call dec clc (bad) in addr16 xchg stos scas cmp mov and pop xchg or add mov sub lods cld add fdivr cmpsl ret jns dec fdivl jmp mov push sub xor shlb dec sbb test mov dec xor lds sub mov pop and pop pop jno addr16 lahf xchg cld cli xlat cmp (bad) das (bad) std mov cmpsl aad movsb and cmp enter popf andb mov mov jno daa fistp cmp add insl test lds fwait push fisubrl xlat mov sub push adc mov or mov push sub stos mov xchg test fildll loop jge ret xchg iret lods aas add lret xor (bad) add mov xchg (bad) or xor mov mov inc mov aaa push mov cmp xor hlt cmp push add mov xor add push pop outsl mov lds adc lret mov xor sub adc or push cld (bad) push dec push lret xlat ja (bad) aad ficoml icebp notl lods pop cmp cmp lret icebp pop inc shrb nop das divl (bad) jmp push xor pop fnstenv sti shr and dec inc cmp andl ljmp mov orb xchg (bad) je out aad in rorl hlt inc fs out sub popa xorl mov xor and das xchg push js adc and mov mov sbb in and fistpll cwtl sub dec test pop jmp adc stos and lods mov gs ds pop int3 or bound test fmull sub or or or lods pop xchg or sti icebp xchg inc mov sub sub shr enter dec sbb add in pop and mov mov cli sbb mov or jge rclb cs sub movsb sti je mov into imul cltd xchg inc push out jnp aad push add cmp jmp mov mov adc xor aad scas into test xor add test xchg inc fdivr in test sub icebp add fisubl rorb add or mov mov mov or dec out and jg movsl hlt into jb sahf xchg add mov pop lds add and dec push mov fistl jge (bad) cld push pop mov dec pop dec (bad) or cmp mov xchg mov mov lahf in mov push cmp add in mov dec in das inc loop mul and add fisubr adc xor fwait test sbb lods cmpsl cs pop (bad) xor scas or mull or das lret mov add fdivp movsb jae repz jg fcoml fmuls scas mov push popf sbb jno (bad) mov cmp cmpsl insb sti mov test push fldcw inc mov or je fs cmpsb mov fmuls jecxz das repnz dec daa fbstp sub or ljmp inc xor mov out int add sar in movsb enter add lcall cs sarb pop popf sar xorl outsl adc mov or and jno cli mov popf faddl add fs sub sbbb adc popf jnp test cltd shlb das lods or or sub xlat jns scas imulb (bad) sub adc mov sbb cltd aas iret jge mov xor imul adc fdivr mov add sbb dec jmp cmp cmp inc sub adc cwtl mov loope jne int3 sub and repz push inc sbb add popf pop pushf cld sahf xor test sti les cwtl or pop test shr test in arpl insb aas (bad) xchg loope lret bound and pusha call push jmp sbb inc es test and test dec jno xchg jmp sbb cmp fist test dec fdivr pop xchg pop fmuls repz sub ja mov sbb or enter lahf icebp push (bad) sub push sti pusha mov add mov lret sub call lcall push daa daa add jl dec sbb sub loop (bad) stos gs je les movzbl (bad) lret leave (bad) incb fbstp or inc pop rep and sti add test add scas popf push das jecxz adc add xor popa movb movsl adc imul xchg xlat gs das into mov mov and rorl add add pop pop jnp sub inc or mov data16 into dec add lret adc sub aaa nop adc mov call imul insl cmp test in dec into test test sbb imul sbb sti lds xchg mov sarl clc push rclb push xor and jge dec ss hlt jae sub xchg lds mov sbb lret repz inc out mov cmp mov sarb cmpsb lea ret rorl aas mov insl aas mov fldenv or sbb pushf js mov mov and sub repz mov sbb inc sub push daa ljmp aad rcrb push les neg pop insl lret (bad) into dec and pop je test or adc mov and dec cmp cmpsl outsb cmpl pop adc jmp sti mov movb sub repnz inc mov mov cmp xchg mov enter or and ret jge pop push or lret dec shlb ds (bad) inc or dec jmp push pushf fstl mov stc mov enter imul mov push lret (bad) das fldl mov add cmp sti out fstps push sbb bound inc add inc int fild or lock add bound dec cmp shll cli jmp xor (bad) xor (bad) call mov repnz pop jbe adc add mov popf int3 jg lcallw (bad) in pop mov mov insb dec out sahf in xchg dec and xor scas push pop sti je adc mov dec mov fsts add js fwait dec push xor out mov sbb lods and pop mov jmp ljmp rclb mov pop mov outsb mov stc sub fistpll xor cli out stos inc cmc data16 mov xchg or push iret sbb pop xlat ljmp call and stc xchg insb (bad) and and or out fsubrs inc clc xchg jecxz xor in stos mov lret icebp mulb test or mov loop int3 and clc add xor sbbl in adc mov fidiv cld rcll dec mov jmp inc xchg ret mov sub push lret xor push and or jns outsl test ret pop in repz lret es jbe dec in fmull cmp xchg ja inc lahf aam addr16 mov inc inc repnz iret pop imul (bad) push push icebp lret ffreep pop mov sahf daa pop xor jae cmpsl pop call pop out cli sub ds inc mov and daa insb and in popa cmc cli xor sahf adc pushf cld add mov jns imul (bad) je mov orl out add mov ds addr16 gs (bad) sub mov push pop mov mov pop in dec mov xor and dec jmp xchg in ficom (bad) stos and or mov loopne jb jg fstpt adc pushf mov add and mov xor scas xchg in dec cmpsb pushf movsb les orl jne lock jo popf cwtl aad fist scas int3 cmpsl and jmp ljmp bnd das ror push xor (bad) outsl int3 mov mov pop sub jmp fidiv jns push aaa movsl js mov in and rorb pop sub sub add jnp and mov and cmc pop test imul jno xor ds repz clc repnz add flds jp addr16 xchg int sbb or ljmp adc das xchg pop sbb cli clc lahf gs or ffreep push out sbb ds sti popf repz mov xchg out lret or jl ljmp adc test cmpsl dec lea add mov scas (bad) lods sbb loope repz lods and sub or (bad) or push pop test mov cmp lds js outsl sub pusha and add popf (bad) or sub int3 mov xor sar or scas mov pusha mov pop fwait daa in stos call adc dec mov pop mov jg pop lret pop xchg lea xor or out pop xor sub leave and sti pop mov or cltd imul jne or rcll xlat sbb lahf push adc cmp js imul jge movsl or daa pop lcall inc loop jne outsl add neg fwait inc mov lock cs movsl cld in add rclb push stos fstpl mov into test lcall xlat mov jnp or add cmp push into and ret dec push (bad) mov je push popf cmc ds xchg lahf push pop lret jns cmp es mov repnz mov jg add add mov ja out imul stc lock inc jnp jo pop sbb and mov jne movsl inc ljmp cmp lock ljmp repz lahf dec adc addb mov mov pop mov jb adc sbb outsb cmc inc scas xor dec or (bad) in xrelease mov add sub pop xor xorb inc das or dec cmp xlat int3 das mov xchg test pop lret out sub mov adc adc (bad) mov pop and les cmpl add (bad) mov pop gs mov fsubrs dec (bad) lret stos test mov cmp sub jp xchg lcall sub test sub lret xlat cmp or sub loop roll fidivr ret stc and mull ja rsqrtps sub sub imul int3 inc pop or sahf scas add ja,pt loop jne (bad) lahf push adc push xchg (bad) adc dec or in mov daa xlat mov les mov add add xlat bnd add xor jmp jmp mov xchg loope mov pop add pusha dec (bad) mov mov lret imul and movsl lds jecxz or xor outsl cltd xor (bad) adc xchg dec call cld adc (bad) pop bound iret add xor popf negb jns and mov mov adc or mov cmp or xor loope mov jnp and das iret and adc mov daa mov mov add mov jp (bad) out lret int3 inc inc jo repnz mov mov push push cwtl stc jbe inc mov push jns inc and dec xor xor pop mov dec add (bad) mov ja push jmp lcall test push fisubr push sahf jb leave (bad) jmp bound loope outsb sub pop push dec das and repz jl lret add subl sub xor xorl mov pop stc in sub pop xchg add xor ljmp mul cltd jp xchg sahf shl mov fucomip mov sub sub jno std les cmp jo mov pop mov inc or pop lods mov das ljmp xor andps jb push cmp push mov addr16 (bad) int3 jns mov pop push or mov out inc pop and xchg out mov pushf xchg sub cmp sub testb or add les and inc sub jb mov mov repnz xchg cwtl vcvtsd2si and and mov push out xchg mov and in cmp icebp fistpl jo push or cld adc sbb fisubrl fcomps jmp mov fstl inc mov test cmp shl cltd or orb or (bad) xlat lds sub cmp xor (bad) sti add cmp stc xor stc pop xor xor pushf (bad) dec and push mov cmp rcrb xor jno push xor mov fsubrs jns cmp xor fwait push jg fdivr mov sarl decl fnstenv lods xor in fnstcw mov or testl xchg out mov push or pop movsb inc jl add or daa fwait and aad mov out js rcl adc mov call dec sub add stos clc bound jl ret mov adc mov mov add sahf mov pushl into cli stc xchg jecxz jl sub xor mov out xchg mov jo xchg jbe pop fincstp or mov outsl lret fsubs movsb aaa enter xor imulb inc cwtl cmp xor mov jmp mov push mov pop mov xchg (bad) jmp divb into (bad) loop,pn or (bad) icebp (bad) cwtl test push xor sub push fwait (bad) sub repz adc mov lock cmpsl xchg and scas call inc dec imul outsl pop mov std mov mov negl inc jg jg add inc fild xchg mov xchg add ret pop pop cli fsts add out or push lds sub mov (bad) jle and jmp push jle pop pop sub mull sbb and mov mov xor xor icebp xlat imul gs es daa xlat lcall shll or shrl icebp pop test push mov mov fwait test nop daa ds sarb lret pop repz subl and xchg inc std jnp dec cmpsl scas dec out push dec mov out cmp jmp dec cmp push dec cmpsb mov mulb daa insb sbb out push pop mov cmp ret lock addl (bad) ljmp movsb repz std inc push sbb daa in daa push fnstcw sbb jl push xor inc fiaddl jp mov test sti divb mov test pop (bad) mov (bad) push mov jg or fbstp std pop dec mov in popf jl int3 shl stc repz (bad) mov lret stos or adc sub dec and test aad hlt sub je out jecxz xchg jmp lret add pop jge inc and fs scas mov xchg cmc jbe mov sub mov mov int lods mov dec fucomp pushf pop hlt xor inc or xchg push out je js inc roll mov repnz sub dec out lret test dec (bad) or icebp or cmp cltd xchg push (bad) (bad) add pop lds daa bound stc mov ljmp fldl2t inc (bad) cmp mov mov sub bound (bad) mov roll pop push stc dec (bad) out inc test xlat clc imul fsts xor add dec out into adc mov nop outsl or (bad) pop xor cmpsl adc sub mov popf cmp mov jne push pushf mov or xchg aad lret xchg inc imul lcall mov and cld in mov mov test xchg gs das cmp jl subl jle lock pushf push sub jo cwtl aam das scas dec std mov pop (bad) push jo lahf in adc pop add sub inc mov hlt fidivrl pop or xor or daa repnz popa pop jmp lcall pop in std cmpsl mov pushf xchg pop mov imul out xchg mov jnp scas cmc push push mov pop aam into dec (bad) fnsave push and jno test lret in ret pop pop nop sbb daa call repnz loop dec xchg sti pushf xor xchg hlt adc sbbl cmpsb (bad) and hlt cs out pop adc or mov ret jns add or movsb loope out dec in fwait add xor pop pop push push divl and dec and pop fmuls pushf cld push jne xchg ja loop jae push or dec mov add sub sarl mov dec enter or cmc sub add loopne dec xor mov scas sub gs daa or gs push push (bad) pop pop sub pop or dec and jmp adcl ret fistp lock sbb sarl (bad) sub mov insb jg sub and adc in mov test leave push xor aaa es pop mov clc sbb es divl or add adc xor cmpsl xor push icebp or and arpl mov and and movl push add lea inc jle xor dec cli xchg out mov cmp cmp jo popf ror pop ja mov into cmpsb mov imul inc and jno push push mul repnz lret (bad) jno insb insb push movsl (bad) ds and leave or (bad) int3 cmpsb shrl nop xchg lods mov push xchg and push adc sub sub fidivrl das mov sbb mov xor sub (bad) mov mov pop out test imulb hlt sub push popf push xchg jno inc repz mov mov popf dec push mov ffree dec es jb sub rcrb mov lock insb xchg pop pop cltd xchg cs gs ljmp sub roll mov fidivr mov sub xchg sti sbbl and sub je ljmp push jg rcrl ret pop fucomp sbb dec scas sub (bad) lahf adc nop (bad) mov add mov das and add dec cmpsb jge mov mov dec add xor mov jnp jg mov pop xchg enter and mov js add jge outsb dec clc mov pop out pop push mov cmp mov repnz stc push jo pop insl (bad) fidivr out sub xor mov test (bad) jno xchg push sub ret xchg cmp inc adc lods pop mov jge mov lods (bad) and and xchg shrl into jb xchg stc mov ret popf or cmp xchg sbb movsl movsb mov and lods sahf adc mov dec mov cs mov in inc movsb cld pop leave lret push xchg (bad) outsb test (bad) mov lock or and fs adc mov fldenv fistpl mov lcall lcall or (bad) (bad) mov pop js mov ss fs stc dec gs xchg dec loop mov xchg adc cmp cmpsb mov push xchg iret scas lds pop and cwtl and mov (bad) pop insb dec dec repz pop mov jmp out adc dec and fist mov xchg mov hlt iret sub pop cmp fsts movsb inc push sub (bad) repz adc push scas lea (bad) cmp jbe imul and aad jnp lods dec mov pop sarl dec xor pop (bad) stos xor sarb out pop and sar hlt mov inc xor dec mov push or mov out outsl pop aas mov add inc pop cmp sub jns imull pop inc xor jb sub sub adc scas pop es jno push nop add or in mov pop push mov adc (bad) or mov div movsb lahf push repnz call sti stos movsl jne mov or fisubr popa jge addr16 in stos lret (bad) pop movsl loop fadds pushl pop (bad) xlat and sub sahf lret (bad) dec lods xchg add sti sub add sub nop aaa xchg mov or (bad) ret cmp mov push cs flds gs mov mov ffree mov cmp dec dec xor int3 push lock popf mov (bad) jp and inc cmp jg pop xchg out mov std in imul dec xor xor sbb and cmpsb xchg pop push gs daa fisttpll cmc dec cmp pop ret and fsts lret or fstps popw cmp rcrl add lea stc clc lock add xor daa sub push jg fisubl xchg loope inc int fsubrp push testl or and pop out mov mov push sub dec decl pop pop lods aaa outsl jmp pop ret repnz imul cmpsl test movsb out mov and pop popa mov fisttp arpl dec je pusha imull and add in or je,pt es leave push insb jo into adc xlat and repnz fprem dec sub sti movsb mov cmp popf push sub and pop mov jne cwtl push mov add out jecxz nop (bad) leave fistl in sub xchg dec xor xlat insb int (bad) dec pop (bad) adc loop shlb xor loope cmp sarl outsl xchg mov sub cmpsb int3 sub test (bad) out lods or fs mov daa icebp adc bound xlat push mov xchg cmpsb jb jmp jno sub pop das leave dec jae mov mov dec sbb lret adc fsubrs jmp in mov mov lods bound dec js sti xor jno das (bad) imull (bad) pop cmpsb out cmpsl xlat in cmpsb arpl mov cltd daa or sub rorb sbb add and jmp mov mov add hlt cmp bound mov adc cmp or pop mov or xor xchg ljmp inc sbb cli sub jecxz adc mov flds push mov loop dec (bad) dec neg hlt cli popf aad pop xlat ljmp jmp xor stos jne mov aaa test adc cmp add or adc fmuls and lds sub mov pushw and sub or mov popf sub lods mov xchg gs mov mov jmp jne dec mov lret cmp and jle aas test movsl (bad) ljmp and test std in scas loop mov jne (bad) addr16 push adc ret adc xor scas je clc data16 sub pop test pop (bad) xor test nop (bad) outsb stc mov icebp sub and loop adc (bad) sub (bad) or addr16 addr16 pop adc xchg cld inc add pop add push inc outsb cmp mov mov lret lods imul aaa fimul push push mov cmp xchg xchg ret (bad) push movsb dec jmp mov pusha (bad) xor and xchg icebp cmp lcall test xor mov jbe daa jne mov (bad) and mov pop push aam push add push or stos mov xchg adc addr16 pop mov adc dec pop popf pop mov xchg sti xchg rep das mov add jl sbb (bad) es mov and push or (bad) repz push mov xor scas lret add and mov jne aad inc in int leave ljmp nop fstps cmp cmp pusha mov add in or fwait lds cmp add xor call push jecxz jecxz aam daa mov (bad) or xchg pop fscale mov cmpsl mov mov jno rcrl mov fldcw incb pop fcomp (bad) clc shlb push or das xor iret sub mulb lock inc sar sub mov dec lahf lds add outsl lret cmp shrl lock fdiv dec and mov in outsb sarb lock scas and daa loop jg push lods test sub sub lods mov pop add sti xlat cmpsl sbb adc jb sub dec cli es xor push xchg inc enter push or pop or lock fisubrl test aam dec jecxz das divl (bad) stc fs je and ljmp repz clc xor rclb xorb ret test sub add rcll push test or mov or or icebp cmp aas (bad) sub inc daa iret sub push cmp push pop jle xchg mov push cmp lret xor lods shrb aad xor xor clc add rcl and jae ljmp divl enter into push out dec ficomp bound cmp in icebp dec add js dec xchg jle daa lret adc xor jns mov jnp jae iret adc lret cmp ja push mov out or js pop out fldl cmp negb aas mov outsb mov dec mov icebp mov or ret push xor jge mov ret stc inc dec cmp adc add inc in movsl ret sbb lods shlb sbb lods push dec stc repz orl rcrl test add fmuls ja popf pop lret dec push out pop clc leave add mov repnz sub leave add lds test sti cwtl fucomi hlt lret lret sub adc jns dec pop sub sub test add xor mov repnz int3 sub nop stos test adc adc add out mov incl test test (bad) jns fisubr lret inc mov mov ret adc pushf sbb lret repnz jge sub add mov pop xor mull push lret sub ljmp in lods aad cld cmp cli stc daa dec in das mov push fild push jns inc sub mov jl push or mov mov xchg sub or pop (bad) mov adcb in mov and je jmp inc or jg lock sub clc inc es xchg scas gs test ljmp push push sub mov or push shr xlat mov mov hlt (bad) enter icebp daa jae and or and ss mov mov cmp push add or cmp into pushf shrl icebp mov push adc lea xor das xor lock lahf cmp xor (bad) jbe leave mov out xchg sub (bad) in pop data16 sub call pop es in sub repnz lret or stos sub sub stc cmpsl test inc repz dec (bad) sub pop cwtl mov sbb xor jnp pop cmp add sub sub out add mov and negl data16 pop out sub adc ds shr shlb sub push sahf fidiv in pop and sub inc and iret cmc (bad) jo sub or lret imul or jge or (bad) ljmp idivb js mov xor mov cmp in addr16 dec loop shrl add xchg add mov gs addb loope lcall xor xlat out cmp or xchg das jecxz or push pop mov aad je cli sbb cld pop negb xchg aam jb nop loopne ja out arpl jecxz ja dec test test notl mov push fmuls std imul (bad) icebp out stc sub leave lds scas (bad) jb pushf cs jl ret loopne mov mov lcall clc leave aam and pop movsl jae mov mul aam sub pop xchg pop adc aaa movsl in mov mov sub je mov jno xor fwait xor pop jg scas icebp and cs ljmp mov ret inc adc insl add cli sub (bad) dec pop mov sub sub xchg enter dec mov jle in and xlat gs and in cli jne mov sbb cmp jecxz mov inc call ret mov scas je push cmpsb loop leave add outsb inc and addl call aam arpl mov (bad) or xor jb add adc das add ja insb idivb dec scas mov pop add out sub pop ficom inc dec mov lret dec es adc push fstps fstl (bad) data16 into daa xor fildl stc jle imul sub (bad) fstl dec inc mov sub inc cmp cmpsb or cld sbb adc lret xor daa add icebp or (bad) outsl sub in popa adc sub mov and out lahf inc lret dec jmp repnz mov jmp lock jns les call test dec (bad) mov sub jnp lods pop fucomip dec jnp (bad) adc fisubr xor test push pop dec dec mov pop jmp popa inc ret inc or xchg mov insb lock or out out push mov push dec and push lds dec (bad) (bad) cli push faddp rclw and je out jb jmp fsts jecxz cmp push in stos lret decl mov lret and pop jmp sub push dec lret mov fistp or add mov movb (bad) pop dec out clc out stos test cli mov pop or cwtl dec ss mov stos aam pop in rcl mov ficom cli jno (bad) int3 sar mov adc or enter iret shrb outsb mov dec mov lods sub (bad) mov rcll xor mov outsl pop fcoml sbb pop add (bad) sti loop fcmovnb pop and mov das out dec mov lret ljmp cmpsl mov cli std mov std push std pop out mov xor das shll icebp xorb adc stos cld cmpsb dec (bad) sub divl insb pop jecxz xlat jb nop mov or mov jmp pop movsl jne mov mov stc cmc dec shrl mov (bad) imul xchg call or add sub stos jbe adc adc (bad) test mov xor aad push pop cmp mov push ret pop dec xchg stos dec fisttpll or or cmc neg mov add repnz add xor mov repz mov mov out movsb adc jo sub mov mov push out or fdivr jnp sub push aad rol fsubs cs sub xor decl ja lea pop jl jae cli lods inc jl mov push push sub mov (bad) adc (bad) mov adc dec (bad) addr16 hlt or and or mov mov fnstcw dec mov inc nop in out js mov mov pop xchg dec jae ret idivl fcoml mov push (bad) fs mov das aas mov (bad) sbb xor pop xchg lret add cltd xchg mov sub pop in add test mov lcall std in das pop xchg rcrl mov loope hlt aaa push push adc jle pop testb cli lcall or aas cmpsl mov pushl fdivp jno movsl cld lods mov mov and lahf pop jno adc cmp clc (bad) scas (bad) dec inc test add mov loope movsl and loopne and dec and sbb inc in and jmp cld lcall repz or pop mov and std inc adc sar mov clc jecxz mov pop xor out lcall xor mov sti test jmp ret inc add push gs stc jmp fadd mov adc and movsb mov call adc repz mov ljmp push aas adc sub ja or xchg (bad) clc aaa daa push ja sbb and sub (bad) int3 push leave lods xor int3 dec dec lret cld inc mov and cli mov repz cmpsb out test movsb stos xor stos add mov pop pop push inc add jg scas cs ds icebp cmp mov idivl scas pop mov push das gs and (bad) mov mov popf shrb aad xor mov imul mov dec notb and pop and jecxz daa jmp sub (bad) inc add out and and iret adc dec call movsl lds adc daa jae repz dec lcall pop inc cmp xlat mov add mov ds std ss dec out jne pop in insb cmpb dec pop xorb xchg dec insl out fs mov jmp clc into dec jo xor sub out and stc sub jno sub jmp call jle or and xor pop (bad) outsl jb push call lods mov sbb (bad) xor sub imul sub and mov test and rep in xchg js dec rorl out push xchg out sub out mov hlt pushf adc jmp cmp movsl bound mov lea fmulp mov or push jmp mov jge mov push addr16 out mov pusha sub cmc sub sar pop and pop sbb lret pop in push and dec jb int3 (bad) inc mov or out push jg adc add mov mov test dec mov cld (bad) adc xor mov aam shrb loope push pop loope call mov (bad) ljmp icebp cld loop push gs mov fs push shrb lret jns fimul and aam das inc adc cmc lret cmpsl pop jecxz adc jp jl or fidivrl je pop sub popf fstps mov fstpt mov xchg dec std xor enter aad jg enter out imul test (bad) stos fldl fldl lods aad call mov mov xor mov sub shll ds and adc and sbbb (bad) loope xor lret pop (bad) sub out xchg xchg mov ret das sbb add xchg cltd test ret add popf sub les andb sub (bad) xchg mulb out sti lret mov or ret std out dec test sarb lods jb ret pop xor xor or jnp mov enter or iret mov inc nop xchg adc or loope cs jae add push inc sbb out scas notb sahf mov mov repz add cmc dec test mov mov jg jb mov pop jecxz and pushf push jle pusha and sub xchg dec xor dec jmp out xchg xor mov fildll shll and shrl ja dec inc ret jle jmp add push jnp adc mov and jmp xor adc pop stc imul popf ret pop rcll sti mov dec scas jmp push adc mov xchg add repz daa into cmp add gs sti mov dec (bad) sbb xchg fimul rep mov pop push insl mov and mov dec repnz rorl pop push dec push pop xor repnz cmp das xchg aaa xor stc mov ret dec in inc sub popa popf aam in or hlt mov mov out jp xlat cltd ret jl push gs (bad) test mov (bad) dec int enter ss (bad) push mov xor mov sub cli das fwait cmp mov pop mov fisub pop iret imul loopne push cmp mov (bad) jb fnsave loopne mov jp out mov add je iret lds pop lds lock pop or mov dec and out ja jmp xchg pop pushl xchg add sub scas dec sub arpl in sub test fdivp mov and cmp and add jmp xchg out push mov (bad) fnsave sub pop sub (bad) pop sbb jne pop rorb test decb mov mov xchg incl pop inc dec jno mov mov jg xor inc jp push int aad push xchg aad mov outsl mov sbb xor pop ds pop stc pop pop mov dec jmp push push dec sub and imul ret pop lea shrb data16 sub adc rcrl sub fs stos (bad) mov push xor pop sarl movsb dec pusha mov xlat (bad) aaa dec sub icebp jmp or inc sub mov in std movsb push sub add sub push aam xchg cmp push movsl ficomp mov dec ret adc les mov pop adc cld cmpsb daa jmp mov jno insl js xor xor xchg add jmp jmp jns scas movsb dec and mov adc add add pop je sub xor dec add fistpl inc into mov stos cmp movsl loopne (bad) cmovp xor or pop mov jmp dec fdivp inc daa out jl (bad) call addr16 (bad) mov sarl scas les xor outsl xor inc daa add cmpl and cli cld adc add add xor jp nop jne iret cmp and jb xchg test mov sbb or xor cs add jno xchg clc std fwait lret xor push sub cld js scas cwtl push out xchg mov test loope or mov pop or push clc sub xor inc adc or pop pop gs clc jp xchg sahf sbb std fisubl or pop mov mov ret outsb das nop ds daa dec out repnz insb repz lcall cmp call cmp out (bad) jae scas mov adc push pop imul pushf xor bound jbe push mov ret andb add xor fs (bad) and inc and je cmpsl hlt dec lds push test dec pop cld jg mov test inc loop lahf add jb daa cmp lcall xchg add gs aas cmpl pop pop punpckhdq in cmpsl jo xlat ficoml push pop mov add insl pop fdivrl aam sub pop stc pushf nop add pop repz and push cmp out mov sbb cmp pop cmp or clc push lahf add cld dec push mov bound (bad) leave xlat fsts dec pushl push popw inc (bad) mov mov sub pop std insb push sub mov (bad) cltd test xor mov mov lcall jnp not jae cmp ret dec or stc test bound adc inc or or mov aam inc push inc rcrl and das fdivrp es dec out stos xor cmpsb cmp ror aas fadd les mov pop mov pop xor repnz stc into cli (bad) jnp add test add sub pop and xchg out sbb xchg andb pop jl pop pop xor outsb fs jne subl mov repnz adc push sbb daa (bad) adc hlt xchg ds out cltd movsb out xor and or add push cmp imul push add mov out fs pop pusha xchg or lock out pop subb or inc or fcmovu xchg cmc adc xchg clc and fsubrs idiv jge das jecxz sub push cmpsl hlt fxch les dec enter clc icebp (bad) rcrb xor add or sub (bad) std dec xor data16 jbe or or push sub xlat add stos incb inc dec cmp mov push scas pop (bad) push adc iret cmp jge mov mov lret xchg mov lock dec insl in mov in sub mov xlat out mov pop (bad) imul stc mov adc sub sarl push adc and les sar fs clc xchg test shr or test aad mov push adc inc test (bad) rorb out gs pop in cmc (bad) cld out add out add inc pop jne imul icebp jbe dec fs pop and mov fwait jae (bad) pop dec sub cmp cld cwtl pop adc pop call arpl adc xchg das add add dec icebp jbe xor adc pop test jmp fistpll xchg movsl loop jg movsl daa push push mov jmp inc pop adc push movsl shll (bad) in and cmp ret sub test adc jecxz dec jbe mov les loop lahf push xchg mov cld or lds andl add je push shll pop or out or mov jge ror inc push mov lahf into add or or pop xor xor mov mov adc mov add imul xor dec stos and stos push mov cs mov testb pop mov movntps xor mov jno xchg lret stos mov and fwait loop sub ficom cwtl subl sub jmp xor loope mov pop ret jl mov lahf dec dec (bad) stc sub cmpsb lahf pop (bad) es pop or iret and mov adc ret xchg sbb pop cs jmp inc imul adc mov shr cmpsl cmp pop clc icebp test loope adc mov sub mov lret and mov cmpsl notb dec das les imul push jb sbb sbb mov ficoml out pop sub loop inc xor ret jns mov sbb into add popa jle mov lds mov push mov cld or dec pushf bound mov das add add inc or push push add jae fcmove pop or imul add clc xchg int cmp pop dec adc xor lds sbb push fisubrl fnstcw js pop je jmp add or daa inc fldenv loopne mov repnz mov insl or (bad) sbb nop ret dec les test leave orb mov pop and mov and call in clc (bad) rorl flds cmp jecxz mov add outsb jb dec adc cmp sub arpl sti lahf jmp add dec psubd mov sub add cmp push test popa and daa outsb cmc les (bad) mov (bad) jecxz and inc adc sub jecxz ret (bad) xor mov mov adc mov sub outsl adc idiv cmp or xchg clc pop pop stos xor aad sub pop out add dec rol or outsl sbb mov call adc add lds mov aam xchg mov fs repz test (bad) in pop xchg test mov or lahf mov cmp jne aad lods jp mov stos jbe and and jge lret pop cmp mov jl into sub and aas mov and popf sub add add inc jp sbb push fisttpl and sub sub jno sub xchg imul lcall cli je scas jno sub dec enter lods out mov push gs imul pop mov inc loop fist movsl jns imul or dec pop shl (bad) lock mov sbb pop dec addb jle mov fsubrl sbb and xor push sub sub clc das xor cmc cwtl xor lret mov ljmp test ret ja and mov sub dec clc test push adc lds sar das or das jno outsl mov aam jp jae stc movsl xchg out sbb mov mov push add (bad) fdivs add cmovle push and xor push (bad) cmc xor add shrl and xchg scas int jle mov enter cmp popf xor or ret adc leave push xchg cltd mov adc aas mov xor out mov and dec mov xchg imul xchg mov (bad) lea rcll mov (bad) or (bad) or or mov lds fsub adc or xchg sub into push repz subl cmp or dec jno cmpsl mov push pop or sti and push sbb (bad) xchg clc dec arpl sub cltd das xlat sbb xchg lock bound lods hlt mov inc repnz ret lret mov mov cltd lock sub xchg push xor push outsl fstpl pop das mov pop add lret je or mov xor js (bad) (bad) cmpsb xchg pop test repnz movsl leave sub cmp aad fwait mov decb sub aaa push imul (bad) or dec and and fdivrl movsl cmc loopne loope,pn push mov or xchg fstl test test pop dec out sti mov xchg and push push pop aas iret or mov push pop notl sbb adc mov ja xchg movsb lods push jne push jmp ja mov sub loope adc mov xor and das mov mov out cwtl pop out cwtl dec or xchg pop iret imulb aad xlat pushf push outsb sbb das movsl not daa jge xlat cmpsl ficom int and xor xor loope and rclb sub mov mov dec ret imul mov push jmp nop cs sub xor in test out or dec inc cli sub xor rolb jg loop ficompl lea cmpsb xchg fidivr bnd mov add std outsl leave xlat push bound pop hlt fwait dec pop out cmp lods xor ror cmc xor das push add clc (bad) gs xchg lds inc (bad) or or aaa adc jo out cwtl data16 mov fs cmpsl icebp sbb sub ja jp pushl sub sti sub xchg lret fsubl add mul movsl pop dec mov ret je ljmp cmp pusha leave and ds imul (bad) ret or adcb daa sub pop fsubl ret insb sbb lock daa cmp nop sub in scas std aam imul jb add arpl mov outsl lret sbb imul lret push xlat cmp into inc sub in xor lret cmc adc fwait in jnp hlt lock dec xlat mov dec push jno push (bad) (bad) in sti mov and ret pop or push out sub or mov sti push lods xlat sbb pop movsb out sbb gs mov lock mov xlat pop scas cmp popf (bad) mov jbe ret push je or pop shrd xlat push adc sbb push xchg pop adc lcall lds sti jno and cmp mov movsl or xor leave into fisub jge sbb add sub sub jo nop xchg or mov call mov and stos (bad) hlt ljmp adc sub scas int (bad) std addr16 mov decb or and dec mov dec lea inc adc int3 dec cmpsl adc dec stc scas xchg roll sti rolb jge pop adc jns inc or movsb pop pop mov (bad) xlat mov mov sub or aas dec pop mov xchg popa icebp ret xlat dec mov (bad) xor mov ljmp push bnd addr16 dec lret loop mov ret or push push and in insb dec stos into mov dec lock xchg pop (bad) lods mov scas sub push inc cwtl shlb sahf pop insl cmpsb les push jp imulb test mov bnd lcall pop int3 cmpsl jne stos and add bnd pop (bad) in notl lahf mov cld into popf xchg hlt xchg clc add add out bound in int3 mov sbb rol adc or pop mov es ffree insb mov pop mov stc add mov xchg jle (bad) jmp jno dec mov xchg xor xchg mov fistpl daa mov dec adc daa mov stc stc mov and outsl fisttpl mov mov lret (bad) lret add scas int insb adc fist in jp xchg xchg or enter notl xorl pop lds and and xor add divl repz lods jmp insl data16 sub dec jmp add mov dec mov lock test (bad) test mov (bad) in push xchg inc xchg add std or or mov sub (bad) aas or into lret out xor ret xchg lret or rol sarb repz or decl (bad) cmp pop jmp not cld or test fsubrs xor or mov xor (bad) sbb loope sub das push pop lds mov sub adc in sub int rorb cmp dec sub mov aad or and je lahf push movsb pop sbb sub (bad) leave nop pop icebp sbb ja loope icebp aam mov add mov jmp add (bad) je repz and movsb push popa sub mov out popf shrb push add testl fcomp or ds (bad) mov dec cli push jno daa jg (bad) mov xor xor and push mov sub out pop xor sub xor mov mov inc fldenv int loope out das lods aam mov (bad) sub xchg ja adc ret lret daa mov test loope (bad) pop out sub and pop mov push push (bad) lret ljmp adc adc pop or out dec fdivs jb (bad) sbb xchg (bad) outsb in sbb lret or pop pop popf aas push xor adc push int popl mov lret dec mov je and push xor add dec sub or inc mov pop fwait mov into aas idivb test lods js add mov adc pop add jmp lret test imul push jl aas cmpsl div mov xlat fistpl xchg sub push popa cmpsb mov nop add negb pop sub mov sbb in imul add dec dec scas inc mov imul dec test xor shll add sub push jnp mov mov mov mov fdivp fwait lahf dec push mov ja insb sub dec repnz int xor dec jne test stos lahf inc sbb lods test add jmp push adc mov lret add jb jno jg sub xchg add add add fcoml cmp pop gs and in push sub jl shl cmp ret lods dec xlat in adcb andb cli je out iret mov popa gs add jmp test ljmp ret test subb daa xor push aam sub pushf xor pop jnp cli loop mov ret mul fnsave inc movsl adc pop addr16 leave gs ds or (bad) pushf ret xlat adc pop popa ret xor imul jns in gs cmp ljmp push cmp cli fsubp pop dec jg cmpsb testl and (bad) mov or jmp xchg adc repnz imul mov icebp xor mov add inc out ljmp cli shrl ret test push out leave test push in ljmp in xor or mov mov push inc dec xor and bnd jg jmp icebp subb sub mov imul das repnz fdiv and popf rcll pop xor jle xchg int3 rcrb mov js (bad) and add or addb sub pop pop stc sbb lret dec in jmp push sbb sub je clc popf and add pushf imul cmp repz adc jb icebp (bad) dec sub rcrl mov cmpsb pop das call xchg test xchg dec mov mov in jbe dec loope cltd xor cmp adc in hlt xor fdivp or fbstp mov (bad) jo stc clc (bad) sub fimul pop (bad) jle dec jmp lahf pop push cmpsl mov les sarl pop out jb out adc mov test mov loop fistpll les mov add hlt gs mov xchg add or xchg dec xchg xchg and out loopne out cmp or movsl cli fstl adc add mov mov enter scas mov int dec cmp sub jmp mov lahf xor lods js cmp jno fs aaa xchg inc push mov xchg test flds add fildll (bad) (bad) mov adc (bad) into fsubl in in rcll movsb sti xchg inc adc sub call push mov scas popf (bad) push cmp mov fist lods mov sub mov jo rorl or xor push inc xchg ss push popf bound jns dec pop sub (bad) cld push xor sub das andb out sub mov pop xor mov sub ds adc inc leave push jle out pop mov mov mov nop mov lret (bad) and repz add mov push sarl xor leave sub out cmpsl adc nop lds ret mov jb lahf rcrl pop cmp test (bad) mov push cld leave push sub clc mov lret les push out mov adc mov jg mov push out lret fistpll (bad) or cmp jge xchg cmpsl jge and mov and mov pushw lods dec pop sti cltd push out jne adc call mov push inc cmp lret xchg cmp rolb sub mov mov pop scas (bad) sub and (bad) mov and mov orl dec mov cmp mov repnz test sbb sub jmp dec cld or lea sub mov into push inc sarb pop aas pushf push mov scas adc jecxz test sbb xchg jb push imul cs imul fistpll imul mov push stc jno shl insb jbe fidiv sub test or xor lods enter xchg les (bad) adc sarb das mov jmp xor push imul js (bad) mov sub jno out jge shrl out das push cwtl jmp or adc push mov cmp mov repnz std out mov inc xor jge (bad) mov ljmp sarl jl add cmp mov ja (bad) hlt cvtps2pd stc sbb fisttpll jmp and adc mov add xchg mov mov jecxz push sub jns mov sbb decl sti mov fldcw jg add jns xchg xlat in in push pop push add hlt pop shlb stc cmc and mov into sbbl out jmp sub shr lahf stc dec xchg fnstenv xchg inc popf (bad) mov adc dec pop sub in or into ljmp jg in scas mov add mov mov ret leave lock ret into lret fidiv loope pop pop fwait push add lret jne repnz popf or lret cmp ja adc aaa scas stc leave insb lret and pushl out int outsb mov mov adc adc out sub mov fdivrl xlat fpatan fs popf dec cs add mov adc insl and cs mov pop mov movsb add cld lock and lods and lret test mov mov and stc scas mov sub dec mov (bad) jb (bad) fbld movsb scas lds (bad) stc pusha push dec aam xchg (bad) mov inc gs ret mov adc ja and jmp mov sub outsb or shl in ljmp hlt mov test jbe push flds xchg sub dec aaa ret mov bnd scas add aaa mov call shrl push or add in ss es xchg dec ljmp cs or jno inc xchg jo sbb cmc pop pop insb adc out (bad) lret mov or (bad) mov and sti in out in xor lret bound loope jmp jo aaa or cs push inc jle inc adc and ljmp out adc out mov add sub xor mov clc fcomps pop ljmp dec out ljmp mov dec xor jmp or mov scas cmp decb xchg aaa jne cli lret sti pusha pop mov pusha mov ret sub jne mov xor outsb pop pop aas scas sub jmp stos aam sarb push data16 je xchg out imul and fdivl and sbb sub cs xchg dec xlat popf fsts jno roll mov (bad) icebp jmp xchg mov push out stc fcmove js mov or cmpsb lcall adc (bad) sbb out jne gs sti cmpl cmc orb or jb das push push shlb lea xor cmp add mov pop sbb sti pop rcrb add xor (bad) xor jo push pop mov sbb mov into sti (bad) jle push push mov sti mov push push insl push (bad) sti popf sbb repz add push mov add add lds divl or push addb test fistp mov ds add (bad) (bad) adc negl or adc cwtl fist loope xor in cmc add xchg add add and xchg call mov pop shr add sub pop imul or mov aad xor pop mov xchg or push pop out rol ljmp lahf ret sbb cmc dec repnz or mov es add xchg xlat push js inc mov je jns and mov pop push (bad) out fldcw jp xchg pop in mov xchg mov jmp ljmp sbb add fstps jmp adc pop push mov mov mov add clc pop push out jmp mov jge jg movsl or or ja out adc push ffreep mov xor mov mov pop push inc out test mov cltd ljmp xor sbb out add xor push or dec cli xor jl push xchg xor call ret lock jmp adc divb fmuls fwait (bad) adc or (bad) repz mov cmp movsl daa jmp gs xor data16 lock daa mov ret and imul pop dec push xor lret mov push scas jno sub jno lods (bad) int3 (bad) pop (bad) mov das or mov sbb out add adc je sub sbb push data16 mov mov add adc (bad) fs lret mov mull and std xor pop fs sti adc mov push or dec je gs add je mov mov xchg adc mov cmp adc fist mov bound push loop dec mov lret out fdivrl cmp cmp sbb notl leave cmc mov ljmp xlat sti cltd test (bad) fdivs ret xchg jmp dec je shlb (bad) pusha mov jmp inc in xchg lds mov int3 sti repnz xchg mov adc dec stc test pop sub mov stos mov inc xchg inc stos out or pop fimul jmp in das jge dec push (bad) mov pushf int3 adc leave out xor mov ret ljmp movsl fbld inc or adc lcall mov fs scas test leave enter testb pop imul and jno dec cmp lret insb jl into inc loopne pop scas mov ret xor loop push idivl jne jge xchg cmpsl js and mov pop (bad) jmp mov stc pop leave pop pop mov xor and sub jnp int adc mov push xchg push mov mov inc (bad) add stos or fidiv push (bad) dec push dec and cmp ret or pop sbb mov imul or fldenv (bad) jb daa dec lret (bad) daa add (bad) jae or je add (bad) (bad) pushf shlb ljmp mov fsubrs (bad) lods pop and mov xchg shrb xorl dec iret add adc jle pop loop orl dec or and sub xchg dec jge movsb mov and stc fsubrl out call sti sub lods (bad) das sarl mov bound xorl push roll es push adc xchg stos xlat jno fs lret mov jns mov pop xor sub mov xchg xchg inc mov lods jle sti (bad) out fnop adc rcll rcrl repz ljmp or idiv pushf daa pop and cmp (bad) pusha fucomip pop mov push out xchg mov call push mov mov or sub (bad) xor movb movsl push lock dec mov add fnstenv mov call idivl jp fidivl pop call xor mov std push aad lret jmp gs xchg xchg mov sar add xchg cld pop iret (bad) (bad) and push mov popf aam loop and out xchg icebp dec push xchg xchg inc xchg addr16 andl ds xchg xor xor (bad) (bad) cmpsb dec dec stos mov lahf pop mov gs adc mov push sahf rcrb aam sti dec ljmp mov cmp out push shrb xor sub sub adc ret repz dec inc cmp mov aam push outsl mov test fs xchg mov push icebp jecxz jp mov (bad) mov icebp aam or mov xor outsl sub or lret and in je dec pushf subb mov (bad) popa cmp (bad) nop fcmovnb sub lds mov sub daa (bad) pop or int3 not data16 es (bad) hlt gs loop fnsave mov jmp stos mov mov push retw push and inc add movsb (bad) leave loopne mov lret (bad) dec ficompl cmp cs fwait mov pop (bad) jnp pop cld sbb inc sub sbb lret and mov dec cmp push lcall xchg cmp dec fidivrl es push out cli mov dec int3 or xchg cltd imul fildll sub mov hlt into leave push shrl xor negl mov jne push or jno sub repz sarb dec and movsb adc or adc xor or stos gs pop js out movsl cli jmp ljmp test and mov call add push (bad) in mov lea out popf (bad) jnp test mov jno dec mov xor pop js shll leave jge or xor sub xchg xlat out (bad) sub inc mov lock mov out outsl adc pop out inc pop xchg pop adc ror daa aaa xlat data16 xor ljmp mov out mov add cmp or push ficoml xor mov jle nop sub ret loope ja outsb push dec add pushf mov bound xor pop xor icebp mov (bad) cmp stc orb aad imul mov test ret outsl loop xchg mov idiv loopne xor sub inc dec push pop xor mov gs xchg out popa pop add dec cmp imul push nop adc test loope add fbld out out or sbb inc or fidiv xchg pop cltd into aas lea pop xchg lods and fsts in sbb or add (bad) ljmp sub mov dec mov movsl into aad je jp adc (bad) lock sub adc leave push icebp imul aas daa mov adc mov mov mov add rorl clc lea clc jmp (bad) xchg xlat jge and push mov jg and incb out mov pop cmp xor (bad) mov xlat in cmpsl or and pop mov lret xor in mov jle inc and jge xchg sbb inc cmpsl jmp xlat push pop jb jo xchg insb fsubl sbb shl insl sahf popa stos js mov jmp adc xchg jnp ds negb (bad) fildl mov or push repz add aad xchg xchg out mov shl or outsb mov adc mov test outsb mov mov or cltd addb out lds pop cli xor sbb into mov add sarb sub push add cmpsb movsb adc shrl popa repz jb mov outsb sub aam stos negb cmpsb cs dec rcrl xor test sub out adcl adc xor test sub loope mov pop cmpsb push sub ret mov ret jno fs mov dec test sub imul jmp jb jecxz and cmpsl dec jle cmpsl push lds push mov mov pop (bad) mov adc jle sub into mov xchg in cli dec jmp faddl ret mulb ljmp mov les adc xor insb addl js ficoml repnz popf stc aaa imul imulb jg jl fnop repnz lds loope pop lret lods loope sub mov adc mov sub je scas lds jecxz shll push pop mov and xlat insb xorl stc jp add jne (bad) xchg fstl cwtl mov xor and das popf or repnz adc (bad) mov mov (bad) leave pop icebp roll ret cmp sub mov and movl cld jb into push xor fs scas mov nop jecxz mov xor sub or lods loope adc daa xor push mov loope sbb dec into scas popl pop cmpsb imul (bad) cli adc mov (bad) dec mov movsb (bad) insb mov xchg ss xchg in pop imul scas fistpll add hlt lods loop push push aam js mov bound out push add mov stos and ljmp xchg xor add nop lcall insb xlat (bad) adc bound inc add or mov outsb cld mov cli repnz aas call mov in in iret pop sbbl lods scas mov xor mov lahf movsb mov (bad) aam xor jle sbb inc push and xchg push and cmc int3 jl cwtl jle pop mov push add mov mov cmpsl sub cmpsb inc and inc push imul adc dec cli mov or mov and mov pushl pop mov iret jmp xor xor jno dec fucomip cmp imul (bad) idiv cmp mov xchg jae xchg or icebp jp into sbb dec dec stos xchg lea sbb mov cs mov dec mov jnp sub call sub (bad) mov mov mov mov call test inc sti xchg (bad) dec jns (bad) cltd inc cmp aas ret or and push lahf jnp adc sub mov mov dec sbb mov mov clc cmp call fs adc pushf out pop icebp mov fmull lea xor pop ljmp in fwait pusha dec out or sub fldcw xchg fldpi addr16 (bad) ljmp int and mov sbb or test adc iret dec ljmp cli mov bound or mov and dec inc lock mov or add icebp and sarl pushf test sub cli aad sub mov cs int adc mov ljmp push adc jle lret jge scas and xor mov add (bad) or ljmp (bad) jns sub cmc stc ret jnp jl cmpsl (bad) push pushf ret aad dec imul inc jl ljmp push idiv int3 test xchg jb (bad) out loop aad mov xor (bad) and adc rcrl cmp out mov das add fldcw push inc mov cs loope add xchg mov push jge mov ds xor in sbb sub jmp sbb mov jne jl leave cmp ret add xchg ss cmp (bad) xor leave and lcall sub pop xchg movsl shlb iret call ja adcl lcall dec out incb icebp aas rclb jle lahf (bad) lock mov xchg mov add add xchg push ret inc jnp push daa clc push jle push jo loope pop popf sti mov and xor sti aam (bad) (bad) out cwtl iret out jae xchg mov movsb stos adc sbb fdivl jnp idiv mov call mov imul (bad) adc imul leave sub jp (bad) shr aad outsl dec in pop xor gs out cmpsb inc add adc lret ret pushf imul (bad) cmp into mov xor mov not xchg pop sbb mov lds (bad) ljmp or rorb sbb inc mov (bad) stc repz xchg jp adc mov stos lea call ret mul jmp adc inc out and jne xor xchg movsl scas repz sbb and and pop mov pop mov outsb xor add pusha in mov push push or fdivs cs sub imul popf jne ret (bad) and cmp das jmp jbe das sbb pop and and imul jo add shlb sub xchg test sub jl jmp lods test and aam out ja fs lock call lret nop ljmp daa sub xchg mov dec iret decl mov out jecxz daa ret xchg ret sbb or jmp mov ljmp aam std cmp xor add xor lret push sbb xor inc and js or lret (bad) fstps pop (bad) jbe xor das dec add in sub cmpsl jge (bad) or xor fstl push ljmp lea idivb out fcomp sub dec stos aas cmp call cli int popa or les (bad) push mov pop nop sub jmp inc dec imul das pop fldcw out sub mov sub adc jecxz ret inc jns dec or jbe or (bad) jne dec dec repz pop pop add push scas add lret mov mov mov addr16 jge xchg pop push cmp and les or sti mov jo call mov xchg repz mov mov xchg mov andl jbe jmp sbb and and push xor xor push mov fmul xor jne push cmpsl lcall (bad) movsl out ljmp adc (bad) std xchg dec dec dec mov pop mov pop or inc dec sub inc nop repz sti or and xor and (bad) fnstsw aas cld (bad) fist sub lret addb sub add mov inc mov mov pop mov ficom popf xchg xchg fimull sub mov bound or push out popa add (bad) mov or mov push (bad) daa mov je cltd imul in jecxz mov sub out dec add sub data16 in das in cmp xor mov div jle push int3 lahf dec and cld pop in outsl jecxz rclb repnz xlat cmp cmp mov call cmp test call jnp in mov pop scas sub jmp xchg ss and and loop sub dec and mov and push pop or mov mov lret lcall pop and mov fs fisubl inc sti nop and dec adc push out push mov or jmp adc cli jg and ret cli std sbb popf push xor pop mov mov daa std xchg fstl repnz repnz dec mov daa leave jno gs push fcoml cmp (bad) sub sub adc pop and push pop lods shl jp in in push (bad) call push sbb jo fwait cmpsb mov jg mov bound xchg jmp loope outsl lods ss mov jae subl cmp shl jg xchg mov fistp push add into sub icebp dec out (bad) into mov int3 push or mov repnz sub xchg (bad) popf shr adc clc jne mov stc and add jecxz lret jne xchg insb jbe test inc mov mov jmp es negl adc cmpsb incl mov lcall dec and loop pop push or clc hlt imul lret xchg repz sbb dec loopne dec sub mov push repz pop add adc xor mov mov lret xor inc lock ljmp jne mov in adc stc mov (bad) icebp and ss mov pop sub js test and push xor cld enter into dec test inc jnp jge,pn dec and dec sti bound jne xor bound pop cmpsb mov mov cmp pop (bad) push (bad) xor fcoms pop lock outsb ret (bad) addr16 lret das xor add or mov sub mov sub xor sti sub outsb add push inc add dec mov pop and push rorw pop xchg notl fstl push sbbb or out repnz (bad) sub loope pop lahf push sub (bad) js imul jg sbb lret adc into fdivs cmp mov jp mov cwtl dec out mov test in movsb pop pop rorb xchg stc out jp jo mov sti lret sti data16 xchg idivl pushf dec push sbbb out and pushf mov mov stos cmp call dec dec stos js jno imul idiv inc xchg mov out mov or scas mov dec and bound push adc mov mov mov in shlb dec (bad) clc jns stc cmp aaa ret shlb jl out push push repz pop adc out lods adcl mov add enter dec jmp jnp leave clc adc cld mov cld and sbb jb mov and (bad) mull ljmp movzbl insb loope aad adc add cmc mov ficomp push scas sub fwait push lods adc sub into push addr16 iret std je cmp testb xor or and sub mov cmp into mov pushf dec pop (bad) xor add ror sub sub mov inc sub mov and adc shl lret mov icebp jno sub sbb push shl cltd dec leave out call test addb push adc sub push cmp push clc lahf adc mov push js xchg inc push xchg icebp (bad) cmp fldenv repnz scas jns test repnz lret or sbb mov inc sbb notl dec insl stc outsl lret mov jl sbb das xchg ja js dec ret rclb out push xchg and or repnz jg scas mov or mov dec lcall pop iret xor xor icebp bound out aas jb push enter or clc xchg int3 or scas sub push leave ljmp dec pop pop sahf in mov push and popf sti (bad) in pop shr mov xchg aas lret or mov inc push pop or pop je ljmp into cmpsl add and and cmpsb pop rclb ljmp aaa out mov pop insb outsb movsb mov fsubs mov mov cld push movsb mov inc mov fs mov imul xchg xlat xor or (bad) push (bad) bound jge sbb add lock cli ret (bad) fldcw psrlw jmp push out inc fimull dec or jecxz in and push jl adc popl inc movzwl out mov push inc push pop int3 pop xlat sti cmc cli lret test push clc test mov jnp cli pop je adc dec sub sub and push lcall cld sbb or sub das fsts sti mov inc dec (bad) lret ffreep sbb mov push gs jecxz xchg mov mov sti sub xor xchg or or or nop or xlat adc cs and pop mov dec inc jmp lea mov outsb ss daa call out mov test and popa xor aas mov push adc fistpll cmpsl les xor dec sbb sub adc in cwtl in push or adc jo lahf hlt scas lret pop lcall mov out out add xlat mov push and mov mov loope add out dec test jb sbb movsl or xor nop cmp (bad) sbb pop test idivl ss es push inc mov daa divl call call test (bad) repz nop (bad) mov and jle (bad) out jmp in movsl jmp into int3 cltd ror push mov push mov dec mov das (bad) jno dec pop cmpsl adc mov ret mov adc mov cltd push sub and call cmp cmp in sbb dec iret loop nop aam lea sbb and lcall dec dec out in pop ja push adc xor fdivrs jmp sbb fildll stos jo or iret nop and inc jge icebp es scas jl psraw xor loope pop sub dec lahf inc arpl mov bound push mov das shl cmp std mov lret sub (bad) or sahf push sbb test xor popa inc (bad) and test fldcw neg inc (bad) mov popf jmp mov pop mov mov sub pop fwait mov push ss int3 mov lret or inc inc mov sub pusha sub aaa xchg pop pop lods enter roll cwtl insb ret xchg andl js pop out mov and pop jns xchg and (bad) icebp mov sub or add mov dec in lcall jmp sti dec call ret push xchg pop jmp jnp fdivs fprem dec sarl sub sub mov sub or lods test ret aad out inc jmp ja cmp adc jle es fistl mov dec mov (bad) xor je sbb loope mov scas iret cmovg call mov dec enter jnp push enter adc popf mov es sub daa idivl (bad) jo mov ret push xor lds in adc loope jge fistpl mov mov (bad) fmul push dec fdivl and int3 push mov (bad) xchg das pop in bound ret out cli or rcrl xchg push into clc outsb aam adc div mov (bad) mov repz movsb into fs mov bound mov std roll and xor mov int3 push rorb cmpsl dec stos jns jl sub adc fcomps negl mov outsb into pop cs xor pop sub clc push outsl jl and (bad) dec and cltd pop sub mov stos or (bad) nop adc in ficompl cli mov mov ss fsubl icebp pop push cli xlat enter xor mov pushf repnz ret cwtl lahf and mov sub push imul or int3 lret loop stc out rorb adc popf test (bad) (bad) fcoml xlat sahf lret lods imul sub mov dec lret clc mov mov jne pop mov mov notl or int3 push add sub out mov (bad) addr16 movsl daa inc or repz xor loopne xchg inc jae mov mov inc in out adc xchg xchg into mov push loop (bad) mov das movsbl ret movsl xor jl mov and pop dec dec dec in mov inc stos je loope push sub lret pushf pop divl imul jne jns and cmp or out mov and xchg in sub lret sub aam sub popa xor mov pop xchg stos lahf push dec push jmp sbb (bad) sub pop sub lret dec or insb bound divb (bad) repz stc jns sbb mov pop stos lods dec push add repz pop mov adc arpl push popf inc in add and fldenv or xor pop inc xor stos lret ss sbb mov jmp pop xor jmp xchg and sbbl add or call adc mov xchg popa fstl and sti pushf dec and xor xor into rolb adc rclb sub or mov cmp movsb pop mov dec fmull mov jmp xor jns cmpsb cmpsl and xchg push fwait in fs out cmp ljmp call loop xor popf sub pop xor cmc gs and (bad) xor add dec pusha xchg clc push mov cmc xchg xor xor sub mov notl push push add in fwait pop push ret daa (bad) push cmp sbb push mov sbb cmp mov jecxz cmp push or (bad) cmp outsb in add sub push mov dec mov jg repnz sub stc inc mov pop fs data16 cmp test imul data16 xor push sti sub cmp (bad) xor stos sahf adc push pop push push pop pop fsubrs pusha out mov xor adc out jbe daa add pop shll (bad) imull repz xchg mov add xchg (bad) divb push fs xor cmp mov jbe idivb cmp out xor ds cmc scas cmp xor cmp mov std adcb (bad) into leave inc cltd int3 push cmp adc shrl iret sub mov inc mov xorb sarb dec out xchg aad cltd sub xor xor lahf xor mov push (bad) scas mov push lahf fcoml lret xor out popa mov cltd aam or dec mov stos dec xlat dec das loopne loope icebp into sub sub xlat mov push out jne test pop call fadds pop das jmp imul popf cmc mov jbe (bad) dec ret pop pop rorb sbb clc push addr16 sub ret aam das bound popa jmp mov xchg mov clc mov sarl jb out (bad) daa push mov cwtl or mov out mov aaa xchg xor sbb stc mov (bad) sarb pop adc xor hlt js hlt and jmp ljmp xor push sub and (bad) scas mov jbe push pusha dec sub rorl cs ret mov push dec das jle test add mov pop punpcklbw ss (bad) repnz mov dec add sub imul and lret sbb push movsb pop xlat xor and test shr push in mov fstps cmp scas dec jl pop jge sti cmpsl (bad) icebp mov push and adc sar dec popf push icebp leave imul xor ret xor popf push or sar roll sub sub cmp and add mov inc out pop jmp movsb fcoml or or fisub inc out mov aam xor aam rcll jle ret mov mov pop cmp adc push sahf xor movsl cmp adc loopne add stos lret inc add inc sub cmpsb lds out aam pop add sti (bad) bound ljmp divl aas lret (bad) jle pop add mov jecxz lret icebp xor mov push shrl sub test roll cmp pop sub cmp lods loope scas jbe ljmp jl mov jg mov fsubl jns and mov or das fist pusha dec jmp es mull xchg fs out fs cld sbb jbe out adc ja mov lock outsb xor bound cwtl fcoml jmp and jmp shll inc test mov imul ffree mov fcmovbe push fisub or sub sub mov xchg cmp mov insl data16 xor add mov and lahf rcll pop ret sbb mov in pop mov mov dec xor int sub and stc arpl cs xchg xor lock or stos les xchg mov negl mov (bad) mov rcl (bad) movzbl pop enter repz xor (bad) pop inc lret repnz adc jno mov addr16 in out mov xchg cmpsb xor xor fdivs lock or imull mov push in mov push sti je mov pop out cmp ret scas mov cli lds mov mov pop dec (bad) add jl iret jmp inc lods lahf jns sub fistp gs push repnz out add icebp sub ja ret test inc (bad) stc push pop inc pop out cli sub xchg cs mov mov push (bad) mov movb mov hlt or pusha jmp bound inc push repnz mov mov rcrb or adc sub imul jle push pop cmp aad cvtps2pi stos bound xlat negl pop adc aam cwtl pop xor sbb in clc cld mov aaa addr16 mov fisub (bad) mov in jbe es out sub rorl mov nop xchg jg hlt mov cmc gs add pushl cwtl xchg xor sub adc mov sub inc pop mov shlb mov inc (bad) imul cs and mov leave and fsubp mov loop xchg adc mov jecxz aam cmp mov xchg sub jne xchg dec or xlat int3 add pop (bad) (bad) xchg mov dec jg (bad) xor mov clc and aad add sbb xchg jge movsl xchg int testb (bad) sub xchg popa call xchg leave loope sbb imul mov jne push sub outsl std jno cld pop repnz and ja sub push xlat fistpl lahf pop push mov cltd bound pop mov (bad) or cmp mov dec test rclb pop stos push aas repnz xchg (bad) push push dec sub mov push fbld sub push xor (bad) daa mov insb mov popa jbe imul (bad) xor fs ljmp and push adc and out (bad) cld adc mov popf mov sarl push stos int cmp pusha ljmp push mov adc pop mov es stc daa pop add jg xor out flds outsl leave cmp cmpsl insb ds fmull jbe lods and xor fisttpll popf std inc dec lods push add sub xor fs cs cmc dec fadds out mov cmp push fidivl imul xor (bad) popf jg or add (bad) mov and sti repz and iret pop jg sub pop pop jmp add js cmp aas cs stos or add jo dec idivl adc add pushl and ljmp xchg ljmp mov ljmp xchg ljmp mov push adc sarb loop push mov call xor imul ret push push xchg mov (bad) adc (bad) sti repz daa mov cli pop cltd cmp mov add shll out lds lds cld jecxz loope jp fldcw mov movsl mov xchg jp scas jp (bad) mov mov fldcw (bad) lock mov dec pop adc loope shrb sub push mov inc and sub rorb mov xchg stos repz into or add pop mov dec fldl2e cmp insl jbe push inc xchg lahf stc fwait lret xor jecxz test adc call movsl mov sub lea push movsl aam add mov mov lahf rep cmp pop mov mov lret sbb icebp fmulp in repz or enter lret das or ret mov subb add mov int3 jle sub pop add sub ds ret test out or or cmp popf or add push (bad) in xlat in cmpsl push frstor daa fnop xchg into cmpsl pop dec std mov scas mov pop clc sub lret pop repnz cmp xchg adc mov push add fistp test notl test lea popf clc xchg pop clc cli sbb and xchg aam movsb dec lods xchg push ret sub add mov leave jg jbe jle (bad) jmp jo into das aad fs daa cmc xchg jecxz add mov adc adc pop or dec iret sub cmpsb mov dec stos popf jge jle mov repz push (bad) leave add push or mov das out das mov stos mov out sub repnz cvtps2pd cmc xlat jecxz and je imul rcrl inc outsb and cs or xchg (bad) fbstp popf add cmpsl std dec cmpsb inc push add and sbb sahf push lock jmp pop xor pusha dec clc sub push xor mov imul fsubrs ficompl fsubrs icebp add fmuls add fcmovnu (bad) sti adc pop outsl jno push and das mov mov xlat das mov push push js xchg and sti sub test lds mov push mov sub xchg pop out push es dec popa shrb loopne and push sbb sub xor xor dec mov jmp dec fcom stos xor sbb lahf adc daa or cwtl cltd add js mov repnz and push mov or sbb mov add jg push xchg daa pop fdiv sub mov jle pop dec out flds fmuls in dec test cmp and clc push fwait jle (bad) gs xchg mov icebp loop jns,pt inc push aad mov pop pop sarb or sub dec mov cltd push sub mov popa (bad) jmp test or fstl pop jmp mov add adc enter xor incl or xchg xchg push cs ret dec enter mov ret inc push or les add (bad) pop imul pop mov push sub xchg bound xor idivl popf pop add sub cmp ret iret push int3 ficom repz inc add push hlt (bad) out imul decl mov leave icebp mov xor or iret pop in xchg imull shrw pushf jmp jb dec iret gs (bad) cltd add aad sub jmp cld dec aaa dec mov test daa ja xchg push addr16 scas mov fdivrl stos mov and mov xor mov ret mov js cmp mov sub (bad) sub mov ret mov pop lret mov stos bound (bad) fisub add out or (bad) or in add jmp jae pop into out xor leave push xor or dec push sbb pop mov mov clc and mov and xchg cld stc push dec cwtl jo lret lahf fwait add lret mov idivl hlt (bad) push je imul xchg loope xor mov xchg sti cmpsl call pop push jle pusha and or push pushf int3 ficoml arpl push out insl xor jbe or sub cli mov (bad) push lods movsl jg add cmp popf mov mov pop outsl ss or inc and inc push cmpsl mov stos sub push sub shrl fmulp xchg (bad) adc sti mov inc mov stc mov pop fist xor or or mov repnz xor add xor int3 mov pop mov pop xor clc imul fimull rcrl and bnd mov imul sub adc dec lods mov sub mov jmp fs addb jl cmc inc and jnp sub dec mov int3 (bad) lret lcall clc (bad) jo lods push rorb fnsave mov in mov push sub lods (bad) xchg and cld aaa adc call mov fadds sub cmpsl jns mov sbb add jae or movsl push mov movl and fcomp aad iret shrl and lods lcall mov jne fs clc push mov xlat and cmp mov pop addl push std into imul movsb repnz jbe aaa xchg lret notl and scas repz jae add (bad) add das repz ds div xor sbb push and (bad) sub inc adc add sub cmp ret or sti and repnz aas xchg decb les adc loopne xchg push addr16 out mov jns data16 xchg or rol lret sbb jne jbe fnstcw sbb inc outsb push xor sti test pop repz mov xchg and xchg xor repnz (bad) cltd out movsl dec push inc inc or fcmovne or ja incl mov add out bound pop xchg pop or xor mov movb dec xor mov (bad) outsb subb popf push xor negb cltd ds mov (bad) pop sahf ficomp lods push xchg repnz dec dec imul add xor mov cld sbb icebp fdivs idivb dec push or loope dec jmp rcll leave test in cs dec xchg ds lods or jp mov rcll enter and cwtl xor mov push fs fcomp add and mov or hlt dec iret or outsb pusha inc adc enter cmp inc in repz lods sbb jmp dec sub and insb mov cmp (bad) ss ds mov (bad) add mov pop icebp xor sti push fstps shr mov fdivrs mov fidiv sub addl ss mov sub jecxz out mov repz hlt cmp dec sub mov js dec jno jmp icebp (bad) sub clc sbb xchg (bad) lret les dec add rclb icebp pop jmp ret cli or repnz sarl adc mov and in nop inc movl push jo xchg cmp pop sub pop gs pop mov das pop cmpsl mov xchg add icebp hlt inc shl addr16 and arpl xchg mov add outsb or sub lods xor ss dec pop dec mov push xlat mov mul mov lret jecxz negb mov cmc or sub pop mov mov in shlb (bad) aas das mov inc or in stos mov mov cmp jp les mov mov lret pop adcl jmp imulb ds dec mov jg mov addr16 shrb rcrl cli bound je dec mov cld (bad) adc (bad) dec sar mov sbb mov add pop dec (bad) roll push xor stos dec out bound or jge aam pop int3 jmp (bad) cmp xor push and mov or je bound not and or into (bad) dec ret or and mov mov (bad) pop stos sub roll mov jg mov in (bad) mov dec jle dec dec jne jmp mov das negl lcall inc lcall and inc mov bound xor jne push jp mov jo (bad) popf pushf jo inc mov mov dec incl js es in pop jge out and loope mov daa mov divl scas cmp pop mov jae insb xchg cmp add xchg mov rcr dec scas cwtl and push sti imul inc (bad) cld stos cmpsb inc dec add push daa xor inc pop lahf pop jne add stc enter sbb ficom mov push in cmp rcrb (bad) (bad) out sub (bad) pop fwait movsl pop (bad) out adc mov (bad) stos mov push xor mov das mov xchg pop (bad) or mov and xor incb pop iret sti xor and or clc push push adc fcoms insl daa and lcall fist sub add jp mov test mov sub mov lcall pusha push sar icebp nop pop push or loop,pn xorb push lock mov cltd dec sarb xchg mov mov pushf insl inc add and xchg or out sub add add cwtl cs outsb (bad) jmp and daa mov std sbb (bad) push call (bad) mov icebp xor ret jnp cmpsl fnstenv fs mov mov mov fs aaa icebp ljmp sbbl or fsts (bad) imul adc mov mov ss add pop push gs pop outsl push les jecxz adc call sbb jmp sub ret loop lret stc ljmp xchg loopne push xor inc out xor xchg arpl popa fsubl or clc xor dec enter or jmp mov jp xchg pop test lahf adc dec adc or imul push jmp inc test das into popf xchg mov sub mov mov add jmp xor test jne fs sbb cmp test ljmp in test out leave adc pop icebp add xchg sub inc xor mov pop fistp inc adc cmp scas cwtl rcll jge pop js rclb push mov sbb pop out adc lds (bad) scas popf adc mov pop mov pop dec mov xchg and push push mov push or cli int scas xor movsl mov and jl imul inc nop in dec and add dec and sub jno jp dec imull jle jo pop push les les pop mov out loop mov jg sub data16 test into mov lea outsb rcrl fstpt and xchg sbb aad push mov pop lods push jmp pop xchg mov inc push cmc xor loop mov xlat in xchg fiadd or add xor mov xor and insb and xchg (bad) mov xor test idivb jl dec or fdivrs xor push or pop das cld cmpsb ljmp dec ds adc pop (bad) jb (bad) dec xor jmp and das cmc bound bound (bad) addb leave sub test mov sub xor stc mov out gs mov jmp mov fs cli mov add dec out cli mov dec mov and mov (bad) fdivs inc shrb mov sbb adc addl test lods mov xchg xchg mov stos xlat fldcw imul std (bad) das mov sarb adc (bad) xchg aad and into movsb outsb sti inc aaa mov sub mov in movsl ja scas add push or (bad) sbb sub aad jae sub cwtl cltd and roll push xchg mov sub fst movsl subl mov sub push and mov idivb inc push xchg out adc sti std call inc push and test mov roll cmc cmp xor cmpsb daa and int3 xor jb pop into pop add sarb mov ss add sub data16 dec or sbb out xchg xor movzbl sbb negl lahf xor pop stc sahf sbb imul dec test mov xchg jae jmp jg cs add sub call adc pusha pop out xor jmp adc jb or (bad) out dec ds mull sub push mov (bad) xchg mov (bad) (bad) (bad) iret out mov sahf mov push add lahf jbe push mov xor jecxz cmp test mov add imul jle mov jns xor inc stos push pop mov dec ljmp ret fidivl out adc mov and cmp cwtl adc (bad) sub xor shlb stc push and lret and mov nop shlb jmp xchg out dec popa das (bad) jns gs rorb cwtl int dec (bad) jecxz pop lods xchg xchg mov sti xor ret mov adc jnp enter or adc mov movsl cmc popa js cmp lea add sti bound jae daa fadd cltd insl dec (bad) and call sarb lods jne pop and out out loop fidivrl lds or add mov pop jl es and jo roll fildll and arpl mov mov dec out jne mov nop push pushf loop mov xor jae es xor mov dec dec cltd mov flds ljmp (bad) (bad) xor mov test daa rcrb push je push shrl push movsb mov push cmp int outsl mov fdivp xchg das data16 lods inc ret xor test ret cmp adc lods decb xor scas test sub mov pop (bad) jae loop out push or into add or (bad) mov xchg test xchg dec imul scas lret xor fcoml cli insb (bad) push ljmp jo sub sbb clc rcrb or repnz cmp push jnp or jg std cld rclb mov dec xchg cs call or sti add or jle add iret adc (bad) popf adc mov xchg dec out jo cmp add xor sub jno mov (bad) pop mov pop dec mov sub mov lock bound ficoml je bound jl enter in xchg jg aad push push push mov repnz jae scas cmp xor stos push mov hlt adc stos inc out jb (bad) pop out sub into push mov add add roll push lods lods (bad) jne decb adc xchg add out shlb xchg sub imul test and mov mov iret jge idiv inc xchg cmpsl pop mov mov mov int3 aam pop mov ja add adc push loop (bad) je cmp stos bnd mov pop xor mov mov outsb lahf add sbb xor sub mov iret (bad) push dec mov jecxz sarl mov ja pop iret js dec ljmp mov pop lahf push lock inc cs mov mov into ljmp leave fnsave lods int3 cmpsb dec (bad) pop xor jmp into leave cmc int3 add lods xchg subl sbb jle int3 adc push push xor pop jbe sub (bad) pushf out xchg (bad) mov aaa add mov inc xlat xchg mov xlat jns dec add out mov add in leave insb mov nop scas das and sbb divb (bad) not pop sub inc stc aaa lea push (bad) mov pop int3 decl stos lret or mov ja xor incb xor icebp ret adc xchg aam gs push push cld dec movsl movsb in cli mov sbb (bad) push sub loop sbb inc jg cld lcall test add hlt jbe movsb jae pushf sub pop xchg out bnd mov imulb sbb pop xchg in lods cmp fldt in (bad) jmp fbstp fsubrl sarl (bad) jmp jae lret xor imul pop jns inc mov add dec xor mov mov lret pop lss xor or push adc adc in xlat sub push and test lret xchg and cwtl inc ss add cs push xor push sub and xchg jmp cld push lret repnz jo pop out or scas jbe rcl ljmp aas push jle stos xor cs push popa mov pop dec dec push jae out push adc cmc sbb nop inc (bad) jbe sub out (bad) cld and and loope add scas fs mov pop enter and shrb or xchg fbstp sbb test or loop and out xor idiv int3 bound mov inc mov push arpl outsl jns jp jbe hlt ljmp add (bad) outsl dec cmp lods (bad) xchg aad insl call mov or mull fstl mov cmc fisubl xchg das cmp sub inc dec cmp rcll repnz test (bad) xlat in std (bad) sub push (bad) das in sub mov arpl xor ret out (bad) cmc lds in ret xchg std xor cmc inc pop pop lret xor gs mov sarb pusha push rcrl push in dec sti jno and jg mov test mov shr loope adc add (bad) mov stc (bad) sti lret repnz cli cmp loopne rcll enter mov mov mov das or xor js test inc add mov lock xor addb mov imull das scas and mov and xchg (bad) not dec mov fcomip outsl clc cmp or xchg xchg (bad) cmpsl pop inc adc aam and ljmp mov sub es repnz sub out adc push mov int3 rcrl or inc mov push fnop es adc sub fs (bad) jecxz pop pop dec sub push jecxz sub cli dec out fcomps int3 pop mov cli popf cwtl (bad) sub roll testb into inc and es lcall ja jmp icebp jbe lret (bad) cmpsl sub xor shrl les shr lea (bad) fimul jle jno jmp jmp push out mov jnp and mov (bad) or xlat scas je stos mov xchg scas xor mov decb add lahf movb xchg sub push mov jns movsb jmp ds sar sarl inc and xchg pop cltd or sbb (bad) cmp fldenv rol data16 fidivl jno and adc mov pushf mov mov (bad) jp jg mov std jge mov and pop dec fldl aas data16 dec (bad) ret std jnp movsl inc (bad) int3 std add test mov or sub lock (bad) (bad) mov mov lidtl popf cs cmp mov fisttp xchg dec mov inc cmp outsb dec mov movsl fmull aam (bad) dec leave lret div repz popf xchg fimull or adc mov (bad) sti popa sti sub jge enter jle sbb (bad) repz (bad) std rcl rcrl lret push mov sub pop push ljmp xchg lret dec (bad) test mov into add aam test push cmp mov xchg add push gs adc xchg push cmp push mov jecxz sarl mov cmpsb mov xchg mov out xchg xlat mov jge or xchg jg or mov das jmp add cli pushf mov jecxz fsubrs jp lds arpl movsb or dec lock pop or popf repz mov inc mov lret mov mov mov fcoml jmp xlat or adc and jmp xor fs scas jb or mov adc jmp sub test inc (bad) pop and fidiv add fcomps xor jne sbb repz add add adc mov loope lock add inc jno das mov leave lahf sahf mov xor pop js movsl std faddp lret add adc test iret push ja repz lods cmp and std (bad) insb xlat es mov and xor jmp insl or mov xchg (bad) cmp loope pop xchg lret xor xchg lret mov jb dec repnz jno add jp cs xor add in or rolb push push dec inc arpl xor imul roll data16 dec dec dec jmp lods lods xor fnop mov leave leave jl rcrb pop dec call jns les cmp sar dec adc adc adc xchg or cltd inc lret (bad) icebp sub cmp mov and jbe repnz loopne xlat mov mov test call pop mov ljmp dec and cli lret adc add fcom and out jle xchg xchg xchg rcll adc mov mov inc lds lods push mov jae jmp xlat mov inc fwait test jo lret stos scas adc (bad) xor jg (bad) cmp jl jmp fwait xlat or adc stos arpl xor dec sti movsb lret stc push mov in rcrl in lods pop ret shrl (bad) les gs mov (bad) dec jne adc add imul inc push mov and xchg adc scas mov pop add insb inc pop add lods or cmp nop imul mov shr jo add int3 sbb inc mov add push push ljmp push rcrb pop jne inc push pop mov (bad) outsb dec inc faddp (bad) mov jno dec fadd and xor add xor dec pushf stos arpl mov decb cltd call adc lds and and adc xchg inc push pop adc pop sub dec lods clc movsb mov dec sbbl test int3 dec test in inc xchg mov lahf addr16 mov pop pop in rorb jl lret ret adc mov inc inc or xchg or int3 imul sub push (bad) and pop or inc sbb mov fidiv add xchg xor inc das stc xchg dec xchg mov fnop test hlt adc aad pop push icebp push and add pop pop fwait mov icebp notl cmp ljmp clc mov inc hlt dec jnp mov jp add sub (bad) int3 ja inc divb mov or in sub jecxz and cltd mov fldcw and (bad) mov sti mov mov jne das das test or mov inc mov add mov sbb mov mov dec cmp lea test or jmp push cmp test mov pop insl shr xor sub leave mov clc add ror pop xor dec pop cwtl jbe repnz jle data16 cmp cmp push or pop adcl das or jns dec push jmp adc adc out push gs and movsl dec sub jo cmp sti loopne loop stc and add mov mov adc shrl lret mov into (bad) or sub lods pop xor aam out mov sub int pop mov jecxz cmp adc out and (bad) out mov lret adc or (bad) cmp stos loop xlat movsl (bad) cmp fnstsw int3 sbb lahf cmp inc mov jmp out or cmc mov fist mov imul adc scas mov xchg cld out js cmc adc mov cmc jg ret icebp aad adc pop sub loopne and popf jnp mov pop aad ret jg xchg add (bad) cmp pop xchg push and and sub jne add (bad) ficoml or in or movsl pop jmp popa (bad) xor js pop xor mov sbb sub aam jb cwtl cmc xchg jmp dec pop dec pop or mov pop iret fsubrs cwtl shlb bnd cltd popf or insl lret ret jnp sbb mov xor fistl call jp mov out mov movsb lahf in sub sub adc mov pop xor test or sarb jno stc cwtl into icebp dec sub in push add stos sub sub insb lahf popf or test push (bad) pushf add dec iret scas or jp aaa lret cltd lret repz divb mov jp adc pop mov xchg adc (bad) dec test lods pop movsb mov dec sub mov lds lods cmovle mov lea or fs addl out push mov pushl inc cli add xor cmp mov lret icebp jp adc xor or pop mov sub mov add dec mov or insb rcrl fnstsw cmp int and (bad) fidiv (bad) das jno (bad) mov outsb (bad) sahf dec or fistp pop daa adc mov loop sub in push xor add xchg repnz pop pushl js lret popf or pop and lods dec jmp mov or push pushf mov push mov out sbb sub sbb pop outsl mov and rorl or mov jmp and dec fsubr data16 mov mov iret pop lds xlat in mov stos test in jns out xor jp sbb test dec push jbe jo pop xchg call pop xchg push mov cmpsb mov clc insb cmp pop mov das shr std test dec mov dec clc js xor jmp sub jae lods shrl stos mov or xor (bad) xchg mov ljmp aas sub sub rorl ss pop or pop inc call repnz sbb popa dec jg push into xchg cwtl mov sbb lods push lret repnz lea mov fcomp test mov xlat xchg cmpsb cs aas sub or xor in lret dec imul (bad) xlat out and sub add into add inc out dec scas pop add icebp mov cmp mov add xchg pop cwtl add mov xor push fmul push jns (bad) (bad) and jb dec insl pop lret sub lahf out sub adc and cmpsl xlat in pop add or cwtl inc neg fimull out push push fcomps scas and sub xor pop jmp lret pop ret ja or sub mov outsl lea stc shrl adc test mov mov cmpsb xor xor add les (bad) and push sbb pop and push sar js ja mov test sub cmp sub (bad) and leave sub adc aas lea sarb (bad) dec push and mov rdtsc dec fucomi imul mov adc (bad) hlt mov pop lahf bound jg (bad) repz fsubr pop call std dec lret imulb adc fbstp stos lahf jns xchg out pushf aad enter div leave push (bad) mov loop xor outsb scas mov (bad) stc jne pop mov cwtl mov mov dec aam xchg mov sbb divb sub jl (bad) gs xor das (bad) insb jg imulb out adc sbb fcomps mov into arpl sub push mov iret cmc loope push sbb loope cli ret cltd push leave inc sbb (bad) cs sub mov out sub popf add and jno test repnz into xor dec dec stc jno mov iret (bad) mov or sub mov bound (bad) pop mov sub bound repz and push ret adc cwtl imul pop in btr and dec (bad) fldenv (bad) sub adc je lds test mov and pop cmp pop test xchg xor aas sub and add or in mov ror outsb mov mov (bad) idivl mov fidivr xor xor or push push lret sub (bad) xor xor nop roll mov push sbb or ds inc mov imul adc dec pop mov daa (bad) repz stc mov out ficomp daa push leave popa jmp call iret aaa add lds jns mov jns xchg or push and or cs repz xchg icebp ja std or out sbb divl cmp shrb fiaddl xlat les out cwtl or daa or xchg jle shll stos cmp cmp icebp mov sti sbbl (bad) ret push stos mov cltd outsl cld push (bad) adc mov cmc idivb push jl lret xor jg mov pop adc mov xchg mov inc pop mov pop loope or sub insb cmp rol or in push xchg test dec into std icebp sub test sbb dec std rorl push icebp and imull adc cli sub mov adc repz data16 and dec and scas sub aas mov fcmove or cmc xchg dec shlb dec dec add sub fs xor in pop mov xchg jl (bad) push or cmp mov or adc sub shrl in shrb gs (bad) or dec xchg or push jl xchg xor inc adc xchg (bad) mov cmp (bad) jnp adc xor call pop call pop mov enter rcl and scas je cli mov mov inc xor mov pop mov push ljmp lret sub scas mov sbb lds mov std dec xchg mov jns pop (bad) cmp imul lock inc and mov push mov add stos xor sti leave or push or lock adc stc (bad) xchg les movsb mov out in adc scas mov shrb cmp jo ljmp mov movsl lock xchg mov popf stos jecxz push ror pop out js imul cmp sub out xchg call pop pop loope jmp repz fsave xor stos jne test pop popf adc pop in sbb out sub sub adc xchg in cs sbb negl fldenv mov shrl pop pop sbb mov or popf lcall mov pop shrl nop (bad) std cmp movb add je cmpsl adc (bad) fidivr cwtl dec into cld and stos lods mov dec push lods fadds decl push or xchg lods std xchg into mov ret or frstor sbb jge or adc sub adc call out jge cmc and mov push mov push loop xchg scas (bad) jns xor fsts flds rolb or sub insb popf es sbb pop xor xchg sub repz mulb out and inc cmc add cmp mov xlat dec sub cli mov or dec lods imull or mov mov cmp sub inc mov sarb dec clc mov dec gs xchg out push adc push push sbb add fdivrs aad mov sub mov pop dec popf leave jnp mov aad (bad) jae test and sub xchg hsubps sub lods call rclb mull push cld mov pop insl call mov lret ja xor pop ffreep dec out jle sbb mov mov push mov mov repnz pop xor sarl xor stos test mov mov das xor cwtl aas repnz mov dec ret aaa xor pop sbb icebp xchg xor scas pop cmpsl adc mov xlat mov add shrl push dec push imulb push xor cwtl ficom scas sub scas pop dec pushf sbb fwait (bad) cld push push push int3 data16 out stos lea mov xchg or pop imulb jae psrlw jae pop test scas mov lods ss dec jl xchg test negb dec push pop sub ds leave cmc sbb aaa sub adc jmp dec mov js ja mov cmp mov mov out pop test pop inc xor pushl call mov pop push sub sti ret jl js pop cli leave popf jg push pop jmp sbb int lret out and gs not dec jmp and jmp mov dec lret cmp adc push sub xchg aam push pop cmp pop cs fmul pop lcall das fisubrl fmuls pop adc cli dec mov or repnz adc cmpsl pusha or xor cmp xchg outsb push or dec aaa imul int3 cmp cwtl push iret mov push fldcw movsl mov cwtl iret push leave aam cs cltd scas (bad) fisttpl sti jno add jno sub mov rcrb loope xor add sbb sub wbinvd jg cld jb inc (bad) and inc lods or lds mov pop jno inc scas scas sub or mov lret leave pop jmp mov push inc sub mov nop shrb lods aas ffree into mov cmp (bad) lods fimul add int3 mov lods enter cmp adc sub cld add inc daa sub cld sub leave sub (bad) ss pusha sbb dec mov pop mov add mov dec mov pop adc pop into shlb mov sub add popf pop pop movsl pop xchg sahf xchg add jmp sbb aas and loopne mul jp jle loope jmp (bad) xor cmpsl movsl pop cltd xchg (bad) jnp stos movsl mov repnz push and xchg gs loop (bad) cltd push dec cwtl jmp shlb adc fsubrs mov xchg mov (bad) dec jmp mov pop lahf fisttpll inc xchg pop xor rcrb xchg scas jo sub inc das imul adc (bad) push sbb mov and mov lret pop push mov imul push lock jle outsb add jecxz jo dec inc mov push mov mov cli or add (bad) mov and and mov push cmp inc sub neg add jmp lcall fs xor leave je push iret jmp xor add add jge jo fisttpl out stos mov xchg mov push or add xchg lods ja and aad xor mov mov push push gs mov cmp mov fyl2x outsb loopne sti xor lahf jbe loope sub xor lret icebp xlat imul or dec mov popf push inc outsl xlat fs xor lods bound adc fs cmpsl (bad) imul inc shrb cmp lahf notl fs popa jns mov repnz out in xor adc inc dec mov cltd mov mov mov mov dec pop push sub cli fstps pop loopne and xlat leave lret push jp out lods dec push xchg jns data16 cmp lret cld mov stos adc push xchg cld mov out jmp sub pushf xchg int3 leave dec repnz fucomp lods mov mov xchg adc sahf push xchg xchg adc pop or mov sub xor dec insb cmp and pop fnstcw test ret dec mov or sub xor into push lock jmp repnz xchg cld xchg dec fnsave ret std xchg mov push or mov fistpll out add mov pusha mov test leave mov dec (bad) (bad) fisub push xor dec mov xor jle stos ljmp sbb imul rcrl xlat adc mov repnz leave out sbb hlt (bad) and cmp pushf dec pop (bad) pop movsl mov lock mov or or out notl inc dec mov and fstpt mov cwtl pop adc testb sub aad sub jne mov in (bad) icebp add xor cmpl test jbe movl mov jno xchg loope cmp mov inc mov mov lret jno popa push pop mov subl sub inc (bad) in and lds in dec jg ja lods sub outsl imul xor add xchg out cmp inc testl pop sub in mov (bad) and out lods outsb mov dec and rclb test jge adc add or dec fcmove subl jb ljmp imul dec lods and into jl pop mov arpl sub (bad) (bad) or mov inc xlat sub dec add xor inc fcomps xchg stc jmp lret in inc jmp xchg mov pop mov aam addr16 movsl into mov pop lret pop lret aam cmp popf out mov lahf jle jmp outsb (bad) pop xor or in jg pop dec je cmpsl pop into xor sti cmp sub and mov sub sti inc pushf and (bad) and jmp rolb pop and fdivp ret (bad) xlat jno aas int3 cmp cmp imulb bound (bad) pop xchg xor out inc sarb and xor pop out xchg outsl xchg mov inc dec mov bound enter or sub dec lcall cli add clc add out popa xchg sub ds cmp dec mov stc xor xor xor test fld xor sbb sub xchg (bad) lock mov pop imul mov xchg lcall mov ret insb jp dec xor cmp lret sbb sub enter addr16 dec sbb sets or and jmp fisubl dec lods sti dec loop xlat in fsubrl cltd adc push push mov (bad) mov sbb imul sti jbe repz mov push adc sub xor mov leave fs lret fimull shrb push dec mov xor (bad) cmc js mov ja ds mov jmp (bad) jno std jl add inc and sbb test stos xor or sub xor scas lods adc adc rcrl imul out ds sarl dec and and xor out (bad) stc sub jb xor xchg pop cmc jl pop leave hlt dec call fsts push inc cs into xor sti aaa int notb roll and orl mov daa xchg idivl sti gs lods pop mov sub das std cmp fiadd adc mov movl mov sub scas mov pop call adc push sbb sub lret pop outsl pop push mov jae cmp lret xor jbe call mov or inc add cmp or mov pop cltd scas xor cs adc dec inc popa xchg add jnp inc dec adc sub adc faddl sub fstl mov jae insl jg stos roll sub inc mov ficompl jae bound pusha pushf ret sub add out pushf xor lahf jle jno cs push jbe push lret and iret jmp xchg push sbb jecxz stc dec bound shr lret sub pop std imul xchg imul fmull and xor mov mov fist mov fcoml xor sarb xchg daa inc push push lock das movsl push leave dec ficom pop push clc xorb sarb sub sub add das or or (bad) (bad) jnp and pushf stc imul adc jl xor or push adc cli scas mov xchg push add int3 test dec pop mov push cmp (bad) leave add mov or and leave jne jbe repz xchg sarb xor mov aam ljmp test cmpsl call les sti add negw pushf mov mov adc dec fwait dec pop sub aaa mov pop (bad) mov cmp and scas lret jle mov add fldcw xorb pop mov jmp jecxz inc (bad) xor lret pop inc jbe pop push aam (bad) fidivr jo dec fnstcw sub ljmp mov xor adc out mov dec test enter adc mov loop out das sub jae adc dec int jp xor call sub (bad) xor xor pop out and das (bad) clc or decl cltd leave lock je jmp (bad) inc push mov push (bad) inc lods add out jle bnd test pop jmp dec push inc add push pop jmp pop sahf fstl xlat leave mov jno out cmpsl and xor mov add stos jne ljmp dec test jns sub hlt xchg call inc xlat push pop imul mov xchg (bad) out rorb inc mov in ret fs pusha pop jb push (bad) mov ss ljmp sbb xor notb leave repnz cli (bad) pusha out (bad) fidiv aam xor std idivl sub mov mov and popf mov pop fldcw dec push lcall add jae inc dec scas sub fisttp pop push jmp fsubrs push or jns add add or decb cmp out insw add mov push sbb mov pop out ljmp mov sub jecxz cltd gs push sub scas (bad) icebp inc mov out es pop xchg xchg pop push mov jl jmp or mov add xlat xor ljmp mov clc adc insb mov jo loope sub add imul inc or inc sbb and imul mov and sub jnp fwait cmp rcll mov dec into push and mov and popf jae cmp xor dec mov adc je scas faddl leave in pushf pop push imul lret push pop mov ljmp leave sub dec sbb mov fldenv sub xor pop push lret mov call (bad) negb cmp in (bad) dec nop je (bad) sub sub add mov fisubrl cmp mov shll leave or mov jmp les lods lock sub jno add sub adc sub aam pop jge xor sub jmp (bad) cmc sbb mov movsl fnstcw leave ja sbb sub aad mov xor aas daa xor divl pusha aad leave xchg je ret jae cmp and inc in pop mov lea sub cmp add mov sub pop in sub dec adc jno or xor (bad) cmpsl or sub jmp pop xor ret mov xor add add add lea daa pop inc imul rorl and lock mov sub mov xchg ret rorl jmp std icebp xchg loopne stc xchg jno mov (bad) hlt inc call mov jecxz rolb inc roll ljmp mov sub xchg mov lret sbb imul rclb add sarl xor cmp sbb and jmp mov insl and insb and stos sbb in pop sbb dec repz outsl mov adc xor scas and aas dec lods jns or rorl fbstp pop out dec test and out push jecxz jmp xor arpl add stos bound or rcll mov cwtl das mov xchg enter aam ljmp test movsl out sub repz xchg push sti xor pop pop notl out add ret pop mov aad xor push push sub or inc (bad) pushf icebp pop leave pop mov cmp jge mov pop dec adc mov jle jge out sub xchg (bad) (bad) dec jae dec test imul xor pop (bad) jmp xchg mov jp mov lock pop (bad) jmp iret cmc jnp xchg (bad) mov fidiv jmp push (bad) xor sub cld test xor mov stos lret in sbb lret scas inc or sbb sub add push mov and cmp pop test xor stos mov xor sti in pop aad lea inc and pop insl pop cmp loop cld cli push push test into andb cli push mov and out jle mov mov push or xchg or add lock push idivb jg sub sub push enter ret pop sbb ficomp movl push push in and pop add mov int3 mov push adc aas ljmp mov test jmp stos out sbb sub cmp add or mov push es pop roll pop sub pop cmpsl xor insl ljmp and pop xlat cmpsl pop in lods push test or push mov lcall lds xchg in aas sub mov incb cmc push lock dec add aad mov insl cmc xor pop call push adc fldenv test not xchg push arpl mov sub push incb inc (bad) das pop adc pop pop pop push mov inc aad mov fs sbb sbb imul loope int3 cwtl addb add pop lcall add and xor pop xor iret scas jnp dec test lock pop addb jl sub aad xor das fldenv dec sub push add push ljmp data16 test fdivp or xchg jmp orb pushl neg shr inc cmc and leave adc adc or sbb gs adc ficomp and sbb into pop dec xchg mov push ljmp movsl scas ret je imul mov aad fimull adc mov cmp xor mov mov pop shll sub dec jmp stc dec mov and mov imul lea out inc enter in inc mov scas mov mov leave cmp or xchg (bad) in das xor mov adc inc mov jns dec lret loop rclb call (bad) xchg dec (bad) movsb xor push loop lds cld dec jmp sub shll mov cmpsb or adc pop fldl loope das mov call xor sub pop lret test (bad) out popa addr16 fsts mov cmp pop xor out sub (bad) inc in int3 cmpsb adc ljmp add mov cmp mov jecxz imul mov lock iret xor idivb sar cltd repnz jg xchg jno daa clc jp out sub add into xor test and and xor idiv jg mov jge sub push lret or or cmc xor (bad) rorb lret fdivrs sahf into cmp push add out adc add xchg or fisub pop dec out (bad) push or or xor jmp sub push loop pop int3 lods loope shl jne mov sar or loop imul add or sub pop mov mov jp test inc mov xchg aam push inc dec cmovge in in not xor jne pusha out add mov pop cs loop hlt cmp icebp mov add jbe and add (bad) mov aam jns ja add stos mov xchg cli je fstpl mov cmp and mov dec loopne cmp sub popf in mov out xor sub sti jo mov push movzbl lea dec mov (bad) sub and adc xor fsts repz rorb lds je setge push dec pop lret mov scas or mov jg dec cmpsl (bad) imul mov fstpl outsb mov aaa repnz mul pop loop loop xchg stos repnz pop repz dec add adc cli lret ds sub aam inc sarb pop mov cs test movsb adc lret stc dec cmpsl lock out aaa jp hlt push and das pushl push cmc jp xchg inc movsb aas pop test movsb and or ds sub mov in xor out sbb inc pop repz adc push stos mov pop in xchg xchg scas test sub (bad) or int3 mov xor push in mov jae adc cltd xchg add repz sub stos loop inc sahf js pop out sahf test in and pushf testl mov push cmp leave into pop in and jp jae xchg mov lret cmpsb sbb push insb xchg mov outsb popa cmp and dec test xchg add fmuls lret pushf push out inc sub sbb adc pop mov fmuls xlat sub cwtl dec mov mov jns out hlt (bad) ret int3 xchg lea lods jmp addr16 push ror sbb pop sbb push pop pop jecxz sub add stc xchg stc sarl push pop popa test lods adc add push mov push cli push push jbe pop idivb mov fimul sub push xor scas mov pusha sub push mov mov mull add aas jno xor ss adc and roll xlat jmp sarb out pusha sub and les into lods mov and mov sub adc mov xchg lock in push mov lods pop (bad) dec outsb mov pusha add inc lods xchg push lock jns lods sub movsb clc ss push mov bound repnz sub mov or stc add adc movl cli xchg add mull jno pop add push jp cmp inc aaa movsb (bad) mov sub add jg push inc and shl outsl repnz rcll mov (bad) stos mov pop push xor cld (bad) lcall lods stc cmp push scas push xor jmp gs lods (bad) adc xor mov push repnz push icebp mov rcrb cmp mov sub sub push cli inc dec jmp sub inc xchg (bad) or inc mov xchg mov push add stos int3 pop lret inc pop mov mov das pop inc mov xor xor jae jb xor (bad) xor ret jne mov or hlt popf gs xchg and cmc pop popa xorl pop mov cmp add and fwait or push int repz xchg (bad) sub mov gs mov xchg inc movsl jp push sarl cwtl and mov iret movsl dec mov jecxz inc repz jg cli mulb addr16 pop popf mov mov pop cmp je adc jecxz addr16 and push out push call arpl jns or xor ret daa xor push or lods sub roll stos rcrl xchg inc out lods lcall (bad) dec pop jae sub aad mov (bad) cmpsb test jmp cmp out mov add xor test sub dec enter lock movl fildll cli adc cmp mov (bad) dec adc pop lret xor adc stos mov xchg cltd insb (bad) jle mov mov fldcw cmc mov jg push or jg xchg cmc xchg push adc pop jbe pop ret stos dec cld jle aaa inc sahf mov jmp or add jmp pop outsl adc and loop fcmovb pop pop lret gs mov pop loopne pop dec mov incb mov mov and ret pop cltd pop je dec jg or or add lock out jecxz xchg mov shr aam mov (bad) dec js mov loopne into mov xor adc popf add or mov dec lock dec sub lahf lret and pop test stc in sub push pop mov xor xor add nop out or lock popf lcall adc mov push jns cmc xchg test out ds or fs mov mov mov push std pusha shll cmp cmp nop pop stc push repz das lret or push mov sbb addr16 add mov adc test in in test scas or nop call lahf cwtl outsl or out jae sub test call push mov mul adc mov js mov les push ja push jno imul das out pop or push inc sub or mov shrb das in movsl mov pop and xor (bad) jne cmc idivl pop sarb sub (bad) push das cld divl dec push xchg push pop scas test add cltd das jae jbe pop and jg out xor inc mov pop call stos sub jmp es cltd shl loope outsb mov jne out mov push in adc mov loope out (bad) clc repnz cmp mov shlb push std fisttpl dec add cs push or movsb ret dec pushf es into lahf cld jmp inc shlb xchg mov rol cmp xor sub (bad) mov insb in or jb (bad) xlat xor lds test mov js sub cltd inc jmp out ret repnz pushf (bad) dec (bad) mov mov aad sub test fcoms ljmp (bad) sub adc cmp and lods je lahf (bad) mov mov sub pop ljmp (bad) push add (bad) push pop or js mov (bad) cmpsl pop xor scas fs pop xlat fstpl cmp add loope jecxz daa idivb jle leave inc pop lds adc popa sar xor adc stos lret rorb pusha mov add gs pop xor pop rol scas lods lahf leave sbb ja add decb lret mov cld mov repnz mov mov aad xor nop sbb cmp std insl jecxz xchg cli push icebp adcl (bad) xor sysexit and aam test out pop std fsubl les push mov shlb mov xor mov xor adc inc aas nop xor test enter out dec std dec je ret (bad) xor xor in add jae add out insb mov adc mov add mov sub and sub out mov in fs mov sub sub sub mov sti xlat fucomip je test inc (bad) cld jns stos xor sub in sahf inc ret and ret or ljmp in mov out xorl mov fs inc lahf (bad) test mov aaa jg jmp popa and and xchg fsub ss and (bad) out mov jmp jne or or movsb ss outsw ret in pop dec (bad) xor jge daa and and cmpsl push mov inc pop xchg clc mov adc add dec out fs insb out insl mov lods stos imul mov test inc stos int3 and mov mov mov xor std jnp test mov fucomp cs (bad) and push sbb mov popa sub das mov movsb mov (bad) cld loopne rcll sub jae dec (bad) sti lret ret bound add inc dec adc xor je test ret jne dec sub and inc xchg pop fs mov add in leave xlat and and lock mov pop pop cltd into (bad) ss pop jp jg and inc mov cli add call repnz int3 sub pop sbb js icebp sub movsb (bad) sbb inc jg xchg push mov xor rcr test repnz jbe cwtl data16 (bad) xor xchg loope jno jmp adc xchg fmulp pop jmp leave sub xchg pop sbb shrl or insb (bad) (bad) rcl pop shl out mov sbb mov push out add cmp pop adc aad cli outsl vpaddusw insl and lahf cltd push leave cmp fcoml mov inc pop cmp jno sub cmp add daa xchg scas mov fbstp sbb sbb shrw out adc xchg lret inc fiadd or jbe imul jmp imul mov cmpsb jo push movl jge adc add dec and mov das adc jo mov and xor mov shrb add xlat or sahf mov out lea (bad) lock rorb imul out cs popf mov xor dec mov mov and mov xchg add lcallw add add mov xchg jb xor adc pop xchg scas sub sar lods jl adc nop rolb idiv dec ljmp out push inc (bad) or or imul jae and clc dec aaa imul xor jmp lahf xchg std cltd pop mov xchg or sbbl pop (bad) xor pop fldcw stc ror pop out adc mov sub dec pop aaa sub fwait jp mov into push xor pop mov jmp sbb sub jle jae cmp pop jno xor insl insl lret dec sub jecxz pop jp repz jecxz pop fldt mov jge mov push dec mov mov xor loop enter push jmp push decl xchg jle jmp (bad) cmp (bad) add scas repz mov jnp or or jge fwait jb lret icebp dec dec movsl lods pop sbb mov cmp mov xchg sub lret xor mov dec sbb dec stos and les xor xor sbb cmpsl in mov dec or icebp bound jns je jmp xlat fbld shrl jl jg sbb push bound (bad) jo bound mov dec mov xor imul pop stc push bound jmp mov inc (bad) mov es fnstenv mov cwtl clc in pushf subb lret imul movsl test out je fs xchg jp ja push or fidivrl jo mov cmpsl push sbb sub mov lea push sub imul icebp lret xor leave or mov push pusha or mov sub popf push sahf pop repnz sub (bad) fimul ret fnsave inc ret aam test dec push leave daa add repnz nop loop popf mov loop rcrb xchg xor add sub fsubrs std jb test sbb push mov leave pop jae add cmp jno dec push out xchg stos test mov popf sti (bad) sub and xchg testl xchg into push dec mov leave stos (bad) sub jmp movsb hlt push and xchg imul pop in daa (bad) add seto rcrb in movsl icebp int icebp insb fisubr scas or (bad) xor lds insb mov sub imul ret jg ss clc or into mov fwait loopne (bad) inc push sub lods movsl das or int3 xor negl sub pop (bad) mov adc (bad) stos (bad) push or je pop stc int3 push add enter dec jmp fbld sub fnstenv iret and xchg fbld mov (bad) push push mov mov lahf (bad) das add sub mov jg push bt imul bound (bad) jne test (bad) repnz ja push js sub and nop movzwl jnp test xor dec xchg stos mov pop push mov in test pop push test pushf (bad) or sbb jmp dec rorl sbb cmp (bad) xor dec into pop xchg adc mov or and cld js add cmp jmp jg jmp sub (bad) pop mov lock sub pop ret movsl xor and (bad) fucomp and dec xor xor adc imul cmc pop sti fs mov or pop (bad) divb xchg jae and pop in sub daa xlat out push aaa mov jmp inc and mov hlt push leave push fnstenv test add outsb scas loope das mov mov mov or pop cltd daa xlat mov xor push hlt cltd rolb push dec pop jge jb sub jae adc lods (bad) les or cmpsb ret fs mov imulb mov imul in add push and int3 push pop fidiv pop int3 icebp xchg jae daa clc mulb (bad) out mov dec fstpl scas jne mov xchg mov lods fwait inc jecxz mov sbb jo (bad) mov insb push or add and cmp test in push pop jecxz xchg scas or int3 dec xchg aam push jmp cltd idivb push test decb pop fbstp or in push mov cltd sub out loop inc rorb mov mov mov imul or lahf mov pop pop pop sbb or out fisub dec lods pushf and inc lret test mov xchg pushf jle mov inc xor pop inc push outsb lods or sti push cmpsl fmull je mov daa repz pop scas das or adc inc pop cli adc xor ret test ja mov mov sub int jp lock sub mov pop ret test (bad) ljmp and out int3 or mov test push jnp (bad) pushf in mov outsb lret iret ja mov dec sub xor xor sub ret and mov mov rcpps lret mov dec ret mov das setnp out hlt repnz js sub jno xchg cli mov adc je repz popf cmp add jbe mov add pop xchg dec jmp mov push pop mov adc (bad) mov int3 paddw push xlat (bad) dec test cmpsb stc test pusha test mov xor cltd in mov roll and inc rep into cmp ret sub pop add xchg int3 dec lret or repnz and sar in test or inc in and fsubs pop mov ja sub pop dec mov add xor leave rcr xchg in iret fimull pop sub add dec adc xchg push mov dec mov (bad) lea sbb adc mov xchg (bad) mov xchg aam int3 adc roll repnz test xor movsb shr sub stc mov cmp adc sub add lcall xchg lds insb xor or sub lds in jbe movsl aam out stc dec sti jle inc mov outsb mov mov leave ja mov sti xchg shll mov js loope mov lds pop mov sub movsb xchg add leave xchg or cmp repz xchg dec rorl clc push test xchg gs lret mov adc (bad) mov xchg dec int mov mov (bad) or (bad) mov hlt jnp std imul mov sarl movsl inc int3 adc add or out mov xchg sbb xor sub das add ret sub mov ss inc icebp lahf jle jmp rcrb inc sahf pop mov inc or mov ss sub scas jb mov push and mov mov cs ljmp lods (bad) lcall je out sbb cmpb icebp mov or push push push dec mov fsubl xor mov sarl pop fimul mov movsb cmp mov sarb ret pop sub dec iret or sub mov cmp push stc gs aaa cmp fdivp sbb pop (bad) int and icebp clc es sub icebp in loopne mov sarl jne mov push repnz dec pop inc std leave sbb sub xor push mov jmp loope lret stos pop ret or pop push jmp mov (bad) or fsubs adc adc sub mov mov xchg push sti mov popa sbb dec mov test lcall out adc mov pop push imull ret ja mov cmp pop adcl fstpt in clc leave or mov or shll mov adc xor mov std dec je inc mov aaa jae fcmovb dec jns popf cmp lock jb xchg push inc mov imul mov addr16 sbb jmp in cmp mov jle sub xchg loop sub sub xor loop push insb daa xchg or out fimul mov data16 fisubrl test idivb dec push jb pushf sbb test movsb inc adc lret (bad) idivb leave add xor xor or mov and (bad) das jle bound (bad) repnz sarb outsb or lods call fstp inc pusha call mov mov inc enter xchg and inc ss imull mov mov pop out popa cmp cmp push imul pop test dec ljmp and sub push jecxz andb pop jmp inc shll lods fstl xchg push out cmc sub xchg cmp dec and sub and and mov leave and lock out popf hlt call cwtl cmpsl mov adc popf arpl sbb push repnz pop mov jmp mov ret xchg scas int3 adc xchg int3 mov mov add or test mov cld cmp mov rcr sbb scas repz jbe (bad) lret inc dec int3 mov test or mov xor popa xchg in in push sahf test popf lods add cli repnz fldt xor and das scas xor jmp dec aas push pop adc test add enter sub int3 out in scas cmpsl aam sti fcomp loop push inc sub pushl out mulb xor inc adc pushl enter fisttp scas test repz ljmp movsb dec aaa push inc (bad) bnd ret dec mov dec or add lods scas lret je bound cltd insb leave (bad) aas scas sbb into popf stc sbb push lret iret push pushf cwtl mov xlat popa cltd or mov jno dec (bad) fisttp inc dec movsl imull lock add cmpsl xor mov iret sub loopne out sbb push repz rolb out jp xchg idivb xchg mov lret scas push pop mov cmpsl dec clc loopne lock mov dec movups lret mov and in (bad) sbb popf xchg out cmp sub jnp aam mov mov repz or mov add mov ds hlt inc push add pop cmp cmp dec test mov add loopne dec push ja popf das pop push jb xchg lods movsl dec and subb mov or (bad) mov mov or and data16 jo jl bound push xchg (bad) lock xchg cld test sti mov inc lcall pop pop jl xor push daa push xchg cmp outsb sub fninit or push jg les inc adc je das and popa mov outsb test mov jne (bad) pop lret dec mov int cmp dec aad mov or sub xor xchg mov xor sub cmp sub (bad) or dec and imul sbb adc mov jmp pop dec and add icebp cmp repnz adc mov and inc js sbb movb mov (bad) xor shl insl out out pop scas sub push fisttpll gs mov mov pop std xlat mov ljmp dec mov and jge push xor ret add and cmp xchg (bad) cmp and push das jmp or dec dec and bound (bad) jge xor inc jnp imul xor jno sbb add fptan or sbb dec in sbb pop dec into sub or lods test xlat scas fucom arpl flds rorl ja into inc or test out adc std mov out jg sahf mov jns stos jp mov pop pop cli xchg (bad) in in sti lret fiadd addr16 pop scas leave dec ds lods sub cmp pop cmp sub rorl sub xor mov fs fwait scas mov inc popa push push fsubrs in std mov repnz imull xchg clc js into mov adc adc and ret jnp scas (bad) xchg ljmp push pop in das imul aad or scas cmp das sub jnp or inc push xchg pop adc push imul mov and jb (bad) pop xchg mov (bad) testl push jmp ficom pop notb or loopne mov pop enter sub js xchg scas jne clc fadd xor pop cmp xchg movaps repz and xchg vmovapd xor les cmpsl jmp xlat pop sarb cli sub leave scas push add mov cltd or sbb into sub cmp mov lahf mov and push scas gs sub adc (bad) push lcall inc in dec push dec jge mov dec or fwait or fild fdivs mov dec sahf les into call stc mov daa mov or inc pop push pusha add addr16 push and jb int push sbb shrl xchg adc or mov pop add icebp out imul xchg call lds lods lds int3 jns dec or int loopne lret popf pop xchg push daa add ja cltd jb jp jmp push imull (bad) jae sub stos mov pop ja mov sbb dec and daa ds mov scas push test cmp shlb rorl dec aaa into cmp data16 cli mov jo cmp imull xor popf imul sub jns sub sbb loop stos sub (bad) or xor ret cmp push lcall fucomp jle dec sar bound xchg sub xor ret add sub (bad) sub lret push out iret gs and mov jle add loop lret jb push adc sub xchg outsl xor shrl aam mov xchg (bad) mov in daa adc push (bad) aam sub das mov push pushf es push fbld popa jns outsl cltd push in jle add in jmp pop sub dec imul test cmp mov ljmp (bad) hlt fsubrl inc cmp and xor mov lret inc cmp out dec mov sub add out sub cmp mov aam ret notl inc xchg ret sub lods loop clc leave jno mov xor and sub cli icebp bnd les dec sbb loop negb addl mov ja shlb mov test xor cmpsl inc inc mov push jmp out xor test test mov xchg adc inc sub mov repz and xchg leave xor sub ret or or ja (bad) xor and stos cmp sbb sub mov je in clc and jno insb inc out sti aas sub dec xchg jb stos cld mov adc fnstenv js stos sbb arpl mov nop pop fwait mov jb mov rcll out stos mov mov mov inc jae add push or sub iret fscale push pop (bad) int fildll xor xchg dec add loope arpl int3 jle dec add dec ds sbb inc dec int3 out lret dec pop push out dec rorb fsts jge dec sub add fs lret cltd bound jb lds bound cmp negl sti jne repz fninit add jbe and in movsl mov mov dec and out adc test mov lahf or arpl outsl xchg jbe and pop loope loopne data16 rclb dec cli mov mov icebp mov add sub std insb pop pop fidivrl and pop jns push xor pop clc mov push or add sub clc sub xchg xchg popf data16 sub push dec dec mov xchg pop loop sub ss pop aam (bad) aad mov ljmp and mov jecxz pushw cs and fwait loope shrb (bad) lahf cli in in cltd jle pop jecxz int3 cld sbb das sarl xlat xchg jne or lahf in leave dec shr pushl icebp mov mov mov lret ret icebp outsb mov ja adc mov arpl loope sbb and out (bad) dec fcoms or out cmc cmp mov (bad) mov push adc punpckhdq mov sti mov out (bad) pop iret or movsl repnz cmp inc lret dec xchg stos (bad) insb aad xor movzwl idivl divb dec std dec and jge xchg into add in jbe lods sbb and jnp push mov pop idivb lock cmp pop cmp or cwtl pushf push (bad) mov in scas cltd jl jecxz adc mov imulb iret in cwtl dec or push addl jae add fldt xchg fisttp test aad jl push cmp clc mov xor add pop xchg lods cli add push jno nop add leave lret jle sti lahf in (bad) jg sub mov xor test in rorb dec clc (bad) dec mov and and jmp aad je (bad) xor mov jns jp push jns dec jo add out cmp mov out mov jae add add xor xchg adc push push mov push lds and or cmpsb push imul icebp ja dec and stos imul add (bad) xchg repz out daa sub notl xor push fucomp xchg cltd jne jbe pop cld mov fs and out daa add out out xchg leave xor imulb pop int3 dec mov dec call loop (bad) mov popl mov pop jmp push mov pop les jns scas movsl xchg aas in (bad) loopne stc xor add add (bad) jb (bad) idiv imul nop mov add (bad) nop rorl in mov nop (bad) jg clc cs call jl outsl (bad) cmp push and xlat mov gs lcall out cmp push (bad) xor and mov pop ret or or sbb and inc jbe (bad) or fstpt scas xor xor pop (bad) xor dec das mov les adc into (bad) xor and dec mov (bad) xlat test sti divb nop lret and mov xor or inc jns das sbb ficomp lahf inc add or decl scas nop icebp dec addr16 fstpl aaa pushl repz sub and int3 mov dec (bad) fwait add out call jle and or dec push das mov pop dec mov in out pop imul push sti mov push push movsl out into mov or and movsb repnz in sub sub push xorps mov xor pusha add repz repnz shr mov ret mov xor ja iret pop enter xlat pop push stos push pop ss pop xchg jge jge mov sti ja fmuls out push push pop xchg scas add (bad) incb pop mov arpl fistpl fldcw and add pop push pop imul pop mov lret inc push push pop jle fs stos clc out iret or add jns andb cmp loopne cld adc pop and push cmpsb clc jg cld push dec scas mov push sbb push repnz xchg faddp push add pusha adc mov push push mov inc iret pop pop stc mov xor inc mov push aam push mov mov sahf mov mov es push inc fstps (bad) in xor je fsts sbb movsb pop cwtl rcrl arpl add push dec dec jno ret mov rcrl (bad) int lcall lods stos std popf xlat idivl daa mov rcll das push flds push push pop das xor insb loop dec xlat jmp ss mov xchg mov mov inc cmpsl and loope out clc mov add adc aas cmp xor jne jns sbb daa pop inc push lds imul pushl inc aaa popl xchg adcl adc in (bad) (bad) pushf push popa movzbl mov pusha xor sub frstor das lock add and cli sub (bad) in dec pop jmp or jecxz sub add xchg jl insb push and fdivs loopne xor mov shlb push (bad) ljmp and pop setge shr add sub jecxz bound fsincos repnz in movsb mov lds sbb rorl push lret fstps enter jecxz dec mov push mov cltd adc mov (bad) dec and or mov das fsub xbegin pop dec les jecxz sub and scas testb pop dec sbb ljmp add dec mov push out sub aas or pop shrl mov test lret or out lcallw adc jl (bad) mov xchg repz xchg jns bound pop pushf sub mov ljmp mov lret ret pop push or xor pop pop pop icebp test mov sub dec mov (bad) movsl dec aad or data16 xchg test out sub popf (bad) or add lcall cmp leave (bad) lret mov pop sub xchg iret imul nop pop pop mov pop stc push dec push sub scas int3 and mov lahf icebp lds inc pop enter mov cli das and test repz pop adc mov div daa stc push or mov push (bad) test dec aad mov and and lds dec cmp xchg jecxz in add jle,pn mov and out lret out add push popf fmuls jbe (bad) mov xchg rcll out repz pop xor dec push adcl or jmp mov repnz mov rcrb mov adc push mov out mul inc dec or clc lret xchg jge cmp mov xor inc adc clc push lods add outsl aas mov add cmc pop sub ljmp repz fdivs clc (bad) dec jge or sub das (bad) shrl (bad) jle pop outsb adc lret rorl adc xor call dec jle add lock or mov shll xchg test mov jg push xor jns jl add (bad) (bad) ret andb pop add dec adc add shll cmp push stc clc and or movsl popa ret clc add imul fildll clc push push mov mov pop push scas mov ja xor insb movsl pavgb insl outsb ror mov pop inc add loopne js mov add and outsl fcmovbe in (bad) xchg ss lret sub icebp loope sti int jl leave pop sub cli scas cltd cmp pop sahf inc and push test hlt jge xlat mov and movaps fist or popf scas dec arpl mov aas cmpsb in adc mov add mov xor mov gs ljmp add test rorl cmp dec lcall popf and fdivrs adc or mov and cmpsl adc mov and mov rcrl jg insb adc dec or pop add imul popf push addr16 dec cld mov stos xchg mov push je sbb and xchg inc push or int loop push or repnz adc and imul lret mov mov sub sub fldt xchg push cmc shrb pop add dec (bad) cmp ss adc mov les pop mov pop and negl jp and pop sub (bad) idivl std into mov jnp gs adc sbb add pop test out mov xor out (bad) lahf outsb xor cld lahf jb xchg push push mov into repz mov faddp mov daa adc js test fcomi jno push push add rolb add and sbb imul rcll and adc (bad) lret andb and jmp inc ror pop and mov pop mov cmp les stc icebp adc mov into pop jno dec mov push mov jge mov sbb add mov mov mov xor ja mov xchg mov scas xchg roll pop js xchg push push pop (bad) imul cmpsl mov mov mov pop pusha fs xor ds fsubp outsb adc sbb mov shrb inc lock sub mov pop repnz push jno inc xchg push (bad) repnz imull inc (bad) cmp mov mov push das lods loope lock leave stos sub movsl add lods std mov jmp insb push xor jge sub outsl (bad) jmp out sub or shlb and ljmp je mov out dec and test mov out xor mov dec rolb add pop fxch scas (bad) sub cmp popa xchg out xor xchg pop xor ror xor push xor lahf xchg lret popa pop mov mov leave fist add stos sub push iret pop dec mov xor or hlt mov xchg lds cmp std cmp push adc (bad) scas push mov mov push pop mov js jecxz add push sti xor bound jmp mov in inc ljmp fstl and adc push lock nop cmpsl dec or bound pop dec sub out fstp jp je mov push mov enter jmp mov dec icebp pop adc mov jmp mov fmull mov imul jns xchg movl ljmp jle push mov pop lods jl fistl loope pop mov sbb push and and pop loop aam in pop pop lods mov jmp mov ret cmp mov in pop imul test sub and std dec (bad) mov (bad) or sub pop mov cltd cmp pop jp pop mul mov cli pusha orl dec or inc (bad) jl push or xor jbe and pushf cld clc out mov notb pop sbb ret xchg push or popa adc subb pop js frstor into es mov mov stos push cmp sbb push clc jle mov xchg mov iret scas fsubrs inc into stos cld jl out mov (bad) jecxz cmp out inc mov lret leave or jge popa add xor shrl xchg (bad) mov mov push pop shrl xor stos lea std mov inc adc add dec scas stos push (bad) mov add leave ljmp pushf mov mulb inc xor imul or clc dec movsl mov jg pop add jmp lret je test mov es ret ds xchg icebp push imul adc test mov mov mov iret inc ret mov sbb or mov ret inc out lods test out inc movsl cmc inc pusha adc mov int3 imul xor or xor rolb test push (bad) adc mov mov leave sub jmp jg xor jno mov push aad pusha add add mov pop xor mov xchg cmp mov jle (bad) mov or lret add movsl and cmc insb pop (bad) in std stc jnp add inc mov xlat mov leave adc fistpl mov dec loop sbb mov sub xor dec mov sub repz out push std arpl stc cmp jns nop mov leave pop add xor jne jmp js dec imul lcall leave sbb pushf sbb test scas mov ljmp cs out mov jp fucomip cmpsb and or sbb jecxz jbe out adc jmp and mov mov dec cmp pusha (bad) inc ja and jle dec repnz (bad) pusha cmpsb or xor pop test mov rclb or cli push clc andb mov push jmp cld dec out mov inc std sarl imul mov and stc and pop jp test xchg jbe push xor mov xchg cmp stos ja (bad) outsb (bad) rcrb add mov mov mov cmpsl inc xor sub cmp rep movsl sub mov add pop xor push jnp xor jno mov add adc dec xlat test pop rol in das imul mov scas lcall in cmpsb cmpsl popa xor jg lss jns pop sar fstp cmp icebp popf stos data16 cmpsl in cli idiv add fldz xor mov je gs dec cmp inc ret or mov ret out loopne mov dec addr16 mov sti cmp (bad) aaa mov cmpl popf push cmp pop adc sbb xor (bad) int3 and fistpll dec or dec leave aad pusha push pop icebp sub bound sbb aas push add (bad) mov mull test or cwtl loopne and xor out push or popa xchg out adcb mov mov stc dec inc push jmp and jbe push mov not pusha dec push push (bad) lret jg push sbb loopne xchg add stc pop add je add fcoml mov pop add (bad) mov mov lret jle pusha push mov jg outsl dec jns inc add (bad) sub pop lea daa add enter inc jge cmpsl jle mov mov dec ror adc xor pop clc jle popf xchg sbb sub cmp sbb pop push sub imul mov pop push fild loope outsb add sub sub lret pop xor lea (bad) leave jge imul jo or push mov push dec movsb jecxz dec addr16 stos cmp fist shr cltd add xchg cmp jp jmp and andl popl jg subl (bad) push mov stc dec fmull jg sbb fmull push mov or add mov pop lock mov inc test aam push sub push mov adc es add or push mov pushf fldt lahf sbb or and out clc dec cmpsl add mov jno pop bound jae sahf add or mov icebp in inc and push fstps movsl cmc loop push sbb mov or dec mov nop mov lret out cmp dec jne sti or pop outsl outsl or ljmp (bad) pop bound jle push jecxz movsl clc or cmp popf aad les push clc iret sbb cmp out xor jmp sarl call enter out pop jmp les pop xor gs mov or call sbb xor jmp add les mov sub lahf dec out pop xor stc negl mov and mov add movsl std xchg inc xchg mov adc test jbe push push in (bad) jb cwtl inc add daa add jge cmpsb or add cld fs add push cs bound push adc repnz add sub jmp pop subb out cwtl jno mov aaa (bad) mov push push and negl movsl xchg in cli fsubl in daa fmul xchg gs add pop mov push movsl jmp lahf and adc scas inc mov sub mov (bad) shrl leave mov jnp negb arpl cli fnsave clc sub ljmp sbb mov das inc iret sbb out cmpsl enter add mov cld push icebp dec scas inc jnp sbb test push push xor mov out dec loope sub sub iret popf icebp bound adc jno push or jne lret pusha and into bnd insb out and iret cmc ret mov pop adc or lret into fsubl push dec ret sbb add je jmp push push insb cmp lahf (bad) adc mov dec cld nop daa or push add out pop in leave xor add inc or dec cltd hlt mov mov (bad) sbb adc (bad) out lds lods cmc mov xchg pop sbb add xor push add mov lahf shrl loop sub das jbe imul mov repz pop aaa daa (bad) xchg and xchg jno push div (bad) cmp ret pusha jmp mov dec mul nop and xor jg lea sbb es loopne (bad) xchg or sbb int (bad) into and pop mov popf or add cmp xchg daa negl push decl mul add xchg push pop lahf push push jbe pop or lret mov sub out mov mov add pop fisttpl jb or sti stos movsl bound mov push lahf in push ret roll and and mov ret fildl jge shrb das repnz add rorb lret or mov (bad) mov cmp rcrl clc sub xor cwtl fxch dec pop mov and and imul clc (bad) mov adc stos test lds jg lret inc or pop sub xor and xchg jle (bad) mov jecxz sub or mov in out jecxz dec stos fs mov daa and push adc cmp add jne (bad) jb add adc clc out in mov lea movsb xchg pop xchg pop xchg out enter inc sub scas loopne mov inc mov add pop or dec lret mov fwait and das and repnz in cmpsb xor xchg ficomp jmp je ret push shlb out lret (bad) jbe jnp inc imul sub inc ljmp je pop jne mov mov adc shl pop sub fs xor test dec jno sub cmp rolb imul xchg stos daa fdivs std xchg dec lods rclb idivb arpl rol stos mov aad xor iret stc out shr jge xor loopne sbb cwtl test iret dec add push pop aas or mov ficom xchg lods fbstp jbe test test hlt roll or or adc dec out stos je (bad) mov add test (bad) cmpsb mov or idivl dec or jmp mov xor (bad) jns ja push and pushl cld and mov cs rclb add jb xlat add cli mov sub fs repnz cmp cmp sub xor cmp cmpb cs gs aam out sub cmp add mov or scas pusha mov insb sbb pop (bad) pop or popa cmp je mov dec rorl push mov jno or repz out lret sbb or outsb adc fstl test in loop es (bad) test mov add int3 sub mov enter scas sub add xor fdivs jae fcomps rolb dec lock out movl out mov mov test sub dec mov pop mov daa (bad) dec clc push and sbb sub push or out xchg jno dec fisttp inc jns mov xchg inc ljmp mov or or fs enter sub xor xor or daa cmp dec shll jnp rcl xor (bad) dec pop sub jb out adc daa xor pushf es push iret stos mov pop outsl dec mov lds pop and mov test mov dec mov sub cmp xor imul addr16 insb xchg mov mov add mov dec mov pop fdiv sub imul xor add and xor add int3 inc or popf jne sarl mov fabs mov fmull fldcw mov sub xchg lret out add int3 and sub jb adc fucom nop cmpsl jg ss sbb call sub fdivr popa or scas insb pop adc es pop xchg push popa and mov or jne push lcall test fldenv lock jmp std inc push jle fs sbb mov adc into push ds dec mov call inc and insl jle es loop jmp cld adc jns push imul je les mov pop lods add andb adc clc mov mov imul mov loope mov cs mov sub out mov daa ret jg test pop mov addr16 fidivrl mov rcl mov cli jg gs outsb dec mov mov sub pop and sub in mov push xchg pop or push ds and insl sub decb test or mov test cld dec in cmc jmp push sbb aaa fs out repnz scas sub or dec adc or lods aam test lds mov aas popa pop loope insb jbe mov mov add insb scas pop lret ret pop or add sub bound xchg and inc jmp add lods icebp mov out inc xor sub popa lock mov jb and xor das jecxz pop add add fnsave notl clc pop (bad) movsl in test shrb xor sbb sbb ja lods loope test xor xor jne sbb and sub mov xchg mov sti into add pop or cltd sub divb test xlat das movsb mov add (bad) pop jne ret xlat movsb fyl2x xor sub and or mov jno mov pop (bad) dec out aas mov andl xchg jle scas movsb test lds fidivr in das js inc jg orb lret scas sub pusha push or loope ljmp add test or hlt sub int jnp mov sbb es popf cmc dec fimul xor push sti add shlb out xlat xor rorl xor (bad) pop movsl pop add iret ds cli popa or xor in fstpt jmp out test ss ljmp ficoml jmp rcll mov mov out out xchg mov or xchg pop jns mov mov cmp mov test mov loopne sti out mov cmpsb mov mov outsb sub icebp sti ja and add test lods inc xchg scas mov jmp dec jecxz sub icebp lods int3 dec adc add repz add stc jecxz mov xlat shr jno inc add mov add adc jb daa test loope cmp mov jmp repz xchg fsubs hlt pop fbstp sbb jmp add enter test and dec icebp (bad) fimul mov std repz xchg jno lds cmp cltd xor and add clc jne aam mov adc xchg fidivl jne dec pop pop lds out jnp push add add cmp out xor js movsb sti (bad) loope ja push and adc jns mov leave inc clc int mov xor imulb leave lods lcall test push push ffree push mov and into and loope inc popa stc cmp mov add cmp std out xchg jns imul xlat dec xor popa xor push sub mov in or adc ja push jo loope push cmp dec xor and mov outsl lret sbb ja dec jp jo out out dec in pop les xchg out pushf popf xor xor inc jmp (bad) adc in xor (bad) mov popl stos push mov mov jle hlt in lret xchg sub push pop add jmp clc cmpsl xchg pop ss stos neg jo or test test out push dec into sub mov mov lret xor dec inc not cld out ret xor (bad) or movsl icebp inc adc sub lret (bad) push xchg push mov jae sti or div push decl (bad) out ret outsl (bad) lret insb pop dec cwtl pop repnz push stos lret imul enter mov pushl adc mov mov dec clc int and cmp mov sub cmp movsb movsl lods cmp and lds sub daa int3 pop pop out jmp lret xchg scas je mov add and out xchg fistl movsl jns imul xchg cmp (bad) stos jl leave mov mov sti xchg add mov xor add sub fdivrs ret mov out test or sbb xor enter xchg inc es adc xor fstp lds (bad) add cmp push repz mov jno jp int3 mov sbb movsb in jns loope and cmpsb xchg dec out mov fst xor or mov fmul sub (bad) pop add jp mov (bad) and std movsl jo mov xchg push push sbb jg and pop (bad) mov adc scas outsb xchg cmpsl inc and add lock test jb sbb dec nop fadds scas leave lods outsb lret in xchg mov fisttpl in loopne stc add xor (bad) cmpsb pusha daa sub repz inc mov imul stos rorb xor sbb mov std mov fmull insb outsl mov cs sub xchg xlat mov cli mov adc sub mov out (bad) rorl pop ljmp xor rclb cli mov fs repz mov sub pusha jb mov lcall mov mov jo push push xor aam scas imul jmp jbe mov int3 rorl mov push and xor sbb mov out aas sub pop sbb mov insb scas lret and jge es push into outsl out jg push movsl sarb xchg mov out or dec lret pop loop cmpsb scas push sahf mov movb (bad) xor jg jns mov mov (bad) pop lret in mov pop and add pop ret push pop jmp jmp cmc dec lea dec loope sub and xchg ja sbb dec (bad) popa xchg add aas fldcw adc cmp sub xor push sbb clc add enter mull ljmp push in daa or mov push push cmp pop push lret jo popf cld call lcall test jo ret jge sbb pop mov push dec inc sub test mov push add push push out pop out or mov sub push pop or mov (bad) sub inc push or in pop mov adc mov xchg inc sbb mov lret xchg jp movsb sbb iret data16 stos cwtl inc sub xchg adc and test sub pushf dec loope sub icebp xchg mov ja cmp mov sti and loop lret pinsrw xor mov daa imul xor test add cmp enter lret sub lcall xchg lods jnp lret jno dec inc adc mov cs iret sbb adc stos cwtl pop cld pop mov sub loop sub stos rcl popa pop bound sbb add push inc or mov jnp mov dec dec jg shr aad mov jae movsl loopne (bad) mull or rcr add or or scas repz aas or ja or jnp mov add pushf pop push sahf jo loop inc push xchg into mov ret lods push sbb das mov sbb xor and shll jmp aad push fsubrl sbb jecxz int das loope movsl cmp stos icebp mov iret loop les fadds inc into lahf jne repz ja mov out xchg mov lahf pop push push pop fwait xchg or add mov mov je clc inc out add mov out roll mov sub (bad) xor fistp scas lret xchg dec out sub clc or (bad) bnd hlt pop aad pusha and popf pop jmp insb jg add sbb insl pop in fnstenv fucom cltd hlt jp loop and divb mov dec jne jge (bad) popa sahf aaa loopne sbb xchg cmp out enter xchg sub jmp jb ret in das loop pop push in lock sub xorb add test and out movsb push sub int dec jns pop add enter sbbb dec subb pop icebp imul jbe adc and mov popa mov adc xor inc (bad) cltd nop fidivr shll lock and jg jecxz aam jno adc les dec in pop xor rcrb sti cs ss jne scas addr16 ljmp pop ror das mov adc popf dec pop sbb insb sbb sub xchg or mov sub sub aad stc sti cs mov mov add enter iret xchg adc hlt mov std je repz insb fldt jnp cli dec pop loop and dec ds (bad) mov inc add cli push stos cmp outsb sub aam push inc xor pop dec mov lods or fild aad mov (bad) negl (bad) lds lcall push fstpt or adc push cli lcall xor out or pop cwtl (bad) mov sub incb pop jecxz push lret add and sub xchg or push adc xor cmpsl out pop jg jle fs mov mov mov mov int push dec mov test (bad) pushf lods pop or (bad) shrb test es iret dec rcr test cltd dec adc push dec (bad) or pop xchg mov and (bad) xor lods stos lret xor xlat xchg stos pop loope mov mov sbb icebp sub (bad) sti or inc dec lods sti imul xchg loop into push lcall mov clc and xor sbb jge cmpsl push movsl push xor xchg and ret lahf dec push sub xchg repz mov pop push or sbb mov scas mov add popf lret nop mov lcall jg add into dec push xor call ret (bad) aaa add jo pop mov shll dec bts jo jno xor cmp inc imul inc and out xor push pop aam fstl ljmp test (bad) xor mov xor jle adc mov jno and jno negl mov (bad) cmp int3 loopne mov (bad) mov test lods test jmp lock dec sub fdivs mov jne adc and xor inc in ja icebp cmpsb ds xor dec pop mov fs sbb flds mov adc jl push lret out add xchg shll and pop inc int3 iret jbe adc lock adc mov adc (bad) icebp xchg jmp or movsl and scas xchg mov or pop jne inc jecxz cmp and stc mov out cmp shll lock push jmp cli sub mov inc sub dec dec into rorb sub dec mov repz call xor fsubrs (bad) adc jns pushf dec mov sub sub xor (bad) sbb mov popf pop xor (bad) mov in outsb sbb fdivl loop ds sub ret pop mov outsb imul dec or pop push repnz pop or shrb cmp cmp sbb ljmp in sbb mov test xchg icebp cld lods jecxz xor ret mov into jo cmp out hlt out std out xchg les stos pusha stos pop cmp popf out dec pushf stos fwait mov or insl pop insb xchg jle out mov pop mov pop mov or cmp push gs jno or push cmp push jl mov imul xor lcall mov dec or push jnp jg les lcall dec cli bound mov mov clc scas clc (bad) icebp jle pop shrl and rcl inc rclb cmp aaa pushf (bad) fist mov sub push mov push rorb fmull scas jecxz pop sti lret mov cld push imul pop das mov out mov xchg pop ficom out daa stc fdivrl ret xlat xchg xorb (bad) cmpsl (bad) sbb (bad) dec dec in into rolb or xor pop xchg aas pop jle in das jmp mov movsl repnz mov adc xchg add shrl ja xchg imul repz push bound out sbb sub sub icebp xchg sti lock ljmp or jno adc sbb dec int3 dec fidivr popa popa xor into sbb and pushl push adc mov xlat mov test push adc jns push ds pop mov mov (bad) and aas shlb or in jl into mov cs shl lahf in xchg cwtl mov jne imul adc dec add lret cmp ds add jp clc pushf inc pop or sbb dec mov aad or xorl ljmp mov xor cs imul fsubs sbb mov add mov icebp xor fnstenv and mov out mov loope lcall push add adc dec fwait ljmp scas call imull or adc shll lret xchg lret sub mov and cli lret xchg sub mov dec stos fstp fisubr dec or jp mov ja les or into jne into xchg mov cmp jl jbe in mov scas sub icebp mov (bad) sbb lret push adc ret dec sub add mov (bad) mov jmp and (bad) enter es xchg push imul xchg xchg imul sub sub stc mov adc jp sbb jo inc negl adc push mov add mov cmpsb sub push push jg or mov mov aas mov adc out sub sbb gs xor test test sbb test push sub mov xor mov (bad) (bad) aas xchg and test adc jns lea jecxz stos in int3 (bad) inc and xlat xor fiadd and inc inc cmp lret sub ljmp loop dec fldl pop (bad) push cmpsl jg cmp or cmpsb das (bad) push push pop dec stos clc xlat movsl in fstps xchg aas push aam and mov and adcl xchg dec lds add mov inc mov ljmp sub out sahf imull jmp sub sub popa lods add imul test sbb popa dec pusha jp pushf es lock lods jp mov mov push push push sti push add lahf dec pop cs sub or fisub loop dec in je fistpll cmp mov add mov adc dec es cli shr repz sub cmp cmp out mov pop es clc or (bad) aad mov mov pop push adc mov into js mov idiv js mov or jge inc inc fidivrl mov mov pop adc mov incb test mov dec test mov sub pop gs xlat ret push dec mov imul xchg icebp sub add mov jne repnz cmp pop jmp sub add decb loope pop and mov jecxz xchg lods je xchg inc bound adc xor xor lret sti divl repz (bad) ret icebp aas inc out scas jbe or sbb int3 add adc or (bad) cmpsb pop sub push add mov mov adc push cld dec lret and jmp sub xor testl adc (bad) jnp das xchg push and or mov dec jb xor pop out inc sub test pop mov movsl cltd lock pop and mov push scas out mov lcall ret js pop popf adc (bad) scas cltd js mov cmp movsl lds jge fwait sub jnp inc repnz sar push prefetch movsb das int lea mov sahf movsb xchg add and mov out sub fsubrs cmp aaa fs inc dec inc pop mov dec scas sub jl add popa cmp add and std lret (bad) rclb adc mov push cwtl jmp aam jnp and mov push imul or jb mov push mov icebp sbb push jno dec out and out xor mov sahf pop xor popf (bad) dec popa icebp or outsb out dec dec dec xchg or inc and push scas ds push sbb (bad) jmp pop cmp pop daa fnstcw (bad) movsb rol mov mov xchg push aaa adc sub sub push dec mov lea inc sub dec data16 lds sub or jmp xchg mov in pop push in mov mov je outsb idiv cmpsl daa inc outsb push cmpsb stc mov push lret int3 out mov aam adc rorb ret jmp out cmp xlat popa push dec aam push push jl ret dec das icebp ljmp mov mov pop das mov and mov stos imul pop into and (bad) xchg out repnz xchg into sti lret mov aaa cli std inc push jnp push loope,pn test movsb mov cmpsl pop (bad) push inc mov jno imul jo xchg in and lods mov push push data16 pop jecxz add adc inc or push and push pop subb adc sti mov adc in test jmp hlt mov mov idivb inc out cs lret imul xchg or add pop pop out add or sbb mov mov rcll jns pusha dec mov sbb jne es cmpsl add fldl mov add push mov xor call cmpsb fistpll sub add pop pop push dec in lcall xor pop incl push sarb adc mov push pop xor dec and mov push push mov jge jo (bad) cmc rcrb mov sub std das or jecxz div add pop dec dec mov jbe cld jmp sbb insl imul add inc pop push mov and (bad) mov jge ret pop ret je pop mov or (bad) pop jg movsb sbb sub lahf rcrl and cwtl dec adc ficomp add jle je cmc inc fimull or int popf dec pop sti cld loop add fild cmp cmpsb pop add imull out sbb pop pop fs stos cltd cmpl test (bad) adc cmp movsl pop sti jge xor stos nop jmp push push push push pop shll dec mov mov addr16 dec dec aam adc sub pop mov add popl jbe mov into jbe cli (bad) adc pop ficompl adcl js enter xor and in out dec js and push xchg cmpsl pop jno jge (bad) loop or outsb imul push xor sub mov imul cbtw inc jmp fstl daa jno leave aad in sub push pop nop out sub cltd mov lods xchg dec adc jp fldcw mov out orl sbb fldl ljmp bound sbb lods fidivrl xlat or cmp (bad) inc enter adc sub out jne test lret xor mov nop das int cli jno daa jo xchg push cwtl jmp mov sbbl fstpl push sbb pushf xchg fsubrl lods in sbb jno lret xor cmpsl mov (bad) pushf mov lods pop mov mov mov pop ja imul jle lock sti xchg cwtl in push popf ja mov stos adc cld bound add xchg push insl sti cli out movsb sbb or imul xchg (bad) pusha jmp sbb dec pushf mov or add nop jle repz xchg in addr16 mov or mov pop ret mov adc mov fyl2x popa sbb pop push xchg mov inc or repnz int3 mov imul mov mov clc jl sar pop lock lret outsl lret stc out sub jmp inc or les push sub ror ds cmp lret repz mov in xor divl push aad outsl push decb mov sub cmp (bad) out sub push jns sub dec mov ret aad jp ds scas out andl test xor daa fcom scas pushf mov cld loopne rolb add out std mov inc and cmp sub pop mov jnp,pn sbb pushf cmp inc cmpb push aad (bad) mov adc into scas dec ljmp mov adcb jle pop icebp fs int outsb out xchg jmp addr16 cli test jb lds cmp aam sub daa decb push inc mov dec and mov addr16 push mov dec sub repnz sub int3 bound out rorb push cld pop pop (bad) jne,pt cli mov xor sub add loop jo add push jnp int xor aad push (bad) jg push sub push das (bad) bound rcr mov xor adc jmp ss lcall dec out sub and loop inc mov adc dec bnd and xorb mov stos mov and jmp sub dec adc mov jbe adc inc pop loopne ret dec add xchg loop int3 xchg cwtl (bad) xchg sarl cli mov xor fisubrl push xchg testl xchg mov inc hlt mov cmp and xor mov dec cmp and lret sub xor add loop jmp into push mov lods mov mov xor jno dec inc aas nop mov add inc popf (bad) jbe pop push nop push push rcrl cmp fs int cs xor mov cmp xchg cmp or lahf mov lret xchg jmp ret (bad) or popf xchg insb sahf leave sub loope and dec and and loop rcrb sub sbb fs cli hlt clc xchg dec enter lds jmp inc (bad) jne add push daa xor outsb ret in rcrl push pop stc das loopne add mov cmc rcrl inc ljmp iret mov adc adc addr16 scas push push xor and mov or or and icebp inc insl push jmp and popa xchg or ds jb fisttpl lods pusha addr16 out scas repnz dec xor sub out mov insl pop adc fmuls gs pop jmp add (bad) ja es shrl imul mov push xor adc (bad) sub int data16 dec mov xor ja xor push push bound shll out adcl mov pop adc gs icebp scas lret testl dec jno xor stos and ret jnp scas pop inc leave add pop push outsl outsl bound push jb das decl clc cmp fdivl dec ret mov ret adc ror lret sti bound pop inc pusha or clc scas gs or mov (bad) das inc and xor mov pop test or ljmp addr16 inc pop and das add add clc jmp stos add push cmc lods jb dec sub xlat ljmp mov ljmp dec test or dec std sahf hlt popf int3 mov fcomps pop pop cli mov xor fidivr jns repnz add cli arpl mov adc loop js rcr cmp icebp stos xor aas sub sub jae sub dec clc (bad) aam (bad) sti push mov adc shrb aaa icebp cltd pop inc mov cs fcoms lock aam push jns xchg out mov and sti lret sub decl inc fimul std int3 lcall orb out addl imul cld loope clc xchg jmp lret and sbb gs and imull add jmp in lret jle xor add push dec mov repnz out push icebp cmp rol pop in leave mov adc mov iret push stc cwtl test xor scas xor imull mov and add int fsubr or test cli lret mov dec mov das dec mov pop fidivrl xchg mov inc xchg xchg inc scas lret fwait push cmp jge xor mov jmp dec xlat pushf mov cmp pop and std cltd loop jle push add and dec das loop pushl adc scas cwtl das ljmp jg in push shlb push push je cmc mov call sub mov sub jge and and jo add dec ffreep mov ss enter inc iret outsb lret stos pop movsl popf leave stc icebp (bad) jnp out dec (bad) dec pop xlat sti or fistpll sub enter imul jae daa jmpw cld sbbb pop mov leave mov addl in call and jns cs aas (bad) mov scas iret jnp lods pop jecxz das xor or xor scas sub add xor jecxz (bad) std jmp sbb push or or popa jmp and out das leave push xchg fwait mov scas mov xchg andb jae cld mov fisttpll sub push daa popw sbb xchg (bad) in mov inc add cmp push into dec xchg dec xchg sub rclb and fsubs sti inc adc inc mov jb mov lock popf into xor mov loopne fisubr pop stc inc (bad) leave and in stc sub cld (bad) sahf loopne aas mov xor mov lret repz xlat jmp pop out jle mov stc lret lret je bound rorb xor mov out push mov or sbb arpl cmp (bad) mov xchg jno fwait xchg div (bad) dec and (bad) sub mov sub adc mov or out cmpsb mov hlt dec mov mov cmp fs rcrl dec ljmp stos pop xor dec into dec and shrl mov (bad) mov add rolb cmp pop fiadd sub or and lret popf push pop movsl push jnp push ds jecxz in xchg (bad) adc mov mov stos pop (bad) scas jl fidivl mov mov add or out xor enter daa daa xor idivb lods adc sub (bad) daa or sahf dec dec in jmp ficomp cmp pop cli fisubr outsb (bad) shrb in sub cmp rorl sub insl out cwtl stos mov or cmp push out push repnz popa fidivr test add mov (bad) int jnp add dec ljmp stc pop bound lret insb fmull test mov insl lock ljmp iret adc out rclb cmp rorb pop or divb cmpsl decl mov imul mov daa inc and adc sbb push inc jmp adc pop in mov cld jle sub push lahf lods pop dec mov push or sub or xor (bad) cmp aaa and (bad) out into sbb scas mov idivb negl push jl mov mov aaa xchg mull xchg test mov push push and (bad) dec stc lods xchg ficom imul pop imull and cmp mov xor and and xchg jmp fisubl pop jecxz testb jge adc and mov push sbb sbb push jnp sbb lds sub (bad) adc stc pop lea ss xor inc mov ljmp fstps shrl mov stc out pop ljmp jne pop sub out push je dec dec mov movsb es xor inc xlat stos or inc (bad) mov add stos std cmp push (bad) sub dec scas jecxz leave add imul add adc data16 lret or push push inc jbe or adc push jae push out add jp scas cmp movsl mov fistl or ret jns dec jae and mov dec ret adcl popf jp out das add xor add pop jecxz jne adc pop xor mov mov push push xchg into xchg xlat mov add inc cmp aad xorb iret or mov ret jg push clc jl stc or inc leave lahf push js ret xchg pop dec (bad) pop xor data16 pop stc or and push jp icebp add and fsubrl mov loop (bad) mov xchg stos leave dec and js clc xor ret add add jb lahf sbb mov (bad) mov sub jae mov sbb inc jne rcll lret repnz mov das fbstp and pushf mov jle (bad) or roll es clc daa cmp das lret jns inc mov (bad) iret lds test push and jmp jno xchg jmp (bad) jle push add out popf call int3 pop or dec gs out out mov jg push xchg jg pop and test push inc in pushf cmp repz movsl insb fnstsw out clc or out gs dec add repz dec test dec out lret into pop movl sub pop fistl repz rcr mov gs out mov and repz or fnstcw dec and mov test loope adc outsb lret cmp mov adc push mov loope lret repz sub fnstcw fisttpll mov pop mov dec and xlat sub mov adc or dec decb or lcall (bad) push push sbb cmc out adc repz mov inc adc enter add xor and sub imul mov pop loop test aaa jecxz inc and sarl xor mov mov mov jae rcr mov jp push fsubl lds xchg dec dec pop or negb pop or outsb test add lds andl fimul xchg je pop push sub int3 outsb lret xchg loopne pusha frstor (bad) mov rorl popf cmp movsb mov (bad) stos xor sub jmp pop shll sbb jecxz push out lods rcll add cld movsb adc stos in inc movsl scas xor test sarb mov les scas imul int cmp ret (bad) (bad) mov sub sub sbb mov testb inc and pop cmpsb mov roll pop jl or rorl add stc scas je push fcomps ljmp cltd mov notb push insl insb sub adc adc inc leave rclb adc mov push jo gs cwtl sahf test popf test jmp lock negb test fidivr inc mov cmp add mov and sahf out lahf inc adc stc dec mov mov pop cli test (bad) lret (bad) test mov bound or mov push and jmp jne dec push clc or or daa orl fadds xchg jg mov inc push mov (bad) fcomps jb adc bound xor xchg stos lret mov lock fmull loop fs (bad) call adc fs icebp outsb repnz fcompl in (bad) cmp sub inc push xchg adcl (bad) (bad) add repz shl mov ftst imul test dec and and dec or ficom scas lret cmpsb (bad) jb adc sub cld ljmp and mov push cltd mov sub dec (bad) push pop sub loopne loope cld pop push jg or sbb rorb aaa icebp ljmp and inc out xor and mov fidiv sub lret pop nop les (bad) mov insb jp imul push lcall jnp adc stos mul imul inc mov jno mov pop jg jp inc mov push push xlat mov mov pop js jbe inc mov popa ss dec sub bound add xor push ss mov iret out ja cmpsl clc xchg (bad) mov into xchg (bad) cmp (bad) outsb call imul xchg aam inc xor mov jmp dec mov xchg lcall lret sub add and scas aam scas mov jb xchg test daa push fucomip fs cld mov or imul aas divl movw dec push int (bad) push push mov sarl lds les sarl ljmp fldl cmpsl clc and scas sub jmp or std (bad) mov xor call pop aam sti fs pop mov xor (bad) mov mov imul out repz rol and jecxz xor movsl lea fsub fist jae or decl in jns mov sub mov sbb jno ja add mov ret dec inc push push mov fs nop sub test scas shrb xchg mov mov ficomp mov sub pop ja rep pushf inc and mov push data16 pop or mov repnz push scas (bad) int3 mov pop push into outsl mov sub sti clc add sub push cli xchg or push mov (bad) enter or jle jl push push mov add pop pop push xlat xchg incb push mov das pop xlat std pop or idiv xchg fild icebp mov mov imul (bad) imul mov add mov xor pop xor mov hlt mov outsb sub adc repz divl and or jge scas ds out in adc mov push push aam add or mov push inc negl xchg aam sti outsl addb (bad) jle neg add dec aaa sbb mov clc leave dec add pushf test push ret std pusha in sub mov push push add cmpsb shrb scas loop and cmp out cmpsl push jb cmp (bad) push mov add push icebp loop xchg jle mov mov xor pop sarb xor dec (bad) loopne push mov pop sbb cmpsl jg xor fincstp inc adc jne inc mov (bad) mov fisubr pop insb and jne nop xchg or lock jne imul or das adc sti mov test fucomip lret dec sub or ljmp cmpsb cld inc fnsave pop lcall inc aaa ljmp inc push push test fcomps sub xchg gs pop scas lret enter (bad) fldl and das mov jo lods or addr16 (bad) cmp add (bad) xor lret stos test dec dec cmpsl mov mov add pop adc cwtl fnstsw lds add faddl push pusha (bad) cmp mov test (bad) jno adcb mov mov loope cli xchg and mov sub mov cmp and jmp jno pop stc daa inc and add and and dec mov xor push adc loopne push adc jle jb rorb jbe mov ljmp xor int3 push and cmc mov mov mov pop in shrl sub xor loop movzbl mov push sub cmc xor imulb lock in addr16 out mov (bad) aaa js sbb mov sub enter sub cli xchg cwtl std sub push mov das pop pop cmp lahf xchg mov xlat jnp or ficomp ljmp (bad) jp xchg sub xchg and ljmp out (bad) jns and mov mov dec (bad) in vfrczps mov and pop ljmp mov sarb mov sub jmp ljmp insl out pop sbb xor mov adc (bad) push aas dec test mov pop add fbld adc jo xchg jg in dec (bad) sub cld xchg movsb call jmp outsb pop mov fldl or ljmp shll roll sub arpl or divl int ja dec and scas lret sar cmp sub and or mov inc enter jge add or loop test inc mov lret mov bound das sub mov dec sbb jbe lock clc imulb out xor mov push ret cmp jb xchg push inc hlt pop stc hlt dec and mov cmp push pushf out dec (bad) push or mov and pop and jg mov push mov push js rcl inc (bad) jg adc imul test out cli in cmpsl jns pop jmp and xchg mov out and out pushf xchg dec jge mov jp jg (bad) repnz cmp adc xchg mov push outsl das inc mov or dec out jmp mov mov sub push and jne lret inc pop jle jp loope mov sub dec mov jmp dec xchg jae dec add pop cmp cmc shrl dec or lods xor sub add add daa call dec sbb jmp cmp mov jmp mov (bad) ljmp cmpsl test or loop mov std pushf fcompl cwtl addl jmp push loopne out das or into mov sub repnz xor cli jnp mov loopne jle (bad) in xor pop jp xchg dec (bad) repnz lahf mov pop push loopne pop (bad) daa fsubr pop sub stos idivb fcmovnbe push mov loope mov pop jo mov push dec fsubrp fs repnz out call in adc movsl test (bad) out inc test gs pop movsl push cltd loop jp mov ja les ret (bad) jne idiv add shll xchg leave negb cmp and ret jns inc mov pop sti dec cmp bound or jecxz in mov push sub fldt movsl pop int pop jno add lret std xor xchg sarl data16 popa xorb in or rolb add xor mov jnp xchg (bad) adc les lcall mov add add sub push outsl xor pop int3 insb mov inc push mov push add xchg push jnp enter cs aam roll out ds mov lahf pop adc pop add mov push orl scas pop call leave jge push popf out push roll pop mov add push int3 push das sub jle daa sbb mov pop sarl mov cmp jecxz pop sub mov rcrl aas sbb (bad) jl pop jg xorb inc sub es jnp mov mov ret pop adc ret inc xor fildl outsl out test mov imul xor push into cmp pop into shrb and dec pop lret add and sahf in leave cwtl es mov sbb jge adcl int adc xlat (bad) xor and jne mov (bad) imul push mov and add or pop push neg lcall cmp cmp xor (bad) jle adc sub mov mov inc push xor sub xor and iret or xor pop cmpsl dec mov pop stc jb or and mov push shrb mov shrb fbstp cld mov aas decl outsl sarb leave or popa mov sbbb mov notb pop pop mov aas movsl sbb adc arpl mov lret (bad) push cmp out out icebp fimul cmpsb sub or xor or rclb pop loope movsl adc xchg xchg inc mov and jge in add lea test movsb mov xor pop imul jne xlat lea mov das roll sub add lret cwtl popa nop sti cmp xor je mov out jmp (bad) scas or push stc in add jmp pop xor sub sub in mov ljmp lret mov xor mov sbb or adc mov dec add pop pop sub rclb add inc add popf stc out sar lret push (bad) sub xchg cmc push (bad) and out mov inc mov cmc pushf sub pop lds xor mov push or clc movzwl cli mov add test sub pop ret mov loop into mov push add (bad) call enter jmp cmp push out push adc call inc or adc sub mov in dec or xor cmp push adc or popa lods xor orps out jle addr16 xchg jmp adc test (bad) out fstl sbb mov pop call nop mov cld push (bad) or jne in xchg pop push lea mov dec cli fldcw jge cli pop adc xor pop add xor inc int3 adc jns sbb lods and sub arpl or jmp lds hlt mov cs aam dec inc jmp rcll ss add dec (bad) xor sbb sbb or gs daa pop outsb test daa shll fnstcw and (bad) ss jae xchg ja xchg sub xor or (bad) (bad) sub mov push mov iret pop dec (bad) mov repnz or pop jno in cli sub pop xchg cmp aam push sub movsb mov test (bad) (bad) mov push fbld movl xchg mov jno ljmp stos lods mov out lret sub out sub stc addl ljmp js lds sub into and icebp lret mov stos je dec lcall (bad) jmp push jmp into inc mov jne (bad) sbb test notb add repz mov jo xchg push ljmp icebp addb push fwait and les cmp pop aas jmp sub inc push or repnz jns ljmp dec adc ficom mov aas ret fnstenv frstor movsl icebp fcoms add xchg insl gs sub sbb inc or cmp stos adc aam mov adc or lea ret push mov mov xchg in rcrl xchg notl mov push je sbb cmp cmpsb add add lock repnz sub ret iret mov mov and sbb push xchg pop dec insb sti mov enter je jmp mov fcomps xchg scas fdivs repnz jo lds popa or lods jns shrb xor or mov cli bound cmpsl insb and add xor mov pop notl stos (bad) push mov xlat and subb dec repz in in loop imul repnz dec mov test enterw insb lods pop jmp push xlat cmp mov lea push cli out mov push pop icebp lods (bad) mov (bad) push pop add jg jno jge add sub lret pop into lods lcall outsb xchg out test push lods or add pop dec mov js repnz push or ror ds add lods jb and cmpsb xchg sub stos repnz aad pushl xchg xor push je ret ja pop or and lret (bad) hlt sub inc shll mov jns pop inc fstl (bad) xchg mov inc mov int3 inc cmp fidivrl or cs xor jmp pop xchg imul push mov mov cwtl adc sar scas inc loop inc sbb xlat dec scas (bad) hlt mov jne loope pmulhw xor pop add mov ret sub rol or imul lcall add repz nop out add sub popa (bad) lret sub sar inc shrl into ljmp cli std adc mov loopne cmp mov xchg lret pop roll popf (bad) ffree cmp xchg and or push divb pop cmp and cli cmp negb inc add xlat push dec mov push push pop jge mov mov push xchg xchg fs in cmp sub cld mov cmp or or lcall leave push bound jecxz pop xor test xor or sub stc xor fwait sub loope mov test (bad) or mov test jns enter or (bad) loope cmp dec jl mov hlt lret hlt out lods xlat mov daa xor fsub rclb in sahf add xor rorb pushf rolb cmp test cmp add sub std jb inc xchg fcmove mov scas push test push pop sub scas pop pop cmp jbe pop fistp jle and mov scas test sbb fildll leave lds (bad) mov sbb (bad) pop outsb mov jno movsl inc mov lods leave shr lret insb popf mov push add xchg dec movsb xor inc jmp in daa push ljmp fs sbb jno sub pop iret mov lcall jg inc fbstp outsl mov jp (bad) ret rcrl das fldenv enter sub sbb inc dec movsb ljmp and or add pop lock jl push out mov cmp int3 adc mov xor push cmp shlb pop cmp jns xchg pop lea inc adc stc adc mov sub mov xor jg mov inc (bad) xor lahf outsb mov sub pop mov mov and add int mov inc lret sub into (bad) repnz scas mov (bad) cld cmovnp js and xchg and add jno mov mov cmpsb pop and pop sub hlt loope (bad) jbe in ljmp ret add out cld push mov pop pop xchg push sti int outsb mov dec out adc add lret jno scas lock mov or cli jno ds rcl jb add ret sub mov outsl popa inc jmp or dec add adc dec sbb push and or fidivl into leave sub mov fidivrl mov jp lcall xor mov add pop (bad) xor push push and stos int ds (bad) pop push add sub lret jno fistpll dec std jnp daa shr cmp cmpsl (bad) jb pop stos push push ret mov xor (bad) jae cwtl data16 dec xchg rcrl jmp xor cmc sbb iret sbb xchg adc mov xlat imul dec cltd xor jb out repnz jge mov mov das test (bad) aaa adc rcll daa mov sub fnop and pop dec mov iret sub cmc jne (bad) lds mov mov fcomps sbb mov fcompl daa lret mov cs repz lcall inc pop scas mov sub dec dec in les sbb and push out mov xchg ljmp and xlat sar mov and jae and mov test cmpsb dec xchg in out (bad) and mov loope in push mov mov add (bad) xor cld dec mov int shrb dec jno add cmpsl mov movsb sahf test cmp fstpl mov pop sahf sbb sub mov aad in cmp adc fildll int3 sub xchg repz in cltd (bad) jne bound xor pop xor mov xor mov pop adcb dec pop insl adc pop arpl dec xor mov movb jne mov clc stos (bad) clc roll ret and lea rorb pushl das call notl icebp mov ret and sbb mull xlat ljmp jle fiadd xor jmp push out (bad) enter push in add ja pop lsl and cltd (bad) xchg rclb cmp repz sub ss out out xor mov xchg decl test mov mov pop inc loop repz cmp push repz cmpsb cmc adc mov jg mov pop inc fldcw notl add xor mov push jl in jmp cmp push (bad) or and loope or or adc sarb and mov inc pop insb popa mov je mov ljmp adc cwtl out movsbl nop sub test sub fs xor (bad) sub lods (bad) jns imul push imulb out stos mov das sub xchg jnp dec mov sub inc adc pop xor push inc stos xor jb pop sbb fsubl ds fcomp mov mov inc fstpt in pushf stos push ror push pop fisttpll mov jg dec clc inc test and repz cltd and gs inc pop or out stc das dec int3 rorl rol adc adc mulb mov daa aam adc les add ljmp gs mov mov ret sbb mov push jne out xchg push add mov scas arpl jmp ljmp scas jecxz xlat lds inc rorl sbb push imul mov imul sub mov sahf xchg pop aam (bad) xorb inc jecxz nop bound rcll ljmp adc dec xchg test dec mov out push sbb idivb mov imul nop lock xor shrl cmp cmpl dec dec sbb fucomp and out lds aaa dec pop pop push mov pop in movsl clc mov adc clc mov xor mov fstl mov push aas test mov push sub (bad) fdivrs leave ja out add adc repnz pop clc push imul xchg push pop sub ds lret xchg bswap add mov in pop jb bound not imul lock sub xor or aas sub or into and mov daa mov sbb lds ss repz adc in jae nop dec xor dec xchg or (bad) mov fimul or fwait mov leave and add rclb shrl dec inc int xchg inc add pop fsub pop pop mov mov gs xchg cltd jmp dec xchg push pop and std lds imul adc jmp lret dec fdivs jle jb or dec repz jl mov (bad) xor pusha sub lods and cltd aas pushf mov jg xor xor dec stc mov leave xchg inc adc out jns cld repz sub bound jmp scas adc sub (bad) and xor pushf call add jns cmp or pushf daa mov push ja ret int3 or xor mov pop or in or jl int das mov ds lods pop loope and iret addl add jmp mov fdiv pop mov sub xchg dec repnz roll dec mulb push or pop sti add add (bad) outsl jmp inc sti test adc jne fnstcw movsl into jne dec (bad) push cmp cmp pop stos fstp xor cmp add repnz arpl into mov jnp test rcl repnz xchg ret jg repnz lret movl jns imul jae or lock loopne negl fisubr inc or jecxz popf cmp fnsave mov sbb mov jl add das lock mov sub dec mov int3 divb pop (bad) sbb xlat sub and and movb xlat mov je pop push jle or dec sti retw mov ja pop push ss ret xchg loop jae and add jnp or inc jae cmpsb lea addr16 movsb rep mov sub xor pop repnz cltd scas cmpsl idivb xchg in addl cmp out adc aam (bad) mov push jp fnstenv or sub sbb add cmp dec jne xor push loop push cld sqrtps aas mov daa notl adc cwtl call xor (bad) rcl daa aad fstp cmc xchg mov imul fabs and xor shl push orl or ret jno jnp fidivr fsubs pop fcmovnb cmpsl push lds gs mov pop icebp xchg mov stc addr16 xlat mov xor test mov (bad) dec pop or adc add xor xlat call mov pop mov or clc data16 (bad) andl int3 roll cwtl mov adc scas lock push lret pop mov sub adc mov fimull mov scas lret push pop cmpsb fldenv mov push shrl insb sahf in mov jl push bound add data16 sbb mov sbb sub and ja arpl hlt pop xchg repnz sub xchg or cli cli jbe adc sti sub jmp pop (bad) enter and loopne icebp or lret sbbb cli cwtl dec sub mov lret push ljmp (bad) test pop or lods pop and in pop in xor jecxz popa repz das in outsb repnz out and in mov jle pop xor pushf dec imul pop jmp pop mov nop lds or jo xor pushf lahf fldcw enter or and loop mov outsb daa push sarb pop mov ljmp push mov add push push mov xor in cmpsl ja pop adc sub into ljmp and and jne push sbb (bad) lods ja jmp fbstp lock mov lcall jae daa jg pop cmc mov icebp pop in adc stos into jae sahf xchg decb mov lahf sbb imul push push mov pushl popf (bad) mov and loopne iret (bad) popf in push sub jg imul push jg loopne nop or adc in add sub cmp jl pop lret repnz fwait mov fbld dec insb stos jb lret push scas pop (bad) mov scas or sub push cmp imul and sbb dec aad out xchg out aam jmp (bad) lcall cmp jge or adc inc cmp fldenv popf dec (bad) cltd leave outsl lock mov lret jl dec mov adc jne imul add mov lock and jnp (bad) jg (bad) adc xlat jge lret mov je push xor jns aas loop xchg out lret aas js idivl adc jno test sub sti divl imul lods mov aaa mov pop and and add jl call (bad) adc ljmp xlat adc sub jmp xchg xchg test lret mov lret xchg shr lret push pop push les sub sub dec out imul dec dec add test dec sub mov and (bad) cltd mov or sub cmc mov aad addr16 cmp shrl addr16 bound push or and sub mov lret testl xor cmpsl rclb out fisttp popf mov inc xchg clc push add adc mov stos adc outsb dec xchg jmp or mov pop or cld loope xor jmp iret mov cmp leave outsl call stc xor out mov jo add loop jb xchg clc mov mov mov sbb repnz mov pop pop bound (bad) xor lock mov subl or pop xor and mov adc repnz popf push mov lcall popf mov add add or jmp (bad) fmuls loope stos jecxz pop call or add out or inc mov mov mov jb cmp push jbe dec and or movsl lds fistpll imul sub pushf jl (bad) loop push push std sbb rcrl negl adc out xchg mov sbb insb xchg mov cmp (bad) lret xchg dec movsl (bad) mov (bad) rcll (bad) loop loop test lret xor hlt mov cmpsl mov cmpsl mov mov pop xor ret imul fnsave std movsl push sub jbe push lahf inc inc test ficomp pusha popa or add (bad) pop rcrl mov jecxz pop (bad) mov mov push push loope icebp xchg dec mov in xor xchg push mov adc mov pop jmp jb enter sarl adc fstps xchg mov leave and popf adc sub lock xchg imul fcmovbe (bad) lods (bad) imul jp inc and js stc mov outsb daa add shrl xor (bad) mov mulb mov mov inc xor mov add xor mov cmp lret mov test push or mov xor push xchg jmp mov outsb jae add stos cwtl decb mov dec std xchg fidivrl jo sbb jb or mov jb out clc jb into xchg into std sbb test out cwtl fsubr mov sub out aas inc xor mov adcl mov (bad) fdivr sbb out push je fildl xchg pushf mov cmpsl sahf dec call or rolb sahf aad dec add mov jmp jns sti adc xor ja mov or out xor clc jae jnp sahf rorl out xor fnsave and and add mov xchg push xor pusha popf push jecxz testb and shll cmp out rolb and xchg pop mov fildll into cld jmp out mov xchg (bad) insb mov negl or loopne out jno call pop daa push inc lret xor ret in xor dec loopne ja cmp clc and call call xchg das call mov adc xor cmp andb loop inc add scas addr16 fsubrs mov dec and stos lock cld pop out adc stos bound int3 sti lahf adc out jbe dec mov jo fucom movsb dec jmp mul and mov push pushf ret mull adc mov insb sub sub and inc push imulb (bad) jnp push mov jge jbe std jl and pop add push push xor jg dec or loopne pop pop add ja cwtl imul push sub mov mov ret sbb jge adc inc xchg or fld lods pop inc cmp stc adcl imul stos sub pop iret jno movsl aad lahf jmp aad mov jg out mov add lret (bad) jo mov sbb mov adc mov cmpsb sub mov xor sub push or add cmp push xchg xchg mulb mov repnz pop jge mov cli mov and or dec loop ljmp repz not xor or and inc pop add in insl xorb in add (bad) sarb addb jae xor call add arpl divl or or test mov mov roll mov roll cmp jb cmpb ja add pop cli stos mov push push push popl lret pop scas push jmp testl nop loopne dec enter clc pop je movsl cld gs out adc scas cmpsl fcomps mov xchg mov xor inc adc sub decl ret or xchg cmp mov outsl ja sub push jge incl pop repnz mov add mov pop lret pop enter push ss jg lods es into (bad) mov push jae push test cmp fmull jmp ja std aam adc sub jo ret mov push decl pop ja popa in repnz or call adc (bad) mov cwtl xchg pop mov ret cmpsb int xchg sub sti sub xchg fnsave mov jo add inc sbb movsl fmuls or gs out loop xchg mov insl or add jg std sar daa mov adc fldcw push int jg sub jne lock (bad) sbb add mov movzbl int3 mov mov mov or jbe jmp adc sub xchg loop push add std push xchg sub inc push movb dec sbb test cmp (bad) cmp sub jge in imul mov sbb xchg (bad) cmp xor cmp je popf pop and mov mov adc pop xorl cld sbb (bad) mov das push cmp iret mov and shrl pushf jmp (bad) mov xor notl mov sbb and loop mov adc xor dec mov pop cmp lret pushf jle add sub cmp mov out pop push scas out mov push xchg loopne cmp mov cmp outsb mov xchg stos mov loopne mov mov rol (bad) out xchg stos test and xor icebp lahf stc cmc dec nop or repz rorl shll xor insb add or ljmp sub or loop (bad) mov pop mov stc jle fcomi xchg xchg adc add bound add mov mov popf hlt lahf popa ljmp jecxz jb test and and lret dec dec mov xchg scas push in mov js test sarb mov int3 lock mov xor lret and jno inc jmp sub fbld pop sub mov jae mov jne xor jnp and call mov (bad) xchg outsb xchg push sub popa daa xor jnp sbb out xchg pop fwait mov dec daa (bad) and ljmp orb sti data16 or and or pushf dec out test add mov cwtl enter and pop or lret xlat inc mov sahf movsl lcall mov sub xor das cld (bad) and xchg mov push inc xor frstor pop or xchg insb sarl push add mov dec push das fsubrl call and pop js and popa sbb xor sub dec xlat pushf mov inc mov xor cmp jge add loop jne inc push mov js fisubr mov shrl mov add dec adc imulb lret sub fwait mov lret movsl mov mov icebp je add in out pop adc cmp fsub ss push imul loop test mov aad rorl cli sub stc jno mov scas outsb imul mov mov jle in mov sarl mov mov mov roll mov enter lds pop mov fcomps xlat int3 test cwtl sub cmp cs lret roll sub pop fs das lods adcl fs aas cmp inc xor stos adc mov xchg push sbb lock xchg adc mov mov (bad) xchg mov jg push cmpsl divb xor inc sti daa or lock mov (bad) sahf mov stos sub idivl or mov dec sti jmp and push xlat jbe sbb xlat sahf pushf mov mov aad sub (bad) call fildll dec repnz xor inc adc fxch ljmp mov jb mov xlat pop cld jmp sbb pop add xor xchg adc and mov loop xchg sbb cli mov lret out xchg lds fldenv cld scas push cmp mov push xor icebp sub mov xor mov mov inc dec mov dec cli sub into leave (bad) sub sub pusha xor or xbegin mov wbinvd mov mov (bad) or loope sub sti dec mov or pusha dec test popa inc mov aas flds aaa pop clc in pusha dec clc popf xor or stos xor gs into pop xchg sbb lret aam ljmp cld adc pop and mov inc jns dec xlat cli and xchg mov add and cmp cld xor inc (bad) mov std xchg xchg mov cmc cmp cmp xor xchg mov xchg xchg mov ja ret je (bad) xlat std mov mov and jmp fs stos mov xchg push shll int push xchg mov test sub test xchg inc gs scas std adc fs sahf xchg mov xor add shrl cmp std push cmpsl (bad) and add sti call scas imul xchg scas mov dec mov pop jl sbb add cwtl rcll aad fsts cmp adc and or and mov (bad) mov push fucom ljmp lret out into movsl pop imul shrb dec icebp int3 adc ret call pop pop daa cmc sbb (bad) push cmc jns in ljmp add lds repz cmp mov lods pop add dec sarl cld pushl sti sub mov fiadd sub xor repz mov mov imul adc or and sub dec jbe or jbe xlat repz in adc sub cmp (bad) or xlat adc mov das sub sbb xor cwtl popa add mov fcomip leave xchg push sub mov sbb or or cmp fmuls add mov sub mov pushl out mov int3 fdivs pop (bad) dec xor sbb or dec clc scas lret rcrb dec repnz (bad) xor sub aaa and dec cli cmp mov jge push push adcb mov mov xchg clc mov incl xchg js jb xchg pop fcoms pop (bad) or cs cltd pop clc ljmp and das testb or mov cmp mull ficom xor adc mov (bad) loopne sbb cltd xchg scas adc mov mov mov adc fstl sbb cmpsl sub mov mov or cmp xor cli repnz xor pushw xor cwtl cmpsb iret xchg outsb inc xchg jb mov inc lahf sub mov sbb lds iret test movsb and mov int3 imul cmp mov cmpsb cmpsb push adc dec sub jne in pop leave sub sub popa inc push and ljmp push inc int sti out jecxz pop (bad) push icebp dec imul (bad) das and inc cmp mov dec lret xlat stc nop cmpsl nop popa mov dec mov iret cmp xchg sub pop push shrb leave xorb mov push ret lret decl and or dec and sub xchg int3 add add mov incl or sarb push ret add nop add rol sbb pop ljmp and test int3 xor sub (bad) ja ds inc mov pop popa or jg outsb dec lret out xor fildll gs and and leave add hlt lods repz out and popf aad out out jmp sub sub dec call in daa pop inc dec data16 popf out adc sbb or xor dec sarb loop push out out push out and push adc leave xor jl aaa mov sbb cmp dec and (bad) pop jp dec inc mov xor stos mov push leave add mov negl les cli mov pushl add add cmp inc cltd and mov or in adc mov stos xor insb dec sbb ficompl add sub fcoml sbb pop xchg lods pop xchg out sub xchg mov adc mov (bad) mov dec push pushf mov and test (bad) jbe leave pop loop xchg mov out xchg jno lds jmp loope push jmp add lret leave xlat adc popf pop mov aad mov iret xchg inc or pop mov dec mov xchg jl or inc jno mov ja (bad) imul out test or lahf adc jmp lret popf cmc xor es mov xor pop inc pushf sub push pop aaa loopne sbb jl push lock fs mov mov mov cli mov lods inc mov into cmp adc xchg mov sub push jns aad shr ffreep leave movsl jg inc mov sub push push sub insb dec push and (bad) pop pop movb xchg notl xor pushl inc and sub pop push adc dec xor fstps fistpll mov jmp (bad) push and popf int3 stc dec and sub sub inc (bad) fstl jecxz fs xchg fs mov jge inc das shll sub sbb roll mov scas daa loope adc mov push mov cmp jb (bad) jg int mov lds lcall icebp ljmp jle and cmp push sub push pushl fiadd mov jmp dec ja mov mulb pop out mov call (bad) or and cmp push inc lock in mov inc fimul dec jmp xchg jle out fstps sub and and cli lret push (bad) push cmpsl aam fdiv add mov push out jle mov ljmp outsl repz rdtsc jb pop (bad) adc mov xchg inc out cs xor add in mov mov dec or or fstps sub xor inc mov or cmpsl push lds (bad) xchg inc testb or faddl or add out lret mov les (bad) sub or test mov add mul lahf mov dec dec sub es and pop ret and jmp hlt xlat scas add push pop pop mov mov inc lret xor pop movsb imul repz out mov xchg incl ret xchg movsb cld les inc lcall lods stc ja adc and andb mov pop mov mov mov fistl fildll pop push add out cmp (bad) loope adc icebp sub aaa into adc adc sub mov addr16 sub ret rcll jg xor sar mov pop loope jg mov rcrb mov test jle and dec fs cwtl sbb inc mov or sub xchg out pop and pushf cmpsb sub jb sti push test je push cli into push lock (bad) test hlt pop xor mov add out test jmp xchg iret mov add ds mov pop dec dec faddl jle jmp push add xchg cmpsl pop xchg stos daa add sbb pop and or cld jle or test sub loop pusha test fidivrl scas arpl stos push inc cmp in cmpsl add scas cwtl pop call mov ret stc sbb xchg mov ds or mov lcall mov push sub jmp dec xchg mov inc popa xlat add dec xor mov cld rol icebp pusha das cld or repnz inc xchg daa fadd mov or fisubl mov fidivrl adc std inc in popa imul inc (bad) mov sub out and and stos mov into mov imull sub div out pop sub ret jo fiaddl sub cmp jo xchg pop push stc or test xor xor jecxz mov xchg xor mov sbb into sub daa pop mov sbb xor (bad) push adcl pop bnd pop jno sub repz lret xlat pushf cmc mov imul adc xor push and push or (bad) jo sub idiv push imul dec cmpsl (bad) jle (bad) aaa lcall xchg cltd in add cld (bad) int3 xor negl mov jl push adc lock insb xchg mov stos pop mov icebp sti inc push inc repnz xchg and call xchg mov xor fstps xor stc ja scas ja mov cmc sub xor sub xor xchg adc or stos sbb mov mov into mov mov mov ljmp cwtl lret dec pop and mov adc dec out stos popf mov cmpsl out in loopne cld push xlat add push inc das jb jbe pop shrl mov dec repz mov and mov scas jmp outsl les mov and into and xchg add cmpsl mov mov in lcall jg pop imul (bad) stos decl push cld jg mov ds leave jmp pop push dec xchg and inc jp enter out push mov test adc push pop mov scas dec add (bad) mov mov mov outsl imul (bad) leave and imulb jno ret or lret fcompl adc (bad) cmc lea sub cmpl mov push out pop (bad) jne scas divl adc xor xchg shr mov insl mov gs mov and mov imul mov mov fildll gs popf insb arpl out cmp adc ret xchg hlt popf lret pop out ja les xchg lock leave aaa jl shrl or fisttpll clc lret icebp hlt add dec jl dec mov inc das sub jl into or lahf sbb or mov mov and test sub xor mov lret mov enter (bad) and dec mov dec inc mov xchg mov inc xchg ja mov lds aam cld leave icebp je pusha or add in in xchg pop shll and pop mov ds lret jbe out lret es stos inc fsubs sarl adc or or mov stos mov jns incb or ja bound jnp mov push pop push out test add scas mov sarb lods scas movsb xor push mov mov notb or push xor lret adc xor sbb call sarb aaa mov adc or mov fisttp sub ds dec icebp pop sub sub ficoml xor sub nop mov imul cmp jns fs scas mov xor mov sbb mov mov ret lods fisubrl in mov xor inc mov pop or push xor xchg frstor aaa jbe les or xor ds pop ljmp call push das xlat adc test fimull pop fcmovnb leave xlat jg push fistl mov push incl call xchg push in pop sbb jmp jg mov pop insb adc stos mov add (bad) mov (bad) jge imul push loop icebp cs sbb mov jns lods mov (bad) lret and push mov ljmp adc ds pusha leave out mov sub adc and mov push xor pop (bad) sti sub sub add lods xchg add dec mov clc mov scas lahf push inc adc aam pop dec mov icebp test push out sub cmp pop das add notb pop js mov mov add pop sub xor add lds sub mov cltd mov rcr pushl js out mov push jge fistpl push mov or lds (bad) mov push xor stc or xchg out out dec ja fsubs sbb lock ljmp jmp fyl2x outsl mov dec push mov roll mov adc mov les mov stos add and pop movsb gs mov jnp add repnz dec (bad) adc mul cmp into fs xchg lahf adc popf int adc push mov and xor or add fsin adc inc mov mov aam xchg stos out mov push aaa pushf ss cli mov adc ret stc out dec daa add jne lods mov adc push popf push push in xchg pop mov add clc pop cli sub cmpsb sub lds lret orb push stos (bad) cmpsl ret lcall xor insb out (bad) jl je xorb clc push scas adc push push (bad) inc inc loope mov pop push dec (bad) pop inc pushf jbe mov adc push dec jbe ljmp cmp cli (bad) jne ret sub xchg out jl jne xor cmp (bad) leave sub push dec lret and sub fldcw scas and int inc sub (bad) xor andl cmc mov or adc lahf mov out scas or int3 xchg push sub stos sar push mov clc xor add sub mov and dec mov add or lret pushf jno loopne fidiv pop into cwtl lahf test iret dec sbb dec mov add lock ja lahf insb pop xchg (bad) inc cmpsb (bad) jmp adc leave int mov lret cmp cmp mov sub rorb cmp sub mov dec xchg les ljmp sub ret mov jle jno popf or xor ret cmp pop pop jecxz pop mov push cmc rcr cmpsl fdivr mov out push dec mov aaa iret dec into (bad) add lods pop xlat inc sbb fbld dec and mov ds loope push xchg adc icebp inc cs add xlat xor (bad) ret pop mov add adc pop cmp or jmp or or push mov shr lods push xor mov xchg push imul imul sbb int xchg xchg out sub fidivr jle das rcrb in outsl lods in lds add or repz pop aam les or clc or fsubs rclb push sbb clc hlt and mov sub mov hlt gs cmp or mov push fdiv std jns int jg dec push xor int add add and sti mov int scas int3 jp mov fucom imul nop movsl lods movsb rorb sub dec xlat out loope sbb cwtl push sub les icebp (bad) fs sbb jae mov ficom rcrl sarl and xchg or push xor sbb ss and add stc add jecxz dec call hlt cmp xchg push int repz pop insb gs clc xchg jmp cmp jmp sbb mov rcrl mov xchg stc dec mov out add loop js mov shlb (bad) into inc in lods push jne int add dec sub pop and loope lret scas addr16 jmp clc call icebp test cmp rcrb xchg into cmp and clc aaa sbb mov dec cld mov jmp pop fist mov mov lock inc mov lods ret cmpsb sbbb test sti out and xor ljmp les out push stc jmp lret mov mov mov cmpsb mov std cmp mov sub xlat repz call mov stos int3 cs stos mov outsb into ret ljmp fsubr dec orb xchg add xor dec mov xchg movl xor rolb ficomp std mov (bad) ja rcrl mov iret mov jg jb call test test add call mov clc movzwl pushf dec sub das gs test orb jmp testb mov mov into scas jno mov sub das mov in fisttpll dec loope or jbe sbb or mov sub loop cmp sarb push push mov xchg fwait sbb in fidivrl orl in xchg pop or push and pop push mov je imul ret fisttp inc outsb mov mov xor push fistp lahf (bad) pop lods fisub sub push in das sti cmpsl mov and (bad) push cwtl xlat mov or dec ljmp decb pop into jne cltd lock sarl cmp (bad) pop mov rorl or rol cmp bound inc push mov push pusha cmp mov sarl xchg call mov outsl mov add outsl jp pop sbb or neg (bad) xchg push mov mov mov subl mov idivl xchg out ds push pop pusha push jns mov dec mov push pop cmpsb test add icebp (bad) mov mov cmc or ret jmp sbb jns jno and inc sub cli cwtl (bad) (bad) or js inc or fildl mov inc in push push ja and cmc xor daa xor pop out js loop sahf rcl inc shll adc or mov repz (bad) jne int3 push out inc subb mov add outsl add sub in or dec jbe out mov test int3 rcrl cli mov lock pop jnp add rcll bswap sub xchg adc pop lcall mov mov add add rolb inc pop mov sub and std push mov dec sub inc jnp in sbb rcrb xchg rcl mov pop pop out stos dec nop xchg pop mov and addr16 sbb push sub xchg cmp mov icebp outsl dec mov jge mov sahf xor pop mov inc or repnz aaa xchg repnz sub lea jns shrl sarb lods dec movsl out mov jecxz pop mov sub out enter pop insb and jae dec jl inc loop mov fildll inc xchg push add sub ljmp sbb mov push sub (bad) lock std sub ljmp imul pop and (bad) add xlat out xor or out dec jmp sub and (bad) dec (bad) ljmp pop push sarl ljmp flds sti cmp xchg popf pushf das out and ficom sub imul mov stc repnz (bad) xor sub stos or std fistpll sub mov out (bad) pop jae bswap cltd or jg popa lret div xchg dec pop add xor adc pop sbb ret add dec xchg mov sti int3 mov daa and xor or lods aam or lahf rorb add (bad) cmp lret lds sbb adc dec xor (bad) push gs cltd pop aas (bad) (bad) mov inc ljmp daa and mov xor sti adc sub loop and les fnstenv pop push xor mov ret push (bad) sub xor ret and dec shll mov ljmp xlat jae xchg add xchg loope mov xchg and add int push gs mov rolb push fstps add outsb (bad) mov mov cmp inc or icebp or notb imul out inc imulb mov inc inc scas js mov incl scas dec sbb repnz out rcrb or sbb xchg and cmp sub xchg sbb push sub mov adc iret sub in xchg dec mov out inc out xor mov mov pushf cmp daa cltd xor into ret rcll into (bad) or fucomi sub dec xchg mov (bad) pop dec lret add test push jp out ja cwtl (bad) fmuls aam ret je pop (bad) rorb dec dec xor lock inc pop andl push roll daa jnp es push jne imull ret mov daa pushl xor jb dec mov fsubl incb (bad) ja cmc xchg (bad) cmpb push push add dec fild pop scas jnp push aas popf xor insl leave jge lret fist and outsl fwait (bad) rorb hlt push bound sarl shl cli pop mov jnp rcr stc (bad) dec mov pop ljmp das push adc mov sti sub aam in mov jne cltd or stc jne xor lret sub (bad) mov (bad) in stos cld xchg lret gs in sahf (bad) push icebp mov mov pop jb pop xor xor lretw sub and inc or (bad) out xchg lock mov or ror es xchg mov pop push cld push lret mov les mov or cltd cmp ljmp int3 mov sub scas int3 pop clc ds daa idiv xchg cmp sub xor pop push fnop push popf xor sub inc icebp cltd ljmp push xchg fnop das aad scas arpl sub sub into pop and andl shlb add or push fstp addb ja xchg push mov in jae pop test bnd push pushf dec mov xchg pop sbb shlb movsl pop sub adc mov sub jo shrb sub push add and or cwtl and xchg push lret lock lret andl lret and and mov jmp jne xchg daa jmp daa xor inc mov jg mov cmp lods lret xchg push add fs and jae das insb sbb (bad) jbe in and mov add mov repz dec out inc xchg (bad) int enter call stos clc jecxz lret stc cmp add repnz cmp ljmp cwtl mov imulb mov mov hlt inc push daa mov fcomps shrb sbb ss jg lret leave insl push imul mov ror test pop (bad) cwtl jmp clc daa movsl mov jb daa lret mov aas fucomp jle add add push ret mov add fcoml addr16 mov jmp mov pop dec clc mov pop mov movsb pop clc out cmp jo and mov dec insb out mov es pop lcall sub push xor lret outsb sub ret xchg ja scas mov daa scas xchg and ret inc loop xor mov arpl notb in mov mov or fcompl push nop out sub xor scas mov rolb imul into aas pusha or add daa and stc lea test dec arpl sub xchg enter sbb ret jg push lock lret mov icebp push popf and popa sub sub sub gs mov sti mov pop and leave aam enter add mov leave pop push push pop jmp test push int3 xchg ja sub mov lret push rclb jns or dec (bad) pop add lcall jmp or push mov dec out push cmp add (bad) int3 pop mov loop and mov mov cmp mov adc and cmp sub and (bad) lods xchg (bad) loope mov xor out (bad) adcb sbb into mov loop (bad) stc and ja lds dec push ret jns test sub add push dec pop test adc iret incl adc and add jmp push repz aaa inc stos loopne add mov mov lcall (bad) movsl cld std in and fstps test cltd push mov je push xor dec aas mov adc pop add xor add and xlat push jbe lret or and cld cltd sub sub sti mov out pop test xor xorb out mov pop xchg std or sbb sub jmp and and mov inc ret sbb xor push dec in dec daa pop dec daa jne xor out in jmp cli fstp fsts clc out mov push in dec xor pop ret push or mov xchg jne mov in sbbb mov cli jle jmp cmc fstpt mov leave add sarb or ds push add sub cmpsb daa in das std sbb fdivrs fcomps out sub rorl ss xchg in or jne test movsl mov icebp inc xchg cmp mov dec mov add out idiv adc loop (bad) xor sub insb xchg dec mov dec idivb and inc jg jae pop test or mov stos lahf lcall in fist xchg or das xor ja (bad) mov xlat ljmp loopne and mov jecxz jb sub inc movsb or mov sub dec mov aaa rcll ficoml xor or adc cs cmp gs sti mov pop and xor ja cmp js ret pop mov lret sub adc sub sub add or cmc into outsl hlt mov sbbb pusha sub sub mov cwtl or js and jmp (bad) cmc xchg pop popf in push js daa out mov dec adc mov mov xchg mov loopne sub mov sarl push or roll add inc add xor mov sub mov sarl es fs iret dec mov cmp xor out sub xor mov cmc xor push add jmp and pop bound cmp (bad) xchg pop iret out jmp jmp dec idiv mov and pushf sbb stc mov inc xchg leave ja pop fimul popa mov dec std repnz notl cmpsb popf cwtl test cli xchg push lahf and aam bound fcmovbe cwtl add pop movups and repnz dec aad aaa adc loop rorl das lret cmpsb dec xor cli in fcom mov mov add shr arpl and (bad) shll mov lcall xor popf lcall test xor mov les mov dec mov je mov mov pop mov in lock sbb sub subb insl popa or xor (bad) loop push dec or add xor stos lret push sub add mov add daa xor sub xor jge xor lds mov outsb (bad) cmc inc xor cli cmp iret lds dec sub or cmpsb push das inc xor cmpsl xor loop add jno xor idivl mov test imul std cli mov (bad) mov mov adc sub dec out inc imul leave or adc dec fcom idivl xor xchg inc into add sub rorl jne fstp ja jnp add cltd loop xor das bnd pop xchg leave fldl divl push sub fucomip loop (bad) lock mov ficomp iret fwait push cs stc xor movzbl iret arpl dec call adc add jb test jmp in aas lods inc decb gs lret sub test sub (bad) int3 aaa sub mov dec je (bad) scas sub call mov xor (bad) sub movsl sub sbb enter inc aad add mov aas daa xor pop mov rorl xchg pop out mov pop lret add movsl dec sahf inc fdivrs sub and mov leave jno lods push mov repnz jne or sub nop clc inc mov dec movb call cmc iret out fldl mov test add xor add divb es mov inc outsb rorl mulb ljmp imul jno pop (bad) mov sub (bad) mov into fimul push cli inc sub call int daa bnd mulb xor pushf jp inc (bad) adc xchg ss jb out jle jmp mov ss sbb (bad) pop leave repz xchg dec jno lods sub sub mov xlat pop add pushf mov int or and adc out adc inc and imul cmp sbb aas addr16 fist je icebp dec insl jmp ror dec jle lahf rcr dec dec clc sub ljmp jns aad sbb mov ds pop enter bound (bad) jbe shlb xor xchg (bad) aaa xchg push inc das cltd sbb sub cmp test jecxz sub inc imul and inc jmp jno int3 movsb and repz add lock mov mov pushf mov dec ret add call movsl fildl es push iret sub int ds fdivp push mov pop xlat fcomps dec clc mov and rol lds mov push jbe nop/reserved dec cmc nop mov push jmp rcll jecxz jecxz (bad) test mov pop inc push mov xor popa pop icebp outsb in mov mov sub rorb (bad) mov sub xchg daa and lcall pop imul add stos sub call cld dec fildll dec add pop cmp jg cmpsb cmp pop jecxz das sub mov aas loop push jbe gs mov mov fdivs cwtl aaa popf pop jo lock outsb out das shrb cmc loopne jecxz loope adc (bad) in pop movsb in roll xor cmp lds sti xor sub fldt imul sub fmuls dec xchg mov cmp jl std mov das (bad) notb jp test decb adc mov into mov jno rorb xchg mov jb xor clc adc fimul fnstenv mov imul repnz mov bound xor data16 adc jmp mov sbb fiaddl aas adc fsubl mov popf in add stos sar scas xchg mov sarb (bad) and imul push (bad) fnop sbb cwtl mov or or das mov std cmp addr16 xor jmp adc or cmpsl push gs clc mov jl push mov or scas (bad) xor sbb clc xor lods sbb repz daa jmp out (bad) and dec enter in cltd sbb outsb sub lds mov fiadd fs mov icebp jbe pop fidivr test pop mov mov rcll dec mov xor or or aam lret push mov mov sbb test stc test leave or push jno xchg xor ja mov dec mov mov lret mov mov sub xor or pop dec out bound in lret inc lahf call xchg test in cmp ljmp xchg jnp pop out jge xor out lret into sub es orb das sub dec adc mov popf (bad) fstps mov pop pop mov lret das xor pop cmp iret push adc ret in xchg mov or cltd push (bad) mov icebp mov gs adc mov bound fdivs xchg pop call in arpl lods ret add mov add int xor dec pop or cmpsb mov aad imul cmp dec out mov js jmp lods and jp jo adc mov dec and lock in sub outsl xor cmp arpl idiv dec push dec mov clc inc cmpsl lods sbb pop lahf hlt inc mull into mov inc pop mov sbb (bad) or xor mov push push jge add fildll (bad) inc lea sub inc lret orb or shr mov mov or jae cmc sbb push outsl and out divb ret mov (bad) xchg push scas inc inc sbb (bad) into add sbb pop lahf insl arpl aas (bad) xchg in cmc xchg mov (bad) pop adc fisubr test imul xor call in mov and push stos mov sub dec scas add jge negb mov (bad) ljmp sub and push adc cltd aam or jbe push clc sub sub mov jl jb fwait dec or jno ljmp repnz push mov jmp push cltd mov in push mov in icebp jbe out (bad) lea or and pop ret les scas lods cmp add hlt adc decb dec mov sbbb dec aam push push mov ljmp js jg out add fimul (bad) mov test cmp aas push movsb and pop push mov jne mov movsb pop jg mov imul push jb stc inc and adc xlat or xor jbe es pop movl daa inc sub ljmp ds icebp enter je adc scas mov xchg repz push stos push mov push test test bound add push mov jbe,pt adc fildl pop inc cmp sbb clc roll daa add push sar mov inc and repnz sahf movsl std popa xor mov or jmp jge pop in add aas movsb sub pop or shl rcrl dec push out xor pop or jno and sbb mov mov das lcall sub mov jmp xor push and push repnz pop adc pop inc shr dec or arpl es loop push push dec xchg dec lea repnz adc cmp push loop sbb push push adc push dec fdivrl push push pop add push data16 dec xor aas lods push cmp add insl or pop mov push not mov mov ficompl sub push in sub int inc nop data16 out arpl add mov push push inc ror popf sbb setg push and rcll adc mov dec lock leave xchg xlat push in lahf sbb js movsl cwtl cld jmp shrb mov mov pop cmp sub or cmc add xor movsl (bad) pop adc and cmp jnp adc mov aad fidiv mov and ja inc fs cwtl add leave into cmc in jmp je pushf fadd xchg xchg sub xchg xchg cmp test mov jb pop and les mov lret or bound xor fsubs adc cmpb addr16 into ljmp scas xchg and scas les mov inc xor pop cmpsb test test mov cmp mov (bad) mov sarl cmpsb pop (bad) in scas sub call pop jl push pop out xchg mov fnstcw xchg xchg rcll bound icebp mov clc cmc mov adcb add fldcw sbb mov pop pop mov neg sub pop inc into xchg cld add lea xor jno gs and pop add jmp pop sbb sub rcll push and imul into decb add mov xchg not xor mov pop ror jno mov mov int push push lret pop rcl and adc and test push (bad) dec int or jbe push sbb push push mov pop pop sar sti and push int3 leave or jmp idivb fwait pop repz loopne (bad) sbb (bad) jmp out lret imul cmpb es imul in dec sarb xor cmc (bad) mov iret cld sbb ret sub ficom sub or mov loope cmp fsubs and jne ljmp sti mull jp pop mov add test loop imul cmpsl adc pop jle jp inc adc fcmovnbe mov sbb adc or inc jae add (bad) stos mov popa adc mov roll xor (bad) xchg fmull xor pop dec xor daa call and popf xchg aas repnz cmc inc add cmpsb add leave pop subb sbb xchg divb jnp ss das and insb sbb jmp or loope mov pop and xor ljmp mov shrl push jo cmp (bad) xor test sub dec mov add aas (bad) stos or fild adc cmpsb sbb rcrl mov repz push mov lahf (bad) out inc pop adc mov xchg ja loope cmpsl bound dec sarb leave dec push das push leave (bad) sub jbe (bad) lcall xor add into xchg and test jecxz and imull add mov out je mov lret cmc pop or nop cmp xor icebp and (bad) popf jne int3 in pop xchg outsb aad sub cltd mov and push lds and loopne adc pop cld out mov enter xor pop mov mov xchg into jo or pusha cmp test mov mov and sub mov xor adc ret mov enter ror sub adc xorb insb test sbb adc and sub ja pop dec inc fstl cltd jb not jne xchg or sti cltd lret xor (bad) jb test or (bad) std push xor push xchg jmp push jmp addr16 sub movsl dec sub out sub cmp in mov mov xor mov clc daa add fs sahf mov xor data16 mov inc pop jle arpl (bad) xchg mov out popf pop lcall or xor mov inc sub add dec iret pop push leave imul pushl jns test daa (bad) ja push mov sbb mov addr16 sarl std adc pop jno and pop rorb push inc jle inc mov loope mov mov push mov jg lods js add cli dec xor fstl adc rcrb lret (bad) ja cwtl jns add lock add xor (bad) xor lcall in daa je (bad) icebp cltd xor fidivr nop iret jmp roll inc xchg jecxz sti xor loop pop jge imul add xchg in jae lcall jg pop add fidivr mov push mov jge dec popa lods aam (bad) dec sub pop nop pop push mov rol push ljmp pop inc ja cmpsb loopne inc faddp or stos push test sbb fstl out pop mov int3 stos mov pop or adc add push fstpl idivl pop push outsb call mov sub and add hlt shrb inc ret sub pop and inc sbb sbb lahf push sbb fwait push add push cmp push inc fstps mov cmp ret mov jmp out sub xor add out ret jmp incb stc or test mov (bad) std xchg dec pop imul and lock mov jge lcall mov jp test adc sbb ficoml lds adc inc in jl ret jmp mov pop jno dec aad push scas jae sub push sub in mov mov and xor mov jns lods jle cmpsl inc fsubrs inc lods (bad) xor or push in push push ret pop xor (bad) mov jbe ret repz and xor cmp cmc (bad) int xlat movsb xchg test or aaa mov adc lods (bad) dec test mov mov mov inc (bad) or call adc jbe ret jbe jmp lea cmc or popf cmc xchg jae repz or jecxz aaa sub sti in scas jecxz sub dec xchg ret (bad) mov pop mov in es and xor popf (bad) (bad) pusha sub lods aad mov sub sub fistpl outsb idivl xchg dec icebp sub sbb mov arpl daa push xchg mov cmpsb or repnz shrl mov imul xor or bound adc jp fs mov repnz out je scas and dec and xlat jecxz add xor sub add and ret pop push dec notb leave (bad) sahf pop divl cli sbb xor imul pop mov fdivp adc int lahf pop push pop iret mov adc mov icebp out push jno dec inc or pushf adc sub and mov stos adc out movsb mov and push int3 push add xchg jg sbb andl xchg push ficom mov (bad) cli int3 sarl xchg (bad) lahf pop lcall out or insb neg scas pop xchg fldl in dec sub adc stos lret adc je out fs adc or pop lahf pop lret loope out cmp out mov dec push or mov gs loop mov ljmp loop fldcw cs aad jmp das not adc push popf ljmp inc movsb mov mov cmp sub cmp out (bad) adc xor lret icebp pop loop sbb or negb jns nop and fstl jg push movsb scas loopne add in or leave dec mov sub out lret and leave icebp cmovl dec iret xchg xor xchg mov aam out adc or out xchg popa imul testl or inc repnz rol mov sub and push push loopne or pop mov xor push loopne add inc loop (bad) in mov cli mov (bad) rep gs push psubq mov sub mov inc std sub sub sub sub push pushf scas push iret mov stos sub jecxz or shr sbb xchg insb jmp and or cld add lret not fs dec repnz adc cli mov sbb push xchg std leavew stc pop mov or cmc adc lahf idivb dec mov xor std daa jge clc jne sub shll cltd add push mov xchg push les or push ljmp xor add hlt imul sub (bad) scas imul (bad) dec call push add test mov sbb mov mov mov or xor je dec pop xchg xor adc inc dec add xor xor jne xor add das (bad) aas sub fildll mov cmp fisubr jle adc mov adc je mov fcmovnu lods jo add notb mov and out dec mov (bad) lret push and xor dec xor dec bound and mov cmc sbb push mov cld mov push mov iret mov cmp mulb les xlat cltd xchg (bad) loopne add adc roll mov lods scas in mov fs mov repnz mov dec out fsubrs das sarl or pop jnp mov xor pop cmc cmpsb lods fs xor (bad) cmp mov out dec cmp ret mov dec lret test dec and push mov lcall shlb mov mov mov out stos sub inc inc and or lods shrb jmp or aad jbe sub inc daa add push or (bad) insb and sub jg rclb fdivr push mov jns sub mov jge jl or mov iret mov jb and xor jns add push adc xchg sbb adc add fs rorl in out popf mov ret ja and push push pop pushf dec xchg mov and xor iret pop dec dec lods dec shl jg call inc push add pop and lock or push xor sbb sbb cmp mov (bad) shr sub cmc aam dec xchg jle inc xchg or mov cld mov adc mov stos pusha pop jmp or into in daa and jge int3 pop ljmp or lret xorl clc or faddl xchg mov (bad) sub lret mov mov lock pop xor test (bad) jg sub pop and inc out add xor ret xchg xor imul cmp mov ljmp popa mov ror dec pop sub test aaa sub add rcrl adc mov sub fsts leave movsb out jb xor in mov add into dec repnz sbb mov bound dec pop pop jae jne ljmp and sub arpl adc sbb adc inc test enter rol mov (bad) and cmp negl add mov jae push jmp inc movq push push daa jne mov mov test cmpsb pop inc mov xor mov lods jge imul and inc pop xchg cmovg ljmp cmpsl call mov and mov pop cltd shrb xlat or cs lcall leave pop pop xchg mov pop repz pop pop add jbe jmp pop jmp cwtl mov push stos idivl pusha xorl xchg dec mov jmp lret lret and pop pop pop sub clc xchg out sub stos pop or add add aaa cmp jl dec je xor iret lahf jne jo out mov inc je mov jl inc inc cltd loop icebp test in cmp xchg add sub cmpsb xchg imul dec or adc jno cwtl xor xchg movb in xchg fbstp js pop and test std sub adc mov divl mov out jecxz adc pop lods mov cli les je stos int3 lock (bad) sub xchg mov stos or subb es and fnsetpm(287 sub xor test (bad) xor mov dec rol movsl push ljmp add aad icebp mov pushf mov pop loop push loop push out and (bad) cltd pusha sub inc cwtl cmp dec and xor pop cmp stc add mov push (bad) bound adc out dec mov je,pn sti jecxz dec xor or sar mov xchg mov sub add dec cmp ljmp mov cmp jmp lds jmp les clc out add mov pop xchg repz xchg add sbb and and add push es (bad) sub dec sub or mov mull js into mov and or add fisttp mov jb push insb inc jl mov bound fcoms sti scas (bad) xor xor les sar xchg (bad) jne lods icebp rcl and add sub std imul pop sub cmc sbb pop push (bad) movsb repnz mov cltd imul or out popa sub jns pop es out fadd adc ret fst clc push daa iret xor dec jb dec mov (bad) frstor repnz mov movzwl frstor bound fbstp mov dec insl xchg adc inc stos sub test mov mov mov icebp sub push add rorl test mov mov dec fstl pop pop (bad) lods cmc loop cld xchg pusha fiadd dec pop xchg icebp adc and cmp inc (bad) jp (bad) leave mov push ret ds sub sub sub imul sahf push dec gs lcall xlat pop add push mov push daa in inc add pop mov lcall out stos pusha movsl or pushf mov jo mov cld jnp das pop shlb dec pop out sub cld inc out push mov xchg scas loop mov pop mov or pop mov mov sub data16 loopne (bad) popa negb aad xlat ja xor push mov cmpsb mov or xchg push mov lret aam push jge cmp jl pop jg pop bound mov sti popf (bad) psrld inc daa and pop fcoml sub fucomip sub repnz out push and mov sub xor in or pop out xor in sub xlat mov xor cmpsl clc cmp rolb or sub inc push call loope push punpckhwd hlt mov mov mov mov shrl decb std (bad) je faddl sub adc sbb pushf repnz movsl inc or xchg call jmp cs or test movsb or add mov cli dec xlat cmpb or outsl push or sti ret loop mov and sub aad into push mov push jno scas fdivp lds ret inc cld xchg (bad) mov lds ss jo mov adc mov mov dec es in mov mov push in xchg jnp push dec mov lret je and sub movsl lds and imul mov enter lret adc fsubs aad jno sbb xlat pop (bad) nop jae es dec cld notb dec out into adc sub push dec mov inc pop mov cs ljmp pop push fist dec movsb in lock mov xchg push and pop out jle pop or outsl loop les push mov dec stos test jmp insb pop mov and mov cmc cmp out sub xchg mov pop mov inc pushf gs xchg pop sbb (bad) (bad) dec mov (bad) sub lcall mov call and adc xchg add xor jb dec push pushl movsl xor push push mov pushf ja test adc xchg fadd inc ljmp gs scas mov lret mov mov mov test xchg mov jp sbb or out mov lea push rol jecxz inc or mov pop jle jno cmp add mov lcall stos out std xor and das xor loopne xor mov iret test cmc mov mov jg xchg (bad) mov (bad) loope push add add stos mov mov or push dec out or or clc push fisubl loop jae movsl faddl dec cli push mov xchg scas je clc sti shr loope movsl sti mull cmpsl pop lds fmulp mov mov lahf pop fild sbb inc add leave or jo mov cmp and pop mov adc mov clc pop mov mov or or sbb add mov imul lret ret dec push out push cmp jg cmp sub imul lahf fldl2e xchg lret xor test jno iret sub rorl in add add movsl bound mov andb sub mov jle cmp jge add cmc fs pop (bad) test movsb icebp jae sub add lcall (bad) push repz cwtl mov dec aas cmp repnz mov inc jb out in daa test out mov push lcall ret ds mov loope ljmp out mov shr fsubl stc sub lds push loop shlb push xor cli cwtl sbb mov fdiv xor (bad) movsl js dec into cmp xor cli bound lcall shl addr16 pop icebp imul int3 out rcrl cltd in sub imul mull mov idiv daa (bad) jbe orb sub xchg or and stc fldl (bad) call or mov add sbb xchg ja roll stos sub iret jne aam fistp daa mov pop jns jae pop icebp in inc (bad) cli cld dec mov sub jge adc pop loop xchg cli ret pop jbe push mov adc lds mov jae adc xlat loop pop mov fistpl inc fsubrp lods out and nop es jnp mov xchg pop in inc rcr jbe mov add xor add movsl inc out sti and adc sub stos cwtl test dec sub mov sbb and out sub inc out pop sub mov mov mov scas clc leave dec out test mov (bad) roll enter sarl inc mov hlt pop push sub mov repnz push ja test cmp loopne hlt jge icebp inc xchg jnp mov negl aam dec and cmp jmp test inc push xchg fnstsw rcl fs pop (bad) cmp jecxz cwtl ret cmp fcmove push xor xchg jle leave jne push pushf pop cmp mov pop push inc fsubs add insb mov hlt les (bad) cmp cld pop jb mov cmp push popf dec shr into mov sub sub add ljmp mov fcompl fcoml dec xor mov xchg push gs add lods lret xor mov jb push pusha jne je imul repz mov (bad) test push xchg or sbb hlt inc orb outsl xchg xor dec jmp pop add stos xor dec adc out lret outsb lds xchg cmp adc inc fs cmp add xchg adc and aaa push mov lret loop xor mov sub aas push sbb test mov aad testl and stos or sub ffreep push cmp xchg mov fbstp cld test inc push adc sub and xor ljmp out push pushf xchg enter (bad) xor sub jmp sbb mov mov xor jle mov insb hlt xchg insw xchg or scas mov das pop in xchg roll sbb cmp fistp sub mov aaa xchg mov or push hlt add daa push jge (bad) (bad) lret (bad) aam in (bad) arpl adc idivb xchg shrb cltd mov sub pop push sub mov xor mov add cmc push xor fiadd or push xor es daa and aas pop inc mov jge push dec imul (bad) or jmp std adc cli push inc mov pop mov and adc stc (bad) and fidiv or lods ret jnp xchg pop pop cld and or jg popf xchg aad jns mov jns ja pop pop fisttpll jae ss out test pushf mov dec (bad) (bad) enter aaa pop dec inc add subl pop outsb xchg (bad) sahf imul cs sub push inc jg cmp or int push dec jne daa inc mulb sbb int3 leave fnsaves in fstpt mov sbb and jmp xor adc xor or stos adc imulb dec add dec jo subl push out and icebp sub iret stc fmull lds mov mov (bad) ljmp push sbb or add push cmp jo sub mov test sbb push cmp (bad) movsb test movsb mov jg mov enter dec movsl iret outsl repz popa mov fnstsw imul cs mull mov jge fcoml and dec mov push cli lds mov pop jmp fstpt inc mov mov enter ret in mov add lods ret lcall and sbb inc sub out and sub loope es rcl int daa pushf add inc mov sarl add lret sub jbe dec push imul cmpsb jne ljmp dec mov mov pop es shll xchg push mov and outsl xlat imul test mov adc leave test add ljmp cmp out pop xor push or or pop push js mov mov rcrl push sub cmp jmp dec repnz pop push jmp and push sub mov repz push sub loop xchg int sub adc jle mulb sub je sbb jmp adc cmpl and mov nop adc enter and jmp jo add xchg push sarb out dec lcall in loop sbb test movb and adc jns pushf pusha cmp add add jg jg sti sub repnz xchg cwtl or xor mov nop test push ret mov lods push call push or and fstpt daa out pushf inc mov js dec mull adc push dec popf iret lahf mov lods cmp mov push mov leave xor notl sbbl rcr lahf sbb and leave aas in movsl sub xchg jb out pusha and popf lcall lret or push repnz iret sub clc out andl (bad) or in test xor int3 lret or test cltd jns loop or into nopl scas dec in (bad) (bad) lods (bad) cmp cmp cmp in xchg mov out imul call in push clc (bad) out add mov (bad) mov pop sub xor mov test into (bad) sub and dec jnp mul das push mov inc jbe pop push imul div sbb std and push int ds push bound fyl2xp1 (bad) mov stc (bad) repz lret inc push pop mov inc hlt pop stc xor mov outsb les mov xchg test mov (bad) dec fnop out in push pop je ret lds sub js pushf mul fldt je imul xchg sti (bad) aas clc sub and jge adc loope xor (bad) dec ss adc and pop into or xchg and mov gs dec push fidivr sub test cmp pushf scas repz xlat mov cmp and dec mov fucomi repnz dec int or fnop sti push out call or cmc push push aam imul xchg sub fcmovbe test cmp icebp xor xchg xchg pop dec or pop (bad) xor lock (bad) mov stc cmp shlb stc jns sahf pop add or test inc xor std cltd js imul lahf popa cwtl insb push jg pop jbe lock (bad) xor je imul out sub lahf lahf lcall ret sub (bad) xorb iret sub cmp mov xchg cmp aas or push shr inc negb jle xchg xor cld cmp (bad) sub xchg mull mov or mull lret fldcw outsl test (bad) mov cli jmp and rcll jg out loop fcomps fldenv xor sub mov daa or frstor sub stos fcomp (bad) decb test aaa (bad) and movsl out sub mov repz shrb mov les sub mov xchg mov xlat lea addl xlat (bad) int sbb mov sbb cmp ljmp lock icebp mov idivl pop daa and das stos sub jns sub cmpsl hlt popf scas push sti daa adc push add mov ja xor push das (bad) cmp xor into pop dec aaa int mov fstl pop sbb dec xor stc popa repz jno movsl fsts cld and out dec xor xor mov jb lret fisubr mov cmp lret xchg or pop out mov lods mov push dec incb out das ret or xchg mov jmp insb or arpl addr16 mov data16 mov or repnz pop imul loopw gs sub or movsb rcr lcall xchg jno dec mov mov push add fs shrl add cmp ror add lcall rorl dec je les mov jae test ja aas ds sub ljmp or cmp (bad) bound sti jge mov icebp jae cs dec leave cmp repz add hlt mov sbb rcrl mov push pop mov cmp mov cld cmp or ret xchg dec addb jmp outsb sbb stc xchg std jmp in mov adc dec addl scas sti pushf mov xchg jmp jl call xchg push bound adc xor push adc mov sarb sbb or icebp mov xor outsl dec stc add (bad) fbstp daa in das (bad) xchg enter adc cwtl dec cltd int mov pop cs push into jno,pn xor xor repz fildl (bad) call inc or add ja stos lock push xchg adc lret neg gs or clc je bound fistpl push jmp test xchg and sub inc insb jmp sarl add mov repz xor pop or inc xor and divb daa sub sbb in das sub ja jg icebp and cmp scas or mov mov push add pushf stos leave fisttpll push pop mov in cmpsl and pop mov or imul ret mov pop mulb xchg je push mov xor mov rcrl jmp lds lret adc leave adc outsl xor push jb popa mov dec mov pop xor jns adc cmp iret add add sub sub mov jns gs xchg dec sti xor ret movsl pop lret dec pop rcr fidivr das jmp pop pop mov les and scas in js test or sub or std mov gs mov xor push and scas les jmp dec or aad outsb flds pop jnp inc sub or mov faddl scas bound dec jae dec fs or pop mov pop clc xor mov (bad) push scas sbb inc and and pop (bad) xor mov das divb add dec ret jl sub ljmp mov mov (bad) adc (bad) xor fs int sub or sub das lock xchg int xchg sub jmp jge imul dec lret (bad) int push mov loope cmp scas sub sub push xor mov inc mov movsl xchg lods stos mov test ljmp mov jg test inc pusha or and mov (bad) in and out testb pop cld lret loop std adc mov push imul lods test mov ljmp lods pop mov aas sub or pop pandn inc stos sub cmp (bad) push sar into gs jmp push add push imul lods and in arpl (bad) std gs and iret pop lcall into test mov lcall mov pop push xchg cli lock movsl je lret push repnz bswap mov cmc jecxz xchg out mov (bad) mov (bad) fdivs sub insb call in sbb mov inc (bad) data16 aam push push jle jo jecxz dec mov mov rol test fisubr xchg inc enter ror lock sahf data16 (bad) je test clc pop mov adc decb jge call mov pop mov adc repz fmul (bad) pop pop fcompl and mov sub mov xor xor (bad) pop and mov xchg sub jno dec push mov insb jl dec xchg lcall xchg (bad) (bad) repnz xor (bad) sbb repnz or jge mov je pop (bad) cld das cld jns dec (bad) ja or rclb mov aas jbe fadds int3 shlb inc mov clc repz stc and int3 mov stos repz int3 cmp fwait mov add mov loopne fldt xor xor xchg stos fsts data16 loop pop stc (bad) mov sub daa pop repnz add (bad) stos fldcw jle mov mov mov pusha sub and mov xor or dec aam dec fist shr mov and sub seta mov push sub mov repnz addr16 jmp add xchg mov jno nop pop test or mov jae sbb (bad) mull rep pop pop xchg fst test fs into push sub and xor dec (bad) imul out pop or sub loopne (bad) mov aam mov jecxz pop xchg cmc xor loopne adc aad and adc mov stos mov or mov push adc xchg sub movsb and and push pop movsb lds and repz xor mov fildl cli mov add lret jne imul les dec sub mov leave jl lret loop push xor (bad) or stos addr16 clc mov push rorl sub xor loop outsb sub cmpsb fxch dec out dec icebp push insb mov ja sub cli mov pop sahf sbb lret or jmp pop mov mov ja dec mov inc or fdivrl xor mov cltd inc mov les pop dec inc xchg (bad) mov push sub sub cmp aam pop add mov sub mov popf (bad) es test pop out add sub mov inc xchg and adc lea rcrl lock mov cmpsl mov jl and nop (bad) push or add leave out cltd mov pusha in adc jbe xlat outsb xor sub jne scas test sti cltd mov add je lahf jle call movsl idivl xor aas mov sbb (bad) lret inc inc jb mov into jg or jno or mov jl imul sar cmp mov stc cmc mov (bad) loopne mov popf jle or inc sub mov call cmp in addr16 push jle mov sub pop push or add scas je icebp cmp movsb (bad) clc rcll (bad) div adc add ljmp ja jbe push ret adc cltd dec repnz mov fs fdivs dec push mov add pop sbb or popf (bad) cmp ljmp dec sub mov aad adc cmp ret sbb imull mov mov add sub mov movzbl mov dec cmovnp scas mov sub repz xor sub add mov stos add ss mov andb and mov mov sub dec cs shrb das and fisttpll das pop push pushf or pop push nop int cmp sub mov jecxz push out jae push jno loop dec lock test add ljmp and leave pushl dec push lret adc out fisubr aam gs add xor dec orl test pop jno pusha sub xchg add and jg repz movsb stos and jecxz inc scas push fdivr adc inc adc bnd dec in adc jmp adc das push xlat dec repnz fildll pop dec inc popf mov int3 cmp sbb ss dec outsb loop (bad) andb daa insb notb mov psubusb mov xchg ret std and and mov xchg pop in mov mov cmp sub sub pop pop and sbb sbb out inc test and lahf daa pop in xor pushf int mov pushf push hlt (bad) adc stos fucomp push sbb lods sub leave push cmp mov enter movsl cld push lret pushw add rclb cmp inc das js pop loop (bad) leave mov jl sub ljmp cmp sbb xor out xor lock dec stos pop jmp sub (bad) mov rolb inc lods pop sub pop pop movsl sub loop lret add bound or rolb popf xlat scas push xchg notb in mov aaa ret jle cmp sub add aam addr16 ljmp imul daa sub push sbb ficompl mov cli lahf (bad) decb daa ret push cmp int3 xor pop inc jbe (bad) xchg jo dec icebp scas sub inc sbb int3 xchg idivb dec gs rep inc subb scas fadds (bad) mov daa hlt in adc out out imul inc xchg add xor in (bad) mov aad cmp xchg fidiv lret add mov and popf mov cwtl pop mov pop jb scas mov inc sub das pop aas pop rcr sub jmp (bad) mov mov push or push cmp fildll sub jbe jle sarl xor push je arpl (bad) xchg pop push xchg lret xchg insb std int3 (bad) jge mov cmp jle loop add mov mov mov rclb inc mov push mov mov icebp inc xchg ror pusha inc dec or test push ss jmp mov mov mov stos jns push mov add movzbw and and sub mov sub sub push fsubl das mov ja cmp add jae mov add inc sbb push jno sub inc (bad) ss sbb je lods (bad) mov mov outsl mov pop mov stc add test jl rorb jg xor (bad) fdivr push popf push aam add dec pop mov mov mov leave pop std lds nop pop or popf pop jle push jae pop lcall add pop call jo gs sbb push dec out push xchg push mov jae push mov pusha dec pop push adc cli add fcomps xchg stc shrb jp orb xor repnz inc add push mov nop push in cmp pop add lret ljmp jmp mov push push mov xchg add shr jne pop mov push add sub addr16 ja mov dec outsb add pop sub pop add add ja xchg pop cli lret push jg shld xchg stos adc cwtl ljmp dec xchg aas push mov stos ljmp nop jns dec sarl add inc pusha pop cmp and adc jmp mov push inc adc ja dec pop jmp lcall sub sub or add pop pop mov jae xchg push (bad) push enter mov inc movsl pop mov out add pop pop faddl loopne js add fcomps adc cmp mov xchg repz push sub jge xchg outsl loope push push movsl cltd push cmp scas sub in mov or (bad) and xor clc jmp sub and cmp push add sub mov insb pop decl cld mov mov sti out sarl das stc jmp sub ffree iret das (bad) inc push jle sub call sub lods push jbe jne (bad) pop sub daa fbstp ret pop and (bad) sub ret (bad) pop add ljmp xlat jg lods dec scas sub xor mov xchg repnz mov xchg int outsb loop sahf or mov mov pop movsb inc rolb cmp pop pop cmpsl adc mov inc popf xor (bad) push icebp adc hlt cld add ljmp sbb fmull gs or rcr sub mov in dec mov je sub mov push aad rol leave jge fldenv daa lret fs aas and cmpsl cli jne loopne add pop insb add aaa outsl enter dec pop jno sub in sbb cwtl movsl in inc test repz out jb add std push pusha sub femms sub stos sub hlt lcall mov out jnp and out add imul (bad) or call ss shll mov mov cwtl lock push movsb shlb (bad) mov or jbe push jae aam ret ret cmp dec arpl or add or mov ss xor stos shlb or in les ret push ficom (bad) (bad) jmp test call pop jecxz mov add mov add push cmp mov call ljmp mov ret cld sbb jecxz add sti inc or and mov xchg enter mov mov xor jb mov lret jo pushf aaa jmp dec fimul xchg outsb cld add pop jno cmpsl fiadd mov in cs icebp lret mov adc pop scas mov and (bad) in clc sub mov shl xchg add pop pop leave mov rol jl push push mov and mov xor jne mov adc xlat movsl addr16 pop mov outsb jmp or incb xchg pop dec xor stos pop loop xlat sub and jnp add pop dec adc cltd add mov call jmp jne repz adc add loop xorb add or ja cmpsl push sahf insl leave push xchg repnz add adc xchg cmc xchg aaa pop (bad) int push mov ja gs lods in movsb jmp xchg ds xchg sub ds adc aad test cmpsl aad fcom add jnp pusha ret cmpsb xchg out sub gs scas xor sub inc pop sbb and lret stos xor test push mov orl pop mov mov (bad) popf push cmp lret xchg jecxz pop cltd fstps adc imull out dec loopne or xor repz xor gs (bad) inc cmp push clc out dec (bad) jno mov xchg pop mov and data16 out aaa push and cs aam push icebp outsl int3 (bad) xor dec pop push cli xchg lcall or sub into dec cld add fsub or leave fistp imul cmp and leave pop das (bad) out ljmp ja scas in mov in jb (bad) xchg fimull loop mov gs add mov xchg (bad) cmpsl cld cmpsb js lret bound sbb cmp pop adc sub sub dec pop loop bound pushw adc daa stos jae sub pop jae xchg cmp icebp inc pop shrl sub test or decb xchg adc xchg insb jmp xchg sti std xchg fisub jae das fistpll xchg sti mov push or xchg adc dec repz add decb jne jl push lret pop cltd loop push mov mov jp lahf pop inc bound fxch xchg xor into (bad) mov sar bnd sbb das mov (bad) ret xor pop inc call xlat xchg jne jnp pushf mov xchg pop fldt (bad) ja inc ficomp dec mov mov in test loop jg mov popf mov mov mov stos pop aad push mov cli push mov out inc je (bad) push fsubp arpl stc dec add les sub call jp push adc (bad) jecxz adc add sub out cmp and add pop les nop gs dec int sub and xor and sub add or in addr16 or in jge mov daa jmp gs dec lock test xor jecxz sub leave cld and fsts mov stc push loope jp lods addl mov (bad) fist xchg iret inc push out mov jg mov hlt stos das inc and loop push mov jae pop push mov cmpsb sbb repz lret loope inc fisub sbb xchg push jmp xchg sarb stc push (bad) fmuls repnz bound leave (bad) das mov jg outsl mov jmp adc lret xor aad cmpsl popf inc mov jl xchg adc (bad) out dec or push out jb hlt jae outsb sbb dec (bad) cmpsb xlat nop ss xorb xor int3 es cwtl pop add mov lock (bad) dec mov inc aaa adc xchg sub pop pop or mov mov sub cmp jge jne,pt xor adcl dec add pop add int movsl or daa (bad) sbb dec clc mov pusha mull (bad) xor lret into cld pop jo sub repz mov mov dec and xor sub sbbl cli adc mov ds dec mov or ljmp call icebp mov add jp mull iret jp xor pushf jmp mov sahf dec lock mov mov cmc lds das pop sbb insb pop push mov scas cwtl mull mov dec xor push jmp faddp sub mov fstpt imul mov movsb movl test xor ljmp mov xor icebp ret into push cltd sbb sbb insb jp or push or in pop mov std jb lock loop xorb in push xchg ficom (bad) out das add into hlt and add or push push movsl (bad) fcom sub lret or mov jns fsubs es (bad) ret pop xor lret lods aad ret scas imul or mov push jno dec xlat xor xchg jb lret push (bad) mov add mov int pop mov mov cmc sti mov aas (bad) or xor repz lea adc std inc and push jb out adc mov inc xchg cmpsb sub repz mov adc mov fadds push or lea cmp out or or je jg mov sub pop insb bound imul shrl or bound or mov mov popf idivb pop aaa xchg adc pusha out sub mov mov or or add xchg jg lret scas cmc mov adc jg mov and adcb std xor pop xchg scas cmpsl and pop bound (bad) dec mov (bad) hlt (bad) mov repnz scas lret and push mov mov enter and mull xor xor mov imul icebp (bad) mov out mov cmp test (bad) jecxz xor mov mov fscale push ljmp cld fchs adc icebp imul les aaa push adc mov imull jge pop inc xchg sbb xchg ror jne dec pop inc push mov sbb out mov js add clc mov xlat xlat and inc xor push mov fcompl xor pop cwtl sbb (bad) ljmp mov inc mov or leave pop add add jmp lret jns jmp lret pop lods dec sub jbe dec call xor xor lock mov scas mov xor lret cmc (bad) mov sbb (bad) stos pushf test in jne,pn out cwtl push cmp (bad) lret and xor cmpb cmc nop xchg ds pop jae sub or add daa and cmp cmp xlat std push and push pushf cmp inc and out adc icebp jb lahf mov (bad) outsl and out jns dec int3 int3 and inc in and dec dec movb (bad) mov push aas fucomp dec mov dec dec inc test fisubr mov outsl mov push mov ja in push sub cmc mov data16 mov int3 sbb pop into mov inc sahf jg jmp xor cs adc negb mov imul push xorl add into imul gs push lahf jno leave (bad) aam js xchg in or das icebp inc dec lock pushf nop sub mov add jb (bad) xlat jns xchg call cwtl adc pop icebp inc aas jmp lds adc mov es popa movsl jns jmp scas das pop cmp sub cmp les pop loope sbb ret cli dec aam or (bad) xor ljmp fmul rcrl jbe or lods adc lahf sbb into sub or fbstp mov sub fs mov clc imul (bad) fildl imul dec mov xor jne scas lea fsubs mov dec or popf lcall ljmp das mov pop mov push idivl std push aam inc stos cmp rol or ret jmp cli scas mov (bad) lahf mov les lahf inc inc sub and cs xlat mov cmp and xor mov daa ret call jg sub (bad) cli lret pop adc gs je inc mov and andl cmp mov fs adc mov roll mov ljmp xchg jnp mov xorb cmp inc out dec adc das mov sub clc add jge imull stc xlat adc push xchg clc addr16 orb and mov dec mov sub call test or inc jmp ret rcl lds sti xor mulb or xchg adc stos mov rdtsc rorb ror xchg fbstp adc mov fist xor and or cs pop ret mov nop sub loope mov in ljmp fs repz dec les cmpsb sub cltd xor (bad) sarl loop mov iret sub bound test pop cmpsl fcompl xchg or mov inc lds mov add into push aad mov cwtl pop out lret or lds jbe dec rorb sbb cmpsl fbld lock lret (bad) lret xchg (bad) loop xor mov mov rcr mov into es cmc push sahf mov inc add ss dec ss je lock call cld mov repz lret dec pop lret lock das xor fidivr out mov sub dec cmp sub xor push xchg scas push rorb rcrb and loope mov daa sbb sbb pop cmp test loopne add imul sahf popf jl push ror pop sub fsub enter add out notb push (bad) add enter jmp add (bad) jge or shr mov jp or les xchg pop add sub mov mov lahf loopne cmp jecxz mov in cmp imul pop stos push jge les xchg fist or jg jg pop inc pop stos lods jl or dec inc (bad) push mov addb xchg outsb xchg cld not or test pop jmp adcl mov push mov sub (bad) pop push mov add fistl pop pop cmp and pop shr subl push mov pop test in push xchg cli xorb arpl xchg bound mov jecxz xor pop inc mov push mov (bad) jmp push repz mov (bad) mov pop repz mov xor mov push int3 xor or push mov mov (bad) hlt aaa jb xchg fdivrp mov ret mov aam or push lods decb pop mov and outsl (bad) or cmpsb fstpl fmulp imul xchg js pop xlat push inc popf cmc insb jg leave dec adc ret in push mov push jl ret xor mov popa and mov popa ret mov aad add sbb mov sub push lret xchg repz ljmp cld cs stc add ds xor add inc dec into push dec int call xor sub and cmp adc fstpl cltd outsb ret hlt or push jg rorl leave mov xor int3 adc sbb jmp push stos xchg (bad) jmp xchg push add (bad) in mov pop xor add lret out inc pushf sub fisttp mov movsl std mov lret shlb xchg not pop dec cwtl popf sub xchg fbstp mov or lea xchg pop mulb inc push mov iret repz call mov (bad) adc popf xchg sub (bad) (bad) dec pop add sahf popa jle xor or jg lods movsl jmp enter jl jb lds out out pop sarl mov movsl push cmc mov (bad) mov out lahf outsb xchg jno out xchg call cmp pop or cmp pushf xor xor imul jl out sub adc adc cmpsb pushl in cld mov test fsubrp dec icebp iret subb xchg push push or jnp stc push jmp sub out cltd stos sub add in fnstenv dec leave outsb adc jno dec (bad) or fs std push rcrb dec stc or aad mov fldcw js add cmpsb leave inc push dec (bad) bound push test mov mov push rep shrl js pop sti xor and gs shl cmp push (bad) test call test push cli (bad) out jle jmp jno insl and loope dec scas push and and fisubr divl rol ret movsb jmp sbb jmp jns into movsl out int3 movsb xchg loope cmp repz xor mov ljmp xchg lcall cwtl xlat mov sub xchg mov inc repnz xlat out lea shrl mov lret xor mov mov inc and mov pop adc mov mov es out inc imul jae repnz mov js popf xchg fwait cwtl movsl or add inc lahf and fcomip xchg mov insb add push nop popf xchg push xchg jae psadbw arpl or daa mov add imul push xchg (bad) mov mov movsl div in movsl jns xchg jmp and outsb out inc pop sub movsl scas mov adc mov or sub or std mov mov inc movsb subl sub aad out cmp test pop in mov rorl out scas mov add inc pop lcall into mov (bad) push leave jl cmpsb inc push and mov add or and jecxz mov push rorb mov (bad) decl jo pop xchg inc pop and mov (bad) and ret mov jmp sub insb das je jmp push pop dec mov lods sbb sbb dec mov jmp sti outsb mov mov insl out shr mov push add icebp cmp lcall sub sub mov push and popa insl or jmp mov add mov xor fldcw bound popf mov or out or negl mov jne leave xchg cltd adc das lods divl pop dec cmc adc daa mov pop loopne xor (bad) mov cmp add and sub mov jbe enter sub mov repz sub addr16 push loope loop lret stc xchg rcll fcmovnb out out mov call xor lds imul out lret push xchg mov shlb lock sti in (bad) mov cli and adc or jecxz sub in rol pop sub xor repz daa hlt add cmpsb sub adc adc out sub aam or sbb add adc jmp pop xchg enter cmp add (bad) aas mov cmc pop scas and mov fistpll xor enter or lcall gs in lods rol sbb push pushf xchg imul popf out jg sahf dec jecxz daa jmp ret push ret in test xor xchg cwtl pop push icebp lods xchg call das and stos dec inc mov mov sbb inc xchg cs imul (bad) mov rcrl push insb cmpsl jecxz std aad ret pop cmpsl rcll divl les mov pop cli in lea xor jnp ljmp lock lea cmp sub nop (bad) inc (bad) pop loopne fdivrl jge xchg dec pop mov div cmp inc int3 mov ret jge,pn es pop idiv sub das jmp mov lahf jle push mov mov xor xor out ja (bad) pusha ret and xchg popf fstl pop idivb push notl sbb jo aam (bad) mov xlat mov or mov mov jbe push ja push mov fldenv sub stos mov jmp mov jne ds or cli lcall push mov fistpl in mov aaa xor jge mov adc mov sbb dec cmp cmp mov mov dec and cmpl jmp fidiv adc jmp or cmp jo rcll mov xor out add repnz repz mov clc push mov shll and pop cmp jmp outsb jmp fucom cs push or fldcw cmp mov je dec fcmovb push xchg sub add ret jbe jno (bad) fmull pop cmp movb movl movsb daa and mov mov lcall cli sbb inc cld push dec int sub ds jmp xor cli gs cmp fisttp lret pop xlat in add push cmp clc mov sub dec sub sbb and xchg xchg mov jbe out sub cltd jns ja scas sub scas mov std xchg lea data16 sbb enter pop jl shrb daa imul rcrb dec xchg dec add out movsl pop ljmp and adc push (bad) xor adc and repnz add lahf jns mov and inc xchg mov mov jb pop out test repz dec loope movsb mov daa ds ret mov xor xchg mov inc add mov and mov or scas mov out loope sub cmp sub mov bound sub pop insb xchg jmp xor xor mov int3 lret add sub sub push scas add (bad) cltd addl push mov (bad) repz push mov fidivl dec popf cwtl ds fs lock lcall leave into pop push mov lret gs lock ljmp or out sub out xchg pop ljmp inc leave add jmp push ljmp mov lret loop cmp bound in loopne mov cmp shl inc jl movsl add sub (bad) fidivl mov xchg and mov mull in das jg dec es xor inc jno dec xor cmp mov jne sti xor jmp cmc test scas loop aam pop test sub xor int3 cli iret popf fimul push cmp in je (bad) sub idivl fisttp daa shr sarb (bad) mov xor xchg pop out sar arpl sub and or cmpsb xchg in add mov insl mov cld test (bad) jnp dec ss insb fcompl (bad) xor mov add divb mov push sbb enter (bad) sub mov jle pushf aam cmp sub fnstenv icebp pop xor ret cwtl push lahf push mov movsl jp mov xchg or and or or mov sbb sub sbb bound notl inc and inc xchg inc add in repz pop (bad) stos mov dec shlb sub adc mov push jg out (bad) xor icebp mov pop loopne into (bad) xor shll push and out int3 xchg popf in xchg inc cmp pop fisubl daa push pop jmp aam aas (bad) test lcall movsb clc (bad) inc popf sti je inc repnz dec loope pop data16 pusha movsl add repnz cmp sub cwtl pop insl or push cli jge popa sub dec call scas mov xor push sti imulb and sub (bad) mov or test cmp inc ds fidiv sub mov xchg ja pop sub js pop popf jbe test fcoml ss lds xor jg notb jle lds lods iret or inc (bad) ljmp pop outsb cmpsb les and fs pop iret ret arpl mov in js jmp pop or sbb or fidivrl dec sub mov jno cmp in rcrb and (bad) (bad) sub call push xor mov xchg mov imul lds sti push rcrb sub test xor repnz pop ja inc xchg xchg stos mov loopne add adc out inc fmul mov int3 outsl leave negl sub push xchg push sub xchg das lahf (bad) jnp and xchg push (bad) repnz cld aam pop loop lret push fwait pop xor xchg pop mov das push jnp jnp push push lcall sub fxch jp cwtl in adcl lret sub pop fldl daa lret pop inc out xchg loop mov sub (bad) and (bad) add out cmc inc sbb pop cmp in test ror jecxz or sub imul je cmc add repnz jecxz das lock or push fisttpll and mov outsb pop ret mov (bad) xor mov cmp stc hlt mov cmp jecxz (bad) mov pop jno push rcll jp pop and mov cmp adc sbb or fistpl or jmp imul lds dec ss sub out int sub arpl mov pop or mov add jne ret stc dec addr16 sub xchg pop icebp mov or mov int3 dec xlat daa mov pop in mov xor and cwtl idiv fisub daa ds xor dec xlat std jnp sub test ljmp mov mov cmp jle push aas jo inc jp fsub loopne leave xchg lods mov mov stos inc movsl adc add pop mov (bad) or pushf jge mov mov out mov stos or mov mov (bad) fs hlt or or mov fcoms xchg test mov mov cmp or sahf std in add xor dec sti repnz push test xor sub mov xor mov ljmp fdivrp and pop rcrb mov inc xor les and sub xchg xchg or and or pop push das push or add xchg add adc inc fstps fldenv (bad) or adc push or pop (bad) sbb call idivl scas sub push inc xor sub hlt inc jle adc mov fdivrl into adc sbb or es mov fldl sarl xchg xor xchg xor add sub int3 mov push push or sub jmp stc cmp (bad) notl dec ljmp mov pop mov or popa inc and push mov pop dec mov ljmp dec dec scas lret mov pop movsl int sub sbb outsb imul cmpsb xchg popa cmp jno movsl push notl sahf mov sub or and push jns imul fiadd fisttpll and aad outsl add mov movb bound insb push repnz xor push pusha push mov mov jns ret push and subb mov adc mov std mov and lret int aas in imul cs mov jle adc and fcmovbe decl loop inc and jmp jbe call into movsb or sti xchg or add cli dec pop bound out inc lods and (bad) (bad) mov add lahf xor ds and jp icebp sub or pop or test push cmp jb lret outsb xchg (bad) inc sarl pop add add aam shr cmp (bad) dec mov adc fldcw test leave pop into push in and mov mov cmpsb sbb clc mov cmc repz inc xlat mov orl cmp std shll scas les pop pop stos jb (bad) jbe mov daa mov je mov sub out movsl mov lds ret sub (bad) jns cmpsb (bad) xchg icebp out popf (bad) xchg or xor xor inc xchg fdivrs rcrb or sti das jno insl inc inc lcall sub out and mov inc sbb notl mov xor lock (bad) jb out (bad) mov xor sub jg adc insb leave add incl fnstsw scas mov cmp add or cmc test mov mov adc mov inc mov xor mov jmp mov adc ficom pop (bad) stos sub fdiv cmp lock xchg cmp mov pop test and and das stos fs in jp and jle outsb xor iret jne aad idivb sub xor jmp jns inc dec loope cmp shrl inc es (bad) movsb inc add aam dec inc sarl outsb pop ja push ljmp out out dec fdivrl daa mov xlat cmp cmp jo mov or add (bad) andb push jns test or mov test pushf outsb lret xchg cmp dec aaa scas mov mov xchg test ljmp and push ret ret xchg (bad) jmpw add pop xor aas mov mov jo jnp popf or jg pop les or jmp inc jnp je fdiv imul mov push (bad) sahf jmp scas push and bound sahf cmp mulb arpl mov fdivl fnstenv les daa jne repnz out inc xchg mov cs xchg (bad) sbb dec adc sbb fcomps or fimul inc pop pop out (bad) repz imul mov xchg mov fbstp dec push icebp mov xor xchg jle mov xchg sub leave iret pop rcll adc mov (bad) sub iret leave adc stos mov dec jl and sbb jmp mov xor push testb adc mov inc dec jge xor divl outsb mov dec fld inc sbb test jmp mov sub sub (bad) sub mov sub fcom outsb mov (bad) and leave jmp pushl add daa out sarl push inc xchg mov or fsubr popf lea cmp push mov pop (bad) xor mov xor sub push popa xchg mov adc sbbb mov inc xchg call mov jecxz out mov sbb mov xchg mov pop fmuls pop or cltd cmp je ljmp cs cmp dec andl pushl push jmp int3 das pop xchg ds cmp mov aaa stos xor lods xchg test (bad) lock and jnp xchg push and sti fs xor shll sbb mov out idiv test mov xchg or push xchg or sub lcall mov cmp pop or out and mov nop push xchg xchg fist or mov and mov mov std nop aam in mov mov and sub loop loopne jecxz pushf jnp (bad) mov insl imul adc xor (bad) jno imul mov mov ljmp mov and (bad) xor mov outsl repz jmp jnp call adc sbb xor sub mov and pop pop sub imul dec les inc das adc ljmp sbb daa jbe leave jns sub cs and sbb insb daa sbb sbb js mov inc push add sub cli push add arpl int3 out sub prefetch sub sbb ljmp push or push jecxz add mov jg inc sub sbb sub rcll js lods fwait or mov sbb sub in mov sbb jbe sub jbe fistpl push xlat xchg or stos sub pusha push jmp cmp movsl jg jecxz and xchg repnz iret push fsubp xor fxch outsl mov jnp dec fild lcall loope jp cmc (bad) fcoml nop sub push mov sahf pop loope jle pop sar pop std enter jb je dec mov mov push sub mov (bad) into psllq or loopne out inc andl xor (bad) sub cld jecxz pop gs dec mov sub sub scas popa dec sub dec scas fnstcw mov and in mov fwait add pop cmp and dec mov jmp inc mov mov push mov faddl add shrb dec repz cmp ret lret and stc push add sub (bad) sub in pop int3 push jbe adc out arpl out jecxz xlat movsl sbb push shr xor mov add and popa nop clc jbe js out and xchg jl (bad) imull pop dec sub mov cmpsl aad sub shll sti mov ljmp sti add jae adc loope outsl mov dec and or shl and mov dec je loopne adc pop imul xchg jl pop std movsw pop sti (bad) jecxz loope cmp add lds xor lahf push cli (bad) into xor dec ljmp ret sub push cmp xor fistpll bound idivb shrl push pop fsubrs fisubr or cmp aaa jbe out xor sbb pop rorb sub push and test data16 cs idiv and (bad) cwtl push sub cwtl aas sarb lds or lock jmp lret iret pop fwait fs ja adc push and ljmp jg jl add pop ljmp pop add in sub lret mov lods dec loop mov or and mov cli mov xlat hlt negl mov in shrl int3 call inc cmp stos icebp cmp or iret out or testb addr16 push lret dec imul fisubl sub xchg xorb fnsave push mov jnp aas add pop mov inc aam bound fstpl push fwait out cwtl push mov jbe nop pop enter lds adc xlat inc add scas sub and add popf mov jmp push dec lds out inc add push cmp lds mov sbb push push mov hlt ret mov mov jne lods jnp push mov sub push mov push dec pop call test (bad) aad cli enter or mov adc in jmp stos mov add push popf rclb stc pop mov fcomps negl jmp push and pop adc (bad) xchg cli stos mov in add jg jnp std jle add push pop repnz and ret pop fstpl xchg sbb popf dec inc cwtl inc pop lock mov sahf sbb lcall push repz cmp lret pop adc in lock adc movsl push lret (bad) pop sbb aas cli push mov fidivr fsubl jp inc or push jg pop shrl les push call inc mov popf cwtl push xor movsl stos cmp daa (bad) xor sbb adc mov jg loope sub sbb pop jle aam ret or xchg lret add scas pusha push out xor pop mov ret stc jp div xchg shl adc add test int3 lahf shrl push sub xor fwait lcall sub push sbb (bad) mov sub mov pop push pusha rcll in pusha and mov xchg shrb add lahf xchg (bad) mov xor mov inc cli mov or mov cli outsb int xchg aad mov pop inc repz mov pusha inc add leave lods mov jae xchg ret dec mull xchg scas add into sbb insb movsb idivl mov add mov jmp ret pusha cli xor xchg shr sbb add jo lahf push leave ja je mov or adc lods test idivb mov add mov add and lret sbb mov xlat mov pop int3 xchg lret xchg fidivr xor pop jbe or pop jns cli clc dec mov test neg xchg out stc shll xchg cmpb cmpsb das in or and out dec mov out add rsqrtps push cmpsb xor mov lods xchg mov gs stc and sub das mov push cwtl mov daa rcll adc ljmp stos and dec cmpsb sti pop cmpsb mov inc daa xchg imul xchg (bad) mov sub adc sub dec lret pop sub mov jns push inc cli repnz cmp enter push sbb (bad) cltd xor mov popa mov sub cmpsl test cmpsl into ss jge out lret jg sub cmp out sub dec repz fldcw movsl daa movsl push mov lret decl mov adc mov mov rcr inc push sub sbb mov adc mov xor mov out shll add outsl nop leave and ljmp sub and (bad) mov dec xor popf int3 or out mov push clc or mov and xchg mov or lods xlat add rcl fisubr cltd mov test stos cmp sarl sub outsb mov xlat test push dec push cld add jl imul aam ret mov lret notl jne cmp mov outsl jno testl rcrb cmp adc jne nop ret aad add cmp and pop (bad) imulb or mov cltd daa add rorl cmp pushf std xor cmp notl (bad) dec stos (bad) push inc jno xchg idivl in bound cltd and add mov inc out push in add pop ljmp lret rcr xor out out sub sub out inc mov and or mov (bad) and in adc outsb xchg fsts iret push out fwait sbb and cmp pop int3 sbbb mov jge push push pop pop mov nop cmp push xor mov jbe in xchg cmc sbb jne idiv (bad) jmp out je or mov or cwtl mov add cmp add pop inc push push dec bound (bad) adc (bad) movsb scas xor and add jne sub iret mov lods in movsl loope sub mov mov jb mov jne pusha dec sub or mov jmp xchg xor jl (bad) adc mov sbb xchg cli jmp cmp mov out jecxz xchg stos xor sbb mov jo mov cmpsl imul adc mov inc sbb mov mov pop (bad) mov dec call pop sub inc (bad) dec in leave mov fcmovnbe cld inc push sbb cli into cmc dec cmpl dec pop sub scas push cmp inc pop fcmovu push rcl stos mov pop call and push add ficoml sub mov sbb dec adc or adc sahf sti es mov outsb jb dec jmp push push les cli addl sub lock xor sti pushf fwait repnz pop push loopne sti hlt mov jbe pop add jmpw aad mov shlb and ret xor push dec cmp (bad) leave into aad insl dec and fisubr sar mov or imul and outsl jne adc and mov scas mov inc roll fstpl insb pop mov in dec inc cld mov outsb (bad) out and push std out xchg mov cmp sub add inc mov mov adc sub push dec cs xchg xchg mov jle and ds xlat mov add and push rcrl rclb xchg cmp or mov sti (bad) sub mov pop mov sub mov mov rclb pop or leave fcomps std adcb clc mov scas or rcr (bad) daa rorb mov pop xchg inc js movsl mov adc push and mov shrb subl mov or das cwtl xchg add or mov xchg stc mov inc mov testl pushw rdtsc into mov pop movsl jnp mov repnz test pop push dec repnz mov out pop pop xor movsb scas clc es clc mov jmp mov xchg jbe gs scas cwtl std ljmp push mov loop rolb sub scas or icebp and pusha es popf cld mov dec repnz imulb pop lock repnz mov push and sub int3 aaa xchg jae and cltd jl out dec lods xchg pop sub movsl push pop ljmp and test cwtl fcmovu mov adc insb fidivr cmpsb xlat mov std data16 mov out dec hlt pop pop mov bound pop lcall xchg jmp pop sahf xor add and sbb pop pushl mov mov or or add pop lret bswap and pushl nop xor push lret cs xor jmp call adc iret cltd repz fcmovnbe mov sbb rorl or mov lret (bad) dec and rep arpl std jb mov ret pop and sub mov push adc adc dec sub sbb sub xchg notb mov cmp mov fadd add mull ret shll mov and daa inc iret das inc cwtl mov mov jp push jmp xor or (bad) neg shlb push xor mov orb xor push adc xor lret mov icebp xchg jo lret clc clc mov sbb add sub push pop adc enter scas neg or ret and add pop inc repz adc aaa stos mov ljmp lock aad in pop mov and jne in loope xor insl (bad) aaa mov push dec lock bound (bad) jne aas or repz ret dec call mov mov xor push (bad) not sub inc inc icebp pop xchg dec outsb inc and (bad) sub pushf jecxz divb mov pop rcrl sti mov mov fdivrs jecxz jbe daa ret or xor fcoml out test stos out ss lcall icebp iret dec jl adc pop mov dec mov je stos and into cld cwtl and mov mov lds idivl lock cld add incb out lret xor pushl cmc sti mov pop mov adc pop inc mov adcb fistpll sbb daa (bad) aad insb cmpsb push idivl cmpsb xchg rorl cmp mov fist sub ror push jle push lcall sarl xor int3 rcrl jp dec push mov in lahf nop in xchg add xlat scas xor xor jno or pop mov lock dec lret int push mov push loopne out xchg xor stos mov rcrl loop xorb (bad) fldenv pop pushf repnz cmc push repz sti dec out mov data16 popf jne sti test (bad) cwtl mov mov clc inc xor rol out and in (bad) fld sub inc push scas sub sub jmp out xor scas pop sahf jo ljmp in and call shlb cld (bad) bound ret jbe xchg add fdiv negl sub push cmpsl mov add pop push cmp clc (bad) sub and lret lahf pop mov add pop decl and mov ss add xor js push fs pushf or and mov int cs xor or mov mov mov dec or ret movsb push push out jg into fiadd pop sti repz mov mov add icebp into outsb in push add cmp dec mov dec test fiaddl pop push inc stos and mov mov pop mov cltd popf popa add pop das mov dec and rolb ret outsb dec in pop mov loop out imul fiadd pop aam cmp mov lahf jecxz in and sbb jmp cmp pop js mov mov push mov rcll adc and aam subl leave xor inc (bad) push cmp pop leave (bad) repnz pop push movsb mov fsubl push aaa lock mov and inc pop fucomp or pop or sti jmp or inc daa jmp out mov jbe and cltd enter (bad) adc imul sbb mov bound pop cmc rcrl shrl icebp stc and fnstenv mov and pop (bad) cld andl (bad) fmuls movsb mov cmp stos mov sub shrl fs fldl jnp add mov or cltd popf pop mov cmpsl out pop jmp jl pop stc xor mov mov inc imulb clc push dec popa out sub jnp es push inc and mov mov mov (bad) lahf jnp mov sbb sub inc or inc pop xchg cld iret leave or mov inc mov lret aad mov cmp sbb pop shr sbb and jae sub and jmp and add inc lods sub rclb pop dec sbb mov jecxz push xor xor sub sub sub aas fcoml dec sub jmp stos mov daa out adc jne xchg mov in jae cmpsb xchg or (bad) repz or enter into mov out leave inc das test shll push jl jno inc mov cmpsb insl pop push adc pop push and (bad) mulb into (bad) dec xor int cmp or in and sti push add or mov fbld mov movsb stos jecxz leave or adc lret pushf mov cmp stos jo loope jnp cmc sub mov mov add imul rol jge sub pop mov (bad) adc dec sub push jnp leave loop jle out jne pop aas mov push sub cmp xchg xchg mov data16 sbb mov ljmp pop xchg mov mov fldcw push pop loop xlat lret hlt push push icebp outsb cltd sub and mov sub xlat stos enter cmp dec stos sbb mov xor stc fisttpl clc mov sub xor lea and push (bad) loop fisubl and jge or mov push clc xor aam loope and push hlt outsl daa inc imul push inc pop push pop mov lidtl cltd pop test lret mov or pop addl add outsb pop bound push jb add push inc mov pop push aad mov mov pushf sub repz push mov imul and jp mov mov adc jmp je mov push dec (bad) repz sbb fsub lahf push xchg ljmp inc and roll fwait dec sti xor std jmp mov pop divb stos or jge pop test sub add and cmp or dec sub push aam cmc movsb adc aam mov lods sub lret push fimull fistp mov (bad) dec stos xor and scas loop cmc daa cmp push or jmp ficomp xchg or xchg dec sbb cmp stos fsts mov sub xor out xchg aam fs mov es scas xlat cwtl cmpsb add rcl add dec (bad) fiaddl popa and inc mov pop nopl stos jp lds popa bound repz lods (bad) rcrb lods (bad) inc sbb pushf cmpsb sub dec or sti cmc sarl mov pop icebp sti ret mov and sub repnz sub ficomp mov jb adc cmc fldcw sub mov pop jo mov and xchg hlt jb ja mov scas mov es out pushf inc pop and shrl lcall fmuls pop xor fnstenv adc sub in out cmp pop mov mov adc jns sti (bad) repz cmp gs mov or add mov push sub mov movl in cmpsb icebp mull push pusha jns add mov xchg xor xchg gs out dec roll incb dec ljmp (bad) rep or adc call push adc push jp xchg jge daa mov inc xchg adc int sbb call xor fnstcw sub add inc jbe xchg test sub scas cmp pop ja clc add test push ss (bad) pop pop sbb push xor inc lret push adc mov cltd and adc mov cli cmc mov jmp test mov inc or inc ret push out cltd xchg data16 push xchg jmp xchg push jnp movb xor ret cmp roll xchg call push lods fwait xlat xor stos leave loop dec xchg loop (bad) mov mov ret and adc popf ja or jg sbb jae jmp test sub loope ret mov inc or loope das clc mov cld lea mov mov les xchg aam repz lret xor testl hlt push out ja pop leave dec jmp test out and xchg pop into inc mov pop sub movsl xchg xchg jne fs pop bound pop pop mov fisttpll scas push lds daa sbb and jp (bad) jae lcall xchg inc gs out add and mov lahf push leave push and nop jb push jns mov leave pop in js gs and movsl jno out push out into pop adc and scas (bad) sub and (bad) into stc imul xor pusha ljmp push add std sbb loope clc inc movsl mov adc imull mov outsl mov fsubrs dec adc add and sti jb das xchg fucomi xor mov imul fisttpll sbb cmpsb jge in divb mov jecxz aaa xchg (bad) mov outsb cwtl in push and popf std mov inc lea jns inc xlat stos or call into mov and sbb test sahf xchg mov repnz out pop pop sub mov sub cmp sub xchg dec ja mov add mov jbe ret inc mov jae pop out call adcl mov or add inc or fidivl aaa cwtl mov stos add out dec (bad) shrl pop dec in ret dec in dec dec jmp test mov cmpsb cld dec scas cmp or shrb gs int3 test ja loopne adc sub test (bad) dec adc popf pop inc imulb hlt adc cmp pop push bound pop fiadd sahf jbe divb push jmp mov pop inc add cld xor movl mov adc or jg xchg cmpsb fwait jmp mov in repnz mov push mov cmc jno imul loop jne add iret aad sarb mov stos fstps imul shlb lret fwait adc add mov mov sbb shl leave gs and out (bad) iret and scas and out stos test mov jns lret lods jbe pop and sbb mov mov jmp (bad) cs push out or and sub or and (bad) ljmp into cltd jg lock jno outsb loop sarb xor repz fwait les les inc ret sbb jle sbb or push inc pop and mov fidivr mov repz divb mov xchg pushf dec xor imul xchg fsubrs push ja out ljmp mov mov (bad) xor mov dec add inc push lods and std loop into pop sbb (bad) mov iret xchg mov outsl or test das test sub add cmpsb inc pop (bad) iret xchg insb pop call sarl (bad) and aam sub stc aas adc push stc jns jo rolb out cmp repnz pop xchg (bad) push stc xor mov mov in lods cmp or xchg bound inc insl mov jp xor (bad) das clc cmp ljmp imul scas inc fcoml jb pop inc xchg pop sub xor mov xchg sti cltd inc sub dec imul andl fnstcw aas (bad) and int3 jne mov test (bad) pop cmovs mov mov lret stos int3 mov cmpsl in lahf jl push jecxz mov arpl inc mov add mov xor cmovnp cmp xchg mov ja scas push into (bad) dec mov or xorl imul negl mov pop and add out out repnz cmpsl adc adc cld js in gs notb pusha mov adc sub or testb pop call ss (bad) mov call jns xchg xor lds out fsts iret xlat lods cwtl mov jge nop das idivb adc popf gs push sub lea jae sub fldenv imul push pop dec lret push test icebp lods pop mov out mov shll or leave lret jp lds sarl jo xor mov sub xchg push fidiv sti shlb adc push pop dec mov sub xor (bad) mov adc sbb lds dec pop daa xor call dec (bad) mov lea insb xchg sbb divl out cli repz leave div out xor gs popf outsl outsl xor int3 stc xchg or mov push pop imul sbb repz or out cmp sbb stc cmp pushl ss sub or cltd mov dec popf mov or or in or mov outsl mov mov mov out mov imul xor push std mov jg xchg int3 mov out dec cli mov sub xor ss les inc cli or out adc adc sub cmc ficompl lret cmp sar or sub and and icebp and add add add and movsb push push jmp and stc (bad) lret push and push mov in inc divb push push mov and pop add pop lock jmp sbb jo outsb mov mov push inc xchg je addr16 sarl (bad) dec add sub pop out cmp mov insb inc push pop stos mov fstpt popf inc mov push mov nop ss xchg aam into mov dec cld cld jb lret mov xchg lds in gs mov push pop push pop fldl xor jl or leave xor in sbb or xor push or xchg push mov pop push scas (bad) mov mov xor push test adcl inc sbb loopne mov push ficomp or sbb push push movsb jg dec adc cmp mov add dec push mov xor jmp dec adc cmp xor ficomp adc data16 add jmp neg nop xor xlat sbb jnp push xchg ss sbb push adc jmp andb xlat sbbl jnp testl pop jno sbb or loopne dec adc (bad) pop scas add xchg imul add dec or leave (bad) push icebp dec test pop mov sub add addr16 in notl aam sbb cmpsb xor adc mov ljmp addr16 out push mov dec call xchg in add xor sbb gs jae add push pop repnz adc dec xchg mov outsb jl push mov cmp add adc ja (bad) lock ljmp dec test ds popa ds cmp repz and push roll imul and inc int3 aaa jne cmp adc xchg and push aaa popf push pop lret pop inc das into mov stos jo aaa dec mov (bad) mov and mov jg dec loop ret aaa and xchg fnstenv cli sar mov ror mov mov jmp sub and out jne jecxz dec mov aad lret lock mov jno mov ljmp cwtl adc xor dec idivl (bad) xor mov je inc out mov add sbb cmp mov jno mov (bad) (bad) push adc repz cmpsb outsl sub imul cmc or shrl ret push in in cmp sahf cli jmp mov pop (bad) and out cmpl sub mov jecxz mov and sub xchg jbe xor sti add inc outsb add dec movsl or ret jns mov and xlat idivl push mov and sub xor jmp out pop pop mov jne sub ret push dec sarb xor arpl or dec add mov pop std (bad) xchg stos fwait cmp popf sbb fisub test or fldenv cmpsl push cmp push sub adc xchg in fistpl push idivb stc cmc push and sbb or jmp xor stos jno mov insb test ficompl leave out sub push test std jcxz jecxz sub pusha ljmp pop push sub cwtl pop mov lods cmpsl xlat stc ljmp lret jecxz or sub int3 pop sbbl rorl jne lock out dec sbb cmp imul sub pop dec dec mov fcmovnu out push repz stc or mov sub pop adc sar add jb or inc cli mov movsb and test lock scas outsb sub sub or aas mov andb mov cltd loop mov add jnp adc fcoms sbb dec enter out sub jne sti add pusha movsl cmpsl sub mov jo and mov add dec add pop icebp lods fwait (bad) cli dec pop mov pop mov fbld mov fistp fbstp repnz xor xor and push pop pop in mov stc mov and out fsub push frstor mov cld mov int3 pusha xor lret imul inc inc fildll xor (bad) imul test add (bad) sub sub jbe imul arpl in mov inc das xlat fucom out (bad) cmpsb fisttpl mov stc pusha mov rcl rol rol xor pop or addl ret dec cld sahf aas inc or and test pop fdivs mov dec inc scas jbe and xchg out popf ja sarl out inc mov pop mov out sub or jb sub inc dec mov test neg sub divb mov pop mov push add rcrb adc mov push cmp (bad) sub out jl fiadd sub jmp stos or test (bad) mov das into aad (bad) (bad) lods movsl pop out sub jle or push xchg fiaddl repnz lds enter divb jmp movsl fnstcw mov jecxz mov rcrl sbb ljmp daa add xlat push sub leave cmc dec out mov sub jno xor loop rorb xchg and mov test mov sub (bad) mov test into xchg jle lock add enter sbb dec add xlat mov fiadd pop inc fs cmp movsb jmp in das (bad) inc call pop push add cmpsl push pop mov and je cmp lds ss xchg movsb mov imul push and add add ret test imul sub push adc jnp dec sti jmp aaa aad stc dec xchg mov cmp or mov push xchg mov call jmp adc pop shlb push add cmp xor adc cmpb repnz pop lcall xor xor (bad) outsb cmc out movsl enter and cmp (bad) pop xor and and bound or int3 jo dec iret out pop jecxz sti loop jne ljmp pop inc call iret mov and push out lret sahf adc sub or dec icebp jns les inc test sub hlt stos push mov inc movsb adc clc outsl (bad) mov iret dec or pop jb sti sub cmpsl jle and lret decl (bad) cld mov ficoml cli adc cmp pop roll repnz cwtl daa aad loop aas sub dec repz call dec push (bad) stos (bad) testb test pushl lret clc ficomp mov xor dec dec mov fcomip jo mov mov sahf and add and loopne add xchg out push dec jmp lret into (bad) ljmp scas cltd pop jnp rcl test or (bad) out mov insl push cld jg jl sub push push ja push pop xchg pop dec xor lahf notl out mov cmp addr16 push pop out and dec (bad) dec testb add mov and lahf pop lcall cmc push pop inc and xchg aaa leave adc imul mull jecxz push xchg push xchg fisttpl daa rcr pop mov dec add in jne inc lahf sahf push (bad) xchg pop (bad) fcompl ja adc pop sarl jl add out fistpll (bad) or xchg add inc jmp loopne add xor cmp cmpsb repz stos into pop pop sti xor test lret mov dec push dec pop pop add out test out sbb lock inc jbe movsl jl mov leave ja sbb lcall aas lea arpl loop icebp ds sbb xor mov adc hlt ds pop je sbb lock (bad) mov push (bad) dec mov pushf push push jge fsubr cli gs repz xor cltd out cmp sbb clc mov sub mov mov xor push sub mov data16 sbb pop loope sub sub outsb adc movb and cmpsl adc mov lea sub loop shr dec pushf and mov (bad) arpl add pop cmpsl test in cli aaa mov fildll push push fwait or dec rcll xlat call lret pop out cld mov outsb xchg (bad) and mov ljmp cmp stos test scas sub jecxz mov xor sub xchg jae cmpsl add imull out add ljmp lret sti pop repz xchg xchg jg and adc add mov (bad) jge xor in inc and mov sub pop sbb pop add test dec pop xor fdivrl sbb push sub adc daa sbb dec push sti push sub mov add aad in add (bad) sub add jg cmp shrb ret mov dec push mov and ja sub inc inc inc cs repnz mov inc inc loopne xchg std push sub in mov pop and mov aam lret xchg dec cmc int3 mov cmp sub or pop ss xlat popf lock inc rcrl xchg adc repnz mov xchg xchg aam jbe push and out sub inc sub push test clc leave cmp add fld dec into aam test mov shr push movsb (bad) cmp or or push or adc push mov cmp mov jmp js fcmovb xor lock fdivrp das pop fistpll add scas loop add fiaddl add add inc notl push leave push in jne push pop pop lahf add adc pop pop pop cmp aam cmp mov pop push mov or mov ja neg popf and (bad) hlt add in stc or jae lds mov addb dec jle fsts push add jns jl pop inc lret lret test xchg jbe (bad) ja cmp popa add fbld sub jae or pop and jge loopne ja dec repnz xchg push or in sbb or mov jecxz je lahf (bad) ljmp pusha cmc jge inc clc adc out pop daa jb lods and push pop and sbbl jle js,pn adc in loopne cmc mov push mull xlat dec jg sarl pushl stc and fild into pusha inc xor mov sbb xlat lods inc push mov pop lock (bad) test ret sub mov adc daa and add popf fist (bad) pop pop xchg push sub mov (bad) in xor jmp jmp ljmp or add sub cmp cmpsl lret addr16 push pop mov mov ret stos sub and ret pop xchg vorpd push loop push push mov sub xorb leave xor mov pushf pushf and push or adc dec mov xchg mov cmp xchg cmc cltd inc xor dec das and out sbb ror (bad) cmpsl loop jbe loope add aas fwait mov pop enter mov jmp mov leave mov ljmp xchg cmpsb mov push iret sbb jae add cmpsl inc (bad) or sub xor mov push jg shlb outsl movsl inc arpl jno sub add bound lcall repz sbb rorb cmp or lahf jns dec cmc and (bad) mov cmpb (bad) (bad) ja xor sub add mov ret dec cmpsl and adc fimull (bad) xor add repnz popf mov pop rcrl mov pop mov pushl popf rclb pushf fnstcw jnp sti (bad) idivb je dec enter dec and das jg jecxz dec into cli lret and mov push das inc (bad) fsub sbb mov jno pop push mov inc xchg adc mov lahf cwtl dec sbb dec adc and (bad) xor in out test out out dec out into lock mov arpl outsl (bad) fadds scas (bad) into sbb shlb das divb into dec pop std dec leave loopne inc xchg in or pop push test jne dec popf std add xor and and adc roll jns mov test mov adc mov pop xchg movsb shlb mov call in mov or xrelease or mov mov (bad) lret in adc pop fildl push push jno dec jge add pop sub int3 ror sbb inc out dec mov shrb rcll mov addl lods push push sbb push mov or pop mov popa imul test push add push push call xlat vcvtss2si icebp out inc lahf (bad) jno xor push sub mov mov ja or jno inc jecxz or dec add jl adc repnz xchg push dec mov enter arpl jmp inc xchg pop ret iret mov mov sahf cltd mov cmc es pop or mov popa int3 das mov and add sub sub lret jle js fdivr jecxz cmovg xchg in inc xchg mov cmc test movsb scas popf aad (bad) cmp sub mov not pop test jmp outsb add lds or xchg and popa xor cmp adc mov ljmp jns out inc xor mov pop (bad) mov mov push inc sbb je xor stos and aas bound rcll ret scas xchg loop cld sub icebp (bad) sub jmp xor or imul pop lds cwtl jo pop sub mov popf int jne xchg adc fldenv pop xlat sti mov cli popa icebp mov loope das and mov adc fadd andb test mov lcall int cs aad movsl flds jle mov xor mov (bad) xor in pop (bad) mov mov push xchg dec and mov out xchg ljmp (bad) mov (bad) xchg scas daa pop fisttp add cmc int3 xchg adc sbb add (bad) xchg stos fs nop test icebp (bad) sub outsl repnz (bad) mov push push dec mov cmovg (bad) (bad) divb shll xor sub in and dec insb and xor mov and add and mov pushl out push mov pop mov cmp into movsb push xchg clc add ret jl dec xor mov sti or pop (bad) xchg sbb rclb pop xor mov pushf fisttpl lret sbb movb jne repnz (bad) cmp or cld pop bound and mov lods cmp and sub gs out xchg ret sub dec dec nop push sub sbb and inc cmp leave or pop xchg fabs mov push fildll outsl test add addl add es and ja ja mov in daa sbb add stos sub adc into shlb inc es into mov mov movsb pop xchg ret jmp dec mov int3 cwtl push out xor pop repnz mov xchg (bad) call fisttpll loop dec ret adc cld inc loop jg cmpsl dec fcmovbe pop (bad) cli leave iret inc das cmp loop ror cli cmp sub sub daa adc and push test repnz push pop std and jg popa lods jae xor xchg sub test mov sti sub xchg icebp scas rorb and fidivr mov cmp fwait pop lock mov dec xlat jnp lods push jge fsubrs cmp por call int3 (bad) jmp add fwait test orl ljmp call sbb imul leave test or arpl or xor int3 ljmp out pop sbb (bad) lock aad inc mov scas jne and mov mov jge xor movsl ffree pushf xor idivl xchg xchg and cld cmp sbb pop or jle imul (bad) das addr16 jbe jl,pn sbb icebp stos lret pop je out out mov adc and or lret or xor (bad) fdivl mov pop test lock push loope mov out repz fmull adc pushl inc pop jb jmp into xchg sahf adc es lods dec jno mov divl dec sub xor aam (bad) es pusha in jecxz dec or into mov outsb sub xor dec ret jle stc int loope sub test jecxz mov cwtl mov mov xor pminsw dec leave push lahf test adc mov out (bad) jo ret popa xchg scas dec jnp fild das push mov out clc (bad) sub xchg les adc pop (bad) mov jge mov add dec adc mov lret sub xorl fwait push xor fstpt add fild leave into and out xchg pusha mov and mov pop (bad) ljmp addr16 (bad) xor stos loop xchg pusha cmp adc push pop addr16 add sub xor fist and jle sub dec add jb mov sub bound addr16 jae (bad) loop or dec add adc add xchg cmp hlt sub icebp mov pop lcall incb negl and mov lahf js xchg in mov scas mov adc xor pushl cli out nop mov mov cmpb mov dec xor lock jge lods out into dec jg fcmovbe in cmpsl ja mov scas mov pop loop (bad) pop sub jae mov and push cmp (bad) push loop cwtl inc jecxz mov mov pop fs stos lds in fisubl daa or push insb das and mov loope sub das jmp xor and cmp int3 cmp push adc add mov xor dec lret mov testl mov pop cmpsb inc add cltd lods and mov inc outsl les into test rolb (bad) and push hlt cmp mov jnp ja mov cs sub inc jmp pop jns jne repz sti and insb (bad) lret movsb adc pop pop dec dec jg and mov and dec repnz push sub push inc popf xchg insb dec pop add ret insl loop inc dec pop rclb jle mov pop rolb inc jge icebp sbb fs stos mov mov or (bad) std sar xchg (bad) or mov cmc inc out jecxz sub jb icebp out lods je pop ljmp callw mov test sbbb or imul pop xchg cmc pop xchg hlt mov or call std dec inc repnz pop (bad) xor add and mov xchg xor aas mov add dec jae insl push mov imul sub loopne hlt cmp add push xchg and mov movups std pop xchg add call xchg (bad) test push out jbe mov jge inc xor or sti std jg adcl pop jo push mov sbb add xchg jb push mov in (bad) add cmpl jno mov into ljmp mov out push add sbb inc sti jp decb stc jo or jmp mov mov mov pop mov pop push mov dec add outsb or out sbb js ja testl cmp pop sbb push pop jl int3 cmp add fsts orl stc pop push stos int3 lds push stos cmpsl jo dec push xor ds scas out outsl fmull and stc inc adc addl inc mov xchg jg mov pop sub lds push and mov jnp xchg sbb repnz cwtl ds jmp in icebp out lret pop pop out sub push add mov insb arpl push pop or pop xor push or test ss push mov outsl test xchg repz ds adc ss xchg negb stos fs mov and cmp cmpsl adc or xor mov in fs sti fmull pop or lahf jg imul rcrl sbb outsl and push xchg lret aaa dec xor mov shr rol xor sti sub cs test push sub dec add adc cmp mov aam test add movb add push push mov push push push add mov cmp loopne (bad) scas int popa into sub sub bound outsl jl (bad) add xlat xor jge nop pop inc sarb test xor out push sbb mov adc pop dec lock pop xor inc es in in push mov mov daa stos push ja cmpsb lahf pop and push scas icebp mov repz jmp pop sub cld mov mov jp in movsb out mov lret rcl cltd fsubr and repz mov test repnz mov xchg jmp xchg (bad) icebp call clc cmp or not and lahf sbb les fsincos (bad) out pop (bad) jbe data16 jmp jl scas push push jmp push pusha dec mov popf inc jo leave pop mov mov mov pop call movsl pop mov jae test nop jmp and mov add inc xor out out call xorl mov in loop dec loop rorb in out sub adc mov sbb (bad) add mov es mov pop seta mov ror xchg adc mov (bad) add lret pop mov cs leave sub xor sbb sub pop xor ret cmp push into mov fs fldcw pop pop xchg idiv xor loopne ret imul or enter outsl jmp repz sbb imul pop (bad) std xlat pop mov ljmp sarl fnstenv ljmp (bad) xor (bad) lret int3 out scas mov mov and jns dec aam dec jbe sbb mov mov test mov inc (bad) adcb mov add (bad) shl or out fwait xchg js pop out pop test inc xor xor ljmp add mov xor aaa or xor out repz xchg jg mov or pop sbb movsl cmpsb cmp add xor sar xor dec fcomps push jg sub add xor jg pop and or jne and loop shlb jg cmp sub ljmp xor stc and lahf jl pop add js rolb (bad) popf not push repz adc scas mov (bad) push sti bound or out dec and cmp lds jecxz adc fsubs loopne jg (bad) sub pop inc ja and sub ja outsb jmp (bad) das add dec xchg xor cmp push pop jge cltd dec inc xor mov cmp stos and stc push orb out cld pop movsl stos mov dec in in scas xor ret cmp stc xchg fcompl mov ss std adc add outsl daa or sahf pop ds xor enter xchg lret push add lock jnp scas inc loop xchg sbb ret jae (bad) mov jmp in add scas pushf enter pop fidivrl (bad) pop xchg popf sarb or js shr std imul scas test xchg cmp (bad) jle cld mov mov add lret mov add icebp fs push adc lcall mov repz stos bound pop dec out pop loope mov in push mov stos bound mov push jne xlat mov mov mov lahf pop push push and hlt (bad) pop out imul mov xchg call push jl mov stos mov and xlat cmp stos xor stos cld mov incl daa add inc adc pop das ja jne sbb mov sbb cli cwtl push push addr16 mov cld mov add leave (bad) adc add lock gs sub lahf js pop iret add sub push cmp mov mov ljmp cmp dec sbb sbb bound pop sub rolb sub add sub pop out push add mov add push js pop cs out not inc ror push icebp imul dec imul jbe push into sub pop ja sub inc add jmp add jnp ficomp pop lcall inc mov xor sub scas fidiv add sub or dec imul push jnp pop and push or push sub pop ja push or adc push mov rcrl std sbb jmp (bad) out add mov mov (bad) and push push pop lcall add pop std mov lods xor sbb mov xchg das int or sub xlat push cmpb mov adc fiadd lds popa (bad) hlt loopne add lret iret adc out pop add ret into and and sahf or inc push loope jnp adc push xchg and loope sub lea jbe cmp sub and lds clc xor testb outsl lds stc add mov fcomip inc icebp popf push sbb jmp jno inc pop out mov jb loope lret daa or (bad) repz lret inc jnp and dec sub stc fstpl lret or std fucom mov rcrl out loop test add mov dec xchg adc push fsubp pop lods mov add mov scas and icebp pop cmp mov pop sub iret xchg dec std add loop mov push fld inc xor inc inc loope lahf jle push int3 mov push jle (bad) or or inc jecxz push push fidivrl dec lods sub xor movb dec cmp dec add adc or and jo jnp sbb jb xchg and add popa (bad) or sub dec cmp adc add jae negl out and inc lret scas xor or mov jnp loop mov mov mov sahf xor scas (bad) aaa imul jge xor xor in dec ror mov sub or jp jb daa adc out fsubl jecxz pop xchg mov pop jmp cmp xlat jmp lock pop mov jbe lret clc test xor call add fdivl cmpsl imul cmp hlt (bad) hlt out push cmp mov iret sub aas lock scas js mov mov jno mov pop jmp inc and bound fstpl mov jbe imul fidivr cmp mov jl jno pushf push mov lret sub lea xchg add pop sub clc cwtl push xor fs xor insb ja sub sbb cmpb in jmp sub shrb aam pushf cmc xor mov (bad) xor lock cld lret fwait cmp negb push push or mov shll pop lret sahf xor mov pop repz and mov mov jl loope bnd shr dec ds push push repz rclb xchg in out mov pop cmpb and add ja cltd repz icebp inc or (bad) cmc mov or mov sahf sub mov inc mov mov xor (bad) aaa sub xchg lock xchg jg sub push xor jg adc or mov xchg mov xchg push and jmp ljmp cli xchg adc jbe fsubrp mov add sti rcll in in mov pop pop sahf sub jmp (bad) mov inc sub ds lret (bad) std xor out sub (bad) in into rorb not (bad) adc add xchg or fdivr mov adc adc outsb add mov mov add out sbb push sub add lret xchg outsb call cmp popa stc pop ljmp add mov cmp jl jb xchg xlat sbb (bad) aad and or and push imul jne loop xlat decl lret icebp sub pop pop and sub fldt mov in lahf fimull jns (bad) mov stc jp hlt lret imul in inc call jmp and int (bad) fadds inc (bad) mov sub (bad) or lods push jg out decl sub mov daa mov ljmp addr16 subb out sub es cmp sbb or or loopne sub push inc push jecxz out or movl mov xchg jmp mov pop or (bad) xor sub xor sub or cld mov ret xlat xchg jp mov and push outsb xchg lods jmp xor stos cmp cmp paddsb xchg data16 xor push adc sub popa sub fimul clc stos repnz xchg and jp out repz add mov out add mov xlat stos out dec jo ds jns je clc mov jo out xlat mov out sub mov pop push dec (bad) and inc (bad) aaa imull sub sbb mov pop xor loop jb jo mov out sub pop inc inc mov push int3 leave call push push into leave xor pop cmp jle daa pop jb sub jno leave adc sbb inc ds imul mov (bad) cmp ljmp ficomp test xchg lcall (bad) mov add fstps and mov jae xor xor pop mov jne pop inc mov dec mov jl daa rcll repnz fldenv push test lcall dec fnsave imul push mov cmp sub std mov out es sarb fbld (bad) and push mov call inc imul (bad) mov das cmpsl subl pop sub mov (bad) jmp mov test add sahf sub push cltd test rorl (bad) adc xor les mov mov lods outsb lds lret (bad) lret sub mov xor jmp mov dec imul sub dec cli ror pop iret mov xlat mov inc push and icebp lret xor mov pop inc jmp in cli cltd jg mov or jg bound xchg stc leave leave push icebp push imul push jmp test dec in pusha movsb in popf push (bad) and push inc mov sarb cli into push adc xchg ss fsts into dec xor pop fstpt jmp in and ret data16 add (bad) cmc jns dec fild or ds or ret push inc subl lods in push (bad) push icebp mov (bad) inc add dec sub mov imul cmp lahf jno jnp mov ja (bad) mov in or fisttpll lods hlt or (bad) dec clc jb adc mov mov sti push mov push out popf jo mov insl pop cmp pop xchg mov div (bad) xchg fdivs or icebp int3 xchg xor inc mov sub sub scas xor sti pop xor or gs mov sbb or push xor sub daa das or mov adc add popf xchg inc lret pop xor push stc mov clc push and ljmp jns inc sub (bad) (bad) pop jns adc push call leave cli and xchg mov shlb ds adc xchg lret push xchg xor cmpsb mov sbb negb cmp xor test mov jmp push mov insl test and jbe jmp cwtl loopne push (bad) in and xor jge (bad) jo pop sbb in les imul insb or push imul jmp ficomp bound and test jns imul repnz mov repz mov pop push adc sub sub stc dec les stc mov cmpsl pop (bad) out sbb int3 add and gs divb and movsl pop mov sbb cmp inc das iret jbe pop pop shll fsub or mov notb xchg adc cmp out aam les mov nop dec mov lret lock imul jb xor and mov sub sbb mov push jmp jg mulb repnz jne outsl add jo addr16 and fisttp and cli and inc pop dec icebp into and xchg mov mov pushf sub pop ret sub xor aam mov ss mov sarl fist fisttpll nop outsb pop arpl lret ret leave (bad) jno lret das push out add add repnz ljmp cmp jmp pop lea jecxz sub xor and jmp and shr sub mov pusha add pop dec out xor xchg jle pop sub out je out mov stc dec xchg mov clc adc in and add xor or xchg in or cmp inc jb shrl (bad) pop mov sbb scas xor mov dec (bad) repnz andl repnz sub add decb mov int3 gs lret movsb mov cmp mov dec decb sub (bad) out mov sub jbe imul loop pop fisttpll add bound lcall inc or ja iret cltd mov mov fs xchg sarb int3 fwait xchg adc pop add iret inc lds idivb add test inc dec push or enter pop in pushf xlat mov sbb fdivp pop not fdivrp jg sbb icebp push jecxz sbb xchg ror popf push jno jo cs or enter mov leave (bad) jne mov mov add sub ds in outsb mov and call adc and stos push (bad) into stc jo push gs (bad) jmp pop lret lcall pushf pop dec call xchg es add movsl lahf rorb cld pop and cwtl call insb pop (bad) sub je (bad) xchg fbld sub shrb xlat lcall mov jge mov mov out test out mov (bad) mov orb into test test fistpl (bad) mov dec cli dec repnz add jmp lcall cmp daa ss (bad) xor imul into icebp push lods cld and xchg pop ljmp dec add adc add notl sbb (bad) ss decl pop outsb cmp aas (bad) fiadd pop cs xchg fadds mov jl cmp stos repnz outsl pop xchg or sub aaa xor mov mov out addr16 pushf mov add out (bad) mov lret cmp sub dec daa testl (bad) mov jecxz aas add pusha test mov das mov js adc test adc pop ret imul cmp dec fidivl sub (bad) test stos (bad) xor je outsl lock ret sbb adc inc retw push test loop push mov pop jmp leave xchg out je or push sbb ret out (bad) dec iret fildll xchg pop xchg inc lret loop sti addb daa and adc mov cltd or insb jne lds mov gs ss inc (bad) lods test jecxz fcom rorl in cld adc dec ror inc mov fcomip in movb jno and cmp test jmp sub int3 and jmp mul mov adc daa sub loopne cmp pop add je pop mov adc je and push inc adc stos lret cmp out sub jno ljmp or xor cmp bound shr ja es mov je jb mov mov or call test sub push pop ret jnp mov cmp aad ds sub cld inc (bad) stos adc lds pop sub xor jmp push add xchg adc xchg adc lods mov xchg adc xchg fcmovne cmpsl ret push or out add push adc out scas testl shrl push jmp in mov sub cwtl aaa and add (bad) lahf repz pop cld cli pop in scas jecxz push iret add adc cmp nop push add sub clc xchg pop stos repnz sub daa clc jg lcall cmpsb andl push shll clc xchg jg mov mov subl imul pop das jmp clc ss mov pushf cmp test pop cmp stos icebp in mov push pop into add into add and stos sub stos sub mov cmc pushf lea (bad) jne (bad) mov pop cmp repz push inc ss hlt mov (bad) cmc cld (bad) cmc gs add (bad) lahf add popa popf adc mov sub pop push clc (bad) xlat pop mov pop ret push and mov mov pop fildll mov and jle (bad) cmp lret or mov jl iret aam cwtl lahf ret jno (bad) sub cmc (bad) mov das out sbb testb and xor outsl mov pop mov adc (bad) jl hlt call cli rclb stos sub xor fmuls imul (bad) xor or sub jb xchg mov mov cmp mov and jns xchg xor mov arpl mov cmp ljmp loop xor sbb adc stos sub sub jns push idivl daa adc loop push test or xchg dec mov test ret xor (bad) add or int test pop xor sub imul shlb out imulb add sub sub push mov add das sbb jae dec push mov push mov xor stos add and dec in fwait cmpsb out push or lret push mov or mov cmp imul lods clc fisttp leave sbb xchg xchg and pusha cmp ss out dec shll pop icebp xchg ja add scas add sub das adc lock (bad) xchg sti fstpl jge orb push out das ljmp daa (bad) fyl2x leave add add roll push shll repnz mov cli out jns (bad) or add fnstenv mov inc sti dec cmpsl pop pop lods pop pusha shll test add mov hlt arpl stc sub sbb xchg inc xchg cmp jmp int3 daa ret int3 or cli fimull rolb outsb cld lock ljmp jmp icebp dec push in adc and stos popa std lret sub xchg stos lret mov mov repz fsts hlt (bad) loop xchg hlt movb xor fstps stc and popf out enter fs pop stc xor repz adc cmc cmp sub (bad) and ret inc jno dec subb jns fs jmp cmp xchg lds adc fdivrs xor or icebp rcl push push mov pop dec and test clc cmpsb in lahf mov push and sbb pop psubw repz mov clc sti jb lret adc cmpsb jb ret das divb js rorb or sub sub and mov into faddl and sub int3 daa ficom and sub insb push ljmp repz rorb (bad) lds jl xor or cmp stc mov jno imul xor sub and mov in out push adc fild and popl lock icebp mov sub cs cmp repnz mulb adc sub xor sub scas iret jns or (bad) pop dec xor add stos add imulb mov leave add mov lcall data16 (bad) push test repz lds pop (bad) mov push add popa stos shll inc dec mov xchg (bad) sub loop mov push jns dec jo xchg lods leave xlat inc jl and and mov sub bound fidivl cltd daa aad ret xchg insb outsl add jne xor test cmpsb mov (bad) dec jg cs add aas shrb and xorb and add xor mov pop shl sub cmp cld xor insl test shrl repz (bad) repnz dec xor dec jns push mov push das sbb sbb aad mov mov cmp jmp and sub sub cmp add mov rcl pushf jmp jne pop das xor inc mov scas sub mov ss repz or cmpsb adc push and in stos in bound fsts int3 push mov cmc imull test (bad) repnz lea scas pop cwtl jg iret shl mov add shlb lock shll bound loop mov ret xchg mov lods and ret push pop shr mov movsl or push xchg movsb pop out xchg xor pop js mov inc xchg jle sub das sub inc dec mulb lret out or mov and jne adc fs out mov sahf fld sub fnsave movsl jmp push and add insl dec sub mov ja movsb imul mov and jno dec or mov loope pop addr16 daa jb push mov or (bad) cmp (bad) or leave jl sub jecxz jne and pushf jle adc dec xlat mov icebp sub adc xor or repz sub shl adc cmpsb or icebp add enter add xor movsb sbb mov (bad) push lcall mov aaa and daa jge ret mov adcb jo gs adc stos sub rcrl push pop (bad) lcall add mov mov cs push frstor cmp and rcll add sub and push jnp (bad) jb clc std add sahf out movsb fildl pop adc dec jmp xchg push cwtl ljmp dec adc mov mov dec decb scas orl mov jmp push or lcall scas pusha lds fisubrl hlt fmul adc push fcompl mov jg xchg imul int jno movsl lock divl (bad) or iret xor add pop les mov push push test cli mov (bad) fsubr call jmp icebp mov clc cltd dec sub pop and ret dec lret aad (bad) mov xchg call nop imull push pop out pop mov pop (bad) outsl xchg scas mov adc inc lods mov push sub btc ficom (bad) mov imul pop lahf xor add (bad) into insl popf xor lret add icebp js inc aam dec mov dec aaa sbb addr16 mov dec mov and inc and add pop (bad) out iret leave push jge imul aaa std (bad) mov mov sub pop faddl test jmp pop mov jns gs ljmp ret cs xchg sbbb (bad) xchg je rclb cmp adc mov inc lea mov outsl and cmpsl repnz gs ret bound or or xor dec mov xchg mulb dec pop enter negl add rolb xor xor mov fbld outsl xor sub std or adc xor sub adc mov jp rcl test aad dec out fstps pop xchg repnz mov xchg pop sbb pop jmp mov xlat repz (bad) dec out lea add (bad) jno sub unpckhps out call mov xchg call aaa xchg loope sarl cli sub mov push adc sub or mov or push fildll cmp mov pop (bad) shr sbb cmpsl pop inc cmpsl sub lahf stos int3 jg (bad) push sub mov pusha fidiv cmp cmp or int sub leave leave push dec xchg or xor adc mov sbb cmpsl xchg ds add jns sahf stc add adc jo int3 or dec enter sti jecxz daa ds mulb cld or or leave imulb icebp icebp aas std xor in push mov pop clc test ljmp pop adc leave clc ja dec fsts xchg (bad) xor (bad) pop mov pop cld and popl mull pop int3 sub xchg ret repnz sar and (bad) ret pop inc adc mov bound inc or add or pop xchg push and xchg repnz pushl sti mov in or push push in test nop push jmp sbb xchg cmc push repz cmp int xor dec or pop pushl es cs nop lods movsb xchg push fld mov leave mov jne sahf push add in adc scas xchg sub mov mov pop sbb mov mov or dec xor fisub jmp lock (bad) lahf stc and ljmp int and repnz fist aad arpl mov jb xchg or inc leave loop cmp pop and out adc mov mov fdivs push push sbbb insb pop cltd mov push mov mov loop jbe and pop pop mov sub xchg sar mov pop data16 cwtl popa push loope mov pop out mov icebp inc mov mov ljmp xor pop ja lahf scas les mov jge pop jo lahf pop add jmp loop inc xor insb lods lds fucomip mov inc repz clc lock fstl sahf mov or daa sub push scas and sbb fistpll inc sub je add and xor test movsl clc lahf lahf out mov mov ror sub clc jo inc jnp mov mov add push lods push inc xchg outsl popf ret jl adc add push cmp (bad) sub das add mov fiadd repnz mov cli jno ret test cmc lds out mov jnp iret cli sub cmpsl mov fdiv ljmp rolb divl not cs push xor sbb ret (bad) mov loop test repnz repnz les sar out pop loope cmp xchg xor ret xor pop fcoms cmpsl adc cmpl ret les les and rolb outsb aas jb out adc fisubrl int3 popa add xor scas sbb inc out adc lret sbb xlat xchg into push (bad) push call call imul mov xchg imul ds ficoml mov mov inc shll and out cmp rolb scas popa aas ret mov dec push loop cmp or dec popa lret or out mov add aas mov ss pop cmp xchg gs push negb dec test fcompl jae bound xchg sbb fwait xor cli scas cwtl lock into xchg push in adc scas xor idivl lahf notb icebp test jo dec or push lret push into sti je,pt roll mov inc (bad) pusha out lret add sub add mov xchg das pop xchg adc mov jmp incb jne and and xchg scas mov jbe rcr and and into aas jne mov (bad) movsb mov divb add sbb sti mov xor mov lcall out pop fldenv mov cmp mov notb out loop xlat mov dec or int3 and (bad) pop idivl fcoml (bad) adc mov xlat push mov pop jmp mov mov and fistl sbb cs shl clc out faddl popa cmp sbb xor fadds jl fs (bad) movsb and incl pop movsb pushl fidivrl (bad) or clc movsb out xor push pop imul sub je inc sti add cli pop aam imul cmp (bad) and jo sbb dec xlat repz divb and mov sbb ss adc mov int3 movb imul fs ljmp add imull sbb jne clc mov mov pop popf dec pop adcl iret push push pop gs ret out popa xchg sub sub popf jle push in jae cltd subl fcmovnbe jo lret sbb push loop shll jp popf pop add and into out bound repz cmc adc aad out xchg popa xchg mov je (bad) cs test lds xchg leave stos mov mov dec mov sbb cmp add hlt ficompl sub shr fdiv iret push sub xor dec lret adc inc xchg add cmp sub sub pop fsts nop ja jo mov dec popf nop adcb cmp lods adc enter dec fcoml jl in cwtl lret sub ljmp pop outsb cwtl scas jmp daa jae sub pop add mov adc jo xchg daa adc sahf xchg enter pop cmp mov rclb jns jnp bound in fadd enter cwtl bound jns xchg and lahf sub pushf xor xchg inc ror jl jb popa cltd shrb out fs test mov outsb pop mov adc add repnz pop insb dec mov dec shr in sbb (bad) (bad) mov pop ja xor ficompl dec clc pop add sbb iret out xchg loop sahf out mov repz cli adc mov sahf mov fisubrl add loope cmp movsl pushl push in xchg dec loop xchg jb mov jns fisttpl cmp pop sbb inc inc cmp or mov (bad) and lret in dec dec ret subl movsb sar and fwait add sub popf (bad) (bad) fs mov das iret ja push sub popf insw das (bad) mov mov je mov imul repnz jns ret scas pop xchg out xchg sbb sub xor add mov xor ja inc mov xor jmp or adc or inc xor (bad) fadds and imul push add pop into xchg sbb mov out fnsave fisubrl mov test fisubr pop fisubr push sbb mov (bad) or es ret leave inc lock sub xchg xor fimull lock call pop iret xchg sbb repnz stos in cli mov inc es divl add int3 mov sub daa sbb and dec sar mov add popf pop jle (bad) xor pop jp (bad) std cli cmp sub jg fs jae enter les scas out (bad) out mov dec movsl sbb inc pop lea lret pop das xor xchg ss fisttp fidivrl lahf iret mov xchg int3 lds dec (bad) jmp xor mov dec push lret sbb xchg faddl or xor repnz jne jp loop ja adc pop cmp pop mul dec stos xor iret or pushf fwait loop ror xor in bound cmp sti mov inc scas jp bound pop gs mov dec fucom (bad) and fs and ret nop mov data16 push data16 mov add xchg push mov push (bad) pop or mov test inc fimul or xlat popa push out jl mov dec and clc cmc cmp inc lock cmp sub push mov pop xor dec mov jg out mov cs pop lcall mov insl dec (bad) jbe aad mov and inc in cld (bad) imul xchg jmp mov jmp add rolb or mov pushl pop cs cmp mov adc and pop and (bad) je shll shlb mov jmp sbb rcr scas (bad) lcall mov das into fldcw loope xlat and push or cmp push push push or cltd mov xor sub dec or xor out and repnz push adc stos mov imul fildl dec (bad) pop (bad) scas (bad) jmp (bad) push pop shrb imul mov mov out push sar dec lcall mov or int3 jnp out mov divl dec rol pop fistpl mov ret (bad) add push mov sub mov std xor (bad) (bad) sub mov loope adc stc enter lock mov mov pop inc mov push add lods mov xor gs cmpl in test mov leave xchg mov jno bound repz pusha or mov repnz mov out cmp xchg inc loope (bad) fs push mov xchg clc xor xlat ret (bad) pop add dec sub and or sub or add mov dec cmp pop xlat xchg pop cltd nop ret push repz testl bound aaa jl jnp push call push sub jbe or lcall mov (bad) push mov mov add call add inc xchg icebp dec ret fstpl ja push out jg (bad) adc fidivrl and das and int3 (bad) mov lret lock test stc lea sahf pop leave add and icebp jle loopne jbe mov xchg (bad) add stos clc test fmuls into mov and jg fwait sarb or add mov inc nop or cli jge mov scas adc mov add mov shrb test jno jecxz gs sbb xchg sbb icebp popf movsl jno mov mov leave jmp cs iret sub imul push fisttpl les adc add mov jnp and repz mov out pop cltd ljmp xor out dec test test mov jg inc daa lcall repz aas or lea xor add mov cmc mov lds daa jl ljmp inc sub sub or daa xor jo pop fidivl mov stos push fidiv push adc mov add stos lret jo pushf stc jmp and pop leave in adc cmp mov or push in lods mov mov lods push pop inc adcl imul sub mov push xor push loope pop mov push xor mov call xchg jns (bad) leave shlb mov xchg dec ljmp je popf push xchg or lods and mov and and (bad) scas inc xor (bad) (bad) daa push inc lahf xchg loope and jl rep jle or push or xor std aam push push sbb (bad) fcomps mov pop imul daa cmpsl dec push in push pop push into cli sub jmp scas repnz and in stos fnsave mov cmp xor push jecxz das repnz pop mov fcmovu or lock mov cmp sbb mov popf hlt push leave sub push mov out jnp mov bound loop cmp mov sub add pop sub sub xor or int3 xor xchg test rorb lret stos sub mov pusha fwait movsl and and inc or pop lret in mov ja mov in out sub lea rorl fnstcw push cltd mov (bad) flds decl and fimul jmp lret push cmpsl and push jnp sbb bound or movsl push cmc xor xor mov call jnp adcb in mov push je,pt push and push dec or rorb jnp mov es xor leave clc or into pop cli or add xor xor push pushf push and mov lods dec and xchg jmp out fs mov push xchg icebp jnp sub mov mov push or xchg mov fldenv adc sbb xor cld pop dec out sub xchg mov pushf fildl dec scas xor js lock out push xor dec mov add ror dec addr16 adc repz outsb mov rcrl jmp test push adc sbb or out pop jb mov mov mov xor aad cmc inc jle lcall sbb call and int mov adc pop sti and loopne cmp not sbb inc cmp loop dec mov gs daa outsb test icebp inc inc inc pop add clc dec sub or pop add fucomi (bad) in sbb mov pushf mov push jle imul sub or sub and fidivl lods xlat gs adc xor and mov or sbb sbb xor std add and mov mov ficompl push xor push mov dec mov mov dec xor sub cmp xlat addl mov inc dec scas (bad) test (bad) inc jmp pusha enter in idivl xor sub mov sahf jbe jge pop fisttpll mov dec (bad) sub jnp daa jge pop xchg negb jne xor mov xchg add sub add lea and popf rolb pushf mov cmp inc mulb (bad) cs ljmp (bad) mov inc out jne mov pop movsb sbb push orl push mov std sub mov adc jmp jg jl and mov pop xlat adc dec xor xor mov mov mov pop mov lret clc (bad) mov add inc mov dec fistl rorb pop test push dec mov sub adc imul push sarl mov jb (bad) out and (bad) jmp test loop jns imul mov ljmp ja add test add pop rcr or or in stc pop mov dec mov lret sub mov (bad) movsb cli sub js add lods inc (bad) and xor push sbb jle scas movsl cmpsl ja (bad) xchg or cli and or (bad) (bad) fidivr shrb fsubp dec stos inc out mov xor sti xor and and mov pop mov dec sbb xor cmp push repz xchg iret fsubs pushf lcall cmp movsb xor out int3 mul dec orb mov jl in lds je pop push (bad) sub testb mov jb cmp (bad) mov push sub dec sub add mov jle pop mov divb inc xchg lds dec sub dec mov push mov and adc loopne idiv and xchg mov or add xchg imull xor dec imul lret loopne or push jae push or cmp adc sub fs dec ret fist fldcw mov xchg inc mov inc pop (bad) out call adc sub ret add or cmp aam adc or sub scas lds mov mov adc cmp push mov into push xchg into adc add std xor pop mov addr16 add mov sbb dec pop (bad) mov cwtl cmp push and scas jns scas inc out das xor pusha icebp and dec or ja adc mov out sbb insl daa or ja mov sub mov (bad) dec pop lcall mov mov pop adc mov leave shlb (bad) xor jp aad (bad) pop pop test idivl push ret subl hlt fildll jg std push or ror xor (bad) and and mov xchg pop or jecxz inc mov (bad) data16 xchg (bad) test adc rcrl cmpsb decl mov add add std jno push iret sub adc jae cli pop dec xor arpl (bad) cmp xor lahf push pop xchg push xor fisttpll jns fs in dec movsb adc mov jo dec add jbe int3 pop xlat adc fstpt pop mov inc sub js xor sub cmc pop lds cmp xchg out jb push repz cmp or or (bad) scas fs mov pop int3 dec inc pop and repz mov sub xchg mov outsb mov xorb cmp sbb incl sahf lret stc inc xchg stos lock and ds ja mov lret stc adc push dec jns js movsb mov rclb mov pop sbb cltd mov sbb shrl movsl adc stc sbb mov pushl div bound dec push ficompl push sarl adc sti xchg je push ja loopne adc jmp shll pop cmp movsb shrb cvtdq2ps xor scas jmp and outsl lret (bad) jmp lret ss repnz xor lea pushf jp out fisubr call int3 sub xor and sub in (bad) mov (bad) pop pop inc cld inc test push (bad) aas je aam mov sbb xor dec cld sahf add add std leave dec call jle pxor in sarl frstor sub sbb insb jo xchg jle pop cmc rcll xor lock and jns xor test sarb dec scas fcmovbe adc lret mov fdivrl dec mov jg lock xchg adc and andb (bad) movsb repnz sar les in clc mov int3 sahf fldt mov pop cltd sub xchg mov push les negb in call idiv mov push sbbl add push add sub mov xchg mov mov sub mov lret cmpsl test fsubp adc add add and cmpb mov dec pop mov pop mov sub cli mov mov test lods mov popf mov mov dec pop jbe xchg aad sub div das or inc imul jl pop aam or add mov (bad) or int3 in mov adc movsb push daa push daa mov cmpsb cs into mov cmp lds fsubrp mov xor sbb push and xlat lock ret adc popf jl sub mov stos movsb mov sbb xchg mov movsl (bad) dec test movsb sub cmp push xchg stc cmp adc xchg (bad) dec je pop je xor pushf cmp inc inc dec daa cli jl add aas cmc xchg cs fcmovnbe xor sub cld mov fbld ljmp in inc rclb scas cltd das sub sub xchg lret jns mov push out pop loop lret adc dec cmp lret mov xchg push cwtl js (bad) jbe add cli push dec into mov int3 adc push dec leave jg or mov test lea mov pop out mov mov dec and lret lods je loop pop mov das shl test jmp (bad) cmpsl aam and pop jg dec ret sub inc inc jo fidivrl cmpsl repz jmp ret aad das lret mov icebp lret (bad) or jne fisubl xor sub dec mov sub sbb push imul out in sub test movsb stos add mov xchg into mov (bad) je jmp mov fisubl cmpsl fs sub add xorl xchg rcl jl (bad) stos lret sbbl mov pop ds jbe dec (bad) call cmpsb sub cmp jb add xor mov out ficompl jmp dec or aaa rclb ret and das jo (bad) cmp lahf sarb lock aaa pushf cmp xchg xor shl movsl mov xor (bad) jns push xor xchg fnsetpm(287 add clc inc daa and cli cmpb sub xor lret lods scas iret adc xchg mov (bad) cmpsl xlat xor add adc (bad) repz int3 stc lret add cmp dec or das mov int and adc inc arpl cwtl mov call ss data16 out and (bad) scas idivb mov aad sub push imul cltd lcall (bad) lods add jnp sahf sbb fs sbb cmp fucomip inc negb pop divb push sub jb notl ja cmpsb and mov (bad) adc int3 and popf jbe jo stc xchg repnz lahf cld nop fs mov aad rcl xor jne scas cmp mov lahf loop xor icebp or xor jmp inc pop dec inc into and dec jb lock dec nop in sub dec push jno or loope sub adc (bad) dec aaa lret push inc repnz or mov jecxz idivb clc out cltd xchg imul push mov cwtl mov sub add jmp repnz push sahf sub repnz cmp or mov mov push stc (bad) cmpsb test and je add jbe pop bound push mov ret iret adc sub stos bound cs xchg enter cmp pushf and pushf xor mov and dec and aas je test movsl mov into jg testb icebp add repnz jmp cli cmp jmp clc xor jle scas int3 cli stc daa add inc addb fldenv rcrl jno imul inc out movsb shlb adc fisubl mov mov (bad) das mov out in mov gs dec movsb mov mov xor jmp push pushf pop push inc nop (bad) mov add mov pusha notb add or sub push jne je and sub cmp and sar stos xor icebp mov xchg inc lock or and or push xchg push mov jmp ja pusha es and xchg adc sub jb scas jo xor stc mov mov jmp add and mov imul aas (bad) popa pop repnz xor loope pop mov movsb test les test dec mov jmp mov pop movsl sbb jb dec shrl lahf pop cwtl xchg xor (bad) xchg add pop insb jbe dec outsl ja cmp mov jp xchg ss jno xchg repz out inc mov dec ja sub jmp mov imul mov mov mov mov les into loop push push insb int std adc xchg cmc mov mov xor pop xor sub ret in in xchg pop mov jmp adc adc nop into inc xor shll sub sub mov std pop cli clc adc xor ficoml adc sub dec ror or clc mov push test fsub pop ficoml insl pop push loope fistpll jae or repz mov mov dec xor and push pop jge fsubrp mov pop cmpsb cmc pop and mov dec jbe push (bad) repz mov push leave repz mov or int loope sub gs sahf xor stos les pop fs cmpsl mov dec cmc insb lds xor adc pop mov pop cwtl sub sub testb cmp or rep repnz nop dec xchg mov jmp push xlat push adc loop jns dec pop in idiv int3 dec push movsl movsl or (bad) (bad) and leave je mov stc orb mov cltd popa cmp or mov inc ja mov rorw shll sub or insl fstl adc push sub or xrelease jmp sarl repz pop js xchg cmp iret push mov lods (bad) cs inc pop mov adc mov test loope lret data16 mov or leave mov jp dec mov sbb repnz add or negl and mov cs add jg mov xchg add add fs dec lods jnp xor into inc jp loope les movb les inc pop out cmp xlat mov dec push mov add lahf sbb adc jae and mov push nop std sub pop fstl jmp pop sub pushf in xor xor sbb call sbbl sub les cltd mov mov push jle cltd pop xlat dec inc stos dec or lock add and fsubrp or xor mov adc sbb xchg sub mov sub xchg or scas or jp sub mov fsubs adc pop out xchg sub and call cmp sub lds sub les hlt xor add ret addr16 or push jo and and pop stos jno lock jle cmp into bound mov ja or rorl inc ljmp inc out pop iret gs mov pop out push comiss pop mov fs lret stc mov sub sti sub mov or insl mov sarb aaa push (bad) and dec (bad) aam iret sahf or inc frndint dec mov push cmp testb cli push dec dec in (bad) xor mov mov les mov mov mov in xchg gs scas movsb jl (bad) out inc fsts popf pop mov sbb dec jmp cmp fsubl fdivs std out and push gs pop das cmp xor icebp cmp int xor adc jl jle lahf mov push daa adc bound scas and mov insl stc pop ret test or xchg negb dec jg and bound ds out mov aas out dec and negl dec pushf mov adc test dec (bad) stos (bad) jmp push out pop inc fs add xchg dec mov mov cmp ljmp aas sub mov add aad jecxz or adc mov (bad) cmc ss dec loopne pushl iret std pop mov sub push ror pop mov lcall scas sub xor sub mov std iret pop sub or pop fsub rorb mov imull cld xlat mov or push mov int3 mov stos xchg dec scas enter mov repnz (bad) repnz mov pop sub mov std nop xchg sti inc lods repz push cmpsl vpmaxsw jne xor enter ja or xor jnp mov add pop loop outsb loope jmp fwait (bad) sub fmull stos jne out sbb add xor cmp fdivrs jmp popf movsl adc mov jle (bad) sub mov mov jne sbb stos pop divl (bad) test and cmc jno xchg or dec aaa stos cmp (bad) or and cmp jmp stos pop adc inc and daa ret fs lea pop mov xchg enter xor lds scas mov pop mov in cmp fidiv std and out mov add cwtl movsl xor (bad) pusha mov xchg lods dec lret and push test in and repz popl add ds xchg (bad) or pop and popl xchg mov hlt hlt push jne ja mov xor mov mov lock jno xchg jmp add bnd jne jne stos jmp pop clc fbstp and push icebp mov (bad) fsts leave push rorl push (bad) and jns jmp lea mov pop dec mov sub or int mov or jns inc pop scas xor clc lret test push in mov (bad) mov xor add lahf out ror out sub pop or lret int3 add jbe xor mov incl test int3 sub sti pop and or sti pop inc or lcall ss sub out fstps imul repnz xchg mov lret ja out cmp lcall inc idivb sarl or jge or imul imul outsb testb mov sub xchg jl push jae nop push (bad) out (bad) push dec aaa pop loope in das xor mov jge jmp test mov popf je jb aad aam lods fsubl jmp cmp xlat call push cld pop push xor cli leave jno dec xchg mov xor add dec out jb ret xlat pop mov aaa popf jae scas stos jnp xor dec jmp lret test out mov dec mov shll sub dec jmp movb addr16 gs inc in imul daa clc or sbb mov lahf jnp inc jne sbb jecxz,pt inc movsb aas sub pop fdivrs out addr16 or dec inc mov out add cmp es push es jno ret jmp sbb ret pop adc jns mov push daa pop or jne lcall imulb pop (bad) mov mov mov ss lret out cmp pop sbb sbb out stc ret inc cmp aas mov rorl jl stos into (bad) mov pop lods sub lea add adc mov sub adc mov lcall or adc or outsb bound cmp jnp les sub or jb sahf xchg fs in pop fs scas mov mov sub cld lea jge icebp ja mov sub popl mov imul inc (bad) xchg push aaa add jno nop dec mov jecxz,pn mov inc or jl or sub pop cwtl (bad) icebp add jp arpl adc subb shll mov jne out or mov adc push aam (bad) ds and jle mov or shrb pop cmp dec mov (bad) xchg data16 push jmp loop xchg mov adc loop and test push and pop mov ds das out cmpsb jb jbe leave cwtl mov xor pop leave aam sub cli out pop mov rorl or push pop or xor or lahf pop add fucomi jg mov shrl add lret dec dec sub bound jbe add sub dec popf shrl ss jle jp gs adc repnz pop stos and pop outsb xchg mov xor dec pop xor lds lret aam movsb mov pop repz push jbe add push jmp add dec mov daa je pop shlb inc stos push add addb aas xor mov inc dec xchg fcoml inc or (bad) jo or push push lods mov mov xchg fwait push shrb add jg movsl and adc (bad) or pop xlat int cmp cld (bad) movsb rorl loopne xlat cmp mov leave in mov dec test push icebp pushf int3 pop ret mov sbb out cmp push sbb dec pushl leave divl jecxz or leave (bad) in fmuls pop iret pop idivb pop les sarl pop add and adc iret mov jp jecxz inc inc sub pop lods push xchg in jb daa stos je (bad) rcrb pop mov idivl inc ja rclb mov jp lds (bad) lea push adc push aam jb mov sub std gs das pusha clc ret xchg call mov ret jg out cs out push push push fsubrl cld out imull pop adc test add popf test mov jmp stos mov xchg lods jmp mov mov pop mov add add pushf push add clc pop xor jne out aad shrb lret push dec cmp sub arpl mov out and (bad) jnp cwtl adc add ja sub and sub out aaa test shrl cld inc mov pop aad jmp mov das or mov push xchg inc mov lea ds test mov addr16 fwait (bad) or hlt jo lret jl repz pop add xchg push mov imul shl sbb cmp jno sbb or in stos lds push mov adc xlat (bad) mov repz lock add mov cs and daa jno adc sbb lcall adc lea add mov fcompl xor stc mov cmp jbe push push cwtl sub ljmp adc jb jae aad mov jmp cmp arpl or or idiv or aaa std jnp (bad) loopne (bad) mov clc mov dec jg inc call mov cs sub and push aam pusha add xor pushf popf lcall xchg mov test test scas lret cli imul lds cld push nop stc dec mov cmc clc push cmpsb cs hlt dec pop data16 cwtl inc (bad) mov push cld fisub push add mov pop in jmp out ret push ret decb xchg and adc stc test hlt loope scas jo fimul insl jl jae sbb lret mov mov inc imul xor call mov fnstsw lahf lret or push mov xchg je (bad) out jmp jmp mov pop es dec inc and sub leave enter xor das (bad) pop add call repnz dec movsl (bad) fbld lret sub jo or dec mov icebp and mov mov push mov add or add popf in mov dec ret pop mov cmpsl enter popf int3 das mulb insb mov mov jmp or lret xchg pop fldt test or push sub clc add sub sbb (bad) fisub enter xchg mov mov mov sbb cld jge aam cmpsl (bad) mov hlt push gs into mov mov lds shlb mov out bound icebp jnp das lock into ja jl imul xchg sbb pop adc push (bad) neg dec std or or icebp ds mov fstps and sub mov sub aam imul push insw mov outsb jo dec jmp cmc xchg stos gs fucomi add cmc stc cld inc roll imull lds sub cmpsl lds es pop pop mov jmp out push repnz mov imull lret mov mov dec mov popf jne mov or jnp xor inc dec mov mov inc adc repz jmp mov notl fidivrl or scas pop adc jmp jmp lods xchg ret xchg xlat movsl enter (bad) sar adc mov xchg (bad) (bad) mov jne inc push (bad) and jmp (bad) push adc popf pop lods in adc sub pop mov dec clc mov outsl into jmp ret mov rcll mov dec fs cmpsb jecxz sarb jo cmp outsb insb jmp mulb scas (bad) icebp or dec (bad) lahf sar cmpsl (bad) mov dec jne xchg loope mov cmpsb dec inc xchg pop or and daa mov xor add mov jne aas sub stc jl popa icebp sub sub adc mov sub cmpsb mov jmp pop dec adc lret and test test in push push mov xchg jmp hlt xchg rorl scas dec cmp or push dec mov movsl sbbl sub sbbb je,pt jp mov mov and test mov cmc stc cmpsl xor imull adc and push shr pusha dec push push scas into dec pop mov dec mov pop push fcoml es bound cli jg pop bound pop xor int cmpsl push fnstsw in std jns or lock leave dec pop repz adc dec xor push cld jg pushf das scas jbe xchg pushf add mov out dec pop lds rep in dec pop mov mov fstpt nop xchg xor dec (bad) and sub adc mov jmp inc xor pop add mov ja mov adc mov divb pop mov jae (bad) sub adc fimul adc aad fstp int3 movsl push adc mov movsl pop jmp xchg mov pop sbb jmp popf push arpl sub push int3 xor scas cmp outsl (bad) dec xchg mov (bad) fcoms out dec add fxch aas mov mov cmp imul inc popa mov xor fiadd pop xlat cwtl pop sub popf jae or or ljmp mov jle stos sub idivl xor or int3 adc mov icebp jecxz (bad) and push xor cmp and add int3 or sbbb lock and lods lret cs xor mov test and leave (bad) out and sub inc lahf sbb fnsave inc jne icebp and jle mov sahf and sub mov xlat xor iret (bad) into cli mov inc stc xlat dec xor repz (bad) pop inc jo or add and and imul jmp das add and mov adc (bad) mov xchg adc fdivr addl iret mov push or out fucomp aas (bad) cmp cmc (bad) cmp xor cmp (bad) fs test cli (bad) shl lcall dec in rcrb ret and cmp lret bound ret mov stos int jle mov mov aad loopne jns mov jg jne sahf push in std add (bad) cli sub push leave mov mov push adc subb cli mov sub pop push mov mov add (bad) jo xor das je (bad) dec pop (bad) out or loop or lahf in pop sub or dec add mov inc mov lods hlt adc ds pop and jg push and mov (bad) dec cmp mov daa mov xor scas addr16 jo dec iret pushl inc ljmp das lret test adc dec stos inc mov repnz inc pop add mov xchg push jns push cmp cli lret mov pop icebp push mov cmpsl fmul cmp pop mov dec out cs andb icebp outsl ret pop les out dec jl cmpsl jg mov cmp int3 imul lret lret xchg cs test sub add xchg jp adc add out int sbb add add mov jmp repnz pop les and in popa sbb adc push adc pop (bad) mov leave lock jl enter int ljmp (bad) mov ret push aad adc (bad) (bad) lret into jne jle sarl add movsb cli jae lock mov cmpsl stc icebp xchg sar int3 or sub and (bad) xor test inc push and popa lea fildll loopne (bad) fwait or fidivrl dec or into jge adc jmp arpl or xchg dec mov outsw xor dec push xor mulb lea mov add mov icebp inc and stc fisub mov xorb cmp xor fcompl or jecxz and sbb mov xor add fidivr std ss jge and lret lods mov add mov and enter orl adcb out pop mov sub mov out das rclb nop add insb cli add adc push or push mov loop sbb adc mov int or je mov pusha mov imul or mov jecxz mov sbb sbb mov xchg or add cmp and mov lods mov xor jecxz,pn sub mov mov je jmp add xor shrl imul mov mov movsb (bad) fdivr mov dec gs cmp mov imul mov (bad) mov jns fstps in dec mov lea xchg xor lret cmp std and xchg mov divl mov inc ficoml cs mov fsqrt and or jne push or negb pop or jns dec push dec lret cld pop mov add scas fs dec lcall je push and push and cmp sub movsl inc je jmp jb sti fbstp pop inc sub or or mov rolb js cs and bnd les inc and dec je mov lock fildl pushl lds stos pushf mov pop add fcomi stc xor jns xchg mov repnz xchg gs divl xor jmp (bad) stos mov xor pop xchg sbb xor out gs popf fbld dec loopne scas xchg xchg in icebp mov adc xor or xor out sub mov xor jmp sti (bad) aaa pop jl mov rcrb mov mov ret and push add fbstp adc xchg loop fisttpll sbb (bad) or sub xchg jb roll incb clc insl rorb and mov pop jmp pop leave out lahf out lods mov jle rcrl push pop xchg jno les xor das je jmp jns xor daa sub sub (bad) (bad) jns push and push mov and xchg adc inc dec loopne mov roll or lret push cmpsl add cmp cmpb cwtl pop add in xchg test clc xchg pop dec mov (bad) xchg xlat or mov rolb (bad) jae xchg lods call in cmpsl loope pop ds jmp xchg xor add and in insl test push test push mov les cmpsb icebp sub inc xchg fistpl adc out sub or add or rcrl mov into hlt test loop sub or xor (bad) aas aaa loopne pop lcall mov call pop sbb xchg (bad) mov xor sahf dec cmpsl jmp loop inc subl cwtl pusha pop add mov cmpsl outsl fildl repnz (bad) xor out mov lret push add mov adc adc (bad) and into pop stc push inc or sti mov lret pop pop fsubrl jae or loope sti cmp rclb out mov mov mov dec jl mov pushl subb mov jp add pop xor sub movsl leave (bad) xlat rcr les sbb (bad) dec into and pop jno add or fbstp xor das int3 aam popf inc mov dec xchg add stos call dec (bad) adc xor cld mov xchg pop pop ret adc movswl out and in ds lods or push sbb jg xor sbb mov iret or pop sub add mov xchg xchg push scas sub loop (bad) mov xchg and (bad) cmpsb xor jno mov mov ja mov add push cmc ret sahf jmp inc and icebp xor pop add mov bound into dec jo loope aas popfw scas fdivrs cmpsl pop push inc push xor jnp mov shlb jmp mov scas cwtl push jnp repz and add sub pop jno imul decb mov mov adc mov cmp push adc xchg or jo (bad) dec es je loop add xor and and xchg stos mov iret and cld sbb ret out sub push adc cli adc lods xchg mov sbb fisubr lret mov add push pop movsb (bad) jecxz pop das and stos cltd jae cmpsl cwtl shrl xchg add sub sub jge pop push inc sbb insb aad mov jns mov fisub add sbb adc sbb movsl mov add ja push les out xchg enter lahf ret xchg imul adc push sub pop dec mov xchg add push push dec dec inc jecxz cld icebp push dec icebp fild das inc (bad) jle lret jl gs and and incl xor ffreep xchg and jmp lahf and pop cmc insb and jns (bad) loop push and dec (bad) inc movsl mov and adc xor and imulb (bad) mov rcrl push push lahf dec dec adc cmp inc and adc leave leave inc pop std sbb (bad) add push xchg mov mov push (bad) lock repz adc stos sub test out loop lods xor fwait pop sub out sub movsl sub rcrb pop or out scas bound das stc xor fsubr add pop ret jle mov aas int3 insl and pop jb into cmp js pop test jmp js xchg sub mov loop jmp and or (bad) adc cmp xchg or add mov das sti sub sbb das jno xchg xlat jmp insb repz pop push inc rcll lock out push sub loopne out pop jle dec inc aas add and mov xor lods inc or xor pop mov xlat mov mulb adc jno in ffreep and push sub sub lods xor orb sbb lret jae das fs rclb cmp movsl push add int3 rcll mov adc or sti lret push mov and sub repnz push sub out dec mov lea in pop mov shlb pop clc clc mov int3 hlt sub pop scas cmp sahf out or gs jns mov repnz mov cmpsb sub repnz mov or jmp lock xchg sbb xchg movsb add or ljmp int push stc cltd push popa jecxz push pop push sub pop (bad) xor mov or mov loop pop jae imul (bad) lahf mov or aad inc xor and add sub test dec mov ljmp xchg and xchg sub mov mov ds jnp adc or xorb es test rcrb nop clc adc pop (bad) lds jle sbbl mov xor push ret jl mov bound outsb mov ljmp xor aam xor pop or enter mov ds jmp push int3 add push stc je xor sub sub data16 (bad) dec jne les stos push jmp pop xlat sbb adc dec ja les stc pushf call adc cmp push push cmp in jge and nop xchg sar subb push xchg cli pop add ljmp inc adc adc in out les dec loop xchg mov addr16 inc out sbb testb push aaa mov xrelease jge dec mov lock fmulp gs xor mov sub js inc fsts xlat movsl inc sbb in test push das push sbb xchg pop mov pop mov fs mov pop add mov and dec rclb and popf stos jg test xchg sarl xchg repnz lahf push mov sub push movsb pop sbb mov pop incl sbb iret mov ret xchg pop mov push into and add adc repz arpl sti sub and into sahf inc xor repnz dec loope push mov fwait xchg shr xchg jmp inc pop and xlat (bad) or arpl outsl xor xor imul test mov aas cld xchg xor cwtl push (bad) dec and test loop xchg mov loope,pn gs adc xchg dec test and leave jecxz repz or jb shr movsl cmpsb es and in mov in xor out xchg sub dec fsubrp and bound hlt mov shr mov pop outsl enter mov stos dec inc cltd icebp jnp inc mov mov add or dec in lods leave shl test or mov dec dec ljmp pop pushf (bad) leave divb push dec out cmp sbb lret xchg call mov dec inc inc pop xor movsl jmp les fisttpll jns add pop push inc cli add and cli ds add fdivrp es mov mov mov jg pop xchg bound sbb nop pop leave xchg repnz scas and push std into adc cmp ret ja push or int3 mov or ljmp lret imulb clc lahf pop mov push (bad) in inc shlw jmp xchg (bad) mov xor xchg inc mov ljmp fsts fs and outsl sub push es mov test mul jmp mov mov (bad) and pop or add xchg jmp cld ret xchg ja xor int3 sub mov ljmp mov fimul icebp or outsb lods xor loopne in xchg or mov fidivr push lds add les xlat stos mov xchg and insb outsl shrb mov ja dec mov into pop and out popf outsb xor aad cmpb add xor repz test pop out pop xchg pop mov insb or xchg cmp mov imul cld into test lret or add add rcr inc add adc and test push adc sub sub or ret pop fmull test je mov xchg cmp sub sub jnp xor inc js mov lcall sahf (bad) andl sub xor mov daa imul rorl daa push sub dec ljmp jo scas mov clc lahf xchg jecxz adc sbb sub or aas stos jb or into sub daa jg mov (bad) mov pop mov scas (bad) cmp sub clc cmp xchg fstpt mov iret add xor jmp out or in mov scas mov lret xchg out test jbe jae adc jmp xchg pop in mov movsb ljmp (bad) std daa iret sarl inc adc inc or sub lods cli cld cmp stc mov loope jecxz dec loop (bad) xor call xchg mov push pushf and cmp adc pop sbb push xorb jb pushf xchg push sbb mov sbb inc sub dec mov in aaa or cmpb out out xor add imul not pushf mov xor xor ret sahf sub sub xchg jge mov cmp cmpsb pushf xchg mov out cs mov or rorl in scas cmp (bad) pop mov gs mov pop adc fisttp fldenv cwtl fwait mov jle call and dec test and icebp inc and out repz and dec daa add aad adc mov mov sub mov xor fsubrs (bad) movl cmp sub mov cmp clc (bad) scas pop mov sub out fcoms inc mov mov icebp in leave add xchg fnstcw mov cwtl movsb rorl xchg in mov mov add cltd or call mov sub jne mov pop dec or rol pop mov xchg ljmp mov pop xor pop fsubrp xchg xlat ljmp lds pop cmpsl sbb or and push (bad) push (bad) (bad) stos lods sub add in sbb ljmp mov mov sub xchg mov scas add inc std or dec in add mov pop jns or int adc mov dec adc bound inc add fcoml adc push cld inc ljmp mov les int or and cmp dec js mov sub push mov xlat cmp xlat cmp iret outsb xor lret mov xor or pop inc movsl pop push mov xchg xor adc add add mov inc movsl inc lods sbb cmp or test call leave pop outsl lret or test fistp mov (bad) mov lret push sahf add call cld jo test out in bound add jg and loope das lret andl adc ret idivb rorb mov loop push sti mov int3 and rol sub in icebp jp negb and loope push ljmp addr16 pop xchg xchg idivb cmp or mov and cmp ret in dec xchg les adc (bad) out sub das stc orb push aam gs bound roll dec sahf leave fnstcw andl cmp daa stc jge sub mov sti lods pop movsb cld out mov rorl mov (bad) sub push out add gs adc mov fsubs lret mov pop jo aaa sbb push pop pop std adc dec aas out add call outsl mov or pop je xchg jmp pop ret push pop fstps repnz xchg or inc leave ljmp lret adc nop ficompl fildll add fs mov add imul lret lock les mov mov add imulb fwait xor mov fist mov stos xor adc cmpsl jmp cltd pop addr16 add xor test mov popa lret mov mov add das decl inc pushf dec jl mov pop sub fcomps xchg adc xchg inc jae push out nop popf cld cmc push ja pushf xlat sub leave (bad) data16 mov xchg out mov push stos pop jae test test loopne (bad) mov fstp adc jmp sbb mov add or sti and sti (bad) adc loop adc std test mov xor and add mov stos aas or imul add sti xor xor (bad) loop ret push imul mov inc bnd or push (bad) pushf jae xor mov mov pop jl in daa inc enter xchg mov adc (bad) xor int3 mov or mov imul sar sahf out xchg lret stc std lds pop mov pop and cmp jl les idiv sub jmp das fcoml sub (bad) sub ret fldenv aas test movsl cli idivb js (bad) mov sti inc ror decb pop in mov fwait add mov js std cmp iret loop nop clc inc jp dec icebp out sub leave mov xchg ret imul xchg pop sub negl dec jg gs adc lock scas fs push data16 out lock xchg aam push mov add xchg pop pop imul mov xchg (bad) and push aas out pop mov sahf sbb scas repnz shll mov add (bad) incl fistp add xor pop mov aas notl roll jp js pop jae add in xchg (bad) sub out aas xchg stos inc or lret or push cmp mov leave jb popf sub push push test push dec mov sub jle fnsave dec insb xor or adc lods das cmpsl in cli sbb xor cs loop ja adc xlat xchg push adc pop jp adc popf in outsb mov mov in fild jo ret fisub xchg scas out imul leave push pop outsb lcall add andb mov out jb inc ss push sub dec in mov dec ds movb cld adc xorb add fs sbb mov cmpsl ret sbb bound xchg dec jmp pop jmp xchg dec lret mov (bad) repnz inc leave sub pop js stc jge jns adc enter jp add (bad) in sub orb and or pop addr16 pop lods clc mov add sub lret mov lock cmp mov rclb mov sub outsb mov jp adc mov push pop aaa orl push sti lcall lcall sub mov mov xor mov out adc xchg stos adc lret or mov call test sbb jae mov icebp push inc enter mov or fs js sub es mov xor or cmc fs sub xchg mov and mov xchg mov pop jo or mov and dec mov dec sbb fnsave jns out aaa mov mulb into push data16 sub sub ret pop xlat adc add pop mov mov es mov lret decb data16 nop xchg or stos push dec pop ret push jmp iret jmp test shlb and pop (bad) imulb ret mov or add scas fstl cs mov (bad) sub inc test or mov mov dec mov ss xor xchg push jb call push mov sbb sbb rcrl xchg jbe and mov ss add outsl xchg call test cmp dec faddl xlat mov imul xchg in or stos fsts xchg pop lds mov pop bnd enter xor stc sub pop shrl mov (bad) xor pop inc neg pushf loop dec lock and mov or das out sub add mov cmp jo loope out dec adc jle mov dec push mov adc sbb dec in cmp mov and xor icebp sbb daa or mov nop jmp test xchg cmp mov fisubrl sbb pop mov mov repnz and sub mov ss ror push sub (bad) and cmp dec push mov cmp and rcrb addr16 sar dec je pop sub xchg cld ffree push scas sbb in lret lods aas rcrb addb mov mov mov add movsb pop cmp jmp or sub dec daa sub jne or sub scas (bad) cmc adc jb mov cs fidiv adc das int adc es fadds jg mov fldl lret and leave pop or aam ljmp jg mov outsl data16 out ja or arpl mov mov jbe int3 cmp xor dec cmc iret sti lret inc imul popa xlat fild jle cmp push sbb popf mov fisttpll sbbb lods (bad) jmp mov xchg pushf (bad) xor dec imul repz repnz inc repz dec xor mov pop push or mov call (bad) pop dec std push xchg cmpsl sahf dec cld insl leave add or inc inc fwait xchg negl call jno pusha sbb repz (bad) out push cs add (bad) fs sahf les add jae popf je cld inc dec (bad) out mov push jmp cmc idivb mov fildll (bad) add jbe adc ret lret ficom out repnz dec ljmp lret or ret fidivrl fcmovb fdivrp mov mov xor outsl cltd xchg push out mov or ja aam dec popf lcall sahf adc cmp (bad) xchg cmc sbb insb jne pop and push in sub push add xchg mov sub mov push (bad) xor data16 repz xchg mov jecxz iret repnz xlat in sub mov fbld shrb mov push xchg dec fadds sbb lahf push aaa mov mov bound incb daa add push dec dec dec mov sbb add fxch pop pop ds xor lds dec mov xor and lahf xor gs jb into xlat shll dec frstor out fwait icebp pop notb ljmp (bad) sub fcmovbe mov add mov cld pop jmp leave push ljmp push jno add stc (bad) (bad) jo je in lods xor popf xlat mov (bad) and stos jecxz adc lret hlt shlb and and and adc repz in into popf clc ficom nop fs adc out dec push dec sub jl lret loope inc push sub scas adcl xchg leave push (bad) in mov mov sti icebp mov test sub xor mov adc into or dec dec fcoml xchg repnz xor stc (bad) adc pop out adc sbb jb mov or sub sub inc xchg add xchg cmp outsl popf cmpsb scas daa je shl jae dec in adc stos in dec insb sub jge mov xor imul sahf out or enter and inc (bad) scas pop push leave push in pop movzbl mov test pop mov test push pushl xchg mov pop xchg xor mov push or mov xor stos xor add sub pop insb ljmp jecxz sub fstl jle xchg add sub sub out lret dec out sub sub rorb cs icebp outsl orb mov or pop shr cmpsl and sbb jae pop (bad) lret xchg dec mov iret stos sub cmp jl lret jmp leave pop (bad) int3 xor lock and mov loop leave add pop nop cmpxchg jle mov es and jno repnz xor jp xor jo or xchg daa push mov aas add dec xor jb jle roll loop loop xchg iret scas xor add cmp xor cmp fs xchg test xchg repz push aam add pop pop dec mov add or sbb pop cmp das fisttpl adc sbb or or jecxz das sbb das or pop and std data16 xor outsl dec in mov call jl popa (bad) or push dec sub mov inc mov outsb and xor lods push ret divl daa mov or push push sbb idivb jge ja push push (bad) insl insb push imul popf movsbl jg sub loop out enter xchg insb fstl pop mov clc cmp shlb rorl fs imul aam aas and adc stos imul fcompl (bad) jge mov not dec idivb adc xor push ds je int cmc icebp sub mov call mov inc mov push jmp jmp mov mov rcll insb push adc ds xor js iret ja or fistp xchg mov ljmp inc mov test (bad) push pop jae cli cltd cltd fsubrs sub xor fisubrl icebp icebp aaa addr16 jmp mov dec sub iret das sarb and sbb out push int xor xlat jae dec xor imulb lods frstor and sub mov in ljmp scas int3 nop mov pushw mov lahf jg bound repnz pop xor dec cwtl inc rclb lret call repz lods nop sub xchg add pop xchg scas fadds xchg imul fsubl daa cld ss push pop or xor add push gs pop mov cmp scas shrb mov jl pop jne jge out mov lahf fsubl jmp mov pop fsts sub and jle push sub pusha or notl (bad) dec jo xor int mov cmp add jle jmp lret popf add jp in test hlt mov push pop or popf jne xchg xchg lcall fucomi fdivl mov or sbb stc push dec enter imulb and jne mov cmpsl xchg push pop fcmovne cmp or inc add pop (bad) pop mov fnstcw add stc xor aas bound aam ret faddl push cli dec mov jp sahf xor lock sub pop out and mov sub mov xor daa sub jle outsl sbb rcr repnz (bad) jmp xor vmovups xor cld and gs repnz mov loopne ljmp idivl cmp or loope mov stc prefetch lds push pushl mov add pop (bad) fs xor add imul inc pop and push jae xchg and (bad) xchg add test dec sub (bad) xchg inc stos movsl jnp das pop icebp dec into out je test xlat out mov mov mov sub aam pop or (bad) shrb jmp (bad) icebp sbb cs sub ret les add and mov add loope pop jmp fs jmp add mull push andb push cmp stc jle jno pop inc jae dec sub sbb mov je jno iret xchg lea adc movsl lcall xor dec test mov or inc jno dec push sbb in data16 roll and fxch jp pusha movsb lock mov (bad) repnz sub jmp jl ss inc dec shll ss push and push ret jno xchg leave mov jns in xor and cmpsb mov (bad) mov mov aad insl ret outsl lret push test lods push lret jecxz adc xor push insl xchg add xchg xlat mov test mov in mov mov cmpsl xchg xor inc sahf cmp outsb rcrl jnp pop stc sarl movl adc lods insb dec cltd add shr rcl sbb imul or cld mov xorb xor mov inc pop stc fisubrl xchg lds add add sbb and pushf sub jae mov jle dec inc mov sub dec sub xchg xor es sub sti inc movsl bound push sbb push mov mov incb into push addr16 push jge arpl mov add iret mov scas in inc cmp sub mov nop or (bad) cltd mov xchg adc fwait pop das mov mulb and daa mov fcompl jg push xlat icebp or pushl push fdivl dec add jo mov or (bad) sub fs mov pop lret lret dec das or jno out stc lcall adc stos bound push adc jne fwait mov push xor ss out sub dec int3 scas xor xor or (bad) adc dec lahf in cmpsb mov add cmc mov or cmp sti (bad) jp or test fidivrl enter pop out pop or or mov insl leave or mov fdivs add adc lret cli js or jo push inc dec pop loope cmp mov mov mov mov (bad) push sub mov (bad) mov or out dec call cmp jns xchg idivl push mov div pusha add and popf aad fnstsw dec popf add int3 inc repnz xchg mov and mov sub and xlat movsl push int3 mov outsl sub das negb inc xor fstps ret push jecxz dec pop mov sub adc lret pusha dec frstor dec leave mov cs and hlt addr16 and imul inc add push inc sub xchg out mov pop pop lcall fildll cld pop rorb hlt xchg scas or leave lds xchg icebp subl lcall cli int3 add mov int3 icebp clc xor ret mov push fstpt pop cmp lods pop jle ds ljmp sarb stc lahf in and out fldcw mov lock cmp xor adc xor jbe loopne icebp or add sub xlat dec or leave fdivl jb jnp lret sub stc aad jb sub mov pop subl cld popa mov lea push sub sub leave dec stc les addr16 nop sub xor jo sti and cli mov push ret inc mov or jne push dec lods in fisubr sarl pop repz dec sbb mov fstpl jnp and notb out inc cmpsl push cltd gs aas sub out inc inc xor iret mov or mull (bad) cmpsb fcompl (bad) movsb aaa mov inc (bad) dec or jno movsl (bad) mov or pushf (bad) mov sub cmc icebp repnz jne enter js xchg js fnstenv cld jmp push and call push loopne orl pop add aas cltd mov clc mov mov jnp gs mov test add mov js mov mov add dec mov sti lcall or fistpll xchg fidiv pop cmp xchg out clc icebp out fiaddl repnz call (bad) and xor jne call jbe pop xor mov mov rol sub stos sub out aas sub (bad) lods sahf and jmp add jge mov jne push in movsb mov push push add sub inc cmp add mov repnz repz xlat mov jae loop lret or inc pushf cld xchg pop push es cmp imul inc push stos or push mulb push pop xchg scas xchg shr cmpsl mov aas lahf xchg ljmp (bad) jle xchg into lock sahf daa je insb div repnz fidiv mov add add repz sub movsl test stos pushf push and jne jno sub ret pop fist push pop out sub cltd pop imulb xchg sbb jge mov (bad) mov xor popf (bad) jne pop mov xchg push cmp xchg bnd lods add jno add xor in mov inc leave rorb nop xchg sub and repz and gs test cmp pusha mov test cmp out daa sarl mov stos dec cmp jmp (bad) sti jns orb mov pop iret mov adc or mov scas (bad) stos xchg repnz mov add rorb add into insb in lret sbb xor movsl (bad) xchg addr16 dec xor xlat (bad) mov pop mov sub gs add cli je xor test dec and cmp rolb add and stc cltd lods push cmp (bad) das inc (bad) sub orl and cld rcl je rorb and push add shlb dec insb mov mov inc cli mov and test (bad) stos test mov (bad) mov (bad) dec mov (bad) dec ljmp xor repnz jle jb cwtl outsl repnz add jp movsl das sub les xchg mov jle and leave jbe inc lahf jle ficoml and sub jle repnz lock push repz arpl out dec xor jne aaa inc lret and sub sti sbb or adc fnstcw push xchg sbb cmp xor rol inc icebp fadds adc xchg jmp lods dec jge sbb xor pop push cmp dec clc mov out pop xor adc out or fbld pop adc shr jns out ret push mov lock fcmovnb or std mov les divl adc sub cwtl jns dec (bad) mov dec sti sar jae mov adc sbb rcrl or jge (bad) fidiv add pop lret xchg (bad) jne adc shr testl rorl mov jne push loop ret cmc mov pop pop and mov mov mov outsl mov xchg hlt sbb fldcw repnz mov pop out popa xor add stc mov icebp sbb hlt imul push inc clc and xor add or cmpl test ja xor mov enter lret out dec mov imull mov dec imul fbstp mov stos add sub xor popf pop xchg cmpsb movntq out les iret dec andb loope sbbb xor lret jl enter inc and mov xchg in stos fcoms imul xchg mov lds ret daa dec out sub mov or (bad) jae cmp fdivrs (bad) lret scas mov out cmp sbb and aad sub mov pop mov ret cltd inc sub jg pop aaa test (bad) repz push out das movzwl sbb ljmp push (bad) dec or data16 js cltd pushf lds mov xchg sub pushl xchg xor out sub dec shll and ficompl lret (bad) int3 dec xor cmp pushl cmp jns sbb (bad) xor dec mov pushf pushf enter popf (bad) sti mov test jae push jmp xchg fcompl or dec add out ror adc inc push ficomp dec mov lahf aam jmp (bad) lahf lret popf add repz ds cmc sub fist lret push pop je jmp shr fcompl sub sbb roll xchg mov adc stc lahf xchg call stc imul mov adc mov or push stos in add repnz lea jmp (bad) and (bad) dec repz add loop inc or loopne mov lock addr16 push cs daa or (bad) mov movb jle or and jl adc gs fidiv adc mov sub dec inc xchg inc mov add mov outsb mov imul dec (bad) adc jge sub ljmp bnd jl imull adcl call and push mov decb xchg (bad) getsec inc cs or pop mov add jbe pushf add fstl dec mov mov fwait pop lods push dec jmp or cmpsl cmp leave out jg ficom add out test in jnp insb add (bad) aas mov jge roll add std sub jmp dec push add or xchg pop inc imul mov in jb sarl loop xchg lds cmp popf sarb mov pop inc test sbb loop out mov dec movsl jbe cmpsb maxps idivb mulb mov sbb cmc movsl ja mov in mov or ret and sub sub daa inc push lahf popa push sti outsb (bad) cmpsb imul leave (bad) mov sbb mov cld sti lret or ds xchg mov xor xor stos push pop in sbb xchg xchg mov pop xchg ljmp out mov mulb daa add push dec scas pushf or inc dec (bad) cltd sub mov mov (bad) pop je leave les loope lret dec dec and push xchg lea outsb loop pushf mov inc and push and xor imull or sub jmp subb xor lds or cltd jmp lret aas mov xlat jecxz das into xchg push mov js adc push cld loop mov adc xchg loopne loope adc xor clc or and xchg mov mov fsubrs (bad) in (bad) mov cmp ret out popa lods shrb jmp icebp inc cli jae cmpsl jns cmpsb mov stos mov andb ds cmp jmp sar scas cmp mov inc lea xchg fisttpl out sub cmp fistpl (bad) es xor cli cs add cmp mulb ljmp out in sbb test pop mov inc pop pop xor out fcoml xchg jmp mov xor sbb and test pop icebp jb pusha aad mov cli mov jle js cltd xchg push lret or adc sub in jne sbb xor shr jne cld into mov (bad) cli mov out push inc adc mov iret xor loop xchg mov dec loopne mov jle stc xor or add shrb pop mov jmp stos dec ds sbb das and das or addr16 aam cli cmp ljmp push mov add mov gs out daa jg js xor cltd test movsb push mov and nop loope out and cmp incb add (bad) mov jp cld add jnp mov sub fisttpl enter loope adc int jg xor or cmc push mov ret into call push jmp and pop sub jae (bad) sbb xor cwtl fimull not js lods sbb mov jmp and sbb repnz subb inc iret mov push add inc movsb or pop (bad) mov push mov jnp push and jb dec xor mov cltd jmp sub dec pop sub or (bad) ljmp sbb sarb cltd rorb repz loop push push cmc popf jns imul pop cs ror inc lret pop lea psllq adc add sub incl adc push aas pop push mov add cmc pop shr cwtl in push xor pop add aad cmc inc shll test pop sub cmp rcll lock std inc or adc sub aam push push mov outsl xchg nop or xor test push leave or mov push mov rcrb jg push add mov roll ja clc test sbb out or jae fildl (bad) mov push mov or jle mov adc add pop out lods add icebp idivl push or daa imul fsubl or repnz sub sub xchg dec shrl cmpsl push in ret pop or nop add pop icebp push popa (bad) fisubrl shrl mull mov adc loopne sbb test and pop add pop cmpl adc rcrb cmp idivl shr sbbl sub push into pop pop mov (bad) jnp mov fnsave jg jne cld lods stc fldl outsb adc or adc push mov lret pop push cs jle pusha pop pop mov mov lods or or sub sti addr16 mov and inc xchg xchg es cmpsl and lock lcall das testl cwtl test or or mov xchg rcrl shlb xor mov lret js and imulb add rcll xor pusha add or xchg call xchg and clc fbld or push aas sarl scas or or int3 aam gs mov jmp inc in and jns xchg mov sub fcoml std push pop pop iret pushl or out pop stc pop dec aad add xor scas inc sub (bad) stos mov daa jmp hlt into sub jg mov mov add stos cli fstl cmc lds lahf mov add pop and mov sbb push notl dec (bad) add (bad) jmp fidivr jbe lret fsubrs iret xchg out xor lods xor mov adc pop mov cwtl pop and out bound xlat xor ljmp add pushf or cltd mov push jl push and outsb mov aas iret adc xchg (bad) movsb jmp out pushf fcoml fisubl les lods cmp (bad) or cli and mov ret sub mov or jne pop scas in mov push (bad) inc push test xchg adc out (bad) bound push sbb rol ljmp nop fiaddl jns (bad) sub xor std fs (bad) out dec and push (bad) lret or enter std sbb cltd sarl and pop out bnd pop adc xor in jmp sbb inc jg mov add xor jno xchg add stos je out and add cmc insb dec dec (bad) int clc je outsb cs call call ljmp mov pop test adc adc rorl loop into (bad) push sub ljmp bound push lret xchg sub adc stos mov add sub mov je cli xor nop inc imul jnp push xor (bad) je repnz (bad) and sbb lods lcall sub fs in xlat sub mov scas mov adc jnp lret pop sub mov and lahf sbb sub xchg xchg mov into push cmp and stos in cmp idivl pop inc pop daa inc cmc repz call insb fidivr mov cld and push icebp daa xlat adc dec pop decb iret cmc push mov mov inc inc sbb data16 push mov dec add (bad) clc xchg and push adc cmpsb mov mov in repz gs mov daa jge pop ja andl fdivrl jecxz dec sti cmp scas fs mov dec add lods fistp rorb and jecxz jns hlt lret iret ja mov clc adc push imul or fildl cwtl sub fisttp loope jle xor xor (bad) xor scas gs lea rorl adc fs xor rolb jb and sub add or add sub mov pop loop (bad) xor or inc mov frstor inc jnp repnz jbe push inc or lods jmp dec les pop xchg cmp stc aaa rcrl test cmp bnd or push das mov (bad) or cld scas mov jl push sub lret or sbb push insb loope ljmp or fisttp jno and mov mov jg add jns mull mov in push imul movl shrb jno dec loope jmp iret sub xlat xchg test xor sahf jle jg ret xor sbb inc push dec into mov repz sub jl imul dec xor fwait xchg addb loopne insb xchg jp add inc jl pop data16 adc mov shll movsl cmpsb xor jmp mov dec or mov (bad) bound jp xchg pusha or mov cwtl (bad) and mov mov mov bound repz pop loop (bad) and sub xchg ret decb fildl xor jbe pop pop sti pop xor or mov mov mov adc add sbb sarl cmp inc popf call xor mov dec repz out jmp mov shrl xor je ficompl mov push adc add cmp not dec and add jns movsb jmp test jp sti jb pop je in inc xor mov mov and cmp ret add xor adc pushf cli jb pop (bad) lock iret popf push test imul adcb sti pop or (bad) mov sbb sub scas fldl cmp pushf popf (bad) adc js or jbe ljmp push jb xchg ljmp fisttpll add jo xchg into mov std push adc mov push insl std adc mov call bound xor lret mov iret lea (bad) mov ljmp or jge sub enter mov pop push push popf sbb fdivrl sti jg jae leave adc xchg push fldenv scas jne dec popf jmp int sub sub ljmp mov js je sub scas loop xchg add repnz pop int3 jbe ljmp inc es fldenv scas xor and das mov and leave call adc and sub mov jb in repnz ljmp dec stc adc mulb mov pop aaa loope add pop mov fnstcw mov cltd es (bad) loop and lea cmc fsts or add jmp add adc dec fmull sti cmp into push dec loope inc popa cmc scas incb hlt pusha push push js popf pop mov pop cmp push adc mov adc negb sub dec pushf das mov fisubr jmp pop jp shll mov adc sub mov sti sub aas mov es xor mov mov fs into rcrl in xor xor ja lods imul lock dec iret sub mov add notb push (bad) out jg mov sub cli mov nop dec mov and fldt imul inc ret xchg in fnstenv scas ja addr16 stos popf imull cmp mov push inc cmpsb mov pop (bad) int3 scas pop pop nop push xchg imulb into daa (bad) cwtl iret lcall cmpsb or mov insl pop and sub add xchg lcall clc fldenv dec dec movsb and shl jns enter lds lods dec in cmp and mov adc data16 dec xchg movsl cli repz xchg ljmp int ret push or push scas adc pop mov xor data16 push in adc (bad) loopne sub jg cmp sub lahf movsl stos repnz divb push stc mov subb leave lds ja jne adcl mov and sub fidivr bound lods mov ja add ds frstor push push and fcmove or jle xor mov (bad) stos ljmp add into call inc jo cltd push loop and pop add sti repnz test sub pop mov in dec stos fwait scas dec stc sbb xor out cmc adc inc pop ret and and push mov inc mov (bad) ja jl lret adc repz push sbb sbb xor mov and adc push push cli or sbb xchg dec xor leave cwtl repz mov dec sub cli add xchg test or jmp fimul sub mov popf and mov cmp inc cmpsb fimull add xor dec or mov push movsl aam and sti cmp mov jp outsl in sbb cltd rolb in pop (bad) or lret repnz xchg pop mov adc push sar aam pop or das jne ljmp popf lcall loop jle es jecxz sbb jl pop sbb orb (bad) sub clc fldenv or sub push iret mov jbe in shrl scas je lods (bad) leave inc (bad) push mov insl jo lods in out cmc gs loope sub (bad) iret jns enter lds aad mov mov mov mov jp jo push add repnz xchg ljmp test pop xchg xchg or das iret xlat pop adc sub mov mov inc ja or cmp or dec outsb dec out ljmp out pop or xchg adcb repnz mov sub fnstsw dec mov or or aas mov dec flds stos popa xchg ficoml cli mov jge or add sub xor data16 std mov add out sub in dec mov (bad) std or jp in repnz out idiv xchg xchg fistpl into jg test sub push lds pop cmp std and clc xchg push js sahf inc iret adc and add push pop iret leave clc pop cmpsl jp (bad) jbe fdiv or test xchg fimul (bad) fnstsw adc lock and int jp fisub jmp jmp cwtl sub mov rorb lea lock jae shrl push das adc add leave mov push and xor repnz scas lret jl cld das pop lret ret jns push aad sbb sub mov cs hlt and pop std repz (bad) pop sbb push out and imul xor mov pop enter rcll cmpsl push ja ljmp push xchg daa push inc xchg lahf in xchg into enter jo sub and test negl dec lret cli jle imul call lock mov xchg mov and add and pushf dec jb mov orb das dec stos int3 push ret je mov scas fcoms xchg cld mov lcall mov rcll fdivl in sub test stos repz dec cmpb dec jmp rorb ljmp and or cmp and les data16 hlt ljmp push mov incl xor call cmp dec mov lret mov adc pusha daa adc inc sbb popa lods add mov xchg decl push pushf insb jbe ss cmc mov or push pop sub xchg sbb call test add mov adc sub or lds sub sarb xor sub xor daa cmp xchg mov pop clc das stos sub movsl inc xlat notb popf add icebp push dec xor (bad) jg leave jmp (bad) mov dec imul add adc stc leave xor ss dec mov adcb sub (bad) dec mov sub lret adc mov mov xor add mov xor or mov cmpsb and dec loopne xchg je out adc xlat scas xchg movb add (bad) fadds cmp dec mov (bad) leave pop stc jmp mov loopne or cmc into sbb imul scas repnz mov add add je push add dec pop lock and add mov adc sahf xor add fsubs shrl cs dec cmc pop sbb xor mov mov pop and (bad) pop and jl jmp adc cmc jle (bad) int3 mov mov arpl xchg pop hlt hlt sbb and sbb pop clc out mov dec sarl dec jecxz dec adc out lods test lret jne and or (bad) out testl bswap imul jmp rcll jmp scas mov sub push (bad) loop maxps xchg jle inc and sub adc push pop push imul aad mov je inc xor dec iret xchg (bad) aaa lcall ret mov cltd sbb dec mov add movsl lods xor xchg scas add movl sub push in movsl adc inc dec push test xor (bad) add sti loop xchg jmp test idivl or or mov fs nop mov (bad) ss push sarl call push sub notb push xor daa mov je push mov fucom fistp movsl addr16 add mov push pop out mov xlat gs and into mov inc push sti and iretw cs add daa push pop lods aad shufps je testl (bad) cmp clc mov or push pop fistpll jne repz (bad) je mov std cmpsl xchg stos and add lcall mov call xchg push or push imul dec aam dec jl pop jmp outsb xor mov or xor mov fnsave call pop or mov cmp insb push lods das mov leave pop lret mov pop adc fldt pop inc dec dec call lds hlt int3 mov data16 or ds mov push mov ret mov sar mov and xor dec and or lret fisub sub lea jno stc scas mov lret popf xchg add ja aaa lahf inc rolb xchg dec lods jae (bad) xor xchg mov push loopne out add mov jle pop (bad) cmp stos int3 inc cmpsb fadds hlt dec out enter mov jae xor push sti xor or sub jmp xor cmpsb pop (bad) xor or push loopne je push pop and dec push shl push (bad) jae hlt xchg lret lahf sbb test add inc das and scas iret mov call xor (bad) mov dec mov out js iret hlt rcll jbe sti jnp lock popf sub mov adc or and sub test pushf outsb nop test es jg pop mov mov out push or dec xor xor shlb out lds iret mov scas and mov jno lret mov lret out push fs fcoms pop and mov cs (bad) cs int3 xor dec adc leave sbb xor jge push imul addr16 std mov (bad) lret gs pop out popa sub inc dec push jbe cmc xchg xchg (bad) mov or lret popa shl cmp mov dec lret cmp dec out mov inc loop shr cmpsl and (bad) aad adc sub add xchg pop ret (bad) push (bad) pop sub stos mov das in fbld add adc daa add xchg push xor pusha xchg mov icebp lahf inc or cld cmp lret inc dec xor repz clc imul pop cmp mul push adc mov pop mov push or (bad) sbb and or lahf lcall push aaa push push in les cmc mov out mov test pushf sti mov jnp in jle mov (bad) sbb jbe leave stos scas fiadd ret mov mov xor fnstenv stc clc test dec jp pop xor popf pop sub es cs add dec mov add mov cld cmpsb mov adc fldcw mov add decb popa jl ds fs cmpsl pop dec (bad) jo loope push dec inc ljmp std dec cmp sub ret cld jp push scas gs scas push sub in dec dec lret jmp nop roll mov or pop cmp mov dec mov push xchg sarb xchg das notl mov dec stc mov fsts xchg dec jmp jmp rorb fmul mov add mov lock lret pop push jmp dec je cld pop xor sub adc addr16 xchg inc xlat add sub push adc and pop mov mov insb outsb mov lock daa aam xchg pop mov (bad) (bad) xor (bad) push sub jae adc or in pop push repz push cmp jecxz mov lods sub xorb xor idivb popf cwtl push cmp fs les lods sub daa add cmp roll adc (bad) call aad imul out pop or cltd push imul in cld mull pop repz ljmp stos cmpsl bound add sub and mov mov push mov mov inc cmp imul dec outsl xchg pop add gs movsb inc pop sbb imul cwtl push add add fdivrl idiv and or mov scas fidivrl adc (bad) mov jl pop std jb adc jecxz xorl lret mov push lea push add dec jmp xchg shrb call sub jae jg sub xchg ret (bad) push jb dec inc xor fst mov (bad) stc push shll loop or fildll add std xor push or ljmp (bad) and test iret mov xor lcall mov push (bad) cmp add scas popa jns mov mov mov divb jo xchg pop (bad) dec ret cmp xor sarl mov jecxz cs or add push add xor movsb das mov ja fadd cmp mov aas mov pop cmp out cld and or xchg sbb fsubs add xchg adc sbb sub not push sub das ja in adc in aas rolb sub nop pop pop lret push xor push shrb push jg loope mov mov mov pop pushl fsubs or xor xchg (bad) pop outsl inc sub lds movswl mov and adc cmpsb add dec mov adc (bad) repnz pop and movsl sbb lods jne shr dec mov sbb lods (bad) sub hlt sub cmp dec (bad) mov icebp mov (bad) div or or adc fist dec dec mov push push pop pop popl jno dec insl call aad orb nop inc clc lcall mov jp xor clc adc hlt sub xor adc scas mov imull adc pop (bad) gs mov and fmull into sub bnd cmp cwtl rcr xor mulb adc iret dec xor push inc mov mov adc call inc mov pop or mov movsb xor daa cli jo (bad) jne cmc mov pop mov push jbe push and cld cmp mov add add hlt and daa push mulb stos xchg cltd lcall leave push pushf inc pop adc (bad) pop cmp xchg outsb (bad) mov fild (bad) sub mov push fidivr das cld xchg pop sub mov fsubrl xor cld sbb or test testb jmp jg into das jg pop fisttpll stos popa mov or es add xchg inc imul loopne iret push pop xchg stc sub jmp cmp pushf pusha xchg fstl mov lds jnp and out lea xor jmp cmp subl aaa jne ds stc push mov je push mov xor fmull lock hlt adc sbb je mov popf lret cs mov add sub add cmpsl icebp adc aaa es es add mov mov pop push out or (bad) pop add out inc xor stos fdivrs jp sarl inc mov notb cmp xlat mov cltd fs into sahf sub sub and pushf sarb not pop stc imul shll pushf jmp mov out aad loop (bad) sbb scas imul bound fidivr jnp (bad) (bad) pop out fisttpll jnp dec in add push jl bnd and jg push sub push push scas xchg mov mov dec test dec or scas mov dec cltd rol adc rclb sbb or ljmp push (bad) jecxz xchg cmp push das out or icebp adc (bad) test rclb sub or pop mov and sub add out xorb outsl mov push mov jno sub adc and pop inc jae and sbb repnz pusha adc stos int3 adc sbb dec dec mov jg int pop pop stos and mov jg ficoml inc pop bound dec inc add aaa fsubl cli mov pop repz push and dec mov adc mov xchg push js mov lea test nop shll jmp pop sub push jns sub mov pop xor fisttpl loop pop dec cmp add mov sub in dec pop push add adc push jno fidivr clc dec adc add arpl and jmp sub pop fpatan or lret mov mov pop (bad) iret and or (bad) (bad) enter xchg cmpsl push pop es daa test out mov (bad) popa mov lds and add jp add cmpsb call xor xor (bad) mov dec les sub push mov jb das test fnsave aam in (bad) repz jbe dec xor leave lret mov dec je or push iret movsl fs and (bad) mov mov mov int inc push out fcoml mov ret fisub jg push cwtl sbb pop pop out mov ja enter in in test pop dec out loop xorl in and push jnp (bad) or push (bad) adc mov jg std std cmpl xor aad sub insl sub add not lock fcomps jno mov rolb pop xor sub xor jl mov or push push pop jge mov sub xor pop sub push test pop in jbe lock popf rorb xor push ljmp sbb push cmp cmp (bad) mov jbe add fnstcw and shlb mov jno (bad) or (bad) or shl push add push (bad) mov jo pop pop add pop add incb push mov sbb inc cmpl test push push leave mov lahf jne adc std inc pushf pop or cmp push ljmp incl pop add add dec xor push mov cmp mov lahf ja (bad) icebp ss nop add cs sub stc inc pop push mov pop pop add hlt ljmp mov dec push mov sbb ljmp push jge outsl mov mov or inc or or add dec push movb rcrb lock sub or lret jmp aaa sub jl add or sub stos (bad) and cmc xor adc push test mov adc repnz fistpl and xchg (bad) enter mov sub jbe (bad) (bad) mov mov rol sub pop cli dec daa movl stc arpl js cli and int das lock sahf cld js xor stos mov cmp cli inc sub aam push pop pop mov fsts fstl sti repz cli dec (bad) fs cli adc testl cltd iret lods in xchg jmp mov ss popa dec (bad) and jns fistpll ds lods mov and call (bad) dec out mov lret mov mov imul (bad) aas bound dec (bad) scas rorb add adc push cli lods sahf shr and adc out mov adc or jg cmp (bad) or jp inc pop sub jmp roll outsb xchg jp popf jae andl daa or (bad) addr16 clc fwait movsb in imul cmpsl mov gs ret inc inc nop das mov sbb jmp mov mov push decl dec daa and test fprem push push push ret notb dec pop mov sub (bad) sbb dec jl cld and popf cmp dec cmpsl dec push jecxz dec mov and fcoml inc add icebp fidivrl sbb jmp mov sub ja mov (bad) add mov push xchg sub xchg dec mov jp xlat mov and sbb xor popf cwtl inc mov xchg in push out xor mov rcll sub fsubr mov add xchg hlt mov or pop lods add dec loope les xchg and xor (bad) cmc jecxz stos pop push scas cmp adc xor mov jl jmp add rclb cmp mov or aas icebp ljmp xchg outsl popa mov xchg in lods or aas or add incb dec (bad) inc adc gs xchg xor ret popa pop add lcall lret ret jns scas jl jb add sub lds aaa repz decb pop sub jle addr16 mov ds int3 mov (bad) and or shrb mov mov pop push bound adc push aam lcall jp rorl (bad) push dec add add mov inc mov push out out sub pop scas ret mov or mov or or or aaa fwait inc (bad) ja mov jle push inc pop or out mov out adc pop in sbb and imulb mov and notl sub add into push jb cs bnd (bad) sahf mov aas sub cmpsb adc (bad) std imul mov ja in in sub adc jl popf je in xor jecxz push (bad) jle pop repz dec bound ja mov and outsb fmul ret clc (bad) lahf push jno lret and cmp bound push rcll ds psubd loop (bad) adc mov sub movsb xchg sbb xor push lahf jae and push xchg data16 icebp sub adc mov roll mov cmp sub mov cmp fisubl sti mov shl xchg or cwtl mov das ljmp das adc sti mov jl add push sub mov adc loop mov pop inc xor insl sbb fidivrl xor out push mov add sti cmpsb jo pop lock dec xor push arpl daa popf pop push add add mov push js hlt push jns inc pop sub cmc mov inc xchg or xlat inc and addl pushf cmp xor add test adc ret orb mov pop in repnz mov pop jno movsl pop xchg add dec dec dec daa pop mov and es or popa dec sub (bad) stos push xchg ljmp mov and cwtl shrb fisttp test sub or out bound mov daa mov aad lds add (bad) loop xlat int sub pop mov jg stos jne xchg (bad) mov mov mov lret dec xlat mov outsl faddl out sub jo loop clc dec mov mov pop or inc pop test out fs in ljmp mov ret shll hlt into mov nop fwait nop das out enter add lea mov dec xchg mov addr16 out mov stc out xchg jmp xlat decb aaa push dec insl movsb cltd (bad) add dec xchg adc and pop mov and or push nop (bad) jb dec shr jb jo pop test pop (bad) iret inc pop push inc inc daa mov out (bad) add mov cmpsl pop mov rcll xchg lret mov sbb jne cmovg stos sub movzbl mov in repz mov pushf sub xchg sarl bound repz cmp ret jecxz lret scas gs inc dec jmp js push mov das mov push rcrb push roll sub and xchg imul movb lock icebp lock mov pusha and sbb push mov xor jnp daa movb mov test push sub cmpsb movsb imul cmp add add ds and loop,pt cmp xchg pushl shll sub jnp lret mull loop gs cmpsb mov inc (bad) dec rorl push xchg mov adc push mov pop inc ja arpl adc test dec pop dec sti cmp loope je rorl fldlg2 ret push in xchg jle and icebp sub sub mov daa lock sbb jmp test ljmp xchg jbe mov (bad) cli sub pop dec fiaddl jnp xchg sub mov jle mov dec repnz xor scas mov sub mov in and insb adc cli int3 xor inc jb jecxz or fcmovnb loopne jmp call push xlat inc sub inc pop jmp sub mov and lret sub sub outsl xor or stc jle sub inc dec repnz lods push mov mov sub push icebp test and and (bad) je cli mov das ret pop xchg arpl outsb add xchg hlt pop stc ss aas sbb lea dec jge pop cwtl pop push mov loope cli pushf popf nop dec add xor fst add rcrb stos bound jg,pt mov stos pop jb dec insl stos aaa cmp mov pop add repz sarb test sbb sub call cs or pop scas push and mov not pop lahf and and call push clc jp pushf rcl mov push fucomi inc out cltd ja or movsb or cmp and rcl (bad) lds push (bad) cmp rol pushf sub arpl mov xor loop sahf xor decb jnp adc mov icebp scas lea or mov adcb add inc rcrb ret and icebp pop and and (bad) jbe or mov mov lds xor sub fadds (bad) jle add mov mov lret jmp jmp sub aad mov xor mov adc or mov fsubrs roll out cmp cmp add out mov leave data16 std (bad) jle imul push xchg fs int xchg or cmpsb mov pop cmp fstl ds xor fstl (bad) mov sub lret je loop sub sub inc sbb lcall loop test (bad) mov lret mulb adc push add icebp push push ds fild scas lock fnsave xchg pop xor gs movsl (bad) lock scas data16 sub or inc inc cmpl testl sub pop sbb (bad) xor sub fsts addr16 insb (bad) popf shr pop sarb (bad) lds cmp nop das out ja (bad) ss xchg mov data16 xchg and or fisttpll push mov pushl mov pop call xor scas aas and lods sar xor jg jmp jno shlb pop mov mov (bad) xor mov and cld or fsubr loop fimull push push popa sub xchg inc imul cwtl pop jno jecxz push aad jbe xor jge mov and jmp sahf jnp mov mov iret dec iret divl mov mov sub stc cli mov aad and lcall push ret mov fsubs (bad) sub cmc das idivl jp adc inc pop push loop rorb push fstpl sub popf push gs jns nop loop fsubs push in xchg dec and mov sub jecxz dec movsb jns sub rcl call xor cwtl mov (bad) lock neg pop imul and enter push mov (bad) push lret adc xchg dec mov push rolb inc push lcall jge shrl sbb sub xchg dec push addr16 jmp lea daa adc test (bad) xor lods arpl ret mov lds imul scas sub aaa add repnz and fdivrp mulb dec cmpsl and out decl negb loopne dec jp dec xchg cltd insl sub mov adc jl mov push jl pop ja or aaa push dec and adc in mov sub pop and or decb sbb testl mov mov aam or insb insl and mov jl icebp cli mov dec mov stc mov lcall stos in mov push outsb sub dec adc cmp push pop adc fidivl add push dec icebp xchg cmp fsub test fsubl xor sub in movsl sahf and add add and mov pusha inc stc sar pushf pop pop rcrb es push cli adc test jl mov dec dec call jecxz sbb dec jb mov xor jnp or and mov iret push or fimul shrl and mov repz sub xchg jmp jl xlat pop fmuls cmc push enter mov ret mov enter stc (bad) addr16 andb into stc cmp sbb ss jmp outsb ret fist (bad) out sub add xor mov fisttpl inc mov movb out mov int3 fwait sub cmpsl iret adc inc bnd std mov cmp mov mov fstps cld sub jmp enter or out mov or jnp jno adc cmp into addr16 out pop std or mov jge sti jb push icebp outsb test popf loope jmp out cltd xor cmp fcompl and int jbe ret sbb xor add mov jns inc xchg mov pop ret jns mov (bad) push into dec bnd (bad) sbb dec insl movsl (bad) imul add pop (bad) mov pop mov (bad) jge xchg xchg inc sbb xor sub repz mov shrl rorb mov push mov or xchg fild daa inc inc add rol jb cld lret hlt std jns push xchg pop call sbb shrb xor mov push je stos mov das movsb jmp push push dec sub lahf pop aam ret aad push rorl sbb ljmp repz cmp jo xchg shll in and data16 or leave or es mov mov cmp shl add int out lods and nop in repnz cmp sub jno rclb in sub std mov dec mov stos sub add lea mov mov adc sub loope or adcl (bad) mov lret push lret mov loopne ljmp jmp or loope sub cmp cmp mov pop fistl test lods popa add mov (bad) dec push rcll pop int pop loop fcompl adc test out mov jo jno mov add icebp adc repz adcl inc rcl (bad) jne ljmp jecxz cs shlb pop pushf data16 movsl push loop in sahf sub dec repz fs and cmc add ret add add push popf (bad) leave dec jmp shll xor adc cmp rcrb rorl add xor into mov aas cmp stos and stos fs xor ret adc pop and or add shr daa jns cmp mov add fmul fnop fidiv iret and in adc ljmp ljmp cmp lods repz add pop into pop jg pop mov stos in lods jno imul xchg stc jno cmp jo cmp mov nop in repz lds cwtl mov add and fisubr adc aad add xor dec inc mov jl mov mov pushf xchg icebp mov leave push push mov cwtl les leave les test pop cmpsb int3 jge or cmpsb (bad) xor and sahf xchg clc ret mov adc out jb leave rcrl pop data16 cmp lret add mulb mov call int sarb pushf aas cmc xor xchg popa cmp push mov sarb lret sti mov fst jge test mov mull dec adc dec in outsl popf mov and pop push in mov xlat push cmp into mov mov stos loope das mov mov cmpsl xchg out mov jne jg enter mov or add mov push jbe out sahf leave xchg sbb mov jg mov ljmp add inc lahf js dec rol xchg out cwtl inc aaa push sbb pop fldl inc push in in pop sub pushf xorl pop xchg sbb inc daa pop sti xchg mov out aas mov adc (bad) mov call pop xor adc mov xchg lret ljmp and in mov outsl sub aad cwtl sub xor test dec add push (bad) dec jge xlat cmpsb pushf out dec lret jae push out dec (bad) out cmp pop iret xor add (bad) pushl imul fildll jmp pop jno loope out jg mov push std nop or aaa and iret mov call dec (bad) xor push (bad) arpl les movsb mov pushf cld sbb sbb push add fmul pop (bad) cmp jmp repnz gs (bad) adc pop insb das popf (bad) mov sub andl jmp and loopne dec (bad) cmpsb mov sub fdivs sarl mov rcrl inc inc sbb lods or out jg (bad) imul jne orl dec mov rcl mov lcall jg pop hlt lret pop test cmp push sbb icebp lds into (bad) idivb cmp insb mov push inc cmpsl xlat nop in into xor (bad) xor jnp mov and stos (bad) jne adc das and (bad) dec fs xchg js mov add repz repnz inc stos popf lret cmp mov or xor dec lods fwait leave out pop adc inc (bad) jge cs pop inc sbb pop mov leave adc jmp pushf pop stos fs jmp jb (bad) mull xor imul xor sahf fldenv push hlt mov xor (bad) mov (bad) pop jne add es adc scas out dec mov popl dec test not xchg pop test sbb adc mov mov das int3 aam add outsb pop out add mov test mov and or test mov mov sbb pop pushl pop into mov sub and js (bad) jo and cmp jne cmp xchg inc sub and (bad) mov js mov cmp jp jb cmpsl xchg jae addl pop mov push sub icebp lahf xchg inc inc push and xchg push outsb fs movsb idivl mov ljmp mov imul jnp scas jle and add movsl or je popf inc pcmpgtw popa jno mov int3 inc xor std sbb in xor mov popf cli loope popa fnstsw sub inc mov les adc (bad) xchg (bad) or ds (bad) cltd adc scas jbe or or push cmp ds mov es adc daa add stos adc and fsqrt (bad) jle dec sub movsl xchg rolb mov scas test lret push test shr fs dec mov jmp loop inc lods push rol xchg call sub imul jmp pop cwtl mov sbb out adc bnd ljmp sbb push cs inc je push jmp ja aas les and imul dec push mov sub or pop sbb leave fimul add cs std sub (bad) les lret add mov xor or jne push icebp jl mov out call xor inc aas sub and push add jb out iret stc into mov jmp push repz inc addr16 mov mov mov fdivs loopne ss (bad) ljmp dec xor fwait add arpl or jno adc shlb sub lods sbb sti cld push cmp das fbstp stc mov mov mov (bad) or das sub ss add aam push into push out out lret shll pushf jecxz mov das (bad) icebp lea dec aam test push in xchg (bad) jmp dec repz add mov sti popf (bad) mov xlat adc xchg (bad) and or inc fsts imul orb cmc mov push mov and andb jbe cwtl leave adc sbb jge mov aas and xor loop aam sub imul frstor cmp mov (bad) insb push popf (bad) int3 stc xor sub mov fs scas pop scas movsl pop test mov fucomp fwait pop push lret add push arpl push cli out mov sub or xor mov or sub repz bound repnz dec pusha add sub dec sub xor hlt (bad) fsts test and mov out mov pop cwtl mov xchg cmc sbb dec mov jp push xchg imul std fisub push (bad) stc jg insl icebp dec sbb mov sub incb (bad) movsl (bad) jbe leave lock popf jb mov mov sbb mov xor (bad) mov (bad) outsb loope push orb push mov cli lea add inc and out xlat cltd cmp jle push mov (bad) jne or mov (bad) adc xor or add sbb fidivl ret fsts fisttp xchg dec or and sub loop cmc xchg jecxz sub jp gs xor insb or (bad) out insb (bad) and lret mov sub sahf lds mov mov fnstsw xor das sub xor insb push jae mov push ja pop push inc popa xor pop jmp mov lret xor ret sub inc (bad) cltd lcall xor push jmp incb sarb inc mov cld push leave jmp xor push daa je popf out mov out xlat adc mov jle je pusha repz dec inc dec xor sub cli jg scas data16 out fidivr out sub xlat roll mov mov or add pusha pop call push and xchg std mov movsl pop jcxz sti out cmpsl adc sub sbb mov inc and xchg jge (bad) and out sub out fdivs cmp (bad) or xchg aam iret xchg lret push (bad) sbb nop test push popa xor adc cmpsl lods insl ss xor imul outsl push xor ja sub mov out mov cmp ss mov sbb imul inc cld pop or dec sub fiadd ljmp mov stc mov mov inc cmpsb adc jmp in cmp jg andl mov add jne xor sbb je jb push cmp xor test dec xchg cmc mov pop and stos jno add jg jecxz stos fdivrs aas lods pop shr adc jecxz dec xchg cwtl adc idivb lods cmp divl push stos mov and out scas mov fstl adc scas int3 (bad) cli mov lcall add mov cmp jl lret inc or movsw xchg dec scas add add cmp ret fist test shlb inc jp push push cmpsb xchg stos popa out ljmp jmp xor jmp jecxz int3 pop xor push cmp push pop int3 mov loop mov push fnstenv mov or inc (bad) mov out das mov pop decb rcrl mov push daa ret jge add or aaa add jmp mov xor nop add fldenv repz inc popa xor lcall sbb and outsb lea ret cmp mov jbe adc leave dec test popf push cmp out pop mov nop imul mov fbld ret cmp sub xlat (bad) (bad) (bad) icebp push dec frstor rol pop sub gs adc cmpsb pop sbb ret pusha test xchg notb lea sbb pop ja mov push dec push pushf popa pop xorl es xor xchg sbb shrb aad popf mov inc or fbstp add xor dec clc dec or bnd (bad) lret scas test sar fstpl jecxz and cmp jmp pop or loop xchg std das and push mov idivl pop movsb and or fild cmp or (bad) jmp xchg jno mov mov cld add stos pop adc jns mov imul leave neg xchg (bad) fdivrp gs xor add xor orl mov mov pushf dec imul sbb lret lahf out in lods clc lds (bad) rorl inc mov mov cmp pop movsl movsb test sti out repnz out push push idivb dec xor cmp (bad) mov (bad) imul push int xor pop lods shll and out ljmp add or add and imul iret or dec adc jmp orb mov ret pop push xchg or dec dec insl xchg mov ja leave jno adc fmul dec sbb mov stc mov fcoms inc sub rorl xor mov je xchg imul mov xchg dec orb adc mulb rclb pop and ret ficoml mov sub dec xor sbb mov add ja rol stos mov out sub and movsl fcompl jo loope jg stos repz push xor lcall mov sub or lret add or xchg or lds jbe leave push (bad) aam out push jno push push sub lods cmp xor sub leave aas xor xor sub jle ljmp cltd pop decl sub icebp dec sbb js stc addr16 jp es xor add ds jmp sarb jmp sub stc ficompl add jl mov out and pop jge push mov sub adc movsl cmp cmp adc adc leave mov dec fnop xlat ficomp sbb icebp fcmovnbe das divb cmpsb sub out (bad) call fmul rcl adc jmp adc fwait push sbb mov xchg pop (bad) loop xchg mov out dec out out cwtl pusha adc adc (bad) adc mov ret inc sub pop lahf popa jmp inc leave (bad) pop sbb xchg push cmp nop in in mov adc addr16 int3 push mov rcll pusha pop mov lret inc lds mov shlb lret sbb jns and (bad) or je jecxz inc push adc sbb stos xchg lods cmp or scas scas test sbb add test decb aam sub cs cld xor sub mov cmpsl or mov xor cli xor ljmp fstpt sub clc add out out push out nop (bad) lret leave add loop lock loope movl or dec sub gs std dec mov insb adc into dec mov push imul add mov mov pop mov sub ss mov bnd add sub cmpsl lods inc hlt or rorb jle gs mov adc daa iret jge loope ljmp inc dec jp fucomip cmc test mov mov push cs repnz iret insb stc add cwtl movsl mov sub inc sbb (bad) in xchg xor xor inc call inc mov lret sub mov scas mov and mov or aas je mov push out or xor push movsb (bad) aaa or fstps inc or test in test dec testb adc popf ficom inc sarb or enter mov pop mov imul or ja mov or cmp or loope (bad) dec push cmpsb adc jle or loop cmp mov xor and int loope imul loop roll mov mov xchg (bad) pop rcll dec add movsl mov xlat jg stos jle fwait cmp sti loop push in jmp (bad) mov das out gs loop pop hlt jge push aam popa sbb xlat das fs xor ret inc and test pop rorb out aam jmp (bad) pusha push out cmp movb enter jl and adc popf fstl mov fcomp sbb je jmp das mov cwtl mov lods addr16 ror arpl add mov lret cmp ret xchg add xor (bad) mov dec dec lods push mov repnz dec iret dec scas pushf and mov fstpt xchg fisubl xchg jle jmp nop push and lret ljmp jmp test stc xchg sub in xor and sti jecxz rolb mov pop jno cli push cmc xchg (bad) xchg add ja inc das jmp sti int mov add dec jns mov jmp mov dec out mov xlat xor call push icebp mov mov xor in add push xlat or sub sub mov nop add jbe out cmp insl sub push and or scas test lret xor cmpsb mov dec out dec add cmp jns mov push sti sub sbb scas popf cmp sarl daa add pop xor sub push imul inc mov add dec adc pop xchg and sti icebp add sub into dec orb mov sub inc out loope scas (bad) shld adc and add mov mov add lcall and xchg cs add sub mov xchg xor lds out mov inc pushf daa cmp insl or mov movsl stos (bad) mov popf add adc push xor ja (bad) mov push dec loopne mov cmpsl pop fnsave ds shl movsl sbb mov loopne and sbb push dec out mov xor xlat or mul lret push mov add sub ret adc stc imul lods (bad) stos jb jecxz dec pusha fdivr xor jmp pop lret sub popf jg lahf fistp sub dec nop dec and fldl pop ret out js add mov add mov mov push daa out das push loope jae movsl pop call pop and test std (bad) out in and (bad) ffree scas or lret add cltd jns mov sti jbe leave ja lock (bad) cmpsb fs or repnz xchg inc add pop or and movsl jnp movsl notb lret jnp jne and xor sti mov adc push mov daa mov shr xchg mov mov lahf pop outsb push jns movsl testb fs sub xlat in scas test sbb mov out es cmp stc or xor pop adc adc test jno inc out mov sub cld or repz into sub fisttpl push nop fstpl jecxz xchg push inc pop jmp mov xchg test data16 pop andb and add and mov negb loop (bad) mov stc dec call cmp fsubrs ss xchg push xchg xchg dec out cmp mov nop (bad) ficom fcmovne push sub mov or jb xor ljmp mov into rorl shll fucom mov inc (bad) sub adc jmp lret pop lret lock pop je imul mov cs xchg jmp fbld or push mov es negl ja or cmp push (bad) mov notl jno pop adc lret jg mov push test jne sbb out sbb mov enter orl mov aad out mov jmp jp sub add xchg inc pop and mov push push mov lret add fs xor mov pop adc popa mov jl push jge fidivl fcomi or xor jae lock jnp cmp pop mov push push stos and xor jge mov mov xor xor mov in cmp mov pop and and xor das rcll ljmp sub sub ja stc cli popf mov sub (bad) movsb sbb scas jae mov dec jns mov mov dec int out shrb js lahf push adc rorb pop ja sbb xor out xor mov fwait mov (bad) mov stc dec setge xchg insl imul (bad) mov mov jp mov movsb (bad) rorl xchg sti mov push lret jge push pop int3 dec mov imul inc repnz in orl cmp pop pop das mov jns movsl inc incb aaa popf sub push lods fnop clc cmp mov or (bad) dec mov (bad) movsb jmp lods loopne cmpsb sbb sub xchg clc jmp out sbb push clc adc divb or movsl fild sbb mov lret xchg pusha sub or pop pop add nop pop scas pop jl (bad) icebp pop sbb pop imul (bad) cs addr16 scas xor add xor imul sti xchg mov mov leave sbb jnp out add xchg jg jmp cwtl pop fbstp sub gs and xchg add mov adc sub mov rorl pop (bad) dec mov loop and cli cmp leave movsb dec mov push adc jmp negb imul or mov adc jg call leave dec frstor stos and jno leave push cmp pop push and in pop movsb fiadd add cs cmp or sub (bad) or out cltd orl sub or in xor and or out cmp daa pop pushf std mov lcall ja lds adc jle lret fsts inc jge ficomp mov sti jne lods popa xchg jbe (bad) dec jmp inc mov add mov and test sbb call inc mulb or inc pop and std repz or add dec cmp push dec sti insl cmp xor cmp popf sar pop sub push sahf out js lret cmp sbb mov scas push pop mov movsl negl std mov xchg into ja push jo xchg adc lahf bound xchg add jg sarb jmp (bad) jmp sbb aad mov into lahf push pop push loop push iret push ja out iret test xor jae ficom (bad) lea xlat sub ja inc mov push jecxz mov inc mov cmpsl or cli jae nop or sub popa ljmp push mov adc sti adc or or pusha je jae outsl ljmp sti xchg (bad) mov mov pop mov push sub sub and pop inc sub jl inc lret and rolb mov ds fildl sbb ljmp pop inc add lcall imul bound shrl and inc xchg out sub das cld or (bad) jns mov dec dec stc jmp hlt jmp or add sub dec add mov scas icebp mov test test in push stos mov dec lret (bad) cmp and push cmpsb inc (bad) or into push out or ljmp das cld mov dec mov (bad) jns inc leave mov sub out and sbb jle out negb jbe leave movb xor or lds add push iret out or rclb pop sub sub add call sarb test dec sub jne xchg iret mov or dec fiadd mov test negl dec mov xchg push pop stos jo sub sti mov fs pop xchg lods pop in adc test adc dec dec push pop cmp lods mov pusha jbe or fldenv pop out sarb inc (bad) (bad) push mov xor cwtl jns xchg jne aam shrw pushf jmp js ficoml popa sti sub fildll mov jnp or add scas pop xchg sub sbbl xlat or xor leave fdivrp push ret xchg pop pop lahf insw add jg fs jmp out jecxz xchg cli fdiv and into sub xchg ret test mov jmp iret sti (bad) push mov pop in jae add adc test xchg aas (bad) fimul add faddl add pop mov jmp pop inc push jne and xor mov xchg rcrb sub inc daa icebp dec adc mov add lret pushf aad jb or mov divb dec xchg or push test pushl ret popf mov aas popf sarl xor adc adc cmp mov xor jg jns xchg into xorl mov mov xlat mov cli sub jno daa jge push hlt add jbe cmpsl pop mov (bad) loop add xor push jns mov (bad) jle mov repnz in lea pop mov xor mov mov push pop aad sbb add adc stos lret test push sarl push inc gs repz in movsl insw mov sub (bad) dec add in aad jecxz ja sub insb ret cmp cmp leave mov mov push jbe add movsb aaa rcrl cwtl jmp push inc and fdivrl mov hlt sarb sub xchg dec (bad) dec out cli sub pusha movsl or and adc (bad) fnstenv mov pushf cmp add pop rcll mov icebp and xchg fstl sub pop frstor pop mov adc lret mov mov jl stc cmp sti cmpsl xor and and sub repnz loop popf xchg jmp add ljmp dec pop sysexit rcll xor stos xor push (bad) mov mov sub or mov jns scas js mov pushf dec pop xor mov dec mov ret xchg cltd push fdivrs scas fistl mov mov into dec xchg rorl ret and (bad) lahf scas pop mov pushf add mov rcrl popf roll imul cld fcompl loop lret dec dec push or xchg movsb mov das mov adc cmpsb cmp fmuls or (bad) jnp mov sbb xchg cmp dec test sub fs pop xor pop clc fsubp iret pop xchg dec and xor mov and sub fdivrp dec or mov call insb jmp mov xor pop movb iret outsl repnz xchg stos mov dec test or fidivr xor sarb lea fldenv and add xor push ja pop xchg adc pop lods cld shl pusha cltd pop lcall pop mov les test mov adc ljmp mov dec test xchg and inc imul int (bad) imul fdivrs stos notl imul mov iret sub mov dec test dec ljmp mov or cli jne int sti mov pop fxch imul add sbb pop imul sub sbb xor mov pop inc sub xchg push repnz sub pushf ffree out mov lock add dec ret push movsb cmp daa pop mov inc or xchg add pushf call mov dec mov imulb arpl repnz xor jge xchg or flds xor cmc xor mov xchg jl pop ret es mov dec ja lods stc (bad) pushf in cmpsb lds in test jne cltd mov mov into scas push pop xchg pop mov fiaddl subl dec fistpl jmp fiadd ret inc jecxz dec sbb loope xor push push sbb xchg fsts test (bad) push pop ljmp push jbe inc test sub cld mov aad pop sub (bad) or push push fsubr cmpsl std xor jae mov out clc scas and and in mov pop push jnp or or sub mov mov lret add fldt push xlat mov cwtl mov and or in daa lds sbb rorb push cmc push add mov stos les je or (bad) dec add leave jecxz push mov test lret stos test mov add jg (bad) out stc xchg out fldenv movsl cltd cld lret xor or (bad) mov xchg and popf hlt mov jecxz dec xor sub mov fidivl and pop jecxz cltd or leave lret ret je rol push mov repnz add ret mov mov push and push call mov xor push in int pop cli or xchg xlat (bad) mov sub xor aas jne mov mov adc jno lret add (bad) lea push or repnz push push push push and adc sub lock sbb adc xor cmp mov movsl lret (bad) jno inc xor repnz cmp mov mov dec add (bad) out pop push pop into (bad) bound pop js dec dec sub inc jmp pop fisubrl mov jno mov sar dec into loop (bad) adc mov mov in dec mov mov mov jne cmp loopne mov jp pop xchg sub dec (bad) (bad) dec dec movsb fcoml (bad) sahf cmpsb imul ftst mov out mov add pop dec xchg lds or add cld fistp inc outsb fimul test adc popa mov stos movsb and and je pop rcrb pop push iret decl (bad) push mov ljmp int add test and pop gs sub fucomip dec xchg fst nop dec jle pop ret stos inc negb pop loop fist and scas jo xorb jmp testb shr sub movsb call xchg push add xlat sub xor int3 popa es and lcall into jae dec or stc aaa cmpsb shrl mov adc xor mov ds pop ljmp xchg insb xor xor lcall push add cmp inc and adc leave sub std xchg add push add mov push stc cs pop jp dec shlb mov xchg repnz gs (bad) and stos sub mov je sub xlat or andl cld add push leave out fcompl je notl inc das xor push inc cs jge push das ret mov adc iret mov and adc shll cs sbb ja,pt cs int3 mov aaa cmp and pop mov push lret dec or jb pop je push out repnz rcrb test xchg mov adcb add sub sub and out cmp dec loopne mov iret jg mov jae das je in cmpl roll sub adc sub scas gs sbb ja pushf adc mov cld dec imul fs push add stos fcmovnbe xor adc gs out mov push cs and add jns ljmp test push or inc mov add add in inc xchg xor pop dec jmp mov push into icebp push sub and enter iret stos loop shll ret push (bad) push add ja mov mov dec in insl push in cmp or jmp pop addl sbb mov arpl jns dec lock popa inc jmp lods je data16 mov pushf or in loopne cltd xor jp in xor (bad) add (bad) jecxz in fildll jg inc mov fcmovb mov insb mov add loop icebp jg push call sub mov mov mov movsb dec mov stos test or xlat xor andl jmp (bad) mov mov popf divb push hlt pop ret ja pop (bad) imul jg xor and inc pop icebp sti sub (bad) mov rcrb jle or adcb xchg adc shr imul (bad) pop fidiv jle (bad) movsb call fstps cmp cmp (bad) ss adc lods jmp dec lret pop xchg arpl mov sbb inc jno das push int inc pop aad rclb mov inc stc out test out sub xor ljmp insb push inc cmpsb sub icebp mov add insl mov xor or xchg mov call mov movsb push fs xor jno clc gs sub cmc ljmp les adc xchg sub xchg stos lret cmp std jle pop add pusha mov dec pop sub xchg pop js xor jbe pop sbb sub sub mov mov lock xor lret mov add jmp ror ljmp dec pop xchg mov push or pop stos popf subl or push (bad) call sub bound (bad) in roll sarl or inc add mov jb (bad) ljmp jmp in xchg and bound (bad) movsb and ret test push test (bad) jo sahf push out pop mov push ja sbb sub dec xchg ret push lods adc call es sbb or pop mov pop cld (bad) adc addr16 icebp xchg cli jno nop inc xchg mov dec int and fmuls aad mov icebp xchg sbb loopne add xchg pop xor stos mov mov jbe aas sub (bad) jg dec xchg call shll test inc ja pop lret mov sbb lret adc or rol or jne mov enter mov aad pop lea jb shlb les jbe clc pop mov push pop lcall int3 sbb ficomp cli cmp repz sub xchg lea and scas fstl (bad) shl or enter int3 cmpsb sub pop (bad) mov pop test pop mov xchg or lret xor and xchg lods faddl adc push mov add xlat lock stos imul adc and insb or inc gs cmpsl (bad) fisttp out xor push fwait push ja sub xchg fistl xchg mov mov mov and add loopne fbld (bad) add mov pop add xor fwait sub lock sbb jl pop roll mov shll (bad) mov sub int3 jne xor mov fisttp jns leave shrl repnz ss jno pop mov in mov mov add jg test mov std cs stos add add (bad) lret lret sti gs or das fisub in lods rorl dec and pop cmp int (bad) or add dec mov cld imul repz jp mov inc add add dec gs mov cwtl iret lret lods xlat fwait add adcl bound mov push out pop out pop or dec ljmp fmull sub stc push jmp iret jg push dec data16 data16 sub mov sub cmp jae xor fldl sbb out (bad) (bad) mov pop mov leave adc or xor mov jae or adc loope das push pop stc add sub js stos int outsl cmpsl adcl sub jmp add loop shrb out lods and (bad) int3 (bad) or cli mov std sbb out (bad) scas jb iret pop or mov sub adc xor scas loop movsl ret mov (bad) or ss popf notl out (bad) mov pop daa loope lock dec repnz test cli shl fisttp pop shlb ret mov jmp out mov and cwtl push fsubrs mov jl jbe ljmp (bad) jge inc push inc loope cmp cmpsl xchg call loope sub dec fdivs pop fcomip xchg mov inc jae jg sahf mov cmp mov dec jmp pop idiv iret mov popf enter mov pop test out sub ret mov clc nop mov sub popa lock pop jg jb dec add dec xchg incl (bad) sub mov pop movsl push and data16 inc jo mov mov ror fimull or dec imul xor ret xchg dec sub test ret sti sub mov shrl sub add jae and sbb xchg lock (bad) mov insl inc outsl cmpsb enter jl cltd sbb stc addl or cmp sub jl push addr16 jns cmp lds movb cli sub pop add or mov enter mov mov xor movsb inc sub adc repnz aam push mov mov fisttpl rclb faddl mov add loope lahf push mov ret push loop repnz xchg adc xchg adc mov xchg mov and daa lcall lods movsb mov fsubs aam scas out add adc dec (bad) jmp sub adc dec iret (bad) std sbb insb rcrb add sub and out add push dec outsl inc (bad) mov sub mov jecxz jne inc stos cmp jecxz dec or adc les or xlat xchg pop mov lret jbe adc lret out scas xor xchg jge in push lret out imul stc cmp pop and imulb movsb sbb arpl push lds cmp scas cmpsb jne xchg add mov push xor ss adc and fstl stc pop jbe jo push add or xchg in cld mov inc arpl dec jge scas jb fisttp mull add add out cld mov scas std imul pop lds and sub loopne and mov rolb pushf mov stc xchg cmp sub or xchg pop ss pop test (bad) lods lcall cld mov jne cmp inc ret in mov jb jecxz sub jge and xor rcrb and dec and imul mov sub or xor jne or lock leave sbb stos sbb xchg pop xchg push cmp and lods loope mov out ret int3 add (bad) or into sub inc pop cmp enter (bad) leave notb sub iret sub sub cmp push mov adc xor ljmp shl and mov push ja push or add cmp fsubrp sbb enter cmpsb sub mull adc out in jmp add stos cmp mov push push pushl daa mov movsl daa adc pop repnz xchg out fs sti lret xchg add xor sti mov repz out dec mov repz aam bound xlat jne mov sbb imul pop sti sub add movsl mov dec cmp cwtl dec lret cmpsb lret push push sbb push xor jno inc xchg pushf (bad) xor adcb or fsubrl sub jne ljmp push or outsl idivb adc outsl (bad) in mov sub (bad) cmpsb out mov sub mov cmpsb movsb mov lea (bad) imulb or ja adc push xchg fildl add lret cmp mov and cs xchg stos mov jmp add sub add cld sub rcr jmp dec xor xor (bad) addr16 sar fs add sub es fisub xor pop daa and je and push xor jno movsl std adc jl adc xchg out pop testl jb xor jo dec lret das cmp mov mov push add test and sbb mov mov enter or out (bad) imul and hlt inc iret movsb push pushf mov or sbb sub (bad) fsubs out or sub inc (bad) jno jg ret mov popf fldl mov (bad) cmp mov mov das loop cmp mov pushf pop dec pop push mov push aaa out jb call imulb imul or xor int3 call ljmp or or loopne dec mov xchg out adc inc mov push jne lret mov packssdw push dec lret adc fcomip lds adc and movsb shrb mov xchg xor rcl and push in leave push lret test pop arpl decl test mov in lret inc or and and adc aam pop scas addr16 xchg and jbe xlat jne daa scas out lahf jle imul pop or and mov or aas mov push inc (bad) dec mov cltd sar (bad) xor mov dec imull pop sbb in mov into mov inc and and and mov jns lahf stc add lret push (bad) xchg adc xchg inc pop cmp repnz test sarb (bad) xlat sbb fnstenv xchg pop xchg les mov pop (bad) mov dec mov (bad) rol icebp mov jne and loop test adc test (bad) mov dec add jmp xchg loop js mov fsubl stos bound push mov jno mov ret vmwrite pop or dec das (bad) aam loop sub ss dec pop mov into (bad) xor dec dec out mov pop ja jl add adc mov jmp lds jecxz xchg mov add xor movsb jne and xchg xlat (bad) cli mov (bad) scas movsl push jbe jmp ss pop mov lea sub movsb xlat inc and lret outsl add ljmp push shrl pop pusha dec inc adc punpckldq ret xor jne (bad) xor mov mov imul loop aaa dec andb sub jmp sbb mov mov push in fldenv lock (bad) or push mov pop pop mov scas dec gs or popa push insb dec sub shlb clc add and mov or and fmuls and or mov inc aam push lcall adc (bad) or lret insb ja jmp leave rclb into push sahf ror out popf mov mov cmp ds mov xor divb dec add xlat and mov jnp xor je push or popf cli call pop sbb dec sarl pop leave push fld scas hlt repnz jl and lahf pushf notl xchg fstpl fdivrl daa aas sbb sbb lock rorb outsl pop sub sar jbe adc hlt inc xchg sub mov and sub adc pop xchg sub out cld (bad) xchg pusha mov adc jmp push pop pop pop out mov cmc bound and fnsave lea adc sbb mov cld fidivrl push gs or inc xor je add mov mov xor in add adc add inc and das inc mov (bad) repz and pop xor clc sbb (bad) stc lret (bad) mov adc testb rcll lea clc and ret or pushf inc imul inc dec xchg or mov shrb (bad) jae das ret pop (bad) xor out xor js call ljmp mov jl mov daa and (bad) iret pop in jecxz repnz cmp into add daa daa sti lea out pop (bad) xor scas fsubs adc add mov imul jmp jmp inc or jne gs (bad) sbb jae ret les shll fldcw mov pop add je mov jmp fistpl sub xor dec add and pop popa mov pop pushf popa in jp mov out cmp and rcll and out mov xor jl inc cmp aad xchg test jb xchg (bad) jp rcll and nop cwtl pop out dec ss lahf in adc add mov shl rol sub out dec mov dec mov sub sub (bad) pop and jns mov lock mov mov adc insl ja jmp mov xchg int3 movsb xchg out and pop test ja dec enter out cwtl cmp imul rorl adc push stos mov dec pushl leave sub mov inc addb and or nop sti or stc sub leave lahf inc push jns scas push inc popf pop mov ret clc cmpsl fldt imul int3 jecxz pop or cwtl aad xchg jno jmp mov mov pop xchg add (bad) fimull bound scas mov out cmp shll mov jae rcll pushf sub add imul es xlat dec sti int3 and mov addl mov pop or out add div outsb lea mov adc add push xor jbe (bad) (bad) push pop push in lods frstor lods imul pop xor ljmp icebp and pop push inc mov push inc add lret lret std inc pop fs test sti (bad) pop mov stos je sbbl (bad) fldl daa push in xchg xchg bound pop dec adc xchg and ljmp and and fdivl ds arpl adc or or (bad) jns lods popa js jae sahf xchg (bad) mov push xchg dec sub iret ds jp (bad) sti xor fprem1 in arpl push sbb add imul pop or lds mov pop pop sbb inc inc fs mov pushf pop int3 pop fldcw (bad) hlt in out jae xchg scas in jmp xchg ret andb push shr int3 dec sub out dec mov xchg fstpl pop lret out repnz mov push (bad) adc popf push test pop mov adc lock (bad) outsl imul aaa sub jb lret pop jns lret scas lret sub je and pop popf jo add into pusha imul jge or adc xor stos popf lcall pop cmp push push nop add ljmp xchg xchg dec pop int aas lods push mov call sub or mov sub mov fistp sti and push or gs (bad) das mov iret push lret cli adc clc adc pushl cmpsl add into and enter cmpsl push push fstpl mov repz xor aad pusha add shrb decb fisubrl lods lcall pop sti gs xor fbstp fidivr lret xlat call sub jle push xor push push ret cmp pop push into mov mov inc inc (bad) xor fcoml mov mov xchg adcb shrl mov mov (bad) (bad) pop push jo xor imul lahf push dec xor xor ret jo pop pop (bad) xor pop inc push xchg pop fprem1 jle outsl div sub ljmp sub sub mov cs into mov dec addr16 inc shrb lret gs adc dec fnstcw and pop (bad) ss (bad) mov adc pop mov or cli cmp and std mov adc fdivrs jecxz out shrb in mov mov sub dec xor negb sbb mov fs dec iret ljmp repz xchg jl push inc xor adc cltd subl or xor add add mov mov lds pop lret dec (bad) shrl mov pop int3 sar pop push (bad) fsubrs cmpsl jo pop repnz shr repnz mov push and or xchg cltd xchg xor dec and dec mov mov mov rorl xchg add cwtl out loope and bound out cmpsb xor xor jne ds and or test nop movsb out lea cmpsl mov or xor xor pop data16 lock mov sbb inc xor sbb std arpl pop test movsb outsl xor dec shrl frstor idivl shl dec decb adc aad pusha insl outsl aas pop cwtl mov leave mov fcompl mov pop ja fwait leave mov add mov repz into adc iret insb movsl dec (bad) sub loop mov mov xor pop xor push add lds adc xor pop aas cmpsb push and das (bad) push dec jmp adc (bad) mov cmp pop into je sbb push fdivr faddl mov aam mov inc dec and pop mov push pop mov das pop adc daa and pop out or repz xchg xor ljmp add xchg jecxz sub or xor stc push iret shr sub xor repz inc jns and or sub xchg dec das (bad) cmpsl bound fistl mov mov das popf adc push pop or (bad) push pop sti ret ja cld sub mov adc sbb push dec jmp xchg xor (bad) popa mov push xor pop insl or sbb pop out cmp mov add loopne or repz mov cmp lock mov test sarb mov xor push push outsb sub mov lods pop repnz sbb mov call push xor mov dec mov jo push shll pop fnstsw sub jo sbb ss push inc cmp (bad) or sub jl adc mov sub xlat out xchg pusha jb scas pushf and inc lret ljmp orl or ret insb aad dec sub rol inc and add scas repnz xchg pop pop mov pop xchg jne sub cmp adc roll or imul mov sbbb sub cwtl xor sbb sub idiv add ret pop fbstp and pop jge pop (bad) call rorl fnstcw ja xor out inc xlat clc inc mov sbb (bad) and sarb imul jnp mov or sub add popf icebp xchg jmp xchg ja mov pop mov ret (bad) sarl dec test jecxz xorb nop pop mov mov mov loop xchg into loope testl (bad) ljmp jae cltd jg jg addl dec (bad) mov sub mov scas repz cmp fucomi ret movsb bound mov push jmp test ss sub pop push movl aas mov addl ja and push mov es mov jg ljmp ja loop mov loop (bad) and lcall push mov pop push ljmp adc pop incl lcall add push mov add fldl push int jmp shr add js out xchg roll sbb add cmc cmp lret addl mov dec cwtl ret pop xor add fdivs sub sti cmp pushf imul aad jl inc or jns shl bound or pop sub jae rolb sbb adc sbb mov pop nop adc xlat out (bad) pusha or jle add notl sbb cmpsb xor jnp add ret pop icebp sbb sbb sub pop add pop inc mov push decl sbb push dec iret xor stos rolb mov cwtl mov pushf imul movsb inc sbb jg rcll cmc pushf call shr add mov nop cwtl mov adc jg sub add aam in jle jge cmova shrl and dec insl cmpsb rolb out pusha pop xchg and imul mov mov mov sbb xor int3 adcb inc sub and add addr16 outsl rorb mov loope cli add jbe mov test mov xlat inc xchg add mov mov pop pop pop push sbb adc sub pop sub or ss sub push std ljmp inc daa ret pop mov mov jmp bound pop sub mov out pop out sbb inc cmp mov sub mov adc or stc les scas cmp pop dec out das aaa cmc lcall repnz xchg aad jmp sti pop or fist inc lret mul and sub sub out arpl std (bad) and cmpsb or (bad) jns ror adc adc dec lods repz into xor sti pop jle (bad) sbb xor mov mov gs out lret out inc adc jmp inc repz mov sub sub pushf out ret mov int3 scas out xchg adc negl repnz (bad) or pop inc xchg cmpsl aad imul (bad) xlat aad dec mov sbb cmpsl dec xor outsl sub jge xchg scas jl mov push js cmp jecxz sbb outsb mov mov dec inc pop xor and andl sub ficom add pop outsb fs cwtl dec mov adc dec xor (bad) push outsl or lret pop pushf inc push add outsl jno out sub mov adc adc clc cmp hlt mov sarl mov pop dec or cwtl adc rclb out enter add push xchg mov dec icebp sbb add ljmp (bad) mov js jbe jo sbbb mov ror mov js mov int imul add clc imul jg mov sub cld mov mov (bad) dec movsl (bad) in insb fcomps xchg xchg or repnz pop andps jmp or inc push add and sarl fcoml sbb clc outsb shr and and push fs std xchg inc inc testl pop xor cmp sub daa (bad) cmp mov (bad) xchg fist andb lods nop adc lret or not data16 rcrl push das adc stc cmp xor push inc movsl lds cmp pop insb fcoms scas mov leave lret add inc fldenv jp push add ds lahf and leave sub loope mov ret nop imul dec (bad) sti lret jge fnsave pop add mov test xlat lock and add xchg ret pop lret mov add mov scas mov push sbb cltd push push mov ljmp mov outsl or std xchg dec xchg pop imul stos or ficomp xor and or stos imul add cmp jle dec jge sub test or inc or jo cmp xor out das negl lea or ja gs ljmp mov hlt ffreep je iret stos cwtl mov xchg xchg xchg lret call stc xor ret cmp idivl cld mov icebp adc pop mov adc mov jb cmp or xor (bad) in lret hlt xchg pop pop pop xor hlt loop call (bad) dec pop out pop or fistpl inc cmp addr16 daa roll mov ret add push mov pop sbb call out leave xlat in pop pop add push mov outsl divl add daa mov cld push push mov mov adc faddl mov fimul jns xchg fs not mov add mov mov push pop dec sti outsl add lret jge inc jae addr16 push mov loop mov rolb sub mov or or imul push push or push cmp out (bad) jle mov pop xor sub pop neg pop dec scas jo mov pop push mov addb or lret addr16 (bad) (bad) jecxz out jp or fucom (bad) insl add (bad) sahf mov loop loop mov daa push sti sub or jg pop sub cli mov lret mov (bad) jecxz xchg aaa aad arpl cwtl into push imul int3 je cmp imul (bad) mov inc mov loop jns cwtl and push mov imul enter repnz mov movhps and jge js mov mov inc ljmp (bad) lock fbld and or push push aad mov pop mov pop fcmovb lds push add xor stos pop pop inc push sub cmp rolb push add mov jp pop mov loop xchg stos bound aad lcall mov ret ljmp loope adc and ljmp outsl jb xor sub mov in and sub mov fs mov or rcl sub sbb (bad) cmp fdivs pop push or stos test fucomip cmpsb xor and imulb clc ja leave push into add std stos lret cli fsubl fsubrp (bad) out mov nop mov or ret test hlt pop and adc cmc xchg mov shr aas and dec push lret and add cmpsl push cs ljmp push fwait imul lea sub and jmp cmpb lret push outsl fisttp xor sub add or stos out dec cli imul sbb add jg fs rep mov cs lret fdiv and andl xchg jl (bad) cli jb cli loop je push ficoml jbe jb fimul into pop stos sub fstl sahf aas pop lret leave pop xor ficoml es pop pop xchg push mov xor or int3 jmp inc aad lret testl mov add pop inc sbb out dec (bad) jecxz lahf scas ja jo aaa pop movzbl jmp mov decl fs mov out test push loop mov hlt daa push and icebp es loop xor xchg cli or adc fprem1 lahf jmp sbb hlt inc sub inc into mov sub xor xor lahf push pop repz lds and cmpsl adcb adc outsb pop mov shrl sti sub lea mov fs mov cmp icebp sub sub cli ljmp add xor pop enter lods jp loopne dec cmp call mov test rol stos mov cmp lret pop jb aad sub jle push imul mov dec cmp mov ljmp lds pop cli inc pop stc xchg (bad) fs jmp push shll rorl rol and dec popf test add jns and xlat cmp in in push xchg mov in mov add dec xor rcrb sub push pop test sub dec je incl out test rolb mov cmp jle imul (bad) (bad) repnz lds lret in ja insl test sub out mov xchg push push inc inc mov (bad) in dec pop stos std xchg lahf imul fimul mov or out push (bad) add aas cmpsl mov lahf jns fs mov or lahf pop sbb xchg in pop mov scas sub sub fsubs (bad) mov mov std in xchg icebp xor int3 inc xor push inc outsb in shlb xor rol dec inc test jge inc pushf or inc rol pop lret fsubrs into jg call or icebp mov push add outsb xlat fs call xchg xchg dec sub ljmp xchg pop cmpsb jns popf jnp push or cmp sub mov dec jecxz jmp xchg je push mov loopne outsb push sub xor mov cmpsb lods std rolb xor jbe ljmp mov (bad) push (bad) imul lcall ljmp pop lods in adc sub xor test sbb mov xor sub mov lret and sti test movsl enter pop loopne out xchg push or or jge jb jmp lods inc inc subb nopl or mov adc sub xor jae pop cmp not jmp xor (bad) dec dec imul repz cmp cmp jnp and sub imul adc mov pop (bad) mov xor fldenv (bad) mov loop sarb jp add jbe jb inc xchg inc enter cmp out test icebp push cmp gs scas mov inc or xlat jb add call cld mov fsubrs ret sahf or mov xlat shlb pusha imul out das sub int loopne add sub les dec inc sub or mov adc fs mov and mov and lret xor insl roll xor xchg jns leave jns push popa cmpsl (bad) rcr mov (bad) aas dec mov pop sbb pop add icebp pop mov aaa sub fs iret mov pop (bad) push or add and add mov cmp cld lods les ret pop scas or roll mov test pop in pop stos jno or sub call jns ret stc outsl mov inc adc mov iret mov xor (bad) ret repz ret stos repz xor or repz dec and xor jle push pop dec fldl jp testb fsubp ret das fs test jg mov roll xlat outsb inc dec mov insl (bad) in call repz jae mov (bad) je jle inc add pop stc int3 or sub push jnp xchg scas out dec test xlat stos lea fnstenv jno mov add outsl and dec jmp sub stc mov (bad) sti jno movl addr16 or mov (bad) ljmp add jp cmpsl es je sbb fmuls mov pop popa mov inc (bad) out lret mov push inc add cmpsb insb cmp inc jmp in inc repz mov je push (bad) or repnz xor or pushf mov mov cmpsl sbb ficomp bound roll xchg aam pop cmp pop mov outsl adc daa xor push mov mov jbe imul (bad) mov test pop jle push mov or cmp daa icebp xlat sbb out mov xor sub xchg inc cmp cli cmp out cmp fcomps xor adc jne mov int mov lock ljmp sbb movsl pop sbb (bad) incb xor fs lds (bad) jmp mov imul mov dec ficompl rcll es pop into mov and es push (bad) push out lret push add (bad) std jnp in inc fimull (bad) adc lods or adc (bad) cwtl cltd and outsb fcompl scas dec or in add dec mov adc clc push lret sti jle ljmp ss cmc icebp xlat imul sub jnp jle jmp mov mov pop push push push xor pushf jb out push out lret out push xor repz sub xor push mov cs lods in adc xchg idivb sub cmp push aad test std movsb leave or mov jge xchg scas clc popa xchg pusha and sarb bnd scas dec jo mov test and cmc sbb movsl mov jns cs (bad) jnp (bad) mov mulb mov sub dec sub das or pop rcrl dec xor (bad) icebp test mov add stc inc movl push jp call shll ret inc jne add aad nop pop sbb repz or xor xchg data16 loop mov std out mov (bad) popf inc addr16 stc mov insb fiaddl jns lds (bad) out mov jnp add cmp test dec hlt dec rcrl xor jbe jo pop mov sub sub jmp lods stos inc test mov out imul addr16 sub aad cmpsl ja movswl sub stc gs out mov inc push loop shlb add mov pop xor sub jge mov dec loopne into pop inc jno xor hlt testl dec scas adc div jns test idivl scas test (bad) out (bad) adc test mov xlat mov push iret xchg push mov push push dec fwait mov jmp daa pop inc dec lds xchg (bad) je add sub divl out sti xor add pop sub mov dec push test pop cltd or ss pop test add in scas sub nop mov jnp ljmp mov sbb mov inc xor jnp xchg lret or rcr test or mov addr16 (bad) je add pop fbld mov cli rcrb xchg mov (bad) ja dec movsl je pop les es mov add dec shr movb pop jle sub mov call or jp (bad) (bad) out jle pop iret sub xchg cmp repnz push lret or push pop dec call adc bnd jbe fimul sti je cltd into aas int cs mov ret mov fbstp xor clc cwtl xchg pop and pushf mov push sub clc and jg cmp push fcoms (bad) enter aam in ljmp adc cli lods add lret sti fldenv push ret nop sahf iret and pop repz jmp ret mov cli dec and daa add push mov jne (bad) insb les or push pop imul jno sub sub mov xor xor mov adc cli xchg push enter les push lret inc adc shlb imul dec clc xchg ja pop adc fisttpll addr16 pop push xor imul or dec jecxz adc sbb mov in mov out lret jbe in outsl mov inc add ss mov (bad) mov sbb push jb (bad) call stc imul inc cmp nop push or lock dec or add fldl cmc loope mov icebp sbb or out sub out xchg fsubrl leave inc inc das sub fsts add bound mov mov jge stc dec xchg mov adc leave pop cld mov leave orl add divl dec mov mov testl push sub adc add and out mov test dec xlat mov movsb lret out xchg mov dec jae xorl inc in mov pop or and aad (bad) mov mov mov test sbb inc push adc leave icebp xor sub dec dec cld adc fildl rcrb lret aam xchg and cwtl xchg or and push sbb aad movsb out mov cli (bad) cmp (bad) xlat (bad) repnz into mov ret jbe jb dec sub lds and cmp popf cmpsl jle popfw pop out shr aas fsubrs rcll xchg xor popa jns add rclb fdivs faddp je (bad) sub idivb movsb bound (bad) outsb fsub xor push adc jmp xor out out lret mov xchg test xchg iret dec jmp aad inc push lds (bad) mov push test jmp clc (bad) shlb mov dec and mov dec mov mov pop sub mov push fistp je or pop iret cli xor jns push into adc add add mov dec cmp add test ret ja xchg or loop ja mov push mov add xchg jbe addr16 sub lret gs adc fnstcw stc repnz mov cmp hlt xor rcr pop les add call insl xchg sbb das push mov sbb mov testb push int add fmul into inc and adc mov hlt stos push (bad) jg pop outsb mov sti add mov xor add rorl and iret das int jmp test cmc shrl lods mov fdivs test imul push aas in push dec loop cmpsl push sbb sub (bad) cld movsb push out mov cmp jle sub jge cltd inc add jbe jmp ret call insl dec pop test cli cmpsl add ds push push mov mov hlt push pop (bad) gs mov mov mov cmp arpl xor dec je rol xor neg mov mov sub xchg cmc cmp sub xor mov jp jne jno xor (bad) push adc sbb add call sti mov icebp mov cwtl xor inc in out dec lahf inc sbb out cs dec cld in (bad) (bad) ljmp sub test xor das sub xchg and sub sub mov jne aad sub enter inc fwait cmp add pushl fistp imul stos push lock ljmp aad mov sub outsl xor scas test mov je stos mov shrb xchg push movsb mov dec sub out inc mov sbb mov dec push mov cmp pop mov dec (bad) leave aad push jge daa xor pop or out out sub mov mov mov cmpsb imulb jb xor mov sub popa in mov sbb sub inc inc xor add mov and xchg fsubr imul sub pop jmp and mov dec daa jle pusha or mov xchg fnsave pop pop out sub (bad) adc stos addr16 xchg mov mov sbb inc mov pop jp lcall outsl xchg decl inc insl daa fmull mov adc mov ret ja push cmc cmp outsb call inc fistpl or aad (bad) jb dec ret cmpsl outsb add icebp (bad) mov out popf movsl das in pop mov cmovno roll mov dec divl imul and movsb or sarl mov ds sbb jmp xlat dec out xor mov pop add fdivrp popa inc jmp (bad) sbb sbb fwait iret (bad) mov pop xchg push imul dec popf cmp lock xor ljmp mov dec repnz daa jmp push mov fcoms mov out lret out xor paddusb mov mov lods in pop mov les push dec test inc mov clc mov cs and xor enter rclb mov adc mov mov pushf (bad) icebp jp inc sbb loope sub (bad) or mov pop stos dec sti mov mov and xchg shrl sub and fildl out mov mov inc jno lds fwait inc leave lret xor fild dec mov arpl bound sub mov lret jle,pn clc inc stos out hlt or sub lret or into xchg (bad) ja repz icebp leave sub loop fsubr pop repnz jne js (bad) add or ret outsb or lods inc jp popf aam loop inc cwtl mov xor cmc push (bad) sub adc sahf and incl xchg rcrl mov add in jae (bad) out mov mov outsb leave mov pushf mov daa mov adc push loopne push add jmp dec shl sahf add std lret sub mov int3 lock rcll push sub stos scas mov scas sbb mov loop xor mov mov scas pusha pop mov bound add xchg andl (bad) pop or mov sub out adc or das jne add enter shll into add jmp add (bad) adc into add jnp pop xchg push mov jge inc or test sub sub jl cmpsl xlat lds inc gs mov xor or mov inc push and icebp ja out sub les stc scas cwtl xchg xchg sti out or sbbb push adc add test gs add clc js lret sub mov xchg outsl add ja imul inc cld outsl inc out xchg gs out push inc xor adc push out sub push pop mov push ja (bad) jne ret ret push pop xor pop pop in sub mov rcr movsb out push bound jno fs pop push cmp scas jg or inc dec jo pop sub int3 (bad) test loope pop enter lock adc mov aad roll pop push mov push push push popf lock inc sub dec call sbb add mov xor repnz movsl hlt pop inc xchg insl sub jge xor mov sub in mov push xchg movsl inc add pop fisttpll cmc xchg jmp mov push pop int3 jo mov push loop jp or mov dec faddl adc (bad) pop pop push pop pop cmpsb mov add sub stc insl inc push andb mov sub decl rol jmp add jg inc nop mov dec pop mov pop sub fucom xchg dec pop lock (bad) test imull clc sub cld mov fsubrl fwait dec pop push das ret push inc push push in jle (bad) cmp into sbb sbb push and out sub and jecxz pop out inc cmp and scas mov and je or mov sub jae cmpsl les mov shlb jg,pt lock je pop call add in lds xabort les cmp mov cld pusha les sub aaa push loopne out pop int3 imul gs leave mov popa popf test repnz mov dec push xor push (bad) xor hlt in xchg gs xor lds pusha mov adc pop mov and ret or icebp mov out add mov mov incb mov sti imul orl aas ret frstor scas (bad) (bad) jb pop imul add leave aaa mov out pop int aas and sti add jge jne stos ret push jge cmp imul ss adc pop dec and add mov scas xchg and movsb pop jmp cld repz mov out das dec sarb dec push add sub add push out xor ljmp cmp in js or sti adc test iret ror dec (bad) int and imul insb add pop popa ret hlt cs lret xchg inc sub icebp lcall xchg dec loopne testl and xchg (bad) aaa sub into jecxz xor xchg fiaddl sub or or jns xchg jmp push and add push dec xlat jno or fcompp shr in mov pop sahf adc xor adc mov loop mov test (bad) lock cld into xchg jge in mov imul jge or shll xor repnz nop aas (bad) mov sub or push out leave mov jb aaa cmc jae mov xor ds xor sbb idivb arpl call cmp xchg iret test mov fwait sub (bad) xchg daa or push nop vmovddup mov adc (bad) fucomp aam stos mov repnz aad inc or and sub and push dec sub rolb pop mov cmpl xchg negl jbe das sti fidiv inc mov sbb ret sbb rep pop xor mov iret xchg or cli repnz cmp icebp or xor icebp sub jo es jmp sub (bad) (bad) clc mov xor call ja sbbb or xchg jo sub cmp das or and outsb xor testb jg sub jmp jmp insl sbb jne test mov lret ret pop shll (bad) mov ret decl mov jns dec inc cwtl sahf imul add mov incl pop lock inc movsb into outsl mov mov test lahf (bad) xor add inc mov xchg ret in xor add dec fimull stos xor push fsubs lret lret lods adc inc mov inc fcomip mov jle jp fisubl rcrl sbb cmp repz scas mov pop jmp popf adc sub or mov cmpsb inc mov sub movl jl fs mov lea lcall popf xchg add stos das loopne mov sbb ljmp adc shll mov and out mov cmp mov fistpll rcll pop movzbl jo push (bad) out sti mov leave jecxz pop sarl mov fisub cld enter cwtl push testl (bad) add sub inc loop dec pop ret sub fildl pop adc pusha repnz hlt or mov cld mov lret xor and fwait xor test lret (bad) ja fistpll pop ljmp out mov pop lret mov jmp mov mov and jg mov rcrl sbb icebp jl xor leave xchg rcr mov incb (bad) xchg jmp das (bad) and stos (bad) sarl out notb push inc popa adc adcb or (bad) addr16 mov inc outsb shr loop xchg pop jns jb push pop lahf push outsb mov rolb add mov loope stc fincstp cmp insl pop pop inc xor aas das jns mov inc push (bad) in mov and jno xchg inc push aaa cmp arpl mov jne nop nop cmp lds and jo dec (bad) xor cmc gs or sub cs cmc add nop (bad) mov stc push xor xchg dec xchg dec out mov fs or roll jl leave xlat lcall mov (bad) sub mov xchg decb or negb ss adc sub lret ret in les pop lret dec adc mov outsb loope cmp lods das mov push mov lcall push sub push dec cmp stos in lret xchg and das rclb and mov mov pop or mov icebp sub pop test and pop mov mov xlat push cmp (bad) mov into sbb sub jmp lahf clc add adc jmp adc stos sub sub js and mov daa cmp mov repnz sub pushf ljmp pop adc daa mov mov fs sbb es dec mov pushf std adc xchg arpl sbb xor sub add gs das enter add mov mov or jmp push and cld xor shll (bad) pop and arpl test popf mov iret popf push push fdivl mov xor jmp dec sub add dec pop movsb adc cld cmp and js jne bound mov out cmpsb pop or cmp mov jle out push adc xlat outsb mov das iret push adc mov sbb mov fprem1 dec loope loop jmp mov (bad) loop xchg add add mov and add popl out scas repz scas sub arpl testb lret adc pop sub mov or repz loopne push push pop popf jne or adc mov push push mov adc jo sahf jp jmp (bad) dec mov shlb in sub (bad) mov push cmp ret xchg push or repnz inc adc cli mov into dec or dec std loope (bad) xor cli int3 fs mov sbb daa fild or add cltd pusha iret daa mov bnd push xchg nop push add mov mov dec inc lea adc xlat gs lods (bad) mov out and adc and test dec sbb or add aam gs shr jnp jmp or or in add inc or lock pop pop xor mov pop aad out xchg xchg (bad) and lods mov scas fcmovne push mov or aas xchg push mov negl xor sbb xchg or pop mov pop pushf mov dec sbb pop lods push mov fnstenv jp sbbl mov pop mov mov jne cmp nop mov lret mov iret cli lret out inc loop outsb divl lods lods mov mov daa fisubrl or fwait (bad) sub bound mov loope testb lcall (bad) lret bound imul mov lds idivb mov jg mov sti sub cmpsl mov dec (bad) popf jnp dec cli icebp nop push arpl dec inc ljmp fistl add fisubr sub mov rorb cmp scas push pop cltd mov daa pop xchg inc cltd les daa (bad) sbb imul add sub xor rorl or roll (bad) bound lret iret pop movsl dec into dec dec xor add arpl daa and imul sarl mov insb scas repz mov pop jecxz mov xor leave push fnstenv test cmp mov mov xor sub repz cli test xchg out mov leave and daa xchg sbbl mov dec or incb out cwtl pop pop pop sti das xchg and mov push inc or pop jg loop repz lds jno dec cmp mov push test shll xchg lret mov not test and scas and jmp and mov cltd and mov mov ja pop xchg xor add in jne decb mov add mov ret popa insb (bad) lret hlt and (bad) mov dec and jae and in cmpsb and cmc icebp pop xchg out mov or push ljmp (bad) mov loopne jmp scas out add jl sub div std sahf and cmp inc pop pushf arpl clc add mov cli mov push lcall aad psubsw adc mov xor ds xchg mov and sub cmp repnz xchg mov in pop dec out mov adc insl xor cmp das in inc mov pop sub mov sub clc fldt andb lret stos lea fisttp mov dec lret sub add mov xlat jmp sahf movsb adc fsubl and xor ficoml ret daa sub xor loop or sbb sub mov pop push mov daa (bad) pop inc mov out sbb fdivp mov std xor sub popf fistp std gs jmp inc mov jns and add rorb mov call bound (bad) jecxz mov out lret pop ret fidivr jo lret mov cmpsb popa daa add mov es push xor in xchg mov les mov dec les push mov (bad) mov addb iret add add xlat xor outsl (bad) sub add jae xchg pop lret mov or loop rorb mov mov push daa xchg out pop push push push dec pop adc xor mov add push imul jo xchg (bad) xor out jg mov sar lret lods adc jecxz adc inc into mov leave adc sbb jnp (bad) sub out xchg or sub and jge flds sub cltd popf xchg (bad) adc mov xor or pop fnstcw mov adc fdivs add aaa icebp push pop dec ss fbstp sti ret dec out sub xor pop out cmc out lret xchg cli addr16 push mov dec decb enter daa adc fidivrl and mov mov adc mov mov sub cmpsb pop sub pop push add jb sbb xor popf std mov pop or outsb test into sub xchg ficomp mulb add adc add and push lret (bad) jne jo sti hlt mov xchg cld mov hlt test lret or shrb fstp loopne add xchg or pop sub and jmp ror xchg and jge pop inc (bad) push sar inc icebp aaa test pop xchg movl add enter and pop ljmp lds loop jp inc add pop xor pushf mov mov out scas sub jge or mov xlat iret daa mov movb nop xor ja mov push xchg test (bad) mov jecxz mov push out in fsubl or out ja fs sub or pop stc dec (bad) fildll pushl mov test into ret push or out mov dec scas xor scas adc rclb popf and les ljmp mov (bad) ds outsl sub sbb mov in das xor pop cs pop pop sub or icebp mov cwtl popf and xchg sbb jnp pop out sub fwait test shl icebp push or or adc sbb imul pop mov sbb lcall sub std mov sbb stos dec jne jecxz mov push and mov push into add inc shufps sub push xchg sbb movsb sub add xchg and mov add pop inc inc add outsl cmpsb dec add and mov push jbe pop out cmp cs into jmp cltd scas push lcall cmp push mov fisttpll or sub cmp mov cmc xchg xchg (bad) sbb repnz add fwait scas inc and mov out push pop mov call (bad) pushf dec push jg imul or fnstenv sub ja lret inc jmp leave mov (bad) and jno test movzbl sub jmp mov and push jbe pop gs frndint or jnp,pt mov cmp fimull notb hlt jbe dec nop orl cmp mov imul sub push and sub and movsb mov inc arpl or mov ljmp inc movsb xor fbstp pop add decl aad mov mov or fwait (bad) and mov ret push pop loop mov cmp mov and or sub sub push jmp push push or mov lcall cmp out or or push sub jno inc shlb ret sub cmp xchg ficom gs call iret imul test repnz inc iret pushl incl jecxz ror arpl mov sbb enter push xor cmp sub inc rol xor jo scas dec xchg fcoms shr (bad) ss decl mov movb inc pop jae scas push xor xchg loopne push jbe or add mov cmp xchg adc xchg xchg scas jge out popf (bad) pop dec into mov or or push pushf movsb and ret out pop cmp clc cli arpl fmuls cmpsb test and ficoml stos lret ja sbb or xor sbb push push rolb mov add push jne mov cmpsb add stc (bad) cmpsl and xchg mov and mov aaa test (bad) pushf cmpl (bad) jns dec lock mov mov popa movsb stos imul sub inc cmp and ret fistl mov push inc xchg and xor enter not push pusha outsl pop addr16 add shr push scas mov xchg dec sahf cltd inc sub in and xor mov adc sub mulb add jno mull jno mov outsl call jg ss lock mov dec and mov daa jge cmpb jecxz inc sub dec mov cld mov sub jg xlat sub scas scas sbb popa imul mov mov pop inc cmp and xor mov in sub imul add ret icebp inc mov and or ljmp mov cld (bad) xor xor pushf jnp cmpsl pop xor (bad) cmp ret out fsubrs movsb or popa sbb jmp mov xchg les pop mov sub pop xor fbld cmp out loop xchg push popf dec sub dec lock mov rorb xor shl sub popf xor in mov mov jnp push out (bad) jmp popf or out data16 stos jnp sbb scas push cmpsl jmp cltd jp out sti lret xor in pusha xchg mov or (bad) xor lcall mov sub into add xlat inc jns mov pushf push mov or inc xchg jmp or iret jg pop push pushl xchg popa incl add insl mov movsb pop out out dec int3 xlat ds mov stc jno repnz fsubr sbb (bad) sub jo dec sub inc cs mov imul scas aad nop and xchg push test rcll (bad) out loop (bad) fisubrl sbb dec arpl test fsub pop adc inc notl sbb sbb mov fcompl sub mov lret mov (bad) dec outsl (bad) cmp pop leave pop in adc mov pushf cmp pusha mov clc mov lods mov pop mov push jne cli add mov into pop jl cmp add loopne aam mov inc mov sbb or sbb adc sub jmp ds into jmp (bad) jb or cmp (bad) (bad) out and jg push cmovne outsb mov push fsts imul bnd or sub mov (bad) push imul aam dec in xor lret mov mov push xchg in ja jl (bad) or mov xchg fdivr lret xchg mov jnp js sub test stos push mov and test ret mov (bad) and jmp or out mov push aam xlat sbb mov js adc int3 sub adc test scas pushf mov pop hlt out (bad) mov sub ljmp mov (bad) jbe add and mov xor pop insb (bad) dec stc int adc sti mov sbb stc mov sbb xlat xor cmp xlat sub das mov jge xorb jmp loop and or in dec and das notb aad (bad) hlt outsb imul and mov shrl cmp xchg jnp mov push cli test jmp hlt xchg mov xchg mov nop pop sub fisttpll xor and out sub xlat stc lods dec nop and popf xchg add mov sub jmp ret dec icebp imull push (bad) je mov shl and xor mov ja into jo mov dec je daa in rorb sarb mov cmp jb,pn das xor shl std mov xlat sub push push pop lahf mov mov cld sub sub pop pop mov and or (bad) mov fmulp adc cli or xchg mov aas movsb xlat lar mov mov xchg cli inc lahf and stos ja leave adc add add fucomip fsubl push lock mov outsl les xchg test sbb int3 mov mov cmp out lods pusha inc adc mov cmp and mov lds iret inc cmp fisubr dec lcall jmp or pop push push cld and dec fcomps (bad) mov sbb icebp mov push pop mov adc push fisttpll xor rorb jle fldt xchg mov and adc push mov mov out sub test (bad) ljmp pop das add sbb push push xor iret mov sub cmpsl adc repnz sub sti repnz (bad) sub sub or (bad) mov and in xchg in movsb test and das push inc shr ret mov pop mov mov xor (bad) push lret adc xchg pop mov fcoms mov jo vmovupd xchg mov and or das negl stos out sbb in das inc inc fucomp mov in popf movsb mov fisubr iret mov mov out cltd dec xor ficomp (bad) jp xchg aaa mov inc and int3 pop add test aam or out jb inc lds lods mov hlt jmp loope push jecxz call icebp mov in mov jmp ret dec sbb lcall add loope ja jecxz (bad) dec cli fld xor xchg xlat sbb test and jp in aad mov lcall add repz cltd stos add mov add stos lret mov int loope lret sub (bad) pop lds pop xchg leave jge in sti popa das push mov int3 dec popf jns imul jb subb cmp jbe mov leave mov push dec adc arpl lret nop imul sti adc bound add outsl mov sub (bad) stc pop jmp popf cld sbb mov popa lret pop in mov in mov add pop pop push xchg lods fimul cwtl push ret loop add add push xchg fbld lahf or push mov repnz shl pop scas inc pop popf push shll xlat jge pusha icebp adc rcrl xchg les cmpsb decl jae test mov xor xor jecxz push jmp sub in movsb xchg push dec pop cmp jp mov cli jmp (bad) mov mov loopne and mov dec inc imul sub sub aas add roll movsl jmp loope bnd orl pop mov fisubl push notb lods lcall je jmp mov cmp mov sub inc mov add xlat mov adc mov test mov mov nop fmull bound dec lods xchg fisttpl mov add dec fs cmp push addr16 cmp mov add or mov fmuls jmp add push xchg repz pop pop cli popa sbb fldt ds add es fist push xchg fnstsw loope sar sub push repnz jge mov mov jmp and mov jecxz inc loop mov adc stc adcl (bad) xlat js mov mov pop int3 rolb mov repnz sarb add pop or stos mov pop shlb pop push cmpsl orb mov xchg pop adc out cmp (bad) push andl jnp or cmp mov scas cltd adc mov inc popa std out add aam test (bad) stc pop cmp xlat int3 mov push fdivp pop les in in pop imul les mov pop das mov (bad) mov cmpsb mov je jmp fiaddl out icebp icebp mov ss xchg lods ja cwtl pushf out stc fnsave sahf roll cmp cmp push sti mov sarl mov rcll mov ror test mov mov jp mov ljmp xor mov sarl (bad) sub xor les add xchg push fwait pop and mov clc push ja push aam push mull and loop repnz mov aas sub leave shrl scas adc shlb adc pushf movntps idiv sub add lret dec repnz cmp bound shlb adc hlt pop call in lret scas push loope je add mov cs pop repnz or cmp push mov leave add xchg (bad) add mov push xor loope dec iret mov in mov jmp sti add push jle jb je sub xchg add daa pop lea pop nop jmp pop notl push jecxz lret mov out negb xor xor mov or or divb (bad) sti hlt adc sti sub pop inc out adc mov adc fild and sub pop push add or das sub cmp and or (bad) std sbb popf cwtl mulb pop pop cltd clc sub lods xchg xlat lds sti stos cwtl cmpsb call ss ja dec push pop inc mov cs scas ljmp jae dec gs xor or xor ret xor bound fbstp (bad) pop aam push shrl movsb mov rcll enter stc or mov jne imul add dec lret jp add aam stos lods daa pop or mov mov dec test or sub (bad) sub xchg test mov pop pop in mulb clc jno popa xchg bound icebp push insb mov fcom push out es cmpsl adc cmp das (bad) sbb mov push jnp sub (bad) cwtl pop and push push inc clc lock mov fdivrs les cmp cld jb pop call lods jl imul stos mov inc cmp push out xor ret push pop push mov dec lahf cmp or repz or cld dec fisttpl outsl shl incl stc mov in into push adcb push incl mov jae and mov rcr call push dec addr16 pop add rcrb mov cwtl (bad) out jp mov ds pop dec idivl loopne lock sbb sub icebp pop jo pop cwtl add ret ret jne sbb or pop je push adcl les subb jle pop push mov testl cltd xlat push and jb fnstenv jecxz sbb jecxz stos jl xor xor pop fcompl outsb add loopne mov ds fstpl sub push pop jp mov or outsb and mov and out jp pusha out xchg mov push mov pop inc cwtl push jno sub aaa mov dec lret (bad) int3 insb add or sub mov dec pop stos jb and sub repnz adcb or mov or pop add jbe fisubrl icebp sub repnz nop lret push and aas cs lret flds fsubrl or add cmp pop and daa pop rcl ljmp mov add mov clc mov mov cmp jp jno popa and or fidiv lcall ror cmp int or iret mov ret xlat cmp and pop (bad) insb mov add mov iret imul jbe xor enter ret jne mov xchg loop sbb sub lahf sub add pop or xor xchg (bad) movsb clc (bad) sub popa dec mov and fscale fiaddl (bad) dec add fdivl movsb aad or adc jmp stc jno (bad) pushl or pop push sub jp and nop ljmp (bad) testb xchg lcall and dec add sub push out jg jle cmp push add and mov mov xchg popf sub jecxz inc jmp pop nop fs and cmpsb fs and sbb add adc add jg fdivrs mov and dec stos sti jp add sub push fidivl inc call popf aam jmp and add mov dec lea and cmc or xchg insb cmpsl lahf inc mov iret push push dec daa or fs dec add or xor adc (bad) jbe cmpsl mov adc and sub fxch mov enter pusha and mov mov int3 and mov mov jp mov inc fsts mov pop in lock je lods xchg dec mov out add or or dec push dec call mov push out leave fisttpll jle shr jl push dec in pushf lret adc sub or push adc push movsb pop mov jmp xchg mov (bad) xor call mov and sub fsubs ret aad fsts cmp rol les jmp pop sbb or cmpsl bound and pushf xchg xor call pop test pop shr sarl mov xor stos jle ljmp mov je je jmp inc mov sub mov ljmp adc push push repz add adc pop (bad) sbb out sub out sub adc sarl adc and stos fistpl mov scas sub mov les call pop jmp pop clc xchg imul xchg pop and pop push mov xchg fcoms cli mov xor add repnz out sub push lret mov xchg sbb xlat or sbb testb push mov add cltd popa sub fiaddl cmp je mov popf testb push iret rcrb mov std cwtl mov leave inc cs repz ret mov jp jle aas pop clc and fidivr sub fstl cs mov sbb adc lods add pop bound not shrl xor pop xchg sub inc out mov das sub cltd shll dec sbb dec sbb iret xchg mov into test xor add cltd add insb int3 leave fsubs ret pop mov sub lret jecxz mov add ljmp ljmp xchg mov (bad) jo notl sbb movsb bound aad sub xchg xchg sbb sarl scas xchg adc and jg int3 and inc jmp or pushf gs cmp xor and push add out mov dec addr16 stc gs or xor cmp sbb and mov not or into mov mov pushf orl pop sub or push fdivrp xor ljmp je ret cmp dec incl pop mov hlt jo push push pusha daa xor in mov dec pop and pop shl (bad) hlt sti and inc sub insb sub notl jbe dec fldz mov xor lea lea jmp addr16 daa mov es outsb daa push and daa sub rcl aam jo repz xor xor push shl adc daa es sbb (bad) push push sti xchg add lock jge cmp adc rclb lret add jecxz sti xor int3 and pop jl pop pop roll pop ficom scas lahf lret sub and add cli pop loopne aas mov mov dec das pop rorb sub pushf in ficompl out xchg icebp mov jle loop cmp sbb outsb mov and in fildll add cmp jp dec repz add mov jb add andl (bad) das das sub into stc sub sub dec (bad) std xor nop mov aad lods and cltd movsb insl dec push hlt pop pop dec ret mov aad xchg push jmp pop cwtl outsl repz sub mov adc in or and incb or pop inc mov xchg stc imull dec sub (bad) aas mov sub subl test cwtl mov adc scas loop xchg arpl and ss cmpsb sbb xchg icebp jmp outsl das adc adc out dec and and and mov cmp test (bad) mov aas add sbb out and int imul into popf cld notl out xchg in cwtl jp xchg mov mov cmp mov mov (bad) fsubl (bad) int cmpb je cli and adc bound adcb mov repz sub jmp and stos xor push and daa mov mov cld jnp jl gs ljmp pop add fldt push cwtl push and add sub stc mov pop dec add aas das xor lods pop pop fsub sarb add mov cli xor cmpsl inc push sub sub jo icebp xlat std cmpsb or mov into sbb mov cmp aad lret xchg inc xor adc jmp push outsb insb or test xor aad push iret pop mov add xor or mov jge xchg (bad) adc mov test incb daa mov and sub inc jb and xchg pop sub jl push les pop cmp xchg sarl out push dec pop stos sub pop or mov and dec fucomip jle cmp ja or mov (bad) pop inc sbb (bad) mov notl vpunpckhbw or fdivs xchg aad push xchg and std mov in adc (bad) (bad) sub sarl push icebp xchg mov lcall out clc cmp xlat (bad) lock jne pop sahf jno sub cli mov daa sbb push (bad) popa push cmpl pusha je lahf fstpt xor sar jmp repnz mov jg loop arpl (bad) mov mov add das mov stc and clc clc jp rcl dec repnz mov lea jmp out xor shrb pop out sbb mov sub lds mov inc sub daa (bad) (bad) lea xor (bad) push (bad) bound jno push daa (bad) xlat cwtl pop xor daa fbld not and mov and rorl adc mov ljmp addr16 sbb repz xchg ljmp sub xorb and xchg push sbb push clc mov outsl lods shll xlat and (bad) outsl jo add mov rcrl loope ljmp pop xor lahf clc or mov sub jns imul ss mov and mov jbe dec dec rcll add push repz outsb and gs or cltd xchg cmp inc cmp push and mov xor cmp clc (bad) fimul in outsl sub mov ds dec xchg fstps sub dec adc lret sarl in div (bad) pop bnd pusha test imul pop popa das ja inc popf mov jnp or xchg cmp xchg inc lahf sub les adc shl mov mov sub xchg imul or push gs add sar and fwait dec ljmp mov adc or imul addr16 mov flds dec test mov ja repz aaa stos mov dec push and mov fistpll and cwtl xchg and sbb movsl shrl xchg adc mov sbb es fnstenv ret and push (bad) out mov mov pop orb mov xchg adc push mov dec dec xor jecxz aam push nop push adc pop jge adc mov lods data16 cmp dec shrb popa insb cmpsl mov sahf jl and jne lods (bad) dec scas int das test mov sbb adc pop pusha pop push jb sbb aam addr16 shrb or jae addb push add push add das cmc jnp sbb push pop andl adc fidivrl out mov add sub idivb frstor cmpsb shr xor add cmpl add lret push pop xchg mov out adcb scas xchg xor push mov jl or ss jecxz cmp into xchg sub and repz pop inc cmpsb add mov adcb mov jnp (bad) ja insb cmp add jo mov cld mov dec push sub jg lcall ret adc adc or push push mov mov push insl pop add jp pop jl push (bad) mov stc rorl dec std xor ret mov sub shrb adc test mov daa mov in movsl inc inc pop popa rorb mov and in arpl cmc pop testb jle test dec cli imul sti push fld jo inc add mov add ret inc pop or add pop pop xor ja cmpsb xchg ljmp in pop sub stc jnp xor jl adc mov dec mov rorb mov push adc sarl mov mov sub mov inc fsubs in cmp in mov add xchg ljmp mov dec mov int3 mov mov jmp fcomip lahf cld lds sub pop mov cmpsl es icebp cltd js mov pop mov and dec das idivb clc aam stos lods arpl inc call pop out mov mov push dec jns dec cwtl pop add int imul xchg sti sub (bad) imul add cmp lds cmp lret inc nop push push out sti dec lods dec enter imul rcl ljmp aam (bad) mov or div clc and ja popa push mov xchg sti repz ret call sub clc xchg pop mov dec pop cmpsl sbb add aaa (bad) xor jno sub (bad) mov xor idivl mull push mov xor cmp sub inc out or sahf or (bad) lods jae xor lods and or outsl repz sbb fstp cmp cmp dec mov adc (bad) mov cmp jmp mov lret fdivs sbb ljmp idiv inc mov jo add or cmp inc push xor xchg or jg js loope pop sub xchg imul and aas fidivl leave movl test xchg dec pushf pop jmp cmp xchg adc jb out and sbb mov xor pop in dec sbb inc es repz xlat xlat int3 inc pop fidiv call jmp out imul sub adc xor mov mov in dec push lock pop outsb test negl fnstcw repnz pop mov ficompl dec cs sub add jbe push or mov mov xchg stos (bad) mov mov add arpl xor decb dec xor notl and popf fiadd xlat cwtd pop cmp sti adc test je out repz sbb sub jmp or mov cmp andl aam mov or and daa xlat adc (bad) xor sarb adc xchg std mov into mov sub dec sarl cmp enter ljmp add lret in inc push add flds cmp mov rcr rorl inc sub and mov or pop xchg sti leave inc or aas fnstenv mov int3 es push add pushf pop loopne (bad) push jno sahf shrl clc out outsl rorl xor mov ljmp pop add xchg movsl ficom fidiv lds inc mov adc out mov or repz aad push mov and xor aas loop test pushf ljmp dec leave or jb and push out outsb clc enter cmp icebp ja fwait dec push sub push lahf (bad) jb cmpsb add add add imul in adc add lea sti stc mov scas fldenv sub (bad) or cld pop test icebp or jg aam cld add loop popf pop loop std gs arpl sub sub mov cmpb cwtl ljmp ljmp push sbb pop les and insb lock mov cmc ret lret sub addr16 xchg (bad) jmp test add sbb push jmp or sarl inc movsl repnz lret mov sti out das lret aad fwait xchg in arpl cli mov and inc inc (bad) dec dec les stos cmp cmp inc or out adc idiv mov lcall movsb and add shlb fdivrs negl sbb mov jp pop gs orl pop mov add adc out dec mov inc xor pusha or mov adc enter mov notb fisttp xchg cmpsb (bad) push ret push or pop iret push push mov icebp cmp push popf orl sub adc lods add je pop (bad) pop xchg inc mov fidivrl lds mov je mov adcl scas es xchg xor cmpsl jl xor jecxz add test sub mov pop pop pop xchg (bad) or (bad) dec cmp repnz popf (bad) daa and nop call sbb aad fisttpl lods lock cmp sahf push jbe mov xor aas add sysenter (bad) mov insb xor repnz pop test xchg mov outsb pop sub ljmp scas (bad) outsl pop imul adc sbb daa fisubl push adc pop dec fnstenv movsl popa js leave cmp jo stos xor lds lock das into mov jmp lret lcall outsl out insl mulb (bad) sub out jbe pop jge inc mov jbe popf pop (bad) pop mov xchg push daa fldl xchg push bound (bad) sbbb aas pop repz dec fdivrs push add (bad) lock fld imul xor cmp dec stos mov mov (bad) adc mov cwtl dec xchg inc nop and jecxz icebp std inc sub clc fstpl popf xchg mov clc (bad) fwait dec xor and pop andb into dec fldl pop cmp or test in movsl pop movl ja lock lods nop xchg std in in pop shl xor jecxz xor xlat sbb leave sbb stc cmp shr cmp mov mov xchg loope sub mov daa out mov push jle outsl test loope test mov sti mov adc push push xchg int xor ljmp pop xchg andl int3 repz sub jmp mov cltd lret xor (bad) mul and lea icebp xor pop cmpsl or notl out in mov cli or or cwtl or sub adc xor push jle push icebp subl sub (bad) dec cmpsl ret pop xchg inc mov pop imul pop ljmp leave fxch add sub add push fdivrs adc mov sbb add dec mov pop into jbe push subb push (bad) adc popf inc mov je xor (bad) pop cli out testb pop mov shlb les daa push aad loop cmc sub mov sbb mov xchg xor cmp insb mov and mov sub cmp ret fdivs push dec movb test pop push adc pop jne push pop sub mov jne xor or movsl neg adc daa xor mov mov dec xor sti push fbstp xor add js xlat inc je sti popf out in inc leave adc inc out dec mov mov imulb pop or add push inc mov xor fisubr movsl sub mov fisubl cli pop xchg add mov pop pop lods fistp das or fisub jl pop int3 mov and and or (bad) or jg dec stos mov adc add dec out lahf sub pop mov and imul lods jo mov mov das or jmp fs notl xor xor scas push pop inc pop cmc add out test mov test repz clc outsl sub xor je push adc mov lock in mov sub jno xor daa add pushl xor in mov dec inc (bad) jmp js mov jb xchg mov adc or (bad) mov sub xchg test aam imul add mov outsl les pop pop pop in pop (bad) pop (bad) xor movl push hlt dec bound out jns dec jns test or mov lock lods gs sub add arpl xor mov mov inc into push mov pop mov mov add jle add pop push cld ds mov xchg out pop test mov das jecxz add mov cmpsl inc dec or add mov cld stc mov or nop into xchg sbb mov mov sub cli or sbb inc push mov adc xchg or aas stc jg sbb fldt dec sub mov sti movsl jae test mov jle rol and popf dec fidivl xchg andb icebp cmp xor les lock add ret fistpl cmp test mov pop or pushl xor cmc aas jg inc (bad) in pop into jno jmp xlat jb xchg xchg xor js xor push fldcw or cmp inc jmp xchg fcoms in jg mov mov dec rcrb push or pop icebp pushf gs clc inc ds xlat stos sub cltd push outsb mov mov rcrl mov xor idivl stc jmp xor push scas add cmp sub mov std test (bad) cwtl adc test push rcll mov cltd in movsl int3 cmovle sub stos pop mov add mov mov adc inc mov dec (bad) (bad) fisubr into insb lods je dec mov dec pop pop into add xlat je aaa lods jg jg in inc xorl es mov pop push cmp cmp jb outsb mov jnp fstl push adc push xor mov pop and mov fidivrl mov push (bad) lock mull jne pop mov mov sub mulb popf push in (bad) mov and cmpsb cmp adc (bad) xchg (bad) and jnp movsb arpl enter sub nop and pushf popa shr into jg mov adc mov adc icebp mov sbb cmc icebp xor jmp fnstenv (bad) or or add pop or leave ja mov loop pop sub daa jge rcrl js push cmpsl loope out sub dec pop test insb adc loopne iret dec and loop dec push dec popf pop shll push insb loopne dec stc adc lock aam les dec push pop scas insl mov mov pop inc rorl mov lret or or inc mov and movsl shlb rcr enter ror hlt mov es cmp dec stos adc add dec adc punpcklbw mov das mov cmpsb cmp (bad) xor dec and loop xor out into cs inc cmp jecxz and push (bad) and sbb mov mov jp push ljmp pop pop (bad) aaa xor cmp xor cs dec push dec gs loop addb xor popa xchg jno daa jle push jns xchg ret mov or aaa fnop in mov or (bad) ljmp in mov iret out call pushl sub inc mov pop mov add mov jns ljmp mov push bnd mov clc lock push or and or and mov jle jnp into fst addl xor mov sub xor mov loop adcl ss repz mov cwtl insb mov pop cmp jbe mov jg mov push movsb cli gs lret adc stos sub mov cmpsb and adc hlt cwtl test add push and push cltd push dec (bad) scas pusha sub call inc int leave std cltd les add dec (bad) fstps inc sbb pop ret lret pop bound int3 xchg pop leave or xchg js lods xor cltd dec call scas ljmp rorl mov cmp clc ficomp inc outsb ret call xchg pop pop out clc xor pop xor ficom ret xchg cmpsl fisubrl es lahf je jmp cmpsb and sub lods mov lret xchg repnz push rcrb das daa mov cltd nop cmpsl xchg inc push jbe mov (bad) pushl cmovp into mov jne nop dec in ds dec roll dec xor push dec ficom cmpsl pop push inc fstps cs or leave scas popf jecxz test mov popf adc sbb aas add insb cmp sub sub daa xor ret or pop inc cmp xlat mov out sub cmpsb lods lahf jp aam xchg in mov jae leave dec popl aas lea add push (bad) loopne ret adc push jmp pop mov pop mov and cmp mov push mov push je pop jbe adc push push sub jbe cmpsb stc dec leave shlb cmc jl add push cmpsl (bad) decb fs mov into or xchg mov insl inc or mov pop pop add pop pop pop popf pop cmp das popf push mov lret lock popf push cli inc xor push shrl (bad) leave cmc push daa in jmp push lret (bad) dec or cld test test repnz mov loop fmull (bad) mov movsb rcrl push pop mov mov add jbe adc fcoms mov shlb std sbb mov mov or xor pop inc out mov int3 in mov adc adc int3 pop (bad) xchg (bad) imul xchg or cmp or out repnz and and sti hlt rcr xchg xlat adc hlt clc sub add pusha push repz nop mov jecxz lds push push sub pop sti add into adc test sahf lahf das in mov or idivb sub das sub and (bad) pop pop and pop out or xor xchg pop xor repz and xchg ljmp or pop xor pop mov cltd jl ljmp cmp repz pop sub stc daa mov jecxz jne loope push mov inc cmp push push jns cwtl insl push fimull leave xchg push rol sub inc lods andl dec dec je cli test aad cltd adc cmp clc popa and adc mov adc repnz das xchg mov dec daa shll testl negb ret ret lcall out mov into push (bad) and ja dec dec lock jg jle scas popa push cmp repz dec in adc sub insb and repnz pop nop lahf fstpl out lahf jne out xor repz adc jmp cmpsl (bad) pop mov pop sub and bound inc gs dec bound mov icebp pop sub push mov mov mov mov decl aam lds popf mov xchg mov and das out fwait pop hlt je xchg mov xchg dec jge mov sbb jp in mov outsl pop mov xchg xchg mov jb div (bad) pusha repnz sbb imul pop shrb stc lahf pop shl mov daa icebp sti jno aaa mov lret iret adc dec xor add xchg lss mov cmp xor nop out mulb stc and ljmp movsb int3 adc dec icebp lahf pop cmp sub cli fs inc push ret cmp sub icebp test divb imul xorb pop sub in push mov add xchg stos xor mov pop pop movsb int3 and dec (bad) andb clc jge in loope xlat sahf mov loopne mov xchg or (bad) sahf les push jmp adc dec in icebp lds (bad) aam sub adc ljmp ds nop std pop xor fistpll cli mov mov or xrelease xor in mov or aaa mov cmp std inc movsl cmpsb pop or rorb loope (bad) outsb cmpsb je es mov ficom xor inc cmp loop sub imull jnp xor add push lock mov xchg stos sub imul loopne add iret test scas adc stc mov scas sbb xchg cmc outsl mov mov and pushf aad (bad) mov ljmp pop (bad) or xchg xchg in mov mov pop mov and sbb add lods mov xchg int3 (bad) mov in mov xor and xchg clc jno daa pop jecxz pop push (bad) sub sarl add stc or cld (bad) call rcll notb mov out ljmp iret dec mov (bad) in sub lahf and xor addr16 xchg xchg scas mov lahf xchg andb mov jbe icebp test jne push fstps push or jnp aad repnz mov mov xchg jg nop and cmpsb dec nop xchg adc aas xor adc xor mov idivb jg (bad) jb into std pop loope sub mov je mov (bad) movsb stos xor out test sti xor ret ret les out pop dec dec xlat push sub mov adc out xlat in idiv push adc xor loopne sub leave aam and xchg jnp fisub cmpsl leave daa loope std jne xor mov out icebp ds mov or jl movsb inc leave and into xor inc (bad) jmp xchg fdivrp inc into lret in mov sar or mov or push (bad) cmp mov lea jbe xchg mov mov (bad) dec loop out scas sub jg hlt shll sub leave lahf jno xchg sbb les out sahf movl push and dec push bound aam mov fsts push cld imul cmc stc aas cltd das lds call adc je clc aaa test sub loopne sti lahf hlt js ljmp xor pop ret inc push mov (bad) jne mull fs andb fcomps ljmp push (bad) mov xchg in xor or call movsl fisttp imul (bad) int mov daa pop xchg jmp out push ficoml icebp xor ret and mov (bad) pop bound fistpl add dec (bad) push psubd fistpl xchg neg imul xorl sub sub imul inc (bad) mov push ret pop sti add mov cld lods addr16 and mov dec clc dec das ljmp or test into sub pop jl mov or das mov arpl push xchg xchg (bad) jecxz sub sbb jge (bad) clc dec mov push in lods into test popf adc scas adc fisttpll push mov sub out iret in ret jmp test cmp push adc lret jmp add lea sub pop jb adc aaa mov dec leave cwtl lcall inc (bad) jbe decb add pop xor clc cmp daa (bad) (bad) or push or in movsl rcll fstps sti dec enter sub or xchg scas adc xor inc cmp jo mov out pusha xchg stos in dec mov add or pushf push jle mov push das pop inc or pusha cmp pop xchg jg pop daa call dec xor cmp pop movsb mov mov aad sbb or popf or push and lret pushf imulb fiaddl push mov ret test in pop ret stos sub fisubrl fsts jg lock mov xor xorl mov int sar push sub icebp sbb xlat mov insl xor add pop fstpl push push and push or xor mov jle xor push mov xchg xlat mov sbb rcrl mov or mov outsb mov add shl cmpsb es sub test xchg cmp popf push fmulp inc js shrb insl testl mov out add dec aam fmull adc je pusha shll ds std mov (bad) sub jecxz dec xor clc jecxz xchg fcos pusha inc enter or imul push cmpsl push (bad) loope jle and add jecxz out xor stos fwait mov enter mov mov lret sub arpl mov push adc xor sub mov loope mov dec ficoml ds leave mov cld imul mov lcall dec into cli mov sti mov sub aam push lock xchg xor mov test in xchg mov (bad) mov (bad) mov jl sub and jne mov inc xchg fnstsw into pop divb les jge pop out sub xor inc mov sub cmp xor add out scas hlt ret ret test notl fcompp mov lods (bad) xlat sbb popf cli mov and sub sbb or push or sub scas test in mov xor lret int outsb movsl push or rol xor fsub and fisttpl sahf xchg jmp sbb push mov dec lret dec dec mov jmp mov and push mov jns xchg push scas fnsave shll add jecxz push push repz jno (bad) fpatan add xchg sahf iret aaa ret mov sub clc xchg cmc mov lret xor rcrb mov lahf leave sub sub test add mov sarl or loop sub enter pop sub or jb pop rol (bad) out ljmp mov mov push mov repnz inc leave mov xchg stc adc xlat shrb jns dec cmp xor mov in mov pop sub inc xchg (bad) or sbb les push or mov sub (bad) outsb test (bad) sub js ret (bad) decb aam in (bad) cmp push or popa pop sub testl call add test clc out popa call pusha add cmp sub and sub out (bad) xchg xorl mov mov and test add clc sub dec push jle xchg fstl mov mov sbb add sub (bad) or dec mov push js sub lahf xor movsl cltd jg dec xchg lds outsb mov fidiv push mov je mov in lret mov jae push or das mov and aad imul lds fwait ret xchg fldcw push arpl stos adc scas int das mov jmp or mov sub pop cmp inc into out lret mov incb lahf xchg cli gs add mov fistp mov mov and sub mov popf jge mov mov xchg sub sbb sub pop fisubr sbb lods dec call mov std icebp ljmp push movsb ret pop rol out scas xor mov adc xchg mov (bad) pop mov sbb xchg or scas sub fsubrp jno xor cmp pop add in cmp pop pop lcall pop mov push pop and mov xor adc outsl scas mov and jl mov and outsb scas cld dec shr clc add dec jp leave xchg lods sub and jge (bad) xor ja xchg lds sti out jns icebp adc cwtl push push fisub ss lret sbb mov add loop xchg lods add popw cmp pushf stos ljmpw xchg dec mov cld and call mov insl sub int3 mov push das lds js push cwtl (bad) mov jns pop or call xor stc add clc adc cmpsl pop xor mov hlt mov pop loop das and sub mov dec call sti cmp cmp mov xchg fdivl js dec ror dec add leave mov xor or xor mov lock lock fidivl ljmp push lcall stc xchg cli add sub sub sub sub int jbe cli dec mov adc cmp and mov sub cmp sti xor mov pop mov mov ja sbb movsl push pop jnp out (bad) mov xor jmp aam sti xchg adc popl lret (bad) xchg (bad) cmp div inc fistp lahf sti adcl int3 iret repnz inc sahf mov push data16 das and pop dec mov imul xchg clc dec push sub popa cmp nop mov add push pushf fistp pop dec out pop lcall pushf pop inc imul ret xlat mov jmp mov or (bad) out out lods mul mov inc sub cmp stc inc push push add mov aad inc push fimul inc and (bad) mov push and mov out fwait insb pop adc sbb movsb scas call add push xor aad jg mov leave in and push inc jo add movsb and sbbb repnz fdivrp xchg sub pop jno lods loope mov pop or xor mov jb (bad) lods sub mov mov stc (bad) out inc push movsl add mov add outsl fadds mov insl int3 cmp mov cli pop mov rclb imul xlat adc mov loop push into xchg xor or sub sbb or pop sbb jb dec and pop out mov imulb outsb neg inc aam hlt sub xchg cmp jmp in inc and push pop lock push jmp scas dec or xor testb insl sub insl mov push data16 fnstenv jno pop call lods stos test mov mov dec dec je inc mov jo or sub fisttp push out inc mov xchg mov xchg mov adc inc aam adc ss daa sub repz xchg fwait sub xor xchg mov push sbb sarl cli popf xor mov mov sbb movsb cmpl xor jecxz fstp inc aaa jmp and add push mov repnz jnp push jle imul pushf movsb adc dec daa dec and fisub bound enter pop jmp les ret xlat stos (bad) enter push in xchg add cli call cmp xor daa xor mov mov aas lds stos xchg (bad) (bad) sub daa call pop leave xchg lret lret add cmp inc lahf inc (bad) je in mov sub and or push mov xchg (bad) idivl outsb clc pusha out push mov adc scas std das (bad) xor sub xchg rol jo inc stc (bad) pop cmpsl fcmovnbe mov sbb mov push mov rorl pop mov push inc xor pop or pushl mov call cli jo xchg xchg xchg push add iret xor movsb movsb leave push fmull pushf push mov movsl rcl (bad) mov std inc push jnp das jl lock fdivrl push ljmp pop fadds dec pop push sbb xor in push xor sub movsl add jg or stos xor das fidivrl scas xor lods sahf and (bad) add iret mov cld test ret jle fcmovbe adc mov shll push std mov out or out xchg jno stc (bad) jnp shll fs int3 push ret popf jge insb push cld aad dec stos mov push stos adc outsb pop or out jg (bad) xchg mov incl and inc dec dec pop jge popf sub cltd les jge or pop xchg mov cli out and jmp cmp (bad) shlb rcl xlat add push push jne dec fsubrs sbb mov pop mov repz ret sub adc stos fnstsw sub ja mov mov and out add mov mov sub lea jmp dec sbb out push mov popa mov jg sbb aaa sub mov into or aaa ljmp and cmpsb outsl sub ja jb jle xor fstps insb xchg fisttp lods push cmp xchg cmp lret and add fldcw cmp leave mov lods fldl xor pop in test data16 dec jmp xchg sub xor pop dec scas imul push pop push xor pusha and or inc sbb push lea loope (bad) movzbl cmc mov test ret xchg or mov daa ss dec icebp lahf outsl sub xor sbb testl jmp cli push (bad) jae std cltd movsb ljmp sub fsubs pop xchg inc mov inc fist loope push mov imul (bad) cmpsb iret mov push fsubs and or jp pop mov sbb ror mov cld (bad) add fisubrl clc xlat push fs xlat jge gs lods pop shr xor push daa push pop push add popf push push add inc mov shll add xlat in mov and add pop pop in mov adc pop mov and sub les sbb mov adc mov add or pop add das pop dec push mov and push das pop inc pusha add or not mov repnz (bad) rorb push add pop ljmp jb and sub out mov xor xor insl inc iret xchg std insl sbb loop pop inc or xor push or jp pop jns add xchg inc adc add add fstpt add dec and ret and cmp sub aam cmpb xor adc sub add shll pop inc jge je rorb dec push xor js sbb into pop gs xor sar dec pop cmc push add jmp jb repnz dec rclb ficoml nop push mov nop mov push iret xor cmpsb cmc fsubrl push cmpsb add addr16 das pop popf dec icebp into mov shll loope movsl out fsubr iret popf push jge pop rcl xchg repz jns or clc sub mov (bad) mov popf rolb mov pop push add shr add xor loope jg lret stc xchg icebp mov loope repz les je or gs dec pop hlt ds repz out ja pop sub and pop stc leave and xchg cltd xchg adc add aaa jnp (bad) mov cmp cmp mov pop mov xlat stos mov xlat jle xchg movsl lea or jge sahf cmpsl loop jbe push pop cmp add push stos (bad) mov call or mulb (bad) mov pop mov ret inc repnz push (bad) push (bad) xor lahf xchg cmpsb mov mov call and inc movsl repz jp call and sub cmp bound call (bad) notb jmp (bad) pop mov jle insb outsl out sub or mov dec pop xchg sub repz dec lret arpl add aam push add mov aaa sub setge nop cmpsb add lahf push xchg sbb rorl push adc and push and fldt dec push inc inc iret xor fmuls repnz cwtl add xor rorl mov mov loope gs negl mov dec dec gs or xor mov insl arpl xchg jecxz shlb int insl mov lahf and lret adc movl dec lret pop movsb and xor call (bad) sub push or pop rcrl lea jg or pop lret jns sub lock sub imul icebp addl jg int js sub push leave jge add bound inc sub add sub and mov cmp cmp dec fmuls addr16 pushf test mov jb jbe jge stc stos je decb add sbb mov sarl or add pop push (bad) ja sbbb xorb pop pop (bad) shl and push or mov add pop xor xor test push push pop lea mov dec mov and push push mov outsl imul mov sub pop les in pop jl jle push push mov mov stos and (bad) push push pop pop xor jmp scas int3 adc lock pop pop pop mov sbb mov insb mov mov out mov repz ret fnstcw divl pop add push xor aaa data16 adc jmp pop out jns out in or sub adc add or pop push fnsave mov xchg jle pop test lock xlat pop cltd inc int xor outsb rep daa pop jne pushf rorl sub les (bad) mov adc or pop stos imul outsb and push push mov inc in inc pushf inc dec jg nop es and clc mov xor les cld scas mov xor js pop mov jg es fdivrl push je stos mov in push or pushf int3 adcl push push popf aas pop mov ret pop mov ret test mov cli sub int3 jle inc pushf xchg scas mov cmpsl out lds mov nop movsl and mov push sbb inc jb push icebp lsl aas jne (bad) fstps repz jmp push leave inc xor ljmp dec jae out (bad) leave jg sub and cmpsb adc sti movsl jle leave jns wbinvd rol sub in xchg jp fidiv (bad) mov faddl into sbb test add mov xchg ret fsubrp pop pop pop ret push leave jge and int3 dec push mov and mov jb mov adc mov je sub jne imul mov (bad) push fbstp xor dec mov mov push hlt clc jmp add iret mov jecxz cli xor mov orb out dec pop and add popf in sar xchg inc or popf jle das push adc xor mov loopne adc addr16 adc test adc aas mov mov mulb es sbbl mov or cs sub add xchg sub in jle fyl2xp1 push xchg scas test sub sbb imull dec in push push mov sbb pop ljmp xchg insb insl stos dec loopne cli mov inc cmpsl or call jle xlat xchg sti je cld xchg pop sub adc rorb subl add add imul sub ror lods xor ret loop lret ret cmpsb dec idivl push test add adc mov ret aad fmuls test ret scas pop test addps inc jl mov jg mov stos sub push jno inc rclb clc cmpsb xchg std mov aad push sahf ret sahf push rclb mov jge pop xchg into incl and and pop pop ret and dec inc popa mov pop or xchg add pop jno mov mov in (bad) sub ss pop adc dec mov in adc adc inc sub add mov mov xchg adc (bad) adc enter outsl jmp mov or add cmp cmp mov xchg mov dec roll fsubrl cmp (bad) mov add sbb add cld (bad) mov outsl mov (bad) leave xchg mov jno jnp pop sbb dec mov xor and movsb mov out aad sti mov and pop lock fs repz adc adc rcr mov fisub leave jo add mov jle fdivs rorb and and mov mov lods ret out mov adc mov mov dec ret mull addr16 aam in push leave inc xchg fldl add sub loope lret movsl pop stc jle sbb stc mov int outsl or adc xchg clc adc adc add mov pushf mov and ja jecxz and shlb push mov and testb mov cs adc notb ficom mov shr es dec out cltd out (bad) push notb jo fisttp sub pop clc or hlt jno cmpsb xor loop mov aas popa adc movzwl xchg aam outsl jle call jns pop out jnp test cmpsl lret pop and repnz (bad) or sahf xchg loope subb movsl and les sub shlb cmp cmp mov mov sbb out mov popa repz cmp iret mov cli idiv dec repz xchg int3 add sbbb adc jae negl (bad) inc cwtl push xor out jne inc imul pop jo or or jle (bad) fsubrp bound shlb cltd add and (bad) lahf (bad) shrb sbb in mov dec add push sbb push dec mov imul sbb mov lods mov rolb lret jne ja push cltd inc mov decl xchg xor push cmp mov mov (bad) out or sti sub (bad) or out cmp fsubrs mov sahf push push icebp stc or mov iret popf jl ret pop xchg adc cld and cwtl pop fnstcw and (bad) pop das xor loop out mov cmpsl loopne add iret scas mov and jle add test ret daa loop in and mov cld fbstp mov jne mov adc jl push or lock rorl loope (bad) cld icebp and (bad) mov mov cltd cmp js lcall adc and or iret sub ja sub mov and xchg push inc bound fnstenv xor popa pop add jge test jne and fucomi scas rcrl lods pop or (bad) push sbb cltd push ret mov jmp rcll xor loop push int3 push jecxz lods add push fsubrs loop dec pop mov and xor or popf sbb sarl sub aaa insb test scas repz dec mov into sahf jnp dec movsb mov and jg jbe test (bad) cwtl sbb imulb popf adc and xchg negl cmp inc out push adc pop mov dec (bad) dec scas lret mov jp jl mov shr push push out sub or dec movzbl jge mov add add push out je mov aas mov push push lret adc popf imulb xlat jmp cmp mov lret pop inc inc sub ret (bad) movsl adc adc std popa (bad) cli jge xor js or andl dec and popa lret push jns mov out shlb mov repnz jl daa pop into pop aas jmp jl (bad) out mov sub sbbl or (bad) pop add inc xchg sbb cli cltd adcl and cmp subb (bad) jmp call xchg add pop adc js enter push jbe call jp or hlt call into cld or leave mov pop jnp jle lock pusha std out das pop mov adc sbb jmp dec pop popf pop cmpsb and iret jp pop dec repz mov popa lcall jg divl (bad) jecxz pop cld das adc cmpsl data16 xor mov xchg lcall bound jl push inc pop cmc (bad) call aas repnz and fistpl daa (bad) aam mov fs mov lahf jb xchg jo xchg cmp lods mov dec jno rorl xor stc xlat xchg inc cltd jmp add insb push lock mov outsl mov sub lret lret ret lahf sti fisttp (bad) or sub test (bad) pop push cld inc cs adc sub cmpsb nop lods dec mov lods popf movsb push cmp dec divb fldt inc jp mov out pop ret inc popa ds lock adc les aas imul pop adc mov orl push pop pop mov cmp inc sub das or icebp scas mov std into pshufw scas (bad) xor add iret jle les test jmp aad dec dec movsl and in rep imul (bad) cld mov sub sub movsl xlat sub sub inc pop stos sti pop adc mov aam stos test mov mov jo add xchg lds xor lret loope dec adc pop icebp stc and pop dec pop repnz or xlat jns dec adc push outsl pushf push mov ja sub scas dec inc or lahf ficom or dec dec sub mov sbb sahf mov mov cmp pop xchg xor ds bound mov stc stos xchg cmp mov aad cld cmp mov and cli repz pop jne or sub dec jb stos hlt rcrl xchg add mov ja xlat sbb sbb out test sbb jmp and pop subb cmc or fwait jl repz sub mov jbe push hlt lods xchg leave mov pop jo pop call ret pop out cmpsl sarb xchg or and add mov rolb and adc xor cwtl out mov sub daa mov jle push jns inc (bad) push scas das icebp or cmpsb mov (bad) lahf fimull and cltd inc or pop clc mov sub clc cld sub and fistp neg out es mov popf push cmp loop pop inc dec cmp daa into je int3 loopne add jno jle mov leave xlat pushf add pop cmp gs push adc pop jbe jb jbe bound lods and (bad) div dec and out mov xchg xor push xchg xchg mov add cmp decb test jg (bad) daa rep xchg mov pop dec lods sbb flds js lock imul scas lret inc sbb test sub pop sub add mov rcrb dec repz das fistp shrl mov les mov sub fsubrp (bad) (bad) xchg lret imul daa fs pop dec or xor jmp inc loope or inc sub xor cmc into mov bound divb dec (bad) fcoms cmpsw dec dec lods adc out jge inc dec add xor fisubr popf xchg sti mov and lock mov adc add das jge xchg mov test daa jecxz adc fwait adc cmpsl ret insb push js mov push pop gs pop xchg in mov mov mov call test stc fsubrl icebp or imul jge movsb mov and cmp pop ret or cld push clc cmp gs out out pop mov sub stos int3 test fwait pop lcall add xchg mov dec mov cltd ja pushf daa adc pop leave mov lret mov mov imul dec gs mov mov add bound lds (bad) std clc pop jae mov cmp js and inc mov sub inc adc cmpsl fbstp into sub out mov cmp dec xor push cmc adc sti mov sub sub cs and inc push aad jnp mov repnz lret mov xor sub testb and mov xchg push jmp inc in mov das pop sub cld and xor push arpl ret into dec xlat xor sarl mov cmp cmc outsl lret mov xchg and push les aam push pop in push dec arpl neg leave ds adc in push xchg inc sbb aas mov sub and pop cmp fs and scas mov add movzbl mov cmp xchg mov fisttp xchg dec nop push jmp add imul scas lret jne push ret dec cmp xor xchg mov insl clc and cld data16 or xor ljmp lret mov sub stos test push lods sbb push and sbb ret xor clc (bad) rorb lea cmp movsb stos sub cs mov push push int3 shrl add je push adc jns (bad) test xlat mov push cltd dec mull add hlt pop adc push in xor ret loope pop ljmp cmp and inc mov mov testl xorb mov (bad) imulb pushf shrl notb dec out and lret dec xchg idivl mov notl outsl mov pop push aam addr16 mulb pushl mov mov dec call cs fldenv push jp not js mov sub mov push hlt (bad) gs xor popf daa sbb mov mov stc (bad) es dec adc jg fisubl rcrb call in mov fs and (bad) dec in sub lea adc xor cmc mov inc je loope fstpt imul pop ljmp cmp pop ret xor pop sub lea dec cld adc movsb sti mov dec push and mov add fwait or repnz mov std punpcklwd adc stos mul repnz mov add mov cmp mov inc mov in cmp mov fldcw inc and ficom add and mov leave fnstcw lock negl sti lods cmpsl cli xor xchg imul push mov cmc cmp lcall mov sub push add or fildll inc sub push flds lods imul fdiv sahf fcoms aas into push add out in ds ret xor ja inc pop xchg andb into in mov xor xor stc sub (bad) xor std cs or scas cmp lea cmp inc sub dec fidiv ret lods sub or mov cli cmpsl xchg pop or cltd icebp cmc (bad) sub pop mov push (bad) sub sar fsts mulb pop xlat mov lahf pop scas jb loop (bad) rorl das xchg sub mov ret test and jne fbstp jae out mov xchg or xor xchg xchg leave jge daa call lock add inc out outsl xor dec sub push enter cmpsb out pop mov sbb fistp icebp jnp idiv f2xm1 aas mov xchg mov (bad) push bound push fnop adc mov push or or clc adc testl (bad) fldcw fcom mul rclb jle add stos cmp loope int3 pushf popf int xchg sub push icebp push sbb pop sub mov loopne jmp loope xor dec leave std mov (bad) add xchg xor xor stos dec mov (bad) (bad) sub sbb mov out mov pop add lods inc sub iret pop jp loope push adc jecxz iret mov mov cmp sub pop movsb stos insl mov inc mov mov jmp fs ror jnp mov mov (bad) js dec mov out lds fstl repz sbb fisttpl lods aas mov repnz lods cmpsl inc cli shrl xlat mov pop mov lret mov out jmp sub dec xor out cmp nop push lahf stc xchg (bad) ljmp and pop dec mov dec sti les (bad) decb (bad) sub and mov faddp sarl pop ss pop push mov inc les jmp out cmp pop in mov out mov mov pop or adc cli cmp leave in (bad) pop in cmp movsl (bad) sti insb mov sub stos mov in push sub mov jo in xor (bad) sub mov lods pop dec cmpsb ret cltd push fildll mov and cmp leave jb mov ret xor xor in popa push pop sbb or mov gs cltd dec ss mov and push adcl out sub mov dec stc outsl mov dec sub arpl mov cltd mov in add ljmp sti or jmp xchg dec (bad) lods mov fbld xchg icebp out adc or lea fistp add or and jbe js into (bad) adc pop adc adc xchg movb pop jno (bad) jo pop sub aam dec mov or jmp frstor add sub add jnp subb out bound xlat insb ret inc xor add xchg jge in ss shlb leave mov test xor test sub rcrb and rorb pop mov fnstcw add add idivb pop gs cli push cld add add popf fcmovnb adc vmovlps and nop adc push cmp sti das call out mov popa jg add pusha xor sub sub repz pop mov test inc cmpsb pop or cs mov je out sti xor jns aam daa pop inc cltd and daa jne cmp stos adc int3 scas or test popf jnp and gs and aas divl mov and nop xor pop and ret pusha xchg jmp sub lret pop pop dec mov mov in imul pop xchg fistl sub mov adc adc popf fmull inc xor (bad) ljmp pushl xchg hlt jp rcrb cltd add lock movsb xchg ss jno xchg lcall pop pop (bad) lret mov sti adc mov testl (bad) mov daa jge stos dec ss test xchg out movsb push mov dec in pop test (bad) push neg sbb lahf xchg xor and daa xor pop adc adc gs ljmp test push mov ljmp decl mov jg insb les mov (bad) repz sub dec call popf ret jne lds adc lret pop adc sub pop mov int sub push repz negb and inc mov pop mov xor mov (bad) pop int stc mov out das add (bad) xor lds repz out sub inc nop popf push sub push mov xchg pop adc jg lea mov add lea ljmp ljmp sub xchg fldenv test imull adc push cld or dec inc mov ljmp mov iret sub jp sub pop and xchg lret jb imul mov sbb lcall dec adc pop cld lcall inc sbb or popf stos push lea dec icebp mov pop fisubr sub in in pop xchg outsl jns jne cmp stos imull lret push xchg jmp fistpll shrl pop cltd test ds sbb in (bad) fldcw in out pop test inc sub sub pop vunpcklps or sti jecxz js into jmp push pushf mov xchg js pop sbb int3 outsb lods jecxz mov (bad) loopne mulb sub lcall cld stos popf add mov pop (bad) mov dec imul xchg scas mov imul jo mov mov sub lahf dec dec xchg lret jnp movsl pop mov mov pusha std cmp shrl test out neg dec jmp rclb std jbe mov mov inc xor in push add mov sub mov jns xchg push sub add test mov mov jmp and adc inc dec lahf pop dec cwtl mov aas mov sbb mov pop xor stos fstl (bad) jne fstpl mov jmp add pop (bad) sub test mov jb add sbb mov repz leave call or jg stos xchg shr dec mov test fstpl (bad) ret loop stc lock (bad) xor rcll fnsave and scas into mov mov rorl test out pop idivl jns (bad) mov push jp shll enter aad icebp push (bad) dec sub icebp fildll or xchg out mov adc xor xchg dec lret dec and dec ljmp sub mov ljmp das mov and sub mov lods mov clc cwtl add cmc xchg add imul ss and push data16 pop mov pop insb adc fld imul in pop cs cwtl mov or (bad) jne inc jne sahf add jne das xor xor xchg fildll cmp inc mov les push mov into jnp daa push popa pop mov es xor pop cmpsl in dec cld fmul out xor hlt aas cmpsl mov sarl fldl roll es sbb and ret xchg or jb mov mov pop mov (bad) scas xor push jmp in jo lahf lcall inc repnz fistp mov pop lret jp cwtl push and adc sti mov xor shrl jge fstpt cmp push divl mov loopne fnstcw popa or push or jb and mov fsubl or add jecxz and sarl outsb (bad) xchg push repz cmp mov dec jecxz pop int3 and jg push sub cmp sub xor (bad) xchg adc cs mov mov dec xchg dec test sub js mov ja xor dec (bad) jo add popa fsubrp cli mov jge les fldenv add shrl movsl ljmp or cmc lds mov mov mov das sub fwait scas in mov inc out jg outsl sti in sbb sub sub sti sub pushw or pop add xor jl in xchg push adc xlat fwait sti mov dec out clc in mov test idivl xor stos push lret jns daa mov cltd jns push dec mov push bound in aas mov push and add jne loopne push jecxz xchg xor loop hlt icebp push inc sub iret lahf dec sub fcomps xchg xor sbbb xlat and (bad) mov out mov clc add push ds rolb mov pop clc iret adc jno in xchg and or icebp cmp jbe push fsts test lods or stc jp ja mov or jo into adc xlat jmp fiadd mov adc lock xor into mov pop in or sbb mov jle adc sbb lock push jns and popa scas mov insb mov or inc mov clc push je xchg insb sub and outsb enter pushf inc push cld aas hlt push jmp push jmp cmpsb repz adc rclb mov mov notl (bad) aad bound mov xlat ret and cli int3 add insl xchg jl sub dec daa and push lret stc cwtl jmp movsl stos lea dec adc mov cli stos icebp mov jg lret pop mov ss pop out ret mov fwait adc mov mov popa xchg fildl push icebp fdivrs orb es add sub dec in mov repz or neg jnp aaa icebp icebp repz rcl mov cmp stos push rclb call cli cli xor stos imul add mov ret dec push sub (bad) dec push aad or push push pop das leave pop lcall sub inc (bad) dec and add mov dec daa sub mov loop xchg sti or rcrl mov lcall mov icebp aaa mov in lcall push call ror ss or mov dec and add cmp adc sti int and sbb sub sub jmp rcll add (bad) shrb push pop xor (bad) xor jmp repnz xchg jle out jp out adc repnz ret or pop daa jne mov adc xchg jle push jl pop jmp dec (bad) insb jo aam movsb jne std inc add mov in scas (bad) (bad) in cmp cmp lret mov and inc scas das pop cmpsb push push and gs stos cwtl xchg sub int3 pop add xor mov push inc mov std xor xor clc rolb frstor mov xchg ficoml mov cltd bound pop mov jl jmp data16 dec xchg jp cmp push and mov mov sub xchg mov stos cmp sti adc dec xchg mov sbb iret adc repz inc lret add scas mov cli mov ljmp rorl and mov inc or iret mov sub daa add jae adc shrl addr16 pop leave cld mov jg movsb sarl sarb or and mov cmp fild mov mov and ficompl fist loope cltd fisubrl addl fxch ds lret (bad) push adc push lcall xchg icebp out mov stos je mov cs lret rorl pop test mov stos fild inc lahf add jbe in test dec mov xor mov mov jmp incl leave fcmovnb jge add fwait adc lret ljmp jne cmp sub mov lret xchg inc das out aam pop mov push inc pop mul and repz xor and jp jmp pop (bad) lods call repz cmp rclb out lret cld jp mov push popa jmp xchg add sahf pop inc or xchg iret or jns addr16 pop rcrl pusha sub or pop and inc aaa add dec into stos fldl imul and mov rorb inc adc mov xchg fnsave push sub mov ds mov push mov push fsts and inc lret mov mov adc stc in and das jns nop xchg pop (bad) idivl sti cltd fisubr lods mov mov or (bad) cmc outsb pop add (bad) ds and inc imul punpckhwd mov lret mov add mov and loop jno outsb rclb sub je mov pop in sti mov mov dec das jae sarl sub leave dec pop add sbb rcrb jnp in lret and (bad) ja lcall push push out sub mov cmp cmp sbbb std xor push xchg sbb fsubs sarl movsl jbe ror jecxz add pop mov or jnp insb xor pop push (bad) adc lcall and pop push inc das push adcl das fcomps scas outsb pop jmp ds out je and mov addl sbbl js mov ja cld dec ja or cmpsl and shr testl add std iret ds pop arpl push daa push jecxz leave in (bad) sub cmc jb jge mov cmp lret dec cmp add jo mov lds out or shlb idiv rolb negb dec iret mov pop push add inc shl or add jg mov xor add out dec not mov out daa xor dec (bad) fisub add pop sub pop fdiv mov outsb (bad) call jg test mov mov push sahf inc or movsb pop push mov std jns mov (bad) jne cs sub test lds mov xchg pusha cmp mov cmpsb cmpsl mov pop sub mov sbb cli push push or pop pop push xor add adc jo (bad) int or ret dec in cmp and fsts jnp inc test pop pop pop pop ror mov popa dec loop mov dec cli (bad) ljmp mov cmp aaa sti and gs sub pusha repz mov mov mov (bad) sbb test xor mov xchg stos leave pop cmp rcll xor std ljmp sub mov fildll cli in popf outsb dec add mov repnz fsubl cmp adc inc bound jg jnp lahf (bad) cmpsl jecxz hlt out push and mov sub push or iret daa clc insb sub jp jp xchg lret mov out inc out pop (bad) fcmove inc xor push fcomps dec scas loop test add dec test movsl sti int3 push add (bad) mov arpl repz mov ret pop data16 mov sub xor add xchg ja inc imul mov pop pop dec mov data16 adc sti mov mov xchg bound nop std xchg mov jb das (bad) icebp lcall jecxz inc jecxz sarb xor ljmp andb fs stos cltd push adc lret out ds lods inc cmpsb ljmp rorw add pop dec dec and cmc jp test pop mov cld push movsl sti jns cmp lret js sub in pop xchg hlt adc iret mov popf adc jbe or int3 dec fadds daa pop lds and sbb add es mov fcomip cmp std sub popa (bad) jmp sbb sti mov (bad) fs inc pop sub jl mov jmp jmp jle ljmp fs cli cmp (bad) test xor leave xlat mov xchg popf sub cmp es mov (bad) loopne push sbb mov lret test repnz xor jne inc xchg data16 mov std push push or aaa or inc dec mov fidiv flds stos lret push (bad) (bad) mov pop push mov fldl fadd mov (bad) jno lods mov movsb lds mov jns leave in lock push test scas fstp cmpsb movsb and cmp lret incl adc daa sub fimul pop clc repz inc dec jmp add repnz mov movsl xor scas shrb mov sbb xor aam js out loop xor sbb sub aad andl mov push fs jmp inc das notb movsl repz mov push xor pop clc adc lret imulb lret outsb add xor scas test xlat (bad) fistp pop cltd pop xor xchg jmp repnz mov mov sub sub mov or mov push imul or cmp and pop iret out adc into rorl sbb out mov jg mov add test adc out popf mov xor sbb lret (bad) jmp inc jp cmp xchg inc adc mov fistpll add (bad) mov jns ljmp mov in call (bad) out and loopne clc fmull ret xchg scas pop lods daa lret add dec mov sub fnstenv pop test jmp out mov pusha loope mulb and lock mov popf repz movsl shr lret jecxz mov xor bound adc addr16 dec jne xchg cmp scas rolb loop (bad) je repnz (bad) ss repnz pop mov pop mov ljmp and ljmp xchg inc repnz aad jnp loopne dec sub add sub pushf mov dec inc xchg dec sub and ficom int3 sbb stc add sub dec mov mov sbb or iret test enter sbb dec pop jne cli pop ja cmp and mov dec sub arpl mov cwtl das or and adc imul lret or jmp icebp sbb pop mov cwtl jmp lahf hlt xor aad insb dec leave daa lds pop mov push clc ficoml xor and xor aaa iret dec daa mov xchg add sub mov mov pop xor fnop add int jmp pop rcrl xlat sti ss sar popf lock sub mov sub fsubrp cmp jne cmc stos psubusw leave out mov out ja sub inc in ficomp mov xchg cli repnz mov repz mov or and adc pop cld hlt in test lret mov lds je cli aad popf pusha mov icebp in xor lahf std (bad) cmp cmp push sub sub jbe test mov and mov mov add push sub xor aad adc stos in lods cmp out addr16 mov scas lock cmp hlt aam dec pop in mov pop pop mov adc sub adc adc mov add xor ret mov mov xor nop fbld inc mov pop negb xchg xor (bad) das adc dec ljmp mov mov fld enter jns mov lock frstor ds sub add sbb sbb xchg dec int3 pop repz scas int3 cs mov xchg sbb fistp leave sbb lret sub test push jmp hlt mov push xor pushf call or insb sub and je (bad) dec jg jmp lret ret daa xchg cmp cmpsl in andb add cmpsl push cmpsb inc sarb andl sub sub imul popf stos fist mov stos sub xor out jns imul movsb sub iret jne xor mov pusha mov scas mov gs iret mov and and icebp and push pop and in xchg inc sbb pop das jno mov sub xchg pop icebp adc mov or sub sub lret push std pop data16 lods mov out inc or (bad) mov (bad) jmp ffree movb jb pop cmpsl es xchg leave dec jmp je or outsb rcrb xor ret push jmp loope into xlat repz add sub loopne ret cwtl xor xlat (bad) icebp lahf push mov push idivb ljmp data16 or mov clc dec mov daa fmull movb inc rorl and lcall cmp jns pop loop fist imul out adc add sub adc mov mov sub repz loop sub and sub cltd ja mov pop in cmp stc xor push sub icebp mov pop jns pusha xor jp dec insb xor out aad cmc push out lea loope jp loope mov dec test jnp or pop out jmp or movsb xor rorl sub jmp rorl add leave xor out pop es scas mov enter dec shll pop add mov mov daa and sub push and xorl scas xor mov cli mov lods das xchg jge std rcr (bad) loope mov stos out dec loop das divb rol (bad) cmp loopne sti pop stc gs pop enter dec bound nop aaa or cwtl sbb push stc int3 adc test leave loop cs in aas mov and mov cli (bad) (bad) imul adc into mov fs (bad) mov dec (bad) jl popf xchg cmp cmp test jne sub jne femms adc mov fwait dec loop rcrl add mov xor add adc inc loope int xor xchg mov dec fucomp sub negl leave add and push fwait push jge lock or je mov sub sub sub repz lret push (bad) xchg je pusha jmp push cld jo (bad) pop test (bad) ficom dec (bad) xor sub and mov lods mov js mov into leave pop inc mov cwtl xor mov and ret les push test mov shl sub add xchg xchg imul cli mov hlt sub loop xor negb dec iret int3 cmp push dec dec or jge mov push add lret icebp out dec jmp and test test sti leave adc in jnp out je sbb scas push pop mov push and shr adc fcmovnu xchg negb mov cmp inc and test lods fnsave aad or or pop xchg fs dec xor stc mov mov and sub xchg sub and dec mov mov insb insl test sub or aaa jecxz jmp repnz in lock ret (bad) xor leave pop xchg aaa mov sahf xor xor (bad) aaa repnz adc push and lcall aaa mov pop je ljmp dec push xchg push and add pop lret aaa movsb out pusha leave das or sbb cmc xor mov movl repnz push jle call iret jp jp sti mov (bad) jns dec (bad) loop nop in ljmp das loope clc push (bad) insl movsb ljmp (bad) mov in dec lds xor xchg cmp stos and mov xor xchg pop or pop push adcb sub cmpsb jl icebp fadds and sbb adc pop adc mov fistl mov mov out or mov or (bad) pop inc (bad) out pop and lds add dec push mov cli mov (bad) mov push jmp jg cmp notb jns mov test mov and lock mov aad lds sbb dec add (bad) outsl mov xchg xor xchg and mov ss int cmp and lret pushf or bound jne rep js lahf cmp fcmovb in or xor arpl mov cmc push insl inc lret out daa int3 (bad) mov repz pop and xor jle fs loopne (bad) clc rcll test nop loope pop sub ret jno inc cli mov es ljmp test lahf jbe das notl sub jmp pop mov xchg out adc xor icebp fucomip sub pop lret lahf xor cmp xchg leavew decl xor icebp and bound repnz sbb cld dec sar dec les sbb lods jmp sub lret ljmp loop jg jl inc jecxz imull mov jne pop or (bad) and or or lods fstl jmp mov mov (bad) pop sbb push dec jecxz out push dec push popf fildl jg dec jno pop xchg lods xchg orb setl mov and daa mov jo lahf stc das cmp outsb in in mov inc and pop mov cmp loop fcmovb pop sti pop mov pop test test addl std rorl adc jo rcr pop leave fs ss (bad) adc sbb pop lock movsl xchg jge out mov cwtl ds jmp je aam and and sbb sub add shr add add push pushf push fidiv jmp (bad) and sub pop pop es jmp pushf test cmpsl mov mov out add lret jbe pop (bad) lret sub cmp dec dec pop ljmp movsl negl pop cli int xchg inc xlat mov daa loop push gs mov fstl xor clc pop mov mov cmp xor push adc fdivs mov movsb fisubr (bad) cmp daa lock out jg stc cltd out loope inc add sbb stos xchg popf and into std mov or (bad) insb and adc pop xchg xchg xor in (bad) add add or mov mov xchg pop adc (bad) js sub (bad) inc and mov mov ljmp and dec imul jb jnp ss jnp add pushf sub aas loop mov pop insb sbb test ficoml mov add popf bound push dec sub out lret xor lea mov add out das jecxz inc (bad) or lahf pusha icebp xor add cli inc lahf mov lret push cmpsl pop or fs aas insl jno sub or xlat jbe xor mov andb stos pop add repnz dec dec (bad) test inc sub outsl outsl int3 andl mov mov mov lret ds scas dec (bad) repnz or push and sarl pop pop and cli adc and shrl dec (bad) scas lret rcrb mov cltd pop pop cs stos movsl mov sub xlat mov cmpsl jne cmp mov adc dec sub pop inc mov sarb loope sub iret dec and jns sub cmc sbb rcl mov pop into in mov es xor xor nop fucomip xchg jg mov mov out jg clc hlt xchg push or cltd dec xchg mov mov xchg scas std lcall or orl das jl sti mov ret inc je push das hlt push fistpll sbb mov inc mov ja (bad) movsl loopne and xchg cs outsb or cmpsb popf adc daa sub fdivrs out (bad) sub (bad) idiv inc fisubl lods xrelease into mov icebp lret fstl jnp jle je dec mov fidivr ja leave subl add shll mov mov (bad) aad pop xchg ret test mov pushl dec loop insb movsl das add (bad) xor cmp nop inc xchg es jecxz addr16 xchg cs jle stc add and push jmp dec add cli mov push lret inc push inc sub in test movzbl daa mov and stos inc xor and add bound dec ffree mov lods sbb or in daa inc fldl pop mov cmp mov fidivr lret bound loope adc ljmp jl push and dec mov mull pop sahf pop fdivr mov pop or stos insb adc mov test sub pop jle jmp repnz xchg repz add mov mov inc push adc push sub dec shll andb push mov subl or lds out mov sahf adc jmp dec sub or jg mov iret xchg pop imul pop xor pop ljmp imul inc mov sub push xor lock mov shr adc out (bad) loop,pn sar insb pop add xlat sub cli (bad) mov inc push inc pushf mov or aam or dec and jmp lret movsl loop adc ret and xor mov mov das out aad push js lahf sahf mov out mov lret jae syscall pushf fildl lock xor shr int3 cwtl and sbb xor sets jnp int xor jnp adc ror (bad) xor lahf fisub mov push arpl xor jp sub xor sub pop cmp jle lret stos lea frstor test sub loop dec fld popa les cli xlat mov and pop or leave pop pop jb pop mov fdivl jg adc jge jecxz push je push stc outsb xor jg push mov test fmuls daa sti mov cmpsl fs adc fistp adc frndint mov ret pop mov mov out pop push scas iret hlt inc push cmp (bad) or sub add mov dec in call xor pop mov std rclb pop jb mov call inc or cmc jns inc push cmpsl (bad) and fdivrl xchg fcoml fidivl mov aas push cmp pop into sti jae out in dec movsb fxtract xor xchg clc push mov mov xabort loop dec cmpsb and or dec and mov mov jl pop mov add mov inc cmpsb lds fidiv (bad) sub sub sahf xor scas lea das xlat cltd dec sar scas pop cmp (bad) out and jmp mov imul (bad) push (bad) repnz into add push adc add mov test in sub mov push loop cld sbb pop mov dec sub dec and repz jmpw add popa push cmp clc cmp into mov or mov stc jo out adc and push mov xor out jnp repz std pop call notb and jl lret rorl sub loop (bad) aad adc shl pop inc fstpl cmp mov fdivr daa push (bad) jae mov cmp sbb push cmc jae add and xor sub sahf scas sub add out add aaa dec jnp fisubr push mov push push sub cwtl pop mov subb inc sub pop dec inc lods xchg mov and adc call outsb roll imul movsl in xchg add out inc mov fildll mov adc and stos repz (bad) mov xlat cld stos dec sub insl inc leave lds out mov lret push or fwait mov cmp into je ret mov int and dec mov lahf loop jle outsl mov pusha das sub (bad) adc xor jmp adc out loop test into stos fcoms cltd in iret push lcall aam ret mov sub sub mov (bad) sub bound icebp lds push cmp or cs sbb pop mov jl sbb fsubrp cwtd outsb in std test cmpsb jne sub fs test inc lods adc add icebp push pop push cmp mov push xchg push push out or out imul cmp dec gs or das stos and test rcrb dec dec cld lods mov pushf das mov sbb testl (bad) sub lods ds cwtl rcr insb dec daa ret or and imul das out adc add (bad) repz dec test dec ret jne xchg xchg mov lock push imul mov pushf enter adc cltd enter sarb dec xor (bad) mov rorl mov sub push xor rorl or stc mov pop out pop xchg jge xchg cmp or jge mov daa or seta sbb cmp loopne pop xchg pusha push adc dec cli (bad) fsubrs add jmp movsl push add out lcall pop loope cwtl or pop add fsubl sti (bad) xor add addb jne ljmp repz xchg scas and and stc fsubs mov in mov push add pop pop aam fcmovnb mov xchg inc sub add ror add dec (bad) jmp es inc sub (bad) daa and push dec (bad) fwait inc xchg pop scas mov and jne mov pushf xchg jg les sbb std ss and in add out jle push xor lahf je push cmc in or adc jl pop (bad) loopne cmc xchg push inc pusha ret jle pop push dec leave out xchg stc call es jmp cmp (bad) mov pop test lods rorb out xor cmc mov or pop unpckhps cmp xchg adc data16 (bad) mov lods in push (bad) repz mov leave xlat mov push push ficomp cmp mov mov das push outsb mov cltd mov leave sub test aad clc jb out bound mov test lcall mov mov ds push test ljmp or or int3 leave dec mov aad jmp or push cmc leave (bad) fisttpll cld xchg loope sub ds repz lods mov sti jne push jns push das xor sub pop cmpsb ficoml xchg mov jge into mov (bad) cmp cmc out lahf jle push adc roll cld (bad) mov jl leave pop cs push cltd jmp sahf cltd movsl hlt rclb jnp adc xchg mov lds sub and mov into in dec ljmp add stos (bad) inc push lods cmp add xor (bad) icebp xchg sub mov mov adc in fwait in lea mov les cmp xchg push (bad) fucomip fsts movsl dec das pushf sbb xchg incb push or add xchg and mov pop add pop hlt or jno pop sub lock movsb xor mov shrl out xchg stos nop sub loope jb cld lahf lret loop adc in clc gs inc jecxz sub ljmp adc test mov lea mov pop imul out sbb sbb lods (bad) shrl retw cmc inc loope cltd sarl sti bound stc add sbb add mov push inc mov cli movsl mov pop lock (bad) cltd enter fsts scas int3 hlt pop sbb orb inc xor fs call loop (bad) adc repz test loop movsb sbb scas sub jmp and imul mov xchg popa cmc (bad) mov lahf push xor int mov pop stc scas (bad) iret inc jbe pop jne dec bound and add enter sub leave and sbb loope pop call outsb cmpsl jecxz mov gs fmul repnz push mov mov je leave add add stos lods sbb test (bad) in xor repz and insb roll xor add test mov xchg sub mov gs scas mov xor arpl es adc push aaa jmp mov and bound jmp in nop pop mov sahf ss (bad) mov lret xchg inc jge cmpsl dec sbb push das je in lods dec in js xor testl mov jo daa sub pop into bound dec (bad) idivb (bad) jbe pop lahf adc sub or aam xchg jecxz lret mov ljmp call pop test (bad) cld mov outsl sub into push jg jne add push pop icebp and out xchg fnstenv jp mov outsb sub sub jg popf std pushf inc lahf pop sbb loopne enter mov add jmp loopne ret js (bad) mov dec xor das adc jecxz test pop loop dec mov loop shlb xchg inc xchg aaa cmp fistpl and cwtl dec outsb popa sub jmp push adc mov inc xor jle xchg jno xor rolb mov add int3 gs pop mov cmp dec jmp jae add mov (bad) mov popa xchg pop cmp outsl (bad) fs adc enter jle push int3 scas nop sbb fidivl mov idivb fdivs or ret icebp and fcomps cli dec inc mov mov imul imul dec jb mov fs jmp push pop mov jbe or inc pop push push and xor rcrl dec sbb or or pop sub mov dec inc lock mov stos cmp (bad) push push and in in mov stos and pop dec xchg adc cli mov leave repnz stc in xchg aas sbbl rorb or repz push sub and inc movsl jns add ficompl clc xor mov scas faddp ret jne add inc scas or dec (bad) jmp imul andl out test les sub sti cwtl sbb jecxz in dec mov jmp jmp cmp xchg stc fsubrs (bad) xor mov mov das js shrl mov or and fxch sub dec sub mov lds cmp mov push jle (bad) jecxz pop adc dec fisttpll nop add cli mov inc cmpl sbb out mov pop pop sbb push jl out dec xlat aad jle ret popa cmp add out dec pushl add out (bad) into push in fldcw fs test leave enter sub xor hlt je fidivr xor cmp inc jge movsb mov xchg pop pop leave push jns inc cs jecxz dec mov add rcl mov adc sub pop add pop bound aad sti movsl jle ret xlat mov ret mov icebp push test mov ljmp js clc mov xor daa xor fwait lock mov adc out xlat pop jo mov leave cli out xor push std xor or mov fldenv mov add int loope fcomps jmp (bad) fsubr outsl loope divb (bad) jg shr jbe imul cmp mov mov dec stos lea mov lret jae add cs push pop adc shll and push pop imul and dec idiv mov das adc lcall ficom pop aam mov mov dec push xchg sub push enter out imul push push xchg or ret and jns iret xchg out mov pop and clc push mov pop add fst mov cs loopne out push xorl repz repnz or inc sub into lods inc daa jecxz gs scas cld jno das push (bad) fstps sbb add push dec mov imull rcrl dec lock ljmp pushf cmpsb push mov and mov fisttp icebp call xor cwtl xor add mov sub stos adc adc mov or aam bound rcrl fsubrs xorb mov jno (bad) iret and or push jmp push and cmc shrl pop adc popf fnop popa call mov stc mov int3 sbb xchg mov sarl xor cld arpl fnstcw inc xor xchg test mov fsubr (bad) fidiv ja bound es ljmp fcmovu xor (bad) xlat or and addb cli mov mov negl sub fdivrl cld mov lret sub add adc outsl pop jle imul sarl test mov push pop pop pop (bad) mov push add xchg jmp mov (bad) push popa pop xor lods pop jno dec mov cmpsb inc test cltd and pop icebp push mov adc and pop dec mov in aad fstl movsl iret mov aad jle sbb negb xlat push add xchg dec pushf popf mov (bad) and mov and pop les dec lock mov in or fstpt inc push or shr pop cwtl and lock daa add mov pop pop fsubrp dec pop test dec dec sub test jo xchg lret repz sub pop in add sarb (bad) push int jnp insl cmp shl pop sarb scas stc daa repz stos xor in pop pop call mov cs je push in cmp xor scas repnz or ret pop js jae jl pop or js movsb push fldl2t scas fidiv sbb inc daa ret lods dec nop imul mov mov mov notb icebp pop outsl cmp push cmp cmp fisubrl jns imul and push push push inc dec xchg je mov mov imull xor push shrl in fistl popa imul mov aad movl pop das sar gs (bad) adc mov mov jbe pop das test pop xchg mov sub notb hlt pop jmp pop and xchg fisttp or out mov movsl and mov cmpsb add test movsl sub pop sub add es insb mov into leave xchg or (bad) cmp xchg xor shll pop aaa movsb mov mov dec ljmp fmuls pop orl push insb sub sbb pop enter pop adc aad pop mov mov mov and idivb cmp test mov ljmp xchg push xchg adc mov icebp lods enter xchg xchg xchg add push pushf dec inc push xchg es out int3 cltd and mov lret mov cmp fisub and push adc pushf add int3 mov (bad) pop and add sub (bad) rep push sub xor xor or inc sub ja,pn cli mov pop in push dec fnstenv jl (bad) (bad) repnz mov and sub mov testb push xorb push pop mov (bad) fildll xchg cltd test or add jne fscale outsb mov xor or sub sarl mov push jmp push or int3 pop lret sub mov ret aad push into adc xchg mov stos test (bad) dec nop mov jg push loope cmp cmc repz (bad) push lcall jo or mov add mov cmpsl inc nop pop jnp cmpsl fistpll std loop mov fidivl add (bad) mov (bad) xor jp cmpsl mov mov sub loop mov or and mov sti inc lds test sub push stc xchg xchg jmp insb mov fwait mov pushf lock scas dec out mov dec jb imul ffreep mov pop inc xchg loop ret lcall call sub gs sub cmp cmpsl sbb es test push cld xchg push inc mov mov xlat sub push or and (bad) pop fild lods lcall xor (bad) (bad) rcl xchg (bad) scas lret xchg call sub cltd adc out ficom adc mov sub test testb push leave inc sub movl sbb bound pop inc sbb push push hlt imul xor pop test sbb mov push xlat dec pusha mov adc cmp (bad) dec jmp push clc pop mov out ja cs lret out dec mov xchg mov and adc push pop sti add jecxz lret jle cmp repz cmp push cltd inc imulb lock lret xor sub jnp hlt xor out pop mov jo inc and and push jmp test mov idivl and sti insb nop movsl cld xchg movsl cld pop leave pop cmc mov and xorl aas test das cmpsb sbb movsl lods xor enter xchg sub jb das mov cmc xor lods jg jbe stos and or pop sub sub lods add adc test das cmp push testb jns pop xor inc xor sub insb xchg clc daa mov cmpb ret lcall std xchg in adc data16 mov out dec clc inc movsb stos lods lret xchg in out cmp je out daa sub ret in out fcoms stc dec pop pop sti and or or push (bad) jbe xchg xchg cld pop (bad) push loop pop jle push fdivrl mov pop and pushl xchg outsb clc popf insb repz mov std idivb jg mov test mov rorb cmp outsb popf bnd sub nop daa (bad) in sti in dec dec movsl adc ds addb sbb sub adc pop mov dec or or (bad) push addr16 and mov mov hlt popa into out flds xchg push and mov push in jne sub loope sahf test dec lock fmuls idivl xlat xor movsl cmp mov mov push test jecxz and or lcall jecxz xlat mov ljmp leave add loop jl jmp bnd mov jle fnsetpm(287 fdivs addr16 fs lods pop loop jns movsl cmp mov cmp popf stc xor adc mov pop std testl aam push xlat pop fsubrl or jno inc jmp cltd incl das mov stc mov and cmp sti insb das data16 das iret and or cmp sub sub xor cmp dec lods push cmpsl test mov negb dec mov push movb jl iret call xchg call pushf mov xlat repnz dec mov sar jp out cltd outsl pop cs sbb or fstpt sbb fldenv repz add popf lds movsl sar inc cmp pop and mov gs bnd mov dec (bad) xor leave mov in lret push lret mov xchg push outsl imul and cli jno and push pop cli repnz mov lock imul adc icebp jne mov lret (bad) mov (bad) dec xlat stc jnp shrl dec jnp rclb push scas enter les mov sub ret xor jne push adc int lods scas rcrl data16 aas lahf jle inc or xor out inc enter push ljmp mov xchg sbb divl in sub push mov arpl pop jmp das inc pop out jo xor sub int3 cmpsb or xlat add popf lcall sti sub out cld jmp inc mov cmp aam pusha cmc repnz imul dec add jmp sbb push adc push mov inc sub jne cltd add pop jg push add push mov das std pushf push pop sarb or ret or aaa push push (bad) jb mov jo test cmpsl push mov out test pop adcl xlat (bad) sbb subb rclb mov add pop dec faddl cs scas jmp cli mov mov adc ljmp pop dec not shr add push outsb pop jne or vmovhps jmp mov repz jge (bad) jg xorb mov add inc jge leave jo add sub sub push add ret push pop cs jge (bad) mov jg add (bad) sbb and sub not add xchg sub mov push push daa daa int icebp sub out add sub loop loopne call or std jg pop xor push mov divb and dec sub lcall push push pop fldcw into scas jne or pop hlt sbb lret jns adc mov jg or nop ss mov not and icebp scas xor das mov stc pop and pop lock ffreep iret push xor add in pop fisubl je push and and aas ficompl dec or inc ja cmc test in add pop add pop mov loop test (bad) sbb push into pop adc stos add pop adc xor jl xor inc pop pop jge xchg daa push in mov xor push rcll fiadd push mov push inc pop adc lret divb iret (bad) mov out in lods jge les mov clc ret cmpsb icebp (bad) xor sub in jecxz lret add js loop mov out mov mov pop push and (bad) clc push stc popa inc (bad) sbb pop or xchg das test repnz aaa xor xor aas notl cwtl mov xchg decl pop xor test mov je cli cld and in daa mov and divps xor not repnz mov ljmp inc and lahf pop stos (bad) cmp addr16 ja test mov jmp mov xlat jmp lds push sub pop lret das push mov add fisttp iret sub dec xlat pushf sub pop dec cld lret mov mov aaa fbld jmp cld mov sti int3 hlt xor and lahf adc sub and inc ret inc cwtl xchg push dec shll add lcall add repnz pusha pushl push cmp lret cmp outsl test ret test mov popf fninit cmpsl loop (bad) stc rorl push inc mov je gs jecxz adc pop sub jns xchg jg fsubl (bad) dec adc jno sub sarb add adc inc out pop mov outsb and mov lock xlat (bad) aaa sub pop or mov (bad) fnstsw lods or cmp jno add hlt icebp popa adc pusha imul inc sub divl enter les mov pop and int sub xchg outsb mov aaa gs mov jb cld mov dec lods push les not ror notl add mov rclb incl adc and int add outsb xor fldt adc jb int3 xchg divl test imulb sub nop mov (bad) mov or jg jae push negl call int3 pop and cmpsb pop stos ss mov xlat push fnstcw adcl and jno pop fstpt nop dec sub mov ljmp cmp cmp idivb mov ret cs pop imul jg fsubrs test jl jb gs pop ret sub mov aad inc push outsl mov je mov sub cmc std movsl push cmp xchg and sbb in lds les dec xchg or imul and (bad) jne and mov mov add cmp or fxch js jle dec fidiv dec outsb push cmp pop mov cmp data16 or fiadd (bad) std cld and sub loop incb jne or les popa mov scas push test popa inc out pop jp pop adc jmp movsl (bad) and shrb (bad) lock fsubs xchg loopne xchg cs sbb subl pop scas cmp dec loope and add mov lcall and cmp orl xchg fs mov and hlt xorb adc and push shrl push sbb mov ret out and pop sub dec mov mov inc or pop lret cmp sub repnz and jecxz push mov (bad) into xor or inc pop jne pop sbb sub movsb lds mov xor subb xchg lock mov shlb sub stc lods lds dec (bad) xchg jmp scas mov or add out dec xor mov leave sub loop jne mov scas idiv xchg or lods and xor or lods rcl or dec incb iret push ja add sub and popf mov (bad) outsl clc js adc sub hlt mov and sub xor loopne and dec mov sti xor xlat pop xrelease out add cld dec enter lret cmovs icebp bnd bound mov ds jnp sub pop imul out sub dec inc popf and adc dec push mov fldenv xchg loopne test loopne add mov mov xlat in jle mov push repnz cwtl sbb xchg pop movsb mov push mov loope push xor jge add jbe inc stc ljmp jecxz jl stc mov (bad) or push lret sub fidiv and (bad) xor cmp stc and mov scas sub add add jmp pop ds std jnp inc movzwl insb icebp mov fldl movsl ja jmp enter iret or or jno xchg icebp scas sub mov pop mov lock lret rcrl jo in sub sbb sub fadds pop push fs sti (bad) sbb aad (bad) cmp sub xor sub mov test mov push in cmp inc (bad) mul xor stos pop gs or popf adc call popf pop xor push add pop push mov push push and push mov les mov xchg pop cs jg pop add add stos inc cmc sub test (bad) aam xchg pusha call (bad) outsl pop (bad) xor stc fisttpl in jg xchg sub pop call (bad) mov int das lds add jg mov in mov clc push (bad) negb sbb push clc notl repz arpl clc fildll mov jno cmp sbb xlat adc out inc sub pop ret cltd fldln2 imull int adc loop pop in lcall mul fdivrl test mov std inc xor test mov xor push inc sub sub mov push sti jo cltd fsubr push jns sti fs mov int3 scas mov jmp out fnstenv ds sub mov xor inc sub inc and (bad) sti mov cs push dec scas aad cld pop repz scas push lahf add add adc add fisttpl clc push add jbe jmp out repnz pop push cmp hlt sti lahf mul jo push mov mov loop inc int3 or divb out jecxz es mov add shll arpl pop rorb jl dec xor std cmpsl jne jns lock cmp xchg leave and (bad) inc dec mov das mov (bad) (bad) xor std push mov (bad) outsb xor xlat xor test sub adc lock clc adc mov add lahf sub scas add icebp scas jb xchg or push xor scas call dec loop xchg mov es sarl imull fistpll inc xchg sub push dec hlt fmull dec out xor test lahf push sarl lods scas orl push lret add sub sub (bad) icebp add or dec push out xchg add sub jb test repnz dec ja pushf xchg xchg lcall dec call mov jg xor sbb adc xchg aaa lds out mov cmc push push mov sahf out pop std mov adc xchg or add jnp call shlb jmp pop inc and icebp sbb and (bad) movsl cmpsl xchg jmp or cmp movzwl pushf pop (bad) cmp lret out insb clc or ret gs imul mov mov inc ret xor mov and adc nop aaa inc jnp xor mov popf xchg repnz popf stos das call push lret pop ret das rcrl test (bad) mov cmc test (bad) or in xchg jae pop sbb jmp mov push inc lods inc (bad) add xchg mov pop mov shlb das push jl pop ljmp sub xor xchg mov or xor inc add pushl or sbb pushf (bad) push or bound sbb inc cs test add xor ljmp sub repnz cmpsl pop sub lahf xchg addr16 jge mov ret sub repz fildll in xchg sti or rorb out test xor xlat mov es mov pop lock mov push push fdivp shrb xor mov (bad) sti mov mov test fmull dec test stos push jecxz stos das push xchg call bound loopne sbb (bad) ja lock mov test add out or push out and rcll mov (bad) divb xor xor lock xor sub pop or add insb (bad) out mov jge mov jle ret aam or test jg mov (bad) sbb add mov ss (bad) imul xchg dec and out aam and xchg test or push mov mov pop cmp nop and push push dec cmpsl inc pop cld jle dec mov scas cmpsl jp test aam xor (bad) xor add cli je mov sti xor int xor leave lcall inc mov jmp rorl lock add jle jno pop or cmp loop xor clc mov push dec loop test and dec adc pop xchg inc pop (bad) int3 mov (bad) mov out lret xchg loope decb (bad) and hlt shrl dec sub sub xchg add adc or les lods xchg dec add cltd sbb jo mov insl push insb mov loop mov fnstsw movntps lret sub scas xchg imulb push dec sbb dec insl mov jg std mov int3 or stc or sub icebp cs mov aaa fdivrl pop ljmp mov xor pop xor enter (bad) gs mov pop cmc ret adc fdivp jb adc and add es jle pop adc stc mov adc push pop (bad) mov fdivp adc jmp loope repnz mov cs insl sti cmpsl ja sub push xchg sbb out fcoml mov jns xchg pop cli cs mov out pop mov ret out jge dec stc popf jmp sub or pop mov std push popf xchg cli cltd fwait cmp lahf or sub repnz xor dec mov add scas sub dec fsubrl dec jbe jmp out sbb xor out lock mov pusha sub add daa and xor jmp incl movl lret cld bound jecxz mov (bad) cltd test push dec fmull jge cli pop imul fdivrl sub insl imul fbstp xchg fcompl dec push outsb jb mov arpl jge mov sbb sahf inc in pop shl dec jmp ret xchg mov mov xor lods hlt jl in mov mov jp push xchg (bad) ja movzbl or inc pop pop int3 push mov lods push jno bound aaa (bad) and movsl xchg ret inc ljmp dec add mov or sbb ret and push (bad) sbb repz fimul and daa enter mov repz inc add int3 insb dec out jl icebp push adc inc pop hlt icebp mov dec cwtl imul xchg (bad) cli in mov (bad) stc xchg pop pushf mov comiss clc jne add ds out and and imul imulb sbb sbb outsb imul pop add lret add jnp das fdivrl addr16 (bad) and je xor or xlat dec add push pop ljmp (bad) pop push out cmpsb adc pop mov call cmc das clc test inc push xor je jp in jp mov (bad) stc and mov jg add cld cmp mov xchg mov xchg push xor pop sbb mov xor imul std inc call jb ja xorl cmpsb sub test add dec sub and mov inc imul cld jge jb sub lahf xchg or scas (bad) mov imul mov sub cs xchg or out push (bad) jb xor sub mov dec sub xchg dec dec dec and pop mov pushf or xor sti mov mov aad mov sbb addb mov sbb xlat cld and or sub fbstp pushf mov rcrl fstl mov out js mov mov cltd repnz xchg cmp popf mov cmpsb sti xorl das repnz xchg mov cltd out inc lods sarl ficompl mov js (bad) cmpsl enter outsb add ret data16 and lret loope push in jecxz adc sbb dec popa push (bad) jno dec enter das nop daa lock dec xchg std mov fist and test cmp aas cmpsl push pop mov daa aaa dec hlt cmc sub nop xor mov and outsb push lock adc mov mov adc xor aas hlt xchg ret fstps cmc in xchg pop imul fcomps sub (bad) dec loope sub pop fistl or mov jo jmp mov imul pop out repz aad inc add data16 pop xchg inc daa xchg (bad) cmp mov pop xchg xchg mov mov loop push sbb lahf jl pop rcrb add mov inc dec adc (bad) outsl shrl cmp push push mov jns les cmp imul add stos aaa ret aam inc dec mov test pop stos sub xor xchg cmc add sub push mov out push pop or xor sbb das adc mov sub push xchg inc ds jecxz loope sub mov add daa mov int std shrl xchg daa (bad) sbb (bad) mov (bad) push add test or mov inc aas subl popa mov cmp sahf arpl aad outsl jnp call add shrl pop and ret dec mov pop imulb shrb loope cmp push add mul mov insl push dec inc fs iret xchg jmp imul pushf mov pop push mov sub sub xchg jg loope jo sbb mov mov mov mov sti cmp insb or xchg add lods mov mov out sub icebp pop mov insb adc ret mov mov ds sbb sub xor enter aas leave inc pop sub dec ss jae imul pop mov mov clc cmpsb xor out loopne stos or scas and les xor sub push cmp ret jle fistl inc mov pop xchg fnstcw cmpsl sub jle gs cmpsl movsl ss lahf mov sti hlt push pop or imul jnp pop pop leave fldcw aas xor inc call push sub orb push add sbb xchg aas movsl shll lahf (bad) pop add sub (bad) lock or jns adc loop mov test and mov repz hlt (bad) adc mov lock mov mov or mov inc or and pop clc mov mov push outsl lret push mov lahf into popl and mov sub xchg jmp and scas and inc pop adc (bad) hlt mov leave out jge dec test sahf cmp sti pop test xchg mov call xchg xchg test data16 xor stos or dec add and jecxz fcmovnu mov (bad) and out mov test xchg pop roll mov clc pusha pop aaa cmpsb and lahf fdivs pushf fidivl scas mov stos je scas lret popf jge sub xor add sbb push inc dec cmc jo rcl mov sbb xor pop (bad) (bad) ljmp sub mov mov arpl xorb xor std cmp lods lret leave or xchg (bad) (bad) sub int3 sub hlt and lcall lcall fcomps xchg out xlat pop aad pop push jns repz and jle loope mov cmp aam jecxz adc cmp cmp lea ljmp (bad) dec ds daa out sbb lret (bad) not xchg pop out and xchg xor add ss mov clc cli sub mov ficoml (bad) (bad) iret add xchg dec js dec out stos into pop adc and xor enter xor (bad) mov (bad) cmp sbb (bad) cltd sbb push enter sub lods clts push int3 xor popa jle js push repnz ds orb adc mov dec out mov imul add stos push pop sbb je mov jo stos popf sahf mov dec decl mov and dec dec add push mov add aaa jecxz add neg push adc push lock push test pop int sti rcr pop push adc push mov scas jle (bad) mov push pop les push push pop enter mov stc rcll mov mov iret sub aas int3 xchg xor push and dec subps in inc (bad) aad mov adc jg xchg add pop rdtsc std adcl or inc or or incb ficoml lds push mov aas sub mov or inc xor mulb (bad) adc pushl leave into test icebp out mov insb mov pop pop cmpsb ret mov inc mov lods sbb push ljmp xchg incb nop push pop or (bad) pop push sub pop loope lret push or jle pop sub push xor jne ljmp fmul lret test or sub in pop aad inc aas decl stos rcrb mov push sub mov fnstenv or xor mov outsb cld or fyl2x dec jns lods jmp inc pop push (bad) lret aam das push cmp inc out mov jmp mov int cmp pushf leave push inc xorb bound rcrb notb das shrb pop ret test mov and jmp inc cli out jmp out bound jmp fsts pop add cmpsb mov ss pop lods sbb out repnz xchg mov jp cmp loop nop sub sbb cmp mov aas jnp mov nop and (bad) rorb mov add push and pushf xchg inc mov dec jp jg pop add and daa jmp add xor test mov shrb mov adc in dec sub cltd xchg and pop fidivl mov into and repnz xchg push cld bound ror pop outsb or and dec and gs or (bad) xor or mov and mov mov clc std or pop jb pop and adc or mov xchg mov mov sub outsb push fdivs cmpsl test dec mov dec cli add out xchg stos mov dec loop addb cmp in pushf je add pop mov aas loop push inc call call scas jp or mov icebp mov outsb cmp sub movsl popa ficoml or cs xor rclb test add pop xchg pop loope leave dec out xor test ror add fmuls xlat inc mov xor popf pop jle xchg in cld add lods mov jmp jmp cmp mov and jne fmulp mov lret and repnz test xchg cmpsl pop dec rolb es iret cs mov push pop mov and pop adc adc push dec xchg nop dec ja xchg test add cmc cli or pusha xchg pop inc push (bad) int3 pop add pop into xor notl add leave out mov jg mov popf (bad) adc cmp call stos pusha fs shr jecxz sub cmp aam push or mov jle or pop es xor cli lret fisttpll ret add sub pop (bad) and test mov jbe out push lods push nop sahf test addb mov and std sarl mov fbld xchg aad dec dec jecxz test add addr16 ja mov mov inc add xor inc (bad) ret mov pop xor sub mov loop lcall in and pop fsubrs jp lahf jae cmpsl jne sbb xor xor imul and fstl xor enter in cli into lret icebp cmpsb lods add or decl add mov leave (bad) stos cmp in and xlat pushl adc (bad) xchg leave inc ljmp je mov mov ja cmpsb hlt xchg out divb addl inc push stos mov lcall (bad) cs ss jae out inc dec or sub pop mov negl sub pop loop sub cmp das ljmp push mov imul pop fnstsw xor sahf mov (bad) cmpsb mov jle sub xor (bad) xor add xor lret roll sub std pop mov clc or mov push add mov and fsubrl mov rorl sub bound (bad) (bad) aad rorb lret dec sub mov jns sub sti jne out inc jne push dec shll inc mov add ja sbb and jl sti dec push mov mov add mov xlat xor mov fisttpl (bad) in or fidiv push or cwtl xor sar (bad) stc bound les (bad) out cmp sub pop pop popf adc in (bad) shr lret pop pop stc frstor xchg rolb (bad) imull push and out jne test xchg in cltd ja movsl loop push add and dec push sub fs xchg cmpsb lock and sub ljmp rolb pop xchg call das mov std lds out sub mov cmp dec push add enter xor add out jb mov loope or mov popf fldl idivl mov mov dec cmp lret and sbb dec fsubrs sub mov iret adc call pushf mov or pushf lahf in adc push sub mov push inc aaa push in jge pop and mov (bad) jnp xor sarl movsl pop add xchg (bad) push imul leave repnz lds mov shrb daa fimull insl xor stos sub push addb out fs push add imul test outsl lods cmp divl and jnp pop inc xor decb ret mov push repz xchg mov ss cld cmpsl imul and jb mov adc bound fiadd jecxz decl icebp pop cmp push mov push or cld idivl ss mov mov (bad) or enter push cmp (bad) cmpsl out mov or fcom (bad) xlat mov lret jno inc and dec int3 sub repnz rep cld fs std adc mov imul out sub lret out mov into or int3 mov xchg ss test sub loope jp mov popa adc inc ret inc sub pop lret xchg xchg cmp iret daa divl lods insb inc sbb push lock inc push or aaa (bad) mov out sbb sahf mov (bad) scas mov xchg movsb dec lea cmp mov cltd outsl push push outsl scas xchg pop scas loop (bad) in inc nop fcomps int3 dec stos lea cmpsl pop or sub std sbb sarl pusha lods lcall out xlat (bad) sahf pop pop sbb jno daa lds rorl jbe popa (bad) or add test mov and fsubrl mov sti cmpsl cmp mov push subb sub bound inc out repnz imul xor mov cmc dec sti lret daa pop xor clc or cmp mov sbb add jb ljmp lret nop sbb (bad) xchg sarl clc mov inc push add jae sbb xchg call add and sub je mov aaa sbb shlb dec test pop xchg out lret lods lret and xor aad movsl popf push insl ret int3 ficompl sub (bad) std pop cmc pop fldt call mov xlat fnstsw dec iret cld add stos lods and mov fwait out (bad) out mov out sub fist cmp or and pop lret cmp fidivrl mov or repnz mov push and movsl fsubl and outsl or push in cmp notb add pop shrl ficom sub (bad) jmp aad ss mov (bad) jecxz xchg test mov cmp shrb sbb jecxz dec pop xchg je adc pop sub sub pop sub xchg and mov sbb mov rol mov jle cmp decb inc pop (bad) fcomps mov inc cmp cmp mov dec jmp adc pop xchg push or mov xor sub cmpsl dec dec clc mov pop sbb push and xor cmp dec test fs cs dec pusha pop dec push xchg in mov icebp jle pushf and lods xchg bound add (bad) (bad) jns lret adc push pop add ljmp in out out movsb stos sub adc into pop (bad) jb rorb leave outsl pop mov add adc shlb xor xor stos mov sub xor cmpsb inc andl fsubl gs mov into dec fiadd test dec scas into int3 pop sbb adc stos mov push inc popf rcrl pop pushf pop push push jge fs (bad) pop sti push push ret jno and mov icebp cmp fucomp test mov out push lds (bad) pop mov sbb fadds das push mov xlat add pop mov mov mov test inc fs sub xchg mov or and test pop and push xor pop (bad) int3 sbb and bnd mov daa sub dec fabs nop xchg lds jmp push pop jecxz out stos repz repz adc mov pop mov pop cmp cltd mov sub cs dec mov ja push push jno sub adc out lds mov jb and or pop or add mov mov fs push jnp cmpsb mov push fcmovu and daa xchg sub and inc out mov sub stos in pushf rcll jmp dec xor test loope mov dec arpl repnz push je push dec inc sti cwtl gs in add pop cmp push (bad) jae decl cmp and out push mov mov jbe sbb rorl ja dec pop mov cld mov cs and push xor cs negl sub mov loope cmp jle frstor sub adc and lahf adc mov mov push popl sub mov lahf andb jg loope or jbe clc ret movsl in adc test dec pushf scas aad jmp idivb xchg ud2 xchg negb cli push mov jns stc add test idivl mov push lds jae imulb jns repz mov lods gs xchg and xlat clc mov repz adc ret mov or mov je mov or lock jmp jg loope inc aaa (bad) or mov mov push mov mov fstl sub and push and dec leave jmp ret (bad) push sub xchg ret xchg cmpsl mov cmpb jne jp xchg pop mov inc dec sti mov and mov cmp or movzbl clc sub call sbb ret xor and xor dec sub pop and sub pop xor lods ror inc xchg bnd insl movsb das adcl cmp push adc cli (bad) dec ror int dec bt mov stos xor out out mov jl js sbb cmp sub nop aad push test mov fdiv sub push stos popf mov adc or dec pop (bad) cmpsl (bad) jge adc lods or jne (bad) cld xchg pop (bad) popw xor pop add dec or mov or sub mov xlat xor xchg pop pop imul lds divb rclb pusha jae sbb xchg add (bad) sub fmulp and cmpsl adc testl andw add lret decb ror jnp stc test mov js mov imul xchg js rcrl cmp pushl or or xor sub jo xchg adc stc jp xor hlt add or int3 cmp dec cmpsl sbb mov xor pop (bad) adc cltd and xor (bad) pusha add push xor mov xchg xor mov bound jmp sti xor pop and lahf push cld lret loop jno imul lret test mov ljmp lret test and ljmp aaa mov cmpsb roll and lods add jl pop jbe inc or ret cmc add xor ljmp jo hlt push jmp ja or or sti jne out int3 cmp jp sahf fucomp xchg and (bad) mul clc lods sub in mov movsl lcall decl cltd test dec mov or ljmp das jl adc call or jge push dec scas leave or (bad) into (bad) fisub (bad) fwait xchg inc popf jge pop mov (bad) sub or mov fs shrl mov test add iret mov mov jae and add cld push loop rolb sub or xchg dec sub cltd fild lea push bound jne sbb add aam jns ret mov (bad) jle xchg and incl das and and fidiv sub dec rclb leave push jg xchg pop xchg fs ljmp mov push jns aam cs xor rcrl mov fucomi xchg push (bad) pusha mov and es xchg aam push dec mov out inc lret sbb jp mov loope lret sub ret adc popf repnz pop pop lret and mov stos cmp rorb pop dec ret push (bad) icebp (bad) sbb push movsl loopne (bad) movhps and (bad) aad sti dec jns pop repz lods sarl fidivr sbb pop daa cli dec adc cmp mov pop adc dec add (bad) mov das enter mov (bad) xchg lret add mov pop xchg test or mov pop adc ret ret out lock xchg jge (bad) add out xor dec lahf and xor sub mov sar and das enter jl bound rorb ljmp lcall mov mov test pop std loope mov add fidiv mull dec dec or mov lahf jb sbb add dec fldenv mov mov cs jmp shll adc mov add out cmp je mov xchg mov jne and mov xor test pop enter in jge pop icebp sti cmp or push add ljmp imul or negl dec ffree sbb (bad) mov xchg icebp cmpsb and mov dec push test pushf fdivs or loop arpl vcmppd cmp (bad) iret fstps and and (bad) aad inc xor ret ret sub xchg bound pushf mov jne (bad) frstor cmp test lahf ds lock into push (bad) mov data16 jp xchg jmp adc adc add test mov daa mov xlat outsb pop pop or icebp (bad) pop mov and cmp or mov push xor stos std nop lret daa pop inc cmp push imul xor jle sub xchg pop xor pop jle in sub mov sub loop mov and jmp icebp and daa pop mov ja push adc leave bound xlat (bad) jns clc out xor cli adc jb add and add mov pusha push add test js dec lret mov cmc mov je jb push add ljmp or aad adcb mov push jle and xor or fstpl test xchg pop xchg rcll sub push pop or cmpsl in (bad) es add nop add pop push in add xchg or or mov mov out add inc (bad) fstpl fildl add mov xchg (bad) mov pop fstpl cmp adc sub mov bound inc mov add push jae or sub push xor xor cmp (bad) pop adc pop mov xchg in popf rcll cmp cmp push lea inc jnp fdivrs fisttp xchg lock sbb divl xor mov push inc jp and push addr16 shl push ffree addr16 sub lcall mov leave shr mov mov das rcr imul mov lret mov or int3 mov pop add loope cs mov or daa ja and sti lret or hlt jp cld mov push pop inc (bad) imull movl mov pop roll lret push xchg loop mov ljmp (bad) frstor sub shr int3 push and adc xchg ljmp adc and je into leave xlat std inc clc pop sub xor cs out sub lcall mov mov out push dec scas sub or xchg jge fidiv movsl ja mov das int3 pop lock cmpsb add pop stos sub into movb std shl sub sub test sbb out lret jg jmp sub addr16 movsl add (bad) clc push sar or iret lea and dec loopne (bad) dec sub in sbb adc cmpsb push sub in aad push fwait cltd lret stos movsl (bad) fimul lret add lods outsb mov outsb cmpsl xchg lock xor dec mull out cmpsb fldl adc into bound dec jecxz jmp sub xor out xor xchg insb hlt sub or loop das add clc icebp xor outsb cmp lahf pop mov cmc mov mov pop out das lret daa cmp lret cs adc mov xor mov dec sbb pop dec fisttpl in lret hlt out jmp sub xchg pop stos pop jmp jne iret aam pop and mov std test xor js fsts inc add imul mov fmuls in shlb push (bad) adc fcompl and cmp sub fdivl push xor jle adc dec lods add icebp xor hlt out dec sar adc insb xor fwait inc daa inc push loope in pop les fnstcw cld pushl scas dec call movsb jmp call pop jle jmp mov cmp fistpll sub enter and lret inc pop pop loop pusha pop and add or imul or aam sbb xchg push or sub mov ret test jns inc push mov (bad) dec stos loopne add aam xor jmp xlat (bad) mov (bad) sub jmp scas mov rclb repnz inc sarb stos call test mov pushf jne push mov imul cmp mov mov push das adc jmp frstor leave sub movsb movsb stos mov test cmp and call mov mov pushf movsb pop mov lock push ret adc mov xchg add lahf (bad) adc jge,pt inc lods cwtl test pop movsb inc std jp popa mov pop jno dec jae add push dec ss push ja add xchg dec and dec cld push dec push dec mov mov mov xchg les mov jae test (bad) push and push stc pop mov or sub and (bad) jp call out add jl adc stos repnz and int pop xlat les fstpt les jbe adcb iret pop rclb test ljmp pop pop add sarb adc add or adc mov mov sub clc sbb sub cmpsl arpl sbb mov out cli gs xchg xor mov and and das sti je popf sub int3 test add clc dec loope fisubr jmp (bad) mov push divb fdivrs mov xchg je mov outsl (bad) push mov (bad) mov or cld xchg leave or (bad) inc adc dec and imul mov rorl das inc push not les or xchg pop sbb iret mov sub (bad) mov mov (bad) bound pop mov or ret adc xchg loope (bad) std push xor mov rorb sbb jmp mov push and ja push imul fist mov jne andl (bad) cmpsl sbb sti add ja call sub jne xchg cmp ja jne jbe (bad) dec shlb and and jb out shr mov xor (bad) fcomip mov mov test inc dec mov add pushl nop xor inc jle xlat mov outsb std push xorb loope mov and xor pop fcmovnb or push loope sub lret pushf push (bad) mov mov icebp xchg add xchg clc out cli out mov or inc cltd and xchg imulb ret aas sub aas sub shrb mov outsb (bad) push lods loop sbb mov jmp or push sahf shrl in nop mov mov jl idiv jae das sub mov lret (bad) lock xchg push push imull lahf mov xlat jg movb lret rolb jns xchg pushl loopne sti sub sbb xlat jge cmp dec cs xchg cmpsb sub push (bad) jb cmpsl push add xor mov test mov and nop xchg sub mov int3 into add xor sub mov ds pushf xor mov insl test or mov adc out xor mov xlat or xchg pop dec mov pop mov add pop sub scas cwtl gs sbb scas int and xchg rol xor nop mov out dec add ljmp clc mov pop fwait int3 sub js dec jmp (bad) jle add pushf je lret dec push fisub loopne aam les pop fwait jne add cmp mov mov push pop mov leave jbe loop ja repz fidiv idivb mov je movsl ret cli call das sub or and ljmp aam xlat scas and stos aaa js sbb (bad) xchg clc jl loope (bad) ret ljmp mov push inc (bad) mov and andb push bound repz movhps stos fldl mov xchg stc adc jmp jmp (bad) mov (bad) sub sarl sarl or xlat mov xor mov sarl jnp (bad) icebp lret stc xchg fiaddl pop sub insb inc int3 add pop mov out mov fstps aaa or pop clc out xor loope mov loope imul mov xor repnz inc ret dec ret pop sub push lret mov and mov or push pop xchg push jp mov das or cmp std inc jmp fist ret ljmp cmp outsl xchg inc shr scas in out pop out add mov jae adcl divb dec add daa sbb (bad) push xor push pop mov mov mov dec lock imul cmpsl pop push movsl jns dec (bad) aaa sub or ret pop movsb scas lock adc (bad) mov insb add negb sub sub popf insb test xchg aaa sub xchg aam mov push or add cmpsl xchg dec call and rcl xor ljmp sub inc push call push jno cmpsl jge icebp mov int3 pop pop loop (bad) rorb sti ret std pop ret xor rcrl or mov dec mov out sti mov insl out push xchg inc xchg (bad) xor sti cmp ret cmp jno inc xor ret mul jmp lds test mov push fistpll test cli inc mov popf sub mov repz (bad) lcall push (bad) push out je daa mov cmp xor ljmp or mov dec sbb imul inc mov mov stos sub dec adc cmp add cltd mov jmp out into stc push inc mov push inc icebp mov cld iret pop add popa cld jle fnstsw dec xchg lahf cmp pop (bad) ffreep out push inc inc add out pop sub mov mov or (bad) jne push repz sbb pop int3 mov dec fnop pusha sub in pop into push push pop mov cld add xchg inc pop push stc ja or (bad) mov jns pop mov push xchg lret jmp call xchg clc xchg mov pop mov (bad) mov scas pop icebp or push mov adc (bad) arpl mov shrb inc inc jne jnp ja jmp (bad) in pop pop add add mov mov mov lock inc mov mov add xor pop jmp sahf fildl or lret lock adc or insb aaa or sub fdivl daa dec jp imul inc fistpll test or adc xchg fsts xor dec xchg nop (bad) mov scas ljmp enter fidiv out push mov or mov cwtl jl ficoml das test (bad) or sar pop into in cld bnd mov dec mov std cmp in cmp fild push shll popf (bad) xor pop inc mov cld fdivr mov mov xchg (bad) cmpsl add aas sub neg add mov mov lods sub pop dec push shr idiv mov scas xor pop push pop mov (bad) push or push iret dec jne and pop cmp or mov jle sub test shr push hlt adc sub dec outsl and xorb movsb mov and push and push enter push stos rolb je sub enter or shr pop add pop push inc sub dec pop mov xor (bad) jb jecxz adc (bad) cmc mov push in jns mov add test jbe call adc out loop (bad) add icebp ret cmpsb inc bound imul es xor int3 mov push into xor dec iret jmp jb jmp push sub add push ja and mov notb mov pop enterw sub icebp popf jno dec js jg and pop hlt lret xor xor push adc mov cli or lock mov xor jl (bad) jmp inc imul jno jp add mov xor dec jg pop repnz mov fisttpll jne aas adc sarb pop outsl or sub mov outsl pop push fxam mov loop adc pop pop pop jb add and pop out call push jno sub jl into fnstenv (bad) xor xor repz or mov sub mov sub shrl inc out and xor add sub and and icebp inc lods scas (bad) aas loope pop fs fcom mov or dec popa popf pop js jg shlb pushl cmpsl std inc jbe hlt sahf adc mov sub xor ljmp jmp jbe icebp sti lret mov sub dec push add fstpt (bad) repnz fildll ds das jg inc push mov cli or pop notl and pop movsl or fisttpl jmp sbb sbb push ja cmpsb push fsubrl add add cli shr cwtl sub add cltd sub sub loop pop (bad) mov loop jmp push loope pop fs fistpl xchg iret ljmp xchg xor out pop mov push cmp leave sbb lds add ret insl daa pop mov rcrl addr16 imul sahf pop iret mov xchg cld cmp cmp das (bad) call mov mov shrl and iret imul mov clc lret ja jae in gs mov nop push pop mov adc jl pop std sti sbb stos out dec test lock mov call mov xor clc out xchg inc mov bnd (bad) push and and lret frstor iret jle pop (bad) cmp xor xchg leave ret cmp pop xor mov and dec gs popf ja rclb repnz jb ss sub dec fstpl les ficoml ret ret or or cmp adc pop dec mov sub inc adc mov pop test (bad) mov xchg jge mov pop xchg push test ljmp sub orl fldcw data16 sub add aam scas cmpsl rorb or or outsb lock xchg mov mov clc pop lahf jno push aaa cmp roll dec xor aas cmpsb stc mov loope ljmp cmp mov movsl cld cmp jno dec cmpsl (bad) mov pop loopne pusha pop and inc sub push mov or mov stc or inc push insb jecxz,pn pop xchg std dec or (bad) add xchg adc push dec in xchg mov negb adc lret insl mov xchg cli bound mov and jmp or loope xchg negl push lds sti mov sbb mov sub jp adc icebp jmp out repnz sarb lret sub add call call adc ja stos jne jb out mov jle push mov cmp mov sub dec movsl arpl add mov negb sbb fdivs pop stc mov lret xchg movsl popf aad lret jg adc mov fldenv inc add mov (bad) add pop in mov pop sub stc pop aam pop mov pop loop out sub or std sub add (bad) mov sub xlat mov mov or and jl loope jmp loope jnp mov dec cmc (bad) es sbb and scas sub stos repz (bad) xor movsl push jge imul cmpl jnp movsl notl jnp mov dec xor inc push sub inc mov out dec into xor daa pop push push outsb mov (bad) xor inc and mov cmpsb jno inc add add pop sbb pop mov sub aas popf pop cmp shr sub (bad) push (bad) mov jb inc jmp mov bound gs sub push inc or movzbl add je jb dec mov push (bad) xchg into shrl xor sub adc xor add push dec mov cmp jl lahf add jb jecxz sub bound xor bound stc jl imul repz icebp insb addr16 jmp popf adc lods xchg loop (bad) push loop (bad) enter or aaa xor ja js cmpsb les dec or cmp dec mov ss adc fcomi rcl data16 xor ljmp aad sub fdivs test rorl push or pushf mov push jp mov jle xlat mov imull pop sar dec push (bad) mov pop incb (bad) out mov sub popf pop repz pop xor dec bound decl in (bad) dec sub inc add stos gs xor subl mov gs add fildll cmp pop sub fdivrs ljmp sub (bad) sbb hlt cmp cs and iret inc mov dec sub pop movsb and repnz xlat and pop sub daa fsubrl into lods or pop push or and (bad) mov xchg mov sbb aad xor icebp xlat dec lods daa fisub iret popf cwtl hlt or sahf cmp daa stc push lods bound cld inc outsb cmc lods push arpl sub sub dec add scas mov dec dec push sub mov add sub ret cs orb (bad) ffree xchg pop add sbb lret pop insb cld cltd arpl (bad) popf (bad) push ds ja mov insl push xchg out jecxz test dec inc mov scas cmp shlb pushf xor pop cmp dec mov aam mov arpl (bad) (bad) dec fnstsw xchg jle rcl xor movl movsl aam stos lret inc dec jmp sbb cmpsb repnz jmp mov sbb dec pop mov cmp mov rcrl inc or jp pop xor mov lock outsl sub mov in test and mov add xlat mov mov sbb bnd mov xlat mov push pop out or push leave mov pop push jmp inc mov int3 pop into lds clc and les adc prefetch xchg push or (bad) testl or adc dec das cmp xchg std ret sub lret imul popf inc inc xor xchg jns fs stos sub call mov mov mov shrl (bad) outsb add adc loopne sub mov scas imulb mov fdivr or (bad) mov xchg mov clc daa ret jle (bad) mov or fstps movsb mov movsb cwtl and and ss addr16 addl pushf cs mov cmp mov sub into xor fnstcw dec xlat dec or add sbb mov sub cs lret jl cmpsl push xchg push mov mov pop test mov push imul shlb cmpsl loop out sub cmpsb mov lret pop inc lods dec jl mov ja (bad) popf sub decb icebp push mov push sub mov or icebp xor lret xchg or push cwtl pop dec jg mov jg fucomi jge mov rcr adc sub lock pop jnp shrl fwait and jmp sbb daa int3 or sub sarb ret sub pop mov dec fldenv icebp jns xchg xor leave and js andl lds dec repz or call outsb clc ljmp fldl sub flds out (bad) loope cmp sarl add movsb dec inc popf jne outsl xlat cmp icebp and sbb aad dec pop out sub xchg mov jle pop push and bound sub inc out xchg lods jmp cmp cs rorb pop cmp cld cmc das out divb test jmpw push data16 jae scas xchg (bad) in iret and cmpsl stc jb sti inc repz mov pop dec cli push mov leave repnz push inc mov dec loopne fmuls push mov lock fisttp xor xor (bad) fisub cld mov hlt mov rcl lods xor mov faddl and push inc add mov lds fs stos mov mov inc or jne pop xchg in and test cmp ret das fidivl and mov (bad) mov (bad) pop mov sbb xor (bad) stc neg das add or xor cmp mul inc mov (bad) aaa cmp dec fnsave xor andl je and cltd dec or in adc lock xor mov sub inc inc mov push sub iret pop add insl aas xchg (bad) out add adc push stos mov mov xchg adc sbb cltd lret mov and stos fldenv sbb add pop cmc leave fistpll fcmovnb jae pop roll call test mov or call in jno or js pop ss movsb (bad) out iret add shl add aad int3 pop mov jo fsts xor push mov cmpsl dec out gs mov sub mov cmpsb fs jmp xor les and mov or movzbl xchg jg repnz (bad) mov xor idivl stos sub or lret pushf sub in sub or les and repnz jo ret sub sbb ret xor into or push sbb roll pop daa adc lods addr16 out add (bad) leave out jp push dec popa sub mov mov and jle movsl dec adc (bad) aad sub loop sub sub (bad) fadds rorl imul popa nop or mov mov mov inc xchg idiv sub es daa std xor cli ljmp leave icebp sub sub shlb sub jne mov xor mov mov dec mov cwtl push mov daa mov push dec sbbl sbb out xchg (bad) cld or jmp mov daa jge mov aad inc (bad) cmpsl daa dec and out (bad) xchg jl rorl adc mov jne push push inc das ja aam lds xor repnz and xchg lret and and test xlat add les int push xor mov pop pop mov lret jecxz in arpl scas xor vpminsw pop gs packssdw jno int3 notb xchg or sub fdivrl and out das leave jae and aas subb mov mov push in xor push mov les and and daa mov jno xorb dec sti imul cld pushf insb push leave add call add inc inc scas push fist add in xchg or sub in mov push jno or ds nop cmp cmpsl pusha push xor ljmp cli jnp nop popf out sbb stos dec dec scas push stos lret inc dec inc xchg mov jnp push or clc imul movsb lret sub xor cmpsb (bad) out stc popf pop sub jb nop (bad) lahf inc push (bad) adc rcl imul xchg sub into mov mov (bad) pop sbb loop lcall jg xor (bad) sub xor pop fnstsw div (bad) dec cli or (bad) cltd sbb les mov sbb arpl ret stos (bad) lea cmp mov jge aam or (bad) ja push pop sbb repz aas dec sub sbb pop and sbb fstps xor shr popa pop out inc stc ds shrl les mov ss leave mov jp jecxz mov pop sub xor mov sub jno,pn and jg pop loop push add mov sub loopne shrb (bad) jne inc sub mov cmp outsl idivl and mov jne popf jae pop imull jle cmp or outsl mov push sub out sub push pusha push (bad) popf inc jl xchg scas jecxz lcall adc sbb fwait int3 sub xor ss cltd pop sti push or lds imul jmp js adc popa lods sub sub fldenv arpl sub inc inc adc bound pusha cmp lret fsubrl repnz mov xor adc loope jne add cmp adc fs xor js fisttp js sub dec (bad) repnz scas mov imul aam (bad) (bad) mov cmp fcomps (bad) cmp sbb fildl out bound repnz pop bound loope cmp lock inc movsl ja data16 test jbe mov cli and adc mov cmp enter xchg cmp mov jle (bad) xor mov ljmp and rcl mov push sub imul jp jnp dec push xchg hlt jno cld xchg leave pop mov jmp (bad) popf fstpt cwtl sub xor jnp mov sbb mov add jb rcrb sub das hlt sbb xchg jle imul push (bad) stc sbb jle fistpl push pop movsl inc pop adc popf sbb push jo or jo mov aam pop push lcall add das scas ja sbb into xlat sti mov push lret adc or xchg adc xor int jp std cmp fs push enter ret and xchg in lods mov xchg jnp adc add aad mov or cmpsb push sub insl cld (bad) mov mov aad scas mov sub cmp in sub xor sbb sub jg sbb leave lock lret push dec int or aad inc push mov div push sub xchg or sub scas xchg nop push idivb test pop in jb std test addr16 xor xchg xor sbb leave xor add icebp jmp mov mov divl pop out sub xor stc push mov jmp (bad) leave xchg (bad) xchg pop (bad) xlat outsb imulb fs inc add in js mov js (bad) loop aad dec sub repz or mov sub pop sub aas mov lahf iret lds or int sub imul lahf repz scas adc push dec jge jnp mov or fnstcw cli bound aad or mov sarb jge pop jno imul xchg stc lds rcr insl xor pop ret mov pop mov xor imull repnz xchg mov into data16 jo mov sub sub fmul call adc (bad) lea divl fimul push xchg cli add fstpt aad idivb push outsb push std scas sub xor xor movsb pop and mov pop push jns inc or pusha inc add mov xchg sub push pop and xor or cmovle stos xor sub mov fildl and push or adc (bad) mov fnstsw cmp push or (bad) lret subb test xlat movsl aaa outsl fxch stc sub mov ss lea inc push fwait fs mov hlt ret pusha or sub das and test stos cmp (bad) dec jns inc dec and pop jge jmp and mov jo mov cmpsb pop dec cmc mov adc add mov mov or pushf int3 imul call cli fisttpll test dec lahf pop add xchg or aas insb xor movsb sub fwait mov into or add and decl xchg lahf je fs out mov push dec push cli movsb and movl jb sub lods jg jmp roll popf js fwait mov sub hlt call mov outsb movsb in fstpt adc push fld pop insb xchg pop clc jno mov or mov mov push lock popf jle push pop inc bound cmp and mov sbb gs mov imul sub xor mov roll pop pop cwtl int3 add xlat cmp stos xchg and negl fbstp add rol mov sub sub and or jle mov and dec xor sti add loop (bad) mov addr16 in jmp mov mov push xlat jnp out push adc or sub out stos cmp lods push das sub cmp inc lret cmpsl pop xor decb fcmovbe pop mov and push repz xchg sti xor cs inc loop pop rcrb (bad) scas lcall pop inc or inc xchg std push dec dec jmp dec sarb sub inc pop movsl fmull mov lcall add (bad) and mov outsb ret inc out fnstsw test add jnp data16 icebp mov jbe (bad) out xor cld push adc repnz iret call mov inc xchg jo cmp and scas mov cmp and pop xor mov jae mov add adc dec out pushf sbb lcall repz mov fstpl adc dec das mov sub pusha clc mov sub adc cmp sti add iret and pop ljmp mov daa add push jl adc sub mov inc or sub fsubl inc and pop sub (bad) xchg scas push imul cli pop xor or or mov mov and mov and movsl fsubl sub ja mov mov outsb cmp lock std adc cmpsb inc and mov (bad) push arpl out or cmpb mov mov mov dec mov in jl in lret out push mov mul sbb mov push mov and (bad) fs dec add pop pop sub les (bad) mov inc sub sbb cs repz fwait (bad) gs sub sbb sti add mov add mov add sub int3 mov jge aad pop push das in lcall lahf enter scas mov xchg push jno daa cli test aaa mov dec mov add idivl loopne repnz add mov sub pop les loop mov xchg repz pushf cmpsb and imulb unpckhps cs sti lret jecxz push push (bad) mov pop sarb insl daa data16 adc push mov mov lds push sti fnstenv sub test jns push cmpsb (bad) iret sub jmp int3 pop jge movsl cmpsb jo data16 adc mov xchg icebp and repz adc dec inc (bad) mov pop push out sub idiv pop stc xchg arpl aad mov and outsb add popa scas movl test mov int3 pop jno mov or pushl jg in dec into pop adc gs (bad) aad test pushf mov (bad) (bad) jecxz mov (bad) out gs fcmovnb sbb movsb cmp jns dec xchg pop das add divl imul or (bad) lods hlt cmpsb pop mov pop inc notb xor stos (bad) xor push jno dec sub inc pop test movsb dec mov jo or add lock lods jb leave int3 and mov xor cli addb pop roll out or mov sub test push call repz out dec xorb ret push sub jno mov fmull mov pop lds incl and iret pusha das sbb (bad) fxch (bad) adc sbb stc dec (bad) out (bad) fldl aaa in arpl iret xchg fistpll and frstor and sbb scas xor loop add inc gs loop xchg mov add shrl sub pushf sbb call add jno xchg icebp mov xchg sbb (bad) loope jae das enter sub das (bad) xchg daa jge push leave jne test mov sub xchg sbb mov outsb and add push fwait jp out add das cmc scas (bad) int3 sub sahf iret and ljmp popf xor xchg xor lret xor jle leave push shl gs sahf push leave aam aam pop test dec es xchg sub js or sub int jg int3 out sub sbb push lret sub sub dec sub xchg (bad) aaa mov fsubl repnz pop and iret adc push (bad) xor pop or pop jp jge add mov mov add aaa mov popf push xchg cmpsl sti cmp stos mov addr16 bound mov icebp das imul shl les lret sub test xchg xchg loop dec xorl fsubrl mov and xchg inc cli movsl les sub xchg sub or sub dec movsl mov bound pop sbb dec out fcoml cmp mov insl mov sub pushf into push inc aam mov push clc mov add cs mov into sbb jl pop (bad) scas sub or xor xor ljmp mov xor jno lods fsubrs jg lret jg or das mov mov into xlat js popf negb mov std shlb jmp fsubrl lret (bad) je les jns cmpsl pop pop nop inc mov scas lret sbb push jne jmp fcoml or pop pop clc (bad) xor mov (bad) (bad) cmp mov int imul out fbld or lret xchg loope dec ss and imul sarb popf jnp or scas rcr inc mov adc add scas loop mov lret jnp pop xchg stos jno xor cs pop ret fsubr jne rorb or jmp inc xchg nop sub out lret inc pop stos xor pop xlat xor push sub cmpsl jne jle or loope (bad) roll popa push (bad) bound repz mov mull jmp sti cwtl outsb out or sarb jmp push mov call rorl ljmp sbb sub jmp adc fdiv dec pop mov mov fist (bad) ret ret xchg push popa adc mov add lret jge (bad) mov in test ss adc pushf pop je stc add mov mov aaa test add cwtl (bad) negl and pop push mov ds movsb int3 inc add mov dec leave jo mov inc fwait push mov loope pop xchg cmp inc or aam mov insb mov adc mov xor inc mull ja sub in mov daa loop inc aad sub and (bad) (bad) out sti sbb mov lock xor xlat in cwtl leave sub andl push js stc test and xchg or sub xor mov xchg adc push jno imul into xchg test and ljmp sub sar push movsl dec sub jne dec and and scas and out mov xor mov adc add add mov mov xor popa xchg xor pop sub shrb popf fsts (bad) imul sbb push dec jne sti jg xchg mov cli push mov clc jp xor and xchg mov sahf and add cltd cs xor sub cs adc jmp iret pop pushf mov dec adc fldt xor xchg or repnz in and and scas cmp xor xchg repz enter test test in inc xlat out int3 push popf ficomp xor mov mov jo xor (bad) cmpb sarl popf sbb xchg js add inc lods push inc xchg jp enter jno xor jg pushf xor lahf test mov sti fs call pushf inc cs mov enter cmp sub pushf inc mov and sbb hlt xor pop loop lahf push dec jmp jle jmp mov sub call sbb imul inc jo mov cmp xor mov lds (bad) bound sbb movsl shl adc stos fstl cmpsl mov xchg push ret push adc jae mov pop lahf jmp mov cmp xor bound add out jo in xor call and pop fcoml xchg lea daa pop or push aaa leave push inc sbb inc (bad) mov pop aad (bad) jle movsl not (bad) repz push xor mov mov sbb icebp jmp push pushf loope sbb or add mov inc xchg jmp fisub sti mov pop das pop sbb adc sbb dec fld das lret insl dec or sub cli (bad) jmp repnz jnp dec mov in mov in xor aaa xor jle imul or fldl lock mul sub out mov xor xchg rol xor mov aad prefetch jo mov add mull and dec cmp sub cmp out pop jne jle mov std mov add movsl ja sbb push arpl fcmovnu in mov sub mov or shlb adc and ss or and mov ds adc popf test dec mov into cli leave lods fnstcw sbb (bad) xor adc dec das cli sub jle stc popa in sub mov cmpsb mov outsb add movsl sbb push pusha pop out sar ficompl mov aas dec (bad) xlat shrl fisubr popa add outsb lret loopne sub mov (bad) bound iret adc push mov inc xchg xor out jne and xor cmp daa mov outsb cmpsb popf push cltd mov pop sarb pop icebp or addr16 add loop xchg outsb push mov sub cltd (bad) fdivs lods xchg pop xor outsb sub xor (bad) lods psllq (bad) in adc fisub inc leave mov andl jge ret and scas fcomps movsl xor or movsb ljmp push (bad) cmpsb and cmp jb movsb sbb inc mov push repz aam (bad) lret pop mov and jecxz jbe decb (bad) or and clc (bad) fisubrl and and push cli sub mov push push ss push push pop xlat adc dec cld add inc dec xor imul sarl sub adc mov jl (bad) bound jecxz idivb add sbb (bad) daa mov test jmp ds pushf fdivrs int pop leave mov leave (bad) or das dec cmpsl jle jno cs jne ja pusha es push or (bad) mov sub fldcw ret xchg mov xlat ja std mov sub sub aam jmp cmp popw das add das fbstp pop jno je leave sub das pop sbb xor and cmp cmc sub test clc push hlt lret enter ret jp pop mov push inc jmp adc xchg fdivrs xchg push mov out imul xchg cmc mov mov iret inc sub mov (bad) fcoml sub sbb mov xor shll fstps icebp dec sahf sti enter rcll lods dec movsl jmp sub dec dec and jno xor jge jmp xor in cmpsb fwait and mov outsb xor inc adc fiaddl ret out out in sub and xchg repnz jp jmp xor shll sub test out cmp imul clc clc xchg pop push (bad) jle cmp insb outsb loop push jnp loop out mov jno dec xlat inc push add (bad) and es pop xchg (bad) sub or jecxz push mov mov dec mov mov dec mov xchg lret sbb insb ret adc sbb jae and scas cmp pop test xor xchg pop ss stos cltd sub (bad) testb aad insb dec push in cs pop xchg out mov arpl adc xchg leave mov (bad) pop imulb repz leave pusha insb pop xchg stos or xor (bad) sub mov lock popa sahf outsl in repz shlb mov xor and xor jbe dec jecxz into ds or adc mov xchg test std sub or mov insl outsb jg mov std jb clc xchg (bad) or or or inc out das in push popf out dec mul lods xchg or lret dec imul notb popf in and test lahf insb and les pushf adc push cmp mov ret and push xchg scas fs ljmp add addr16 mov and jo push sbb pop mov or sahf fcoms loope insl jbe xchg jmp sar (bad) sub movsb sbb sub xchg std mov or adcb mov adc enter push jmp in pop xchg mov add jns movsl push cmp push popf inc lret cmp sbb in xchg sbb lods jg inc xchg sarl mov scas adc loop dec mov test mov (bad) in xchg jecxz jne push and scas fsubrl lahf jnp and adc loop hlt lcall nop ret rorb add fs repz das mov add xchg ds clc adc mov icebp mov rcrl mov push gs sarb ret xchg sub jg jg pop (bad) mov inc or inc jle cmpl push (bad) adc and lods sti dec jmp lock mov scas sbb or (bad) mov or ja out sub fs call mov push movsl push mov push mov xchg arpl sahf (bad) xor xchg mov cli pusha pop out mov call hlt inc jnp mov add popa sarb cmp push pop pop in lea jns inc pop (bad) pusha imul test jge popf dec push xor push aam (bad) lods and cli mov mov call add push icebp sbb aaa sub xor sub pop neg imul sub icebp imul out iret divps into and fisttpll divb or aaa adc int3 xchg stos idiv dec sti and ror dec fidivl test mov jns dec iret mov mull lret sub jecxz adc iret push mov repz pop arpl inc (bad) shlb shr std pop in mov and dec fsubrl jnp adc mov test pop (bad) mov in (bad) mov mov xor push add (bad) xor mov jae adc jno lret and xor stos sbb and push adc insl mov clc insl or ljmp and dec sarb cs add and xchg sti in and repnz mov repz ljmp jecxz (bad) out dec mov popa xor mov jb sti jne mov and xchg push scas loop xchg fadds xchg dec loopne pop inc (bad) icebp leave sub pop xor dec add int3 aas or fadds push (bad) fsubl jnp add repz or ret or out and gs and clc mov dec push sub push pop fisttpl adc enter into pop jmp fisttpll add mov imul xor jecxz fcompl ljmp cltd cs xor mov js mov test xor jmp (bad) push data16 repnz or pop xor xor and mov shrb inc mov sarl movsb mov mov or pop and out jl jecxz ljmp rclb scas insl enter je jmp jmp aaa mov test int cmp inc mov pop and dec ror xchg cs lret xor jecxz jl xlat cwtl mov stos sahf stc adc add sbb push xlat or or jns or out xchg push xchg testl loop test fisubr cmp loopne cwtl lock or add pop fs mov sub sub cs push in nop rorl mov adc xchg push cmp mov popf ja cli inc pop cwtl mov cwtl and in mov pop call dec out daa sub xlat mov std dec jp adc js mov pop adc and adc mov mov push aas das mov jle sub mov xchg (bad) jnp sub jecxz adc xor fcoms pop mov and jb dec loop sub dec lock repnz mov or aaa ja pop pop ficom in mov loopne cmp adc sub ja sub adc sar imul (bad) jmp daa fidivr scas ret imul xchg add cmpsl mov jb loop pushf sub mov out negb fistpl mov add leave and ret and inc mov cwtl push adc out jb add jo aas cmpsb jns repz adcl pop xor sahf lods jp cli adc push dec jp insl movsl or cmp jnp sub daa icebp and sub jmp popf adc push xor and mov xchg test inc lret adc mov nop ljmp test add sub add xor adc pop sbb movsl adc inc repz xchg xchg jecxz aas pop loopne addr16 sub sahf sbb cmp orb sbb dec flds jbe inc addr16 test (bad) ljmp sti sub es sbb inc pcmpgtw push lret (bad) mov lret lds cmpl dec stos inc push dec lods rcll cmp std adc dec add or add fistpll inc cltd scas or push divb dec mov cli cltd icebp adc cltd aas add adc xor jo lahf loop push cs add int3 xchg scas loope lret dec sarb sub mov stos fldenv outsl mull (bad) push flds dec cwtl movsb xor cli loop jns dec out xchg inc mov pop cmp lret iret ss mov rorb push movsb xor mov xor pusha scas idivb xchg push push mov inc add xor pop or icebp inc outsb sub icebp mov clc mov xor (bad) add jle fistl push xlat cli (bad) leave jmp or clc cli mov repnz repnz negb lock mov mov push jmp cmp scas jl ljmp jno or scas lret xchg push gs and (bad) mov sub loop pop rcrl or popa xchg insb pop pop mov jle (bad) std fcompl mov pop loop ja lret (bad) fistpll outsb repnz fs cld mov fstps jmp test add jecxz dec rorb stc movsb stos mov or (bad) xor mov fistpll daa push mov or repz xor mov lds jmp and mov mov xchg call jecxz in cmp out pop icebp sub push (bad) lret add jno sub cmp xor jmp data16 mov or sub out xor mov dec movsl ljmp push push les adc jp dec xor lret xor pop and sti (bad) mov push in ja jg sbb out mov mov mov iret dec and je cld sbb mov jmp fistl sub push dec repz jmp repz sub sub ds faddp cmp or mov adc leave int3 outsb in cli test (bad) dec nop xor or rcl pop and mov arpl pushf imull dec repz push push sbb (bad) jp sarl movsb int3 push sub push and scas (bad) sub out mov notl or stos fbld or pusha loop sbb pop inc xchg loopne gs xchg lcall pop mov das movsb jecxz adc sbb adc clc and mov fmull ret nop push out mov pop frstor jle push adc xchg add xor mov fiaddl (bad) mov shrb mov jle dec iret stos int cs inc mov xlat jbe pop test xchg sbb mov leave aas popa mov in mov jne pop and cmc xor aas push dec mov xor dec ss rcrl pushf dec (bad) dec and jns add jp test push add mov (bad) cmp and popa fsubrs jl jo pushl popf mov jnp mov fdivs call rclb repnz pop iret mov and imul push negl loopne push mov adc mov lahf fsts or dec cmp xlat in test mov int and mov mov nop and jg arpl loope mov or iret adc and movsl aad mov out cmp pop dec ds adcl pop cmp jne or push mov dec jne rorl (bad) ja mov fldl sarb mov push jp xchg xchg in and mov pop and mov jnp int3 lods inc xchg test das sub mov sti (bad) xchg lods xchg fisubrl pop iret xchg and pop out pop loop xchg mov fnstcw and fs jmp imul (bad) mov sti out pop add repnz mov xor adc push imul (bad) sub mov mov pop leave shlb xchg iret add jp icebp inc and insb stos rclb in xchg cmp pushf jecxz cmp je pop lds iret mov (bad) leave inc fs ljmp ja aad ds test repz add cli out gs dec shrl mov mov lret (bad) cld and je xor fnstcw sub push cwtl cmpsl sub cs lcall imul rol stos sub mov mov adc repz imul push das (bad) and std sub mov iret cmp sub push lret push push and mov jns mov xchg and inc jmp dec pushf mov jge inc lea std push stos daa jnp sub mov outsb movsl sahf jg imul ficom mov out pop popf rcll in loope add add clc andb pusha mov xor popf jmp movsl clc loopne adc jno cmp stos push inc add mov je mov pop xchg xchg push stos daa fnsave mov xor ss mov sub push lods jmp fistp pop aaa sub or enter enter test mov mov popf and adc lods push mov lods cltd mov enter pop into dec sbb repnz stc out mov mov jl lock incl inc mov and inc out mov test inc repnz or mov lods adc dec push and mov mov loope notl pop jae mov push jbe test lret mov cmp xchg insl xor or and popa icebp inc pop imul and add xchg mov push lods mov push push xor inc pop sub push mov loope insb dec movsb (bad) xor rcl mov pop dec dec pop jmp movsl push add rol imul test (bad) fdivs add jecxz mov and jne mov repz and push stc icebp xor cmpsl adc sub (bad) fldcw es push xchg and sbb idiv sub pop stc mov inc imul jecxz pop in in jmp cmpsb repz aas addr16 pop cmp mov sbb and lahf fcomp jmp mov (bad) fldenv mov mov ljmp js pop into clc outsb mov hlt scas movsl push sbb int3 mov cmp cmc (bad) push mov xorb inc into sbb cltd push cwtl (bad) push inc outsb fs jnp ja in mov jmp lods in dec jb dec iret stos cltd pop xor outsl mov data16 sub (bad) repnz jb outsl je sbb or pop cmpsb repnz pushf push or mov pop mov dec pop cmp ds add and sbb stc add movsl add lock cltd aad ret movb or out iret pop mov inc mov lahf dec sti lods sub xchg movsb shr sub xor (bad) xchg out notb rcrl mov ljmp sub xor cwtl jmp mov ljmp repnz jl rcrb rclb or clc icebp mov ja arpl inc xor enter xchg add xor push dec fsubs outsb cmp xchg out clc xor pop push dec sarb ljmp cld pop bound notl dec sub fstp stos inc or dec data16 mov mov sub (bad) repz pop mov or testl pop das test xorl pop mov jl into dec cli mov shrb outsl fdivrl adc mov (bad) cmp inc pushl das mov loope and enter cmp and push adc retw push daa aad (bad) sub ja cli pop ds push jg ror call adc leave sub add mov cltd mov out lret xor add icebp mov xor pushf pop imul leave incl ss sbb mov dec addl push inc mov push pop out adc stos sub and loopne ljmp fcomip lcall mov pop jmp mov xchg push fsubr iret add pop adc xchg adc das mov shr cmp sub roll xor mov add out int3 jp pop mov or push mov xchg repz es push loopne fsubs xor (bad) shlb push mov dec cli out mov (bad) int push (bad) lahf push cmc repz imul bound (bad) out mov ret dec in pop add mov xor xor repz (bad) xor xor push loop jne xchg lret push fistp popf test (bad) idivl inc mov pop sbb mov scas cmpsb rcll leave add sbb shll es arpl pop xchg rclb (bad) int movsb dec dec pop push int3 cmp or adc sbb push and jg lret scas cld jbe out sub fstpl jp sub stos lock push stc sbb jmp std or pop (bad) sub mov push hlt cmc adc cmc sti popa or pop aad mov test inc mov add mov sub es or (bad) int3 imul pop roll add sbb das test movsb test loop leave sub sub xor ret push push ret stos sub scas cwtl mov xor aam xchg mov push fildll or test sub test ds xchg scas xlat out lea fldz jbe lods xchg inc in (bad) addr16 cmc icebp jmp jmp (bad) xor cmp data16 popf repz sub and loop mov loop lods push mov (bad) sti dec (bad) stos (bad) loop xlat adc and jmp or mov xlat (bad) insb jb out cmpsb adc fs push cmp mov jne mov aas push inc pop aam push push adc call mov xor and sub je mov mov cmp and dec cmc mov lods xchg mov add jae mov or icebp call repnz jp roll sub cmp mov mov roll loop movsb and out je int3 mov xchg add ret mov mov cmp sti lret (bad) sub sar scas jecxz xchg leave lds jmp cmp mov xchg int3 leave insb mov sub mov gs xchg stc mov or ds xor out and mov test icebp in sub adc lret (bad) dec xor dec inc sub orb rcrl fcoml sbb icebp ljmp xor dec dec mov dec sub and loop (bad) lret pop testl movsl mov shr (bad) jne xchg sub dec jbe jmp aam push and decl sub pop xor or leave mov mov dec setbe data16 inc and loopne fist mov imul jecxz xchg hlt or cmc pop (bad) iret jmp out mov mov push or dec cmpsb or (bad) imul pop clc jmp push push mov fs sub cwtl in dec sti jecxz add push add sti lods dec xchg (bad) fbld scas fisttpl daa movb sahf dec sub idivb icebp jg aad stos mov cmp lret sub gs sub inc jmp daa mov jmp xor pop pop (bad) decb jl cmpsl into sahf and dec out test mov and call fistpll outsl test jecxz dec out cmp adc stc dec aaa popf bnd in movsb mov enter push push ret jns outsl jbe sub mov loope or xor pop add mov sub mov in add mov fdivrs pusha add xor cs pop mov ret jne mov rorl hlt bnd add outsb leave mov mov lret mov movsb cmp push mov imul jae in xor lahf inc sub (bad) mov mov jne inc leave jl leave (bad) divb decl insl and mov outsb and sbb negl xchg push scas sub mov fs rcrl in out mov les icebp mov xor or popf sbb lret mov inc pop in dec adc (bad) mov inc add ret add movsb scas mov loop das ret mov add jne out or in jnp (bad) (bad) out pop in mov pop fnstenv movsl arpl mov jmp and loop dec jg add mov pop psrad fistl (bad) fisubr and popf testl (bad) loop jg mov ljmp out test or or sti mov ja dec jmp out iret cmp dec cmp loop test xor mov fstl push mov push pusha (bad) xchg pop mov xor or sub lock int3 aad mov mov loopne sub push lcall outsb ret fldcw in mov lret jae call dec shrl pop aas daa (bad) jmp mov pop outsl (bad) dec daa (bad) aad jecxz fisubl roll pop sub or mov (bad) sub xchg bound fsubp iret and pop inc and aad hlt movsb scas in adc aam cmp push (bad) mov sub jo fiadd popa inc mov sub mov dec adc rcrb out mov adc fisubr cmp sbb clc inc shr cmp mov jnp adc call fucompp sub fmulp call xchg or pop sub mov test imulb pop mov jne mov shll lds jno or das fdivrs and xchg pop lea (bad) sub les mov cld jg mov in pusha sub imul jmp xchg cmp out cltd cmc jg andl mov rolb clc xor std int3 jne ret in cmpsl fsubrl repz xchg sub or add data16 pop mov ljmp cmpsl push mov mov add push pushf jne xchg adc out sub ljmp jge fistp les mov sbb (bad) out pop mov aad mov out dec xor (bad) es add outsb fnstcw or inc dec fistp or (bad) mov sub push or mov pop add ds scas fstpl (bad) pushf dec mov mov dec insl mov (bad) out or pop fwait popl aad (bad) pop lea ret inc dec mov or lahf jnp sub push inc vpsubd ss and sub cli repz scas jnp adc adc scas cltd out in push stos xor xor xor sub outsb xor call jno add ds int3 out cmpsl cmp inc fistl icebp shl insb enter stc pushf into xchg cli mov push movsb push incb daa (bad) lret (bad) std pop cmc in lahf jp lahf jns dec lret add sti imul jmp movsb pop ds xchg xchg mov add cmp rorl in inc jp outsl mov cmpsl dec fldt cmp inc add pop repnz jb jns or fnstenv jmp (bad) repz fmull rcr sbb popf out dec fdivp fiadd cmp out mov jmp add test lret and inc out mov jb lret (bad) shll push xchg xor lcall xchg xor sarl cwtl push movsb sbb imul data16 rorl mov add jbe outsl and stc int3 push pop (bad) sti jo add add xor test leave mov dec mov sbb les mov xor hlt adc das dec decl pop in cld jnp lods dec xchg adc in ret xorb pop push repnz ret mov and mov bound or out std ds cld sub inc in and jecxz leave mov inc and and mov xor dec (bad) (bad) fstps jle xchg add sbb (bad) leave clc xor flds mov fadds mov mov repnz adc (bad) fs int cs sarl (bad) fs or add cwtl jns inc add or push or mov and inc aaa scas hlt in jb bound in sub mov sub and jmp cltd dec inc add inc fcomps arpl lock jae mov mov jnp add and (bad) lods cli sbb xchg dec shrb lahf bound dec push sub ror rcl imul inc xor ljmp push pop ds xor mov mov pop leave (bad) lret mov int icebp daa mov xchg outsb data16 mov jg push dec cld movsb dec cmpsl jnp stc lcall fstpl jmp fcoms pop out dec cwtl sub in je jbe stos xor or sub cltd sbb mov (bad) push dec mov dec mov mov (bad) jne sbb fnstcw adc inc add scas xor sub cmpsl mov jno ja cs and add mov decl scas xor push and lds sub cltd jae aad icebp mov mov xor mov stos mov xchg pop or mov imul jae loope out jno cmp test xchg xlat cmc in lret push jl push in push (bad) cli cltd cmp sub loope xor mov hlt cmpsl (bad) pushl std outsb cmp push jbe jbe xchg movsb jne jmp add nop cli push mov out and xor int3 inc idivb or cmp mulb daa sub fdivl dec out repnz cmp addl dec jmp dec sti cltd movsb das mov push lret mov pop (bad) sti (bad) out mov inc cmpsb test ret ljmp out mov add push push mov sar jno out mov repz scas push cmovbe dec mov xor push and or and scas bound jne lret mov nop sbb andl inc cli jmp cmp fistpll call cmp jmp or shr adc jle test mov ljmp sub mov fs ljmp jl add ret fldl xchg les es fbld icebp mov (bad) push popa clc movb sub add (bad) sahf out (bad) mov enter or sub repz dec mov ret adc enter outsb jb clc fs lret nop jle rorb dec jmp adcl stos dec lock loop pop fadd aaa xor push cmc xchg mov roll push push jnp nop into lahf mov mov sub fsubrp jbe xorl sbb sahf pop and mov dec pop mov dec sbb inc cmpsl sub lds xchg pop scas gs (bad) and testl xor test sarl shr jecxz mov inc imul cmp ud2 call ret pop enterw inc or mov movsb nop add mov dec pop xor popf (bad) xchg into call xor jns dec xlat inc (bad) jle pop iret sub gs cmpsl push dec mov jecxz daa lock pop xchg mov lret dec (bad) loope and xchg (bad) iret add and xchg cmp test sub mov add push jmp out and loope das loope push std pushf std sbbl xor mov lahf icebp and jno das inc push (bad) sub into inc in cs mov sbb inc xor stc scas lods or xchg sbb pop leave mov jbe repz adc movsl loope (bad) jne mov test pop xchg aaa das in and stos sub add movl push icebp sti push dec test mov jmp pop rcrl ds xchg xlat in iret (bad) icebp xor pop cmp mov dec mov aam (bad) xor in adc movsb scas sbb push movsl test xor xor adc and fsubrp pusha insl out and mov jg mov hlt mov xchg gs and lret jae std dec ficoml jecxz mov rcll sti ret pop adc sub sub cld gs adc add inc adc adc and adc popf xchg mov lods xchg int3 fdivrl lret or mov xlat mov outsl jg loopne pop daa pop pop outsl shld adc in or gs cmpsl rcrb add push in movsb add (bad) hlt addr16 icebp or sub dec (bad) mov sbb push gs mov push lea jo in or into sarl insl and mov jg ja and push mov idivl push std cmp pusha jge lock add jb and cmp add mov and and aas call sub add js ljmp in pop mov test push xchg add xor lds div cli shlb lods aas (bad) (bad) push push stos sub iret add fsubr mov lods out mov pop sbb mov fsubrp sub xchg loop fadd jmp lret xor in (bad) scas or out (bad) fmull roll xchg pop sub in inc loope sub out mov mov sub gs or lahf loope idiv mov out inc mov xchg fidiv std test (bad) icebp aad or add push pop jmp out push push jle xchg lret out mov imul push mov mov rcrl mov adc push iret cmp mov ljmp mov push data16 loop (bad) jno and out daa add cmc and sti xlat stc mov xor sub mov int3 imul or jmp or popa inc sub movl aam cmp sbb cmp jno scas mov sub pop gs inc and cmp cltd adc sti jge sbb xor jl push push sub mov cli and pop xchg pusha jmp jge xchg mov dec mov jb mov icebp pop dec les sbb xchg adc in sub sbb xor aaa into xchg bnd test xor ljmp subl adc mov pop jecxz dec jmp test data16 out mov stc sbb sbbl stos jnp gs and das js mov fildll ret mov push gs pop mov stos cwtl mov pop sub xor mov cmc mov jne arpl out sahf imul out mov push scas adc mov ja lahf imul and scas fsubr xor adc xchg pop notb pop loop lds incb cmc fbstp (bad) repnz push outsl mov dec stos sub push or (bad) mov xchg (bad) pop xor in clc test add jb icebp (bad) imul mov loope pop sahf leave stc xchg xchg sub pop cmp das repnz jmp icebp pop inc das into aas xchg inc daa jns dec add into pop sbb loope sbb ret push xchg movsb mov xchg dec adc pop mov fldl (bad) cmpsl or test jns xchg movsl scas popa or and pop adc mov mov and push movsb ret jmp jnp sahf xchg mov inc inc (bad) sub xor xlat or jl data16 fidivr ret mull and xor lods test mov icebp jne jno (bad) xor lods fimull xlat ss and gs xlat or mov (bad) push xlat and movsl imul mov add xor xorl jo xchg push mov cmp jl dec cltd xchg clc fstl push add mov ds pop inc add and sahf movsb lret sbb popf daa nop xor mov sub lret sbb (bad) mov xor test mov xchg xor jp dec lret mov pop mov push test data16 mov loope imul xchg negl sub sub mov or mov adc push dec push int3 pop out dec pop sti mov dec loop adc or push pushf lods ja cs pushl rcll sub sarl jg mov lahf cltd and cli pop push pop cmpsl adc (bad) xchg sti mov lods ljmp mov push int3 and test (bad) xchg mov push push adc les into call out push pop dec dec push out adc add xor out adc (bad) mov or add mov xor pop clc ljmp mov cmp sub mov lods fsts cmp out (bad) mov mov fs and mov decl mov mov and pop add cmp pop mov xchg mov (bad) mov and push clc into and movsb (bad) mov jns aaa loop push xchg mov stc jle xor jb mov into es mov leave pop pop mov sub mov sahf or xor fwait mov out jne cld nop mov call add (bad) mov sub icebp imul and pop add movsb pop mov inc dec xlat flds pop pop cmpsl je and popa push (bad) jne sub inc or jns pop shl xor popa fwait loop test movsb jecxz adc push fs lds mov les (bad) pop mov loop movl and lcall test (bad) in xor leave inc out scas jecxz xchg mov fdivp pushf test stc mov sbb mov dec outsl mov sub out fcoms xchg mov sarb jg cmp jae daa mov dec fstpl int dec fnstsw lret adc cltd cmc mov (bad) inc and add xor fsts add test mov repnz stos stos gs push mov sbb (bad) xor mov mov sub data16 sbb cmp adc int3 clc ret fwait xchg daa xchg call or xchg pop sub popf dec cmpsb sub xor xlat pop outsb stos pushf sti mov fdivp test ret out loop xlat xor mov andl dec push xchg sbb mov mov bound mov xor cld and mov insl movsb cmp fs scas int jb dec lods push das and stos xchg jecxz loop pop cld fcoml push sub or sbb or in fwait dec decl push std dec jb pop xlat fdivrs add ret pop int mov ljmp inc jno adc (bad) mov clc mov int3 mov lahf or mov fs xchg cmc movsl fmul mov stc lock fwait daa orl data16 dec leave (bad) leave lock lock add fisttp xor cs adc div jb and sub pusha push fwait call jbe call ret jne sub xchg test sub or cmp xchg dec pop pop and hlt jmp add mov sub icebp js pop daa mulb sbb imul scas hlt pop pop movsb ds out adc (bad) scas lds shlb cmpsb xlat sti popf mov pop fistl mov loop jne lea stos cmp or pop add test pop xchg test mov pop out mov add daa mov dec icebp dec sub xchg ljmp (bad) decb jp jbe push hlt and clc sbb into mov je stos lret xchg daa repz dec xchg mov call imul or flds scas sub ficoml repz dec xlat in mov mov cltd scas sarb mov jp jmp in aas xchg daa movsl ja mov add mov sub or pushf bound push or xor insl imul flds sub stos clc stos pop mov xchg mov addr16 adc push sar gs (bad) push jle push (bad) mov mov adc mov mov lret sub out gs cld repnz xchg dec xchg xor ljmp pop in push lret mov inc mov mov sub hlt dec sub (bad) sub xor push cmc call cmp xor and iret scas lea test test or pop xchg lret adc jnp xor inc out decb cli mov lods fsubs sub xchg test test mov test mull into jle cld pop jecxz and mov push mov cld in jnp jl jg daa pop push mov inc mov lret xor fsubrs call adc roll adc and cmc (bad) loope cmp test fcoms rclb xchg insl popf loopne das mov enter xchg aas loop and ret mov cltd or arpl sti stos popa add xor (bad) dec scas pusha mov stos loop (bad) dec or fsubrp jp jle ljmp inc and cwtl cwtl (bad) dec inc mov xchg mov mov lret or inc pop addr16 cld fs inc sbb cld sti roll dec push and jg jns stc nop dec mov rcrb sub popa jecxz mov xchg imul repz sbb in jbe cmp into jne adc ljmp and shrl jecxz sub les push jmp inc adc pushf ljmp test pop fist sub mov mov jbe jmp mov (bad) rorl xchg insb sbb out and repz cs add (bad) out mov pop dec divb ror lods mov push iret decb jg push (bad) xor fnstcw sarb xlat or bound fisttp jle int3 jo pop xor mov idivb js pop lret mov push aas ret pop inc mov test ljmp cmp adc dec fidiv pop push mov adc xor mov das sbb rol and push inc fisttpl das xor inc push cwtl int jmp xlat mov je pop mov or push ljmp or or fs sub inc mov xor mov stc or fcoms in pop cmpsb sub sub fildll in mov or xor dec mov mov gs push clc jp incb ljmp rcrb jg or repnz dec add dec xchg jge stos xor rorl stc loope mov dec mov xor arpl jno xor inc xorl (bad) (bad) jae mov push pop mov mov ljmp fs and and leave icebp mull int or sub movsl xchg shr (bad) xlat cli test adc mov mov imul add push fsubrp push sbb jnp daa lcall pop repnz sub pop sub shr pop pop xor adc ret dec mov mov or insb (bad) mov inc imul inc out push jg rorl sbb inc adc sub mov cmp ret test popf out stc lds sar and sub inc std dec cld cmp or ret add adc adc mov stc cmc sbb mov cld inc outsl jbe push out test mov pushl (bad) jmp jnp sub decb sub das repnz jg jnp xchg xor scas mulb dec inc in mov lods ret push mov mov movsb scas xor adc pop inc mov hlt lcall jle push inc ret mov mov into jo cmpsb pop lahf push xchg cmpsb xchg inc popa out or ss fs call mov fcomps or dec shl and loope out mov and leave mov test dec or sti dec clc bound pop jno xor das movsb push sub orl or push jmp int cs pushl sarb (bad) and mov pop adc inc sub lock ret fisttp and inc in adcb and scas adc xchg lret adcb lcall test push mov pop imul inc inc or aas repz inc daa out pop in mov icebp mov gs sarl push adc sbb or clc add sti test les mov cmpsl int3 mov mov fisttp xlat jmp je jecxz xchg stos push (bad) pushf fiaddl dec xlat int jnp mov mov add or cld or xor xor push stc decl push and mov nop in stos lret lahf pop ljmp and lahf (bad) imul fnstenv loope jge inc pop aam mov jmp push fadd (bad) mov inc jmp clc push xchg adc fldcw cmp add jecxz xchg dec test (bad) fildl mov out dec push testl ret jg lret cmp fs add xchg aam addr16 imulb sti pop pop in scas and subb xchg push cltd out daa mov sbb in js mov insb scas or mov gs adc push sbb mov shll lret and push cli jmp (bad) xchg (bad) mov inc lret and lods mov in sarb dec mov ljmp add int3 cli icebp popf jns sub mov fsubl sub xchg stos or (bad) ja out xchg in popf jg repz mov and (bad) fldcw mov jo dec repnz ret in or mov or outsl movsl lret adc adc xor sbb mov into rcll das pushl xor incb and mov sti je push fldenv aam mov outsb push xor inc xchg test adc in aam decb add lds mov scas mov xchg mov mov unpcklps mov into pop mov mov call (bad) pop jno inc iret mov xchg enter or lahf adc mov pop enter outsl (bad) mov adc sti in call push lds idivl jno ss mov and outsb adc add pop mov outsl cmp mov dec mov add scas in xor mov pushf cmp lahf negb mov jb dec push jge sbbb pop lret xchg mov push sub pop mulb pushl arpl or bound out xchg xor sarb adc ret add stos or mov xor les sub idivb mov fisubl add lcall adc inc mov nop adc push mov (bad) dec mov add xor sub and mov pop lret cwtl daa sub pop test push pushl jecxz mov mov idivl scas rcrb sub fsubrs sbb std in mov xor push mov icebp xor pop pop mov inc push or push inc add pop (bad) mov (bad) or (bad) xchg pop iret loopne jbe xor aad hlt cmp cmp nop xlat xor mov xchg xchg cmp stos roll shll xchg and mov dec xor je,pt push lds jecxz or (bad) or repz out or and test out lcall lods add rclb gs stos sub xor ds cmp movsl out and scas pop insb dec and fs sti loop orl je int sub cmp shrb jo lret jmp lret cmpsl jl in xor and and mov mov int cltd js loope jle cmp cld and or sahf dec mov (bad) dec add out cmpsl xchg pusha int enter aad cli loop test jmp sub mov mull outsb push (bad) mov sub or mov xor xor ret dec cmp fs stos lret xor mov jno push sbb xor and int outsl icebp xchg inc js int3 xor popf notl imul or rol push and cmpsl adc clc or cs and fmuls mov xor mov daa or adc ljmp xchg pop cs cmpsb or (bad) mov pop or sbb lahf notb dec std pop (bad) leave cmp add hlt inc jle lahf out adc push jecxz pop das jmp addr16 or add cs pop sub mov dec jg adcb jmp cwtl ret movsb popa xchg push and arpl xchg xchg mov sti sbb loopne movb xchg aaa dec cmpsl aad sub xchg out jecxz jae push and movsb outsl dec push pop add jg mov mov jno mov add or mov cmp adc adc jmp inc incl and int daa push mov std dec bound sub dec mov stc jle bndstx and popa xchg cmp (bad) xchg (bad) jnp outsl push movsl jg mov mov jle add xor int3 into push or pushf and out mov push (bad) repnz stc ds mov adc (bad) mov jmp clc lcall je push inc pop test mov mov dec or dec pop and out mov sbb das js mov push pushf stc imul jl inc add movsl lds sbb sbb pop and and aaa pop inc incl add stos mov mov (bad) fimull push and sti rcll and xor cli sub adc out pop xor scas iret (bad) xor or dec jns loope cmp pop dec mov mov nop or jo out incb testl inc dec mov icebp and push and and mov add jnp cld mov push and pop out sub lock imul sbb jmp push ljmp or xor push or cmp mov sar mov mov pop sub dec and mov mov imulb stc jl add (bad) push cmp inc pop cmp or shrl adc out popa sahf or insb repnz cmc mov ret and sub (bad) dec jo movsl mov xchg sub cmpsl out test test xor dec lcall add sub cmp icebp inc or jnp cwtl loop stos das and data16 sahf xor inc bnd sub clc cld leave mov sub in xchg std adc dec mov les je sti xchg mov shrl sub in cmp mov sbb roll jbe loopne incb es test mov test pop movsl into lcall add mov push xor pop mov jb ror insb add stos adc jns push (bad) (bad) mov mov jbe imul xor and jecxz cmp dec jmp mov dec fnstcw test xor fcomp xchg fsts loope mov fcmovnbe or xor pop mov in sub cli sub jb or pop pop insb int3 lock pop add sbb sbb mov mov dec inc movsl ret add dec cmp mov jne adc sub fidivr (bad) xchg fcomps movb jae,pn bound add in inc shr xor mov popa notb mov pushf and insb xchg leave and lods pop jmp sub lret jbe imul call xor mov xchg das aam push push fldl rorb dec mov test fdivr loope add lret or dec lods lcall adc leave stos jne aaa lods cmc xlat sti popa rcrl cmc add mov popf outsl mov jmp inc test add xor mov outsb loop shr ja daa add jmp and (bad) ss mov pop xchg movsl add add dec sbb or cli mov dec aam xor jle cmp icebp add je adc rorb (bad) movsl (bad) cmp (bad) xchg mov xlat lds pop jle loop (bad) push cwtl xor pop pop mov ror pop xor mov lods mov arpl push stos cmp test lea loopne fldcw sub add push cwtl ficomp xchg inc fisttpll (bad) mov push (bad) add rcll push (bad) int idivl mov mov sar idivl push loop push insb xchg idivl inc mov repnz in loopne xor jg mov lds lods dec xchg or out inc and loop cli lret mov cmp lret jg out add hlt add cmp mov out adc leave jmp leave xchg pusha add sahf insb lret jle xor mov int3 rorl sub xor cmpsl cmp insb mov xchg fistpl push xchg jle push adc sub js dec repnz mov dec clc jnp scas ljmpw scas push imul (bad) and mov popa lods lret pop and or pop inc mov inc and fmuls pop popf scas (bad) cmp std leave shrb dec rolb test dec sub xor add cs mov dec mov testb cs test mov (bad) stos fimull outsl dec mov ss push push cmp imul adc rcl inc pop xchg (bad) pop inc xchg mov dec push inc push dec mov push pop adc imull (bad) cs (bad) mov xchg mov (bad) lret or add cmc sub test pushf mov jl push ja mov lret call jl lret icebp es mov push inc mov test cli (bad) pusha sub mov stc or je cmp lret pop inc arpl ljmp mov inc dec cmp cmp repz sbb lret fdivr (bad) stos notl repnz and mov add fnstenv jmp out dec stos push mov and dec sub mulb sub jb adc jb mov or das sub mov push sbb fist inc call stc inc test daa out stc inc imul movsl jl icebp xor pop adc xchg fsubrl push outsb adc jb movb xor fprem1 scas test dec mov mov out xchg sbb pop xor int3 (bad) sub xor (bad) pop sbb data16 dec pop lcall sbb (bad) icebp push iret ljmp mov fsts xchg add cmpsb dec hlt cmp cld adc or lods push jne sub das in xchg (bad) mov icebp or xchg inc ljmp repz rcrl rclb outsb sbb aaa sahf jmp lock push bound repz (bad) dec adc clc sub mov sbb and push lret ljmp lret add mov fldl lock push lcall or scas dec jno cli sub test jmp sub cmp movsb subb dec ret and mov sarb cmp lret cli (bad) insb inc push xor idivb pop push push xchg loope sub int3 pop leave in xchg sbb data16 shll lods insb in stc dec dec cmc fs fldenv aas xchg dec stc pop pop add cs sub lods add dec sub xor jg,pt cmpl mov mov xchg push mov leave sub sub out fisttpl jmp or rorl scas mov dec mov cmc mov mov jp cmpl aam dec lret (bad) or push mov mov loopne pop and enter xor mov sub add jg out daa fdivr daa xchg xor mov push inc cli stos clc in sarl jl dec shrb dec mov xlat mov fnstcw push inc jmp lahf xor sti mov loopne mov test add jnp jns sub jne sbb ljmp add repz (bad) and shlb icebp adc test mov xor idiv ljmp mov add mov jmp popf out ds nop jmp push sub push inc sub (bad) jo push mov arpl sub aad rol xchg les jns lds cmp scas into dec imul (bad) aas dec push pop xchg push cmp xor mov call loop lea adc mov pop lret mov decl jns rclb mov push bound in mov outsb jle sub jle shlb xchg out mov add add movb fcmove scas mov andb inc int3 push icebp cmp leave mov sti cld or leave cmp push mov jmp imull jp mov pop mov les mov lds out mov (bad) div jae adc or xor popf fsubrl imul mov push jle insb mov sub inc ss pop decl (bad) xchg rorl imul mov xchg jno jle inc add call insl mov fisttpl sub sub cmc cs dec (bad) xor repz jnp push (bad) lods lcall insl lods cltd and scas out jle sub xor mov add popf jmp repnz xor push mov in dec hlt lods or mov loop sahf movsb push lret cmc mov jmp push and popf cmc mov (bad) leave xor xor xor int3 and mov dec adc xchg ficom (bad) sub or dec xor popa insb xor arpl insb adc add inc test dec les cmpsl push sub shll call sarl ljmp xchg es jno bound xor adc dec pop mov movsb ds stos mov mov dec cld aad and stos mov outsb mov jle cmp popa sub or jnp or and mov jmp ja cmp daa shr mov dec das cli sub xor jmp pop inc cmp sahf ljmp add mov fstps push pop lahf xchg sub (bad) pop dec sbb leave inc xchg xchg push mov inc lret mov fist or adc push jg sti push dec rorl scas cmpsb add frstor xor push cli or and test xor sti cltd xor adc mov push (bad) mov mov into aam idivl mov shrl movsl fisub dec aad popf dec imul xchg mov dec mov or leave pop ljmp das and mov imul sti push loop mov lods sub testl mov cli into lock out sbb mov repnz mov shll dec lret out lret or fsub jmp rcll leave outsb add iret xor jns mov rol xor xor lret les sub into (bad) mov cmp lret aaa int3 out mov dec add aaa insl out (bad) scas mov pop leave addb push daa adc jg lcall cmp fld lret sbb bound dec gs mov add fldcw js clc lret (bad) enter sti jmp jmp imul sub subl and or ja and sub (bad) jl sbb pop pop roll clc mov mov adc add and sub shrb out jb out dec jb push and bound cmp lock sbb into mov shlb into lea xchg push mov xchg inc or jg and xor mov jb movsl mov in das fidivl das add push jae (bad) xchg dec mov add xchg lret aam (bad) fcoml pop push daa neg popf vpsllq sub mov sub (bad) pop sbb mulb test mov data16 aad mov pop push imul xor dec push scas faddl adc mov jle pop fbstp (bad) mov mov aas test (bad) jae in pause lahf dec mov add inc lods jnp cmpsb mov fnstsw lods sub xor push negb out (bad) aaa sub ljmp imul push push sub nop popf mov dec mov iret negl mov mov in mov repz lret push or addr16 pop mov test cmp sbb sub xor mov jle sarl or dec dec cmp out out daa (bad) push xchg ljmp cmc adc cli repz sub js enter pushf out bound ficomp xlat mov movsl outsl mov bound (bad) cmpsl add cmpsl bound add push inc dec shr mov push js icebp add or sub iret pop or adc sub loopne ficom pop call and sub daa xchg lds repnz mov push outsl ljmp frstor repnz adc push je das loop cld pop mov adc adc mov adc hlt aas gs je mov sub push push sub inc icebp ljmp inc cmpsb call push je loop add or cld pop test fcoms (bad) stos cmp stc arpl (bad) jg adc into daa std push test inc (bad) xor fild movsb sti fs sti cwtl std push dec mov iret cmp xchg xchg into (bad) pop adc dec xor mov xlat into mov (bad) icebp lods es add insl movsb mov push add out and (bad) jge sub jecxz pop out lret popa adc and adc pushl mov std sarb (bad) add fnsave xor or push xchg cmp inc pop loopne pushf or jle and stos lods and push sbb dec or mov jle fsubrs jno add lds ds pushl xor jmp adc loop lahf xchg (bad) mov pop sti shrl stc adc add insb adc inc sub add xchg imul nop sbb mov aam push (bad) xor ret and cltd popf cmp mov shrb sbb out mov and mov inc fmuls or push cmp and (bad) or out aad cltd imul adc mov fist out mov jp jmp jmp scas xor xor dec adc out add lahf insb dec push movsb insb (bad) mov mov xchg lods mov add dec jo mov and xchg ja adc add xor fldcw lret cli lret stos sbb and fnstsw cs loope adc mov test (bad) push dec dec pushf xchg subl push lret mov inc add cmpsl sub aaa test and lods shl push mov push iret (bad) xchg fs push aas ljmp dec sbb bound xor pop lds test add stos mov jne jp cmpsb shrb jl imul adc mov or sti gs inc sbb and or loop sti aad mov push repnz jbe pop into ret ljmp nop xchg cs push and cmpsl bound cmp sub daa mov lcall sbb xor ror and and sub (bad) pushf and cwtl push sub sahf sub xchg and fstpt xchg push push inc adc mov inc into jb mov push mov mov dec mov lret jnp fnstsw sub (bad) repz jmp mov mov outsl shl adc (bad) cli xor mov push or add mov lods push pop out dec rep dec out mov push and jbe mov push popf sub pop neg jle xchg loope iret cmp ret or aaa iret mov cmp icebp jne xor sbb mov xor mov mov imul and or pop ss test fstps adc jae pop out pushf mov sbb dec xor or vmovupd repnz test push bound call fimul sub repnz dec and not loope cmp mov lock repnz pop call and and mov jg inc lahf insb lcall (bad) out negl mov jge add push jge negl ret jnp movsl push cwtl mov or lock cmp out xor mov mov cmp lock xchg inc push dec pop xchg push cs mov test inc test mov (bad) insb cmp mov icebp mov jmp enter icebp add jae sub mov inc (bad) xchg push lock in mov pop shrb sbb xchg stos sub sub add fs pop adc sub cmc loop cmp bound cmp push xchg jbe jb jns scas cld lds mov xor cmp mov pop repnz (bad) sti fs test inc ds sti inc jge adc mov xchg negl pop aas cmc fildll or push addr16 xchg inc lods push mov inc add ret imul movsb scas dec jl jno fs (bad) aas jmp mov jl out aad cmpsl repnz lea les (bad) idivb fisttp push pop add mov fwait sahf movsl fwait nop mov lds mov inc call jecxz mov out div (bad) scas xor mov (bad) dec dec mov sub sbb mov mov gs fs add leave mov cmp or and mov sar pop clc xchg xchg mov sub jne (bad) data16 xor out mov mov stos pushf pop negb loope (bad) repz push jle jmp icebp jp jns mov mov push adc mov notl loope leave add mov xor insb and leave push out inc dec adc push or sbb mov xor into mov mov and mov mov mov es sub aam pop sub and pop pop inc fmull in popa and in mov aam push sar icebp or int pop pusha push cmp mov cmpb xchg inc xor jno movsl pop fdiv pop push and xor mov les stos aas pop pop and lods xor les jne popf mov mov lret sub dec pusha dec lock xor mov sar out pop lods call xor in sbb xor xor jp or daa jne cmpsl pop xor cld sahf dec jmp dec mov fldcw fcomps gs scas gs and mov or jne xchg in cmpsl icebp or push sub scas aad cmp cmp mov fidivl dec cltd ret push mov scas pushf and mov push push daa mov cs sub fcoml push lahf jmp pop clc inc mov or movsl test xchg scas out pop mov scas ret ja pop pop ret ja dec test add arpl mov shrb or lds lods iret movsb push fmul jb or aam rol mov xchg jge test mov push pushf jae popa push ret and test aas lret and and test mov push dec lea xlat clc jg xchg ja mov mov cli xchg fs pop bound adc cmp into xchg or cltd and test orl paddusw sub or add jl fs adc lret testb pop and out cmpsl push js mov mov mov pop ret inc out mov jg subl daa xlat (bad) fwait add fidivl pop out sub insb inc mov push sbb sub insb mov les out fild (bad) ss or ljmp ss xor js (bad) mov jg rcrb mov sub movsb mov xlat int3 push and dec divb inc and jg pop mov pop sti mov pop add mov jg mov leave (bad) gs scas (bad) lock test mov into inc in aaa or mov or call pusha sbb stos imul mov popf shll add xchg (bad) and fcoml (bad) sti mov test pusha adc adc rol cmpb add mov add test ja (bad) mov xchg stos pop stos and mov int3 mov lahf jns push add out sbb je mov subb or push jge and pop mov and lock decb (bad) jle inc in jo sub push sbb dec es mov cli mov add pop stos insb lods xchg or pop pop push mov es (bad) xor pop push mov pop cli adc popa add mov cs das and ja aam rclb inc add jmp push push mov jl push push imul sub pop rcll cmpsb cmp mov std pop iret shr rcrl shl pop mov push mov aas nop gs push call out jnp xor sub in xchg push pop sub pop stc mov je pop in (bad) jae out test sbb xchg add cmp mov pop mov pop add insl inc cmp (bad) iret add call outsb add mov aam rol pop in (bad) and push push mov jmp or fiaddl pop mov sbb popa icebp pop stos push push or push adcl pop push xor rol mov loopne push xchg xchg outsb cmp dec dec xchg adc pop mov add pop cmp lock pop movsb test adc clc add nop push mov mov sti pop out stc or pop lods mov push mov ljmp inc xor mov js outsb repz pop cmpsl or out orl sub loope repz xchg mov push mov imulb sti ret pop inc fiaddl fsts (bad) cmc mov mov out adc or adc and lods cs (bad) mov cmp sbb dec loop pop rorl and jge push inc push xlat adc xor mov sub push sti cmpsb addr16 jg mov loop les cmp mov sarl pop outsl pop ror fisubl xor cs inc or mov cmp into mov clc das lret pop scas ffree cmp es push mov (bad) xchg ret daa mov ja dec mov lods add and pop xchg out xor pop popa pop sarl in popa add clc mov sub shrb dec jnp clc inc pop lds mov sub insb mov push in pop and or movsl into adc pushl (bad) loop jns inc sub sub out out sub pop dec decl push push sbb and lcall push in push mov add pop push mov and ljmp mov mov jge push cmpsl stos mov jae rorl hlt push mov daa or lret xchg orl sbb lods jmp std nop loop aaa rclb icebp cmp mov jp xchg ffree xchg pop jecxz mov stos inc or (bad) leave xchg mov stc stos lock push je inc or mov inc add jl popa or sub jno (bad) cs xchg adc sub divb stos jne stos fdivs rolb sar icebp leave aas out js pop adc aas mov stc adc ret jnp rcrl lret sbb pop fsubp push lock cld add xor xor clc aas fimul dec xor inc daa add and cld aam fcom sbb xlat lds es daa mov jbe dec shl sub aas loope scas xor push mov rcll mov cmp pusha pop fistl or iret mov xchg xor out into (bad) and daa pop sti jb lds sti gs mov sbb fist je mov out xor pop jno dec pop xchg pop into ret test int and or mov adc xor mull pop cli cwtl fsubr mov mov dec push mov ret adc mov rcrb or pop sub ss push cmp adc mov add dec leave cmpsl sub repz cmc sub xchg cld dec (bad) lods mov and xor jmp and (bad) adc scas je push fsts fdivrp cltd dec mov int3 pop shrb pop add dec sub jmp jl movsb mov jge and sbb das mov int3 mov (bad) adc adc arpl fstps and flds or dec lock sub jge sub idivb inc xchg mov mov mov rorb sub (bad) in out xlat xchg jmp push push push fmull xor add fdivl jnp das ret notl dec jbe sub and fisttp dec mov cwtl mov dec mov fistp repz or xor and lock add dec jb mov add sub jmp ret dec cmp aas int cmp push xchg repz idivb iret stc enter and ret das test movsb stos and and jnp aaa or dec or mov pop push leave (bad) negl popf mov sti mov sub jmp les mov pop mov dec pop out sub add clc out mov dec push (bad) bound int3 pop add outsb sub xor sub ds push cmc push or fist cltd mov and mov or sti jg inc pop mov lret push inc xchg fstl and into and jg xor or mov xlat mov xchg mov add or mov sub mov inc sub aad sub negl sbb loope into ss ffreep fisubl popa mov subl popa add movsb lds pop ds sub dec mov lahf adc cwtl and fwait clc imul xchg cmp (bad) mov lock sbb mov inc pop inc loope cli icebp xchg imul add das gs xor ret dec out lret aaa daa (bad) in xchg add mov xor or mov or or out mov xchg fs aam jnp push fidiv push dec jg fucomip jp fwait rcrl sub jnp lret fbstp clc sbb pop scas sub sti add testb add popf (bad) negb scas pusha or lret sub test into std stc jl add (bad) andl xor mov and pop lea pushf cmpsb push (bad) or inc rolb imul dec xchg adc test cmpsl and out dec add xchg dec popf jae das rolb add jmp std leave push jb mov (bad) push adc mov cmp scas sub pop add lcall gs mov imull inc call add sub and jge pop daa into add mov into hlt std pop ret push popf in dec test add xchg jmp enter shr (bad) shr push cld inc out stos fld xor jmp sahf xor jl leave jmp jb dec shrl jecxz cmp sub ss push mov xlat mov stos cmp lds mov loope inc pusha das jns inc or or sub sbb lea icebp inc add lret sbb outsl jl push sbb aaa pop (bad) ffreep mov cli adc push fiadd out jnp mov into popa ret jg and (bad) sub cmp mov inc or dec into mov cltd ds mov daa add (bad) cld in bound or (bad) enter stos fsts pop add ljmp sub xchg push and or push sub cmp js xchg mov insl gs ds push cmpsl dec dec shrb cld dec cs push out mov pop mov dec mov cs movsb stos into fisttpl pop in mov push mov and js mov mov mov sub xor hlt inc push sub sub xchg dec jmp mov call jns inc sub sub jmp mov rcrb pop push or sbb lcall and inc fdivr xchg and mov jecxz add and add aad int3 xchg jnp dec dec call mov adc repz sti in loopne outsb test ljmp ret pop pop mov push add xor mov fld push cmp sbb repz xor aas (bad) xor fs inc or or mov aas dec mov sub pop (bad) mov cmc xchg mov sub push rorl inc xchg push pop sub xchg (bad) test pop jae cmpsl push add hlt xchg lods ret rcrl test (bad) cltd xor mov sbb je pop mov jb repnz add jmp jle pop repnz inc xchg fdiv mov push push repnz xchg mov xchg cli mov stc mov lock jg fldl2e inc pop xor imul push pop dec out mov mov (bad) negb divl push imull adc (bad) stc ds pop and cmp in xor cmp std sbb cmp repz xor xlat in fdivl jne imul dec xor fs xor loop pop push fldl2t or sarb repnz into (bad) dec ret or push (bad) xchg sahf lods lods jns adc sarl vmovupd dec push test xchg (bad) cld ret push push sub scas xor stos mov sahf out xor into and dec push ret sub pop pop lret add xlat fwait inc pop in xlat mov jo lret add mov mov xor imul (bad) adc orb insb and or das negb cmp jmp stc insl int3 sub fwait ljmp pop pop mov dec repnz lcall into push jb out push adc stc add adc jne testb push es push gs mov mov add (bad) mov ljmp cmp out pop mov orb incl or and mul adc xchg mov (bad) mov (bad) iret cmp daa or push sbb pop mov les xor sub mov movsl mov sbb fsub adc movsl push jnp lea lea or (bad) aas push lret (bad) push mov mov xor mov fstpt in and or or cs mov mov or aam pop or je daa sbb stos xchg je out cli mov jge (bad) mov dec pop js pushf fadds rcll inc mov jg fsubl xchg loope add and or mov cltd dec sub fst xrelease repnz scas mov (bad) popa dec fdivp push xchg js mov add in adc xor mov push lcall pop mov xor xor mov xchg divb add fiadd adc fldcw mov adcl dec call jno xchg leave mov add push mov xlat mov xor call es repnz jne out xor mov fisttpl ret insl ljmp push dec out (bad) iret lds (bad) scas mov adc rcrb sahf adc jecxz js stc out int jp mov pop mov cmp xor icebp and aaa (bad) hlt cli stos fs mov and jmp push lods cmp out adc xchg cld sub and pop cmpsl push push or imul popf adc xchg (bad) fldcw outsl loop sar cwtl fidivl xchg fnsave mov or es ret clc sub data16 and stc gs xor adc ret testb mov jmp cli mov and ror inc test scas mov and mov mov cmp ds xchg sbb stc mov sub sub sub mov push jns sbb in add sbb js fninit popf jp lock sub dec test inc stos sub pop out jg (bad) lret aam and jne mov lret aam movsl jne ret xor jp popf mov ret subb popa repnz and ds mov aas bound (bad) repz push dec pop dec pop and movsl into mov mov pop push lahf scas jne sti cltd out (bad) insb rorb out xchg repz sub out daa adc xchg add lret xor cmp out outsb push stc xor xchg mov ret mov repz shlb push pop lret xor sub sub aam sarl adc and add push sub dec cs lods call mov sbb movsb loope cmp movsb mov out pop mov outsb inc test add stc or je popf lds sub sub jne clc inc sub inc adc or or pop push es (bad) push lods jae movsb scas sub and ljmp xlat pushf lcall mov jmp divl lods int sub mov mov out test sub fsubs ret mov scas test shlb xor mov dec inc pop or out pop mov dec fsub mov and push dec loop pop cltd jbe outsl hlt inc cvtps2pi mov ret add and mov push (bad) xor (bad) push lcall and pop std fs cmp jno add cs dec (bad) mov mov les xor jb pop add clc adc push mov jmp xchg mov fs mov sub adc imul outsl xchg mov mov and test scas sub mov pop imul xor fbld and mov mov test iret pop dec xor add (bad) or (bad) repz fidivr jmp inc lods inc and pop in or mov mov fistpl (bad) mov sub push push iret popf adc xchg push pushf (bad) push or lahf jmp cmp jno not inc jecxz je bound and movsb xchg leave dec pop sub repnz insb xchg movsl cltd add and push stc nop imul xor adc fldt in mov outsb dec idivb sub idivb hlt pop sahf popw mov xor jmp jmp push mov inc xor nop imul std daa (bad) enter inc mov pop in adc scas fldl out xor call in sub fs push aad bound jmp push cld dec mov insl ret fcoml jmp test loop cmp push jle insb push sub xor adc (bad) mov ret add mov mov jmp jmp pusha pop stc cmp sbb test popa loop pop pushf push lret das ljmp ja mov push cltd sarl add add jno cmp xchg mov adc mov sub fstpt lock iret mov pop mov cmc jle mov lret fistpl sub cmp mov mov sub cmp icebp inc and mov je sub and (bad) xor in pusha sarl or cmp es jmp mov addr16 movsl sub pop (bad) dec lret mov push cmp lret push fstl lds and and cmp inc xchg scas cmp pop inc test jb lret xor or std cltd insl cmp sub mov lods fwait and (bad) int3 or inc jae pop fildl add lret pop stos sub xchg pop mov sub and shr xor add test shr pop cmp jns es ret and cmp sarb sub dec jmp mov call lods dec sub dec sti xor icebp mov sub (bad) out notl or or cmp test icebp mov cmp pop mov mov repnz dec leave pop dec and xor push lret mov nop push xor leave inc ss mov inc daa push incb sbb pop lcall in inc xchg test popa push pop outsl sarl icebp movsl pop add bnd in mov icebp mov pusha gs dec inc inc mov cmp xchg mov int add stos mov jge cltd xor sub push jmp ja decl ss imul push sbb pop pop jl cmpsb sbb shlb leave jle jb aaa leave inc cs mov pop (bad) negb sub jg mov push lret adc xor lods inc xchg loope sbb (bad) sub and inc cmp push dec push dec or or jp pushf out test ss dec or xor push gs mov fsincos xor mov sub jmp movsl bound pop faddl push dec push cmpsl inc inc test cmp stos ds out pop push pop push lahf cmpsb insb jae mov pop lods leave and aaa xchg jg inc mov rcrl add lret div mov ljmp ficoml neg mov cmpsl (bad) ret xlat mov pop cmp fwait aas icebp sub sbb sub out mov xchg add rclb inc sub movsb out inc adc mov mov jp add je ds mov mov (bad) jmp lods (bad) mov sbb sub adc or jp iret jg sub inc mov mov aaa mov test out cmp rcll xor cltd cmp mov jbe pop sub sub adc mov sub jmp gs push add jmp dec mov loop je cmp iret into add mov pop (bad) mov adc scas xchg cltd fnstcw andl (bad) mov jmp cmp push arpl and dec loop jne cmp or pop or xchg pop out bound inc xor jnp dec mov (bad) adc jle jmp cmp sbb (bad) dec sbb jns es in inc or daa lret add out out dec ret push inc enter inc repnz stc cld aam les cli mov out popf std mov popf (bad) mov sbb dec scas push cmc jl out psrad cld dec test push push add outsl in inc or mov cld push loop jl stc add imulb xor dec xor lret mov pop mov out gs push push xor push adc repz adc push jmp loop sub ljmp data16 lock mov sbb xchg daa adc mov xor sub jnp pusha jmp cmpsl aam or add mov lcall lea pop call mov and mov (bad) lods out pop push leave idivl loop pop cld push (bad) xlat outsb leave push sti sub xor addr16 inc mov cmc sbb popf cld cs shrb sub mov das mov xchg aad add xchg lret sub inc or and shlb push dec sub inc inc cmp (bad) insb ja xorl push pop and daa jae add mov lds or push popa or ds dec into mov inc sbb inc dec mov lahf pop test lret lock adc (bad) aaa cmp imul mov icebp ja sub cwtl pop adc xchg pop jns out mov out pop or xor push pop adc mov dec mov pop dec mov xor cli push out dec lret imul jp sahf fiaddl das (bad) xor out mov cmpsb ficompl shrl mov sbb into movsl ljmp dec pop pop cld testl pop mov (bad) mov vmovapd imul adc scas or iret push push popf xor lods (bad) movsb (bad) lds xlat loop mov inc push push stos out mov mov adc clc (bad) xor rcll and loopne addr16 sbb mov pop fiadd enter outsb xchg cs mov fdivr add push dec incl les mov xchg negl das ljmp xchg dec cli lret mov rol adc mov rorb push sbb xor out dec sub mov mov dec leave rcrl add shl jnp jg push daa xor mov dec dec out mov stc push sub mov out pushf es add xor (bad) je mov aaa adc shlb outsb call jg lcall sub stc fidivrl pop pop lock adc xchg int3 mov stc or cmp (bad) add cli int3 gs xchg pop xchg cmp xor mov les and or outsl cld xchg test mov mov popf sbb bound push cmp popf aad pop sub (bad) pushf and and mov in jmp mov push xchg pop sub mov clc pushf test dec jmp shlb mov xor and nop mov ret push jbe or sbb stc scas cmp nop lods sub and out mov push mov popa out mov shrl push and nop push nop scas dec hlt xchg cmp daa icebp jae cmpsl jle pop push jg pop in push shrl gs adc dec sub xchg cli (bad) fild jecxz inc je push pop or loopne sahf push pop dec xor push loope cmp lods call test cmp jge dec lods ret cli lcall sbb loop cmp pop (bad) mov add mov notl int lds in dec dec mov cmp mov push sarl rol or xor add xchg inc adc or mov ds mov add rolb enter ljmp pop sbb (bad) adc leave ffreep xor sub add add daa imul bound xor imul sub pop xor in ljmp cs mov (bad) add out lret in negb aaa aas outsb mov fbstp add jne std jle ret cmc (bad) and fldcw daa pop jae notl movsb in daa aam ljmp lea xchg jmp (bad) sub test and dec rep lret hlt and das (bad) xchg add dec in and mov cmp ds jg add sbb (bad) imul fstps cli mov mov add sub xor lcall cmc cmp jo mov (bad) mov arpl ljmp lret into xor call sub xlat dec jecxz pop sub jmp clc add sub or (bad) cmc cwtl pop es jne xor sub push sbbb and sub clc ds hlt pop pop xor dec movsb mov popa out or mov cmp pop rorb xor sbbb fucomi mov into mov mov jge mov dec xchg fsubrp jb sbb loop lock sub mov jbe xor aad adc push mov (bad) leave jl data16 jp bnd mov and adc mov popf outsb stos sarb cltd imul jnp sbb (bad) sahf xor jbe (bad) std ljmp lret dec test dec (bad) xchg decb insb mov jecxz (bad) les popa rclb das push dec xchg xor sub cmp pop jle fs out mov dec cmp sbb inc add adcl mov mov movsl test jecxz lret rcrl aad (bad) outsb das fcomps push xor cli int dec incl and xchg dec (bad) xchg test jae fnstenv clc nop mov xor pop cmp pushf xor mov push fs out aaa jno push sub xchg call shlb sub sub test scas daa clc and xor mov jae or std andl rcrb cmc or push jae xchg (bad) test mov push jmp icebp jmp loop mov testb out mov pop (bad) sti xor sub ljmp push stos out imul dec xchg mov and (bad) inc leave aad test (bad) shll out je dec lock xor and push nop push jo mov dec pop or shll inc outsl ret mov push pop mov sub mov inc scas mov jp sub mov cli test jmp lcall add adc mov (bad) idivb and pop sub ljmp mov sbb ret mov cmpsb mov into pop mov and dec or xor mov mov rcll aam dec mov adc test pop loop (bad) jb or loop mov and or cmp pop sar fstps loop pop jecxz and push int3 outsb iret mov cld cmpsl inc cmp add out icebp test add push popa dec ret out ds and inc ret out jns sub push call ds fistp push lock mov loope xor call and outsb sarl sub jns insl sub add stos bound call mov rcrb (bad) in shrl adc out pop leave cmp iret or sub sub fistpll xor fistl ret sub out pop xor add lock bound inc outsl sub add aas scas pop sbb inc movsl jmp imull xor ds fcmovbe test mov notl fildll ret cmp setne push out cmp lret out aad mov icebp (bad) adc (bad) mov es loope cmp (bad) ja push jo loope jmp neg inc dec push outsb clc aam test sub pop lock inc mov lds dec or fxam movsb repnz cwtl and add mov xchg sar daa cmp outsb fldl inc dec or mov xchg inc mov xor jnp scas fisubr push inc push xchg (bad) (bad) sbb js pop loop sub mov jnp jecxz ds lods lea shlb enter (bad) inc out pop cmp or mov aaa lcall icebp mov arpl or mov int3 leave stos cltd push xchg (bad) xchg sub dec dec shll lods pop lds adc popf mov fldl ss mov dec pmaddwd dec push in mov add aam pop mov sarb subl loop push (bad) aas jb sti sub movsl imull aad ret sarb pop mov in movsl (bad) dec iret pop arpl sbb and in out movsl gs mov xchg cmp push (bad) rclb cmc out dec popf (bad) dec imul ja in fs adc cld adc clc cli aaa jnp cli add outsl int das test jl mov xchg mov xor into cmpsb lea and jle fs daa mov inc sub xor add shrb mov int pop loopne lret lock bnd mov ljmp mov stos jno cmp xor in shll iret stc gs sbb outsb ret dec (bad) and (bad) sti rol fs xor (bad) loopne lcall repnz fsubp fs fadds hlt out jmp daa cmp adc cmc jno shll mov in push dec mov and (bad) sub xchg inc fistpll in cs and cmp daa xor inc repz mov (bad) rcrb and adc mov imul or jnp lcall ljmp scas cmp cmp test lret lret mov or lahf adc lods jb cli aaa imul mov cld ds std xchg ret xchg aam inc aam and fidivl mov xor js push xor lahf insb lea lahf pop loope out mov jbe mov adc mov add xor ljmp lret jmp pop mov inc sub pop dec jmp push push inc daa rcrl push cmp adc in (bad) jno scas test mov (bad) popa jo or mov js rorl and cli pop jmp inc aaa mov lods cmp int inc repz scas gs mov out clc push leave mov or cmc into (bad) (bad) popa pushf adc pop mov ds jg and rorb (bad) mov out pop cmp sub jecxz mov (bad) scas pushf ror mov dec shr mov inc dec add (bad) dec fdivrs and imul add fsubl add xor testb push mov and pop jle imul int3 cmp mov and xor inc mov fldenv and je push enter mov xor movsb jp mov dec lods loop test cld jnp fbstp cs (bad) lret int cmp fsubs loop jg mov mov pop add jmp std in pop pushf jne mov push test iret fisttpll clc ss adc pop enter fnsave xchg xor mov hlt inc (bad) daa pop insb mov repz cmp add pop mov jmp cwtl movsl sbb adc cmc inc cmc or or mov loope sub mov adc sub cld enter outsb loop xchg jmp cli imull stc movsb stos andl ja daa cltd dec shrl loopne pop jle or cmc sub jno iret or push aas add and push shrb icebp sub outsb subb insb (bad) pop jmp ds mov xor jbe mov iret sub adc popf repz loop negl add mov mov mov mov notb or loope pop into sbb inc push or sub pop xchg les lds mov jo mov inc ss xchg addr16 and pop adc xor pop negl push sarl add push jbe movsb fwait das push adc or aaa and (bad) jnp clc or stos out pop stos rorb sub xor clc call call (bad) mov xor or mov iret or mov out movb add push xor (bad) je loope jle pop lods out jb xor (bad) mov mov inc xchg ljmp lcall clc push jg sub xchg xlat mov (bad) popa push jb mov dec bound xor loopne out out sub dec mov xchg es or repnz pop shrl into cmp jns mov in push or and ja lret nop insb das arpl adc jg xor sarb add sub xchg or mov icebp aaa outsl clc or xchg into int add xor jmp mov add mov dec sti mov (bad) mov stc and pop sub fs test and sbb dec lods cld fcmovb push mov or and loop loope jae std push ds pop lods cmc mov dec call mov xor xor xlat mov imull das sub add sbb xchg push gs push push adc mov mov hlt (bad) rorl jne int3 inc mov out add push pop ja lea or testl scas lret ret dec icebp imul mov sub dec dec cmp dec mull and popa mov dec adc cmpsb test scas mov xor mov xor mov sub jnp adc push sub repnz dec and imul mov inc sub ja mov ss push mov faddl mov sub in and jge les lock dec (bad) dec pop imul push aad imul xchg push pop xchg popa dec mov add ljmp mov leave mov and sub adc jmp push or mull sub lret out sub cs inc icebp movsl jge mulb and pop xor xlat out jecxz das (bad) cld ret xchg or divl mov xchg or pop jbe push pop push out adc pop scas fs scas xchg or mov xchg mov xor imul or inc daa add cwtl adc into js sub scas fs clc lods mov ds sub dec jbe ret repz jmp sti (bad) mov bound mov pop xor std out mov sub fcom mov add out mov das and mov mov or add push data16 mov call sub int3 loope dec sbb xlat scas cwtl inc out fdivr push pop aam icebp out fdivr sub add adc mov out xchg jns imul in lret in xchg loope cmp iret sub sub lea cld add cmp test test mov mov and jecxz and add enter and mov js lods addr16 push sub fstps pop xor mov or daa cli or and mov pop dec test je daa push scas mov cmp je mov daa stos sub and inc icebp pop jbe int3 sub jmp or push punpcklwd stos gs ja ret loop ja mov jle push (bad) mov pop pop fisub add cmp add gs add xor loop leave mov in pop xchg add sub ret pop out lods lock dec jecxz jb sub gs adc cmpsb cmpsl cmp mov pop inc xlat rcr imul es push add (bad) lret movsl jne push push lds xchg and or xor inc ret jno jmp setp fsubrs mov fcomps movsl bound leave fsubrl xchg fbld jmp shrw or jnp shll not cmpsl dec test hlt popf (bad) jne in and (bad) (bad) push cs and cltd pop shlb push cmp sub movsb (bad) js xor repz lret bound push adc das mov iret lahf push xchg int repz fnstenv mov sub (bad) dec or jbe mov fimul (bad) fldt inc add ljmp inc sbb mov jne jb ljmp inc or repz sbb cli adc inc jg scas fisttpll into mov or sti cmp and sbb lods mull mov mov clc pop bound and cmp sub xchg (bad) sarl push sub idivb xlat call lret sbb out (bad) push push jmp mov fist out xchg jae add and lret mov (bad) fiaddl cmp loope sub cmp stos fnstsw jp popf add pop xchg mov mov cmp and jmp mov sbb jl notb pop push hlt jg dec jmp sub sub rep sub jno cmpsl ret xchg adc call pop mov inc xor inc xor pop xor js rep or add (bad) cmp pop push mov (bad) popf in pop mov xchg ljmp daa (bad) jp fwait in mov fstp outsl cmpsb lods dec mov cmp test push mov das xchg sbb sbb (bad) push sbbl ljmp adc dec leave xor adc fnstcw sbb push xchg xor sbb pop pushf pop sub pop in in shll ljmp sub pop cmp cwtl inc subb push shlw incb xchg add sub cmc ds adc out loop les mov xor lea mov stos dec jno dec std mov mov dec jg mov mov ret push leave inc sub dec stc into push dec sub mov into mov mov aam lret add mov fnsave pop mov xor or daa xlat mov lock push imul imul gs xor mov mov sub xor add das ret aad in fisub or or dec in das mov xchg adc rolb call shll xchg loop lret jmp stos cmp sub mov or pop mov scas (bad) into push jbe cltd out and mov and pusha pop movsl adc popf push lea pop inc mov sub pusha or or popf fistpll xchg push pop sub int3 and pop mov xchg rol imul push shlb jbe xor add popa daa sub scas adc mov divb out inc ljmp push movsl push xchg push pop (bad) push (bad) int3 (bad) or mov ficomp (bad) mov into push mov mov adc cmp jge (bad) mov add (bad) aad ret xor lahf push xor lret jno dec jmp push pop mov ljmp scas pop imul fistl and imull mov lret sbb test push fcmovnu push xor mov mov pop sub mov and cmp ret rclb or xor mov pop and jmp shrl ljmp insb xchg pop sub add fsubs enter xor (bad) mov mov or lods adc ljmp mov shl pop (bad) jmp jne cwtl and pop clc mov pop mov pusha sub or leave fisub shll fiadd lock dec movsl icebp mov xor sub cli dec jle fisubr test ret dec ljmp mov sbb pop add or xchg push (bad) lock jge xchg jmp mov ret xchg cmpsb icebp sub push popa dec or leave mov dec pushf fmuls sub into adc scas aam push or notb repnz add lahf push sbb dec push and mov sbb and das lret fstpl xor mov xchg in pop lods shlb fisubr sub dec xchg xor mov sbb imull aad cli jb rcrl daa out add jb push jae mov cmp add insb pop stos sub jg (bad) (bad) mulb xlat pop pop mov fidivrl daa repnz lods pop (bad) push insb (bad) push fmuls adc xchg repnz mov jnp mov lcall dec lret out and shlb xlat mov push dec add ffree aas (bad) mov stc shll lcall scas adc in adc and or jb sarl mov shrl and cmc xor in mov adc xor add xor sub jp and cmp sbb push pop and jle inc mov mov aaa dec jae imul shrl push or divb cld inc or push jns dec ja in dec xor sub ss imul and jmp xchg (bad) mov xchg pushf pop adc test dec and and add push pushf mov mov mov arpl pop sub lret lcall into bound fstpt ret pop push pop stos add sub xor sbb push sub aas ds and loop add loope add or aaa (bad) movsl loop jb sti xor add mov cmp (bad) fcom repz pop imul sbb sub pop loop sbb mov mov dec adc push xchg fnsave xor das xor push mov jne repnz shll out test mov jecxz clc pop mov xor clc fmull push xor xor mov sti sub dec pushf into add inc loope jp in scas jno xor cs subb inc stc jnp (bad) mov fisttpl cli mov mov add bound xlat mov (bad) sbb add pop jl push mov mov pop sbb inc mov push jge shll sbb fdivrl add js pusha (bad) sbb popf cmp mov xchg jae xor ja ja (bad) xor or rcrl mov test mov mov mov lret and push out jp pop negl addr16 shll repz inc xor sub push roll push xchg out (bad) cmp pop (bad) pop sub insb iret iret repnz (bad) lar jmp roll mov sub out xor dec and mov or repnz lahf cmp jne repz adc cmp dec mov (bad) push stc test and arpl dec adc inc xor (bad) mov divb inc cmp cwtl adc out adc bound in sub sub inc cmp cltd mov js repnz outsb dec jl sub dec (bad) mov aaa dec divb dec js loopne cwtl xchg lahf cmp aas cmp push xchg mov fstpt mov sub or inc push sub jl gs push jbe cld add iret rolb xor or scas (bad) cmp fildll and in sub movsl fcoml xchg add cmp and pop push pop test mull and adc push out xor aaa pushf loopne mov je out test sub iret outsb cmpl loopne xor jge push pop or sarb dec loopne shll (bad) xor into pop cmp ret dec or jbe inc aas jg xlat repz jo (bad) mov (bad) mov sbbb push rcrb dec pop out (bad) icebp push or movsl out jnp jnp adc push dec or xor mov test rorb xlat mov les mov lods scas mov jmp push push stc add adc sbb push (bad) mov push outsb sub sarl sub add out bound stos sbb push inc gs push add call (bad) test xor inc negw adc jp mov xor mov push out mov jmp jnp xor nop xchg or stc mov mov sub or das mov lock cltd add jle je jg push push in inc xor in pop adc sbb dec xor push fistpll scas and sub cmp les jbe ljmp push out jecxz xchg cli xchg add mulb fmuls out gs mov adc pop sub movb xor push out mov xchg jle pop sub (bad) jo push lcall cli popf jnp xchg mov dec mov jb out pop bound mov ret aad add nop loopne push cli and xor mov dec fidiv in and ret add add test (bad) add sub mov fild es add popf enter adc jmp das sub or cmc add ret cli mov jnp sub xor roll (bad) aad push fdivrl gs adc mov loop and add mov dec cli mov add lcall push popa cs stc outsl imulb ret jl (bad) cli sub and int sarl outsl mov inc out mov cld push cmpsl rorb rclb ljmp ret push call xor cmp sub notl test fdivrs iret xchg lcall pop jmp arpl (bad) ret jbe push push aam ret aam inc sub jbe fs out pop sbb aad sub xchg jo dec dec and xor pusha xchg inc sub (bad) ljmp aas addb cmp mov je mov dec call and push cmp mov xlat roll out inc mov xchg sub push scas sub and ret pushf xor push cltd test aas fwait out mov sbb mov xchg gs or ret ret jecxz sbb sub aam xor and or mov movsb mov imul mov lahf aam push pop or mov pop mov or sarb jle leave pop sbb cld xlat loop and rol add mov jg clc lret aaa test or in insl dec das mov adcb xor stc (bad) sbb cmc jecxz push js shr popa jg push rcr add out cld insl nop sub or mov bound or xchg in mov fistp lret pop pop aad xor mov adc lds lds out jg imull add leave and or rcrb mov push test movsl int sbb leave push push insl mov nop or mov inc sub and rclb xlat pop adc mov repz mov outsb or stos test mov mov pop mov mov add dec jne add push sub or push mov ret sbb dec jg xchg jmp and xchg pop pop xchg adc add push push stos cwtl xchg mov xor stc and jne jg out push inc pushf and bnd idiv jl push addr16 in add (bad) jge repnz div lods pop jg inc not iret xor adc or cli mov push bound (bad) leave adc mov arpl in jg add pop (bad) loopne sub inc fcoml mov mov cmpsl loope (bad) mov jecxz mov add loopne pop and or inc mov sub arpl pop pop push adc mov sub iret dec icebp out sub pop pop xor out cmc pop sub enter std imul xchg stc add sub push pop or ljmp or xlat cmp (bad) mov jge sub fildll (bad) jno pop (bad) push push jne (bad) das and (bad) out add xchg mov iret cmc lds out clc call inc push sarb sub push incl mov cmp movsl or jge lcall sti (bad) in dec mov xchg ljmp loop (bad) arpl sub xor sub xchg jne pop cmp repz or add or jl push rep aaa shrl cmp dec jle xchg cld lcall mov addb xor sub lahf out and cmpsl sti frstor or mov (bad) jmp adc mov int3 test mov scas push mov mov xchg cmp jo push add aam mov push mov cmpsl (bad) jmp add test sahf pop and sub sub popf lahf mov lods cmpsb sbb pop adc lds pusha lahf add mov lds mov cs jl push adc les cmp leave and xor stos ret jbe push push outsb ret int3 imul notl mov (bad) mov stos add add mov adc (bad) xchg fildl in sub scas sub icebp (bad) insl (bad) xchg loop daa xor cltd in push or mov das std test xchg inc mov xchg (bad) mov stos add adc roll sarl cli xlat neg mov push cmc jno cmpsl jge not pop hlt xor xchg out dec (bad) negb xor ret int adc lods imul cwtl outsb iret lahf icebp mov cld imul mov in or sbb decb push adc or dec movsb (bad) repz incw ljmp imul cmp fstpt mov aas add inc rclb fcmovb cmp movsb jmp adc movsl cld ss gs and ret or cli adc bound push data16 xchg jl xchg call add and je hlt insl subl jno jle xchg aaa ljmpw sbb mov pop xchg aaa xchg pop push sub push xchg xor (bad) iret cs push jmp fdiv push mov fwait jae mov cld mov stc bound fistpll push fwait inc jge xor sti dec ja mov stos daa jne ljmp imul je and nop push sahf xchg ljmp sub push sbb jmp push xchg xor fcmovne out inc mov repz negl adc sbb dec ja lea mov lahf jns scas xchg inc and push test (bad) (bad) mov xchg (bad) js and iret pushl dec aas xor test stos sub fs cltd pop jmp repz xchg or pop pop push dec or dec sub sub jge inc dec adc adc push pop sub mov (bad) lret fidivl dec and popa nop ret xor mov cmp ja daa out inc lret mov sahf ja out sub (bad) sub lahf into rcll movzwl fisttpll mov sub pop sarl xchg adc scas or mov repz adc popf add ss fwait pop push mov lret incb bound and daa or repz loope adc mov mov add pop and scas fs int das mov test and lahf push fcoms (bad) out jb icebp xchg push jge (bad) lods inc aas dec stc test pop mov jle fs fsubl movsl sub leave add (bad) addr16 cwtl add inc mov or mov mov arpl xor sbbb outsb mov lcall repnz mov out cmp xor lcall inc or ret je mov test out and hlt shll (bad) jne inc or sub (bad) or xor pop jnp inc fbld sub mov loop pop inc loop scas fadd jecxz (bad) xchg ret std int3 mov or or xor or mov dec lret fcoms adcb repz dec add incl rcr loop bound cmpsb clc pop push xchg mov (bad) (bad) cmpsl outsl or aad push sbb (bad) jo pop dec mov outsl lods adc fsubrl mov insb adc jecxz xchg icebp (bad) inc sub push imull mov inc and xchg clc dec dec out jno ss shll dec and mov xor std daa sub pop pushf movsl xor mov imull inc sbb jg xchg outsb test stos clc faddp adc das icebp mov xlat stos insb push and adc push pop cwtl (bad) xchg dec cs out jnp and lret mov shlb mov xor xchg jl imul les call daa cmp or cmp or mov lcall fdivs and and or lret push leave fistl xchg lret add (bad) dec mov and cltd dec mov add cwtl adc fsubrs mov ret inc popa jl pop ficom and xor inc adc ret out pop rcll (bad) adc cmpsl push inc xor insl mov mov sbb popa movsl xor jnp lret out cli mov xlat mov test adc pop popf (bad) leave sahf js sbb dec pop xchg repz push mov add ds jp push imul sbb fsubrp mov xor shr cltd push mov add inc push mov out jle push rorb lea loop adc add popa (bad) add call pop jecxz xchg inc fbstp add or shrl mov mov repnz push jnp aas repnz inc call jno dec fcompl jp in cs (bad) mov adc stc mov lcall jne lock jne dec mov imul add icebp rcl push mov inc mov icebp pop fistpll dec leave call out add adc xor xor dec mov les jge sarl jnp or mov pop sbb mov sub xor insl push sub scas mov jg int3 sti pop push jmp dec cmp pop mov outsb cmpsl ret dec enter mov adc arpl jb or shrb sub stos mov das pop lcall jp pop (bad) scas sub repnz sbb mov dec xlat pop (bad) imulb xchg (bad) xor xor gs sub movsl stos test mov jmp mov lret jg pop (bad) sub sub or gs lahf mov jnp pop mov js movsb pop repz inc pop pop clc dec mov and xchg xor add mov or repnz mov sub pop mov das add sti daa adc mov mov scas repnz xchg mov mov bound (bad) jnp mov xchg sbb out sub dec fdivl loop repnz and inc in out adc mov or jmp or into int3 int cmp sbb pop dec loope jns pop (bad) add scas daa lret jns dec pop test sub aad cmp sub push or hlt jge lock pop movsl mov test dec or pop ja or stos mov ss sbb push add gs loop lahf scas push sbb mov xchg pop lcall xor das xor insb dec sub inc mov mov dec mov jecxz mov test loop push xchg push (bad) in push jg repz arpl lods adc rcrl leave leave roll cmp sbb pop xor pusha call jg lcall or lahf lock adc xor pop sub gs das sub or adc in cmp repnz mov int and cs dec (bad) jo test std jle xor and mov jecxz dec lods loopne in test sub icebp lahf (bad) mov or rclb outsl daa mov mov add aad cmp (bad) icebp cli popa fnstcw ds adc sbb cmp lods xchg loopne mov or lret push mov mov (bad) sub ss mov aad sub jg stos xchg pop mov sub (bad) jbe jb inc or pop ja lea into xorb (bad) and ret stos lret nop cmpsb dec lahf sarl imul xlat inc (bad) popf pop sub fucomip rcl loop xchg (bad) xchg inc add or clc push mov push pop jnp mov lods out xor cmpsl adc jmp fstpt xlat jno lret (bad) in popf into ds fldcw jb movsl dec cmc outsb cmp iret fsubrp std pushf rclb dec (bad) sbb fcoms mov pop mov addr16 or shrl bound aam fbld pushf mov push pushf dec stos lret aas fmulp enter push popf dec mov mov ret daa add adc scas jge jb and cmpsb and push mov sub sbb push mov dec jmp (bad) lds (bad) mov mov in leave iret pop jmp (bad) or notl mov inc mov inc cmp mov push mov test mov push dec push int3 pop xchg ficomp pop sbb lods stos mov sub jno (bad) jno lods movsl aad lret arpl xor xchg int add out pop lea stos test lds add test mov loopne cmp inc add jne loopne inc orl mov push or push in cmp sbb lock pop mov jne sbb adc inc je xor jnp or jle xchg mov enter (bad) xchg xor insl out adcb pop add xchg (bad) mov movsl in xor xor test mov pop mov or and subb stc mov add sub jle push leave lret fild adc in sub and out clc cli mov mov repz adcb push enter cmpsb dec jno fldenv js dec jmp loop lret (bad) lds pop fstpl lea lret sbb or leave and stc mov cld inc mov cmpsb testl dec mov xchg cltd mov shrb ficomp and jo cmpsb sub loope into imul cmp pop inc inc or push dec (bad) xor sub lods dec xchg mov outsl imul lret pop movsl into cmp pop or sub lahf daa gs addb xchg push sub pop and mov ret jg inc (bad) sub or mov push mov push insb push mov add leave or inc pusha pop mov mov daa or lcall aam loope je add fidivrl sub push push jmp cmp rorb in pushf lahf sahf test jmp mov dec ljmp add js out ret aam push mov mov movsb xor test pop (bad) out lds push cmpsb or xchg scas sub mov test pop xchg adc bound cmp sub xor test jae out aaa (bad) imul ljmp adc and inc popa fs xchg scas cmpsb jl in or push push and dec dec icebp das imul lods lcall mov or mov (bad) test xor fiaddl lods loopne icebp and rcrl push mov push or sub mov pop add fadd xor fist sbb mov xchg in nop cmpsl data16 or (bad) mov (bad) cli (bad) mov js mov (bad) and or adc inc add pop add stos cmp dec mov sub jmp movsl cmc mov inc add imul xor mov ret movsl leave adc icebp inc mov into cmp or push xor mov popf das add rorl sbb sbb mov leave iret pop cmpsl out xchg setbe in inc pop mov stc lcall jo mov or mov ret pusha xor xor jb fwait sbb jmp and xor pop outsb jmp movsl push ret push xlat pop sub pop sub sub jns lret and icebp dec gs mov rclb xchg fist mov sub repnz in movsl xchg stos leave add pop ds push aad in test out sub movl add arpl leave dec data16 std jp divl sub jns icebp xor xor les daa out in sbb xor cmp sub in lret cmp ljmp scas xor pop xchg jmp mov xor or jg sub add loope and leave mov and xchg jecxz leave call xor repz xchg test adc jmp xlat scas or dec pop jmp jns imul lret inc mov xor fstps mov mov dec jecxz cmp andb dec mov adc add insb xchg sti mov pop lahf bound push (bad) mov popf test movsb out jb push pop dec dec lret pop rorl stc in mov dec out (bad) gs xchg test jmp popf fstl mov cwtl out shrb fstp bound into ficoml cmpl scas (bad) aam jge cs and push push pop mov mov add and fnstenv das push push out jle lret ret cmp int3 (bad) pop rorb mov push ljmp fdivp pop into (bad) mov jecxz adc jmp mov sti outsl fnstsw adc loopne mov mov push jl das jbe jmp pushf pop cmp ret dec cli sub lea les aam mov mov mov inc sub inc add sti xor (bad) insb aas in leave jmp pushaw pop sub xchg popa push (bad) sub cmp stos xor ljmp inc in xchg lret loop push in out out lret leave jb lods mov addr16 popf dec jp negb mov mov sub mov inc pop push add jb ret divb jbe dec inc xor and xchg jmp gs call mov jecxz pop pop mov daa repz lock and lcall iret and pop fdivrs add jp xor xor mov idiv ljmp sbb mov (bad) je push leave stos pushf cld idivb sub xor sub or fcom out aad mov mov lock cli (bad) ja push jmp incl test out mov xor sub sub in push cmp pop or lahf jle push and lods nop lods (bad) (bad) arpl vpsubb jmp sub push inc repnz mov adc lret iret ljmp push call mov movsb adc dec fisubrl jg pop movsl lea mov mov jl push imul mov (bad) jecxz and cwtl add xor bnd imul mov pushf call shrl or scas hlt xlat shll mov dec mov add pop mov pop hlt cmp xchg xchg xor sbb xchg movsb in jne or sub leave lret mov or or inc xchg in sbb and jo mov mov call lcall bnd xchg sub adc stos dec jg das push add add jbe lret inc aas ret xlat movsb stos loope outsb mov les roll cltd mov xor out repnz test add frstor pop clc inc scas fidivr xchg jne mov int3 mov mov enter call (bad) adc leave ret std in das (bad) pop sbb mov xchg mov mov add iret and xchg imul and popf cld inc push out lret adc out or sub (bad) adc out mov jb mov daa repz cmc inc repnz lahf sbb loop fild scas and fldln2 loopne ret jge rorl cmp lahf (bad) xor adc cmp test lock std mov cmpsl pop pop lcall in repz dec xchg movsb mov xchg sub push dec mov lret cmp and popf jl out lret iret fnstcw or xor (bad) jp xor xchg (bad) xor leave dec aam xchg dec int3 mov js std das ljmp or scas bound push pop pop fs cwtl decb dec adc xor or fisubrl lret adc cmpsl jle adc cmp xchg or inc xlat add sub out cmpsb ljmp aaa das mov into sarb and adc (bad) pop xlat movsb mov xchg ljmp aas mov daa iret jne cmp inc push test shlb cs push jnp fincstp (bad) (bad) lods mov mov push xchg ja push stos mov bound iret movsl repnz pop jbe imul and bound ficom jp push movsb lods mov push imul aas stos or jbe jns sub sahf xchg mov xchg (bad) and (bad) xor fnstcw pusha inc stc xor sub out mov inc sub shrl mov mov mov and aam jecxz cmp imul adc inc repnz dec cld iret lret inc sbb lahf fcmovnu or xlat push dec or push sti mov push xlat or inc imull push cwtl mov push mov mov mov bound sbb and mov std ss mov mov xor xchg xchg subl lock cwtl xchg les push fimul int3 decb inc mov inc cmp adc or cmp push add repnz xchg mov xchg lahf add daa adc mov xor lret sbb test sbb jno cs mov test xor mov data16 sub sub testb mov pop stc es jmp xor sar pop pop mov into mov cmp lock int3 mov add and dec mov test pushf test (bad) mov pop divb imulb sti das mov dec lods ja sub gs jbe mov xor scas std cs dec rcrl mov jmp bound lcall sti mov pop out dec fcompl inc fldenv xchg out mov lcall dec out jl pop mov push dec (bad) daa pop pop fcoml call cmpsl jg bound jle sbb xchg xchg sti mov rorb fs test sub out mov and bound and mov inc daa inc mov imulb repz pop out mov (bad) mov inc push fwait insb mov xor mov imul pop and or xor sbb das test scas fsub jmp shrl sbb lcall mov xor add out (bad) lcall xchg sti jmp lock add sub or lods pop (bad) iret mov daa and pop rclb out mov sub ret push pushf cmovb das loopne cmp adc pop popa imulb shll dec loop mov test into fisubr (bad) mov cld (bad) mov xor outsb test mov mov lods mov lahf bound or repz xchg mov jno lea lock pop xlat mov push sub (bad) mov imul ret loop cmc push flds add mov fs rep adc (bad) mov fildll idivl popf enter xchg movsb jne push (bad) repnz fdiv push lret subl or sub sub scas xchg pop imul xor jp loopne dec mov jb aam push and ss inc mov dec adc push pop sti sub jmp vcvtsd2si lret repz and jns data16 fs jmp add mov inc repnz cmp add (bad) cmp pushf mov mov sarb shrb xor (bad) inc cmpsl aad push das (bad) jbe lret scas (bad) jmp and cli xor sarl dec lret push and jecxz (bad) sbb icebp mov cmp out push int3 sti xor jecxz pop outsl movsl mov aas lret sti jno add mov test xchg fistl xlat and repz cmc out mov xorl test and push das add xor pop dec sub popf jle leave jo xchg lea and pop jmp test movsb adc nop pop cmp icebp cs stc rorl testb popf mov repnz sbb jmp leave into cmp sub stos adc in pusha xchg mov cmp xlat pop push daa jg (bad) daa or and mov push and (bad) xchg xchg fsubrs pop aad xor jp pop call subb xchg add sub sub push xor insl ss fdivr or ret fnstsw scas repz shl cmp xchg or and jge sub loopne ret adc sahf lret pop std roll pop inc sub jae adc scas icebp fdivrs test mov xor fidivrl sar int3 pop ss call jne std pop add out jmp ljmp cmpsb jbe fnstenv (bad) (bad) add and (bad) mov mov push sub out xor int3 in dec repnz mov xor fsubp jle (bad) or cmp cli cltd fwait add lods (bad) pop loope add pop les sti xchg mov outsb out dec lea cs and fmuls fistl lds rolb cmp or cmp sar aam mov scas jbe push call xor pop xor and mov inc in cmpsl dec sub add pusha add mov add test or cmp mov in xchg add pop mov and xchg sti cwtl outsb imul pushf shlb dec psubusw cmp fstpt add dec push movsl stos fadds lret and mov push fisttp xor bound out out dec roll push imul mov into xor add mov mov je dec daa popa jns imul mov (bad) movsb adc jo xchg xchg adc mov clc je adc int3 outsl repz adc push and repnz cltd loop cmp sbb push pop inc imul pop pop or and jnp add push cs pop lds dec dec adc iret dec jmp pop cmp (bad) ja xchg add or and sbb das jl adc inc popf out dec and movsb push aam repnz adc sbb xchg pusha popf movzbl xchg testb mov and xor jae sahf sub out in pop divl lret pop sub pop mov cmp xorl movl (bad) and add cld push (bad) jbe pusha push mov mov mov inc push lret bound popa push sub or scas and movsl in mov push sbb jl sahf cmp lods imul mov ret popf mov idivb dec mov xchg ret xchg bound mov mov (bad) (bad) jns dec sbb iret pop xor lods push popf movsb cs out mov into bound (bad) dec les xor outsb ss or ljmp dec clc fdivs test mov icebp dec xor inc popf shr jbe jns in rorb leave xor inc (bad) mov pop pop pop and arpl mov pop stos or add jmp mov lret ret sti mov xor jmp lea xor xor jmp shll pop jns ret stos xor adc or mov fsubrp js outsb dec (bad) jge lcall fstpt psubb jle int in dec out push stos cmpsl fstl das and dec fistp int3 sti xor leave ds push daa push imul cmc in cmpsl aam gs adc mov add jp mov xor hlt repz mov jmp stc pop mov cmp jnp jnp mov xchg sub sub dec xchg sub push push (bad) xchg mov xor push mov sub stos or cwtl inc xlat mov inc or pop inc int3 add xchg mov adc outsb cmp (bad) mov js in push jae mov mov push inc mov mov push push decl xchg sbb jecxz jecxz movzwl cmp mov lret sub ljmp and flds imul rclb (bad) add in mov dec mov and mov push push sbbl out (bad) fld testb lods ficom gs outsb xor out clc (bad) mov jg popf gs jns push pop ds push (bad) stos add mov xlat out (bad) das out and jmp pop xchg fwait mov lock xchg insb pop jle daa mulb outsl icebp jp mov adc (bad) or insb sbb add mov daa sar mov sub mov (bad) insb push mov mov pop (bad) stos cmp xchg (bad) mov xchg push xchg fistpl lea out int3 adc mov popf jo pop pushf mov fisubr push fmulp (bad) or push movsl jo xchg lcall sbb sub mov jo inc or add inc dec and and (bad) and and pop adc jnp ret mov pop cmpl cmp or sarb ret push sub das in mov mov movsb pusha or jmp xchg call ja enter out add std out mov and stos push inc mov shrb add push enter enter dec test sub xlat cltd sbb and repz (bad) cmc ret jns mov test fwait mov ja int push cmp pop scas jne push xchg cmp sti cmp jl add ret or xor sub xchg add pop lret pop mov and sub push cmp bound mov add xor ds add pop dec mov in and jg add adc repz pop pop pop fs inc movzbl add repz adc xor das jno,pn sub cs movsl movsb pop sub mov enter jne lods push js pushf or (bad) iret mov pop dec inc mov ss (bad) (bad) inc adcb pop xlat or add pushf sub xchg or lock adc repnz xor cli inc (bad) je add popf fsubrl bound or push (bad) cmp scas repnz lahf xchg mull xchg jns stos sub rorl loope jb negb adc leave pop pop xor jmp in jb xorl ret mov test fcoms iret sub or push mov adc (bad) jnp jle in dec xor out inc and mov mov into mov scas lret (bad) daa fsubs mov inc add jne mov jmp cltd push xor pusha sub push dec fldt xor mov out pop int3 ror xchg sbb ret hlt cld lret inc pop ja and out repz ret xchg sbb mov into jle pop sbb or or adc out cmpsl xorb cmp add cld (bad) iret jmp repnz orb add ret xchg sbb or jne sub lahf negb adc rep in cltd (bad) add test pushf sub stc in push pop addr16 mov dec and hlt ret outsl out add daa mov loop push popa dec lret jmp add pop add xor mov (bad) leave push into pusha daa mov jecxz cmc cli jb push repnz jmp cmp cmc inc xchg add dec and xchg add and xor mov clc xlat mov scas mov std adc mov push out inc popf xor push jecxz push cwtl (bad) repz leave (bad) mov mov mov pop mov shr pop dec lret in cld xchg mov xor cmpsb sti pop mov scas xchg in xor jge mov scas fs mov sub lret out xor and sub jle gs out fcoml or jne push int3 popf xchg adc (bad) xor (bad) mov scas sbb daa and xchg repnz xor pop aad dec fucompp dec xchg (bad) sub add mov stos dec pusha mov pop out adc mov fldl2e xchg roll (bad) jb sub (bad) bound jmp sbb xor out lret std gs xor xchg cmp dec in mov fidivr mov out jo xor mov xor xor jle es out popf pop (bad) stos loop inc inc xlat daa dec mov cmp stos lret mov or adc xor xchg repz ljmp ljmp fisubr mov pop mov sbb repz jle jmp out cmc mov repnz call stc xchg add sub iret push icebp imul push adc sub out xchg scas xchg rcrb jl push mov sbb iret rcll icebp fdiv add ljmp (bad) das bound (bad) xor mov out lret aam push push fwait mov int xor cltd scas iret dec imul daa push push sbb jge mov and in xchg int3 loopne mov or ja push sbb out inc leave pop repnz mov int3 cmpsl push ljmp sbb xchg or fstl mov jbe pop outsl mov popf jmp xor cmc repz mov fcoml push jno mov fstl test mov mov xchg retw lock inc add rorb jbe fwait xor pop jns adc imull lods dec nop sahf jns inc sti (bad) je insb std xor adc mov mov xchg push stc divl mov and insb push movsb out jecxz pop push pop (bad) out out aas das pop lcall mov aaa jge test aas mov sub jbe mov pop gs movsl frstor lods push test cld pop lods scas sub sub lret jmp daa fstps jecxz (bad) push (bad) jns inc xor sbbl push je lods sti (bad) rorl adc xchg and in lret and mov ja (bad) lea addr16 pop dec xlat iret ljmp xchg sub xchg enter sti stos iret insl or mov jg mov or out std int3 xchg mov jle jo and or cmp mov dec repz rolb xor sti into cwtl loopne push inc ja lea mov fsubrl lock xchg (bad) jae xor idiv adc jp inc sarb sbb repz xlat mov pop scas mov xor jle out cmp out jp daa mov pop mov jo mov mov mov test pushf dec jo mov test add cmp add shll push ror push and or pop and pop lret movsl fistl test mov pop lret inc lds add syscall scas (bad) mov ficom pop sub jns push dec push inc ljmp movsb lea test sbb push jno mov daa sub jg rorb pop adc sub jg js jmp mov adcb (bad) scas (bad) xor gs mov clc mov sub stos les (bad) int3 insl or ljmp sub mov or das mov repz pop fsub mov movsl movsl fucom mov push mov loope stos mov add add mov and mov mov (bad) mov and icebp jne jg adc push in sub add daa jge pusha outsl out mov inc mov lret cltd jecxz add out clc dec dec imul fildll xor (bad) mov test cmp sub cmp or int3 push jp icebp insl (bad) rolb and out adc addb push sbb or loopne jbe xlat mov icebp jbe lea movsl sbb mov clc sub aam test movsl mov pop fcmovne and dec mov cmp out sahf iret xchg flds imul dec xchg xor add (bad) pushf adc jb ljmp clc or mov xchg scas in pop out mov cmp xor dec xor pop pop pop sub lcall (bad) sub or idivl ljmp sub cmp leave loopne ftst icebp lahf hlt push les cwtl push add (bad) fnstcw ficompl data16 push xchg sbb jl (bad) imull rcll mov mov cmc out mov rorb fs mov icebp out js pop jg pop mov push mov rcll sbb cmp xlat xor dec test pop in inc xchg movsb pop mov out nop outsl mov int3 push cmc mov out mov mov dec (bad) fldenv cmp mov and cmp leave daa xor mov pop data16 call (bad) or adcb dec repz mov jge decl lret and sbb pop enterw pop pop dec push pop out and inc lahf fmuls and cmpsb jg cwtl sub cmpsb stos jns cltd inc subl xchg mov dec in and pop and and mov xor addr16 das out xchg pop dec cmp imul and cmp cmp xchg rcll scas fild mov push mov test pop loopne out lds ljmp push inc mov sti push fcoms mov dec decb clc (bad) dec cmp sub outsb pop push cld mov sarl or iret add dec push fisubl mov push bound decl sbb inc negb aas out adc or push stc sub add sub dec ror sbb cmp adc sub xlat and pop xor lods out pop das js mov adc sub xchg jns lret clc pop sub xchg ret jnp (bad) xor repnz loop adc jmp mov out pop (bad) cmp adc out cmp jmp add stc mov fnstcw out lret and pop cmp sub xor (bad) and mov or mov push clc inc xchg cmp outsl and cli mov adc mov dec mov and sub (bad) pop and push data16 add ret jg mov std dec fistp mov jbe addr16 test stos je fs mov push and mov adc sub xchg cmc xor test sbb jmp mov or popa dec jmp pop inc cmp enter xrelease bound cmpl xor mov out dec or or cwtl push (bad) mov pop imul loop arpl xchg or add test repnz arpl sbb add jae daa in sub or enter mov mov or push xchg imulb jge ret (bad) sbb (bad) mov leave and push sub addb adc aas sub add xchg push or (bad) mov test imul jecxz adc sar rcr sub mov test sub inc clc mov sub shlb outsl mov das clc jbe daa mov dec repnz call ljmp dec mov pop pop dec out (bad) push xchg xchg jmp call out inc jno imul sbb das loope xor sub mov test fidivr das into add inc mov cltd add jo shrl (bad) idiv jns inc mov inc rcrl xor mov push out mov out (bad) adc push xchg push inc imul ficom xorl pop jns leave fiaddl adc pop add out ljmp dec jne leave jne bound outsb rcrb lea pushf mov mov xlat mov idivl (bad) arpl cld mov lcall imul mov mov in and lret jp jns hlt cmp jmp mov rorl add addr16 fs mov mov add adc aad pop daa push lds mov and jbe pop cli jecxz mov sbb sub jbe xchg dec ds dec gs or mov dec iret fs clc mov mov ret fistpll jns inc jg ret mov add dec add lea gs cmc mov mov outsl mov sbb push jo fwait dec js sub scas jbe and es jmp je cltd xor (bad) insb in xchg fsubrp or into into sbb cmp insb in jns fs sub sbb stc mov jnp cmpsb in stos xor rcrl add shr add sub and jg daa xchg clc push in fwait cmp leave decl fdivl imul xchg out mov sbb mov jns dec cmp lods and popf sub push lret add repnz jle into lock fcoms pop das loop xlat add sub movsl cltd out mov loop movsl dec jns jmp jg mov push add sbb popf sti add imul mov dec lods out movsl mov or cmp or test int jno jb pop shld decl xchg mov insb inc jns xchg stc xlat inc xor rcll hlt push sub lea jle xchg mov fmul jmp daa out add test jecxz fisttpl cs add insb bound inc and dec jmp gs sti add (bad) mov mov mov loop xor sbb push and cli jmp dec outsl xchg leave and jo mov popa mov mov js sub sbb into lret xlat inc data16 or mov adc int cvtps2pi lods lcall sbb add pop repnz xchg fxam ret jge push lret (bad) mov pop roll stc add adc pop fcoml xor push add loop rol rorb pop lds int3 and sbb pop call in mov xchg sub pop mov push xor je mov mov dec jg lret push mov ret xchg leave cltd pop movsl jl or add popf imul aam das cmp cwtl in sub into fstl xchg adc out xchg cli sub cmp int3 mov mov ret dec test xor and ror mov sbbb xchg jno out xor daa (bad) add jecxz dec leave and addl dec xchg adc scas mov int3 and pop cmp mov push inc fcompl jle cwtl out ret mov push xchg pusha dec shlb clc repz xchg rorl je adc out leave xchg add lds sbb fiadd add jns hlt pusha sbb aad and jge in mov fs inc addr16 pop scas sarb cmp sub das idivl dec add fbstp pop dec bnd movsl aad rcrl das jno test and (bad) (bad) jae dec stos nop mov mov xchg fsubl (bad) or and pop push cmp and inc pop add (bad) lret pop sub imul shrl gs imul fmuls leave roll rcll and lret ljmp sub imul repz mov inc inc (bad) mov push outsb push andl pop and loop (bad) xor jle pusha jmp fidivrl or ret cmp pop mov dec jl cli mov cmpsl push or pop lret add inc xor xchg clc xchg push cli lret jg pop rcrb rorb test mov daa out (bad) mov sbb in fist pop cld test in out call lret jne adc mov dec mov mov push fidivrl jecxz dec mov sub dec xchg cld je sbb mov dec jmp push mov or repz rolb sti repz push fistpll test sahf xchg mov (bad) roll add mov push mov std in mov fistp ret xchg movsl sub or das psrlq mov jne mov sti repnz or jns mov add push inc mov pop icebp jecxz lret pop xchg int sub adc mov lods and sub xor lods and and addr16 stc lods leave fsubrl jmp pusha xchg daa fiaddl mov inc sub and cwtl ss mov data16 and jb out xchg push mov int3 jle loop pushaw add mov sub sub and icebp lea mov cmp pop shrb mov xchg jno jae fiadd jne leave cmp add js sub push aam ret xlat cld jae ret inc pop add out cld lahf movsb (bad) add pushf xlat rcll mov out jmp stc (bad) into mov lods cld in xchg into sub mov stos mov mov mov add and (bad) in sub cld sub out dec and xchg test fnstsw fcomps pusha dec sub add sub jb pop and jns xchg insb adc mov pop and pop push cmp inc lahf xchg add jmp push push (bad) into ds sub sub ds xor pop jp cmp sbb mov sub mov lea mov jmp lds in leave and push pushf sbb dec dec cmp fstps fdivs mov imul aad pushf (bad) cs pop sbb pop (bad) out push (bad) or pop and add cmp fadds adc adc sub push sub movsl inc adc sti aaa lahf jne cli or inc adc lds fcoml push mov xor add jnp fsubs jg mov mov mov (bad) jge mov sub fabs sbb shr insb icebp push xchg mov jmp mov pop stc ret xor or xchg into std (bad) cmpsl push adc mov or mov out daa add out cld add jne cmp fsts pop repnz push mov pop mov out and sbb lock mov sub mov sub mov mov (bad) pusha adc xor lahf mov pop cmpsl rcrb idivl inc lcall jae cmpsl jl les scas sub and sbb xor lret cmpsl jl loop sbb outsl inc add jnp jmp and (bad) decb pop inc push mov loop imul mov std fucomip mov jmp cmpsb adc fsts mov loop or rorl in popf rcr scas cmp jae add imul mov add jle fidivr aas fdivrl addr16 cmpsb rcrb cld stc xchg lcall loope pusha jle stos mov stos cmpsl push dec aas pop lret mov dec enter mov jmp adc xchg cwtl (bad) sub (bad) or pushl sub sahf push dec ja push adc or in push mov push mov rorl icebp mov es jp imul iret jns mov sbb inc ret or lds adc popa pop and lret test sub call inc pop out out sub test sbb sar test (bad) jne or (bad) mov imul into movsb pushf jb push data16 or in fiaddl dec aam cmp dec push add push inc pop ja aas leave je iret shr imul out mov into adc mov cld cmpsl mov and fstpt nop xor out xchg pop mov cs add int pop pop pushl add shll inc sub xor repz rcr dec (bad) xor fisttp xlat mov (bad) divl lahf movsl clc adc (bad) xor push jle xchg adc and mov shrl xor cli in add ljmp and leave xorb push fldenv in jle loop shll les sbb cmpsl mov leave add cmp mov mov or mov sub add outsl sub cmp push sti aad mov push jp (bad) fldcw mov mov sub test jmp out pop fucomip xor mov mov mov and mov dec aam (bad) repnz mov dec stos xor cmp movsb je inc rcrb pushf mov inc dec and (bad) cli loop xchg idivl repz pop repz ret leave dec int lahf faddl (bad) jecxz sahf sub push fcmovb mov inc clc mov (bad) cli cmp into xor pop (bad) jmp aas push adc lock popf leave movsl xor xchg std mov or and (bad) sub test jno divb repnz call lret cmp mov test fisub lods mov adc xor gs incl ljmp push dec mov and sub mov xchg add aad mov mov push or xchg push cmp jns lahf in adc add mov outsb lcall leave dec rcr mov jmp ljmp hlt bnd push call jne add push sub mov add mov jecxz xor pop test adc mov das repnz or jns dec jg lods jge xor adc dec test push fwait xchg lods mov decb icebp lsl dec stc mov or push lods rorb lods loopne scas adc hlt mov loope aaa cmp xlat sbb push xchg push add out in mov popa mov test je xlat mov sub push enter adc mov ljmp cld ret xchg xor push sti or fdivrs xor rcll cld push dec lods data16 dec clc sbb xor stos cltd int3 jl leave fisttpl daa fs dec repnz pop out imul lock pop jno dec pop xchg cmp inc sub jns lods neg cmpsl jge call xor pop jl aad mov in pop jne sub xor add push les mov and daa cmpsl xlat insl mov into mov sbb int jmp and (bad) shrb xor xlat xchg mov lahf pop mov push inc ss (bad) sti data16 or and pop inc jecxz arpl out and shll repnz (bad) out (bad) stc dec pop and mulb loope and or das mov aas adc imul bound add and dec je sbb or bound clc ja fstpl jmp mov jmp sahf insb daa mov (bad) mov (bad) fdecstp jle mov loopne and or sub fdivs sub jmp std push mov (bad) push sub or and add mov mov jmp adc xor je rol jno dec pop rorb adc pop xchg clc (bad) hlt ljmp lock adc icebp mov cli ja add shrl and (bad) mov daa jmp push test or test mov mov xor inc aad pop jecxz jb cmc mov aas or pushf add gs pop pusha xchg pop dec in mov imul mov sbb pop (bad) (bad) adc xchg adcl test jle dec cmpsl fsubs sbb idivl push shll sbb mov dec cld ja sub sub and imul or xor mov repz mov or mov push imul (bad) stc mov or out ffree add xor lds fdivr mov dec int3 push sub mov in in (bad) repnz out sbb (bad) aas lret out lret movsb cmp and popf out daa pushf mov adcl mov sub cmpl or idivl mov pop mov jno add mov dec std out lret call lcall movsl cmpsb sub les mov mov jmp dec jb mov push lea sub and and xchg icebp mov adc pop aad je fs pop mov jl int3 loop lds mul arpl stc scas sub sub mov stos mov add cmpsb call incb mov popf cld cld and jmp das (bad) sub dec cld cmc and pop adc inc (bad) iret movsb insb lcall adc dec mov ret pop lret negb xor mov xchg push dec jae ret aam push mov dec lret cs push jl xor mov call mov sub jmp sub xor (bad) je push stos cmp cmp push bound icebp dec ret (bad) (bad) outsb jo push aas xor aas shrl pop jecxz mov jg inc and cmp jns shrl push fnstenv add pop (bad) addb dec inc sub clc mov jmp sbb dec cmp mov or inc lods push or and int3 mov cmp xchg lods dec ret std enter lret xorl jae je (bad) repnz mov popa std sbb sub xlat (bad) mov mov and iret cmp dec cmp test and (bad) mov xor shlb and lahf (bad) stc cmc addr16 out sub clc shll sbb fs out cltd or aas and test sarl add or gs jnp add ljmp and shlb xor movsb adc aaa cmp xor les dec dec pop sub clc sub sarl cmp (bad) lock pop xchg cmp (bad) mov dec sub rorb daa or ds dec pop dec (bad) cli sub add adc xchg or stc aam cli and stos push ds sbbb sarl add inc add mov or das xchg or jg mov mov push jno (bad) or pop sub mov push fdivrl aas jb das add xchg mov mov and outsb xchg mov sbb xor cld je adc rcrb jmp and pop cmp push xlat out nop push out negl adc es or xor or xlat dec out dec aaa and adc xor (bad) cli aaa es sti sub adc scas test mov cmp push and jle sbb daa mov mov into test cmpsl fidivr inc gs pop cmp (bad) mov pop (bad) add push mov hlt cmp bnd xchg add jmp je fstpt pop lods inc xchg add mov push mov shr dec fdiv xor mov in lcall push mov push xor jmp mov mov mov lcall and lods adc clc cmp (bad) je and push inc loop mov rcll or (bad) pop push sbb ficompl lods lock xor xor pop push push pop push mov dec not daa shr push cli out dec (bad) mov scas rcrl je adc jle les sbb jno inc out or clc xchg lea stc pop lcall sub add or add aaa fild and dec enter in add out jle or scas xor pop push mov ss xor pop scas cmp fwait or notl and ffree scas sub sub mov daa mov or pop push push pop out (bad) cli mov ret aam jecxz dec mov mov xlat mov ljmp cmpsb sub inc lret or xchg std outsl push sub vmread pop mov aam call push mov sub neg sub jmp sbb and and add sub push push (bad) mov stos stc data16 dec pop or push pop xor aam movb divl push mov in lret or sub add mov jns jge shrb test aas or (bad) je sub xor pop xor pop or add aas jp clc rcrl jl inc mov jmp adc add pop jge dec neg nop pop add sbb clc sub or pop push mov xchg xchg push sahf xchg push scas int inc fsubr cwtl fdivrl dec add inc or iret mov and (bad) fiadd rolb cmp outsb mov add shr pop push lcall add add push jecxz or cwtl ret and and std mov fistl outsb shl add lds inc dec clc ret inc dec popa add pop add addb repz cltd adc loop test jg das dec and xor into push inc and rol xchg cmp jne rcll lret xor scas sahf inc cwtl daa orl das xor or cmp adc and aas les cmpsb stc dec and add jo ds mov mov rcll xor xor lock jb pushf (bad) lret inc and ds pop xor je sub cmp mov enter jmp and lock and in jp jmp (bad) stos sub (bad) dec and pop daa divb out adc mov lret rclb les outsb jnp and xor insb dec out in sub (bad) sbb sub and adc stc pop jmp fdivrl xchg push sub cwtl test mov hlt into push jg dec insb push in xchg fisubl dec push nop pop mov lret test lods fisubr sbb imul ret xor cld imul or jbe sub sub sub xor je dec inc mov into in mov pop jecxz pop add inc cmp test scas cmp idivl push sti dec add dec or jmp xchg ret dec push jmp mov (bad) rcr dec sub mov (bad) outsb jmp les cltd push imul (bad) fisttpl ljmp xor fbstp mov imul cmp js (bad) lret mov and into test sub aad xor lods out (bad) lock lods call insl jecxz inc cmp and cmpsl fdivrs sbb leave mov cmp dec jne jmp stc (bad) cmp repz test cwtl dec test pop out jge and pop sub bound xchg mov sbb sti lock pop stc xor mov push xlat lods adc test fstps cs push inc mov cltd xor cld mov stc imul iret xchg lock mov mov call ss and es jg inc inc aaa mov sub and add mov jo pop or and je dec je out xchg xlat stc ljmp int mov ja lods adc jmp or adc cld cmp fcmovnb icebp cmp rcll pushf xor aaa xchg inc push out sub sbb fldt es xor pop jno mov out xchg stc pop das fcmove dec add shrl mov mov lods (bad) xchg mov les stc sub ss add int3 pop xor sub js xor stos call out xchg adc call mov pop leave popf std cmp test test sarl mov inc roll dec scas sub add mov clc xchg push sub mov add lods je dec insl mov jecxz dec out or or cmp cli fistpll outsl inc sub mov xchg fnstsw and loop sar repnz inc icebp mov sub repz adc mov (bad) lret lds add push out add or cmp jg (bad) mov icebp xlat inc std movsl or pusha out cmp inc icebp inc shrb add and cltd push pop cmp adc pop xor sub sub into jno pop add lds jmp xor cli xor mov push in cmc movb (bad) sti lret sahf mov sub push arpl xor stc dec test sub add and shrl add dec cmp das (bad) mov icebp ss int sub movsb lods xor out cmpsl adc test dec dec test add negb ljmp data16 sahf add or jmp push mov scas nop je xchg rcll lret inc fisttpl push push mov lods push sbb stc pop or xchg fstl dec fisubr lock or jmp addr16 (bad) xlat stos mov mov lahf push ja sub add pop and sub jg add adc and sub add leave dec cmp and notb into int push mov (bad) cld out adc test jmp pop add jmp rclb sarb (bad) dec mov push ret jg jno roll daa add roll mov aas pop add mov (bad) hlt out pop xchg pop pop scas pushf push sub enter out dec sti cmp cmp xchg in xchg or scas cltd mov cmpsl cs sbb (bad) jno sbb jecxz mov call sub mov roll cmp sub mov lret ds mov sub jnp push je add adc (bad) adc pop sbb mov xchg cmc xor mov out lret frstor loope mov push pop mov xchg popf pop sub jno xchg ljmp jmp or pop lahf and inc cmp stos mov inc and mov daa sub lcall inc jmp cmp out imul xchg lret or mov fld cmp daa fidivr and mov push sub or jle (bad) sub fidiv leave or jl movsb dec ret rorb push ret mov movsl mov inc xchg fistp mov and call out mov outsl adc lret (bad) (bad) (bad) dec imull add pop sub cwtl xor inc sahf subb clc cmc sar incl push sbb sbbb rcrb inc inc (bad) stc lods inc sub jnp dec shlb pop jle in in imul ret inc push fimul cmc ljmp add out mov cs dec leave jmp int3 in insb movsb out out and jl (bad) (bad) into sub inc pop mov popf pop sub cli cltd mov mov pop inc and ror leave out cwtl btc clc fcoml mov leave push dec daa lahf (bad) leave cmp jmp push ret and icebp and and add movsl mov rclb sbb iret add dec (bad) out push push lahf and and sub cmp jmp push psubq repz test aaa stos jbe ss add clc push mov dec push sbb mov aam repz add lock loop dec pop inc popf pop lea mov lret inc aaa and sub mov cli push xchg test clc mov out in mov push cltd cwtl or xchg outsl movsl pop mov or sub imull (bad) xchg fistp and and dec dec inc fldl2e fistl lret sar scas in aas mov add and xchg sti push (bad) sti popf cld gs insb xchg mov and xchg cld cltd adc xor or pop rcrl pop dec add sbb inc mov adc je out bound idiv push jmp sub repz mov add daa jbe mov mov fistpll cmp das xor data16 dec push outsb fmuls stos pop fnstcw add jge in cld adc and fnstenv arpl pop clc pop jecxz and popf cmp ret inc mov fmull push (bad) adc jecxz sbb ficom cmp out in pop or jge pop data16 lock cld jg negl test mov shrl cltd mov out xor xor lock shrl test jo imul sub out mov stc repz pop mov std xor ret push inc imul fmull js mov xor or add pop sub adc sbb add xchg sahf out add fstpl out jecxz and jns dec sbb lds add or pop pushf sahf insl pop push (bad) mov std jmp xchg rcll pop xchg adc enter sub push cmc (bad) es popa ljmp repz and add jg ret cmp lret jecxz dec loope push out js pop pop xlat repz idivb jmp loopne out iret pop fs sar ret push adc xor arpl xor add ds decl inc aas fdivr loope jmp push mov mov repnz fnstenv outsb test lret sub fidiv or push pop pop mov je jbe xor sub call sarb je aaa out ffree cmc and bound mov add ljmp cmc rcrl fs loop daa push int3 pop dec leave out sub jmp loop mov lret inc xchg dec pop jne clc and mov xlat pop pop sbb int3 add ljmp push sub andb decb (bad) cli jmp mov repnz dec or mov and push jmp mov xchg ss movlps sub sub repnz cwtl iret adc xor mov daa in daa push xchg push mov sbb int lret mov or jle mov pop iret ret in dec xchg (bad) sub out (bad) sub xor mov mov stc xor ds ror mov pushf jp loopne ret lock jnp es mov jg (bad) std rolb or lret stc (bad) ljmp fs std inc lcall imul sbb dec ss sub mov movsl (bad) rcr mov push imulb xchg pop dec mov scas or add lods pop je mov adc xor dec (bad) sbb rorl (bad) repz cmp cs xor push ret arpl in jmp and jge fisttpll mov pop mov ret jne rolb mov das divb jmp cwtl imul xchg cmpl mov cs fwait out jne test xchg add sub jmp xchg fisubr pop sub rorb mov ja jmp das call add stc add add (bad) pushf and cmpsl dec mov pop cmp pop imul dec add ljmp (bad) sahf loopne out stos sub popf mov ret jo pop adc mov or imul adc (bad) lock pushf das add nop jae and or je (bad) sti mov sub sub and lcall outsl mov add add das cmpsb jae out adc mov mov dec ljmp popa jp cmpsb xchg cli mov imull (bad) mov sub sti sub mov arpl (bad) jp ljmp adc (bad) clc jge mov out xchg (bad) jecxz imul ljmp or cltd dec out mov add rcr scas sbb and xchg sub jb sbb lcall adc sub testb push sub sbb enter fildll xor shrl repz idivl adc sti notb mov les mov jns inc xor int3 div outsl mov push add push scas rcrl je mov xchg inc and scas mov pop out dec mov dec (bad) popf in jns int3 sub mov gs and xchg pop clc mov xor mov mov adc ret mov ss and pop roll dec or jg hlt dec fldt mov add jmp push mov mov mov imul cmp jo lahf sbb jge aam repz aad push (bad) cs xor leave jg cmp imul imulb daa out mov in stos out sub mov dec (bad) fwait push iret inc xor pop mov pop repnz test jno cmp xlat int3 jp or popa mov rol cli adc jne into clc aas arpl sti jae cmp ficoml or push sbb (bad) scas mov cs sahf cmp adc and and xor push fdivr xor mov movsb leave shrb jo in or and mov inc ja cmc and sub mov cs push ficomp xorb fldenv ja movsb daa sbb lret jno dec pop cmp fnsave popf imul adc jne xor cmpsl pop test mov out pop adc (bad) je scas xor repz sub mov ret sahf sub fisttpl sub and mov roll out cld adc add or dec pop mov add lock cmp ja hlt cmpsl cmp mov mov leave leave pop cltd movsb xchg das cmp pop pop lcall ror jmp lret leave push dec mov mov sbb cmp repz mov cmp les clc xchg or std and xor and fdecstp scas jge mov (bad) mov sub (bad) lcall fstps insl scas dec das clc sbb jle out and daa das mov push xchg icebp adc cld les repnz inc std aas int3 dec sub je mov ret loop mov push xor fdivl mov and pop and lahf add adc or push fisubr sbb nop (bad) cmpsb stos orb cld push pop pop jnp rorl mov xchg mov add or (bad) xor xchg add pop push (bad) call scas dec dec sub movsb mov push les mov fisubrl jbe mov insb push daa loop in mov or push push int3 dec sar sub pop cmp enter xor loop test and stos mov add fisubrl (bad) push mov cltd sub (bad) lds sub hlt lret lea add sahf mov xor ret adc mov scas (bad) and dec add dec mov xor adc stos push pop cmpsl add cmp outsb mov dec mov popf (bad) sub push ja jmp pushf push sub out sub dec call scas cwtl lcall dec cmp (bad) aas sub pop (bad) lcall jnp mov movl mov xlat dec pushf xchg clc rclb push imul leave jmp leave inc and mov mov jns imul imull push cmp adc imul dec jecxz adc and (bad) mov xlat or mov mov pop mov pop imul dec (bad) sub movl in (bad) popf sub xchg mov inc pop jge fstps xor test jecxz inc mov pop cmpsl dec push mov add sarl jle dec testl or clc loop movsb ret jle push (bad) test and mov (bad) loope test inc sub pop dec loop je scas test fimull jecxz pop or jle (bad) movb in orl jbe,pn sbb jns test add (bad) lret add leave cld pop mov push pop adc mov nop sarl mov add je inc and cmc push out test jnp aas adc (bad) mov popf jge fidiv bound ficomp adc mov shlb rcrl (bad) (bad) out xchg lods divl loope hlt (bad) call mov js xchg adc cmc in mov inc xchg xor dec cmp pop lret test sub mov mov mov rol mov cmp sub push sti lret dec xchg xchg push scas (bad) mov (bad) add test or jbe dec in decb sub fcmovnb loop inc sub pop and out pop mov mov xchg or pushl sbb push lods adc ss test xor (bad) mov rclb ret inc rcrl push add (bad) pop push fcomps sub inc add xor xchg add imulb leave idivl mov fs cmp jecxz pop and (bad) call add push adc mov push jnp and mov stos mov xchg mov daa sbb mov out push pop (bad) sti int cmc (bad) aas cwtl jecxz pushf shlb mov mov add test cmpsb (bad) mov icebp les test adc sub lds mov push repnz negl sub lret stos push movb pop int3 shr mov ret mov and adc out mov and popf mov jns add xlat shrl adc outsb fistpl sahf push sub sub ret fisubr int cs das add or mov mov sub sbb mov cli jne mov ficom adc lock mov std dec sub pop popf imul dec repz add mov xchg mov mov and pop cltd sub or pcmpgtd clc sub inc andb adc pop imul neg pop mov leave lock je jmp sub mov xor or pop sbb push in push or iret mov add pop and mov xor and ss call ljmp aaa fistp cli sub (bad) sub and xchg sti jo repz mov mov (bad) loopne test jge leave sub loope test sbb call inc jb frstor shlb loopne jmp in push ret out mov mov jmp scas mov cmp add sbbb sub (bad) xchg lods inc fidivr adc ja ja pop leave movsl fistp (bad) bound cs push mov (bad) pop imul aas sub sub mov or xor (bad) dec gs and idivl out push jmp and test fldz test in int3 mov and (bad) stc adc add fstl mov mov out mov xchg cmc cmp mov pushf jmp pusha stos mov nop inc mov popf push sbb ret and ficompl pop inc or adc hlt adc lds push loop std rcll fucomip xchg daa sub aad bound mov aas sub movzwl mov movsl jecxz rcrb cmc mov idivl sbb sub pop jmp pusha decl mov mov add scas or sub movsb add into and push cmp leave (bad) and sti (bad) std dec xchg fmul shl leave fldt scas and das xor loop jbe leave clc ficom enter mov pop add arpl jb mov jg loope out or pop cs imul pushf xor pop shlb pop mov pop aaa stos sub dec jb pop mov cli adc roll or cmpsb xchg pop mov test xchg adc mov (bad) sub clc or scas fnstsw adc dec arpl mov jno roll sub popa xor sub div rcll in lcall movsl sbb mov into mov pusha mov xchg push je cmp push jne dec mov or mov mov fsubp or test pop mov add jno roll out popf shrl adc lret jle (bad) repz mov test cmp into fimul leave push xor adc iret mov cmp inc fcomip sahf add rolb ljmp adc sub lret call shlb dec jo mov jbe sarb mov jne mov add (bad) lcall gs push shrl repz (bad) scas lret push jg lcall out jmp arpl add gs call and out inc add pop int3 in lret mov and bswap xor ds pop int3 xchg dec mov in dec addr16 jle iret xor mov mov bnd dec xor (bad) inc sbb into mov rol jne inc (bad) jne iret ret outsb repnz mov jns or add cmp pop and fwait (bad) (bad) aas sub xchg and adc pop hlt out sub xor xor sub mov add cld jbe stc cmc stc insl dec (bad) mov das adc popf lods mov and clc iret mov mov daa mov in cmp sti lcall rolb push loop jge (bad) mov push or ja cmpsb das xchg jle daa cltd fwait jb std out rorb xchg inc aaa pop lret or xchg lret loope jbe inc push dec xor jmp test cmp sub and sub mov hlt jecxz les pop mov cmpsb dec fwait lret daa xchg mull mov ljmp cwtl jb mov outsb test mov shrl fmull mov ret add jmp lods pop mov inc popf ficom das mov outsb inc or ficompl gs pushf jmp das add jg inc or and mov xchg lahf mov in stc add sbb cwtl inc mov mov sub xchg jo mov jae and mov and push popa inc sub mov adc pop and movzwl jge cltd lods rcr movsl sbb mov pop cltd sarb sub stos (bad) or ja jl mov jno movsl negb aaa adc (bad) jb leave (bad) icebp pop loope mov xchg loope stc mov call bound iret xor lods inc push es xor xchg enter push dec push (bad) shr mov jmp sub daa loope icebp add push mov cwtl add and mov ret inc xchg popa pop loope out and and cmp mov lcall inc fist or and mov mov jae and lret popa jne lock lahf xchg jl shrl fiaddl (bad) sub movsl mov pop ds sub popf dec lock lea mov mov iret out daa out mov incb mov div and (bad) jb ljmp add xor jo sub test iret and das adc push xor add sarl adc xchg (bad) test and test mov andb pushf addr16 pop jmp vpsubq pop adc data16 jo dec pop mov sbb xchg cs popf or lret ret scas imul mov xlat inc mov inc dec into ljmp mov push xchg pop popa cmp (bad) sub out or stos iret call rcrl mov sbb pop xchg pop mov push or xchg add ror sbb lock repz sub jecxz pop ret cmc xchg shrb push test int3 add xchg pop push pop cli sarl mov dec not pop (bad) or int3 les stos sub cwtl and xor sti dec and lods adc popf sarl rorl test pop lock push mov or std test (bad) fldcw xchg mov (bad) ds cmp insb sub dec inc hlt mov xlat ljmp and ror push jmp rolb fidivl and xchg jae add xor push xor or mov mov lods inc sub inc stos mov mov sbb mov xchg fsubp jecxz xlat jnp mov add out pop jns andl mov repnz push (bad) pmuludq pop outsl or pushf stos mov push in out aas bound enter sub into and lds scas cltd insb dec xor dec rorb roll add ljmp ja mov and roll push gs test or sub adc push cld lds and popa lock jg outsl sub or jp mov gs lds out mov and cmpsb pop dec mov lret ret out in xor lock pop sub fdivrs aam lret ret adc or add jno lret fisub idivb add pusha pop jle and inc out and adcl lods das lahf push xor je push xor pop rorb sahf cmp mov add repz clc dec iret cmp outsl and leave loopne cwtl (bad) imulb add dec inc dec and nop or or int add sbb and aaa and pushl (bad) jl icebp xorb xchg sub ret and (bad) or sbb mov sub xchg int3 call into scas out xchg push pop mov cmpsb and sub jmp add mov or mov push movsb rclb int and outsb loop pop pop loop jge dec dec push cmp fisttpll lahf xchg enter inc (bad) and notb rcll xor xor iret mov aaa je out call cli cmpsb adc or ret lcall pop sbb lret outsl or bound cmp sti xchg xchg and pop popa mov imul lret popf mov mov stos mov sub push or cmpsb scas mov jmp insb mov push xchg fldl testl cmc pop sub or cmp loop popl imul das (bad) mov in dec shr pop xchg mov lret pop call push xor mov adc add sbb cli popl mov xor or mov mov xchg push pop mov (bad) movsl adc int3 scas clc adc loope and xchg sub lret icebp xchg das aam adc bound dec push push jp add fdivrp inc sbb ds idivl das and sub jns add xlat cltd add iret out stos push jno daa inc dec jecxz loop xchg sbb and xor adc subl or mov lea outsb push pop pushl enter lds inc mov jg loop dec xor pop or into enter jne mov cld xchg xor (bad) jbe adc scas add (bad) pop jp or add testl pop rcl cmc xchg std xor scas mov outsb (bad) pop insb xor aaa shlb stos jecxz pop lock out and and pop xchg adc out lds daa (bad) cmpsb dec xor jae push and mov sti notb sbb movsb pop jmp jmp repnz (bad) jo nop cmp push xchg hlt inc cmp pop aam pop jge shlb ret inc xchg push insl push sub mov in push (bad) xor decl sub dec nop rorl pop jle into adc fisubrl push xor popf sub flds pop in das xor pushf dec or jno orb pop std gs pop lret jb in js nop in dec (bad) xor call xchg xchg mov sbb les clc clc in or fnstcw ret mov scas pop cli insl push xor cld lods sarb jns inc iret and sub dec cmpl imulb fildll stc call imul das ret jb loopne inc jge add xchg push add shl out jle aas (bad) push and jne inc dec dec dec (bad) (bad) shlb data16 aam fnop testb faddl std xchg rcrb cwtl or mov push pop rorb iret sub mull (bad) ficomp movsl inc fsubrs jmp (bad) icebp mov xchg add movsl pop int xor es push popf je push dec aas in adc dec mov (bad) mov stos mov pop fbstp pop sbb (bad) sahf xchg mov popa mov push pop stc xchg out gs sub mov push mov jmp hlt push out fadds (bad) lock lret mov dec xor lea test jecxz dec les lret mov and aam cld xor jne cmp mov outsb push pop xor and or (bad) std xchg push xchg cmp cmp sub ljmp sub xor push inc out rcr ds push ror pop xchg or ljmp mov mov notl push test pushf mov paddusb jmp std push lods mov rcl push icebp xor inc jp (bad) das mov sub icebp bound push pop and jmp dec ret divb xorl mov xchg test test push fs mov cmc in movsb enter mov loop shrb adc enter outsb mov sub sbb in ds out fldl sub lds sub mov mov add daa cmc xchg inc shrb pop adc (bad) mov nop das lret cld lea cs xor push popa adc fadds and add ret movsl add ljmp sbb lret jge and ds out inc ja or add stc test pop jmp in or mov mov jp rcll push pop inc adc pop add movsb push mov lods bound xlat mov test shll adc add adc push das and aad push (bad) sbb mov sub div mov xor cmc add sbb iret cmp sub das ljmp mov inc dec push popf (bad) in add cmpsl lods pop cmp xor shrb call xor dec dec ficompl jb add arpl sbb dec and dec dec arpl dec adc inc pop in add sbb pop mov lahf pop cmp pushf fucomp jecxz pop mov je test hlt ds and pop add lahf les pushf add pop and jnp (bad) aaa stos cmp mov daa adc fwait cmpsl incl add fs scas sub aad xor imulb xchg add repz mov lods sbb or out shrb jp mov sub jno out or add fdivrl and xchg lds adc (bad) out add les gs aam jmp ja mov xchg scas fs dec out loop fstl adc mov imul rol jmp out pop push mov sub mov cmc mov pop mov out in ljmp repnz and lea and bound cmp inc nop cmp lret (bad) pop out sub xor std out sub rcrl hlt aaa repnz lods sub lret sbb lret insb pop sub int3 in clc xchg hlt int3 popa rorl cli mov push loopne andb lea outsl cmpsl cltd nop lds dec xchg jnp fldenv add lret mov sub adc test push jno,pt jbe (bad) outsb inc (bad) pushf xor dec mov ret pop gs add mov leave or xor std push mov sub dec jmp and sbb sub fcomps or out xor add mov and sub cmp lret cwtl vmovhps sub leave xchg ja es fstpt mov pop add xor fistpl inc push add mov jmp xorb sarb fldt xchg popf adc (bad) push lret repnz lret ret sub mov and mov nop fs rsqrtps or pop push mov mov std mov add mov pop test out xor (bad) cmp or ljmp gs mov sub pop cltd pop out mov xor stos not jae mov inc pop or cmp sub pop mov lods mov in movsl lret stc rol adc and sub call int ficom ljmp add cmp ret mov (bad) int3 sub dec fsts scas mov mov js ret add mov (bad) aaa loope,pt lret xchg popf repz aam push bound pop xchg iret and scas (bad) lock pop or repz mov addl xorb pushf (bad) (bad) mov outsb pop (bad) repz test or push xor aas mov xor fnsave popa sub sub push dec lret jno or leave pop (bad) inc icebp stos lret (bad) mulb adc in xchg dec pop int3 add xchg (bad) mov jle push or dec icebp shld push out pop mov pop ficoml cmp test mov push mov mov jo or cmpsl gs out push fisttpll cmp data16 daa lret and inc inc das out lds pop test jne mov (bad) mov and jecxz loop test and cmp mov sbb outsl out mov push mov enter jno movsb dec xor fmuls push cmp lahf jns leave test pop cmp push jno repnz or rorl pop mov mov lret icebp cmc push and ljmp cltd mov and stc xchg roll cld pop call das xor std mov (bad) jl ds mov dec mov mov add bound xor cs dec and cmp call push pop scas das (bad) or pop out sub xor andl loope in lods adc or into jg sbb clc dec shr xor pop ljmp cmp popa in das and xor ds and jns xor jnp xchg jmp movsl out jno mov outsb and mov push sub scas js push loope xor xor call adc scas lret je mov adcb fsubl pop clc lret push (bad) out mov inc negb or in outsb cld aaa mov pop jmp mov add (bad) (bad) leave and xchg sarl push dec mov pop xchg fisub fnstcw xchg push inc imul or call sarl push mov pop stc pop popf xchg pop dec das push ret nop loope cltd dec outsb inc mov add or int outsb push repz pop xchg add addr16 and mov mov les push hlt xchg bound pop jmp sub ret pop sub or loop int add and sub call out cs repz cmp test insl push add dec push inc lock ret ljmp (bad) icebp aas int cmpsl push ret rcll shr dec pop ss ds or lret repnz and mov sbb js push sub fs mov dec push arpl adc and mov jbe and sub ljmp idivl loope fidiv loop mov sub dec mov mov cmpsl movsl jmp dec daa divl cmp mov sbb sbb into jp mov cltd cli add sub sarl inc int push cmpsb mov clc inc fwait sbb mov mov sbb pop scas jb or dec repz pusha mov dec pop dec sub pop iret insb jge dec xor testl and xor mov testb xor sub out movsl mov test hlt pusha push sub xchg push into mov mov sbb test pop inc sub or cmp mov adcl jmp aas test mov test test fldcw mov aas ljmp xor mov or fcomip pop sbb mov adc xor (bad) out mov and inc ret push mov out mov add jne sub jp or pop fadds ja clc and xchg clc pusha popf inc movsl idiv loope repnz cs push pusha popa lock jmp arpl mov jb ret movsb lretw aad (bad) push adc sub xchg dec sub mov daa in xchg out inc outsb adc xchg add in mov dec or stc repz xor pop xchg daa ja test dec xchg imul mov sub xor in sub aam jmp pop cs dec xor cltd push insb dec lcall push call ret fstpl cli lock fidivl into inc jge push dec add dec rdmsr push mov jb aaa das mov dec mov or pusha sbb push adc adc data16 insb mov sbb pop and or xor push popf out dec shl outsb and mulb (bad) lahf adc ljmp das repz pop ds rcr mov pop fcmove add xor xor repnz les inc pop dec mov mov xor add sub xor test push jge fildll lds push (bad) mov mov movsb (bad) sti popa divb fldcw fs enter dec push repnz or (bad) and or bnd cmp daa icebp repz pop jmp add out dec pop jle mov pop ret push jmp ret push stc mov mov inc dec mov test sub jne and add ja jnp clc inc xchg in pushf icebp adc xchg mov loope jp js jecxz loop sarl hlt sub dec rcrl jnp mov mov in in movsb jge push xchg mov xchg imul repnz out cmp lahf xchg lods or inc test fdivl (bad) fist sub out sti mov sbb loop in pop shrl push enter (bad) mov xor repz jno scas test jl mov sub dec mov test enter sbb decl and lcall loopne push push mov lret and fnstsw inc add clc lock jns dec aad mov repz mov mov lds cmp hlt (bad) (bad) fucompp xchg roll mov dec adc aaa flds xor or sbb xor xor xor adc dec into int3 sti (bad) sub fbstp test sub scas fcoml or push test sbb fbstp fdiv mov cmp (bad) mov addl das mov pop je leave xlat (bad) adc mov and dec iret jmp dec jo ret add and add or scas fcoml (bad) mov int jmp xchg (bad) scas cmpsb sub mov repz sub mov rcll xchg jae idiv mov sub mov gs inc repz or or insb popf jp icebp cmp les xlat orb data16 cmpsb (bad) mov cli sub cs pop loop ficompl or dec inc jmp pusha sub xor sub es dec cmc xchg loopne xlat xor push inc push push or iret fistpll scas lods rcll int3 pop and sub ficom clc hlt imul out stc sbb out pop gs add mov and xor out push vpminsw cmpsb pop push imul sub xchg sub sbb push push or or xor ja sub rcl or (bad) jae daa adc pop cld adc push or imul sub pop (bad) xor and sub ret ljmp sub add or ds outsl mov jns inc in lahf push xor jle lret push or clc (bad) lahf imul cmp cmp mov and pop xor sbb push js lds mov adc dec mov pop cs test dec leave jecxz xchg stos and mov ljmp xchg loope (bad) xor pushl xor fstl movsl mov pop std push sub lods push shll sub test ficom adc das stos out cmp dec (bad) hlt scas pop es idivl scas sub sti ret sti dec or lds mov mov out jb mov ret adc xor mov call test cmp adc sub cmc fnstcw les cli sub add (bad) int mov jge jae subb lds divb xor into (bad) dec (bad) cmpsl dec loope jge fist jmp bnd or daa jmp out push xchg jl (bad) xor fidiv sub loopne (bad) fs mov int movsl inc sub sahf xchg sbb dec stos push push sub xchg inc popf je repnz inc and jge xchg mov rorl pop lret jl xchg push rorl jne scas jge stos and adc xchg sahf sarb aad jg orl (bad) mov mov dec mov fisub pop push bound or mov setno mov (bad) test in clc sub ret pushl mov sub fisubl mov jl push ljmp out lds inc push mov or (bad) mov fldt or inc test mov sub fistpll sahf push xor push add std out fcomps mov ljmp stos cmp jns jnp in int lahf repnz push lods ret cmp (bad) into pushf sarl lods nop js cmp push lods dec mov cld js sbb ss cmpsl sbb pop mov and aaa adc cmpsl lods and sahf mov int3 lock xchg fstpt sub push xor dec jmp add out push lods xchg out cmp shrl jecxz pop aaa or xor (bad) fildl jae pop loopne pop cmp xchg xlat sbb adcl inc mov xor inc cmp test adc (bad) into aas in loop data16 xchg out ja or inc enter loopne mov xor xor add out test mov icebp rcl js or cmc push mov scas push pop icebp shlb xlat cli push cmp stc xchg daa inc rcrl and scas jbe xlat mov mov lret and pushf popf lret sbb pop mov cmp push xor and mov std dec or and jo push or and popf add pop mov mov adc push or fwait mov or testl sub xchg xchg sub sbb ljmp lods pop or fs mov je shlb add mov xchg or scas out mov (bad) and loopne idivl push mov inc or mov mov add pop shll and pop in or into add push pop and cwtl jo inc inc sub enter xor test or scas f2xm1 sub adc pop pop cmpsb mov and jp pop mov shlb mov roll adc xchg js addr16 or adcb cmc dec pop pop aaa mov lret sub rolb lret (bad) xchg incb and mov test fbstp sbb clc xchg in data16 inc fistpl sub sub jl sub dec push xchg fisubr push inc rcll xor jmp cmp std adc dec test jge push and ljmp pop jmp or out cwtl xlat or lock int cmp daa out lds xchg adc cli sub (bad) into pop xchg outsl leave pop or into mov xor loop shl sbb add push or (bad) add jmp lods pop aam dec aad xor pop push sbb or mov sbb movsb xlat fs (bad) cli xor rorl lahf fsub push mov pop fbld mov mov cmp jmp add or imul xor (bad) repnz fidivrl rcll mov roll pop or fistp rorl leave sub push das out cmpsb leave xlat stc cmovnp add in jmp sub fs xor test mov (bad) jns dec mov sub ret aaa push cld xlat out int push call les out movsl dec mov push adc sbb or repz outsb and mov mov cli sub jecxz xor xor mov fbld pop mov lret fmuls imul mov mov push popf cmc xchg lods cs sbb (bad) into stos bnd fcoml hlt fwait (bad) jae cs inc xor repnz jge push (bad) xor dec iret cmc inc sbb popa fsubp outsl call je add roll daa dec aad jno sbb or jne or pushl out pmaxub (bad) mov test add clc and movsl jl adc sub int3 push iret rolb xor mov sbb test xchg dec stos ds jb add popa out ret lods mov mov xchg mov push sti adc adc rcrl xlat lds stos cltd jecxz aam mov pop or mov and ret rorb stos pushf daa mov aad add pop sarl movsb ret inc xchg pop je je or xorb ljmp cld icebp (bad) mov fcoms or lock fstl daa pop scas leave clc cld inc jns repnz test insl adc out sub or or push cmp or pop pushf insb jmp xor add je cmpsb fildl mov sub cmp je,pn add lods pop xor or cmc idiv fadds incl xchg push sar (bad) pop and test mov add iret mov in push bound fstpl pop in je dec jo mov dec mov mov imulb or or sub jmp mov jo popf out and (bad) enter cmp mov cmpsl ret je fdivrs cmp dec and pop outsb int sbb shrb push das jne mov adc sub lock pop dec sub xor xlat nop sub sarb dec idivl scas repz mov shrb mov movsl nop movsb add stos sub lea out movsl addr16 ljmp or mulb xchg inc dec jecxz fstl notb icebp js cmp mov jmp jno leave rcll or popa jg xchg test xor test leave stc pop popa jle sub fisubrl jmp pop into sub icebp push sub mov jnp adc loop xchg mov (bad) call jno xchg jns push xor jmp fimul ret scas dec mov inc add cmp outsb clc adc dec jae dec lods push sub xlat nop cld dec mov mov push xchg ret and mov leave or add or push cmp popf (bad) into jb xor mov fist mov and cmpsl pop fs adc pop stos mov call movsb sarb clc mov les xchg cld mov pop xor pop inc arpl test pop outsb cmpsb xlat sub in notl mov out sub (bad) (bad) jg push mov stc bound icebp fistp xor ret dec ficomp repz cmp add ret pushf xchg out in adc lret les sub ret push mov (bad) daa jge xor jbe pop pop pop bound ja xchg push or cmc mov out lret jp xchg xlat cmp leave fidiv cld push ret movsl dec push sti cltd push jnp stos adc mov dec popf fisttp jle xlat inc pop aaa push pop pop (bad) sub or pusha jae add in test cmp mov bound push lods (bad) dec bound and int3 jne pop sub in mov aam jne mov aas xchg push imul xor mov rclb pop sbb (bad) cs movsb mov and (bad) add and xchg add scas lea in (bad) sub lods or sub pop hlt lods stc xchg jg push mov addr16 inc xchg mov cmp dec lods mov movsl sub jo scas shr add push (bad) xor (bad) scas or repz push mov mov loope leave and mov mov dec cwtl scas dec mov imul lretw icebp jp mov xor xchg pop dec push xor cli mov jp call daa andps shl movsl pop out or sarb stos in mov pop fsub jmp push push lock testl xchg imull push and or sub dec pop pop adc les (bad) and test dec in fnstcw and push pop add and xchg lds push lcall movsl mov or xor xor dec xchg or and mov insb and mov in rcl jmp outsb into add xor frstpm(287 mov ss xor (bad) fs pop (bad) inc inc jo lahf mov mov mov out push hlt gs add inc or jno and xor sub loope jns xor daa sub inc xchg push jmp push shrl cmp xor jns mov test mov cmp xchg out adc and subb int outsb adc fcmovu adc ljmp or mov in sbb fdivs mov sbb loop rorl xlat ja imul shlb sbb inc jo jb pop fdivl dec aaa sub mov pop pop jmp xor and mov push xor lret mov sub neg insb sub shlb and into inc fisttp shl add into mov dec jmp subl leave xchg and pushf jmp mov into mov dec fsts sub cs add lods sbbl or xor test ss mov pushf jmp or lea push cs bnd cltd xor cld push movsl out fs movsw hlt ja xchg fcoms cmp adc stc mov cmp mov decb outsl in in stos fcomps pop push mov mov xchg push and add repz add jle adc (bad) mov aad xchg dec aaa cwtl repnz ret sbb ret jecxz or sbb and jl ljmp add or sub in xchg imul repz (bad) push xorb pop lret mov cmp xlat (bad) push btr dec stos xor mov mov adc dec std and push xchg lret hlt fsts loope xor dec mov add fnstsw mov cli xchg shrl add enter mov mov cmc mov mov cmp clc pushf push mov xlat add add hlt sahf cltd ret adc (bad) mov loop aas sub repnz pop and shlb mov pop out fcomps loope shll test xlat rcr inc ljmp scas xor add jnp lret fdivs jmp divb adc gs sub mov pop jle push std xor mov in mov mov add mov sbb xchg fxch xchg jg jp pop sub ror repz add or (bad) and aaa out push and stos mov dec out and xchg (bad) mov loope into push add (bad) adc ss xor out adc pop lahf xchg dec mov dec or add into mov lcall andl jmp or jno dec adc iret int xor cmp cmc iret cs fs std dec loop test fldt loopne lcall rclb (bad) in (bad) dec fstpt push pop xchg lcall popf fld daa xlat in cmpsl jbe rcr (bad) cmp and mov sub idivb es adc add lret sub push cmp dec mov jmp xchg mov mov fcoms pushf and mov add or dec add jle mov mov add sub ljmp inc jg bound xor in jge sub sbb cmpsl xor inc sub or rorl pop and imul lahf jbe pop dec sahf in and test movsb fdivs cmpsb shrl (bad) jno (bad) pop adc or lcall popf stos push pop inc aas and (bad) dec out pushl push and inc cmpsl pop jnp daa and into sbb mov dec cld or pop xchg (bad) fcoms xlat scas notb pop and js roll mul aam mov pop pusha add (bad) and insb cmp (bad) mov in lret xlat push xchg movsb into lods cltd movsb aad mov cmc and push cli mov or lret daa mov push xchg movsl fdivrl or jp ror xchg jne jecxz add push push mov in xchg clc inc xchg scas mov sub pop test cltd sub pop sub imull jl lret jg lock push icebp xchg cltd xor mov stc scas addb push push inc mov mov aam jnp xor or push or cli pop mov dec dec adc inc or cmc movsl (bad) pop inc lea and mov (bad) mov pop nop leave pop pop loopne adc and je add push mov mov call mov dec add jle add adc lahf into popa push mov jp adc pop add mov push sub pop aas push cmp dec dec shrb push xchg push push push mov add dec pop add add les dec lods pop test adc push lahf dec push int3 fstl movsl adc pop adc or sub sub add xchg jecxz inc xlat imul cmpl sbb test sti jge scas jmp push mov fldt jno push mov pop push pop test adc fwait pop ss mulb fiaddl sub sub jnp cmp adc push push in mov xlat push jmp dec pop repnz out or scas sub ds ret leave orl lods repnz add sbb sbb xor les popf jg outsl popf lods push lock repnz or dec pop mov jl insl mov and mov (bad) jns or inc pop movsb pop or aad xor hlt mov mov je das or popa mov das mov lds ret inc jp inc ret mov icebp dec movsb jbe or pop jnp (bad) mov (bad) mov mov jg dec cmpsb sub mov inc lret mov push push in mov test lret scas addr16 push pusha and loope inc mov pop loop lret cli notl xor lds mov push add lret test lret jmp mov (bad) cs sbb xor pop mov ja fildl push add out jne jmp pop xchg xor sub popf lcall dec xchg enter push adc and icebp leave sarl and mov xor jecxz mov aaa test cs das adc dec mov rcr loopne xor adc enter and rcl sbb cwtl or xchg mov es xor popf aam pop imull cwtl xchg xchg icebp xchg fstps std inc insb test sarl add xchg ds push (bad) (bad) (bad) sub (bad) arpl rorl xor mov xor mov mov xlat inc xlat xchg or pop jle ds and pop ljmp loop stos leave pop repnz sbbl pushf mov sub loop xlat (bad) lret hlt and mov hlt pop inc jo or iret push aas sub call test sahf outsb addr16 stc push xchg outsb in fwait mov outsl je and xchg sub xor xor push mov pop inc cwtl stos xchg lds movsl incl mov pop repnz and ljmp int3 popf xor xchg mov cli scas subl in arpl push test mull (bad) ror ja (bad) rol jmp fimull sub ret add add je dec and jae or mov leave and test repnz adcl rcll inc rol decl inc loope xchg leave or cmp call in inc mov pop pop mov out movsl daa jmp stc (bad) divl add lods (bad) lret mov bound cld movsl das sbb sub dec mov int3 pusha loope mov add loop push pop lods sti mov ljmp iret scas jge ret lods mov shll mov aad push mov add add mov push mov push jl add add mov cmp mov or out adc add sub out je int3 xor jg dec fdivr sub pop xor xor xlat dec scas aam cli adc in mov pop lahf mov insb inc sahf push inc pop and das mov pop mov xor or xchg adc add sub stc adcl sbb ja push jge xor dec imul enter add and xchg mov and mov aaa icebp in das ret sbb xchg add xchg mov add add pop (bad) mov sbb out mov jmp or loop scas addr16 fstpt pop fdivrs (bad) pushf (bad) xor push or mov mov repz divb js mov (bad) repz xor sub push (bad) (bad) push (bad) cmp or mov ja enter stos addr16 jmp sbb rcrl fs pop and sbb cwtl mov inc outsl cli mov ficomp lods notb clc inc add out sub push (bad) stos popf pop sbb out and mov cmp aas loope sub (bad) mov sub sbb jmp sti scas and stc call int jp xchg mov add add roll inc loope xchg sub int3 in (bad) xchg push loop popa mov stc cs outsb mov mov sub push hlt rclb lock loop mov or ds pop outsb pop and scas imul adc pop push js popf jbe jp sbb or scas sahf or xor push fucom dec jo push shr push xchg test mov leave jb in mov push sub xor adc stc inc mov (bad) je (bad) cmp add dec inc jg mov je leave jae test cli lret loopne add or je daa add clc sub mov movsb dec push stos xor dec and and push lahf enter imul mov in push nop dec test rclb dec lret lret shrl lret pop js aaa pop mov sbb imul int leave ret (bad) nop adc bound pushl adc fdivrs lods outsl (bad) xor pop movl mov lret insb dec sub sub pop sub sub sarl fwait sar dec xor xrelease (bad) xor in pop jmp addr16 dec add jbe dec add add cmp fiadd or shll sbb in test sarb add ds sub or adc sbb in inc in pop push xor lret enter xlat (bad) icebp imul (bad) sub in mov popf pop loopne and mov fnstenv push jo mov sbb mov inc out mov lret (bad) push and fldcw mov (bad) jmp add mov push pop enter and sbb push xor and jb inc or aaa clc and sub cmpsl fldpi orl add mov pop (bad) xor icebp push xchg jbe lret mov rcrl (bad) cmp dec test cmp lcall pop jmp andl jne lds pop adc and (bad) add jecxz mov pop mov decl clc add mov in cmpsl jge fcomp popf leave ret jnp movsl push lods leave mov and xor stos mov aaa out sub lahf movsb roll movsl jmp xor cmpsl dec jg push repz mov mov push popa arpl scas movsl leave fwait xchg dec out popf (bad) lret or jecxz dec scas add ret lret xchg cmp cmp sar or push mov xlat cli cmp dec stc out xor push ret jle jb into jge mov out inc sahf sbb mov sbb and push sbb cmpsl cld ret imul std sbb movsl inc std dec sub add hlt mov adc xor sub and (bad) pop sub inc and rolb notb inc pop push pop test pop imul das mov xchg dec rorb pop ret (bad) je (bad) dec addr16 clc das mov fisubr dec ret stos lcall mov cmc push pop adc subb cmp inc int sub out sub rcll mov sbb jg int3 out inc pop mov pusha ljmp lds dec pusha jg mov xchg jbe les mov sbb imull or int3 andl bound sub negl cmp clc add jmp mov leave jecxz sti pop aad sub cmp sub cmp push push push sub aam dec xor scas sub into mov rcll sub xor sub sarl ss and or ljmp movsl mov lret sub mov mov or inc out pop and jae ljmp (bad) incl dec jne lock pop xor add mov cli mov test movzbl loop (bad) push lds pop loope sub add mov cli ds pushf popf pop bnd dec pop loop push cmp shrl iret shlb cmp mov mov inc or pop shll mov sahf xor or scas sub push sub fisubr push push (bad) das outsb out dec and mov sti sub outsb xor ss cs cmp push les fsts (bad) pop into mov xchg ljmp arpl sbb and inc ror cli mov (bad) loop dec in mov pop insb pop and and pop cli lcall cmp xchg push jns out out sub cmp aaa bound pop sub ljmp add shrb insb mov pop sbb ret push add push (bad) fidivl les or xlat scas and jl ret pushl xor ljmp idivl out mov mov in adc pop jmp std cmp jo movsl fucom mov shll xchg mov mov push mov jmp cltd fsubl fucomip rep insb (bad) xchg mull test mov xchg lods sbb mov mull adc stos jecxz pop xchg aad enter outsb popf fildll sub mov adc gs cli xor dec (bad) in mov push jae cmpsl pop mov dec rcll and sbb ss pushf sub fs in (bad) xlat test dec ljmp cmpsb mov pop sti pop add cmp inc rsm sub mov sub pushf (bad) pop xor jns pop test jge xor sub es into out mov fist cld bound fidiv xlat out lods inc out pop mov sub fistpll sbbl inc out cld stos mov mov das push xchg loope lret or add enter es and xchg out mov (bad) mov sarl gs les stos icebp jle xor out call cmp pop or pop leave mov jle sbb add fsts jge jne add loopne cmc insb or xlat lods bound rclb repnz add jge data16 xchg or sbb imul es loope fistp loop shrl mov sub in hlt cltd idivb dec incl pop icebp in daa rcl daa in xchg jo and lret jo les sub sbb or pop mov add jecxz mov pushl leave or into imul xchg (bad) sarb jbe out sub (bad) mov or push xchg pushf inc jmp mov and enter cld cltd loop inc cmp mov add repnz and cmp ja (bad) and xchg or lahf pop mov repnz adc add xchg inc or inc addr16 aam jbe leave jge das fisubrl dec ror and pop (bad) in push dec push jge insl xchg inc sbb lods xlat sbb push test sub or cmc lret mov jmp gs jno xor jno xor jnp scas sub adc (bad) imul mov inc (bad) jp xlat (bad) enter leave pop xor jno xchg ret mov hlt cs and cmp pop mov jno cmp xlat or or notl pop clc sub sub nop cmp cltd and sub imul pop cmp in push mov cmc gs push popf jp daa ret and fnstenv mov adc mov or push mov ljmp xchg mov pop push sbb test add (bad) daa sub movsl add leave and sub mov inc out dec or into incl sub xlat pushl adc arpl scas insl (bad) sub push add or jno mov mov stos lcall jns mov gs cmp (bad) xchg mov mov pop out sub pop push and dec ret adc xor mov pop test lret (bad) adc push push add mov push clc cs ljmp pop mov sub pop je jmp xor aaa mov mov inc mov lcall fwait inc loopne shll push cmp sarb xchg cmpsl inc inc dec xor stos sub push iret mov and and push mov and fnstsw stos rolb je dec xor scas ret dec test call dec bound push pop clc push dec ljmp outsl les ds jmp mov sarb out xor dec mov in popf dec ss (bad) dec add jmp lcall pushf out loop (bad) out mov sub sub scas fs call adc or add sub insl inc adc (bad) into jl push jnp and fistpll lods pop adc outsl enter or imul negb jle xor mov mov (bad) fstpl les pushl stc mov add scas mov imul xchg pop xor mov xlat ljmp mov fcomip push pop movsb push out cmp movsb (bad) mov jo xchg cs loop bound jge sbb or xor cld push mov pop sbb cmpsl lret cmp daa add das cmp adc sub dec cmp divl rorl xor xor cmpsb dec dec xchg cltd cli sub cmp bound fcmovbe into jmp test cmc (bad) push std cmp scas (bad) cmc call xchg mov ret fidivr dec pop sub or stos out pop insb dec lahf aam push cli push mov fdivs mov das (bad) xor aaa stc dec cld pop lcall int loop dec jae out (bad) testb push inc and test ss adc dec cs xchg (bad) xchg idivl pop mov in adc jb mov icebp push and es cli ret mov and inc icebp pop and jno mov daa fs fwait push aad (bad) dec daa cmpsl lock imul lret push jge ss sbb repz xchg lock shlb scas sbb sbb into lods or xchg jmp jmp jle iret mov imul (bad) inc sub sub push js dec fucomip cwtl mov rcrl lock cmp mov xor inc jecxz pop push jne fistp pop pop lret xchg sub cmpsb rcrb pop scas pop pop aam popf mov stc or push dec clc mov int sbb jno mov ljmp mov sbb mov pop mov pop stc pop push sahf dec fdivrp xchg mov pusha (bad) enter xor pop mov icebp mov jmp lods std mov js mov (bad) jne push imul xchg cli add xchg dec jge imul xchg sub mov ret push adc xchg movsb mov stos fdivrs xchg sahf pusha push div jne or jmp cmp sub jecxz and out stos cmpsb divl xor adc cmp xor pop lods (bad) mov aad push iret push imul mov push loope pop out fs mov sub lahf adc lea xchg xchg xor ret inc stos aam mov mov iret fistpll xchg sub and mov pop or jmp add push out sub sub lcall das mov test sbb mov dec aam (bad) (bad) divb lock xor mov mov dec jl lea sahf ffreep pop or pop and sub and ret test ret or stos sub add lret movsb and mov push add hlt (bad) shr clc push jmp sti (bad) cmp insl (bad) mov sbb or or mov pop fwait cmp test dec call nop and xchg ret or test xor xor nop loop pop fwait incb rol dec dec mov add cltd lahf or aas lret mov fisubr ja cmc ret (bad) daa or inc sahf mov fstpt lret mull pushf jmp (bad) mov adc mov xlat pushf cld cwtl cmpsl xchg lret fwait dec repz psrlq int call call pop push hlt dec leave hlt mov mov loop popa mov or mov cmpsl cmp out jge pushf dec clc fwait leave add add push mov nop scas push test mov sarl cwtl scas or addr16 sbb sbb adc pusha xchg dec xor sbb sbb pop idiv pop and out aam jns sub jg lock mov pop mov dec imul je dec stos and repnz jge xchg rcll loope test cmp jle ljmp sub mov sarb mov push push jecxz xchg sub stc push pop or sub cmpsl loopne call push stos add pop sub push dec push add jmp mov mov enter cvtps2pd lods nop subl leave pop pop mov push shlb shll cwtl sbb adc or xchg (bad) incl loope push out cmp das lods and pop cmc sbb mov test inc or push push mov xchg sub jg mov jp ds pop dec test rcrb popa scas xchg mov fist sub adc xchg mov jge mov xchg mov imul and xor or sar jmp outsb xchg or push xchg lcall push sub ljmp pop jge insl daa fldlg2 inc push lds mov lcall pop push mov (bad) add idivb fsts mov mov adc sub popf push iret mov (bad) icebp out adc sub (bad) jmp fldz xor pop mov pop jno sub inc xor shll xchg push and ds or dec push and pop or lret push pushl jo cmp sub ds adc push ret dec ds iret enter enter xor divb ljmp div fildl fsubr cmp out or sub jnp,pt loopne lock sub icebp shr jmp aad int dec mov cmp sub sarl and lret call push sahf pop xor hlt and aas notl call cmpsl ds or and sti pop stos xorl mov lret xchg pop stos lea mov and and xor xchg shll or xor notb pop mov add js sub add aas clc mov out fs sbb mov mov cld inc xchg push jl mov push pushf mov pop dec test cmp and or gs pop mov push data16 xchg push mov cli mov or mov mov mov inc jge add xlat jge hlt mov or cld out gs jmp fnstcw lds imul int rcl mov bound je fs mov rorl add or stc call sub jg push pop fmul pop insb and mov into popf into lock pop adc or cmp mov cmc mov int3 xchg dec fisub (bad) (bad) adc in cmpb sub lahf nop inc mov sbb gs and xor mov clc popf insb dec add sbb jo mov adc push sbb xor mov push dec mov pop movq push pop stc loop xchg push dec test cmp fisubrl std lods dec fnstenv jg cltd out jmp leave push dec icebp into push repnz popf loop push add (bad) and aad mov or add inc jmp lea stc xchg (bad) out sub jbe nop out or lahf and fmuls xchg test test jno jne fldt adc mov sub neg ret push adc sarl movsb mov sbb call or mov negl pushf hlt (bad) in cmpsl (bad) mov dec out loopne movb mov mov jge inc fadd pop xlat inc enter arpl adc mov mov add push mov sub fdecstp dec xlat cltd push (bad) pop out les ret jmp das fdivs lcall fisttp dec mov dec xorl iret cmp shll sub jnp cmp xor inc imul push push fstps sub int ss or movsl std out popf xor ret lds std fcoms faddl mov iret xor jp (bad) movsl jle bound xor mov mov dec or pop sub ja xor icebp mov lods and xor jb fiadd aam pop push lock mov push pop pop gs test mov sbb sub pop cwtl and mov stos and xor dec lahf (bad) and or xlat and jno mov push scas (bad) xlat jb loop out leave mov push cmp (bad) cmp add xchg lret dec leave mov pop jnp sbb and je pusha xor cs rol push call icebp and mov xor dec pop mov dec mov ret add inc ret push inc mov and sub mov scas mov sub outsl (bad) mov cmp mov push mov pusha divb xchg sbb shrb xor sbb sub sbb mov xchg or hlt je (bad) sbb and push rcr jno sahf add inc xchg (bad) lock mov outsl push ljmp sub notb jecxz loope sub xor jnp scas out jge das loope jge ficomp xchg out scas mov xchg out test sti mov dec mov ljmp add out shll xor jp daa jle adc mov repz (bad) dec mov xchg push js sbb dec std std mov pop (bad) jl add pop mov sbb adc mov push into (bad) adc (bad) adc mov push adc mov jecxz pop lods ror icebp or push leave mov stc sbb adc push scas negl scas call into stos fs roll incb pop or pop dec loop add cwtl and popf dec jp jmp sarl fcmovnb xor icebp inc and test xor push loop jg dec dec fdiv sbb inc push cmp pop inc pop fisub cs sub lea ret jne jle out sub xchg (bad) mov xchg daa fdivs dec mov out or xlat (bad) mov (bad) lock adc addr16 dec clc outsb gs mov xor push xor pushf sti fsubl es dec xor pop test jb ds xchg fidiv cs pop fcompl jb ret arpl lret push xor xchg (bad) pushl inc leave or and int3 cs sub pop push mov xor loop fucomi es repnz cld imul mov adc adc outsb add sbb fadds lods movb mov mov pop iret mov ds lock mulb inc lret push push xor sub mov rcr sub push or daa sbb test adcl push inc pop inc sub mov stos js jbe jecxz (bad) ss cmpsw xlat push out stc mov in xchg jae mov mov xor xchg mov dec rolb out icebp push mov mov jne jle inc cmpsl pop aad mov jecxz and clc mov (bad) lods out hlt scas cmpsl stc sub mov push pop lock xor (bad) dec adc daa push stos push mov jb ret (bad) push push xor rorl mov xchg sub adc xor (bad) in and cmc addr16 dec sti adc xor adc pop adc int3 and xchg std xchg (bad) pushf or inc lcall jp xchg cwtl cmpsb add pop mov dec pusha push xor pop mov test mov (bad) ror ds and insl and mov pop add adc fsts mov adc sub daa adc lahf (bad) mov in xchg ja rclb sub pop fidivr sub jmp and or popa dec ljmp inc mov push rcl mov jnp imull cwtd ret push jmp shrl mov and (bad) dec lcall mov or out push or call pop lret outsl pop mov mov (bad) xchg jmp mov and inc flds adc jo ret jle push aam pop ja (bad) das outsb decl and rorb mov (bad) xchg fidivrl xor sub (bad) cwtl test cs jno das inc mov dec pushf cmpsb inc dec stos lea jle xchg out xor stos cmp or mov or xchg inc add cwtl aas xor (bad) mov adc scas shll sbb lret clc mov inc adc bound enter call pop and leave add sub stc nop mov cmc xor (bad) leave cli cmp outsl std and lret cmpsb rcrl lea mov rcrl sbb xchg adc lahf sarb mov sub cmp xchg jge cli jmp daa outsb fmuls add mov push test repnz rorl inc data16 jle lds jbe hlt mov jmp cmp out imul cmpsl das ret xor pop jmp cmc dec pusha cltd movsb push push sub sub sub cmp mov xor mov dec (bad) out in push jl pop lret stc movsb (bad) xor notb movl push jb mov test mov and adc rcll mov dec mov dec pop dec push dec jmp xchg mov das mov or pop xor ja mov out fistl fdivrl push repz xchg (bad) jns movsl aad jecxz xor push xchg call lret xlat add ret movsl cmc outsb pop popf loopne shrb adc add jmp jle out add lods push xchg test fnstsw out mov out dec xlat cmc xor (bad) lret test (bad) fcoms or ljmp cmp imul add push test (bad) cmc (bad) mov push adc sub iret scas xor xor inc out cli repnz lods pop mov ss dec (bad) jne (bad) lret daa into lods mov mov ja popl lds (bad) insl daa xor std cmp call xor jmp or stos pop push mov cmp cmp jb jmp out ja xor or lds push pop and in mov cmp or xchg jbe push icebp cmp xchg enter (bad) movsb jp insl cmc and arpl std ret dec out xor lret pushf data16 mov pop divl add arpl mov sbb lcall or stos sarl test mov outsl cmp add add sti mov in ja jmp test xchg fstpl in xchg imulb jp fwait sbb sub adc push in jmp into fwait mov fs dec fcomps (bad) xchg pop sub jae mov outsb imul adc enter loop sub lret enter mov jg int3 dec push push in aaa out xlat xchg xchg mov xchg sub movb xchg leave imul movsb dec aad divb (bad) push repz adc pop mov mov mov xor xchg nop jp ds into ret dec cwtl icebp mov jno sub adc (bad) repnz sub lods fstl aas pop mov lret in (bad) cmp ret mov (bad) mov cmc xor inc ss les int3 cmp pop (bad) repnz mov into les fwait xchg dec outsb sbb cmpsl pop sbb lret or cmp insl js cmpsb rclb ficoml cmpsl roll loop cmpsb scas rcrl jmp (bad) cmp pop movsl pop xchg ss ret adc in jg (bad) movsb scas ror and add pusha add push sub call sbb adc dec out aaa xchg sti addr16 and pop xchg sbb mov mov sub and sarl fistpll inc into pop (bad) mov cld out or add and or cwtl cld cmpsb jmp test cmc xchg hlt push out mov pop sbb (bad) repz mov in xchg jnp add add cltd and (bad) mov and inc inc mov pop sub insl mov mov out movsb xor xchg or icebp ja mov (bad) out xor jge in or jmp insl (bad) (bad) mov mov pop in jg data16 ret int3 sub or adc popf mov ljmp mov xchg mov xlat sbb jge in into imul adc (bad) mov sbb xor fcoms dec sbb mov imul stos (bad) push fs and sub jne push inc rol or and out xor ljmp stos cmpsl xchg addb fstpl shr popa (bad) aaa mov insb inc xchg dec (bad) in arpl mov cmp or repnz in into mov or hlt adc xchg dec mov mov and sub pop dec shrb cmp mov dec add jle push jmp sub pop add mov gs jns lods push iret loop cmp ret push adc loope push sbb fs mov loopne or sti pop daa (bad) jp jle pop jg fidivr or dec xchg addr16 mov jne lods pop dec (bad) mov fistpl jb add ja push les movsl xchg ds adc ljmp cli daa out push out pop mul mov dec mov lock adc mov idivb fcoms inc je mov fwait mov add mov sub cmpsb adc inc mov out adc jmp test push iret mov es xchg movsb sub aad ja addr16 adc sub in imul idiv sub out daa adc mov std es aaa xchg sub dec (bad) cmp stos sub add dec fnstsw add and out scas (bad) in negb pop push loope inc rorb sbb pop sar pushf mov and lahf adc or jge mov and mov cli push aad and enter mov xor loop push and bound out std cwtl adc pop daa orb fnsave sub jbe loopne sti sub popf mov cwtl inc mov andb lahf jne add sub ds popa frstor (bad) cwtl or stos xor mov mov cmp bound mov dec in xor or add int3 stos jmp dec pop imul scas cmp add dec es sbb mov pop jl jmp add xor or or jle dec (bad) scas cmp out sti cli pop mov xchg add and adc jo xor mov repz cmp movzbl add and push out movsl incb pop scas aam scas repnz (bad) mov push (bad) sub addr16 sahf js faddp xchg push push push or fsts daa (bad) pop add sub inc jns shrb and or and dec roll ljmp idivb inc test mov mov icebp or xlat xor and inc popf pop xchg xchg out scas mov xchg flds dec ja push imul mov or cmpb xchg dec sub pop cmp sub push shr push cwtl pop add pop inc jae and cmc idivl mov out les ret (bad) aaa ret jno push mov mov or jno cmpsl jne (bad) dec jmp shrb in add or cmp (bad) mov push call (bad) out add stos pop imulb in inc xor imul sbb sub repz push adc jnp and add jb xor sub or das pop lahf ret dec pop cltd andl jge jno les push dec dec mov daa add jne push dec or cld and cmp pop fs popf cmp mov cld aam ret test xchg les cltd icebp sbb cmpsl cmp movsb lcall pop out call data16 add stc mov xor cltd pop sub adc xor cwtl std iret clc (bad) cld xlat xchg cs icebp push das and lret adc push cli rorb loop lds out ret or xchg jecxz dec (bad) xchg (bad) pop and push test adc call mov xchg lahf inc mov (bad) xor jo rcll sub adc js test idivb aas dec or adc aad cli cmp or add and mov xchg jle push rorb xchg int (bad) scas fistl add jg mov jmp xor mov mov lods cmpsb (bad) gs xor add pop rcrb or pop xchg (bad) jne aad or xor sub xchg mov and aas sub cmp movsb add repnz (bad) lret cmp and push dec sar and leave pop and fwait cmp push in xchg cmpsl mov jle add inc daa jns,pn inc push sub jmp fadds inc sub (bad) cmp mov xor xor iret inc shrl das cmc adc jo dec mov loope sub jnp dec xchg lds mov pusha adc sbb xchg lds sbb add add leave xor (bad) fsubrs push sarl mov mov jns dec fwait lock jp pop sub sub fcos push fwait insl scas imul push (bad) pop daa sub xlat in cmpsl xchg xchg mov pop or aam lds ret mov incb pop (bad) dec lods in (bad) fidivr mov div pop xor ret in dec adc scas push push sub xor and popl out xor sub mov adc setl data16 sub sub sub loope xor (bad) sub daa (bad) xlat cwtl pop add dec mov sbb xchg divl and aad loop adc sub pop mov xchg jg (bad) repnz lahf xor (bad) repz jl lret les mov mov rcr mov cmp adc in or pop mov nop and repnz ret repz adc inc sub and aas mov pop dec inc and add jnp adc dec mov push pop mov scas int3 ja test sarl cmp shr cmpsb cs xchg ds lea out jp mov out out idivb inc jmp cltd dec pop (bad) xor popa in ret inc xor xor lds jb and je adc int push inc sub cmp mov call adc cmc dec mov dec cmp out mov aas inc test jmp sub mov pop cmpsl xor mov in push test dec pop adc dec rcrl push pop pop push jnp shrl fildl stc pushf lods insb adc pop pop pop cmp dec cmpsl mov mov fistpll cmp push mov test (bad) call das sbb outsl cs or sub add xor aas cltd cmp or rclb or cmp mov add cmc stc inc mov fs xchg mov xchg adc das lods das mov cli jmp iret xor call xor inc (bad) stos in xlat lahf cmpsl pop mov out add andb cltd inc jecxz fstpt pop jmp mov mov sbb (bad) cmp test iret out bound negl rclb push test test dec iret pop cld into mov add lcall mov hlt cmp pusha call mov add cmp test xchg and and pushf orl mov push repz clc idivb xorl int3 jmp hlt xchg out sub loop pop aaa imul xchg fwait into push xor push lcall aam pop mov and cld leave xor lcall aad insb (bad) xor jecxz repz lret mov stos lret stos pop mov out imul pop test out mov lods mov mov stc or gs mov es mov mov daa jecxz xchg rorl into mov shll pusha xchg inc push and fs jb sub sbb scas das (bad) movsl ljmp mov add cmc push jecxz daa and cmp jno es xchg clc mov adc or clc mov or or cmp mov in add jno mov mov enter mov jmp pop lock rorb mov aam lret std mov jge nop mov push push dec out or repz fsubrl nop add jmp jmp fs lea mov and cltd inc add scas gs outsl and xor negb aam and inc xchg out sub mov push pop mov int sub test ret in push inc out pop push xchg scas mov pusha popf and dec out lret mov pop cmc lret mov arpl je jecxz into icebp xchg lcall or je pop xlat dec cld xchg push test mov mov pop in pop cltd imul mov mov repz or fsubl and push fstl and pop loop pop jnp shrb fs xor pop and jnp cmp mov mov push adc aaa push ss jbe jle push fdiv popf or sbb cmp jmp (bad) sbb (bad) xchg lock ja mov scas fwait lcall mov mov out mov xchg xor (bad) mov loope in mov adc and or inc or sbb and leave dec testb fmull cmp dec lock in dec mov and pop fs scas lret das dec mov push pop loope cmp gs (bad) mov jmp jge mov push fcoms jecxz lahf sub push add das lret add and das in push testl clc out xchg out push (bad) pop push test out push xchg push mov xchg inc xor jne xchg pop icebp fs fist adc fxch cmp rclb (bad) into stc dec test mov loop pop hlt (bad) gs sub xor lods xchg adc fsubl pop (bad) das and stos fsts popf in test push loop jbe jb adc sbb mov mov mov inc xor shrb das mov mov and adc xor mov pop dec xchg out cltd push imul popf sbb imull pop mov cmp or dec mov dec out sub add xor xor iret cli mov inc jno sbb sub mov mov push push jge mov in push sbb sbb in mov xor mov nop fs jbe sub (bad) add add mov add (bad) mov pop mov or and pop stos stos push push divb mov mov iret incb pop aaa adc jne mov mov adc int outsl jecxz sub sbb rcrb dec mov sbb gs fcomps add mov jle pop in outsl lods mov mov pushl pop add mov push mov (bad) cltd mov fistp sub scas leave pop icebp fs out lret xor mov je sti (bad) gs or in pop add xor icebp cmpsb jp mov add out sub or or sub mov mov dec mov es leave mov lret test mov pop push daa aam jb cli and into sbb xchg pushf adc (bad) lret call ljmp sbb cmp sub (bad) xchg add xor std push push adc jmp int leave or xchg es mov out fstl ficoml or out loope add pushf daa cmc xchg shrb adc pop or adc cmp ror xor push popf mov std fsubrs pop ljmp xchg mov mov dec ret pop push mov scas icebp pop sub pop dec jmp jge xor cli or idivb sub jmp or pop pop (bad) xor dec (bad) jno xchg xor int3 mov and xor dec pop sub (bad) cld insl shrb jo jne jle (bad) dec add cwtl and mov insb out cltd rclb and test out repnz mov enter fstl sub gs sbb xchg imull pop add out out pop in pop xchg sbb pop inc repnz dec dec adc sbb jmp add fnsave out repnz adc popf cwtl movsl or out pop popf jae xchg sub fisubr notl loope pop adc xchg jge (bad) push imul sar xor (bad) out pop inc dec xor mull and mov outsb cld inc mov pop mov push fiaddl gs push sub popf jp lock mov dec jo sub adc icebp in inc mov xchg cmc les es aad sub sub es add std popa fbstp (bad) (bad) icebp loop sbb and lds into jecxz sub sub test push cmpsb (bad) xchg jge pop pop rcl xchg sbb in out call popf lds mov push mov pop or bound mov lret jecxz addr16 sub das and stos lret fidivl arpl scas std andl or out mov inc add nop daa xor xchg js xchg jno vmovhpd or jg mov into and add add dec pop inc (bad) cmpsl hlt jle push xor fcoml cld hlt jmp ljmp pushf dec mov push mov jno sub dec lret cli mov or pop je cld and sub jg popf mov sti sub xchg push xchg repz jl xlat mov ljmp mov mov pushf dec lret (bad) adc out into push cmp fidivrl xchg addr16 pop add out int (bad) jle iret shrl push icebp or stos and xor adc je into lret and je das or and mov push mov clc test ljmp cs mov aam out mov mov movsl or xlat movsb movsb repz xchg dec cs daa and daa push mov or int3 dec jne aad outsl pop (bad) xor rcll repz pushf out mov push fsubrl pop xlat adc loop xchg mov divb or push push sbb and push imulb sub int ljmp dec aaa dec test mov mov jp mov loope data16 push add andl cmp push xchg mov mov mov mov xor add xchg fbstp rep sub cs adc mov scas xor or sub sti add or or pop xchg mov leave test adc sahf mov (bad) scas mov sub mov dec decl (bad) lods movsl incb xlat and xchg loop,pt and add push mov xor cwtl inc mov jne or (bad) mov dec (bad) jle imul inc xchg mov jmp mov (bad) sub lret notb out dec or xchg inc cmp jg iret adc int sub ja stos je lods cmp (bad) lret pop repnz xchg push xchg ret and sbb je pop cmc fistpl and mov dec in mov add jmp inc iret mov add or out xor add and push aam pop xchg js ret adc push movb dec push pop xchg mov xchg mov out dec pop sub notb shrl hlt inc imul test in insb das mov les ljmp shrl dec (bad) div daa iret (bad) jmp dec jbe push pop stc adc mov add iret aad inc xor push cmp jbe jb xor inc sub add adc add cmp stc lds clc js out add push (bad) adc pop pop mov imul test pop inc xor and rcr out xchg jns loop push idivl popa add mov sarl or jle mov lahf stc push ret test xor scas cmp addr16 nop arpl sti mov inc mov jg add test xchg sbb add push xchg adcl repnz mov divl mov in pop fsubrl aas clc frstor daa bound pop ficom and ds fsubs aam inc and lcall mov jecxz (bad) mov ds (bad) scas (bad) xlat out in mov ret and loope push dec sub adc mov xor push cmp jl pop xlat mov inc xor notl enter scas cwtl push (bad) dec pop mov inc xor je mov add and addr16 mov mov push out loope data16 xchg and in in and cld in xor repz xchg lcall icebp push movsl pop int3 (bad) xchg jge es clc pop xor scas xor push mov insl adc insb xchg mov gs xor push insb shlb sub pop ja jp dec pop mov mov out jl stc mull dec push dec scas cmp or pop cmp add in add (bad) xor leave add les adc cmc cmp in mov sub or sub leave pop (bad) repz sub cs push leave add cli jns (bad) neg cmp xlat sub or xchg loop jle push add sub mov sti mov iret adcb gs push repz addr16 push outsb mov xchg test aas (bad) lret xchg fsubs dec push xchg mov sub int3 pop (bad) cmpsb es lods out mov sub or and add add xchg lods cmp cmp and aam pop dec mov adc xor sbb decb mov add or cmp out sub leave pop push xchg fmulp push into xor loopne push (bad) sub cmc data16 pop mov adc sub mov sub and jns pop mov mov fisttpl imul cmp (bad) bnd jb in inc and int ljmp gs mov sub dec fldcw xlat test xor mov add or dec mov lcall inc hlt and pop cmc sti lret daa mov mov (bad) repz test stc adc or and sub mov fisubr sub mov push xchg add jmp cmp push adc sub (bad) push sbb les stos and lahf insb leave cmp or adc inc aas and mov je test lahf movsb adc clc xchg mov mov add sub mov mov cmp jle inc or or add mov leave dec stc mov pop adc adc xchg cmc xchg mov sub push sub lahf fisubr repz ret pop jb (bad) mov mov mov (bad) cltd mov mov les push and dec in sbb hlt and add mov adc and xlat ret jno dec ret out jbe (bad) shrb std jb jns bound rcrb dec idiv sub out sub (bad) push das or sar mov popf xor mov push xor sti (bad) fmulp in adc stos xor insb outsb sarl jno lret push loope pop cmp mov rep sub dec pop repz repnz ja mov imul jp pushf pusha pop repz movsb xchg inc cmp cmp movsl mov inc rorl pushf mov add dec xchg mov sub xor lds ret call stos sub mov outsl mov mov daa stc inc mov shr pop jmp xor (bad) mov lock movsl mov xchg les rcrb repnz sti sub and or inc push leave sbb cli into aas push lcall lret (bad) rclb sbb test or or mov dec in xor ljmp outsb test stos mov enter test test sub mov loopne (bad) mov inc pop data16 sti mov pop mov das out insl das pop shlb pop push fs xchg aad jne push mov pop push test jmp jns ret not pop (bad) jae adc adc mov ret pusha inc in ret adc sub jmp and in or adc inc ljmp and mov in add pop addr16 sub xor outsl push fistp cmc xchg js mov mov sbb (bad) or je popa call xchg jecxz jl pop push and into ljmp and popf jne mov xchg mov decb xchg mov push ljmp adc or xchg cli mov stos mov push mov ja pop lahf popa or xchg aad add jmp and sub cmpsl aam mov (bad) mov mov je repnz add mov fstp loope jg (bad) stc sahf stos inc sub jne jae jecxz sub xchg jo das sub pop sub xor stos pusha pop or aas dec insl out ret es pop sbb mov or mov cmp jg out xchg shrl cmpsl jo xchg mov pop xchg cmp das in dec aam dec loope jnp push jp pop mov and repz or and pop data16 aas fcoms dec ss daa out adc sub push icebp ret cld test mov icebp fwait dec roll std nop or add push (bad) xchg xor cmp inc popf rcll cmp sub icebp leave cmp js ss aas ds repnz mov sbb mov cmp push and inc jnp mov push xchg mov pushf repnz (bad) lret jbe aad rcrb xchg (bad) and add inc (bad) lock xor jl mov adc hlt popf pop lcall mov sub jmp enter daa sbb ja in or adc xor adc pminsw test insl and mov or fstpl les call mov das and (bad) ds test jne daa dec fnsave (bad) add rcrl lds scas sbb lret test mov into mov aas fs outsb add push ret push out lea rep popa rol sub cmovle and imul inc mov sub rcrl or movsl ret test cmp add (bad) jge (bad) adc loopne push or or add pop jle jno nop std lock bound or (bad) jecxz and mov xchg adc or or sub out gs repnz and movsl inc jne push add and scas cld or fsts add cmc xchg clc or cmp or pop mov mov pop js jae and ds fadds push mulb and (bad) xor out aad stos dec or pop out dec call out dec idivl push ljmp jge fnsave cmp add jmp sub std sbb (bad) cmp in and sub movsl add sub in xchg out cwtl aas or add clc movl or push movsl frstor sub sub push dec repnz xlat in scas pop popf daa sub cs (bad) in in mov nop cmp aam sti mov negl pop pop popa mov fldt xchg mov mov std testl or mov mov out inc and fldl fistpl insb fmull push sarl repz mov xor jmp clc lret icebp mov mov (bad) push enter xchg gs xor mov mov push fnstsw add stc cmp mov in fst mov mov xchg es xor mov repz add adc sbb fidivrl jo push push add loop sbb jp rcr gs add aaa (bad) aaa fwait in lret jge not dec mov xor (bad) jne add std mov psubq lret dec cmp (bad) fdivp (bad) sub packssdw xor lret rolb push xor sub (bad) out fnstcw mov scas jno ret (bad) or rdtsc (bad) push xchg (bad) pop out sub ds fs scas sub fs jmp pop mov int ds xlat jbe lds cmpsl fdivrl cltd imul repnz cmp in clc sub sbb dec mov pop dec jl stc xor jbe loope jne xor in xor fidivrl pop and fldcw sbb pop addr16 sbb into popa popf mov dec pop add add outsb movsb mov xor (bad) sub push (bad) adc enter sti xchg cmp in inc mov test daa or and bound sub data16 je movl mov scas xor stc aad xor mov sub or pushf mov scas mov dec mov mov scas mov mov push and das sub sub mov (bad) pushf sub xor icebp (bad) jae jge in rcl sti cltd or negl imul or fnstenv push stos lcall ljmp mov push jbe lods (bad) ret and sub (bad) push jle jb mov pop dec outsb jmp pop bound mov or push icebp imul xchg leave xchg mov or ds stc iret xchg sub lods xor or cmp cmp and cmp out sub sub jnp xchg jb dec fistl lret inc xchg add add (bad) or ret js fist neg or or je leave fs inc and dec ror inc ds and fsts lret jle mov or or sbb inc pop jg,pt out cli in test stos iret clc pop call mov out jge push stc cmpsl mov jge into or push stc loope rcrl out xor imul push sub fucomip dec dec ret mov in mov jecxz push mov push addr16 dec imul and jmp inc cmp das idivl mov add pop (bad) leave and adc xor jnp push or out inc loope jb add xchg es xor sub test ficom dec fidivl add or dec jns dec or ds (bad) ret imul shl out int sub fbld and jno add rcl pop sbb mov notl jp data16 push into loopne cs add in add call test data16 sarb (bad) mov push xor or and orl (bad) pop (bad) movsl cld insb (bad) data16 mov (bad) test mov lcall bound mulb mov add sub jg out das in and (bad) stc jmp clc cs sub pop out addr16 (bad) mov fsubrs inc adcl push sbb fistp imul push imul adc popf pop cmp and stos cltd fldt fucomip add inc stc mov sub sub (bad) adc fisubrl adc add sbb inc pushf and loop xchg stc mov sbb pop mov sub xor push dec loopne into and enter stos pop jnp scas sbb pop mov fldcw ficom add pop sahf rol pop dec or fidivr mov stos jb or jecxz mov (bad) push and or in das sub shll lods sub jle jge or sbb dec lahf xchg push mov cmc and in in and leave xchg in in cmpsb mov dec dec int3 mov pop lds loop xchg lea cli pushf jle cmpsb fisttpll std xchg (bad) xchg or nop push and mov lret and and pusha pop dec ffree sbb mov call pusha popf inc or add iret das call adc nop xchg dec ljmp push pop movsl mov mov xor or sbb add pop das or pop jge dec add lods dec or (bad) (bad) lds imull iret jge repnz jmp pop and aam in popf jl imul mov bound daa cs push xor mov mov int and sub cmp add jbe ljmp aam rclb into inc mov dec icebp mov (bad) call ret out fdivrs xchg lcall add scas sub pop xchg xor leave lods popa push sub xlat loopne or lods mov ret push sub xchg xor push or icebp jne jbe fucomp add test adc fnstenv inc fiadd inc (bad) test leave (bad) push push jns mov ds test iret or xchg mov cmp (bad) repnz fs sub arpl adc push bound (bad) xchg leave push pushf lret fisttpll int3 cmc into push and jmp adc adc decb popf or sub sub mov push adc xchg adc xor int pop mov mov pop in daa cwtl adc orb iret mov adc movl sub pop dec mov pushf incb lret jg add xor adc fbstp rorl imul xor push lods sub rcr (bad) mov movsl aam dec mov dec mov jmp and jecxz sub xlat add dec insl adc ljmp test into pop sub dec repnz cld insb dec mov jge inc xchg or sub and gs add cs dec pop test in mov test dec pop dec mov mov or mov loop mov xor xor scas loop lds xor test lods and mov sar fs xchg cld sub gs xchg mov rcr in pop mov xchg scas jne sbb aad dec sub add mov jo or jmp loope push loopne arpl and sub xchg fwait jo and andl dec cltd xchg idivb sub adc mov dec sub push dec out mov sbb prefetcht2 les movaps pop out je cmovns push fcmovnu daa cmc lcall adc sbb orb add mov jnp push ret enter pusha movsl mulb cmp scas cmpsl aad xchg pop jb les or inc or cmp cmp insb mov ja (bad) push mov add and leave and xor jmp add out xor sub rorl rcll sbb and xor stc jg jno add daa lock or fldenv xchg pop sahf and mov push scas jbe jb add leave stos mov shl test or and ljmp lahf (bad) jno loopne and add call and pop gs loopne arpl cmp mov pop hlt inc cmp das jae and adc in stos push push pop lcall jecxz mov test fsin rcrl mov gs sub pop cmp mov push icebp or adc cltd (bad) cmp xor lods mov and out pop pushf out fs insb pop cmp inc pop cmc in add int3 jl testl mov movsl xlat inc popa mov test leave or xchg aad pop adc call xor idivb sahf hlt xor sub das inc (bad) mov sahf out xchg or jle dec ret pop pushl mov or imulb (bad) cmp scas jae repz popa adc and cwtl insb iret stc sub movsb stos mov or (bad) xchg mov cs cs movl pop ret cs mov dec into stos int sti pop dec loop test mov rclb shr xor jl fprem1 out das mov dec ljmp into je adc sub iret lock iret pop xor aad push loop inc mov sub call lret jecxz dec sub and sahf inc call lds loope jl movsb mov lret movl js push xchg lods lcall test xchg mov in ljmp or aas xor mov push call aad lods or and iret adc stc dec dec inc (bad) sub repnz repz xchg push sub add gs mov or and (bad) dec xchg ljmp js mul daa adc inc mov push adc inc (bad) jmp dec (bad) lret leave push leave push shll (bad) inc cmp xchg push jp pop sbb les sti lods sti mov mov adc lret mov add add mov call mov (bad) inc xor (bad) push add fisubr rorl mov ljmp mov dec or enter mov xor jle pop les cmp fnstcw int3 iret xor push xor pop or add mov pusha insb (bad) (bad) mov mov mov dec sahf lods ja loop js xchg xchg or arpl ja (bad) shr bound push adc mov lahf insb dec adc and mov negb leave cmpsl pop cltd or aas mov sbb clc xchg cli mov out fldenv enter je (bad) cmpsb cmp out cltd cmp fisubrl lods test lret sub xor jge jp mov stos lret push xchg mov (bad) push pop and das cmp cmpsl jmp jecxz in lahf movsl mov jns or jno pop push inc push push shlb in in frstor out adc mov xor add out fldenv mov (bad) mov adc xchg mov das test or add sub mov or jecxz lret mov iret or mov ja jns add lock mov (bad) aam aaa pop mov call sar xor xchg xlat dec or and add xchg inc and sbb ja mov stos lret xor xor stos xor daa inc dec (bad) mov xor add sub xchg or iret inc insl mov lahf push dec lahf xor loop pop cmp ret add adc mov xor pusha in jns push dec jbe and jae das lahf rolb or push cs push inc iret cwtl call mov xchg mov or dec pop or notl outsl adc push mov push push cmc mov jnp loope,pn xlat out xor xor lods movsb xchg test mov mov and fcomps pop pop or addr16 xor pop jl jmp data16 flds adc jg jns or xor cmpsl push push xchg pop pop out pop push mov dec push add mov and mov and ficoml pop in aam jge test xchg jl ret sbb jg or sarl outsb dec lret (bad) or pop adc inc mov mov addl loopne negl cmp sti out cltd repz sbb xchg or mov clts insb lods jmp idivl inc call mov and pop sbbl outsl xor sub dec insb xchg jmp outsl adc imul jnp xor decb orb or adc push mov xor mov pop lcall (bad) xor je push daa mov jl xor mov adc mov xor loop add imul (bad) cmpsl int3 sti jnp mov xchg sbb add jno (bad) mov jge xchg inc (bad) into mov add add pop mov std ret stos or ficomp jp mov push pop mov insb xchg push mov add xchg rcrb (bad) arpl adcb mov outsl push push ds lock std ljmp fdivp dec sbb jne xorl add std imul adc adc mov les and add sub jg pop (bad) (bad) stc negl pop mov andl pop sub sub push mov int sub xchg out out add or push jne mov repz ljmp add mov test push cmp fiadd xor mov jnp push push jmp and jle push pop orl add jge enter fistp pop ret sahf (bad) add xor add add popf pop mov sub add into push push pop in and lret fiaddl movsb ljmp sub divl pop or daa and shll or pop cs or iret push sub jmp inc cs sub ds fs mov mov (bad) cmp sub ret test std repz and cs cmp push cmp pop push ja int ds movsb xchg lods cmpsl aas mulb outsb xor add scas fcom fstps jno aaa je ret out sbb mov ja sub aaa popf les sti ror cmp mov rcrl sub or rcll xor jne and repz push daa test add mov mov jmp xor out loop rcr into mov mov stos push cmp mov or mov jbe leave (bad) enter js sarl push ret sub inc (bad) cmc repz jb xchg loope aas push jnp sub sti sub sub sub arpl stos call outsl ds aam jno cmp xor lcall mov pop push jle shlb add daa mov mov pop mov mov (bad) mov push shrl ror dec adc pop ret jecxz and stc ljmp or outsl enter xor popl xchg push jmp popf cmp jo mov push push ret test xor pop divl (bad) pop pop dec mov sub sbb add scas lret sub push inc ret sub jne es sub cmovle pushf sub and out sub add icebp cmc lret (bad) cli sub inc add and lret add fcmovbe in movsb sbb jmpw cwtl insb or loopne mov pop out cmp push daa clc xor sarb (bad) fidivrl or adc fidiv es jnp call clc add pop jb pop loop mov xor out dec lods jmp in push nop clc in mov fldl sub jmp or (bad) mov xor pop mov not jns mov bound (bad) ja loop cli fisubrl cmp in mov (bad) mov test xchg fs call dec mov ret sub enter scas pop leave mov mov push cld inc push dec in pop dec jae popf gs in mov sub scas cwtl jb pop pushf mov ret das gs or fnstsw push inc std xchg shr stos sbb (bad) jbe mov adc cwtl insb ds lret (bad) stc pop mov mov inc xchg jg or fidivl aas xchg test fcomps and fidiv jg mov lds xorb jae add push out add dec sarl cmc adc pop mov daa xlat test fldcw lret rorl add and ret cli pop repnz sahf icebp imulb clc andl sbb popf mov mov ret mov popf out add lret sub push lods pop out movsl push lds mov or xlat xchg rcll adc jge mov out adc mov sub and adcb or (bad) jb lret xor sub ljmp pop pop (bad) mov xor mov leave dec stc (bad) std or js xchg aad aam loope cld cmpsl jno sub mulb or out (bad) jb add jle fs loopne,pn (bad) xchg aad add cs dec stos mov pop and adc jecxz dec stos dec sbb inc or (bad) mov xor xchg loop je push jmp imul lret cmp xchg addl cmp (bad) lret imul fsubr jecxz xchg repz dec scas rol lcall xchg sbb shlb dec daa or insb pop (bad) pushf pop inc bound idivb push mov movl push pop jbe or mov inc daa movsl sbb repz scas adc in dec (bad) fdivrs (bad) dec sbb into add mov adc add addb sub loope sub cmp notl inc in mov retw andl sub xchg out (bad) test jno movl dec pushf push sub mov push lret in int or cld fsubrs movsb push leave jg inc aad jmp dec repnz inc push mov in out movsb push xchg stc (bad) movsl sbb dec scas xor cmpl cmp mov add inc cltd cmc int3 xchg dec xor lcall cmp mov push cmp mov mov test hlt xor cmp push lcall cmp (bad) (bad) hlt xor cld call cs xor mov sahf rcrb adc xor sbb int3 pop mov pop iret pop imul mov out repnz cld ret (bad) icebp sub xchg mov iret jg push add das neg daa imull daa or cwtl shrb into mov or mov mov add sub addl inc pushf clc jb mov ret or pusha mov mov aad lods lret pop fisubl (bad) loope add or and ds lret data16 xor fidivr jge (bad) call fimull nop jl lahf push out test mov or pushf fdivrl dec ffreep xor and stc out stos mov and ljmp ret or mov dec aas mov xchg or loop jg mov imull push dec pushf ret daa inc and inc xchg add adc dec imul das mov sub xlat mov (bad) outsl imul inc test into mov les adc pop std pop xchg fldl add cli xor cli xor sbb ret add mov mov xchg cmp and xchg jnp push push daa cmpsl pop adc out cmp lods xchg adc sub (bad) jne (bad) je dec fisttp out mov leave lret (bad) stos pop pop cli pop jecxz jbe sub daa pop fsubrp inc das jg mov dec iret and mov sbb inc daa loop out fsub scas xlat xchg add mov fldt fs cmp rorl mov cmpsl out lds cmp xchg enter imul add or aas push mov cmp clc stos mov pop xor xor out gs repnz and add dec xor cmp lods ret fidivrl cmpsl out mov das xor lcall push mov fcoml push sarb lock inc sub rclb out sub mov ljmp xor lahf push push sbb sub sub add xor cli mov cmp or sub cltd mov sub popf push into in jae daa sbb jb mov mov or dec mov jne cmp call fbstp stc mov pop push or mov xlat xor mov (bad) mov pop mov sub outsb jle int3 mov pop ret push inc mov xchg inc cmp jno aam add adc rcr and pushf pop decb (bad) xchg jmp add mov adc test mov xchg cltd jl mov and xchg (bad) (bad) mov test pop mov adc xchg popf cwtl das mov imul xchg imul out jbe dec cmp icebp fildll pop nop sbb mov sbb xchg ljmp mov mov cltd es int3 pop and mov pop ljmp sti cmp jnp aad scas sub add outsl in out nop dec (bad) test pop scas sub dec roll mov adc or and cmp xor mov jne lret mov jnp fildll (bad) call int3 out daa xlat mov fxch mov or ja andl fist mov sti jb dec pop sahf movsl adc jo mov pop (bad) cmp dec sbb mov cld mov pop jge and roll add mov imul mov (bad) adc xchg outsb out dec (bad) decl lret xchg add xor aam adc mov ja pop fucomp sub jge jecxz push mov into add lds sarb push movsb scas fcomp repz cwtl jecxz sti fwait or xor or and add das mov sbb inc sub xlat int3 jae sub outsb push pop jmp lods out ror imul test lret mov add push add inc lea pop div sbb xor and lods aam leave pop imul lods adc (bad) cmc mov lret test jg xor lret xchg (bad) adc ret outsb in jmp cmp pop sti xor je or mov xor add sub xor mov call dec les lret xlat push dec and (bad) dec movsb inc add adc mov outsl ja mov jns dec mulb xor and or cmp mov (bad) jmp xor in lods dec rcr pushf xchg adc sbb out icebp adc mov mov or (bad) adc js dec ficompl daa hlt gs mull push mov lret repz ja lods push dec out adc mov xchg test push out pushw xor loopne je (bad) jmp sar inc push pop jmp daa loop ljmp adc xor mov (bad) sub adc cmc out adc sub out xor pop insl push dec dec add adc (bad) xor add dec and das ljmp dec (bad) jbe pop mov mov mov xor js jne (bad) nop cmp or stos xor data16 and mov cmp lock ljmp xchg mov xchg push xlat and or and cmp xor mov daa and mov hlt repnz stc popa imul lds jecxz pop test jns popa out xor dec lret and or popf jge mov sti push inc dec sub push cwtl adc and ret fucom cmc or sub mov cmpsb daa in movsl pop jg ret lods dec dec clc mov fistpl ss dec pusha stos cmp (bad) cmp bnd jecxz sbb mov scas push sbb mov sti repz aad pop fcoms add jg fxch sbb lret ljmp (bad) or sub push lahf (bad) hlt push push pop add dec stc lcall push fnstenv push mov cs xchg cmp scas mov test divb stos lds loop lret mov das xchg lock sbb pop das sub loopne xor gs mov ljmp outsl mov lret ret ja orl (bad) imul adc inc insl andl out and out and push dec (bad) xor lret nop dec jge lock pop push cmc push repnz xlat out js dec ljmp pop add mov push scas clc (bad) iret push gs movsl xchg mov lcall aam ret out xchg jbe lret dec pop in inc das and sub or cmp sub xchg xor cmp push cmpsl (bad) cs jno notl sbb (bad) mov daa mov or sarb insb lahf loopne out mov out leave cmc or es rcrb cmpsb lea fistpll xor aad adc repnz jp fwait ret pusha mov and pop js fs and test and in add sbb inc xchg dec das mov xchg sbbl dec mov mov mov cs pop mov xchg and xchg jnp xor xor pushf jno push dec hlt insl sub mov fild sbb (bad) fucomip push adc mov pushf push ret mov inc std jp dec mov das stc pop js add mov push cmc out fcmovb push repnz test or pop ror and sbb pop dec inc push mov xor fmuls sbb pop xchg out xchg sbbl xor push push mov push xchg add hlt fstpt pop xor stos popa or shr adc mov bound push pop lahf loopne in outsb jns ret jge pop or or mov xchg cmp fiadd jnp je aas or add mov cmp or mov mull xor push (bad) xor push sub push jo mov test hlt mov mov mov addl jmp add scas cltd loopne mov aas mov (bad) sbb fwait in daa mov add and sbb dec jo or sbb pop dec mov es inc add ret or dec cli sti sbb or ja add inc ss jnp jge push in shl sbbl pusha test xlat outsl or inc lcall add mov pop out nop sbb arpl pop jg fidivl out imul dec push into pushf daa mov movb in js dec ret xchg lds mov dec xchg in xor jg fisttp push fdivs mov shr inc dec ljmp jecxz insb lret dec out bound (bad) std out movsl jge cmp imul pop jo or push sub push xor add (bad) mov mov enter xor fadds sbb add mov cmp cvtps2pd mov popf sub sub xchg inc cmp fdivrl pop sahf imul sub sub aaa add jg sub lret add enter shr adc xchg push dec lds xchg jle xor add stc je dec (bad) loop adc xor dec jno fisttpll fbstp push inc outsb sub data16 dec cmp dec lods or (bad) adc stos cld rol sub mov imul daa gs (bad) mov and ja jb jl add scas lock pop push icebp jp cmp cwtl cltd mov or out xor sbb idivb loop insb icebp aas mov je in or add pop inc mov jnp mov fisttpl push jmp hlt and sbb mov jmp neg gs push inc adc pop cmp add add sub pop in movsb mov xor icebp fistl or bound inc ret cmp mov mov mov cld test cli xor outsb mov and popa jl jmp or nop loop into pop or mov stc sub add out pop popa mov aad cs push shr sbb mov mov scas xor dec test stos je (bad) out js and jnp push in mov iret mov adc sub (bad) mov dec pop dec jne cltd jbe pop repz xor ljmp in in mov pop clc push sahf push pop hlt mov dec sbb adc ljmp sub lret jmp pop cmpl inc or jl imul je fs pop adc dec add or add mov imul lock ret add cmp (bad) test sub rcrl stc popf mov je pop sub mov dec jmp sahf sub dec push jmp fcoml inc push cmp and and pop call jbe pop ret repz xchg leave loop adc ret bound gs out mov mov dec mov aas (bad) dec lret (bad) out cmpsl leave jle xor mov xor test iret mov dec dec push mov pop mov sub xlat repnz push insb push dec sub mov xor mov cmc (bad) (bad) bound xor pop jns mov push jge (bad) add and scas mov lahf push call iret xor cs mov pushl shrl mov inc fnstsw push cmp (bad) call or int3 outsl and jb sub pusha xor and push xor mov mov cmpsl dec (bad) out jno ret push bound mov (bad) push sti das pop aad and stos ja mov ljmp xlat adc orl xchg jnp sar sub lock xor imulb sar pop (bad) dec add sbb push test lods adc loop jae adc pop out sub and jne scas ja dec or ja cld sub xchg in pop add repz popf jno leave cmc sbb mov divb out xchg incl pop sub mov push out push mov (bad) (bad) (bad) test mov xchg (bad) mov xor mov cmpsl xor push aam push xor or jp jno repnz or scas xor pop hlt xchg xchg repnz mov jno popa imul cmp xchg arpl mov inc or ror iret xchg push dec test xor popf pop sub mov inc testl cmp mov lret gs sbb bound mov jle sub movzbl or mov loop mov mov jecxz,pn out xor add testl adc cli ror mov in jno dec jecxz dec stc out lret lret es xor pop ret out popa add add mov imul add dec imul leave aam inc shrl out pop repz jmp insb xchg jecxz repnz pop cmp push and or jb push call imul add (bad) jmp pop mov aas or jo dec sub leave add pop mov out xor fdivrl imul stos (bad) imul (bad) movsl xchg jg adc xor sti sub lret repz mov fsubrl cmpsb jmp cmp movsb out in xorb add insb pusha nop jae loopne xor aaa insl nop cmp sub cs xchg jge lds jg (bad) ret or mov cmp cld cmc in adc or mov aad into pushf out xchg jmp sub dec aad mov xor push pop pushf clc mov cmc stos shrl inc jg dec sbb wbinvd fistpll enter ljmp lods test push jl sub sub or or adc std int3 out pushf popf imul fnstcw mov test add cld movsb mov mov frstor mov inc jnp pop mov jne jb int3 push popf push lret (bad) ret add aaa pop enter jge add pop add inc into pop jl add ret jp dec dec mov fwait aam lods cld fxam mov xor mov add pop adc icebp daa push cmpsl sub mov paddusw (bad) mov mov mov cli fstl jb adc out sub movsb sub das mov mov xchg sbb sub add out clc push mov push xor jmp xchg mov push adc push mov or mov push bound adc pop mov imul and icebp gs pop std imul lahf imul cmp inc pop sub data16 xor ja shrb add and popf push adc nop test bound xlat in and icebp and jno push push mov lret cmp inc mov mov pop and mov ja bound add pop aam lds sub mov cmp add cmp sub fbld add decb bound movsl addr16 add sbb sub xchg add leave ss bound shrb sarl xor mov dec es in fiaddl repz insb in adc scas xor incl in stos push out movl aam scas or into xlat into je mov push mov pop sti out pop popf or sbb add adc std xlat mov push in push xchg push lret jge or mov and mov jecxz sub sub add outsb xor cmp iret insb mov sub in mov data16 dec sar cli and jg cltd pop add sub xchg icebp test sti lods cs fidivl ljmp (bad) add out lock dec sub sbb (bad) jne test mov pusha or xchg shrl xor pop sub xchg into mov (bad) stos mov xor loope aas sub pop push add int3 adc xor (bad) sti xor movsl out and dec mov int3 not repz (bad) xor mov (bad) sti les (bad) jno bound pop out fadds and daa dec or add data16 in and sti cmp (bad) mov shrb lods js pop adc mov lret fs cld mov jg dec lcall push pop xor lret or into clc cmpsl pop notl das adc imulb adc and (bad) mov test pushl sub mov out mov fcmovbe jmp lret cmp mov rorb loop xchg lods xchg xor xchg out pop push outsl fs ret inc add leave subb aad daa lret push sub mov ljmp mov lods or sbb xchg scas mov xchg inc pop or mov dec das fist mov push fldt xor and sub call pop and in rcrl negl and cmp cmp pop add js pop adc sub lcall icebp daa test movsl or stos dec mov add adc xor mov sbb sbb xor mov dec push mov jge imul stc shrl imul fcomp dec sar mov outsb mov negl fistpll mov jmp xchg and mov sti xchg fldcw imul cld jg movsb cs ljmp icebp xor xchg push (bad) or push cmpsl mov push and xchg out xor clc add xchg ret call cmp stc test xor repz mov dec and mov push mov clc and stos gs mov bound xchg cmp movsb pop mov (bad) aaa mov sub or icebp pushf fild mov fimull out out jge outsl mov mov stc je clc jnp xor cmp loope iret inc orb dec jg or loop mov mov cmpsb iret daa shrb mov mov lret addr16 or mov (bad) pop and mov cli xor mov in sub xor mov stc mov dec fstl cmc xor inc sub mov test (bad) rorb or mov adc cmc sti dec dec xchg test ret imul test or cmp imul and pop dec call ret jbe or test xor sub sbb out fprem1 push dec adc je mov xchg ret and or xchg out jb repz xchg insl xchg jbe push xor sub push cmpsl lret idivl imul sar iret rcr push cs test ret ljmp or add les or and xchg std sub push jbe xchg loope call inc cmp (bad) pop fcoml insb push ljmp int3 xchg or (bad) icebp and cwtl aam xchg mov repz push pop cmp lret or mov je xor pop jp aad arpl and (bad) pushf lds and pop aam daa ja push jbe scas sub call mov push outsl imul and xchg xchg lret stos mov dec cli xor adc cmp sub add (bad) mov push int3 rorb sub jle jns xchg rep lret popf and cs xor leave aad push sti loope loop adc jmp pop ret sub xor push jns xchg rcl out jno dec or xor ficomp mov jmp cmp jb jp and pushf call fistpll sbb fldenv (bad) xor loop sub sub sub and add iret or fild dec cmc push aas fdecstp jg lods shll js cvtdq2ps jne mov or (bad) jg pop sbb and sub adc or int sub sbb rorl in testl mov shrl stos bound (bad) ja or iret mov sbb adc push fiadd mov into imul out adc cltd jbe loop push push and leave cld pop repnz (bad) aas movsl add fsubr frndint adc (bad) int ja add mov jl int (bad) out sub xor (bad) nop (bad) fistpll ss popfw fstpl das and js movsb leave lahf push lock clc pushf push sub sub bound xor push or aad outsb mov in les cmp push xor xchg jae mov xor inc add sbb and js dec sub lock pop adc xor out dec lods sbb or sub or pop loop fucomp xlat (bad) sbb sarb call aas mov xchg xor jmp or cmpsb add out and sbb into cmp mov into rorl mov mul ret sbbb fdivs stos cwtl sbb stos push insb inc add andb pushf scas loope ds and or loope shrl lods scas iret or mov xchg and inc or divl dec sbb mov (bad) and sub pop xor (bad) mov ret mov sbb jp pop cld setb out popf vcmppd jb repz aaa xor (bad) leave (bad) hlt dec inc add xor dec les add xor ret jle (bad) (bad) (bad) ret xchg add gs cmp jecxz push xor and test lret js mov mov lock and pop ds push jmp jl ljmp or adc fistpl mov dec test mov jg leave push sub (bad) vmovaps adc (bad) push pop sti fs mov repz or inc add cli gs xor call mov ja mov fnsave in (bad) sub cmp or xorb fiaddl pushf mov fmull ret iret dec and push fucomp sub and rorl sub xchg mov and sahf and add fidivr dec push push call int3 inc cli lahf sbb xor pop shrl test lret add outsl test lret bound sti xchg popa (bad) out ss mov mov pop loope push imul xor inc jg adc xor lahf jnp mov sar xor out mov mov jge mov stc aad or inc xlat in das (bad) sub xor adcl mov stc imul fisubr xor mov inc xchg adc xchg mov in sub adc jmp dec pop hlt sbbb sbb in or xchg pop push or pop sub cli jle pop sub xor or fmuls and mov or push in ficompl out sub cmp xlat rcl scas imul xchg les cs inc addr16 pop sub inc pop clc cwtl insl out test sti pop ja fmuls (bad) pop or js in and stos imul cmp mov xor rcpps push rolb pop add (bad) test into test xchg pop dec xor or aaa mov das dec fcoml mov adc cmp push cli loope add clc shlb not mov mov fiadd dec es add popf rcrb fnsave int loopne sbb scas push fisubrl push inc push (bad) icebp mov lds jae daa je leave (bad) pop pop xor test or rol or icebp lds inc mov cmc repz or (bad) icebp mov or lret xor sub (bad) and jmp xor sarb out bound or inc inc mull ljmp repz mov test dec inc sub mov sahf xchg lds dec rcrl cmp mov (bad) mov jno jno sub lods cmp adc (bad) fnstenv (bad) mov rcll das js mov and fsts xor popf jbe jb out in pop out mov jl les xor int3 xchg je,pt imul sub xor push sti mov out add dec sub lods fdivs mov jmp add pop or lret mov or ret insb jg ret aas xchg xor icebp pop (bad) cmc scas fnsave mov int3 aam push sub dec pop pop inc int3 sahf in lock int3 add push mov mov (bad) clc enter or jmp (bad) mov push out or and icebp push loop aam cs pop xlat mov jg mov jl lahf (bad) dec sub lods adc fisttp add cmpsl out dec mov imul xchg out mov add mov or sub push out mov xor loop jbe ficompl xchg ret (bad) cmp sub pop pop neg or inc daa inc pushf mov mov dec cwtl sbb inc push xor mov jo std arpl dec mov mov jno test (bad) out mov dec out mov (bad) mov xlat out adc mov mov mulb test mov cld mov cmp inc sarl jle push add sub out mov mov pop sbb outsl adc pop or into (bad) cltd push ret mov pop imul scas out and xchg mov imul out xchg push adc sahf mov cmp pop out push mov cmc mov mov daa xor outsl aad inc pop ficompl movsl inc xor jb leave jmp (bad) icebp fisubrl das dec sbb mov adc push add or jne insb xlat jno dec shll scas mov and xor ja inc cmp xchg fadds pop mov scas or leave out adc or jp popf je loopne push jae mov sub cmp dec mov movlps push mov jmp rcl sub sub dec call sbb out pop cmp mov xchg adc xor inc cmpsb adc pushf sub adc cmp scas mov fadd imul divl stc sbb or daa ret and sbb mov cmp lret add sub daa out dec loop dec jns repnz jle sub or jb div jno imul xor add mov imul cmp sub jb xlat or mov sub jno adc add inc stc adc cmp cmp lea xchg out daa cmp (bad) push add or sub aam repnz fisttpll test into scas or shlb push and jg cwtl out jo cmpsb sbb add iret xor and sbb sahf jns sbb or push adc lods ljmp and add ljmp and jmp cmpsl out call xor lahf push push mov ret fistp xchg (bad) sarb (bad) mov cs (bad) repz lea fldt stos pop call daa roll cmp lret and ja addr16 xor sub insl jl (bad) (bad) fs cld push sarb add mov sub stc in mov into add lahf das ljmp mov sti lods daa roll xchg ret sub clc mov cld jno xor push jp pop jle lret stos sub stos sub xor mov sub jb and mov les ljmp incb push (bad) mov jge (bad) int3 in mov or loope leave adc shrl mov xor repz mov sarl mov dec lds (bad) mov mov or clc pop int3 add lret xor mov icebp sbb add xor (bad) dec xor fmul jbe jb (bad) xchg in pcmpgtd push and sub adc dec out fmuls dec rclb dec pop lret test popf cld mov jnp mov lahf ficomp pop enter sbbb repz lret xchg add or sub les loop xchg mov iret out fcoml xor sarb ret daa (bad) mov (bad) mov and push test stc (bad) (bad) sbb jecxz popa repz dec cmp imul xchg xchg idivl scas mov out sti sub ljmp lret push test jmp dec cmpsl mov mov stos push notb jns add aaa lods ljmp lret test dec mov ss push outsb xor cmp lcall and idivb leave popf push lahf fs lods pop leave xor xor mov stos mov xchg ret loop popf push mov daa jmp mov scas decl repnz rclb inc push or inc fyl2xp1 lret (bad) imul lret or inc pop mov lahf jmp repz leave push mov xchg pop push rcl sub sub enter adc sub in and cltd inc out (bad) loope mov leave (bad) jne xchg inc mov das test add (bad) or data16 iret xchg mov mov in in lcall in cs sub insl jnp bound test sub fsubr inc sub sub ljmp xor js dec xlat mov or push push (bad) mov xor inc add imul movsl ljmp pusha lahf test es mov in flds pop (bad) out add add (bad) imul mov push adcb mov add push mov add xor pop inc jl into mov out add outsl xchg mov test (bad) pop xchg imul push push sub jmp xlat cli mov sub xchg add int pop test push mov test pop jns out divb addb add stos push rclb cli aam jmp pop inc imul mov add mov cmp icebp sbb jnp or dec imul ja repz jmp ja push sbb push test push out add (bad) xor addr16 call scas or jge pusha int3 dec xchg cmp roll fildl std pop jge inc xlat xchg int in out pop test or aas jb das push fbstp adc jb or xor inc xor flds or cmc test (bad) cmpsl adc jl add fadds pop pop mov cmp mov push mov cwtl push (bad) psrlq ret loopne test sub outsb (bad) and shrb lahf pop xchg mov adc sbb aad movsl repnz mov sub and sar xchg fadds scas and repz sbb insl jg mov adc icebp mov dec xor pop cmp mov mov xchg cld xchg repnz jnp mov (bad) lock mov xchg mov test imul dec inc sub mov stc sub stos mov repnz add or mov loop cmp fsubs and xor mov js xchg sub icebp push pop iret enter movsb loop mov inc outsb ds imul or xor xor pop add ds cmovs sub ret adc rcll icebp inc lret xor dec adc jns ljmp mov sub pop jecxz pop adc lahf jbe ljmp cmpsl adc adc lods jns stos jb mov and sub fsubl add in mov rol add int mov das push fwait insl adc xor push decb or xchg adc and mov jecxz,pn daa jns push xchg xchg inc xor sbb sub rorb push sti and dec sub repnz (bad) fsubl (bad) imull andl sub jns dec fnstenv mov xlat xor push decb mov and lea mov pop mov or add sub sub jge icebp jge inc xchg (bad) mov das cld popa leave mov movsb lret or (bad) fs jmp dec dec test mov push adc cltd out sub in imul (bad) jg cld adc ja push daa repz xchg adc int3 (bad) mov fsts pop cmp pusha or add pop mov dec jmp jae add jno push out das mov dec out (bad) icebp pop imul lods add ret mov icebp outsl cld stc movsb int3 ret sub mov xchg xor pop push inc ds xor lret push jb pop dec and repnz or push (bad) loopne repz xor shrb test mov add or dec and enter mov xor scas ret push add orl push scas or lret cld xchg inc lret lods je ljmp divl imul sub inc (bad) mov add mov es jp enter mov int3 into notl xlat dec dec daa pop loop inc jne xor mov divb stos jle and adc mov or pcmpeqb repnz in xchg add icebp outsb mov rcrb push sub roll fistp mov inc xor jnp and push mov push xor and pop add (bad) pop (bad) dec leave (bad) jg mov cld loope out jmp daa (bad) data16 pop ss cmp or es test add imul or pushf jl das lds pushf mov jp test mov add das or or pop mov leave sbb jge call adc lret hlt jle jmp lret sub (bad) js xchg pop push jl dec rorb (bad) data16 pop pop push sub mov dec pop in sub mov (bad) adc ljmp push adc cmpsb dec pop mov adc push in push icebp push outsl add testb std out sub test dec sub sarb xchg out fstp adc test pop add xchg mov pop inc test dec sar mov push mov or cmpsb xchg test test repnz in push sbb repz sbb xor movsb xchg sub out mov sub xchg sub lret pop add (bad) loope out adc iret pop and xchg enter les jne ljmp daa insl sub loop and loopne sub xchg inc (bad) (bad) fbld daa sarl fisubrl sbb subl sbb ja fsub imul mov and dec and (bad) std mov add lret imulb add push movsl or adc out loop xchg mov xor jo jg fimull pop pushf notl sub or mov mov es (bad) mov sarb and or sub mov jl rol xlat int pop (bad) mov iret lds jmp bound mov push cltd push or fbstp dec pop jae or iret pop push testb xlat dec mov loop (bad) mov jmp daa stos fisubl push mov xor inc xchg and mov imul mov lcall xchg adc jle insb (bad) dec and pop dec scas cltd aaa ss and sti ret imul or call ret add insb cmp dec dec inc mov stc mov faddl iret out loop test sub js mov leave and fistpll (bad) cmc dec xchg daa lret inc lret mov pushf notb mov mov dec mov sub fs mov std mov ds (bad) sub mov sbb lea loopne int3 out mov ds push mov scas in cmpsl and dec loope int sbb les push cli add jmp or daa loop jbe outsl dec fimull loop lds mov (bad) add dec jl addr16 jo jg xchg xchg cmc lahf fistl jp dec mov dec pop sarl xor xchg fcoms test das and push pop loop shl mov cs jmp xlat xor pop push inc mov adc xor clc xlat sbb and lock jmp and mov (bad) pop mov push rcrb stc sbb sub or adc cmp dec adc sbb xor add rclb into cmp mov jge test adc xchg mov mov imul fdivrs and loope sbb sub in pop adc negl cmp lock mov leave daa out mov mov xchg jae jmp jle xchg and cmc (bad) jo rsm bound mov adc or mov xor lds lret fsubs testb (bad) not out xchg scas mov jecxz sub xor mov sub jno in ret lret mov stc jmp int3 jp xor cmp xor loopne out jno dec testl mov dec imul inc pop and data16 jp in call test decl imul mov sarb mov jbe lret dec cmp insb xchg (bad) xchg mov sar dec lret iret mull and or fbld ret add pushl dec jmp mov mov sbb rcr int3 fistl mov xchg (bad) mov loope jg (bad) xchg mov jns dec jg les push std adc xchg mov add xchg das repnz fisubr mov and loop xchg std sub mov add aam (bad) sti (bad) flds cmpsb sub ret aam push pop push jecxz movsb pop pop push sub (bad) xor mov sub mov pop fsubr dec inc sub flds aaa dec and sub sub (bad) ret pop or sub adcw popf stos sub lock mov lock jp mov inc outsl sub mov sbb dec mov dec adc scas mov xchg cltd jg push xor pusha lahf roll jmp mov sar adc lods or mov in push mov fldcw add (bad) (bad) mov test imul push cmp dec (bad) dec cli mov lret aam sub call outsl adc jno lahf jmp jmp mov je into loopne cmpsb (bad) dec ss ss xchg lahf (bad) stos inc in movsb cmp xchg sbbl pop mov (bad) cli cmpsb je dec icebp inc loopne mov mov stos leave js pop pop xchg stc sti dec xor aad in outsb into and negl add mov pop xor (bad) dec lcall aaa sbbl mov jbe imul adc dec add insl dec inc aaa adc xor fildll (bad) sti aas lock in test pop mov mov loopne sub sti daa mov push in mov pop in (bad) xlat lods pop fnop pop sarl rep leave pop cs rorb movsl push test repnz mov or sbb mov push pop lea ja lds mov and cmpsb clc jns lock xor xchg mov notl cmp std jno dec pop (bad) xor gs int xor sub jg ror (bad) mov push shlb add add (bad) sub sub xor fwait pop and mov fucom adc out daa sub lds addb xchg into iret rclb push cmp rolb sbb sbb mov fsubs mov jl pop loop pop lock add mov cmpsl rolb pop dec fst (bad) pop lds jae cltd inc pop gs add imul mov xchg std and xlat bound fwait push pop mov iret and jo xchg gs out xchg in push pop mov (bad) icebp jns lret mov add or fnsave adc xchg sbb adc (bad) jmp push cltd (bad) lret cmp sahf mul lods clc adc sub cmp and mov inc mov mov jle rcrl inc mov aad out sub adc out jg fidivrl xchg clc scas dec repnz xor dec xor pop pop xlat lcall sub xchg and imulb (bad) stos lods clc ror add ja data16 (bad) movsl mov cmp add inc imul into aas mov xchg repz rorl sub div imul in pop popl mov loop xchg mov xor dec pop mov cmp cld sbb shr out imul xor xor icebp xor sub loopne mov and mov icebp jb loop mov loopne lret or fistp ljmp or mov push xlat stos les and xor movsb add mov mov adc stos bound or cs testl sub jge fildl jmp addr16 cwtl ss sahf repnz adc out xchg and clc mov imul ljmp stc mov icebp mov sub fidivl xor in jmp mov jge in dec or das lods in loopne xchg and push xchg push mov out dec out gs (bad) stos mov aad and movzwl or ja and sub pop adc xchg cld (bad) xor jns mov or sbb push xor jmp sub sub xor pushf jge mov outsb xchg pop mov pop les xor add push pop in add aaa lret aaa faddp pop or sub or adc xor xchg (bad) mov (bad) sub pop leave or repz fisubrl (bad) out (bad) pop hlt xchg adc lret test jmp sub mov and repz lock or test nop or dec mov (bad) icebp mov inc or sbb cmpsb dec (bad) std pop rcll fidiv mov out xchg mov jmp or xor stos sar jae and sub (bad) das xor mov mov sub push adc xchg and sub add inc push cmp xor add test lea cmpsb cmp pop add adc stc sub ret in into sub pushf push push mov sub xor add cmp sub and cmp movzbl jmp pop lds cld and iret clc or dec fstps mov mov cld fsts shl push pushf jge jmp jnp add xchg pop cli cmp popf xchg mov sub mov mov sbb imul pushl and popf neg push push hlt fcmovb xor test out cld mov mov mov inc mov jg cmpsl dec pop bound hlt int (bad) cld xchg mov mov dec pop call fmull cli sub bound push or stos cs add ret add push fidivr data16 movnti stos sub int3 sahf (bad) in push dec mov (bad) popf fnsave sub and sahf les inc and das pop or xchg sbb and outsb xor push hlt popa popa imul loope ljmp mov lret pop ss mov shlb pushf sub dec add cld addr16 ja and mov frstor and xor ljmp das iret jle xchg (bad) mov xor cs rorl addl mov lods arpl gs cmpsl jmp scas xor cld xchg lcall leave sahf fcomps jmp imul les add ficompl jecxz jecxz mov jg xchg sbb and ljmp mov sub notl add jle in out dec jno les lds jne mov or ror imul mov cmp sbb push cli sti je (bad) iret clc jg sbb cmp and mov lcall dec lods arpl enter (bad) lock fsubl popf loope xor mov mov xor xor enter cmp pushf and pop repz in mov into test mov bound sub xor outsb scas pushf jg shll (bad) adc into rcrb inc idivb in push das mov stc xor jne or dec push or aaa pop jp dec shl rcll (bad) int3 or pop sbb adc lret lret xchg popf sarb out imul xor test mov push cli loop xchg int scas sub and cltd test push jmp xchg pusha out fwait sahf dec mov push test sbb jbe enter outsb inc push ret add icebp sbb xor in daa into push sbb add and shll stc in mov xlat fstps call push imull add arpl (bad) (bad) leave (bad) add add repnz sub in xor adc repz push (bad) mov jns (bad) xor test (bad) mov iret repz sub jae adc jecxz dec decb adc sub into and lcall test mov scas out dec scas sbb shll cmp adc (bad) inc pushf pushf int xor fidivrl scas popa and inc sub movsb in (bad) pop xor mov cli aad inc mov popf rcrl gs mulb push jo push lcall lret pop mov fisttp ljmp divl in lods shll ljmp mov adc jo out repnz and mov out dec inc dec (bad) push pop jb xor sarl lock cmp lahf mov repz mov icebp (bad) dec jmp (bad) jae add push (bad) sub cltd and mov adc pop cwtl lret push xchg call xor and mov mov cwtl lret pop ret push push mov sbb push and out push sub adc fdivrl ret rorb jmp test movsl mov push loop ret hlt jnp sti lds rolb outsl xchg xchg insb or sbb clc dec movsb mov pop mov ja hlt and cmp ret les xor mov (bad) popa icebp jns mov mov out repnz mov mov xor pusha jp sbb xor push out ds sub inc dec les out cmp ds add in cmp sub xor cmp or jl pop jge push sbb lods test mov sub stos repnz repz mov popl mov data16 mov shrb sub ja mov dec inc xchg fisttpl daa ret fistp pusha ret xor in mov push xor mov mov ret in xor test mov xchg push jne mov inc shrb (bad) xchg or movsb in cs xchg outsb mov or sub mov sar mov lahf loopne (bad) or pop ljmp push sub sti rorl mov pop notb leave mov (bad) adc test scas lcall pop jbe pop ret test mov push sti mov adc out enter out mulb inc out cld xchg mov lock push or sub mov mov pop and ret (bad) stc or jecxz mov jle fstps rcll push and cmp mov aas jge loope cmp iret and xchg xor rclb mov enter jg in and (bad) add ljmp add jmp mov lock sub add stos xor jl iret or pop icebp lods fist or xor push cld test jle bound repnz mov sub hlt outsl insl fsubrp jg stos and rolb mov xchg sti mov cmp aam xor dec mov and or xor (bad) jg xor xchg stos scas sub add out mov sub xor xchg mov mov fsubs mov cs pop or pop add jecxz mov dec sub add stos repnz inc mov sub lds aad fcmovne fisubrl xlat out jae sub add mov and mov call xor les mov out add fmull push lret fnstenv jle and cmp cwtl sbb xchg and fiadd jo movsb mov jbe cld cs loop (bad) (bad) jns stos (bad) sti pop inc popa pop and mov xor inc dec and pushw sub lea add jecxz pop test and or pop leave inc mov sub fcomps dec adc or jmp (bad) lcall jmp jge or ja inc bound mov or and ljmp popf dec mov popa dec sub dec in lcall rclb push push xchg jp lahf pop andl pop vmovaps insl movsl call je out test lret sub sub mov ds sub stos cmp clc sub les pop enter stc repz cmp lea icebp jae mov inc out sub dec jecxz jge or out icebp (bad) gs xor cltd fwait cmp mov ljmp mov push xor xchg (bad) ja sub jbe (bad) out dec sub outsb cs hlt nop lret movsl pop ja aam ljmp adc fcoms (bad) xor inc sub pusha adc jb loop mov stos rcll fidivrl cmp xor into mov push xchg xlat adc dec pop push lea loopne mov movsl inc pop mov daa mov rcrb sbb pusha push mov daa add cld movsl pop sbb fiaddl les xchg pop loop inc cmc (bad) packsswb pop mov iret adc mov xlat in mov loope jp xor stos cmp pop lahf int3 call or mov test fildll scas bound push pop pop and xor dec fisttpll mov xlat lret xlat in bound aaa out add mov sti adc add cli or clc lods and inc adc push ret out xor mov fnstcw lods sbb fmull imul push stos mov arpl pop sbb cli pop aam adc sub icebp dec test mov fsubrl pop dec test pushf mov rcll repnz mov push cmp mov dec mov cli mov push cmc fld1 cs int jg (bad) mov rcll pop testl out mov (bad) lock pop push ja notb xlat xchg dec cmpsb cmp xor sub or and mov mov and in stos mov adc (bad) fs scas xor and adcl mov mov mov or or xchg scas mov lahf cmpb dec rcrl jnp inc fcmovnbe loop pop inc insl cmp jo mov xchg (bad) mov jge rorb out xor lock mov push mov shll repz jns test sbb cmpsb and sbb xor jp and (bad) sbb imul ror add ljmp bound push bound ds mov imull out xor call mov jo add iret xchg pop fcmovnbe sbb mov dec or mov ret cmpsl sub jle sub ret les mov lahf push cld push inc add and xlat popa imulb fst jmp cmc sub mov bound lret mov or push inc push and add mov xchg ficoml ret test cwtl xchg xchg out movsb xchg xlat sbb add lock loop inc (bad) push and add ret mov and xchg (bad) mov add jnp and dec mov dec pushf (bad) and insb outsb pop leave cmpsb cmpsb inc or ret push xchg cmp pop js mov and xchg xorb popf jae mov pop inc mull cmp mov test inc jmp xor addr16 xor cmpsl movl push pop gs sub push es dec xor and mov pop and mov xor inc cmp mov dec imul and cld pop jo (bad) push inc cmp xor add lret sbb xchg mov lahf mov jb xor push sub mov ficom cmp jecxz inc mov mov leave lds jge enter stc add mov pop jg pop aad sbb rcl jns imul add xor imul gs push loope rol add enter decl ss insb cmp (bad) std out dec in sbb and (bad) cltd das xlat cmp call jg dec or mulb lret loop dec pusha xchg xrelease gs cltd sahf mov mov shlb push int jge mov and lods (bad) mov (bad) add pop sub popf inc jle jns xlat icebp pop dec mov mov inc scas adc es sti aam dec lods int3 lret dec xor daa fdivrl xchg dec jbe lret xchg dec push push add data16 mov jns jmp out xchg sti or pop adc pop out adc mov in cmp les loope mov pop and cmp ja mov inc mov adc and xor adc (bad) loop (bad) test sub xor (bad) xor into in inc mov pushf sub mov popf pusha push or (bad) mov adc dec ljmp dec push cmp daa cmp dec (bad) cltd in ds sub (bad) cli sub jns push mulb adc scas loop mov jg pusha adc aaa out call je pop xor (bad) cmc rcrl lods lcall jbe pop fisttpl cli movsl inc xchg ss mov adc sbb jbe dec xor or pop leave cli xor iret in dec xchg test into in cwtl mov mov dec sbb sub popf dec dec xchg call cmp xchg divb into dec pop test addb cltd jle cmc mov in (bad) jne push iret sbb add stos int jecxz,pn and cwtl push mulb sub xlat stc add jne in add popf dec cmp adc enter enter xchg xchg pop jmp and out cmp stos mov sub cli push pop sbb test (bad) mov xor jae mov add jecxz push bound fs (bad) rol adc dec mov lock mov push mov loop,pt (bad) clc mov imul xchg pop scas xor les popf adc decl dec xor adc push testb xor sar adc sti loop xchg mov xor lcall notl xchg aas xchg jg cld fistpll movsl (bad) dec dec sbb xor sub ss and popf pop test or (bad) cmp ficoml int3 sub dec shrb les xlat flds loope xchg sahf mov mov ret pop not stos imul mov int3 sbb or cltd mov dec mov xchg pop inc cmp mov and pushl xchg pop shr mov scas jbe fmull into rorb jns dec repnz xlat mov adc sbb imul xor (bad) out and jle inc popl jge ds adc outsl icebp pop arpl jno,pn ds ret mov lret xor lock (bad) hlt inc ds jge popf data16 lret in int3 cmp shl (bad) sub pop das or icebp das repnz lret pop mov mov flds mov push adc movsb loop push popl xor lods cmpsl add sub pop and cli jne cwtl cmpsb xor sbb into dec daa add orb movsl mov sub and pop push mov test aad pop xor pushf test (bad) stos lret cmovp or push repz mov jl into ljmp sarl ret add mov (bad) fsts lea xchg imul adc testl ret adc adc ret in int adc lret mov push and xor and popl add (bad) mov mov mov xchg (bad) fsubrs and fldl lds ja xchg js adc bound notb jecxz aas or sub or mov lcall mov ds mov sub mov (bad) mov mov add popa leave sub or jno gs mov in dec fcmovu add push jg mov sti ror cli cmpsl fstpt cmp movsl std adc mov jl dec cmp (bad) (bad) add stos cli sub js jle xor and or xchg adc lock into sub mov imul pop xchg fstpl jle iret aam pop sub aaa fsubrl loopne shlb xchg aam ret xlat mov lret ret adc add add ret sti insb mov jb mov xchg and jns jno or shlb scas xor ret movsb (bad) push test mov xchg sti in adc or pop cld outsl inc xor (bad) jns xlat dec cmp sub add je push push imul movsb mov repnz or scas mov mov dec lock loope icebp push push push mov cs inc movsl ljmp mov pop rolb mov push pop mov pop mov mov pop fsts (bad) adc clc mov cli in mov add xor xor test das fist das (bad) aam xor xchg ret lret in sub fist cwtl or mov mov ljmp sub xor adc pop jb mov into add lods inc mov or data16 add mov js test push test and xor pop mov lcall insl (bad) idivb call stos lods xchg rol out mov je jmp dec fildll fnstsw add add sub addb inc mov sub sbb sarb add cmpsb popf jbe push iret test mov jae sub mov mov out shr imull or push jecxz cld xor mov cmp mov (bad) and sub xchg and jmp or (bad) (bad) sti mov add and sub and and or imul rclb test mov clc inc cmp dec (bad) jecxz and insb lods test push test and xor sub dec movsb xchg ds add outsl out aad movsb mov xchg aas aam mov sbb and jmp adc mov outsl test mov jecxz push xchg mov or pop lock xor jbe imul (bad) rorl sub or jge inc fnstsw out mov rorb cmp lods mov jge call shrw dec cld lods daa (bad) jo mov lds mov lcall movsl jge xor mov and mov adc std dec xchg xchg movsl iret cli mov xchg call dec xchg rcrb mov in pop outsb clc push movsl scas cltd dec lods xor (bad) (bad) cmp inc xchg push jnp iret scas mov jle ljmp (bad) dec sub jmp add pop inc mov stos add ret ljmp xchg adc decl movl aam lds sbb cwtl ret pop or pop push dec mov xor cmp shr repz mov aas and cmp ljmp adc pop das mov adc mov dec mov jno movsl fwait xor cmpxchg mov cli cmpsb jge add loope add sub sub sub sarl scas xor mov mov out xchg das xchg rol mov or out test add xor mov and or or stos xchg jb ficompl outsb pop sti push pop pop ds or adc pop pop clc jno pushl ret or and ljmp in cwtl push jo int3 je xchg repz lret mov pop and xor aas adc cmpb leave out xlat das jle loop cmp insb imul xchg jmp sub fcmove cmp pop loop enter (bad) mov in mov sub adc negb (bad) xor pushl and push adc adc fldl xlat sbb jecxz faddl sub jge mov fucomp loop xchg bound pushf pop lret pop dec cmp mov (bad) (bad) ljmp (bad) pop dec xor jb or push and dec scas push mov fstl push popf pop inc cli daa and push ret push mov or xchg fsubs and xor lret leave cmpsl cltd adc sub inc push push clc sahf sub push xchg xchg (bad) imul ljmp jne fistp xchg mov xchg xor mov andb insb push arpl lods sti mov jbe bound adc (bad) mov xor cs ja cmpsb (bad) std lret shrb mov into xchg (bad) add repnz push roll stos int insb int and out fnstsw pop lods inc ret mov push insb stos xchg repnz or cltd fadds bnd cmp dec adc iret lret into xor and mov sarb sub pop ffreep inc mov sbb xor or call jae inc or sbb xchg cmpsl push xor and inc pop mov and ja sbb (bad) sub dec mov dec lret scas lret sbbl inc cmpsb imul and aam clc pop mov lods fisub or andl lret sub stc sub lret mov jno mov push out add push adc test lods adc (bad) xchg cmp jns lds mov adc stc sub sub in sbb sti das enter sub mov push or push loop loop fldt out lds stos rcll push push mov (bad) jb aad push mov mov xchg cmc mov xchg sti lea les xlat (bad) push and into pop pop vcvttsd2si mov pop out and push dec lret gs xchg icebp repnz fist or pop out pop cmp out stc sbb shrl arpl leave scas mov dec sahf leave mov cs ret or movsl push call test mov (bad) or jbe sub pop dec mov sub mov lock out xchg ja xor xor je adc mov (bad) cmp jecxz add loop add push dec mov (bad) pushf imul test push mov bnd add push cmp mov push inc lea icebp ss addr16 stc add jns mov and cs dec adc mov pop icebp gs cmp test sti sub shrw sub xor out sub in mov test loop pop jae aas pop sub (bad) jmp mov xchg dec rol rcr or daa xchg cmp js test adc ljmp into (bad) sub cmc sahf std clc add es dec leave negb loope mov add out sub lcall mov push ret mov push inc mov repz inc or (bad) mov movsb xchg lret stos xchg fs mov icebp pop mov add dec inc xor jge inc daa add out sub pop pop ljmp fsubrl (bad) stos jne ljmp (bad) pop rorl ficompl xor (bad) sub stos adc or xor loopne xor js,pt iret mov cmp or add and xchg adc xor mov out into jmp repz stos lret push sub (bad) pop and add and nop fcompl jge jg repz dec call sub mov xor clc sub sub push les mov fs lret rclb iret mov inc out popf fisubrl or aas cwtl xchg or ret pop ja cli popf cmc pushf push (bad) mov ljmp jmp repz outsb in dec jno cmp rcrb add out add xor inc pop and pushf mov (bad) in mov add xor int3 loopne or or cld call xor std adc jbe adc ror (bad) lahf pop push aad xor cmp fstpl pop out add aaa outsl imul adc fdiv ja mov pop inc daa sub es ret test mov lret daa dec jmp push hlt iret repnz ds (bad) mov cmp outsl nop (bad) jecxz sub ljmp iret outsl pop out lret or incb push mov negb pop mov adc xor clc dec fnsave lahf sti push daa pop and pop dec xchg shrb das fxam imul jnp xor lret lds mov fnstenv fdivrs adc sub stc leave lret push fisttpl pop icebp movsb aam icebp sub inc movsl ljmp in inc ret je sbb out lea cmp sub add mov xor (bad) lret lret cmp cmp icebp pop inc test out or cld lret mov idivb sar (bad) fs pop mov (bad) mov sub add sub mov mov popf dec aas into dec and xor std in fs (bad) fcoml sti jle das into cld mov push or jne dec xchg loope lret add add mov push add and jecxz pop les sbb test push lds dec cltd adc add inc xchg cmp movsl icebp xchg subl and ret xchg in add jecxz dec mov xchg xchg rorl xchg jno (bad) popf (bad) fsts mov gs mov mov arpl dec enter push loop in inc daa add repz push out jb sbb sub fldcw (bad) jmp rorl outsb call mov pop cmc int cs sub (bad) mov push add mov pop pop pop mov mov dec mov and xor jmp test enter sub fimul loop push rcll lret or jmp imul ret sbb xchg cmp xor jmp push ret pop lahf push or out mov push rorb and xlat xchg sbb jle pop push xor cmpsb pop add pushf xor sarb pop outsb pop adc gs loope xor test mov dec xchg inc imul sahf mov ret out insb mov jmp sarb or or add jp cmp sbb sti jmp jnp jnp xor jmp into lds icebp test (bad) or dec jmp mov xor xchg jmp iret outsb mov pop and or in arpl (bad) cwtl fldl or pop adc sub jmp or push push adc and pop add dec mov and push add aad xlat sbb add (bad) std pusha fs mov mov sbb or scas daa (bad) insl cmc sbb jle loope mov add call pop push popa mov lock (bad) negb xor stos shrb lcall out fdivl or or sbb push mov add nop (bad) out push out mov sbb aas sahf cli rorl push rolb pop sub pop gs mov mov mov pop push xchg sub ds das divb imul (bad) sbb orb push push mov mov pop add and mov xchg jmp sub sub push mov push push gs stos xchg fcomps out scas jle mov xchg ljmp xor std dec push push mov pop daa mov jmp jne jecxz lret adc repz pop lret push mov push test add add dec add sub inc cmp scas or sub andb and add pop pop neg inc push add pop push orb ja jle roll jae add leave push xchg mov pop xchg inc in dec out and lret add xlat addr16 or add sti nop testb mov pop xchg cmp stc xor or mov idiv push mov jg andb dec inc push mov ds scas pop ljmp mov add jg cld pop push je lea pop jle sub icebp xor mov mov addb cmp sbb (bad) xor imul or mov add add pop sub jg push out and lds jmp int sti jnp jmp inc pop pop push mov push push pop inc idivl push adc mov add xor sub push lock cmp addps pop enter test movsl stos into out daa leave ret shlb sub mov das cmp int3 es popa imull roll lods cmp and cmp (bad) sub lret inc in push aam add in popf repnz scas sub (bad) sbb fadd and mov add sub nop aam jle sar cltd xchg into jp mov mov inc fsubrs mov xlat and add sub dec pop in jae xchg pop jge ret cwtl cwtl rorl push divl or ljmp xlat lahf addr16 ficomp flds add mov mov and mov add repz nop sbb fistl mov pop push adcb and mov test adc scas xor repz pop repz pusha outsl mov cmp sub repz inc (bad) sub cld das out add push daa (bad) jno bound jmp push ret sub sub mov cmp sub and iret pushf loopne dec pop mov mov pop movsl subb pop bound ss add and sbb dec add jle xor cmp aas fs add ds sub fldl2e inc ret (bad) cltd mov insl xlat call push push or lret enterw loopne push adc jecxz mov push popf outsl or imull ret sub loopne stos xchg push data16 sub aas mov sub xorb push and pop add and shll and mov aaa jg aad mov into mov dec rcll xchg hlt call loop sbb adcb and jg fmuls scas daa jl movl mov and mov xor (bad) or mov aaa (bad) adc daa leave rcrl repz out pushf movsb xchg into das testb loop sub lret test mov add divb (bad) sbb cmpsl jbe (bad) mov and ja inc or mov (bad) int and ret roll jne (bad) aas iret xor adc pop arpl cs push lahf je push lods aad ror jno fidivrl pop mov add hlt xchg popf int3 mov xlat mov movsl fidivrl xchg movsb mov idivl repnz push inc mov jmp sbb add mov pop mov pop add mov xchg mov cltd imul adc jne jmp adc fs inc (bad) rcr test jne js (bad) jns xchg dec push imul movsl hlt stos int cmp (bad) cli and add jp mov notl loope pop popa in stos adc mov xor cmp into pop mov movsl cmpsb mov idivb sub mov jae jl mov (bad) mov fwait outsl or (bad) out pop jmp sub imul test clc mov adc movsb jo fisubr jb mov mov stc rcrl call ljmp or dec out loopne fnstsw or sub out or mov (bad) cmc imul inc ret fldenv push mov mov mov mov and add fnstenv sub xlat xor mov and xor and bound mov dec (bad) popf add sbb mov push fisttpl rcrl sub and dec and sahf cs jo dec cmp cli lahf inc pop scas cmp js lret loope cmc push pop inc jp movzbl xor fldcw je movsl pop sbb lods add cmp int3 sub daa xor rcr and jle add sub inc jbe repz out stc in xchg mov or addr16 mov dec scas lret mov lea xlat dec cmp test sarb mov stos cmpsl imul jbe push enter xor lret jmp push fisubrl pop test push movb cmp inc push mov pop push std adc mov mov adc pop cwtl fs popf fldt jb push arpl cli (bad) inc xor lcall inc xor mov push jns dec adc mov and pop cmp movsb and sub xchg cld and rcl push fidivr and adc add xchg (bad) rclb push jg push (bad) dec ror jbe cltd adc ljmp add and leave and add jmp data16 jne mov lds or xor push jge cld int3 movsl call mov mov add (bad) jno call lods andb pop and sbb cmp sub scas std pop (bad) gs mov daa rclb lds add sti (bad) mov stos dec push lret or lock daa (bad) das mov imul popa in jbe sub mov xlat jne iret ret incl call rorl xor mov push jns gs mov dec dec test dec test mov pop xor cld je add sub inc mov mov xor jnp das pop adc pop xor movsl lret repz (bad) pusha jg inc xchg out adc push test hlt mov (bad) sub mov xor jne mov dec fucom and mov setg mov fmul mov cli (bad) shr icebp xchg jnp inc add shrb push (bad) shrl ret dec stc xor in in lcall add sub mov (bad) pop xchg mov scas push xor mov std pop orb sub and (bad) mov es repz adc cmp inc sbbl adc int xlat loopne nop pop push mov call sarb das jno mov add adc adc add mov aaa jecxz pop in adc outsb sub cmp in (bad) mov fsubs add mov sti movsl mov loopne sub in dec leave out mov sbbb jne rcll push xor xchg loop jns insl sarl add fdivs rclb daa jle int push mov inc neg icebp into (bad) inc adc pop jge ja push les and stc (bad) cmpsb sub test mov in sub adc add out popf adc add pop shrl into mov or adc (bad) cmp mov sub xlat push sub cli insl imul mov jge dec mov stos sub aas stc cmp data16 push rolb sbb notl icebp (bad) je out cmp xor add repnz stc fnstenv jle or jge mov lcall sbb bound mov popf inc or and push sti ja mov push pop mov push pop (bad) out aad inc aam ljmp sub (bad) fdivrl xor mov rcll lret mov add pop sbb repz aad push xchg loopne pushw cltd loopne fisubr (bad) movsb push dec xchg loop pop sub notl dec xorb aad push or xchg mov push pop lret pop mov pop addr16 add jae add dec cmc sbb mov shll fsts fimull (bad) xor fmulp int cmp lcall outsb sbb aaa xor or (bad) lahf pop shr int3 or or xchg fildll xchg sti mov call out pop and inc inc push and or daa lret bound dec push shll loop es pop jmp decl (bad) arpl in mov sub imul mov negl dec ret and or mov push es mov xor cs ljmp sub dec xchg adc scas xor dec mov iret nop push mov or sahf movsl push pop mov and pop jmp cli icebp sub adc clc mov cmp sahf sbb mov lret push jae sub lcall xlat dec mov fldcw sti js lds ret jmp jnp mov xchg adcb pop divl xor adc mov lret jbe xor or xchg xchg jns imul es pop into inc and fiadd enter imul lsl ljmp adc and add shlb sahf jne xlat push gs sti adc cmp add add stos inc mov mov enter mov repz push icebp mov add scas inc mulb jl ret pop jbe lds mov mov mov mov add jge cmp cmpsb dec jl popa mulb add ja out xchg mov xchg enter lret cmp cwtl xor dec (bad) or cmp jg lods das mov sbb fisttp jmp cld sub idivl js add lods insb leave xchg push pushl (bad) fcomip stc and adc inc pause push cmp mov into add or div cltd dec fisubr stos cs shr neg cld bound adc mov mov cli sub (bad) pop or jg int sub aaa mov (bad) jb leave ja jnp repz icebp mov xor outsb repz jnp imul lcall push sbb fnstcw jae sbb jmp fldcw leave stos push mov push (bad) dec jmp push push js pop mov pop sub push inc or jmp inc insb or push push push in pop dec sub loope push sbb enter leave pop jnp js lretw add das jecxz cwtl add mov aam leave sub je or lods dec daa mov repnz mov repnz mov push out xchg iret add push and movsb or or test pushf mov es push loop pop (bad) sahf sub push xchg shll push clc icebp inc xchg mov push sbb loope xor (bad) sub push mov mov ss and icebp fldpi jne xchg daa mov rorl pop scas repz jmp cmpsb movsl jb jg sub adc xor adc stos outsb addr16 and popa add sub data16 sub push das sbb negl lret jno xchg icebp dec ror jl cmp popf xorl pop mov fsubl inc lahf push lcall ret mov (bad) xor add or int xor das ffree jg arpl lock xor mov mov sbb push mov adc cmpsb xchg mov ljmp sub (bad) out mov aad leave jmp cwtl jle xchg bound ret inc dec and into pop lock daa xor sti dec sub scas jle das xlat xor xchg leave mov icebp fs icebp lods xchg ret and dec into repnz pusha cmp fcoml add pushf dec or rolb mov les xchg pop push jbe outsb or aam imul out pop dec inc xchg mov in sub lods lock decl push (bad) call dec out mov repnz mov xlat xor arpl sub pop mov aaa fnstenv ss ljmp xchg stos push test shrl sbb cs xchg out ror sub cmp sub stos xor push and xchg es inc vmovlps or loopne xor sarb clc testl lods adc cmp mov mov xor sub mov sbb sub and mov pop ja pop mov jno and lret in inc mov cmc inc ss pop mov dec loop and xchg and mov pop jle jno jb roll xor cmp pop mov popa add inc js enter xor sbb sub dec mov push daa or pop inc imul xchg and (bad) mov xor repnz test mov and xorb and imul in lods dec jne adc pop enter fstl and pop adc cmp stos mov mov pop (bad) ljmp cmp (bad) mov decl mov std cmpsl rcrl sbb cmpsl test stc xchg test adc mov cmpsl or add cli adc adc mov inc pop (bad) cmp incb pop mov repz sub fisubl (bad) scas push fwait mov dec mov lret and lods test lods sub lods inc and push sbb inc ljmp bound rcl adc add popf jecxz mov push imul bound rcll and mov out sub mov sub jmp xchg add add dec dec out jbe or cmp add xor lods in mov mov je pop fstl lods ret adc cmp inc mov sub rcl mov push ret dec (bad) repz fldcw sub pop and jne mov pop mov cs lret fidivr sahf and popf sarb clc aad pop lods leave aad js sub mov sub scas arpl out xchg fcoms lret sub (bad) and dec pop popa pop (bad) mul movsl pop ret scas mov xchg scas les (bad) xlat jmp sahf (bad) out daa mov add popf push push imul xlat in lahf mov std jge call inc lret mov fs adc adc gs repz (bad) xor push dec push cmc mov push jg xchg xchg outsl pop jmp scas add xor popf stos or das push dec movsl mul jp adc cmp add (bad) (bad) and sub into xor add sub mov loop shrl or or int or sub dec (bad) (bad) mov scas imul idiv fdivl inc outsl xchg push fidiv add ds jne test jne mov (bad) fnstsw pop loope or repnz ja stc outsl push enter or push hlt xchg imul (bad) fst imul test push jo sub rcr movsl in cwtl pop add (bad) adc stc shr xor dec adc cs test scas repz mov pop shrb and mov roll stos sub mov cmpsb pushf rclb inc outsb sub mov iret or out negl lahf xor icebp stc iret sub cmp mov out or ljmp into mov cmp add xor xchg jnp pop sub mov ljmp mull insb rep xor ljmp ror sbb sub inc fildl loop jae and jecxz xor (bad) or cmpsb scas and pop inc js mov push push mov pop xchg mov mov lret xchg hlt movsb (bad) movb push shlb mov jns loope insb hlt mov bound add push enter pusha sub enter jne xlat loope cmp shrl daa test jae bound fsubs xor add orb and in arpl and or (bad) mov test mov pop test lret (bad) or leave mov or add or add testl sub pop ret (bad) pop or inc (bad) pop jne adc ficoml sbb aam or adcb sub push std pop ja xchg xchg fcomps add (bad) repz daa or sub orl push mov xor pop inc lcall adc mov data16 xor add sub pop mov cmc sbb mov aas push add or push out fsubr in push test adc push and mov dec push dec repnz mov in pusha add imul ret shlb jns imul gs inc dec push sub das pop je sub push daa sbb xor je and les ja mov pminsw test jmp xchg sbb or sub jnp adc jnp xchg xor daa xchg add pop mov (bad) sahf decb mov lcall rolb jae cwtl orl leave cmc pop hlt fnstcw std mov add add das repz lds xor lods add and (bad) out sub xorl std jmp cmp test push fldenv sarb or mov idivl xchg sub in ret std dec movsl scas int3 cli dec sbb pop jecxz dec ja (bad) cltd sarl pop mov pop test or iret pop jno dec mov repnz sbb clc sub xchg out lock nop adc add sub cwtl dec jae mov jge sub xor push or (bad) xor sarb mov out cwtl call add mov push cmp mov testl out sub (bad) cmp adc cmp (bad) aaa sub jp mov jg and mov jge test arpl lock shrb test add shrl push jo pop call shrb outsl add sub hlt mov (bad) icebp mov imull dec bound into jle pop jmp ljmp and and add in xchg inc cmc mov (bad) xlat rcrl push inc pop rorl xchg loope mov test scas loop xchg mov mov scas popa sub cmp stos fs les sub xor cmp or cmp and (bad) jle les out cltd push sub data16 out fdivrs test fcomp mov dec imul mov lea sub (bad) into and lret xor cli mov dec popf out lods out add and outsl fdiv (bad) pop jno sbb or jle outsb cmc out mov jb clc push scas repnz rol adc stos cmpsl mov sub rorl shrb cmp mov xchg xchg (bad) mov xchg pop sbb jo hlt test (bad) or imul daa stos add fldenv pop (bad) sub cs xchg push iret sti fidivrl adc lret jne add push mov sti outsl cmpsb mov imul add dec jmp cmpl es mov mov fcompl out mov add ret push leave rcr jne adc jl sub out mov and fstl xchg dec mov aaa shll or test jbe ljmp jb dec cli xor (bad) lock negb sub (bad) (bad) fcom sbb sti test shll in movsl adc xor dec or scas sub testl adc clc pop hlt inc jb rcr xchg iret mov and out xor xchg xor mov idivl inc cmc jmp mov sub mov sbb pop xchg addr16 sub imul mov dec jecxz xchg add push and gs (bad) call adc sub lcall scas mov dec and xor mov js and dec fcmove pop xor lcall xchg pop in rolb sub enter rorl add and mov subl cmpsb ja repz icebp in (bad) mov test sar jle sbb add test sub imul push js sbb lea or rcr lret enter add popf sbb stc aaa or inc pop pop jg xchg sbb scas sub xchg and xor mov sub cs loop and inc pop dec lock xchg add pop mov jmp sub sbb dec jmp cmp test jle scas (bad) pop pop push loop jne loope daa ljmp cmc or (bad) push pop pop pop xor imul test rclb in cmpsb pop cld ret push das mov aam imul lcall xor fild int and add leave hlt sbb or adc stc dec mov mov xor stos ret fild dec fstpt inc outsl sub mov sub outsl or stos cmp or jecxz,pn lds imull adc daa add jns sub insl mov iret inc test stos sub out mov or mov nop jo fcoms xchg fdivrp xor sub cmp (bad) lret out (bad) mov lret leave mov incl push xchg dec into xlat fs ret stc push fs repnz inc jg push stos jnp mov lahf add cmc (bad) xchg adc ret jmp dec jae xlat test add mov mov into mov sub xlat mov xor mov or aam pop rclb push rcr xor pushl (bad) inc sub and and das mov js divps (bad) fucomp jbe ret pop xchg pop daa or push mov test jmp ljmp ss lods or or mov dec aam dec pop xchg divl xchg das cli or mov add ret mov fbld (bad) mov sbb add scas xlat in into das into jl jmp jmp test push in push mov fiaddl push out adc mov lret dec fldcw pop leave pop nop mov add das cwtl adc (bad) nop jg cmp pop pushl test pushf out (bad) test gs xchg out fadds sarl lret and and mov dec jmp xlat (bad) repnz ret leave jge icebp dec or js xchg pop or rcrl mov push mov cmp sub mov or sub aas cmpsb fs bound dec jb or aad imulb movsb repnz call outsl in fidivrl into aad in repnz add (bad) mov (bad) or xchg mov fnstcw cmpsl stc outsb pop dec add inc jecxz mov mov cmp arpl add mov aas (bad) in scas sub imul add dec xlat in arpl js add lahf (bad) mov jae cmpsb xchg sub addr16 lods inc jl dec sti cmpsb aas lret (bad) pushf and loopne dec jnp jb mov dec xor dec lret mov stc loop cmp out insb (bad) mov add lahf je pusha adc es push sti push adc sub (bad) sub sub adc neg pop and cmp and mov inc test das out and dec or movsb ljmp cmp ljmp xchg push loop lret in pop aas enter ja mov push ret daa out ljmp sbb scas lret sti (bad) lods cmp mov xchg push jno adc mulb notb push loope sub jns (bad) hlt sahf pop pop stos mov popa imul jno mov mov jle sub inc lods loope mov cs and or mov dec jnp inc loop dec clc or adcb mov and add scas pop or popf (bad) js xor jmp icebp inc imul and cli (bad) sub mov and ss test mov sti sbb add push and xlat push (bad) out popf test scas dec je xchg fwait call or sub popf fmull jb test mov or mov (bad) fstps icebp jb imul popf (bad) cmp sub cmp xchg push stos add mov xor or out popf lcall scas dec push call in and out dec nop sub lcall lret mov mov pusha and xor mov pop idivl movsb push dec out cwtl inc xor mulb adc xor mov mov pop pop mov add push (bad) mov xor pushf mov mov leave jl mov iret mov fisubr daa dec test and scas bound add sub repz ljmp stos popa insb roll jle gs push aam dec mov xor xchg push xchg arpl mov icebp jge shll fist in (bad) sbb and sbb cmp (bad) jge hlt jbe inc jecxz pop dec fs jecxz xchg mov xor xor adc aad dec jbe jnp imul lods sti push roll fnop ret aam sub push mov out sbb test adcb lret dec or ds mov sbb push icebp mov pop lret and movsb loop adc xchg pop mov shrb scas in scas in leave add sub sbb mov xor mov lds loop xchg mov pop cmp pop push loope in xlat jmp cld cmp jo lahf fsubrp lret lock mov xchg xchg popa push sub add les xor sub fildll ljmp ds (bad) shr push and cli movb or xor aad data16 jmp mov push adc jle (bad) loope (bad) and pop rorb leave jne cli fdivr sarb dec xchg pop sub shrl fdivrl les sarb sub pop (bad) xchg aad decb mov out daa fisttpll lods lret cmpsl mov sub leave rcr push and xchg ret mov mov out stc cmpsb aaa mov mov fist repnz xor js movl inc and pop or rorb in pop shll push and mov adc loope sbb aad xchg pop push aas xchg mov out sub out cld mov negb aas mov sbb bound ljmp jmp fldt sub ss pop popf rcrb mov lsl xlat lret inc fucom imul pop (bad) mov das bound popf fbstp mov int3 mov xchg enter mov jnp adc mov cmp (bad) out lds gs sub cmpsl js dec (bad) jmp mov jbe sub add fidiv adc inc or and mov cli mov fs jmp mov negl cmpsb (bad) or (bad) outsb and scas clc sbb (bad) fsubl pop sti sub xor out add or xor pop dec repnz clc pop xchg push lea (bad) lcall scas mov xor sub sub mov lahf pop repnz cmp xor sub jbe into push sub adc cmp sbb mov lods arpl adc jmp adc pop call stc and and mov jecxz adc push mov mov or and xchg or sub dec aas add or dec fdivs mov leave jg (bad) aam leave sarl bound pusha es loope scas sub icebp xchg xor (bad) jns or mov mov jbe lds cmpsl je xchg add cmpsl sbb mulb cwtl or xor dec (bad) pop gs (bad) ret aam cmp stc mov adc (bad) fsts lods jne popf xchg xor jae (bad) jae nop xchg xchg scas mov xchg outsb lret cmp pop lds icebp pushl sub test mov (bad) jl mov or mov cs and lods into gs mov push and mov in daa aad mov mov xor and insl js mov sbb icebp mov int inc (bad) fld and pop sub mov or pop inc lea xor ficom les stos std out dec inc mov insb adc sub sub add cmp ja push push repnz je stc jno push pusha das mov stos push movsl mov aad jno (bad) mov je gs out bound xor mov mov mov sub mov and xchg mov xlat clc mov jnp stos outsl xchg mov jmp jne xor xor int3 cmc divl (bad) push fsubl cmp decb (bad) xor xchg and out out mov xor out push adc jno out das cli cmp sub test idiv cmc test mov stos cltd xchg jp cltd xlat jmp or push xor ss stos dec addb mov mov inc and mov std inc int3 sub and dec fildll nop fmul (bad) and cmp (bad) repnz and (bad) mov ljmp and xor adc xlat shll or mov sbb notl cmp mov xchg mov xchg and stos fwait scas cmp rcll cmp (bad) add (bad) ficompl pop sub (bad) into mov fwait adc icebp dec fbld mov cld mov push test pop in or rcll xchg testl xchg pop sbb dec sub fmul leave jbe out icebp pop call repz push fiadd mov push inc (bad) ds fistpl dec out xor pushf mov push mov add (bad) ljmp pop xor pop shll dec fisubrl (bad) repnz cmp mov or pop (bad) mov (bad) mov loop xchg or jg xchg cmp test lret adc mov xchg in out into imul cmp jbe jmp ret or or inc stc add pop jg and pushf scas mov loop mov lea sub mov xor icebp ja xchg fist xchg adcl mov mov pop lds ret mov jge sbb add (bad) cmp fistpll lods jne rol leave (bad) cmp dec (bad) xor ret push add or xor dec dec or xor push sub xor and leave (bad) das mov adc mov fldenv push lcall mov push and inc sub and ss and loop xchg jb test cmc fistpll adc les cmp dec pop popf push mov out dec xor dec (bad) je jmp mov out mov (bad) or imulb lods jb xchg or add cwtl lret add jns dec xchg (bad) imul pop pushf adc push and pop mov aam inc jno mov fmuls jns test push sub sub test sbb and mov xor movsb adc call or dec xchg ffreep xchg pop xor dec inc sub xchg jae xchg call clc xchg pop mov cli mul cmp stc push dec pop test sarb xlat shlb mov roll and jge add xlat push into and push and mov mov push mov and sbb add cwtl in sub sub shrl fstpl mov jmp cmp stc dec ficom stos cmp icebp sti outsb jae ja and ja lcall dec leave push mov inc jecxz pop sub jne iret xor das mov ffreep sbbl jae bound push jns scas dec pop das xor in clc (bad) jns push mov push leave ret jl mov aaa jge mov jno popf xor mov sbb stos and insl bound addr16 imul adc popf (bad) cmp nop lret aam cli in xchg jmp jnp ficom pop pop inc notl xor and outsb mov sub adc mov or pop mov insl jp pop negb pushf scas lret lret xlat mov movb (bad) hlt sbb sbb or repnz pop cld lds add fidiv into in stos fidivr sbb and adc xor mov mov std xchg ficoml add clc or dec jmp imul fs pushf xchg ljmp call cld or xor divl inc pop xor fyl2x inc pop add fiaddl adc idivb scas sub jle cmp mov push xor xchg int3 lods push repz je pop inc jg loop or sub rorl sub xor mov and cwtl lcall incl mov pop (bad) jnp aas movsl leave sti js and (bad) cwtl in pop mov imul push pop push das mov int3 insb mov xlat cmp adc jmp add fmull std sub (bad) mov jne movsl movsl xlat inc cmpsb ljmp (bad) out sar bnd test pop push icebp and sub or pushl sub dec into jg mov inc popf jg add fistpl mov jns popf push mov add xchg mov adc mov push cmp and (bad) nop popa add sahf inc ljmp cmpsb test jle (bad) xchg mov les pop loopne call scas clc ja or sub pop add xchg scas loope sbb std pop test sub cmp push add idivl xchg shr rcr push dec lret dec sbb into ljmp jnp mov out or or or push mull and mov and imul inc out lret scas dec int3 mov or inc xlat cmp jne repnz stos adc jns lret and or out std lds scas add pushl movsl dec dec out mov stos int aas jecxz das cli leave leave subb mov scas add adc jne rorb xor jge dec ret and dec xchg pop dec lret (bad) xor xor das cwtl adc dec add std out popf movsl sarl scas (bad) ljmp lds jl rolb popa mov inc and cmp les lcall cmc dec test xlat mov xchg fdivr outsb adc xlat scas cwtl cli icebp mov and fdivs jmp adc mulb movsl cmp mov ret cld addr16 pop pop cmp mul outsl dec push xor cmpb sahf out repnz (bad) push sarb xor gs mov cmpsl fs icebp xor mov cs push mov mov ficom push movl (bad) stos popf push shrb scas xlat mov lret pop mov adc cld lret sbb pop dec cs jns or sbb setae xor (bad) add xor das cltd push jnp pop push mov pop mov hlt dec (bad) add mov cld inc add pop jb push out jbe dec pop es push pop inc mov imul aad mov rep sbb xor sub sub and mov dec repz xor sub fdivs and mov xchg scas sub jecxz pop inc add mov ficom flds movsb out and sub outsb repz mov sub mov das dec inc sub sub leave cmp jl mov jne lods cmp lret cld dec pop data16 pop cmp xchg test movl imul aas jmp in les mov lahf (bad) icebp out lret and std (bad) mov jbe cmp insb mov sub cmp pop ljmp inc xor test adc pop rorb mov adc testl dec pop rcll push outsb dec push dec pop adc movsb stos mov fwait mov loope fnstcw or lahf sbb cmp adc add inc pop mov jmp rcrl adc mov fmul push pop stc ret dec sbb xlat loop pop xchg push or idivb in pop imul sub or push pop ljmp in rorb xor outsb mov (bad) mov jo,pn sub mov stos xor ljmp das aam pop aad popf fidiv mov mov (bad) and jne (bad) shrl lods das test cld xor and or pop jnp lret jge shl and daa out in das (bad) pop dec leave bound mov lret aam bound fldlg2 mov or mov dec add lods pop fisubrl pop xor rorb jmp jl (bad) pop cmp mov test aaa mov push jge adcl nop mov mov and repnz mov mov lret addr16 pop sub and lock pop mov jbe rep sub into mov enter cwtl cmp lock add enter sub cs popf scas bound loop jno fs repnz outsb dec mov repz sbb into xchg xor dec mov jmp addl icebp idivl fiaddl and adc mov sub inc cmpsl fsub (bad) fs push sub xchg jp and cmp lret add mov jne mov inc daa popa cmp jl negb loop adc dec leave popf (bad) dec jb gs test sub ret or dec and pop (bad) sub or xlat lcall or mov and mov aas ja push jb (bad) test in dec fild pusha ds (bad) jp push das negb and adc clc or out jge fiaddl fprem1 loop pop sbb mov add js fbstp clc add cwtl shrb jb pop iret jo or mov or pop push jb iret std push push repz and push or mov lcall rcll mov lods cmp mov imul (bad) scas loopne ss jmp sub inc insb and pop jmp push (bad) or pop in cmpsl push mov push outsl mov das and mov test push xor pushf stc out or xchg push pushf add (bad) jno dec xor mov push bound cmc in push dec iret cmp add (bad) sbb mov sahf add ret pop jbe push jne in imul daa into add (bad) dec xor loop sbb adc or out lea repnz data16 or lahf ljmp push aas lods or aad pusha xor pop sahf mov lret out adc pop scas sub imul sub xor incb mov mulb mov inc dec cwtl fxch mov inc adc in mov fbld andb aas cmpsb jb (bad) iret inc lret pop jbe push mov loop flds mov mov push into imul sub pushf in ret jnp into mov adc cs mov mov cld push mov dec jmp sbb (bad) sbb aam out loop mov xchg lods idivb pop mov out repz mov mov divl aaa mov xchg fdivs xlat sub aam (bad) out inc cmp gs add add fdivs xchg (bad) insb push mov and out fldl sub mov mov inc outsb sub mov and dec leave cli jae add adc and mov (bad) dec mov jne push mov lcall sbb add mov pop bound andb (bad) (bad) ja or fistpll mov loopne rcrl lret fs les cld push add mov mov mov ret or insb lcall mov and nop ret ja test insb pop xchg sbb das insl or xchg xor in subl mov jmp pop cld cmpsl xchg daa inc jmp (bad) pop push sti dec stos popf sub push xchg lret mov sub sub sub mov and mov xor test cmp mov fisub and popf into sub adc cs push out shrl jg aas das (bad) clc test mov sub les notb cmpsb imul pop pop dec sub jp bound ret jno dec dec sub jnp xchg ret popf jbe push cmc cltd xchg add xchg mov test push out aad out mov loope jmp shrl das fidivl movnti mov inc loop xor or or add sub out rol dec xchg loop jge cmp add lea out stc out mov and xor stc ss cmp data16 pop push and shr pusha cmc mov mov jne mov dec in mov imul jae dec sbb mov enter ret or sub push mov lods lock imul fldt mov fidivrl or test pop mov adc pxor sub ljmp push xor jp repz adc bound mov jae or cli mov iret jmp into int jb rorb sti fldl mov inc stos (bad) loop jge mov pop in add leave adc add lea push add mov push and sub xchg mov test pop and push mov xchg sub out dec xor and or jmp stos sub and mov mov hlt outsb imul and repnz mov xchg mov sub jno fisttpll cmpsl fbld aaa sub cs (bad) test sti mov sub lock fs lods nop test jno dec movsl add or (bad) and cwtl xor sub mov add inc adc xor imulb pop pop jno mov push or xchg ja cmpsb push sbb movsb push mov arpl std inc insl sub test incb dec mov negl fdivrs mov xor mov fstl jbe repz pop or stc jge cld into xor sub and dec xor and mov push jno inc and dec imul adc lock mov sub mov int and and (bad) and sub add and adc cmp ret push add and je in sbb icebp (bad) and jg aad adc jge xlat imul imulb ds dec xor pop sbb cmp xchg (bad) outsl xor mov mov xor and insb push ficom notl in or sub mov mov cltd rcl popa pop inc and loop stc dec xor lods sub lret enter test in xchg loop pop xor lods int3 add es rcrb fnsave or repnz shr sub add sti mov mov fnop add dec mov loopne mov add aam cmp xor scas out pop enter jb les sarl rcll inc in fadd add cmp xchg push inc pusha fisttpll mov adcb out xchg push dec dec out fisttpll fsubs mov mov jnp adc fs cli test and push pushf inc es dec jno leave ret call push sub add or bound add popf xlat mov jo mov add sub test mov adc (bad) mov xor test fadds cmpsb mov lret dec mov mov mov dec scas mov enter test inc jnp mov and mov daa pop insb test sarl std stc jmp call outsb fidivl mov ret pop in or or iret (bad) fcmovnb sub pop jbe lret adc shlb es pmulhuw or push mov pop mov outsb fsubrl ret mov mov stos sub and sub stos cmp stc in imul shll pop lret movsb (bad) fdivs pop lods in clc les jecxz sub or (bad) add mov addr16 cmc popf inc sub into pop and lahf mull imulb mov lock dec pop mov mov fidivr push gs sub pushf (bad) and xchg hlt aad add fsub rcll sahf add jb paddusw leave xchg push mov lds mov ja pop imul mov jno and add (bad) or jo in sub cmp and adc insb cmp or or bound xchg pop fidivr dec fxch mov add ljmp or das div ds push shrl out xchg call dec and imul out lods fwait mov adc js je pop inc stc test out push sub popf je rcll int3 inc leave popf inc mov mov rorl lret sti push sub cli or out gs and faddl mov movl or add (bad) jo inc int xlat mov dec and pop in aas inc and mov jge mov adc dec pop jmp out jno and xlat out mov dec scas sub fucomi subl dec nop add dec add mov popf pop mov ljmp pop sub push inc inc xchg jmp fcmovnbe leave out aas pop roll ret add mov mov push add cmpsl fcompl pop rcll pop dec and stc mov add mov cmp cwtl popa out xchg pop enter (bad) sub xlat jno lods adc lahf cmp or mov lds push lahf imul xor je stos sahf into dec mov sub insb cmpsb pop clc fmul sti xor mov lods (bad) xlat cld iret dec jno add sub cmp xor ret sbb cli ss push xor push lahf mov sub inc xlat lcall mov sub dec icebp testb push ljmp xchg in cltd in cmpsl xlat popa cmpsl rolb or and icebp fistl push pushl push cli lahf hlt pop in sti test lods jmp ret xchg adc mov xor fmuls into mov aas lret cmp and mov dec out ss js or (bad) cld enter adc sub jecxz and push cmpsl cld scas lods xchg push and das jge cltd (bad) into pop or xor xchg xor cli repnz (bad) hlt jmp out xchg add mov inc stos or (bad) pop jno dec or adc stc dec lcall rclb stos adc rcl movsl dec into (bad) push pop shll (bad) ja cmp das out sub sub iret cli add push jl (bad) in (bad) lds divl xchg adc adc sub stos daa dec cmp sbb (bad) into scas test mov jns xor dec (bad) repz lcall jmp push dec fidiv dec subl or out mov push xchg je xchg subb xorl jmp add call jns (bad) cmp (bad) and cmp popf pop test frstor jl imul cmp sub stc repnz cmp add fmull mov loop rcr (bad) fldenv cld pop iret sub ja cmp sub adc sub scas popa dec out and pop inc mov pop lds jo loope bound mull or inc aam mov mov add push xor xor mov loop aad rcrb ret mov lfs pop cmpsb mov mov mov decb std mov lods (bad) lret (bad) enter dec clc out fnstenv mov sub add dec push xchg enter push xchg xchg cltd das cmp xlat or cltd mov (bad) testb popf dec enter into cld sub (bad) into mov movswl inc aad pop xchg scas pop xchg lock shll xor lahf mov fstl push and imull rep lods cmpsb rolb dec sbb lods mov std mov adc push lret roll lock ret popa lret je test jmp push and fisub ret mov push std xor popa push push insb xchg xlat mov cmp rcrb shrb mov fiaddl dec out addb sahf out pop mov sub mov das roll add xchg cld test fsubrl mov mov sub das xor dec inc add ffreep shlb pop adc pop mov icebp dec adc pop mov or xor in pop inc (bad) or fcoml fdiv mov (bad) (bad) int3 nop sti push es aam leave cmp stos adc xor imul mov dec xor push mov mov bound or cmc outsl clc pusha movsl mov xchg push cld cwtl pop mov cli out jno imul roll adc and sub or js xchg cmp ret leave push ljmp ja (bad) sti pop sub inc iret movsb push into inc dec mov dec mov cmp push and iret std mov pop push jns xchg das jmp negl pop out into adc adc inc decl mov fstl dec mov cs je push pop std pop inc dec jne clc mov aas pop adc sub inc sahf pop adc stos loop xchg decb in ds loope fwait or and and scas lds jecxz pop add push sub pop aam pop mov fnstsw push push jl icebp push insb pop cmpsl test mov sub icebp ds (bad) jmp dec lret gs rorl (bad) fcmovnb (bad) jno dec (bad) not push (bad) mov push fisubr jmp (bad) sub sub hlt inc aas bound mov sti fisubr data16 popf jg std sub clc mov loop add adc movsb cli mov sub subb shrl bound sti mul sub scas push xchg fiadd leave jge sti pop add (bad) xchg fwait cmp das lods dec mov sub jno pop loopne nop mov add sarl (bad) dec enter and mov add je test sti fdivs lahf jle shrl mov pop xchg pushl out (bad) mov iret and ljmp out jno lds xor out adc xor jmp cld pop mov sub jle gs jns mov lret lock pop ds movsl or inc and inc (bad) mov add and insb pop mov push scas jecxz xchg mov sub cmp sar xor xchg je (bad) or xor das adc xchg mov xchg add mov add push icebp push jns in gs adc lods (bad) hlt addr16 ss sbb push push nop test sti cmp mov sti pop adc cmp jns xchg cwtl mov jl dec idiv sub or push mov mov lods enter movsl aas jg test adc mov ror xchg idiv arpl out add xor sub out and mov or mov mov std outsb pop loope pop pop fcoms xor mov jp (bad) in push push (bad) out xchg cmpsb lods adc mov add and cmp orl jle pop jmp scas sub xchg mov lods ss xor ret into dec inc (bad) sub sbb pop sbb add sub mov mov cmp xchg mov movsl imul mov jl jae xor (bad) decb lock movl sub xor dec add or or add sbb pop sub sub lods loop cmp daa (bad) mov fdivl add (bad) or and lret adc lret jmp dec ret test adc clc lds iret test add dec xor rcrb loop mov sub add mov push mov daa or (bad) mov xchg std fcomps clc leave ds es mov imul daa notl mov ret jl push repnz or and xchg mov dec add ror cmpsl (bad) dec scas mov repz in xchg ja jno ret push mov cmp push iret jmp jle out sub mulb movsl rcrl dec leave mov cwtl pop mov int loope mov mov ljmp fistpl insl jl push sbb mov aaa inc outsl leave out mulb pop cwtl (bad) mov mov jmp enter jb loop and xchg cwtl test icebp mov test mov repz in mov ljmp jmp jb jmp mov pop in cmpsl fadd into das cli dec lret ljmp popa imul mov pop mov xor dec sti sarl or ret xor xchg clc sarl dec cmpsl imul push xor mov cmp jns sbb outsb jne andb test xor mov notl ljmp and imul jg add cmp in in and push mov add push (bad) cmp icebp mov sub push ffreep dec sbb mov sarb mov and mov fs xor mov sub repz push orb jns,pn imul push or xchg jge (bad) adc iret scas out xchg mov xorl aad in (bad) xor or shlb pop lock bound pop jno inc or inc xor xchg jno imul dec lret fmulp fcmovnu push in add out xor lcall pop sub sarb data16 cwtl pop xchg and and ror (bad) fimull inc add and pop pop push lods je leave push mov sub xchg out mov stc mov dec aas mov push and xorl push push into (bad) pop pop mov xchg push pop sbb mov jne icebp in std repnz cmovno std fsubl sbb dec cmpsl jle fs jmp mov xor std inc rol sub cld dec loopne or mov (bad) mov jge les pop push (bad) and adc mov adc xchg (bad) fstps lahf iret enter adc out mov dec pop fsts mov and pop jae fs cmp mov and and xchg push pop in pop roll jmp dec jecxz shrb ret push bound push mov out rorl aam xlat xor int roll insb adc mov mov lret std jmp sbb pop dec call mov push add xor out (bad) jmp aam pop push movsb bound cmp icebp jg and sub jecxz jns aas pop add adc and aam push ds dec add call mov and adc sub fcmovne push stc mov cmp popf jns dec jg jmp movsb sbb or mov pop popl xchg add inc test test jecxz add (bad) enter dec repnz leave aam gs mov loope push cmp (bad) (bad) lret in out popf roll dec and cwtl add inc add mov push push xor add xor lret jnp mov out xlat gs test icebp daa and jle vpcmpgtd push jne cmp iret inc test and xchg or xchg (bad) popf push xchg dec push and xor inc add add daa shll xor in pop mov xorl or pop xchg lcall lods std sbb popf inc test call sub call and aaa jno popf add daa jle daa xchg inc mov stc daa pop iret mov pop pop lret push inc cmp (bad) xor (bad) loop lret inc or sbb test mov cs (bad) jl xchg cmp and test add xor outsl lret test leave add mov xchg fisubl inc (bad) ret xchg or outsb lret push sbb add dec cmpsl pop sbb jecxz inc test adc aas jecxz and lods pop inc pop or and ret mov into mull jmp ror (bad) mov int daa sbb cld pop sar or sbb xor iret xor mov es repz jl pop xor dec xor inc and test xchg or flds clc or (bad) js fstpt out push cli mov xlat fldl sub cmpsl lock sbb aas loop xchg adc int push push mov sub lock out mov in lret push (bad) and pop (bad) or push lds mov inc sbb (bad) xchg int3 out pop fstps ja push fldl scas faddl push pop mov xchg cmp mov dec out lret mov add clc test jmp sbb mov push por out pop jnp mov or daa inc and xor add dec sbb adc dec rcl imul inc rcl ficoml sub loop es jl mov jl bound lds mov inc xchg icebp hlt jle sbb jno bound ret data16 push add popa outsl push in sub push sub mov adc xor popf insl and sub sar repz repnz test sti stos xor jmp iret outsb pop loopne repnz sbb xchg hlt add and xchg jns ljmp push loop pop hlt fwait in pushl lds add (bad) dec pop push jmp int movsb jnp stos lea loop inc mov sub iret and pop pop add data16 jg faddl push ret lds mov fisub cli cltd push repz push movsb push xor (bad) icebp addr16 lock dec add fistpl jne call rcrl arpl ret outsb jno out mov stos bound xlat mov jmp or notl jp into mov xchg cmp lods fldl stc leave lcall stc push dec sbb and fcompl pop or push sub bound jg dec popf (bad) into in mov xor out jae daa sbb sub add sub add cmp fild and xchg dec lret dec xor xor push dec call aaa mov dec mov jmp leave adc roll dec mov inc loop sub leave jecxz cmpsb and testb push cvtps2pi sbb das outsb add xlat mov icebp adc or mov mov dec pusha add sbb (bad) out stc xchg xchg repz xchg aaa stos idivl nop out sub xor mov push sti sbb pop push (bad) inc adc (bad) xlat stos sbb add data16 aam in jge xor lea pop mov and and ljmp gs xor add jb (bad) lods inc fsts mov dec mov movsl or lret fild pop xlat stos sub pop in mov jl lds dec xor push bound fwait fs nop sarb mov test mov and leave aam adc lret call add call jmp in daa repz out sub mov sub sub push pop sub (bad) stos mov pop fldl add sub stos mov mov add mov jge pop (bad) (bad) mov mov mov jb xchg mov and or or mov push dec fucomip ss and pushl sub jmp jle movsl out les push inc xchg sbb testl inc push pop out inc insb mov and add jo xor in les mov xor es dec jmp flds xchg outsl idiv or sub adc lock shlb pop jmp xchg or xchg outsb jne xor inc (bad) sti outsb jecxz daa rclb fadds cmpsl nop mov movsl outsl jne mov sbb out mov sbb push lods test xchg push je or fcos cwtl data16 and jbe push shr addr16 ljmp incl mov mov dec mov cmp test pushf fwait movb (bad) mov push scas cld mov in dec inc xor out stc popf enter add ljmp push sti mov movsl jp push add iret test incb jecxz jle ret stc repnz jg stos dec cmc or cltd mov adc das (bad) cmovno sub xor ja imul add add into in pop sbb jg lds aam push or pop cmp imul pop sub test mov cli popf jecxz inc imul (bad) jnp call ret mov add stc ljmp adc and and push and sbb dec rolb jge pop xor mov pop outsl jmp movsb or jne lahf ret sub imul fdivrp bound cli mov outsl imul or sar leave rol aas in push mov add jbe ret dec ss (bad) mov hlt lock icebp lret sub dec or adc xchg pop es jne pop pop cmp inc lret pop daa (bad) es push seto push scas or pushf aad (bad) bnd int3 out pop sbb adc clc xor fwait sub sub jp loope jb sub mov adcb add ret xor mov stos int and scas loope cmp pop xor fwait in lods stos xchg add adc loop dec mov enter sbb or jno aam lret dec jne rclb pop popa inc xchg movsl dec adc mov cmpsl add sub stos mov es std shrl ljmp out push mov cmp icebp out insb popf movsl add mov std cmp (bad) mov imul sub in dec sub bound fucomip dec push into pop ljmp pusha xchg loop rorl push or sub fstl mov jae or xor fnstenv mov mov sbb and mov int3 push iret mov or test mov (bad) cmc (bad) cmc imul cmp daa sbb incb aas mov or lret xor ljmp nop mov xlat and ljmp (bad) bound push les (bad) in and pop les jmp imul cltd inc ljmp inc imul xor jbe inc repnz or enter dec ljmp mov in mov call hlt adc addr16 scas lea cmpsl fpatan pop scas sar pop and mov sbb in ret mov or pusha mov xor lahf popf (bad) add push (bad) mov inc xchg icebp arpl sub sti test stc pushf xchg out enter xor scas aad (bad) frstor inc jle aad pop shll scas enter ret jg rclb push jle add mov nop dec pop mov sbb nop cmc xlat sub lret xor sub cmp push dec gs scas repnz fidivrl xor (bad) js pop call cltd (bad) icebp xor cmp mov loopne push ret mov test sub push lahf (bad) shrb mov lret stc jo mov lods and pop xchg pop jge orl xor push mov push pop mov sub clc mov mov xchg repz mov sar sub add rolb sub and cli sub cmp es and divb mov aaa mov outsl or icebp push std push or mov mov xor xchg (bad) jno cmpsl les cwtl jmp lret mov inc adcl pop shll sti sub jecxz pop ljmp ficompl mov xchg xchg mov xor pusha dec and adc (bad) pop nop mov or movsl xlat inc lods lods jle or sbb cmp push loope sar loope xor arpl lcall fnstenv adc add xor test shr pop lods daa repz xor add jb inc leave jecxz pop stos (bad) out sbb aas dec inc push sub dec xor sbb add add mov inc or les mov sub and iret lods dec mov repz push or and add mov sub mov leave push cmc pop xchg dec aad mov fnsave jp stc and sbb cmp into lret xor inc or repnz sub (bad) jo imul mov sbb cmp pusha jo xchg adc dec jbe cmpsl movzwl lret push leave pop jl movsb stos lds jmp mov jo xchg ds cmp ret movsb sti (bad) lds xlat xchg test mov add jmp mov xchg sub xor jbe jg xchg add xchg mov jns xchg leave daa pop and push jns (bad) jne xchg lea or inc xchg dec sub dec aaa leave test mov pop mov clc sahf mov aaa sbb shl inc into out mov mov mov ljmp or lods xchg lds les jle cmpsl jmp adcb pop hlt pop mov pop rol (bad) cli mov lock dec repnz into aam jecxz xchg mov xor test (bad) xor stos mov into xchg lock in sbb sub xchg lret jmp xlat clc dec and mov (bad) repnz jl fcmovb sub mov add cli mov pop int3 lahf icebp xlat mov pushf arpl movsl std scas aad arpl out movsb push xchg idiv cmp out ds or add ljmp adc mov cmp or je fstl dec ret mov js mov out sbb pop xor test sub pushf pop stc or pop pop clc xor (bad) xor outsb lret xlat or pop push lds mov xor aad dec sub mov xor dec push add bnd pop je mov cmpsl push add and mull (bad) xor sbb mov stc pop lret daa lock cli dec dec cmp int3 insb (bad) shrb xor mov cmp mov (bad) ret ljmp outsl popf jne pushf call mov ret xchg jns imul pop xor bswap fistpll xor stc mov dec notb add add and sub scas cmp in and pop xor lods and mov add pop jno xchg fistpll pop lock icebp push pop inc and icebp outsb movsl cmc insl mov xor adc (bad) out jecxz xchg stos jno add js rorb nopl in and sub cs jne mov mov push or xchg and cmpsl hlt cli lods xlat les sbb fnsetpm(287 jns (bad) add or das push jbe pop add dec and jb xor jle ret lods out repz scas add test out dec aad fisttp lds movaps pop xor mov leave popf push dec push mov xchg mov jmp test add push xor jecxz adc fisttpl test dec jae mov push push pop sbb adc push dec push mov pop mov fwait sub pop push loopne jbe jp mov add sub sahf cmc clc jnp lock add ljmp push xchg loopne rolb ret sub pop jnp roll jnp repnz call pop push mov add jl or insb aam adc mov pop rcrb sbb add pop (bad) dec fsubs add andb (bad) mov (bad) nop push push mov insb shl push add pusha mov cmp (bad) add cmp mov add mov mov jl jle push (bad) xor dec sub pop push stos push loope aas neg add pop add fildll in loope and sub dec add add popf (bad) pusha daa jg call fimul sbb ja xor mov xor mov out add dec fsin pop (bad) or mov sbb add add jle adc mull ja add pop rol jg aas arpl jl ret cmpsl inc cmc dec iret cmp (bad) in push mov inc (bad) scas js sub dec xor push push push mov sub pop rolb iret pop sbb lock adc mov btc stos cmp add fsubrp outsl sub push sub or repz sub sbb ret push push inc inc loopne das add ja and daa sahf cmpsb add or pop xchg or cmp sbb pop sti mov dec cmpsb call (bad) iret lcall dec test xchg mov shlb sub add push sub and repz xchg adc push mov es sbb jl int mov mov in mov sti frstor or mov cmpsl xorb pop ljmp add outsl xchg test repnz jge mov lock dec icebp mov sbb xor cli cwtl jne mov sbb mov lahf (bad) sub sbb xor popa sti and add xor mov fisubr xor pusha mov cmp and xor sub mov mov xchg gs ds mov or pop fistp sub and addl pop jmp test and or in jns mov pop fsts dec in mov insb leave fisubr pop fstps sbb test insb aaa dec lods pop test test iret icebp mov jnp xor push and test xchg cmp jo pop repz test cmp xor pushl or pop xor xchg cmp mov ja and ds xchg fiaddl sub cli divb mov insl (bad) dec orb pop fcmovnb test pop int divl mov and pop je and push (bad) int3 dec jp jbe jb mov pop or (bad) in mov cmpsb icebp (bad) repnz mov test add xor sub or mov pop out cwtl scas lahf pop fist js dec divb scas mov mov mov mov sub jbe add out in cwtl xchg or ja cmp mov jl pop xor xchg add fistl ss cmp sub lret and cmp sub or movsb sti inc ljmp cltd push sbb cmp xchg test lds sub adc into inc xor and stos add movsb inc dec push into outsl xchg shll mov div rcll test pop mov outsl fadds dec pop add push pushl popf gs pushf mov test mov adc and into lcall sbb iret and stos mov inc lea push adc jecxz dec push pop mov jle enter fldl jns (bad) and adc pusha jecxz add jb out mov movsb jmp arpl mov (bad) mov xor jbe gs sti mov inc insl iret sahf dec imul or push jg adc push scas out shrl cmp (bad) or push jge add mov dec pop jg sub hlt jae dec (bad) pop (bad) sbb push sbb out adc pushl (bad) or mov lcall in test stc pushf (bad) xor cmpsb or sbb fs jmp or sbb jo inc loope fstps leave xchg leave fdivrl jg std stc inc xchg ret out sub ret inc mov testl shr lahf jmp mov stc cmp out xor ss loope push jge xchg adc lock (bad) std push leave add sub pop and mov mov xchg cmc in insb sub and mov lret sti sub cmp stos ljmp jnp mov inc mov xor push xchg push mov in cmpsb shlb incb adc lahf idiv lds pushf adc dec shr leave dec sub mov gs movsl fistpll mov mov sub mov stos mov and insl out cltd sahf xor imul in mov dec fs lret or push in cmpsl shl adc popa push xor cmp jg jne or lock pop fldenv dec cmc cmp test sub xchg notb inc lret inc dec adc pop idivl jl movsl mov dec cmp loop cs dec repnz das out adc xchg pop xchg add repz fucomp out mov dec mov or (bad) (bad) mov das test bnd fisub pop add (bad) out jg and push das add cmp pushf mov and xchg xchg clc push mov lret orl sub add and sub push dec int3 out cmpsb stos sahf out dec or push loope sbb dec shlb lock imul imulb dec xor orl fmuls add mov cmp push or dec divl xorb out add sub leave mov das mov push pop (bad) cltd movsb fldenv cld mov dec cmpb and pop jmp int3 sarl mov pop xlat pop pop mov lds roll add jae pop sti in mov pushf pushl jmp xor lret inc inc popa imul repz and xchg cmp sub sbb xor mov dec mov cmc inc ljmp ss add inc out sub or xor cmp call rolb int inc add xor dec xchg sahf fnstcw push xchg mov insb push ljmp cmp lahf dec mov pop test daa (bad) push lods lret cmp jg lret pop icebp mov jmp rolb cmp je mov dec testl add into insb inc fcomps push mov scas adcb fmull xor imul push aam dec stos mov sub pop and shlb xor add jp popf stos int3 imul stc loop push jns jnp sub mov sbb je or pop pop addr16 sahf neg and data16 xchg aam jmp xor cmpsb mov push (bad) insb ljmp cli cmp bound sahf xor lret ret sub or leave xchg jge xchg aas std int daa push xchg clc cwtl clc xor xchg ret cwtl pop xchg push cwtl ret sbb jmp sub and pop fildll lret cmp mov loopne imull inc mov bound jl imul and into ljmp mov aad cmp out mov adc or mov pop movb mov ss push data16 dec sti les leave cs sbb daa rcr es jp int add mov dec movsb mov pop icebp orl shl dec and data16 repz mov ljmp mov imul das sub pushf scas xchg pop xor popf loop push cmp fsubp enter lret jne insl jge and out sub sub dec push (bad) cltd in fiadd sarb push sub mov (bad) mov xor push in and sub stc jo inc sbb sbb cmp mov int3 push dec mov sbb add shlb mov pop lret adc sbb pop sub test testb or cmc jnp xchg or pop sti sub dec popf mov dec sub pop popf sahf sub fwait call mov out mov cmc outsb shrl divl adc xor lds lods (bad) (bad) xchg add add jno fs mov or sub jmp xchg insl popf shrb and xlat mov (bad) or and test out inc mov call sub (bad) mov dec xchg je add fs mov test dec and push adc mov add push and and lock repnz or and mov cmp icebp xor mov dec jge sub leave mov xchg mov jmp stc movsl leave adc movsb and jmp pop stc daa ljmp pop xor xor lods pop movsb aam mov mov dec (bad) dec lods pop lds jnp xor outsl imul mov push mov add mov call cwtl ja mov or push imul sub push bound pop push pusha or lret mov dec sub mov lret jl push loop cmp sub push lret mov xor jbe sub (bad) xor inc cmp mov jle test pushf outsb lret lock xchg fnstsw cs cmpsb pushf jl pop lret mov jb cwtl dec and dec movsl jl int icebp in jmp mov push lret cmp pop pop cmp clc out out mov test leave (bad) or xor xchg inc add inc push out rcr cmp out imul jb (bad) ja js and xlat and daa mov jno or mov (bad) sarl jecxz,pn dec stc pop mov add cmp repnz dec les icebp call rcl mov mov push jns push cmp jne out mov iret je jo pop xchg or ficompl rolb adc into in or (bad) push inc scas mov adc jns dec sub aas movsb ja ret scas out inc jmp cmp (bad) dec stos pusha push sub mov xor xor das cltd mov xchg lods cs test rcll mov test int jp cmpsl xchg or mov or (bad) mov push imul test notb imul sbbb cmpsl (bad) dec lds cmp xchg stos out (bad) negb sbb add lret pop adc (bad) in es xor jl (bad) cwtl push ljmp enter add cmpsl inc repz jae mov mov daa lret ror and test jecxz mov mov mov (bad) sub hlt das jmp adc pop into bound xlat int adc mov mov cmc xchg dec xchg lcall mov mov inc add cmp cli mov ljmp aam scas push xchg mov arpl xchg pop mov stos flds pop and insb xor xchg (bad) out test mov adc orl leave inc lock fcomps mov not es in fisttpll pop jae imul pop aam push or inc (bad) pusha aad lea push jns push add sub and pop mov cltd adc and dec lret (bad) cmp mov mov mov and xor push cmp iret out mov xchg les mov aad shll rclb cmp (bad) sub cmp cli xchg mov mov adc (bad) popa nop mov imul vrcpps push push mov push addr16 xor and cmp mov and repz jmp ds mov in xchg stos loop (bad) xor xor loope sub mov es (bad) jbe inc je lds hlt pop lock mov fnstcw ret int popa int3 outsb idivb daa bound xchg xchg inc mov xchg xchg mov mov mov dec in cmc shr cmp sub pop repz xlat mov xlat xor pushf gs idivb adc mov ret je push orl xchg dec in cmpsl test rol sti mov sbb rorb fdivs jb mov int ds sbb or (bad) sbb sbb jnp test scas test xchg xor imul xchg jnp cmpsl push mov sub mov cmp ja lret adc mov push inc out xor mov add mov xchg xchg out cltd pop aas adc popf dec repnz or insb mov cmp and add sub or add sbb (bad) sub in jmp and dec mov xor pop pop imul mov jg cld xchg sub cld add test cwtl mov jle cmpsb cmp das mov xor int3 push and dec cmpsl cmp xor xchg andb ret xchg leave out lea or xchg fcomip shrb or mov xor and jno or xor mov jbe xor or or dec xor jo sbb sti insb int loope xor mov adc test sti notb clc inc cmp or int3 lahf notb xor out add bound stc push xchg or ret out fstl mov push mov test and test scas lock mov jbe push rcll cwtl adc cmp mov mov lret stos arpl shr jge test or jl inc jecxz call jg mov jecxz shll enter sub inc jo clc fdivs aaa nop (bad) int mov js push adc and mov sbb push js imul popf aam bound (bad) jne jbe sub xchg jbe gs cli mov das pop scas sub inc and jne iret cmc out mov ds lret push arpl cmp call sbb mov cs sub sti dec lcall lahf cwtl lret add dec mov cld (bad) stc inc js mov sti repnz sbb dec add imul stc adc push adc (bad) imul xchg add fucomip jmp mov inc ret push sbb sub std xor nop lret fnstcw mov imul add mov aaa mov lahf pop imulb in and fnstsw sub sub inc (bad) out pop test call and jmp ret cmpsb xlat mov xchg mov clc inc notb stc mov (bad) jmp (bad) cmp pop mov inc adc and repz adc cmp aas or add jg adc adc cmp int3 cmp mov push dec icebp jg mov or ss push xor fldenv dec dec mov leave call adc mov push je push push loope divb test in js mov ret imul xchg and jae das adc jle or xor cltd popf pushl dec test mov fldenv jnp mov xchg scas test pushf push jecxz add push jno lret movsl repz lret imulb arpl jno xor es js repnz lahf popf sbb loop (bad) dec das adc sub fidiv dec push lcall sbb loope add out int3 rcl cwtl xchg xchg jns inc mov jp cltd aad dec (bad) sub movsl (bad) mov pop and decl nop bound stc ja adc dec fldlg2 dec dec sti xchg xchg stos sbb push push mov aam jmp js sahf hlt jmp xchg mov aam push lock sub sub jecxz (bad) mulb movsl fsubs add enter cltd ja or orl xchg cld jmp jge pop mov adc cmp cmpsb add jecxz nopl or ret lret sbb jmp xor mov mov mov (bad) outsb cwtl jbe pop sub mov out test mov xchg jg add xor jle sbb xchg scas push jbe shr ret je push mov push or fcomip out fldl2t imul out push cmp jg insb ret xchg mov sub repz and sub sub stc pushaw icebp mov repnz and cs addr16 or (bad) jo subl xor stos mov inc pop or sti xor iret mov xchg ja mov orl fnstcw sub or or adc add mov sub lret ret out sub push push fldt scas imull pop int3 or iret cmp adc jl adc std (bad) dec inc and aas les lret (bad) into pop ffree and sahf add insb xor mov inc sti sub xchg cld dec repnz (bad) jno jp fistl popa sbb lret jp pop xlat mov adc add and movzbl in or sarl hlt mov or rolb ror into lahf mov add mov or mov je (bad) push or inc (bad) ja or jnp add jae dec adc out dec and push imul inc push sub mov cmp add loope adc pop in or sub xor mov movsl lret pop out mov jbe (bad) nop jo cs lret jmp ljmp or (bad) xor jmp pop (bad) mov (bad) (bad) stos sub (bad) ss sti adc stos sub sub push sub (bad) leave jg iret in xor sti xlat into mov lock cmp scas mov mov inc test jecxz xlat pop add setb insb xchg out and loope insb mov jae insl jmp mov mov sarl push ret pop into scas mov dec add mov lea cmc addr16 repnz rolb sub scas mov pop les sarb popa mov sub and pop dec into call pop cmp xchg jmp movsl inc test mov adc inc and pop div dec xchg sub push mov push mov popa stos push outsl and mov cltd mov cs jge loope adc push xor mov (bad) mov out aam mov enter pop lds icebp pop test pop adc xchg push or push mov popf jno cmpsb iret das (bad) xor mov sub mov dec fwait inc cmp rorb mov imul add mov orps pop pop or outsl lcall decb scas jno add enter ret (bad) addr16 lret insb jp subb in frstor sahf dec les push cmp pop xor in ftst (bad) sub push xlat mov jb dec sub jle mov movsb out loop addb js jb or pcmpeqw popf mov outsw mov std and mov fcompl jmp xor dec idivl add jbe repnz sub add mov dec (bad) (bad) mov test push push mov cld push add dec decb outsl sub shrb xchg inc adc xchg adc add push scas icebp pusha outsb iret lods add fisubl pop (bad) rorb ljmp add mov xchg (bad) mov jg enter call sti jp adc xchg fcomps pop inc sub into mov mov jl pop scas cs and repz repnz in out mov arpl inc jmp sahf lock ja and scas mull mov shr lret test lcall movsb icebp loope jg rolb (bad) sub (bad) jl pop mov cmp lcall scas jne mov rcll sub xlat mov jle mov mov rcl negb xchg inc out mov xor xchg (bad) sub adc out iret pop mov loope cmp sbb xor add push mov (bad) dec xor js mov mov or aad cmp cmp mov mov cli inc dec fnstcw mov xor xchg ljmp push inc dec aaa mov cmpsl movsb adc lock inc sbb xor xor jl loopne rorb push add repnz push ds add add mov inc lret jnp daa lds ljmp jge (bad) popf jp cwtl ljmp or repnz lods jg sub scas mov xchg mov decl mov mov pop and mov rcrb pop leave mov loope mov pop pop mov test (bad) comiss hlt mov sub ret fistpl pop movsb cmpsl idivb addr16 out mov xor std jns dec dec pop xlat sub add (bad) xor push jno pop mov and push push cmp pusha je pop and enter cwtl or pop lds or nop lret or stc jg scas leave cltd push sbb xor loop push mov and (bad) sub mov out cmp jg dec out les arpl call push scas cwtl inc mov into dec jg sbb xchg out mov insl movsl clc pop adc add jmp xor mov mov jmp push and add call and mov and mov andb (bad) pop test sti mov js pop sti call sub or repz mov xor stos mov iret push sbb std cmpsl icebp jle fistp pushl xor mov xor jmp inc out pushf ffreep mov inc outsb je test mov pusha mov jb out scas sub icebp cltd xchg mov rorb or dec cmp sub mov mov mov jge or dec push clc pop and and popa or loop jno lret add xchg movsl das jns inc add fcompl dec fisttpll or out push and pop adc pop fbstp mov mov jl jb imul mov jnp xor lret idiv cmp or das out and mov iret pop sbb int xor push lods roll cmc sar int dec subl xchg hlt xchg jg jbe daa sbb xor xor sub mov jg xchg sub or idiv loopne pop cmp mov dec scas lea push mov and es lret sbb inc xor roll pop mov stos popa sub out sub jnp cli jl cwtl shrb add dec adc dec aad aad lret lds or lds cmp cmp das ljmp scas leave dec pop mov jb dec (bad) and push mov lahf (bad) lock jbe xchg insb scas inc negl fist pop ljmp xchg dec (bad) xabort mov jno out cmc in lods pusha cmpsb lock outsb add fdivrs fcmovu sti dec dec lahf sar cld and adc test test mov fsubl xlat stc loopne mov xchg fisub pop and add outsl icebp pop outsb fs stc mov xchg mov xchg ds mov imul enter dec or add into inc gs loop (bad) cmp or mov push pushf fidivrl movsb or and and fidiv stos lea cli outsb and or das cld and ljmp je,pn loope jnp (bad) xchg data16 sub xor dec lret std xor into jg jmp xor mov jg stc outsl mov dec push iret mov cwtl loope lahf stc sti imul jge les or sbb lods add dec bound jmp sti pop mov cli mov or xchg pop xchg test pushf dec mov daa add cld iret jb in and jb pop lret mov test (bad) idiv dec call add cmp xlat inc push dec push or jae movsl jp test pop mov dec xor aaa xlat mov addr16 push adc hlt call pop addb (bad) leave sbb xchg sbb into lds (bad) mov pop (bad) bound out push mov lahf mov lods mov ffreep cmp mov (bad) aad outsl jge stc rorb adc cmp icebp pusha push mov adc jl pop mov sub neg movsl (bad) dec jmp imul fsubs cltd clc cwtl pop int adc sub xor aad xlat stos aad mov daa movl (bad) sub scas mov pop and imul loopne or and rclb mov fs das mov push lds (bad) test or ret sahf inc (bad) mov out sub jae push pushf sub rolb data16 mov in jp mov leave jge cld sub lret add mov push decb ljmp daa sbb mov loopne sbb xor out pop mov lret jecxz push paddsb mov cmp push adc sub rcrl mov cmpsl push cmp in sbb lret movsl add inc int mov xor and sbb div jns inc mov aam dec out mov (bad) jo xchg (bad) push or cs sub and je gs cmp mov lret sahf push pop add popf xor sbb jg stos into inc sub movsl mov inc pop sub add or outsl lahf adc repz fcom ja mov loope cld mov or (bad) mov add dec nop outsb outsl sub test (bad) test jecxz sub or push cmp add and cmp mov xlat xchg push fwait xor xor (bad) pop mov xchg mov push pop and xchg dec divl mov adc mov daa pop std xchg add pop inc inc and cmp mov mov and cwtl out into mov bound notl pop pop mov and in pop mov std repz xor dec lds imul fmul mov mov jno inc jmp lret lock nop xchg test add pusha xlat les pushf aaa pop xor and jg cmp cli popa push sub xor add ret rcrl lods in lock (bad) mov stc add (bad) sbb pop push push out dec scas dec lods adc jecxz mov loope or das (bad) cmp stos cld jns mov fdivrs sub sar xor jmp cltd imul das cmpsb fadd dec or call xor and ret stos into fistp pop int3 sub add jp lcall xor fsubrl mov inc pop stc add (bad) cmp add decl dec push data16 daa outsb test push nop (bad) out mov jno stc xor test leave icebp pop cmp outsb or pop xchg jae xor dec xor sti jae add mov cs xchg adc and in mov pop pop cltd pop ja cmp mov mov sub xchg cmp fbld rcrb fs xchg sti jae push imul pushf aas (bad) in mov dec out stos popf mov sub arpl mov mov cld jmp jne out mov inc sub das out sbbl pop mov push pop idivb out mov or stc jmp xchg ja jecxz dec xor sub pop ljmp cmp push jecxz repnz push jl pop out mov xchg mov pusha mov cmc loopne mov popf ficomp (bad) hlt ljmp push ja les fnstcw sub loop mov inc jns pop pop xor stos test cli repnz (bad) scas int mov enter pop add jge (bad) loop in xor add pop jbe rcr sarl rcll push add mov cmpl sub inc push fist push adc sub xor lahf and ljmp mov dec test sbb pop mov hlt (bad) fs bound out mov or ret rol dec jmp mov outsl icebp pop ds jecxz loope xchg dec cwtl fs cmp loope repz pop (bad) das mov pop scas sub pop add es dec or mov ja call cmpsl or je pop pop and mov inc jle cmp adc pop (bad) xor mov push shll xchg and loop pop shll ljmp data16 cli repz xor mov test mul (bad) stos lea jbe mov mov sub mov (bad) add xor rclb pop mov inc dec add xor (bad) sti xchg es stc sub jne mov insb scas cmp (bad) cmc leave cmc jns push adc xlat cmp sarl mov adc loope inc pop das aad gs mov sub dec pushf (bad) jl push loope xor movsl and test mov cmp pop push lret cli daa insl aas std xor int3 test popl push jo pop loop xchg mov push adc cmp cs add xchg or mov dec insb add data16 lret loopne pop addr16 mov mov pop or out cltd mov test movl test in lahf dec or push mov mov movsl notl call mov xor loope aas (bad) push imul stc icebp scas ja xlat xlat adc test add pop int3 xchg nop dec dec fisub popf xorl cmp icebp ss or push xor mov cmp cmp pop out (bad) cld xor pusha mov aas and mov (bad) stos mov fist push mov sub popf push xor adc dec xchg in push push (bad) xor sub inc cmp (bad) and add mov xchg test and adc shr and sbb mov call sar das pop icebp push out scas (bad) repz dec pop jne xchg inc pop lahf insb jbe pop xor mov repnz leave ds scas xor out jmp out mov sub pop mov jg xchg mov ret pop imul repz inc movsb cli xor test xchg pop data16 out inc sub js int3 aad sti inc push mov push or sti sub mov inc not jmp ret decb sub pop adc mov imul adc jmp fiadd cld mov push repz mov sub scas mov cmp ja sub xchg xor (bad) insl mov inc in pop xor xchg pop (bad) arpl xor add sti popf ds xchg adc cmp dec xor cmp or xor inc decl or popa movsb mov xor insb sub and jl inc add pop je push jne stos pop aam push out (bad) cmp notl in out mov imul push mov fldt sbb (bad) xor out inc stc shrl cmp and jmp popf sub push lock add adc clc std leave cmc add sub and or xchg shll scas or adc repnz mov enter int jp leave adc or add cmp stc mov nop or les jecxz ret test push lds inc adc adc sbb adc mov push cmpl lcall or ret lret faddl iret mov cwtl aaa ror adc push xor mov push insl jae adc cmc data16 popf jo xchg js dec call inc and or or adc out xchg (bad) aaa mov pop or push xlat jp xor and inc lret outsl rolb mov xlat cltd or sub sub es xor lcall jb and dec adc fdivs lret xor push dec in push popf mov adc sub rcrl sub add fldcw push inc ret pop xchg mov mov and sub pop adc (bad) lret sub jne into and sub ljmp dec mov loop loop inc cld xor add pop addl (bad) mov ljmp ret push jns imul xor dec push out push sbb loope xchg test (bad) push cwtl outsl mov xchg cmp out pop xor mov and sub mov ljmp es adc fimul (bad) ret popa dec mov xor or mov popf adc out fldcw dec daa incb lock mov lret (bad) and pop dec ret and (bad) jb sar bnd jmp fdivl dec push repz lods repnz xchg push xor scas bound (bad) es sti hlt jp roll (bad) cs jno jmp xor jmp jg jbe push sub add mov fistpll mov dec add lea lahf or mov frstor inc ret cmpsl je test or cmp fst sub jmp cmpsl es cld mov mov and mov leave icebp and mov popf xor or sub (bad) mull mov (bad) xor sub cmc jnp cmp push leave jge ja repnz fidivl add repnz out mov dec and stos call (bad) repnz xor jg cmc idivl scas fsubs ret sub das lds or iret mov jecxz add dec lock mov lods ret aad or pop pop lcall gs sti rorl pushf xor inc dec out mov xor dec sti pop dec out sub clc push daa out push imul vmovddup lods test or popf jbe and sub (bad) fst inc movsl je (bad) ficom add stos int3 test mov je add leave mov loope sub aas out daa call or enter cmpsb lahf roll lea leave mov imull xchg lods mov dec fnstcw jle push mov add dec mov stos cmpsl data16 ret jno ret lods rorl stos lret loop jne (bad) sub das and pushf in adc in lret add inc out call cmp cmp ret pushf loopne hlt divb pop loope pop and loop popa test mov dec xlat xor test idivb (bad) sub add or inc xchg mov xlat inc push test stc and mov loop adc bnd inc xchg out mov leave movsb das push dec ret inc out dec imul fbstp (bad) loop or add mov xchg mov and pop ljmp fcoml xchg int3 push cmp cli std stc sahf imul int3 divb mov push loop aad jo sarb das add fistp sub pop sub bound fcomip bound push mov cmp mov adc popf pop scas jb ss insb loopne xchg push out ss mov inc sbb cld lret ret test push or dec add sahf faddp (bad) out add stos mov mov outsb (bad) cs add das fcompl pop push jae imul popf fstpl mov repnz or mov (bad) and or mov fcoml testl xchg fucomip fstps aas cwtl cmp jmp jge pop mov sub mov or inc or icebp andb mov enter sub or jns imul and outsl out mov into sbb in add push insl lret test out push or test fdivl mov not push sti scas adc ds sub dec mov xchg adcb sub dec jbe iret scas mov and clc lods fimul or sub mov mov jmp dec test lret movsl test sbb push mov add cmp outsl add ljmp xor or pmulhw movsb and ret or clc cmp inc cwtl hlt (bad) pushf dec mov scas push mov jns leave sti add ljmp rorb or cmc dec cmp repnz xchg fbstp (bad) mov jle popa or add test insb pop (bad) jecxz sbbb and pop xchg mov adc mov stos in stos call and add cmp inc cmc xchg pop jmp bound cmp dec dec adc dec fistpll mov xor and lret sti pop aam sub repz lods lcall movsl xlat xor out bound std mov dec xchg das sub ds jo (bad) inc data16 sub scas enter and daa out jg and sub (bad) cmp sub loop int3 xchg cmp inc ror mov xchg jb jge push xor mov cmp rcl scas cwtl imul inc mov lods mov jg sarl xor jle ds je push sbb (bad) xchg cld sub inc lahf scas ret xchg int sub xor sbb and xchg lahf xor jbe pop xor mov (bad) xor and and add bound xor pop xchg data16 inc scas fadds mov cmp or sub fadd xor push dec dec test sbb or or mov and or les sbb mov ret lea dec jmp and xchg push out jg pop (bad) jb movups mov (bad) loop cli les insb dec enter cmp xchg adc and push mov xchg ljmp jge dec daa std sub in dec notl insl daa jecxz inc sahf scas lock ret xlat scas inc mov iret add mov mov test cmc jns imul jne fs and cmpsl dec add cmp dec fidivl lds aad hlt movsb stos mov cmpl or xor pop mov and (bad) jb xchg out pop xor mov lahf test xlat ljmp out cmpsb push pop (bad) das leave ja mov pop mov loope push xchg scas add cmp push jb shll out clc leave mov cli xchg xchg push ljmp inc cld mov or dec add sub xchg scas lods mov xchg inc pop ljmp out ss sub das hlt lds mov int jle aad pop mov negl mov imul in mov jge mov dec ret push mov dec aas movsl js push ret push imul mov test xor call lock repnz call cmpsl inc jl loop aam fcomip push dec pop xlat xchg jecxz daa sub sub pop mov cmp mov pop xor bound ret divl sub inc (bad) movsb sbb aas call ret cmpsl dec dec mov pop lret cltd jl sub stos sub mov sub aas sarb mov push jmp add mov push aaa nop pop sarl mov mov daa rcr imulb loop incb leave popf xchg fcoms sub (bad) mov or adc sbb rcll into sbb xor stc fisttp bound jns imul pop in (bad) dec dec out clc ja negb fld dec divb ljmp int3 dec mov mov cmc (bad) stos cmpsl (bad) fistl fstpl adc bound or mov loope cmpsw xorb rcrl adc pop aad jnp (bad) fstpl xlat or jno cmp fs stos cmp pop sbb push cld add or xor or (bad) shlb dec outsl xchg stos xor and pop stc mov xor rorl out pop jne cmpsl cld and popa (bad) dec lcall stc pop rorl mov imul loopne or imulb xchg or ret mov pop mov cmp xor cli scas repz push dec sbb dec sbb lcall shr movsw xchg stos inc test add nop and dec mov dec ror decb adc cmp mov cltd clc ret notl rorl pop or in xchg cmpsl out ss dec inc add pop hlt cmpsb call push xor (bad) xchg pop add xchg int3 xchg nop (bad) pop add mov (bad) sti icebp lcall adc ljmp jg inc clc mov dec inc movsl dec lods mov arpl repnz inc mov mov add hlt xor icebp scas out daa push xchg jbe stc ljmp test pop jmp stc push call mov shll push decl add rorb scas lret xor xlat pop jl pop push jno lahf push inc js push jmp es iret mov xchg icebp (bad) xchg mov rcl jmp pop pop cwtl pushf icebp stos push xlat adc inc mov test cmpsl (bad) pop test in insb dec ljmp mov lret mov mov data16 ret dec repnz sub out ret xchg mov mov fidivl cmp (bad) mov mov jns movsl repz sub loop mov mov int3 mov ds fldcw adc mov clc push and sub xchg (bad) int cmp hlt jb shr rorl push xor mov dec xchg pop out jb (bad) (bad) dec pop push sub ret push add xchg and jmp adc sbb dec pop pushw or in and divl pop lock int3 jb rol push and pop ret ret sub (bad) fsubs or mov mov mov mov sub (bad) (bad) mov test mov mov out mov repnz (bad) aam jo (bad) mov sbb pop pop andb out inc insb pop and mov mov (bad) mov out xor add add inc fist lods or shrl xor lock push daa xor inc pop push xor mov nop mov fucomi lods fsubs bnd xor div es lds mov dec scas lds in rorb rol daa pop test pop or pop lds inc testb xchg ret scas je adc sub sub js add mov popa shrb (bad) cmp jae or syscall lcall popf push cmp fnop xlat or sub orl lret mov mov sti out pop mov test loopne aad pusha xchg jnp and add shrl out push adc loop dec es (bad) insl in out add mov cmp into xor push ret xchg ret clc (bad) xchg fldenv mov jno dec std xor dec and and push fs or dec inc sub jnp nop loop pushf and jmp idivb pop push cmc sti dec daa inc sbb mov fidivr cmc lahf inc iret cwtl enter sub dec test add cmp mov scas loop (bad) mov ret xor mov imul sub pop jne dec xchg mov cmpsl push xchg (bad) je std aas ret or aad push push push fmull sti mov pop jmp xlat pop jnp jne imul cmp rol add (bad) mov xchg cwtl scas and xchg pop xchg sub loope pand popf xchg push in das stos sub mov dec popf jl mov leave (bad) icebp fnstcw bound call test sbbb jno cmp or dec push fs cld movsb lds sbb fnstcw sub jecxz pop mov (bad) fnstenv add cmp push or inc cmc push push inc scas mov sahf cmp mov xchg call sub popa sbb add cs and cwtl sub or popf push cmp jmp in mov mov aaa mov jno sub (bad) pop cli lret lret mov add sub sub (bad) xor and scas andl cltd add incl ljmp shrb or repz leave (bad) and mov push outsb sub sbb xor mov clc leave jnp mov mov add sbb movsb scas jmp rcrl jmp stos addr16 inc sub adc xlat mov add sbb (bad) mov je mov std dec pop stos mov adc jg pop cmp dec in inc cmpsl pushf inc inc dec inc sub cmpsl fsts adc pop mov mov fldt ds mulb (bad) (bad) sub enter and mov nop jb (bad) in mov cmp pop mov sub add jmp and add aaa adc pop test sub pop enter cmc leave sub aaa es mov jmp fcomps mov pop and push sub ljmp mov fs fld1 adc push lods jmp and jb out lret cwtl lods rorl cs sub (bad) popf das push daa ss xchg into lds ret loop andl cmp pushl mov sub and add mov mov add sbb in jp cmpsb and sub popa out pushl outsl in cmp test enter dec adc adc xor mov and xchg push and lahf test xor jmp andl cmpsl jbe jecxz dec and jne mov pop clc (bad) lret xor pop jmp xor repz cmp lret sub mov mov bound test std and mov adc jmp sti sub fisttpl mov das xor xor jp test mov inc sub and pop add dec and (bad) or inc xchg das flds dec (bad) dec dec ret xor cmp inc scas es (bad) adc aad inc lods lds movzbl inc (bad) mov fimull mov in xor adc push adc mov nop jno sub sub sbb movsl mov and fs xor jne addb in mov ret inc mov adc or stos (bad) popf in insb xchg dec mov lcall mov outsl mov (bad) or or adcb (bad) pop lds adc stos mov pop mov sarl loope mov cmp mov repnz aaa int popf rorb mov das lds xor mov out jnp push mov cmp add or mov ret jbe out das lahf pop out mov sub cmp mov or repz add mov call into imul pop or push sti out mov das fcomi aas lods jp rep sub adc mov scas repz cmp and scas lret dec dec xor (bad) jae scas sub dec lods and lahf pop mov es in and daa adc popf mov xchg (bad) pop add add xchg aad dec imul lds and jmp xchg (bad) jbe (bad) mov cltd scas fiadd ja dec pop neg mov mov popf push add jg inc fnstcw test test xchg je test in ret sub adc sar sub jbe xchg enter ljmp inc icebp mov (bad) jns lret xor leave sub xchg fnstenv pop pop jecxz sub mov push mov mov shlb sub sub and add (bad) notl out push adc pop test pop push push lods dec or notl notl inc cmp div lock rcr lods mov scas dec imul jo and mov out (bad) ljmp sub cwtl icebp adc push dec sub jb jmp stc pop push loop (bad) sbb sti push loop pop (bad) jne jmp sub leave sub sbb sub aad dec pop addb in mov cmc push imul mov gs mov mov lahf es imul sub out jl pop or adc sub mov dec mov in in and push cmp add divb pop xor mov pop icebp (bad) lods ljmp divl les loope cmp clc mov shll out push (bad) mull dec mov xor out cmp out or adc cwtl add pop mov fs xor cltd (bad) rclb (bad) pop cli lret push mov rorl mov nop rorl (bad) mov and (bad) adc insl cmp jmp lods pop pop adc cwtl or push xor sub and push std push mov in pop test mov push (bad) mov sub mov repz test rcl inc mov fcmovnbe outsb add invd and or mov in out loope dec sbb cmp mov ret loope insb jbe adc add jp subl adc loope xor repz leave xchg xchg ret mov shrb add mov push adc popa fimull sub xchg mov hlt out mov dec adcl dec cwtl je ljmp popa test jle (bad) mov sahf jb xchg pop daa out cmp pop xchg mov mov sar xor ror fsubrs pushf (bad) std test (bad) scas aaa add xor xlat imull or sarb xor pop mov xor lret dec jns ljmp cli jge mov stc jle imul or dec iret mov jp xchg movsl decl mov and jg and shlb scas fsts xor (bad) xchg mov (bad) mov mov dec dec mov sub mov sbb cwtl jge jmp mov xor sub pop sti xor fsts jbe popf fildll or negb lock cli loopne lahf jne ret mov movl sub jecxz inc add sbb mov pop and add iret adc dec pop mov gs mov or loop dec xlat and pop or insb xorb std fcmove (bad) push out jo add mov inc call lock in sbb inc cld jns lds ret sub sarb repnz rclb mov xor mov pop and mov push fnstenv or pop fcoms outsl fs xchg dec jne icebp mov add sbb xor hlt jmp fimul pushf adc dec mov (bad) jb emms sbb inc or cmp cmp stos lret fisubr idivb sub daa cmp inc mov imul mov jnp push (bad) ficompl mov stos mov ret inc data16 xlat xor hlt std and fdecstp cld cmpsb mov sub call jl jno or push push pop repz xor stc lods mov adc jno or ljmp popf xchg push out popf ret js mov pop outsl mov jne hlt imul adc mov lret into pop (bad) mov inc aaa popf (bad) fmuls idiv jecxz pop (bad) adc and lods in aaa xchg movsb push or fstps inc jecxz roll mov push pop fsubr sbb inc dec mov sbb (bad) xchg shrb or (bad) mov fnstenv or sar mov xchg sub xchg test xor mov mov dec sti popa mov fdivrs and pop cmp les clc test (bad) cmc dec lret xor and loopne shll push inc dec and adc enter sahf mov push nop jl in rcrl xchg add and and ljmp lret icebp and loope decb push leave pop xchg fldenv fdivrl into mov mov xor mov lret mov sub (bad) (bad) outsw push and je out and jne and out sbb xchg pop sub int xchg sub scas fstl popa cli repnz xor push lcall adc arpl rol sbb mov dec add xor xchg pop notb imul lcall xchg das xor mov add inc xor es addr16 test and aaa jnp lock xchg jno imul mov in mov ja lret scas dec pop dec mov dec jmp push or jno leave push out jg sahf mov mov sub xchg mov adc push sbb or in lahf icebp add mov repz inc and xchg ret dec scas cltd ret js cmp and ja pop jmp and cmp sbb pop push mov pop and mov cmpb jmp popf out aaa mov into lods fs ja les sub cld sti (bad) call push sti loope loop out scas dec popa mov dec adc xchg mov out jno fs aaa leave and inc and pop xor popf hlt (bad) pop mov (bad) cli lea flds (bad) and lcall into jle rcrb mov outsl ficom lock jo push sti xchg imul or in daa push pop dec leave lea sub mov mov and out sub (bad) mov scas cmpsl loop out jge mov mov out das cltd add sub or mov sarb clts dec inc xchg loop or xor (bad) xchg leave mov jle or scas lds fldcw mov (bad) jo pop cli mov (bad) popf in push mov lods insl mov dec xor ret fcmovnu push fist out jb jmp add fwait push (bad) xor mov sub fmuls xor loop out inc and negl pop inc and aad and lret fisttpl rcrl mov mov and jle lds cli lret subl inc cmp pushf cld imul mul js cmp jne push add push or out fs clc std (bad) outsl xor and fs out mov sub xorb out cmpsb and mov jecxz mov push test leave jl das xor mov add mov mov pop lret idiv ret xor xlat jne adc add and mov (bad) jns xchg mov fstps jne xchg mov add cmpsl xlat lds dec cmpsl xchg pop mov fldenv lret jne mov mov xor repz (bad) mov push add push xchg je jecxz pop add jmp push stc loop (bad) mov out cld jno mov jbe dec rcl clc or cld orb lds ret outsl in pop push xchg xor sub in das call mov and xor sbb xchg out mov sub mov inc in (bad) (bad) or and mov iret clc jmp push fisttpl rep lret bound repz pop lahf pop or lods dec pop cmp jmp dec dec push xor mov pop mov ret data16 (bad) mov jne into lret daa push push pop xchg add hlt pop lcall or cmp push add testl mov sub pop fsubl xchg nop fs mov daa out jg hlt and inc roll decl or xor fisttp aad fsubrl loop inc adc jp or shrl xor into jge lar fisubrl (bad) pop test dec in push mov xor das enter (bad) outsb ret (bad) dec pop andl cmp mov movsb adc mov leave sahf mov add xor mov pop lds mov xchg cs (bad) jno outsb lret mov mov data16 pop xor das or mov add and sub inc xlat in aam dec or loop push subl loope insb cltd movsb sti bound mov lods jb mov pop ljmp loope aad cmc loope sub mov dec cld or stc push pop out ss and sub mov data16 ret cld addr16 sti sub pop sbb les fisubr pop inc push push and fild mov xchg xchg mov jno add cld inc dec mov dec arpl xor lcall and lock ljmp adc or push pop in dec xchg ljmp ss pop mov loop leave (bad) sbb mov dec imul mov imul push and gs das sbb xlat scas cwtl (bad) andl call leave movsb (bad) mov push or movl pop out sub outsl push sti scas fs loopne out and lds jnp push ljmp aam dec mov mov pop and push xchg cmpsl sbb mov dec (bad) out xor iret pop push and das dec (bad) das ret sub add adc stc dec add scas xor out jo nop test xchg jge into and enter daa rcrb (bad) cmp lret test xchg scas out (bad) scas fbstp pop out or mov lret dec pop cmp test push out dec mov xchg push adc and cmpsl or into or push loope out cmp sub xchg mov push adc jae fisttpll (bad) mov adc das ret and pop sti out add or mov cwtl ja das or dec jbe jl add insb js lret sub rcrb jl ret cmpsl fdivs ret xchg adc stos adc mov add es js (bad) test and mov stos cmp sub mov xor xor roll sub jl iret and incb fldcw lret (bad) in insl pop ljmp sub lret std inc inc mov (bad) fisubrl jae mov mov xchg xor (bad) mov (bad) jne add (bad) in dec jmp mov test inc and popf leave add sub or adc daa or ja into fidivr test icebp push out test mov jmp pop lret into shll and pop ret mov inc call stos xor lods es mov cmp push push ret ds jge add imul ret and repnz insb popa icebp add jmp jle popf movsl mov sub mov repz xchg and xor lret xor fs outsb fisttpl dec lods jns mov xchg mov add out dec ljmp pop jns jge fstl sbb (bad) mov cmp and or xchg mov push test sub adc mov cmpsl or fldcw addr16 add (bad) or out ret cmp jns mov add gs ljmp fist jp call out in cmpsl dec negl cmp xor je out hlt add addr16 pop mov xor jo sub cld push push xlat pop dec adc xor mov test call lods call jmp lds sub mov js (bad) pop push sub mov adc xchg lret adc xchg loop pop aas leave ljmp out adc and mov subb sbb std xchg xchg jge pop out pop repz cmp push pop push mov push pop push insb dec adc push jge and push outsb jg jns jle sub inc in cli popa xor shrl mov mov negb xchg xchg jne lds push (bad) out out out loopne add cltd pop repz or adc and add mov dec sbbb pop xchg decl popa xchg inc repnz mov leave inc pop mov or arpl cmpsb mov xor lret or sub pop inc ficompl loopne dec adc mov mov mov mov test repz pop in pop add mov das decb xchg xor pushf jmp addl outsl pop (bad) jb sub push lock pop pop test popf mov mov sbb push inc imul lods jge jne not xor cld xor sub popf ret (bad) loopne pop lods test xlat dec scas pushf enter out adc sub add cmpsl loop or ja jne push mov stc push (bad) pop cwtl icebp xchg or stos xchg mov movsl movsb jmp shlb dec mov cmp movsb les adc (bad) jge les push mov mov loope or lds inc dec scas mov lret sbb xchg (bad) es or imull mov inc xchg xor push push call int3 mov xchg in fwait xchg call shlb mov adc cmp adc xchg xchg xchg mov int inc sub pop movsl imul jno inc xor stc lret cwtl mov repnz and or stc repnz mov pop sub std jmp or pop imul movsl cmp pop dec rclb lret sub mov sub (bad) test add adc jmp sbb notb jle pop ljmp aad jmp inc mov inc dec jge mov test (bad) notl mov cmp add push add xchg mov mov (bad) scas and xchg cli std dec sub and mov or popf mov mov cs mov cmc sub lea and xor aad xchg decl out dec sbb mov sub dec shrb and pop cmp xlat rcrl dec iret dec adc jb xor inc pop das test jns clc cld (bad) test dec lea lods in aaa movsb cli xchg gs jbe cmp sbb test jg aas jbe imul ljmp sub xor gs loop pop sub mov inc xor das imul bound lret loop mov aam bound (bad) cmc rorl cmp (bad) xlat xchg push dec xor dec and mov lea push js test xor (bad) pop sub add orl mov jno lods lods mov cltd xchg in pop sarl xor add (bad) adc ljmp dec sbb cmpsb imul mov clc or jb xlat mov inc add cmpsl negl lret out add xor mov sub ljmp xor adc push cmp mov mov leave and xor dec out pop xchg lret xchg push leave push mov roll xlat xor xchg fildl (bad) imul jp jge fcmovnu cmpsl in rcrl into push pop mov ljmp ljmp jns dec leave out push cltd sarl loopne mov (bad) xchg lcall daa (bad) dec xchg sbb in jg or pusha xor sbb fsubrs mov jmp inc cmp xor pop sub adc mov test mov (bad) or mov jle pop add (bad) mov or iret or repz xor jle jnp nop lods push in bound or mov push lahf push fldenv test (bad) jnp pop mov std test ss addr16 sbb jo cltd mov xchg pop das mov pop sub mov sub loop push jecxz mov (bad) imul mov enter mov and daa pop xchg mov add icebp inc jmp mov mov push inc push or fwait xor jg test lahf loope aaa sub pop pop mov das mov dec and mov xchg scas pop sti mov out jne loope sbb mov jnp (bad) dec xor lock add sub dec call cmp pop lods lods movsb loop sub sbb scas add (bad) cmpsb or push out mov dec jmp lret fdiv std out sub cmp insb (bad) mov test sti mov mov and sub xchg xor push xlat mov clc fimul repz jecxz add mov out jne test jmp sub or dec cmpsl mov test icebp mov cmp mov mov (bad) movzbl mov mov mov sub stc into test add cli mov fdiv xor sbb adc ret inc adc xchg ror pop add repnz fs sub cli or sti out and pop pop and in xchg cwtl adc mov xchg rorl sub in cmp call cs mov sti pop adc xchg xor dec jb mov and (bad) cld push out dec lret cld iret cmp dec push mov pop ljmp push mov dec sub and xor or or mov (bad) lret jno inc xor cmpsb adc adc add fldcw pop or adc fsts and dec push pop jmp push mov daa or mov xchg mov popf xchg (bad) out mov andb mov xor aas mov dec out sub fidivrl and and dec std sub cs sub cmp jbe and sub clc (bad) push adc outsb sub (bad) aas leave fisubr (bad) or ljmp sub mov jecxz das je push iret lods ds fst stos mov mov push gs and pop mov clc add fs mov sbb push push mov ljmp loope pop cmp push dec mov dec cmp inc lahf mov mov inc adc shr outsb mov leave inc xor mov push inc leave and or jno lret and adc ja inc das mov push inc in insl fisttpll cwtl leave xchg push xor sti gs sti mov dec ljmp repnz pop mov sbb or adc or add iret incl jo imul add jg cs inc in (bad) stos xacquire (bad) push pop outsl sub rcrl push xor xchg sti rol push adc mov mov mov jnp sub or push (bad) pop sti in in mov dec push bound outsl nop shl pop sub je pop sub mov cmpsl push icebp ret fxch dec jge pop lock sub and or inc mov jb pop das imull adc xchg jne mov js add adc lock mov mov cs ficoml jge jbe add pop pop jbe int outsb jno and sub dec mov pop pusha loop pop and ret (bad) inc xchg pop push (bad) cli push sub lea imull cld (bad) mov test mov add mov mov cld and inc rorl push sub ja fcmovnu lahf dec loop mov subb mov in sti mov adc in aad data16 pop std mov mov mov xchg or mov mov push push jo inc or push loop dec ljmp xchg xchg inc sub daa ret (bad) outsb leave test and roll hlt movsl scas xor out sub sarl jecxz cli and dec ret scas lret lods sub or xor xor pushl int ret sub xchg rcl pop lret and leave pop icebp push dec jo and and and loop mov xchg loop pop or clc jae fcmovb jp sub pop dec lret sub jl test popf mov mov jmp int3 sub cmp pop xchg nop cli xchg mov cmpsb push push aam dec fsubp fdivs cmp ljmp xchg scas mull and add mov jg hlt int3 mov push or or cs mov add push arpl int3 js cmp dec fcomps jmp xor test mov repz mov mov cltd dec test and xchg mov add (bad) xor or popf shlb xchg mov mulb xchg mov aad pushf push sbb xchg aad cs sub (bad) lcall out in movsl fisubr cmpsl sub mov push adc xchg clc sti sti cli (bad) jge cltd pop mov push sub and outsl negl popa and mov leave push push outsb jb sbb add int ss fdivp dec pushf lahf lcall sub pop std dec inc pop sub cvtps2pi ljmp cmc jmp mov popf pop loope xor adc mov les sti or dec and (bad) aad jle out pushl pusha jl into and insl xchg jmp cmpsl mov mulb enter xchg inc and dec ljmp jbe leave jg (bad) nop gs inc jae ds sub movsl xor push xorb mov and cmp and or (bad) int3 faddl sahf jle lcall xchg pop push ret pop ljmp int roll mov mov decb adc xor sub push push scas inc lret ja add mov hlt dec mov jnp gs mov stos push and sbb out push adc mov ja lret push sub pop ljmp add sub mov (bad) fnstsw or pop jmp sub mov jecxz cltd inc jg push jno movsb imul sti pop ljmp jmp int3 lret sbb lods (bad) scas adc dec xchg jne mov clc stos mov sbb add push mov jmp mov xor pusha mov sub sub dec fstpl mov (bad) (bad) sti je out clc mov loope cmp mov dec int sub mov pop mov shrl pop cwtl push jmp inc lahf and xor out scas repz leave push into inc sub cmc lcall inc jno add and std xlat dec scas lea push mov mov push and cmpsl out or data16 xchg adc jle imul and pushl aam imul mov sub das inc adc mov loope fstp inc push ret sub sub fimull xchg cmpsb imul mov xlat loope out mov sub outsb ficom push cmp pop repnz mov popa test push pop loop (bad) dec cltd and rcrl into add xchg jmp sti add repnz mov jmp imul and push jp mov mov leave rcrb pop pop bound sub (bad) stos jmp push loopne (bad) sub mov push jnp jb repz push mov ficom sub inc or xor sarl iret fisttpl pop call out and sbb jns dec mov sub mov (bad) pop xchg mov sbb pop (bad) sub jb lock repnz clc pop mov cli add fs clc adc stos or ret (bad) mov push sub dec loop mov sbb dec jb cmpsb mov push or fs mov and lahf push test decl das mov push lods sub lahf mov sahf lods cld movsb es sbb popf shl mov xor cmp dec inc stos dec xor mov sub xor sbb mov cmpsb mov jecxz pop ret jb add out outsb out jns xor fdivr mov jg mov cmp mov mov mov hlt or mull pop (bad) gs (bad) idivl idivl sarb mov scas cmpsl sub ret push push add or mov sbb push mov or pop sub insb notl pop call jmp lods jmp mulps mov movb shl movsb ljmp pop loop lock jle sbb and lret lcall dec testb out (bad) dec mov and pop cmp icebp xor sub iret push sub (bad) test (bad) scas lea push cmpsl pop (bad) dec out pop (bad) or das testb repnz mov jp mov inc ret fmull testl popf cwtl insl sub scas movsl dec (bad) and push negl popf imul push (bad) pushf andl in sar add es adc fstps ljmp inc sub rcrb (bad) or gs pop out (bad) (bad) je pusha xor add sti or jmp xchg out adc pop out cld mov in jmp sub or jmp sub js mov lret repz sbb (bad) mov ret lock out in mov repz mov sub sbb das icebp pop test sub mov cmp and into push xchg ss out mov pop cmpsb pop add inc (bad) push dec stos out and and mov push push mov loopne xchg sub rcrl jge stc jge cli loop and mov xlat in mov add push insb aad dec pop xchg ret sub pop mov xchg mov add shll hlt cwtl gs xor cmp push and or xlat popa push out push (bad) (bad) mov mov add or and add decl adc xor out inc popf movsl jge sbb jl mov mov das push leave roll ret test mov inc pop cmp cmp testl push int3 stos and sub mov and sub (bad) pop mov cmp cltd pushf push rcrl lock add leave test xchg mov lds shrl (bad) sbb xlat gs or add (bad) mov fist ljmp mov pop icebp mov mov dec iret sub fistpll rorb mov or jmp mov sarb stc ret push mov je std jae scas push xor in mov xor out mov in sub mov push (bad) out sub or jno jb mov scas inc sub aad je (bad) (bad) fcomps lret mov ljmp mov aad hlt leave pop iret and jle icebp add popf fbstp sarb (bad) fstl popf push pop aaa push es sahf call inc pop aaa bound repnz out xor mov push mov inc pop into xchg fisubr xchg cmc push jnp lods (bad) sub int lods or xchg push pop out repz popf incl push mov icebp inc out xlat push scas ljmp mov in jmp ret out push cmp comiss arpl or shlb fdivl (bad) out sub xlat and cs arpl mov lods lods (bad) pop into jae imull push stc leave jns imul rol rcr xlat jae and or fisttp pop pop ss out iret jge mov imul cli fsubl jmp out int push outsl push subl add test mov (bad) icebp mov out mov out or data16 lods or or popf pop xchg lods stc push and dec add xlat fs js mov popf xor mov (bad) xlat jp add dec push jno daa (bad) pop or add int3 and mov ret or mov lret fs dec jecxz fucomp sub int jmp hlt sub fst cli pushf xchg dec pop fsubs ret sub cmp jo mov mov xchg mov adc lods addr16 shrb fisubl lret adc rep icebp jmp mov push (bad) js or adc cmp mov sub loopne call (bad) xchg stos dec jge test repnz cmp sub pop clc mov test shll xor and addr16 xor push ret scas inc sahf adc (bad) inc pop lods js loopne sbb mov cli lods jg movsl (bad) cs sub pusha add mov push fdivr in popf push ds sub imulb or sub push sbb pop push pop mov mov inc loop test mov dec fstpl jb lret jmp daa in das jge xchg pop lret mov popf fiadd arpl inc or dec cwtl out sub or repz cmp sub mov cwtl push in adc push mov add sub roll pop or jle pusha or mov xchg mov lahf sub xlat jae es add xor xchg jl pop add mov and push pop xlat xchg aas (bad) jb fidivr iret add cwtl add dec pop pusha test sub sarl cmp xchg iret imull and icebp rorl xchg xor push add pusha jecxz movzwl test daa fildl adc mov call pushf ss and mov pop xchg sub push stos push jg pop xchg push pop push pop inc lret ret call xchg xor ret sub imul xchg in dec ljmp mov cs jns movsl call popf mov pop and iret jns call subl xchg adc push push fist divl dec iret mov mov push xor fisttpll cmpsb aad pushf dec stc decb daa pop jmp cld loopne and jne or lds clc int3 fdivs xor test subl add fdivrs imulb int push ss or or das out jb xor mov push stos daa or insb into and inc lahf jle sub stc xor in mov imul xchg jmp mov pushf mov mov ljmp push test and mov pop in imul leave dec xor inc test xchg das mov mov push jno dec fsubl leave pop cld push bound pop ret clc inc mov clc sub divl xchg and cli lods test call ds flds add jecxz stos lret cld ljmp sti lahf pop push imul mov and xor int or xchg adc mov dec repz clc xor ret imul inc dec push mov mov adc sub ja mov add jl out inc shrl fsubs daa cmpsl push test dec (bad) scas sub push (bad) not je jbe cli add push mov dec into jecxz sbb (bad) jae sub adc faddp or push fstpl dec lods ss (bad) fstpt xchg ficoml jbe in daa rcl and test add stos dec js fisubrl in push jne mull aas or mov fs out mov push xchg leave aaa sub cmp repz icebp jmp xlat pop shrl inc mov in xor out dec test cmp rorl mov popf jle push xorb mov dec (bad) adc cli imul xlat movsl clc jmp add ret jno scas add into add out or add jge pusha adc out sbb sub add fldcw and hlt pop cmc mov cmc mov lcall ret mov insl dec lds jmp fs mov mov insl mov jae mov sti or mov sbb xor out mov jb aas xor int3 mov daa ja push mov sub adc daa xor jbe ret or cli rcrb add lock jno scas adc add xchg jnp scas das fs loopne adc mov mov xor adc and popf pop inc jo rclb repnz sub fsubr or mov nop xor dec add jmp inc pop lds or cmp mov int push mov fs sub (bad) pop out sub xchg cli negl push sub cld jg out cltd hlt cmp jle out mov out jns das and jne push xlat sbb cli mov push insb push (bad) xchg xchg sub ljmp leave nop xor rcrl mov mov int outsl lods lcall push dec test mov push leave jl mov push les out xchg mull sub push fcoml rcll stc adc xlat xor out pushf out jb dec (bad) inc sub or pop xor call inc decb lods rcrl xor popa push ror push (bad) xor repnz cmp xor and sub and movsl into jg (bad) sub sub xchg mov sar mov adc mov (bad) mov scas xor (bad) nop cmp (bad) jmp and clc out fidiv pop shll jb lahf (bad) xchg fsubr ja and sub out lret cmp sbb bound iret mov xor mov inc (bad) pop (bad) push jne rorl aam mov idivl in ds sahf ret rcr inc mov lret jmp out mov xchg ss inc popf cwtl jg fisubrl xor sbb sbb dec xor decl mov pushf adc fwait push cmpsl and jecxz jg cld sub mov sub es lret add sbb push lret add and push mov stos data16 test jnp lock stos xor mov mov scas jp push in daa je dec push xor daa or add test pop cmpsb push lods xor mov push dec sbb iret sub out imul popf jne add sub dec gs mov and jl cmpsl aad mov mov mov xchg mov mov (bad) and dec and divl dec (bad) mov add and fcmovnb xor cltd pop and in push jg jge cmp xchg rcll ja leave pop add aad rclb das xchg rorl jecxz xchg stos popa mov add out pop mov sub fcoms jmp or or or pop sub movsb push xchg loop or cmp dec or mov mov sub fnstcw cltd rcrb jmp shrb adc sahf les xlat scas pushw rclb push jb je jno cmp js xor xor (bad) fmul sbb scas sub mov dec jmp sub fmuls add aas inc and pop jl dec mov ja or cmc cs pop xor adc lods fiaddl sub xor mov inc jae int in add or mov or and loop shl or repnz fwait mov jmp addr16 out dec and add push clc call add shrb (bad) into pop cld mulb sub repnz sarb xchg sti mov xchg cli jmp add fs xor ds push jge adc popf mov dec hlt out xor sarb aam insl adc into sub leave (bad) cmc cmp aas or inc repz in out xchg test add cmp pop mov and sub xor outsl leave inc xchg mov ds dec mov lret mov mov inc lcall out popa sbb and sbb or push lret adc icebp mov adc fnsave ret cltd (bad) mov js add lret inc add mov xchg dec sub lock notb xor cld dec (bad) xor sub (bad) fldcw mov adc and out das lret fistp loopne ss cmp mov shrl sub in or mov mov jae movsl jne nop mov clc ret (bad) xor out ja enter je push dec and sub out jl push call mov xor outsb leave or les fldz fs adc fisubr xor pop insb xchg sub icebp mov push lret das sbb ja stc (bad) ror test xchg pop adc and imul (bad) scas dec xor out push js loopne cmpsb xchg dec fs and jb adc and push add mov push jmp movsb adc and cltd xchg xor data16 or sbb mov mov add push push pop das mov data16 lahf fcmovnu cmpsl jnp mov cmp cmp out dec xlat out xchg cmc test loop mov aad imul pop mov sub cs xor iret ja xchg mov inc sub mov sub push mov imul dec popf sub sub and push sub mov lds xor mov call xchg gs push mov pop inc dec orl imul add repnz add scas (bad) movsb xchg loope mov add pop xor mov sub push sbb mov out js mov or or fbstp adc stc sarb stos jo daa adc sub leave (bad) mov pop cmp push cmpsb mov repz jge mov pop dec mov xor xchg adc xchg insb cmp into and xchg pop sub aaa jmp pop es xchg mov jge mov call pop pop pusha mov imul (bad) mov xchg add xor xchg push scas lds daa jg test push add test sub lods jno xor scas push and sbb cmp lds adc sub adc mov iret pop sub int3 in cltd out repnz or ds add mov inc fwait in sub fwait ret fistpll and dec xchg iret jne fstpl pop leave or pop adc dec divl pop xor gs mov and or fidivr addl daa jecxz enter sarb cs std shrl push in or notb loope addr16 pop xor and jmp lahf adc mov pop mov mov movsb pop pop mov mov js or cmp fdivrp xor ret adc mov sub dec sbb popf int3 stc dec ljmp repnz add adc lcall loope outsb dec lods or scas push mov add sbb mov sbb mov dec and js fdivrs xor and lret sub sarb insb mov repnz xchg scas mov lret lret pop xchg cli xor and in xchg or xor lret popa test aaa movl push flds imul cmp mov daa mov or int3 fisttp stos sub cmp sub pop out lret push (bad) insb out dec mov or xlat fimull push cmpl sub fsts ds jecxz sub cmp in lods sarb push xor xchg push lods pop adc sub xchg mull stc push bound cmp add pop loop shll xchg (bad) or mov jmp mov dec stos xor adc jnp add cmp push mov ds fstps add lcall das lret push mov jbe (bad) mov popf lret stc nop dec mov test mov sub rcr add push or out inc scas dec test scas faddl pushf and jmp pusha cmc repnz dec cwtl mov dec add movsb adc repnz popa push iret inc and movsb xchg or mov pop gs sarl mov mov loop or mov inc sub rcr xchg lret ss and in scas jg xor stc (bad) mov mov cs and scas pandn aad (bad) mov sub add rorl repz into mov and sbb or xor enter or xchg jle jmp test (bad) fcomps xchg ja imul push loope fidivr int popa push sub lret ret frstor and scas sub das pop xchg stos xchg gs adc mov pop jecxz and and fcoml mov adc mov lret mov das sti ja lods cli push test div sbb xchg push pushf cli cld jmp cmp leave das cli sub iret shr loope cmc dec mov sti leave cli sub mov leave cwtl xor and cmp or cmp cmpsb lret push push cmpsb aam rclb adc hlt scas cmpsb cwtl pop xor stos mov out stos lret ret movsb pop cmpsb xor icebp sarb inc or (bad) jae not sbb test cmp (bad) je jecxz dec lret call mov or add mov inc sub xchg sbb jb cmp sub xchg and sub or adc pop repz push pop das mov pop pop xor lock push jmp add cmp push int3 pop daa into xor add mov jne pop daa push pop outsl sbb (bad) jo or adc ret mov jmp mov mov imul cli mov push sbb icebp add sub ss daa cli jge mov sbb sub sub outsb sub mov push outsl mov lds add lds mov dec adc in sub mov call mov jbe cmp hlt jecxz mov jg lret xor lret loop xchg jns mov clc pop loope repnz mov push and mov int3 dec add insl add cld mov mov cmp (bad) nop pop jo push mov es movsb leave das mov negl (bad) loop inc push iret jl movsl test xchg adc mov inc aam push (bad) mov xor mov imul sub popa pop xor pop xor xor jmp push mov call clc pop iret mov repz ja xlat xor bnd fidivrl ljmp and or xor out adc pop sbb mov mov test fwait sub movsl adc mov push adc movsl sahf adc or mov call push pop aad jecxz inc stos xor stos inc gs test movsl cwtl mov pop xor jge notl sti ret and ds aam lods mov mov and xchg push cmc adc (bad) les adc or std mov adc or notb out das (bad) icebp xlat imul pop push (bad) mov js mov data16 mov push xor daa xor aam leave divb fmull xor push xchg dec xchg sub daa cwtl push xor popf cwtl mov fidiv sub je add ret mov pop addr16 sub xor and loopne ret adc cmp sbb bound incl sbb jnp test or pusha cld and mov push or xchg ret mov popf rcr xchg mov subl lret and dec mov gs adc test jecxz lods pop lret call ss mov rolb pop mov jb call xor cmp jns sub shrl jmp mov das jg flds icebp jg pushf ds jb pop jb jmp pushf and cmp mov es pop mov ret pusha insl inc leave shrb mov rcr jle cmp cmc in sub pop rcl leave cli aaa cs mov adc dec dec les repz insb mov in cmp fsts cwtl hlt jmp add xchg sti jg adc (bad) daa hlt test movsl jmp jle ljmp sub mov sub add sub jno xchg sbb mov das iret sbb call in and push xor stc push test rolb jle push out dec push cmp adc insb (bad) xor rcrl push addr16 cli fs mov jl ficoml jmp jnp or push push jl ret mov mov movl enter (bad) bound fmulp add les call or (bad) in pop sbb pop dec std test aad sti fmull leave daa sub inc mov mov or pop mov sub jo xor xchg inc add jle mov adc (bad) stos fcomps push jmp pop jmp das mov jnp or cmp fucomp lods add push sub inc xor popf ljmp mov sub shrb ret push aam in mov add dec and pop cli push inc hlt adc ljmp ficomp pop (bad) into xchg dec and fimull xlat in andb stos sub mov jne xchg lods in mov outsb mov int3 incb imul push stos lock daa sub jl jae and pushf loop ret adc (bad) mov cmpsl jle adc dec call repnz push hlt adc push fnsave or iret divl xchg sub out xchg negl icebp andb xor sub jg mov or sbb adc sub sub ror fstpt addr16 add leave xchg iret lods add xchg mov ds and and outsl shrb mov dec sub or add mov adc xchg pop push cmp (bad) mov mov out and fimul fildll mov push sub addr16 adc fldt fs out xor testl and mov sub pop push cmp jno dec xor add push push or add test pop fnop mov rcr gs out fcompl jo idivl jbe call clc jno cmpsl ret jmp out and or sub xchg shll push jmp inc push push (bad) out lret xchg mov in in lret popf test adc mov das pushf cmp push inc jnp daa notb dec mov add fwait dec mov dec sar or adc shrb je xor xor dec aam les mov sub stos cmpsb jno mov cmc xchg and cmp xchg sub jo out xchg clc sbb lret add jmp or ljmp mov fs int3 cwtl xor cmpsb es daa iret xlat dec push mov xor stos mov adc inc mov ljmp add pop (bad) sar xor cmp (bad) lds or jle push cmp dec (bad) ljmp std outsb rcrl push xor dec dec push negl and fcomp and or mov add pop cld xchg ret dec sahf lgs out mov cmp enter jg add adc ret mov xchg mov pop je cwtl jae or mov push cli mov jmp das add xor and xchg mov sbb dec scas jge dec shrl xchg or rorb ljmp sahf das jl daa push add xlat lock loop adc setbe std imul add dec movsl dec add sub add ror cmc lds shlb and sbb addr16 std lds loope mov lret mov scas push daa jecxz mov and cltd mov pop imul insb xor (bad) or dec das into idivl movsl fild icebp cmpsl in adc sub fldcw popa jle stos imul ficompl fdiv imul repnz push xchg repz nop icebp jle int3 inc cwtl sub cltd adc test push hlt ret add push mov adc mov ljmp pop adc fisubr jmp fdivr adc or and mulb fidiv pop pop sbb adcl jb inc mov int3 negb jb dec stos cmp jmp pop es fcmovnbe test add mov cmp sbb dec stos and and imul mov push out adc lock lods and out pop (bad) push ret fbstp jle leave outsb adc rorl fisttpll xor dec sbb fldt rcrb repnz or jbe cmp outsl (bad) push mov shlb jmp jp mov add push mov dec popf aam fldl xor inc dec sub mov mov leave add pop ret pop dec ss mul int xor test mov nop and imul cmp lods ficoml dec pop fnstsw inc xlat xchg out out fprem1 insb cmc mov jne or mov ret sub mov xchg mov jmp test cmpsb mov das stos cmp out mov jno and clc icebp mov or decb push cmp test xor or dec sti sub daa ret pushl cwtl inc mov mov les mov jle jl stc push dec dec je sar test mov xchg (bad) lret jb das sub repz (bad) sub inc in cmp jb dec sti test (bad) jmp imull jge lahf cld cld lret xlat mov jg pop repnz and ret add sub add sbb jno lcall add mov push dec ret stos mov dec adc or insb neg dec adc jb leave call test push cmpsl in stos mov or repnz bound daa add dec xor into ja arpl jno fwait mov adc push xor fild adc dec sub or inc xchg and dec pop jbe xor add sub adc xchg mov sub sarl push pop mov lahf jns lret imull adc fisub push pop mov frstpm(287 push lods fstl in cmpsb xchg pop aad out fcmovbe and stos mov (bad) in dec dec mov les xor lret outsl add jle outsb and mov fiaddl mov push pop lret or push test (bad) mov data16 cmp insb jae (bad) (bad) iret mov in imul dec and rol adc lods inc lds mov scas in (bad) or (bad) mov int3 or (bad) lods jo jmp add das mov add mov jns dec or scas sub or movsl js adc lea jnp repz mov test xor mov push (bad) dec fdivrs (bad) in lods push cmp mov xor adc pop or pop push xchg and and (bad) push mov imul es push mov xchg dec iret add repz dec jle in or xor lret jle bound dec pop loop testl test cwtl xchg ljmp and jne in lods mov mov cmc ds test pushf (bad) dec (bad) out lret icebp xor cmp lcall iret add mov xor lods ret mov mov cmp mov dec movsl mov ficomp mov enter mov sub jns movsl repz jp repnz ljmp dec cli into in ljmp (bad) into cmp pop stos rcrb pop dec push out out (bad) scas push adc mov shrb ficomp lds lock mov pop fadd rclb adc in mov pusha sbb daa imul pop push repnz lret and repz mov lret sub out outsb test (bad) pop fnstsw xchg push ja addr16 fs aad ljmp clc sub int jl dec cmpsb std daa (bad) notl xlat out mov (bad) cmp jne dec ljmp daa adc add mov jno pop stos and cmp (bad) repnz mov xor push mov aam sub dec and (bad) sub mov icebp or pop sub jno mov fsubrs xchg pop maskmovq idivl mov pop enter sub (bad) adcl mov add push inc int3 and scas pop sbb daa mov lock mov add pop clc pop mov dec mov ljmp les xchg mov add add test loope rorb mov stos daa outsb sub daa push or pop push xchg (bad) mov mov int outsl or fldenv xchg cwtl or and nop dec push bound xorb xchg push aam pop or pop fmull mov ljmp jo xchg jne xor lret test mov add jg ja incl popa (bad) sub jp sub movl xor sub push shrb bound (bad) lret popa dec popa dec ss cmp fcomps loop add negb popf xchg sub cmc dec call in push mov shll lret in aas mov cmp and pop add ret clc rcrl or das (bad) adc adc out jno repz das mov or (bad) mov xor daa mov imulb push movsb das test fisttpll cmp jle or dec fcmovb cmp inc ss sti inc mov sub scas gs adc inc ret outsl in mov add mov jmp jge add sub xchg inc and mov push lcall cmc and (bad) movb lods sub xor test xchg cli cli cmpsl std pop cltd nop push mov dec das or xchg mov std adc pop mov repz gs or jg jmp popf pop outsl test pop testl out cmp cltd push lret jg addr16 dec cmpsl push dec ja xor mov rclb and iret xchg movsb lds sub dec (bad) repz cmp jge dec iret hlt out in mov xchg inc scas sub push adc (bad) xchg ret xchg dec shrl and lret fiaddl test and inc (bad) hlt fucomp (bad) call in test enter pop and dec mov call fdivs mov xchg mov sbb pop mov in adc rcrl push mov adc mov add pusha add out imulb jmp data16 inc mov loope lret pop inc ret popa push sub cmpsl adc and jno cmp fsts (bad) sub mov and clc jle out mov sbb sub iret ss (bad) jne fs cmc and sbb xchg insb mov mov jle cltd add lods fs add daa daa movsl mov xlat icebp push leave sbb and pop inc mov xchg testb push pop inc xchg jmp push adc dec cmp pop sbb fistl mov popa lahf xchg jmp (bad) in jg lock mull pushf cmp divl cld sub jae ret mov xchg mov loop jg sbb xor mov jns stos imul jl dec lret lock sub scas aaa repnz xchg xlat fs mov ljmp ret mov mov (bad) aam jmp mov jge ret and and mov or add xchg and int3 je xchg xchg mov mov and push and (bad) inc and sub adc adc (bad) mov (bad) lock pushf das test loop xchg adc data16 push dec or jo jbe add lock sarl in mov push pop icebp loop lret shrl sub xchg pop inc fadds push outsl lea fcomps (bad) dec sub push imul push into add xchg jnp pop imul lret add pop repz push xchg lock mov fadds xchg cmp pop or out mov and (bad) popf jb mov rclb shrb rcrb int3 sbb mov dec fidiv icebp hlt sub mov orl sbb and movsl push cltd xor push xchg push mov xchg inc jg mov jae push imul aas jns adc addl mov sub dec rol jbe mul dec inc push jmp pusha or arpl or shl iret pop cli es sub (bad) (bad) ja pop sub shrb ret xchg mov sbb (bad) or fstpl pop or mov div (bad) jbe imul out inc jno test mov shl sub lock mov mov repnz shll sub frstor xor jne dec shrb enter jmp pop jnp sti cmpsb mov rorb jmp out outsb in fisub lcall ja std adc jmp scas out and jecxz cmp adc inc or add jmp out cmc gs mov add loope mov add and iret ret pop xor aam xchg out popf je imul mov rclb inc sub (bad) mov and aas xlat sti flds (bad) insl lods fsubr mov jg xchg aam inc cli jmp sbb mov test cmp and stos xchg stc mov push mov in scas mov es (bad) jle insl cmp xor bnd int3 or outsl (bad) loopne in add mov xchg dec arpl jo daa call (bad) xlat fist xchg and sbb test shrl mov icebp push adc out jns mov cmc inc mov mov sub test push jb ljmp mov incb jg fnsave ds jb pushf sub sub cmp jbe mov fcomps push or xchg adc fnstcw in push inc mov mov sar cli jne popf push pusha mov pop and and or aam out enter push sbb dec stos or jbe iret mov mov icebp insl bound inc xlat add xor leave push out shr dec pusha leave (bad) xor stos popf push adc or mov push xor lahf sti (bad) xchg add push push icebp cmp aad dec jmp pop sub fidivrl xor mov out rcll leave ljmp inc xor jns inc push push sub cmp dec mov nop push pop mov push mov pop xchg sahf dec mov mov jmp bnd das xchg sub pop mov mov rcrl mov out pop (bad) or push inc setbe je mov aas lret push fldln2 call xchg rcll frstor out out ss rcll add jae cmp mov lds in (bad) mov jge test loop,pt test or lods fnstcw dec lods ret out or sbb sti xchg leave test add jnp or sub int aas adc sarb add jns fs int cmp dec divb add or out lahf push jecxz popf xchg call jnp add jecxz lock sbb ds push jne sbb imul test daa incl (bad) dec fcomp into popf push adc lahf inc aas fadd push test mov pop std out (bad) adc lret out fs fs mov sti xor sub pushf dec lea jmp push mov test fsubp jb lret push fisttp and push out push or lret jecxz pop aad add cmp mov xchg dec into (bad) xor (bad) jne jo shrb movsb push or mov adc lahf xchg add adc adc icebp flds int3 inc pop call sub repz lret or adc mov ds pop stos inc jecxz mov mov cld leave (bad) cmp mov icebp push push jmp sub test fidivrl out dec mov inc jno sbb push gs (bad) fmul aaa or sbb mov scas push mov out out daa add into inc and add jle fwait sti push jmp mov icebp sti xor pop clc aas lret xchg lret jae push add lret cld scas pop adc into xor or sub out and sbb jbe mov cltd jns loope sub pushf sub add cmp dec int3 mov jmp xchg (bad) xchg dec mov or pushf (bad) fidivl neg sub icebp jmp test test notl xchg xchg (bad) mov (bad) aad pop ret cmp mov movsb test lock aad mov lret or shl add adc fimul ljmp dec fstps stos pop jecxz pop stos push jmp sub xor fsubrs out sub cmp xchg ret pop pop mov xor cli fcomip sahf das jo mov or jmp pop es negb and (bad) or test les icebp cli test lea shrl mov push mov aas dec sti lret rcrl ds inc adc into inc cld sub dec leave dec or ret mov and movsl scas into xchg imul gs sub mov xor (bad) mov out test mov push cli jle mov push cmp lret (bad) xor negl (bad) pop out fdiv mov or scas sti push xchg and (bad) stc aam or and daa lds scas pop add and cmpsl push (bad) xchg jl pop (bad) dec fwait sub xchg andb pop decb lahf fisubr jecxz repz negb ret xor fucomp sub mov inc (bad) idivb dec fsubl arpl mov or fmuls sahf in popa xor mov mov fidiv push ret mov push int3 cli shlb sar mov (bad) mov cmpsl jle adc scas sub mov sub cs push lret push pop pop pop xchg (bad) mov inc sbb or dec dec mov mull cld mov test adc cli or mov ljmp (bad) jge pop and jne mov out and mulb mov xchg iret pop es pop mov stos mov fldcw out sub or stos data16 adc lret lret sub lret pop popf out mov cmpsl push fcoml icebp popl push dec stos (bad) fild ret orl lds (bad) jnp cmc pop iret sbb jne dec fisub xor test (bad) das cld push mov sbb push into mov push scas lret xor sub stos fs stos movsb les xchg and mov ret hlt push pop out cmp loopne gs out addr16 sahf lods jge xlat fcoml insl sbb mov adc stc scas xor adc mov out stos cld jns add push push jns mov jl data16 xchg int3 sarb dec pop loopne xor mov lret inc push mov sti mov fistp mov (bad) int js cmp inc push adc insb lahf jl pop jmp jbe jmp sub xlat scas mov pop pop insb repnz xorl popa call mov pop pop adc dec fbstp xchg xor imul and adc test clc or cmp jmp inc sub xchg out mov insb sti mov mov and pop or cmpsb jecxz pop pop bnd test repnz (bad) mov decl xchg xlat push shrb xchg (bad) xlat jge (bad) xchg out cli mov mov rorl inc repz xor sub xor inc sub cmp cmpsl jns lds and mov add popf or mov pop mov fdivs ljmp xlat mov push mov (bad) mov (bad) test (bad) fnstcw movsb out inc xor roll sbb stos sub and mov inc jp subl xor outsb idivb dec aad cmp call push or jbe (bad) xchg repnz outsb pop add jp pop pushf leave loope mov pop push ja ja fwait and xor xor sub mov dec sub jns inc inc lea or insb mov pop sub lret add jg int3 push movb push out jnp shll loope xor (bad) ret and imul sarb push stos into or adc cmp push mov shll and mov jecxz pop or mov adc cli fistp mov sub mov mov inc mov dec inc mov loope jb popf fs push lods fild testl je out das jbe (bad) repz cld and ds cmc daa into push inc leave scas jo (bad) mov sbb sub imul cmp cmp and add aam in xor xor dec mov or loopne call pop or imul (bad) rcl xchg sbb icebp cwtl imul out inc int3 aas sub mov dec lret xor out bound (bad) ja xchg loop aam cli int3 mov (bad) mov repnz (bad) xor and sbb sub pop call pop pop adc clc ljmp ds fbstp xchg shr jl rcrl pop fild lea lods (bad) (bad) jbe push mov sub sub xor adc cli sub and pop mov mov pop lret xor add les xchg push fdivrl fs (bad) mov stos sub fstps shrl div mov repnz ja inc inc cmp sarl mov cmp outsb ret nop mov jge flds add mov jnp ret jmp stc add push loope ret ret xor daa and pop fbld cld xor (bad) mov loop cmp test push cmpsl pop sbb sub test scas mov sub popa add cmp fs add mov jo pop or push mov xchg pop sbb test cmp mov ljmp or jmp pop mov add pop (bad) push jmp sarb aad leave cmc icebp dec push bound rolb je pop aas call fnstsw mov xor jmp adc hlt repz sbb mov (bad) (bad) nop aaa in add fsubl add add xchg gs popf add mov enter (bad) and lret ret xor xor or mov pop mov mov lret xchg jecxz and adc xor mov or pop cli bound sbb add movsb mov pop xor mov jno mov sbb lret sahf andl mov shrl cwtl cld lahf xor adc (bad) outsb popa cmp fidivr popa test sub dec ret sub enter std jg aaa insl test das out (bad) in scas fsts lock pop mov add (bad) or xchg cld rorb xchg mov jno xchg mov xor test cld push add jp lcall xor inc iret fimull pop adc lret andb inc pusha or scas imul sahf stos imul mov ficomp stos bound add mov cmp mov cmp add sub test test xor scas cmp push adc fnsave jbe push (bad) fldcw mov mov arpl (bad) test jle mov scas add mulb or iret ja cld lahf je lret ret enter pop (bad) mov ret jno inc or fild lock adc std xchg cmp mov fs jb jecxz ja dec pop ljmp lea out (bad) notb xor mov je push adc xor js popf dec sub fstps xchg lret cmc adc lcall (bad) out inc repz jno ds sbb (bad) int mov pop mov mov loop add negb push xchg stc or mov loop test pop cmpsl aas dec clc push xchg lods push mov hlt inc push xor ljmp xchg out xor cli test movsb test adc test mov push mov sbb loop out push popa rorl adc jnp ds fidivrl call loope sarb pop ja (bad) dec pop imul pop xchg fmull and dec dec add dec adc lret loop (bad) std mov daa xchg negl outsl mov cmp sbb pushf jmp lcall das movsl pop mov outsl cmpsl lret das sbb pop jo adc adc xor (bad) insb adc mov or cld lret jl push push inc int (bad) mov in add or push cmp lret ret mov or inc ja lret jp loope in lods mov rcl sbb rcrl or jg cmpsl les xor mov sub mov and add push cwtl jecxz cmp das jge jnp push or xchg imul shrb adc repz inc inc in ret dec sub sub mov cmc stos sti repnz adc sti mov add jl push out negl (bad) xchg clc (bad) dec adc or jge mov int3 and mov xchg mov pop and mov mov mov or pop repnz fcmovnbe and loop dec in and call dec outsb mov shll mov pop mov adc stc neg cmpsb dec pop mov mov fsubl or in pop jbe leave xlat into push dec shlb (bad) add mov mov outsb mov loop scas bound push pop test add (bad) push adc out xchg imul test adc lds mov mov add stc mov mov cli add data16 dec data16 sahf in das jl push jne out jnp leave (bad) xor xor pushf outsb loop mov pop sti adc or or pop enter movsb (bad) and mov cmc stos pop push sub push xchg (bad) mov into aas mov mov mov dec test fsubr adc mov loope jne decl fs mov test movsb mov pop sub (bad) fsts insb xorb fnsave (bad) mov sbb mov dec mov das fidiv mov nop adc dec (bad) cmp and mov or aad add adc sar jnp pop and mov loope (bad) lods ljmp and adcl cwtl aas (bad) or ret mov and add sub fdivp dec mov xchg ds je mov movsb mov pop dec jae mov lret cmp loope or std (bad) push ret xor outsb je hlt push push sbbl clc and gs je mov jb xchg xchg jmp adc ljmp enter push push push jnp imul out jmp es stos jl ja pop push iret scas cmp adc scas pushl call cmp mov add xchg sbb and fisubrl xchg inc iret scas loopne jmp sahf rclb push insl mov jp cmpsl lock pop das or repz addr16 daa stc in mov stos rep dec jmp cmp js or das mov bound stc (bad) cmp pop das xor jnp cs daa insb test lods in out cltd push jnp or inc pusha dec push ds movsb and test (bad) mov mov scas dec scas sub fimull stos aam stos mov push dec gs clc mov push xchg mov mov pop push mov rcrl push sahf push xchg or adcb pop push pop cmp jl add out pop cmpsb mov test and pop or ljmp out adc (bad) jne stc mov and sub inc aas jmp dec cli (bad) cmc test or cmp push jmp (bad) fs (bad) cmc movsl dec aas test mov mov dec xchg cmp pushf pop or into ret fcmove clc das pop pop dec popa xchg daa jae push inc and sbb and cs or jae xchg imul sub mov dec mov pop icebp dec and jmp push jmp sahf fcoml fmull inc lret mov jle jno jb stos arpl or (bad) icebp adc xlat adc and je (bad) mov or lret or adc dec and rolb dec sub scas pop jle aam inc and push and ja int3 push fdivrs dec (bad) leave movsb and test popf cmp xor jo and pop or sub outsl fimul jle in ds cmpsb sbb xor mov add xchg stos ds repz push dec cmp mov pop loope jmp push imul push cmp push cmp cmp pop popa or cli push adc ret scas push push cmpsl out xor cmp jnp push into mov out loop into rolb flds pop pop dec lret repz ret loope xor mov sub cs out ja cmp xchg jg fisubrl out sbb cmp pusha lock sbb and jmp xor stos mov dec mov call push loopne lock fwait jmp pop jno dec fstpl or and and movsb jo dec repnz movsl xchg push flds bound test stos sub xchg (bad) divl or ds lcall cli ret pop icebp das movsl push or mov mov jbe insb daa push (bad) mov mov cmp inc movsl out inc ss (bad) jmp int3 and mov out gs sti scas mov dec xor sub cs (bad) mov je mov xor and stos stc loop call in cs xchg jb jmp fwait or lret and mov or sar dec jg sbb leave push push mov xlat in addr16 in xor fnop and hlt xlat cs lds call (bad) fstl inc jecxz sub sub add test stc xchg mov mov cltd outsb jns mov clc pop pop sub inc jmp out push sti lods (bad) xlat nop mov xchg mov and push cmp sub into jp add aam dec jno cmp xchg jnp iret (bad) lret mov bound sarb push test sub push jle jo pop popf fistp mov mov scas and pop and jnp and aad mov sub out dec pop jne jbe sub cmpsl cmp fs xor mov leave add movsb or pop jne jecxz cmp scas sub movb mov mov cmc xor inc fs adc iret fucomp inc ljmp add mov (bad) xlat sub ja xchg xchg sub push push outsb lahf jle dec js loope pusha stc xlat cs lods pop xchg lods mov popf (bad) inc push popf (bad) mov fmull mov pop add mov fimul add (bad) adc cmp push mov push xchg dec and lret out fs lds mov push pop sub pop and test ret orl bound push inc xchg pop mov sbb add daa mov aad ss ljmp mov ret fcmovnbe push lret movb sti lea outsl (bad) scas mov cmp sbb adc (bad) jmp or or in adc ljmp mov scas xor enter cmp outsb leave mov jp daa mov push push pop dec iret scas iret (bad) and subl mov lret pop xorl or ret (bad) and xor icebp mov movsl mov dec icebp sbb cmp div outsb mov cmp mov lret test add sti xor repz mov sub and in xor je fldcw and ljmp mov or stos and lahf add ljmp (bad) xor jle ljmp mov imul iret cmpsb jmp in adc shll jmp (bad) fldcw aas test in cltd sarb and daa clc cltd stos lods jmp mulb loop bound (bad) jle jmp push push and xchg cmp cmp xchg je les (bad) cmpsl jae adc (bad) xlat imul add int3 cmp insl or dec cli int add cli mov mov jbe lret jno daa aad loope das (bad) cmp sub into or ja push adc xchg push mov imul sti shr fwait dec cltd mov scas xor add or out mov mov push jb lcall add pop mov ljmp notl lea aam icebp ret dec shrl lret cmp xor xchg aam mov ja push jmp sub xor jmp das stc movsb xlat mov sub jle bound xor sbb dec sub aaa sub add push jo repnz ret jno and mull addb xchg or pop inc lods jo sub and dec es pop adc or out sub loop lcall lods loop xlat xor ret lods push jl daa int3 add sbb add jge adcl pop xchg ja xor stos adc cwtl into mov lods ljmp stos adc stos xchg or (bad) rcr push jg cwtl das sub dec leave pcmpeqd mov mov jl sub movsl mov (bad) dec pop dec adc decl xlat out pusha cld call xchg and sarl or daa jo (bad) pop adc fiadd add mov push pushf arpl cmp or addr16 dec adc pop xor cli rorb mov call ds jle call sub cmp daa out pop adc nop mov sbb dec mov in push in fwait (bad) dec add and inc test or mov fdivrs jae xchg mov mov insb cli inc cmpsb inc repnz in dec nop out sub jae jge (bad) pushf sbb ror cmpsb xchg mov into adc dec fs inc repnz sbb inc inc loop mov outsl inc (bad) and mov xor test lea lds add shlb es popf pop or mov std lds (bad) ljmp test fxam test in pop adc pop fnstenv push loopne mov rcll add xor and (bad) pop push mov sbb fcomps popf pop outsb sub pop dec and stos dec jge mov adcb pop xorl fstpl sub push add cli add jge je xor push dec mov ret pcmpeqw xlat mov not sub into push add add mov xchg or mov add imul cld test icebp mov enter adc sarl lods cmc aam (bad) cmc mov add or rcrl or jmp mov xor testb sahf or shl jb fisttpl push data16 pop mov pop ljmp mov push cmpsl icebp dec mov mov add push aas xor xor mov or and pop pushf mov (bad) cmc in sub xchg xchg xor rcr leave sbb and pop sub adc xchg rclb fimull loop gs or pop xchg dec mov sbb add adc adc (bad) jno into and xor call loop lock out divb add loope arpl clc jl cltd pop scas sub fisub or aaa dec repz fcoml push lret xor es outsl imulb push int3 rorl scas int3 jne add adc repz out jno xor sub inc mov ja cmpsb popa call xchg push outsb std iret mov push in sub outsb or mov (bad) mov stos mov fldcw push out xor pop sti xor movsl ljmp (bad) mov pop lds or and mov or inc daa xchg lea mov pop (bad) mov ret scas flds lods adc popf adc mov in cld cs adc ret push pop loop dec ljmp cs aaa push xor adc mov xchg and decb hlt (bad) push pushl inc xor mov pop xor dec mov out pop sbb mov fistp dec popf mov in dec sub lret jmp xor pop imul daa mov and mov add inc mov (bad) insb pop jge adc push jp (bad) dec stos push lahf mov stc movzbl imul in pop xchg (bad) cli imul and adc and push mov in jle mov outsl xchg lods cwtl mov shrb mov add or loop jge,pn add add mov jne repnz fnsave xchg inc sub cli mov icebp cltd out insb or rorb xchg mov or dec fs sub xor and adc mov inc clc add mov pop movsb rclb pop push mov xor enter pop add std pushf ljmp cmp mov dec imul sub jl daa je iret dec sub shll clc pop in int3 sahf add xor nop pop mov sub std call xor xor int3 mov sub out (bad) mov outsb xchg pop and inc mov jecxz test leave (bad) fst or daa mov and pop mov lret in fnstenv jmp jle inc (bad) mov and aas mov lods (bad) push iret push adc push and pop dec int jnp adc push adc fisttpl imull movsl cmc into xchg add xor and jmp and fisubr test std out fisub sti xchg hlt aad push adc divl xchg loop mov into and add cmp push jbe sub mov aaa in popf and xchg pop fs mov xchg stos icebp imul sub mull and aaa imul push push arpl sub in sbb stos xor sub jle pop loop (bad) dec or xchg xchg mov ds push add adcl jns xchg mov lods inc repz dec test into popf add add sbb pop sub imul push push jle ror mov pop ja adc cmc inc or movzbl addr16 and xor jnp cmpsb je fs rol sub cmp dec test mov lcall push push push sub (bad) fs mov js icebp in vmovaps test (bad) adc ljmp xchg mov xor in movsl fstl movsb xchg scas jae add pop xor adc rcl sub jns idivb cwtl mov aas stc or or sub fnstenv mov sbb inc sub ret mov movsb xor or jns les (bad) stos je scas jb inc movsl aaa sub repz in cmpsl (bad) ret xchg xchg jo lahf sbb mov cli push mov aaa gs cmc pop pushl inc inc xchg xor cmp insl jbe fs test daa shlb add and inc pop mov jbe and mov lds scas sub fistpll fwait mov cmp mov jl pop pop add subl dec or or xor mov dec mov test repnz xchg negl (bad) divb cmpsl sub loop pop rclb lret jmp cld pop push sbb jae mov lea sub icebp adc mov pop test mov repnz stos sub add add test mov mov fs dec outsl rorb int3 out pop data16 sub dec mov or sti and inc (bad) cmp mov dec mov aam into pop repz mov and xchg lret cmc xor leave xor leave clc jp dec scas stc xchg dec mov insl daa xor repz jmp mov pop mov add adc test icebp and and jae mov xor sub mov stos scas mov ret xor add sub out dec inc das (bad) pop hlt jno hlt or xor push sahf mov dec aam (bad) fwait xor dec ljmp dec mov (bad) pushl pusha push (bad) xchg in dec mov or push addr16 xor and cmp jne adc sbb adc xor hlt dec test cwtl shrl scas je movsl arpl pop xchg call stos mov xchg in repz gs mov dec out fimull xor cmp loopne adc addr16 lods pop mov iret incl cmp cmp jo or scas cmp (bad) mov cmp jl adc stos mov dec cwtl int dec repz dec mov mov dec jmp mov test mov inc mov sbb stc sahf jmp jl mov movsl leave aad xchg mov lods js pop leave mov mov fldcw add icebp lahf (bad) sar mov mul std jns dec int3 js jecxz and (bad) mov xor stc pop les mov push (bad) mov pop out rorb mov dec jecxz jae cmp ljmp gs add and cld jne pushf jecxz jb leave jg jge jmp push lock add into add add or inc ja das pop sub or pop lret sbb pop mov or mov push cmp lock cmp stos imulb pop test ret clc jge jmp mov ljmp sbb (bad) adc pop jno sub cmpsl pushf gs add scas (bad) icebp xchg adc das idivb xchg fwait mov pop scas mov push xor xor sbb ficoml out out sub (bad) rep or sub dec mov pushf lret dec stos mov das test adc push mov or sbbl mov pop add sub add (bad) jl fucomip popf ret fstl (bad) shll rolb sub stos jecxz test (bad) mov xor into and and scas push mov sub scas sub out popf push sub xor ljmp shrb and loope aaa jne cmp scas imul adc or (bad) fidivrl out dec cmp add arpl shll fwait stc push popf bound xlat fistp imull sti loope pop cltd adc stos int add adc orb popf cmc or hlt or or fbld hlt leave (bad) idivb aas sarl bound mov mov test xlat sti xor ret fisttp jno and negl pushf das pop dec jb sbb and stc stos cmpsb jl pop mov xchg and push shrb int3 cmp mov or roll aad insb hlt repz inc sub mov jbe bound (bad) rep pop rclb idivb pop stos xor sub dec or rorl shll mov repz in in cmp ret push mov test fld dec mov jne mov sti mov and add ret push (bad) jg dec mov pop or mov add sub dec sar pop (bad) fisubr and sub add lret xchg xor jl push push cwtl sub ret lahf or ficom cli cwtl div mov aad (bad) xchg pop lea inc and ljmp lods (bad) cmp xor sub mov jo push dec sub aaa ljmp and loopne xlat data16 jo mov mov lcall imul jo mov add cltd pop mov xor lret neg push sub xor setle and std ss je in sbb (bad) mov jns scas inc in nop push push or sbb gs mov mov (bad) jns jno xor pop cld sbb call or hlt hlt fidivrl mov add (bad) or (bad) icebp adc add sbb ja test stos sub cmp fisubr ret jns jno outsl jo pop mov sahf addr16 adc add or xorl outsb sbb mov xlat adc cltd mov mov and sub xlat mov xlat sub mov pop xchg pop pushl cmpsl in mov lcall jle xchg dec ja movsb (bad) pushl mov xchg js pop fistpll push outsb test pop sub mov inc mov into push adc clc (bad) sub icebp and xor and mov pop or add into fnsave lret stos lods icebp movsl int push add or fstpt jnp scas mov mov test enter or fsubp fdivr push (bad) lcall jmp jle push add dec mov push mov dec cs xor ret and add inc push adc jno or mov and popf orl icebp cmovbe mov sub orb js out jge jo jns dec (bad) mov stc sbb mulb repnz mov imul je jmp out jbe push mov pop (bad) cmc icebp in shlb and bound test add cld rcll (bad) (bad) lds mov loope pushf sbb xor fistp mov test inc imul xchg jmp add pop adc lock ficompl xlat mov cmp cmpsb dec pop cwtl pop sub inc add clc jmp sub push and pop fdivr sub sbb cmc std mov add sub loop cs (bad) test lret (bad) sahf jnp jmp sahf or jle cld (bad) push aad sub xor cld test aad push stc insb cmp lock dec inc sub jle dec mov sahf ja mov mov adc add cli jne jecxz jbe jmp aaa repz lret out out mov scas fisubr ja aaa add into ljmp mov jne pop xchg or push xchg loopne ss mov sbb push mov pusha jmp cmc pop and shrl fldcw add sbb popa inc sub es pop clc lret pop mov add or sbb xchg xor mov mov mov cltd mov arpl pop into std dec xchg aam stos popf cmp push (bad) das mov popf pop sbb xor je jecxz das (bad) pop mov xor add lret bnd test roll or das addr16 xchg (bad) pop and push cmp sub jp xchg pop push mov and ficomp sahf or sbb and mov add sbb fsubr jecxz adc inc imul jno sub pusha pop pop or (bad) pop fmull xchg xor sti sub dec pop and ljmp or mov mov inc mov daa and stos dec sbb push adc pop mov jne clc inc mov pop popa shrb jb je or pop inc imul cmc mov or mov sbb jno shr out sbb xlat and inc clc mov add or divb mov mov (bad) pusha dec or pop or push xor sbb dec div lock and mov pop arpl rcrl out push mov daa jle stos cli dec repz jp add xor das sub or adc ja push dec adc sahf vmread fxch jo out pop or ret dec or xchg mov mov call and stc mov pushl outsb mov dec lods cwtl pop add mov lcall sar or rcrl dec mov lds (bad) in push mov in mov enter in imul movsl std out shrl int3 cmpsb cmp or mov sub insl int3 mov dec repz and (bad) rolb mov push cld hlt pop add call xor push mov call mov test out inc movsb test pushf pop push cwtl xlat dec (bad) pop outsl imul and dec push data16 nop mov xchg loope sub or fidivr aad mov sub scas or sub hlt adc ja ja movsb mov jmp add xchg fnsave xor add or xor push adc std jmp rorl adc fmull daa or ja xchg mov outsb cltd sti jno jp mov push (bad) rcrl inc mov or sbb add sub xor pop jns imul xor xchg aaa push inc mov (bad) and mov das sub jl cmp mov push and jp inc iret jne clc popf cwtl xchg mov mov pop inc xor ret aam jo adc iret inc xchg pop xchg andb lret call inc inc mov (bad) ja in mov xor std dec js ret xorb sbb (bad) cmp cmp sub or movsl inc cmp in nop mov test mov inc leave pop pop lret xor popa dec ljmp movsl daa out xchg xor loop xchg test adc sub pop jp cmp out inc mov inc incb add sti (bad) jmp push les push sbb imul lock add out popa pop sub imul iret inc es push jae pop or lret inc arpl cs icebp mov cmp xor enter add mov mul fadd dec gs test fist (bad) mov add (bad) cmp add xchg cltd pop mov out mov hlt jmp pusha (bad) decl sarl out jp push movsb mov es leave cmpb outsl mov push push pop mov sub add fincstp dec clc int3 imul pop stc das xlat jne (bad) out cmpsl adc sub push (bad) out and mov repz out and jbe fmull jg pop xchg jo mov add int mov addr16 ljmp in ljmp scas or and (bad) add add ljmp rorb (bad) xchg lods add xor outsb cld nop into (bad) dec (bad) sbb push pop mov fisubrl mov push rorb xor (bad) mov push div lret fcoml sub or jns dec out or fistpll jp xchg fisttpl into aas mov hlt add int jg pusha pop (bad) out stc pop mov jle jno xor pushf lds fsincos sub out lahf icebp cmp push ss add es sub jmp push and (bad) mov push js mov push inc dec and sbb cmp mov insb jmp gs add xchg fldenv mov ficom inc jbe stc adc inc xchg and test dec pop mov jo xchg push stc sub xchg mov adc test movsl call push out pop stc push aad dec idiv daa loop fidiv xor push adc push xchg fbstp add cmp mov out jno out jns leave xor ja call mov mov jae mov cmp pop add cmp (bad) imulb sbb bnd ret mov fbstp and jo mov in out in add push dec mov or pop push lods sbb pop cmc pushf enter cmp xor pop fdivl sub sub add and mov daa add clc pop pop push pop (bad) push and sahf sub sbb in aad gs into add push repz adc mov enter shr movsb xchg mov jge (bad) pop xchg out mov or push cmp ret add iret test xor mov insl pop sub jae das and dec sbb pop pop jecxz pop ret fbstp fld xchg mov repz add xchg ret push jl mov addsd mov mov sub lock add fnstcw std or popf fstpt out push sbb push mov xor mov xchg stos mov mov or aad mov sub test dec je (bad) (bad) mov das and fmul mov fwait dec stos xor mov xchg movsb xchg pop mov repz lods xlat and sub xchg fisttpll (bad) xchg jmp lds and sub fbld (bad) rcl repz xor ds sbb stc icebp popf inc add add movsb push cmp inc xchg cmp mov std push jns mov cmpb sti out daa cmp fwait adc mov sarb sub mov les or add pop sub fistp mov pop test scas mov pop notb and adc in scas xchg and and daa jae test fidivr push out sub sub stos fs or lret std push inc mov push vpscatterqq repnz cld sub sarb scas test sar jno or cs inc sbb sub pop xor popf int3 pop cmp pop adc and ret popf adc call out jge repz sub fnsave pop pop roll cltd adc movsl leave or add cld push sub jmp out in and pop imul fmuls ficomp jmp mov push add push bound pop or int3 adcb aam ret sub lret fnsave pop sahf add jmp aam testl mov pushw pop (bad) xchg pop ljmp fnstenv into rorl out mov leave cld mov cmc mov ja mov add je dec jno xor xchg movb or dec mov imul imul ret and pop sysexit jecxz xor fs lock mov adc sub aas lret push dec out fs in rcl (bad) dec inc (bad) add sub pop ss jg pop rclw pushf mov into bnd adc out mov jae mov std pop inc pushf add inc or cmp call cltd jnp pop and jmp mov outsb pop push or rcrl dec pop repz cmpsl ja je fdivr es or (bad) or ds clc (bad) or sar pop or (bad) sub loope aas mov test iret in push xchg push fldl js repnz push pop mov inc das jns xchg out add lods out shl lods test sub jbe ljmp cmpsl and sub idivl test (bad) fucomi outsl mov inc lock mov mov (bad) imul int cs or cmp dec data16 repnz fisttpll ds jp leave or adc jae xor div xor sarb jbe jmp push or jbe jge and mov pop sub mov repz cld stos leave sti push pop and lock scas xor pusha repnz ficompl notb mov inc stos push inc lret push and cmp aas mov lods jmp std sub dec or imul add (bad) dec test daa push xchg xor ljmp popf je xor out adc mov or movsb out pop xchg mov fs loop pop cmpsb cmp add ljmp out pop into mov out inc icebp adc (bad) scas mov dec scas ss int or sub mov push push syscall ja rclb dec repz call mov je push mov mov cwtl repz (bad) xrelease (bad) cmp test dec and xor stos sub lret jo adc sarl sahf ret outsb sahf sub adc mov fs (bad) call lcall cltd rcrl jp push rcrl pop jbe stc fwait pop clc xchg loop dec fidiv repz mov pop xor mov popf jne mov imul sbb inc inc add adc mov jg je mov pop pop lret mov js mov xor fs test mov mov sub or adc and mov adc inc leave fnstcw (bad) cmp cmp lret insl mov jecxz mov mov in stc mov repnz outsl leave js mov xchg mov dec (bad) stos es ret jnp movsb inc es and push add dec sub add pop sarl (bad) adc push add repz push mov xchg icebp out mov icebp in adc add ss movb xor mov gs mov ds cli mov imul cmpsl and xlat inc xchg ja jnp lret ljmp sub enter and mov call mov pop aam xor mov pop scas xchg jno and int3 movsl mov out jb pop aad mov sbb add pop jb sbb add sub xor push repz gs in push cmc (bad) xor sub jnp adc cmp mov mov mov fmuls pop pushl sarb (bad) cmpsl push and fidivl ret cmp pop fnstcw sub jp mov add daa out or sbb shr (bad) and sarb (bad) ficom mov mov sub movsb pop add mov jecxz pop imul lods fs (bad) jg out sub inc ss push or movb mov pop mov xchg and xor stos sbb adc sub test push rcll add enter repnz mov or sbb xchg mov in mov add mov test xlat pop push mov jmp std xchg pushf mov pop sub leave and jns fstpl mov sub mov sub popf insl cs pop mov bound mov lret lock or push inc addl pop xor movsl insb inc repz fldt jp xor rcrl rorl xchg sti or enter dec repz (bad) cli push xchg jmp adc inc xchg sti mov in xchg dec fbstp sti ffree xor in dec cltd maskmovq imull adc ret fcmovb js dec adc sbb xor and or lock push cmpsb inc adcb sti lea nop repnz ja add mov mov das mov leave iret (bad) sub pop add (bad) mov pop push mov jb scas fsubl cli mov fisubrl sub dec push cmp cmp data16 decl xchg into pop mov inc or std imul dec jne scas cltd dec push jo inc jnp int jno mov ret xchg loopne out mov jo cmp cmpsl (bad) sub cmp (bad) push jl push bound int3 sbb sub add cmpsb out jp mov movsb aad aam dec arpl cmp mov push push fbstp or negl push push xlat int cmp and es sub scas shrl xor mov mov sub mov jno mov scas mov out xor adc jnp push add adc pop mov jmp movsb cmp cmc cmp push add pop mov and es xlat jns dec sarb jecxz dec (bad) lods ret (bad) dec mov lds and inc sahf xor add in ret dec add in dec xor xchg dec dec bound mov scas cwtl das repnz pop sar xchg ret mov ljmp jb jecxz pop test xchg subb xchg out xor sub adc aaa mov xor int3 adcl push divl into xor xor inc mov (bad) pusha and cmpsb fsubs lret jmp push mov push sub repz test push rolb sub sub xlat mov add xor sub jbe fwait xor lret iret xchg jae mov or xlat insb les jp or add mov (bad) enter out popf dec cmpsl mov adc stos mov dec decb movsb (bad) in mov sbb pop jmp jb in lret add cmp loop ficom lock data16 pop and add xchg and sarl cmp les or iret aas sub sbb xor sub mov insl ficom mov jg rcll jmp push pop icebp cwtl mov pusha sub add xchg ret xchg sbbl mov xchg iret inc add pop xor gs push lret cld enter das stos in movsl pop add mov repnz mov pop dec dec mov push sti bound sbb aad adc in or dec push aas push mov test and flds pop pop or push add push xchg enter xchg jo dec cmpsb std pop xchg or (bad) pop push daa imul jns lret stc cli sub leave mov mov xchg add out lcall add stos cmpsl negl sub xlat repnz sbb arpl (bad) pop in scas dec into xor sub jno in stos lret (bad) mov fisttpl test js sahf mov clc out inc (bad) dec mov or mov lret jne ficoml sub (bad) jnp xor idivl scas add or lcall and outsb iret xchg or ja mov mov lods adc and sbb xchg cld jl ret add (bad) cld add jmp xlat insb pusha sbb xor mov clc sbb int mov enter lock mov iret jle jmp add dec adc rcrl mov aas cld or mov xchg lds rcr lret jg lods dec out dec mov jno sbb inc mov in (bad) mov imul xchg add adc enter pushl test (bad) mov (bad) aad fisubr std cltd inc sub test mov jp add inc aad test leave mov inc or sub push ret jns sbb imul and xor mov sarb lock mov inc imul repz shr mov lret shll movsl xchg adc mov push dec sub popa imul and and sub inc movsb gs out push xlat mov push xor sub mov push stos jbe or mov call mov jae jle imul in leave mov pop xchg (bad) aas mov dec (bad) or cltd mov xchg pop popa lret inc mov mov movsl mov pop xchg (bad) xlat xor pop test ja pop push mov sub aam push mov inc sub pop inc out sub mov (bad) mov lds pop ljmp test mov and aam shrb adc xlat mov lds sbb divb or out mov iret or add scas mov test in out mov sbb cmp xchg lods xchg enter into mov dec lods xchg inc pushf ja imul dec ja dec fadds jae mov jns dec xor push inc aaa mov inc lahf push sub (bad) push leave jmp out fwait and stos (bad) enter pop jae sub and int adc scas std in sub (bad) jo test pop cmp cltd and and mov sub pop inc mov cmp imul mov cmp xchg push dec out fidivl rorl sub mov std ret negl pop inc test cmp fldt dec lret jmp mov cmp insl sbb mov ret and mov bound dec xor in es xchg xor sub mov jbe xor icebp lret push dec sti stos adc lods (bad) call cwtl cmpsb das cs pop jo jne push leave push sarl adc push stos flds (bad) sbb mov mov lods sub pop xchg jne lds in push sub push lret jmp jo repz pop insb sub xor test lds pop icebp jmp ljmp aas cmp cmp adc mov ret dec push fucom outsb jmp xchg leave pop mov insb data16 xor mov sbb add mov aaa xorb cmp mov sti enter cmp insb test mov pop xor mov mov adc call push sub mov jnp scas sbb push repz sbb or and int3 dec sub clc mov rcll test add jecxz dec out dec or out sub lods push fist push movsb mov dec icebp adc adc pusha mov dec ret xchg (bad) das daa pop (bad) mov (bad) stos jns cmp push mov ja mov lret sahf decb out inc insl das mov pop sub sub mov and pop inc or shlb in cs out or xchg xor rorl inc test mov das in lret xchg in stos xor lock push mov call imul (bad) decl mov push data16 sub add jmp stos sub lret xchg or add mov add mov pop sbb fbstp mov sbb and or fildl add add xor cmp xor and jp or (bad) lret push sub mov sar out mov pusha daa out add or push sub mov push mov jle and jo dec inc mov cmc pushf rorb fldt (bad) xor ret leave lock popf push sbb jb dec mov and shlb jne inc mov ret mov int xchg lds mov comiss cmpsl popf xor xor lret dec adcb dec adc std sbb insb lcall cld sbb or (bad) (bad) push push lcall shrb or daa sbb mov in and pop (bad) (bad) arpl push push or pop leave cmp lods cwtl rcll push push cmpsl mov loope lds cmpsl add call jnp arpl mov inc or dec ljmp and mov sub sub xchg negb (bad) sub inc outsl mov fmulp sub cltd push and add mov add xchg lret adc roll dec xor fsubrp pop (bad) into fistp cli xchg leave decb repnz xchg mov test mov push dec xchg lret ljmp cmp test mov dec xchg or add repnz dec incl mov jle mov mov nop out repnz iret pop repz dec mov dec pushl rol out fimul add std clc jae or loope call mov mov mov jnp and rcrl pushl pop (bad) (bad) mov ficomp test ss or add stos add not and xor es dec push clc sub inc xchg ror adc push mov (bad) adc lea mov xchg or xchg call nop out movsb dec xchg mov in jo pop hlt aad sarl pop cmc adc add jg mov roll push sub xor mov aam addr16 push mov neg lahf or add subb inc sub ja add mov cs mov jbe shl fadd lret mov ja orb add pop mov addb mull add jecxz add add sbbb lds pop in jl jg or psrad pop or push sahf xchg sbb rcrl push push push dec cwtl inc test popa add pop pop push pop mov mov add and jg sub loop mov sbb ret pop movl adc xchg cli mov dec (bad) aaa xlat jg ret mov aas rcll (bad) jle in dec repz and dec mov ret (bad) jne ja daa push push push ds mov je outsl cld shll pop repnz fldl mov xor out leave add dec and push xchg pavgw push and fnstenv push iret mov cmp and jne push scas mov mov les mov cli lret sbb out or mov sbb out mov cwtl dec lock lret dec adc sbb cltd aam mov or inc jmp enter cld das into push sarl cmc and mov int3 mov js cld inc loop negl xchg xor lahf jbe xor jecxz dec or out cmc jno lret sbb lahf js pushf mov jge idivl mov push (bad) pop rorl cmp lret or stos fisubrl pop mov xor cs leave jne scas mov shrl lahf loopne ljmp shlb leave jg out jno iret (bad) xor (bad) bound call leave xlat int3 lcall jbe sub nop fistpl out lahf stc popf imul cmp mov add cmp (bad) jbe lea mov dec mov xchg sti (bad) jo iret inc std sarl or outsl lret or sub repz ret leave xlat pop push push addb imul pop xor cli int3 fcmovnb lock mov in mov and scas frstor stc sub lods or xor mov adc push xchg lods mov jmp mov sub gs lods negb (bad) pop jno pusha negl int3 jb dec adcb clc add pop mov cmpsl mov sub in lds pop mov fnstenv fs xchg popa fnstcw jecxz sub std sub (bad) jne andl dec adc hlt pop icebp cmp jns xchg or stos iret pop setb ljmp mov xor ja mov adc push mov add sub jg xchg cltd out pop jb sbb mov rcrl stos (bad) inc and mov fist cmovp (bad) pusha mov dec mov and sub stos sub and push daa idivb fnstcw xchg jmp fs xor xor jae pushf mov inc pop add or or fcoms and imul notb jge add leave (bad) aad repz xor out mov lahf movsl pop inc leave fs lahf push add imul test (bad) mov call and jg ljmp mov shll (bad) ss lods dec add sub jmp (bad) xor mov inc mov popf xchg jle pop inc mov cmp imulw xchg fadds pop jns andl dec leave idiv (bad) mov inc movsl notl xchg and mov pop int3 xchg sub (bad) pusha out jno test popf pop mov lock sahf xchg xor cli rcrb cld icebp mov int3 dec in sub imull sub sub insb imul outsb outsl (bad) mov shll rolb xor popf (bad) and inc xchg mov xor sub repz dec and jmp dec push mov into xor js xchg jne mov test mov in add mov xchg adc mov push sub mov add or and sub sub (bad) into (bad) std sbb cs or fs mov and and xlat sahf mov add or sbb lret test sub outsb lret pop pop sub imul mov into mov pop pop dec ret pop mov mov add adc xor lds mov pop cmpsl pop inc ljmp (bad) dec add push lret xor xlat (bad) out daa jns mov lret out xchg mov jae scas add add add cmc gs inc add adc add jbe rolb leave movsb cmpsl cmp mov js popf push lcall mov icebp dec dec (bad) lds or xor popl mov xor shrl cmp mov in ret or (bad) xchg leave mov movsl add leave cmp jne out adc mov xchg fistl scas sub cli sub or mov pop push pop mov inc pop ss imul in ss sbb xchg in inc dec mov push les std bound fildll nop leave inc pop pop mov xor sub test or jge xor mov mov dec sbb cs xchg loop,pn (bad) mov fwait loop ss jbe daa fbstp call inc mov jl and (bad) dec pop mov jle into push ljmp xchg lds or in xlat xchg out popf mov mov push pop push (bad) pop cmp popa mov (bad) sbb loope jnp cltd orl mov and mov or out (bad) sub repnz pop adcb mov lds mov push aaa pop clc dec add sub enter imul scas js dec lret mov shlb push pop push hlt (bad) popf jbe leave fstl ret pop insl ret (bad) sbb xor stos cwtl mov pop pop lret stos test mov or lret negl packsswb and aas dec out dec cmp icebp lods decl in ja xor jnp xchg mov insl cmp xchg mov xchg mov push xor mov jle push sub ds (bad) repnz xlat dec fiaddl push js cmpsb dec popf sbb ret and scas sbb std in jbe mov enter iret clc sbb add cmp lret sub add xchg je dec leave (bad) inc fsts loop sub (bad) daa jne lret xchg data16 sub adc and ret fadds lahf cmp js pushf push cmp arpl xchg adc sub jne pop out mov mov arpl (bad) xor and push shrb lret test inc mov mov stos cld mov pushl test dec call sarl scas sub sub das inc jne stos jb mov push sahf push mov stos push and add mov jle jno push and lret mov push add lret out add mov or repnz lahf jns imul adcl lods mov aad or mov mov dec sbb scas dec dec call cmp ret sub push mov (bad) jne bound lea fmul mov lds shr lret xor mov shlb dec out dec inc jge lods test outsb bound mov clc shr mov pop mov dec andl cmp mov push shl pop xor ljmp xor cmpsl push or in mov mull or mov addl xor rcll add sub and xchg pop sub test or add pushf das hlt and loop fcmovnbe cltd xor idivl cwtl mov xchg dec pop dec cli lock dec add xor mov lds icebp xchg fsubp test negl or push or and or inc daa pop std mov jmp push insb mov add xchg sub sub mov cmc and push (bad) stc push xchg adc pop sub sbb cmp sarl or out mov sub xchg adc popf cwtl add mov scas jne jecxz adc fsubrp repz dec mov stos mov dec fcoms xchg repz data16 popf push sbb icebp js dec lret mov add cmpsb sub xor push hlt mov stos mov jecxz pop or xchg sar bound jnp mov ret push push and hlt ret xchg and jnp sub xor ret pushf xchg icebp jmp rorl sub push out mov add pop inc shrl icebp nop mov scas cmp cmp sbb mov sub call sub sbb pop imul cmp mov into xor cli sub cwtl jmpw dec sub sub call sub je (bad) fdivl movsb negl lock or mov xor pop out xor push cmp inc lret repz sbb adc popf jne pop adc jg push xor pop leave std push out mov dec lret mov mov mov pop aas mov je into xlat into inc or or in mov mov pusha das mov mov mulb dec scas mov push cmpb repnz sbb xchg pop popf mov shll fucomi or mov dec add and ret aad js add xlat jno call cli icebp jg xchg jb (bad) cli add sub lock in mov aas scas jmp xchg cli stos sub ret mov aam inc int3 xor inc cmp pop or push imul mov mov push add lcall pop inc and pop stc jbe pop pop in lods or (bad) or loop sbb lcall mov subb mov push inc loope sti dec pusha scas adc inc mov pop and pop xor imul or xchg pop test add mov or push aam cli test out cs aaa test mov test call lds push push adc stos mov out sub adc cmovp inc push sub ret push jne xchg movsl std (bad) cmpsl xor xchg inc add jne sub dec das jns inc push sti jbe inc popf jg jmp add xor xor pop xchg lcall xchg out jmp dec pop not clc mov adc call aad push xchg mov sub sbb mov mov mov sub hlt add dec mov addr16 mov cmpsl jmp push adc ja xor mov bound jo or sahf mov push cmp or bound out push xor inc in xchg out push pop and (bad) sub daa mov (bad) push gs adc out adc inc daa or es inc sbb popa push loopne xor in xchg sbb imul lods nop scas or cli jecxz add pop fs sub loope pop push (bad) lahf out and cmp decb or (bad) imul loope mov (bad) adc arpl pop push push pusha (bad) ljmp dec pop or test and add or and sbb adc test aad bound sub mov popf idivb cmp jno lret xor clc pusha or push in sbb adc dec sbb sub or cmp adc (bad) je lds mov repnz adc sar dec pop iret sbb mov lret mov insl sub mov pop pushw mov mov cmp pop add mov in xchg test sub xor pop das loopne push inc push fcmove jle shrb dec movsl jecxz dec lods mov iret xchg adc rcl (bad) xor jb mov and in rolb and outsb pusha dec sub jae jne add orl cltd hlt cli mov lods mov mov loope fisttp or sub jne out (bad) mov add dec mov mov popf test mov sbb sub fucomi out add jae bound testl aaa stos test divb push xlat mov out jecxz dec ljmp rcrb clc mov jns mov loopne lock push dec sub dec (bad) lret (bad) xor sbb fisub cmc xor lea scas sub add test pushf inc (bad) hlt ljmp and je mov jecxz lahf pop roll and mov in pop push mov imul pop imul icebp int3 scas (bad) daa push insb and add jo inc je xor mov stos imull sarb xchg test cmp fistpll aaa mov ljmp cmpsb cwtl push fistpll iret mov pop loope pushfw and (bad) out loopne sbb sbb fldl stos test adc add inc pushf es inc gs lock xchg je push inc popa inc dec movsl fs inc imul dec lods stc adc leave mov cmp (bad) pop or xor dec push cmpsl movsl ret inc and aas push sti jle (bad) cmpsb bnd aaa je push ja fadd mov stos sub cmp inc lret lcall pop sub pop std sbb rcr aas sub rcll jno ljmp add ret fist das test cmp cli sub mov notl push xchg add mov aas and push push xchg repnz repnz cld lret icebp xor jmp stc cltd shl sbb aas push stc dec and scas negb test push ret das inc repnz mov les xor out mov clc lahf fdivl (bad) mov lret out int3 aam mov pushf and mov adc cmp bound das inc or and xchg mov loop aas test pop mov mov jl jecxz adc push movsl xor lcall pop leave push mov jg lcall outsb and inc dec mov xchg lcall pushf mulb dec int and int lret or jmp (bad) lret push dec jbe (bad) inc repz clc push mov mov idivb test mov (bad) jl mov stos mov xlat (bad) es das fbstp loope pushf call jmp push inc out and shlb xchg inc jecxz sbb mov jg ror icebp jge (bad) dec or add dec sub sbb mov mov (bad) jne stc sbb xor xchg mov adc aam ja call cld xor xor outsl iret (bad) lock jg lods call lret imul sub mov push push xor outsl mov push das sarb fsubs or mov ret adc jle lds adc scas leave xor fsubl adc dec test cmpsl fidivl sub idivl dec scas and repz mov (bad) rorb xchg imul ja jno (bad) (bad) test sarl movsl data16 das pop (bad) jb cmp das scas insb loopne pop fldenv mov lds andl inc push stc (bad) ljmp xchg (bad) or scas outsl sub fld les mov leave and adc loopne sub xor addr16 xchg xlat adc push into fstl clc lret push (bad) pop cmp dec cmp sbb (bad) dec outsb out xchg jns and ficompl (bad) daa dec sbb or fadds jmp and fiaddl popa inc icebp add das outsb les mov pop sti inc lret sarb das fdivl mov ljmp sub fsubl jmp sbb push lds lcall loope in insl hlt (bad) jecxz dec and sub cmp add mov xchg pop rcrl stos sub mov and ret (bad) int3 (bad) adc sub mov daa ljmp pushf push sar cmc inc xchg and xor mov lret mov jecxz aad jp push add xchg mov or lods push jl sub xor sbb xor cli jmp push subl or sub sub xor mov add out mov daa xor pop (bad) bnd int lea bound jns mov cmp mov pop xchg popf sub sar into push push sub push ret les icebp adc sbb loope mov les aad hlt or leave dec sbb xor test adc cmp jo dec icebp pushl xchg sarl rorb outsb lea in add sub stc das and pop dec xchg jmp mov jnp aam jne jl sbb cltd or xor mull push sub add and or sub sub cmp and inc imul pop lea mov adc push add xor pop test daa lea sbb test cmpsb pop enter dec loope cmp mov mov pop lds sub fwait inc sub and xchg mov lret movsb cltd jno xchg icebp mov push insb and jne cmp std sub xor clc push pop sub xchg sub inc insl or jecxz mov mov orl icebp sub fs cmpsl arpl sub xchg clc add inc cmp mov mov inc dec loopne pop cmp lret pusha xor sub rclb into ds movsl mov xchg xor sahf sub cwtl ljmp dec bound lods subl and lahf add sub cmp xchg xchg cmp sub out sub (bad) xor pusha xchg shlb push xor jle arpl inc jg (bad) aad mov or jecxz cmp es imul jecxz cmc xchg lds ja push mov mov test iret imul gs and sti push mov out mov xchg mov cmp mov jns lcall sub push mov sti xor scas (bad) mov inc jb or xchg fiaddl sub mov pop dec and nop mov sub hlt push xor push pop rorl imul inc out sbb mov sbb push (bad) jb mov adc (bad) add and inc mov xchg bound inc xchg pop mov or test lods and std dec icebp and jl and fs clc fwait movsb fs mov addl sub sahf test dec iret xor or test jl inc mov stc mov inc enter xor loope and or xchg shll enter push mov test lahf imul dec dec or iret jl stos xchg loope cli and aad cmp fdivs adc or mov jno lcall dec add fbld mov and jae movzwl inc mov lods or (bad) mov dec sbb pop inc imul pop inc mov jge fistp mov shrl pop popf nop lods out in and xor jge fwait inc and cld push idivl xor mov out or push aad out mov mov clc xlat sub or inc mov or and lds sub or iret push jl addr16 sub xor in (bad) daa mov jbe sub idivb out xor inc inc mov mov das cld sbb dec mov xchg in xchg jle rcr repz pushf xlat push sahf add outsb je inc dec or out mov rcrb out jne (bad) pop xor (bad) aaa sarb pop cwtl cmp and cmpsl lods pop cmpsb insl adc add (bad) ja fnstenv fld jno push test (bad) mov scas mov xchg ret int3 popf dec call sti add or jae mov (bad) push jo pop and ljmp jle pop and lret movsl loopne out and lcall das dec nop mov in and mov aas mov movsl loope outsl dec daa repz gs xor lds or repz mov jo xchg dec lret xchg pop push lds (bad) jl rcll (bad) jmp add xchg les mov add mov sti cld cmpsb (bad) xlat fcoml and lret jo mov xchg pop inc les pop in neg mov (bad) enter inc and or adc dec push jge pop and loope das sub mov imul inc lahf roll sub fstl popa shrl sub jecxz push xchg push jle add xchg neg ds loope xor and iret (bad) dec (bad) push out or jmp dec stos mov and repnz mov cs cmc mov mov test add mov das sar jne push dec fdivrs popf mov sub xchg sbb repz sbb pop pop or pushf push sti movsb pop and mov call fidiv jge (bad) je pop repz adc loope je adc fldenv js jge xchg mov mov mov stos jns or adc mov adc mov dec xchg push rcll push mov and mov xchg idivl rorb mov out int jnp mov nop xchg cmpsb lret mov jge sbb and out add and push mov je (bad) xor xchg sub push out sub and negb sbb fist mov into xlat inc mov ret jbe shrb arpl test sub lahf mov jge add into and aad orb sbb or and or ret pushf shr lahf fsubp out gs cld jl ret enter xchg ret mov fcompl outsb loop adc js jo loope into or leave pop sti clc movsl pop int3 jo cli hlt pop push ret adc and inc mov pushf mov aaa jne out dec pop clc insb stc aas cmp cmp or lcall inc loope out divl mov clc pop push lea xor xor enter enter push adc adc dec mov mov lods inc icebp negb (bad) repz jo xor ret scas repnz loope outsb sub pop add xchg enter bnd lret sbb jmp into pop sar jmp not mov flds inc sub mov mov imul jns testb cmp fstpt xor call mov test push repnz jmp sub hlt pop push push and mov xor sub les ret jp int3 mov std lock inc dec enter movsl pop ret out xor incl movsl mov (bad) loopne sbbb fcomip xchg or and out and rcrb jl push and mov pop push sub pop sbb jne test mov mov add jg popa mov pop (bad) xor mov or or (bad) ds mov ret daa not and ffreep dec pop movsb dec mov data16 stos shr and add ljmp pushf or add sub (bad) fwait jmp sub add loop,pt or add or stos test pushf cli or sbb xchg imul jle pop jp adc pop and push add mov xchg pop (bad) xor sti (bad) or or je in adc scas push mov inc xchg inc sub inc lidtl in daa test imulb mov dec cli pop inc test lret or fcomip out pop pop cmp sub xor mov popf (bad) idivl in mov (bad) (bad) xor cmp stos imul das sub bound fldt jl imul jl ret test fdivr xor rorl adc mov sub test fxch das testb clc and out sub or sbb sbb inc clc lcall testb mov cmp inc stc adc mov pop add popa adc xchg xchg push daa out and test add (bad) je in xor sahf cmp add daa ss xlat jne jne repnz data16 dec push stos fdiv and jmp leave insb ljmp xchg mov cs xor dec push les fiadd xor or mov aas loope and fist mov out mov dec (bad) inc mov neg dec test jbe int adc out mov pop (bad) out pop adc xchg mov scas mov dec test mov fistpll pusha add xor xchg ss and std xchg in cmp pop mov test push (bad) movb xchg or outsl test mov mov mov (bad) adc jge bound in into and std fcmovbe push movsl aad push jno mov div daa (bad) cltd aad das cld sub mov fimull or dec sbb hlt dec sub ja adc out repz ret push cmp dec add xchg scas sub data16 out ss mov popf pop rclb pushf scas gs cmp leave cmp fstpt gs outsl repnz mov pop iret push imul xchg cmp jmp ret add or psubusb ljmp stos mov imul (bad) xor sbb je dec xor lock dec and (bad) jmp sub mov lds xchg xchg mov inc jae fldcw outsb push mov add lret divl mov rcr xchg add fwait pop jne test (bad) mov mull push adc lret mov dec pushf adc cltd mov cmp int xor repz mov jnp mov mov xchg sub jns inc shrl pop add or pop and push push dec das out mov or scas dec pop xchg and icebp sub push pop repnz aas ljmp push pop pop lret dec (bad) pushl insl rcr stc inc lcall inc sub movsb stos int3 mov addr16 bnd lcall and pop (bad) mov ljmp lock pop (bad) je arpl mov subl lret or les jne iret lds sub sub fs das (bad) push movsb push push divb push and mov gs mov pop movsl cmc inc jg add iret xchg push and icebp pop adc adc sub (bad) xor mov scas inc push push cmp (bad) mov mov jbe imul mov daa jecxz mov js lock xchg stc clc pop leave xor and js mov push mov xchg cld fildll mov fstps cs mov sub out das notl push adc pop cmp lock popf insb in inc sub cmpsl inc rclb call xchg sti int push pop dec mov ss (bad) xor cli fist cmp jmp int gs jns pop mov jge sahf popf int3 mov scas clc inc cmpsl sti push ljmp xlat sbb adc fmuls sub (bad) cwtl aaa cld cmp jmp lret (bad) jb jmp and sub dec mov mov negb xor mov and sub and stc inc mov (bad) jmp jns lahf xor push movl jge mov scas add or push pop push pop mov aaa xor push and mov into std push xor and cmp and pop mov pop pusha andl adcl push lods sbb mov xor cld push inc jne sub sub mov xor add or les push sub dec inc xchg jae pop icebp jecxz xor dec and pop add jl in mov sbb mov mov and dec pop lods enter sti mov xchg sbb mov into mov inc sarb fst jmp pop push and lret pop rcll adc test add xlat sbb cli dec insl jmp adc inc repnz push or sahf dec dec fildll mov pop cmpsb push and add test nop loopne movsb stos dec sbb out add and mov dec pop or dec (bad) cmc jg mov insl cmp add push aas inc mov loop inc out test pushl aaa repz icebp add or adc add mov test push fisubl add jle movl push pushf push dec mov jne xor push add lret sub mov or in lds sbb and add sub pop daa and andl push fcomp and xor lret sub cld sub inc call fs cmpsb outsb lret or pop shl cmp sbb rol sub push inc inc cmp (bad) push inc push jmp push pop pop scas mov dec or mov xchg (bad) and (bad) popf lods test xchg cwtl mov (bad) int3 or leave sub and (bad) movb pop push mov and jno in mov inc out mov (bad) mov add xor movsl fs dec xchg not fcomps rcll sbb imul cltd mov xor mov fsubrp sub daa and push (bad) sarb (bad) movsb pop add lahf cld jge adc iret movsb pop lret jmp mov jne mov mov pop dec call and xchg shl movsb out sub ljmp xchg sbb mov mov dec pop xchg add cwtl inc xor mov (bad) daa jecxz xor ret inc xor fiaddl fcmovnu inc outsb mov cld outsl push daa js jae mov mov xor std loop cmp jecxz sub mov adc xchg cmp xchg ds aas movsb rclb jbe xchg adc idivb pop add mov sti mov dec scas sub adc xor inc sbb out sub imul xchg enter rcll mov sbb std push lock call out sub ds fsubrp add enter rorb cmc push sub mov jg ljmp mov into xchg enter lret dec mov adc mov mov nop gs popf cmp or and icebp sub ret sarl cltd mov shrb rcl inc xor int3 or mov out stos (bad) xor out fmulp add mov mov in outsb loop jae lods cltd dec fcoml cld and (bad) mov roll (bad) out mov sub inc movsl rcrl cli xor push scas jmp mov jp clc and pmuludq add ret adc inc mov dec sub popf insb jb loop push aad pop repz or ljmp shl dec and xor js or or jge pop fidivr sbb xor and ficoml sub aad loope shlb in mov sti add fbld enter mov sub cs xor inc jge movsb xor mov pop lock jbe out adc outsl mov daa sub sbb das mov sub mov jecxz sub icebp ljmp or scas lods jne aaa aad out lock xchg mulb jne inc xchg or sti cltd mov push insb and scas ja daa ret pop icebp fs pop sub dec add mov notb xor jmp lods mov loop xorl test mov mov (bad) cmpsl inc jl sti ret lret or add or fbstp imul mov xchg ret sub sbb hlt add add push sub push lods jge,pt mov add mov sti push cli aas sub je or mov out push rcl inc xchg aam xchg icebp jecxz mov push fnstsw dec out gs orl sub adc orb mov sbb cmpsl (bad) xchg xchg xor add add and xchg add push rorl mov add stos xlat jle add loope fidivr rolb add push push push aas pop add je lock loope dec dec inc mov dec aas xor ljmp adc pop lds repnz or add sahf sti pop pop loopne and push add shll dec fwait add pop pop add lock ja daa or not xlat or mov pop inc adc (bad) pop mov push dec add pop pushf lock sub pop add imul pop push mov mov jle add rorb xchg not mov pop jno mov pop inc popf roll cmp lcall fist xchg xchg and sbb jl inc nop ror jp sbb les outsl add push out scas jbe jne clc neg not (bad) das dec insl pop loopne mov rcrb jo mov cmpsb shl mov push xchg rcrb scas add mov mov fdivs sarb mov das pop pusha pop incl fldl ljmp adc xor pop push mull add adc sub sbbl xor call adc mov push pusha aas cs adc das popf add repnz jg in insb xor lds outsl sub stc in inc or int and lahf in push aas jl cld xor lods add aad neg inc jo pusha push gs add xlat rcr outsl sbbl mov jg add rolb out mov inc (bad) iret (bad) sbb pusha push mov adc mov mov pop pop call ljmp rorl mov (bad) lock and pop mov lahf jl inc (bad) idivl stos bound aad pusha and ljmp add out mov cwtl cmp fidivr in sahf mov sbb jle fs ljmp jno cmp or (bad) lods and ret int3 xor ret xor lret mov sub leave inc pop icebp ljmp and das add pop sub or xchg ret xchg push xchg idivl pushf mov dec xrstor mov cmp mov xchg out daa aam das outsb mov shlb cmova lahf cmp push mov adc xchg movsl xor stos or jecxz inc push add (bad) dec cmp fnstcw (bad) and push push lahf rcll fstpl cmp (bad) outsb call into xlat into jae cwtl sti clc xor adc sbb cs int3 daa pop mov cmp jnp and imul lahf dec aad (bad) xor testb xchg mov ds ret lret bound pop int3 std daa mov push xchg mov out or jmp jns ret jno xchg jmp add and jge (bad) cli or push imul roll fucomp xchg xor mov (bad) repnz xchg push or test fistpll test or imul push clc jl enter or cmpb sub rcl mov jmp bnd arpl or or fadds adc add mov pusha adc push xchg subl in dec inc xor std into bound sbb and fisubl sahf add out push pop mov fbld inc test xor xor xchg ja fidiv mov sub mov mov shrl fbld sbb and (bad) aad hlt mov mov pop stc adc cli xchg mov cld jecxz jle adc loope adc shrb adc cmp inc inc jnp push lds sti mov ret push push sbb imul fbld push xchg popf pop bnd mov add sub mov pop jg sub lods inc shll sub or sub and dec mov mov pop int out lret iret pop sub xor mov dec jno lret jg or xlat das std xchg ds (bad) ljmp and je cli fdivrs pop cmp or cmp push xor aaa lahf inc imul repnz mov push clc movsl fbstp nop out cwtl pop inc js lock push mov adc sbb ret icebp mov xor iret cld in mov (bad) ja push enter xor movl push out xlat movsb shrl shl aam daa or adc sub popa mov lret xchg dec jg scas repz pop xor jge or xchg jne mov inc jb es ja aaa xchg adc pop leave (bad) ja inc dec pop pop sahf xchg inc mov dec (bad) ja pop push sti add sub pop xchg and sub cmpsl aam loop or jg inc mov or das test movsb pop add and stos call fstps mov leave (bad) icebp cmp out or (bad) std (bad) (bad) aam fnop inc push ret jo sti jne mov cwtl das xor xchg jge pop gs and pop mov or lret xor std push sarb movsl sub pusha mov mov and js ficom fsubrp xor insl pop mov and orb push mulb push jmp and xor mov decl je cli sub or fstps mov aas or daa into lea idivb lea das into mov jne stos es (bad) pop add xchg push loop (bad) ss (bad) mov cmc mov into sbb adc pop add sbb push or sub inc loop push pushf xor sar outsl add out mov loope jg stos sub movsl adc jecxz add addr16 out sub dec testl dec cld cmp loope jp int call adc or or daa into jns dec xlat lea xor cmp fmul ret add jg mov push sahf out sub leave adc mov and imul pop sbb adc lret sub push inc add xor enter jno xchg ljmp mov shrl int3 pusha enter mov mov decl sbb aad sub shrl sarl cmp stos and daa movl jmp pop cmp xchg leave imull xchg or daa and (bad) (bad) mov pop shrb je daa or inc jg add xor ret xchg sub push push das sub or and insb iret cmp jmp xor in dec fisubrl ret sahf iret sub int test movsl mov scas std das movsb push inc inc or or push scas and iret or fbstp pop icebp lea (bad) mov fstpl pop fistl pop mov adc add ret and pop cmp ja mov or dec mov push (bad) sub push hlt mov add ljmp push push inc pop and xchg or test mov (bad) fcoms loope push loop (bad) push mov call mov lret std pop (bad) and lret dec nopl push (bad) arpl and fs stc addr16 pop mov sbb jb dec imul inc aam mov adc repz sti stc mov shrb jl out or mov mov stos xor adc mov ljmp xchg (bad) decb fs jae xor out ljmp add mov and sarl stc sahf je outsb out pop mov xor xor sbb pop enter mov mov out add jae jg cli adc sbb and sti ret push lock scas repnz xchg mov sub xor sub repz sub test leave repz fnstcw jmp dec mov and xor mov loopne fsubrs negl leave fistpl add lds inc scas nop mov push sahf push es or mov sbb add loop shrb adc lret jne xor mov mov dec and add add out mov sahf test dec out std cmp xchg dec sti bnd aas dec or fisttpl loopne add cmp cmp jb dec pop sti mov push add lods and inc jmp or xor movl outsb push popf jge lods mov xchg gs das pop inc push fidiv fs test mov leave sarl pop fcmovne inc push xchg shrb (bad) insl push ja je mov and pop mov cs push (bad) jbe imul push lcall lret ja sti repnz loop jno inc (bad) sub pop flds pop (bad) mov test ljmp xchg inc call lock mov xlat mov leave add xor es adc (bad) push sub pop aam or cmp std inc xchg movsb iret and pop pusha sbbl xor notl dec add add loop repnz sub jmp (bad) pop aam pop test ss pop in mov mov loop add scas mov adc xor mov push (bad) iret sub xor push mov std jne pop jne outsl lods mov shlb movzbl les sub ja xchg dec (bad) in ljmp sbb push xchg mulb ja lods lcall out sub cmp das cmp fwait shr ljmp outsl das and or xor pop mov outsb mov mov pop mov lret loopne,pt ljmp icebp loopne sub mov push add cmpsl xor pop xor jmp jmp xor pop mov lods cld movsl in mov push out (bad) sub outsb pop int3 push out or dec pop push xlat pop (bad) lock into sub test movsl idivb es lds daa add fs adc std or (bad) das loope inc mov xchg mov lret jo (bad) in push dec iret mov jae sub mov add sbb sbb outsb dec lahf or lds enter je push inc xlat xchg scas cwtl xor std mov les out cmc shrl das mov sub cmp jbe dec repz out and mov add cwtl xchg sub ljmp add pop scas cwtl jbe xor inc les xchg into andl outsl movsb repz adc rorl ret adc std cwtl test sub mov nop (bad) out mov repz and mov xchg inc lcall int3 cmc icebp (bad) mov scas gs call stc ficompl pop movsl push push movsl mov sub push out xor push mov mov insb lret xchg stos loopne adc lcall dec sub idivb xor ds movsb (bad) dec into pop pop movsl pop negb mov dec xchg push mov dec (bad) jb or clc jg and add lret stos add enter cwtl sub daa rcll dec jmp mov lret add jmp or and iret xchg loope lods insb push mov mov xlat adc adc xchg mov aam in mov cmp into leave testb and sub jmp nop ds sub push movsl scas jecxz sub rcll push fldcw dec add xor pop mov mov outsl test shr dec fisttpll (bad) mov je (bad) sub ret movsb xchg scas adc mov mov loope les dec jb jge fistl jg pop inc add jne sub jle lret popl pop or jns mov and dec cmp mov or push pushf hlt fs repnz push mov mov inc mov add and cmp fistp in jmp repz xchg int cmp into jmp sub sub imul dec scas fisttpl mov std xchg icebp and xchg test daa or dec lret iret (bad) xor pop add mov hlt sub out adc (bad) xor cs into mov inc push add mov dec mov hlt ja sub aaa cmpsb mov xor call and mov and xor pop test mov mov mov daa (bad) ja sbb insb mov lret in lahf je jb or jbe jp out imul mov cmp mov jecxz movl mov cltd dec ret shll inc je mov dec pop ja into mov imul or jg and mov pop ret jne add mov int3 fstps lods pop mov pop sub daa and and or (bad) mulb ljmp mov xchg (bad) sti mull or ja fdivrs cmp cmpsl stos pop or ficom mov add adc mov icebp jmp cli mov scas shrb adc (bad) mov loop mov push push movsb xor cltd arpl shrl mov out cli fstpl mov rorl ret scas or jbe pop je bound repz add fbstp sahf mov roll pop into sbb sti fldl and ror das xor pop out and in pop fisubl jno mov cwtl xor out iret xlat pop loop push sti push cmpsl lcall add je or sub add mov pushl popf rclb lock xchg xlat xor popf call into (bad) sub movsl sbb (bad) jl fldt divb scas notl ret adc scas jne mov inc cmp adc pop add mov push sar les repz inc fisubl inc inc pop loope add jne mov mov shr inc mov xchg xchg mov movsl mov repz sbb dec lret out bound repz arpl or shrl outsb add push shrl xchg loopne xchg jmp push xor jmp insl add lods adc data16 pushl mov (bad) cld xchg add jo xchg jno push add inc aaa pop cmpl push mov xor jecxz mov and adc stos int3 pop (bad) mov ljmp and add sti loop pop lea mov pop mov lret xor add fyl2xp1 movsl fstpl aas cmp cmp int xor mov add idivl lods cli sub xchg sub dec daa sub aad into repz shrl cwtl outsb (bad) test add stos (bad) fisttp scas mov and add mov ljmp mov mov fmull pop int jmp jbe jno adc test ret scas bound mov notl dec adc xchg sti xchg (bad) stos xor sub xor stos lret jne out lret xor push and daa popa jbe push inc pop push pop (bad) cmpsb scas xchg aas mov cli mov push hlt int ja dec xchg cli mov pushf popl push cmp clc (bad) jnp push (bad) xor add and or mov mov xor lods jb mov dec scas mov jmp ret cmp rorb mov dec jns hlt ret mov adc cmp cmc dec jnp dec popa jl (bad) icebp int adc bound ds jp xor imul inc imul mov inc les int outsb loopne pop mov icebp ret jl leave inc cltd clc mov dec and cmp cli mov movsb cmp push sbb pop xchg aas test leave pushf jo push sbb jl and mov dec adcl or or or pop mov jmp out pop mov icebp stos mov into pop ljmp mov or das icebp cmpsb mov not vlddqu popf loope out push sub push in jle mov mov sbb add sub jmp add mov mov add xor xor xor (bad) mov push adc cld ret mov jne push push sub xor sbb and js test fnop dec or hlt repnz cmp dec dec lcall and dec lret psubusw add cmp and lea outsl mov push ret push in sbb scas pushf cmp fidivr aad shrl ja mov daa mov int3 jno sub cld test add jge add dec or daa shlb int and mov mov push cmp scas or xchg sbb and add aaa (bad) dec mov mov dec dec mov pop sub icebp and call jp fnstsw aad scas repz std mov aad imulb pop repz (bad) or clc inc ret push adc iret mov jae in xchg mov xchg clc call lock pop dec push std jnp imul rclb aaa ret mul gs mov nop mov (bad) imul test movzbl cmp iret sbb add das ret mov daa xlat sbb sub jp in shr scas adc sbbl dec iret mov xchg notl clc lret cmpsb push sub das and std sbb aaa pop movsl sarl and mov mov or pop dec lcall xchg mov mov setne pop or lahf repz lahf scas jne push cmc repz cmp pop fwait loop add mov shll in dec add xchg jmp sub pop push mov pop mov cmpsb cmp push ss int3 movl sub aad roll add jbe rcll pop icebp mulb jmp bnd cmp cmp adc (bad) cli cmc aad scas data16 cli adcb iret stc (bad) mov aad add pop fstpt or pop daa test cmc or sar xlat cs sbb xchg repnz push clc cmp dec into lock jmp (bad) pushl lahf add pushf jl jp mov xchg dec clc out push in xor and cltd clc sub (bad) pop ret movsl icebp pop mov rclb xor mov ss fdivrs fwait in adc (bad) in mov mov xor and loop cmc addr16 mov mov jmp sbb and pop shrb fst ja jge cmpsb mov mov or and add clc adc mov clc mov insb out sub add outsl cmp cltd addr16 mov (bad) and jmp mov negl push popf ja add stc xchg mov pop stos mov add (bad) loop mov stos repz sbb loope or fsubrs or lcall jge xor adc xor subl sub loop cmpsb inc add sti push psllq xor push inc hlt and and xchg ret add mov roll popa sub inc xchg (bad) je gs mov jecxz movsb mov xor fs clc es movsl mulb cmp imul ffreep shrl adc jmp sub add sub mov idiv mov pop xchg dec imul push lret xchg dec xlat hlt mov xchg les out xor shl aam not adc xor jg in xor rorb mov mov repz fnstenv in and mov decb jae ror aaa aad int3 (bad) cld jno repnz add inc adc pop outsl mov push (bad) fsubrl ret xchg in int3 cmpsl jg in jmp sbb jge mov sbb add test movzbw push daa mov mov cmpl fild and or mov jne mov les stc add lcall mov and add xor push add faddl or rcll mov xchg test dec jge cmpl sub sbb mov mov imul inc sbb or add or or jl and and push nop incl lds pop push xor jle mov test movsb and int pushf test jge jg jo (bad) add lods jnp rcl sti cmp orl cmp lds push or push push (bad) or add add add xor add mov ds cli repz (bad) push push in das ret into jo pop mov out sub shrl es aas sbb sub xor imul xor pop or ja pop jp je or adc adc xchg pop mov xor lea aas div dec jbe lret pop out call arpl push add mov inc cmpsl lcall lcall (bad) or mov add inc xlat out das mov adc sbb push or xor ljmp adc lret out ja adc pop sbb rorl sub add jge into inc mov int xor mov mul fstl sar jle imul cwtl data16 addb loopne rcrl idiv cmp sub popa adc movsl mov pop mov jns cld xor mov (bad) repz jns and repnz aad mov xlat sub and mov sub sbb ret sahf adc adc popf scas jp xchg ret repz push sbb jp fidiv enter jl ljmp or fbld mov dec xor mov mov (bad) add or add ds lret (bad) and enter out sub outsb lahf sbb sub popf jle repz push (bad) out fsubrs mov xchg pop rcrl daa mov (bad) ljmp stos xor xchg fistl rcr jmp ret and nop fimull iret cld imul (bad) jnp adc stos cmpsb jp (bad) daa jg xchg sub mov cmc inc dec or fwait jae mov jge cmp sbb cltd xor pushf in jle jns xchg sti ret (bad) test mov subl and ds lock icebp jne adc je jp mov xlat add fldenv imul (bad) mov ret iret jne mov cmpw stos (bad) das stos cmp stc push sub jne ljmp movzbl bound fcmovu out bound inc push or sub jecxz pop jmp push push xor or mov dec xor clc aas fwait mov jbe push dec jmp mov or hlt lds out loop push xor push into mov jae cmp lcall push ret push ljmp pusha paddd add push fxch mov push bound dec push xlat shll pusha cmpsl icebp loop xor jp repnz enter andl lock push xchg and and repz xor test lret mov repz lahf je leave xlat jns call dec sahf repnz aas test fsubrs fs push sbb in sbb dec push mov and dec (bad) push or stc and add mov and mov jmp xchg jbe (bad) (bad) scas cmpsb clc inc push ds unpckhps pop (bad) mov xchg jnp out movsl jmp or cltd aas and imul cmp pop xor cmp lea aad repnz std out pop lock xor jnp subl ret adc scas mov add inc shlb pop sar jne pushf shll pop leave dec sub push out out mov daa stos gs addl outsb mov shr movsb cmp pop add imul pop sub cld fisttpll xchg out dec (bad) repz adc out fs pop aad loope or add pop xor das sub lcall es repz pop cli sub inc arpl movsb mov adc mov push ret aam push jg pop jne xor rcrl sbb scas cmpsl fnstcw mov add mov jmp sti aaa add cmp push idivb outsb movsb and add jbe jo push xor dec inc and in cwtl or pop xchg mov sub out adc lods test (bad) hlt loope jle ret imul adc mov movsl scas roll lods sub shr ja fs mov and rorb xchg lea cmp xchg lcall gs adc loopne xor ljmp xchg cs cmpsb xorl and lods insl test scas daa daa or int3 or (bad) int3 xchg decl leave sti mov push xor sti xor cmp movsl movsb inc jg add (bad) imull or out repnz (bad) dec add lods call inc pusha sub into inc dec scas cltd pop imul xchg scas pop or xlat gs aas dec mov sub xchg lret faddl pop movl sarl jp ja popf roll sub pop pop std (bad) fsubs ds (bad) mov roll rol mov sti aaa fwait loop (bad) loopne lcall adc cmp and jecxz and and sub jbe das and add mov sar and outsb (bad) repnz sti movsl fisubl sbb add in adc aas sahf sub into mov aas add gs je out push cwtl ds jmp push sub (bad) inc sub and pop sbb ret aas mov mov jns xchg fcmovb mov mov add mov xchg cmp lret cmpsb movsb repz dec ljmp sub or xchg loop adc (bad) mov lret cwtl mov test pushf mov and mov nop loopne mov dec pushf clc divb popf push lea pop (bad) enter cld mov daa push cmp mov cmpsl pop add aaa dec pop and cs fs add add loope cmp xor dec mov push add popf jbe (bad) mov ljmp scas sub xor ret lock push dec push add jbe icebp mov jb jle dec mov pushf loop leave icebp call out xchg iret mov rsqrtps lret or xchg scas gs add and pop add push fidivr aaa adcb push xor pop jle mov xor out adc inc loop orl cmpsb (bad) and push pop clc mov mov out and dec daa icebp ja aad jge jecxz pop dec and pop (bad) leave or shlb push pushf cmpsb pusha or int or mov push push add lods movsl xchg sbb sahf fsts xor and out daa repnz xor or lods xchg mov pop fisubr (bad) cli icebp repnz dec mov arpl mov sbb sub xchg lret insb or and std xchg adc int3 loope cmp iret mov xor loope xlat mov add or lods mov lock xor lahf mov (bad) xor lds jl sbb push sub jo ret and out pop test jbe shlb rorb mov dec lock ret and pop adc xchg ljmp repnz cmp xchg push xchg mov leave pop test mov fs (bad) ljmp call psubsw push jo pop xchg loope sub int3 mov jl or out sub aas movsb and repz jmp out adc dec iret sti lahf data16 repz pop out nop jmp mov xchg sbb sub or xor xchg (bad) popf pop push xor add pop mov pop movsl pop or fcompl dec lods pop and xchg adc sub cmp ret cmp xchg xchg mov and push jl jmp inc dec dec and add int3 inc and mov and and ret mov fild ja jb mov jne xor mov (bad) jmp fs mulb iret and cmp xchg jns (bad) out mov cld xchg sub fstpt dec pop roll xchg push stc fbstp loop cmp sbb scas repnz hlt lcall loopne mov test pushf call add mov cmp jmp fcmovne pop out push mov fsubrs push jle hlt push fcomi mov add push insb xchg mov out add dec cmp fnstcw fwait adc cmpsl pop inc mov lret (bad) shl (bad) (bad) call or push popa or mov fs stos jmp mov loop jne jo clc jo clc cwtl pop out sub dec rorb mov imul xlat std cmp dec das mov out repz (bad) sbb arpl mov out in iret lret shl pop sub jne dec cmp mov lret sub sub jg jl jnp or or sub (bad) mov xor inc sub aaa xor sti xchg repnz xor push jb out (bad) push sub nop mov jb repnz das sbb in and mov or cmp and xchg sahf stos call outsl mov test fdivrs mov lods dec xchg cmp lret cld dec mov out mov mov ljmp add xor lods loop out cmpsb jmp push and (bad) scas frstor cli push test pop enter roll xchg add aam stos loop xchg scas sub mov sub jae mov inc push xor add (bad) sub mov in adc jnp les into jnp xor and and adc loope movsl adc lock jge insl lret inc sbb or setno fisubr push shrl imulb test mov or push inc jp mov jmp mov wbinvd or mov mov jne xchg sub mov outsb jmp xor adcb inc jle dec leave scas jne out jb (bad) xlat push imull push ja or imull (bad) fist stc push lcall and mov cmp sub scas fnsave movsb mov daa out leave (bad) lods imul adc sub xchg pop xor add cvtpd2pi xchg int loop in ja pop int3 in popf lcall or and je adc rep sub aas rclb sub mov or cmpsb out in mov lods sbb pop push out and sbb dec (bad) cmp dec push stos xor jge adc or mov das mov or (bad) shll sbbb dec in push ljmp clc sub dec out and icebp (bad) dec into fcomps iret cmpsb pop (bad) mov stc scas das jg icebp vmwrite or sub insb mov ljmp sub xchg pop mov xchg sub popa push idivb and cli repnz shl or jle push loopne and jp add jno mov pop sub addr16 adc mov ja jnp push nop or pop xor pop mov aam adc dec daa je jp push mov loopne jno add mov sub pop addl dec or cmc out push pop sub dec pop adc sub mov push mov sub lea subl loop push adc (bad) rol rcll pop int3 or push mov inc and test lahf dec xchg aas das pusha jg ret sbb sub jmp or sbb jl and aaa mov ja jg mov push les or ljmp das insb scas mov pop sub add mov jmp adc pop add sahf outsb (bad) sub and mov dec mull cmp pop lock pop xchg clc and jno ret enter pop cwtl adc fdivs fistpll addr16 pop stc stc out popa pop dec add pop into ja rolb jle and add (bad) call xlat xchg call mov jle repnz xor pop push std mov mov shrl ffree repz lret ja add inc pop mov mov cmp daa and cmp ja push push sub xchg out je adc dec fucomip xor ret ds jno out out mov movsl jne movsl mov daa push sub scas mov fsubs (bad) xor mov cmp mov mov fwait add xor cli call mov or fdivs lret adc cmp jmp add xor (bad) (bad) dec out pop clc mov mov or jge pop or sub dec icebp mov daa add idivb scas arpl cli add sub inc mov pop jbe daa icebp fistp shll sub mov (bad) mov fnsave inc into inc ds cs stos imul fcomip jae mov push and add cwtl fidivr push mov das pop jle and mov pop or add inc ret sub scas mov sub xchg xchg sub fnsave sub pop das add jne lret or sub and je adc daa mov jg insl and mov dec or xchg pushf mov xchg imul rcr mov add sti mov movsb push sub lret push and push cmc test cmc or push in xchg mov push gs sub add fadds negb shr jmp enter (bad) ficompl cmc push sbb mov fstps (bad) jbe sbb xchg fistpl and orb mov mov repnz xchg mov (bad) xor (bad) dec push lret pop or fs xchg cmpsb cmpsb xchg imul sti and and xlat jb xchg sarl (bad) adc cli test mov inc sub bound jp push and out add mov mov addr16 or and jge mov and dec (bad) push xchg or fidiv dec mov ds jg jle sub (bad) xchg pop cld xchg in daa ljmp jmp repnz and push insl out das leave icebp push lret ffree pusha or adc lahf sti xchg hlt pop jmp jnp or rcrb jmp notl xchg or xchg outsl mov sbb xchg inc xor pop rol mov out add and or scas iret pushf lahf xor and push push cmpsb shrb ret xor jmp jge push adc (bad) jo into imul out je test dec lret mov (bad) cmp (bad) ds dec test mov xor stos pop pop dec nop or aaa sub les pop adc movl and lret nop adc fistl mov xchg bound and and pop cmpsb dec mov add pop dec int3 les xchg dec mov out and pop (bad) insl pop push or outsb imul xor imul jl roll int3 adc mov lods jb xlat imul adc cmp rcrb ljmp xchg pop ljmp in (bad) xor mov push imul inc pop sub movsl xchg jne cmp in push mov daa or aam call mov xor fsubl sti lea adc cmc pushf cs jg xchg sti popf dec and aas clc lahf dec scas into in in rcrb pop jmp sub (bad) pop dec lret sub (bad) (bad) iret sub pop and xchg test mov push rolb jmp dec test fsubrs or out add lds sub adc add push sbb adc pop mov popf out hlt mov movsb pop cmpsl inc sbb cmp repz adc ret pop aaa cmp inc fstl cmp push into and insb dec clc stc loope and cmpl imul mov lret test add lahf nop pop mov cltd idivb cmp push xchg imull push test or add add jnp jo lods mov in push mov xchg adc mov sbb imull dec into arpl rcl mov mov ljmp out bound loop adc sbbl bound das ror leave pop stos adc mov pop lret test mov or shrl repz mov cld inc pop jecxz mov das iret pop xchg incl cmpsb pop mov popf xchg xor jg mov xor push push iret fwait gs xor xchg lods cwtl (bad) push (bad) push jne jge dec sbb xchg loopne clc clc dec leave clc imul cmpsl and shr inc aam outsl outsl fisub test cmpsb jbe fstps sub mov daa mov int3 ds and test pop sub arpl scas shrb and sub stc cld addb push mov mov mov adc gs mov vcvtpd2ps mov or cld adc lock sub add xor push clc jne sbb movsb dec daa je ret insb mov sub jno and das repnz mov push jo mov cmp (bad) xchg imul mov (bad) push dec jns mov pop repnz or lret ds ljmp aad adc sub stos jbe add mov jo adc add mov aas push cmp mov imul jmp add aas neg sub ret jmp and iret push xchg fdivrp scas adc or test or stc ret jl loope mov lret xor lea xor mov sbb dec lret pop add pushl pusha sbb sti or pop pushf push adc pop mov jmp mov je pusha add and mov push jbe imul iret cli or ret lret push sbb dec inc cmpsb adc aad nopl cmp call or pushl fucom add cs jne (bad) gs das inc adc leave cli inc mov and mov popf jo adc and xor inc dec adc scas ss jb pop sbb shr (bad) and inc (bad) cmc mov outsb jno (bad) addr16 xorw push adc das lds jne xchg lcall or push mov pop popa or mov dec lods xor jl das frndint inc mov mov stos jle (bad) mov xchg jb (bad) fisttpll (bad) dec pop jmp mov dec or aaa push (bad) and add clc mov xor or cs add add mov dec mov fsubs and mov mov push xor cmp mov sub pop fnstcw in add or call mov outsl test inc add xchg and cwtl std repnz or xorl push inc dec sub add pop mov fistp mov icebp cmp (bad) sar add lret xor xchg and in iret iret or sub or jl jb daa ret sub dec pop xor or sub mov sub sub add shlb dec ret push bsr add mov mov cmp or xchg pop mov mov (bad) jno or out sub std cmp js mov and lret or jb add add mov lods dec dec stos popa or jns sti movsl ljmp aad mov sahf and sub xchg (bad) or push in mov stos cld mov fsubrl jno test out push mov test mov pop pop in or fiadd jmp xor xor jmp xor ljmp cmp movl in scas and sti sub xor sub (bad) and in scas test mov cld test jle inc pop pop add lds mov into jae adc jmp (bad) btr push xchg out mov adc xor gs aad cli mov add inc scas mov sbb (bad) negb in mov movsl rcrb pop add xlat sti or or inc push xchg aaa pop push icebp add aaa pop push push lahf (bad) mov std pop aas xlat mov fucomp inc test pop scas xor push push mov js mov or (bad) (bad) dec push add or push push in inc add jge sub pop xlat test or pop mov rol idiv jmp pop loop rcll xor push mov mov cmp xchg mov insb enter ror aaa rcrb push add push mov cmp movb pusha adc push mov shl mov outsl inc sbb ja pop lock cwtl add out push ljmp outsb push push sti xor mov test fcoml ret popf inc bound (bad) sub jecxz push adc mov mov addr16 dec movl inc push jmp enter push xor jbe ds js cli jo pop scas pusha or sbb cmp stc add inc mov mov jns xor push test xchg les adcb push sbb push push imul lret icebp sub aam pop push ret sub (bad) sbb mov adc es daa pop push stos jne jmp test mov xor push aam pop add and and imul lods out mov push inc pop add pop aaa les out dec movsb add popf push push add push in popf xchg mov leave fs pop fildl or fnop and sub mov sub scas psrld notl and pusha aaa test dec jl dec out jne cld aaa xlat mov and (bad) lock (bad) and test mov sub xor pop sbb cmp inc nop dec fsubrl pop pop mov adc test mov or cmpsl or pop ret push add cld pop dec repnz dec out inc inc xchg add jbe insl sarb aas adc mov sub (bad) ljmp lret into (bad) adc adc cmpl stc fcompl repz ret andb sub test shl jno std cmp xor (bad) fsts cmp test ss mov adc jp adc xor add fnstenv pop stos bound inc xchg pop (bad) ds aam xchg pop fnstsw imull add lcall in mov pop and idivl or mov and mov enter add pop mov rorb pop xor mov mov push push syscall (bad) sub and sub stos adc xor lods notl (bad) or or sub mov jp cld movsl mov xor pop mov cwtl add call add (bad) sbb mov popa inc or sub gs fisubl xor ret sub cmp pop dec mov pop pop test xchg clc and push pop pop notl xchg insb leave mov dec pop add mov repz mov jbe adc jmp mov data16 sar decb or push push mov call lods dec mov data16 aad into sarl aad iret push jns imul (bad) data16 dec fnstcw jl shr lds add or jns dec adc cld push jae xlat out dec out lods pop in bound push daa enter and das sti pop add and inc scas cmp sbb xchg jmp or mov into (bad) jne loop jle add daa cld sub inc or lock sub int3 cmp adc jle mov pop xchg pop in add sub sbb mov xchg faddl lds ret xchg out lds push enter push (bad) xor xor aas test jne mov out std gs cmc dec mov cmp insb jg xor test add int3 add in lock xor add in lock fcomp dec (bad) sti arpl cmpsl xlat dec test mov fucomip pop lret (bad) stc adc rcll dec outsb mov add aad lods std or sti push mov or pop std cs add imul daa loop or mov stc imul dec into mov xor jnp sub inc aaa popa pop xor sub jmp push das in and adc mov and cmp mov sarl cmp gs fisubl in das inc decl adc movl aas mov fimul ret cld jmp xor dec add pop pop inc xchg or jmp xchg mov rcrl mov or mov jae (bad) and popa ss push nop dec sti adc jmp push mov pop pop mov mov mov lods std insb enter dec lds rcrb fs xor add add sub cli sub or in lret sarb les xchg pop or and cmpsb mov xor inc push push icebp xchg fs add and out lahf inc shrb outsb sub aas test dec stos sub xor in orl sbb jl jp and inc fbstp push mov adc mov sub xchg ffreep scas push test pop mov and dec stos mov jmp mulb cmpsl sub hlt idiv pop jmp stos bound push shrl dec (bad) repnz inc lahf scas into imul mov or (bad) int popa add or mov out lret je (bad) pusha and add mov jno cmpsl jne dec pop je (bad) repnz and lahf nop sahf pop pusha insl and mov sti lret orb lcall inc adc sbb test add inc popf add or mov lcall stc pop inc adcb cmp cld popf (bad) mov (bad) xor add jae push sbb icebp mov push test mov (bad) xor repnz std xor dec fcmovu (bad) and push xor sahf and sub pushf jno or sub leave push jno mov stos les pop mov mov (bad) scas gs in sub add movb loopne cs fs in test and xchg (bad) mov enter push aad sbb loope jnp jle xchg mov lahf das fsubl ret jne mov dec or jns jl fsubrs movsb out int3 lock (bad) stos xor xor out push sbb mov or pushf shrl daa push std adc dec ljmp rorb bound sub xor pop bound cld movsb mov ret or pop mov pop scas bound push pop sub and xchg xchg mul dec and adc pop in rclb pop pusha aas ljmp push pop jge or add imul mov out xor mov mov sub rorl mov ret lret mulb fcmovu imul inc sub mov daa jl rcrb inc mov pop into nop dec xor cmpb mulb js and and adc fistl imul and jg push and adc iret cmpsl jl fistpl cld xchg mov pop je icebp sub mov dec add imulb xor daa sub xlat dec push popf pop jmp jmp push mov imull mov (bad) add dec push ret psraw add push push and jmp stos aas and les jecxz,pt cld xlat fs shlb lea sub mov xor ljmp and cmp mov sub xorb xor mov or cmpsl jecxz cmp shll fmuls jmp mov pop mov push and cmp sbb rclb mov cmp pusha jae mov sub pop push in (bad) sub inc div and dec push jl and lret add leave mov add cli and test ss dec push add andb shrb out pusha push ret dec or dec ret dec stc pop pop sub mov mov and dec mov outsb stc push sarb mov and and call ss int3 xlat popf jg or (bad) mov mov repnz hlt scas into push and sub adc mov dec xor loopne icebp sub leave pop and stos jp pop (bad) sub mov mov ret dec and stos sub xchg xor shrl negl xor and add shll mov sub xor mov mov cmc cmp xlat jnp inc out mov arpl rolb test xlat cmp adcl sub jle jmp enter lea add pop movsb adc iret test shlb es xor xor jp ljmp (bad) fsubrs add pop and lock xchg sub lcall inc mov cwtl inc shll cmp dec and mov fidivr sbb out lret decl sbb ss cmp daa into lcall fnstenv sbb gs insl div jne cmp movsl pop daa sti adcl mov push (bad) xlat adc dec add lret cmp (bad) aas addr16 int jecxz inc xor add cmp dec loopne pop lds faddl out cwtl fsubrl mov (bad) dec jmp je dec push fsubrs (bad) sub jnp (bad) rclb mov scas les fsin loope call in mov leave shll xchg mov pop sub dec mov addr16 icebp mov mov out das out sub push std jmp insb inc cli jmp lret pop (bad) cmpsl (bad) mov out sub jb dec sar stos sti loope jg icebp (bad) cmpsb or scas out dec sti mov fldz xor inc push call dec ret jmp out pop push iret aam shrl mov sti out jle das inc cmp movb imul xor pop aam into stc pop cld inc xchg stos lds mov ret or mov aam dec mov addr16 and lret fimull mov pushf mov popf push repz pop hlt aaa fcoml imul roll mov (bad) fmulp ja or (bad) insb mov gs jecxz out pop fcomp aam adc cmp (bad) mov mov arpl mov aas out push xor addb pop pop negb jecxz call repnz jmp sbb or nop nop mov or xchg sub mull xor pop sub test stos inc sub sub sub pusha das sub jnp sti (bad) xor mov mov dec pop fisttpll test add lds xchg mov sub push xchg push push xchg test and add movb xor jnp sub dec negl or rclb aam popa add sub mov cwtl cmpsl pop clc mov pop adc and push ret xor pushw fildl lods add mov repnz push fs pop stc scas dec lock inc lret adc imulb sub in in les fucomip mov jbe mov lret loop (bad) push aam leave hlt je mul dec mov gs sub popf jbe xor call aam leave lcall mov out cmpsl xor jg jns insb pop push leave fwait or sub hlt jmp or sti mov iret and inc addr16 lret pushf (bad) dec out mov xor xchg sub and mov mov notb imul pop std repz idivb pop pushf push cmp xor clc and (bad) pop and mov aad push daa js popf sbb dec mov stos out jnp repz adc scas (bad) sti pop jmp xor dec sub das in pop and add das jb dec je imul test lcall mov sbb iret in daa std lcall sub and in int3 dec mov inc add test loope or mov inc mov add inc (bad) dec push in dec shrb jmp xchg push sub lods xchg (bad) clc pop sub or ljmp pop dec lret mov and in cs aaa cmp fidivl (bad) ljmp ja (bad) jno push sbb lods inc cmc mov dec loope inc in mov cld stos sbb pusha add sbb lods xor cmpsl cltd inc imul jbe cs sub daa sub xchg xchg mov repnz add mov adc xchg out (bad) jns ljmp (bad) fsubs hlt lock fnstenv xchg dec test mov xchg ror sarl pop jmp adc (bad) test ret daa rcrb sahf lcall jne int3 ljmp xor sub (bad) adc sub dec add adc xor out jns xlat lods loope icebp icebp sub inc rcr mov cmp ljmp and xor xor out lret and xchg insb and cmp lahf in xchg cli loop mov xchg movsl je pop pop mov dec push (bad) mov (bad) and xor ret imul (bad) out ja negl mov push ret pop jns pop sbb jg and pop adc sub and mov lahf iret call sub in icebp (bad) or sub out jl in fidivr adc mov xchg repz jns ret jne or cmp movsl mov and or pop (bad) cmp stc fs mov loope sbb jbe dec jmp idivb ror inc pop pushl out rcrl das mov imul (bad) (bad) sti addr16 adc mov jbe loop adc pop cwtl leave (bad) mov adc aaa sub icebp rcrb sub (bad) es insb adc mov pop insl pushf ss dec icebp xchg inc aaa mov inc pop xchg repnz adc sar imul sub ds in (bad) mov pop in xchg xor idivl mov xchg lret add jae adc mov fldcw fistpll leave dec push add (bad) mov or cld and sub mov inc inc mov jns das pushf stos in dec sub (bad) jmp mov pop and jmp imul add imul rcr jg aas xchg push lds add or mov sub push pop adc lods fiaddl lahf popa mov add icebp push pop imul aam and sar adc sub (bad) scas mov jp shrb clc dec mov or ficom movsb push imull popf add bound icebp fmull or pushf mov jmp xchg cwtl out repz insl inc pop push fnsave cmp adc xor stos and in iret add adc das and jl (bad) stos test movsb in (bad) jmp push je push mov scas sub and inc sub cmp jmp dec dec xchg lods pop adc ret jne push jns xlat decl jae push pop lahf out nop imul and jge mov mov push das mov rclb dec cmp cmp adc add int imul cmp xchg pop fidivl add and pushf mov popf jae jmp lret test in xchg mov mov mov mov sbb loop jb into dec insl add xchg xor adc loop adc pop xor sub mov pop inc inc pop fsubl repnz hlt sub pushf jp loop dec push push (bad) xor inc mov sahf mov jmp dec imul or and es decl mov test cltd call pop xchg xor mov xor cs stos fcoml bound jp (bad) ja stos lahf int3 loopne mov out andb mul lock cmc xor iret or sub push push aas mov push mov rclb sub dec loope fisub lahf out inc loope outsb fstl in es mov stos pop clc notl adc mov sub outsb xchg add das xor or cltd inc or lret adc adc adc pop out loop xchg out faddl out mov subl popf sbb mov shrl sub (bad) pop and xchg dec int outsl aam ljmp and xchg jnp sbb cltd cmc mov jae sub sub lret push jb pop (bad) mov jge cld add add repnz cmp cs sub xor mov sbb jb imul xor lret rorl notl fwait mov pop push cmc sbb sub jne dec pop lret xchg sbb popf inc sub lods fldt les into pop pop test dec (bad) sub insb daa jbe das jge add pop icebp cmpb movsl mov mov int jmp clc mov mov xor jo mov aaa or push cmp and xor push test pop mov sub adc cld push dec mov sub jle push pop lods mov adc dec push pop mov sbb dec mov cmp ret add roll mull cmp xchg stos ficompl mov pop adc mov xorl mov dec orb add (bad) xor fldl inc leave inc flds sub lahf adcb jne adc mov dec lock or mov jbe pop sbb das cmc loop dec jbe xlat stos push shr lret jl outsb inc push sub sub jecxz (bad) sub fcomps jne jp push inc add push cmp mov leave push dec adc (bad) rol pop jbe push mov mov outsl call dec fldcw stc xchg cmpsb push dec loope xchg adc mov shr inc fcmovu adc xchg rclb mov push mov fnstenv ficompl mov lcall fs push dec mov pop mov jo bound fdivr dec lret imul mov rcll int aas mov pop mov icebp adc into ret mov sarl (bad) daa std adc test and (bad) dec leave jne or loop mov pop push je add or (bad) clc pop pop in sti (bad) jmp and xchg test lods aas xchg mov test jecxz push jne out sub das or or test in inc imul mov nop ss mov dec lds adc xor mov ja popa (bad) mov sbb shll in scas fs mov xor sbb xor jmp (bad) mov ret push subb xor jae add (bad) and inc mov (bad) (bad) (bad) std leave push push andb jns inc gs sti repnz jge mov jl popa (bad) adc xor cmp loopne (bad) pop sbb lret cs xor lds xchg jbe fidiv hlt xchg cmpsl sbb cld dec pop aad les sbb jns xor (bad) negb mov add (bad) into test fldenv pop cmp out dec mov scas fcoms adc inc mov out imull and jno dec sbb and int loope imul popf pop mov fildl sub or shll inc add jg das add sar or xchg pusha cwtl dec mov xor gs shrb xor jmp dec lcall mov mov scas push push pusha push sbb xor idivl (bad) les mov adc xor and pushf nop dec sahf fsubrl flds cltd pop push or add sbb dec imul lds cli mov dec (bad) fsubrs pop pop inc mov mov out push outsb push popf hlt lcall mov xchg out scas mov jle lock out mov and leave ds test push pop mov cmp dec jle pop and sub jle repz fist into and fldcw pop sbb mov jg arpl mov push jle mov cmpsb xchg and loope popf cmp jmp jmp xor or mov add xor and sub mov notl xor stc xor stc lds loopne mull das pop rcll test and or clc gs aad outsb in or push stos sub negb cmp call mov aam inc sub add dec mov push inc dec shrl inc lret and and lods data16 dec out lret cld jmp or ret cmp repnz cs jae (bad) fldl xchg push push push daa push pop pop adc stos inc std and out xchg lds and dec pop dec hlt movsb sub pop insl pop inc mov push or pop mov dec scas mov and and ljmp loop or or pop pop or adc mov mull lock dec inc mov jmp insb lret (bad) sub dec sarl imul lea sarl and lcall mov lds popf adc stc mov repnz cmpsb das push loop daa xlat sbb jge mov pop lods scas cld repnz stc clc dec imul call mov or int3 mov (bad) mov jno ret data16 pop das inc sub pushf or inc es or out xchg outsl or sub pop rol imul ret or fcmovne ljmp sub cld dec mov ljmp (bad) enter mov pop push mov lds or and inc (bad) ds or adcb popf jmp mov add pop (bad) mov mov xchg pop mov and lods add fnstsw or jmp icebp add mov sbb lods popf mov cltd jne cs pushf adc stc stos mov faddl add jmp dec dec out push add imul in push daa push mov and jmp lods adc fidivl or ror sbb imul cmp cmpsb lock and scas xor rcll rorl or mov stc mov add movzbl pop scas mov loop pop stos inc or sbb sub add fld cmp inc mov mov daa jbe fistpl xor ja push add cmp pop cmp jno daa stc loop ficoml repz js xchg cmp int xchg mov into (bad) out mov rolb test adc inc fnstsw add mov or movsb stos pusha sbb xor mov movsb jmp add pop in es and add jg pushf xor outsb mov pop and popf (bad) lock loop mov fist jbe jo or or jb lret pop jno lods les incl sub dec (bad) out das stc sbb push mov daa fsubp sbbl jo insb pop es or sbb or mov mov popf mull pop jmp pop xchg jmp sarl std in addr16 test mov (bad) mov jle cs es sub (bad) xlat sub aaa mov mov or aas icebp aam (bad) jne movsl mov cmpsb std daa inc ljmp dec not pushf pop xor mov pop add (bad) and movsb sbb (bad) push xor mov sahf movsb cmp je xchg je lret mov repz lret scas cmp sub sub arpl pop cld cmp scas mov fdivrp push ds jle fimul sti sub push adc xchg into fnstcw pop mov xor lahf fadd cmpsl pop in imul daa inc jno jno sub sub out sbb das xlat in enter sub imul or dec outsl push mov (bad) rorl jp dec es sbb push jle aas fldt cmpsl fstpl fwait push mov sub mov test adc arpl adc mov mov push ret mull lret (bad) fnstsw mov sub out jns dec xchg adc repnz pop pushf add fs (bad) pusha icebp jne pop outsl jmp inc and imull iret (bad) cmpsl mov xchg jl out jmp ss or fistl mov lret ljmp or xchg xchg (bad) sti fisttpll sub aad sub stos add mov adcl mov add dec sub push push sub lret jg sub je popf mov dec out (bad) mov sti cmp pop imul insl dec mov sub popa stc cmp or scas (bad) movb xchg cmp pop jmp inc dec mov add scas in bound andl mov mov xchg loop dec pushf pop into jmp test outsb (bad) lea adc notl sub or loope xor sub and ss inc sub in lret jmp rorb xor clc cmpsb xor (bad) and add cmpl xchg pop mov fadd popf push std mov lahf in xchg cvtps2pi adc test pusha je,pt pop loop daa inc push outsl ret cmpsl cmc cmp andl fucomip mov jno add ficoml sarl (bad) xchg dec jnp pop aas and mov cld (bad) pop (bad) rcrb xor or das sti jl out mov mov ret pop dec (bad) fldl sbb push xchg pop adc daa test rcrl loope hlt out or pop (bad) sbb push adc xchg mov or sub mov fistpll mov dec mov out dec jns xor les sub jne sub push aas test jecxz dec mov adc cmp jecxz dec nop mov cmp rcr push icebp mov push xor (bad) mov sbb outsl mov ret mov bound stc push mov rcrl lret inc mov cmp pop lock notl and push pop mov push mov pushf imul call ss icebp fimull add in aas rcrl test jb out inc movsb xchg mov dec mov jg cmpsb daa cwtl adc sbb dec (bad) hlt mov adc mov mov adc int sub test sbb es shrl loop jl out cmp pop lods dec je push mov xlat lds sbb shrb movsl aad mov pusha push mov xor cltd sarl ljmp cwtl jno sbb xor sub or in outsb adc stc dec mov sbb sbb pop xor mov movsl jo mov add mov cwtl divb adc and mov std inc push sub jmp addr16 cmc (bad) fidivr movsl jmp in pusha mov into sub or mov pop test sub adc mov mov and fwait add loop repnz xchg mov sub lahf pop ret dec mov inc adc fistp shll sub arpl pushf addr16 insl push add pop xor in xchg test loope adc sahf je mov pusha push movzbl sbbl (bad) push adc mov xor sub mov (bad) inc (bad) push rorb jmp mov dec or pop or in push mov das scas and sti (bad) xchg xor xor mov mov aas lret adc sbb insb iret sub or xchg inc xchg dec push scas cltd cltd ds (bad) xor add fadd xor int cmp add xor jne push jmp hlt dec inc xor xor mov mov popf inc adc sbb adc dec ret mov fcomps add mov gs xor repz and das pop or insb out sub cmp and fsubrl lods sub fisubl jae icebp add fbstp xlat out mov gs or xlat int3 adc repz adc sub xor cmpsb and incl ljmp out scas or push stc push pushl fwait push daa jg imul lds sbb out fs pop in xor ficomp mov mov mov sbb pop pop mov inc notl sub push mov adc into aam popa icebp xor aaa aaa adc inc mov shlb (bad) in std mov rorb js mov lock add cltd out enter ficom pop jmp cmp cmp push pushf addr16 jmp cwtl shufps lahf dec adc popa cwtl or dec push insl inc das mov xchg loop sub jnp int3 xor movsb add xor xlat sti pusha dec (bad) dec bound adc xchg outsb and jl lret xor pop ss mov repz data16 mov or int jns lds ljmp (bad) popa in cld or or and out xchg icebp into dec rorl or push std sub iret leave idivb cmp lods std (bad) cs sub ret cltd rcrb jno inc xor push aam enter mov cmc mov iret leave or add xchg js ret scas popf leave sub (bad) lock or arpl sub iret and icebp sub cwtl sbb out xchg lret js mov xchg inc fisttpll popf jg test inc lahf mov lods adc ror inc sub xchg pop and sub cmp jnp pop xor add cmc imul pop sarl cmc xchg or mov sub jne lods or push aad add pop dec jne mov scas aaa xchg out decl mov bound jl outsl and das lcall xor fisubrl leave jae (bad) mov aad pop lahf xchg jne cs bound xor lcall imul sub mov adc repnz hlt mov mov ds ret xor sbb in sbb sti push push jge add lock mov call sbb jno and sbb jns imul pop jmp repnz rorl mov rcll movsl or cs iret pop cmp testl outsb fs adc pop rcrl or xor addr16 shrb dec sub dec xlat cmp sbb fcoml dec dec dec mov daa andb fisttp rcll pop or lock jb and or or sub pop sub jg jbe push and push call adc mov cmp test stos pop jg lret or repz sbb inc arpl ret scas daa dec add pop inc adc fbld dec sub inc int jbe push lock (bad) jo fdivrl cmp pop rcl js push push sbb or mov shr push adc mov mov push mov clc call outsl aaa and fstl and (bad) (bad) call das (bad) aas lds inc or pop xchg mov divl mov xor test test idivb or xor negl cmp sub add leave incb mov out sti mov leave iret jns bound (bad) movsl scas imull gs fstpl sti insb lahf out xchg fstpl or push movntps jmp (bad) ret lods test rcrl ret mov add stos int3 and push or test or pop bswap jg add clc xorl or dec les call lret test push pop push dec lods rclb or into and aad lods ret fist dec cli sub sbb jns xchg sti insb mov sub mov pop clc xchg and mov mov jb pop icebp test inc add sti xor stos fnstcw or lods addr16 out mov nop xchg pop xor shrb and stc adc inc mov gs stos mov enter mov aad pop dec frstor dec pop lahf idivl add and cmp inc sub inc adc idiv push (bad) pop loop mov push inc add mov das (bad) mov movl dec ret add xor in (bad) sub ds or fucom je sbb mov inc icebp roll inc sar or sar push mov sub (bad) mov xchg cmp jb (bad) xor jae add mov lahf ljmp inc sbb in (bad) xchg mov dec gs cmp dec pushf fs scas repnz mov mov mov or pop (bad) jecxz xchg mov fstl sub add (bad) loop xchg mov lret loope in cmpsl (bad) in mov lahf callw adc pusha and or xchg push cmp int jle insl cld xor xchg lds cmpsb pop test shrb lret ror inc cmp stos push or lret sti inc push or (bad) jae clc pop xor mov push adcb lret (bad) dec or mov lock xchg daa ret mov sbb or ret mov and push mov sbb sbb mov cmpsb ss sbbb and mov scas stc mov out xlat out add jecxz xchg in dec js jmp out and dec repz dec (bad) jl lret push xor call and das jl add ret xor sub xchg push and movsb inc jp dec pop into imul lods lock mov fdivrs jmp stos mov call or stos xchg mov push test and es add pop sbb movsb dec addr16 pop and (bad) push xchg out cmc in mov das mov rcrl (bad) loop inc inc xor mov cmc xor (bad) addr16 cmc xchg xchg adc or sti repnz test inc pop sub nop jge int3 mov dec sbb push fnsave rclb (bad) push jmp lods (bad) das pop jge lea push subl pop sarb mov jne aaa cs adc mov ljmp push sbb sbb (bad) notl in flds inc rolw cmp lods loopne fcomps sub mov lret fidiv stos bound adc inc lahf xchg push popf testb into test in das sbb ljmp sub sbb test sub leave movsb inc out mov mov das cli jae adc scas cmp insb add ljmp imul xchg dec dec dec enter push imul lcall pop inc lret sbb adc fwait sarb repz pop jmp xlat cli ss add xlat sub jb rclb and jae or out add sub outsl cmpsl std cmp jno mov (bad) jge mov jmp pop lret xor ja or sub repz data16 (bad) pop std cmp scas mov mulb sub test leave jb or jns mov mov (bad) fsubrs mov and sbb and add int cwtl jge aam pop loope push mul adc (bad) int les mov flds xor mov jle icebp sub notl dec fdivp out mov lret sub sub lods push mov adc scas lret sbbb lret xchg pop mov stos pop xchg out mov (bad) outsl sub sub adc inc sub adc adc rorl cs test sub wbinvd pop adc repz lods inc js sbb lahf mov add sbb push sub rcll push stc movl mov popf dec pop xchg xor mov leave sub fisttp xor jne mov jmp mov lcall pop shl imul cmp movsb mov mov rolb cmpsb loopne xor std mov ret jg icebp daa (bad) xor fimull cltd mov xchg dec (bad) jl cmp fnop jae test xlat stc decl test jo dec sbb ljmp ret jb and sti repz jae jmp (bad) les jmp sar outsb jno mov adc test mov inc jl add mov mov rcrb inc fsubrs sbb sub pop (bad) or xlat fnsave xchg mov and lcall mov ja cmp (bad) mov cmc mov sub ds movsb icebp cld das cli cmp in add daa idivl add add std push in xchg jns notb jp rcrl into add adc pop pop (bad) sub shll loope fsubl mov mov pop aas sub ds sub test pop adc ljmp adc cmpsl notl int add das (bad) cmp or push popf inc and mov loop adc mov repz jb sub mov movsb add dec imul fdivs iret add mov lret xchg sbb inc mov mov ffree loop cmp or rcl call xor jns lret lock sti mov iret sbb std inc mov add jecxz cld mov fldt data16 mov sub cmpsl jmp mov cmp ds test pop ret into aad add shrl (bad) add outsb sahf mov leavew cmp ds (bad) iret push sbb and push pushf nop mov xchg leave ss jl add in out mov push pop jle adc dec pop pop int cs add test xchg lods jbe and adc (bad) pop (bad) icebp iret mov fidivr pop lock out sbb xchg mov mov (bad) fcoml iret add mov adc jl adc int push dec sbb out sub (bad) lcall cmp xor cltd or (bad) test xlat cli push sbb pop es mov lea cmpsl mov dec ljmp add lods push dec sub shlb rclb jmp roll out data16 xor (bad) dec xchg scas gs cltd mov notl cmp mov mov jae test rolb stos ret ffreep jp (bad) in jmp fcoml lds inc add inc and ret jns fs sub and mov stc clc iret popf pop xchg adc js pop out and inc or jns xchg xor outsb jmp test into dec insb dec mov dec test dec fstpl ja insl push push xor gs loopne stc and idivb dec lret cmpsl mov ljmp or leave fwait cmp pop (bad) jb sarb mov mov ljmp mov jnp push jecxz xchg ret xlat jl mov adc cmp pushf sub jnp (bad) push mov lahf xorl jnp iret in mov std (bad) xchg jecxz pop int3 ja es in mov ret mov std leave fidivr int3 ficompl repz icebp imul inc and stc mov sti aas adc mov pop scas sub jae pop or nop inc xchg std cmp (bad) cmp and pop iret divl std add mov ret movsl fbld aad and jp outsb repnz div pop mov and mov sub inc repz mov in xchg mov pop jg push out mov pop push mov mov xchg notl jmp add cmp mov push out dec sti lret stos pushf adc push mov pop add xor jmp inc mov or dec adc cmp rclb pop sbb jmp cmp outsb lret mov fidivrl subb mov sub sti cltd les jae sbb sub in dec movsl out xor ss jno xchg fbld and sub ja mov aam cli jecxz adc add sti cmp das mov inc scas adc xor data16 push push imul inc daa xchg (bad) out ja fsubrp test ret jle aaa or cmp lret and hlt jae jl adc sahf xchg mov push out in repnz add dec dec xor scas shrl cmc xchg push pop jmp add mov sub int3 xor add sub or xor and out pop mov sub (bad) lahf jl loop into jle pop ficomp mov mov jl pop repz adc popf and mov orl mov dec or push imul ss mov mov jle rcl mov out icebp dec imul mov mov xlat dec int3 inc out hlt rclb ds mov cmp xor sub rol sub (bad) aas add push cld aad mov (bad) adc jecxz mov adc dec mov mov sub add ds fistpl das and xchg lcall xchg mov or ret mov xchg xchg ljmp jle sbb pop adc (bad) dec mov inc ss aas sti test in das push fcompl jno mov adc pop jbe clc aam mov cli out cmp mov jge jns fsubs stos in into push pop mov aas das lds mov pop icebp cmp xchg call test cwtl adc pushf add cli lret xor cmp mov outsb mov mov jmp xor divb fstl xchg in fldenv sub or loope push xchg (bad) lea adc or mov pop pop push cmp out addb inc xlat mov push lahf clc fwait mov fcoms ret mov cmp xor mov leave test mul or mov test xor sbb sbb rcr or loope fbld (bad) dec mov cmp mov cmp mov cmp sub mov pop (bad) out sbb sub push rorl add add ss lods in lds cmp or lcall pushl clc clc ja pop xor cli jbe jns and bound mov hlt out (bad) mov mov xchg or xchg jle mov sub pop in jb dec sti ljmp add in iret mov push jmp mov movsl movsb scas fnstenv sbb xchg lcall inc aas sub lock adc pop xor lret adc stos cmpsl mov jb and push lock xor lock dec cmpb xor mov (bad) outsl and dec sub stos xor mov add hlt jmpw cltd ret bound cmp scas movsl (bad) or sbb das ret mov mov imul jbe sub inc sub mov stc push mov insb cwtl add xchg cli roll notl dec mov pop mov sub xor lea in or jns inc and jne insb dec mov dec ds cmp and lcall xchg dec lock iret xchg dec or (bad) mov inc sahf (bad) (bad) repnz leave loop xchg int lret pop sbb cld pop (bad) (bad) xor add sbb xor pushf (bad) mov xchg loopne loop pop xor adc movsl sub out and push imul out cltd shrb std jb ss sbb and xchg jg mov mov xchg lea pop add popf cld das mov push mov xchg push cmp pop std dec adc (bad) lcall cld rcrl sti sub notl sub jmp jnp movsl sbb push add repnz gs mov loopne or mov pop lods adc mov cmp (bad) daa ret fisttpll add dec push test rcr mov or mov ja ficompl xor and das into out pop pop shrl add and imul stos sub pop sub rol mov mov icebp or push cli mov into push sub and mov (bad) dec pop lods movsl icebp jge orb scas push xchg mov pop ret mov dec inc cmpsb pop leave out inc push jo loope (bad) bnd ret xor vpor rolb dec lret add movsb inc mov lds (bad) cmpsb je pop (bad) bound mov and (bad) push sbb mov (bad) lret sbb push loop push je pop or adc ss dec out cmp mov jbe lock das or movsl popl jp cmpl test fxtract out sub negl mov cmp and sub in sub jmp dec dec mov cmp sub xor leave and xchg dec push sarb out adc cmp js sbb inc movsl repz icebp inc and nop imul roll pop sub pusha dec sub stc out cmp mov sbb repnz add in and pop repz add add pop xor and push pop add jbe or pushf jmp jecxz mov push hlt loop divl xlat mov adc stos xchg sbb dec pushl popf dec add lock mov add mov rorl cmp mov sub stos das mov test movsl mov out xchg xor (bad) loope cmp jmp xchg movl jg,pt xchg add insb xor xchg adc sub lods bound pop out xor adc xor jmp pop mov inc and sbb test movsb adc scas sub mov xchg (bad) cwtl call movsl movb sub xor sbb fiadd cwtl aad xor dec dec repnz cld and out mov xchg (bad) sub jae ret imul mov ret mov lds mov adc cs add add mull pop cmp repz mov xor out cmp mov mov shl jmp nop add fadds lods gs cld xchg mov inc sub mov imul xchg dec ljmp sar ljmp jmp outsb mov cmc lahf dec imul xor adc jmp icebp loop pop mov (bad) mov out mov je cmp mov or dec sti fistl fadd sbb decl mov jnp adc stos sub dec push xor adc out divb (bad) repnz in lret inc (bad) repnz popa movsl arpl xchg loop rclb mov push stos sub scas mov or cld sub add out mov add mov fisttpll push imul push push cld pop push sub mov mov loop les (bad) jns mov xchg outsb cmp adc xchg mov or out mov aad cmpsb stos mov cmp pushf mov push sarl inc sub mov (bad) roll push stos ja out pop xchg inc std add inc les loop (bad) out cmpsb xchg and imul inc pop cwtl or jmp mov add adc adc mov add sbb mov mull and (bad) push mov xlat std lods lret pop jns dec or fsubrl dec jno adc test dec scas mov mov push (bad) mov (bad) mov inc jle inc pop push xchg fxch imul adc js (bad) cmp add mov mov and movsb call sub mov ret cli nop daa popf cld les negl pop jmp lods cwtl roll fs stos out pop adc sbb enter rcll or add mov sbb dec test or push add xchg jmp pop mov dec leave mov fldl fisubrl mov xlat test adc (bad) dec into jp leave and arpl fnstcw pusha rorl fldt stos sub pop lahf in mov jbe hlt nop jns jno mov lea and out push pop jmp insl inc ret mov pop test aam mov (bad) je push lcall movsl int3 scas and cmp sub outsb or repz gs jg xor hlt popa (bad) lret incl repnz sub mov and pop loop nop fcmovb or mov jl,pt ja mov xchg sarb sahf (bad) and dec lret or mov push or adc push mov (bad) mov push pop (bad) mov sub and lcall and mov mov lret imul pop sti fs loope push push orl aas xor mov xor loope mov jns jnp mov dec cmp aad popa pop call out mov fild mov pop or (bad) pop clc in mov and dec dec sbbl mov aas ror pop fsts jno add dec insb (bad) inc jmp test lods sub dec mov jb xor push mov pop mov cmc add out xor mov dec adc cld sub leave repz cs ljmp loope mov xor sub add (bad) xor ret jl sub xor loope mov cs lods clc (bad) out (bad) jo jmp mov dec test repnz xchg mov sti popf xlat or call mov cmp add or cmc roll or ja test je pop ljmp push and out mov sub xor out mov xor lcall dec leave scas sub mov xor sub pop adc test enter sub out mov ljmp pop jecxz sub cltd imull inc xor je mov pop mov negb in adc pop pop dec push ljmp fdivrl and les gs test mov mov fisttp ds sub cwtl lea push xchg push jnp in mov pop xor sub add and mov ja dec mov push fsts lods adc lcall sti dec xor mov adc xor ret clc je repnz sub leave (bad) scas cmp (bad) jne mov popf push xor cmpsb popa mov mov xor adc (bad) xor sti mov sub push xchg sub or (bad) sub fistpl sbb dec mov leave or adc cmpsl mov add push repz popf dec pop sub daa int3 and repnz sub xchg popf rcll (bad) mov test lods lret repz aam sub and (bad) push cmp ret or cmp xor jp pop test rorl adc sahf push pop (bad) out sub adc cld sub mov ljmp jns xchg (bad) fs in cltd dec test int3 clc mov push sub mov adc xor adc (bad) repnz xchg das or inc mov lods popf sbb ret adc pop idivb xor cmc in cld push and mov jle mov iret jle lret fsubl imul repnz mov push scas lret aam rcrb jnp push and pop mov js mov mov (bad) and jno inc clc add jns mov int3 das pop xchg andl sub mov fisubrl inc sbb in test stc movsl std xchg test sti test mov sarl add add stos cmpsb daa sub jae push out fdivs into popf pop xchg bound divl xchg callw iret shl (bad) jmp mov lods and (bad) ss scas or xlat sub aad cmp push repz jbe push pushl lret ja pusha addb sbb sbb cmp jnp inc dec adc push cmp add popf jns mov jo pop and lret insl andb cltd or fbld cmp pop push mov shrl imul pop mov imul lret xchg dec mov dec shlb mov xchg (bad) mov dec neg or and pop pushf xchg jg xchg frstor scas sub inc sarl mov mov push inc add add fildll sub add xchg maskmovq imull mov or adc dec xchg stos (bad) fst push leave mov outsb call mov xor shr hlt sub xchg add (bad) loop cmc call ss xor push rcrb gs xor stos sub sbb lock xchg mov fsubr adc movsb dec cmpsb sub popf mov sub iret mov sub mov cmp stos jle aaa (bad) lcall ret (bad) lods mov or pop mov add es and mov mov mov mov sub imulb sbb sub pop (bad) test mov mov in stc inc ret pop pop push push fnstcw ljmp and sub adc cli cmp mov and aaa pop shll loopne pop adc mov mov clc rolb and sti fcoms add sub lock repz pop jmp out inc cmpl pop mov pop jg and pop ja sbb inc and or ret jge add repnz pop out and clc mov das xor dec pop sbb mov enter mov inc mov arpl dec negb pop xor lds (bad) sub movsb loope sub ljmp testl out addr16 bound add mov scas loop inc hlt pop push lea pop xlat mov xchg fistpl (bad) mov int3 push sub leave push or inc or sarl dec sbb mov or push mov or rorb enter mov push loope jmp ljmp jg cmp cli mov add xor jae and loope mov mov cmpsb xor ds mov stos test ljmp pop mulb fmuls pop cltd jo fidiv pop inc mov aaa cmp lods pop xchg mov fist sbb or or mov mov jge lods pop ljmp sub cmp roll movsb imul xlat push jne sbb mov jno imul mov or or inc ret adc mov std data16 pop mov add (bad) push sub scas rorb xchg adc mov movsl pop pop sub cli cmp out jmp mov cmp mov or dec call inc dec xchg imul mov scas and add xor jmp xchg mov popf outsb sub or mov out pop mov (bad) dec scas lret scas push fnstenv out dec fistp or mov or mov jg cmp jecxz push sub and jg mov add sbb out sub add idivb push mov push mov pop or ljmp shrb add lods fistl shrb or sbb dec sti int (bad) sbb push dec orb xchg loopne push (bad) roll add or jle fisttpll xchg mov push sbb lret int3 pop repnz leave shll push imul ja (bad) dec adc add fwait bnd ljmp mov sub add outsl lcall pop xor or sar ret call pop mov push inc cmp mov mov pop sub push mov push jno dec decl cmpsl push cmp push mov ds pop push inc dec adc jnp mov xchg outsb fistpll imul adcl lahf xchg cld pusha mov add gs add lret sub xor add pop push push pop push mov pop push stos xchg std rcll mov push mov push pop inc sub aas add add shr inc or stc sarb imul lahf push or add jo add pop mov sub pop add mov push decb push cmpsl icebp movsb cs das push pop pop or push inc shrl push mov pop fadds pop push lea sahf cld and xor add mov mov dec mov repz sub push push lcall andl fimull leave stc pop lods (bad) mov iret imul push (bad) sti lret mov inc mov in lea sbb mov pop add cmp sbb (bad) cmp (bad) in popf fisttp fstpt or decl mov sub (bad) pop int (bad) mov mov pop clc sub add test jecxz pop inc dec je test andl (bad) mov hlt jp push repz mov adc test js rclb fstpt sub sub push movb jl (bad) sar push jno xchg push (bad) cmpsl xchg enter xchg lcall scas pop mov push (bad) (bad) popa xchg or sub ljmp mov sub (bad) fnsave cmp jmpw cld aad icebp aad mov pop mov inc daa movl stos lea jmp jb push mov scas inc out and or jl xchg gs xchg push aad int3 fsubrp test (bad) mov cmc ljmp cld xlat imul stos xchg adc repnz pop adcl in and sub cld adc mov jle pop lret cmp arpl and and jge xchg stc push add mov cmpsb loopne adc sti js mov add sub or mov imul bound (bad) dec mov cltd pop mov (bad) cmc mov mov std push ljmp ret add test add hlt icebp scas mov ret push or inc pop sti arpl into in xchg mov or fimul sub test (bad) mov push sbb xor test mov (bad) dec aad and adcl pop mov fisubrl imulb dec or fsubrl inc into inc fsubr imul mov cld out mov (bad) or xor mov loop push (bad) and or xchg pop mov sub divl je and inc or daa mov inc iret and jmp cld mov mov loopne or push inc or cmp sub outsb sub cs xchg adc sbb or sub cltd lea daa push adc lods inc nop mov scas rorb and inc and mov jle pop shr pop jne sub xchg dec mov mov push aam and daa adc mov daa or in daa mov gs enter lret mov lret pop repz outsb ja inc fcomi jg rorl jg lret cli int3 icebp sarl sub lods or and mov sarb rolb xlat push mov arpl or jge popf cwtl mov test pop pop mov inc cmp add pop and (bad) dec sub dec adc xor mov js lret decb and mov add add push out std jno inc or push mov cs cmp subl lret mov mov pop (bad) push out cmp rcll mov sub jne mov push mov sti sub mov adc add sub add stos mov add xlat call push sub stos sbb xchg sti lods out xchg mov inc enter jmp pusha pop sub adc ret dec xor mov (bad) (bad) stc pop imul (bad) nop pushf dec pop ret cmc xchg (bad) popf movsb popf mov outsb pop pushf pop divl daa icebp aad push cld mov mov mov popa lea sahf and mov push xor repnz mov incb std lds mov or xor mov xor xchg out lahf sar or cmp pop pushf xchg (bad) dec cmp dec jmp pop or icebp add or (bad) cltd xchg add bound push sub cmp test jmp lea cmp cwtl xchg lahf lret pop loop cmp insb jmp int3 les pop adc sub popf imul push or aaa xlat leave pop cmp lret or jae pushf and dec xor (bad) cmp shr and or adc fistpll ljmp mov (bad) into and ss popa mov lods lret movsb stos cld ss adcl test ljmp nop sub xchg imull pop idiv les inc add sti cmpsb xchg pop mov stc xchg or push sbb (bad) loop dec mov or loop inc mov test adc (bad) lret xchg test (bad) xor test out cwtl ljmp (bad) das push out nop repz xchg call adc mov xlat lcall mov out add (bad) ds lods jno iret and sub idivl test sub scas fs cli test cli pushf jle mov fstpl mov aas pop adc or push jmp sub out inc (bad) mov push mov fdivrl inc rcll ja fs out mov sahf lods add daa ja jg fnstsw mov mov mov mov enter ret imulb into jle xchg inc inc and sub (bad) cs xchg pop cmp dec push mov mov (bad) push int3 adc add xchg jbe add pop scas movsl mov cmp xchg xchg nop mov push (bad) cmp add dec and not push sub add mov sub das outsb int3 xchg cmc sbb push adc pop cmpsb adcl notb addr16 add lret dec pop add dec dec in repz (bad) testl aam dec mov mov mov fldenv addr16 pop pop sub dec adc xchg iret call xchg sbb (bad) dec mov dec mov mov out bound xchg push test pusha es add call orb in stos cld mov jno enter sbb outsl or inc gs xor (bad) fisubrl cld repnz shr insl mov and cs stos dec mov ja and imul push (bad) mov mov (bad) rorb or or frstor xor ljmp popf int3 out repz add push mov sub cmp jnp jbe push sbb sub mov in das dec in ljmp dec lret les mov push mov je push enter lret hlt scas sub cmpsl or testb dec insb add push dec and hlt into xchg pop xchg sub mov mov emms mull das leave fidivr pop inc mov mov shlb nop cli icebp loope daa leave or insb push jno or clc inc ja xor fwait inc mov pop rorb popf xorl outsb cwtl in sub in pop xlat or push mov sub and into push mov inc imull fnsave in push int3 push push loop and sub pop ljmp mov xor mov pop fnstsw gs inc test cmp negb jbe dec mov dec leave inc cmp jmp imul repz leave cli fnsave ss or pop and into hlt mov ror xlat imul fsubl dec cltd int fs jmp xor dec data16 pop xchg adc sbb sub inc into (bad) loop cwtl cmpsb mov push loope das ljmp xor cmpsl adc sub pop adc popf out popf jo icebp mov xor pop int3 adc int repnz (bad) mov rcll sti test ds je jbe dec repz push sub lret pop ret aas repnz aam leave pop pop fs (bad) jbe icebp shlb sub int inc mov cs rolb xor jmp sub mov ja iret mov jmp add jge push ret loopne push je lret push aad lret dec (bad) idivl movsl sbb and aaa mov mov cltd xchg out xor or jl lret sbb (bad) movsb cmp dec and xchg jl dec ljmp inc icebp sbb sarl (bad) int3 out pop pop lods call jle,pt scas sub mov jne add je out xor pop push loop xchg push iret sub sub test (bad) test pop je xor or mov mov jp add out fs dec adc mov jnp jg sbb push out mov sti enter daa outsb scas mov daa push jne icebp and rclb sbbl fisttpll xlat xchg fnstsw (bad) mov daa push aad sbb xlat xchg sbb add cmp inc mov test shrl test push call lret scas mov dec mov adc mov scas sub out mov adc scas imulb mov lahf in and adc cmpsl push icebp rcrl jbe sarb loope sub aas inc or add (bad) mov xor lods cli cmp or mov ret ja insb inc sub adc lret mov and out ret dec sbb cltd lock aas scas mov mov pop sbb (bad) sub in test mov cmp mov pop call lret ljmp imul add inc xchg or notb and or fdecstp test stos lret pop dec mov cmp mov push icebp into leave mov dec out (bad) imul sahf pop mov (bad) imul icebp jae push xor repnz rcrl jno leave adc pop mov push out das (bad) jle (bad) ljmp ret or mov icebp fisubr leave jb adc xor mov jge ret sti bnd lea in sub mov aaa inc xchg pop xor ljmp xlat (bad) call in sub dec aaa pop ja lret and xchg fimul out mov mov xchg jne scas (bad) out (bad) popa xlat push push jae mov mov cli jmp scas mov or (bad) sub movsl (bad) mov push aas sub cmp lock sub xchg cltd sub xchg lretw lods jb sbb (bad) pop les inc in cmpsb leave daa xchg stos mov inc or sub lds or xlat pop cmp add mov repz add cld mov lret lret xchg shrl mov fisubr pop adc adcl imul add jnp push addr16 ret cld adc pop or lds pop inc adc add push cmp pushf push push push cmpl js mov fist and pop mov push jmp (bad) iret imul dec scas jno or cmp lcall and movsb and enter xlat jnp stos or (bad) leave clc imul mov loopne hlt js jge (bad) (bad) aas fnsave dec and adc roll insl mov lds mov pop and and cld adc scas cmpsl fist dec call mov pop out cmp mov inc das out jnp in mov lret lret arpl mov call jo out pop loop leave into add mov push jl mov pop push xor cmpsb cwtl sub pop shrl jecxz add (bad) sub xor movsb popf out lret mov pop or addr16 adc xchg mov lea and scas push mov std xor imulb idivb ret xchg xor sbb lret decl fimul (bad) cmp fsubrp push dec mov xor add hlt testl xor add jae lcallw into push out int3 repz in mov pop mov jge cmp inc repnz call loopne jg sti es jmp xchg xor adc and aam movsl sub ss pop mov xchg mov sarb repz pop xchg mov and popf ficoml dec lret dec pop cld (bad) mov call mov test inc in xor dec pop mov sub (bad) xor dec stc (bad) lret addr16 imul movsl fldenv mov jecxz,pt xchg mov jo repz push (bad) testl sub lret xor ret and or jo sti and xchg jecxz adc adc mov into jge (bad) or hlt (bad) pop mov push pop jbe (bad) xchg jbe in js mov ss push in push movzbl mov mov pushf (bad) add js xor out sub xchg rolb add aaa sbb in mov pop outsb (bad) xchg cltd testb je jno aas adc sub gs xor xor jmp cmp sub pop or sub add cli (bad) aaa insl xor outsb xchg clc jl stc sbb repz and inc mov and jb cmp inc sub push cld mov mov dec jge mov adc sub popf test jb pop sahf cmpsl mov imul cltd (bad) dec stos idiv inc add xlat nop mov fld mov xor popa lret mulb push push pop dec les iret fistpll and mov cmp iret dec cli xor adc cmp bound cld jns mov rorb call sbb mov dec push pop mov jo pop (bad) jl jo and mov fadds mov push fisub dec into push shr lret push sub jb and inc sub xrelease repz sbb stc dec iret test mov (bad) call jl pop lds out int cmp adc xor bound push mov lock mov pop mov and pop mov rorb sub outsb je test dec in fsubs fsubrl inc add and mov iret pop dec stos mov stc pop xor ljmp clc aaa mov int3 ud2 adc pop push stos inc pop sub out pop leave xor push daa call lret popf xor les inc add fdivs (bad) stos mov pop jecxz pop je les stos movsb out call clc push and xor dec add pushf movsb and in (bad) fstp sub mov and aam dec xor inc mov pop mov jmp cmp dec ror push pop jle,pt rcr ljmp daa jge test fcoml ss adc jecxz sub mov xor cmc cmp popf cmc mov push pushf xchg pop mov lock xor inc xchg mov shrb inc ret enter adc xchg rol lahf mov add inc and dec loopne jmp push dec rorb pushf mov leave scas xchg dec push xchg call hlt (bad) push jo loope or lcall orl fdivs adc lahf sbb movsb mov notl mov jb repnz scas mov sahf ja pop lods dec xlat out cwtl dec jmp fsubr negb or jecxz fldcw mov push jge mov jecxz dec inc (bad) mov jge jno cs sub mov xor out mov add push jl leave cwtl call int add sub in xchg mov (bad) sub sub (bad) fnsave inc dec out fcoms xor sub mov pop ror sub aaa in adc icebp ljmp push addb fstl push jmp cmp xor jmp mov lcall sub cmpsl mov adc add xchg in iret dec cli cmp xor stc mov mov jmp test add ret mov or push xor (bad) sub jmp sub xor sub mov imul sbb ret push pop xor jne or mov jg stos xchg repz or pop cmp testb push and scas inc das xor loope (bad) push jge ljmp pushf movsl (bad) add pop shrb repz adc pop loope sub pop push out aaa lret jmp mov sub add adc xchg into scas loop xchg mov jbe ljmp jae xor mov xor int3 xor xor xchg pop xchg and (bad) jmp (bad) add jmp fwait sub xor xchg push popf xor xchg xlat inc (bad) lods mov sub rolb scas mov aas rolb xor outsl icebp add cmpsl lods jmp xchg adc lahf fisttpl shrb or or mov pop mov cs pop push xor sub push sub mov ja push sub popf fnstsw inc pop lds push (bad) lahf movsl pop gs insb ret fnstsw inc andb cmp ja into sti add aas fsubrp xor mov hlt or ds jb iret call mov and mov rorb lahf gs mov sub inc inc pop jnp jo jg jle jecxz not aam dec xchg stos cmp adc leave pop inc ret jno dec fnstsw push dec mov fcoms dec sub mov out repnz loopne lcall rcl xor stos cmpsb mov adc fwait lea jle push mov cmc sbb ret das repnz and and loope mov mov dec mov dec xor push xor pop xchg bound fs in xchg shrl cmpxchg jnp daa roll mov fsts imul inc stos xor sub and roll xor or movsb sbb jae mov sub cwtl mov add fcmovu cs aad nop and lods ljmp dec shrl gs sub cmp mulb and mov xlat sbb cmc movsl sub in pushf mov repnz rol stos sub rorl mov and sbb out mov movb and (bad) movsl inc mov or xor jp dec and leave fbstp cmp idiv (bad) xlat fcomp add or add sub xor mov jecxz out push pushf mov idivl add jp outsl add in popw xor or lock xor adc xor mov aad cmpsl ret mov sti pop ret repnz lret pop jmp out pop cmp xorl jg or sub stos movsl mov ljmp pop cld lds adc dec jnp es dec les pop push or fwait insl jl lock xor iret fidiv out pop push in cmp and std sbb orl jno lret push sub and (bad) jle push mov fsubs pushl sti ret mov sbb xor push nop cmp pop dec xchg dec orb xchg inc ljmp push pop push push lods popa mov pop scas sti jg std (bad) loopne add pop out push pop fwait jnp mov add sub sub jg xchg sub rorl (bad) or mov sbb add push jmp xor push or xlat int3 mov inc push add mov imul (bad) cmp push jno adc pop add ljmp inc mov add fist push mov mov or in jg add ffree in pop sbbl jno and sub sub into or jns test xchg xor rorb fiadd loopne test jge jmp clc rolb dec xorb add or dec ret or xlat jle sbb sub push jecxz and movsl cmc mov movsb push (bad) call out and or idivb es ret imul in and icebp xchg ss fldt cwtl pop cmp pop std cltd add and iret push pop popl mulb mov cmp mov repnz ljmp dec push mov cs pop inc mov adc addr16 dec dec xor into push adc icebp scas outsb shlb mov loope out loope bound (bad) jmp xor cmc or into mov ret ljmp rcl cli mov xor sub out popf pop pop dec ret sbb and mov bound mov fs icebp push movsl jnp or sbb xor add imul push mov jnp add mov adc sub roll xor out fnstcw push adc pop popa fdivs comiss jl pop into cmp inc lcall scas lea sbb fwait clc add sbb mov orl or out aas dec sti mov push mov mov lret add add pop aas jns cwtl push out mov sti push sub dec jbe add clc xchg outsl fs inc fcmovnu rcrl sub out inc mulb jl jmp fs jmp lods mov ret inc gs pop xlat out bound ja pop inc cmpsb outsb loop sbb std pop popf xchg pop xchg lret pop sbb daa lock fnstcw mov divl imul pushl stos adc rolb mov sti ret fistpl push jae iret pop add shlb add ja mov lock xchg pop cmpsl cmp fnstsw scas xlat mov movb add sub imul add mov (bad) in mov stos sub and dec ds fs push jmp push lahf push icebp repz and and cli bound cmp ficomp or xchg icebp dec pop sahf scas ficomp or mov jnp dec (bad) mov mov shrb movsb je jg mov (bad) hlt repz sahf or mov shrl mov fldcw mov (bad) repz adc and add fwait push cmp push add repnz test dec repnz pushl mov add ljmp test lods push test sub test mov pushf pop push loope ret pop scas sub jp push or xor ss jl fildl sub and mov loope adc stc jle repnz shr sub push xchg push adc lret sbb out test sarl fistpl push mov and insb dec jge fwait outsb sbb inc dec or mov pop mov mov jns imul ss das sub cmc adc jmp push sub dec or xchg mov mov dec lret gs (bad) or imul fmul lock mov xor fistpll and shrb or xchg stc add aam lret jge in idivl push pop mov addr16 dec ret test test mov aaa pop sub mov cltd push adc rorl cmp fs xor push (bad) add push add push fs loop fist dec jo test adc testl dec lock xor sarb mov das lret push mov fdivs pop or mov xor add aaa pop xchg test test mov insb sarl xor xchg stos pop xchg dec mov (bad) mov xor inc add test ss in das push test fist xchg icebp in pop push pop out mov test cmp scas mov pop cltd repz sub notl xor mov mov aam push jl adc cmp iret push loop out jmp add imulw loope adc sub cmpsb aam inc shrl call call and or and cld movsl jmp adc push inc imul cmpsl jnp push loop inc mov adc inc adc fnstcw out dec leave stos int3 pop (bad) pop xchg call in xchg mov aam cmp lds aaa aad add sub movsb xchg xor jg pop mov sti xchg push sbb ret lahf mov (bad) int (bad) jne push xchg sub jne ds sti and or popf data16 jecxz xchg mov dec in push lods mov mov sbb push popf out xchg jae push or mov jmp call stos mov lock or (bad) js and jl cmpsb ja push push mov cmp mov fnstenv das lds lea out sub je stos sub push insb push pop scas cwtl sub adc sub xor stos cltd movsl jp mov lock or test sub dec mov pusha jmp les in pop jb leave imul ljmp sub test mov mov xlat pop inc ljmp popf aaa std shrl jns clc pusha daa call lret inc ret aas add mov das leave sbb adc pop xor into sti test mov inc test sti mov and sub into mov aaa call mov xchg add gs mulb lds mov scas dec pusha add mov (bad) dec add fimull push ds xor inc orb xor ljmp pop pop ret xchg and push fsubl pop pusha lock movsb or leave ljmp and nop push pop mov dec add scas push sub xchg loop or xchg sarb pop add stc cmp xor fistpl sti daa adc mov add inc mov or fistp ljmp dec repnz sub ret divl dec mov in jb (bad) or pop push (bad) mov jne pop daa push jmp cwtl cmpsl jno mov int3 movl call loop lcall add pop aad push cmp nop pop and cmp fldcw pop xchg push sbb int jp sbb movsl jle jcxz out out fcmovnb inc mov bound repz jp pop and lcall ret stos cmp sub scas xor sub and jnp cmc repz fs repz fucomp xchg pop dec pop mov cld push mov jb xchg push les leave push jecxz pop andl cmpsb inc or xchg leave xchg sti (bad) push or outsl inc sbb adc stc xor daa ja enter aad cli jecxz popf movsl jbe movl icebp pop insl and mov jno loope sub push ret xor movsb divb mov sar or pop andl adc fcompl or (bad) dec mov dec loope push test repz jecxz lds mov sub mov iret lret mulb les in pop and cmc dec push jne sbb sub icebp jns lock in mov inc test push mov jmp data16 xchg in or into sarl loop dec mov jmp movq ljmp push lcall dec inc inc adc fdivrl adc cld test jecxz adc scas (bad) in mov jp mov xor pop aaa lcall adc fnstsw add xor (bad) pop inc sbb fnstenv das mov mov adc xchg mull lds shrb or adc je xor sub or jg sbb movsb or (bad) push repz mov rcrb mov popf pop rcll cmp jmp dec faddl aaa mov (bad) out pushf xchg (bad) pop mov lret ljmp test outsb pop cli push outsl jmp xor cli fisttpll dec das (bad) in adc dec mov bound push sbb enter sar dec mul xlat sbb xchg icebp add aam fs (bad) repz ds jmp push nop or xchg mov rorb mov lret mov into xor popf nop cs popa out dec stos addr16 cwtl push mov mov add mov sbb cltd es dec out stc outsl lret scas jno cmpsb xor sub push inc and rcrl add mov (bad) mov pop stc shlb sub add mov fsubr push out pop loop sub jnp push (bad) decb pop jg call aad sbb nop pop sub sub (bad) sub sub out out mov dec iret std nop mov mov jmp pop cltd mov pop mov xchg ljmp xchg and inc (bad) idivb addl sti mov lret mov cmpsl jecxz cmp in movsb scas pop inc mov push add jmp incb jo xchg inc cmpsl sub pop fsubrs js (bad) mov icebp sub aad sbb add out xor (bad) cli mov bound divl (bad) sub iret add cli xchg sarl fucomp in negl stos fs sub cmp push push xor leave not push jbe jo lahf pop pushf (bad) and into das jmp ds insb lock xor pop bound es dec sahf pop loope ljmp and xchg mov clc leave xor cmp mov or xchg into pop out push and jb mov cli pop push mov cmp imul (bad) ljmp popf and daa pusha test fsubp in add mov ret bound (bad) jmp cmpsl xchg jge jnp subl cmp cmpsl pop rorb cmp dec mov push icebp lcall (bad) mov ret push sbb pop ja (bad) sbb dec cld (bad) ret into push cmp pop (bad) jmp bound xchg mov sub loopne mov mov test pop adc adc or push sti bound aas sub xchg stc repnz xlat add and inc lea pop (bad) mov sub ret adc mov testl mov xchg xchg imulb dec leave jnp mov jl mov add mov fs int3 bound xchg into inc adc jg mov mov sbb jg jb cmp pop xchg mov clc mov andb and repz cld (bad) stos xchg add lock dec mov inc jno inc imul lret frstor or in jl,pt and icebp incl sub add out adc arpl jle es xchg test lahf (bad) adc inc adc mov rorl pop inc and xchg xchg mov out int3 fbstp adc rorl sub sub test cmp popl mov push sbb xlat loop inc pop mov xor push and fs icebp or sub lcall lock fdiv fcom xor movsl add pop gs shr call jecxz aas and pop cmp adc nop xchg imul movsb pop inc enter pop mov pop cli inc and push nop mov adc xor sub jle clc and js push fwait fs inc popa cwtl add out ljmp mov nop adc adc xlat lds rolb jg rclb add fcomip jecxz cmpl pusha cs add test and enter data16 test xor bound adc dec dec mov das cmp xor pop pop sub les mov call mov xor lret cwtl jnp mov add mov fsubrl push sub dec stc inc mov sub xchg sbb inc mov push lahf test inc sbb rorb mov dec nop notb push into add mov xlat pushf sti pop dec scas cmp push xlat shll (bad) test fdivrp mov sub jl test push add pop mov push inc flds xchg mov mov sub mov lods push add sub mov xchg pusha mov inc and mov sti shlb lcall ret inc mov inc scas negb int daa adc jmp cs or sti in mov mov movsb push add dec sub push sub xchg not jle mov push icebp and loope lea repz das push inc dec dec aad aas push sahf adc insl iret dec adc jecxz or sub mov (bad) xlat in cmp or std sbb int3 and mov (bad) mov inc add jg dec loop je fadds (bad) scas mov dec mov sub sub or add pop xor daa dec xor mov and xchg (bad) dec xchg nop or or dec loop test push in cmc or jmp fstl out or test roll xor inc (bad) out fdivrl adc jno xor frstor (bad) or add cli xchg xchg cld ret ds pop jle push xchg mov jbe repz sti flds (bad) in mov mov and not dec adc jecxz das or rorl and xchg adc jns cltd (bad) push aaa test dec std imul dec sar and fidivl (bad) xor popa pop outsb sub jno sub sub pushf add fstl mov dec insb sbb sub movsb and lods push daa mov aad or mov icebp xor jne ljmpw subl repz dec xchg jg pop xchg xor ja xchg xor mov or jne aam xor xor mov sbb pop xor lock push cld in sarb aas and enter bound mov cmpsl add daa add out jg pop add cmpsl jp adc lret dec cmp mov xor imul aas mov mov pop inc lock (bad) stos mov enter jecxz mov inc test sub lods (bad) jno lret sub outsl enter add repz xor xor push dec mov (bad) cmc adcb cwtl inc and stos pop bound jecxz jl push jecxz adc pop divb test lret jne out ret mov dec popf movq and ljmp fs inc js test sti sti add loopne paddw gs xor pop mov ljmp shlb xor xor divb jbe lret arpl cmpsb mov (bad) cmc lret mov cmp sub sub push inc jbe pop cld sbb xchg out mov sti sahf cwtl and sub and xlat cmp fbstp xchg push cmp movl scas popa xor sub das negb sub sub into dec in loope sub test xchg jb in push sub loop mov jle rorb jg pop bound xor sub jge pop dec stc (bad) idivb cwtl mov mov dec jmp daa notl lcall int3 xchg dec out outsb add mov gs andl mov bound or ja mov adcl int add ret dec cmp in pop aam cli sub pop pop pushf xchg call sahf hlt das adc inc inc call mov or fsubrs cli cwtl inc push test shrl xor sub mov pop push xchg rcrb (bad) stos jbe test out sub std pop cltd jne pop xchg mov jno xlat inc sbb jno and test ss cltd pop div add movsl dec das fmuls jmp out aad xor test mov scas leave fucomip mov out test in dec lret out inc and int3 cli and jb cmc enter cld xchg ret (bad) insl call ss shl pop pop pushl mov test fistpll xor sub leave (bad) sub adc xchg add ficom fs add xchg push pushf or cmpsl lcall lock mov or (bad) popl xchg add and mov adc push (bad) dec mov mulb xlat in cmp arpl lods fistpll add lcall add decl adc mov sub and xchg into jp sti mov lds loope and mov fwait (bad) lret push jg pop inc clc xchg enter insb sub dec shr mov mov cli and or in mov scas negb xor out sub movsb xor pop fs mov add ficompl add and jno mov loop dec push mov pop pushf inc in pop test add and (bad) gs ljmp (bad) mov stc pop mov ja xor movzbl leave in fidivl in or cmp mov insb lods add pop adc add (bad) lock fs mov (bad) jmp pop cwtl jnp lahf pop (bad) lods pop jmp lock stc out sub mov scas (bad) dec test mov push ret xor repz mov sarl fwait sub (bad) popa inc (bad) int std cmp inc mov jns pop sub out pop mov mov (bad) pop dec in pop scas sub ret and xlat roll xchg jl lock xlat mov sub cltd mov inc xchg adc das add jmp xchg sub adc mov std push (bad) mov push rolb adc cld (bad) xchg jg or push daa out inc dec mov (bad) bound or xor rcll mulb dec out mov add fsubl mov mov loope jmp pushf dec (bad) jbe bnd sbb data16 or idivb (bad) dec mov aam fs inc outsl xchg push ja pop clc in pop mov cmp or adc js addr16 adc stos cmp or push sub and jle jmp loope imul sub push popf repz push ja push mov mov or xchg ret cmpsl pop mov add mov lret pop jbe cwtl or idivl push clc iret xor je mov les stc addr16 leave dec dec bnd mov jmp dec cmpsl xor out adcb stc xchg gs lret pop sub daa lcall add fbstp lret xchg (bad) fucomp cmp out mov push or nop clc (bad) jecxz loope ja inc jno ds fldenv call jne sub outsl jmp data16 (bad) mov dec fsubs loope sti test ljmp inc pop jnp popf out mov popf dec inc jns dec out lret es ficoml pop leave jns inc jno push mov inc aaa (bad) xor (bad) mov mov loop,pt xchg adc es push (bad) out xchg stc cmp or out or mov cmpsb mov testl mov xchg jne daa cmpsl mov pop xchg mov jb xor jbe insl jno dec xchg cltd xchg jnp and pusha mov xor mov daa arpl mov jmp and (bad) int mov repnz test sub mov loop (bad) lret pop push test pop xor xor add fs mov pop xor dec mov cmc adc pop (bad) lret pop lds jno xlat test push (bad) or ds xchg mov cmp jnp inc xchg cwtl pop xlat jns imul add cmpsb pop call test in xor and mov test scas loop xchg pmulhuw pop shll imul cmp jmp into lahf push xchg inc pushf xlat pusha sub dec mov and and pop iret loope aas (bad) dec jp fisub (bad) mov out xor aaa out repz sub ret and mov xor fbld mov add popf sbb in lods xchg popa adc dec cmp dec repz (bad) mov xlat jns push mov pop mov adc xchg faddp addr16 daa lret mov sub and idivl iret mov mov ds add cld stos test dec jecxz rolb push fdivrl lcall sbb leave mov pop sub (bad) mov xor ja lret lds adc inc test mov das pushf and dec (bad) fwait in test loope and push cmpsl push das cmc add movsb call dec call pop lods mov and or sahf adc out pop test adc loop lods sbbl or and jne fiadd (bad) cmp lret fsub pop push inc cli or lock jmp in in test mov sti mov ret sbb mov xlat pushf jmp and xchg dec orl outsb mov xchg out xor idivl (bad) sub or lcall jmp lods sbb cmp sub jb negb pop pop out mov push scas push (bad) bound iret mov ja in repnz (bad) ljmp push mov mov int3 xchg add add pop aam or lret mov mov xor mov jmp mov andb sub fbld xor mov xchg ret sub bnd xlat lcall pop fwait outsl fcomps mov daa add loopne or add and lds stos cmpsb mov in sbb repz dec mov xor jb daa insl sub pop jmp xchg adc scas lea ficom inc xor ret fcompl into sub test sub sbb and ret mov sti flds insl mov mov rorl xchg mov pop popa repnz sub (bad) testl frstor add negl popl jno ret sub sub cmp xchg cmp lds enter cli mov out (bad) mov add in add jne jecxz dec loope add popf add xor (bad) mov cli mov lret jno or cltd ss mov movsb ja into pop mov or loop dec in mov ljmp mov push (bad) dec divb jmp cmpsb fsubrs into lcall xlat fisubr (bad) add inc gs xor mov push repnz rolb fs mov sub push xor out cmp mov jnp or into xor scas push fs and fsubrs bound pop xlat lds std xchg mov rcrl sub cltd movsl mov (bad) call or icebp clc ds sub jno and pop and mov cmpsl pop insb sub outsb xor jbe ret pop mov xor adc and fdivl lcall pop out mov sbb out xor sub adc imul or negl or sti mov pop jo into xlat xchg js cmp mov imul jno jl and (bad) outsb mov mov ror mov mov jl dec insb cld push das mov xor inc push or data16 pop test pushf xor test fs jmp cmpsb ljmp mov in mov aas mov ss popf loope add and and dec out outsl cld test pop mov outsb adc mov inc (bad) lret sub and or mov mov mov dec (bad) xor stos repz popf stc jno test sub dec mov test add dec mov pushf xchg cmp orb cmpsl mov cmp push push push mov ret jno xchg jecxz fs inc xor pushf or xchg fist mov or add dec ljmp lret cmpsl jge or xor addr16 xor dec sti fisubr imul lods es mov cwtl ja negl mov adc aas (bad) lret add xchg inc (bad) mov in cltd xor repz sbb cli rcrl (bad) adc add xchg shr int jle jne xchg push xchg iret push in dec jge cwtl fwait cmc scas fild pop and aad ljmp push stos out adc cli jmp sbb push adc inc mov jmp lea mov rep loop cltd jg imul icebp sub pop (bad) pop fiaddl leave icebp adc and dec adc jmp mov jmp gs lods (bad) std sub xchg push push fs out push cld lret or repz lods inc xor js (bad) repnz scas std push repnz pushf iret xchg ds mov jle ss rcrb (bad) xor lret pop pop mov push mov push or ljmp pop insb xchg idivl je int3 add jb dec sbb adc jns repnz jns aas lods out push pop sub jecxz (bad) out adc adc (bad) add not pop scas sub inc in andl fmuls fnstsw hlt stc mov dec (bad) lods dec movsb jmp and adc and jge pop in ljmp scas imul push pop inc and leave lods scas push add pushf frstor push cs push loope addb lods rol out mov jge lods cmp ret sbb mov loopne imul adc add inc dec (bad) movsb mov std aaa sub push stos (bad) daa das loope adc sbb jno fimull enter and fisubr scas insl mov jg mov pusha jo mov mov (bad) or sub sbb sub sub test daa push pop sub push mov mov pop stos add xor or fstl dec aad mov inc pop sub mov pop (bad) rolb fild pop sub sub icebp cltd inc add cld movsb rcll (bad) jg cwtl lea jno xchg mov and lds aaa and add jge add rcl daa ret call dec add adc pop push insb add pop (bad) out mov sub test test lret repz mov out push cwtl test fildll push mov sti je repnz sbb or sbb pop (bad) in dec repnz popa and mov sub out shrl jecxz sub ret jecxz jmp xor sub mov out jno mov insl scas mov cmp std dec repnz or addr16 test jle lds das adc push xchg push sbb add cmp repnz out sbb add cmp mov out lds mov aad push xchg push xchg xorb mov dec push pop out test lret lods (bad) daa iret jle ret jnp and (bad) dec xchg dec jmp dec push (bad) fsubl outsl xchg inc adc or shll cvtps2pd mov imul (bad) roll xchg or cltd enter loop xor lcall dec into add sub jmp pop sub xchg sbb cmpsb scas enter mov push (bad) adc and ds add test lock mul iret (bad) push push xlat push adc add (bad) dec xor inc jmp into scas in xchg pop sbb es cli int3 jmp ja daa test dec add lock mov roll xchg or (bad) in insb popf (bad) cmp or push outsb shrb in adc inc sub out jmp loopne movzwl in sub and test pop dec fs add jns in loopne int3 movsl mov sub mov xor popl push add ficom imul stos pop lret or jmp (bad) xor aad lret sub mov jbe scas xor xor jl jo,pn idivb add dec ljmp xchg mov fisubl pop jnp jns negl add add xchg dec cli inc jns dec out mov pushw cmp pushf in mov pop mov enter dec push add repz fs mov mov mov (bad) xchg sbb push mov roll cli leave aad popf imul or scas shrl xchg fmulp ret jns dec pop sub pop call outsl and mov icebp movsl loopne jns imul (bad) mov mov iret daa mov sbb dec pop xchg cmp cmp fcomip fmull sbb mov push lods fcoms pop adc hlt mov pop pop mov xchg fisubrl or xor xor in ficompl or xor or hlt jae and (bad) xor xor ja pusha scas sub sub pop sti test dec icebp inc sub cmp mov cmpl (bad) movsl stos loop xchg into decb (bad) sub loopne mov cs or xor imul lret dec jl and das sub in xchg xor dec les popa xor (bad) lret sub subb mov or imul lret stos mov xchg int3 add xchg fist dec bound hlt xor mov scas mov mov out jne jmp add mov mov sahf mov pop sarb (bad) lds pusha or or mov cmp jmp ja inc sub enter mov lcall scas pop repz xchg dec flds (bad) jecxz sub mov cld push iret aad dec test adc xchg ret jbe rep add cmp jno std sub dec orl lret daa hlt or push insb mov int xor push dec sbb pop aam cli in je (bad) jnp (bad) inc or (bad) jne (bad) icebp sbb sub data16 clc jbe xor mov lret pushl in jmp push xor sbb dec lock out mov dec pushf jmp inc sti pushf add dec inc pop movsb test divl ficompl or sub mov lahf fnstenv adc sub idivl pushl mov repnz shlb pushl jmp sub (bad) repz pop sub add add rol dec clc mov pop xor inc push sub (bad) ss xchg cmp and pop test jo push dec shrl enter xchg scas push jo sub add fisubr mov repz dec pushl adc sub add icebp sub mov dec cld mov sti lret mov movsb (bad) fisttpll inc lods adc cmp (bad) or jne push dec inc sub mov xchg and mov fsubrl movsl loop push mov movsb out xor repnz cmp xchg xor or add lcall add mov mov or leave rorb movsl inc fmuls sub daa mov jae push pop out jnp loop data16 les xchg int3 lahf mov fimull lret imul jecxz jne cmp push call push push jge mov push fwait lods push sbb or jb mov int3 mov mov and gs xor mov lret mov jnp out mov sarb cmp cld pop mov pop stos in adc orl aam mov (bad) out dec mov in stos popf call popa lahf jle nop ljmp out sub cmp out ret std or jo or sub ret inc xor jbe jmp mov fmulp and sub mov shr call push inc push sub add push cli xor xor xchg ja pop lahf pop mov int xchg push xor jbe add sub clc ret int3 ljmp (bad) or insl aas fisub das out inc (bad) xchg bsf movsb jmp xchg push adc daa and aad adc inc das pop cmp mov pop mov leave sbb jle inc mov mov imul dec adc add pop add lock jo or cmp dec mov xor mov adc dec fstps int3 jge lds movl jns adc scas sub popf pop and sub movb jl mov xor std loope jmp scas cmp add sarb sub lahf inc cld sahf nop inc and (bad) and ljmp pop sbb mov jge xchg xor mov cmp jo out xchg xchg lret jp dec or push cs cld je cmp adc inc mov lret sub add scas sub cmp jl repz subb fiadd jnp call xor sub and inc ds negb (bad) or cs jo jecxz mov push pop imul repnz aad (bad) cmp sub ret fs stos out push sub mov pop mov or push pop mov out loopne inc xchg lds sub sti imul mov inc mov pop jmp lock inc fdivrl pusha movsb mov dec fmuls push lock addr16 int3 leave cltd test and push sub jl xchg pop sti sub xchg or mov sbb (bad) fisubr scas mov rorl je ret mov push pop xor mov (bad) pop in lret and rcr cmpsb daa aam daa lds (bad) jmp fidiv push xor lahf shrb cmp or xchg pop les mov pop ljmp sub push sub or sarb cmc lahf cmpsl (bad) jbe jb (bad) sbb inc clc dec push mov push (bad) das adc dec loope leave cmp loopne cmp add jmp fldl2t in jmp cli pop clc or or stos fs repnz xor out rcr xor push add cld arpl lcall out inc cs popf pop out xchg fstpl (bad) and sti and fild sub sub popf fnsave in sahf or sahf or push std mov pop inc push scas cmp pop add pop stos imulb adc cli mov and daa fisubl pmaxsw pop or push mov jns dec repnz popa add xor lret jbe inc sub fdivrs out adc or ret pop pop call mov mov xor inc jge adc cli fidivr add leave rcll jo dec lret hlt out add in pop push or scas bound rorl ja and push mov push mov pop xchg lret mov cmp ret mov mov jns mov out xchg mov fnsave sub and pushl es push push sbb frstor sbb xchg pop repz das imul (bad) (bad) lea fidivl adc lret lcall mov sub mov mov aad or pop mov jmp std dec dec call fidivr jns movsl stc out push dec roll into in popf sti xchg cmp nop jle jae es cs jo addr16 mov in inc mov test stos out adc and mov mov scas sub sub mov stos mov inc jns fmul and inc adc jo lcall cmpsb movl push cmp fdivs mov sub add stc jae adc pop lss and and push pop push or ljmp rcl pop icebp imull scas (bad) push cmp fstps cmp les cmpsb xchg add in pusha outsb jmp pop jnp (bad) das xor incb jmp sbb sub ret dec mov (bad) pop push loope push fcomip sub rolb pop fadd movzwl cld jle (bad) mov or (bad) repnz aas mov je lea push lods adc in push add in in test xchg cld xchg mov aad cwtl mov add ret movsw cmp push test ret fnstenv (bad) add mov (bad) jb ret mov les lret pop popa mov ret stos push (bad) mov adc inc mov xlat add add mov mov test loop orl ljmp sub ret push or fstpl inc movsb jmp dec jecxz or lret mov loopne push pushf push cmp push cmp in and xor mov and xor pop add push call jne,pn jae repnz testl mov dec int3 fucom pop and ljmp lds dec xor xor or xor icebp fstl add adc xchg sbb add cmpsl daa mov divb je dec xchg (bad) mov jne push cld loopne hlt aas lods in mov add pop push fcomps mov mov in loop jl in pusha jg jb int jecxz xchg scas je loop and popf std mov (bad) xor into mov mov add cli negl cmpsb aaa jne lods aam imul iret mov lret mov add test push pop pushf adc fistp mov fnstsw in lret hlt add roll pop imul xor repnz jecxz (bad) xor jno das ds into sahf xchg adc cmp out scas lret test call clc pop pop (bad) lods fdivr pop out fs lret mov test mov xor stos xor pop xor popa pop add dec xchg or mov popf mov inc sbb lcall ds fnstenv xchg stc test scas mov aam jg or movsl push out mov jle cmpsl jge ljmp push mov pop pop or sub sbb jbe imul xor mov sub jmp pop xor outsb mov call imul (bad) mov out idivb mov pop and (bad) cli mov or jno leave les pop pop sub fstl add aas arpl xchg jbe cwtl repz (bad) out in or inc mov out cltd (bad) push test rorl rcll dec bnd xor (bad) mov fstpt sub mov pop xor test lods push mov push clc cmpsb addr16 jb jb ret pop leave pop lret int3 jne inc scas xor jns test sub negl pop inc xor test iret jnp and pop mov jbe lret icebp push mov add repnz jge and in cltd sub in sti daa lds lock ret or push ficoml or mov sahf dec push ja std bound or jnp sahf rolb lcall mov add push lret test xor jno movsl lock loopne jp scas movsb andl sub pop (bad) call push jge out add mov xchg into mov xor test xchg pop or incb mov pop mov adc and mov jbe pop fiadd pop (bad) scas or fwait inc daa jo dec mov dec idiv es push pop (bad) rolb clc mov movsl call push fidiv or and add pushf jmp sub push adc adc xlat dec mov xchg int3 and icebp and jp movsl pop stc (bad) xchg adc test repnz sarb xor call and xlat mov fdivs xchg adc popf jge mov cmp jmp std and lods insb mov and rcrl adc pop stos or xlat pop repz ret sub fcompl lahf out fnsave rcrl lcall cwtl outsb mov pop mov or jmp roll clc ljmp mov adc rcl out and test ret fs (bad) lods dec jmp push inc pop mov sub mov and dec pop into and or add dec ret add sub repz inc dec xchg xchg dec (bad) outsl int insb push repnz push imul mov xacquire cld xchg push pop sub pop xor pop les mov mov out pop cmp dec (bad) loop clc decl (bad) mov pop outsb pusha sub dec fdiv leave mov jmp xor fldcw test mov mov shrl in ja sti fs cli push (bad) repnz adc incb lods adc sub lret ret ja je or add jb leave pop cmp lahf or into mov cwtl das repnz mov mov mov sbb shll ljmp jae push fadds dec and inc (bad) fistpl xchg adcb shrb cmp adc or cltd sub sub fistpll mov push sarl or add jo xchg dec lret mov jge sbb sub cmpsb es sbb xor mov mov jbe pop cmc xor and ljmp ret pushf and popf mov pop cmp sbb dec mov pop out les clc sbb lock out in mov (bad) xor enter jg jp xchg inc and clc mov inc popf dec (bad) xor push pushw pop inc (bad) nop mov and aam xchg sub das addb sub and ja decb repz shrl cmp pop mov (bad) push mov out dec fstpl lret out ret sub lods pop mov je push pop dec jmp xor jp xchg shrl adc mov shrb sti mov or xchg dec add or in sub mov loop cwtl ret and jb cs arpl out fstl and cwtl stos jmp or mov (bad) imul sub lods mov mov addb aas sahf rorb mov cmp clc rcrb or rorb hlt dec jmp mov imul roll flds xor push gs inc sub adc push mov pop mov stos fs fadd or das sbb lahf mov fnstcw out mov and mov and shrl out clc mov adc icebp stos or std gs in popf (bad) push popa xor add hlt add lret scas rol cmp bound int3 adc xchg cwtl fwait or adc dec sub sub cld pop pop xor jmp sahf sub jle xor loop adc cli jp in pop mov cltd popa jnp mov jg jg movsl xchg ja pop dec fbld (bad) sub mov jmp rorl adc addr16 rorb and and idivl push jno push es shlb fs (bad) jge add add xor sub pop mov adc cmp jmp add pop mov je es sti lret lret and cmc movb icebp pop or adc or xlat inc out xchg je out gs mov imul cmc xchg test stos and repnz pop add daa add push and push in sbb cmpsb (bad) das out jne lods dec jmp mov xchg and rclb lea testb les idivl push into pop into stos mov jg or mov lds out adc int3 jno dec rolb push xchg dec lea ds mov test (bad) (bad) xchg jo lahf cwtl jle (bad) mov sub and sub (bad) lea jg xor (bad) pop repnz mov or scas lods mull test loop xchg scas fmul loop push ljmp mov adc push iret mov mov outsb (bad) dec dec mov imul add pop out adc add mov pop add mov fmul popa xchg out jle dec lret sti insb push cld sub add push push gs add fcmove pop gs scas add cwtl or iret sub rcl cs jb out jne mov xchg cs fisub test xchg lret inc mov jno jmp adc jmp xlat mov frstor pop sub pushf and xchg pop (bad) cmp ret or (bad) inc test cmc mov cmpsl mov lods stos jl or add out sub xor stos xor shrb (bad) lcall xlat push fs (bad) add rcr dec pop mov sub adc add mov ret inc pop daa jne aaa or data16 das and int3 mov xchg jb xor pop mov xor inc pop out daa (bad) jns into adc ljmp out popf lahf cmp aas mov adc je xchg sarb sub ret or sahf xchg and xor divl inc dec loop xchg mov mov mov xchg movsl dec and enter sub aad xchg in out adc std xor lea jle ja push xchg (bad) jne sbb or dec mov push scas stos mov jnp dec or or nop mov cmp xchg mov ficom movsl shll dec inc dec das or fs (bad) ror add out call mov xchg push sbb out (bad) into outsb dec and gs or das imul mov cmp test out notb adc and and dec (bad) lret mov push pop out popf add pop jmp pop jb lds stos sub pop and outsl cmpsb loope leave repnz stc ljmp xor sbb and inc dec and xor sub repz cmpsl push inc mov fimul lret fldenv and loope outsb xor mov jle icebp sarl in roll in das mov repz cwtl mov mov mov loope std js fmull pop shrl leave pop fs inc das outsl lods aam call pop scas cmp sub scas and fisttpl pop cmpsl test and cmpsb push repz sub or pop mov push bound pop fisubr in mov popf push movsl xchg pop and divl jecxz fldcw sub add jnp jmp out idiv adc test ret (bad) cld imul insl sub mov jnp (bad) cmp (bad) into movsb test xor out push sti push dec jne push or jbe push (bad) sti jno out adc test leave xchg out push pop or fistl lock stos daa fdiv lret and and push pop iret sub lds movsl test shr sbb push push test fistp dec pop mov sub xchg idiv mov dec js fisubr (bad) (bad) fnstenv xchg mov cld and notb (bad) (bad) push sub stos mov fnsave mov pop or lds add adc sbb dec or jle movsl incl sub and icebp mov fcmovb out mov (bad) sbb lods xor jl adc enter aas js test sbb pop push sbb out mov inc sub sbb or jmp inc mov cli and cmp cld and push in mov jmp leave aas mov pop mov sub pop loop add test and mull fdivrs xlat icebp ret sub push sub stos test and shr repz ret or (bad) xchg (bad) rcr sarl lods sub mov sbb jg push push lret dec push fiadd pop jle or int3 or dec cli scas lret adc add cltd iret (bad) cmp sti mov (bad) shrl cld pop shr lahf and jae out (bad) (bad) daa xor jnp sti xor sarl das icebp add (bad) adc adc mov lret daa or cmpsl or jb mov fsubl xor dec repnz fwait mov sti xor (bad) xlat insb push pop fcmove stos and pushf mov mov movsl mov adc scas rorb ljmp insl push (bad) shlb xchg pop xchg push mov mov out and xor arpl sbb jne jb mov xor pushf scas sub sub sarb mov lahf push fildl add fnstsw lds mov xor xor sar (bad) lret loope add mov int3 push and repnz stc mov mov negl cmpsl dec and int3 cmp mov cmp or mov lds cmp push mov xchg push stc xor leave add std jecxz in sub lcall stos leave (bad) fcmovu sti mov ret sub or pop hlt push xlat ljmp repnz inc sub pop sbb ljmp sub jg (bad) mov aas sub inc xorb and cmp or fs jmp enter push cmpsl jg repnz les mov test sbb and pop rol stc add ds enter in xchg adc cmp dec orl and sbbl add and sub imul divl inc inc xor sub repz mov pop mov push sub mov push cmp stos lret test jecxz xchg add xor and sub xor clc xchg xchg call inc dec outsl lods dec loop push cmc and or adc adc push mov adc ret jnp fmulp dec pop fstps (bad) fwait ja push imul out icebp stc vcmpps dec imul ret mov js (bad) dec xchg sub mov mov xchg out (bad) cmp std jp (bad) cmc cld dec push loope out mov daa ljmp mov movsb and xchg repz adc sub jae push or pop sti adc jecxz popa (bad) cmp lret xor jle dec dec xor roll cmp xor les cmp cwtl xor jo lahf mov pop pop (bad) and fs mov lret (bad) or roll lret mov jnp fsts into mov mov sbb sbb sarl sub xlat mov jnp repz mov add sub test gs aaa std mov dec push movsl int3 or mov xchg es and mov inc test ljmp shll jnp les xchg repz pop sub and cs fsts aad jle fstps fdivl out dec mov push xchg popa adc or and (bad) mov jmp shll bound sub adc mov divl jae mov mov out jg or jecxz daa rcrb aaa fs test fsubs mov daa add xlat inc fdivrs jl cwtl call mov jle lret or clc add stos ret adc mov lahf cld fidiv cli aaa mov dec mov pop rorb lods or (bad) icebp mov sbb mov mov test push shl icebp outsl inc xor mov jno adc sub sub xchg cmp mov mul push sbb mov xchg push ljmp xchg pop subl jnp es sub push fucom pop daa pop mov lret sti mov subb mov (bad) dec loope notl dec push xchg mov fist jae fs das xor decl xchg les daa add push rcrl mov sub sub ds jne popf and xchg ret jmp lock out bound push rcrl push neg fwait lods gs adc cld into dec mov lods jp icebp (bad) aaa jmp mov test jmp mov add mov jo jge xchg ret mov fldl sub fsub lahf test scas sub lahf mov clc (bad) (bad) mov ret and call sub mov ja inc sbb jne mov inc and pop scas imul mov xchg in adc cltd andl push ss xchg cmp mov into add xor std mov dec pop inc daa xchg pop xlat pusha repnz out jecxz push cmp (bad) in (bad) out mov jae lods rcrl in pushf xchg ret lret jge pop add imulb xor pop enter in push mov (bad) loop daa aad std bnd push inc push rorl and mov adc scas stos sub out jmp add iret ficoml mov mov cmp mov aam loop adc repnz jnp cmpsl mov test test sbb fstps movsl ja mov xor nop imul push adc mov inc ret xchg js adc add in stc repnz fisttp push jle and jnp adc mov (bad) iret cli mov dec push xor ljmp (bad) jmp dec enter dec ss popa mul and or sub (bad) aam daa mov (bad) sbb adc jg mov mov movsb out cmpsb and add int xor or add (bad) ljmp stc outsb popa and dec loope cs lods mov add (bad) mov lcall push lds jmp mov sub in sahf orb mov pop test (bad) mov lock mov or stc inc andl ds test sub or loop xchg lahf or imulb or lret clc (bad) xchg das pop loop iret fisttpll or mov popa dec xor cmp sub xor sub mov and and clc adc repnz js jmp or inc sub movsb xor sub ljmp adc mov das sub sub outsl sbb scas push insl imul (bad) jne or fnstcw and and xor sbb lds add shll mov enter clc pusha stc sub rcll cmp dec les fidivl stc adc sub stos sub out mov stc pop in cmp rclb cs adc xchg (bad) xchg rcrb inc dec adc test mov pop gs stc movsl mov sub leave jle sbb cmp or sbb inc daa inc clc pushl mov sar sbb xchg je jg cwtl add cmp mov mov pop and mov call pop adc divl dec ljmp outsl and andb popa pop jg dec xchg cmpsl push sbb sbb mov mov mov mov ja (bad) lds sarl push sub xchg sub arpl mov add bound add and push xchg mov daa jl leave cltd stc adc jmp pushf xor (bad) xor xchg xor sub sub cmp clc xchg mov inc sbbb movsl xchg out notb leave rep or pop outsb inc xchg fsubs ret sub push jo xor roll jge out ss fsubrl mov imul (bad) sub hlt inc or add das popl jl sti ret inc sub sub adc ret pop add cld and and (bad) rolb cmp dec popa dec (bad) push dec sbb and add lock and push imul ljmp loope sahf mov fs cmp and cmc xlat sti add push ljmp lods les push lock mov ljmp mov push sub sub mov imul jg leave idivl test push enterw sub out sub es xor or cltd pop fs ret or repnz adc lods inc roll inc and hlt mov ljmp in mov out xor push xchg xor aad and pop jbe push pop aam jmp or add add call outsb out push ljmp call in sti add std test imul cmpsb jg into pop lds jmp push mov dec addb in fiaddl test and and repz xchg inc push ficomp fstps sbb sub repnz movsl (bad) cli dec sub xchg jmp add je jmp pop mov push negb ss adc es dec ret and mov push int3 ret xor iret pop pusha dec jns sub mov sub sarl cmp mov cmp xor push push mov (bad) fdivrp adc jmp pushf adc outsb sub dec vmread or sub mov testb add (bad) cmp orb add mov jns mov aam and ret xlat pop xchg scas pop pop adc fsts in mov das push and jo cld or add mov stos popf xor out scas sub test lock not jp mov push fdivrs mov mov sub jmp sahf mov xor mov mov and adc jmp push add sub mov dec test fstps sarb mov cld repnz adc fldcw pop jns dec mov js in xchg lcall xchg (bad) pop cmpsl jg dec loope (bad) jne sub mov shrl (bad) jp fldenv ljmp dec aad xchg mov cmp fisubr adc in rorl mov dec pop mov (bad) pop cmp aam shr sti xchg pop inc sub stos (bad) into dec test add push lds scas mov mov push out nop pop rorb mov mov sub imul and sbb dec jg jns dec xor mov bound pushf push std mov mov popf (bad) lock xchg jae cmp or jg adc or and jecxz test repnz ficom cli mov jle rol xchg mov jmp adc je loopne pushf pop mov imul (bad) cmc int3 ret mov (bad) pop and in xor dec pop sub cmp mov mov jl pop (bad) cmp xchg mov call sahf inc dec cmp inc pop add and lea and fsubrl push in sub adc icebp sahf dec xchg testb cwtl jle shll repz lret js jmp or lea in in add stc add roll cmp jmp or sbb loopne push push and sub xor push data16 pop mov pop cld movsl ret push fildl jmp adc sub push roll lcall negb in dec sbb add imul add mov shrl cmp add and xor mov cli loop mov add sub jmp out pop gs mov and or (bad) out out and int sub loop xchg jle add or push jne adc pop or dec and std xchg sbb dec mov push xor cmp mov mov add cli rep mov inc and mov xchg or mov add (bad) or stc mov out sbb mov rorl push sub daa cmp ret test insb jnp jle in movsl add mov scas mov and mov in gs sub sub pop mov jmp inc xchg dec ljmp sub inc fmuls jnp jmp lds loop lret fistpll outsl ret or lock andl iret movsb pop bnd sub clc adc lock int3 aas sub pop push negb cmp xchg sub ljmp popf fistp add mov pop mov fiadd mov pop xchg cld push or addr16 and xchg jbe inc add jecxz dec test dec mov xor mov dec jg adc mov into and ja and daa pop mov or xor sbb out pop std and test add push mov pop mov xorl cs ljmp fdivr add push enter push (bad) (bad) push mov imul sub xor xor fwait loopne add negb (bad) xor lret iret leave decb fistl dec stc nop scas int3 and push jle and jecxz mov inc insb add jg test xor mov sub idivb adc sub xor push xchg dec js push xchg mov xor test mov (bad) xlat ficomp xor inc notl movsb lea adc and rcr or lock mov int ljmp inc dec out mov es iret adc cmc sub xor xchg mov xor (bad) sub pop adc sti adc scas hlt incb add mov out cmp imul cmc pop das sub mov repnz (bad) cmc jns lret (bad) out and (bad) insb push pop sti sub insb fcmovnb sub mov xchg ljmp pop adc lret add lods pop out and leave stos (bad) xor lcall sub pop xchg push xor ljmp iret popa xor and sub xor outsl test insl cmpsl and mov mov xchg mov inc xchg div jns dec mov fsubrp pop fild and sahf fstl fbstp mov sub sub and decl iret stos cwtl add xchg cmp ss lds movsl hlt repz adc sub aaa mov clc inc adc push aaa xchg stos mov daa pop and scas shrb jmp adc and out lcall fcoml or rcrl xlat dec into adc int3 push fidiv (bad) or or push leave mov stos push push mov jmp push and es and lahf das xor pop (bad) ja mov shrb cmp ret aaa imul repnz ljmp push daa mov dec inc bnd repnz test mov vrangess xor push and imul (bad) xchg lret mov stos repz dec mov add xor cltd into loope mov push rorb push inc adc out stos pop fistpl cmpsb mov mov push sbbl xchg or add imul fcompl xor inc jle cmp mov jns adc add pop xor repz add pop mov stc pop outsl (bad) mov jge xlat jno xchg adc into movb or inc push jp mov fbstp sub rorb mov or pop popa push lock mov cmpsb xchg jg ljmp aam notl (bad) mov pop iret ds mov outsb jle pop ds mov cwtl mov adc pop mov sbb add mov xor jns dec jae sub out pop js movsb cli test sub or insl mov mov xchg divl jecxz sbb pop mov cmpsl xlat dec ljmp movsl cwtl addr16 rorl cltd inc cs sub negl dec (bad) ficom sbb dec cld aam mov pop scas not mov inc loopne in sub mov cltd or xchg cmp mov sub (bad) mov and push in cld (bad) fdivrl addl call cmp mov mov inc loop jns gs mov popf fs xchg out mov cmp or and les jp dec enter ret cwtl pop or mov je cli test xchg in mov jecxz mov pop xor mov test cltd sub int3 fs mov inc or fist push pop lret sbb xor mov jl ficoml and sub push (bad) xchg or pop cld lea mov pop call xor (bad) test loop jne gs jbe clc push sub xor lcall push push sub or xchg xchg popa sti sarl imul cltd pop inc or cmp add movsb out std adc pop ljmp mov sub mov and add dec or mov jle loop cli push fdivrl (bad) fs xchg pop mov xchg xchg xorl js mov xchg sti repnz ret adc mov xchg int3 and add dec sti sub cmpsb xchg xor repz lret jmp pop ss cmp sub xlat test loop xchg inc hlt or xchg divb mov fldcw cs cmp out daa adcb and scas and ljmp dec fyl2x icebp sbb sub mov ror les xor fisub cli in in into push xor arpl xor outsb call jno shrb sub (bad) push repnz pop mov dec repnz (bad) mov fbld pop icebp test mov adc in mov rcrl add mov cwtl add xor aaa rol pop jl movsl xor insl xchg sbb out imul mov lods icebp dec and popa dec and aaa and add xchg cmp js pop shl sub (bad) push sub or xchg sbb push mov nop xchg pop popa (bad) ret jno stos sub pop (bad) scas and push popf lock out add fist sub lods push push jns test ret cld pop ljmp pushf cmc sub and xchg cmpsl mov test imul pushf (bad) aas mov xchg (bad) cmp (bad) out test lock std mov jge mov sub jle fwait mov dec mov pop into pop sbb sub jmp lret mov mov lahf call idivb xchg pop and call mov jns xchg gs scas dec bound pop ja jecxz out mov adc sub sbb data16 xor mov sarb sbb pop fdiv (bad) and adc repnz push adc or cmp jae cmpsl ret jecxz aam pop push aaa push jl outsl lret ret fs fnsave sub add fisttp pop ja jae lret outsl mov push sbb je stc ds hlt shr lcall and adc imul push xor cmpsb push cmp jno and push ja ret rcll fcomip int3 cmp int pop test cli into xchg adc test out xor lahf out sahf inc inc add pusha cmpsl hlt or movsb cmp lret inc pop sub jg mov fwait inc xor pop (bad) jb sub repz sti jo shrl enter lock pop xor jne ret jne mov dec jno jnp add into and imul mov aam leave or jle sbb xor xchg stos mov aaa adc add out repnz sub int pusha jge cmp mov ret push mov (bad) stc lcall mov in or sub pop xorl stos loop xchg cltd dec jae sub and lods ja or jle (bad) rcl fs jle and jmp lea mov bound ficompl aas lods (bad) pop cmp push pop sub inc add std das xchg scas int3 cmc and (bad) (bad) fimul pop jg (bad) cmp sub pop jno dec xor clc (bad) hlt push test icebp add sub ffree hlt mov xor outsb loop pop loope push and movswl fnstsw dec pusha or fistpll sbb cmp and xlat sti ret xor cmp inc mov and sub cmp or push test popf add bound push pop or daa faddl fiaddl adc test (bad) mov fstps cmpsl xor mov and adc sub scas data16 mov call mov or push (bad) push daa mov sub add fdivs ljmp pcmpeqd xchg jo add or rcrb jle imul xor mov out ja pop xor push fbstp mov mov inc in lcall iretw das push rcll fcmovbe pushf lods xchg outsl or mov iret sub and ret xchg test xchg mov ret lcall sub mov cld push out pusha loope push mov sub out cmp and aaa mov jp pop pop sub out adc ror negl incb stc mov jmp xlat lcall sbb add push mov pop pop push add not xor out and and (bad) pop push lahf push push and xchg add pop xor insb xor or push push mov push lcall add and pusha adc std lock mov xor sub mov (bad) xor jmp adc pop aad fwait inc aam mov add scas cmc sbb and add je neg popf add jb pop dec jnp mov jns shl sub mov notl or cmpsl hlt xor iret test jecxz add jle dec jl sub adc jns cmpsl ret pop lds xor jns inc push xchg adc mov jmp cld sbb ja sbbb mov cmc inc add push mov adc mov push mov pop xchg add jecxz hlt push mov outsl mov add call mov mov inc or jl adc pop inc sbb cmp inc xchg sbb (bad) repnz xchg or sti jb mov adc imul adc xor dec jnp bound into scas sub mov lcall call xchg cli bound xchg cmpsl jl mov or into or mov push cmc imul and addr16 lahf stos sbbb sub leave cmpb jge out xchg push ret ffreep shlb add push outsl gs pop loope mov cli sub or push xor dec mov mov stc sub add icebp aad roll or cltd in (bad) mov mov sub (bad) push in or fistp adc stos popf mov lds ljmp mov cmp and sbb lock pop xor adc icebp jne adc lret (bad) or fcmovnu test jo dec sub and add das inc and pop decl push pop jge fistl sbb fldt xor sub repnz dec or mov icebp and dec aaa inc jb (bad) jne lock call xchg dec popa inc roll lods mov or dec and sub out (bad) cmp lret cmc in shrl aad sbb push outsb or jecxz cs sti mov push movsl jnp outsl or cmpsl pop inc dec popf icebp pop sti push dec scas sub loope xor cltd dec iret cli sub mov jg or lods mov push jl bound xlat jle mov cs stc jle nop cmpsb push inc and fsubs and daa pop mov cmp sbb and pop xor cmp arpl inc push or mov cmc fxch dec or xchg das sub push add pushf xchg xlat cmp bound xchg cvttps2pi in and shrb xor xor inc mov stos and jae cwtl shr sbb cmp sub sub leave out push fldcw leave xlat cld test inc je leave push jno dec xchg adc bound ja (bad) sub sub xlat jae mov rolb lock shrl sub xchg mov imul pop cld inc push push or fistl repz scas jne stos in aas sub movsl (bad) mov outsb or lret xchg mov fxam movsb shll push (bad) xchg lcall or es pop sub mov mov (bad) stc and jne lods dec push push sub dec lret mov clc inc ret xor sub test dec (bad) (bad) jae or add stos loop inc fnsetpm(287 mov lret sub jnp std mov adc (bad) cmp jp ja xor mov sbb sbb xlat mov in cltd adc ja sbb inc popf mov cmp stc adc and jmp or add scas loop iret jmp adc inc lods add mov mov jno cmp sub mov or fsubs daa cld movsb outsb jmp mov (bad) xor xchg or rol in add sub repnz out push adc or and jecxz stos test mov add inc add add (bad) es out (bad) int3 jp mov cmp xor xchg fwait sub jo mov xor in cmpsl dec jl pop push sti mov mov aad (bad) and and mov push mov sub shrb lods jae push sub xchg sub mov sub das mov xchg cmc xor divb aam leave xlat inc (bad) and xor xlat stc ss repnz popa rcrl add or mov stos push jl movsl push into lock xchg cmc popf icebp out dec mov push insl jne outsl out xchg jmp ja mov and cmp insl decb xor out lds lock xchg lcall mov mov and mov push mov or pushf hlt insl lods or dec mov adc pop mov loope insb pop xchg push cltd cmp jle inc xor pushf lret add jge stc in cltd jge fsubrs lods push xor mov into mov xor or out scas gs or rclb imul cld loop gs sub add rorb mov push mov add ret inc xchg lds (bad) xor ret jne push inc or jge addr16 jae push icebp out lea negb push jmp cwtl mov (bad) mov pop fstpt test mov (bad) into jns jle stos mov jg dec adc jno call or dec xor je loop inc inc aaa lods inc lret repnz inc dec jg sub jle movsl sub mov mov dec mov rcll shrl or push jmp decb pop dec jns cmp inc add mov (bad) cwtl andl xchg jo mov test es test imul cmpl or xor mov ds xchg (bad) in pop out xchg mov sub pop nop add dec pop mov xchg popa jno testb hlt add je add sahf sbb loop push movsb push xchg jg in mov jne mov test cmpsb xchg (bad) aad fs fsts ror loope sub dec xlat fisttpll xor jne cli cmp jg les add negl push mov pop sbb inc mov jbe xor scas lret xlat jnp and pop push fs fs pop pop jle fucomp data16 jnp xor mov pop (bad) jl xor gs ja mov cld imul js bound inc pop jno mov rorb jae cltd jne add sub and ret scas mov int3 dec sub jle icebp subb jle bound incl cmp inc clc sbb rcll mov jle stos (bad) mov in hlt push xchg ret mov jnp (bad) dec xor jle mov or push clc inc cmp jecxz aam mov popa mov add and xor mov mov test or xor sub xor mov adc add rclb cmp pop xchg jnp pop leave cmpsb add pop push dec xlat (bad) testl nop repnz jns push ljmp les and push gs lods push jp add fdivrp ret sub or ret mov add mov add xor imul test mov mov repnz mov jno mov or jo,pn aas sub inc pop adc cld je add ljmp lds ficompl dec pop xchg mov out aas mov stos imul push jecxz test movsb ljmp or sbb daa xchg and xchg cmp add push adc ljmp movsb stos or inc push divl sarl dec mov add mov mov rcrl insb push cmp ss cs fmull hlt push imul out jp push mov push mov xor movb (bad) dec and jp fisttp lock aaa pop add jmp (bad) std lahf icebp sbb push loop aam out mov addl test jmp xchg dec jmp repz shrb sub sub dec adc mov fwait popa xlat xor mov std leave mov mov sub test (bad) ret pop pop adc out ljmp aam punpckldq push in fidivr daa mov frstor movsl cmc fnstenv loope aaa mov push enter (bad) popf sti push fldenv mov mov jge push out call lods mov movsl loope inc sub sbbl icebp mov mov sub ja inc xor fidiv inc or sub jae mov jmp sbb xchg into jmp ss and mov jno outsb and stos mov dec int3 dec jns mov ds fldenv xor (bad) jnp ret pop push dec loopne mov inc roll movsl add push and add sti cmc sbb jae scas xor push pop sahf addr16 adc movsl mov out or fcompl maskmovq (bad) or pop mov jmp push sahf inc loop pop jne cltd lods add dec in pop xchg ljmp add std sbb adc clc pop sub adc ret and daa mov je rorl scas sbb (bad) push rolb pop cwtl dec (bad) lock ja fistpl fistl add scas fstl ja jp pop call bound (bad) xchg divl mov mov loope outsl pop sub loopne call dec fistpll xchg xor push push adc inc lcall mov mov and jecxz xchg (bad) addb ja in lret jbe inc scas pushf mov daa cwtl shll cli mov popf mov int3 leave daa loope sub in or and mov push add pop pushf scas mov xorl int repnz xchg jbe sub cli mov add movl lahf jmp and lahf mov inc call inc and test clc push dec loope sbb (bad) or inc fnstcw mov mov ret ljmp mov jmp mov and inc (bad) pop movsb pop popf std popf cmp pusha push mov adc sarb adc mov decb repz insl mov jg mov lret cmc adc xchg popa sbb outsl jecxz xchg xchg fist fdivs pop add scas (bad) in aas pop aam les test movsl in mov add ret or pop add adc mov push adc xchg fdivrp imul add jns movsl push or dec ret bound jle imul mov ja add mov gs fimull add mov roll dec sub gs neg push (bad) cmp scas lret pop lds lret dec xor adc aaa jno xor fdiv jmp dec push add jmp fldt dec jmp nop scas lods imul pushl arpl sub jmp xor push sub pop xchg sbb loope push shl or add pushw scas jge test lods sti daa mov add adc ja pop cltd dec xchg mov inc imul out xchg ja hlt sti mov cs push cmp or xchg je call lret lea (bad) ficom adc scas mov dec mov jnp loop pop or sub lea and scas add and fadds pop or out pushf sbb js (bad) sub enter and fwait sbb or gs idiv test ljmp jge stc lods (bad) push lods add sti daa jbe and adc or lock mov or sub (bad) testb hlt pop pop icebp mov cmp lret inc and sub fdivrl pop clc cmpsb ret cs push mov shll (bad) xor out or inc outsl mov xchg mov movsb and lahf mov repz loop and imul push lds test jmp mov in sbb xchg sub adc xor rol int inc cmp lret test test lea shrl dec notl inc orb push jmp jle,pn mov or rcrl sbb mov add lds fxch xchg (bad) mov jecxz dec loopne iret mov adc test sub dec stc orl push aad shlb mov sbb test call adc fadds and dec (bad) loope sub xor cmpsb add out xchg cmpsl rol repnz mov mov repz data16 cmp fdivrs sbb aas sahf jb divb push mov mov into sub cwtl gs mov into and add add scas lock das imull and inc aam pop lcall das xor cwtl pop sub nop sbb and mov pop jl push jae scas push loop lock xor add xchg or cmp xor xchg and pop jno mov xor ljmp push and fbstp lock out decb and adc fldt or std xchg xor sti orl dec sti out addr16 lcall sub lock sbb je mov and jb dec pop dec das test or add xchg mov repnz jne sbb xor and bound outsb clc jecxz (bad) bound incl or push lcall mov mov shrl or push and push gs cwtl jmp sub push lock loop jg pop xchg mov dec xchg pop nop ss jb mov xor outsl lods mov or mov into ljmp fdivl adc xchg out and and es xor popa xor scas sub clc jae push jle loope mov jg jmp flds and inc leave xlat in add es testl add dec (bad) call mov leave (bad) mov rcrl jg xchg test adc es loop push lret and shll loop push notb dec arpl outsb sub xchg ljmp sbb icebp xor push scas (bad) dec clc into ds sub xor jp out repnz xchg stos flds inc repnz test and cmp or mov or cmc in and or and push divl imul lahf pop mov push das jns ret flds add xchg mov or mov pop mov (bad) jnp lret push xor pxor lock xorb sub cltd rorl mov mov rcrl icebp xchg outsl fnstenv add mov fsubrs fstps xor mov and cmp or insl std jnp fidivrl mov add (bad) and adc mov andb data16 inc pushf dec pop mov imul leave and test call lret add jle add dec xor hlt leave (bad) ret mov pop ret mov lcall mov sbb (bad) movsl mov mov adc and aaa and pop adc sbb jmp or shlb sub adc push sub sub stos std int cld and pop push dec repnz pop inc mov xor xchg push sbb mov sar mov sarl sub bound xor cwtl dec or pop push xchg stos or xor fldl daa repz xor or inc test ljmp mov pop sbb cwtl push pop or pop into push and out stos loop nop rcrb inc rorl dec lea imul cld mov inc es popl xor sbb lahf (bad) lock dec dec loope jnp pop adc cli add into mov in sbb xor add adc shlb int add sub outsl jb sub fbstp xchg pop push in mov icebp dec lods movsb int cmp bound sbb cmc fwait int ret push arpl mov ds (bad) jns pop jg hlt xchg loop lret jp mov pop xchg mov clc je arpl icebp bound xor pop mov sbb sub ret (bad) jae jmp aas outsb xchg push loop sub mov jne imul push push mov rcr stos insl push outsb mov aad aam sub push fdivrl push xlat scas and jl or insb js sbb sub jp xor in adc mov and test inc out lock lock mov xchg xlat mov dec outsl test cmpsb cmp adc cmpb adc dec rcll xchg (bad) sti mov dec mov xchg cld lret and mov ret or adc add fs sti bound lds out xchg shrl scas imul lcall inc loopne jb out adc jle add ficom pop (bad) xchg (bad) fiadd pop adc clc (bad) push and adc mov icebp fisubr jbe jle push (bad) xor mov out dec stos cltd xchg sub imul popa mov imul aad xchg inc mov sub fbstp adc test fimul add push pop je push sub repz pop and xor jecxz das push ja ret push xor fstpl movhlps lea push or and pop inc xchg jmp out push cmc ds sub dec mov out lret add lret mov pop or leave mov xor ds roll cmp ljmp xchg cmpsb mov aam cs fld sbb add out cmp sub std adc int3 sbb stc push mov daa or ficom mov scas lods add bound lret sbb adc out lret rorl outsl in dec xchg in inc repnz cli adc mov jg cmp push aaa xchg mov das dec lods cli mov decl movsl cltd lcall dec (bad) cmpsl rcrl adc mov adc stos xchg lock add sub mov cmp jmp xor and adc mov mov push fisttpl push roll jmp icebp adc xor pop and adc sub stc scas cmp imull adc es dec sbb sbb cmp and or pop lcall xchg inc (bad) hlt hlt pop aam scas stc push jmp push movsl jae jge pop (bad) loop lcall mov mov push pop cs jge ljmp xchg movsb inc loope,pt sub dec es jnp jge xchg daa (bad) xlat int3 or mov xor jns xchg fsubrs or pop xorl stos mov pop stos cmp (bad) mov sub or add mov add mov test not dec mov add push pop scas stc sahf cmp mov and (bad) xor pop jmp adc push adc push nop shr cmp cmp out daa mov js mov into ds xchg push sbb pushf inc inc or out mov jnp,pt (bad) mov or test ficom js push sti adc mov (bad) repnz adcl lahf cmc fs jnp lret pop sahf scas mov mov loop pop movsb pop sarl lock lods add cmpsl mov addl and pop mov xchg mov xchg fdivrs sub push pop xor xor lret add push jb add outsl cli data16 jno lods clc cmp mov mov push mov into mov cltd cmp push xchg pop pop loop pop jo test mov aam push xor jge jb sti cmpsb push popa mul insb (bad) fnsave jnp insb dec sbb cld notb in xchg ret insl xchg mov pop fisttpll xchg pop (bad) lret mov fisubl and xor cmpsb push pop hlt sub pop dec scas xchg sti hlt pop add and mov mov fstps in addr16 xchg xor loopne mov jnp sub ljmp jecxz out pop or idivl rcrl lods cld ds mov or nop xchg lods repnz add mov xchg js fstps mov nop daa notl mov call xchg loope jg push fsubrs aad jmp push lods leave lods in lea icebp xorb sub add sbb out (bad) pop out and mov add and xor pop xchg std xchg lea test push mov xchg gs sub pop cmp and jle popf inc xchg add rorl inc and mov mov in aad aaa push data16 and dec sub out xchg or xor flds out jne,pn in aas fimull mov mov mov pop mov jmp mov shll idivl dec dec bound mov ret pushf xor or lahf insb cld pop jmp mov insb sub das sub aam push or in and push loop push leave es cs sub icebp xchg fmulp or mov out adc inc pop sub xor xor xchg mov roll dec faddl cmpl pop xor pop cld ss mov mov (bad) loop adc push outsb cwtl pop mov and int sub nop (bad) adc sbb xor xor jmp iret nop xor mov sub int movsl dec les and adc dec enter stos pop dec mov sub lcall sbb rcrl add into sub push sbb or lahf sbb (bad) (bad) lock xor stos int jp ror xor push xchg sub pop fidivl or mov mov movsb mov push dec dec xchg sbb xor jecxz pop cld jns gs stos mov and test icebp sbb pop ret or cs pusha inc and or ljmp fldt add mov icebp test in and mov sti loope cli sub dec outsb xor cs pop ljmp cmc ret dec add and xchg dec adc xchg mov and test ret sti xchg (bad) xchg sbb pop pop cmp add in out sub jle test fsubs xlat in mov ret fidivrl cltd andl gs es mov fnstenv xor mov fisub into and push ljmp sub dec pushf test inc sbb push and cmpsl jae dec sti addr16 das or xlat mov push mov mov xor nop mov imul inc mov test mov xor cmp sub fbld dec call mov pop les mov pop inc cltd (bad) mov xor push fildll push sahf out dec mov mov fisttp xor pop scas pop or or and es mov ja jecxz in mov and inc aas imul mov pop inc sub out and (bad) mov cld pop jecxz jbe loop fnstenv sub dec out and (bad) jecxz enter loope cmp (bad) cltd hlt sub ljmp leave adc xor mov mov xor (bad) sub insb pop pop mov out insl movsb stos les push cwtl or sarb mov sub mov icebp out sbb rorl lret fnsave fstpt out add push fwait imul es iret in into ds mov (bad) popf mov dec out adc aad xchg imul push jae or sbb je and mov jmp add and test xchg subb xor jns fxch mov ficom idivb push icebp lea leave push repnz popf je push push outsb rcll push fwait mov imull dec (bad) mov pop ljmp sahf enter fcompl dec fwait cmp xor push or xor les das dec pop push cmpsl je (bad) repnz sub xchg jge adc sbb aaa mov fist push into loopne leave mov mov in repnz lret rorl dec lods dec cmp in lcall dec add mov pushf xor dec ficoml lds sub sbb sub shlb lds and ficomp mov fcom dec jmp rcrl push add adc mov data16 pop dec cmp dec cld lods pop js loop popl mov fs mov ljmp sub pushf shll in or xor aad xchg idivb jno mov lret outsl test xchg out enter pushf mov roll xor fadd xor add cmp ret mov loope mov orl sub sti enter data16 jg fcomip aaa das dec clc std dec pop sbb cltd inc sahf call jge repz or pop push fs frstor xlat cwtl sbb aaa jp and adc push inc movd sbb jg jns push xor xor pop stos xorb das xor pop jns pop add push mov jg pusha ds shl add and sbb jg or out pop dec ss test out mov movsb lock push test ret jl jge or push jg imul (bad) mov and jnp cmc in sub add pop leave rcll mov lret in sub push jg repnz or jnp and mov xor cli pop decb xchg lods mov insb push cmp xchg cmp jl orb sub pop nop addl dec test and lret push std out (bad) xchg sub push mov sub fstps fwait xchg mov push test roll iret and cmpsl xlat mov inc or push ljmp inc sti jp sti mulb pop dec not roll add ja lods pop add xor pop xor das or mov xorb pop lods dec fdivrp enter xor arpl movsl mov aas (bad) jle jl push push cwtl pushf and cs or ret push mov sbbb sub leave lahf push mov dec mov inc push mov mov push push sbb xor mov aam pop jo loope adc negl mov popf es daa jge lcall jmp js mov imul jbe or enter push cld xlat popf pushl mov sub xor cmp mov cmc outsb cmpsl aad std ss sbb fildll and cmc lret in xor hlt inc lretw xor stos popf loope popf (bad) in mov adc sub incl pop in mov lret xchg sar adc adc mov lcall mov inc jnp (bad) cmpsl adc repz xor shrb dec (bad) scas xor mov icebp sub cmp xchg push xor out xor adc xchg push loop add xlat mov cs and lcall sbb jg add and fdivp lds mov inc inc loop orb mov xor push push inc and (bad) fs mov and stos in out pop aam mov es imul xor xor test cmp loop cmc or pushf js pop decb fscale outsl lea jb lds dec scas or pushf mov cmp dec mov lods and inc mov ftst adc data16 adcb sub bound out push adc jg pop stos std jge mov aaa push cmc push lcall add std cli hlt xorl lea jecxz,pn adc push push ds (bad) push push sbb fist adc (bad) je stos fstps fidivrl daa push stc outsl mov popa je jle (bad) lret and sub add aam es sub cmc pop int3 and icebp xchg dec jne fcmove and xchg lret stos pop dec push inc adc cmpb pop dec or test and out cmp sub xchg pop nop jb or adcl push popa dec out dec cs lret dec fnop push lds cmpsb subl cmp icebp addl jl es pop fucom js push lret push sub in es pusha push fiaddl cli xchg notl mov pop rcrb js and inc sbb out in ja mov fild fldcw xchg xlat push add (bad) lods push xlat mov call pop xchg and jg nop das sbb pop lds add dec into lea mov lcall push gs add (bad) stc mov imul pop cli xor aaa (bad) mov loop,pn out and ds push leave lock ret pop out and mov mov (bad) and mov pop push pusha push rol sbb add cltd shlb sub int loop (bad) test dec fstl mov or rorb icebp movsl add pop push pop or mov push xchg bound xchg jmp fs test dec lret sar jb push shrb and gs ret push pop lods movsl inc jl or je fdivrs cmp mov pop sub xchg out decl pushf cli ficom jb cmpsl add and pop mov lods cmpsl dec daa dec lds sub ret fistp lods repz xor addr16 jle lds adc mov lcall jns jbe and out xchg rorb popf xlat mov scas add push xor fiaddl loop xchg mov dec in add mov sti test jbe out leave test jg out movsb pop cmp movsb dec icebp cmpsl sub inc das out mov mov jecxz rorb push adc lahf (bad) icebp inc enter sti add adc out adc pop pop jmp in sub sub mov fcoms ss jecxz xlat not mov lret dec dec (bad) cltd repnz decl cmpl lret jns mov ret test push inc stos pop mov daa jecxz shll jae adc mov popf adc ljmp adc mov rorb negb adc or mov xchg ds call repnz adc js push mov outsl pushf popa mov mov push loop fdivrl adc mov rcl push sbb jns iret movsl (bad) adc mov adc scas xor pop dec (bad) sahf adc mov xor or in mov jle pop mov sub decb and shlb decb out mov mov inc push pop cld clc sarl jge addr16 xchg stos mov adc fisubl sarl mov adc inc int sub mov mov sub and das (bad) fildll pop loopne int3 loopne test dec sbb mov jecxz outsb pop mov xchg jmp popa ljmp (bad) sub or out fdivs pop iret mov push (bad) mov add je cmp xor cmovo and mov (bad) sbb sbb js and or int3 xlat cmc arpl (bad) jb dec lock test mov and inc (bad) push adc inc jmp into ljmp pusha xlat adc mov ret pop test sub pop mov pusha dec (bad) mov adc jns inc mov mov leave mov fbstp jno icebp test mov mov jnp into mov cmc in sub pop add pop push push lret cld popf push cli sub enter rcr addl sarb divl mov std jecxz cmc stos cmpsb jl out mov lahf pop mov cmp cwtl inc ret lcall loope cmp (bad) repz loope mov jl push jne andb xor out (bad) add cli das out das xor insb mov loope rol add flds lds mov inc inc xor bound pop roll out out mov fbstp dec mov dec je sahf adc sub (bad) mov mov jbe jmp mov xchg into cmovle out push xchg sbb fwait lock pop cmp sbb ficom push mov (bad) sub sub (bad) mov mov ret add aam mov out push test ret aaa test int3 xchg sub mov fsts mov push inc lret xor loope das cli sub xor and fimull jmp (bad) gs std es and leave cmc or add and mov add mov lea fwait aas or pushf pop mov ljmp xor xchg lock pop out jp pop cmp in mov lock jmp rcl mov fwait in ret xor lds leave lea shrl lea data16 xchg adc mov in mov cwtl das les pushf aam std (bad) je pop mov aas iret pushf cmp out les or repz adc sbb inc mov cli and and sbb push testl mov push mov and mov and cmc mov sub je imull dec cli je les sub jnp xchg mov inc cmpsl div push and and and pop dec xor or cld sbb repz add xchg pop outsl enter xchg fsts pusha pop inc loop nop test inc scas pop in shlb mov inc shl (bad) and mov lret or out mov (bad) push and imul outsl sbb sbb adc push mov cmp ds push or push movsl dec push inc xor cmc jmp aaa test mov sub lret ss imul (bad) mov push sub (bad) xchg and xor fcoml ljmp cli add xor sub mov stos pop loop cwtl loope inc jp mov cld sub loopne add xchg cltd cltd ret or dec xor dec push stos cwtl loopne dec jno movsl call fcmovbe pop xor cltd test and leave push les pop aas icebp fwait dec cwtl inc xchg add pop insl add sub js jle cmpsb mov mov mov jle cmp lret jnp xor jecxz lret stos es enter in cmp test xor fwait sahf lret jns xchg (bad) dec pop xor bound xor mov movsb push xlat cmp and mov cli sub add jo test push xor pop test mov nop popa ss jnp jno fdivs mov in push push cltd dec lods lret xchg (bad) xchg fist dec push jne adc (bad) xchg ja sub xchg xchg ret setns aad mov repz push inc mov cmpsb dec inc mov ljmp cwtl data16 aam add jae pushf pop iret out sub mov int loope cmp dec mov pusha roll sbb into pop or adc pop lret lods dec sub daa cli sbb hlt jne mov mov loop push adc push mov cmc dec xor xchg int3 pop cmpsb push dec (bad) xor jmp cld pop in jp test pop gs push xor in dec or cmpl test cmp cli (bad) or push ja fcomp jle fprem lods inc pop xor and idivb xchg adc pop call sti sub fimull sub and jecxz add sub cli cmp cmpsl jne mov xor xor and mov mov ret pop and out sub jmp stc out sub sub repz ds mov out cwtl in jmp lods add sub fisttpl gs loopne and sub aam int sub outsl (bad) negb dec lret add and in mov in and loop sub mov in cmpsb adc dec clc pop mov cs sub xor xchg subl rcl lcall (bad) out mov gs and out or push mov sbb push dec push mov dec int3 xchg (bad) mov pop jb,pn add mov roll pusha mov lods inc out inc mov (bad) pop and adc mov enter mov inc sar cwtl jle test adc daa loope lds or add into scas lret std repnz ja pushl mov mov sbb popf or mov adc xor jecxz into dec pop and les clc and mov lods fs dec clc fmul (bad) dec and cli xchg std dec int3 outsb shll xchg sti and ret inc inc xchg add xchg adc pop daa pop insb push mov sub mov xor fmull les sub loop sub int3 enter cmc pop jmp dec cltd push jle test sub movsb cli xor jge add push xchg mov sub xor cmp aam pop ds fs imul jg and jge mull sub sub out test mov outsb and and mov or push dec nop ficoml bound loope stc imul sub push push les out jecxz dec notb push repnz mov xor cmp sub or movsl cmp xor mov fidivr jb idivb sub into mov mov mov (bad) mov mov cli imul pop fnstsw cmc jmp mov (bad) add or loopne leave mov jle data16 aaa and or icebp xor (bad) mov fstps adc icebp xor mov add stc lcall loope jns dec rorl and clc jnp jmp mov xchg stos push arpl adc cs dec push adc ds sbb adc mov mov inc cmp bound cmc fxch or pop jae das inc fnsave jg jge (bad) sbb dec dec mov das xor xor add mov sbb inc mov ds lcall and repnz orb dec sarl nop add xchg sti push mov push mov pop and mov or cmp (bad) xor outsl mov xchg pushl cmpsl jl mov sahf mov pop push jne and mov ret pop sub call mov sbb pop and xchg sbb mov xchg add mov mov cs mov inc sub stos sub repnz (bad) adc jmp test dec mov xchg out mov add scas dec mov and xchg cmp xchg xlat pushf fisubl xchg cli xchg stc icebp mov shll (bad) cld movsl ja mov mov mov sbb and jno inc and cmp xchg mulb or divl push test cmovnp idiv lods loop fdiv dec inc imull in movsb mov inc xchg pop sub into jo int imul jl sub pop sub pop mov ss mov mov out inc adc ret ss add xor add pop popf cmc inc in nop xchg add fisubrl mov adc xlat add push inc inc push lret ret (bad) adc idiv imul xor or push pushf icebp and pop cmp in mov or inc mov loop shr popf aad xchg cmp cmp xchg xor cld push and sub out mov lret loop mov ret int iret push push movsl pop push mov jle mov cmp xchg jl jmp jmp wbinvd mov std push dec cmp (bad) adc mov js repz cmp outsb fs push mov flds out inc adc leave adc adc jb xchg inc das clc fistpl jecxz ret sbb jo out mov pop mov jmp adc mov jle inc mov leave leave pop xor or les stos lods sub mov pop imul xchg popa scas xor jl arpl mov add pop (bad) xchg ret sub por xchg into cltd dec mov xor or push out aam lret repz outsb cmp add jl jmp push sbb cmp sub aas sbb cmp leave mov test dec xor pop iret out cmp pop pop je mov cs push jo out mov adc sub ss nop or (bad) sti (bad) sub out sar fcoml cs pop cld mov pop mov bound pop push mov sti xlat mov movsl call add fisttp xchg mov cmp sarb add mov jnp mov xlat or sub mov jg and shll and add push daa stc inc push push aam loope or js and adc sti jp inc mov xchg cmp add pop jnp adcb xor pop inc shr inc movsb or cmp int3 pop scas ret push jbe gs scas lret mov sub xor dec sub movsb mov sarl push imul pop andl je sahf add push add fdivrl aas mov sub hlt incb cmp clc and hlt pop addl popf push fstpl jnp or aad mov (bad) jns add sub pop push jbe inc pop sbbb sub stos mov pop pop fmuls testb not inc subl ja xchg (bad) daa (bad) xor shlb add loopne sub movsb push cmp popa mov out sbb (bad) dec or ljmp push add jmp fucomp push dec pop xlat in sub or std dec xor jno add inc push xor adc rorl mov es aas xchg inc nop or out ljmp (bad) sub mov notb xchg pusha ret std outsl cmp int3 (bad) jge scas adc or push sub mov mov ljmp ljmp dec (bad) pop dec push push in mov lds popl adc add add jno sub pop dec push out add adc ret test mov pop xor xlat mov testl mov call loope jns and and cwtl jb repnz ficomp dec xlat xor jns xchg pop pop pop pushf cmpsl rol xchg shll fldcw jmp ljmp inc adc xor mov mov into dec sbb jge insl xchg mov dec mov mov and sub add fs mov dec add xchg loope cmp mov lods and fs (bad) cmpsl xchg mov aam fcoms aas movsl test int ds xor sub ret scas test clc mov inc mov pop dec inc (bad) or pop das adc and xor rorl sub aam inc cmp push sbb sti adc outsb pushf es inc popf pushf std jmp jnp mov (bad) jno subl cs jb xor stos test pusha mov sub movsb and das cmp sub (bad) mov imul pop cmc das and push jb loope adc mov push stos gs adc hlt or clc and mov inc pop jle push into imul sub sar pop mov das jecxz xchg xchg mov sbb repnz movsl push popf sub movsb pop sub and cld ret push gs stos cltd mov xchg call push movsb lock (bad) xchg rcrl loop stc push cld arpl add not in dec pop ljmp into pop sub mov add test imul ss pop out adc je stos mov out pop jae mov mov mov add dec pusha out mov pop cwtl (bad) icebp mov push adc inc inc add dec push imul xchg in cmp mov or xchg xchg jns jle inc jge and xor cs mov dec stc mov push add repnz inc pop sbb xchg imulb enter out int3 and dec and clc mov ja das jmp or int3 mov mov jl (bad) call out cmpsl mov push mov jge inc sbb lahf xchg mov fldenv ret pop inc faddp xor inc mov out mov js lods out xor clc xchg out push daa adc adc mov and sbb or and in jnp dec add push fisttpl icebp pushf mov std adc dec mov adc idivb pop or (bad) and mov idivl lret jns pop sar fs push pop xor pop ljmp adc movsl call test mov sbb adc adc xor mov out xlat cmp pop push xchg ljmp xor popf flds bound lods jge shlb and pop inc mov (bad) xor or inc lea lret and inc pop and pop lds ffree stc (bad) sub dec ret lret push cmc (bad) bound mov xchg cld mov sub wbinvd add insb sbb sbb test stc in mov les mov repz sub daa inc dec jno fcompl fs mov and xchg fnstenv imul fsubl cmp jmp sbb push push inc (bad) or sub std push xchg (bad) xchg fdivl loope adc leave nop pushl xrelease xchg gs cmp xor sub adc dec add add mov cltd iret xor fimull pop jp sub cwtl divl sbb aas sub and sub scas fxch outsl dec mov test and add add or push popa add and pop push rolb jo xor pop lahf mov cwtl and out outsb mov mov fstpl sti xchg lods push pop mov dec lret andb push mov ljmp je mov xor fisttp xorl sub dec test xchg in cltd arpl xchg mov pop sub xchg ret cli ja (bad) push mov lods adc adc dec in cmp and data16 (bad) lcall fist dec out or xor jp pop cli (bad) divb shrb fcoml or xlat insb arpl repnz stc mov movsb out pop stos xor mov mov sub ret test ljmp dec push fisubrl aad loope leave pop push and movsb stos and xor cmp jb ds jne pop test loope xor xor not (bad) jns movsl rclb mov cmpsb adc jmp mov jnp ja je pop sbb mov push cmp sub or subl jno inc xchg lods inc sub (bad) adc cli push mov cmp mov mov mov rolb add mov cli cmp (bad) dec bound add sub sub fadds mov jne cmp sub js cwtl and pop push mov or fisub xor xor mov cmc adc pop push lret cmp add lock testl xchg int sub adc das out sarl add out or lcall or adc jno js jmp insl out push push add pop subb fwait ja movsb sub and ret cmc add aad pop push push aam adc cwtl pop adc xor jmp sti imul add push ds mov sub add push sbb pop pop adc or push cmp std or mov inc sub daa push stos jmp lret xchg mov ja mov sub fistp pop inc fisub mov adc in inc js aaa push push (bad) sarl xor dec pop push mov pop in mov adc das or jle dec nop enter pop cmpsl pop test enter imul add or and xor cwtl in mov jecxz sub jge (bad) lock xchg mov adc out or loopne xchg push jo loope cmp ret adc or in and sub add notl or fiadd into jne pop rcl sub mov nop cli test loop leave inc imul out aam leave jge out and lds dec sub fldt call inc add xchg scas repz cmc sub pop push data16 mov mov dec icebp push jnp jp pop pushl add rorl pop mov push mov add xor (bad) adcl aam jmp orl inc mov shll pop subb into loope ljmp ret xchg dec je or enter mov ds (bad) cmp adc pop (bad) lods (bad) mov arpl xchg jne lods xchg push sbb sub movsb or pop pop lcall push les lahf jmp in mov xor fisubrl cli xor cmp int3 cmp mov and push shlb movsl xor in cmc adc mov push imul add cmovg pop divl cli sub sub push test addr16 pop push cld cmpsl das lret jno (bad) ss dec xor int inc mov incl (bad) ss mov push daa adc das loop dec push cmpsb push lahf add out push rsqrtps in pop mov imul sub sub shr sub test lret out push in and lds xor mov idivl (bad) stos dec fbstp or xor mov loop xchg out fs mov mov adc pop add mov xor out sbb sub xchg ret push test iret cltd (bad) sub jnp add dec rorb mov leave xor iret mov repz mov mov repz fwait out dec and add dec (bad) cwtl jl lahf decb or pop xlat lods test (bad) stos loop xchg fsubs (bad) mov lods (bad) cwtl push mov stos sub rcrb ljmp xlat repnz aam sbb or mov mov push neg mov inc inc lods lcall lea mov insl jne icebp cld push imul lcall cmc jno push int insb mov xor or cmp cmpsl xchg xlat or outsb in cli movsb push mov adc fs sbb repz push mov or mov scas mov cltd mull inc fucomip cmp and icebp andl nop add xor inc push add mov adc push jmp xor cmp sub fwait push pushl ficomp stc stos and and jbe pop stos xor call adc (bad) js adc mov fldl jns or andl mov xchg mov add (bad) fdivrl ljmp add pop inc lret outsb int3 push xor dec xchg jg inc repz pop xor mov cmpsl jne ss xor lds lock ds lds pop out mov xor pop add (bad) or insb push nop push xchg int3 fs and stc pusha xor add rcl xchg cmc daa negb xor pop (bad) sbb cmp insl fcoms loop (bad) inc (bad) mov dec xor stos enter fcomps mov ret pop mov jbe sub jb sub aaa mov jge jb fisubl lahf lods in mov loope jnp cld scas lret cwtl outsb shll test insl sbb sti (bad) xchg fsts jge adc int3 pushf xchg pop mov pop inc jb les hlt jne pop bound pop cmc in add push ret cmp in daa inc in sub adc sti lock mov das sub pop mov call sbb add add mov xchg nop ljmp add arpl inc (bad) jnp or cltd das mov adc test add xchg sbb das sub dec pop pop lock pop xchg mov jmp js mov mov push out cvttps2pi adc das mov mov jmp aaa shr loop sarb jle adc sub imul shrl mov adc mov push sub ljmp pop fistpl adc ds mov loop (bad) (bad) or mov jno daa fnstsw and fucomp push (bad) jno xchg inc xchg and lods cmpsb call mov pusha ljmp lret and ret out dec sti fs sub sahf adc les out cmp or cltd lret std xchg sar ret pop pop daa jg add cmc mov pusha sub (bad) loop xchg mov cmp (bad) sub cld clc dec loop xchg sub mov js jnp mov pop outsl lods adc pop repz adc mov xchg negb add and out cmp mov imul es sub lret repnz cmc pop call ss or lahf (bad) fnstenv div lret pop mov adc jmp jecxz jnp leave sub push (bad) jne jg adc add js mov sub mov mov das and jmp cltd loopne popa mov adc lahf pop fwait jp into (bad) lods pop jp,pt xlat dec sti imul mov pop xor stos push mov mov sub (bad) leave test sub jnp mov xor rcl xlat or mov lret cmp fld out sub sub insb and and ja jge jns add or scas xor repnz inc (bad) or lcall cmp mov jne les sub fdivp loop rclb mov pop or test sub xchg jl (bad) es out imull (bad) sub jb xchg sbb into (bad) mov shlb add sub mov ret shlb pop jbe or arpl iret lods and insb leave aam jno jbe dec jecxz sub xor mov addb and cmp (bad) pop jns mov sub jecxz (bad) push mov cld shll roll ja inc sbb or add pop push out cli bound push xchg push stc hlt leave push (bad) mov (bad) jmp jns movsl pop es into scas mov fcmovbe icebp ds push das cmp hlt test cmpb push bound fistp (bad) xor jbe add jae and (bad) mov gs push arpl data16 loop out jnp in mov das gs sub rol icebp sbb mov push ret add or push daa push stc and into add xor stos mov flds add sub dec in xchg xchg push push pop cmpsl ja xor inc ja pop and ljmp jno loop cmp mov push xor xchg add sti stos cmpsl mov lret lods push call aad clc dec (bad) scas sub loop push dec mov pop mov ja jbe dec or enter dec (bad) mov pop int aas mov rol decl sub (bad) mov add add and push add movsb aas sub repnz orb cmp aad mov leave cmpsb mov cli inc xchg xor and cmp sti cs out (bad) iret aad pushf xchg icebp jmp icebp movsl repz lods das and ja adc jno xor cmp mov push pop clc xor jb lahf jmp (bad) divl mov arpl fist and shrb push adc imul pop pop cltd or arpl repnz ds (bad) dec xchg cmpsl stos mov and mov xor push sub int3 inc sub and sub imul rcl xchg sub mov inc sbb movsb xor mov scas clc jecxz jmp lret jo mov mov jne call scas lret lds movsb lods pop pop testl mov imul mov in sub add xchg out sub xchg add xlat pushf inc icebp mov fucomp sbb jmp push sti mov pushf das jmp aad fcoms jg xchg outsb clc cmp imul divl push fild or xor stos xor es jg lret dec test adc dec mov mov bound pop aaa jp xlat nop lret jge and fsts incb xor or sub sarb int jg shrb or repnz iret pop js mov inc or test lret mov ret stos in out stc (bad) cli xchg sub out sbb movsb mov dec pop xor pop leave inc sahf mov dec stos sub cmp movsb pop inc xchg sub mov dec dec jae cmp imul and add mov sub sbb sub mov jo rolb fstpt dec mov mov aaa xor daa jg jp mov sub jl stc stos mov in and mov jmp jecxz and dec (bad) aad ja add loopne fstps pop add add clc xor mov push daa dec aaa sub test (bad) and pop mov subb dec loop push flds sub xlat pop mov lret push lret outsl pop mov pop lret mov xlat stos xor scas cmc out dec jecxz sub iret mov pop daa jg and sub push push fsubrl stc add xor jb sbb repz jno inc andl adc xor daa inc and imul testl sti xor mov inc loop cld xchg mov (bad) popa mov and in mov in dec pushf push pop cli xor jmp jae jp dec jae xor cmp std imulb call jne (bad) loope jo adc mov mov dec mov sbb ficompl inc mov imul (bad) out nop sbb gs jecxz pop cld jge ret ja fcoml mov nop lahf ss icebp repz shl fldl mov ret gs mov scas fstpl push sub pushf xor stc movsb adc sti fcom xor pop sub out cmp scas mov das neg adc xchg test and xchg roll add sbb fbstp jecxz jmp xor fidiv or imul xor pop hlt pop or rorb lods pop (bad) push (bad) repnz cmp push sub or pop pop test movsl inc cmpsb out sbb rcl sbb xor or jns lahf mov cmp adc or pop pop sti into (bad) and out sbb push jge ljmp jnp loop (bad) out mov rorl cltd lret movsl sub lret xor test rorl sub sub inc push insb std sbbl pop push std or fcmovu mov cld push test push movb jecxz aaa scas loop mov (bad) mov sub (bad) je jl lds (bad) xchg imul ret mov mov dec fildll (bad) add shrb lock mov push push out sahf mov lret mov lret jmp (bad) xchg gs sub addr16 jp mov (bad) fdivrl ret in mov mov push xor mov fimull enter xchg aas stos sbb dec inc xor out add cmpsb int outsl dec fcomps xchg mov jbe scas mov repnz rol cmpsb lret sub imul dec add adc ja imul (bad) xlat scas pop or adc xor xchg jge inc inc (bad) sub sub fbstp movsl (bad) fnstcw mov sub jg add pop jbe or or test ret sub ficompl pop into icebp mov outsb and enter addr16 (bad) stos loope sub xchg stc sahf and xor xor xor (bad) fildl and neg jns les test in jb sub (bad) cli sub adc incl add xor (bad) flds popf mov repz int and and add push inc xchg sti scas lea cmp dec lret shrb mov lret jmp jbe call leave std lds cmp sti movsb adc lods or dec inc or dec stc jb ret push mov adc sub mov (bad) pop out lret scas xor xor cmpsb push testb out mov push repz scas mov sar pop mov or or pop (bad) pusha popf fsubrs dec sbb js lcall or fcoms mov sub add les xchg dec out mov push fsubs sub ret jge xor push xchg mov mov into lods or movsb or enter frstor xchg xchg jecxz dec mov andl adc xchg pop jns repz and test sti mov push add cli mov ljmp cmp jl push popf (bad) test fistpll dec push (bad) daa in lods ret xchg jno jmp inc mov shrb or sub push ret and je xor test pop or adc dec ljmp sub outsb out rclb out enter popf (bad) or push jne or test lds xchg out pushf xlat sub add pop xchg jmp inc shl in rcll sub xchg jno and lahf cld pop push mov je mov pop ret mov out ret push rcl repz mov jle pushl loop dec xor jno out mov jg lret pop xchg iret fdivrs push xchg ljmp and test (bad) mov call shrb pop xor jmp imull je insb pop (bad) mov dec cmc add push lret in push sub mov or leave (bad) sarl dec sbb add enter pusha jmp jmp outsl jne out loop orl xor xor int ror add ljmp les mov js mov pop das jl fcmovbe inc mov add jle out mov or into repnz jbe cmpsl jl (bad) xchg sar inc xor lods pop das mov cmp sub lahf jae xchg sub cli mov movsl (bad) adc shrl inc das in rorl sub gs cmc cmpsl leave pop and xor jno inc sub pop in sub fwait aaa sub repnz fldenv sub xchg stos push icebp ljmp loopne (bad) xchg xlat xchg mov dec orb scas ds jo xchg xchg aas cwtl pop lahf mov loop icebp and add xor or jl jmp out lret pop out xchg add out mov jg mov and or data16 add jge imulb cmp iret stos test mov nop mov add test push push adc ficom sbb je (bad) mov xchg movsb and jbe push insb lcall push imul xchg fimull (bad) scas inc sub jecxz pop in negb jp sub pop ljmp sub icebp jb in sub push xor add xor and dec adc jno lret and and cmp lock pop push sti bound call xchg jns add or gs push mov dec dec xchg into movsl and aad call scas xor mov pop or xchg fdivrs bound xchg out aaa or mov (bad) dec enter jno jge xchg enter cmpsb rcrb fsub movb bound insb and push inc or lret push movsb loope sub or lret xlat sbb sub iret push xchg (bad) test fstl and test or cs add cwtl jne data16 sarl cwtl fsubr lock aad inc pop lret lret insl sub pop dec add add cwtl cld jmp dec dec cli sub mov lock adc ret adc enter popf sti mov adc dec shr in test or sub cmp in sub inc pop and imull test repnz pushf mov scas repz inc xchg mov loop lret mov lods pop adc lahf push mov push ljmp push mov adc mov (bad) icebp das (bad) cs nop divl or incl or leave fstps adc inc or add ds clc test cld mov xor and frstor lret and fs mov adc cmp aam mov out mov sub mov movq cli ret dec pop push lret push leave lret ret leave aad xor repz in and icebp add mov sub adc sub or scas pop loope or dec inc mov sub sub mov sub xor mov sub rorb roll sub jl add mov lcall test sahf pop pop sub sahf cmp js xchg das and hlt xor incb mov pop and xlat add (bad) xor mov shrl xor cs xor ret (bad) push xor data16 and mulb rol or bound pop cmp mov pop inc xor or xor das mov and out movsl push cs sub cmp push sbbb jge or mov fs mov mul sub fnstsw aad pop lods es lods pop mov jecxz mov sbb xor mov ds jnp icebp pop jecxz xor mov pop or mov test fldl (bad) mov stos fisttpll cli xchg pop pop jmp push rolb (bad) fdivp or push sub fildl mov adc stos mov adc mov loop xchg test xlat sub lretw popa iret out cmp repnz pop stc xor and daa push in or out lds scas push dec push cmp push xchg notl jns dec mov (bad) mov js mov pop xchg movl fldenv jl movsb mov push sub enter rcrl cli popf insb cmp imul mov sub stos cld jge cli mov (bad) xor aas and cmc mov jge out in daa (bad) lahf fimull mov dec int3 pop rolb addr16 cmpsl lret xlat mov dec mov mov sub fucomp mov add fnsave out cmp iret xor adc mov ret adc mov push xchg fld push sbb ljmp fisubl jnp adc icebp and xor out jle fsubl out (bad) xor push fstps add mov dec out arpl adc sbb enter gs xchg into leave mov out gs mov std cmp aaa bound xor (bad) or cmpsb pop pusha or mov xchg les add inc aad fnsave imul xchg inc sbb pop sbb add test mov xchg or adc mov adc jle dec sub das fs pusha pop mov fwait cmp out (bad) mulb clc xchg icebp addr16 cmp push push lods aam cwtl stos add xchg std and repz cmp repz xor or jbe (bad) iret idivl xor (bad) fisub and fbld fcoml lret sti dec lret add mov jecxz dec (bad) cmp mov mov sbb clc sbb push push mov sub ja push scas pop movsl and or sbb xor stos sub or (bad) imul mov ds inc push dec jle gs cmp fs dec lods daa xor mov xchg (bad) xor notl int3 (bad) sbb xchg and sbb scas shrb out push iret pushf sub add xchg mull dec leave sub int3 fptan addr16 dec jmp lret jae mov repz ljmp pop out cmp inc (bad) or jno pop rorb pop mov push (bad) imul or pop cmp popf icebp je orl aad jle sub rcll sbb sub pop rol dec out pop pop fimul sub push dec (bad) sub es mov scas pop jge sub dec inc xor popf pop cmp xor sub movsb pushf mov mov mov mov or sbb std test test mov sub aaa dec inc repnz xor xlat gs movsl jge push mov jno sahf mov stos int3 xchg cs movsb pusha aas jae adc loop xchg out lea outsl insb jae (bad) std push insl sub or or popa cmpsb mov sub and push ljmp dec jg cmpsl out adc clc mov push dec inc leave lea call repz es sub push jmp ljmp mov stos cltd lret scas lret loope gs pop or push sub imul (bad) mov mov jmp mov mov cmc jno dec (bad) jmp aad inc and adc (bad) decb ljmp js xchg mov faddl leave cmc loopne imull mov pop out sbb mov gs test repz dec stos ret jns dec mov call lock std call aas dec mov dec rclb out mov dec lock imulb iret popf lcall and cld xchg js (bad) std mov jo xchg or or outsb cmpsl add stc fucomp in mov inc and iret and lock stos jns cmp mov sub adc and pop sbb and jmp aaa add mov ret test fsts rcrl adc mov mov aas sub in inc xchg inc fbld mov push aad push loop xchg adc sub pop fisttpll testl mov in sub xchg jecxz das and mov xchg sbb sub in aas dec mov gs mov or jmp sti lret or push (bad) aas (bad) outsl and inc (bad) je pop push icebp inc dec subb jle pushf mov jl dec fdivl (bad) dec xlat icebp mov sub jmp jmp enter and push ljmp push test push out lret gs and icebp jmp push cmp and add data16 das rcr call jmp mov ds mov dec cmp mov stos test mov cmp sbb pop (bad) addr16 repz cmp pop (bad) notb bound sti lret or out gs cmp mov pushf add mov cmp aas (bad) or jp popf pop push jnp mov jmp xchg rcll pop jae xor sti mov mov aam adc stos popf add out data16 adcb (bad) pop aam push rolb test clc scas cld push mov sub test pop or fnstenv add pop xor out push push (bad) mov frstor subb xor ja iret pop lcall mov jmp cwtl inc sub add inc and lods xchg push out das in sub push or es rcll insl add vmovaps jb divl test xchg pop push loope scas pop xor outsb sub xor inc and mov add cwtl xor mov imul jnp cwtl or jmp shl std jnp xchg (bad) scas adc cmp jnp mov jecxz xchg lods adc add das mov pop or ret xor sub lret cmp push sub js pop cld (bad) cmc out fnstsw jp mov mov fcmovnu shlb jge add cs sub push lods mov (bad) mov test decb out repz adc arpl jmp clc jecxz popa mov mov test jmp xlat sub pop push fistpll pushf ss sbb xor pop mov aam sti sub call mov es mov or out gs xchg iret out inc lret sarl fsubl jmp pushl jp out idivl sub ret arpl mov jb mov into into (bad) pop je fucomp mov stos (bad) pop push xchg clc (bad) mov or movsl out gs das pusha push mov call daa iret pop lds (bad) lcall pusha dec mov and mov cmp ret leave cmp iret xorl mov sar (bad) mov mov aad add hlt xchg cmp popa adc gs (bad) sub xor jns (bad) in add jo mov push push add and loope cli fcomip repz dec out xor subl lret out or cwtl push push or pop mov cmp xor fdivrl call clc dec loopne add fnstsw outsb jg jg push sub cmp or std cmp jae or mov (bad) mov jmp outsl sub xchg mov adc inc cmpsl push add mov cmp push lds cmp mov pop mov add add mulb (bad) cld push inc push inc sub cmpsb mov and (bad) dec out insl (bad) movl bound cmp (bad) pop fdivl add clc pop cld push jnp push xor sub scas mov nop les and (bad) inc gs daa rcl xchg cmpsl mov xchg ds xor or movsb clc and fucomip or cmp mov jno dec and xor pop or ljmp push add jg ret ret repz loopne xor mov and push mov sub popf jl popa into xor sub and jecxz mov pop lcall in dec shl pop cmp cmp xchg stos xor add adc sbb inc sahf xchg fdiv or fidivr lods sti xchg or decl out xchg fsts ljmp jmp push adc stos loop xchg (bad) dec stc cmc icebp pop xchg ror loope sub xor (bad) (bad) (bad) mov jecxz daa adc movsl pop (bad) in xchg push testl inc imul xlat in cmpsl add inc push inc push or sub pop shrb and adc or add movsb dec mov fldenv push and xchg (bad) mov fnop jge sub dec rcr mov mov loopne orb pop fild mov iret xor dec lods or adc (bad) or dec incb adc loope xor cwtl xchg scas int aas ret shlb (bad) sbb cmp add add sub cmp test or mov sti mov testb sub in cmc leave dec gs or test jmp mov daa jno pushf xchg inc mov (bad) jne or pop lret movsl jns ljmp out push xlat jmp gs (bad) xor jnp mov mulb bnd sub leave xchg int3 outsl mov std dec sahf xchg ja and xor insl test iret xchg out int sub daa xor sub or movzbl pop lahf insb pushf mov fucom outsb ds sarb jp jle (bad) stc test into lret or (bad) sub dec inc mov sbb push int3 movsb sub jae fcoml sub fdivl loope sbb pop ds pop ret aad addr16 out sub mov dec mov cmp mov push inc arpl mov lret lahf ficoml (bad) ficomp and mov push add bound jl imul fcomip jp xor xchg push stos in outsl stc xchg aam lds cmp mov sub outsb or pop dec add mov (bad) sti jne ljmp and dec sub movsl jmp stos jne xor outsl iret into (bad) xlat mov mov dec lret xchg cwtl sbb out popf xor cwtl in test push sub lods cli cltd scas cmp push sahf xchg lcall (bad) jns imul dec and roll mov cwtl xor mov (bad) enter pop jns xor cmp scas xchg and clc mov out dec test icebp pushf dec push inc in xchg and lods mov (bad) pushf daa xor xor jo and ror cmp inc or sub mov cmp sub pop notb add movsb dec ficom (bad) into (bad) js xlat and popa insb or push add icebp mov or sub cmp loop push push pop add mov xchg icebp xlat stc mov sbb stc xchg inc lds sub pop mov fistpll pop or add inc int or xchg fldl2t add rorb in jns rclb cltd dec inc sti xor ret adc pop dec pushf add ljmp mov cmp push aam mov sbb (bad) push addb jne gs cmc cmp ret sub pop jo xchg xchg or (bad) icebp and jge and fisttpl pop js xchg push dec pop mov loopne jg inc mov std sbb leave add pusha and adc xor sti push sbb sub scas imul incb mov mov mov mov andl pusha xchg xor or (bad) push inc imulb out pushf lock jne iret lds call sbb imul mov dec mov xor fs cli and mov sub ljmp cltd dec xor push (bad) mov or dec jne rcr sahf pop mov negl xor adc movsb ss iret pop pop mov and mov mov mov (bad) es bound lds and xor testl loopne int3 in mov ja xor stc in add or pop push sub cmpsl xor add movzbl mov shlb cld mov int pop jno ret or xor or mov jbe dec adc inc (bad) cltd daa sub push stc fldcw jb adc lock push mov dec test mov dec mov dec cmpsb jne push add inc dec into jbe xchg add sub mov push (bad) lds push mov mov jbe (bad) lret add insl dec jbe ja mov dec mov int3 outsb adc xchg lret dec add inc mov and fisub xor xchg mov sub mov add cmc xor cli or divl lret jo popf gs ret jecxz (bad) leave jb xchg outsb fs (bad) lcall sub mov jne jg fdivrl sbb pop xchg dec add xor jae daa dec rorb jl data16 mov (bad) jmp add ret sbb popf nop lret dec mov mov pop and mov nop lods pop lret inc out push jmp pop stc pop xchg push pop fcoms dec sti int and dec lds adc cld inc and pop mov add pop sub xchg mov cmp shrb ficompl or add daa inc inc xchg add fcoms sub and andl popf (bad) fldenv jne stc jno pop ret cmp jbe lret push xor mov dec dec sub in jno icebp (bad) cmp sbb adc mov jae mov sbbb ja sub hlt inc xchg lcall (bad) aad pop (bad) out (bad) stc (bad) jne lods fmull (bad) sub mov lock xchg inc mov icebp mov movsb mov out dec cli iret (bad) test or xchg pop or push bound aam xor jbe ja mov sbb popa xchg cmp or or jmp pushfw repnz cld popf push dec int cmp jg divb mov sub insl or (bad) jb sub pop pop jg or or call or (bad) push mov fstl mov ret stc test add mov xchg out loope mov pop fist test xor xor add lods inc movsl cli arpl loop mov sub jle gs sub cmp and lock adc stc and loopne (bad) xor mov mov and repz jno sub movsl sahf pop or xchg xchg sar jne push dec sub stos fnsave cltd dec mov es and cld inc sti xor das data16 lcall cmp add lods int mov xchg bound cmc pushw shlb jge in xlat mov fnstenv sub push jle out stos sub out add inc adc push push sbb iret pmaxub xchg and (bad) insb xchg sbb dec add dec leave add sub and ret mov push icebp and cmp mov leave out jns cmpsl push mov jns inc and or xlat cld mov mov lret inc mov pop popf (bad) add and sub xor mov mov enter sti sbb test mov (bad) dec or jp mov aam add in cltd into adc mov fistl imulb xchg lds sbb xor repz mov fs sti fnstcw adc lret or mov adc add inc stc or lret loop jnp or sbb lods mov lds push mov jb mov jp and in or into sbb sub test and test into popf pop push push xchg pop lods push (bad) xor (bad) and jecxz shll scas sub sub xor xchg mov (bad) mov mov mov or adc mov dec stos push mov ret pop inc and divl cmp lahf cmp ret test add fnsave loope shrb xor popf repz jp clc cwtl xchg xor cs and sub sub fisttpll lret scas loop in pop (bad) xchg inc mov in add mov stos mov mov test lret (bad) loop fwait loopne jmp adcb out push scas push fstp fldl mov in pop cmp dec dec shrb jbe or call pop repnz rolb jg jg inc dec sub mov adcb sub xchg adc stos fxch jle not and sti jp xchg ljmp mov adc cmp bound mov (bad) push das pop xor cmc add call push xchg hlt add and dec jmp (bad) xor roll pop dec add jno cmp iret lret jecxz pop sbb insb jl rorl data16 cld fsubrl inc pop imull test mov lds sbb push jno,pt (bad) and gs xchg dec pop add iret scas push lods cwtl je sti aas mov insb lds (bad) ficoml xchg cmp cmp mov dec sub out adc lods rcll mov sbb pop and push adc xor stc and call sub pusha hlt test xchg data16 pop das enter les cltd or std cmp out pop jb cltd jae dec xor (bad) cs adc sti lret jo (bad) dec loop lahf xor mov or lret fadds loope mov leave inc negb xchg outsb jl mov gs push sbb cmpsl (bad) mov and inc sub inc stc jbe xor sub jbe mov iret pop push jge ficompl aam lds xor or fistpl sub popa lcall std mov fcoms or push lret push push dec lret aam repz add sub iret sub fstl mov sbb loope add adc ljmp jecxz leave dec jb mov and add push mov adc pop (bad) insl xor outsb leave mov sbb mov les xor test andb cmp iret cld and add pop imul mov sbb and mov clc push out cli mov scas outsb fnstcw stos xchg in cs cli out inc xor and sub rcll push icebp push lahf pop mov int aas scas jno sub cmp cmp mov xor pop jge cmp fcmovnbe adc mov loop inc or mov jmp mov and call ret add dec adc ret push in out and imul mov pushf mov pop cmp inc sub or and jnp mov rcll mov pop push mov stc sub add xor inc xchg ja adc mov push add imul in scas (bad) or add add pop in repnz xchg adc cli hlt xchg cs repz xlat fsubl sub xor ljmp adc ret fadds ret test (bad) (bad) mov xchg fnsave xchg xchg scas vpmovsdb lret lcall lret gs jo xchg mov inc mov cld movsl mov mov or jo mov leave jns imul push cmp daa imul pushf out mov pushl inc sub dec iret scas push sub pop xor ja,pt sar pop lds sub (bad) adc mov xchg scas mov dec out or fmul cwtl sub mov aas je cli int3 (bad) fisub pop (bad) mov out ret fwait sub out stc or jl popf call ret (bad) outsl mov pop enter xor shl xor (bad) mov cmp dec inc push js lret lea and jmp pop cmpsb adc sbb ficomp cmp sub sub or lea divl or xor jne lea pop sub and (bad) sbb icebp rorl add popa pop lret and adc stos mov mov add and dec and dec out push in lods pop and adc add cwtl mov pop pop stos or add daa les outsb mov in add lock idiv cltd push outsb int3 push ret dec push (bad) xor mov sub jmp mov or jno sbb and and mov test ret lret ret sub stc clc jno mov negb dec jmp scas inc mov ret cld or ret imul dec add sub and xor imul dec mov out sub and adc bound rcl lods (bad) jl inc gs add xor jg cmp and fildl mov jmp xchg inc inc sub xchg pop adc scas add mov inc mov adc jbe (bad) arpl call dec out cltd int3 dec push mov out and mov lret push inc xorl cmp bnd ljmp lods jae dec add in mov mov or lods mov dec arpl push sbb (bad) (bad) scas arpl notl popf (bad) mov dec sub mov lods sti andb push adc xchg (bad) and in das ret out push adc xor sub push leave pop pcmpgtb add push clc cmp int3 sahf and mov and andb fucomip sbb sarl mov ret jle,pn mov mov sti out xchg sub or fiaddl jne jge and clc punpckldq sub enter mov lea cs sub xchg jbe pop dec push dec add push in or iret sub cmpsl dec add divl (bad) test mov std xchg loop adc ret ret or mov xor test dec ja xchg pop xchg stc in leave xchg jl call or shll loop call fidiv dec inc cmpsb lea jecxz (bad) rorb xor mov data16 lcall mov xchg adc and and xor sub das sbb (bad) dec and push ljmp sub jge bound or push in mov pop leave out cld out mov fild imulb sub dec iret mov pop dec (bad) into call ffree cs mov das mov test dec dec insb jle out lock sbbl push cwtl test sti repz shl dec xchg push mov or test dec mov mov pop call test jmp or ljmp leave (bad) mov cltd xchg insl popf mov sub in sar pop idiv outsb mov out cmp (bad) jle pop lcall fwait fwait repnz xor xlat and dec jno mov pop movsb out imulb inc mov and mov sub jno das lock mov fcoms into xor push imul or sbb jge fadds mov mov (bad) in and xchg inc scas popf inc pop enter movsb aad test repz pop sub ljmp xchg sbb mov pusha mov sar or push mov je jb mov jne sahf imul ficom (bad) out mov mov xchg push stos mov (bad) dec call jmp jmp and adc (bad) cmp cmp mov repz or movl jecxz cmpsl jnp movsl mov sti sub (bad) or jns mov sti sti stos movsb xchg and mov rcr jmp in add jbe stos sub (bad) divl mov or into lds iret es das fsts sub gs pop and mov pop rorl sub test mov inc add mov mov out inc aam jge xchg jne add mov les div and idiv lret xor pop add icebp sub xor testl lods sub fs aaa movsb jmp ljmp subw add ret xor clc or add imul or in divl pop stc pop pop add mov cmp les mov pop and aaa fs pushf in iret mov cmpl das ljmp ljmp pop (bad) pushf add inc or xor mov push pop lods loop in sub pop hlt mov movsl mov adc or (bad) push mov inc lret push adc mov adc dec mov leave mov jb inc mov imul mov ljmp cmp scas mov adc xlat stos pusha or aaa pop aas pop addr16 negb inc adc les pop or xor and mov popa jo shrl clc test sti ror mov sbb daa lds out pop push dec loop (bad) idivl dec call and vmovaps mov inc xor adc add popf sti jne inc push iret imul scas jmp out sub jmp jae xchg stos mov daa data16 push out neg daa ljmp sbb icebp or cld paddusw jo sahf (bad) movzbl lods (bad) inc cs loope (bad) mov dec xchg xchg xlat pop mov mov jno push loopne shlb cmpsb jno dec sub test rorb mov (bad) adc sbb xchg lds push lahf sti popf pop cmp cs sub movl (bad) dec sub adc inc (bad) into jge mov (bad) fldenv imul rcl idivb repnz mov sub xchg adc push leave xor cmp imul dec aas test jb dec fsincos xor shrb sbb test pop popf push cmp stos push pop push jmp mov popf xor mov inc sub stc mov and jg mov mov bound jmp stos xor adc (bad) jbe outsb mov lcall xor mov (bad) stos add outsb mov and mov and mov xor pop or sub and mov popa insl clc arpl cmp (bad) ljmp cmp js lods adc push test or stos adc and shlb xor dec movsb or jmp popa fs and mov repz cmp xchg repz dec inc pop or jecxz pop mov mov add push mov into inc xchg inc jge out out and pop xor ret push dec adc outsl jne xchg push mov sub popf out adc mov cmp shl or inc sahf mov and push or jne rclb lods pop pop into mov push repnz dec mov or mov out sub in push call lcall aas jecxz or aam pop or popf xor jg scas sub xchg pop sub in out nop aas rcrb jo mov out mov loop cmp cwtl adc mov or mov cmp (bad) int3 jbe or hlt leave sbb mov xlat stc cli xchg (bad) add or xor mov cmp push jmp (bad) dec cmp sti mov or mov out imul pop js mov pop inc repnz xor neg push stos arpl pop test dec lea mov or ret add rclb sub icebp sub fld pop mov jno cmp lds shlb adc push sub or adc pop idiv sub or add bound rcr push or loopne rorl xchg xchg xchg aam jmp pop inc cmp adc popf sbb add ljmp push in adc idivb pop sub mov cld push push inc mov dec orb dec inc and aad mov popf sarl or mov cmpsb xchg push and jbe add add (bad) jmp pop fwait cmp out jge add ljmp lret mov inc sbb dec ret mov or inc cld add or lret clc mov je out sbb movsl (bad) aas jp jg mov and xchg idivb pop inc jmp jmp sub jae scas inc and mov mov pop push sub lcall jmp cmpsb mov mov lahf pop clc imul stos cmp das ljmp incl push mov lcall popf add test scas xor jge int3 jge mov loope fcompl mov adc (bad) push adc sub jmp (bad) mull lods fistp add inc in sbb inc xchg (bad) stos dec or es mov pop dec out in (bad) mov std push or cs test divb mov pop mull adc adc loop xchg sbb lret cmc mov cli pushf imulb scas push cs jno sub addl add pop inc mov (bad) in push and mov jo repz and ss outsb cltd push jp xchg scas push xchg test mov mov pushl mov xlat jg or sbb sti pop scas sti sub and mov (bad) xor push pop into mov jle icebp jl push jg in lret cmpsb mov cmp push adc ds (bad) mov ljmp repnz and cs push and xchg mov (bad) push jmp ds test enter mov and ds pop dec arpl cmp jge push jmp jmp (bad) fdiv pop ss out or std jb or inc arpl or js jmp push cli adc mov xchg out push mov dec icebp mov adc mov push pop data16 (bad) jnp mov mov and mov call jmp dec jae xchg and (bad) std ret andl mov xor pop (bad) ljmp jmp fisttp insl mov xchg icebp lahf or add stc xor add (bad) mov jp mov pop adc or gs or loope icebp in out cmp aas rcll push mov faddp bound stc je add sub test sub push sub leave mov leave repnz cwtl dec icebp mov loopne hlt sbb add cmp pop mov xor dec aaa mov ficompl cli adc jp repz stos or jmp hlt xchg imul dec mov and mov mov mov es icebp aam ljmp xchg push mov leave jne test xor sahf jnp ret ljmp (bad) popa push test movsl data16 lods dec pop mov (bad) repz das dec (bad) daa cmpb adc (bad) faddp push pop push data16 sbb in scas js xchg inc dec sub stc dec mov stos mov dec mov ret or jmp test in movsl fnsave ss mov fwait sub pop arpl mov into (bad) fstpl les mov jp push or xor mov mov or das and mov idivb xlat ret jge mov inc in ds sub xchg sbb loope mov stos or pop jne pop inc mov dec stc aam bound ret cmpsb dec add fidivr jl call shll dec mov sub adc into and stos mov out jbe push mov into aas loop les fildll ja jmp dec out xchg mov negl push shrl xchg sar push jbe das fdiv rolb xor xlat loop push outsl xchg negl mov aam add (bad) popf clc push cmpsb arpl mov (bad) (bad) shrl fisubrl stos cmc pop add cwtl xorb fldcw ja popa pop push lods (bad) jle into add sub jne loope jecxz lock xchg outsb or fucomip sbb into stc ret popa xor push or jle iret bnd xchg push gs and stos je in lods ret movsb adc ljmp push mull mov mov scas jne adc and inc or jns lcall rolb imull ss mov mov lret in mov and or clc mov fs scas or out pop sub and mov movsb shrl and outsb idivb (bad) sbb (bad) and ret leave jmp xchg xchg popa inc jmp aam lods out mov push and adc push push stos leave push sub aam jmp sti or fs (bad) mov sub xchg sub sub pushl pop pop jle movsb frstor mov std sub (bad) push fcom cmpsb xlat clc btcl inc and mov push mov push stos idivb add pop push (bad) xor adcb addr16 shr bound jo push mov add mov jb ficomp pop sbb pop add xor pop out stos cwtl push pop jo mov mov pop add inc pop out push adc mov and rcll or cli pop jne mov daa icebp lret push test push mov pop add pop jmp push push mov or test push sbb mov push nop push push test push mov aas ficompl add jecxz aam sub jg mov pop dec rorb frstor jae sbb add push mov add ljmp push (bad) and xor jg ds in jge push bound or adc fcompl les lods mov pop (bad) mov or fisubrl ret add ficoml mov ds xchg xor cmp adc bound jle pop (bad) shl or add (bad) cmc pusha gs hlt sbb fnstsw add push pop shr fwait nop ja pop cld pop pop add fsubs or add call add jp rcrb ret mov mov pop fbstp add jmp popa pop ret out repz dec mov pushf adc imul or jge adc dec mov mov jmp and scas ret addr16 pusha mov mov out fs xor and stos test loop fstpl xchg add mov lea rol and mov push inc add dec push fstps insb daa mov adc adc movsl cmp xchg cmp fnstenv dec adc fs int3 in add (bad) mov sub pop mov xchg insb movsl or lds ret push (bad) xchg imul out call push sbb sbb or in mov shr push xor cltd push cs xor push loop pop dec ret in cwtl or push stc mov cmp and pop xor dec and xor jnp pop or stc aam jge ljmp sub dec negl pop imul imul push shlb lret sbb sub scas sub add cmp loop push jns xchg repnz ret cmp repz insl dec (bad) out imul test stos int outsl mov push std fist mov dec cmpsl aam and sub and call sbb mov data16 cmp sbb mov mov lods sub fild add xor mov into ret (bad) out repnz enter add daa mov and inc das (bad) sub add mov xor jno jmp or sub sub outsb (bad) sbb cmp ds rcr push push popf push inc loope aam push aad push sub ret fsts sbbl pop xchg out inc idiv mov call shlb mov cmp cmc mov xchg sahf and pop loop push and out xor mov ret stc or cltd stos push test ja enter fwait test xor and sbb push mov ds or xchg mov inc xor pop jo (bad) rcll jmp icebp das mov lea push call rorb pop sbb dec adc mov adc das pop and cwtl sub adc sarb cmc icebp jg adc inc lcall jmp repnz mov mov ss lods jmp sub sti fadds out cmp shll fidivr push mov inc jle add test icebp pop call push les sbb (bad) mov push lret ss jb push dec shrb stos popf inc lods mov jae stos jge xchg cmp and pop push bound dec stos pop jmp jp jb divb (bad) test fs ljmp lods call cmpsl sbb mov sub popa jle add adc test test mov jnp in xor mov mov push add cld mov mov mov or clc mov mull (bad) fsubs out sti push push jnp sub sbb pop ljmp jne mov outsl clc mov mov or xchg mov inc inc adc add divb dec lret push sub adc sub mov jmp sbb (bad) out jl into rorl inc and cli and mov outsb sub mov xchg iret mov negb (bad) nop adc add aad pop push out daa leave fs mov pop aas fcomip fstpt or comiss pop cmpsb rcrl bound lret and fildl mov fs mov iret inc adc xchg dec testl mov mov push xchg ret cmpsl cs pop (bad) test mov adc adc popa (bad) repnz inc mov push cmp call dec stc repnz lcall mov pop or test into stc cmp mov fcoml mov out dec scas (bad) sub add cmp dec sub fsubl dec cmp jle inc dec mov sub adc sub dec mov sub sbb or mov mov out sbb jle jecxz dec lods pop xchg scas ret je push and jnp nop xlat mov popl xchg add xchg add out xor shrl popf loop idivb inc xor iret sub mov bound (bad) stos mov sub inc mov stos ret pop add dec loop cmp (bad) rolb jle fs pop icebp ljmp test and in daa pop stos inc xor insb dec mov jmp sub mov mov out fistpl in pop dec out fnsave mov cwtl mov lock and fs push xchg (bad) xor out adc (bad) mov sub mov jne call cmpsw lds jmp cs add mov adc push push (bad) out push idivl pop mov cli lret mov cmp popf pushl cli (bad) and sub (bad) and test adc lahf leave dec add push repz les in adc cwtl js into xchg imul imul iret insb push (bad) and mov push xor add popa in jl cmp dec and div push add sbb inc dec rorb pop jns (bad) xor cmc (bad) sub popf dec ljmp (bad) out xlat and lds lods jle mov ds inc pop (bad) pushf or dec aad cld jo loope pop xchg push push jmp pop and sub cmp (bad) mov sub pop call dec test pop mov mov push stc incb pop adc (bad) imul add or test movsl mov add push xor mov sub sub mov sub jmp add scas gs xchg jmp or xor add jg adc out (bad) sub aaa or out fadds scas add mov test mov and sub push push sti (bad) lret push (bad) ds inc movsb mov ja pop cwtl les push std lock ljmp stos cmp mov ret xchg cmp fmull xchg enter pop int adc mov and jl sub mov sahf xchg fnop jae or movsl insl sub scas mov (bad) and push (bad) lret ret fdivrl rcll adc add bnd sahf push insl test dec sub ja fxch cmpsl pop push test add mov flds lcall pop pop data16 cs adc pop or mov ret cmp sbb les (bad) mov pop sti daa out pop (bad) repz fsubs push sub and push dec iret ljmp push push mov aaa ret inc cmp cld cmpsl popa aas xor bound test (bad) push outsl je int jp shlb mov insl push or jno mov push rcll add add inc push cmp enter fwait adc jno dec inc xchg xor adc add xor pop je jecxz repnz sub daa xchg decl (bad) jns adc fimul sahf rcr or mov mov pop mov or sahf out imul sub lds (bad) xlat (bad) sub adc mov xor add adc jmp arpl loop xchg clc and cmp nop roll mov or pop or and inc (bad) sub fisubl inc lret pop fild imul (bad) jbe push ret arpl cwtl sub mov lock stc sbb cli jge push adc ds cwtl mov xchg sbb je inc iret push icebp mov xchg out pop mov ret xchg fstl add adc cmp rorb je mov push inc or sar and ret fs test fwait or popf or lret mov push inc aad (bad) repz mov pop setae (bad) fs xor popf fnsave stc or sbb ss inc ret mov add movsl mulb fdivrp inc imul mov mov add dec pop mov add jg add fcmovnbe aam sub pop (bad) repnz repnz push mov ljmp push cli adc fistpll push test pushf mov ret aad sub pop jb lret sub decl sub jmp lahf sub sbb (bad) ja xchg jb pop popa push movsl scas cmpsl inc dec leave inc popa add clc and movsl jns dec mulb out mov fildll or mov (bad) rcll adc ret jge pop pop lret pop dec mov pop stos mov fsubrs leave or dec pop lahf repz xchg mov cltd ds xor jp (bad) mov mov rol inc or loopne (bad) xchg sti xchg cmpsl cli xor (bad) cmp push mov adc sbb test push in loop sti in push into mov ljmp outsb adc lret (bad) out (bad) out sub (bad) and mov fisub (bad) mov dec mov and dec in popf jnp inc es mov out and mov popl jo inc xor mov (bad) jno cmp popa lea jle jge fimull enter sub xchg gs mov or mov and daa jo mov inc imul adc cli shlb ret pop dec je sub or mov decb xlat sahf arpl pop les adc mov jmp and (bad) rcrb dec dec test stos les test loop xchg shr or jmp nop rorb cltd stos sub movsl out iret test or popf js add or jmp shlb pop int3 and cmp and add inc add push test adc call outsl test test pop scas arpl sub negl int and or and in mov cwtl sbb push and xchg stos adc mov fistl and (bad) gs adc add insl dec cli sub mov mov mov and mov fstpt xor mov aas inc rcrl cmp call xor test and sti sub xchg mov or call mov or (bad) fadd andb out pop popf push in insl add cmp fisubrl mov jmp pop jmp ret jge sbb (bad) push daa and (bad) ja add inc mov push leave add enter inc outsb into pop dec mov xchg mov rcrl xchg fmuls mov xchg inc cmp rclb loop cmc xchg push xchg cmp ret cmp scas dec test out jnp icebp stos sub aaa xchg lcall dec mov gs int3 (bad) xor imul ljmp sub ror out cld shrb xor inc jb xchg ret and test movsb stos xor fbstp cmc sub mov xor xchg gs repz mov mov ret out cmp xor dec mov icebp and push ffreep or stc jmp xchg or aaa cmc fldenv inc ficomp push push aaa (bad) cltd aam insb (bad) repnz jns icebp xor jg adc ja and sbb xlat jo lahf push push and mov popa (bad) sub sbb cmpw cmp xchg les or pusha loopne (bad) sbb lahf mov leave and dec scas dec mov xchg fisub mov ds popa movsl shrb and gs cmp sbb sub add xor leave lret inc je push cmc xor lods gs lods dec sub repz jp and lahf mulb das pop pop jmp cmc jmp cmp xor sahf in fisubrl cmp mov inc insb inc sbb or sub ror jl lock leave and in sub icebp stos and insb pop leave repnz inc jbe ret mov cmp inc mov add xor je mov jns call lahf stos fs pop mov lret ds inc push xor mov jl stc (bad) mov das jae fidivl repnz mov pushf mov pop (bad) sub lea rorb (bad) mov mov sub add dec add enter jmp jb repnz es xchg and scas cmp dec push add mov push push out test cltd jns enter jecxz pop movsl inc les (bad) pop adc (bad) mov test lahf bound jns popf push cmp dec jmp add mov and mov xlat outsl add (bad) or jbe lret xlat mov xchg outsl and xor rorl shll fs imul shr pop xchg mov mov sub dec scas sub outsl sub jle cmpsl dec stos xor inc mov addr16 mov mov das leave rol and sbb lock dec clc cld mov sbbl das add mov lret or mov xadd outsl or jl push sbb lods cmp mov stos adc test lret mov movsl stc fisubl mov pop dec jl bound ljmp or mov test out or movsl fstps scas jo adc or push fist jmp (bad) (bad) arpl fimull sbb es dec mov jp jb jge leave mov mov sub into add push sti scas mov stos gs mov popa into and sub xor jmp adc mov pop add and sti push stos cmp stc xchg pop mov jne pop mov cli (bad) sub ficom enter fstp dec dec (bad) repz fs sbb fldpi push inc pushf addr16 cmp mov add cltd mov popa mov cld and std push das rorl repz jecxz sub out mov and jecxz fldt jmp sub subl cmp push and daa fistpll lods xchg fild sbb jmp out rolb pop rolb cltd mov pop push jp stos adc mov movsl lret fdivrl dec inc jp pop dec push pop out jae and pop sti adc push xor xor js lahf int3 stos sub addb imul add sbb and aas xor sub jnp pop rcrl and xor cmp inc mov shlb loop hlt rcll movsb or mov (bad) daa add icebp test jmp jbe and or insl add jb xor cmp lret mov add mov xor popa cmp push push and or cmp je jmp es jecxz dec sti push out out sub xor fnsave pop mov dec xor add int mov mov push fidiv mov stos push addr16 clc rorl stc imul push adc xchg rcrb lret and pop wbinvd pushl (bad) pusha imul xlat fistl pop fstl fs sbb nop mov and stc add ljmp dec bound pop loope xlat cli lret mov pushf xor mov xor je ljmp out mov push std adc test rorl adc xchg shr movsl call test dec ljmp jg xchg dec into mov pop lds jmp popa pop scas aaa or jg jmp stos jmp xchg xor mov and lods pop call mov movsl pop out icebp das add cmc cltd aam inc adc dec cmp mov mov add mov push or stc dec and push cld je fdivr add sbb js dec data16 sub inc xchg adc daa mov xor jg pop (bad) icebp inc sub sub xchg xor js dec out sub inc pop mov adc (bad) popa rol and push lret ficompl lret add pop lds ljmp (bad) jle lret mov sub dec aad mov xchg cmc fs loop mov mov sub out xchg pop mov pop mov xchg lds jmp sub loope jns inc mov jle (bad) pop mov and pop (bad) push sbb sub and popa shr mov ret or aam add or movsb sbb (bad) lret mov jmp stos add out mov mov sbb cmp outsb test mov test fldenv dec rolb fdivrs adc data16 aaa insl sub enter repnz pop pushf xor cmp outsb lret push int3 popf sbb sbb mov es std sbb or or imul lods lea mov std (bad) mov aad rol cwtl (bad) xchg loope iret outsb jb inc push push in test inc mov mov xor mov jne push inc inc divb adc int outsb mov idiv sahf pop or imul mov xchg mov cmp fcomip (bad) pop sub lds jmp adc xor into jp xchg nop les test lock pop and mov xlat ds and ficom es xor jle jecxz inc sub add mov scas hlt (bad) dec push lret jmp les mov mov cmpsl rcll repz adc cld lret mov push daa fcoms cld inc xchg addr16 cs das (bad) mov les shrl imul or mov iret jge and add test xorb jb divps push push jb shrb call out cltd rorb lock mov xchg mov sub and mov in sahf mov dec sbb mov or (bad) sbb jnp es insb daa mov sbb add or inc xlat push and nop addb inc mov (bad) mov lock aam into sub push ficompl adc mov imul add rorb imul and addr16 ja test xor cmp dec dec and mov jmp add xchg (bad) mov mov aaa sub and pop movd cmp inc imul cli frstor jmp push mov sub dec sub xchg jl jecxz lret lret jno es daa pop push stos loop sar cltd jno stc jnp dec imul push mov adc lock and or mov (bad) enter xchg addb jge (bad) mov mov xchg aam js jnp cld adc adc mov ljmp mov inc sub (bad) add sahf mov sub jno cmpsl mov inc aaa mov popf mov hlt cmp xor adc jo and sub mov je aas cs jb (bad) data16 add mov fiaddl stos fnstcw or mov jbe ret jno dec fistp insb testl scas mov les mov adc or pusha daa icebp mov pop dec dec nop lock jg aaa cmp sub or cmc push test cs sub jmp lahf (bad) notb loop push idiv jp or cmc xchg mov shll ficoml inc mov xchg adc mov outsl (bad) adc xchg test xor repnz outsb clc sub xor arpl rclb icebp mov dec lods stc add push clc pop sti stc or mov mov push sub jecxz dec loopne iret mov mov xor popa jl pop xor xor out add jo sub and lods lretw push std sbb push xchg (bad) cvtps2pd pop mov popa dec mov xchg add (bad) lock fwait rcrb clc xlat inc mov push xchg xchg pop pop push test xor sub jno jg ret dec mov and mov cwtl (bad) loop inc into add or mov pop jne scas mov into fwait daa jbe ret pop hlt fcoml dec dec cmc sarl das call aas out and xor xchg add or in sub mov adc add ret push aam pop mov dec add push (bad) and xchg test dec cmp pop ljmp and push (bad) push adc (bad) mov xor mov xchg mov mov add or mov inc or aaa cwtl xchg nop popf popf lock mov call repz (bad) pop fwait or aas clc xchg movsb repnz lcall xchg es mov and jnp sub pop ror mov xor cmpb sbb xchg inc mulb sub stos xor (bad) lock scas adc pop loope sbb add or jecxz decb pextrw inc ds (bad) mov pop cmpsb icebp push iret xchg jmp dec or (bad) cmp sbb lcall repnz xchg scas arpl dec mov rolb sub cltd push add (bad) mov mov push sbb out or dec sarb and sub mov das and adc nop pop mov mov fs lods pushf dec lret xchg inc fisttpl faddl fldenv inc xchg (bad) movsb out icebp inc repz and mull cmp ljmp data16 sub (bad) xor push xor fsubs or popa inc cmp add popa add into or dec xlat out test mov jo or rcrb mov lret outsl out xchg sti popf xchg ds push icebp repz inc lods pushl std nop sti dec (bad) aas (bad) or mov jge sub cmp pushf lret mov imul pop ficompl pop outsl std loop clc sbb leave pop inc add sub call aaa sub sub cmpsb mov or add in out ja gs mov cmp cld nop orb pop mov ret jg jl out mov xor in adc push out notb rol jp ret add xchg lret xlat int3 popf rcl movsl ficom or dec and add gs js (bad) mov aas mov add sub dec mov (bad) pushf push sub xor xchg push (bad) data16 or clc xchg dec dec nop xor aaa dec sti mov sub dec and and push inc flds icebp sbb arpl jp and sub aad and leave repz cwtl jmp push sub sub int3 in mov dec daa ret in push pop bound push std loop push ret push and or jnp sub fs clc es fist or sti dec outsb adc push scas roll sarl mov out out pop test mov mov decb aam jb test stos mov inc imul movl sbb dec out nop or cli (bad) xor inc ss xchg jp jb and paddusw xor jp mov sub pusha lds loope repnz mov cmp push push add sbbl data16 sahf es cld mov push or mov push add pushf (bad) push nop add ret ja roll mov add pop mov dec inc mov push dec mov add pop ja lret cwtl mov scas adc enter push aam sbb test stos sub jle lock mov sub in pop xchg ja adc xchg (bad) mov pop cwtl xor inc lods pop add push adc in aad add pop jp push jmp test out and sbb sub cmp int sub insb and das mov pop lahf inc insl jge mov mov add pop scas jbe adc shlb push mov pop adc flds push mov inc pop andb int outsb cmp pusha (bad) jg jle cmc inc xor incb dec call mov fstpl cwtl push pop dec push xor jbe mov iret int call pop add jns push hlt in jbe dec loope pop push mov xchg movsb pop lea cmp test ret mov fwait gs and pop xchg push mull stos pop rorb add jnp ja sub std fidivr adc dec push pop repnz add pop push jg and mov sub pop add in or scas add aas add pusha sbb shr cmp sti mov xchg push cld arpl mov (bad) jg or aam sub jae jne pop add add loopne pop push add sub stos jmp ret xchg repz pop outsl xchg adc cmp or add jg into out sbb pop inc int pop or mov stos push out dec shll add repnz sub dec jns pop pavgw in stos sub push or outsb cmp mov rol jge arpl and sahf int3 inc psrad (bad) nop sub sbb cld sarl clc aas sti xor dec idivl pop sub call ljmp in and bound data16 out popa in movsb sbb xlat lock adc push sub inc dec test clc fbld (bad) hlt add mov jnp xchg in dec repnz mov and lret mov mov xor mov icebp repz into mov cmp xchg mov lea add mov inc add es das clc call xchg clc shlb add jne scas or fnstcw inc jne xlat xor fcmovb iret push mov mov jmp aas call and shr loop popf jg adc inc out jecxz push add jne je (bad) pop pop test push das push ret pop pop or pop mov or dec add repnz adc out loop xchg enter sbb push jne call pop and bound fstl xchg jbe outsl push (bad) bound iret push pop adc stos adc cmp xchg sub jp and or xorl daa out mov add mov (bad) mov mov bnd add add mov mov loopne popf lret jmp xor ret sbb or sarb fnsave out or sti jno inc mulb sti pop mov cmp pop fs je ljmp xchg or sbb add or xchg fs add sub mov jns hlt ljmp leave divb add xor mov dec mov mov (bad) ds push jae daa pop xchg leave xchg scas and or mov (bad) dec out (bad) jne out or fstpl and imul or cli gs pusha jecxz (bad) xor mov (bad) xchg jg cmpb enter sahf jge or cs test and or xor loop hlt loopne std in das sti xor adc inc ljmp mov mov ja push push jge push sbb cmp xor add xchg pop int3 gs mov adc fldz popf cmpsb das and pop jl push das cmp push push pushf pop out loop test cmp sbb pop xchg sbb dec inc dec scas mov test out daa or push mov xchg and sarb sbb cmp pop jbe dec sub cmpsl fsubr les xchg jb out notl xor xor repz movsl sub movzbl mov and fbstp repnz jle lods mov adc popf fldcw dec sub pop jae es mov loopne xorl aas sub push or loop push das inc repnz or imul jne mov (bad) aas dec testl mov adc jecxz lcall loop add pop orb mov neg cld lret push and and pop and jmp dec pop sub pop imulb ret dec xlat fs imulb or popf xor cmpsl jge aas xor not push push push pop add fist mov jmp pushl dec inc push mov jae inc hlt jg cmp sub jae nop orl lds or pop addr16 jle shll push lods pop push jae cld xor ds repz dec push xor incl mov rcrl loope add fstps add sbbl pop (bad) pop push je push out rclb arpl sub add nop jmp test jg lret push test jno sbb mov and and ffreep out add popa (bad) jne ds es dec testb push lds lods push mov ljmp sarl ljmp pmaxsw xchg pop mov (bad) int3 and or inc int mov ret add and push add xchg adc mov adc cmp pop rcr sbb test push out xor adc or mov and aas mov repnz xor sub dec mov jg sub add mov lret xor cli popf mov int3 and (bad) les mov pop xor mov cmp (bad) sub idivl ficom adc lods adc push mov pop mov push imul leave push pop std pop fistpll mov add roll (bad) xor aaa mov mov ret and (bad) push or shll xor fbstp (bad) aad xchg icebp repnz les stc subb dec enter gs jmp data16 dec adc inc inc add repz adc cmp push mov jg sub sub bound mov pcmpgtb icebp sarb cwtl dec sarl negb xor dec xchg xor mov add cmp (bad) aam loope push mov in and aad lahf dec sub (bad) hlt aas cmc xor ror sbb inc cmp ja int gs and or sub or mov loop mov imul rcrb sahf cmc xchg insb pop push rcll ds stc fcoms sub sub sub lret or js ret movsl je push std dec decl mov mov dec cmp (bad) (bad) pop dec or adc dec pop int jnp rol mov ror ret ret inc into or mov int3 ret sub (bad) dec out push in cmp loope mov jbe jns adc mov xchg lcall jle stc push sub sub (bad) popa push into pop jmp jecxz dec fwait xor mov inc pusha dec loope sub push xchg xchg rorb sub jecxz dec push adc cwtl sahf add jae mov cmpsb xchg inc inc xchg iret jecxz jb clc sub mov dec decl out or stos dec xchg arpl call xlat add std movsl das pop insb and lods bound mov adc aas inc and out push pop dec jg stc out mov add xor out movsl fnop lock das mov pop daa int3 pop div out xchg stc pushf gs ror aad ds and shrb xchg fmull pop (bad) cli dec popa sub aam xchg loop push mov popf jns adc pushf and mov jecxz mov lret fcom mov sarl outsb and daa sub jle insl popaw adc loop shrb lret subl imul dec mov sbb xorps push scas (bad) dec addr16 or test jns cmp clc fs clc mov fldt xchg rcll mov cmp sub nop sbb fisttpll pop imul push mov sub sub sbb test add mov push xchg or and add xchg mov (bad) cmpsb (bad) sub (bad) sub inc mov rcrb movsl leave or jns test lock mov mov cmp shlb idivl mov xor sbb push or mov dec jb adc pop in jecxz xchg test jbe mov xor ret jp out mov or lock inc lret add and repz inc add aad sub mov inc push lock sub and divb js sti push mov imull sti mov cmp lahf popf inc out push xchg (bad) adc dec fst enter fbstp cmpsb jbe or mov push jecxz pop pop fmull je mov xchg jecxz or icebp repz mov pop mov sub ret popf push cmp xchg enter out test or (bad) xchg sub mov addr16 adc ret jp xorl adc push fprem inc pop clc sbb xchg stos xor mov out pop adc and das lds jle aad mov or sbb dec gs test xchg and add mov test mov out push xorb mov cld add out int pusha mov mov fist out jmp test movb pushf pop or and in sbb xchg (bad) dec out xchg repz (bad) stos sub pusha and and repnz loop mov xchg jle (bad) sub xor mov or dec icebp or lahf repnz out xchg mov cmc loope mov xchg mov (bad) cmp sbb mov pop loope adc xor mov cmpsl xchg into or and (bad) xor push dec mov (bad) js push xchg xor (bad) cmp add sub adc stos pop xchg xchg icebp mov int3 sub lock and pop push out and das lds fisttpl mov inc mov cld imul push cmc xor xchg orb add loop mov sub rcl sub sbb int3 mov push xorl icebp out mov push mov imul mov (bad) mov dec mov push das sub das fcompl adc (bad) popf fmuls pop outsb push fucomi lods push aaa pop iret lods aas loop call nop dec ss sub dec mov out pop add mov or stos lret xor push repnz pop push mov mov test or or dec and adc adc jl leave add je mov dec jg mov sub xchg pop dec out mov das pop in and jmp testl dec stos xlat xchg or mov out cli sub xchg fadds mov push mov dec xor mov inc test rcll adc adc sub ljmp add mov dec sti mov into insb mov ljmp inc sub jl dec xor xchg adc das mov in inc push push nop mov dec push (bad) sub rcll outsl pusha pop ret xchg pop xor push sub xor dec cmpsb pop mov mov nop fsubs or jo lock jbe out cwtl cmpl sub (bad) mov dec dec in out fbstp push fxtract out popf lcall (bad) outsl dec inc lret cs mov daa icebp cld hlt push jge cmp int3 pop pop add xlat mov or inc mov inc daa icebp push inc in fbstp xor push xor in adc pop out inc mov cli lds xchg xor push mov adc pop not fcoms add add cmp and imul push cwtl push adc jbe sahf dec icebp jno or push pop mov push sub push out or or and mov adc fisubr dec inc or mov sbb push and mov jp andl add adc mov rcrl dec pop (bad) ja outsl in sbb sub sub add cmp cli jbe add mov adc sub sbb lds out pop inc add pop push sbb mov cmp jno add jno push lods cmp fildll loop lahf jg pusha sub decl sub mov push mov fdivr ljmp mov xor sti lcall push inc int3 xlat push in sti lock pop pop outsb and and jbe sub enter adc mov out adc sarb mul adc addr16 add les ret test jno mov (bad) jg mov fildl push lcall add pop pop add or inc nop nop cmp adc daa loop or pop dec and xorl and popa repz mov lds add push push dec fwait mov add in or call ds testb sub stc add gs aad test leave ret leave push stc jo xlat test lret rcrl aad push sbb pop shrb or out xchg pushf les add push xor (bad) fild xchg push cmp push and js popa lods movsl sbb push adc iret pushf mov adc popf pop outsb xor and sub lcall lds adc (bad) mov jno movsl push adc ljmp daa pop sbb aas (bad) jb mov repnz aaa lods dec leave fdivrs repz out sub xor mov or push mov add jno xor push (bad) jbe pop xchg pusha lds and mov nop je mov sub jns jle lret sti adc cld or jnp daa cwtl fwait repz jmp rcrl mov test dec (bad) adc hlt mov jge cltd daa (bad) jno xchg stos aad jp mov (bad) xor fidivl sbb add inc or sub stos mov xor (bad) and or je fldenv xor inc shll add cmp cmp mov lret test cmc cmp xchg xor jne sti inc ljmp mov (bad) aas add dec sub cltd mov (bad) iret js and enter and cmp cld daa ret pop xchg fnstsw cwtl adc mov or loop mov ljmp inc test mov and or jle push (bad) out ficoml aaa cmp or pop pop ss add into push gs or sub jmp pushf pop stos inc jbe pop pop inc cmp jmp push dec cmpsl clc adc lock aad lret call mov or into mov lret icebp cmp fildll xor lods call fmulp iret cmp inc loop xchg mov in and xchg popf mov sub into in mov xor or je or and xchg or sbb adc movsb xchg out popf jns imul aad idivl imull test xor push shrl outsb push std sbb or nop jo fimul std cli mov or or inc and add out test xor in adc inc mov or mov xor xchg mov cmp scas rorl outsl bound adc push jg xor fs push in dec ret movsb rolb stos roll pop jne es mov in (bad) adcb xchg add out scas lods cmp push pop push dec push jno shr mov mov mov xor and mov movsb sbb push jne shlb mov aas ret jmp iret call adc sar mov sub mov fildll jae stos repnz rclb icebp add cmc jl enter sbb clc mov out xor mov mov dec sar sbb inc (bad) mov enter imul add lods mov or into jg aam sti jns jo xchg lds mov sub push or popf sarl cmp adc cwtl ds mov loopne adc and sbb sub aas out decl jecxz xchg not pop cmp mov outsl pop mov pusha push (bad) fs lret adc loopne jmp test jns sbb mov cmp cmp enter test das adc mov add test pop fcmovnbe lods rolb popf fsin push jg cmp mov jns rcr pop mov pop (bad) mov xor cmp add in and xchg divb pop outsb mov xchg sub sbb inc pop clc out js sti jnp cld std and sub (bad) and test jp lods or mov dec lds xor pushf push in enter push inc dec dec xor sub dec sub leave xchg cld xchg dec sub in and mov mov pushf push ret adc out dec stc ret shrb mov cmp (bad) mov jbe repnz aam jmp jne lahf movsl mov xor pop lds das pop dec push pop add popf sub sarl dec stos pop loope das (bad) scas pop lcall and jns and sub adc inc xchg lds or ss inc mov out cld loop sti add push repnz xor lret idivb movsb mov push ret cmp out (bad) xor or aaa aad out ja adc lcall daa iret and fnstsw inc push cmpsb outsl leave add push mov dec xor jmp clc scas je push dec out inc fimul xor ret jb xchg (bad) cmp enter fiadd cmpsb pop repz fnsave mov mov sbb jg nop fs mov mov xor pop fdivl xchg lock movd jb (bad) cli mov rep and sbb es cli inc or pop sbb fstl js add cmp pushf mov pop (bad) ljmp xor into mov mov cld adc push push ficoml xor pop mov aaa mov pop in notb into aas loop ror cmpl jmp (bad) (bad) xchg jmp mov (bad) (bad) cwtl inc jmp je addr16 fstps pop sub loope dec mov add xor bound fldl mov into adc pop xor repz add lret jmp cld xchg sub lods outsl sub cmc jns outsb jae shlb push inc std int shl test loop dec mov cmp fwait push ljmp jge add std lcall mov sbb mov mov loope lret mov push mov mov and scas inc pop xlat enter sub xchg add ret xchg pushf stc xchg add int3 dec cld dec inc mov xchg pop bound imulb xor repnz adc ljmp jno or cmp ss xor xor cmp and xlat mov jecxz sub call sub ja pop xor idiv fsubrs in lods je push jb xchg test ret icebp (bad) fisttpl rclb mov and or repnz mov gs jmp xchg imul mov (bad) test out jge xchg sub das xchg loop pop icebp gs or scas jns jle or mov or push lds ljmp (bad) sub mov rcrb (bad) jne and (bad) cmc pop ljmp xchg jp jnp push inc rcll aas sub sarl pushw into rcrl mov pop out push inc fcoml jmp call inc mov jno cld sub and adc idivb jo cltd test out sub mov cmpsl add and clc add add lahf sbb repz sub pop mov sub fdivs shlb pop bound pop lds daa pop jno shl push push pop jl pop dec jo cmp lock add out pavgb add iret std into mov xchg and movsl dec jmp push cmpsb repnz fild sbb adc jle outsl mov repz adc stc mov repnz idivl inc or scas sub mov lds add mov add adc mov add mov inc xor sub add scas in jle bound rol cmp pop mov mov add fistpll pusha arpl jl jmp mov add inc inc out dec js jle push stc (bad) sti xchg loopne stos fcom sbb jb mov cli push mov cmp imul jle jbe ljmp pop repz pop das mov and sub jg loope sub and sti into out and and mov pop std or cmpsb shll out xor xor int out cld cli test mov xor gs cmp cld ja scas cmc in xchg fnstenv ss inc fs and jmp ljmp js lret xchg inc pusha test (bad) and sbb lock sub inc ret adc jmp lods sbb sti bound push ret mov aam fs div loope xchg push repz shr mov sti adc stos jae dec les mov ljmp aam push dec mov xchg xchg popa xor sub flds mov jae push aas std xchg leave ret cmp dec xor sub add pop adc inc movsb inc out and ljmp int3 inc mov test loop ficompl jl ret push fmull lods inc pop insb mov mov push mov cmc ds and (bad) mov lret (bad) out and scas mov mov sti cmp repnz jno movsl aam lret xor imul call mov pop (bad) in dec out cmp cmp pop mov dec out sub or and in mul cmp sarb fstl sbb and xor sbb cmp xchg ret cwtl jmp in push xchg in iret das repnz add xlat xchg inc xchg int adc and mov xchg push add mov scas pop add ret fistl sub jbe repnz xor pushf push and sti fbstp bound out inc push xchg cltd pop sub pop sub xor (bad) in js (bad) jne dec sti stos (bad) adc push push add sub sbb repz jecxz pop fist sti bound repz lret imul xchg jns test and dec ret dec cld jp jecxz test dec subb arpl mov stos lods shrl sti sti iret fisttpll aad icebp icebp adc cmp icebp fstl inc pop adc call cmp cmp fs xor push xchg inc sub xor stc inc jle push mov mov out into pop add int3 xor xor sub lahf adc jecxz out xor (bad) shll lods movsl out data16 sub rorb xchg sub daa jg sub xlat mov jge adc add mov dec mov mov mov mov hlt (bad) and jb adc mov aas xlat add imull int3 enter mov fnstcw hlt fisub jae lcall jl stc sbb fmuls ljmp mov out or push sbb and push jbe pop xor popf jne xor mov pop jecxz mov inc imul jecxz out push mov fcoms repz (bad) xor movsl nop pop inc leave and inc lret add sub mov fnsave push adc sub xchg out inc adc lahf adc scas lea dec or mov xor aaa repnz jmp outsb lret inc sbb and insb pop icebp dec test sub sub jecxz mov (bad) test mov stos sub negb mov in sub sub fsub loope mov (bad) mov ret xor xlat bound daa sub sub inc mov jl addr16 hlt ljmp fldl rdpmc pop jmp push sbb mov add loop popf mov (bad) fcompl fisub or xor les test dec leave cmpsb and ret pop clc imul xchg xchg sub jle movsb pop fs and xchg mov sub sub dec ja dec pop loop pop mov cmc insl into and or loop xchg inc roll dec xchg test (bad) ljmp xchg jo enter ret negl and dec xchg or push loop mov push fild test mov je push into xor adc and icebp pop test test and xor jae mov jbe out mov pop or mov jbe pusha repz (bad) pop add pop out xchg cld and jns repz pop fmull cwtl xchg and mov (bad) icebp lods divb inc ljmp jb ds je and movd call (bad) pop lock pop dec roll sbb jbe inc fbld adc cwtl outsb add jecxz dec jmp add add bnd cmp mov rclb inc (bad) mov das and or xlat mov or out or dec leave (bad) fistl add jge rorb mov pop cli sub movsl push icebp add outsb ret mov and cmp mov lret xlat or (bad) dec dec sub dec leave push add adc clc jbe add scas mov adc idivl push xorl or sar mov mov iret xchg sarl loop jl in sti jecxz dec or into std cmc ret pop push test pop and mov jb repnz and xchg in sub xor fiaddl bound rclb pusha push lds adc or mov sub push (bad) out lods (bad) (bad) lods push sar cmp test mov jmp les xchg xor and xchg mov and popf inc mov jge sub fcmovnbe and lods cmpsl inc (bad) jmp xor pop sub lods xchg pop lret fist ljmp mov mov pop fsubrs ret negl add or je push mov or les and (bad) icebp mov cwtl dec cmp cwtl shr xlat xor dec (bad) (bad) dec cmpsl jae xchg mov fidiv lret ja inc (bad) ds push arpl fisub xlat ljmp or in mov loope xchg out imul sub adc or lods push adc mov sti xor or fs repnz mov clc test mov pop inc loop call xlat in daa pop xor rcrl lret insb fwait xlat jmp dec jne out fisttpll fiadd xor sbb ror xor stc adc popf popa imul xor and data16 jno leave faddp lds and dec pop adc and pop pop jne mov lret mov jmp negl pop cmpb insl jle std and jecxz js ret (bad) mov test shrl push cmpsl repnz mov stos xor movl or clc add notl in loop push jbe flds ret test sub cmp mov insb xchg cmp jg jle cmp dec xchg xor sub mov inc cmp jmp fsubs mov jl mov or (bad) xor fcoms mov or pop arpl adc popf dec jg ja jne loop xlat add ret or icebp (bad) repnz rorl dec inc add or add fisub ret and and jmp (bad) cmp mov fistpll pop mov inc mov fldcw push leave aas data16 stos cwtl mov insb push or stc pushf sub (bad) sub mov rcll sbb mov push (bad) fistl sub sub movsb mov rep bound push jge or out int3 and daa and aad and stos add icebp clc decl sub or faddl mov or (bad) leave and sub mov ss xchg jle push (bad) mov mov sbb stos out mov or mov cmpsb inc inc mov data16 insb mov sysenter in mov sub and mov mov ljmp addr16 fs jmp jbe imul repnz cltd inc rcrl push jno mov adc pop jne icebp bound aas lahf ss ja inc mov adc out lret fwait adc flds out pop pushf jle adc in sbb dec mov jae (bad) xor sti mov xchg mov jnp mov pop jmp ret push das nop or mov ret add or pop out mov sub lea xchg es or (bad) push dec xor sbb insl cmp sub repnz mul xchg jl push mov cwtl xor jp xchg imul inc (bad) mov sub fcoml lcall jo cmp lahf add sub xor fldl mov push cmp xlat aad pop cmp (bad) dec cmp ljmp push and xor dec add adc mov shll mov (bad) (bad) leave shrb enter sub dec rcrb sub lock mov xchg push mov and sub sub xchg or or fcmovb cmpsb repnz fs sti mov sar into xchg sti mov jl push adc sub xor fbld mov and sahf pop popf (bad) cmp and lds cld lahf pop cli fs ljmp fs mov dec push or mov jno inc or fist pop aam shlb popa add sub jmp pop mov mov xor jmp xchg inc add es pop leave ja mov adc enter fsubrs icebp dec inc cmp in ljmp dec jae incb repnz xlat stos push add popa pop mov sub gs mov dec cmpsl dec scas cltd enter out lret add and clc lret jle movsb mov jl lods add push pop data16 cmp ret dec and mov pop das or notl mov xchg lret js lds jecxz cmp scas add out or xor ja adc jbe and lret ja push pop (bad) adc pop fisttp and sub sub pusha mov mov cmp pushf jo aad ljmp push arpl xor cmp ret call (bad) int popf rcrb scas fstps mov scas cltd cmp xchg sub mov xor fwait les add mov xlat popa nop aas in imulb out sub xchg fisub test icebp and xchg mov cmp sarl stos mov dec in cmpsl movsb inc dec add mov adc out and mov mov pop test icebp out into in out test out repz call insb mov int loope ds push movsb test xchg mov jl add sub push into imul push ljmp fildll mov add popa pop inc and sbb gs mov push jbe jp dec (bad) sti and add bound (bad) cmp pop jmp insl xor rolb popf mov push pop sub fwait mov or mov cmp inc and xchg pop sbb je mov dec dec dec mov out rcll scas push addr16 (bad) test push (bad) or gs test xchg pop out mov shll ret pop fdiv clc sar add mov ja dec pop scas mov dec stc dec xlat mov xor dec cld int out sahf inc dec fnop cs mov adc rolb fcmovnb dec push scas cmc mov out arpl aas push or (bad) out mov std sub push sub mov pop cli or out es fs push pop (bad) push mov lret rorb test and jmp test std inc adcb pop mov mov adc inc push out call enter in iret mov mov mov dec cltd dec aas jb dec adc int3 sbb stos cmp cmpsb xchg scas mov xchg mov daa mov xlat mov dec hlt sub pop sub and xor xlat (bad) jmp out xchg in xchg sbb mov adc (bad) nop lahf mov stc dec imul jnp xor add mov mov sbb lcall mov into insb push call in mov (bad) mov sbb sub lret test pop mov mov dec cld adc fdivrs pop cmp inc cmp mov loopne jne negb cmpsb les fidiv pop sub and lret stos out inc into or pop pop cmp push lea fnstenv push iret lahf (bad) push and mov add int3 jp leave and xchg nop xor cmpsl mov pop adc fstpl das (bad) shl or pop cltd dec push fisubrl ret sarb dec shrl lahf leave icebp pop xor (bad) outsl mov xchg xor push fidivl jmp sub pop jmp cli addr16 mov inc jnp jmp aaa repnz inc aam bound ret pop out mov cmp and sbb hlt outsb daa fstl (bad) (bad) mov lret insl add push mov cmp (bad) in ret fcmove fs mov lea xchg sarl mov cmpsl push fdivr bound shll mov sbb iret mov xchg mov sub lret outsl movsl div jmp repnz jbe sub jp scas mov (bad) or bound dec smsw into stos repz das js sahf cmpsl pop push fcompl popf mov sub sub xchg enter out sti mov clc in popf fstl hlt (bad) jno imul shlb bound and adc cwtl mov cmc das mov stos cmc cltd lods in idivl cwtl adc lock mov js xchg aas mov pop pop mov les sub mov mov adc lds nop (bad) and lahf jbe jmp insb sub dec add std sarl sub push enter cltd xchg push and add (bad) lods xlat icebp xor sub loop rcll loop je (bad) fadds mov pop push dec std insb shr cli mov adc cmp lret scas rcrb sub sub pusha rorl pop adc out mov mov xor cmpsl insb push or push push lret cwtl or mov rorb pop leave jecxz pop clc rorl mov into stos xor cwtl ret sbb inc lods loopne ret mov imul sub and mov aam pop js fdiv xchg cmp push jmp mov pop dec mov movsl (bad) stos xor jmp jmp sbb cwtl pop in les sub sub imul pusha xorl jle addr16 fbld es xchg jmp lretw pop mov mov push cmp jb ficompl jno dec fstl mov or mov xor mov imull in leave push stos cmp mov sub insl (bad) jae and bound (bad) dec sahf call daa out jno fs pop aam das mov push shlb mov mov insl mov hlt das mov lock stos fs into jecxz or push cltd mov pop ret or sub jo xchg out fldenv pop je,pn sti lret cld and pop or int jae cltd dec mov and mov adc bound sub cmc jp dec daa pop adc popf out das add sub or lods jp pop pop xor mov inc jle or das (bad) jge scas jno mov jge ljmp jns data16 or (bad) roll pushf pop pop sub out mov leave out test and mov jmp lea aaa das rcl push xlat mov or pop lods cmpsl fisubr lahf pop icebp addr16 imul enter xchg aas scas lea stc andb and sub or mov out xor stos push lret pop dec mov je pop fcoml mov (bad) ljmp dec and cld and dec call push cmpsb sub (bad) enter lret jl lds xor inc push leave sub mov in xor xor mov call or jo mov (bad) xor lcall sub int3 out int3 xchg add dec (bad) cmc gs daa push push lds adc test (bad) jno out add movsb scas lods mov cwtl jne xchg jmp (bad) cltd idivb mov (bad) and push ret test mulb push mov aaa pop mov pop rcll and and ret mov hlt adcl mov in ret icebp (bad) sub add imul lcall dec in dec jno mov dec popf or cmpsl imul and dec add ds repz mov and sbb jecxz jle sar pusha pop xor or fimull and and cli jbe (bad) (bad) fcoml jle mov call jns push shll jmp adc repz jp pop mov or sub aad jnp call rolb lret ret push in aaa add xchg mov dec mov sub jle push lret (bad) lret sbb aad shrb adc int3 leave repz mov subb and mov add es lods inc sar xor and pop addr16 or mov fs icebp or ss add or dec push les or inc mov add fdivs and mov push (bad) or fisttpl cmp lea (bad) loop (bad) das jns sub xchg jg lret and sub aas mov lock aam outsb hlt push (bad) (bad) (bad) scas push neg sbb shrb lods clc test ret call into mov add inc and pop les clc in in jmp ficom sbb cltd cmp movsb lock mov push push sub sub stc int3 mov scas or cmp mov movsl jo push lahf jle sarb push out sub stos cltd sub clc sub xchg or xchg and jno adc scas lods xor rcl adc scas repnz jmp stc ljmp movsbl xor mov aam repz add lret xchg push dec or imul push sub gs aad stos xor (bad) xor fbstp push enter sub add das mov aam imul out mov push gs daa cwtl into jg,pn cwtl bound mov pop jle out fs (bad) push xor fld mov sub lods cltd pop push cwtl call add or xchg enter (bad) stos pushf cmpsl out (bad) mov mov dec daa fmulp and and xchg stc iret leave rorl sub push dec outsl pop loopne adc or dec cmp and add cs push mov mov jmp push xchg and int loopne jno sbb push xor adc loope iret das mov mov and adc stc and lcall push les mov (bad) mov iret jb mov pop adc sub mov cmpsb jg out sbb clc rorl mov mov outsb jb iret adc xchg mov mull dec pop or push call or ljmp xchg jge add xchg mov xchg adc adc gs adc mov xchg push cmovbe gs lds and mov dec pop jo sbb ljmp aas pop cmp fnsave icebp dec sub add inc mov jl aaa int3 orl pop or pop daa aam push ja dec nop xchg not or push test push cwtl es subl sbb xchg cmpsl add sub pop add repz cmpsb loopne mov repnz in pop dec mov pop inc (bad) mov push out or adc add sbb mov add test jbe sub push pop xchg imul push add fwait lret or into pop add mov push loopne rcll pop xor dec out leave loope pop notb or and pop and movsb push push fistp xchg adc outsb inc ljmp pop fs mov dec and pusha fiadd or ja or mov xor mov pop xlat cmpsl ror fs mov test adc jmp call adc pushl push push je add mov mov popa fbstp cmp mov pop push pop pop xor mov jb inc lods pop movsb cmp sub pop fisubl dec pop pop and mov popl nop fwait mov rorb sub or pop jb shrb mov ja enter push push jmp (bad) das daa ja add cmc test add enter cmp add push push push pop loopne cs call repz jmp cmp imul les sbb or adc in jecxz repz aad pop dec ret dec in sahf dec inc lods add inc sti outsl dec pusha xlat dec sbb in add sub add rclb loop xchg call mov jo addb ds (bad) sub outsb repz (bad) lods mov enter ljmp nop lahf mov es xchg inc push and loop pop (bad) mov jl push jae adc int3 add (bad) or dec cmc in imul mov leave xor stos push mov jle add movsl and in inc or adc clc aas mov out out push lret fisub sub getsec mov push and clc cs roll sahf add mov cli pushf jb mov test add inc out pop mov imul add movsl adc xor add inc sub xchg cli fdivl and pop cmp inc dec adc repnz jo or cmp sub push sub mov mov dec mov jmp lret pop dec (bad) sub pop sub push inc fistp ja inc cmp fcomps jne leave mov addb sub and jmp sub xlat add loop cmp pop push pop mov sub dec sub int (bad) dec movsb xorl sub movsl push adc mov pop push jbe imul in stos cmpsb pop dec mov fs loop test inc push cli sub hlt f2xm1 ds pop sti inc imul inc push divl daa fwait iret dec mov xor rcr fidivl add arpl adc sbb sub mov bound (bad) jne in jle push pop sti popf movsb (bad) add push pop lods cmovnp push scas cwtl and xor gs jle out adc dec lret call pop out push popf cmc adc inc pop push mov pop dec idivb dec pop rorb xchg in js push add or loop icebp arpl into add mov add out (bad) mov inc (bad) out mov ret adc repnz decb add fcoml hlt cmc inc or adc dec imulb fisttpll jmp push and push sub mov enter xor ljmp stc out clc jl jmp icebp mov inc cli ljmp lods sub push jno mov movl jge pop sub test icebp pop sub sub add lock inc or fildll jbe fsubrl dec stos (bad) ss xor fldl adc jmp shrb jecxz add ja fimull in and arpl xchg cmc mov pop or (bad) xchg pop mov mov aas xchg jp or (bad) sub sti in mov lcall lahf stos dec xor out and pop xor in cmp sbb or dec pushf in fildll adc out sbb sub dec fsubrs xchg dec mov pop lock sbb gs adc push ret pop sbb mov push jl mov pop mov ja cs ljmp (bad) xlat test leave sbb cmp mov inc sub xor inc mov and mov aas popa bound cs push sub xorb imul push or xchg jae daa xlat out xchg lds add lret jne pop mov mov inc jmp rol jp mov out movsb xchg push jg lds pushf mov pop lea in mov sub in subb in push push push mov adc sbb lcall or pushf repz iret test out dec orb fldenv mov decb scas dec lret or (bad) je daa out mov mov and add or insb popl pop sahf jmp aas pop xor fs lods jecxz out jge ljmp mov mov add mov iret call cld imul mov jne push push adc mov mov rcrl push add add xor fbld pop gs (bad) cmpsb or iret sarl inc stos mov push mov xchg inc add ds and adc ljmp add pop mov inc sub add int3 in xor leave js xorl dec out lret jle movsl and rcl scas mov push and dec sti icebp push fcomi out push mov mov xchg mov dec jns jno mov fisubl inc xlat mov dec and or mov dec addb dec repz and sti xchg movsl icebp inc pop xor dec cmp push xchg insb (bad) ljmp pop vmovddup mov sarb out out icebp jnp mov rorl iret pop mov jbe adc leave mov adc sbb dec sub cmp add bound jo ret jo or push hlt shll mov jle or mulb jp xchg cmpsl mov add call adc pop fnsave jge add das mov ret push xchg mov add mov fisubrl jl xor xor lods jne push and (bad) mov xor test leave scas loop lcall pop outsl inc and mov xchg cmp pop sub (bad) fstp inc popf jno imul clc fstp sub mov fisttpl mov inc idivb scas sub stc xor sub push mov (bad) imul movsb mov push icebp pop (bad) or push add mov add lret xor or mov mov sub mov repnz xchg pusha movsl cli lods mov dec adc ljmp jno aad test pop fs mov popa mov jle pop ja xchg aas fidivrl sub bound roll inc push jmp clc push pop (bad) lods cmp fidivl jne aas sub push jne pop jmp xchg aam and pop mov mov mov fmuls mov xor lahf (bad) and (bad) and xor fldt mov pop icebp imul xlat and cs repnz das lret sti push push repz clc pop pop and pop jmp lea sbb scas or jmp sub movl cmc stos repz or daa add mov pop into (bad) xor (bad) int3 fsubrl add lcall push lret icebp xchg call shr fs mov mov xor mov (bad) mov xchg repz repz cmp xchg sub out out mov fist (bad) test repz lahf ss add xchg push push insb sub aaa or pop and xor mov or neg xor mov negl inc or test dec cli popf sahf mov xor sub sub sarb mov rcrl mov stc imul mov jg stos push divl cwtl sbb scas xor push lea es test pushf scas out add mov fstpl jge fsubrp pop push xor add leave dec test sub popf fistp or jmp xchg dec mov (bad) mov ljmp call fist xor mov push mov mov jmp inc inc movsl pop mov pop pop xchg jmp mov (bad) and arpl test outsl and cltd mov les cld mov mov jnp add fidivl mov sub push add scas cmp negb pop adc int imul rclb into push das jecxz lds sub in mov movsl push out cwtl dec loop lret mov leave jle and jae (bad) icebp xchg pusha xor add (bad) mov aaa mov test fcom sbb add jmp inc loop xlat xchg mov mov jp xchg pushw add mov and inc movsl push jnp jmp (bad) jno rorl sub and es dec pop int leave popa jg fdivl repnz xor scas jbe mov lret jns out and xchg ret mov loope add cwtl jecxz xchg fstl and insl mov push sbb push jns test or test xchg repz std jmp pop fadd sbb stos imul mov mov insb lcall scas insb xchg mov lds mov push add popa mov mov or push sub hlt or mov mov aam pop je dec (bad) fbld rcrl fcoms xor loope,pt ljmp or mov pusha pop clc push test or lods xchg adc cltd ret int jecxz,pt cs fsubrl sub jne movsl mov or mov dec add sarb push xor faddl bts std shrl sub jmp xchg mov push xchg pop inc xor xchg and add sbb mov cmc lret mov push (bad) cli xchg jl (bad) sub mov xchg clc ds push test xlat cli cwtl outsb jmp or mov jne loop push dec fisttpll roll dec lret sbb inc dec or shl daa fisub sbb testl imulb mov or repnz test mov les mov mov fwait pusha jnp mov and ds jns jno stos or aam sub xor xchg fwait repnz mov push push and xchg jmp loop push cmp ret mov fbstp or sub enter or mov in xor and mov push sub pop mov and add mov jb jp into xor add xlat ret ljmp push call xchg jmp mov stc jno es movsl mov inc add push outsb jge cmovne test rcll pusha out xlat in mov loop jge loope outsl mov sub out pop cld (bad) sub notb lock push out jnp and aas push lcall movsb mov jae or mov add daa fbstp pop pop sbb inc mov daa jne jg pop mov inc sub lahf jl push icebp hlt addb std test and mov dec xchg pop out mov dec mov sub ret sub jecxz add pop lret mov mov or and in (bad) pop (bad) jecxz and jecxz xor ficom fild imul pushl mov insb lea xor sbb ret movsl aam xchg ljmp das sbb (bad) sub mov pop call xor (bad) data16 and or fcom leave dec inc mov push xor jmp dec add in pushf and clc jmp clc cmc fdiv out pushf mov loopne xchg out mov jge dec imul push lock pop data16 rcll out decl cmp in int3 mov lods nop iret sub add imul pop add add add and fsubr sub mov or push inc stos cmp sbb cltd daa (bad) push jno test push pop pushf pop and push les jmp and hlt movsb push iret in loope repnz mov in cltd leave adc adc movsb sarb (bad) jne mov cmpsl xor xor add mov sub jnp xor pusha (bad) mov aaa lods imul (bad) ljmp push inc sub bound leave lock addr16 jo or sub shrb adc xchg shrb jg push pop out jge pop mov push jmp cltd adc add retw sbb lcall push pop adc jmp jne lret dec lret out movsl dec sub in es (bad) scas je jne mov push mov sub mov sti pop out js cwtl mov or sarb xor jge das mov ds mov jl push stc push test popf xor ret cmp add das idivb lret sub movsb mov sbb or lret xor in daa cwtl (bad) push lcall mov ret out cmp jo test lret es pop push push mov orl imul (bad) leave imul push xlat jb (bad) xor pop xchg mov dec add jle imul xchg xor mov xchg push insb ds daa mov lcall cmp (bad) mov orl stos cld mov bnd and cld push xchg cmp hlt pop inc pushl pop jmp stc ficom adc ja or int3 sbb mov insb dec add lcall stos lret sbb dec or adc pop mov notl es adc jecxz adc fnstenv xchg pop mov jge jp xor ficoml push xchg xor cmp mov mov jmp mov sub add sahf push stos addr16 xor mov inc rcll out sub or (bad) leave sub pop mov mov jge les xor in lcall fstl test (bad) clc dec lods dec aad dec mov mulb mov cmpsb clc jo sub mov sub in aas call test mov push xor mov push jbe idiv sub leave test sub bound xor mov sub es jns cmpsb jecxz ficom or shrl mov negl (bad) dec adc movaps shll xchg repz mov stc icebp imul jge dec clc data16 add bound fnstenv sub dec jno subb mov sbb jae ficom dec pop and rcll adc or sub sub inc orb shr repz lret jge cmc lahf inc into sub and in mov rorl lret and popf incb daa pushf mov mov xchg dec out mov sub scas hlt lock popf jg in mov xor pop ja lret xchg inc pop ds or or sbb std data16 idivb out (bad) (bad) mov xlat xor sub outsl push jno sub xor fiaddl js xchg notl je stos xor mov add outsl movsl fild and sub or inc pop scas add pop testb add sub fcmovnbe das mov cli out fcmovne aad mov (bad) fisubl insb and inc push fstpl aad in stos dec mov sub ljmp push jo into push pop iret push jle pop jns add add idivl pusha sub lock idivl mov aad clc mov push pushf sahf inc andb add sub aas mov sbb ret xchg dec mov adc xchg jb (bad) push push pop xchg out ljmp (bad) jb push and pusha insb pop add add movsl push jg inc (bad) add sub dec inc jmp loop xchg xor jb push sbb sbb xchg lods push (bad) sub dec xor and testb cwtl test lahf jbe pop repz test sti scas into js mov daa fsubs or push clc enter cmp lret les aaa jb out push xchg adc clc scas push into push sub lret and ret dec or je pushf mov sbb pop rcrb test (bad) cld popf hlt cltd lock and or xlat and je stos pushf mov push movsb stos lret xchg aas push or fldl pop dec pop adc dec repz dec mov mov cli mov (bad) and loopne jle or pop rorl adc push mov je in pop sbb lret mov in repnz or cmp or test push lret xchg mov cmc gs lahf out cmp mov insl aas jle or sub cmp int3 and xchg fsubs or mov frndint divl jecxz pop ljmp jbe pop fiadd mov movsl jns imul xor sbb mov mov fsubrs daa and adc inc and idiv repnz or jg sbb icebp loop out mov imull add mov sarl outsb mov jge sub mov data16 mov mov xchg sub xor int3 out xchg pop (bad) and repnz mov les ret pop mov lret xlat dec jbe je pop sbb aad or fcomi mov mov inc into out test or dec jo jnp xor xor xor pop negl sub xor jno add lods add sub ljmp sbb mov and adc and jne pop pop mov pop or inc pushf cmp ret pop cmp stc jle add mov mov pop sti fcoml sub (bad) xlat in and shl jmp loopne jbe imul nop int3 adc shll inc divl add xor (bad) arpl xchg cld (bad) leave jmp mov dec cwtl push xor fsubrl sbb sub add sub das mov shlb arpl dec rorl xor push or scas xor cmpsb add ja das mov fs repz je jmp mov test xchg xor cli gs mov loop cli add and (bad) push lret xor loope jmp or pop in addr16 test jg mov (bad) xchg (bad) shll jbe das push xchg add dec adc (bad) fnstcw rcr hlt aas lods clc enter adc stos adc sbb and mov dec mov adc sub hlt cmp mov cs sbb cmp lods or jns push dec mov mov pop lret ret in and sub bound push fsubl add and xor cmpsb (bad) jne mov in leave jbe sbb mov add repz sar mov mov dec push mov push cwtl mov scas fsubrs imulb inc cli das or into leave xchg shr mov xchg iret cmp fstl push or jmp (bad) sub ret loop cmc dec insb jb push (bad) repnz mov aaa add orl fs mov add orl lock imul lods xor cltd (bad) dec pop mov cmp into aad inc xchg leave xchg pop mov sbbl loope imulb xor (bad) jae cmp mulb clc int3 movsl loop adc or ret dec jno pop jmp call andl push (bad) fist sub mul and mov add ret imul or lahf popa hlt call jmp lds xor repz cmp push mov dec fnsave sbb push pop les pop mov out mov xor movsl mov scas adc test pop ds mov (bad) xlat icebp adcl mov xchg mov sbb in jmp mov cmc in push dec repnz sbb dec imul jb pop mov add (bad) pop movsb cmp jg subl cmp outsb inc mov pop xchg in xchg sub add lret idivl enter cld fimull pop mov cmc cwtl out out xchg pop sarl xlat push lret dec rep je scas test stos pop outsl mov dec or idiv xchg outsl scas push repz outsb popf out pop (bad) scas je stos loope outsb gs adc arpl mov scas mov add add sub push add out sbb mov clc out xchg xchg and and add out dec pop mov (bad) scas clc cmpsl pop mov (bad) inc mov out lock add daa loop mov or lcall sarl mov add repnz or hlt dec add sarl push fimul and shr jl (bad) stos sub (bad) mov mov inc shrl scas push frstor fisttpll xor sbb aas aaa sub movsl jmp cs je lock jne cltd fldenv scas dec shll and cld sub cli jb out jg and movsl pusha add dec cs and adc pop xor push (bad) cmc loop stc mov repz mov add fbld adc adc fildl data16 pop mov cmp push xchg xor jb mov fimul into add ss push movsb pop idiv sub lock dec jecxz dec cltd dec inc cmp adc jmp bound jmp cld xchg jmp and in cs pop and les fdivrs dec stc out cmp fldenv lea outsl add jmp cld cmp pop movsl xor cld mulb out xor jmp and adc repz repz xchg xor jbe das fstpl (bad) xor sub sar movsl negl inc lcall fnsave nop leave lret movsl call mov mov andl push out xchg and add jmp ja add cmp lods add mov cmpsl add xchg and lods xchg xlat sahf xor frstor stos int push mov xchg add scas popf xchg sub decl inc repnz mulb mov pop ds xchg scas popf sub xor push mov out sbb pop push sahf sub das mov pop add pop xchg icebp (bad) or rcrl jno test movsl aam das pop mov and in lods jle xchg iret sub jmp jbe mov stos or ret sub add jge iret xor call or cmc in adc bound stos or inc mov cmp mov xor jecxz and mov mov mov inc shlb iret or addr16 fcmovbe (bad) in xor push sub sub inc cmp push mov int3 scas lods insb dec (bad) cld (bad) mov sub cwtl jnp mov ret ja sub mov into fadds lock call cmp xor sbb jns in mov sub cs into repnz pop adc inc rol data16 jns test cmp scas (bad) sub sub sbb fstpl push daa and test pusha cmpsb and aad or lods push xchg pop inc fnstcw pop negb fisubl (bad) mov jecxz (bad) in mov ljmp push fisttp pop pop (bad) dec out push mov sub orb sub mov dec fld inc mov into loope mov jg lret mov jge shrb jp std out xchg out dec (bad) in pop mov cmp dec cmpsb test out sub add cmp lock pop popf adc dec add sti bound idivl fisubrl push mov mov adc dec push inc jno dec (bad) xchg leave lea and sub cmp xchg mov jge ds add pop dec adc mov (bad) imul or jmp dec push test sub stc xor fdivrs push sbb dec out (bad) iret pop fmull xchg lds jae int jecxz icebp mov xchg xchg add or out sub mov mov inc push add sub mov xor xchg (bad) mov adc iret leave ret mov dec fdivr and rcll sahf lock and mov shrl sti lahf (bad) lock or sub push add dec mov das fiadd mov push sbb negb sub movl inc imull xor daa add mov ret sti cs rorb gs lret movsb loope adc aad les fldcw loop aas popf push cmp mov aas dec sbb je xchg stc jbe aaa and (bad) clc (bad) outsb out dec sub mov cli jg mov bound jmp jge lahf or or fstl ret jmp adc fucomi jb lret jl mov into fnstenv mov xor dec mov mov jbe sub cld xor jecxz and and iret mov roll and push inc mov add (bad) jmp lret mov (bad) mov add sub dec pop and fimul fistl (bad) stc dec lret jmp push xchg add repz jbe sub call imul push ret (bad) aas lods icebp mov pop pop pop adc lret sub mov or sub sub adc out test adc les test mov inc jecxz pop sbb (bad) or and jns mov je in mov mov (bad) dec xchg movsl mov (bad) pop sbb add mov xlat xchg sub dec cmpsl je lret or popf (bad) push xor (bad) (bad) xchg jecxz pop cmp dec xor jmp lock dec sub in ret pop inc in or fdiv pushf fist in mov sub pop iret fwait adc out lret jns (bad) or fdivp loope (bad) pushf das sub repnz cltd dec sub or rcrl and mov divl inc aaa lods dec cltd fs jge mov mov dec cmp lret sbb pop ljmp arpl repnz sbb cmp jno,pn and sub les cmp inc adc lret ljmp iret xchg fs (bad) sub push push xor lods cmp sub mov inc leave jl xchg jmp xchg test (bad) (bad) dec mov push and dec sub sub mov or fnop pop or mov push pop daa cmp in scas cmpsl ljmp xor or rcrb (bad) enter or mov cmpsb out xchg sub dec imul mov lret decb mov popf jge insb insb movsb lahf jo mov push pop cld notb add movsb (bad) ljmp pop nop pop pop and out (bad) sub imul sub lods scas push loope mov loope jbe add xor inc pop in fldenv pop inc mov push popa jmp add mov out or lret aam (bad) leave stc mov test ljmp pop add into xchg pop test (bad) cwtl or inc or gs adc add out mov push out lods imul dec cmp push and fidivl roll lods ret dec and pop pop rep lret mov imul lret pushf push pop push repz iret sub fldl testl pop lcall sti xor sub shrl or push mov xor popf jne and add cmp (bad) leave ja (bad) xchg or push jns testl xor and (bad) je pop add inc cmp test cmp dec pushf mov mov mov sti sbb roll mov mov idivb xchg xchg out pop inc aam lret add je ljmp repz xlat ja adc bnd aam mov pop fsubr sub cmp mov je and xchg sbb push aaa clc cmp negl jmp pop ja js xor mov cmpsl mov (bad) iret mov adc outsb rcll data16 push mull and (bad) jb mov push cs mov mov pop mov insl lds sub xchg mov out mov push sbb jl xlat fsubr xor and sub push movsl and sub ljmp xchg movsb push push cmp and imul mov daa sub adc adc outsl stc and cmp out pop pop icebp adc xorb shrb xor aad stos dec mov xlat icebp pop imul xor xor xor push icebp mov pop out daa lret xchg dec sub in jns mov test ja out xchg and dec out pop in push pop lods jmp (bad) xor pop sub xchg sar popa test or sub ljmp mov jle inc sub mov jl jle jmp fmuls loope jns dec adcl out popf (bad) idivb mov jmp pop sbb ds mov sbb dec mov repz xchg mov imul mov mov repz data16 pop pop or push fistpl jecxz pop cld xchg mov pop out mov or stos add dec xchg int3 rdtsc das (bad) mov or push add sub xchg dec push je lea cmp (bad) out and dec mov imul cmp pushf nop inc or or popa ja mov or adc inc fistpl shrl sub das test mov inc mov repnz mov sbb out adc inc loop mov icebp std test ja jne arpl in xor push hlt lock push and mov in sar lods xchg xchg das int3 aam ret stos popf sbb pop add xor imul mov test pop out lea or int icebp insb daa ret icebp push xchg ficom popf sub insl ret lods notl mov imul pop xchg mov and ds cmpsl shl das jo cwtl pop cltd sbb movsb add leave ds pop or pop add loope insb sub das in push test sbb push dec daa add xchg fistp mov add imul adc (bad) and ffree aam add jl lret or jbe daa xlat in or cmp leave lods jle push dec cmp hlt stos lods daa movsl adc mov leave add test adc int3 fnstsw cltd jnp aaa jmp jmp fsubrl jno adc xor jmp cld mov jl push in and and lods mov idivl xor cld xor je jl out notb sub mov sub xlat pop dec pop rolb push das scas divb lods adc call mov pop lret rorl out jp (bad) daa loope ja or mov pop cmpsl test xor (bad) jne mov notb ja in enter (bad) lahf dec or into clc dec xchg xchg dec pop xlat aam stos in das ror das cmp notw ss and test pop sub inc imulb mov and add jge mov decb or xchg mov aaa pop aad push xor jb and push and lea or jno fildl sbb mov das sub sbb sub imul or inc sub rcrl imul pop ret fildll or les jmp or test clc pushf xor sti xor dec cwtl jmp fwait das sbb aas jecxz das xor scas movsb cli je or sub into out repnz jp adc push pop or out pop fsubp pop iret outsl lret mov jge or out je clc mov or leave imull mov daa les jo xchg aam push pop pop jmp add mov pop icebp imul and jmp xchg mov sub push jno add xor (bad) aaa mov sub xor ja pop jl iret xchg jmp jecxz fs xor lock out cwtl das or cld pop fs std inc xchg xchg fs scas or xor fsubp pop jns jmp in adc mov add incb loop (bad) adc mov sbb sub sub and cli popf (bad) test mov cmp loopne out mov mov xchg clc mov rorb or mov out or push cwtl (bad) lahf adc mov mov push sbb je mov (bad) shrl int icebp into ds mov les out mov xchg mov jns daa aad rorl nop loope cmp dec outsb sub popf push sub (bad) xor mov pop lods (bad) pop ret jge fdivp cmp (bad) mov sbb movsl mov dec mov (bad) negl xor enter cli outsl divb mov mov pop push jns add scas cwtl out dec pop mov jmp jp sub cmp and or xor pop out xor shrl jno mov shll sarb lret pop adc and adc mov cs ret add push lahf (bad) xor pop push ds sahf pop adc fadd ljmp or adc clc xor jle movsb push push cld fsubl sub sub mov or push push lds adc mov insb insl pop lret mov add or in xchg ret divb and rorl fisubrl add mov cmc pusha sahf loop lods inc xchg add sub cwtl fs xchg pop rclb push sub repnz or (bad) idivl jb cmp jae repnz lret or or clc es repnz sub out out mov mov or push (bad) sbb fisttp daa add sti or scas repz and testb mov mov inc mov xchg adc pop or sub and leave ja std mov stc push xchg adc or xor bound cs jne mov xlat int3 lret add add sbb daa xor cltd mov sahf push clc xchg out mov xchg mov cs jbe fist lret and dec push add xchg mov ss jge es pop fs mov cltd insl cmp adc loop enter lahf dec imulb sub push xchg and dec repz fisttpll jp mov int3 stos push xchg test aam mov mov xchg shlb mov cmpb repz and pop mov xchg fstl pop fisubl movzwl mov dec rcl or inc push ds sub cmpsb mov nop xchg push adc inc (bad) dec cltd dec xchg cmpsb lret clc jle sub sub xchg int ljmp dec mov inc xor fisttp sarl test mov push cld gs mov inc cmp lea mov fld bound ret mov or repnz je loopne xor aaa aas mov mov xchg xchg dec sub or ss aad (bad) rclb or xor and cwtl data16 mov scas popf aaa lods pop daa sti nop and push repnz dec imul xor bound jne jae jns mov test call xor sub test shrl shr pop out inc xor out (bad) leave sub cwtl int out imul adc bound cld dec jno push sbb sub mov xor mov and (bad) cmp add lock int jnp repnz push test iret mov shrl sub pop icebp lea fs rcrl xchg cmp sub (bad) push xchg nop or jl cltd inc mov enter mov sub cmc mov push outsl cmp jg in xchg data16 sahf xor cmc mov jp jne int3 ljmp pop rcll int3 out jmp sub aas int3 flds popf pop dec popf in inc popf out pop lret xor cmp bound ljmp cs lret or cmp add mov xchg out add jmp loop test xchg call cmp icebp cmp lds (bad) popf xor ljmp sbb iret adc fdivr aas lock mov pop scas xor or dec inc add dec sub mov (bad) jne arpl or cmpsb or pop sbb aad dec sysexit call fs add bound jbe loop or pop jmp outsb call stos or inc sub inc out aad leave ljmp test pushl add sbb icebp pushf xchg es sub mov (bad) sbb mov (bad) call stc dec mov mov mov cltd inc pop pop cmp dec fadds pop adc (bad) mov mov lret loop xchg popa enter xor sub pushf ja push rol xchg (bad) fs cmpsl push or (bad) scas (bad) and ljmp and xor sub stos or mov jg xor sbb lods push cmc inc jl jl nop sub sub shrb or xchg fdivrp cmp mov jo pop rolb ret fsubs cli jmp lret aaa pop cld dec or mov data16 xlat xchg and and iret add fistp in push iret and scas mov jle (bad) mov or and (bad) call sbb ret call hlt inc adcb stc movsl aam push inc ss ss lret push leave xor rcr inc idivl das sub (bad) test inc (bad) aam pop dec lret mov add out jb jmp shll fcoms inc and add pop test adc (bad) cli stc add pop ret scas mov int3 icebp out mov and mov rolb or xor push dec or mov jg jle adc or pushl decb ret cmp pop mov pop insl mov in lods pop and js insb pop mov int3 sub gs ljmp lahf push iret inc repnz and lret mov jae or dec nop shll pop mov sbb aaa push inc lret cmp sub sbb in and sub and jno repnz add push stos iret das fildl es mov data16 loope out clc jne (bad) xor lds lcall add adc xchg insl mov (bad) pop ljmp push cmpsl pop adc mov mov and cli pop into mov lahf sub xlat adc popf cmp cwtl gs dec jmp inc lret and mov daa test (bad) mov repnz popf pop xchg sub dec sbb int3 call add dec pop cmp mov hlt pop jecxz frstor repz lahf and ret aaa xchg lea pop ret mov ja sub cwtl push jmp jb dec into out imul xchg js dec ljmp inc scas inc imul ja sub adc ja xor and daa sub push lcall aam jge (bad) sti push jmp shl lahf or les ror mov sub sub xor pushf jge add jl test or or into mov dec cwtl popf (bad) mov insb mov lea jg mov mov ret roll sbb cmp mul imul sub dec add bound iret pop and (bad) xor add dec pop mov mov repz and jmp xor xchg test aam push jecxz and or imul push fisttp decl and lahf bound outsb push clc ss mov addr16 iret xor fwait jle mov pop or cmp adc push push inc mov adc add popf xchg fwait jg cmp cmp mov into imul mov in fstpt xor out xor js dec add shlb std cltd cmp das ljmp insb mov or nop mov pushl pop lret push push outsb mov add decl xchg or and pushf test inc inc add push xor pop adc outsb outsl mov or aam leave mov pop push call mov dec add mov cmp pop imul decb jnp or lret adc add adcb shlb or sar mov cmc scas jb out mov adc mov xor push mov mov sub pop leave cld in mov pop mov pop daa dec stos ja inc (bad) rolb pop ljmp sbb sbb xchg rolb and ret cmp mov pop mov incl inc fldcw or data16 mov bound lock sub or movsl divb leave je lret push inc mov nop mov mov sub sub and leave outsb stos xchg (bad) dec mov pop das xor push or adc icebp jmp jno dec icebp pop test sub icebp inc inc cmc xchg ret fidivr xor lock mov stc fsubs and clc xlat xor dec out inc add mov push insb push adc add jle or out xchg iret and or dec subb ss sub (bad) push adc repnz fsubs bound out fmul pop (bad) cs pop mov andb notl xchg shrb subb pop in test cmp je and test stos fldl cli mov cmp jmp scas ret andb sub insb cmp cmpsl pop sub add mov mulb and mov mov jg jecxz mov sti dec test ret icebp stc xchg and mov cli out dec test lds out repz jg ss cwtl mov xchg adc and dec les negl xor push pop cmp cli cmp les imul xchg mov add or stos (bad) mov pop lock fbstp mov dec (bad) in sub mov xchg (bad) and flds cwtl and das loop fnstenv rclb mov out mov stos mov xchg hlt dec out lahf push enter mov clc js and sbb lcall ja adc fstpl movsl dec leave sub mov xor and sbb mov dec sti popf test jmp into xchg cmp popa xor outsl adc mov hlt pop pop add mov push cmpsb lret add icebp cmp push mov je in mov push das cld xor shl inc (bad) or mov (bad) jns cld jl xor sub mov sti mov (bad) mov mov pusha daa rol scas les lahf ret hlt pop imul sub jmp xor (bad) xor in inc movsb out mov mov adc xchg (bad) je push mov daa data16 xchg xchg nop push jg movsb es jge gs dec mov adc adc aaa lcall pop mov insb lret loop nop sti dec lods sbb jno cmp pop pop ret push push mov rolb sub cmpsl add cmc flds inc mov jne or pop jmp out and (bad) loop fimul sub mov dec mov ds outsb lds and ret aaa out cmp sahf sub repz sub dec shl rorl pusha outsl mov inc scas sub stos sub daa push mov jp dec imul ret test push inc or push (bad) dec push cwtl add lret mov adc rclb ret sub clc mov outsb add jge clc inc mov xor (bad) in clc cs mov pop leave pushl shrl jge inc mov out mov ret cmp inc or mov cmp inc into sub negb rolb imul dec roll jle imul lret inc mov jne sub iret push mov inc fildll scas xor cli mov or xchg ror sub or movl mov stc inc mov idivb jbe and adc scas sub (bad) xor xor (bad) leave mov sub or mov cmp or or inc mov xor mov lret (bad) xor popf pop xor push xchg loop out mul dec mov mov inc out mov daa mov xor subl or ffree jge cmc movsl lds adc push test movsl jmp outsl xor mov xor lretw (bad) jae adc inc mov mov and sub pop call jmp ret sub dec and sub dec shlb (bad) mov dec adc repz out pop and sub add cmp addr16 add pop rorb mov stos mov mov cmp pop or divb sub inc jle push (bad) adc es js scas or das (bad) sub xchg xor lret daa and mov jmp mov aaa push mov lahf div addr16 and cltd lea adc jecxz pop mov sub push mov in fdivrs test xchg inc cmpsl movl mov and mov or xor in mov js sbb mov popa mov or mov and cmp and rorb sarl jno js rorb lea xor data16 pop out and mov jle (bad) dec icebp out sub sti mov sbb lea push loope insl inc fldenv mov jl popf fldl xor test sbb cmp adc push mov and aad out dec repnz xor popa pop or gs call jb xor cli lret lds js ret xchg mov dec adc test adc mov mov dec push pop push (bad) xor test scas gs or fidivl icebp dec js mov repz mov fdivl shrl jo mov call (bad) insb push xchg aad roll mov pop and inc mov pusha jns mov dec xor sqrtps mov add in inc cmp or pop xchg jae orl xlat mov mov mov push cwtl jae sbb lods je divb sbb bound cmp dec push imul add pop xor cld vsqrtps and pop mov mov outsb in pop andnps mov add pop inc pop pushl cs addr16 xchg mov dec rclb or mov sub mov pop fs je add jmp pop push aam push adc adc pop or pop out push and xchg (bad) push mov xor pop (bad) mov mov ljmp and jnp sysret sub pop pop addl add push mov mov add pop add push add or push jge int3 pop lock pop clc jecxz loopne xor lds ja xor jl or ret cmpsl push add test (bad) fldenv mov adc xor push ret stos push cwtl xor xchg cmp pop nop jge jmp fstps xchg in xor add sarl in ljmp idiv and das jmp into jns cmpsb mov rcrb xor lcall idivl shlb test xchg insl pop adc scas faddl xor test dec scas mov pop test fs ds and (bad) adc loop jbe push not mov jnp and ljmp push leave (bad) shll imul sub push cmp jmp mov mov loop hlt stos adc cwtl mov outsb xchg mov rorb ljmp stos sbb xchg sti out sub imul mov jl push ljmp adc xor xor outsb cmpsb mov ss bound inc and fisttp in sbb pop cmp push jo mov dec xchg pop sbb aad mov jmp push (bad) xchg js bound add pop ljmp sbb sub xchg mov jb scas mov icebp adc add test scas leave add inc lods lahf add sub cmp movsb pop sbb out xchg cltd subps xchg cwtl adc lahf cs jnp lea pop outsl test lret roll pop push push push mov or inc sbbb sbb sub dec mov dec sub ss sbb dec xor ss out jmp out js adc mul push pop aaa xor aad mov xor iret or ljmp push sbbb sub inc fiadd mov pop cltd cmp mov imul inc pushf cs mov or xchg adc push sbbb xchg inc jno jae or xor loopne rcrb cmp or mov jle add (bad) mov jge add movsl (bad) jl lahf enter lea cmp popa fcompl sub inc dec or sub ret mov cmc sbb xor hlt imul pop pop push xor inc jmp pushf enter pop add jg shl ret not push jle in xor adc pushf add out out or jg f2xm1 add lret add xor adc or xor call lods add jbe and loop or push xor xchg sub aas lahf mulb (bad) notl and cwtl jae adc negl rcll mov aam push out mov das jbe daa jg outsb ljmp lcall xor cmp cmp and push cmp jb mov pcmpgtb clc and mov lret xchg dec push inc ret sarl dec dec mov or mulb xchg out and dec test or sub push or add adc test inc lahf jne fildl das lods mov mov cmp and cwtl xor sub jge std jl lret sub mov push rorl imul mov and and mov inc xor jno sub addl (bad) mov push shll pop rol mov jo aad fcomps push fisub negb call add (bad) mov in test icebp arpl adc out mov or xlat pop mov iret jle xchg movsl jmp gs and add imul add push (bad) xchg loope fsubrs pop inc mov mov cmp and daa inc cmpl push xchg dec je or ljmp xor mov or movsb adc fnstcw incl jl xor out xor in jmp in push mov sti icebp das sbb xor sub sub out std out pop pop cli xor loop fisttp xchg daa fstps test add std jo push dec mov aas xchg mov xchg inc push or cmp clc idivb leave jbe (bad) out pop (bad) adc push pop dec sub and je sub push mov (bad) in (bad) (bad) push test les clc inc leave enter faddl icebp lods out mov sub and and and mov xor rcr ret add and xor xchg loope adc out imul in sbb loop mov repnz push fdivrs mov mov repz into add pop in test sub jb dec adc lret pop and in movsb dec jbe dec (bad) mov (bad) and aaa shl xor adc (bad) cmc cmp push pop and (bad) jmp mov cld insl (bad) jmp hlt (bad) test lret incb push mov add (bad) xor jnp mov sbb cmp mov add repz mov into jbe pop pushl aaa add popf cwtl jle add mov lret push inc xor dec cmp into jl gs push mov outsb jo adcb ljmp jle (bad) pop (bad) jae rcl daa mov sbb and sbb fcomp xchg pop pop loope sti sub jp ljmp (bad) xchg adc es popfw cmp in push cmp fdivs jmp aaa push push sti fmull or or out lods push out int cmp push mov pop out pushf and lcall lret (bad) xor add popf dec in popf lret dec aaa into sti (bad) imulb sub stc add mov sti mov das repz add jle sub sub out jge dec repz psrlq ljmp jmp inc xchg and dec shrb jge cwtl sub push cltd repnz push sar push cwtl mov lock popf clc mov repnz jecxz test sahf jbe (bad) movsb fistl inc xchg out cltd in cli push pop push fwait std xchg pop rorl out sub dec cld sub shrl rcll call ja testl sub xchg jge lock leave jne lret mov lea ds aas add enter sub xchg lds repz adc and pusha or xchg jne inc bnd push fsubr std (bad) jmp les pop push clc mov xchg dec mov into or inc xchg jb test into sub mov fscale and push adc ret nop or xchg push lods lret mov pop into mov fbstp loopne xor aaa lahf jnp add lods ljmp mov mov lods sub in xor das in fwait mov mov cld cmp mov fwait dec jecxz pop std (bad) add cmp add xchg out lret mov lret pop in movsb adc or decb dec les and mov rorb scas repnz shll push jge mov shrl push adc cwtl mov les out push push fisub and fcomps (bad) inc scas adc lea cwtl fidiv stos js (bad) call in sarb pushf pop sub dec ljmp cwtl ret pop imul inc test inc fnstenv rclb dec fisubr inc and dec pop or js mov sbb mov shll ret add push cli inc adc adc ljmp push cs divl xor sub sahf push jle mov add jmp jmp pushf pop dec rclb add and ds in sub mov cmove xchg out cmp mov into pop xor clc cmp outsl mov or lock mov jge out add lds pop call dec sub jmp mov jmp dec sub mov icebp jg jmp pop ds mov addr16 push push or sub xor dec repnz ret and xor or mov daa pop push (bad) lock loope jle syscall push sub mov cwtl push xor xchg rorl cmp xchg data16 cmp push sub sub std xchg fimul fidivrl push and fwait nop sub jg movsl pusha dec divb dec fistp les ret mov and inc dec sbb lahf popa cs imul push cld test jo dec lock or push sarl pop jle imul xchg ret inc and daa pop dec sub pop data16 dec mov imul xchg (bad) cmp add popa mov inc mov outsb mov or pop out fs loop push xlat and push mov ljmp push add xor sub push xchg push mov dec jb sub call mov xor aas loop test sbb cwtl ffreep xchg fbstp jno das and (bad) push inc and jle rcr gs mov xor dec scas js dec jecxz add push (bad) in add pop out cmp mov rorl mov xor fs pop out sub sub in pop jne sti movl (bad) sub xor bound pop push jb and popa pop and mov push mov fyl2x inc or sub pop (bad) mov jmp add adc sub divl and adc or mov mov scas mov pop rcr ljmp addl and push pop and mov fidivr movsl (bad) add bound xor and lds add jne decb mov sub mov xor add or or lret icebp xlat in or xor jno scas jo dec mov in add dec (bad) xor int cmp es mov shr int3 ja sbb repz pop in pop aad push xchg rcrl rcll pop sub es xchg imul push mov inc push (bad) jae stc mov shl imul mov jb testl mov ret push add push xchg stc and div test std xchg ja adcb add out add inc jecxz add xchg jmp fidivr xchg fbld cmp add or jns inc add fadds and pop sbb out pop mov add sarl mov das imul push push mov lea out sub xor daa or gs pop in popf mov in xor dec sti mov jno inc loop repnz xchg mov inc push cld add xchg xchg jbe js push repnz push lahf (bad) fsubs sub cmp push inc adc sub xor adc lea mov jge inc jg test mov pop pop mov add cmp mov insl jb imul add push pop pop push cmovle push pop push xorl imul jge roll sti das or sub cld cmp subl loop imul push test std addr16 dec outsb inc sbb ficompl add lret inc add sub mov adc ret sub push call add inc add push mov add push mov sub js addr16 push push pop ret pusha push fstpl outsl repnz add sahf jne (bad) movups imul dec pushf push inc bound push shl iret lods xchg xor sub sbb insl testl push pop popf sbb sbbl push or pop push ret (bad) mov stc sub in xchg inc das daa (bad) jno mov mov jp pushf push in mov jp push lcall mov icebp (bad) ds (bad) lahf lcall mov (bad) repz dec mov pop les push sbb jecxz mov (bad) mov xchg pop aam jmp sarb icebp out inc jp mov ret dec (bad) dec push xchg inc popa dec push scas xor ss test ja pushf aad mov sub dec mov jge mov ret out shlb sbb pop lcall arpl or clc andb and mov add adc pop add leave ret sbb mov pop or fnstcw test or xchg lods pop pop and sub jg rcrb daa loope out jg lock inc and xor aaa add pop bound rorl dec xchg dec fbld pop or mov and ds movsb fistp outsb out jg sbb adc sub mov or xchg daa pop lcall jno jo and dec add aam (bad) and dec cmp cmp and cmp aaa and cli lods pusha jb stc jecxz pop mov sti mov pop les shrl scas mov sub cs push xchg xchg mov fisub mov ja (bad) jns xchg les pop adc mov je jmp out mov mov pop xor push in and xchg xor nop sbb and fs fisubrl mov jno inc mov cmc adc js roll pop push push rcll jl lds shrb das or notl out sbb outsb inc sub fimul jmp pop adc rclb sub cld push dec test jecxz pop or add inc iret test scas mov repnz cmp xchg cmc mov jl sbb xchg push xchg in fldenv dec dec xor sub xor and das add test lods mov inc dec decl fs in fs mov clc push adc mov lock and pop mov and sub cmp shlb and ds leave jne sub cli lret (bad) fldl daa in dec adc dec push inc pop scas sub test mov rclb (bad) xor mov imul sbb mov or repnz mov aaa sub xchg jmp loope jb pop pop outsl jecxz das adc stos hlt add adc sarb jb fsubs xchg insb dec js cs pop xor cmc fnstcw movsb nop bound divb lret mov mov pop stc cli or (bad) dec das jmp pop dec xchg or fs les stos loop add add fldt mov or fstpl xor das mov addr16 push and dec add add dec jno and adc or mov mov cs leave and out cmpsl or xchg lahf cld test and (bad) dec push fistp inc dec cld jo in ljmp mov push and and mov mov and repnz dec pop inc jno sub xchg movsb stos movsl cmpsl and (bad) inc lea and inc ljmp mov sti xchg xor sub pushw mov sub pusha (bad) mov and push (bad) xor pop inc addr16 pop into das mov sub pop lcall adc fs movsl xchg mov adc mov pop xchg add data16 mov dec jle inc loope and rcrl mov movsb jo sbb and adc test pop or sbb movsl xchg add dec fsqrt bound repnz pop jb add and mov ja jge mov mov pop lret pop bound out gs out lcall push push push or sub inc repnz or inc ret pop sub jne fist jle jnp sbb push or mull xchg sub sbb out lret test (bad) imul and adcl fsubrs popf ja adc mov es adc adc outsb ljmp cmp leave ret addr16 test pop xchg mov in inc mov ljmp ljmp iret mov sbb lcall imul (bad) lock lock repz repnz mov popa scas pop daa mov jo lahf pop push and inc fiadd loop push sub popa and pop pop pushf mov mov out ljmp ret jbe in mov cs iret int imul xor scas mov mov fidivr mov out cltd or cld dec stc pop ret or cmp jmp jbe sub leave pop cld cmp fidivr repnz ljmp rcrl add push aad pop sub jmp dec test (bad) pop pop ret loopne cmp shrb rol mov cli push cmp xchg pop lret repz lock sub xlat fs daa mov aad ficompl les xor fistpll sahf test lahf push mov ret arpl stos fwait std cmp outsb (bad) adc lahf lret pop push xor hlt sub sbb pop stos (bad) pop inc sub loopne pop pop mov (bad) lahf jns cmpsl pop test into stos mov dec xor and sub scas cmp jp push jecxz add and push jle jmp roll pop pop out mov pop inc push andl jbe pop sub jne push (bad) fidivr dec (bad) lret mov jno and and push xor pop or ja pop and movsl sub nop push sbb lahf rcl mov test push cmp lret xchg pusha xor add add int3 shlb inc test fidivr dec stc (bad) cmp sub mov dec xchg lock add neg sub or sbb mov int3 mov mov stc and adc mov repnz cli sub mov (bad) pop jg aad mov cmp out out dec ja hlt lock (bad) xor cmp lahf test ja mov pop mov js xchg pop xchg or (bad) fcomps popa popa sub lock les mov jno (bad) jmp rorl es (bad) lea ss fmull orb sbb sbb outsb jmp lea adc ljmp xor xorb or lret je mov js mov outsl (bad) fstpl or sub sar and mov add rolb mov xor enter das inc cmpsb lds pmuludq ljmp inc xchg pop mov and adc pop pop mov mov xchg test out cli mov dec mov lret or (bad) (bad) (bad) cmp iret mov pop mov xor mov sub xlat push cmpsl add mov mov sub jg xor ss xor ja mov mov cmc dec dec mov loop xor mov (bad) sti mov dec xor ret leave xor push lods idiv dec mov fldl2e pop fadds jle das data16 (bad) sub (bad) pop jl std loop in cmpsl pop rol fcoms loop addr16 js mov cmp inc imul xor popf (bad) outsl bound and fidivl das pop movsb aas and adc cwtl lret (bad) jbe inc xor ret sbb sub mov xchg lret repz ret bound ljmp icebp sub movsb fs es test lret icebp cwtl push ljmp pushf xchg or insb shll scas xchg adcl ja stos nop jp and das xor pushl mov ret mov and xchg jnp addb jp pop inc cltd or pop jne clc loopne mov or insb and add jo cmp sub mov (bad) lock pushf or sub mov or ds fst pop fdivrs add rorl sub mov (bad) addr16 sub add ret (bad) xor sub adc pop mov shlb pusha sub xchg cmp shll adc out cmp xchg xchg inc mov mov ret pop mov out dec bound sti cmp (bad) jmp jne adc push add xor jne lods pushf leave mov mov mov xlat add push xchg lock mov gs cmc mov ds ljmp enter sub sti mov leave lcall cmp mov popf shl pushf mov in pop xchg movsb dec ret loopne cmp pop adc add ljmp outsb sbb xor outsb xchg adc sub and mov xorb and aam push loop jnp cmpsl (bad) mov movb or and mov xor iret pop xor cmp jo ret xchg insl ja mov mov stc bound sbb mov jecxz scas icebp sub in lret push pop ljmp adc mov sub cmp pop clc js negb pop aad in aas lods xchg adc (bad) out subw out fstpt imul sysexit mov sbb lcall dec lock xchg cli mov sub adc mov and inc data16 scas sub or mov cmpsl dec or ljmp push (bad) lods int pop xchg scas mov dec loop mov push icebp daa inc mov jns decb movsb call outsb aad cld jg jne push sbb sbb adc pop sub cli fldenv and ret icebp or aam push jmp mov cli test mov popa aam pop test les (bad) scas gs and inc mov loop lret xor imul inc and cmc stc or lods push mov mulb icebp test add sti mov cmp aad adc popa cmp dec dec xchg rorl jno push jmp mull (bad) mov push xchg ljmp test xor test push xchg mov sbb sbb mov lahf xchg cmp sbb pushf test sbb (bad) mov adc mov mov ret pop pop cmc sub dec (bad) fs stos test cltd cmp loopne pop daa cmp push adc out add int3 sub into cli lret fcompl jl and sub outsl pusha or fildl rolb xlat sahf adc cmp loopne repnz negb or imul mov pop cs or xor test xor jge mov stc sub push icebp loope lret repnz xchg int3 fldl2t test es sbb cmp ds int3 jmp pop fbstp outsl dec (bad) cmp xchg std add (bad) mov jns icebp dec xchg pop cmp rorl inc outsb (bad) and mov ret (bad) je jne pop jo push hlt jmp mov sub out sub sub mov je pop icebp das cmpsb xor lret test stos out pop out xor out jg pop sub inc les push mov outsl add ret or xor cmp push xor fsts iret push pop nop int3 cwtl mov mov fstl mov stc lods test aad push (bad) jns xor ss inc icebp repnz outsl ljmp test int3 ljmp and shr mov dec lock daa stc jle rcrl fs out int3 in xchg fisubr iret and inc and in mull lds ljmp addr16 test and pop or inc jno loopne or jae iret pop adc fyl2xp1 and test fs lds pop aas xor cwtl jae mov push cmp push sbb jl add jg les xor fsubrs aaa adc mov (bad) fbstp outsb push inc shlb xchg add repnz sub xor and leave daa jp mov jmp (bad) mov add mov and cmp rorl sub xor and mov dec mull dec scas les push cli std insl xchg push leave jmp out and pusha adc icebp sub or loop pop imul inc mov push sti lods das pop es stos or repz xchg pop pushl lock daa stos daa fcomip test dec call mov push mov cmp out stc xchg test ficomp pop add push jg leave fcom rorl sub jmp and dec call sub mov dec in xor rolb (bad) jmp nop sbb xchg adc hlt popa scas bound pop je jmp dec ret cmp aam adc lods pop movsb stos ror sub sub loope and sar mov fsubl dec push jge and add mov scas sub test dec and movsb sbb jge xlat jno leave sbb xor lods xor clc mov mov sub sbb and fnstcw inc or mov xlat and jmp xor popf mov (bad) mov mov adc xor in dec jg das adc pop xor fmuls ffreep dec sub movsl fisttp cmp mov pop sub xchg add (bad) sub in sub pop adc push xor lock fisubl xchg adc icebp (bad) test pop in push shlb fs cwtl iret or adc add cmc adc or xchg sub inc dec pop rorl out push divb into mov (bad) mov pop mov leave enter jle jmp hlt ret (bad) xchg leave ss mov fisttpll or fsubrs faddl push sbb aaa fcmove lret sub (bad) negl add mov and xor arpl sub mov imul xor pop out loope mov pop jno jmp jl mov enter dec shrb inc mov fmul pop or dec scas sub xchg data16 jle pop lret loop xlat lods mov into or xlat shrl dec or add push adc decb push lods xor imul mov lds add pop lock cli gs mov or sahf pop ret jno or (bad) cwtl lret mov jmp jo fs negl test daa (bad) cmp or jo sbb lds add stos mov sub mov and jb push xor lea notl out in dec test sub add lret pop call out xor loopne add mov push mov lret pop push adc mov push in or ja icebp add pop inc leave (bad) movsw jle jo sbb sub in jne xor movb adc repz and and lret jno or mov enter add mov movsb sbb mov into xchg aaa sub adc sti popf pop cmp mov sub xor stos negb out incb push fprem1 dec pop push popf cmp mov add test or push jle sub pop pop rol add fnsave js jle push jle cmpsl mov ret push fldenv jns jp dec (bad) jo mov imull pop and stos jne ret and mov cmpsb int3 cmp dec lret jmp dec out sub scas xor push stos sub pop or out gs xor mov push xchg pop xchg push and les pop mov dec mov dec scas cmpsl aas pop cmp loopne add sub dec adc cli jo aaa jbe cs or nop sbb sub bound mov mov fdivrl mov (bad) mov repnz fwait pop (bad) leave (bad) (bad) nop inc pop cmp (bad) pushf and into mov or cmp or pop or mov mov sub test and mov and ds adc lret jle leave aad das lahf divb mov (bad) movsb shrb jb repnz pusha gs mov (bad) lods out xor mov and jmp daa pop mov dec aaa push jno ret daa (bad) repz mov subb mov xlat call into mov mov dec dec and cwtl lret or sbb add les inc and out call mov aas lahf jae cmp or xor addl push popf inc add mov repz pop daa div rolb out and ja (bad) mov adc sub xor cmp mov out jno mov jne jae outsb call sub cwtl ljmp sub ret ret pop scas roll or daa into and push and iret repz or js mov iret jno jnp push or cmp adc jae cmpsb mov jb sbb xor mov bound stc fldl fildll pop mov xor mov sarl cmp adc mov shrl xor aad xchg icebp jl lea or inc andl xchg and pusha out mov sub and xor aam ret out daa into inc mov or cmp xchg out ljmp fs fs inc sti arpl xor (bad) incl jb leave mov repz cltd push add dec dec mov out push (bad) lock (bad) pop pop lcall aaa cmp push or mov dec fist test and mov pop xchg ret dec lret xor jne sbb data16 add xor dec stc add mov inc std pop aas out and xor sub incl adc call in daa out nop aaa mov push lods fstpl or pop inc je mov mov outsl into mov (bad) mov inc xor roll cwtl sub sub or jo pop ljmp mov inc sub sub add sub xor cli cmpsb sbb fiadd add mov lret pop and pop fs xchg push mov outsl aaa aas inc call adc add inc add jne shlb adc and mov xchg add (bad) sub test scas or mov push sbb jmp cmpsl inc nop push inc sbb adc xor adc in jecxz or fidiv (bad) aaa mov adcb xchg xchg cmp jbe mov call push sub or fsubl add dec adc mov cli repnz pop mov out jne repz sub mov pop sub push cmc add push and mov dec ret aam push mov pop fimul jnp out dec jecxz call cmp popa and push adc xchg jmp or push mov add pop jmp jp add xor ljmp mov fistpll popf cmc xchg inc icebp out sub ret test jno movl sbb fsubs stos cmp sub dec (bad) sbb xor adcb and inc mov sub testl ficomp sub cmp sti ret aad jmp or fistpl push jmp repz dec dec xchg fisub add cmp sub out xor js xchg or nop lea int clc mov movb ds movsl mov ficom jecxz xchg repz movsl or xor pop loop mov test cld dec cmp out mov leave bound cmc xor dec pop enter popf lds daa data16 add adc andl add adc (bad) stos (bad) cmc out sub xor stc dec lods inc lds cli ret cwtl xor pop shrb cmp mov add jns fs adc and mov or fucomip add lea out test sti mov xchg mov fcoms mov movb xor sub adc scas fnstenv sub push mov std out sbbl pop xchg mov cmp pop cmpsl stc inc cli imul in mov push dec into mov inc enter mov pop cwtl jmp std push idivb jno call movsb jmp cmp xlat mov mov cli test call push push mov adc repnz outsb ret adc add call outsb or jmp fildl jne aad js dec or sub out pop lret fisttp ret cmp xchg (bad) scas fiaddl xchg (bad) push dec lahf in (bad) inc cmc cmpsb sub add and mov imul cs pop add jmp stos mov sbb movsl gs movsb add push xchg mov movsl push scas lret push or jmp sarl inc add push jmp lods daa (bad) xor push shll test popf mov das adc pop mov mov xor sub sub pop (bad) lods cmp (bad) iret loop movb inc cmc ret xor out (bad) in popf sbb and sub xchg or and push test rol xchg ljmp fisub mov mov dec scas sub xor jno dec ja push imul ret aad lock out cwtl xor icebp loop push mov inc xlat data16 adc and sub sub dec xchg les bswap sub mov dec push lock jle cld rcrl ret test dec push popa ss mov mov (bad) mov pop mov mov mov out shll fistpll jmp push and fs scas and clc stos (bad) pop mov push repnz mov add xor jle or pop out outsl imul jecxz int3 cmp xchg sahf cmp mov jo mov mov gs cld iret (bad) popf aad out repz cmpsl jne jns mov (bad) jbe dec (bad) xchg lcall and cltd pop sarb sub push lds jg nop or adc fnsave push mov or shrb jmp sahf sbb sub (bad) dec push lock inc mov stc sub mov jo mov pop stc or test xor fisttpll lea es lcall adc bound and jle aad test mov jne inc gs cltd sbb scas fs (bad) adc iret sbb add roll (bad) ret add dec out pushf (bad) mov loopne sub jecxz (bad) mov mov int3 sub pop fldt lcall xchg pop lea test sub adc mov adc into mov xchg lret fsubl div (bad) pusha sub bound (bad) mov or and flds scas imul pop pop push pop mov arpl ret pusha add or xchg pop push bound popf enter sahf sub sbbb and mov cs and sub lods imul insb add scas fadds ja rorb sub movsl mov jg fsubrs loop rol dec mov push dec loopne add mov insb adc int dec dec mov push xchg jmp in int3 mov fcoml dec pop push fs xor aaa xor push fcompl movsb or xor xlat (bad) ja cmp lcall out mov mov cmpsl push xor dec addr16 fadd or sub jae out dec lea adc push sbb pop push mov and and lods out mov lods sti das add scas push xchg sbb sub repz cmp xor (bad) repnz test lock sti out xor out inc dec shll stc push ljmp dec rcr xchg decl xchg push stos rol sub sub mov lret xor jmp xchg push clc mov repz enter pushf (bad) mov push add sub (bad) std mov icebp mov (bad) cld lock mov add jp in scas cmp cs cmp and inc test jmp cmp mov push enterw pop cmpsl inc push fisubrl out sub jno adc mov shlb es push xor sbb jg push popf jno lret or inc pushf pop xchg mov aaa inc inc mov loope stos (bad) fsubl jns lret (bad) repz leave daa (bad) and not lds cmp and cltd mov mov adc mov idivl incb adc or mov arpl add pushl mov mov cld out cwtl xor add stos ror icebp out outsl cwtl push loope pop sbb loopne pop or cwtl push cmpsl in mov ds popf pop stc imul roll cmpxchg8b dec ja lock imull fisub (bad) inc scas aam mov inc fstpl leave adc jb pop inc mov es cmp mov (bad) shll jmp int movsl lcall scas pop mov ret fisttpll movsb fidiv daa pop add enter popa jo sub mov clc pop call (bad) out lret call das out or mov jecxz inc inc dec into cwtl iret (bad) push xlat inc xchg rcrl scas cld jmp scas mov cmc pushf fs mov je iretw inc mov xchg inc mov sub pop or ror aam lods loop repnz fstps (bad) add in xor adc idivl je out xchg int or out mov cltd imul ljmp or or hlt jbe adc or sub insb xor in or mov in outsb cmc push outsb fsub negl lock daa (bad) ljmp xchg sub or and inc sarb loope add push movsb cld hlt mov mov cld jle push jbe jmp scas clc fmul out pop adc dec cmp mov lret and popf lock clc bound fcmovnu mov ficoml xor cmp ret mov in and xchg jne aad push jns mov rcrl or pop stc lret push or inc cwtl das dec cmovne cmpsl jmp adc lahf int3 loope sub call outsb mov mov add clc cmp (bad) xor mov add mov or push push push dec lods sub cmp sub mov mov adc xor pop popf and lahf add pushf mov call sbb push test shrb jmp add std jecxz aad pop or xor xchg or lds mov je pop pop xchg xor and mov call mov mov (bad) jne pop push leave dec js pop loop shll pop pop or inc xchg out fisttpl dec repz cmp pop in dec shrl aam adc scas sub sti xor inc pop or fcomps mov jb or scas into and negl in dec (bad) shrl ljmp dec sbb sbb cmp mul stos cmpsb sub repnz pop push push xor sti xlat in pop inc mov mov lret popa push enter sbb dec xchg add xchg xchg mov loop mov daa out inc pop scas int3 xchg (bad) mov and lods pushf or inc pop std dec xchg or xor pop (bad) into sbb lret sub lods pop pushf push mov xchg sahf outsb enter cmp test out cld (bad) mov sub xor loop adc or test daa out pop push add aas push rclb ret xchg stos pop movsl or out lds xor pusha lret out xor int3 arpl sbb mov (bad) and out jmp push mov notl xchg icebp adc push jo mov xor bound jns pop cmp sbb mov push (bad) icebp inc add mov lods lds das push xchg pop std jno cmpsl hlt into pop sub sub icebp sub mov stos ficoml cmp aam les incb cmpsb jp xor adc std or and mov push loop sarl xchg pop xchg aad xchg jg lds pop arpl out popf cld and lret inc (bad) push icebp xchg ja stc daa or jg mov jne pop and mov (bad) jle pop sub add cwtl das leave mov sub pushf xchg dec cmp xlat out je mov pop negb sub (bad) cs mov in sub lods lds mov je lds mov cwtl dec lret mov adc decl pop ret fistl inc insl repz test mov push pop jb sbb mov add or sahf xor mov clc (bad) mov cwtl cmp rcr pushf pop push sbb xor cld pop jno dec push gs incl lret dec int3 jo popa or fld outsl (bad) pop pop clc mov xor jmp out sbb xor cmc sti mov or mov pusha enter (bad) cmp or ret pop into xchg xor dec (bad) lcall ret fs or cltd lods cmpsl mov lds cld cmc fs dec lods call mov pop lods lret jecxz cmp loope test mov inc add test pop stos and dec add dec leave add iret and xor clc push loop pop in cmp fldt imul out cmp xchg fadd ret nop movsl jmp xchg icebp fdiv jb fldl cmp mov or add (bad) lahf push ja or push loopne icebp and xchg scas mov lods mov or or mov sbb imul xchg cmc or cld das pop adc popf sti orl movsl fsubrl sar xchg (bad) stos push mov sub and std jle out inc jbe or xor or cmp and in sbb ret fsubs push les push fistpll ret fnstsw inc dec leave popf mov ret dec add and dec addr16 ret (bad) fbstp inc sub add notb cmp stos divl call out inc sbb inc daa lcall loopne lcall test out cmpsb data16 sbb pop dec in std xchg or iret std push stos add dec and cmp mov (bad) pop out mov rclb subb push xchg adc fldcw xchg cwtl xlat clc lret xlat test shr inc mov adc or jbe adc clc loop and sub arpl mov push jp (bad) pop mov stc or popf shr int jl dec test movsb fcom xor scas inc loope sub push jecxz inc fist ret bound push sbb out cli mov and cmpsb lret (bad) jno cmpsl ja jno rorl adc or pop aam and cltd xor xor mull cwtl mov (bad) mov or (bad) pop sub dec inc rcr stos cmp mov in mov into mov adc mov andl adc dec movsl ret cmpsl ja imul icebp cmp adc pop scas push int push mov push or loop or and pushf push add in and add adc daa dec adc xor jge into add lods cltd shl or xor aad pop and out imul out mov pop rorb test ljmp cwtl push push inc insl mov inc addr16 cmp sbb shll cmpsl loopne jmp jne cmc leave repz repz adc push jmp dec and stos (bad) sahf xor enter stos or inc gs pop jns inc movb pop popl jae leave scas xor adc sub mov adc fadds mov pop cmp push icebp mov dec pop inc sub sbb movsl and test ret fmulp sub out popf xchg in (bad) xchg adc mov ljmp mov add pop dec jmp pushl sbb xor jmp inc (bad) mov dec in pop (bad) stos xor call testl mov pushf or pop add xor xchg jg inc leave in scas mov mov push xchg or dec inc xchg (bad) not into stos mov xchg stos inc jle pushf dec pop or jg pushf jnp mov repnz pop or scas ljmp lahf rolb sahf sub (bad) pop mov jne les cli neg xchg ret (bad) pop nop dec imulb sub xlat xor cs imul lret sub mov addr16 sub sub arpl lret (bad) repz mov jb inc sbb lahf xchg and cmp or sub dec jl mov pop mov mov dec fidivl scas or adc pop loop fidivrl stos sub outsl in test out pop insl or lods stos sub popf lods inc test adc inc and jmp ret aas dec jb or lods stos fucom xor mov xchg inc call daa add lock leave xor jno inc or ljmp sbb sbb pop sar mov stos imul mov mov dec decl push pushf or fsubl jmp cltd and mov aaa dec inc mov (bad) jmp xchg mov push push mov jno lods (bad) mov lret (bad) iret mov ficomp dec ljmp and sbb cmp ds pop out testb ljmp xor call test pushf xchg incb mulps and fs jo icebp mov push decb fs out sub mov xlat mov mov and pop and sbb divb jg xchg xor outsl cld mov or lret inc adc push xor iret add fistp ljmp sub iret or in jmp jmp cmpsl pop or lock xorl push jmp mov xchg lea or in gs loop or sti (bad) mov pop xor test in add jmp sub (bad) sbb add std test and mov jb enter xchg dec test push and and test fs int3 inc add test enter shrb out lea fisttp adc pushf jae mov (bad) loop or mov xchg jecxz jbe insb xor cli mov cltd decb push xchg push daa mov jno xchg fprem jb mov mov xchg loope xor lea andl dec std or insb movsb out jecxz push sahf pusha sbb pushf stos bound xor mov stc out sub lahf sub or jno lods gs push xor sub and paddsw test cmc stos adc cmp and daa lret push jmpw xchg je movsb sub es mov sti cs (bad) sti movsl jne sti cltd xor or loop sbb pop cli mov into call aaa jecxz push out sbb push enter jp sub sub sub fimull push scas fimul vpminsw sub mov lahf sub lahf cmp (bad) sahf inc lret fwait lock mov mov ret leave mov shll stc jge xchg mov std stos xchg mov pop dec fisubr xor xor outsl fstl push in es pusha xor sbb into out push add lret sub lods or cmp cmp rolb mov sub mov cmp das mov or into mov (bad) mov inc push sub add sub dec lahf xchg mov outsb mov pop stc les fsubrp (bad) pop dec lods outsb lahf sub or pop mov mov rdtsc jp jp in mov and enter push xor movsb cmp std inc lahf cld pop lret cmpsl adc jno sub sub testl pop call mov and dec jbe outsb or push outsl xor (bad) roll mov push icebp xchg ret jle imul bound ret jo repnz jmp inc sub lahf push dec mov pop pushf sbb stc add icebp jo or inc dec nop or je,pt pusha mov sub ret jmp shlb push mov dec popf dec sbb cltd push push jp lahf adc push popf push push xchg test pop push mov pop clc call ja cld pusha pusha mov mov jg rorb syscall rcrl inc ja inc addb push or cltd jg push leave pop stos (bad) jmp movsb rol push mov jg sbb lock jnp add fcomps push jge adc (bad) imul js rep lret out mov fs xchg loop mov xchg flds xor (bad) mov adc mov or stc and rol lods sti mov subb sahf fsubp and or xchg xor mov mov sahf stc dec pop add jae mov cmp dec call test mov dec and xor (bad) and sub jg sub xor mov negl add add jo and mov pusha arpl jge std mull pop push lods setg stc (bad) lock push push nop inc push pop sbb ds sub (bad) pop mov push xchg lods ja dec sbb rcrl or in sub inc test daa sbb add sub pop loop and inc fiaddl daa pop daa pop aad mov js mov outsl xchg pop jg xor pop push mov stos jmp decl or rcll orl add pop mov add jg dec (bad) jb jmp mov add pop pop mov add iret push jae xchg inc dec (bad) jb or fcmovb loop push mov adc jmp ljmp (bad) dec pop mov jae (bad) or loopne push push mov pop pop loopne mov push pop imul cmp arpl sub ljmp rcll stos shrb jae mov jmp jg adc sub js add sub std aas test mov testb push xchg stos mov ljmp sub pop xor push loop icebp pop mov ret daa pop test add or into and popf jmp cmpsb xchg ja (bad) xor xor cmp movl pop (bad) test and or pusha (bad) xor mov in (bad) mov inc jae popa push sub add in scas int3 movsb xchg xchg inc sub out fcoml ret pop push push popf dec and seto outsb out repz lahf gs xchg hlt cli leave flds test sub sbb mov into pop ret mov inc lahf pop sbb adc mov mov or add inc hlt neg fs loope ljmp jle loop or addr16 cmc xchg mov mov popa or mov sub leave icebp jns or pop xor lods gs fs fxch ljmp leave fmull push mov clc pop (bad) les stos jmp mov repz leave xor pop (bad) hlt aas pop loope mov push add (bad) pushf xchg push js mov jecxz popf sbb outsl mov xchg icebp scas repz lcall inc loop or pop lcall jmp jne mov jno in stos xor pop sub mov mov add stos and jbe jbe push sti lret rorl push in dec shrl jae cmpsb int int3 add dec ja stos sbb lret iret xor mov (bad) imull mov sbb and jmp xchg adc xlat lock (bad) mov bnd popf sub adc std insb (bad) stos sub sub out das dec inc push and push cmpsb leave ja scas dec xchg add sbb or cwtl fist out mov imull mov jmp aad push dec adc dec add xor dec lret aam push xor movzbl and fcoml inc dec and int imul or std jmp inc das xor out or or (bad) dec das jp mov cmp sbb cmpsl inc dec stc out xchg imul (bad) repnz loop xchg loope je,pn enter sbb jle fwait xor mov add mov das repnz mov and pop fdivrs jb mov sub data16 xor fidivr mov push aad push pop into xor data16 pop es out mov jnp or sub cmp pushf mov sub xor xorb sbb cld jbe add ds jbe loop sub mov push mov mov outsb xchg jno in mov fidivrl fisub cmp or pop adc lret mov jge mov xchg mov pushf push das out hlt and sarb leave aad sbb sbb loop leave mov lds xlat bound addr16 sub and mov sub fstl repnz lahf out insl pop sub or out pushf (bad) ror mov aam je pop ljmp mov or scas inc sub sub cmp bound push jo xchg (bad) scas jmp stos dec cli aaa sub js add dec pop pop mov jge push and aaa arpl pop (bad) out push sub pop mov scas fldcw jmp inc lods jp adc jae cmpsl hlt inc (bad) ljmp mull jecxz pop push xor mov or outsb adc gs pop or shr jb stc push cmp test xchg mov push loop jne push mov pop dec push je les lret cmp int jle dec daa cmc xchg or call (bad) mov repz push and rolb ljmp ror and jp cmp outsb mov pop clc nop pop popf adc fwait mov sahf das and out ja mov in (bad) into push lock xor pop add xchg push sub mov fldl rcl dec testb inc jl je ret xor movsb loop fwait mov jp dec lahf inc dec sub rolb fistpl adc and popf fwait jno daa mov pop (bad) fdivs lock sbb jle iret push pop xchg add imull sarb xor repz mov out pop cmp mov or adc adc and mov adc bound push data16 adc jb pop ja jnp push addb test int add or cmp jg or stos add scas add mov popa mov pop mov dec ret out int3 jns into dec inc sarl les pusha inc fist jecxz inc out inc in test icebp stos inc testb daa xchg clc xor add mov add adc adc aam add and add xor sbb or xorb jbe sub sbb enter je or or or mov nop insl adc adc adc adc adc adc adc lcall adc test scas lods adc mov mov fnstcw les xchg add (bad) roll ret xlat add fldl jno add loop fs popa call mov and stc and std adc add in xor or or add add push add sbb shlb adc and popa daa adc adc adc aaa adc adc adc adc adc dec adc push adc adc fs adc sbb jno jbe xor loopne add addl mov mov add mov mov add mov test daa mov adc or mov std enter adc adc fcoml (bad) fistp int3 in jmp mov add hlt add stc add incb or cmovno pop mov mov cwtl adc lahf adc push sbb adc or or sub or or or or or inc xor sbb xor sbb insb mov push pop dec pop sbb xorb iret outsb or (bad) jbe and inc orb test mov adcb andb mov or movsb imul mov cld mov test hlt ret addb mov sbbb scas aam xchg fadds fmull jbe or or sbb addb add sub prefetch or sbb xor loope add add add xor popf aaa add add inc add inc add add add nop cltd pop adc adc sbb (bad) jo insl je or addr16 int add nop xchg mov sahf xchg adc xchg adc cmp jmp scas jp mov inc mov inc mov inc sar (bad) iret inc enter dec inc sarl data16 cmp mov or fild jecxz shl push jmp dec bnd mov or or outsl clc or adc out sbb xchg sbb andl (bad) and insb sub mov push xor (bad) jae inc and dec and dec and and and pop and pop xor mov and jae sahf jbe mov and and xchg and and and xchg and cltd and mov mov icebp mov adc and mov sub and les mov and shlb jnp and (bad) add and jne sbbb pop sti fmull sbb or and xor adc add pop in add and and shrb add sub loop add xor cmp cmp aas add inc add inc add dec add dec add push add push add pop add pop add gs jb addl jne dec jns and lahf test fimull dec xchg add xchg nop pop cwtl adc adc adc lods adc adc mov in adc cmp (bad) mov rcr (bad) add flds and xchg inc fbld out inc in jno lock inc cmc std inc stc stos sub adc les and add adc sbb jecxz adc and sbb mov jno aaa inc inc cmp inc inc xchg (bad) mov dec xorb sub ret fs sbbb arpl xchg and insb jge and sbbb movsb (bad) subb add scas xchg add and and and and out mov iret les lret enter jmp or fmuls pop fisttpl cmp or jecxz mov or or hlt test addl les lcall xchg or cli sbb dec and sbb andl imul mov and and adc mov push and xor push add add add xchg test add (bad) add xchg aas mov in add add pushf add add test fisubr pop mov jns and xchg lds enter into and shll or and and jecxz pop call into repnz and call add rorb dec adc fdivrp dec sbb fistpl sub xor cmp sbbb xorb or imul or arpl or or or or or subb adc xchg adcb addb fisub dec scas subb addb cmpb fld andb orb mov xorb dec loop insl out cmc les adc push pop repz divl add incl testb fs mov aas push or adc rcll sbb in or or xor cmp test or or dec or or or pop or or ret sub cmp jg pop or xchg mov nop subb sbbl push sahf mov add add add add mov insl mov mov jb add ret movb add roll xlat add fldl loope sub add jmp inc repnz outsb inc sti in or or xchg add and and mov adc popf push and and and and and sub mov and xor mov iret inc or or push or or popa arpl insb adcb add mov addb scas test popl cwtl xorb subb mov or test adc repnz push mov (bad) enter push int adc or (bad) or loopne cmp or in jmp scas icebp or or stc or std push sub sbb bound loope add adc (bad) xor sbb cmp and sub and xor and add add ds add add push add or or popa testb inc imul out je fs jl roll (bad) push dec mov ja jno add pop mov add test inc mov fs mov leave mov ffree add enter push mov popa inc shll aad inc fldt in inc jmp icebp add hlt add cli add std add add or or adc rdpmc or add sbb xchg and and pop sub xor in aaa or cmp inc xorb push inc sbb addb ja andb push pop orb xlat cmpb cmp jo sbb push jp dec jg xchg test mov mov sub xchg sbbb loope cmpb jmp xorb fcoms or mov dec mov outsl ret lds roll flds rcr (bad) loop ss popa icebp xor adc add add sbb add add adc adc cmp sbb sbb mov adc and xchg sub mov mov cmp inc aas in inc clc inc inc lcall inc push stos inc push mov add pusha add data16 push test add je ret fs addl add mov popl xchg add xchg add lcall add cmpsl add lods add mov in mov push mov inc mov inc movl mov shll add fildl fild jecxz add push or loope lock repnz inc (bad) dec jmp jae sbb int3 or inc inc push sub adc inc sbb inc pop fiaddl frstor sub repz add ss cmp sbb add and sbb push xor andb xor popa pop or popa or or insb or sbb xor popa jns mov add andb test or sbb cltd subb orb cmpb cwtl test lods movb mov mov or mov movb lret add add add add fiaddl sub bound or add call imul sar xor std stc add in push les push add push add adc adc ret lock and jle adc adc das adc xor in adc adc scas inc adc inc adc dec adc dec adc push adc repz adc adc imul add add and test mov and xchg xor xchg inc cwtl add fwait add add test lock add add mov add popa cmpb inc roll fisttpl aaa in adc or lock or sti mov addl or or adc orl pop cmpl push add add cmp scas aas add add dec add add add aam add call or jbe sarl nop jle ljmp (bad) xchg xchg or or pushf or mov cmpsb orb or repz mov cmpb and sbbb cmc fldl in lods out scas out andb adc sbb lds add or or push or jnp adc adc aas mov pop inc and es inc sub xor mov out inc shlb push mov bound repz pop lret inc popa sub mov push inc outsl ret mov jnp inc jge inc (bad) xchg nop and sub cmpb andb sub dec lods add add and and xor loope and jecxz stos call sbb and and pop or or xchg inc or inc push sti inc sbb sbb inc and es sub and rolb and dec xchg inc dec mov push adc pop ret inc pop int popa sub jmp outsl cwtl inc je inc jns inc jl inc xorb lcall xchg add pushf add mov cs inc mov fs mov sbb add enter add rolb aam insl xlat add fildl loope lahf in pop ljmp rol (bad) lret incb movsb add popa add mov ds jmp or or pop arpl and and ret daa and and sub inc sub pop cmp insl cmp add inc add cmp add push add add add and jno adc and and test hlt xchg xchg mov ja and and fwait and and sbb or cltd mov sub and lds dec int imul (bad) enter pmaxub push loop fsub or or repz mov and std jo jo xor or add adc inc adc test add sbb test add and loop add nop sbb idivl out adc add test mov popa pop stos mov and xchg push pop inc push jns (bad) xchg lea test out xor repnz (bad) lret push push mov hlt sti add ficompl mov jb repnz shl rcrb jl ja addl subb pop sbbl add (bad) xor test out test cltd out add jp mov in rcr push push out mov out sarb gs aad push sub push pop fldl rorl stos jae push pop stos int add inc push negl and mov push mov ds mov scas xor mov adcb xor outsl shr add add inc add out loope mov mov mov lcall aad rcll push mov inc jo jg std mov push sbbb jmp sbb (bad) pop lods pop add sub inc fwait xchg (bad) xchg push sub xor out mov pop sub shrb pushl fildl add (bad) nop cmp fadds mov repz ficomp mov rcrb add test rcll jns imul dec ja addr16 xchg add jecxz push push sti maxps sbb ljmp jg adc push mov sbb pusha ret shl ficoml dec xchg cmp jecxz mov insl ret xchg sarl int3 mov inc sti addb sub sbb lret (bad) in dec fs jbe xchg push or out fdivs das stc lcall xchg in adc mov sbb push mov sbbl pop imul ja push adc mov dec xchg scas cmp es clc cmpb push or add add loopne aad iret adc mov add rolb loopne adc pop sub fildll add lahf aas pop es pop xchg mov loop xor mov adc mov ljmp or sub ds or add dec dec sub mul jge pop lods sbb add pop adcl jmp into inc mov dec push call repz out jg mov jmp adcb add dec inc pop roll add sub xor mov fmuls jl incl xorb outsl dec les cwtl and (bad) jb dec pusha enter in jnp ljmp cmpl lret add movsl jbe inc ja shll fstpl repz dec dec adc add jne sahf addr16 sbb fsubs shlb lret cmp xchg sub jge pop sti lods xor stos mov adc and je xor sahf dec push inc xchg jmp add cmp repz mov adc test xchg scas popf inc xor mov addl adc jae rorb in stc popf bound push pop mov xchg out lock cvtps2pd sub (bad) mov push icebp decb jbe pop push pop mov dec ja test pop sbb push push push fwait imul cmp pop mov or loopne fidivr dec mov loope and mov push mov psrad out nop lcall push jmp sub adc or add pop pop and leave and pusha adc cli push xchg cli and out and mov xor daa dec out jne pushf (bad) dec pop mov and and jnp adc insb mov lcall mov xchg mov bound push rclb mov fdivl shrb mov pusha add lcall mov xchg sbb (bad) out arpl push (bad) or outsl sub and push pop jecxz adc mov jmp add and (bad) das fisttp sbb jmp cmp test fisttp add mov add loope out mov add negl adc push sbb or mov stos nop dec sbb ss or xor adc stc adc or adc pop sub pop xor ljmp push sub mov inc pop mov add pop test or jl or fmull add push inc push js xor adc mov je aad lds push int jae inc adc dec fisttp jp cwtl push xor fcoms xchg cli mov aas sub sub sbb lret jnp mov add mov mov stc jl xor ljmp add pop xchg addl jg dec adc fnstcw adc or add push gs icebp insl dec push ds cmpsb jge add xor push push mov or negb jge xchg clc add jno gs inc gs cmp sub and testb push ret cld mov inc out pushf add xor stc pushf mov dec sarb (bad) sub bound sbb pop push (bad) popa sbb js mov jp scas pop mov mov shlb lret push push mov nop (bad) or in cmp jnp inc dec int sbb sbb (bad) inc fmull mov outsb (bad) push out mov push xor pop jmp mov ja (bad) xor pop push mov xlat cmp xchg pop sbb out and cmp imul and mov insl dec jno int3 mov and or or in mov mov xor (bad) outsl push dec (bad) repz out pop dec movb dec (bad) or fldenv fisubrl pop push and es aam cmpsb stos aas push pop jg sub in (bad) movsl daa mov lret jae fs ret push sub mov sub inc xchg or jg push pmulhw data16 idivl lcall jb rcrb mov loope add xchg jecxz cwtl xor fmull inc fwait iret ds sbb pause jmp pop push les fwait repnz pushf cs pushf dec sahf jg push xchg dec iret push lahf jl jns xchg sbb or xor cmp jnp in inc (bad) or pop hlt ffree push pop nop jl sarl daa add lret mov outsb das push sysexit add mov mov adc sub mov bound icebp jnp les std pop shrl add add in xlat and xlat mov mov jnp jg mov pop jnp popa in inc inc add sub pop pop bnd fadd out xchg pusha sbb mov or movsl jle aas mov add dec pop lods cmp mov xor loopne rclb pop or inc pop mov add inc es test int3 mov jmp pop frstor orb int3 mov sub das xor cmp pop push jg sbb dec out sub out add pop test xchg lret mov call lret sbb sbb mov dec xor out dec mov jg jl pop xor lahf jl inc outsl cmc or loope mull shll insl ret and lock or (bad) fnsave cmpsl dec inc mov ficoml roll stc jne outsl push out aaa or ret repnz ljmp add (bad) mov nop es adc loopne incb ljmp repz cmp dec (bad) push pop lahf dec pop mull popf mov pop xor out iret movsb adc pop stos lea and das and es cmpsb pop sbb ret add out addr16 jmp pop aam shlb repz add push mov add or (bad) xor ss or xchg pop mov pop xchg fwait bound inc mov add in ss fiadd (bad) iret pushl out cmp (bad) xor adc bound ja cmp test sbb add inc lret rorl and rcrl jnp mov and mov pop pop lcall pop mov mov rcrb inc add ja das dec cmp roll mov inc cmp xlat pop (bad) movsb adc or jl mov inc repnz and push repz call lret sbb scas jne or sti or cmpsb xchg jb aaa and loope mov or test pop add sub sti insb les xorb ffreep mov jle push mov ret mov fist fwait dec jno mov xchg mov repz shr lret push xor push or stc cli int mov negl pop push cmp cltd xchg addr16 neg (bad) cs jns lcall stc mov mov xor das jne and and push or (bad) scas pop mov lret pop xchg sarb cmp loope pusha and out ds or or out sbb adc pop movsb leave nop loop add mov loop or pop xchg jp stc outsl or or add pop andb mov (bad) fildll out push or test mov fdiv faddp stc add mov jo pop xchg cmp push dec pop dec sbb lock mov mov mov (bad) adc jg decb xchg sahf pop leave sub jb add mov ljmp sbb xchg adc mov sub xor mov (bad) sbb add gs adc add sub jl lock pusha mov xchg lods dec sbb (bad) insb or cmpsl add jecxz xchg ja cmc pop jnp pop shr xor add or push pop mov insl int test ja ja inc sub sarb cld push xchg dec jo push cs mov (bad) andl sub ret xchg mov dec or push push dec push or std push jmp outsb push sub xor call je loope mov call xchg add pop or push push sub sahf icebp sub sub and fisttpll xlat adcb xor xor jge rcrb stc xor sbb inc scas rorw in add cmp jno or xor sbb mov push inc push pop add jnp pop jo pop jl inc jo (bad) in cmp jecxz sub mov inc xor pop cmp je pop add into add pop inc shld pop adc arpl push cld out test repz sbb pop add and movsb or add push fmuls andb mov dec xor mov cmpsb (bad) testl stc and bound add pop ds arpl not sbbb insl and or mov and add int mov push pop inc cmc cld gs fidivl outsb test dec add in dec ret mov shrl frstor push adc cli dec pop fldl inc xchg mov movsl cmpsl xchg loopne stos inc fimull aam jmp pop add push cmpb dec cli outsl test dec cmp sahf add jge push cli mov aaa xadd add xchg pop fisubrl dec pop lds xor repz in mov mov jno mov cmpsb inc or pop mov daa push addr16 (bad) and fcmovne sub popa fmull and add mov or pop push insl cmp fst jae xchg jo hlt and pusha ret (bad) sbb repz lcall mov stos lahf inc jae adc jg mov add lds xor and jmp and cmp pop push or imulb (bad) repz ret push add rorb push pop jmp negl mov add popa mov call in sti and ficompl insb lahf add sub push push dec push dec push sti add neg inc movsb nop ret inc dec jge loope push xchg loope cmc push sub jnp add xlat or jo out jg jb pop add push adc and pushf mov (bad) test (bad) mov enter pop cmp sti jno or dec stos inc pop add jmp lahf sbb push push dec pop lret pop rcr or jae inc cmpsl lds inc inc cld or xor inc mov dec jp pop les pop mov stc xchg jl outsl mov pop ret inc std test lret adcl mov or sti arpl cmp adc dec cmp mov ljmp push int xchg rorb push xchg movb mov inc lret cli adc add leave stc insl jl pop push or (bad) outsl mov add addr16 jne div add push mov out push dec out mov and mov nop xchg repnz jge aam rolb test dec adc sarb sub outsb ret fistpll rol push cwtl lret dec xchg sub test int3 and inc mov mov mov xor call adc leave or push sbb incl mov push and pop pop sbb xchg or call xor sub dec repz mov pop aad iret je fs inc add in and mov pop pushf dec push inc push mov (bad) jae sub stc sub in (bad) in or pop test andl mov test mov pop (bad) aaa div fwait repnz jge inc jb pop pop pop sub pop shrb movsb pushf mov rcll or popa jae push inc lahf jnp and pop pusha jns mov stos sub cmp jle clc (bad) mov push mov lret std cmpsl push jne int rorl add push mov inc jmp dec or lock xchg movsl pop add push imul rorb pop add shll pop add inc jno std jge nop cmp lret sub dec sub mov push jmp cmp add push lret jg fsubrl sarl and and rcrb sub mov xchg out cmp pop add in push cltd xchg out mov addr16 xor sar sti push jnp addl add loopne and popf adc dec rcrl or xchg dec popf ds jae ret insb add or (bad) xor mov sahf or pop lret add and test jbe nop int add and jle pop aaa cmp pop and jo into push mov sbb outsl not mov mov push aas sub dec call cmp or inc and xchg mov dec pop add add loopne inc sub jmp int jp inc adc rorl lods movsl push cmp jbe cmpsb sub and push push sub adc add push mov push popf mov jl daa fstl jmp cmc push push sbb inc cmpsl adc stos add pop scas dec out sub insb dec scas fs clc push xchg faddl pop js (bad) mov test movsb into push pop js loop out pusha pop insb aas mov push push movsl dec push sti ds push mov add sub lahf xchg clc dec adcl ficompl aas aad and and cli dec add sub test push and outsl (bad) xor and mov jnp add sahf pushf cmp add xchg mov or cmpsl popa ret stos push adc rcrb jb insl scas (bad) imul ljmp mov or push mov push push (bad) inc fxch std ja and aas sub lods push xchg add add (bad) mov jg cmp lcall je ds insl add mov cmp aas cmp dec mulb nop push or scas pop jp or mov mov pop out dec push aad jle xchg jbe and or out cmpsl rolb pusha adc jno stc pop add aam pop jle push pop pop mov rorb aas pop das sbb movl sub add mov jnp mov sub stc daa mov mov jg inc imull mov or xor pop rclb mov xchg push and pop inc fnstcw (bad) xchg and add es insb fs cld test stc imul sbb or dec jae xorl in add sbb adcb dec cli add adc ret jno negl fildll pop sub fadds cmp fdivl fstpl stos push cmpsb sbb ja or add divl sbb and xlat push or dec aaa xchg daa pop sbb bnd shr movsb and or jmp pop pop icebp insl vsubss int3 xchg (bad) aas arpl mov push pop out dec pop add push pushf movsl sbb inc (bad) jno push push das pop fcom mov add pop andl js movsb sbb push roll in push pop (bad) inc pushf leave pop mov pop add fdivl add xchg mov call adc outsb or movsl sahf movl fucom push js scas and ficom lret ljmp shrb mov in mov std jg sub scas add mov addb or dec outsb xchg enter sub adc out sub lret xor lret dec dec aam ljmp dec push cwtl imul xor dec test pop add or xor jge call inc shrl pop cwtl inc or std add ds inc dec fstl add mov repz insb sub pop pop lea pop movsb enter push (bad) inc lock jg lret or push cltd dec sbb sub popf je mov mov std jo mov lahf outsl loopne jg pop daa xorb cmp pop mov pop mulb push jne js inc xor sub push or jo dec leave add not sub mov ficompl ror mov adc jnp scas push sbb and xchg or lods insb adc pop and add fstpl or dec jle push stos xor jmp ss push xchg imul (bad) je jge cmpb push adc test out and xchg jmp sbb rorl mov mov push lock ds fistpll lock pop sbbl mov pusha jg inc cltd dec add pop sbb nop loope dec sub out push adc push pop xchg pushf sbb jbe iret nop dec dec pop or jnp movsl adc add test pop rorb push mov (bad) push loop jg mov dec jbe mov mov mov std pop push xchg lret arpl add jle mov gs std pop cld mov jmp or cltd cmp mov add jnp loopne loope adc add hlt mov daa inc (bad) out pop xor mov mov dec jle gs jnp insl push pop pop lods inc dec sarl cmpsb jge pop jle iret cmp repz sbb std pop pop cmp mov xor lods negb push inc aad hlt jecxz sbb (bad) pop cmpxchg push jnp dec adc loopne xor fcmovb fwait and xor add fldl2e inc fdivrs mov aas xor gs scas orb sub add pop sub pop cmp inc push repz idiv inc mov repz adc xlat imul mov jecxz mov out xchg inc xchg sub cmp popa add iret ds xadd je lret jg cmp inc add add cltd inc sub dec pop mov adc out loope into xchg sbb cmc cmpsb push sub push leave push xchg fstl ficoml xchg call in add fidivrl das push aas lods pop aad xchg push add (bad) or or sub mov (bad) jle adc push ds and cmp add and and mov test adc dec jnp sbb xchg add xor fsub inc cwtl pushf or dec dec and lret fwait adc push sub and sbb pop or pop sbb dec push repnz (bad) and pop movsl or rcrb dec xchg and loopne pop idivl outsb add ja (bad) push lret pop lahf (bad) (bad) jnp push mov pop dec fld pusha push adc sbb adc pushl or dec push pushf daa out nop pop or jg jb cmp ror mov inc ds xchg xlat xchg inc inc ret repnz mov flds mov iret movsb ret inc lcall iret stos fs sbb xor jmp mov and lret xchg xor jmp and pushf lret push pop push mov cmp cltd loop inc or insl ret (bad) mov lods sub cmp inc pop push inc dec add rclb dec dec out push xchg cmp in mov push nop repnz add aam cmp imull and pop pop push push dec dec push pop lret and call xchg push mov lret pop xchg cs psrlq mov arpl and lret ja push and out or push outsl pop and ror fildll mov jg cmpsl cmp lea dec leave mov inc rolb pop inc cmpsl in jne sub cmp push divl loop sub pop add sub stc inc adc in add test xor or gs push mov xchg add scas and mull imul xor repnz xchg divb ja jbe adc push std sub jno add es pop push inc test andl sub pop ret pop lea stc push or xchg shr jecxz div cmp les jae push je dec cld in gs sub add pop add mov scas (bad) sbb lock adc in cmp aad jg int3 jb fisubrl rep repz jmp mov (bad) out pop mov loope jbe test scas add jp pop pop pop pop add pop mov mov adc dec (bad) mov dec mov fcompl and pop adc adc push push dec push mov es lock ds dec daa mov jg fld test add pop repz ret in adc or pop cltd adc push sub (bad) xor mov add push in push (bad) push and aaa test shrl jnp jl lds leave movsl push sub roll out pop loopne push xor pop ret shrb div add js sub aam fnstcw insl fimul and jns (bad) (bad) jg test enter shrb outsl dec sahf mov jnp (bad) pop pusha inc push sub aad mov std icebp test xchg mov loope pop pop imull daa add add lahf sub jg push fcmovne lock lock out xor dec les inc dec mov lret mov rorb xchg int3 cmp and pushf mov rorb outsl (bad) daa jno add sti jo (bad) pushf int (bad) into rol add pop push aam mov int3 or aam add xchg pop xchg pop xor fs jnp arpl mov out aas pushf scas loopne add mov (bad) (bad) testb adc xlat mov push lret xchg dec iret xor andb sbb inc xchg incl scas push pop push cmp fs adc push or add jg cmovp ja ljmp add fmuls sub jnp add and mov loop dec (bad) jmp sub add sbb dec test jp into push fsubs int cmp jo mov mov outsl das not add add mov mov ljmp (bad) out sbb inc pop push imul movsb pop pop adc data16 insl push xchg sub dec cs test outsl in push pop pop clc mov loopne hlt pop cwtl ja cmp (bad) push orb outsb das (bad) mov ret ds cli (bad) dec xor sbb ret test mov or push mov repz insb incb popl mov adc mov inc dec sub xor dec jle adc das pop pop imul sub ja cmp mov cmp test push push add push enter pop add movsl cwtl repnz out mov mov fmuls add int3 in jg pop es outsl add das xchg mov add into ja sub or jbe es and pop mov mov in fadds jg sub (bad) (bad) pop lds add (bad) cmc outsl push pop dec mov aam add push loopne mov and push or dec mov daa xor adc dec pop mov (bad) popa mov mov pop inc sbb int3 sbb dec dec std lret cmpsl inc xchg inc dec (bad) gs (bad) not xchg xchg and (bad) fsubl fsubs shll js add mov ja mov insb or ds loop lock out dec dec jmp fldt nop mul fdivl pop mov jne mov or (bad) ja mov push xchg fildll jle repnz fdivrl sub or (bad) js lcall cmp jg fdivr ret ja mov ljmp mov sub rcr jge rorb cwtl xchg out inc xchg das repz (bad) jmp mov xor xchg cmp outsl gs mov out sbb mov mov push into push pop xlat inc (bad) sbb pop inc outsb jae cmp mov dec jmp lret inc push repz push ljmp out sub add pop jnp add cmp mov pop add add repz mov (bad) pop push repnz pop push scas (bad) xor lret fiadd xor nop jmp out mov jg mov (bad) mov lret xchg jb loop ja xor push dec nop fldt ret hlt aad sbb repz js pop xor std and pop daa outsl jg adc or push sahf adc ds in add gs jecxz popf addb notb ss aas int3 and xchg dec add ss cwtl ret push dec sbb jmp or sti repnz add or xor dec fsubrl sbb mov mov cli xchg sub add add pushf mov cltd leave aas jb pop int daa push xor jb dec push jecxz daa push lds je push aaa icebp inc or push fwait jg clc add push push sub push iret dec data16 subb pop inc or (bad) mov pshufw sub les mov loope arpl xchg shr cs mov jns cmpsb jbe sbb xchg ret push stos movsb adc fs mov adc in (bad) cmc jle sbb (bad) loopne xor sahf push add dec push push sub sbb dec or xor cmp push test lds negl pusha mov and pop out repnz fisubl aas (bad) (bad) iret pop incl aas push jl (bad) adc mov call pop mov pop push push push nop push or fistp hlt repnz or sub pusha inc sbb fnsave out mov dec or jp xchg rcll pop (bad) aas inc mov adc pop fwait outsl popa adcb jl mov xlat mov mov xchg (bad) dec mov outsl ffree dec andl jl and xor pop icebp xor mov or push add clc cs rorb js es jg loopne add dec aas inc iret add xor mov scas in fsubrs mov mov iret (bad) jne dec cmp sub ja mov in outsb add jmp pop mov (bad) jp xor mov pop dec and and add push xlat icebp lea and pop add rolb inc popf fistp and movntq cmp inc int mov and dec sub test push lahf sbb outsl aam cld push mov mov mov pop movsl pop inc inc adc cld pop add xor sub mov imul jl popa jbe cmp repz jg dec (bad) cmp pop push sub mov inc push jmp dec loopne lods or mov lods ds loopne mov add push xor inc sti dec lock add xor test and call nop push mov dec not inc cs clc mov mov push dec or xor or add push (bad) mov sub lock add xchg xchg add push dec jo xor dec pop xchg dec mov mov mov icebp or add pop inc fstl add push fsubr icebp (bad) sub mov stos adc or repnz es scas sbb adc add imul in xchg jg pop xlat repnz xor adc sti mov pop (bad) xor test out outsl add xchg clc mov in cmp xlat cmpsl sti rcrb shll pop aad or dec push hlt push ds push test xor mov push (bad) clc js push add popa push pop rdtsc jmp sub std push loope mov add dec mov (bad) das sbbl inc sar sub jg pop or jae or push xchg mov dec inc flds cmp movsl idivb lret popa inc ret rclb outsl push inc mov mov pop push movsb lods add push clc xor popa stc dec add call jns jle add popf bound jo or pop add xorl (bad) lods jb jge ja cmp mov push rcr clc add pop and sub fisubl (bad) dec push inc in mov cmp lds cmpsl int3 repz cltd pop outsb inc xchg inc and cmp or ja push pop pop xor mov iret rclb rorl (bad) jnp and and insb sub lock dec sub push ja and enter pop adc or addr16 aas xchg pop jmp mov jmp xchg push xchg jl pop mov pop rorl stos fwait imul leave (bad) dec push add in imul sbb int lods mov ret enter das scas ja addb xor stc rcl mov mov xchg lods push mov cmpps cmp or mov push pop fldl adc mov or in push or adc rcr xor mov ja sub movsl cmpl cmp mov add popa xchg imul xchg push xchg or pop outsl sahf (bad) sub sbb add shll pop fisubr cmp int sti aas out enter cmp das (bad) test clc ret inc jno (bad) mov fdivrl or stos dec (bad) movsb inc dec inc scas add push cld sub push jecxz popa jbe aam push imul sbb mov sahf pop das scas pop mov in push jae or mov or or mov jnp pop aad stos daa sub lods sti pushf inc or mov mov pop insb jae mov iret into rcrb cmp cmp (bad) mov shlb or or addb imul cvtpi2ps or adc mov insb inc add xor aam enter cmp add pop dec sub clc gs stc mov icebp clc lret xor popf test out ret call lcall jg and jmp mov decl push out bound dec pop xchg test sub bound in dec pop jne xchg nop jnp xchg and out add add repnz mov sub sti mov jns xor jl loope mov mov push shrl rorl inc jno push adc mov jl enter insl pop das insb mov mov dec mov adc sar dec pop xchg push and out xor fisubl jle and in loop cli jns sahf and rcrb dec mov mov dec push push push stos xor sti adc arpl loop punpckhwd movaps dec pop andl push or adc test dec mov and loopne daa (bad) sbb test jnp mov fisubrl or add push add inc loop aas xchg mov jl js in popf orb mov inc popf mov fsubp nop stc fidivl add mov dec (bad) jb dec jae (bad) mul outsl cmp or fstps setnp jb in pusha inc lret sarl jecxz lock jbe sbb xor cmp mov jne mov lds lcall sbb sti add mov jns clc lds mov sbb in add call add fnstenv cmp mov lds sti cld inc in jl nop sub cmc xchg xor and add scas arpl aaa clc cmp rorl xlat out (bad) aam cmc fstpt or fldl jmp sti mov dec mov sarb mov (bad) loope addr16 ljmp cmpsl outsb mov xchg push push mov mov or jge xor mov add pop rcr insb hlt push xor test push call lods pop lret cld into mov inc test ror inc outsl inc cmp or mov rcll nop jl nop cmpsl pushl pop nop pop pusha push jle dec mov cmc inc (bad) xchg mov cmp add insb sub jne addr16 loope ja stc or not xchg decl ss sbb daa pusha fs mov pop mov arpl add es cld pop adc add mov add add test lods pop add pop pop into inc fldcw subl push jnp leave push push pop cltd (bad) std sub jno shrb aas mov or adc ja (bad) jecxz push add push sbb cmpsl push ljmp rorl pusha aas xor xor test xor dec push sub call push cltd fidivrl outsb pop push and mov arpl jnp dec pop add pusha xchg lock xchg mov testb push das (bad) (bad) or std adc mov inc dec das bound xor push sub add mov inc mov sub lds mov icebp out pop stos sub enter andl or aam test into sbb inc or mov or daa pop push icebp stos test sub jbe cmp aaa (bad) mov xor cmp aas pop cwtl jecxz pop jne dec mov (bad) js nop jp les add cmpsl (bad) daa jnp bound xchg xchg xor ficomp shrb cmp fsub push or std xchg test pop jmp inc popa out dec aaa xor inc or lcall inc and or mov cli or dec pop pop fidiv ds pop push call push movsl arpl jnp jecxz ja sub push and sub shl add jnp (bad) leave repz fiaddl xchg gs js push cmc adcb cmp jo mov dec push pop in inc inc mov cmpsb cmc outsl or or jnp and imul dec mov into or mov (bad) xor inc out es sub int3 inc or mov pop shrl add sub jnp into mov sbb testb cld ss push pop leave jb inc mov jnp je inc mov lret dec push jecxz jg dec fcoms push push xchg add icebp inc cmp fstps popa cmp xor push stos and jg inc in int imul mov xor mov lret popa and rcrb push sbb cld add dec scas jl add jnp fsubrs and mov and js sub inc sub das pop sti pusha dec out jecxz inc mov xorl aas mov xor cld inc inc jp pop add fsubrl jnp dec sarb mov or jmp nop int3 inc pop jo repnz or into jle testb (bad) sub clc mov rorb add or jno sub sti sbb dec jnp mov mov dec or sarl lods inc popa xor dec mov shl jne and (bad) jge push pop push pop pop les mov and rolb (bad) lock add push daa or dec addr16 and ljmp out jg orl sbb xor fiaddl aad push pop push mov fstps adc pslld cmp dec clc jo fwait push xchg mov int (bad) aad ja stos fcomi jp add out or mov or push cmp pop push pushf mov lods dec mov mul in ret aaa repz or xorl icebp (bad) jae dec ret inc stos cli call popa lods sub jge fildl divl and dec inc repnz add sub jbe add ja dec fs or cli fbld xchg (bad) cmp jl dec (bad) sbb push xchg mov add mov jp mov jg push mov loop jmp jmp add pop inc jl les out in add mov sub repz push push jae push add adc pop decl mov mov push mov mov ljmp (bad) es dec add call and sub pusha pop cli cmpsb mov push cwtl addl (bad) jge xor jmp xchg enter fisubl loop mov sbb pop pop test in add shlb lods pop mov jns adc shrb add dec mov sub add test lahf jg lds push inc xor xchg movsl lods sub jle das fmulp or bound or js rorb mov jo pop xchg jmp add addl sub mov adc add cmp jne jb cmp adc xchg orl inc pop outsb jae shr das (bad) icebp adc fiadd (bad) xor sar (bad) dec cmp sub jl pusha jecxz pop inc repnz jne rcll nop ljmp popf scas repz mov pop fisub push jbe pop adc ds fistpll mov or or int mov in add push int3 fwait stc pop cld mov push and ficompl jle inc rclb aaa sub imul dec rol cmp pop add mov or inc outsl sbb mov rcll push test xchg jp adc out pop cwtl mov pop stos push mov and int3 pop jae add outsl jg mov bound ret (bad) jle in xchg pop jl adc push sbb popa xor dec das pop out andl mov mov adc (bad) sub gs sub dec xor jle (bad) push dec ljmp sbb inc mov clc push inc fmull jge jo imul in pop call je add xchg mov clc outsb mov repz mov stos fwait pop mov lret adc mov inc scas popa pop xchg jg push aaa ret sub (bad) pop cmp or cmp push dec outsl mov das mov push xchg (bad) pop std xchg addl xchg test xchg test into cwtl sahf cmpsl addr16 or scas pop insb fimul aas std push ret jno sub push mov lods outsb mov pop aam test add (bad) jnp mov cmp insl dec aaa add frstor mov dec fwait sbbb movsl jo or jno pop cmp cmp stc pop push out das lds mov divb jp scas cmp out jge (bad) insl sti sub jo xor add iret jge inc mov call add jns ds out aas xor xor add sub xor das cld mov xchg jns and adc imul jmp pop test lock ret mov lods cld xor mov test lea sub shlb xchg dec push jns shrl lock push cmp or add add scas inc (bad) and lods add sbb outsb not push inc mov cli inc sahf stos adc aam ret pop pop inc into (bad) and ljmp cmp mov aas add xor xchg daa lods sub adc dec push cmp pop (bad) sub outsb icebp inc (bad) dec add inc push mov add or mov sbb lret and in cmp fsubrp cvtps2pd sti popf dec aas mov daa ffreep mov movsb loopne add sti jnp inc shl rcrb or jae ljmp xor jecxz popa mov and cmp daa push add push (bad) cmc inc mov add sub jnp xor pop jmp pop push xchg mov testb pop lods sub push repnz add insl fwait jae icebp imul data16 lods idivl rcrb gs pop add pop in inc daa aas jnp xor imul inc imul pop push sbb add xchg ss sbb mov inc push inc jo add shr push mov xchg (bad) (bad) incl mov test jl aad stos or popa incb push xor iret jne jmp or shrl inc in insl xchg pop add mov pop insb xchg pop in movsb pop bound addr16 movsl inc add adc test mov idiv jg sahf clc jl sbb iret sarb and and xchg inc jle sbb nop pop fs mov enter insl (bad) repnz or (bad) repz nop aas mov push xchg aas pop push inc and outsl das ret loopne xor je pop push xor je in cmp mov xlat jge fsubl (bad) mov mov inc out or (bad) sub (bad) pushf pop mov sub or mov sub (bad) in das movsb mov push sub shrl cmp cld mov xchg add loope push jbe mov or mov mov mov shrl sti shrl adc popf mov fs push inc (bad) add or ror in sbb nop stc test add xchg enter add insl or add lds loope sub add lret or jmp push adc (bad) or dec test sbb in test or jg mov in data16 sub or stos cmp xor or push daa jge popf and mov add push mov inc mov lret or push mulb fidivr fwait mov push rorb add pop push and and incb jmp add push mov pop adc xchg jle lret cmc pop push mov sub dec adc add ret jg and pop add and (bad) sub jne sbb jo add outsb clc aas inc pop adc test cmc out sub add jg cmp push pop lahf mov push mov pop fs or push (bad) enter push dec hlt sbb adc in dec add imul loopne,pt in ds cmp (bad) aas push push rcrb xor add push clc add icebp movsb mov pop in inc mov push gs push add out mov cmc inc jl idivb mov pop xchg (bad) mov cmp push xlat mov lret in addr16 cmpsb dec icebp repnz jnp popa popf jnp sbb pop in xor arpl push pop and add push pop pop jmp dec push add shlb ja cli or pop fdivp lret or fstps xor aas nop mov jmp lods inc add mov ficompl xlat pusha inc pop cltd push loop jecxz inc add jne add pop ss mov pop lahf sbb sub push jae out add ret or push cmp jg ja lret jecxz fistpll sub mov popf ret mov xchg das push add pop pop jg mov sub aam sub xchg mov xchg add mov movsb dec (bad) mov ds sub popf enter xor mov mov pusha cmp push icebp jg sub imul add dec test mov sub adc out dec shll sub pushf add or popf lcall xchg and mov out dec ret fldenv inc imull mov dec scas pop ret xor jg not test sbb add fsubp xor jecxz or fisubr sti into push inc dec pop rorb shll pop int outsb test int cmp fistp adc stos add cld xor pop and hlt sti add dec imul inc lahf mov test pushf testl clc push or mov pusha pop push jp xchg push arpl push outsb aas shlb xor rclb jae das jle test push outsb je orl test dec mov or pop adc xlat sahf test test add jle jp pop ja push shrl dec rcll or cmp sbb cmp test js push adc mov in pop addr16 cmpb or or pop mov fnstcw push mov gs out int mov icebp add xchg dec dec rclb mov and scas xchg jp cmp cmpsl lods je enter ficoml xor mov xor pop mov add push mov sub rcll aaa or pop das pop add fmuls jle push test mov popa fnsave cmp inc shrb adc cmp ja scas aaa dec xor xchg aas btr pop xor adc pusha gs cmp add push dec pop cmp push xchg dec jne lds out mov mov ficomp out and xchg hlt add adcb scas test push aas sub xlat call jbe jns es fsubrs loopne in scas sbb fadds adc or inc mov mov loopne (bad) fs and xchg shrl mov jne std pushf add pop fidiv out aas inc push sub jne rsqrtps popf in push add insl aas inc or pop dec sub xchg imulb shll or cmp and roll xchg in (bad) loope dec jo add mov xor pop flds rcll repz dec add xchg js jg hlt cld (bad) jno inc sub pop xor add lea cld dec mov inc mov add add sarl int3 push test add or andl xor or cmp dec loop jae adc bound jbe pusha cmp jmp inc dec jge enter ss js mov jmp inc adc push rorl cs mov push push inc (bad) xchg push mov pop inc mov scas mov ja cli das inc cmpl mov or xchg jo pop shr jae mov jg leave and add jmp sbb or cmp add and xor mov call int3 clc cmp call data16 jbe mov push aas and cmp dec lods add sahf je lcall lret fwait insl (bad) repnz cmpsb pop stos rcrb bswap jp or xchg push or pop jns add or xor mov sahf inc je inc jge jne add xchg dec pop aam movsb jge mov jle or add mov add add call rcr push mov pop add lret popa dec fisttpll loop adc mov sub loop int3 (bad) faddl repnz push push cli mov push xlat pop repnz xor jg cmp inc and xchg fsub mov std pop cmp push stos add push in mov jl mov jns pusha mov cs jg mov xor hlt pop (bad) push inc out daa inc and cmpsb lcall es outsb (bad) fbstp fldcw mov test mov xchg sbb mov pop aaa hlt jnp and cmpsb pop and mov (bad) cmp sbbl roll loop add int and mov push push or push pop add insb dec sub loop pop jg or repz sub in or push adcl cwtl and xor cwtl clc or jnp cmc sti mov out or pop cld inc add fist (bad) xchg lods stos jle int leave pop es pop adc test decl mov pop dec dec lock xchg sub frstor dec mov dec loopne outsl dec jnp inc push pop test icebp nop and cmp cmpb daa imull jl add mov in das cmpsb xor push aas out push ljmp push pop pop inc xchg mov lods stc add mov cmp in repz pop jbe jp mov jbe mov mov loope in repz push push mov pop mov (bad) daa ljmp (bad) or xchg push push ret xor push stos test adc into aad (bad) dec stc cmp dec xchg push push add push divb jno (bad) mov test pop xchg out shl push loop mov or inc add sti push dec jle fs imul or jg push add push push add mov iret add jnp or sbb in add cmp pop pop adc pop test mov daa or (bad) rorl inc or sbb pop sbb and jle (bad) mov das stos nop (bad) outsb sub adc inc jle insl or mov mov mov pop outsl sub xor push dec cmp and popf adc push cld ja xor cmp rcll ror sub test pop inc fbstp mov jp lock popf inc lret sar (bad) outsb sub push mov sub xor mov cmp jp,pt in inc nop test stos cmp push fildll outsb add shrb addr16 shll adc jg enter lcall cmp call loopne add xchg adc jge mov or je add mov test cmp xchg cmpsb push out fisttpll xchg add loope push mov or andb mov xchg mov push push or mov sub dec fsts mov cwtl loop mov pushl aas imul mov andl jns mov mov adc or int pop jp inc in sub nop xchg into mov sbb adc adc dec in es cmc clc inc fcompl fiadd push test (bad) jl jmp jle jecxz dec jb dec dec xorb jg outsb les pop push push stos and ds and addl lods bound pop addb mov negl pop sub fldcw iret in inc mov fldl ss addr16 lock jnp mov pop or hlt adc aad daa insl cmp lcall pop sub shrb sbb lods scas out adc push imul mov sub call test test outsl mov scas cmp xchg adc or adc rol and push repz aas inc inc adc jb out arpl (bad) sti adc cmp add dec jmp insb pop cmp jle add pop jge or jo (bad) lock fidivr pop scas push sub mov mov mov out testb cwtl fmuls push xchg imul add sub mov mov int3 je jle mov dec fs add pop mov jg cmp jnp inc enter (bad) test in mov (bad) outsb sbbl mov sub sub stc cmp mov dec mov out call lock (bad) jo lods divl or and dec ss (bad) out sbb (bad) bound xor fsub cld xor and or jecxz cmp mov or cmp dec or xor xor xchg adc dec ret stc insl cwtl lret push add pusha jp pop cld pop mov push cld adc add test sbb adc jbe mov daa jno cmpb sti jg,pn add fist data16 repz jecxz xchg jmp in ds mov cmp ret xchg ret and or mov out sahf cmp or add adc mov jge nop mulps (bad) jnp lods leave mov xchg xor jp xchg sti sub sbb push into pop xchg fistpl (bad) dec mov int3 push inc mov cmp push xchg pop call sub (bad) aad pop pop add or push mov mov in cmp dec out jp push mov add sbb jg and jp or adc sti xor xchg pop fs ret xor sbb push shl pop dec cli andb pop xor or lock into rorb mov jp xlat inc aad fcmovnu imul nop stc mov add repz std jg aaa loop lcall nop out push ja add sub aaa jecxz adc mov cli sti loope pop sub loop pusha xchg inc mov adc repnz cwtl sarb cs xor sbb imul inc std mov leave aas mov pop jo xor and sub shl int sub and loopne mov inc or cmc movsb movsb push (bad) push sbb out cmpsl xor fdiv aas pop dec push aam jns imul pop push in cmpsl jo sbb aas xlat cwtl dec push jbe push mov pusha aas stc nop sbb hlt jp sbb test xchg push imul mov push movsb sbb ss fsub push gs pushf imul mov sarb push pop iret pusha cmp xchg xchg aas daa (bad) ljmp or push in and (bad) in xchg stos add push push adc inc mov mov push dec cmp and inc and outsb xor ret sub add or test push clc loopne lods pop push cwtl notl scas push (bad) lret lahf sbb and les rcrl jns fildl andl xorb dec mov pop inc or adc mov (bad) movsb inc jne push inc pop mov ret push pop push pop lcall jmp jecxz cmp xor mov xchg imul mov in ljmp cli test dec push std cmp stos xor in jecxz xbegin jmp loopne addr16 rorl movsl cli testb lret mov pop mov or xchg add jmp mov add dec add push xlat fs dec add insl test or stos rorb data16 inc cmp mov or inc lret mov mov mov leave xor stos insb xchg sub fstpl sbb stos cmp mov pop js add movsb dec or dec aad mov pop push cwtl or cmpsl icebp sarb fsubl lock or or mov mov mov and add fwait (bad) out das inc sub pop add (bad) outsl (bad) fcmovbe (bad) fnstsw or pop repnz loop and adc mov cmp sub xor dec sub rcrl adc popl dec pop push pop mov dec loop xchg lea movsl jp mov xorb aad xor rorb pushf pop js nop loopne addl aaa add mov ljmp xchg sub and cmp sbb mov fsubrs dec ljmp in cmpsl imul (bad) test push pop fidivr xchg pop sub aam sbb fs std sub cmc adcb and ja bound add sub sub mov push ret xor jnp test ficoml les rorl jo lret sahf and shl xor adc and push test add xor cmovne jns hlt leave push jbe dec cmpl and pop mov cmp lock sbb jmp loop out xor aas mov push inc in repnz mov inc sub pop ljmp mov xchg sbb lahf cwtl popa push insb mov cmp or cmp and jge lock jbe es daa jbe add pusha inc and sbb es mov mov mov push fwait pop mov push repnz add fistpll or lret adc mov inc popa repz jae mov dec stos loopne jl and pop mov adc rep cmp add jg setp movsb and stos das add nop mov scas cmp xchg and stos movsb pop leave push addr16 pop mov inc mov push clc arpl cltd inc mov jge pop xor sub imul xlat mov adc (bad) inc mov add into (bad) sbb jge ret std mov fs adc pop pop testb aas (bad) mov xchg repz test mov movsb jecxz pushf outsl lea inc test iret loopne mov push test lea mov mov daa sbb rorb test iret imul bound push flds xlat rclb popf sbb and cld call jmp add mov mov adc out arpl pop pop sbb adc gs fist (bad) stos add and loop insl cs and jmp inc adc mov ss bnd xor xchg ss push add ficompl xchg ljmp inc frstor mov sbb pusha push or hlt incb outsb inc stc rorl mov sbb popf addr16 decl pusha icebp rcl dec fidivr adc cmp (bad) je or mov and imul sbb adc push and mov and pop loopne pop add idivl lock test push lret cmp cmp pop jae mov xchg mov rolb call in mov push xor ss pop and adc mov shlb lods (bad) mov xchg pop jne mov hlt jb ret movsb orb fnstsw add xchg pushf ljmp incl cmp push in lret test ljmp push cmp repz push es movsb or bnd movsl jg inc mov mov aas push popf add cwtl lods imull sbb hlt push dec mov out jbe pop xchg jnp mov aaa int3 lcall push pop mov xrelease cmp (bad) jle adc ljmp jge or or inc das insl cmp mov (bad) dec call in aad data16 pusha lods ret (bad) cmpsb out jne mov pop das ds sbbb dec pop (bad) (bad) push mov scas adc rorb sub pop icebp enter daa push xchg pop push lock mov or out jne (bad) dec in int scas xor pop pop mov inc das rol inc hlt dec (bad) cmp pushf add aas push dec outsl jg sub dec xchg mov inc fldt sbb and int jg or push inc cmc iret dec ljmp mov lods pop xchg pop push in xchg out inc jge outsb pop loopne,pn and loope or mov lock cwtl sahf andl sub add cltd repz sub mov sti daa add movq jg cmp xor xchg xchg pause stos or rep push mov clc push (bad) cmp jp and adc lahf not adc dec cltd hlt jp int (bad) (bad) lret ficoml or mov out fisubl push push daa add xor cmpsl cwtl lods add dec pop lock or rorl or subl jmp outsl in add aam xchg pop xchg add add cmpl mulb outsl cmc dec test lds hlt in push sahf xchg or ret cli mov cld push icebp cwtl mov push mov ljmp lret fs mov ret add xor pusha xor add or mov pop jmp int3 pop outsl mov cmpsl jae mov sahf or add mov mov stc push inc push sub in (bad) dec inc sbb xorl xchg int (bad) or iret jle push mov jno sub xor sub mov das loopne jge jg push js adc push jbe loop repz jmp mov jo jb jl jg pushf out es (bad) mov (bad) and frstor mov ret dec lcall pop lcall xchg (bad) dec lock mov add add pop call or jge (bad) xor jb xchg push pop insb dec lahf and ljmp add roll stc and add int stos cmp inc xchg pusha jecxz cmc iret and jnp,pt pop out pusha push in fcomps es or push pop mov clc add rolb sbbl mov add es iret mov mov outsl add popf and lahf lock (bad) sub fdivl mov (bad) add add (bad) mov or push add jno jmp jle js or icebp cmp add jp inc pop test push jns jnp popf rclb push pop mov jmp das and and xor js push outsl xchg mov or fstp mov mov (bad) jle jge hlt dec (bad) int cmc in xchg jb dec cmp mov jle lcall das pop add mov rolb mov mov jmp std xchg sub dec das inc adc cmp pop out imul sarb repz mov int ljmp and decl sub icebp or mov iret (bad) jmp mov subb ja dec xor or (bad) xchg (bad) enter and testl movsl jge jae test or add jne and or sub or gs sbbb insb sti and cmp test mov jmp push pop jmp add or inc and (bad) rep xor add out fistpll sub js and scas or out jle inc shlb dec pop iret fstl cmpsl adc push jmp scas stos lds stc pop add stos ss sbb mov adc aad jge push rorb sbb sub pop ljmp sarl outsl orl popa cwtl cmpl mov adc pop cwtl xchg adc (bad) push sbbl imul dec loopne xor push dec push adc gs clc sbb jg je stc into xchg dec push add jg sub movsl mov mov add jmp push sbb or adcb xor mov ja addr16 mov inc lock mov pop inc sub lret jg mov fbstp sub fcmovnbe push popf push rclb gs stos mov ljmp mul jae sbb and fsubrp pop add mov or pop add push xchg dec mov (bad) push dec fisttpll not or into or push jns or pop ret add cld test jl pop outsb adc daa mov ds pop jge fiadd or jg popf (bad) jb push mov int fbstp cmp into push imul add out iret cli dec and imul psrlq mov and fisub adc mov popa std (bad) adc ret jge sub push sub inc mov mov outsl scas or sti mov push adc mov loop lahf out sahf outsl mov imulb xorb ret insb xchg loopne mov and or pop push add das mov add gs neg mov jo cmp push loope xorl push add pushf mov sbb dec push nop dec add fdivl pop pop stc cmp push push mov in pop mov and inc mov and pop adc daa fdivs adc cld xor jg cmp lret loope or daa sub xchg cwtl cmp inc daa fidivrl mov mov cmp push and pop xor (bad) hlt sub xor pop pop cmp pop repz leave jecxz inc and adc jno aad inc imul add stc iret fmulp lahf mov and adc les pop add xchg sub push mov sahf test cmp lods jmp xchg dec out out push bnd cmovp aaa xor pop cmc xor push cld push mov push add push nop cli adcl jnp add mov fiadd pop cwtl ret lock arpl mov mov aad mov lods dec pop inc in scas mov mov xchg imul sbb pop mov rolb push mov (bad) push gs std mov movsb and sti (bad) aaa cmpsl lds clc lret mov ss mov imul pusha sti flds outsl and not mov and scas mov and and outsl add cs and add mov fdivr (bad) push out jg and fildll mov pop dec pop lea mov bound sti arpl rol jg pop enter push xor rcrl mov out imul inc pop pop and push push inc xor daa mov sbb fstpt and pop dec jmp popa aas mov ds (bad) test xor mov in sarb pop and mov stos fcompl mov add add push push adc cmp mov ljmp or aad pop sub pop add mov (bad) jb xchg imulb mov mov stc pop stos subb loope in mov sub mov and sbb add sub sahf mov or sbb xor mov loope pusha jge add mov cltd daa add into push sub std (bad) aas add int3 in stc mov pusha push inc and lds mov push mov sub movsl inc ret pop imul jbe mov add push push pop rolb add hlt mov add xchg pusha orb jg rolb pop jle push stos and jns cmpsl xchg nop call in cmp dec lret pop dec xchg loop add pop cmp add out test push pop pop lds push add xchg jnp xchg xchg mov imulb add ret (bad) jbe mov in lcall push jg popaw inc movsb cld loope add icebp pop cmpsb mov dec cvtps2pi insb fidiv xchg pop push mov sub ss add mov (bad) out arpl aam jg stc jb ret adc sub orb pop and push loop cmc test add test ja outsl neg inc push roll or repnz mov (bad) lds dec iret pop lods cmpsl mov mov jmp mov cli adc cli pop sbb add mov rorl add xchg mov ss std shlb pop sub out sbb lock and jnp cmpsl (bad) sbb mov pop xchg daa push inc daa jp jae mov push popa in sub sub add adc xor push add lock pop pop sub or xor add push jnp add cwtl mov pop inc dec imul jbe pop in lea gs sub test lret pop fisubl xchg inc sbb rcll push daa jns mov or clc mov cmp jge fisttpl movsb pop aas jge aaa idivb mov aaa xor pop mov out jle mov aad pusha jg and pusha and mov sbb push int3 ficomp add leave cmp or add jnp mov mov adc popa insb mov cmp sarl into xchg mov mov mov (bad) aam lahf je adc inc add sub push aad inc mov neg add xchg push int movsl inc mov pop push out cld xchg push imul pusha mov addr16 sub push stos test mov sti pop enter pop add popa dec xchg pop icebp pop mov mov test (bad) ds adc imul (bad) sub jo shrl arpl pushf push aas and popf jp pop adc js cmp rcrl dec or pop add inc icebp pop jg pop clc in sub cmp mov mov and test mov fisubr mov les mov pop xor ss mov xchg leave or push gs add mov (bad) inc sub (bad) lcall (bad) ss or inc and ret push jmp sub push lock test or and and jbe scas pop sbb and and fnsave pop in (bad) fbld sub lret mov jne je test pop mov pusha dec push cmp xchg lcall ret push and push mov scas inc lret cmp movsb add imul jae les fsubrl cvtss2si sub mov lock jg push cld or pop sub push loopw or jle sub inc and cmc adc or add std ja lret sub test je imul lret ljmp pop aas (bad) pop mov lahf jnp pop sbb mov mov jae ja scas xchg test roll je pop cltd int3 push cmp dec and push call xor icebp fidivrl mov icebp or js push mov bound mov es lahf sti add jb out shl sbb nop fisubrl pop push adcb or mov aas jl (bad) repz ror loope ss jae xchg incb clc repz fcompl stos jb mov jnp inc in adc xor loope add jmp pop bound enter pop jle cmp stos ret add push dec mull loop lret fisubr sub xchg cmp push iret cmp bound les adc mov aaa jl and ljmp jp or xor mov adc xchg dec dec lods or test popf (bad) or movsb fistp jmp loopne pop in (bad) out rolb (bad) call xor xlat or inc cmp sti push orb in xor xchg fstl dec mov jg inc cmc mov (bad) xchg daa adc inc clc call shl rolb adc ja mov cmp adc movsb enter call inc neg or xchg test pop xchg xor sub sub jns mov cmp adc jmp push in mov pop scas rolb lock and push cmp cmp js push sub sbb fmuls cli sti es mov es outsl pop setg dec mov mov sub fwait mov out jg add add fcoms mov cmpsb in jp pop jo dec into add and sub inc imul push fsubr (bad) xor movl mov pop loop loop pop iret ret aad lods xchg pusha out aad pop outsl call loopne add pop ja dec in (bad) dec add notl mov mov mov xor jle lret pop sub jge or or push mov inc cmpl inc cmp jmp sub nop jo or ds jmp je dec or add jl inc cwtl mov cs (bad) pop cmp push xlat mov popf add jle xchg ret mov hlt sbb mov add sbb jge sub add or mov push mov sub xchg cld mov add pop gs push jns popl add adc cltd jle or push mov insb gs push add xchg or (bad) (bad) (bad) testb pop stos das xchg fimul mov mov lret std sub cmp das add inc or repnz cmpl mov xchg jbe push add rcll jge add mov fnstsw push jmp movl adc fwait in mov or mov inc dec cmp sahf cltd adc pop jl pop pop adc roll sbb fadd add in lret pop stos mov fs adc testb jg ljmp repz cmp fisub int3 aas stos push or push sub mov or push ficompl (bad) push push or repz scas (bad) dec cmp int3 sub and jle xchg add push pusha push mov js cmp xchg outsl pop push push mov or fistpll add iret adc fiadd pop or int incb or hlt pushf daa pop movsl jno outsl sub xchg or das xor mov jl pusha test mov push pop xlat xor add jae pop loop mul mov bound xchg sub aam ljmp js or pop mov addl inc cmp lods fsubrl dec add mov push xor jp aam popf add ljmp in das sub cltd mov insb rcll imul push popa addb and push push mov or loope or pop cs push push leave lock pusha add ja out cmpsl loope adc pop pop adc pop xchg adc mov push xor xor cmp xchg push inc dec roll ret push sub sub mov movsl xor jns lods mov cmp inc call int3 fbstp data16 das adc fstps add (bad) (bad) in mov xor cmp pop loope aad (bad) jg pusha adc pushl mov and scas cmp loope and push cltd push dec pop adc push fsubs sub or mov fisub (bad) movsl insl aas mov testb std pop push lods in dec ret dec popl fs pop xchg pop shrl push pop add push dec mov cli pop iret adc bound xchg shrl push mov sbb mov rcll add pop lods iret movsl divb push cmp insl dec popl iret jg sbb xchg and add (bad) (bad) cld mov xor dec sbbb insb repnz mov dec and repz fsubrs fstpt lcall dec xlat lods es mov sub push mov (bad) dec sbb in dec xor cmp test jns push cli dec cmpsl insb or add mov jecxz xor xor or xchg rep icebp jmp aaa jp add cmp sub mov push ret xchg push and jbe popf add loop xor in in mov in pop lahf (bad) jo hlt xabort xchg mov push into pop push daa fidiv push push rcr jl (bad) sub cs packssdw shr mov stc fidivl mul jp mov mov fsubp add loopne sub (bad) or mov pop ret (bad) xor pop dec shll ljmpw mov or push dec jb out xorb pop or icebp pop push push popf inc out push jnp ja adc daa xor jne mov adc movsl add loop std or push and sarb inc or mov shll pop lahf aaa and and add pop in xchg push add pop dec sub rclb pop out inc dec jmp int3 dec aam scas push movsl and shr movsl sub mov and push sbb mov (bad) pop jns inc pop scas sahf out cmp inc push lock sbb pop sahf jnp xlat inc jmp pop and shlb add adc loope add mov rolb sub in jp add sbb pushl ret adc mov clc clc (bad) ja and xchg dec adcb cltd inc lock sahf jge jmp sub dec pop add jne inc push (bad) cmpsb jbe inc lods in inc or out add adc in daa daa jge lds push (bad) pop cmp out fsubrl add or lods sub sti mov xchg fdiv xor (bad) inc xchg loope pop adc sub pop loopne ret or push add adc mov es xchg pop cmp add (bad) or es jmp ds shl add stos divl sub or or loope or push fucomi and jge iret xor (bad) cmpsb std dec jl fstpl sbb arpl xchg or and nopl hlt inc pop pop push dec cmpl roll roll add pop mov xchg out cltd lahf rcl dec jle inc lret add push pushf aad or cmp and sbb mov mov mov fnstcw sub xor pop or out dec stos lock xor xor stos add inc or xchg sub dec out xlat cmpsb cli mov mov pop in and lock pop pop mov mov les mov mov imull add push inc lret add nop jge xor iret ja rol dec stc add movsl pop aad outsb or cmp popa int3 stos cmp lret xor or or adc mov (bad) sub mov hlt push int3 and lods xchg push imul sub aam push xchg orl mov ds xor notl (bad) shr mov aas sub aam sbb inc iret xchg les pop mov in and xchg rcr sti add icebp push sbb mov adc std cmc xchg mov in jb rclb inc in daa mov ja mov jmp popa lahf cmp (bad) pop adc arpl (bad) jle adc outsl and mov pop or out test jle fisubrl (bad) cltd sbb pop or cmp shl das mov fcmovne jge cmpsl pusha add or negb push movsb adcl pop adc test loope div pop cmp ja add and xor cmc push movsb pop in clc insl lcall std pop push (bad) sub pop scas aas fisttpll push push mov icebp cmpsl fwait in inc repz test inc and fimul (bad) fsubrl jmp sub lar mov repnz add pop test lret cmc pop inc nop adc add rcrl add mov jg or pop shrb xchg push jl inc sti pushf and pop xor xchg xchg gs adc cli stos mov push xchg jnp subl idivl add mov negl sub mov popf repnz cltd faddl decb jnp imul adc dec fiaddl add stos and push jno jnp jmp outsl pop add flds pop add fisubl sub push rcrl add iret xchg test out jg rorl mov orl or xor leave or sahf mov adc mov dec dec mov xor or dec mov daa cmp pop sub outsl or xor cmc and xor leave mov xor xchg test or adc pop dec add (bad) push push pop pop aam or fadd and lea inc pop imulb fisttpll mov cwtl and xchg cli mov jg repz adc cmp jmp lea or and iret adc out adc fwait icebp out dec (bad) (bad) or pop stc jl clc sub push push bound pop inc bnd mov sub or cmp test shr add and ja jg repz or loopne pushl or sbb jle aaa mov cmp je add xlat lret scas pop jne mov mov fist std clc sub popa rorl push adc sub mov push xor dec sub ds add pop pop into bound (bad) cmp push add xchg jle pop sub cmc inc sbb jge sahf addl leave jno ljmp clc pop ds push loop push adc pop jle pop imul and in adc push add outsl jge fsubrl jle xchg daa stos jg mov add sub adc addr16 mov xchg pop sub in fnsave push ret mov push xabort add mov int3 xchg push xchg cmpsl and and test imul pop xchg pop mov mov mov rcrl fdivrs mov push pop bound loope insb rclb mov jno mov mov adc mov clc inc or jae or movsb aas (bad) outsb hlt lods xchg aaa sbb xchg ret insl xorl bound xor fwait das loopne repnz mov gs mov inc adc ret xchg dec or add add xor (bad) aad jo add jne shll push push adc push push mov mov adc jge leave dec shrb or cmp imul pop notl mov adc cmp mov les or push mov ss out xchg mov es or lea sbb cld sbb es jp stc dec mov jne loopne out jb std jle or xlat (bad) (bad) mov dec mov adc dec pop rcl fbstp sub jecxz or hlt (bad) cwtl add mov decb xor pop outsb mov jns repnz out cmp or or push pop daa (bad) dec outsl nop (bad) fisttpll out aas pop out and cmc inc es or fs sbb ret movsb jo jns rclb fnstenv leave add enter mov repnz imul addl outsb and test lret cmc add stc or or pop and sbbb mov in dec add jecxz inc (bad) in mov aaa xorb jle xchg mov cs dec add (bad) rcrl and or xchg ja or iret sub cmpsl daa loope lock add lods add and or iret xchg and cmp ljmp add fldl das cld jg jmp mov div jns mov push add jle push push push sub mov out ja loopne add scas les adc push lahf loop notl dec or pop mov adc scas xchg cmp mov ja push rclb jle mov or pop std and sahf push lret lds push (bad) leave add cmp and sbb add lret sub addl add loopne or (bad) (bad) aas or xor out cmp or or daa pop aam cmp jmp jno dec (bad) mov ret cli nop movl dec xor inc sbb test or lods out mov cmpsl leave pop lret out inc add ljmp xchg add xor and loopne inc mov dec ljmp jnp sar add stc arpl outsl aas push pop inc pop and sub out inc stos daa push pop and addb or push (bad) pop mov dec mov add cltd mov add inc (bad) sbb shll adc xchg adcb xchg xor mov add push xlat in popl (bad) ja dec jle cwtl sarl cmpsl jae adc gs add add jb lcall dec js jne cld pusha sub push insb and std loopne and imul xor data16 lahf jno leave push inc ret adc mov pop repz push add add cmp aad xor std repz jg mov jl push in movsl fdivrp jp sub jbe add sub mov js add add sbbl mov sub mov popf add cwtl aas ja xchg int das sahf mov push test fwait mov jg aas test push pop pop dec cwtl loopne jns sahf cld mov push test inc lods call push icebp jae pop shr xor sbb adc daa sbb arpl and jp or ss cmp sbb popa mov or mov push pop and test push mov in jo jge fs mov jg movsl std cmp ds sub rclb es outsl and stos mov cmpsb popf mov push (bad) shlb popf out mov mov sub rcll test jge popf jg insl sub pop xchg (bad) add test loop xchg test roll inc xchg adc dec sub inc and lods int sub in add mov mov push into or jge or jb orl icebp xchg pop sti aas (bad) lods mov pop out dec movsb fcoms mov sub cmpsb push add (bad) incb ret ljmp gs mov mov stos rolb ficoml push mov add jg inc out fldcw push push sti inc push in scas pop jl and lahf lds lods fldl and pop fs imul xor or sub cmpxchg push (bad) mov imul outsb and cwtl add jp add sub or lock mulb pop stc mov dec dec add jmp les xlat mov mov add cmp mov das and imul int3 mov inc and fdivr dec nop or inc inc cmpsl jl mov or pop push pop sbb sub pop add mov mov or push xlat ret add outsb jg push mov test out sub add jp fmulp add push sbb movsb add insl fistp cli es jmp das mov lcall cmove xchg mov clc jnp mov inc pop pop adc loopne test mov push inc and nop mov mov loopne sar cmpsl idivl dec jmp test xor jbe cmc push dec scas stos cmove les sti lods popf or jb sbb add add out add jecxz pop cli and (bad) pop jg push pushf xchg test xchg iret rcrl inc mov in sub jge jno das pop push or test xor mov orl push pushf xor imul shrl shr lret and pushf and cwtl pop push dec int3 inc xchg add cmp fistpl int lock xor test dec dec adc icebp push jle outsb dec std xor out mov and mov nop aam or dec aas push mov popa sub cld jecxz xchg mov or pop pop icebp jo pusha jmp les cmp push jns pop aaa lea add lods cli inc pushf mov in xor add or ljmp scas jmp dec fistp push add sti lahf cmp mov arpl jo mov mov les aaa add rcrb (bad) (bad) push (bad) adc mov xchg pop insb mov dec sub jl sti dec add xor loopne xchg sub adcl movsl mov push cltd ret mov xchg (bad) cmp xchg loopne ficoml stos xlat fiadd mov mov leave jns andb dec decl jl repz (bad) rcrb imull (bad) mov inc stc icebp fmul loopne and inc or inc call icebp cmp add scas cld in pop lock sub das fimul flds loope repnz or (bad) icebp xor scas idivl outsb push adc add (bad) fnsave sub adc gs lock icebp rcrb push add call jne push push dec dec imul adc scas xchg das add cld pop (bad) popf loop push push add pop push push ds adc in sti loope cmc pop sub add dec je insl push cmp or je loopne xor fisttp add pusha cmpsb mov push test fxch ret ljmp icebp (bad) mov mulb jno mov or nop pop stos cmp rolb mov xor gs dec insl aad loopne add std pop mov sahf or inc dec mov add cmp lcall adc (bad) inc sub jge sub push mov pop xor add jge push mov sub jg push sub rorb pop xor mov into add pop adc jmp pop push push insl jg mov xchg or fldt and pop mov aad jno aas add out pop js mov popa nop sub (bad) inc aas or fsubr add adc ficompl arpl rcll sub sub das mov pop lcall or xchg not lcall push pusha popa pop fnstsw or mov daa call dec push mov sbb pop cltd cmp dec inc fdivrs stc jp or insb mov or pop sbb fdiv int3 jo cmp lret mov add (bad) cs loope bound or mov (bad) pushf icebp sub mov xchg inc mov daa clc jge inc and rolb inc (bad) pusha mov add aaa ljmp push in pop mov cmpsb add push mov fisttpl add ljmp cmpsb add xchg add rclb inc std add or out loopne ljmp aas push xor or mov jmp mov scas fldcw imul inc xlat out ja subl jae xor out jns and xchg imul pop jnp pop xchg and xlat jns cs pop mov and in cmp dec nop sub push sub push cmp adc push and outsl mov je daa mov iret xchg jo pop mov pop aaa sti bound loopne inc sub pushf sub das mov mov loope inc out jl scas bnd loopne (bad) mov mov imul daa pushf mov out aad fs cli (bad) or rclb add cmp xchg stos xchg jmp sbb or or jno imul loopne inc repz dec inc inc jno (bad) shrb pop cmpsl je xchg push in push inc adc pop xchg mov xchg jmp shl rclb dec test push lock mov push ljmp xchg dec in lock sub outsl mov add int stc and dec les lahf pop adc jne stc scas fistpll mov nop sub cmpl cmc mov jl enter dec fistp xchg add pop push outsb jns cld in shrl or div outsb inc sub imul mov fmuls das dec mov sbb add and aaa pop popf inc pop sbbb clc xchg push jg flds nop push add add mov loope inc mov aas and fiaddl dec cmc jae addb call cmp pop jle sub pusha push or add fildll sti pop mov in popf leave xor aam ss pop cmp das or fs mov nop pop adcl sbb mov adc push jb orl or pop dec pop stc xchg xchg jmp adc and sub or xchg pushf aam jl mov inc mov call shr jne jo test xchg (bad) pop push xchg mov (bad) andb lods out rorb idivl int std popa sbb xchg push and pop aad cmp jne or dec out add popf mov add test jae push int (bad) loopne or add sub jle pop mov ds xchg sub xchg push (bad) test aad push mov add and repnz fldt or lret bound mov add add lea lret push pop push ja cld das je pop lahf jnp xor jb test test xchg clc mov cmp leave pushf push pop push (bad) lret xor push sub jl outsl cmp mov es mov xchg rcrb icebp aaa jno (bad) mov mov das sub and pop push rcrb loopne adc test jp mov lods pop dec lret lods mov out pop pop hlt icebp (bad) push adc in push addr16 mov jge mov jl test sub daa bound or stc dec inc or and lods jl pop std in adc in inc (bad) jnp scas and add movsl enter out aas flds shrl sub cvtdq2ps (bad) jns mov and or pop lods add cli xorb jle enter aas gs add gs and mov xor out cmp push adc roll xor push pop inc lods sbb aas jge mov pusha pop mov aad cli js lcall jne add sbb pop (bad) dec das jo mov fcmovnb push popa mov addl in popf push dec fistpll aas sub inc nop pop or jl (bad) fmuls add pop mov mov pop pop jl add or icebp loop cli lods mov cmp lds mov scas lret ret add (bad) jge push mov je dec adc (bad) mov pop into and popf xchg or sbb std pop loop mov pusha and pop test stos mov push xchg cmp fs inc popf aam sub cli ret adc mov add add push (bad) sbb (bad) push cld les mov pop jo or inc jle pop pop test add and push jb popf xor inc pop lds nop and rorl stos pop sbb ror pop std addr16 and sbb or cmp xlat jg lcall or adc fadds adc xchg adc stos sbb add test mov sub push mov lods test cmp cmp inc or dec inc mov imul ret push ret cmpl test pop pop popf fldcw gs jae add rcrl xchg jnp mov xchg mov xor pop loop jge mov push push (bad) mov aaa cld jl ds push loop imul add les dec outsl int3 out test dec jle sbb mov sub sarb sub push xchg pop (bad) jg pop add inc pop outsb pop mov mov arpl sub push mov test jo jo or pop (bad) inc jl pop pop inc testl xchg imul imul add popa sub stos xor das sub mov or repnz xchg insl inc fmuls sub push (bad) pop or mov fdivl sub xchg xor insl (bad) jecxz cli in jge push mov lods lds scas push mov jb sbb jmp dec dec jo ja dec adc xor lods test mov (bad) xor add nop and and jns into shr cmp jae mov pop mov pop mov mov jp popf inc add jo add jns outsl or xchg int3 sbb or popf pop outsl jl incb in les into jp imul je stc pop std clc test cs or in xchg jle add sub jae addb mov sub adc mov mov and jl pop sub push add fsubrs (bad) mov (bad) mov pop stc or xchg mov or push xchg ficomp mov push jne cmp pop adc loop or call xchg stc pop add add cmpl jne sub int3 adc dec add mov cmp (bad) hlt pop bound pop enter daa data16 pusha pop pop pop mov ficompl mov ss inc dec inc fsts push stc sub or mov or mov pushl andb pop push fs arpl in mov adc cli jle sbb aad out sub mov dec adc fcmovu xchg idivl cld shl mov push push sbb mov out mov nop sub icebp aas jg xchg jbe dec andb inc out add inc or aas xor pop sub das aad cs mov dec dec push mov jo cwtl xorl pop insb or xchg movsl fisttp inc ljmp pop (bad) in (bad) dec dec adc pop je les je push pop pop mov imul aaa add adc (bad) jmp jl sub addr16 add dec pusha out in lret outsb sub sub jmp inc push pop nop pop cmp push jecxz cs icebp pop mov loopne daa fstpt notb xor loope,pn cs fildll out jnp push sub mov in imul gs cmp cmp mov cmpsl dec jnp adc fnstenv gs icebp (bad) mov ret add inc or repz shlb mov jnp in insb jg rcll popa cltd les rcll sbb fsubp jmp adc mov adc add push mov enter jae nop sbb mov divl jg push adc cli jl int3 cmpsb imul inc push jg (bad) or adc in mov push mov pop (bad) lock push pop xchg aas loope outsb shl pop decb mov or adc jmp inc push pop mov sbb adc pop nop add movsl mov add push pop sbb push dec out pop dec cld shll cmpsb pop out add insb andb rolb into aad daa fmull jo push fsubrp cmp std subl add test or aas adc mov into xchg jecxz imul fidiv sub inc and push mov jp and fisttpll pop aaa mov clc push gs (bad) pop mov inc orl cmp retw sbb inc cld pop dec mov xor pop jg sbb mov sub inc pusha jmp out call mov xchg dec adc mov outsb and push imul inc xchg sti add push and push je into (bad) aaa outsb pop rclb sub aas ds or mov sti imul inc jb push imul mov loop nop or ja xor in cli xlat sbb repz jmp dec pushf push (bad) in jmp push jns jbe sub lds mov imul daa sub (bad) rcrb and es push and mov popf outsl push mov mov jo lahf pop jl or mov mov movsl mov fwait int3 or adc (bad) bnd das push adc or or ss adc sbb cs or repnz or repz add rolb and jmp inc sub aad decl ret stos mov push mov add ds push ds stos icebp cld sub idivl inc in mov imul das cmp test and jb jg inc cmp out nop xchg jmp xor fildll pusha push adc pop dec push in leave xlat mov and sbbb push ds sbb push jmp push dec out xor and add xor push dec fstpt add add mov fcoms clc stos inc je js xor cmp xor hlt movhps push lahf xor add repnz jg pop or add mov cmpsl cmp cwtl or pop out aas or pusha nop lahf pusha ja shlb add inc fisttpl push clc incb imul daa fistpll mov push cmpsb fcompl or lea cltd mov ret or and mov xchg sbb jg loop rcrl cmc test mov or or jmp push and (bad) popf add mov outsl mov or imul mov mov ret stos sub cld jmp popf sub (bad) iret popa cld cmc mov inc adc pusha or adc movsb sbb mov and int3 add ja xchg daa pop add push movsl aas movsb lods stos add in int inc or jb jne cmpsl mov jl cmp add pop dec mov movsb add std add and add pop mov (bad) jno scas jg daa out jne sbb sahf popf add or outsl jge dec or xor ljmp and mov out rcrb adc push nop jg mov adc rcr push (bad) fimull push jno lret fbstp insl pop and cmc push mov xchg outsb mov mov add sbbb and xchg (bad) stos jb mov popf add adc enter sub dec add cmc aam clc push xor add or cmc jg cmpsb ljmp xchg ljmp sbb add jg getsec mov pop cmpsl push sahf daa rcrl add enter mov adc adc or jl dec cmp jbe stos push pop into push cld pop rclb mov lret adc incl std scas jp inc push xchg xchg mov or mov notb or hlt out jnp adc pop or push mov mov sahf mov cmpsl or or push scas dec xor pop jo pusha push clc mov cmp rcrl lret pop add repnz leave mulb or data16 xchg outsl loope cmp fmuls pop cld and aas cmpsl sti lret pusha jbe push jl in sbb not hlt cmovno xlat repnz dec ds js add test in push or mov mov das jmp push pop lods insb mov lret das xchg jle enter pop dec xchg dec mov add jns inc out pop (bad) out ret jl or xchg ja outsl sbb hlt dec add xor sub jbe dec mov gs mov test inc xor push add push jbe mov daa outsb push nop or sbb stc jl add jo ss addl mov lcall mov mov push cltd and (bad) jle mov (bad) das ss jmp sub insb and jecxz push sbb adc push stos cmpsb fwait sub pop xchg push jle sti push add mov push push lcall xchg xchg jg jl adc orl and std jle aas (bad) in fdivrs out jge sti mov pop cwtl decb call pop add mov sub xor popf outsl pusha pushf (bad) mov es push add and add loopne cld jge mov aas mov mov inc mov inc movsl repnz xor cld jns add xchg jmp inc push xlat push loope jg mov loopne mov rcrb sub mov jbe cmp jnp sub rclb jg lret movsl and jno mov xlat outsl push push xchg js xchg push mov fildll push mov mov imull push fcoms insl stos jnp lock jecxz and addl adc out mov push push (bad) mov je std ficom push cwtl adc loope jbe add leave xor pop jg xor sub jle ret sub inc xchg aam jne std call xchg in pop push mov pop rorl ret pop sub cmp jecxz jmp jp dec jle lods fnstsw int fdivr jbe sbb imul in das stc push repnz inc xchg pop xor rcr (bad) jnp repnz dec mov int or mov add int3 push test sti int mov xchg mov ja mul push adc jb das call pop or test sub push or dec xchg jle rorl or adc sbb icebp movsb jmp (bad) add push push push mov decl lock jmp not push (bad) fdivl iret dec and in jmp out (bad) daa shr out xchg pop xchg cmp or xchg outsb dec push scas fs call ljmp inc sub aaa push (bad) je popf popf fstps mov add push push pusha ror jmp ja (bad) out sti lods rcrl xor loope jmpw lea sbb sbb pop sti js mov mov (bad) test jmp or inc mov stos sahf decl test or pop pop jmp adc xlat jge jecxz arpl and mov push (bad) in push mov out add inc sub pop xchg inc fildl imul mov inc (bad) and mov pop adc push stos pusha jns je add neg add push cwtl scas sbb jge cmp push xor mov jae mov cwtl mov jbe xchg shlb pop push jmp clc nop cmpl (bad) sub in and add or stos loop xlat repnz dec loope fcoml lds mov dec test or mov xchg jg push enter jl add mov cmp fildll add push dec out shrb out ds ja or rcr xchg test mov add iret cs repz inc mov or jnp popf push jo or (bad) xchg mov and lahf clc mov (bad) push push stos push sub das pop sarl in push notb mov add jae sub or decb push push aas sub jb and adc jmp dec mov xor dec aaa dec mov pop add dec add pop xor fsubr cltd jns cmp jl jns or push shll jmp add push in mov outsw pop or adc mov mov inc fisttp clc insl mov mov add out idivl inc sub icebp mov inc mov insl lahf int3 cmc xchg stos add rcr cmp push ret loope add pop scas je xchg pop sub add jecxz add cmc cmpsl leave pop dec sub imul lret push je dec js out inc adc mov (bad) das pop rcl int3 divl mov and fdivrs sub cmp mov lret aas dec sub cwtl lcall xor leave or push cmc addr16 mov adc push add sbb fxtract cmpsl pushl cmpsl fnstsw sahf or dec sub pusha mov cmp xchg pop xchg xacquire out aad mov and sbb or adc lods mov cmp sub or bound stos add imul lahf and lret or movsl push mov test push jl rcrb add add scas push dec push bound or call loope mov flds sbb xchg (bad) jns add pop es shr ja adc mov mov inc push cmp push pop pusha test xchg jg or in and mov push mov es pop push nop sub in mov xchg pop pop lret std sub ret mov jmp push fsubl add mov pushf sub and push cmp sub mov ljmp push mov aad pop xchg nop mov push seto dec in jecxz pop mov rcl stos lret cmpsl dec mov inc pop adc sbb (bad) cmp fs (bad) push stc sti inc cld ljmp fsubrs or subb dec sti pusha popf fcom rcrb pushf add (bad) (bad) add testb lcall orb jg inc add mul sub pop push sub adc push fstpl incl js add fdivrp cltd rcrb jno push xor mov or aaa add lock add adc daa push jne xchg mov pop sub push ds push dec add sub das or add test shrl push jl xchg jbe mov dec mov dec mov int3 sub push lcall push fild pop popf clc sbb imul enter pop idivl add cmpsb loope and fimull push addl push push popf mov loop cmp sub movb lret test pop push hlt mov rdtsc pop push cmp cmp push jb scas inc cmp jns push or stc stos jmp xchg mov fdivl icebp xchg inc outsl mov pop jge decl iret or les stos sbb sbb add addl pop push popf pop daa xchg jg mov (bad) mov cmp jp jmp clc or push aas inc daa arpl add xchg fcoms push add adc sarb adc int3 out je scas sub pop divl aaa lock into jge mov ja or popf and dec scas or or push add jecxz cli icebp (bad) mov (bad) push inc xor pushf pop xchg jnp leave jae daa in xor add lods scas inc pop sub xor add mov loope dec xor outsb adc inc dec dec call adc sbb fwait lock inc pop mov arpl ljmp cmc push mov repnz push movsb dec pop dec add xor lods and (bad) das mov shrb test gs dec fldenv out leave fist scas mov fidivrl sub idivl mov leave add rcrl or inc mov mov pop roll aas adc sbb sub inc data16 add jmp mov pusha mov jmp cmp pop je bound popf lods pop addl jnp and ret cli xchg mov pushf dec ret pop sub adc add and loope outsl (bad) dec adc xor or jne dec lock shll int3 pop test mov or fbstp or insb sub or movb push arpl in xchg (bad) popa jb lret xchg mov cld dec or lcall or adc or mov pop xor adc cmp (bad) push push mov dec pop xor int push gs jne lods jbe and add lea inc ds in push cld adc dec loop imul fnsave lods ret outsl mov and mov adc xchg imul pop loopne and mov xchg adc lahf (bad) in jbe arpl jge incl imul and ret jmp mov mov fcoms jnp push lret loopne,pt rcrb xchg pop wbinvd mov and mov push cmpsl (bad) jne jmp dec sbb outsl xchg mov fcmovnu or pop cld (bad) jo cmp lds fiaddl ja xchg insb sbb pop sti jle inc decb xor nop mov xor popf inc mov ss dec mov pop js mov (bad) imul pop or fsts xchg das fnstenv gs mov movsb repnz sbb push lods push adc addl neg rol lahf rorl cmp into mov idivl jge mov out (bad) sub mov movhps jbe clc std pop shr push push data16 pop pop mov fnop (bad) push adc jp cld outsl sub dec mov mov (bad) push jl mov push cmc inc or popf xchg or jnp int3 lods xchg push out bswap or xchg sub out sarl push mov adc shrb lcall push stc rorb mov dec mov push ret push bound and fadds jecxz dec lods std test sbbl mov sahf insl jg insb add (bad) push lds sub das pushl sbb or fdivl mov outsl dec add mov (bad) hlt cmp dec je add movsb inc jp push mov mov jmp lahf jns adc mov or jae,pn push push jno push pop (bad) jnp adc pop push in pop scas cmp call testb repnz ds sbb jne sbb xlat cmp add pop stc fidiv dec jp pop push test jae add jl (bad) jnp aas or xchg push pop xchg in sbb mov mov inc sub add fnstsw in fldt mov fldenv movsb or and jmp jno inc push bswap movsb stos (bad) testl imul dec cmp adc cld (bad) fsts rcl shrl push jno aas adc es mov push mov mov push jns cmpsl and dec jb sti inc fldl pop push icebp push cmp test add jnp sti jne mov stc repz loope cmpsb mov outsb sbb jmp pop dec test push out (bad) pop daa jns in add (bad) dec loopne iret push pop std xchg popa pop cmp xor (bad) das mov add xchg xchg das pusha inc push das push lods fsubrp cmp pusha popa test ds fs add lods hlt aaa shl xor imul pop mov pop jg fnsave cli sbb and leave mov add movsb mov roll sub xchg je push popf pop shl push repnz sbb sbb ret or enter idivl push popa or jl pop push imul pop xor je pop inc inc jbe push jne xchg mov xchg ret inc outsl pusha in fwait push cmp sub xchg orb inc not cmp pmuludq and add cmc outsl inc push pusha pop pop push mov fs mov les and add cmp jle repz xor aas mov lods stos pop mov into nop inc dec pop (bad) xor or fadds and outsb add cmp xlat js lahf loop mov jbe push lods or sbb mov xor shrl out out loopne in enter pushf mov push movsb and push and inc lret mov les add cmp cld insl scas and das cmp dec in adc outsl in (bad) jg (bad) ds jb mov push fwait test add mov call daa in outsb sub mov dec test mov mov sub push aas dec jge dec imul (bad) push int cld mov dec daa scas (bad) jecxz (bad) test movsl scas (bad) jg jo mov push cmc ljmp adc stos jecxz add out push dec lods or iret ljmp rclb daa jge lods ret ds lahf cli enter test push ljmp lods cmc jae add aad arpl pop leave (bad) mov sbbb inc insb arpl jmp int3 xor mov mov add mov adc cmp jb jle mov sub mov push lret es cwtl pop add daa inc adc mov es and pop int3 xchg inc repnz lahf aam leave push inc test xchg push or and jne mov push lds xchg subb or icebp add push pop add dec lods aas mov inc xor add movntq rorb sbb lods or jae jg mov dec add dec in ja add idivb nop sub lock add into and rorb and push jl je mov fbstp call xchg xchg mov sub icebp xchg jp mov xor push in ret xchg scas sub out jge and or xor inc sbb xor mov jne inc jbe fisttpll daa (bad) cmp stos dec in add icebp (bad) (bad) aas inc movsl add or sbb add sub sub add rcr mov jmp pop push in mov fucomip push jbe jo (bad) ljmp repnz jno pop jns ja xchg xchg fnstenv inc or push add cmpsb dec repz jge mov cmp dec insl sti add aas outsl inc cmp xchg fcmove or or adcb xchg imulb pushf cmp cmp (bad) xlat mov push rep ljmp pop fidivr pop fchs lret pop mov repz adc in cmp stos sbb adc inc fnsave mov aam dec xor or iret mulb add cmp loopne mov js dec jge dec pop dec outsl or movd mov pop or jg inc imul sub ficompl cltd in inc sbb aas inc hlt les sub sbb adc into jb mov jnp aam jmp int and pop pop sub xchg fsubrl adc xchg (bad) bnd and popf js cmp cmp cld sbb stc pop or sub add push mov dec add sub ss mov mov push (bad) out sub ret sub cmpl (bad) imul mov not xchg jbe (bad) ficompl push or mov iret jns lret jmp iret stos jecxz mov mov inc arpl mov jbe scas cmc sbb (bad) mov push mov dec mov sub adc (bad) ljmp or adc sub add repnz mov sub lret lods lock int add repnz cmc in std adc xor sub pop or or jb jg add data16 cs (bad) sbb sub sbbb or (bad) ja pusha andb dec dec or sub inc xlat and imul xor js enter and movsb je mov stos add jno xchg adc icebp pop loop ret push mov push mov imul add sub jo imul dec cmp push cltd push push pop and stos loope adc mov mov jl stc inc mov pop inc in addr16 xchg add cmpsl dec and ljmp and jmp shr fsubr jle cmp xor pop and cmpl or (bad) int xlat ret loope lea dec add mov scas mov jecxz jge scas xchg cmpsl push sub rorl push push fisub fnop repnz or (bad) aad bound mov inc hlt lret mov dec pop adc dec out jo mov pushf inc add push xlat add mov push lock cld push xchg fadds push push test stos (bad) in mov add icebp inc inc call jge inc hlt shrl aad shr aas test xor mov dec out lahf pusha aaa lea push sub test pop pop enter clc jg xchg jecxz mov and and add ja xor in add aaa inc int jno xor sahf es addr16 sbb out or jns std test push push out aam add dec idivb or xchg testb add (bad) jb add mov dec (bad) ss inc test push adc sbb pop aam mov jg (bad) ds sbb adc mov mov mov out pop jae stos mov dec (bad) cmp frstor loopne out or fsubr sub sub dec add cmp jmp mov mov cld mov lret pop add dec pop sbb jmp and outsl sub inc lods adc push imul dec dec aam cmp sbb mov dec cltd stos test add pop out sub mov test pushf adc or inc loopne hlt mov jge repz fucomp dec xchg mov inc or push sbb jg jl rorb add push lret sub daa sbb or pusha fldt or adcl mov (bad) not (bad) mov lcall add mov jge scas loopne jbe in lock movsl add arpl incb out push xchg movsl sub or jae push or out mov std (bad) ljmp dec aam mov add push mov jg jmp lock movsl ja outsl shl or lock fistpll addl nop add mov fisttp sbb inc inc adc cmp lret into push inc push add loop inc pop inc ljmp out dec dec in mov shrb mov add mov dec rolb test pop movsb test int das inc stos in cmp (bad) sbb aam push shrb pusha push popf mov mov insl or xlat adc and out push fdiv enter push jge cmp mov xor je addr16 xchg sbb inc mov xor sub je arpl in jle push std add sbb xor dec pop jne jmp mov pushf mov mov lahf jecxz cltd ret imul sub push xor in lods notb mov testl xor cmc or jg rorb aam push mov inc (bad) movsb add jno mov xor jbe lcall and mov sub mov dec fisttpll cmp mov subb push sbb mov pop scas sub jno jle and mov cld addl outsl cli cwtl mov inc jmp xor dec rclb daa outsb pop fsubs pushf and jb out push xor lods cld icebp jg aam sbb jns and loopne arpl inc lods cmp inc lods jl inc pop out ja push sub cmp add sub jg cwtl sysret push fiaddl es jg mov xor icebp push pusha jmp (bad) jae sbb pop ficom ja fild jmp pop (bad) or sub enter or pop jl cmp cli lcall xchg push jg add std adc pop cmp out call loop inc sub dec fdecstp mov (bad) das dec cmp (bad) cmpsb add cli mov push mov add adc push outsl cmp jnp mov push push mov negb jecxz pop insl jg sub fmul add sbb lret fisttpll push add mov rorb popf mov push jp stc pop and jbe pop sub incl test clc jbe (bad) ficom sub jnp pop stc sti cli je xor mov in add add mov cmp xor cld call lret push push ja mov add push xchg sub sub pop ds push add jle push jnp mov add lds dec fnsave in adc lods (bad) sti pop scas (bad) sti mov hlt jg adc xor and xlat (bad) mov mov mov data16 xchg (bad) xor add test jne or (bad) popf jnp cltd push jecxz in pop sub add mov test iret scas shrb pop xor jbe or (bad) jmp add imul ret sbb mov mov pop cltd test mov jp sti jb adc sub mov shr jno cmp push xor or jb and out nop sub push jns push pop lds sub shl stos cs aas fidivr adc push and inc int ss jle adc push into dec movsl mov lods adc jnp add fcmovu data16 mov push lds xor push push lret fcmovu shr orl std sub cmpsb inc sahf and scas fmuls rcrl mov pop push daa loope adc xchg push push mov (bad) mov lods cmpsb inc out add ret jg clc loop mov sti out pop ljmp mov es mov push out mov dec pop mov or push pop mov jmp pop pop out cmp cmp sti or inc mov jle mov pop push repnz (bad) cmp dec and dec mov pop sub cmp stc test push xor ror std sarl ljmp adc subb sti lahf stos clc jge fcomip fadds pop outsb aas cmp jge (bad) mov sub mov push pusha gs xor in mov mov mov pop insl hlt sub cmp repz mov pop pusha pop ljmp push xor adc and cmp (bad) xor out mov outsb push mov pop mov es std jge scas roll add adc push inc inc in sbb mov or aam ja sbb mov lock or or adc ret and movsl cwtl and adc sbb insb or cli mov movl pop in pusha add jg mov in jnp scas nop adc xor ljmp cli (bad) fisttpll push aad xchg pop or mov jmp addr16 add pop pop (bad) jae mull jmp nop cwtl push push xchg xor (bad) sar lock jnp repz rcrb add push and das xor mov and and lcall cmp insl or jns std sbb xor lods jge out arpl xchg jl dec nop dec imul jge mov out (bad) inc sub icebp sbb push inc cs lock sbb inc rorl jecxz push and cmpsb jge mov mov dec incb push push jne cmpsl decb sub pop mov xchg je or add add mov dec fdivrl push cltd lcall mov loop aas lods sbb jp mov pop push cltd push cmp jmp or mov popf enter sub cmp jo jg and orl push push inc js fnstcw insb fidivl sub mov or ret notl lods jne cmc xchg add scas mov rcll rolb test jmp andb lods xor mov sub pop nop es pop jno xchg inc addb aas repnz (bad) cld mov add pop xchg enter xor shl push and pop ds xchg in arpl jae inc fbstp mov test (bad) jp es divb cmp leave notl (bad) add cmp dec mov push xor dec idiv pop and mov push jg mov xor xor mov imul adc cmp aaa in roll xchg xchg adc shl lret lret push mov dec xor mov sbb sbb pop lret xor inc ja adc mov mov in adc xchg imul mov negl pop push popa or (bad) mov decl inc fcoml es sbb mov adc dec orl fdivrs jns cmpsb sbb bound pop dec pop jmp xchg jno dec mov aaa xchg stc out sub insl sahf and ss loope insl fucomi aas xchg dec pop mov lret cmpsb add (bad) aad mov enter repz mov or sahf in cs das push jge push adc loop xchg xchg mov call cs mov sub push orl mov lret aam xchg or loop xlat cli push icebp and xor adc icebp outsl mov mov sub orl push add jg sub loope mov (bad) fldl add push push out push cmp sub arpl fcoms sti out pop add dec xchg imul push pop pop outsb pop push add inc mov repz loopne sub aad (bad) inc sbb xlat fnstcw pusha lds ficompl xor cld int3 mov out xchg mov add dec push incl loopne out ss ror jbe and sbb rcrb xchg lret sbb outsb rclb popf xchg js or sub popf addl loop pop icebp test dec mov mov xor sub sub imul pop int or jge in (bad) add data16 xlat les pusha popa mov cmp and in mov cmc in shl mov pop push dec dec dec adc loope shlb sahf (bad) hlt sbb push xchg adcw mov push jno dec jnp mulb xsave ss sar sbbl mov jg out nop outsl mov sti add sub fcomip sub ljmp push test jp ljmp pop out add in stos neg xor ficompl mov sbb aaa cmp lock aaa fcompl cmp mov inc push fmuls int or negl sub pop jge inc inc ret jg push out xchg pop jmp das and fidivl push xchg (bad) or pop cwtl adc xor jge flds (bad) push add stos rorl lods cmp jbe sarb dec push movsb sub add xor insb pop loope pop pop lret pop push clc ror push (bad) bnd leave mov push jnp jecxz xchg mov mov inc popf cli pop xchg rorb mov outsl and or pop pop nop mov (bad) mov out lcall or pop mov nop jg push daa out jl pop call mov aad dec add out leave add lods call dec inc fsubrl pop mov xchg push in (bad) mov mov ficompl loope mov mull xor sti pop popf add adc jne enter or mov ss cs push xchg mov xor cmp and pop mov shr testb jmp inc iret fsts loop mov mov or jne in push inc or mov mov sub push outsb xchg push js jns (bad) mov add push scas fisubr lret or ja add incl xor jmp test pop loopne sub sbb mov mov cmp pop rcrl cmpsb lret mov out mov scas xlat ss fisttpll push and das pop jnp sub xlat xor xor xchg and aam arpl stos cmp sar out adc or or add or movsl mov and int3 cmp mov mov fucomip std ds lahf fcoml jbe xchg in repz mov or sub in add sbb ret inc add aam rclb lea jae jg mov dec pop out lahf das jns leave jle inc jp je mov xchg mov orb cmp dec jns pusha xchg dec roll jecxz jae or and movsb or pop mov imul scas and push in xchg inc and mov mov sbb cltd popa mov pop inc xor rorb add (bad) jge push mov repnz std addb popf out addr16 outsb sbb sti mov or jg mov jg dec scas lcall sub das pop push and lds stos cmp mov loopne mov sbb imul xchg sub data16 (bad) sub test jmp pusha push mov je adc decb test movsl scas or stc cmc pushf push popf (bad) mov pusha pop add or (bad) lcall ds stos mov inc cli cmc jp xchg gs inc or push addl xchg sub je fs scas pop sahf ljmp pop push mov arpl (bad) mov sbb xchg jle out add mov jecxz jge in orl sbb xor mov mov call in inc sub push inc loopne (bad) ja sub sbb or lcall or rorl ret dec aam popf xor xor pop xor xor pminsw sbb sbb push inc shl fisttp dec in mov out dec mov and or movsb repz imul sbb ljmp es add (bad) iret imul jmp dec mov mov sbb jge loop mov jb or xchg adc or jbe jnp sub and dec sub in pop xchg test aad mov mov stos and xor das outsl push rep add dec sbb fwait out push in loope in sbb int or shr or stc xchg xchg pop pusha sbb shlb inc outsb lret pop inc add icebp mov mov mov pop xlat dec stc fwait lahf sbb into aad mov fcoms or sub add ss jnp dec jl nop pushf testl icebp mov je cmpsb sub pop sbb xchg and es xchg xchg daa repz xor mov push nop jae push imul pop int3 pop mov mov (bad) sbb mov or cmp add jg icebp lods mov adc cmc ret mov xchg pop pop or rcl lock cvtps2pi push lret add push inc lahf cmc mul cmp or std and scas loop cmpb push push xlat clc aad lcall pop dec out bound ljmp f2xm1 push je push jle mov (bad) jle je add push out js repz jb das push pop add xlat push fadd pop and ss out xor add hlt jg xchg pop xlat adc in push jge out sub xor jbe popa push add cli sahf scas popf inc sbb pop jge cmp adc xor inc bnd inc sarl and mov icebp pop add (bad) hlt out jg shrl push (bad) cmp xchg lds jle mov add xor sbb mov lods xlat mov push lock jae gs sub sub push add scas idivb inc repnz mov adc sti and ret idiv dec pop out and xlat pop xor jne ja imul mov adc mov cmp movsl jbe scas insl mov push jle add mov pop movsb pushl or int3 sti jle pop nop test xchg pop mov inc (bad) jp mov aad fadds jp shlb daa push imul int3 mov dec jno test fwait std test scas adc pop xchg (bad) pop arpl clc popa mov xchg rorl jg inc dec xlat jecxz clc cs call sahf inc outsb pop jecxz rcl ds stc or outsl rorb push mov divb sbb in inc xor xor out adc add shrb add and int sub pop sahf ret fistp iret adc fsts test push mov std (bad) xchg (bad) stos and ja lods push or push inc sub push sub fstl push push inc (bad) repnz push cs idivb jp movsl add push fs mov das pop je xor xchg in repz xchg push pop lods insb ret push bnd dec out sbb mov pop xor loope addl test (bad) dec cmc testb push mov data16 pop pop adc (bad) lds pop xchg outsl xor in jbe std outsb test inc pop jle imul pop xor ds pop push out loope cltd test add cmp movsl xchg sub dec int3 shrl lods push cmc xor clc les negl stos push add dec adc insl in adc cwtl insb nop cmp ljmp add xchg jg push push mov or mov int and cmc mov sub ljmp xchg jnp and sub bound push inc imul es sahf out and fdivp pop cmp add push addr16 xor cmp jmp xchg mov cs mov rcl dec into push push xchg imul mov nop mov pop (bad) pop out pop mov data16 jle adc ss cmpsb push jno (bad) xchg mov ja sbb movsl rcrl (bad) aas mov les cmp or mov lock cwtl mov jecxz lods add jnp mov nop pop mov sub cmp jl dec adc mov and popf jns ljmp stc aas mov add fs cltd adc (bad) pusha shr xchg lret pop push inc add ljmp cli xor pop pop cli cltd iret adc lods ds sbb mov ret sbb add jmp out icebp es and add data16 pop add jno dec push lods add popa out insl inc jmp ret mov add add in fsubrs and or sbbb into jle add dec pop in cmc add mov adc mov sbb imul bound inc push std insl mov dec push push fldl icebp cmp and std adc dec pusha das int inc xchg test call add sar add dec orl ljmp or mov pop jle jl (bad) cmp sub push xchg jle lock repnz add adc mov stc outsb mov jb mov or test and fldenv rcl or (bad) jmp out sub js icebp jp adc sub dec add pop jp roll stc and (bad) jbe rcrb mov dec xchg mov imul hlt xor sti add xor mov mov cmp stc or pop les sti lods dec add int xor xchg mov or lods rol or jae sub or mov mov hlt stos mov mov aas mov (bad) jg mov incl inc ret jnp dec jle mov pop idiv cmc jge jns add pop jmp push pushf call cmp lods sbb jg cmpsb in arpl std repnz cmp movhlps xor pusha outsl push push adc dec dec loopne (bad) mov xchg movb dec push inc stos lret pop jge mov sbb and je dec std inc mov mov mov add div add inc jp mov imul mov cli dec sahf testl scas dec xchg push and out outsb pop xchg push lods std test pop mov xchg xchg mov daa pop jge cmp or pop lahf or mov insl push mov notl xchg mov fcmovu mov cwtl pop cmpsb shlb (bad) jle repnz loopne (bad) cli and dec mov dec and add xchg clc pop jbe out insl push and leave and add mov mov xchg scas pop and jmp sahf mov loop ja adc (bad) xor ja or repz out scas pop or dec push aas stos repz subl lret or mov jnp movsb add push (bad) mov or (bad) mov (bad) mov add mov jb dec push ja dec repnz xchg pushf or mov or ret or fwait stos js in and and test inc enter (bad) divl test and in add xor fwait push pop ljmp sub mov mov stc testl std push push and dec outsb jp repnz mov and or div add adc jecxz adc lret std (bad) add lods sub mov xchg (bad) (bad) fcoms je (bad) push fscale pushf sbb daa daa jg or dec (bad) push (bad) jge add test and inc cmpsb sbb xchg (bad) ljmp fcoml xor jle jne and jae repz and sub inc xor mov inc notb or push repz lcall jne pusha jg cmp jge push loope push and sub inc mov jp loope aaa and or das pop (bad) repz inc adcl mov sbb jecxz inc mov mov adc and (bad) mov popf js cmp jae or mov add adc xchg testb cmp sub or and sbb iret xor or xchg xlat out nop fistp (bad) call orb mov sbb cmpsl mov cmp insl hlt outsb xor jge insl addb dec popf rcrl rclb jg cli mov dec push jb jo lods add sub push mov movsb inc repnz xorl stc jno imul mov imul lds aad or and mov stos add roll mov xlat add add jp or gs into add add in or jae addr16 pop (bad) (bad) jb cmp or adc push jbe pop shrl sub mov sarb jle cmc sarl ret movl popa push sbb cmp fsubs jmp aaa and xor jecxz outsb mov lahf or dec xor xlat dec jne pop hlt inc mov push movsb out fistpll loopne pop sar mov mov mov rcll mov icebp out neg inc mov and or das or mov (bad) mov stc stos popa or arpl addl sub dec pop push push jmp push cs jne in pop push (bad) jg imul add fisubr setle lods push pop lret sub mov cmp incl bound or push mov rorb cmp jno add lahf xor jge mov dec or pop loope xchg scas mov nop daa push ds sub add jae popf pop jl adc jge sbb and jne and push pop or out ret mov push pop lds in adc mov rolb decl rorl into insb mov ret lock pop jnp loop imul inc mov scas sub (bad) test xchg mov or sub jg pop or push pop jmp lds aas pop sub pop aaa xor sbb fisub cli mov mov pop sub mov mov inc mov pop push cmp je mov or inc pop dec xorl decl xor bound mov jno (bad) pop cmpsb or jne fldenv pop pop pop xchg rorb push popa aaa vphaddubq daa enter push mov jle sbbl cmp mov jo inc dec sti out adc inc jl jl jo and (bad) out ja mov cmp mov arpl mov xchg daa mov or mov stos sti pop scas add hlt (bad) dec inc mov fyl2xp1 mov das xor inc lods and mov sub cmp mulb mov int movsl push adc aam imul jb scas push (bad) dec sub shl mov pop and loope out sub inc or mov rcrl push pop xor push add xchg ret pop cmpsl adc mov cld nop aam sti std mov je rorb cmp mov out fcmovb inc cld andl inc adc xchg popf (bad) pop pop popf jns dec loop mov out jle int add push push dec outsb testb hlt ljmp flds cwtl or (bad) das mov push clc mov daa push push pop ljmp xchg pop pop (bad) cmp adc nop or mov xor cs inc xor lods xchg movsb dec sub cld jmp mov ja lods into fcoms push aas jge mov push mov icebp mov cwtl cmp enter jnp (bad) sub (bad) iret pop sahf dec jle (bad) push adc adcb cmp cmpsl sti pop xor push rcll ret popa out cmp fild pop add (bad) loopne (bad) adc push xchg lods jg out push test ret add adc aad mov fwait cmp or loop add inc mov push js (bad) cld xlat rolb ficomp pop rol icebp push inc adc mov add pop or push add pop mov jo xchg xchg push fsubr mov cwtl xchg jmp sub add subb cmp pusha jle clflush pop cld jns in push or adc and xchg ljmp movsl xlat xchg ds add movsl rclb jl cmp lret inc cmpsl pop mov mov in xchg inc push lret fcoms das ja lret push ljmp outsl movb loopne das std jle jge testb data16 les sbb repz add xor icebp (bad) xor lret mov adc pop ja arpl and jae fdivs sbb scas das or dec sub ret inc or adc jecxz jp sahf ficoml mov repz lcall cli (bad) (bad) (bad) inc jmp ja push xor or shrb or xchg push or jmp cwtl jb not cmp dec lret cmp aad jne dec ret das or and mov pusha test cli std gs cmpsl jne insb lahf incb ficompl jle adc std inc sbb js imul lock mov imull leave int jmp pop xor cwtl and cmc sbb lret fs or (bad) fdivl repz movsb or repz or lret fnstenv pop push lret pop (bad) sub sbb aas into xchg inc or int pop xchg ja inc jecxz push popf adc pop sub popl push repz xchg mov (bad) or mov mov in pop and outsl jns mov xchg mov xchg dec aam mov dec push inc test stos mov push xchg add xchg xor (bad) inc adc lcall mov addb push sub call lock or mov popa movsl dec test cmp push or (bad) outsl fbld sub push jle jo fisubl subb inc jo push jle inc dec (bad) aas pusha mov fdivr mov stc test aam adc out cs pop in imul imul ret xor (bad) mov enter jne xchg pop das rclb hlt pop in sahf std jnp mulb cmp jbe push sub dec inc popa in (bad) add mov fwait jnp lcall mov dec icebp cld mov push outsb nop shr outsb insb mov jp cltd or pop xchg or (bad) hlt jo adc and sub lods mov mov jle and sub sahf or repnz repz ret les mov pop dec jns cmp add or cmc mov out xchg xchg sbb inc xor dec out or hlt sti decb xlat xor pop xor (bad) cmpsb add jp rorl cmc add mov add not popf push sbb js rcrb fmul dec dec test rorl das inc sub cmpsb sub bound push scas jae cli add sarl not sub andl jbe or cmc gs fs int test es cs iret or hlt ja and sub ds mov dec lods pop jnp pop into das and push in mov or push fidivrl push or clc sbb mov mov jne fs push cltd mov mov data16 pop les das das dec cmp push mov ret push pop insb or scas mov xor add inc mov (bad) int3 dec pusha ss cmp prefetch fbld mov das testb pop stos sub sub push sbb pop add jnp pop in and pop cmp scas je loopne push add add (bad) mov (bad) mov push movsl add pop jge mov pop add movsl (bad) pop cmc xchg or sbbl jns mov cltd jb cld pop sbb outsb lahf jle movsl bound ret push insl or call or xchg mov bound adc sti fisubl dec sti cmp push dec push rolb push stos sbb jns (bad) pop jp xchg ja and ret dec add push cmp es cmp fidivr cmc decl push add lahf shlb shrb mov inc jg aad rolb adc mov pop mov js add push pop pop cmp sti icebp (bad) gs mov out ljmp adc jb pop pop subb sbb adc (bad) je mov (bad) pop cmp sbb jecxz rcr rcrb aaa pop mov bound insb aam cmp cltd jo mov aam jbe dec enter les inc sbb pop pop movsl pusha mov popa push mov adc std or lret pop lret lahf shl addr16 addr16 mov add and dec jp test ljmp es push pop push loop pop or sbb add xor je js pop (bad) adc mov sub mov push pop sub mov jge out jo es mov nop cmp adc push push nop adcb (bad) imul hlt or movsl negl das pop (bad) mov add sub dec sti jge sub push stos mov ja lret or xchg sahf cli roll call add xor and imul popf push enter and sub sbb dec and lret or dec push jns sub mov push pusha fbstp (bad) inc ja fistp orl test xchg fsubl loop mov not rcll aam mov and mov mov dec call xchg adc mov lcall (bad) jmp sarb sub jp test pop call mov or pop jne mov mov cld inc pop test and pop add (bad) leave mov cmc jle add pop loop push sbb push mov pop dec mov xchg jl adc inc jmp xor mov repnz nop fdivrl xlat mov push push imul sub inc jg in mov sub lock clc add xor pop mov dec fstl xchg scas push sub jmp lods jecxz stos and negl pushf jno shrd mov dec pop jmp je fiaddl xchg lahf jg lret mov sub notb in es jmp or js mov xchg test dec jnp jns xor push push gs mov cmp push inc pop ljmp mov push add insl mov das and (bad) or add sar push xor push mov ret jle decl add int mov pop push dec pop cmp inc or outsl popa sbb sub mov cli addl shll loop into jg push adc hlt sub and (bad) xchg mov cld out popf ret add mov (bad) fisubrl in mov cltd cmp lcall jg push pop or bound out enter pop std add push xchg jns popa mov addr16 pop ljmp mov movsl dec inc xchg aaa sbb ja jo xchg fstpl mov call and jno pop jge xor adc lds (bad) pop push dec pop xchg (bad) ljmp scas aaa clc push test mov ds pop add jge xchg and lock cltd mov pop daa lock sub lods stos inc pop or rolb clc fcoms adc movsl inc add mov xchg mov sub or std aas push xor sbb xchg push xchg lock mov sahf jnp jno jae mov aas movsb pop push adc lret aas mov cmp daa lret idivl sbbl lea jnp add std and leave pop push sti push sub and pop movsl jl stc mov push push fldlg2 out or (bad) jg add stc movsb mov add sub mov loopne pushl inc jmp push cltd and (bad) test dec and mov sub xchg inc jecxz add mov jg or push cmpsl fsincos jnp mov outsl cmpsb mov add push gs mov aaa mov dec mov or xchg ret enter mov add mov inc xchg sub rcrb inc mov addb scas jg mov push or dec das ret test cli sub lea pop test dec pop xchg xchg sub add xchg daa (bad) adc call push imul sub xlat out jae sbb (bad) jge xchg in test out cmp shlb dec inc xor shr inc scas mov and mov fstpt int3 ljmp push mov jg repnz mov pop push icebp aad popa movsl push outsb shrb js jno rol jecxz pop mov stc add fsubrp aas in (bad) or cmpsb dec jmp bound mov jns lea icebp mov add mov sub mov std nop inc add dec sbbl add les push shr out ret mov mov fstp cmp add jmp adc add mov jecxz mov add xchg pop or out jnp push push ret (bad) int and ror inc jge data16 imul (bad) or add gs inc dec rcrb jl (bad) pusha enter fwait (bad) cs test shl and cmc cmp pop pop pop push push cli pop rcl and sbb pshufw sub cs out adc lods pextrw cwtl mov xchg (bad) fbld pop jle nop pop xor mov mov jecxz push adc adc adc aam (bad) push (bad) and and mov les icebp pop shrl cltd and cwtl popa jmp fsts loopne div clc add mov in pop adc adc xchg add fidivl lods mov pop cmp enter outsl call fmul dec dec or jg push fisubrl divl bound jp mov sbbl pop stos sbb daa mov dec addr16 push jnp mov (bad) or jns mov push das iret aad lahf dec (bad) sub cs inc jmp pop enter out or or mul dec subl pop loope sub fdivrs push sbb js cs loopne and dec imulb xor inc xchg outsl xor jg xchg jl dec imul repnz daa sub ret aas sbb xchg nop out sub and insb sti adc in sbb jno testl (bad) sti aam (bad) (bad) ja xlat pop jo add jg cmc dec sti xchg in adc push mov sub pusha push (bad) xor stc jecxz push or jg xor add cmp dec lock not sbbl daa mov push mov pop idivb popa mov jge add or int mov add adc fs dec test lret pop repnz lds daa jnp or dec push stos push insb cmpsb aas add fs sbb inc outsl jge daa adc add clc or pop inc shrb mov jg xchg mov pop pop pushl mov stos outsb lcall jp jg out or (bad) add dec ja ljmp add mov imul xchg or push cli jbe incb jp pop nop mov ja les cmc popf xchg push pop lcall cmp pop sub jg adc jg mov leave ljmp sub sarl push pop mov sub sub cwtl das stos daa push jne cmpsb and add xchg notl lret mov sub jle add and pop fadds pusha repnz cwtl fwait and mov adc pop out add scas popf ja gs mov pop jno rcrl test mov in mov jmp lret daa mov or pop xchg or mov stos lret mov dec adc xchg and inc nop lret or and or jl dec or out or push mov push aam in sbb mov das cli jbe stos pop push xchg repnz mov bnd jns mov dec adc inc or inc popa add shrl out add mov es adc rcll shlb xor (bad) and shrl je xchg scas adc pop call jle adc into pop insb cltd xchg flds sbb cmpsl (bad) lahf pop sub mov ljmp outsb add inc in add enter xchg inc rcrb add push scas mov in (bad) fisubr icebp bound jno or jns lret inc inc stc sti and shlb ret add add sti icebp or mov pop orl inc mov in sbb cmp mov insb mov daa xchg jbe add xor das push xchg pop push pushl rorb sti jg push cmpsl mov (bad) rolb sub adc cmp sub jg adc pop and push mov jno mov call mov pop xchg ljmp inc xchg outsb jp aas add dec loopne neg sar sarl mov aas pop (bad) mov scas push pop cmp lds mov and add cmp or add push mov mov cmc lods adc pop sub pop jno fs jmp hlt movsb test scas cmpsb jbe cwtl jbe jns sub cmp in inc mov dec dec mov (bad) movd push aam cmpsl popf in test pop mov loope xchg jp adc ljmp lret (bad) dec cmp xlat jge lcall aam or pop push xor push cmpsl repz pop cmp ds out jge sub push add xlat pop sub insl mov dec mov test scas rcl (bad) daa (bad) ja mov pop scas cmpsl xor dec add inc or or xchg (bad) stc push (bad) mov fildll or fcmovnb pop scas cmp lock in add jge inc in not stos lea push lahf or mov and addr16 push push repnz pop push outsl mov or (bad) dec push mov in mov movsl ja faddl addr16 sub xor pop js sub bound outsl jg in addb mov ljmp out scas sbb adc outsl into dec cs mov sti push xchg jge and (bad) sub sarb or xor outsl cli out (bad) jl jg stc adc testb push inc adc hlt out add pushf repz cli imul push movsb into push stos movsl pop lods mov sar push jb pop sub xchg (bad) mov (bad) shrb jp mov lea jg clc push or adc inc cld mov push sti loope (bad) xor sbb in pop es jb dec int sbb call ret jbe stos jmp or stc push dec inc sti jns ds jmp push push aad (bad) data16 fstl pusha incl mov es inc push cmpsl jbe jmp test add or xor pop mull pop pop pop sub fdiv mov shrl mov clc cmp jmp push jae insb sub nop movsb (bad) jg in pop and fidivl lret xchg outsl (bad) in pop or jge or cld cmpsb xchg sarb jbe and add out and pushf and adc fidivrl or or add sub or in stos sbb test pusha dec nop sti mov add jb mov xor mov data16 adc popf fscale mov sahf scas out sub push in and mov cltd xchg rcrl inc add ljmp pop repnz test iret add imul hlt jae xchg adc lock insl and enter push pop lods inc dec add mov sti shld sarb (bad) fnsave mov aam jne or repz out and imul test inc loopne addr16 sub ljmp pushf pop mov push hlt loopne daa sti outsl pop mov xor dec mov in out imul jb mov or push mov pop pusha imul mov and mov stos or dec and decb mov or inc out jbe add and lret dec xchg mov xchg push xchg rcrb cmpsl xchg mov lock je js dec jl push push cmc sbb pop pop std sbb ds mov popf lds sub add das inc mov cmp out mov mov repnz dec call jmp (bad) mov cmc push repz icebp mov rcrb dec mov mov jl sub sbb push js cmp out fnstsw lret xchg sti clc icebp push cmc pop cmp hlt mov pop add fptan pop loop pusha iret push jae cmp das pop ja data16 xor movsb and add and dec xor imulb clc jg ljmp mov cld in fistp stc pop std and les jle enter and xchg inc or push xor or mov nop mov ffree dec fwait cld das sub jge fdivs push lock shrl lcall push aam dec pop xor add ds addb push mov (bad) cmp in dec pop inc and xor sub and popa sahf jae dec dec fsubs ret or xlat sub dec fistpl or sbb jmp push add mov mov mov add pop cli lds dec (bad) xchg fist push or jl xchg sub movsb jg cmp sbb decl mov nop mov incl cmc shll movsb mov lret in adc enter popf dec lret and stos pcmpgtd popa lcall (bad) push incb (bad) shrb lock sar test adc fnstcw sbb sub jge or outsl pop pop (bad) push pop adc les sti lret and nop pop mov adc roll pop stos xchg and xchg rolb adc outsb lahf cld mov and add jne jg add dec fsubrs loop jo loopne jae inc mov sub lods fwait or mov add and movsb mov dec scas mov cwtl js xchg mov fnstenv inc in mov sub test fnstcw xchg xchg popa or sub sub push push mov daa fmuls mov or (bad) jle loopne and scas (bad) sti xorl or xchg stc std test popa lcall mov jle push jo sub insb fcomps iret stos cs pop pop aaa lret cli mov or push std or push testb sub (bad) ljmp pop xchg out dec (bad) sti pop sbb jnp enter adc repz add ret out fnstenv jmp xchg cmc add dec lret scas cmp inc mov jne test push cmc pop mov add (bad) stc pop andb scas xor xchg add idivb negl das and jl add out shr rol and es popa insb push sub pop inc jp push (bad) dec add outsb ja push pop jle int (bad) jp ret out jl sti inc add adc xchg xor add popl inc ficom mov ss mov xlat mov and pop lea sub sbb xor shll add rcrl arpl mov aaa push sahf xchg push mov fcomps mov fmulp test stos idivb jmp popf popa sbb inc or aam dec xchg xlat mov xor push pop inc aam cwtl loop sbb out xchg dec sti pop add xor (bad) insb jge push mov dec push pushf les lret jne adc fisttpl add xor jnp pop mov inc sahf mov cmp lahf fdivrl jmp sub or add call sbb (bad) mov mov cmpsb insl sub sub adc rorl or and pusha push ficompl push aaa fsubp and adc sub dec mov sti jle xchg loopne jge arpl mov (bad) mov xchg jnp and add lcall pop mov and add mov inc enter ljmp outsl clc sbb scas (bad) push or xorl cmpb mov or repz loop das push rorb jne call call or push xchg mov jo push aaa sub mov adc sub push xor cmp idiv test lret das ljmp fsubs pop ret fiadd cwtl lahf scas push je mov (bad) mov scas pop call pop sub pop xor push add fld sahf adc mov pop (bad) mov fstps mov insl divl test mov mov inc pop add xchg or adc dec mov ret in arpl push push cmpsb mov xchg add aad pop push or or or push xor inc fldpi ss fisttpl clc pop pusha adc mov mov mov jnp aaa popf pushf leave or (bad) stos inc clc into das pop push jecxz (bad) cmc in dec ret shll dec sub and jge (bad) leave dec mov xlat xchg adc ss push fisubr outsl xorl lods movsl lods pusha mov jecxz daa push fs xchg pop mov addr16 push daa inc repz loope jbe xchg sub push rdtsc xor xor dec cmp add imul jbe or (bad) xor aad outsb enter xchg pop pop pop push movsl cmpsl inc push scas push fcmovu mov jl push or cmp dec add sti outsl pop mov sbb gs stc jg insb add outsl wbinvd lret imulb nop mov clc repnz xchg sar xor sbbl lret orb mov scas add inc (bad) popa add add xchg mov or or mov sub ja mov mov mov mov bound (bad) pusha jbe sti sbb dec push push sbb mov mov cld and bound repnz pop rclb xchg mov (bad) pop pop fisubr inc mov pushf sub into add aas aad loopne lret jnp test dec xlat in pop add test add aas add in and (bad) xor inc jg jae popf dec jle pop out imul mov stos xor add mov popa jno out insb pop add pop fistp lea hlt ror sti pop add cmp jle jmp fcmovu xchg xchg add jno add pop cmp sbb fldl into (bad) mov clc out or sub jecxz punpckhwd pop outsb je repnz mov dec add sub lret inc sbb dec data16 daa pop xor xor (bad) push lcall mov gs jmp or xor pop jae or lock add lock cmp insb out outsb jbe add push push push pop lahf mov stos push adc fsts stos dec les mov sub or (bad) outsl jg adc stc add cmp lahf jbe test or ret xor aas ret pop mov dec rcr aad (bad) dec addr16 xor add xchg xchg pushl adc notl mov add adc adc scas push mov xchg sub leave add pop sub xor hlt or sub jg add push pop lea jne out enter add pop push mov mov fmull and call cmp sbb pop daa fistp and lea jns inc push sub pop mov in xchg or mov add xchg pop aas hlt xor pop repnz cmc mov out mov add imul rorl push repnz loopne jle popf sub dec int mov xor aad jg (bad) cmp and addb pop aas imul jns ret mov je daa pop push jp push insl insb cld daa sub (bad) outsb (bad) enter (bad) jnp xor cmpb into dec adc fiadd dec das xor xchg clc movsl out scas add xor jnp pop xor fbld or imul out dec inc stos cmpsl jge fcmove (bad) (bad) mov jmp sub ss (bad) std imul dec pop shll lahf imul jge test out fldl cmpsb jae sti imul push stc fadds cmp incl daa push lds xorl cs sub mov mov shl pop pushf xchg mov pop push aam xchg ret hlt (bad) sub jb cli ss add jge aas js ret bound imul mov shufps addl adc jo sub push xor inc lods jae repnz orl jecxz lock and dec jle add and aaa mov push nop fwait ret xor push lret dec loope jg sub sbbl in mov sub int3 outsb mov sub cwtl iret jmp and leave or or jl leave std mov mov (bad) (bad) jno mov repz push in (bad) and dec mov add insl (bad) daa add xor rolb fildll mov sbb idivb mov add inc stos (bad) sub add push pusha push add mov repnz sub jge and pop pop bound ljmp loop inc and fucomip push mov inc jne sbb lret or add pop add test loope pop imul sbb xchg cmc mov cmp into pop mov jg ret or icebp dec es jb addl fidivrl lds pop (bad) into adc mov or and je sub pop xor push ret out sub mov jnp xchg mov pop idiv xchg mov mov sub outsl inc pop add sub (bad) loopne lcall push nop pop jge repnz sbb loop dec add adc lds adc jle cwtl out push xchg lret cmp into pushf cmp dec mov cmc insb out add pop outsb js call mov adc mov aam jmp sarb or or add or add lea jg inc ds sub or in jle enter adc adc pop mov and mov insb test jmp push mov fiaddl pop pop stos mov (bad) outsb daa jmp xchg ds in mov dec aaa das inc sbb jmp xchg or mov mov inc rolb jbe pop xchg mov sti inc cmp or xchg push jmp push lret push aas and cld adc and cmp sbbl jmp and (bad) mov xchg fstl mov mov repz loopne out add push jmp ss jmp aaa pop add mov imul cs outsl push jmp ret pop dec adc sbb sub test jmp mov lret divb or loop pop (bad) sub stc (bad) mov push adc imul rcll lret scas jg adc push lock aas and jmp pop jns out fild aas clc mov ret adc dec pop stc subl push sahf cmp or fsts push out cwtl or sub leave into push test ret lahf push sbbl bnd (bad) mov or jle lds mov sti cwtl and loopne gs xchg pop push test pop lock or add jg lret movsb mov sarb and pop push adcb or repnz or pop jmp and cli fisubrl jmp mov mov rorl ljmp xchg aas int stc lods dec (bad) jge popf cmp push xchg pop js dec ljmp push lods call scas mov adc call fidivr dec ret mov lret pop (bad) xchg pop mov jmp std and dec adc sub mov cmp movsl sub pop push push fstpt xor xchg pop out jns insb rcl sbb pop jno fs sbb inc popf out ret jmp leave adc fistl jmp inc scas pop (bad) ljmp call ret frstor repnz rolb sbb jmp bound mov xchg lods movsl or push mov ret (bad) xor (bad) test icebp push jle mov scas cmp push jnp test pop movzwl mov mov xor pop push rclb enter scas jbe add shl ja addl (bad) and mov xchg out dec sti aad call mov outsl subl jo push inc push xor xor fs xor sbb push lret or dec lea add fmull jge mov jmp inc jge sbb (bad) imul idivl mov outsb addr16 adcb daa leave dec pop (bad) add or imul mov fist jns jmp jno dec testl cmp jns dec add adc inc scas and xchg sbb test (bad) (bad) and pop lock jmp push mov cmpxchg aad in cmp push xor rep cmp pop outsb xlat cld insb in cmp and lods pop push shrb mov out ret rorb sbb decb xor outsl fldcw add ja adc mov in (bad) std mov push xor lcall aad push sub lds enter dec push rclb ret call test cmp test dec lahf pop fldenv dec mov or adc adc or cmp jmp (bad) enter push std icebp xchg outsl daa je adc sbb fild jmp rol stos mov in cli aam push je daa jnp and out cmp lods int3 cmp loope test (bad) popa cmpsb nop and cli popa xchg or add inc push stos jns mov or aam push xlat sti add add inc dec cltd mov std lret shl and inc push add fist dec aad push dec (bad) jl push and add sub (bad) sub fxch outsb mov mov pop lods and pop pop sbb and (bad) jnp jle in ljmp push out add rol dec or jge icebp clc jmp pop bound dec mov push mov jle fucomp inc test cmp repnz test sbb int fnstsw push out es (bad) lods push test (bad) mov (bad) in sub call and (bad) or mov pop or adcl xchg ljmp xchg ficoml mov pop sub and int (bad) jg or dec mov or and aaa (bad) cli fisttpll mov push ss bound jmp dec fistpl sub pop push xchg enter aad jns push (bad) xor decb jb push aad cli lret fucomp adc or bound mov lods push aaa mov xor and or add xchg add add mov add cmpb in adc mov xor sbb cmp mov xor pop stos fs jno add cmp mov clc mov mov mov xor movsb lods popa notl int adc cmc and cwtl xor movsb adc sub sbb mov (bad) out and jl shr mov lahf dec dec mov xchg fwait pushf add pop in dec pop addr16 popa fadd insl push imul and fcompl clc imul add adc enter insb add inc sbb cmpsl xchg adc sahf adc adc fcmovne lret mov xor (bad) fadds cmc ja xor mov cmp lods rcll push dec decb push inc and aam push mov lahf xchg dec and adc rcrl sub mov mov add stos mov nop je int pop sbb sbb aam fs cmp add lcall mov roll push jle push and inc cmpsl adc ret lds jno rcrb (bad) sbb adc and lods into aad sub pushf sbb jle xor push std mov int push dec xor data16 xor sbb sbb popa add inc js sub add je jo mov dec mov xor and dec rorl orb xchg sub xor in loop push sbb adc cmc sub ss mov addps inc pop adc xor add pushl fsts outsb dec or arpl push in sbb lods and push mov das push shrb outsb jne push stos push int3 or push stos cltd push (bad) repnz xor cmp mov sbb out mov fisttpl jl and mov test into sbb sub dec rcrl pop insb xchg xor or (bad) xchg jae in adc cmpsl into push call adc mov pop ss scas les out mov jno mov dec stos (bad) dec pop rolb les mov or and loope cmp (bad) nop fild jl sbb or mov in inc jg mov xor inc add inc fwait in sbb fwait xor or or jbe int3 sahf andl jmp movsb sbb mov add or rorl adc in add clc jne pop inc test imul imul loope dec inc mov data16 and xchg adc addr16 or sahf xchg pop fcmovnbe js mov out adc in xchg nop add sbbl test cmp mov js xor mov jb inc pandn inc inc insb fstpt ret mov rcll imul add or jg nop nop add pop mov dec stos xlat push jns adc negl lock outsb test ret xor sbb ds pop and sarl or add sbb movsb repz lret int3 dec or adc push mov fisubl push add add andl fdiv sub push mov push movsb push push popa sub faddl sbb cmp loope push inc test arpl or mov test inc cli add adc mov or imul scas sti dec out mov fstps xor sub jg dec sbb dec ret outsb inc loop sbb xor call jbe mov xor mov mov adc xlat and fldcw lods and repnz push add rorl xchg out inc adc scas xchg dec or pop lods add cmpsl add sbb pop add xor adc and inc pop sbb jb jno stos loopne xor clc les rolb fimull sbb les nop sbbb jnp push jno lock shll jbe mov cmp mul fs sub leave (bad) xor test add inc or pop cltd repnz int3 rcrb stc and in ret sbb aad xor add sahf mov fnstcw ds jnp jo repnz and rolb sbb inc lock dec xchg scas cltd mov dec jno xchg pop mov jo or or mov outsl scas lcall mov xor shl pop adc nop inc push push add sbb and inc ss fadds or jns sub lea add or sahf push add or mov stos dec xchg add movsb lcall imul clc inc and mov push aas sub pop sbb sub add in add repnz push xchg dec mov shlb push and (bad) mov mov cmpsl cli sbb pusha add add popa enter jge outsl push jns divl fimull xlat sbb or into or add mov jae clc lret or cmp daa add adc sbb cmc cmp and call mov add mov scas dec stos rcrl orl cmp js sbb and fcompl xorb push int3 add popa and frstor cmp insb add xchg cmp add xchg pushf mov mov xor mov sbb push dec or mov pop addl lcall imul mov rcl in scas sub insb and out mov adc fs cmp dec adc adc adc push adc mov mov sahf insb dec lcall rol add jmp getsec daa cli jb add je mov out movsb test outsl aad mov add adc rcrb hlt sub loope and mov sub lret jnp arpl pusha mov sarb jne sub loopne out les mov daa pop imul icebp addb mov add leave shr push jae jp inc mov inc push sub jmp out pop mov push hlt or jns mov pusha or gs jno loopne sub out mov pop rolb or sbb mov mov (bad) cmpsl test or pop das sbb mov sub testl imul add call and add in xchg jbe rcrl stc push je lret pop xor sbb push (bad) jmp pushf sbb mov (bad) hlt cmc push (bad) aam pop and lock adc js cmp mov fs fnstenv test jb ds (bad) xchg pushf xchg nop add add int aaa ljmp loope add popf lods pusha out rorl or sarl add xchg hlt pop sbb xor mov jae pushf movsb dec jnp xchg rcrb mov mov arpl add sub pusha aam leave in jo adc jmp jne outsb mov add repz add add push ja inc cmp adc movsb jo lods xor mov jmp push add inc lock inc jns orb imul fs adc mov fbld or movl fldl icebp mov sbb dec mov push push das fiaddl mov jbe nop lea arpl or cmp les fnsave add cwtl push pop adc sub lds in rcrl add cmc sbb or imul out xchg call outsl dec jl push cmp out xchg sub loopne cmp pop inc dec cs add stos mov add into mov cmpsl sbb dec mov and add push cmp cwtl or xchg std cmp test xor pop dec dec cwtl hlt jne xchg es dec xor and dec sbb xchg add mov cltd or jno insl mov adc ret or pop dec imul movsb and mov adc or dec inc inc pop lcall xchg (bad) loope lret pusha and mov mov inc xorb mov adc cmpsb in add mov dec jbe jmp push pop sti mov repnz es loop test test (bad) sbb js jb sub pop popf jmp int3 lods jno in xchg les popa xchg cld add dec sub sub sbb inc stc test dec mov inc pop sti sub inc jb push dec or stc xor popf sub push pop outsb outsl test adc fistpll les add add les dec loop push pop jae adc jnp push insb notl pusha into inc jno dec pop js add adc cmp inc mov push jle ja mov lret popf cmp fwait pop or mov cmp dec add out imul sbb xor mov dec ret push (bad) mov xorb push dec inc sbb popa (bad) pop jp dec and rcl add movsb fimull or es sub pop sub lock sbb nop cli les adc push inc mov xchg data16 mov scas push js loop das or xor data16 fldt jae bound add pop sub imul div inc inc adc in mov aaa xchg adc in jg (bad) (bad) inc add lret sbb xchg shll lock lods push add and (bad) add xchg sbb and sub push push cmpsl or cli push inc push pop push add mov mov xor test (bad) int3 insl lods jmp jns orl xor sub inc mov lret inc adc xchg add sbb aam adc movl mov mov dec movsb inc insb push dec jns mov jno sbb movsb lods add jbe xor ja adc inc pusha (bad) adc js jle xchg icebp mov lock pop test das or aad dec push add int jmp scas jg push mov jo cmpsl (bad) dec inc pusha push mov xchg add sub and xchg les les arpl lock inc add insb ja pop lods sahf add mov repz bnd push out and sti out adc (bad) pop imul aam dec or inc in leave or js add mov in sub inc daa insl adc xchg or sub ds adc or das sahf push inc jp into in xchg or cld sahf sub popa repnz jo cmp xor mov cmpsl cwtl jb mov adc pop push xchg sbbb test jecxz das lcall lods pusha xchg mov mov cld mov fwait aad sbb dec or mov std mov lret mov sbb push sbb sahf add sarb es pop repz jne mov inc mov jp cmc ss push mov inc in outsl aad shrb cmp jge xlat push addr16 rcl call or add mov or pop sbb sbb sbb adc (bad) sbb outsl ljmp xchg packuswb cmp scas rcrl ret data16 or sbb inc imul and pop xchg add inc mov fdivrs movsl mov and xchg cmp testb mov lret or or ss xor dec jno xchg and adc loope mov and cmp rolb add inc (bad) lret test (bad) xchg dec push push fadds pop insb add lods jbe push cmp xorl add (bad) (bad) (bad) push mov push add dec lods test mov cmp mov popf sub sub (bad) outsb cltd add psubusb adc dec cmpsl add mov cli (bad) mov mov pop dec inc test mov (bad) jae fsubl inc jbe pop inc sbb and cmp roll aam dec fcomp xor mov js pusha inc xor sbb icebp cmp (bad) aas ja mov (bad) js orl pop add clc mov dec and add cmp mov popf and add mov pop test das les or aad int3 das (bad) test adc jnp daa stos jo mov mov decl cmp dec repnz mov dec fsubl js test (bad) fwait cwtl mov jmp bound fcomip lds lock adc pop addr16 mov and fmuls xchg es jae mov inc and sbb pop sbb or mov inc es les cmpsb lods jl push std sbb or mov and xchg cmp adc movl bound push fiadd or xchg mov xor (bad) mov aad es bound add mov mov das push clc add xchg pop outsl push cmp inc repnz dec mov xchg out int3 faddl call push mov ret outsb sbb mov sarb inc stc rcll lds add aam inc inc test popf cwtl sbb imul call mov call stos mov mov cld jns inc ror loop push cmp pusha cwtl sti inc stc push fdiv and xchg push add clc je scas xor pop jb leave inc inc xor cmpl lret push adc inc nop dec mov cmp or (bad) xor xor xor pop xchg adc push cmc jae inc mov (bad) (bad) pop cmp dec xchg loope or out inc sub pushl jae push movsb (bad) sub push mov aaa (bad) jb jge xor push sub aaa adc cs add stc cmp or scas insb cs dec cmp iret fprem1 push xor lock sbb jg pusha and shlb add add test sub cmp repnz cmp out nop stc and ficomp sbb out adc cmp sub repnz xchg fild xchg (bad) pusha xchg cmp scas (bad) mov out pop sbb and adc dec inc add sbb xchg sbb testb xchg adc (bad) pop sbb xor (bad) or sub dec popa inc addl jno add loopne cmpsb mov movsb add cld jb dec push fnop les mov mov lods fwait cmpsb adc in data16 or cmpb xchg loop xchg add dec jbe enter mov popl lret mov cmp cli fcompl scas out dec dec cmc mov mov jne or fild xchg (bad) push lods push daa gs jb fsub xchg pop pop inc mov pop ffreep sarl jle out dec cmp xchg jmp mov aam pop loop and adc out jge sbb adc ss or fwait daa outsl mov daa mov xchg add dec fidivrl mov pop shl gs push (bad) dec add sahf pop push xchg xchg aaa inc jne imul mov in fcomp js shll shll (bad) mov jle bndstx add pop fcom or push in (bad) jne pusha test jb pop inc pop sbb ret xchg dec sub lahf or add pop adc stos das and arpl sub movl addr16 xchg into dec cli lret dec adc mov dec xor push xchg stc xor add push and push cmpsl dec pusha sbb mull sbb test test ss or pop pop mov jbe lret aas or xor ljmp push cs lcall loopne add movsb int nop je fadds inc pop movsb data16 jmp jne add pop jl fstpt mov dec push out add (bad) imul movsb adc bound out xlat jmp push jl cmp or mov mov pop lods push (bad) int3 adc or inc jns dec call pop outsl mov lock mov outsb push mov and push pop out cli inc pop xor call les push rcrl inc jl addb (bad) adc and cmp je sti push (bad) mov and push cmp dec cmp xchg mov sub movsb mov add pop roll jmp or push enter or adc andb out adc es push or push fs mov cmp add jle xchg mov add nop mov sbb sbb jge fistl adc js mov add movsl enter loopne (bad) outsb jl repnz or (bad) (bad) ljmp fwait add adc mov subl add pop inc cmpsl mov rcrl bound dec or stos cmp cli inc mov movsb xchg out dec out pop idivl or daa hlt loopne jmp mov sub subb (bad) cli and and add adc mov dec int push xor jae scas jbe push push xor push data16 rorl inc imul in jg mov push push jle rsm sbb ja (bad) sub test leave insb sahf or insb (bad) aaa es pop test outsl or push or mov dec adcb xor xchg stos mov dec test stos xor repz sbb push adcl icebp or add mov push fnop add adc sub ret in push xchg xchg mov xor js (bad) test add jns sbb stos mov push leave pop pop clc mov and xor adc addb mov push adc imul jns hlt mov insb mov repnz add mov pushf push mov dec mov pop dec or fmul (bad) dec iret add in scas xor mov js negl jnp daa mov nop mov xor mov or (bad) mov mov pop xor mov jmp xchg cmp xor aam sbb insb jecxz dec ja sub jl pop hlt clc movsb divb push nop enter add inc mov dec incl or sub jb lea sub add cwtl and inc insb mov rolb sub ljmp dec jge mov pop push cmpl adc add scas adc cltd lea or xlat sbb sbb adc cli sbb imul nop dec in les mov aad and add in aaa fildll jmp dec cmc adc shll xchg shll add lods inc cmp add addb add into lcall push add stc popf push pop adc dec push jecxz mov adc pusha push jge inc in hlt add xchg xchg rolb inc mov add sbb mov jbe pop out lock sbb pop dec sbb outsl add loopne sub mov and rol or or adc pop mov je mov or xchg inc lods xor orb mov pop sub mov dec cmpsb pop dec jo sub pusha mov pop push out jb inc movl or imul faddl push incl lock dec xor popa arpl sub enter inc add xchg fiaddl jg mov mov sub sbb push jno (bad) lea cmp jp adc add in push subb subb or ds std mov and inc cmp test mov jl out cmp add fpatan and jno mov or push ds adc or fs xor and add sub shr movb adc or xor js cmp (bad) inc push mov xchg call enter rcrl push adc mov push jnp in and outsb jbe xor repnz call movsb jo xchg popa push xchg mov gs sub or dec inc inc and fs add mov inc sahf sbb push jp (bad) arpl idivl mov inc jmp pop jns jnp mov inc ja add push dec pusha das push scas int3 insl int xor pop mov xor fnstenv popf jecxz xchg or add outsl (bad) leave lcall and mov lret adc push and cmp test jbe xchg dec pop cwtl sbb adc add popf sbb sbb mov pop test loope add mov jne das cltd jnp sbbb cs test (bad) nop xchg or ror sub adc mov addr16 test pop popa clc jp pop mov inc lods cmp sbb pop nop incb (bad) idivb mov in test xor sub mov sub add in rcr mov pop in sub mov andb out push lea rol mov jnp daa sbb mov mov icebp rcll ljmp adc mov ja sub pop or out push std sbb sbb sub mov pusha das rolb testl jne repz xchg mov cmp mov or pop sub daa push xchg mov data16 cmp pop mov inc arpl dec cs sbb mov jns cmp cwtl inc adc movsb or adc repz sub dec pop push jb xstore-rng cmpsl inc sbb sub inc popa test pop sbb add mov add ss popa fpatan pop mov adc adc addr16 cld pop cs js cld shlb adc cli ja add enter push int3 int or adc leave je mov jmp push icebp rorl inc cmp mov imul add rcll inc xchg push ret out sub or add rcrb cmpsb dec imul js shlb xor pop pop lret das ja enter imul and add mov out pop sbb pusha and add fstpt dec ljmp cli ret add push clc sub adc mov faddl mov arpl xchg adc imul dec add jg jne sbb xchg push add es or adcb and sub sbb or mov bound imul jmp sub xchg pop pushf out xor stos mov jmp pop into xchg and push mov (bad) stc mov mov mov push popa aad popa push inc adc mov or push lods add je insl pop push imul dec jp add mov pop inc les jmp add pusha jae jecxz add push pop pop push stos lods xchg (bad) pop mov je stos in sub addb sub add insl fdivrl sbb popa lds daa repnz pop add std aas and subl pop jmp lret imul push mov mov jno dec adc sar repnz ds xchg test sbb int3 ljmp push pop (bad) outsl sarb or pop push dec pop mov ja test mov out fcmovb sahf push push push and ja push adc movsl arpl jnp mov mov mov sarl and jmp in lcall and push test (bad) mov divb inc jecxz stos xchg arpl fwait push pop jae mov xchg or mov dec inc stc pop daa jmp cmp jae les add movsb inc pop or int test pushf push enter daa jl pop nop cmp fist lods xchg shrb cmp cmpb lahf or lahf sub sahf ret xchg icebp adc clc mov push lahf ret lret int3 pop push sbb jbe xchg pop movsb js mov cmc mov call fstp call dec stc or imul add jecxz mov ret js popf js or push cmp (bad) or sar sub mov (bad) jg arpl add push es or movb sbb push mov mov in mov pop push xchg xor das push sbb jno out in psraw push out add arpl lret out or je pop cmpsb js add mov pop scas dec xlat push repnz loope sbb pop fstl or add (bad) mov (bad) mov movl fwait or fwait int and adc push mov call lock lahf inc pop cld sti loope adc outsb in aam and cmpsl jge std test daa mulb and jp adc jg outsl fidivrl sbb jne push jo and pop mov adc pusha xor add bound pop aad outsb std js (bad) adc mov sbb sub pushf out aas lret sub adc push jnp dec inc adc and outsb mov push imul cmp add add into call cwtl and out jae adc (bad) pop or adc scas adc incb iret dec pop cld popf and ficoml iret jp je repz ja cmc jnp mov adc add cli mov sar cltd test cmpsb adc cmp sbb jmp inc adc nop adc (bad) movsl cmp inc push push ret pushf sarb cmp insl add xor mov jge sbb fimul cmp pop into push jle out enter ljmp or mov in jnp sub dec lock pop mov mov sbb mov inc or pop mov mov dec lds xor inc add sub xor push dec stos add in ds mov adc push pop pop push mov repz iret in push (bad) mov xchg scas mov aaa push aas adc scas enter inc sbb pushf jae das lret xchg fstpl decl lahf jnp pushl inc ret and push mov mov push mov nop xor fisubl pusha mov xchg loopne jg mov idivl push xlat cld xchg push (bad) mov popf hlt inc pop xchg sub inc push popf (bad) push movsl and (bad) cmp xchg mov add subl or cmp cltd dec test adc add pop sub mov shrl mov or test (bad) fcompl add mov lea ljmp shl xchg sbb repz (bad) fsubrl idivb inc outsb add out js jl es aas ss rorl jg sbb lods pushf int3 add inc adc loope mov cmp push mov push pop push dec sub push push mov mov xchg bound dec movsl jle push jg adc subl mov mov stos adc aaa push cld add dec xlat cwtl sahf pop jmp inc push push pop nop test pushf cwtl std push mov add jnp mov sbb xchg dec out (bad) out pop enter loop pop push xor or cli and bound or rorl dec jnp and push insb adc jg mov stos test fsts sar into lds mov fidivrl add cmp pop add xor out xlat sbb lret in stc mov push stos xchg push and or dec loope or js push faddl xchg in xchg das stc add cmpsl mov push mov pop bound and dec subl push inc roll mov mov dec ss pushf cmc and daa les dec daa cli addr16 inc jo mov jnp mov mov pop stos je rcrl into jnp and adc insb mov ret pop mov das jmp pop into cmp jg inc je or hlt jb add push lcall test outsl jns sbbl jne jae mov adc push fisttpl jbe and mov inc daa xchg jno js stc cmp les scas cld or jb push jne mov jmp and push sub inc jmp or xor mov or and sub and daa pushf stos (bad) (bad) mov sti gs cmp cld dec (bad) outsb (bad) xchg scas stc (bad) int3 and cmp add xchg push daa addb fist ret or or adc rorl pop push popf push arpl cmp dec les dec and or inc shl in adc cmp jl push in sub mov or das mov clc shrb jne and (bad) (bad) repnz divb push jno ljmp cmpsl aad leave mov in test hlt inc rcl in cwtl xor stos loop xchg sti sub bound add sbb adc and mov arpl cmp pusha dec mov xchg xchg popa js and inc mov add dec cmp or insb outsl cmp push or add pop xor pusha or jle fimul int mov xchg cmp in sbb je xlat repz xor es call jle fst xor mov ret (bad) jle push fisttpll (bad) sbb adc pop add lret dec fmuls outsl popf pop lahf js jae push sub aad cltd jb rorl cmpsb sti and lahf push (bad) push pop adc out jo ljmp sbb arpl les push inc and xor into inc push sub mov xchg aam pop cwtl fwait jmp or iret pop test movsb pop push in xor test fwait stos repnz mov adc mov lea xorb jmp lock rclb out imulb xlat dec stos nop sbb cmpsb popf loop divl sub push inc cld mov adc lods stos mov mov dec std hlt (bad) adc ja cli and jne (bad) jmp dec xchg rcrl scas add xor jmp cmp sub stc orb dec inc idivl add sub out lret lret pop scas ja mov outsb jnp sub leave sub dec shr js popa scas sti out xchg pop push subb jne movsb shlb cmpb cld cwtl adc push fidivl mov cmp pusha sub pop lahf rclb add inc jmp sbb pop push sub scas and mov dec mov and or lods repz sub jge movsb jnp xor (bad) cs jmp push pop pop dec ret push push in push inc or (bad) or mov inc cmp je fmull xor mov call ret jmp cwtl jae out ss mov dec jmp mov les or lea cmp adc lds (bad) push fistl jmp add push pop add mov orb pushf or and pop pop das in lret xchg pushf xchg mov pop aaa jge clc and ds mov jle insb dec or lea pusha add sbb ljmp sub aas gs jo fldl inc lahf mov mov xor mov lea adc hlt ss xchg (bad) cmpsl sub fs xchg xor cmpsl pop (bad) jae push fwait jmp insb sbb ss jg xchg idiv popa xchg js pop das outsl fwait daa push (bad) jno,pn pop dec lahf fadds pop cmp dec (bad) jbe adc push enter add or enter sbb rolb sub pop pop loopne,pn faddl jo add sub cmc add jae stos testl aaa test pop sti fs in insl shlb jmp sbb testl dec daa ja das add jbe jmp movsl add push jmp pop (bad) loopne dec push xor mov inc jge jge xor mov jl sbb stos call scas aad sub outsb nop push dec mov rol sbb lods and adcl jae dec cli std icebp pop mov jl dec jmp dec xor aas xor stos add iret (bad) out sub out cmp cmpsl add xor jmp dec out and xor push ret fdivrs mov and mull push xchg cmp jg fsubr push push popa imul andb cmp or push push fnstsw jge jle ds add hlt add int jnp mov daa cmp pop dec hlt ss pop xchg jle inc add idiv add pop jg or imul ljmp mov jmp dec xchg fcmovu adcl dec cmp jno mov sub cli lds cli push sbb and push push mov je push out shrb adc add cmp add insb (bad) jmp xor cld jp jmp lock leave loopne cmp or inc stc pop pop fmulp pop cmpsl icebp movsl push push mov loope inc (bad) int3 fiaddl push or sbb (bad) add sub add shlb add push divb pop push scas cwtl and icebp mov jae and (bad) mov xchg lea stc pop and icebp mov test or in add (bad) jl lahf shl mov xor jp and add push jno dec addr16 daa ja out or je jg out jmp add fadd add and jle ljmp sbb jmp jo (bad) and stc mov or addr16 xchg test movsl sti jg lret cmpb out add neg and dec mov xor leave cmpsb (bad) mov inc iret sbb dec gs and lcall inc pop jl or and (bad) rorb add jp,pn and dec loop test mov xor xor add push xchg xchg loope not std addr16 pop inc popf add test sub mov jmp mov in aaa cmp popa jae fbstp add dec push and dec xchg push shlb ret aam mov movsl popf pop enter std lahf add inc mov push into daa stc js in or sti in push add data16 mov adc sti aad xchg and repnz pop push pop inc mov rcrb mov fstpt dec (bad) stos add ret and xchg jbe dec mov add add stc aaa add cmc test enter sub sub jnp jmp sti adc and adc test shr pop lds push add or inc test lret and in fistp pop mov test pop pop scas add and imul imul add in outsb mov sub std das sbb push add dec cltd inc std pop inc enter nop sti js in or sbb mov adc mov (bad) xor fisub movsl sarl dec sahf in sarb xor cwtl outsl push pop cmp test rorb rolb ret (bad) jmp pushf dec xchg push ljmp out push mov dec sub xchg sti mov adc mov add pop push jo bswap inc and pusha or loop in xchg pop loope leave repz movsb lods cli xchg rcll into sub dec sub pop iret push lret cld jns pushf add add call add mov sahf sbb lret pop or sub sbb cmp pop outsl mov adc fstl cs push push inc cmp jmp push mov fimul add cmc arpl in xor popf xchg push jmp out inc sbb sbb or add dec out jg das mov jmp xor cmp xlat sti add (bad) repz jno icebp cmp cmp shll add mov dec jecxz mov mov mov int insl cwtl outsl mov jbe push sti mov push out xor mov stc in xlat aaa jb xchg jl and lods gs jbe scas jge pop sub mov dec shrl cs xor (bad) pop (bad) mov mov movsl inc ljmp pop pop in xor ss sbbw rorl sbb cmp add add mov inc xchg fistp xchg add lret mov sbb ret or or repz mov scas movsb pop jmp sti cltd jge inc jmp fildl jb (bad) add push add pop sarl in dec pop roll ja inc sti cs inc psraw imul xchg push mov xchg add mov ljmp outsb std push mov fimul sub adc fimul xchg stc and push push mov pop rorb divl push daa jmp or sub push jnp aaa pop imul mov imul in es and es jg test or daa and inc mov fcmove xor ljmp xchg sbb or adc and push push je das in flds aad aaa dec pop out xchg or mov out aaa in daa mulb mov dec push or jno xchg mov negl xor pop sub cmp fcmovnbe inc leave add mov jnp xchg sub sbb mov add shrb sti mov enter adc mov jg sub and fisttpl bound icebp in or sub dec bnd cld and addr16 add cmp add xor std mov fld adc fidivr mov jmp mov jl dec sub and jmp call out adc es pushf and mov or fs inc scas jmp xchg sti flds int3 cmp das jmp leave (bad) xlat insb fldenv sub bound lcall dec push dec add loopne xlat mov mov push xor pop pop fild push adc adcb aas pushf daa std imul mov stos inc (bad) mov jge pop fs sub sub sbb sbb jg cwtl movsb push push sub nop outsb mov (bad) mov push xlat cmp adc inc mov pushf push mov (bad) lods lock push loopne imul insl gs xchg xchg mov and and fs (bad) jne add jb cmp cmp xor cltd add adc fcmovne jecxz adc adc test push or in clc sahf pop cmp inc mov inc add cmp cmp je adc popa mov push mov out sahf or dec repz and cmp adc sub call or push cmp sub (bad) pushf cmp mov jle les daa lods mov dec mov les pop sub jno fstpl dec sub lahf or inc push pop pop cmp xor cwtl (bad) ja xor in cmp push jge jmp mov loop jmp clc int3 lahf sbb leave sbb test add jb push add loopne pop popf outsb ret xchg sarl imul push pop mov mov insl add std mov add or mov dec adcw push fild lahf cwtl xor xchg add rorb sub add xchg xor adc xor mov add xchg cmp push pop sub ljmp mov clc add nop cmpsb pop call jg push push repnz dec and jge sbb xchg dec stos xchg push push jns aad mov lret or fcomps add not in dec mov adc loope adc ds outsb and push push enter add xchg or daa pop adc and add lahf rorl insl les add pop push pop jp adc push aam daa imul not xchg rclb pusha adc inc dec and inc xor and jns,pn sbb add adc bound ret mov test mov mov adc dec sti push jge pop pusha mov in insl xchg mov pop mov adc jns mov pop add pop mov clc and adc inc shlb or mov push and inc js cld ja add insb ret popa pop cmp push xchg or imul call (bad) cwtl mov add divl push lds jno mov lods sbb push push movsb add imul jae add dec fisub scas xchg imul insb add js add pop test or hlt sbb mov out rorb cmp shrl mov pop dec jg jbe jl pop sub push icebp sub mov and xor add mov popa adc push incl xor sbb or (bad) sarb cwtl or or shr lods lcall aad pushf fwait cld and adc mov loopne imul loop add pop shrb cmp xchg scas sbb add cmp pusha test jmp or push add in add lds adc out pop bound or xor inc sbb rcrb sub (bad) push popa xchg mov cmp jbe mov pop jns jb xchg sub test push pusha loope jne xor add call dec cmpsl add cwtl mov test inc clc in push ljmp movsb outsb pop add adc fcomps sahf or dec pop sti mov pop test dec jmp jp insl push (bad) lock test test adc xor jns test orl pop outsb cmp mov das or mov or ds lods adc inc int3 mov dec xor dec sbb loop push cmp imul sarb nop ja pop xchg mov mov mov jae dec popa and dec fxch fsubr push stos pushf enter mov cs sub add aas inc insb adc sbb fcompl xchg nop test outsl xchg dec pop dec push pusha mov in dec add or or or add imul popa icebp repnz mov cmpsl loope gs jo mov push add or clc fsubr or fsubl mov call and in add fcoms pusha push rcrb push jmp sbb ficoml leave or enter (bad) repz (bad) mov adc jb adc add popf ds jno adc js ret (bad) cld xchg jl adc imul popl mulb push jb jge adc js inc test sub scas test pop int3 lds (bad) out gs adc inc loopne adc push sar cmp (bad) or imull mov cmpsb mov ds les lret aaa xlat loopne sub cmp add mov mov sub mov cli incb pop mov xchg loopne lahf push xchg aam cmp out incl enter js ja add stc xchg out mov sbb or std addb pop test popa mov push nop or lods add mov mov dec and lcall lcall in push sbb cmc push push adc add xchg int sub mov add xchg subl cmp or sbb pushf jg xor xchg xor (bad) cmc sub jecxz pusha icebp pop or or pusha scas add push or sbb jle and xchg mov pop add ljmp test rolb xchg add lock add jbe inc sbb pop sub jl fs push nop hlt insb push adc adc push push mov or cmp or fistp mov pop push cli mov push push fistpll mov (bad) cmc pop (bad) or and dec add jl pushf incl push add pop xchg loopne add adc ds add sar cmpb mov xlat mov sbbb mov loopne fnstsw aaa fcomps xchg mov insl clc sbbl leave or add xchg movsl pushf lahf xchg subl inc sub insl test jnp outsl (bad) in data16 or mull and out push mov or loope subl jno push movsb rorb add jle loope insl adc mov push subl adc mov fs nop or cmp add fsubl dec fadds fwait pushf hlt (bad) mov dec fsubs fcoms pushf cltd icebp xor add xchg addl aam add in cmpl push lea mov xor (bad) jbe outsl ja mov nop add sahf daa icebp test int3 adc add mov nop stc icebp xchg add outsb imul xor dec test inc mov cmp jg dec sub add retw xchg sub add stc cmc imul repz mov or outsb adc bound pop cmp lahf cwtl mov stc dec ds sbb mov repz insb bound or xchg xchg add cltd add roll shl add sahf enter adc pop jo test xchg (bad) popa push leave in gs xlat jb mov add sbb add clc in and mov int3 pusha or xchg stos pushf lock mov mov test pop lds ret int3 adc lock sbbb dec jge push xchg orb sub mov pop xlat xor cmp iret mov sbb mov bound pop jo jmp mov fcomps loop mov hlt imul adc cmp gs adc adc push xor and xor aad call pop push test cwtl loop imul xor nop addr16 popa ljmp sub pop jo jns adc mov dec cltd cld imul mov and mov mov imul xchg add sbb aam mov dec enter pushf lahf pop aam xor or popf adc (bad) enter mov and and xlat xchg outsl (bad) adc mov jecxz adc mulb mov jbe in popf xchg sbb xchg pusha cs add jns call add mov inc or lods outsb ret ljmp xlat decl repz mov mov jl add mov mov fldt dec popa sub cmp nop popa adc hlt add fimul inc loopne or inc xchg daa imul mov cmp mov sbb bound xor pop cmpsl pop jmp xor sub (bad) aam loopne pop subl les xchg cmp test out and cmp mov or inc mov pop adc xor cld sub push inc out mov and xor cwtl dec dec mov adc dec jp vandnpd jno mov push out mov mov ret jg rcr dec inc mov call adc mov addl inc loope pop and pop inc push ja dec mov xchg insb add xchg in imul xchg flds push xor fadds adc or ds xchg in xor fsubl and push jl push mov add dec (bad) in inc ds ds pusha js dec add xor fsubrl cmc aaa xorl jns cltd test jmp inc add xchg popf cmc push popa inc lcall aam jp js stos rcl sub lahf cwtl in mov adc test adc add mov mov (bad) icebp cmp mov push cmc dec popa gs mov add push cmp test es adc outsb jecxz daa sbb inc mov and mul repnz cli pushf push xchg xor xchg and test test loope add dec add pop pop call mov adc mov dec mov scas ds jb in xor xchg cwtl or and mov or cmp les ret cmp lods push pop mov clc (bad) mov dec icebp test jno pop pop xchg out add jmp in loopne dec popa pushf add dec sub cmp sti pusha dec icebp or mov enter popa es imul dec (bad) mov rcrb aas mov push imul pop test fmuls cmp cmpsb into jns cltd movsb jae add jbe aaa xchg add push insl dec sbb inc adc push mov and pop cmp adc fdivrl ja test fsubrl aam rolb sarb lods icebp mov jp out mov in sbb adc das orb pusha sbb movl es push or (bad) call add outsl pop (bad) shr dec fisttpl gs idivl add (bad) (bad) icebp push addl xchg pop sahf add call mov aam les les imul test rcr fxch imul cmpsl cwtl pushf ljmp jo dec mov pop cld test mov cmc inc fimull hlt lock pop or push dec in pop xor ret loopne sti repz mov sub cltd fcoml hlt loope lds xchg pop mov jb and dec movsb pop push jne nop cld push cmpsb pop movb mov test cli jle fdivr fs sub lahf faddl in pop xlat xchg pop or lock xchg sub or inc cld sahf cmp aam cwtl jb inc xchg pop outsl cmp mov adc push out pushf leave lods sub jnp decl insb and dec push mov add int3 mov pop out in pushaw cs or test sub mov mov jl nop dec add mov dec cmc add fildll push aad xor dec or addr16 je in or out lds sbb cltd outsb cmp jae loopne nop push or loop mov in andb in inc cmp (bad) jo add push pusha popa dec es or adc rolb xchg jl int3 push jp jge subb pop pusha add sub test pop push add and and mov push je xchg daa icebp clc fist mov inc mov push adc jbe mov add cmp divl and cltd pop imul mov rcrb or js sub cmp insl jne push pop or xlat mov adc adc adc out test dec xchg repz xchg data16 xor ljmp adc xor aaa or or add pop notl inc rclb (bad) ljmp bnd pop mov adc xchg dec xlat test (bad) clc sahf test cmp adc mov add mov les add pop mov mov lock inc addr16 mov add inc dec pusha or cmp fs add xor lock idivl xor adc push jo adc xchg pusha xchg inc xor push xor call (bad) cld (bad) jo adc push inc dec incl or cmp mov data16 rorb call mov fcompl dec sbb int3 lds or push call daa or pusha adc cld pop mov mov sbb push dec jp fsubs pusha push xchg add cmp fdivs out add xchg adc adc ret cld add shr movsb add mov out xchg or mov pusha adc lods int3 cmp imul insb xor jnp fcom adc dec dec cmp mov cli push add loopne adc nop mov nop aam jae outsb xchg rclb (bad) jge imul insb cld xchg add fsts add xor xor mov inc push mov es mov incl adc xor inc fcmovnu mov add ret repnz jg add xchg in push cli rclb dec mov mov xor and aam sub je add bound and jno aam cmp cld inc nop ja xchg aad adcb xlat fdivrl push sbb outsb mov popf sbb cmp test sahf cmp xchg test jl clc add adc outsb clc dec xchg mov in movsl test stos mov fsubl cltd add and adc sahf pop aaa outsl mov push test add adc and outsb pop push gs in add psraw out incl icebp loop in fsubrs mov push mov sub cwtl inc in pop cmp fiaddl lock sbb pop in dec lds mov mov xchg and sub lea cmp mov jbe pop rcrl add mov es sbb inc mov adc mov add mov insl addl call aad fbstp lea fsubrs dec cld lods shl dec cmp jmp in clc inc ds inc clc push mov mov repnz sbb incl sub jle xchg dec lock test pop adc por outsb cmp xor xchg cmp mov clc adc js push cmp mov pop adc je (bad) aam nop loopne push int mov popa sub and and inc cmp push or adc xchg stos jbe out xchg mov insl add add push dec jmp fildll adc adcb xor add (bad) rorl mov sub call test pop pop nop push sub je pop cs push sub lods loopne xchg cwtl int3 add cmp inc xchg lods sbb mov adc cmp push in adc sarl std mov fs add push jo cwtl sub xchg add xchg js sti sub pop add xchg mov dec inc add out insb aas dec cs lock out fiaddl jg push add incl imul movsl test xchg add inc jns into and cmc hlt popa lea dec clc nop (bad) lock movsb in dec jmp cmp das add add mov cmp cmpsl outsb xor mov daa loopne xlat loop sub movsb jbe movsb add in mov mov add sub mov or inc jns add sahf mov push popa dec dec jl (bad) add adc jp push xor movl outsb lret inc adc cwtl xor enter dec mov mov loopne add lods sub enter dec daa sbb add push or test pushf mov sbb jl cmp (bad) cmp jne scas std adc sbb aas mov or popa xor lods sbbl fsubrs sbb or iret fucompp push pop pop xor xchg (bad) and add xor sbb jge cmp lahf rcr notl negl cmp icebp ret cmp add cmpl push rolb mov sbb clc dec adc in pop push call outsb cmp adc mov enter add sahf loopne mov jg mov push test mov icebp out dec mov mov imul outsb xchg test js mov xor xor mov and mov jo pusha xchg jmp js movsb jns add fcoms adc adc and mov inc dec jbe nop mov inc aas push in cmpsl xor les push (bad) insl inc push hlt mov push jl push cld imul xchg xchg pop frstor mov cmp loopne out add sahf popf and pop fsubs xchg dec dec xor outsb lea xchg jne stc in jnp sbbb mov test dec cld imul cmp and jno out sahf in adc rorb icebp leave fs pop xchg loop sti jbe fstpt add (bad) popa imul in or adc push add std inc test cmp rcl sahf xchg pop jge inc fcom (bad) xor cli stc add push arpl push push pop fsubrl mov cmc adc fiadd dec (bad) mov das cmp add pop push fistl xor pop sbb xchg dec cltd jecxz jo push xchg cmp jge mov adc cs mov mov in sbb repz pop les inc lock jbe xchg fsubl add stc add sub add sbb push enter ret es xor aaa cmp aam adc xor ds sbb mov cmp (bad) push je add inc fisubrl inc inc das mov sbb push xor inc xorb and int sbb iret inc pop sbb sarb ds test add lret and sbb aam sbb and sub inc push xor cmp ret cmp and sbb loope inc mov add xor adc std add and add aas addr16 inc (bad) push xchg xor sti xor loopne lea push adc mov add fsubrl out xor mov jecxz cmp nop inc sbb into das inc jle sub addl imul xchg inc cmpsb or xchg xor sub rclb jns enter sbb adc into and sbb inc je lret mov hlt xchg dec pop int in adc push arpl adc (bad) nop jp and push enter inc jbe inc (bad) negb cmp sub xchg inc add lret xchg mov xor dec lret je push nop xchg inc cmpl das xchg jo shll push xchg xchg adc jmp mov lret lcall ja or fmull sbbb xchg jge or call nop cmp rclb inc dec fs pushf sbb dec xchg mov adc clc cwtl lea xchg (bad) fldenv cmp mov adc jnp fs push adc clc ja inc push xchg adc lock push push xchg subl out push incb mov call add lea adc stc xchg cld out lea loope push push dec mov mov orl rorb test cltd jnp xor add dec sbb adc repnz orb push ret xchg fcmovnu in add jmp sar dec or xchg sub or faddl das push xchg dec clc aaa inc test xor cmp rol mov and sub icebp pop daa add inc cld (bad) and and fimul arpl sub or test and test test test xchg add cwtl in lds sub (bad) call lret faddp mov cld push (bad) adc jl cs call neg cmc add xchg mov sub (bad) fistpll cmp cs adc and push pandn inc add inc dec pop adc test and data16 dec fs in mov mov loopne xor push lock (bad) fisubrl dec (bad) mov mov inc mov push add jnp lds adc cmp loop into in inc out or sub hlt push add cmp pop xchg dec cmp adc popl inc ficoml inc or lods inc and out xor ss cmp push xor in and sbb nop xor repnz xor xor adc adc inc lock pop es sub fwait loope add mov loopne inc and addb andb sarl int pop xchg dec or andb fnstcw mov dec sbb cmpsb (bad) fmul jecxz pop nop in xor leave adc or fwait imul (bad) and in shrb pop repz out sti xchg gs and xchg add xchg fbstp movsb mov and xor sub popf add aas xor dec hlt xchg lcall add scas cmp cmp mov push dec mov fldcw loopne mov xchg sbb pop sub sub and adc fucomi add xchg gs movsb dec je add pushf cwtl adc aad insb add mov mov xor inc and shrd sbb mov sbb cmp (bad) (bad) mov shll and inc fdivr mov mov push not les sub dec fnstenv or mov out jnp push pop add xor or cmp inc pop add xlat jae xor adc fldenv cmp dec cld pusha sub inc ret lcall popa pop repnz (bad) lock push adc sbb sub xor and and sub dec jge and add mov pop (bad) jp int3 das ret pusha xchg cmp leave iret cmp scas and and inc or bound pop int dec pop dec or or xor jg les rep addb lods inc add enter in push nop dec sbb lahf ret mov add sbb add and cmc sbb xchg shr lcall mov xor lock gs out add aas sbb xor push xor sbb loope sub enter dec sbb cmp and lock jg call nop ret xchg enter imul hlt xor sub js hlt repnz or pop andl dec push and or in adc das pop jnp dec inc mov push xchg jecxz es xchg dec or xor aad inc hlt or fdivrs sub jmp pop mov mov int3 in imul adc test xor mov std rolb aam stc push std add into ret jecxz push push pop pop shlb sbb and rolb je fdivs adc lcall test rcrb cltd pusha stc xor es sub add nop shrb dec jo out out inc addr16 push mov lcall inc bnd cltd mov sub pop mov pop add adc add and cld inc or in jge add mov sub dec in or fild pop ficom aaa sbb (bad) test iret sarl mov lock xchg test das inc test bound rcr pop push cmp ljmp lds xcrypt-cfb cmpsl fs push bound add jg mov sbbb sub rorb pop ret sbb lods cmpsb ja test addl int3 dec or and int3 les mov imul stos xor add cmp addl lods (bad) cmp xor mov ret jge popa sub call fwait mov push push inc ljmp fnstenv adc push and mov sbb pop sbb scas jg (bad) or mov lret adc mov rolb insb jmp pusha sti add push (bad) idivb add push mov in pop fwait pop int aaa mov cltd fadds insl add jb test dec pop fucomi add sub rcll adc jecxz rolb dec fmul adc push aas fsts cmp sub popa and ret mov mov fwait scas jb sub mov (bad) into add mov mov cld aas mov inc lock stos mov mov inc sbb lea and push sub lds sub shrb push daa loop int3 add sbb aad mov dec loopne cwtl mov or fdivl rclb cwtl adc pop call push cli leave out pusha movsb mov push push cmp push adc inc lock mov jns nop mov adc in cli mov ret sub inc sub sbb xchg stc or push popa xor or subb sub cmpl jo clc inc push cmpl and test sti push or cs les arpl subps out add mov dec ljmp and lcall or adc mov in jp push in shl mov stos push hlt ret (bad) js dec into inc sbb push mov icebp int sbb fwait mov adc sub mov cmp inc jo sub push mov ret mov nop rol add xlat sbb fwait pusha push nop lret cmp mov out sub jge dec add dec aas add jp push lret scas mov fwait or sbb xchg ret pop sbb mov nop add xchg xchg (bad) add jecxz add xor repz ret or adc adc lcall in into lock pusha and sub mov mov ret aad cmp insl repz adc adc mov cs enter sbb iret and adc add and outsl gs inc (bad) mov xor call jmp cs xchg add out paddb test dec inc sbb sub push lret lock and inc mov xchg cmp or dec mov cmp xor jne repz xchg add push (bad) mov xor add sub sub gs data16 add jo adc adc movsb lock hlt into push js dec xchg sub sub lods mov dec inc cmp mov or mov int3 xor bound sub lret push cmc sti out es dec sbb sub mov and dec mov pop and jnp in cltd fcmove xor adc mov mov push sub fwait mov and sub ret mov add jno test pop xchg dec pop add cmp and ret jl nop jbe dec xchg call cmpb adc pop or mov add mov xor xor jmp test (bad) les xchg add out fstl dec arpl sub push push in cmp adc push adc stos xor jl in test lcall xchg iret sbb add jmp adc xchg or mov ficoml sbb fisubrl adc inc ja add xchg jle test js movl xor inc out or test (bad) repz xor push sarl loope test mov inc push xor pop sub lret adc or test xchg insb aas clc sbb lock mov (bad) dec mov sub stos push fcoms inc push add push mov fisubl sbb icebp icebp mov bound xor imul sub xchg sbb mov mov jmp (bad) mov inc add and mov cmp rcr mov pop push pusha mov xor sub inc fcmovbe in push lock rol xchg inc or pop add xchg shl inc inc movsb or mov fist popf add xchg add in add push (bad) mov repnz mov pop mov and xchg inc scas add sub sub add xchg sti inc jp mov mul insl inc test cwtl push inc popf sbb (bad) jae or sub xchg lahf add and sub or ret stos pop mov adc dec idivb sbb cmpsb outsl sub inc pop mov arpl xor jmp jmp adc (bad) xor adc jge and out push add and movsb jbe ret and add sbb movsl pop setl pop xor jmp loop es add push test or or flds inc dec mov sbb (bad) (bad) fnstsw inc sub ljmp push clc inc das inc add sbb cs dec add mov pop cwtl js jle jne inc mov loopne xchg insb lods (bad) xor dec jno (bad) int dec cmp (bad) decb insb dec mov inc jo outsb xor ja cmp inc in lods adc pop jge sub add inc add wbinvd add mov sbb or sub sub out or push sub sbb dec mov push jbe push push push xor jmp adc andl mov hlt and add mov loop mov fisttp (bad) mov xchg lods mov fisttpll or pop mov mov pop dec sub sub aad mov xor push fstl lods inc add in mov or loope jb add mov dec lock fnop fwait inc adc dec adc mov hlt mov outsl mov cmp (bad) lock sarb inc mov popa daa cmp aad andl cmp sub cmp lahf and add ret outsb adc aam adc push dec lock (bad) cmp mov sahf imul push sub push jne movsl or (bad) ljmp mov enter fiadd std add or jb lea and adc xchg ret lcall fsubrl insb add adc in lcall clc sbb cwtl lock cmp sub into in inc popa enter fucomi cmpsl ret rorl fimull arpl jecxz,pn nop or dec add push or cltd addb roll mov pop nop pop inc (bad) xor cmovbe sbb add ss jl pop push cmp pop pop or (bad) add clc xchg out adc repz jmp inc inc arpl fmuls shlb lcall cmp jne rolb incl xor (bad) xchg popa int3 inc sub call imul jnp,pn daa jg fmull enter push cmp lahf cmp jo pushf jmp in or dec mov movsb hlt insb xchg cmp fldcw mov adc rcr dec sub adc nop pushf push pop enter pop xorl add dec and xchg clc clc adc std rclb inc xchg pop dec xchg dec aam cltd pop lret dec nop mov sbb mov cwtl xor pusha xor fs leave jbe call sub aam sbb dec add inc push sub test (bad) idivl test mov inc or pop xor negb push mov dec mov dec cld mov ss inc fstpl xchg in add pusha test fsubrl sub pushf call and (bad) mov push lds leave aaa pop es adc sub pop push push movsb push sbb (bad) in sub and cli cld stos and adc adc inc and rolb xor jnp sub add mov leave sub mov cmp adc mov lcall inc fistpll shl cmp aad sarb orl rcr xchg test inc xchg and cwtl pusha movl ret mov nop add dec mov loop testl leave mov lea sub loop push stos js and jmp insb or ret sti sahf cld adc fadds out icebp lret cmpsb or negb lcall xchg sbb jp in test lods mov iret mov sub es mov inc mov or inc cltd loopne data16 lds imul shlb fsubrp adc and lds test popa jge imul add (bad) lcall push pop loopne mov rcrl lods add jns add adc std orb or aad add lock sbb dec in movsb rorb dec mov sbb lret mov sub mov cld mov daa pusha in add mov and push sbb mov test inc nop ss add add sarl add sbb ljmp inc ret sahf js adc jle sub lock xor popw or stos orb leave mov and mov or pop mov rolb leave rcll push jbe pop fnop sub stos and mov xor cwtl lods testb lea pop nop mov pop mov add sub and adc sbb push mov cltd int add inc sub mov xor mov adc cltd jo dec add mov mov fs or dec mov es or ret scas stc adc stos int3 xor enter adc dec mov push add mov cmp arpl leave test adc xchg or clc sub fmull mov mov fmull mov test dec lods nop scas mov adc sbb lods sub and ret inc ret jne xchg clc dec lods lods inc rcrb pop inc and mov add inc enter adc or fsubrs fwait push add mov pop and test (bad) xchg ret sahf adc aam xor add and lcall push shl sub inc cmp pop xchg sub nop inc cmp pushf jl in and jle adc lcall sub xor (bad) xlat xchg inc mov enter xor stos das lods je push (bad) loop jecxz enter xchg push add push jne gs nop xchg xor pop and inc add sub (bad) mov dec push jl (bad) and mov cmp push daa adc sub cwtl jbe gs cmp imul pop (bad) rol mov xchg call jnp,pt adc sub xchg inc push les fwait rcrl pusha xlat popf lock scas push daa add dec add popa jno int3 mov jp es (bad) cwtl arpl movsb push clc les imul ds lsl or je adc out (bad) pop imulb insl inc or add sarb mov jmp inc movb add enter ret inc lods loopne mov add adc push fiadd sbb dec jo dec adc ret inc pop add xor call test xor add adc or pop popf mov push loop xchg (bad) push sbbb xchg insb lcall mov pusha cltd adc call movsb das mov add rcrb sub test and add into pop or push xchg adc push or push sub inc scas add mov sti mov add fnop daa fimul icebp sub xor cmpsl loop jecxz add outsl insb popa test push dec (bad) nop (bad) sub push aaa aam push lret sub xchg jecxz sub outsb and push or add test repz xor jmp adc inc nop push push push sub pop inc cmp dec (bad) jmp hlt pop inc enter sub pop daa int3 pop adc add les mov andl add repnz sbb (bad) cmp loopne sub in mov adc add cwtl outsb push or jp add push add xchg pop rcll loope popf pop negl jno add cmc jg ss xchg and add dec push or and xor sahf lahf movsb push inc sub test add ficom xor mov enter out test or and add mov dec notb fldl xor pop pop shlb inc and jmp enter and es int3 inc sbb pop pusha add add or add cmpsb push jp icebp jo sub cmp pushf push out pop js fimull pop shl adc jb adc add mov pusha mov mov sub add out in out fisub sti test sahf mov xor xorl daa bound push push push xchg or in loop lock pop mov adc loope pop (bad) pushf jo sub scas dec sub pop jg out sarl out inc mov jg dec jle daa repnz inc add ret (bad) popa sub or jnp xor push dec lock and or sub inc inc xlat jno and out add cwtl jmp loop or or mov jecxz pop dec xor lods add in cmp rorb mov dec test xchg mov sbb sub enter push push and mov jnp pop hlt push mov inc sub js,pt xchg jecxz or imul inc sub fdivs add and sarl dec stos add push enter add rclb sub mov les push dec mov lock jae nop sub fs mov xchg sub iret sarl pop in and mov xor xor push daa pushf rcll pushf jp xchg push mov ret mov or sbb and dec cmp and nop enter mov add add adcb out clc or pop std or mov dec pop aam push mov dec mov jbe or test add sbb inc dec and cld pop sbb xchg push lcall ret clc add cs inc cmc call adc dec les imul outsb leave pushf fs or xor movsb or cwtl xchg dec mov sub fisttpl sbbl add mov jb mov insb je lcall mov in pop inc mov test int ret cltd insb loop or leave (bad) jo hlt jbe out xchg xchg int3 int insb mov es jge or adc je shll xchg mov lret inc push xor mov sub mov cwtl cmpsb sub sahf cmp inc or lcall push arpl sub adc add cli test inc test or mov cwtl dec mov dec jecxz sbb sbb xchg inc sub repnz dec pusha mov sub xchg test xchg and push adc ror xor add inc test push ret mov rcrl adc mov mov les pop mov sbb shlb mov and scas loop sbb lcall mov ljmp lahf xchg or ret imul fwait sub shll add push push and ret ret test fnstcw xor lahf pop cmp es lods inc mov mov js rorb xchg ret lea and in and cltd fnstcw lcall mov arpl dec scas or mov and lea mov lcall mov inc std mov in cltd sarb push sbb or and sbb push cmp jl mov sub nop mov rolb (bad) mov jns das adc fs mov fmull rcrb add inc xlat xor sub add mov sub jg sbb pushf ds jae mov aas sbbl stos add mov sarb scas and add shlb jo lock sub mov fsubrs shll cld (bad) inc ret jo mov cltd jmp sbb sbbl dec push lahf pop clc fld push add aam inc xor sahf ret mov mov repz xchg jno (bad) sahf and popa cmc pop popa cwtl mov inc gs aas add adc adc dec push mov add popa sub adc ror xchg mov mov sbb sbb stc xor subl inc inc mov mov mov bound lret dec sub mov cld movsb pusha mov add sub lcall dec enter mov inc pusha pusha pushf lcall mov cltd sub xor mov sbb and pushf add lea ret add js cmp inc push decl dec popf xlat inc mov cltd cld push clc call sbb enter inc sar mov adc pushf add int3 (bad) enter leave rcll push dec add mov sub xchg aam mov pop cltd mov daa dec add insl icebp in test add jns or repz jl mov add flds ljmp loopne xor or pop mov xorl aam sbb xor (bad) dec (bad) xor xor fldcw sbb mov addl add lahf inc cwtl and jecxz pop mov jne arpl add sarb sub sbb into dec push and xchg les aad in xor push inc pop test nop adc and add je mov aas xchg das push mov ss lock aas lahf and dec scas das push test mov pusha and sub (bad) test inc adc (bad) leave and push pop mov dec pop inc addb mov push push add add (bad) or test imul xorb xchg insb test das mov adc or add cmp xchg xchg cmp rorb jbe add inc outsb pop xor loop aas or or lock jmp in sub imul stos dec lock and cmpsb bnd sbb mov and cmp adc push and andl pop and test fbld sbb out mov add loopne mull add inc or out add inc es xchg stos (bad) push pusha outsl sbb aad popa out pusha or cmp inc je mov lret adc dec das adc stc add adcb das push fsubl aaa mov xor (bad) push popa mov les icebp lds sbb mov sahf fisubr xor lahf push fistp dec dec sub aas les ror add imul mov sbb enter (bad) aas sbb jne mov push xchg stc int cld lds and xchg add cmp mov lahf insl and imul inc xor fs and and dec xor cmp and push sahf xchg pop addl das pop lods test js aad mov cmp mov lds rcrb (bad) pusha sbb inc add roll mov sarb ds cmpsb and shrb mov bound adc imul push out sbb pop jnp das jmp fisubrl ds lods pop loop add add into fldl in adc leave adc jg loope pusha fs pop xchg loope (bad) aas push add mov int3 gs lock loopne (bad) hlt nop mov shll lret lahf and out rclb lea adc out cmp inc clc cltd sti cmpsl sub test les test (bad) add lods daa orb fs push mov sbb mov and xchg pushf inc les cld add sbb jmp mov mov stos das rcll sbb xchg mov shl mov mov sub dec and arpl les ret cld dec pusha jle adc enter sahf daa js jmp add mov lock sub dec cli or adc les addl mov sub popa ficompl adc lret or add incb data16 popa mov mov in pop es mov cmc inc cmp adc and jmp inc push dec mov adc add lret mov inc push lods cmp and xchg dec adc hlt or xchg adc nop mov adc inc loopne sbb cmp pop loopne leave sub xor and negb bound aam push dec inc in imul cld sub jae sbb pop fimull inc lret adc xchg push adc cmpsl mov dec loopne pushf adc mov je and sahf lcall fsub mov sar stos ret adc (bad) nop xor sub ret (bad) in mov adc xchg pop xor inc rcr and addr16 icebp add dec inc mov out sub push mov pop or add (bad) mov xor mov stos cmp (bad) mov add xor imul popf lret rcrb push mov inc xor test adc jp and mov adc add clc adc ret cmp stos inc stos or add (bad) jmp gs (bad) nop jo pop js rolb xchg sbb push jb shlb pusha mov cmp popa lds mov mov add or push push jl ret aam sbb pusha adc mov sub xor mov mov pop or cltd iret push les mov pusha and mov mov sub dec ret or dec popa sub dec test cmp and cmp dec cmpb sarb ffree scas dec add leave inc add adc rorb popf adcl and inc loop xchg clc mov sbb xchg mov lods add mov rolb inc sub xor inc xchg daa sbb pusha push cmpb pop ss adc mov dec nop sbb dec add stos sbb mov test ja dec lock fisubr mov jl fadd sub ret xor push stos and push clc sub dec jbe xor aam jp lds les xchg push sbb gs stc pusha push cwtl (bad) inc xchg xor dec mov inc jo add ss les inc adc push sub xor fs inc aaa adcb xor dec pop mov lcall mov and pop or inc cmp or lock push xor (bad) push inc dec mov xchg or pop loop sub jae stos rcr jnp dec enter xor sahf lcall sbb mov xchg movsb insb test bound add rcrl int3 gs stc cli nop fsubl lret dec mov adc push mov mov mov xor mov jns mov (bad) sub mov sub iret mov mov hlt (bad) scas loop pop cld xor add jbe movlps mov pop (bad) mov dec fwait mov sub std add add and in or or add sbb iret mov inc xchg nop pop jo dec mov in rolw arpl inc jnp lds lcall jns xlat sub test mov (bad) faddl xchg mov pop (bad) sbb and loopne (bad) sbb mov in add dec lock ret dec outsb icebp sbb dec sbb mov pop xchg pop lock jecxz add fld (bad) mov das fwait test pop and xlat call popa dec sahf stos mov lret adcl and cmp es xor stos loop,pt repnz sahf adc inc xchg add js or add fidivl xchg adc inc mov jae add inc sbb mov mov (bad) sahf ret fs sub movsl cmp mov imul or adc les pop in dec sub pusha in xlat cltd push dec in sbb insl inc mov mov rcl push in adc lds adc push lock dec sti adc sub or ret jae mov aaa dec xchg mov jmp sbb jmp jo xchg xor xchg js dec int3 loopne pop mov adc movsb pop dec add scas les imul mov push lcall rcl (bad) xchg add push std adc and cmp mov cs dec or push nop or int3 add mov dec imul loopne pop adc fwait in xor dec mov add subl mov jl jl dec in mov mov ret lds andb xchg jo mov bnd pop mov imul add sub dec gs out roll push ret add push cltd adc push popf cmp ljmp rclb pop jb push scas adc mov and fcomps xchg js int mov (bad) in mov call sub add cmpsl cwtl cmp xor nop call test jl adc mov mov in insb add mov mov andl dec call or fisttpl nop sub dec mov in inc jle pusha dec push and iret push adc jecxz cmp sbb cmp adc cwtl ret aad adc cmp ret or or insb cmp mov mov or dec hlt xchg aam lret dec sub sahf enter mov dec jae adc jecxz or lods sub inc sub mov data16 jecxz shlb out arpl pop sub int3 xor xchg fsub mov lret orl addb out xchg xchg mov mov xchg mov ret xor nop add scas pop mov in cmpl test lcall test mov andb mov sub push ljmp pushf pop add ficoml jmp pop test push les std xorl in (bad) mov add outsb test push hlt add loop push lcall sub dec fcmovb mov cld sbb jmp pop test lds inc jg into add xchg pop fs push aad cmp mov mov inc mov scas mov dec scas add mov pusha sti cmp add std jl sbbb lods xor mov mov sub fnsave xchg mov xchg (bad) mov dec pushf xchg pop mov mov pop inc dec mov or je cmp stc aam and mov push mov inc movsb jg int inc mov mov rclb stc sub push scas lret cmp pusha cltd cli inc add ret and add in xor sub js lds adc dec mov mov mov mov das inc sub loopne mov addl movsl xor xor call bound mov xor enter cs je or pop ja add in mov pop cmp stos out or mov lcall fcoms in sarl call ret cmp push ss scas rcrl mov mov mov test call mov arpl add push nop or cmp fwait lcall sar mov add cmpsb and lds adc loopne mov rolb lock xchg dec cmp ret cmpsl (bad) or add pop and push and fiaddl sbb (bad) dec mov adc test dec cld ja,pn add sbb nop testb lock das mov sub je test bound mov or ret dec push fadds ret int3 aam mov inc roll or (bad) mov test adcl cmovnp cmpsl inc (bad) dec adc dec push push imull aas std add fs insb add rolb mov nop inc cld and clc xchg jle (bad) cmp fs mov sbb xor xor push addr16 sarl ret loopne xchg hlt xchg xchg jge rolb pop inc inc (bad) cmc dec xor sub fsubrp add das inc xor xchg adc test scas pop ficom pshufw (bad) and enter aam dec dec arpl xchg add pop xchg loopne push lods (bad) push jo sub jg or test mov inc loopne adc add inc cmp mov push sub int jmp push or mov or ret add mov fmull mov inc je cmovb jnp adc test push xorb inc test jge or jle incb nop outsl (bad) mov adc stos sub mov dec inc (bad) adc in add sbb or sbb or sub add mov les jl xor enter add cmp and mov shrl sub cmp add ss and jns fs pop sub or das xor xchg sti call hlt push out les rorl das test sub inc sub xor sub aad add aam dec insl test loop loopne xchg nop pop xchg jo std inc hlt inc sbbb mov jae test push fwait sti dec mov fldenv adc push cmp sbb xor mov js leave inc insb test lcall cmp iret pop dec dec imul add cmp xchg fdivl cmpsl cmpsl push inc adc cmp add rorb add xchg test cmp and test xor imul pushf xchg add xchg repz or je dec inc mov addl adc into lcall cmp or cwtl push jg add cmp jo xor pop pusha pushf repnz sti dec mov jo push push movsb cmp lahf add pusha mov pop cmpsb (bad) jmp outsb pop add test sti bound xor pusha mov add cmp lods or sbb or mov add cmp or cwtl call push pop mov rorl pop sti arpl push sbb std push dec or mov shlb add cli adc pop push sbb xor push sub sub add clc gs shll popa cmp out add push mov sbb inc test call fsubl pusha push sub (bad) sub test cmpsb mov lods add inc gs xor and mov lock outsl rcrl xchg pushl lcall icebp in mov clc mov mov xorb sahf std sbb mov jl arpl and push test icebp sarb cmp inc jb ds outsl fdivrl ret sub andl sub sub jl push push xor loopne sbb adc or adc or in sub push sub lcall jns cld sbb push cmpsl add add sbb int3 inc cmpsb cli and mov pushf out nop test cld inc mov inc sbbl out fcmovnu cmp adc adc add pushf sbb add mov popa adc jecxz icebp mov inc scas dec adc dec mov out xor xchg fmull sbb xchg test lock dec sub out pop mov cmp inc adc and imul (bad) out or iret in mov inc xchg and incl loop sbb xchg aad mov sub loope test insl mov adc inc cld cmc scas js pop sub sub gs test pop (bad) mov and in push les loop push push sti push pop cmpsl js in enter adc sub dec inc fcomp xor xchg (bad) int3 sbb add icebp cmp jb xchg xor and push or repnz add cli js adc les or sbb adc mov or (bad) cmp out cmp in xorb (bad) adc (bad) les mov xor outsb dec jecxz (bad) outsb nop jns mov push add inc es xchg in dec sub mov push inc dec rcrb lcall sub mov adc imul mov cmp in pop out lock sub jns jne or mov jns pop inc inc push lret mov pusha jecxz mov inc int3 outsb in or iret mulb loop sbb inc loopne shll add hlt sbb inc clc in xlat add add daa jne sub push cmp ret inc add lds mov adc adc sub sbb lret cmp aaa rorb or jno inc jp ljmp lock lahf sti idivl push test add rolb dec pop dec add pop pop je dec push mov mov mov popaw pop incl data16 into lea dec mov or cld add pop mov add popa adc jl push cli push cltd adc sti arpl xor sbb popa inc mov or mov or sbb fistp lea mov aad dec add mov xor lock sbb mov in ss (bad) and loopne daa add ja jbe xchg jecxz mov or in or div mov fs sbb inc adc adc inc add and jne addr16 push push sbb cs or push test and xor negl adc jno movsb enter jg fsub scas test ret mov scas repnz xchg mov sub mov sub cli andb enter sub pop adc sbb add in cmp mov mov xlat or mov add lea pop cmp jnp jb dec mov cmp add xchg mov fldenv popl jns cmp fldl sub enter mov mov ljmp lcall fildl inc daa inc rorb mov mov addr16 mov fcomps mov mov add sbb cmpsb pusha test mov dec sbbb sbb inc mov fild pop or lahf dec dec pop sub sub or (bad) xor mov es test mov adc jo dec ret (bad) add scas enter test mov subl xor add cltd xor je adc aam xor mov xlat jno (bad) and xor mov (bad) dec mov jb movsb push cld mov push rcrb sbb test bound inc xor mov inc xor and sub fstl jnp jbe or xchg cmp inc dec ret test insl loopne dec dec adc jno cmp mov popl fcmovb insb scas fistpl inc inc mov adc dec mov cmp pop fisttpl pusha aas inc inc push mov enter rclb mov dec loopne cwtl inc add flds jmp sub (bad) repz insl in rolb add mov pusha js cld enter insl ficompl sbb inc (bad) mov inc sar sub mov xor xchg dec or cmp sti add nop les into mov pop mov les fmuls mov push dec mov xchg sbb ror les or xchg popa les jl push shlb push je dec mov ret fildll mov ficoml sub cmp arpl popa xor lahf pop fld cmp mov cmpb inc push les subl dec (bad) mov sbb imul mov lcall push (bad) add add mov mov cmpb iret fwait dec push mov popf inc push shrb pop xor popf sbbb mov push jb mov xchg dec xor dec add movsb inc jecxz jmp dec add iret popl pusha push mov fldcw inc insl sub je xor xchg mov (bad) mov loopne jl mov jno js je sbb fsts inc and cmp fisttpl pushf mov (bad) mov mov fs loopne fcomi sub pusha pushf mov push inc shr or add lea fstps mov and roll enter xor addr16 je cmp cld lahf xchg pusha scas mov insl test mov lods dec cwtl sbb fmull mov xchg and sahf push dec mov (bad) movsb test dec les and or in mov jg insb daa fmuls rolb fmuls mov sub and es pusha pop int pop int3 call inc cmp cltd pop push lock fmuls pop xlat or cwtl push jns sbb fiaddl adc enter and dec and fwait nop and jl inc mov jae (bad) lock std rcrb add test mov mov sarl jno xchg add sub jbe hlt mov add sti aad dec sub jmp (bad) xor xchg call repz adc push cmp iret sub rclb ds mov arpl xor dec add popa mov jno add rcrb sbb mov lock das or add (bad) push insl or cs sarl ljmp pop jg dec bound test push jmp or adc add cwtl add pushf repnz and icebp or shrl mov inc movsb mov jl sahf push mov xor shlb adc stos mov pop mov pusha fistl fcoms (bad) jbe ret jno xchg cmp push pushf dec push subl inc cwtl call orl iret and adc mov mov xchg add add (bad) loop pusha dec inc mov lock sti xor je dec dec out (bad) lock shrl or sub xchg sti push sub mov sub ljmp jmp push jbe faddl mov jno sub int dec stos cld sbb lret and ja cmpsl dec ret sub jp inc inc test into push js push movsb mov cmc dec or sti jmp ret adc imul add fs and movsb aad add and enter and add xchg ret pop movsl mov xchg popf and les and mov call jl add fsubrp mov push dec pushf pop pop sti movsb stc add sub js dec add fmuls call (bad) mov imul dec and add and add push sti test aam cmp in and push stos int3 inc xchg fcoms adc push sub fidivr pop std add ret mov and fadds or out add imul inc and xchg push mov push or addb enter insb inc movsb pop movups adc lcall jbe or pop stc fimul adc add cld lret (bad) jns jle pop cmp rclb dec les ja inc je sub xor out push push cmp ret or sbb jne aaa pop adcl dec (bad) pushf cmp adc xor test sbb hlt cld lret ss jae aas mov clc cmp adc xrelease fs xrstors xchg das jp or mov adc inc cmp shr jl pop test xor push push xor test pusha and in (bad) pushf clc xchg js pusha and add sbb xchg shlb aas lea cld push sub and rcr dec mov mov pop push sbbl cmpsb (bad) lea rol sub in lock mov xchg cmp xor adc cmp push jge lahf lock add mov insl and or ss dec test out enter lcall int3 divl rclb or rol adc imul xchg idiv or sbb xorb jo mov fimul mov push mov xchg pusha mov loopne movsl adcb imul and xor and push sub xor cmp into push (bad) push inc icebp outsl mov sub popf ss pop jnp cmp dec int3 adcb daa movsl mov jge bound cmpsl ret in jmp test mov push in push sti push test addb loopne iret data16 rol icebp test adc add rclb or (bad) repnz inc fs adc insb out movsb (bad) icebp rolb stos or (bad) dec ja (bad) push mov add in bound pop xor test pop pop pop inc dec fs mov lcall cwtl pop xor inc xor xor out (bad) loopne outsl push adc cmp movsb dec adc cld lcall mov pop aaa or repnz inc add jo add andl (bad) mov add decb lods xor ret or mov pusha add sub cmpsb xchg mov adc pop inc dec push inc push push aas mov out lds add push push or rolb les je dec xor cltd movsl out cwtl and test enter adcl pushf rclb or bound gs test add inc cmp lock and inc mov xchg js sahf and rcll add and cs adcl ret add lods (bad) mov (bad) and sbb inc test es cmp xchg sbb xor xor lahf mov sbb mov cmp push pop repz add sti xchg mov (bad) jnp xchg add shll mov into stos adc (bad) adc jbe sbb adc sub cmpsl mov xor mov mov outsb mov sarl cwtl andb jne push ret add (bad) lock notb stos rclb push mov ljmp aad addb das add (bad) aas xchg and psrlq sbb push mov mov fs add xchg jecxz movsb push jbe jne inc lods xchg push sub in pop jge add mov mov in pop adc movsb mov sub test add mov rorb nop jne adc out nop enter add xchg jmp inc les xchg and mov mov push movhps sahf add mov dec xchg pop lods push repz cvtpi2ps push lods mov pop adc data16 jp cmpsb inc lock cmp mov arpl cs lods (bad) jp into sub jge dec lods pop or adc movsl sbb mov pop je call les pop mov and xchg fcoml push dec or push sbbb or bound push loop add cmp cmpsb cwtl jp mov or dec sub sub sub das cltd and add or xchg call sub wrmsr ds push sub cmp leave (bad) jl sbb cwtl xor les lods dec sahf rorb or mov aaa cmp push push adc adc inc adc imul dec js (bad) jo adc scas cmp sbb in call sub push cld cs js jae and data16 rclb xchg shlb pop (bad) cmpsl sbb add add fmuls inc imul aaa add addr16 xchg test inc add jb push call cmpsl or lock ret mulps or mov test add inc push rolb cmp pop push or jb adc rorb pusha add sbb mov add sub pop in dec orl push sub pop inc pop roll loopne xchg cmp and (bad) out into jno sub dec xchg or loop jno or and adc jle or pusha pop jno xor xor fnstenv push test or add or shlb les outsb push push pop sub pop dec add inc shlb shll fbstp jg fcoms arpl push outsl pop sahf xor in in and cmpsb pop or (bad) clc es das mov add icebp clc ljmp mov pusha dec xor add mov loopne pop pop pop add mov bound cmp or aaa push scas push sar inc xchg jl and dec mov mov psrad lahf and icebp cmpsb push add or es mov and push ljmp xchg adc fcom inc pusha jg sub pop (bad) mov xor int out ret pop shrb in cmp push lods xor sub int3 (bad) sub into adc cmpsl jecxz std sub or adc hlt jecxz xor rorb add mov or rolb fdivl push mov (bad) shrl lahf sub es xor xor push or inc sar jne push mov pusha mov orl adc or sub lea les movsb cmp add out push lret loopne xor aaa sub fs fdivl add mov nop add lock pop pop mov pop mov rclb mov mov mov cwtl xchg daa or sarb cmp mov add add das (bad) test mov in pop outsl in dec cmp cvtdq2ps mov frstor add mov xlat push insl cmp cmc add test fwait dec add sub cld mov xor rclb or inc dec lret add xor xor fstl dec inc xor out xor sub shlb sbb lock int3 imul call dec inc loopne pusha adc jo or pop cmp test add sub push pop mov mov push imul stc or rol ja push popf rcrb inc dec out push (bad) pop add aaa cmp aam data16 ret jbe xchg (bad) add cmp movsbl test aam pop mov lock dec mov pusha andl sub pop int3 add sub shl xchg push mov es lods xor cltd add or mov sbb jp inc test pop subb pop mov mov and jo test (bad) in mov out xchg enter xor mov jmp sbbb mov push cmpsb loopne xor and loopne inc mov rcl ds andl and add loop nop hlt je and out dec mov or fadds fs xor inc lods in sub pop enter mov nop loopne sbb (bad) xor push and cwtl push push pop hlt sbb push and dec add dec in sti jo push loopne into mov popa mov mov shl adc push int3 enter dec int3 push or add jp adc bswap sub sub adc sahf push call leave js mov inc int3 ss subb adc or add mov pop push cltd cmp or icebp jecxz addl aam add test pop pop push mov mov int3 sub sbb js jnp (bad) pop in lods lock loopne xor loopne or psllq (bad) adcb int3 in scas add jnp call adc subl mov cld jmp js cmp lods ret xchg mov mov inc nop sbb add nop jb add add ja add xlat pop imul ds nop push xchg call movsb (bad) push xor mov mov aam andb xchg (bad) sub cmpsb xor dec adc jle movsb push pop repz cs bswap imul mov loopne mov lahf addb push xor lret into push mov cmp (bad) in pusha sub push mov jns xor (bad) test jns pop rolb jo,pn cs aam rcrb lds ds jl mov xchg movsb cwtl imul int3 cwtl xchg or cmp push fsubs ret jb xor arpl push cwtl mov iret push sub mov shlb mov movsl dec jl inc jo add xor add pop gs push bound lods sbb (bad) cmpsb lock and cltd into mov dec mov pop les push xorl jbe sub xchg push out shrb inc in popa (bad) xchg mov inc mov cld jmp xchg ljmp sub cmpsl push fmul lds sub ret sub push inc and xor fbld or inc xor outsl (bad) mov cmc push into mov inc pop rcrb push fs mov popa ss mov dec sub les popf int3 cld movsl pusha insb add and rorl outsb popa loopne adc dec clc add out enter inc into sub sbb push push push push in in sub imul loopne sub cltd fcoms mov bound insl mov les std inc jl out cs adc jns (bad) cmpsl mov pop into dec std dec dec cmpsb sbbb cmp lods xchg mov xchg cmp mov adc (bad) sarb adc sub repz xchg rolb sbb mov cmp rcrb into pusha int3 cmp aam add dec popf pop add push das out or sub push cmp pop movsb cmp adc xor pop rorl push xor dec lcall stos div daa pop xchg subl add aam sbbb jns dec add lods lret adc lods insb sbb test addb popf leave pusha dec inc inc test push lods jmp dec dec push in test or push lret sbb mov push addb inc sbb faddl cs mov pop shl pop xchg adc jnp je xchg pop sbb imul sub add es push add pop add fnstsw and scas xchg in mov cmp outsl inc fcomps inc shll add mov dec jo dec movsb inc xor shrb fsubrs daa add bound inc js jnp sbb test xchg jle mov rcl imul rcl pop adc mov sarb not jo test outsl mov lret or pop dec fldl cmp xor adc xchg add into imul lret inc cmp or sub fcoms mov push into push xor fildl adc pusha pop inc jno outsl inc dec sub daa push mov sbb push dec xchg pop int3 dec in dec inc cmpsb fmuls push popf push and mov or inc pop aas mov sub test pusha shrb sub push add pop pusha insb aas mov dec inc int3 xor jo repz rclb jge enter sub sbb movsb int3 pushf mov lahf sub xchg clc jle in stc inc jl inc add sbb sbb cld pop in cmp push mov pop jle inc sub xor aad jge adc add shr movsb mov lcall orb pushf xlat add outsl cvtpi2ps movsb pop or inc sub test jno cmp cmp inc orl call inc and jmp outsl dec or jmp or push hlt and aad and out push (bad) pushl in xchg sbb sahf test mov lea xor scas mov adc fstp add fsubrs fmuls ret (bad) sub lcall rol jmp pop push push mov jg xlat jmp je push mov jge push hlt jmp or pop stos (bad) mov mov jg cltd out mov (bad) sarb test das sub incb loope fistpll shr cmp or add xchg sub rorl pop inc imul xchg inc push mov jns inc adc inc inc dec call adc ljmp adc cld pop xlat scas rorl jmp xor jl pop sbb daa inc imul cld xchg sbb push clc cwtl push add pop dec add lahf outsl sub cli dec cmc movsb push mov dec test test push imul and mov shrb ljmp lret out xlat bound jge popl test test mov adc bound cmc sti xor mov push fdiv adc rolb mov mov dec pop repz jno sub xchg insl ss and pop push jo inc out ret sub sub nop rcl add push jg or ficom jmp (bad) adc dec incb cmp jae add adc pop cmp shrb mov ss (bad) xor jae jge subb cmp (bad) es xor add leave aaa in js out pop jmp insl fist xor cmp and clc jns add ds jmp pop frstor add mov add adc ret cmp je push push mov mov fwait sub lret inc xlat mov add xchg popf jmp jl in sahf jne push notb cmp or les sti repnz popa xor pushl and pop add ds pop js or and mov mov add add ss dec movsb mov xor dec jp les outsl jecxz cltd out test jmp jbe add stc leave pop mov and ja and sbb push xor sub and or cmp pop and or mov outsl rorl mov outsb xor ficom je imul repnz lock push rcll sub jbe mov and mov dec or fs loope ja sub pop shrb outsb cs cmp adc mov aad add cmp (bad) popa pop cmc shll dec mov xchg lds fsubrl add int3 pop in pop jg sahf das enter inc sbb std xchg or pusha add xor pop xchg sbb (bad) or xchg lret xor or add cmpb xchg test jmp cmp loop outsl movsb or scas stc lret pushf (bad) out (bad) cltd pop or xlat clc mov dec push pop push inc adc add push (bad) xchg out lret sub and addb push pop sbb mov xor pop clc repz xchg pusha jmp fnstsw push (bad) sbb movhps push jp push stos inc jmp movsb pop sub cltd cli cmpsb cmp push data16 and imul subl loopne xchg mov and rorb jb in dec or cmpl je xchg xor push push rclb or test xchg xor or test mov push xchg add gs pop add shrl adc inc and jnp cmp xor push adc adc add je push addl test add push push pop jmp sub mov pop dec bnd sbb xor sbb lcall sbb sti orl cmp adc jmp mov jg out fwait dec xchg mov sub push popf inc mov add insb push and and pop or les xlat aas es insl jl jne insb inc or xor mov dec cwtl les push push mov add popa add mov mov (bad) cmp fistl push push shrl lods mov jl test sarb cmpl add sti mov (bad) jmp mov jle nop add dec jbe inc jmp hlt fimull ljmp insb adc imul push mov xor jge mov arpl adc or lea sbb jmp pop xlat stos pushf scas push inc mov fist add jbe or push pop fnop or rorb sub pop add pop mov test lods or push jmp jmp push je pop movsl les push loopne inc and cli stc push aas mov cs (bad) mov add or cmp mov jae jmp sub rcll cwtl add (bad) jle add and shr or pop addr16 inc notl adc testl sub dec jmp fucomp stos std sub (bad) incb or ds nop dec sbb sub pop pop ljmp and and sub hlt fistp sti inc popf push push stc rol es inc movl mov call push subb insl jge push mov dec outsl inc push adc out test dec adcb add pop or adc mov in mov pop add or imul cltd popf pop scas in add adc dec ss xor xor in cmc (bad) push cmpsb nopl or adc les adc mov adc xor mov stc push mov sub mov jmp add dec mov sub jecxz push popf cmp inc add inc or cmp push stos sarb int int loope push add xchg jecxz and cli ret rcrb add pop stos fnstenv or inc aad and or add jp enter push lock mov jo sbb mov inc lea add fildll jmp add test sub mov decl cwtl divl jle pop adc loopne mov or pop jge call inc dec jmp pop push mov shr inc mov fildll dec or scas jne mov in arpl aam push stc sbb add fsts pusha pop jne jae or xor add ret and lock cld xsha1 add add sbb xchg in cli mov mov pop inc cmpsl add hlt mull scas (bad) imul lods std fisttpll and add and add notb xlat push push mov pop jmp jo pop adc imull or (bad) std lret lds pop inc and add lahf cs (bad) mov fcomps popa lods jnp cltd xchg inc daa and mov mov and jmp ja out sarb mov xchg loope push ficom call iret in popf ja inc out push adc mov sbb jnp mov loope mov movsl inc mov (bad) ret (bad) adc mov mov sbb rcrl pop xchg or stc inc cmc cli (bad) mov ja adc sub sti aas shl add stc not xor fldl nop and jnp sub pop lods jecxz mov sub out daa push sbb jmp xchg mov pop fs incb dec mov (bad) test add xor mov push (bad) bound shrd lret push pop shr jle aad and inc in mov dec aaa scas in add jne add orb sbb sub add and cmp pop sbb lahf clc out sub insl pop xor (bad) sub and mov mov mov imul xor shrb fcomi ret dec add and fwait les push push lea push push fs mov out inc fwait lods sbb lea inc mov dec sbb punpckhbw das jo cli and (bad) jne push push test jne outsl inc push fldt out inc fwait rorl leave orb mov add loop stos push sub inc add add adc sbb push test daa mov push divb and adc cld push xchg or push xor and dec fs mov std sbb xlat pop sub int sub push dec xor push push ds push das mov out mov push mov adc lds cmpl fsubr inc add aas es pop shl add push mov not and xor mov outsl dec cmp clc lock cmc add or jle cmp in inc jmp mov mov mov popl cwtl out int3 adc mov xor add clc xchg movsb notb pop test test je ret pop fdivrl pop (bad) mov jne enter dec fdivs xchg xchg pushf or dec mov ja xchg adc xchg pushl adc sub cld add pop sub and or inc push add js mov dec inc xor add mov dec pushf inc add sarb jae xchg mov pop xchg jnp add and ss (bad) out in faddl cli jmp cld notl add cs xor and out sbb jne jp (bad) xor xor mov dec cs push jb (bad) insb idivl into adc xor cmp add pop pop jmp inc das scas ss sbb jmp loopne mov mov pop sti jne orl sub sahf add cmc loop insb push mov out out es push (bad) cmc jmp repz hlt loope iret mov movsl pop in cmc test xchg mov push or movsb lcall sbb out test out jbe xchg push jmp pop xchg not addr16 mov cmpb adc (bad) dec shr mov pop inc daa mov xor stc inc rorl lret (bad) lret std shll jmp push int3 add or cmp mov (bad) push (bad) mov in mov pop push push cmp pop add and mov push mov loop jnp xchg adc dec les pop jp into movl jbe dec ljmp pushf push mov (bad) mov or (bad) xor xchg sarl jle push mov add push aam mov mov and adc cmc into mov xor jmp pop dec add jecxz loop cmp mov jns outsl mov (bad) jmp cmpsb jmp mov and jle call mov pop xor pop xor lret mov push pop (bad) cmpsb inc fcmovnb mov xor xchg or ret push out ds push jp xchg stc cs jg ret mov push (bad) js pop pop pop lods into int dec in aas and inc iret add jb and dec xor mov data16 aas lret imul bound sub xchg test jnp and inc cmp or inc (bad) jge pop push ret xchg jmp outsl call cwtl xchg (bad) out scas in test pop test test jg inc (bad) ja or cmp clc mov add inc push jmp lds mov into or jmp pop add shlb xor orb xor nop mov mov mov add sub jmp push lock call adc iret mov add pop pusha jbe jne negb xor mov add out add jno lret pop push loopne mov push sub or popf xchg das cli sub dec adc add dec add mov push int3 (bad) mov fucomip push aad mov cmp clc nop mov xchg movsb popf fstpl mov and and push enter jne mov push stc loop adc imul push insb aas cmp dec jg xor not jmp inc dec push int3 addr16 shlb adc ret out add add xor aas jne add fs pop rolb js add pop test aaa or dec adc pop rclb jge push adc mov mov or pop push daa ficom in ss add jecxz add cmp jl leave add mov pop cmpsl mov mov or pop jg aaa push in jp mov dec pusha or push dec push jno movaps mov or testl mov add jmp les aaa jge add xchg cpuid lock mov add add into pop xor rcl fwait push xor (bad) adc dec add pop adc mov ljmp fsubr sub out push fildll sub jb or or jns outsb or arpl push add inc cmp push and (bad) inc xchg adc xor pop mov cmpl movsl pusha or (bad) or inc add shl insl cmpb cmp arpl out inc mov mov loopne jae jp (bad) call bnd mov xor outsl ror (bad) sarl pop int popa jecxz or out inc enter outsl out push mov or mov push movsl inc xchg push sbb std jle insl dec cmpsl sbb xlat (bad) insl imul lahf mov rolb jae sub clc clc jne fs mov or je or ret enter ds xchg enter or scas fincstp in xlat push roll ljmp ja jbe push cmp fstps add (bad) xor fadds ds aad xchg movsb pop sub rcrl lock std aas sub enter test fsubl sub (bad) loope bnd std and loopne,pn jb and fisub sahf jne add pop sub sti cmp xchg adc subb je mov cli sbb fistpl hlt movsb insb add push dec inc cmp cmp inc repz mov scas push inc sub fild jl dec jbe inc mov popf mov lret (bad) adc mov pop add sub std add addr16 sub imul mov add jg lds or push dec das stos add mov ds inc jae xorb repz push inc dec xchg xchg (bad) mov pop jo or (bad) mov adc in or xor jno dec out mov pop mov imul mov and pop and outsl leave or fiadd out imul add cli idiv jle inc mov pop xlat rorl inc pop pusha ljmp inc pop xchg pop add test sbb repnz xlat lahf (bad) aas pop dec dec push pop in fistl adc mov scas (bad) xlat sbb (bad) or xchg daa jmp push in fldl push fidivrl mov (bad) jbe mov cmc lds mov not mov or imul in ja inc mov cwtl add shr int3 andb sub lret std shr test xchg add mov test and ljmp rclb adc dec xor fadd sbb mov jmp or add mov pop in add fist push lahf jne cli jmp in insb pop mov std movl cmpsl pop dec xor and nop cmp iret pop stos mov jnp push out int3 pusha pop popf std mov psubsw out inc (bad) jle jge in int test or sbbl jg sbb stos or or (bad) or lahf sarb add jmp rcrb int pop add push dec jmp cmp test or aad leave mov cmp add jmp add daa jge fs cmp jmp xlat cli mov (bad) lcall mov icebp dec sbb in cmp std mov inc pop cmp (bad) scas lods add mov cwtl pop add fidivrl mov fincstp push add xlat addr16 adc push cmpsb jg push ljmp push inc jns jbe lret fcom add fsubrl loope mul decb rcrb inc pop push cmp cs imul mov jae out ja into mull or adc jle jb movsb push inc or (bad) pop fmul (bad) cs cmp pop push sub jmp mov inc or data16 icebp mov mov addr16 pop pop mov cmp mov pop adc test (bad) fdivs fmuls add xor xor add mov or test aad ds stos pop pusha add sub pop bound dec xchg push sti fistl inc push fcos jmp nop leave xchg shrl aas pop cmpl outsb push mov cmp iret fucom cmp mov int3 scas stos pop jmp jne (bad) je xchg sbb ljmp jmp mov bound jmp add call lods adc test pop test cmp push faddl jns lods lea (bad) bound pop test push inc jl lret (bad) (bad) push push (bad) mov pop lahf xchg cmp test mov xor xor daa lret push das in adc add mov movsl sbb xlat jl mov pop sub and push pop sub jecxz iret mov xchg fs sub add cwtl dec pop cmp subl adc dec adc add or (bad) jg std repnz aad mov out mov mov xor ret and jno cwtl mov jl xor adc enter pop pop adc xchg inc push add movsb adc lods xlat adc sbb or push fsubrl clc mov or out lea das pop and add add push cld sub add jmp std repnz in and lds xorl das inc or adc add scas fistpll movsl sbbl jle mov (bad) fbstp and push rcrb adc nop lea cli sti add push and mov adc or icebp fldcw dec mov push arpl loop ret test iret dec inc pop sub enter jge adc inc lods pop insb sarb cli je ljmp dec sbb mov mov rorb out or in pop test jb mov push in roll inc mov (bad) sti mov push sbb inc shll in and rcr das mov jno lods out mov inc popf fdivp cmp stos mov xor repz cmp adc or push pop test mov repnz (bad) stc out (bad) and gs or sbb and int3 add sub and fwait lcall mov mov and push adc add (bad) pop or in movsb (bad) sti gs mov adc jnp sub stos pop test lret jg loopne aam hlt xchg push es movsl wbinvd fstpl (bad) outsb adc jl sahf lahf push test or mov jg aad das push add aam scas jle add add bound mov lock mov xor mov sbb add pop pop mov call test mov dec call lods rolb xchg aam mov push jge mov cmp pop popa pop mov jne pop outsl movsb out push xor movsl movsb xor rorb dec and xchg or mov mov sahf enter shrl pop jge ss mov lahf sbb dec aam and mov ljmp push inc sbb enter scas (bad) dec and aad imul dec add pop sub pop cmp jne repnz push dec dec sub in adc add pop jecxz jmp add in fsubl shr fnstcw sarl push jno gs mov push pushf sub push pushl bound adc fstpl mov call lock rcrl fwait sbb cmpsl mov (bad) dec xlat cli mov pop cmp ja stos push lds repnz ss leave into popf fstl fidiv jl inc adcb jle add (bad) in loop test lret add shrl inc sbb mov and test sbb enter clc xor call push pop pushf add orl aam loope sub xchg neg jmp sub pop push idivb push sub vcvttps2dq inc jmp lds mov or rclb pop add mov jmp pushf push xchg shrb xabort sti sub sbb push jle cmp sub dec sub sarb lds push jnp or inc sbb fnstcw pop or sub or ds xchg add and scas and pop push mov das bound jge jnp or mov jmp inc push movsb and push pop mov dec push push cltd rol int or push lods push or push inc push mov sbb push push push (bad) lea inc push mov add mov push adc mov mov mov xlat cmp add mov cmpl sub xchg pop repz bound idiv sub xor outsb inc mov mov inc loope push (bad) scas xor jo in and mov mov mov lds sub adc shl (bad) add cmp aam adc fmuls cld push jp inc or pushf sub inc sbb jmp mov xchg js or xlat ret lahf pop fadd xor insb lret (bad) push cwtl push xchg pop push loope inc pop xchg dec stos (bad) or (bad) or mov dec jbe scas jb ret in and push mov icebp addr16 mov (bad) push xchg adc rorb jge add adc mov enter inc mov daa loope jl lds sub fcomi (bad) mov loop pop pop push sub pop lahf and adc pop or out movsb cli sbb neg rcl loopne sbb daa out lods bswap or mov sbb pop jns sahf pusha sbb decl mov add add rorb dec jg xchg pop dec mov jmp push push ljmp jbe jo jne inc xchg fsubrs shrb add push sbbl xor rcll xchg cltd clc es adc add pop repz sub xchg jg stos leave je or pop clc icebp adc adc jnp dec jmp adc sbb je xchg dec or pop pop mov in les test xchg sbb fnsave fldenv push pop arpl ja popf aad cld cmpsl push (bad) cmpsl mov rcl and adcb adc adc js loope out push addr16 pop push (bad) cmpsl xchg jns or dec loop les mov pop jmp cmc repz pop push fs call das jns (bad) je in in mov jmp add sub call das pop dec test add addr16 sub mov xor inc fdiv add fldenv jmp loopne adc mov ror or xor (bad) mov (bad) jg add or loop subb out cltd aaa or mov or orl jae jmp xchg push movsl xchg aas add int mov std xchg xchg jns sti dec or pop lcall movsl ret out outsl lcall (bad) xor fstl xor jmp aad xor or sbb fsubs shld fisub ljmp push in mov mov pop or gs inc imull or ret call push pop repnz add xchg aas cmp movl sub pop mov sub and xor lds pop push lods into push push es jbe shll mov and jge pushf pop or inc outsb add sub cli imul (bad) popa icebp les test stos mov ret fbstp cmp (bad) xor mov (bad) mov add push dec add add mov outsb ljmp sti lods jne jne mov cmp pop adc mov jecxz xchg addr16 rcl imul dec cmp inc mov (bad) or daa push inc or or xchg cmp pop xor ret push pop xchg pop in scas push ljmp sahf mov mov popa (bad) cli outsb add das (bad) sbb pop mov lock mov jb adc mov push mov pop and pusha pop push add mov push decl dec ror daa and or add jns add pop xor cwtl ret jb sub pop xchg or (bad) jno push mov add leave lret jbe mov cld inc mov imul rcrb (bad) fs out push xchg addr16 mov mov shrl arpl sbb xlat test mov out ja push jmp in xchg fcmovb push and pop (bad) cmp add icebp pop push adc push repz clc pop and and cmp sbbb idivb in or jne pusha sub push jecxz jnp push sarb test leave pop xlat push cmp sarl jmp repnz mov inc and jmp inc je dec or (bad) (bad) or loopne imul xchg xchg sub sub adc pop inc sbb dec jl arpl jmp cwtl and jmp inc cmpb shr or cmpb je arpl mov cmpsl ret mov sub push lods pusha mov pop xlat mov add mov dec fistl or adc sahf mov mov jbe sahf pop or (bad) or dec and push enter mov or insb sbb push dec jae rorb add aam sub mov and mov mov je mov xchg (bad) and in nop or and int fild pop cmp jae inc jnp int3 xchg fisubl jmp jno inc pop pop or leave or sub adc nop (bad) pop adc (bad) loope clc add xchg icebp mov les orb dec mov xchg icebp or and and dec mov jmp push xor xchg xchg xchg testl jg or cmc dec add xchg push add xchg pop iret pop lcall jmp mov loopne stc es push xchg pop leave mov inc shrl lods adc push or shlb loop add jmp jle leave aaa std jg js sbb push push daa or insl add xchg jb mov xchg add xchg adc (bad) adc leave dec js and pop movsb cs xchg sub and cmp adc (bad) cmp jmp rcll cmp lods pushf push lods cmpsb fadds or jmp jmp cwtl adc dec mov and dec mov scas notb mov ret dec mov push dec jecxz xchg lods xor jmp das cmc cmp jmp into sbb (bad) (bad) enter jae dec push pop xchg dec in clc sbb fnstsw sbb sbbl imulb out mov add sbb xchg mov fdivp icebp dec jl inc pop push push mov dec mov pop cmp inc xchg sbbl mov push and sub mov cmc xor mov xchg shl pop cmp loope clc frstor aaa aam jle and and icebp xchg add mov jle in sbb popf add or mov out jl mov not add jmp mov pop mov and lea jns jl pop dec mov (bad) adc (bad) sahf or icebp push add cltd aam cld enter mov pushf ffree imul mov sub mov rcrl xchg imul ss pusha and mov fwait sub daa pop adc inc add dec out fs add xchg mov jmp adc (bad) adc xor mov jne inc dec add mov xchg es inc lds adc pusha into xlat (bad) xchg cmpl mov jno daa lahf ss cmp add lcall cmp pop pop push mov sbb cld xchg adc mov jecxz dec cmp shl push mov cmp je push pop aas jo lods (bad) jge fistpl rcll bnd addr16 add stc pop or or fmuls cmpsl jne sbb push jmp sahf mov jbe movsl xchg inc xchg jne and jbe inc js mov add xor mov das or fistpl push fisubl pop cld cwtl adc mov mov pop mov jbe dec lods (bad) js,pt pop xor xchg (bad) pop add push jnp mov mov push mov inc out test sbb or outsl sub pop xchg daa cld or push cli or repz loopnew or in adc in sub out or lret inc enter push (bad) or ss pop xlat and movsb daa (bad) (bad) xchg daa push int3 sub fcoms push jmp ja and rcl iret mov out icebp sbb xlat mov cmp hlt test (bad) and out mov jmp lahf xchg lds inc pushf mov (bad) orb inc dec aas jl aas add xchg int xor cmpsl push pop pop popf jne ffree mov fildll shrb inc sbb int3 icebp das sub cmp jmp jmp loop xor psraw cmp cmpsb movsb mov out rsm mov pop xchg mov aam jp add add aas inc je cli add fldenv pop push loopne pop leave adc and nop shrb or cmp fildl dec add xchg pop jle pop addr16 mov or adc xchg push js fnstsw and data16 movsb std inc cmpsl aad fldenv and sub mov clc pushf movsl movsb mov imul jno cmpsl jne popfw push xor int sbb push pop jmp pusha mov pop cmp pop lods push xchg mov std adc mov cmpsb push subl and push (bad) mov mov pushf aas xor adc cmpsb or dec mov ja xchg mov push add data16 mov pop jle rcll jecxz adc mov xor mov sub push inc mov adc into sbb add adc mov sub jae and add les or cmc sarb mov cmc xor in sbb add decl arpl jmp mov add ret lods (bad) adc pop negl pop sarb ljmp or jmp cmpsb sbbb cwtl dec cwtl cmpsl and loop out adc test jmp jle mov or das lea ret jo test sub es push lock shll sub cli das jle adc jo lahf lds jo dec mov aam mov push dec and xchg aas movsl inc fsubs lods sub pop push mov push das or inc mov es xor mov xchg mov adc out daa push jge pop nop xchg jmp sub scas push sub fwait ds add stc jo hlt inc mov movsl or dec cld nop es pop mov dec xchg clc aam push or push incb cmpsl test ret xor pop mov pop sti cli shr lods sub out and mov incl in mov inc dec mov jns cs push xchg push add pop add pop add mov pop push arpl xchg pop xor dec iret add pop jmp data16 jno pop lds jecxz (bad) sbb and fsubr or loopne push addr16 jo int3 dec clc cmp jg xor pop or adc pop add push add std add enter insl or orl movsb test pusha add pop ret test cltd and sbb inc and jmp shll jns pop rcll sub cmc lret and lods shrl sbb imul ja aad mov insb push test in cli je and enter adc xchg cmp aaa pop cltd lods loop sbb iret push jge loop add jno cmp bound jne loopne and pop push lret out dec mov add inc je repnz pop pop outsl pop mov or pop imul icebp das and outsl or ja ljmp aaa jle xchg pop rcrb adc dec xor and dec push sbb imul (bad) lea mov and nop mov xchg push mov std (bad) popf or nop bound cmp mov jns and lret cli xor add dec jl into push repnz arpl cmpl and clc pop inc inc jle xor xor loope and mov and mov jns aad sub sbb adc repnz pop aam lea insb inc add dec jmp push jo mov xchg repnz aaa add not repz je jg fadds mov pop add shrl adc movsl or mov pop push nop pause mov mov lahf or or sub mov adc pop insl and jns inc adc pop clc and jnp outsl repnz xchg and xlat add push roll cmpsl mov jmp add mov movsb dec rcl jg cmpsl std sub ret cmp inc sub add outsb xchg cmp jmp jl jmp push roll movsl pop gs mov sbb or cli sub les push cwtl adc aad icebp cmp cmpsb inc jnp adc or dec jo cs sub adc aaa push (bad) dec mov (bad) sub imul adc xchg pop dec imul inc mov mov inc scas push pop push mov add push and shr jns pop jb adc jo je pop or push dec xor test stos sub scas sub xchg inc ret dec push cmp jge add pop in fsubl ja sub stc shrl xor jo js fsubl shr push add xor ret sbbl les add inc ja cmp lahf jnp sub sub mov mov lock add out enter int pushf shr adc cmp mov (bad) mov xlat jnp (bad) cmpsl mov sti daa sbb cmpsl mov jmp loop push mov jle js xor decl lret pop das leave xor adc enter push push scas mov cmp stc popf jle or push jbe sub add (bad) mov mov and stos add sahf pop pushl add enter loopne jmp xchg shrb jne add rorb mov cs mov stos mov xchg xchg dec and inc insb pop mov or dec mov add scas movb jge mov (bad) mov pop aas or lods cli pop orb push inc rcrb push pop aam jae push adc stc scas push xchg and add jmp daa aam mov xor sub add aas rdtsc ret or mov jle sbb loopne add rcrb dec add scas frstor stos cmpsb push or sub pop push sub mov dec loopne loope or inc mov ret popf rclb aas or sub cmpxchg jo test add aas dec xor icebp push add and pop imul (bad) enter sub and push pop mov jle push enter adc mov or sbbl mov (bad) jmp and inc jp or xchg sbb ret repz cmpsb sub jbe out test nop pop leave xor in jg outsl sub add out repz int jae (bad) (bad) iret pop jg ret push push cli loopne lahf popf jmp inc inc add cmc inc mov xchg xchg xchg mov addl je outsl outsb and data16 jb insl popa or sbb jae sub and je pop jle mov jl jge addr16 fs jbe insb xlat jo outsl jae ja xor sbb sbb outsb addr16 cmp (bad) push push jns jne or sub xorb inc push push dec sub jmp js inc repnz cmpsb jnp jo or imul sbb arpl dec dec sbb cmovg push push xchg outsl cli sbb sbb add sbb push mov mov adc push dec (bad) sbb je (bad) js add pop add lahf aaa sub sub scas xchg inc (bad) pop xchg test pop loopne mov adc push xor mov das jmp fsubs (bad) shrb lret test jne,pn sub lock clc or hlt divl dec or add jmp and jg push dec jg addr16 imul out cmp add jecxz add pop add fstl test mov push inc lahf push cmpsb xchg push cmp inc mov test xchg mov or popa lret xchg mov mov cli sub adc dec cld movsb test and mov cli cmpb inc int sub push xor popa mov xor jmp mov cmpsl inc mov ja push xor in test inc testb adc jl xor nop pop sub jg pop dec inc lea jl jg push or (bad) gs or ds sub jmp and fsubrs pop mov push sub jle mov push mov fsubrl jge fxch insb inc test adc mov add mov jo add jl jmp jno in pop sub pop jmp pop dec cmp xor pushf dec das mov mov (bad) aaa and ja stos pusha (bad) not jg ljmp shr or inc jmp insb in movl out ret dec or lds pop (bad) icebp popl xlat pop push pop nop inc mov decb jbe dec push lcall nop jg xor shl sub cmp add test mov push push lods pop jmp scas and (bad) loopne add adc mov stc idivl (bad) xor add dec aam add push pop inc incl daa jmp jg stc mov adc xor adc mov imul or xor pop int std jmp inc and fildll pop add or fsubl mov sarl jns into cmp jge jmp jbe jp aam imul mov dec and decl cmp nop cmp loope and pop xor or sub sbb gs or sbb mov mov mov pushf adc or je add jbe push testl pop sarb or or lods jmp ljmp or cmp mov unpcklpd push mov mov mov cmp in dec in stc pop or or lret sbb cltd ja dec js into ret xor popf (bad) mov xchg mov rcrb or aas neg mov shrb jmp inc mov out lahf ret sub hlt pop nop sub push (bad) aas push and sbb pusha jbe pop adc es test sbbl out testl jmp dec add mov jl xor cmp or jmp inc or jge adc popa xor cli pop inc or jmp mov xor adc fidivl and sbb mov jo or loope scas mov dec movsb push jbe add push pop push jmp and sub push mov inc and sub cmp and ror pop fistpll out xor enter shl add (bad) add xchg push add orl dec pcmpgtw or outsl sub shll call lods pop mov adc push sbb dec pop addl aaa pusha jmp ss pop inc push push and popa cmp outsb and and push pop sbb or (bad) ja and sarb or fiaddl and sub call mull sbbl or fsubl sub jmp sub dec stos aaa inc jecxz or ja inc fsts xlat aas push sbb push mov cmp jmp sub mov scas out add nop sbb sbb pusha fsubrl (bad) popf dec aaa xchg jne pop movsb mov push das push daa jle stos test loope inc divl add inc xor fucomp das jle clc mov sbb lds ljmp test and mov jl movsl mov push cmp inc mov or xchg and fs mov test xchg and push jmp push push mov mov mov scas popa xor adc push mov jecxz sti outsb inc lahf pop adc xor mov pop pop arpl jg pop add lock insb adc push mov push or or pop aaa jp add push push mov add pop test inc dec dec das jmp les mov push push dec jmp xchg in test pop cld jmp sbb shlb popf fs add push mov shr pop pop adc repnz jmp (bad) mov sti adc and mov pop mov cld das lods adc jno std xchg or ret cmpsb push dec rcll inc dec mov push add xor fdivrl out jg nop test movsb (bad) sbb jns into and pop sub mov addr16 push push gs jbe xchg mov mov lock arpl rcrb xchg sbb addr16 ljmp cs cmp cmpl push jbe or adc push sbb ficomp or adc ja mov or adc (bad) mov and lds adc gs sub repz adc or sub mov or push xor cmpb jl jl cltd lods out xlat inc sub rorl and push sbb dec (bad) jae sub and (bad) mov (bad) or xor inc jo mov jge scas mov ret add dec (bad) mov cmp xchg adc dec loop dec in sub add fadds jmp mov add lret xor jg pop sbb mov jp hlt int add xchg xchg mov lret push sub (bad) lahf ljmp shl cmc cmp and ret insl bound pop jg (bad) fsubrs lds jg int add mov (bad) cwtl mulb or pop inc sub hlt sub and movl and inc xor add jge push jmp pushf sub pop dec mov sub or jbe fbstp pusha andl mov add insb xor mov mov mov das clc notl add mov cltd adc sbb cwtl mov push xchg into daa adc and nop test les mov lcall dec push and hlt cmc movsl push add mov (bad) aad je jne loopne mov imul cs dec pop pop dec (bad) aas in (bad) sub xchg xor popf push sbb xchg xor add cmp lods mov rorb jnp or pop out add je jae rol push fisttpl (bad) fabs jo adc rolb ret pop ja mov pop mov fidivl data16 (bad) xor push inc test adc pop pop mov data16 pop ret or test mov jg imull loop push rolb stc jmp jp mov cwtl dec push iret mov fimul push mov (bad) mov pop pop leave mov add imul xlat mov orb dec cli dec inc sub (bad) es lea adc inc adc adc lahf lock or add mov inc cs sub shrl rcrl jnp leave js fisub inc pop lahf leave or in cmp sub hlt push repz cwtl or inc hlt xor sub inc shl push inc movsb sar push incb negl mov push cwtl pop and dec jle (bad) outsb (bad) jg fcom out add cmp adc fwait inc add mov icebp add ret rcrb adc or add aam imul ret push mov dec dec ja mov xor pop or xchg pusha jbe or ljmp inc add dec dec jne mov xchg push mov jno jo pop lcall xchg stc mov cmp dec or sbb fsubs cmp popa push call idivb xor shrl loopne fisttpll cmpsl cmp ljmp loope sbb adc ljmp cwtl xchg jecxz add fucomi inc or pop pop sbb push shr pushf dec jl ss and sub pop jmp xor dec fcomip pop ja out or mov (bad) test imul add mov mov add insb and mov push or cmp sub mov and pop stc (bad) popf pop loopne push push push repz roll inc pop (bad) pop add sub jecxz dec out divb dec add sub lock fldl inc pop add inc xor pop nop std sbb xor mov xchg push out ljmp jge and js add mov xchg jbe repz xor cmp mov push inc scas lods mov popf xor ds add mov call fildll jecxz stc add mov push xchg xchg xchg inc mov mov movsl cmp jns cwtl xchg push push (bad) pop sbb push imul and stos pop pop jge data16 cmpsl in cs xor xchg cwtl fsub jne lahf nop sub out addr16 test xchg jo or inc icebp stc inc js sbb and and test mov jno mov (bad) lret pop cmp cwtl and scas pop bound jge cmc outsb push xor push incl inc push add cmp add mov push jle lock push cmpb fimul sbb push mov sarl dec adc dec push cs movsl (bad) jbe lret gs in int3 pop sti int3 jno mov xchg xchg dec shlb das mov pop dec push rclb ja add dec or insb pop push pop cmp into leave ja fadd or cltd mov aas sub jmp push in (bad) mov or dec movsl add xor stos leave pop dec jp movsb iret or imul mov cmp sub (bad) ja push mov fist hlt int cmpsl push test push leave lcall jp push xor jmp call (bad) std add mov mov push xchg dec rorl add pop xchg mov add jmp add aam outsl pusha outsb dec hlt push setl xchg test xchg or and dec add aam loop dec and jb jge inc add subb cld das mov jmp cmp sub outsb test adc push pushf out pusha shlb into inc push jb add inc arpl push subb iret mov pop pop test add in cmpsl sbb movsb lock mov repz daa mov aas cld push xchg xchg scas xchg xchg xchg and xor iret nop push js and (bad) aam test jno add push xchg dec pop xchg inc mov mov mov cmp xor in movsb mov push shll mov lea aaa push test pop xchg pop pop push add inc fsubl add aaa sbb add dec add jmp loopne jmp mov push dec jmp add xor and add rcll mov das pop gs and lret loopne fbstp inc sbb lea subb lahf jns or fs jle mov dec and pop movsb xchg and add push and (bad) decb cmp jg jle dec add lock movsb setnp lods dec sbb or sub mov inc repnz xchg jge pop xchg adc xchg cs aas repz insb and pop jmp push dec cltd fs xchg or mov xorb mov cmp push adc sub xor dec pop xor cmp push pop or pop or dec sub add xchg xchg nop push add mov lock pop push and add push test addl ds or sub outsl (bad) int3 pop adc adc mov sahf push jmp popa fldln2 pop outsb fsubr pop adc sub jmp arpl (bad) xor sub mov mov mov cmp xchg int3 std cmpl jmp cmp sub fldt xchg add sub insb out loope bound out clc jmp xor pop aad (bad) mul test test dec inc add xchg cld (bad) pop sbb push push sub loop cmp and or ret mov dec xor (bad) mov (bad) scas pushf pop mov mov add cli adc cmpsb outsb inc jae jmp inc pushf mov add icebp mov sub cld daa adc incl and (bad) pop lock add dec mov xchg sub mov xor es or out jns jge cmpsb xor imul xor dec or aas push or and pusha add pop test mov mov sarb aaa inc (bad) pop pop aam pop adc (bad) push cltd outsl imul dec les adc popa xor mov scas cmp inc inc mov pop rcl push aaa pop pop push inc push aad jg xor pop loopne xor sbb (bad) pusha add es das xor mov pop dec or idiv xchg imul push out imul cmp in jl (bad) js dec shrb pop xor xchg mov xor push imul mov test sub lock pop jl and leave mov jmp push mov adc jp pop mov mov out pop add jle mov test push jmp sbb jns sub cmp sbb movsl fs stc loope xlat int3 add rorb lahf add into movsl adc loopne or xchg sti inc jo inc or mov in leave loope or in mov mov sub or negb icebp aaa sahf notb push xchg imul jge mov mov negl push popa mov push or mov loop sbb icebp cwtl into or fidivr in bnd ja cltd iret wbinvd rorb aaa dec cmpsl test add (bad) and imul shl add mov adc out shll add rep jmp add sub outsb stos add jmp inc test out jg xor mov xchg and jl jno rol fwait jge repz (bad) jle loop pop rorl inc mov mov fbld dec xchg push jge xor fidivl stos int3 (bad) jb sub andb jbe (bad) jle or ja cmp test es (bad) sbb lds daa gs mov or adc dec inc outsl jnp pop scas inc jmp out sub cmp je sub imul mov (bad) push and or lahf push mov scas and stc pop or pop adc pop fnstcw xchg xlat enter dec xchg ret pop les or popa mov sbb mov mov and or pop push push fisubr cmp dec lea lods je pushf je add dec mov movl xchg jno add xchg pop sarb sub pop lret mov stc dec dec enter push pop leave cmp call and dec adc adc add scas inc dec dec mov jmp jnp stc lock out inc jns add mov loope sub add out scas int das cli jno mov (bad) int3 ret sti aad mov lahf sbb sbb out or jle,pn add xor dec dec adc scas inc mov add mov lcall pop lret push push test lret (bad) mov mov xchg js rcll jns (bad) xor maskmovq notl xchg in repnz push arpl fcoms aam in lea jb loop,pn andl pop (bad) imul inc cmp std lds jp and add xchg jg push mov outsb clc or sbb cmc or xor aas mov mov adc dec xlat dec xchg xor stos es xchg cwtl or xor mov js dec jp lods loope push cli int aas movsl insl cmp sub out inc stos dec fucom not xchg push add mov sbb pop sub stc push dec mov jnp mov shll xor sbb mov stc outsb in (bad) jno xor push add sub pop push scas push pop pop xchg adc jle js push add sete popf push int3 xor sbbb icebp or mov pop xor out cli int3 in dec es fs sbb subl push jmp mov jp mov shrb js push dec inc decb xor in pop sbb dec and fadds insl clc jne mov xchg add ret cmp add mov pop mov repnz push movsl jno jae pop repz add in in or sub cmp jnp sarb loop outsb imul lods sti pusha stos (bad) fstps xchg inc push or jmp out dec xchg enter add lds mov xor std pop cmp out push jg shlb and lret fmull jmp adc jo mov push lret loope and das pop shll leave pop add jle scas imul inc push xchg addr16 notb jnp ljmp pop arpl mov psllw idivb out in std and lock (bad) or ficomp push push out add lahf jno adc js cmpsl push std dec push and repnz or sub shr lahf in sub das pusha fistp push xor jg lock in arpl jo pop movsb stos add (bad) jnp fs ja jmp adc and inc call (bad) sub push xchg pusha (bad) les add clc (bad) mov subb rolb mov imul std jecxz jecxz add cs minps lahf or stos mov cmp (bad) xchg or dec add cmp mov addl aaa ficoml fidivr mov inc add mov aas jecxz bound cmp test in test cmc jbe jns aas sub shrb movlps and outsl lock dec dec ret cs mov mov mov xor dec xchg add ja inc sbb rorb xchg mov fs sub movl rcrb out jnp test push mov cs mov mov cmc and loopne iret adc push enter add loopne adc cmp xor push push xchg stc mov push cmc cwtl or seto aam cmp jne es mov xchg (bad) gs or std hlt insl sti sbb test xchg mov jge pop inc (bad) das add and pusha sub inc adc aaa mov loop loop adc mov sub mov cmp in sbb and push mov loop es cmpsb jno mov dec or inc jne jo shrl mov sti cs in or sub popf int js mov fnstcw push cli fstpt daa xchg mov aaa or pusha mov inc mov mov dec in cmpsb mov xlat adc jle fst or pop out and push push and leave gs ficoml fs clc fsubrl push clc sub jmp push adc pop fbld fidivrl lret mov rolb xchg sarb fisttp sbb pop das lea and cmp bound push pop rcrb push xchg mov pop imul jmp bound cld daa add pop fs icebp (bad) jo xchg mov repz xchg xchg out (bad) adc pop jnp push sbb into rolb or pop xchg test dec xchg xor cmpsl out test insb xchg popf adc mov sahf sbb mov cltd jne xchg imul pop sbb jbe dec add in mov push dec rclb pop out pop mov addr16 roll cs push or mov js xor lahf nop insb and or xchg pop dec cli lahf out push aam dec jmp lods stos cmp mov push nop or out (bad) cmp dec addb or and in pop push outsb mov pusha (bad) mov imul add push pop shl ror or or lods inc and int3 mov pusha push fwait xchg mov sub push imul scas push or adc hlt mov test xlat pop jg xchg add mov pop jbe push dec pop in cmp xor pop sub inc adc add call pop ret ret push inc push ret jg cld std ret cmp sub call (bad) popf mov jno (bad) xchg add and test mov pushf push xor in inc insb and inc push ret pushf negb loope (bad) or jo xlat mov adc mov xor or xor mov or sbb rcll sbb hlt add and pop pop mov pop xchg adc mov and mov add xor jl cmp xor jmp add push cltd ja dec xchg daa cmp adc ret and inc push ret pop adc std sbb popf jmp mov push add popa push pop testw stc push and adcl sub push push pop ret inc mov and ret call mov sbb stc sub push popa pop ret enter inc sbb push ret imul mov fimul mov (bad) mov and les mov sbb popa cwtl out outsb add or mov add adcl (bad) mov call daa cmp and (bad) shlb jbe ret push insb pop andl shrb jnp std push pushf scas or iret mov pop int add out mov cmp add mov xchg fldt jb inc sbb xor pop pop out arpl call add dec mov sbb leave test jno or pop or xchg jne cmp pop add popa cmpsl clc inc sbb ljmp lret and ljmp test dec ds mov inc in clc mov out popf mov mov je sbb inc xchg int3 into adc and sbb sub and add dec jno mov icebp cmp sbb add and fs fldenv push decb enter mov mov mov ds mov cmp sub aam movzbl pop dec mov mov lods inc adc pop xor ret dec mov and pop jns mov push ret add mov insb add hlt pop push cmp cmp push ficom loope dec pop mov lret mov fiaddl add dec and mov and ja mov inc xor ret and inc push ret inc notl jns adc add cmc mov add mov mov and iret nop or lret ret sbb loopne imul cwtl call add insb loope mov pop bound cmp jmp bnd xor arpl aad mov jle rclb es (bad) cmpb cli add jge sub mov add in sub jmp pop add je pop add mov hlt in jae (bad) mov jmp popf aad icebp movsb sbb out sbb dec adc sarb pop and call pop dec push mov pop and pop add sti ja jmp pop dec in dec adc mov popf pop xchg adc test add mov dec xchg push stos adc call and pop cmp jmp add stos data16 pop adc adc aas mov add xchg xor jnp fnstcw repz lret jnp cs add jle jno mov imul jmp test jl sub popl test (bad) mov add mov (bad) lea inc sbb mov cmp aad sarb enter sbb inc pop add xchg repnz shrl sbb push sub dec mov mov repz xor out shr sbb sahf dec jle sarb push xor adc xlat fist inc enter into mov aas dec sbb (bad) pop iret jno (bad) unpckhps fdivrl call ja dec pop mov leave or or maskmovq fimull xchg daa inc inc pop test dec fcomps les dec push rol ja (bad) xor jle adc lds mov incl xor sbb pop dec adc xor xchg daa rcr or imul jmp rcl scas loop les out pop int3 leave cmp jno push test vaddps or movsl in movsb sub inc stc dec pop lea sahf xlat das shr xor mov add sahf and adc dec (bad) sbb add jmp cltd pop push pop scas dec mov cmp or sahf mov std pop (bad) imulb test jmp dec sti fidiv popf ja call push xchg fcom pop mov (bad) xor inc sahf push push (bad) lods dec sub pop shll fnstenv (bad) mov inc pop lahf pop loope dec fcoml mov mov inc ficompl lock pop int3 pop dec sub cmc pop jbe int3 call sbb rcrb pop dec xor adc mov repnz xchg xor (bad) xlat pop outsl jge (bad) dec lahf inc (bad) jnp lods xchg push iret aam das add sbb inc sahf push movsl icebp mov pop add pop rcr push dec push mov mov leave lret pop inc pop cmp inc nop mov cld fidiv ds test test dec or pop ror push push scas add cld add or xlat data16 mov xor mov xor js add sub movaps (bad) mov nop lret mov pop dec popa daa mov cli das xlat xchg daa in and adc and inc pop pop pop sbb push xchg xlat adc insl mov mov popa outsl xchg cs movsl ret pop adc pop jmp ret push cmp out dec xchg loop and jb repz cmpsb cmp add adc push into inc xor icebp test cs sbbl add loope inc gs inc js lock pop pop movsb and mov sub bound lds jne or push pushf and mov lea dec xor jns mov (bad) (bad) fnstenv mov aad push (bad) cld inc cmpsb mov add jb cmpsl pusha clc (bad) push inc idivl adc pusha mov push sub inc addr16 outsb mov fiadd cmp loop in pop in jo push cltd push xor (bad) aam insl push shl out or mov cld ret sub or or jle outsl (bad) mov lret jns lea dec sti or (bad) pop out inc movsb icebp or idivb pop push pop pop jb (bad) fnstenv sbb adc xor cmpsl pop stc lea xlat sbb mov and add mov mov pop push insb push adc xchg adc or (bad) xor inc push push mov inc mov (bad) (bad) call sahf daa adc nop adc cmp das adc mov adc adc lcall clc mov movsb adc fimul je insb fcompl sub out jmp push sarl cmpb pop ret ror push xchg mov jp pop add leave mov jb sbb jmp test clc in push inc add idiv jbe in out jecxz jp inc notl add and inc mov jns test dec push daa test xchg out adc inc xchg cmp arpl xchg lds clc dec ret fcomp push out sti inc scas sbb inc dec inc push mov insl neg pop add add cmpsb sbb and stos and incb xor xchg xlat sub sarl jmp mov jmp movsl jmp jno mov and mov push test xlat xchg imul fimul aam imul pop mov and jl jge jp xor lret cmpl push xor aas mov les mov stos or and adcl outsb call dec pop std cmpb inc push push push aas pop push stos sbb rcll das xchg mov (bad) (bad) sbb sbbl je push outsb xorl cld sbb jns jne mov rolb out aas push jns xlat pop fwait and cmp xchg add test xchg fs shlb push pop push pop xor dec xchg repnz xlat add adc pop aad in pop decb lcall inc insl mov mov cli daa jg cmp jb mov push add add xor ja and mov pop dec or push sbb lahf push adc mov xor add popa out out rolb push inc dec sahf (bad) mov nop mov inc fs push pop out dec pop gs push sub jne xor jmp nop or fs adc and xchg sarl mov stc and into and fnsave add and int3 ja push icebp or jge sarl popf and lret xchg sub mov xor cmpsb (bad) cltd rcrb sti lods pop cltd jo dec fiadd movsl popf sahf xchg lahf jae lret dec cmp add mov mov inc xchg fs push rorl sub pop ret dec xchg sbb add out jo pop (bad) push add pop jl dec icebp stc xor in aad xchg mov inc xchg pop push cmpsl and mov sbb sbb jnp fnstenv scas add xchg jb out jmp add rorl inc iret jle pusha cs and push testb inc stos addr16 xor bound imul aad stos jle push (bad) xchg or xor repnz jle daa mov stos fs cltd mov mov fcompl mov adc pop xchg pop jg add fstpt ret mov and mov insb fsubl or add cwtl add jb (bad) sbb es into mov mov adc or xchg mov repnz leave (bad) and inc push and paddusw cmpl jne sbb and insl (bad) daa je mov or dec xor lods and mov negl cld sysenter and sbb repnz xchg xchg push les mov pop pop iret clc sbb sarb add inc je dec xor test lock mov scas cmp adc lock sbb (bad) dec aad insl ja mov fcomps stc fs xor add outsl push mov and and into sbb insl add outsb aam (bad) pop (bad) cmc xorl and scas mov dec sbb cmc pop add xlat int3 rorl push or push sub or stos aaa ljmp idivb push pop sub sahf sarl imul push dec add cmp add jl sub repnz (bad) pop add mov in leave pop sub adc mov ljmp cmp jbe aam pop xchg ds mov dec jmp lcall subb fstps dec cmp pop cmc stos jnp sbb shr sub stc add xor mov rcr mov mov add xlat daa jo xchg push in imull inc ds inc lds push xor call (bad) pop pop or js sbb mov add sbb outsb or repnz adc in fs push push push out push pop adc int3 aas movl in dec dec ret inc jecxz and push inc dec hlt push cmp aas int3 inc and adcl mov sbb sbb mov mov sbb popa popf cmp jae adcb aaa ljmp shrl sbb xchg (bad) add xchg adc jo outsb sbb sbb lods nop in out bound pop jge loopne push psrad icebp inc shrl add and shlb ljmp xchg aas flds mov xchg xor pushf imul imul jl in dec add push loope sti adc dec (bad) xchg pop lock jmp mov jl addb sbb fadd dec inc iret sbb and loopne fnstsw repnz cmp xor sbb and jno pop xchg cmpsb std cmp mov sbb xor or cmp clc add lcall or xchg hlt xor add jp lods fwait rorl movsl out imul add xchg fldl jo test xchg in adc shrl aas push xchg add cwtl rcrl xchg adc test es mov push add xor pop loopne mov jecxz enter and add push xchg add mov pop sbb push jl cmpsl xchg xchg xchg mov movb rcrb mov lcall popf icebp pusha lea jo and test add pusha mov test mov ljmp and inc and jg add dec push ja sbb xchg sub lods adc or xchg mov loope jg sbb push xchg andb sbb push in pop add jle enter xacquire xor and add in adc out mov adc das jnp jg push push inc push cwtl ljmp pusha je and mov add insb lret lret test pushf fs icebp jecxz jl pop xor outsb adc out mov aad in popf int cwtl xchg addl lock test cld push mov and inc xchg rorb cmp jecxz mov cmp sub mov dec loop push jo add xchg sbb les and and push pop or add fwait pusha pusha sbb call xorb sub adc pop adc adc es inc sbb cmp or push cmp in mov test mov jl add sbb pop sahf inc in stos daa jp inc orl xor aas shlb aad adc dec add icebp push addb mov pop jb cmp adc xorl arpl mov jge xor xor movsb add add jle cwtl data16 inc add sbb popf pop je (bad) pop mov lcall cmp out loop lods add shll fadd subb test mov popf pushf das int3 lods and call bound sbb adc and pop inc push fs sub aam adc xor dec lock cld subl pusha jns add (bad) je outsl xor loop mov sbb mov push sbb mov pop sub lret pop mov pusha jno add inc (bad) xchg push imul sarb pop lods repnz movsl inc mov call iret mov popf (bad) adc out sbb add xor push mov pop int3 (bad) jns inc inc xor xchg and or ror or nop movsb sbb add dec adc pushf dec add mov call adc repnz fidivrl sahf sub xchg scas popf xor shrl xchg xchg cmp sbb or call imul popa int3 scas rolb outsl jecxz int3 cmp add sbb mov lahf xor pusha push jo or add mov adc in pop mov int3 sub sub les mov mov xor add adc repnz aam add xchg jge lea or xchg int jno ds mov add add (bad) jbe push cmp sub imul jp xor adc inc pop or imul or push xor mov add sub jp adc add popf mov add cwtl add sub cli rolb inc add dec inc fs xor testb (bad) mov xor arpl shrb dec ds dec adc push adc sbb ja pop push andl cmpsb aas inc and xchg imul jnp subb fildl aaa sbb shll mov inc arpl xchg arpl popa mov test inc ja cmp repnz imul test add (bad) jmp inc hlt cmpsl lds or mov fstps movsb pusha inc adc jo dec add loope jb push ficom sbbb sbb push push int3 frstor call and ficompl mov xchg push xchg add (bad) pusha and push fiadd ret jge cmp out sbb adc push cwtl adc inc fadds inc push leave push test xchg jne jbe sbb add in pop dec leave push add jbe sub lods mov imul xor push sti push and ret out dec push sar fildl insl xor xchg sbb push fwait adc ficompl xor push icebp cmp push push push scas pop sub mov sbb icebp adc xchg cld lock push cltd sub add xchg cli into sbb loope jnp jp inc mov int3 sahf mov sbb movsb sbb mov push mov cwtl jbe and or cmp mov loopne mov xchg sbbb pushf sahf decb mov mov adc cmp add pop mov sbb shrl inc and xor sub push fstps (bad) push pop xor mov sbbl lods mov adc or xor push fsub gs inc sub fldl ret pusha push sub xchg (bad) lret les orl adc mov mov inc push xor (bad) rcl xchg mov in movsb and pop sub sub mov sbb roll xchg and xchg adc out xor push out jg add decb sbb sub dec mov cld aaa in or and loop lods pop jg subb lret mov cmc test adc cwtl cwtl call pop das (bad) pop subl adc or push inc movsb lea jl inc test lcall iret push mov imul sub add push xchg pusha pop and mov xor call (bad) in pop fidiv inc add mov inc (bad) lret pushf and inc fcoml sub aam mov insb cmp add adc test jl mov les fwait pop xorl jecxz cwtl sahf xor cmp in (bad) mov jmp add nop mov adc sub testb inc roll pop sub rclb je pop cmc into add jne push rclb add cmp frstor adc push icebp jne and das subl in add jnp js (bad) and add sub out nop test pop xchg jnp and andb adc add mov mov xchg les mov sub dec fwait dec nop mov xchg xchg lea sbb rcr cmc rcrl sub xor dec xor push adc sbb or pop (bad) loopne sbb insl and or push in bound sub psubw dec sbb out rcr popf aaa shlb int3 push movsb lock push lcall xor (bad) pop pop mov push loope mov sub sarl xor add outsb xchg (bad) ret or insl dec cmpsb hlt add sub xor sub add inc movsl ljmp sbb decb and inc je ror ret cwtl dec cmc movb orl gs cwtl rorb push aam mov pop sub adc (bad) rorb adc je mov and push leave adc and xchg cmp or stos shlb js push mov push fadds rcrb jp add into int3 push xlat mull mov or js test xor mov push adc mov jae fldl dec mov sahf add pop xchg mov add cmp cmp data16 mov test add loope or adc aas inc lods or sbbb cld mov faddl inc fcoms iret push and insl fld1 mov test xor insb mov pusha jbe rol loopne fadds inc and mov dec clc loopne lods js pushf inc test subb jl push sti mov sub in add and mov rol adc scas mov test push jecxz js sbb jbe adc add cmp adc jl adc pushf leave or dec nop adc es push jne adc inc in pop js rorb xor and mov mov pusha sahf nop pop sub mov mov inc add add rolb pop jo lret cwtl icebp mov xchg cwtl lods shrl sub cld push mov or roll das cmp mov aam sbbb mov xorl roll roll xchg loopne mov push dec mov in push add icebp scas and fistl dec loopne cs cmp sub sbb jnp stc aad adc loopew jo inc jg (bad) dec test and add ss iret adc or ja mov jbe pop add or stc jns fldl sbb sub dec mov inc dec cwtl in pop mov cltd xor sbb adc jb cmp sub pop sub mov mov or mov std push icebp ret push aad hlt popa sub mov cmp adcb in and sbb fdivl leave and in jle dec or pop sbb jbe cld les aam lret or es mul lds test out inc xor and dec aam mov fisttp inc pop bound cwtl jg nop add lods fwait dec mov call (bad) and in and cwtl or push lret mov mov test mov or adc cmp xor mov movsb lcall xchg and cs adc push xlat fiadd pusha jne push inc cmc pop lods or popa sub lock add movb sbb test xchg mov mov mov dec or bound icebp add mov mov add bswap pushf mov mov adc inc aam adc loop add cmp inc xor xchg jl pushf lcall fs insb lea cs lcall clc inc lahf enter sub scas adc inc dec jg leave or call adc dec mov icebp cld mov mov sbb inc mov (bad) mov inc pop fcoml add scas in adc xor test xor mov sub xor pop xchg std jl dec and jmp shrb add loope sub test inc sbb mov push xor inc movsb shll adc cwtl or rolb sbb adc push test pusha pop in add cli pushf lcall mulb sbb fbld xorl xlat jnp imul fucomip push sbb and xchg loopne inc js ljmp aas push pop pusha sub inc cwtl cmc dec rorb in js adc sbb loopne repnz jl or lock xchg insb mov dec aam xor fsubl shlb in lock xlat cli nop int3 dec rclb out mov dec xor es push adc add repz decl movsb pop adc inc cmp sbb and push push mov insb and or add jns test inc repz dec sub call or sub sti out sahf js push push arpl jge jbe xor repz outsl dec xchg pusha clc sub pop xchg add dec hlt mov mov jmp rolb cwtl outsl sbb ret dec inc clc (bad) xchg scas xchg out pushf xor xchg and out xor arpl pop cwtl dec iret add mov or out dec mov repz inc pushf push dec cld adc insb popf enter and out and add or jo das and xor cwtl lds add loopne jmp or inc lea sti add xor mov int and call js fs je hlt test in popl hlt std mov and adc adc cmp je pusha mov dec insl nop push push stos pop adc sbb add dec pop lods inc pop and pop adc or jb push mov inc add adc cld dec pushf leave sbb test cmp jnp sahf (bad) mov arpl inc mov shlb adc mov mov adc add inc sbb rcrb adc sbb mov xchg or (bad) std mov pop sub or call inc add sub lcall sbb leave push add dec xchg mov push or push push lret mov fadds sbb nop test out dec adc int3 and dec mov xchg jecxz leave sub icebp iret nop fsts inc jg sbb ljmp adc jl out mov mov xchg mov push fmul push mov mov pop xor xor hlt add add mov enter xor sbb pop and lds mov fs xchg rcrl sbb jns or inc or sub cmc je dec fldenv mov in dec push into sbb int3 nop add and rcll cwtl inc or mov cwtl jo xchg aaa pop pusha adc (bad) icebp clc insb or addb repz inc push xor inc jp pop shlb xor jle add pop or enter lods stos inc adc lcall test add xchg and adc fs roll mov inc out rcrb pop aam inc adc add mov pop or hlt jbe rorb fdivrs cmp xchg adc test cltd adc cmp iret push add mov cmp add ss addr16 sbb xor add dec xchg jne adc les call flds cwtl cld inc sbb xchg icebp call or nop (bad) and xlat xor (bad) aaa cmp or lahf xlat dec (bad) inc inc mov jl xor pushf cmc cmp daa lret (bad) add adc sbb add daa (bad) pop inc xor xchg es jl lods mov imul and (bad) daa pop sbb push sub sub movsl lahf popa pusha ljmp push daa icebp sbb ljmp and add scas dec shll xor mov inc dec add arpl das in cld pop mov and sbb movsl push push loopne cmp test cmp ret xchg orl and inc mov lea push xlat repnz into pcmpgtd icebp (bad) mov add aaa pop adc (bad) and jecxz add or push add mov test sbb cld mov or ds insb or mov adc fstl push sub int3 repnz fdivl sub in sbb ljmp sub test nop popf lock push int add insl pop xor int3 add mov or insl push dec sub push sub and pusha xor dec lcall sub test or dec xchg jecxz addr16 ss inc cmp inc add jg iret repnz imul nop in sar mov lcall add xorb stc aam sub repz mov (bad) hlt xor pop mov jne stos sbb shll popf (bad) and add pop sub fdivrl fsts adc (bad) add lods repnz icebp jge orb sbb sbb cmp jne jmp mov jge add xor mov lret push decb add in add lret hlt pop outsb or and scas repnz loope sbb (bad) lret adc sub sbb daa mov out je je daa push lock mov mov ds fs sbb push (bad) cmp push in outsb add arpl imul adc dec int3 xchg mov outsb stos insb adc xchg cmp adc pop aam or add in push mov (bad) sbb movb sti mov push jne add (bad) mov and jg add js popf pop jge les ljmp mov es ficompl gs push movsb pushf insb sbb repnz jmp scas (bad) cmp xor sub dec or mov inc pusha ret lds pop sbb popf adc out addr16 or mov mov cmp sbb je adc xchg cmp faddl aam mov add mov add es cmpsb in stos sbb mov sbb and xorl sub insb cmp jnp and ss lahf add mov mov call je test cwtl jo subl sbb and xor es loopne das push cmp imul lods and fisttpl xor in cmp int3 jp add cmp lock inc add shll insb stos ljmp and push insb mov mov add mov xchg add loope loop cltd insb adc or add inc cltd imul out sbb lahf popa xchg cmp mov pop repnz lock cli cmp shr (bad) push js imul cmp jo sbb mov sub push pop dec addl mov loop cmp pusha add in add (bad) sbb addl test lock sbb clc popa mov mov sti pusha insl sbb jl adc add adc sti jb fdivs and mov pop sbb dec fdivrs and in out fs les andb sbb xchg push in and sub jno nop jg (bad) loopne out push inc (bad) push movsl mov jl rolb adc xchg fwait jnp mov adc inc in push jge pop dec ljmp out add sbb pushf inc push imul dec and lahf inc addr16 lcall bound js inc les add out pop mov nop mov xor adc jb cmc adc xor cmovo adc push inc jnp ss stos adc lods and addr16 jp mov jle add xor inc add fwait xor dec insb test mov dec fs iret pop decl push out pop repnz les stos xchg inc inc add or mov add xchg jle sub iret or icebp push sbb in ret cmp cmpsb mov push mov andb add push dec rclb mov outsb push cwtl nop adc xchg ds pop fs xchg mov nop movsl cwtl pop adc cld cmc nop jo xor adc xchg add push xorb xchg fdivs xorb jecxz ret pop fmul cmp mov add xorl add ds notl movb adc add xchg cli adc or inc pop scas insb (bad) (bad) mov and mov and adc int3 pop jmp je (bad) push mov dec lcall ret cwtl call mov jae shrb or sbb inc aas dec add out add cmp dec and pop mov gs add mov or fwait repz mov and jl add repnz test mov dec fstps dec sbb add mov jmp loope xchg and xchg (bad) xor (bad) xor imul xchg pop jge mov add lock je mov rolb xchg dec pop (bad) xor inc in cmc push mov repnz addr16 addl mov xchg add loop int sbb call insb dec lea (bad) xchg (bad) xchg inc movsb scas int3 dec shrb or push fcmove sarb push cmp or pushf adc andl and jge dec pop inc inc sbb (bad) push das adc cwtl nop arpl mov cltd mov adc sbb dec js or inc cmp movsl mov mov adc repnz push sbb popa ret jmp xchg adc xor outsb jge sbb mov lods movsl clc push lds je dec mov push mov clc pop and clc das add hlt mov adc (bad) je push repnz push fwait lods shlb and sub dec daa sbb jb or add mov lret sbb loope inc or jno movsb adc call sbb and test add pop lods ret loopne aam imul cmp xlat jno adc adc pushf add jmp adc movsb inc fwait adc pop and cwtl lds add and sub mov call sub outsl fadds mov in faddl stc enter insl xorl mov lea jo inc mov sbb dec addb push lods or adc shlb and cmp and gs mov jg or lock pop outsb xchg repnz sub add ss mov cmpsl push add adc push or mov icebp cmp les xchg sbb jmp add mov pushf add std inc outsb cld in aam jne xor nop out mov dec and mov adc mov xchg jmp aam add lock iret xchg add xor mov adc or fidiv jecxz test das (bad) xor xorb pushf add inc jbe pushf adc repz orb rcrb mov cwtl sub pushf dec in or sbb cmc ret mov add cld mov in mov mov mov cmp cmpb dec adc mov aam daa mov jecxz add in fsqrt jb pop cmp lods int3 jp call push sbb mov sub xchg add add fist adc or imul int3 xchg inc in pop mov test mov les (bad) punpcklbw pop xor jl sahf add or aam xlat push xchg imul add cmp adc daa or fstpt mov imul mov push stc add out mov mov pop pop mov xor add addb mov and mov mov and test jo fcoms adc imul mov andb cs jnp in add mov cmp add lds cmp cmpsl sub mov fs xor cmp adc imul dec inc sbb xlat inc stc ds mov aas or (bad) mov and rcrb lcall push dec xorl clc push repz xchg inc mov sbb pop xchg aam xor leave or xchg pusha loopne lds not je insb add mov mov loopne nop imul mov mov adc mov xor inc xchg inc fisttpl subl mov jecxz xlat loop add mov adc adc cltd int3 imul jmp cmp inc add adc sbb push pop mov adc test xor cltd imul mov movsb ljmp dec mov mov sub add and xchg pusha add les movsl and mov les lret je fldenv add push (bad) dec jns les insb mov fwait dec add jo xchg sub mov adc mov mov mov add cmp xor movsb fcoml dec mov pusha push enter or add adc inc sbb in push sar adc out pop mov stos popa (bad) mov push xchg lods jg pushf jo mov jbe repnz jle ret jnp ret pushf mov je add xor scas daa ljmp mov inc xchg pusha add jnp xor xor cli in imul mov or push jl jecxz call lahf adc jb jg popf sub inc inc (bad) jle sbb ljmp aaa aas mov dec test push adc sti out add rcrb mov shl cwtl mov les leave lods lock daa ret aad lds inc test xlat mov push jns rolb add sub test test ret (bad) jge mov in and rcrb mov jle mov loopne bound js (bad) cmp xor pop ds pop enter dec nop adc push gs je movsb mov test out and xchg mov (bad) rcl adcb push jmp add sub or fisttpl mov cld or clc add cli inc adc xchg sbb fdivrl fiaddl adc mov mov push lea cmpsb sub adc push adc int and jmp cmp push mov xor cmp pop pop (bad) loopne in lret pop adc mov adc nop mov loopne mov xorl xor jbe daa incb inc adc dec ret xor xchg lcall insb xchg nop mov and int3 lods pop or je ss enter sub test sti stc or pushl sub inc mov pusha mov pop add (bad) pop push inc inc stos hlt push push pop xchg dec (bad) addb xor xor sub fldl sbb sub adcb adc add mov pushf int3 cld xor adc nop push ljmp clc movsb and mov and stc and and dec jo adc scas push and jecxz and lock (bad) mov jbe leave scas mov mov adc in push sub loop mov xchg pop call adc lea inc insb jnp cmc push es fsubrl cmp add cmpl jne jns mov xlat pushl push in xor add shlb dec lock or fcoms pushf mov nop or mov adc adc xchg dec pop mov jmp sbb xor sub dec mov jmp inc dec enter xor adc inc fldl xor mov mov adc lcall andl movsb out jmp sub or lods inc aaa mov sbb pop xor popa scas or fs addr16 dec xor or sbb ret cwtl wrmsr std push dec pop inc jle subl fucomip fwait lea add fmull lds cmp pop xchg enter movsb jmp sub sbb fiadd sti call push insl xor pop mov mov push in xchg sub dec adc add lock adc into or scas or xor fisttpll andb adc (bad) or jecxz push insl out pop pushf leave movsb mov mov inc test inc adc pop daa xor inc in pusha es sbb int3 xchg sbb add pop push push mov pusha pop loop imul jmp stos scas and or test adc cmp adc cmp sbb and int3 jne enter cmp push push mov leave add repnz sub movb push lock daa cmp outsb push dec sbb imul pop jmp les lods inc pop mov add call xchg jmp and adc dec leave lahf sub push mov mov aas sbb es (bad) clc dec xchg and or (bad) call dec sbb mov shrl xchg lret out add mov inc sub mov fs xchg cli rcrl mov sub int3 sarb popl xchg adc xchg sbb fcomi adcl rorb imul insb dec jnp and jp and mov dec lods and lods xchg in aam add pop iret push cld add lods cmc movl repnz outsb pop mov adc xor mov je pusha inc aam or lcall dec push mov lock cmp add lahf jmp test cmp inc xor adcl lock mov lret push add fcomps imul loop sarb popa xchg das fdivrl punpckhwd xor add into push adc enter pop add in adc repnz aaa push dec sbb jo pop push pusha daa xchg jae xchg fisttp mov popl or mov dec push imul (bad) dec sub push rorl xchg pop pop dec push inc mov icebp int3 or into cwtl loopne shll sar add pop adc or mov out mov inc das add add mov xor mov data16 xchg mov mov dec sub and cmp cmp inc (bad) lock aam test fcompl or push call cmp pop mov in ds imul push jnp sbb pop enter cli xchg rcrb (bad) mov mov sbb faddl mov les jo (bad) js dec cmp pop add repz sub inc adc imul mov les xor jno pusha ss or mov xor cmp xor je xor cmpsl (bad) sbb mov add ljmp cmp add push shl ror jp mov dec adc inc xchg and test pusha imul or mov mov push push add data16 add lret mov push shll lcall xchg push adc stos mov push mov in mov lods int3 pop and sbb stos lret jbe adc and aad pop scas xor xchg cmp pop push call push seto sbb xorb (bad) xor (bad) shll and dec pop inc cmc sbb mov dec cmp subl rolb cmp pop fs adc add adc sub adc lock add fcomps sbb pop add ret xchg cmp in add adc sbb rcrb dec mov shrl mov inc mov and mov scas insb imul xor mov and bound (bad) imul pusha lcall mov inc or (bad) push loopne cmp mov jne mov push loop inc test push scas pushf add lock mov push adc hlt dec in cmp cmp lret rclb lcall ds pop push and mov sub fidivl push je fmuls dec sbb aad sub mov in imul daa data16 sbb mov test inc mov pushf or inc mov fmull xor fdivrs loope and dec sbb leave dec inc shrb cwtl jg mov add movsl mov lea xor test jl setl fucom xlat div adc pop xchg or inc mov dec popa xchg insb mov dec mov push pop mov mov clc rorb xor push (bad) xor shr popa lock inc adc mov xchg mov adc mov shll mov sub or insl loopne xchg pop data16 inc mov jb cmp push lods push add push adc cmp push cmp xor inc mov mov add cli push rorl shlb mov fwait cld push int3 push mov jb int cmpsb pop pop addl pause inc pop (bad) dec loope cld and or sub mov ss movsb pop std xor sub inc int3 or jge leave hlt add popa movsl les incb sub push fimull mov inc inc and adc add iret dec mov popa jne xlat adc lods push adc push out jmp xchg les or pop xor mov mov sub and test mov adc sbb into (bad) cld mov cmp add mov mov mov in adc xor xchg push mov bound int mov cs cmp push mov jo dec lods mov ds or sbb xor andl adc (bad) stc sbb and sbb sub or pop push in push mov insl je or jp pop repz adc pop sub xorl and cltd mov addr16 mov dec hlt aaa nop sub mov inc dec mov lds pop xchg push inc lock cli add add ret incl sbb lods add int adc stc and jo cs or hlt sbb in push sbb int (bad) mov push pop cltd stos pusha dec call mov sbb pop and das push out mov xchg ljmp dec push inc mov icebp push dec sub sub testb add js adc add outsb or pop das mov push ffree ds leave shrl add js enter cltd pop or adc fstpl dec dec cmp add aaa in sbb cmp pop dec into pop sbb das sub jl lret test es or xchg iret lds imul add pushf and adc imul push push out push arpl lock add pop fs adc out sbb sti inc mov nop cmp pusha outsb inc les fcmovnbe mov lock xlat insb or popa adc call xchg adc rorl push mov je pusha adc test test aas pop mov cmp mov mov (bad) mov adc adc sub push sbb test xchg jo fiadd inc sub rolb inc cwtl add loopne arpl lods add jge sbb dec lcall vcvttsd2si sbb fmuls adc push aaa lock cmpb xor mov pop loop es test ljmp hlt arpl hlt inc jne push pop bound cli xor jecxz call cltd (bad) int3 mov adc add js add inc sbb sbb cld cmp xor sbb or xchg sbb mov js add in sub mov and mov sbb jmp loopne or je mov sub mov or fwait mov push das sarb (bad) loopne add mov xchg jbe sbb cmp or adc inc in cwtl popf daa daa aam leave lock out add and hlt les or fsubs popf pop daa add enter sbb cld or jge fcoml cmp sub dec movsb test add add add sub jns pusha sbb and xor out bound xor imul pop mov xor pop stc int3 leave mov mov les or sbb dec add xor jmp movq int3 rorb (bad) add out mov (bad) adc fadds cmp xor repnz push mov iret in jmp je int3 addr16 add inc sbb jne add insl mov js mov rolb movsl (bad) sbb sub inc jecxz pop out pop loop mov mov xor jo mov adc sbb rcrb cwtl jo and xor cltd fwait rclb mov sbb out and mov adc adc sbb rcrb mov add sbb pop gs pop mov xchg loop pop or mov imul lods stos jns dec cld jmp mov cltd jecxz test mov mov push aam sub push (bad) mov inc pop outsb xchg push in sbb lods bnd loopne test fdivs sbb dec mov add mov xchg das sahf fwait in or sbb lea fistpll aaa imul dec push push mov cwtl shlb daa pop mov push pop ss lods or inc call arpl inc add mov or sbb dec cltd cmc jo fs add xchg popa int cmp push sub das xor dec xchg data16 jg inc sbb gs js and and or lods or and sbb cld adc sbb enter lret push (bad) add inc fsubs xchg mov hlt push vmxoff lret adc sti sub jge enter adc hlt loopne dec jne cmp push insb jo loopne ljmp hlt mov jle push inc inc (bad) pushf push pop add adc mov add dec inc dec xchg popa int3 push enter push (bad) xlat or mov mov mov je or les mov enter xchg aam lcall pop fadds xor and cwtl add mov mov pushf int3 in shr clc pop add ja dec repnz push aaa pop adc fs ja scas mov pop mov rcrl js adc icebp in test lcall fcoml pop adc movsb imul mov mov mov insb stos and xor xchg or icebp (bad) mov mov or jbe je fsubrl jns mov outsl test xor or in cmp push cltd int3 pusha xchg mov rcrb lock dec or mov adc cs jl enter cwtl ljmp out dec mov cwtl push mov mov sbb dec test mov arpl add jns (bad) insl push in pusha lock int3 pop ja mov add inc xor cmc sub cmpsb inc imul dec pop xor and int3 and add stc je movsb inc shlb mov mov jecxz loop push (bad) or lods js imulb add dec add pop aad adc in cmp push xchg addb mov xor test stos imul movsl lret adc enter shrb loope push push and push or test std enter sbb test or inc xor jo dec push (bad) imul jbe pop adc ror nop xchg and mov cwtl xlat out rcl mov pop jo push xchg cmp ds mov adc push enter push push dec pop add xor and add dec (bad) icebp pop ljmp adc fcompl and pop pop dec cli inc xor (bad) mov lea mov test fs jl push push jmp andl std hlt sbb push lods push add cld lahf call add in sbb inc imul or fistpl mov lds jecxz push pop test mov push mov add nop add cli jo idivl push shrb mov jns add jmp mov pushf imul je insl sub push gs mov sbb inc inc repnz sub dec sub pop push add mov cmp inc xchg mov ret test dec arpl pop jae call insb stos adc add mov fildl mov or sbb xor or xchg pop fs pop push mov rcrb dec xchg aas xchg (bad) loopne jnp sbb loopne jecxz xchg lock inc cmp test insl insb push cli pop adc inc movsl shrl lahf add cmc sbb jecxz sub ja mov cmpsl lods add shll cmpsb jle and mov mov cwtl adc lods cmp xor popf or addr16 and (bad) clc sbb dec adc movsb inc fs add mov aas pop mov add add rcll fcoms and add movsl mov das adc mov test pop fdivrs loopne mov hlt cmp add stc in sbb mov push inc ret dec (bad) fadds and daa or sub dec testl std cmp lahf add pop xor in imul pusha addr16 fcmovnu push xchg cmp sub mov in loopne scas test subb push and fadds scas and mov sbb inc mov add push (bad) mov icebp xorb dec movsl nop into rcll test mov loopne push (bad) sbb int jge js fcoms mov jnp jb push xorl or mov sbb (bad) jo push adc mov jge push xor call push jmp mov add lea sub test mov xor arpl pop outsl mov scas ljmp jae mov loopne push call adc add mov mov (bad) xor movsb xchg xor pushf dec mov jno adc sti scas les pop incb hlt xchg mov icebp and aam adc fcoms out xor mulb jge sbb hlt test and mov call adc fist imul sbb add sbb nop repnz xchg add cmp loope adc orl (bad) fldt and jecxz or cmp fldenv xlat lock pop test in add add fildl cmp xchg sub gs or hlt ret fistpll not and jmp arpl mov adc ret mov pop mov dec call je push mov sub sbb sub xorl rclb test xchg shr les xchg in rorb xor pop adc insl pop adc test cli (bad) mov lcall jecxz sti nop enter push mov pop enter cli aas cmp xor xor js test and frstor sub hlt popa lcall and jne mov mov lock imul cwtl in or adc and daa outsb test inc scas int3 mov xchg and hlt push or gs mov xorb pusha adc cmp dec loopne sbb or nop fdiv imul jbe xchg cmp icebp imul sarb ret mov les outsl imulb imul mov mov daa mov inc sbb push or fnstcw js out inc and inc ss lds xchg jno and sbb les (bad) repnz fsts push pusha sarb jne nop adc dec mov shrl mov jno and dec out and xchg scas and mov jae js ret addr16 cmp push jne dec push fwait dec add sbb sub xchg dec mov dec cmp nop jecxz cmp (bad) cmp mov jo xchg (bad) adc jle add imul cld sbbb mov cltd push add sbb call jle test ficomp push fs adc add repz std das int3 imul push push xchg stos loopne jp loope mov sub xchg adc int3 dec in test lds mov out dec pushf and jmp loopne and rorl enter lahf movb aam sbb enter bound pop iret les mov inc add lea data16 add or xor mov add sub or sbb insb xchg stc in add lret (bad) (bad) incl leave inc dec sub xchg inc pushf adc sub adc inc dec jae jns fs es mov inc adc daa pop and cmp add cmc or or lods dec mov cld pop xor adc sbb in adc loopne je jbe adc out pop xchg pop adcl pop mov adc mov popa mov inc (bad) jae js ds xor xor imul ja enter mov ret pop imul add pop mov je push add (bad) out jecxz sub data16 push jbe loopne pop pop or inc int3 dec mul mov pop mov xor fdiv mov lock clc push test (bad) mov mov cmp push hlt outsl insb imul mov (bad) mov xor mov add test in adc insb imul push lods sub call (bad) popf push mov cld jns jbe add jg mov jmp adc xor and int3 (bad) lcall push inc mov add adc fwait push xorl dec lcall xchg pusha push dec pop cmp pop cmp mov cbtw pop sbbl nop arpl popa leave mov inc loopne fsubrp mov inc loope add sarl push sub add dec dec jno mov mov mov add jmp inc push js pop movsb add cmp icebp add inc dec inc aad pop add mov sbb cwtl js add bound inc loop xor jmp fldt mov sbb mov enter sahf mov cmp xor stos jp mov lea out dec sbb xorb inc fsubs dec xor add pop push dec mov mov fcmovnbe mov imul aam add (bad) pop add xlat or cs lods les xchg inc mov dec (bad) fmuls push cltd ret test push xor cmpl jno hlt push jb shrb dec inc (bad) lock (bad) add xchg adc cmp rolb mov addb popf insb sbb cltd jmp adc bound nop or test xchg jbe adc sbbl xor dec push clc in pop xor (bad) xor add push jb imul or sti push pop ret pop dec mov inc adc aad rcll rorb add and in jp sub jle mov mov pop mov stos (bad) fdivl pop and sbb sbb iret xor mov xchg pushf stc repnz add cmc lock insb and pop cltd scas dec lods mov xor adc imul rcrl outsl mov add mov outsb sbb rclb pop add xor add sbb cmp rorb sbb scas sbb xchg test push add inc popa popf sbb and mov fwait and pop ret cld push dec and or and jg sub movsl push lahf add popf or mov dec push std sbb sbb nop popa mov push int3 and mov mov dec mov and lret mov mov mov (bad) mov lock inc int3 mov xchg mov (bad) nop cld inc ja aas movsb jno inc and ret arpl inc int or push cld adc adc mov jbe push into imul or dec adc xchg adc jl xor and sub xchg dec mov adc hlt sbb xor pushf sub clc test cwtl xor mov cs cmpb lds loopne and aad cmp xor inc dec cmp lods pop inc loopne loopne bound adcb push add arpl out es cmpsb dec jg hlt sub mov rorl and mov jo out in fs dec adc inc dec mov jge add cmpsl pop dec xor loope popa call pop rcl xchg adc or addr16 push adc (bad) adc in sub popa jns orl add sbb cmpsb mov sbb out pusha lock inc inc mov mov and inc and adc fs sub sbb int pushf adc add mov cmpsb push or mov ds popf dec lea sbb mov add loope ljmp leave inc and stos xor add insl fstpl fsub outsb rorl call pop cltd inc rcl imul push aad loop out inc faddl pop mov jle add inc cwtl jmp ds mov mov adc insl adc into mov in sub pop call add push cmp jae mov repnz in add cld add arpl pop jp lcall or mov push pop add sbb or movsl (bad) or or loopne or loop sub jmp inc sbbl outsb mov sub pop lods repnz sub sbb sbb out or test add in add or in or shrb pop lret es sahf repnz js xor test xlat xor and roll fdivrs and in enter and loopne xchg hlt push inc add adc or mov fadd imul roll mov xchg add bound adc xchg jge pop mov dec repz pop add dec xchg cmp out cmp ret js mov pusha aaa jae mov and push add stos aaa mov test jnp clc pop pop mov sub add adc xor out pusha mov jle fistpll dec loope hlt push scas int3 mov bound add lock insl xchg xor loope (bad) addl rclb cli pusha dec pop add lret mov add cmp insb pop sub fidivr xchg les add mov jbe jnp cmp mov pop or cmp mov push repnz and sbb push inc mov adc sbb popa push adc out and aam mov rolb mov mov mov inc pop fmull dec dec pop nop data16 dec enter add xchg mov rcrb sbb cwtl loope pop add jb fcmovnu xor xor sahf loopne mov sarl pushf movl or ja mov pop sub dec rcl bound hlt inc addr16 or push inc cs cltd aad lock out xchg mov and cmp les (bad) imul inc sub movsl (bad) sbb repnz xchg mov fs add xchg dec jge leave je xor adc jbe inc mov adc adc ljmp sub (bad) and test shr sbb dec xor pop inc cwtl xor cmpsl adc ds adc pusha fs adc mov jp test adc imul int3 in loop push call add ret add ds push jmp out repnz scas mov in and pop mov add mov icebp add or xor cwtl xor (bad) mov ret xor push dec xchg repnz lds and or out mov rclb xchg cmp aam cwtl nop addl fdivs stos (bad) aad test or xchg and add call insb xchg lahf cwtl loopne adc inc fsubrl xchg test mov sub add fstpl pop imul pusha sub int3 stos cwtl rolb adc test pop cmp scas and add ret mov std int3 inc mov lods (bad) add sbb sub push mov cwtl fcmovu sub cltd push xor push add xchg pop or int3 roll je push (bad) inc (bad) xchg gs add not mov paddsb add in pop popf push add jle std jmp and scas sbb xchg ds insb fs icebp xchg cmp adc push fstpl nop aam ja pop inc sbb pop pop mov aam std push mov in or inc xor mov rolb popa add jl inc enter xor sub inc mov imul stos and mov cmp mov scas pop cmp test push int3 jne jl imul adc repz xor loopnew mov loopne arpl cs flds in mov push xchg das stc dec mov pop cld adc cmp adc ret movsb adc sub mov push pop add rorb jne bound int dec mov fdivs cmc ljmp rcr xor push xor inc jecxz sbbl aas and push and dec sbb inc aam add pusha pop sub jo iret inc lock dec fistl insb mov in pop mov popa xor and push push loop push xchg mov inc add xchg jno inc aas xor fnsave lods push xchg inc push loop into nop inc xchg test add inc adc adc test in vmovaps adcb xchg ret sbb or frstor stos enter pop and (bad) out sub dec sbb add (bad) mov std pop pop test jb mov inc aaa mov rcrb jbe das adc ds cmp xchg mov mov and mov nop add xchg jecxz inc jp subl aad insl dec or adc les sahf and nopl adc push dec mov sbb addb negb sbb add orl push mov repnz mov jp dec xor lods dec les sub loop (bad) cmp std add (bad) bound sub int pop fwait les sbb jnp jp push or mov daa cmc push mov xchg inc inc cwtl fist add notb dec cmc mov jle int3 mov mov stc inc mov xor or jmp add or mov inc out cld add cli adc pop cwtl in mov adc (bad) pop or leave sbb add pop xchg test daa stc add cmp outsl sahf fcmovnu dec pop cmp cmp adc mov int3 sbb mov sbb sbb inc jb add lahf outsl xchg rolb pop cmp cmc jns add jge mov adc jno fmull jmp (bad) xor dec dec mov and and out or xchg bound lock xchg jle pop (bad) sti inc push pop jl or out je push fdivrl inc pusha arpl push ljmp and pop test push (bad) repz xchg jl (bad) cli sbb sub nop daa adc inc cwtl repnz inc ds ficompl mov pop js xchg sarb dec (bad) iret adc pop fiaddl sub and dec enter mov inc aam mov jle push inc adc pop test mov into adc xlat xor mov push ret add inc mov push (bad) divl loope add dec push add push pop rcrb mov out xchg call outsb jo xor and mov xchg mov shlb repz adc push out add jmp lods and and and inc fs xchg fldl2e mov aam or inc cmp pop xorb cmp jno dec orb lods dec push add gs test mov imul sbb add sbb dec ja jnp add imul or mov (bad) add test and push pusha mov xor addb cwtl pop in xchg movsb and adc and push imull adc add jns and and and add pop cmpsb mov pusha or out call pushf pop stc jl cwtl adc stos add popa insl adc sti je push xchg push mov mov call lcall fwait inc dec or and pushf mov clc jo jl adc push lock xor xor enter fs clc out into jmp sbb je popf out mov adcl icebp rcrb popl es fcoms dec mov add mov fadds push (bad) mov call daa adc sbb fisubl rolb xchg or outsl adc xor cmp cs leave dec pusha pusha clc pop pop ds in in add push push pop sub adcb mov jmp adc fwait cld test popa or and mov adc negb mov and cmp inc test add adc aam fsubs test rcrl lds mov adc sub jno dec ds repnz mov push pop mov add data16 pop push jns push addr16 mov scas dec insb in add dec sub jg repnz or jge jnp in push cld popf xchg data16 adc xchg xor xor shrl andb inc out pop jmp or or and stos xchg leave les push pusha or adc stos sub sub and addr16 nop xchg clc xchg ljmp inc mov pushf xchg push lds dec (bad) xor add sbb cli pop clc jo mov mov adc xchg push imul pop xchg negl sub stos jo or mov add jbe loop inc mov mov xchg pop imul inc repz es add outsl test sbb out mov dec jb nop mov (bad) jl add je sub adc scas and or insb xchg call int adc mov and dec add mov sbb aad add sub push orl icebp pop add mov popf add movsl xor or ja addr16 jnp xor cmp or jns repz xchg add sub test in push daa orl mov sbb dec lea std add pusha push mov clc cmc xor sbb adc push xchg adc add nop ret cmp or and sbb sub push (bad) ss sbb xchg or test add pusha int dec std mov sub test sub and (bad) sub sbb dec rol jbe push test pop push pop mov add dec imul or out xorl lods xor cmp ret mov test icebp add sbb subb or lds cmp xorl sarb adcl scas inc pusha xor add add stos dec or sbb adc jl add out or imul mov adc cli cmpl les jbe je dec cmp push mov sub jp cmpps add push fdivrl les sbb dec mov ret push and stc movsb mov movb pop mov jno push pop xor jg and inc cmpsb add push cmp xor insb sub movsb mov insb sbb clc data16 push xor bound ja sbb and lea cmp or mov sbb movsl push adc cltd xchg jge out mov xor inc and rcr (bad) pop aam fiaddl inc inc mov aaa jnp add mov sub iret dec mov int xor or and in sbb push and pop std lret mov addr16 inc add pop push push inc in aam jns or (bad) (bad) xor aad arpl insl out sbb push insb pop sbb xor icebp xor sub dec sub sbb inc push cmc and jno mov cmp jae cld adc add fmuls dec aas cmp mov and jl sbb adc adc and cmp xor cmp cmpsb js and xor cli dec add stos mov pop push jp subl xchg sbb cmp push jle int3 add pusha ljmp nop add (bad) mov add and cli sub repnz mov and mov and pop (bad) sbb dec imul movsb out dec mov nop adc out cmp shrl and pop daa sbb jne in mov pop xlat unpckhps pushl pop fs in mov repnz cmp adc ds stos or xchg sbb out cmp xor adc or inc mov mov test loop sbb add push daa fisub push test mov and add cmp xchg jbe inc add mov test enter sub shl inc into pop jp and inc cmp jg cmp addr16 adc sub aaa xchg dec test inc sub mov sub add mov sbb add (bad) and push sub stos sub fs loope mov in push and push mov popa imul out aas or into cmp movsb push fisubr inc (bad) popa cltd push or fbld aas aaa hlt pusha rcrl inc pop shl jbe and xchg xchg sub imul jge pop incl mov xor ja (bad) aad xchg mov push scas (bad) push inc jns add or js flds sub test test stos faddl and cmp dec icebp mov mov and testb mov jno dec arpl push mov pushf add jo jns jp roll cmp sbb mov adc imull add push dec jecxz jle add paddq dec xor inc nop fs scas push adc negb cmp into add jnp add cmp mov pusha xlat js rclb sub mov dec or orl rcll loop sbb dec testb dec outsl push or jae ljmp aas sub inc mov nop xchg out mov icebp push inc sub addl mov mov (bad) mov sbb push mov mov addr16 movsl inc adc xchg cmpsb cs ds pop dec fs pop icebp and out outsl and scas lea adc lea pop add aam jne outsb push xchg add out pop ljmp adc push dec mov add inc xchg insl cmp movsb rorb iret jne mov repz es fldcw push pop icebp clc and loopne stc add pop mov mov sub inc push rcrl mov inc adc arpl outsb jl add sub cmp pusha sbb push lods xchg in jge sub mov xlat lret mov cmp loope xchg mov push cwtl xchg xchg push sub push icebp sbb add dec rol popf faddl arpl cli ljmp add mov adc (bad) mov das jecxz sub nop cmp sub adc rdpmc lahf mov loopne xor in add and jmp push push pop jb pushf mov fsub aad std pop and and std popa shr mov jecxz fisttpll pop mov xchg dec push mov fstl mov jg sbb pop jle mov rclb mov std (bad) ja test jne mov push pop pop insl dec movsl push sbb push push xchg aam popa sub xor pop xchg jl push jge loope adc je (bad) sub jl pop lods sub sub dec (bad) jbe xchg sbb icebp or in aas imul test and ja enter mov add dec std in sbbb movd xorb pop pop jno pop popa lods pop sbb inc push cmp jae pushf daa test push pop movsb sbb popa pop push or inc fimul inc movsb jl shrl xor mov add jmp ljmp add wbinvd cmpsl cltd in or jb add push test add and outsb hlt rolb mov stos sub push add inc or jge jbe jns (bad) hlt pop movsb sbb fld adc cmp sbb stos mov mov loop jle mov push (bad) sbb fistpll pop fwait cmc jge in movl sub push clc es sub ret in cld lcall in push pop out cwtl fwait sbb jnp dec arpl ljmp (bad) adc mov push jmp fnsave push stos push ljmp cld es mov xchg les and ljmp out push aas shr xor pop ret pop scas gs subl pop pop pusha ljmp insb xchg pop add sbb or sub add pushf cwtl and scas mov xor std aad imull mov cmp mov in push sub xor (bad) sti mov push sub mov pop adc fcoms push mov in movsb xchg add daa fstpl aas push (bad) inc and in jbe ret mov sub pusha xor push ds jb push ffreep sti adc arpl or mov push test adc pop inc and jl xlat push dec daa jg jae adcl sbb and pop jb adc xor nop fwait test pop inc test sub mov fbstp fdivrl mov adc jg add sbb sbb popl xor pop sbb wrmsr push sub jl or int3 add push inc clc xor pop push push pop shr cld rcrl out je fdivp add js push mov xchg (bad) and mov jne loop pop insb aad sub in xchg jle mov xor ja inc sub loop pop pop mov mov and or push or mov push sbb (bad) leave addr16 mov fstp out sub pop test imull xchg imul push push stos mov icebp xor mov pusha xchg add or mov inc push pop cwtl int repz out cmp push nop or pop (bad) loope negl pop push ret iret push xor cwtl mov adc push push mov jg cmpsl dec dec jmp mov outsl jp and sarb jg push jae push mov push outsb and sbb fucomip xchg inc fisub pop push insb mov adc inc pop rorb jl push movsl mov pop daa sbb push xchg mov pop mov cmpsl jg scas and inc mov push mov cmovne dec mov or test push mov cmp andl xor dec mov aas fldcw dec out add loop out insb insl mov aas cmpsb sbb sbb lock pop shl sub pop inc jmp jae (bad) adc add cmp or jnp lcall mov jge cmp xor out jo sbb add jmp mov sbb add push pop mov push sbb inc pop jg jbe rcrb push push pop add mov daa push add jnp cmc xor pop mov mov stos adc pop sahf invd inc jecxz jge movsl add xchg pop add xor shrl adc push rcrl cmp in sbbb notb jmp dec or enter js jecxz (bad) pop into mov mov gs divps push and outsl call inc stos mov jle fcomps cmpsb cmp jne mov popa xor xor lods flds stc lods adc xchg sbb cmp jle pop ds test cwtl adc sub fcomps xlat aaa movsb push cltd and aas mov lods push mov push and fsubp pop xor add push mov xchg inc popf jle jmp (bad) adc jmp imul xor add or or pop xor std jns mov (bad) outsb mul and fnstcw inc mov mov jmp add lret sti sbb (bad) jg lods insb jle xor cmp sub push sahf sbb add cmp jl sub push clc sub add movzwl cmp mov inc inc pop cmp int3 (bad) adc dec inc into popa dec adc ror mov fs or or sahf sub test cmpsl jmp movsb ret mov lea adc adc clc push mov into mov ljmp adc cmp addr16 cmp adc (bad) (bad) fidivrl into (bad) xor loope mov pop aas mov and addl dec xchg adc push jl adc dec neg fbld pop add inc cmpsl das jns and loopne js sbb iret pop iret cli pop imul (bad) cmc jg fsubl call (bad) cli add mov subl sbb jnp cmp cmc std popa enter std cmp add push push jmp movsl inc in js fisttpll nop or pop fist movl leave pop pop push out or fdivl inc inc adc dec (bad) lahf je jno cmpsb sbb cmc jle jp mov and outsl adc pop jno add int3 mov sub fs mov rcrb idiv jae ds clc outsl and repnz pop lret sbb or dec jmp andb and out fnstcw dec clc push scas xchg sarb pop test hlt push inc dec in loop mov mov lahf fsubp rorl test icebp jmp jbe push jg add lds out add jnp xor icebp out sbb out cs and mov pusha (bad) adc jnp jg cs das pop aad sub inc sbb jmp push ja cwtl shl xchg adc sahf imul imul mov cmp add xchg in adc sbb loop mov or sti ja out cmpsb jno mov sarl sub movsb stos movsb dec push movsb jl mov enter sub loopne (bad) xor adc ret popf pop add mov push scas xchg fcmovb repz push add mov xor fnstsw fdivr loopne shr dec loop add cmp es jns (bad) pop cmp iret fbld mov call inc in outsl add gs lods nop xchg dec shl pop inc and jo mov mov add leave mov fild and ret shl aam pushf add (bad) ret and rol sub add xchg add fidivr cmpb push mov sub inc and xchg dec (bad) ljmp dec sub push push sti mov mov lret xlat movsb fwait jbe mov adc jg add push jle,pn pop test inc jne adc push sub ss dec out ds out push inc sti pusha xor pop push jl lods (bad) cmp add sub iret cmpsl push jb scas pop rcll lret sub xchg pop or pop repz add cmp inc push or fiaddl inc jne add icebp (bad) push inc mov add cs in sbb aad lds out mov faddl (bad) out or sbb repz scas dec inc sub call inc stc jmp or js jno andb leave cmp test cli and out je mov dec jnp pop push insl movsl mov and shl lret push sbb dec syscall dec push mov fwait test pop and enter pop pop (bad) xchg pop call sti jns push dec insl popl push push pop pop not xchg std xor outsb cld (bad) xor insl mov subl shr add cmp and add popf mov push mov pop je adcl and and imul ds xor pusha aas or pop rcrl scas ljmp inc push std outsl add mov jnp or fdivrs sub pop jle stos sub or aad in and inc scas sbb jmp aam add (bad) mov (bad) jg ja sbb or cld mov in xchg je pushw or push idivl imul ret pop xchg mov shlb mov das fsubl mov fwait mov cmp inc call fmuls push push xchg xchg out pop stos jne repnz inc rcll rcl pop inc add clc sti shr or adc xor xchg pop mov sub fldt aas ljmp xchg jae stos add push outsl cld sbb sbb jbe or cmp jg out adc jmp adc daa int and ret fnop jae fbstp lods push adc ljmp jg mov pop push push in pop xor sbb pusha out push add addl add in into (bad) shr inc ss sbb jns xchg push push cld test mov jbe pushw icebp out (bad) and sub or cmp xchg enter xabort sub (bad) mov add shlb mulss add mov or (bad) jge (bad) ds lods nop movsb addl arpl and inc mov push gs push dec rclb iret xor dec mov (bad) lock repnz inc add adc mov xlat lret xchg daa out imul aad (bad) adc jmp int adc mov orl dec fbld jo mov sub jle repnz mov sbb or cmp jge and push fstpt repnz nop push ret mov std dec pop je ja push lods pop outsl push cmp xchg mull sarl ljmp aam cld idiv and call out xchg outsl stc and addr16 or add test jnp mov push push es leave and fs ja loope in push stc pop ficoml leave or mov jnp jmp xor lods ja jno fildl xor fwait (bad) outsb jmp add stc pop aas adc mov pop mov jg push cwtl fild or pushl out inc adc jmp add mov shl jp pop jmp in test outsl dec cwtl pusha mov int xchg jns or sub push cmp mov jle push add enter int3 mov pop repnz lret sub mov (bad) mov xchg fdivs ret lds leave xchg adc push inc add push rcrb pop add mov int3 mov lods incb push inc ljmp jmp pop stos hlt pop inc xchg inc icebp or outsb and mov xchg lods jg push jmp faddl (bad) pop adcl sub movsb sbb add aam mov shrb jns adcb aaa loop sbb cmp and inc enter rcll adc push inc aam (bad) fmuls pop je test mov jl add mov jo add pusha pushf xor jl in sub sbb (bad) adc add cmp (bad) mov mov mov cwtl shl adcb push leave popa cmp or add sbb adc fchs or stos adc int xchg xor in mov call imul adc pop or or fstpl add cmp xchg dec push mov cli add test cld push rcr in pop and jnp dec cltd add bound movsb push data16 imul mov add leave dec clc mov xsavec insb lods insb dec cmp mov fldcw mov mov das mov ret les xor imul imul lcall (bad) in inc bound outsb lods mov fisubl push inc push jnp iret sbb lds rcrl lods add adc jbe js lock mov repz in repnz aad or or sbb push pop lret cmpsb cltd mov inc adc ss rcll imul ds cmp and insb cwtl and jp mov pushf pop push push sbb cmp leave mov movsb pushf sbb sbb dec or mov jo bound or loopne mov xor mov dec add jle and push adc and sbb inc mov push or mov ds and mov nop mov cmp jo push outsl xor js push cld inc pusha push sub movsb hlt and xchg rorb mov test or or mov test fnop dec jbe adc mov mov xor add cmp lcall sub push das fsubrs push pop or fmul test xor icebp xor add mov stos pusha leave sbb fucomp jge mov popl (bad) sub nop mov pop mov cmp xchg bound mov sbb pop es clc and popf pop loopne push data16 jbe aam (bad) xor dec jo loopne xor xchg sub sub insl outsb add outsl test fld push insb adc mov push xor sbb inc xor jbe outsl fiaddl popa bound mov cmp jg mov (bad) and das or mov add popa and test mov push enter adc add orl inc add mov pop fsubrs cwtl add inc insb mov imul add bound xor mov sub mov mov outsl aam loopne or hlt popa fcompl add sub sarb or imul outsl add and nop inc mov cs push loopne ret (bad) sbb cmp ds jle adc sbb mov sbb sahf out sbb ret dec loopne mov (bad) sahf dec inc pushf loope cmp pop inc inc push sbb dec xor xlat andb add (bad) push jge ljmp add fiaddl or jb push (bad) xchg sti out lods pushf bound lcall push or call xor (bad) addb fidivrl sub call dec pusha test sbb mov adc xor popf sub mov push dec dec add pop es (bad) and mov mov (bad) lret (bad) xor js mov rcrb add imul jns push or pop adc or push sbb inc add xchg int into jo jmp and cwtl (bad) dec aaa popa dec sbb insb and add or adc adc mov inc fldcw push (bad) (bad) dec mov inc add add aaa repnz cmpsl lds mov outsb add ss scas hlt pop insb or mov jns mov xor add je mov insb cmp (bad) jno inc push sub cmp movsb inc mov cltd jb or pop add fsubrs add and arpl sbb jecxz dec cmp push insl popf repnz cmp out loop or sub sbb add popa push adc pusha xchg push or sbb lods or cs xor xor mov into jp ljmp (bad) lods icebp cmp sub inc adc push ret pop or dec add test mov pop inc add test mov jbe notl adc dec in dec mov xchg xchg cmp stc pusha ds mov iret mov clc dec mov sub jne aam add push hlt and sbb inc adc push push or adc xor shrb push out xor inc mov jnp clc pop icebp enter add ja inc (bad) jns sbb test inc push and mov and sub les or test push lea or xor xor sub pop add jb mov mov and hlt inc pcmpeqd rorb mov ret outsl (bad) cwtl adcb and mov adc add add add mov jle scas aad mov mov mov movsl jns mov push sub mov dec adc (bad) xor imul and jmp movsl rcrl inc cmp loopne aam bound add mov sbb fsubrs mov jo lds push ficompl sbb dec jns push add mov inc (bad) mov jnp inc insl mov cwtl daa sarb call (bad) dec adc pusha jae rclb jnp pusha push jl inc cld inc and pop call mov mov imul cmp xor or sarl mov adc rorb lea jp stos ret lds jle jb rolb sbb pop cli int loop mov inc xor in sbb stc push inc dec add cmp arpl cmp pop mov or int call adc push dec dec (bad) adc mov stos loopne inc and pop rclb flds add movsl pop or adc insl dec out cmp aaa or outsl test in fiaddl push push mov jnp nop cmpsb push mov xor pop add adc sbb ret cmpsl (bad) mov fdivrs arpl push movsl lea sbb sbb push add imul adc dec sub test xchg enter xchg push or and lcall (bad) adc or sub mov mov inc fisubr dec fsub jmp enter subb test ljmp (bad) and cmp sbb sbb mov cmc inc out insl out outsl aam (bad) int xlat pushf bound inc stc and cmpb in mov cwtl mov inc or inc dec xchg mov pop test mov adc jg dec das dec or bound cmp adc fs add fsubp xchg movsb enter xchg add sbb jp cmp cmpsb inc xchg push push (bad) adc cmp sbb imul hlt (bad) or arpl jp,pn cmp idivb or and inc popl xor xchg les and les add insb and vpunpckhwd and jo es lret inc lds push cltd pop fmuls add add enter pop addl or and mov push inc add add imul or push sti sub add std push cmp jecxz push pop mov push adc test xlat daa and cmp sbb roll lock xor rclb inc ficomp lret xor sub loopne sub dec dec aam sub clc adc jmp sub cmp aas out sub repz and mov xchg and mov roll imul mov dec mull (bad) cld mov inc sub (bad) cmp scas testb imul adc inc mov dec xchg lcall out pushf ja scas jae aam adcb iret add aad jp jmp movsl fldl push in cmp sbb pop mov ret adc popa dec inc push in and xchg inc mov repnz aaa adc (bad) xor xor mov stc movsb pushf push ret jp mov es adc andl dec cmpsl sub bnd inc pop dec iret adc push xor popl sbb addr16 test fwait mov jo xor add sbb mov or pop xor pop jge push ds and outsb add dec pop movb cmc mov (bad) scas pusha xchg adc ljmp jl adc or inc mov fwait add mov xchg dec scas int3 add popf mov or (bad) roll pop rcrb inc add mov xchg lahf outsb push sub test hlt sti fst (bad) push lea add arpl sti insl xchg fsts mov in add outsl loop sub push arpl std ljmp push mov mov stc mov inc or add (bad) ljmp mov add push push gs or cltd imul add dec out xor pop jno or into enter sti mov adc rolb push push cld (bad) test cmp adc dec jbe cmp pusha icebp pop int3 mov add add inc push or dec xchg mov stc xchg loop fbstp mov jmp out insl add pop sub bound mov inc xchg mov and mov inc movsl adcl in push repnz xor sbb aaa test xchg add mov out add (bad) mov adc (bad) add xchg test inc add lahf movsb inc imul loop in lea lods fisttpll mov in xor mov fwait jo lret cmovno (bad) mov cmp inc mov jno adc mov dec and pushaw add push push xor insl sbb dec inc mov inc fistpl adc inc add push gs inc xor stos je or jbe xchg or iret cmpsl cltd adc leave add in out sub xor mov mov fisubr call rcrl call sbb add loopne dec fcmovnb xchg aaa xchg dec adc mov mov xchg rcll rol or and mov inc jbe jne dec out or xor adc sbb arpl data16 pushf adc pop dec add cmpsb xor notw cwtl mov (bad) mov cmp push int sub pop out lods xlat or scas dec popa xor loop and (bad) cmp push cmp jne push pop loope dec inc inc pop cld jp mov popa aam sub adcl add inc fs insb pusha jle loope mov push mov sub fsubrl sahf sbb push xor xlat pop ss cmp dec test and inc push icebp push inc test push fildl mov adc lock fs inc or mov jge,pn push cmpsl pusha (bad) or add scas loopne ret sub outsl xor test dec dec (bad) ret dec out add call sub jno (bad) aaa aad mov or pop fildll jle in dec popf stc xor (bad) (bad) aam pop aad sub inc dec dec ret jge sub xorl or stc pop add jnp mov xor and pop push cmp hlt call imul lcall inc outsb dec add pop fwait ljmp data16 pop xchg out mov dec das add dec dec mov inc inc or mov sbb jns or test pop daa pop je nop mov arpl adc in sub sub pusha xor adcb add mov push adc push adc repz sarl test movsb mov mov cmp ljmp js jecxz adcl ret icebp inc fldz sub fbld xor inc lahf fistp inc cltd frstor xor push (bad) or popf or js sbb pop imul mov pop dec adc adc push cmp dec adc (bad) bound add mov mov sbb mov add mov mov lret (bad) jo pop fdivl movups xchg ljmp popf daa adcb stos push adc sbb xor push or or js jnp adc shll ret pop lds inc (bad) repz jmp cs lods adc or add and ret pop sbb sbb mov test movsb cmpsb dec aaa sbb in add movsb test movsl testl xchg jo stos cmp pop add inc pushf lock pusha mov cmp sahf add inc outsl test cmp rorb inc outsb ljmp into pop and xchg pop es add jge fisub mov int cwtl pop je rcrb dec sbb lods aaa pop push adc and test xlat push movsb int xor mov in jae ja stc push inc (bad) mov jge mov aaa push jns pop cmp mov addl dec sub pusha enter test push jnp mov fdivrp mov mov adc push xchg or inc xchg adc mov adc adc jle lcall lods add clc cmp sub sub fsub outsl aad out mov xchg imul xor cwtl cmp cmp fwait sbbb add or loopne int3 jb ret insl mov and add pop loope mov dec mov pushw adc cmp pop adcl jne in add or jne dec addr16 or jecxz lock xchg scas add insb push sbbl je adc outsb pop or mov rclb aam mov push push pop and add mov ret rolb (bad) popf add jns push inc incb add leave xchg cwtl bnd (bad) jle mov xor adc jne pop shrb call ds or mov or or adc std pushf xchg jns add ss mov and push cmc adc (bad) pop cmp xlat lcall js add xchg cmp add lock cld or mov push sarl mov aad mov aam xchg ss pop aaa dec sahf mov in add fildl inc arpl and cmp or dec divl push imul fsubrl push push mov shlb and or xchg out xorb rcll dec or and lahf fldenv or outsb addr16 xor ss push add xor test aad mov mov push jne dec dec inc cmp jae mov xor dec mov mov pusha add rcrl pop mov out adc jne adc xchg or jp pop rolb dec inc sub in lea dec aaa test imul push in push push push and sub and cmc rcr jmp test and fldcw or lret add cmp inc lea sub sub push or mov or pop jle mov mov inc mov sbb sub sahf cmpsl movsl xor iret addb add pop dec mov loope xchg out cltd sahf mov adc push push xor inc outsb lea mov into xor add push sti xor clc mov or jae or xchg jno jge out hlt mov push mov lea add dec das insb test scas mov inc lret dec test out leave jecxz push jg das add mov and add loopne sbb sub test or adc jmp lret repz cli adc mov aaa shll xor xor jg cmpsb push pop xchg (bad) insl test or or cmp or femms dec sbb das jg jb roll out leave mov push pop jp test adc push and or cltd mov pop push cmpsb (bad) scas into fisttpl add es scas inc cmp or mov aaa bound and cmp insb jno adc xor pop mov fildll es mov inc insb lods movsb pop movsb adc cmp sub pusha lret sbb insl push in and rep inc out std movsb mov adc rorb sbb nop shl pop lds sbb int3 (bad) test imul aad or jb aas dec sbb mov int adc xchg loopne ss hlt es inc inc cmp and dec rep push popf or ljmp jle or rcrl push mov rcll jle pop add aas cltd cmpps loop adc inc cmp sub mov mov jnp daa and cmp jmp movsb push xchg pushf mov mov popa adc or andl popf add repz sbb and sbb pop adc xor rcrb loope std sti sbb nop bound xchg xchg push faddp nop fstpl jnp and lahf xchg pushf add mov inc loop enter out mov cwtl (bad) jmp and inc dec lret in pop insl jmp lret add xlat scas add and out xchg addb jge,pt cmp push das jo fcomps dec sub add add movsb cmp inc loopne loop mov mov xchg jns ret test inc (bad) jae lods mov and popa movsb popw or pop sbb cmp aam sarb inc rorl fisub or (bad) adc inc mov sbb and add xchg pop push stos sub enter cmpsb add nop push or jne jmp sahf daa push mov out push mov insb sub or adc fisubrl movsl and (bad) and inc pushl push test push xchg mov xchg insb les lahf lea push pusha adc mov sub icebp outsl andb and add repnz test imul int3 mov lods gs (bad) or xchg xchg insl icebp pushf cmp push cmp mov (bad) ss inc and sbb punpcklwd mov jb rcrb or shll das lcall jo loopne ljmp stc mov or ret xchg mov inc mov mov daa sbb cmpsl xbegin push cmp and movsb sbb sub add xlat xchg (bad) sub dec add lret bound xor sub or push cmp mov add cli leave test shll sub xchg mov and rolb and js cmp inc adc test les das movsl cmp jno jne add jl hlt mov rcrb dec add sbb adc add mov add mov mov je jb inc mov aad xchg das mov imul lds and lret (bad) (bad) dec jbe sbb and push sub and or inc data16 mov xor pop divb (bad) mov xor adc pop out inc xor in inc xor xorb inc mov pop or dec ret lds rol sarb add ret pop xchg adc xchg dec and pusha add jp sub or push push (bad) loopne xlat out xchg add or js push (bad) mov adc ret mov aaa andb mov jl xor das dec jle pusha mov xchg lahf or dec sbb mov push sti subb fidivrl mov adc movsb xor cltd jecxz mov loopne sub or sbb pop jae (bad) cmc push outsl sub loopne jmp rcr jns xor pop in dec leave loope inc movsb insb or xchg das sub add sub ret mov pop mov sbb push ret ret adc cmp and add pop jne xor push mov mov in int fstpl (bad) mov push sbb pop bound or insl jg add mov (bad) rolb and add mov cmp std mov sbb sti add les mov divl mov or pop mov pop adc (bad) clc dec xchg (bad) jo mov or pop inc cmp leave inc movsb sub add idivl sbb or fs or inc adc pop fsubl pop aam sub out push cmp ret sub push mov or fstl jb dec jnp dec ret pop cmp or mov push jo mov jp cmp testl mov mov cli jecxz or xchg jmp and mov (bad) sbb addb jnp int3 jbe push popl bound into imull or mov mov xor sub leave sub cmp jnp mov sub loopne pop (bad) xor xor sbb imul jbe loopne es mov in loop xchg mov cmpsl pop aad xor lar jnp mov push sbb cltd jno (bad) sub adc xchg mov scas nop mov out add sbbl sub sbb jp inc loop adc mov xchg add dec ss (bad) out add sub enter mov fs add push hlt mov in push ret data16 and movsl xchg lds (bad) and sub push jae dec sbb iret je insb cli inc rcl repnz sahf push in add adc inc shll sub push xchg mov sbb in js repnz adc add dec nop (bad) loope das jnp and scas cmp fidivrl (bad) cmp sub or mov xchg adc or inc adc inc loop negl out aad frndint jo lea jbe add das aas sub rcrl dec popf add add and and or pop cmc push repnz pop push dec mov ja xchg pop adc push (bad) pop ret fldt xor arpl mov pop pop jl cmp jnp xchg mov test sub jo pop mov inc xor pop pop (bad) hlt clc jno lock inc dec mov adc mov mulb into insb mov (bad) hlt adc jbe dec hlt sub dec clc jne mov jb incl and or inc scas rol or scas fdivs or mov cmp pop sbb rcrb rcrb lods adc cmc mov jmp stc xor xor xchg or or add adc mov sbb popf jp es add test dec pop xorb (bad) jg mov mov rcl out loop test push sub add lods loopne fcmovnbe and xor ja and push imul and (bad) xchg fbld jmp and in lea int3 jb add xchg enter cwtl dec js inc shrb scas or sub es out testb out dec popf dec movsl xchg mov fnstcw cltd sahf dec inc push and outsl hlt cli rorb aam insb lret in push into add je jle loope add aam pusha call repz or push mov out and mov arpl or js xor add aad sub dec fisttpl leave pusha shrb lcall push enter jnp adc xchg cmp add hlt lods sbb jge pop stos sahf pop xchg add jl stc popa jo xor xchg push jno pop sbb ftst or dec out shll adc clc and add out adc fisubl (bad) aas push push lock into leave repnz (bad) xor mov (bad) jbe dec in add or (bad) xor mov mov jns pusha push inc ss lods dec and sub cmpsl insb test repz cmp or jle les imul js sub push sub adc ret icebp pop nop xchg mov xor add cmovl out mov rolb cmp and rcrb cs lret shrl xlat stc add add pop jb repz aas mov add cld in std pusha dec xchg mov inc ja in sbb rclb outsl das in push je pop sbb das xchg push inc repz mov mulb cmp adc push jnp push mov add xor sub mov cld add out (bad) fildll jecxz in loopne xor outsb mov dec dec fstpl nop xchg neg and and enter scas inc pop mov data16 stos or add xor (bad) icebp sub sbb gs pop jb dec xor mov push pushf repnz or push pop rclb jo popa add push inc cmc mov and dec rcl xor push loopne xor lds add loope test lock sbb push jns inc icebp inc mov fstpl sbb push iret outsl add cmpb and dec prefetch js loop aam push les mov data16 leave je add add addr16 sub ja jns sub (bad) call xchg dec cwtl mov popa jmp add rorb xchg fdivs aas sbb fdivl cmp in cmp mov and dec jge (bad) rep adc fwait and jb std icebp xor and add dec and int3 movsl add or xor roll fs mov ret mov (bad) aam insb clc into pop cmp dec movsl jmp (bad) sub aam inc adc mov pushf sub adc xlat dec jp aaa daa fisubl minpd pop adc sub add mov or clc cmp fnclex lods jl xchg xchg andb ss xchg mov aas xchg test int3 rclb adc rcll lret xchg repz add dec mov insl popa sub cmp dec push xchg xchg mov ret push sbb ds js mov inc movsb sub andl mov movsb pop push cwtl mov ljmp pop daa inc xor insb jb add sti imul fldcw adc cmc cltd enter icebp and inc adc inc mov add cmp lret out xor (bad) and cmpsl xor xchg sti repnz ret adc xorb mov or xchg cmp dec add (bad) pop sub scas in add inc fsubs or fildl ret and sbb stos cmpl shrb repz es addl test (bad) lret (bad) cld adc (bad) sub add in mov rcl add mov flds loope mov dec xchg sub lea sbb flds cmp enter bound ficom popa xchg lret js dec or sarl push add jne pop in pop sub mov xchg insl lea or (bad) scas jmp ret enter sbb pop jp faddl push outsb in test inc les scas mov das xor dec push adc adc sar and jmp cld and dec push pop test popa int adc push sbb and sub jmp adc clc mov pushaw push sahf add mov sarb mov mov (bad) ficomp repz adc lret xchg add add inc test cmc push mov sub int pop mov mov adcl arpl mov or loopne inc aaa push addl sbb cmpsb imul test adc and add outsl sub rcrl clc pop and dec pop adc inc sub dec jle push mov arpl jns fdiv in sbb dec add ror sar dec dec adc add mov mov sbb addr16 sub adc push into or jns mov sbb dec (bad) scas jbe mov mov push bound pop dec jne xlat add jae add loop push cs cmp dec ret inc movsb fmull mov movsl add mov pusha or cmp dec fnsave cld and adc pop lds cmpsl nop or add es xlat inc mov daa pop movsb or shrl xlat or lds pop rcll jl clc out jmp dec or xlat sti fidiv add cmp add mov mov mov aas out imul sub add imul and out and sub cmpl sub scas js mov mov and ret imul cltd rolb cli mov scas (bad) data16 xor aas sub cmp rolb mov pop add stc jle xor iret xchg pushf data16 add push cld aad movsb outsb cwtl pusha jns scas cmpsb jg xor push es pop testl mov pop push (bad) jge dec sbb les dec dec sbb adc mov imul or adc lret mov sbb bound (bad) icebp push movsb (bad) repz add or mov movsb out add dec push or inc jbe lds out arpl icebp outsl inc push fildl jmp roll pop adc rcl mov in movsl and add adc ds test sub dec test jle push sub in mov pushl and sub mov cmp sti or (bad) adc or add cmc cmp outsb arpl or jbe loope push adc sub and pop sbb xchg cmp jo out adc mov xchg lcall and ja xlat xchg imul push rolb inc test test mov in test and inc cmpsb pusha inc xor js insb les out add adc jne inc cmpsl xchg into in andb pop (bad) pop cld sahf movsb int popa aam stc mov jns stos add sbb cli push push lahf dec jns adcl inc mov dec inc fwait jnp pushf jl jne data16 sub add lock add shl movsl rorb add xor xchg dec mov decb pop mov out add lods add orb out int adc mov cwtl mov cmpsl pop adc (bad) pop shrb pop dec or jo das daa es push rcrb pusha nop add (bad) and shlb sbbb inc inc lods cmp dec adc daa lods or mov adc and cli or jnp xor adc rorl pop cmp lret jbe jo cmp and push (bad) adc jae or mov xlat repz push xchg push jno sbb leave cmp jne cmp xor xchg testl andl ror icebp and add xchg xchg test mov inc add pop rorb inc add fsubrs inc testl pop sarb cpuid push sub adc xchg aam jns mov in and clc mov dec add arpl stos push getsec mov scas call addr16 in fildl and lods pop jo dec lods enter imul cmpsl (bad) aaa addb add incb jb cld cltd xor sbb inc or (bad) push lret fmul inc pusha pop inc jge cmp lcall jle xchg das add pop mov sahf jo xchg in movsl cmp sbb push xor fnstcw pushf movsb adc add fistl mov add and mov cli data16 arpl pop xchg out loop aas insb xor fucom lcall mov ljmp and xor rclb add sub lds (bad) mov pop pop add cmc lret add and cmp das cmp out adc ds adc in xchg arpl add xchg or call fildll mov inc push les repz sub or sbb sbb rep lods daa jno cmpsl out (bad) or mov bnd dec fisubl mov sahf and sub xchg jnp bound cmp repnz mov insl adc mov divl dec or imul pop mov pop repz iret lock (bad) in add xchg add mov inc dec jmp add push xor inc or adc xchg shrb xor add add sbb dec sub dec mov arpl leave clc testl mov mov add out in gs dec outsl fsub push xchg add jp inc mov xor cli sub pop jmp mov data16 cmpsl and lds ficomp and push dec fnstsw in jp mov add jl enter mov inc add and repnz call pop in adc out xor (bad) jge mov cmpsl mov mov leave push lret sbb fcompl mov imul inc int ljmp je fmuls and adc push mov pop inc mov je inc ret fcompl mov xchg arpl cmp inc xchg addr16 (bad) sbb xlat xchg mov and jno es jbe mov int3 call ror dec mov or shrl daa jne sub lret push outsb fstpl ret test cmc cmp and cmpsb insl and add not mov popa nop in frstor (bad) xor clc inc add das movsb mov xor push or les inc mov daa fdivrl cwtl pop jbe andb cltd mov inc or fabs outsb cwtl xor sbb es dec inc mov jg (bad) xor aam das fcompl and xchg mov push outsl ret mov fild pop ljmp inc leave dec idivl inc xchg and sbb outsl pop cmp es cmp idivb add in mov lret ror and mov out lods sub jg add cmpsb jg xor nop sub call insb add test jae in icebp xchg and (bad) jo mov dec mov in xchg cmp daa (bad) in add and movsl inc je sub adc or adc jb scas xor push outsl dec enter add push push adc movsb roll jbe xlat pop mov sbb rcll add test mov or in push fsubs jmp pop insl movsl push pop ss push sbb add loope mov dec das pop and les movsl daa inc xor (bad) fs cmc movsb push and mov les inc int3 jne (bad) pop xor pop xor mov mov daa push (bad) dec add adcl test mov pop push dec (bad) jbe nop data16 xor arpl sub imul mulb fs cmp add mov add inc sbb cmp mov push lcall pusha pop mov push cmp ret icebp jnp pop lea hlt adc inc lahf lock jo aam cmp scas ljmp icebp lock mov daa inc aas dec or adc lahf dec mov xchg mov xchg add cwtl jecxz or inc push pop testl lahf aad mov pop mov adc sbb mov add adc pop sub add xchg (bad) pop jns in add (bad) in jae inc ror and add inc jns xor in aad jo stos sbb adc fadd movsb push dec rcrb or popa add mov int mov in pop push stos jae mov adc inc (bad) cltd jns lock pop adc aaa push xor call jno fisttpl mov aas mov adc sub dec xchg pop adc cwtl mov pop (bad) int inc mull movsb test clc outsl nop (bad) fstps stc dec xchg adc data16 loop inc jp addr16 pop jecxz mov sbb incb inc or stc pop outsl jne jo pusha add popf sahf testl add xchg dec sbb outsl xchg push adc testb (bad) mov ret lea mov mov out xor mov inc adc lret movsl jle out mov je test movsb adc mov add icebp outsl push aaa xchg xor jo out cwtl arpl push jmp stos xchg call fisub addl pop sub in and sbb addb jle add mov mov pusha push js push mov xor pop and ret jge pop (bad) sub add or nop aas add fidivl sub outsl sbb jns and lock push or push dec into sbb js mov int fisub or pusha mov jnp sub dec js pop inc repz inc or cmc and test push fidivrl push mov pop and add or push and aas repnz subb adc xor pop mov rorb and add data16 outsl roll inc pop leave jne push inc push cld stc sub outsb mov cs daa mov loop test xchg fimull cmp mov inc addr16 and xchg xchg jo pushf shr adc repz push in mov lock inc aam and daa sub aaa and movsb push or fnop adc pop cli popa (bad) std or inc jb add cmp cmp popf mov adcb and mov rol push adc hlt mov repnz inc int3 inc or dec pushf push add push loop xchg (bad) hlt stc jle push orl (bad) cli pusha negl push mov xor loop inc rclb lea inc stos push dec flds cmp pop lods imul (bad) xor xor inc pop and scas (bad) pop xchg xor lahf movsb andl jo or xorl pop add mov fisubr jecxz lock mov push (bad) jne pushf (bad) sbb mov (bad) cmp push sbbl lock ss ljmp mov cmp inc in cmp jmp xor lods add push stos insl adc cmpsl les xchg push xor bound cmp mov adc lods add push sbb in scas sub push popf mov cmp test ret movsb sbb sub enter leave sbbl pop incb popa push add (bad) pusha adc inc sub mov push pop popa sub add ja adc repnz sbb (bad) cwtl push in lock jmp (bad) stc mul cmp jecxz jle push jne push (bad) imul popa add push and pop cld fiadd push mov mov xchg pop adc and and dec cmp imul jns dec add xchg cmp sar mov xor add dec (bad) push sbb leave sub out or subl repnz lahf xor pop xorb inc test add rcll add or jmp jl inc xlat push cli pushl mov cwtl pop fwait movb insb pop rorb cmpsl xchg or push fcomps in add inc out xchg sti das jne sbb and or push mov adc xor push jae add pop imul popa push clc push and call and push pop xorl (bad) push rcrb jno in stc mov mov pop push lcall sbb jnp mov xor dec pop push mov shlb stc imul jae and or sub call ljmp scas jnp or lods cs test aaa lds adc inc push stos or (bad) call or push adc (bad) push (bad) cmc cmp adc xor ss pop cld pop pusha mov jbe leave and add (bad) mov jle loopne ficomp pushf sbb adc inc shll xchg rcrl mov cmp aam psraw mov enter lock std cmp movsb dec inc mov pop push bound imul add mov add push sahf test fidivl cs dec es inc adc pop into push rcr (bad) in dec rcrl cltd movsl test jp cs ja or add jnp push out push xchg fmuls mov es mov push hlt or pop movsl sub xor jmp sub lods in imul loopne or pusha fimull jnp and add bnd push sbb push and inc push sub lcall lcall cltd jg dec xorb adcb sbb or jnp xchg movb mov and insl push jbe inc mov inc xor xchg dec iret jns add pop pop xor push cs fcoml sub cmpsb and pop jns sub imul hlt inc aas pop aaa mov push push xchg dec or fmull hlt jmp cmp mov test fidivrl push push cmpsl add (bad) imul pop sbb inc andb mov jle testb sbb mov pop pop jnp inc in andb outsl enter ds jecxz or orb sbb test movsb xchg xor in cmp mov icebp xor push add xor addr16 in push pop cli rorl cld dec xchg inc or mov sbb (bad) inc aas push test add add and (bad) repnz in sar add sub cltd push push adc pop scas jne cli sub push sub mov (bad) jne and xchg mov and cmp cmp sbb stos mov gs test imul push int jle inc lea incl xlat xchg mov inc mov dec add es movsb xchg cmp and lods mov mov mov inc test mov icebp mov push pop popa push or ret dec int mov movb or push mov pushw jne add loopne out ljmp pop cmp add xchg ds mov push bound sbb (bad) outsb inc lods add inc scas sub and mov pop lcall lock push pusha xchg adc ja jnp nop adc add mov pmuludq xchg xchg pop add add subb add mov push shr das loop push sbb xchg dec adc xchg gs mov and jno pop das (bad) jle mov and sub mov adc add mov jnp sbb test cli scas xor xchg add push add movsb sub je pushf adc sub add or mov add in adc jl xlat sub xchg mov push fistp bound sbb and mov pop popf jg les daa pop cmpsl jle call scas inc enter xchg sbb sub scas pop test cmp pushf lret out shld mov jmp or cmpb xor ret cmp out subl leave add mov pop jbe inc bound (bad) mulb jnp xorl adc aad popa mov shlb jo pop dec rolb push int3 adc jecxz mov jmp cmpl mov fmull xchg add popa popa dec xchg clc jo adc cmpb add pushf push rolb shrb push add xchg mov cmp sub in insb in movsb xor scas pop mov mov daa add jb inc xchg jb add push sbb cmp add adc mov sbb mov dec jecxz lods pop push and andl data16 xor inc and outsb xor inc pop fsts les mov ret push pop or sbb jmp add jbe stc add jmp cmp jp push test ret imul mov xchg out jl pop (bad) adc mov popf add push addr16 inc pusha scas pop sub inc xor add fstps sub add cld iret adc jno inc daa shll inc sub les loop xor jecxz in add or daa mov cmc iret cmpsl or xor dec daa fimull clc out aaa rcll add dec mov out add sahf cwtl mov and leave dec dec pop dec ljmp insb out roll lahf sarl pusha add and jo add inc mov scas cmpsl aaa cmp js inc enter (bad) out idivb movsb push fcompl inc pop pop pop push movsl outsl sub outsl sbb lcall dec or popl ret pop push inc sbb xchg sub mov add mov mov addl aad mov sbb or in sub pop (bad) popa js ss (bad) mov mov sub pop sbb insb les mov sbb xor and push xchg (bad) add xchg xlat mov xchg fdivr inc dec sub xorb jl jp lds pop jmp jl aas ret and orb sub push jle or and xchg aad cmp out leave cli popa sbb inc and push cmp rorl add push jp rcrb sub or dec pop add hlt lock pop mov mov fcmovb mov xchg pusha lods inc and mov pop aaa sub cltd push (bad) ss push inc out std repz aad movb or or rolb sti xchg cs clc fdivl or inc hlt jp cmp xchg push pushf les mov in out ret add cld fistpl dec ja adc adc pop (bad) push (bad) out popa pop mov inc pop sbb pop stos aam cmp fs adc das daa adc sbb inc pop mov ds adc pop (bad) fldl or adc add loopne push mov loopne add jmp testb fistp push or ss pop add pop movsl xlat inc pop pop pusha pusha sbb jnp fisttpl addr16 dec adc rcr rol cmp mov out push add nop mov jbe inc pop loop (bad) imul in aas sub sub or and ret fs subb sti add cmp in sub or (bad) je xor jne jge cmc mov pop repz dec push mov mov repnz adc mov test fisubr jno pop jbe scas into pusha es popa (bad) push adc jmp jnp popf push pop popa push ja icebp mov pushf jg leave adc bnd pop mov push adcl addl push xor xor fldt test std and push mov das mov sbb dec sbb xorl mov divl repnz push ss outsl (bad) push cmpsl pop rol push mov or mov int or adcb popa mov in dec mov outsb hlt insb loop (bad) or jle rclb jno in cmp bnd xchg or shrl fmull hlt pop mov fsubrl push push sub outsl test in push xchg test ds push int ljmp pop out arpl pop cld xchg jle xchg sub or movsb (bad) aaa jae fs push call popa (bad) jp dec test addl or pop into push mov dec or and dec jnp or rcrl and aas dec cld jg popf ja (bad) add cltd idivl push jg sub (bad) sbb jne incb sub push lea inc repnz cmc xorb jge sub dec ret outsl imul pushl dec loop stc movd aad out cmp xchg push aad rolb mov lcall pop out cmp pop lret aaa pop pop mov jge aaa leave fisttp mov test adc loop lock cmp mov and inc popa imul testb ret popa sub push mov dec dec jnp dec or lahf andnps add add or push pusha jb jl mov jl imul dec fnstcw mov or out mulb cmp test mov jnp flds rcrl dec push addl (bad) lock push sub or push xor or inc bound xor mov pop out dec outsl mov or in pop and sub je fsubrs push pop ljmp xchg out ds adc imul std out push mov xor lcall shl and jnp addl loop scas cmp into pop mov mov sub push pop cmp jae push mov xacquire push out cltd adc jns or int dec mov adc xor in fxch pushf add (bad) nop decb push daa sti xor aad or push mov xchg test cmp mov mov adc pop (bad) punpckldq and frstor add cmp xlat stos mov pop clc sbb mov sub pop (bad) mov push inc pop pop test mov jo mov mov decb pop push push mov stos out sub adc xchg dec popf dec or mov xchg push sub mov push les dec cmc cmpb adc lods arpl inc mov cmovnp sahf and pop inc and inc add jnp adc in gs sar jnp push mov leave cs fldcw lea (bad) repz mov adcl ja fisttp lods mov js mov add lock out jle or insb iret jns and in jae add lahf jg adcl ret dec test lret adc rorl push lods loope add iret jne push pusha push jl add pop (bad) xor mov nop adc je and sbb fildll nop les or jecxz pop repz dec or mov pop sub jmp jmp lret push push sbbl bound add xchg inc adc inc das out popa mov xchg xor mov cmp mov xchg xchg adc push mov lds (bad) je lds add adc dec out lret mov addl pop repnz (bad) in fimul jg adc outsb in and outsl ja add push push outsl movsb pop outsb mov push sub xor out push shr ds mov push jne aam sub pop jle outsl mov lods mov cltd stc dec dec pop call das scas cmp inc scas mov in movsl jmp js ret movsl fs mov lret inc push pushf pop jge pusha sahf jle add fmull or xor nop jl mov add in dec popa daa cmp out (bad) stc add addl ds xor push push pusha dec ljmp pop aas mov or sahf int3 out (bad) mov and sbb jno,pt dec inc or loopne enter cmpl imul ds fcompl cmp jmp rorl push in negb inc clc lods jbe push xchg stc jb gs and lcall mov mov sbb imul push mov rorl enter sub (bad) enter pop and (bad) cmpsb or pop lret jns call cmp sub mov xor sub pop cld (bad) push jecxz fcoms imul cmp mov push (bad) sbb pop stc cmp push push int ret stc int3 arpl jmp fistp or mov push xchg cmc sahf fnstenv and jg push pop (bad) jbe add push daa gs add dec pop mov jmp test mov push sub adc mov loope push adc jno mov push scas sarb inc cltd lret push int3 int3 jmp out (bad) pushf push and adc (bad) jnp js mov lcall xchg in ja xchg jnp add or aad push xchg xchg out mov jge fildl call or test jno cmpsb sahf daa xchg rclb xchg addr16 (bad) adc and xchg push aas pop sub sbb or pop add lds or call xor mov xchg iret dec pop or sti add pop outsl insl mov lahf ja jmp (bad) pusha xor clc into int gs xchg or inc test mov xchg add insl scas mov pop push cmpsl sub pop cwtl jne inc dec shr lea ljmp push mov xchg jg jo pop outsl mov (bad) ja loope (bad) out sub aas mov rcrl hlt outsl movsl jge int ror stos mov adc xor stos mov or lods mov or xlat xchg mov xchg jmp popf pop popf movsl das pop push (bad) icebp sub es ljmp orl ret mov xchg sub or inc (bad) popa sbb inc sahf push fidiv and pusha rclb incl push (bad) hlt cmp dec and notb int ret jmp out xor add in aaa push jnp mov push mov jnp movl inc aaa add jo aas sahf sub dec movsl push xor and dec inc jecxz xor push dec xor insb incl loopne (bad) or xor lahf dec imul mov mov jmp mov inc sbb movsl imull lods lods jae ljmp mov pop dec inc jns or jmp add sbb gs pop add jno xchg enter (bad) sahf lret call mov aaa cwtl add adc lcall push add pusha xor push mov movsl xor mov negl movsl push pushf out out add jmp (bad) mov movsl push frstor scas sub push nop xchg jnp stos dec sub stos lret divb test mov pop cmp shll pop cmpsl add addr16 jmp lods iret add test (bad) pop lock (bad) mov lcall push jle jb xchg inc fsubrs in es out das pop xchg outsb mov xchg and push lcall add aam xchg sub jl mov fidivl and aas stos xlat js pop cmc sub push in (bad) or fimull (bad) xor imul lcall incb cmpb push pop (bad) repnz (bad) aas neg push pop sub xor add arpl dec pop scas cmpb xor jl add mov in call (bad) pop and push sub jp in lods lea mov std pop incl dec inc cmp push fwait stc aas test pop add out leave or jne lcall stos xor inc push mov ret sub mov sub or or jl jp fwait mov sub add jl lock jbe inc pushf push dec push aaa out daa mov inc fs mov jl mov cmp push pop push xchg cltd lea shl push pushl shll inc cld sbb jns jg daa or mov jb mov gs mov pusha test inc jge pop sub mov jns addr16 cmp jnp cltd mov add nop aas or dec cmpsl scas int cmp lea add jmp out fdivs mov and xchg jge cld and aam jmp loop dec into inc dec or mov push clc loop add call decl imul pop cmp xchg dec cmp cmpsb fstp les test mov sub jp inc dec cmc in (bad) mov pop and inc cs call pop sbb and je les and inc mov rclb jmp sahf cmp notb mov shrl push push (bad) mov mov mov sbb andb sbb call loopne add push sub mov mov movsl (bad) jmp adc ret lret push fcmovb and rol js dec test push pushf mov jae cmp inc call outsl mov mov inc mov sub xchg mov cmp mov inc pop (bad) mov icebp xor adc xor xor or mov les in (bad) mov sub rcl rclb xchg mov imul imul dec jno (bad) and add xchg repnz std jmp sarl xor push ds adc or pop insb fsubl aas push pop pusha sti rcrb gs sti das adc jb add in bnd pop les push ss shr pushf push sub lds rolb dec movsb int movsb fisub pop pusha gs adc fnsave scas loop xchg xor cmc cmpsl jnp inc dec ja or jno lods adc hlt lahf dec cmp mov enter dec int3 subb push xchg xchg mov jecxz ror rcl xor push stos sub stos dec call dec push lret jmp and sbb icebp xchg sub push pop movsb mov pushf dec rcrb rcrl mov push sarl repz mov jmp push inc xchg jb add sub sub fsub fldl push xchg pop loope inc jge cmpl or mov or push add add lret push mov leave enter je mov shrb lds jnp popf cmpsb cs js pop lahf pop sbb lahf mov adc adc cmp (bad) lcall loope ret jbe adc xchg cmp pop sub add adc cmp xor das push aam rcrb leave adc inc ljmp aam cmpsb std mov mov adcl jno lods xor pop xchg pushf adc (bad) cli xlat (bad) sub loope pop (bad) rcll aam cmpsl pop fcmovb lret (bad) dec xchg (bad) dec pop fnop inc aas or jo sbb faddl pop (bad) push orb test mov les frstor loop mov ljmp or out pusha pop test and cmp jmp cmp leave push mov in adc push xchg xlat adc jae pop rcl pop xor mov and pop sub mov xor je cld data16 pop xlat add loop dec xor push jae daa int scas xchg xchg mov loop ficompl (bad) jmp adc sbb pop and xor xchg or dec (bad) popa push push add xchg sarb pop mov and aam dec inc inc sub rcll sub hlt dec add int3 test xchg aaa cmp icebp jno mov push shlb mov mov cld xor sarb mov cmp pop pop mov sbbl push outsl xchg jns data16 les cmc mov lret shrl dec xor ss xchg iret adc xchg addl jle xchg sbb dec lret stos jmp jge mov je add outsl aad pusha pop cmpsl fmuls mov or je and mov dec ss or (bad) mov mov movsb in ficompl push in dec or mov jmp mov jg pop pop ret call adc out cmp (bad) cmp cmovo les cld sub imul adc dec lahf (bad) mov jp inc dec (bad) fimul xchg and rclb xor pop jno int3 pop adc mov mov aas loope dec outsl add movsl or sbb cmc jle clc fwait inc dec fucomip xor std test in jbe addl adc pop cmp inc hlt or jg aam and cltd sbb fisub jne and cwtl mov or scas jae loope jle adc mov mull adc xlat push add sar lahf cmp and iret inc push mov push lods mov inc test nop pop mov sahf fisub cli pushl xor adc ret pop loop add loopne jo out mov push addb hlt dec adc int3 push addb test ja or addr16 mov loope das fbstp jnp dec or jmp push inc sti or pushl leave push ror inc lret jae jmp adc xchg aam lock push test mov fiaddl (bad) insl das movsl pop mov pop cli pop pushf mov cmpsl add push mov inc (bad) loop push aam add and or sti jns add (bad) mov pop repz mov dec and xorb pop ficomp xor iret gs push mov jge jnp push pop or jne jecxz mov jge dec stc and outsb insb sbb loop xchg push sub popa dec jg add sarb mov lds jne mov mov and cwtl fcoms pop dec rcrl scas dec sbb gs mov stc pop add bound jle ret incl pop jg ret push xor pop les inc aaa cmp movb adc mov or pop repz mov flds inc and sbb ds dec pop (bad) dec mov scas sub pop mov and inc xor mov lret adc ret push pop sbb push pop or addl mov push xchg xor into push xor add jb add push rsm mov in lret xchg mov imul push pop or pop not dec addr16 ds mov push jle mov pop mov ja xchg push orl test push push jmp dec and pop movsl pop nop push arpl (bad) and or cmp xchg push dec xchg notl push push pop mov xchg nop mov inc in jb pop push push mov xor mov push add dec xchg push lret xorl mov jmp and in jmp lds mov (bad) add cwtl inc leave dec jo icebp add sbb pushf cmp lods and add rol or out pop (bad) add sar pop push pop loope inc pushf cmc (bad) fucom scas sbb mov (bad) xchg lock mov pop push push pop adc push decl push push xor jl dec xor dec cmpsb pop imul add xor xchg pop inc loopne mov mull or mov addr16 add lahf int3 push inc hlt add cmpsl push test push push lret mov jle loope test movsl sbb jno dec je je jb outsl mov push fldcw ds outsl add adc in cmp xor outsl or out and jmp add (bad) idivl mov stc sbb jmp mov sti mov cmpsl testb add mov lahf popa sub pop jmp enter jae jg lods add sub push fidiv add pusha mov jecxz stc dec and jmp inc sti dec adc stos xor in mov ja pusha jae sub add sub mov pop fdivs pmullw enter mov fs aaa push movsb inc ret pop pop aas mov out aam ds pop xchg ret adc icebp mov dec inc jmp pop add std out outsl (bad) ljmp mov repz xlat jp shrb adc sbb repz fchs xchg lock add cmp call aad loopne mov cmp test sub (bad) xchg ljmp out neg adc jmp or fbstp test shrl or cmpsl insb lcall repz pop xchg pop lret pop push pop push subl and pop pusha and mov pop in pushf leave leave dec sub add xor push adc inc stos loopne push sarb adc cli jp push xchg or dec or rolb (bad) not jmp leave cmp add std pop repz sbbl sub xor add xchg (bad) push sub data16 jg insb icebp lock rcll daa ret jg icebp sub mov add jb jmp lds loope push daa jmp add lods repnz push int3 add or test cmp adc mov push push xor add adc ja push mov sbb dec xor xor sub add xor aas pop roll add add dec sub pop sarb iret jmp pop dec movsl sarb or in cmp ds leave gs mov cmp xchg jmp and xor fsubs mov cltd mov pusha lahf jbe jno pop mov sub add fcoms fidivr sahf dec inc flds jg xchg sarl dec cmp ja test inc sbb add or lods shll sub dec sbb push xor ljmp inc cmp xor das shrb dec adcl addr16 jb maskmovq and adc rorl pop mov (bad) pushl (bad) loope mov das std jle xor arpl rolb fs (bad) fiaddl or push push jl (bad) lcall rcrl std icebp inc das int sub or adc jae mov lret push inc sti inc ficompl cmpsl icebp adc ret jmp add repnz push xchg mov imul inc sub divl add mov movl js pop mov das popf adc imul addr16 std adc stos mov sub sub xchg aad int not push imul sti fwait pop enter pop cwtl insb and scas mov or divl or cmp mov mov shrl sbb cli jge popa add sub pop mov ficom add fildll les loopne fdivrs adcl call out clc ficomp divb lock pop shl scas hlt (bad) pop mov icebp mov inc dec add xor xchg frstor xchg add jp mov or idivb xchg add ret outsb jmp ds mov sar fwait punpcklwd lret mov fstps ja push mov mov push lret jmp cld mov mov out sub rcrl aaa push push nop sbb aad movsl pop outsl mov pop xor inc pop push orb loopne sub mov out addr16 push pop scas aas sub mov out cmp aas sub cltd or sar (bad) or jns movsb sarl sbbl push lret test mov add pop sub mov mov pop mov test testb imulb cmp or (bad) xor aaa shr inc insb pop lret sub dec out repnz ja stc nop repnz dec in std jnp les dec push mov test dec inc mov sub repnz out sub add xchg fs or inc lds mov scas jg lods popa sbb sub lahf mov cld pop jnp push dec xor and lcall add lods punpckhbw daa pop std adc add jno push pop xchg test adc push pop (bad) jle ret mov sti sub out and push ret xchg dec icebp cmp cs mov inc dec mov mov xchg pop andb cmc adc stos dec stos enter inc mov test icebp sbb cs dec xchg mov mov mov and jae (bad) pop cmc in xchg cld push arpl enter sub inc cmp pop push add shr cwtl mov aas iret fsubl out add inc push cmp or test xlat ja leave (bad) or and cmc mov jbe sub add xchg aaa loop adc or push sub ljmp (bad) hlt stos (bad) jmp cmovg out mov and lret or mov out add add aad xor fistp or repz lahf dec inc mov inc mov and rorb lahf fs fadds jno divl je jg fbld adc sbbl push int push fadds sub pusha or xchg adc xor fwait jle gs mov xor pop orl xor mov adc jp and scas or icebp inc mov std loope jo repnz lods and mov pop jp dec xor (bad) xchg push daa push add push jnp imul std sbb sub addr16 sti pop xor pop xor or rcrb pop int xor push cmp add sub or lods dec jge push fwait popa pop and or cli push or cmp xchg sbb out jle movsl rcl flds lock dec add (bad) or jne in jge and adc mulb add js jmp loope inc jnp add xor xchg dec jmp stc pop pop inc movsb test fsubl sub push inc xchg out xor cs xchg jno or enter push or ret mov mov xchg mov mov cmp sbb fist mov sbb mov ret push pop add push in adc adc fiadd and lock mov roll mov test mov sar and mov (bad) sbb fistp ja stc outsb div int3 xor les mov scas push mov xchg fsubrl sub or fcmovb out jg or cmp adc test mov mov lods test lods rorl scas and ret ret pop outsl add inc or lea cmpsl jns test add sub je scas mov xchg clc push xchg mov addr16 xor jl and jmp (bad) sub adc sub cmp fsqrt jno dec (bad) mov adc pop dec push scas mov fnstcw sub mov stos inc adc rcrl fsubs imul hlt dec push scas push jno push pop popf cmpsl push push cltd sbb adc or loope pop add and mov jae or cmp fisttp xor and add in std jmp mov movl imul push push fist xchg lea mov mov dec pushf cmp adc negb shrb stos push les aas test leave mov push jno (bad) iret mov xlat (bad) lock adc stos mov test and (bad) pop shr sbb cli testb cmc test imul sub sub lahf sub mov mov mov fsubrs pop sub lret xor mov sbb sbb or inc cs add call les in icebp mov and pop lock aam dec mov out adc jae add addl jae sub ficoml (bad) cmp loope cmp mov sub push int testb xor lret push xchg mov push push mov shrl push pop mov pop pop adc sub (bad) repnz sub iret fisttp dec cmc add xchg in je in push mov inc dec inc mov xor jmp aas in je mov cmp sub inc cmpsl add xor ljmp pop sbb clc adc mov inc cmp push push xor inc into jecxz mov pop pusha sbb fidiv add mov cmp fistpll nop imul cmp add sub inc pop jno dec test mov mov cwtl cmpsl aas popa fistl pop js mov mov pop imul push int inc sub ljmp add enter lahf cmpsb mov (bad) xor sbbl or inc sbb jbe int lods inc clc mov call jmp loope dec and add das mov add jb jecxz xchg cmp jmp (bad) out and popa add mov inc movsb mov pop jp or jl inc repnz push lds or push andb cwtl aaa inc sahf ja add inc subb mov jle aad jmp bound inc mov xchg add xor sbb jno out or jb lahf add cmpb fildl into add adc sbb xchg in mov adc in mov add mov jo add mov imul outsl iret subb faddl xor inc jecxz inc clc push add jge push stc ljmp pop mov mov mov das xchg sbb xor sub push inc mov inc dec xchg xchg add dec dec call repnz push add out mov lock repz out inc fsubrp ds loopne test fucomi aaa push ret sub mov push push imul mov test jl push mov jbe in jl jl add inc adc jecxz adc call jp clc in add clc inc xor clc sub cmp or xorl cmp enter mov sbb dec fidiv mov (bad) lock cmpsl orl or aas stc pop fdivr push fstl jae xor mov push dec jbe and shrb adc add jo cmpsl inc add add lret cmp (bad) cltd test jmp notl mov adc lock popf pop (bad) mov out (bad) sahf xchg add cmp add push int clc orl cmp mov stc inc rcll fs or or mov popl test ret xchg mov pand test mov add cld push int3 cld add js or inc pop cmp jmp aad mov decl mov fimull mov in nop roll jo addr16 sarl fidivr fiaddl jp xchg add lahf mov mov cld daa jno out sub into jmp sbb pop mov lahf dec popa loopne and test leave movsl and add xchg add add movsb mov xchg push and test (bad) sti xchg or add xchg imul pushf call loope jno sbb popa and push sbb andb sarl lret sbb pop jmp sbb jbe pop sub adc cmp inc xchg pop mov jo sbb aas mov add insb jnp jmp pop jns add std cmpsl jo in iret add push fstl mov or aam xorb xchg add dec test lock mov imul mov xor push jns adc in movl dec out popa fmuls mov test and mov sub add cmpsl mov adc orb sub cmp decl add in pop mov xchg vmread imull and pusha je insb add push subl xor orl lea ficoml mov mov imul mov aam roll addl add jbe es add inc cli mov sub pushf jne add adc jae test cmpsl pop cmp mov sbb sarb mov lock cmp pop xor push add mov jl incb cmp cmp jg psrad loopne ja mov jg add add clc popa mov or xchg mov push add rcrl jae jae enter sahf fwait sub scas ss sbb adc mov les xor xchg fwait add cmpsl pop push popa iret out pop pop xchg fdivs and fimull test je cli ror jb mov jae adc inc add lods test pop pusha jge mov add jbe outsl xor dec inc call pusha adc mov sub add minps sbb jne pop sub mov andl mov mov cli xorl or inc and jp jnp pop add and add mov lahf cmc mov lret ret dec cmp shrb xchg inc xor jne ja in sbb pop clc mov sahf sbb orl test jo divl mov cmp mov in cmc clc loopne decl sbb mov mov imul fisub jnp add and sub cwtl xor roll lea cwtl fstl cmp int3 sub cmp leave inc andb push sahf lcall add ficoml mov mov dec jae ss cmp lcall aam daa stos jne jmp repz jo cmpsl pop and or adc mov insb js push push inc pop aaa dec pop and movsl loopne (bad) aam inc test add push xchg cmp inc cld nop mov in aad add icebp call mov xchg insb fimul into pop pusha insb idivl add xor or popf in jmp in call daa inc or or xchg lahf bound daa push push mov pushf adc ficomp enter scas inc mov mov dec and shlb push fwait xor mov cmp mov pop pop mov add xor inc push nop adc xor int3 sahf cltd and cld pop mov mov pop dec mov lds add add daa push loopne enter jne or insb add leave cmpsl call test movsb mov mov imul sbb add lret add lcall (bad) into inc js jbe adc fistp pop dec cld cmpsb outsl int3 and adc and faddl gs jbe mov mov cmp pusha fcmovnbe leave int3 (bad) jbe movsl jl dec inc mov jbe push psubb ret out dec dec cmp mov mov cmp adc rolb add daa pop push dec and dec rolb lret mov inc aam cmp cmpsl rcrb xchg push jg pop xchg ret movsl jle scas rcll xchg sbb and (bad) sub cwtl or inc ja jge fisub add push daa inc and popf rcl sarl lea mov nop pop divb push inc js lock push add into jbe test ljmp nop jl push xchg or jbe int3 mov jl lock mov sbb shrb test xchg fdivr addb sbb icebp mov test (bad) hlt testl mov jb (bad) in jbe mov out sub (bad) xor mov push inc es out (bad) xor jb call xchg xor js and pop (bad) call test addr16 dec adc sub xchg fisub sub je xchg add sub mov loope popf pusha xchg fistp push jbe addl (bad) mov or add ret jmp inc (bad) test pop lds or and fs add inc icebp and cmp inc or add mov add sub mov mov and and mov clc jne insl call js pusha enter mov mov push and pushl xchg (bad) xchg mov jmp cmp xchg sub and add aaa andl jg pushl xchg add mov mov jg add mov jmp mov jno inc (bad) and add (bad) or jle les cltd xchg add xor sub pop or xor cwtl mov pusha in fisubr outsb push pop xor jo mov pushl pop mov mov daa xchg push imul fwait and and pusha nop insb iret xchg hlt push aam cmpb push push pop repnz enter xor shrl mov and lret popl je hlt sub (bad) call (bad) cltd pop je xchg fnstsw insb push and push aas call (bad) dec movsb sbb jbe push adc out movl jp cmpsl cmp mov mov pusha xor inc popa xchg sub add jno and ret pop outsb dec fcoms cld pop insl mov mov faddl inc les xor xor mov push and pop jns push nop inc mov cmp int3 andb jl pop cmpsb add (bad) pushf shlb sbbb mov add fisubrl test xor loopne inc ret inc (bad) fildl push mov jmp mov xchg enter dec or scas movsb xor push out (bad) jmp and js push ret cwtl fdivl pop scas jmp add mov pop adc fimull and mov xchg push dec add das (bad) int add cltd sbb and movsb add hlt xor (bad) dec add xchg and jne add mov sbb aas inc add pop ficoml xor loopne cmp jno nop sbb xor cmc fisttpll fidivl (bad) or jecxz ds fild jns mov inc test cmc pop bound ljmp jmp int3 into cmp mov adc add mov into shrb mov cmp scas jb add push cmp test push cmp xor add sub add inc sbb push loopne mov sbb fiadd xchg mov loopne mov (bad) jecxz cmp jl inc inc adc sub in mov call push ror push test dec cwtl ljmp inc adc ret add mov sarb mov les mov jmp mov rclb adc add inc mov jno or ret sbb cmp sub pop adc and (bad) push or mov xchg xor (bad) jle jb push adc lock jnp add lea or jecxz inc sbb add xor lods or mov push fs or in verw loope add sbb cmp cmp mov call imul mov sbb dec call mov fcoms dec das cmp and push in into jne icebp add in pop pop xor sub int loopne mov inc aam mov jbe pop rclb fistpl addr16 sarb in rolb aam xchg sbb jge,pn push repz lock cmc jecxz leave and lcall jmp in push mov js cld adc test mov xchg insb add mov mov (bad) jbe and aaa pop in adc ret enter and jg jecxz pop mov fwait popl push (bad) dec inc mov add daa pop imul mov add jo add push mov mov xor mov mov lcall push jne (bad) popf dec pop push jge push loopne push movsl push data16 faddl lcall aam xorb pop testb ret lahf or cmp push es cwtl js mov stc or or (bad) jecxz (bad) js or into lds stc push mov add xor mov or add lret dec cwtl sub out es sbb dec push sub ds cmc insb lock sahf sti mov outsl mov add outsl cmp nop fdivl mov push push hlt inc or inc sbb add (bad) data16 jmp adc cmp cwtl test mov mov inc (bad) cmp mov je pop mov mov (bad) sbb pop fdivs dec pusha fimul shl cmp ret pop add mov bound into not or and add xlat (bad) lock push push ss add ljmp jb clc add pop or inc mov mov jge repnz jecxz lret sbb sbb (bad) aad mov aam lds cmp push fildll jecxz dec cwtl lods inc int3 pop nop mov mov popa push push rorb loope push fstl mov inc jo aam fs in test out push cs inc cmp inc jae mov fmuls adc loop add mov mov mov (bad) and xchg mov inc mov inc xor les mov out push rorb dec pop add out fcoml fisubr jo add mov mov mov inc xor lods test mov out les add cs and int3 out add or push fsts andl movsl rclb in int3 aam cld nop pusha jl cmp in mov xchg (bad) jae pop jle or xor add push lods fcomps add movsb ja lods cmp pop aaa fldenv inc mov int3 out and loope or add adc sbb std pop (bad) xor pop fdivp push and shr add enter arpl (bad) ficompl xlat loopne clc adc jnp xchg mov adc jecxz pop and clc rclb push push sub mov (bad) push sbb add sbb adc push addr16 rolb inc adc adc mov add fcoms cmp sub xchg pop ljmp aam mov pushf inc adc cmp insb pop popa pushf imul sbbb cs mov sbb mov xchg and jecxz or icebp and je jl inc je or adc adc mov push faddl mov clc stos andb adc syscall push imul js std sbb roll push test pop mov fimull orl sub mov (bad) jl or call lock mov push sbb inc mov inc pop jle pop add lret pusha jmp pop inc js into incl cmc (bad) subb fucomi xchg jl or ret mov mov jns push sbb adc dec add ja add and mov xchg ret es data16 mov pop add (bad) hlt mov push sub jo mov push mov add cmp cmp enter (bad) cmp out add fwait inc outsb xchg mov stos add or lea inc mov push outsl (bad) xchg add push fcoml fs or jecxz imul sbb cld pop push and mov sub cmp mov outsl and jo adc add and nop call fisubr or fisttpll ljmp daa fstpt call xor cmp add inc (bad) push xlat pop rcrb cmp jmp sbb int fbstp dec xchg enter js loop cmp and rorb jne or xor aad inc sub pop pop or roll sti es je test into or jne mov dec dec sub add ds dec sti push ficomp add scas lahf insl mov add fidivl mov push clc movsb add jae dec jg in xor push rol mov icebp lcall popl outsl into nop sbb fdivrl pop das call add loope (bad) mov xor mov push and test jecxz xchg insb andb pusha pop mov cmp bnd or inc mov and test lret fadds xor scas mov mov mov clc inc dec (bad) jo sub or jg fnstenv mov sbb add enter dec mov push mov mov sub mov dec inc inc mov push or nop cmp cmp into fdivl mov pop xchg in add mov nop push sarb cs adc jge in sbb and mov adc std cmpsl nop add in in dec add shrb mov inc outsl out or test rcl loopne fbstp mov mov fnstenv sbbl jne xor stos lret cmp sub les out add dec stc fsub push or repnz push cmp enter (bad) add daa outsl jns xchg add jmp xlat inc sbb dec mov in or mov and gs add jp ret nop inc dec nop (bad) test stos adcb mov imul rcl cmpl fsubr push imul js mov add or mov (bad) mov mov lock fisttpll mov lahf pop add mov enter cli add hlt ret or inc sarb and add int3 rcr nop nop mov gs enter mov add iret in adc dec add or mov mov pop aam mov (bad) mov sub es xchg cvttps2pi (bad) pop sahf push nop rclb insb jle push mov add add mov adc add incb jp fsubrs bound dec shrb aam bound (bad) inc mov (bad) adc cmp mov jne outsl or push add pop stc mov pop loope push call fisubrl fs enter sbb jecxz arpl cwtl push jb in and (bad) xor jne xor js fsubrl fcompl cmp jns lahf sahf mov add pusha jo sub je nop je outsl mov test in cmpsl cs push and mov pop jmp or rorb and xchg xor sbbl fidivrl cmpsb clc sbb xchg ds or mov push mov or jl pop int mov lds sbb cmp js incb or movsl lret je mov aam or (bad) aaa in xor repnz sub sub loopne cmpb insb inc sub loopne (bad) pop mov inc movsb dec sbb jne jo cmp or dec xchg sub jo dec push es inc and add inc mov movsb fsts inc mov inc xchg rolb add sub enter ss test cmc imul lret dec lret mov xor jp sub cld sub xchg and aam mov stc dec in scas xor fisubrl pop jne mov imul or (bad) into sbbl nop aam lock repnz repnz pop xchg xor rcr sbb push cmc pusha icebp fldcw andb xchg in push and pop addl pop and rorl loopne jl add clc (bad) mov roll movsb in push (bad) dec test cmp mov mov rcll into clc jg,pn inc shll pop int jp stos xor (bad) xchg mov mov fs sub mov flds sub fwait or std adc ret mov mov and rolb (bad) xor (bad) fs cmp dec xor lods add pop adc xchg clc dec lahf adc cld dec fs sub loop or xor jecxz sub pop inc pusha mov pop jo jae,pt bound test enter popa (bad) rcl ljmp or pushf add dec es loopne rorb sub rclb jg lea sub movsl and add xor insb fidivrl mov call xlat pop test rolb mov rclb je pop xchg or mov call pushf xchg push cmp fdivrs (bad) lcall aad mov mov jbe jo pop in push mov sbb loop movsb sub rcr push jecxz aam add xor sub dec add movsb insb andb in bound inc cmp js adc fistpl dec push and push (bad) mov mov mov adc mov jns les mov dec nop test (bad) sbb lods pop push nop jb inc pop inc faddl xor in aaa add push pop sub cmp sbb xchg xor mov arpl incl and jecxz (bad) sarb mov (bad) lods jg (bad) jmp (bad) pop pop lock adc mov (bad) jno and sub cwtl cmpsb pop add dec hlt lds inc test andl ret adc dec movsl orb inc add rclb xchg lock mov jg adc in clc sbb repnz xchg popf cmc lea outsb mov jg push dec hlt pop add pop or nop mov or sbbl inc cwtl add mov inc dec xchg jg idivb jmp mov idivl xchg pusha or addl sbb ss push and ret call lret (bad) lret mov into rcrl fiadd loop jb dec push loope inc in repz (bad) cmpsl inc fdivrs loope inc or add in fisub stos push je add outsb into push pop je jmp add jecxz loop push jno dec mov mov adc add bound pop inc push cmp iret ss mov loop (bad) cmp (bad) test fnstcw cwtl test mov lret or mov inc out sub pop ficompl or jl std add mov mov cmp mov jb push cmp or xor shrb lds lock xchg xor add push xchg mov repz stc mov mov sub int lret (bad) std pop or addb adc and add rorb nop xor sub leave movsl mov leave aam pushf sub stos jne divl mov push push in add imul sti movsl sub cmp test dec (bad) fldenv mov or sbb add push scas and int3 or or (bad) fiaddl out sbb push int3 xchg mov mov sbb loopne dec xchg mov popf push add jne pop mov cld add scas in pusha or jmp cmp (bad) dec sub lahf or sbb push pop shl (bad) mov mov xchg rolb ror cmp inc inc addr16 pop loope lock es and mov subl sub mov mov rcrl fsubrl add icebp enter repnz mov pushf je inc xor sub mov out push xor (bad) xchg cwtl mov jl inc popa lret push rorb movsb fisubrl xchg dec and pop sub data16 or mov in lods mov ret pop ss sti push mov ds loopne lahf rolb sbb and or and xchg sub add dec sbb add js sub loope mov fisubr (bad) mov outsb sub mov adc mov faddl mov das loop,pn enter mov mov into inc adc sub out fwait jecxz and push mov mov add imul (bad) pop fcmovnu test cmp test mov int fcoms xchg add adc and xchg lea outsb loopne call xchg shrb mov fisubl cmp sub mov sarb sub imul (bad) std hlt and in add jmp (bad) push jecxz in fs add out push daa mov jecxz pop pop xchg fcoml mov sub fsubrs push out jle test data16 jns adc in mov xchg inc imul xchg add or insb pop sub jno adc fnstsw cmp cld mov ds popa in xchg icebp rcr sbb pslld pusha add xchg mov add jne fmul fisub aam out (bad) mov lcall cmp (bad) adc and xchg pop and or cmpl inc sti mov jecxz inc or add sbb mov dec cwtl out add mov sub lods add ret pop xor sbbb or push cli (bad) icebp lcall fdivs test xchg and mull mov sub mov sbb sub loope pop nop in hlt rcll fiaddl scas and shll cs dec xchg (bad) ret iret inc lret add rorb lahf les pop add and pusha xchg sub call adc pop (bad) pop cmp je clc inc in test outsl jmp pop sub mov adc addb mov pop cs (bad) mov es sub dec mov (bad) mov dec and or imul add cmp or std add cmp dec rolb push mov leave add ret pushf adc jne push adc dec mov xchg ficoml add dec inc cwtl imul pop rorb xchg or push mov adc les push adc jno mov movsb mov aam mov xor or fadds push int ds dec mov sub stos sub lahf nop inc je mov imul pop sub iret leave lea xchg daa xchg cmp js mulb push bound fiadd jbe ficompl jne ds rol sbb cld and lret rcl insb or mov js sbb mov fwait jl scas hlt (bad) jbe mov adc mov add pop sbb mov jecxz out adc xchg out add fsubrl and or xor pop xchg pop inc loopne sub mov push inc jg movsl movsb and into dec adc cld cmp dec gs mov xchg pushf xchg test add addr16 in test dec cld cmpsb cwtl dec xorl mov pop cld xchg lret shrb xor dec inc jl clc xor push ja les cmp bound mov fidiv repz sub adc dec sbb das inc lret mov rorb or cmp roll (bad) xchg inc in jnp cmc shlb in sub ss mov adc mov mov jne sub mov addl xchg int3 jne xchg mov pop inc mov sub sub inc sbb fndisi(8087 and jbe mov mov inc int3 xor and push xchg xchg mov dec jl or push out dec paddq (bad) mov mov loop leave rol arpl add and sti cltd iret mov lea mov int3 mov cwtl int3 les xor imul mov data16 adc aaa pop mov push insb push cld in jecxz add inc in enter pop pop clc mov mov push ficom pop test decl movsb fs cwtl jecxz dec cwtl (bad) pop imul mov mov rcl dec pop mov mov pop roll sahf push jns xchg adc bound ret push push shr sbb mov fcmovu and clc dec sub nop fcoms add testb jge and (bad) in daa mov add hlt test push cmp fidivl xor in mov in pop xor sahf mov out in loopne (bad) mov lret mov lret jno imul xchg mov adc or lea cli xchg lds mov fcmovb sbbl xor jbe sbb adc inc mov mov mov jecxz adc ret cmp sbb mov shrb hlt bnd ds loope xor test mov inc rcr jecxz jecxz lret pop loopne push xchg xor or mov sbb clc mov sarb and and mov adc inc ret aam icebp pusha std nop imul and xor mov (bad) mov ret or mov mov pop scas dec xchg rolb sbb lret inc pop outsl pop jecxz cmp add ja pop sbb mov jo imull cltd cmp mov fldt or popa test loop aas push test test (bad) (bad) pop dec in aam leave cli cli fs icebp push loopne add and xchg adc jae aas mov dec add jne (bad) divb mov (bad) push popa addr16 cs leave add push jg add pusha hlt sub and (bad) and mov dec clc add mov (bad) sar cs (bad) xor mov mov adc test pop cmp inc repz push aas sbb loop ret sbb test cmp cmpsl xor roll or lock push scas enter cmp add xchg aas int insb adc dec cmp orl scas lock call aam sbbl cmp lods sub xlat addb ficompl adc in dec repnz test sarb mov and adc and jo hlt cmp js imul ror (bad) cmp xchg add adc push inc nop cmp and movsl add jns loop jb rorb arpl adc mov and mov scas stc bswap and aas icebp cmpsb jl loopne arpl sbb add dec das inc mov sub and cmp push mov shll xchg pop fisubl leave (bad) lret mov dec test add addr16 sahf jb and jnp add add aaa pusha inc inc add inc js adc shll adc jns jecxz fnstcw inc pushf jnp in inc out cltd sbb rcrb pop sarb push and test jle aas mov test xchg mov jno ss mov or mov and andb pop cmp in ret lcall pop lds xor fs add xor dec or lcall inc ds or push out rorl hlt rcrb outsb mov add pusha fildl and cwtl jl enter jl push aam dec cmp leave xchg mov pop adcb fcoms sbb std js iret add stos (bad) mov inc insb jno jb mov cmp movsb pop dec leave push ljmp cs aam jecxz push (bad) and fild or in adc and outsl adc dec pop scas loop sbb scas dec les and hlt dec sbb cmpb cmp push mov dec push repz rcrw xor daa sub push icebp mov js insb xor dec mov insb inc (bad) out push lret cmp inc pushf mov outsb loope nop mov das fidivl sahf pop pop xchg loope push jne ret push lea jno add jp adcb xchg sub cmp sahf pop add enter cltd pop or mov lret insl fisubl mov xor pushf scas mov add inc mov add loopne xlat xchg out add xchg push mov fiaddl xchg fwait push xchg scas testl add pop stos ss jge sbb pop inc xchg sbb or xchg pusha or add lahf movsb pop xor and out mov (bad) and sbb and mov add popa push and xrelease loop mov or jbe jmp enter sarb sub dec sub xor pusha pop sbb or (bad) xor cmp test push cmpsb mov push dec ror cmp cwtl or push push push pop pusha lea (bad) sbb shlb popaw sub jbe mov (bad) pusha iret pop outsl mov xor sbb or (bad) cmp insl pop cwtl jns call clc adc sarl popf cmp stos xor das dec and int3 cwtl or xor sub andl add add (bad) cmp cmp xor les addl add leave pop outsb ret add push (bad) lcall (bad) lock or inc dec hlt je inc xor sub mov and adc mov pop mov dec mov inc cmp push add lods sbb jp dec cs lock (bad) je lods or js sarb loop in enter dec (bad) xor fadds (bad) lock or xor or arpl sub mov mov mov lods daa je lock cmp jbe add mov ja (bad) lods jl lret jecxz pop gs xchg leave outsb pop xor imul std xor mov sub jecxz add out and sub add jb insl mov outsl dec and rcrb insb adc rcll nop sub ret lea push lds pushf push add mov push (bad) mov dec rol out mov (bad) cld push add jecxz rol fistpll sub lods sar inc adc fildl jnp add add xchg adc mov adc inc rcl mov inc (bad) negb rol or loopne adc jbe mov fildll (bad) insb loopne cmp xchg xchg fs push bound subl jo shrb std les into sbb add pop js cltd fbld les inc jo inc clc sbb jecxz mov sub dec cmp imul mov cld mov sub lock mov add jb mov and sub sbb mov jecxz dec cltd mov sub mov mov fbld adc adc not and pop sbb data16 pop or pop or add fimull mov and lods mov mov jae fs and loopne cmpl xor adc lea cld cmc int aad loope or jge insl jmp mov mov add push out add push jmp add mov push clc insb bound pop cwtl inc repnz push push jno mov push cmp inc push add faddl rcrl out push and js add (bad) jo mov pusha xchg and dec bound mov popa add clc aam (bad) clc addr16 dec andb mov rcrl data16 fcompl clc or cmp fimull lret scas (bad) adc mov mov ss add incl imul mov daa in das pusha cld inc lret andl loop insb xorb mov or repz adc mov test nop lcall dec fstp and sbb or push je xchg or rorl push push or mov fsubrs pusha jb push mov push or movsb sub fsubl cmp (bad) test outsb push sub lcall clc sub pop je je out xchg int3 add inc xchg vandps mov sub sub cltd pusha clc faddl (bad) addr16 inc xchg mov add jl push subb fmulp add sub xchg jnp sub lcall call xchg (bad) stc add fnstcw push inc sahf xlat fildl cmp lds scas (bad) js hlt fidivl mov cs add cltd (bad) jae dec jmp iret stos and test mov sub andb clc jns and or inc push cli xor push mov cmp rol shlb push enter push sub lods data16 push ljmp lods cltd jl or xlat cmp jl (bad) sbb ficom mov mov addr16 rorb into ljmp in xchg mov dec in add fsubrs push add mov (bad) clc les arpl enter add adc jo sahf imul in add pop (bad) movsb pop or int mov xorb enter mov iret mov mov loope add dec pushf (bad) cld in sbb adc mov int3 loopne in lcall popa data16 mov mov adc add and jno,pt mov add inc mov cmpb jo add daa adc in xor frstor push std les sub clc pop nop int3 xchg add sti cmp lds pop cmp pushf shl sub sbb fisubl fs mov xor jae jecxz popa add dec loop je lahf es mov je push cmp inc repz mov xchg int3 sub push jbe pusha clc push loope or mov test enter mov xor test push xchg push lea and mov push int jecxz jmp lahf sub mov rorl cmp xchg cmpxchg adc rorb pop subb push cld cmp dec fdivrl sub test push xor jo push pop rolb jbe jb add and inc or dec jmp dec test mov enter cmp mov (bad) loop sbbb or mov lods aam loop adc mov into call or dec dec or jns or add or mov mov jge push scas cmp and in inc aam popl inc pop push movb xor pusha mov les dec and cwtl test mov and sbb mov dec lcall jo in and push inc adc push mov lock jg adc mov movsb (bad) (bad) (bad) mov in add cmp je or or lods xlat add cmc jb in ss inc test dec lret insb xchg loop or push inc mov push cwtl push mov (bad) (bad) xchg adc lea mul sbb xor js fdivl orb jne jecxz (bad) mov loopne jp pop aam pusha lcall mov pop lret enter xchg cmp rclb and xchg mov push icebp mov mov sub mov mov sub or mov push xchg clc push add stc outsb or mov mov repz adc cmp mov mov mov sub push inc push mov push repnz ret or mov dec adc les aad and or push or andb sub shl push wbinvd pop in pop ret push dec pop push pop sub mov test arpl fs jl mov std and xchg lds sbbb inc push aad add and testb push test jl mov or (bad) or dec add ret repz add cli add jo push jl add ja pop xchg shrb gs (bad) xor mov or cmc pop ds sbb stc add in enter add sti arpl xchg add test or mov adc mov and sahf add mov pop scas insb (bad) rcrl sarl sbb fsubl jnp imul and and adc fst or jns in and mov cmp hlt cmp fstpt adc pop fimull call je bound cltd push xor and cwtl xor jo ret or ret cmp mov inc add dec mov dec jbe inc fidivl inc ja das and mov and flds gs rclb adc push xchg sub call mov inc daa jnp pop or fsubrl andb ds in mov insl int3 sahf add int3 mov push inc cld cmp dec xchg dec pop xchg adcb dec cmp cmp out stc rclb mov jle and push mov mov test call sbb adc mov ficomp (bad) aas and ret inc or dec mov or mov addb mov loope rcr and lret mov dec push sub pop sahf jl add mov pop popl dec pushf lret das lea fs or adc pusha sbbl jnp inc outsb sti movsb adc test pop mov enter add lcall pop or addb cmp lods repnz cs sbb jne mov or and add lods out inc mov adc jge xor lock int3 adc pop xor mov cmp add cmp jl push rorl imul leave (bad) outsl in pop add mov pushw add fdivr xchg inc xchg adc fucom jmp mov nop xchg cmp mov and out inc sbb mov mov xchg mov dec cmpsb js sarb mov repnz gs add lods pop add loope das iret or or into push xchg mov ret add cmp stos ficom cld xor aad std sarb daa fist clc inc cmp adc inc adc and mov fstps pop insl pusha lcall dec ret xchg add xchg outsl std pusha xor mov dec mov outsb imul dec or xor sarb pushf imul add cmpsb mov ficompl std clc lock sub jecxz jbe add popl xchg nop es push loope call dec (bad) je add jb shrb mov test or lret mov push nop add or inc mov mov cmp cs leave inc fdivrl pusha mov sub add pop lock fsubs jne jo mov (bad) xor idivb add rcrb jge (bad) add test fucomip add add pusha popa mov popf dec shlb push inc ja dec scas jo rclb mov movsb and fidiv pushf das add sahf outsb mov popa add mov bsr pusha nop pusha aad ja xchg push cmp or addl outsb mov mov aam rcll jno dec popa jmp mov call add or jp push mov call push mov fmull pop add icebp mov inc (bad) push loop add (bad) cmpsb shr pusha mov ds and pop out fldl pop cmp stos cmpsl aas fs pusha arpl and push enter or inc add push add sbb (bad) je add lods or pop stos fistl cmpsl pushf add jmp jbe add (bad) je mov bound sbb repz add mov adc mov inc and dec in int orb cmp fsubs js xchg outsb (bad) inc xchg cmpsb hlt pusha or and loopne in push cmp dec outsb dec test sub stc adc add mov imul or fstps test fsubrl or pop out push in call (bad) add jnp or jbe adcb adc jp pusha arpl push adc jnp pop adc fs js lret inc cwtl cmp or test in int3 ja dec cmp insb push call (bad) mov int3 push mov mov mov push pop ljmp nop adc test popa ds test mov scas outsb sahf test in lock (bad) xchg dec stc fs shl (bad) dec mov mov or js inc loope add pop fistl ja push aad add jno or push mov inc stos jae lds ds rclb cmp inc push mov mov sbb xor xor (bad) and sbb pop xor jl std in and xchg aas xchg arpl add dec push push jl cltd adc push sbb cmp das fwait mov dec lods lahf and push jle and test push call movsl mov imul cwtl cld pop enter fldt inc cmp sbb das xor add sub and and add leave dec inc insl xor cli enter mov adc add xorl iret jecxz push or movsl fiadd test out in hlt and adc pop mov test dec sbb ret xor inc aam adc clc add lds loope lahf pop xor add add inc stos nop mov lock or test sub mov mov push repnz jmp cmp mov xchg decl aaa and push fdivl pop je and pop out shlb xor imul cld es stos into adc adc fcomip cs fcomps int fs movsl xchg add in cmp (bad) or sbb test push (bad) dec in xor dec test xor pop xlat and not lods popa repz popa shlb dec cwtl subl mov in cmp fisubl iret dec add pusha sarb jle sarl (bad) daa rolb and push cmpsb lcall pusha scas or mov mov insl xor jge les push pop mov (bad) bnd or pop rcrb cli orps (bad) int3 push mov mov cmp add adc ss mov fsts mov xchg mov fstl adc sbb lret add adc sti xlat leave lock and stc fstpl out aas mov ja sub mov wrmsr push add xorb ss xor pop push adc pop ret jbe ffree ss mov cmpsl movsb outsb test lods xor pushf cmp xor insl ret mov out sbb out push push subl or or sbb push mov shlb inc mov or lret xchg cmp nop dec in adc cmp (bad) mov jns xchg sbb and and push je jo in icebp sbb popa repnz ror xor mov inc jo fcompl sub stos push mov lods adc in sub and test cmp mov or cwtl call (bad) mov sub or (bad) mov (bad) int3 add jg pusha rcrb aaa cmp push cmovne xchg mov mov xor adc cmp mov enter daa xor jmp lock mov cmp mov sub mov inc rclb pop mov mov icebp pop rcrb call and jecxz rcrb sbb dec fisubr (bad) stc insl jbe loopne jecxz rolb icebp imul and sahf and ljmp adc hlt xchg std fcmovu cmp and cmc test mov xchg mov call dec lods out dec mov xchg pop inc push in or (bad) fs insb mov sub dec and jl or roll rcr cmp and aam enter lods icebp dec or pop out push daa orl inc add enter add xchg cmp notb pop mov les fbld xor adc mov js hlt in rolb std aam lret in add sub addr16 clc adc pusha push sub sbb (bad) setl or add repnz push dec cld repnz jae inc jmp dec mov jl ds insb mov xchg push lock ret mov mov js mov sub fisubl stos push push in sub aam js lcall sbb cmpsb add xor stos cli cld das mov mov daa jecxz stc mov leave rolb mov adc and loopne (bad) mov and loopne mov (bad) int3 das inc shl in mov jo outsb push push mov mov add push shll enter je es push flds mov das dec push mov iret mov pop or shrb rcrl xor mov out adc cmp es xor adc mov dec in inc mov cmp xchg or fsubl shlb test out xchg nop or (bad) ficom dec dec and mov repnz jne xor mulb les cmp dec cld sbbb insb mov mov ds fiadd fs jbe xchg adc xor sbb loopne push clc mov outsl loopne adc mov insl push jecxz test out sbb or add jo jns dec hlt pusha sub sbb rorl or lods mov in mov sub out jle add addr16 gs movsb in push mov das mov xchg add dec sbb mov stc add cmpsb mov add dec mov popa add mov std push fcmovnbe ss cwtl cwtl out jnp adc mov xchg setg push pop mov cltd stos dec add jnp arpl adc jl into pop mov lret xor pushf jo cltd adc orl mov add pop lods push shll pop mov push jle mov and out ret lods loopne pop bound push sub add push cmp adc mov dec mov mov jne aas ret lock (bad) adc outsb push rcl js,pn add cmp push jmp mov rorb movsl cmpsb inc mov adc or lcall inc mov and mov xlat add movsl outsb bound sbb sub add lds push call push dec pusha lea push (bad) and jno jae xchg adc pop popa add scas sbb inc nop test lcall dec add popa movsb aaa mov cmp enter cwtl or cmp push sarb add into cmp cmp or ficom add je pop outsl pop call lcall scas lret inc in subl xchg push cmp xchg jl pop addb call sub subl xchg mov cli add leave vpmacsdqh call stc cld js cmp ret mov pushf add mov mov rclb sub push cmp jl mov dec rorb das pop push mov (bad) aaa cmp mov (bad) je pop inc iret and add push sub push iret pop enter cmp insl inc fwait loopne push test andb sti jg cli xchg add jge pop bound icebp cmp mov stc std mov inc cmp bound sbb fcomp test sbb mov add pop cli push fcmovnb subb mov ds dec add movsb lods fist jle loopne mov jns pop xor sbb popa pusha in mov adc movsl cs and pop dec lds (bad) lock push sub inc pmulhuw nop xchg jns jno or xor and lods pop xor jo rcll out loop les fistpll cs push mov fcomps xchg ss clc mov mov popa je fisubr cwtl or push pop add pop imul and adcb sub insb sar xor std lcall pop xor stos dec aaa xchg add ss shrb mov add bound mov mov les ja fmul rorb and gs xchg sub sub es aam orl xor xchg push call out adc fwait ss popa nop inc movl cmpsl xor or es nop test (bad) clc inc mov scas stos or rcr cmp mov jb mov pop pop incb xchg cld mov and subl adc mov ficompl jne in inc aas cmp adcb sti inc call js pusha xor inc adc js add sbb (bad) xor mov les fidivl out xchg loop pop xor jge js (bad) mov popf scas (bad) mov add pop fsubr rorb je pop ja leave inc xchg lret xchg add in cmc mov adc and pop inc loopne mov mov insb add stos inc mov or movsb pop ja add lods int std das adc fdivs xor push enter or popf fcoml add imul sub sub push push or add mov cs jle inc mov mov lock and es bound sbbb hlt fs ja xor and add notl cwtl jl pop mov cmp inc push das mov and out dec and inc cmp repnz and lahf in push pop xchg or push jns pusha inc sbb (bad) mov mov sbb push shlb sbb push jno jle xor mov mov pop negb sub gs ss repnz xchg mov xchg and add not pop mov ljmp mov enter imul add je add or mov add repz cmp cli fisttp push adc add ja pop out add imul cmp and (bad) dec popa lds push addb add xchg cwtl adc xor sbb xor popa ret jge lret inc pop ret test fadds mov rcrb inc aam mov add (bad) repnz (bad) rorb fcompl in inc addl hlt adc cmp orl out lods lock adcl pusha pop adc inc cmpsl es daa push mov nop bound cwtl mov mov (bad) sahf icebp mov mov cmpsb jle sbb iret lret inc xchg ret (bad) cmp std pusha fadd pop xor mov loop inc mov xchg inc push mov mov inc mov pushf xor dec xchg and mov cli or (bad) xor fldenv and outsl sarb push pushf mov pop mov xor mov icebp pop lret push add xor mov jg xor inc repnz insb (bad) out xor xor push inc mov sbb add dec jg lods jns mov mov sub push repnz push inc scas add mov or mov xchg xchg loope push popa loop add fs pop outsb addl push sub cs addb sbb das and stos add mov cmpsb sub mov add imul enter inc jp mov xchg or lds mov add lahf sbb mov cmp or xor (bad) mov lret fidiv mov int3 je pop xor les out fldt adc fucom leave lcall push push (bad) push loopne cltd or insb subl pushf dec sub in add sahf aaa cmpsb arpl icebp test adc cmp call enter rcll inc jo mov fldl mov mov mov dec sub or xor dec mov iret xlat add enter je add mov sbb loopne dec mov je push xlat fs inc sbb (bad) bound push adc lods sbbb in cs dec in push and addl sbb pop add das negl cmp xor push sub mov repnz and sbb lods (bad) jb test adc sbb and add insb cwtl sbb and sbb jbe and movsb std stos sbb js in icebp add js addb ficoml push cmp jle inc stos cmp pop xchg add (bad) lock je fstpl addr16 push sbb jae push nop (bad) cmp subl cmp call push rcl push inc adc cmp clc pop inc lret imul mov sbb gs cwtl cmp outsl (bad) xchg mov shll add dec mov pop or out mov add rclb icebp push dec inc rorl je pop mov lret je xor push enter xchg sbb inc (bad) ja inc xchg in push lock bound pop ret mov (bad) cmp pop sbb rclb lock bound adc mov cmp add pusha xor push bound int3 mov sub jge bound dec jecxz jns lods cmpsl movsb inc xchg adc xchg and sbb inc movsb in jb or sahf js mov in out cmp hlt stc sbb aam rclb inc cmp xchg adc push sub or xor adc out xchg sbb mov jnp mov mov and pusha arpl mov pop lock mov dec ds pop and mov add pop and or cld sbb jbe popa sarb cmpsb push adc fadds push pop cmp jne xor subb add adc outsl mov stos xchg fnstcw sub addr16 mov push dec inc add inc push sub pop sti stos inc sbb mov ja lods out add cltd pop leave and add cli fs sbb or loop repz or add test mov cmp inc fs addr16 add out mov nop fwait add (bad) dec stos cmp mov mov cmp imul mov add pop arpl ljmp add stc add fdivr or add sub fmul rolb mov fbld loopne rol sub movsb cs or jne mov pusha popa mov (bad) in faddl xlat mov xor loope or adc mov das push and inc jae imul shlb pop jns xchg (bad) xchg add sub movsl rcrb xor cmp push push jge loopne loope add mov pop orl in cltd mov mov push sarb fstpl mov dec mov xor das mov and add scas mov and or inc aam out sar add jl call or pop xor cmpsl inc inc test sbb xlat add clc test (bad) cld add in iret jge jo dec pop call lcall andb dec pop lea mov xchg pop sbb test inc pop jo arpl fs mov push xor test cmp mov pop add enter add loopne lret or cmp mov test cmp cmp xor pop pop xlat sub lods or adc xchg rorb mov mov mov pop push ret mov lods dec xor imul cmovl mov ret repnz xor call mov test sbb outsb cld cmpsb mov add xor pop cwtl sbb add lods stos cmpsb in out roll xor push add fwait add gs movsl icebp inc adc adc das sub dec mov mov and aam cmp push mov mov lea fwait xchg xchg ret jle scas in jno jns xor pop (bad) or cmpsb cld ficoml adc push fs mov and cmp insb fcoms arpl daa (bad) loopne jg sarb xlat loopne scas mov movsl mov ss add add repnz cmp add sub add push mov push xlat shlb jge test add icebp inc mov xor std add cmp scas xlat repnz lods add mov sub out fcomip (bad) gs outsb jge sbb xchg shl mov imul or fsubrl and dec adc add je adc lods xor jno cltd push or insb repnz outsb pop xchg sar add mov lods cwtl cmp jmp inc insl cmc adc (bad) fwait sub ficoml cmp jle sbb orb test and add adc push jbe mov xchg mov movsl outsl xor pop add mov inc rorl adc cmp mov inc sbb add sbb insb mov mov inc bound mov popf fistpll loopne and add (bad) mov adcb sub out cmp or add sub add add sub adcb mov jns add push push fucomi sbb lods pop pusha loop pop mov cmp or lds cmp cli movsl mov mov bound inc mov sbbl cmpsl arpl popa fwait stos and (bad) sbb imulb in je pop jne rolb add fdiv add and push jae add xchg mov mov push and aam cmp add sti jne leave movb cmpsb inc loopne dec sbb jbe mov jl add (bad) mov sbb xchg int add adc jge (bad) xor sarb or jle call test xor and movsl lock test (bad) ja lods daa push cwtl cs test push pusha insl mov inc pusha call jl mov test in cmp cmpb outsb jnp (bad) sbbl insb js mov daa inc cmp xor xor pop mov (bad) pop mov or sub ficoml test and cmpsl rclb fcoms outsb and (bad) sub test addb sarb repnz incl adc mov sub cmp ds jno or lret stc (bad) mov call and xor mov mov push rclb (bad) scas dec pushf lods unpcklps pop sub aam and (bad) (bad) cmpsl out add xchg test jnp inc jl je cld ljmp ret dec (bad) testl arpl add cli fcompl and jl xchg add mov arpl test xor push fs cmp add pop out add aam inc iret add rcll jecxz lds daa sti (bad) in das sahf adc lahf ds xchg imul pop jmp or adc mov sbbl jae,pn inc pusha cmc insl push mov sbb mov sub clc pop push call dec and xchg xor or add xorl mov orl test enter loop enter add fiaddl scas (bad) mov mov out or mov mov inc mov js pusha jns in dec sbb sahf sub adc add (bad) jle clc lods xorb stc lds outsl adc dec push add add lods sub lret call push je mov popa gs xchg pusha or loope mov lahf pop adc loopne clc mov add sahf inc cli sarb lds push jecxz neg add pop cmp movsb mov cld clc add dec int ficomp repnz and pushf mov sub add cmp sub pop dec mov push les push and je scas lret leave out add jnp sub sbb and js jg pop add or jnp fcompl adc sub jle shrb xchg mov add xor inc loope inc jmp mov pop dec cmp cmp pop imul mov andl aas pop sahf mov push iret jnp xor mov lret out (bad) outsb inc sbb sub insb subl pusha jns jg addl sbb and es sbb mov ja aas xor jp sbbb loop push mov out jg test sbb jbe cmp add mov jnp mov add cmp mov outsb sbb aaa fwait in add push push ret and sub sbb pushf adc lahf into mov subb fisttpl mov inc mov xchg nop add push push sub clc cmpsl inc sbb mov icebp add mov xor pop out cwtl mov (bad) mov daa dec pop enter cmc mov or pop push or mov adc jg es and sbb inc fwait add xchg or pop cmp pop cmp push gs xor test les jo stc pop sbb add in scas mov clc pop cmc inc sub scas lahf or sbb xchg loopne lcall clc int imul ljmp jno shll bswap jmp pop fcompl push mov pop add divl or and out add clc pop rcrb or ficom add push leave push sbb das mov pushf jecxz (bad) bound and pushf mov xor call add femms lods add sub jne mov xor or mov jnp pop pusha fdivrs add in lret int3 mull xchg and xchg fildl hlt loopne imul ret xor adc mov mov xchg jbe inc lea ret aad loopne icebp sti lock int shrl mov sub pusha loop adc pop inc repz sbb ss jno lcall (bad) mov adc push fldl add mov or int3 push pop (bad) ljmp jo pusha xchg mov pop movsb cltd pop jae lret fsubrl cld add popf sbb loope nop push adc cmpsb fadds je push xorl inc add cmp in in call cwtl cmp or sbb test inc (bad) ja jns dec lock ja jp sub inc call and enter jo lret loope xchg adc xchg mov sub (bad) jno sbb dec rcrl add adc or pop dec les daa dec or adc sbb insb loop xchg pop std push dec ds shrb sub push sarb add and push sub fcmovbe shrb xchg add sbb sub xor mov mov xor aas lods clc mov sub inc adc cmovns into sbb xor mov loopne push add adc mov add xchg xchg call sbb pushf push orb rcrb imul pushf loop mov roll pushf jmp ss cmp jl push daa cmp test inc movsb pop jmp adc lret stos adc js pop pop xchg add fwait test leave jno sbb (bad) jne push jmp inc in ljmp mov dec incl sub jno shl decb add mov sub jmp add inc pop xor push push call shll js mov dec sbb mov pusha pop sub adc ja dec lods jae addr16 pop and das in fcoms pop sub enter lcall inc adc leave push out (bad) out push jmp mov adc sub add jne outsb add lock in or cli rol add aam stos add fs and leave clc lret nopl test jl daa mov (bad) push sub inc (bad) cmc inc ljmp sbb psubb mov push adc es add inc mov jp test cmpsb and lahf rcrb or cmp mov shrb mov pop popa outsb pushf and fwait sub jno and insb sbb mov jns aas inc xor xor jb (bad) sbb xchg mov push and mov jmp lock push push or lock or cmpl mov mov stc sub add or jns fldt negb inc sbb addl and fcomi fs dec cmp xor lret xchg xchg sbb cmp cwtl out and imul push xor adc dec pop mov nop in mov sub rorl (bad) (bad) cltd nop mov cld out insl into out dec add mov mov dec popf mov jmp lods xchg popf test rorb pushf mov fucom mov sbb or stc sbb les mov js pop push lret jno test imul sub xchg lods mov xor incb (bad) mov sub adc xchg inc out add repz scas int daa clc pop (bad) flds sub pop cwtl add loopne mov nop rorb insl and jmp cld lods fisub mov cs inc inc push dec jp (bad) xor aad pop pop stc notl loopne inc mov shl sbb pushf mov enter and sub in clc pop pushf faddl dec inc and jecxz sbb nop mulb pop jle (bad) mov in fs popf xor push xchg call int3 push sarl pop add inc pop push les adc dec add cmp mov or and inc stc jp mov aad data16 sbb sahf (bad) ss mov sub lods add pop pop mov in jo rorl ret insb add adc adc mov mov sub loope (bad) into test push pushf scas mov orb mov or sub xchg dec popf or mov xor mov (bad) mov lock enter pop (bad) mov dec fwait pushfw add imul loope mov mov xor mov xor stc and inc xor sbb mov andb cmp or not sbb cmp and pop daa xor inc aam mov xchg sub std test roll loope xchg loop ljmp and sti pop addb mov aas daa mov fs sti js aas jecxz adc push xor and sub pop insl cmp push xlat adc pushl sbb push out jl push inc and or push ljmp nop adc into cmc add xchg in addb scas rolb movsb movl mov jmp jae faddl ficoml aam push pop sub mov aas mov shrb jae inc mov xchg pop jnp mov and mov mov jns mov sbb daa sub dec aad aad daa jno test cmp clc xchg int3 jmp jnp or test xor call push jle gs test cmpb mov and loope enter in sbb std mov repnz inc std xor pop push mov cltd imul int3 incb enter shl jns sbb inc mov add out out xchg sbb lods enter add mov adc cmp and add cmp into jns sbb inc in dec (bad) xlat dec dec mov cmp mov outsb aaa add xor or pop data16 add jmp add in jmp jo sub pop int3 push xor mov jo es jmp movsb push adc xsave sbb out scas push sub arpl cwtl rcrb hlt pusha pop fwait push in pop mov jnp insb xchg cmp test add jns stc adc add jns,pn jl jl mov pusha dec and push inc mov push popl rcrb js mov sub (bad) jl lds sarb inc pop and xchg mov out sbb fistpl aas jbe test mov or scas (bad) mov jo shll add add push add pop ret dec mov out bound inc push rol sbb xor cmpl push jne push ret pop ret xchg mov mov add test sub add daa pop inc sbb jns pop int3 sbb sub addl cli int and aaa lea mov mov and cli mov dec xor pop pop xor adc add lret adc jp rol popa call iret cmc (bad) repnz inc sub cmp enter or test stos hlt rcrl testb pop or sbb cmp sub push mov shr push xor jmp leave and push xor jbe dec pushl mov pusha add ljmp pusha out cmc mov mov or sub test add jmp push movsl mov xchg push adc andl fcomip shll pop mov pop pop xchg jle das (bad) sbb pop out sbb and stos inc pop push mov das cli inc test xor pop gs xor mov rcrb pushf add or fildl adc mov frstor dec sub and xchg xchg pop sbb lea dec outsl mov mov insl sbb iret dec mulb inc lock sub add ss add shr pop or push or outsl push push cs addb pop pop pop sbb out xchg mov xchg pusha push imul mov jp add sub pop add inc cmpsl les imul inc pop stos sub lock push add ret dec add jnp add testb jecxz jg aas push pop and dec mov ja jnp add xor clc pop push cmpsl add pusha jge inc and mov cmpsl jbe cs sub cmp subl lds std pop add out jmp or fist push test mov xlat test lcall add mov mov fidivrl negl cmp inc jg shlb movl adcb mov clc mov bound jae ret inc add neg stos mov and rcl push push in sbb jns add ss insl pushf pop mov jne stos mov (bad) js movb inc pop test add xlat and popf or cmp add mov sub cltd js pop push push (bad) in push add add lcall std jg outsb stos xor lcall addb cmp into ja xchg fsubr push pop jno push inc mov pop or pop neg sub sbb enter mov andb jg notl cmc sub movsb mov nop cmp shlb jmp add scas pop testb pop pop int lods iret pop lahf jge push push sarb imul test dec daa js mov (bad) jle ret adc out mov mov aas jmp push cs dec ljmp add add sti (bad) xor push or sub dec das xor xlat adc add into lds add mov add jmp pop je or jmp pop add adc xchg mov jge pushf popf jl mov jnp shr adc sub mov jbe jge dec pop (bad) mov jnp xchg pop push adc inc shll cmpsl push xchg add dec mov outsb mov lods mov push (bad) sub jmp (bad) lcall in or rclb test mov xor (bad) dec sbb inc and mov popf push inc test jmp adc mov pop jmp inc adc stos fistp lret mov inc int mov pop push xlat sub clc sti push xchg ficomp leave ja jmp fs inc fs pop xchg jnp fistpl jb movsb (bad) fwait clts sub fcompl test pop jnp in jmp outsb adc mov pop mov sti push jg rcll sub mov sarl xor mov add arpl sub jnp pop and dec add test sub and inc (bad) xor push jle mov push push pop std pop inc cmp test push add test scas mov cmc inc push lods rclb dec dec add pop push mov inc xchg xchg push mov mov pusha push pop adc jnp jge popl xor scas int3 dec pop test add aaa aas add les add out xor rcrb pop xor sar mov and pop mov mov mov aaa xchg aad rcrb (bad) (bad) jmp mull repz mov mov push dec pop mull enter pusha mov jg enter and gs mov lods (bad) pop or gs cld rcl cli leave mov sub call adc dec rcll (bad) and fmull pop dec sbb sub adc jno scas mov push add bound push mov cwtl push cwtl lret clc (bad) sti stos repz mov enter es notl mov aaa cmp loope fildl push jo adc push xor lret pop add clc sub hlt nop incb sub push add incb or fcomps pop mov xchg jp dec shr and dec movsl ja jecxz add dec jle stos mov stos inc cmp ret mov inc cmp ficoml nop cmp jecxz nop pusha add sahf pushf jl shr inc mov or pop and xchg fdiv (bad) mov in pop inc hlt xchg lcall pop mov orl leave sbbb mov add cs and push (bad) push or arpl add mov call push pushf xchg daa push add mov sub jo inc nop sahf mov sub jmp jmp lret cmp jp and roll or cmc jnp add inc or adc mov dec rcll jae in subl add or cli jno (bad) jmp adc lret sub add pop sub enter (bad) push mov sbbb lahf decl sbb enter xor cs push in imulb jne sbb out pusha addr16 es push test pop in mov pop mov pop and cs dec aas sub xor scas mov jmp sub mov or pop lret fdivrp adc push cli inc (bad) sub push xchg jbe jecxz imul pop sub dec and dec pusha jp outsl cwtl pop and jne sub enter dec push lock or stc push cmpsl sub rol fbld mov daa popa jns into in push fisub lcall inc loope bnd mov push pop mov jnp pop pop imull jmp rclb cmp sub push stos imul add ret out loop xchg call psubq lea mov adc std push sbb mov add mov mov pop cvtps2pi add xor add pop add cld sub push jmp cmp int3 xchg dec push rorl (bad) imull lcall inc and sub in sti adc sarl pop pop jnp inc add rcrl push aas inc pushf adc lods xor aad add in jmp imul xor fs dec popf fldenv pushw in push push sub sbb out ror pusha jnp fmul movsb cmp ja push div ret mov mov jae pop lahf xchg cmc mov repz in pop nop flds sbb or push (bad) std mov sub imul lret popf xor xor ja inc sbb push cltd cmp dec inc andb bound add inc adcl sbb clc roll and xrelease and xchg scas push push xor push cmp movl adc adc sbb scas pushf es mov and jg dec mov iret push mov mov add sbb addr16 push pop sub jae dec adc icebp add flds loope in dec jne and and rcll sub pop and lds mov mov push out mov xor pop cwtl enter pushf push sbb sub jl lret mov icebp xchg jl subl rcrl cmp xlat cmpsb ja in inc cmpsl sub jae (bad) ds push test or sub push cwtl fist ret mov adc dec addl xor rcrl mov subl (bad) inc mov dec test rorl inc sub and pop xlat pop pop dec jp movl rorl adc cwtl lock imul adc sub push xchg fimul jecxz dec outsl cltd loopne sub ret jmp xlat mov movsb enter push subb aad call lret sbb in fcmovnb dec jp add push mov pop push daa push aad mov push push cli in cld scas hlt adc aas mov (bad) jmp dec pop cmpsl (bad) adc dec test or dec jbe test dec mov (bad) jno ret mov and xlat sbb je add dec movsl jne sbb into push sbb leave stos addr16 movsb into ret sbbl xor sbbl (bad) cwtl push inc popa test das sub js add aad jae adc das je mov dec jecxz or mov mov imul add sbb or add in arpl add jo loope dec pop inc mov mov push push sahf pop mov push movsl xchg scas test push xor shr cmp jno ja (bad) nop push mov addb pop add (bad) or and lret mov rcrl pop mov pop push jns pop sub fnstenv rclb jmp out fmull outsb jl pusha pop imul and xor int3 lds stos les cmp enter movsb int3 jne or jl rolb and pop pop adc cmp inc test jmp sti sbb jl xor dec loopne or pop cli inc loopne or add xor mov mov xorb loope mov or cmc dec dec xor or js mov nop sbb adc add mov inc int3 push cwtl adc and imul fmuls add rorl movsb push cltd sti push sbb mov imul mov pop sti inc mov scas les and push or inc cwtl test mov adc fmuls add sub mov pop push arpl sub js dec je stos cli or nop push xchg jne pop inc sbb outsl jl int3 mov test in (bad) rolb jecxz fadds inc (bad) or sbb inc jge inc and add rcll adcl scas push add push jl sti jg and mov loop add je inc lock add fldenv es dec test test xchg flds pop inc popf sbb jbe outsl or scas xchg and dec pop add nop and imul xor mov mov lods add aas cbtw in xorl fs pusha cmp add fldcw sbbl iret pusha pusha paddsw aam fldcw inc pushf mov push push mov dec fisubl mov ret icebp cmpsl movsb push push cmp mov int3 dec lods shrb jl sbb rcrl les adc movsb and testb cmp xor jecxz jae ret int mov push add inc xor notb pop push cwtl adc xor inc lods sbb cmc add or wrmsr out fisttp lret (bad) sbb inc andnps adc adc out iret add loopne pop sbb icebp cltd loopne push loop dec sbb mov push (bad) mov sbb inc jg or bound cmp dec xchg in and fisubrl cmc cmp sub leave or or sbb mov add jmp sbb mov sbb dec and xor lods adc pushf adc fisttpl or sub or add sub (bad) xorl or adc inc clc sbb pop jae js adc jmp or push and data16 xchg cmp rcll stos cltd pop mov je cmpsl dec mov and pop push xchg icebp and jne lock add jns insl lea xor lods lahf mov pop fwait movsl mov arpl sbb add sub cmpsb test movsb dec js orl xchg and push mov adc outsb add mov lods xchg andl pushf jg outsb pop je push orb ljmp pusha ror push jae or mov insb mov and dec dec jne aas push push mov mov sbbl mov in je xor dec pop inc mov dec pop and adc push mov les shrl xor clc sbb (bad) mov aam fsubp inc roll jne iret in adc rclb add add mov sbb inc cmp sbbb mov add add fcoms push es inc pop push sub (bad) out and int sbbl cmp inc push inc dec sub cmp bnd add (bad) nop les jo cwtl daa add insb or in mov jno (bad) cmp xor cmp rcl push out mov xchg push or add lods in xorb subl lock adc ja rol xor push icebp jne adc or adc xchg adc arpl mov dec pop aad cmp mov or push es lds testl pop cltd mov pop jb scas int3 pusha test cwtl insl aas cmpsl add and aam add mov iret push xor and int3 pop push outsl sbb aad pop mov fld unpckhps test ss or iret inc add add loope push (bad) insl dec outsl gs xchg fs lds rcrl adc sub xor mov int rcr in push or or jmp pop clc pop test lret dec add mov fistpl mov in or adc es mov mov dec mov mov (bad) pop pop (bad) lret outsb (bad) ds into pop mov mov dec push mov add jg sbb shrb adcl data16 pop loopne rol push add rcl inc xlat cmp shrb or test mov lock jae and test mov dec sbb aas adc loope ficomp xchg or mov lock movsb cmpl hlt xlat mov sbb iret inc mov mov add xor ror jle inc add pushf and fild clc (bad) or negb dec je xor sbb lock add cmp add lret or dec test xor xchg dec adc fmull add xor pop adc dec xor inc and sbb inc jge in pop xor cmp adc (bad) cmp sbb dec dec insb cmp mov hlt adc in mov xor ljmp ret stc fcmovne ss cwtl or fldcw fwait push cwtl rolb xor or jo popa and js lahf bound adc xor xchg lret mov mov mov ljmp jecxz xchg ds jecxz mov scas les adc lock add das inc stc int in jle or add imul sub push (bad) (bad) mov pop iret test dec jnp pop dec inc pushf inc cld add gs std xor stos mov xor nop cmp sbb dec xor loope int add dec pop mov sbb addl or iret clc and pushf dec add sbb out mov ds cmpsl dec loope adc mov addl in cmpl repnz lock in das jo jns jl push add imul dec xor xchg ficomp test xor fsubr xor xchg int3 jp mov xor dec jae (bad) cwtl mov push jne xor scas jg xchg mov iret dec ftst push imul mov adc push adc and in (bad) mov pushf add adc xor or lahf bound sub push inc imul cld dec sub dec jno cmp sbb out cmp cmp loop (bad) add or scas pushw adc push fcmovne inc xchg popa cmpb push cmp inc pop loop mov push andl sub inc jns,pn incb test mov inc (bad) cmpsb popa js jl ror fs (bad) sbb xor loopne push adc ja enter roll mov test fdivrs das popa sbb dec outsb leave sbb sub adcl addr16 sub xchg xor jo fadds push jo fs leave and pop push xor js fsubs or jns adc xchg add lcall (bad) popa xor sbb es sbb push push flds adc dec add scas dec push adc xlat sub dec push push add add add imul inc cmp dec inc gs imul bsf js or or jge pusha repz scas (bad) and or sub dec les or xchg fadds push stos push xchg popf jo punpckhdq test (bad) out adc add rcr mov add jns sbb cmpsb add add lods sbb xchg dec mov adc or sub int (bad) ja add lret add sub fldt daa test aaa inc fs cmc mov mov add jmp xchg arpl xor nop jmp mov add mov jo and mov lahf cmp jae jge lock test dec mov int sbb or mov and mov jge cmp shrb jo add imulb shrb int3 xor aaa (bad) or or lds dec int inc mov dec mov and push loop mov cmp dec aam dec sbb inc lds pushf sarb pop imul and or adc ds (bad) test test push pop lods gs je sbb mov sarb scas test (bad) aas sub test cmp aaa popf and push push imul stos into add mov popf and lea dec adc and mov (bad) repz xchg mov mov or nop (bad) mov lods dec pop xchg cmp loop adc dec pushf andl jmp xor lds add fistp (bad) mov add fldt ja inc in pusha pop scas in repz fnsave and push sub mov movsb sbb adc ret push sbb gs sub imul cmpsb gs push ds lea dec sub cmp or js jle xchg and and gs inc in sub mov movsb mov pop sbb fldcw pusha clc mov mov imul fisubr and cmpsb xchg lea in or out enter test add push addb push mov imul dec adc inc clc shl dec lds es push push push pop mov dec movsb movb dec call mov cmp sbb or iret test dec pusha mov mov loopne mov (bad) je or add cmp psubd loop mov adc andl int inc les dec shlb sub add inc hlt daa repnz xchg adc pusha add stc xor pusha nop mov push push sub pop clc (bad) hlt leave xlat inc add ds mov sbb out mov into and fdivr push push push cmc (bad) jno jecxz int3 sbbb mov push mov inc adc pop and mov pop pusha adc adc and xor jae inc test dec inc mov sub jg sbb jmp pop dec in xlat ret jo arpl adc dec gs push add add dec lds rcrl inc jp sub mov push xor jae out fs mov and das (bad) nop ret dec ret inc inc push xor and jl or push shlb push mov sub mov sbb fwait jb dec mov mov inc mov in mov sub mov dec pushf cmp enter dec add add sbb xor pop cmp pop mov mov out add jge dec aam push fdivs sbb icebp jb xchg sbb cwtl test pop shrb mov sub add les adc push xlat pop pop push hlt and jne insb and xor sub cmpsb fwait add pop shlb adc inc pop mov inc sbbl jge sub add addr16 ja rcrl inc insb adc cmp sarb inc add sub and inc iret dec (bad) mov cmp ds and adc pop add xchg push js enter sub add aam int or xor icebp or push xchg out pop fbld push and add jmp push cmpsb add in sarb and cli movsl add (bad) mov push fwait cwtl dec jge roll inc call mov mov adc jns add mov inc (bad) pop mov and fldt push xchg cmc xchg mov mov adc in inc (bad) aam xor dec mov jnp cli dec les mov xor fmul dec out cli jp or add mov cmpsl out and or les dec jo cmpsl sarl push xchg (bad) mov push cwtl and scas or fs (bad) iret lret int stc mov test inc add fildl adc in push in ljmp adc aam orb jle cmpsl push stos cwtl sbb xor and pop fdivl sub push add or sbb mov lret roll push addb addr16 adc into or mov pop inc add jge and ffreep lahf sbb jl jns jl mov add add sbb comiss repnz mov cmp into fsub loop jnp test xchg add mov adc or pop les int3 cmp mov stc xor pop push nop dec ljmp adc (bad) adc inc dec inc test sbb xchg dec mov jle and dec inc jne pop xchg or or fwait movsl and or add and jecxz sahf xor aad xlat add xor test das push roll mov stos (bad) pusha repnz fdivl cltd test dec fwait dec test adc ljmp xchg test ret leave sub push daa or mov sub scas sub pmullw or jo jo sahf and add test push js bound add adc in cmp pusha jle bound clc insb nop shrb mov dec mov dec dec outsb and sbb ret rolb insb insl outsl adc xchg in cmp test rcrl jbe cmp xchg cli icebp mov pop sub xor data16 add (bad) js insb rclb inc pop mov mov (bad) push add inc lret in push inc sbb jmp sbb jg mov test outsb push cmp xor jns mov or mov test inc int and mov enter pusha lods jge mov call add add outsb scas pop in sbb jg cmp subb add outsb pop movsb dec jbe push mov sub repnz mov enter sahf pushf subb add data16 mov sahf int3 dec cmp pusha add mov mov cmpsb cmp add icebp test in mov gs out cltd pushf or flds push jp add jmp sub in xchg xchg inc movsb xchg cmpsl dec cmp clc loopne push test mov mov dec and clc (bad) xor js dec cmp mov xchg add sahf shl xor inc xlat sbb pushf push pop inc in cli add pop sbb xor inc das adc in dec inc dec rclb std cltd cmpsl das or and or sub mov idivb repnz insb cmp pop out int3 inc and es mov jne test adc cwtl dec xchg fadds adc mov or mov lods int push pop ret hlt daa mov dec dec dec push inc or dec inc ss mov dec dec dec jne outsl pop pop add and imul xchg (bad) jbe cmp scas andb daa dec and jl mov lcall inc sbb lock sub les adc add or xor mov cld add (bad) enter jo push inc lcall xor pushf lret fidivrl add (bad) data16 cmp pop push shrl mov loopne dec call add shr xchg sbb cld aam sub movsb lods and ror push lcall xchg and fild inc push jae xchg mov lea mov cli fimul cwtl sbb push imul mov loop call pop lret sbb js jp rcrb sahf push push add cmp cli fsubrs in and leave jge add mov cmpl (bad) lcall add cmp aas insb mov pop outsb add mov sbb sub add add push sets mov out dec cli pop cmp loopne push adc mov mov cmp xor aam les push test movsl mov cmpl jecxz mov rclb xchg inc in jo outsl outsb loopne cmp imul sub js cs add push inc es jo add sub cwtl popf sbb test stos sub mov xchg test fs negl mov and jle mov or pop int orb sub mov lock mov pushf in cmp xor insb and push sub pushf lods stos mov adc sbbb inc mov subl cmp daa subl pusha inc or jnp xor jg pop out sub icebp xor jge es mov (bad) adc pusha inc or in imul jo arpl dec push sub push movl jns inc cmp int loope sbb mov fdivs scas nop or (bad) in fadd stc push hlt sbb iret pop frstor fcomps lret nop mov insb add (bad) sub push test add add scas enter sarb sbb mov pop pop enter dec ss and inc (bad) cmp sub gs or adc loopne push (bad) call (bad) mov mov and or arpl daa and mov or inc pushf xchg cli test add enter add ror sbb inc rolb pop and (bad) ja scas mov jo je les imul cmp sbb mov subb xor xor pop mov ror and sbb add inc dec je js lods pop push orb xchg jg mov mov add int3 mov xor add ret fwait xor leave pop loop and push fcoml dec js clc add ret or dec push mov dec mov mov mov lds std add xchg sub aad test sbb lds mov lea clc xor dec mov out mov js loopne xchg or pop inc pop scas jmp fldt jbe or fadds test mov sub mov lahf mov or cmpsl pusha jl cltd mov pop adc fs leave stc es cld add andb add inc outsl sbbb pop jnp or divb or add jb into out andl es sub adc (bad) (bad) enter and xchg lcall inc mov ds pop add mov sbb push jnp (bad) push cwtl hlt adc jo out xor sub cmp adc push push mov add push push jb or sub and mov aad xchg shlb dec pusha shl shll test mov and jno popf sub mov loopne (bad) add xchg and int mov movl cmp aam adc cmp sub inc in adc and loope adc and pop popf add (bad) adc jecxz arpl inc xchg dec adc cmp inc push sti ret mov or rcll and or loopne loope and mov movsb fldcw sbb jge clc sbb inc (bad) jp push add sub cld sbb xor jmp dec call xor add stc les repnz rcrb mov add leave sbb dec inc fsubrl jno loopne cs pushf (bad) jmp xor and icebp and cmp mov dec adc cltd xchg or jnp add in add and mov fadds sub and jl adcb add inc sti imul xchg in andb push dec dec lock lock mov pop pop clc add mov loopne cli shrb hlt push stos scas sbb inc xchg mov cli movl dec test ret inc and cmpsb into add mov inc sahf mov out fwait sub enter xor cmp faddl pop cs in dec dec pop loope cwtl or and mov add loope mov sbb icebp push and push push mov add in inc (bad) int3 mov iret mov mov cs cwtl lock daa mov push mov adc cmp xchg jne movsb mov andb cmp das or jo lods and mov roll stos lret call (bad) mov hlt sub mov adc idiv ss sub add mov rcrb add adc popa mov push jo clc dec xchg or fisttpl imul cwtl pop push pop cmp loope adc and sbb add dec sub xabort (bad) ficoml lds cwtl inc add leave daa out dec cwtl pop mov adc daa outsb pushf sbb inc mov mov pop jmp imul call arpl subb sbb rsm push in ss jp incl dec inc out cs mov loope leave and fisubr or test cwtl xchg loop xchg sub les in sub into addb negb or lods mov ret add aas inc loopne cmp jns fisubr leave addb mov int pop leave jp pop cmpsl mov in adc mov aam pop pop aam fbstp add sbb je imul pusha mov mov orb aam and cmp mov movsl call mov add cmp aam out jl cmp inc fcmove fstps lgs and jl imul lock clc mov add xchg jecxz sub icebp insl xchg leave mov mov or mov inc mov or or hlt or jnp js cld or stos lods add std mov push addr16 loope lds mov sarb cld adc mov test fdivp in push xor pop roll faddl push bound rorb sub (bad) mov cmp icebp (bad) pop mov sbb and pop cmp push test stos sbb out sbb nop popf int and add clc inc xchg jge xchg xchg xor push sub mov xchg mov inc (bad) or stos push mov (bad) mov mov rorb and mov sbb shrl add push sub sahf push push imul adc arpl or nop movsb movsb pop pushf rolb int3 scas js xchg push jp rorl ret xor mov cld int3 mov mov in add clc in or jge add mov out lock mov lcallw xor jmp stos inc jl or mov gs loope pop lock cs xor pop inc test mov or inc imul lret ljmp (bad) lock push in daa xchg add sbb mov dec adc popa dec (bad) hlt fwait add insb sub sbb xchg sahf xor stos and mov jp (bad) jne add cmp cwtl and dec mov cwtl pop stos push rorl lea push loopne mov sbb pop addb lds fwait rclb and out xor lret cmp pusha mov das jb shlb (bad) mov sub xlat in cmp cwtl adc pop or or repnz lods mov (bad) imull mov (bad) cmp rcr lret mov push nop test addl sbb inc pushf push js mov push mov sbb addl sub faddl adc mov pop into out mov ret test arpl mov dec dec xchg fnop ja pop sbb xchg sub xor stc sti add mov js shll (bad) cwtl inc and pop imul mov add and je jno mov inc std test xor xorl (bad) sbb push in pop rcll lret inc cltd mov inc dec add lcall and sub inc test jmp test push pop shlb (bad) pusha jb xlat cmp in sti inc clc push and loopne mov jbe stos inc stos jg push and repz sbb sti (bad) sub icebp pusha mov insl dec push add push fdivrl adc pop out and add (bad) jle,pt mov inc fsubrs pop adc and and (bad) sbb jno push lock mov lret (bad) loopne sbb imul jg xor sub cmpsl loope call lret fs mov inc mov inc or mov xor dec jbe sbb mov lcall cmp decl add aad mov cmp jl inc out mov imul mov pop bound and cmp and inc fnstsw xchg lret push sahf imul cmp in lds mov adc add lock and mov mov nop add sbb xor lret mov xor outsl or sub adc (bad) mov outsb loope in fsts dec add xor les cmpsb mov mov add fisubr add lods fmuls xor and xchg aad add loope nop lock xchg add out movsb sub pop cwtl add xchg push sbb mov jno add loope (bad) mov adc and or sbb inc fcomp xor pop dec sub mov and dec jno cld jl and inc or stos push shr sub mov xchg cmp or or sbb mov aam and test test repnz imul or mov sarb int mov popfw pusha inc add adc out je into inc pushw or stc mov les nop test xchg fstp or jl inc pushf jno push xor mov in push xchg les out sti jmp adc outsl aam pop sub jecxz in pop repnz cmp mov movb adc ret stc stos add jnp inc push cmp add cmpsb cwtl push scas lcall add jnp jl (bad) mov arpl test jns fcompl js xchg imul mov jno pusha insl cltd flds insb adc outsb jl jmp lahf into mov test pop lea cmp xor xchg or stos int3 push mul pop mov cwtl movsl sbb add sub jne adc cwtl lcall rcrb icebp nop push movsb imul fs imul adc jge test mov mov mov lcall test mov std xchg dec sbb or popa sbb aaa mov pop dec add push fnstenv pop dec data16 mov add fldenv cmp pop or icebp das sbb adc sub pop imull shrb cmpl adc add fcmovb cmpsb loopne movsb loopne jne sbb pushf lds push add enter scas add sub add dec push rolb adc pop std add mov movsb xchg icebp cmpsb inc mov rcl mov cs into xor add mov mov xorl in or int3 aam enter or or fistp test or cmp jbe cmpsb pop jns dec inc pop push jno int3 fs adc shrb mov add jno adc sti sub mov mov lcall adc aas lods cwtl push add je in push xchg test sub dec sbb (bad) enter mov test jg fdivrl sub clc les addl movsb int3 clc inc fldl and pop inc popf aam cmp inc (bad) pop cmp mov push int push add fcomps dec lock pop mov test cmp mov hlt pop lock jmp rorl mov add and sbb and mov sbb ds rorb add shrb cmp int3 (bad) ds rclb es push sbb ret inc push arpl add (bad) push movsl mov or sbb fld or ds in cmp inc scas jp mov aam push pusha cmpl and add adc xchg add imul mov or xchg lds test fmuls dec lock mov sub inc dec rcll clc push in (bad) xor lock pop mov sbb add cwtl pop cmpl ljmp movsb popf in sub imul call xor jo int jbe and and add dec fnstenv jge enter sbb mov sbb sub repnz cmpsl jo sub dec inc fs inc clc pusha add dec outsb sbb stc mov icebp jno mov int3 cmc add insb sbb popf in mov and jecxz es or int3 and xor stc test xor fadds cltd ja pop push inc lcall xor mov adc insb or mov out int xor adc aam mov enter (bad) imul je roll nop (bad) xor out pop jge pop pop aas add mov push insb je pop je,pt decl movsl fs jmp xor push dec fsubrp aam sahf test pop rcrl jg or dec mov sub mov daa xor stc xchg mov add stos xchg and bound xor add fs dec imul cmp mov fsubrs pop sbb xchg pop imul ficompl (bad) dec pop add push fistpll xchg fs push movsb mov sub jno push inc pusha shlb je xor inc dec icebp pushf ss fisttpl in adcl mov movsl lock lods les xor add int3 movsb inc es or and and or xchg movsb adc xor xchg call outsl ficompl sub test roll lds lock jmp adc add je std adc test adc dec or shll adc and out lahf lds pop lret scas jns test je mov dec daa mov out inc and inc adc lds mov addr16 aam cwtl or mov mov nop push mov (bad) cmp dec or pop fs add rorb and (bad) sbb out pop push inc push and nop test jmp rolb mov dec inc add lahf pusha fdivrl cmp mov xchg add jl pop mov ja insb addb add xchg xchg lods add mov and mov sub int3 inc and sbb or xchg fs fld ja in and jns rcll add inc in popf lds inc (bad) lret inc mov mov pop je dec jne add call cltd add incb arpl mov pushf push imul sti mov loopne dec dec mov pop scas mov inc in mov shrl and nop xor add cld and lds in pusha test dec pop jl dec out jb (bad) xor dec dec sbb inc mov mov lcall mov add inc pop movl fdivrl mov rcr inc les mov loop test inc les fisttpl cld aam insb pop mov push mov pop ret cmp stos or sarb and jbe into and lret mov rol xchg insb (bad) hlt mov sbb icebp jno add mov pop pop (bad) xor or (bad) outsb mov iret or xchg in mov dec pop jl xchg add nop dec aam nop movb add push popa pop rorl mov jne int3 or or cs fmul nop mov lock fcompl sub push stos sbb mov nop mov dec jo sar lret mov xor shll shll clc pop test sbb pop and add ds pop sarb pop dec or push mov aam jp jno in mov xor mov sub cwtl enter jl add dec xor dec scas sbb add pop loopne movl gs dec arpl scas test jle,pt (bad) movsb add add mov cld fwait add jae rorb inc aaa gs and loopne mov or (bad) pushf ds jb fbld add mov mov pop (bad) mov addb sub jns dec lahf hlt add push gs jne jo jbe mov leave fs loopne cmc aad in jmp mov dec jno sbb nop adc push add dec push inc adc adc rcll les pop add ljmp (bad) sub add jns,pt fldcw cs mov or dec dec xor and ds dec sub mov int xor jmp mov test ret mov cld and outsl in adc out lcall dec in movsb sub roll mov xor movsb aam test sbb jns add lahf jmp loope jg mov mov and mov or rcrl addr16 ficoml jmp xor xchg cmpsb shll push mov int3 (bad) mov pop hlt xor bound cwtl sub enter subb arpl add idiv es inc xor mov popa iret mov aaa arpl int3 xchg push add mov aam (bad) dec sbb mov push pop mov popa and mov and cmp push sub (bad) push lds clc sbb sbb jmp rcrl pop outsl mov adc pop mov movb push add fldenv xorb mov mov fistp inc sbb mov mov dec jmp push or iret nop or jle out int3 jns imul in (bad) mov addl inc nop rorb test push and mov mov (bad) cmp cmp inc add out push pop sbb daa (bad) xor add xchg cmp push add jo jmp jno fcom iret orb adc sbb les add bound cmc or push and jae movsl xchg push pusha das sub add aad dec add repnz pop jnp out int3 inc fcoms jl jns mov adc test xchg adc lods pop (bad) xor fwait in mov dec sbb dec mov outsb mov and or fldcw inc jl inc je clc xchg cwtl test add call pop jmp push add pop cmpsl cmp push jmp mov and fisttpl cmp mov js lret sbb xor das pop or or out je and sub mov xor (bad) pop movsb iret dec mull jl mov mov mov jne add out dec sbb mov add cmp xlat add jp test dec push xchg jns mov rol (bad) gs sbb cltd mov add pop xor add cmc sbb add jae pop test stos bnd mul mov lahf add imul and lock out xor leave pusha or mov call mov add cltd add (bad) imul mov fwait ds pop add or push daa or sub sahf int scas les loopne pop add sub cs or sbb xor andb rcrb push mov std add xor or xor lock icebp dec inc sti push test arpl test add popf pop stos outsb jg lods add mull jns xlat adc (bad) pop nop enter and pusha dec inc add cmp pop adc nop jno or adc fstpl inc pop fmull cmp aad fistpll cmpsl mov insb pop mov add gs insb stc out cmc add xchg jne sub dec inc lock inc or inc icebp les adc loopne inc add mov xor adc or pop dec (bad) outsb xor xor clc and ds push cmc sbb insl rsqrtps cwtl stc mov jno test cli jle std mov aas outsb flds ja cmp add jle mov iret dec fbld sbb and in push int3 push in cmp rclb adc (bad) sbb mov add (bad) jno clc xchg fiaddl inc push pop iret dec mov add sbb mov fcmovu jge sbb (bad) (bad) mov dec add or lahf test stc add mov xor test cmc xor mov mov fiaddl test dec push int3 (bad) mov add lea test mov mov and push sbb pop cs inc or xor add xchg dec mov cmp fstl addl int3 pop mov pop ret push sti or (bad) aas or fsubrl add imul push data16 jecxz outsl dec js mov out cs add cmpsb and cmp cmc xor sub outsb rolb jmp mov push mov adc add call sbb add or outsl in push sbb cmp adc movsl xor addr16 in adc push jp les test arpl je xor rorb dec xor adc rcrb (bad) xchg (bad) sbb cmp int3 hlt ljmp fimull inc xor test ret lahf cmpsb (bad) mov add lock xor mov add mov lahf jb roll das sbb aam xlat cltd cs aam push lea aaa pop cs lock lcall push pop sbb mov ret mov xor enter cmp pop jne popa inc int3 cwtl test data16 xorb shrl or dec test dec cmp sub push pusha add pop jecxz cmp imul in mov addl pop mov lret dec out adc insb ja mov xchg test add imul sub nop push cltd andl stos ljmp imul inc lret mov sti cmp hlt and add outsl roll sbb cmpsb rol pop or mov add sbb push rcrb fldl mov dec nop mov mov aad cmp lahf inc sti testb iret leave js ror jne or xchg jo (bad) jp dec add ss xchg add mov xor sbb push mov insl jo test xchg pop pop mov les lahf out mov icebp mov mov cwtl and jo mov jbe pop arpl dec add mov sbb mov jg add inc sub jmp jle mov fs sub loop pop add (bad) ds push loop pop popa or in cmc xor jp test dec pop cmp adcb cwtl inc mov js (bad) add insb les fiadd xchg pushf mov repz movsb imul cmc in and sub pop out sub pop jp inc or std add sbb inc and push jno or mov js dec loopne test pop loop pop fwait int dec mov pop jb mov pop shlb call js mov dec or add les add cmp mov push enter add mov cmpsl jne fistpll add or jnp cmp test movsl loopne sub lods adc xchg call test adc rcrb sub out loope popa test inc lret test xlat lock mov clc jg dec int3 xchg pop xlat mov inc add test sbb fnstenv pop loope pop mov add mov (bad) les outsl dec mov lock and mov dec icebp jl xor ja add inc lods add int leave sub xor pop pusha orl lret cmc fs pop loope jmp fsubrl mov mov cmp dec inc sbb adc sbb sbb cmp mov int3 ja repnz clc add ret in out (bad) jno push pop repnz movsl mov stos mov (bad) ss jmp dec xor jmp push lods sbb and xchg xchg lret imul xor jne mov inc inc inc pop sbb xor nop push in cld lock fsubl or xor jp inc bound divl fmuls xchg loopne add xor stos add or push jecxz imul adc movsl add pop mov daa add aaa bound push int3 sbb dec cmp rolb add add shlb sub xor adc jno mov shl popa and mov cmc sbb push (bad) mov xchg adc cltd or mov imul push cmpsl sti push pop mov in push or or call mov sub cld nop push sbb or mov jl pop push dec inc add lock popa (bad) lds push imul xor stc and pusha icebp pop enter or inc sahf cmp pop movsb orl pop iret pop push sbb dec xchg cmp jne adc cmc ffreep push jl add test sub and icebp rcll les cltd fs xchg add aas (bad) xchg cwtl inc jns test xchg add mov pushf into jno fcmovu out xor jne xor or test cmp push and sbb inc sub sub and push cwtl mov in sbb movsb aad and mov xchg cmp push mov pop mov popf add shrb mull in fistpll dec cltd nop es cmp rolb cmp xor pusha add pop mov push mov lods pop xor xor jb out adc jnp cmp push push jno mov adc cmp insl xor adc sbb fmulp or dec pop cwtl mov inc fdiv (bad) out xchg add xor fdivs xchg lcall xor int3 sbb outsl ret add xchg dec aad adc mov mov pop imul mov inc inc pop push cmp insb fmull jb popf sub andl inc movsb lret bound pop add fldcw ds lahf pop push add xor andb mov ret int3 cmp (bad) xor pop jl pushf pop pop lcall outsl or lods dec add f2xm1 (bad) out or and or clc xchg xchg (bad) mov stos sub in lds xorl testl cmp and lret ret jle push mov or xorb xchg mov push xor xchg ja out fdivs and add mov fldenv cmp pop dec sub and mov cmp add popf or jmp mov (bad) xor fs ds dec add adc adc push notl jno inc adc lock mov xor and lret cmp add cwtl roll mov lret aad loop je push lahf mov inc sbb in es jno lret and lods adc inc push insb ljmp fdivs rcrl pop lds dec adc jle inc jo hlt mov pusha sbb xchg sahf (bad) jno pop or int3 xor rcrb add aas call add sub nop xor lods mov cmp (bad) rorb pop or dec jmp nop sub adc xchg push test cmp fidiv dec mov je sbb xor cmp pop fistpl or bound xchg add or xor rcl or mov and pushf (bad) nop mov daa pop movsl xor sbb mov cwtl lds std ds mov jbe push jno add aas sbb lods mov les and out xor outsb faddl pop lock dec (bad) loope cmpsl mov pop shrb inc shrl mov inc andb sbb in in add mov mov inc loop add pop cmp jns cwtl add cmp les sub cltd mov notl test add cmc adc iret mov sub mov fstpl pop cwtl mov dec mov mov or cld jns add sub (bad) cltd je jae or ss jl jo popa mov mov call pushf add mov and or sbb ljmp push sbb sbb movsb pop sahf mov dec jb add iret jl test and leave stc cld xchg xlat in push pop add inc fadd repnz dec lret cmpl xor sbb add dec daa div xchg add xchg mov adc aam and je insb dec int3 dec xor push xchg loopne and in daa sbb sti hlt pop lret mov dec sub shlb lods rcrb leave mov xchg mov icebp hlt call adc imul pop rcr or mov mov mov cmpb pop cs push jne iret dec mov inc das movsb loopne mov dec cld je cltd jo cmpsb push add xor movsb xor jno ret loopne push icebp push mov lods xlat fprem1 mov mov pop test xchg aam jo add mov cwtl or add pop (bad) xchg adc mov rcrb mov rcl cmp adc mov pop rcrb cmp pop add dec jle xchg es mov fldenv sti pusha xor stos loopne push jbe or scas movsb das pop sbb fsubr fcoml xor xorb test (bad) xchg cmc xor (bad) ffreep int3 ja mov sahf and push dec dec or mov and sbb sub pop in sbb (bad) inc jp inc mov enter add fstps in push or lods hlt cmp lock adc roll fbstp (bad) add pusha and test (bad) hlt les dec dec js cli cmpsl call lcall gs or xchg pusha mov jns mov xchg rcrl scas add inc popl das dec add xchg clc pop or dec and xchg mov push add les sahf and subl ret mov push call mov jl orl (bad) mov loope sub xor and test mov or dec jb roll dec xorb shrl cwtl add or fdiv test aad das lods sub xor cwtl insb or test test add das pop dec stos and cmp ljmp shrl clc (bad) xchg les push add dec and je repnz sbbb imul cmpsb rcll sbb int3 and pop add mov sub fwait xchg pop into sbb rorl pusha lds cmpsl ljmp adc inc dec cs in sub add xlat fsubrl cwtl rcll or cs sub dec cwtl jo pop daa push mov sbb lock mov or xor clc sub mov mov adc andb cmp test or cmp mov pop mov test sahf sub mov xor test aad mov movsb fstl movsb dec cmp add mov mov jae inc xor inc add pop push xchg movsb icebp push mov lds or dec lea aas sti sub mov movsb sarl add xchg into push cs test sub sbb sub cmp mov stos mov xchg or stc ja mov dec dec clc mov clc add sbb pop jns pop push ret cmp scas pop mov pop mov arpl aad (bad) xor in (bad) jo nop add je add push cwtl mov jbe fs sub or add imul int push (bad) loop aam add orl inc pop faddl scas int icebp cmp into adc jno nop dec cld cmpsb (bad) cmc sbb sahf scas push lods movsb adc mov mov or insb xor xchg mov in cs sbb imul mov pushf dec ret jo imul mov mov add dec popa cmp mov or mov repnz push pop imul insb addl cs mov mov mov push imul jne orb or subl mov xor insl outsb rol in pushf xchg mov sub ds lock jne and jle leave add add pushf mov mov test pop sbb mov (bad) inc lods lret (bad) xor pop bound push mov arpl xlat cmp and cmp dec gs (bad) mov add loopne aam and push add (bad) jo sbb mov mov subb jbe cmp mov shlb js jg jnp dec sbb aam daa dec adc pop lcall cmc dec pushf je mov dec cmp xor cwtl xchg xorb fimul mov roll out or mov pop inc add push mov mov push hlt and dec pushf sbb sbb stos and add call add enter in sbb jb dec dec test lret mov sahf ror xor cmp and sbbl inc push inc cltd addr16 les gs iret jle or or push xor add dec dec outsl dec rolb pop xchg sbb mov loope push in and pop (bad) int and lret adc xor movsb pusha popa add notb push call adc push fadds sbbb sbb (bad) cmc cmp lds push mov and push fwait outsb out push sub clc pop sbb add movsb jl faddl fs add add adc xchg pop (bad) mov fldcw mov adc mov dec push call pushf and ljmp lahf (bad) xor cmpsb cmc sbb neg inc and mov add in sub rolb test or and add sub jbe mov pusha and sbb dec inc push adcb fistl add sub (bad) ja dec jnp add jge (bad) test adc lea push hlt push jmp xor in xchg lahf (bad) cmp test dec inc cmp cmc or adc inc or and shr enter mov add and xchg sbb mov xchg cmp pop jbe frstpm(287 cmp cli dec jnp ficomp stc adc pop ror push subb add iret pop push mov mov insb dec pop pop mov ret (bad) test xchg mov sarl jnp mov (bad) je jno aad call aas ret hlt mov inc dec (bad) loop push popf test dec (bad) dec ss pop sbb aas test into cmpxchg test loop (bad) push adcl mov rcrl popa rcrb and pusha xor fstl jns add dec mov sbb or dec call cmp and xor mov mov push inc push mov sbb out mov fmuls loope es or push icebp in sbb sbb movsb mov cld fstpt pop sbb les or pop adc clc jne pop enter push (bad) idiv push inc sub mov and jns pop daa or and (bad) ja or dec push in (bad) ss dec or sbb in popl xchg or nop inc test jge sub les lods fimul sub sbb inc pop pop and aas orl aam inc jae mov xor adc or mov fidivr loop je add dec jb jp pop mov inc call xor je push mov lahf lods cmpsb fistp and cmpsl adc stc sub cmp lock (bad) dec mov mov inc ret jbe out inc add mov lcall xchg adc adc push and mov stc inc loopne ljmp repz mov lret cs and lret or nop or aad or testl mov and inc nop fldenv push add or adc les cmpsl and in mov div rolb aas jnp adc mov in adc and aam mov (bad) add cld xor push icebp mov inc jp mov cmp and or mov imul push adc (bad) call sub popa lock stos in cmpsl pop and hlt push add cmp sbb and shlb sub mov add jno subl sbb cmp and data16 dec dec loopne lods scas sbb movsl jecxz xor movsb loop into or push ret pop pop (bad) dec mov and pop (bad) mov ja divl js scas dec ja add fsubl lock shrl and dec and inc cld xchg dec adc pushf push mov mov (bad) repz mov or adc repz ds sbb je addb nop dec xlat lcall mov mov hlt enter pop daa inc pop xor fwait clc js xor out add push push pop lea data16 movsl lret inc mov (bad) loopne add loop mov sbb dec jno int pop out fbld sbb arpl or xor inc (bad) clc mov add sub xchg add adc dec mov xchg pop (bad) xor sar jge push int3 mov mov les jnp scas push mov add push inc and add insb daa lcall test les push loope or dec sbb adc test in fcomps hlt mov xchg inc dec test jb loop call push out and dec loopne or subl loope cmp pop fsubs mov add sub (bad) xor adc fisubr pop mov mov pop unpcklps mov dec xchg hlt mov dec push xor xchg add mov enter test jl add xor add jo dec mov jl or pop xor push andb fimul outsl add or adc les movsl popf xchg add and adc popa repnz add cld dec out out lods jne (bad) xchg jge lahf pop mov popf test mov into sub or fsubrl and or loop hlt into in mov (bad) add sub jg icebp inc jbe out sbb jge jne dec lock sarb or jb rclb subb movsl leave add (bad) or iret pushf mov (bad) mov xchg leave bound not jecxz push push jae inc jl lods xor pop and popf jg clc hlt inc sub in (bad) xchg stc bound pusha out xchg mov or jl test int3 shr jle add mov jb ds or shll aas xchg and and pop and jbe stos loop popa and mov or clc add mov lea dec inc inc and add dec inc pop lret mov add pop aaa mov (bad) aas daa sub or push rol sbb add pop cmpl cld add push rol sbb test add repz rolb xor sbb mov add mov cmpsl repz inc cmp xchg test add and xor dec sahf enter daa nop enter leave test add mov xor add popa cmp jg sbb aam gs lret fmuls cltd mov add cwtl or dec adc cwtl add (bad) sbb pop or scas cmc adc cwtl cmp and and add mov out and or dec lcall ja add cmp imul nop (bad) jo mov lcall inc adcl test inc sbb shll adc mov mov imul push out pop lcall fisttpll jl loope fisttp pop inc cmp ja push pop xlat dec xchg push xor loope jmp push and sti mov mov ds mov pushf loope jp push rorb lods enter and leave add idiv mov mov xchg mov push cmp ret loope enter insl and mov add (bad) pushf movsb or jle out mov sub add mov test dec sub in mov sarb jle ss add out js pushf das mov xchg mov lahf cmp fsub cwtl loopne ss rolb repnz jl or mov inc rolb ja imull ja sbb or inc mov (bad) cmp sbb or repz add jbe pusha add lea cmpsl inc inc jo dec call inc lods mov rolb test mov mov xchg sbb mov adc push iret int ret pusha cmp adc pushl mov (bad) adc dec inc repnz cmp sbbb fsubrs test or clc jb fistpll aam jl or movsb jbe pop add mov mov and xlat add inc jnp (bad) xchg aad ja sbb out or mov clc dec lods call pop push cmp push mov add test scas lea fs call add push add push inc clc insb mov adc xchg jmp mov jg cwtl js sbb or dec (bad) enter lock jne mov and les add push sbb adc sbb outsl xchg add iret test (bad) mov inc push in out add das or xchg sub mov stos mov cmp hlt clc push xchg mov pop aam mov insb or adc addl in repnz sbb jne mov or add inc movsl push add stc xchg lea lods pushf je pushf or pop pop or pop or pop pusha mov jo movsb add sub add cmp cmpsl mov add roll cli adc pop les mov sbb mov add aas hlt or dec (bad) (bad) jge mov in movb xor nop cmp into add cwtl and enter push mov aaa push adcb hlt in fisttp mov and or jnp jp jne sahf xor inc fdivrs or pop fnstsw jo test je push js add push leave in pushf packssdw mov psrld mov sub imul cmp xor xor fs imul lcall lret scas out or clc (bad) repnz mov sub aaa push jg push (bad) enter loope xchg dec add test lret fcmovnu jns cwtl push andb sub (bad) or mov mov sbb fxch test sarb dec cmp add (bad) sbb jne cmp sbb xor (bad) fnstcw test sub shlb add les mov lods mov (bad) test movsb repz psubusb mov xlat icebp fidivr and add sbb mov rclb mov andb clc xchg dec sub jnp aad add nop sub cmp add sahf xor pusha loopne insb inc into mov xorb mov loope stos jb or mov (bad) pop repnz icebp add pop mov xor sub adc add sub pop out mov jecxz and sub adc aaa add pop nop jns sbb les push lds clc and adc (bad) mov add adc popa sbb ds pop xchg pop jb mov add xor test ja ret sbb adc pusha ret add mov or dec repnz jb popa shrb xor popl pop dec adc icebp adc cmp sti out in pop xchg xchg gs jne and in hlt mov sbb enter in mov adc mov pop call cmp or jne and and and fidivl lods jge add mov fsubl push xchg in inc cmp mov lock ss jbe or (bad) sbb adc push sbb icebp xchg xchg leave xchg movsb call enter mov in dec jl add xchg (bad) mov testb test inc movsl pop ret dec mov add jb pop sbb inc xor xchg movsl and adc mov (bad) pop lahf jns and xchg cmp clc cmpsl mov dec cmp xchg enter and pop ss adc mov xchg call add imul insl sub icebp xchg sbb call rcll (bad) jae pop or cwtl imul or xchg test call sbb and hlt icebp or insb and add sub scas and inc adc (bad) mov je inc sbb push mov and adc repnz jmp inc jl mov dec sub shll sahf jo loopne popa data16 push imul sar push nop pushf (bad) cmp stc or ja inc mov add adc hlt imulb jnp bound mov xchg in fist (bad) pop and push call pop repnz lods mov (bad) jne add les lods inc lret jb add repz std (bad) or pop clc mov jo push adc xor cmp (bad) mov insl push jecxz call in movsl xchg inc pop push scas mov pusha or mov ss xchg call rcr rcrb adc sbb fnstsw loope add pop arpl push dec add mov fmuls or mov test cmp shlb cs add add mov mov mov fiadd (bad) popa pop sub loop mov adcb outsb dec jl push dec sti mov movsl or xchg jae cmc dec and popa insb out pusha cmp sbb je or xchg loope jae sub mov pusha mov test ficoml adc in fstpl mov nop cmp xor xchg dec in and add rol mov sub mov add adc mov and inc (bad) cmp push cmp or test sbb lea pushf lods lock ss push inc mov inc negl mov loop or enter sub pop insb mov fcmovnu fsubrl dec test loopne xor push fdivs xor xchg cmp or or div pop adc nop mov push fild sub mov and cli into pusha scas ds add bound out loopne nop mov ja add jns lea pop pop fisubr sbb lldt mov push jge ds mov je pop int (bad) lcall add test cmpb ja popa xor pop or xchg inc outsl insl pop xorl sub cmp jge pop test decl jnp out nop test mov adc pop sbb or (bad) xor test int ret in loop psubq scas icebp add je sub lcall mov jmp or loopne les jne sbb dec pop xlat xor fiaddl jb jmp dec lods add cmpl sahf loop adc inc mov rolb test clc daa ffreep dec les inc or or or inc dec leave clc stc subl lret movsb adcb and mov scas fsub repz add in xlat pop loop jmp push or push test push dec dec cmpsl xor xchg lock andl and orl sbb xor mov dec test inc jno repz rcl sbb lret fistl xor mov (bad) hlt repnz xor mov dec sbb pop fldenv ds mov mov lahf cld and and jle daa mov ss test lods test js dec and dec std add daa movsb or sbb inc jne int3 rorb pop adc xor mov nop jns sbb in into xchg sub test inc mov add lock jge mov or pop inc xchg jp sbb and stc xchg adc in or cmpsl xor or loop add les add je (bad) hlt dec mov fmull pop repnz rcrb out add jle jecxz push shr in addb neg jbe adc xchg test sahf mov pushf xor xchg ja add xorl lods sbb inc pop inc stos jb mov and outsl addl lea fiaddl dec pop int3 mov in dec shlb jge (bad) ja data16 mov subl sub add enter dec jo xor in or repz or mov gs pop bound stos mov out push enter mov xchg add ds cmp or pusha sbb pop div mov jle adc cs add push inc lods (bad) out (bad) xchg (bad) push dec into sub aaa lds ja hlt dec or in out xor imul in pop xchg add add xchg cld mulb push mov push pop push add mov mov jae mov or lods pop sub mov push mov cmp mov add dec xchg xor lcall jo and add aaa nop and je rcr sbb out xchg dec jp add test pop test std test jnp jne xor or mov imul lcall push or orb loop (bad) sbb pop add mov push lods jecxz,pn mov add les scas bound adc js push jnp popf leave sbb insb lods jo dec rorl push rclb sub fwait mov mov jnp nop xor jo add add data16 jmp and insl cltd push add and scas add lea or add pop or fs adc sarl icebp sti mov les decl (bad) pop cmc mov repnz dec and loope fsubrl xor add loope or pusha push or sahf test flds scas fimull mov repnz and in xchg xor jno push hlt push cmp lcall rclb cltd insl mov adc or faddl sbb adc rolb sarl push icebp pop outsl outsb rolb push mov test andb jns and adc dec mov push andl pushf cwtl in les or rolb add xchg add fnstcw enter sbb xor jo add add cltd xor pop push xor or xchg sub cmp bound pop xor (bad) xor jb ja add inc jmp cmp xchg and and sub je pop loop loope adc dec nop sub shll call xchg xor add inc aaa cmp test addr16 add dec (bad) fdivs dec push aad mov pop mov and push add out das outsl fimul popa pop (bad) fs mov sub in bound (bad) xchg xor arpl lret sbb add lea mov idiv shl push mov dec jbe add push cld jnp psllw xlat js insb enter rol js sbb jae push cmp mov cmpb aaa test out bound icebp sub test pop je or mov jns add mov xchg shll push test (bad) in push dec sbb push and fbstp add mov inc push mov and adc call sub mov rolb rcll mov and xor mov xlat dec faddl cmp pop pop mov clc test and enter sub repz mov inc popa mov mov movsl icebp fistpl dec sub push in jns sbb add xchg bound jne lea pop sbb xchg pusha fadds test dec jecxz add mov push test add push adc push jae cmp (bad) add fisttpl sub daa adc sarl loopne insl and faddp iret push rorb mov adc addb cmp (bad) and notb test insb outsl add popa not pop hlt test hlt mov mov cmp mov pop aam aam clc add jl mov add xchg mov aaa rol ljmp (bad) jle aas xchg (bad) icebp pop add push cmp mov aam xlat iret pop and aas sbb add cmp mov adc mov pusha add cmp movsb loopne mov aaa cmp dec sti rolb ljmp and jle jl dec ljmp and fbld dec clc and adc mov lods and sahf add popa into cld push rcrl sbb inc push xor ds lret test daa inc cmp sub xor lea sbb pop sbb int3 sub sarb dec jo mov inc adc mov movsb ds cwtl pop push and int3 xor cmp repz popf mov lea ficompl (bad) lret mov pop sbb add adcb dec cli or sub pushf fidiv js adc rcrb mov add mov mov cmp pop cmpsl or les xor call sbb lds inc pop lea push mov fnop add nop inc sbb sub mov adc mov or rolb test shrl sub repz xorb outsb pushw jle pop js (bad) push cmp (bad) repnz aad mov daa rclb mov pop fldl je add xchg mov mov pop in push sub add inc jmp cmpsl les push scas leave hlt or jae add cmc xor or pusha sub nop xor push aam cli and rcl mov inc mov fildl add in loopne push push and or sbb xchg mov imul hlt xorl ljmp dec and insb test jo addr16 sbbb pop into mov sahf jmp jo inc push push pop fldl aad cmpl or and cwtl fisttpll xchg fs or mov les jl lret orl cwtl mov add jae jne fdivrl mov outsl inc inc xchg fst movl jb add xor aaa push enter test mov insb out push popf add sti jl inc ret (bad) cwtl adc sbb mov sar in enter out testl push pushf (bad) std arpl push imul cmp or sbb xchg inc andl mov fbld ficomp mov xchg loopne pusha mov shlb (bad) stos sar fnstsw add mov lahf lods xchg mov jo (bad) loope mov and imul ret push (bad) mov sub fmuls dec addr16 (bad) push adcb lcall bound cli push jbe in arpl repnz outsb inc lea or inc mov int push insl add lret out addl sub dec cwtl or fcom jmp (bad) push subl clc xlat cwtl adc sbb sbbl add orl pop in adc clc mov sub popf movsl mov sbb push in stc sti add repz adc xchg shrb sub fisttpll je mov xchg or add or cmp pop nop sahf add push cmp mov pop sub aas lcall test xchg sbb lock sbb aas movsb shr sub das ror push mov pusha bound daa cli add (bad) lods xchg sbb pop adc pop pushf nop pop inc xchg add push jno aad adc leave in push wbinvd insl sarb pop jmp mov mov jg std icebp out es rolb add andl test and sub daa fwait scas addl outsb sbbl xchg test sbb shrl (bad) xchg test sub add sub int3 adc xchg jb ds or dec lock jne push inc cmp je push jg loope inc jnp jb je mov js sbb inc xchg cmpsb or xor jecxz int3 (bad) xchg sub test xor add push jb int sbb push sbb nop push push push pushf jecxz jl test clc push xchg push push js and das sbb lock xchg or in mov (bad) dec fistp add xchg sbb or jne cmc les inc int push cmovl mov bound sub xchg andl sub add xchg test rorl cmp push pop xchg add fmulp ret sarl leave jb leave inc pop pusha rcpps xor or mov dec test shrb (bad) fwait push jo xchg add push ljmp dec mov je lds add addb mov adc sbb xchg push jo inc andl lcall testb jae insl add xchg jo fdiv xchg mov or lock loop add dec pop jno jmp sar xor mov aam subb ficompl jae repnz lcall adc into inc dec ret push les js mov ja insl enter repnz jb pop pop sbb jae cmp movsb xorl push das and add adcl adcl push aam sahf std add jns loopne,pt mov mov push xor or cltd push inc and mov push into or subl call and test mov sub js js (bad) and jno xchg out daa test and or je stc or pop pop ret negl pusha xor fcoml cltd loopne (bad) push pushf sbb les cld cmp aaa jle dec sbb xchg sbbl mov mov push cmp mov cld insl ljmp mov adc and add sar out inc stos adc mov push add popl mov cmp xchg inc add dec mov jo xor pop dec xchg ret shlb imul jecxz jmp jns and test cmp (bad) jbe cwtl inc xchg and xor addr16 mov mov mov pushf ds nop pop loop pop and clc push js inc std and add lock add sub mov and xlat and jnp fpatan pop popf stc inc jno or jge mov scas ret mov and cmp inc test mov scas jge repz mov ljmp pop fistpll and aas add or dec xorl clc or cld sub out fwait lahf in mov test dec push and xchg dec add mov out xchg sub pushf sub mov pop leave ljmp add pop gs in addr16 add outsb test in adc hlt out (bad) xor cwtl sbb cmc inc or xchg sub adc aad rclb add test xchg pop les loopne enter inc jb mov cmpsl mov out scas inc shl and and and and add xchg mov icebp xchg (bad) movsb adc (bad) js xor fwait orb (bad) jno push add cwtl outsl outsb or js clc xlat ss insl mov (bad) sub inc les jo pop cmp or adc or inc dec and push (bad) js add and dec hlt in xor add loopne arpl xchg dec and out xchg pop add push pop (bad) outsl sbb rclb adc dec xor pop cmp adc pop in push rcl andl add insb mov pop imul es adc dec sbb mov and jnp (bad) ror es loopne mov cmpb roll inc xor hlt loope shrb pop and shrl popf xlat js push addr16 xchg pusha repz jae xchg test lret jmp in iret icebp add or cmp cmpxchg loopne xor mov bound shrb fisubl pop lret add out mov push repnz data16 loope inc test inc scas iret sub mov xchg cli xor add movsl adc dec pop sbb push aam loop int3 cmpsb pusha loope xchg jno ljmp lds pushf xchg cmp and add lahf dec mov pop xor pop sbb xor inc repnz in xchg out adc mov mov inc rcrb dec loopne jne push push dec push lahf mov insb mov lock xchg icebp xor push mov and mov dec cmc inc movsb shrl push add in push add push push xchg movsb xchg push mov int3 jo loopne fisub xchg test clc xchg inc daa push inc in jge xchg add push repnz mov lahf sub pop adc imul or clc dec loope or dec insb mov mov ja sahf mov dec test rcrb pop (bad) lods push (bad) jl or mov out mov fcmovnbe gs add ret sbb add (bad) (bad) mov cmp push loope fisub popf dec test es inc cli pop into sti rcrb and cmp int sbb fwait xchg ret pop sub and and pop sub inc test mov push int3 and lret mov leave add addl mov stos enter sbb inc les dec aas das (bad) mov lods xchg push subb xchg les mov jg adc cmp or pop pop dec adc inc jo,pt rorb sub dec push fwait js ss jne inc ljmp mov jae lods and xor and mov jae cmp lret sbb inc pop rclb mov stos rolb aas adc mov adc xchg testb shll pop (bad) xor (bad) cwtl test pop enter xor jmp xor dec adc pop add pop stc test test (bad) pop sti sub add les dec daa (bad) push inc je data16 lock mov sbb cmp sub lods cmp and int dec add jbe or daa sub pop jo dec mov cmp and push ret sar out sbb ljmp and mov push je push pop mov scas sbb and adc shrl push sub adc mov lret cmp pop xor adc and sub nop cmpsb and xchg loopne subb scas lret call adc fdivrs lods jns js inc jb (bad) xor jle or jnp arpl repz cwtl mov mov or cmpsb (bad) clc clc clc test dec test push shl xchg add mov int add or hlt test push dec clc orb movd pop sub dec out js sub cmp hlt nop push and xor add daa frstor xorb shrb sti xchg mov mov dec in add movsb xchg dec and cmp fbstp add test adc (bad) mov sbb icebp and testb test cld out jae push jb (bad) sbb fdivl sbb cmp pusha mov loop and ja mov mov call roll jo ja aaa inc pop jecxz enter lods and cmp mov js rcrb pop add xchg inc gs mov push lods add mov mov cmp add mov sub push and es fs sbb mov inc or add mov inc mov jno roll mov int3 out xchg push add jno mov les cmpb adc (bad) hlt mov cltd dec js push stos daa pop cmp and andb xchg fcoml or and dec pop cwtl dec pop sahf ror pop push icebp add popf nop mov mov xchg add movsb clc sub adc add outsl adc call int or mov mov mov (bad) dec mov idivb mov lahf add add or mov pop pop mov inc movsb adc lea enter add (bad) aas rcl mov jno xchg add or or inc dec xor lahf in mov test cld jnp sub je sbb cwtl or cwtl add add mov das or rolb xchg push jmp mov xchg enter push out dec mov mull aad jno jno sbb or js adc pusha rorb xchg jmp adc std leave mov pop enter sub ds popf mov sbb (bad) xchg repz fcoms outsb sbb repnz sbb push (bad) pop and mov or sarb adc push dec clc frstor dec mov bound pop aam xchg pop mov or in and cltd in pop add push gs xchg pop sub or je sub and inc mov pop mov sbb cmp inc mov les jmp and mov test and sar (bad) in push adc and jl mov inc aam mov les add scas and add mulb add mov lock adc add rol test (bad) fstpl xchg add xchg fstl out add dec xchg pop mov xor add lcall (bad) (bad) repnz (bad) pusha mov sahf mov mov insb js pop sub rorb add sub aaa push mov andb sub mov rcrb daa inc lret enter mov push mov (bad) (bad) mov jmp adc push call popf add and add sarb scas cmp mov pop add cmp jbe repz adc or scas sub add fistp or jbe add cmp loop iret jns pop xchg in mov or aaa sub sub jbe xor mov pop je add and mov enter xor pop hlt popl sti movsb or in mov testb aam daa pop jnp nop call shrl daa push mov lock mov sbb das mov ror bound dec add dec pop xor inc orb insl or es mov xchg testl popa ja lahf add mov shll rcrb ds popf dec fwait aam sub cld out in aas mov in pop xchg test xor gs xor dec lock pop add cmp cli mov mov pop addl movl cmp or das pop and shrb mov (bad) push movsl jae rcll shr sbb lock pusha sbb jns fidivrl push and mov inc in pop iret stc fadds or jecxz (bad) mov cmp add mov movsl bound lods fistpll add sbb cmc pop mov dec add sahf jg loope cmpl clc push enter push aam testl add es nop xor push sbb pusha and orl rclb in shll in sub push insl jmp xor mov xor (bad) and (bad) xor movsb inc and inc sbb ficoml dec (bad) out add and aaa imul fs mov inc adc mov sub ret and dec sti pop (bad) xor cld sbb jo add sbb fs xlat sbb mov (bad) lock rolb mov iret call xor push mov cmpb jle cmp xor cmp or mov iret nop pop inc je sbbb adc jecxz cmp pop or fwait mov inc and (bad) push dec cmp cmp add mov cmc jbe push xor pushf aas fsub je divl jo aas jae call mov push xchg sbb xor je sbb mov pop fdivrl adc adc mov enter adc sbbb push lock les lret shlb xchg mov jle test stos daa pop lea fdivrl test jb sbb (bad) mov sbb pop cmpsl pop add inc sbb inc cmp aam dec sti insb pop xor leave loope cmp movsl ficomp add add (bad) jo xor xchg xchg mov mov pop xor popa ret shl lea xchg lods add jo outsl xor (bad) add sbb sbb dec xor mov mov add movsl std imul aas and aaa insb subb xor xchg dec mov repnz inc adc mov jg and mov repnz shlb add mov inc add sahf stos jecxz popf mov cmp jns pop int3 adc ja adc xlat stos out aas jle add insb inc jno adc adc cmpsl pusha sub adc fistp lock pop rclb subl enter (bad) cli sbb add ds fisttpll mov (bad) mov mov lock cmp adc push les rolb xchg cld sarb dec pop mov cs mov push xor pop adc vshufps xor les mov and push stc mov or icebp xorl out mov cmp (bad) sub jo (bad) mov sbb nop or xor xchg and lods in pusha outsl mov or andl scas nop pop rolb in sub xchg jno (bad) mov movl inc and inc leave (bad) or xchg push cmp and sub js jb cwtl into ltr cltd cmp mov push in add stos pop xchg inc les mov test adc sbb and add and push mov jo adc daa nop insb inc xor sbb mov cmp fsubrl cld pop xbegin push outsl sbb or sub add add jne push fdivrs test xchg mov dec in (bad) mov push xor or lret inc (bad) xchg jb enter test shlb cli std rcrb push push cs dec cmp or movsl mov (bad) fdivrs jbe pop inc dec add dec cmp rorb inc pop lds xor mov mov cli jno push push mov or xor adc rcrl sbb call cwtl add add aaa cmp mov fsubl pop push mov sub add mov mov cmp xor popf adc fcoml cltd pop add leave xor nop mov add shr addl adc adc pushf (bad) mov dec mov cmp inc sbb or gs mov lcall xchg mov scas add cwtl sub mov gs icebp or sub cmp call rorb enter adc mov add xchg jbe adc inc fs popa idivl or int mov inc sbb mov sti enter popf xchg adc loopne push dec jl test and fdivr dec mov roll je mov jmp cmp xor sub fucomi push (bad) or (bad) mov mov mov adc (bad) outsl call enter nop cmp or jg adc push cmpsl addb scas into or int3 sti add mov xor add xchg int3 mov shlb xchg fldl stos inc mov pop fadds loopne add cmpsl add pop adc shll mov rclb fdivs sub add shll mov or xchg outsb (bad) mov push subl hlt adc mov jns lea rcl fisubl sub mov test and adc subb in neg loop daa (bad) pop out xchg mov clc mov mov add loopne arpl add repnz cmpl (bad) testl les jns jns sbb les test add and lahf push cmp xchg push and add jg xchg enter cld push dec enter (bad) out add pop movsb mov enter in scas lock inc fwait shrb pop push push dec push mov aas sahf sub adc add repnz sbb pop fisttpll arpl cld or popa and int subl mulb pusha dec adc (bad) leave lock mov sub cmp in inc shlb and inc sub cmc sbb call lahf add je sar mov push mov mov scas (bad) enter mov dec xchg loop add or inc unpcklps fidivr addr16 stos bound inc inc mov lret push enter mov repz ficom hlt or stc push mov sbb rorb xchg add sub fstps sub movsb xchg fnsave loopne pushf and add addr16 mov dec add sti xchg sub dec testb sub lret mov sbb sub mov xchg (bad) aam sbb lods add xchg fucom push nop push pop adc test ljmp add cs shr add add out sub (bad) ss lea push (bad) mov loopne inc push xor jbe dec pop fimull inc je iret jg fadd pushf mov fwait roll and mov mov pop lcall sahf enter icebp push shlb inc mov xchg mov cmpsl jo xchg insl call enter sbb pop mov aam inc mov mov and or clc gs pop repnz mov xor push inc rorb cld mov mov leave and xor inc mov cmp test cmp sysenter sub adc (bad) and adc pop add sbb pop add int3 cmp pop leave mov in std jne and mov pop pop pop daa mov out loopne in add pop mov jp sbb xor fistpl loop fwait push and push xor cmp pop mov inc push add or inc ret enter daa adc add out inc xor int3 je mov pop sbb push and xor push adc loopne cmpsb or cmp inc dec vsubps shlb dec lret pop cmpsl add mov lods mov popa daa sbb dec fwait add mov mov dec ror mov xchg js add mov xchg or (bad) pop push cmp js sub jp or push add andb push mov mov outsb cmp and adc mov or sub pop xchg repz pop mov sub xor push mov add cmp mov leave adc push or mov adc jle loopne add pop sub add cmp aam adc add add sti leave hlt push xchg fst sub bound and sbb dec (bad) in sahf add mov les push add add das sbb xchg enter dec clc jmp cli je out push dec sub cwtl iret add loope int3 xorb (bad) adc sub in aaa sbb inc je add push pop sbb out loopne dec cmp fdivl stos inc leave adc adc pop sub mov mov push enter cmp rcrb add data16 orb lock xchg add sbb and pop sbb sahf movb jl cmp dec mull inc cmp sub mov mov add sub inc mov es xchg sbb or sub scas adc xor cmp or and enter test rcrb cmpsb dec jno jg jmp jne add pop mov cli sub ljmp dec movl sbb mov sbbb push outsb je out mov mov leave pop (bad) xor pop cmp adc sbb inc movsb add ficoml into xor es xchg mov or sbb push test into test outsb lahf js (bad) rcr faddp dec jl aam push add dec mov add pusha iret es je jo add int pop inc pop dec pop lock aas mov (bad) (bad) mov adc adc scas pusha inc fmuls je xchg (bad) xor or imul sub ficom (bad) daa fwait in lea addl add inc jl jmp mov (bad) or and pop xor fildll rol cmp push addr16 lock and fs shlb xor and xchg imul test insl fild outsl (bad) cwtl and sub inc add mov pop enter or and inc leave int3 push shll rcll pushf adc mov or js daa xchg sbb mov xor add fidivr imul repz lea fmuls add inc es xchg int3 notl push rolb sub mov add loopne mov sub mov es shr jmp scas pop add ficomp adc repnz mov pop xchg data16 enter xchg sbb fistl adc cmc (bad) (bad) daa cmpsb enter dec xor insl sti aas adc (bad) loope mov sarl pusha sbb mov into mov ds pop icebp sub rorb jg out mov pop push push cwtl mov imul or add test mov test mov adc xchg pusha and or pop and cmp inc xchg xchg fiaddl fstpl mov repnz (bad) adc xor call cwtl mov mov push xchg mov cmp repnz add push sbbb scas int xor mov push and push lds mov sub jp fldl daa mov jle js aad inc and ja mov jns xor dec (bad) nop sbb jp add pop sti and mov add (bad) adc daa jge insb cltd clc leave mov nop clc stc inc sbb dec mov addr16 xchg add mov pushf frstor jge enter mov mov pop popa adc mov jne arpl push add sbb or or in add (bad) add dec dec fwait add sahf adc push out (bad) iret pusha jmp insl fsts aam and in dec (bad) xor add jne mov fimull add sbb pop roll mov test pop mov (bad) fs (bad) pusha inc daa xchg sub lret js xchg mov je adc push lods aas popf pop ss xchg push js mov test pushf bound mov (bad) xrelease mov test leave add cld xor stc jg pusha xor push mov add notb lods jo imul dec jo cmpl adc mov rclb roll cmp out and inc or ret add sbb push int3 addr16 xchg adc daa call xchg bound sar mov addr16 add cmp mov and movsb jl faddl bound and xchg xchg jl xchg xchg mov push icebp shrb cmp mov in xchg jno or fisttpll push pop dec xor push and fimul xchg push outsb test jne and inc and enter repnz xchg test (bad) aaa sub push adc add decl xchg adc push cmc sub jnp (bad) and add pushf dec int3 inc fcomps jl,pn cmp test leave fxch add icebp mov mov or add xor movb mov fstpl jo call bound add dec push ret inc (bad) hlt rclb adc jae (bad) xor nop push inc and fisubl xor je push xor adc and cwtl daa cs sbb dec stos pop call je push cltd dec test sub mov subl loope test hlt and mov mov add ss xchg add out lea or movl and jle pop cmp cwtl hlt adc add mov jp cmpsl inc aas clc enter push pusha inc mov sbb ficom or lea into call push movsb mov or ficom sbbl out sarl cmp inc push sbb sub lea bound addr16 inc push inc and sub mov mov add sub sbb sbb push shlb lahf push ljmp xchg mov xor push leave lods fs add mov push cli jp cwtl mov and fist jg clc add push lcall mov fcmove fs ljmp loope enter lcall and cld or pop lcall push pusha cltd movsb adc decl movsb cld popa cmp mov dec adc cwtl adc push leave fnstenv mov sbb negl (bad) sub ja xor cmp shl addr16 mov sbb sub dec inc push dec aam mov test sbb or fcoms or or pop inc (bad) outsb xchg enter in movsb push cmp cmpsb rcll lret nop lret daa dec fs das push sub jmp jb addr16 xchg icebp outsb pop clc xor out mov add movb or push jl call pop pushf xchg test inc fsubrs mov (bad) mov dec xchg daa shrb ret daa cmp mov pop push adc call sub je and sbb arpl mov mov jle jb jo je pop pushf das xor popf xor push scas inc stos and cmp inc jl mov jnp xor int add loope push mov lea or roll arpl dec scas mov sbb pcmpgtb das dec js adc inc add (bad) cmp rcrb fnop inc (bad) mov divps inc andl mov loopne cmp mov popa (bad) jo mov fadd cmp jo pop rcll fldl out dec push test in xor test xchg clc push push xchg test cld or daa fildl mov in inc jl xor or mov into jnp enter sbbl stc aas aaa in mov sub stos push adc inc push ret popf movsb inc jg add scas inc fdivrl sbb in push rolb stos xor gs icebp push outsl imul mov and push pop jp mov jmp or add or inc mov sbb add cwtl and pop ja lock ds mov pop mov outsb push and nop cmp fistpl cmp fmul and xor scas xor or orb mov adc test aam iret add out push push xor add inc mov xchg js sbb mov add xchg imul popf xor xchg push mov inc pop xchg loopne dec inc mov and push and cmp fcompl push or lods sub popf aam inc xchg and call or roll pop flds mov in shlb or inc shl dec xchg int3 ds out daa (bad) push push sbb push push enter pop sbb mov nop mov dec cmp test inc fstps (bad) mov clc stos adc xchg or out pop (bad) push sub jp addr16 sbb sbb dec jl shll sub lcall inc xchg jl cltd les cmp fnop inc push subl sahf fdivrs fsubs inc fsubl push andb pop fwait ds ljmp fdiv and push mov sub nop sub and jle shrb loop adc les cmpsl test test dec mov (bad) mov fwait push jle jg mov or push test add orb lock xor sbb sbb enter cmp sub sbb push lcall test add mov or cwtl lock adc pop (bad) sub xor lcall or dec pusha mov dec adc pusha jne adc cmpsl adc and mov mov inc sti jb push icebp add pushf int clc jg and sub adc and subl sub xchg cld adc cmc lock stos xor outsb stos push test sub push cmpsb pop and jo lods dec sarb int3 xchg mov cmp in test or cmp add mov ret inc nop cmp adc clc add aam (bad) cmp add mov jae push mov pop sbb insb ficoml cmpsl cmc (bad) negb clc lahf add sub xor or leave clc adc adc fmuls inc sub ljmp cmp add cmp add sarl add loopne mov in fwait (bad) sub stos push jg pop add inc in cwtl and push sbb jg and repnz or and inc daa test add js call jno push fdivrl push frstor push fs add cmp mov push jp pop jecxz outsb sub fistpll jae push mov xlat pop sub out xchg aam xchg or adc mov mov dec int3 sbb repnz adc dec inc or pusha clc sar inc mov loope in and xor dec cwtl push inc jp lods (bad) leave or lret add xchg mov inc lods push add dec xchg ror faddp inc outsl sbb in stos jge fs pop out mov inc int push scas rorb dec pop cmp pop mov dec gs push call movsb icebp movsb pushf mov mov scas mov xor data16 push and ljmp out dec nop loopne push mov add mov push mov pop add in inc pop (bad) cmp sti loop loopne je inc scas fbld jg dec dec sahf add cwtl pushf adc xor xor gs xor shll and or add sub dec insl fadds leave sbb jae add stos rcr movsl lret push cmc pop or imul mov jmp jae jno or ret call inc add mov mov dec fcom and dec dec dec sbb rclb add pusha rorb (bad) or std sub pop inc insl ret add lods pop push andb inc xchg sti ret rcrb dec pop nop add cwtl pop test popl mov sbb roll sub test call ffreep loopne loopne sbb inc sub inc add adc cs cmp repz pop push lock add inc sbb jg pop cli sbb dec das mov jmp mov loop dec (bad) (bad) and (bad) mov cld push and and add nop in clc rolb jo inc push xor or icebp jno repnz or sub mov sbb mov mov dec (bad) (bad) sbb mov sub xor sub or xor test js loopne in inc test fcom ds mov push push adc icebp out inc and adc mov adc les ret imul add arpl jmp dec addr16 add mov sub (bad) outsb lea fbld dec leave lret les and xchg insb movsb add sarb dec inc cmp sarl das xchg rorb xchg daa outsl js lret mov cmp and nop cmpb adc sarl (bad) test sbb cld mov cmp test add pop mov fstl sarl inc addr16 cwtl push rclb and sbb imul ret sbbl or aas xchg (bad) jg xchg xor and dec mov aam (bad) xchg xor jno pop jmp fstp addr16 lods and add insb adc push nop or mov mov fidivl add lcall out lret mov pop pop sub mov mov (bad) adc cmp xorb sub lock mov into jb push test push sub (bad) movsb xchg push sbb adc mov fsubp push daa adc or dec push nopl les cmc addr16 sub or sub test and add dec enter mov in cmp fsubl pop nop adcl ss stos inc test or sbb push adc jb nop cltd add and xchg add daa andl shlb lods inc xor mov int3 enter add fisub pop leave loope fsubrs cmc movb xchg sbb ss daa popa popa inc cli and pop sahf sub adc mov jno aas or and sbb sub sub imul and pop xchg cwtl adc leave dec fiadd rcr cwtl xor std jecxz pusha rclb lock inc and dec adc adc mov fadds call pop pop cmc sbb addr16 test pusha cmp out adc add (bad) and outsl mov das daa jo lods lods sbb mov pop adc pop cmpsl adc add outsl iret stos lahf inc icebp out push or mov (bad) mov pusha js sarl fimul xchg pop popl ja jl cld and test dec fstpl inc xchg andl add sbb fcoml push push cwtl stc enter daa sub push (bad) xor and pop inc lret adc jns aaa pop sbb add jno dec test mov dec insb iret add cmpl insb (bad) xchg repnz mov sbbb xchg int3 test push fdivrp dec and cld cmc sbb pop lods stc mov jb add xchg cmova add jnp add cmc push testb sub adc loope inc pop scas int3 pop aas sti and sbb inc push inc loopne aas call in adc push xor lret leave cmp bound xchg xchg or icebp lock inc xor cmc xor push pop cmpsl out fxtract mov sub in add fs test pop insb mov fdivrs sbb adc daa jnp mov fldt pop inc xor ret mov mov movsl fldenv mov lods sub icebp dec pop mov xchg dec mov sbb int3 mov pop arpl or and sub loop dec repz enter mov dec js enter leave sbb icebp repz inc dec dec out mov hlt test xchg sbb mov out cmpsl inc fstpt xchg aam mov xchg icebp push mov xchg lock repz js mov clc jo sbb aaa icebp adc and lret push bound jle les jmp clc roll jo int3 inc and xorl inc fsts adc (bad) int3 inc jne clc jge je sbb inc sbb push adc inc aaa add test pop sar test dec mov dec roll add rclb adc xor pop shll cld add (bad) imulb push popa add leave inc sub call (bad) daa lods cmp pushf fsts sbb add out mov pusha xchg inc mov xchg cmpsl add sbb push xchg loope mov mov inc dec mov sbb ficomp mov movsb mov push xor dec sub test xor push pusha dec dec mov mov insb js jmp loope and or sub inc sub pop sarb sub test lods and pop aas out enter push test mov inc or push pusha push adc enter fnstsw cltd jge or and mov push sbbl push cmp das cmp adc inc push ret stc ja jno cwtl insl cmp pop scas fistp and hlt pusha cld push nop int3 sarb popa pop jl add lcall xchg push sbb ret and ret xor imul pop mov cmp add jo pop addl negl xor in je xor in inc pop and popa and jae cmp and cmp xor das cmp psubsb xor or fisubl loopne (bad) pop sarb fdivs icebp inc shr xchg xchg push xchg and push ret dec mov fnop push mov mul iret clc lret add xor test (bad) push pop mov xor jo add mov push pop ja insb js pusha mov push mov mov out pop or je sbb es in sub cmp sbb int cmp and pop cmp jne std cmp mov and push pop ret inc mov add ret and push push push mov pop and roll push fiadd pop sub out add sahf pusha push mov testl movswl and inc xor cmp add jg xor xor sub clc sub xchg mov mov ss adc cmp inc dec fwait enter cmp push xor mov (bad) mov sub inc or ret scas inc adc movl push mov sarb lea sbbl idivl and ror mov test jo push mov adc test or sbb add cmpb mov jmp jo lret push fwait sbb mov mov fidivrl add jmp mov xchg jbe add and mov push and nop adc add aad pop rcll cltd xchg popa (bad) jmp push cmp push nop movzwl mov arpl je sbb les mov inc mov ficom xlat mov shr pop mov test fucomi shll sbb (bad) xor sub adcl out lcall aaa or cmp je pop add wrmsr sub adc add jb mov nopl movsl inc mov xor mov add push (bad) addl pop popa dec ds faddl pusha (bad) aaa out mov nop call xor mov and push xor jmp or pop cmp dec call and sbb add loope jnp cmpsl incb dec adc xchg or xorl sbb je add cltd sub push dec mov loopne (bad) pop xchg sub sbb add sar inc inc fimull sub hlt pop or add lea add mov add push pop or and es popa jge or pop xchg rorl popf sub sbb jmp sbb cld mov nopl push out pop andb notl inc (bad) outsb push push adc adc and adc sub clc adc adc ds sbb jmp add out ja or xor pop or inc or xchg (bad) (bad) dec or inc cmp jmp add sub mulb cmp stc jae ret add mov nop popf inc push ret mov jecxz add fs or pop mov test scas xor mov xchg call stos movsl lret mov xor pop mov shrd inc rol add clc pop cmpl mov xlat xorb adc pop fs xor cld shrb cmc add out enter movl repnz fwait sub cmp xchg add sub and outsb lods inc add inc push jb mov mov push or add sub mov daa jecxz jg push and test stos ja pusha mov adc adc inc stc nop xor and aaa push pop or decl sub daa aad mov sbb add cmp push pop jmp jno mov sbb push add out out or pop jno adc dec adc xchg and adc inc xor les rolb loope mov sub js jno pop sub stc adc adc shrl mov cmpsb cmp mov out hlt rorb add inc or xchg cmp mov adc mov into pop arpl lret inc cld popl ds ja jecxz,pn jmp inc xchg mov pop push and stc jle scas pop popa nop add ret and mov pop bswap stc mov fisttpll pop gs arpl or xchg inc inc adc and cmp es push inc sub test nop inc mov push mov mov popf xchg loopne pop adc inc add jo outsb mov mov push nop sbb pop sbb mov sub mov or sub xchg ret mov pop jle ret sbb jge mov in xchg flds out rol arpl sub ljmp jecxz je sbb dec xchg xor ret jle xchg into pusha dec adc and (bad) xor iret push mov pop xor mov imul dec int3 sbb pop and mov imul add xchg dec jp mov loop fdivrs mov fisubr in push ljmp jnp out cld sbb add je aas rcrl sbb (bad) sarl lcall xchg dec pop outsb xor pop adcb int3 adc outsb js rolb dec xor mov das or inc loope aas dec ficompl pop xor xchg dec mov add mov mov out xlat xor adc js imul pushf dec rolb popf cmp movl and push ja fldenv xor subb imul inc insl xchg or xor cmpb pop dec pop adc xchg cmp and add cmp add or pop xor dec fnstsw adc add jb loop cli fmull pushf jge add xchg leave mov jmp mov icebp (bad) leave mov nop shr adc movswl (bad) arpl mov dec cmp push mov repz mov mov xor into mov mov dec pop sub leave (bad) or bound nop lahf add mov mov sbb enter bound fisubr movsb inc push outsl std or push icebp mov cs push decl pop out pmaddwd inc mov push cmp loope pusha dec enter mov push add jmp add mov lret (bad) push idiv add lcall add xchg push adcl call add push mov addl pusha mov inc adc popa rolb popf fist push dec adc les add lods jg and arpl pop sub push pop jno cmc js subb mov add adc out dec call lret and mov and xchg (bad) or mov andb sub movsb dec pusha push inc sahf leave add lock jae repz dec sbbb add rcrb xchg jae sbb pushf pushaw dec aas cltd jl aaa outsb sbb sbb inc pop (bad) jo scas add fimull outsl imul add sub (bad) lcall inc add cmc lahf das jmp mov fnop adc arpl nop mov mov lock (bad) mov adc sahf div pop xchg cmpb xor and jno sbb mov dec sti push iret sub test mov daa sub pop dec adc or or mov inc push and adc or sbb test dec xchg dec add (bad) cmp (bad) in inc xchg pop xor add pop and mov xchg leave testb test mov cmp mov adc sbb inc pop fisub loope cmp jl mov or cmp shl fdivrs push insb mov add lcall or xchg rcrb rclb mov je je divb add js aas dec mov roll mov mov fstps mov xor xchg mov sbb fs pop jl outsl cmpsb or movsb (bad) repz xchg jmp call rorb cmp mov cld out movsl sub push pusha mov or out jb add and in mov mov shrb (bad) pop push and pxor push pop xchg test out loopne mov and daa mov insl inc xchg bnd pop and jnp mov pop fwait rol xor jnp sub mov sub inc (bad) loope scas arpl adc test loop mov pop pop sub mov add (bad) mov jns add mov inc push pusha sub xchg enter or int xor xchg out jge xor inc inc popa ss fs inc cmp (bad) and add test xor mov mov cmp xchg (bad) push sbb aas cmp xchg nop sbb lods and and pop and add ret pop add loope scas and xrelease scas add lods mov xchg inc xchg fild mov inc pusha sub xchg jbe popa add and adc jbe popf je mov js jb enter loope nop gs aas adc fs mov sub mov xchg jecxz inc imul mov pop js adc aas cld push inc int3 mov fisttpl mov test arpl add sbb xor push pop cli mov inc mov je lods or das js popa mov adc pop imul ja mov mov lods sbbb mov decl mov jmp hlt add stc sbb lds sar clc mov mov es es push or daa dec icebp add movl popa and pop jns dec flds stos cmp add daa jg jne stos lods aam faddp mov xor mov daa scas cmp repz sbb outsb adc shlb fmull addr16 cmp jp fcmovnb rclb inc inc pop pop push xor nop lods in xchg sbb test pop rorl inc into push xorl push dec int3 fiaddl lock lods (bad) pop popa mov xor sub das jo add lea ror cmp mov push test enter xor xor stc lea add mov inc mov add add insb sub adcb adc add push lods add popf cs sbb push popf mov test sbb decb xchg call repz mov cmp xor aaa pusha adc add sub cmpsb faddl xchg fs pop mov push xlat scas out je adc pop (bad) jmp cmp scas aaa aad pop xchg jo xor cmc cmpsb add (bad) adc cmp push fwait and inc in xlat and xor icebp xor hlt dec (bad) pop in or dec fcoml mov jae lahf sbb out les mov mulb loopne add rorb repnz imul bnd push add ret fwait xchg lods aaa inc sub cmp xchg xchg add mov popa pusha cld cmpsb imulb jle adc add mov lea movsl or mov sahf adc fwait add or or jmp daa cmpsb mov inc mov xchg fdivr pop jg mov inc add (bad) negb mov jne push add sti lcall jno stos outsl mov orb push jecxz push mov and mov xchg aaa pop test cmp mov sub add mov jle sbb jmp subl cmp dec aad in mov rolb mov mov fiadd mov movsb cltd mov fdivr or cs jle pop or push xor mov faddl xchg hlt mov scas inc fdivs arpl fwait jo divb add mov inc dec pop popa dec callw loopne adc mov ss mov xchg and cmc push adc fisubl shlb test add pop ret mov mov daa xor in fnstsw dec mov (bad) fidivrl sbb push push test movzwl pop xchg outsb imul shl cmp add in imul lahf jne movsb cmp out das test outsb fwait lods xchg rolb sbb push add mov pop popa out loopne push (bad) adc imul pop popa lock shl adc jbe out pop out loopne cmp sub mov add jnp enter push clc roll ss movsb fisubrl mov or xor cmc sbb nop pop ffree sub out jle fistp (bad) ret adc push das cmp jl sub cmp das sub xchg pop fiaddl flds mov mov ljmp push les pop push push xchg pop cmp or outsl ljmp fildl jl push loope dec and shlb mov popa xchg out xorb pop mov loopne out dec testb pop cmp lods dec sub rorb cmp mov outsb mov les mov call cltd ret jecxz stos adc daa add test cmp aaa cmp cmp adc test add (bad) adc mov loop add mov je add mov sbb scas imul and xchg cmc movsl xchg jnp jo sar loopne adc fildl inc dec rolb xchg add sbb dec pusha and push aam sub sti adc inc mov mov aam gs dec xor popl jnp add out pop and pop push xor aaa or xchg pop out and stos call clc inc pop mov shl xchg rcll pop pusha inc pop sbb popa mov call jbe fiadd mov fcmove lret add add mov xor xor and mov outsl add cmpsb push cld call push loop popf cmp pusha add xchg (bad) addb add jno dec mov jmp pop inc out icebp xor and mov std loopne lods lcall repz xchg fs pop rcrb push movsl push mov add movsb imul inc inc fwait dec mov lea sti mov cmp or add repz add sahf sarb data16 jbe movb mov xchg aaa add xchg push xchg lock jb negb push iret adc dec push (bad) push mov (bad) int3 dec adc push loopne fistpll sbb je out xchg out pop and sbb or pop inc les les adc cmp dec mov and dec dec inc cltd sub scas add iret jae scas and sub ds or cmp mov jne fwait mov xor mov dec mov push sbb rolb imul jne mov lahf cmpsb into jp or adc lods xlat insl xor out pop sub push stc jo cmp in dec inc faddl adc inc mov movsb cmpsl xor sub fmull jae mov mov xlat cmp inc mov movsl pop mov shlb pop push imul inc aaa and andb xchg inc xlat add sub pop push leave cmpsb xchg popa ret sti repz out add (bad) cmp insl pop aam dec add cltd mov nop push pusha mov loope ja sbb dec sbb test xor jbe cmpsb push ljmp pop mov (bad) xor jle cmpsb add bound push popf enter mov outsl outsb push pop outsl icebp sub xor mov jne sbb xchg popa mov cmpl int movswl (bad) and push lahf out cmp lret inc ret mov (bad) fisttpl xorb pop adc push pop pop (bad) sub stc (bad) lods adc jge es inc inc add enter xchg cmp pop add mov inc push and add sub mov inc or dec sbb popl rolb xor xor or das gs jp jne shlb pop xchg mov dec or icebp dec push mov mov sbb add rclb mov pop clc push mov push (bad) xor add test nop adc mov movsb add mov nop xor adc pop xchg mov popl jle insl in or sub add stos dec call and stos sub movsb adc push push dec pop dec aas push push push dec cmc in scas add cmpsl les add loope jecxz mov cvtdq2ps sub mov xchg cs test mov movsb mov sahf mov test push hlt and xchg lods push fdivrl pop inc add nop fimul flds (bad) test or pop outsb insb mov mov call scas inc imul (bad) icebp xor push jnp dec xlat adc mov jno inc mov mov in (bad) je pop jp icebp movsl mov adc fistpll adc push mov pop (bad) push test mov or lea pop rclb lods and mov add inc lock outsl dec call test cmp mov pop cli popa cld insb add pop sub mov add es pop sti sub (bad) notl add mov stc int3 (bad) mull xchg in mov hlt and ret xchg jns adc mov sub cs mov rorb xchg movsb add sbb cmp dec add xchg je insl mov add pop inc xlat aam mov pushf and xorb (bad) xchg (bad) incl or jne add add lea xor mov cmp adc repz jecxz insb mov cmp and pop js and add jmp xchg cmp fs pop out aad add push scas das dec gs in add adc jo or imul push in jg and scas xor fsub fiadd mov jae and and push test ret rcrb push and push mov pop mov jns fnsave rcrb mov adc or and sbb xchg inc daa inc and inc xchg loopne ret orl mov test mov or mov mov push nop or test mov add push les int3 dec icebp sbb popf mov add das aaa pop sub int cmp test rcr fsubrs rorl (bad) xor cli dec out jg push call mov pop addl in jo and add cmpsl dec popa rolb sbb sbb lock add mov jb jmp mov lea andb jbe mov xchg pop sbb mov sbb pusha mov sub inc push push add lcall test jo add sahf sbb das pop push pop mov sbbb add sti mov nop mov insl mov jb cmpl leave pop xchg sar scas (bad) push pop push pop mov (bad) je sub fidiv xchg in push rclb adc mov aad mov popf xor (bad) jae sbb movb add loope pop lcall adc repz sbbb test pusha (bad) in inc lret in jle leave cltd inc jbe std lcall js dec cmp mov and (bad) rcrb push add xchg pusha inc das sub mov pop dec rorl aam xchg add stos test pop outsb mov inc or mov or pop (bad) aaa pavgb xchg or and or mov dec aad dec fwait mov rcl aam cli mov add stc jl mov jl inc insl adc std cmp or xchg sbb jle nop inc or cmpsb imul and sti xchg or and lret pop inc xchg xchg pop or dec xor movsl imul scas push movb and mov and cmpxchg ret aas sti mov mov (bad) out sar xor fcomps mov adc adcb pusha sub andb or pop test fucompp inc hlt mov xchg aaa inc add and mov dec dec mov outsb mov popf mov mov pop int3 lods mov rolb jno mov dec pop pop (bad) cwtl dec pop push lret add cmp inc test cmp mov andb adc loopne aam les sarb ljmp enter dec (bad) fildl jne or add fimul popf test mov jo jg out mov int3 sbb out and popf (bad) or daa int3 xor adc push les mov or add frstor cmpsb test shl pop fs adcb fbld cli frstor xchg (bad) dec outsl daa push push push or aad outsb push push add or push das add add push sbb add pusha dec mov shlb push popa xchg sub decb jg add inc mov pushf mov jns in es enter fs pop push sbbl inc jbe int and cmp adc mov adc adc cmp sub shlb das jl sub aam and mov cmpsl stc inc dec xchg xlat mov adcl lret lods into pop nop fcoml sub mov lahf mov fwait lret fnsave dec fimull jp push bound mov repz add lea aam sub andl and push pusha adc pop and or (bad) hlt add sub daa jns or inc inc pop mov scas and jmp or jl loop aaa add mov adc xor lret cs out mov or (bad) mov popl sbb add (bad) dec pusha add aam fldl (bad) add dec loopne cld xor add or add mov pop push fstpt cli add lods dec push outsb outsb into push jnp mov pop xor rorl bound mov push stos lret inc cmp (bad) repz or sbb cmp add mov test jo inc pop mov push and cmpsl and xor rolb mov fsubs out pop daa mov stc addb inc ljmp adc inc cli cmp xor dec mov loopne mov gs leave roll push (bad) dec add hlt add xor fsubrl movsb popa clc dec dec sti int outsl outsb jne mov pop les ja xchg xchg into mov dec add sarb mov adc mov mov outsl icebp mov clc outsb mov xor inc inc mov gs (bad) dec pop add loop test into stos (bad) ljmp sub call movsl xchg imul sub mov pop pop fwait test cmp xchg or fisttpll enter rcrb xor test gs add lods jg inc (bad) aaa aas andl inc dec pop lcall sub or mov xchg aaa (bad) add mov pushl cmp push inc or dec popa adc xor or mov test in adc das ss sbb xor dec mov add mov pop add mov add or (bad) xor sbb mov add xor test push cmp mov push push add add shl pusha xchg outsl faddl sti out adc ljmp dec js inc dec pop outsb push ljmp or inc daa inc lock imul stos in adc test cmc push rcll jne insb jo or adc orl mov and adc inc or pop add and stc jle gs aas fwait lods (bad) loope sub call adc xor add add pop jle aad or call rcl pop add and mov lret add jl pop or lock pop test or int3 call sbbb int3 loope or movsl in and roll push div pop xchg lcall mov gs fs sbb leave and xor pushf or in or lret xchg out mov push pop pop rorl jp add divl lahf (bad) lret cmp rorl loop int3 out pop call mov push clc sbb pop shrl fs and xchg sahf clc push sub xor in pop add jae rcr fdivs xor pop mov jmp or mov mov cli into test cmp repz xchg ljmp cltd push push cmp (bad) mov fsubr xchg das adc jae add mov jnp xchg jge inc xor push ss push jnp lods adc mov test (bad) jp pop adc das les out cmp cmp mov out mov add cs push mov (bad) ss push in and add add and mov mov add sbb or xchg add sub psrlq cmp jno lods js add sub mov mov xor add cmp hlt add imul pop in mov cld jbe add pop push orb in pop and iret scas pop cmp xor test xor call or adc mov aaa or aam push add fs or jg dec lods mull push mov sub les add test sub aaa scas (bad) lea add orl push push pop outsl or xchg lcall xlat dec lds pusha mov and repz pop dec ret xorb test mov xchg add popa xchg cmp ljmp loop test adc dec jp lcall lret xchg xor shlb sbb add std pop pushf mov fnsetpm(287 shll pop dec dec add in inc or aaa cmp jmp or mov pusha loop mov fisub cmp or js pop push push inc loope cmp repnz jmp cmp faddl das sub and mov mov rcrb mov cmp sbb push push push xchg aaa xor xor leave dec fcmovne andb jb rcll jo call and lock pop and data16 xchg dec (bad) sbb insb cmpsb es or pusha mov scas adc xchg cmc mov sbb or call mov mov adc mov lods into mov jle mov fwait in js cld les mov pop adc sti xchg add sbb adc xchg dec and sub stos or sub out and mov (bad) xor ss ror jnp pop pusha mov shll nop es dec mov mov xchg add in fwait xor inc stc fisttpll sbb add xor mov add scas cmp jl (bad) sub inc addl mov jno add mov add jne arpl push jmp xchg sub xchg mov repnz mov loope stos push or sbb pop enter fwait inc jb les add into stc sub insl lret (bad) push xorb cmp push adc jmp sbb outsl clc pusha pop mov pop pop jo js outsb jo or insl les mov jae jp frstor inc bound aad mov mov shll inc sbb and sub or inc pop xor insl lahf loopne or mov subl cmpsb shlb hlt hlt dec lock adc sub mov dec (bad) hlt cltd mov xchg das push pusha fs jl cli loope clc aaa daa mov aam mov ja clc nop xchg add movb bound add repnz adcb mov mov mov or and pop xor add add mov xchg push pop sbb pop neg lahf daa lock mov inc aas and bound cmp leave mov pop lret adc dec adc loop adc cmp add roll stos inc inc pop push leave push add adc xchg xchg int3 mov andl add sub pop fistpll int3 jns sub js loope cwtl lret pop cld repz mov add push mov test test (bad) cmc mov jmp mov fwait dec adc lds out outsl and push jbe cmp subl adc daa inc sti push js (bad) nop fsubs xchg out mov fsubrs pop mov or dec movsl jae jo pushf or push adc sbb mov inc add pop adc cli popf fidivl stos scas adc and pusha daa push in pop rcl les mov adc cmp mov lods jno mov repnz stos (bad) pop xor jg add adc xchg subb test in aaa rolb imul ds xor adc add out call mov out sbb cmp add gs aam or in mov outsl jmp pop sub mov hlt rolb push add push push nop ds mov mov fld daa mov xchg mov subl and mov aam xchg push ss push jb mov fstpl jge add jo push add ret adc rorb cmpsb inc adc lea inc pop fimul push jg out test lret and mov sbb jns and das jb pop push enter sub popa aas add sbbl dec pop sbb inc cmp xor roll inc imul cmc in sub lahf pop mov and push lock push jb or pushf mov gs lds sub add cld imul faddl fnstsw jle inc cld push pop xor outsb stc or jo mov or mov ret hlt nopl das lods loopne shr add dec subl (bad) mov pop cmp xchg mov xchg sbb scas insl daa out inc jb lds jo test cmpsl stc jb mov xchg xchg xchg mov cld out fwait movsl push mov add lea xchg enter rorb lods adc (bad) mov mov mov aaa add or pop mov loop aam fdivrl pushf fildll adc sub dec addr16 jl jo mov xchg lea and adc pushl sbb or sbb aaa or mov or stos movb sub mov lods jecxz mov insb cli xchg pop sbb adc aaa repz (bad) xchg adc mov inc push or adc mov dec pop pusha aaa icebp orb inc or and es loope (bad) loopne cmpsb aaa adc sbb in outsb into pop daa mov xchg leave sbb sub mov pop or adc xor fsub or inc add inc out adc mov cs or pop xchg inc xchg stc decl pop aam xchg sbb mov mull xchg shrl and repz js jno add mulb cmpsl push xor movsb pop xorl js subb xlat or sub call popf std dec sbbl test add push movntq inc out jno mov ss dec lock sbb jns lock sti das (bad) push in pop ljmp add popl add sub arpl aaa sbb rcll iret and outsl pop fistp mov mov aas adc or mov inc js das loop pop sarl sub es aaa imul adc pushl out fidivrl lcall leave push cmp add outsb xor add mov jne lea jp jo dec xlat mov pop xor test popf repnz add add sub inc int out sti adc out in pop (bad) cmpsl mov inc bound mov popf aas bound cld xor sub insl bnd jb orl lods xor mov mov repnz nop inc fucomip push sub add in scas and xor inc out push shr mov prefetcht0 pop movsb cmpsl out jmp ss fs pop sbb sub and sbb adc push and adc xchg pop pop lret sub push test hlt mov mov cwtl xlat mov cmp jl xorb mov mov add mov sar and leave push or cwtl pop xor stos inc jne inc mov mov pop ret and es popf incl push addl (bad) call fsubrs roll pop pop lds push add mov push push arpl (bad) aam popw pusha add addr16 out mov add xor mov inc cmpb mov mov inc stos or sub sub cmpsb add jo pop or icebp lods rcll call les mov in sbb (bad) fwait mov lcall pop cltd cmp sub (bad) xor cmpsl pop and sbb inc add not loopne xor push (bad) fisub stos push mov js scas push pop and shrb cmp outsl repnz push jecxz xor out inc dec lods loopne jp jns popf cwtl sbb inc add inc adc in add (bad) jge push pusha dec fwait shrl fs inc push fwait test xor mov xor fistpl push arpl cmp mov and push mov and loope sbbb mov and sub addr16 push add addr16 jo inc pop ds iret loope mov sbb inc (bad) mov or mov and fcmovnbe (bad) xor add add inc or sbb sub and or ficoml rcrl add xor adc inc fisubr xchg outsl push cmpsb xadd xchg jnp pop or mov lcall int (bad) imull or enter (bad) xor jo add out dec pop adc dec xchg stos and test sub push pop xchg inc js popa lock push inc xchg les nop fistl xorb xor cld add and push insb fiaddl repz les (bad) int3 je xchg xchg in adcb stos add frstor jmp adcb push dec xor sbb (bad) int ret xchg (bad) jbe jle lahf test jmp push faddl mov lods popf adcb add xor lahf out xchg sbb popa bound das (bad) fsubrl rolb (bad) repz xor or xchg mov pop push leave mov int xorb mov sbb cmp xchg in dec cld mov test mov jmp push dec lock fninit (bad) jb (bad) xor lret dec stos jp jmp pop aam in and je mov lods rolw leave push jo sbb add xchg pop std and pop xchg mov (bad) adc sbb sahf rcll (bad) sub pop dec nop lods mov sub xchg push xchg xor and (bad) xor int3 aas xchg arpl subl cmpsb jg stos ret add push lcall jl lret sbb lcall xchg or dec call int shrl mov xchg fistl push shlb mull iret xor pushf fiadd mov and sbb add ret xor push xchg lods mov sbb push out in inc xchg adc icebp in cltd mov jge imul roll pop mov jecxz push mov adc int3 stc jge or mov sub mov pop and inc dec xchg push dec add adc loope lret movsb adc or icebp xor in popf and es das and mov lods sub out mov adc jmp push mov mov add and jb loop enter repnz or dec pop test adc mov cmp push dec add push pushf pushf aad mov movsb iret jge or pop xor add jbe mov (bad) adc adc sarb jmp mov jl mov repnz mov je push sub fldcw inc in hlt pop add in mov push lea dec xchg mov add add jae add pusha pop push and push inc sub add inc xor add sub test cs jns add mov mov xchg icebp pop pushf sbbl insb push pop mov (bad) ror jl inc push stc pop cs popa insl std test jmp fcomi jo and cmp jp or mov enter mov xchg inc (bad) mov mov dec cli xor sub mov or in mov iret xchg jg add add push loope xchg stos jp jg mov xchg fsubl es mov stc mov pop adc testl out add add div repz add int fisubr push test movsb adc mov cld pop daa push fs mov hlt xor and inc xchg push cmp lods pop pop mov loopne stc push add lds push les mov mov pushf inc xor xchg pop pop xchg (bad) push add inc loopne pop mov bswap pop in or ja cmpsl pop out pop test mov xchg sbb andl sub loopne in cmpsl mov (bad) fildl mov enter loopne pop push out scas push sbb xchg pusha clc cmp cmp cwtl das adc xchg sbb add pushl mov push pop mov div sbb mov add or xorb cmp push incl pop or dec les inc ror pusha loopne (bad) icebp add push mov pusha stos in push push xchg add cmp repnz or scas mov push push pop clc mov lret cld jecxz or add mov mov jb cwtl dec xchg add cli in mov sbbb loope repz daa dec aam roll inc lret fcoms xor roll cmpsl or subb inc loope dec sbb nop mov xchg cs or std add aad push (bad) push (bad) mov mov jmp mov add sub (bad) test insl test dec bound dec cltd ljmp xchg lcall push xchg mov push add xchg jmp repnz lcall push add popa mov outsl jp das icebp mov gs adc outsb stc fstl add mov push movsl nop cmp push push lahf imul or mov pop repz or test mov popa push inc push jecxz (bad) mov ss (bad) pop mov cs cmpsb (bad) jl cmp lods lds inc mov stos (bad) inc fbstp adc or add mov popa dec in jns inc or into cmp test int loopne mov lock lret pop out jmp inc add sbb sbb add adc dec clc loop pop add iret inc js stos pop nop outsb outsl add lods xorl mov pop push add and scas sti ror adcl sbb sub mov mov xchg xchg push faddl jg leave add xlat xchg ss popa inc sub cmp xchg outsl jp pusha lods cld in aad xor rolb in cs mov cmp pop test inc aam lods or aaa pop inc daa xchg dec pop adc pop adc pop fidiv jne inc es pushf fiadd pop leave (bad) hlt subb addl call add cmp add dec add cmpsl mov inc pop int3 mov push mov pop xor int3 pop addl mov repz loopne iret mov jns add je in cmp xor and jnp stos cmp pop jns jbe and cli xchg mov hlt fiadd mul mov je (bad) dec cmpsl inc sub movsl shr imul jo inc roll jne out dec adc mov enter jecxz sub leave pusha out mov hlt add jle mov or and (bad) lcall dec orl sarl leave and (bad) dec xor lea aaa cmp push ds sub or jo (bad) and xor xor out fstpt andb xlat cmp sub in lahf xchg lock cmc cmp xchg rorl mov sub mov cld cwtl push pop jecxz dec pop and xchg add push push clc loop scas xor mov inc mov inc add add dec xchg test mov rorl sbb lock adc aaa sarl mov and push xchg pusha lods cmp test adc xor xchg cmc mov add push mov cld ljmp jae rclb push in insb gs and clc or add (bad) mov dec adc incb inc cmc rcl pop aas inc add add add out mov or lods outsl pop add inc data16 sbb cmp xchg sub int sbb sbb dec outsl sbbb and sub (bad) in std adc push mov xchg lahf outsl push jmp jmp fsubs outsb in push out dec sti mov or pop pop xchg add stos inc ret sbb adc test pop lea adc lahf lret lods and (bad) popf sbb ret and add in cmp add cmp push xchg repnz mov int (bad) adc dec dec and daa push (bad) loopne (bad) jb add or outsb add ss add call add mov call ja pop cmp das jp arpl xor jge add out cmp and int3 cmp dec push xchg loopne adc or mov pop xchg push mov xchg adc leave pop push orb and sbb adc repnz pop (bad) shrb cmp mov mov adc aam sbb inc mov pop cld pop popf adc inc ds and adc loop add lcall dec sbb leave push rol bound mov in les push stos pop mov push mov add aas and popa jge push pop or decl pop (bad) loop (bad) test add mov mov pop nop push div test nop scas or and push add rorb cwtl sahf andb mov (bad) jp add xor push mov pop and mov lods (bad) icebp test (bad) xchg push scas xor pop je imul (bad) insb mov sbbl pop inc test dec fadds adc out jo fisubrl out or mov and or cmp inc leave test sub pop out (bad) cmp dec mov pop sub imul jmp cmp adc popf lret and in push fistpll jno jmp clc dec xor add xchg and dec cld enter movsb mov bt testb adc clts int3 mov jae movsl sub jno mov adc inc mov mov fcomps xchg ja push mov sbb ret push and jne (bad) das fstps sbb pop add sub jmp inc push aad push push in add movsb mov insb (bad) push (bad) push mov movsl adc inc or inc inc test aaa add arpl or sbb inc pop dec ds cld xor push mov jae add (bad) pop push xor mov fldl popf movsl and jnp mov pop xchg push mov inc rcll (bad) data16 divb inc xor pop add add pop xor add addr16 mov pop test divl xor mov stc xchg test dec add fsubp dec outsl and out stos pop push inc orl and sub xchg mov or adc push push add mov inc call or mov pop popf sbb inc mov adc add test mov mov daa and in faddl xchg pop cmc mov add nop xor pop (bad) imul cmp dec fwait clc mov (bad) movsl adc jb add pop adc mov or rclb sbb xor loopne lods popf and loop and popf jne mov adc mov das jne mov lds inc pop or mov in xchg cmpsb jae or or push pop mov mov repnz lret lret push pop test repnz jge pop sbb mov movsl je incb jns ret sub sub jecxz pusha sbb aas cmp push pushf insb mov rcr adc dec xchg pop mov mov nop add and adc push out mov cmp ds lock mov mov xchg into cmp mov (bad) jmp rcrb repnz sub inc mov bound mov aaa mov mov xor mov or js xor jmp pop je push sub mov das jo mov push push les xchg push cmpsl gs sti pop xor sbb and mov mov mov push stc mov out xor xchg push aas mov push jbe mov xchg imul popa pop push pusha push xchg sbb xor pop xchg and iret lcall pop shrl xlat repz out stos adc rcll cmp push pop ss inc insb xchg mov cmpl aad shrb push dec mov out imul (bad) call jge push add repz mov mov fwait and ljmp push icebp or jecxz movsb sub pop loopne out ljmp dec dec pmaddwd cmp cmp in jnp outsl stos cmc aas pop clc lods xchg add pop call inc pusha cmc cwtl and add jne sub (bad) push dec push mov pop mov xchg cs xor sbb fbld outsb decb in mov leave sbb sbb mov in pushf cmp outsl pop inc fwait mov inc or and or repz jmp repz iret je xchg adc xchg ss shll sub push repnz push mov sub cmp lret jbe mov add sub sub add leave stc sub mov sbb jo scas movl aas sbb pop lahf arpl jne test inc pusha stc out cld pop test xlat xchg cmp sahf arpl adc mov dec dec popa std aad xchg mov stos nop adc and xchg inc sub scas cmpsb pop mov xchg rcll fs cmp fimull add test stc pop xchg dec mov rolb les xor pop nop cmpsl jbe fiadd add aam cmp mov pushf mov cwtl std sbb or imul dec cli in and cmp add aam out loopne cmpsb cmc xchg mov add outsb mov pop mov jns jno arpl or add add mov aas int3 (bad) xchg in incb loop dec push jl xorb sub xchg in cs push push and and add mov fdivr dec sbbl jl imul adc cli add mov in push cwtl and lock out shr inc sbb mov mov outsl adc push pop xchg outsb fdivs test rolb gs iret pop mov xchg adc pop push sbbb aam push insb add cmpl into call gs js roll aaa mov jno das xor mov iret mov cmp addb mov je popa push sub xor inc mov pop movsb dec (bad) add adc mull jl es repz mov repnz sbb push cmp repnz mov mov andb mov jns mov shlb loop ret mov and mov add sar and sub xor (bad) lds add or xor inc stc popf mov lock jmp (bad) mov das or pusha pop xor and jae sahf ljmp daa pop popa pop xchg xchg push fsubrs mov roll jmp and ja dec lahf jnp js sahf or pop mov push adcl cmc xlat cmp xchg xchg in xorb pop and cmp popf jmp stos cltd sar mov jmp (bad) jns addr16 popf sub xchg test pop (bad) sti xor cmp push call mov mov dec sbb mov mulb hlt add push dec addr16 in xchg mov or ljmp (bad) xor dec mov adcl cmp pop cmc cmpb add xlat arpl push add xor ret or push jle faddl push and fimul add lds ljmp jecxz js add mov fdivp push js in pop mov jle and add lds cmpb dec clc fsubrs mov add hlt fadds out sub and jno or aad out fldcw sub mov pop adc add lea test xor aaa sbb add sbb (bad) into pop jp inc mov push or cmpsl mov cmc out dec sbb sbb mov inc fcmovnu jmp push ret aad or mov icebp movsl cwtl ret hlt fstpl push jo sub mov inc push scas push dec ds sub sub repnz repnz mov sbb loop pop add cmp xchg mov test sahf cmpb and push ret cwtl inc (bad) roll (bad) call adc or mov sbb fdivs fwait (bad) (bad) jno adc pop dec (bad) les pop mov pop add loopne cld push pop jo push add cmp or shrb mov test pop pop mov or mov pop leave clc lcall adc hlt mov and jl cmc mov into mov dec out and in mov repz adc adc mov xchg popf mov pop cmovg mov loop and add std cld cmp jle addl mov scas push dec fldenv xor add pushf imul or pop test push sub inc stos andb mov popf add pop insb jmp inc and inc (bad) push mov mov sub xchg xchg jge and sbb popf repnz or dec rcrb lahf shlb and push cmc pop popa xchg inc je mov push xor jl jmp movsb add mov fsub roll push enter adc (bad) xor sub pop and xorl add cltd (bad) xor nop cs sbb cmp mov test mov nop mov xor out (bad) cwtl mov mov lcall add xor arpl cwtl inc cld sub adcb and cmpsb addr16 pop mov stos lds fsubs inc adc jge dec mov add out sub test bound sbbl lahf insl popa sbb add in sbb je aaa xor pusha outsl shl mov cmp jns and sub add xchg or push insb mov add or jp in addl imul popf cmp push cs adc shll sub cmp loopne pop ret xchg jb adc sbb mov cmp sub dec mov or mov mov dec dec roll mov pop aas mov aas movsl cmp sub fimull mov or mov jae int inc jbe lds and lret cmpsb sub fcompl jo addl xchg mov stc add jne in pop stc ret insl loop push mov notl andl ficom mov sbb jne movsb lock adc pop push test xchg mov pop in cmpsb dec add mov push (bad) (bad) and xchg rcrb pop push aam ss and jbe and push xor pop mov fdivrs or sarb pop divl ret pop repz mov jle add adc fiaddl int3 outsb adc or (bad) cmp popa or dec xchg int xor pop rcrb cmp (bad) xor mov movsl pop jecxz mov stos cmpsb jmp xor pop (bad) mov arpl pusha jns mov mov mov push push xchg (bad) lds andb insb lock iret sub push in sub jle icebp (bad) rolb mov xchg push jge aaa mov daa jmp sarl cld inc or and mov lock inc or sub imul push out popa test cmp in (bad) xor hlt add movsb xchg aam push jge loopne sbb jae aad ja push movsb roll push jge movsb (bad) cmp stos jmp mov test mov and jns sbb or or fild xchg xor pusha insb popf sbb xor inc sbb data16 (bad) or popf shll mov leave push bnd popf push jns pop and inc xor pop outsl jmp das sbb fistp iret movl das and mov add and mov jmp mov ljmp out add add mov (bad) out adc jp in outsb fildl rcrb jmp xor mov jnp pop sbb popa or out (bad) lock into pop out dec rcr add popf push mov dec mov stc xchg push jnp jle xor std pop jl xchg mov sub dec fimul stos jno in outsb out mov xor jecxz gs mov pop mov lret ds mov sbbb xchg addl movsl mov mov mov mov push mov add jbe mov jae cmp mov mov mov jns fistpl les add les inc and nop jne add push bswap xchg push rcr xchg sub mov lea pop add (bad) loopne adc sub and pop lock bound sub inc xchg mov adc bound popf xchg call orb pop aaa push xor pop dec out mov roll addr16 sbb jmp (bad) mov pop int push loopne xor mov add dec mov lock hlt xchg jne xlat aas pop pop cmp add push mov ret push push add enter pop enter xorb out cltd mov rol pop (bad) (bad) ret push jecxz,pt xchg and call sub (bad) sub mov and or add imul jmp cltd pop xchg fidiv test adc mov icebp pop icebp in ficompl bound pop leave (bad) lea sub pop es inc decb and sbb movsl add lock lods mov pushf adc aad loope lcall mov or imul sub mov cmp dec in stc call jg and out cli sbb lds mov add fisttpl push imul inc sbb xlat daa subl aaa out mov dec scas sub xchg cmp into out add mov loop xor in push cmpsb mov and mov rcrl test scas inc xchg fisubr sbb jb add gs adc xchg dec push dec add inc jmp xchg and fsubrl mov fs inc mov cmp int fcmovb test inc fsubs xchg pushf adc pushl inc (bad) inc lret jmp es (bad) dec cmpsb jns push cmc aaa push mov add or lea mov mov mov jecxz jo mov jno popf xchg jp xchg out in or stc add push cmp jnp repz popw daa mov dec jl and pop les mov fldl sbb jns lret fisubl fsts stc inc test adc adc imul dec out cmp mov inc or adc push pop push fxch enter jo or xchg lret adc adc push xchg mov push mov sub (bad) mov mov mov dec jns mov frstor mov test sbb add rolb dec bound mov mov or int cltd test mov mov add ja call push adc fistpl roll mov add adc dec addl xorb mov insl inc dec mov inc add mov gs mov mov add es iret cwtl inc aad insl outsl add pop cmc cmp clc cld pop cmp ror push jp jo pop sbb rcrb and ret test gs outsl popf xchg inc mov jge mov into cmpsb mov add in mov xor jecxz dec inc cmpsl cmp dec insb fstpl jbe mov jmp mov xchg call pop xor cld out (bad) call jae fbstp mov lcall je jno lahf dec sub mov cmp pop inc jo adc and sbbl (bad) imul and jp pop push in push cli lock lock jb add push hlt add call out (bad) mov dec sbb push sbb jg jge cmpsl sbbb in push mov imul fisubr pusha stc mov aas push jne or rorl adc mov mov aaa mov adc dec adc clc (bad) add mov sarb mov sti out adc movb cmp and cmpsl or and mov (bad) pusha mov addl sbb adc fcmovbe adc mov xorl xor sub mov in dec rcrb add popf cmp popa cwtl adc dec and fsubr (bad) cwtl pop cltd dec test jae add cmc mov jge mov pop pop xchg and or lea cmc pop iret pusha mov sub jl vpsllq movsl cli add jmp es or in xlat imull mov xchg (bad) pop fiadd loop push xor push sub add push xor add adc push and sbb (bad) jle sub mov xor mov mov sarl das cmp pop jns sbb xadd push aaa cmp fbstp mov repnz jb cmpsb (bad) bound xlat and add push test inc out jo popf in enter xlat enter push pusha addb sbb pop dec popa test gs xchg xorl pop (bad) mov jle cmp inc cmpsl pop cmp and cwtl sbb jns cmpsl jno mov cli test sti aas cmpsl lea dec popa frstor aas fisubrl (bad) (bad) insb or jg iret (bad) inc sbb (bad) rclb pusha sub inc bnd rol mov jbe sub pusha add aas add popa mov and dec icebp mov pop nop add imul fwait and xor mov add adc daa and dec out orl cs loop or xor dec mov push and dec xchg fdivrp fmull pop (bad) arpl popa shrl xchg or cmp or sbb dec in ss add xchg aam or aas std stc or in cmpsl addb pop and out jb add mov test add clc out xor push adc mov scas push enter fwait xchg loopne mov add push and test mov xlat pusha inc or jp aad jmp enter arpl (bad) testb pslld dec pop xchg popa mov pop insl loope enter add pop and add adc inc loope pusha (bad) sub jno lods movb push jne bnd clc cltd or pusha stc xchg repz xor cmp rcrb dec mov sbb pop lock (bad) adc adc mov shll rorl sbb inc or mov adc pop test movhps pop or dec and pop push mov pop cmc mov lahf mov popa out pop mov inc and repz inc fs bound xchg cld les mov push pop icebp jmp loope add mov jmp xchg and xor test scas cmp dec inc mov xlat inc daa and hlt vmptrst sub sbb je xor imul jge repz aas fstpt jg inc (bad) divb lods add enter lea scas mov scas int xor popf inc dec xor pusha mov jns ds pop jge mov (bad) rolb in test xchg mov cmp dec insl inc clc sahf data16 pop gs add scas or mov inc sub xchg mov pusha add jmp dec daa jbe fisttpl adc pop push roll (bad) dec popf aaa push add loope lods testb push loop aaa xor (bad) xor dec movsl xchg pop test fisttpl jne fadds sbb push into fs rcrb (bad) out add push out and mov test roll push ja scas or and sub jb movsb push mov test add arpl cld mov rcl nop outsl mov adc call repz ror inc stos pop lret mov insb inc in lahf test pop xchg popa test leave push pop jnp push jno xchg xor in stc dec popa lea mov pusha jmp js mov add sbb mov pusha ficoml sahf sbb test fstpt mov xor cld mov movl sbb nop addps dec test out popf jns mov and sbbl sub mov mov and pop or rcll nop jle push push pop adc cmp adc mov repz pop mov jp inc cli pusha mov add into xchg nop leave or jmp dec add jo rolb cli loope idivl popa and jno mov jp inc loopne dec lea movsl jmp mov ljmp xor xor adc sti in loopne (bad) mov (bad) lret cmp nop fsubs add popa sub nop mov andb sbb test inc and in aad lret or jle mov lock pushf nop or push (bad) int3 adc mov dec mov cmpsl add xor xorl xchg fs inc daa cmpb movsl mov adc xchg shlb xchg jae jbe mov sub movsl adc adc pop std (bad) nop scas das (bad) push adc stc std mov cmpsl int3 (bad) push insl or mov cld push (bad) cmp test xchg mov (bad) fldl leave cld ja xchg push ror cmp popl xor sub push jmp repnz je daa clc sbb sahf ret sbb lods mov les fisubr cmpsl xor mov lods test pop imul xor sti pusha mov ljmp xchg iret or xchg pop pop pop shrb (bad) iret imul je fwait mov xor in mov je dec movl sahf jno jne loope jno rcrb xchg mov xchg sbb or ljmp mov mov in lcall cltd pusha pop pop dec xchg (bad) hlt mov xor out add sub daa aam imul sbb adc imul cmpsl dec cmp sub sbb hlt sbb scas mov ss dec pop mov add pop ss cmp popa pop repnz or out stos pusha mov sar pop test mov pop cltd jb es loope and add pushf gs mov pusha or lods mov xchg ficompl add and rcpps insb push mov inc lahf fs push lods cmp scas lds icebp js mov sub dec add hlt jle sbb mov mov jb adc loope or jbe out test (bad) pop sbb dec ljmp jno add inc ret inc xchg mov iret pusha enter (bad) add movb sub call cmp mov pushf les mov pusha (bad) or cs add js pop xchg loopne mov inc cmp in jo add sub lods dec jmp xchg push and pop mov mov mov test orb xchg (bad) or rcll xchg fstl add xchg mov push ss movl dec push jle xchg and mov and (bad) repz les stos int3 cli sbb hlt ljmp pusha hlt cmp sub outsl inc push push (bad) push mov or inc add jb rcll pop mov sub andl in xchg pop (bad) addps sub cwtl dec or inc icebp (bad) loopne cwtl xchg jo mov pop add outsb inc ret inc push shl les andl push aad add or mov xor adc mov sahf test ss mov sbb mov add push pop xor mov imul mov loope lret inc mov pop rorb mov das sbb cltd inc push jno push pop pop ja enter jno add adc pop insb mov or push and leave pop pop cmp add push pop pop es xchg ja std adc xchg dec (bad) std in mov (bad) adc push sarb ret jns (bad) scas add clc icebp lret xchg cs jne popa insb sub sub cmp mov sbb cmp stos xchg or outsb mov mov movsl daa call cmp xor daa sub push add (bad) mov jge jnp pop adc sub sub mov adc inc test add iret adc cs mov nopl and dec (bad) mov insb and data16 add jbe mov sub bound pop jecxz jbe popf in das xor (bad) fbld test cmp aam std ja loop add mov inc xchg inc xchg cld jecxz add (bad) in cmp xchg push cmp push mov daa xor mov adc test loope pop aam imul adc mov addb je enter mov adc mov scas sbb pop cltd add loope mov fucomp fmuls outsl jp add cmp je movsl call leave lahf cmp or mov rsqrtps jecxz or hlt out leave nop and mov je add add cs mov mov jmp scas lock mov sub jbe inc inc xchg mov pop stos std (bad) cltd (bad) and (bad) mov into adc repz sub das sub xchg insb fwait xchg pop mov add mov aas or sbb dec cld add xchg cs push repnz enter xchg push aaa lret xorb fucomip comiss decl push adc lret add mov andl dec jmp in aam jbe inc daa shll fisubl out and jnp loopne push mov testl insl popa inc sub mov cmp or sbbl ror imul enter sub mov add pop ss jnp out sbb jae pop adc mov xor les aaa leave add jp fistpl lods add popa jmp dec sbb mov mov aaa push add mov mov xchg or adc loope cmpsl xor or out push sbb jbe xchg push ficompl in lods orl inc mov ljmp sbb loop imul xchg dec stos outsb inc and add fmull cmp (bad) gs out mov push sub xor ret aam adc push aas aam pusha xchg nop in dec sbb mov xchg inc add jecxz mov mov out and xor outsl xor jo mov inc pop mov mov sub stc jmp fsubs mov xchg or or or cmp jns or push pop jo mov xorb in cwtl mov cmc pop xchg or inc addb das xor pop popf mov rol jb bound dec mov cmpsl or jg lret out cmp dec jmp and mov sbb popa fmul in pop sbb dec cmp push xchg and adc test pop dec push jmp add (bad) iret xor lea cmpsl sub movsb xor outsb push push fcomps shl pop lret std ret mov and inc cmp addr16 movsl inc inc incb popf ljmp fwait add loopne add mov in pop and mov xor (bad) and push loope dec jp sbb xchg add sarl mov dec and out ficom ret pop popa mov and dec pusha mov cmp lea out popa add cmp cmp cld mov sbbb test push dec cmp mov cmp out mov xor and add fs gs aam and mov sub mov xchg jnp push push sbb adc jns (bad) fdivl jg adc loop add insl push push cmp rcrl (bad) ficoml dec cmp ss sbb std out push ss (bad) les add cmp mov sbb mov add ror sbb add lods mov iret movsl pop lds lret jmp cltd mov dec mov xor popa loop addl imul outsb mov imul fildll adc mov cmp outsb mov lea pusha mov or xchg and out out lds stos call xchg jo in std xchg add stc push mov xchg sbb adc push sbbl dec lea push push mov addb xor jge lods sbbl dec ficoml xchg or or test sbb add and mov or push (bad) movsb in cs push sub outsl dec jno mov adc (bad) sub push (bad) push clc fwait or pop dec insw mov mov in mov mov into dec and sbb cli or ja sahf (bad) mov or add into stos cmc lods movsl shlb lahf and repz inc (bad) jnp enter add out mov xchg shlb movsl lods decl jecxz push (bad) icebp imul inc lcall cmp outsl push stos leave pop pushf sub cmp scas adc pop jg popf mulb sub mov pop xor push fwait loope clc loop xchg jno cmpsl jl (bad) xchg testb sub test sbb or mov std das cld or popl (bad) push inc mov push pop mov jp (bad) loop pop enter adc push arpl sub fistp jge or inc xchg jecxz jne outsb sbb pusha adc pop dec or sbb hlt fisttpl jno xor cli jecxz cmp add nop pusha mov push pop (bad) and cld and mov imul sbb jne cmp or out cmc fwait push jnp mov jb xchg mov pusha pop arpl push and sbb das mov aas scas and xor fldl mov clc mov fcompl lock pop xchg push inc add pop ret sub mov add inc hlt dec cmp repz lea scas gs shrb inc daa (bad) ss mov arpl cmp cmpsl in xor push nop push ja test inc fcoml adc xchg cmpl loope out cmpsl or mov stos leave jge loope xchg dec push sbb sbb loopne jo or xchg (bad) cmc pop inc mov movsl popa inc push sub mov test add and dec addr16 xchg hlt cmp jne and sub fcoml les jo adc fdivl jecxz pop lock jmp jnp dec pop ds pop iret mov (bad) push leave add enter sbb push xchg xchg mov push rcr mov jmp adc push cmp mov cmp insl add pushl inc outsl push mov (bad) lret cmc pop cmc push pushf lods and insb pop cmp mov rolb decl adc push out sub push fs (bad) add mov imul daa sbb sbb popa scas mov pop sbb andb loopne add mov pop stos xor faddl stos sbb dec repnz nop dec dec push sbb mov cwtl push lea jnp test dec sub scas fisubr dec mov xchg js add movswl popa fist push orb mov (bad) rcr mov popa mov push pusha pop xor jb pop adcb cld pop arpl test addl xlat mov es jl jge jp mov cmc sub repz inc test sub jne aaa pop xchg xchg jl mov jmp aaa jns loopne imul nop push daa mov int rol add call popf mov idivb bound and test nop or or popa dec and out fnstcw imul ds lcall jo sahf cli inc arpl rcrl jge popa loopne (bad) testb add mov inc mov sbb ret mov dec pop xchg mulb pop mov add popa jecxz adc cs pop adc xchg push and xor not xchg mov loope not fisttp rorl push in sub pop and and mov jg xchg daa sub outsl add mov aas addl pop pusha repz clc adc cmpsb repz xchg adc ficom push mov leave xchg and jae dec or xchg fcmovbe test test cld mov push xchg (bad) jge popf imul pop test xchg dec pop in inc daa add ss mulb mov clc les mov push mov mov pusha mov lods jp push hlt xorb jmp jbe or nop mov jnp adc popa push mov and insl jp outsb cwtl lods add fs mov pop pop cmp loopne out dec aam in sub and jmp faddl add cmp test stos inc dec test sub mov dec pop mov (bad) fs pop xor test mov and or xor cwtl daa sbb mov dec (bad) cmp xor inc or jmp lods in and sub jnp and aaa xchg stc decl mov jmp dec stc movsl inc push (bad) es pop sub fwait xchg jne add jb adc adc push mov loopne xor dec int subb mov out icebp xchg cs add lret adc xchg cld out lock movsb xchg add rcl inc mov aam sub test pop sbb stc adc (bad) jp pop jmp jno outsb roll jecxz mov jnp jno sbb xchg mov mov push fdivl mov jnp fbstp test daa test icebp mov addr16 sbb lea add jo dec pop repnz add pop loopne pop shrl xorb aam mov mov mov sub sub sub sbb xor jnp pop aad stc or ret rorb sub rorl add xlat xor push pop adc xchg adc pusha std cmpl out test mov xor mov jo lods mov xchg push or add jp dec or neg push lret mov mov sbb insb adc mov dec clc shrb popa xchg xor add loopne mov rclb aam mov cmp cmp or in xchg movsl adc and lds test inc sbb cmp xchg loope out lock clc cltd das insb push inc jbe (bad) mov inc add ds rcll js xorl cmp add inc loope adc mov enter push cmovle pop cmpsb lcall dec dec cld or imul add pop aad sub sbb les push adc pushf jb and mov pop mov loope jmp xchg popf dec lret addr16 and mov arpl (bad) cli mov in bound xor in das loope fisubl sub stos mov xor add mov aam (bad) mull pop (bad) leave pop lcall (bad) jo push dec cmc or xchg lds fwait sub cs or pusha fbld xlat push push (bad) ja cmp roll cmpl sbb test (bad) orps fcoml leave fucomp cld sbb mov in push repnz pushl push or sbb and pop popa insl sbb xchg roll out pop test push inc mov loope add into insb or mov pop pop aad mov xchg out cmpsb mov jl lret pop rcrb pop lods push repz pop mov mov cmp pop out outsb jo or rorb or lea daa daa (bad) mov mov jecxz imul dec push add mov mov test pop pop push pop pusha loop test adc lea jge dec int jg cmp mov xor repnz sbb inc inc pop cmp data16 add fsubp xlat les xchg (bad) mov add xor mov push dec pop daa push roll popf fbstp sub cmpsl lahf inc negl jmp mov incl or mov (bad) mov mov pop data16 and popf inc incb cmp (bad) andb test add sbb push arpl movsb sub xorb xchg js dec (bad) (bad) adc mov sub mov les sub add lods mov pop test mov nop xchg mov add test inc sbb loope sub icebp push mov mov mov insb stos sub mov mov xchg js das push jbe mov dec add cmc pop insl cld out cmpsl push push mov (bad) mov xor loopne or and or pop push pop mov fimul inc or cmpl jb imul jbe aaa xchg mov lods adcb mov add test rcrl jnp mov popf jbe inc out icebp popa mulb xchg rcl sarl fimull lea test fwait pop mov rol sub xchg das stc push aam imul jbe sarb push mov mov cmpsb lds xlat cmp daa xchg cmpsb shl or or gs push mov call stos xor adc pop xor dec jae mov jno inc xchg mov outsb pop add dec fadds lea hlt adc inc icebp fs outsb or movsl cld repz clc mov sbb xor push add cltd cli mov xchg fdivrl mov and pop dec or and push or test mov out add push push add push inc bnd dec pop jmp mov and sbb xchg andl shll bound and (bad) mov jno sub mov ljmp es pop sbb test mov fstpl daa stc lret hlt out jno int mov (bad) repz adc cs inc or sbb mov popa (bad) std jnp push or and push ljmp cmpsb ret jnp (bad) adc nop or xchg add pop adc das or call lds xlat outsl xchg inc pop push stc pop push out jno popa int cmp cmp mov fdivr add xchg xchg out adc push mov mov fcmovb jle and mov add mov or daa out push addl mov adc gs mov stos mov and mov lret adc pusha (bad) xchg pop roll dec mov sbb mov adc cmp ss adc and sub add test xorb popf fwait arpl lods and push std sub push push or in xchg add xchg daa loope cmovns dec dec test sbb mov sub xchg inc or pushf mov hlt fldenv (bad) incl mov xor pop add pop int3 xor sbb cmpsb in fistpl xchg adc push mov incb pop popf enter dec mov mov jmp (bad) add xchg cmp and dec pop das mov inc mov sub and popa inc push push stos and call xchg pop add and or in das pop popa jbe leave push push inc mov dec inc dec fadd dec test xor test insb les cmp adc ss test cmpsb nop push push cmp xor mov add xor mov mov popf daa dec sub cmp mov push or xchg mov adcl pop movsb mov jmp iret test add repnz and inc add xor push or push pop cmp jecxz lahf aas sbb stc sub xor lea mov cli fs addr16 mov cmpsl cmp (bad) mov test cmp pop or inc push or repnz xchg push (bad) in insb or lahf or addl dec mov xor mov loopne gs mov xor adc push shrb sub shr js push xchg icebp mov push dec dec pop lret shrl push jmp stc icebp das sub imull out mov pop add (bad) pop xchg push jp ss pop sub or sbb and adc lods add jl cs lret push das lods xor scas imul add imul sbb push andb adc pop pop jnp cltd sub (bad) push inc cmp dec in imul sbbl mov mov mov fcompl movsl out sub daa jne jmp call movsl (bad) negl js loop xchg sar rcll jnp popa and mov inc push cli inc ror pop ja arpl jb data16 ficomp push lods out pop mov adc cmp rcrl mull addr16 sbb movsb test cmpsl add repnz das clc jl loopne mov nop repz jmp xor and xchg fcoms in add or xor mov inc (bad) cmpsb sub (bad) jno add lret orl and xor adc scas jnp sbb dec push shrl push add (bad) test (bad) jo jge call or lret insb sbb push int dec mov ja jge add lds sbb cmpsl mov insl lret sub repz dec daa mov popa pop (bad) xor cld je pusha stc ljmp adc dec aaa scas add or cs in insb adc (bad) movb mov and mov cmpb jl add dec cwtl repnz cmp cmc test dec xchg mov jns cmp out sub aaa cmp (bad) roll dec xor bound sbb sbb popf add ds mov pop add jbe movsb sbb dec icebp adc lret xor dec in test daa mov and jns inc add or popf out test and push pop loope ds xor or push test sbb out jmp nop push sub add mov rcrb in popa pop mov mov test xor outsl lds in daa mov mov jmp fmull mov sbb adc add jo aam faddl cmc mov jmp xchg sarb (bad) mov push popf adc inc dec and popf iret into into inc adc add xor or gs mov jle jno push dec (bad) leave dec loop jne xor add fstpt jno test mov add push xchg push scas dec mov push add subl stos movl lods xor cld jl leave push loope andb (bad) in (bad) jbe fidivr loopne dec (bad) rclb popf out add stos fimul adc and mov cmp aam jmp mov xchg clc cmpsl cmp jno cmp shrl daa add xor add test movsb aas rol inc pop push xchg pop mov add sbb out loopne mov xor jbe xor add push pop lods mov and stos pop lret fs and mov rcl xchg mov xor xchg cmpsl push pop bound jns add loope aam dec or sets gs or cmpsb jl xchg jle repnz sub jne test out clc push popa clc lock inc dec and cld lds test or jg dec sbb mov xchg ja jns sub ret xchg aaa adc mov jmp cmpsl add lea push pop xor sub jb push xor cmp and jmp add movsl inc es dec lds xchg xchg mov repz lds cli jl adc mov add and sub jb adc jne decl test clc das addr16 pushf mov scas insl pop les cmp dec cmp ror lds pop mov jg jae mov inc sbb and lods js or mov mov push adc pop mov xor or dec jo out or rorl nop cmp inc lea xchg (bad) icebp dec jo xchg int into pusha shrb frndint lds scas fistl push loope ss lods test test mov sbb nop pusha pop in and nop cs and mov jle add rcr outsl jb xor flds popa push push out (bad) nop push lock pusha jmp jo pop xchg std and push or rcll pop push scas add fs fisubr pushf aad add and pop shlb int sarl pop pop push pop sti daa sbb mov fsubrs repz js pop add jmp pop dec mov sub ljmp push out int3 xchg mov pop sbb jne out divl ja popf sbb pushf ret aam sti jne sbb fsub mov push (bad) jb imul ret test pop clc je add int3 shrl push mov sub jg pop jb inc inc mov pop and (bad) test jae and outsb lret xchg push stos enter lret sbb pop jo add inc insl mov pop add pop cwtl out je addb adc sbb or and mov test mov and (bad) fstpt jb sub mov add push xlat rorl (bad) clc les push hlt bound pop lea insb (bad) stc push (bad) notb mov adc dec repnz cmp mov inc shll outsb sbb adc test in popf pop sahf xchg xor adc pushf push pop clc in jne mov jo add jno cmp pop inc mov and add and mov add and shlb inc xor cmp sarb sub mov jl arpl mov mov ja imul ret xchg movsl pop repnz shrl pop sub mov shr adc cmp mov mov lret insb xor lea or imul fistpll mov call mov add imul xor mov cmpsl mov pushf imul push orb jo add sbb xor mov cwtl das dec fist mov rcl adc lea mov movsl push xchg mov push int shrl in lods sbb mov stc dec or sarb add rcl xor loop in (bad) xlat (bad) loope xchg dec add ds dec adc add mov sub sub enter scas sbb jp pop es cli fsubl dec (bad) cmp rolb mov xchg inc out mov xrelease dec sbb out add jno cld pusha call cmp lds add jo xchg push cmp and pop xor fidiv adc mov dec cmp mov sbb mov cmp fcmovnu cmpl out push xor loop inc faddl push roll pop ljmp cli je (bad) inc pop pop sbb xor or add sbb mov add mov call sbb stos in mov lcall clc call (bad) mov outsl and cmp lds and push adc mov sub jl and std push movsb pushf xchg mov xchg pop jns sub int3 cld xlat into adc adc jb adc mov add mov push nop add add xchg dec stc (bad) add sub dec pop push cmpsb insb testl pop mov rcll loop push in dec xchg push fstpt jnp mov outsb lock mov sub (bad) jbe cmp push add fdivl in mov cmc or push and call push pop test dec push ljmp (bad) jge mov popf mov enter adc add mov jmp and imul call ds call out jne push xchg xlat pusha mov jae push add or or jns push (bad) dec push push (bad) jno lcall push inc bound adc or imul inc add sub add push je sti mov das popa xchg repz stos nop pop xor add fs negb lods xchg insl add add adc xchg das les sbb sbb imul rolb inc or lock stc outsl mov cmpsb mov test shrb and out xchg mov jg cmpsl xchg xor push scas popa mov addr16 xchg movsb lret dec add add out sarl xor dec les pop jbe imul test mov mov aaa std push sarl add shlb insl stc roll call mov sbb ja loope adc dec (bad) and lds cmpsl dec mov adc stos xor ds dec popf std (bad) cmp and jo xchg fwait cli pop sti (bad) jo sti sub xchg jo mov cmp push jb cmc inc xor pop and scas dec das lahf mov mov pop das jmp and icebp stos adc cmp cmp out mov and add xchg dec pop mov or and lcall mov push xchg fsubrs mov pop fwait sbb nop (bad) das adc mov je inc mov xlat cmp inc popf fistpl pop jbe (bad) inc sbb lret ret adc enter cmp adc sub rclb adc in mov cmpsb mov dec dec dec int sbb lcall adc fidivr (bad) xor nop dec pop jmp add gs fwait mov lds jge mov sbb pop sub (bad) int3 int3 ja cmp popf push pop pop mov and pop mov mov dec and push add push and add repnz or jo xchg loop popa out xchg push int3 out sub in call pop xchg bound inc cmp lds and mov cmp adc scas adc pop jns inc (bad) mov push mov dec pop pop xchg pusha push addr16 test and pop sbb sbb shlb sub add cli repnz mov subps loopne shll pop push jns mov add aas ja mov xchg leave mov lds jge loop icebp sub sbb add cmp or dec cs inc or stos fdivr loopne inc (bad) sub push push pop xchg inc out mull adc (bad) mov rcll sub and mov inc and neg xchg and mov (bad) add in popa lods cmp sbb into add neg mov pop insb mov cmpsl (bad) iret push inc fwait add ss adcl loope mov movl or enter mov cmp in mov fs imull lock sarl mov add sti mov movsl add mov mov cmp scas imul test adc insl mov js sarb push arpl pop add adc cmp sti inc xchg cli outsb inc adc cmp mov xchg aad xchg aas std push pop outsl add jno pop mov and dec xor sub mov les push movsl adc aam sbb mov inc add mov popf les mov mov insl cmp xor stos or loope xor cli mov xor bound ja aas add inc aas jmp mov add flds xchg dec mov push or (bad) adc or sti mov nop int3 xor lock jae pusha jle push pop and xorl lock sub and movsb pop push dec loopne xor das add lock cmp mov fimull out jb xchg cmp dec sub sbb xchg xchg popa jns add add add or push adc mov push add mov daa and test xor cmpsb das push jnp jo pop add sbbb or xchg dec xor nop loop rorb and adc fstps or hlt out cmpsb add rorl fwait (bad) je in push mov add mov scas xchg inc and add jno cmp pop dec adc mov xor sub fldt in sbb test mov inc mov and mov popa pop sub sbb out (bad) xor push aad adc add xchg add sbb movsb sbb cli mov or popf lea dec shr sub incl insl lods adc lret jns mov add stc mov leave cltd das inc pop jecxz push fistpll inc clc jmp popf in mov popa scas loop pop push inc and mov add adc pop ds fildll cmp iret addr16 cmp mov inc push and (bad) movsl pop out jmp popf xor jbe inc lcall sbb mov test repz notb je ja xor push aaa roll push inc xor int cs add fidivrl int3 sub pop daa xchg jg pop add pusha dec cmc and repnz jnp (bad) sahf xorb or cmp or shll mov cmpsl imul imul sbb dec dec or and xchg jae shl adc mov inc insb cli clc inc stc push test lret out xchg xchg inc das sub jle dec mov jp and pop sbb push adc lods arpl xor hlt fild pop nop jg jnp push mov jo sub xor daa jbe push cmp add adc aaa popf mov sub and test inc xlat add push (bad) cmp out and or sub (bad) aad out add or imul fsubl mov into test or ret xor and mov add lahf cmp mov mov movsl (bad) out loopne movl and xchg add push leave fbstp shl aad adc push loop add bound mov insl xchg fyl2xp1 cmpsl nop xor sbb pop fild mulb or sbbb pop mov dec xor test cmpl xadd jp add and push hlt add repnz lahf js xor adc jo pop fimull cmp pop xchg push fldcw andl xlat movsb (bad) mov mov push rorb sub notb hlt adc sub mov lahf ret lds les hlt lahf sbb mov pushf or mov loop test add test loope out mov loope sahf mov cld pop jmp xchg fidivr push dec add aad (bad) (bad) mov mov dec dec repz push loop rorb sub jo push cmpsb shll (bad) xchg ljmp les cwtl imul xchg xchg pop adc mov xchg jmp bound or aad hlt pusha mov lods in movsb add loopne lret std inc punpckhbw das popf xchg push test pusha sbb inc or lret imul add in nop pusha scas jns outsl loop (bad) hlt push push add or sbb adc lret fildll cmp add and dec lret mov mov mov ret rorb sbb in cwtl mov and push sub sub loope jecxz rcrl inc call mov test les test mov repnz lock add lret pop andb inc add (bad) pop repz mov (bad) (bad) imul (bad) mov push sub sbb xchg inc push mov aaa (bad) and pop testl jo mov outsl js xchg add inc test scas ret xlat iret ss xor xchg add sub cmp jne test fs adc add (bad) sub outsb arpl test pusha js fistp sub arpl mov dec or or addr16 sti inc push loope cmp or test add xlat nop adc int3 pop push mov pop pop mov xchg adc es or orl mov in pop sarb add fcoml je dec xlat aaa fldl pop fs dec clc sub push outsl stos push into in jp imul fldl inc dec popf shll cmpsl xor mov adcb popa (bad) jnp std (bad) movsl pop jle in gs aaa icebp and call es push cld sti dec frstpm(287 add xor imul sbb xchg ljmp cli pop cmp sub loopne lea mov mov push dec pop push sub inc cmp stos and xchg mov add movsl xor clc add dec push jae mov arpl sarl mov mov mov enter rorl popa add push sub xchg stos jle inc jge add stc mov or movsl lods icebp mov xchg sbb xor sub inc popa repz dec nop inc sbb in sbb and cmp je arpl ret out popa test std roll lds sbb mov jmp mov out jae rorl lret mov enter fmull dec adc les sbb and jns cs dec xor mov jno adc push cwtl mov mov hlt push dec and cli inc and pop ds or or mov incb xchg cmp pushf push insl fsub or jp push push push sub shr outsl (bad) sbb daa cmpsb loope jb mov jl leave pop cmp aam aaa jg imul add and arpl xchg aas mov add adc fwait pop adc mov sub xchg cwtl jo popf sbb jmp stc sub repnz sub jp xor je mov jge outsl mov js repz or mulb cmp out dec pop mov add jmp mov add and pop lahf adc jp mov bound sub lahf xchg aas push imul jae push (bad) mov add mov mul jne push adc pop es pop mov mov icebp sbb out sub jb add cs (bad) cmp ljmp leave in pop push add and and fstl adc jp or mov das movsb jae add ror pop xchg sub pop push mov mov push call mov lahf sub mov mov das mov int test bnd and mov jno mov cwtl jns push dec xor and sub in mov ds add orl fisub dec clc cmpsl push sub xchg sbb rcl add add dec outsb (bad) dec out ret into cltd pop fldenv fs call mov mov (bad) jp popa jl sbb sbb mov push cwtl stos add inc (bad) clc push test or jl icebp std pusha aam xchg mov addl test pop aaa add and pop sub mov xlat and jmp idivb dec push add push inc pop movsl mov mov rolb pop movsl and movsb sub jae mov pop out leave movsl and mov and sarl adc popf adc adc je leave clc fimull cltd pop mov gs jmp pop jmp inc or mov ss inc shr and sti cmp pop cmp arpl ja je movsl add adc mov xor outsb in mov popf test push and jle popa les adc scas lods mov xor in inc ret pusha pop mov xchg pusha xchg sub jb lcall jecxz shll fildl ljmp mov and iret xor mov lcall sbb flds mov jb loop mov adc mov mov (bad) add xor daa out inc popf imul jb jo jnp jnp mov std xor add in faddl aas sahf int addr16 push jnp sarl xchg mov xchg push adc push adc (bad) dec dec arpl push sub mov mov insl and jg jl gs add daa scas cmpsb mov fistpll dec outsb fldl cmpsl dec in outsl or sub mov js jae jo xchg setno jns xor lret aad cmpl sub xchg xchg addl or je das push loope pop mov mov mov cmp bound and outsb sub dec ljmp adc cmpsl prefetch out add aam dec cmc jp call sub adc add xlat inc xchg push mov divl mov pop add jbe stc dec enter fistpl xor mov or and pop xor ds xor mov pop or inc mov pop push sahf adc adc imul pop stos into add dec das lret pop notb mov xchg out dec mov test mov leave loopne shlb out sahf lock mov iret add outsb jmp dec scas jp add push jo mov rorl xchg std popf dec les lods popa in inc cmc xchg (bad) jmp mov pop insb sub adc xor pop stc add mov jmp mov std fcomp (bad) pop sti add repz mov cmp inc xchg cli jmp mov adc test inc scas ljmp mov lcall xchg je push test xchg sti fimull (bad) sti mov aam xchg std lock pop bound or mov mov or xor push sub pop cmp stos sub push dec push cld sbb mov mov addr16 bound in cmp mov out in mov lods inc push lds push push testl or xor popf inc and xor cmpsb or adc hlt popa ret ret mov int3 sahf clc adcl js stc sar push fstpt cmp gs sahf pop sub movsl das jns ds daa or nop aas jmp pusha insb inc in sti ds test jecxz push push lods frstor xor jae pop in hlt add cmc xor dec lret xor outsb jmp and (bad) inc sbb dec mov movsb xor pop outsl daa mov inc mov int inc cmp xchg mov xchg in mov jle fcoml bound pop mov cmp fcomi mov outsl or ljmp std sbb popa push fcmovbe jge mov and cmp stc clc popf adc inc ljmp add mov mov push popa cmp dec mov shrb add and test cmc sub (bad) loopne lea push cmp in or or jg push lahf ja add lods loope or mov push adc rorb and test stc cmpsl loope jmp popf pop pop sub lret mov icebp out jge in loope pop pop pop push stos xchg xchg add into pop ja mov cmp or pop nop sbb fisttp flds flds call (bad) and lahf mov pop jne dec jae push andb stos mov mov jmp sbbb sub jle push push jmp jle jb pop ja jne movsl mov cli mov add xor (bad) add xor mov repz add jl inc loop dec add push push stc cld jnp pop fiadd or push lret inc call jnp cmp jmp pop popf cmp push ror or xorb out cmp fildll sub mov push lret (bad) and rclb dec into add mov fistpll xchg nop (bad) imul jmp outsb roll inc adc lds xorl mov outsb call aad mov popa add pop fistpll cmp add pop adc pop mov jo adc sbb leave test mov mov pop and (bad) or (bad) mov (bad) out in push pop fistpll js fs xchg and dec aaa add dec inc mov cvtdq2ps inc jb out adc imul adc mov push insl pop out cmp sub adc scas in cli mov add (bad) fdivrp and add xchg insl jl sbb mov add sbb ja cmp jne push loop jne mov test dec cmpsl jle hlt add sub push push into ret call clc sahf dec fisttpll inc loope out mov loope mov sub and pushf popf scas rcrb fadds jmp dec lods add outsl mov push mov ficomp jmp mov or add pushf out pusha aam bound repz adc pop mov imul arpl mov dec xchg leave scas fucomi xchg jo les (bad) mov or inc push dec roll mov add mov add (bad) xchg hlt mov cmpsl pushf addr16 pop fsubrs adc pop cmc adc ja mov jmp mov fadds iret adc add jg mov sub roll ret divl insb aas cld (bad) xchg clc (bad) or jno shrb push jno or call nop inc mov (bad) enter repz mov loop add sbb push pop add sar adc mov cmp push mov nop ds fwait ret mov sub in xor sbb fucomi movsl xor sahf into dec test cli add xchg push fildl jbe arpl data16 sbb jo shr cmp mov popf and stos fistpll daa cltd sbb xor adc inc mov mov dec data16 aaa dec cmc mov pop daa cs jbe xor mov mov and mov push push xchg rolb cmp mov dec aaa in dec cmp bound sbb mov add pop xor popa pop push pop adc clc mov adc mov adc mov aaa sbb xchg testb cmp mov jo add (bad) mov (bad) lock (bad) jne loopne incb cld cli lcall sub mov mov mov (bad) lret mov add fprem1 aas cltd popf sub nop mov add inc inc dec sub and mov cli mov lahf les jmp xchg lcall mov dec roll push daa lret fcom xlat push (bad) sub cmpsl scas loope add hlt add rep in or pop fnop cld pop push cltd roll stc inc sbb pop push push repnz sub test repnz fist (bad) jno sbb repnz inc push popf arpl mov daa rorb xchg lods pushf pop add xor loope dec mov or iret sub fstl mov ja cld mov add mov xchg xor aad mov and and (bad) sub mov fmull mov inc bound in add xlat push push clc pop icebp sub aas lods sahf leave and and and and fisubl mov inc push je xor scas lret cs repnz sarb xchg cmp repz push pop pop aad adc pusha scas mov jnp push cmpsb shl sbb cmp ja pusha mov fidivl cs mov lds loop add stos lds shl (bad) rcr or cmp inc testl inc and push add pop cmp cs pop or xor dec mov ret into pop push mov in call sbb pop into xchg jne sub bound out data16 cs hlt add sar loope sbb mov xchg fcomps or add push nop clc sub leave (bad) jecxz jno cmpsl aam (bad) xchg in addr16 clc sub mov mov mov in unpckhps jg std pop add or or shl fidivrl rcll sbb inc scas out outsb mov pop lcall outsl (bad) inc shr xor dec lods fmuls lcall fsub popa jg add pop jge lock xchg mov (bad) cwtl pop push mov loopne add push cli jno mov out push pop andl es push mov cmpsl cmp and push mov xor cld fstl mov (bad) jae mov pop mov repnz or and addr16 cmp mov cld arpl pop jb daa cli nop jge or rorl in repz call cmp pusha ljmp pop sbb add inc xor xor cmp adc add mov pop add repnz push pop pop popa add sub imul popf dec scas pusha inc xor add ljmp in sbb xchg loop adc iret dec into cmc jmp push jno cmp aad xlat and lret add inc jle cmp xor iret je cmc mov es sbb xchg out adc cmp test sbb sub jnp popf fiadd push sbb push xor sbb inc call mov xchg inc inc add mov or inc nop rcrl cmp xor pop mov pop leave xor adc add arpl add xchg and imul cmpsb stc add fild mov inc pop gs fstps fs mov fs cmpsb jb mov pop sbb (bad) (bad) jne push cmp cli fwait pop les clc test imul push mov push dec iret incl add fwait cmp mov dec sub pop dec ret scas movsl cmc xchg imul push into push add and ss test or mov xchg addl xchg out add fsub aad test add inc (bad) shr stos pop mov hlt inc add mov int mov das push fdivp in mov sub les imul jae add in and cs adcl xchg pop pop lret dec out jl sub subb mov jb pop popa (bad) pop cmp sub xor (bad) aaa push loopne jb add lea mov lret loope or inc aad or dec jle sub add and push rorb lods jne sub lret mov lea inc lods shll mov push push int push push mov cld jns out mov (bad) test sbbb stos sbb add repnz add dec out mov divl sbb fs cli (bad) jg mov jne fist sub add lea cmc or pop jmp (bad) mov pop jae clc dec push pop inc mov (bad) mov add add jbe mov dec pop or jb adc mov add lcall nop mov pop adc sub mov cs pop rcr add mov lods lahf dec mov sub cli (bad) push jnp mov or mov mov lock pop or push mov das pop (bad) mov and or call xor shrb push jg test fistpl ja sub mov ljmp inc mov repz loopne xor aaa jb mov lods (bad) adc push lock cltd mov jg ret cmpsb setb clc jmp push adcb rcrb lret mov das dec jmp fs sbb ss push sarb push dec pop and cmpsl nop out mov inc enter inc mov movsb fistpll test adc xor in inc pop aad mov mov mov cli pusha into mov jbe or je jle arpl or popa push cmp mov and xchg lahf iret addl sarl test cmpsl fisub mov mov or aas mov and je pushf lret mov cmp cwtl mov dec out and mov cmp ret and or cmp int fmuls dec ret fistpl adc mov mov sti arpl (bad) iret out mull and xchg aaa jmp sbb popa mov lods or mov lock out add mov sub mov inc cltd imul ljmp fcomi (bad) adc jbe add dec shlb int3 and xchg ss mov add push xchg inc (bad) cmp push dec test sbb inc jb or jnp loop out fldcw mov pop add xor test rolb jle cmp (bad) mov add faddl xchg test adc scas outsb sub mov ret inc cwtl movsl hlt rcr ficompl or call pop sti mov (bad) xchg add pop xor scas int3 lds stc jne sbb add inc xor loopne or or xchg pop add mov das sub mov xchg pop nop and out mov cmp inc mov and mov jmp sbb (bad) add mov or xchg sbb hlt dec sbb leave cmp add cmp pop loopne add ljmp push jbe jp pop jmp sti mov xchg add lock push outsl cmp subl mov inc xor add push add jbe aas mov dec daa pop popa jno adc enter add ss xor cmc (bad) mov cmpl jg xchg repz (bad) dec mov push push addr16 mov push sub adc add push (bad) cmp sti inc sub add orl dec scas mov arpl cld and or ror popa repz add cmp rcrb mov imul pop mov mov scas jnp pop or inc popa inc jge pop fdivr jmp push sarb add mov mov fs pop inc or std aam (bad) in jmp ja jl dec in mov lret testl mov out sub sbb cld dec sub mov imul mov mov pop jg pop fiadd mul and std mov xor xorl das jo mov adc ror and add lcall add cmp mov je faddl jmp insb nop add nop jle das push pop push jecxz and pusha dec test std dec ljmp jp adc dec xor ss push adc popa cs mov inc ss add mov mov jle adc push dec ret pop es (bad) call mov pop cmpsb ja dec lods dec movsb cmpsl bound testb sbb les aaa adc xchg int3 outsl mov pop lcall adc orb xlat or into movsl pop pusha push cli pop fstpt push and das jne add lcall fsubp jmp push jmp loope jns add sbb test in cmp pusha mov xlat inc shlb xchg addl sbb inc mov lods outsb test sub push dec and xchg mov sub lods xchg xor leave hlt mov mov (bad) aaa cmp test dec lods (bad) das hlt dec jecxz cmp adc sbb fs ds add (bad) mov dec scas adc mov add addr16 out lcall push outsb mov or xchg sub lods sbbl outsl loop fimull push ljmp inc add leave mov mov test enter aas lea ds mov cli mov hlt push and das xchg loope aaa sti dec pop rcrl sbb and outsb mov cmp jns lret xor jg or mov mov and and fstps cmp mov add cmpsl pop rorl sbb pop cld aad mov and in jne imulb xlat cwtl mov pop je add push lds dec movsl in fidivr add ret pop add jg stos sub incb std dec xchg loopne stos lds mov jns aam jo jmp outsl hlt xlat imul push scas mov xor rol aas add add cmp jno outsb adc xor adc in mov iret jns sbb push ret mov ds jmp push add mov subl pop xchg dec or cs add fwait jle roll add xchg stos aaa stc add dec add fdivr in sub rcrb jp push loope xchg (bad) cld or (bad) pop testb or mov (bad) cli stos sub push adc push pop sub push dec push xchg es testl or mov mov mov adc and pusha loope je add in es mov subl mov sub sti pusha fcomps add ja (bad) jge call aas in andb imul push push mul mov mov cmp pop add pop push cmp lock cmp fistpl mov push or pop mov faddl into xchg mov (bad) mulb pushf xchg lods andl jg,pt add idiv xor jg out insb cmpsb (bad) out or push flds nop int3 inc test call in inc sub push movsb pop out fisubrl bound lret ss pushf inc dec or cmp jmp dec aaa subb xor out (bad) cmp xchg daa add addl xor cmc pop push aaa cmp repz fcomp popa inc add outsb test mov push mov popa dec xchg add add je cmp adc pop lcall popa out mov pop mov xorb addr16 sti js lahf roll cli pop adc frstor cs cmp sub jg jmp push and add pop adc sbb mov (bad) push (bad) rorb or pop subl cmpsl dec mov mov mov in pop (bad) jmp push inc sbb dec dec cmpsl int3 and add scas je add jns xor mov pop pop aaa xchg and xor and add mov jns xchg jnp mull cwtl dec sub (bad) icebp push sub and popa test mov lret mov push sbb sub aad cmp and and jbe lock (bad) loop add gs sub outsl test scas outsb cmp adc stos and mov sbb faddl jne stos adc sbb daa add add (bad) je inc adc lahf sbb jle inc or rclb pop icebp fwait pop gs jle pop cwtl inc add stos std push push scas add mov mov or enter dec adc in mov in ljmp lcall mov add xlat push cli (bad) jne and lock dec cmp and mov ljmp add mov leave and add dec lahf inc adc fdivr aam sarb lret cmpl outsb mov adc and stos adc pop sbb ds adc cli int3 (bad) mov inc mov xor fcompl or mov daa inc add fwait data16 pop js adc jae cli xchg fild push xor lock lcall lds aas xor xchg xchg lahf push (bad) pop aas add cltd lods push cwtl sub test xor jbe lods add mov adc jae mov (bad) xchg and inc pop in xchg pushf xor test sbb shrb jge cmp and shrb cwtl out lret push xor pop lods mov lret mov cmpsb leave jge sbbl adc jne pop popf shr mov xchg jno inc stos ja in clc xor xchg iret (bad) push xchg cli pop in pop and push sbb and cltd arpl ret jnp pop push std add inc inc jmp mov jmp or push xor push sar adc mov test lds stc pop push cmp fcmovnu add xor mov mov ret mov dec ret testb xor add std xchg sti (bad) stc mov in cmp hlt or jnp dec jo xor push cmc addw icebp mov jne pop push pop test add (bad) xchg mov les clc clc pushl lds das cli push daa lock pusha push fdivs adc mov dec orb pop aas ret add (bad) pop pop mov pop out push jecxz xor rcll cmp int or and sub cmc add adc sbbb ljmp mov adc sbb nop mov mov repz mov fs nop dec mov add pop push sti sahf adc popa sub push repnz daa dec pop loop jae jo push pop push out and mov nop sub es sub push and cs cld mov lea lods test sahf mov pusha xor cmp mov add test nop adc sti outsl jecxz push or and push push mov jnp fadds enter faddl and pusha ss data16 or cmpsb and das jg jnp std adc scas imul adc cltd pushf cld sub sub xchg xchg inc adc inc (bad) cli cli add xor rclb or add aad sbb inc pop push lds push mov inc xchg adc push js pushf mov addr16 mov pushf jp or xor and fdivs cli stos (bad) imulb add add xchg mov insb dec leave adc inc mov stos adc rcll push loop mov shlb add aaa mov cltd xchg push in (bad) out push sbb outsb in mov add icebp fs gs push sub fucomip sub call outsl ds add xor in (bad) (bad) imull icebp pop jl push push in fildl dec add add mov pop pop lods sbb movsl lahf test mov pop sub add pop jbe ret adc ds add loope adc ror and push push enter jecxz push repz andl (bad) adc mov fbstp ret ss or out jne cmp in push and sub cli mov icebp clc dec flds jg test xchg outsl mov lds push push mov das push sub jne enter int pop stos clc js sti aaa add inc inc push mov aam mov push sbb jno cmp roll mov add nop push mov data16 les xor lock adc loope jo fwait lret nop jns xor add jecxz lea mulb cld add (bad) out pop aad faddl push cmp pushf lds pusha ss pop lods jbe mov sub iret fidivr pop xor test push int3 mov pop jae xor cltd ret pop mov xchg (bad) fdivrp xor sub hlt mov sbb outsb out daa add outsl scas add push loop push add stc hlt xchg inc dec lret add movl pop pop mov add fist cmpsb xchg popf cltd mov pop rolb or outsl and push jp sbb mov sbb icebp lret xor sub orl push test jg xchg nop and imul ret enter mov sbb sarl xor add sub out or inc je hlt mov and adc xlat (bad) pusha rclb cmp pop mov clc out sti dec cwtl add cmp pop jnp jle sti mov adc nop stc insl xchg out mov dec pop outsl cmpsb in xor xor sub loope (bad) push dec call push leave pop push inc popa nop fwait movsl sbbb arpl jb mov xor add pminub pusha xchg in les gs xchg add lret mov pop into fwait mov cmc inc les push ret add notl jno xchg arpl xor xor push stc jo xor je lcall or daa inc cmpsl lods mov test loopne xor nop jae or sbb aas test test mov jne xchg and imul cli jp das in divl pop sub sbb pop mov ficompl inc mov push dec xor enter (bad) pop sub pop xchg in pop sub test cmc mov xor push jg jmp das mov ret push outsb sub repz or cld in sbb add pop cmpsl rolb pusha xor pop inc sub cmp mov push in nop xor les cmp sub imul pop xrelease xor bound popaw mov sub or add push loope cld int fsubrl test sbb rcl ja outsb or add pop aad or call (bad) (bad) dec loopne inc cmc sbb mov (bad) fdivs mov cmp push pusha add push mov jno or fstpt sub popf in or in xchg jne sub mov and out rcl aas or outsb jae fadd sbb fiadd test or lea sub cmp mov xor xchg aaa mov and xor fldl adc shrl inc mov add pop add adc loope mov xchg and pop aas imul (bad) pop adc or test cmp (bad) hlt mov jmp pop add jmp xchg adc fs jle add test jmp mov sbb adcl fcomps mov mov pop dec push xor test dec inc ret ja (bad) and imul mov (bad) mov stc popa xchg xor cmp bound mov inc incb mov aad jne cs sti sub popl (bad) clc xor stos ds pop stos xor mov mov es (bad) jo add testl inc push sub xor (bad) jno pop inc cmpsb and adc xchg pop pop dec enter popa lcall add push cmp movsb out push or sbb fild sub sbb iret and add xor pop dec push mov nop das add rcll test imul inc clc pop cmpb repz pop mov pop sub pop jbe jmp xor mov mov outsl xor gs adc dec les cmpsl loop inc mov les (bad) pop sub mov jbe daa into lahf nop movsb adc adc sbb fiadd dec mov jo and add rol test movsb dec and push hlt push jnp jnp push push pop pop (bad) mov xor xorl jb mov scas mov pusha pop nop mov dec jmp cmp popf sarb lret mov mov adc repz adc cmpsl loope sbb adc push xor xchg mov add xchg fidivrl sbbb and mov sti std iret dec test (bad) inc fild scas push push cwtl dec or stos (bad) aam add or mov dec add cld clc addr16 jmp (bad) pop loopne (bad) (bad) (bad) fnstenv std pusha dec ficompl mov or jmp xchg mov cmp jae add sbb bound jl and push pop cmpsb xchg aam hlt pop lea push jge cmpsl or out int3 insl xchg notl add add pushf add cld fdivrs inc push pop push loop add ljmp loop add mov jg add push cli mov jne aad or lahf jp orl mov sub pusha cs add test lods xchg les push nop add es xor inc sub enter out push adc loopne mov mov ja jg mov xor pop ljmp xor mov push push push sbb lcall lahf mov in out jnp add popa dec shl pop stos xor in cs add lret das inc inc adc pop aam xlat out int3 cltd sub adc adc js mov or xorb divl pop cmp and aaa popa jge (bad) test adc jo mov push or or cwtl push mov fmull rcrl mov std bound aam int3 push inc mov mov call roll push mov (bad) (bad) inc add dec inc mov stc popf (bad) lret sarb mov inc movsb test pop fmull xor sub and jmp push jecxz mov cmp mov jne add or popf aad mov outsl mov mov and xchg inc in adc jmp lea and in stc push pusha adc movl outsl orl imul fs xlat out mov jno or sub mov push add pop add jmp and mov push iret push push (bad) jno js push sbb mov movsb repz in pop negb add pop sub xor xchg mov imulb enter aad lds and pop and push mov aas and add shr add (bad) mov and (bad) jbe lcall das mov mov xor jmp cmp push jg neg jmp push or movb sub pop push and mov pop sub add fsts xchg pusha leave jge mov jecxz cli pop cwtl aam (bad) jae add pop pop sub xor or dec mov mov jnp (bad) pop pop push (bad) jo jle sbb lds mov add xchg cmpsl outsb pop push dec add and nop imul add sbb inc notl dec lods xchg mov cmpsl adc out jmp jnp,pt loopne fdivrs pop xchg add cmp push push or ret adc dec int3 pop cmp fcmovnbe pop push movsl dec pop daa dec (bad) lods or ret or xor repz jg inc inc jmp sub push loop gs jg inc jmp aas push push jecxz dec cmp pop jmp mov add dec icebp andb rcr cld test (bad) faddl sub mov sub or push mov cltd mov bound lods inc jo and repz inc js add addr16 jg imul mov jmp xchg js xor adc adc push test sbb mov mov ljmp or fidiv subb mov inc mov clts shr int3 sub pop pop (bad) mov lret pushf (bad) mov mov imul fdivrs jmp cwtl push jp es les sahf push sbb scas cmpsb and lock aaa ret fist pop mov sub add push push mov sbb subl mov lea mov lock jge lock dec inc push into jg movsl mov (bad) (bad) shlb inc adcl inc push and pop inc in push jmp leave jmp jg cwtl cmp jne faddp pop inc testb cwtl xor jo mov test dec inc dec adc dec add add test or and mov test and cmp xchg ret mov or mov dec jmp insb sti icebp jmp adc push jge int3 xor jb rcrb and scas mov test mov cmp mov jne shrb (bad) and sub icebp push dec mov add jmp pop add add or mov add lds push adc jo sub and inc cmp in inc repz repnz adc or inc xchg xor addb stc dec outsl or inc fmuls inc lea nop insl fnstcw sub or ljmp jl imul xchg popa xorl inc and pop mov push dec movsl inc push pop fsqrt jbe in in jge lret sahf add mov jmp adc pop mov push sti and push xor std ljmp out ret loope out shll jl or sbb clc fnsave repz and lods fs push outsl into (bad) jmp cli sub pop dec sub xlat jg sub lods push decb add push lcall push mov adc ljmp dec lods jnp or sub in cld add sbb sarb pop sub push xchg pop sti push lahf in add pop (bad) xor or inc mov xchg xchg jle bound xor inc fsubrs cmp loop ds cmpsb inc push dec and jnp push push pop pop gs data16 lds inc js inc sbb mov pushf or pop push xchg (bad) adc outsl and push pop xlat fwait dec push leave adcb out lcall mov orl add cli cmp (bad) jo push ret jnp in fwait jnp xchg cld sub add and call sbb xor in or jmp sbb lcall dec inc lcall xor arpl jle add inc sub pop cmpsb pop mov xor push pusha mov pop pop jo xor inc mov jmp out pop pop pop inc xor fs add or push aam add scas pop pop xor jns xchg pop lods pop adc dec cmpsb popa add jo pop xor inc or cwtl sub mov mov cs xor out (bad) pop fcompl mov rcrb cli int3 gs mov test cmp out pop gs sub pop add subb in and cld ror daa and xor mov xor pop leave pop xor pusha push in push gs pop or pop insl inc xorb sub dec adc sub adc int xchg in out add cmpsl adc sub rclb or mov orl in ret lcall adc lea sbb (bad) mov cs jg jbe pop and cmpsl movsb shrb ss add adc and push imul shl add add mov xchg mov shrl or movsb push xchg xchg xor add mov mov mov enter inc xchg test (bad) mov dec xor std jmp in scas ja call addl sbb pop push mov mov xor jbe adc je push push jge jo push add and add jno inc scas int3 sbb add mov mov cwtl xchg add push sub push push sub nop test sbb or daa sbb pop push jnp push dec jmp pop push jl rorl xchg cmp cli mov sti std jp or dec call out pop cli sub imul pop into xchg (bad) or pop push pop pop test ficomp out push dec cvtpi2ps pop adc mov jo xchg xchg sbb jecxz add jae out push les sti or sbb add out jmp xchg adc ja push push pop mov adc in add push jmp jmp add xchg pop add shr push adc in xchg leave mov imul scas icebp sub pop into inc xor divl sti imul mov imulb ret sub xchg mov in icebp (bad) jo popf sbb pop and sub push add push (bad) jg addr16 jmp cmpsl in push test mov xor jp pop dec scas (bad) push sub push (bad) (bad) pop jmp (bad) test sub adc adc mov and fistp add ja jge push add negb push mov sub dec in cmp dec ljmp out je cli mov imul leave and adc jb fistp add push ret pop mov (bad) or rolb cmpsb icebp rclb pop clc adc mov clc fstps addr16 add push push pop add in or fucomp shrb push roll and call xor frstor test pop aad addr16 pop xchg push xor jb and mov cmp scas xchg lods jnp mov (bad) dec fstpt mov and data16 or xor ret stos mov push mov dec lcall and test or (bad) cmc dec pop leave jg in loop inc xor pop pusha pop xor ret popf xor sahf pop xor jbe test sub sub shlb add mov pusha es mov std mov fs ret sub adc or icebp rol loopne iret jp xor sbb inc sbb sub adc (bad) stos pushl cltd orl in push das inc adc inc not scas adc xchg or arpl ja push mov push pop push roll or out or push jmp adc cmp sarb xlat popf add cmp cs dec or dec jmp pop push adc inc popa or icebp xor xchg xchg xchg out adc dec inc stos cmp jnp ds mov mul add adc movsb or xor iret jg mov inc ret sub mov enter int ret dec aaa sbb adc mov rolb lret sarb dec push xlat and mov and mov arpl xchg in jne sub xor or push sbb rolb lcall ljmp add cmp test rcll mov sub (bad) mov inc rcll inc mov lret push jae adc add mov push and pop dec add add or (bad) popf push mov add push sbb sbb and cmp cltd pop rorb dec inc xor jns push xchg fdivs push sbb in pusha or and jo sub sbb add rorb or adc push sahf dec xchg adcl add (bad) insb jl mulb adc mov test xor or (bad) out inc or or jg pop aam data16 andl xchg icebp adc lcall int3 cmp out popa cmp adc dec rcll fildl (bad) jo jae popa pmuludq and cli cmc hlt ljmp clc imul call ja push xchg lock addr16 or inc pop xchg pop add out push adc test xchg mov orb dec outsb popf push outsl add shrb push xchg xchg cld jnp lcall or jbe inc push push cmpl leave data16 ljmp mov mov adc incl lcall push xchg sub js cld inc mov pop and pop sbb repnz mov dec insb lea and outsb add push or add push mov sbb push fsubs ret adc divb sub inc lods js pop mov mov push inc cwtl jge cmpsb sub push pop adc out cli andb cmp add push add dec mov call add into xchg insb jae mov xor pop adc fcoms fwait cmc push push add and (bad) xor adc icebp call xchg test test (bad) xchg hlt out xchg push push dec and mov nop bound (bad) out add mov xchg dec jb cltd (bad) push movsb fmuls pop or sbb add mov ljmp loop icebp subl leave push adc xor test inc mov mov (bad) pop rolb icebp daa jnp lret fmuls adc pop or xchg test mov mov jl xor test mov (bad) cwtl cmp insb or inc mov shll nop sub jl bound cld push sbb push (bad) mov mov leave jle xchg pusha push inc mov scas data16 sbb xchg lcall ret mov and jnp mov or jo push jecxz dec adc add fmuls push in dec jae adc sarl push xor daa sbbl sti dec adc mov js mov hlt das xchg enter cltd out adc js add aam and mov mov cwtl shll dec int fcomps mull lcall add sbb ficomp inc es dec int (bad) scas jne xchg or and push jle (bad) mov and std inc xor stos lret adc sub xor or leave xchg jb sbb lret push add int xor mov mov fs shl (bad) jae rorb add clc push addr16 idivl rcll sub inc push imul imul repnz or fcomps cmpsb add dec nop xchg pop adc je out mov add leave imul xor dec pop (bad) and inc subl imul add jbe xlat rcl or and cli movb ss fdivs (bad) and shlb add pop jge dec in out ret add sub incb ja movswl ds popa addr16 imul in sahf loopne outsl mov push add pop sbb (bad) lahf and pop (bad) fsubrl mov mov bound or loope in push adc add test sbb movsl call into jle xor mov xor dec lock add outsb test lret xchg mov and hlt mov in mov inc cld pop lods sti stc es adc bound inc daa ret mov or test scas add loop add iret mov sahf (bad) ss inc push lods (bad) pop imul xorl sar pop rolb xchg lea cmp add popa cltd addr16 or and pop sbb test es cli or nop (bad) in push aaa jns xor xchg sti mov dec cmpsb loopne (bad) xor lret incb xor imul adc sbb cmp xchg mov push add sbb mov and add xchg ds pop jge push jo mov stos cwtl jmp mov je and stc sbb or dec sarl fiadd call nop jmp decw in add lock sub xor jg mov dec mov mov adc mov mov xchg repnz subb mov int3 sub fisubr mov shll mov or xor mov rcrb pop fwait jge,pt add pop push jmp pop mov add negb push add pop add verr push leave pop test mov pusha pop xchg add faddl and xor fisubl mov lcall jno add (bad) xrelease shlb test sbb push pop mov mov push sub jp xor popa adc inc xchg in int3 or cmpsb add (bad) or shl xlat add je loope xor xorb clc sbb inc add inc mov stos or add imul add in cmp xchg cli test nop add enter mov adc fisttp pop je jmp xchg cmp aaa out enter es mov pop cs add mov mov fwait lret xchg mov add fimul jo pop push pop and add int3 xchg loopne testl xor fldenv adc and fstpt add lds xor loop cmp jns push enter add xchg dec rolb and das mov in sti xchg push sbb cmp out sarl push and add inc lea add inc push (bad) in push scas cwtl cwtl (bad) mov (bad) negl jle inc or dec mov fsubl orl test mov push int fs xchg adc add sbb and cmp adc cmp adc pop push hlt and jb sbb mov mov and jns and pop sahf popa shll pop lea test pop mov xor test loope xor fsubrs mov pop xor inc cwtl roll scas or out and mov push fistp push adc loop inc int3 xchg add adc push mov cmp sarb test cmp push mov sbbb mov xchg insb mov and xchg jne ja lret pushf xchg add mov rolb and mov cmp andb xchg dec add sbb xchg mov add imul add clc sbb cmc inc xchg push (bad) in fstl and aam add gs dec push push out loopne add adc inc push out inc jle cmp loope lock mov cltd add add (bad) stc sbb cmp push pushf xchg add fsubp dec loope jl xchg cld fsubrs sbb dec or or fadds jno push loop add cli cmp sub outsl divl jno or add mov and inc out movaps inc pop dec inc dec movsl hlt inc or arpl jno or mov push cmp out in cwtl mov andb sub xor push add jo daa xlat add aad xchg pop cmp and and push mov fidivrl and inc nop ja loop fwait loope lock test sub push fs loope jecxz lcall dec xchg xor stos mov xor dec test push adcb call std jnp sbb dec xor xor mov and and out and neg fmuls add repz mov and rorb mov outsb clc test mov and test sub and ffreep pop and outsl daa js and into in js pushf mov mov mov push add ljmp mov into mov test pop push sti add test push cmp mov mov popaw dec xchg notl out stos ja cmpsl orl and mov (bad) out add lret mov nop push jl and mov daa fcomip sbb stos test mov fxch adc and ljmp add inc nop enter add cwtl divl sbbl (bad) pusha jl aas mov (bad) cmp inc mov xchg dec sbb jo and rcll or add (bad) mov add dec aaa int3 inc cmp ljmp inc fdivrl jno stc imull add insl add lds adc (bad) xor add adc push sub int3 aas stos xchg mov inc pop stos mov pop (bad) mov adc scas mull cld push imul pusha xchg andl dec adc jmp xor or insl dec inc ds cmp clc xchg or cwtl add push ret or nop test jmp in and mov jb outsl pop mov div icebp popa add jns dec sbb std sub js outsl add add sbb adcl inc pop fwait js mov rclb shrb lcall xor xor add dec pop mov aad add mov pop and add xchg shrl dec inc shlb test (bad) mov orb add cmc inc cltd pushf popa lds fincstp iret aam xor shr pop mov inc xchg pop jge inc insl push in jo mov dec addr16 add leave out xchg test mov sub popa in sub mov in cmp shll cli xchg loopne adc movsl into fs dec xchg add mov push mov add adc pop hlt sub sbbl sbb mov mov mull call inc push repnz inc cwtl sbb jg dec mov enter add mov add cmc dec cld sub inc mov cmp cwtl aas std add movsl lcall jbe adc in sub lods mov mov push push adc cld pop mov sahf add mov (bad) int3 repnz and aaa mov pop add popa add notl jno xchg out mov test sub adc ud2 sarb mov jge add add and bnd xchg cmp inc popf stos mov or push adc clc test adc dec xor stos dec xchg rolb js mov mov pop push or add test push dec xor xchg pop jmp sub cmpsb and dec cmp mov shl sub xchg push gs mov mov mov lods rclb pop jne and cmp adc and inc stc add mov andb cmc rolb (bad) xor pusha mov out movsl adc mov mull fwait lea les push mov pop and aam stos sbbl push insl adc les add es xor lea testl stos insl push sbb pop inc mov add iret in pop pop jb adc rolb sti adc gs lcall sub lds sub lock bound fldl mov jecxz lods xchg inc fs pop add sbb add cli mov or inc jp cld lea imul sub das adcb or dec nop sbb fucomip xchg adcb rcrb pushf mov adcl lods sub add nop sbb pop dec xchg mov jmp dec cwtl pop push loopne inc push sbb mov icebp enter sub add pusha mov addr16 cld mov and stc and out orb jae mov cmp xchg mov aam cmc ror add fadd (bad) and sub inc hlt scas sbb add xlat add mov add push add push lds inc (bad) jno les mov scas and cmp or loopne jno mov sub mov push push addr16 push andl fild jl lods pop iret xchg jmp cwtl add enter sub and or cld negl and push push sub mov int3 sub jns jmp pop es xor xor adcl xchg mov int3 ljmp push sub add xor push jns sub and push jb imull mov stc imul mov sbb pop sti push les dec rolb adc add pop fisttpl sub xor push clc sbb and jo fldl dec or jmp jg es cmp and push stc fnstenv add stos cmp mov paddb lea sub cmp mov lcall pop jb inc pop cwtl add lock enter and subl and xor nop int3 pop mov sbb dec cmc xor sar mov or lds hlt jp out ret ja rcl mov js inc add imul sbb or out ret or mov mov or sub jecxz jecxz adc rolb mov movsl in xchg push pusha pop aam add add pop cld mov cmp sbb jne clc adc xchg push adc outsb xchg mov pop clc neg adc pushf js cmp push sarb mov dec jecxz decb ljmp or std pop mov lods push mov aam je xor push icebp mov mov pop daa mov cmp fistpll or les hlt mov mov jg imul test and call add cmpsb add pop inc xchg sub and leave cmp add test cmp sbb ja add enter mov cmp movsb mov push inc aad bound cmc and sbb mov enter xor add test adc in (bad) xlat daa mov push and add push cli dec cs pop movsb test adc test roll sbb and sbb scas dec xchg mov push jns aam loop les ficoml and inc cmpsl jp hlt inc movsb shrb inc xchg or notl clc orl in and into dec test insl movd fucomip out pop es pop lods dec sbb sub xchg pusha inc aas mov (bad) or or push push and call notb mov xchg or and dec mov pop repz pop inc test mov idiv cmpsl fisttp or clc xacquire (bad) in push or xchg testb es add outsl adc add movsl out popl sub sarb pop inc inc jmp (bad) add clc cs jbe mov sub or xchg sets scas lods xchg jge inc sbb xor push xchg or cmp loopne cmc insl jge push femms pop jp dec into xchg jbe pop out push mov and sub and mov mov dec pop inc add xchg jb aam add cltd add pushf pop add incb cwtl cs push cmp (bad) ljmp ds xchg adc hlt dec sub loopne mov sahf in add or inc adc and (bad) xor out and psrad xor dec pop jb xor or dec pushf inc sub andl or leave pushaw pushf stos mov aas jnp pop jp pop fs pop aaa int or in push mov daa push movsl inc mov add stos jg int3 testb (bad) mov inc fsubr fistpll cmpsb stc add inc sahf add aaa fsts mov jno jae arpl ds cmp sbb mov pop cmc add lock sar rcr xor cmpsb stos sub les dec aaa ja add aad (bad) lret pop lock loopne mov add jecxz lock mov adc and jne adc sbb fwait pusha add inc popf mov nop (bad) cmpsb ja xchg sbb inc aaa mov push add push test fs out push in outsb (bad) sarb nop stos cltd sbb inc (bad) dec shlb lret (bad) cmpsb sbb mov add inc push scas cmp pop pop pop roll int addl (bad) ficompl pop inc cmp jmp movsl adc test pop int3 shll inc pusha and mov push inc cmpl unpcklps mov push repz add cltd mov mov add sub and add out and xchg cmp inc pop xchg inc add mov sbb mov dec movsb mov dec or (bad) dec mov je daa cltd (bad) rol inc bound add inc insb xchg cmp jno xchg sub inc xchg adc faddl or mov mov subb loopne sahf mov or pop mov adc dec and and pop std xchg adc jae aam test xchg (bad) aaa aaa shl or addb leave sub and add lret xor icebp inc nop mov pop jp dec xchg xor lret les adc mov popf mov sub cli sbb cmp mov and mov aam or inc std xchg mov push ret jl cwtl icebp in mov and push jl call jno clc call loopne rolb and jmp test add sub adc iret xchg add mov loop addr16 mov xchg sub add mov add inc outsb mov xor jmp inc lahf jle sarb dec js or ja lea aad js xchg sbb xchg mov sub push xor inc icebp mov enter inc and add inc sub jl js cld hlt lock mov popa sub jg dec inc jl mov nop fsubl idivb fimull mov lea call std in stos pusha and push and dec jg add or adc xchg jmp jbe cmp (bad) sub pop pushf inc lds enter fwait xchg add and mov gs mov cmp aad pusha insb or mov cmp dec inc dec sub mov data16 shrb jl push pop push inc mov les sub lahf loope int3 daa inc out test shr add in imul and add hlt add mov loope roll xor add cltd lds (bad) mov cld hlt leave add and repnz pop push lods imul fwait pop xlat enter inc mov ja xchg cmp sar stc pop mov leave or test push inc repnz add mov or sbb test jl ss and es mov mov lcall jp nop add in xor add jmp inc lock out and xchg pop lea adc sbbb cmc inc sbb add lret jmp lock pusha inc and addr16 (bad) sarl nop sub dec sub mov aad xor mov in and add sbb and xor sub gs js shl fucomip push in bound icebp mov shrb inc push fdivp rclb pusha and and push mov mov stos cwtl les inc sbbb in push add test jl pushf xchg mov ja cmpsb dec inc mov call adc iret jo fsubrs sarl in add and pop push das add mov icebp aam mov test mov sbb les insb inc clc inc pop add out ret ja xor repz adc adc pusha xchg push mov repnz call inc dec xchg mov nop inc pop sbbl pop or xchg cld nop call sub push mov mov add orl mov jo lret mov cld ret sbb (bad) mov pop pop mov stc fs dec nop add inc jb add enter mov xor add in or mov mov ror pop ss and lahf mov fdivrs mov jnp stc push pop add ja nop call les loopne pop jnp test or push mov mov (bad) rcll jle loopne subb popf xor rcl call and imulb cwtl je mov cli push add mov cmp add into fsub inc (bad) (bad) aaa add mov add ljmp pop add xchg mov popf subb les pop push sbb in jae dec mov test test inc xor add sub dec test and test ret lea cmpsb repnz loop lock lods and push mov or push (bad) fsubr add cmp or add jne (bad) dec xchg (bad) mov std (bad) jno ds repz cli fwait pop add cs fsubr mov lock adc mov dec lods scas in sbb or sub inc call lret adc (bad) in rcr sahf jp mov aaa fisttp inc lahf or mov add and add fwait subb mov xor xchg sub inc lock orb mov sub cmp icebp jge mov rolb add mov jnp pop add adc nop shrb fwait std pusha adc or inc pop jmp jo ds sbb into sub add test mov adc push les nop add inc incl push ljmp mov loop lds or pop cltd loope je popf pop lret std (bad) cmpsb and pop insb adc inc nop (bad) push mov js add push mov sub jp pop push mov ja ret mov lods and loopne (bad) mov pusha or inc sbb inc mov ja sahf mov xor add sbb xchg nop inc std mov (bad) fwait or out adc xor in dec gs sar nop (bad) flds jns stos jp pop mov dec xor ret fsts rorb les test in and pop ds (bad) mul pushf enter pop mov pop inc xor cmpsl mov pusha and pop mov dec push mov rcl adc pop pop in pop ret and pusha popa mov xor dec test in or in and clc sbb or adc inc cwtl sbbl add and xor imul and (bad) mov and in adc stc sbb sbb mov sub jl mov pushf (bad) fadd les inc rclb hlt add call clc in stos stos test les push sbb pop and xor adc gs mov (bad) sbb inc inc test in xchg pusha xchg mov mov add mov adc mov mov xor mov xchg mov or dec adc sub cwtl clc repz mov (bad) mov mov test dec mov nop movsb enter cmp (bad) jns test add insl das mov loopne inc pusha fmull dec push pop or enter or push (bad) dec cmpsl inc mov push add ds dec shrl lea dec sub aam jo sahf mov insl ja sub xchg aam mov clc cmpsl mov and lahf mov ret cmp mov fsts in inc inc pop test cmp cmpsb xor dec fsubr clc or mov jb or das stos (bad) lock in xor and add jae (bad) pop lret mov cwtl and dec loopne sbb xchg inc popf (bad) cli and add or (bad) and mov rcrb rcr (bad) jne scas fcoml add and lods mov (bad) cmp cmc cmp dec pop call std sbb jnp inc and sub push dec add jg inc movsb negb mov or add pusha add loopne add add dec cmpsl sahf adc (bad) es out add cltd sub loope add je int adc xor pusha adc ds insb sbb inc daa or les sbb int les sahf jle (bad) mov inc push test lret shld test cmp mov outsb pusha xchg loopne and mov jo lahf (bad) lret pop add mov fsubl (bad) cmpsl cmp sub fcomi mul dec cmp pop add lods test mov movsl fcomps call int3 adc mov addr16 cmp fildll mov pop dec sbb ret (bad) push inc sar lods in dec xchg dec cmp jno mov fiaddl les test jb add jecxz lret cmc push cmp xchg (bad) cmp cmpl into in xchg (bad) (bad) flds xor aam fdivs inc cmp or enter add ret rcrb sbb mov lods pusha xchg repz pop inc mov hlt push cwtl popa aad subl cmpsb dec push fisubr push sbb jns push or and xchg push cmpl outsl dec pop cmp add sti scas xor jb or test lock in leave inc add test fcompl mov loopnew inc jl add jle inc add lahf xlat out fs fcoms addr16 pushf rcll mov jne cli xlat push pop (bad) xchg add rorb push into xorl and mov xor movsl jbe jle inc add add pop cmp xor dec rorl and sbb testb adc add lods (bad) lcall daa add and scas cmp fldl lret sbb mov xor data16 fdivrl or xor movsb mov mov mov in push pop aam loopne sub push inc add push push clc cmp mov pusha fwait jno sbb sbb adc outsl push adc cmpsl pop daa mov jnp out arpl loopne add scas push xchg add fistpl xor test das pushf in cmp fist fs in mull dec std pop xor jo fyl2xp1 cmp xchg sub into clc sbb and mov inc ja iret test enter push mov mov movsl adc inc rolb fnstcw icebp mov xchg repz call xchg pop xchg sub push sbb dec cld call sub ret push pushf jle out fistpll dec cs repnz jb nop jp inc pop add xlat push cs mov cmpb cmpsl adc iret dec jno stc cs lock mov add (bad) in xchg scas jl in add clc inc mov and mov adcb insb mov push aad inc xorl fdivrs inc inc dec sbb addr16 pop repz fistpl in jns xor add and (bad) call or nop sub push push mov add and adc jp (bad) out orb inc push stos leave ja and sbb add cwtl (bad) cmp mov hlt clc sub xor push mov icebp dec add movsb push imul inc enter add jp and insl aam pmaxub dec imul adc maxps sub jmp test and pop jge es adc add int3 push adc mov cmp stos cmp add xchg lahf pop je add std add jp sbb add cmp orl jle cmp add pop out (bad) cmc mov push add mov add fld cli mov sahf mov push stos push mov mov and jb (bad) jo mov jbe clc jns in adc mov pushf xchg dec xor sbb mov int3 stos and out adc call js test imul shll dec mov jbe adc push jg ds inc pop adc rcr sub pop lods (bad) jbe andl xor xor xchg mov mov fidivl mov add stc sub xchg shll push add rorl insb push jmp mov fwait push xor xchg add (bad) pop add dec imul push mov xor mov dec add cmp or ss mov js inc test xchg notb popa mov mov fcoms push jbe push call jns xor mov iret loopne xadd pop and xor add mov mov or scas cmc loope inc cmpsl pop mov nop jns nop fs cmc out pop jge mov lods pop sbb jmp cmp jle loope sbb push dec les sub cld fldt int pop in clc xchg into ja jl add (bad) mov fcoml (bad) add mov dec and iret or sub dec je inc pop in lods das and outsb sub pusha push adc sbbb stos aam sahf mov sbb and bound in or mov xchg add push cmpsb or mov negl sbb or adc out jns pusha lods push (bad) data16 push adc out dec jno mov pushf jne add pop inc sbb inc inc nop enter int out xchg dec or mov (bad) imul and xor jle ja add push scas cwtl insl push pop add loope cmc ret pop fisttpl cld outsl inc (bad) adc mov cli lock mov jbe jo mov call push jno mov xchg cmp call call mov pop xchg rcrb adc add mov adc xchg je and pop and sub jmp mov lret imul and jl sub jnp xchg sbb inc mov or hlt js jno pop cmpsb (bad) cmp fnop adc mov add leave cmp lea jge inc movsb insb xchg or dec jmp mov out mov pushf pop out mov (bad) bound and leave add inc lods testl in push mov dec mov es out lahf test adc pop fs movsb pusha cltd push mov pop imul (bad) xor add lahf jbe fwait xchg mov inc insb aam sbb adc push xchg nop mov inc lods dec and and fild movsl inc sbb out adc adc cmpsb jbe mov in add ret mov cmp mov sub out pop pushf (bad) dec inc call xor subb push push mov (bad) mov add incl and iret lcall xchg and in xchg pusha jge pop jns sbb or lret shrb and mov and mov cmc repnz jo fidiv fsts dec push jo mov dec into in rolb push (bad) fs or (bad) sub mov pop inc je insb out mov jbe stos std lds pop test movsb popa sub mov sbb movsb and pusha subl cwtl add dec adc psllw test clc mov fwait fs push mov push mov jbe xchg loopne gs sarl dec sbb insb xchg xchg inc hlt (bad) jo add lcall and push pop lods add sar push sbb or mov mov pop pusha mov push mov inc pop mov xchg cmp mov and push sbb and sub sub iret add pop icebp pusha mov mov jns mov lods push inc lods mov cwtl or add mov enterw jb rcrb add in cmp ljmp cli cmpl lahf xor repz dec mov iret (bad) lret mov ljmp jbe push insl pop loopne pop cltd mov sub test scas orl pop dec and idivb pop outsl cwtl add inc add pushf mov fnstenv sub (bad) clc out and adc insl and aaa enter iret or aas add call jge and fsts pop sub add inc push mov test or adc adc vmread nop push push mov inc loopne dec loopne sarl add sbb fs sahf ror mov fildl imul jge loope xchg es pop mov fwait cmp push sub sbb push jl test and dec adc dec inc xchg ss enter cld sbb inc cwtl fcmovu add inc or mov pop mov xchg and xor imul faddl insb shlb dec mov ret sbb insb adc or inc aad hlt cmp add add out add inc test adc jbe dec fcompl bound inc pop fimull pop dec xchg mov jbe xchg add xchg cmp or cmp (bad) adc loope test cmpb dec js sub inc (bad) stos dec pusha sbb xchg in inc mov and popa and xchg xor push int3 adc insl mov or lock or inc fnstenv cmp add jbe jl xchg pusha inc (bad) jne sbb adc mov repz pop pushf test sbb mov adc (bad) sub lods and pop inc mov les outsl add mov and add movsl mov or dec jecxz nop (bad) push pop sub adc mov jl mov add cli sti mov mov mov (bad) dec mov add sbbb int3 cld enter hlt mov imul or test cmc mov and cwtl ds lahf ds mov orb in jno iret mov pop add adc sbb jl and mov adc and mov push mov subb xor adc xor aam test add or sbb and mov cmpsb int3 xchg xor xor mov shlb roll (bad) mov add or aaa fisubrl mov sahf clc sbb push faddl sub clc push (bad) jp pop sub mov mov out dec in jbe inc jl stos push adc cmpsb testl adc mov jge leave cmpsl jo addr16 push cs adc in push add sbb movsl int3 (bad) (bad) mov sub lret xor inc mov pop leave inc shl xchg push pop xchg rcr cmc jl push dec sub pushf movsb or leave adc mov sub scas lds jno add dec jp push cli pop inc inc pop loopne mov cmpb xchg cmp cmp xadd out mov push adc push inc nop push or inc add enter lock mov daa cltd pop add or loope push addr16 pusha mov adc orb push mov pop add outsl mov mov les sbb movsb or jecxz fcmove addb push and add ret adc or and push jge pop fcmovu mov jns out xor andb mov xchg cmp xchg and add sbb pop mov fucomi mov add jno test aaa inc in lcall dec outsb mov pop xor aam lods vmread inc loopne or jge test or and icebp sbb xor test push inc push jecxz pusha pop fdivrl inc or sti ds jo in push and cmpb movsb jb jmp call cmp loope add ja and mov pusha adc and adc sti or xor and test mov adc test push roll jl sub inc imul xor inc xlat test add popf int (bad) sub paddsb cmp popf xchg add out mov or and add daa popl repz sbb scas and std cltd add shrl push loopne inc rolb imul push ss aam inc (bad) jno mov adc mov adc jbe sub sbb andl jecxz jo add sahf jbe loop sbb mov sbb add adc dec leave imul sbb sbb dec and cmp cwtl pop pop add loope adc pop mov xor add hlt fisttpl outsb ret or dec cmp xor ljmp xchg je fild sub jmp aad sbb std aam lds push subb xchg add andl sbb sbb cmpsb fcoms out mov add sub in fild cs mov out jbe enter cmp test pop rcll dec test add xchg in push add addr16 sbb or test mov int3 mov adc sub sbb sbb xchg jp (bad) ljmp inc cmc das rorl (bad) push roll xor push jecxz dec push jns mov fadd mov dec or mov dec je add jbe sbb add xor add fist mov test scas mov outsb add fisubrl imul add ret movsb adc pop cmc es jg adc mov pop jle or xor xchg cmpsl test sub imul shr sti add outsb jb mov ret movsb push scas (bad) clc jmp push or (bad) jg sbb (bad) jle and pop mov cmpl clc test roll addr16 push push stc mov or test xchg jns mov or cmp scas insl xchg sbb sub pop push sub dec adc pop clc pop or sbb mov add aad cs pop xchg inc xchg or inc lret ret enter mov mov pusha cmp sub sub bnd xor fmull mov xchg pushf cmp mov (bad) mov fs pop sub xor xchg mov lods and out add add sbb add incb pop mov addb add rcrl or dec fistpl lret sbb lea fs adc sbb rol dec push and mov pop test (bad) ja test fild inc add fs lahf add test mov sub aas sbb xchg jns dec mov inc mov movsl pop decb mov dec fldt cltd dec je cs add test add enter push cltd xchg rolb rcrb inc xchg pop test mov sbb repz out (bad) or int3 sbb les insb lcall in add adcb lcall shlb mov and mov mov dec pop bound movsb and push add or sub (bad) aad test push inc lds push and mov jbe push push je rorl and js xor xchg jnp (bad) mov dec xchg push aam loope sub das inc inc scas or cld mov add add or fmuls adc dec and mov dec push and jne pusha mov sbb push jp sbb or fdivr dec push js and (bad) lock lods and daa add rolb lcall ror cmp add popa adc dec pusha les adc rolb or or or sbb das mov (bad) fldcw xchg sbb and add (bad) add aad lahf cmp ljmp push les call call (bad) orl dec adc orb std sbb mov incl sbb and andb or dec lock push mov cmp les inc faddl and and std pop jg js sahf and mov das xchg rcll and mov xchg fmul sbb inc adc repz xchg dec and add push jb pop out jo push in or in in inc ds int3 add cmp in mov test popf dec jbe enter decb jae jno aaa dec push xor inc add js test mov adc outsl shrb mov mov fdivr mov push and add es sbb mov sbb rolb xchg jo mov rolb push xchg pop popa xor or lcall inc xor jb adc pusha xor and inc rorb test leave lock xor mov sahf sbb adc cltd jl xchg leave xchg cmp jnp jbe xchg (bad) push xchg sub ja xchg xchg mov sub cwtl popa int pop xchg xor add push push sbb gs jecxz aad xchg push sub sbb add (bad) mov jae xchg jl mov fisttpll sbb lods mov ret stos and sub dec int3 (bad) nop js cmp es push push inc pop or cltd jno add mov sahf mov call xchg mov add lret push push movsb adcl call xor test xchg lock cltd xlat nop or adc dec cld fs sub decl sbb leave stc inc cmp mov adc sbb lock adc popf pop int3 push pop sbb adc inc sub mov test and mov ds push dec jo sbb mov fidivr mov lds and (bad) movsb and inc ja and (bad) int3 add cmp subl xlat dec shr nop in loopne and dec pop adc jnp (bad) (bad) jge sarb mov mov dec xchg inc mov adc inc (bad) or adc or bound dec test push test and push out mov imul in lock fnop sbb (bad) sarl push int pushf adc jmp sbb jns xchg pushf or and or jb adc xchg in and sub inc mov mov adc push testb jmp push jge jno inc enter in pusha or sbb mov clc (bad) mov call xchg dec loopne daa mov int or lea cmc push pop aam fadd inc nop int test push mov dec push mov or hlt or adc jbe pop mov loop test xchg adc xchg add xor pushf mov insb int xchg adc add push movsl adc and ss sub xchg jns or out and inc hlt push or jbe mov cmp cld test rcll loope lock mov add or mov mov adc pop adc dec pusha sbb pop lds sbb adc sahf xor test (bad) add cmp js cs nop or dec test rolb sub nop pushf or mov fnstcw cltd inc adc je sbb xchg ret dec add ss cld rcrb mov pop add xchg adc cld ja xor icebp (bad) (bad) sub or popf loop jge les (bad) icebp adc jmp or addb dec aam and xorb (bad) (bad) pop leave and cld ljmp xchg mov xor or cmp test sarl test inc dec testb mov out aad mov sub cmp mov adcb push or cwtl and sub cmpb sub push add loopne,pn mov (bad) fs xor in or lds cwtl or test aad xor repnz dec push xor push sub dec lea (bad) lret (bad) sub add dec push loope pop mov out cmp sub mov add sub aam sbb xchg sub add mov inc nop dec and lcall jns sbb repz nop add pusha xchg inc lock xchg lods and js push insb push das push pop mov add lret mov out in cmp lds push into repz pop and daa jge jecxz movsl mov xor rclb sub jmp xchg mov pop lcall out in aas lock jp pusha add xchg pop mov push loopne aaa or mov xchg rorl sbb js rcll push add pop xchg dec xchg push sub mov adc outsl inc pop aad add xchg loopne (bad) xor das adc and sbb add ret cmc cltd add mov (bad) jmp (bad) or enter out mov sti and bnd aam cltd mov icebp dec pusha jl xchg adc js pushf aam popa xchg ror enter cltd inc cltd xchg mov shr mulb push cmp je and divb inc cmp jb adc sub cmp pusha stos imul shlb cld or jo dec or or test cwtl push (bad) jbe rcll add cmp ret or jle sti push fs (bad) ja loop adc icebp pop sbb and inc xor sbb sti xor enter out std ljmp fs loope icebp inc outsl inc mov icebp test dec add ret mov inc dec ret rolb insl (bad) stc and dec xchg enter or js and sahf insb push rol inc dec xchg cmp arpl push cltd (bad) nop pusha pusha mov jns mov and add loop and (bad) mov push mov sti je and ds jbe add inc xor or or push (bad) shrl push mov sub dec fwait cmpsl fadds push int3 clc test movsb push xchg push sub addb xchg push je and test and fs or lret adc ljmp or cmc mov lock lock sbb sub int3 inc mov and loop enter rcrb lock or or lea sbb jg or enter or lcall enter ror lds sub or mov les lock ss mov (bad) (bad) cmp add add int bound mov or mov movsb loopne pop sub mov fs movsl mov pop sub mov xchg pushf sub sub mov xchg dec jmp lea nop adc enter dec xchg xchg movsb sti push andb sbb and hlt daa test and (bad) roll lds mov inc aam dec movsl jecxz pop ds rorl add ret push dec push imul dec test lock mov cmpsb mov or data16 loopne movsb inc cltd sub (bad) dec adc or adc xor jp sub cwtl mov or add cmp jmp pushf int3 mov cmpsl adc shrb sbb movsb add pop xor or dec fdivrp pop sbb call mov pop cmp dec dec enter test adc or and sarb in enter inc fwait dec add push les dec mov add xchg xor mov add loopne (bad) cltd es sub iret and lock enter dec into test lea add mov dec mov xor rclb sub add pop ss loopne xchg subb jle pushf sbb mov movsb xchg adc adc mov xchg shlb mov mov adc insb or pop dec jmp dec lahf int3 loopne sub insl pushf add (bad) jp and xchg dec adc std js pushf push inc sarl add sbb pushf outsb je add add std inc hlt fsub mov movsb repnz pop fdiv ja mov or adc and lcall je data16 inc mov sub test add fldl or mov and push mov je xchg push call adc and mov dec dec adc in adc clc aad and aam sbb mov das lahf mov pushf pushf and sub adc or sarb lods repnz add sbb xchg xchg jge or mov es or push lahf insb cmp ret xchg hlt js loopne dec je js dec mov or adc lds sbb add dec pop cmpsl hlt xchg cwtl cld repz or add add or lret jmp cwtl lahf mov adc pop sahf std push xor cwtl mov sarb gs jl addb insb nop cmp pop jb lahf aam test hlt adc rolb dec frndint push mov mov mov xchg xor jl mov adc cld loopne mov xchg jnp lcall pop std pop cli shrb hlt push inc add (bad) cmc push movsb lock mov mov insl mov mov (bad) sub dec and cmp pop sbb lods push rorl mov inc int sbb mov pop icebp mov pop fcoml xor es cmpsl (bad) jne inc sbb ljmp lock in rcll outsl or push and inc push xchg lock and in and inc xchg mov jnp xchg jmp mov test mov adc lea cmp add and call mov inc test adc pop (bad) enter inc mov pop (bad) xor test jnp enter add nop mov repz ret and ret dec xlat aam jno pusha add inc nop mov jecxz int3 or bound pusha test adc adc in sub or lock cmp and subb pop xor add rcl es loope dec push aas test in stc (bad) jne inc loopne icebp inc loopne pop mov lcall cld push into inc sub push add popa xchg ret repz cltd dec pop pop (bad) or fsubs jmp out pop mov push inc mov sbb hlt leave inc sbb arpl pop fdivl or popf dec add dec add cmp mov mov imul and (bad) sub in js dec mov xchg push call dec cmp or dec outsb mov adc and ss jne clc adc adc adc mov ficoml dec in xchg mov fadds cs sahf rolb or leave lahf xchg dec imul pop push fstpt dec and add (bad) and (bad) push testb dec xchg xor iret cltd cmc lret or add adc dec push cmc or les aas or int test out arpl movb sbb sub fist shll dec repz cmp cmp inc (bad) fs mov sub js or hlt or lock lds inc adc xchg pop scas icebp mov sbb clc mov or and add xor dec sub loop push fcoml adc in daa jmp dec repz and std mov lcall mov stos int3 loope lods and pop push pushf or pop inc enter dec and (bad) mov int stc pushf nop push or js int inc pusha add add movsl hlt or andl xchg adc jns aas (bad) pop adc das mov mov cmp mov loop mov inc lcall sub test cmp mov lcall push std add or js movsl in jl mov fidivl pusha adc mov imul dec jo dec xchg (bad) mov mov sub aam stos adc lea aam push (bad) add add xor sub inc dec mov (bad) sbb sub call nop push je xchg cmp jmp cmp adc inc inc pop and sahf add repnz testb inc push loop or dec fs xchg rolb jge,pn pop add and inc lock adc das mov xor popl bound and jl arpl xor cmp cmp imul xor jg push pushf sub xchg fistpll add out call aam movsb movaps cld iret call jecxz cmpsb xor add push rolb xchg and push cmp ja mov pop pop dec outsl call push or push lock scas or repnz add ljmp adcl and aas pusha or test jno pusha out jns pusha loopne add aas rcll mov sub mov in (bad) test or push outsb xor cmp stc mov push xor cltd movsb insb test hlt inc add jp mov inc or pop push outsb sub dec jnp dec loopne push dec jbe adc fildl outsb inc enter xor push jnp scas loopne mov jb add ret cld xor adcl pop (bad) loope mov sbb out xor in sub pop outsl jno ret repz sub call aad pop stc lcall jmp mov shl pop lods rcrb sbb push add in (bad) loope ficoml xor add icebp xchg jnp stos insl pop push and add sub push xor fbld jle mov sub flds jbe pop psrld in cmp add in and fwait dec add in (bad) scas xchg fsubs and adc push cmp call and popa add sbb je adc add cmp int sahf mov loopne xchg call jecxz loope lock jne inc xchg jmp pop popf mov les inc rolb pop or pop jmp lea icebp xor ret jge andb sti les jno sbb pushf pop enter xchg ret lcall push ljmp or lea xor fidiv mov imul dec pop lret xor out fistp xchg jbe add or pop into imul aaa push pushf nop cmp lret jl push push addb sub enter adc and and mov bound pushf out in jecxz sarb movl in pushf xchg inc (bad) mov sub dec jmp adc sub mov repz push shrl in in mov dec (bad) lock cmp into sbb cli ret call mov aas adc push in test je scas lea fwait mov xlat ljmp sub inc int nop or xchg out ret cmp add sbb jbe pop and add lcall mov push inc pop push fidivr pop test adc dec push mov cmpsl insl adc sub test adc adc insb adc cs cwtl adc xor cmp push mov addr16 enter fs jo inc (bad) mov cli addl xchg rol lods or inc add nop mov xor dec jo rcl xchg push xor pop mov out popf fcmove xor jl add push in sub mov jl xor add (bad) cmc jecxz roll arpl inc adc fist and pop adc imul fldenv in into mov inc push out pop ret dec call cmp xor mov xor fstl add es loope and int3 adc test push jno xchg movsl adcb cmpsl dec int3 inc adc pusha (bad) mov add cmp cmp or and mov mov imul dec in sub (bad) (bad) out lret sbb cmp or pop out inc into jae and sbb sub mov mov or orb sub call enter rcrb int3 sbb bound add mov add mov movsb lahf mov out pop add (bad) push pusha iret test in sbb mov add in adc cmp xor imul repnz enter pusha push jns test or sbb enter inc in ja and jl xor out fwait dec rol jo pop adc dec mov and cmp or arpl dec dec or xor mov or sbb bound cmp lcall cmp lcall pusha testb jle repz rolb pushf or movsb or lea insb sbb shlb sub jge adc adc adc sub push int3 (bad) sbb jle and lds clc loopne mul es aam add adc sbb push adc add jb inc mov xchg adc rcrb pop into outsl or mov cmp sbb xor mov clc sti sub xchg movsb add cmp outsl jecxz adc cmp pop mov enter rclb (bad) sbb or push leave adc dec out adc xlat pop push jle fs addl adc sbb xchg pop xchg adc loopne jecxz test sub mov pop adc and scas inc or js fwait pusha add nop push pusha adc cmp je hlt push pushf mov or and dec cmp mov xchg hlt movsb dec out js addl popf add push and pop ret dec outsl adc ret jo inc sbb mov inc fild mov mov add add mov or insb xchg in movsb pop sbb mov cmp push jle sub nop jl xlat rolb jecxz mov add loopne mov or lds mov inc sti test pop mov xor je adc out and sahf adc ret add mov pushf nop adc add sbb dec xor (bad) fbld aad sub aas jge fwait dec in add lea mov cltd xor adc stc test cs pop incl and and dec call cmpsl xor xchg shll sub push and mov sub bound fisub jg xchg fst loopne mov inc jl je push add ret or les mov je outsl or lea mov scas push hlt inc inc lock test push inc sbb xor sub inc mov sub fsub ret xor movsl and (bad) test test das and sub lds les popa inc mov mov adc push fnsave or cmpsb cld or pusha xchg jp fcompl lret xchg shrb push push add test jo pushf jo inc or add test fwait dec imul inc sbb add loopne cmpsl sub rorb test add adc and and sbb in mov popa xor xchg test stc cmp in add push cmp call xlat and push dec and lahf cmp loope jge xchg xor and sahf push push dec ljmp add and movl iret xchg mov sub xchg push mov andb push mov inc enter pop ficomp mov (bad) mov clc lret js cmp cld (bad) repnz ret sub xor cmpsl sahf sbb sahf xchg movsb add clc push adc imul leave add (bad) int in subb adc insl fmuls jg adc bound and mov enter loope movl sub xor mov movsb lods es pop les (bad) add xchg xor xor out dec inc cwtl sbb mov sti add mov insb sub sbb cmc xor jg jp xchg dec add add jnp,pt fadds mov pop icebp mov adc and subl jno cli out inc xchg lods bound insl add mov pusha sbb test dec mov jecxz mov ret mov adc (bad) and push nop or dec lret in loop fcomip stc test or sbb sub and repnz sub mov aam loope adc adc xor loope mov mov or inc inc repnz inc and jle sub fisub and xchg out push aas out imul xchg iret cwtl in rclb stos (bad) mov int3 adc pusha sub addb lds hlt dec sub subb clc and loopne fs leave and lret or cwtl mov loopne sub ret xchg inc or pusha arpl popa mov push in mov data16 xor data16 inc mov into shl and loope rorb stos mov movsl and cmp lcall pop dec adc ss mov sbb in dec popa sub pop mov cmp jl les dec sbb push cmp adc das xor mov lret cmp mov mov sbb clc xor (bad) mov pusha fs fidivl mov xor in cmp repnz add loopne mov ja dec pushf push sub or and mov imul xor push pop xorl fimul enter test cld das sbb addr16 or mov lock and lock out sub lods inc dec frstor push cltd mov les loopne or cwtl jbe add sub fs loopne jb inc sahf inc mov mov jne shrl insl xor adc popa loop sbb icebp or (bad) loop ret lret fnstcw push pop add pop mov sarb add xor add pop xchg rorl lahf mov popf pop test int3 arpl mov icebp cltd inc dec pop test lea jle cmp pusha faddp cld mov leave les stc jbe dec sub repz scas (bad) dec jmp jns movsl or push inc mov (bad) add add jbe ret mov mov mov jae mov fsubrs add insl or sub bound mov jp cld adc and jbe push jns sbb or xchg out loopne loop rorb mov sbb mov sub adc loope mov arpl or ljmp add xor inc rcll jl adc std adc mov dec jmp enter jge or xor ss mov adc push in cmp mov pusha ret add jne and inc xchg jl xchg or xchg mov pushf adcl cwtl nop sahf and dec stos jg stos push into sub adc mov test repz aam inc scas xchg int3 fs mov mov ret lds pop pusha cwtl dec dec push lock push mov test mov int3 xor rclb add rolb cwtl mov inc dec push mov mov xor cld test pop mov xchg xchg and shrb mov xchg adc and ja xchg dec mov and aam mov or mov dec fistp inc dec test cwtl sti or inc cmp jns sbb insl leave sbb movl test fist out sbb or adc and fcmovne adc push cmp push mov mov (bad) js jb cmp mov loope and mov pop fwait pop rcl (bad) lea xor adc int3 jae repz lds addr16 pop mov sbb test jl dec push je sbbl cmp pop xor aad inc (bad) lret daa popa sbb push jge pusha sub adcb xchg push sub mov in movzwl mov dec repz mov les push xchg jecxz adc in inc pop mov add adc pop nop js outsb adc jge xor addr16 jo jno cwtl jb sub push outsl insb mov xor popw and cld iret add push jb push or fwait sub aam cs xchg cmp cld and imul sbb in lods lret adc aam mov mov roll fsubrl repz dec inc fdivl mov sub mov mov aam sti and in ret leave js push loopne int add xor test cmp (bad) in mov push pop push pusha sub aad (bad) adc xor jns or jno rolb mov fstps cmp leave lea or daa push int3 dec js mov and cli clc (bad) sub adc or adc les test push or push push adc in aam test rcrb sbb mov cmpsb cltd pushf add mov and sahf add mov std sub dec inc add mov dec enter mov bound ret xor movsl lcall and and movsl dec add aaa sbb dec sub push pop das dec test leave and iret insl pop adc outsl inc xchg ret inc or xor add xor push sahf sub xor add gs push js clc push in adc cmp out rep enter (bad) dec popf or xchg ret cmovnp xchg add popa inc out pop loopne dec ficompl pop aam in test sbb and (bad) lock inc in xchg rcr je call sub inc xchg sub enter sub adc inc pushf dec imul add (bad) leave rorb ja clc xchg cmp scas add stos clc inc xchg lock sub add out push ret shll cmp (bad) jns add adc mov (bad) aad fs xor fwait dec dec pop pusha pop xchg and movsl mov aas mov loope inc in mov aas inc scas sub cwtl lods add daa cmp inc loope mov adc les adc xchg mov adc mov test sarl dec sahf lea arpl out mov sahf and in sub (bad) and inc in xor test pusha xchg repz pop mov mov rorb in xchg test das xor lret movsb cmp in inc loopne je out pop enterw mov popa xchg punpcklwd and inc shl mov mov out add (bad) mov add (bad) fidivrl pop test or xchg out sub mov mov lret loopne fstps arpl gs sbb in push jnp lret out and loop mov sub xchg sub (bad) sbb xor stos sahf mov jp adc pop push mov pusha xor ret dec roll cld and sahf (bad) mov adc or lock rorl xchg das andl subl ljmp and adc aaa ss inc xor imul dec lret fs adc push mov nop fwait jne xor test mov aas inc push addr16 dec lock aas jno xchg inc (bad) inc pop cmp lock add clc adc fmuls call jge sub or adc in pop repz cmpsl test rorb sbb push pop inc lret dec and mov fistpl mov inc xor in adc inc enter add xchg shlb pop add aad pushf sub xor cmp nop mov int sar jo cli jge sub leave mov cmp lods idivb pushf nop adc xlat gs mov inc pop mov add sbb add lds and nop xchg fimull dec jae rorl clc icebp fcompl and repz (bad) xchg xchg and and test or mov and daa sub xor push and (bad) push or add or pop pop xchg fdivp inc inc dec add cmovns sbb ds leave sbb inc (bad) nop pusha fs mov sub roll and inc test jns mov fstpl adc jns jnp clc push sub jecxz or push int3 mov push or cltd nop and sbb push clc jecxz push imul fwait mov mov lret es add xchg lahf movsb hlt inc jecxz in je test lret push add ljmp pushf out sarb jle arpl sub sbb pusha sbb mov jp and jp push pushf aam pop test das sub test mov inc mov inc add (bad) mov xchg lret or and out test pop pop xchg cwtl cmp cwtl loop ds test and or mov jae or adc mov xchg xor pop and nop lods inc adc (bad) rorb mov dec push xor and push mov fsubrs imul pusha cmp movzwl enter inc add sbb ja test les in js cwtl xchg insl cmpsl dec lea adc or or test retw fs fmuls add add hlt loop inc es subb xor inc adc and jl and popa out pop mov (bad) xor es insb mov inc and es cld (bad) call xchg push add pop inc loopne arpl shlb xchg insl jmp inc fsubrl push sbbl lret add jle push adc mov mov cmp adc lock dec xor pop movsb dec sbb je inc imul (bad) icebp dec sub jno add repnz xchg test inc fldt jl cmp lock cmp jbe lcall push je js xor sbb (bad) push cmp enter (bad) or add test add mov imul mov sbb aaa enter inc mov out cmpsl bound mov insl inc push pop add xor mov test ss cwtl mov dec sbb inc subb gs mov add (bad) sbb sti or inc addr16 mov pop nop incb mov insl outsl push fadd cli (bad) and cmp cmpl sub mov and pop insb fwait lock decl pcmpeqb dec push lock (bad) ja mov pusha add repnz nop xor mov pushf in cwtl mov shrl mov test xchg mov jge push mov dec add dec pushl pop lea leave movsb pop lock mov cmp mov call idivl push push adc clc jne mov (bad) dec mov mov and push xchg or mov mov insb stc ja push push mov pusha xchg cwtl sarl insb icebp add aaa mov sub stos adc mov clc hlt out mov sub faddl cli xor and push pop loop jo xor dec push push into je hlt popa insb or call inc insl sbb roll popa sbb jl pop test in iret js sbb je sub adc out popa icebp icebp xor cs xor mov fs sub mov sub xchg sbb iret cwtl dec adc or or adc or xchg sub fcomps push and (bad) inc js push xor jo push and push pusha mov mov nop dec lcall and dec inc jo or je mov mov dec addr16 mov sub gs rolb mov insl lcall adc xchg inc pushf cmp inc dec mov xor test mov adc nop add js test lret inc xor imul (bad) xor test lcall out adc test ds gs lret mov pop mov test sbb adc je mov dec cmpsb sbb mov imul nop sub dec push sub pop inc addr16 in and pusha loope adc daa lahf jns leave movsl mov and imul mov adc es pop (bad) and lds pop cmp stos pusha out ds je shr (bad) stc xor adc jo xchg and add cmp xor popa jmp sbbl xor adc sbb add inc cs jne dec idivl adc dec fs cs test ficomp scas test adc (bad) add jge test test push mov push push adc mov mov inc xchg pop jmp stc sbb mov or sbb push pushf (bad) xor das fildl int3 outsb sbb pop dec sub movsb add lcall fisttp mov hlt iret mov mov add daa stc and xor mov test and add test or mov mov or mov aas ret dec adc dec repz gs push add sti repz mov nop dec xchg or js push pop icebp sbb xchg js and mov in js test adc sbb repnz stc mov jbe rorb sub adc data16 dec jo add push nop pusha pop jns push or pop mov ljmp lcall pusha xchg icebp inc lds or xchg hlt popa inc mov call sub ss daa scas push loopne pop and inc mov popa mov xchg icebp loope fs xor add push rcr pop mov gs mov and push insb mov xchg inc mov in movsb jb (bad) xor push mov inc add push aaa mov push add mov fisttpl sahf sbb insb and mov insb mov mov jbe add mov mov test jae (bad) sub mov movsb or adc fnstcw xchg in adc shl mov jo sarb cwtl and or cmp test movl cld adc lahf sarl hlt pop fiaddl mov xor pop jecxz,pt or hlt cmp adc test push mov repz popa push or cli iret cmpsl add inc scas or fnstsw sub push lret push in subl stos dec add jnp ljmp push add and jp add stc push push and dec jb push or jecxz pop xchg adc or out mov insb push (bad) into mov inc popa adc pop push cmp pop add sbb lock add jp popa test andb out lods pop into mov hlt cmp out xchg fiaddl fcomi push mov xchg push addr16 xchg scas mov mov clc call inc imul loop lock cmp (bad) fisttp push dec (bad) (bad) test jb pop push jbe cmpb inc fs loope test pop ljmp inc mul aaa fcoml repnz jne xchg and sbb xor mov add cmpb jb hlt pop sub in add inc inc xchg mov popa jp orl pop ss cmp aaa xlat and pop jne test xchg shr push xor adc jl pop (bad) repnz mov loope sub repz mov dec ds mov adc dec mov add adc pop ja call xchg dec pop add xchg push inc push pop xor int3 popa repz push mov jge mov push adc (bad) (bad) ret fiaddl adc out xor or pop jnp loopne sbb push fdivrl push repz idivl fstps into outsb pop lock negl pop sub inc pushf cltd mov sbb and fnstsw jb sbb dec loopne pop out ljmp inc loopne pop fbld stc rcr subl xchg inc xorl cmpsb pop mov lock fs outsl push sbb test jl jl push repz mov mov jne mov push hlt cwtl push jnp push sbb jmp push sub lret mov mov jo add pusha jns sub xor icebp lock (bad) int3 scas arpl mov add mov movsb and incb fmull or add es jge push leave sbb or decl sub cld hlt pop cmpsb sbb out imul add lock nop and sbb sarl test sub arpl jl in xor div adc adc push stc push ret (bad) dec andb mov push cmp jge mov loopne imul shlb in sbb xchg lahf repnz push cwtl sbb xlat mov icebp jo add stc cltd push cmp nop and pop cs lcall add aad cmp xor cltd enter out xchg test sbb cli push and iret push ret add xor push adc dec loop jp rol and nop inc fisub jno (bad) repnz mov adc and inc jns out adc divl push inc adc sub mov dec mov jbe adc fnstenv jns je jmp stc and inc jecxz xor sbb ret mov leave or (bad) test lret fnstcw les inc or sbb popa adc and push aaa and sub mov clc dec mov nop pop mov push stc jp dec xor adc loopne mov in cld jb fisubrl sbb xchg xor lods jl dec subb add and in mov lret or add sbb das add fdivr rorl sbb add mov imul test not pop es lcall clc fmull subb leave ficompl and adc gs movsl xlat lods jp add test loopne mul add jno xchg in fsin mov das xor (bad) xchg xchg pusha mull push or (bad) cmc mov cmp mov xor sbb xor mov aaa pop adc cmp xor flds aaa repnz mov pusha mov push xor shrb cmp xchg andl cld popa shr test sub and jmp pop lods or sbb aad mov pop or orl (bad) lock aaa xchg sub movb jo ds in or fdivs (bad) xchg xor (bad) rolb imul mov fnop inc aaa pop cwtl popa (bad) mov inc in das mov mov push cld xchg adc adc xor inc push mov in mov in lahf les pusha iret sbb mov mov add mov sbb loopne inc rcrb popa enter sar nop cwtl inc xchg movsl sbb push push mov jecxz cwtl popf dec xor adc lods lret adc addb popa rcll mov jl inc xor sub dec xchg inc test pop or mov or repz aam sbb in mov and sbb cmp ja imul inc fxch je adc xor adc popf test fsubs loopne adc lret adc xor arpl or mov (bad) outsl roll in xor (bad) insl and add sub xor sbb adc jns xchg subl leave add orb sbb push (bad) push subl adc inc push xchg dec test outsb inc pop data16 add inc pop push push loopne mov mov inc js ret xchg clc loopne std (bad) stc and pop jp mov mov dec bound iret and or fmull fdiv loope cld dec jno push test add faddl in adc xchg adc cmp mov test mov and pop sub js ret add lret cld and xchg cmp inc fstps inc or or rolb pop mov dec jl clc (bad) aad in and jo int3 sub and adc mov cwtl or sbb aam cmp out push xchg and dec mov iret adc mov mov call mov pop leave ret out add sub push cmp push add out cs adc add add or test je inc cld test call rcrl inc flds sbb adc adc or cld call jmp jle scas and pop lret push add mov bound inc mov mov xchg scas mov bound xchg sub pushf adc negb and sbb mov sbb js xchg mov mov xchg sbb sbb adc dec hlt pop mov mov rorb enter sbb (bad) adc adc add jmp jne (bad) push mov popa lret dec orb or jle mov cmpl in dec test push (bad) and jle and xlat push js orb xchg mov and and inc adc pop cltd add cmpl leave xor or data16 dec inc mov enter scas lea mov cmc sbb push rol jno scas sbb mov jne mov in dec inc push xor adcl enter gs and pextrw inc (bad) sbb push mov jbe aad scas and testb sbb xchg jmp and pusha or or jo xchg insb mov xchg mov inc jb jmp cmpw ret sub js and xchg adc mov movsb pop jmp clc (bad) (bad) (bad) dec insl sub in (bad) mov mov fsubs pop adc xchg mov pusha aad or push xor dec pop push adc (bad) and hlt mov lods sti cld jp pop cmpl mov notb pop lea dec mov jg push push sub aas and xchg inc push daa lods lahf push pop sub and fdivp adc mov bound and mov mov jo adc adc stos inc pusha (bad) movl popa mov loope mov fcompl or imul sub sub pop push lea addl fadds call push or das inc fcoml dec inc gs cmp arpl imul add gs incl inc adcb dec int3 cltd cmp pop sbb push xlat cmp mov xor add enter sub mov dec jae xor sbb sbb pushf jle or and fs push or or add cld and sbbl (bad) jnp jo adc xchg mov dec sbb inc cltd and bound ljmp push nop and loopne jmp push pop adc (bad) push lahf int adc nop mov nop das aam jge je sbb lahf adcb loop sbb or insb fimul cmp lods xchg xchg sbb (bad) or and sbb and xchg popa sub mov xorl fidivr in test je and mov jb add or add cmpl bound adc cmp je arpl or movb test xor daa sbb pop sub or adc sti ret fwait inc sbb jae inc xchg fs inc and lcall adc mov aaa xor push cli mov xor adc jmp xor (bad) int3 shrl (bad) test bound cli mov sbb scas or mov xchg sbb test xchg xor pop adc sahf and jno adc lret ds and dec (bad) divb sub inc mov mov pop in dec dec lock es pop add fiaddl inc sbb and pop or push cwtl dec or popa dec mov lea push cltd test mov xor dec inc subl push jno adc aaa inc mov xchg cmpsl repnz clc arpl ss faddl lret loopne mov mov mov ds es shll mov pop sub pop pusha fwait lods sbb (bad) nop sub and enter mov cmp or inc mov pop and insb mov fucomi xor push mov sbb xor push insb and mov fcomi ds and fildll mov add pop mov jl test xchg popf (bad) nop bound std fdivrl or push and fild fwait cmpsb jl movsl ds repz cmpl push mov in lret loopne mov test test inc mov mov sub and and test jb inc cmp shrb (bad) pop add fidiv aas mov push or inc das mov xchg mov dec xor insb cmp or iret fcoml lds adc nop cmp and imul mov (bad) (bad) mov push xchg xchg jge (bad) mov mov fs mov addr16 jb lahf dec gs cmp rclb cmpsl lcall add sarl popl ds enter int3 nop fcoms xchg xchg or loope push dec pop and test sub cld push scas aas add mov pop in mov mov daa repz and fadds push push sub push or push inc xor test inc mov and lock sbbb xchg inc cli cld push inc xchg cwtl jle push and xchg incb rcl cmpsl cld pslld loopne and xchg incb shrl (bad) pslld or je mov nop es ljmp (bad) pop cwtl loop stc lret ret pop dec clc push cs jle lcall aas pusha push addr16 testl aas enter mov inc inc ror push ret pslld add insb data16 adc in lea jle add in inc lahf cld into xchg clc loopne pusha std mov stc rorb add (bad) cmpsb fistpll enter sbb rcr push (bad) cld fild lcall pop mov repz (bad) inc fcmovb and repnz or xchg ljmp out repnz push add cld outsb mov sub lock jmp mulb mov std (bad) pop cli cmp mov sub aas pusha in and push (bad) dec aas mov push lock mov or xlat and in iret add mov loopne into aas enter (bad) jp xchg push dec aas and and call xchg lret cwtl add (bad) mov in sbb stos ljmp adc xor popl adc mov dec pop mov push aas dec mov push stc jp sub pop sahf push pop cli js lods sub mov and xchg ds das inc andnps insb pop jle mov push mov (bad) mov mov cltd inc mov sahf mov adc inc outsb test sbb test scas sbb inc xlat add add and sbb fmull push and adc ficompl jns mov xor push mov and dec pusha sbb inc and mov js fldenv pop sub add in inc daa sub dec call cwtl mov sub dec rclb (bad) push mov and mov into add fwait mov or xor lcall cmpsb pushf and or xor mov inc (bad) mov nop int or inc out roll or nop stos inc out adc cmp push orb jmp push jl testb stc loope mov inc lcall adc push dec push in or push mov test js sbb cmp int adc clc push jp out adc and inc dec ljmp icebp adc and inc and out in and or push inc inc mov cmp cmc adc mov outsl mov sub test xlat push lods cmp inc notl stos daa mov or dec and mov mov sbb and jmp mov jp and cmp dec add lds test mov add or test dec and mov jo jbe call mov sub adc mov or sub andl add cwtl lods stos fsubl sub fimul mov mov push enter sub (bad) adc jp mov sbb cmc jbe push mov xor pop or dec add push call fldcw inc dec xchg out dec (bad) ss push and outsb loope mov loopne loopne scas gs add popa pushf fisubl les jbe xchg add and and inc adc (bad) sub leave fcomps test add cmp and mov nop fdivs inc clc xchg lret ret mov inc jmp fmuls mov (bad) (bad) push dec push aad dec xchg ja push jne (bad) jnp pop cmc sarb add mov out or add pop orb or adc pushf adc adc mov add (bad) and scas adc inc add mov sub pop rclb ja mov mov scas add or dec mov sub sar popf dec adc push mov sbb mov or add push mov rol push sbb jnp add test adc popa imul adc pushf adc inc popa repz sbb inc adc leave pop xor add fstps ret xor sbb mov and add insb pop push and mov and push stc lods sub pop cmp inc popa sbb sub fsts pop inc push mov addl sahf test (bad) xchg out sbb daa or sti cmpsb or push xchg ja je dec flds push test push jmp jae aas movsb push xor and or pop push (bad) or or mov sbb sub testb mov mov mov push jl pop xchg sbb lret push push (bad) cmpsb sahf (bad) in push hlt loopne test xor mov not push push push jmp or or pop add test add xchg dec cmp outsl sbb pop jae sub pop scas mov jmp push pop add fwait test mov xor mov jp mov mov sub pop add data16 xchg add loope mov xor inc cli pop out xor cmp add aas test sub add jge cmp repz pop push dec mov push jmp push lock cmp pushl cmp pop std xchg mov sarb outsl push sub fnstsw xchg data16 cwtl (bad) push ret adc rorl dec lea cmpsl mov rorb cld add jmp call data16 or lcall mov push jmp pop popl (bad) cmp cmp mov mov push mov imul adc push stc lret sub or fcomps aam subl mov and pop sahf ret push xchg lock (bad) jle roll mov pop push in add rol dec jmp cmp cmp inc ret jle sti mov jecxz xor idivl add or or cmpsb pop enter mov bound add dec and push push mov adc (bad) jg cli sub push push aas incl jno push mov inc xor xor sub pop andl gs insb and push aas and dec inc or mov cmp pop mov xor mov jmp inc or insb adc cmpsb int scas pop xchg mov sub jnp push cmp and stc or ss sbb or mov mov jns jecxz sbb or or roll mov call (bad) and push pop push or outsl sbbl outsb add out fbld test and loopne flds enter sub adc or and sbb pop test test xchg (bad) out cmp push dec lahf insl sbb mov pop xor lret and jb roll or lds or mov inc flds xor je add pop (bad) mov xchg insl imul pusha cmp sbb inc cwtl fadds pop repnz in idiv mov adc addr16 jle jbe sbbl es lret jle cs pushl stos test rclb das jp dec jg shll sahf lret subb mov js enter add sub lea stos mov push cmc dec sbb in and dec in xchg (bad) xor dec dec pop mov dec sub cmp jne rcr dec add pop push and mov shrb in stos movsb lds pop push add mov jmp mov push sub mov fbld mov sub xor add or jg popa add push testl addl adc (bad) pop xor jmp fwait lret cmc mov add mov inc xor (bad) repnz mov pop mov and inc add push jmp push loop xlat pop vpcmpeqd dec ljmp dec push pop inc or stos pushf leave pop (bad) xor cmpsl clc pop xor (bad) pop mov leave push sub pusha mov ret inc stos xor mov out inc leave xlat pop and mov cmp push push jmp sub sub in pop add jg lret nop cmp rol adc int xor push cmp dec rorl add push push jnp push iret inc push xchg inc arpl mov pslld out dec fstpl dec iret jge push jmp jns fimull mov int3 add jmp repnz cld pop push adc xchg sub ret inc add es add inc inc mov cwtl ffree dec xchg cmc mov sbb adc xor (bad) shl sbb (bad) sbb repnz mov cltd jmp sub addb ja xlat roll xor sub pop push iret or jecxz loopne fnstcw jmp mov std lods sub add arpl mov jecxz add fsubrp dec mov mov sarl sbb add (bad) or inc mov adc in pop mov outsb in mov jns addb adc rolb xchg sbbl ret jae mov or pop cmp mulb std outsl in addb pop push (bad) repnz push xorb pushf xor sahf mov rorl add aad xor mov xchg xchg fisubr idivl loop add rclb int (bad) add add sub push sub (bad) jmp adc out pop cli xchg push (bad) push movsb mov movb or popa push pop mov (bad) icebp bound outsl push leave in lods inc ja not push sub iret pop xchg jecxz popf out movsb dec pop sbb ljmp clc dec fidivl mov and enter jle push imul add into pop inc pop mov add std cmpsl pop jnp jg subl cmpsl int xor mov inc cld aam sub sbb add lods into xchg or adc pop mov adc mov xchg inc cmpl outsl pop dec cmp xchg stos push add ja xor addb aaa sahf add outsl test pop xchg in mov xchg scas and sbb xlat jp ret push push mov mov cmc jmp pop rcrl imul daa ljmp inc aas mov inc dec jnp in aaa pusha (bad) adc cmc scas jbe jp cltd push test jo add dec pop enter addb ja add test ljmp in add test lahf or push and cmp je js add ficompl rcrb fdivrs adc or mov addr16 push repnz push hlt roll fiaddl xor push sbb dec mov aas xor add inc sbbl push icebp (bad) and cmc add cmp lea push lcall out (bad) inc cs inc out movsb rolb pusha pop cwtl mov stc loop scas jecxz cmc add out iret fsubs add inc xor or jle mov and mov jo movl ficomp sbb imul loope pop push and inc sub or add push jmp xor dec adc adc or push bound push dec vunpcklps add and adcl mov into cmp inc fisubl arpl dec adc or jnp adc stos movsb mov fiaddl mov inc inc sub mov iret and xor enter xchg xchg insb xor ja mov or or or sub stos mov xchg aas out outsb mov mov push (bad) mov adc and push mov mov scas push push mov ja dec xor call loopne dec out (bad) dec mov xchg aam cmp testb pop mov push mov and jmp popf mov fcoml stos add dec scas inc (bad) and xor shll cmp and xor xchg add sbb test mov mov and mov jp test test adc jno adc or add mov mov cmp pusha dec xor or or jg push sub into shlb add mov call call jae sub sar mov adc push cmpsb xor dec leave mov mov xor js adc add xchg and cli daa repz imul jge fldcw sti jo pop fisubrl (bad) push mov pop inc mov outsl jle or push push xchg lcall xlat jae rcrl sub imul movsb fwait js mov cld push ret cmp cmpsl das dec inc (bad) lock bound lcall inc sti dec and mov ja or nop (bad) sbb add adc push adc pop jbe aam pushf and pusha fsubrs nop (bad) gs or mov cmp and add subl enter push jg push sahf or (bad) jbe dec rcr notl lods mov cld cmp std sbbb inc rcrb mov cmp xlat dec popf in or data16 mov cmp pusha add mov jnp test inc mov mov fild inc dec push add xlat xor jg gs adc and stc xchg fwait xor (bad) jle xor insb or stc xchg movsb push xor mov and lret lret add sbb das aam fstl cwtl ret mov addr16 dec xchg mov push std jns and xor dec movsb sbb adc aaa push adc (bad) ret xchg ret mov add jl xor sahf andl sub inc stos jbe push ret cli sub add or fcomi ret add add loopne adc xor ljmp cmpl sub xchg sbb dec ljmp loop js aas out leave insl cmp dec mov adc push push sbb sbb cmp sub xor sbb fwait rolb or sbb pop jle ja mov sub and lahf add mov cmpsl adcb bound mov shrl jle (bad) pop or (bad) dec mov sbb jae aad or add xor push mov pop push add jmp ja rol pop or mov lods jbe lcall pop xor push mov fadds push insb add adc ja push or adc nop cmp pusha jb mov imul loope add dec mov and insb outsb or repz lea cmp ret pop inc movsb sub das sub imul push sbb xchg leave add clc xor mov jecxz ja repz imul cli (bad) mov ret mov sub push and lahf cli andb add or movl cld fistl adc stc mov xchg add or add shrb sub mov add push inc nop add mov out outsl test jmp cwtl xor (bad) (bad) dec (bad) ss inc mov mov bound xor pusha mov (bad) or and test fldenv outsb xchg or push cmpsl pop mov ja incl and mul mov inc scas inc pusha add dec push and adc jge push enter mov and or mov lea insl add daa or ret push fisubrl fadds sbb pop adc xchg adc xor cwtl out inc sub pop dec in inc push pop fcoml add fadds (bad) stc repnz bound sarb out sub in and pusha cmc and stos out inc pop xor repz aad cmp or sbb gs sahf dec add loopne insl mov pop jae mov shll out mov clc insb lods add movsl sbb mov inc inc das or inc jmp std sbb push dec movsb mov mov loope imul jle data16 repnz add mov sub imul cmp xchg mov add movsl dec outsb cmp xchg addr16 jp loop add pop xor rclb inc lea mov fisttpl jne lds adc mov adc daa add in mov aam scas and out pop out jge hlt sbb inc adc test adcb xchg arpl fsubrs cmpsl add mov mov cmpsb dec ret inc out test push dec xor in inc adc and andl add xor arpl aaa xchg in addl loop jo mov and les rolb (bad) cmp stos push cmp push pop sbb xor mov add (bad) cmpsb flds test (bad) adc jbe add popa and sbb decl (bad) pop xchg dec iret sbb jmp or cmpsb jo outsb push adc xor test sbb sub call imul cs cld (bad) adc aas andl popf push sbb and hlt pushf push inc add repz jmp pusha (bad) dec push pop aam imul xchg sti in cmp jmp nop daa das pop inc pop jns fdivs adc add icebp dec xchg push mov popa pop mov cmpsl out cltd sub mov add add jmp enter xor push adc js xchg insl inc test int3 add sub pop xlat mov out sbb mov mov pop out (bad) xor xchg fsubr in repnz fcmovbe fidiv (bad) xor inc into loopne add sub push sub aad mov jns jo out mov inc bound sbbl pusha push jnp lret add aad movsl add mov data16 pop js into adc rclb gs pop fadds (bad) mov mov pusha mov lret daa out cwtl movsb cmp or mov xchg je mov incl cltd dec xchg sbb inc xor xchg pop icebp add mov repz sub mov cmp adc hlt outsl pop jge adc mov outsb and and inc mov add dec xchg lods rcl aam jo inc out nop dec add mov testl push dec leave stos mov adc movsl cwtl mov and cli stos clc pop js fs adcb jmp pop dec adc sub enter std fstps pusha mov dec add mov pop add flds mov jg pop add add test cmp stos les fcompl mov add into add lods add cmp push int3 and inc cld inc jbe cltd arpl push sbbb and and mov nop push add sarb sbb lcall bswap xchg ret pop cwtl test add pop insb jecxz sbb inc and stos pop pop inc lcall jno scas data16 pop xchg mov xor inc inc push mov sbb lahf and sub aaa pop test push push out out cmc or fwait jle mov mov sbb xchg xor and bound add fidivl or (bad) push or in in adc push adcl pop lcall and (bad) addr16 dec xchg sub push cmp cmp cwtl add cmp cli push and jbe movsl test sub mov enter outsb adc inc xrelease sbb ficom xlat lods mov icebp inc out sbb repnz push inc sub mov pop sti mov arpl pop xor iret mov pop scas or icebp push lds repnz into addr16 dec aas push cmp loope mov aad xor xchg cmp push dec ljmp clc or pop sahf test fcmovbe jmp lret jmp jb fwait and (bad) aaa jbe pop mov sub cmp pop or inc push inc xchg test aam out mov cmp in sub lret pop add jbe push test jl outsl fildll push adc pushf insl sub xchg xchg shrl fwait push xor loop fiadd mov add push daa add mov push pop outsl data16 inc jb pop push data16 add xchg mov or out cmp push outsl out and out sub xchg sti adc rolb arpl mov xchg jbe stos sub dec and sub cld jb push notb jno aam repnz stc xor and imul lods and mov xchg sbbb mov dec int les xchg out and xor cmc cli addl or mov and ret and iret jmp iret repnz in xchg sbb cmpl mov push aaa add xlat std mov pop xchg and or pop or mov or jne add sahf dec and mov mov std sbb stos repnz jbe mov pushf cmp test mov cs pop pop add fiaddl movsb xor mov dec xchg leave cmp cmp add mov jle shrb loope jbe lods fisttp or rcrb jmp sbb pop cmp add incl or mov je je fldcw sbb and in adc and jp xor mov in les add movsb mov adc cmp mov test movsb jno imul pop into jp mov mov mov inc add push inc les dec mov cmp or jns gs and pop std push loope cld (bad) sub mov test adc and cmp js sub adc mov dec mov nop cmp add xchg or fwait mov push stc xor (bad) sbb lcall add cwtl lret pop gs xchg daa mov or test pop add aaa bound mov sub cmp push (bad) add lahf cwtl sti and pop cmp dec dec lahf push and ja stc lods push mov add jne sub daa mov inc add das stos stc pop or mov adc and ret (bad) or ret inc or pop test add and lods push adc adc (bad) sub pop loopne inc add mov adc xchg decl xchg pusha and jnp ret mov movsb jns iret and out add jecxz popl cmp sub and shlb pop add push lret xchg test pop daa add lods mov adc fbld je iret add jb dec (bad) and (bad) push add sbb and jae cmp add mov add orb push jb (bad) xor sbb popa mov jnp xor adc xchg pop into es fdivs pushf jnp out cmpsb outsl mov or push (bad) jno out in lret movsb add iret movsb (bad) ja jnp mov (bad) push fimul inc adc insb nop sti test jmp sarb movl or test cmp and add lea scas test fs idiv jecxz sbb aaa enter out loopne sbb inc sti fcomps adc dec inc and dec stos popf inc or fldcw add or mov dec dec cld mov inc jno push jne movsb adc mov sub cmp jmp inc add das mov sbb popf push xchg cmpsb pop or aam jo push sub mov fadds jecxz in add mov aam pop pop mov mov scas or imul add inc xchg fldl cltd or push int3 cmp ret jp (bad) cmp sub int3 xchg arpl popa jno ja dec add add mov addl add push push mov mov push inc test bnd fmull sub mov sbb push sarb xor pop xchg into sub cld push jl aas pushl xor cwtl jb sbb and and test add and enter mov sub add jnp jbe jg idivl inc (bad) dec arpl jp add pop daa dec sbb and lcall or or adc pop imulb xor adc or jns cwtl xlat pop xor enter jb add jo mov push cmp mov and jnp mov adc ds and insb ljmp iret jne notb or cmp push add or repnz mov verw push dec aam pop sub fdivs sbb push (bad) sub roll in adc xor sbb and lock (bad) pop jp sub inc dec cs pop fdivrs push jl add lret es shll inc xchg movhps pusha imul shr push and cmpsb sbb cmp imul call aam loopne ss add add mov push enter (bad) add push mov pusha lods xor in (bad) arpl data16 mov mov sbb dec fwait shlb add bound adc lock in xcrypt-ecb cmpsl or icebp les mov add adc jbe gs les push jno cltd test enter pop push in xor in dec jg or frstor or mov mov sbb push and js fsubrl in test test lret mov push or clc xchg pusha pop ljmp pop inc mov add mov hlt xchg outsl jns sub xchg call cmpsb jg test cmp inc push or xchg cmp push xor inc (bad) xlat dec cmpsb jb out orb add (bad) aad cs cmp mov xor int3 push ret sub push and scas aas push push push roll xor xor cli and and add or jle dec enter pushf loopne jp dec jnp or sub pop sub popf sbb movsb xor and lods xor push xchg daa adc shll and or dec or sub sti push fstp cmp push push sub sbb add xchg inc cs pop cli inc add sbb xchg scas les push xor and shll jl loop add and lods jbe sar in aaa sarb dec jmp xchg lock adc sbb add clc je (bad) mov inc int3 lods push pop sub sub add pusha pop lods data16 mov adc pusha sbb outsl and xlat and push sbb adc jbe adc sub jns movsl adc add mov cmovo ds test add clc jne pop das addr16 idivl movsl inc and stc sti rcll sbb push push (bad) jno pop push hlt insb xor call dec xchg loopne fdivrl dec xchg call dec imulb fisubr in jmp inc and pushw xor jb and add scas (bad) dec push pusha stos adc cltd js cmp les cmp cmc clc nop jg jbe or mov adc or push mov mov jno fs sbb or pop das mov bound mov sbb dec cmp jp imul aas and mov mov shrl iret repnz inc stc leave sbb mov mov dec adc and dec add add sub adcl hlt btc repz je pusha cltd jae xor xchg inc inc lret pusha or out into and or mov or adc hlt jg scas lea inc mov cbtw jle push repnz in or xlat insb sbb adc jmp daa inc (bad) rclb fstps int xchg adc (bad) push test add daa stc xlat or (bad) pop fld push popa cmpsb push fidiv cmp mov jns subl imul aas les add dec (bad) lret insl adc in add mov push sbb sbb pop ds in dec or rcrl jae ret daa dec pop pop cltd or or (bad) decl rorb test xchg fcoms add push push xor out fmuls mov mov fildl pop pushf push popf (bad) adc pop sahf jbe mov mov dec sub mov jnp or inc xchg mov daa js pop roll sti repz pop pusha push push or daa bnd fildl or ffreep dec mov gs lahf subl push fistl push jmp jl xlat rolb hlt les mov and stc pop jne add mov ja jne push adc adcl mov jmp xchg dec push xchg pop leave dec or addb ds mov imul cmp push int int mov outsl add pop mov mov shrb fwait dec mov add xchg jmp decl arpl pop xorl ret fdivrl mov pusha sub shrl cmp xchg cmc sbb push pop sbb xchg and dec roll dec jmp mov das std and add jne outsb outsl inc cmp jmp pop stos inc cpuid push test (bad) ret rcll lock fstpl jle inc stc add out sub jne dec and push mov jnp (bad) mov xchg add (bad) aas xchg test out mov mov push add cmp test add arpl and cmp ja inc shr mov fmull mov adc fcmovnb dec mov in mov lock cwtl ret lret pop xor stos lcallw sub add mov nop cld jmp xlat pusha jne mov fwait cwtl aad ret (bad) push loop push mov mov push mov pop mov push mov repz orl mov std lods sbb sub popa cmpsl pop (bad) lods cltd mov push xchg popf enter xchg rolb push push mov xorb mov sub aad das fs add push into mov pushf (bad) sub and je insb push inc sub sti and adc testb ja adc cli xchg or add (bad) push and mov notl jne loop cmp shrl cli fcmovu add pop (bad) loop ret jmp cmp xor sbb stos sub jg mov add cmc mov and push push jmp in dec rorb jg dec insb push popa ja jl push pop inc xchg pop sbb xchg sub push dec jg mov fstps ret push xchg cmp sbb cmpsb (bad) int push mov add add dec sbb jge mov inc mov mov shrl or push and test out int3 pop inc adc add lock lods jmp loopne add orb (bad) sbb adc sti and cmp push inc adc xchg popa pushf push inc loop push push sbb not sbb repz xchg leave pop jp fldenv imul xchg jnp cmp mov and add orl pushl push add cld jg xor (bad) int3 fistp in dec xor mov ss jns movsb pop notl cmp fnstcw mov ss xchg std ss loopne cmc (bad) mov pushf (bad) push cs pop rcl pop and pop xor push rorl and and pop fwait sub insl jecxz or push jmp or inc adc in popl pop push pop ds bound test pop pushf xor adc add stos pop jl adc dec cmp sti (bad) jg push inc push push or add add (bad) out mov cmp dec repnz aas cmpsl ljmp jne cwtl das notl icebp jle es push cmp imul into xchg pop and sbb mov subps (bad) ffree mov (bad) cmp push dec xchg cli rcrl fucomip inc call nop and pop sub inc shll sti pop pop imul add xor rcr repnz les int3 mov push jae push loope pop movsl or es fwait push push cmp call (bad) mov mov and and push imul inc pop add mov xor adc push mov add ljmp xor mov lods dec and in sbb jne xchg aas aam sahf test dec and mov lock xor mov push pop add scas je xor and adc push (bad) (bad) lret push xchg dec (bad) mov outsb inc adc ja jmp aad push pushf add imul (bad) into jbe repz fisubl fbstp das cmp lods jle (bad) loop rolb das dec lods dec inc sub int outsb pop and in and cmp addr16 or cmp mov cwtl inc mov adc push push std push lods adc test ret les xchg lds sti mov jns int3 dec inc js push push les sub enter jp xchg in pushf cmpsl repnz (bad) lods icebp fldt xor mov dec push shrl (bad) in inc dec xchg pop xor addr16 xchg insl mov cmc jb (bad) jle incb stos clc ret xchg stos mov daa push pop add adc mov cld and sub mulb scas test jg ret or or push mov jo and adc mov jbe pusha and pop mov into add cmpsb pushf int xor sbb jg rcrl inc (bad) lods shll imul push mov dec ret movsl sub fidivl cmp cmp mov or pop lea inc dec and push je addl add push lods or rorl mov adcl int rorb std and dec test pop cmp sbb pushf mov pop push xor add jle fmul mov sldt fstl nop rcrb out sub pop and xchg mov int3 ss or jno xlat sub cmp add jmp or mov aas and mov (bad) xor push popa jmp mov (bad) xlat out aad sub stos pop pop add sbb or out jge dec sub out add xor jne shrl dec adc stos mov jecxz jle ret test lahf mov xor xor and (bad) jb add jmp cmc xor out stc add xlat jmp xor cmpsb pop push (bad) push or push jo mov cmp repnz sub addr16 roll jmp cs cmp outsb add arpl mov push add aas xor repnz jl sarl scas jge fstp aas or pop mov call loopne int3 std xor imul aad push rolb add sarl or ret add mov xchg sti lret push pop (bad) mull jle scas adc (bad) mov push out je mov mov hlt div aad xor sub or fstpt jbe bound pop inc rolb dec imull add pop mov sbb mov stos aas test pop mov add into jmp mov iret sbb lret add jmp pop add orl jp loop mov lods stos xor icebp push push call cmpsb xchg decl loop std inc cmp jmp not or sub pop sbbb xor pop shl or ljmp xchg xor mov mov sub outsl test mov cmp add sbb inc xor inc xchg push mov test test stos mov pop push lods or sbb or pop mov shr cmp sub xor ret jmp push add jb pop (bad) in dec push pop dec vphsubbw icebp mov inc jp das or mov jge (bad) dec outsb les fbstp es pusha add dec ret (bad) mov jmp ret out pusha leave out add (bad) repz lock and cmp sbb push push push adc jg push or mov shr ret fldl (bad) cmp dec and jne pop or mov sub inc mov xor (bad) cwtl cltd sub shll enter (bad) xchg (bad) cmpsb adc sub push nop jns inc in inc mov out xchg cld outsl gs cmpsb adc mov fistl push jmp xchg sbb pop adc jns cld out test (bad) and fstpl fadd inc or mov sub mov pop add dec nop xor jg repz cld gs mov loopne sub sub iret lcall mov stc or popa out int3 test add ja enter push aas pop scas pop inc dec jg not xor cmpsb sbbl out add sarl xor rolb adc xor test add jp and scas dec call mov decl add sub mov sbb inc jp ss mov pop mov dec push fwait add add mov daa cs pusha fcomps add add arpl rorb jbe push repnz int3 push faddl arpl insb pop or adc scas mov jno mov pop xor push push imul (bad) outsl sbb xor fistpll cmpsb jle and mov dec fdivrs dec in jae or imul jl jae stc add sub lret movsb fiadd pusha xlat cmpb cwtl push psubw aaa add sbb adc jl jmp jg pop dec or cli je into xchg rorl popf jnp fs cmpsb in cmp shrb adc adc or cli and pop sub popa das xor stos lods sbb cld jns jno jecxz rorl adcl popf enter cli fisttpl inc sbb movsb adc push or das ja jle out jo test repz jmp dec mov push cmc pop sub rcll mov (bad) cmp mov stos add out loopne popf adc jg pop sub pop push (bad) cmc sbb or adc fiadd mov mov stos dec aas out xchg ja jmp loope and mov xor lahf pop push jecxz fucomp lret cmp dec fisub push stos mov jp pop xacquire xor xor pop pop dec push into add pop pop jge sub jle out sbb cmp adc add pop pop jmp sbb sti hlt shrl pop xor ljmp or add jno add std jmp sbbb push ljmp pop jbe pop xor sub mov push mov xchg xchg sub shrl loop jge stos lret add pop repnz loop pusha outsl repz shr xor std mov arpl sbb cld out adc lds inc add ret mov sbb sbb sub repnz pop sbb xchg enter ret add add jne xlat int3 mov shrl jecxz pop mov leave add (bad) jmp pop out stos push add inc test pusha sbb pop arpl pop push push stos cltd xor icebp or scas fidivrl dec cli mov xor add cmpsl mov js sub imul xorl out int outsl push or pop push aam aam stos sbbl aas push call push pop push push push jl or cltd scas push or es je add jb push sub cld inc pop xchg pop fwait je fildl inc push adc test repnz in pop and in pop daa jecxz push dec xor jmp rorl lea adc sub add sub loope adc sub adc pop and rcll and aad push xchg dec mov inc shrb push xor lret ljmp xor push repnz xchg cmp lcall (bad) pop inc or dec jl pop loop mov jmp cwtl scas jp fisubr xchg data16 push bswap repz sub cli daa rorl push mov pop (bad) leave decb or cmc fiadd push xchg mov add pop dec inc test push pushf mov jg lds lods pop inc push or push xor push mov addl repz and bound sub pop test pop int3 dec out pop sahf cwtl dec dec fsubp push mov int xchg nop jns popf dec das js xchg ja jno mov inc and mov movsb push dec push or iret out pop negl jae mov mov pop ljmp cmc mov xchg (bad) dec inc add push out pop add cmp jmp sahf sbb not add ljmp or cmc lds and mov push xchg lret add jbe pop loope into stos add mov push mov sub (bad) les pop mov mov pop dec cwtl ds push push xchg ljmp in arpl lcall gs mov add pushf lahf mov cmpb dec fs lods xor psubusb add or push xor sub (bad) (bad) or jnp sub sub popf mov and jg aas push sub cmp pop pop mov pop xorl neg inc out out test adc adc stos inc mov pop mov psubq iret cli fmuls push ror (bad) hlt jge xchg or adc les sbb ljmp dec dec stc stos ds and xor pop ss adc add jmp push add fs or jp mov jae inc sti cmp adcb ret fldenv fsub jle ja jbe adc mov scas nopl jmp adc cmp (bad) movsb adc jle test (bad) mul cmc out inc or icebp jmp repz ret rcrl mov stos xorl jmp mov jg and xor push mov mov xor jae fisubl mov add sbb mov adc and mov sub icebp sbb test sbb and adc xor pop push push ja or add cmc xchg adc jg push pusha scas or jmp adc cmp movsl push in pop sub sarl sti inc jge fsubs jl adc fisubl outsb jo add aas jmp repnz imul insb std sar lock sbb repnz mov xor scas enter push mov ret mov cmp and pop stos fcomps push out sub pop pop or sbb add inc (bad) jmp mov jg sub lret pop jg inc pop pop loope push lret sub jge push xor push movsl cmovg add aam adc lods or mov cmp sbb jp inc adc sub outsb inc adc jb aam inc xlat and push cmp pop pop mov dec ja lret (bad) addl mov sbb jnp push push clc pop jle call out or or jnp ljmp sbb xchg push sub adc (bad) cmpsb lret out ljmp out stos shrb mov jne dec loope xor lahf sahf fnop stc xor xchg test dec in and sti in jb jmp int add fldl mov add push add popa outsl or sahf add push leave out push pop mov aam movsl outsl mov lods or inc inc and dec add pop es mov push and jecxz and lds in and sahf imul mov cltd out inc jo mov jle dec lock add mov sbb clc cltd jns inc pop aad movb xchg fcompl mov fcomps xor jecxz in xorb pop and (bad) nop rcrl mov std push push in andb icebp pusha lea jo lcall lock push (bad) cmc ret adc scas popa add xchg sbb sbb shlb lods pop lds inc rcrb push shrb push in add loope dec roll (bad) xchg adc (bad) shll mov xor or push sub adc or jno (bad) push jnp xchg pusha cmp fldenv xor add adc mov pop pushf fcoms mov jnp pop push sub push add jecxz mov and int3 pop mov cmp popa push pop les push sbb sarl or imul sub rorb pop add jge adc cmp dec imul add adc ljmp js adc sbb add xor push mov push fildl pop test int3 cld cmp mov push and iret cmp pop test push aad data16 enter daa adc imul mov mov pop dec mov andb (bad) push pop xchg daa add es nop sbb push mov fcomip stos xchg int or fcoms xor sbb xor xlat push or js loope pop sub add jge aas lods insb mov push sub add iret test mov xchg lods sahf outsl add bound dec sbb xchg cwtl orl ficompl fstps xchg push add das mov pop sbb cwtl je mov cltd loopne sbb fdivl add or add fidivl les add dec cli mov out and inc mov pop and add add aaa xchg xor roll imul xchg mov jns int3 fstl adc out jge and pushf out sbb mov and adc jns xchg sbb bnd mov xor sbb fcompl lods adc cmp or sub mov ficoml out popa inc sbb push cmp jbe ja imul jns repnz ftst lock pop sbb pop lds rcr loope adc ficomp adc adc bound add xchg jge int btr inc add jno fwait add adc sbb pop push adc push faddl (bad) mov pusha iret shl inc cmp and inc iret push or inc (bad) int cs sarl xlat inc andb jo lret imul subl jg add hlt pop cmp and ret xchg pushaw dec or add and jbe push push rolb test cmp scas std add adc mov cwtl mov mov xor push add cld sub add or lock testl repz adc push lret mov cmp out dec movsl add adc add aaa jp push add aas mov loope cmpl popa ds fisubl out dec pop sub mov pusha cmp adc inc (bad) out das add sub (bad) (bad) pop pop xchg stc push aam add xchg inc fmull jb,pt leave add xchg mov adc inc in loopne add cmp add pop aas dec xchg daa dec fcmovu or mov sub add lds cs jbe push pusha fcmovu clc xchg xchg add andb les cwtl jno jnp sbb jle xor mov rcl add rolb cwtl lahf sub icebp and sub shll and adc xor xor dec in loopne das adc sub add fs dec les inc popa xchg xor push out xchg fist xchg lcall out and imul pop dec mov stc push jmp pop repz xor stos xor xor in lahf mov sbb movsb leave pop mov and shrb lods orl imul sub dec jmp loope shrb sbb addr16 flds add insl aas xlat outsl insb orl mov jnp movups arpl sbb mov lock push (bad) imul cltd loope nop loope orb push and xchg inc push add jnp pop std cs int3 pop mov jl sub pop negb insb insl cltd enter or push xchg and or jb (bad) jecxz in jo sbb scas adc ret je les fwait lcall inc mov push add stos or jl and pop ljmp test xor mov push pop rcrb push xor iret add enter je sub or mov inc push pop mov out test dec test xchg and inc shlb fdivrl into cwtl cmp sbbb cmp cwtl inc je mov sarb lret mov mov adc scas in mov popa mov xor inc sbb push mov xor (bad) xchg cmp dec add iret xor adc clc int3 ds sub and sub or jae addb in jbe sbbb add sub fsts sub in and nop lock cld xchg outsl rorb lock pcmpeqw int3 cwtl popa inc pop pusha mov in (bad) or push inc in adc add pop sbbb mov push int3 aaa xor push loopne outsl imul fbstp pop or jmp popa push add sti push les inc popf xor insb punpckhwd mov mov rcll adc test adc pop jmp xor cmp jp mov adc dec mov frstor or sub imul fisttpll sbb or insb das loopne add push inc xchg inc mov sub test push xchg movsb les imul (bad) mull xchg stos mov or inc sbb addr16 and imul in add push jp sub int3 cli enter mov or mov test ret jbe ds pop sbb jp mov or cwtl pop or mov or push jo stc add jg xchg sbb inc popf xchg adc cmp mov jg jge add cmp push jecxz mov repnz xor inc pop mov int3 push cmpsb sub inc popf xor addb jmp pop push std mov js or xchg inc mov lods loopne (bad) and mov sub mov adc ret cli dec and jmp or mov pushf add or xchg aam xchg add insb push inc fistp cmp xchg dec adcb loop,pn add int rclb cmp xchg or test jl cmp stc hlt fwait arpl ds mov or cltd or sub in sub mov out push out fcmove scas add jmp repz or or dec and call iret or nop inc lock mov in or iret shlb fidivrl mov inc negl loopne fwait push dec test test faddl hlt push cltd or rcrl inc adc push fnop xor imul pop sub out and mov inc inc cmp dec lods pop nop cmp inc add shlb and pop mov fstps mov dec sub dec cmp fdivrl xchg cmp ret imul dec dec iret add mov nop jae fldenv js icebp rolb sbb hlt pop cwtl adc out add jno shlb push push aam xor in lcall or call xchg inc push inc call mov sarb xor sbb call addr16 dec scas popl push inc mov push ret or repz inc xor xor lea and sbb dec shrl mov enter push divl sub cmp ficom roll fiaddl mov scas adc jo stos or pushf jecxz adc inc out and sbb (bad) or adc stc or sbb mov sbb jecxz dec xchg scas xor sbb mov cli mov dec jae popa dec cwtl cmpsb and cld mov mov mov jns,pn jmp into mov or inc pop and sbb push sub sahf sbb add outsb push xor mov mov test pop rcl sbb popa or push jbe mov inc popf outsb pop jle scas test xor icebp or jg iret scas imulb pop and add les hlt sbbb push adc sbb daa adc pop jo jecxz pusha addb dec and mov adc (bad) mov fldenv insb stc add mov inc cmp xchg arpl sub cmp js enter dec ss inc inc sbb inc (bad) jg and sbb mov test mov xchg xor mov push push decl mov sbb mov adc pushfw and xor aam ljmp js mov pop xchg test in (bad) or mov clc add fild js lods xchg cld (bad) pop lret inc or add inc (bad) or iret xor push dec lds jmp cwtl inc sub faddl dec dec xor sub xchg xor push add dec or gs js sbb dec dec shlb pop xlat mov lea clc mov sub mov fs xchg mov (bad) inc adc push xor dec les stos push and xchg in adc jnp roll in pop xchg fs and adc ret rcr jo (bad) paddusw adc add jns dec mov push sub sbb aad jb or dec cmp mov and inc and repz sub jns jo mov mov pusha jno dec imul jno lcall sub jno,pt add lods xor outsb adc mov sub cwtl mov cs ret xchg leave mov or mov scas inc mov and js or jno sub jg mov ja andb mov inc or fwait push call jne pop pop aaa sub lcall or cmp and mov loope orb sub popa imul leave pmulhw or out xor addl les imul je xchg push stos addr16 imul out jl jmp xor lret jo cmp adc sbb pop xor and loopne (bad) hlt inc dec shrl add out jnp xchg cltd xor dec por inc adc lahf push movsl flds or pop fwait xchg testl cmp sbb xor cmp cmp fsubs test or hlt push cs adc nop xchg lahf dec or pop jge or inc xor cmpb nop cmp data16 int xor xor push mov lea jb dec loopne cmp xchg subb xor aas adc (bad) int3 and (bad) (bad) xorl js dec mov pop in mov mov sub push xchg adc lret xor lock xor and ficoml mov cmp adc pop and insb mov and bound mov add lock push sbb lret jb pop jno adc xlat loop jmp adc xor jnp xor add (bad) inc fdivs dec lods jbe and jle nop push jno adc cld add mov dec fnop and push adc pop je pushf dec mov and imul add icebp sbb test scas hlt and daa mov (bad) mov push fcmove xor bound (bad) fdivs popf add and movb (bad) repnz cmp int3 or or ret pop in or sbbl mov inc aam dec and pop clc test xor push push xor adc xor sbb mov sub adc inc xlat cmp aad push mov icebp adc mov pop pop repz fimull (bad) mov xor in fldcw or fiadd orl test js push hlt addl sbb adc popf or pusha inc mov pop xchg or mov inc aam jns mov add push stos sub xchg and (bad) in xor sub and ret orl pusha add pop dec push dec out push and adc (bad) setb pop mov cmp sub dec sub mov cmp adc add pop (bad) sub orb ret rep cmc enter andl imul jb adc out dec sbb aad mov mov ret (bad) movd (bad) xor fdivrs or or insl add inc mov sub mov push ja fdiv add push push jecxz cmpsb aam cmp pop call shrb in sbb out es push sbb dec or std flds pusha dec or sti xchg pop rcrb and rorb pop inc cmp mov test adc loop add xor ja scas pop in sti ljmp in mov cwtl xchg sbb cmp xchg cli adc sub add fwait es sbb mov jo jge ss dec cmpl xchg add push cltd nop sbb adc jge xlat pop out cwtl ror std enter sub and mov (bad) lock jle dec lahf movsb add sbb cmp push add mov add icebp (bad) ja xchg jl outsl test testb les xchg xlat mov mov nop dec add test fs (bad) mov jmp xor or cmp stos jle in mov pop pop push mov pop cld ds sub aaa (bad) std bound cmpl int3 mov mov jmp pop out mov pop or wbinvd xchg outsb mov sbb in cmp je lds jbe inc push pusha les dec or fsts test xor sub arpl test mov jg or adc add or pop lret sub in and imul jl test pushf std push sub bound insl jns lods sub dec aaa and scas or jl mov int3 pop pop mov or cld es cmp mov sub pop pushf add ret in call add and lock jge add data16 cmc ds mov test int add xor pop mov jge lcall or ficomp movsb fisubrl in lock bound mov dec pop pop cmp mov push push lods push jg fadd call in rcl iret cmp sub daa pop in enter incb loopne imul jbe push in loop (bad) (bad) dec call xchg xor jne inc sbb (bad) pop iret mov jne pop sbb xchg loope fwait inc cltd mov sub hlt testl ja pop sub xchg mov clc pusha nop xor or dec xor inc xchg lods adc jg fs negb sbb imul jbe cmp inc mov push dec insb xchg mov adc add pop out cmp xchg in hlt dec push (bad) loop movsl iret les jbe inc xlat addl cmpsb scas in ds test add (bad) in cmp pop jge mov add (bad) jbe jne mov mov and fwait (bad) out sub inc les (bad) or mov enter icebp int3 or push subb inc pop xor sub add fcompl pop cli scas xorl mov arpl pop and pop xchg lock loop add je jmp les daa pusha nop and lahf add adc or out outsb cld adc jb jmp jge push or pop cmp test push insl movsb shlb and jnp push adc push imul adc cltd inc jo iret cld cli sbb lcall ret cld jbe clc dec orb adcb mov mov cmpsb dec push (bad) jo mov mov sbb orb loope in jb addl jno bound rolb fild cs cmp outsb xor test icebp xor pop sahf and jae es adcb pop sub sbb jp pop dec dec fsts xor cld cld lods loopne xor scas sbb jns fiaddl jbe insb add pop shrb iret xor mov test lock dec dec dec add xlat jl inc xorb lahf pop cwtl pop sub dec add divb repz popa inc pusha add xlat dec push mov mov jno adc iret test pop lock dec dec fsubl loopne mov fadds pusha sub jo cld and shrl movsb xlat inc hlt mov mov fstpt jne xchg cmp xchg inc popa scas pop pop in dec in in pop add dec xchg shll in in push call lods pop fsubl push (bad) xor inc sub pusha sub int3 adc sbb dec adc mov iret ljmp push pop ss adc bound mov rcll pop mov cmp bound test fmuls jb dec outsl and cs addr16 out push sub test fnstenv das cmp push lods xor sub icebp and hlt add jl push pop clc and loop sbb dec mov repz nop lods cmpl cmp mov dec dec lods mov mov fcompl popa fisubrl fcomps adc sub cmp int3 in push xor fidivr push xor hlt or pop and and add adc mov js aad xchg push inc or loopne or and mov fcoml cmp pushf sbb or je dec out pop sub adc (bad) xor das sbb (bad) fcmovnb ret sub addl push sbb icebp lods subb mov add ror fldt (bad) jl pop fmul leave or mov in rclb cs ret pop lret ror stc cli push sbb cmc pop es in lahf mov cmp sbb enter fdivl xlat (bad) adc xor add mov add and sbb push mov mov push pop repnz sub popf add or je test test pushf dec pop pop push mov insb sbb mov sbb shlb icebp jg (bad) sbb into int push mov inc lds mov es icebp xchg sbb les adc mov push cmp cmpsb test add add mov and xor or mov (bad) jnp mov xchg mov sub test adc scas lcall xor jns cld add mov xor ret cmpsb jl andl sbb call leave cmp push testl or jns enter rolb ret inc xor jecxz sbb outsl jp and repnz and lcall inc add pop je gs out test lret pop jb mov mov mov cmp and and xchg add sub sbb icebp xor dec push das ficoml pusha enter mov xchg fs je fsubrs cli push das sbbl inc and jp and cmp mov inc sbb and in mov jp lods mov xor sti pushf lret add push push loopne inc movsb adc data16 sahf push add pop cmp push add fdivl adc seta push mov outsb dec insb or or int xchg xchg mov push fisttp adc dec and cmp les push add mov sub adc and push xor push add cmpsl outsl aaa or (bad) cmpl xor sbb sahf mov push dec mov mov fadds lahf adc outsl push (bad) mov loop pop xchg cmp or or pop popf sub cmp sbb add xor (bad) nop dec inc nop pop int3 clc and sub and sbb adc imul mov or lret (bad) sub fdivrl imul clc add mov int mov fnstenv pop mov iret xorl sahf lahf xchg inc lods add inc subb adc out xor jo add jmp imul push xchg jle adc popf mov cwtl cmp mov (bad) mov add leave add andb sbb or in popa pop cmp add test sti sub int3 add cmp dec xchg in add lock push into or hlt jg mov cli das loopne pop and and add and add push push lds xor imul test roll push sub mov pop sti add sbb push addr16 and incl imul cmp push jo xchg add cmp lret repnz outsl icebp cmp pop push dec scas cmpsl pop subb insl retw jl jne scas je cmp or jo aas jle lock mov adc lock adc js adc adc sbb std xor mov or addl add aas mov push pop jns cld outsl xchg add int3 pop fs shrb add andl push repz ja and xchg shl xorl in xchg pusha lret cld xor rol inc out adc add inc jl lock invd clc outsl jge out int3 loopnew pop jg aad and lret inc sub (bad) rcr push clc gs cmp pop rcrb xor and leave (bad) test adc inc imulb inc (bad) xor jns and movsb iret nop popa cwtl call cmovno or inc pusha fidivr jns mov pusha push pop arpl adc test sbb pop aas xchg fs mov sub jae add jle lods jo push and inc enter faddl jl fnstsw xor dec pop es or clc mov int3 add mov cmp xchg mov add (bad) hlt adc cltd cmp pop add adc inc add and hlt sbb xor cmp add sbb jg sbb adc xchg out fs inc xor popa icebp in cmp cld and push test adc int3 ret nop pusha push cmp ss ss stc aam arpl pop mov popa test and add bound add xchg nop fcomi xor sub adc mov add lds cmp add or add mov and dec gs adc add hlt adc callw repnz sub mov xorl inc sub rorb push sbb js cmp jg adc mov cmp cmp aas dec mov outsl or cmp in or movsb shlb js push movsb sub xor cld inc xchg xchg mov mov jo and mov adc enter cmp loopne sbb dec rclb les cltd addb pop push lea inc fisubr push imul sub adc and pop xchg int mov adc or addr16 jp inc jbe (bad) in lock xchg fsubl mov arpl dec in sbb inc inc add xchg outsb setns and xchg or xchg lock jecxz mov jae add std outsb ds (bad) cmp push clc inc add call jnp mov aaa mov ds add js rorl pushf add xchg sbb popa cltd xor mov inc xchg movsl dec add jae xorb push xor and mov jo add rclb add push fistpl push stos inc fmulp aad mov push nop and data16 gs sahf push rorb adc aaa xchg out lods sbb adc clc add test or inc sti aaa pop int mov (bad) xor mov movsl (bad) sbb inc dec jl punpcklbw sub clc mov mov jne dec pop sub arpl cmp adc rclb sahf call mov xchg mov mov sbb test call lahf fadds lret cld nop inc dec jb outsl out cmp add js sahf mov mov ret cmp add hlt add fdivl pusha imul push and hlt sub push orb cltd jbe sbb and int insb popa inc dec jno cwtl sbbb sbb push xor add cmp pusha jo jno sub xchg or pop clc sub movsl push and mov cmp loop adc xor jo adc xchg loopne roll jne lcall mov rcrl inc divl sbb jno test lods push icebp fcoml xor push lods fs dec inc ljmp dec movsl or push iret sbb xor (bad) cli call mov jecxz add stc lock fildll mov mov call and xor (bad) jns dec xchg jbe movsb iret gs xchg or pmuludq clc xor lods orb mov aad adc xor rcll inc dec enter cwtl add (bad) jne xchg lret cmc cltd add (bad) mov and test xor mov add add or adc shlb sub or and xchg mov lea adc sbb push iret pop jbe fxch cwtl xor js js xor xor bound add add and loopne dec imul jl xchg and addr16 leave add xor cmp and cmc or add data16 jmp mov or jmp aaa enter mov pop imul and sbb lock cli xor adc xor (bad) mov push and movsl or movsb xor hlt or repz aaa push dec sbb cmp mov mov rorb xchg and push ss xor imul call aad clc add adc mov bnd mov add sbb xor and nop inc mov mov xlat loop add push push xchg lret dec xchg cmp and call xchg lahf and lahf mov cmp loopne fstps lods popf adc or or es bound int3 adcb lds sbb dec and add or arpl clc test cmpsl push inc adc and jmp xor push or pop outsl jecxz,pn jl jbe xor or imul xor dec mov stc or cmp sub outsl mov sbb sbb jnp cmp adc or scas pop push lods dec call and inc mov xor add mov add jo cltd and lods mov subl (bad) pop add (bad) int3 andb test add push and mov or add rcr sub clc adc mov inc and call repz leave jp and inc adc xchg andl call or mov add and cli dec jecxz push pusha adc lcall adc pushf mov xchg rolb fld1 and or dec lcall or xchg or enter stos and add bnd loopne xlat add mov js push adc mov and stos adc pushf rcrb add jmp aaa out push lock imul test je sub jbe mov add mov out movsb fwait push mov fidiv pusha outsl fldcw adc xchg dec inc mov int3 mov rcll negl jbe add lock mov mov dec mov int3 mov cwtl cmp adc or xor aaa push and adc sub xchg xchg mov mov add movsb ret cmp es or add mov popf test movsw sbb mov or cld lods adc insb cmp out xor cltd rclb and adc stc inc push xor sbb mov pop ljmp adc or (bad) nop adc movw or cltd icebp add inc cmpsb inc or dec enter adc bound mov adc and clc adc in xchg into xor xor nop mov das (bad) mov pop popf or lret test fdivl sub loopne faddl push test inc inc das adc je rolb add mov pop and xor das jae adc popl sbb mov rcll pop mov popa xchg jb pop push xor in cmp dec repnz adc test jmp lret rorb movsl adc xor cmp dec clc test cmpsl sub adc mov adc and movsb fdivrs xchg and sub inc dec dec cltd and clc mov mov (bad) stc pop pop and add ja mov mov jo sbb dec push push in (bad) call and mov pop or dec lea scas xchg pop push cwtl mov jmp sbb movsl xor pusha sbb subb test mov cmp mov (bad) mov mov xor rorb mov jle jbe add jb and jno add xchg gs mov enter lock xchg adc ljmpw or jns dec cmp add mov mov js leave sub dec and outsb or enter and fucomp add es or mov adc in das add (bad) popa pop cld ret orb outsb std xor xchg andb dec mov or cmp dec mov (bad) fstpt inc addl dec lret xor fsubrs mov mov pop ds je xchg rol stc xchg in cmp fsubl hlt iret (bad) pusha add and daa dec sbb das pop mov xchg testl dec push jnp (bad) stc sbb mov out sub clc and push xchg ds adc xchg add adc push les adc lock add int3 dec inc xor adc add int3 or je test loopne jle mov sbbl inc test lods loope cli add dec dec dec imul or mov sti rcl imulb mov loope xchg lret add add mov and mov (bad) mov add adc (bad) aam inc mov in movsb test or nop jmp mov or inc xchg mov adc mov sub or enter push and (bad) hlt and mov mov add nop in mov add rolb add (bad) and push in lea cmp movsb daa pop jbe sbb lods mov push add dec repz and cmp dec dec ds inc cs cmp daa scas fcoms push mov dec and xchg in pop pusha (bad) cwtl inc imull xor sub add mov mov je sub cs jae mov mov test xor xor inc sub cltd insb mov movsb pop pop ret test or setnp mov xchg movsl sub nop mull pop ret inc mov jle call sahf sarb add sub daa nop cmp mov mov shl ret (bad) adc adc andb add adc cs test lods sbb sbb add mov adc aam scas nop pop pushf adc push repz mov stos pshufw pop into sbb or inc push xor push adc add sub sbb dec sub mov dec nop popa mov sahf nop and lcall lock nop leave jo xor (bad) jbe jo add dec stos or mov and shlb xacquire out lods cmpsl add or dec sub iret xor xchg mov or and test jb notb call hlt push lcall pop sub or cli enter jae and mov or movsb mov sahf and push in mov mov dec jae and mov fwait lcall mov mov dec pop cli test flds push xchg and xor test clc sub sub sub lahf ret and (bad) ja sbb sbb jae push loopne dec cli jbe (bad) loopne cmp int3 or (bad) aam stc jne pop fistpll jo orl and dec enter adc stc inc sbbb adc push pop pop pop add xchg mov (bad) lock mov cmp fdivl and aaa xchg dec adcl fldl cltd insl add mov jno xor lret and test and les mov push inc jge xchg push in and ror (bad) and xchg enter xor adc daa inc xchg and adc cld fildl mov jge add mov pop ret cmp cmc sub push outsb xchg push cmp push or test xor es xor cmc inc ljmp and sub sub repz and or fwait es sub adc push sbb cwtl add add push ljmp rorl or dec daa inc cwtl test xchg mov sub loopne (bad) cmp js movsl xchg gs push faddp xor lea out mov movsb add and add mov cmp pushf and in cmp popf jge shlb clc js and loope inc cmp cmp jbe adc fwait jge aad or hlt xchg or cmp or xor xchg mov sub inc adc int repnz xor les paddsb fsubs pop es mov (bad) and sahf cmp sub pop mov ret nop fsub mov inc or and (bad) mov sbb imul cmp add xchg imul fsts adc add mov mov push mov sbb mov ja inc xchg xor pop jp loopne jae xorl dec dec test test mov test clc sahf mov pop rorl js xor js mov push and ja xchg fs xchg pop sub je mov clc xchg scas sub mov test push mov dec ja pop inc cmc popl inc repnz push scas xchg mov enter aam sbbb sahf jl xor and push mov mov cmp or (bad) cmp mov in dec dec ljmp adc dec mov cmp aaa push and ljmp sub add js adc frstor mov cwtl test fs mov mov and mov (bad) cmp cmp add rolb pusha aam or imul sbb test lea inc adc adc ficoml pop or mov adc push cltd shrb mov jb and mov sbb int or jmp lods fmuls xor lcall cwtl test in and daa aad dec nop call mov jno sbb das and pop nop pushf cltd repnz adc mov movsl orl xchg add and xor cwtl mov dec sbb jo mov fwait or fucomi adc or mov test push leave jne mov movsl push (bad) std repz int inc in sub icebp test inc mov mov test addl in test out daa jbe out or lea movsl pop das and lock mov mov xor mov add or lea cmpb outsb pop push adc and mov mov jb daa lcall fsubl xor pop (bad) xor lock pop bound mov sbbb xchg mov rorl stos inc push and push or lea add (bad) push sbb fadds adc cmp mov cltd in mov jns sbb inc loopne sub lds imul imul sbb inc xchg adc ja pop xchg or inc dec int3 cltd in scas adc adc dec icebp jmp add sbb sti leave adc sbb (bad) nop sub xchg xchg lods clc inc push test mov leave cltd xchg jg arpl les sbb push nop mov jns sbb inc xchg and pop jno xchg or icebp movups xchg test xor cmp mov jl mov pop adc stc mov adc sbb dec xchg xor movsl dec xchg lea pusha mov nop jl test shrb jge mov add or cs sbb popf rolb inc xchg mov js les push mov sbb jae fs push sbb jl es xchg test popa mov push sbb xchg mov xchg inc cmp sbb mov sbb push fmull mov stc inc xor movsb or inc dec push add popa je inc or cmpsl sbb fsubr dec fs out int3 and xchg adc sbb mov fsubl and push hlt rclb nop repnz sub bound rclb pop enter inc sbb and xor jmp or inc jne push nop fmuls sbb aaa push add pop scas pop in adcl push pusha sub adc les push add in stos movsb test dec and inc orb inc sub je addr16 inc lret outsb sub inc jbe cmp imul ret adc xchg adc cmpsl sbb fcmovnu aad cmp inc jg push (bad) push sbb xor mov xchg roll ss daa sub mov sbb cld and cmpsl call pop addb test cmpsl push mov (bad) in push xchg ror push mov cmp or sti sub push nop and mov sbb mov daa sbb les push adc pop js sbb sahf lock inc push aaa sbb sbb xchg add push shrb cmpsb lock ror iret lock es ud1 sub fnop inc cli xorl add dec add push cmpl push js iret pop lahf rclb mov mov divl pushf adc fwait setp mov js pushf pop ljmp repnz int enter and test mov jbe hlt mov add pop ljmp clc adcb popw mov fistl and ficompl adc loopne dec fs add fwait adc popl push jo stc arpl fstl mov cwtl sbb (bad) and mov loop adc popa lret hlt (bad) cmp rclb push push fnsave js fidivr push pushl mov and dec subb push std aam stos stc jl fildll or dec in cmp or (bad) jae mov insl jb aaa and in add dec push sbb jecxz add cltd jecxz dec stc push mov rorb or ljmp (bad) adc inc add std mov xor loopne repnz push loopne int3 add (bad) icebp sub sar mov xchg sub ljmp add lods jno ljmp and mov rcll cwtl mov jns xchg inc rcrb fsubrs mov cmp das pop out add into push adc clc stos adc je cmpl loopne mov call xchg push imul hlt dec lret push jns addr16 add je sbb cmpb sbb or shrl cmc and fmull pop add xor bswap jb mov loop cmp xchg in or out rcrl jmp mov aas jns mov dec ret lock incb jp mov xchg loop lds movsl shrb push shrb or adc sbb cwtl das mov or repz sahf sbb stc ret int3 enter aam push stos int3 inc nop xchg test std or or roll add xor fsubs das mov xor icebp cwtl insb or or mov or movsb dec mov and add pop or loope mov pop add in enter mov imul test popa das aad mov jmp mov loope ljmp movsb lock xchg or cmp loopne adc sub dec and cmp xchg add mov dec aad in add lret xchg ret add and push hlt mov shrl test adc inc inc and pop mov das or jno add sbb mov sbb and lods mov aam loop pop mov bnd cli inc or mov lock add mov mov ret in push xchg inc adc and mov les pushf cltd inc pushf xchg push xchg inc cmp lcall and (bad) inc in mov sbbb repz sbb jecxz push adcb mov cmp pshufw sysret movsb je (bad) sbb hlt fadds insl fcoml cli inc mov jbe fistpll leave stc lcall sbb push sbbb subb lcall ja add cli or (bad) loop sbb mov cmpsb idivb imul sar mov sub jge add sbb or aaa mov adc add outsl insl sti test lds mov es popf in push in or loop fmul jl adc cltd add das mov mov push or cwtl sub add sbb arpl xchg fisubrl ljmp lret dec adc mov test dec xor mul repz push movsb inc jle call sub inc lods in dec cltd push add pop ljmp cmc mov bound or mov popa mov pusha test std xchg jo ljmp imul test mov shrb test push mov stc cmc lods leave cwtl cmpsb subb call xchg pop js cwtl add (bad) aam stc fdivl and icebp cwtl pop jnp imul aaa sbb sbb xlat add mov xchg xor mov (bad) into lods test test cltd std jmp mov mov xor or or pop nop lods leave into mov xchg mov enter insb inc sbb and mov mov call or cmc roll jno inc pushf rolb clc mov iret and inc dec dec pop jb mov mov testl cmc das inc cmp dec add sbb out mov mov jae mov xor sbb lock pushf inc xchg adc xor add or dec scas mov jae dec stc (bad) lods add out movsl or inc (bad) ljmp mov xor enter movsb clc lcall push jg push xor dec (bad) pop or hlt rcr mov js inc or lea adc inc test dec test out push xchg iret jecxz mov xor jmp cld xor rclb sub fnstenv stc dec leave cmp cmp jg aas mov and jo cli pop pop jo xchg mov adc mov and jmp out push pushf and lea movb pop fmuls mov test push inc das call out sub and add jb mov ljmp cmp out iret xchg aam pop push mov sbb mov in cmpsl pop (bad) push fmull mov sbb cs inc and xchg add mov aad cmp sub add mov fbstp mov and (bad) jbe adc in dec out ret and cwtl fdivr mov jo cmc outsl call adc mov add lds cmp insl mov sub adc mov insb mov and outsl sarb bnd sti ret loopne out nop mov (bad) stc lock ljmp pop mov (bad) clc test cli enter fidiv pop fld mov data16 dec outsl inc fcompl fmull ljmp fcos xchg xorb mov addb dec aad jl loope mov fdivrs gs push sbb repnz mov mov dec xchg inc pop in nop or ljmp insb enter or cld test dec xchg xor or fs or mul fsubs orb inc popa mov xor xchg and in push mov loopne pop xchg mov sub xor test dec xchg out inc push popa cltd movsb rorb es xor and cmp and loope lods pop push dec int3 xor mov or test xor lret jae bound lcall lds sbb push arpl xchg pop incb inc add xchg push rorb addl or or ret mov pop push rolb adc stc xor add out out or inc stc xchg les test push xchg jno or xorb sbb and (bad) mov mov sub mov adc add std xrelease cmc insb cmp lods loopne pop add cmp das cli enter or inc cmc jmp andb add test add rorl sahf sub insl push add jbe lds stos mov (bad) js cmp mov inc add nop dec cli dec pop jb mov mov jno inc loopne movsl hlt add loopne mov stos movsb or add dec in cmp adc mov xor cwtl nop xchg mov test rorb jl ja test mov lcall stc add add and xchg outsl xor adcb add ret nopl pop lea mov inc call outsb fmull mov mov outsl push cltd xlat (bad) add fdivs nop add shrl push call test lods bound cld add lea idiv fldl fcoml loopne cltd into mov push in dec add out repz sub call sbb outsl inc enter and add mov repnz dec xor adc push dec xchg jnp fs stos dec inc cmp jb dec stc popl pop cltd mov jns ret jo fmull imul pop and insl stc jae jo add out aad dec fs and sti cld cmp rcll mov jmp cmp sbb jnp cwtl dec jne in daa add mov and xor or outsb cmp jae push mov addb xchg lret push lock mov fcomp add cmp cld dec mov imul dec ljmp jb mov cli dec adc aaa out stc jbe enter cld loope pushf mov xchg add push in cmp ds mov jo pusha dec lods dec gs xor shlb or xchg addr16 nop test fldl cmp push divl dec fidivrl mov push sbb adc push or sbb ljmp add sbb xchg or add sub jge int3 jo stc das or js or or and add inc (bad) push in push (bad) xor or (bad) js push sub pop decl mov les movsl inc pop in mov sub fiaddl sub pop xor mov push call jle jbe lret sar push and dec pop repnz adcl pushf mov scas pop add out dec pop (bad) push bound adc cmp aad jne or ret pop adc xor fstpl (bad) jle nop sti xchg arpl and pop pusha or xchg call xchg push dec mov add dec and into pop cltd pusha inc adc rorl lods hlt clc mov ret xchg roll mov mov jne jno push fistpl add sbb int jp jns dec daa add in add leave bsr jecxz jo xor test dec xorl sub add sub aad (bad) and out icebp add fcomps push cmc cmp inc add or add inc push add push and sarb mov imul sbb dec and push fsub sbb dec lcall dec lea es (bad) aam dec sbb dec adc bound loopne sub add push add add adc adc call mov inc add ror mov leave sbb adc push sti sarb jb mov jo push add stc clc pop add (bad) and jge add sbb push inc fbld aam mov jl cld and add add jl xor pop adc jle mov adcb sbb add int call or push adc pop sarb mov popa and pop int3 add add outsb fnop sarl out jmp inc popf add sbb xchg and test and xchg adc pop xor cmp pop in add sub jmp outsl ficom adc push mov pop (bad) movsb inc ja dec mov push dec xor jle,pn mov loop hlt xchg jg xor pushf add xchg cltd add jbe jmp movsb pop je das add mov psrlq sahf xorl fldl and pop xchg sbb jle cli out add hlt lods nop out adc push repz add (bad) lcall pushf inc mov pop push cmpsl sbb ja push sarl lds in dec pusha inc add cmpsb inc inc cmpsl mov test pop movsb out pop mov rol outsl movl mov mov fisub xchg test cmpb sbb mov xchg add inc sub xor std mov cltd sbb call inc addr16 mov es mov inc outsl ret pop aam mov fdivl mov pusha or in sbb psubd xor sub mov add fmuls mov push rcr dec sbb xchg push jns dec xor in jle mov test mov cltd mov arpl add movsb xor xchg pusha pusha push loop imul (bad) sti negb les hlt cmpb mov icebp push cmp push rolb push out inc sub xchg cmp xor sub repnz ds aas pop xchg add xor rorl bound and dec xlat mov push (bad) add sub imul ds cmp pop or jo adc insl icebp call xor push add sub call dec call sahf xlat sbbl sti rolb mov insl jg cmp cmp or or mov or jo leave jbe push stc push movsb (bad) (bad) xor shl ljmp scas rcr ret jle fsubrs push rcrl add clc (bad) adc adc enter mov add cmp jns scas sbb sub xor mov jl sbb addb out movsb loopne into add fdiv ret fnstsw lahf or cwtl jno mov pop dec jns inc mov mov sbb add data16 mov mov push sbb lds cmp adc add sub add add add insl aam cmpxchg sahf and divl add mov std pop (bad) mov adc inc xacquire das ljmp mov sub out add cmp adc jns cli aas lret das ja mov add pop mov iret xorb popf mov lds hlt in pop rcrl lea or lret xchg bound jno cli int3 add (bad) adc pop cli push pop icebp out xchg pop (bad) xor cmp js push imul jg jecxz push sub xor mov arpl xchg jno add inc mov call fsubrs lods jp leave cmp cmp cmp das out out xor cmpb mov cld sub aaa push jecxz lcall sub lock xor xchg cmpsb shrl pusha cli pop xor gs rorl jge data16 stc cmp pop xchg add xor vmwrite jl cmpsl test test test out and test icebp in test mov nop nop jmp sbb cmp xor fisttpll jge pusha cmp mov test movsb hlt out sbb sub and loop push test inc sbb cmp jmp xor lods xchg jb inc mov js pop xor test mov dec mov outsl cmpsl jns jmp mov push sub xchg jp mov jl add pop sysenter jnp and xor js pop xor into mov mov or adc das push push sbb lcall loopne and std xor rorb arpl jle push stc xchg xor inc inc mov cld push movsb or stc repz sbb cmp mov adc lods and adc sbb mov test adc mov mov adc dec inc and out mov adc sbb in js call xchg or jl add cmc sbb mov rcr aaa psubusw aam and cli sbb dec fmuls pop add adc and stos cld push lahf mov ljmp imul stos adc add push movsb adc ficompl xchg and imul roll mov dec in mov rclb (bad) lock icebp enter mov or xchg call jecxz js add scas pop jae xchg inc in add and push cld mov and leave pop push inc mov sti sarb cmp sub xor js loope sub inc dec xchg push pusha add xor lods in cwtl inc into jnp addr16 nop xchg int3 add lock mov shrb scas add les jo push xchg mov enter cs movsb mov int3 mov push (bad) loope xchg leave cmp gs ss pop pop add movsb imul adc and cmp jl and sub sbb test or inc xchg addr16 inc clc icebp pop add and sbb mov aaa dec pop add adc or sbb out cmpsb addb push das mov out out xor jp pop push mov jnp xchg push rclb scas test sti adc adc in xor sub push fbstp xchg movsl push mov inc fcompl inc mov insb or sbb rclb add xor dec or imul test je push mov dec mov inc ja subl mov enter push mov or pusha and adc or cmpsb jmp sub mov sbbb bound cmpsl mov loope adc cmp sbb insb push icebp xchg xchg ljmp inc push pop mov jns cmp and xchg add movsb fs andb ficompl pop lret jp sarl rorl in repnz mov mov movb pop mov ds adc adc add or shlb icebp test xchg (bad) pusha mov nop cmp add jne push add mov cmp stos sbb sbb (bad) push xchg loop push push xchg aas adc clc loop adc jecxz or mov cld sbb add test mov mov sbb dec mov sub cmpb pushf adc xchg sahf aaa pop inc dec aas or xor push int3 jo cwtl mov int xchg cmp les hlt xor and or dec in and xor cmp dec or addb bound test cmpsb push push push adc push jnp add loopne add in sub std add mov mov in mov enter sbb cmpsl subb loop mov pusha (bad) jnp and jne mov jae push jnp add and lcall cmpsb les xchg mov (bad) xor push lods stc and sbb mov add mov ds fidivl and jno es adc mov mov sbb es movsb pop adcl mov sub xor pop loopne mov fildl push lds adcb pop inc push mov mov add inc repz aaa js cwtl dec icebp jae pusha add fstpl add inc shl mov cwtl xchg sub push and xor in nop int xchg divb int3 subb adc push mov xchg xchg push enter add jecxz imul sbb stos mov add xchg sub pusha call add mov insb mov sub pop ja enter stc les jbe adc sbb and (bad) call jmp leave cmpsl sub es inc or (bad) fiadd xor cmpl adc inc movsb mov dec xchg (bad) out or dec dec pop adc jecxz insb add adc gs sbb cmpsl bound xchg and frstor and movsb cld adc bnd orb mov subb cwtl mov lock xlat jno test adc add mov push divb jle shr movsl or fldenv bnd lods xchg sub pop addb inc dec push test icebp sbb jbe jo mov sbb mov add or and pop lahf movsb icebp and sti cmp pop mov test or push sbb adc out stc dec test mov int3 adc int3 adc movsb mov fwait pop shrb add sbb mov mov mov dec push sbb add aam dec (bad) xor stos adc add jp jb nop fild mov push loope cmp mov or jne js push inc add push imul mov or insb dec call and push sbb add ret mov xor cld add inc inc loope xchg lock stos sbb cwtl std push pop xor inc in sbb mov call cmpsb mov shl mov pop jno repz or mov mov add push xchg psadbw or jl mov mov cmp add xor mov les ds inc loop shrl fs add push mov nop pusha sbb mov push push push inc mov adc push fcmovbe xchg sbb inc or lods sub loopne mov jge push push add and imul (bad) hlt popa adc jecxz fmull nop push js add cld mov js (bad) pushf shrl clc (bad) add jmp movsl flds or add stos cli inc push xorl mov dec insb fdivl sbb jno cli add pop mov jp ja and add sbb add lods mov xchg shlb push pop mov cld add or ds push adc aad and test mov pop xor and loopne call scas nop mov sub or jmp pop sub mov and sbb sub inc jbe or mov bound xchg int mov dec inc lret jns inc adc cmp xor mov fildl xor loope mov les lock nop or mov call xchg js in inc pop cld xchg fbstp int add test add imul cmpsb testb cmp inc les pushf pop enter dec stos push dec or push mov xchg (bad) enter jb mov and bound stos pop stc call add or pop xor call adc jns sub lcall mov xchg push mov xchg inc or inc mov cmp loop and inc inc pop jne call push sub add fnsave add popa cmc stos scas outsl fdivs xor out add dec dec push or repnz pop jae xor pop pusha inc xor mov dec xchg add or add push hlt in push repz mov rol xor (bad) loopne jb sbb dec int3 sbb pop xchg orb mov add ss pop dec jns das loopne inc mov cmpsl and dec mull adc inc loopne adc sub adc jae sbb and adc push in daa add dec and lock andl jo out adc sbb inc jle aam cmp mov xchg jg es sbb sbb push dec sbb push nop add pop loope arpl xchg mov es in push lea (bad) test mov add mov (bad) enter pop add cmp pop xchg mov int3 add repnz lret sahf into add mov or jl sbb rcll loope lcall pop shlb imul inc cmp (bad) cmp mov lret aaa (bad) repz mov pusha push or xchg sbbl mov imul mov inc mov cmp mov sbb and in (bad) aam push push push push inc mov loop xor test mov xorb out sub add jbe dec loopne pusha push push imul pop lret jo push loopne lahf pop inc lea and add int3 (bad) xchg push mov fcos jecxz repnz inc out push or in lock sbbl cwtl xchg inc adc sub or or lret and add dec hlt mov mov or jnp,pt inc jg xchg imul popl mov insb fstpl mov test or or (bad) je mov adc test jp mov push in adc imul popf mov inc jno push stc adc imul sbb push lret sub and jo cmp hlt add fimul cmpsb or test push fchs icebp movsb inc dec lret add rorl orl adc xchg inc js push and add lret fidivrl fdivs adc or xchg out sub sbb add sub mov (bad) lahf repz (bad) and jae mov cmp pusha jb sbb mov add mov jmp ret enter inc lret push or or mov or cmpsb mov loop sar xchg stc add push jb sub hlt add or dec or bound shrl subb in sbb nop fadd inc push aas and and push add movsb int3 or add mov mov cmp (bad) bound or sbb sub push add scas add mov cmp jo std pushf sub dec add mov push add lcall push sbb out lret add (bad) push stos sub add dec push cmp adc mov daa lods cli stos mov cwtl pop mov cmpsb mov arpl addl popa push imul sbb xor daa cli sahf lea add mov jae mov mov add inc fstl jle bound sarl dec cltd push repnz gs add dec and adc dec dec add xor fs sub push lret dec fidivr jne sub je aam cmp dec test cmpsb inc inc jl add mov xchg inc mov ret adc add or mov push or mov sub addb inc pushf xchg xchg loope (bad) and jg,pt daa inc inc inc mov xor addl mov icebp test add dec movsb lds loop rcrb lahf pop add addl push fdiv mov mov std sbb inc cmp sub xchg add fcomps in adc jno push add cld addr16 hlt pop xor mov xor addl jb test or loopne sub add push mov dec adc gs add adc mov mov inc pusha and mov adc jp or in mov aad mov push and mov (bad) push roll inc push sbb (bad) dec mov inc ds ljmp stc xchg js stos adc or push sbb push lock stc add mov xchg loop,pn add incl xor sub scas cmp and (bad) aas jbe add inc mov pop jecxz sbb adc pushf (bad) nop xchg mov dec dec jnp xor lds les mov dec xor movsb cld mov xor int3 data16 (bad) cmp clc addb shrd xchg sub jnp xor (bad) jp (bad) scas loope movsb xor jnp in sbb scas gs add xor sarl into cltd push cmpl fldl cwtl xchg call repnz xchg cmp addl push pop das and popf fidivr add and mov pop repz push jo sub js xor adc pop repnz adc push imulb xor pop ficoml repz ror imul or mov ret add mov push hlt jg add pusha push sbb rorb aas jmp add test in add xor cmp cmpsl test bound sahf jbe xor and inc adc stos pushf and lods enter pop fisubr sub loop cltd mov sbb pushf add jle and aas jb add icebp pop jecxz out or aam sub add mov xchg jne leave test and add lea mov cmpb mov lock sub xchg and cmp out adcl cs lret sbb or xchg in rclb insb test ret loopne pop (bad) (bad) jo scas popa movsb lret jecxz and dec les lcall repz (bad) sub adcb adc mov jno push (bad) mov sub dec pop insb (bad) rorl xorb sahf jb adc or and mov (bad) xor out sti xchg push add jno pop inc (bad) fldenv lock add cmc xchg sbb ja xor rcrb adc or std pop xor les and nop add imul sbb ret add dec push stc mov xchg mov pop add xor adc outsl adc xchg sti std add inc dec pop jae lock push inc nop cld push xchg add cltd scas lcall add sbb inc mov xor call shlb (bad) mov mov sbb pop stc cwtl rorl sbb pop cmp fsub add outsl (bad) hlt mov jg mov add fisubl movsl pop mov jge push inc sub out lods pop add fwait into mov pop stos add push jae,pn mov lret sub ret or mov mov cld sbb js pusha shlb movl add bound fsubrl cmp incl (bad) sbb add loopne mov add pop (bad) mov ret pop mov movl jb sarl fs inc inc daa ret adc rolb mov shlb push mov mov add add movsb movsl or aas mov sub adc adcb sub pop mov mov roll enter mov stos gs dec outsb ret add (bad) mov out add adc les fidivrl pop xchg lahf cmpsl cltd sarb add aam push (bad) nop fsubrl (bad) dec adc iret cmpl test inc insb add jo xchg (bad) outsl lock je inc and test xorl and lcall lock outsb movsb clc adc inc or and inc push scas mov xorl adc ss push cmp nop dec add bound lods push xchg out or jne mov xchg add daa (bad) in ja ljmp pusha and push test adc cmp hlt mov lods out add enter jae call fldl fdivs orl (bad) jo mov push loopne movsl adc mov std les pop add iret and xchg jg inc sub in dec dec rolb adc inc lds push sub or les or cmp lods addb jne mov xchg sub shr ret (bad) mov bound and and sub lds (bad) cmp pop std aas (bad) mov out inc cmp cmpsb sbb mov push repnz mov test sub mov fdivr pop mov cmp incl dec mov adc cmp daa pop nop roll mov or xlat (bad) adc and (bad) scas pusha lock cmp std js rcl aas xor shrb inc pushf adc pop stc mov adc in nop or imul or rolb stos leave les mov or mov test adc push pushf add nop inc out mov jg fbstp and lcall add clc (bad) shrb lods add jl pop add jno lds mov rcr out inc mov stos stos fsubrs and mov adc and pop aas bound jp jne sbb jbe das mov stc aaa out add pop push test push mov sbb mov xchg mov popf and lods decb xor shlb popa sbb adc pusha add insb fmull adc fildl push pusha add add daa fst arpl (bad) test mov lahf cmp pusha inc mov fdivrp pop and call push or movsl dec mov fdivrl insl fisttpll les mov notl jl add lret xchg inc and add (bad) mov movsb es sbb adc inc pushf add movsl cmp mov call push divb aaa cltd cmp push jle mov mov xchg sub daa mov lods arpl es insb add into aam fcomps mov rclb push scas mov jg xchg jo pop adc les sub sbb fisttp jns jb aam pop inc cmp icebp std rolb sbb mov lds int3 les jns mov test cmp ret lods xor push sbb fnstenv cmpb pushf xor lds test cmp or sub add push fidivr cmpsb ret push dec test scas es je pop lds addb xor add sbb mov or cmp and int3 sbb mov (bad) out or jns add mov test test icebp mov pop das mov (bad) mov add dec cli clc inc test sbbb test rorb lds mov dec rolb mov int3 fsubrs icebp xor cmp cmp and push in pop out add cmp aaa adc ret mov repnz cmp (bad) fwait rcrb lret xor nop int3 cld add add fsubrp jno push xor dec xor sbb (bad) or (bad) aas iret cmp shrb lods dec nop add adc (bad) imul pop add out lds hlt jae mov clc add and inc or ds out in aas js or movsl fnstcw sub cmp adc cmp push pop cmpsb cmp loopne push xchg adc xor int3 fstpl mov xchg mov add cmp pushf add add jns inc in mov sbb xor jbe adc pusha push mov in mov sbb jns cpuid mov movsb (bad) in (bad) ds cmp mov or cld mov je movsb cmp cmpb or addb adc sub nop mov fnop insl jno movl add mov lods cld add lods adc repz sub or add test ret rcll dec xlat jnp ret rorl mov nop loopne cmpsl stc std lds mov pop nop fs and jo shl inc shrb inc add imul andb rcrb dec mov into push xor std sbb xor icebp pusha outsl adc adc jg leave add sbb dec cmp repnz pop data16 lea addr16 test clc pop popa in pop rcll dec jl mov insl inc dec xchg les pop mov add mov test test xor aad adc or jecxz and mov ss sbb add sbb and mov sahf add jnp in scas aas setne mov rorb push inc cmp mov (bad) ficoml jl pushf sbb or pop mov std rcr les shl add out jne repnz push push pop cld lods lret and sub mov testl int3 fsts cltd (bad) cmpsb mov add mov adc lds je nop add es sub scas add mov (bad) push inc pop xchg rorb cmp js mov pop daa push mov adc mov std in test aam jo add ds pusha sub inc jnp lcall push insb push lods or xchg xchg insb add in aaa push or add clc cmp insl or add pop mov inc loopne lods add dec pop push js call add push call add fxch lods out mov sbb cmp push push mov add push test or data16 ret mov sahf rorb outsl or aas pop cltd mov xchg cmc mov dec add and adc sbb sbb push movsb cmp sub xchg rcrb pop and in add insl push mov sahf push scas add enter in or cmpl nop lods daa incb push push xlat add and mov loopne enter clc xor nop popf xchg scas test or adc pop test rorb subl sbb add adc lret and cmp push adc addb add out dec adc std out mov add pushf jl sub xchg or aad scas jge cmp dec daa ret test enter stos xor add sub mov lock xchg sbb aam sub or cli fsubrl jne ret leave out add push mov flds lahf xchg pop movsl shlb inc mov call adc lcall jp call push lods dec repz or test xchg inc test pop pop in adc add sub push inc mov test mov or popf or in mov mov mov (bad) xchg mov adc add jecxz add enter (bad) cmp cmc mov sub icebp in xchg push mov dec or sti mov pushf dec movsb sbb inc or loopne shrb clc xor sub cld inc push add xchg jno or adcb pusha mov xchg cmp jp fcmovbe pop mov push pop cmp lea mov inc or fiadd inc cld and mov jne mov das dec jae cmp bound lds lock jnp ret xchg sti inc leave ret sarb push lock fisub jl xchg pop sub cmp imull or inc and inc cmp sub mov inc nop jo lds dec pushf enter jns mov rolb push push lods inc mov and cwtl and test jae push mov test into js inc sub fisttpl push ret or pop mov push cmpsb and repz orb call movsl or lahf repnz xor and jae lock push insl pop das nop xchg adc or or push lds in xchg jo roll pop fcomip sbb sbb and sub xor int add loopne or pusha push push cmp pop nopl pop xor out sbb xchg add push (bad) dec mov xor sub mov mov pop cmp inc jne add mov jg adc ss imul test xchg fldl push loopne insl add mov ss pusha jno ds push and outsl add or lods pop cmp mov (bad) movsb rolb xchg sbb adc orb sbb push pusha mov or and xchg movsl cltd xor test mov inc xchg rol imul outsb inc mov push and mov pop clc add and iret add push add aaa fidivr ljmp insb stc and call mov xlat cltd add or (bad) pop pop mov inc mov shr nop xchg ss mov dec jecxz pop mov (bad) sub in inc sbb std lcall lret fcoml aaa mov cmpl bound rcrb clc add or dec cwtl or cmpsb addb adc dec fild (bad) mov cmp cmp sysret lret aaa (bad) mov cmp dec ds or dec das stc adc dec jp inc push popf inc or pop outsb pop mov orl push xlat add jge imul xchg les cmp lods push xlat xor push stos mov shll ljmp inc mov push out rolb rorb enter lret sbb jp push xor cmpsb insb loop add inc nop sarb push mov adc jecxz mov div mov jg insb adc lds scas loopne xor xlat mov out jns inc sahf push inc mov movsb out sub sub lock mov dec sahf or jecxz movsl cmp lret inc aaa subl inc xchg out adc leave jmp stos or adc mov imul push mov dec add aaa sub lods mov add xchg xchg cltd push and je or out in sbb or mov subb sarl or inc and inc cmp cmp or lea mov loope lahf adc and push and dec sbb and mov add sub fcmovnb ret popf in enter sub scas rclb mov movl mov mov mov mov xor pop mov add push xor cmpsb aam ss xchg inc add jg movsb inc pushf cltd xor mov fsub test subl cld and sub jg in insb sub lea sub in ljmp mov adcl testl xor daa nop cmp gs sbb inc cmp repz iret mov fstl jg dec add daa insb aam add and loop faddl push cmp lods or popa dec mov pop cmp insb sbb cmpsl mov or std daa clc ds jnp in push imul push nop sbbb outsl (bad) jns movsb int into adc loopne add cmp inc pop cmpsl jnp cmp add xchg test (bad) mov push xor mov adcb or (bad) movsb stc add int sbb faddl pop insb push enter outsl cmpsb pusha fsubs xor and xor cmpb add test xchg roll out out repnz jae add mov adc cmpsl out sbb sub push cmp incl mov xor mov xor xchg inc or les mov sub negl cmp push jo or pop aaa shrb sub nop sbb cmp jl jno adc pop lods lods sbb movsb loopne pop js in aad pop mov in cld cmp fisttpl cmp cmp (bad) or jns les in lds xchg mov out push jge push les sbb jle adc mov sub ds outsl add xor push rcl aaa jns movsl int3 xchg js ror and and movsb and inc adc arpl movsl add ret jmp mov xor rcrb cmp lret inc xor fimull sub loopne xchg add ret xchg and push (bad) pushf sahf add lock xorb lret mov aas imul lcall and (bad) cmpsb mov push dec es cmp sub adc inc int3 outsb adc mov add pop mov or rcll mov lret or add inc lods xchg mov add mov mov test sbb push sbb lcall frstor xchg test jns sub xor ret mov fdivrp push mov aaa out imul cmp nop jle and dec rclb adc mov mov mov outsb fisttp mov mov loopne cmc lds (bad) cmp insl outsl mov test push lcall dec add pop push sbb jle or xchg push inc mov add cmpsl cmp inc pushf push push mov mov ret loope jp ret fadd mov add rcl hlt add sub adc aaa jecxz mov add and mov mov push and xchg add push mov xor (bad) push jg (bad) dec les out xor mov dec jl jbe pusha cld movsl mov cwtl mov cmpsb sub ljmp inc and add jp hlt jge pop mov rorb inc xor jg lock push xor and push xor push dec ret ret jo jne lret stos aam mov add dec xchg xor push push jb ficoml movsl lods fistpl mov (bad) cwtl and stos sbb out add mov in in mov xchg fs cli or icebp add mov mov or fimul cmp imul pop seto mov and stos js add cmp or mov lahf jmp adc cmc mov cld imul leave test popf ss mov mov inc jnp mov adc sub cmp push cmc lods inc xor pop or lods pop jo,pt prefetch clc or sub es inc and pop pop xor fwait fs lahf add push in xchg les inc sub movsb (bad) xchg push shrl adc push adc sbb aaa inc je fs sub mov dec pop and movsb pop ljmp mov adc (bad) and nop cwtl mov mov mov adc (bad) repz and xchg mov dec femms jo popf jl fsubrl or imul popa mov fstl dec movsb out push add sbb add shlb sub js xchg xor add adc in sub or add insl dec (bad) adc push addb rcrb jb int3 inc add test push loope cmp jmp iret imul aaa mov mov jbe sub test push mov push test sub inc pushf (bad) (bad) adc push mov scas sbb fisttp add mov push xchg insb orl ret adc loopne jb pop mov add xor push sbb xchg les xlat pusha inc mov inc (bad) adc fdivs mov inc mov add push in add test dec js cwtl rcrb ret inc cmp cmpsb push sbb mov mov inc rcrl sarl or mov add mov push pop or mov pop pop mov scas sbb sub jbe inc gs xor add sub sbbl and cmpb mov int3 sbb xor inc ljmp in mov out lods add and sbb imul add rolb ret mov adc mov or add xchg pop nop aam and push aam and movsb inc xchg add mov adc sub loop cmp js dec lcall xchg in fimul test add stos bound pshufw rcrb xlat popf pop or adc lods add xchg sahf sti int cmp shlb (bad) movsl fcomps adc outsl test (bad) mov movsb jg mov out cmpsb jle pop xchg jecxz faddl adc mov jnp mov jne xchg pop jp loopne mov add sub js jmp jle inc sti outsb rorl test push or jo xor mov fistl add popa outsb loop (bad) sub sub fisubl loopne inc sub push insl dec lods xor pop sbb sbb jb lock xor shlb mov outsb sub sub popa loope mov enter repnz jmp int movsb and fwait mov xor movsb cmp mov int adcb stos divb dec add jns inc sub mov lahf push or test push or loopnew aam (bad) (bad) nop andb mov or out mov and jne jb shrb test add jns mov or jecxz loop or dec mov pop push mov jmp sub hlt out jnp add (bad) or scas dec imull fcomps addl loop ja xor movsb hlt js mov test sbb adc or mov in mov lret test xchg out xor orl xchg add cltd sub fadds xchg clc sbb cmp loope test mov sub inc sbb xchg movl or push or enter xchg sub in dec test pusha insl lcall call jecxz lods jb add lods cmp fwait inc stos (bad) in add push or stc dec sub dec call dec xor mov push adc enter enter add mov rol or cld cmp mov mov inc and jo mov sub mov movsb (bad) outsl cmp pop sub pushf and cld mov mov add sbb adc (bad) loopne or lahf mov xchg enter mov sub jmp loop pusha addr16 dec sbb ljmp dec mov jo in adc dec inc lods xor fdiv sub sbb push fimull dec pop testb inc (bad) mov and call jb (bad) xor dec cmp jmp cmpsl inc enter (bad) out mov clc enter or lock lcall cmp ja mov sub and pop mov ficom push pop dec pusha (bad) lcall cli out jbe or sbb cwtl or nop cmp cli push xchg and enter stos sbb int3 push in sarb (bad) and pusha xchg or jp dec test pushl es cltd and lret xlat xchg in jb sub in mov (bad) sbb push dec and xchg and and cmp pusha jp subl pop adc sti cwtl mov lock jno test adc lea xor jg mov aaa jns rclb cmp jno adc movsl push and xchg dec sbb loopne cmp push xor gs sub leave int3 mov jb call jno rorb mov mov sub test add ret sub rolb (bad) lock pop ror mov and or mov inc or push or inc sbb test pop xor jno push cld adc and push dec shll adc xor adcl mov jnp inc mov jg add jno aad or subl flds add adc lcall (bad) xor (bad) lcall fisttpl sub xchg daa ja sbb orl dec and mov (bad) push jo cs or test cmp xchg pusha cwtl sbb outsb sub and xor jno xor scas dec cmp (bad) sbb les (bad) imul push popa push nop int fnsave or imul (bad) test icebp repz pop xchg punpckldq inc and cmp repnz enter stc or int3 cmp mov xchg cld popa pop xchg cmp dec mov lret repnz mov aam inc inc clc cwtl bnd xchg or fs push pushf daa mov (bad) mov int3 jg ret jp ficoml sbb dec pop sbb pop ja in push and clc or xor add push inc lods sahf movsl add push sbb sbb jbe lods jg sbb sti les jl aas pop popa mov fwait enter repnz jo jle mov push and je xchg jne sbb push add cmp xor test jmp cmc mov inc daa into dec cwtl clc cli stc jl and das adc (bad) (bad) sub div or pop pop aaa aam xor dec xlat arpl (bad) icebp jns xorl enter test fsubr movsb rolb adc lods and sahf push jl das pop push mov xchg data16 fcompl or xor arpl jg lods push xchg shrb inc ret push lret movsl mov cmp popf sarl push les leave jp mov and sahf mov add mov push push les cmpb icebp test divb addr16 mov jge or inc jg inc les in mov add insb fwait push popf jmp out adc cmp cmp hlt js adcl or inc mov or in adcb xchg ljmp gs leave mov add xor test aam or and cld test scas push push push sbb sbb daa inc int3 push add imul mov jecxz inc pop mov adc push push aam add fwait adc and sub movsb xchg mov jno add mov pop les jne fcompl xlat dec xchg pop test mov add cmp orb and jle add (bad) cmpsl add adc sbb pop pushf add add mov mov sbb mov stc insb jmp mov pop rorb mov mov inc lcall mov mov mov pop jno dec cmpl xchg push adc ret nop or clc aaa subl inc pop jo stos cmpb jmp pusha mov dec sbb insb insb lret and fs lahf out lock adc jne add jbe aaa or nop mov jns add xor sbb and pop add mov or imul lock aad outsb and inc or pop lret nop enter push loopne jmp fadds xchg icebp outsb add adc or adc jne add movsb cwtl sub lret add mov mov popf dec mov push dec cmpsb leave icebp or lods sub gs sub frstor add sbb cmp arpl fisttp lea les add push jmp and mov add jge xchg add into mov lret or xor push in add cmp jo inc add adc mov add test pop lret test popa inc xor faddl call rorb js jne cmp push pusha xor sub push out (bad) jno repnz push scas or loop add jp add out (bad) xor fucom lahf xlat sub fnsave and adc xchg es jp jo add (bad) xor inc mov popf sbb into and pop mov divl cwtl daa call test jmp inc jbe fildl sahf sarl mov mov leave ss cmp daa mov xchg das or xor and leave mov mov mov mov push sub add adc (bad) fadd pop mov enter inc or dec rcl loope mov pop lahf xorl adc data16 stc mov sbb rolb mov out sub push add adc mov or lahf (bad) cwtl test push notl add rcr and lret xchg icebp movsb jo mov or fistpl or sub (bad) sub sub nop fdivrs jmp test adc mov addr16 inc ljmp sub andb dec scas mov or inc test or add dec adc adcl repz test sbb outsl lcall clc pushl and cwtl mov test push mov and mov stos rorb push mov add sub push in sbb out inc xchg imul mov mov sbb or mov add sbb mov mov cwtl out (bad) loopne sti js stos out in xor aas dec ds (bad) aad and ljmp add cmp sbb (bad) clc add dec push xchg mov pop and dec and cmp cmp push es push clc loope sarl leave dec and and jecxz adc mov cmp aad pushf pop (bad) std popa xchg jge push jns cwtl out adc add xchg fadds dec nop nopl lea pop lods incl jg mov cmpl nop sub mov cmp dec dec jo xchg sarb adc xor mov inc mov xor dec adc xchg nop push les mov dec mov pusha loopne dec mov mov dec jle and and rclb sbb (bad) imul clc das sbb lcall xor ljmp ret dec push stos push pop mov push sarb sbbb xor rol bound outsb inc mov mov aam pusha sub pop iret and xor jns loopne js xchg mov in xchg fdivl (bad) ss fwait shlb movsl xchg lods or insl inc loopne rcrb rolb xor jae out mov inc sub and sbb cmpsl push enter pop sub (bad) popf jmp jl mov jne call add pusha (bad) fidiv rclb ret mov sub ds sub mov bound sti and popa jno sub mov lock or dec or mov dec les sbb rclb dec add data16 in mov outsl sub call rclb loope jnp fs cmp mov push add or mov pop mov outsl pop push push jl xchg jae in ret aam out ss adc push mov pop imul push dec dec mov ss add xor aaa push mov add mov jnp cltd lret sbb push leave shlb cmp pop mov rcrl push add sbb jle dec cli pop stc insl les sti add jae pushf aad cmpsb jo push loopne jp inc call (bad) or test in cld rolb cld jno sahf les push xor test (bad) mov cwtl mov pop loopne sbb push test leave pop leave lret cwtl ret jo xor fsubrs out add jmp inc cmp xor clc mov dec clc les sbb int addb cmp dec cli sbb (bad) cmp stos shrl sub push ret flds cmp je xor xor es stos movsl mov mov push add sahf hlt fimul xchg mov out lahf sbb add std xchg ret lret sub test dec loopne add (bad) mov fcmove popf sbb ret int inc stc add aaa cmpsb push or inc pop mov out push sbb xor cmp cmp es mov movsl fstpt and mov lahf and jecxz adc mov adc pop push rorb imul ret leave clc sub sbb xor mov (bad) cltd fdivrs dec cltd movsb jp pushf leave push jo mov nop sub das int3 clc mov outsb mov int3 add cli movsl xor xchg inc cmc aam sbbb ret clc js out xor rorb mov mov mov in sbb popa insb and inc jo cmp sarb faddl xor in sbb xchg add xor stos sti mov fadds cld cltd insl movsb inc call das sahf gs pop and cmpsb cmp aad aas xchg pop in push ror cmp xor sbb cmpsb dec adc into adc das sbb pop pusha xor mov ds movsb loopne add inc mov mov xchg (bad) cli mov test sti cmp lods cwtl (bad) jecxz add lahf sub add add lock test in xorb and dec inc sbb cmc and sbb sub adc add inc mov push mov mov cwtl ret sbb in sub or add lcall in or xchg ret stos int dec push push and clc dec pushf sub loopne fsubl mov pop shll mov inc in or mov add jno dec xchg pop hlt (bad) push dec in or insb cmp add pop fistpll mov mov addr16 fsubrl pop add fmulp pop push lock add pop loop fs sbb aas pop adc add push aaa mov or mov pop hlt mov cs pop jg cli cwtl add jo into in dec in add test inc es pusha stos add ds or pop mov push push inc bnd es add sbb rolb inc pop cld add xchg mov js or pop testb test in dec jg add sub sbb jl pop mov test std rclb mov sub stos and add push mov push push mov popa in movsb sub fmuls lldt in std bound cmp push push sbb xor movsl inc test (bad) mov mov mov mov cmp push add lahf mov xor pop add mov jbe test cmpsl lret pop mov ds add or cs push imul adc lods xor dec pop jns pop sub sbb sahf ljmp rclb cmp les adc adc add or (bad) jmp les cmp sbbb add dec out mov mov inc rolb aam dec or push or fcoml (bad) mov add addb jge jbe clc add (bad) into ss or movsb nop adc jle add jp aaa inc sub and xchg imul mov rolb adc shr mov push pop mov dec push mov and pusha movsl sbbl xchg (bad) aaa fcmovnb mov out icebp sbb and aaa add xor mov and fcomps adc and mov adcl mov mov pop mov nop mov mov cwtl testl sbb cli les mov xchg rcr ss add cmp (bad) shlb xlat dec call cmp cwtl adc je rol imul negb and loop (bad) (bad) cwtl inc sbbb xchg icebp add inc movsb mov mov xlat mov mov jl dec adcl sub cmp out add inc dec cmp and lock push (bad) dec aaa inc xor (bad) jne or inc xor cmp bnd and add jmp cmp aam pop mov sub sarb push nop mov lods dec inc mov scas xchg bound stos in jo rcrb or add int3 (bad) mov loopne adc insb inc mov jl jp push fs and add push mov mov (bad) add and mov pop xor adcl push aam add mov mov dec lahf lods add enter xor outsb lahf xor pop lock inc or mov jns push mov add les ljmp sbb das ret int3 fsubrl xor mov leave fstps push and mov aad out test mov sahf ret std call decb mov mov sbb add mov sahf cmc addb js sbb mov ds (bad) mov push push jae or cmp into push clc gs ss xchg inc movsb adc mov inc jl inc sbb in jge adc or mov pop sbb inc mov add imul insb (bad) test and outsb sub (bad) ljmp and dec xchg rcl sahf (bad) std add xor loopne xlat loop imul adc inc test cmp rolb inc push das mov shlb mov mov aad dec (bad) icebp cmpb push fbstp fsubl mov mov test insb (bad) cmp stos sub jecxz mov jns add mov add push xor loope add cmp sbb clc mov xor mov (bad) inc dec scas xchg ds stc or fcmovnbe push jle out jmp xlat scas mov shll fild or and or add mov push data16 orl sbb jecxz jnp mov ret inc inc dec cmpsb pop insb pop imul fnstsw pushf adc out movsb or test or add int je (bad) pop sub cmp fcmove and jb lds adc cmp dec imul mov in adc int push outsl inc in imul add js imul in sub popa add inc sarl pop add lcall out outsb xor daa aad jmp dec stos addl inc scas jg js in add adc cwtl aam jecxz pop mov pusha das sub cltd popa fs xor add and add iret in adcb jl and pop orb insb jmp loopne mov xor add inc ffreep sub add push insl sub call push idivb adc (bad) jae jg mov loope movsb mov jnp add (bad) dec sbb and cld jne inc fs mov push or hlt rolb add sub cmp out push pop xchg std rcl add gs (bad) mov loopne je add lahf out xchg inc mov (bad) or loope cltd add push push sahf xchg mov adc loopne std add pop jp push push jle push xor out idivl imul rclb xor adc push xor push adc add xlat ss jecxz (bad) sbb push dec push bound xor jbe aam jle imul sub roll (bad) fnstsw test pop sbb movsb mov jecxz das and stos cmp push inc or rorl fbld and in sbb push mov inc dec lds fmull xor inc ds jecxz xlat add xchg jbe push sahf push sbb pop lea cwtl or stos xchg in hlt test pusha movsl sbb xor add test cmpsl dec dec movsb js das cmovo sbb enter stc cmp aam adc dec test and add lock dec sbb jmp repz mov loope in jne nop pop add in pop mov negb pop icebp sbb loopne popa out jne sub xchg addl enter dec jecxz insb adc push add mov dec adc enter adc pushf or inc push inc mov nop scas fstps decb dec adc fcomps and es orl mov jb enter sub xor dec pusha add pop imul das pushf (bad) push cltd xor fisttpl push jns pushf (bad) mov out enter cltd cmp comiss lret outsb out incb mov pop xchg xchg test data16 inc lcall cmpb mov push daa and out inc mov inc cwtl add xor add adc pop xchg pop push das pop subl (bad) and sbb adcl test loop sub movsb cwtl cmpsl add fstpl (bad) orl lret xor adc mov mov (bad) adc dec push adc push mov cld in push int3 cli xor stos xchg mov imul out fs inc test loopne ss out inc and add or pushfw test scas loop ja mov xchg push push jae push pop je lcall or or cltd mov sbb outsl push lcall jo add das xchg jle add (bad) call adc jl push mov pop xchg in push dec xchg dec pop inc sti sbb enter xchg lret out or inc and and push jae pop sbb imul dec subl xor jl xchg lock ss mov pop fs sub shlb nop inc addr16 mov mov in rclb mov sbb nop int3 stos push stos dec inc loop pop les fidivrl jo or dec movntq out outsb rorl fsubrl pop aam pop subb cwtl test and or mov pop insb dec jge push jnp inc jmp or lcall enter cmp loope sbb cmp leave dec add data16 xor loope daa push xchg ret cwtl test pop pop negb pop call repz mov insb aam ss push (bad) les push sbb xor mov lea enter dec ret pop imul push add out mov lahf pop jno in icebp push clc daa stos cmp dec aas in xchg loop (bad) adc sbb jg pop sub push inc jge inc sbb dec fdivrl int3 icebp adc add mov sub adc push inc insl rorl inc lret lock loopne fmuls sbb push xor std inc lgs adc jg in push int3 cmpsb xorb add push test imul add bound (bad) jge add es rcrb xchg pushf mov add dec mov shlb lcall (bad) mov xor (bad) out punpckhbw mov adc pop and loop sub leave xor rclb mov and addb or dec and xor mov test adc lods subl inc mull pushf push (bad) push in mov xchg xchg call subb aad xchg shrb pusha pop pop dec test scas xchg mov sub xor sbb sub add mov int cwtl insb (bad) sub movsl das out ret sbb xor xlat js add pop pop loopne lcall stc mov in sub and sbb orb loope lock nop add mov fimul add int3 pusha inc add repnz jge arpl jbe mov dec xchg mov inc jl or mov dec adcb mov mov adc faddl fidivrl push or or and pusha pop cs pop adc sbb jbe ret in hlt mov xchg jnp popf pusha lock adcl xor lods imul sbb push hlt lcall int3 sub mov sub (bad) sub or rolb int sub mov fs bound je call mov stos pusha cs test (bad) cmp mov mov cwtl add clc test mov push test stos jmp movhps push dec push into cmpsl push or ja or inc xor inc xlat jnp aad aam fnstenv jmp movsb sarb call shrb roll inc and jp add pop loopne sahf scas (bad) out clc inc data16 push insb push push and (bad) ljmp pusha mov lea sub mov jg adc adc or pop out (bad) sbb (bad) rorb stos notb in dec js and movsl jg push and sub pop or ret nop es or pushf inc fmull mov test jmp addb jbe adc call (bad) mov pop subl add mov xrelease or cmp push fsubrs add mov fs or leave xchg xor adc call mov ret mov push andb (bad) clc pop cwtl addr16 cmp xor add jnp flds push push rolb or pusha add int arpl les add mov mov jmp add lock test and lods mov test popa mov cmp pushf lods inc cmp cltd and mov mov mov shlb movl sbb jecxz rolb cmp enter cmp ficomp test xor out (bad) or cwtl js mov sbb test or fsubs xor das (bad) loopne pop add jbe pop xchg xchg and addr16 cmp xor (bad) sbb cmp pop sbb fadds lock cmp data16 mov ror mov aad jecxz arpl (bad) mov (bad) flds cld cltd test mov sub cwtl (bad) mov test cmpsl (bad) push dec cmp rcr push mov inc push push mov push inc test pop xchg out in adc push (bad) xor pusha xchg cmc outsl jns shrb xchg xor xor shl mov sbb inc xchg pusha adc call rcll cmp ss inc fnstenv cmpl mov sub mov or mov pop neg cmp sahf pop mov dec (bad) mov and in lahf sbb repz mov sub sbb (bad) push inc (bad) xor dec aad lahf or push adc jns jp daa sbb xchg push sarb lock (bad) loope sub nop movsb add lds popa cmp cmpsb and jns lods rcrl rolb call xchg xchg pop fcoms rolb cmpsl mov pop into mov (bad) dec mov mov dec jp adc jns mov push xor fwait sub sub mov iret jo push mov fcoms xchg cwtl aam adc fisubrl popa sbb adc jge xor aad push popf cltd push bound dec mov mov mov jno in sbbl add loop or or or sbb ja loopne mov or pusha mov and lret jl sbb enter or iret js out or (bad) or add cmp and nop pop aaa gs mov inc sbb xor xorb push push js repz push mov mov mov popa into loopne pop (bad) loopne call sti sub xchg inc imul bound mov or clc (bad) jo insb les pusha mov out bound test rclb mov test xor int add mov mov out sbb adc adc cmp popf (bad) pop xchg dec xchg (bad) xor jns inc insl jne push adc popa in jg ret xchg add fdivr sub nop in push stos and cmp imul xor pop dec cmc loope mov xor dec rcl sub inc and outsl das mov icebp pop je insb lods cld jne adc add jp cmp xchg in push inc mov adc cmp xchg mov cwtl xchg cli int test scas push das scas ret mov ret fcmovb fs jmp ss or cs pushf fistpl xor pop inc xlat xchg imul call imul xchg daa sbb pop xchg sbb fucom jl in jecxz mov roll sti mov xchg add lcall cmp sbb pop pop repnz scas fisttpll adc scas sub mov sbb sbb mov aad (bad) loope xor and (bad) cltd test mov and pushf push daa fistpl dec sbb fs int3 faddl sbb stos mov ficomp or clc iret xor xor add xchg inc subb out or rdmsr mov (bad) mov xor add lcall fmull fisubl dec insb push mov cwtl pcmpgtw mov jp mov push pop pop adc bound in dec in rorb in inc cmpsb test lods testl std adc cmp add (bad) or and push loop movsl xor xchg add (bad) sbb adc xlat dec add jmp incb mov lods pusha shlb xchg arpl add xor out xchg pop add xchg repz cmp sbb pop push push push inc rorl fildl inc jl cli hlt sub (bad) xor inc add and mov cwtl ret repz loop sub pop mov (bad) jae jp and fwait adc jo adc lahf xorl fucomp mov arpl push call adc aaa xor test dec jne call jo jns xor cwtl dec add cmp ljmp mov pop adc fild dec jo movsb adc jae (bad) subl cmp ret mov sub cwtl fsts in testb jg xor adc mov pop sbb or xchg and test xchg adc push inc push loopne and jecxz icebp mov dec lods jmp rcr jae add out scas repz jo push mov in (bad) pusha sbb sub data16 sub movsb dec push xchg inc jne inc mov lret dec jno sbb jno add scas cltd lret into das and pusha jns jge sahf xor sarl add mov es nop xor sub add add sti jecxz test mov dec lods mov sub and daa es imull adc arpl jae pop nop mov es adc test xchg inc pop xchg mov push or xchg aam cmpsl lock insb sahf dec or nop gs push (bad) xor repz inc sub push xchg xor cmp jl sub pop in pusha mov xor xor into daa mov out mov arpl sub sub xchg js cwtl adc js fwait add enter mov (bad) push and imul fsubs adc cwtl enter imul jo inc mov popa pop insb clc and fadds cmc xchg adc pusha (bad) adc call push (bad) test in ss mov add pusha sbb mov lock in xorb rclb jns (bad) arpl call loope push pop mov jns cwtl test fsubl push in add xor and jo or insb imul in loop or adc xchg mov test mov in mov imul call jp add arpl lret rdtsc in or into dec (bad) mov mov test xor cmp arpl jns or outsb inc nop jg mov enter and push insb adc mov add pushf data16 pop insl lcall inc mull call push lods cli out xor cs adcl jge cmp enter pop fnstcw sbb sbb add jne lock (bad) sbb and pop int3 push xor pop lret jae cmp js gs aam call jge rol mov mov sbb cltd hlt and inc lods mov shlb inc enter or in repz inc fldt jnp insb mov mov leave adc sbb mov cltd inc xchg subl jb lock adc jl xor sarl mov and iret mov xchg orb ljmp jl pop test dec pusha cwtl xor or (bad) mov push sub aam lret (bad) hlt pop adcl leave std movsb push nop mov into dec lds fdivs popf pushf dec mov mov mov and mov mov xchg xor nop jo mov add rcl add mov scas jnp xor fwait dec inc fidiv xchg jp adc sub sub popf nop or sbb in jge pop imul rorl movb test sarl std ficom fs movsb add sub and mov movb out jns inc loope rcll xchg out add (bad) mov nop rolb cli inc add mov or sbb pusha dec data16 dec mov andb aas test fsubp incb and adc fs mov loopne mov faddl mov aaa add lods cmp or data16 mov and adc and lret lret rorl and movb pop ret nop push mov neg or inc cmp xchg nop add xchg popa push mov dec xor mov mov ret out cwtl mov pop sti mov push mov and add push (bad) jecxz jmp sbb aad and inc aam mov in or sub (bad) xchg adc out shl inc add loope fist adc mov mov xor icebp mov mov jne lods mov sbb test xchg pusha lcall sahf xchg and jo test adc mov dec aaa aam or or test outsb int3 clc icebp mov mov rclb sbb dec pop cmc inc sbb mov out jl stos sub outsb lods cmpsb and movsb cmp fsubrl scas int3 or mov jb add mov inc add lcall dec cwtl insl mov hlt cmc imul pop cmp das les inc (bad) jnp test xchg cli in sbb inc jnp add scas les jns add push xchg dec cmc cmp add pop push mov scas mov xor std enter add call dec dec insb inc mov xchg sub add cs xor and pop add cwtl fistpl jp jne lcall ficompl outsl ret fisub mov fsub (bad) sbb imulb mov testl mov mov jnp,pn dec dec pop into sahf insb and loopne xor cmpsb adc pop push mov xlat add out jno psrlq stc inc cwtl outsl in sub dec ror inc pusha adc xchg and inc mov mov dec inc in jle or subb pushf adc in mov or stc pop xor cwtl jb jo lock (bad) mov cmp inc jnp arpl mov fcmovnbe movntq sub jns mov mov mov and jne,pt lds add div mov adc jno cmp add xchg mov cmp push add imull andb and sub sbb in sub push popa xor mov daa adc (bad) push cmp jge or sbb test enter add xchg je (bad) fcompl mov xor lds add iret push out add push dec enter sbb or push outsl pushf or rorb lock mov es and jecxz mov fs and mov call in mov lods pop outsb sub fcmovu dec jo test jl aad test sub ret add sub scas pop add push fsub push sbb ret push add inc jp and (bad) repnz shr (bad) push add cmpb push jecxz push mov pop out dec fild dec jl pop sub pusha adc mov sbb addr16 jns and xchg gs jge lods and push jp movsb pop fstpl mov jns dec add sub adc pop adc lds push push pop inc ljmp lods leave dec cmp stos pop push data16 jo fpatan mov icebp icebp push (bad) in jns popa scas sbb js fistpll and in mov xor add sub lea scas lret flds test xor ficompl rcll js adc and enter lahf movsb cmc pop test sub testb popa cmp outsl es mov jno xor xchg aas or inc jl dec fdivrl pop stos enter xchg push (bad) xor sbb inc fmul mov xchg nop adc push inc andb mov mov push add out and dec inc icebp sarb xchg or mov jl fdivl or mov push adc adc push adc xchg add jne fs mov daa lock mov add and and out push push jg sub fs mov ljmp addr16 pop mov add mov loopne das jae shr addl shr fdivrs lods orb rolb adc ljmp rorb or js sbb inc (bad) arpl fs scas repz add mov jl xchg hlt add aam jl or cmc leave les jo xor xchg das add add fst or dec or shlb dec pop cmp xor in or cli jb insb sbb popf push rcr adc add sub outsb push sub jle bound mov sub add pop movsl sbb sbb lock push enter scas xchg xor jl stc pop push sbb mov xchg and lods lods sub sbb xor adc mov sub dec xchg dec lods mov mov into out sbb aad inc test je rcl push xor add jl cli mov push sbb lahf xchg ret adc mov jae mov cmp sub arpl leave or fildl add inc ret (bad) jne add clc cmc cmp shlb dec test jmp sarb xchg (bad) mov xor in add jb loope iret xlat nop sbb jno cmp add in push pop rolb dec and lock aas fildl push inc shrb nop ret push out add inc imul inc nop and mov inc xor mov xor add jne pop or call xor inc popf cmp adc in mov pushf mov test cmpsl (bad) ss sti lock sbb nop xlat fwait dec inc js or aad mov into js inc or fldcw sub icebp cmpsb and mov jo test xor push iret jae fs adc and add rcr sub js test sub sub add inc pushf fsubrl imul in cmp pop add cmc inc movsb outsl cmp iret test mov movsl or nop maskmovq testl lahf sub je insl (bad) int (bad) cmpsl mov add push push jb test lea or or adc (bad) hlt sbb das mov (bad) stc xchg cmp out mov mov add iret arpl cs lahf mov sub (bad) pusha adc or enter push dec test mov dec jnp mov movsb push or mov push dec push movsb imul push in in push xor movsb sub pop dec cmp in push ds and xor sti call stos cmp add cmp movsl add or or rclb (bad) sahf mov loopne cmc xchg jo cli xor inc js cmp fcmovu leave add add lcall (bad) je xchg fisttpl adc shll imul pop loopne sbb inc cmc mov out (bad) dec cwtl mov pop ss dec dec mov push or movsb fdivs cmp mov loopne jecxz pop add loope lea out popa xlat xchg mov or push or clc (bad) adc push in in aad orb repz cmc fadds inc pusha mov mov sbb mov dec call mov add shll push jo fs pop call mov insb loop mov lcall add std insb xlat out imul add inc dec pushf scas add and mov push and rol sub (bad) sbb cmp lods (bad) jb add insb add call arpl push xchg mov or pop out sbb xchg sbb or repnz testl dec pushf and call add and unpckhps add dec mov xor in mov push incl cwtl add mov rol cmp pop data16 jl clc nop cmp lcall jmp dec test insb imul mov mov jnp orl mov jg and or out fwait nop enter jo cwtl js mov js inc mov imull or inc and dec repnz cmpsl pop jp or jnp add clc fcomi mov pop adc xchg add in jecxz mov push dec (bad) leave xorb fwait jmp push loopne xchg push clc mull cwtl fisub push xchg nop iret in dec into pop andb daa jnp adc scas test or sarl pop insb push jbe pusha dec dec js mov loope pop out shrb inc insl inc mov (bad) mov adc jae mov or push xlat sub adc jb add in jae or lret pop dec cmc mov (bad) clc je jecxz jecxz jecxz jecxz jecxz sarl cltd or adc lock ds pop (bad) adc test lock arpl lock jae je iret sub movl push cwtl mov mov jg jmp inc mov fadd xor or (bad) cltd fildl pop cmpsb xor mov dec dec test imul insl push out and cmp sbb mov mov das push xor js xor sub lock mov or mov adc cmp test pminsw int and sbb jb jg movsb sub pop jmp sub push jae mov ljmp rcl and mov add inc push push sbb mov mov jb sub and lret orb push mov pop push js loope ret js pop sub movsl in jmp out test iret or inc push fnsetpm(287 loopne test mov push push dec pop out adc pusha sbb mov lcall xchg xor jp adc or scas sub sub packuswb dec pop test dec inc clc jp mov xchg adc mov in and sub xchg (bad) pop sbb mov adc add movsb mov pop dec mov xchg push pop (bad) ficom add pop stos (bad) cmc aad roll imul mov fildll leave push lock jo sub add pop jae sub in (bad) dec (bad) loopne inc test loopne lcall lret test mov arpl icebp pusha sub add imul stos add mov sub sub fadds lret les insb or add aaa fiaddl and lret xor dec inc (bad) inc test fstps dec (bad) ss mov enter dec push xchg cld inc push xchg add push jecxz call stc sbb (bad) loope xor aam sbb or mov jnp push jecxz in pusha pop xor (bad) imul (bad) pop push ja or pop iret sbb push cmp je mov inc pop nop fs inc pop fwait push popf lock jecxz call push faddl push xor es xchg mov aas stos and or adc lret push mov add cmpsl cmpb enter testb sub push movsb xchg ret orb sbb mov mov sbb pop pop and lock dec shlb sbb sbb inc push mov cwtl cmp movsb and addb and mov (bad) (bad) shrl jl pusha inc mov (bad) and (bad) jmp (bad) and mov sub hlt mov adc pop cmc mov cld hlt fstps mov inc dec ret mov loopne jno inc daa xor sub cltd jo pushf aam xchg cvtdq2ps mul sbbb push and aas add ficom loop pusha xor leave inc sbb das xchg and push pop xchg enter fdiv sbb enter shlb sahf mov add jmp pop inc fcoml jmp xor push orb repnz cs pop mov fiadd inc fstl scas das inc and loope inc test dec daa imul mov and mov or adc lret dec mov ja cmp repnz sub inc or sbb xor pop mov inc adc xor in mov iret gs xor sbb imul push sbb dec enter dec adc sbb cltd fdivs or je push dec sbb fs test or push clc add cmp inc movsb sbb and addr16 or inc pop test jae pusha sbb repnz dec sbb pop aas or dec popf dec fsubs push mov test and add push out jge lods mov xor add cmp out pop pop cmp sbb mov outsb loop mov sub das arpl inc mov push jbe pusha clc fcompl clc xchg adc xor adc and mov jno roll fcmovb inc mov xchg scas lods inc sbb inc sub inc adc sbb std test xor adc mov mov mov ficomp cmp mov (bad) mov ror fwait test popf adc bound mov add and add pop mov cmp mov loope lods dec inc push jbe xor push je add sbb sbb add mov sbb push push xor mov and lret addl xor pop test mov shlb push lret add inc sbb sbbl adc subl cmp sbb push cwtl and sub inc adc mov push test lods or lock and xchg or into xor mov sbb jl std or rcl in inc sub xor bound in adc add rcrb xchg push xchg out andl pop add mov sub cwtl adc add popf xchg xchg mov jns outsb inc add jne outsl xchg jl in pop pop cmp push aad scas mov sarl sub xchg cld inc add lock pop fs mov dec sbb add sbb and xchg mov add sbb add insl int cmpsl imulb dec inc sub adc out sub inc hlt pop push add add add imul orl mov fist pop xchg sub stos dec cwtl fcmove mov adc xor cwtl jl fstp fldenv fs mov mov dec sbb dec dec mov mov popf pop and and dec hlt and or cmp cmpsb inc imul je dec push test inc xor cltd int3 fwait andb lret addl mov (bad) call push mov xchg inc sub cmpsb bound rorb rcrl or popa pusha dec shl hlt mov jo lock pop pop fnstcw (bad) jp add in lcall jo and dec int3 push pop movsb mov stc mov mov in sti (bad) fmull clc jg jmp leavew fldl mov rcrl add loop sahf or add jecxz lock or jmp call ja shl add int3 mov loope or out jo test dec into fmull mov cs pushf add movsl daa jge sbb push loope data16 add not inc mov loopne shll mov loop ja and adc enter or lret clc inc or or mov loopne adc je test je fadds bound xor popf jne add jmp sti push jmp or jecxz cmpsb push lods cltd cld or push or out pop add cmp lcall or or loopne aad faddl clc subb rol inc cmp sbb adc sti scas pushf dec mov fwait cmp xor nop add scas lahf mov shlb scas ja sub sbb and or std push inc roll xor stc mov mov inc jg add push (bad) add in and push push (bad) and xor lret mov push jl inc mov cmpsb pushf cmp (bad) je mov (bad) dec lock loopne lret adc mov sub cs js xorb cwtl lock cli (bad) adc adc add shrb cmp insb mov out cltd fmuls add cmp mov add (bad) xchg test dec cmp pop xchg inc imul dec (bad) dec add std inc dec xor (bad) jnp psrld rorb push mov inc push fs out cs jo loop insb xchg inc je sbb iret popl mov out add (bad) dec hlt xchg add sub xorb mov loop add ja mov aad pushf xchg iret lret int3 jecxz scas rorl or jno loopne mov push pop cmp bound add int lret hlt xor in pusha add aam xorl dec dec push xchg int3 roll imul pushf and push sbb push or sbb jle clc inc sub ret scas jns mov dec cmpsl sub ljmp je sbb cmp stos cld pop pop xchg out sti dec cmp mov aaa inc ljmp into mov hlt push out mov push pop int3 and or mov aam movsb ret cmp orl inc mov sbb lds inc or and daa jb dec mov xchg imul or bound add ja mov cld leave fwait subl or mov pop jp inc jmp repz mov and (bad) imul lea mov add subl push outsb add dec jbe sbb adc pop pusha test and xchg insl and pop rcll fs in int3 xor cmp (bad) dec and mov repnz jne ds add scas js subb jns lret arpl mov test rorl sbb xchg and sarl faddl mov lea cwtl loopne add dec dec bound in dec sub dec and (bad) sbb inc mov inc and mov inc rolb into fcmovu cwtl dec dec push or xor dec sub icebp hlt add or adc ja imull in xchg mov jecxz iret or pop mov cltd scas and mov enter call sub pusha decb test xor add aam sub fs int hlt adc xchg jecxz leave test xchg xchg pushf out and lock inc xchg scas push add cmove outsb sbb jmp dec and js mov adc testb imul and xlat sub outsb add test and add mov loope lock cmp dec pop cmp fcompl adc pushaw push pop insl hlt dec xchg add inc dec lahf addr16 adc and daa je inc sub (bad) sub dec ja dec hlt or push xor xor xchg js int3 les jg or dec repz cmp imul in popa mov dec pop shll xor xchg hlt out addb mov mov stos or sar mov or cwtl mov inc inc cbtw push shl (bad) out xor or xchg adc mov cmp sarb inc inc inc mov andl jne sbb mov xchg dec lock pusha xor movsb rclb jl pusha mov mov inc sub aam les push test add shrl mov lret out sti nop sbb lock mov je add or je adc or jnp mov pop adc out pushw jb dec xchg loop aad push jl push rcrb or aam fadds mov adc jmp dec punpcklwd aam add or mov es outsb add adc push scas xchg jecxz add mov cli imul in sbb je and cmp hlt sahf sbb fisub inc add dec adcb ret test xor ds lds (bad) add xor mov add rolb and xor adc pop out sbb shrl insb ret mov xchg cli push xchg add sub jecxz cmp aas mov idivl add repz sub xor rcl inc insb gs lret sbb sahf rcl and add daa (bad) adc or dec pusha jp test call mov or outsb mov inc or fildl rolb jb add (bad) pop adc test enter cmp jle adc adc fisttpl push add xor pop and sbb jg jo add fsts pop cmp loop and pop add sbb pop or jo sahf mov sub xor popl inc xchg sahf mov (bad) jle push mov cmp scas sub pop lret sbb jbe push jmp popa shlb or insl cli mov and in adc xchg push pusha mov inc pop add fdivrp ficompl andb inc cmp mov mov insb enter lea xchg hlt pusha and fbstp leave xor pop push xor xor ljmp push xor (bad) xor dec dec adc push mov nop or cwtl lret or add xchg or dec dec pop jae push loopne lcall lock or call in add jbe out lret shlb mov test sbbl xchg mov dec xor push push push int3 jns add or call push iret aaa adc inc fnstcw push cwtl rcrl jae pop push (bad) dec add inc out xor push rorl add iret ljmp xchg mov or inc xchg fbstp cwtl xor inc insl add fwait adc (bad) xor pop pushf dec test add lds dec pusha sbb rol dec je inc sahf cltd dec or and pop addb mov sub push dec pop sbb in add inc lret push push mov add or aam inc mov ds leave loope (bad) lods shlb inc in jbe scas movsb pop xchg data16 jae rcll loope lods sub je xchg and int3 rol sub rcll lahf jp dec xchg jge sub dec cs pop pop and xchg sub stos rorb sub imul push lahf jle add cmp data16 inc dec aam mov xor sub add inc roll fsubrl cli (bad) js or push cmp (bad) add push test rolb in insl out dec adc add into repnz cld xor aas mov insl nop cmp xchg add push dec outsl ds loopne cltd out out lcall fcoms cmp dec pusha mov or xlat xchg adc xor sub mov test lret mov sub push pop jbe incl addr16 nop sub pusha out sbb dec clc push cwtl mov and and out rcl fcomp pushf lahf cmp jno insb push int3 sahf pop add cld sub js and mov cs jnp and fs sub sub dec mov in xchg jl sbb adc cmp test mov xor xor inc mov sub call loop roll pop xchg jecxz pop or xchg xor int mov (bad) jl and mov inc adc aad add leave or fld popf push shl mov dec mov mov call insb push jb pop sub dec pop test icebp sub mov pop cs and pop fwait sbb inc or mov test rcl add xchg and push xchg and jg pop aam aam js pop mov xchg mov popf out adc or call mov mov imul negb mov hlt and cld scas pushf mov xor mov mov pop sub int3 mov xor clc lods clc popa push or push inc cmp xor mov sbb fdivrs inc stos inc cwtl fmull fwait mov into mov mov pop stos mov das stc fiaddl cwtl mov cmp and sahf insb imul inc lea lods cmp mov xchg inc pop sbb adc xchg roll enter add or or repz xchg andb arpl add in in aaa nop mov or cmpsl cltd mov inc mov loopne pusha repnz inc add mov lock pushf pusha in enter call push rolb hlt por inc test imul (bad) fst ss mov pop add push or fwait in jae cmp dec add push xor sub sub and test das pop sub in hlt dec call add cmpsb ljmp and and test pop lret mov and or ljmp (bad) push inc nop iret leave pop jb les mov mov or dec movl nop int sarb cmp sahf sub mov cmp sub push int3 xchg fmul add xor test sub and cwtl push mov lret add mov push ljmp cltd push jl hlt adc loop shl adc mov popf xor (bad) mov sub pusha and add sub test mov rclb imul into cld dec cmp neg pop inc movsb xchg cmp inc xchg push or mov jl test int push pushf mov sub xchg sbb push adc mov mov (bad) add pushf mov cli xor fld adc jae,pt int mov push inc mov insb shrl fcoms and xor cmp push (bad) in jl lods (bad) mov cmp imul leave mov sub repnz ss gs test or (bad) hlt mov lret js add or int je push movsb inc daa push lret in or int lret cwtl in cltd push mov xchg xchg sub adc jl stos rorb repnz cld stc sahf cmp adc add mov loope ds popa je mov bnd adc into cli rcl sub pop ss mov loop aam push mov dec cwtl imul sbb cmp mov xor das scas sbb cmc cmp dec sbb mov loop dec (bad) adc insb shld cmpsb fmuls and mov mov dec xchg dec dec pop fs cld and mov pushf enter lock imul out xchg lret mov pop pushf add mov daa pop dec xchg data16 (bad) pop and int mov inc sbb or test cmp lahf mov and xchg mov inc xchg mov or loop outsb lret test out and movsb and xchg mov mov bound push loopne mov test je dec repz repnz xchg mov push sti and ret orb push sub sbbl test (bad) hlt inc add jb xor subl stos out enter adc push mov and add add ds cmp fwait mov loope insb add aas sub fldt call cmp (bad) jmp push add les cwtl dec mov and mov cld and mov cmp push pop sbb rclb cmpsl dec mov out dec lds dec setle popf adc ja push scas test andl cmpsl add push stos jl movsb test insl ret add xchg add std lods jl push icebp je (bad) enter add enter push jmp ret inc inc push sbb aad and inc ja cmp xchg mov xlat psubsw hlt sub insl orb loopw push and out xor enter jl sub xchg cmp add sarl cld xor dec clc sbb or rorb push adc rorb sbb addr16 shrb push inc hlt test sarl loope jo add mov iret imul test xchg xchg int3 xchg adc xchg and push push or idivl (bad) cs faddp orl lods jb and (bad) movsb mov push mov mov inc jb mov cmpsl mov xchg shrb sub dec xor lods sahf inc xorb push mov inc or xor push xorb (bad) xchg or and out dec sub jb and testb push cmpsl jns add xchg xor andb rorb mov or mov add inc push int3 xchg xor inc adc lcall push lods dec scas cmp outsb mov push add insl pushf sub pop dec jp pxor inc addl sub sbb mov xor sub sub mov rolb repnz inc fdivl cld test pop mov movsl dec mov xor mov mov push pushf cmp sbb dec add push adc int3 shr inc xor inc orb nop call sarl cmp cmp int3 pop and mov out je mov push and stos xor mov xchg loope mov dec jns sub or dec cmpsl adc jl pusha inc bound xor cmp sub and insb push les sbb icebp lret pop pop add out je rclb cmpsb or mov in (bad) dec cmp jle sub mov dec lods aam loope out and pop mov jb sub jl sbb pusha dec mov xchg cli enter stc fldl2t mov leave xchg push lods mov cmp push adc (bad) inc ret add not push lret push mov push in xor add pop sub cs adc in push add push dec jl sbb mov shrb scas cwtl pop mov xchg add inc lea push sbb scas lock hlt cmpsl push mov je clc andl xchg sbb (bad) sbb aaa adc notb jnp adc mov jae outsb pop lea inc icebp mov ja dec add jbe mov cld js ds xor je push pop mov adc add lcall leave jnp xorl pop xchg je sbb mov sarb jne aad ljmp lahf push fdivl es test push cmp fcomip outsb loopne movsl cli add xchg add xlat lcall rcll and mov mov lahf add fstpt insb jns int or adcb sahf jo add xlat scas mov rcrl add jg or mov push push test int3 add lds iret add imul in inc dec push xor int push cmp xor rcl jb insb pop les (bad) int lretw hlt add loopne sub add lds std xor sbb sub pushf inc int adc mov rolb mov cwtl in pushf mov les xchg dec je mov or mov enter add sbb xorb adc push mov dec mov and jbe imulb and repz sub add hlt test fistpl clc xchg ret mov mov imulb jb xlat or adc jl addl arpl call xchg mov xchg push in add cmp jg mov mov loop (bad) xor and push cmp sub fmuls sbb dec adc rol pop int rcl fsubrs mov sub and adc mov (bad) mov dec push cmp aad xor push mov fidivl cld aas ret adc repnz cmpb pop sbb pop hlt inc cmp fistpl dec gs pop jo outsb push pusha loopne push hlt lret xchg hlt adc or xchg gs je mov mov jo rolb shr xor jg loope mov das jmp add or ja add adc jg jmp jo pop iret push pop cmp mov push jle push mov pop shr push push pusha movsl je dec pop jg movsl std popa mov out cmc pop loope inc pop mov push lds or pop push mov inc push jmp sub in out inc and jg cwtl dec and inc cmp ja mul shlb std pop jmp push mov pusha mov jle pushl xchg jno dec sbb (bad) xchg mov cmc fdivp adc pandn ljmp sub pop push dec mov sti stos scas test push sub and outsl test and dec pop cwtl jecxz sbb in lret dec push adc pop pop or cli pop xor pop aam jecxz cmc add mov shll adc jge xor xlat pop add jmp pavgb adc add xor and out push insb and inc sub pop dec mov call loopne or sbb or ljmp mov ficomp decb test call adc sarb popa xchg sbb jno dec (bad) push cmp add inc aam das sub mov jne les lret jmp or gs sub or and cmp xchg incb lret jmp pop sub mov shrl inc ljmp shl adc add add dec push add fwait adc (bad) imul xchg push xchg mov pop adc adc (bad) (bad) incb ret push mov push xor or pop xor cwtl flds push xchg pop hlt cwtl fcoms mov pop pop add sahf adc inc sbb loop xchg (bad) stos mov lea neg inc xlat adcl mov or scas das cmc sbb test (bad) jbe dec (bad) pushf jns pop pop mov jae mov std stos dec jmp lret pushl sbb xor pop dec jle nop add adc jno sbb les (bad) sbb mov xchg inc add frstor sbb adc pop lods loop mov cs pop fidivrl pop add idivl pop jmp mov push add lea fnstsw pop or outsl int xor rorb dec sbb xor movsl fnstsw and call rcrl mov pop adc push test (bad) imul ljmp out popa inc out adc fild je or jo pop fadd call ret pushf mov orl mov ret add nop imull ret (bad) or push push mov outsl cmpsl add or sti jmp and pop push xchg ja pop pop inc jns push pop inc add or cmp fsubp sub adc xchg mov push sahf push pop sub jno sub xlat imul fnop push (bad) push mov inc dec ret pop or pusha and cs sti sahf aas mov aas and outsl add sub xor xchg (bad) jmp (bad) sub add and jg int sub fidiv in adc aas loope cmp jmp xchg pop ds test dec mov push lods leave inc pop adc into pusha movl iret lods pop xor pop add adc in push jmp add icebp pop test cmpsb or stc cmp rcrl movsl sub sub push mov jae jmp inc xor inc xor inc xor (bad) jmp (bad) lret pop dec xor mov loope push add repz push inc mov jmp (bad) xor insb sbb addr16 cltd sbb sarb (bad) or mov cmc push mov ss pop sti xchg inc out sub mov subl pop jmp lret or inc xchg popl leave je (bad) cmp mov rolb sub add add jle repz divl or pop add pop or inc xor mov mov inc push popf jg,pn xchg add fdivrp xor xor and das (bad) and mov orps xchg das add mov pop hlt sbb aad mov mov or inc shr int3 loop push push cmp clc pop push lods arpl mov push dec inc leave aad bound and push cwtl pushf push adc fnop mov ja cwtl add push cmp sbb mov adc or outsl into fwait pop mov pop add xor (bad) (bad) jmp lret push pop xchg mov fcmovnu sti xlat push pop add mov add adc pop imul xor sbb mov jne pusha add in push sub sti push (bad) mov jne scas xor push jl jp add and pop push jmp int lret xor test or jecxz inc push mov lea (bad) jmp insl test or repz xchg push ret add sti dec mov pop sbb cs imul sub clc in mov fs sbb xchg idivb mov push pop dec aas (bad) fldt and mov jle lret (bad) cld jns xor xchg cmp arpl jmp add cli vaddss and and mov inc (bad) aad pusha adc stos cmpsl push dec or mov shl add (bad) or xchg lret movb fbld push rcpps or or jecxz add mov inc (bad) xlat mov push sub jmp pmaxsw test inc stos mov and and push xchg push mov pushf stos dec je adc dec sti fldl cmp push push mov xchg jns bound xchg lods mov dec and push dec test repnz ret sbb cmp ja and push jp test std inc push xchg insb mov sbb mov jno xor push aad (bad) xor movsb and add sub or cmc mov xchg jge dec inc fcomip add lods jbe jns or (bad) hlt outsb or cmp sub and mov jle nop shr in inc sarb adc pop mov cmp and outsl aaa mov mov or jns or bound sbb jp sub cli leave sahf (bad) fnstenv inc xchg test mov push jl sarl sub (bad) sti adc (bad) aaa fs sub add sub daa (bad) jb and cmpsl roll and or sub sbb xchg mov dec loop fdivs dec int dec adc lea xchg push jmp imul loope test jne xor add sub or add sbb fsts jb aaa sbb out das mov mov aas adc add lret clc add aas sbb add dec inc xor jmp scas or stc adc dec push push cwtl cmp pop into repz bound adc lock add mov shlb sub and mov popl andl scas sub in xor mov inc or iret ret xor repz das sti pusha adc mov jb imul loope out rclb and or jmp dec das test ret icebp add xchg push inc cs pop or daa add ds mov adc outsb (bad) cvtps2pd cmp adc sbb sbb add das xlat cmp or and mov repnz add add fnstenv rorb aam inc (bad) xor and or add pop add mov fdivs pusha sbb out dec xor add mov dec jge xlat xor rcrl or lcall sbb jno push ja jmp xchg and adc cs push mov xchg xor add fisubr sub pop push adc dec xchg sbb inc stc jbe mov mov pop add add (bad) add stos (bad) lock pop xchg push nop jl push sbbb sub jmp fwait or stos xor dec xor and lret scas jl or mov es push sbb leave push enter fwait sbb repnz lds ret rolb pop pop mov std sbb sub or nop add lea dec mov imul mov pusha jbe push mov fdivr inc nop jo jns adc and int cmpb das cmp into mov cmp jp add fdivs and mov inc cmp mov je cmpsb sbb iret jo out or dec loop adc std and inc lcall pop nop ljmp mov xchg xor lea or cli adc ljmp push xchg or xor adc push pop pop int jge mov inc ds jge inc sub mov out and pusha arpl fs xor int3 add movsb ja and add cli add ds mov sarb adc stos repnz daa call test ljmp call add frstor sub adc mov cltd (bad) fsubrl or bnd sbb fisubrl xor daa or push xchg jge movsb arpl cmp das or jl mov and les in push mov fstl jbe or es mov (bad) std loopne xor test push sub or fadds out mov daa cmp sahf pushf cmp in inc add jno push mov jne cli fwait adc scas movsb enter xor dec loop inc jo test mov sbb and lods leave xrelease add icebp or xchg shr cmc mov mov adc mov sbb aam and ret inc xchg add hlt pop loop add insb push stos pop sahf add mov push sbb add lock and imul cli jne jg js data16 in adc arpl cltd mov sahf in add outsl and sbb leave dec sub adc jb pop cmpl push adc outsl adc cs sub test push inc stc add jno xchg inc sbb insl adc xchg add daa add add fldt mov scas xor mov mov lret out push or ficompl daa push and stos movsb and adc leave inc ret js rorb sbbb mov xor jno push jl adc and pop aam sub loopne (bad) repz jne fcoms fildl jp mov push imul leave bound adc rolb nop cmp or (bad) int cmp xor inc or ret ja lods stc popl popa add lahf and lds dec pop faddl aam lock bound js pop mov dec or addr16 nop mov addb xor dec xchg and adc or pop inc icebp sub add insl ja add daa and inc sub cmp xor jnp pop icebp jno cltd addb rorb adc and mov add cmpsb je cltd adc enter addr16 shrl and dec and or leave popa dec sbb dec inc xor push push pushf aas or or shrl sbb dec adc pushf add ss inc cltd shlb mov jns mov add mov sub dec jo jbe mov push or data16 enter daa dec vpsadbw pushf cmp mov shll xlat jp push xchg cmc cmp icebp stc sbb cmp xchg adc out shl jp push jmp ret pop nop cwtl sbb mov lods lds mov and test mov adc push push cmp add lods jbe sahf (bad) sbb movsb pop imul xadd pop mov push sub adc add or inc xchg aad das and and cmpsb sub adc sub sbbb lret test inc inc insb outsb add or xor aaa dec pop pusha popa push or or inc mov adc dec and lds test fnstenv (bad) cwtl and xor push adc and test jnp lcall inc call lds nop xchg je sub jp bound sbb enter mov push fidivrl mov sub dec testl or add leave adc inc push int3 insb ficomp and adc mov sub lcall sub pop jo scas andb movsb mov and pop sarl adc and insl sub add push adc in rcrb das dec aaa adc add jl scas sbb and adc das fsubl out adc cmp or std xchg scas or push out nop lods subb stc jbe clc (bad) add adc xchg into call adc dec sarb mov mov jp pop add xor jge (bad) js je jecxz lret xchg add into or adc mov test adc ds pop inc push inc or mov test push js push arpl lods mov mov repz insl je mov sbb rclb cmp dec fsts pop fs sub dec xor sbb js arpl sub sbb pop scas jl call dec push popa xchg add push sbb sahf in cltd or dec or ret dec adc shrl adc and bound sub sbb test add lods dec adc pop xchg and stos repz add into lcall jo adc adc xor jle mov add push inc test adc into ret and push and jle sub or cmp cmp push mov push sti add imul sbb dec (bad) adc mov arpl cmpsb xor mov or dec movsb lods inc xchg pop mov adc (bad) into push mov mov mov xorb das ds (bad) dec and outsl ja add adc stc insl (bad) lds (bad) mov mov and fbstp push cmp daa dec and arpl das mov loop xchg push xchg push or dec or les xchg push xor inc mov aas repz ss mov pop es dec mov pop dec and (bad) mov pushf push dec xchg adc inc dec cwtl and push mov popf or xor ror xchg fdivrl jge cmpl loop adc add out loop adc aad add and dec clc jl,pt add scas pop inc sub jp addr16 loopne je add fistpll lret pop (bad) lds and push inc pop cmp ljmp add push jp add cmc add jge gs jne dec int das out jns scas in sbb xor cmp sub add mov rolb arpl jno pop adc fidiv inc inc mov inc add test scas sbb add shlb in imul (bad) xor sbb frstor jb dec push arpl out mov pop add inc in test adc scas (bad) rolb popa sub fs lods pusha rcrb xchg jb sbb into dec dec mov ja das add xchg or sarb lcall or push lods (bad) push sbb sub subl (bad) cmp and or ss lds mov nop pop xchg cld test sub mov push jb stc and mov push shll (bad) xor pop in data16 inc push jns push arpl cmpsl jnp je mov xor stc rorl mov into hlt mov pusha lret pop and (bad) stos test mull jno inc clc test xchg and incl mov daa mov arpl scas jbe or push inc mov xor inc mov test add stos push cmp xchg cs enter xchg out sub or aad pop es add mov adc ss push push (bad) jp xor in or mov addb pop and add imul fiadd sarb in pop add jmp (bad) sub jae xchg xchg push pop add xchg subl cmovbe movsb mov dec and mov (bad) pop (bad) fxch inc outsl movsb shl scas sbb cmpsb adc (bad) pop inc pop in pusha mov add push ret sbb sub and xlat lods fild cli sub insb adc xor bound cmovo mov cmp xlat pop les mov cltd dec push inc inc rorb add movsb nop sub sbb arpl and fwait cli add mov addb adc push xchg cli cmpsl jb and loop add test pop and add or adc lock adc notb pop stos add jg pop lods jp xchg fs cmpsl lock addr16 mov movsb push out clc repnz sbb push fiaddl int3 add mov fmuls mov (bad) out insb sbbb add push xchg adc movsb add into jb mov or icebp xchg xlat adc cmp dec or ljmp aam movsb or inc cmp xor inc mov fsubr andl or in aam clc mov popf or cmpsb (bad) ror loopne xchg xchg insl xor mov and dec cmp popf push mov outsl inc xlat out push push gs mov ljmp push dec cld leave sub sbb cmp mov dec adc (bad) fistpl xor scas insl pop add push push mov inc mov xor and sbb cmp int3 sbb test xor lret pusha add mov add or jno and sahf mov add aam je das add xlat mov sub mov adc and inc out sub pop push or xchg (bad) or cmp movsb into inc or cmp (bad) mov jg mov inc clc push inc push inc xor add add dec mov add pop pop and mov mov cmpsb in imul rolb ret popa mov xchg callw mov outsb sbb aaa add aad (bad) repz and stos mov and add mov sub fcomip loopne cmpsl stc pop add jne xor andl cli call (bad) lahf inc (bad) ss ljmp test (bad) loop test add add std sub aam rcrb sub ret mov jns add jge adc push rorl or mov lret mov dec cli xchg or sbb andl adc orb mov push cmp inc adc jl pop inc inc mov pop pop ja add sarb sub imul and lahf and add jp cs push mov mov add push leave in inc sbb fcomp js add bnd imul out dec adc xor insb mov xchg movsb add iret data16 sub add es cmpsb fdivs popa inc sbb dec test adc jae mov fs pushf and xlat lds xor and push mov sahf xchg inc add and push cmpb mov mov sbb xorb lods fsubrs sti inc cwtl jnp test add add in mov jle pusha push ja dec pusha sti cwtl pop adc xchg fstl xlat clc pop je mov jp pusha inc in loope mov lock jo and int inc bound lea dec enter push test xchg jmp push adc lods aas mov in sub (bad) leave call cwtl shll push jp sbb bound stos pop movsb add add sub sub push push push adc test lahf pop (bad) mov add mov push mov fimul out xor jb xchg xchg push cmp jo xchg or xchg fmull xchg nop xchg sbb das popf inc or sti sbb inc into xor or into inc roll ret cmpsl in nop push shrb dec push mov sub lock inc adc jge xchg mov jne inc sub mov adc lds (bad) test mov mov fsubl stos and adc mov mov adc pop xchg out int cltd loopne ret mov and daa pop mov jb add dec loop repnz push ljmp mov out repz roll mov add ds je mov sbb pop add or lods dec mov add subl cwtl mov xchg in lea lods pop in cmovge imul test mov stos cmp rcr add enter das and push sub dec int xchg add xchg xor loopne lret jnp sub mov push repz mov adc and ss imul in dec or push cmpsb xor mov dec mov add insb xchg sbb xchg push pushf adc js or (bad) pop mov inc push xor shl test or lods test pop insb sar pusha push jl add ret test in sub sub push int3 pop xor adc jmp push outsb inc ret mov cmp decb sbb aam dec loop or and cld adc pusha imul push lret pusha add clc pop int3 add out addb cmp clc push mov pop adc mov dec sbb into (bad) dec loope cmpb push sarb orl faddl mov xchg sti in add xor cmp jae test xchg rorb les push inc jl sub popa test (bad) and out xor lea push clc jmp (bad) aaa (bad) daa jl jne cmpb gs (bad) adc lods lcall sub dec mov mov addl pop mov mov xor inc pop rolb js lods pop cmp mov add test cmpsl or mov and pushf es mov stos pop pop ljmp pop jo stos sti xorb repz into pop imul ja insl push lea (bad) stos les adcb mov rclb movsb xchg sbbb scas and mov mov cmp jl adcb stc shl add or jo add jge add aas add dec inc or stos cmp in out jge div or lock jne repz (bad) jbe es pop sbb jno addr16 (bad) lods dec cmp movsb lahf adc push mov mov and outsl add js or xor fcmovnbe pop fdivs or xlat push mov xor lret push inc sub jp dec push xchg mov adcb cli dec hlt inc mov iret push jp and inc push inc mov or xor inc add lods jle inc mov arpl fiaddl dec dec adc or leave stc push popf add push insb mov jg cli xchg xchg mov add and mov sub repnz jle test clc decl arpl add das jo sub inc and mov xor xchg mov inc adc jne call mov sbb mov xor mov sub movsb sub fwait or push (bad) and add js pop add pop or add pop and and stos push int3 push orl (bad) cmp dec push mov in outsb jnp or in movsl xorb int adc or pop or push imul cld test jl loopne outsl adc jae or sahf inc xchg add xchg xchg dec test dec and pop mov cmp insl mov pop push sbb cltd add or sar lods subl sbb or inc or xor aam in cltd test into outsl and add daa dec push push sahf sub xor imul and or scas jmp dec mov in lret add xchg mov sbb in in mov mov or xchg fldcw sub jmp cwtl (bad) fstp (bad) or xchg jne push jnp sub (bad) pop cli inc stos inc sti or nop test push pop add pop sub dec sub add and andb ss and or nop lods xchg andl pop lods imul ret mov and orl out mov sbb sbb cmp adc in int mov ljmp add inc mov dec jmp add mov and addb xor and outsl mov inc or iret mov sti sub add and imul adc mov sub lock (bad) jle xchg fs push rcrl jno inc inc mov out add add cld pop lahf jae (bad) je in add mov lcall jle inc lods mov add adc fisubl lods sub lock lods or std or or stc and ret dec stos loopne dec xchg addl lret or inc lret cmp mov insb add cmpsl mov (bad) inc inc lds lahf sub cmp in cmp orl scas jno orl pop pop popf cwtl xchg into sbb add in fstpl inc push (bad) pusha ljmp or mov mov mov jl stc mov mov ljmp mulb into leave adc cmpsb mov addb mov push sbb mov shl push ljmp or jp lret popa hlt mov pop fistpl push push xchg jb add addr16 stos mov daa push push push or mov pop mov lret mov aam sbb pop jle push cmp inc test inc imul outsl bound in adc push adc cwtl add jne inc sbb add inc push push je mov aam aam xchg fwait leave xor fmuls scas cwtl jnp xchg leave inc jno xor jmp out stos dec es aad mov add push push xlat mov jns mov cmc sbb jae jno movsb test push push addb mov dec imul aas insb wrmsr fnop adc push stc dec xor enter push inc mov jne pusha shll xor push push add jno movsb xchg cmp aam and and mov mov test jno dec das or test bound add orb pop enter push and sbb push test mov push fs sub inc push mov loopne jle xor and ljmp add mov lahf inc dec add pop (bad) repz mov xor pop mov inc aad jle jmp sbb repnz dec push cwtl mov mov movsb xor and add (bad) clc push jbe pusha lahf and xchg pushf rcr xchg and mov jnp (bad) icebp add inc daa dec ja sbb xor repz and xchg add pusha pop push pop iret gs cmp bound jb lock nop (bad) popf cmp cmp loopne dec or gs rcl xor stos add or mov cmp fs sbb ret cmp and test arpl jns (bad) in or shrl xor int repz and fsub fst xor sbb repz movsb cwtl sub jl dec and movsl xor nop jo add mov lret jnp mov insl mov pop iret add pushf pop adc xor inc rolb add xchg daa sbb sbb pop xor fs cmp rorl int add in mov in push and aaa or add add outsl xor ss in add cmpsb push or push stos xchg jl cltd sub data16 xchg xor out pop mov dec ljmp imul add or jb into dec es pop aaa xor in fs jnp outsl mov mov sarl clc xor jecxz in xchg je stos bound pop cmp add adc pop stos popa rcrb mov xor and rcrb icebp or rcrb lds testb adc add xadd or dec adc into jge and mov adc mov push add jle loope or pop or dec ds ds cmp and or lock call cs clc push adc cmp jl ss sbb xchg lcall mov lods add xchg sbb and and sbb xchg das in add or sbbl popa dec pop and movsb cmp les popf aad (bad) push jnp sbb in pop xchg ss clc and add in inc mov out pop jge add and sbb or cmp adcl cmp and insb pusha sbb jle addr16 enter faddl lea push pop adc add clc imul pop (bad) fistp jno or sub in movsl repnz push add add cmp add mov js std js or xlat pusha inc (bad) push and cmp paddusb jnp rcrb mov mov scas dec insl in sbb mov aaa cltd out dec shll stos jecxz fsubrl jns fcompl jl sub (bad) cmp fcoms push pop push rcrl loope add js add pushf shrb fisttpll fidiv jb adc ljmp fimul xchg sti sub adcb inc lahf push push rorl mov mov popa popf loope sahf rolb xor popl xor out mov aad sub add fstps add xchg dec push dec repz outsl adc cmpsb ficompl cmp or clc imulb mov fsubs cmpsb shll cmp push dec and lcall rclb out pop outsb or scas dec sbb cli int3 or pop push xor int3 test mov mov add dec push je push inc adc lcall mov add mov cmp shrb sub dec sub mov outsl imul (bad) add int mov and movl inc mov or rolb mov cmc sub sbb ret imul stos repz enter pop adcl cmp pushf test hlt mov or jmp sbb out push out fdivp xor or les fistl rcrl movsb adc rol add (bad) out jmp mov xchg (bad) stos fisttpl inc ss shrb inc push jno push push jo jo xchg movsb rorb jp dec mov push sbb or xchg pop mov movsb mov enter dec xchg sbb push xchg pushf xor and pusha aaa cmp mov add xchg ljmp adc and sbb movsb jno jae sub iret push lcall jbe push sbb xchg ss mov sbb push jns xchg sub adc repnz dec xor fimul movsb pushf sbb cmp shlb ljmp stc inc pop sub pusha xchg or lahf outsb push lock push imul cwtl idivb sbb int inc mov mov jae add sub adc and dec xchg inc popf and adc push and lret sbb xchg subl aaa cmc cmp adc mov fs daa lcall daa add mov fildl adc and addr16 pop dec adc xchg mov inc mulb cltd push add stc xor fisttpl lock add xor jp pushw or sub or rcll call sbb sbb add pushw cmp mov fistpl add sbb cmp jne dec in dec mov jl in orb popf xchg xor mov in imul loope (bad) dec and lret push pop arpl xor imul out mov mov add and mov sbb adc popf and ret adcl dec dec cmp add lods sub icebp and sbb adc fsubrl out rcl inc jb mov jle imul les sbb shr stos mov in jp xor mov sbb and jne adc movl adc addr16 mov sarb xchg icebp mov cmp insl cli data16 ja mov add pop push mov cmp (bad) sub push xchg cwtl push adc mov xor sbb pop leave roll rcll shlb adc cmp js adc pop pop imul xchg and xor loop push add lcallw mov ret mov ja and (bad) jb test sub (bad) ja mov inc scas push pop add call gs lods push add push and add or popa cli mov repnz jns shrl cmovo outsb xchg xor in jae jns leave sbb (bad) adc jnp addb pop aad jl outsb inc outsl (bad) jbe (bad) je fcmovnu dec xchg sbb mov test sub cmp repz das mov rcrl iret sub js movsb cs adc jnp add pop dec ds sahf leave push jb in push psrlw (bad) rclb xchg or dec leave and les fwait cmp jb mov jo or lret sbb push fcoms nop ja adc xor adc icebp push jo cmc adc sarb add out cmp nop adc pop push or out (bad) jbe push dec dec jnp jne push pushf push rcll add sub roll int3 dec ret repz sbb sbb mov inc pop push jbe repz cmp push into std push and dec into jp push scas bound inc cmp dec add sbb mov popa jo cmp popa dec cmp out adc pop out and dec aaa (bad) in xorl xor adc xchg or nop xchg mov cmp sahf inc sbbb sub cmp fdiv imul pop dec (bad) sub pop jge dec mov lea adc jns fisttpl dec inc sti (bad) mov sahf add mov jnp xchg add mov or mov (bad) jge xchg mov xchg mov add test cmc pop mov or (bad) ljmp cmp sub je inc ss add inc add pusha push lret int3 repz mov ret outsl xchg inc popa fnop adc xchg mov enterw out adc xchg mov mov call es bswap mov pop xor inc add push push lods add push nop mov in pop adc xchg push test inc rcl dec insb mov in jg mov jecxz mov adc sub jmp adc add or push adcl bnd pop or mov repnz jno cmp sub push loop inc lock adc and cmp jl bound push iret dec les cmp mov ret inc mov icebp sub sbb jno dec (bad) push push adc fisubr adc xchg mov push enter imul lods jo inc jbe push cli jnp or mov cmp repnz add aam in out aaa mov xor lret and test les add xor sbb mov or lods or cmp gs pop je inc jmp pop pop rclb pop dec loopne xchg pusha out sbb dec pushl in stc loope pop jecxz sti mov test sub imul jne xor rcrl or enter jmp add ret and or aam jbe adc mov sbb mov ja andb and xor pop or sarl test leave cld cld mov adc dec and lods mov mov cld mov mov out aad or or lahf add xchg pop stc subb and xchg mov pop xchg ret stos inc jp mov leave mov push mov in xorb cmp fildll sti jns mov call pusha xor add aaa test sbb jmp addb icebp dec jg jbe ds mov out fisubr aam lods (bad) sub sub adc mov fistl push (bad) aas or pop ja int3 xchg ljmp add clc in lea rorb aas int ds cmp push sbb cmp fcomp mov and test lahf pop xchg mov outsb nop daa in loope jmp add into adc cli orl jecxz sbb xor aad imul dec jle mov and imul xor int3 sub pop arpl push adc sbb adc rorl in cmp xor push pop add dec stc mov and or add icebp dec fsts pusha popa pop outsb pop add jmp adc push call xor jne xchg push and mov movsl ljmp jo rorb adc mov jg adc popf jge ret inc or bound pushf jne fimul pop jae dec std fistp test jae movsl outsl out hlt add or push mov or mov add xor or jg clc inc shrl xor sub (bad) jle dec or aaa into cmp sarl daa pop in rcrl (bad) shll cmp xlat pop inc (bad) cmp jne jmp add repnz sbb clc and scas push pop (bad) fs mulb and xlat jnp int or jns inc push xchg scas loop ret notl xchg adc arpl enter (bad) sbb xchg mov mov xor or mov xor pop push test and jne push inc lcall ja xchg maskmovq imull roll cmp adc and sti mov adc subl xor push test push push gs xor jnp xor push push add sub push sub add addr16 mov adc outsl clc lret sar sub fidivl add sarb in outsl adc xlat xchg push xchg clc add jmp sti mov loopne and push cltd subps jno (bad) and popa aad jl les mov sbb adc dec jae push std nop insb mov insb ljmp mov jnp cwtl mov add mov imul fild xor in leave jno add aaa (bad) repnz rcll dec cwtl shll fadds cmp int3 out or pop inc dec and scas movsb fsubrs sbb loop sbb cld push push data16 loop push xor pop sahf jg in lea scas xor test dec add dec cld jne lock push lea fldt stos jnp fs out lods push add mov jnp sti pop xor cmpsl jne popa es test add fs test mov roll pusha xchg and cmp pop (bad) jb lea xchg cmp push pop or sub popa inc mov ljmp xor or mov js cli jbe inc sub out sub add add imul mov shl dec ljmp movsb jmp dec mov jmp push add outsl mov jmp xchg andb push jg (bad) orl pop mov add repnz out test cmpsb pop popf jge je adc and js sbb or out int3 and dec pop ljmp mov cmpsb or jmp adc out mov or inc outsb jbe arpl push push cld mov inc fdivrl inc stos movsl adc jge and cmovnp adc pop inc lds xchg mov jmp ss cmp pop cmp aas pusha sbb lret sbb mov inc ss lods sub ss pop adc and lretw repz (bad) add pop push movsl push pop push pop jne lcall add xor rorl fs push pop testb add enter vpmulhw jo mov dec in fdivrl and mov pushf push nop cmp iret mov mov repz push (bad) mov jg pop cltd mov loopne add push cmp sbb addps std sub xor cli (bad) mov sub stos mov dec cli mov mov imul add add jne mov mov xchg push xchg stos mov ret cmp jns daa rcl sub lods sbb pop jmp cmp and test in je mov faddl rclb adc fmuls fisub (bad) xor push and dec inc int3 mov push pop sub in popa rol pop pop or incl add scas inc (bad) jle push mov ret jg add xor pop in cwtl jmp adc mov xchg (bad) aas push fdivrs mov jbe loopne sub sbb adc xchg mov and push xor (bad) call imul pop xor ja enter adc sahf cmp pop test into and mov jl jno out (bad) sahf dec insb push push sbb pop lds mov pop and cmp adc (bad) xor xchg addb addl add mov inc mov xchg jb or pop incl (bad) jecxz enter andl push cmp add push outsl push dec cwtl sub xor aas addr16 inc adc ds jbe jl call repnz fstps fbld pop int3 lds push and fcoml mov dec pop out into jmp push ja push pop (bad) jo pop pop mov jns dec fwait adcb addr16 ja or mov (bad) xor mov push sbb idiv aas rorb ficom daa lock xchg fwait push jmp or inc push mov into sbb pop push push add xor je add out std or push inc rcll (bad) jg jge andl fistpll pop pop cwtl xchg xor and xchg lods jg addl and push sbb dec test in ljmp inc pop insl pop daa cmpsb dec adc mov push pop cltd ret outsl xchg mov icebp or shr lret push (bad) fsubs mov loop pop clc fs fstl xchg xchg jg sub mov sbb fdivs and cmpsl pop cmpsb inc ds sub jbe notb daa xchg aad mov pop lods dec pusha or xor xchg call decl and inc or in and ficoml mov lods add popa arpl scas cmp push and add sqrtps lahf inc mov pop rcrl pop enter int or lds call movl out dec push sub out lret and sub sub lods cmp cmc sub pop mov add test mov mov xchg rolb jp stos dec call add repz stos cli fadds lea test leave pop mov cwtl and bound mov add mov push imul xor jo (bad) ja jo out sub dec out adc jl mov (bad) sub push add aam push sub mov xor add lods jge ja inc sub push addl jp (bad) jmp jns cltd inc popf popf fistp dec or movsl sbb fstps push xchg fwait loop testl add rol jl popa (bad) insb in mov push push idivl mov jecxz inc mov add pop mov push add inc mov inc sbb pusha cmpsb popa in push fstps jno lcall daa out lods xchg leave cmpsl and or les jmp iret aad or (bad) jp mov dec inc mov mov lahf push sbb ret es aaa and jno pop js adc jle push mov dec movsb mov das add in sub ja movq mov (bad) mov shl add icebp jmp pop add call in xchg push popf notl push div push das pop jecxz jp jns pop push popf idivl shrl adc pop mov add notb jle or adc ret cmc js dec sub and push and pop mov push mov pushf cmp xchg ret jecxz dec mov mov movsb push pop mov mov cmp add mov adc inc mov in data16 xor ficomp icebp or rclb loopne jbe sbb daa push pop push cmp pop and inc (bad) test mov stos lret (bad) lcall andl dec mov movb sub cmp xorb jmp fcomps mov mov inc push cmp dec adc mov and les popf call ja adc ds add jnp int push mov mov pop xor mov sarl sbb push loop mov sti andb pop mov pop inc aaa scas push xor mov inc clc ja sbbb push aad mov xchg mov les jb divb cmp add add or mov ret test aas ds sbb pop cmp jmp pop jmp lret push mov pop or xor movsl or pop pusha fstpt movsl nop mov lds mov cmc out pop fcomp rcrl sarb leave test xor (bad) mov mov loopne xor add fldl2t dec ds jge dec aaa sbbl push mov dec sub leave stc cmp mov jmp mov repnz push rcll dec jg pop xor fld shrb imul (bad) jp inc pop push aaa mov and sub pop jl xor ret inc popa push divps xor mov cmc xchg stc hlt movsb test add jne pop int dec add inc std aas lret (bad) lahf mov push mov add outsb and jg mov cmp jmp pop dec sub push fwait add sahf rorb (bad) pop add adc jmp shl mov cmp jns jae dec push add fnstcw jg mov cmp or lret test xchg pushf xchg sbb ljmp push mov shll push in inc (bad) jmp inc inc xorb int outsb xor pop sbb jmp sbb pop mov jmp das fisttpl daa aam (bad) and shr pop inc add xor xor pop nop insb xchg rcrb adc pop push mov rorl jne jg add and jge daa imul mov fwait inc cmpb shr dec dec inc outsb add push outsl mov pop cmp lret daa pop cmp cs cwtl xchg and cwtl scas sbb or jecxz adc fildll push ja xchg jg push (bad) mov inc insb dec pop pop scas jle rcll xchg or rorl xchg ja lds bnd mov es push pop repnz (bad) push negl push mov ficomp pop lods cltd sub scas dec push aad dec mov sbb adc jmp inc cwtl pop cmp imul pop in aaa icebp mov mov add push repz xor imul cs cmp insb cli movsb out mov daa push dec loopne (bad) sub jge ljmp xchg cmpsb mov les in pop add inc cltd jae xchg jbe xchg mov cmp mov cs sbb xchg inc jle nop aas cwtl fimul push fiadd mov mov enter xchg (bad) popf push iret daa mov jl inc mov push not cmp bound mov cmp (bad) mov mov nop push out inc cmp les daa jle cltd (bad) hlt xchg xor js addl mov pop add push enter mov enter jbe aas mov lock loop (bad) lahf mov aas pop push lds mov and lahf (bad) mov fs lahf jno fs mov subb add sub add cmpb jmp mov or mov dec imul loopne cmp push push fs mov cmp out aam pop pop dec fdiv pop adc mov (bad) sbb jl outsb in fistp aam pop pop mov mov jo mov test add movsb inc in add imul sub add sub push mov jl or jmp aas mov mov dec xchg das lcall jle sub push data16 mov addr16 mov in sbb or lods (bad) movsl mov or fistp add jne push xchg roll or clc rcl mov push imul push pop xchg ret imul add aas pushf das jecxz test lods (bad) sbb mov mov inc in in lahf rep and sbb xor aas mov xchg push inc sub jnp xchg subl out ret xchg lods xlat jg push lahf push xchg mov or jp nop inc mov inc je rcll dec mov ss loopne sub ja inc ljmp push cmp adc inc or cli xor cmp push jge inc loopne je dec lcall das or out insb popa cmp jae divl fcoms decb or mov aam mov icebp and adcb stos inc mov (bad) cmc sub nop or gs sub add cli xchg rclb pop lret push mov fsubrs lahf pop add ja pop cltd (bad) push sbbl loope and jb sbb mov inc mov nop adc test ret ret cli mov or fnstsw jnp leave bound adcl dec add or sub xlat sub cmp or les stos ss cmpsl in inc or xchg inc add or jnp jmp in adc mov fist rcll mov pop xor in std mov inc add inc rolb dec mov out movsb outsb add test xlat cmp and mov add lods (bad) sti sarb add lret roll pop (bad) or enter lret lret mov mov sub (bad) sbb dec cs dec inc (bad) pusha lods add xor push insb lcall icebp cli cmp mov xor mov orl mov mov push jecxz ficomp push das pushl inc mov ljmp push adc or aas add mov notb push xor cmp jmp cmp (bad) jbe add pop and fldt sub push mov daa clc pop xlat leave mov inc and cmp insb arpl push jmp push pop lods sbb jle fstps or cmp jns xchg ret mov inc push and mov mov inc lods push sbb mov pusha push jnp (bad) or mov sub push nop dec adc iret sti jmp pop test movsl icebp inc mov sbb in add jnp icebp (bad) push lock lods movsb sbb rcrb test add sub scas dec fcoml shll aas jecxz fstps sbb xor mov fs movaps enter push pop cwtl outsl pop jno xor xor icebp subl jmp iret repz sub cwtl jmp shll test adc mov xchg pusha mull dec sbb or adc sub in popa jmp insb mov jbe cmpsl adc xchg adc xor pop (bad) cmpsl jge rcrb mov cmp mov out aas negl flds cs add shll (bad) mov mov test pop dec rcll jno add push cmp or outsb mov adcl into and jecxz daa fcmovbe dec jmp cmp sti fsubr dec cmpsl in and fs std addr16 push fsubrl arpl cmc pop les push mov rolb cltd aam inc pop sarb xchg push pop sub push push mov sub and rolb cmp push xchg out lods or nop xor adc push fucom and add mov pop inc sbb (bad) in scas and or (bad) mov adc fcomps (bad) mov jg neg add jae call mov sub test pop outsl out adc aam scas js xor adc jmp rol orl xor (bad) mov fild sub adc andl xchg mov loope jne outsl add in ret aaa scas pop push fnstsw jae pop xchg pop (bad) jg mov (bad) ret insl inc imul pop stos outsb or jmp in cmp mov daa cmc pop mov int3 cmp jb xor ss push ret scas mov push and shrl fwait mov aad adc pushl sub add adc mov mov ret add or les xchg in xchg lret sbb repnz push jnp cwtl lock push mov jmp shlb jg test jmp ja (bad) jle lret push pop push fnstcw pop stos and push mov inc outsl lods or (bad) pusha mov ja popa sti push divb jle jno push dec mov pop imul enter add jb xchg mov xchg ja (bad) jmp xor clc pusha dec ljmp xchg fst shr xchg rclb jo jg dec repnz mov push add (bad) cmpsl mov loope add repnz cmc cmp dec lods nop push push jmp (bad) mov les lret xor pop inc jae ficomp xchg (bad) jbe push xchg push jo (bad) outsb les xchg sub aad cli mov jae mov stos es cmp or icebp mov sub push (bad) jmp cwtl push mov adc pushf push jge sub adc jp inc add mov jne dec imulb loop add lret pusha push or lock sbb hlt mov xchg mov sbb mov inc cmc mov sbb (bad) enter add fildl push or loopne or iret inc rolb and cmpsb js pop mov iret sarl xchg in inc add fadd jae jle and cmp adc mov fidivrl add push jmp test push pop jns test dec out mov (bad) bound add sub repz loopne mov add ss addb aaa or insb icebp ds mov std push or les jmp cmp inc punpckldq dec jle sub loope (bad) jno stc sub or and push and mov mov and out int3 xchg or imul inc mov mov pop inc cld outsl jb jnp (bad) inc jno sti mov ret cmp or fisub push dec add lock dec movsb testb mov push daa push stc (bad) xchg or mov sub shlb dec cmp xchg jns adc inc gs in popa decb jo push and in xchg add or adc inc and test cmp test icebp sarl int3 add dec xchg pop adc imul or add jecxz subb pop insb or jl out repnz std xor inc cmp rcl mov rcrb (bad) hlt fs pop xor and paddsw pop push jl (bad) jle mov inc sub add pop add xchg add sbb ljmp in or out push aaa adc cmp mov mov cld cmpsb clc dec sbb std mov sbb sbb xchg cmp shl add into sbb jg pushw in pop cmp jp dec push clc adc and (bad) int mov add es jno jb and dec and add xchg into (bad) cmc mov call pop sub sub pop add pushf add adc or sub dec outsb mov inc mov jns bound adc pop fnstcw les seto sbb adc loop aam loopne mov xorb dec sub jl mov lock xchg mov mov cs test or or int3 addb nop stos stos lock (bad) push mov add push in (bad) popa dec fcoml xchg mov fistpl das ret nop mov mov arpl call mov fsubs cmp mov mov mov pop or jo add addb xchg call and dec es stos add notl inc into dec mov cmp (bad) cli add mov not adc jo scas xor insb dec push sub xchg xchg inc mov pop pop xchg test rclb fs aaa les push rorb sub cld out jg adc push add jbe add xchg fstl (bad) lods dec clc add mov and sbb push mov xchg xor and xor mov pop push inc test add jnp xchg mov push xor mov push dec fstpt cmp fildl pop clc ds xor push push shlb popa fldcw xchg dec jg lcall jl test inc add daa xchg and and arpl loopne cmp test insb inc add movb cltd add add rcll adc sahf dec in mov divb or insl pop mov xchg mov or xchg xchg insb adc (bad) jo mov mov mov mov sbb push les mov mov jb adcb or pop negb or xor mov stc fs push enter test dec cmp adc xchg cmpsb pusha fmul push cmp inc daa ljmp inc jmp dec jo in or sub in mov imul loopne add add cltd cld jg add mov iret sbbb cs jnp or jae push sbb or lock pop call (bad) mov repnz lods dec andl mov int3 cli xor xor fsubrl add pop sub mov jne adc add inc aaa fs jno nop data16 push test mov out or data16 cmp or push (bad) xor mov or and jle sarl sbb pop outsl mov sub or in shrb and pop and jmp lcall dec outsb xchg sbb sarl mov xor in addr16 cmp xor sbb imul xchg leave jno inc jle shlb pop divl xor cmp dec xor mov adc xor mov movsl aaa in (bad) test in add and rorl sub fwait or mov (bad) xor mov inc push add adc bound dec mov rolb ficompl in sub mov mov or gs dec outsl addl hlt inc sbbb mov imul cmp cmp mov lods mov nop pop inc andb xchg cmp inc pop in adc mov xlat add int inc pop icebp loop jb daa and mov adc lcall daa adc es or dec popf in xchg imul clc mov mov or mov xchg cltd femms inc jp adc in add push hlt scas pop xchg jp push add mov and jns inc xchg inc mov jbe (bad) xchg pop add mov or push xor sbb nopl xor sub pushl mov pusha bound jo xor adc jne pop sub pop les push ja (bad) jnp movsb sahf and (bad) cli scas pushf push outsb ljmp ret jae sub fsubrs fs sub sbb cmp mov loope xchg fs lret inc jnp rclb push sub rcrl and jmp cli arpl lcall pop (bad) (bad) cmp sbb add lahf pop xor adc push adc in inc int3 int3 into add inc jmp pusha xor sbb mov dec push xor lds (bad) in in adc bound sbbb aam xchg add pop lret mov (bad) fistl sbb inc (bad) aaa pusha push mov mov mov push xor jo (bad) and add (bad) sub inc dec out aas pop scas jno add mov mov dec fildl cwtl bound or or push jae add cmp add sub movsl ja (bad) xor popa and repnz or add adc fstl push and (bad) push shll sub cmp cmp out fist std adc dec std sbb dec lret add (bad) jecxz push dec adc mov push xchg jo popf xor (bad) inc adc adc xchg nop jmp out incl dec push lods pop mov inc je pop inc cmc xor add pop fistp push mov mov push popa add ds pop fs popf ror repnz les dec mov cmp lahf aad add fistp movsl push lret adc int ret stos mov cmp jb addb mov dec lea xor pop and xchg pusha cmp fistp mov fmuls xlat aaa pop add cmc mov xchg pushf bound cmc dec mov pop xchg pop lods mov pop cmp mov mov inc imul dec or add lods ja or test dec mov sbb push dec push xor push add add mov xlat xor mov rolb jne jle cmc xor lldt cmp shl xchg cmp (bad) mov arpl add nop push daa stc and loopne push pop stos addr16 mov repz pop cmp inc sub scas jno mov testb mov fldenv xor or inc sbb aaa push mov adc movsl ret mov sub roll outsl sbb fistpll and push adc and rcrl add mov imul xchg in or cmpsl push sbb pushf frstor push inc repnz push pop or mov (bad) jbe cltd aaa je imul inc adc xor add inc adc jnp fnstenv push subb push aas push call lods cmp test fcoms das dec push push mov sbb mov shrb addr16 jnp and sbb aam fs or ljmp out and cmp xor push pop dec imul push push xchg jbe dec cmpsl std adc add dec push pushf mov repz cmpb sbb jge adc (bad) mov hlt jns in fwait mov pusha js call popf sti mov mov cmp add pop aam test push daa outsl rclb add out push (bad) or xor mov xchg fiaddl mov or ds stc fstpt mov enter stos xor pushw jl aam jge push sub push and (bad) (bad) cli sbb xchg cmp or and lret mov adc pop pop mov fs inc sti or or cli aad data16 insb inc in add test jecxz adc arpl jnp pop mull inc mov jl ljmp test cmp add add fnstcw dec lods add loope and adc xor and jl adc lock and cltd mov inc xor in test pop push xacquire enter icebp xchg dec add subl mov scas dec movsb sub inc mov inc push stos stc adc int3 mov cmc nop pop popa cmp cwtl and inc nop out jo xchg mov adc adc push mov jmp add xor cli test and mov aas add mov xchg or cmp mov inc and dec in xrelease sbb add mov aaa lret fwait xchg clc inc mov movsl (bad) or add and cmp addl mov enter jle cmp mov imul dec ss test cld and xor inc imul add push jp push jb xor jo sub leave and push out add shrl maxps aas pusha sbb and std or lea out add stos pop movsb add jg call jge and sbb inc (bad) outsl test es jb mov push sub (bad) pop mov ja adc sbb push jg insl cmp movsb pop adc mov add and sbb popf shll sub lcall lea xchg jne sar xchg or jae push add dec pop into outsl xor enter xorb lods jbe sahf push js xchg lods inc repnz adc sbb cmpsb adc sahf add aaa push rorl sbbb mov jecxz pop js add bnd cmpsl (bad) xor andb pop test clc movsb inc stos dec ret ret add shlb pop xchg fcmovnu mov sbb sub data16 cmp jmp das push jge fild cli jecxz mov mov lock jnp xor fidivl inc and inc (bad) jge adcb fsubr iret dec cmpsb inc adc mov movsbl in lar orb test lds dec loope es and mov sub sbbb jno add and xor jp xor out xchg and (bad) mov push xchg incb lods fisttp add adc push rorl inc push add push mov jo xor repz gs add dec sub test mov lcall cltd je jp sub je push int3 lods push jnp mov cs stos pop sub daa jo or pop push or add js insl or mov mov or std insb aad test add (bad) sub xor dec (bad) xor cs adc cld sahf (bad) das mov and mov lea movsb jo and fs sub lock xor inc jbe fisubr sbb xor popf rolb add pop dec jmp stos lcall or daa idivl mov xor add xor jge sbb into in xorb addb mov insb cmpb test outsb mov adc stos mov adc or add call jnp leave add xchg cmp push movsb enter add int3 mov or dec shrb repz mov and call pop xor xchg pusha rclb jno or sbb outsl jns or es push cmp pusha and fildl push (bad) mov out (bad) push sbb mov lea test ja adc adc add stc cmc jmp fdivp out add push mov inc pop jbe outsb inc push push into aas mov enter dec or dec mov outsb sbb fldl add pop fistl in movl and adc addl dec xchg sbb fnsave fistpll dec push in adc icebp jae add mov xor ja das test add mov dec mov adc std cli dec movsb and push or adc and es pusha adc sbb outsb add cs dec aas cmp fbld cmpb cmp adc into push out sub xor sahf shll int adc cwtl pusha stc mov push imul iret mov lock scas xchg inc sbbb lahf mov sbb or xchg cmp mov jno jo push push and loop inc cmp (bad) (bad) mov or inc or and out divl sub or inc dec jno adc inc or int3 aam pop mov mov cmp jl xchg add adc push add ss icebp xor add stc in jne xchg mov adcb sub inc jge push (bad) lret pushf ljmp push cmp push adc xor stc lea lock ffreep xor das or and push inc cmp inc or mov lahf add jnp jg data16 (bad) clc popf adc call movsb mov cmp incb sbb pop add add aas lret xor push and imul test aam repnz popa and mov or and or and out jns mov cmp inc ja test orb adc push out xchg dec and inc mov in or outsb in pop and jbe pop add sbb cmp push push pop sbb int3 pop push cmp nop ss jl push aaa rcrb dec cmpsl mov sarb das adc loop adc mov mov aas cmp pusha xchg jns ds adc iret repnz xlat push movsb jne cld xor stos je adc pavgw push lods mov adc aam inc mov xor ret sbb pop shrl add std inc je aam push das adc loop pop mov inc (bad) lock add cld adc add iret mov (bad) (bad) cmp nop push push or and sahf sub out or sbbl hlt xchg adcl neg cmp dec adc xorl adcl mov push xor subb adc rcrl cld fwait sub cwtl or jge lods mov mov sbb cmc std add jae adc jae jo jmp fisub ret sub bound and jle jb sahf sub pop popf (bad) mov push lahf cmp or push jb adc or lcall bound or testl adc mov lods jnp or inc adc pop jl pop iret mov inc and mov mov jl outsb loop mov mov jo adc jl dec sbb dec inc sbb cmp jl aas mov movsl sti inc xor inc psubsb dec mov pop outsb fadds test mov sti push sqrtps lahf adc mov add and aad sub insb or dec aad jge,pt sub pop or adc or pop inc sbb sub sub mov cmp rcrb mov adc and (bad) xor repz jl inc dec (bad) jno rcl in arpl lret daa push cmp out push test fcomps rolb pop or rclb stos int3 jge xchg cmc movl js sub mov dec mov cmp inc lret mov sti mov lods add es in mov lret sub and (bad) mov inc mov pmaxub fiaddl pop and insb xlat inc push int outsl fs and std cmpsl or shrb outsl aam pusha subl jnp pop popf loopne pop dec fmul sub adc xor outsl dec idivb jle adc sbb push outsl in xor cmp cmp js add repnz xchg push orl mov insb (bad) mov cmpl or lods hlt movsl add jae test sti popa jge add sub sub sbb cmp aad mov pop pop or mov rcrb mov jl adc push and jnp adc sub (bad) xchg jmp std adc mov add clc lret mov inc xchg pop jl stc cmp test dec mov cs adc mov inc mov clc add loop incl cmp fstps xor imul icebp test addl mov inc mov cmp adc inc pusha pop sbb xchg jo,pn xchg sbb or int3 add jno inc jb mov arpl pop push xchg rorl orb jo cld inc cmp lods jle (bad) xor incl push cmp mov insb add data16 add sbb xchg rolb in movsb (bad) pop mov add sahf popf andb or mov imul cmp add adc add mov and pop jne xor sahf into inc dec rol xchg stc jno xchg jo adc push cwtl in or aam push pop xchg mov lahf cmovle into lea jb rclb movsl xor enter sti add and mov push js add jno inc pop fisubrl cmp pcmpgtd cmp lds pop jmp rolb add shrl loop xlat jge gs mov cmp pusha sahf rclb add add sub add dec inc jbe stc mov cmp popa push inc mov outsb jl aam daa dec fmuls test mov and and mov sbb fild daa shrl adc sbb cmp cltd in dec sbb jg push fsubr daa cwtl add adc pop add and ret sub lret in les insl cld (bad) movsb aad lods mov jge sti pop out or and movsl mov mov jbe in jb cmc into movsl adc (bad) addr16 notl xor ficoml ds adc cmc and push lds push jge sbb cwtl sub sub cld cmp xor mov pop mov jae push push pop pop push icebp lcall push addb popf outsl lods out jmp rol and mov cmp and mov adc stc pop add dec enter sarb nop bound inc jp lahf mov jne sar and adc jecxz fiadd jmp fwait xor cmp in xchg ljmp addr16 cmp pop jb lahf adc outsb dec mov add xlat rclb add push inc lds add test js inc ljmp aaa or pop loop lret loopne xchg cs and ficom mov out insl pop popf loope push mov sbb dec call outsl jg aas lahf test jno sub xlat jp xchg mov fs adc sub out dec and das pop add inc sbb jecxz fsubrl jl cltd sub jle shlb mov add or out or add push ja enter jne mov and stc cli mov sbb lahf pop xor test xchg inc mov out jb jno dec sbb or and sahf pushf movsb adc (bad) mov jnp add sbb into (bad) jo mov aas icebp je inc lret mov push shl or jnp xor cld fist cmp or test or cltd jbe sub sub js loop mov cwtl mov xchg adc pusha jns or aam jb xchg lods add ja sbb mov sbb stos pinsrw hlt and push inc mov jnp mov movsb in inc xchg cmpsl add push sbb push add and fincstp push mov mov mov adc push jne sub insb ds sub jp add inc add (bad) mov lods mov pushf loope insb inc sub (bad) jp sarb in cld cmp (bad) pop popf aad mov adc and mov rclb pop push sarl std cmp mov mov stos mov lea subl stos cmp add jge add and not or jnp xor push fucomp insl add adc xor or scas les push push pop jb push add adc xchg movsb adc loopne pop das lds xor mov inc push fisubl xor and test imul xor inc add adc jns mov lret jl dec andb add push add jbe jmp insl in add aaa lret or jo xchg xchg lahf pop xor and test lods adc shrb in push and lahf outsl div cmovno and shr inc push jne and (bad) das (bad) push jbe mov mov cmp ljmp (bad) test jne xchg out fisubl sarl jno aas lods loop pop jp daa lods push dec inc mov cmp xchg lock cmp add mov test dec mov gs adc call push add xor lret subb jl jl ljmp sbb stos mov push mov lock cmp xsavec bound mov decb das pop sub in aam mov xor les loop andl xor push test add (bad) js mov dec xorps loopne inc fisttpl mov mov add xorl sarl adc pop dec xchg adc adc pop xchg dec fs ss insl sub sbb add xor and cmpsb push js das ljmp cmp cmp sbb nop cwtl fmul in imul sbb ja pop insl push inc inc scas mov mov mov into jge cwtl mov sbb cltd repnz mov popa push lods jbe mov (bad) jns data16 imulb pusha jnp popf (bad) es outsl in lods pop push cmp test mov fidivr cltd mov (bad) aaa sub mov iret dec adc add jnp cmp rclb xor add cwtl fldt inc or imul aaa mov out dec mov push loope xor or mov dec xor inc inc dec mov fdivrs in lret xchg arpl push pop mov cmp (bad) sub cmp in popf jae sbb sub push dec push shr push lret add add sbb data16 hlt or dec jg push lock ss inc pop aad dec cld jne xchg icebp pushf push push dec rorl cmp and sub sub je pop add fs mov mov shlb add pop (bad) loop add inc loop xchg inc mov add cmp add std cmp aad jno (bad) subb test inc cwtl loope sub pop frstor mov or xor pop mov or add mov and inc or rcl ss cmpsl lods pusha outsb push sbb dec orb and test pop or out adc mov xor xchg and lret push and pusha loop lret popa add mov push push inc aad inc xchg dec lds mov push or mov and in or sbb inc sti rcr sbb cld leave mov loopne inc lret add (bad) popa int jno cmc ss ja cmp add (bad) jge rorl xor mov pop lods sub sbb sbb mov add mov mov xor add das sbb sti inc xchg dec int and (bad) mov jo push xchg cmp inc add add push into icebp (bad) pop or pop int outsb xchg imul pop fwait mov inc les sbb mull xor out out cmp leave and pushf cwtl aam mov cmp add (bad) in stc lods mov cmp rep inc jp or imul adc (bad) imull loop xchg ficomp and dec xchg out push rolb add add icebp mov jb and out inc mov or sahf jl cmp pop test and int ja jle inc jo pusha mov mov daa mov or fiaddl mov adc inc pop test outsl aam lods sahf add out push push xor or xor xor push (bad) pushf rcrl (bad) sub and jbe in mov ret cmpsb add cmp and adc frstor test imul pusha pop mov rclb add and negb push in lret mov inc es jo push cmpw shll jle test adc ficomp push scas call outsb dec loop mov sarl gs mov (bad) jns or sahf or cmp out mov shlb and and inc aam movsl xchg jp xchg cmpsl add hlt dec sub add inc and and ljmp sub adc std mov cmp lock icebp sub sbbb jp cmp pop pop lret out fwait and out lock ret sub sbb ljmp sub push ljmp es xorl push dec sub pop (bad) xor sbb mov or insb movb cmp mov negb adc sbb in sub pop jp mov pop sub add push add jnp xor cmp or push aaa jnp int3 sbb mov adc frstor pop sub out jbe or jmp ficom jno iret mov mov pop int sub mov mov dec push pop mov inc lcall aas and push jns xchg adc inc add ds insb dec mov loopne dec (bad) movsb stos pop outsb cmp add movsl loope aam add push adc es (bad) pop jnp adc dec jmp sbb popf aad adc lret out add dec enter xor xchg or cmpl or mov aaa pop movsb pushw add push lds adc int3 into pushf pop stc repnz mov push les cmpsb mov or xchg ja aam inc dec add jmp bnd add into or (bad) pushf and mov out mov pop dec pop movsb jb scas and dec out aad mov cmp or out push xchg inc mov fisubr add sti aad dec cmp pop (bad) std and pop lret or inc insb jl cmp cmp or inc push push cwtl add movsb pop mov inc push aas mov rorb push shrl flds sub loop test not cmp jne add (bad) cmp mov daa add mov jae jne lock repz cmp outsl inc xchg dec mov or inc dec ljmp lret cmp hlt xor ret stos insl sahf sbb mov adc jg and jl add mov pop add outsb adc sbb xor call adc imul sub lahf or call inc icebp stos jns add ja lock and dec jo mov or (bad) lock lahf push insl sbb add adc mov dec ret (bad) je sbb and add and orl sti lahf nop dec pop aaa adc int3 sahf push jnp lcall lock sbb rcll mov jbe jns mov imul add hlt dec lret mov mov lahf xchg fildl or fnstcw (bad) cmp sub inc daa jbe cli rcll adc push add ss and cmp sbb push mov sbb rorb add jb mov fsts xor and sahf movsb clc ljmp push adc lea addb je (bad) xor cmp adc jae xor pop loope add inc xchg subl mov cli cmp add lahf and sub lea (bad) enter and hlt jecxz pop add mov inc rorl xor jo xchg inc or dec (bad) cmp das inc lods test mov (bad) sar mov je add into stos cmpsb add gs push pusha jns inc pusha hlt imul out or adc jb in dec push stos insl cmp xchg lret mov int3 inc and add das sbb pusha test shlb and mov xorb push rorl jp mov mov sti jmp push call adc jnp add fmulp and mov inc mov add jo mov cmp popa dec pusha jmp sbb std mov jns gs or pop fwait and add imul in mov cmp xor or pushf in push and dec or sbb movsb addr16 pusha add arpl sbb jbe insl sub mov pop add imul mov add mov jp out inc ss pop jo cmpsl sti pop roll in push xor repnz adc add mov (bad) lock xor and or scas sub loope xor sar arpl jbe sbb mov sbb inc xchg sub out pop fistp arpl adc test dec mov push inc mov lods jne xchg or outsl aam mov outsl add jl out jno and imul fcomp mov xor add dec add lcall jp jle in inc dec sbb lods sub jnp jne jnp loope pop mov aaa add negl cmpsl in push mov inc sahf xchg fwait mov adc nop scas (bad) and loop mov inc xchg ficoml rclb xchg loopne fs dec cmpsb out pusha sbb iret mov inc inc mov jbe adc clc and in cli (bad) add jb outsl dec roll sti les lods dec das nop jecxz xchg xor roll scas mov jl cmp arpl cmp dec test sbb (bad) sbb xchg xor add imul inc dec cltd cmp repz aam mov pop and into add call pushf test xor sarb push pop jb jmp in pop stc push (bad) shlb inc dec cmp aad or cwtl aam add fmull cmpsb mov pop aas mov test mov xchg push sub int pop inc loopne (bad) shl push ret and push add push push inc fbld xor or sub std xchg sbb rolb push jg jne in add arpl push add adc hlt fisubl dec loopne pop add (bad) into pusha shrb pop aam dec xchg mov (bad) out inc dec push pop jmp jle mov sub lds hlt fdivp push cltd mov repz mov dec push shll and fistl lahf aad mov adc cwtl insb pushf cmp xchg mov sbb repz std in and xchg movsb nop pusha or les inc sub mov sub pop pusha push mov xchg dec (bad) mov and push cld adcb mov ss (bad) hlt mov add cwtl mov rcrl fadds sub mov add in or fnop out (bad) cli (bad) mov add mov fs inc push aad pop or adc add or pop jnp adcb rorl push outsl pop dec andl push and mov or or jge in mov mov repz enter push mov arpl pop pop addl mov jmp or xchg aad fstpt inc sbbb pusha rcll out cs daa push (bad) cld jle fldl2t test test mov iret dec sbb jge inc dec jnp movsb mov jge lret adc add lcall add cmpl xor xchg lret add cmp in or cmpb push pop jge lea std outsl jge loopne sub dec dec dec ret cmp push rcrl add (bad) push xchg push xor sar rcrl hlt jg inc inc jmp sbb in bound in xor sub mov out mov iret mov xchg std dec arpl cli sub test mov or dec mov mov daa pop repnz test jnp mov cmp aaa orb fsub jge mov cmp out (bad) repnz out pushf xchg inc mov push add add ss std addl lahf leave dec push push js cmp (bad) shrl cltd add cmp or adc sbb rorb mov cmp cmpsl push inc aas int3 and mov and int3 add xchg push popf jo lahf shrl leave jne lods imul sbb negl int nop mov nop xor adc inc clc jnp mov sub aad rolb movl push mov lret rorl in ds jg inc sub cwtl out jg lahf cvtps2pi je jne ds mov xchg add pop stos mov mov lds mov enter xlat movsb fstl xor mov cmp dec pop je add mov sub out add andb jl push or dec push in test arpl mov int3 nop add rolb or mov lock pop cmp ja mov xor cmpsb shrb repz push jmp xlat adc push mulb pop jno xchg es or pop sub push mov xor rclb sbb cmp push lods scas sub dec xchg scas cs test cmp pop xchg inc mov or xchg pop cmc mov push or sub mov (bad) ja jg mov or int3 or push and adc fidivr add stos cwtl push cmp xor cmp add cmpb jns cs add aam mov xchg movsb add (bad) lretw sub in sbb xlat mov xor ja cmp xor das movsl mov (bad) leave rcrl push out xchg cld das add sub lret xchg outsl (bad) add adc rorl sub int pop xlat (bad) adc lahf push lea in push and jmp mov test mov push pop and loop pcmpgtb add xlat sbb ret mov jp mov inc pop push in std ljmp pusha cmpsb pop lock or xchg pop out or divl fwait fs daa fsts xor mov jl inc cmp xchg cld push and adc mov mov push ret mov push and mov push test adc aaa (bad) push ja pop loope xor adc pushf inc add ret addb repnz insb lods mov cmc lahf xor xchg push dec push mov out cmpsl jl cli push sub pop mov out into add or adc xor cmpb rorl loope sub ss dec out jne adc mov enter rolb xor pop push sbb xor enter inc dec test rcrb and testl sahf ret pop mov mov cmp and ret aam ds mov nop inc fs push fldl push cmp icebp (bad) sbbb jecxz xor jmp inc mov sti test stos fnstcw popf test add dec mov xchg aam movsb out popf sbb mov push push add mov add js (bad) out push call lret mov daa xor fwait jo dec push xor arpl popa into test xorb pop jno mov aaa pop popa xor (bad) es dec push aam out jl stos adc pop in add push mov cmp pop add inc out aas cmp in cmc adcb adc dec push mov dec sub pcmpeqw jecxz cmp push mov inc xor pop mov ficomp push (bad) and and dec mov sahf or pushf dec test xor lret push or outsl cmpsb jg sbb aas jle imul cmc or mov in or mov xlat sti lret das mov push repnz fisubrl lds inc and jmp addl mov add ja int3 (bad) repz dec dec sub xchg test scas rolb cmp roll (bad) lock pop jne pop lret aas jg inc addr16 lock add mov inc adc loopne nop decl add (bad) xor jg jl lds fsubrl sbb outsb call test jmp scas lahf dec cld dec stc push dec push dec icebp cmpsl add mov sbb lcall jmp or mov bound repnz or jecxz inc sbb iret addl or rcr and push lcall andl add adc mov aas mov sub inc pop sub loopne pop icebp jge int and and les mov adc push add fidiv repnz dec stc or fnstsw pop sti sub or xor jle jno push pop adc and pop imul jmp add fwait mov mov lahf or pop test clc pop lahf jno dec mov rcrl in in mov nop nop mov pop in lahf jmp and adc pusha out and mov xchg xor cld add into (bad) adc out add fdivp notb cs cld dec push arpl xrelease ljmp (bad) jb in jo,pt xlat cs cld adc push jnp push adc push lea or sarl adc dec and fcoms cltd xor pop xor fisttpll push push push dec scas sub outsl inc es jo jg stos and pop xchg cltd test cmp push push fwait scas adc inc int cmp push lahf add (bad) arpl inc cmp sbb adc add mov mov cltd lods push outsb pop mov mov sub inc mov fldcw out jp cmpsl dec iret dec or and lahf jo add icebp inc dec sub mov pop clc pushl sti cmp cmpsb cmp (bad) jge or pushf icebp cmp test decb movsb or mov mov ds aas sbb xchg into and (bad) mov std xor add mov popa mov sbb imul mov mov sbb mov or (bad) xlat dec xchg sahf lods xchg adc dec mov arpl jp out xchg fsubl es push xor arpl in shll subb (bad) adc push leave pop pop ljmp in (bad) cwtl cmpsl rcrl mov or push int3 mov popf adc push inc jecxz pop or pop mov fdivrl add sbb sbb sbb xchg cvtpi2ps xchg pusha fcoml mov fadds dec xlat mov mov mov scas mov xchg inc add and push pop jmp mov mov call in cmpsl jnp jns not shl and aaa fs fldcw jo cli mov add pop insl jmp xor ljmp jne mulw push nop cmc jae cld mov int3 lods cltd jge add and sub repnz pcmpeqb mov mov nop les sub rclb or jnp mov ljmp aas inc sub and sarb ss in sub outsl pop add add pop fwait push or xchg and xchg cmpsb ss pop cltd imul inc aaa clc xchg mov push push push cmp rolb movsb pop add xlat xadd push int jno fcomps sbb testl cltd mov mov out das jecxz lret popf jmp ss xchg cltd xor dec push mov or mov adc adc mov cmp pop test mov gs pusha adc test ret (bad) dec sub pop pop scas and adc pop mov dec test imul clc fcompl or and popf cmpsl mov cmp sub in cmpsb popf pop ss mov sub repnz adc or and cmp jnp into adcl and loopne and jle sub cmp les xchg subb mov pusha push cli popf cmp jg mov pusha cmp aam add cmp jecxz sub add push repz push pop popa cli and jge sbb jmp (bad) fimul adc lret fnstcw push enter mov ficompl rcrl vsqrtpd jae xchg mov insl shrb push ret cmp (bad) std push jns xchg jo mov push push repz xchg cli popa (bad) xlat pop js mov and lret push jge cwtl cs xchg cs pushf sahf push xchg in bound dec xor xor push xor lret pushf (bad) out sbb pop roll fild sbb cmp add inc ret mov adc cli idiv jge imul sub or cwtl shrb jge imul imul pop xor sbb jp pop xor xchg (bad) xor or lahf adc sub ficoml repnz mov hlt fisubrl mov push sub pop inc push pop push cltd push xchg xor adc adc mov (bad) loopne or xor es cmpb sahf cmp addb ljmp sub jg es cmpl cmp data16 mov ret je push inc dec dec or sub mov cmpsl dec outsl fs add aam xchg popa fnstcw sub sub jl mov popf mov push test dec fnstsw lret inc aad lret (bad) insb pusha inc adcl test sbb push decl scas add lret or pop pop push and stos add push lcall mov inc adcb bndmov aam int3 (bad) aas push mov pop mov pop hlt popa lcall loope iret push lahf fmuls or lods (bad) jp dec inc push mov inc pop mov (bad) rolb lret fsts add pop push out push or in negb pop in and ss pop mov jmp sti movsb movsb add call or xor enter mov push in mov mov out inc push push popf icebp mov mov shrl push mov sarb pop cmp jo or jmp pop push and arpl mov dec scas or xchg out daa rolb fwait pop push push addb pusha je pop pop xor mull test push popf daa inc push outsl jge push scas pop daa (bad) add pop push dec shrl sub lahf sti cltd mov cmpsl cmc mov fisttpll in fild cmp xchg shrl outsl loop xchg scas and lret adc roll lea inc adc sti mov icebp pop ror pop push mov addr16 aas push mov (bad) xchg push sbb push jge stc hlt syscall aaa in mov pop cmp ljmp mov gs dec or push xor mov inc add inc cmp adc fstps inc adc dec pop jmp add dec (bad) insl out xchg scas adc mov pop (bad) dec call pusha mov gs jp (bad) scas nop push std and addr16 adc mov mov push cmp inc rcr and dec inc pop (bad) xor ret jge sar adc daa mov ret aad (bad) sbb in mov in test xor cmp dec mov xchg stc jmp inc inc loop cmc inc aas fstl jnp add out jle sub fidivr sbb outsl add mov rcrb and call jg sub xlat fs push and pushf es sub inc add adc dec imul movsb (bad) mov aas scas xor inc or insb push aas roll cmpsb cwtl insl push pop je or jb sarl sub test add push xchg jl mov or (bad) out aas add jecxz xchg aad adc dec lods decb jg not xor and cmp jl pop call xor xchg sti add add jo sub les xor mov cmp les or movb into xchg lahf and repnz adc fildl mov dec cmc push ds jo push inc inc dec les jno push cmc cmp nop loopne xor mov add dec (bad) mov or data16 mov iret or sub mov fdivl dec add jne add inc ficom (bad) add dec insl or xchg or scas push inc push ljmp pop sbb add jne adc pop cltd adc call mov cld aas dec xchg fild add sub out test fwait cmpsl aas mov add fldenv and dec dec dec pop add xchg xlat xor (bad) hlt xchg add dec aas pop jns mov cmpsb lcall push and push mov jae jb (bad) out push jmp push mov outsl scas fadds sub sub aas mov fidivrl daa push hlt inc jb ror xchg insb pop cmp jb jp and mov push push add adc fdivrl adc mov ljmp sub ss ds dec jb mov adc sbb cmp movsb add sarb scas or shl bound lcall mov cmp idivl inc mov dec shr mov repz mov cli pop push adc call pop add dec sub pop cmp pop push push pop sbb add and pop pop shr fs jge add shll (bad) adc or pop cld divb or ja ret in rclb or imul int3 lea mov sub xchg out enter adcl mov rclb jnp mov add dec xor out xchg (bad) mov pop or loope push ret or ret add sub inc and loopne push (bad) jnp popa arpl shlb push push out cmp call rcll sbb not push or gs repnz add mov (bad) or test negb pop adc pop dec sub add negl adc ret cmpsb les mov (bad) cmp inc sbb maxps jg and ljmp inc cmc pop pop std frstor dec je dec jp or mov (bad) push (bad) dec inc std push mov pop sub loopne pop neg cwtl push cmp addl pop outsl pop adc inc sub push push mov es jno or xor pop mov and mov or dec add add adc fstl cmc repnz fbstp or add in mov pop ficomp sbb lds loop flds pop xchg sbb ret push or add xchg pop ret and push shlb push ret stc imul mov movl pop inc adc or xchg jnp sub scas aaa and (bad) popf and out pop push add roll push nop inc push sbb ret mov inc push ret push mov call mov ret adc ret mov push jmp cmp and hlt mov mov xchg (bad) in lea jle add pusha (bad) sbb stos add not xchg add ss into push sbb jae dec rclb xor mov inc adc ficom xlat icebp in add sub nop jnp std add sub mov jo mov adcb daa sub cmpsb pushf add adc cltd xchg sbb xchg ret cmpsl das jo mov fnstcw add in incb or add mov cmpsl adc and in enter loopne test sbb (bad) jmp sub mov sbb push or mov sbb (bad) add (bad) fsubp mov push pushf (bad) inc stos lret xchg push arpl push mov pop lret sbb fwait mov lret test outsb sbb ret cmp and and out sub loop inc or jge pop out cli xchg xchg ret sbb aam cmp adc into mov push xchg fnop push ret mov jmp (bad) mov ret jmp pop (bad) cltd xchg push loop (bad) cmpsb xor inc mov test cmp jno (bad) add (bad) and adcb cmovae fiadd push mov jb push je (bad) fnstcw push push loop add add cmp adc jl nop add inc test pop or (bad) inc cwtl jb jno jo sub call jp cmp in lock sarb ret cwtl inc push mov stos and xchg data16 mov mov adcb pop bound ret fnstenv aas lcall jnp (bad) add push imul cmp pop lea shlb cltd add sub nop out dec adc test stos push sbb xchg jo dec insl adc inc call loop lret sub add fsubl fstl in push jg xor insb add sahf jne test cltd dec and adc xor lock pop sub test js dec jl test ljmp sar jb daa or or aaa add adc push and add and sub push or cmp mov leave ja sub out jmp pusha and dec jns shr xchg cmpsb or push sbb sahf stos fsubs jno or or repnz cs jp and lret and leave ljmp mov dec adc inc leave mov push pop in jmp push int mov call or je test sub test cli and sahf jb xor mov sub mov cmp inc lock rolb es sub stos dec adc add int3 enter rcll rolb jl ds push and push enter mov pop jge sub test or sub dec out sub rclb add sti scas adc dec dec sbbb cltd sub add dec popf stos shlb js sub jp push inc jle rol and ljmp inc cmp ret push jo inc mov add cmp aas add rcr lcall mov ret test inc mov jecxz sub cmp adc lahf (bad) lock mov or mov lcall imul lret or aam shr or jl and jecxz mov (bad) push ljmp aam ret data16 mov inc test adc popf js mov sub mov fadds xor ret push test inc adc aad dec mov push lods add js bound cwtl dec xor push ret cwtl adc jbe add out rcl rolb std aad pop mov add sete in mov or mov sbbl push (bad) push sar and dec cmove inc xchg and cwtl rclb or mov xor in ds das jo cmp or mov add out jmp in sar imul xor ret out or add sbb add pmuludq jb les cmp push das shlb adc lock xchg jle jecxz jae add test test jmp js add in aas cmpl aaa push mov dec enter xchg mov and stos test push mov add add cli fisubr ret cmpb clc das push (bad) pop push sbb jbe stc inc test mov call call jle lcall jbe dec js sbb stos push orl dec push (bad) push inc ret fs enter inc or push mov xor rcr sub jb inc or mov out (bad) xchg mov out mov jns in jmp (bad) popa cmp daa dec adc cmp enter mov pop loopne sub adc mov push addr16 lods push mov fdivrs xor push pop jle add push test add xchg jns jmp pop cltd mov jmp rorb pushf enter add mov imul (bad) out add cltd sbb loopne push int3 loope imul mov les dec hlt loop nop cltd aas mov dec mov jge test mov mov inc (bad) cmp leave in jge adc repnz je mov inc add daa sub push pop cwtl add (bad) out loop pop dec jmp js mov jno add (bad) lock lcall or sbb adc fild inc mov faddp push xor push fs enter call adc fildll loop lods add inc ret pop push (bad) cmpsb sbb add jbe xchg jnp jae xor loopne aad loopne repz int3 cmpsb xchg add pushf out sub cmpsl test int3 negb shrb inc add push fs nop push and mov aaa adc adc outsb or pxor loop dec push adc and je rorb cmp jl xchg xchg xor ss push dec lcall adc in pusha sub inc mov dec in sub jno add push push adc scas leave jno adc add (bad) ss sbb jae ds cmc add push shr xorb xor xchg stc mov add setp ret sub fisubl and aad loop enter test pop pop add cli fs inc push test push enter pop inc pop aaa pushf fisubrl nop (bad) jo (bad) xchg xor sbb sub nop sbb xchg leave cmp cmp (bad) push add fs std jno add loope (bad) fnstenv mov cmp pushf stos insb mov sub push adc dec clc imul jno push cmp push cmpsb inc inc call ret push and or dec mov adc dec outsb pop dec pcmpeqw dec sub lret emms jb adc in push pusha adc fst push push test in jns nop add inc (bad) jbe in dec roll cwtl jecxz jb js adc dec mov cld mov mov ret clc inc push dec sub sbb cmp shrl or js jbe xchg dec pushf pop lods adcl cmp insl push (bad) in inc test sbb xor sahf js mov pop les inc daa loop xchg arpl es jb daa xor sar xchg xor (bad) cmp out cmp push add leave mov jl add ja pusha out roll stos fnstcw and jo add jle or sub out test decb cmp mov xor jge nop addb (bad) mov sbbb jb lock push sub mov cltd cmp inc cmp pop loop std add mov sub mov pop lahf push lret inc das jbe (bad) out adc (bad) sub js xchg repz (bad) aam stc sbb in xor inc fistp jl mov xor dec addr16 aad inc push mov pop mov mov pop cmp jo mov clc dec ja mov fbld inc lret add mov loop push pop sbb outsb jno adc add adc sbb popa ret movsl mov and cwtl popf jge pop add insl push icebp pop or loopne divb add xchg test jg mov ret xchg test nop mov iret jg mov jo pop repz out mov mov sbb roll addr16 fsubrs cmp iret sbb adc dec pop repnz and test mov ljmp xor adc shrl (bad) push pop xor (bad) jecxz sbbl mov repz jle dec jecxz mov mov xchg sbb icebp lods xchg or mov out lcall ss scas jb dec cmp mov rolb sbb mov jp nop pop dec jb outsl push add in test je mov sub mov stos xor mov mov push cmp cwtl push pushf and test stc bound lods dec test lock sbb mov pop in push subb shll push imul sahf cmpsb sub jecxz rcrl pop add pop orl dec mov jo rcll into cmc xor sbb jmp jo fcompl mov or add out (bad) mov jo cmp insl aad or jp les adc and call jns cltd sub std adcl aas fwait sti mov xor sbb mov loop in nop xchg aam or adc sub cli bound leave push cs pop add and push enter clc xchg sarb cmpsb mov cmpsb or push inc shrl inc dec ret xchg mov mov pop fnop push dec add and add pushf pop (bad) in cltd xchg rolb jae mov xchg inc nop test pop movsb lods es xchg dec add int3 and lahf mov jbe fisttp ret cmp loopne addr16 or mov xor mov jge cmp mov jo xchg push jns nop and xchg mov adc sbb rolb adc jmp nop inc adc xchg rolb shlb mov mov loop int3 pop fwait in shlb loope jne xor sbb mov and adc es cmp push cmp add mov sbb and mov insl test jae lock inc iret sub dec ljmp xor pusha add xchg xchg dec fdiv push (bad) fdivrl call mov sbb mov popa ss sbb mov dec mov xchg push jns fistpll dec push or push test jbe icebp loop jo hlt clc xor movsb sahf mov adc add (bad) fsub test and or mov adc inc dec sbb jns add pusha sub inc cmp pop sub scas cld fsubs add and mov xchg es ljmp inc push jns mov adc lcall jecxz inc inc and push push sbb and xor std cmp adc adc adc add jl mov lock test mov fistp ljmp dec js pop fldcw adc add mov xor jae pop sbb repz subb push lds sbb lock addr16 inc fcoms adc stos cltd scas cmp daa mov pusha and sbb mov or mov inc jnp sub (bad) dec mov je sbb loop dec add cmp and add das std cmpsb inc push cmpl gs fisttp jl lcall ljmp or out add inc inc ljmp mov sahf and sbb pusha mov sub sahf inc sbb je inc or ficompl int notl sbb leave and sbb mov hlt lds cltd xor and dec pushf add xchg loop inc xor fcoml arpl jmp inc push aam fsubrs dec or sarb cld aam popa outsb and pop test mov das mov rorl sbb call mov testl clc mov mov das jns shll enter and sbb mov sbb sub lods jne or ss mov hlt outsb iret cmp fdivrl scas ljmp imul test das or xor adc pop push loope (bad) repz mov sub jl lods add mov rcrl cwtl ret addb ljmp adc add pop adc pop and mov (bad) ljmp cmp orb jno aam (bad) nop repz int fisttpl sbb jno pop pop fmuls xchg mov outsb mov cmpb popa sub mov mov setnp rolb push and nop hlt or mov fidivrl daa mov enter test ret int add xchg jno and stos adc jg fnop test fwait xorl mov dec jl push in dec xchg mov dec insl add dec jmp push add or xor and in cmp mov add loop test cmp insl cmpsl jl cltd push insb and sbb mov in arpl xor pop or sbb xchg or and or pop lods sbb add aaa leave add and and adc cmp fs and cmc ja std push or mov add xchg push mov mov std mov add mov inc inc pop in sub call lea data16 sbb enter sbb enter (bad) popf xor (bad) adc inc mov push movsl (bad) icebp aam push push pop xchg cld add xchg cmp ficomp or add and inc fs pop pop xchg pop pop lods push add mov mov pop pop shll xor dec add and inc add mov fcoms (bad) das xchg test adc mov inc pop or dec stc insb dec mov dec sbb cmpsb cld ret xor mov imul and scas add xchg or xchg push and add lods cmc mov sbb lahf mov adc add gs aam push or cmp mov sub sub mov icebp mov mov cmp xchg fmuls js add lahf add cwtl xchg mov adc nop rolb xlat js dec adc jo pop add push pop aaa sub dec loope xchg mov mov cmp stos cli dec push xchg inc sub mov adc and loop push cmp pop xchg cs fs adc rorb popl hlt xchg mov bnd cmp dec inc pop lods or push push repnz cmp and sbb fadd xchg das cmc adc clc pop or and rol mov or inc cmp testl pop sbbb sbb aam ret sbb bound out flds es popa jbe lods jae sub scas movsb mov ljmp in cmp cmpb cmpsb pop or dec movsl or inc (bad) icebp pop pop inc add adc inc and or jo test pop repnz adc jno dec jmp mov pusha mov lret adc pop xor cmp mov fs push negl mov mov mov mov jo nop repnz push adc stc or js dec push cmp imul jg push cmp sbb add lock jge sub cltd add movsl outsl inc test adc inc jo sub clc test cmp cmpsl int3 or mov ljmp cmpl and cmpsb testb add lds sbb enter pop jmp adc cmp scas (bad) push add nop cmpsb inc dec and sub in push dec and shrl outsl xchg js lret sbb inc imul pushf xchg push stc adc add (bad) pop mov fnsave xchg (bad) mov or mov loope mov mov popf add and clc jg or cmp cld inc jmp pop push subb xor cmp test push mov test and pushf push out (bad) sub adc ficom mov jmp mov jle arpl popf add jo inc and cli rcrb add scas jo jo,pn and pushf rclb (bad) adc aam xor hlt ret fs add sub cld call jo (bad) int3 aaa push rorl sub cmpl sbb push enter adc add icebp or shr lret push adc pusha fldl cli push ret cmp scas loopne fbstp xlat mov push xchg xor mov jns divb cli in stc add add mov int arpl sbb (bad) mov mov dec add add mov enter inc add stos loope mov (bad) jb sub xor insb mov and fidivl mov mov and push arpl inc rcrb lock (bad) insl lock lods mov insb sub mov imul xor pop lock fmuls sar add mov push adc arpl add xor push les adc arpl sub or fldcw stos mov enter faddl gs test pop sub leave lcall push dec or xor sub int xor xchg pusha inc mov inc repz sub call ror add cmp dec shll adc fwait mov sub mov add mov or cmp jmp xchg lea (bad) push cwtl jo pushf movsb stos xchg xor (bad) je test inc jl stc les bound pusha fmull sbb sub push and mov adc (bad) test add fisub cltd int3 or add dec ss and push lret test test outsl mov or jmp dec sbb shrb cmp cmpsl pop mov aam mov je cs or std mov pusha pop adc inc add orl ss add arpl orb sbb xor cmp adc mov adc outsl add add daa pop cltd mov dec jb mov clc adc test xchg jo out int mov fisubrl into mov add dec push mov repnz aad test rcrb sub push and in cmp nop mov pop jo lods add call cmpsb in outsb or in sub jge or xchg xchg pusha mov push cmp adc xor lods jp les xchg cwtl out inc add xor int3 repz (bad) mov pushf loope dec shrb repz jecxz sub pop ja adcb call je leave or mov (bad) std in add or je,pn or xor subb std adc cltd out push jl and clc xor mov imul pushf mov stc cwtl push xchg call roll cmpb mov out push andl mov add sub inc js jl mov inc mov and add dec xor ljmp adcl push subl mov movsl add (bad) std pop add out add cmp jno fildl js cltd inc xor sub cmp or fwait pusha inc cmp jno xchg cld pop jnp cmp daa mov jbe dec pop testb sbb ljmp mov jp lea add dec lret adc mov or rolb mov in js mov dec and adc add stc jns (bad) enter les mov imul mov push fadds insb pop xor fsubrl lods pop push lods enter dec sahf dec adc orb xor and jne push out out (bad) add sub jmp test fwait fs shl sub rclb xchg or popa add jo ljmp sbb mov js bound dec sub jl add cld rclb xlat in push xor movsb mov stos sbb mov nop add adc rorl adc loopne pushf mov mov lods sahf add sbb mov imul pushf xor enter les jmp loopne call jle dec arpl popf mov xchg rolb lahf test pop adc or adc call sub xchg push xchg movsl push push gs hlt sub mov inc xchg and add adc dec pushf xchg add cs push sbb lods xchg mov xor add push lret mov mov inc test and aam mov add push jb es or je adc dec mov and loop mov jp mov xchg test inc jnp (bad) jne push hlt aaa fsubs xchg add adc jb mov sbb enter in jo stos inc jne in enter cmp push leave cli cwtl xor enter nop pop and add pop xor clc fsubs test shll dec rorb sub add (bad) jbe sbb mov nop sbbb arpl pop mov subb mov out jmp pop lds fildl xor nop dec sbb push sub stos out jl sub inc test add xchg and mov insb pusha je in jne add cwtl out nop dec out jb (bad) jnp or mov xor pop dec inc jo fisttp inc movsl pushf sbb ret add xor sub fwait cmp add mov cmpsb sub or aaa scas or xor sbb in add push (bad) out inc roll test stos pushf movsb and pop inc sbb test bound jg xchg ja inc imul or ret add and sahf push push pusha fadd icebp push xchg aam mov lret pop outsb mov js sbb sub mov sahf out or inc stos fs adcl arpl jle,pn jns add jnp lds pop sbb xor inc push rol fst dec pusha cs mov fisubr mov in adc (bad) dec or andl mov inc lods jg shrb jnp mov lcall (bad) decb push (bad) sbb push les scas test add adc add movsb mov mov mov push add inc test and pop pop mov xchg out pop dec lds adc dec addl adcb les xor enter sbb hlt (bad) int or in xlat inc stos sbb ljmp and adc test repz lcall push mov push dec leave jl dec dec in and pop and cmp dec mov lods inc jmp pop push jo fidiv loopne pop cld add mov pusha pop lock sbb add sahf rorl sbb cmp sti sahf lods xchg push loopne pop mov mov mov and mov inc pop jmp mov inc dec adc aaa lods push cmp or clc sbb arpl je pop xchg adc xchg add mov pop and orb inc mov sbb mov adc into les pop leave jl adc adc or lcall add inc sbbl in mov xor mov int3 inc sbb cmp push call dec push add out xor dec adc xchg int3 js btr cmp xchg cmpsb sbb hlt inc pop dec lods jmp pop (bad) cmp mov les lcall inc and call sub jge adc ljmp add lods push hlt push add call mov nop sub add mov add repz imul ret or (bad) mov sub pusha movsl les rclb sahf test jns pop dec or sub adc repnz mov repz sbb scas cmp lock cmp pop or pusha mull int3 iret push mov aad test rcrb in add lock shrb or mov popf sbb inc sub cmpsl fs aad orb sub pop daa push repz cmp mov nop mov test push or or or add or and add jo adc imul and addl (bad) mov aas dec or je cs (bad) cmp arpl inc mov cmp dec dec jne sub add (bad) mov mov (bad) xor test clc addb in push mov loopne cmpsl sbb aad fdivs lods inc mov outsl shlb jns cmp dec inc out cltd stc ljmp fiaddl push movsl xchg daa les mov cld loope add or fist mov jno push push dec test mov inc mov add xchg pop mov push cs in orl (bad) enter ret lret add daa adc mov mov adc idivl loopne (bad) jnp jo sti cltd jno jno add das inc call fs push lea out in adc ret add mov xor loope enter add push push cmpsl sahf and inc lods sub loope das (bad) cld scas xor dec ja sub rcrb push add sbb pop arpl push rorb loope jecxz pusha cld adc daa ret inc roll add push mov and jo jo shr mov jp outsl xchg xchg or or bound (bad) loope cmp test imul popf out and mov lret pop lret cmp and ja data16 ds call ss inc mov fimull mov xor int push sbb mov jmp jno idivb aas push popf dec adc or dec lods xor push in push andl cmc cmp add (bad) cmp jle fxch jecxz pop add or dec hlt xor mov pop mov add xchg sbb sbb je inc insb out enter lds and cmp out popf sub push mov stos inc pop (bad) and shlb sbb lock mov add jae mov and push test sub and mov (bad) jo inc ds adc xchg jmp pop imul (bad) xchg sbb xchg aas cmp add xchg jo jo lcall je push pop push cmp pushf xor mov sub div fs mov add dec pop jne xchg pusha clc cmp dec cltd repz fdivrl fs sbb mov fldl fwait inc jae loope cmp subb out rol mov jle or in mull addb inc rolb pop nop and movsl fsubs inc shlb in sbb add xor sbb mov cmp pushf add ret or (bad) fistl rcrb mov in cmp add sbb push inc push int3 lcall lret ds cmp push or xchg pop mov add lret rcr or test lret xchg xchg adcb pushf lods sti lahf fs xchg nop dec sbb push in push mov cmc jecxz arpl add and mov inc loope pop loop inc inc jecxz sbb inc rclb mov mov mov lcall in pop (bad) push cmp or xchg in cmp mov push movsb xor ljmp js jnp dec imul add in les cltd jae or mov cmp and stos scas dec dec add fldl sub inc add aaa out dec sbb pop pusha rolb push push add icebp jns pop push rolb into inc dec divl hlt (bad) stos shll inc jo mov jno sub cld jne mov mov js xchg int3 dec js sub add mov inc nop and cmp add cmpsl cs add jo or mov and out push or nop pop out or fadds mov xchg sub push pushf loope push add aam xor lods mov sub jl cwtl loop cmpsl cmp std push mov jmp and push mov movsb (bad) ss (bad) mov clc jne push ret mov test xor mov ds daa in pop pusha xor lock insb aam popa mov movsb out fbld (bad) jns movsl or pushf or cmp pop enter push ja lods push bound inc int3 add out mov test cld mov mov ret pop add add jnp lods xor fwait mov andb mov faddl push jge sarb imul dec cmp jne jl test mov and repnz dec pusha (bad) mov add adc imul add mov jb mov mov sbb ret mov fs aas inc cmp (bad) icebp fidivr dec aas cmpsb adc js mov jl dec add and add pop cmp xor and xchg xchg add inc mov jp test adc push pop cwtl pop pop push js pusha push inc bound scas push cmp dec fs jb test pop jp cltd call jge sbb add sub lahf pusha fcoml cs bound inc jno cmp mov lcall pop clc stos pusha xor js inc jo cmp jb add push into fisubl js cmp pushf mov or lahf sarb rcll mov push das imul roll stc push mov icebp add cmp push lock mov add into out mov sti insb add push pushf mov push sbb in sub mov cld sahf mov mov lahf loopne je xor inc jmp push jl xchg add adc push cwtl js enter call mov sub jge add mov lahf call iret add das dec daa ss imul push leave jnp shrb popf inc insb es aaa call ljmp call and enter inc js lods nop pop cmp adc or xor stos lods adc xor xchg push int3 mov sub cmpsb pop pop xor add lods jmp nop jb lds ret mov dec xor push and add (bad) pop pushf je ret adc aaa adc xchg rolb mov dec out inc lcall add sub inc inc add and mov sbb fcoml loopne dec pop stos aam (bad) loopne out add xchg fwait mov adc int3 nop rorl ds aam mov (bad) and js jge call cmp jmp stos fucom (bad) mulb push and sbb pop jne jecxz ss push inc dec jl or inc xor nop pop or pop data16 xor pop jns mov dec cmp ret xor xchg add cs add xchg pop and daa xchg jg movsb lods jl push lods adc loopne cmpb cwtl lahf in cmp bnd hlt ja clc jnp aam inc cwtl xchg push dec mov sbbb rcrb divb cmp dec stos imul inc pop rorl pop movsl cmp xor or push lret enter jnp je sub cmp into add lock out jno test mov rolb cmpl jae fsubr xor ficom fidivrl push inc adc jo or nop mov mov and sub cli dec pop lods aad sub in pusha cmp xchg pushf movsb add movsb add xchg shll stos and loopne add push hlt dec insb cmp adc and nop popf leave jecxz gs cmp call mov dec and xchg sub xchg loopne sub test test nop rolb mov enter aad mov pushf mov inc and xchg test nop nop inc lods adc imul ret inc mov jl call (bad) movsb std lret psubd loop es xchg pop out xchg subl dec ljmp in test xor add aad imul aad dec sbb enter inc test push mull pop inc jecxz and cli xor cmp push idiv dec leave push sub js push xchg mov adc cmp and sbb pop cltd imul push popf aas jae add aam ss or inc sub ds push or pop push fs movsb jp arpl push insl adc and inc enter (bad) and movsb pop and xlat or dec adc or sarl je dec lds xchg nop and ret push aam jns int3 fwait sbb rorb out sub cltd mov in std push daa fbstp cwtl js lds addl loop mov xor jmp fs mov add mov fs sahf inc mov data16 out xor cmp add (bad) and pop push or mov push mov rclb imul lret add hlt and xchg aad push inc cmpsb and mov mov shlb push mov daa cwtl loopne out test jnp mov mov push fildl cld push push or and xchg pop jb push leave mov and sub or sub dec imul test dec cmpl xor lds ror add mov or mov add push mov jne dec xor lret call lods lea and xchg inc or (bad) xor sgdtl shrb pusha sbb enter or or mov pop adc or inc nop cmp adc bnd cmpsb lods pushf xchg xchg cmp mov jo push (bad) fcoml sub cwtl sbb lock mov sub add cmp xor jns push pop mov sbb or addb rolb dec fcompl xor push test ret subb mov add mov fcoms popf mov popa and pop das inc xor pop fmuls push in push lret jnp je add mov pop mov push mov mov sub or shlb in add clc hlt lahf and mov rcl arpl shrb les add movsl mov mov shl push stc or les sbb loopne push sub or inc jle mov jge shlb cmp mov adc pusha roll add (bad) jb jmp mov insb sub cmp jge jne es jnp add jecxz inc aam insb sbbl jle cltd mov imul stos inc mov cmovno dec pop push or push xor (bad) xchg andl sbb mov out sbb or xchg push mov add and lcall cli into mov add sbb enter add lcall cs inc xor in (bad) xor call loope sti outsb mov (bad) into outsl mov pop mov enter cmp ret cmpb cltd add add pop loope add cmp rcr fwait xor and mov lcall and sbb call jns mov roll stos pop stos (bad) das mov sbb movsl inc incl push mov push subb and call cmp mov incb mov pop xor (bad) mov adc arpl xor ja repz mov jmp sbb jno lret pop dec dec fsubl xchg adcb andb movsl mov mov sbb mov cltd dec xor mov jns adcb xor mov inc fadds data16 stc mov push les add inc adc cmp cmp aas xor cmpl scas daa mov jmp enter sbb (bad) xor fucomi cld test es sub inc xor ret (bad) imull adc fdivs mov adc pop call cld fld sub lods inc fnsave popa lret and inc sbb xchg js sub mov cmp jno pop cmp xchg add mov bound and cwtl mov and or mov adc faddl mov xchg shrl mov into push data16 or (bad) loope add je xlat mov popf adc js inc rorb stos mov dec inc add test inc fwait and and fdivl cmp sub pusha mov lock sub popf les stos add inc xor hlt jae ljmp sbb jge and mov call fwait jo sub mov mov sub sbb jo inc roll or mov mov int sub scas add and inc jno lods out rcr add mov out les sbb or fisttp xorb sub fcompl xor lods and mov add push or mov xchg movsl sub sub rolb adcl andb and (bad) adc sbb pop add mov std xor xor pop rclb cmp (bad) notb lcall imul and aad xor and mov jae mov test adc jno sbb movb and xchg (bad) pop add repz rolb add pusha mov push push adc lahf dec adc sub and push ss adc std sbb pop add movsl lahf push adc enter lea dec or cltd jne add sub loopne lea outsl inc mov aam pop add mov shr cltd push xor adc cltd mov xchg and xchg incb add and xchg xchg dec in adc les add mov pop sbb outsl adc and add push xchg js pop loopne mov pop push fistpl xchg clc mov push imul movsl mov push add in push mov xchg adc push popa sbb dec stc xor push or sbb orb or mov jg leave dec pop imul leave mov mov jno mov cmc adc fdivrs int3 adc sub pop adcb sub bound js jl stc inc test cmp hlt push and push pop dec pop pushf sti sbb repz js sbb and sahf loopne fdivr dec pushf xchg pop sub cmp rorb subb add sbb mov push cmp fs sub out add (bad) push mov mov xchg cmp push sub cwtl sub add xor mov inc xchg jle orb or cs xchg dec stos fmul cmp add pusha pusha xchg outsb negl (bad) mov test add (bad) jmp (bad) push bound les nop test mov xor mov fs and mov fsts rorb or xchg sub add (bad) or les cltd mov mov inc dec cmp (bad) mov mov cmp jl les jo cmp mov inc sbb pop xor fldl xchg push pusha movsb xor xor cmpsb xchg roll or les jbe inc pusha and mov mov (bad) les insb inc mov aam sbb mov sbb ss and dec das sbb pushf adc xchg add mov sbb xchg shrb xor sub mov sbb pop mov dec push pop mov adc push cwtl in or (bad) pusha pop es sub jnp js stos (bad) sbb or cltd adc jns xor cltd sahf jl push or loop fmull adc pop loope fnstenv adc xchg inc cmp sub cltd lret fmull or mov test test or aam push adc popf pusha mov fcmovb xor stos dec mov pop mov ja mov adc pop data16 xchg inc (bad) sbb fnsave dec pop rcrb ds pop rclb xchg in and (bad) (bad) pop lock inc and mov pop js sub addb shr leave cltd test movsb xchg add pop cmpb add sti sub test pop rclb and leave sbb mov pop imul dec adc clc fs mov dec xchg xor inc and inc stos push rorl movsl inc sub ljmp test and addb mov add mov push fcmovu mov pop push fsubr jns sub jns or call popf dec add cmpsl movsb out adc jo sbb mov sbb sahf and mov sub cmpb add cwtl sub fdivrl (bad) hlt pushf cmp and cltd popa or pop dec mov jns mov mov or movsb add mov dec pop pusha jl dec or add jmp movsb pushf mov rcrl mov ss xchg inc es test nop or mov mov fdivl test and movsl add mov fdivl mov push mov mov or sub or cmp mov xchg popf and lock or or xor mov adc pop xchg rorb lock push fs lcall cmp sbb in sbb adc and sbb lret jp cmp rolb mov add mov ds mov add cmp inc pusha dec mov sahf mov mov sbbb ficoml std pop movsl cmp js push pop or test cwtl pop cli fwait sub loop rolb jo sub mov cltd jl sub fsubrl mov dec adc dec in xorb cvttps2pi jge fs loopne cmpb mov dec jmp in pop xor shlb and stos or movsl dec mov mov sbb ds in xchg sub mov add sub addl xchg cmpl aaa and (bad) jl add mov cmp mov inc and xor add mulb lods popa push adc mov pop fwait inc add loopne test mov movsb outsb (bad) jo mov mov adc dec cwtl mov and test push pop mov lahf adc mov jl pop mov test sbbb fidivr add sbb adc push adc cltd subl test xchg (bad) mov int3 jb sub lcall dec lret test insb sub adc sbb pop ret xor mov call and dec clc js or push jp pusha jl lods jns add (bad) mov pusha cwtl sbb adc shrl jnp aam aam sub (bad) adc rorb mov xorb mov sbb cmp fs incl add inc cmp sub mov sbb cwtl call inc sub mov dec sub and inc pop mov lahf add mov dec dec push and incl push sub or (bad) add pop add jno das lock and jae enter leave (bad) dec pop clc outsl pusha jne push sub (bad) push mov inc aaa xchg jno popl fcmove int3 (bad) pop add ret push mov pusha xor mov xchg popa shrb add pop aas lahf pop in je das dec xor out fidiv pop pop mov pop (bad) mov or jecxz fisubl mov lret xor hlt adc push push lods sub (bad) rolb jnp sbb sub lods xor (bad) mov movsl loop sub imul js hlt and add ret inc clc and xor sub enter push push xor mov (bad) nop add bound xchg gs inc lret je xchg test je or or mov xchg pop dec inc sti movsl ljmp xchg jns test xchg add lret fimull sarl and push or jb and jg packssdw mov xchg rorl push inc mov hlt add inc nop and add ja jno aaa add adc sbb mov inc mov (bad) mov or mov sub xor adc add int3 cmp sbb mov add daa ret pop out cmp xor dec mov arpl mov mov insb jg shrb or ds add test and adc aad add xor add mov movsb (bad) xchg insb cltd lods dec fimul addl push pop dec and popf mov and and mov pushf nop inc jae mov je pop sbb add decl mov dec (bad) fildl xlat jbe add jae gs mov or inc lods xor pop or jno and add aaa dec sub sbb imul les dec loop mov mov and mov and mov jmp out lcall ret push test jno mov movsb jb xchg and fidivrl fldcw rorl fcmovnbe push mov push into mov lock adc jg (bad) out xor int3 fidivr lods and xor jno xchg add aas mov sahf cmp (bad) lahf jns push repnz loopne inc ret inc testb lea scas cmp or jb and rcrl inc mov dec mov pop sub inc and ss outsb push mov in mov push test and jno or scas leave sub add fsubl int3 pop nop lock scas mov add es xor push push sub xchg push insb inc cmp sahf je pop loope jno mov jbe and fsts ss xchg ja cmp pop push fcmovnb adc pop or pusha lcall and push insb adc push fdivr or test push incl js out pop sti add xchg lahf inc mov adc hlt xchg xor mov inc es xchg cld push jb nop pop jo xchg xor ror in or js jge lods mov push inc push xor fsubl (bad) cltd adc xor sub (bad) or daa or inc pop mov sub (bad) int cwtl cltd xor xchg out (bad) ss lods arpl pop mov jmp ljmp scas sub pop mov call pop sbb push loope,pt stos outsb and ficom cwtl xchg adc jb cwtl orb std jl add loopne insb dec xchg subb inc jno inc xchg inc hlt (bad) lock push je jb inc or cmpsl movsb (bad) dec jbe cltd mov add jle xchg ljmp adc sbb xor lret aaa inc call mov mov pusha xchg out jno stos leave xor or jo faddl mov or loopne push lods pop (bad) clc clc mov xor imul cmp pop sbb adc adc xor and (bad) xor xor jl insb arpl push test rorb xor enter rorl dec xchg cmpb and hlt iret aaa mov add imul mov sbb and pusha inc push and rclb insb and jle movb mov jne add add adc add add subl movsl rcrl cld pop mov jb xchg adc inc push lods fidivrl cmpsb sub and jecxz (bad) pop push inc xor dec or add adc pop jle inc pop in jmp je cmpsl mov sub pusha fwait adc mov cmp push inc lea pop push push je adc mov mov add jnp or enter cld femms adc dec and lods dec cmp loop pop jl sub orl leave popa hlt add xor sub push outsb les popf (bad) mov cwtl push inc fldenv sbb pop js ljmp aad js fidivrl lds sub mov js jg add lock rol mov sub cwtl jns add mov jnp push mov movsb bound iret (bad) shrl test pop xor adc or xchg sahf xorb aaa xor pop sub leave xchg pop cmpsb sub push lahf xabort mov mov sub xchg call (bad) stc mov call adc cwtl loopne xchg sub add or loope mov lods sbb inc push icebp add sbb es jnp mov lahf loopne add xor dec adc sti lret mov xchg pop mov sub xor mov test popa mov or push inc popa cwtl lds lea pop or add fmul into insb mov cmpsb pop sarb push sub ljmp push mov jle loopne nop les jns xor or lods pusha add add dec add aaa inc sub pop xchg add aas mov cmp and push adc aam adc mov je orl sub mov xor fistpll jne,pn xchg outsl lods pop cltd pop stc xor insb mov rolb mov push in or jmp cltd cmp mov dec dec sub xchg and xorl jle cmp dec xchg rolb in xor test scas insb in xor pop add pushf ret mov xorl add cmp jg sbb xchg enter adc loope hlt les in arpl shrb and pop mov sub xlat mov dec pop nop in add add jo sub add movsb fldenv jge add ffreep adc jp sub jno push dec mov sbb pop out push cltd add lret jmp in and sbb int lods pop add xchg gs pop add hlt jbe rcll cmp out mov pushf dec stc (bad) inc call mov lock inc mov xchg jb test mov sbb rcrb add in lahf inc xchg push xchg stos add xorb loope iret int3 fs lahf hlt inc xor jb test cmp fs rorb sahf jns ds inc inc jg add xchg xchg inc fs loopne idivb mov pop rcll aam mov jb mov movsb je,pn inc and cmp xor xor test les push cmc jno jl cmpsl and popa cltd lock lret xchg jmp mov mov fmulp aam test sti loopne push mov call add dec movsb adc out loope adc mov call or dec pop mov insb lods repnz rcl pushf or cmp mov rcrb cwtl add xchg aad lds ror fsubr inc mov mov sbb inc mov mov jg sbb flds add pop cmp add popf or cmp adc pusha sbb xlat jg lret jl jg aaa or sarb mov dec inc movsb add std into dec fxch lods add (bad) mov or add mov test add dec js cld ja (bad) in ss rolb sbb nop faddp test sbb outsb sqrtps call lods mov addb loopne test std pop orb (bad) xor push dec pusha push aam adcl nop add (bad) sbb mov jns push dec clc iret jo sbb negb push sbb pop sti mov fstpl mov jne lahf push mov rorl in adc lods rcrb sub sbb push lds lret inc int3 cmpb popa rcrb or pusha push inc xchg fild cmp sbb sahf addr16 xor mov pslld subl inc subb add clc jb cli ljmp inc pop test inc cwtl dec arpl nop repnz cli or pop mov aaa cmp cmpb sub mov cmp pushf sub jno inc imul int jg sbb mov mov dec ds xchg cmp sbb mov popa sbb push in sbb subb int3 dec cwtl add cmovno push dec stos xor sbb mov mov mov cmp sbb mov es xor adc repz and cwtl shl cli popa jnp adc shrl or fmul clc mov lret lods cmp lock mov sbb fs jg fiaddl and je sbb mov add push push xor pusha dec sbb dec bnd arpl add push push lret mov push jecxz adc das aad call mov and cmpsb ljmp lret or mov daa add insl dec pop sarl add loopne push fsubrl jno in or inc addl ret stc adc fild out or inc pop movswl nop dec mov fsubs fcompl jl mov xor bound sub (bad) ja std sub and add rcll mov movsb mov adc ret data16 pop fadds mov add sub adc push test jge lods shufps jb xchg scas inc mov (bad) loopne les loopne push leave jne push (bad) or jg lret int3 rorb lock inc sti sub adc cmp test dec repnz or push add fisubrl pop sahf sbb clc loopne xlat mov mov pushf inc mov aam mov sub add pop and push cmp push adc int3 pop sbb dec adc sbb xor mov push (bad) xlat (bad) and pop scas cmp je or mov lea add and adc xchg nop pop jle pop call rol and lret sbb jge sub (bad) mov sbbl mov in pop cmpsb mov mov lahf sbb in xor aaa (bad) js imul lret scas rcrb adc pop sub add jb inc mov test inc inc int3 adc jp ja dec andb sub es pop sub pop pop mov or pop add push fwait int3 popa wrmsr push scas and jbe es sbb int3 adc xchg add mulb jle test sbb lcall push addb sahf add xchg nop movsl sbb mov push pop push pusha loopne and rcrb (bad) movsl cmp jle stc call xor adc rcrl addr16 xchg xor and nop stos xor and sub hlt call xchg add mov or xchg repnz push sbb fs adc popa sub and jle or inc flds mov sbb mov test nop sbb icebp fstl lds lock push dec montmul cmpsb adcb cmp call adc pusha mov fmull cwtl add in or pusha mov jae mov cmc pop or aas dec sbb mov sub push push lods outsl pusha out xlat jmp mov xchg add cmpsb or fldenv pop jo mov xlat push sub mov repz push popf lret mov cmc mov cwtl sub nop jmp (bad) pop jmp cmp sub adc adc and inc mov inc pop pusha into xor or fwait mov mov outsl mov push adc je and stc push icebp sbb ss add inc mov nop inc call mov adcb jns hlt loop out out add jmp mov and push mov inc push add (bad) mov inc mov cwtl repnz adc xchg cwtl or pop lods call jno andb int3 jo cmpsl push pusha sub in imul add mov sbb dec sub mov lret mov add or clc sub mov or ja subb popf pop add inc cmp inc pop iret add mov pop lds and push xor dec jb push cld sbb ss push faddl mov es clc inc adc inc adc add mov imul sub hlt add or pop js add test add cmpsl and inc add gs mov (bad) and and (bad) test shrl sbb adc and fisubl sbb sub sbb aas outsb sub sub adc xlat int nop xor les int3 mov fs and daa cmc dec xchg fs js adc mov sbb int3 fisttpl dec add jno cmp cmpsl dec mov faddl ret xchg mov je add dec xchg mov in xor outsb shrb dec cmpsl not stc push mov int3 sbb add fiaddl mov fstpt ret jb call test pusha or lret addb dec test mov mov loop and adc js pop test push movsl push jmp cmp into or push gs sub push imul scas sub gs repnz mov adc popf fildll movsl daa jge in in dec out add mov mov scas pop shll sub jmp (bad) xor ret insl mov xchg jb (bad) data16 clc push xchg sbb out adc les xor stos roll adc je and ret (bad) pop pop jnp outsl es mov imul xor dec das xchg jl xor or sub adc pop pop mov (bad) loopne test jo andb nop adc jmp mov movups les movsb aam les mov cwtl int xchg sub fdivrs out or sbb mov pop xchg push clc mov dec sub push dec mov fmuls fsubr lcall int cltd sub sbb subl cmp lds dec add hlt sbb or rolb fistpll add mulb lods enter into cld subl and push add rcrb (bad) loop inc (bad) icebp outsb popa mov lret pop xchg cmpsl nop inc push sbb ljmp mov sub cmp ficomp ds sbb push cmp je sbb scas mov jbe mov scas cmp xlat jmp ljmp std ret bound (bad) dec fcompl mov sub lds fxch lret push (bad) mov sbb ficompl mov inc popf dec xchg and add jecxz and and jg mov inc and fldt lds add inc fs aas add inc addr16 pop add pushl data16 lock pop jl lods mov rcl and pop and lods test das jmp cmp cmp repnz insb dec mov faddl (bad) cmp mov leave jno dec push inc cmp and xchg les mov push add adc bound xchg pop add psubsw pop in cmp clc adc ret shlb cmc add sbb pop cmp dec lea mov inc xor movsl mov sbb inc inc inc fcomp pop lea and sub lret jae xchg adc int xchg cmp rol cmp mov test cmp jmp shrb pop add xor arpl rclb pushf addb push dec or adc inc cmp aam push mov cwtl mov and inc out jo aam sbb cwtl cwtl mov scas mov fbstp mov pusha or push pop adc mov sbb inc add bound ret pop mov xchg inc mov add adc (bad) hlt inc imul stc dec sub ja jnp (bad) stos pop sbb pop add sahf pop xor push cmp push (bad) int3 enter inc dec adc push inc test sbb dec nop sub call rorl pop mov adc insb outsl or jmp cwtl decl mov sbb pop pusha loopne add inc ds repnz in dec mov loopne test enter test pop (bad) cwtl (bad) and andb pop add or (bad) pop movsb cmp dec (bad) insl jge cwtl pop add dec inc add add or xchg xor lods push and adc and add andb cmc repnz add add or (bad) out loope add aaa jb mov xchg and and add test adc daa mov int jns xor add sbb int fs adc add xor push stos das inc insl mov add lret dec sldt cli rcrl loop sbb bound mov dec jmp andb or add inc in adc mov and mov xchg les cwtl enter inc cmp sub aad dec lods js or xor xchg call js cmp sub aas pop pop rclb push push xchg xor or (bad) add pop cmp les (bad) or pushf mov popa adc les cmp inc sub (bad) cmp rcl or mov pop sar and xchg pop inc push pushf mov ds (bad) xor and mov repnz ljmp mov fmull aam jle in mov pop cs add je and or adc or add in divl xor bound popf addr16 or andl popa and add jnp sbb test js mov mov xor or sbb loopne shrl nop xor jle xlat mov dec data16 cmpl jno xlat add sbb mov movsb call jecxz xor cmp lods push inc xchg xchg mov dec addb (bad) push push pusha push je lret clc movsb idivb jae (bad) je jns sub jmp nop test cmp movsl sub xor or jo sbb adc clc insb pop add cmpsb and sbb dec jbe dec ss shl adc jo sbb mov (bad) leave sbb sbb jmp mov adc dec push daa adcl pop movsl push fldt add pop jb pop jns and inc dec inc fs popf jmp mov cmp les inc mov shr repnz dec push subb adc cmp xchg mov fs adc popa enter push lret dec (bad) push jbe clc jg popa pop pop jb test rolb xor int das (bad) jbe cltd mov jg pop push loope nop mov xchg cwtl (bad) int3 cmp aam sub int add fistp sub sub and mov scas bound mov adc std sahf mov cmp rcrb sbb clc xchg cmp adc sbb mov nop or imul mov pushf (bad) push add push dec xchg (bad) jb and push push mov dec int3 pop jns xchg pusha dec out mov mov push ret dec int (bad) pop icebp mov sbb add sub sub movsl lcall in mov pop add mov xor pop push outsb sub inc icebp or xor sub lods test rcrb ret jns pusha adc icebp sub mov shll mov hlt mov orb mov gs pop out sub jnp mov mov jecxz add add andl push push rcrb add shrl idivb adc pop int push inc mov jecxz adc std xor das push xor lcall and adc pop or scas mov adc inc inc sub push add adc mov mov adc arpl mov jo or jp sbb push mov mov inc mov pushf inc outsl adcl inc mov sub add inc stc (bad) out or push push cmpsl mov in adc repnz shr add jno dec jnp fcomps pusha push pop push mov pop test inc push mov push nop sbbb insb or and (bad) ret aam inc inc dec (bad) dec fdivrs adc cmpsl push mov mov fstps fisubl cmp adcl shr adc lcall push mov dec aas push mov mov pop jbe xlat (bad) stc fs call pop sbb std cmc cmp pop add xchg mov mov repz out outsb push movsl and jp daa lods roll mov jo rclb or lcall xor add xchg dec imul inc mov mov arpl mov pop fldl inc add fcompl lock (bad) jns jg loope cld or mov adc add cld add add jmp jns dec and cwtl jno sarb lock hlt pop lea pop ds push repnz xchg inc hlt fs (bad) and data16 mov cmp cmp sbb dec ror ret sub pop enter add mov mov adc gs mulb inc mov nop cmp jb in dec sub push cld xchg test dec sbb xchg mov fiaddl mov ja repnz cmp sbb pop lock adc or mov xor mov xor xor sbb fwait outsl (bad) mov or cmp fsts cmp adc cmp cmpsl mov xor aam pop popa enter xor mov add cmp movsl mov test cmp roll or (bad) inc in test pop add mov data16 push out add stos fs or xchg ja add sbb mov cmp dec rolb shld pop call fwait push add sub xchg cmpsb sar pushf cmp fwait into movb lcall xchg (bad) repnz add sub jbe pop sahf loope jmp inc sub lret inc je jnp inc loopne or aaa sub sbb cwtl fisttpl add shl pop ljmp lret push adc loopne mov sub lods lcall out sbb ljmp dec sahf push rolb fnsave sub and sbb cmp adc lods xorb (bad) test andb (bad) add lret out dec std icebp sub outsb cmpsl push add roll mov mov fadds sahf cmpb jb add xchg lods push pushf adcb in or push cli mov dec adc mov and ja xchg or popa adc inc add dec ja pinsrw sbb jne or icebp nop movsb sarb inc dec ds adc rorb les inc sbb (bad) mov adc ss or add jae dec test test and inc or cs les sti mov mov popa push test out cli adc out sub mov enter lret (bad) rolb in and push icebp dec test movsl push orb iret lods lods sti inc push sbb cmc sbb loopne or pop stc add loope loop lahf sbb pop clc (bad) xchg pop mov mov (bad) add pop push dec mov mov orl jl js addl cmp mov jecxz jecxz and cmc int3 dec js pop clc xchg xor cltd pusha outsl out sbb cmpsl add jno adc fidivl ja push or push xchg iret sbb lret adc pop push sub push cld loopne cli clc inc setne or (bad) lock loope add in dec mov (bad) mov cli test pop add add mov (bad) incl push mov je sub mov and insl test (bad) xor adc mov addb scas or call xor jne push add mov loopne daa fadds mov sub inc fnop inc or out add call dec and icebp push xorb cmp stos mov mov inc dec je out shlb pop (bad) and adc add push and (bad) mov jl adc mov addl (bad) xor jl arpl pop mov and xchg nop push and dec sbb sub fimull decb jl push sti sbb sbb xchg in push sub insl aaa js dec inc sbb mov xor popa jno push push and dec xchg push push sub sbb sahf adc js or mov pop clc mov insl (bad) push or nop mov popf bound inc cmc dec mov cwtl xchg (bad) int3 dec aam arpl or pop in test dec or test or mull sub pop pusha push loop dec in je gs or xor mov out lret stc lahf dec out sbb repz repnz cmp loopne or sbb pop jl push nop orb outsl sbb xchg sbb or loope cmp shlb jns mov popf (bad) insb sbb push pushf js out push test mov jl xchg add pop test or sbb jbe mov popa test mov lods sub xor sub dec xchg mov pop fcomp jno mov mov lods cmc xchg in add and dec aad pusha popf pushf mov ss and dec (bad) mov dec enter add test mov imul add add or and mov adc push ficom das push pushf in sbb cmc and pop jg or addb clts fs (bad) add leave add cmc cmp pop lea mov xor stc and sub jne rcr cmp mov sbb xor ja mov dec xor cmpsb add jnp inc and cmp call or cmpsb lods add in mov repnz in adc outsb cmp cwtl push jno xor lahf pusha jl lahf xor inc in es shlb or lock cmc mov jecxz js dec add cwtl push pushf add xor jmp sbb add cmp cmp mov rorl add jb cmp sbb pop mov add test pusha pop pop sub fsubs push out xor push aam cwtl push scas or mov sbb sahf leave fdivs or sbb push jmp or aad add out jl add and cwtl mov hlt imul xor mov mov enter xor cwtl cmc push xor adc push stc je xor xor dec mov xchg dec in insb sbb dec mov xor ljmp leave mov rorb add inc int3 enter sub add arpl outsb repz xor add in or int inc ret cli popa and fs cwtl cwtl repz xor mov test stc int3 or dec js push xor jecxz pop xchg shll in pop jnp add in aas sbb scas add stos nop pop in test push cmp movsb mov in push fldl add (bad) cmc mov dec pushf pop cmpl (bad) lock shll lret sbb adc sbb enter enter xor stc push adc repz test stos push xor das adc jp mov mov int inc mov jae and arpl enter add dec lahf mov je pop mov iret orl adcl and add or ret leave pusha dec dec (bad) out notb test adc je bound test adc lds les loop inc mov popa clc and mov mov inc cmp pop jno mov subb ret add xchg out dec adc push mov es xchg call insl push inc push test (bad) mov xor (bad) lock push jmp rcrb or mov pop and add (bad) clc lret xchg adc fdivrl test mov xor and out or pusha mov jmp (bad) jo xor inc out pop mov callw mov loop int or pop imul daa out bound cmp lea cmp fdivs out add mov sbb jno jnp mov (bad) or jl pop pop mov clc lods push or and enter sbb inc hlt mov iret sbb test jmp and cmp aad dec cltd and add movsl mov add insl js shrb xchg js xchg push mov bound xchg inc inc jp sbb aad js xor xchg sbb ljmp add popa push movsb lret mov sbb mov (bad) loopne ss stc mov adc (bad) push push inc inc dec push xchg je push xchg loop inc scas aam dec leave push sbbl xchg dec (bad) sahf xor cmpsb pop test add repnz scas das rolb dec inc inc pop ds sahf inc ja test mov lret adc pop in add adc cmp xchg shlb xor out xchg cwtl int3 in sahf test rorb or (bad) or cmp and sub dec loopne add data16 popf mov ret cmp push push inc jecxz stos (bad) or shrb lcall mov xorl xor xchg and dec dec xchg inc mov xor out push out fsts cmp int3 inc aam inc in cmp or sbb scas inc addr16 fwait xorb or adc xchg and repz sub push movsl inc fild hlt mov mov cmc xchg or aaa aam lea call leave andl mov xlat or or mov jecxz dec rcrb les inc in push cltd inc in mov mov inc cwtl xor add pop jle les lods or dec div or stos insb in adc xchg gs cltd or or inc jne rcrb add fwait mov push cwtl or test push (bad) cmp inc pushf push xchg adc or pop jno rcrb sub xchg lods adc nop mov and imul fadd mov adc test mov add mov lods inc fcoml ss add clc dec mov cmovs jne add mov and pop in bound fs jnp subl je inc jne dec pop jp jg add int in pop lea roll mov push add (bad) cmp adc imul mov push in jne add push xor xorl imul test or push iret jo mov les imul mov out push cwtl (bad) std rorb stos cld scas jp dec outsb loop cmc hlt push leave fs out add mov out add sbbl mov cltd inc mov and inc ror call test hlt pop jecxz xor nop xor mov inc mov add xchg pop xchg xchg into inc or lock push dec pop push and loope sbb mov sub mov sbb rclb mov mov add repnz mov addb add mov xchg pop cmp jmp dec or rorl rclb sbb (bad) js,pn xchg or lods mov in sbbl dec push mov cwtl push icebp sbb sbb pop dec stos xor fdivrl mov xor and je les rol adc pusha out test lods shlb cmp inc mov dec cmp dec add jle insl lock clc lock lods or jno js je add xor loope or cld test add nop add or and lcall pop push add push adc mov mov xchg and mov add mov les out aaa popa mov jno inc enter pushf add out jle jmp out or dec jmp loopne sub sub nop and js insb clc mov sub jno inc popa cs sbb hlt sbb jge adc fiaddl push int pop jns lock imul and jb ds (bad) jne add mov sub addb scas xchg mov jle jo (bad) int3 or xorb cmpsb adc mov mov imul mov subb and dec jl (bad) (bad) mulb pusha sub or out js xchg xchg lods inc aam jns addb fwait mov nop and adc int push adc pusha dec or and adc shrb and adc push sti add testb (bad) fiaddl dec rcrb (bad) jo arpl pop push push fmull stos lret addr16 mov mov mov pop add mov pusha cmpsl dec mov repnz mov dec push mov cmpl cwtl adc xchg jo cmpsb jmp xchg add jb jle inc nop loop lcall xchg cmp cwtl mov mov cltd pop pop cli in push and int3 fmul mov cwtl xchg mov test pop inc pop ucomiss rclb addb stos aaa cmc xor or movsb mov inc jle cmc push add xor rol inc or pusha leave stos aaa mov jecxz out inc (bad) shrb mov pusha or adc js (bad) xor xor dec adc xchg out mov jo mov sub enter fadd cwtl cmp (bad) sbb jg stc inc mov jne sbb popa push mov iret mov inc jns out pusha out push inc and test aas icebp pushf add daa push mov clc (bad) dec es (bad) aaa dec subl add add sbb sysenter jb mov stos xchg aas dec loopne,pt jno rorb movsl inc mov jne jns rclb mov in push hlt and push test test sbb push sbb push push push lds cmc dec and or addr16 nop sti ret add sub and subb sti mov cmc or decl or dec mov ja aaa push and push add addr16 mov xor xor mov xor push (bad) sbb pusha xor in loopne cld lret jl add mov (bad) push incl xchg pop push push xor lret rolb lea xchg je icebp std enter fs jno mov mov loope es add leave mov sub jbe sub sub dec sub shlb inc lods stc nop sub push pop inc cld mov popa xor mov in scas hlt addr16 andl int3 mov lock mov mov les insl push mov fstpt mov cltd scas aam mov adc dec iret cwtl cli mov scas xor nop addb xchg adc mov sti cmpl mull shlb add cmpl push push ror dec mov call xchg cmc and aam lea mov and (bad) outsb mov pusha inc add inc mov icebp movsl jo and jnp jp sub push xor adc add sbb stos pop adc jecxz and cwtl mov and test xlat mov (bad) shll mov mov mov xchg rorb (bad) sarl dec std xchg xchg jl add cmc lret xchg add in gs cmp xchg sbb or sbb pusha xchg dec xor jl add inc inc sub popa mov pop stc insb xchg adc xor add ret (bad) jo stc in inc dec out push xchg (bad) adcb nop loopne cmpsl xor jno mov lcall inc dec and insb in mov negb sbb adc inc lods inc mov push lods xor loop scas rorl cmp sbbl fildl int3 mov xor jb dec enter sub push mov fisttpll mov xor fdivl (bad) repnz cmp jnp lea xchg cmp cwtl mov inc push inc cmp in int (bad) xchg cltd nop dec add mov lods test movsl ds loopne lods adc add and arpl cmp push aam add jns dec clc push inc nop int3 dec xor add pop pop insb xchg rol mov inc loop add ficoml lods popa or sbb shl and mov xchg inc or data16 xchg mov ret lock lret popa sub fldl out or jbe loop es lock pusha enter pop pop inc (bad) mov fmul ret rcrl xor les (bad) lock sbb pop inc (bad) dec xchg lea dec xor or mov jne outsb push dec nop addl xchg sub add and or mov pop push cmp or enter mov pop push xchg xchg add jb outsb dec mov add add cld mov adc xor mov jmp and push rorb mov jno inc xor cld rolb dec xchg orb inc dec hlt xchg dec jo mov sbb lods and (bad) xchg insl push adc or jp mov or (bad) mov push adc pushl enter ret or clc pop mov andb popf gs ss ljmp and in or jecxz xchg add gs xchg jne mov fmull inc fstpl lret addr16 sub es inc mov mov inc add (bad) ficom add andb adc pop xorl dec xor lds dec push push mov mov pusha inc sbb dec cmp enter pop cmp movsb jnp mov popf addr16 in test add inc jne loopne sub movsb inc and cs subb rcll mov pop inc and enter xlat or popa clc add mov and adc inc push loopne in lods mov imul fidivl daa (bad) ret mov jb sbb fs inc mov fisubr and (bad) cmpsl adc xchg cmp pop jns ja xorl addr16 sub add movhps push mov mov mov jecxz outsl stos mov out mov test inc aam add dec push mov xchg nop xor cwtl icebp sub pop bound sbb pop outsb cs add push rcl mov mov dec mov add fsts dec and or mov gs mov mov data16 cmp in loopne sub shlb xchg rclb add xchg (bad) out mov nop insb pop mov std add pop xor cmovs cmp xor addr16 xor or mov jo rol fadds rol shr xchg fstps out orl or mov insb cs pusha push cld pop stos mov xor outsl fist bound or mov mov mov loopne pop dec dec xchg sbb ja testb js sahf push xchg xchg push sub pop hlt mov (bad) les inc sub shll test inc xchg imul mov xchg mov cmp stc lods int3 pusha imul adc xor sub popf repnz insl in add ret add inc test mov mov jecxz xor adc jbe add push aam jns imul rcrb jl mov push xchg stos je dec iret xor sub int3 leave nop test fwait inc adc mov adc push cmpsl pop icebp test in fisubl stc adc enter rorb dec sub (bad) in test adc out sarl add nop add add lods pop out leave or or repnz add mov loopne pusha out or mov mov sub mov dec lods dec pop mov into add cmp xchg inc enter out adc and test cmc inc xchg add sbb ljmp imul mov inc pusha xor nop inc jge je inc mov test push mov in mov sub and mov jp enter or sub pushf imul dec adc mov aas out sahf test sub or into outsb nop in and mov sub sarb test xchg in dec sbbl outsb dec xor lods pop daa orl loop daa mov pop loopne adc push mov cmp out loope mov inc test push add xor add xchg lahf dec pop divl inc sbb lcall shrl (bad) lock adc mov inc or push lods sub dec andb (bad) ss sub push pop les jg mov xchg pusha add popf xchg inc call faddl mov (bad) mov cwtl inc pop sub scas sbb and lea fdiv inc insb adc mov push insl and mov inc add cmovg test pop xor mov sahf add addb jo adcb (bad) mov pusha xchg push ss mov add (bad) jbe sub or fs inc enter mov xchg int3 lock mov mov pop test dec add outsl stc inc mov push das lods add cmp js sarb addr16 xchg add test and push cmp cld xchg xor pop les push or jmp mov movsl paddw adc or js fstps ljmp sbb subl pop pop pop add in dec mov les in mov adc out pop rol adc arpl mov movsl mov jl js add imul mov lcall pop rolb or leave jo lret pop pop in push imul add add rcr jno cmc add inc in test js pusha in cs clc or ret insb adc xchg aam pop cmp pop ss and (bad) in sub adcl cmp clc in fmull les pusha dec inc xchg jbe sub or sti xchg loopne push ret dec daa (bad) jl sub or aam out fsubrl mov enter mov push mov or adc (bad) mov xor cmc out lea lret mov les in jae (bad) mov sti sbb je aaa shrb or stos or movsl mov xchg xchg rorl inc and adc inc and lock or sbb out push dec pop pop pusha push add (bad) cwtl enter pop imul add (bad) je mov add sub mov mov mov (bad) repnz hlt cltd jne pusha mov dec mov push push lock sub or mov jns sub mov js pop pop add xchg imul pusha dec subb cli dec xlat xor sub (bad) shrb jmp sbb sbbl cmp cmp sahf pusha mov pop arpl mov sub outsb add lods push rclb push jo xor fs popa stos in mov add or mov and movsl push cmp mov xchg popa pushf jl cmp jle adc push adc mov fs mov in js ret ror pop mov jmp cld out ds sbb and push adc mov popa out pusha add lods add sbb and lcall sbb sbb out rcrb push jge js xchg incb aam mov mov pusha xchg jo cmp in mov decb push xorl aam cmp unpcklps out (bad) ljmp aam popf popa leave add jb clc push pop mov pusha cmp inc or jo mov gs pop nop enter movsl and cwtl imul cwtl pop fmull mov mov lods xchg in and lods insb (bad) pop cwtl in add daa cwtl lret pop cmpxchg mov pop (bad) cltd or push mov sub push js mov jns aas dec add inc pop push cmc ret rclb dec or leave mov dec addr16 and sarl mov lods faddl insl cltd dec int push iret push adc sahf add or mov mov mov (bad) aam js loop dec (bad) jnp inc push loopne dec sub xchg loopne jnp call mov mov cmpsl adc cmp jl enter shrb out dec iret sbb leave push or xor pop fnop movsl sahf mov (bad) mov hlt inc jl test pop icebp dec imul je jb sbb and add mov rcll in pop and and rcll mov push fs cmp mov xchg into push pop xchg adc xor cli push push xor pop jle xor sbb in jg aaa nop push xchg mov sti (bad) sub loopne adc inc lahf mov roll or (bad) cmc xchg int3 lret xchg add mov test int3 div or cld mov mov les test adc js popa mov in outsl enter jb dec jne cld push push sub popl pmaxsw adc arpl je iret js push mov adc adc nop pop fsubrs pop arpl add jl add mov jnp mov mov pop cld xchg andl pushf push mov or addr16 jne (bad) cmp or ja sub pop in test xor leave int js add sbb mov (bad) or lret cmpsl scas xor mov mov pop jbe aam lods gs sub xor pop jge push jns mov lods adc movsb cmp test add icebp jg jbe add cmpsl add shr adc push (bad) enter icebp call enter add add lock loopne aaa adc pop call fucomip mov mov jb daa jl cltd mov or mov sub add and mov pop mov daa int3 int3 and lret add adcb jp sub mov imul jne adc or loopne inc daa jmp push imul push (bad) xchg cmp sub adc sub in cmpsl (bad) sbb mov test mov insb sarb mov cmp in loopne lret cmp push adc pusha loopne adc mov cs (bad) jno test jns mov sbb popf cmp add mov loopne or into mov sub iret adc sub ficompl xchg adc les lods xchg hlt mov and sbb sub nop and mov fdiv push cltd cmovp jne mov je icebp jle push xchg push xor rcrb mov fnsave repnz mov lret pop xor faddl xor mov or inc inc jl mov mov enter pop dec rclb sub cli int3 loopne arpl add dec test xchg hlt jnp fwait cmp es cli fadds adc fistl dec insb lods mov add xor jb enter jp and movsl fwait ds dec lods sbb rclb sub inc out jns pop rcl lahf adc movsl push mov and pushf stc cmp fcoml enter cmp loope (bad) pop and lock mov and inc add scas cli addr16 dec mov inc inc les cmp sbb js mov lds (bad) jmp aaa and mov or and popa aaa add sbb push mov nop loopne fs mov lock mov inc jp mull enter mov orb mov test insb js xor add push int adc mov or andl (bad) fcompl xor mov dec sbb pusha push mov push cs xor adc xchg jb testb subl mov mov add push mov add xchg in (bad) mov xchg (bad) (bad) push add cmp push add sbb loop fmul add adc push add pextrw mov mov je add push movsl add stc ret pop cmp pop add bound add sar idivl lds and cmp cs jp cwtl pop inc push ds inc add fistpl mov push out mov pop sub lock lds add (bad) cli sbb mov subl mov xchg cmp push mov adc adc sbb gs sub xchg ficomp sbbb outsl jmp addb icebp addb ss dec aad cmc adc movsl jecxz wrmsr cmp packuswb mov int3 fnstcw cmp add outsb sub pop scas cmc jp jns loop xor sub mov ja push lods xor cmp pop xor xor fcmovne in mov adc cmpsb inc mov sub mov rcl bnd (bad) jnp sub add mov pop outsl cltd repz lret push test add xchg add lock in movb fs inc pop ljmp add xchg pop mov mov ja inc icebp mov pop mov sbb pop sub add jmp push test lods sub test pop lret js out pop jmp cltd pop in or icebp pop mov mov xor int3 cmp sub add aam inc adc mov icebp js nop xchg pop mov xlat cli sarb xor or imul movsl add jns jecxz out jl rorb ss rcr nop or xor mov sbb push nop cmpsl xchg mov pusha inc ret insl and add inc dec add jmp mov add fsts inc jl add vmwrite cltd inc add xchg adc push mov mov nop or add pop and pop push xor or inc sub add js aad dec jmp dec inc outsb pop jecxz add test aas imul jno cmp xchg xor pop lds push inc xchg rcl rclb (bad) xchg negb pop inc xor nop adc in push popf xchg dec lock pop add cmp lcall pop add out or test or lcall push mov add sub xchg inc add mov push scas lock sub hlt mov sub addr16 pop adc add inc mov sub cwtl adc cmp dec jecxz jge inc shlb pop rcrl les sub nop cmp xchg xchg nop pop shrb add aad cmpb cmp cmp je stc mov (bad) pusha fstpl data16 push arpl (bad) rorl or jno push nop mov enter add andl and cwtl add sbb loopne push cmp sub lea add out push jo push push (bad) or jb cmp mov sbb mov int pop fmuls stc cmp dec and sub jo invlpg dec movsb enter lcall daa add mov adc jmp add insb nop pop push add shlb lcall and int enter inc fidivrl xor lds xor cmp dec xor add add pushf fadd and lods je subb in (bad) cmpsl pushf adc fdivr push cmp add push mov aad fs enter in adc xchg sub add arpl outsb int lock add icebp enter jnp dec lods add imul jnp cmp popf lds add mov dec in inc sub xor cltd ficom arpl hlt popf mov jmp push gs and xor cltd jl add inc jae mov xchg adc pop or cmpsb xchg leave fstpt jecxz mov push popa mov enter xor push outsb pop pop (bad) clts jmp ljmp fcmove jmp adc jecxz clc daa lret sti jge inc cwtl pop loopne fdivs add sbb cmc mov inc and loope xchg outsl sub pop add test jge int jp fucomi push inc clc push push test loope and test ja xchg sbb add jg enter pusha ljmp mov mov inc loopne sbb insl roll mov repz adc mov or aam (bad) xor and xchg jo jnp enter test pop fwait mov cmp add enter popf pop lods imul fs push pop clc pop sub add or orb dec ret rol lahf ret (bad) xchg sbb inc adc xor (bad) jo push sbb aam add dec test and add je or ret mov add mov pop fdivl or cmp stos and jmp push into shlb and push cmp sbbl test dec inc lock cltd shlb sub push adc ret push mov mov adc add mov pop imul popl addr16 clc rol pusha cmp or sbb xor xchg inc xor lahf xchg xchg push mov mov and lock push test and fs fldl aam mov push pusha inc push (bad) in pusha add popf pop fimull outsl call imul fs pop out sub out add repnz aam ljmp add fidiv call pop xor loopne or pop adc ret enter fcompl or sub cmp push aam pop add jl inc dec fiaddl sub add test call push (bad) xor rcrl ret inc add test roll cld mov int3 repnz (bad) out imul add add insb popf bound mov pop ret mov jo sahf sub sub inc sub jno add mov mov or jae nop cltd es jnp add roll add jecxz cmpsb xor hlt pop cmpsl in push lret cmpsb faddl ja xor or aam test fxam or test aad adc xchg pusha rcrl sahf adc cltd in les push mov loope mov ss mov aam loopne in jae xchg ret sub outsb push cmp lea sbb jne push clc movsb add fsubrp sub cmp jmp and jl fadd or aam and hlt js iret and adc or das lret movsb jb (bad) and subb shlb cltd daa iret push adc stos jl les mov pushf inc mov pop inc fcoml sub scas js add mov ret in xchg or sbb push xor popa jl (bad) fs cs imul xor mov pushf jns loope out (bad) add mov sub jmp mov lcall nop inc sub and jns jecxz andb mov jne and mov sbb out xchg or sbbl inc aaa mov js jo incb jle out call xchg movsb dec add repnz xchg clc xchg mov ror mov in mov test push inc mov stc pushf sub mov jmp dec insl pop push cmp xchg cmp (bad) xor add fistpl inc int adcb lods sub add out aaa imul leave adc sbb aas mov call (bad) adcb dec mov pop sbb or pop faddl cmpsl jl mov add daa push jecxz,pt test cmpsl mov add cmp add cmp les cmc mov je xchg scas and push push adc mov test fdivp xchg movsl or push adc test mov lcall dec add ret mov cwtl pop mov add lock adc pusha cld inc xor pushf test cmp or xchg jl mov and xchg insl icebp dec je lds adc sub hlt fnsave and lods cmp (bad) js mov add push or add add mov pop or lods mov mov push lcall sbb or mov cmp call lsl adc mov pop push fs leave adc xorl xor push cmp and jmp movsl fidivr mov (bad) adc (bad) aaa mov cmpsb cltd loopne jecxz repz pop fistpl int3 and dec mov pop arpl and sbb js cltd jmp jmp in add pop fstp sub jns mov pop into mul xchg xor push add arpl pop or sub cmp and gs push enter jbe xor pop adc cltd or leave mov fwait mov or scas xor push popf fidivl jo test xchg ret sbb fcomps ret (bad) aam or cmp test pop push xor sti call les xor pop in and xchg push jmp or pop imul mov push pop adc xchg js mov adc inc and xor (bad) push cli xchg in inc pop fwait inc mov outsb mov popa pop sub dec mov mov lock addb add jp or jmp sbb adc and test push dec push enter or ss jns bound mov fsubrp sub fnop pop sbb pop into lss add iret in repnz add or push cmp cmpsb repnz push insl inc xchg xor sahf loopne das mov cmpsb mov fnstenv popa push and dec fs push dec js add fsubrp cmp int3 cmp stc push enter iret test cld mov sbbl test xlat and jle test adcb jne fisttp das loope leave push add mov sbb cltd jbe jo xlat mov add sbb jle ret and ror fild and push cmpsl cwtl sahf mov pop jg dec paddsw cmpb add add movsl nop mov clc imul or add pushf scas mov push loopne add mov push and mov xor incb mov stc xor repnz push icebp adc add adc jno cmp fild add jge jno (bad) aam inc and xor pop push test add icebp scas sbb push or icebp add lea add mov dec adc repz add sub xchg sub or jnp paddusw rcrl dec scas adc adc shll add lds popf roll cmc cmp aad sbb pusha in sbb loop adc leave popa pop push (bad) stos jecxz pushl push sbb ljmp xor xor xor adc mov xor xchg outsb sub ljmp gs pop js jnp add popa enter push cmp aaa pusha rolb test outsb test xor test add push push adc and sbb rcll sbb jecxz jnp cmp mov dec sbb add mov dec sub mov rcrb or sbb pop jnp loopne fiadd aam je stc mov xor icebp popa je jl fdivl sarb pop out nop adc pop (bad) cmpsl add sbbl sub iret test xchg add jno or popa add jg aam cwtl dec add jnp add sub adc jmp pop cmp repnz fnstcw orb push pop or and cwtl and mov inc adc rclb cld mov push cmpsb call shr fwait nop ret add or add add imul rcr sub pop add adc lock lcall xchg rorl call and aam xor (bad) inc (bad) (bad) nop push je sub add mov add add or adc icebp bound cltd inc dec mov sbb push sbb xchg popf repz lods cmpb mov test clc or icebp inc jbe sbb popf rol add xchg add insb pop pop rclb sbb inc dec test fiadd cmp inc scas add inc dec or mov scas adc roll push pop push mov or sub xchg mov lods js pop popa push mov mov mov js and add repz and in mov jl jle add fstps xchg ret sbb nop insb sub inc mov mov mov xchg cwtl int sbb in jge fadds inc pop scas push outsb stc out sbb push mov fadds test nop stc out aam xchg je dec gs and mov add rcrl (bad) and inc add dec ret jle popa outsb sti (bad) aam data16 inc nop ret ret pop popa push int3 mov pop test ret idiv pop into adc (bad) aam clc sbb das pop pop icebp adc mov lahf or and call xchg or call mov pop mov repnz adc mov or in pop adc je inc xchg mov js sub add inc sbb jns xchg jo xchg movsb insl or xchg sbb push std sbb xchg add or lcall les or test repz bound es push xchg cltd jl pop inc dec dec mov sbb pop lcall jge ret stc sbb adc mov adc cltd jbe cmp xchg or in sub nop (bad) fs bound jne fildll sbb mov and sbb xor or mov add inc and and pop repz dec cmp add les (bad) xor mov mov pushf cmpb adc ret ret push sbb xchg stos inc mov in xchg lods add xlat (bad) lret jp xchg mov jne fcompl push mov aam or and lock negl adc adc loop xchg hlt add js nop xor pusha adc sub movsb pop enter push test dec push sbb in int push cmpsl add push test das roll aas inc or jle sub jl mov fs adc add push fnstcw test mov sbb inc pop arpl jecxz cmpsb sbb je add (bad) mov and cwtl and mov orl dec out arpl sbb jge and fnstsw push int3 xor test push xor inc add addl sub add bound cwtl add pop cs hlt inc mov mov das add lcall or cmpsb xchg mov mov cmpb out push icebp aas cmpsb fs in adc iret jns xor inc mov insb add mov pop (bad) xor jno lret (bad) jecxz,pn cld add pop jb jg and lahf ja mov pop sarl es les mov lret hlt mov mov dec xor pop add es sbb add cwtl mov jmp adc adc sub add xor or bound je mov sub jo or (bad) xor cmp adc and sbb mov roll fcoml repz test cmp xchg popa pop add mov rcrl lret dec cmc and and int3 mov sub xchg pop pusha push call xchg nop sbbb cwtl adc adc loope xor add flds orl pusha pop xor cwtl test or inc mov clc hlt and adc jae push mov adc fistpll pusha cwtl mov cltd mov test dec inc sub mov cmp mov add adc add pop sbb mov mov jmp rcr add not and bound andb mov movsb sbb xor lods add rclb xchg leave mov js xchg jo test icebp dec enter xchg push jb push cwtl cmpsb inc jo jle sbb xchg push pusha inc loopne jno or sub je test xchg nop jne shr pushf sub jmp mov pop or sub jno xchg (bad) fiaddl add jl xchg (bad) scas (bad) xchg mov xor push stc xor lods shll gs (bad) jbe xor call jmp xlat jg jno xchg inc xor fstl subl test jl test mov xchg pop loopne jmp ds xor sarb pop sbb fsts add mov inc shrl ficompl mov mov (bad) mov mov xchg xor jecxz mov inc or push mov dec (bad) jno je push (bad) dec aaa mov push (bad) (bad) and mov sub adc mov sub movsb aam or loope rolb inc mov outsl add aaa push sti shr sbb insb xchg imul pop (bad) daa pop jo repnz fdivs inc cltd rcrl shlb icebp mov cld sub mov push xor cmp xchg push jb xor pusha cmc adc pusha js or mov or stc or xchg mov rolb sahf fmull jl add scas ret mov call mov jp adc sbb loope push call pop add out pop dec sub dec adc adc nop pop jg les sahf mov (bad) rcl push popf cltd fs dec or pop test aam rcrl (bad) (bad) xchg enter or cmp stc adc sbb mov movb xadd inc sbb notl loopne push mov xor js ja rcl icebp pop and movsb push hlt mov or loopne mov les call xchg sub mov hlt aas xchg sbb mov mov push idivl sbb lret adc inc add xchg push inc mov push loopne mov cli add cltd dec nop cmpsb add popa inc add lods and fildl adc push mov xchg push push add sub ds popa add xor jmp cwtl mov jno mov cmp pushf out iret testl xor sub lods or stos mov stc jmp dec movsb xchg dec xchg add jg (bad) nop cmpsl dec mov inc pop popa and insl xor adc cltd inc mov je sahf or mov pop or repz out lock xor add test dec jb and (bad) push mov pop sub fstpt movsb frstor mov push xchg test in mov pop xchg sbb mov xor jno test mov in xor pop (bad) ret in mov out mov jmp sbb outsl sub sbb adc nop cli loop clc (bad) mov hlt pop mov sbb jle push inc adc mov aad jle int3 fisubr lds test dec cmp out jne fwait clc les or inc add pop jl jl add (bad) movsl outsl push pop jecxz dec mov pop sbb das clc in mov or inc sbb push fisub dec push fcoms xor push scas loopne nop add dec js xor (bad) (bad) xor add and es xor lea leave pcmpeqb int mov (bad) push dec fs lods add sbb arpl mov int scas push fstl add cmpsb sub inc mov sub lret sahf subb push movsl nop mov arpl sub push aaa jp push inc ss sub mov sub (bad) mov jge sub mov les push repnz or mov push outsb shrb fcoms adc xor push aas ja and lds xchg scas movsl adc ja pop xchg (bad) xchg add flds sub xor add (bad) adc repnz dec fs add (bad) push jo jnp pop aas pop inc cmp sub mov (bad) das jl aas jns add mov andb (bad) pop inc sbb enter mov and popa out lods andb cwtl icebp dec in clc movsb cli mov and pop stos pop (bad) adc fistpl pop inc push push cld inc adc sbb ljmp aaa mov add jnp,pt adc push (bad) mov addr16 mov xor test (bad) out dec bound mov dec add roll adc lds pop inc push inc inc sahf adc add mov sarb add flds aas jo add sbb cmp ds push vmaskmovdqu jmp cmc cmp or mov mov in pop push adc int pop mov jo test sub cmpb fistp cltd movsb xchg jo dec inc enter adc mov push pushl xchg (bad) mov sbb cmpsl mov pop pop idiv add rclb add sbb jne push jp sbb rcrl and pop or dec out mov xor loopne hlt cltd add test in inc add lods adc jo sbb clc icebp and push fnsave or xchg pop push sbb test mov into loop stos cmpsb xchg sbb daa je mov jno xorb push clc mov add dec xchg inc sahf inc call dec fnstsw mov cmpb pop push in fwait sbb pop lds enter int3 xor int adc nop add gs pop sub xor or mov in test pop movsl sbb rolb or and repz ret popf lcall lds repnz add divl dec lods cmp sub xor cltd call inc fstl adc ja xor mov lea and adc cltd rorl cmpl rcrl int3 mov insb sbb push test test dec lods xor inc ss fwait and cmp ret adc dec inc xor cltd pushf xor shlb mov loop popf or (bad) or xor jbe addr16 adc movsb xorb dec and and popa fs or lock push xor jl jno (bad) insb sbb cmc push sti shll jge push loopne daa inc es dec pushf orb mov xchg test add ret sub pop dec push cmp leave mov fsubs jno es fs popa push fs sbb roll dec xor adc add adc and rorb push ret movsb in andb sti std inc add or cmpsl rcrl xchg xor hlt add insl xchg and sarl inc jle inc ja xor dec add sbb sub pop incl popa jo mov xchg scas and adc mov dec mov and sub sub and xorb imul adc repnz push cld push and iret pop cmp mov inc add nop (bad) fimull loop sarl fsubl dec loopne cltd sub sub mov add push mov popf add jns rolb jge dec adc faddl xor out cmp jl jmp test (bad) xor adc sub cwtl arpl jns jl jge fstps cmp sub mov cwtl enter mov add cmpb sub sub stc cltd push or jo inc (bad) pop mov dec pusha mov adc mov mov clc loopne,pn dec pusha scas adc and (bad) mov add mov lds add lods adc push dec stos aam notl fnstenv cs push inc cmpb add xchg sbb icebp (bad) test sbb sbb mov sbbl jns roll fcoms fstpt add pushf adc and or sub mov push cld inc add xor ss fidivrl and lds push xor rclb subl pusha dec flds ss out sub mov pop fisubl fist mov dec js int sarl and fisubl addb fstpl cmpsl jns nop xor adc arpl fidivrl sub sub push mov ret push out mov movsb les xor xchg scas (bad) jle movl insb adc xchg les std inc mov cwtl dec jg push shlb addr16 cmp xor and or xor sub fnstcw test mov sbb cmp pop sub mov (bad) mov mov sub scas or add enter movsb mov pusha inc leave sarb hlt sub cli test pop cmovne dec cmp hlt ror pop mov mov jl mov sbb pop sbb icebp mov xchg mov cmp push add push add pop das inc xor fildll fnsave ja cld jno loopne inc pop mov dec stc dec pop adc jne dec add mov arpl dec stos insb adc mov (bad) mov pop dec sbb cmp and aaa pop and mov xchg cld mov cmpsb adc xlat pop mov xor negb push inc push xor dec int3 mov mov (bad) jno push sbb push (bad) and lahf add ret mov dec jb sub sti dec dec push in add inc mov ds dec or jae and nop lock sbb insb or mull xor adc jne loopne cmp outsb add push fimul in incl mov out pop dec outsl fstpl loope push xor xor sbb mov je pusha pop (bad) adc mov sbb mov (bad) ja add incb dec push shlb jo iret mov shll (bad) scas sar add out shrb insl xor cmp sbbl mov jno fsubl cmp and jnp lds adcb xor cmp cmpsl lret sub sbbb mov pop je xchg xor mov dec push or fistl mov sbb or and (bad) xor pop pop and pop inc pop movsb lock sbb test test aam loop and addl xchg mov hlt js negb gs xor inc push loopne mov movsl rorl xor test pop scas xor add pop add xchg mov add ret (bad) dec fiaddl or push and fdivs mov and dec movsl dec fwait call xchg cmp dec sub pop mulb aam add mov mov pushf in sub fildl cwtl popf addr16 adcl add jmp add lock mov cmp cwtl gs xchg pop or rorl lds rolb mov cltd inc add in mov mov adc (bad) lock adc (bad) or or repnz sub gs fisttp jmp add loope and add xchg mov mov and or and xor pusha inc mov mov add add daa push inc or sahf aam jg fwait insb or mov inc sbb lret sbb mov xor cmp cli cmp push and enter hlt and dec out fldt sub xchg js push push mov sub pop pusha int and dec lcall add pop add xchg xor (bad) add push dec das icebp icebp or pop sbb push mov fcomip shll int cld mov lcall dec pop jno les sub movsl adc imul and sbb or dec xchg mov dec mov xor and out push push fcomps repnz add sbb faddl jle ljmp fsubs lds dec add add push js sub sub fcoms lahf dec and dec sbb clc movsb xchg push sbb std dec sub dec adc xor sub frstor lds mov fmulp mov xchg movsb add loopne or or int3 mov test xor lods xor xor addl ss stos jne loopne lds loopne hlt pusha or or adc js cmpsb pop rorl mov add cmp loope pop cmp lock scas subb jne dec mov jo xchg pusha mov fucomp dec (bad) mov and xchg clc out es clc push inc clc and or add mov or sbb inc and data16 inc add mov ret roll and jg sub cmp insb dec mov lret sub push movsl or es mov (bad) sbb clc call rolb add stc fprem1 pusha fs mov add enter daa in jns adc mov enter mov lea jo sbb pop add adc ror arpl add (bad) fstl mov mov and (bad) sub adc nop das fwait int3 les mov sub inc dec insb push or or jge and add pusha or xchg into jno jle xchg and sub (bad) xchg pop mov add aaa push adc pop out (bad) mov ret lahf jo jle test adc js dec xor fcoml or fcomps call mov push xchg stc into dec aas mov pop pop mov pusha inc cmp push add (bad) jecxz andb lret hlt inc lds scas iret rcl mov jae (bad) mov out (bad) insb and test hlt add push sub enter loope sub pop pop cs rorb insb insl xor adc pusha adc or mov fisubr mov (bad) adc out jb xor cli cmp xor std inc sbb sbb mov mov test insb push scas adc or xor push pushf push inc push inc or mov cwtl jle fcmovnu insb int3 jns inc mov or jge and dec adc mov nop js cltd lcall xorb test enter fadds (bad) les add pop pop and mov pop mov test lock sti lods push cs mov add mov aad cmp nop fs pop mov jmp (bad) adc mov mov inc inc insb insb add fisub mov inc sub inc fnstenv (bad) imul mov andb test leave or idivb std add xchg add cmp (bad) loope jmp adc (bad) mov lock or and mov mov jmp jb popa xor popa push cmp inc int stos mov fwait mov adc or sbb clc inc adc or (bad) or push je xor addr16 jne push or (bad) icebp popf pop adc push fs jle aad orb in cwtl xlat cli or and pop scas xor xor test inc mov jmp or add push xchg stos in lock stc fmuls dec andl loopne cmp imul dec or mov mov cmpsl clc (bad) stos dec or fcomps lret xor pop jl add pop stc icebp ficom xchg nop adc xchg mov adc nop and popa pusha inc call mov popf movsl xor pop js imul fldt push xor pop cmp movsl pop rcrl orb popf std add cmp mov mov ret mov mov outsl (bad) lds pop xlat jge sbb (bad) mov iret mov das mov mov dec lea (bad) xor data16 jne push cmpsl jmp enter mov jnp add pop push xchg jmp cmp (bad) fistpll mov mov aaa sub nop adc and ffree and pop add cmp push icebp xlat lcall insl neg frstor int mov lahf or mov aam push sbb (bad) mov imul and sub mov dec repnz std aaa push hlt out sbb xchg xchg add inc add xor fidivrl mov push jge or sub inc mov mov sbb lods mov call adc rcl (bad) lock cmp mov sub mov add cmp sub (bad) push inc inc mov (bad) mov mov test icebp scas lds movsb enter xor inc xchg inc adc push add fisubl shrb jp dec add (bad) or mov add sbb (bad) mov shrl sub push mov scas lret rorl shrl adc push aas aas add dec cwtl cmpsb xchg mov jnp inc jp xor imul ljmp divl sub stos enter or inc jns add cmp shr cld cmp jae outsb dec int3 add sbb ret loope mov sbb or push rcrl dec roll insl aaa sub stc xor mov add mov push imul mov jg add push add add (bad) jecxz aas mov jns ret and cmp fiaddl jl and test jb sub mov test sub push fldt jne push cmp adc push mov ret pop std mov or cmp add mov cltd jle sahf subb nop (bad) dec sub push or int mov aaa xor iret xchg mov add mov in sbb int fcoms mov xor inc xor inc inc (bad) testb sub rclb test inc and mov jp call js inc sub mov adc cmp cmp inc sbb test mov cmp and push shr mov mov fadds imul fldpi in jnp push sbb subl mov pusha mov sbb pop insl jge,pt adc dec nopl add hlt in (bad) call add add data16 add push int3 adc outsl lahf add pop mov in xor fistp mov pushf add test dec xor xor push nop mov mov out sub mov stos inc add (bad) xchg icebp push rorb xchg mov int3 or jno inc ficom jbe mov and dec cmp je popa fwait mov or mov rcll or mov (bad) jae movsb aam inc push imul dec xor push fldt inc cmp dec jg add add and sti icebp mov add rcrb fidivr xor jecxz fs fs dec sub adc jnp sub dec sub xor mov adc xorb push dec pop inc test cltd movsb out add dec push jp jo loop and mov (bad) jb sbb or rclb or sbb push inc dec cli sub es ret shrb inc add ljmp or sbb sub xor in add test std loop,pn push add add in adc nop xor add mov sbb imul out pop xchg mov add fsubl mov imul shr cwtl int3 or pop mov mov gs push inc add xor mov pop pushf pop add mov xchg and imul dec mov or mov and fnstcw sahf cmp je andl icebp cmp cmpsb cmp es in add or jp add rorl int pusha push test add push push out stos lret cmp or loope (bad) enter inc imul mov pop loopne repnz jbe int3 push out dec jne ret out je test stc adc mov xchg adc cwtl rolb call xor loope inc or sub adc mov sub in and jmp test mov or and push and stos iret test hlt add xchg adc xor out push and movsb mov adc js insb cmpsl popa cmc les in nop insb dec sub pop test movb pop notl jmp int inc (bad) mov jno pusha aad out popl pop cmp cli aaa add cmp insl (bad) imull lcall aas jo pop mov mov inc stos call dec call xchg mov sbb or nop adc mov into (bad) int3 cwtl ljmp pusha test adc mov or xchg jle mov cmc test or mov std jno test rcl scas mov in mov cmp cmp push jge add (bad) shr pop cwtl adc jmp mov scas dec xchg cwtl inc pop add stos or and add ljmp add icebp dec cmp inc jecxz inc pushf mov push sub mov inc xor addl xchg imul or inc (bad) iret data16 cmp call adc mov lds inc imul adc cmpsl mov jns mov test pusha in (bad) sarb adc inc pop sub jns cwtl jmp add sub addl mov dec xchg jl push sarb lock add mov pushf push pop adc inc jmp and jle push push rcrb lds mov adcb in adc rcl mov xor and lcall add aad in jecxz fs mov loope inc or push xor mov in int3 cs add lods in xor insb fmull insl sbb mov int3 (bad) xor xchg or add imul cmp movsb pop mov inc mov pusha dec inc lcall and cmp dec aas adc gs loopne mov mov cmp xchg loop jg mov sub jo or das stos js jecxz or xchg push and lcall mov inc jns or inc pop clc rcrb push xchg fsubrl aas leave and inc fdivrs cmp or fcomi ds add outsb jmp jbe xor in lock and out repnz add mov lea test sub mov xchg stos shr xlat fdivrs mov aaa in test repnz rcrl mov loopne and test mov mov add xor jl test xchg rolb xchg xor inc test dec stos ja js aam rorl scas (bad) pop inc jno jmp leave and push movsb and cmp loopne push inc push push add iret addb loopne in adc or not ds test or mov push mov mov sbb sarb xor pop xchg incb aas movsb mov sbb sub push dec pop or and daa pop inc rolb and sbbl cmp fstl (bad) rcrb scas flds fstps cld (bad) int3 mov lret xchg insl mov and mov pop add cmp or vpmaxsw cmp lock flds stos sarb rorl jmp aam mov leave dec sbb add add jno pop sub jae and (bad) icebp mov rclb or cmp pop inc (bad) cmp out (bad) xor xor jae test clc cld sub xchg xchg add ret popf adc movsb dec pop sub enter inc or pushf (bad) adc xor dec cwtl cmovg and xor stos call sarb shrb add insb xor sbb (bad) sub les in sbb test push movsb xchg push add out push stos int in lds lock and clc adc mov jbe js dec jns cs mov inc adc adc pop and fcmovu andb loope cmp mov mov pop xchg mov jno out hlt xor adc jne out in das jge lods inc add stos call je sbb js loope jne rclb push ret ja (bad) adc bound in dec insb pop stc ljmp sub stc adc (bad) inc int (bad) add mov (bad) inc mov add fcoms mov outsl mov (bad) mov in inc mov xor pop dec dec mov pusha test les adc push insl ficompl sub sahf aas dec jmp hlt xchg add dec mov pop aam xor (bad) rorl adc or ss call push loop (bad) cmp mov or push notb je lea xor ficomp enter mov stos and dec cmp xchg dec sbb (bad) flds add sbb mov push pop lods mov push jo and loope adc mov mov das femms stos pop lock and loope jp xor es push test mov inc dec jl jns mov adc shrl mov ret out or xchg test pop add mov notl scas mov rorl lret enter call cwtl inc sahf cmp sub mov cmpsl lods dec pop inc jno xchg cltd pusha inc mov mov test adc cld daa rorb and and out out mov sub sti and pop js pushf stos pop in and jno xchg fmull arpl mov adc loopne call push or jge mov jae add fistpll add pop outsl andb fs outsb cwtl add add mov scas xchg adc cmpsl (bad) mov rol ja call mov pushf cmovns test rsm adc cwtl or es dec add ret test or ljmp psubsb xchg and jo test lret sub stos in int3 pop jae jle mov popa mov push or rcll addb int lock and lds jge mov jns inc movb mov test xor cmp into lret mov xor hlt test js icebp lds shrl jg dec daa xor pop and and pusha mov (bad) pusha dec cmc nop ret xor adc xchg dec inc and and test popl pop ljmp xchg mov add ret (bad) fmuls sub inc orb pop mov in movl clc mov add jge mov mov jo insl add pop daa sahf roll xchg ficompl pop in xchg adc add add add mov xchg add shl or push xchg vpshuflw add push ret and xchg mov in insl inc rcr fiaddl push nop add in sarl insb sub dec jo mov adc insb cmp dec push in cmc xchg je inc or call out mov fcompl (bad) inc test push dec scas sub pop add xchg mov out cld and fnstcw enter addr16 pop call and jl (bad) nop cmp scas mov pop in andl repnz jo ffree inc and adc cmpsl adc cwtl repz pushf enter push adc fs mov (bad) pop push pop or pop or inc add ja jp jge test in mov cwtl or test and dec cmpsl ret dec jmp cmp cmp xor js mov and test cmp or in xor aam test rcrb nop call inc push js add js mov ret mov test faddl int3 rcrb dec les xor mov sub les push mov or lret test and jb push jg lret or sbb (bad) in xor jge jno cmp add pop adc or inc mov insl or jo and xor xchg mov xchg movsb push daa scas pop movsb adc mov add leave (bad) and pusha xor xor hlt test sbb rcr jno outsb jo mov xor not fstl add mov jg inc rolb adc or enter addb jb mov mov mov cwtl mov xor in mov cmp out push rolb sbb out inc cmp add add test dec mov pop imul fstpl popa xchg add jae (bad) popa nop (bad) int3 cmp xchg and loopne mov xchg rcrl rolb xor push sub call or xchg xor faddl mov push sahf test mov and jb adc aaa test and cltd es call xor inc push (bad) paddsb mov in shlb inc jl ljmp in je loope or lods sbb mov sahf jo sub aas pop into sub jnp mov pushf mov rcr push inc dec loope in pop sbb insb mov push js fcmovne pop loopne sub add push push sub clc das and fs cmp daa inc lock out and pop ret mov and add nop sub or and add dec ficoml leave fild fstl jno cmp das and (bad) mov jmp cmp and iret jl push mov or add fnop clc push fisttpll add mov test pop jmp mov xchg adc or pop push pop mov or pop cmp mov orl mov loop test and cmp jl cmpl (bad) jecxz pop or mov ds dec dec mov outsl loopne movb inc les lds loopne andl sbb pop loope icebp sbb dec js fwait or push jmp mov in rcl sub sub sbb fcoms sub jecxz nop movsl (bad) outsb jno pop inc dec ret mov mov add pop in add jbe push cwtl xchg mov jp inc imul and clc js adcb leave mov lcall dec mov xorb xchg pop fstpl mov push inc jg fldcw or cwtl pushf cmpxchg or xor in mov lcall mov inc sub dec clc cmp dec cwtl aam bound lock mov test lret dec inc loopne adc cmp and bound and lock rcrl add cmc das push hlt cmpb sbb lds or xchg cltd aas jo je jg not mov out fnstsw shll sub add fwait std pop je movsl stos add adc mov clc bound dec add hlt push sub push lock or hlt out or xor pop and lret in movsb mov cmp loope cmp mov mov xchg ret adc pandn fstl nop pushf hlt bound mov pop (bad) repz sbb adc xchg mov jge das xor hlt and (bad) cld jle dec mov js repnz mov orb je faddl out push es int3 adc es adc hlt add xchg inc push movsl int3 add leave cmp jns les adc mov xor icebp outsb inc mov xorl inc lds xor mov inc push call mov rcr push das jne or push bound mov sub repnz inc adc dec sbb inc (bad) (bad) (bad) sbb jg test rorl pushf daa bound fsubs test cmp movsl or imul sub xor popf adc xor out sub push xor rcrl cmp popa cmp sub les dec mov decl adc fidiv mov pushf mov test imul daa fmull rolb dec lcall mov or sub sahf aam cmp push in add ja test stos push xor scas ret roll clc inc dec imul mov leave pop sarl mov bound xor mov ss mul mov fwait push pushf testb jb andl jns sub lock into inc inc adc or repnz xor mov pop jae add add (bad) daa out lock mov lcall cwtl fmull loope dec loop xorb xchg xlat xchg sub jo add fnstsw ja movsb repnz or pop sbb mov cmp adcl and or jns xor shrb and and cmp xor pop (bad) add data16 movsb ss pusha add push (bad) dec jl or jbe or sbb leave rolb in pop mov fwait cmp ja inc loopne add fistpll inc cld xchg jae add push sbb cmp sarb xchg stos out jge cmp and add ss sar xlat cmp push pop rcll and adc inc call cmp and or ret sub roll jo ret pop xor dec mov aam and sub adc test adc das xor pop sub cmp mov xor repnz add xor rol aad add dec fnstsw jo fwait jbe leave pop shrb dec xor jbe bound aad sbbb xor js sub icebp mov push mov add xchg int cmp (bad) inc call test dec repnz fidivl dec fiadd xchg repnz pop mov mul out fdivr sbb cltd test (bad) lahf dec push mov in lahf adc xchg scas add ss push (bad) xchg test cmpl hlt or imul push sub dec hlt add sbb push stos or lods add sbb cmp int3 add (bad) dec dec inc pop leave pop add and cmp in daa xchg mov iret push pop popa sar clc pop test ljmp dec sub insb cmpsl xor sbb mov sbb cmp or xor cwtl adc hlt andl movsl push cwtl mov mov sub pusha mov mov lahf cli pusha push movsb fwait add test inc adc mov mov push sub xchg cli fwait ret leave adc mov enter sarl sbbb lcall dec inc (bad) xor mov jae nop xchg or lcall mov imul add imul dec sahf or inc loop dec sub pusha jge clc scas call xlat stos jne dec ss push jle es test iret mov popf (bad) les je aad pop in inc gs mov cwtl add or dec inc ss addl in das rcrb adc (bad) jmp pop cmp cmp and xorb pusha mov dec mov lods xor xchg cmp xor jmp add nop xor mov adc out xchg push arpl dec sub add xchg leave adc aad pusha andb (bad) (bad) mov bound sub xor xor mov aas dec test je adc aad std inc add dec dec xchg mov add leave or sbbb andl mov mov arpl inc fs int3 cli mov inc sub pop sbb ret mov xchg add fistpl lahf cmp pusha mov out repz or push das jae call outsb daa pop mov lahf enter adc or (bad) pop mov xchg mov pop xor scas inc movsb push or add fs adcl or and mov std mov mov dec xlat mov mov mov orl inc dec negb mov popa mov xor gs dec pushf nop fisubl fiadd sub add or mov js push push rcr pusha or and (bad) and daa mov mov lods pusha mov xchg int js sub cld inc outsb pusha lods cmp mov ljmp xor and flds hlt (bad) jge dec lods pop mov adc nop mov mov dec call or dec ficoml xchg jno clc enter cwtl xchg in cmp dec jmp sahf adc lods push jle mov and mov in in push pop out aas das (bad) fisubr dec nop movsb mov pop jbe dec test ret and popa ljmp add cmp add sub sbb pop inc mov out popl imul sub aaa or or ret iret stos push xor jno add or cmp mov jnp or xchg push push jmp xor mov mov xor push jo mov push cmp sbb lods outsb loop push cmp lods pop push mov pop les roll mov adc fistpll add test xchg inc add mov rol adc out mov mov or fidiv cmp mov nop insb pop in xchg mov push xchg push cmp mov adc js or jne sbb jns push mov mov adc shll imul les add inc mov imul rcl sahf popf add xor jb imul or test ja and stc gs push inc shrb out adc mov cld adc nop inc decb mov pop adc cwtl xchg mov pusha sbb imul add or xchg adc xchg fldpi test cwtl mov rcl je or repnz dec loope inc js adc xor stos jns and adc pop in dec enter sbb inc adc xor inc jl jo out in dec ret orl jno sub mov add fnstsw cmp dec push xchg add pop jno or add fs dec add pop inc insl lods add inc sub inc icebp mov cmp xor stos pmuludq out and nop aas sbb in mov mov pop shrb js (bad) testb stos imul mov and clc into adc add (bad) aad pop stos push popf and inc fldl add movsl cmpl jo push mov xor not adcl fwait cmp add test cmp test jo rcrl sbb daa out test push jmp sbb shlb add les fildl pop test movsl (bad) aam int3 push addr16 or cmpsl adc insb push inc imul jb and add pop mov push dec loopne jns fs mov mov and cld push inc fsubrs test sub aas aam in add and cmc andl popa in add (bad) mov fsub stos cmp and push jbe mov test scas sub xor xchg sbb dec int3 mov jno cmpsl push mov xor cmpsb movsb xchg ret fdiv push adc jmp lea xor xchg jbe add outsb cmpsl mov or and xorb lret cmp das in sub sub push test inc and dec out add mov mov fidivl xor jecxz mov shrl (bad) add je call xor add jmp xchg (bad) dec daa cmovbe jno je push pusha xlat cmp sub outsl in repnz je pusha ss jo (bad) mov in scas stos xorb int ds insb test pop imul loopne sub mov ljmp cmp lret sbb jne fcoml test add add nop sub pop push xlat cltd mov sbb popf jno mov popa aam push jae ds lock fimull mov push and loopne pop xor cmp in movsb test test mov fsubl clc icebp mov pop xchg test lcall inc daa cmp jne dec jns aam push pop insb adc pusha mov jl enter mov adc sbb jge jmp popa andb cmp push lods add (bad) dec (bad) fisubrl adc insb xor call call in ret enter xchg sbb (bad) mov popa test frstor das pop ss lahf sub test pop jo mov call or nop icebp jl pushf lods js adc in push add (bad) outsb lds dec dec mov mov ljmp (bad) in sub jno nop out jbe inc je fs or mov in pusha pop out add fiaddl or test add (bad) sub sub inc mov xchg xchg mov and mov push jge scas iret imul (bad) shr cltd dec cmp xchg lock cmp int3 jb les enter pop inc and and add sub in (bad) sbb lahf jl test push xor test jecxz inc or jl fcoms xor adc imul adc out loop dec mov sub push ror mov notb jp jl leave xor mov (bad) nop inc push aad int adc push loopne dec in test pop mov sbbb ja shlb xor mul js addb test movsl mov add add dec pop xlat or jge stos inc addl mov or call sub lcall outsl loop add sbb shll pop xchg dec xlat sub adc aaa inc add push loopne mov push ret addl test movb (bad) adc add iret push aad je jbe sub push pop fsubl insl mov or ret fyl2x pushf dec pop clc pop loope inc jbe fs loopne add add insb cmp push mov in adcl and nop movsl add cmp sqrtps cwtl add in pcmpeqw enter addl xchg mov push je pop sub mov es pop mov icebp add mov adc scas insl test movsb mov in push inc mov add mov repz popf test lods xor dec fs sub (bad) in xor mov loopne setne (bad) in sbb inc test (bad) push jo add fdivl inc inc jl sub mov dec lock pushf pushf push sbb adc or add inc test imul je sub or nop adc push clc push add (bad) mov jle fisubrl leave jno nop adc hlt or out ljmp imul (bad) adc rcrb into xor push mov roll sub mov jns fcomip pop mov dec sub mov inc mov sbb jo fadds (bad) outsl xor jge fs sub adc loopne xor ds add push lcall fwait add cmp pop xchg mov inc push test xor mov jle sarl fs xchg aam (bad) stos fildl add mov and sub cmp (bad) add add daa fwait mov pop lret dec xor add pop add (bad) cmp jecxz fdivs shlb sub mov adc adc xchg jns pop xorl mov dec dec adc or sbb out enter (bad) dec pusha sahf xor pop xchg jb mov adc cmp push jnp,pn fadd mov inc fmul inc pop clc lret adc int3 cmp sbb xchg rcrb jae scas or arpl mov inc push aaa push sbb push mov adc std add dec jo cmp push pushf out sbb add lock divl jo mov or xchg (bad) jnp in cwtl int add js into shrd xchg inc or push xchg cmp incb fs add cld push mov mov cmp cs insl cltd cmp adc aaa xchg add call je adc xlat ret int3 sub pop sub dec das sbbb push clc js mov je aam rorl and dec and jp or add popf dec dec or (bad) jns ds sub mov and mov adc rclb pop out sub (bad) jns pop dec cmp and inc add (bad) mov mov (bad) in sarl dec add jno,pn scas subl xor and and or loopne mov imul jo add test sahf mov movb clc shrb jl push (bad) adc test mov call ljmp fsubl js (bad) jo cmp and mov jnp in mov nop sbb dec lret cmp inc adc rolb movsb jl cld or call mov inc les and mov sbb inc fcomps mov pop jecxz adc push xor xor and mov xor dec dec and (bad) sub sub mov loopne shlb push loopne js ja cwtl sub fist xor dec push push xorl ret pusha dec loope aam test ret xchg push fs mov push xchg or adc pop or psrad sahf inc push incb (bad) mov cwtl outsb push popf cmpsb nop xor pop sbb sub cld xchg inc call jle inc push in xchg inc fcoml sbbb dec sub movl add sub loop outsb ss mov icebp dec mulb or adc insb push insl pop cmc sbb jp stos fistpll rcrl cvttps2pi test imul jns jae out ja jbe mov jecxz dec xorb lods xor sti ret mov dec icebp add mov push loopne dec xchg scas repnz jno fdivl inc mull int3 jo adc shl xlat (bad) mov sbbl mov adc or dec outsb clc add dec add jecxz sbb cmc xchg mov pop push dec jmp jg push adc (bad) mov daa mov popf sti mov jge push mov test nop mov sub push inc xor adc push sbb sbb or mov (bad) (bad) mov cmpsb lock sbb rolb mov mov stc out add imul mov xchg inc arpl rol sub stos loop push cmp xor iret pushf cmp mov scas sub mov dec cld divb fdivs rolb in scas add inc lcall and add xchg lock sbbl sub nop adc cmp into xor rcrl rclb dec les aam mov or addr16 add cs mov jmp sbb outsb cmp enter cmpl pushf and dec or sub inc pop and cmp cmp sub mov ficoml and int3 movb mov pushf dec fldcw sbb pusha cwtl sub xchg out sub mov adcb stos jl jns mov hlt idivb cmp and sbb sub mov insl shlb jle add mov sub js je lods ljmp arpl pop adc sbb popa les pusha mov (bad) data16 mov push js add ss test addb xor inc or or push loopne insl adc xchg sbb mov nop or (bad) jmp sbb fsubs xor dec jp movups jle sub dec clc ret adc dec inc sbb or insb jno cltd imul fcmovnb mov add jp (bad) cld loopne fsubrs and xor (bad) stc add mov test adc xchg test mov leave adc push add mov or sub mov cltd pusha or out and bound push sarl jo test push test dec sbb xchg jo rol push sub repnz and and jle xchg push adc ret sub and mov pop mov or adc xor inc inc repnz ror inc les icebp push cwtl mov mov (bad) cmp std insb subb mov xor inc jg mov adc ljmp incb pop (bad) adc ss adc or je xchg faddl mov mov xchg (bad) repnz push xor std mov xorl mov sbb or push xlat cmp xor and or xor nop cmp xchg mov ret or and mov popf xor je rolb push cmp insl outsl push adc aam nop or pop movb (bad) inc (bad) jbe nop sub int3 pusha xor test je adc sub adc cmp xchg mov loopne scas test inc es clc mov lret jecxz dec sbb push push popa push lret xchg nop pop pop data16 mov out and sbbb push push jnp xchg arpl sbb push mov sbbl push (bad) xor mov jecxz,pn mov pop mov or popf xor into xlat or xor std mov jmp cltd fadds sbb mov or sub mov jecxz dec das stos adc inc adcb add icebp movsl adc add adc shlb repnz repz mov mov dec stos pop fldenv add (bad) rcrb pop movsl fnop shr je add mov ret cmp mov out andl pop xor and into adc movsb pop xor pop pop mov pop ficompl add jae push das jle push cmp andl inc data16 mov lock jl adc push mov loopne (bad) jne std inc push add sbb inc sub testl sbb xor xor mov adc pop je or roll sub mov das inc movsb sub and and mov jno lods jbe cli dec hlt (bad) xor push outsl dec sahf daa mov or and inc loopne add in mov imul push push mov or testl fadd adc stc mov xor jp movsb add dec mov add imulb fisubl les adc adc pop xor add mov dec jp add cltd pop sub dec pusha les inc and loop imul cli mov xchg dec sbb arpl add jle cmp mov fiadd mov or pop hlt add nop sub lods mov aam negb cmp inc push or adc mov cmp sub loope or jns bound xchg fstl xor adc mov lods aas mov and sub jmp or ljmp sub mov ret pop movsb xchg push mov push dec (bad) jb dec stos scas into dec adc and jp xchg dec mov inc test (bad) std sbb cmc adc pop push jmp cmp or repz es insl or aam mov lods jp inc jnp xchg jge enter cmp xor mov and lcall xor jp cmc sbb mov fwait jl loop add jns test inc inc add call push or icebp popf arpl add nop sbb mov adc adc push std fistl sub mov cltd sbb pop es push push add cmp dec or addl pop add jno scas sarl push orl fistp push rol dec pop jp add push clc aaa mov jmp xor inc test roll les adc add mov (bad) pusha inc sbb loope insl in mov push sbb mov loop xor stos icebp orb dec movsb dec orl dec mov or sub xor ja (bad) das add sub and jns ficompl jle dec mov jnp add xor jle push sbb jo pop rcll xchg sarl adc adc bound out push jne dec shl lea jb dec adc cmp imull add pop mov jnp and cld fs add stc jmp sbbb and sbb insb hlt fcoms fucomi loop mov lcall mov push or (bad) mov jge icebp sub push xchg or jnp xor push push mov lahf xchg add test xor jp and xor out lahf xchg jg xor into repnz push mov add scas sub mov add cmp mov cmp ja add frstor fildll mov inc mov fstps fnstcw push push in (bad) iret xchg add icebp jmp inc jp adc xor mov adc movsb out repz int push insl and test xor xor pop lock mov sub xchg fisttpll sbb (bad) jle sub sti inc or cld dec add (bad) les dec es je in and ljmp or and cmp scas jb imul cli aam xchg push mov and jp test mov fs sti nop inc inc adc or push out push in jp add mov rep (bad) xor std push sub add add mov fs test mov cli mov pop xor std dec call roll movsb inc lods adc gs movsl adc and mov sbb jbe add pop inc mov fs adc add imul and xchg rcrl mov out jnp orl xchg mov inc xor mov movsb and and (bad) jo imul jge and xchg dec push add shrb pusha pop inc (bad) ss add test or dec cmp aaa inc jne push dec sbb or lea mov push loope into adc sub cmp xor sbb push mov cmp xchg (bad) push cltd or mov shr push adc movsb mov xlat shlb cmp jne add push dec invd xchg in cmp jg (bad) movsl add test idivb xor jmp pop out cwtl or inc and cmp xchg sarb push pop sbb icebp mul test pop shl sbb sbb xor cmp cmc fildll rolb mov pop aaa addr16 sub adc inc (bad) push add mov incb ret clc loopne loope dec shrl sub rclb adc mov bound popa clc sbb daa and arpl lahf cltd push gs cwtl lock addr16 sub mov dec inc out add jl mov push in sbb pop outsb and (bad) xor or cli imul outsl faddl aas ds inc test dec mov cmp fiadd (bad) push sbb or lods or cld call push jmp into lock push jge xchg negl ja add inc jge mov adc push push or or inc xchg rdtsc and push repnz jecxz push pop addr16 push pop sahf or and push mov push hlt mov adc push jl loop (bad) jbe mov sbb pop push pop fiaddl mov (bad) push jle and ljmp cltd jnp cmp mov mov sub (bad) pop mov mov mov ja fildl pop lock jno rclb cmc xlat add fistp (bad) ja das dec pop jns pusha out mov aaa dec shl addl fild negl jne push and ja push adc ja jno jne sub fmuls cli mov cs and pop push dec pop scas xchg pop sbb or test lock sahf sbb jns cmp dec lea push sub and js mov mov sub sub aam xchg adc and push adc nop and mov mov mov insb or rolb adc mov inc adc jp ret cli dec dec loopne xchg xor push adcl subb jmp sarb jmp sbb mov out mov push inc mov push fimul add push or adc scas dec add mov mov and xlat push inc pusha add pop mov lahf hlt and push inc cmp xchg (bad) cmp mov rcll dec (bad) xor addr16 pop rclb repz in iret arpl xchg aas adc xor cltd xor inc fcoms cmpsl pusha mov inc xchg (bad) and ss pop stc dec jb jae jg lahf movsb and push hlt or mov lahf jns cs je scas std rclb mov (bad) (bad) mov fldt scas sub pop mov mov in lcall loope test push subl mov pop and xchg jge mov inc push pop cld pop nop iret or jnp repnz xchg pop cmp jg push pop add lods xor stc adc cs cmp ljmp and out mov pop push cltd out loop cmp lock sub nop pop cs imul loope rcl jmp pusha pusha pop sbb dec and dec add dec sti (bad) dec mov divl cli xchg divl rorb mov std push pop rcrb loopne out aam push cltd ficoml mov push inc aas xor pop repnz sarb cltd mov pop bound (bad) repnz pop leave pop jns and mov push xchg rorb ds mov push addb std in or jecxz mov daa ret loop js xchg enter popa call ljmp movsb decb xor push push out in xchg pop lret xchg rorb push out sbb pop lret mov or jmp insb dec pop (bad) fisttpll sarl mov jmp sub movsb mov push cltd cs aas sub pop jo push push pop mov xor push dec pop out fdivl pushf movsb jle xchg xchg idivl jnp jmp and scas test sub pop xchg cmc cmp repz cmp pop dec mov push and push mov add jmp sbb aas sbb in add shl jmp sub pop add in fildl or jnp mov xchg xchg push and add adc or gs popa call les stc cli pop xor lods cmp dec add pop jmp add xor mov into xorl jno test (bad) movsl sti ja popa enter push push push jnp add mov add ret aas rorb ljmp xchg stos or mov xor enter sub out adc stc pop sub pop cmp movsb daa dec add (bad) leave (bad) (bad) testb rcl out dec push add not xor push add or xor mov push imul add push sbb aaa or mov mov or insb or pop mov push adc sub in push int insb dec shrb jo push es xor add sbb idivl cmc push insl mov popa jmp sub mov pop or popf inc out in psubsb push xor mov pop add mov sbb in xor xor add into pop rorl mov addr16 ret loopne add push mov push or mov sub jbe (bad) sbb or inc sub ds mov gs test ljmp jp jg sbb add sub inc iret and pop push aaa fwait mov in out shl not dec int3 xchg dec push dec in leave or int push sbb or (bad) ds cltd add nop decb cmp enter fs sub pop push add ja hlt std xor rolb aas push pop push xchg sbb push inc les mov (bad) mov ret das jmp dec jp add push rcll incb in pop jle inc cwtl mov pop add lss inc sti repnz loopne add cmp mov pop cmp jl xrelease add rcr add pop rcrl xchg push or push sub adc adc mov out cmpsb push or dec loope (bad) mov nop inc pusha pop push (bad) mov popa push pop jb lock or mov push mov loop repnz add mov pushw lods add push scas mov mov mov adcl outsb loopne adc mov xchg inc int3 lods aas add adc add fldl inc imul fidiv je (bad) pop js dec repnz xor xor jns mov sbb inc lods subl nopl call inc fsubs pop adc mov add aaa sbb push push xchg leave xchg imul mov dec mov mov outsl sub ljmp ffreep mov addr16 shl pop or in fiaddl pop mov sbb cmp pop cmp add movsl out add mov fdiv mov jns int3 lds xor gs cmp lcall mov or clc xchg pushf rolb js and in stc in and addb inc les or mov add mov pop push jl add mov mov inc movsb rorb out xchg sti add test push push (bad) aaa js sbb mov jnp fucom inc mov ljmp enter mov cs mov dec ja push popa cld stos sub mov and xor xor rol iret add pop push jbe bound fnsave and movsb test mov mov movsb lret mov xchg or adc mov arpl jns fsubl adc int (bad) cld push loop addr16 push orb or cli lret fs push mov ret mov nop or data16 outsb jmp mov pop xchg out adc aaa cld cwtl rclb add gs rorl pop mov enter or jle mov dec mov push or jns frstor cmpsb add mov (bad) nop push mov inc inc jns aam cmp ja cmpsl addl out aaa pop nop adc movsb mov and and xor mov add sbb pop fdivr and jns loopne std addr16 sbb cmpsl dec add mov inc mov shlb inc push add push jae call das inc orb pusha subb add sub sbb fistl or xor add jbe fild adc or orl adc mov xchg aad push mov xchg xchg orl push xor in sbb and dec popl orb and xchg xor lds adc lock push mov inc loopne push sub xor mov test repnz (bad) addb xor and (bad) or add int3 adc aas sbb mov pop mov sub mov js add addl or sub push add fisttpl aaa adc push xchg fdivrs push stos int3 sbb out push add dec or js add sub and repz mov or iret sub cld add and jb inc pop mov lret mov sub stos subl jmp push sub in add xchg cmc cmp xchg out inc and add test add pop cmp iret lods test add lret adc or xchg and int3 add xchg aaa loopne and sub enter adc xchg adc dec and cwtl xor outsl scas xor xor jns push mov xchg (bad) js push aaa or cwtl sbb cwtl inc adc (bad) addr16 or push dec das (bad) iret aaa test adc dec add add cmpsb xchg ds nop addr16 or (bad) mov mov test cwtl dec add aam insb xchg lods add inc fs mov add add fstps les pop aaa mov push add pop dec cmp lcall aad and pop and push cwtl adc into es inc mov sbbb ffree loop cmp ljmp pop scas add jp (bad) or mov pusha aaa inc dec test adc fs jno and and jp inc xor andb aam or pop cs stos and mov and adcb popf lret mov jb sbb lahf add add add mov add pushf sbb imul pusha mov subb or ficompl cwtl mov sbb cld add and scas inc test add jo adc sub xor add xchg es enter lret or jne nop cld xchg jl fstps pushf mov push pop mov and adc aaa mov sub sub inc iret das sbb add lcall scas fbld pop pinsrw or dec add aaa fisttp push test lret stos ljmp scas inc in into push enter sbb or add gs mov xchg sbb sti bound sub adc popf xchg xlat ljmp pusha cld add pop pop cmp dec insl xor (bad) mov push mov pusha or hlt add fsubs mov leave and add cld das sti icebp add sbb cmp ss ds xchg add mov std xchg xor add popa inc test sub inc test loopne mov push or dec mov push cltd fsubl mov xchg add pusha push sub lds arpl loope add lret and test xor int3 nop js (bad) fcomps jnp add push orb mov jns gs adc or push pcmpeqd xchg scas jecxz push dec xchg loop dec mov or push add mov mov dec xor dec jbe xchg pusha imul push xor call mov loope and pop cwtl adc inc cmp rcrb dec xchg adc fiaddl or mov outsb mov mov loop jge xchg push push or jle lods sub push add jge mov js add xchg push cld mov and cmp add sbb push xor jmp sbb scas enter sbbl cwtl mov or jo or adc clc or xchg adc sub or dec pop xor imul aaa jbe inc dec test pcmpgtb xchg add xor ljmp xchg dec nop xor fisttp xor cmp jno add add nop sub add decb (bad) xor xor shrl mov scas or sub les mov and and mov and dec jae add fsubl mov sbbl andb mov adc pop adc in or gs fisttpl and or mov mov pop mov and pop subb enter cmp fcomps add inc out xchg pushf xchg add push adc mov loopne jb loopne in sldt cmp push xor cld aaa flds sbb xchg std addl repnz enter sub movsl loopne clc cmp or sbb sahf lret in mov mov mov and stos add sbb dec incb mov rep enter jbe pusha into add data16 jmp mov out loop scas test pop lea lods add enter sbb sbb ljmp xor xchg sbbl rolb mov cmp mov in jo aaa dec dec cmp push pop xchg test and mov aas add inc out lods sub fcoml jns inc xor adc and leave push loope xchg jmp push shlb jno xchg comiss ffreep or mov xorb add push push jo and cmp add mov cwtl es js cltd pop add clc sbb rcll mov fistpll adc mov push repz js inc es cwtl or mov add stos mov vmwrite or add pop xchg jns shr fcoms adc (bad) lock imul call pop pusha mov push xor push add lds lahf dec mov xchg call xor mov cmpl mov les addb insl sub (bad) in or jo jo outsb fstp addb sub pop jne xchg cmp mov and aam lret outsl and lret adc dec and fiaddl jecxz nop repz negb (bad) inc (bad) dec inc rorb mov aaa fwait push pop addb popa push dec xchg imul or cmpsl test adc and movsb cmp sbb mov add push rclb add pop push mov inc in loopne shl xor fs fmuls inc sub enter xchg xorl std mov adc mov cld imul inc nop addr16 insb push stos mov daa and jle sub mov add loopne and addl or jecxz sbb pusha mov or or xor scas mov test or cli sarl xor push adc sub loopne jecxz adc repz leave add sbb das in mov loop int movsb stc add pop or mov mov add sbbl mov fwait inc push call cmpsb add jno cmp add iret scas cmp inc lock cmpsb sub cmp dec inc mov and pop lock add push test cmp movsb jmp or push popa inc jl pop mov in out jo pop add test inc push or jge mov cmp subl fsubrs mov add hlt inc pop mov jo push sub add mov pop test sbb mov push or sub imul add addl dec jo stc xor imul andb test ss mov nop in push push test lods adc add mov stos into inc or popa push mov sbb sbb push sbb int fwait sub push xchg lods xchg fadds push jecxz test cmp nop and mov aas subl lods add sbb add bound hlt pop mov push and add test xor sub xor adc scas imul bound cwtl dec or mov jge test std in movsl icebp nop pusha aam les or mov sub inc (bad) lock and xchg mov add add inc inc or inc mov add push inc fs cmp cmp push adc loopne push fcompl add xor or mov insb push or ss test test push adc popf push outsb cld cltd sbb push jnp pop mov add aas inc mov outsb xor mov sbb sbb (bad) test in cwtl and icebp and pop andb test adc push jo loop and icebp in les inc pushfw mov and int3 adc cmp xchg and je lret mov lods shl sub shrb or add imul repnz inc call jns lahf outsb inc test add sub mov enter push jl pop insb movsb fsubl ja loopne jnp add je dec out mov inc cmp or cmp loope xchg inc push jmp pop sub lahf add sub outsl pushf dec stos or pushf adc rcll mov pop cmp data16 jl pusha sbb pushf js xor pusha dec xchg (bad) dec lcall ljmp (bad) jg pusha (bad) adc mov xor jno js lock out push notb or into adc je ficoml repnz or mov adcl and sbb jp (bad) mov inc inc cmp dec push sub sub cmpsl lock push mov add sbb adc sub pop movsb add leave iret pushf xor sbb test (bad) aas fs or inc inc out add mov and test fistpl sub cld icebp add sbb int3 push out test mov sub adc pop or leave cmp add sub dec inc push add pop lods jmp mov ficomp push pushf cmp nop mov inc movsb cld mov xchg fisttpll mov or xchg into ss push sbb dec rcrb add cwtl clc pop js mov nop aam add inc add cs loope inc or jl into adc push push stos test dec mov add mov ds mov sbb lcall mov pop mov popf lahf les cld or jmp cmp add mov mov push jb jno xchg mov les or mulb or getsec pusha xchg add adc sahf add les icebp adc add sub repnz flds loop add rclb test cmp sbb div cmp jmp (bad) cwtl lea lds dec sbb loope (bad) roll xchg subb decl dec add xlat dec mov or inc cld mov mov jg test (bad) nop les adc and rorl loope xchg jo add dec and mov add loope imul mov sub js cmp mov out xchg push sub mov xchg adc clc enter dec iret or add cmp popa or inc push jnp add dec cli mov push ds or add mov rolb inc fstp add fadds add js sub std bound xchg pop jb mov into dec jp push lret and or ret adc inc pop lret loopne jg mov push xchg es sub dec and push subl push cmp add and and mov cmp add je imul add adc sub cwtl lods add jmp adc or mov cltd call push addl ss xor mov jbe add inc nop cmp add dec add mov dec mov ljmp lods stos movsb mov aam test adc xchg data16 dec fwait iret cmp inc xor add xor sahf add xlat punpcklbw jns jmp push cmpsl loopne push inc les jl add in sbb cmp inc push xchg loop push fsubs enter js popa pushf push mov pop fwait or xchg mov popf into push lcall les mov gs push xor nop xchg in movsb sub mov dec xchg mov xchg pop push pop pop jo adc pusha outsb sbb loop sbb into roll icebp dec fs mov andl add xor add cmp jmp or lret sub nop in addr16 int3 push push lods movsb and sub xchg xor test add fs jl xor jle test xchg aaa dec outsb sarl lods mov cwtl cwtl icebp cmpl or mov shrb inc inc fldt idivl lret and (bad) cmp add adc add ror cltd dec inc adc add lret shr dec mov and sbb mov xor test xchg and add insl call outsl movsb dec imul lret add scas out mov leave mov xchg xchg dec add pop adcb add fisttp in cmpsb roll dec jns les and add movntps ficom sbb jge fs testb xchg sub insb xor dec add adc xorb or lods lds test add and jne lcall mov or repnz out lret clc leave jecxz mov adc fmuls pop push xor add rcll mov sahf xor cmp push and out or mov sbb sar cmp lock ficompl adc sbb jns js push inc cmp and adc sbb sub dec lret stc xchg pushf or loope popf and mov pushf sahf fstl cmp push cmp sbb lret sbb add push inc sub or sar test push jo sub mov pop out or aam lods mov mov dec dec sub adc in clc add mov push mov push sbb jno dec pusha loopne fildll test cld pushf sub test push stos out orb sub movsl mov shl xor cmp mov add cmp es inc or xor cmpsb pusha push icebp push mov pop jp int or inc add sub add dec clc mov mov outsb es shlb sbb mov xor call adc ficom insl and inc imul cli andb mov cmp push call adc sbb pushl or cmp sub jp sub loopne push mov lcall mov jae cmp repz mov add xchg in jg test shlb (bad) dec xor test jmp mov jns mov cmc int3 loope cltd insb push jecxz add gs test les inc je mov or loop sub and push or dec test sbbl pop cmp mov inc jae xchg lock daa popa cmc sub jns mov or test in int and test aam lahf popf sbb or push xchg mov xchg sbb cmp pop incl aam nop mov test mov rolb mov clc or inc adc dec cli pop lds sub dec rolb add fistpll and cmp jno cmp call lea mov or xchg fildll daa adc sub add adc pop push cwtl mov shrl xor aaa test adc cmp subb stc inc rcrl and add dec push movsb and js and stc (bad) idivl add pop cmp pop ret sbb sbb (bad) (bad) roll inc or dec and xor pop lahf xchg add inc imul sub enter sti mov or test sbb sub inc xchg or repnz leave incb test dec inc lcall mov loopne sbb icebp push in js dec test aad dec js mov cld sub in rcll orb lret lock loopne push add jl adc into loope in ds fimull lahf adc xchg (bad) out les sbb inc cmpsl push jle add push int3 and xor je jmp (bad) negb sahf dec (bad) adc xor xorl cli push dec xor sub mov lahf aas adc test xchg push inc orb pop mov shlb sbb push lea adc mov xchg xchg fsubs pop or dec add stos jb lods ss or xlat xor mov sub xchg dec cmp wrmsr fcomps and push mulb jo loope clc cwtl (bad) mov pop cmpsb or xchg and rorb aaa leave orl push jp sub test dec jmp add ret test testb lock xchg dec xor enter fisubrl inc fisubl add jmp add inc add loopne leave pop mov and cli fwait cmp dec or add adc in jmp add int mov or jg sub in ret and add jmp outsl ljmp push repnz mov loopne inc xor and cmp cltd dec stos stos mov add sbb roll (bad) sub xchg leave xor mov sub jo in fdivl add jg stc cmp rol mov sbb test cld in cmp (bad) movsl sbb adcb or mov inc mov cmp push add push sbb in enter lcall sbb mov jg or sub mov or jno jns dec mov cmp (bad) incl lret shrb dec sti or pusha push lcall xor push jle add leave loope mov mov add insb jns lock pop pop sti sarb mov fdivl xacquire add xor mov out mov pusha sbb add fdivr ja test xchg fimul dec out add das cmp cmpsl (bad) and rolb push pop sbb (bad) xor negb bound sub jmp or faddl sbb pop xor and sub movsb jl pop inc add cmp jno aam lret dec ret add insl adc push mov cltd sbb cld movsl (bad) xor cmp scas mov add or (bad) dec movl fsubrp mov mov jmp xor rol mov imul ss inc adc popa mov incl pusha fnsave mov test cmp push les and iret jmp cmp add in adc cmp addb fidivr call adc mov inc pop cmp stc inc out std aas int3 mov stos add jge mov sub clc iret push les inc je jle daa imul les dec test (bad) mov xor inc sbb or sti lahf pop mov pop addr16 xor and push ficoml int3 pop les add dec add mov cmpb push jb xor jns sbb cli in and mov sub cmp mov pop dec mov add push and popf std mov inc cmp adc dec ret and (bad) insb je adc xchg cltd insl cli jae rorl adcl adc rorb and fidivr mov rclb mov inc sub shrl push push rcr dec add cltd rol (bad) inc movsb sub inc test push pop gs sub pushf fcoml je mov xchg adc adc mov adcb xor dec sbb lcall and add add mov mov dec sbb dec js add mov or sbb lods xor sbb adc inc lods xchg (bad) and lcall adc (bad) bnd rolb movl (bad) ja aad inc inc xor (bad) push dec das xor popf add cmp jns mov push insb fcoms int dec icebp mov sub sbb xchg aam sbb and mov orl cmp mov xor sahf pop pop aaa cld pop adcb cmp add pop sbb pop jnp xlat mov pop cmpsl sub ljmp sub inc aam aad add jns rclb es insb lcall xchg popa fldenv les nop cs sbb enter add neg je inc xchg pusha mov push mov int sbb hlt jns push push out add cmp test (bad) lock dec mov cwtl push je in add jno xor jle xor dec xor mov add negb sub cmp sti mov lods add or lods jg xchg mov add cmpsb (bad) pop subl add or insl rcrl add dec int and jg ja mov rorl hlt xchg aas movsb test jne (bad) in lock rclb stc imul mov xor icebp inc add cmp push or add rcrb add inc (bad) cmp jo pop mov in addb repnz add xchg pusha xchg jp sarb adc inc dec add test and insb int add pusha sbb aaa fs leave (bad) adc mov adc jns (bad) or shl sub repnz jae dec subl or jp popa cmp push repz dec cmp or mov lods aas cmp push pop cltd dec (bad) sub and or mov test popl (bad) jno iret cmp add nop dec mov sbb js es inc inc lods pop es xchg insb mov outsl jb push test rclb or sub sbb mov push mov movsb adc sbb xor sub push mov outsl sub test sbb mov fcoms push in adc dec test imul add ret sbb mov js sahf ficomp jmp cmpsl lods jbe mov add lea xor les (bad) fidivl adc mov mov int3 mov sahf and add cmp push cli arpl (bad) mov and out pop xchg fild xchg ljmp (bad) nop add add loopne cwtl add lahf test fdivrs nop jl inc inc repnz gs mov cmp test jo repnz sti loope imul pusha outsb and lock xor aas fwait ja pop lods jl cmp imul adc sbb mov dec mov dec inc mov xor test mov call add nop add movsl jne push dec ror lods fisttpl push shrb dec and int3 adc imul pop and movsb gs inc je xor or mov int in push inc (bad) xor mov xchg mov pusha jge add add sbb popa in add pop pop sbb inc jl pop mov pop adcb add jp pop adc cmp pop roll lcall sbb adc bound mov pop jo push xchg add popa arpl xor jo adc push sub push scas fisttpll sub adc jmp mov pop imul stos aaa lea mov in xor nop xchg add int3 pop ficoml aam cmpb clc inc push xchg dec mov jb pusha sbb call push and xchg cwtl xorb js sub inc adc outsb adc orl loopne add adc inc mov (bad) jne loopne pop cli pushaw ret popa push or adc or push jno xor cwtl int3 dec fstpl mov dec pushf pop pop sub push xor adc pusha mov inc and pop pop das (bad) cmp in adc push (bad) hlt mov inc push adc aad dec xor test adc call cmp inc xlat jne movsb outsb test adc ljmp in cmp and and aaa icebp icebp test das pop imul pop mov adc es enter jge std arpl lods add mov push data16 mov dec iret jge dec or ror or pop and dec pause xchg rcrb lods add into in call mov mov inc sbb clc add jno push push imul push mov std dec inc test jb pop push inc test adc inc push ja xchg nop jns lds push push xchg xchg or and ret pop pop (bad) inc mov stc add nop movsb cmpsb sbb push push xor pusha mov jmp out push inc aad mov clc cltd pusha and or bound jmp negl mov pop mov (bad) sbb insb add mov adc and dec stc repnz jmp xor jle add lea and xor movsb adc add test andb repz arpl mov stos (bad) push insl push call enter outsb dec push test nop (bad) test cmc lods and out repnz cltd lahf push (bad) push subl adc mov fidivl int3 rcll shrb adc hlt dec mov rcrl push pop out push nop cmp pusha inc xor or in or add insb mov jle push pop hlt or add stc xchg xor repz xchg xor push call sub jno sub insb dec mov pop or nop xor daa dec jnp fs inc push jecxz sahf dec mov or push mov lds pushf subb pop mov add cmp or imul addr16 imul outsl push pusha push add sbb mov fsubrl mov (bad) (bad) mov outsb cmp dec int3 test addr16 js ficomp mov xor adc cmp pop scas mov pushf cmpsb pop dec rcrl idivb push and sbb cmpsl push loopne mov jl lods and ss movsb fistp xor stos outsb mov xchg imul arpl jb sbb inc out cmp adc dec add xor enter loope iret gs addl lahf mov dec xchg and pop dec pop cmpsb cmp xchg mov adc add jg loop movsl push clc cpuid sbb mov xchg add add cmp andl je add adc mov pusha pop fmuls in mov cwtl sub sbb mov call xor sbb pushf rolb mov push test sub insl pop push or add test dec pusha movsb in int3 pop mov mov adc and mov repnz lods xor cmpsb std movsb adc inc xorl stc pop jb test je mov ror loopne inc imul pop lret dec sarb aam (bad) bnd clc or cmpsb inc je pushf lds cmpsb xchg pop in mov push stc mov outsl pusha fs test push mov incl ds xchg loopne and pop sahf lods ret les or js sbb add cmpsb cs lock aam xchg xor test movsb fwait add cmp addl iret jmp dec push pop enter cmpl mov loope ljmp push nop mov adc jnp lods lret pop sbb in cmp mov mov jnp inc js jb push fs in add movsl mov pop cmc rorb sti pop jl cmp inc mov xlat push inc inc out aad add pop das inc fidivl mov or daa hlt (bad) mov jg add xor cmp xchg cld scas cwtl fs sbb les jl ja xor sarl lods jp dec mov pushf xchg lahf mov push fs jle into add add lahf push pop imul jae jb adc fldlg2 in xor and imul mov adc mov loope nop inc outsl pop ss cmp xor cmpsl subb jnp inc mov push test xchg or dec cld dec fstpl sbb cmp sbb xchg aam push sub xchg out pop xchg leave push ret push imul and stos (bad) adc mov nop ss (bad) repnz nop lods add dec jo test mov aaa add std jns sbb cmpsl clc bound inc fwait mov leave sbb mov push xor mov ss inc and xchg pop mov int3 add inc test es jge pusha xor cmp out jg lahf mov imul cwtl (bad) or mov xor jo push movsb mov pusha cmpsb adc sete push and (bad) loopne ja popf adc mov lret add mov xchg cld loopne aam (bad) test or test sar paddusb mov hlt jne dec adc scas inc add inc fisub pop popf insb cmp roll add pop das shr inc pusha jb scas sbb cmp jae gs push pop insl (bad) and aam add sbb xor daa dec mov dec call sti data16 in bound mov mov mov lahf dec es lods xchg jbe or fs mov loop and sub inc pusha xor xor sub xor or movsl in insb rcll mov add or int3 rep les (bad) cmp mov adc push pop insb test xor sub loope in faddl enter pop sbb in movsb leave jae add call push jo or sbb inc xorb pushf mov clc jl push push cmp sbb cld rcrl xor push dec jne dec fisubrl xlat mov cmpsl int mov sbb sahf push and inc insl nop jno mov insb push sbb loop dec xchg rolb push jo jno sub lret fs mov (bad) adc mov adc mov dec mov xor push sub mov sub add mov xchg in add xor sti mov and outsl insl xchg and ret dec in or jae and (bad) iret daa pop add mov pop cmpsl out xchg add ficom dec cmp push cmc add add or fiadd add push inc dec add pop dec repz aaa and add hlt stc mov jle (bad) fnstenv adc jb or push cmc or (bad) add cmp out pop dec add stos (bad) call cmp xchg aaa fmul add (bad) cmp dec bound add sbb add inc fsubrl mov adc and mov fwait cmp sub iret sub or pop mov cs or and pop ja jnp js add add xchg sbb jle push xor and jmp outsb hlt xor dec xchg int3 rolb movsb fwait pushf test movsb and addb lahf movsb lock int3 pushf mov mov es push add push (bad) sahf fdivl fs cld rcll xor or push lods (bad) xchg cmc repnz ftst mov (bad) lock add rcr (bad) sbb mov inc rcrb loopne jb rorl or je mov dec test js mov xchg lock xchg inc xchg push pusha fsubl arpl inc mov sub push arpl aas repz mov loopne push push add and add xor pop shll sub sub movsl xor pop insb je or bound or push nop popl dec arpl mov cli out pop and inc gs loop pop add and shlb mov aaa push repz cmp adc lea in (bad) or inc repnz les pop cmpb das sub dec pop sbb lods mov adc test jl xor sub mov imul lea jns out jo stc test push int3 mov frstor addl push (bad) hlt test mov mov fdivrl fs mov add mov push sub int mov jnp imul and cwtl cld push jae (bad) lret pusha (bad) pusha mov and pop lods js das out add jmp shlb ret (bad) or xor cmp push and inc xor jl cmp subl enter jl or xor sbb adc sbbb into (bad) addl jge add and xchg idivb lfs mov cld dec cmpsb push and dec jno jns mov in outsl or sbb push fbld mov popf sahf and mov mov test dec repnz add sti loope mov insb in xor cmpsl and aas adc cmp mov dec inc sub pusha leave or call test stos dec inc push push pop mov fistp bound lock inc test xor jo push cmpl push mov les mov or js and test add bound sub hlt cli aam xchg xor nop dec (bad) mov cs jmp or or inc test adc xor movsl push xorb test adc or in neg mov jo cltd or xchg arpl mov out mov lock inc insb cmp mov xor jo outsl jg sub in negl cmp mov out mov jb insl xchg sub pop push add (bad) lret pushl adc xchg (bad) frstor xchg in ja dec push popa scas add sub clc pop cmp ret hlt test out jmp inc inc push pop adc daa xchg dec fs (bad) fsubs hlt add dec bound cmp imul pushf mov rolb push test cwtl dec push outsb lock cld scas push dec fistl dec push out pusha add loope mov mov adc pop add and insl (bad) or or and rorl dec adc pop xchg fimul mov xchg sbb sub dec lock mov add pop int fs mov fistpll mov and pop mov iret inc insl add sub mov or outsb and add fsubs push jb adc subl add (bad) stos out mov je and mov fimul mov in add push mov pop nop (bad) in mov inc sbb data16 enter and dec fadds cld mov push mov add call cmp and add and xor imul inc push test aas push mov pop je sbb jnp hlt lock mov nop mov in or repnz fldenv jo fwait push (bad) mov cmp xor nop js stc xor sub dec sub dec rclb enter test (bad) outsl test mov cld pop sub dec (bad) and lods sub test rcrl imul (bad) pusha mov (bad) mov jg jl fsubr and xchg cwtl or insb (bad) repnz pushf mov xor push add (bad) out mov test or icebp inc cmp and jae call test add cld js (bad) pusha leave test aaa pusha fdivrs add fs out idivl outsb inc lods lock jb dec cmp stc loope jl mov adc push or cmc or stos test sbb movsl nop and roll pop cmp movsb cwtl popa mov mov dec xor les cmp lret shlb add adc cmp call adc push adc insb and pop add mov hlt push mov mov rorl push mov outsl jo,pt out cmc add adc xor dec rolb or mov sub test aam sahf xor in push sti xchg lods or inc daa sub add dec mov mov add inc cwtl mov xlat imul adc cmp das and cmpb pop mov in sbb cltd (bad) or cli pop push pushf fisubrl and imul add arpl das aaa les js push divb pop mov mov adc dec lds je movsb dec or or test mov adc jb xchg aas outsl mov jnp fcmovnbe in dec lods pusha out pop or dec or and dec xor xor push or and add or mov loopne xchg cmp push jp mov cmpsb addb and sbb inc mov test popf or xor incb inc xchg add cmp outsb in or and or cmp xor jno dec mov subb adc mov movsb mov stos movsl xchg or and icebp in out roll in xor and mov cltd mov pop cli xor int3 (bad) xor sub in add insl bound push mov outsl subl cmp je push xchg rorb inc xchg and mov jnp ret jo in fcomps or xchg std add pop mov jp dec or rorl gs loop pop xchg pushf (bad) lahf adc (bad) imul sbb (bad) or adc mov and xchg xchg sub add xchg and pop push dec inc mov adc repnz push in jbe popf and fidivl dec shrb mov loop or add lods inc outsb jp sbb lahf jl jbe in fistp dec and shlb cmp xchg fsub adc dec pop dec mov sub in loopne push stos xchg xchg xor outsl add pusha inc rol mov jo bound fildll (bad) icebp cwtl add push repnz jge outsb lods cltd leave mov add jbe shr subl ds mov fisttpll hlt aad sbbl dec cmpb scas clc insb mov adc ljmp push rcr faddl jg (bad) add sbb xchg dec cmp fsubs inc mov test inc xor call adc out scas jbe sub out aaa add adc pop sub clc insl lcall xor push repnz pop adc (bad) mov lea jno xchg pusha mov scas or xor test pop popa lock divl or cmp les movsb sarb or cs in (bad) and out dec hlt bound xchg cltd test inc cmp leave lds jmp xorb out aaa fs mov or lock loopne hlt adc or pop xchg sti sub mov and add ja cltd mov das je arpl xchg add cli and sarb dec mov push add mov xchg mov push dec or fdivl pop or push pop test lods (bad) mov push sbb xor dec sarl cmp ret mov mov mov lret mov iret jg imul sbb in decl aam data16 cmp lods add add mov (bad) push int3 decb mov (bad) (bad) xchg dec sub rcll mov xor repz in in sub je cmp sub push push jo movb xor add fs inc adc pushf mov lret inc sub sbb xor enter aam nop sahf sub adc adc movsl add lods xchg inc aas cmpsl divb and and adcb (bad) jae hlt and ficomp aas inc dec mov xor (bad) insb and sti inc aam stos cltd mov pusha add jl jl mov cmp xlat xor push in pop pop fcomip cmc add sbbl mov push pop in insl or call sub adc adc sub and adc and push mov mov cld cmp out rclb in sub nop pushf mov aas sub sti add call andl mov ret cmp cmpl sub int3 and rcrb xchg aas inc pop cmpsb sub movsl cmp (bad) xor insb pop and fwait test fs ja and xchg cmpsl mov add jne rorb int3 pop sbb lods test xor sub fildll aaa leave sub mov insb inc (bad) mull xchg pop nop pusha fsubrs cwtl in mov pop std sbb cmp test rcr dec cmp sbb add push in aaa shlb jae or sub inc push testb ss unpcklps and sahf rcr lret bound mov adc jge loopne dec out test cltd cmp fdiv pop xlat jo push inc sub lret call push gs mov cwtl daa pop add add or int3 hlt lods sub mov or gs adcl jns and mov cmpsb xor lods mov and cmp mov push popa fcomip xor mov call sub movsl adc pop mov sbb cli pop lock dec xchg nop fadds dec xor loop jle into aad cld pushf add xchg fild popa stos and push into and adc fsubrs movsb add cld add add push pop clc movsb daa das push fdivl sahf push jo push daa gs mov and push dec hlt les mov stc pop jns mov sub adc ds enter pop dec jmp ja ss pop add outsb rcll int jns cld cmpsl iret add cmpsb mov js ret add pop xchg push sbb (bad) mov pusha sub movsl xor loop xchg jmp js jns rorl xchg rclb xor lds fsubrs xor insl xchg xchg addr16 lret lret sbbl movsb pop (bad) aaa lods jp xor and or or outsb adc pop movb sbb lret xorb inc int mov add inc adc jno cmpsl inc sub call pop je add push fidiv jnp nop fisttp out or pop xchg scas js adc sub mov test test sub notb xor push mov cs das pop and mov mov mov pop cwtl or test inc adc shl push (bad) cmp test fdivs mov fwait xor inc cs pop pop push sub repz mov sub adc sahf sub (bad) xor test add adc push lahf mov dec add ja inc cmp (bad) frstor adc adc xor dec roll daa add mov mov sbb pop and repnz xchg and fadds push clc add negl stc stos add inc dec dec out xor push movsb cmp pop mov sbb jno nop fsubl pop dec loop or cs jne ja adc lahf int3 insb push dec or dec gs dec xchg adc stc push orb sub jecxz pusha sbb sbb mov mov fbstp sub in lcall mov movsb mov pop das adc fs or add inc cwtl notl lock jbe sbb mov and and test or je xchg and in cmp sub insl sbb xchg pop fwait pop jno add and pusha loop cmp push add cld outsb cmpb or cmpsl adc inc mov dec roll adc test adc jb (bad) and imul in daa call ja lods jge cwtl inc pop stc loop cs aas rcll add and sub xor sub ss dec call inc test inc push andl add icebp leave xor sub cmp jo in pop dec or stos movsl enter insb add daa subb add fsubrl add sbb (bad) ljmp (bad) push mov xor pushf or and pop mov xlat out cmpsb shrb xor jl daa cs shlb add (bad) xor addl cmp push mov add mov cmp cmpb xor andb mov adc xchg mov inc push adc stc or mull add movsb fimul shr std adc inc inc push insb sub push push inc and cli mull in xor inc clc daa add pop dec pusha pop out dec jg adc add ljmp pop sub mov lds cmp mov or test sub add fs fidivrl push or jnp cmp dec (bad) mov jecxz adc call or mov (bad) mov or jg xor jno out iret xchg or sub cmp or movsl lcall (bad) push shl mov mov in add movsb daa xchg adc pop or imul inc ja mov mov and inc and dec xchg add arpl jb add inc add push pop aam pushf outsl and sub pusha inc sbb mov pop jno ljmp inc lock dec in mov ds (bad) inc call (bad) and (bad) hlt aaa pusha sbb inc lret clc inc sahf call xchg mov or mov insb xchg imul lea imul sbb enter xchg mov iret test or leave pop mov push sub pusha in lods jo gs xor in js dec sub in inc test stos sarb call idivb je sbb xchg mov dec inc pop pop xorb and xor call cmovge call lret (bad) cwtl stos mov add js mov insb adc and bound ljmp sbb loop xor lock (bad) jecxz sar and incb jl push scas sahf gs jecxz mov xor mov inc mov xlat rcrl jo cmp push ret mov in outsb cwtl lock add nop add jb inc int3 xlat pop or add mov call ficompl lahf push sub popa in popa imul stos fistl nop dec push push cmp frstor int3 es scas pusha xchg xchg sub shrl push pop pop dec and dec lret cmp mov mov mov mov ja mull out jmp fistpll fbld mov mov cwtl (bad) (bad) out mov push pop je cltd das dec pop xor (bad) xchg scas pusha xor xchg mov or mov mov jecxz xor and add or and stc and pop adc ret add push xor lcall push stc test xor in popf shrb imul xchg pop loopne jb xchg mov pusha insl nop add push dec clc jnp mov sbb jl inc and lods dec inc lcall xor test cmp in jmp dec int mov inc cld dec push push adc add xchg rorb clc pop lods inc cmp out fs pop xor repnz lods inc pop je pop jns enter test scas not mov movb stc and lock and cs mov repnz dec inc stc push or test mov cmp lcall mov ds add popf mov pop rol jmp pop jbe xor adc or jmp jle nop call add insl or enter lea add stos add and loop sti (bad) xor test inc xor jecxz and cmp sub and data16 and xchg or push push test inc cli imulb dec test pusha jmp pop mov fsubrs push rorb sbb idivb (bad) jno loopne push cltd sahf movsb rorb xchg mov jo cmpsb push add sbb sarb adc sub pop rcl dec xchg das add push arpl or negb in adc flds cmp pusha pop pop scas or cs sub inc roll push inc insl mov inc sub out in add js fstl fiadd adcb lahf sbb daa arpl mov or dec sbb add jle adc stc lods inc mov mov jg sbb add push lods enter push push mov movsl sbbb dec adc or push stc mov rolb ret fiaddl testb and pop pop and ret jne in movsb lods enter lock adc iret or adc sub mov mov push mov jle inc xor sbb repnz inc add rcrl test sub addl adc int3 jge jb icebp add xor push add in orb sub fstl inc push and ret fnop nop mov adc out cmp fbstp and mov and popl mov imul adc lock push xchg cmp pop xchg jge dec enter add mov mov rorb xor xor add jmp test jbe dec push call cs push call insb les xor sbb mov stc or or push push in ss adc xor (bad) pushf lods (bad) and lock pop std (bad) loopne sar and mov mov mov nop pop gs jmp jne sti es loopne,pt das cmc js dec cmp add push push in cld mov repnz adc movsb je je mov dec sti sub scas imul mov das xchg repnz add lcall (bad) scas add cmpsl xor inc lret add loope sbb in dec inc ljmp addb cmp xchg roll push inc sub or cmpsb cmp push add jge orl inc lock in sbb pop rcrb push pop push xor cmp push nopl add aam mov lock cmp fwait mov jmp imul inc aaa sarb jno clc sbb add ret xchg jo xor inc or pop jle push lahf inc jecxz sub add pop shl inc int3 and mov push fwait (bad) call stc adc pop ss loopne adc add repz test decl in adc pop cmp inc push or xchg je cmp adc lods cmp push ljmp push lock bound sbb movsb sti loopne and add out sbb adc or imul jle ds movsb fistp add inc pushf lret inc pop sbb fs sarl or inc lock add test push push xchg test cwtl ficompl out dec call cs aaa lock les test sub dec out jo and adc shlb cmp enter movsb dec push jo test ret clc dec jo or mov nop mov les insb add mov lock dec js imul adc iret xor test fcomps jp mov lret dec xchg jl and mov inc push adcl bound out sub sub fmuls pop movsb dec jl xchg push jl push or or sbb pop push rcrb lods mov xchg add push cmp nop stos (bad) jo into fs cwtl jno adc repnz and test ficompl and cs push sbb dec in add mov xor add mov out ds daa add lret xor repnz push pop lret call test pusha lret adc or test cmp sbb push inc hlt cmp insl js pop fistpll mov dec gs xorl outsb push movsl es movsb and into sbb (bad) push add insb sbb xor and (bad) hlt insb fbld push cmp call mov adc mov int add loopne sbb add ret add lea fildl sbb in enter jg pop pusha js loopne les dec dec es jecxz pop xchg xor add (bad) cmp xchg pop adc or enter jecxz cmpsb cmp rorl mov jle pusha jnp sub test xor pop lods mov inc cmpsb stc pop in dec inc dec adcl mov test in lods lods mov fdivs int stos lods add mov negl sbb sub movsb inc fildll popf outsb dec ret xor mov cmp shlb scas or inc mov pop push sahf sbbb mov pop dec adc rcrl and (bad) icebp and pop sub inc cmpsb inc nop pop or pop or push jg jp nop dec dec xor pop push and add scas add inc mov add push xchg lock jne cmp push adcb hlt gs aaa push and pusha dec mul lock daa xchg xchg xor and xchg inc push lods pusha adc jmp loope frstor nop loopne mov bound adc out mov push jge mov outsb mov jl dec sbb push adc scas mov clc addb mov dec xor add nop jmp into add imulb push xchg or stc adc mov mov push sbb int3 push in lods cmp mov in mov pop pop and jmp mov jle mov or cwtl add and data16 scas ds loopne mov or cmp repnz fs xchg shr rorb vmovsldup cli cmp js hlt add fwait lcall int sub popf jge cld add adc push aaa loopne les add data16 jo jne mov add arpl mov dec inc xchg test mov jmp xchg cmpsb jo sub or push xor test adc outsb test xchg inc dec mov lock xchg add je bound mov pusha outsl xor mov push mov dec cmpsl mov and sub ljmp push imul or sbb or ss hlt jmp or jmp and je push insb in xchg icebp mov aas add bound mov mov add push out push (bad) rcrb push mov xchg data16 repz in punpckhwd in out mov in shl add push cmpsb lock insb aam out aas in (bad) cld add clc lods popf sahf add pop adc jo in subb dec inc mov and (bad) mov or inc test push mov mov fimul aam les pop test in sbb push add sub pop leave xchg dec pop xor lods or loop pop orb int3 jl push ficompl mov cmp fisubr loopne dec sub loopne faddl lods add lea adc mov cs nop je mov add sti mulb inc (bad) cmp ficomp in subb add xchg sbb jnp adc dec inc xor xchg arpl sub dec fs cltd mov cli push and sub repnz push fwait cs bound xchg jl dec mov add adcl pop mov js pushf sahf inc in push notl mov call pop rorb dec cmovs je pusha leave ret les push jp cmp pop adc subl pop fisubr mov xchg jg movsl icebp add cmp xchg cmp imul mov cmp xchg mov incl mov push xor shrb pop mov add pop lock and dec (bad) mov or fcompl mov mov fcmovb fsub pop adc cs add daa outsb in and adcb pusha and test popf outsl adc or daa xor pop push jno jle dec aam adc pop fisttpl xor mov jmp jns xchg daa (bad) pop xchg pusha jns jecxz loopne js fs imul and push mov mov xor ja sub imul push jb add jne dec or mov cmp sub xor pop add cwtl jbe add and and xchg mov add inc iret and adc push jle pop mov xchg mov adcb and add pushf jno sahf hlt test add mov bt mov test add test loopne or or cli out lock negb mov xor and test jb jbe push loopne add xor js jb mov jnp mov lock xchg xchg mov lock add mov cmp jo adc (bad) or dec mov sbb mov stc cmpsl int add iret fdivs push inc fidivl or dec jecxz or sarl xchg jne mov mov clc clc add mov test xlat inc outsl ret nop and push fmull fldenv mov or push inc lock inc mov mov shll xor sbb les loopne mov in push repnz dec cmp mov icebp shrl add bnd xor adc jle cmp inc add xchg push sub or and fidivl jb andb sub jo fwait sub rorb push inc and mov inc mov ret les and and mov dec mov mov sbb and aaa adc pop pop adc adc cmpl je jne sbb popf mov add leave xlat jp ret nop pop sbb (bad) test cmp imul iret add xor je loope adcb ret cmpsl push loopne in lret cmc inc cwtl jnp xchg jne (bad) js jbe xchg mov inc cmc bound xchg sarl add xchg scas gs ret push dec add stc mov adc add lea sub add sub andb mov adc fmulp xor rclb and pop dec lods jo cmp loop scas xor cmp xor dec push in add popf ret shrb popa push loopne jae divb dec movsb sub add les inc inc nop fmull or dec xchg mov mov test mov add jno sub in js int3 loopne xchg lods xlat add push inc (bad) jb movsb fs and insb shlb pushf jns xor add inc js inc int3 loopne inc jne lea je fnsave mov in movsb popf adc test pop shrl and push (bad) inc fmull into in lcall mov shrb xor out out dec pop cmp fisubl mov int xchg add ds pop icebp pop add aam push xor xor adc mov inc fnstcw aad (bad) lret and mov movsl and mov push fs push and das cmp fs pop pop or (bad) mov jno arpl mov cltd add mov pop insl nop or sub mov outsl (bad) repnz jbe push mov je lock fmul sub (bad) loop lods icebp pusha mov jae loope (bad) ds xorb loop pushf repnz cmp or imul dec cmpsb test minps inc (bad) in xor outsb (bad) dec jae dec pusha xor test mov repz jae mov cmc xchg push mulb rolb movsl jne inc insb in test test or repz cltd (bad) and orb fldl dec aas ljmp pop xchg fldl xlat inc jge inc mov xor push cmp insb push enter popa push dec lret movsb ja movsb and dec pop ret inc adc cmpsl enter je adc push pop repnz daa mov inc pusha loopne or jl mov dec jge loopne mov lahf mov outsb std add iret cld or jge jmp jl mov inc mov sbb mov jns jnp sub aad std das dec loopne loop,pn or js or cli clc ds shlb cwtl arpl mov xor loopne movsb pop mov dec mov cmp or stos add je jne mov enter (bad) jns dec scas dec jne xor loopne push ret dec push push outsb inc rorb lret sbb rcll notb aam or rclb or xorb lock int3 or lret (bad) push je dec mov icebp aaa mov es (bad) jmp xchg sbb add aas sbb jno xor nop fs mov aas mov or and das pop cmp gs adc jb add addl hlt mov fs inc cwtl push xor dec es mov pusha nop jp xchg js js xchg aas inc dec scas js hlt mov js rorl jp ret cmp add mov lret adcb xor out mov das sbb jmp js inc jo xchg xchg (bad) xor push rclb inc test mov dec cwtl sbb flds jae mov arpl inc fcmovbe (bad) ficomp roll outsb gs test push push jp cmp int3 pusha push (bad) roll or adc fisubrl js adc mov jp add mov cmpsl rorb fimul les push adc push test xrelease stos aaa stos int3 fiaddl rorb xlat lcall adc push nop mov fild pop add into sbb call sbb sub xchg mov push addl fcoms jnp xorb rorb lock sar out add nop pushf or and lods shrl inc flds xchg mov or mov mov pusha cs push sub sbb or addr16 sub inc test out jge jg or cmp jb popa lret dec dec in lds mov fsubrs sbb cltd pop add mov jl xor push inc lods add or fcmovbe mov adc pushf cmp mov insb (bad) sbb mov adcb mov xchg add lahf cmpsb jecxz mov add fadds test add dec leave inc shlb xor (bad) dec mov add mov test jmp cmp imul jae inc dec jo mov push mov xchg je add jo ficoml dec sahf mov xorl mov xor or out jp add cmp sub aam sub xor cld push cltd inc jno push aam cmpsl rorb xchg and dec insl adc mov mov dec ja or and cwtl add push pop divb sti loopne sahf push shlb icebp (bad) adc jle (bad) xor and and xor jns and sbb and mov jbe rcrb add rcrl mov int out popf dec jo dec fs mov lock call ret aam mov mov xchg frstor scas or pop add mov movsl les xor into fstpl aam call out subb add shlb xor cmp jbe test xor mov loopne fs add xchg pop xchg cld outsl add imul loopne orl leave inc or and movsl popf mov fs jne xchg mov pushf xchg mov loopne inc fimull pusha ret jo mov jbe loope dec aad add repnz pop (bad) in jle pop jae xlat push aas lods test inc arpl jnp mov int3 cmp adc inc jae leave inc je fbstp pop push xor (bad) jmp add add das mov ret cmp sbb dec mov scas pop int3 add xor fldenv push lcall shll out dec dec jb fsubl mov cmp arpl push inc add fsubs sti lea inc movsb into pop mov dec test jne (bad) das rorb xchg movsb dec and inc test test and mov hlt outsl test fisubrl (bad) imul inc movsb les (bad) jl sub jb insl mov push shrl sbb add xor aam sbb je int3 sub pop je ds fs mov jb leave lret dec dec data16 mov sbb jno pusha repz and cs rorl dec jns or sub insb je cli data16 pop loopne roll (bad) mov (bad) (bad) cmp fdivs pop sub mov sahf stos jge or adcb xchg loop enter aad out jp and bnd dec call adc add sbb clc rolb scas sbb lahf and insb lods lcall cwtl je movsl sahf mov jno adc rorb mov mov pop or adc popf loopne ficom in sub imul dec fiadd (bad) (bad) jmp hlt inc dec mov mov out sahf xchg mov adc pop aam inc or scas xor sub pop jl int3 sti mov (bad) arpl inc ds mov jmp push mov xchg add sbb sbb ss popa cmc push test fist outsb cmp es jl jb add addr16 add rorb sub testl lret lods pusha jmp lahf push inc add and mov outsb mov push test mov adc les xor pushf cwtl cwtl mov mov push push (bad) lock les mov loope cmp sbb and push mov mov xor shlb mov daa leave ljmp (bad) sbb pop mov fisttpll inc ja or xor or add dec lret pop adc xchg int3 add mov xchg sub mov adc test push lcall cmpsb mov je mov mov or sbb bound or inc sbb or and push call fimull imul or or or (bad) mov cmp rol push inc cmp cs jae inc pop mulb aam sbb mov addb pop dec or mov dec inc xor in add xchg jo inc sub pop and sbb cmpl fimull xlat movsb movsl shrb cmc fs (bad) loope lcall scas xor mov push rol jmp mov push xchg adc inc xor fildll iret dec lahf cli dec fldt sub and and popa repz test movb pop incl (bad) clc inc push inc test call adcb loope jb dec dec lea hlt enter dec dec fdivs push addb mov andl xor out pop enter adc jne sbb push jbe fwait sbb sarb add loope inc stos cmc inc imul xor outsl adc lock pop and push repz insb jo ficompl ss ret fcmovu lcall push and mov dec add int push and pusha jp sub cwtl push push mov shll lock pop jle mov lret (bad) xorb cmp rcl mov aaa addb xchg out mov inc add and jbe test and jp sarl jne insl movsb rorl fiaddl out add jb jp pop pusha int3 (bad) xchg push dec mov and repz add add xor push daa xorb or jmp mov nop fistpl mov aam jnp fcomps scas pop into and arpl jb and push pop xor inc sub inc sbb inc and sbb cld mov out js cwtl roll xor xchg pop push inc push and das sbb or cmpsl adcl jmp or fs popf dec pop cld xor (bad) jb scas cmp xchg adc push inc je insb lret cmp add dec loop in sub add add mov sbb push jb lahf (bad) fbstp and adc sbb push lret or es push add nop jbe add (bad) jmp add mov mov sub xor movsb enter mov hlt js cwtl or and das jb jge sahf lods mov sub nop inc push repz inc ret xor mov test xchg jb cmp daa sarb mov les jae addr16 (bad) sub mov add mov pop aas push sub sbb loop pop stos (bad) in pop mov dec add lock dec daa dec cmp xor repz rorl mov xchg inc in hlt jns repnz inc pusha and mov inc movsb cltd inc cmpsl or pusha pop cmp or scas mov push lods lds loope cli or inc scas pusha and xor add loopne xchg mov jbe sub (bad) fidivl mov push sub push pop cld pop lock jne add push and clc sub test in add imul push insl dec and sub or lret call sub data16 cs push into mov (bad) (bad) mov and leave loopne shrb stos lods xorb adc pop (bad) inc push jg enter movsb inc repz jnp nop (bad) mov push bound pop inc test xchg nop rorb es adcb push popf xchg je int3 aam add pop dec out (bad) xor push int inc pushf xlat pop mov or add or fidivl or loopne mov pop lcall icebp add or mov dec lret arpl sub call dec xchg cld sbb or out shlb (bad) ja mov xchg jl fs or pusha jge mov pop loope nop fldcw adc call cld xor xchg lock pop dec xchg pop in adc mov jp add clc int3 (bad) sbb call enter cmp mov xchg nop (bad) mov jae push test inc cmp fidivl js pusha (bad) and loopne add es pusha jnp pop divl or or cmpsl scas sub jg repz outsb (bad) adc dec insb push and jbe adc add call dec push ljmp mov int and inc jl adc or nop nop push cmp test dec insb jmp test pop fist jle sbb and mov adc jl ficom sbb data16 les add lock out lcall pop (bad) jo inc outsl iret dec mov ret or adc loopne cmp movsb cwtl xor or add nop mov lods sub pop inc jae cld mov mov mov xchg fsubr lds push jge or push pusha dec xchg dec repz inc subb dec subl loopne fadds adcb addl mov and cs cmc jnp dec inc mov dec and lret jle stc xchg or insb adc pop mov or ficompl and repnz pop add repz pop dec aam ficompl mov adc sarb fdivs (bad) mov inc repz nop xchg inc test mov pop add inc jns call push bound add lock adc dec cltd lods add fdivl adc rorb push lods out sahf sbb fstpl adc inc and scas mov clc clc out pop mov mov adc push sbb lock repz jl pop jnp je mov shrb sbb inc orl dec jle jo dec jns pushf add pop fwait cmpsb fmul loopne bound xor jne jno ljmp add stos adc int inc adc add ret loope pop jb sbb and mov sub push or xlat gs mov push pop and (bad) sub or cmp jns cmpsb mov and inc popa add jo repnz jmp fs fcmove test sub and mov sbbb dec sbb jb addl fs cmp test lock outsb and les and rclb cmp fimul dec insb or mov jge testb sub mov (bad) mov dec int3 add int3 scas adc (bad) xchg loopne jns xor jl mov jo sbb je xchg and pusha test dec fdivrl insb mov bound fbstp jge mov data16 xor and push ja inc rcr sub loopne push stc push cmp jne fiaddl jns pop mov cwtl and jp push mov push repnz lret inc sub subb bound mov inc dec lock push pop hlt hlt pop pusha mov les add cwtl jmp repz dec pop or pop sub inc pop testl xlat jg clc add push por push add pop cwtl mov jns pop add pop div sbb mov std mov add jp cmp ds orb mov jmp push pop push push xor ror adc out jp fcoml xor sbb jnp xor xorb cmp out jge pusha rorl sub inc mov pop inc daa shl add dec xor (bad) sub mov into adc (bad) addr16 repnz mov cld stc cmpsb pop testb mov cwtl jb dec sub lock out mov cmp mov jb xor cmc xchg add sub lods jnp (bad) loopne inc push stos iret out rclb xor cmp pusha leave rorb scas test push bound andl sbb mov mov dec dec (bad) pusha adc jp inc add push jbe int3 arpl or and sbb xor xor insl scas leave jl (bad) xor jo (bad) fwait call insb cwtl ss mov sti ljmp jl call arpl outsl mov add xchg icebp mov jl out jb mov jg dec test mov rcrl pop jecxz rcrb add lret in stos std ret fistpl add pusha aas shrl push pop shrb sbb mov pop push sti aam (bad) fiaddl sbb test xor cmp jns push (bad) cmc cli iret in popa addr16 inc lret inc mov fistp ret inc add sti iret inc fdivrp sahf xchg add pop push (bad) aaa mov ds ficompl cmp sbb orb jmp sbb lea add mov sub xorl push mov roll sbb cwtl out pushf shl xor loope inc sbb imul inc stc sbb enter and add push mov or or mov or jp loope xchg mov andl pop data16 mov pop loopne (bad) pushf jnp add aad shrl push pop mov push add xlat mov in nop movsb pop aam fcompl lret add stc sbb inc adc lahf mov iret icebp aad pop cmc xchg fldcw jp imul add inc add pop xchg dec pusha mov lret jae xor sub sti std dec cli pop testb test fs arpl xor and test xorb arpl ficom div dec push clc and inc nop xor aad pusha and sbbl and sub ds add and divl cld xor dec or add xor and sub lock pop xchg inc cmp dec cmp pushf xchg fmull mov (bad) iret inc sbbb insb push add pop test inc inc enter mov data16 push fstps pop mov pop aas mov rclb mov inc pop dec add test xchg xchg (bad) add cmp add xchg add leave xor mov push punpckldq cltd mov test mov lea inc sub push cmp inc stos roll hlt mov out push pop sbbb les lret sbb sbb inc inc add pushf inc mov add sub add ror push pop pop xor adc sub test mov push nop mov adc jecxz inc aam pop and rclb xor repnz push add into and fnop data16 mov (bad) push adc imul xor adc data16 daa inc lock cmpsl jl jl pusha jle sbb or push (bad) mov fstl les data16 sbb call xchg stos sahf dec nop nop jp shll cltd mov pop cmc xor and xor push cltd hlt scas fiaddl adc stc aas test sbbl mov push addr16 and stos clc movsb xchg and bound aam sbbl cmpsb xchg aaa push adcl adc sti sahf fs call pop inc xorb push push ss xchg add pop cpuid insb sti ret loopne xor jo xor mov inc dec jge add aas sbb in adc jle inc popa inc nop dec sti lds lods adc sarl push mov mov out outsb std and or add push mov cltd pop sub and mov sbb push cmp rcrb cltd push xchg lea and push (bad) xchg sti push clc push sarl sub rolb and sbb dec les or sahf mov jo test pop inc dec rclb jns nop inc jecxz rcrb cmp pop dec adc xchg xchg and mov loope jl iret pand mov (bad) jno or negl ret aam adc shlb clc mov push and imul xor js mov adc ret jo (bad) push xor add add push and mov ds testb xchg mov sub cwtl xor bound in imul shlb mov mov rorl add pop add imul sbb lock (bad) mov adc loope ds sub push inc fdivrp dec enter and sbb sub gs sbb cwtl dec rolb pushf mov int3 push std (bad) xor push ret add addl inc stos pop xchg adc mov jecxz call int xchg dec cmpsd sbb cmp dec and push dec std fldl lret dec mov aad outsb adc in inc es (bad) xor loope test out cli lds test fmuls and int fadd sti push sbb xor add push adc push ret fs rclb sbbb loopne movsb jl loopne mov push inc xchg mov ss cmp int3 push xor ret inc mov inc out push pop xor sbb stos adc leave push lock push push and iret sti push out xor add pop or nop xor xchg inc sub (bad) push sbbb sbb mov adc enter sbb rolb push aad cmp mov mov xor xor in pusha sbb (bad) shlb adc inc add xchg leave aam or in lcall (bad) mov test adc clc xor pop es pshufw cmpsl subps jmp adc vpunpcklwd jmp dec out push and loope inc inc les stos push pop sbb (bad) ss or cmp inc loopne outsw dec sbb pop cmp stos test dec xchg jns in jnp ror je sub ret dec mov cld dec stos sub and in adc push inc and jl mov adc (bad) mov movsb xchg and sbb push rolb pop or add mov lahf cwtl aad mov fisubr enter test inc outsl inc les xchg ret dec and pop mov mov fadds pop cmp imul (bad) mov cmp sbb icebp mov inc dec leave test fs jo xchg call or push cld xchg inc negb sbb xchg fmull rorb cmpsb aam mov sub pushf out sbbl mov (bad) (bad) call cmpsb mov sbb add xchg jo push pmullw xor push fs cmp cwtl dec dec push and adc arpl mov imul adc and pop ljmp sti dec daa mov (bad) adc cwtl ja jl nop inc (bad) pop add pop pop mov mov movsb add stc mov sbb adc sti shlb popa andb push and inc nop adc xor pusha mov sub loopne mov (bad) call inc pop and iret enter inc push adcb addl xlat xchg movsl in js cld ja xchg or lods pop cld ret inc test lea fs es int3 call or sub in cli test mov ss cmp daa iret adc or clc bound inc push js cltd or les sbb push inc push in aaa lcall test sbb mov xor std inc shr (bad) sbb jb and pop xchg xor or fndisi(8087 ja mov or xchg movsb mov mov pop fild adc cmp dec push dec sbb ret jg subl xchg and xor cmp leave out pusha sbb inc mov fcoms sub test mov or lcall cmp lock leave jns outsl mov orb xor jp cld push lods sahf add xor ja gs dec insb add pusha lcall adc insl fcomps xchg xor mov add fmull add add sarb mov movsl popa sub mov inc xchg arpl data16 push add xor mov pop shlb in mov mov cwtl (bad) mov sbb pop push (bad) jae dec bound pop inc pop int3 jmp nop add mov (bad) or jnp push mov aad push xlat xchg jg insb inc add sarl stos sub adc repnz add push sbb dec sbb and das inc push int3 sub (bad) jo pop push bound test loopne int3 imul xor fsubrs xchg or add jg repz data16 je xchg sbb or punpckhwd and pusha fsts mov pop sbb add scas inc int clc icebp push mov sbb and push lcall inc stc pop ja testl jb add sub xlat lea test mov out push dec into jecxz or lret loopne lret push test inc jnp jg repz into adc push sbb xchg fsubl xchg or lods and testb daa jg push cmp jecxz outsb add sub out lock pushf pop scas sbb out stos add inc sbb sbb sbbl (bad) in loopne lahf scas stos in leave push push jecxz add (bad) ret or lods dec adc cwtl inc jmp or fsubrl and mov inc ja les and mov pusha mov popl jne pop ret (bad) fcomi (bad) jno inc and or dec ret in lcall outsl add out lock xor pop test push lahf add out lods sarl shr fistl add push jne add add lods push jo adc adc fldenv mov shr and mov xchg inc xor sub popa cmp mov les fcomps and incl loope out dec push or out mov sbb in mov aas sbb xchg mov inc iret adc test mov ja mov or inc scas add rcll test lods xchg add arpl cmpsl adc mov call iret pmaxub fcoml aam imul pop adcl dec and xchg outsb cmpsb adc xorb xchg pop mov cwtl inc roll inc cmp adc xchg dec inc xchg and or pop pop fmuls dec std add nop mov push add cmp daa test push and stos fadd jne dec test nop fnstcw sub adc js mov test mov cmpb (bad) cmp xchg pusha (bad) mov or hlt aad mov enter or rclb jp and (bad) cli mov mov inc out xor lods jmp das and inc add aaa pop inc mov add les dec push pusha push mov add or cltd fsubrl mov mov sbb js test es mov dec jmp lock imul pabsw mov pop enter mov out loope loop mov lret ficom jns jb dec fcmovnbe mov lea lret add pop pop mov (bad) sti nop mov xorb dec xor std nop mov xor out rorb mov xchg mov pop add push or es dec mov pop incl (bad) ja lods nop xchg sbbb stos pop lahf fstps pop cmpsb cld push je stos pusha fstpl outsb (bad) jge jbe mov ljmp dec sbb popa adc sub jl hlt loopne mov cld add (bad) aam (bad) xor adc mov bound clc mov pop or orb outsl cld mov es call cmp fisubr push adc stc jecxz pop mov scas ret jb inc sub push dec pandn cmc add sti jno inc sarl mov in jo or (bad) sbb les in imulb data16 or clc (bad) add aam fs fmulp pop mov xor mov mov dec or adc push mov push dec loop arpl outsb (bad) mov or repz add (bad) enter es mov mov jp dec flds call imul insb lret push mov imul std (bad) jecxz inc dec movsb or or and or push mov mov or cltd out mov outsb dec ljmp push adc in or fcomps insb add inc adc cld pcmpeqd jae add repnz in add (bad) int3 mov sbb add jp dec lcall movsb cmp fsubl inc and and mov test dec lret (bad) mov cwtl mov data16 jns orl shlb mov inc hlt inc (bad) xlat sub or lods adc sub cmp or push orl sbb leave push xchg fdivl push dec jo or pusha push popa sti jb adc or mov add faddl andb inc jnp mov jp pop nop sbb mov rcrb sbb inc add add adc cli mov sbb insb xchg add xor orb outsl dec into scas pop cwtl push jg adc out xor shrl push bound repnz nop xchg mov cmp (bad) cli bound push pop int inc mov (bad) pushf setnp lea xor jnp call js mov insl add sbb push mov jp inc movsl fmul mov int roll (bad) jae jp sub inc jb or or push fsubrl adc or outsb in stos rol cwtl je sub fildll arpl cmpsl adc jl xor pusha mov xorl (bad) mov hlt add in fs mov pushf xor jo adcb clc int lods rorb dec fdivr push shll jno inc mov or test and hlt inc xor cmp xor pop sbb pop shlb mov (bad) repnz enter into rol insl dec stc xlat test xchg sbb and add inc pop mov adc mov sbb cmp mov cltd inc aaa mov pop pushf arpl push sbb sbb jmp subl dec daa out fwait push into jb pushf ficomp mov jmp push in pop nop test enter mov or pop jge jo pushf mov or push lods or pop add inc sbb mov push add mov mov or fisub pusha inc cmp inc pop sbb add push push push add sbb (bad) sahf aas jmp jne sbb hlt push adc mov mov add dec stos and dec roll fstp xor pop and ds mov enter xchg xchg adc fucom push das stc jle test sub inc nop test xor mov sbb dec add inc cmc cmpsb mov movsb popf pop test aam fcomip scas pusha cld adcb addr16 lds pop push pop call cmp add inc out notl clc mov out add xchg add rcrl mov fildll add stos cmp rolb ret fmul lret test test dec movl cmc sbb clc lock popf add cld hlt cmp rclb repnz push mov xchg or inc scas outsl add imul fistpll add mov aad lds jmp in in sbb xchg push sbb adc push fcompl mov nop or test pop xor enter sub fistl iret sub cmp sub int nop outsb repnz or stos fcompl or sti jns dec mov cmp xchg inc xor xor ficompl aaa call mov dec dec (bad) xchg jle mov lcall and sbb jg movsb out in cld sub ss jne mov push add (bad) jl sub add and xor in arpl mov sbb js ret lock mov xor hlt es push enter adc sarl cwtl je cmp jo pop jnp pushf in mov jl jl push inc dec shrb notb dec int3 lods popf sub xor add cmc push xlat cs or mov jnp and xchg jl add data16 test and xor arpl inc push test movsb adc inc cmp jg (bad) cltd xchg or and fadds cmp dec shrb mov jmp or dec pusha fwait cmp mov ret mov sbbb xchg enter pop add sbbl inc add clc in jmp cld (bad) sbb adc fbld dec mov xlat pop xor clc cmpb jo sub cltd push jg faddl cmpsb mov int3 cli pop aam cwtl add adc cmpsl inc pusha cwtl pop ds xchg (bad) js add sub (bad) hlt adc arpl inc inc loopne rcll sbb push sub push adcb or add xor test cwtl sub mov pslld rclb shrb push jle jnp xchg add popa mov popa mov jle sub aaa dec xchg clc fldl add cmp cmpsl popa jg dec jge,pt push mov cmp and test rcrb cmp pop rcll scas adc shrb dec mov adc loope sub xor push jb scas mov cwtl mov nop bound loope movsl repz xchg rclb clc inc ja mov xchg pop mov xchg mov xchg sbb dec or nop lods imul add push add jo mov dec pop or pop jge or sub add mov mov imul movsb ja inc add fistpll inc pop and pop call roll sbb (bad) sbb mull mov hlt cld lods imul sbb adc fistpl inc lea add gs jmp xchg fld sbb stos dec call arpl sub leave ror les out int3 psubusw (bad) sub (bad) sahf (bad) call sbb insb sahf xor dec push mov push scas mov adc lahf out or mov (bad) xor adc cmp add mov jl cmp in add icebp or test add lock mov mov push dec adc xor dec push outsl xor sahf sbb jbe ror jne cmp pop and mov inc lcall in jp pop push adc into pop loopne and add imul nop sbb sub mov or push push adc or mov ror xchg xor push loope sarl pusha pop dec add mov pushf add clc es fcos mov sbb adc dec add mov imul dec push push dec adc cmp mov and movsb xchg cmp inc mov jg in push notb dec inc inc mov and gs hlt pop es fs and jge call lock js jmp pop sub push and mov and into adc sbb xchg and push shll adc or enter test mov sbb fiaddl mov xor jae or pusha sub jle int3 test es inc lret (bad) out in andb (bad) clc cltd loopne xchg adc je mov xor xchg subb mov (bad) aad jg xchg ljmp add push in adc aad add shl sbb repz rol mov add and add mov aad fdiv adc fidivrl lock test (bad) nop xor jle cmpsl jmp sub (bad) sub fnsaves call loope ja add sbb ja dec clc fistpll push mov xor push dec pushf jecxz inc ficoml (bad) repz and out mov mov ljmp xor outsl xchg bound mov aam push (bad) test push mov sub pop popa jecxz ror sar pop add lock lret mov push mov ret jne add (bad) out movsb and sbbb addr16 or and sti test lcall mov mov xor mov jmp xor sbb fbld call loopne push mov icebp mov mov add fiadd cmc xchg cmp dec mov dec test inc mov sbb and scas int dec lods xchg sbb or add sbb cmp inc test mov pusha mov cmp mov xchg js mov dec enter fs mov orb subb sbb bound dec std cmovg add cmpsl pop mov push add or and insb shrb js movsb test adc add (bad) test imul cmp add xor je rolb sbb mov mov sub in out add sti subl xor aam clc push mov cld lahf les add mov push inc loop or shll add sbb and sbb dec fsubrl test out cld mul movsb push adc add in clc enter mov jae xchg xchg adc pop xor fs pushf push adc js sub xchg jg jl pop inc dec sbb and pop loopne pusha push xor jl push rcl mov xor add push inc mov enter xor test sub xbegin push lock test fldt scas mov pusha adc add icebp dec add sub xor push xchg and sbb and sbb or mov mov add sbb fs ss mov adc daa (bad) and fisubl add mov and stos outsb pushl enter (bad) in sbb jle sbb fnstcw jnp nop test jo test int3 push movsl mov out lods mov cmp test push add out leave cmp xor mov fstpt clc movsb mov or jo push (bad) hlt or sbb wrmsr lods enter je xor and addr16 insl cwtl fs mov xorb push mov sbb pop or inc cli sbb in mov push xor adc (bad) xor xor mov cltd add inc xchg push add xor push jl mov and in sarb dec stc (bad) clc mov outsb adc mov in adc dec test rorb cli add xlat add shr push jo xorb jge adc int3 mov fcompl mov sub dec sbb xchg (bad) test mov push inc mov push loop subb pusha in rclb add lock cmp jp test jae mov and add or pop xchg ja cld dec js fs loop lock pop sbb sbb dec fildl cmp and stos movsb ds adc xor and push loope and test mov mov loopne clc data16 shl cmp imul (bad) and ds xor push dec sbb les lock mov cmpsl ja ret movsb xor cmp add or je adc fcmovb cwtl or ja inc test and inc inc rcrb clc adc popf mov hlt pop xor loop call dec and sub sbb sbb subl addr16 or call adc cmpsl add js dec aam mov lea xchg dec (bad) repz sti lret fwait das lret fsubs enter mov or pushf jne mov xchg int lods (bad) and stos adc pop inc xchg flds and push sub cmp inc xor leave test loope pop hlt inc adc dec rcll sub shll push sets cs add push push mull mov mov mov or loop jle mov xlat addb rclb sub pop xchg dec dec mov and out xchg pop vpaddd pop mov mov push repnz iret mov ficomp (bad) int in sbb in enter js sarl aaa sbb ss int jo pop cmp leave push nop pop push push in adc pop inc out sub jge aas aad (bad) repz imul mov mov inc pop bnd cmp ret mov notb cpuid add jle cli sbb push sti or mov cmpl sbb out clc cmp add xor mov movsb add add fcmovbe push fdivrp jg js lods push andl je or xor mov mov adc push add add fdivl ds jl das adc pop xor mov inc adc pop or aaa or mov inc in out test cs mov push inc fcoms xchg pusha pop mov mov (bad) dec rcrb test mov bound pop test movsb jae (bad) mov rcrb mov pop sbb jbe add mov xor adc xor test rclb xchg mov inc ds movsb pusha xchg inc stos or mov fimull mov inc sbb pop add or dec ljmp sbb push rolb vmxon inc fst inc stc pop (bad) dec ds inc mov cmp aas fcomps adc lods mov es inc nop (bad) adc lea push add cs mov dec sahf leave mov mov jmp fcmovb fdivrp repnz inc out mov call xor mov inc bound push cmp rcll loopne pop pop movsb enter faddl fidiv push xor mov popa lods xor inc inc sbb sbb nop clc dec mov sbb or and inc add clc test pop cmp pusha mov mov (bad) fiaddl inc mov in adc data16 inc and rorb (bad) push push mov jo mov call push xor and aam insl es clc add xor xchg or outsl inc sahf sub jno pop icebp or mov add in push sub hlt add ret rolb xor stos lock xchg lcall add loope loop idivb nop lods add ret int3 push je ds add lret xor loope imul rolb mov mov aam or sti pop idivl pusha inc adc push adc js sbb scas adc dec pop jg xchg fldcw mov or dec ds add and ret inc xchg roll mov xchg sbb jl cwtl jp pushf dec xchg add xchg jge (bad) nop or dec scas insb stos push adc cs sub mov push sub out sub cs les sub movl ficomp fs xchg lret jmp xchg sub in mov or cmc es push cmp push mov pop testb adc lock add mov dec inc (bad) mov jnp dec mov scas and inc xchg dec adc jmp xor mov inc xchg int3 push pushf pop and ror icebp sbb daa or pop jo sti inc sbb inc and int3 or push pop pop aam cltd mov inc sbb and cwtl push fldl aas test add cli jne hlt sbb insl cwtl mov ret push rclb js or sub sbb sarb rclb cmp fiaddl sbb or xor enter test add or ror xor adc push adc mov enter ss nop jnp xchg xchg insl sbbb cmpsl shlb mov cld insl push and stc jo mov and inc enter add sbb lods sti cs inc xchg movsb add popa add jp adc inc xor dec push xor push push add xor cwtl add repnz pop sub jmp or pop addl push imul or rclb sahf dec xor test and cmp mov and mov repz inc dec out and lods cmp sbb and mov gs movsb xor add sbb xchg dec pushf mov pand fs addl xor sbb add mov add and mov cmp bound adc inc add es enter dec pop push fs add repz outsb jl or popl cs jno dec frstor add jbe mov or inc scas leave jl cld add or imul inc pop mov sti jmp (bad) jmp cmp dec mov repz clc outsb inc call xor test or adc pushf add dec inc rolb das rcrl cmp (bad) mov dec adc ss and fbstp mov clc aad mov or jecxz,pt and jo enter pop pop les push aam and inc jmp dec pop (bad) out xor add xchg cmp pop cwtl (bad) sbb xor xchg clc in add cld cmp in or xor fdivs addr16 add xchg mov push lcall sbb stos xchg lock mov jle add dec mov sarb call push rcrl cmp lea lds rcll and cmpl shlb add loop notb rcrb inc add dec or pop pop imul and mov icebp shll sub push cmc bound mov loopne add movsb pop xchg nop fcomps js nop in nop cmpb push xlat add adc test dec fadd cmp mov gs cs mov leave mov push sub and pop xchg fisttpll inc (bad) mov aas bound and test jns inc mov sbb subb jae popa or lods jle pcmpeqb cmp (bad) ja jns sbb pop imul mov test xchg insb andb lds add sub or dec dec mov enter adc iret insb and mov inc pusha shrb dec aas jl sub aad sbb movsb bnd inc inc dec call cltd adc or or jbe inc movsb popa adc mov push shr inc inc jge and cmp adc mov add jno in adc flds or ret fadd sub (bad) enter jne adc inc sarl dec (bad) cmp in or dec cmpsb inc push and jle loopne xchg fsubr test stc pop inc push (bad) push push add and aam out adc insb in lock add fadds inc js add mov dec xchg xchg je and adc jno sub add add lret adc push add push rcrb add lcall shrl xor sbb mov and xchg jne jns mov add and mov shlb dec pushf ss imul loope cmpsl jae or mov inc aam mov lds inc cmpsl mov jo subb repnz fwait mov add cmp mov jle clc sub addr16 sub mov (bad) dec imul js mov xor daa xor jo inc adc mov add mov xlat sub push and sbb int3 hlt lahf dec and cmp sbb daa pop and mov clc jno adc mov mov sbb ss into adc adc push je xchg imul les jo hlt push xor jmp rcrl mov and sub mov fidivr hlt pop cmp adc sub xor sti and adc jne dec subb dec jg pusha test push push clc stos loop add jnp lret jp dec jne ljmp cmpb inc inc push je mov cmp xlat add aaa mov xchg mov or xlat movsl xor fnsave mov movsl pop push push xchg sub pop xchg dec inc jp (bad) (bad) push inc xchg xor lea xchg ret dec fcomi add or jl add inc pop loope jns inc sbb icebp xor ret or adc push sub out sbb sarl fiadd int3 adc mov and into jecxz fidivr leave sbb (bad) loopne inc adc test sub xor adc adc pop add mov cld adc daa mov ret (bad) pop push notb push ja popf in and and sar clc or add outsb and mov data16 pop mov inc (bad) lcall push sbbb ret (bad) cmp jnp or mov adc pop inc sub add pop (bad) clc ja pop jo movb sar sbb fiaddl (bad) sbb and arpl int push cwtl in push dec test push dec les mov jmp pop orl test fs dec push push or push cmp sub test (bad) lods or adc push cmp iret pop (bad) xchg push pop arpl xor push fs dec xchg fidivr daa insl cmp push add mov das lock xor mov push mov and orl loopne pop call iret push and pop lods roll hlt loopne repz cmpb icebp and in or jo repz pop ds inc lret xchg and sub push push fcompl dec xchg dec push dec sbb inc daa pop xor insl rdpmc out pusha mov outsb test dec dec push dec inc test cwtl lret jge cwtl testb je cmpsb pop xorb jbe add enter push jo pop (bad) push and sub addr16 sbb sbb add ret pusha dec jge adc and dec int3 adc bound aad js cmp mov pop out mov aas ljmp jl (bad) jae rcrb push sbb mov xor mov adc ljmp lods pusha jb and or add rorl subb adc imul ss pushf das shr xchg push call jno cmp out xchg (bad) jg shlb ret xchg sbb mov call xor ja xor push lds rcl shll dec mov loopne dec out subb and lock xchg lods sub fsubrs jmp mov (bad) xor mov sub cmp xor lock and fisubl repnz mov pusha add inc mov mov push cmp cwtl push (bad) mov jl rcl dec je xchg xor adc lret ds test inc cmp pop push leave cmp js add les imul jo insl addl clc aad xor jo mov imul add jecxz add inc test jl jle lahf fldt jb jge push add add bound inc aam test addr16 loopne xor pop or mov mov adc adc das sbb and push jl,pn jno and add in leave mov les sub xchg cmp sub adc (bad) or add dec sti out lahf out cmp push scas test and and rclb push jae xchg addl jbe push push repnz push subl in nop js jne mov loop push movsl shrb insl push sub lock jge sbb push cli sub jae into pop inc test jo (bad) data16 jg fs pushf sbb add lret punpckldq adc call push lcall and imul mov aas adc ret push sbb out subb add jmp mov hlt movsb xor sbbl jno nop add test pushf and cmc movsb add mov sbb imul or ss mov cmp test into dec mov push add dec and inc inc add clc js jp test mov pop sahf mov movsb rolb mov sbb xor mov xchg inc sbb jmp cmp stos add add xchg movsb inc xor int3 mov shl xchg or sub mov hlt scas push test xor and cmp sub xor mov imul mov or outsb add icebp cmp add cmc inc mov mov notb add insb es adc push and outsb fdivr sahf stos mov inc cmpsb mov mov sbbb add sbb rolb fdiv add lods in sbb xlat fimul mov dec shlb daa inc and call pop pop mov lcall aam add mov mov add loop (bad) add bound popf mov cmp adc nop fadds sub lods dec test adc mov mov ss and test inc cmpsl push xchg or mov cmp dec push jbe jbe add stc movsb sbb pop adc out pop push sub and icebp jns adc dec cmp sbb add add push mov les data16 ror and jnp dec or xchg test call out (bad) leave add add test pop xchg pop mov (bad) pushf dec mov or push pop and xor daa aad nop ret in outsb sarb push adc lock jb add mov add sarl jmp fdivl sbb insl loopne (bad) mov addr16 mov xchg xchg xor mov ds push sbb xor mov mov std mov test push xchg sbb jbe loopne inc dec and xchg inc add test mov adc aaa pop or aad (bad) dec xor pusha hlt ss rorl push stos and pusha adc insb ret and out outsb add mov dec add and pop ljmp pop inc mov mov xchg mov inc cli outsb sbb icebp adc sbb sahf mov xchg xor mov lea cmp repnz subl flds test int3 mov sbb push or leave lods sar mov daa mov or enter xchg or aam and insb inc xchg xchg les gs pushf sub adc or orb mov in add (bad) aam mov les insb inc dec push xchg pop sbb cmp add rolb mov push sub add nop inc test and rcr lret fimull imul js cmp mov push fs push inc clc loope inc cmp pusha jnp xchg mov pop movsb adc jmp add cmp mov push int3 push push adc mov test cmp xchg mov cwtl sar xchg fwait adc dec in inc pop and add push adc mov adc push inc mov cmp mov in into and dec sbb test faddl push mov add xor hlt icebp mov sbb lret xor xor dec pop fwait les sbb adc jle jecxz ja ret into rolb inc sub and repnz inc mov enter sahf mov pusha lods nop xlat mov mov pushf add sub and add sbb add jbe jnp popa push rorb mov mov cmp lahf out rcrb in or or daa pop bound fs inc and sti push mov mov and js add test push push ss pop pop repnz gs scas ret ds inc push stos sub inc push xchg stc cmc je dec add push aad xchg movsb pop aaa pushfw in into or inc mov pop mov push and add ret mov loopne mov ds pop add push mov push mov fmuls xorb mov dec ret shlb stos fidivrl into les xchg and add inc mov rclb mov test data16 and (bad) adc pusha enter add dec xchg and or or iret xorl and sub or dec adc add cmp mov pop jns lret fwait adc and stos cmp cmp faddl cltd or sub flds cmp add loope push in sahf push fwait mov cmp inc push cwtl xchg idivw or pushf out sub loopne jg push and jne pusha mov rorl test xlat sbb fisttp aad add add push mov push add cmp xchg mov je jb (bad) xchg xchg (bad) add pushl popf sarl xor mov icebp jae xchg les or push pop add add clc push lds loopne add repnz clc xlat xor call mov fisubrl dec inc je and addr16 xchg sub sbb adc out les xor mov popf gs scas cmp mov adc inc mov outsl pushf push push mov out mov sub add das jnp hlt popa or sbb int3 or adc inc movsb dec mov gs aam int3 push lret push fadd sub mov adc add adc cmp adc mov cwtl cmp mov mov push sbb mov pusha cmp add lahf mov fmull bound inc sarb fist pop insb inc xor mov cwtl bnd xchg push cmpsb mov fdiv sub fs ja lods mov ret pushf add mov xchg in xor fiadd dec adc out js out xor loop das rorl xchg popa jo add (bad) out popf scas xor adc repz js inc add les xchg add xchg movl mov ret adc dec ja call popa mov cmp add mov add push pop ljmp xor fimul or pop mov call adc call or stc js jo sbb sti dec add or add dec rol mov cmc mov or (bad) loopne test cld adcl cltd mov dec jb and sarb pop fsubrs rolb loope pop pop into adc scas (bad) sti xor dec popf enter push int3 xor adc xchg jp mov (bad) imul setl mov dec sub dec or xchg push xchg or (bad) xchg call rorb repz inc cwtl je aaa push adc sbb jb mov cmp pop xor sub ja lcall sbb cmp cwtl daa jb rolb inc dec (bad) xor mov imul in je lock jecxz mov add mov lods shll xchg add dec push jg mov jl pop xlat (bad) repz push sbbb mov cmpb mov dec mov and adc add adc arpl movsb (bad) aam adc inc pop add xchg dec shrl mov jp mov enter inc call mov cmp add ljmp hlt jge movsb rolb sub imul push lea dec (bad) fisub add mov mov mov fdivrl imul sbb leave out xor mov shrb neg or sbb or mov mov test lods push sbb jnp movsb out and sub adc scas pop fimull push jbe andl push notb leave (bad) mov jecxz,pn subb add inc rcl pop pop in or cmp add icebp ret inc fucomi dec in mov pop cs xchg add pop jl loopne stc js lods xor xchg lret push or sub mov pop push pop and in and mov jae pushf inc add xor inc mov push dec (bad) loopne adc outsb enter pop repz cwtl inc out orb out xchg enter xchg in or pop and les rclb xchg and dec mov lods pop test pusha dec rorb or cmp rcl xchg rolb loope adc dec mov jp cmp test mov scas testl cli ds inc (bad) adc in sbb dec push sbb and mov fsubp mov out and jo adc xchg push bound xor or mov adc sahf (bad) std dec adc mov jl or xchg enter or push inc clc faddl cld jnp arpl add (bad) sbb xchg (bad) or inc imul idiv lea in scas das enter pop lods add inc xchg fisttp in les pop loope push loopne lcall orb aaa jmp mov nop les inc cwtl sub enter add ds pop popa js in pop lock push shlb loop stos cmp pop mov fnstsw jne out inc or frstor rorb sub mov add xchg lahf inc or push cld xchg movl lea faddp subl ret aad and jle call sbb add push xchg mov (bad) gs fiadd xor out sar stos cmp or adc add fnstenv cwtl aas mov fisubl inc (bad) test pop push into pop bound pusha cmp call imul xchg xor add lea pusha mov insb aad add lahf mov hlt jno cli and test adc sarl xor inc inc fmull mov or insb pop and add repnz in dec and enter sub inc scas sbb lock push push rolb sbb adcb push dec lods mov lahf cs add sub xchg pop mov int3 insb mov jne xchg decl loope add mov xor adc xchg and or out test loope das daa in jmp mov dec jmp sub jne sbb (bad) (bad) sbb sbb in daa cmp fidivrl or push and out orb pusha cli adcb fidivrl mov add (bad) sbb or dec cwtl movsb nop dec rclb je pop subl std mov cmp in jge mov cmp jl (bad) fdivrl xchg xor sbb xchg add xchg cwtl dec jecxz adc sbb add dec jmp loop inc ret jb inc add adc ss sub push (bad) in and dec in hlt jl outsl mov cld aad and add jle dec mov cmp and lods aam add adc jmp pop jecxz imul adc leave add pusha les adc jnp sub enter adc je and jp add test imul xor pop loopne dec andb clc jp mov out fsubrs nop mov out inc js inc mov mov jg dec add inc pop add and les or push divb or sahf nop in adcb dec fistl cwtl add ja stos popa push xor xor push (bad) aas adc sbb (bad) fbld mov mov data16 out add repnz inc hlt insb mov cwtl dec fs loopne (bad) and xorl movaps (bad) js jle mov add mov fsubp inc inc or mov aaa or add jns xorl jb cli adc dec (bad) scas jmp pslld fcmovnu int3 lahf shl xchg and jl mov adc mov pop lahf (bad) and cmp push sub pop lods inc inc fistp cwtl bound xlat adc xchg mov sbb (bad) mov cld adc repnz mov pop mov sbb scas push mov sub fcoms dec in add sbb test push mov out cli mov fisub outsb cmp arpl pop xadd repnz loope xor shll enter mov xchg shrb aaa pop jle call rolb imul push jecxz in mov lds addr16 mov pop xorl xchg aam cmpl and mov insb xor je jnp xor popa add (bad) fild mov in test push dec mov (bad) sub test adc imul inc add jle inc pusha push hlt push add jg movsl shrl lcall mov cmp adcl dec mov xchg (bad) adc stc add xchg inc aas test dec in dec or mov js negb stos insl pusha xor xchg adc outsb cwtl leave dec int jnp cwtl fildl mov dec sub sbb shlb in pop jnp loop pop xor test mov and pushf out and das adc mov rcrb push push ret add pop lret popa mov ja mov lock ljmp nop sub fidiv adc adcl adc int mov pop push call leave lahf out ja dec in adc mov loopne sub pusha add jnp or shl cmp adc dec test lret lods add mov push loope lock lods addl and data16 inc dec push loop adc call adc or stc lcall sub cwtl mov mov lods rolb inc bound mov mov fdivrs int3 pop cli repz mov pushf out lahf (bad) popa mov repz addr16 adc pusha hlt jge movhps in scas lret xchg jmp mov inc mov pusha rcr push pop inc lahf xchg and jg pop rcrl add adc (bad) (bad) xorb pop clc mov add mov push cmp pop add xor notl adc xchg icebp adc outsl rcll mov andl add loopne mov mov fs or mov pop sub rcr scas dec ret add in sbb mov push inc sub add stc inc call sbb icebp add cmp and sub xchg into jb cmp aas fld pop push lods fs add cmp dec pop and inc push pop cmp dec xchg or pop in inc pusha loope dec or adc push mov push or lock fstps inc sub dec les dec push nop dec sbb (bad) jge cwtl jp inc jnp in xchg dec push jb xor add data16 or out sub inc mov mov out cli adc add shlb and mov scas push mov pop loopne mov rcrl sbb out sti mov pusha cmp (bad) add cwtl enter pushf push adc sub pop (bad) (bad) lret mov das stos pop add aam xchg push test out mov mov ljmp les cmp call push (bad) jp jl and cmp sahf fisubr repnz popa push (bad) lcall add test js cmpsb out inc push and in sub mov cmp cmp sbb or mov xorb inc xchg mov lcall movsb pop in incl adc jb js jle or ds mov insb mov in push fwait xor jo sti or (bad) lock and push add xorb push mov lods lods roll xor mov aam sbb cmc popf in or dec pushf adc sub ret lret or pushf jnp rolb mov mov enter in mov orb aam aaa add shlb scas push int3 outsb jge fwait mov rclb mul lock aam ljmp adc out pop js mov lcall xchg inc push inc js jp mov stos and out inc cmc and xor pusha popf pop jecxz mov pop ss pop hlt lret push addl (bad) inc push jp lods dec ffree cmp data16 add fmul adc cmpl mov jmp imull ss jo xlat nop fdivs aas hlt ja sub mov push insb dec js popf sbb xchg jns movsl repnz inc dec ret int3 jl data16 call cmpb and or jecxz add mov repnz dec and cmpsb jae mov and mov or hlt push (bad) int3 and or mov add nop lea outsb js pop push push scas adc (bad) sub cmp dec mov das lahf and loope or or test sub sbb scas xchg rclb jl or push rolb cmpsl sub jg (bad) dec test daa flds pop xchg add sahf adc inc insb mov push and cltd leave aas mov push jl int in repz xchg jle xchg fwait add cld adc xor adc and into adc pop push insb inc shlb push cmp mov push or int add push insb out pop cmpsb mov adc popa int sub and rorl xlat cmp and pusha adc daa pop bound cwtl sub orb in push iret data16 and fidiv and xlat or add mov cmp cmp dec test dec mov cmp add mov call sbb sub gs scas push dec add stos mov add jnp fcoms adc cltd push mov and inc bound sub test dec jmp sahf jno in fcompl add and push decl add xor cmc mov add and pushl lcall cli and frstor arpl add push adc fnsave add push inc mov cmp xchg jne jae mov fldcw shl (bad) mov cmpsb mov mov andb jns mov mov fadd cld push push and scas xorb insb popf and aaa in int3 js nop in adc nop addb cmp cwtl sbbl sbb jecxz push xor sbb (bad) jbe int je push xor sub nop pop imul xor (bad) movsl loop cwtl mov dec movsb mov dec imul push pop or iret lcall add fwait cmpsb lds pop fs mov inc shrb sti xor add rorl imul bound mov pop dec xor pop mov or xor imul insl and jge les add and dec lret add xchg add shll nop outsb cmp in loope clc mov sub mov xchg das and dec in xor arpl out shr inc fcoml dec je dec repz inc in adc rolb jo loop pop mov or pusha push pop repz add adc dec cmp loop pop mov add fmul jle inc dec push jo xor gs mov lock insb fsts stc stos aad sbb mov test inc repnz iret add inc xchg pusha in fdivs push mov arpl adc xor hlt cwtl sbb jnp in out jp mov popf mov mov adcb ret roll jae jg cld repz fldenv sbb outsl add or je jae push jg fcomps loopne out int3 (bad) cs jno push inc xchg sbbb nop mov (bad) add out call inc in inc (bad) (bad) fdivs cmp mov sub mov and xchg (bad) cltd fs loopne mov rol cwtl dec sbb (bad) pop sub jp sub daa int3 mov int add pop out std adc loop dec int or dec and cmpsl (bad) out (bad) sub cmp (bad) cmp and and pop (bad) fiadd out xor jns in inc or and pusha test jb push and pop mov jge imul fadds sub ja xor and push enter adc into mov addr16 add roll (bad) push les les shrb dec movsb jg nop mov mov mov in add lock adc inc mov push addr16 inc inc and (bad) cmp inc jl pop es ja ret cmp jnp and xlat lods dec fs push sub push sahf cmpsb push jo lock push and mov outsl inc mov adc mov mov xlat xchg xor ret sub pop rcl sti je and inc dec xchg jnp adc add sti dec out das jecxz movsl jmp push cmp push cmpsb dec adc (bad) xor call mov cltd push mov xor outsl sbb rclb and mov push imul inc (bad) rorl or xchg jno add mov inc cmp inc sub adc mov daa sub xor sbb jle je push inc pushf mov mov call data16 pop insl sarl clc dec lods fs mov adc adc rcrb cmp inc bound cmp iret rolb je fcoml mov jne sub dec dec pop pop pop and arpl sbb fcomip jb test outsl fucomi cmp adc out push mov inc push inc sbb push mov xchg ret jo xor inc cmp cmc test add daa cli sbb push pusha in inc outsl add fdivrl xor les je cli test (bad) push add adc xor les add xchg std pop in dec mov push xor paddsb mov and in or sub outsb inc enter adc adc sbb roll call mov push pop test clc or shrb jne insb bound mov ds dec cmp pop sbb inc call sub jo subl notb xor test cmpsl sbb clc jnp dec (bad) pop and test or xor xchg fdiv js dec jmp repnz mov js enter cmp mov adc mov cwtl stos xchg es int and sub mov jl or mov cmp aad es xor das cmp mov cmc aam mov pop ret rcrl xor pop cmp mov mov fdivrs (bad) sub mov cwtl and daa arpl pop into mov fbld pop outsb dec sti movsb add inc mov push pushf frstor jl inc outsb fistp mov push cs xchg sbb xchg and std adc in xchg sub or pusha jle push loop mov test pop imul jo sub pop dec inc mov into and jecxz dec xchg int3 add aaa push in stc outsb dec dec icebp push aam adc les dec scas mov inc out push in cmp je dec not js lret sub add and fcmovu adc xchg mov stos lock push (bad) je xchg jbe insb sbb dec cltd inc push orb mov cmp adc sub adc mov sbb ret mov enter push in dec pop sbb mov sub or mov mov out dec sbb (bad) xchg push sbb aas (bad) xor push add push mov pushaw int3 test inc subl mov in imul mov and xchg enter mov gs sbb (bad) stos aaa enter cmc lahf dec leave enter jmp fsubs enter add xor out insl or rorl mov pmaxub mov testb in ds cld popf and sbb xorb add xchg jle add mov sub ja mov and jmp dec mov je lahf paddd jno add cmp inc jb lock dec cmp sbb das add mov ljmp rolb je push (bad) adc (bad) or cli repz test jb mov sub ret jae push movl hlt adc cmpsb or stc push hlt inc mov mov js xchg jae mov push addl push into xchg call stc jo dec cmc pop cmp loopne cltd push cmp (bad) jle sbb pusha into mov xchg add repz fisubl inc std mov adc push xchg jle add jns scas inc imul sub loope loope jle rcrl subb push push mov pop xor rcrb push pop and int3 (bad) sbb icebp aam in add mov mov xchg rorl repnz mov (bad) xor xor sbbb dec stos iret outsb add (bad) dec pop and pushf inc cmp bnd dec loope and in dec cld add push popf mov mov (bad) testb pushf push push cmpsb stos scas inc add scas mov aaa pop adcl rorb aam xchg mov push addr16 mov inc shrb les dec pop push inc fisttpll aad adc and inc repz in add push pop add stos sbb jmp bound add dec movsb or sbb (bad) jo addr16 cmp imul incb mov fbld aam adc inc push outsl fld lock aad sbb sub jge nop pop push das sub clc add je inc jae xchg pop adc xor fisttpll andl rcr mov adc outsl inc add push or cmp mov mov leave pusha push sbb or out adc (bad) add pop sub dec in lea adc fsubrl notb (bad) (bad) cld mov pop xchg imul xchg xchg lods hlt xor and sti or andb (bad) lock xor pop add shl sub pop dec roll pusha push clc push pusha bound jns pop adc das and jmp add loope sub add xchg jbe lret pop outsl jae add in loopne idiv daa push mov cmp mov out lret xor xor dec adc imul sub inc mov add adc lods mov and sbb in sarb add pushf add (bad) stos mov sbb xor sti mov cwtl pop push scas scas call dec dec je cmp cmp jmp jo (bad) sbb outsl sahf sub int3 pusha sub add jp outsb sti push pop outsl add pop push sbbl cmpsb mov test mov mov shlb (bad) in and fsubr push ficom xor jge lock fwait jp push jp stc addl lock rolb add (bad) and out enter xor sub push or push nop and push mov call sub fmulp or sub into xchg jbe jmp shlb mov dec jg call into stos cmc arpl setl pop fldenv or pop jae test in inc push jmp loope pop and sahf xchg dec in orl mov cmp or push jl mov adc cmp into rcr mov pop jbe push das cld loopne push jmp dec aaa add jmp mov pop movsb dec andb push add push loope pop mov jmp loopne cmp mov mov adc adc pop pusha out nop les add mov inc or hlt enter pop adc inc push insl dec inc loopne xor int (bad) in push jbe pop cmpsl or adc enter (bad) and xchg and (bad) (bad) je pop cmp mov add scas pop inc xchg aam add cmc es lods xchg icebp adc xor cmp mov xchg pop dec test (bad) nop or jo lods and test int js test fildl movsb add sub test add stc cld ret pushf fcomp sub mov sti push add push sbb xchg imul push and enter lret xchg pop pop pop arpl adc cmp cld jo and sbb fsubrl mov or sbb je dec xor push fpatan mov lret nop insb jle aam aad xchg inc add out and or in and fadd jle inc into push ljmp sbb pop rorl bound les adc mov call cmp or push add lds aas or cli jl push gs mov aam cmp mov stc jecxz lret test and sub sub faddl mov lock push cmp dec loop cs inc dec pop add mov fsubl adc inc dec in test sub pop rolb clc xchg jle adc mov pop sbb mov xchg pusha sbbb mov popf mov scas xchg inc popf or sub xchg xchg and test and fldcw (bad) inc push cmp pop cmp lock lea add push xor jno inc mov add sub sub inc sbb data16 testb xor pop out inc mov ror scas sbb xlat xor jbe add cmp sbb cwtl pusha add ds jo add int3 pop xchg inc andl mov xchg sbb dec arpl lock jmp jo cmp fs movsb dec and mov add ja stos add mov mov adc mov lcall (bad) testb ja adc call adc clc rolb jmp mov ret xchg in sbbb xchg dec inc add xor add mov push mov test add adc sahf call cmp cltd lret adc adc loope add andl sub call mov call sub fistpl cltd cmp xchg inc sbb dec arpl or mov inc popa xchg sbb fisubl jnp movsb mov ja hlt insl dec dec dec outsl mov xor jle jl adc nop adc xor cmp mov sub adc lods dec lahf sbb mov xor enter add jae xchg jecxz mov arpl insb nop sub push repz pop enter pushf (bad) testl xor (bad) mov pop and dec inc inc stos inc xchg cmp mov push pop adc je add xor mov inc inc out andl aad dec add decl and sbb xchg ficomp add mov (bad) into ret jae scas inc pop fldenv xor addr16 or mov sbb inc pop push dec add sub cwtl add push xchg lock jnp test shrb test sbb add das inc je adc cld jecxz mov imul fwait addr16 mov out or js mov clc fnstcw mov cli pop incl mov gs pop mov repz or adc add adc lret xor push sbbl mov test push and std mov mov call and test push mov (bad) or adc jb rol cmp lret and in int3 les inc sub xor outsb mov fadds mov and adc je cwtl inc loopne outsb jl inc pusha test add fscale ja lods pop cld imul sbb or push adc mov mov mov fcmove dec and and xchg jp or bound icebp add xchg xor pop mov gs lcall mov pop push xchg push adc and lahf and ret dec jnp cwtl mov scas push adc enter cmp stos push fbstp pushf or push mov fcompl jp push add jmp mov pop rorl jb bound cwtl cmp xor test iret add cmp test mov sbb pushf test xor cmp insl das das fistl adc orb iret out (bad) in lods int3 lock adc pop lds pushl enter in xchg adc mov fs ret (bad) stc push sbbb fldt or xor sub ret xchg int3 andb sub inc lahf loope push scas arpl add cld cmp xchg sbb inc or ds aad xor fistpll call mov sub mov out adc (bad) or add test mov pop mov cmp lea lret and nop push jp inc push push sbb repz cs movsb pop adc hlt stos jmp push nop mov sub and and shlb int3 jae cmpsl push inc popa mov xor inc sub in and out push out jmp pusha pop jo addr16 xor add stos jns insl push or add jmp pop dec adc xor jo mov mov or vsubpd mov sbb call mov and xlat jo mov pop lcall nop jno pop es pop xor rorl int3 mov inc ljmp out mov shrb xlat inc pop sbb mov and or add jns shll sub test clc sbb stos adc bound clc lock out mov add xchg out cwtl adc inc push imul xor add loopne repz negl fadds xchg das and call cmp loop push popf jno mulb adc inc orb sbb or mov sub mov sbb je nop and out ror push push in addb repz pop in punpcklwd adc sub je ss xchg and jnp adc les enter lds cwtl or rorb iret pop cmp lahf stos (bad) and insb enter xorb dec xchg pop xchg je (bad) sbb aam push hlt das push je fldenv into aad xchg cmp adc pushf cmp lcall add mov jl mov movsl popa orb dec test jb sbb subl mov mov sub sbb cmp mov out adc stc dec sub mov xchg inc in adc xchg (bad) lock add dec cs sub testl or cmp test pusha jle dec stos pop add clc pop mov jae and dec jg cmp dec sbb jne dec xchg in adcb add pop or xlat add fiaddl test fistl iret daa lcall mov leave mov movsl pop jg iret or or pushf xchg or mov enter cmp push mov in xor cmp or sbb rcrl icebp xchg sub icebp fnop xor scas (bad) xchg rclb enter dec pop lea cltd stc je xor mov clc jae scas or sbb mov clc push push xor mov or cmp xchg inc mov cmp and and and dec js xchg mov dec inc rclb pop ret xchg in sbb jne xor xor mov jle xchg xchg jg aaa insb cli mov dec cmpsb mov (bad) xor je adc and push pop xchg push add js adc dec pusha scas lds dec push sub push xchg mov cmp pop push add jmp push sarb dec cmp mov sbb sbb in aam popf repnz and add fild add jecxz mov sub sub mov cmp testl or cmp imul gs ror jmp jb lahf cmp ret nop push mov cmp inc and insb add mov push in inc jno xorb adc or add imul aad xchg es add add out jle aad sbb mov dec inc pop sub aam pop jno sub dec jl add pop add lcall inc sub push in push add adc sbb sbb repz in cmpsb cmp movsb and dec or add push leave adc or and sub pusha inc jecxz bound ss into sarb push xlat incl cmc xorl stos sub sbb js (bad) add out addr16 jno and jnp das xor je inc add sub mov xchg xor or dec adc mov xchg push repnz jl insb add mov pop and test sbb push adc sbb mov sbb in and stos mov pop insb add mov push mov pop adc cld fisub idiv pop or sbb popa jno and push mov jbe or (bad) enter push mov dec mov add aaa dec sahf loopne adc test pop cmp sbb scas jge and pop bound push les orl loopne insb add push aaa addr16 mov dec sub repz dec sbb loope das mov dec mov mov xor cmc dec scas jecxz loope mov xlat push inc or sub mov lea sub stc push mov std and mov xchg je cmp ss xor mov movsb fwait adc add sub or xlat jp add mov inc fdivs add faddp (bad) adc scas pushf daa imul and subl mov add add cmpl pop imul insb mov add sbb jg mov jo adc and (bad) mov fdivl mov jl lcall orl cld sbb xchg fs inc jle (bad) jne cmpsb xor pop pop and add icebp fmuls push data16 sbb pushf mov inc mov and dec nop adc sbb xchg scas dec or xchg insb add add adc jmp xor inc dec outsl aad push and pop xor pop imul or or stos sbb stos sbb push jge cli es js jbe movsb jo shll xchg add inc jp imul cwtl aam popa addl mov je test aas enter add lods arpl adc xchg in loope adc idiv jne je in inc insl push dec dec xor jo or sbb jo test cld pop cmp adc sbb jnp adc jge pop push push pop and dec xor (bad) or enter call scas or arpl cmp or sub cmp out adc sub mov inc insb aad jg sahf jno loop dec add jl out pop mov pop push cmp push add pop jno inc orb test xor mov repz jns sarb dec in fdivrs jno dec pop dec test call or or add push cltd insb les jl and xor aas xchg in xchg outsb mov int3 adc push xor imul js stos mov add ret std and addr16 sti adc push inc xor or sbb data16 or fs or inc testl lahf cpuid movsb push pop repz ja minps add dec fs adc ret push jne add push cwtl push lahf and pushf mov lcall out xchg and sub sub mov dec dec inc jge adc test add dec outsb sub sbb mov jp test rorb xor popf lds jge test dec xchg mov pushfw sub daa ret mov pusha jge imul add std cmpsl sub and xchg sbb adc xchg adc cmpsb xchg sbb add mov stc mov movsb orl or push inc jbe push int dec cmpsb sub add test stos xor cmp nop push jmp add jae sub movsb stos jmp icebp mov ja cmp insb rorb cli pop pop add lret (bad) lcall pop stc sbbl sub pop dec in mov xchg mov add push jp lods push in out pop imul xor dec or les pop mov jl sub pop add lret jnp mov (bad) cmp lods lock jne and insb push cmpsl add jg pusha sbb xchg pop adc mov jl,pt xchg dec or sub imul outsb xchg mov cwtl xchg sbb mov fdivl sarl xor lea ret mov jb dec lcall adc mov mov enter (bad) jmp or push stos xor pop fiadd or cmp sub mov and mov add or mov out repz and loope or add insb or icebp in sub ret and sub in push add (bad) jo fnstenv leave or jl out and movb push pusha adc out (bad) fptan xchg enter add int3 loope loop subb mov aam or fild lcall clc in gs dec pusha jb mov pusha sbb divb fwait sahf add repz mov (bad) out sbb adc mov lret fwait inc add mov (bad) movsb cli push push dec and (bad) lret in (bad) lcall lret clc (bad) gs in aad (bad) outsb add jno stos and inc adc cmpsb lahf add aaa inc dec enter int pop and fiadd sub mov stc cmp add jns rcrl enter insl push outsb sbb dec and or xchg insl shrl in or add push xchg mov sbb test mov mov mov call pusha sbb movsb addl dec lret movl shr cmp adc jp mov movsb jl or lock mov arpl add sub cmp adc scas mov sahf pushf sbb in in add add pop jp sub leave adcl sub or mov jnp lods jbe pop or and sbb add (bad) and adc repnz pop rolb add xor sbb cmpl or pop lock nop (bad) pusha add dec xchg test cmp sub dec mov orb push xchg mov xlat fcmovu movsb imul imul (bad) push mov add cmp adcl mov js,pn out fs add sahf xchg iret mov stc sub test pop (bad) jb push or (bad) xor or nop mov or les loop (bad) adc pop mov cltd imulb fildl add adc add mov xchg sbb rcrb test or and add xor call dec mov loop push jp xorl loop das push in lock add repz or push pop and aad daa and xor inc inc mov cmp (bad) stc mov repz add aaa jne outsl sub outsb mov out xor lods fisttpl iret cld scas cmpsb or test ja adc pop mov inc frstor jne movb lock loopnew add add dec or loop rdmsr cmpsl bound (bad) icebp loop fnsave test dec jecxz pop loopne or jle adc add xchg mov mov adc mov cs sahf sbb jbe dec ror dec fistl cmpsb dec push mov mov or lods and pop outsl mov mov or xchg dec loope dec sbb mov test ret push icebp xor fldt push push les mov (bad) inc dec sarl mov and add mov icebp pop pop test inc mov rcr cs cmp pop in std push fs and fwait int xor (bad) mov push mov xor gs aaa xor mov jo gs fmul pusha roll lods sub popf sub xchg int3 dec movsb dec das jg adc test jnp add pusha test loop or (bad) aad mov inc lock loopne adc inc push and dec iret or ficoml add pop dec dec sahf fucom rcll and jmp jns,pt mov rorb mov in mov cmp jnp add lcall imul mov dec pushl fdivrl inc xor (bad) lock and add inc sti or and adc cmp loop jl push sbb pop or ja push and add and push (bad) bound xor or (bad) mov leave into scas imull mov and inc mov inc jp pop push or adc jo (bad) xor call or add cmp xchg pusha nop std pop sbb sbb jb dec add xor sub xchg fnstsw jecxz cs cltd mov add data16 mov pop mov inc sahf fildl test add xchg dec adc out xchg decl pusha ret sub dec adc push cmpsb adc adc lea pop fsubl int pusha test shrb daa daa push lea pop add aas sbb std cmc inc jo sub sahf inc or shrb fs subb dec cld jmp bound jle xchg jo sub ret pop xchg call aaa popf insb ror push inc sbb icebp jle mov subb jge mov nop push add (bad) push clc in and xor sbbl aad adc or cli or popl adc int3 mov inc nop ret add mov or jno movb outsl dec push pop sbb adc mov pop mov les and fstp xchg das cmp or pop inc dec cmp mov pusha add mov daa mov inc aam faddl pop or int3 push pop cwtl cmpb (bad) cmp pop lea add pop xor sbb add jp sahf sbb test test int3 cmp fs pop pop add loop sub notb cmp mov clc or jno ljmp inc je popf repnz stc sbb and popf add test std repz add fcomi daa xchg pop adc (bad) aaa mov xchg sub add jne or xchg jns mov push inc in sbb push adc rol popa add (bad) hlt test jge or jp xor (bad) xlat fadds cld jb sub fs or inc std or push mov add xchg stc mov (bad) adc or ret sbb adc add call mov adc and fdivrs jns adc xchg scas scas pop mov sub iret push push in daa sahf cmpsb add push xchg scas pop mov add lret push or and cmp add fcompl fistpl or and pop test stc sub sub and stos sbb push xchg mov lret and adc push add sbb mov add in xor pop lock jbe (bad) stc adcl adc lret out dec loope lret xor pusha add sti push or sbb outsl mov aam shrb and mov or add and or lea jle jge pusha or loopne mov fs insb sbb addr16 mov xlat test dec inc sub inc add adc jmp aam stos sub cmp jns xchg inc sub or adc fs xchg pop daa insl mov sub mov enter add dec mov mov jg push jne iret lret add push cli xor btc jns xor cmp or mov (bad) das mov test mov icebp fs imul xor mov or lret inc push jb adc and add jp inc dec add clc repz in clc xchg (bad) dec scas iret ror (bad) lock std pusha pop mov or pop dec inc or jo pop jbe cltd adc cld inc daa shrb mov inc push lret cmp nop shlb iret sbb jne sub popf xor roll (bad) iret xor xchg sub cmc cmpsb add aad cmpsl mov inc adc rcl fdivrl in cmp shr (bad) adc stc mov mov push fmull bound sub sbb cmp repnz push cmc out dec xlat cltd sbb push pop sbb and sbb es test leave mov or shll jp les stos and jecxz xchg outsl mov and mov sub popf jns iret adc fisubl inc daa mov out add clc ret xlat add push call jl (bad) in dec push inc (bad) fadds mov popl adc dec lret cmpsb mov repz mov loopne sub pop sahf movsl imul mov adc dec fwait dec (bad) aam cmp inc ds pop dec or or aas ja cmp data16 arpl or mov cli or xor inc aam insb push add mov adc clc push push and mov jb mov mov cmp ja btr pusha inc sub push scas fnsave xchg mov (bad) imul add es xor in push cmp insl or or in sub xchg data16 push xchg push adc cli add jno inc or sbb and popa test add adc sahf add or int3 cmp dec addr16 mov push andl add adc inc fsubrs add jmp aad add or notl inc push xor sub or cmpsb add jmp aad pop les nop pushf xorl (bad) je call inc stos or clc and orl cwtl cmpsb lret or add adc pushf pop enter or arpl sbb lock fbld je jmp scas mov addr16 add or dec and pushf sub bound sub (bad) js aad push sbb ret les loopne insb jnp dec xor (bad) mov and and (bad) loope ret sub shrl inc or dec call cwtl lea push (bad) (bad) xor rcrl mov fsub ret mov sbb into mov inc adc add es and push push push fucomip clc or or cmp push into push cltd pop sbb sub pushf adc mov jmp orl jbe add lods pop (bad) xor pop jge cld sub sub jge push push (bad) rorl (bad) dec ds pop jmp (bad) outsl push sahf cmpl hlt cmpsl push (bad) xor xchg test add inc and fidivr (bad) jp dec cmpsl lods dec mov push add xor test push mov jne not add xor xor add pop repz push divb sarb mov (bad) push int3 loope nop aas lds pop (bad) pop in cmc jbe (bad) lds mov ja sub fsub dec add xchg add cmpsb sub scas mov adc jae push loop xadd add or out cmp jbe fs or sarb xor jg call movsl mov test push push jmp mov pop dec not add sub pop mov xchg jmp decl lcall mov repz loope add js fcomip mov outsl hlt mov pop jae mov jl inc or icebp inc xchg inc add dec das popa pushf push push push jp dec enter pop pop notl call add add pop push imul (bad) or adc and hlt jb dec push mov xchg pop pop jp ficomp fwait xor sbbl add sub loopne hlt cwtl outsb in cmpsb xor imul push or push mov jnp lds jg or add xchg int pushw push pop cmp test adc dec movsl pop (bad) pop pop push push pop ljmp addl lcall dec pop xchg xlat ss xchg cld stc icebp xor xor or inc jns rorb rorl cld pushf push push mov pop loope mov lahf mov (bad) jnp test push sarb shll mov pop sarl xlat adc push in addr16 push aas xor sbb incl add inc int3 divl and and insl cmpsb adc fidivr cmp mov mov jmp cld les test xchg movsl inc push add aas fldl sub jnp jne sbb inc pop sahf dec and dec push out sarb mov add adc add dec pop (bad) jo mov pop fwait or and daa int addl pop xchg lea stos cmpsl push dec lahf push push mov jl loopne pusha and mov adc mov and inc (bad) aam jl lea or add fiaddl in mov jnp (bad) jmp cmp ss pop ljmp jmp jecxz gs cmp dec or inc push icebp (bad) sub jo xlat dec pop faddl xchg fist and adc jg add les divb mov and push xchg push jns sbb data16 pop cmpsb repz cs clc inc or and add mov cmc sbb sub dec lds andl insb cltd std dec pop cld pop sub add xchg adc mov sub dec or cmp pushf mov sarb xor fidivrl daa shr outsl fildll mov in movl and jge out jmp pop pop sbb xchg jb int3 pop rol jmp add xor jg clc daa mov out adc jbe movsb shrb inc xor scas lods (bad) mov dec cwtl mov mov xor mov push pop in mov adc push or xchg lcall ror or mov xchg scas mov rcrl shll ret push and loop adc push push dec inc mov push push jmp test fs cmpb cmp mov mov out jg push jbe dec or sub lahf ret pusha jb pop xchg scas imul push daa insb lea pop std pop xchg push jns sub and aad pusha insl add pop mov fimull push lods movsl xor jmp or into jae and loop push mov add jmp repnz ds clc negl (bad) rcl pusha dec and sbb daa rcrb adc mov xor pop ficompl dec fildl dec sub inc and jg inc mov (bad) or cmp adc daa mov mov mov xorl pop add adc inc add je (bad) mov mov repz xor lds push in stos inc add and mov mov or xchg subb shr inc dec or cmpsb dec es push pop or pop sbb rclb xlat aaa notl roll icebp inc and sub sahf mov in inc jg add pop outsb popf or ret mov dec and movb cmpsb sub push scas mov cmp test mov add test mov pop (bad) push push lock dec out into or (bad) xor sti xchg and xchg frstor and lret add xor pop mov popa cs rep std adc cmp loopne test mov mov push dec cmp add push mov inc push jno add cld movsb push mov and test adc ja (bad) sub jg popa rol push and mov lret push inc (bad) loope jbe inc cmpsb pop add test aam stos mov (bad) pop add mov test push js movsb jnp orl (bad) mull xchg sub and loopne push cmp gs adc mov les lret inc jmp popf mov les or fbld push xor jge rorb arpl ds outsb ret or sub in and mov mov sub jno xchg popa push and jns lock call and cmp jg and pop pop jo inc mov sbb or cltd inc xor outsl mov (bad) in push sbb sub sbb outsl push dec xor sbb iret mov or ret xlat in jae test fldenv out and or call adc fdivs (bad) das arpl cmpsl nop loop popa ljmp outsl sarb inc inc jmp inc sarb cmp adc or sub sub and cwtd pop sub jmp bound or push xorl xchg push push xor adc xchg rorl inc add out stos scas jo add insl cld jecxz push rol pop pop pop pushf or and inc pop push (bad) jle mov dec in xchg stc test jae popl pop and orb dec aaa es in inc imul lds pop push ss pop aad xor mov push adc shr lods adc pop jnp push inc push push pop sub jns dec push dec sti rolb outsl cmp ret repz xlat or sub jbe mov rcrb aas in imul je jmp and out pop test add xchg jno sub sbb aad jae insl shrl add push out pop clc lea jle int3 xor sub sub add imul push add pop dec mov out push nop sbb push xor sbb xor (bad) lahf jl,pn xchg test loopne and or sub dec cmp pushf loop pop push popf pop dec inc jl xchg push lahf xchg and jbe sbb mov test adc (bad) adc or sbb or pop gs sbb pop ret addb clc repz les or call pusha pop sahf incl push xchg xchg (bad) cmc push inc ljmp push lods rcrb cmp std aas adc (bad) sbb xor lahf mov jecxz scas pop cmc ja inc dec or mov pop jmp push pusha je shrb pop mov rclb xor adc sbb jae inc adc cltd adc mov in jp lcall movsl jns dec push stc pop mov int3 push adc mov push popa push push pop jno imul adc mov xor out dec dec incl pushf push xchg mov int3 add jns and insb clc scas sbb (bad) push (bad) ja mov add ds inc inc nop mov (bad) and cltd inc ret sbb xor gs pop mov push inc push mov out iret pop pop icebp mov (bad) loopne jecxz divl not cmpl jae lods aam sti jg cli (bad) push push add ret add js sbb test js mull mov xor clc pop sub push adc pop xlat mov pop cltd xorl dec or fisttpll adcl loope push or or cmpsb xchg add icebp inc and mov pop push add pop xor scas clc pop test pop pop cmpsb cmc sub imul das sarb fadd mov ret inc lock ja inc jg repz inc pop insb jmp ror mov add outsb test jno imul fsubs sub and subl mov sub (bad) jg addl outsl rdtsc icebp rorb mov or lret pop test subb adc js sub jmp iret and in cmp jg xchg adc xor daa sarb add xchg mov cmp jno mov repnz (bad) jae das dec (bad) cmp push xchg xchg les adc mov rcrl add mov insb and test add adc pop add push and or addr16 js dec xchg add mov inc pop jecxz jmp add in mov in mov fisttpl xorl jnp (bad) dec jae mov cmp xor sbb lods push mov push and arpl pusha nopl push xchg pop mov xchg out test cmp push fisttp cmpsb enter icebp daa and push jo push movsl xlat outsl pop and pop repnz icebp pop icebp dec movsl iret in scas mov pop sub adc dec iret enter adc jns add popa fnsave subb push out (bad) fdivp decl dec add pop push mov jae jge (bad) mov decb aas push jne,pn ds or loop nop cmp pop stos cmp mov stc pop push loop push pop cmp xchg popf cmp cmpsb xchg pop mov push cld out jnp sub or out mov (bad) jle (bad) loope push xchg loopne shr xchg in sbb lret inc sub xchg lret xchg rcll stos outsl nop fcomps jmp test pop iret mov or (bad) jae repnz inc mov pop stos dec inc pop and xor mov test es test fdivs data16 icebp dec add jg (bad) jb (bad) cmp xchg lock xchg add loopne inc jb fildl adc jae mov jmp imul clc loopne pop mov out mov add loope aas xor dec mov inc dec insl insl add mov (bad) cwtl adc inc pavgw push xchg imul lret out or mov adc mov and inc or lahf (bad) adc decl aam push mov and neg pop pop jl (bad) mov arpl and push decl sub push cs imul pop lahf add cmp rcrl loopne add repz add pop mov mov mov sbb sbb ds jmp dec ja fiadd jo push (bad) fchs inc into pop mov xchg xor jg xchg jne bound add pop lret ja sbb xor and jno cmp pop pop pop outsl xor ja add fwait mov dec pushf dec subl rorb mov das xchg pusha or or inc enter cmp aas lret add push dec aaa cltd push decl je jp mov ja cmovne (bad) or pushf jl test push loop jne mov pop push out (bad) lds ret xor fcmovu outsl inc pop push pop (bad) rcrb push dec lahf nop jl (bad) std bound mov inc call lret xchg ficomp insb test lret cmp jne stos imul inc adc xchg sbb shll movsb es mov xor inc movsl scas inc and add daa inc ds pusha adc (bad) aas inc and in notl add rcrb xor stos sbb xchg push push xchg rclb popf popf adc cmp add fisub dec push dec jo lds and shrb lock jp sbb sbb in inc or cmp jecxz pop push mov xchg mov imul jbe add sbb stc mov pop lcall sbb (bad) dec fsubrl jbe call jg bt or pop in icebp dec cmc lret stc push sbbl mov or adc mov lcall or fsubrp dec lcall imul (bad) mov test xchg jecxz ret enter adc mov test jmp lcall stos push icebp sbb lea add rol cmp mov and or jg lcall ret test jge sub ss shrl pop roll cs (bad) push adc rorb push xorb mov add lcall dec jg add push dec mov mov or gs movsl push add ss test bswap div sti das ja push ds jge lret push addr16 dec xlat cmp inc cmp xor push or fwait mov fidivrl jg not sbb in pop pop ret lods fcomps scas xchg out dec xchg std ja leave (bad) push mov pop add mov leave sub mov (bad) ljmp cli jmp add out repnz sub jbe xor push dec mov stos (bad) or push xorb ret rcrl repz out ljmp push popa pop les push pusha cmc lds and shr divb xor sbb aaa or lods adcl sahf or or mov xlat push nop rolb sbb outsl mov xchg or or sub sub (bad) jo pop aas jb inc fsts pop inc mov xchg unpcklps cs (bad) dec popl sbbl pop bound test cmc dec cmp jle xchg add mov xor push loopne add adc jo (bad) das pop fmuls inc aad std and (bad) jo pop pop aas xlat mov rclb std outsb mov jo dec aam cmp mov adc (bad) dec lds pop mov mov hlt jle test pop pop jns sub ja mov mov and arpl cwtl mov cmovb int das scas cmp push add insl or testb add mov sbb xchg mov in adc cmp mov cmc jge neg and sub aad pop xchg xor cmpsb leave xchg flds or jns push pop pop xchg outsl xor daa dec andl add hlt adc popf stos mov or or or adc jno and sbb aaa add (bad) leave and sbb or bound push lock sbb pop fwait lcall adc mov push xor data16 dec xor outsl test push pop or mov push lret jno cmpsl stos jae popa dec cmpsl sub scas cmp pushf xor push adc jmp gs pushf inc jle (bad) jo lods push xchg and push pop pop (bad) push add sarb adc sbb pusha add jo cmp arpl lret out pop and mov popa mov clc (bad) push ljmp mov repnz popa push imulb sub or popa (bad) mov shrl dec lcall add inc mov hlt cmpsb adc fwait idivb cmp mov pop push sub jo out jbe lahf sarb cmpsl sti mov (bad) in sti xchg aad popa xchg insb aam xor push push jmp jle daa push pop mov aad sub sti add lock outsl cli (bad) popa imul and add pusha das xchg xchg test je xor popa ret jmp decb in ja test mov sahf push sub psrad lret pop flds insl ror inc lcall lods js stos wrmsr movsl cwtl add out xchg mov pop mov lahf aam xlat mov adc xlat pop pop adc rorl push out std fistp clc inc lds fiaddl xchg jae xchg cmp lret iret enter fdivrl add mov xor outsb pop scas sub loope jnp xchg sbb fimul scas pop sbb xor and rcll gs adc int3 mov gs lods and jmp in jl inc faddl lret pop jecxz dec mov mov dec (bad) cld mov jg inc imul or shr and push pop add in repnz jge sub add lock xchg mov addr16 testl sar stos add outsb inc shr sub dec add pop clc aad enter push movsl pop jns mov nopl les nop mov daa (bad) movsl add gs dec and push jmp dec add jo sub es jbe ret pop jnp add dec xchg jne shrb pop (bad) pop mov or mov cmpb lods icebp ja ds inc mov sbb int jp lcall lock cvttps2pi repz xor lahf arpl stc sbb shll cmpsb ds and jmp pop pop adc pushf hlt push inc sar dec add sub repnz sub mov push dec arpl rcll push add imul mov stos jmp mov or push stc (bad) xlat in push sbbl mov jmp mov pop std pop sub sub or push jns pusha push aaa cmpsb mov jg cwtl sbb pop stc fwait dec add add jle push es or adc fs fildl jns pop lea add add les lret subl (bad) add pop push inc int mov (bad) cwtl stos sub cwtl or lods fwait pop xchg daa call loope add neg ret adc lds imul dec sbb cmpsl dec test sbb inc mov andb cli bound add shr and xchg jle adc mov dec mov jp pusha xor xchg add mov jnp fnsave (bad) sub add add loope or add jae movb push and aaa addl mov (bad) dec jns add bound jmp daa push lahf cli jg leave add lahf add add push sub out add clc jmp (bad) dec fwait iret inc hlt daa push xchg lret sti cwtl and xchg addr16 pop mov shrb aad popf and not dec mov stos outsl nop sbb in pop xchg or push push mov push stos jo stos out movsl dec push sbb jle cwtl adc jnp imul (bad) jle xchg sti aad lcall push inc dec pop dec jbe mov loop and ds call ret in out mov add adc jmp scas repnz push pop mov pop adc and cld xor aad push addr16 in or pop lock adc inc or jmp ds (bad) adc sub jmp movsl sub and mov inc and add push xor aas aaa shr xor xor add lret fildll bsf dec test loope pop (bad) popa adc flds cli enter mov cmp jl,pt int jne add pop xor pusha ret or xchg lret add xor decb adc pop push sarb adc push ds je cmpsl push pop jne int lock mov jle aas add sub or testb sub push adc outsb shl iret xor leave dec or cmp lret out push dec dec push dec and sbb jb sub add mov (bad) cmp xor xchg aas xchg sbb xchg test popf fcoml add loop fs jg (bad) push stos add add movsl dec int jmp je push sub ret out adc mov bound sub adc add pop push xor push repnz pop lret xor popf adc dec jmp xchg leave mov pop fist jecxz dec inc or not add push inc xchg sahf push mov push addl sbb cli rcrl fcomip std sbb add inc xchg or xor mov aam mov xor sarl mov fwait shr enter dec jnp loopne cmpsl add int push push mov inc adc (bad) or dec je push mov aas jmp loop sub nop jo add or or dec fbld into inc fwait mov and add dec sub (bad) mov loopne pop cs sbb xchg mov in lret fidivr por pop ja sub mull sub cmpsl add fcomps repz pop outsl rcrl jge rcll mov insb push (bad) ja pushf or add (bad) mov test lahf pop adc push mov pop mov idivl mov fdivl mov adc and add mov or inc pop mov js mov push loop mov outsl shl inc repz and lods xor dec push (bad) add push mov mov stc pop not and or jnp sub lret cld sbb add daa sbb imul adcl (bad) jl jl leave jno cmp inc push ret cmp es aad es gs adc pop mov add stos xchg sub or pop inc mov add push rorl sub cmp jns popa dec xchg pop jp mov mov (bad) sbb arpl aas mov jnp mov iret jmp scas outsb daa sbb sti cmp fidivr sub cmp (bad) sub sub (bad) lods mov push or mov add imulb dec es inc inc out add or mov push sbb dec mov popa aaa lret sub mov ja pop movsb movsb es pop es adc ljmp aas pop jnp inc push mov xor xchg push popf inc je mov cmp iret outsl add sbb std mov xor (bad) out mov add cmp jge jmp jb dec lret inc jnp jns jle (bad) and data16 xor pop push lcall mov out push insb sti push mov es decb or es jnp,pn push cmc shr pop fisubr xor mov addr16 rorb sub dec cli pop aaa pop mov es mov push icebp cld push loope lret xchg xor aad add mov (bad) jmp stc add push into lods and roll add shrb push or scas mov xchg jp xor push pop jecxz adc rcll sub mov jp xchg stc xor loope jnp pop add add add pusha stos adc sub loopne add push or ds bound add icebp ret jb pop and xor xchg mov ret add fstps dec push jno jns mov (bad) mov cmp scas ljmp dec sub mov push xor ss mov pop mov dec jmp dec pop push inc jmp cmp push adc out xor xchg ja jmp xchg mov sub and and lret jae add jmp sub or push fnsave out inc mov jne jg and or jp jecxz das out sub test pushf add push fbstp movsb mov sub or xchg fsubl sahf add mov pusha in push daa fisubr push in cmovs insl add add push sub mov cmp xor jb mov sub or cmp inc lds jmp popf mov repz rcrl pop popf lock mov pop lods jnp xor movsl aas int aas shrl and nop mov push and enter mov cwtl sarb jp xor in inc sahf ret test dec dec fdivrl pop xchg sbb sahf xlat mov mov jecxz add mov aas mov std add punpckldq adc push add sbb xor jmp testl jmp add cmpsb movsl cwtl jp je sti dec push rcrl rcrb xor addb in add mov adc into je dec stos mov stc push inc jl adc sub (bad) jnp dec add pop push enter mov add mov ja nop rcrl sub pop outsl push hlt (bad) insl inc orb enter push scas cmpsl int inc mov jl sbb mov shll sarl dec aas push mov roll pushf xor out or pop sub mov mov int cmp adc lds subb hlt ret fidivrl add cs clc jl jb sub inc sbb cmpsl in cmpsl jle mov xor out cltd out pop mov jnp cmc sbb push jmp or adc or sub pop sub mov push dec mov dec jns addl aad pop push aam loopne out inc pop mov xlat push imul sub sar push inc (bad) das sub push dec push fisubl jbe or push decl and push call pushf adc pop mov fiadd div and bnd sub cltd xchg adc inc mov sub test pop (bad) xor mov mov add ret sahf aas lods or (bad) jmp call jno das js mov insl xor or push add mov data16 dec int in ds adc (bad) insb xchg mov or cltd out std jbe adc aas in cld adc mov repnz jmp lahf xchg xchg inc pop push add mov sbb or lea add loopne addb sub and fsubrs add sub (bad) jle psubb xchg pushf adc les lea leave xor xchg jb lahf xchg mov inc (bad) jge jmp rcrb and pop test (bad) pop jmp ja inc or mov add stc or adc sbb mov out jge loop or mov xchg mov loop mov test mov call cmp xlat outsl jge sbb jmp lock hlt inc lcall push aas xor xchg add pop add sub push cmp mov inc mov jl adc jmp xor in mov push xchg mov dec insb push insl test push stos stc add insl jo imul mov xorl push aas pop scas (bad) nop dec xchg cli loop add xchg in pop push cli pop push inc lret pushf std pushf push pusha jne push aas pop add dec xlat leave mov xor pop pop cld mov xor mov or pop outsb jns mov mov leave xorl into and inc jecxz dec pop fimul movsl push push and lock xchg bound sub sti inc into das insl cmp popa es insl or repz jns adc pushf push ss lock sahf sub div xor loope in push flds inc fimull and out pop and fisubr xor (bad) sub mov ljmp push test adc push fcmovbe cmp xorl shrb arpl and jmp subl lret cltd sbb push out mov (bad) xchg (bad) es into adc (bad) xor sub cwtl or push mov movsb sbb loopne fisub ss xchg (bad) xchg ja pop (bad) push sub xchg addb mov push popa inc (bad) movsbl sbbb add xorl out and (bad) dec add pop inc sub add pop in xchg cmp jne loopne call and movsb cld mov nop/reserved sbb mov push sub lock loopne shll int3 mov adc cmp das mov jl pusha xchg adc adc cmp xor cmp repnz or lds out into mov pop adc sbb jo cmc mov cmp inc dec mov mov sbb sbb test add inc and popa sbb pushl or mov mov or jb pusha inc daa pop (bad) pop add push lock jno lahf mov mov sbb adc xor test nop add pop stos repnz jb push in incb mov adc pop cmpsb mov sub add mov repnz pop cmp dec mov add ror pop xor sub add mov test lahf cltd cwtl outsl jne add jb int3 xchg cmc inc aam subl adc inc sub sbbb adc and xchg mov push xorl nop sbb insl les sbbl call mov pop test xchg inc sub inc inc nop repz call push pop mov cmp leave shrd and ret and iret push out or sub in mov ret pop sub dec cmp fs popa sbb inc and adc test cmp fistpll xchg xchg pop dec repnz pop mov das out xchg dec and pop clc ret adc xor rclb sbb pop shlw push jp ds icebp es and mov or test pushf or or xor popa iret roll hlt inc int3 add out cltd mov hlt orl jp lock mov cld inc nop fs mov xchg addr16 cmp mov inc sub sub adc dec aaa add jb leave sub sbb inc lock sub and jnp mov mov iret notl add pop nop mov mov jo adc testl clc sbbb jo or xchg add pop mov int3 fildl push add int3 repz scas add je inc jb mov mov and or lock add jne xor fdivrl cmpsl mov das adc and dec xor int3 shrb mov sub nop jno mov repz loop rcrb and cmc and dec add aad xor mov add fstps push sbb mov test leave int3 sahf cltd dec add inc or nop sbb pushf adc add daa int3 cmp or cmp vminps mov imul imul fs imul inc ret js pop fdivl cmp mov pop mov xchg cmp pop hlt pop mov xchg xor pop adc nop jae and ret popf test loope pusha pop add mov out testl mov bound dec cld add mov cmp leave xor inc sub or mov popf inc mov inc mov popa or hlt xor xchg setae loope or or adc mov dec inc push je,pn cwtl clc es push xor out mov out sub cmp outsl dec sbb mov add add loope sbb push cmpl mov addl call sbb (bad) inc movsb lock jb cmp pop dec push in add stos cld test jg mov push call nop rolb add mov cli mov inc mov out adc loope ret in mov daa push pop and fsubrl jge jmp cmp dec movsb cld add stos push int das jg or enter roll add fild stos test xchg sar adc pop pop push mov movsb inc and and adc addr16 xchg and or sub mov in stc add mov sbb clc in fistpll push jmp cmpsl inc adc cmpsb daa addr16 sub popa mov test and arpl in push sahf movsb jns fldl mov add adc lahf mov lea mov xor (bad) mov xor sub dec sbb or loopne mov mov push cmp call inc stos popa ret int3 loopne cmc mov dec mov imul push lods les daa test xchg cmp xor dec xchg adc rclb mov lock mov bound test cmp pusha inc push int3 iret add imull mov add and jno sbb jo inc pop out fbld add add xchg jno,pn mov test push adc adc xor add leave sbb lods mov and sbb and push subl jl push movsb xchg jae sbb enter aam pop cmp push jnp stos ret jb cld mov mov inc or and xchg or add repnz cmpsb mov inc mov mov inc shl add sub xorl fsubrs jne hlt es sub jl add pusha xchg sub call push fs std pop add mov jmp mov dec xchg loopne xor nop cwtl add sbb (bad) cmp dec lock add out ror lock test arpl mov inc push xchg add push popf add adc sbb sub adc mov push xchg and loope xor inc adc imul mov xchg popa cld push xor arpl clc (bad) xchg sub cmp mov pusha xor (bad) mov imul int3 nop cmc pop adc pop (bad) pop jecxz in xor mov shlb inc je cltd mov add loope outsb add and in loop mov lods xchg (bad) cmp xchg cltd xchg push or loopne inc xor addr16 data16 cs sub inc mov pop dec sub mov push pop pop pop mov and or dec jne (bad) dec mov mov sbb or jno add into lock jae xor jnp and mov pop pop popa sbb mov lods jle daa xor shl xchg mov xor aam pop aaa test push adc inc inc add rcrb andb or cltd jae adc lods and adc outsl and in xchg lods sub mov sub and enter dec call sub push inc ror out test and jmp test scas or es adc add mov sub (bad) (bad) mov push movsb dec loopne jno popf pop mov stc sub (bad) cmp fidiv inc cmp adc pop fs cmp test dec pop adc ret mov push out mov adc xchg xor mov fcomi mov mov subb nop pop mov xchg xchg mov and fs fmull fsubr mov movsb loopne or xchg loopne cmp mov add or in pop push inc or xchg (bad) lock mov or test and fs mov loope (bad) or imul hlt insb xchg mov sbb inc mov mov sub loope (bad) jb or or in out ds xor push mov mov dec add sub pop or mov cmc add fwait daa mov clc pop add stos lcall jp add out mulb add (bad) cmp jmp subb in rol inc add inc pop jns lret xor in jge jp sub loope cwtl push fldl push adc jg adc add and jl xlat call add insl dec es loope push push pushf push punpcklbw mov and adc sbb xor cmp jae sub dec test lods and (bad) bnd in mov mov mov fmuls sbb cmp jle loopne enter xchg pop mov inc sbb loope mov ficomp pop ja sub das mov add push add cmp cmp cwtl add pop mov aas fnsave movsl cmp lds xor sub sbb xor cmp or pusha cmp das test stos and xchg pusha add mov push cmp cmp adc mov add (bad) dec mov sbb lds adc and (bad) ss ljmp imul push mov call xor dec pop jae aam (bad) rolb pop inc cmp lods add and fdivrl or les (bad) shlb shrl out adc les test mov pop (bad) js dec dec mov es loopne push addl and or xor push mov mov and and xchg jno xchg and sti mov fsts insl mov add in std and rcl ficoml push add sbb (bad) ss icebp adc sbb adcb or mov dec push outsl dec dec cwtl adc aad setae and mov test xchg scas or inc not enter xlat jmp shll adc and inc xor es movb in dec add movsl add jp mov mov enter xor sub rolb adc mov fs sbb mov or addb push fld vmptrst mul in xor sarl jo xchg rclb lock mov xor dec inc popa out jle,pt or test adc (bad) (bad) xchg adc mov or mov and sub add and add sbb xchg xor inc jo adc push cmp dec xchg fstl cs lods sub cld add and pusha fs inc (bad) aas (bad) mov in mov roll mov dec or mov leave js adc mov insb push add in adc mov clc jae scas and cld mov push inc jo or jl lret mov hlt rcrl jecxz pushf pop xor in xchg cmp jo dec lock test imul test dec and rolb sub mov cmp lods add cld xchg adc pop dec scas mov mov jmp cmpsb mov outsl pop pop mov lahf xchg xor pop ret jae inc xchg into (bad) (bad) (bad) enter push rclb pop inc fsubrp inc push (bad) clc rorb adc aaa fsubs jmp adc loopne add arpl (bad) fsubr or fwait or bndstx gs loope int3 inc pop dec jle adc or repz in push popa js shufps push or sbb in ret icebp aad xor sbb inc lods xchg xchg mov and (bad) fs cmp add lock test test xor pusha jb dec or sbbl dec mov stc xchg add and mov mov cmpsb cmp and jg mov jbe add or push inc in pop jnp jl ss cmp push sbb xor and and jl loop mov push dec dec movsb inc adc xor movl call fimull pop lds movsl addl inc arpl jp mov aam fnstcw cmp lock or xchg in jmp push mov and lahf sub out rcrl xor add lahf push and sbb sbb jle adc push pusha inc sub int3 or pop (bad) lock sub add cs add adc mov add in movl mov ret jmp add xchg ds inc dec sub loopne insl xchg xlat insb push rdtsc push imul xor jecxz fdivrs fmull inc ret (bad) mov ret mov rcrb push xchg aam or idivb pop and ljmp mov pop mov sub xor dec jns or stc mov clc das sub add sbb jae push or out daa mov sub add movsb dec (bad) jo push mov test jo adc xor ljmp int out shrb or pushf and cwtl add xor jge lea adc ret push inc idivb push fcoms cmp lods cld imul enter push dec mov add std push push mov mov pop jo mov (bad) addb shlb fs mov adc int3 in add jae push pop inc das push test and add pushf sub jo lods add and xchg add mov scas or into or adc sbb nop es add icebp add idivb inc leave aam jle mov movb mov xchg and pop jno sarl (bad) cmp sbb mov out test adc pop scas mov dec jns mov inc sub mov sub mov add add xchg fimul (bad) je pop (bad) mov or loopne add add or sub rolb ja and inc js fisttp aaa jp mov (bad) lock or jl sbb mov and lahf adc and mov (bad) scas mov mov sbb mov cmc movsl add mov sub (bad) add xchg mov push rcrb add dec aas mov call mov adc dec pop test cltd es cmp test mov (bad) arpl cmp pop in mov pop (bad) mov shrb pop inc add daa (bad) notb cmp test inc pusha call addl sbb pop fdivs add das push lahf lods jo add or pop aaa fimul mov mov imulb gs mov pop insb je popa mov jl xchg fs sub cld mov int add lds jae popa mov test cmp adc movsb push aad lcall xchg xchg inc into les mov dec add lahf add dec mov inc add in mov mov push sbbb test and or imul popa in push sbb out icebp xchg call ljmp adc outsl and cmp (bad) repnz add rorb or nop mov mov and pusha or subb sub dec xor jecxz (bad) out out pusha or and pop shrl push dec push or jmp and xor sbb addr16 hlt lret test lahf and fistpl inc add mov pop fldl cmpb adc jo popf lea cmp or xor stos add lock rcr mov cmp and mov inc es dec mov push fadds das mov rcrl pop inc out sarb mov addb cli sbb fidiv rolb pop pop daa inc loopne stc stos push inc std xlat sahf shrb mov call xchg fist dec cmpsl cmp or mov sub or mov mov mov movsb adc dec cmp jl mov xor mov aas inc pop test push mov dec pop pop mov inc add mov cwtl cmp notl dec pop les dec hlt pop add pushf es sbb scas gs inc sub inc sahf pop jb dec test or lock xchg sub push das pop push dec sub xchg insl jno daa hlt and mov and (bad) sub xor add cwtl adc or rclb cwtl loopne movsl or dec and popf cmp and mov adc movsb mov test add adc push cmp rcl daa icebp inc (bad) or test inc jp jnp and cmp orl cld nop pop pop imul inc inc fst jl test enter test mov fwait push loopne rolb pop clc lock inc ds dec mov and dec push sbb mov mov mov xchg repz or pop pop iret dec adcb pusha aam mov test pusha pop out push mov mov or xor add sub pop xor sbb nop test jne (bad) cwtl (bad) repz or pop jl add in pop leave test mov mov faddl leave inc sub inc mov sub repnz add je xcrypt-ctr cmpsl fisttp movb call andb mov rcll jg adc rorl sub lock and js inc sub mov mov mov lds push nop shrb pop faddl pop lock sub dec popa inc mov add icebp inc xchg mov pusha jns lahf xchg sarl repz sbb ret push (bad) pop mov (bad) gs movsl mov cwtl mov add lock cmp pop outsb inc and or jl add pushf lahf sbb or pop mov sub enter insb loop add fs pop lret push mov cmp cmpb mov js add ss push shr imul scas xor dec sbb in inc (bad) sub sarb or adc mov mov push loop les in inc add xchg add hlt loope mov stos fcomps push mov aas inc clc data16 lret cmp mov inc dec pop and lods movsb loopne pushf adc icebp xor adc dec xchg hlt sub (bad) lds fdivr adc and dec mov lahf mov insb jp fwait cmp loopne adc push jo rcr and dec rcr adc pop mov adc fldenv mov or push cmp inc and rol add mov cltd ret sub je adc inc inc sub addb and pop lahf or mov dec add mov or add nop clc jp push inc lahf xchg sub mov jl sub popa loope popa icebp aaa sub test sub dec mov sub adc testb sub mov and sub (bad) gs test mov jp das in leave add mov xlat add pushf sub bnd push js or or mov imul outsl inc mov add sub push jo dec add jae ret aaa mov popa jbe call mov out jl add push adc js les mov xor icebp pop test xchg fst xor outsb popa test lods fxch xchg and insb xchg es xor adc mov outsb decb scas xchg mov sub pusha loopne movsb add sub pop sbbl fs mov inc iret inc sub mov dec push jg fsubr loope xchg fs je sub mov sub xchg imul xor pop xchg cltd punpcklwd in loopne sub jno cwtl addb sub cmp adc add adc or mov inc xor adc or mov stos push (bad) loopne popa sbb jo out mov add fwait addb orb loop push js xor mov lock pop mov or rolb mov insb hlt loope xor xor and mov nop mov sub (bad) xchg test and jae enter in jo (bad) or lock mov add popa mov mov mov pop cmpl in push adc aam mov jnp push cmp lcall lea xor and dec pop andb pop dec clc add mov mov fistpl les add xor push ret cld dec add inc sbb xchg adc cmp dec int3 jbe mov test mov cwtl imul pop mov loopnew xchg jmp pop sub mov xchg add leave aas lods fcoml out push aad mov jecxz add xor mov sub push sub in js pop call mov jg (bad) loopne mov and or cmp (bad) fwait mov and cld in adc pop in push testl or sbb test sti xor sub xchg adc adc pop dec push clc push test jecxz xor sbb clc pushf add pop add loopne jb or addb xor lods push mov or popa push xor aaa push add test shll jb loop xchg test and (bad) (bad) jmp mov test imul jnp mov or mov mov stc lock lock test inc or fs adc aad jnp stc cld fadds add cmpsl lahf xchg mov sbb and arpl lcall cmp cltd and jbe fwait mov loopne sub test inc mov xor add imul xor adc aam out mov icebp dec or int lock add in fbld pop fdivrl sbb shrb or add sub add mov mov mov mov shlb stos ja dec out in cmpsb daa rcrl enter clc mov test mov (bad) sub cmp or adc loope inc xchg or adc or adc push mov cmp sahf push adc sbb jmp lds repnz cs adc add mov mov inc cmpb pusha or add iret rolb and loopne mov fwait cmp sub lcall lock push xchg vhaddpd les jno sub add lret mov pop jnp daa outsb pushf mov xchg roll jecxz push aad aam stos lret dec mov popf add jbe dec jmp jo dec mov insb insl out sub movsl xor leave imul insl les scas mov jl cli decb mov scas arpl fcoml and in dec add add sub fstps sub cmpb (bad) xor dec and add dec cwtl push leave xor sub push lahf loope jne loopne sbb out test sub xor mov icebp or push add in mov mov pop jg pusha ljmp and ja push jg inc movsb xor lds (bad) push arpl mov fs inc mov rorb repz inc xchg dec fldcw (bad) fisttpl nop and shlb cmp js lds jle add lahf jb add mov mov jle in mov lret rolb sti fsubrs adc jge lods xchg rcr adc add imul fadds sub addr16 dec (bad) das popa xchg and ss call mov sub into push lock sbb lea paddusw push je inc pop lods dec ss or clc adc (bad) push and ret hlt inc mov or push in jae jmp mov or inc inc ret or scas lock add dec dec jns xor xchg aad add jp sahf fwait pop insb push loopne pop mov je out (bad) mov or lods mov mov cmp fnstsw mov lcall insb inc pop and scas aas imul test (bad) dec iret aad hlt inc loopne mov icebp dec lods sahf inc mov in (bad) push je cltd je lock jecxz or xchg rclb mov repz lret sarb adc sub stc psubq (bad) inc mov test lds out or jb mov je jge mov add shlb mov lock js xchg je sbb les cli in mov inc call cmp mov add pushf dec push xor cmp adc iret add sbb cwtl or pop shl pop das push mov movsl inc in adc xor cld push dec mov clc inc cmc dec arpl push and dec dec test or mov pusha lods inc sahf dec pop xchg add jmp fldl aam in xor or enter daa int3 dec loope jecxz and rolb jo in adc rcl jns mov and (bad) or inc dec xchg pop hlt cwtl cmpsl or rorb add push int sub sub sub and inc or inc add insb sub in je mov adc add in mov test sbb pop adc jno pop int3 add fldl mov xchg dec jne (bad) loope push sub push movsb mov sets xchg and push and and (bad) jo (bad) pushf inc adc mov xor stos or mov push pop push lds inc addb inc adc jmp mov mov or sub add arpl xchg jl sbb test jg add sub aas adc push loopne ret sbb mov shlb test imul adc loopne js push and xor push sub xchg mov movsb (bad) inc jnp pop call jmp adc mov cmc jb or xchg and sub sub inc cmp adc inc sbb mov inc or add dec fsub and xor addr16 jge adc jg fcomps dec in rorb daa cs and adcb andl das add fstl inc sub mov fcompl movsb sub dec mov repz add pusha cmp jge sub mov lret sub or addl adc jg fdivl push fcomp adc pop sub inc push dec mov adc popa sub je into pop mov popl adc cmc mov cmp pop adc mov inc or stos pusha loop dec imul jmp dec ljmp cli dec rcrl repz push sbb fmul sub mov fs xor mov or or jb inc mov in or ljmp push pushf and loopne and or das inc mov cmpsb mov rolb jo ret hlt adc popf add push loop das mov std aad and sub enter mov adc sub pop mov xchg pop popf fcmove fwait add ret or arpl sub std pop daa les aas in push sbb inc and clc add push jg mov dec imul std fsubs mov dec xor mov ds fildl bsr mov leave insb add inc adc cmp inc pusha sub inc xorb iret jnp xchg mov cmp cmp test inc in mov loop fs jecxz xchg test test and inc rcrl xchg mov dec add sub add and dec out mov mov add out enter add ja imul (bad) mov movsb nop jp fmuls push loope ds or sbb call adc xchg add lds jo clc mov fbld add mov mov xchg and add lods dec stos jge fs sub xchg popa insb mov fs xchg (bad) in inc add nop push sub xchg mov jl cltd lock stc push inc nop ret std ret adc xlat jae and mov jno pop pusha cli and xchg popl and adc push xor iret vmwrite cwtl pusha sbb adcl sub jbe mov dec inc add add mov mov fnstcw mov mov xor xor mov js insl mov sub or push and sub lods mov and negb or sbb shll aas or test dec out daa jbe cmp les stc popf cmp dec and jne test clc (bad) stc fbld icebp mov pusha add add and faddp imul int3 (bad) cmp xchg or scas js aaa add and (bad) mov or mov push cmp nop fucom push add pop out inc test clc cmpsb (bad) mov adc nop add ror (bad) imul inc and or add and xchg loopne lock dec enter push add test test ficompl fistpl hlt ljmp add jno orb push pop inc dec or dec lcall xchg adc in xchg lods je dec push mov cmp add pop push push int dec or js (bad) xchg pusha out adc sub push fsubs enter and pop xor pushf push fs loopne inc sub mov fisubrl mov pop adc jl inc cwtl or sbb jo jo or std (bad) test ds add ret ljmp movsl aam xchg hlt sub call add movsb push fs push adc sbb je mov mov lret or inc add lret xchg add lods add pusha loope and mov lcall (bad) mov imulb (bad) lock sarl add in sbb sti or sbb cmp cmp lods pop push xor orl loope jl lods add pop add insb sbb push mov jo in xchg cmp add push scas adc in jae sub push push xchg add add mov stos imul mov aad xor sbb push ds sub add sub scas push sub test dec movsb cmp sbb adc loopne stc mov fidivrl (bad) aad shr and and xor sbb inc (bad) mov sub (bad) fs jnp adc xchg test loopne adc (bad) cli lea stc mov ret in cs orb std imul sub das pushf inc outsb loope jecxz rcrb or in sub push mov insl cmp pop mov sub ljmp mov jp mov test inc mov dec inc and cld jl xchg imul cmc xor ss pop push ret push pusha pop cmpl push pop inc push ljmp inc dec add push sub jmp xor adcb addr16 aad gs in imul dec cmp and and fs cmp add mov sbb pushf arpl or aam mov addl aaa inc mov sarb cltd shlb sbb jmp push daa mov pusha push sbb (bad) push mov push out int enter sbb bound adc xchg mov cld pop jle das pop out les jo add gs mov in xchg and mov arpl shlb adc test popf cmp je add dec inc or sub enter insb leave sbb ljmp mov rolb daa js lea mov and inc fadds and sti add sbb add mov rorb jae testb outsb push push les adc add iret mov popf (bad) fimull (bad) sbb arpl pusha adc fprem push ror clc and push sbb aam mov jge jp enter and enter in shrb add (bad) sbb lcall jge icebp (bad) dec adc cmp fdivrl inc cmp pushf pop dec ror enter push pop dec jo call adc lods pop push ljmp orl inc xchg movsb fcoms xchg pusha loop (bad) and dec (bad) test xchg add js enter inc test rorb lds das pushf sbb mov push rcrb push push ret sub and pop xlat cmpsb add mov imul in (bad) clc lods je mov movsb push in adc add add iret addr16 movb dec jns adc push cld inc push and lahf or mov hlt adc adc ds call stc ss push div push cmp jmp mov es (bad) pusha or mov nop orb xchg daa pop addb mov mov xchg (bad) std es inc push fwait arpl xchg or xor jle fcoml mov jbe inc bnd add xor mov adc rolb pop repz loopne call nop dec jl adc add push mov add loope pop rcll popf dec push inc xorl subb or test mov mov loop xor scas push sbb and cmp jmp mov and (bad) int3 dec arpl adc ds nop test jb and mov dec and int popf inc insl lock lock lcall fisubl sub sub int3 or xchg push testl adc xor inc call and dec xchg push push and sbb xchg movsb mov dec mov jle jbe add (bad) (bad) cmpsl push adcb adc cmp jl jmp cltd push add es pushf add pop lcall sub cmp mov imul inc loopne mov lret mov add fwait rolb mov mov pop xchg xchg pop sub adc loopne mov popf push ret or pusha mov xchg push mov push lret inc sbb dec mov iret repnz add dec xchg jae stc or and push jp cmp cmp xchg ret and adc js dec fisub mov mov inc loop jne,pt rcrb clc mov popa in mov jl xor mov xor les inc lods dec or out pop cltd pushl sbb xchg nop inc call mov imul nop jae fs cwtl dec adc jl fldt nop xchg sub push js dec add inc aam imul dec push dec cwtl ret pop data16 mov test lahf mov call icebp cmp js and out dec in jnp push and int inc sbb sbb stos xchg lock sub cmp faddl pusha mov add popa subl sahf (bad) lods push sti or or mov jnp mov cmp rorb out jb insb dec (bad) mov loopne push sub mov inc les inc xor or mov add enter popf jno dec jmp aam push in cmp pushl mov adc cmp test es sbb pop xor sub clc js sahf call pop cmp mov xchg xor and outsb push arpl cmp or push cmp lcall jmp fdivrl lret jno scas dec sbb pop fs es sbb loope pusha pop inc push add lea int3 inc std push cmpsl sarb add add xor f2xm1 add call jl add jae pop loop mov in ret stos mov lods movsl loope les xchg fs jl inc jo cli add pop lret jg add adc int3 add test xor mov push aas inc pop jl add sub (bad) mov adc sbb js arpl xchg cmc cli inc nop pop ljmp mov dec call ja add xchg movsl mov popa mov jecxz lds popf out (bad) dec add add xchg repnz mov gs push add jnp fldcw xchg arpl (bad) sahf dec cmpb xchg mov cmp (bad) in lds add insl call push pushf hlt xor add cmp ljmp or jne nop test push insb or sbb dec (bad) xchg add pop adcl cmp data16 or inc or and mov mov pop lods stos mov (bad) enter sbb jb sahf pop xchg icebp testb sbb sub mov mov lock sub sub (bad) mov (bad) add es mov xchg add cmp stos add adc adc inc aaa dec push insb sub orl xchg push pop int3 xor dec pop clc add or mov aaa ficom mov pop push nop mov add jae mov xor mov jns test sub mov add cmp sbb add push xor mov mov sub push mov inc jns inc andl (bad) rcrb pop ds fs jl cltd push xor jle,pn gs xor push sbb loope or and and div xor loop pop xchg rolb mov in in pop mov mov xorl inc loope jb add (bad) push mov fildl imul add dec mov imul (bad) movsb fcoms pop fadds lret and daa jp mov mov cmp pusha enter jo inc xor jne mov adc sub mov and fildl lods xchg aad movaps xchg mov xlat outsb push incl jg mul arpl in and popl mov xchg stc mov nop jp sub pushf add push mov mov adcl imul nop lods or stos and mov mov and xchg jns sub int3 stc lock pop dec insb sbb (bad) jmp pop xchg ja mov adcl or adc int3 mov dec pop icebp (bad) or ljmp xchg mov lea dec mov xor adc jl popa mov jg inc sbb adc mov out pop mov and jae enter add out rcrb push sbb dec add hlt mov xchg lret inc (bad) cmp ret (bad) sbb stos jae add push pop jg jmp loopne xor sub jl fwait mov fmul movsl xorl xchg dec mov test in sbb mov imul int sub je ljmp call imul clc or and stc jl int3 rolb adc xor xorb inc push inc mov add rolb movsb inc in icebp jns add in andb jge test andb mov push sbb pop push cmp jp add fdivrl add mov cmp (bad) hlt popa test add in outsb jp add mull mov xor mov bound test dec movsl xchg xor add in test loop pop dec test pop jne in int or xchg cmp lret dec cmpsb lds push xor sbb add inc scas push call test repnz fcoms out dec js inc int3 fstpt mov add jns xchg adcb xor insl pop add arpl cmp pusha mov pop test enter dec dec fcompl sbb mov mov adc aas cs outsl pusha (bad) leave push out push or or jno loopne lods repz aas pop push sbb stc add push push cmpsb or push loop mov mov aam mov out sub out add imul mov pop add and pop pop add je cld movsb fsub clc lods mov mov push (bad) xor jno and jne rcll cwtl push cmp rcl mov push dec jp fwait pop repz add leave sbb outsb adc xor push jp inc dec mov (bad) mov jl,pn xor dec int3 mov sub popa repz clc sub add sbb jo or xor cmova int3 xchg xor jmp sbb ret int sti mov in cld aam mov call (bad) add pop or loope sbb dec cmp xor and aas imul pop pop (bad) imul insl and fnstsw adc sub adc mov ds dec movsb sarl insl into js ror lock arpl (bad) mov cmp dec addr16 pusha mov subb cmp or dec pop outsb jl or cmp push addb ss dec mov push adc subl fstpl std jns push cmpsb out int or in dec mov addb cld ds lds cmp cltd push fadd sbb jge mov sub push es rorb imul push je jmp adc dec mov lods xchg arpl in jo jns xorb cmp pop loop dec push xorl fucom inc aam cld rorb enter jo lock add enter inc mov scas jbe pop cltd fadds aaa je cmp in sbb inc xor add push test jl xor fs aad jl jo xor fisttpll xor clc ret nop sar fdivs enter and fs fisttpll sbb sbb shll fistpll xchg jno loope cld mov pop les push fistp xor movsb mov add sti rclb xor loopne adc lods or scas xor or or sub sbb sbb lock in pop pop mov or inc (bad) insb loopne inc sub (bad) lock xchg arpl cmp mov es or inc pusha lods mov cwtl push shr test xchg gs sbb clc arpl push outsb lret inc inc cld cmc and fistpll add cwtl das leave sub sbb push adc (bad) loop add hlt xchg jae jmp ror icebp jg call sbb and xchg (bad) jno inc pop roll into test shrb mov test and mov adc mov add ja jae mov faddp imul push jmp inc and adc adc push sbb jp inc add ljmp push xlat dec cmpsl test nop add imul call add jno mov sarb sub divl test out dec add inc loopne andl je dec dec dec jne or cmp fcom add repz push sub pop or push into push and nop push push les jmp or and sbb pop rorb sbb or iret popf cmp and mov fdiv cld add mov xor adc (bad) xchg dec mov pop mov addl mov or mov ret andb lea jo pop rcr pop call inc stc inc and sub add and ucomiss mov cli clc lea xchg add sti (bad) fcmovnb pusha cmp test xor or xor push jmp mov loopne dec or (bad) xor mov cli cmp cwtl sahf dec jo mov sbb out dec add pushf mov into push stos insl jae mov ds shrb xor mov sbb call out adc push daa fsubs aas sbb xchg shrb imul or loopne fs (bad) pop les fsts rol cmp (bad) inc xor outsb repnz adc adc shrb addb lea outsb xchg mov sbb push add rorl insb addr16 (bad) rorb sahf call xorl in xchg and add mov int xchg cmp and outsl push iret mov (bad) pop adc jne and dec inc add mov sub icebp sbb jmp shr xor imul insb xor (bad) jb iret inc jo sub cmpsl nop sub int mov mov cmpsb sub jmp outsl ret or sub packuswb adc js dec add sub jo aam cmp (bad) jb sbb pop (bad) repz or stos xchg mov enter or test loopne sbb add jb (bad) mov int push mov fcoms (bad) cmp add orb popf inc loopne mov xchg sub sub dec add and dec pop jecxz dec out adc lcall add cld mov pop jbe sub and jo mov cmp push and mov repnz or sub xor pop scas (bad) adc dec xor pop push mov and data16 ja pop push and out data16 mov ret ret pushf push icebp pop mov push push rcr and or dec pop sub out in sbb sbb or jl int icebp clc mov add mov sbb bound xor push cld or add xor and adc add sub mov bound xor cld bnd dec add add jmp shr pop add push (bad) jb mov incb cmp xor sbb jg pop and notb (bad) sarl mov scas subl cwtl es shlb hlt leave cmp push stos push push in lock dec mov lock dec xchg sub mov sbb js mov js (bad) xchg pop cmp push outsl xor pusha aad dec (bad) insl mov add dec mov popf (bad) in mov jne les cmp fistp mov sub add adc mov aaa jp popf movsl fisttpl push add out push rclb sbb jl add mov add mov cmpsb rolb (bad) daa mov cmp jp dec popf rcll in repnz call cli (bad) lock lock jmp xor sub repz cmp and and cmp xchg mov pop sbb xchg xchg xlat jo add lahf (bad) mov jae add sysret xchg arpl stos and add inc stos pop inc bound sbb mov insb (bad) notb jmp pop mov insl sub xchg pop shrd daa dec call (bad) cld xor xchg adc mov fcomp or mov leave imul push add sub les popa outsb (bad) sbb inc nop mov and jo inc pop (bad) pop call and sub or stos sub inc mov cwtl add xlat (bad) call sbb add adc test cs out dec popf pushf xchg popa rorb mov dec inc fnsave or sbb ret ret leave pusha sub in adc incl sub mov jmp fsubl imul push test ja jl xchg mov push inc psubb sbb subb shl xchg pop mov push mov add subl push and daa lock loopne scas (bad) enter add das fistp rcl adc fmuls or fs sub cmp sub leavew dec stos add movsl scas adc rcrb test addb mov adc push pop lock xchg rolb fdiv dec mov cwtl js inc jns jo push xchg shlb in dec mov lock cmp dec in ja pop out or or std inc sbb mov mov dec cmp fstl mov dec adc cs rcrl arpl sub dec test lcall call arpl das xchg jo dec xchg mov sbb add cld inc call add (bad) mov dec and and pop add mov inc aas mov mov cwtl sub int3 xchg push dec or mov popa sbb cltd sub pop shrl loop dec jle loop xor add sub roll pop xchg sbb pop scas jne orb mov push add mov mov fcomps inc add mov andl push add mov push daa repnz or push lods insb sbb adc adc add add dec push xchg fdivr mov push std clc cs xchg dec xor jmp pusha ss and adc imul xchg mov adc mov into push loop inc adc and dec stc or and lea mov push mov and lods fs jae mov cs dec mov das into xchg jns dec sub ja test sub imul add dec jmp and mov push outsl mov xchg sub out pop push mov jo add mov inc adc in jmp subb sbb (bad) into add jmp or adc incb and insl int (bad) fistpl dec mov xchg cmpl ds inc inc out xchg cmp mov add cld repnz int3 inc mov jmp sub xchg test adc leave and cmc movsb js jne add mov adcl divb adc (bad) icebp or push (bad) sahf dec insl rol sub add fwait addl data16 (bad) xor xor ja inc lock shl mov sub dec and daa fist nop cwtl mov jg add sub xchg fistp call pop lock or pop sbb xchg je add dec lcall (bad) and es pop test sub cld test dec dec test sbb mov pop loop xchg stc loopne (bad) sbb jb or pop (bad) lock jmp add ret dec mov add jae and xchg pop jb mov nop adc pop popl mov adc jo push enter pop cmp int3 or push pop cmp lds jns xchg or or add jnp dec mov lret in cmp lahf pusha inc add test daa out push sbb adc movsl push jle and shlb lods mov jl pushaw mov je nop clc mov loopne mov inc jo ljmp cmp int3 cmp dec mov or jecxz test cmp cmp dec xor inc dec or push pop sub clc cmp insb add xlat fwait and xchg xchg inc push rcr mov movnti stc xor jo mov dec aaa push dec dec inc cltd lock cmpb dec sbb lock lods push test nop movsb and dec pusha roll (bad) push or cmp or dec xchg lahf adcb test mov add jmp (bad) pop (bad) rolb dec xor popf js jmp mov (bad) rclb sub pushf xchg adc mov mov push mov inc mov popa lcall in nop and call les pop test or shlb sub dec in (bad) int3 outsb lret popf mov adc repnz mov popw push pop or ret cmp push jp push add mov xchg mov dec push repnz les mov mov lret inc dec call pop daa sub or lret mov out add cmp sarb inc test popf cmpsb push mov out cmp add inc or bt std and or roll lds pop or nop mov and cmp jl add ret cmp mov add ljmp and add (bad) lea inc mov xor cmp xchg pop and sbb add pop and inc cli sub and inc sub mov sbb loop xchg pusha sub push jae sahf add fsubr add inc mov loopne inc repnz pop jae push mov pop popl cmp sbb js sbb inc shl mov pop mov clc adc arpl or call sbb rclb jge pushf adc mov shrb mov mov xchg cmp es and arpl mov ret ljmp daa (bad) mov mov sbb push or mov test loopne hlt imul call stos or loope adc pop in dec mov in mov adc adc xor dec inc inc leave dec hlt das cmp cmp sub int3 dec sbb mov aas popa or dec push mov sub sbb mov leave and push rcrl cmp aam out or sbb cmc mov pop inc xor inc add pop push push cli sub aaa fdivp adc jmp mov aad mov jecxz ret incb frstor in xchg pop inc push pushf pop jmp outsb xor dec rorl sub add mov nopl lock dec mov pusha int3 mov add fpatan (bad) popa lock mov hlt push pop and mov mov imul int3 roll movsl adc dec stos adcb dec cwtl shrl incb cmp add mov inc sub jg cmp xor int3 xchg mov rcr add ret dec daa in push sub adc jns mov popf add rclb sbb push inc add or aaa cmp lahf inc dec mov inc cmp pop cld cmc sbb inc cmp adc add das loopne xchg and sbb or jmp mov xchg sbb in mov mov ret pushf adc in roll out dec adc jb or mov inc add push dec fildl mov pop ret das inc ljmp sbb jmp inc xor int3 inc mov fdivr sub dec inc xor pop jmp insb lret xchg sub mov push mov lock adc (bad) hlt pushw mov (bad) and adc fsubrl push inc or add dec mov loope mov xchg xor push xchg inc sub imul mov lds xchg push mov lock adc sub clc js imul scas fmuls and add xlat loopne mov nop dec addb int adc pushf fs sub pusha es mov test loopne dec jnp and rclb add subl mov cmc mov or loop mov mov jl sbbl mov pop xor rclb rolb aaa pop mov push mov loope popf (bad) scas inc sti inc or aaa inc cltd jg mov rcrb push cmpsl xchg add xor sub adc mov add jb or add gs pusha mov inc push in je movsb call nop add stc ret bnd test mov pop push ficomp dec mov pusha or inc fcomps stos mov arpl repnz pop pop rcrb or addb es cwtl add inc push mov mov stos pusha pusha (bad) dec add mov mov (bad) jmp push mov leave and cwtl xchg pusha xchg icebp pusha movsl in andb jo mov aad jl es dec mov fs iret sbb add adc mov test dec test rol int3 cmc pop pop add inc fnstsw dec jae jno xor negl adc inc mov stos lahf xchg cmp pop (bad) mov cmp mov addl lods cmp das xchg pop mov mov int and je jl pop cwtl mov mov and push mov and inc sbb and adc jmp loop pop inc in cld lods rcrb mov mov mov push sbb dec jl out loope inc call cld inc cmp xor pop in mov mov and or fs xchg jo adc cld add fxam and fistp lahf adc add addr16 call das xchg jns add mov popa or pop mov push pop xor sub inc adc and mov mov xor mov in sub pop decb mov mov inc int cmp nop cwtl mov (bad) xchg cmp fisttpll shr cmpb push add jecxz in repnz in lret add movsl adcl rolb das push insb pop sbb sub inc cwtl mov ds adc jo pop inc test pop fstpt mov scas jmp or dec sub lods mov inc mov sub sub mov cmp push call jl aam outsw shl push push xchg sbb lock cmp scas fiaddl or lea pop sub dec xor bound sbb and xor js or add pop mov pop adc mov cld rorl loope inc mov sbb inc les popa std jae mov ja adc jp test loope adc mov mov sub mov subb (bad) sub add das iret xlat mov push enter stc mov push loope (bad) or push jno in pop out push inc loopne adc and pop cmp or call and fcoms mov or nop push lahf popa push jmp dec push adc push test inc nop inc mov cmp mov add fistp add ret adc inc daa or jle cmp xor pop loope,pn or and mov xchg pop in cli xor inc js in jl mov push jns or jae and dec mov inc mov out jo xchg popa add adc jo fwait xor stos inc insl mov ss hlt pusha les int3 jl les pop adc fidiv inc mov or outsl iret clc xchg xor xor imul hlt or cmpb or and mov push aam out cmp daa hlt pop mov cmp scas and mov enter push jl daa call pushf scas clc lahf and cwtl sub xchg lea add mov leave sub (bad) dec (bad) leave fisttpll pushf mov loopne inc and lcall lods mov or pushf or sbb dec es iret sub jns jno cmp add (bad) rcr dec (bad) mulb mov aam xchg adc mov pop mov mov inc dec cwtl aam dec inc dec xor jno mov pushf movsb mov test mov jns rorb sub mov jge xchg bound pop push cmp push enter pusha push mov or and aas mov in lods enter sbb xchg xlat xor mov pop dec pop sarb xchg addb add cli pop jns movsb or mov add iret data16 push sti or add xor movsl add loop push cmpsl in ss daa jns add add mov rcrb les add loopne xor scas in stos pop lds mov cmp push mov repnz psrlq xchg xchg xor cltd sub leave or inc int3 inc push sub add sti dec sub popl and fmull jl sub push mov mov sub imul pop xor xchg leave (bad) je sbb cld sbb add loope repnz iret add std test sbb cmpsb cmp addb or adc sar add out lock add xchg pop mov sub jp and loop (bad) xchg xor add lods in lock int3 in sbb xchg mov xchg mov xchg ds add sbb mov adc add pop in and cmp shlb xchg out mov sub jns clc mov xchg mov mov aad mov pop insl adc mov cmp aaa add dec jo mov push push cmp add pop sti les aam icebp int3 adc and mov sub or dec es enter mov jp cmc sbb mov cmp ds scas out shll pop mov aad mov add xchg es and mov or or cwtl dec fwait xchg sarb daa push fmul adc and sbb cmp inc cli mov or (bad) adc fimull gs sub cmp push pop pop lods incb sbb dec pop mov cmpsb aam mov ret pop adc push mov (bad) scas sbb push mov push (bad) nop add mov faddl (bad) aaa cwtl outsl add push movsb rorb sbb inc push mov add ret call add xor adc pop call lock mov push fmull push xor inc lock and pop mov push mov aas add or pop push mov shrb mov cltd rclb mov sub cmp cli ja mov mov das sbb add call mov test xchg push xor enter mov sub jg pop or xor cmp push or and or std inc in mov sbb xor sub ret pop jle in imul xor xchg fs das jg je imul arpl sbb jmp sub mov cmpsb xchg and ljmp scas push lds call mov push (bad) jb out xchg sub xchg push mov sub mov cmp jmp mov jmp push inc cmp add xor sub push push movsl scas aad mov mov jmp push inc popa mov pop popf xchg shrl mov xor sbb ret movb jmp add xor inc adc mov sbb lods in or adc or jl add cmp dec or out std xchg sbb pop call stos xor mov mov (bad) cmpsb int3 arpl push push mov dec and idivl dec ds add mov add jnp sub icebp jne jo aas loopne dec mov mov sbb jno mov dec in mov adc add pop dec inc fadds push sub rclb jg and jo mov sub imul mov (bad) shrl aam addr16 outsb add push ror jbe mov inc mull jno cmp test dec loopne aad inc addr16 cmc or movsb cmp jl push sti aaa inc adc ret movsb adc jl aad cmp adc pop sub xor dec add jae fs push mov and ja cwtl dec pop lret cmp and loope adc xor sub cmp lds push jns into jno inc and inc add xchg jbe push imul jp jo and push adc add lahf je addb mov ret divl dec inc fisubr in jae or int3 adc lret inc mov add sarb test mov cltd adc cmp mov pop xchg pop (bad) lahf movsb inc pushf fwait xchg push in or add aaa (bad) dec aad ret pop or insb std daa cltd pop jne test in jnp mov lret stos push xor add jg mov sub add add sbb xor inc and mov mov movsb adc add or addl xor add or les ss add fmulp add xor aad fldenv popa inc pop sbb outsb xor inc mov or lcall adc out or sbb or lcall movsb ljmp popf mov push cmp xchg jp cmp pusha mov aaa adc inc jg xchg fstps into movsl sbb and pop dec add sub adc rcrl or es and sbb mov ja (bad) aad enter mov repz and inc lods sahf dec movsb adc bound fidivr adc adc shll in inc add and xchg popf jbe push dec (bad) xor xchg add xor sub xchg in add cmpl addb jmp lock inc xchg mov outsb insb call dec ret lret push push ret adc pop adc add push aam mov dec add push push pop dec jns xchg xor cmp mov data16 add add icebp mov cmpsb out ss test xor js pop inc jo pop test xchg push mov cld pusha lds rorl or (bad) mov mov adc aam aam pushf test add or and mov inc test sbb and aam xor and and loopne int3 adc jb lods movl mov cmp jl hlt test mov add bound mov pop xchg scas inc jne iret sahf fisttp fldenv or inc and sub mov cmp out test dec push adc ja ret leave fisttp popf push divl popf xchg int pusha cld es sub inc lcall sub cs dec or mov syscall add cmp stos shl adc mov mov sub lea scas (bad) pop jne push push rcr cmc cmp cs dec push and in cmp xor cmp dec insl xchg mov rorl xor jb lcall leave pusha dec push mov sahf fs cmp pop repz push pusha jge adc cmp addr16 mov movsb xor push cwtl add out mov or pop testl movsl xor add and or add insb and add sahf pop and shrl inc ffreep add pop sub (bad) fstpl sub mov inc and int3 add mov addl mov push ret add test cmp retw jge fsubs dec cmp push dec cwtl (bad) or adc shll add adc mov cwtl sbb aaa mov cmp mov pop stc mov mov rclb movsb mov add clc push xchg imul push aaa outsb ljmp lock mov lods push push and and add push add xchg outsl repz mov mov ss or push jno sub dec repnz dec xor fsub add xor sbb cmp xchg adc inc sbb rolb push or lods mov inc jle roll andl aas xlat add inc decl jno cmp lahf in jne sbb (bad) inc pop push jno xorb dec mov (bad) push dec push pop loope sub or add jge push add adc inc (bad) cmp dec cs or xor push and dec adcb in pop scas lcall std sub inc jp,pt pusha xchg and jnp aas call and out dec fbld sub rolb sbb inc movsl dec sbb cli adc adc in or pop pop cli ja ret jmp xor (bad) leave pusha cs in jmp mov sub jle std mov add xor sbb lea andb rorb std dec add push cmpsl cmp cmp cs push mov inc mov gs sub je push es dec xor mov mov stos pop xchg cwtl or popf or add add cwtl mov jecxz sbbb mov pop popf jp add adc (bad) sti jbe andl (bad) fs adc clc mov je aas popa dec mov sub and mov jle jg rorl xor adc sbb add sub fs cmp out push mov jmp mov dec and xchg mov cmc ljmp mov sub aas clc dec xor sub adc insb cwtl or out das les cmc adc adc jnp test mov andb pop add movb cmp sbb and sub or push cmovs int3 les pop rorl sub loop jb sub test mov jl adc xor and sbb mov in add push scas (bad) sub aas xor pop and inc cmp sarl mov mov hlt or or addr16 mov add xor xor das jecxz sub (bad) inc add dec sti inc xchg (bad) and add cmpsl add ljmp pusha lods xor dec xor movsb and pop in pop les or inc pop test testb adc lea imul and push clc add xor dec xor pop inc sub aad mov push rorb mov push mov js shll imul (bad) (bad) and or inc mov test mov out mov inc clc ss dec nop les dec mov add ret pop adc add cmp ds push mov mov push stos and xchg (bad) or lcall add mov or push rolb push sbb pop pushf xor add xor (bad) repz inc fs mov call cmp mov shlb sbb xor pop pop test js pop mov test cmp cmp nop test or sahf inc in push add cmpl mov lock sub add jmp cltd mov xchg iret mov or mov inc cmpl cmp in dec (bad) insb out popa pop inc xacquire stc popf sub or or add (bad) jp rcrb lods dec jge sub popl mov cld jecxz rcrl pop popa add mov rcr test mov cli xor lahf pop mov mov dec in push dec cmp insl in jns leave cmpsb movsl aad sbb add lret ljmp push andl pop pusha ss mov rorl (bad) jb pop jae xchg and pop cmpb xor add push xor cmp adc xchg adc stos (bad) cs lgs pushf in loop lds into or sub pusha or sub or cmp jle mov in daa mov xor xchg mov lods inc cmp or sbb sub clc push pop inc nop rcr std or push cmc sbb ret scas and or xor pop jp add add sbb test add mov sub adc pop xor or push daa ja or push ss pop or add fiaddl lock das lcall mov fistp ret out sbb ja pop cmp dec je sbbl ja pop mov xchg inc jo cltd (bad) aad push aam rclb pop push xchg add rcr dec push int pop rcr cltd daa sub rcll inc add or sbb pop push dec (bad) fcompl test and sub imul add dec adc shr out jecxz mov cmpsl das fadd mov xchg mov cltd xorb add int3 aad xor bound pop mov inc rclb jge push and sub add ret add (bad) jmp xchg add cld sub jbe xor andl dec xchg (bad) pop (bad) inc test pushf fldenv in pop bound mov inc (bad) outsl aam xchg rcrl jnp adc add adc daa nop lods xchg pop xor sbb jmp push mov into stc jge rcll insl dec lret xchg or inc mov scas xchg and push xchg repz add arpl adc mov scas jne and lcall and jne pop dec sbb inc pop test xchg pop or dec sbb arpl lock mov pop cmp and imul (bad) sub cmpsb or lcall xchg dec xchg pop or and inc adc daa cmp push lret sub push add cmp loop aaa push ja mov adc mov add mov repz jb loop dec mov xor sub inc dec popa (bad) data16 scas adc or dec xor cmp fs gs inc pop adc xchg imul and dec push add jno cwtl fcmovnbe leave mov add das fisttp mov les pushf cwtl mov push popf das ret lock or orl mov mov cmp xor dec int incl sbb daa and adc xor add sbb push mov adc js out sbb push stos cmp rolb or out inc inc inc or and inc or cld dec call sbb cmc dec inc sub mov pop xchg add inc pop xchg call mov out mov pushl out push call add (bad) fidiv fcoml (bad) jl mov xchg jb xchg pop lcall mov addb lcall mov stc push push dec jg mov pop sbbl adc mov add in cmp push test movsl inc add daa cmp sub inc in pop sbb lret sub cmpl aas mov jle ret lds jbe mov xor add aad out mov xchg mov sti xchg out ficom outsl xor adc cmpsl cmpsb pop pusha scas movsl testl insl mov mov add mov call sub mov and adc and in adc push mov or and inc pop add sar pop mov dec cmp out and addb icebp loope mov jnp dec inc je adc sub push sub push or adc push xor xor fdivrl adc push sbbb in adc stc hlt cld fwait popa insl adc notl push ss cmp or cs mov enter jg inc (bad) or xorb movsb les mov pop inc (bad) jge ret incb jl mov jb mov jbe add insb sbb sbbb pusha lret xchg xor or and sub dec scas add push ljmp adc xchg pusha jg fstl lret adc jecxz loope add das cmp adc xor or jp jmp fcoml data16 test je stos enter imul cmp test push cltd movb push faddl inc jecxz pop enter cmp scas nop jl test dec inc lods addr16 or mov sub xchg adc iret dec xchg repz cld mov mov add xor inc imul mov or adc push dec mov imul ja adc dec imul adc add or sub cli incb (bad) notl cmp mov xlat ret mov insb (bad) cmp adc inc mov jle pop cs lahf add push faddl cs repz xchg icebp jo mov push ja mov loop mov pop jno cmp and sbb ja add jno xchg in lea mov or int3 dec inc xor dec sub stc pop mov icebp inc sub (bad) jb (bad) xor add dec and dec rorl test stc and (bad) cmp mov or cmp push xchg (bad) (bad) rorb loope leave xchg push add or pop jl iret adc in add fsubs mov xchg sub xor (bad) cmp insl xor add test cmp sub ja adc adc incl popa pushf (bad) daa adc pusha add sbb cmp out inc int fnstenv fildll out mov test sti jecxz test (bad) or scas sub add mov mov mov dec push jo inc and add lea push inc mov fsubs cmp jo push pop daa sub cwtl decl ja adc lahf push jmp jl adc add push scas adc popf cmpb scas pushf out mov mov lret lcall mov mov sahf cmpsl mov sub call js mov inc adc pop adc xchg push pop xor popa sub add and inc push lods lea sbb xchg and dec mov add or xchg sbb xor xor dec scas mov or push insb ss cld (bad) push add mov pop add and or dec hlt inc add push jo sub xor add jle mov loop mov mov mov mov (bad) push pusha push add insb sbb fmull pop inc lret sbb and ds cmpsl dec sub sub add or dec movsb sbb sarl add scas lods push add mov and inc cs loopne dec jg sbb aaa xor push icebp (bad) mov leave pop mov cld push loope xor pop xchg sub addb lods push pop cmp xor add push int or sub mov mov jo or push fisttpl mov xor sbb call add pop mov cmpsb adc ret xchg sub or mov dec mov or enter adc movsb loop push cmpsl cmp inc mov lods xor push jbe pushf in pop lock jl out lea inc push adc lcall repz pushf stos inc shrl pop pop fwait and pusha xor mov scas and jb mov nop inc repnz sub sub mov xor cli xor aas sbb cmp fidivl imul inc pop xor jp add adc cmp mov ds push jp add sbb pop in nop mov outsl jb xor loop cmp mov rclb in into mov jp xchg pop lods inc push add push sub jl movl movl and test cltd out add jge aam iret mov movsb (bad) shll mov cld idiv xchg jg lds rolb inc adc stos mov std adc xor pop addr16 mov push outsb out and lcall push inc mov test arpl add and (bad) sbb shrb adc or js dec cli dec pop loop ret movsb pop gs nop mov or add jbe push xchg lahf testb imul scas cmp cmp jb vpshuflw xor rcll insl addb cld adc push enter sbb xchg mov std (bad) out and jo mov loop dec and ljmp pop sub sbb xor mov push and mov pop or dec or (bad) aam sub xchg dec or mov sbb lea rcll inc or movsb pop fcmovb or imul push push xchg sub adc mov lods sbb add andb mov imul inc movsb add popa aas sahf inc inc or push or test (bad) in call pushf fbstp (bad) in stos mov inc test loop dec rorl or cltd mov repz in jge dec pop adc pusha rorb xchg xchg jp jmp clc sbb xor lods and and scas pop (bad) mov sub mov or loop dec je cs jo lds ljmp mov mov jbe loope jnp or xchg nop mov add mov cmp jecxz test incb adc xchg push xchg xchg adc and popa es xor enter sub cmpsl dec push dec adc dec and xchg push in push mov pop or xchg dec xchg lock enter cs shrb pop lea test lret test stc mov ret and ljmp lcall mov sub dec leave mov pop sbb or jmp adc jnp andb clc jne cmp xchg movsb mov movsb out add xchg loopne bound xchg inc xchg in cmp repnz and mov (bad) mov cmp pop jo aaa mov aas (bad) and stos push or xlat xor lock pop (bad) mov repnz rolb inc push loop dec test push and add xchg fsubrl or pop or push xor aam ret push imul mov sbb pop pop adc out (bad) subl jp xchg add hlt stos jb leave jne add mov loop dec xchg inc dec movsb outsb scas and roll or ret or push xchg add sbb fild addl adc in aam enter push push mov cmp js push sbb cld pop jl xchg mov mov xor mov ret stc mov rolb lret sub popw je fsts dec dec xchg ss add cmp movl sahf lds imul add stc outsb add movsl pop icebp hlt outsb pop inc inc adc inc sarb add sub push or movsb cmp inc or enter (bad) fwait (bad) in stos pushf mov sbb out push mov shll inc inc pop call and stos (bad) mov sbb fidiv and mov cmc jl inc inc push push hlt mov mov scas data16 (bad) inc dec setp std in or inc popf xchg test push cmp mov lcall xchg push jmp gs add daa jge or or push mov dec orl je mov arpl ja pop mov xor stos sbb in iret add add add mov adc jnp out cltd ds mov adc sub adc mov pop data16 pop repz adc loopne inc add les cs (bad) xor jp pop inc hlt stos cmp je inc mov stos add dec lods dec or push sub jge fimull test fdivr fwait aam leave test inc adc jmp les cmp dec cltd inc js mov adcb pop add (bad) xor arpl cmc pop add fildl push leave cmp in mov sub cwtl movsb std sub lcall add and mov and or mov dec sbb les xor add mov mov sub jns mov jecxz rcrl cwtl outsl dec adc fdivr jnp icebp add rclb and test je mov leave or pop in jae push pop data16 popa cmp or adc inc or mov cld cs lods dec ljmp nop aam loope insb adc sbb lret iret lods test xchg push mov sub out inc imul imul repnz add inc dec daa nop stc or inc shrl ljmp test mov dec lock imul sub and add push dec adc inc popa dec sub divb mov icebp gs rorb aad push mov adc and and push test pusha lock or pop aaa loop add push repz leave inc inc mov in dec in aam and das lcall rcrl sub mov and xor xchg cld push inc push or pop aaa dec cld in sahf rolb lods xor jno outsb test shl arpl (bad) xor sbb mov mov push add into adc clc je xlat sub stos incl mov sub pushf inc pop hlt add and cwtl xchg cmpb and lock adc out inc bound mov mov add lret (bad) adc adc xor andb inc jns add xchg ret mov pop inc mov adc sub inc inc jg jl add std or xchg dec inc mov pusha mov data16 cmpsl add mov push mov inc clc add cltd cwtl fsubl inc pop cwtl mov outsl loop icebp js add sub call jne insl hlt inc lds aad jmp inc scas cmpsb or repz and call pop sarb mov xor popf ret lock outsb sbb pop dec popa (bad) pushf inc cmp add or mov pop out jmp add sub xor and je lcall or loopne arpl insb sub or les push inc push dec cmp (bad) subb cli mov mov jb add repz or jns dec cwtl stc inc icebp sbb inc dec int and daa jle fist jecxz popf div sbb stos jg leave sub lcall mov lods rclb pop in inc add cmp (bad) xor xchg xchg adc cmp push lods inc test cltd add lock or (bad) mov push push cltd adc xchg push inc pusha cmp push jno mov imul cmp fwait clc mov push imulb or scas jne pop mov xchg enter or daa ljmp pushw xchg sbbl cltd lock int3 adc aaa mov push push adc cltd or test xchg roll mov mov and sbb mov lahf add mov or jnp cmp int3 dec (bad) popa aam jl ret push jl xchg cmc js push jle inc or pop rsqrtps jp sub stos pop in imull call lods (bad) lds shrl inc das int3 pop sub imul fcomps jbe sahf xchg out adc mov js test lahf (bad) xchg cmp fcoml les movaps inc mov leave pop mov mov adcl sub ds sbb or ret cmp adc sahf xor ret enterw in xchg stos icebp repnz jecxz jb jno jp and outsb or leave push scas mov push push inc mov sub or inc jecxz and aas dec sbb inc mov movsb jmp mov (bad) and aad mov daa xor sbb icebp std jo add mov mov fwait pop les sbb add add xlat mov add cmpsb sub in data16 adc shlb sub cmp sub rdtsc and and test pop out sub (bad) jae aad leave sub stos push cmp rclb data16 loopne jg add scas pop xorl pop ja mov xchg fldl2t daa jge jle xchg cmp jle sub push inc rcrb push enter test pusha rol paddusb mov rcrl mov ja dec pop add insl fistpll jb inc dec repz out daa js aad jae pop add out repnz es jb lock or outsl adc xor mov push jne mov dec sub imul inc sti push roll pop dec inc sub jbe cmp mov sub jle inc xor (bad) mov out mov lods leave push cmc inc bound inc shr xchg hlt lahf (bad) loope sbb jmp mov add push sub into inc jle or pop pushf push ja fimul jbe jle sub push (bad) idivl loop jg je insb push adc nop ss inc jg jge inc xchg ja cmp cmovo adc dec sub test xor out mov xchg cmpl fcoms test inc mov mov xchg lods jge (bad) in mov xchg mov sub aas clc fcmovnbe stos mov jns sarb cld mov rcrl mov in xchg inc dec and and (bad) loop add push xchg inc add das cld or lret mov add mov bound jno daa sub bound or push ja sarb and lret mov (bad) jnp or pop ja sub push mov (bad) out dec scas cmp sub es adc iret sbb sbb decb pop out mov sbb add loopne mov ja pop xchg and lret pop scas int stos (bad) push addr16 in fistpl cmp pop mov shr sub add pop mov cmp bound or lahf in test pop push not shr push sbb fnstsw pusha cltd icebp add pop imul mov or mov cmc jmp jg clc and xor mov orb push inc jne aad dec mov xchg aas nop adc jno xchg dec add lods cmp add dec fcoms insb pop or add ja dec in cmp out pop addl stc das add push ja shlb jg push mov dec iret aas mov dec xor pop dec ret push jge and or imul or dec addr16 les jno adc sub imul mov adc jmp xchg fildl cmp adc pop gs xchg add pop push pop ret lock jns (bad) lahf push jns rcll push pop rcrb or movsl jbe pop push push push lds cli out push cmp out xchg aas test divl sub iret scas inc movsl mov xchg mov orl and push pop xor dec ja inc in fst dec test and mov (bad) or hlt pop push add push and add push pminsw cmp sub mov push sub xor mov mov ds daa mov push mov jbe setne and jmp add pop pop scas insb lea fistpl jae dec jbe pop in or in dec fildll imul mov sub jmp int3 mov stos mov mul xor add iret and pushf sti mov shlb mov push aas fcomp aam dec outsl (bad) pop aad adc inc or sahf push push leave push xorl icebp add and enter idivb push inc push aas cld adc ljmp pusha push pop adc stos or frstor (bad) test testl movsl mov push nop ret pop cmpsb jne cmpsb je iret test mov ffreep out inc xor arpl enter daa sub push nop je (bad) pop (bad) icebp mov add add and inc movsl sarl lods imul jno jae dec dec ljmp and ja or (bad) fsubrs or test outsl leave pushf ds push or dec add (bad) or ljmp aam push jno jmp and je scas in add mov aad add rorb dec inc cmpsb pop stc jno and mov repnz add pop addr16 add cmp scas sahf adc aas mov jnp push decl jmp and shl fisttpl add inc sbb push gs mov adc js andl pop jmp mov clc jg add or sub or std test sbb cli repz movb pop sub adc je mov mov sahf sbb pop sti cmpsb push sti cmp stc dec mov leave cmc (bad) fisubl fist jo mov push fisubl sti ret add in les push adc inc and pop dec movb cmp negb inc and nop stos daa cmc pop aad jne (bad) jmp cmp lock xchg verw jo mov xchg push (bad) (bad) lret lods add dec inc inc inc sub cmp pop add add jns dec in and int3 jmp adc mov inc pop or mov dec xor pop mov add pop adc enter pop pop lcall pop and and inc jo,pt push pop pop ljmp mov push or in or dec mov flds pop data16 mov cmp push mov popa jp push mov in shr inc test mov jo jo dec or leave push or jb in pop mov inc dec ficoml dec lret (bad) push sbbb jp add movsb sbbl lds fstpt sbb push sti xchg jg push dec fs push and xorl sti fwait scas pop xchg aad and pop cmp mov or flds (bad) mov mov pop inc dec add push pop push leave inc push cmpsl adc adc jge and push pusha data16 dec lcall mov pop jo rep call xor jge stos add cmp popf imul jecxz gs push int3 (bad) jbe pusha fistp push push aad mov pop pushl call dec testl push add lret pop (bad) jmp mov incl daa fisttpll cmp cmpsb lcall inc daa divl pop jecxz js,pt or stos fdivrs out test ja and dec push adc jbe xchg jne fstpt inc fdiv aam xchg lcall adc pop mov mov mov jns inc ja jno jb add adc daa aas test call cld loop loope push outsb mov fs xor pop xchg imul sti jbe testb or adc sti push dec cmp mov pop push pop xchg pop outsl rcl mov sub js jb ja pop fs sub outsl and sysexit sub jecxz cs push es imul daa cmp add xchg mov daa push dec in sbb jle sahf outsl add cmpsb in push xchg or push sbb fisttpll aas jmp dec inc mov sti lods push lods pop mov aad mov fisubl pop push mov ds sub call push mov sti pusha pop mov mov mov inc push inc mov or mov sub adc mov aas in adc pop (bad) sti xchg xchg mov out add mov cmc imul or ljmp cmc lret (bad) jne or xchg pop xchg enter add (bad) jae cmpsl lahf inc dec or insl imul rorl cld ds and mov enter pop das aas push je lcall mov pop jp pop xor xchg or loop in insb dec cmp div cli arpl loop or fisubrl add repz repz (bad) mov loope cld cltd inc fs pop sbb ja lret popf and shl xor fisttp fs push push pop jge jmp jbe sub out pop add ljmp (bad) pop pop out out push adc je mov mov sub xchg cwtl mov repnz push sub aaa xchg sbb lret std pop repz pop or loopne cli jle int3 insl push adc mov inc push sub cltd add xchg lret xchg lcall sbbl sub pop mov lahf pusha jns test lods xchg pop pop cmp fs cltd add push aas mov mov (bad) lcall mov fdivrs sub pop mov xchg fimull jb xchg loopne adc cmp inc cmp or icebp jbe roll ja stc sbb icebp push xor dec test mov push push pop add or mov pop frstor stc cmc dec jb inc jmp jbe inc jno mov jge fwait sbbb jmp stos pop dec and push xlat or push push outsl adc ret in adc shrl fs sbb mov (bad) fcoms (bad) hlt xchg adc mov mov jne lds jbe icebp ds mov lahf xor pushf xor pop int sub xchg fidivl jmp inc jns aaa sub lods add outsl scas mov adc jp or fdivrp mov inc rorb adc es (bad) mov fs pop stc insl push (bad) inc xor mov mov jle outsl stos enter or add subl xor cmpl add add jmp pusha mov test push jne loop jmp and imul xchg in pop rolb adc jbe push cmp push jmp in adc adc xor in sbb add cwtl push aas loop xor xor andnps pushf out jg adcl dec adc pop daa pop fs out mov jecxz xlat xor mov inc add jg clc push jmp xchg dec pop das sub pop enter or pop iret repnz sti lock xchg push inc addr16 loopne adc pop outsl (bad) icebp and sub das and insb lds dec or jnp jno xlat scas push mov out aas pushf sbb adc std xor imul pop pop stos int testb fild lahf add icebp loopne sbb iret pop aam add adc out add xorb mov cli cmp fnstcw cmc add push data16 jge int3 ss add iret jae insb add stc jns arpl mov ds dec cs cmp aas adc push inc test test sahf jns jl loope pop call rorb pop push das add add dec rolb sub cmp (bad) mov insb pop dec adc pop lahf pop push andb outsb add xchg inc and ret leave sbb mov hlt ret or jbe adcb loopne (bad) cmc add sbb stc shlb les in mov mov pop rorb and movsl clc add cmp dec jb xlat add aas cmpsb pop hlt cmp scas add jo inc sub pop mov cli aaa cli daa sahf and lock fcomip xchg movsl gs add pop add pop paddusw dec xor push insb je imul pop xchg lahf fidiv push inc movsb iret jne gs xlat jmp stos mov push and cwtl xor pop add pop test pop dec lret (bad) aaa add jmp or pop dec cli iret mov mov mov pushl and dec sti idivl sbb cmp test sbb dec mov inc in shll adc inc add push sahf pop cmp xchg lret pop adc addl mov pop dec inc xor fsubl jmp mov clc xchg xchg sti push ret jmp or iret dec aad sbb in jmp sbb js js push pop mov cli sub testb (bad) sahf adc imul sub fs sub jg add and outsl xchg jb mov or mov mov cs xchg (bad) pop fxam cmpsl and mulb addl xchg pushw mov and les flds mov add popf push dec imul cwtl dec and jb rcr aaa or inc sbb and sbb inc or adc push daa xor call push jae lret fs add push popf cmpsb pop pusha mov sbb and (bad) jg (bad) out pop pop shr push push dec pop mov jno fidivr rol shll cltd call aad aam cmp in bound add sub loope lds mov or js xor ret push rcrb mov mov jnp push add mov leave fnop lahf pop add sbb sub mov or rorb mov xchg jo cli lahf pusha clc jl test or pop popf (bad) mov adc cmpsl xchg inc adc pop sti popa int3 jge dec add push adc notb xor push dec cmp xchg add loope push mov cld jl add cmpb xchg jnp nop mov popa dec or out pop pop int3 xor or ljmp out or jl test aaa jecxz stc jnp lret pop fstps add mov mov icebp mov popa fwait add and sbb xor sbb pop pop pusha mul jg dec jle add call and pop repnz xor xlat sub (bad) mov add cmpsl mov icebp pop push mov and sub test mov fadds sub icebp dec sub sahf push adc nop pop add add push pushf sbbb xor rcrb addl mov sti pop pop shl push into nop jge fstps test dec (bad) int aaa out inc add aam mov lods cli cwtl jecxz icebp test fildl and and cmp or jmp mov inc xor adc movaps jmp or sub and add push pop lahf sub (bad) adc push cmp pop out jg mov sub sbb (bad) fucomp dec scas icebp nopl daa imul adcb (bad) insl push add jb out cmp popa sbb dec mov inc pushf outsb jg sbb fs daa and push insb js out cld jb sub aaa pop mov out pop ds out jae outsl outsb lcall outsb push test xchg push (bad) jb add fldenv stc dec push xchg pop cmp mov popa pop dec xor insl cmp add inc mov int cmp call pop iret xor pop test push loope add rorb popf jl adc dec and mov sbb sub das dec xchg dec mov out mov lods ja xor pop mov dec popa mov add aad insb cmp dec push xchg xor xor add notl into and rclb mov xor outsl xchg mov jl mov stc or stos (bad) std dec and nop inc mov mulb fldlg2 add mov xchg aas loop dec aas ljmp jg (bad) or int3 inc in pop pop sbb into shr inc push push shl fadds shr and faddl and loope sub push mov xor pop add cltd sub jmp mov push sbb (bad) sub lock add and ret pop push add mov sahf cmc shrb popa pop add cmp sub ds pop sti sub dec arpl loopne sub pop adc dec int adc gs fbstp ss inc repz xchg inc jo pop mov mov (bad) out adc push neg out popa push push push ds mov testb or scas or adc insb push mov add push daa in ljmp dec lock xchg xor adc push push inc (bad) mov sbb rorb bound scas int cmc or push nop data16 xchg add sub hlt ret mov push sub or das sarb add sub pop mov shr hlt ret cmpsl out mov xchg pop jmp or cld movsb std sub rclb pop and mov xor (bad) pop inc add stc inc sbb pop lds movsb sbb add mov sbb jbe xor outsl jg stos mov jnp inc stc in pop xor in aas xor rcl jnp cmc cmpsb daa cmp cmp xchg dec xchg cltd loopne sub xbegin and lret cli cmpsl or push pop dec fistpll cmp push xlat xor popf js dec add sub popa dec sahf xchg sub pop mov pop mov adc pop cmp jmp test push xchg dec mov fadds mov add mov in dec dec mov cmp mov mov cs mov hlt popa sahf mov xchg and test mov push enter jne leave repnz push ja shrd sarb and xchg (bad) test pop popa dec push inc cltd mov mov or clc xchg in push pop lock xor add ret arpl jno je adc int3 adc pop lret fcmove push or je mov cmc sbb mov fmull cmpsb mov mov negl sbb and or cmp out decb les sbb and sbb inc add es dec (bad) stc xchg mov jns jmp sub cmp mov aaa cmp insb or insb mov or jo adc adc or call scas mov int3 jp cmc inc imulb add pop jle iret ror add push out push icebp cmp jb (bad) and mov fsubrl arpl scas jbe notl subb push test or mov jl test dec aam ljmp mov pop adc adc add inc les xlat lods jbe add (bad) call sbb sbb push adc mov aas push test cld mov sub or insl push push xor cmp add sub dec into add adc roll dec std cmp popf dec mov data16 shlb push cld cld adc cmp mov cmc shl popf add arpl movsb cld push ret or imul jmp push lods add cwtl add mov jmp stos adc out pop and call adc sub jmp pop movsb mov xchg ja nop or add or cmp mov xchg push or jle pop push cmp gs adc jecxz arpl adc add stos add mull sbb (bad) add adc ja add mov or sub push testb and in push sbb fidivl lret push adc dec mov scas andb push dec rorb cld push or (bad) xor adc cmp repz call add andl jge inc mov nop addr16 or or cmpsb mov cmp cmp loope adc lret loope and push aad jg es jmp imul adc ss xchg and (bad) push inc xchg leave movl push cwtl pop jle fwait mov jl das sti movsb test fnsave adcb dec sub jg rcrl fisubl jp push dec inc push pusha jbe mov and xor incl adc push or (bad) dec mov inc mov iret xor and rclb stc and adc inc stos mulb mov sbb push add pop sahf pop mov jl out outsl or (bad) xor pusha pop jae push pop or (bad) std shrb or test outsl test sahf xchg sbb mov xchg sarb cltd pop pop inc cmp xchg out cmp push pop fmuls addl add and fcmovnbe inc dec loope nop sbb daa sub or mov cli int3 and fdivs mov jp dec loope ficom sub inc pop call mov mov aam push push popa in insl out sub lea xchg pusha jge std addr16 psrlw push (bad) popf std lods add or mov bound add rcrl nop xor and or jmp add test sbb ljmp mov es add inc js pop inc cld sahf and pop icebp and adc mov roll roll xor inc dec add jne mov or xchg jns arpl push fwait lret jmp or adc push adc std pop push mov jbe incb lahf sahf repnz movsb lds xchg inc jb adc (bad) xchg push pop xor mov pop movsb out cmp hlt add jb out scas jne push pop loopne loop add push xchg sub mov lahf ret rolb rorb mov sbb je dec scas stos nop sbb adc mov leave inc add adc (bad) call fwait packuswb push mov add jns pop jg pop data16 ss decb cmpsb aaa sbb mov and inc cmp movsb (bad) mov and jmp and and adc sahf mov cmp and jno mov icebp adc jp ds and push int int pop std (bad) jno js into mov add test mov leave fistpll mov ds pop (bad) jle imul idiv jne (bad) rorb mov add sbb and pop lods test mov (bad) adc inc add call xchg pop aam fwait pop adc in int3 fiadd out add push mov cmp int3 inc subb mov jns push dec xor push stc bound in mov test insb pop xor sub sub push mov or add cmp rorb xlat cli jne (bad) pop or sbb xor adc aad xlat ljmp repz adc std dec aaa add push ret and xchg jle and sbb dec pop adc aas icebp les dec lds cli sahf and jno loopne add pusha cmp adc (bad) (bad) std push mov jmp fstl pop pop cld jle loopne mov mov iret subb mov add xor jp adc pop push dec mov xor add loopne repnz or fs xor test cmp orl dec cmpsl sbb (bad) in jnp cmp add test push nop test add stos and pusha jmp cmp mov push stos imul cmp (bad) jmp xor xchg push adc inc push outsb pop inc xchg jl xchg in nop push sbb leave jle repz adc sbb sbb pop movsb outsb lret push pop scas sub sbb jp loop add or push ljmp imul rcrb jmp add mov int xchg dec or push sarb add dec and and iret push cmpsb dec roll cmpsb test rorb cld push adc shll mov push add adc stos inc or jnp in cmp add lods jbe mov das aas cld xchg sbb mov lahf or or push add cmpl hlt dec es mov mov pop push fbstp cmpl inc or mov dec sub cmp (bad) adc jnp mov mov ja push and incl mov cmpsl pop sub movsb or or inc sarl or std cli ret push ljmp mov cmp stc icebp fadd loopne jbe jne adc push daa outsl test fadds enter ret mov test pop lds and push dec mov jg mov or mov add xchg (bad) or fbstp xchg add inc or xchg xchg cmpsb pop jp mov pop fs or cwtl cs xor sub sbb xor insl add jns adc cmp sbb xor mov adc es lcall and mov and jmp imul jl ja aam or mov jmp inc push sub adc adc mov add pop and push push jle sbb orl mov sbb mov xchg adc pop jne xor out and push push jbe add or (bad) iret jo (bad) cmp jns pop mov enter ret (bad) jge sahf push sbb sbb or mov (bad) in add out es cmp push add mull fimull push (bad) jne push es dec push rcrb call add push dec rcrb out in mov lret popf stc xlat andb subb int cwtl mov jne xchg lock test add enter lds and fbstp cmpsl aad mov mov pop mov loope aam (bad) dec aas fs cs add push fistp incl cmp icebp dec pusha cwtl and sbb add mov push imul and jp es xchg shll aas addl inc mov lcall pop push sub jecxz sbb and and movsb mov mov loopne mov jo xchg jne adc rolb repz cs adc push jg pop mov repnz add sbb add lods mov (bad) movsl jg adc or add fldt pop outsb arpl movsl les push mov cmp fsts inc xchg outsb movsb call mov mov lock push lahf xor mov (bad) ja cmc add inc jmp xchg pop push (bad) jl sub xor push cmp nop gs xchg and pop or es mov cmpsl or aam repnz sbb xchg cld mov xchg ss (bad) out push dec jge shll xor rclb mov or cmp jg repz push popf mov mov lods mov mov stc sub in pop cmp fwait lea lret shrd div inc cmp mov mov pop out xorb aas inc xor xor and iret pop fwait pop jl outsl sahf xor inc inc mov mov enter test and and add adc mov xor add cmp call sahf bound sbb loop call cld aam outsb xor xchg cmp js mov incb sub pushl adc mov enter mov jmp lods std mov and (bad) cmpsl push outsb dec in je fs lods in sti out mov call loopne mov in cld es add jp xchg jae or ds inc xchg pusha push (bad) adc pop mov loope pop in cmpsl and inc clc (bad) xor add jb dec lret addr16 cmpl mov lods and cltd lret stos fcmovu (bad) mov lds loopne mov sub push scas lods add (bad) cmp fsubr sub (bad) sub icebp jp fs ljmp add outsl cmpb mov popf push loopne clc mov es jl scas dec add inc xchg push or outsl push aad test sub lret inc jb sbb test jae jge not mov mov mov aaa lcall jae pushf std scas jno dec sbb movsb fmuls hlt paddsw and out enter test mov cmp mov adcb jae sbb mov add push and movsb fwait outsb mov call sbb clc and pop xor fisttpll in mov xor dec aam dec push and dec (bad) adc fs hlt inc xor adc nop (bad) xchg pop cwtl test (bad) inc push aam inc addr16 sub stos inc js fucomp rcll pop xlat sub xchg (bad) adc push out xor movsl ss and je adc xlat xchg and xchg jo lods dec push das pop and lahf adc inc pop xorl or inc imul mov add or jno jp and jl pop aad outsl xor flds imul or xor int3 sub add andl ja test mov cmp (bad) les push test cmp clc popa mov adc out mov pop xchg repnz (bad) mulb xor fs gs cli dec add mov mov mov xchg in adc add dec cltd add (bad) or aas arpl push lret cmp sahf imul adc push movsl addr16 pop nop out mov stc out sub push add push jns pusha jne pop xchg push xchg in xor (bad) xor mov push and and xor (bad) cmc insb lods lret sub das mov jbe imulb js push add lea adc add nop iret fsubrl adc (bad) movsl add mov das jae fidivl adc inc in aaa add stc lret push add loop adc insb or xchg leave push pop add stos xor jne mov sbb or es out iret rorb add ljmp fmull xor rcrb push pop dec jg cli dec pop arpl mov inc sub rcrb aaa sbb add int mov in test xor and and mov and rol pushf add mov xchg add enter jb xchg adc das mov pusha pop push (bad) add inc pop pop dec mov dec add cmp add xchg sbb mov pop pop arpl cli jne xor add nop out or or adc jo and cmp push cmovs sub or (bad) mov pusha loope stc xchg push push or lds mov adc xor push lods add mov test lcall cmp addr16 inc jg adc and and sbb sbb and and mov andl pop ds rcrb loopne push mov fcom ljmp pop or orl mov adc jecxz mov addr16 sbb add or sbbl and mov xchg fwait stc cmp pop mov (bad) in aad lcall inc nop pop pop add int add insb jbe xor jno push jmp pop add sbb icebp fimul pop add in cmp xchg mov lea call mov jmp pop jo add mov push sub jmp adc fnstenv test add mov xchg dec insb push jmp and sub cld push cmp lret mov lock xor jp and and (bad) es and popa add movb jl jbe ja jae std sub loopne push and or mov add xor or outsb test xor push sbb cwtl lcall add dec lds aaa inc pop popa icebp pop pushf adc in jnp dec imull ficompl xor xor ds cs lret and add cmc inc pop jbe add mov add cli mov push inc int3 xor inc jo jle adc xchg add popa ss push clc xchg (bad) sbb fs js push fsubrs movlps pmaxub arpl push adc jg cld sti jmp rcrb push pop dec std adc mov in cld add fldenv out cmpb inc mov lahf xor jle pop mov inc push shrl outsl cld icebp ret xchg ss add mov jp scas test rorb in mov mov sarl mov rcrl dec mov popa outsl clc insl and jl inc sub nop mov outsl aam mov xchg lods loopne rdtsc adc mov sbb inc xchg push int3 cmp sub (bad) push call in push cmpb adc les add push xchg dec xchg jge stos cmp lds lahf test in push repnz mov and jae xchg mov aam sti and in adc lret lahf and mov pushf sub adc mov lret mov push jno cmp add (bad) nop lcall mov out mov mov mov pop jns and fs push cmp shl push sahf add mov adc mov jnp lret inc mov add inc shlb adc sub add or pop inc xor (bad) das and xchg cmp xlat and add and jge add sbb sbb jno dec push leave ret add clc jne mov cmpsl scas lahf pop fild add mov sarb flds mov insb jmp mov push or ret dec dec cmpsl lret push add sbb mov inc xchg mov daa or insb outsl orl xchg xchg (bad) cmp sub mov and cmp inc add (bad) (bad) mov data16 notl sub or aaa xorl sbb cwtl (bad) xor mov mov xchg xlat jmp add leave (bad) fnsave sub in add mov push jnp sbb fninit and mov mov mov jmp xor aaa out cmp (bad) test push inc xchg inc lock aas andl bound ja stos xchg cwtl or lret jnp adc in lock ds pop add mov add lods test inc sbb sbb movsl jmp and divl inc (bad) cli add adc lods add insl mov or (bad) insb mov (bad) jno sub js sub jns mov clc push movsb (bad) jg mov and jo (bad) mov decl jle movsb xor add jmp out mov jns push repz inc or add jnp cmp test aaa dec add inc or dec push lcall add mov (bad) jmp iret adc repz adc jbe sub jnp (bad) rclb pop or mov add (bad) xor add inc pop dec cmp adc test cmpsb dec xor notb push pop pavgb out stos (bad) sbb adc add add mov out int3 outsl and push adc (bad) cwtl or sub push mov adc add dec push push pop sub scas in dec add loopne out cmp xchg inc loope movsb clc push mov add fcoms dec cltd mov sub (bad) mov sub push sbb sbb push outsb adc or mov push push fcompl mov hlt mov xlat sbb inc imul lods or paddsb cmp xor repnz popa mov rorl roll inc in cwtl jno repz mov and arpl and fcoms push scas inc lock arpl ss fadd cmp nop add inc leave add insb (bad) mov movsb pusha adc call in inc pop fisttpl inc add ficompl into push jl add mov dec sti int3 sub idivb repnz dec inc daa out or repnz push xchg int3 cli and pop add lods push sahf lds inc out (bad) bound or repz xor add sub push push daa scas jecxz lret call push icebp movsb mov push adc outsb push mov movsl xor das and data16 test sti mov add adc pushf lret jmp sarb inc jno daa stc or push xchg xor push ffreep or mov add loope pop mov clc push std inc push popa jno jo into lds and dec adc (bad) xlat mov mov pop lcall int3 jle push sbb or jns mov in adc jne push pop dec leave mov pop ret push or pop insl mov mov ds arpl push in or pop es adc cs xor xchg (bad) sub pop pop mov nop jp aaa nop push decb push or andl inc std repnz sbb mov xchg rol sub jae pusha add ret push cmp fs or adc and mov mov test ds cwtl adc xor decb jne push mov xchg jnp cmpsb mov movsb lret mov push pop aad jb mov xor idiv sub scas clc mov cmp pop js sahf add or pop add (bad) mov popf jo in jle add jno cmp fild or mov pop inc hlt test inc mov xchg pusha mov xor outsl or (bad) adc in or mov lcall xchg inc xchg add mov aaa insb cli popa dec cwtl and out andl push sar in sub stos cmp xchg popf inc inc cwtl pop ret mov (bad) mov add (bad) jg and dec mov add scas jbe jns pusha pop popa mov push and loope lods clc lret call push mov xchg repnz or loop xchg mov or insb xchg add addr16 (bad) call (bad) out xlat cmp ret movsb cwtl hlt stc inc adc or test cwtl pushf cmp cwtl jae out inc jo mov das sbb add mov aaa sbbb pop mov push addr16 mov rclb dec dec dec incl xor lds fisttpl inc xor mov jne adc mov and cwtl test mov xchg cmpsl fldl pop popf xchg (bad) call out jmp adc mov inc sbbb pop mov adc add inc add cwtl push pinsrw dec nop xlat imul scas (bad) aam cmc outsb sub pushf add loope das push int dec mov adc mov jae mov paddsb cmp dec push int3 fild (bad) stos imul nop test pop out (bad) (bad) sbb jg je push out dec add aaa add or pop pop add add bound in nop xchg outsl int3 xor cmp xor add jo cld dec inc cmp (bad) daa movsb hlt data16 cmp push push mov mov pusha dec (bad) and mov xor psrlq push inc mov dec mov push cld scas nop jnp cli subb rol push xchg jp cmpsl inc cmp orl adc add out xor stc aaa shlb or movsb jae xchg test lcall stos popa popa icebp adc aas sub lods add stc pop data16 dec (bad) (bad) push popa loope pcmpeqb or fildll test stos adc add cs pushf iret sub bswap adc jo shlb sub arpl clc mov repz dec pushf mov xchg inc cli add jnp inc les cmp rorb push cwtl mov or push adc stos fstps sar sbb add cmpsl sbb sub dec jmp mov add push loope cs push loopne inc adc lock and mov cmp sbb fcomps or repnz and ret adc rol call jno sub xor cmc lea mov mov inc add aaa add pushw dec mov idiv mov or xor stos and jo and mov jp and push sbb pop jne xchg (bad) xchg mov test pop or adc xor sub cwtl mov ja jp movsb dec sbb fidivrl lods mov lcall das or popl mov or notb or push jge inc and call test inc or sbb hlt mov ss mov xor in fidivl add add repnz inc xchg pop fdiv jnp iret pushf pop add ficoml mov xchg mov dec add nop xchg push sub mov add jne dec inc (bad) lock mov out and add push lods jbe int popf pop dec xchg insl push inc daa sbb sub pop repz mov (bad) mov sub lcall js cld ret add mov mov rolb adc adc mov add ret jp fisub (bad) xchg lret mov mov push leave sbb mov pop test add ja add les rorb cmp sbb daa mov movl int3 dec sti mov out add add dec jg stc jbe push sub xchg inc mov add popf lea ljmp fwait adcb xchg jmp (bad) mov mov in nop or adc xor test cmp push movsb push call adc push nop aas int3 lahf movsb or js xchg negl push adc push add pop mull imul mov inc inc jg les mov mov mov jle ss sbb and bound repnz fnop inc in pusha or mov or test js jbe add add adc cmpl js sbb shrl jge xchg (bad) jns jle loope xchg xchg jbe jmp test ja jb int jne jg push xor jnp enter lahf inc mov or push jnp jecxz mov into jno or sbb ror jg dec or imul mov aam jb into inc jb push arpl pop icebp push insl js add lea or jns jae adc outsb es rcrb data16 push inc mov cmp xchg add fidivr xchg inc lret imulb mov push out out sbb adc dec push jp mov or sub stc add cltd adc inc xor pop cmp or into arpl in push mov js gs inc sbb cmpl and (bad) in imul aad push or stos xlat (bad) clc add sbb and pop push add shrb cmp add lret sub aas hlt out pop adc adc imul ljmp cmp xor popf xchg outsb sbb cmpsl divl arpl jp sbbb pop sbb insl dec gs push add sub ja out cli sbb fsubrp sub jp lahf ret mov ret add lods shrl pop dec add fmuls jg jb add and repnz test nop rcrb faddl aas ret nop fucomp sti add jecxz aam (bad) mov lahf dec jne mov or pop out and and sbb dec roll andl mov (bad) loopne mov add outsl jg mov bound sbb ljmp in pop mov out test pop es scas jb repnz iret push adcl xchg mov push jno or call sbb and cmp and imul mov push movb frstor xor or inc dec rolb lret mov dec lods mov test add pop adc sbb sub lret adc outsb repz add mov push insb mov add push or sub pop jns pop xor push testl sub or test push lods mov out push push jl push xchg fdivl push icebp pop xlat jge pop or (bad) leave xchg aaa test cld sub popa or hlt (bad) jae pop and mov addr16 jge popa outsl jae enter inc (bad) cmp ljmp add loope fnsave jmp sub pop or jge mov (bad) cmp cli dec mov (bad) out push mov and clc xor pop adc or (bad) fimul inc sub mov imul adc int3 add jae xchg icebp (bad) das ja push mov xor pusha mov pop (bad) mov insb outsl push stos push xor rolb hlt push bound aam lods push add pop push cli movsb mov jecxz inc ja imull scas jne mov sub pop addl adc lea ret jge insl call and push sub push or jge lcall flds add outsb mov sahf test das es cmp lcall jle inc shll xchg mov (bad) insb push nop (bad) xor out sub stc add mov add lcall xchg sbb cwtl or cli jl dec dec movaps adc push pusha hlt mov push mov test inc mov jecxz cmp or push int dec repz aas jp and mov or jle sbb mov mov pop jecxz pop in fnsave add push bound int3 pop push sbb cmp sub jge dec cmp xor xor jl lock dec push int3 subl clc jmp adc mov and into pop ds dec stc add test je add push aaa mov and js mov cwtl sbb ja loop add adc sbb cmp xor and adc or push sbb inc cmpsl or out sbb sbb xchg dec add mov std aad fadds add mov scas and xor add and jno stos les and xchg dec jg test pusha rol xchg or xchg insl add ffreep pop fcmovnu inc inc sbb iret and lret mov sub subb repnz push dec add push ds mov and int inc pop nop andl inc jns in add xor dec in sbbl jp mov pop adc xchg mov in adc jg add push pop lret adc in sbb sub icebp jnp pop call gs dec rclb xchg cmpsl mov sub cmp in mov cmp daa fwait mov mov std sub jmp jge push or add adc xor or push inc xor or dec or incl cmpsb cwtl lret xchg out pop sub pushf add sbb iret add cmpl add adc jp cmp pop stos xor (bad) adc lods ffreep mov sbb icebp adc cli or hlt ret sub cwtl bound mov dec add jmp sub mov or sbb mov add les adc add in pop jo jmp push add push mov mov or daa push repz push scas pop inc imul inc push and jae push jge dec loope clc rclb adc rcll repnz mov jne cmp lcall bound xchg add sub repz xor pop stos cwtl adc addr16 (bad) or jecxz js add push clc sub shrl pop xchg mov add push jns aad xor cmp ljmp push pop adc out and fs (bad) (bad) arpl mov pusha add pop sbb mov push mov mov jae fcoms aas jo lds adc mov sub push aaa jno int adc lock call adc fxch mov inc xor or cmp cmp pop pop inc loop fwait scas xchg ja push xor insl mov add push inc cli push xchg jne outsl clc cwtl or (bad) jle cmp or imul sbb and cmp adc jp jmp mov xor xor add stos lock inc sbb das mov mov mov push adc or lods mov loope inc pop mov push repnz (bad) movlps or into add negl pop clc pop jle sub outsl in dec sub cmpsb inc (bad) pop lods adc add lods add imul mov fs imul cwtl pop (bad) mov cmp sbb and out mov xor cld inc outsl notb rcrl movsb or out mov lods sub sub adc push hlt push jmp das jne int3 dec aam loopne jns subl add mov jo xchg cwtl cld aam push and xchg movsb aam loopne adc inc mov inc flds inc lds mov pushf pop ret mov addr16 stc lods push cld aas pushl arpl out test mov cmp adc (bad) ss pushf add jnp (bad) fild cltd cli or push dec call loope nop ret (bad) inc imull nop cwtl addr16 inc mov add int ret pop bound pop mov (bad) lahf and pop push jns mov lret or sub xor inc (bad) xor push add push into decl and or shrl das pop jbe (bad) scas inc das pop in xor xchg movsb lods inc mov add cmpsl add aad or and jno xchg sub pop xor adcb outsb inc pusha je dec movsl jbe add lahf rcl in scas imul outsl mov add mov cs fcoms inc mov add xchg movsb lea inc fistpll mov adc lods andb add push dec lock xor sbb (bad) push out add adc jg mov push sbb push and cli (bad) imul push outsb out loope test pop mov and push or cmc mov jl adc rorl stc and je prefetch lea int3 xchg mov mov test int cmp lock ljmp std cmp adc mov mov subb enter and mov lea sbb stos jns and cmp cmp inc in sbb inc jb mov push repnz roll sub jmp jo cmpsb dec in and push add cli or push push xor cmp add xchg mov or scas test (bad) daa jns lea sbb push sub int3 or imul cwtl mov add outsl arpl pop push lock mov and xor test mov mov xchg or int3 add sti add cltd pop ret mov ficompl xchg dec and lret loope sbb ficomp (bad) mov xor jmp icebp shrl xor push fistp loop jns (bad) iret mov jnp mov xor sti mov nopl pop mov mov pusha (bad) jmp bound js mov aas fcmovnb sbb mov sub xor fnop popf add push or sub les stos mov loope add push in or sbb inc scas cmpsl dec pop xchg inc stos jg aaa pusha sub frstor sub mov dec push mov and sahf (bad) mov test add ds pop (bad) dec das sub dec or lods js and inc aas notl fcompl mov sub mov adc fist pusha xchg inc inc mov add fcompp pop sbb cmp inc jbe adc cld add or and movsb rorb lds fsubrs jbe add (bad) mov sub add adc dec add leave cmp jae rorl scas cltd add mov jns pusha ja scas or dec sbb jmp test mov cmp adc jne fsubs and movsb sub cmp cmpsl xor and (bad) mov jbe iret nop xchg popa icebp into jge xchg jb xor and stos adc test adc or ss stos fs push mov jl stc push add xchg add jb arpl outsb sbb in aad cmpsl sub outsl test mov push sbb jle mov cmovne stc int imul les adc aad add and pop cli and addr16 fldt movsl push adc in imul add inc movsb jl add fadds movsl lock rcl cmc in inc in sub jno pop dec loopne or mov or add rorb pop (bad) movsb inc and es imul xchg jbe sbb add (bad) adc inc or lahf inc ss add xchg loop add in das or push ljmp jb pop adc adc add inc rorl dec test cmp movsb mov mov adc test mov mov fisubl jl mov pop add inc cmpb andl outsl xor dec sbb dec faddl aad pop cwtl movsb dec aam xor bound mov cmpsb add in idiv add mov and gs mov out out out xor cmp cmpsl jne mov sarl test pop lret mov sub adc (bad) adc int and mov adc gs add cmp addr16 pop out test pop cld cmp fwait adc mov fisttp rorb push adcl or pushf pop sbb sub and add int jnp mov push std adc movsb sbb mov sub and mov popa lcall inc lea cmp xchg jo inc das adc add mov test sbb adc cmp add jo mov jns and cmp and fcoms or clc push cmp mov push pushf cli jge fiadd jbe push xchg aam jno ret add adc and add cli shr dec js add hlt aad sub sbb add adc es sbb xchg mov imul mov xor jnp mov sahf addr16 fstpl lock sbb arpl sub dec fiaddl lahf mov out cwtl or bound add jbe mov mov xchg pusha add int3 sub lahf inc and and xor push or inc push ja mull mov add int add stos pushf xchg pop jo mov xor cmp sub mov orb fsubl push xor sub push mov jns pusha stc jl push jmp (bad) pop add ljmp nop je bswap push leave and test inc aas std adc dec and push or cmpsl ficompl add orl add mull mov sub repnz ds mov outsb movntps add mov push inc add addr16 adc mov lds mov or out daa sbb dec dec mov std pop or int out movsl and rol imul pop sub adc cmp pop mov cld cwtl adc xchg xchg or mov inc adc insb and in mov push xchg ret add cmpb pop cli xchg int push sub sub (bad) mov std push dec xor pop hlt lret jmp in pop push add pop jb,pt add mov mov xor xchg cmp popf les frstor jp stc lock mov sub cmp das cld push jns test jle push sahf push add pop add les in int3 incl sbb push and xchg xor xchg add add and add (bad) popf push push and add outsb and mov inc jb add xor cmp dec pushf lods sbbl inc pusha pop pop inc xchg (bad) xor inc jo loop test repz mov jl push aaa pop sbb cltd inc or in ja (bad) jo addr16 mov mov call imul roll mov dec (bad) fsts imul jp pusha cmp bswap sbb cmp or xorl jbe daa mov mov adc pop sti loop test fcomps add insl outsl (bad) fcmovu jne mov pop sbb sbb add rorl mov mov popa cmpl pop mov mov ljmp inc mov shll loopne sbb fwait add and dec rcrl or sub fs (bad) xor add test (bad) mov inc add aaa (bad) mov ret jns or xorl ret testl add sub add sbb popa xchg lds adc mov and push test jp fnstenv xchg mov leave pop inc jno pop fisub pop add popa mov nop lret dec inc daa or mov int3 imul fcomi mov add insl and (bad) sahf add mov int mov in add push xchg push dec sbb negl mov pop sbbb insb fisub mov jle pop out movsb (bad) jb sti test mov int sbb or out dec das cmpsl imul jno add push loope repnz pushl or or xchg adcb arpl icebp cmp xlat jno push jnp retw mov jle or popa xor outsl pop insb push push pop adc fisubr push popa jnp add mov mov push jp,pt fmul or sbb dec push sbb pop (bad) sbb outsb adcl hlt out roll sub adc mov js add in push jle sub fwait jae push sbb shr cltd mov mov insb mov mov sbb mov popa shrw addr16 arpl enter cld sbb and cld sbb test (bad) sbb inc mov adc add add ret adc ret gs add stc sub add mov insb push test lds cmp push pop push shrl xor mov pop dec daa test outsl bound (bad) addr16 idivb and sbb leave push adcb and mov mov pop ja sahf lds jne xlat pop out xchg sbb xor ja or push mov orb jnp js or sub sahf or sbb mov xchg fisttp dec xchg xor ljmp rcrl and inc outsl pop mov test imul pop mov data16 inc dec xchg test pop or xor test insb dec es lcall push sub mov das sahf cmp push adc dec cs jecxz xor or iret dec scas inc mov movsl pushf cmpsl mov call popa pop inc push xchg or jb xor sub bound push outsl cmpsl add xor adc sub adc dec rol rolb mov in mov mov and and sub aaa inc loopne ret jmp sbbl arpl js movsb lea fsubr dec pusha inc into pop xchg pop ja inc arpl and cmp lock or inc dec sub and and sub add xchg pusha push icebp jns xor sahf dec movsb loop mov sbb push or cs stc loopne xchg popa insb or ds addr16 add repz fdivs cmp arpl (bad) jne sub cltd nop pusha pop mov jg pop xchg mov or xor add mov incb cwtl or push out add pop aad mov add sahf cwtl inc repnz lock into test add or mov sbbl jae mov or add test mov cmc hlt inc push jno add stc pop xor push inc xchg pop push in enter rorb push aad fwait shlb inc (bad) cli and sbbb inc movsb pop add das jmp imul fwait in cwtl adc add dec inc mov xor loope mov mov dec push mov jmp pusha inc inc mov outsl push scas add cli outsb fildl mov repz mov (bad) jae sub add outsl push imull or in adc mov push mov and fildl jbe (bad) fstpl cmp jecxz adc stc test (bad) insb insl sub fs and in xor push gs or mov imul sahf cltd rorb stos or cltd xor aam and outsl fmull push xchg and test mov push test shlb mov sbb in or addr16 mov pop xor xor das mov andl popa ja sbbb (bad) je push in xlat jbe dec mov sbb mov sub daa gs jl and inc popa cmp jo cs aad stos fdivrs push sti xlat shll cs mov hlt pop add (bad) enter pop xchg popf mov and das call nop (bad) inc stos inc xchg sbb mov xor xchg mov repnz and mov adc adc pop ljmp push test (bad) or popa pop xlat and (bad) in sub pop add fwait (bad) lret mov dec clc dec pop xor test sub jne int3 call pusha data16 cmovge or xor add aas push add add out cli inc insb cmpsb mov arpl scas jbe adc daa mov pop sub aas js mov rcl push sbbb lods jbe add lret dec xor add sub mov (bad) xchg xlat sbb lret mov std in jmp mov repnz dec mov or add sbb or nop mov pop adc push pop and out sub sub jno add pop cld je add imull jp and pop cmp adc lret dec add sub scas repz xchg mov mov in sbb lods and cltd pop xor ss cli and xor jbe (bad) xor adc aas daa add subl or xor xchg mov ljmp cmp sub and or mov add and in mov and imul mov mov sub push add testl dec push and jns mov push cmp mov rcrl xor ja sbb xor mov xchg inc mov pop add dec sbb mov fiadd sub jbe movsl add test and adc out int3 add fsubrp add popf jle mov add xor jo mov jbe lahf inc (bad) orl sbb or setg (bad) mov dec mov add xor test stos mov pusha andb inc adc enter xor xchg pop add insl sbb inc sub xor dec fldenv add mov jmp adcb and xchg hlt or cmp sbb xor fdivr dec imul out add adc (bad) xlat test cmp pop out sbb push test mov add daa (bad) mov leave dec subl mov dec cwtl je insb or ljmp out ret add and or movsl ret push clc stos pop out fstl leave out nop adc jmp jl pop or sbb cmpsb add data16 xor dec sub add rcrl add ret or inc xor pop test (bad) dec cmpsl out add out mov push rolb pop ret subb les subl pusha mov push and scas jg xor dec mov aam pop xchg push cmpsl dec or ja enter lods stos xchg (bad) lret sub add mov ds pop repnz mov or sub leave pusha xor cmp cmpsb mov cmpsl fstpl pop inc clc sub pop (bad) daa and cmp nop test add bound add cwtl xchg imul lock repnz sbb mov je adc adc cmpsb adc add popa mov nop sbb (bad) iret push push in movsl subb xchg cpuid jno and nop ja jbe xor inc scas pop sub add jnp bound add aam mov aas mov pop mov and ds push out xor jne push xlat (bad) sbb mov pop pop jnp push pop std mov push xor inc mov cs arpl imul sub pop push add add imul add cmpsl mov mov and mov xchg loope sti insb push xchg stos pushf or cmp loop sub ja mov lock pop sub dec cmpsb or push xchg inc xchg jne mov loopne mov out or imul sub ds loopne (bad) int inc xchg cmc xchg iret sbb xchg hlt mov mov or call pusha xor adc sub inc out xlat int3 mov ljmp xchg jne out dec mov test and push cld adc rcll cmp xor and imul adc (bad) aam inc std sub leave mov stos cmp int3 scas pushf rolb stc pop mov imul stc dec adcl pop aam movsl cmc data16 inc adc inc out pop incb push mov pop cld pop dec add dec dec adcb addr16 push dec ljmp xchg xlat mov push pop out jns jle out ljmp pop and pop or (bad) jmp aaa xchg loop jnp arpl and loop adcl aas rorb andl enter sub jnp sti pop cmpsb dec push insl push add loop sub and sbb fwait sub repnz (bad) push pop imull adc push push xor and mov ljmp xlat mov das scas cmp pusha aam jo aaa add ljmp dec dec out xchg and jno das sti sub mov mov pop nop and jp es push and and adc push add nop (bad) (bad) adc into dec aas pop jge jnp push nop lcall sahf mov push arpl and push mov pop add cld inc adc pop sub jne or jmp jg daa cmc lcall push sub fprem1 lds ja sbb push pop sub mov mov jnp push loope pop fdiv jp je xlat in pop mov jge stos pop lret mov push cmp not add pop and mov fucomip pop (bad) js mov movl (bad) inc in dec push jl sub push lea stos xchg out test jns leave inc push das dec pop inc mov inc dec jle insl shll ja dec dec adc stos mov dec jmp and dec mov daa cmp pop xor jo daa fcompl or fisttpll pusha dec mov inc sbb pusha sahf pop xchg fnsave xchg jne xlat and push sbb out xchg fstl xchg mov jmp stos mov (bad) adc sti insl pop das scas sub nop test int3 rolb pop das (bad) out je jae in xchg jmp adc fistl inc cmp xchg mov es add out xor dec xchg in jle fdivl dec fidivr add inc jecxz or sub pop mov outsl xor sub adc sar inc pop dec jne jge (bad) or cmc sbb jbe das je pop inc subl jge cs dec mov dec inc xchg out push push (bad) in data16 fstl daa lret iret push int jp inc add xchg aas jno iret add sarb daa shll fildll scas je inc in lods xor cmp dec mov pop push test nop rcll cmp addl ja mov jne pop clc movsl xchg ljmp mov out ds cmpsb gs leave sbb fs push pusha mov mov lsl jge xchg mov inc or inc jns cs pusha dec cmpsl pop (bad) jg or jle mov imul push popf push mov fiadd lret dec jg loopne mov xchg sub lcall lock stc mov cmp sbbl cmc in jmp popf pop jmp enter movsb jae jl add sub aam rcl jmp rclb push pop (bad) jmp mov loope sub sbb or cltd call psrld js mov stos test repz sbb push stos jge sub pop xor icebp pop jmp (bad) movsl fnstcw into cmc out mov xlat jg push jne xchg xor mov outsb or test add jg jo pop or adc pop push cmp mov scas sub mov std jnp lds aam adc mov mov inc adc push addr16 ja pop push sbb mov cmp pop jg pushf sarb dec dec out cltd pop xor mov mov out ficomp push cmp and int mov jnp scas std inc mov incl add insl (bad) jmp in mov mov xchg nop rol dec les and sarl or lods outsl pop cld sbb cmpsl cmp cltd push xlat jmp fs xlat mov push mov cmc (bad) aaa jb pop inc in into xorb jge mov mov decb adc adcb outsw xlat mov mov xchg sbb sahf mov daa push cmpsb and fist push dec or inc pop xor jnp subl and rcrb ret xor out add or lods cwtl sbb jo sar lds sbb rcr (bad) mov xchg cltd aaa push icebp aam fptan jno addr16 lds divl inc or addr16 rcrb sbb push or dec and dec incb push sub or xchg call ds cmc jle cmpsb (bad) mov pop fidivl dec dec or lods add cmp sbb ds mov popa pop jae add pusha xchg cmp pop push sahf rcll out push (bad) bswap mov rcrb fisttp inc es setns sbb test dec pop std inc insl or mov jg cmp lods inc push cmc xchg xor pop das pop xchg pop pop jne and inc or mov aaa push inc es pop hlt ficoml pop mul cmp dec lock pop (bad) repnz in clc test sbbl outsl adc jmp push inc push pop jno dec pop mov lcall or or pop or pushf push add jmp outsb xchg out add xor loope xlat pop sbbb or xchg sti mov into lcall push or out dec xchg lods adc inc xor shrl das mov xchg jmp sahf mov xor repz or movsl jmp out cmp cmp pop and faddl or cmc xchg inc test dec push mov cltd cs mov sbb mov or xchg sub jmp dec mov addr16 add mov fwait test je pop shlb sbb cmp nop test sub xchg je mov pusha jmp test pop sub sti insl roll leave shl pop outsl jo fcomi mov fs push bound insl pop or push xchg mov mov mov pop add sub cs pop add pop jb fldl lcall lret imul xchg ljmp mov inc and mov cmp divl icebp push loopne lret sub jle push pusha jp cli test pop xor adc adc cmp sbb jns mov xchg or xchg enter data16 jg jo mov das je inc sbb rcrb movsl jbe push mov out cld sub push add sbb sti (bad) mul iret pop imull (bad) push inc mov mov xlat sbb mov loopne push xchg sub sub test jo pop jge addl nop nop int3 or pop into push (bad) dec cmc outsb wbinvd add xor add mov sbb adc aaa fwait pushf mov cwtl sahf js jmp jne shr inc mov dec push push mov jb jmp add pop pop jne sub rolb jne gs inc xor pop and mov sbb mov das mov or out idivb xchg aas xor cld incb jecxz repnz ljmp das sbb xchg rcl in outsb or loope sbbl jmp faddl stos sub test push pop icebp stos mov add pop jl adc add cltd orb and enter jne sub xchg mov fwait icebp shr cli adc adc push es out fs (bad) es sub jbe stos add movsb xchg lea imul cmc testb cmp jmp sub pusha loop mov lea pushf jl pop in sbb and movsb and and repnz in cmpsb lret dec in xchg loopne stc sbb std inc push xchg pop scas mov xchg dec push fwait aaa sti ds xchg pop fwait icebp sub mov inc je mov mulb push fyl2x cli jne in pop pop adc rol lret xchg xchg mov and add xor dec les jl out aam mov push and rol mov cmp jmp dec das aam mov loop jle or jae or sub loopne dec inc test xchg (bad) dec daa xor inc sub push lret ret jl push xchg mov dec mov out push mov sbb cmpsb test insb and fldt dec push inc (bad) jb repz ficomp pop cli into movsb (bad) or jae mov jmp out adc imul mov and xchg test fcmovnbe xchg lea ret and jbe add mov add out dec testl dec fs or les mov mov cmp cwtl push xor cmp inc or jl pop jae add ljmp (bad) pusha or ss jle sarl push (bad) loopne inc aam sbb mov lea (bad) push jns adc dec (bad) push repz pop ret imul push pop repnz sbb push je xorb push mov stc scas lahf xchg lods ficoml pop inc call or cltd jecxz adc out ja repz add cmp jb (bad) in out or gs jne push repz dec out adc push pusha jl pop pop xchg mov mov das lcall ljmp push (bad) ljmp mov add mov mov sub scas movsb sbb and repz ret hlt (bad) std jle or push add (bad) out popf xchg jo mov iret pop mov cmp dec pusha add fsub and jmp sbb push mov outsb in mov call leave jnp mov add sahf jle loopne mov xor shl or push jmp imul cld imul jge icebp cwtl std orl lods lods jl push jg enter xchg cwtl lcall or mov cmp push cmp pop aam or rcrb in repnz aam jo call pop jp xor mov int sub sub cmpsb jg jmp push mov repnz push xchg arpl (bad) xor xor dec jg pop cmc not divl push or mov cmp cld xchg mov arpl pusha mov rclb mov jecxz pop add rolb fsubs push pop ret mov pop mov scas mov add jb cmp lret mov fwait sub movsb add jmp pop add subl popf cmp mov stc es mov jp pop sahf data16 (bad) jge in cld xor lods str mov test shrb jecxz sbb add mov dec pop int3 sub adc insb pop mov push adc xlat jg out adc or dec inc pop xlat (bad) mov in adc mov fiaddl sar rclb fmul cmp stc sub push sub mov ret inc imul movsl scas push lods sub stos mov jmp test mov int into sbbb dec sbb cwtl daa push pop out mov pushf pop sti addr16 mov not or inc outsb add jp cmc push popa mov or xchg jmp popa jo cmp fldenv in sub and and adc mov int (bad) pop push stos mov fs pop bound test or push inc xor xchg out ja in jl pop and outsb not sbb pusha adc cld xlat xchg lret push or shll pop int rcrl sbb pop push fiaddl mov or sub shr push sub and pop adc (bad) dec outsl mov sub incl in push pop (bad) mov or lods (bad) xor ja icebp push (bad) push cmpl push sub and lahf push jo aaa sub or outsl xor and add shlb mov jecxz xchg jb sahf pop and adc jo mov pop lcall rorl (bad) push pushf dec cli jle push (bad) xchg fcmovnbe jno fidivl (bad) gs mov pop inc add sbb shl cs jle dec fdivrp outsl (bad) ret mov jl mov push inc xchg arpl xchg shr pop sub leave push pop loop (bad) pop mov idivl aaa add orb push xchg mov dec push jecxz sbb in dec add nop shrl movsl dec in xchg push xchg xchg notl push mov push push mov pushf push int3 loop in mov and jmp stos cmp add jns sahf xor add adc xchg aam insb xor inc pop or int3 pop rcl ljmp out data16 mov aas sub or sub int3 pop jp ret ret dec xor outsb add xchg out or pop push ja clc mov frstor scas aas sub ja push or add add pop sub add lret outsb ds pop cs testl decl repz add into pop shl mov pushf mov icebp xchg xchg gs jl push and mov cli sbb inc inc and jmp add bound sub add xor sub sbb xlat lds movsl jns jg arpl or dec rcr add je rcrb sbb es xor (bad) pusha cmp push icebp xor mov into loopne push sub xchg pop lcall jle mov out rol push jle fstpt dec or (bad) pop roll jmp fnstsw dec pop (bad) cmp outsl adc popf pop inc sbb frstor push (bad) or pop cmp cld inc repz ss (bad) pop cmp add iret push ja lds stc js add divl jnp add (bad) xor pop pop jns pop movsl adc sub add jg jmp jl mov adc cmpsl (bad) adc mov add jl xchg notl dec xchg jle or pop push addb pop movsl bound mov test scas jo (bad) sar pop jge add pop or cwtl jb sbb mov das xor aad pop sbb stos out sti cmp call mov cld push test call test out dec cltd push dec fnstcw (bad) cmp popa test lcall in push cmc mov xchg stos sbb fidivl (bad) fcomps dec cwtl dec add idivl leave insb stos mov lret cmpsb dec push mov jmp cmp loop xchg inc push sti add xlat jle cli mov (bad) icebp fisubr clc test dec sub pop adc lret adc jnp and jae paddq jge cmpsb mov pop push adc sub mov and mov test push stc in leave enter imul push daa bound daa das push aam in add push jecxz jo xorl test lret fstl xchg push mov ja dec add fild les push sarb jae pop shl gs daa pop xchg (bad) aam xor and jmp das stc jge inc mov in adc adc repz mov std nop lahf mov outsb xor test inc (bad) mov mov jmp inc dec dec fwait lock js (bad) neg cli das adc arpl repz test lcall jae push mov or add sub outsl add aaa xchg movsl popf fist sbb rclb ret sub xor add rcrl jmp jns psubsb mov sub push pop xor jmp imul iret sub inc jnp out cli mov or add ja icebp lds and dec dec xchg mov leave jae in dec ret dec mov aas repnz or aad cli sbb dec pop jle,pn out or push jecxz add or mov dec fmuls in mov pop mov out jp jmp testl das jg push add pusha mov les cltd add mov inc popa jmp xchg or add (bad) xor dec loope bound cmp sbb sub hlt pop or test or dec sbb lock fisttp sbb jns pop std int3 orl mov nop mov daa lock inc aas shr push jmp push xor ss popf movl ret loopne insb repz pop scas xchg hlt lahf xchg pop or pop lret test sub pop xchg (bad) nop pop aam lret and int3 jge ret call jmp add mov popf xchg inc pop rcl adc stos movsb sbbl es cmp pop arpl adc sub add inc xor and push outsl cmp jae xchg fnsave mov in je sub decl xlat repnz jmp xor xor pop add arpl and nop les stos jnp mov lcall arpl andl mov lret mov xor jnp or negl js dec and cltd adc pop inc loopne lds std push jb daa sub insl je in jo jno xchg ljmp push add or pop xchg int3 xchg aas loop and sub rcrl std icebp (bad) aaa cwtl mov sbbb push sub sti repnz dec rcr mov adc mov adc not shl push and loope adc pop dec movl add pop pop jmp inc inc daa imul mov in fldt push inc sbb out jbe fs cmp inc das lds fnstcw xchg dec lock mov add push repnz mov inc daa (bad) or fisubl sub outsl pushf sub add cmp daa daa movb popf outsl jmp adc pop mov push lock jmp je cmpsb lret or sbb cs or push mov cmp rclb insl mov inc xor xchg xor dec fidiv add xlat aas pop push push (bad) mov jp and lock sub (bad) jmp es mov adcl cmpl inc xorl mov lret icebp (bad) xor pop ja or rorb sub xlat jge jns and cmp xor fsubl mov xor stos dec out dec push pop add xchg jmp add ret jle jmp mov je mov outsb inc add leave mov xor sarl andl push ss jle or pop add jno xor not mov push sub test cwtl adc adc aam mov les or in mov in or add insb jmp cwtl out xchg inc inc mov dec push pop and adc scas sbb xrelease xchg pop adc rcrb dec mov add ja scas cmp push xor cmp jge outsl pop jmp shr std stos xchg dec pop pushf push jp jge push scas add icebp or fbstp xlat ja mov push ss push jae les dec adc and rep sbb arpl (bad) sti lret and add loopne sub xchg lahf inc (bad) lds sub lock inc cli jae pop aas dec dec mov adc nop add repz dec test lds jl adc or stos pop xchg xor mov xchg mov fbstp cltd add xor roll ret jmp rcrl mov jp xchg sbb fwait shlb jnp adc and push adc add add fmuls es pop mov imul (bad) xor mov mov push sbb cld mov leave (bad) in adc mov pushf cmp es xchg lea mov in mov add dec pop mov push test test bound adc ss outsb xor xor or std popa pusha rclb loope lock negl fdivs inc and fldenv jmp enter pop cmpsb xchg mov pop sub mov pop cmp push jl push jmp adc in in and pop push dec test stc or pop push mov (bad) mov adc aas rcrb (bad) jb or sbb fcomip jge dec cmp sub jmp daa pop push movsl cs fs aaa mov jg into stc xlat xchg adc test or xor xor dec jecxz dec lea in dec push dec lods ret cltd (bad) aaa jmp and mov dec mov in dec mov fldl2t adc cmp push movsb jae cli pop (bad) iret mov cmp inc ds cmpsb or dec mov (bad) fimull pop xchg popa add icebp (bad) shrl push icebp into add shl jecxz adc jmp push adc mov dec pop pop mov xchg daa ja in or dec jge inc shlb test aas (bad) xchg stos mov (bad) ja cs jns imul xchg sub jle sbb std mov and jle cld pop xor add cwtl push push inc mov inc jle lea xor sbb add cltd mov in or mov and pop mov add lods iret and sub out sbb push popf push xchg sti daa int sbb in sbb xor out pop mov test pop inc enter test dec (bad) mov xor sub or (bad) dec test sub add or xor std push iret int (bad) mov push mov pop pop mov (bad) fistl into mov push pop pushf test sub sbb cs jg dec jg sbb shll push cmp jge es cmp stos clc lcall jg jle paddusw jne mov push add push mov jnp flds lcall arpl jno rolb icebp jg mov cltd or inc mov mov mov in add shlb or clc std push fldcw daa stos insl xchg sub push adc je out pop mov daa adc in add mov xchg imul or sub pop inc xor push pop mov pop xorb inc dec inc clc ljmp and aad push cwtl addl jns pop sub bound xorb inc jg movsl adc or enter mov jbe sbbb rcl mov jle mov jmp jmp loope sbb (bad) in hlt (bad) pop les mov rol mov inc add push subb adc add xchg (bad) adc push shl mov pop mov sub repnz mov bound xor scas xchg xor ffreep push mov sbbl pop push pop out sbb jnp and or dec push and adc jg sub into cli or shll add jmp and xchg cmp push mov or lcall inc popa adc mov (bad) mov mov xor fiadd lods jns mov or rcrl cs jmp mov cmp sbb cmp mov inc add daa mov orl orb repz outsb mov pushf dec and add push mov and adc rclb xchg test jmp clc or hlt xchg mov jg push jbe out andl adc inc in (bad) fsubrs xor mul cmp cmpsl and pushf adc aad or repnz aaa pop jnp jno (bad) jle ret push clc iret add lcall jmp mov ljmp bound repz xchg pop xlat xchg push outsl test aas mov das cmp and negl lods jbe (bad) pop int3 inc into aaa ret js adc in sub pusha xchg push cmpb add xor inc addb jg lret dec hlt imul clc push jb bound stos popa mov push push mov popa pop push pop pop xchg rclb out mov dec leave jae inc push insb jecxz fildll in pop notl das repnz pop cld cli pop pop (bad) test mov test cmc (bad) add jnp cld ds dec mov sbb lods scas adc les in mov shrl mov in sti push mov sarb adc subl (bad) jbe jnp jmp or or jl jmp cmp (bad) pop mov jb dec out jns rolb sahf push jnp pop xchg add dec xchg mov out mov fidivl sub mov push sub rclb test xor push or aas popf dec dec orl xchg sbb popa add pop ret leave mov lods jno inc mov push ret addb add sbb clc gs inc xor xchg pop push mov xlat inc dec cs ret adc bound (bad) pop mov mov aaa cmp inc push sbb ret mov add shrl adc scas add pop roll test push xchg popf xlat ja push loop pop dec or lcall mov sub jmp jbe add movb icebp fadds sub aad lahf repz js cmp dec inc mov fnop or stos pop mov cmp xchg pushf jle (bad) push xor mov add scas fnstenv inc mov xor add sub cmp fdivrs orl xor bound sub mov push std subb and push testb pop aas sahf bound cmp cmp add lea inc mov arpl add and cltd and inc jne pop and rorb mov mov pusha loopne bound mov sub or movsb adc popa enter ret xlat mov add sub scas test adc xchg inc mov and ret sbb mov jge sbb dec popa and adc push ljmp or je or (bad) sub ret out shlb xchg inc enter xor stos scas pushf add (bad) pop (bad) mov loop add jg cli jmp or cmpb mov pusha stos es lock or (bad) fcmovnb push mov das xchg sbb loopne movsb jo lods mov fadds sub scas mov sahf fcoml add cwtl sub leave bound sbb fs mov and sbb jmp test xor bound dec in mov imul test ret loopne add (bad) icebp and fsubrs sub bound sub xchg (bad) push xlat mov fadd enter mov lods sbb or fdiv dec add loop subl mov and int3 and jo loopne pop xchg sbb ds loope mov sbb (bad) sub or (bad) sbb xchg repz mov add std mov mov mov call and or fdivr loop mov jne add out shlb or sbb fstl adc add jne roll (bad) mov pusha mov clc es test les add (bad) js push dec or inc add sub clc out je dec nop dec add push dec add stos cmpsl inc bound mov push add cwtl aaa (bad) jl std xchg lock aad mov mov jecxz xor add ret jne mov or adc dec mov pop cmp jne add insl mov roll mov cld mov fwait in adc aaa xor inc lods cpuid xchg movsb es mov mov sbb dec xchg clc or adc push and mov jb add push push aas nop sub mov adc dec sub and stos pop je mov shlb or je xor (bad) fcoms movsb add mov push lock fsubrs adc adc adc sub inc cmc inc mov lret movl add bound fsubrs sti mov fcmovnbe and xchg add pop dec mov pushf jo nop rolb xor mov sbb mov xorl cld pop adc hlt jl bound (bad) enter inc jmp push lods lock jo lcall pusha test bound xchg ljmp pop hlt je fcomps push mov movsb mov dec nop sbb mov and adc mov jbe cli (bad) std rolb nop cmp dec (bad) rolb test add mov push add push inc dec or loope inc or mov sbb inc dec mov int rol js add cld xchg test dec std movsb push lds cmpb mov scas mov or bound dec fmull xor les clc sbb push or in mov push cmp adc and xor mov cmp jmp and push sub add add push jecxz push xchg (bad) mov and xchg cmc add inc nop movsb jmp xchg add inc mov xor or (bad) mov xor cmpsl psubw jno xor sbb cwtl pop dec add xchg aad sub pop aam jne movsb mov cmc bound gs fs inc (bad) mov mov and add lods cmpsb inc mov ljmp inc adc rcll adc add std mov and ret mov jns leave pop push test mov jae dec jecxz lahf (bad) jns icebp jo pop sub sub aam (bad) xor jmp pop outsb mov ja scas test add mov mov fmuls mov cmpsb (bad) xchg mov push pop and jge sbb into add xlat test add fwait aam mov inc (bad) xor mov add pop les add bound loope iret xchg fcoms and or mov lock mov js mov scas das pushf xchg xchg push cmpsl add lahf xchg or push cmp orb adc fdivl add outsb mov scas pushf xchg adcl shl rcrb jge test iret lods push xchg sbb and int3 sub mov loopne xor xor dec jne les pop cmp sti fldt inc mov xor pop sbb ja fistl rolb mov dec jle cmp test lahf stos movb sub es pop lock and ja adc test data16 lods loope,pn push lock fs push orl mov jns pushf pop loope test rcl add sbb mov nop cld xchg pop nop sbb test xchg rolb iret call mov test pop xchg flds out fildll sub arpl adc or (bad) (bad) pushf jne cmp adc mov in sbb dec repz or xchg mov pop lods pop loop and xor mov (bad) in gs daa lock cmpsl and push sti pop and mov mov arpl pusha call pushf es sub xchg dec rolb stos mov lahf loope or int add and pop xor lcall (bad) loopne mov pushf and pushf add and cmp lret popa xor and pop add cmc sbbl scas cmpsl cmp pop pop (bad) ds ror fldcw push push or add rorb jne jo pusha adc xchg cmpsl mov or adc cli rclb add paddd mov data16 and add or and lcall adc add pushf in inc or jb or (bad) test fcoml das stos repnz fadd loope cmp dec aam push or pop mov cmp jo inc adc xchg push clc dec dec movsb xor test add or sbb mov pop add cli and aam mov ss rcrl loope inc or push pop mov cld xchg sbb in negb (bad) sub sub fwait push std cmp cwtl popa cs mov jb rorl sbb ret push (bad) nop inc jne bound cmpsb stos popa popf enter loopne (bad) xor mov sahf xchg mov cmp or push and sbb add or popf (bad) js stc add repnz pop jb sub push push sub fcoms add test (bad) cmp cmp or adc lcall sbb or ficoml add ret and icebp sahf pusha lock aam fstpl test lods add mov ds mov and es addb imul stc lods jmp pavgb orl mov lock add pop pusha lods adc fcompl data16 or inc mov loopne (bad) lock dec adc aad imul mov or mov and sahf mov sub mov cmpsb mov and mov add xor outsb aaa push add pop ffreep cmp mov mov adcb fsubl add ret fwait jnp mov cmp cmp pop arpl pop add inc ds cmpsb aad add inc push xchg stos outsb xlat jo or mov faddl imul icebp sarb jl popa xchg test mov cmp lods mov mov jno push pusha test pop dec mov lea scas ja jl js add repz cmpsb and imul xor insb aas mov stos pop dec cmp cwtl fisttp push jp cli loopne jns jl inc std add sbb (bad) mov arpl insb inc adc add cltd movb pop sarl push sbb test cmc pop inc dec arpl add add jb lods sbb mov xlat inc sbb jns ss jg dec mov arpl fucomip and ja lods inc (bad) mov stos lds (bad) push sbbb jno adc pop add ss icebp mov cli bnd loopne int aad cwtl rolb test push int loopne fcompl enter mov ficomp mov ds stc push sub xor sbb and (bad) dec sub pusha addb add mov xor cmp sbbb or aaa inc and test out cmp xchg inc dec lods inc mov cwtl xchg data16 dec ret xchg add aas mov fcoms or int lods stc sbb jbe jecxz add push inc lods pop push sbb pop pop adc and jo dec lds out (bad) ljmp (bad) sbb dec mov test es dec mov sub cmpsl fadds sbb add add add or in (bad) mov and mov inc cmpsb lahf inc jnp clc adc sbb sbb xor pushf cwtl xchg add adc add or add dec push mov jecxz imul mov arpl popa adc iret movzbl push or or popf or inc sub and dec (bad) xor inc es mov push fcmovbe popf dec loopne sub mov lock hlt cmpl mov mov sbb ret dec xchg inc hlt nop in add ss js cmpsb sub push daa dec sub pop sbb mov adc lods xor leave stos add dec pop sub das jl test test std push pop and inc sub add (bad) daa fimull ss rclb cmp add and aaa imul xor sbb xlat ret stos loopne sarl adc (bad) sbb adc push xor xchg mov in rclb lods inc push push mov jbe xchg sbb inc ss pop lret inc stc or pop xchg cmp and jbe and add mov push mov pop inc (bad) xor xchg loopne fadd enter adc scas inc mov mov dec es xchg jg adc push add dec fsubr xorl push add fiadd cmp enter sub xor push mov mov jnp imul mov jnp add mov scas mov test push (bad) movsb and sti cwtl out and mov stos push jecxz add aas in int3 sub pop xchg lods dec mov jnp rcr sbb (bad) icebp aad movsl push pusha je add popa add dec aad push and enter (bad) popl aam xchg fneni(8087 xor mov and orb loop add jp mov insb imul mov cmpsl add pop add (bad) push xchg or fmulp int3 inc outsl xlat arpl add inc enter int3 jge inc pop cmpl push add mov lahf add ja inc incb push outsl mov and jl mov notb lods lods aad (bad) pop das test call hlt push outsl loopne add push push leave pop or or push cmp popa fnsave sbb fs fiaddl ds dec aas stos cmpsl out jp aam pop imul cmpsl fimull push aam scas inc inc in xchg mov and inc stc add fcoms pop js pusha jo xor pusha push imul je loopne add rolb mov inc adc xorb aaa add subb je fsubl les fist mov int add jbe sbb cmp pop inc adc (bad) mov push add push jnp nop pop mov jge loopne add push popl fild lock mov cmpsl dec scas inc push xorb je (bad) dec rcr decb mov test (bad) std lret test or daa fnstenv add push cltd stos dec push cmpb and lods add in (bad) movsb sbb adc add int3 aaa arpl sbb sarb ss insl mov addr16 or cwtl add sarb cmpsl push lcall fdivrs scas pop mov lods or pop ss pop inc and push test std pop add pop fcmovne addl mov out xlat adc dec sub and and enter aaa adc cmpsl mov (bad) icebp imulb jno mov rorb mov xor push xchg cltd dec push add add xlat (bad) sbb inc sub pop add inc jle shrb or scas add jmp loope shlb or adc push sbb mov adc int3 or inc mov add ret xchg aaa push into and and cs pop add push (bad) fimul in mov sbb aaa pusha mov pop int3 frstor mov or (bad) hlt inc out or dec xchg inc nop cwtl addl lea sbb pusha loop dec xor loopne enter (bad) fildl pop inc sbb pop js add pop adc xlat xor xchg flds stc xor imul and add nop gs xor ds imul xchg test cltd adc fbstp add cmpb jo push or test add std je jnp les add jmp movsl (bad) add mov adc scas outsb xlat and mov (bad) or mov xchg mov add fiadd or and jecxz cmp xchg (bad) push test pop add js aam add and icebp (bad) add sbb inc and cwtl inc ds aad stos test mov jbe or cmp sbb mov aas or dec xlat add outsl push or add les and mov add jbe or icebp inc xchg or xchg outsl inc sub xchg dec aam sbbl push cmpsb adc jae js adc clc les xor pushf pop dec cld ljmp lods mov ds pop push scas add inc dec loope (bad) add add je dec out repz mov jo inc mov pop or cmp dec pusha or mov insb pop mov incl je cltd pop or dec sub pusha shll adc cmp jns jns sub mov mov sbb add or test mov je addl push in sub adc push or mov mov rol nop xchg and rcr stc add loopne add lods adc add xchg inc icebp mov cmc clc aam lret inc lods test (bad) test (bad) jno fwait pop bound adc shr mov stc out movsl fmuls inc out aam ds shlb pop (bad) and mov leave jmp mov dec fstpl add aaa sbb cmp jg sub add inc xor push jo push (bad) pushf jae pop in pop sub sub mov nop cld maxps pop push scas mov xor stos cltd dec pusha aas xchg mov jb add pop inc inc pop and xor cltd sarl push imul movsl loop cwtl sbb icebp pop xor or sub mov xchg push std dec sub daa mov or and (bad) lret faddl pop daa inc and xchg add insb movsl lods and push jg rolb inc push movsb test push ss inc call stc rol push and pop fbld addb call sbb clc cltd jne fsub nop dec xchg adc inc jmp repnz add shr jns push sub mov imul lea push popa jae push inc rclb xchg sbb pop inc xor adc pop inc cmpsb cwtl sub push adc push add pop push push clc andl jge mov ss sub xorb mov adc add iret mov ret repz cwtl nop orl jg add loopne sbb mov mov jns mov fsts xchg clc mov (bad) hlt sbb jg rol fdivp pop aas push (bad) dec push mov cwtl mov cli pop roll jnp mov push movb mov inc mov pop sub cmp push mov cvtdq2ps add data16 movsb sbb lea xchg lahf ret mov xchg push icebp lock jp push pop aam inc ret add and ret cmpsb cmp xlat js arpl or mov inc push and (bad) neg out aad adc mov add push inc jno push or fimull sub lock pop and jg sbb sub arpl out neg ds xchg jge pushf add adc loope xchg test cmp adc adc out xor sbb gs pop mov jae mov add test add cmp xchg mov fdivrs push leave mov shll jbe cmp mov mov push xchg pop shrl mov enter pop and lods jno ds arpl ret insl mov hlt dec sbb mov and sbb pop push jb mov xchg jns lock hlt add and inc pushf add inc push insl mov (bad) shl and test dec inc push mov repnz mov push mov mov adc movb push mov mov jo out mov inc sbb dec push mov cltd xor addb sbb rolb adc pop push sbb dec mov cmp fmull push inc sub sbb clc mov fcompp loop pushf pop adc cld and mov test sub mov out fdivl pop push cmp xchg insl cwtl cmp arpl loopne int3 movaps pop stos sbb xchg sarb push dec mov jne popa push sahf daa mov cwtl ss xchg xchg sub pop repz adc adc cmp and sub cmp mov or jl inc jl,pt in xor dec adc add inc (bad) cmp xor arpl mov cs xchg mov inc repz and jmp das sub add dec push sbb ds mov xchg in (bad) stc call fsub fs (bad) (bad) mov adc les and push cmpb mov clc cmpsb stos inc pusha cmp (bad) dec mov fimull repz add adcb mov jae (bad) xor (bad) (bad) rcl add mov sub (bad) mov fildll out xchg lods sub sbb popf nop adcb or dec adc jb loopne mov (bad) lods fwait mov cmpsl and leave fldcw jns push sbb clc loop push jne (bad) xor mov fsub inc inc imul mov jns pop sub aad pusha lret iret icebp and dec test sbb cmp cmpxchg lds stc push cmp rcrl add mov cmp inc aaa push shr lea xchg adc dec inc js outsb ja and insl lock repz mov and lock adc pop xchg lock mov push movsb adc cmp push insl sbb mov jmp xor lock mov mov (bad) adc out or movsl inc cltd and push je inc push xchg and loope adc xor pusha adc ret cli call pop sub (bad) add insb enter out and sbb and cld push push sbb loop popa inc cmp fldcw adc int3 ret (bad) cmpsl pusha sbb js aaa xchg movsb mov (bad) out outsl mov jmp in rclb mov cwtl inc bound dec xlat dec lret imul mov xchg cltd add and nop add xchg shlb add fmull push sub dec and movl xchg fimull cmp push mov loopne les cli mov cmp ret pushf push pop sbb lods mov mov and xchg popa je pop add sbb and pop dec push fstl mov mov mov mov inc sub mov cwtl xchg pop aaa imul aaa add mov mov ja lret es call jno mov push and shlb or leave clc out and lods cmp mov sub jge push adcl xlat imul mov fsub xchg dec mov call cmp fnsave push das add pop jmp adcb loop (bad) jl addl sub or mov pop pop imul inc or pop mov and jmp fcompl popa hlt adc pop adc add cmp roll jg or fyl2x imull es lea aaa jl pop fsubrs cmp in pop movsl sarb fwait mov dec mov xchg nop or mov cmp or xchg push enter and or cwtl enter daa hlt lock push pop xor jecxz movsl push or xor push sub adc xchg mov mov add call mov roll test inc outsb mov and or lods hlt (bad) mov outsl xchg adc lea jns cmp cmp fimul out xor and js js cmp mov lods sbb es mov pusha or cmp ja (bad) imulb out dec mov inc inc (bad) mov in add pop and cmp cmp inc add adc or (bad) inc mov inc xchg (bad) mov (bad) and jo insb mov stos and sub sub push mov cmp loopne mov sub orl mov inc call ret das mov outsl mov stos (bad) mov fcompl sbb sti mov xor or adc inc inc les inc xchg lcall push hlt mov cs add (bad) stos and mov aas das add lods jne inc inc loop cwtl jno mov adc int3 out add fsubrs dec addr16 addl mov adc out nop pusha shlb adc fdivl rolb mov clc add fadd cld out xchg dec fwait and (bad) cmp xchg insl lds pop xor out dec cmc jo mov inc jnp imul add or cmp pop pop adc fdivs (bad) dec insb fcoml mov xchg orb ss cmpsb push rolb mov mov and cmp int jbe mov adc leave pop adc inc mov dec aaa dec and pop jns sbb stos push test fdivrl mov mulps jl push push jo imul mov inc pop sbb outsl bound fdivs lock xor pop jl jl je xor pop sub inc add cmp out loopne adc ja fdiv aaa rclb xor cmp outsb xor pop xchg xchg js packsswb pop pusha xchg sbb int3 insl add outsb gs mov xchg or and inc lods jl inc lret (bad) clc xchg adc fimull mov cwtl jl fdiv cli jnp ror add in adc add sub push or cmp or mov sub mov cwtl dec sbb arpl (bad) lods adc shrb push xchg add mov lock add mov lods jge sbb sbb cmpsb pusha lahf inc mov rorb add mov jg pop inc sbb push mov mov in push cwtl xor xchg dec add je jae pop or ret push int in out xchg js psubb daa add pop stos lret lods mov and (bad) rolb orl ds ucomiss (bad) negl add push data16 pop loope rclb popa mov lret test and sub push aam add addr16 adc cmp xor jp int dec inc inc adc lret lock add outsb mov pop nop ljmp leave pusha loopne mov les shll adc pop or into mov rclb scas loop dec stc subb loope fldcw call sbb sbb dec inc stos xor adc sbb rolb add dec dec insb add (bad) js int3 inc jg fsubr pop inc jo add jnp cmpsl add sub addb sarl mov jp imul imul and add dec pop stos add pusha or and sbb add nop add dec cmp mov hlt or add sbb cwtl sbb lea out lods rclb fildll xchg and push mov adc cmp jecxz jmp les ret sbb pusha adc mov call test lcall push and cmpsb mov xor jecxz imul fadds mov fcomps pushf xor or jb rolb jge subl in cmp mov lret cmp leave inc sbb pop pop movl inc repz or mov inc stc je cmp sbb bound movsl ret mov xchg mov push shrb sbb adc jnp test stos insl jg sub pop je sbb pusha (bad) fdivr xor fs push jo push mov in pop mov push inc sbb (bad) (bad) lret push jne jbe dec inc jecxz repnz rcrl cmp add push inc xorl bnd rcrb push cmp cmp loope add push inc aam (bad) add in cmp aad shrb mov test pop or insb test fisttpl add jl and jecxz mov jns lcall jae mov mov mov cmp push shrb dec fldt add jp in popa shlb out sbb xchg inc loope or out sbb xor xor pop push pop or cmc cmp push xchg cs mov xchg add cmp and cmp das es aad cmp adc push sahf inc in adc fidivr enter mov inc out push add je in xchg xor bound sbb js pusha sub sub xchg andl (bad) in pusha push pop ja pusha data16 xchg stc stos addb jle les dec inc inc dec subb and add insl adc mov pop add nop call adc xor rclb pop cmp (bad) lock inc pop and push and das xor fst mov aaa mov mov pop rolb pop xorb outsb das loopne pop and add xchg mov scas fdivrl fildl pop pop mov mov rcll hlt dec daa in insb mov cmp js inc fstpl push pop icebp in lahf cmp nop add pop sbb inc mov pop inc insb (bad) add imul pop add cmp jno xor push lods cwtl mov test mov mov sub xchg cld ds (bad) cli cmc mov add or insl xchg xorl aam or sarl add shl ljmp cmpl mov inc add or mov dec loopne dec mov call outsl es popa pop test sti outsb mov fprem repnz and mov insl in adc mov es pusha jo (bad) out imul test jne cmpsb lea xor push or adc pop hlt inc pop jbe or dec mov in sub pusha mov push mov movsb js add adc push clc xchg jbe sub and fs mov je dec or adc insb inc adc or add aad mov adc and sbb sbb jge xchg jno cli sbb add subl dec rcrl sbb pop jl clc sti sarb cli mov push or jo rcr (bad) notl dec leave je ss adc mov cmc call cmp push mov push add push push jmp scas sub and jl sub sub int3 popf stos mov add lea cmc sub lds pusha jo xor insl or sub mov and adc insb fsubs sbb dec cld pop add mov pop xor dec jg sub xor xchg roll jnp les xor xor cltd loopne cmpsl fisub cld xor orl jnp fadds and aas (bad) add mov add add cmp push mov (bad) jo push andb loope inc cmp cs cld sar nop test and fsubrs or repz flds pop movsl pop loop dec push or aad mov insl or adc dec dec add mov mov aam inc dec dec ror rcr clc add loopne mov dec jae xchg sbb dec adc decb imul pop pop jns mov xchg lds cwtl popf outsl dec xchg orb fsts nop sub dec xchg test test mov ja jp mov lock jp adc mov out pop mov mov nop and mov mov mov or cmp cmp xchg jno roll ds icebp mov sub mov int3 jbe inc xor add jmp add aaa insl fmul mov mov add mov pop pop sub rorb je mov fs mov inc xchg loopne lods sub das loop fstps add imul sub inc sub lahf mov xchg loopne fdiv mov inc cmp push adc leave or int3 pop mov rclb movsl psrad inc rcll adc mov xchg pop push jg rcrb roll adc xchg inc call movsl fsubrl xchg inc (bad) js add inc xor jno pop test lock scas push mov sub and loopne inc and and faddl (bad) lock cmp mov mov lcall mov or or sub call dec enter fwait adc mov and cmp push sbb cltd xor cmp mov mov jmp and dec add cmp lcall xorb aas daa jns dec xchg fmuls imul inc xor cmpsl pop dec or mov inc mov add dec mov cmp clc adcl daa (bad) adc mov dec or pop or mov mov es adc in or pushf mov mov pop push dec dec mov mov push push mov lahf xor adc loopne lock lock xchg xor stos adc loope loope cs and pop and popf mov inc int3 mov cmp cld cmp and nop out ja dec jo adcl xor (bad) add scas (bad) dec jno int xor sbb sub mov lock je divb push pop dec or push sbb lea call mov sub dec fisubr jnp sub je jae mov xor aam mov test jno mov dec fidivrl clc and out movsb int3 mov pop or pop and js and hlt mov lods iret cltd (bad) sub add mov dec in cmpsb fadds jno xor sub pop or leave xchg xchg mov (bad) inc push cld inc inc push test inc rcll pop mov jno fmuls andb inc adc or jmp pop (bad) in inc call xchg (bad) fldl lret pop cld jns loopne shl mov bound xchg and fcoms pop mov scas ret sbb bound and shll inc adc les test inc and and test loopne and push es mov out cmp sbb test xor (bad) pop movsl popa daa enter or inc jne pop add inc mov test (bad) dec rcl xor ja repnz je mov inc and aaa push fdivr and add mov mov stos sti jp mov xor dec pushf or add lods adc xchg and add cmpsl (bad) mov pusha pusha loopne repz mov cmp cmp test mov cmpsw dec mov sbb mov lds sub mov outsl (bad) xor pop test mov popf fdivr pop fs cmp dec cmp cmp xchg cltd mov js mov ret popf add sbb cmpb movsb xchg mov adc js add divb add pop out or jns lods pusha das add add xchg and dec cmpsl cwtl mov xchg jl adc arpl adc popa rolb mov dec or mov les lcall insl push inc insb and mov sub ret movsb jmp add dec das lret fistpl jbe (bad) popa daa add dec in push stos imul movsb jp test mov cld add sbb mov and xchg outsl cmp mov inc out incl push imul cmpsl pop mov ror dec dec fs lods pusha jnp adcl jle sbb inc push addr16 jno loopne pusha and jno jno add jge shll in and (bad) cld jne lods pop dec rcl clc je and aaa pop add ds pop pop sbb inc cwtl cmp inc cmp mov cmp stos jp fmuls sbb add jbe cli or add test in add mov mov loopne pop icebp add pusha jmp sbb pusha adc mov es ja sub xchg mov (bad) fisttpll add push push lcall jb sbbb lods sbbl xlat (bad) mov add sbb push notb adc icebp xchg jl adc jae mov sub fidivl aas add jmp pop xor and mov mov icebp stc cmp pusha push fldl add xor stc inc sub mov nop lret jno addr16 xor je dec rorl and iret imul sbb add test dec test push inc sbb cmp sub test aad pop jne popf aaa mov push ss inc add or jno jp mov and ficomp inc adc cmp add fadds addl add pop gs inc ret test cmp pushf push fsts test stc sbb in or add popa lock lock sub jl add push pushw push xchg loope loope adcb test fwait cmc and sbb sbb mov and jb pop xor adc int imul cmp fisttpll inc sbb push into sahf js jnp rclb xchg stc adc cmp (bad) jb inc hlt push repnz push aas mov xchg scas xchg test je clc adc xchg jbe je or push mov jne cltd repnz mov add push hlt aam pushf add iret jae sbb adc push inc cltd mov jno add cmp add les adc pop mov add sbb pusha fimul jmp popa mov add hlt cld outsb aaa icebp add fdivrl inc push sbb mov cwtl rcrb in sub cwtl mov and add mov or and repnz sub or sbb push int (bad) mov jne repz jp or movsl adc cmpsl push outsl adc lods sbb (bad) mull js inc cld repnz loopne sbb test xchg nop add inc push jae mov loope sbbb stc pushl xchg cmpb xchg add mov aas lcall fs lock iret and pop lods lds mov sub mov push jnp mov test nop push or outsl je pop sub mov rorl and divb int3 inc fcoml jno add pop xchg and icebp repnz adc add lea mov into jg cmp fsubrs rcrb add mov ljmp ret xor aam sbb or roll test imul scas aaa inc test sbb mov sbb or adc pop cmp jne in mov call shrb cmp call xchg lock jnp add fsubrl adc iret inc or ret inc sub fsubl push jne adc sbb mov pop orl dec or (bad) loopne add mov fcmovb daa sbb insl dec and pop mov faddl cltd lahf movsl cs add sbb adc add das xchg adc cltd (bad) add sub xorl sbb and xor lock fldcw xchg mov movsb xlat cmp shrb push lcall add pushf rcrl mov mov dec xchg or sbb xor insb mov in xchg dec insl cld sub fadds xor scas nop mov add cltd xchg mov xchg sbb push shrb add mov lods sbbb dec dec add push sub sub inc adc sub pushf push lahf mov (bad) and and and jns add mov lock xor sbb aam adc cwtl xchg dec or je and nop addb adc add add cmp je lahf push sbb add jns clc mov (bad) xor cwtl pop (bad) fmuls pushf xor push push and mov ret lea jecxz pusha insl js sbb arpl mov rorb rclb xchg mov pop dec enter pop addr16 add sub sub icebp sbb insb insl xchg nop adc and dec loopne adc cmp imul sub fnsave inc in jb cmpsb mov push cmp add outsl jmp (bad) jno lea enter outsb pusha fadds icebp shlb (bad) (bad) lahf test decl xor mov sub sbb jae lcall jo (bad) ljmp inc sbb scas jns cltd mov sti mov hlt or lock lods subb mov xor mov subl lods jnp scas cli xchg insb rcll mov jo add fsts outsl orl ljmp add xchg gs or lods roll push push pusha cmp cmpsl add mov or cwtl push push enter sbb loopne out (bad) or sub jne cs nop nop enter add sbb push roll mov stc add fstpt mov mov imul movsl push pushf add dec aam add (bad) ret es sar pop mov int3 movsl and lods lods push movsb sub adc cld fwait dec jne add add add mov push mov clc movsb xchg cld inc outsl nop pushf pusha scas out push sar dec (bad) jo call pop daa jg xorb jno imul or and or (bad) clc orl rcll sbb jbe rorb in add (bad) cmp push xor xchg cmp jae inc cmp mov sbbl push mov fisubl loopne adcb (bad) popa movsb add int3 daa fcoml sub dec les and sub pop cmp add insl notl jge push sti je cmp push jnp or sub jmp cmpsl mov cwtl test fidivrl fmull add into xor cmc lret xchg push and insb adc rcr out xor push rorb js lods mov xor jae adc jg sbb push inc nop and and aas add push dec stos inc mov inc aaa mov js (bad) adc (bad) pop mov rcl fldcw imul les fstpl cmp iret add outsb (bad) cmp cmpsb pop add fcmovne inc jmp add and sbb cmp roll shrl add push test dec cmp pusha pop or dec aam push adc mov xor roll outsl dec add leave loop js adc lret and cmp add es xchg int3 add loop fsubs nop clc xor aaa pop xchg (bad) adc cmp push adc adc pusha jl (bad) pop jl adc xchg push or jns ret (bad) jnp test icebp jle sahf sub xchg cs inc or lods sbb and lcall and sbb mov xlat rolb loope add add les xor fimull pop sbb and pusha mov or xor out sbb xchg push dec jb push insb pusha popa mov gs sub add push pop pushf dec add (bad) fsts pop aas adc das jae xchg add xchg or mov or cwtl dec pusha push es rolb jo adc sbb xchg xchg add fmuls test pushf enter add stos or (bad) stos sbbb incl xor sub inc jnp aam dec jmp jne or sbb cmpsb test dec and adc or jns insl mov and and xchg push cmp add test xor add sti jo je movsb pop js xor add push pop lret loope stos cwtl js add or or loopne jo nop mov mov sbb shrd add scas arpl mov int3 xor movsb addr16 dec roll clc inc stc sbb and mov adc sbb testl jecxz cwtl daa fild stc add ror test ja fsubl push xor inc push and dec data16 add add stos lahf je in loope xchg enter cmp mov add add mov out add popf nop in jp add adc mov add mov cmp mov pop outsb rolb push je clc dec loope stos xchg mov mov jl pusha ds and test and test cwtl jg push cwtl shlb hlt sti inc out pop or add ficoml adc nop and fwait cmc cmp pusha pushf cltd mov mov test enter js pop xor hlt sbb pushf lock (bad) lock cmp mov pop jecxz add jnp sbb inc in and data16 cmpsb lods adc jp or inc repnz lock adc dec pusha fs adc add cwtl add cltd insl inc ds pushf add stc pop test loope add mov xchg pop and outsb or xor mov fisub sbb bound aam mov jl and cmc jecxz gs enter dec inc or jg xchg andb add adc mov mov inc in add fidivrl xor sbb xor addr16 xor xchg sbb in pop ret les roll xchg add sbb popa jnp adc mulb movsb or xchg cld add push jge (bad) cli pusha xorb push push add lea ret lret mov ljmp adc add push fs packuswb mov jo lds adc adc adc xor jge mov lock loope dec or xor shll orl leave dec mov mov sub mov (bad) mov int3 add adc outsb test adc mov icebp jnp and push out or sbb add incb xor into mov add or add sti add cmp movsb addb adc cmp mov in fadd or jg jge pushf nop fisubl pushf clc xor jp repnz jbe pop inc mov and add jne cli and iret sarl in cmpsb pop movsb mov loop lock adc push push pop loopne dec sbb int3 cmp andl push sub mov or cltd pop push fcoml mov and sub lret xor cmpsb or xchg push cmp or repz sub flds push jae adc inc sbb enter sub pushf add inc mov add jnp and adc mov mov cs mov or out test adc adc adc and loopne add outsl push movsb bound mov xchg mov mov add or sbb dec dec pop add sub push (bad) push or sahf test and push popa js inc fsubrl ret mov repnz add dec push ret pop jo xor pop or sti pop sub sbb xchg lcall fistl scas subl test dec mov mov repnz test mov movsb aam xor notb andl push mov dec js pop bound jnp and mov test dec xchg mov jns incl (bad) or lods xor nop addb push mov inc sti add (bad) cs fs sahf addl or fisttpll and dec shll adc out xchg aas mov mov jecxz xor mov xchg or mov mov and int3 popa clc ret xchg les sbb mov ss jge popa imul fdivrs leave mov pushf (bad) nop inc pop out loope and xor fsubl xchg inc hlt jne or ja insl dec in test and dec xor test inc adc dec fdiv rolb adc dec cmp cmp or or mov loopne cmp out xor and rol inc mov and pop sub lret and popl ret pusha insb (bad) ss dec jge pusha jns fnsave jg mov dec sbb cmpsl adc leave xor cmp (bad) jae inc mov adc sti or addb jo sbb sahf inc inc lea xor movsb jle xchg decb pop jmp adc jp (bad) pusha add jbe lds push cmpsb pop xor pop push lret add xor jns ja pusha push add mov jecxz or push add call movsb or pop mov or mov xor xchg inc pusha aas jae es add outsb xor loop hlt lock mov bound mov repz xchg movsb dec pop shlb (bad) mov mov sub xor lret cld mov push (bad) in sbb sarl jge pop insb pop mov cmp cmp push xor mov xor mov or mov and cltd cmovs add and dec rolb dec fidivr cmp and mov rolb adc rclb xchg movsl mov add movsb ss ret add xchg repz inc leave mov inc std adc jg test bound or and pop clc shlb pop out sbb test movsl (bad) je movsb jb and cwtl add xor mov out jecxz or push ret add sbb mulb mov orb mov dec push add in adc inc cwtl cmpsb cltd lret xchg and adc idivb loopne in push hlt sub (bad) cs sbb jbe push (bad) int3 mov lock mov add stos xchg fdivrp addl xchg pushf inc cli aad add movsb xorl sub lds pop not pusha popa movsl xchg leave js xchg fcomps and test xchg and xchg cmp ret adc loop add sti pop sbb movsl hlt je add fbstp xchg hlt sbb jl in pop sbb pop lahf or push sbb cmpsl in sbb mov push dec add (bad) and dec dec adc (bad) xor mov push leave add repnz mov adc sbb xor adc add aas dec leave pop add nop and iret mov pop add xchg stos bound sbbb repnz adc adc nop xor add es sub pop ret jg aaa push lock dec add loope sbb jg xor loopne sbb int mov and mov loop cwtl pop sub test push inc mov lret dec icebp add mov xor movsb add adc or xor push rcrb popf sub inc movl dec sub or mov sahf fcoml mov roll aad push cmpl inc add repnz pop insb pop adc or push in adc lcall ss lret add dec mov dec push and cmp in hlt pushf add cmpsb xor mov push cltd jmp mov add (bad) cmp loopne mov xchg mov jne mov inc add ret lret mov dec pop test out or add xchg (bad) adc popf ror clc lds pop stos sbb jl (bad) mov adc xchg jle sbb mov xchg js sub jo dec pusha mov inc hlt pop mov rolb (bad) imulb dec push jo in imul and dec inc shl mov and lret test cltd hlt mov add je (bad) fnsave sub xchg inc addr16 push adc xchg cmp test aam and out jo add ds add rcll test or jecxz or stc ret sbbl jle ds and cwtl pop push rclb cmp push stos imulb pop xchg rcrb in roll xchg adc cwtl test mov (bad) sub jecxz add mov mov push or sarb pop (bad) into rcrb jle rclb sbb std inc jae push sahf test (bad) cltd pop adc out push fadd inc aam or mov jne mov int3 inc testb lret ret xchg adc jg jne orb and xchg adc scas add jl mov int3 push push sbb or inc push dec jno in jnp add dec and sub add mov bound aam les pop jmp popa inc push jmp and add icebp pusha xor mov rcl sbb xchg psubsb add (bad) sub mov (bad) dec push aad cmp inc mov cmpsl imul mov xchg mov add sub mov leave sub or pop les mov inc pop mov fadds std cld loop dec mov insb rcll mov push add cmp mull andb sbb inc aad cmp js xor pop inc add fisttpll jno sbb ficompl push and and jp or or jbe push mov notl add mov aad mov push hlt (bad) idiv mov mov addb jmp insl add jmp fdivr lret mull outsl push lea pusha pop lods (bad) xchg mov mov pop cmp hlt or aam and divb mov out xchg add adc push lds (bad) and test pop cmpsl add push incl outsb mov jae sbbl std stc scas clc shlb sbb inc rcr rolb or and sub inc adc mov subl nop not mov mov push push add loopne pop cltd adc pop les mov dec mov push lock stc popf inc jl fldl pop cwtl dec call cmp addl sbb dec clc push and mov ret xor andl xor sbb xor ficoml mov sub iret andb pop mov adc ret mov sub popa out fmuls loopne pop leave dec aas and jg adc pop adc clc (bad) lret in nop inc inc leave dec mov sarb push rcll loopne aas cs mov ret flds lcall push in in nop add adc ret imul jle push or (bad) mov mov push sub push movsb push test out cld xchg hlt add jmp xor add shll and adc lcall and jg push adcl mov adcl cltd mov or mov addl outsb lea mov ss insl cmp clc dec mov push scas xchg add mov xchg dec xor push fstl ficom dec pop mov xchg mov inc jnp lret faddl sub clc mov mov hlt popa dec cwtl sbb les and stc xor data16 cmpb insl mov push xchg in outsb aam jl outsl add xlat mov testl fld1 mov data16 pop push int3 (bad) loope fadds push aas out or jo inc push inc and fisub mov mulb roll loopne call pushf add push jle and mov xor loopne fsts sub mov int3 jg call dec mov dec push inc add pop mov mov mov push jecxz mov fsubp (bad) adc sbb loopne mov lds or adc (bad) dec and add repz xor push shrb aam mov xchg xor fnop sbb or popa pushw mov mov imul pop cli popl mov rcr xchg sbb mov dec sub xchg adc in inc dec insl inc cmp mov and mov push push fsubs dec and movsl cltd xor cltd pop insl cwtl add jns or mov stos cltd pop xor sub test cwtl test ds xor pop add sub mov (bad) lock xor add and adc jno mov pop inc pop rol push xor xor shlb je nop rclb inc xchg sti add movsb out enter jnp sbb cmc jge add mov push or sbb push inc add je jo mov insl dec or nop or call insl mov mov dec sbb and les ss add test fs or lock add push mov mov cs inc add adc adc mov bound sub loope les ret push jo bound rorl outsl sarb cs hlt and movlps xchg flds test sub fimul orl push mov adc mov cmp dec sub xchg cmp add inc (bad) jb cmc int3 movsb cld add lahf xor mov xor movsb xchg in aaa adc (bad) imul and mov arpl nop testl stos push in sbb cmc xor mov loop or orb mov insb inc nop mov adc sahf jg pop into and and xlat push (bad) insb mov jecxz jl aas adc pop fdivs mov scas jo add test push pop pop jle dec ds add and sbb in jp sbb dec pop fcoms mov pop mov lcall add sti jno cmp mov clc movsb cmp loop testl cmp out xchg jg or imul add push sub mov inc add mov jge dec (bad) js test push cmc xchg and lcall jb or outsb gs lods jno outsl aad adc stc mov fsub sbb inc mov add aad cld pop inc inc out or or mov mov push sbb adc repz fs inc xchg cltd or std je lahf loope pushf fldl dec in and adc xchg je call cwtl popa lcall insl mov fidivl mov push push lds push mov and or fistpl xchg mov in test sub sbb push and incb mov bound pop into popa sub jbe or adc or neg cmp insb add mov pop movsb jae lret pushf out sub or jb add mov xor or cmp jmp je add lea mov mov (bad) popf adc mov xor cmp or add pop ret fs ror or pop xor add cmpsb mov and mov aam lock arpl cltd leave and and aam cmpsl xchg jp add sahf daa and push test mov push push adc dec dec push sti roll mov cwtl or mov and mov ret leave adc pop sub fwait pop lods and call push adc add add dec add pop and adc int or pop add jo movsl rcrb inc or sub cmp mov cmc scas in sbb push sub fbstp mov add insb cltd or insl add fstpt mov and pushf or sub and enter dec add outsl sub push mov cmp scas add js testb push loopne push sub mov rcrb pop push xor xchg or mov lods cmp and scas pusha jge push fucomp xchg xor sub push xor aaa cmp push add fwait ljmp fistpl and push add ja stos mov jne jecxz fisubrl push int hlt add cmpsb inc in inc mov bound and or rorb stc cmpl rolb (bad) scas fbld pusha dec andl adc clc (bad) add sbb inc push repz test jecxz inc pusha add cmpsb or sbb or outsb sbb adc pop lods inc add jecxz sti mov out jmp add inc jbe sub and push insb add out (bad) lock and xchg add sub xor call in addb subb call dec shlb jo rcl mov adc in mov sub sub adcb in pop add add push aaa sarl sub pop xlat lods adc mov xor out pop aaa fs fwait lcall cwtl stc rcrb push sub dec sub les and or xor out fisttpl cltd sbb (bad) ds icebp sub cmp push lret call mov lret std popf mov je movsb cld and inc mov loope or daa in aaa sub mov aas out mov (bad) div lcall xor push add cmp insl mov sbb dec ret pusha dec ss (bad) les cmpl shrl jg add notb aam lods sub jmp int3 and inc mov xor or and out push adc (bad) test addr16 sub or push cmp adc and add int3 add add rcl or sbb sub icebp (bad) mov pop inc sbb lock aas sub mov mov cwtl add lock xchg push orl subb dec xor push inc insb or clc rclb loop mov add out cli mov aaa int3 lret pusha mov jo es add dec vcomisd fisub add jnp gs pop jg ret mov inc mov and sbb rorb adc test rolb rolb or mov pextrw jne stc mov lock xor and (bad) clc test sbb out and fwait out xor push inc mov jne sub les inc pop in testb inc push shlb mov fldln2 (bad) xor movb test adc xor fisub push fcom mov andb dec adc and sbb push mov insb test (bad) mov roll inc je repnz (bad) call add push icebp notb rcrb push int3 mov dec int adc inc aam xor int3 push cs pop add lods xchg outsb xchg cmpsb xchg dec push add mov fadds rorb outsl jo imul add daa xor das aaa adc jo in add mov add mov roll lahf mov or inc lds cltd cld sub fnop test push test out wbinvd fwait pusha les lea push xchg mov add jmp loop mov bound insb adc adc cmpsl sub je inc jl movsb test cmp sbb in shrb xor out pop dec adc (bad) fdivrl pop jecxz sbb hlt and push xchg inc dec jmp add in mov adc xor sub add lret sbb push dec add or mov push out xor das hlt orl push inc dec (bad) cmp aad lock sbb pusha add and gs (bad) push movsb or lock sub sub mov addl adc frstor sub add jo mov out push imul das js dec incb (bad) je or sahf insb jl push (bad) cmp lds add lea or or jge faddl inc jo add push xor add inc sbb and add call push lds or shrb adc arpl gs mov test add add xor cli inc mov fs testb lahf pop adc jmp in test adc cmp pushf and sub pusha xor jle bound mov pop jo xchg bound and cmp iret pop rcrb cwtl fnstenv xchg xor popa mov jo or add jo add push sarb push sub add xor mov cmp test mov jle sti loop clc mov xor mov repz and aaa loope andb mov sub mov je icebp loop inc jb add xchg xor jg or and ds mov call cmp inc add fimul jo pop popa mov fist push or gs bswap or pop dec movsl in das add fisttpll push dec subb js jl add xor pop cmp sti cmp add dec lods add popf or lock push cmc jge aaa pop js jno (bad) lea and mov call fdivrl mov jmp jo fisttpll mov jns sub add add hlt (bad) mov fnstsw mov sahf loopne test aad (bad) sbb popa mov or in or jo inc sbb fildl add faddl push mov adc inc enter or cmpsl cwtl fsubrs divb clc sub sub test inc mov pusha aad add imulb mov mov fisttpll mov outsl mov cltd dec mov andb iret in sbb imul hlt std into or xor inc int fcoms sub arpl lret xchg add ds repz xor pusha sbb pop and rorb inc mov mov adc xchg leave enter test lret sub push xchg es sbb sub imul or (bad) jo mov out int3 fsubrp insb shll lret mov cld and push xor adc sub adc cmp insl add pusha mov add pop ret dec jno adc mov movsl jmp pop je leave (bad) mov dec xchg xchg icebp sub pop dec and in lock sbb (bad) aaa test mov in push das add lret pusha stos ret cmp scas popf adc xchg pop pop out stos fidiv inc pop push and popf add pop sti fiaddl cmpsb mov mov imul xchg mov xor ret and push imulb in and adc xchg jns aaa add xor enter sbb dec es cmp outsl inc enter jp adc ds dec or and add push divl push mov add or nop out push mov je or lea sub mov test sbb outsl xchg or jns test testl cmp xchg adc sbb lret xchg add mov inc push xor xchg inc mov outsb pop out dec mov add (bad) outsl mov lea sbb jns test cwtl cmp lea call and mov dec sbb mov push movsb stc ds inc cmp fsubr in cwtl adc ja push inc int mov scas imul push cmp les ret cltd icebp push lods pop jmp aam sub mov dec fcoml pop pop mov add es xor nop adc loop test mov sbb add jmp sahf mov movsb pushf or js mov orl or inc and cwtl xchg enter and pop jnp cld jg add popa mov pop inc or mov mov sub or add pop or je in in imull push add sub lock leave and lds pop repz addb xchg xchg and js (bad) xor push popf xor mov mov in je and mov lcall mov cmp rorb (bad) pop or and cmp loopne xchg test cmp mov test leave push fdiv in addb push ss mov add xchg pop sbb lock insb push in jl adcl sub mov fist mov stos xchg ss mov dec movsl pop sbb scas push shlb add pop mov lea xor mov add xchg hlt adc repz add clc aad ja out pop inc adc or cltd dec cltd add sti call je rcll xchg cmp or pop mov cs pop test mov add cmc sub inc mov clc fsubl popa pop mov xor shrb cmp in das or jbe add (bad) sbb fsubl mov jmp jle xchg jecxz add jp push imul rorb dec xor add lret inc push jg test or and adc sbb rdmsr (bad) xchg add or loop add xor or fsubrl pop add mov mov xor mov add scas push lret cltd int3 mov nop mov (bad) sti sub std lods push add dec add or mov lahf add and fstpl mov in jnp mov inc adc adc add je loopne mull loopne push mov and imul sub fstpl and sbb push add and jmp add push inc mov dec and test cmp mov sbb (bad) xor xchg daa add movsb mov mov loopne stos nop jns mov rol push sbb sub cmp outsb mov adc dec or mov ds dec sbb jge jg repnz pop fmull fwait test loop imul jns pop andl call loopne adc pop and sbbb sbb xor movsl or sahf sub cmpl push test dec jbe stos mov movsb call aas xor or int3 cmp adc pop adc cmc stc and pop mov aas inc add jl dec add insl xor push test sub bound imul inc daa mov adc int3 xchg lea aaa and inc add xor cmp xor clc pop adc cli enter cmpsl je insb cmp test and outsb lods cmc fs adcl cltd leave jbe inc in dec loope out push jnp clc jle add sahf fst cmp dec adc inc dec mov xor inc orl mov das add inc jne icebp (bad) cmpsl sbb add xchg jo xchg and mov shlb add stc xbegin out or test add pop mov jno inc mov sub nop inc inc add popa mov in add jbe rolb lcall mov les push inc hlt xchg sbb add mov neg movhlps pop push loopne cmp std aaa pop test popf sbb movsl shrb mov dec dec sub fcompl mov push inc movsb inc in pop sub (bad) in fs sub mov push in call testb push lods add and pop or test adc xchg jnp add dec in aam sbb jl psubusw insl pop mov add xor sbb sahf mov test cmp mov cmp lea sub stc fwait xor cwtl or push xchg loopne xchg cmp jnp xor negb jo cmc and ficomp es rolb lcall pushf sbb xor clc rcr add cmpl orb and inc aam fdivr add or insb pop cmc adc test jl aam push nop sbb adc scas mov pop lods fsincos add push cltd lock sbb (bad) insb dec les mov jo jns and mulb mov lds (bad) add lret xchg addb add push fwait mov inc call dec mov add shlb loopne hlt cltd pusha sbbl jbe js push sbb inc cltd test and or cmp or orl mov subb enter xorb aaa ljmp jno or out xchg test xchg and cwtl xchg divl ds iret lds nop andb sub sub es mov lock xchg js jo add dec clc adc cmp mov out sbb test and test and add mov lcall cmpsl (bad) mov notl xchg xchg add pop or sahf sub push and cmp insb inc mov (bad) inc inc fnstcw fild das mov inc (bad) sub sbb fsubrl gs push sbb and (bad) dec dec mov pushl and enter lock loopne lea adc jg fsubl push ret aad mov and loopne mov clc adc mov push nop push ljmp nop loopne fnstsw sub xchg lcall cmc and or dec popa push pop sbb lcall mov div orl sub cmc adc jmp sub add jmp mov add add xchg call xchg imul fisubr in xchg xchg stos xor pop or pushf cld daa (bad) mov pop inc rclb (bad) stos cwtl enter dec sub adc faddl fildl pop inc xchg xorl test sub popa (bad) movsb mov sub cmp lcall add pusha negl leave out xchg jg add mov adc mov lods inc aam (bad) lock jns insb into pushf lcall add cmp lcall pusha cld in rorb mov fnstenv push xchg fcoml rcr dec fcom and mov test rorb sbb pusha dec nop sbbb inc jle sti aaa add bound das mov sub lret enter fwait xor mov mov (bad) cli sub repz addr16 lock test pop push movsl insb mov mov pop jo ds in pop dec sbb push or push movsb and push imul push sbb add imul push addr16 (bad) xchg sar cmp mov cmp cmp in dec or lock pop fucomi dec or rcrb add mov iret movsl add add xchg cmp adc in sub cmpsb test scas out push adcb call jb cmp (bad) enter cld daa in (bad) adc xorb sub add imul repz and adc mov sbb xchg hlt sub cwtl and mov adc and jne add mov and cmp stc mov cmp push loopne setle and push mov movb (bad) jae shrl push pop enter jg xchg and cmp iret mov push mov sbb js stc lds lea mov sbb into ret jp repnz adc pop fs outsl cltd call jo mov int3 or dec lret icebp adc test dec in or xchg push xchg xor xchg cwtl inc std mov dec repnz pop xchg ljmp clc pop add inc xchg adc sbb ret (bad) sahf push call mov xchg sub cmp jnp popf mov or or (bad) mov dec aad jo sub jp lods adc xchg cmp and jnp outsl inc xor mov test pop add cmp je jbe jo mov sahf mov lods ljmp add pop xor mov sbb dec outsb mov and sub divl inc call movsb (bad) xor push andl jmp xor jmp pushf jo pop add inc inc xchg daa into sub mov lods mov dec dec data16 addr16 jnp out fdiv add int3 push or pop (bad) std add push or xchg push pop push inc xchg cltd (bad) add inc pop enter aad sti leave push repz add jo sbb cmp cs stos fdivrs cmp ror pusha gs xor lret mov pop mov push repz or in out or jno cmp (bad) jmp mov stos cld loope lock add lods jae push sbb repnz mov stos add mov cmp jnp jecxz ret xchg cmp lock cmp add push and sbb inc sub gs xor stc cmp ljmp jo je fisttp and ds std cmp push mov add xchg cs push sbb xor add fstps mov mov jmp jns pop sbb rcrb inc pusha sub mov (bad) dec jge ljmp push mov mov add push jb or cmp outsl mov aaa dec xor mov movb push mov adcl push sbb stos lret jae (bad) mov sbb dec mov xorl scas gs loope mov int3 daa pop jns (bad) movsb rolb in sub ret sub fidivrl arpl fistpl push aad call push test add mov adc cmp add cmp push arpl add dec push movsb pop pop adc test jg fwait cwtl js xchg mov fs sbb loope jo or cmp push negl aam mov fildll pusha mov lret int add pop (bad) xor pop cmp arpl bound xchg inc cmp lock or sub or pop push mov push jbe seta mov scas test add pop inc mov js adc ret in int3 inc xor and fnop nop pop push ret and and data16 leave jbe (bad) mov fwait out dec adc add and pop jnp jge ficomp mov mov sahf pusha add cmp (bad) sti cmp jp and gs mov roll leave adc push out pop cmovo stos xchg je xor test (bad) and add and loopne and add test mov xor (bad) lds push add and popa lods xor and cmp adc sub cmp pushl andl sub jns cmp push mov js and cli ret xchg mov mov adc mulb fmul inc inc add loopne call or pop push xor sbb bound cmpsb daa adc mov and cmp jmp popa add cmpsl xchg call inc fwait or sti pusha cld data16 mov lods movsb cld xor clc cmp (bad) xchg or and pop mov aad inc push inc lret fmulp ret and pushf add jne loope mov dec pop sub or cmpb sub adc loope jp add pop (bad) and jb cmp cmpb rolb addb adc sub dec cmp mov ret mov lcall jl or test bound popa (bad) hlt push add jns pusha pop (bad) (bad) cmp mov icebp rcr push mov sub sub jmp mov mull lods cld fsubrs sub push mov adc out add push xchg or fistl push or rcrl aas xchg enter xchg xchg pop adc add (bad) jmp inc dec cmp sahf in add stos movl mov dec js nop data16 adc les xor loopne add fistl mov sbb or mov das (bad) repnz adc rcrl movsb push ljmp sqrtps or (bad) cmc sarl inc rorb cmp xor adc clc xor xchg push pusha jp dec fdivp pusha fisttpll fdivr mov jle out (bad) lock inc fildl adc js xorb mov push xlat cmp and test (bad) icebp or test rorl adc cmpsb nop (bad) or dec pop add loopne or add or jl out clc daa push (bad) pop dec push mov jle push not fadds sahf xchg cmp mov (bad) cs push lods je fs std cmpb cltd jae pop dec mov test or xchg cmc inc add pop cmp cmp aas xor flds iret fsubs sarl adc inc jb pop sub xor shr adc fs push add arpl xchg mov in imul shrl mov lret mov sarl sbb push mov lods push push xchg mov mov sub xlat test fldlg2 cld int insl mov add xorl inc enter and add pop cmp lret add mov shll xchg push scas repz cmp rolb fsub imul gs shrb push push xchg sar adc and sbb addb iret enter add call test add sub lods cmp mulb mov mov mov cmp test daa add sub cltd fwait mov shlb cld dec aam adc and pop loopne loop add lret push sub loopne sti cmp shlb and ljmp movsb add adc dec pushf jge outsl xchg mov das cwtl aaa xchg add ffreep icebp cltd push adc nop call pop xchg bound fadd dec push in fdivr repnz xlat pushf push pusha mov adc lock pop cmpsb sub add and pop add aas mov add lret push xchg pop dec and jo sbb pop add cmpsl (bad) pop pop push popf pop mul jmp in or xor push adc fistp pop sbb pop sub sbb add or pusha ds or scas sbb and adc pop pop loopne sbb or out cmp and fwait lret add lcall arpl xchg mov adc (bad) push fmul or push popl aas or jl lahf push add xor jne cld test call xchg dec mov js sbb loopne ds shl mov es dec negl iret mov pop (bad) pop jo add test sub xor rcrb inc lock inc mov (bad) das mov mov mov lret mov cmc mov pop inc or subb jmp iret js loopne push and cmp jae add (bad) dec adc in sub (bad) stos sbb xchg lods pop add or add xchg mov (bad) aad inc stos lret or setno roll inc hlt outsl add mov or imulb pop push (bad) jo jg and push ss xor dec xor add stc adc sbb sub into pop inc adc mov pop cmpsb sbb lods aas popa mov out xchg add xor lahf les fwait test or cmp into add mov and jp add lea inc lret sbb inc or mov xor dec les (bad) sub js jae pop or xor cmp push movsb mov clc adc loop mov cmp mov enter shrl lcall xor or adc cmp cmc out pop mov add fwait adc add and hlt add lret mov dec sub lods xor fcom jns mov pusha or lahf or stos mov lods mov pop cmpsl (bad) mov mov mov xor rolb and add cmp outsl or add xchg add inc sbb sahf dec (bad) jmp repz inc push fidivrl add faddp in fist cmp mov bnd pusha adc out aad andb jg mov subl adc dec or mov enter popa ja flds pop jo mov sub test iret js push insl mov shll sub jg xchg xchg and inc ret aad or add push xchg jb arpl and popa mov mov rclb jge sbb push jne repnz xchg shrb (bad) xor insl sbb mov adc out rolb call and xor (bad) cld sbbl adc lods sbb dec dec inc lock ffree jge les mov and xchg test add movsl jp jo mov add stos pop je addb jo pop mov add movb sbb inc es sub fmulp out mov add rcl cmp arpl jmp mov in enter dec in add mov pop (bad) jae xchg pushf add adc inc pop stos fwait ja gs cltd loopne adc push xchg orb lret cmp mov adc xor hlt test and push mov add jmp or aam faddl mov mov sahf andb sub inc es xor pop xorl js pop mov pusha mov lds jb or in js mov push (bad) rclb mov push pop nop mov mov cltd sub fs mov xor jns movsl sbb ja outsl int3 sub cmp push cld mov add sti xor dec add fadds add sbb das sahf movl mov stos inc mov cs or pop fidivrl cmp add mov xlat pop lods add xor xchg push mov xlat mov sbb and imul dec pop sbb pushf nop jo cmp and mov popf bnd adc xor push sub cmp push xor or add sbb cli push lods fnstenv call mov aaa inc or mov rol mov lahf icebp call sbb das or jge jl cmp call sbb repnz pushf test push add lea sbb add xor mov or cmpsb lods inc xchg sub jae pusha lahf sbb and mov jo aam jb orb test hlt fdivs mov and mov or shrl pop fcoms mov insb aas call xor dec rorl add sub movsb mov out sbb cld add (bad) in dec adc fnop add push mov aam sub mov push ror xchg cmpsl add loope testl xor mov jno loope lret xchg add pop jnp sarl (bad) mov dec fildl mov pop (bad) add or out or mov gs mov mov int push mov mov es inc lahf adcb dec leave xchg ret faddl cmp mov cmp adc and add mov sbb add ljmp (bad) pushf es adc add or dec sbb sub iret sub ret add hlt jns mov les hlt add jl (bad) clc adc insb shll pusha es or cmp sub push mov pop lods inc int3 addr16 addr16 mov (bad) jne pop cmp pop or or rcrl daa inc sub xlat nopl sub cld (bad) (bad) sub inc pcmpeqd cmovle roll sbb imul loopne sbb push dec cld sub cltd add mov rol push mov dec jp jl sbb mov mov adc push add fsubs mov out xchg push jg cmp mov lock loope adc xchg inc cmp test lods cwtl push (bad) and cmc (bad) or out inc rorl xor nop adc enter sbb add es xchg adc dec lds push push es shrb add sbb fnstsw enter fistpll stos sbb sahf xor mov xchg jno rolb push imul out imul xchg inc and and add out wbinvd add decl sbb test inc push xor outsl add cwtl nop negb mov lret shlb push test addr16 push inc cmp jge dec loop mov inc sbb mov ds push xchg (bad) sub dec mov xchg cmpsb (bad) cmp test xlat sub and les mov lret push pushf in sti or js aam jg movsl jb pop adc test xchg mov add adc jbe sbbl cmp (bad) mov inc loopne clc or loop int push and lods inc nop call mov nop movsb pop cwtl push sbb in adcb out insl and xorb mov je faddl sbb outsl hlt dec sub push pusha add push sbbl mov xchg mov out sbb arpl mov loop lahf negl aaa scas adc and jbe push mov xor push jb lret fldt (bad) sbb cmpsb imul inc aas (bad) mov inc and jae les adc or ret (bad) jno pusha add inc fiaddl aas mov fnstcw lods adc hlt xor sbb outsb sbb adc sub sarb rol ret mov add push mov rorl int3 clc dec je mov inc ffree push pop popa std loopne push (bad) call mov int3 sbb cwtl fcoml xchg adc pusha sbb or add ret enter adc (bad) xor cwtl and cwtl push or sub adc adc rclb sbb aas and xor fsubrs stos lahf je and or test xchg test test dec inc clc mov es mov sbb jl add ds push inc jo iret into add or mov add push adc repnz call push fs inc movsb adc inc (bad) adc mov inc push stc and sbbl sbb pop cmp stc popf inc fiadd aas loopne pop aam adc adc ja popa sti loop mov xor iret push in mov cwtl es adc adc push mov jo mov iret xchg xor pusha adc dec (bad) dec pop mov mov push repnz testb xchg dec shrl xchg pop or pop or ss int3 jo or push hlt add mov cltd (bad) cmp add dec mov inc aaa std ret xchg and inc fcomps adc xchg lods mov dec inc add jae je bound cmp jne adc mov lret enter inc in in hlt add addl push test faddl inc test popf hlt pop push or mov and bnd inc add cmp cmpsl and add leave sbb adcb test nop xchg inc call add andb (bad) and adc (bad) mov cmp inc dec addl xchg adc jp sub xchg mov pop test lock add pop scas sub icebp add jp xadd lea (bad) pop mov subb (bad) pop mov mov lcall fs (bad) or add dec mov jg lock pop lock loopne push mov leave dec cltd sbb je sub mov xchg mov lock jne repz jge and add cld clc fistpll or push sub xor sub je adc pusha dec mov lods adcb incl push out jo lods add loope sahf (bad) fldcw pop add adc aam adc pushf sub dec pushf cwtl pusha cmp xchg adcl fild daa enter and cwtl and dec cmp cmp ror lock xchg cwtl or jge,pt nop int3 add jnp add popa es mov insl sub mov mov or and rcll call jge test adc mov mov mov jmp jecxz in dec jno addl mov push cs (bad) fstl test (bad) or pop negl adc adc fdivrs into test fsubrl xchg jmp fst jns and mov popf push ret inc test lods push mov inc roll adc je xor test pusha pusha sbb add push push xor dec add mov push stc push jge test aaa sbb mov hlt in add data16 push jno mov rclb lods add lcall or fisubr daa add mov push jmp stos add repnz add repnz faddl (bad) pop cmp jnp mov sub xor idivl gs into roll xchg cld mov jl stc sbb or rcr add rclb je adc leave mull add xor test jmp mov test jge js sbb lock add dec mov sub fs and push roll outsl dec adc movsb push enter stc mov mov lock call fwait loop incb stos mov movsb fsubs sti jge fs pop sub add inc outsl loopne sub dec add adc push jae pushf popf push imul repnz push ret sub jge sub js mov imul lock add or cltd shrl add lret cmpsl add cwtl cmp (bad) jb js cmp ds cmp test or scas push and jmp xor mov adc push jno or add jnp xchg and arpl pop repz fxch xor adc insl mov jge mov into inc xor dec mov in imulb call aas test enter xorb call rcl pmullw xchg movsl or sar leave cmp push push div or imul subb cmpsb xchg push cltd add arpl inc (bad) setne pusha mov rcrb sti addb adc testb xor mov jle std pushf cmp inc or ss leave in xor ret cmp pusha push rcrl aam fidiv adc cmpsb push pop addb add lcall es ljmp add std mov add jns push sbb mov sub and xorl mov dec pop pusha stos rol fdiv les es jno ret mov sbb inc mov int mov xor inc sub mov dec sub mov xor js xor outsb clc or cltd popf lods adc jmp adc addr16 lret sub repz add cmp inc inc inc add test mov inc movsl mov (bad) jmp and or mov test movsb mov and xor shr dec push pusha inc icebp inc ror push push int js sbb les mov pusha or push add lret frstpm(287 jge pop inc verw pop int3 sbb push mov pop pop add sub dec test mov xor test add cmp mov je xor rol (bad) enter stc je ret mov mov cs pop call sarb lods xchg int add mov xor stos (bad) mov add loopne lea in inc xor frstor add popa mov enter cmp inc ja mov leave lock stc inc hlt fdivs popa lods iret xor add (bad) je js loopne and out cwtl dec or cmp test push outsb loopne or pusha inc lcall jl cmp push pop xor idivl sub or xor leave inc dec add mov inc and imul repnz das pop loope fdivl sbb andl shrb ds sub inc push (bad) and jmp aaa inc sub jo jb enter stos cmp cli add dec cmp cmp or nop add inc mov jne out pop adc pop fwait int3 xchg je cld test mov xchg add xor test dec loop enter outsb mov push movsl xchg dec push rolb js gs pusha leave sbbb mov push aad xchg in subl in or in mov cmp or lret icebp sub xchg xchg jge lret mov mov xlat and int3 add and adc imul mov add jmp ret dec pushf sahf cmp clc sbb and rorb mov mov (bad) pop add mov pop and test and pop js out push (bad) xor bswap cld push mov (bad) mulb dec fcoml xor cwtl es call dec xor cmp dec jae js adc push outsb sbb clc mov ret add (bad) pop adc pop shll inc ret mov add xlat bound xchg sahf dec adc ljmp xor out inc js add push stc (bad) js and mov dec popa repz mov sbb xor ret mov pusha icebp adc lret add fsts mov mov stos orl xor sbb aaa ret sbb aam subl aas cltd adc out adc icebp mov lret shrb cmp xor popf push push jb and or adc in xchg loop subb push xor test add idiv or or and xor inc cmp xor mov arpl ucomiss dec cwtl dec test mov pusha call pop cmp leave icebp mov cltd xchg inc cwtl mov imul sbb or push insb iret adc popf pop nop push roll loopne shrl in sbb mov int call mov dec push inc dec nop xchg lods je pop cwtl je in lret xchg mov dec mov mov loope or lock dec push mov nop add add push add adc repnz mov int or and sbb mov scas test loop out enter jg (bad) pop cwtl xchg lods and sti mov push push cmpl dec mul sbb dec push (bad) pushf sbb adc dec xor loope int cmp sti add or and shrl or lret mov mov aam insb add xor mov or pop sbb mov lods adc jp xchg adc add enter movsl cmp testb ror xor sbb popa inc add cmp push addb dec xor lret and jp rcrb cwtl mov std add hlt dec sbb push or rorb popf addb scas cs mov mov pushf dec je mov push sub jecxz add cli push rcrl pop add xchg mov (bad) xor sbb sbb dec ficomp in xor push icebp cmp clc inc xchg addr16 or mov lahf repz xor inc push adc push jae mov insb pop aad movsl and dec nop add sbb inc jo loope jbe dec cmc cwtl cmp add mov incb lret push mov btr pop adc or repnz mov nop and xchg (bad) mov pushf mov add mov lret es mov sbb and out (bad) inc cmp mov inc mov adc fstl enter repz and xor nop lock or arpl ss mov mov add sub dec pop inc aam mov std add mov (bad) mov add or (bad) dec cmp dec mov xchg into adc sub (bad) sarl jbe fdivs sub in adc add xchg mov cmp lods (bad) jecxz pop ret nop outsb popa pusha push add xor and das adc or sbb inc cmp in lcall loopne sub add cmp daa xor xor movsl push mov cmp or inc xchg inc int3 pop xor pop xchg add inc nop sbb in test mov and cmp lcall or jo xchg aam pop and xchg lcall divb pushf sbb sahf push sub sbb js xor movsl lock dec fsts decb adc rolb inc (bad) adc add cmpsb and in and or add daa sarb and repnz and or cmpsb fcoms cs sbb xchg popa push xor jns test lds test cmp inc ja adc adc out push mov pop mov psubd mov add sbb and xor cmp add xchg mov or mov xchg inc std xchg shll repnz rolb ss scas clc and rclb out dec mov inc shrb (bad) stc inc xor rorb cwtl jns mov add mov jo mov mov addb rclb and sub adc or xchg rcr mov pop mov sub clc or xchg int3 cmp jg jl add xor add inc imul adc mov adcb inc sbb repnz dec xor add std pop sub mov or das cmp push je and dec mov cmp out (bad) (bad) mov nop stc pop repz sub dec movsl inc mov mov mov adc aaa pop push xor xor add hlt and int shrb push (bad) insb and add push insb push sti sub mov adc sub enter or orb mov xchg add pop mov pop push lret gs jecxz nop imul pop int adc lods cwtl sbb cmp inc sbb in sub add addb outsb aas sbb mov fwait xor cmc inc cwtl fs mov dec sbbb and cld inc arpl mov mov jnp sbb sbb sbb or lods adc sbb xchg cmpsl dec and add pop scas xchg inc rorb in fidivl nop jl sub inc nop add aam cwtl test push jecxz push mov push scas add mov xorb cmp js neg cmp test fcmovne cmp sbb pop dec sahf or les cltd pushf xor inc xchg add ljmp (bad) cmp shrb inc pop rcl subb out add dec arpl pushf mov lret subb jb imul pop add addr16 mov mov sub push icebp and inc xchg mov nop push sti jo test or mov or ss insb (bad) mov loope mov jae sub or mov mov adc les add insb outsb pop jmp leave inc movsl (bad) mov inc push in xor dec pop xlat mov test xor bound adc inc pop add mov pop enter mov stos aad or xchg xchg pushf pop cld or movsl in js push icebp sub jo add aad add pop xchg nop and mov pop in test mov notl pop add pushl stc cmp push movq mov adc lods fild xchg add adc cmc inc mov outsl in loope adcl lods push pop pushf (bad) pop ret add mov js add xchg and jle adc aas push or pop repnz clc cmpps mov adc sub fiadd inc lea mov add push int dec shll in pop jnp mov pop (bad) mov mov int3 sar pusha cmp xchg std or mov dec pusha cwtl add sub jmp add add adcb (bad) fdivs or repnz sbb comiss xor lret mov push clc push cli inc push arpl js cs dec fiaddl sub cltd jne clc hlt mov sbb in mov gs sbb add mull pop jbe and mov mov (bad) xor dec rolb or in cmc or add adc inc sahf enter pop cmpsb jnp ret sbb mov push int rorl lock add inc xchg mov inc inc cmp push fucomp addr16 sub in cmpsl (bad) outsl or mov add int3 jle sub xor cmc test jp ret adc push push dec adc nop notb mov dec loope lods loopne rorl je aas cltd sbb cwtl and subb aam adc xchg jp data16 jmp and mov add in pop pusha cmp mov and sahf dec jg roll sbb mov clc jnp ret fcomps sahf lods int3 xor dec cltd add mov test sbb sbb sbb imul and cwtl int3 inc cld add jo loopne mov xchg fwait inc andb add hlt add leave inc lock inc and mov rcrb jge loop xchg add cld jns push mov loope sbb (bad) adc add inc and add fisttp xor push fcmovb sbb push inc xchg in sub aaa test jne xchg les and xor test xor add fs push adc (bad) ja int3 sbbb int3 sbb add scas push (bad) xor inc jp movsb adc add push add fsubs in std add ret inc cmp in pop add pop test add sti pop jg dec out out xor and ret add pop xor xchg sbb jl out cmpsl add cwtl add lret sub or add (bad) dec jno dec sbb nop add rcrl out xor add ret mov add adc adc push add inc pop ret aaa add add or out push xchg lock dec mov int add jne fldenv popa xchg js adc pop inc add xor je or fsts mov cltd insb adc call into add adc inc incl or sbb cmp jmp or inc xorb add idivb mov fcmove orb cmp cwtl mov (bad) call mov jg aam nop scas mov gs divl repnz fadd and call pop jne fdivrl adc add inc cwtl cmp mov push scas pop cmc icebp loop mov adc mov mov add ret std pop xor adc mov fcoms lock or jns inc mov add mov test pusha lret mov arpl sub fcoms mov dec mov in es xor cmp pop rol ja jl push outsb dec add pusha pop cmp add add sbb xchg cmp fwait in push xchg lods jb add pop inc sub movsb bound adc push mov insb repz jnp pop inc pop fs call repz (bad) orl cmp and jp out and ds rorl outsl (bad) into and push in push push call (bad) adc inc shrb xor js insl idivb add push subl pop mov push inc sbb and jmp add adcl int loopne or lret ja popa (bad) add add sbb dec (bad) fdivs mov sub loope push add cmp push adc inc rcr mov xor add or rorl or testb incb cltd pop arpl in and push stc mov cmp xchg rorb xchg imul and dec pop add inc les xor movsb gs or or lret rcl shlb add aam call inc and mov mov xchg xchg inc push ljmp jo je dec adc aam mov rcrb mov stc iret test adc repz push in and clc push add xor or outsl lods inc popa sti add mov in xor sarl mov or dec xor and jecxz repnz push xor neg jge fcoms popa loope inc movsb ja mov in movsb test pop xchg jge add xchg cmp bound mov shrb lock call out adc int add mov stc adc rcrb add dec out push jecxz add jb subb iret or sbb or xor adc pop dec lods sub les aas push pop jmp pop sbb xchg xor mov (bad) dec call jge xlat sub je or adc orb or sbb cs push pusha dec pushf movsb and sub orb sub mov in inc js sub push fimull dec pop imul ds push lods in sub faddl mov fmull adc pop xlat fdivrp fs repz cmp (bad) cmp or jae test add or in (bad) cmc sti push add lock dec adc cmp leave add push sub incl xor pushaw push inc mov ret aam or fmull dec addb (bad) (bad) in and rcrb inc mov inc fnstcw clc push or stc mov pusha adc mov repz cltd mov (bad) adc add rol xchg adc rorb nop mov jne xchg inc add rol pop jnp js enter add or adc mov movsb jae lock mov mov cmp push mov sbb jne call scas adc enter mov sbb xchg and outsb xchg addl aad loopne pushl ljmp aam jmp aad or dec aam mov out pop add push cmc cli xor daa jl dec cmp push repnz call sbb cs or sub add add mov fidivl mov xchg es imul fwait add adc stc in mov test add out adc mov cmpsb pop add in out pop cwtl mov fstpl inc sbb mov inc das xchg movsb adc and (bad) mov test mov loope add and lods and enter inc loope fcoms dec jmp cmpsl push enter dec ficom pop into int3 xor or add loopne loopne mov push jmp not mov add (bad) repz adc jmp jl cmp jb inc outsb call inc in push xor dec xor aam sti sub cmc push pusha and test out push add and std add or movlps dec sahf subb icebp in or lret add clc loop ret and or lret dec ficompl addl adc add sti (bad) sbb lret mov sahf or pusha push mov inc fdivrl mov cmc lcall push push int3 cwtl mov arpl mov (bad) roll xchg jne std jno testl rcll hlt adc popf nop in call add pusha cmp xchg push add mov stc xchg pop or jle jno nop mov (bad) pop test mov xchg cwtl pop pop insb jne stos jl mul stc adc jae dec xchg push pusha adc int inc iret (bad) test insl addr16 mov mov mov inc and rcr rorb xor fstl leave or imul or lahf stos (bad) cli fdivs xchg test xor in insl stos call add std jns dec (bad) bnd add cli mov sti or and repnz int3 fldcw jecxz sbb or test icebp adc cmp sti out pop sub imul adc push and xchg pop (bad) add mov mov or add dec sbb add pop test xchg mov add jne push jae clc jl mov mov pop test mov xlat es jbe jl jne add add xchg add sub push jecxz faddp data16 fwait mov sbb jne in (bad) sti into add sub xchg dec or mov cwtl inc jge xor pop fldl add (bad) loop imul (bad) pop std pop push add add orb orb mov and orl movsb movsb js stos cld rcrl loop frstor inc push and and js test test icebp sbb imul int3 push (bad) jnp pop ret sbb loop hlt mov pop push cmp mov mov jb sub in sub rolb rolb pop lret or xorl pop adc pop jb add mov rclb pushf inc inc or aam add mov loop rorb ss cs inc push jmp inc and loop lret ljmp dec push push mov (bad) jae pop inc mov shl mov addr16 fldt mov mov mov icebp fcoms jmp push in fnop and xor enter add adc dec mov push and je add mov mov add inc and lods in loopne add lcall inc cld lahf sbb in or push roll jg lds jp lret (bad) cmp mov push inc jle cmovo xor push sbb into outsl sahf js mov pop (bad) push je xor pop cmp xor xorl push imul and neg push push scas push mov xor ss adcl stc inc or xchg jnp leave or dec adc (bad) in jne mov popf femms insl dec dec or jns add mov xchg mov movb cmp ret inc dec mov icebp push adcb es fild mov scas add lcall dec mov jmp arpl xchg mov fmull push sub cmp or xchg cmp add adc sti mov add mov leave xchg or sbb clc mov push sbb cwtl add (bad) mov push aaa cmp or enter cmc push jb fldenv xchg and add int3 fildl out data16 fwait and aam nop or jnp push jns sbb icebp push push xor adc enter adc push mov dec pop (bad) xor in rcr adc in pop jo sub mov icebp inc mov and jbe xchg clc add cmp mov jle andl adc addr16 dec orl jmp adc sbb cmp test xchg lahf add repnz addr16 enter pop adc xchg loope fbld mov enter and mov add test mov cmpsb mov push nop bound and mov or mov mov push loop loopne sbb add lahf add ss fiaddl xor push lods fwait scas lods xchg inc mov cmp inc aaa shlb iret adc lea pop scas int3 aad xor cltd sub jne stos inc sahf mov sub cli push rclb add test add dec add das mov xchg and pop inc (bad) xor or or sbb mov xchg add inc push in enter xchg test xchg mov lds dec or xor cmpsb rcrb shrl jge pop and or das lods mov js mov xchg cld jo je icebp add rcll fild ret push sub mov es mov mov scas pusha int3 leave mov (bad) push or icebp fsubl call xchg mov add mov cwtl xor sub push mov xor sbb popf cmp in push mov cld dec loopne dec enter and push jle jbe and mov xchg add jp sub in aas mov adc add sub push fs divl sbb push fldcw (bad) cmp enter add sbb mov xchg adc icebp add jle inc jns mov enter cmp out aad test mov repz sub adc mov inc push add aad nop daa mov jno ss or xchg mov clc out push pop sbb inc scas les xor xchg mov xchg iret scas test add imul lahf inc sbb add jnp sub stc jecxz or dec mov add nop mov call add (bad) lcall add outsb add int add fwait pop imul add mov jb orl pushf test enter dec and jo roll pop sbb (bad) adc in aam pop dec jg push pop mov cmp fs xor pusha in ss inc nop sub fdivrs mov push pop outsl icebp das push pop inc insb cwtl mov or and sbb xchg push movsb lods lcall sbb mov sbb cmp push shrb ja mov push xchg dec inc push sbb in mov mov js push in (bad) dec sub loopne mov fildll jecxz (bad) add sub fwait and sub mov mov and bound add xchg pusha push cmp xor and add cmpsl add nop repz push mov xchg ret test insb add lret sub adc inc sub or dec mov and mov xchg test ss push lods dec subb dec nop mov push inc mov lods xor shlb fbld xchg repz dec xor shll add cmp in xchg cs pop mov and scas shll aaa test and jns adc movsb or jmp mov mov mov cmpb mov insl mov sub xor cmp cmp dec xor adc dec mov ret rcrb cmp xchg and add dec sub test and scas mov adc xchg mov mov popl (bad) sahf jns sub push lock add nop in xchg sbb and xor add mov pop adc inc add popf xchg addb mov adc fiaddl and xorb or movsl add cmpsl mov push cmp movsb clc roll inc into adc inc cmp xor and loopne mov adc add out les sahf mov dec test je aam xor inc nop add sub test mov leave xor (bad) cwtl pop inc push lods mov lods adc fist lahf mov (bad) in cmp adc mov ret pop adc ja fsubrs stos sbb mov pop cwtl xor sti sahf and adc inc sub pop aaa mov popf scas xor jg in rolb popa dec or mov fs jl fwait and fadds mov inc jge pop mov loop scas jecxz mov xlat add shl cwtl and dec xchg xchg add ret mov pop dec inc test jmp jns loope mov lea pop xor or pop lods push mov sub adc cltd lods out add mov dec cmp loop fwait pop sbb aas sbb into adc sub int3 xor (bad) xchg add mov fnstsw loope int3 add jle sub jg jl cmp push push inc xchg lock push adc mov lret sbb sbb stos std pop sub andb aas js jge add xchg adc hlt jmp mov dec mov mov adc xchg out enter pop cmp cwtl scas xor and stos and cmp or add das aas (bad) aad loopne clc test cmp out or xor popa adc add inc imul mov cmp nop nop or test push cs adc jnp fstps push inc push jg imul lds iret cmp pop xor in sbb fs add xchg je mov int mov mov jmp add add addr16 or in jmp rclb icebp addr16 and sub nop aam add mov jb xchg mov loope fnstcw jns push out and pop adc cmp cmc add jmp cmp scas iret mov sti mov lahf nop test mov xor pop shrb (bad) add in arpl stc dec xor and push cmp orl mov adc fs out stc cld sbb add (bad) cld pop scas (bad) sub add popf mov js xor aaa ret loop pop mov dec dec sbb jne push jo inc jl insb dec sbb or xlat divl pop sub mov pop cltd (bad) cmp cmp lret inc nop aam sbb bound call or xchg data16 cwtl out mov xchg or loop or lcall adc loop mov loopne negb scas add or lods sbb add int3 jmp pop sbb xchg sbb push mov xchg xchg cmp pop mov sbb or mov stc ja sbb cmp inc cmp mov inc sbb mov mov dec int3 adc jns bound sbb fdivrl jne add div daa stos adcb xchg push lock fild subl or cwtl sahf std movsb dec push (bad) fidiv and outsb cltd leave fldln2 or dec arpl sbb add and xchg inc cmp sub mov adc adc xchg and sbb push push sarb js std or rcrl inc subl adc test sub pop jne add pop mov stos adc add xchg add dec dec inc fildll push outsb lock (bad) or adc cmp rolb call xchg das or adc jle cld add rclb xor add add xor stos loope cmp sub gs or jno and jbe pusha cltd inc cs inc enter hlt test jo dec roll jnp (bad) jle mov push mov and push sbb add or push add jns push mov enter pop sub dec jp orb push mov call (bad) lock mov push cmp or and rclb and or lock (bad) sub pusha dec sub out mov loope and test movsb add clc cmpsb pop fs jnp cmp mov mov mov (bad) fimull dec mov aam nop scas add jecxz lret ret jle data16 or (bad) pop adc mov mov out je nop data16 rorl jl aas xchg jge sbbb sub add inc mov movsb cwtl add pop mov lret mov inc mov popf mov je test gs daa add sbb aam dec sub mov stos or pop popa rcll lock das lock mov enter daa aad push and jecxz push xor insl sahf adc ljmp pusha scas xchg sbb dec pop pop fisttp ds dec js movsb xorl or test dec loope mov sbb mov jno xchg jne sub and mov sbb mov mov rcrb xor sbb mov xor aad mov mov sbbl mov or jle push fildl pop hlt adc cwtl or jmp add aaa mov jecxz xchg daa lods das sub dec cmp add dec enter mov fstps fdivrl push lds lcall adc movsl pop out pushf (bad) lcall in or js cltd and mov push xor stos mov fistpl inc rcl xchg test out ja aam scas adc push fsts inc xlat dec shrl cmpsl xorl outsb jb add xchg loopne in add hlt jge sub jl sbb test testl into jns add aam scas add dec inc nop pushf add popa movsl shrb bound adc jo dec push adc add pop inc ret (bad) leave dec ret push (bad) dec add (bad) mov add aam scas push dec rcr mov or mov orl inc cmpsl jl pushf aam or movsb sbb and pop outsl cmp adc inc (bad) cmpsl or dec adc push and mov nop cmpsb dec ljmp cwtl or sbb adc js rcrb cmp xchg xor int3 (bad) lret cmp cmp outsb sub les call fwait aam or test cmpsb xor inc push les adc sahf es cwtl or stos sbb cltd xchg xor pop fwait insl cld fdiv push rorl sbb xor in test fisttpll int3 adc ret mov sub or cwtl mov and je dec shll mov push mulb xor cmpl jo fimul adc pop sbb xchg push cmp mov pmulhuw je sbb push dec inc adc pop hlt hlt mov add adc or test xor add outsl push xchg xchg inc arpl orl and or xor leave cmp add push cmp xor add inc and add adc decl lods jns jp and jmp (bad) push out loop clc into mov mov sbb lds pop xchg js pop je (bad) out add inc and lods mov and int3 cmpsb (bad) sbb or out lock aaa pop std cwtl xor xor insl fisttp lret push adcb pop fistp add je loopne mov xor and fcmovnbe pop fnstenv lock cmp sub xor mov inc aam push and dec jle lock dec and xor mov and aad mov and adc or out xor lret xor out add int3 cmp xorb sbb je imul or (bad) sarl cld pop loop incb je sub cwtl add (bad) xor mov push adc xor test inc or into andl add (bad) out adc push mov add xchg lea push cmp or int3 or mov (bad) mov dec or jbe or mov cmp xchg jae ljmp dec xor aas int add jmp add ret sbb mov (bad) addr16 xor sub push xorb cmp mov popf add xor adc cmp xlat xchg or inc and cmpsl dec inc xor sub aaa dec or jl test outsl fldenv xor subb sbb or inc mov pop push inc sub adc xor fcoms add mov mov in push xchg aas stc pop adc add inc mov push sbb int dec xor fildl gs add sbbb xor add adc jp mov call jb leave in and je jl sbb ljmp sahf jb js adc mov jns (bad) inc cmp adc pusha insb push or (bad) enter xchg mov stos push inc adc pop adc add pop inc push cmp inc js xchg sub xor test pusha movsb rclb aam cmp cmp sbb nop pushf add xchg inc popf dec jge out arpl mov call or push and js nop fs sub in addl and (bad) xor (bad) and cld add add inc shr mov add or mov int dec cmp in sbb jmp inc dec lea jae add xchg test fsubs mov xor xchg imul dec movsb aam sbbl stc xor push sahf decb add push add sbb add fnop mov pcmpeqd push inc mov sbb arpl push addb adc stos aam xor xchg or pop out add jl das decb sbb push repnz scas sub push lock cmp cmc xchg sbb mov or or add test mov imul or push mov jo push mov shll fnstenv mov add fidivrl jg fdivrl inc pop out xor aad mov stc popf mov or add pop sarl or and pop setbe testl fwait mov popf movsb ds xchg adc add add add inc sbb add push pop jne add jns pusha or mov mov push sbb enter stos lock and push jo mov jb imul ret sub pop ss repz leave rcrb push outsl cmpsl push push mov cmp xor pop imul adc cld and pop stos out sub add xchg lock lahf nop sti inc push shrb jge and and push pop outsl test pop sub fwait repnz or add mov aas imul sub mov (bad) push (bad) push frstor hlt add mov ret cmpsl add xchg mov pop pop add out xor mov mov sbb in repnz loope lcall mov lret sbb adc add lahf add loopne pop and dec xchg (bad) aas xor mov outsb jg enter xor js xor aam cmp fistpl aas imul push cmp or inc xor stos cmpsl pop daa add lahf mov fcmovu mov call xchg popa aaa inc mov dec mov movsb dec inc addr16 and imul (bad) (bad) cmp jo add pop out sbb add jne cmp mov inc and mov popf add dec loope sarb or xchg add outsb insb cmp mov call inc movsl insb dec xor add pop xor jmp jp jnp ds hlt xchg xor out or mov push mov jp je jecxz and and shl shrb mov pop and inc xor and pop jle add cmpl add pop das dec mov jb add and shld popf cmp imul dec loope add int pop sub in and adc fcoms sub and loopne xchg or scas and icebp cmpb mov or std push jae mov inc dec popa inc dec fmuls xor add lret cmp push std add or xchg lock cmp and xchg push inc pop push jno adcb xorl iret push xor orb xor mov xchg je add mov sbb xor sarl cmp mov xchg mov and cmp xchg loopne sahf and fbld (bad) nop mov pop mov cs sub cmp and add stos jne cmp stos scas pop and aam jmp in adc cwtl je pop outsb outsl dec pushf inc leave dec pop adc xor not add addr16 stos ss push jb sub ds notb xor sub mov add sbb insb test negb or hlt and clc mov mov inc imul dec andl clc add imul cmp and push xchg clc xchg or jae pop cmc test nop cmp lahf inc and in mov out jns call sbbb fwait dec sbb cmp add add out mov mov loope mov adc adc add sub add inc (bad) sbb and scas inc dec dec nop sbb (bad) cli cmp out movsb or pop or dec mov lock adc ds (bad) or dec and mov jmp dec cmp popa icebp fcomps cmp stc mov cmc fistl inc nop adc add push sti das or movb xchg nop xchg daa popa add and sub stos or sub or es mov dec fwait jo adc push test or out cmp lcall add jne push cmpsl into popf and or cmp (bad) mov out (bad) (bad) jne pop adc pusha dec push xchg xchg mov push cmp and cmpb adc in cmc mov fimull and cmp adc inc adc js daa out and pusha add dec xor add push mov outsb push push ja jg inc jno in and mov sub or daa adc imul mov cwtl dec insl mov loopne (bad) divl rolb xchg cwtl push inc outsb add pop mov xor mov adc scas or cld xor push fwait sbb or jo or enter lods clc repz push jo,pt je and push jecxz stos test or adc mov mov push std push and cmc xchg js and xchg push das je add in cwtl fcoms mov or inc roll mov pusha clc in stos cmp dec cs add jae jo mov adc push push mov adc sub inc and xchg jae or das daa adc movsb mov jl add sarb push lea fwait add stc idivl jb or mov dec addb ljmp and imul mov mov and inc iret xor xor je or into dec sahf mov rorl cmp subl aaa out cwtl inc sub mov mov sahf or add xor icebp push mov cmp mov cmp jbe dec dec lahf push hlt and push push loopne movsb iret mov xorl mov dec mov pop mov dec movsl or or cs inc lods and das add hlt jns and push dec add loopne jno sbb aaa lods push and push cmp clc int3 and jne inc sbb dec sub xchg lea dec (bad) dec cmp nop and cmp fwait inc sub test sbb mov cmp push popa inc mov bound and addl lcall xchg arpl call movsl mov dec cmp pop in dec arpl dec or xchg (bad) out or inc call push ds out sub mov shll adc add mov pusha cmp sti cmp jbe and mov pop imul je cmpsl dec xor dec jno mov addr16 jecxz xor mov add xor sbb xchg mov ret cmpsl push adc sbb lods les divl lea add xor in out push adc or add mov (bad) loopne push pop test cli sbb add lahf inc enter xlat roll mov cmp fdiv loopne lock push rorb xchg mov mov call test insl adc mov std dec add jnp mov test cmp cmp push mov repz add xchg cmp cmpsl or or add jl rclb dec xchg add adc mov ficoml mov pop cli or sbbl imul fsts mov shll nop add xchg (bad) lret sub dec les and inc outsb std xchg out xchg cmp ret jecxz dec (bad) mov adc or mov dec or nop xchg stos hlt sub add outsl ret nop add sub add xchg fwait push fbld repnz add mov sub aam int3 or sbb xchg gs push or add jno (bad) ss scas cmp inc mov dec mov adcl or test add nop cmp arpl or stos addl je clc xorb push fadds outsl repz pop popa inc pushf mov add mov call out das lcall bound and std ja dec inc add lods add lret xchg or lcall pop cmp xor or mov or pop lret xor test jo dec add pop lcall iret push scas add add repz dec aad add mov push jns mov inc leave jo pop orb jle mov lods test aam mov xor or call sbb ss pop in pop push adc daa lcall stos sub gs aam jmp xchg aam dec add sub adc int3 leave rolb call leave mov rorb adc add mov jle or adc (bad) sub and or push pop or pop popl cwtl nop xchg insl imulb les (bad) jne addr16 shlb nop mov lahf xchg (bad) movsb enter mov sarl pop shr cli in add or les add push dec xor ret test rcll sub stos inc dec and sti rolb test int push lock es out add insl lds cmp dec mov add inc pop mov shlb push sub mov dec adc mov add xor push pop (bad) out push outsl inc lahf dec push mov pushf les or push addb adc rclb and xchg nop jle call shr adc das mov inc dec push fwait sahf mov stos pop (bad) (bad) jb sarl test jmp add push rcrl hlt mov clc jnp add das cwtl std cmpsl jl mov inc push hlt push sub inc inc and push dec xchg es mov test xchg or add pushf clc sub mov movsl test and addr16 inc dec mov sbb ds stos imul repnz and cmp mov adc pop add ja mov mov add jg jno sahf fsubrs mov dec cmpsb mov (bad) cmp add pop xchg mov ds xchg add or lock out pop cmpl add push mov dec add adc andl inc inc add xchg in sbb and addb mov pop or les movsl or lahf xor add pop and inc scas mov ja das repnz cmp inc cmpb ss adc cld xchg sbb cmp jp xlat xchg ss cmp rolb dec lcall pushf add stc stos mov (bad) jno mov jo add lock cmp add mov jp adc mov in inc or loopne aas adc mov jge mov (bad) jle (bad) mov leave and scas add sahf and clc mov loopne or add xchg fldenv out dec add outsb or cmp xchg dec mov sbb inc push js andb mov sar lahf cwtl sub pushf sub cmp or xor adc pusha cltd jno mov ss or mov arpl pop lcall sbb mov mov imul pop push jbe fcmovbe mov cmp push enter sub mulb sbb dec outsl add adc (bad) cmc (bad) call mov adc add mov dec jno jmp in sbb (bad) in ds insb mov enter outsl sub scas adc pop pusha dec pop lods aam pushw mov xor sub add xchg (bad) scas ret add xorb dec aas add insb jmp shrb (bad) cmp iret fwait test and outsb pop mov and inc jns xchg dec pusha and fsubrl test das add mulb inc stos adc ss and fs dec xor adc inc jl or scas div sbb mov sar pushf notl add cmp fsubrs int3 pop add jg dec push out sbb sbb (bad) mov scas jmp jo (bad) mov mov dec jns stos lock add xor mov adc enter jno xorl push sar xchg je jl sbbl nop iret and cmp xor hlt test mov inc cmp inc movsb jge mov fdivr addl inc adc pop push dec iret jnp sub xchg movsb out (bad) jbe test icebp and add ret xchg inc gs popf cmp int3 subl mov xchg nop lods into mov add ds add pop mov scas dec das js loop jle test jmp add add or mov inc nop sbb inc mov adc mov out push jo inc sub es dec pusha orl cmp sti add sub aas add xchg dec push cli mov adc adc inc add adc dec pop ja pop add cmp jo mov pop addl test xor jno cli das add cmp bound mov nop mov outsb and push je mov (bad) int3 add icebp pop add mov (bad) out sbb dec adc xor ja clc pop (bad) scas pop jmp or xlat aaa inc and clc js push imul pop jb andb or add jbe cmp int3 xchg pop dec rcrb add inc inc and xchg popa mov shrb jno out sbb push sbb jno (bad) fnstsw mov jp or incl add (bad) jno mov adc sbb fcmovne sbb dec scas sbb or mov cwtl and dec out and (bad) or and sbb cmp push add jecxz xor xchg push dec fmuls lea dec lahf mov adc out inc daa mov pop cwtl add pop or fisttpll and and xchg xchg add cltd and lods lds popf mov sti rcr adc or cmc std add dec jmp je hlt mov sub add inc scas daa ja add (bad) fisubr movsb and in add xchg add sub shrb sub orb cld mov mov mov daa out pusha add rcl xchg into addb mov fdivrs add inc dec popa fsubr sub cmp push xor xor stc inc sub cwtl shrb sbb fs and sahf or sub jae push nop add (bad) and mov mov lahf jge mov movsl shrb mov mov and stos push test lahf pop out clc jg or inc jno xlat leave and cmpsl hlt arpl out in mov nop adc jns rep sub pop daa xor pop inc mov dec insl das add lea push popa add cmpsb xchg add and lock dec nop shll push insb cmpsl xchg add add daa inc jl je mov xor adc and adc mov cs ret pop in or outsl ss push nop and push mov mov in cmp and ljmp xchg fild loop subl sbb adc out or pop jo cmp and outsl loopne into in out sbb dec je sbb rol add mov hlt jp add mov dec test mov fs cmp jb outsb lea inc push sbb mov cmc mov and push lret lea adc in jp xor mov pop repz cmp xor mov cld aaa xor xor sbb mov xchg stc scas or jo int3 sub xor or mov mov pusha and or push add or lahf dec (bad) mov test sbb and cmove lock pushf xlat loope in cmp repnz add mov fist shlb inc cmpsb mov cmp imul or sarb inc add cld test and jecxz call lret cld test mov adc repz mov or test lock lock mov shl cld loopne add inc jle pop rorl or pop cmpsl sub add push mov loope add inc adc sbb pop cmpb cmpsb hlt sub xor mov imul popa pop add inc rcll dec rclb daa cmp adc lock stc adc adc mov (bad) mov pop or jo xor and mov sub nop inc inc sbb sahf sub test mov sti int3 lds aas and jns sbb and scas sbb mov and xchg inc pushf cmp sub jb xor cmp cmp orl mov and mov push lods cltd hlt mov aad outsl and rcrl xchg (bad) push push and inc rcrb add jle or mov jl dec sub enter pop aam sub hlt adc nop ljmp popa add dec jne rcrb je dec mov xchg cmpb das stos lcall mov pop sub outsb popa add mov iret sub shrb arpl cmp adc sahf or push add or mov fisttpll addr16 push sbb or movsb rolb in cmpsb sti scas mov sahf cwtl ja icebp lods aaa ljmp xor sub and mov fsub push mov push fwait mov inc pop push out notl decb cmp in xor nop out mov xor and or inc sbb (bad) outsb xchg mov cld pop mov shrb mov popa addb lcall and sub pop addl loop cwtl add fsqrt out dec mov or cmp cmp adc sub fisubr (bad) add add pop mov dec sti adc jae add (bad) pop sbb sbb sbb inc mov inc aam test pause mov stos pusha add outsb xchg lret xchg in or (bad) xchg nop sub out inc mov out pop inc ret dec insl shr sub xchg add sbb sbb subb repnz inc test xor das scas push add jno mov bound pop repz mov sub xor mov stc and popa add lcall add imul add fwait or xchg cmc mov xor sub mov dec mov xor push fdivrl (bad) xor aad xor inc movsl mov loopne imul imul push into repz imul lea and cmp iret call add fwait pusha cmp cmc lock xor cmp sub test cmpsb xchg and (bad) clc ret daa test mov cmp cld mov aaa cmp mov lock push rcll out adc enter iret jb mov dec xchg rolb mov addr16 movl cmp ret push out or jno imul es and mov sub popa push mov add add rolb std mov and into pusha adc pop in mov fwait bound dec imul cmp mov cmp fstps xchg jp pop out rclb xor cmp mov mov mov call into loope adcl fadds loopne sbb outsb add imul mov lods add jmp push ret cld pop push adc ss and loope push lret popf roll fwait xor ja push xor push stc dec mov adc cmp add shrl adc and xchg (bad) loop add in nop sarl push movsb cmp inc xchg fstpl add das cmp cmp xchg mov mov ds and test test pop cmp adc enter and xor and jl fwait into and add mov add mov xor mov sbb adc adc xchg or pusha inc fiaddl dec aad cmp inc andb fsub dec jns call mov pop mull sbb fistl iret enter pop mov sbb push and mov mov or fildll or lods div rorb xor sti test or sbb push test insb nop jl mov gs add scas adc mov lock (bad) ja pop cmpb add fstpl push jo jno push js xchg sub (bad) mov jbe fnop jp call bswap mov out fs and and pop mov into sub test test mov mov push je or jg push xchg icebp leave and leave xor xor inc das inc sub cmpl cmp pusha jno cmc outsl pop bswap jg sbb push and push xorl add mov loopne (bad) sbb rorb push and bound inc lds mov mov mov xchg cmp xor push cmp sbb sbbb or hlt lcall rcrb add sarb in xchg push imulb out (bad) addl pushf dec mov cltd add mov and inc sbb hlt sbb stos or rol out pop enter mov xchg push xchg and xor or sub inc loopne int3 add rorb pop imul cmpsb push sub jl xchg andl and add iret dec test out out add xchg cmp loopne mov repnz aam xchg lock xor add mov int3 cmp sub add movsb dec sbb adc and add mov inc add scas add movb cmpsb ljmp out and add insb and lcall insl add add or or mov (bad) inc xchg (bad) jbe data16 mov aas sub lret jge enter mov mov mov lds outsl mov add (bad) add fstps jae xor nop lea mov pop movsb mov in sbb push cmp mov xchg aad add shll sub ds jo pusha or xchg hlt orb jle adc lock divl adc mov add mov loop les xor dec pop mov or sbb cmpsb lock je jg xchg pusha add in add add inc out (bad) dec lret pop mov or mov movsb xor lods pusha xchg cmpsl sti data16 pop sbb adc lods pop jae fdivr rcl mov add not enter inc adc test add cmp add mov in push jg push pop cli push or cld and mov xchg mov adc or add outsb mov pop cld inc jecxz cli imul mov dec dec movsb and cwtl cld xor movsl pop (bad) sub jbe sub jo xchg add push icebp in push inc dec lods add cmp pop jbe stos (bad) sbb xor das mov xor subb mov dec ss sub and mov loopne icebp ret loopne scas lret adc jecxz in pop loopne cmp add jmp dec mov das idivb int3 cmp cwtl xchg or cltd in pop cmp pop mov pop ljmp xchg xchg add nop mov add mov (bad) lods nop insb popa inc xor cli dec mov mov dec sub xor and add shrb mov lea div dec scas xlat ds hlt es and test push adc lret mov mov push push loopne add jle add cld fwait sahf xor push mov ss (bad) lock mov nop dec sbb les (bad) push loop je loopne,pn sbb lahf (bad) jp add cmp mov cmpsl dec fwait mov xchg je or int3 or das push jne pusha mov lds push mov add mov add add mov arpl sub adc sbb test lea pusha xor aas jb lds cmc pop and sub sbb in xor fwait sub and shrl sub rcll fs ja mov cmp push and dec push sub (bad) mov dec add or sub hlt add pop cmp lret imull inc pop pop xor lds daa xchg loop test inc sub incb cmp pop dec add stos movsb sarl mov inc test insl xor or clc das movsl or out xchg push bound das (bad) adc leave add inc cmp xor sub js in add sbb es rolb mov add in xchg add out mov mov add cmp in ret test fcompl rclb pusha lock je inc mov or sub stos fadds incl repnz mov cs sub inc xlat push mov (bad) nop mov or hlt stos add es cmp incb rcrb dec xchg mov add lods shrl flds xor sbb add cmpsl pop xchg cld add (bad) les xor cmp in jle ds pop mov es pusha mov call test mov je cmp repz jbe cmp add mov cmpsb mull pop fcomi (bad) push fidivrl les (bad) (bad) jl push or jmp insl rolb xor idiv std sbb push shl add sbb stos daa jb aam (bad) negl mov ds pop push or test add clc mov inc mov jnp mov pop in loop add add cmp cmp push orb sti xchg mov nop pop rolb fisubrl ret cmp dec mov ds imul aam inc lretw leave inc out add fiaddl mov scas and pop ret and in dec cmp mov test mov mov ja ret and cli scas and push ss js add lahf (bad) sbb es sbb add fwait sub ljmp (bad) cmc jg sti enter or outsl mov (bad) mov lcall pop lret out sbb sub je test xchg inc sbb push and pop call ss out add cmp or jmp in push sub cmp fwait rorb mov clc and in pop mov rcrl call or push addb cwtl in bswap sti adc fabs inc jl add mov or add in add repz and les dec aam cli jno mov inc pusha and aaa push (bad) mov add lahf jg mov hlt xor pop nop sbb stc mov cltd movsb and push stos icebp pop or adc jg push xor add jns (bad) mov call lods add mov xchg pop inc mov popa ret mov push cwtl sbb mov mov out lret data16 stos dec les and pop mov les loope cli add and mov movsb add scas xor fdivrl inc pop hlt and cltd or cmp mov cmp outsb push pop jmp sahf or mov mov sub repz xchg faddl jp cmp fmull dec jno add loop aam cs xor and lcall xor adc dec adc sub adc je add cmpsb pushf outsl xchg loopne cmpsl lods and inc movsb adc push clc jnp mov add xor cmp pop jmp daa jge loop mov addb rcll sbbl les scas leave (bad) decb movsb dec dec mov cwtl sar insl add loopne outsl or add nop adcl data16 push xor pop jl stc cwtl jo es jg or dec in dec pop clc and in cmp dec push xchg adc add mov mov xor (bad) nop push (bad) inc mov adc lock adc fdivl add (bad) aaa sbb mov or lret xor sub cmp add adc (bad) xor aam enter or adc pop enter lock inc xchg cmp lahf inc adc hlt pop dec mov mov push add xchg stc inc add mov push jp adc push adc cmpsb mov ja fcmovbe (bad) jmp jg add or xchg mov or iret popa sbb (bad) pop lea lods push lock sub inc and push mov jge pop loopne notb pusha pop push loopne jb add sub loop mov stos cli add fwait jno lcall (bad) hlt mov (bad) dec rcll and nop mov sbb clc bound xor mov in je sub test mul enter mov fisubl (bad) cmp and mov cmp and sbb pop adc cmp adc cmp push fsubrs add xlat add sbbb add sub mov jo add imul daa dec cmpsl inc faddl and (bad) faddl mov aas (bad) xchg add push adc add lcall sbb jb or sub rclb xchg and sub dec or js inc inc dec xor inc pop mov xor xlat sbb sub push xorl add (bad) inc iret sti push mov repnz cmp imul sub push (bad) dec jl punpcklbw xchg sti mov test xor mov sub jecxz sbb mov fcmove fnsave imul out inc or adc fs add inc jno test sub pop inc dec pusha pop mov (bad) into jl xchg sub arpl popa cwtl test and dec lods in mov decl add out xlat jp nop cmp add or pushf sarb in mov xor sbb outsb xlat add (bad) clc hlt cli sbb jb repz and mov sub mov arpl xchg addl jp fcompl mov lock cmp insl (bad) aam push mov cmc mov call les fucomp aas leave dec fldl2t and xchg add in mov (bad) in jns pop sub push stos or out xchg hlt push sbb or sub mov mov int3 testb add add lcall es loopne sub mov or or aam and and (bad) rcrb dec lahf lret jno into (bad) icebp (bad) and inc sbb cmp pop testb aaa inc adc ss add mov fnstcw clc sbb inc arpl jp lods and test mov mov pop and push pop aam cli and mov in imul mov adc jge push adcl mov add outsb test cwtl adc or (bad) push jno add fs or call in mov cmp xchg push push ret xchg loopne in add cltd xor xchg test add enter loopne mov fsubl push adc add (bad) bound in sub nop xor out add dec or mov cmp inc scas inc push or fistl and hlt xchg inc push fsub add jmp cmpsb push xchg and pop movsb in xchg cmp push loop imul inc addr16 inc js (bad) fcoms mov pop mov cltd dec jge ret dec int js inc clc lcall jmp pop loop stos inc push cli or adc ret imul sbb pusha aad clc sbb repz cmp mov and mov imul stc sub dec mov inc add stos test xchg in mov sub cmp lret xor xchg mov and (bad) pushl (bad) jne add rclb and sarl and aad movsl mov mov mov jp daa cmp dec inc pushf add inc loope xor add (bad) mov add repnz mov fs pop mov dec xchg add insb mov popf scas call inc aas mov jns mov inc or cmp inc daa pop mov mov pushf cmp mov mov xlat or push sub pop adc push xchg adc ja pop mov cmp sarl jne add sub and addr16 lods push test push add fcoml in adc jmp cld and fcoms dec add sub out das push rolb dec add mov imul fcom pop je lcall test sub or shr pmaddwd cmp subl in add movsl sub movsb inc das add pop add mov pop fwait or out cmp test xor sub lods pop jb cwtl jp andl (bad) fcoml jmp int3 pop xor pusha xchg fs jle xchg push adc outsb pop inc xchg inc lock (bad) int3 pop (bad) lds lods rolb lock add xchg sub mov lods xor inc je lret mov test loopne jge add adc movsl mov cmp adc rorl test sub jmp fwait (bad) push pop cmp mov movsb cmpl fsubrs es aam pop cwtl xor xchg inc ljmp outsl or es and insb pop pop out xorb iret lods inc add lds cmp pushf dec sub add repz adc add mov mov and xchg clc mov inc nop add push xor sub lea jg add mov ljmp ficoml out add jg orl mov mov clc rol jp xchg addr16 push ljmp push add mov inc dec lea push jo icebp xchg sub movnti mov in insl or je cwtl xchg mov bound stc add mov pop dec popf inc mov xchg ret int3 into add outsb pop add lods adc dec stos adc mov sub ret pop sub out or (bad) ljmp repz jmp scas mov or mov fcoml pop add pop jl test lret subb and lods and (bad) bound (bad) (bad) clc sbbl inc adc lea mov daa xchg cmp lock push inc inc push ret push mov sub xchg js call in hlt dec ror ret add add fs mov (bad) xor in (bad) jp add push nop push adc movswl jae xchg lods fs add push data16 or mov enter add mov jno popa rclb sub inc push bound cwtl dec or clc andb add mov les dec adc mov adc mov mov xlat jo push pop shlb repz mov cmp mov jo loopne in fs jns add aaa mov ret cwtl call ret and pop mov xchg movsl dec les pop test sub add inc and adc sti or sbbl bound and lcall add addl sti clc push orl sbb add cmp mov cmp mov xchg (bad) shll rorb ljmp sbb sub inc mov mov and and fildll add add in inc retw sbb sub or sub jp sti fs cmpsl adc xchg lock jl popf int3 nop or test add test mov add or jge icebp xchg xorl jae mov mov mov inc ds and adc add test fadd dec out cmp add cli push and sbb cmp test xorb pop nop push dec pop loop add jle (bad) and fnop or popf sbb sarb cmp mov adcb aaa lds push jns cmp and into mov adc xchg addl mov and sahf dec jo jl enter xchg daa (bad) mov icebp pusha dec cmpsl mov into add xor sub cmpsb dec dec mov xchg inc inc roll mov sbb pop sbb inc add arpl insl scas lret inc movsb sub rolb xchg mov lds sbb add aad mov jbe pop mov test pop push and cmpsl mov jl add popf dec ja inc ss adc mov inc enter jecxz mov cmp adc xchg sub jnp cli ret pop pusha int3 leave add out adc cld call mov xchg or mov adc mov cmp cmp fs push das daa rorl mov hlt or sbb cmp xchg addl mov xchg mov fstpt fadds push xor push stc push cltd lods pop sub dec xchg nop ss pushf loop ret mov add lret outsl add and jmp call xor mov xor cmc out mov xchg add jno adc iret cmp add adc pushf cmp add scas and idiv call and in loopne adc and call (bad) push icebp push cmpsb (bad) jle inc xor sar cld mov adc (bad) ljmp iret sub nop les xor push xchg xchg pop test push loopne movsb mov push inc add mov inc jecxz mov icebp mov cli dec insl add shlb (bad) movsb mov lock cli dec ljmp jne add popl shrl lcall adc faddl sub xor insb lods loope popa popa mov mov pusha fs inc mov repnz lock pop (bad) mov std repnz xchg xchg pop jns jp repz lea lret (bad) fs add bound pop fwait test and mov add addr16 frndint test mov sbb movsb aad pop sbb mov mov xor mov mov ffreep push jmp push jo mov pop push inc data16 enter jns clc pusha stc add or js dec test push (bad) shlb add icebp test sbb inc les stc imul in push rcl (bad) fdivrl add loopne (bad) dec mov xchg mov pusha repz lmsw or aam fsubr xor fldenv lods or cwtl jno (bad) shlb out push xor sub add push and hlt xor int3 sub sbb mov leave sub nop inc pop lcall jp pusha into loop out add test icebp push popf div adc push adc inc mov add pop (bad) xor sbb adc xchg cmp gs in sub jne pop lods fs aam cltd mov pop add mov les adc or and jl add and call sub or jg andb cwtl icebp lods mov push pop (bad) pop lahf add adc mov shrb xchg stos pop idiv push int3 movsb ljmp andb outsb subl mov imul dec je xor enter sub jg mov sub out inc pop adc repz or fwait movsb clc mov pushf movsb ja orb pushf adc adc adcb pop js xchg xlat cli add sbb (bad) pop jne adc add (bad) loopne lahf cmp sbb fimul add mov add jns cmp mov dec mov cmp fadds insb and inc xor jl inc push cmp cwtl mov enter shlb subb and or cmc cld lods mov (bad) jo xchg and imul imul int3 add sub jge or stos popl xchg scas lock jp or and mov adc addr16 or je jno add mull dec dec fnstenv pushl sub sarb into add out mov push inc add adcl add ret into pop fadds (bad) lcall mov test dec mul enter mov je pop adc movsl insb mov popf cwtl mov in xlat insb fdivrs subl jg sub push add or movsl sbb mov sub push repz bswap sbbb sub mov adc out mov insl add jb ret and cwtl or add xchg movsl mov mov outsl add mov pop orl push xchg jb or mov sbb sbb pop jle jmp movsb and lock call xchg sahf pop shlb decl add adc jb ret pop xchg imul xchg (bad) mov mov scas jp,pn jle add push inc popa pop pop into sub lret dec lds pop repz lcall int3 push outsb nop loopne and xchg ret xchg or nop add mov pop jl popa add aam test clc fdivrl movlps cmc pop add add outsb or mov icebp lahf repnz sbb mov adc xor or stos scas in cmp icebp xchg xchg cmpsb sbb add push push ret sub ds inc mov subl inc xchg sbbb and inc pop adc mov lods andl nop xchg daa test and insl clc and mov cmp mov and jp cmp mov and xchg xchg lock cli xor cwtl ret cmpb cmp push push mov call cmp dec pop mov or push xchg fiadd subb xchg and xchg lahf xor gs in cmpb lock lock or adcl stc adc andl dec push hlt movsb mov fldenv xchg push sbb xor inc out cmovo jg add nop jl cmc inc sub add add inc insb or int inc add (bad) xor rcll sub push ss test push or test push outsb inc mov and in test or sbb repz das jbe add inc aad jo cwtl and lods pop pop pop es add popf orb sub shrb test or xchg sbb pusha add jp sti add add adc add fs cmpsb inc xor aas mov xchg jo adc or inc add rcrl push cltd andb mov xchg mov adcb pop inc test and test roll scas jae mov int3 xor pop add ret cmpl loopne sti and push nop sbb rclb add in cmp lods mov dec cmp (bad) js sbb pusha outsb enter jp mov test jno or data16 movsb dec (bad) sub (bad) test test aam out pop inc (bad) icebp popf arpl dec js add call xchg ja xlat out faddl dec test cli mov cmp dec loop loop xchg stc aas cmpsb xor mov xor sbb xchg sub adc decl bound (bad) or imul dec in sahf inc popa sbb leave xor (bad) imul or xor sub shr stos jo mov outsl ret jo daa imul add jmp outsl add push ret (bad) adc adc push push popa stos mov mov add cmp lds cmp sbb cmp les paddusb repnz dec or out movsb mov (bad) mov clc sbb loop jg addb dec jmp push cwtl adc aam popa insb xchg test (bad) icebp lret xor repz cmpb sbb push lock add sub inc mov out and mov clc fstpl lock or mov scas jmp sub out mov (bad) repnz in aas mov push les inc add push sub call outsl (bad) xor adc int mov inc add mov cmpl adc adc and es mov cwtl sbb fdivl incb pop aad mov call pop push mov or xchg (bad) insl mov mov inc mov add pusha (bad) jno pop aam dec lret push sahf xor cmp dec std add lret cwtl and mov mov mull jns fwait jno (bad) std mov in xchg call pop mov js dec data16 and lods into outsl (bad) inc sahf adc and fs push or add les stc lock test addl out pop (bad) (bad) sub xor in test xchg fstps and cmpsl mov sbb pop add leave push sbb sahf mov and ret pop jns xchg (bad) repz jle rcrl (bad) lret jo test pushf iret jo add fisttpl inc mov enter dec lock pop cmp mov add pop subl adc jo roll pop push cmpsl xchg les sub adcl subl dec int3 push add add add aad je add add jno pop inc negl imul dec (bad) (bad) lea mov out sbb out inc or repnz push idivl xchg sub adc inc les pop inc inc mov ret dec bound xor addl add test inc aas ja adc lahf data16 xor inc add lods inc or data16 (bad) mov int adc mov pusha xchg push (bad) jo mov lret push jne pop mov ss loope sub cwtl aas add cmp mov out insb or adc add mov and pushf push js fbld xchg (bad) imul sbb fisubrl lea jo jp add popf repz rcrb sbb outsb add enter fdivs test xchg jge flds orl jmp (bad) enter lock jle aam jo xchg pushf repz add mov test mov arpl adc lock or xchg add ds push jo add jnp and mov inc cli and push add shl xchg pusha sbb jecxz mov cmpb les addb aam addb mov adc inc adcb inc fs mov cltd fcmovnb (bad) in aaa push pusha push push push jl add hlt nop inc sub std push dec xchg inc push shl mov xor pop or mov jb dec mov sub push and paddusb ds movsb jnp test jae (bad) mov dec into cmp adc (bad) mov push lock lock clc repz inc adc jecxz loopne cld gs clc add sbb xor jmp adc outsb mov lods js dec push xor mov jbe sbb push outsb cmpb push icebp lock adc arpl xchg mov orl xor xchg subb and or or cwtl push xchg cmpsb mov adc (bad) lock flds mov repnz popa mov lock lret orl rorl insl sahf scas rcr nop mov adc xchg dec test cmpsb or mov dec les test cli into ds sub jns nop out sbb bound loop subl add clc mov mov xchg add push sub sub push mov pop pop rorb sub or stos sbb dec test ss or jle push fwait xlat jmp jl or jge mov pusha insl nop out (bad) adc sub or jmp lahf xchg xor pusha push mov out nop imul add inc call scas movsb lcall into jecxz (bad) jnp in lock xor cmp mov xlat cmp clc insb push pop mov add (bad) ror inc mov push loopne pop inc pop mov push lods cltd add inc dec arpl sub in rorl clc pop xchg inc xor rol lret push fxch mov lock (bad) xor rolb jnp inc aam mov leave (bad) push pop mulb int rclb popa lock xor mov call push lea dec andb nop push xor sbb (bad) lret jae push adc adc loope cmpl pop aam leave add sub sub mov xchg cmp fsts shrb (bad) daa sbb add lock popa xor popa cmp sbb insl pusha mov les (bad) rcll aad mov and jmp imul push pop popa sti sbb mov xor or cld or xchg or or and xor dec insl into and add add shrb (bad) (bad) jl popa incl js in jae mov int3 mov fdivs inc (bad) out pop cmc mov sub insl aaa jnp sbb adc jle inc incl test or cmp xchg imul dec sbb mov je lret xor sub and jp xor rclb mov hlt (bad) (bad) jo mov sub jo xor mov rorl mov lods add adc outsl mov testl stos mov roll sbb dec jb inc jg pop mov ret inc inc shll sbb ss push pop xor add daa mov push test scas xchg inc mov lods fdivs adc dec repnz popf add or roll add dec xchg rcrb sub out mov mov xor es mov pop pop add pop sub jge dec loope sbbl test cli in je mov cmp sbb clc push inc mov sub jmp add jb or ljmp iret xor lds push rolb testl and insb adc pop dec popf aas (bad) lock sub bound rcrl cwtl cmp mov (bad) jne xlat icebp or sbb movsb dec or sub inc dec push cld xorb clc mov pop sub xchg out add ljmp sub ds sbb aam ret sub mov push jle,pn les and addb aaa dec fsubl pusha mov xor in loop or call fist insb fisttpl sub and push mov or fstl and lock loop leave cmp sar push mov and xchg (bad) icebp test add insb xor movsb push xchg popf shlb dec ljmp adc xchg mov pusha pusha inc cltd sbb lods sbb jo mov and cltd xchg jge in add cmpsl stos outsl gs popf or cmp or jle add lds sub or pushf cmp clc mov cwtl (bad) jno out add movsl pushf jns imul mov push and addr16 rolb out dec movsb xorb imul sub pusha adc idivb xor push hlt pop sub push clc jg rolb or test cmp inc mov shlb add pop mov sahf shr push jbe add bound mov jecxz mov inc xor push jb mov (bad) cli sub add cmpsl push stc fs std loop and test xor dec add mov scas mov xchg jns pusha ret pop in xor cwtl xchg add loopne sub test add sbb sbb das inc aam outsb add cs out dec rcr push sub fnstcw push xchg icebp stos and andl or mov js or (bad) cli push fcoml cmp push xchg adc mov ror sub or pusha lods icebp es and push xchg (bad) pop push mov fdivrl push jne stos ret dec dec xor cmp (bad) lock add pushf mov add cmpsb addl rcr sbb or adc and mov mov sti or pop idivb lods mov jnp or cmp sub adc enter push cld sbb pusha inc enter out add imul jle test mov push lds pop leave xchg sbb loop push inc xor or push ds lock out fcompl xchg dec mov nop test pop sub iret les add (bad) mov mov and dec inc add stc and fidivr js mov cmc das inc and jl jnp lret or and clc fs loop rcrl jge fmuls hlt add sub pop popf mov dec add jns mov subb stos out rcrb push mull add or frstor int and add inc cmpsl std into jno sbb sbb push adc (bad) std or clc inc inc inc into sti add aaa enter push loopne add add and (bad) les and xor mov add push inc mov out in out dec push inc sub clc adc fidivrl mov mov add pusha ja adc mov sbbl adc out aad loopne fild pushf rolb lock subb jg pusha mov jns xchg jno push pusha and pop and xor cltd push sub clc xchg aad js sbbl mov and add cmp jb test push push cmp xchg dec sub call add jb inc nop adc and adc add or ror xor rcrl movsb mov clc bound adc mov add push push add dec cmp sub stos and inc mov add in cmpsb out jg mov aam test cltd and mov mov pop xor fwait add ret hlt lock mov add pop push inc test xchg sbb mov mov jo sub push js ret cmpl pop addb xchg sbb add sbb mov pusha dec inc or push jl and pop sub shl adc popf hlt xchg nop pop in sbb and icebp xchg pop shlb push test jnp push stc addr16 xlat or icebp lea add jecxz xchg cmp mov stos out adc mov dec xlat xor xchg fadds lds pop je sub cmp ficom push and sub in ss add jl sarb push cli lahf cmp push out sbb add sbb clc push mov imul pop cli (bad) sti fcoms mov cmp push mov mov (bad) out enter ljmp rclb xor add sub ljmp mov or rorb cmc or dec xchg xchg cmovg es add aam (bad) in pop jnp int3 bound jno lret test push adc xor sbb out pop imul pand jmp xchg fistp cmpsl pusha sbb ret mov add mov imul lea es mov dec js push aam and nop push (bad) loopne push insb xchg lret cmp cwtl nop add xor dec lds and add addl (bad) mov push outsb xor stos cmp in subl sbb fsubrl ds mov scas fs fs inc sahf mov mov pusha fisttpl sti pop aas outsl mov sub push lret sub xor or sbb jns enter sbb push xor shrb sbb mov mov shl cld mov push mov in mov aas sub push push xor push or inc and pop lret add sbb push xchg jmp movsl xchg aam arpl jb inc test mov cli or inc dec mov test lock sub loope and jbe stc add adc (bad) jmp mov and inc insb nop rcrb jo dec dec sub xchg popf jo sub cmpsb inc ret mov jp and scas lods inc das lcall inc ja shlb mov mov jg fistl cmp push movsb push adc or stos jmp cltd push fist hlt jo cmpsb add push into test sub loope add out xchg mov (bad) clc fisubl adc jge pop cmp (bad) or sbbl add add mov pusha push add popf icebp lock leave mov sbb mov inc add icebp movsb ljmp jg mov aam jnp aam mov sbb xor ret nop orb add fidivrl stos dec out test mov sbb jbe mov js (bad) add (bad) ror popa and in sub push icebp test jl je arpl inc dec cs add cwtl mov test add jg pop leave mov rclb imul or dec inc mov pop add or pushf push sbbl adc das rolb outsl push lock fcmovb pushf jg out lea inc xchg adc inc sti loop cwtl rorl test xlat mov xorb add pop (bad) mov add cli xchg fbstp data16 xchg adc pop mov imul add rorb (bad) jl cmpb mov inc cwtl mov cmp mov call mov aaa push inc (bad) das dec cwtl je mov jo loopne xor dec push and je add ljmp test ror cli jecxz mov sbbb jbe or xchg xor subb fwait out cs in and pop repnz jo mov stos (bad) sub push mov mov jge rorb aas bound movsb fadds sbb ljmp les dec pop mov fldl2t insl das call sub inc (bad) mov sub adc lahf adc shl les push ss push out and or fwait mov push jle lret call in ror xor in mov adc mov stos mov pop (bad) sub fdivr fldenv hlt or inc gs xor loopne pop out frstor adc stc or cmp push nop ja or pop stos push rolb cli mov lret dec sbb sub ljmp insb and mov dec or mov or or sbbl imul test pop mov or mov cs int3 je pop mov out or push mov xor or pop push fsubrs jo push adc xchg ret in fs or mov in inc add scas mov popf cwtl sbb add pusha sub out pushf jns xchg mov or mov push fsubs push mov (bad) sbb dec sub sub in pusha dec fsubs add arpl xor hlt and add push dec rcrb mov lods sbb and and mov or mov popa inc insl mov adc aam mov pushf push jno push and ljmp add cwtl sbb dec jnp mov int3 je movsb movsb mov scas js add mov mov pop jp pushf nop rolb and dec mov inc and adc jg lds lahf es xchg and mov add daa mov je mov insl loope xor pop andl pusha insb rorl aaa jecxz inc inc mov push xchg clc enter and pop imul xor jo inc insl xor push (bad) ja fs sbb or fisubr loopne arpl fnstenv jmp inc sub mov out aam fdivp mov dec repnz add std mov adc outsl and jnp mov fidivrl fmul arpl in mov dec add dec sti mov add ret add cs addl inc xchg jle add cmp out add push pop imul and sti add xchg inc inc fbld pop and mov or or je fnsave or adc leave push mov sti cltd mov jg dec push xchg or add sti mov daa mov adc sahf xor call icebp int3 fcoms jb cltd call sbb pop xor mov aaa cmp or in in sti push mov orl dec xchg into add andb adc stos dec (bad) movsb xchg lcall sbbb sub pop lds mov mov nop and cmp inc and or mov cmp cltd aam mov jmp sub icebp hlt push sbb mov jle push (bad) aaa cltd and aad imul sub and cmp dec jmp dec pop inc cmp xchg sar xor das mov and sbb ds mov jb dec cli push mov flds xor call bound dec jnp dec mov in or sub jmp and pop sbb add or add xor add and hlt jg dec divb dec jae inc inc mov sahf and fildll mov sbb int3 inc xchg movsb mov mov inc pop out sub addr16 cmp gs push imul add or cmc mov test xchg add push sbb inc (bad) xor fisubr loopne inc xor dec adc dec test fstl bound add adc push js inc mov jnp pusha mov or (bad) lods pop adc decl cmp push dec (bad) adc test loope inc xchg and or add test sbb flds pusha outsb jmp ja inc icebp inc add sub sub pop ss adc iret add scas mov push std jecxz je sbbb push dec cld inc cld cmp lods roll es pop xchg mov jae cmp les adc inc jecxz mov in cltd popf and (bad) xchg or jp (bad) nop cwtl js cwtl pop pushf sub bnd roll fwait inc jp test popw rcrb jl (bad) xor inc popf insl and add aad addr16 mov xchg stos loope sbb add std dec int fldt add jbe jnp lahf xor adc mov push pop sti jg shr inc andl sub xorb into scas inc insb sbb dec ja fs pusha shl xor cmp xchg into pushf movsb test add dec test xorb ficompl (bad) xor mov mov add mov enter adc jno and and adc or fidiv fs loopne mov dec adc xchg jmp fadd cmpsl push cmp or pop in sub or popa or dec mov dec int3 or fwait inc adc (bad) hlt mov in imulb pop xchg dec popf (bad) inc sbb push sub mov add roll xor ds mov jo sbb mov sub mov mov imul push xor mov aaa add (bad) xlat xor int movups ret (bad) cld (bad) and dec pop lods jl add inc mov inc xchg or mov jp xchg (bad) repz sbb pusha inc cmp adc xchg mov jne lock dec add popf out mov push inc mov lods insb lret push loope and dec rolb mov adc pop adc (bad) nop xor sbb cwtl and mov repnz daa xor pushaw sub imul push push cwtl mov int3 cs aad adc cmp rcrb push outsl mov and lea scas rcl insl or mov adc js int3 push lcall sub cld cmp in sub sbb subb cltd lods inc pusha or pushf dec clc mov mov jb fildll cmpsl mov xor in pushl das sub mov jnp push ds add out mov sbb insb pop pushf add mov outsb cli adc inc lods enter pop in enter sub inc mov daa jle (bad) lock movsb sbb mov or movl loope clc mov (bad) pushf pop pop subl add movsb dec push (bad) push add in sti jmp xor push sarl pop mov int3 fild js inc jmp orb xchg movsl in or or or and lock cmp add mov sbb insl add push fadds popl (bad) or adc out pop sub push inc inc pusha test jae adc pop push add mov add mov cmp (bad) loope sbb popa or subb adc or out cmp inc jl inc rcll sbb ds xor mov (bad) cmp xchg lret mov int3 adc sub mov cmp mov add mov call add repnz rcrb adc dec adc hlt fiaddl pop dec ljmp stos test add add (bad) ss dec xchg push cmp jmp aas mov sti loop add mov mov js out jge cmp sub or loope jns pop mov xor mov sti popf add and pusha mov movb pop (bad) jecxz rcr cmp shlb movsl clc cmp push add sti fmull mov out inc jbe push lret cmp mov mov push std pop cmp mov cmp je iret pusha xchg nop pop mov jo adc js sti push inc and inc test jle pop cmpsb mov mov xorl scas js add lds jb adc int xor subb mov mov push xor arpl add push les jno or test add loope insb inc jmp or sub add inc faddl mov push addb sub sbb or or lock popa aad (bad) icebp xor orl lock push pusha leave in mov imul shll repnz sbb push mov je push push and sbb pop jmp cmp xor lcall lock push leave and add (bad) push adc mov cmp out lret pop mov xchg xor xor (bad) cmp or xor lea pushf fbld push in mov sahf add testb inc clc push stc and adc mov sub and imul pop cmp dec xor out mov cmp test sarl loopne and imul mov dec std push pop out push push adc mov adc out faddp loope sbb mov arpl dec cmp insb out in xorb add push (bad) jo sbb push mov push ja fisttpl adc and int jp and ss mov mov dec sbb (bad) int3 add insl jle fwait nop int3 push push xchg add repnz inc and pop into es enter sti imul jo dec mov xor ds adc jmp (bad) ja out add aad and incb dec push out dec imul mov repz and push (bad) insb jo adc pop inc add fldenv sahf jns push scas call mov and jnp sbb cmp pop add scas xchg mov aaa loopne imul fsubs cmpsb dec fsubl je dec or sbb int3 test popa xchg dec (bad) cmp cmpsl popa in repz (bad) mov or jp mov sub mov push xadd mov add rclb inc push loop dec shr hlt adc psllw lret test sub shrl repz jl add jge add jae bound mov adc cmp xor call and dec les xor cmpsb pop or adc push mov cmp ret dec xor (bad) (bad) pop insb pop call sbb mov pop into mov dec and xor mov add sarb jecxz (bad) in nop mov (bad) and inc push jbe mov add pusha inc inc add or mov and ljmp js fsubrs and xchg sbb pop cmpsb inc pushf adc jecxz or mov imul out movsb sahf push in push loope out or lret or adc mov jne into mov cmp ret daa sbb lahf int3 push mov loope (bad) lea xor sbb add test imul and mov pop mov and inc clc mov xor add fnsave mov insb jno add fsubs mov and popf add (bad) push dec ret sti mov loope cwtl or adc mov dec add fwait cwtl test sbb push popf add nop pop xchg movsl fidivr rclb xor hlt add lea loopne inc add add (bad) pop add pop lock xor add inc mov in lret and adc push mov pushl sbb sbbb pushf pop mov movsb rol sub (bad) nop loop clc enter xchg add cltd fsubl enter adc adc pushf fistpl in or pop pop lds aaa push pop add fcompp popa xor sbb cli out icebp jecxz or mov lcall imul mov cltd arpl pop sti cmc add sarb fldenv (bad) lock xor out inc xchg jbe xchg xchg and xchg aaa and cltd enter icebp cmp int3 call cs push pop idivb xor push push cmpsl cmp loopne nop sub mov in push cld inc inc xor push dec (bad) push mov jmp cmp add into sub arpl sarl js xchg loopne faddl add test cmc scas push gs adc sub in dec adc mov mov add ret add adc ss push or shll nop dec and cmp cmp push inc hlt std add fadds cmp bound xchg in pop lods pushf es inc test dec mov fadds rcrb (bad) or or leave test mov push enter mov adc inc adc mov in xchg test mov mov int3 adcb aam scas pop cmovl (bad) and sbbb fdivp adcl je push xor (bad) clc cmpsb sub in push inc and lods or inc mov loope subb push test pop nop xor es xor rolb arpl orb cmp add sarb lock cwtl and por mov cmpsb sub addr16 enter pusha inc mov mov add inc in pop sub or push jb hlt xor adc cmp dec mov int3 mov inc aam cmp arpl and add sub jge mov sub jecxz fldenv sub dec movsl adc add and and cmc (bad) add (bad) in rorb sub mov cmp loopne (bad) jp inc add and or xchg ret ds xchg fiadd insb lret lock loopne cmp pop pop cmp pop add add adc les repz pop xchg dec add mov pusha rolb in cmp out lods (bad) scas or push push int3 scas sub mov jmp xchg mov rolb mov mov add lods rcll fwait or pushf test out shlb loop mov add or sub rcrl lret loopne rolb test imul adc imul out lods cmp push or fs add inc inc and sub pop mov mov dec sbb mov inc add lock add fsubl jb fcompl push sbb push and pop (bad) jecxz pop insl push mov mov ja inc xchg or daa jle fstpl lods mov xorl push push pop cmp and out mov add push mov jmp clc dec pushf ljmp lahf push in jge push add push mov sub (bad) sub or sub (bad) dec aas cmpl pop mov fistpll pusha dec add enter pop loop sbb sbb std dec imul (bad) adc ljmp sub inc sbb push push popaw cs loope dec and mov fsubs and out mov dec popf cmc xchg mov cwtl mov mov sti pop daa xchg out mov inc add pop cmp mov jg push push sbb into out test ljmp nop movsb add call cmp push sub aad not or bound mov push lret das sbb or xchg popa ja dec xor jp ja xrelease movsb or in xor dec fistp push sbb ja out lahf pop push into popf ja xchg daa pop in scas xchg pushl cmpsl insb inc push stos mov xchg push pop loope cmp sub add sub inc (bad) pop push push pop add data16 and add jge or mov pop inc push fadd iret push std xor mov push pop adc addb loope xor push mov xchg incl loop push and dec popf call (bad) or sub xchg dec cli clc ljmp adc push stos sub cmpsb xlat sub jl xor jg repnz mov aas add xor sbb cmpsl lret sub fs fs lahf add add mov rorl stc sbb in or ljmp dec scas lret pop add xlat inc pop lea cmc push jb repz ret ja jmp xor fistl inc mov jns daa fcomps out (bad) ja jbe out shrb enter mov dec push stos fisttpll cmp insl in dec cmp enter mov add or jmp std nop clc mov das sub jae stc sbb out sbb lds jmp scas (bad) ja jmp push xor mov jmp mov scas mov and push jmp sub jno (bad) or mov sbb mov inc dec or pop push shl neg add fs (bad) aas dec shl pop mov pop jmp stos add jno mov (bad) mov add (bad) mov sub sub dec and dec mov push ja inc add pop push sub push sub ret sar push adc test xor sbb dec or pop push popf jg (bad) std mov push or add mov jge xor (bad) clc mov dec mov xchg adc push dec ret pop jmp add or xlat repz push add inc mov add fdivrs pop pop add xchg mov pop mov testl insl or adc idivl je pop jmp push shr jns cwtl jno hlt call cmp shr jmp rorb jg jle push push insl jmp dec lock ja in dec inc sahf push and cmpsl inc push outsb cwtl cld jo jne in stc lahf and sbb dec xor adc push push rolb mov push pop inc mov ljmp fimull shll push sub xchg ds mov rorb adc mov adc xchg xlat or xor or add pop dec mov push xchg shll lock imul icebp and in mov sub test adc nop mov dec (bad) xor fsts sti bound cmp mov mov add cwtl jae mov jmp les mov sbb repnz mov aaa mov cmp std add mov pop xchg xchg mov xor rol push mov jne mov sbb jbe jg mov jp sub call mov out repz jle das push fs repz dec sbb mov lahf adc aad inc xor jmp or fbstp inc or (bad) ja test mov ds dec scas push push push mov dec pop adc (bad) or (bad) cmp push jnp cwtl stc dec (bad) mov test mov and inc mov movsb mov add pop add dec es or add inc pop push sbb in aas sub or push push push xor mov mov mov ja es std decl dec pop jecxz mov dec aaa ljmp push xchg js pop mov stos add test mov inc in push add add inc or int3 cmpsl in and jb add shr pop cltd cmp or andb mov pop repnz pop mov cmpsl mov leave xchg sti inc sub mov and jmp push ja test jmp lret jmp leave inc or jmp push shrb ds xor push jno push xor push mov push push loopne push xor loope arpl add cmc cmp or mov dec js mov push jne test daa jge rorl cmp jl and lcall jo jmp movsb mov pop movsl scas pushf and push lods sub push sbb add out and jmp adc mov pushf xchg out add pop add popa stc es dec cmc pop cmp cmpb add adc add add lods ret popf pop nop mov jle xor adc pop mov cmp out xor adc pushf adc push pop push mov jg ljmp out jb mov inc dec sbbl and jbe dec fwait or neg sub or bound xor add jge in pop sbb repnz stc jns aad js pop ja (bad) jae and jmp adc shrb rolb fwait enter negb sub cmp adc sub dec and std or addr16 lds cmp cld cmpsl cmc inc pusha lds sar pop fsts into movsb insb xchg cmpsl out in mov in adc push jmp inc or adc jbe repnz enter fwait push push into and push jnp or punpckhwd and jmp movsb out xchg or push or daa mov and daa push push xor das adc std dec pop add mov dec aaa sub jne testb jl and add adc sub push add xor (bad) mov push iret (bad) sti push push bnd lret daa push insl and pop xchg cmp scas mov cmp iret popa or aaa imul jmp arpl outsl jo iret push aam jl fcmovb into mov mov sub pop and stc leave fisub cli cld jl mov cmp fbstp aaa push pop push (bad) pop daa popf fbstp jl js add ja inc and dec out lret or imull cli jo or test mov add (bad) enter sbbb jbe adc pop jb sarb inc push bound fbstp cmp pop cmc repz add push call mov xor jmp bound loop fcomps wbinvd adc or pop jmp ja test loop mov insl jmp adc jno mov mov inc (bad) cmp xor xchg shrb xor pop enter roll mov add fsub ja pop add pop rcrb sub insb decl sti pushf add lcall xchg imul scas gs test or pop inc addl xchg ret mov push add or mov xchg jbe call dec adc test add adc pusha fmuls insb cmp (bad) xor imul add add test arpl xor mov pop inc js in or dec push push pop ss inc arpl xlat cli jne jns pop sti cmp je adc cmp adc nop pop push cmp iret jno sbb mov or les imul push adcb roll adc scas mov je pop adc or pop cmp push add out or loopne adc inc pushf adc leave outsl test adc and movsb sbb push cmp jg xorl cld or movsb or data16 (bad) push jl jb pop faddp sub (bad) test push pop xchg add add mov (bad) xor jb mov (bad) bound iret xchg push sub dec xor and pop aaa adc cmp mov adc dec xchg dec sub xchg add (bad) cmc daa push cmp dec dec pop jbe push scas jns cmp push pop push fstpt adc jae stos sub idivl loope jle cli push inc movsb pop push stos mov fisubrl movsl leave xchg sahf mov dec or pop adc and push dec dec out sbb aam cmp adc cli movsb xor popa outsl mov mov notb cmp test cwtl stos push (bad) adc inc ss fwait das or mov add xchg pop mov repnz add xchg sub fstpl cmp pop popa and (bad) adc test lahf in lretw sub sbb xchg xor jnp movsb adc or and xchg (bad) add mov mov inc cmp fs mov jmp mov dec adc xchg mov cltd mov (bad) dec test xchg es mov jnp dec inc adc jnp loop std add and mov xchg dec pop mov adc mov dec inc cmpb aad inc in adc xor outsl fstpl add test add sbb or adc das push sub or fadds out xor push (bad) sbb push jne out push (bad) in roll pop es sbb xchg aaa scas jmp sub leave dec or adc push add (bad) outsb int and jns cmc xchg dec add xchg bound push mov push xor xchg hlt (bad) cmp add xchg scas gs fs repz push test lret mov or inc add mov add jl repnz imul leave fstpt mov lock jg sub and stos push adc adc or mull bound sbbl jle stos or or ljmp push jp dec xchg mov jno add inc lret ficom lret mov push adcb pop fsts mov inc jbe ret add xchg pop fwait jns add dec mov and pextrw adc or cld clc and imul jbe lret dec dec sub xorl pusha gs inc add ja add ljmp dec sub mov xor xor push mov push adc pusha ja hlt and pop pusha mov bound icebp sbb in xor (bad) bound and sbb (bad) rcr outsb dec inc orb loopne ret adc adc dec icebp fldt sbb dec mov or add push inc jecxz sbb cmp xchg and or lret test add push lcall enter scas daa and adc inc sbb dec sub popa scas add pop pusha push ja andb add pop xor and adc into test jl push add add sub sbb addr16 sbb imul inc or xchg or (bad) cwtl push and or inc arpl add and insb push or pop and js add sti push mov sbbb imul cmpsb mov cmp orl xchg lahf dec pushf inc mov cmp lcall inc fsubrs cvtps2pi push jle or test adc mov icebp push mov xor add push loop xor jae adc pop sahf ja add or add scas mov rorb inc ds mov sbb insl lret push mov cld mov outsl sub pop shl add xorb xor pop lahf add xchg push rclb jmp leave pop (bad) notl in sbb and mov push pop pop cmp mov cmp test jnp mov outsb rorl jb add mov outsl sub xor add pop adcl jecxz pop xchg mov out inc xchg in mov fldcw dec int3 aam and dec out mov pop lahf adc les pop xchg test pop push jmp push xchg sub add mov sbb outsb addl jmp neg lock cld pop xorb add dec push popf inc pop push stos sarl inc sub pop add add add mov xchg jnp push cltd push les adc jmp pop in inc mov push pushf jno add fs adc sahf aam push inc or jo xor inc xor inc add mov loop jo popa add pop pop cmp push and ficoml jg jle push xor sbb jno jle int3 cmp cld jp popa dec cltd push aad or (bad) jg ficoml call cmc (bad) in js loopne push sti imul cmp test push mov sub add mov sti js mov and les mov xchg test ljmp clc xchg loopne (bad) mov push pop push sub imul or sahf pusha and cwtl sub popa or xor pop push add sar pusha cmpsb insb ds das jmp sbb int hlt pop jbe cmp sar or or dec (bad) xor jecxz arpl lock push es test or or or roll fldcw fnsave adc add cwtl sarl mov neg loope jnp jne ret add arpl mov clc add neg dec cmpb and stc icebp push jle add lcall cmp gs push pop cmp dec mov adc pushf gs insb and ret pop push sti stos or imul sbb shl and jl divb shrl cmp test mov add lcall scas sbb mov insb ja push push pop cmp inc cwtl xchg ret pusha ss or push gs bound fdivl xchg xor pop pop push sub cmp cmp mov dec in pop adc push call jnp cmp in push jno cmc movl (bad) jbe fdivp dec fldt and or aas cmp outsb sbb add xor (bad) adc push mov cmc push cld and out push ja and adc movsl mov pusha cld cmovp push fwait inc daa adc inc push add mov mov enter pop inc inc mov enter rcll les aam xlat addl test pop popf fstl dec call lret add mov in loopne and sbb mov cmp test push ret pop ret xchg mov mov add in sub mov mov sbb and loop xor es inc add add sbb jns (bad) pop cmp push sbb ret mov inc push ret loopne mov xchg mov mov fisubl outsb push js sub cmp add (bad) adc outsb mov shll cmp xchg sub and push add sti shrb jo add mov sbb push and add pop movsl mov or call push mov les jns xor sbb pop pop cmp (bad) adc add dec adc add icebp (bad) js mov pop push aas xor mov xor push pop (bad) cmp mov data16 mov in add mov or fisubl mov adc push imul scas test adc dec cmp add sub bound push pushf call or (bad) cmp xchg pushf xor push push leave cmpsl add (bad) jp inc into push add pop shlb fistp mov add andl lods add in ret mov push jno pop (bad) (bad) xchg adc nop add cmpsb jno call cmc xchg push ret pop xchg inc inc pop sub lods arpl adc jb icebp xchg xlat pop pop sub and in call adc add inc stc (bad) (bad) (bad) icebp lahf or add addl data16 loope add pop ds add adc out xchg cld add popf lods lret mov xchg jb xorb adc subb fs xor xchg out xor enter movsl add xlat loopne cmp inc lods bound std add adc test les shrl idivb add inc icebp pop rcr push shll pop xchg inc add jge fcoml inc add sbb outsl out idivb dec loop add sbb dec test dec cmpsl or inc mov cs repz nop xchg add sub jl xchg pop add adc fcmove loope mov add xchg xorb xlat fadd adc imul leave adc and cld cmp fldl adc xchg clc int imul or in mov (bad) out pushf add xchg add pop pop out fild mov push xchg dec faddl cmp add out dec mov enter andb push cli sbb bound mov and or sbb lods xchg or add icebp inc mov sub les xor xchg std (bad) ds jmp sub mov roll or mov adc push inc mov rolb js rcll jg xchg xchg sub jb xadd sbb movsl add test rcrb popf add pop sti inc adc cmp ficoml loopne in test pop cmp hlt jg test fmull shlb roll leave cli nop push push cld mov les mov push rolb fs pop hlt pop stos in lods (bad) adc or push (bad) xchg and fdivrs cwtl testl (bad) cmp dec or shrb jb lea addb enter fmull jns mov pop adc or adc movsb nop loope cmp or mov jo add fs cmp push orl mov aaa ljmp vandps pop add mov or add nop push (bad) fadds or sub aad and loope cmp sbb test push leave inc jmp les cmp adc push cmp add sti xor cmp rcr jp and adc pusha jl mov (bad) mov lahf xchg add je and xchg cwtl add loop pusha and cmp push xor insl push adc sub inc and aam cmp loopne mov cmp pop fidivrl ljmp test add mov cwtl or aaa test fnop inc sbb cmp js jo (bad) inc push sbb add jp (bad) xor (bad) cmpsb (bad) xchg xchg dec inc ljmp fs mov push mov cmp hlt mov pop cmp cltd outsl repz xor pop lds cld (bad) add or add or add xchg cwtl dec mov mov jp loope and pop fsubs pop adc lcall add jg das fdivr pop dec mov sbb sbbl clc hlt pop (bad) push clc cmp cmp jb adc (bad) push sub cmp xchg adc inc mov imul or es adc cmp adc cld les (bad) in ds mov push sub ljmp sbbl ret mov cwtl imul add jl nop movsb add cmpsl fdivrl mov mov adcl ss nop lock push add shrb in inc mov orb add pop xor xchg jo js sub popa jo push movsb (bad) rorb mov test (bad) adc scas les in push mov xor hlt aam mov mov lret pop out push jno push sbb jge xchg pusha shr mov push in mov push daa jnp or cmp cmp jae add dec fcomi add (bad) dec add or jl xorb hlt push inc out mov cmp cmp call test movsl push frstor add adc mov cmpsb je cmp dec xor push push push and cmp fnstsw inc add test inc out add xchg jge or int3 xor or sub inc xor mov les xchg xorl out jnp add ds test stc xchg push adc hlt push je inc sti jae xchg cmp add jb or mov gs and or popa ds lods push je pop inc fistp push shll adc cmp mov dec adc js (bad) adc rcrb (bad) xlat movsl mov add jbe sub push pop ss je test loopne outsb rolb push repnz add add dec js les xor fildll orl popa test sbb and iret mov cmp mov add std sub jmp test inc xor xor test pop je cwtl pushf add orl shlb inc pop sarl pop adc adc push add mov fs imul jl out sub cli enter dec int3 aaa jbe pop and adc sub mov cwtl fdivs xor rcll jb nop clc jp inc add (bad) repz cmp add xchg xor lock push (bad) in cmp push and cs cwtl bound frstor pop add push pop jp add mov in cmp add in push (bad) lock jo pop sub movsb or inc nop add rol stos ret adc lret pop (bad) jb lea cmp adc add nop xchg aam add jne pusha dec adc mov adc cwtl inc test adc push mov add pusha mov (bad) mov andb push cmp cmp mov add mov and enter mov loope fs dec mov adc cltd cmp rorb or xchg rclb lock (bad) hlt cmp popa push or add mov mov inc cmp rorb les xor sbbl pushf mov jae je and sub adc loopne,pn cmp faddl aad and xor jo pop dec cmp and sub xor cli add jle ret loopne call fwait ljmp and push cmp cmp aad mov in add cmp or rcr cmp xor mov lea fs cmp mov mov idivb bnd pop les push pop sbb mov inc std cmc pop out dec mull je inc sub pushf mov or bound pop or mov rclb add fdivrl sbb push ret adc loopne or cmp test adc mov push mov adc loopne mov pop cmp push addl pop rclb imul jmp adc dec mov inc sub mov cwtl insl add insb js jb jg (bad) or xor cmp add mov cmp adc popa ret or loopne (bad) or xchg lea cmp mov sbb clc aaa xchg cmc inc inc push aas jmp call (bad) in add adc hlt and js add xor lcall xchg rcr nop loope push pop aaa and pop push inc jb add addr16 jecxz sub sbb sub call das xorb into adc pop (bad) or nop and xchg dec repz inc mov pop sbb stos cmp jg lea lods mov pop dec clc insl cmp add aas into fidivrl push xor in js xchg imul push lods addr16 push (bad) cmp into icebp and sub or xchg loope cmp add into fistp cltd aas add hlt jb pop cmp fs (bad) hlt fisub cld les mov adc scas adc add rcrb push cmc (bad) jmp and dec orb mov cwtl inc jb sbb add in adc inc xchg cmp into pusha rolb jb add imul mov leave les mov adc dec adc (bad) mov cwtl push sbb inc orb call sub cmp mov adc add cld push mov pushf dec jns adc add (bad) xchg rclb sub and (bad) ror hlt (bad) les mov dec sbb sub je and mov add or add xchg icebp ss and and rcrl jb test gs jo dec andb (bad) pop cs adc ss mov and and lahf aam es int3 xor add outsb and stos pop outsl jne push lock cmp push adcb add and inc cld clc fmulp je dec pop push xor sub cmp popa insb mov hlt jmp xor les or add sbb xchg or adc outsl nop hlt add mov data16 aas inc or xor xchg xchg mov ja add push repnz dec push icebp out or fmull cltd add fmuls push enter cli mov xor or xchg fildll adc les sahf adc xchg inc lods mov mov add call popa lock jae mov imul cmc data16 dec outsl mov imul rclw lret lock (bad) xorb mov xchg and sarl adc repnz and mov cwtl inc pusha cmpsl push aaa (bad) pushf fxtract and mov jb ljmp (bad) fs mov or jne add xor lea ds fadds dec push jo pop jno ret imul sub jns push loop cmp dec add pop decl nop xor cmpsb int3 out imul sbb insb in xor xorl jb lcall xor jecxz pop ss sub mov lods cmp ja,pt dec movsl or or jno and mov xor inc xor add mov nop mov inc pop js add xchg inc jo repnz and pop xchg xor sbb push or (bad) leave inc mov xchg xchg jg mov cmp sbb cmp pushf mov sub jb pushf es mov test loopne and add mov rol imul push call sbb hlt push loope orb push fdivrs adc xor adc call icebp mov jl add nop repnz pusha and sbb mov cli movsl add loopne cwtl cmp imul and xchg jb hlt mov cmp pop cmp insb imul pusha loopne push and inc mov pusha loopne pop out add push cmc js xor rclb inc js nop push adc inc mov inc daa inc andb add inc jnp sub mov int mov mov or (bad) hlt push sbb or mov push cltd fsubs mov mov add pop add loopne pushf push sbb lea adc pop pusha xchg sbb aas xchg pusha xchg repnz jo mov les cmp push pop add sti push leave mov mov xchg cwtl dec mov call aam mov in in push fs pushf ret cmp mov sbb repnz clc pop sub test (bad) out jb pop xor and cmc nop adc inc add jl and or lcall ss test dec sar mov jp mov aam or push or bound dec out call or rcrb shrb jg sysenter and add add xchg jb cmp and dec bound add xorl dec inc lock cmc add lds mov rclb (bad) xor dec xchg dec add cld add or dec add add cwtl xchg add mov mov repnz cmp bswap sub add push xchg mov add (bad) jb jl inc movntsd movsl xchg or mov mov push out es jo pushf notb pop ljmp adc add mull pusha xchg xchg int3 rolb fs es mov add add add cmp push push out add push loopne add rorl cmp pushf adc xchg imul fimull add xor addr16 mov mov push (bad) bound inc lahf mov and add xor daa sbb popa xchg add mov sub mov sbb cwtl (bad) sbb lret cs (bad) add xchg push sub aam les add fwait rorb rcrb dec into loopne jg les xchg cwtl jecxz sub add clc call push ja cmp mov icebp movsb enter jl xor test addl test mov jb sbb or add or pop scas mov xorb and rclb add add dec cwtl sbb icebp xorb sbb jbe bound push aam mov hlt es loopne add mov and jp add adc (bad) push push mov or jns mov push mov mov outsb sbbb ror in fmull xor adc nop inc imul hlt sub sub dec fistpl cmp mov (bad) add cltd pusha cmpsb and jb cmp stos xchg subl and sbb xchg fadd cli jne add cmp aam xor or mov xor lea push jo (bad) stc add fs pusha cltd cld cmpsl and pop ret fs mov mov sbb sub xchg out and (bad) push outsb dec mov lret xchg and sbb dec insl mov ret inc mov cwtl mov dec ret jecxz jb add and adc adc mov adc add std (bad) lea ja xorb xchg orb fs xor mov addl xor adc std mov xchg add pop or jle sbb pushf stos rep jns lea pop cli shrl cwtl push cmc test nop mov test cltd mov jb ret cmp and aam add and shll fcoml inc cmc fs xchg xor test fimul cwtl pop inc xor xchg ret dec push cwtl push js sbb add push sub xor jl mov in imul and pop adc jbe pop test adc clc inc adc sub xor outsl and push inc enter sub popa popf sbb sub jb sbb out leave mov adc insl lock pushf data16 cmp mov xchg cli ret mov and scas in mov movsb add mov mov push jb ss add call add fwait mov aam aam pop nop dec pop adc dec pushf int3 xchg mov or enter lock lahf mov mov bound mov subb and or add jl pop xchg xor jecxz xor add xor inc (bad) cmp add mov loope rolb mov and cwtl adc nop mov insb test pop xor orb mov out and ja mov ffreep cmpsb push sti add add (bad) xor sahf int3 xchg pop cmp xchg adcl mov add mov inc add fisubr ds xor add movsb stos push jl cmpb push rorl sub push adc add pop int3 push (bad) aam test jl xchg or stos in push pop shrb add ljmp dec push pop rcrl xor dec dec pop sahf adc scas repnz mov jns pusha pop cltd stc inc sub add jb lods pop mov je xchg mov or cwtl incb add in movsl jno adc test push ja fdivp scas add call adc dec imul push js shl lret mov stos sub cmp mov inc push cmpsl pusha insl jbe adc fisubr enter mov int3 mov inc scas mov cmp aad and adc mov test push xor int pusha imul test addr16 sub imul fdivl (bad) add jmp pop or push jbe rcrb mull (bad) jo push push cwtl repz xor repnz ret cmc pop or int3 cwtl enter xchg cmp test roll js adc adcl dec movsl or test jae pushf xor stos sub popf sbb dec xor je test and (bad) aaa cmpl push and or gs add insb adc or or ljmp popf aam add or rcll js sub insb add mov (bad) lods mov pop add in (bad) and aad pusha xor and js scas scas add popf sub int3 sbb jne enter lds popf pusha push sub mov scas xlat clc add push std into xchg outsl dec cmpsl cld pop xor jb adcl loop add mov xor mov mov popf mov test std push mov add sarl pushf stc push sahf mov xor test (bad) loop lods mov push xor cmp fldenv shlb add sub xor mov and insb add (bad) (bad) iret wrmsr test cmp mov push mov xchg cmp push (bad) fs aaa pop push inc jb ljmp sbbl xchg lahf mov int push add adcl aam addl add aas sahf fldt addb add test nop insb push or arpl int3 scas int xchg ds sarl add loop jo lea add mov adc mov je push push cmp pusha cmp push adc add repz xor cmp add or dec loopne sbb push ret ret cli dec add les mov pop leave adc xchg jbe sbb and cmpsb and popa and popf xor xor jbe loopne dec andb push dec mov in or sub rcll pop pop or inc test xchg push fs test (bad) out adc push inc dec test push push aam and sti lods dec test inc and add push cld mov adc sbb inc mov pushf jge adc ret jl cmpsb or cld and inc cmp outsb adc or jbe,pt jno loopne dec mov or xchg and push cwtl dec adc scas adc nop aas gs enter mov sub loopne lds pusha sub xchg hlt data16 xor mov dec test or xchg sbbl stos inc stos test jo xchg inc sbb cmp rcrl (bad) dec (bad) dec cmp add or pop pop add (bad) mov leave fldenv fs arpl les mov nop call test dec adc test dec test or dec adc dec and add jle jp jge xorl dec inc and jmp xor inc pop in andb sub movsl int3 add (bad) mov cli in add sub jae or loop incl test mov jo js lcall xor push or aad xchg jl sbb sub movl es mov inc cwtl dec adc xchg or or sbb icebp adcl inc add aaa mov inc shrb pop lods (bad) mov sahf popl rcrb cltd int3 sub in jle pop lods or mov stos sbb scas push sub push push xchg xlat test xor lods mov imul adc add pushf mov add outsl cwtl add jnp mov and adc nop add (bad) jae jmp cmp jo inc rclb jns inc and jno pop mov adc subl add pop pop mov add test bound clc xor push add addl lea int sbb mov or iret loope mov test and loope push lods (bad) mulb xor cltd mov or push hlt and add xchg or mov dec dec lods xor (bad) movsb adc roll movsl mov jnp pop jmp scas cltd pop andb cmp stc addl jnp add pushf mov mov imul inc jl xchg cs or pop add (bad) jns mov mov je mov adc pop add push lcall pop nop insb les out test pusha or movb sbb adc cmp fwait push aam or pusha adc xor pop jo xchg dec js add stos lea jo xchg and push inc in pusha aas xchg popf jg addl sub mov scas push add cmp push sbb popf lea add mov dec dec lods inc and xchg nop mov lods hlt loopne,pt adc test comiss mov add (bad) hlt mov sbb jbe loopne sti cmp sub shrd push pop es or pushf insb sarb dec (bad) shrb test add adc xchg inc (bad) outsl femms mov adc fucom add lods xchg and adc add inc pop add (bad) mov cld jb sub aam ljmp loopne mov roll nop mov addr16 mov sub aas inc movsb mov pop aaa inc call ja add cli xor das data16 (bad) aam movsb in stc test lds ficompl les jnp je cmpsl enter aas jmp add rcrb test push add (bad) mov sub gs add insb int3 loope les dec inc rcrb loop rcll sub add int3 mov mov fs daa lret clc mov xor cld andl scas mov xchg mov es lods cvtdq2ps or popa and in repz movaps fwait movsb sbbb pop add jl xchg movsl test add hlt mov xchg cmp mov in es cmp or test mov adc aad xchg adc movsb xor sub xchg (bad) pop mov pop sub enter roll mov enter jecxz test cmp xchg test scas pop mov fbstp or sbb dec dec je pop sbb cli and add mov push xor mov rcl sub mov hlt in bound adc xchg dec (bad) mov pushf push test sub test sub pushf adc pushf jo adc mov push fistpll cwtl sub cmp inc call cwtl lods imul inc push out es mov je loop rcr inc add rcrl or es or and adc pusha xor (bad) mov adc add divb mov and add movsl (bad) insb xor scas add and in mov sbb test (bad) aaa sub subb inc scas arpl pop xchg or mov mov dec fsubrp aam add or sub mov cmp dec sub sbb lret imul or xor mov pop cmpsl and or test mov inc cld lods push sub and iret pusha xor push sbb add (bad) fdivrl sar idivb bound mov jge call sub dec cmp xor sub divb add push sbb cmpl (bad) jo shll fcompl das jno shrl jo jo test stos or mov cli test xor idivb loopne,pn popa add cwtl mov cmpb or cs sti mov aad sbb mov adc popl lock test jbe loop out xor nop mov mov and pushf cmp mov test iret (bad) xchg adc mov rcrb arpl sbb subb xchg add xlat sub mov mov data16 aam cmpl cmp inc pop inc xor test in pop je lock fisttp and or mov mov push jb andb test inc in mov sbb xchg lock sub mov aad add or and (bad) out add cmp das or add pop pop cmpsl push adc push hlt mov add inc sub (bad) or rolb cld cs push push xor int3 pushf xchg call add push xchg mov mov rclb jo add mov mov cltd enter mov dec push clc pop add iret std and add inc sbb add out sbb mov jg cmpsb and loopne mov popa lods out or (bad) xchg imul les pop cltd call lods in sarl mov sbb dec adc add lcall icebp nop loopne jp add add incb cmp mov movsb add outsb movsb cmp test xor add pushf lods mov add dec lock cli cmp dec jle mov xor fnsave jle (bad) popf int or pop rcll sub cmpb xchg mov loop pop js mov popl push je mov add cwtl repnz cmp lret sbb xchg jo push cmp adc mov dec pop xchg fstps nop adc fimul je mov jmp pusha setnp xor jmp or sbb lods cli and (bad) jnp popf add push ds aaa cwtl or repz jmp cld dec movsb test mov xchg ret mov test mov pop hlt lcall test or mov movsb adc (bad) pop fs xor add ret and cli mov cmp mov pop lock rorl je mov xor push jmp and cmp mov out popf shll mov sbb mov mov xor cli add dec pop push setns jmp pop cwtl test movl and aam rorl popf loop xor add jle mov mov rcrl cwtl mov mov or clc sbbb enter push pushf pop je jne pmaxub xor sbb inc (bad) test aam mov test mov cmp cmp and cmp ljmp or call sbb cltd dec test ss push xchg lahf or stos mov sarb nop xor xchg movsb mov std js push jne push subb push sbb js xor dec shl xchg jl (bad) or imul in ds pop sub inc and adc test pusha mov adc cmp loopne lret add jnp jae sub dec dec fdivl xchg les adc popf push test inc or imul pop rorb and xchg fcoml add (bad) rol or xor xor sub pushf dec and js out xor aam lods dec and add sub sbb pop dec dec faddl ljmp jecxz jecxz add (bad) ss lods sarb pusha adc adc sub (bad) inc mov push fwait push cmp sahf mov jp nop mov jge mov xor mov add nop inc jmp mov or mov mov std adc add cmp sbb cmpsb ljmp stc loopne movsb inc adc push cmp cmp xchg xor mov (bad) adc lock add jo push jmp sbb dec addr16 mov mov adc jl fistl fs or xor fsubl push push (bad) faddl mov sahf loopne inc mov xchg jo sub xor sbbb cmp aam xor pop loopne test es cmp cmp and xchg sub push cmpsb leave sbb lock xor stos cwtl add jl and mov cwtl pop leave dec outsl add pop mov add fucom adc std dec fwait jae add inc mov es icebp loop inc mov (bad) dec jmp add dec mov mov mov push repnz fwait outsl pop inc out cmp push (bad) decl pop (bad) cltd jo adc inc or jle xor add mov ljmp and push fdivs out and fstpt imul mov js mov mov addb test (bad) dec jg xor mov je push into adc dec sub add aas iret rolb adc into adcl nop add mov inc ljmp jae dec hlt rol inc mov in je lea cmp popf in jge test cltd jae adcl sahf dec sub pop sub cmp loope loopne int3 cmpl jl cwtl mov mov jb (bad) mov or std sbb aam out inc inc xchg sbb mov and fcompl push add inc outsb xor mov loopne add push fmull xor inc lock add add cld xor push xor sub lret ret jle inc jo jnp add sbb ror mov cmp or and dec cmp (bad) adc adc push (bad) xor cmp and or mov xchg shrl sbbb (bad) add jle mov xor test adcl addb aam inc dec pop inc mov xchg cmp xchg cmp adc xor cmp cwtl pop mov js pusha xor push int3 dec cmp mov rorb cmp dec mov adc test (bad) xor outsl fdivrs pop cld add popa or dec push mov call xorl mov cwtl into mov rclb sbb ljmp inc cli icebp icebp sub inc popf push mov sub pushf and cli inc nop and jecxz in and mov jae jle rorl lret out sub mov call aaa fxtract call xchg dec aas mov sbbl cmp dec xor mov les push ljmp add (bad) mov mov xchg mov push and jbe leave cltd test lahf jle push out inc add jmp fwait enter in test or mov mov and mov (bad) xor mov ret pop in cwtl in push enter cld scas lcall popf repnz insb and xor mov xor sbb jb push adc adc adc mov cmp loop and call jecxz out inc enter sub in dec add pop dec subps icebp or je sub test jle fnstcw mov xchg or andb cwtl mov mov punpcklwd roll inc jo pop std jge xor les rorl aam or shrb cmp aam in adc fwait mov cmp xchg in hlt jo dec rclb sahf xchg loop ss mov add mov (bad) push ror je iret jmp push add push mov jmp mull rclb add jne pop and cmp sar cmp test ljmp mov add xchg ljmp mov adc sbb pop nop (bad) cmpb sbb cpuid and shrb test stc das inc out js jo xchg sahf inc inc push cltd pop hlt popf jb jno lock in (bad) fdivs jae add ss aas in add adc loopne stos add fs cltd push mov mov jo xchg test stos lea cmp sbb and jl cwtl dec andl jnp mov dec lret add fimull pop nop cltd dec xchg add ret ror (bad) sti and cli jmp dec sbb sub (bad) call nop mov adc jl adc jle add fwait in stos aaa (bad) add outsl adc or pop ljmp cli mov adc inc cmp (bad) mov test lcall hlt cmp fidivrl pusha push adc ljmp sti (bad) jb repnz and adc jno push shlb cwtl and fistpl nop adc lock adc popf movsb inc je lret jno sub lock imul mov inc mov pushf dec dec add aam xor cwtl fldenv xor add mov (bad) xor or pop pop cmp lock or pop xchg sub test cmp mov mov push sbb sub rol add jg out roll imul add sbb xchg xorb xor and or and icebp clc test mov imul syscall pop imul and mov pop push push cmp push jl push cmpsb mov je push push xchg xchg out sbb push cmp int rorl lcall cmpsb pop lods ret stos pusha dec jne je push or call dec cmp out daa jl fisubrl push (bad) packuswb arpl (bad) mov pop adc push fs or addb mov sbb andl js stos mov mov jns lds jecxz arpl mov add movb jae jecxz enter push xchg (bad) leave and push test inc adc sar add or arpl sbb dec outsl (bad) (bad) cmp and add lea pop mov dec js adc sbb lret adcl insb and loopne insl es call push mov shrb add mov in pushf add fisttp dec les rorb stos cmp test lds and and jno pop cwtl add xor mov adc scas add not mov call nop test fisubr js insl xlat nop cwtl add xor iret or (bad) sub repz and adc lret pop dec mov inc shlb mov cmp ret roll add in push xchg insl outsl jle sarb dec int dec or or pop sbb test pop jno mov sti into movsb rorb inc jecxz mov pop cld cwtl or lea inc orl mov pop jno dec hlt push aam xor xor push (bad) leave loopne loop cmp adc cltd sarl aad (bad) test inc add push pop cmp fsubrl les sub mov les fs and inc sbb dec push adc imul (bad) js mov ss xchg cld lahf pop sub stc inc js or cwtl add mov mov adc inc sub mov add fld je add repz (bad) ret sbb data16 (bad) jne add mov incb ret pop mov inc mov mov push icebp sbb add aaa sbb push and cltd lea mov test push pop nop mov and movsb fs pop cld mov pop fsubrl add jns nop adc pop or outsb pop xor es xlat mov cmp enter xchg cltd fs and push push ljmp (bad) mov ds inc mov and cmpsb inc inc and and scas inc add pop xor pop addr16 adc xchg inc (bad) aaa push or cltd adc dec cmpsb ss and pop test mov ffreep sub mov adc pop xor iret adc pop xchg sub xor cs in adcb call int stos sarb push test lsl and xchg pop rorl mov push hlt sbb sub jno scas cmpl es dec out mov int3 inc jp hlt push subb js js pop ret mov and loope shrb adc pcmpeqd insb push test mov lcall out or mov jb,pt addb sahf in add mov loope (bad) xchg lds mov mov xchg ret push mov add and lret hlt or jp sub or xorb faddp (bad) jnp jl ds mov pop lcall push push pop jecxz add lea mov data16 xor adc nop je in jl or rorl and jmp repz (bad) mov sbb loope scas pop rclb cmp ljmp inc popl jl insl push cs imul xlat jp xor and or sbb mulb ror cmp mov call xchg sub nop add push pop cwtl and in fistpl adc add sub mov xor sbb sbbl xor pop push push sub fdivs dec sbb ss sbb adc mov mov or rorb cld mov ljmp loop inc push sub sbb push dec rclb push cmp lret inc lcall jle mov fwait cmp or mov xchg rorb inc adc cmp (bad) rorb xchg sahf hlt lcall lcall or inc push or mov fs nop faddl hlt shll mov hlt imul ror faddl pop pop enter in fsubl mov sub nop nop add scas in and xchg cmp hlt inc add sub add jo sbb aad mov xchg mov and aam repz adc enter ret push inc addr16 and and pop stc mov rcrl mov cltd push or adc pusha sti jo inc mov add xchg sbb (bad) pop jb mov lcall mov add popa lahf icebp jns adcl (bad) xchg call add adc pushf xor or push ljmp and inc inc ret stos cwtl mov xcrypt-cbc cmpsl rcll dec (bad) mov aas mov arpl add mov lahf add rclb dec sub mov mov or xchg dec nop push push xchg xchg cwtl insl stos adc shlb lahf dec mov push je or jns jmp addr16 pop and or (bad) jno sbb sub arpl hlt xor out dec roll movsb in rclb outsb inc dec lcall or adc dec dec mov xor ret mov cmp call scas addl mov (bad) or inc add sbb adc or or mov lea sbb mov in lcall shrb cmp cld rolb (bad) in arpl sub add aam pop iret popa and sbb into mov adc sbbb cwtl iret add mov dec insl mov jle dec pop and mulb inc jl (bad) pop fisttpll daa loopne dec insb sti das inc test jge stos cmc ret in test xor ss jo nop mov out mov cmp lcall add push xor lods stos (bad) cmp lcall jae movsb or test fwait add bound sub leave cmp scas out (bad) addr16 loopne xorl push gs js dec sbb push ss add inc mov jb mov xchg out js and pop sub xchg mov xor push mov fnsave loope xor pop adc mov mov and fs xor sbb and aas push dec mov xchg (bad) xlat xor or adc pop push push dec push xlat add scas and (bad) aam lods ret cmp test mov imul test test mov xchg pop add xor cli add sahf ljmp je add ficomp or cld push js std (bad) and lcall fs mov sbb or inc jnp popa out or notl ds cs mov jb add and sub pmuludq js rolb add ret in xor xor xchg (bad) add sub and clc in adc leave sbb out dec (bad) je jne pop enter rcrb push out cmpsb cltd nop xchg push repz test xor js mov (bad) lds mov mov lods inc mov cmpsb sub pop fldt or mov arpl repnz js jmp lock or mov xchg or push sub es hlt mov and mov sahf sbb mov fldl insb cli ds cmc dec xchg aam jb push out mov xchg je push pop xchg or and add adc andl xor fdivr dec mov (bad) mov or push mov mov xor rol add mov add movsl jbe bound xchg ss mov xchg stos int3 cwtl test mov adc icebp or (bad) imul add add addl in clc imul push push inc das std stos sub xor sub mov in sbb cwtl fwait sub movsb enter dec sbb xchg pop cmp enter leave int3 subl cwtl inc daa dec iret lret xchg fcomps add das mov addb adc adc and pop arpl sbb jecxz or jle outsb int3 jmp dec rorl movsl int3 sub int inc push loopne adc xchg sub jne cmpsl nop and fmull and movsb in test int3 nop gs stc movsb inc mov mov dec mov cmp jne mov and pop stc pusha mov adc es xorb pusha aas pop out mov cmp in jo adc repz mov data16 cmp std mov nop mov imul insb pop lods add scas in fsubrp xor xorb xchg sbb or push sub mov xchg int3 add aam sahf pop sbbb frstor or call push jno subb inc pop inc and pop or cmp dec pop rcll stos sbb pop out cmp cmp ljmp dec mov sbb fldt ret divl fcomip or xchg sub jle add mov mov push xchg sbbb js mov mov bound pcmpgtb cmpb xchg inc incb loope sti jo cld adc dec lret add pop in or neg fmuls pushf or cmp pop into adc arpl lds xchg mov jecxz adc movsl cmp (bad) and or xchg in test dec ret or add cmp adc sub jecxz arpl push outsl enter jmp xchg pusha in xor and lret test adc adc and les push je stos cmpsl and mov rol push jnp lahf daa lea rolb (bad) lock cs cmp loopne cmpsb mov pushf and les (bad) movsl and data16 lsl mov clc or jecxz push rorl stos adc (bad) mov test push das out cld inc pushf lea mov or (bad) push sub sub pop hlt incb nopl clc inc mov jecxz mov bound xor cli das and seta fdivs sbb lret xchg fadds jl (bad) aam sbb test jl adc dec cltd aad rol imul adc xorb ret sbb mov mov xor jl add idivb inc movsb push pop repz mov sar mov cltd roll (bad) ffree xchg mov jns pusha xchg push mov and mov aad lahf pop je fdivrl test push test (bad) mov add orl pop xor dec out push loop (bad) xor sub or mov insl add popa call xchg fcompl sbb loop add mov sub mov xor das push jae pop mov and pop add push out mov mov mov inc rclb movsl adc in repnz mov cmp repz push add (bad) pop or xor lods adc gs cwtl pushf or (bad) fdivrs sbb mov jae jno add in push jo cli int sbb mov arpl sbb push jo jnp and leave jns iret stc lret or jg rorl push shrb mov int3 insb insl sub jg pusha cltd mov scas cmp push insb popw shll mov rorb adc sbb data16 fdiv or mov pop pop mov fbld sbb mov dec inc movsb movsb cmp xchg pushf and (bad) mov cmp inc inc push inc inc fcoms jmp leave call scas mov push add push sbb sub sbb adcb jbe add mov xchg xchg mov pop aaa sbb pop cld xor (bad) sti cmpsl or jl or mov aaa pop pusha pop add fcoml and fstpl mov xor pusha xchg pop add je sbb pop mov pop adc loopne inc outsl push rorl dec mov mov push arpl pop iret (bad) in clc add jp roll dec lcall mov mov cld shlb xchg decl add mov adcl call arpl leave sbb xchg shlb popf mov mov mov std sbb push sub or test push dec push (bad) mov mov jns js and mov inc mov dec and mov add out repnz (bad) pop mov lock pop lret adc mov arpl and rolb (bad) in test or dec push push addr16 dec je mov pop sub nop xchg add sti jnp and jg cmpl mov movsb and pop fdivs insl dec cs xchg xor or xor adc sbb mov xor pmovmskb ljmp cwtl xchg push stos mov sbb pusha mov mov mov add mov popa ja push sbb xchg and cld rcrb sub call adc ja sbbl and dec cwtl jg sbb (bad) pop or pop adc sub icebp fnstsw jecxz orl jo cmpsb loopne mov mov int gs fcoml xor (bad) mov dec js or adc or pusha and sahf out shrb mov jl inc jbe ret ret xchg sti sbb cmpsl stos rolb mov stos cmp and mov inc mov inc inc mov adc mov cmp test lods gs dec jno sbbl test out movsb dec test push xor or (bad) cltd in mov sbbb mov jne add xor rcll jno sub jne pop xchg addb push pop mov pop add repz xor fwait nop icebp add mov les fstpt pop adc mov mov test clc or nop loope push xchg pop jle mov rcll clc add (bad) std pop fwait dec push in dec add xor (bad) lds pop add in mov (bad) or sahf xor pop bound fistl jl add cmp std xchg loopne add in (bad) aaa mov dec in andb xchg push mov (bad) mov adc mov lods pushf adc cld mov test mov and stos add pop cld mov cmp xchg lcall inc add cmp orl jns je or mov sub pop pushf lds mov inc (bad) ret mov (bad) mov cs pushf icebp (bad) nop or sub loope cmpsb inc mov push enter sahf or aad add inc mov je push cwtl jl adc (bad) repnz mov sub mov cmp loope pop dec icebp pop xor push or xor pop mov add jg daa xchg (bad) mov js lcall cwtl popa cmp xor fwait loop andb dec add cld cmp in je test sbb movlps cwtl loopne inc mov adc (bad) jmp push sub nop jg iret or pushf dec push push pusha cmp mov shrb out adc add lret (bad) shll lcall and add imul insb mov mov cmp hlt (bad) jb mov xchg call jns mov mov popf and or and inc movsl pop pushf mov sub decb xchg cmp icebp call xchg add dec into push or mov cltd fldenv jp add xor fdivrs sahf call mov lahf stos push test sub sbb fwait jo inc stc scas pop mov dec test inc cmp push sbb sub inc mov xchg jbe mov ret lcall or add pop gs add inc fs pop xchg add dec jo cmp fwait stos mov cwtl cmp or getsec push (bad) and cld dec and (bad) dec jo das mov mov stos int3 mov int mov inc cmpsb ljmp fnstcw xor xchg sub pop call add loop aas mov cmp cld das xchg insb lock dec pusha jecxz test (bad) cli js stos push pop sbb popf push sarb enter mov mov add pmaxsw and dec hlt rcl mov sub cs dec addr16 pop lods orb add jp loope jle aas orb int3 sahf cmp mov loop orl repnz jno insb andl add fucomp cmp sbb fs and lcall jecxz add jmp and cmp insb (bad) pop (bad) mov cmp es (bad) lcall divl adc ljmp icebp add cltd lret into das ja push xor mov dec inc rorb pushf xor sub loopne xchg iret nop xor outsb jl (bad) jnp push cmp int3 dec popf xchg in add out (bad) mov pop cmp hlt jb rcrb dec mov test sub jg js pop xor js lock mov mov mov pop sub into (bad) fiaddl test dec sbb mov pop pop test adc arpl or (bad) lret xor jo test xchg inc sub aam lret xchg fld push pop stos jl mov lock sub xchg add test cmp push push sbb cmpsl rcll jecxz sub mov call sub xor sbb add or add mov cmp sbb xor mov or aam xor jne xor sbb sbb ret dec xchg add push mov flds in jbe add rorb inc das jmp jo push xor xchg loopne scas and xor xor or and fs scas push dec xor cmpsl jo mov sbb rolb in sub sahf xchg push in call jo mov jnp scas mov popf and pop jb pop imul in sbbb mov mov add xchg cwtl jge adcb jp nop out lods xchg ljmp cmp test jnp xchg and xchg int3 fs aas adc xchg cmp xor mov cmc decl inc mov (bad) popl imull add movsb xchg pcmpgtw jnp pop in aas push fiadd lods xchg lahf sbb push sbb push mov or aam sarl dec mov std divb adc aaa (bad) out jo pop inc add dec jg and andb dec in dec mov daa call out fcomps jl loopne cmp mov dec pop movsl adc pusha cmp ucomiss pop je add adc sub ret dec and fiaddl adc call cmp fscale jg lahf fcompl xchg dec dec and jo ja jb xor push push sub adc lods push inc push lods and clc push push xchg fs mov cmp add dec insb shlb xchg dec adc mov sub stos cmp and movsb sbb fnstenv pop mov mov in fiadd rclb (bad) mov mov inc je adc pushf xchg cwtl pop pop cmp test popf std pop push pop add add popf add and ss lahf cmp lea push mov xchg notl jno test mov pop inc (bad) jno imul xchg xchg mov cmp xchg cld inc xor dec je sbbl popf lret pusha adc pushf mov pushf adc dec std clc add insb ja aam mov mov inc pop dec push out (bad) sbb test jle inc xor cmp lret mov jge dec push sub pop bound pop mov push inc std daa xchg xor scas jp push faddl jg jl pop sahf pop jmp xchg pop sbb cwtl xchg inc cmp xchg in stos out mov into dec mov movb cli pop cmp push fdivl xor fs xor hlt add sub fwait call dec xchg add inc sbb push cli inc out cmp push xchg les xor adc mov fdivrs add in sarb cs insl jmp inc or inc ret pop clc incl into inc loopne jo push stc jbe sbb pop ljmp xchg (bad) cmp add lcall roll inc ds xchg popf fwait in add jne pushf jmp sbb pushf push inc jmp test in jnp jno pop pop js add cld xchg js add repz pushf cwtl mov inc jbe dec xchg out jno,pn nop rcrb scas push mov inc add dec pmulhuw neg add and add std in fldcw sub or lcall nop mov mov shlb inc xor pushf clc seta dec and or mov adc adc pop dec in sub aam inc adc sub xchg cmpsl or sbb jl loope and (bad) movsb cmp add rcrl loope scas std sub mov lea sbb mov movsb pop mov lcall pop and dec push pushf (bad) fidivrl mov add lcall sahf push (bad) push xor cmc aam sarl inc test addr16 mov nop sbb adc fwait test movsl cmc je and dec ds js subb inc faddl inc mov movsb sub mov pusha fistpl lcall mov cmp dec add add mov xchg aam adc and xchg mov dec push test xor push jo push or mov xor xor imul pop imul adc inc rorb inc push cmp nop out or or jecxz add xchg out pop dec rclb xor jae stos jmp and cmp repnz xor jb fiaddl push cmp fs and cmp mov mov repz push cmp je fcoml xor scas adc popf jae mov dec popa outsl cltd in mov negb or sub sbb leave cmp inc mov jbe test cld add xor and scas mov mov loopne lods movb sub call arpl inc imul jno inc pop in mov test data16 jno add pop arpl and mov cmp pop add gs test sbb shlb sbb inc shr movsb and jne clc loopne mov fmuls (bad) push push insb xchg push inc sub mov push stc add mov or movl lods test or adc insl in pusha in xchg xchg test mov sub fsincos or and mov and push addr16 stos call scas inc pusha lds or sarl fwait subb add div inc cmovb cmp lret pushw iret pusha std ljmp sub mov cmpsl andl nop jbe add sahf mov cmc or push test xchg (bad) mov sahf mov aam push in xchg xor aam pop add jae cli push xchg imul cmp sub xlat (bad) ret int stc dec mov imul xlat add mov pop inc test push add pop adc cmp repnz test test pop and mov dec or push cltd test jg inc out and dec cld loope xrelease sbb adc adc rcrb (bad) xlat jge cmp push xor pop inc dec adc jl sbb push sub stos inc adc inc add mov cld push mov addr16 sub sbb repz cwtl fwait xor adc not jnp pop repnz and jns sbb adc (bad) pop cmpsl inc inc add jp lret xor int3 sbb add movsl mov add mov mov or subb sbb add push adc adc mov add inc scas ret jle add repz (bad) das and pop movsl ret add cwtl jae or orb push stos cmp xchg cwtl inc and dec jmp inc xlat xor (bad) and mov jb xchg adc xorb scas mov jae test imul out mov adc paddsw (bad) imul xchg xorb leave add pop inc stos mov in das aas pop sub mov xor fistpll daa dec pop sub pop dec add in xor addl je aas add fdivrp inc push fadds add jbe aad jmp xor dec cs mov xor and mov (bad) xor addr16 cld xorl adc adc xchg push mov lods das fsubrp push test xor adcl adc int cmp addr16 sub add stos jae add inc out int3 (bad) aaa jae or xor fsubs xor mov or pop lea (bad) movsl inc out and mov sub pusha (bad) fidiv test adc movsb movsl andl and rclb pop adc lds imul out or push loope in addr16 (bad) jno add xchg mov addb fstp aam add add push xor daa pop or mov dec cmpsb add add cmp fs push xlat dec jle pop cmpb aam (bad) xor cmp ret dec add cmp add pop xchg sub mov sbb call add xor inc popf (bad) xor mov mov adc dec sub sbb cmpl push insb push and jl add dec pop jne les adc xor int3 dec js xor jmp movsb cmp or es push sbb add dec sbb ja lcall popw nop mov mov int3 or fsubl and movsl fcompl sub xchg orb imul clc jne push ds fiaddl xor lahf daa and pop (bad) or fiaddl test je jp jg les loope add push shl popa jo push mov inc xor dec add push jns stc out (bad) adc push subl mov rcr xchg pushf mov iret add jg test aad xchg jo push jns mov (bad) testl pop lcall inc in aas mov adc cltd or inc mov sahf inc add scas aam sub add aaa push jg ficoml jecxz addr16 dec cwtl out ss mov add and (bad) mov ds fadds dec xlat loopne inc aad clc int3 rclb xor sbb lods mov iret into xor inc inc jg outsl cli js sub mov or cwtl add xor lds fnstenv cmp or bound cmpsb or int jmp test aam imul insb nop xor pusha (bad) aad test (bad) je add inc fidiv test rorb paddsb outsb clc push mov inc test jmp ret dec sahf adc je fidivr test sbb jg sub xchg add mov sbbb fbld adc int sbb xor les pop xchg add in add pop sub xor xlat or add aaa incb hlt and (bad) mov call jle dec xor shll jecxz xchg jp (bad) cmpsl jb (bad) pop cmpsb ss fsubl add mov (bad) xor mov inc dec add jl subl sub clc fadds insb test add mov mov add fidivr mov test fcom cmpb (bad) xor mov stos sub and adc add int lds fldenv dec pop lods push enter rolb loope ret loopne popf int into jb nop xor pushf adc nop adc es sub add add loopne dec jp or scas adc cs pop xchg je les pusha fidivl xor mov adc add xor aam popa add cld and xor hlt jae add sbb int mov cwtl bound stos shlb mov jl cmpsb or adc or scas adc push add pop outsb subb pop int3 loop sbb push push ds push int3 mov inc js mov cwtl loope icebp test sbb stos xor seto call mov jo add xor inc fyl2x loopne sub rcrl or xor sub out push (bad) fildl pop js mov arpl (bad) aam or push daa ss hlt negb add push shrb or nop stos or clc dec xorl out sarl mov sbb mov pop xor and loop xor popf lcall cli lret push push cwtl and inc pop mov xchg je xchg dec int popa add add ret pusha je xor jle sbb adc adc pusha rolb loopne xchg dec arpl inc dec int push iret adc and xor call fimul scas jle sub add xor mov mov add ficompl xchg add adc sarl add sub ds aam xchg pop lea mov cs lds jo les cwtl jle inc movl mov das add mov adc (bad) push sti pop hlt or and pop rorb cmp cs xor call fs jg xchg test fiaddl inc in hlt xorb mov lahf mov int3 xor xor dec sbb cld add mov or sub aam in xor inc inc dec andl xchg fadd sub jo sbb cmpb fdivrs rclb das or pop es sub aad mov cld sub mov or jle leave test inc mov add and loop push mov sub pop sub xchg add mov repnz fiaddl mov fsub inc add cs inc (bad) loopne es mov cmp xchg sbb ljmp call fmull (bad) and into or call add stos imul rorb inc xor inc lcall or cwtl inc jecxz nop les adc fisubl ret dec call data16 adc les mov push enter pop xor and dec jg pushf jne xor jmp int3 ja and popf call loopne xchg cmp sub mov scas adc call sbb sub rcrb adc adcb call je cmpsl sbb aam push bound inc cmp mov orl leave sbb sub xor pop dec lods add in jno in lods jmp mov rcr mov push jns es inc mov mov bound loopne dec xchg adc push jbe movsl cltd popf adcl push (bad) test cmc ljmp addr16 aam fcomps mov dec adc and pop and pop adc jle mov popa dec or xor and (bad) mov scas adc aam in push pusha and xor subl sbb mov es pop data16 cltd push es test iret into jne cwtl hlt add add leave xchg jl push in (bad) test in fmuls imul inc sti pop subb inc dec insb or and imul gs into enter mov les pop test sbb pusha mov dec mov fisub (bad) lds ret in xor mov xlat or (bad) sbb cmpsb dec enter push or pop out jnp cltd dec inc xchg push and add icebp dec mulb push leave (bad) mov addl stos add in jge iret add popf mov or dec mov mov add ret leave push sub or pop sbb push sub sub mov adc (bad) (bad) mov out pushl out mov xchg push sub xor xchg (bad) adc (bad) xor jnp adc pop pop mov push sub outsb jl je cmp leave orb jns pop scas sub mov cli pop adcl pop and test mov pusha rcll bound test pop jmp mov xchg cmp add sub inc stc je cltd (bad) jbe add mov or push lcall pusha or aad add push outsl push or out push push dec lret sub dec scas hlt mov or addr16 add out rclb (bad) ficomp jne add enter adc clc test jns and daa int3 aad add lcall xor lds or add add adc sbb mov mov pop stos mov outsb les mov push pop and sbb pop mov or add or sahf fs xchg add push lcall in in mov jne jg fist sbb pop fisubr jo jne mov fldcw std cmp daa in and addr16 jbe aad pop xchg jecxz push rorl sbb jmp add js stos jbe dec bswap gs mov add sub lret (bad) divl hlt outsl add out ja negb mov add addr16 sbb dec or repz test mov xchg cmp inc rcl (bad) int3 sbb in fistpl push mov stos adc and outsb movsb sbb daa into movb jmp enter lahf int3 (bad) and add sbb push mov cwtl add adc push mov in pop pop or adc adc or mov dec adcb sarl xchg pop movsl xchg push fild cmp push dec in shrd sub add and inc enter (bad) mov outsl add fild fcoml mov or jmp mov rolb popl lret push rsqrtps jae mov roll jns jmp xchg mov out adcb sti add (bad) loop mov xlat sbb dec frstor jecxz push adc ficom out dec pop call pusha fwait cmp inc or int cmpxchg aam call xchg cmp cmc ja hlt (bad) sbb sbb enter add push mov jmp jns add inc or aaa addr16 add ljmp jle gs mov movsb jp popf lea jo cmpsb data16 or sub fidivrl mov enter xchg push push in (bad) icebp jno xor xchg clc hlt lods lcall call (bad) adc enter add test inc push mov pop cmpsl jbe insb cmp sarb int3 test pushf jno xor xchg ret addl imul les std sbb add dec add cmp or add mov das call push in pop into cs fcmovnb dec inc add mov mov daa add and stos cli enter jecxz pop xor bound ds add adc addr16 and or add pop mov popa cmp sub sbb mov movsb or mov (bad) jno addr16 enter jno loopne or ds or xor subl mov xchg inc nop cmp pushf and inc adc mov movsb pop test (bad) (bad) jg mov and or fwait push pushf out movsl dec std mov push fdivs inc cwtl pop testb pop scas pop test or in sbb and jl lret jne (bad) xor popf (bad) in inc add xor cmp mov pop mov add mov pushf jecxz out pop add jnp cmp ret call sub fsub mov cmp mov nop rolb sub mov enter aaa sub push add out dec in dec rcl or push loopne lods and add inc mov push dec rcr aam pop shl hlt test jge xor call (bad) dec outsb dec mov out std add fbstp or sahf mov mov stos addl imul pop jb adc cmove das repz xorb cmp add add fmuls adc sub and ud2 xchg out adc call loop add and cmp and subb and lcall daa inc mov xor cmp aaa (bad) jnp mov mov add aad loope into jp mov sarb jbe in cmp cmp inc scas dec xchg rcll jns sub jge and lea push xchg out pop mov cltd ret xor jb arpl mov orl (bad) sub fs xchg or dec jae (bad) add push push inc cmp jo pop fdivrl popa inc (bad) inc (bad) xchg or inc sbb sahf mov fsubrl xchg (bad) clc sbb bnd (bad) or jo push rolb add sqrtsd mov cmp sbb popa cmp add orb popa test and je test std push xor or call and dec stos jne add mov cmpsl push es js jge mov imulb daa mov into pusha cmpsl add sbb mov adcb iret push jg mov notl and jns enter dec push scas sahf adc fistp jb and push fadds lods popf sub ljmp or push cmp dec add mov lds sti and pushf test outsl dec sbb xchg fsub cmc mov push in mov adc add add mov inc mov es into lahf rcrl and lret push clc pop fs bound jmp sub cmpsb sbb das inc outsb test mov mov add cmp (bad) sub mov or jmp adc and adc push or inc je pusha push test pushf enter pop pusha imul mov pop xor sbb cmp cmp dec mov xchg pusha psrad (bad) cs lahf add jnp adc sbb mov mov sub xchg pop cli inc insb mov xchg push sub rep or xor add scas (bad) jbe dec mov stc and fmull loope add sbb add cmp insl inc sbb hlt add jmp test and inc les jbe fisub enter push int3 scas mov jo,pt aad lret popf jo or inc arpl aam mov pop int and or mov mov cmp push rcll ret (bad) loopne push test jb jl add jbe inc mov jo lods sub test add andb jmp push add mov lock enter lock xchg adc lock cld add xchg sbb ds xor popa pusha xor stos movsl jo cmp and outsb push add test ja ret pop mov push xor xor into cmp xor (bad) jecxz les fwait sub xor enter in add or pop dec add mov mov xchg pushf add add out icebp rcll xchg data16 adc call jmp xchg mov adc andb inc loopne and mov cld push cmp jmp adc adc inc bound lret cmp sbb xchg xor adc push cmp mov imul mov xchg adc push test or mov mov les sub and push rorb icebp cltd sbbb jbe (bad) inc pop mov pusha neg sbb sahf mov rclb shrl add pop popa mov popa xor and pushf push clc sarl or and dec les add mov inc add add data16 xchg xchg mov inc nop cmp cmp lret cmp add adc aam hlt cli add sti dec scas inc mov test add inc and cmpsb nop dec pusha xor and rcrb test loopne ljmp rol popf (bad) (bad) aam (bad) hlt sbb cwtl xor int cltd xor push jae or ja mov sar xchg add and mov add call add insl std mov push jge in jg jb add pop inc iret test clc popf in lock mov mov sbb ljmp orl cmp loop sbb pushf dec scas mov push and in data16 aaa mov inc push or (bad) rolb xchg test test mov xor cmp mov xchg mov push jb and insb clc call outsb imul dec mov push jmp fmul fs adc or (bad) mov fsubrs cmp mov addb nopl or insl mov in xlat dec add push jp enter cmp dec xorl loopne mov sub fisttpl lods je dec inc fsubrs xchg cmpsb and inc lret dec and push (bad) sbb mov xor loop adc ror sub add dec popa sub scas jl dec mov pop ret cmpsb repnz sahf pusha xchg jns xor aad xor or xchg add nop out dec mov jmp or inc loop sbb mov mov in push adc jbe dec sahf add sub push cltd fsubrl cmc pop test pop ret cwtl dec loopne lret cltd sbb cmpsl ret fisttp adc dec clc je,pn lods mov fidiv ficoml test mov inc es xadd cmp loopne div mov or sub das (bad) sbb lds mov hlt and push add adc test inc nop adc stos add xor jle xlat in cmp mov pop inc mov (bad) rorb sbb mov mov fwait jns dec push add cmpsl out lcall loope orb or (bad) cwtl inc (bad) pusha dec push inc pop sbb cwtl and data16 pop and or jne pusha test add pop (bad) cmp daa add jp inc adc mov lahf nop clc je xor adc push bound add push fldcw cli add das mov outsb fs pop pand mov adc orb sahf jle add negb xor aas add hlt ds (bad) or push (bad) xor (bad) sbb adc add mov sbb pop pushl js add add imul lret sbb jecxz cmc xlat iret data16 (bad) rorb add ret out ljmp int3 ss hlt scas jg (bad) andb add sub mov mov sbb (bad) imul les cmp rcl push or out je mov imul cmp (bad) call dec or cmpsb lret enter repz callw push cmp (bad) cmp inc push aaa dec inc push push mov das sub call push dec cmpsl lret popf xchg inc jmp dec adc or addl or add sbb mov add mov jns add lds sub push push lock aad xchg xchg or arpl or add cmp xchg movsb pusha pop sbb (bad) aaa popf add xchg cmc ljmp js nop or int shrb lahf cmp add xchg pushf inc test std add and lret dec or cltd test rcll add cmp ja and push daa addr16 mov js clc outsl jmp dec cld sub or or or clc dec pop nop aas aaa inc roll cmovs std lahf sbb pop dec xchg dec test int3 bound xlat pop insb sbb jno xor in or aad or mov cmp aam xchg fs je add add rcr and mov dec push movsb ret mov pop jae fwait jbe out add (bad) mov add icebp repz cmp push test and subl sub and jg xchg xor jle xor add and mov or jmp jae cwtl (bad) (bad) adc mov sbb lcall sub adc add fiaddl mov add mov (bad) sbb adc xchg data16 lods xchg dec mov and pop ret in dec cltd clc (bad) movsb dec mov jmp and in add aas ss add aam lock add add adc cmp fstpt pusha or fs mov je cltd pop (bad) mov test xor nop mov push inc mov mov leave mov fsubr out mov cmp cmp addr16 je adc gs call and xchg pop cmp pop sbb es in or mov test es addl cwtl in cld or (bad) nop test ret mov adc dec inc mov pop inc sbb add xor nop add outsb adcl cmp jo je sbb inc jne aaa std cwtl scas add pop enter movsl push cmp test test adc add xlat and mov sbb rol ffree pop movlps jle leave sbb adc mov ret mov xor js in shrl jo cwtl add data16 cmp sbb lods xor adc pop xchg jo mov adc clc cmp pop and pop pop add add xor mov out aad test and add xor (bad) popf pop xchg addl daa les sub aaa adc sub pop negl adc dec mov cmp mov and push push adc cmp imul xor cmp clc cmp xchg je fnstcw xor cld lods push mov sbb dec lods call mov inc xchg sub jmp or clc out cwtl xor in subb xor test jmp xor push pop ds mov add dec ret push sub adc push add sub enter imul or add jno add (bad) lret je sti fcoml cld adc mov xlat cs pop push test aad and lods fmull dec (bad) mov mov rcl jl cmp in sub cmp popa (bad) enter stos lods adc add xchg sbbb push mov out mov fs pusha cmp sub stc add inc in inc lods insl cwtl push cmp (bad) icebp and mov repnz mov mov xchg sbb cwtl es and cmp push pop push loopne mov bound push aam add pop hlt das xchg sub jbe ss pop (bad) hlt aad cmp and adc add pop pusha lods repnz and addr16 cmp sub stos adc ficompl push out cmpsb cmp sbb sbb xorl int add cmpl (bad) fdivrs test aaa stc mov jmp cwtl xchg mov add fcomps outsl lcall sti sbb sahf into lahf jl add push stc inc loope dec inc or xchg mov mov adc imul ret xlat dec inc and ja xor lret mov mov lock int3 ret leave add jmp or add insl mov add aam add imul pop pop sbb dec inc mov lahf imul xchg rorl add jle scas arpl mov add or or add (bad) stc clc in iret in dec add sub sub stos add sbbb pop xchg jne mov mov mov pop xor pop subl lock cli add cmpsb dec xor call add in sbb mov xchg and add cli fbstp int gs outsb shr rorb add scas or jecxz mov add or mov xchg sti add fadds mov dec push add mov or test in call mov sbb movsl inc enter xchg xchg (bad) mov pusha pusha icebp out lods (bad) fidiv adc mov mov adc sahf ret js insb iret fisubl popa or add and mov dec fidivr (bad) mov popa cltd loopne in loopne sbb xor lods test ljmp xchg mov fdivrl add and aad fistp test add jmp sub and inc and mov mov js or mov not mov test add shrb add xchg and and lea lods lock test divl subb add f2xm1 rcr jno sbb add mov jl cmp rolb sub sbb cli xchg cmp (bad) mov out repnz jle xchg add sbb mov (bad) dec add jnp jmp lahf jmp imul cmpsb jmp mov push in test loopne mov sub pop and mov adc pushf mov test (bad) icebp xor rep nop cmpsb and cmp or ss fcoms jecxz call pop cli mov popf out mov mov stos push subb cltd cmc dec jmp xor adc (bad) jbe fdivrs sbb lsl mov fs faddl adc add cld cmp orb loopne pop fcoms and adc enter mov (bad) mov mov insb cld test pop icebp cmp hlt jl and mov xchg inc into imul fadds pusha jno lock sub push adc xor sub add loop xor repz pop or stos mov adc cmp push dec push xor adc pop int cmpsl jecxz loope mov inc in test ds push mov cmp insl mov jl push pop xor or xchg mov leave adc push push nop pop dec sbb xor xchg or sub and jo and mov sti leave adc or sahf lods icebp sub inc lods dec jl mov xchg lods lods dec add mull pop test dec or lds adc and test fs dec sub pushf add fs push inc mov mov rorb and jbe push mov lahf cmp and push and add push adc daa xchg xor test xchg add loop movsb stc mov rcrb sbb aas insb mov inc test shr fcmovnb jmp inc repnz mov (bad) xchg insb add adc sbb jmp imul mov push int3 test inc xlat inc mov outsl imul fdivs nop mov sbb cmp add jmp outsb fmuls imul cmpsb inc inc add inc push das mov popf icebp cltd orb test cmpsl clc sti rcl arpl loop add ljmp les lods fldenv xor or jne psrld sbb push loop mov push adc and and (bad) adc sub mov push mov pusha movsb stos add xchg add jno push sub cwtl pop adc inc pop in mov xor adc cld inc (bad) movsl pop sub loop add gs xor inc rolb push xor inc sbb lock jo sarb fnstenv divl adc sub sub pop lea push xchg xchg and hlt enter or xorl jbe pop pusha (bad) or pop mov lahf outsl jo inc push and sub push mov nop xchg cltd dec adc xor push faddl mov aam ret push pop (bad) sahf or cmp add shlb fs and xor adc adc inc add sub sub (bad) inc enter and mov push mov pop dec pop mov mov push (bad) icebp sbb nop loop dec mov outsl jbe sub add and cmpsb push sbb sbb xor adc add rorb mov dec cltd xor andl adc js addb inc dec push mov mov dec dec and xor cmp test xor rorb jecxz push jo push (bad) mov fmul icebp jmp lahf les and cmc (bad) dec sbb xor int3 std push arpl xor inc dec mov lahf stc lds mov imul loop inc out in jns or shlb shr je mov cmp daa inc gs cmp xchg inc mov sarb push dec and mov sub sbb in sub notb scas adc mov (bad) sbb out dec sub mov xor and outsl mov js add hlt clc mov and xor rorl mov data16 xor mov adc push or lahf mov or add ljmp cwtl lret sub mov adc lods xor dec mov clc imul inc adc push aam jo push adc push int3 mov or icebp or lret and lock fmull push lods xchg clc add xor add sub test sub jecxz dec push lods adc mov add inc add or sbb rclb or mov xchg dec mov aad mov clc fs stc xor (bad) dec cmpsl (bad) sarl out rcrl cld inc or adc cli rorl ljmp inc sbb rcrb sub adc cmp adc lods int3 inc test out add les popf (bad) (bad) push xor push mov xchg cmp and add pop mov mov xor jmp mov mov push ss sbb cwtl mov inc je push dec ret or mov xor iret pop loope ss adc mov xor imul stos (bad) iret les mov aas fdivrs xchg ds cli es sub dec push sbb cmp inc mov fcomps mov das rclb fisubl pop dec icebp in shr add call adc jg sub cmp sbb aas (bad) lea adc je (bad) popl in sub inc and push in mov outsb sar push adc sbb or lock pop sub jmp xchg lods mov jbe jo aas dec push cmp imul add xor dec mov pop in add sbb rolb sbb sti mov mov test add cmc and add repz sub (bad) dec sahf add dec loop jg dec dec adc add inc shr sbb xchg lcall sarb js pop leave xchg test adc loopne mov test push pusha fstps mov shlb xchg lahf jb or inc loopne je pusha out mov mov mov iret or mov lret add lds cmp dec bound fstl add adc hlt xor jl test add push mov xor fdivs pop add mov and call cmpsb fidivl or mov add dec inc popl mulb push xor mov xchg inc adc mov mov jecxz cwtl insl sbb inc jno push jo aam dec (bad) xor sarl xor xor hlt cmp xor xchg sbbb jb dec dec pop loop add (bad) bound add mov addr16 aas push mov pop jp,pn jae clc test dec data16 pusha dec or (bad) mov jno outsb push ret inc repnz incl loop (bad) (bad) sbb roll push cmp pop sahf add cmp stos jnp pusha and es repz sbb xchg fistp add jbe in pop and push ficom pop shrl arpl daa (bad) jo mov sbb aas sub stc fldenv push push mov xor sub gs cmp daa add mov jl xor push adc (bad) cmpsl mov sbbb (bad) push test icebp jae and or xor sbb sti or or add insl and pop lahf stc xchg or fadds and xchg dec subb push inc pop jecxz mov xor push adc pop (bad) sbb (bad) icebp sbb arpl mov loope lock sarb push and in or inc push or mov xor ja jno aam pop dec mov sub ret outsb idiv rcl sub pop aas mov jo scas sub xor test xor add leave sbb add (bad) stc ljmp inc sbb jbe inc add pop sbb push jge fs movb outsl inc lock fisttpll in jo dec cli push xchg xlat sbb test aad pusha xor rol loopne mov mov xchg out sub clc sub dec addl and add leave adc xlat fisubrl call cmp push jge int into imul pop shll lret sarb rclb icebp lock push add inc in sarl jns cmp pusha dec cld aam inc add xchg jne push jns push jae jmp hlt xor test pop sub aam or sub cmpsl mov and sub cwtl xor xchg add enter jbe sbb inc cmp mov les mov push push nop xchg add sahf inc pushf adc ss xor in pop adc cmp push mov nop adc jo mov pop or dec movsb pop cmpb mov mov lahf add adc sbb pop push fcom add mov or xor aas dec subl dec add cld insb cltd fistp add in sbb inc pop arpl (bad) js rorb and jns and sub ljmp icebp fiadd or mov xor adc cmp pop rolb ss je or test sub in push rorl and scas cld or scas adc jg or push cmp cmp loopne adc pop lds adc add je push add bound pushf inc xchg mov sub inc test rcrb mulb and test pop xlat pusha cli jno cmc add add push mov idiv and dec lock bound insb (bad) xor and loopne lret fldcw xchg add cmp sbb leave add push (bad) lea std popw sub adc test cwtl rcrl int pop inc xorb mov inc cmp push mov dec rclb and test pop sbb cmp mov inc and imul pop xchg aad push xor sti add pusha and push in sub sbb xchg cli hlt add add sbbb das dec add mov adcb pop push aas (bad) in sbb jb inc xor xchg dec insb xor clc xchg add call mov sbb pusha pop cmpsb jae rolb sbb loopne (bad) jo push push ror or xchg dec mov xor jno (bad) rcr fist push icebp dec push in movsl cwtl or inc js faddl xor (bad) lret scas dec test fistpl shrb mov mov in jb scas nop inc mov mov pop xor and (bad) (bad) mov sbb sbb lea sarb jae and pop and push pushf inc pop sbb xor imul mov or pop rcr and fdivr out push mov pop call rolb or int3 mov jl lcall mov push inc pop mov mov divl jl test mov aas rolb xor inc lret mov sbb pusha dec adcl mov mov mov jge cwtl roll cmpsl cwtl mov stc cwtl push cmc test mov repnz cmpsl sarl xchg add dec out ljmp rorb sub sahf adc fs imul or repz lret ljmp xchg inc inc icebp (bad) inc sub fwait sub mov and push pop mov (bad) test cmp lea cld cld xlat dec repnz mov mov sbb adc xor lock xchg clc shll sbbl and adc pop dec call movsb mov push pop sub test test dec jmp rclb add loop test scas cwtl pop add dec rcrb mov cs or push add cli push js mov dec pop punpckhwd xchg dec and xor mov mov pusha jl dec out test (bad) testb mov int movsl inc cwtl or xor sbb sbb je psubb test or cmp push cmp add xlat (bad) loope lods xchg es sbb mov pusha mov pop int3 js adc xor lea shlb gs push clc add les or cmp push mov movsl lea pop lds and pushf adc pop pop jp and dec or mov sub mov adc cmp adc add fbstp test subl mov xor inc lret out js pop cmp xor jp xchg adcb push sbbb bound and rolb cmp inc mov mov pop insb sub dec sub sarl dec mov add adc addb adc clc jl adc mov adcl adc mov dec lock arpl andb les add in ret pusha data16 cmp xchg sub rclb add les push push call mov pop dec mov dec in push sub pusha add nop int pop (bad) icebp xchg fldz adc or or push or ds cmp lea cmc add mov out push out mov cs lcall add es es inc dec int sbb shlb nop or (bad) jnp push das lcall cld add insb cmp sub or (bad) (bad) sub cmp and js xor insl push call pop bound mov out and pusha add or (bad) push imul cmp xor lock add sbb jbe fisttp dec jbe or js sub aaa mov fwait add idivb sub mov xor xchg iret test call push and mov adc jmp rcr rcl sbb inc loope xchg cwtl push inc ja dec (bad) jmp nop lret inc dec push mov jns sbb inc cs cwtl inc ja cmpsl sbb sbb imul aas jo cwtl mov add cmp push dec adc inc and rorl push adc lcall aam call and adc adc outsb daa mov les mov adc push in out (bad) pop cmp pop fistp jmp out inc std int push jge xor js cmp xlat mov cmp dec stos push insb add les xor daa sbb and mov cmp cmp mov mov bound pop jo mov or clc cmp mov shl push pusha pop (bad) out adcb xchg flds mov xor xor jp pop jg sti mov xchg add leave insb mov imul jo aaa subl pop lock fwait mov mov cmp adc repnz jne or mov mov add add popa hlt dec add mov mov nop repnz fadd testb jmp xchg test in or out fdivl sub or rolb enter les stos out sub or scas fisttpl arpl xchg dec and (bad) fiaddl js mov faddl or or jo mov lods add sub aaa repz pusha jmp ret sti xchg pusha sbb dec cmp dec fldl add clc iret movsb stc mov cmp cwtl bound inc fldl sub gs adc dec mov movsb addr16 loopne mov js mov loop fsub push jmp jl cmp movsb xchg xor pop cmp subl jl push mov sbb icebp cwtl int3 insl in adc sbb pop mov mov test xor lock jecxz fmul sbbl sub pop jmp jg add lock jge lock xchg or les push sbbb jbe decb je pop xor inc push stos enter or xor cld sbb pusha or incl push cld adc mov js sbb rclb shr adc or push inc sbb and in (bad) xor fs pop add in mov movsb cld sub or inc and in cmp add (bad) (bad) and aas mov (bad) pop std fcoml dec in orb mov sahf cli sbb push testl and iret insl dec call add out or push les push les sbb subb sbb in dec mov rcrb leave mov pusha adc subps inc movsb xchg mov cmp loop mov add rep mov rcll pop out mov pusha iret adc push and add push clc xchg jge test jo sbb xchg insb add mov pop int3 cltd les sarl add jo dec inc adc divl leave adc push cld push gs test mov lods cmpsb mov adc and sub (bad) sbb mov adc arpl adc xlat push add xchg cmp mov or add lods leave xor mov cmp fild aas add sbb add insb and in xchg ja mov add jnp jno xor into or shlb mov cmp fwait inc fsubrl repnz or sub push faddl pop cli push lods hlt dec mov inc mov and insb cmp inc test jo sbb jo clc mov fs (bad) (bad) pop (bad) iret dec or out add out or pop daa add dec xorb sti xchg sub and pushf sarl movsb or ds jmp add add xchg je pop dec xchg rcrl push loop and stc test jns mov addr16 add test xorl or push cmpb add lock add jmp in jae (bad) loopne fcomi es adc and outsb xlat fistpll inc movsb stos adc jbe test in cmp cmpsb lcall (bad) push inc add bound add inc mov sub sbb pop xchg add jmp loopne sti rorb fadd (bad) outsb adcb loopne push mov inc sub inc mov add sti into jmp or adc hlt mov fsubl cmp inc jb jo rorb int3 and mov shrb outsl ds and out pop stc pusha cmp pop cmp pop jecxz xor fldl cwtl rcrb mov jl lods jg jb iret loop pop sub or cmp pop fwait movsb imul int3 push add fdivrl rorb hlt push xchg inc xchg jno lods pop leave sbb pop add imulb rorb std cmp inc lods out sub test cmpsl pop jmp push outsb ds sbb nop cmpsb loop outsl xchg sbb mov mov push mov dec mov fstpl arpl xor sbb mov cwtl (bad) sub inc fdivrs add aad jmp int3 sub addr16 xchg leave cli shrb lret push bound cmp jo mov movsb or mov dec push xor jl xor adc xor imul jnp pop lcall sbb add bound incb rcrb or fdivs jbe pusha shlb les dec icebp and rcll sub inc fwait shll xchg cld dec nop testb jg sub mov sbb xchg js fwait mull mov cwtl cmc and xchg insb inc stos adc arpl cmpl rorb xchg repnz adc call (bad) cmp sbb cmc mov cmp pop push cmc pusha mov push mov mov push push fs test jecxz push rcll pop push gs pop lock mov ficoml adc f2xm1 dec dec jmp push sub add iret adc add movsl arpl mov repnz fcmovne sbb cmp or or inc push dec dec rolb enter mov ss add cwtl pop cmpsl je rcrl add test gs xor out loop jo lods push cld imul pop sbb cmp xchg (bad) push lcall fsubrl int3 mov mov les dec xchg dec and cli call dec cltd push jnp sub out add xchg cmc lods xor test (bad) int3 ss jns or cmp inc test adc push jne clc dec int3 push lret pusha mov lea add ret popf mov cmp je add push pop js add add lcall jae push jmp stos push cli leave sbb cmp xor and leave and pusha add pop adc jb mov jge xchg cmp incb fistl cwtl push xlat mov data16 mov or or add mov xor test pushf pusha fcoms hlt and xorl add cmp and dec dec sbb movl cmp add xchg xor adc add xor mov pop mov mov dec adc mov push fnsave loopne aam or xadd stc jmp push sbb xor ficoml push fsubrs divb aaa addl fdivrl shrl fsub sbbl add stos repz or pop pop cmp cltd push stos add sbb dec add stos in push mov add xchg and (bad) dec pop adc mov nop cmp fmuls xor ret adc sbb insb xor xor mov mov pop test add lret push call ja and int3 inc jecxz lret and add repnz inc rorl jno std add test lds test mov add xchg add xchg or and cmp pusha iret xlat add test or fdivrp push ret push cld mov mov enter lret pop loop add test int (bad) fnstcw dec push pop dec hlt pop cmc fiadd jne (bad) xchg lods inc jl in cmp in sbb pop add fnstcw ror pushf mov push push imul add aaa sahf cs js add test out sbb or mov call pop inc xchg movsb repz add mov adcb int push test and nop (bad) mov es jo and int jno mov sarb (bad) lods xor mov test pusha rcrb mov rcrb add lret pop fildll jbe cmp dec lods flds mov add lahf scas mov mov dec gs adc pop nop or outsb xchg mov bound inc jae pop int lods popa addr16 add dec sbb in fcmovbe shlb push into scas mov dec push mov (bad) push push (bad) or loopne add push (bad) mov int xchg js add cmp inc jno mov and xor int adc mov or (bad) mov mov out cltd (bad) adc inc add in test jmp cmp push add rolb sub ss adc push mov add add (bad) in je add ljmp cmpsl cs pop add test push xor push push clc inc int out mov jge insb in and mov into xchg inc pushfw in and lret cwtl cmpl dec pushf (bad) test xchg adc and shrb mov pop ss dec add (bad) leave cmpl or in test ds stos sub cmp in sub fisttpll inc int3 fadds jno or sub jbe pop or ror adc nop clc bound adc fdivs lods lock mov sub addr16 movsb in sub lds icebp shlb add sub movsb push xor in in (bad) inc cmpsb (bad) cwtl shl insb push shll adc lods in js dec dec psubd fcmovne daa xor add out fsubl add in add (bad) inc mov cmpsl shrl xchg (bad) and pushf rcrl (bad) rclb aad pop add test rorb mov stc sarb outsb xor xor add dec add int int3 xor sub or and push lock jle gs cld or or icebp imul popf cs sub cmp jb sti movups mov xor xchg add nop dec insb fiaddl or xor jb pop xchg or outsb movsb mov mov sbb gs pop xchg adc out pop push stos add sbb mov add mov lods enter mov roll add lahf and iret xchg sub cmp mov out push loopne (bad) popa cmp rcrl int3 inc pop pusha xchg imul jb stc adc sbb add or mov cwtl cs outsb jbe add and pop pop pop test xor mov inc sbb push cmc jno mov xchg (bad) aad xor jecxz or mov mov and xor sub mov dec push mov pop pop and lcall add outsb js jo add or mov sub mov add pop add pop sub xor stos faddl dec stc dec add scas pop xchg (bad) lods adc hlt iret or inc inc sbb or pushf jmp mov add or test pop add sub xchg and add sub out (bad) xor sbb scas test iret mov add xor add sub ljmp orb sbb int xor pushf cli cmp mov je gs pop xor xor ffreep pop fnsave in sub loopne mov das mov popl and dec enter sti int xchg mov pop add fwait cs lds enter subb cmc es mov mov (bad) and cmp sbb push sub and iret mov sbbb stc cmp sbb xchg stos xor cmp ljmp movsl sbb int3 pop test pop jo mov inc dec daa test add js jmp adc mov xor push test mov rolb mov push jge add mov (bad) cmc je data16 enter fistpll popa or ds push scas cwtl pusha popf inc sbb (bad) cmp push data16 pop cltd test xchg movsb add jns (bad) fwait movsl nop pop movsb push and inc dec pushf fisubrl test imul pop mov adc rdtsc movsb aam rcrb (bad) (bad) xchg add (bad) scas stc inc push or nop or mov mov in test enter or mov fsubrl outsl or lods mov cmp and sub add mov add shr loope inc or cld fisttpl inc enter push test xchg shl stos test in add and inc call xchg push mov gs in enter rcrl push jae pop mov cmp fcoml enter maxps (bad) jnp mov add shl loopne push pop sub or into xlat add mov sbb pop (bad) je mov cmp roll xchg jp xorl rorl pop dec lock sarb inc adc les mov dec movsl add shlb int out and lods sub lods add push lock lods dec xchg or inc jmp ret or in mov adc mov das (bad) push push mov sar imul stc xorb mov int fs outsb add (bad) sbb cmp jnp push xor inc mov cmpsl pop mov inc push jmp lret test enter in test gs add clc xor push into (bad) ss inc lods add int ret rcrb mov inc or clc popa leave adc punpckhwd cwtl or fiadd jns inc mov lods das xor xorb add cs or test xchg lret mov inc js leave cwtl lock gs je rclb pop fsubrl mov aad jl out or clc pop lret adc adc dec or xor mov lds xor icebp shlb add loope xlat inc and add es xchg test aam js dec add jb and pop lods mov and nop or enter in (bad) jno inc (bad) ret jae dec and inc cltd mov mov mov imul adc mov sbb add imulb push gs sub movsb js in dec sub mov bnd (bad) loopne inc add mov sub xchg in test pushf mov rcl sub inc hlt clc mov sub leave and adc fildl sub mov ss mov pusha imul sbb push dec ljmp daa addr16 aaa psubw es subl jb push mov mov jo inc in adc add shll gs popa dec adc (bad) in inc fnop js inc scas xor addr16 pusha test jp pop sbb mov xchg mov call (bad) fildl or push leave inc sbb pop jns pop mov add bound mov adc fstp loope xchg rorb nop adc pusha jl mov decb cmp mov sbb faddp test cmp add push push imul (bad) mov mov xchg xchg push out mov sub jno test rcll lds sub in loopne or jge cmc sbb jp call arpl or out daa gs push inc sbb pop loop add inc (bad) dec push push int test xor cmp hlt push and cld test push add call ret pusha lock and mov lcall cwtl adc xchg cmp into js enter int3 mov jmp add cmp dec test push mov test mov roll (bad) dec (bad) lods int3 sarb movsb pop pusha sbb les repnz adc pop push ds xchg out lcall sbb push sub add in dec and insb sbb stos daa bound push mov adc sbb scas mov (bad) shr adc cmpb (bad) aam (bad) stos subb adc nop test rcr xchg dec mov pushf mov sbb mov cs mov push dec jle and in or or gs xchg in push and mov and or mov idivl add push sub lcall add cli inc aad rol in test and scas aam and test cld loopne mov (bad) inc imul inc test dec (bad) sbb popf andb add leave cli pop sbb add (bad) or das cmp rolb inc mov or sbb adc cmp dec stos xor and fidiv adc mov ds jp decl cwtl rclw and clc push icebp cmp adc lahf fldt adc or push mov ja and fsts addb rolb jle daa ss jecxz inc es add insb icebp add lcall push arpl stos and add or call fs add hlt sahf cmp pushf jbe jne clc xor xchg pusha cmp loopne mov fistl int3 xorb and adc and add rorb jo (bad) jo scas push push push cli rclb mov adc mov inc inc and sbb ss inc js or sbbb (bad) pop adc dec aaa loopne dec mov inc mov test pop (bad) (bad) iret fisub lahf aam xor add xchg (bad) ds pusha pop test pop jecxz or lahf imul or xor sbb clc movb pop or pop lods test (bad) pusha xchg sahf rcrb aas lods add sub push jb xor js movsb xor in pop shll jecxz xchg push xadd (bad) shlb call jle xor sub outsb dec inc and add or fsubp addb dec lahf sbb rcl fs add adc and std jbe sbb cmp adc jnp mov femms sbb sbb out and or adcb and jle pop ja sar adc sub dec outsb push inc jae (bad) xchg (bad) imul sub mov ret lods inc pop mov fsubs lea out es and add hlt imul fs shrb mov push xor cld xchg add outsl sti pop divl js js adc mov test adc or cmp and push mov or add cmp ja movsb sbb add mov adc push sub inc push pop adc adc call dec add lcall mov push mov jge subb xchg xor xchg (bad) in add sahf cmp jb sub testl dec xchg add out out inc testl cmpsl adc nop inc dec dec mov or cmp adc xor dec add (bad) cs xor in or add dec pushf stos aad stc mov pop ret sbb test lods adc addr16 int add mov sarb clc cltd cld sarb stc and and insl dec xchg in cltd push psubusw fisub adc out add leave ret clc pop test pop cltd sti andb sarb xor or icebp mov jl adc push pop cmpb mov ds pop mov push popf (bad) adc add test sub dec test xchg outsb adc and mov adc mov pop into arpl cmpsl nop dec cmpsb jae lahf jmp cwtl add out push cmp cmp enter mov inc pop and push xchg cwtl mov mov cmp test lret push dec rorb loopne icebp inc xchg add in popa and add gs mov cmp inc or clc jmp (bad) cmpsb arpl push movsb (bad) push loop std pusha int loop mov in inc lock ljmp pop lcall loop (bad) add jbe popf lods into loopne sbb cltd jmp (bad) sbb adc xchg mov mov sub (bad) or add pop aas mov out push and lret pop dec mov mov jecxz popa fistpll neg push sbb std or ret and fcomps or or lret add clc xchg sbb xor inc int and idiv xchg sub outsb cwtl andl inc out divb cmp aad push pop add push or mov mov mov in push stc add push lret shrb mov jl hlt mov lock outsl test out iret cmp or add inc lahf xchg add mov mov notb movsb adc or pusha mov enter adc xchg and and cwtl add shrl lret cltd call aas pop out js adc dec add scas push jp add dec mov sbb dec mov xor or sub (bad) and into mov add in les add clc out enter movsl inc adc xchg jne popf add or sarl movl (bad) fadds dec pushf fcoms jne outsb inc add xor mov sub das pop enter ja mov push pop xchg pop xor sub mov push sub cs add inc jp fisttp daa fiadd jg inc xchg push xor xlat add adc into mov xchg jns insb das add xchg adc test xor sbb jnp add inc bound add and xchg nop jae sbb xor in push nop je xor push inc jo add cmpsl xchg in cmp push dec lret jmp bound push or outsl nop enter jno add repnz sbb jl push hlt lods push mov jbe add adc cmp aas push and or add mov mov lcall or adc push call test jg mov cwtl scas push sub in insb sarb clc cmp or cmpsb adc jae lahf and pusha ficompl sbb pop fstps lds loopne dec mov aad sbb jp adc inc xchg sub clc jg (bad) aam fcoml (bad) push and sbb out xchg ret (bad) mov movsb mov (bad) sbb cwtl pop lock ss cmp mov and ret push sub push enter jecxz push orl push pop into test sarb pop lret sub cmp or lcall insl data16 adc out pusha push out xor or xor pusha stos cmp sub jg mov jle push scas enter dec add js jae and sbb xor orb push test fstps inc sahf adc cmp sub inc fdiv fildll std sbb jecxz popa lret add sub int3 push mov add sub test push sub nop scas lock (bad) adc pop lahf nop clc push cmp (bad) dec xlat and add insl shrb mov mov adc pop xchg (bad) popa pop lea pusha sarl sbb jecxz test add or xor xor arpl jae ret or or mov jle add js push loopne cmp popf cwtl jne lahf icebp adc in mov loopne adc enter ret out xchg nop add mov scas addl lcall adc sbb in jb dec xchg cmpsb or je cmp (bad) fadd lret movsl mov clc es sbb rorl add and push (bad) shrl adc data16 and and jns js push js xchg aam mov and dec sbb imul xor sbb and adc sub cmp in pop or cwtl adc (bad) loopne xor in mov mov mov fcmovnbe dec loop mov cmp and gs lds and inc fistl jmp cmpsb dec lods sbb enter (bad) adc xor xchg icebp inc cmp push push and add daa fwait xchg out xchg add pop push sbb cmp dec jle in sarl push mov andb repnz fs dec sbb xor pop subb inc mov push fcmove rcrl jbe ret add xor inc rcll dec and cld clc subb mov orb push mov inc sub pop or xor xor inc (bad) mov mov sub test add pop addr16 sub sti or xor dec mov adc mov fisttpl (bad) or (bad) sub das adc xchg mov xor pusha add out addr16 push adc pop mov je add jnp scas pushl pop mov mov in arpl stc icebp daa inc (bad) mov stos daa mov mov popa mov push or or pusha jl push adc push jg repnz jo jb aam js cmp add cs and sbb adc lcall jg jb pop jp cmp rclb pop xor sarb scas cmp aaa sub fmuls fdivrs aaa ss or dec enter cmp or pusha icebp ljmp sub dec xchg push les dec cltd inc add mov sbbb cmpsb cmp cmpsb sub adc jno xchg test adc mov sbb adc adc movsb dec push mov xor and mov jle sarl int3 and mov mov dec add test sbb mov dec xchg add pusha pusha inc add lods xor loopne (bad) pusha scas xchg test lahf or scas iret test and les clc mov pop jb repnz icebp dec mov call lret and xor sbb add aad or rolb jb fwait and add jns insl inc pop lods inc int3 pop lock inc mov in push outsl enter or and das cmpl mov mov xor mov movsb xchg movsl fcompp or dec int3 sub les loopne fstpt mov adc sahf pop xor jo lock adc aaa jg sbb or adc sbb hlt push and jb inc fsubrl das pop sub sbb (bad) cmp sub cmp stc jp xchg test sub xchg gs add push jbe test icebp cmp add or pop mov out ror dec ret xor sub mov pop inc mov pop iret fdivrp (bad) xor pop movsl jo dec lods in adc mov push inc (bad) dec mov pop aaa and mov test pop clc shlb fmul shl ja add fxtract and sbb add mov jno mov push test dec adc adc into mov dec aam mov add jg movsb pusha xchg xchg (bad) and ret mov (bad) xor addl mov or scas jns (bad) es adcb xor mov popa test inc (bad) rolb ret mov popf out push jle aaa dec repz push fidiv sbb push stc int3 or ljmp mov jmp or push outsl aam es xchg add int3 sbb sub inc lcall sbb nop addr16 inc ja rclb flds aam sahf test enter mov push loop pusha and (bad) ja or int js add test pop push sbb and jae mov sub or jle je sbbl inc dec ljmp scas ja sbb in arpl add push push xor mov arpl rcr push movsb push cmpb push ds push movsb shrl shll sub aam cld add mov mov (bad) fdivr addb les jg or jmp inc or add popf mov xlat mov dec daa das scas push adcb cmp (bad) std pop add aam fldl bound imull add xor add push dec repz (bad) mov mov sbb gs cmp pop movsl rcr xchg out cmp push icebp sti test xor std pusha ret adc (bad) sub ret sbb movsb es mov inc pushf add je pop (bad) call inc fcoms loop ja movsb rorb mov test nop mov inc fcoml sahf cmp adc sub inc popf dec decb mov mov push hlt mov cmp loopne call jmp pop stos call jo add negb pop mov push mov sub pop xor pop adc xor cvttps2pi arpl pavgw add and (bad) rcrb add addl loop scas and dec cmp push sbb and scas aad mov mov sub divps js inc adcl xchg comiss sbb imul or add add imul adc cwtl enter es movsb mov mov add xchg fisubrl loopne and mov dec and rclb mov dec adc sub cmpb les je xchg dec xchg das enter push cmp mov in dec jle mov je test mov pop add in add daa fadds daa fiaddl sub cmc push adc inc mov sub es test mov pop adc push add je lret or test pop data16 inc or xchg inc inc jmp fneni(8087 out push dec mov (bad) je mov fstpl mov adcb fisubr pop idivl lret rorb pop pop add outsl sbb repnz xchg fwait insb or mov xor sub ja and xor movsb sub sahf inc data16 add neg mov int3 mov adc xchg scas lods nop or sbb mov lods mov pushf enter cmpsb pop fidiv jo cmp jle arpl xchg call je adc or and faddl or out icebp push pop jl cwtl push xorb mov sub dec les xchg jo add xor and sub test movsb pop adc jge inc (bad) xlat les sbbl jmp or xchg (bad) adc arpl fdivrs std dec dec adc ret jnp add test jge xor and push xlat xchg loope xchg std movsl mov pop sbb mov adc xchg outsl mov (bad) mov mov jecxz xor mov mov insl dec jg leave pop iret cmpb leave imul inc dec mov out jle xor movl pushf dec movsl inc cld pop insl add push cwtl jne jae xor add popf mov and loopne out cwtl jne clc add leave push dec xchg test fldl repnz (bad) dec sub dec shrl inc clc cmp cwtl mov lret es xor ljmp fdivs mov or stc das in mov or cmp xor clc cmp mov or sub aam push push decl push jns (bad) adc popa (bad) and xchg sbb nop or inc push and mov dec cmp cwtl sbb mov addb adc xchg scas dec int3 div add pop insb addr16 cld andnps xchg add and dec inc xlat add cmp mov xorb xor test rcrl dec loop lret or js push icebp loopne stos call sbb lahf (bad) xor insl call pop clc mov (bad) or lcall adc popa ret pop negl (bad) rorl je je pop lret xor mov loop dec pop add leave push jmp ret in adc jecxz pusha nop sub xchg lret popf mov add sbb or sub or cmc leave jge jae js pop andl hlt push jp sahf mov dec mov dec clc push xor pop mov repnz or and mov mov insb ret add mov lcall jl xchg mov add lds (bad) or js in pusha (bad) cwtl xchg add push das rclb test lds cmpb pop or enter cld sub or pop and out repnz pop xor inc mov cmp add jmp pop pop inc (bad) xor rcll cmp fmuls sub fisttpll sbbb push cwtl shrl and cli int3 and out fwait mov add in mov adc mov or test lock pop pop mov and cmp pop jle ret pop out jl pop stc ss and push loopne inc sub inc sub (bad) mov mull aaa out add inc adc adc insl and push adc popa jne je push cli fsubrl and adc lret jge aam (bad) push mov pop push stc mov insb fs inc call add jle dec xchg pop loop sub sub aas pop in push es mov mov mov das adc cli in jmp mov or lret cmp sahf or gs orb in xor pop aas mov fldcw adc rorb add add cmp xor or insl sub frstor shr jne roll iret inc outsb add pop pop mov pop and pop mov dec add lods mov dec add (bad) sub push or add adc clc dec xor xchg aam (bad) dec enter push loop add or xlat je cmp sub insb inc cmp pop jle ret mov inc mov cs ret add push sbb addr16 push or xchg test sahf adc push test les jns lds pop imul out jge inc sbb xor out add sub fwait xchg add inc aas lock pop add sti popf and dec xor xor xor cmp ret shrl in push js rolb pop lret das mov repz in jno divb lock mov add iret mov cmc mov sbb loope roll andl mov mov (bad) sbb jmp in es or dec cwtl pop inc inc dec into in cltd daa nop sbb pop sub mov sub mov dec setns push orb popf cwtl push cmc or push in test in ror jge pushf add jb sti pushf xor jnp jns inc cld ds xchg sbb mov add addr16 ja aam jns sarb push or sub repnz sub push insb xor cmovle movsb cli add jns mov jg or in sbb aas mov mov push xor cmp repz lock (bad) jmp mov (bad) add (bad) jb ds outsb push pop lcall inc or test add push cmp cli (bad) js andb pusha (bad) cltd dec cld cmp aas (bad) call test xor add cwtl mov sarb push mov outsb ret or (bad) adc subb and or cld cmpsl sub push jbe out lock xor sbb fwait pop mov loopne dec psrad mov fisttp mov divl fs data16 sub and xor and pop or cmp pop mov test push cmp mov nop movsb stc adcl int3 push cmpsb ret cmp mov aas add btr arpl adc adc subl or movb in and adc inc push int dec adc jmp xor inc mov add loop aad jae add mov and and call icebp std scas jne push out sub andb nop add cmp loopne cs popf jecxz rorl cltd pop or and and pop rclb daa add xchg fsubrs lock mov cli add dec jno mov cmp mov popf add loope xchg xchg push ljmp and sti cmp xlat push test test push (bad) add fidivl int3 addl in inc jns push cmp rcll or mov add lahf sbb xlat in pusha pusha xchg cmp xor xchg and std push nop mov fisttp das pop pop roll add out mov sbb jge push mov pop add mov mov loopne (bad) mov add in lret jbe sub mov outsl add frstor loopne mov rcl mov push (bad) not js add mov (bad) xchg adc scas aaa and fcmovu orl add jo lcall and add (bad) mov xlat fmull rolb inc flds enter pop stos mov pushf or dec lods add (bad) mov lret xchg adc and aas scas mov iret adc and inc test (bad) push shrl outsl cmpsb add xor push lret rorl rorb pusha ret hlt mov push cmp dec xchg loop add sti and or enter rcrb cli jb call xchg cmp js movsb adc in in dec das dec mov mov adc add adc aam (bad) ja clc nop sub out inc adc or push add sbb fcomps push das mov pop pop jo lock xchg fnstcw lret add mov push enter xor jp and sarl jnp push cmp mov imul pop push jno loopne (bad) movsb dec js sbb popa push pop cmc in push xlat stc and sub hlt inc addr16 enter test daa fldl sbb pusha jo loopne fs lahf shlb mov xchg inc nop add popa jbe lods clc jmp and add scas jecxz inc lret call xor inc les icebp add cmpsb movsb in add aas dec shll hlt shll or outsl adc or (bad) repnz mov fxch add mov repz jmp lahf jecxz pop pop cmp sbb (bad) imul xchg mov les rol add cli pusha xlat and sub outsl xchg xor sbb add jp dec xchg out aam inc jns add iret sbb dec pop cmc clc adc add dec mov les fucomi dec or lahf adc sbbb addl mov push xor lret popf mov call lock jl jl or cmp vpmadcswd or mov pop sbb or and cld les push loopne cmp cmp sbb cmp or sbb adc out mov xchg inc lret adc mov and or test cwtl nop (bad) movsb mov jl mov jl add imul xlat push mov xor adc into dec mov jecxz and lahf and sbb fst loopne adc cmpsl lret jae add adc dec add loop dec jns fucomp mov test cmpsb es sub sub xchg iret xchg push xor orl mov sarl nop jnp xchg mov hlt lock nop mull push mov xor xor or dec push mov insb dec or adc mov lods js add and xchg jmp mov mov sbb sarb mov (bad) pop sbb inc jbe (bad) lods or mov aad stc cmp xlat inc mov rolb stos les fnsave xchg and sbb (bad) imul insl fs shl or jo push inc les int3 push adc mov imul adc xor xor mov cmpsl roll ficom cmp xor mov push mov lock mulb or les xchg pop shrl in test mov jae,pn lea sub xchg add movb add test lods xor mov xchg outsb (bad) adc jo (bad) repz mov inc push pop jl rclb add mov push ljmp and push xor dec nop xor mov lahf and push inc out push fdivrl jno ret xor jns,pt mov or sarb mov jp jno adc loope dec inc mov nop out dec sub movsl xor xchg cmp sahf fadds xchg and jb clc inc and or pusha xor rcll dec jmp call pop cmp movsb mov dec test add pop or pop xor push aad xchg sbb insl int3 mov add aas rolb sbb xchg fadd loopne add mov roll xchg (bad) and xorl mov js and and inc inc jns gs add pop jmp loope mov adcb xchg dec xchg je loope sbb add (bad) push jp (bad) mov fmuls adc mov jnp add in les pop aad or ss sbb dec fdivs shrd pop xchg sbb icebp mov add iret pusha or sarb inc sub sbb cwtl mov movsb mov nop je inc dec or mov inc pusha popa and add xor adc pop adc xor mov repz mov sub adc rorl fmuls and bswap mov nop adc mov stos mov and adc addb enter pushf or xor mov orb add add jns je jb or xchg mov mov add scas test insb xorb lods add cmp xchg pop pushf adc stc inc push jg mov mov in mov push test sub push js popa outsl int out add pop jo icebp ss pusha push stos es and dec sub lret in call inc (bad) jne cltd push std push xor push insb pushf push subl pop pusha fsubrs nop or adc orb (bad) lds daa (bad) nop push addl pop jbe xor nop cmpsl enter hlt lcall dec dec daa xchg ret add mov mov test mov nop ds les adc call in push sbb adc adc adc leave lock add push loope inc jmp cmp inc stc in add sbb clc and dec and push xor or sub and fcmovnu push in or cmpsl test mov rorb pushf push inc orb and add pushf mov sub inc cli dec inc mov cwtl and mov inc ljmp cmp add pushf stos mov sbb and mov pop and cltd repz es sub shlb pop imul roll pop pop xor mov inc iret clc inc add or mov out pop pusha dec dec xor adc testl xor or aaa call lea inc fldl sbb or jmp test or push ss in js push mov mov sub test or dec ds xchg or (bad) mov jne sbb adc and addb xlat push add popa fisttpl push stos test shl mov push shld pop sbb addb mov (bad) pop xor jnp jmp add or xor add push pop push add movsl cltd sub out cmp notl inc xchg aaa add add in or faddl sub fs inc xchg sub mov adc dec aam leave push dec mov jl sbb sarb inc cmp pop int3 mov xlat cmp push lcall mov rcrl sub popf rolb outsl mov push sbb jo xor push sti cmp cmp jge enter dec mov and add push pop and xchg add (bad) fcoml icebp mov pop and insb jnp (bad) subb sahf enter (bad) add push mov adc push pop or (bad) aam call jnp push out test or inc push faddl and int dec fstps add clc pop cmp out push mov iret xchg (bad) mov fcomps add in push xor push insb outsl ror aad xorl sub ret mov sarb stos ret sar pop in outsl and rorl push jl adc or inc or jl mov jp dec push inc (bad) stos add mov test push cwtl mov (bad) lahf or pusha push pop sub push out stos and (bad) mov mov loop push adc testl mov ds cwtl sub fwait adc dec (bad) cmpb cs sbb jg sub loopne mov sbb iret inc mov fiadd inc push (bad) or pop fucomi imul (bad) arpl mov leave add add lcall orb adc pop clc add xor push in sub lods adc test test mov mov (bad) xor xchg (bad) xlat and test dec es lret sbb inc xor ljmp loop pop aam dec jae movsl mov bound add ret icebp loopne or stos jg dec (bad) push test cs jmp mov adc mov add leave pop and xor fist sbb mov test test or loop sub add inc test loope mov adc mov jecxz jl cmp cmp mov push roll inc test js pop cli mov pop loopne push psubsb stos pop cmpl mov and (bad) int jno jle add ret push adc mov mov rorb cmpb cmp adcb add jmp xchg xor cld ret add pop in jmp mov pusha test add mov add xor out adc pop push cmp cs or lods cmp inc dec pop icebp inc or mov push adc dec movl repnz mov add stos call out xchg inc adc enter xlat mov jno dec mov mov pop or cmp dec clc mov inc xor add pop dec inc rorl popa xchg in sub sbb ret pop lret inc jl jo xchg pushf aam call adc popl call test sub (bad) aad jl xor je push ss cwtl add push xchg mov (bad) or dec add fwait (bad) and sbb in lods sbb and (bad) mov xor dec xor lcall fistp shrb outsl pop push add movsb inc sbb push hlt cmp int3 mov sbb cld mov cmpsl ja insb scas mov dec out dec nop pop mov lds jl pop pop push pop insb cmpsl cmp enter jmp lock shlb mov and dec inc jnp push add lea stos and jb push push cli dec xor mov push fnstsw nopl pusha inc aaa aad cmp scas push repnz (bad) xor in add (bad) (bad) hlt out cmp addl neg decl call or mov insb (bad) popa mov mov adc insl popa nop sbb or adc xchg fsubl adc add out ja adc and mov and and mov aad int3 je mov popa sbb xor lahf sets mov add sub jo mov cld outsb jp nop aad cli add ljmp loopne bound inc and add adc mov inc add test lea sub stc mov ret ds add (bad) movsb push adc shll mov add (bad) test lock pushf inc jne adcb dec dec or add xor mov pop pop rol mov add dec sub js inc je jmp dec (bad) nop and sbb bound pushf mov cmp lahf leave dec pop sub push sbb inc sbb pop jb push sub rcrl pop movsb push jmp cmp mov js dec jge loopnew,pn hlt inc inc aad lods or inc jb or sbb sbb add adc lea aam and fbstp pop mov jecxz jl pop jne lock mov pusha adc and std pop cs mov xor xor dec ss fistl xor in imul mov add inc mov and daa fdivp mov mov xchg push inc enter inc add stos inc jge add icebp mov push pop mov stos cmpl add inc and add (bad) in and adc push mov or adc add pop aam ss adcl push mov lock add adc xchg pusha and push fiadd or rcrl cmp or push add push add loopne test or pop popa clc roll xchg sbb int3 sub fisttpll pop and mov dec cwtl stos sub das mov lock adc xchg insb cmpsb adc shlb xor xorb push pop jns (bad) popa push ljmp leave lret rorl aas mov flds js add inc mov dec xor mov mov cmp inc sbb jmp inc lods int nop xchg and pushf test jl or fs cpuid int3 pop sub test cmp push mov inc clc dec push xor adc mov push xlat call nop loope test cld jns dec sub and into mov adc mov pop mov lock js loop dec (bad) aam mov or or (bad) pop dec movsl mov sbb jo or xchg mov (bad) mov scas mov int3 js mov in or xchg sarb mov in (bad) xchg sub sub inc jae mov test inc in push push mov cmc cmp xchg mov fcomps inc jmp xchg adc addr16 mov call loopne pop sbb inc cmp mov fildl ret mov imul push pop xor xor add sbb dec mov orb or jo (bad) and mov pushf in sub cld add cmp sub pmaddwd fmul mov xchg sub dec push mov push and xor shlb jp jae pop out ljmp lock add repnz test pusha out pop pop lret lods or pop in loop out push fist faddl sbb movsl test or cmp in and dec sahf push pushf and xor pushf (bad) sub sub fcoml dec fsubrl jns push or (bad) mov (bad) or and jo in mov mov lahf or leave and cli inc nop xlat or mov jl xchg xor pushf cmp lods outsb out ja cmp jl or ret sub sbb bound incb dec scas arpl insl mov enter pop dec test loop cmp mov lret inc jecxz call dec int3 orl jb leave stos in and cs cld mov and jecxz mov sub cld dec cmp test sub xor inc fcompl or add or mov movsl or lock xor int3 cmp pop je push jmp jl xorl mov jle aad ror in out adc mov add aas mov xchg add in inc les int cmp movsl mov xchg sbb jmp shrb mov (bad) adc and clc dec xor ret shl adc rolb push mov pop xor mov adc mov mov fbld or or in nop insl mov xor xchg loopne or xchg cmp leave mov jl mov xor (bad) int (bad) or xlat sbb and (bad) xor jb sub cmp mov add pop and (bad) imul xor mov pop std in ljmp rorb sub pop push xor js jle shrb fsubl sbb popa cld in hlt sahf mov cmp sbb test add jle xchg sbb or fsub out sbb mov add dec pop int lods (bad) int3 xchg test pop leave sub mov pusha lods je (bad) enter aam lret (bad) aam or sbb cmp adc push test dec pop hlt add push inc fildl or aad mov xor and sbb int add rolb pop aam cld xchg jp add js daa aad adc daa outsl mov sahf push mov mov jle mov add and pop test cwtl add push call or add icebp mov xchg nop pop dec dec mov lods call lock and and cmp and xorl jbe inc or adc test lcall mov add cmpsl push or test jne fs add pusha push data16 push jns,pn jl movsb (bad) cld inc sbb dec test sbb cmp xchg push jo lock jge lcall pop je sub inc ja lods inc mov push push cld dec push pop outsb sbb mov mov stos pusha call sub lret or (bad) fldt or clc push lods pop pushf push push mov cld sbb xor cmp mov icebp pop xchg idivl in adc out inc mov sbb and or and mov repz dec cwtl cmp pop in xor xchg push adc cli fsubrs cmp jp mov sbb je mov jb or pop stc and clc sub scas mov push push dec lcall mov adc mov or popa push mov cmp cmp dec push xor dec cwtl cmp pushf mov outsl dec inc fmuls clc mov mov (bad) xor mov and int3 add dec call and sub xor jo (bad) cltd push icebp addr16 roll push insb jmp fadd test fcoms push dec lret pusha cmp nop orb push jo mov mov jp test xchg jecxz movsb and pop cmp cmp rcrl cmp pop vmread sbb inc or and pop clc pop push minps or loop or add mov out fstps fsubl in push mov bound lcall inc mov (bad) cmp mov push mulb fmuls xchg mov sbb cld (bad) jno leave pop add dec jl insb es test mov repz call sub hlt mov iret push add mov hlt test add xor insl mov stos adc dec pop sub rcpps mov nop add dec add xchg mov out push jb arpl jle je out test and and cmp and popa call or sbb (bad) and repnz mov sub arpl ljmp insb mov sbb inc cltd test in ja fidivr xor add dec mov shrb (bad) je sub dec bound enter vmovlpd mov mov dec shlb insl cmp mov cmp loop mov pop (bad) dec ret xchg or in sbb cmovp mov push pop dec insb lret add insb jo dec cmc insb pop or mov fsubrl or pop cmp es or dec xor in xor ret or fcom inc fwait gs pop mov pushf sbb and call xor sbb sub adc inc adc rolb popf pop mov dec adcl and inc sbb shrl and pushf in mov repnz or push adc mov fnstenv test push adc pop ds push mov and in push pop pop pop nop inc aam jns sbbb sbb mov and dec mov and dec add push sub mov dec scas and (bad) adc mov pushf pop sub add cmc or repnz hlt mov in bound jno mov jp mov daa inc mov mov nop sub inc rolb adc mov pop lea pop call les xor imul mov and outsb test inc add push pusha push (bad) sbb inc add lcall xor pop sbb cmp in inc push arpl or aam cmp cmpl addr16 out add in dec dec jle (bad) lock outsb adc fcmovnu add xchg and or add xor xchg in cmp sbb add jno in (bad) test or cmp data16 adc adc pusha mov lds es add cmpsb fimul out faddl and arpl in pop mov pushf sbb adc mov add fs test xchg push test dec mov mov lds and movsl push add add outsl insb pop int3 in call icebp or movsb in jbe and mov pop inc les mov shrb mov fnstenv mov mov pop mov ljmp pop leave jle stos inc jo mov inc stos add fmuls les lods mov mov fs orb rolb loope loopne xchg and fmul xor mov and push mov or cmp pop test push jg lcall clc sub dec fs jo lods xchg shlb push bound pusha xchg sbb cld test sbb mov sarl lock push adc dec nop add fsts mov lea fbstp fistl push add insb and bnd push inc push hlt or subb stos pusha int3 sbb fisub push cwtl push pop or mov mov nop mov add cmp pop lods arpl mov adc lret push add push out pushf out clc test out and adc mov pop nop insb (bad) ficomp jle dec push iret push (bad) xor leave add jmp nop push add add or mov ds or cmp pushf push cmp and fidivrl push push lea sub enter shlb push adc les mov std add xchg xchg cmp aaa mov jae lahf pop maxps jle mov mov pop lds loop lock int3 add js rorl cld and pop sahf mov int3 cmp cmp test nop out stos add (bad) insb pop inc cmp out push xorb jb push add movsb sbb xor test mov add ret cli dec push add pusha aad xor rcl call add jb inc fstl sahf add mov loopne cmp cmp incb fwait or or or and jno pusha jns or imul and add sahf cmp aad adc imull mov imul sbb lds sbb (bad) cmp push iret gs sarb cmp hlt movsb andb rorb insb add push call pop jae add imul imul cmp call push mov test push inc mov fdivrs add xor icebp sbb ja jae add fildll iret sub rorb imul inc out inc mov icebp cld movsb mov mov mov or jo loopne popf test iret jne sub icebp rorb dec or imul notb and xor clc mov xor adc sbb inc dec mov and movsb nop add das mov mov lods cmp pusha call or inc cli daa hlt iret or adc mov mov xor fstl cmp and aad mov pop sahf pop fldl (bad) out inc aaa std dec pop mov sbb cmpl pop sub fnstsw inc sub adc mov add xchg pop add jno xor add int push pop nop add add les lock decl shll icebp xchg out loopne dec sarb imul add add pop dec add lea mov pusha add dec popf ret push in jae lahf fs pop enter subb stc add pop icebp lret cwtl psllq stos aad es mov lods mov dec rcll add roll pop lds push inc mov add jne xor and scas xchg (bad) pop inc shl mov jo cmp mov pusha and fiaddl lret das pop pop out in jl nop cmp cld push pop testb jns mov (bad) mov xor push inc mov mov int jl adc pop mov cmp imul adc push mov add popa or cld lods mov add xchg cli mov sub mov xchg inc shrl adc dec pop push jg outsb or mov rorb (bad) mov rcl mov clc mov or dec pop imul test add mov xor inc nop int push leave xchg push fucomi rclb jno inc movsb lods and and and out push dec xor add loopne fist into cmp add out insb in adc push sbb add and mov mov dec push jle and xchg je fisubrl add aam jne add ds or pop jno fcmovbe sub imul lcall or sub mov mov push xor fbld dec cmc lret jo or jnp cmp sbb hlt pop sbb les es fidiv aam add dec mov adc icebp hlt out add jae dec sub add cmp xor ja mov lods imul inc mov (bad) sub pop pop pop xchg in rorl cwtl adc sbb into js into pop add or adc or mov in hlt mov xchg mov xor pop xor and nop outsb shlb jmp mov push scas out xlat inc cmp xchg inc enter or xchg xchg pushf add jle xor outsb js push (bad) lock sbb mov nop call sbb push adc clc jno imul pop add add aad fwait icebp pop (bad) cmp ljmp push lret or test add popa test sahf xchg in test pop mov (bad) sub loopne or push fcmovnb aad repz push gs add push add call andb cwtl sub cwtl movsb movsb sub sbb sbbb sub mov iret mov fs pushf xor test push shrl xor cmp mov gs inc ret (bad) int pusha loop sub bound cmp jno push cmp test cltd test rcrb icebp push pusha testl imul add cmp and mov ret inc out add aaa icebp notl outsb xchg fsubrs xchg js mov mov lret xchg inc outsb test sbb dec cld mov lret or or arpl dec xchg in and sub push cmp insl hlt adc das sti add cmp out add cmp enter je or inc adc jl dec sbb insb dec sbb out dec add and mov fcoml insl aaa test xchg mov shlb adcb int3 int3 insb xchg addr16 cmp pop enter hlt mov jg hlt imul mov int3 adc add call mov and xchg xor adc movsb lret xchg sarl lret cwtl mov arpl pushf mov adc add cmp sbb mov sub adc dec ret mov cmp adc loope js pop inc add cmp cmp inc pop and ret or xchg frstor sub and or push inc ret inc shlb lcall call lret xchg fnop js ljmp rclb dec dec and dec sub lock ljmp xchg data16 xor adc or xor inc in cwtl nop leave or (bad) lods loop dec rcrb popa inc cmp rcrl sbb mov pop or dec sub clc push or jo pusha dec popa sbb out mov jge mov adc and loop and bound gs pusha int3 shrl push popa cmp add inc shrb test jae xchg int3 or or inc mov mov sub aaa add inc add inc fmull leave lret add lds mov fstl dec cmp sub out ja dec lcall fs repnz inc in xor and (bad) xor push sbb fimull jl inc lods sbb hlt clc enter imul movsl jbe (bad) cmp inc lret int3 cmc movswl ljmp push jge andl test movb rorb jl ret jns mov loopne mov pop call sti idivb add (bad) sub popa nop push fadds cmc sbb out cmp adc mov out xor call enter adc push cld mov xor imul js rorb adc sbb jmp mov add sub (bad) sub jl dec mov add enter es adcl and mov icebp xchg mov push cmp clc lahf (bad) pop or fild sub push dec repnz cmp nop push jmp sahf xor fnstcw imul sbb rcrb push stos mov cwtl outsb mov loope push aaa int xor push lret mov sub mov add (bad) jo xor js je ss in dec dec jl jl mov gs mov jo and sub testl xlat add jnp mov xor adc dec lea shrl iret lods add das jnp sahf add mov or pop mov (bad) fwait push into (bad) mov (bad) rolb jnp std js mov jno dec cmpsl in inc pop xchg hlt test push jmp into cwtl orl jmp les (bad) push inc addb cli xchg add jns dec ja mov cmp dec jo mov jl or rcrl call pusha and fmull adc and add inc mov jo or inc add jo or je lret mov mov loope sub jb fwait inc or roll out loopne cmp or add loopne sbb call fldt loope or movsb in or sbb enter stc roll fdivr in and adc insb mov adc pop adc gs loopne or stc and add aam je add lods call out sub call sub push cmpsb adc insl outsl cltd loopne in add dec jb push sbb stos jo dec test popa and es ljmp lods xor mov and mov push (bad) or add pop sahf jmp or push imul adc xchg movsb sarb xor jmp xchg pop pusha dec cmp dec pop mov add mov push and lahf fadds mov ja sarb lret cmpsb dec sbb jbe rcrb nop hlt dec adcb addr16 mov cmp and and push rcrb clc enter add push adc xor in mov lahf fwait push mov and clc dec sahf out fstl mov iret adc jns sti adc lahf bound pop iret mov xchg and mov sub mov push mov push mov push mov xchg pushf call or nop and cwtl push mov sub sbb popa jo scas stos fnstsw (bad) dec mov mov lea jae insl pop aam add cmp xor and ljmp cmp xor jno loope sbb out sbb sub and (bad) loopne add ljmp and mov shlb adc lea loopne enter push scas test popf inc (bad) mov aaa and add pushl es or inc push dec push stc and add cmpsl add jbe and fstpt inc adc xchg jne add jo mov and dec lock (bad) pusha (bad) adc or jp push or (bad) ffree mov sbb push test fdivl or loopne call push test sub cmpsb leave xchg cmp push cltd dec dec xchg fimul xlat adc fs mov cltd sbb fcoms insl cmp mov dec add js mov pop test mov mov mov popf or ret sbb or lods hlt jo out inc xor sub add movsb adc xlat xchg data16 enter mov in sarb in int3 ljmp roll and outsb js mov es test sbb rcl add or cwtl mov cmp inc push xchg or inc fdiv xchg or inc icebp roll rcrb or and or cmp scas add pusha cltd mov mov insb scas sub fcoml orl popa mov cmp add ret inc xor add pop push das cmp jne add push mov cltd inc dec add sti call pop xchg jnp pop aad push sahf shl pop push or addr16 or daa sahf nop orb inc jb (bad) mov movsb pop xor xchg lcall xor cmp cmp test push mov pop adcb mov jp icebp cli addb add call or pop sbb iret sbbb fwait arpl test xchg adc nop mov xchg loopne add das sahf jno lods cltd in fld adc cmp lods test mov out aaa xor inc xchg inc (bad) sub cltd sbb ffree out adc pop data16 stos cwtl shrl fcoms pop lret out dec cmp and popa xchg dec and adc out adc pop scas inc leave xchg add test sbb fldt add adc test dec adcb sarl inc nop clc mov dec jbe push inc adcb jne rolb xor xor jns mov clc xor inc cmp add push sub fwait popf xchg js ror xchg add pusha mov mov add xor je xor jns fistpll and xchg fstl pop rcrl add xchg outsb or dec xlat loope jo add push lahf pusha hlt (bad) imul loopne notl jb fs pusha jp int xor in add pusha add pusha sbb pop ss clc in or xor in pop xor mov mov in cmpsl aam add dec xchg cwtl inc lods sarl orb fdiv dec and rcl ror scas cwtl dec xlat lea inc jo in push in sbb (bad) out adc sub pop aad popf adc decl imul dec (bad) mov or sbb xor xlat xchg xchg inc lcall test in or movsb adc aas jmp mov jno loope inc or fucomi test dec dec test mov cmp and repnz fsubrs repz add in sti jno add lret xor lret call inc pop lods push out shlb cmp les nop dec clc xor in call cmp or (bad) jecxz adc outsb and push loop das dec mov mov add fstl iret or add inc test or imull flds aaa inc inc or aam mov mov add mov lret dec mov push add loopne repnz and mov sahf pop mov mov inc cmc ljmp adc pop add jne iret cmpl shl push stc jo push xor cs das cmp jg (bad) aad dec andb imul js les int3 xor shll popl jle push imul fadds inc xor int3 mov jae shrb add and pop add or xor xor jbe mov jle or imul pop xchg cwtl add popf dec xchg push dec push xchg hlt sbb fyl2xp1 inc dec sub mov dec add (bad) aas mov jo xor xchg inc sbb pop mov pop int push push mov push push lods test adc or xchg and in rclb bound mov mov mov test pop sub and pop dec ja add cwtl popa jmp mov add push inc pop or dec inc int pop sbb pop dec pop les adc or ja fisubl jns xor sub mov test dec stc inc and pop insl cmp lock pop mov pop inc cmp mov adc pop xor (bad) jne push push (bad) jne pusha call xchg push faddl mov and adc cmp pushf shl jl push or out pop cmp sbb pop lods fs jae nop xchg imul or loope subb xor mov sbb xor dec andb frstor cmp push jo xor cmp aam lret cwtl cld dec xchg cmpl add (bad) xor jb shrb or addl add sub pop (bad) and sti out add sar sub xchg cmp or xchg pop push stc inc cmp or or jo or inc inc pop loope aad fs jmp es test scas stc inc xorl (bad) mov pop inc inc mov add xchg cmp mov imul or xor cmp fsts cmp (bad) jno push add popa stos shll jl add lret movsb loopne push jbe xor orb mov add test adc aaa mov add out stc xor lods push dec dec jnp xchg insl add sbb movsb cwtl nop js and into aad or add test mov push js loop inc insb push jb add fiaddl imul lods and cmp cmp loope adc inc outsb icebp rorb es inc push jo inc rcr mov xchg mov enter (bad) cmp loopne add jae or fldcw sub in mov test dec mov addr16 jecxz sbb cmpl dec in add imul add or cltd je rcll mov int3 and or das cmp add ljmp lock mov aam jmp leave in inc push xor xchg push shll (bad) and pop sub jne loopne loop das roll mov push or popf inc mov ljmp adcb mov add repz or (bad) jl pop xchg in pop add and xchg push pusha mov mov mov cmpsb cmp sbb push jno adc inc add jge xor cmp nop mov push cltd sbb cli enter cmp or cwtl je mov inc mov lods movsl push cmc popf and cmp adc pop xchg je (bad) cmp sarl pushf aam arpl sbb push xchg cmp inc mov xchg dec mov outsb mov cmc mov int3 adcb sbb aas leave cmp cmc das add mov arpl test xchg lods cmpsb call jo stc and mov add mov cmp test add and lea stc push inc adc lods (bad) leave push scas mov test in cmp cmp hlt pop push mov mov add mov test adc sbb nop pop add push lcall push dec xchg or fisttp xchg and xchg mov sub mov in std jl daa rep loopne add or rolb sbb adc lds sub stc inc dec icebp (bad) out (bad) imul or jne mov xchg sub xor fs adc add dec sub adc scas fstl mov shlb add xor out mov add arpl xchg dec add pop cmc fcoms aaa mov and push dec xchg fsubl in fcmovnbe popa sub dec sbb jle (bad) (bad) rep adc lds dec mov (bad) arpl jl pusha insl dec mov mov add and or inc shl dec add jmp imul xorl xchg (bad) rcr push sub adc daa pop add mov fild into jnp in add test mov xlat out (bad) mov in mov pop repz dec js add mov loope inc loopne sahf xor int3 cwtl scas leave xor fldenv or and dec out clc jl inc adc mov movsl (bad) xor js add or mov mov out cmpb bswap enter jo and aas inc cmp xchg sbb add lret lahf and xor inc addb push cmp nop cmp jecxz les ficoml xor out or clc jns pop lods sub pop rsm addl pop inc ss inc add jp or stos add push test add add call rclb btc pop inc pushl inc sub jmp ljmp add nop cmp push rol push sbb cmp mov adc jle cmp jmp pop rolb sbb and movsb loop or adc adc test mov jbe lret inc ss in (bad) (bad) or or mov or imul jp add push loope sub imul xor andl push movsl push lret fs add inc (bad) mulb dec shlb mov cltd testl test add out mov fisttp adc in pop xchg adc out dec pop jmp (bad) imul out frstor enter jb (bad) or jo dec mov fwait mov cmp mov xorl jo sbb pop test cmp jp jnp adc idivl push or push sahf dec int mov dec aaa sbb rorb dec in inc pop sbbb push add iret out push or mov mov lahf adc push jge nop pop xchg dec cmc pop cmp jns mov lock pop add jl jp push and pop stos jmp dec push (bad) dec cmp add or xchg adc push iret (bad) ds je add sbb fild loopne cmpsb and movsb and (bad) daa or sbb add adc inc mov fnstcw inc inc dec dec ss cwtl out push cmc xor jne mov and sahf and xchg in nop jb addr16 test ds fsubrl add iret xor popf mov fbstp (bad) mov into or ret or push aad push rep cmp and fs faddl cmp ret cld adc add rcl adc add xor les xchg push mov xchg push (bad) pusha add mov or daa cmpl sahf xor lods rorb cmc rolb js dec call dec into lcall movsb mov sub cmpb dec movsb inc or add fldcw enter imul call and or or sbbl shrl and cmp and adc lret and lahf adc sti add and pusha add mov add je mov jle push inc in mov adc out sub ss mov xor shrd and in or dec cmp sbb adc mov mov lods adcb push cmp xchg sahf adc jno fadds test and dec mov mov mov and nop sarb xor pushf push or mov cmc dec insl (bad) sbb jbe roll pop in scas xchg inc into loope sbb adc (bad) add push (bad) jmp loope sub test xchg sahf push pushf add out and adc or cmp cmpsl sbb dec push (bad) paddw push out add xchg neg adcb lahf ja add and fstp and jle or outsl test xlat sbb outsb add aaa lock xchg xor push stos fst das test jnp pop mov add sub mov js xor pusha popa (bad) fstp aam add ret ret or xchg insl add es lahf fstpl cmp test call jo cmc lea pop push icebp xor push faddl (bad) and movsb stos (bad) lock cld pop insl xor fs add test cmp imul cld dec xchg (bad) cmp cwtl fst jno sbb mov xlat es jno add arpl or xor fsubrl jns cmp xor dec dec mov (bad) sbbb rorb push mov or xor cld add cmpsb xchg rcl push lods popf dec mov xchg imul and repz scas inc push cmpsb add mov mov js shlb test xor icebp icebp pusha fwait pop mov mov int3 sbbb mov or scas rolb fnsave adc cld arpl adc mov or mov aad mov and sub and mov xor push out or xchg jo dec add mov fstl push pushf sub and cli and hlt xchg lds xchg pop in pop ret mov fwait inc push cmp orl jnp lcall jl mov cmp ficomp insb dec std aam add (bad) sub add mov movsb inc jo add addl xor adc int sbb in stos loope pop aad xor add mov pop xor and popa aaa push mov ret mov adc push pusha fcomp add mov add dec pop das out jle add xlat and xchg and imul push sub dec inc cmp cmp sbb shl cwtl cmp cmpsb lds xor or fsubrs or sub adc sbb (bad) lock jmp adc into cwtl adc mov inc dec add lods (bad) imull push inc int3 rcll fsubs out subl add adcl icebp jae pop mov test mov cmp int3 clc inc add scas fs js test jae iret inc stos cmpl pop mov cld sub xchg mov js sbb scas call mov and inc in lds mov pop xchg add cmp jno push push xor pop dec pusha push inc outsl pop inc inc test sti mov insb add push pushf push aad test movsl jmp add adc cmp lods movb (bad) int3 loope (bad) add or mov out add push cltd sahf add sbb pop add xor mov clc jns idivb add test add test cwtl sub nop push inc pop xchg cmp adc (bad) adc xchg xchg mov iret mov jne imul pop mov fs fnstsw js pop in cwtl decl insb pop pop mov adc inc push std and mov aad (bad) pavgw pop mov inc mov mov push je pop lret mov mov loopne xchg sarb dec jp push adc sub mov lods add sub inc test popa inc adc jmp leave or (bad) add jp xor jae pop jg pusha inc sub incl arpl pushf pop jae or xor mov push jg pusha and pop ljmp pop repz orl js sar pop jl in adc adc pop outsl sub aam sub inc std xchg inc int jae push inc lock or inc rclb push pushf rcll scas loopne nop lods cmp and adc dec and jg lcall movsl insb add faddl add pop ffreep stc imul add pop (bad) sbb or jae push xchg sub inc pop adcl leave add aas test mov fsubl pop js sbb jecxz popa addr16 adc fdiv dec add inc cmc xchg sbb sbb dec pop lods mov add inc inc bound push repnz dec clc test nop adc fsubs (bad) add add scas add in sti cmp add jnp add ret sbbl adc jl loope and stos lock add nop fs ret cmc loopne or pop mov test pop add sbb je sbbb xor fs (bad) and ss pop dec sbb lds mov into or test rclb arpl leave and add and cld pusha jecxz dec mov push sub sub pop adc pushf mov jno or add fisttp dec xchg inc shrl xor adc jnp mov lods jb scas cli pop pusha sbb pop xchg iret lret add jnp call mov test repnz lods or les mov int3 inc add adc add stos and pop bnd add pop sub cmp cmp js loopne cmc ret dec sbb or rcrb add sahf and fwait popa add or into pop frstor or imul (bad) dec sbb enter sbbb push inc and push cmc loopne orb xor rsqrtps je push scas sbb jle test jo push lcall scas ja rorb fsubrl jecxz clc out and push scas push cwtl add nop jns mov bound (bad) test inc movsb fdivr movsb dec and adc xor fcoml fs jle lret (bad) popa aam lock std mov mov ss ror push jns sub mov sub pop sbb mov subb jae dec and xor jb movsb xor inc ret cli push test jp nop xchg mov mov push ffreep inc fiaddl testl jmp xchg adc add test add jo xor insb push xor adc rolb stc nop pop pop mov or sti pop mov jae (bad) cmp jno je fstpt add cmp in into jmp or movsb and lds xchg fdiv jae mov and add jl add jge roll cmpsb push sti add andb pop jl pop dec rolb inc and pushf xchg jle push cmp (bad) out imul mov mov cmp mov addl stos add jg andl inc sarb pop in imul nop ja popf sub gs pop lods add push scas fdivl jnp stos out push inc fsubl lea sbb scas sub pop add nop aaa pusha jbe fsts addb cmp cmpb pop cmp sahf lods iret adc jg hlt add loopne mov push and push lcall rcrl cmc mov xchg cmp pop out fwait gs in mov bound std pop iret int cld in js jae,pn jo add ror cmp rolb ds cmp fdivrl mov pop pop and scas xchg subb push push xor pop insl and cmp lock and xchg pop ds mov add jae pop inc jo inc loopne push scas add (bad) ljmp pop sbb dec lea mov inc mov sarl sub xchg pop dec lods or push xlat jmp sub mov sti dec rorl cwtl or inc push sbb push ret clc (bad) jae mov mov inc call mov add stos shll (bad) hlt pop into cwtl push test push jle add gs and stc inc pusha mov bound fnstenv int3 andl dec mov adc push mov adc enter int add jo fstps pop pushf xchg in jns inc and cmp jmp mov outsl jge push nop and insb test in add ror jnp insl or scas mov loopne jge sub sarb pop data16 jo xlat out mov push adc faddl adc test add sti dec leave add (bad) mov test (bad) stc popf clc inc sbb pop adc xchg push xchg dec cmpsb or jo sbb sub and (bad) sbb sub sarl adc addb pop out push add add sbb jns add xor xchg mov and add push or mov mov inc inc ja fsubr popa sub mov pop pop jl adc xchg mov les cmpl pop sub xchg and les scas mov shlb inc sti add cs cmp mov aaa leave and imul add insl xor pop jmp mov and je and cmp add inc jmp xchg adc outsl fwait idivl mov dec push xchg dec das jae inc add pop in add dec (bad) sbb dec sbb mov lcall xchg into inc cmp nop dec push cmp repnz pop jo xchg xchg pushf push xchg sub or lcall enter jle dec mov in pop arpl imul js add out push inc add lock mov fnop add pop cmp test inc sbb movsl push les or pop xor outsl fstps ja sub sbb imul cwtl loop daa add push ret or xchg pop ret add jae pop inc fsubl xchg fsubrs and jecxz cwtl lcall xchg insb sbb out pop jge xor je pushf lret cwtl dec cmc mov add lods xor mov sub ret callw cwtl cs jg test adc mov and sti cmp and adc dec add inc inc std ret add add push rcrl or mov icebp add pushf push loopne scas cmpb add stos cmp aaa jae mov or lcall flds fs or and popa out pop fs xchg fcoml mov shrb add pushf mov or jae and and sti push add adc adc iret pop push and jae inc test testb add or aam loopne push pushf pop cld dec or lret jnp inc movsl int3 pop mov fidivr sub mov jae and or sbb enter add hlt test inc in ss pop push loopne inc test leave or pop mov lock inc xor pop enter jbe push mov add shrb icebp or mov mov cmc pop and xor daa nop leave lods mov add int3 inc push imul iret adc jae adc add cmpl call mov rcrl add inc lahf into jae dec cwtl inc fadds mov push push xchg sub pop dec je jne lcall out cwtl adc cwtl fldenv xor loop cmp xor jle lock stos jo rep mov adc js mov faddl lret or int3 push xchg add xchg cs fnstenv mov ja pop in jle mov xchg jg mov add mov push test leave pusha add rorb test les dec and add xor mov out pop adc cmp jecxz cld mov ret (bad) sbb inc test xor xchg ja add xchg adc in repz mov dec rcr sub andb dec test iret and jns push add sbb push les mov push rcr xchg xor jno sti sar mov js inc dec push sbb pusha cltd shl gs (bad) and lcall stos dec jle rcrl insb and xchg mov or jl add mov stos xchg lods pop iret inc and add sbb adc xlat mov das xchg adc rorb and add push ror jne push cmp push daa and or insl cli mov movsl push es int3 lock add and mov ss add std subb fimul aam inc test (bad) sbb push cmp xor pusha outsb add popa aas nopl in add jmp add sbb je les adc xchg add mov adc add and cmpsl xchg lcall cwtl cmp sbbl mov push dec mov push pop mov add or in and pop dec dec adc jl add imul mov mov movb verw cmpsl sbb or ljmp in loopne sub dec add clc xchg jge sbb xchg fildll xorb sbb pushaw or scas out dec sbb mov lret jmp mov in cmp popa or lahf das add add or or enter pop pop rcll in cmp test loopne rorl mov dec push (bad) flds mov push sti push and adc mov cwtl ja jno add mov add rcrb loop sub mov cmp jno movsb lods xchg push out cwtl cwtl call hlt sbb popa iret adc jl mov jmp mov rcrl cld notl jb sbb out pop movsb mov aam popf pushf aad add fldcw inc push lods push sbb adc int3 stc lcall bound cmpl pop out add iret dec xchg dec or shll hlt rorl add stos xchg push xor out jl sbb js popl add nop sbb mov jo lods (bad) mov hlt lds add jbe inc clc push ret enter lock jmp or sbb (bad) ljmp stc sbb dec sbb call adc sbb sbb push add jle test push mov sbb popa scas xchg insl jns jl pop dec push aaa iret inc mov lods add movsl popf movups sub notl fs xchg fstpl lcall add jo mov and xor adc rorb or rol fdivr fdivl nop pop sub fnstenv pop pusha xchg xchg scas adc inc adc add pop mov or add adc pop add cmp xor test jg add scas rcrl int inc jns lret xlat mov std in or in mov push test fwait stos cwtl push mov into cmp xor shl ds ljmp jns jae add pop mull pop cmp popa addr16 adc xchg xchg (bad) push mov add sub pop test and add jp add lods je cmp push xor jo mov (bad) bound cmp mov adc xchg add (bad) imul sub xchg dec push insb push fs mov adc aad sbb pop clc rclb lds inc sub pushf in pop mov add xor icebp xor jp add rcrb js xchg movsb add push cmp add inc push mov add cmp push rorl add add jecxz inc sar xchg and std iret shrl movsb fsts bound mov add jl fiaddl daa lock lods push mov movsl jae insb fisub push add mov lret inc loopne add jbe rep (bad) andb scas add or fbld call inc das xor and fdiv lods mov out pop pop add in sub mov jl and adc dec push fdivrs cltd and and mov and xor cli repz sarl add adc mov and (bad) fnstcw call das add pushf xchg movsb add jle cld sbb fidivrl (bad) aam js cmp or adc xor repz jmp int (bad) adc jg in add enter fdiv inc add lret mov fdivs adc lods dec cmc js jge aam shl aam addl xor pop leave mov aam push adc les ret dec in movb pop (bad) loop imul adc inc add mov ja mov icebp inc and fist iret mov push aam pop dec jp icebp in stos jl (bad) mov inc fdiv movsb push cmpsb rorb sbb xorb mov rol repnz imul dec movsb loope and adc loope ficompl jg or dec pop xchg adc add push fs mov mov xor (bad) out ret pop xor or jne sub adc cli imul sbb icebp mov loope push xchg adc ljmp mov (bad) mov dec fisttpl sbb divb dec aaa pop pop cmp sbb jle inc push or and cmp (bad) lock testl mov add fs or nop cld hlt and mov inc or mov imul sub push adc call sbb lds lock sti or test fcompl pushf test pushf xchg xor scas or cwtl dec cmp jb push mov lcall pushf inc jp cmp mov aam sub adc lods jp mov adc pop mov loopne ret sahf pop mov test inc cld cs pop cmpl xchg sbb and cwtl mov loopne xor or xchg cld fidivl add cmp test push aam xchg scas pushf and call jle std mov pop in out imul cwtl scas xchg pop xchg inc pop rcll fsubrs cld repz lods mov dec pop mov (bad) xchg aam cmp push scas mov call jmp ljmp (bad) loopne cmp push or outsl cmp mov jp and out mov loope cld pop mov fucom in adc push xlat adc mov xchg or repz mov push sub mov jb sbbl mov dec lods (bad) cmp (bad) lret (bad) cwtl fsubl cmp inc xor adc cwtl push cwtl cmp adc mov pop sbb adc inc clc popa pop (bad) add adc hlt adc negb dec cmp add pcmpgtb ret enter xor imul xchg or pop rolb or test add in ffree xor xor pop push cmp xor mov inc cmp stos lock clc inc (bad) lret xchg sbb mov iret pop jmp add ret and out in lods dec cmc in push mov and pusha mov xor pop addr16 and cmp and add and and mov inc jp loopne imul in push rcrl or cmp in sub xor cld inc or or ret subb pop (bad) jo mov test call or push popf out in adc cmp adc cmp fstl add xchg dec lahf (bad) call adc in fdivrl adc add enter in in arpl ret or aas shlb dec sbb mov je jno xadd loope add pop push mov mov std fdivrs sbb push mov test push mov add out pushf push push push or or xchg test outsl cmp loopne (bad) push push xor pop loope xchg ja adc xor iret inc sub dec xlat push ljmp gs aaa mov dec inc mov gs lods (bad) enter or add xchg xchg adc pushf add mov inc repnz dec clc sub sbb test jge ret dec iret cmp out push mov xchg or adc arpl ftst jnp mov jle fildll or roll ret jo xlat rol xchg mov repz dec test (bad) mov pusha mov gs mov pushf jo mov mov and dec insl adc and cwtl pop sub rclb lock or (bad) and and mov mov and cmp xchg int3 add fcomps mov lock dec push mov mov loopne jne arpl pushf sbb push cmpsb inc cmp dec push pusha add push push mov dec xorb hlt popa (bad) inc loope push dec mov adc pop testb leave iret cltd or lock (bad) and repz loope cld ljmp adc add sub inc call test adc inc add jp fsubrs (bad) cmp sub dec fsubrs dec int3 test insb push mov les pop adc es jns and mov or fnstcw mov sub or adc pusha mov in pop or sub or rcr dec sbb mov adc mov add and sub inc clc iret (bad) mov call mov add and add in mov sarb sub ljmp sbb das sbb xchg inc adc in mov push ss test dec movsb pop jle dec imul and in adc lods add push dec mov jo repz pop int mov pop cmpsl lds sahf cmp cmp dec hlt and (bad) inc sub loopne xchg mov cmp enter stos incb pop imul icebp fmuls cmp mov outsb insb loop,pn dec adc sbb add cmp push jbe repnz int3 sbb pop cwtl ret mov cmp lods sub fldcw mov mov and ret dec cmc mov adc dec cld dec cmp pushf and add fnsave cmp sbb or cwtl or adc xchg sub mov mov jl or repz push add sbb or repz loope aam cmp pop add imul and add popf in js mov pop jo loop xor and inc adc sub cmp stc push orb call pop hlt jp lretw subb in cmp dec cs icebp mov mov stos jne and mov es adc dec mov fsubl rep (bad) cmp mov sbb add ret xchg xchg enter and ret int3 pusha pop push and dec dec fs cmp int sbb das fild adc rclb loopne mov nop jo outsb mov fadds adc add sarb mov xchg cld repz mov jg push fcomip and ljmp adc mov neg cwtl jecxz add stos sarl daa idiv nop add push or hlt mov cmp mov in cmc cmp inc mov jno aaa aaa divl jno jbe cmc out fadd ret sti add nop or and and jae cmpsl pop enter je roll scas jns (bad) sbb jae add mov inc fcoml addb pop add jmp (bad) aaa jae push decb js sub stos add mov clc sub aam fstpt and fisubr lods cltd adc and fsts ret mov mov pop xchg rcrb jae jns jle push add mov pop add (bad) fnstcw addl sbbb fild push mov add dec aaa fsts loope xor jnp and aaa inc xchg and xor push sarl xchg jmp jmp mov sbb mov sbb ja add jnp push cmpsl push fcoml mov neg aad dec loopne in jns add mov mov xor mov pop adc idiv rorb jecxz and and pop add inc ret stos call bound pop push mov inc xchg cli (bad) xchg dec dec xor jae pop fsts ficomp add inc fwait sbb nop xchg mov add xchg fmull adc sub fadd (bad) cmc jge test jno jg inc mov leave jae cld stos clc addb sbb icebp xor fisubrl repnz xor call pop mov ret mov jle jp jns push shrl dec test loopne flds in in mov add adc pop jmp insb xchg nop or add cwtl cmp ja nop sbb lret pusha jl rorb jo arpl push mov fdivs ss ds int3 dec dec ljmp mov mov push push test mov mov in shrl test or ret dec je or jno call sbb les test aam rcr (bad) cli push pop clc jne hlt sbb ret stos inc sbb jae dec jno mov nop in les add jp aam inc int sub push movsl out andl inc call adc sub rol out test insb xchg dec add jb sbb fadds mov xchg inc sti mov and ret xor push pop shll iret dec adc add xor cli cmp mov mov xchg dec jg nop sub sbb fs jns xor rcrb setbe mov mov sub push inc fwait add inc aad pop repz inc hlt push mov add fimull clc lea jno sbb pop sarb inc sub popa jno add or mov jnp bnd xchg stos in jbe lock xorb mov mov roll xorb leave ret jae enter leave mov sbb in lds or lret sub add push clc test lods in mov mov sbb xchg jns xorl ret inc cmpsl add and pop rol mov mov insb cltd test ret jne shrd mov lcall idiv pusha dec jle js lahf cltd std push test test add dec iret movsb xchg (bad) jno clc sub mov mov ds rolb dec fwait cs rcr (bad) jno add add jge push (bad) cmc inc (bad) cmp push cmp testl cld mov mov and loop jnp sub push movsb inc sbb or cwtl pop xor int3 lods sbb test daa roll in xor push add jbe or bound jle,pn xor and pop dec dec xchg sbb subl ret loop sbb mov js test dec and cld push (bad) fmull shlb pop add in test xlat jns (bad) sub xor int rol call mov mov mov inc lahf cmp in mov in mov clc xchg and cmpsl cmc add cmp pushf shr out push in in enter adc xor inc dec jno cmp nop sub movsb fsubs cmp (bad) pusha aam jo lock nop or stc jmp dec push xchg dec cld (bad) mov mov xor mov mov and adc mov inc inc pop hlt and push jo in sub push lods ja push xor fldcw adc inc inc xor pop dec nop xchg into xor je lods loopne xchg call clc jmp adc mov or cli mov mov lods xor (bad) addr16 movsl jns clc scas nop mov add rclb mov lods inc dec mov mov sub or test lds adc sbb (bad) or xchg hlt adc cld mov sub jno fmuls repz push push inc pop ret pop jo sbb push lahf mov xchg pusha out es (bad) mov mull dec sbb ds xchg mov mov xchg add mov fdivl das cmp lret mov pushf movsb out repnz cmc and cmpsb xor xor inc push call and mov or stc (bad) out jg dec pop clc xchg sub ja inc inc sbb cwtl sub push push push int3 sub lock jl xchg push dec push test xchg pop pop enter hlt bnd jae jb add push xchg shl mov jno add (bad) int xchg adc std inc shl and mov int inc pop jne lret in jecxz mov test mov popa js lret or movsb mov sub sqrtps incl or test adc sbb adc jle cmpsb mov push call scas (bad) call sub shll and sarl int3 push and fstps jno daa test enter sahf adc sub inc cmp dec or sub inc adc les test sub mov push xor faddl jno lods xorl (bad) dec jb pop push flds (bad) out bound pop push and aas clc xchg insb push jae ficompl (bad) bnd imul pop pop pop xor movsb cltd sbb (bad) dec adc xchg add xor add (bad) mov push loope leave mov cmpsb subb in movl mov icebp pop mov jnp,pt lea xchg orb sahf jge sbb aaa dec scas dec xor mov sub insl pop add push mov dec xchg pop mov inc orb out pop cmp test fcoms lock push pop mov xchg das (bad) aas imul mulb dec push loopne test mov pop data16 xlat xor cltd arpl dec jo jo,pt add rcrb fadds add pushf push cwtl cmp and cli movb aad icebp fcoml movsb mov fnstenv je xor mov and cwtl ds add andb rol add push sahf decb fistpll test fstpl add and and cwtl pop sub add xchg mov repz fistp cmp jo dec out add enter jno push sbb pop mov rclb pop push out inc sbb mov jmp push mov and pop sbb jno arpl and or out clc jns cmp dec add mov xchg mov xor mov in sub dec pop aaa inc inc enter xchg jmp dec xor push inc pusha hlt jp xchg xor cmp xor adc imul mov hlt mov dec je pop pop xor or xor inc or daa repz rorl add lock push push mov and jns in (bad) add fidivr sub call adc test (bad) jo sub notb sbb inc pusha mov xor cmc add pop sahf je fsub movsl push mov add dec push dec mov dec test push adc mov jmp clc adc inc movsb adc lcall push imul xchg push idivb sbb cs and mov fstps jne out mov (bad) mov cmp fcomp sub rolb sub and cmp xchg xchg mov dec add push lods jo inc adcl loope (bad) sbb inc pop mov add test pop pusha mov ljmp cmpb and movsb dec pop mov mov addb jl fsubrs sub and rclb sub imul stos enter or subb mov or mov add jb or xor sub stc xor xor pop test js dec test fsubs sbb pushf dec cld cmp mov push cwtl jge lock pop cmp xor movsl cmpl add push addl mov and inc fs push pop enter sbb add or or movsb test and cmp repnz jmp add mov xor add incl das addl out dec and lods out cmp mov xchg call dec je test inc mov xor popa leave push and pusha dec xchg sbb cli imulb push aad and cwtl xchg sbb mov xor js sub das sarb mov or xor clc pop cwtl add adc cli aad inc or sarl nop inc orl inc xchg sti inc test sbb sbb sub jl mov pusha subl enter addb mov adc cmp sbb mov dec or push mov cmp movsb sbb (bad) imul shrb (bad) push inc or mov pop (bad) pop mov add or cld in mov stos mov inc or sbb or das in loopne nop loop shrb push or clc je xor and out and add call mov or mov call sahf sbb push and mov ss sub push add and pop xor frstor push mov xchg ljmp out mov sub shrl add pop fwait jg (bad) ret add call out pop add adc (bad) jae add lods lret mov (bad) mulb push and jne or (bad) hlt xchg test popa out xor or pusha int3 or adc aam mov xchg jnp pop (bad) stc push repz lods pop (bad) adc into pop push call sbb lods loope sub push cmpsb or div leave push mov mov rorb sbb adc and (bad) leave xor negl and clc or inc dec shrb xor lret leave lock bnd jo dec jb pop mov adc sbb adc loopne clc orb push mov les sub mov fidivrl dec loop dec mov sub les lods aaa inc (bad) je js int3 fldcw sub mov sti ret lret and fdiv ficomp push push fxch cmp int and enter xchg sub shll add and or in repz js out adc jmp mov add dec inc jb add sti in or out test popa inc xor add and or rol dec sbb pop push rclb jecxz push jae not pop jbe xchg jo push pop pop dec repnz (bad) pusha in push dec and or sahf adc mov test in adc sub or cmpsl jns clc faddl sahf (bad) mov inc mov add js push rolb adc add rolb lcall outsb pop in inc push aad mov or orb cmp cmpsl lods adc jns add dec insb (bad) in das test and xchg movsl rcr pop cli inc push mov xchg xchg hlt mov adc cmp pusha sub in int3 (bad) and in mov ret test xor mov xchg (bad) arpl leave cmc jg add imul and mov test cmpl and add test cmp aad aam adc in popf iret gs daa div fcoms pushf dec xchg into fdivrs and xlat xchg cld insb push xchg add in inc addr16 dec fdivl dec xor fsubrs repnz jecxz xchg or sub loop add mov fcoml dec pop mov mov push fdivl (bad) mov int mov ss les cmp loop sarl xchg nop and sub mov xchg enter test or adc mov aad pop add inc or test mov or and sarl and pop cwtl sub enter fwait sbb and (bad) xrelease and fnstenv push xrelease sub arpl mov cltd lock out and or xor adc rcrb int xchg jmp add loope test in pusha ret in ret push leave cltd popa test cmp add push imul pop lock dec cld fidivr and inc adc or in notl sub movsl sbb sbb icebp fsubrs popa fldcw xchg mov fstpt push loop fdivs or mov ds adc jb cmp mov add stos push pop cmp mov call mov push sti pop xor sub sbb push fildl dec mov lds imul mov cmp add scas xor sub add inc mov dec jl pushf jbe loope negl cltd sbb cmp stc xchg fistp (bad) dec loope test adc and rol cmp mov mov repnz loopne mov ret cwtl cmpsb rcll hlt scas xchg inc xlat les rol add xchg jno lcall pop sahf mov push add data16 sbb pop test cld inc dec cmp (bad) jb flds (bad) sbb mov push hlt or pop or pop mov ljmp fadds (bad) data16 dec cmp mov dec xchg test add lds add out xchg mov pop jmp int3 outsb xchg mov or mov sbb mov add add fs xchg xchg mov (bad) js cmp push cmp (bad) (bad) xor add shr push inc mov inc or in mov add inc cld jbe cld int cwtl mov decb inc popf jae cld lea clc xchg xchg repz lcall pusha ds dec int3 insb pop pop inc pop mov movsb dec adc pop int3 (bad) cmp and or lret pop adc lds test cmp dec ret pushf inc fdivrp xchg adc leave in xchg dec js jl or shr je cmp lahf jae mov lods and dec data16 jno into xchg scas fldcw or mov out xchg jno lods sbb test ret mov pop and or imul mov dec stc add dec mov sub xchg movsb rolb mov cmp sbb add and rorl or sub mov andl int3 xchg xchg xchg shrb xchg icebp js dec out outsl or cwtl mov push pop pop and xchg lcall fisttpl das and mov xor inc adc pop xchg jmp adc sub in pop test push repnz pop mov jo jno add call or adcb xchg mov loop (bad) mull sub pusha lret iret mov and jmp mov jae xchg je mov push pop cmp incb or adc jmp fsub js faddp sbbl push jo push in fstps add fisubl adc sbb hlt or add mov xchg in mov fistl pop lods sbb dec int3 imul fwait add popf in mov lods fstps rorb inc sahf in mov jae,pt xor fldt add fwait add repnz cltd xchg xor pop fsts jmp das and aas dec add pop adc jns movsl jno negb (bad) xor push outsb stos stos mov add inc jmp jecxz add jns pop in xor inc fcoml jmp jno push mov (bad) loopne aad pop repnz loopne push dec leave in dec repz fwait jg mov ret and jae mov aaa inc cmp pop mov mov subl xor pusha in bound stos xor fcoms mov cmp clc adc scas or pop xor ficomp xchg mov xchg or lret test mov maskmovq mull mulb lock clc bound cld (bad) mov movaps add sbb add push jge lret scas ds add mov ljmp jns jle test jl bnd inc pop jle jl decw add not shll sbb fdivs xor add ret push and movsb pusha dec mov call push call cltd (bad) iret or andl push outsb dec ret fadds xor aam or mov pop shrb imul fdivr lahf mov sub mov mov dec add roll pop pop cwtl (bad) ds xor insb or call push fnop add ret (bad) jae call dec (bad) sti inc mov stos pop test jl add or ja sub inc aam insb or adc sbb je push rolb jae movsl mov or test adc mov aam pop ljmp add adc mov jl jns adc out add sar jno sub out mov div loopne jae (bad) in (bad) imul mov cltd fwait or jb les inc ss pop add je popa sub pop arpl mov mov loopne faddl (bad) cwtl mov pop pop sub mov pushf cmpl fadd sbb inc cli xchg sbb sti push imul push dec lock mov (bad) mov add and call imul inc mov jg dec cmp pop iret cmpsb pusha pop int3 test (bad) and clc insb and imul cwtl shll push nop sub sbb pop clc push dec mov sarb lret clc xor out sub mov sbb sahf sub test cmpb push loope int3 pusha ffree xor cmp mov xchg cmp jb add dec inc test dec dec iret push test (bad) mov jne xor xchg sbb aas dec cmpsb push jmp sub jns int3 clc add pusha add or xchg loopne enter insb or mov fistl dec fs mov add cmp dec rcl inc inc or sub or daa add or or out (bad) xchg and xlat stc stos inc add pop mov inc dec ss jge pusha scas cltd out sub add inc mov push push popf ljmp and push add lret int push inc jmp pop out jbe loopne shrb lock stc sbb dec xchg pop loopne mov or lret (bad) cmp xchg push or mov mov testl popa mov sbb (bad) or fmuls dec fwait push loopne add ffreep enter xchg mov push stc inc push and sbb xor in aad int3 and mov and test shrl ss mov xchg pop or test mov mov lcall cld xchg and or mov shrl aas push loope or iret jno mov iret or inc js test insb add imul lods mov sbb pusha sbb and (bad) mov cmpb test inc pop push cmp inc xor aas and cmpsb and out add dec dec dec adc mov jl and add bound daa push nop hlt and add loopne mov adc insb xor pusha push xchg sub imul rorl mov ja xor cmp xor jo jge rorl add add xchg and in xor cmp clc das rolb pusha mov xchg xchg push dec mov dec es clc mov clc mov dec mov push inc xchg cmp jecxz hlt xor mov ja les sbb sbb testl icebp pusha sub jg mov push fiaddl test cmp inc cwtl imul xor stos fild mov mov hlt pop outsl adc or dec insb cwtl add ljmp mov sti fcomip (bad) jbe call icebp fwait pop test or fs mov mov mov xlat adc (bad) (bad) cltd popa icebp cmpsb xor int3 add mov andw mov jnp mov sbb cmp or repz sub dec mov into testb scas mov mov arpl jecxz or inc subb imul mov pop adc xchg pop dec push je add mov sub adc jmp xchg cmp lds shll sarl inc orb push mov and jbe add test dec cmp test mov fmuls rorb mov dec push test jns mov inc cmp fcmovu mov add pop or push ret inc jmp mov adc or scas fsubrs xor inc mov and sub or addb mov mov push jo pop movsb add sub bound mov add mov add arpl lds lods dec pop pop dec push push adc incl insl or push lret sbb pop cmp mov data16 push out loopne mov in std stos fdivr cmp repz scas xor cmc mov pop lock xor icebp loope (bad) loop (bad) js inc jno mov nop jae xchg lock add ljmp adc fwait clc movsl jno leave call in adc fmuls enter xchg xlat add add inc lock pop adc cmp mov fstps fdivl mov int3 xchg test xchg push dec push (bad) xchg sub dec (bad) leave pop adc or or pop jb out push jmp repz add push inc lock aad add daa push jb pop iret pusha rcl add xor shrb orb in int mov fwait cmpsl xchg lods adc nop or or stos sub lods add sahf sbb xor adc scas push or lock mov pushf mov or jo in or jne dec xchg inc cli lahf nop es js jae sub dec lea add (bad) mov mov pop add arpl sti mov sbb or lods test lret sarl adc orl (bad) je fbstp or pusha inc sbb aaa xor inc add test xchg fsubrs lock hlt push repnz pushf or sub ficomp or sbb xchg shlb enter movsl not cli mov insb add sub jle pop adc (bad) out add push ss mov dec mov xchg pop sbb add inc test or mov iret iret mov (bad) lock xchg adc mov push pushf jne sbb pop pusha fiaddl mov gs mov adc dec shrb insb cwtl adc sbb or inc xor fs lahf jl mov mov ret inc dec mov xchg out xor xchg pop test adc pop add out push adc sbb and shll fs rorb or fsubl les outsl and add aaa jnp and leave cld pusha xchg stos mov pushf pop neg pusha add ret sub mov sub nop push pop dec xor mov mov dec test add hlt (bad) sbb mov movsl sub dec nop sub sub rclb or xchg cwtl (bad) xor mov xchg xor and or push mov (bad) adc mov xchg jle test loopne shrb inc or sub add fwait add cltd sahf mov mov (bad) lret and cmpsl adc fild sbb inc iret or mov call push or cmp xor jb imul mov pop pusha movsl or pushf xchg ret cmp pusha daa lcall and pop in into leave push and adc jo xor adc shrb adc pop mov pop (bad) xor adc sbb mov (bad) scas jl push pushf cmp sub test sbb adc add call or stos loope loopne fsts cwtl (bad) leave pop sbb in loope push cmp orl mov ds out push jl mov adc mov adc sub mov sbb addb cmp xchg test ror or test in add cmp jl sbb pop mov cmp aad cli stc jno jl cmp cmp xchg (bad) mov add mov test push outsl mov inc out popa dec stos imul sbb mov jne ja add outsb (bad) cmpsb mov add sti jg add push or push bound (bad) sub push icebp loopne lret call add js xchg add xor mov lock ret sub dec cmpb mov lods add xchg add dec aas xchg out xchg lds out scas inc fwait cltd std (bad) mov pop nop int3 inc repnz add mov pop mov cmpsb add out adc add inc (bad) push cmp loope and add mov cmp pop movsl add addr16 push and das sub mov push bound insb (bad) icebp or add (bad) or add test xchg mov cmpsl ds ja jo add adc xor aam sub dec movsb or and and inc pop inc outsb pop sub sti call ds iret add and mov push sti jnp cmp les pusha inc mov sub sbb cmp or imul mov enter ret and in and add insb sarb add lret outsb psubb jae mov dec mov dec dec dec or js sahf dec mov in out out orb pop add add and int add pop pop pushl xchg fs (bad) fdivs das push int3 or nop les or add jl ja add pop add insb add fistpll mov xor mov iret xor pop and (bad) (bad) adc aas outsl inc das sub or (bad) insb andb adc jle loopne or clc push push rcll popa out sbb add cwtl fisubl pop fisttp sbb adc adc sub mov push clc sbbb mov or loopne insb sbb sub xchg or push mov mov fmulp sub dec fsubl inc push movsb popa (bad) sub sbb subl leave sub xor or inc xor push sub in aam cmp lcall enter mov xor and xor stos int3 and sar push or sub jl movsl mov mov sub sbb or xchg out das hlt jg shrl movsl enter (bad) loope mov mov mov pop shrl leave lock adc lods ret das adc cmp mov stos add or lock mov test or jecxz push fadds in adc dec xchg and push into fstpt xor push push cld add pop cli lods xor rcrb inc mov fxch iret (bad) push cmp orl and or add adc sub fild mov xchg jecxz and sub or and js and xor inc cli ret das xor scas sbb sub and es aad popf sbb pop pusha das repnz repz mov add inc test test mov testb push xchg dec adc inc jo cmp in test push stos cs xchg and xchg add pop in xchg add add dec cmc or mov adc add jp mov (bad) rclb hlt cwtl adc sti sbb xor clc pushf sbb or dec mov (bad) mov mov cli or (bad) out pop inc sub add jno aas call xchg shll mov movsb sarb (bad) add pop pop sub into cmp movsb push mov add push xlat leave call mull jmp jle ret cltd push inc in les enter dec lock dec jp add mov les out fldenv inc sub jo xlat cmp xor mov mov movsl dec cwtl lret mov aam sbb aad dec std pop out cmc icebp pop das mov mov push mov or mov je xlat adc push notb push loope or mov sar pusha leave mov sbb xchg mov and stos or dec inc enter adc std shrb pushf lds out adc pop lret das and sbb test xchg aas popf push (bad) push jbe jae popa inc adc add inc fs mov or pushf add rcrb out popa dec mov mov mov and ss adc test mov pop es dec fcoms aam inc mov fldl sbb add adc (bad) jb test xchg inc mov xor int jmp (bad) aam jmp sbb inc inc nop push xlat stc fisub mov sbb add popa xchg dec and test cs xchg xor loopne loopne lcall sbb cmpb out and add rcll outsb push rcl pop popa sarl cmp xor xrelease push insb xchg xchg stos in mov sbb cmp (bad) sbb dec nop pusha fsub jbe pushf jnp pop xchg dec cmp jb mull pop push in fstl add in push fs inc or sbb fiadd or dec pop sbb add xor jg jnp xor cmp push aam cmpl dec sbb dec sbb movsl jmp add adc mov int3 and xor enter dec loop cs aas pop add push test es roll adc stos addr16 and mov aas rorb push cwtl and xchg adc xor dec sub inc pop xchg adc cmp adc insl movsl add sub pop icebp xor js push loopne adc xlat dec or mov adc push and dec rcrb mov repz mov xchg add out mov dec lock push lcall in xorb inc xor sbb or push xchg arpl testb out nop cmp jg cmp or cltd nop inc cmp or mov xor andl xlat test push out in dec movsb fbstp ret mov iret je add out mov add jbe fadds xor and shrl add or sbb inc outsb call sahf pop xor sub dec push fs in dec push call movsl movsb testl (bad) scas mov mov or cmovo imul mov icebp push mov and xchg nop inc flds add add lods gs test jae rcrl pop or inc cmp inc jl cmp insl rolb mov (bad) push outsb (bad) stc mov test movb aad mov gs add cmp xor hlt fdivl in pusha adc push outsl scas shll adc cmp fs or fwait mov dec cmp jle test lea clc rolb popa mov mov inc adc ss add inc popf icebp (bad) dec dec inc sbb nop loopne mov sbb push xor lock cmp test bound and stc push pop loopne mov std mov es inc adc or jl call xchg mov ret xorb or (bad) std lcall or jbe div jge or inc sub jo mov nop nop stc jge add lahf aam out add nop subb sbb sub stos xor roll iret popl or mov rcr xor and fcom dec inc sbb mov loopne (bad) mov mov les shl push into iret and lcall add xor test cmp inc sbb push test int shr xor jne xor xchg in in inc pop xor jmp jg dec sub mov add mov cmp mov js jbe or enter cld mov or int3 and lret xchg sti ja xor push cld daa inc cmpb fwait dec faddl lcall add mov es cmp addb jbe out fstps add push push dec inc mov nop test jmp xchg xchg mov add pop enter or clc cmp inc js,pt clc (bad) lea ds aas aam push or or add clc xchg dec incl xchg and add add cmpsb (bad) lcall and popa movsb ror (bad) push fstpt std inc mov add push inc int3 xchg pop and leave gs inc cmc mov pusha test mov das xor jb in xchg mov adc jo or lret or out in xor call jbe or scas push fs jecxz dec movsb add rcrb lds mov dec or nop aas xchg and (bad) mov push jo mov sub and adc and sub movsl in fmull pop adc add lock stc jl dec xor or imul xchg add pop sbb inc pop arpl and out das xor ljmp cmpsl inc push out add or sub pop add jnp insl test cs fwait inc loop adc fnstcw mov sbb xchg inc adc mov cwtl sbb dec divl xchg cmpl int3 and clc mov mov enter lods xchg sbb popf pop sbb insl lcall mov imul lret out dec test lahf and xchg pop mov dec mov add fisub jge mov arpl jmp xchg mov or cmp in inc rcrb dec lods xor jnp pop inc cld test jl or add jmp mov adc pop sbb and lock mov pop sub add adc movsl js add or xor push sub cmc mov jl cltd movsb stos pop test fisttp in inc or enter movsb mov inc (bad) jo scas jb js out sbb push fstps addb in adc dec cmp adc std add insb fild outsl inc or or push cmp out pop sbb int3 es pop in xchg loopne fs dec shlb or sub cmp ret mov les and stc sti clc or fdivs or mov push push cmc add lcall add (bad) icebp adc in or sahf dec pop rclb mov xlat inc pop or inc fiadd mov sti cmpsb cli xor mov shrb add orl jle push add add sbbl (bad) inc stos lcall outsl inc xlat jl frstor pusha fs jb cmp or dec sub add mov (bad) test jle and sub std stos jo and xchg or cmp call pop cltd inc mov enter mov mov sub lds addl jle (bad) in xchg push aas add push sbb dec mov mov std popa clc dec mov mov adc stos std and xchg aas dec (bad) cmpsl mov aam inc dec fs mov mov in xchg add shlb std adc xor add hlt xorb add push add xlat dec inc or dec rcr cmpsb fisttpll imul rorb fstps or mov clc push rcrb add push adc sbb nop sbb loope and in inc aad out mov xor loope inc cmp push cwtl or flds add sub inc add push jg sbb call xor pop add test ja fldcw pop xchg call dec andl dec mov aas sbb and insb adc xlat inc repnz fmuls add cmpl movb mov (bad) or rclb fisubl cmpsl or cmc out mov (bad) hlt adc xlat inc cmp xor lock add sbb add sbb cmp js outsb sbb jmp js imul sub and pop and stc pop rclb or add fsubrl push cmp outsb xor fisttpll sbb clc jge add inc das xchg scas adc xchg adc aad or nop in rclb sub and inc int3 adc into mov es add sub xor inc dec lcall out xor rorl dec les push xor dec fstpl add rcl mov and pop push mov aad test addr16 popa mov add xorl inc loope gs loopne add and cld or xchg mov push pop std or mov or mov enter test mov movb xchg fisttpll add jbe lahf movsl pusha pop dec adc in adc or push dec inc xor out in loope ja ret or and inc jo add ljmp inc lods dec xor sub (bad) arpl and xchg lret test sub rcrb jo jge or mov loop fsubl ja push dec fldt loopne jecxz aas sub icebp lret leave in jnp mov lods andl pusha (bad) decl sub sarb and cld jg or or cmp and push sbb and or mov cmp ret cltd add or loopne pop jl push add mov or add std pop aad cmpsl cli xchg shlb mov into add mov pop jg cld pop mov xor imul or push lods and cmpsl je les push push mov and outsl add inc or stos andb popf cmp or pop int3 add lret loopne mov cmp xorb arpl loop xor push xor mov adc arpl rol mov loop lcall pop mov popf xor negb sub insl int add data16 xchg daa dec pop push add (bad) and mov xor sbb xchg and push jo imul stos sbb add rcll dec add shlb cmp clc or hlt sbb and icebp or and mov jno sar pop push (bad) sbb aas cmp in or imull imulb jge pusha popa inc nop xchg mov dec fdiv push leave add cmp mov daa in mov push or mov stc ja lds aam xor push jp loop rolb push inc xor sbb lock fistl movsb add add test pop jae movsb pop push aas push les loopne sti add xor sub pop stc jg lock xchg insl movsb daa sbb test push inc jp leave fstpl sbb loop push in sub dec xchg pop add repz dec mov xor jo or int3 sub sub push push fdivl stos stc test mov hlt cmp xchg mov cmp pop push jg shll nop mov rcrb rol sbb dec jge cmp jne ja mov cmp notl add jo imul inc fs icebp mov mov aam ja out sarb sub cmp add or (bad) and jns in jae add fdiv scas and loope cmp jnp push adc cmc xchg add mov fadds clc cmp ss push shll movsl sub js inc xchg dec push mov dec lcall sbb add mov pop jg inc and outsb dec (bad) dec sub mov rorb in sbb lds inc sub pop xchg and mov pop xchg xor adc (bad) faddl and push loopne mov ret inc adcl cmp lds sbb mov push cltd cmp pop add iret push into xchg dec out cmp add test andb pop fs inc push jp jne mov clc jecxz std dec sbb or gs pop fs ret movsb adc or fmulp mov insb nop adc add mov cmp popf cwtl inc add mov sbb pusha xor jle dec pop or ja sbb mov loope in nop xchg es cwtl push cmp (bad) push lahf and int and cmp js jae jg test xor cmp lods push faddl sbb sbb pushf stos add es in imul jmp das sbb jg jl cld cmc cmp cmp lods xor mov push loope inc push mov das jo jno xchg push and cmc add sbb jbe xchg mov push xchg adc inc or jg mov (bad) cmp xchg nop int3 and jno pop jae jns push add adc insl enter inc cmp sub push cs dec cmp and or shl fwait xchg in and and push lret outsl rclb adc insl or and cmp pop xchg sbb test xchg or mov cvtps2pi cmp (bad) cmp ds or dec pop pushf dec sbb push inc imul dec or xchg aam mov fsubr xorl mov add bnd push js xor pop (bad) rorb bsr jbe out jecxz xor cmp mov mov imulb ret pusha cmp data16 mov mov frstor dec ja cmp in cltd inc add dec add pusha pop inc xchg test mov dec (bad) clc ljmp push xor pop pop xor lods test js out adc lahf inc insb jge (bad) add or popa inc leave push jl stos std inc es cmpl jg xor test in dec inc xor push bound and flds inc mov shlb sub call aad test adc (bad) sub push sub (bad) imul xor aam insb mov xorb test xor pop mov and jae jbe push repz mov fcmovnb mov sbb loopne push pop pop pushf mov adc mov jae adc fmulp add add sarl cmp inc pop test add out mov sub add mov faddp lock lahf nop cltd outsl aad (bad) in add and push test add xchg insb sarb pop pop (bad) sti add out fwait pushf (bad) inc add mov push mov mov push rsqrtps push xchg push adc push fistpll add mov sahf add push jg out inc nop pop mov or sub mov push jmp rcrb out mov cwtl dec add jge adcl sub scas add or mov cmp inc mov mov xchg lds (bad) mov icebp (bad) hlt andl mov jns jbe popa imul and mov sub fadds adc fstpt stos pushf add mov pop sbb roll mov test xchg lock and imul rolb (bad) pop sbb aam mov and fwait pop or nop add int3 dec (bad) mov (bad) das push (bad) in mov sbb add mov (bad) xor sub and rol sub xor repz mov push cli test sbb cmpsb les add jg cwtl mov ret sub jg sbb test push je nop sbb adc push test (bad) adc cmp mov fldcw das imul cwtl call push ret (bad) jg adc push addr16 and dec inc data16 pop insl lds adc outsb aad push push lret jbe add (bad) push jnp fiadd (bad) mov add xchg insl add jl test xor ret inc inc sub cld (bad) cwtl add jle pop (bad) cmc flds or and inc psubq pop add arpl cwtl or xchg add sub add xor and xor and mov testl and mov mov xor repz xor aam out mov xor or pop push mov add add call dec jp xchg sub mov mov cmc xchg je push push mov rcrb cwtl xlat jmp add jp scas das mov and push push or mov inc and xchg imul outsb sar (bad) lret loopne add mov xor add pop add es and pop mov int3 (bad) cmp cmp call mov shlb add bound and push (bad) aad add (bad) in incl addr16 dec mov and cwtl adc imul push loope inc cmp dec push add jne xchg in and pop add jecxz inc mov sbb add inc std aad xor cmp js out fwait push clc (bad) or mov dec fstpt jbe (bad) push cmp pushf add test nop ja inc or icebp adc cmp cmp fldcw (bad) scas pause jo ret or push mov mov sub adc xor jecxz xorb add les (bad) roll mov adc add mov enter inc imul sub out nop add xchg add orl mov add xchg add push leave sub pusha pusha xor inc ja mov adc inc inc hlt (bad) sub or repnz lret mov pushf sub mov mov mov mov adc sub dec mov (bad) or lea mov xor in cmpsl fimul sbbl push jae mov pop pop ror (bad) cmp hlt addr16 sahf mov xchg rcll xchg jmp add test cli mov push and xor xchg push jbe add inc mov xchg mov outsl lods or and inc or dec aam addl mov inc jg pop or incl movsb leave xor mov add incl mov xchg xchg subl and inc xchg pop or and add lahf jecxz rcr push fcoms mov (bad) and xlat cmc mov loope inc in mov movsl dec mov dec lods enter aad pusha push pop push adcl ja jbe push mov adc and adc add push pop push add mov ret aad js sti xor out or cwtl pop cmp test jne or mov faddl push cmpsl fldt shlb cmp lock add inc push test add push xchg cmp pop cli cmc and dec mov (bad) xlat lret add mov push lds sub loop mov add jg (bad) in push les aaa or sar fsubl jb cmp shrb daa pusha movl ljmp movb scas das mov inc xlat cmovae dec nop jecxz (bad) mov mov jno add imul fldl xor sub mov (bad) xor mov pop mov mov dec bound inc in or rcrl mov jl xchg push add push loop jmp mov sbb aas jg pushw out ja pop imul or pop jmp mov add pushf inc mov (bad) fimul pusha bswap dec lock push mov xchg sbb and and loope test pop mov push push inc dec adc and mov sti cmpsb (bad) xor adc loop les pop jno adc and ja clc push mov stos shll mov fsubl xor add xor xchg addr16 add xlat push push pop cmp mov lret sub push push mov jnp mov inc movsl mov iret sub call and and pushf pop mov sub (bad) out jbe xor sub xor aas mov (bad) mov adc mov sub xchg pop jo push jmp xchg push xchg addl popf adc push lahf dec jo jg repz pop jmp dec fistl (bad) mov shr dec nop je sub dec aaa cmp daa cmp xor mov fimul lods call dec repz sub adc test xor rolb lret jno cmp cmp or psubsb push pop test add repz or test sub (bad) cmpsl xchg pop roll mov cld cmp push subb sub or inc pop or fmuls xor cmpl call dec add jecxz mov xor add rclb or mov push dec add dec leave cld cmc sahf xchg jp stc ret mov add in xchg inc hlt xor dec je inc mov add mov xchg dec dec (bad) mov mov add add dec addl cwtl sbb pop and and add jb or inc cmp ljmp lea dec sbb add in in mov push dec and or pop sbb push scas and jo sub push mov xor sbb add adc sbb ror and call inc xor out mov fmulp (bad) pop add dec push mov cmp xor dec ds add dec push aam (bad) je mov orl test pop push inc rorb inc mov adc adc add or adc add add (bad) rorb add or xor int3 xor mov push pop cmp pop add pushf pop mov and popf and dec xor add ja cmp stc jne and mov cli sbb lds and dec (bad) sub call or dec orl mov rcrl pop add dec jo jne pusha sub xlat adc imulb repnz sbb in inc arpl ret mov adc push mov das sub cmp pusha cmpsb loope cmc arpl xor jecxz sub pop or xor (bad) xor mov push addl sbb jns lea es push push dec cwtl sbb mov jb mov ror sub dec sub movsl mov sbb xorl inc push sbb push out cmp sbb inc int3 jns jb push xor mov fdiv mov into loope add mov inc sar aad out rolb jl clc je jbe mov sbb push repz push xchg jae adc dec test add cltd loop or push cmp jl into and dec xor outsb inc in rcll mov adc mov dec aam dec int3 cmp dec jnp dec pop stos outsl leave (bad) mov (bad) loopne dec pop je sahf sbb push xor add loopne scas adc mov rcrb jo add aam xor nop lock hlt push bound mov jge cwtl dec loope or test out rorb and fdivrl in push dec cmp mov push push xchg xchg getsec pop (bad) inc inc push ret dec les subl jmp xor test fisttp pop cltd dec jno dec in loope adc fistp dec rclb iret aaa cltd (bad) cmc or mov xor pop add add (bad) dec orl orb js xor jo or lods arpl pop or pop fiadd and aam cmp sub cmpsl clc cmp andb cltd push xchg sbb or pop mov sub pop add push test and out pop mov sub (bad) icebp or mov add xchg mov data16 aaa mov sbb lret xchg mov add cli pop mov jecxz fcoms aad mov mov ret out add aas adc cltd cwtl xor mov xor sbb xor or aas sbb or add and stc xchg call nop test ficom jg mov push push mov mov add lods add dec xor ja mov sbb push cmp adc lret inc cld loopne cmp adc or sub rcl fld dec and fidivrl or and dec test insl sub dec dec fldenv aas lret in or pop mov cltd add fsubr push cmc pusha ds mov and (bad) test aaa add in pop pushf add cmp rcl inc aad cwtl xor inc add push lea push mov (bad) and mov fwait push aas xor or andl push ljmp std ja mov push daa pushf jo or movl ja (bad) push (bad) sub jbe bswap push jae test sbb sub (bad) je aaa (bad) xor push xor test dec add sub sub sbbl faddp inc and mov push mov xor xchg call lods call jl mov inc in push adc sub jns sbb jecxz fmul xchg push jle mov dec loop js out add jae movl bound push sub icebp sarb xchg and push in adc jns adc nop and (bad) dec xorl nop inc add in pop mov add mov lret fnop pop orb imul and add mov sbb add mov dec pop and inc mov inc nop or add cs shlb adc arpl or sbb (bad) xlat adc inc xor call or (bad) jo fldcw enter sahf push rorb or mov sub add lcall (bad) pop mov pop popf push xchg (bad) mov sbb les shrl adc cbtw daa gs lods out add cwtl push hlt shl jecxz cmp mov lods push les dec nop xor js call enter mov sbb jbe dec out jp push push pusha adc cmp pop loopne in mov push add jnp loopne cmp shll jg push inc xor add dec repz add push stc dec lret cmp je jno push dec inc and and xor pop or mov mov push jmp rcrb dec cmp and xor or mov je push lods add mov mov sbb in mov fnsave jo push inc rcll push push add enter iret insb cmpsl fcompl lret xchg dec xchg jge clc daa ret pop inc or loope movsl in or cmp add xor pop lods add cwtl outsb rcrb setl sbb push xor lret fbld xor int test and sahf js adc aam mov lock xor cmp insl mov in je add add gs pushf sbb or sub jmp stos loopne andl mov add pop inc or xchg or cmp add adc out arpl cltd shll pop jno push rorb or mov lods dec and pusha pushf test pmaxsw mov movd call mov or rolb jmp jae xor jge inc or pusha push pop lea enter fimul push cmp fbstp push lds push xchg mov add xor push jmp adc xor xchg popf xor fadds cmp mov add xor (bad) nop pop jp add jecxz dec push or lods cmpsb sub loopne mov (bad) rcll shr ljmp (bad) in lods push pop rcl jmp xor movsb lods fnsave ret xor add test jle push cmp jg and xchg xor stos add inc xor pop les ja es or addl andb cmc addr16 xor push xor xor xchg ret lods dec jae mov test cmpb xor xchg add je scas mov (bad) mov add test lods push incl popa add and mov cmpsl fs mov nop or cmp loope xor daa xchg push adc popf inc leave or pop push (bad) repnz lret sbb mov adc mov fwait dec or fnstcw (bad) xor and subb daa (bad) cmp mov xchg cmp (bad) hlt sbb mov loope rolb sbbb add jge pusha xchg pop xor inc mov fsubrl mov xchg inc and cmpb add das stc lods sbb loopne (bad) sub es cmp rcr lahf je lock sub call jmp push xchg idivb jg sbb insl pop jl or rorb aad in cmp sbb mov push loopne xchg clc out add dec mov loope xlat sub into jno xor add push ljmp push cmpsl mov fisubl jl adc or mov sbb push add out mov jno xchg (bad) sub inc or dec mov test cmp or jns mov add stos add pop hlt out push jg sbb mov inc and scas cli pop inc dec mov sbb fidivrl mov loopne inc hlt sub lock fcmovbe jmp cli movd jge (bad) fdivrs sbb pop push leave mov sbb xlat out adc adc mov pusha in cmp dec test add xchg pop mov insb and lahf xor dec pop aam lock add mov out loop mov pop or adc nop fnsave sbb adc loope mov adc cld dec mov jo aam inc pop cmp ret mov or and jo cmp outsb inc add imul mov movsl jno jnp scas xor adc into jecxz jns cmp test add push adc add cmpsl mov cwtl jne adc sub adc mov push adc mov movsl std add aad push nop test in xor loop push jp imul mov push std lahf cmpxchg cmp add loopne test jmp add rclb inc mov lock in repz jnp js ret jns xor pop stc lds adc outsb adc mov add xchg aad jmp sbb pop mov adc adc sub and inc inc adc add push jae jno imul jmp and test add mov sub (bad) int3 repz (bad) jae jno imul scas das ds subb cmp fcompl add xchg into xchg sub insl jle adc rclb imul jae sbb cli pop inc add shlb mov rorl or xchg sbb sub mov inc decl push and arpl (bad) jmp push mov leave and add lds test xchg push push pop pop movsl in add xchg add (bad) aas inc mov (bad) mov add mov adc js out add pop sahf xlat out movsl push jg js mov adc (bad) dec fstpl lret push pop jb jmp pushf inc xchg adc dec xchg or add push sahf sti adc and in mov popf or xchg iret verw es adc add inc sti or cmp nop and adc jns sti cltd xchg add or sbb lcall xchg push dec enter repz lock xor aaa pop ljmp jo cld add jle iret imul shrl or sub jo mov pop push and add xchg cld xor and push out adc arpl insl imul add lock cld insb mov ja add aas jae adc push ret xor mov xlat add add (bad) xchg sahf cwtl nop add jmp inc icebp add dec mov adc dec push xor sub sub inc jmp push movsb iret repz test mov insl mov push adc push push call hlt or jae jb dec adc add xor (bad) insb or adc js lock mov push add aas outsb mov add outsl inc test enter arpl add test sub xchg mov sbb xor mov clc in xor jae mov or mov (bad) (bad) xor out push cmpl js push stos repz xlat orb fcmove int push pushf add les adc hlt add dec mov jl add mov add add mov out mov mov jle hlt sub lods mov inc xlat aas dec dec pushf mov push pop jns jmp shr mov jae push mov mov clc icebp loopne negb push add ret lock xchg adc or cmp cwtl add ja adc jo cmp call dec mov jmp sub movl add out push jno div (bad) leave cwtl jns nop inc add cmpsb repnz sub test inc adc in pop adc addb inc mov int3 int3 imul and pushf (bad) es adc inc lods lret mov mov pop mov cmp insb xor (bad) dec fsubrl cmp cmp (bad) repz push and add sti call popf pop loop mov or inc imul sbbb pop pop faddl jno mov sbb adc (bad) test cwtl outsl inc sub cmp gs rol aaa addr16 shrb pop outsb xchg adc add leave jno and sub pop sub lahf pushf mov cli mov dec ds cltd push pushf mov or adc cld pop movsb adc rcl mov and jge daa ljmp mov arpl adc push enter dec popf loopne pop iret jecxz cmp inc add push lea jmp xchg add mov sti inc aaa dec cmpsb add inc mov fwait scas and mov xorb or mov xor add rol sbb or enter cmp pop xchg mov adc jno xor test xchg es mov adc dec adcl or enter add lods daa popl xchg lret xorl add inc and lds jns adc xor xchg add (bad) hlt daa pop adc dec mov fbld and add mov mov sbb sbb cvtpi2ps push xor adc repnz sbb push mov xchg js (bad) push ret add adc clc daa xor shl xor xor icebp push pop add mov inc int fnstsw cmp cltd push mov popa ss cmp mov and lds rorb enter jl push cmp clc outsl dec (bad) jo mov inc adc sub iret mov mov cmp adc mov xor aas js push inc call nop sub xchg int3 sbb xor xor (bad) in mov add arpl xor and sarb cmpsb addb cmp inc shrl lea push fs add mov sub xor mov enter daa xor or mov mov xor rcll stos das mov push enter test pop xor sbb divb and jns mov push movl dec cwtl sti pop pop push imul test mov pusha adc sub push scas mov xchg setae sub push sub mov popa push (bad) and xchg aas mov in insl xchg syscall ds xor xchg add sub xchg cmp jl mov imul mov adc ja pop lds xchg xchg add fmuls aaa loopne push loope aad lret pushf inc inc into std js add mull xchg nop mov adc jo cmp test mov adc movsl jnp dec sub push lds dec push lods dec and and aam mov iret ss mov js add cmp loop inc add mov mov jl mov sbb xchg lahf mov mov adc and and lret and add ret mov subb sbb mov std (bad) xor and add or adc jbe jnp andb imul mov add cld outsl imul xor call or adc inc cwtl fcomi inc xor inc inc or sbb sub les inc rcll roll int dec fs and xchg sub jp add inc fstps push adc pop add fwait adc mov and adc push lods nop mov cld and mov xor sub imul ret cmp lods or imul add shll mov jne mov xchg les add adc dec outsb ret jmp push cli xchg pusha call loope nop adc pop fnstcw outsl push scas or and push lods shrb add mov (bad) push lock gs aad inc and add cltd inc xchg addl lcall mov push and xchg add out or add cs rcrb mov and push mov gs pusha xor mov loopne enter push sub or xlat xchg add add mov xor inc push push add adc jne or mov imul in pushf icebp jns add pop pusha call sub sbb cmp mov jns add fadds dec js shll cmp xor xchg cmp es adc or mov sbb sub movb (bad) add and xor lods inc test add scas repz in movsl sub rcl push xchg adcb mov cmpsl adc add sbbl lods jl push and mov mov fs xchg loopne or lods outsb push mov dec mov lods jnp sti call lea mov int3 imul nop adc pop add cmp xorb jle pop aad pop mov movsl fnstcw roll or ds mov cmc movsb cmpsl out sbb mov js add daa pop shrl mov cmp pop mov rorb inc cmp nop aam pop and outsb mov inc pop js (bad) sbb dec inc call add or repz lahf popa mov xor addb add stos mov and addr16 and inc cmp lds xor mov pop fsubr addr16 ret (bad) sub fdivrs repnz xchg call dec movb test dec push and jno cwtl cmp clc daa push or (bad) mov xor test jbe ret fldt in je mov iret or xor and movsl sbb pop push add lods or movsl sbb jle push jge add cmp pusha or sub xchg add pusha icebp loope xchg mov push clc adc and xchg jae and sahf mov mov jle push js mov jns stos push scas andb leave int3 mov or xchg sarl int3 jno push mov pop loopne jbe sbb cmp cwtl hlt add xchg (bad) je enter inc or sbb inc ret into mov sbb cltd mov cmp inc int3 push mov lock mov xchg (bad) xor inc mov sbb xor dec cmc and xchg test sbb mov aad imul out nop push inc or mov cmp cmp add push jne mov pop add inc xchg btc sbb arpl xchg xor or or sbb push dec enter data16 lcall mov push adc mov mov mov jbe and movsb lods xor stos push push inc and (bad) xchg (bad) xor jp mov add adc out adc or pop jns sub stos mov out repz cmpl test loop xchg ds add cmpsl xor testb lcall xchg pusha lds roll jb sub xor add cmp repz jge,pt js add jns jle mov jns pop orb mov mov jne pop push out inc mov jle dec or mov mov cmp aas adc and les insl call rcll pushf adc enter add repnz (bad) mov addr16 sub rolb lock enter add jbe add cwtl cmp jae add test movsb mov leave pop jl loopne adc nop add sbb faddl rcl ret xor add cwtl ret xor ss sbb test (bad) in xor cmp movsl out add lcall and jns fbld push mov xchg pop mov adc or int3 add test push aaa xchg cmc xchg xor sbb push shrb fistp add sbb mov pop push mov sub add inc cmp addr16 inc (bad) loopne add xchg fsts fidivrl push add mov shll pop xchg loopne sub sbb stc leave cmp sub or call and dec and push xchg sub out push mov inc clc xor inc adc mov movsb add lret (bad) loopne xchg cmp flds in out xchg (bad) and xchg push pavgb xlat mov pop inc (bad) sbb cmp roll mov xchg sub aad nop mov push es inc sbb orb test jnp xor repnz lret mov int3 or pop xchg arpl xor dec enter xlat js add xor inc mov xchg add lods add dec jbe notl add orb out daa aam mov add add or shll call push or sub adcl push inc fs (bad) push out pop inc jle pushf cwtl mov sub sub ljmp mov out ficoml dec rolb mov daa or mov xor xor jo lods movsb orl ret test adc and cmp hlt mov pop jns jo mov call xchg fdiv add jle movsl or popf fistp push cltd pushf and fmul aam enter roll cmp lret or mov and nop add js movsb js xorb cmp or add push ror jnp in and test mov cmp push aas mov lods dec xchg inc xchg call lret cmp add cmp clc out arpl les movsb pusha (bad) mov jl ret mov add inc mov mov movsb jae cli xchg mov xchg std inc cmc aas mov add stos xchg aad test add fnsave or lock out test add das repnz addb stos sbb adc dec or sub xor mov adcl inc or sbb das aam lcall fsubl sub loop rol mov pop dec push mov gs les or aas out mov add jnp test and in mov fimul cmpsb fs cs xchg shlb adc mov ret mov nop push xchg inc cwtl jb pop scas fs add stos aaa arpl in mov outsl adc xchg mov add sub add cmpsb xlat dec pop ds mov popl mov add and jnp mov xor xor xchg jbe xchg out xchg mov rorb add sbb sbb (bad) jl pusha pusha mov xor mov push cwtl xchg mov loopne xor or das fidivr or dec and jns out or push scas cwtl xchg cmp xchg and jne jnp test enter leave jb cmp call nop inc iret repnz or lahf cmpb push sbb mov jmp mov mov cltd shrb push loop sbb lret jl stc js sub packssdw fnstcw in mov dec test pop in rclb mov enter test and cmp or jp add fsubl or mov insb inc out outsl (bad) cmp cmp sbb pop cmpsb jbe lock lock and xchg movsb push outsl push je xchg aam jnp add dec xor cmpb cmp and fmull sbb outsl add mov add jl mov imul push cwtl sub shrb xchg and addl sbb stc (bad) fstpt or addb add xor out inc xchg cmp adc push adc mov inc fdivrl xchg or jmp fildl cld inc dec xor in push cltd and push mov dec pop dec in or xor add fs cld fidiv sarl xor out sbb loope bound sbb sbb jb adc subb ffree cmp pushf push cmp jbe dec xlat fimull pop faddl pop cld orb cltd test ficom in loop add add ret and add out bound push leave cmp xor fs add xor nop and fadds add test in dec (bad) mov dec adc loopne jmp lds arpl xor jmp aad adc or inc mov xchg mov loopne cmp fistpll (bad) cmp int3 add jmp adc adc lret sub jne cmpb inc add cs jo pop xor adc lret addl cmp andb adc and (bad) jnp sbb xchg aam push inc js pushf add mov ja push pusha add mov sub leave jg lcall hlt mov jb mov xor hlt xchg idivl xor dec inc (bad) rcrb dec lret pop push jge,pt sub fcoms test out mov pop lret mov sub sub addr16 inc cmp test lods pop adc mov repz jg fdivs push adc divb js xchg insb push shll scas fdivrl lods sub or insl inc add and add movsl jbe iret push mov push mov mov ret jnp cwtl fsubl ret push and mov addr16 adc sub jb sub mov outsb scas ret imul mov lcall bound or pop ret daa mov lock std outsb mov xchg insb or sub or push fwait cmp pusha imul xlat clc bswap add xor add clc mov add js cmpsl add mov dec fadd pop push cld inc mov adc adc fildl fmull lds pop loope xlat lea add mov andb rol mov jae dec mov xchg dec and stc lock push cs in or mov fcomps in xlat inc (bad) mov dec add (bad) repnz arpl mov or sbb cmp (bad) jo or aaa or inc ret (bad) mov mov or mov add ret sub or sbb mov jg pop ja sub or cmp imul jg xlat mov call pop dec inc (bad) jne,pt sbb (bad) mov mov lcall lret dec rclb popa cmp push dec ds paddb mov cmpb push inc xchg call sbb inc ljmp std mov imul imul jno mov sub xchg inc add mov (bad) mov arpl out inc bound lcall cwtl xchg inc movsb sbb pop test sub cmp lock loopne cmp inc outsb pop clc sub cmpl pop movsb jnp fs aaa xchg pop sub add les xor vmread lods cld or sub ret mov scas (bad) nop addl add clc stos or or xor sahf fldl mov loope into jp insb cwtl sub push and incb inc push orb js adc or inc mov sub jecxz rclb lock popa xor (bad) icebp fwait lret cwtl popa dec pusha add out xchg call xor push test dec test dec pop test push xor or xor sub adc int3 and lods fsubs iret and pop movsb das fisttp or dec mov dec mov xchg or test jb arpl enter sbb outsb cs push or cmp dec sbb decb fcmove inc dec push add les push rorb dec push lcallw mov xchg and iret sbb fidivr xor arpl sbb jmp popa aaa test dec xchg test add jno add cwtl notl push idivb push push mov add out dec pop aad mov dec sarl pusha and iret jbe mov xor mov int3 cltd cmp jno add pop clc sbb xchg cmp outsb xor jmp lock pop cmp jecxz push pop mov js mov mov subb mov jns add shlb add outsl lock add adc sahf cmpsb inc dec pusha dec or sbb inc jp repz jae scas pop lret and pop pusha jno add add pop adc fmuls dec loopne mov push mov test aad sbb pop (bad) (bad) jne sub movsl andb xor sbb orl (bad) mov push popa cmp sub pop mov or les (bad) fwait push repnz sbb fisubrl popa hlt (bad) mov sbb cmp test faddl add dec mov sub ds dec xchg jmp sbb push mov sub clc fcomip mov cltd je sub cmp jl inc xor pusha jecxz inc add or dec cwtl lret gs push adcb dec ror loop xor fnstcw sub repnz add mov and cmp int3 mov loop into add pop mov (bad) call jecxz sarb rcll dec addb push inc push push xchg cltd test dec pop add push inc mov add add (bad) mov mov sbbb cltd mov sbb mov dec pop push sub dec adcl pop add push (bad) jle mov stos or mov loopne out or aad or in push stos roll fcoms cmp and jnp or addr16 add rcrl (bad) push cmc mov arpl iret loopne pop mov repnz cmp adc scas add rorl test adc shlb add push sbbb ds loopne xchg lret sbb and mov stc add push fwait pop pop push sub mov aas fsubr cwtl push sub leave or in cmp fs into mov rolb mov shr dec idivl dec add add test push and je test mov inc jns or xchg add cli data16 mov fwait adc push out sub or scas inc xchg mov pop fstpt cmpb mov xchg shlb pop add sub cwtl ds ret mov mov adc add jge stos setb aaa cltd cmpsb mov loopne jecxz insb pop jle mov es pop add mov push arpl mov mov mov insb inc jg js cmp test mov fdivr sbb test add lods push repz or cmp xorl inc add mov in int3 mov ds and xchg cwtl xlat or add cmp pop mov psrad xchg sti rolb (bad) and in in rcl mov movsl push sbb in rolb andl loopne jg pop enter jnp or daa cmp mov mov jp xor xor movsl or insb xorl cmp add push scas std cmp pusha sbb xor jo sbb inc jl push int mov jge jge mov roll fldenv push add push push jb jle sub adc and jno adcb daa out xchg sub aas sub adc sbb iret icebp and add pop outsl enter lcall gs nop addl dec push xchg add sub and xor lea jo mov xor xlat dec cmp xchg push sub mov fcmovnbe push jnp and dec mov sbb xor mov inc mov mov inc jl popa jge nop lods gs sbb cmp mov push int3 rcl scas lea mov pusha mov lret arpl cli pusha pop inc scas cmp adc sub nop push push dec mov push nop in faddl fs add icebp adc ss adc cmp js lahf mov fild and push jge ljmp and lods and imul cmp jg popf dec ret repz sahf pop pusha push lcall add inc xchg lock add sbb (bad) fmuls jnp clc inc movl les jle add mov or pusha cmp jo fidiv sbb xor out lret xchg sub mov xchg in adc xor inc ljmp sbb push mov jl outsb mov ret mov js pop clc mov add sbb stos dec rol xor pop fcoms push or sbb (bad) out mov popa popa push jae push add lret and fwait cmp adc mov arpl outsb in xor add cmp test fnop xor adc adc icebp pop mov test mov mov addb out push sahf loope push inc add int3 loop js cmp das (bad) dec and popf adc mov cltd cli andl or ror push dec xchg adc pop sbb and adc or addb into pop lcall pop or mov mov lcall cmp push mov les mov sbb (bad) xchg rclb jnp test cwtl dec cmc repnz movl rolb mov or xchg test arpl daa enter jno push dec pushf lods and std enter enter aad adc xchg xchg movsb test ret stos adc movsb je pusha mov movb jnp or lret enter fs push fisttpl add mov and inc mov jl add mov cwtl adc xor add jmp sbb jo mov ljmp inc push add popa push lcall dec mov loop mov cli into pop and out jg add xor mov gs jl cmpsl scas pop test inc stos sub pop je movsb add add mov lcall mov mov sub lock addr16 call jae cmpsl js adcb xor add add popf les jo add adc cld loopne hlt jmp (bad) and xchg popa add es nop mov pushf (bad) and jnp add fadds movsl dec push sbb cmp aas cmp lods add push das out mov popf out cmp iret aas mov mov and movsl pop es test dec push es adc inc mov cmpsl pop xchg jo pop shll lods pop fcompl dec lea cmp dec mov in cltd push mov fsubrs cmp and lods mov or test pusha rorl dec adc fiadd icebp stc push fadds cmp les xchg cwtl dec call jecxz iret mov mov nop mov cmp hlt cmc cwtl or add stc cmp xor push pop clc push or mov inc jle popa sub adc dec into jnp cmpsb sbb fnstsw add nop sub cmpsl push xor mov out or loopne sarb xor dec mov sahf movsb hlt loop rcll push fldenv add inc (bad) repnz mov hlt pop mov cmp xadd adc pop (bad) xor push hlt sbb sub test imul add flds push jnp jle mov xchg loope pushf pop cmp (bad) mov gs jb dec push push push mov jle je push ja mov (bad) icebp ret xlat aad sbb nop testl pusha popa es cmc mov mov sbb lods psraw mov das push gs daa insl push sub outsl mov push clc lds xor and aaa fsubrs mov push and out xchg test sub lret dec or arpl mov inc cwtl and cs pop sub add lds jmp inc sub sub mov jl adc add xchg notl roll gs jge loopne sub adc cli (bad) repnz add dec dec and nop fs push push sbbb cmp push xchg mov hlt jae lock or cli lea inc repnz pop or loope shll jo enter mov (bad) stc sub inc cs push es jmp dec subb aas dec add adc xlat pop and sub cmp jbe xor cmp lret sub pushf les loop jb xchg and add mov notl fnstcw xor daa hlt test lods call ss jl ds test cwtl scas pop jne and jo movb jle paddsb jae jb and add outsl push push fnstcw add mov push jno dec inc xor push aam mov enter inc ss mov aaa sub hlt aam pop sub push cmp mov mov pushf ja js sbbb sbb les xchg mov cmp push les adcl stos call mov ja push sbb xchg push xor or ficoml adc test ficom (bad) in ja rcrb mov stc inc or (bad) (bad) cld sbb cmp rcrl orl rclb mov xorl popa inc sub sti sbb sub addl sub andl sub loop sub pop add test add ss dec hlt mov cmpsl add pop bnd in sub pop xchg std or aam xchg fldenv mov or bound adc and xchg popf (bad) and adc and pushf dec outsb loope stos jmp addl nop js mov inc xchg push cs pop and add xchg sub enter pop loope sbb cmpl sbb add inc push pusha adc dec push icebp movsb pop add add (bad) xchg popf enter test xor clc mov test fs (bad) ret les xchg outsl test (bad) incl mov pop test out cmp dec je iret inc sub mov cwtl add jmp leave ret test inc sub mov mov or sbb xchg (bad) sarb pop cli test gs cmp sti xor cwtl xchg jo sub push xor icebp decl dec cli dec rolb mov mov xor push mov or loop jae test sbb sbb fadd adc inc dec mov and test dec fcomi (bad) in inc jnp (bad) loop fsts add and push nop leave push (bad) imul push jge incb xadd xchg aaa push add iret push or cwtl stos loopne mov or out pop insb test insl (bad) sarb lock add out dec jo add lcall cwtl xor outsl outsb dec push inc lods dec add decb and jle,pn test adc enter movsl sti neg adc push mov cmpsb push outsl cwtl movsb aas pop call or insb xchg daa dec inc rcrb das mov pop inc cmp push shll push cmp jae inc call or mov dec mov ss sub push loope or test add inc ret xor add add push flds or ja pop xlat incl push cs fistpl insl jne add and jg int3 mov ljmp orb cmp imul call dec adc sub jnp mov or repnz sub inc push and inc xor ret add jno sub dec push addb out or (bad) (bad) ret sbb dec lods jno pusha adc mov push rolb and push std rcrl int3 jo ja movsb loope add cmc roll mov mov cmp add andl adc mov and mov addl xor and adc insl mov add inc push into mov xor cwtl aaa pusha call push xorb push loop xor add loope pusha cmp add int xchg pop and sbb mov mov cltd inc adc add pop or jno lods pop fnsave push (bad) mov ret les sti add mov pop jp aas xchg loopne mov cltd ss sti fiadd lea out or dec pop call icebp xor cmp add pop xchg jle push (bad) decl pusha leave cmp mov adc imul add pusha xchg and xor movsw mov dec ret add aaa push push shl inc dec loopne cmp adc mov sub lds add xchg loopne mov movsl das incl ja mov jno out test sbb xchg mov js mov rorl add pop out mov movsl jge dec fmull dec loop fisttpll ljmp into fistpll es push mov and dec repz or aas add into add add xchg scas fidivl loopne push stos or adc add lds emms jns adc add xlat mov or adc lea or add adc pop dec ljmp push xlat nop jnp lcall inc cmp jnp sub mov imul mov addr16 adc push xlat jg add dec aaa sub or pop pop adc mov mov loop lea out nop sbb shl movsb fsub cmpsb add imul push dec gs inc pusha push adc add loopne (bad) rcrl je das ret popf dec popa addr16 mov subb xor or out cltd popa lcall aam fisub lcall dec inc dec loopne pop cmp push cli fadds sub push (bad) scas pop sub mul sub idivl in popf dec xchg and add les ja pusha pushw dec scas add sbb das lret cli or ja sub inc ret leave xlat pop pop mov sub dec mov push shlb add mov add adc xchg xchg fisttpll lret call or add jns mov stos pusha aas push out cmc or add lods sar and incl mov pushf xlat insb jo add pusha add cltd cmp adc or lods mov add imul incl dec outsb in mov inc push paddb inc lds inc xchg and cmp jmp les outsl add fldenv push lods dec rclb add adc sub push mov jae sub popf fs insb xlat jnp cmp test mov sbb es mov add leave addr16 push xor adc cmpsl pop mov or lcall test out daa dec pop fidivr cmc push ret mov or lcall adc in sbb outsl dec in add ja xor adc cld jge and mov xchg movsl sbbl testb push addb mov test jae xor inc add aam movsl fist mov push loopne call inc add aas andb aam xchg jl add dec loop jbe iret rcl insl dec fwait xor int3 fs pushf test divb inc movsl test push or xor pop mov cltd or add inc pop pop jl dec xchg jo adc and in add dec and fabs cmp push add jmp jl hlt fisub loope cmp cld ret xchg mov int3 rorl push xchg jl add negb in mov in inc mov movb lds lock jl es insb add jae in (bad) outsl add in movsb dec mov fs jp xlat jae inc hlt and cmovl xchg je jmp sbb and inc cmp mov lock setb dec mov std dec mov xchg bound jae call lea (bad) fs loop pop pop or test mov out hlt jge lcall and or outsb or int fsub pop imul lret in cli sbb (bad) jo pushf movsl icebp idivb xlat fcoms sbb or push mov sub in jecxz dec inc cmp sbbl jmp dec cmp lret inc sub sbbb mov (bad) dec cmp scas or sbbb and nop mov xlat jo or mov or jae and mov lods xor jmp sub xchg or inc mov lock cmc push movsb or or pop or jecxz bound pop (bad) push add (bad) movsb pop add lock lret push ret cmpsl in and and insl mov nop dec adc ret js mov sti test and add xlat jb add xchg push inc rcr xor add iret pop add adc (bad) jo imul cmc inc mov jb xchg add pop sub out pop adc or lods jo in loopne add jb nop test rcrb loop daa subl stc inc sbb into testb lcall or xchg xlat outsl cmp add popf mov test cmpsl pop xlat mov addb cmc dec mov pop and cli or mov std adc cs and add in sub cwtl mov mov loopne andb in mul int dec movsl adc and dec sbb jne jle out cwtl iret dec (bad) and addb out rolb jmp mov call das adc imul push pop (bad) int3 pop scas out xor jae mov pop add inc ljmp aam fild nop les ja mov movsb add in test frstpm(287 add cwtl sbb dec ljmp push mov add ja lods dec jo and je pushf subb pusha std out xchg add (bad) (bad) fadds in push (bad) xchg adc scas unpcklps cltd jg decb addr16 outsb push loop cld cmpb cmc sti sbbb mov orl sti jle mov pop xor push pop mov xchg loope pop loop jo pusha push cmp je dec and popf les jecxz mov adc fmul xor jle add sub push sub movsl clc dec (bad) popa and xor repnz into adc xchg or fwait add ret je or jl sub cwtl sbb in mov test ja rolb dec push icebp out jo daa lds jo test aam dec rsqrtps and mov dec std shr int3 jg rcrb pop mov mov adc ljmp out dec (bad) xor jecxz lods rcrb dec add push popf out inc loopne js push (bad) mov rorb int xlat sti jo jmp gs cwtl xor inc in dec enter add sbb jmp sbb xor imul xchg pop mov sbb in adc push mov push jg ret dec (bad) push push in pop insb int3 add mov lock mov or jl call mov ds push push (bad) cwtl loop jmp (bad) lcall inc bound mov and stos jb scas mov add jp imul imul adc adc xchg and pusha mov mov or and push ret cmp adc ret push push data16 dec lcall aam mov mov push fmull jp mov sbb jb xor enter pop mov mov or jge loopne (bad) ret loopne jo xorb cwtl fwait mov mov xlat and adc mov cld jbe push aad push nop lock or (bad) cmp or add ljmp pop lret movq enter mov hlt inc add notl and push lods jne dec mov fnstsw sti lods mov call dec dec sbb or pusha inc out mov push aas push cwtl jl ffree pop movsl xchg pop sub pcmpeqd popf jmp sbb xchg jl jmp andb add add or (bad) mov out and mov std push int3 sbb xor jo mov inc adc call lods add ja and xor or movsl fs loope add movsb adc mov add insb cmpb mov punpcklbw inc popf jbe nop ja int add imul sub mov lock and loopne sub shrb pop gs std in pop xor fwait cmpsl cs adcl push movsb add jae add mov or push (bad) hlt mov std jmp jno mov fsts in mov dec pop add xchg int and ljmp jmp (bad) popa add and hlt ficom add cmpsb jb pop or dec dec push sbb cwtl sbb jbe mov test icebp sbbb hlt xor jle dec rorl pushf and cmp and popa xor nop adc lods mov orb push sub add add popf rorl jp (bad) jbe sub aaa lods xchg daa mov dec jbe je jg ja jno clc push pop in dec cmp xchg imul mov or negb inc out ljmp ja push dec push aam cmp mov jecxz lahf adc dec mov dec mov sub pop imull pop fcoml loop imul popf repnz add push cmp or fsubrs jbe sbbb mov cmpb mov sbbb pushf aam jae add sub mov xchg hlt dec movsb inc push repz sub sbb stc mov int3 repz add or xchg popa imul mov or inc (bad) cmc into pop aam jg add push fisttpll pop mov add scas sub ret mov sahf sbb adc into nop mov inc (bad) adc nop mov adc fcoml mov xchg fwait sub imul in and push xor inc movsb ds lret xlat insb mov add mov add add jb dec and xor push jno push adc xor and imul cmp cmp jbe or inc movsb mov in adc mov add pop lret or inc fadds in mov incl aam mov jne cs mov pop mov mov jge or fs dec and jb dec mov inc test cwtl fs rclb sub out jmp (bad) incl inc outsb jp lahf xor inc sub adc int lds test aam fldenv sub in mov sbb mov (bad) xchg add popf insb lcall add pop add jp mov ret mov sub int pop neg xor add or dec out inc xchg push ret sub add jge leave dec adc in adc imul mov add mov mov aas fcoml test pop xlat adcb jmp push test mov mov adc (bad) add xor movb call pushf popa jae hlt cvtpd2dq xchg jae add cmpsl clc add int3 nop push sub cld xchg and js pushf (bad) dec add fcmovbe cmpsb aad mov sbb adc mov pusha push aas mov cwtl jns popa mov scas fnsave adcb data16 xchg mov xor test cltd cwtl pop and mov push loopne call cmc push and imul rorb xor lcall xor pop inc loop fisubrl scas test nop mov mov int3 pop jl js xor scas adc mov aad mov sbb (bad) imul mov adc push lcall shlb test js popa adc cli jbe nop daa nop or sub lds cmc popf and mov loopne int3 pop pop repnz lods jg insb lret jnp inc js sbb out stc inc (bad) mov dec add mov adc jg xor pushf dec push jge adc fwait ja sub leave cmpsb jmp lret adc or mov push lahf push adc push inc imul cs sub es xor adc add cmc loopne je add add xchg lcall xlat adc add (bad) lock fadd inc adc and fbld into sub add jns sbb xchg add inc cmp dec xor pop or cmc and pushf repnz or dec add xchg decl mov sub mov cmovb mov adc cmp add cld mov mov mov mov fisub cmp adc push out clc adc adc and lods int mov push and (bad) jp add orb (bad) push add inc push sbbb jne push sarl sbb cltd pusha test popl aas andl inc in push sub repnz xor je pop lock inc fdivs sub imul add fdivl sbb cli jno imul xlat or mov movsb add inc xor add aad and sbb aam push les pop popl mov insl adc inc (bad) je jmp subl add pusha cmp push inc dec andb dec fwait and sarl inc std pushf mov adc and sbb stc cli push dec push sbb lods mov xchg (bad) imul les add cmc pop inc je js or or mov popa mov popa mov mov sti and lods (bad) cltd (bad) stc add sbb adcl (bad) push outsl xchg jl xlat (bad) mov jo mov hlt xchg andb dec call sub inc push mov mov inc movsb aad sub or or mov and aas rol add repz paddsw cmp repnz mov mov shll lock mov jo dec sub aam mov aam repz and jno mov xor shlb push mov movsb jbe (bad) jno xchg incl cmp pop push mov or cltd stc test scas cli inc sbb shr add push daa (bad) mov dec cmpsl add idiv pop and adc cmc push inc loopne dec test lcall psllw dec outsl mov adc mov mov mov (bad) cmpsb push push inc je jmp xor xchg or popa call lock cli (bad) jo out dec xchg dec mov lcall mov and ljmp inc jmp insb lods push arpl call out roll push inc test xchg outsl push test mov xor adc and lods pop jb popa stc xchg add int3 das mov out fistpll jl add lret or jo int3 leave nop hlt xor lahf xor pushf push ja addr16 mov inc (bad) jae (bad) lock jb bound jo int3 sub dec mov ja or cltd add sub xor jmp ret sbb (bad) jno jge add add inc fildl clc dec divl ret jg add pop pusha xacquire jns test sbb (bad) jno jbe aaa fwait lods inc push jns (bad) xor pop add rcl imul add stc jmp repnz lock or push xchg pop pmulhw pusha mov (bad) pop lock sbb popa push shr sti dec pop daa mov push mov adc pop push pop shlb call js call xchg shr mov mov es sub inc jp (bad) add fnstcw jnp jns adc sub fwait inc add inc jnp add and lret xchg in icebp les dec push pushf dec dec cmc int3 xchg sarb mov inc pop js in loope jle enter dec and adcb aam pop in cld adc loop push add fimul xlat cwtl xchg test lock mov xchg lock iret mov add inc sti sahf jecxz cltd pop leave pushf mov test cmp cwtl adc and adc or sub push mov lret cmc ss js sbb add mov aam or je adc fcompl nop mov push hlt repnz pop or mov fcoml push stc or hlt adc or sbb repnz inc rorb out and pop or mov and icebp mov xchg mov xor adc insb int mov mov loop cmp cltd cmp ja push (bad) jne in adc pop test popf test scas add or ud2 in push pushf adc loopne add mov xchg lock push dec (bad) outsl add enter mov lret adc inc lock icebp rclb sbb icebp out repnz pusha sub mov add scas pop popf insl jbe jmp lahf hlt pop int3 test pop nop add or scas sbb clc jb push daa cmpb cmp aad cld mov adc ret cwtl adc sbb cmc pop dec cwtl jnp push mov jle movsb add pushf mov dec add mov (bad) call inc mov cmp in out cmp inc aam int push decb call jo mov movsl addb cmp sbb out adc enter nop xlat and ret cltd data16 daa pushf clc stos cmp sbb test add in shll adc pop movsl inc dec sbb in cli mul mov sbb test iret fs mov pop xchg loop sbb ljmp repz push fsubrs inc fadds mov jo das add psubd daa mov in mov xchg add repnz or mov push adc jae mov or ja lret and nop xchg nop popa and ret add sbb cltd mov xchg shlb in and out mov dec in xchg xor je push loope cmp nop inc xchg push xchg xchg pop jmp repz jae fs cld sbb adc dec jmp rcrb add cmp jnp in push or jae iret addb cmp ret cmc jle in push cltd cmp lret xchg sbb int push push lcall mov hlt pop ljmp inc jmp xor adc test repz movsb shll and loope lcall sub sbb mulb xchg push add movsl inc add (bad) sbb js inc fcompl add fdivrl xor sub mov cli fidivrl loopne pushf insb add and pop sbb lahf xchg hlt jo adc inc fcompl push pushf cld xchg pop jbe xor adc lock in pop icebp aam mov lea addr16 cmp mov mov jo cmp hlt adc lcall mov enter inc mov jne sub mov cmp fstp cltd pop movsl popa addl add dec iret mov jp loopne repnz insb lcall adc inc loopne sbb ret jno pop bound and les fwait add sahf sub (bad) lock adc hlt and aas and inc nop (bad) and ljmp and aad and movsb mov pusha and clc (bad) cmp imul mov add int dec jnp or mov in push inc mov or dec mov inc pushf imul adc test stc int3 sbb add test pop fdivrl and inc mov cmc add mov mov add icebp cmpsl cwtl add or dec adc add hlt push sbb clc rol jns jg sbb xchg dec add sbb sub lret mov int3 adc add adc or xchg sub pusha outsl push cmpsb daa adc add jecxz mov push adc rolb cld test leave mov jne mov aaa add xchg dec mov sbb xor (bad) cmc sub mull leave (bad) (bad) pop (bad) mov popl out jae sub (bad) mov sbb xchg jb int add jecxz (bad) jo shlb loopne pop mov leave and pop or aas dec or add jnp fdivs scas mov lcall into mov inc rolb xor adc aad add pop mov or and pop cmp add inc push jns scas add cs ret js add (bad) cs mov clc mov nop sahf and jmp inc add cmp loopne (bad) push pusha mov pop mov mov cltd push cld mov fildll ret popl cli add loope dec movsl cltd or ds mov lea in ja repnz dec movsl in or add pop sbb or ja clc ljmp mov call jno les adc mov pop pusha dec and pop pop add and add add aas cwtl mov jbe push pop or cmp flds test push lods adc ja inc stc fmuls idivb jg hlt ficom addb sub sbb test test push cmp and dec or or mov leave std scas adc fdecstp xor scas mov dec pushf pop add ds xor out fisub add shll pop or shlb outsb rcrl add js push cmc ljmp inc inc xor sub mov sahf orl insb shrl test iret inc mov rolb add add mov or insl jp rcrl add rclb and rorl add cwtl repz scas scas movb xor cltd (bad) shrb arpl sub pop insl mov ret mov mov sub movsl pusha lret cmp sbb (bad) xor das or std jae (bad) or push mov lock add pop jmp (bad) jno clc xchg xor mov push dec fsts push jl add cmp andb inc fldenv (bad) cli jle jae fcompl in dec pop sub or shrb pop adc or subl mov pop jnp or and sub jecxz icebp mov ret nop sub inc push pop push lret or mov in xchg pop lods jl mov mov sbb mov hlt cwtl roll scas and imul cs xchg (bad) call add stos icebp loop add jnp mov popf ffree mov and roll mov int3 cmp daa les adc mov mov dec push add add cltd add ja sbb cmp ret and inc push lea cli sub dec xor ds pusha ficoml jl rcr pop in push (bad) jbe inc ret inc dec push or xor out add jle and jbe and sub add into mov dec jno jmp je popf lods ja shrl and and cmpsl sbb jle (bad) xor ret add outsl and and shll iret rolb stc ret or clc imul xor dec divl jge push add or xor pop add adc iret sub add inc pop loopne (bad) jo (bad) mov xor add loope stos bswap fistpll sbbb jb loopne add hlt and push push into jno add rorl in ret (bad) sti and mov add jns ja sbb (bad) mov je inc sub xor cmpsl sarb xchg mov jo movsl or es vphadddq mov xor add dec loopne inc cs imul push xchg daa add mov pop jp rcr mov and movsl sub cwtl pop test lock mov pop pop in ret pushf xor ret lret mov add in ljmp popa cwtl loopne adc and sbb xor jl mov add and sbb mov adc inc ljmp adc hlt (bad) xlat clc roll pushf js jno mov jecxz stos jnp aaa js add inc cld xchg cli rolb mov out and rorl js mov jno jnp testl shl clc and sub add cmp and jno es stos or imul jecxz sbb adc sub arpl clc and test inc fdivrl adc das aaa mov iret add arpl adc xchg sti out js shrb (bad) push adc cld or adc out daa sti add icebp sub cli test rolb adcl repnz scas dec adc nop pop and stos pusha dec lock (bad) loopne mov mov sbb mov inc xor and ret int3 scas dec push add repnz and mov mov push jno sbb lods popa arpl xchg cs mov adc add rorl stc ja xchg mov daa test xor icebp or test sub push imul pusha or and int3 and mov mov nop adc aas pop mov sbb fdivr xchg jo and add mov test or push cmc mov and pusha movsb adc or clc in mov sub out jo xor push call int or movb movsb rclb test clc mov adc and orb push leave and rorb jl stc lods cmpl ret sub outsl dec adc push add dec push add test mov cltd xor pop push dec xor fist jo inc and data16 add fisubr aam sub cmp mov adc (bad) xor out pop xor cmp sahf nop test or add mov sub nop push dec add jbe cld lock lock hlt add xchg pusha nop int3 lahf jnp cltd clc sub or mov repnz std dec and adc sub fsubl xchg ds insb and leave imul xchg out sbb xor lret sub or loopne mov test push sar adc or mov pop add xchg push or push cmp or xchg and xlat addl sub lret pop pusha sub ds fidivr bound aas add or hlt fiaddl jbe mov call cwtl lcall pushf pop add cld rolb dec aad adc jne xchg add dec lods push xor cs data16 sti jae ja aas dec xor rclb cld add xchg and mov mov jge nop rorb cmp enter mov push enter add aad mov jl xor adc dec mul (bad) pusha xchg add dec pushl mov and ss lods mov mov mov mov aad pop and mov (bad) jbe fs ret fwait imul dec add mov push cmpb mov or inc cmp mov loopne jns add cmp fwait adc btc rsqrtps add bound in loop dec aam outsb jns jle jp inc mov clc xchg sub xor or add pop sub and ja mov lahf or adc ret or cmpsl mov pop or sub add mov js test stos in add nop mov sbb pusha xorb push icebp clc adc mov adc mov rcr xlat xchg mov and bound mov lret stos sub dec int3 mov mov pop mov mov adc outsb fwait int3 leave jecxz insb stc aaa (bad) (bad) mov or shlb (bad) mov out add inc arpl call or int (bad) enter xchg mov shl mov out sahf inc mov outsb dec add shlb out sbb pavgb lcall push lods xchg dec sarb imul ret add adc push xchg in js rclb add adc jl call cwtl jbe push add add mov sbb pop js or mov rclb (bad) xor sub inc fs fmuls jecxz sub jg xchg adc and cmc ret les add push das aam cs add inc out or pop push push cmpsb mov adc add mov add and pusha jl cmpsb test sub push inc fwait cmc clc out add xlat int3 xor int3 test add mov and out jo add jbe inc adc (bad) rclb loopne and adc mov stc test loopne xor cli push xchg and sti jno daa sbbb das out push sbb fadds js ss jle fildll roll xor daa repnz inc xor cld outsl mov nop add std add push sarl sub lret mov cmp adc mov leave dec fwait sbb adc push add rolb and jbe mov js mov xor push inc push add and xchg sbb daa xchg xchg add (bad) sbb add aam xchg mov scas loope inc sti xor mov pusha mov les fnstenv or (bad) jae add popl out push lods dec sahf dec int3 aam test xchg adc or loopne jecxz sub cld lea and loopne ret xor sbb xor stc outsl lcall rol out cmpsl cld popf in aaa (bad) xlat sub lods add adcl arpl stos jp cltd iret xchg add fld mov movb daa jl mov testl cmp adc popa jl dec iret cmp (bad) mov fisttpll and mov pop jge add inc or xchg inc and das sbb inc jg adc mov jns push gs mov cmp fs js add repz inc (bad) mov cwtl mov inc add rorl dec jno (bad) in sbb push sbb (bad) fwait mov xchg xor out pushf add sub mov mov xor std mov sub jl mov bound push adc hlt push popl pop cld mov add call das adc das dec fdivrl adc sub andl int3 inc mov xor dec adc hlt sbb mov lods cli mov inc or std mov adcl adc popa push bound adc mov pushf insb inc pop sub dec mov in scas add jae addr16 add out fdivs les lods add mov ret aas incb loop cmpsl jle lds mov js inc cld fs or cld cli adc movsl loope mov orb pop push xchg xor add movsl scas je mov test sub mov dec outsb inc add inc mov or lock enter stos fwait scas pop enter adc add dec imul pushf lods add int3 ficomp push pop jge add bound push loopne add push add cs int mov inc sbbb jne daa mov add jnp dec cmp push jge,pt xchg jecxz pop cmp xor push loopne cltd xor xchg scas push push leave inc add inc jle mov out pop arpl daa mov cmp add mov push test shr cmp mov sbb lret sbb push sub adcb daa mov fwait test call mov push add pop dec add add cmp jmp repnz popa xor or fcoms negl out (bad) jecxz and jne push cld sub (bad) (bad) pop maxps inc call add adc lahf add add (bad) cmp sub pop mov jo mov aam cmc add adcl lret sub add xchg jb call inc icebp jmp jmp punpcklbw loopne out lods dec xor jmp xchg ljmp mov stos mov push add cli xor or lods add popf fidivr sahf and add cli or das and inc iret mov adc xchg lock jae into dec add sti iret sbb adc push out (bad) xor or mov ret mov je int3 nop sub inc clc mov cmp or loope lea pop rcl jl fwait jnp adc into out loop add insb adcl push adcb pop xorb xor shrb mov cmp rclb int ljmp test mov xor jp dec adc xor adc loop sub or setns pusha and add into xchg leave sub mov (bad) mov lea enter add cltd scas xchg aas jle movsl dec inc mov sbb call shlb leave lea jle loopne mov rcll (bad) cmc adc sbb add imul int3 out (bad) aad je add cmpl icebp movb aad (bad) ja mov hlt add scas jo inc lea mov adc sbb adc inc push insl (bad) outsl repnz nop bound cld push bt and (bad) lds add aas or pusha leave xchg movsb ret fwait cmp hlt sbb cmp int popf and dec jg adc mov mov and inc inc insb inc pop xchg clc mov dec sarb xchg mov lock pushf je mov and cmpb pusha mov pusha and ss jb sub subb leave sbb jecxz shl test xchg fdivl sub mov push (bad) fsts mov js jl negl or sub mov push pop lock fild sbb add addl dec cwtl in pop adcb xchg mov pop adc fnstcw pop push js pop aaa xor insb clc pop mov ret stc sbb pusha adc mov bswap jl add out xor sub mov int (bad) scas mov insb mov insl sbb xor (bad) popa sbb rorb test sub jl ret or and adc mov fdivrl adc hlt fisubl cmc inc loopne jb jbe stos aam push pop test faddl stos push cmc lock mov xchg push into jbe push add popa cmp les sbb or mov mov xor das add cltd pop mov jmp add xor push cmp fstl sbb and sbb pop lds push mov insl mov fadd (bad) ljmp js xchg cltd add dec push or es cmpsb ds aas pop mov add pop mov fs or cmp jo xchg stc shl mov jecxz dec inc push mov adc (bad) dec mov or sub inc rcll push mov sbb add inc cld or sub dec mov mov xchg jl mov pop mov pushf rcrl jnp sub cmc rolb rorb dec pop pop or mov mov and sbb push add push ds jge cmp sub xchg sub lret jle pop pop addl push test cmp or jo sbb sub lock cltd cmp addl roll jnp pop jns (bad) mov cli lock lahf sbb jo outsb fdivrl add and out pop push nop jnp movsl cwtl inc psubb fcoms mov cltd push sub pusha adc inc mov xchg pop dec or mov mov add jbe sub loopne pop mov jmp push inc icebp sahf imul push adc sbb gs test and mov mov notb lods xor jno mov xlat sbb jne addr16 add inc adc dec inc sbb inc and mov lods xor (bad) icebp push adc xor sub (bad) cmp xlat ds add cwtl adc sub cmp add jmp push xor xchg push pushf xchg call sbb add xor cmpl icebp (bad) mov inc loope rcll sub sahf mov sbb sub sub add xor leave push cmp out push loop jno cmc inc adcl inc mov and inc jns lea or sti ffree test rclb jb or int3 repz pushf clc pop add xor add sbb or inc dec add popa stos pop mov or shrb int or icebp out xchg cli stc repnz (bad) and test push mov clc push pop pop dec inc inc push adc clc adc add mov clc inc add lock movsl psubusb cld out (bad) add or mov cmp aaa mov jo loopne xchg xorl mov add xchg mov mov ret iret sub ljmp ftst sbb adc push add (bad) cmp fs adc addl xchg call test and xchg jno daa cltd jp and add mov add stos popf outsl dec pop sub push dec inc xchg stos xor xchg cmp adc test sbb out inc popa popf and pop fwait and cmp in or out sub sub rcll fwait xchg or xchg dec or es jo add lahf out dec adc push fbld push decb mov clc push andb xchg nop lcall push pushf arpl jg cmp cmpsl and rcl or (bad) inc sbb lods mov push xor repnz (bad) popa insb sbb pop adc (bad) rclb add jp test cwtl mov add fsubs test pop clc orl xlat push (bad) imul inc mov enter push mov out xor aaa out xchg jo push jo pushf popa jo jle jl stc jno (bad) ja xor rcl add xchg mulb mov js xor insb adc xchg and sub sbb sbbb movsb rorb adc jns pusha scas or pop add ret lret test bound jns sub jp mov sub mov inc cmp mov mov xchg int3 cltd xchg add xchg cmp loopne add scas div js jns mov or je fbld nop cli mov adc mov roll mov jo loopne push jge and xchg sub xor pusha pop pop scas mov mov into mov mov cmp mov nop bound (bad) jp inc add pop (bad) fildl in leave mov sti lock (bad) int leave mov (bad) add lods in jnp sub lods adc addr16 and jmp out clc stos jecxz loopne dec popf sbb test sub inc test test mov or cmp add cmpsl shl (bad) dec sub dec xchg dec (bad) call xchg jbe lods mov inc test add push push or or mov andb mov add pop or cmp jbe or je stos mov nop xchg inc push aam mov add jmp notl dec in dec repnz jns mov nop add pop icebp jge xchg pop jp lods adc xor mov das ret in xor sbb or cmpsb add leave ret mov dec and call pop rcll push orb lods or jl (bad) adc sbb scas outsl adc cmp hlt adc nop jo xor arpl cltd popf dec (bad) xor shrb repnz adc dec or xor add and mov inc adc loopne leave repnz adcb xchg add test (bad) lods xchg adc sarl pop add pop add lock loopne or std xor push pop dec cmp lret stos push lock sbb cwtl jo xchg aad flds scas sbb xor mov sub fldcw shl test rclb pop adc les pop xchg and add pop pop cmc stos push jl add mov add repnz jecxz push div fisub fs adc lcall xor or add or dec stos sub mov inc xchg mov inc dec nop lods and pop add (bad) repnz cltd mull subb xor movsb add xchg dec lods popf and nop dec xchg pushf add xor dec pusha loope sbb pushl pop dec (bad) repz jns insl in mov add xchg xor xchg aaa dec xor pusha inc enter add sub aas out and dec and adc sbb jp stos fs sbbl xor and mov cwtl addr16 mov add or pop loop push pusha lock repz push mov dec nop sbb lock sbb leave adc adc dec or add pushf hlt mov loope pop inc mov cwtl cs imul or fs and jl or and es adc sbb (bad) and faddl movsl pushf int3 dec sbb mov jp add xor insl dec mov mov jne mov dec jp xor repnz in add stos gs nop add sub xor shr sarb popa test mov (bad) into xor xchg or or rcrb push jl adc add and sub mov fs jbe add and add clc cli dec inc push and or stos adc mov or pusha pop fidivrl lods pop jns cltd and pop add jle mov pusha add xchg in dec add (bad) rcrl in dec mov push mov pushf xorl ret in es add jbe adc inc jo dec repnz sarl mov cmpsb dec push les jne and inc pop mov add mov mov pop push push fwait pop out or decb test push dec call or and or test adc dec xchg add cwtl arpl xor fdivl dec insb (bad) mov sub xchg xor test movsb loope adc mov daa or and lods (bad) push or rol fwait xor adc jp mov fmul xchg fadds fisttp xchg jecxz sbb add imul test sahf (bad) (bad) mov push pop cltd xchg cmp mov xchg dec movsb mov mov jmp outsl pop or xchg jge bnd arpl test test sub (bad) adc mov sbb jecxz jbe mov insb lock and es loopne fisubr or loopne push add jmp mov test add in sti enter adc in int3 cmp movsl lcall lock pop jl pop xlat mov fisubr cwtl sar lea add and push scas in adc push aam inc mov ja mov pop inc sbb dec xor sar xor mov push imul pop ja mov cmp add call cmpsb mov cmp push data16 mov imul pushf dec dec lods mov cmp rcrl fmuls inc cmp sbb lds jae pop das adc and pushf movsb pop and gs inc xchg xchg and xor adc scas or sub push cwtl jnp adc sbbb jne rclb add shrd hlt xor add ret push test add cli sub sti fneni(8087 int add pop icebp sbb rcrl jecxz mov push and les dec int3 xor jnp adc add pop mov xchg outsl sbb fsubrp mov add sbb rclb add repnz xor nop cmp cmp enter jp jbe jl and adc fs imul sarl xchg sbbb push add ss mov pop adc mov or mov xchg test inc mov dec clc adc cmpsb inc in fimull add adc xor dec cltd push cld loopne or sub movsb (bad) enter sbb jmp inc stos mov xchg mov in andb mov add cmp dec dec inc pushf or push sti dec test adc pop jbe imul inc or or xchg sub dec lahf inc loopne jns mov mov xchg pop and das push jecxz dec mov inc hlt xor push add or jns mov mov add mov add sbb push jge or pushf xor mov mov fwait lret cmp sbb cmpsl call ret or bound aas mov es lcall push nop ja in sbb subb xchg sub xchg cmp sub in adc and icebp sub or hlt mov enter push (bad) ss nop dec jns das adc xchg ret xorl jl add xchg or repz sbb add pop shrb aaa mov or adc pusha mov adcl test mov xchg pushf push ret f2xm1 xor lahf lcall push dec jae cli subl (bad) jne xor call inc inc push or and or fsubrl xor cmp dec dec jmp adc and les test xchg sbb daa xchg push mov cmpsb lock dec and sub fsts movsb pop push xchg sbb inc repnz cli pushf sar addl and add mov dec fs test sbb imul popf das jb movsbl dec mov dec pop inc sub in xchg jo xchg xor add pop add hlt xlat (bad) lods clc dec jb cmp fnstenv ds inc cwtl push add loop mov rorb xor adc xor ficomp xchg mov sub ret aam adc ds leave push add in dec mov mov add rolb pop push fimul jnp add xor dec out fs inc cmp and das pop add fs inc and push xor inc test jne icebp jns jecxz popf insl sub lcall xor mov je jb ret add enter out or pop lock and inc fcmovb pop xchg push mov shlb out sti lock jns mov fiaddl enter add add xor shll fildll mov call adc insb scas xchg mov push xor lds movsb std adc inc sbb push inc sbb add mov push jne pop jmp mov or das icebp loop addb and arpl je push push and popf add mov pop mov test push test mov ret and add mov pop sbb loope pop jge js add xchg pop push loopne or enter cmp xchg cmp mov daa xchg pop cltd in push sub mov lret cwtl call add cltd xor xor notl shll shrb xor vmovhlps rcr lods out mov rcr popa jne push aaa fdivrs jmp dec sarb add aam clc dec leave adc sbb jno loope dec and scas push stos jecxz aaa add xchg hlt lods add xchg fcoml cmp add in fisubr jl icebp jns xchg xchg add dec sbb shr ret sub add pop or or repnz mov xchg add adc adc dec jl inc rclb and xchg aaa add xchg mov mov add in add icebp (bad) dec clc loopne cmp jnp push movsl sbb pop xor mov ja mov add inc sahf out add pop xchg js fs cmp into (bad) icebp or repnz mov fs loop mov adc xchg pop aas xchg mov adc dec push pushf adc push mov test rolb sub mov (bad) rcll xor dec popa and cld xchg or dec xchg add fwait jecxz mov clc pusha add push xlat (bad) enter in daa mov decb cmp movb and add leave mov and mov lods mov repnz push xchg mov cwtl shrb cmpsl dec movsb adc fdivr add test push and mov xor xchg popa hlt fcomps push into mov pop pop inc dec jne mov add pop xor es js in xchg add enter add adc mov jle push pop repz xchg xchg cmpsl pop jbe jo dec aaa sbb rcrl adc lock int cmp sti addr16 dec add adc aaa cmp or inc jo (bad) add aaa das pushf and mov jl pop mov xor xor loopne push outsb rorl adc ss pop inc or xor push cltd arpl push nop cmpsl clc movsb and pop rolb sub mov sahf pop rorb fs movsl add sbb dec lock jb cs sub addb sbb jb add les sarl dec rcl loopne jecxz daa aad in jno xchg xchg jo loopne out fldl mov adc lock xor imul jo cli cs or dec rclb jbe and and gs and mov sub sbb sub add dec std rorb xor adc pusha sub js repnz bound push push push cmp mov cmp mov xor rolb frstor out adc xchg sub hlt dec sub add fsub add fs xchg xchg adc loopne js jno xor shl mov mov sub mov mov ret xor fsub lcall or and jne mov cmp test or shrb mov or add rolb adcb sbb pusha mul pop cmpsb xor cs icebp fisubr mov xor outsl insl test and push loopne cmp cltd popa jo (bad) out sub cmp fs fcompl push dec jle or add xor mov add mov test pop jp bound (bad) xor ret and repnz adc daa ret add push cltd inc adc mov xchg lret push push in add (bad) mov adc repnz lcall add jne loopne fucom es test test in jo mov xor inc lock push test fimul idivl xor push movsb push adc dec jl lea movsl sbb sub adc mov push cltd mov jmp outsl int3 mov pop or addl inc stos pushf std push sub xchg add push add fdivl das shrl and sub or das sbb and pusha or push test inc cli sub jbe cmpsb icebp sbbb sahf fiaddl sbb inc and add push xor sub cmp push imul loopne xchg push cwtl mov lahf flds shlb and mov or and pop fiaddl clc add dec mov add iret clc addl fs (bad) sti add dec sbb add call cli addr16 and pop xchg fildl stc push dec sub adc jne fwait xor add mov fmuls or xchg or lods test mov xchg add xor pop pop cli mov jbe push or and inc mov mov in add orb jl daa push inc and and loope stos dec pop and add lock cld jne jno adc cmpsl in or movsb sar mov hlt xchg mov dec mov mov nop add (bad) mov ret push sub lock subb adc jl add adc movsb push cmp and mov enter adc push jne addl ja insl push sbbl ds add adc push add and lods pop add pop je push mov hlt add jae scas or add sub cmp sbbb xor dec out or sahf pop mov mov fiaddl int3 xor icebp jecxz dec out or out add stc incl rcrl lahf push jge in cmp std in lret aam and fcmovb pusha jle (bad) mov test xchg inc mov add xchg and sbb dec cmp cmp or ds hlt mov push rclb xor lret arpl jecxz pop add jge inc cmp ds and leave jl and in cld out xor push push mov xabort lret faddl pop popf xlat leave mov xchg push add sub cmp cs and add shld in pushl xchg xor (bad) frstor adc xchg test pop sbb sbb in jo pop add test out mov jge lods lret ljmp pop popf mov lock inc dec add push jns pop and add rorb mov lret scas pusha int3 dec jmp add rcr inc sbb cmp (bad) imul mov mov leave xchg push test adc sbb fsubr (bad) add enter dec fwait es adc mov loope ret add sub add xor lock pop cmpsb add cmp loope cld push in or inc loopne lea mov aaa xlat je out out pop pop or sub nop xor (bad) fsubrs mov out adc add (bad) fisubrl bound int3 xor daa add loop add fistl lea movsb ja push and or jle inc popa mov (bad) dec xorl loop mov repnz js lods push sar cmp outsl mov mov push aad mov jae mov bound add push lods push add mov push add and mov fisttpl addl test adc ret or adc pop in fs mov adc shrb jbe dec add lds xchg sbb das jns movsb cmpsl jo add push (bad) out adc add jnp pop or push lret xchg xor pop or add xchg pop ss mov add and test test fistpl add jno or test push pop pop or jmp mov (bad) and aas je push arpl or dec ja imul lcall cmpsb lret jp loop or mov and mov add out ljmp inc adc add cmp and call push xchg add cmp bound xchg mov pop mov pusha sbb inc xor xor jge or fcoml inc add jmp and jo add lcall mov sub ret aad add pop pushf mov es dec (bad) hlt lds stc fisttpl xor mov repz and or push popa sarb pushf adc dec push call gs push add and js addb pop push enter adc iret cmp mov clc pop gs push mov jg in sub test adc les outsb ret mov jo ret movb lea fmull lock jo inc dec sub cmp add icebp lods and lret imul xchg outsb cmpsl int3 repnz out imul lods cmp add (bad) cmp inc mov subb cld out or dec xchg addl cmp hlt in jns sbb sub js sbb aas (bad) loopne jns inc add push push enter pop jne xchg adc sub push jmp insl pop pop imul lcall add push sbb dec std dec aam setbe and out mov dec (bad) fldt jle,pt or xchg add xor dec int3 andb mov add or jae rorb aas ret in hlt bound inc inc sar mov inc cltd pop popa mov ret je dec add cmp sbb clc fs or (bad) scas dec cwtl cmp call (bad) (bad) mov add push fimul push out add scas push jnp mov jl jbe aaa pop mov inc pop inc loopne and jno add cmc mov stc outsl mov dec or or movb (bad) repnz adc push jmp push and icebp adc hlt adc mov (bad) movsb inc pop sbb sbb fstps fsubs pusha adc or arpl cli xor andb pop sbb mov das xor or in xchg shlb mov je add pop idivl gs in in and call pop ret xchg and xor xchg cmc loop test ja adc sbbb sbb mov or xor sbb imul fs bound hlt or in xchg mov xchg lods (bad) inc mov sbbb stc cmpsb (bad) jae cwtl fs int pop adcl cwtl mov pop nop push pop mov and fild xchg out fwait xchg add loopne pop add mov das in add push int add jl xor add mov adc sbb jae jl mov push das cmp cwtl repz lret js loopne js inc int jns xchg out mov inc ja sbb (bad) idivb push cmp xchg sub push sub out (bad) paddusw or inc xchg inc lods loope xchg arpl and or cmc cmp xchg test jnp out icebp mov mov mov pusha loopne (bad) int3 in test (bad) out sub mov enter xchg sbb push lock add xchg ret sbb sub pop or icebp ljmp lahf aas dec aam mov jle and jb adc test dec ja jbe pop mov mov push mov cmp mov add inc ss cmpsb arpl repnz in rcrl add add mov push sbb in movsb pop jbe popa inc mulb adcl pop xchg sub mov test xchg stos jb push hlt jne in in les rolb add insb pop (bad) lcall fstpl (bad) xor cmpsl ret out add cmp addl cltd xchg mov fdivrs mov test js sti cmc fiaddl sbb lods daa and out movsl fsts fistpl jns jle dec cmp push ja rclb pop add fldcw cld sahf cwtl xor roll clc cltd jnp inc xchg bound add mov nop stc add pop xor pop xor adc std nop dec out cltd add cmp (bad) shrl repnz test fsubr adc lods mov in call stc add cmpsl mov cwtl scas lret inc add jnp test js icebp dec cmpsl faddl pop add (bad) add lret inc dec (bad) int or or pop in and es add int3 lods lret mov cmpsb and sti mov pop jmp mov (bad) lock std and out mov inc into cltd push add push mov lods call add cld pop mov push xchg dec xchg mov or adc dec fucomi xchg jmp dec xchg xor or shr (bad) fldt cmp dec outsl add cmpsb jmp inc shr sbb addb outsl pop mov add cmp (bad) repz ret rolb or test mov adc push into js cwtl sbb pop pop or xor add fsub lcall cli add (bad) ljmp dec inc mov lds out stos pop sbbl push aaa and push subl adc arpl and ds sub cmpsb dec add pop (bad) xor xor push sub and push add icebp xlat inc jb adcb cltd mov loopne fxtract jns add aas adc and pop lods sub (bad) mov test sub orl enter sbb push icebp (bad) xor inc inc dec pop push in inc inc les add movsb sbb sbb push push sbb xorb sub cli enter dec sar and mov mov pop rcr out imulb pop call push nop add sbb xor pop xor cwtl idiv imul ret mov xor push jo xchg add fcomps add hlt out mov (bad) lods lret sub mov add outsb push sbb cmpsl insb (bad) jae sbb sub into dec or pop ror das or int cmpsb pusha push mov mov rorl in sub inc stos into arpl mov add repz rcrl mov ret mov je dec ljmp push jmp xor inc cmp movsb sbb dec js and cs pop inc cmpl clc xchg mov leave call mov adc add sub call pop es inc push push jecxz in add jnp das cmp pop shlb push pop push adc les add aaa mov nop pusha (bad) jge dec or arpl rolb fdiv out faddl jb mov nop les and mov sbb dec push fiaddl dec fdivrs xchg push pop loopne push xchg mov inc jle repnz mov daa and lods (bad) (bad) loopne pop sbb mov inc jno push add ds mov and in out ret add push inc lods fstps fistl push adc dec add push es jbe dec xchg jg and and pop lock push push cli add or cmp fildl repnz push fbstp add mov int3 aaa add mov fs cmc sub xchg mov cmp dec fcompl js jl pusha repz mov sub outsl cld sbb (bad) fisub sub scas inc ja je (bad) sbb push dec pop imul add ljmp xchg inc add jbe or pusha fdivl push mov out add xchg iret loopne pusha add rcll xor push in je jb and insb jns lods inc xlat stos imul in fmull pop and jns ss add xor enter iret icebp std cmp jg pushf (bad) xor push push and lea jne sub push fcomps xor les dec stc test ds xchg repz hlt sub mov cld push add mov int3 loopne lods mov out mov aaa sbb cmpsb and cwtl lret pop mov pop sbb loope js cmp daa lock xor xchg xor cmpsb addl (bad) ss (bad) add je in notb cmp or psubw dec push (bad) xor sub add sub je out ss cld push mov xor dec inc mov lds and ds ljmp insb or (bad) pop xor push xchg or jnp add dec adc cmp jbe pop in add fsubrs lahf lret pop adc mov xchg adc inc mov push mov push sahf push mov pop rcrb cmpsl cwtl xor and inc add push cmc adc sub lods and js sbb dec and adcl cltd loopne nop dec movsb mov lcall sbb es cmpl fstpl (bad) mul dec xor test aam jb mov xchg push push fadd test mov dec jp sarl (bad) or divb bound lock push jno mov adc or gs and pop hlt inc mov test adc int dec cld lea mov and dec mov nop test add push mov cmp push clc mov add sub pop and or mov mov xor pop mov xor cld fstpl insl xchg or mov adcl (bad) cmp lock test add mov clc and ffree and add xchg les ljmp daa into mov add dec mov push and xor pushf cmp add lock cltd pop test sbb repnz xchg aam xor das pusha movsb push repnz es cld xchg leave cmpl test jl sbb pushf mov and lea ret mov sbb add test in rcrb add enter (bad) sbb rcr cmpb pop loop decb les fistl jne push aaa lods cmp inc mov faddl hlt rcrb pop test mov sub jl cld xchg test (bad) fs cmp sbb fcoms xchg ret arpl xchg inc sbb pushf inc inc out les js mov iret sub mov enter out push and add adc cmp shrb inc nop dec nop jl dec push mov sub mov adc sbb nop pushf aad add stos sub push pusha test rclb mov (bad) push inc pop mov jp into mov xchg cmp fdivrs scas mov and lcall sarl add dec in sub dec lods flds xor in add mov popa pop mov push subb cmp pop mov dec jmp arpl mov adcb mov push jp add add push add sub or les adc push dec lcall push xchg loope sub cmpsb jge ret add mov mov dec sbb mov repz lock sbb add xor fisttpl pop je adc inc jnp mov and push adcl push inc add sbb cmc sarb dec lock push add xchg ds add sub js mov cmc mov js repz push cmp jl and sahf cmp std cmp xor pop test jge orb or (bad) ss pop int3 pop pop pop fistl pop jmp (bad) pop pushf cs push pushf movsb rclb xor repnz xchg add cmpsl loope es push add xlat push mov clc scas xchg cmp add xor jb test pop add insb mov test add mov movsb mov push xchg xor push pusha es push fdivl aam aam fcoms mov xor xlat cs add push push in repnz cmp add aad (bad) add fsubs sbb test or pop xlat aam repnz leave pop jno jmp shl sub pop mov imul fnstcw dec scas sub cmp xchg mov xor xor lods aaa or fsubs mov pop sbb xchg inc xchg add jbe cmpsl sbb mov andl (bad) jo push lods push pop cmp pop dec sub jo aas mov int and cltd sub jne sub dec xchg loopne xor ret push (bad) jle sub cmp (bad) mov leave sub or clc mov movsb (bad) pop ffreep call add dec lahf add (bad) cld xor sbb pop movsl inc or xor das enter outsl pusha jno pushf jb push or sub cld sub inc js add mov mov shrb sbb push pusha xchg sub jno inc imull test test movsl cwtl sub es les movsl add xchg (bad) or inc mov repnz push dec dec mov js rorl push mov or pop nop xor mov cmc (bad) lods lods xchg js mov lds loope inc or mov loopne cmpsl je shrb push or dec sub adc gs ret clc icebp and shl data16 jne add (bad) pop sub mov dec add and sbb fs dec sbbb cli in ja pushf roll out mov jmp sbb lock cld lods jmp ret int3 fisttpll sbb stos push mov and inc cmp imull sub sarl adc loop daa ret sub mov add cld fnstsw pop in xchg mov mov xchg add outsl add shrl fwait mov mov shrl jnp or or jbe push adcl mov add and and insb or mov add cwtl test sbb sarb bound scas (bad) sbb aam mov test movsb and shr scas in lods and sarl mov aam jo add mov pushf pop sti inc mov aad add jne and seto je test scas repz rolb sbb add jne add outsl pop or adc out xchg pushf movsb lods mov add push les xor add into and jae add cltd mov loope pop mov outsl loopne out xchg ret pop or aam adc inc xor xor fcmovb lock pop aaa pusha (bad) sarl nop add jle in cmp ret roll adc repnz adc add lds inc pushf hlt scas ja fucomi cmp add (bad) (bad) mov sub add jae insl lock add out cltd adc shrb and sbbl push push outsb repnz mov (bad) push pop push sub hlt loop or adc js test lcall fdivrs insl mov xor jns mov dec push cmp stos insl popa loopne mov ficompl pusha mov cmp loopne shrl lcall sbb mov fimul mov sti orb enter nop cmp jo popf and (bad) loope test add out pop movsb add mov xchg add js call addr16 inc mov adc xchg jnp fistp sbb add cwtl movsb fiaddl pop mov lea int imul sub pop mov jmp gs test enter call jp popf loop lock out push fcoms fbstp adc pop test cltd push push lock je jl fistl and jnp mov cmp out add fiaddl sub out rclb mov rclb dec stos subb adc jg push and xchg fs mov fild and rorl sub or xchg gs or xor insb daa push xor pop es adc loopne jo rclb push or inc out shrb rclb inc add mov and hlt test aas enter xchg imul adc stos dec rcrl and int sbb mov lahf dec or pop insb (bad) sub test aam in (bad) push adc outsb cmp mov pusha cmp mov leave je cmp dec and out outsl jecxz mov add dec test xor mov subl ret cmp andl add and adc and dec cmc ret add (bad) cmp add sti cmpsl repnz sub popa sub xor jle and ja dec cltd push mov in or cmpsl push or sub or push cmp jo pop sub xor shl xor repz jle pop insb cli push sti dec (bad) orb mov or in (bad) test jae lock xchg inc inc pop jp mov cmc sub push test jns cltd add int3 mulb clc sub stc inc pushf jo mov adc es js sbbb add aas sub (bad) push mov jge xchg adc stos push fdivr push jmp mov adc xlat stos iret sub push int xchg sti jne shll jmp lock outsl mov push popl int out and leave addl stos xchg xchg je adc and xchg loopne inc enter std push jnp in cmc sbb push lds js int3 mov rorb or mov cmp and mov add stos mov pop jae push xchg int3 add xor sbb mov jmp xor xlat mov mov mov call inc and fxch add aas add or (bad) mov cmpsl aam lods pop or cwtl cmp cmpsb loop and sbb pop sub cmp adc clc inc jl imul mov leave lods jl and cmpsb add mov cmp mov ret ret (bad) repz pusha adc jnp mov test adc mov xor lods push stos push sbb icebp rcll scas in and je mov fcoml dec xor outsl jbe das push scas popa dec and pusha mov xchg adc push or stos xchg pop data16 adc sub mov and sbb mov test pushf sbb or incl addr16 push lods adc or pop mov sub rcll int3 les mov jbe imul popf sub push mov clc insb (bad) add mov mov cmp dec sbb mov lret (bad) adc adc mov jbe mov inc repnz mov mov xor and sbb pop jmp xor je sbb adc (bad) repz inc enter and push and imul push mov jo test cmp mov rcrb adc jne leave push jge xchg sbb std xor jo cmpsl xchg xor fadds int3 cs mov popa test js stos fnstenv xchg push push pop inc cltd mov sbb inc and rol mov add icebp dec push cmpsl nop (bad) lock or iret pusha push inc mov jecxz aaa fdivrl fcom cmp adc push mov int test shrb inc jb addr16 outsb cmp nop lods inc sahf jmp cmc lds ret test jl jne sub test psrld stc or shrb out call or dec pop jl cltd xor xorl or rcll inc push xchg add nop loopne or push repnz (bad) lret cmpb das sbb add sbb icebp orl loop add ret movsb mov sbbl jns sbb pop les popa adc inc push sub into pop call lock jmp add in dec push js xchg cltd cmpsb (bad) jae add stc mov cmp push fidivr repnz in add xor pop dec and test nop or jl outsl es sahf mov rcrl out dec nop cmp pushf in mov xor cmp inc testl adc cmc or cmpl xor mov push and sbb jns sbb or and movsl sub cmpsl andl add dec lds or call jnp cwtl adc cmp shl loop int3 xchg out and mov jge loop pop movsb bound mov ret test lret or or jns dec fmul dec push addb dec popf jnp mov enter test mov les xor mov and add mov pop jge dec movsb xor inc cld bound test mov insb sti mov sub sub adc mov add ret jae push pop dec sub cmc aam int3 mov dec insb add mov xchg push and (bad) notl sub mov mov dec call and jb dec nop adcb adc push cmp leave (bad) stos cmp cmp outsl mov push mov pushf sub (bad) push adc rclb sbb roll jo cmp outsl add lcall imul pop loop mov inc test pop and add mov sahf dec sbb xchg jo out add mov inc cmp cmc pop es jl cmp lret or aam lds mov mov rolb cli iret xchg dec shll push inc ret inc movsb xchg jo fist lock pop jl arpl ret jo test add jbe ss rcrb insl (bad) fsubs aad xor lods add and enter testb push lods aaa cld add mov std add add testb mov pop test test cmc push add jl mulb pusha jo dec fcoms mov xchg cmpsb cltd xchg hlt xchg xchg dec loopne pop fwait and iret movsb and or rorb in adc sub fldcw jb xor mov xchg in jnp push call add cwtl sub les cmp sbbl fsubrs adc dec in adc sbb repz mov hlt aam adc into dec movsb adc xor aad fisttpl sub in xchg mov and mov in repz out sahf cmp lea shlb pcmpgtb xchg es sbbb std inc push inc movsb adc adc out add dec or leave jbe jne popf sub ds das (bad) or jl pop sbb inc pop cmp cmp sahf sub adc mov mov pop mov test dec sarl xchg jg pushf sbb es inc mov mov and icebp push movsb icebp dec out mov sub aam aam mov loopne xor add mov mov imulb mov or (bad) mov inc and sbb std stos mov push sub or fsubs and stos lods add sub outsb jb pop repnz int3 and mov xchg sub lock add shl mov xor cmovo cmp pusha sar jbe aaa stos pop mov sahf dec sbb adc (bad) das rolb js cmp add (bad) shrl sub push iret (bad) cwtl xor inc adc add movsl push daa pop sti add daa lock loopne inc jne mov cli sbb mov movsb add push xchg dec pop lea xchg mov jae hlt dec leave enter pop lds cs dec stc movsb hlt dec ljmp rolb push mov or adc push jne inc cs adc into mov add and add dec mov je adc insb cmp mov mov test add dec cmp pop mov mov insb lahf mov push xlat jne mov fnclex lock outsb pop add in andl in loope push and cmp repz xor (bad) out cmp or cmp sarl dec pop mov xor fisttp rorl bound shrb in pop hlt mov nop in push sub (bad) xor add cwtl dec sub movsl mov outsl lds gs xor out pusha bnd test push pusha and inc (bad) jbe (bad) std test lock dec pop mov push sbb jle int3 lcall ret jne add gs lret pop add shr es iret add and test push adc loop je sub jo shll push add mov jg out push jo adc stos add pop or mov add inc insb pop inc adc push mov loopne dec sub nop lds push add pop inc pop mov adc and test adcb jno add push push lock mov push or arpl enter mov or out cld movsb inc adc mov rcrb sbb shll cmp mov into add pushf mov lahf xor adc (bad) shrb (bad) je or ret sbb xor ljmp leave jl adc mov test in xchg movsb xlat xor push lcall out enter xor sub mov rclb add dec dec mov xor fsts stos inc nop dec xchg adc inc nop je in pop nop and test or adc mov xchg add popf je sarb xchg mov outsl mov dec sbb test push xchg sti leave in or xchg sbb scas stos push loope lock mov lods cwtl cli sub push mov gs cld cmp shr (bad) push xor flds sahf or add adc cmp ljmp mov mov std push rolb xor pop pop adc lods sbb mov jle insl and roll mov xor push push fadds into jns mov and mov or cmp xor fcoml push and fidiv push or sub mov pop jge fcmovnu xor nop jmp jns pusha in push jnp fmuls sub jbe bound adc outsb cmp xchg or cmp ds imul adc cmp sbb inc push pop cld sbb lret jo fwait stc jle add mov mov es cmp rcl lea mov int3 rcpps test pusha test popf scas sub inc xchg add out mov mov dec push fmuls sub sub ds sbbb movb fcomps mov jno inc mov scas xor imul andl (bad) mov xor or subb xchg add (bad) xor subl mov jb cmc xor shll dec lret subb aam nop adc mov push add arpl mov mov test xor lds dec fcoml ret and mov add mov fstps jl xchg cmpsl sbb (bad) sbb test cmc arpl clc pop (bad) mov sti mov inc sbb and xchg cmp insb add xor adc js jg into push fist and mov cmpl aam mov out int and push cmp sbb push pop arpl hlt movsl mov jge pusha lret (bad) adc movsb movsb test pop xchg cmp inc aad xchg mov push cltd inc add imul (bad) fist cwtl pusha add popa js mov xor cmp ret (bad) mov mov add add push adc cmpsb pop ret mov and xor cmc mov mov and sbb call cmp adc (bad) or pop cmpsb jbe shrb jecxz adc out aam test push or add pop cld adc out shll mov pop xchg jl jl add cwtl stos fdivl jle cmp sbb stos add ss inc outsl fs pushl dec lods pop pop fisttp inc lahf jno daa loopne pop adc sbb add sti push repnz cwtl sub pop push push nop in mov sbb lds rcrb or add cs ljmp cmp fs pusha test jl or adc mov pusha pushf imul leave push cmp cwtl mov mov jo movsb mov add mov xor and cli push leave int3 cmp jge das add cmpsb add mov fwait testl dec mov fcomps xchg pop mov xor sarb xor repz sub rcll fdivrl mov fnstenv cmp enter cltd adc pop (bad) and sbb add cmp shlb xor add mov lds mov aam and repnz inc push fsub (bad) aaa and lods daa sub inc cmp dec adc and inc iret (bad) cmp pop test sbb pop mov push adcl mov sbb mov in dec adc mov mov fmuls nop add (bad) jle dec xchg clc pop sbb adc and sub loope push add insl rcrl (bad) xor push (bad) xor add (bad) and pop (bad) clc clc sarl add out hlt or or arpl adc add push mov les dec sbb sub pushf add xor jo,pt mov sbb addl fistpll add xchg in pop xor mov cmp jo jmp inc xor sub mov lret add and leave bound jbe cli jmp mov mov jge js add fcos jecxz lock add fnop mov movsl cmp (bad) repz cmovo cli dec add out movups and lgs jmp dec rcrl pop sti out xchg js pusha lret jb mov enter xor pop sub sub cld mov inc jno neg dec add test jecxz mov cmc jl mov pusha out push cmp jbe mov dec dec js xor mov popa cmpsl (bad) jo add je iret cmp (bad) insb clc mov mov and fsubs nop mov cmp fdivr inc xchg jo,pt jno pop shlb nop aam popf flds jnp inc xchg xchg xor cltd popa xor mov pop icebp orl sbb jbe mov test add pop and push xor adcl push push decl sub idivb (bad) adc or dec xchg cmp mov adc addr16 ret cmp mov lods mov sub pushf sub pushf cmpb test cwtl (bad) ss in mov insl push fisttp aas mov mov in pop nop shrl test movsb in adc cmpsb inc mov arpl inc add aam (bad) in sbb incl xor lock xor add pusha cmpl adc add mov or and sarb fisttpll dec in jns,pn clc dec ds bound insb cmpsb lds shlb adc rorl pop dec test lock mov or pop dec inc or out dec xchg je stos pushf insl xor adc (bad) sti scas push mov adc gs dec add test ja shr add test verr hlt stc and dec js cmp jae pop fadds fsubrl and and jmp loope cmpb out add stos push nop cmc pop jbe lret dec xchg cmp dec imul movsl clc rol or jle or mov or cltd insl fstl adc jne cwtl loope std pop jmp mov add or adc mov dec notl jno sbb cmpsb jmp cmp jge pop test addr16 xor sbb stc andl mov sbb or adc add out xchg mov sbb xorl push pop addb stos sbb jo sahf push push (bad) daa shlb xchg pop int3 test pusha popf xor xchg or in stos aam dec (bad) xchg adc xor or and inc adc inc sbb fldenv icebp inc jne add cmp cmpb ds imul and add jo push int xchg pop ljmp test pusha es push bound out faddl push mov xchg inc lahf pop mov adc xor leave mov xor repnz xchg and xchg clc fisub dec insb lea imul cwtl add popa (bad) js mov push stos pop ret dec loopne jecxz or lods and mov sbb adc ret mov mov loope in mov sub scas xchg js cmc dec in rorb addr16 mov aas mov dec sbbb aam push std in adcb stc daa sbb imul push add add push push clc xor or pop sub int out cmp sub add je test pop mov inc fldl flds mov pusha ficom in xor jl je fsubrs push dec pushf les addr16 cvtps2pd jo mov das lods cld test or or sbb les ret sub scas pusha cwtl pop les jne dec and adc roll or shr jmp sahf in push popa daa or mov lds mov je add dec clc push jge test out outsb jl mov mov inc add rcrb shrb jno mov lock (bad) mov (bad) fsubrs or add add or and sbb jge bound and mov notb adc adc push add sbbl nop clc loope sbb or push sub sbb punpcklwd (bad) sub mov adc and (bad) jns push imul mov fs stos sbb and sbbb jb sbb add and push adc xor add loope insl test or das int3 push inc mov adc mov sbb inc inc shlb dec movsb rclb adc int cwtl je mov dec cwtl sub sub sbb enter add add mov iret (bad) ret sub bound test xor add mov ret rcrl sub jo lcall loopw int mov pop add pop addr16 ss enter nop out nop movsl jl xchg loopne enter cmp sbb jg adc pop xchg mov aad fdivs loop stos and jmp xchg sbb imul mov inc inc add loopne in pop cmpsb cwtl pop test fiaddl add xchg int jnp aad xor add mov dec push rolb xor into shrl mov iret inc add popa mov orb mov or cwtl std add into lock icebp mov cld shrb addr16 adc jge test popa ror mov dec ret sub cmp push repnz dec imul ds pusha add sub int xor xchg rorb daa ds pop call rolb insb push jp dec xor or mov sub lods mov lock push addb (bad) xor pop pop lock add mov add shl cmp inc mov hlt sbb (bad) je rorb sub lds dec xchg push sub mov addl cltd sti push pop sbb mov pop (bad) je push mov les stc push adc add les or mov cwtl adc ss loope fwait adc pop pop inc pusha sbbb or pusha pop push iret imul add lret test sbb adc enter add jno outsl test mov or mov or push mov xchg dec inc add push outsb mov popf add fcompl test lea mov cltd icebp or je and cmpsb mov jb shlb fwait loopne shll add jg bound inc into and xchg or faddl sahf sbb invd pop mov rorb adc jae fwait movsb je xchg add jp add mov (bad) xchg dec lcall out sub xor push addr16 pop loopne pop dec loopne (bad) or push gs cmp and pusha xor (bad) pop adc (bad) stc push mov addr16 in and xor lea fucomp dec lcall jle or in sbb or (bad) jge inc lldt in stos sbb push cs cmpsl xchg mov inc (bad) add xor daa push in add or test shlb lock lahf lods test es mov fsubl push add mov mov (bad) repnz cwtl cmpl btr xchg jne popa adc cmp add mov js cmp ret push lret pop mov and xor (bad) popf jns inc adc pop xorb (bad) lret jmp push mov lock pop aam into int3 pusha jnp sub push mov cmp or test pop dec adc leave sahf and dec xor stc push aad iret cmp mov or rcrb add mov shr and test sub pusha sbbl and add outsb jbe xorb mov lods cmp shlb inc nop (bad) insb or dec xor loope gs js bound cmp sar icebp and arpl mov lock xor push pop out sub mov addb xlat dec mov jb fsts or sbb add mov hlt sub es call push rcl xchg test rclb add aam fidivr cmp adc or leave mov adc mov dec dec dec and les sub imul in les add dec lds cmp add push dec les hlt pop push add add mov adc fstps (bad) sarb or jmp enter add lods jl sarb fwait sbbb popf cmp mov cmp lahf arpl cmp out mov shlb mov cmpsb hlt lods or adc sub popf mov lods jae,pn xor ds in cmp or adc into ljmp adc push inc mov adc or xchg lret sti pushf cld ret jge nop test in addl xor jl in jge and or and push push dec pusha dec sub fsubrl xlat lret stos pop pusha xor clc add ljmp push inc push cmp lock imull sbb inc sbb aam inc dec js subl mov sbb mov ja aam jo mov adc add sub mov sysret in shr mov leave arpl je (bad) nop cmp fcompl orl add push hlt push mov push jmp sbb leave gs fcmovne lock js add aad sarl sub sbb dec in mov xchg test mov xchg sub popl sbb in mov enter rorb add rolb inc popa je inc add aad mov pop aas rolb stc lods out xchg test outsb js xor xor (bad) adc enter xchg fistp dec outsb call mov adcb out cmp dec push loop mov or jp arpl mov nop int3 push je or sub data16 add scas xchg or idiv lahf cltd and cmp mov jo push (bad) and add sahf int xor aaa popf jo rcl into push mov testb int3 dec mov (bad) fisttp int pop pusha sub sub pop adc push test xchg add adc mov cli (bad) enter dec jecxz iret inc mov xchg or mov lods xor sbb xorl movsb xchg out dec cwtl sub or test call je add add movsb xchg and dec sbb call sahf and dec std sub dec aam lods jecxz (bad) cmp dec sub fdivrs xchg sub adc les or add mov mov nop je repnz xchg xlat mov loope in fnstenv andl dec sbb sbb adcl push adc mov cmpsl sub adc sbbb xchg hlt add inc nop xor fsubrl dec mov xchg cmp adc out in popl mov mov shrb rclb or mov inc xor (bad) push mov fnstcw nop mov lock pop sub ljmp mov cmp jbe dec mov add add fnstsw ret mov mov std in test sub sub jecxz or fidivl push adc sbb jno adc cwtl rorb pop mov jns sbb jb cmp inc add lock add inc sbb mov mov or push mov xor mov in inc mov daa jg jnp outsl cli inc jmp mov push nop imul add mov adc es in les (bad) imul fwait inc sbb mov rcrb nop push xor or leave and sub jl call popf stc mov jns fs or in outsb cli fidiv jnp adc adc add lock sbb shrb mov xchg and (bad) mov pop adc sahf add les push andl sub adc add pop stos push fadds lods mov and adc push pusha pop fwait (bad) in out push pop out pop xor daa iret add sbb xchg mov inc adc and pop lahf push push ds jmp sti (bad) hlt jno add sbb in movswl fist les clc sub inc lods push outsl dec rorb add aam dec stos xorb (bad) mov mov rcr in mov ds cwtl xchg inc leave xor js inc out (bad) in gs adc jl mov scas or (bad) pushf xor (bad) int adc inc mov inc mov gs jb sub or dec rcrl and xor adc jg add repz stc pop dec add popf or lcall daa loopne add cmp dec adc (bad) shrb pop dec call mov mov adc dec jb mov les in subb (bad) and sub or jp mov fbld cli add fdivrs in popl daa lret sahf or notl fldcw xor scas loopne mov mov jno push repz jl add inc insb and stos into aaa popa mov sbb inc mov push cmpsb jmp dec ja cmpl cmp pop sbb lea fistpll and or sbb js inc and pop push sub (bad) int3 dec cmp adc adc pushl rorb mov push xor pop or cli shl add push mov mov and add dec (bad) mov inc add inc sub and or icebp nop pop add cwtl dec int or push mov and cmp sub sub lcall push and sbb inc cs mov sub xchg pop mov (bad) dec cmp mov aaa pop mov xor int3 fstl enter movsb sbb cmpsb mov xchg xor mov and sub icebp cmp mov fnstcw and popf sbb jmp pusha call adcb dec nop and adc adc xchg ja dec mov cltd jo xor add ret sbb or insb repz test or push mov mov outsl xchg nop scas rorb add js inc cs inc je ret pushf dec fadds test cwtl popa insb mov test in sbb les add add sbb add or mov popf ret aas pop inc inc rorb and (bad) and lret gs adc jle or sub jns adc dec xchg adcb or outsb (bad) insb cwtl jno les mov jp push or test mov mov pop adc mov mov nop or mov jg pop ss add push outsb mov and pop scas and xor cmp ret pop mov sub xor sub xor jle lods push sub nop xor stc loop mov dec sub ret daa repnz rcr fstl les test mov in add add (bad) shll inc jo lea and test sbb dec sti ljmp lahf inc push (bad) mov mov mov js xchg pop subb dec inc jecxz add add stos loopne aam pusha xchg nop cmpl inc xor xor sbb sub fimull aam mov stc mov adc push push data16 popf ja adc stos mov mov mov mov pusha in xchg pusha or xor mov adc mulb cs adc inc lcallw rolb (bad) in and add pop inc cmp sahf gs aaa in stos repz enter mov iret or lret mov nop dec jne jg pop add push mov and cmp pusha mov fcoml cmp loop mov adc dec cld mov add cmp dec push ss or mov outsb mov jbe xchg push andl pop imul adc inc lcall xlat das mov imul sub fs adc iret mov (bad) sub cmp sub push leave push mov cmp popa xor fsub xor sbb jmp mov cmp mov and push pushf mov pop sti arpl or push sbb and push dec out lcall dec aas leave cmp adc xchg cmpsb lret mov insl and nop pop or sbb mov cmp add test jge jns mov xor loop and lret cmp lods pusha fldenv dec cmp jo adc in mov sbb sti shrl andb ja hlt add int3 and sub in shrl enter into cmpsb jmp enter add xor and sub push jno mov stc pop inc rol mov nop js sbb xor (bad) nop inc sub add cmp mov insb movsl cmc das xor add stc and cwtl add pop dec push or ljmp in mov sahf mov icebp cmpsb add in stc mov xor dec mov mov fdivs add mov insl mov hlt fistp pop xor mov or cmp js pushf cli adcb inc rolb and cs and mov (bad) faddl roll or mov int3 or add jns (bad) sbb or rclb cmp add xor pusha sbb gs es clc sub sahf fsubl rorb cwtl or and enter jb xchg add lods clc dec orl add int3 sub xor insl inc cli mov adc or hlt push dec mov shr push je and cmc lods or inc cld pop pop cld sub (bad) or push jo dec js and mov and or mov mov sbb clc mov jg mov cwtl hlt xchg mov add repnz add inc insb daa mov xchg arpl daa popa (bad) cmpsl cmp orb fmul ljmp addr16 call sar cmp sub add lahf les out daa mov lcall jno xchg rcrb loopne mov xchg pusha les insl or test xor pop jl pusha scas and shrb cmp jg and (bad) jne js daa rcrb fs and add mov lds js movsb mov add push test pusha cld mov (bad) xchg lock and je or push push mov shl aam xor lahf pop pop fbld lods xor adc ret pop add outsl fcompl or cmp jge push cmpsl movsl adc gs cmp jg sub imul adc int3 inc outsb enter lds sub cwtl mov mov jl inc mov cltd adc push xor adc add jecxz test push popa add in mov jge add loopne mov jne inc jl jp mov and (bad) mov pop mov data16 cwtl popf sbb lret mov into add movl dec enter les mov pop test jbe jb movsb bound add adc shll push dec test pusha sub out sbb pop test lods sbb adc mov push pusha or les mov hlt inc xor inc jg aam test mov xchg inc add hlt add mov jns add pop sbb mov or mov ds and mov xor dec inc les (bad) mov stos loopne pop mov push (bad) push lret mov pushf inc insb push sbb xchg nop daa mov mov push xchg xlat sub nop js xchg or push add pop mov scas nop bound sub jo dec mov mov or inc inc inc mov lcall fsubl xlat dec pop xor je roll jns mov dec call mov sub mov xor and dec sarb sub enter inc pop iret add dec ret (bad) mov imul enter (bad) aam pushf cld movsb sub addb test push push pop lret add int xor sbb sbb pushf push imul pop loope aam jb or dec out je add add add orl sub enter pop lods xchg dec idiv nop les or inc sub out cmpb sbbl rep hlt add mov xchg inc cmp test push adc add push mov fisubl jae add cmp and mov pusha push sbb faddp push jle mov inc je mov ret andl pop lds dec jbe sbb jo or xchg enter in mov add dec dec loop shll pop xor dec shlb lods xor pop add repz add dec push adc cmp pop fistpl rolb repnz (bad) pop je push sub sahf and push inc inc cltd fcoms sahf mov int3 sar dec and dec and test fsubrs pusha leave or in cmp rcll add inc adc mov mov fmull push das jb xor in jg mov addb push mov mov add arpl bound stc xchg push push sbb xchg fildl out or rorb jbe call imul sub adc pop jg enter nop and pop or pop adc sub (bad) mov add leave add mov outsl test test inc add and inc inc fsts cltd hlt cmp pop fsubrl sbb and rcll outsb testb sbb hlt setge sub aam or push mov inc dec fldl push cld mov sbb data16 mov add xchg movsb push sbb add test xchg cli fidiv aaa test lcall pop and sbbl fsubrl cmp add repnz shll xor push addr16 les mov inc test js jl scas jmp mov imul cwtl add or pop sbb stos fmuls and dec mov call xor add ja mov dec and lcall jb stos (bad) push popf xchg xor cltd sbb je dec or ret mov dec push stc loope inc rcl ret cmp or test pop inc test xadd inc add and fmuls dec shlb imul pop into mov cmp mov pop clc ret mov add sub lret cli cwtl dec icebp mov pop push stc push andl pop dec repnz or mov popf sbbb mov mov xchg cwtl dec inc sub and add aas xor mov inc mov dec (bad) and push xor lock lret dec pop std pop rorl cmp or roll repnz mov sbb add and cld push push cmp dec push insl mov inc adc aas (bad) gs rorl rcll fwait mov add inc aad inc mov jo rolb mov shr xor inc sub adc sarb mov daa dec push and insl mov stos or (bad) (bad) cmc loopne xchg jbe out add push aam (bad) idiv pusha add adc xchg and inc les roll loopne rolb mov popa lahf push daa fidivr jo jo adc push inc dec push add add jns nop loope inc je add adc mov in int3 push inc add dec cli (bad) stos dec jo or adc add xor xchg pop add push mov rcl pusha xor or sub inc sbb aad lods mov std rolb push in outsl sub or loopne push data16 adc daa lds sub or (bad) and fdivs icebp in ss ret out nop dec push dec or enter inc les xchg xlat pusha add xor call std pop lock dec dec add add inc aad xchg roll cltd jl in dec les mov add stc mov push and lock and or movl add dec cmp adc xor es add loopne lcall pop (bad) xchg add dec push fsubr mov dec mov pop add and xchg mov push out mov add pop lahf xor fcmovnb add and adc aad jnp inc sbb stc es faddl and rcl inc pop inc mov and ljmp sbb or inc (bad) rorb inc pop or and test xlat push test add loopne adc (bad) int3 xchg and cmp mov dec inc add jle sub mov jno popf je andb (bad) xchg pop inc add rcr jp test pop cmpsb mov dec push sbb (bad) popa je leave adc outsl add jo push and inc add mov pusha dec sbb add dec and adcb call lock fsubs je aas pop add rorl cmp cmp jo inc fsubs or xchg push add adc inc gs push loope xor add xor pop mov inc push call lret popf lahf iret inc rclb pop fbstp pop and lock mov je dec cmp add (bad) mov in and outsb or xchg rolb jbe inc insb jmp sub dec inc jo pop leave xchg je inc lcall les xchg in sub (bad) xor cmp fsubrs (bad) xor adc or inc sar enter mov mov add (bad) stc repz xor ret aam push rorb mov stos push mov inc xchg push add inc jmp pushf and push mov pop xor push add jb ss ret pop stos stc rcll dec lret jns and inc sbb dec or loop mov jno in xchg or enter pop dec xchg insb adcl and daa addl movsl mov and push fwait jl inc xor add or test or inc sub (bad) (bad) cmp loop xorb mov jbe js inc push dec or adc xchg lret sub test fisttpll icebp insb inc and fmull or in inc and sub scas inc mov xchg add push xor adc out cs jmp repz and xor mov stc mov cmp jl adc add lods jno mov pop lea mov repz dec add sarl pop mov test andb mov jb or mov dec mov mov lods bound and imul dec push inc cs fdivrs or mov inc cwtl dec add movsb or jl adc and (bad) scas repnz and sbb push call xor lcall xchg sbb adc push pop lock jns (bad) jmp ss lret les xor inc xchg or je or loopne pop pop or (bad) hlt adcb shl rcrl scas (bad) mov pop xorl sbb pushf xor std lahf jae stos add add pop dec mov int mov xor nop xchg bound test xchg and add add push (bad) adc or adc aaa shrb loop xor movsb mov inc int push sub pop cmp test dec pop jl inc aam xchg dec fnop or sahf push outsb adc imul adc add push icebp cld pop pop mov add iret xor bswap clc pop sahf push sub mov push (bad) ja pop dec roll xor push cmpsb xchg (bad) push push adc adc add jle icebp gs xchg sub mov divl add jl xchg shlb cs les push xchg aad inc sbb int3 jae inc scas pop rorl adc cmp mov add outsb divl cwtl mov cmp and mov dec loopne push push adc add aaa test adc js dec sbb cmpsb je push mov lret pushf pusha call or xor mov cltd (bad) jns or ror and adc cwtl xor mov test loopne mov dec and pusha mov insl xchg sbb mov jo fadd test mov cs cmp sti xchg adc inc bound xchg pop imul push fs fdivr add sbb call in int add xchg hlt mov cmp pop dec lea sti xchg insb or sbb aad dec jae xchg hlt orl and and xorl jl rcl decb or dec lea mov push in fdivrl paddb push xchg jl push lods or or call shl and and loopne in (bad) stos add push xorl add inc cwtl js popf adc inc add inc rorl inc xor ret inc sbb (bad) mov sub je bound addr16 inc (bad) jo pop push les add lret js xor out adc xor cmpsl sub ret test movsb mov ds push and jp mov loopne inc mov sub pusha in push shrb push in data16 int3 mov and and or dec into subb and popf pusha sarb jl jae fisttp pop pushaw std sbb decb mov les int dec mov sbb dec fnstsw xchg fadd pop jnp mov adc add jno (bad) push cmovae shrl (bad) shrb mov cmpsb fdivl lret imul (bad) jmp (bad) jle sbb sub movsb add adc rcll imul paddw inc or je sbb mov add pop stos adc add mov shrb push pop push xchg shrl dec aad mov jns adc mov adc fidiv dec add cmpsb xchg xchg jo mov cmp cmp ljmp add mov aam cwtl leave and cmp pushf xchg imul test xchg insl xchg nop nop inc jo push fiadd sbb add clc pop cmp xchg and gs jle add (bad) decb inc sbb xor fidiv mov addr16 adc cli and movsb pop push sbb ret mov pop adc (bad) cli out lods and inc mov mov or cmp aam in push or out or xchg enter aas (bad) dec js std add outsl or test adc (bad) out or mov mov mov (bad) adc cmp or xchg shrb push cwtl mov mov (bad) mov fwait ret push enter dec rolb xchg jge add push addr16 mov xor push and mov mov xchg imul rcrb pushf pop push cmc js or loop xchg mov aad stos adc pusha dec cld ja out fistpll mov js cmp hlt sub mov les rclb ljmp jl mov nop adc arpl or dec nop add mov adc fadds pop fildl lea mov adcb hlt aas es outsl rcrb adc xchg inc int3 add mov pop xchg push add push xor and mov dec pop rolb push adc sub sub (bad) clc sub mov mov out jae jp cmp dec sub add mov (bad) cld mov inc add inc sub out jp aam pusha dec bound or and (bad) adc cwtl mov popa sahf loope mov les sbb in push xor fs mov mov add flds addb inc or push ds pop dec xor xor push mov mov xchg inc movsl xor clc mov cmpsb jl call mov add sub incl je jae test or mov or xchg scas std pop inc shl mov mov rcl jl xor addr16 mov xchg pop pop mov rolb adc std clc pop loop loope fcomps xchg loopne ret mov lea or push push pop mov dec lret dec or (bad) pop roll shlb sub pusha sub push mov movsb inc in mov sbb rolb das test lods push push out inc fcompl in add mov cwtl xchg cs subb fdivl dec dec xchg sbb dec mov les inc dec jo loopne lahf inc pop mov (bad) gs and mov out pushf mov add inc lods xchg mov mov rclb add inc mov and fdivs nop fcmovb cli sarl jecxz pop in dec addl scas inc inc lahf daa test pop or add mov pusha jb outsb sbb loope cltd faddl pop add push or (bad) mov adc sahf cmc mov lods int3 int xchg add xchg mov pop and xor (bad) sub push or add mov sub mov cwtl dec push and into push xchg mov or jl repnz inc je mov int3 out add out and inc dec (bad) lock pushf jo xchg xlat je lock pop xor adc pop mov mov mov pop leave xchg and dec rcrb aam test addr16 nop xchg jmp lea push pop ret cli rolb mov pop jnp fs cmpsl test in stc rorl inc inc xor mov push popa loop cmovae hlt pop inc dec shl xor xor into adc pusha jge add jno push push lcall or test daa flds loope xchg mov xor dec xor sub dec adc cld mov push mov pusha adc fdivrl mov add mov rolb fildll lock in repz pushl add or lahf jae outsl pop idivb and enter jmp dec pop cwtl and js cs ljmp nop fsts out inc in hlt adc jecxz leave fadd and in inc dec xchg mov xorb inc xor add ret clc push cmc out pop mov mov mov sub daa cltd pop (bad) sbb (bad) xor lds ftst bound and dec call sub inc mov movb pusha in movsb push push bswap ret add mov int3 jl callw pusha es pop aaa add mov xchg add dec test clc sbb add addb and arpl dec mov test lods add ljmp push pop inc sbb inc adc (bad) jl mov lea aam pusha clc outsb movsb or dec loopne inc pop dec and outsb sarl mov inc lcall fldt mov cltd dec xor inc mov mov adc shlb loop pop pop mov adc jmp enter int3 jge aad daa push addl dec pusha addr16 dec pusha or nop adc xchg xor sub xchg inc mov jae leave repz jo or mov or jl push mov outsl cmp mov jl or stos mov popf mov push add mov add sub and xchg out mov pop lea push mov nop xchg cltd sbb aad add push fbld mov push add mov in and push and add out jno mov je mov ret imul or loopne in popa mov xorl je add push (bad) push out jb aaa dec push and cmp and loope icebp add adc add nop inc sbb xlat jae or mov out cmp push call and jo push icebp and ret sub inc inc or push shrl xchg mov shrl jns cmp rorl lock inc mov test lcall push lret jnp mov cli rorl loopne les lds xor xchg xorl ret lret pushf add jp add xorl xor out mov mov xor ljmp xor xlat add inc and std test xor mov test ret xchg movsb sub sub (bad) clc js pop sub pop push xchg add push movsb and sub sbb sub jmp iret jg mov dec mov pop xchg and push sbb test or cmp cmp das movsb stc loopne mov (bad) leave insb or pop adc mov and ja xor pushf or cwtl lret mov dec add shrb add inc insb add (bad) out mov mov lea mov jnp jl inc sbb mov or into or or and lock pop xor inc push ret arpl xor cld (bad) mov add les cli ret add jb lahf lret subb mov arpl movb and mov jne call nop pop adc sub push sub call insb or lods push jbe (bad) lock bound pusha les mov faddl cwtl inc pop xchg xlat lock sub pop in lret stos lock in scas jmp add add movsb pop outsl xchg or fcomps sahf adcl pop lds es and rorb lret dec sbb inc xor and aam je push lcall leave les adcb push loope addl push mov mov jl pop int inc inc inc xor leave cmpsb xor mov sbb xor (bad) adc bound js hlt nop adc jmp loopne rorb clc inc inc dec cld in mov fidiv mov cli roll shlb and aam jmp xor or enter (bad) fidiv inc iret inc ds add mov sub inc sti popf popa out stos imul es sbbl (bad) cmp push mov rolb push add or daa push mov lds lock xor add sub shrb jmp shll xchg lock pop lods sub dec adc mov fdivrs push gs dec sub xor add test dec stos push test pop ret rolb add out jle nop outsl sub mov push sbb addr16 and add sub jns fcmovnbe xor ljmp (bad) adc dec mov lock popa xor and jne movsb sub rclb xlat call sub jg xor rcrb mov pop or outsb cld popa pop imul pop inc inc fs mov ss xor sub scas add stos loop sub ret int3 lock mov add or pushf movsb jle ljmp orl call nop xor (bad) nop mov sbb mov lods shll jmp mov and and out dec dec cmp sub ror sbbb or sbb rolb sub xor sbb dec and and jns (bad) arpl sbb or jo test inc test adc jne jno lcall add dec inc push sub and add rorl icebp or lock js or pushf xor outsl inc sbb loop cmp cmp add imul push cs mov push bound lahf fidivrl mov dec (bad) mov cld adc mov adc imul pusha add jecxz push call iret repnz fdivs leave cltd push test and out mov adc add out fmulp sub (bad) jno sbb gs and lock cmp mov stos mov jle xchg (bad) xor push add pop imul addb (bad) ja cwtl mov mov (bad) xor lock cmp loope movsb cmp movb adc jecxz std imul mov push add adc adc fdivl push ljmp pop mov add in (bad) pusha call or jp add pmulhw mov and fwait pop xchg push push xchg scas int shlb nop popa sbb ja int3 mov add sub fwait cmp mov fdivl lock xor jle push mov mov xor adc addr16 jo sbb xchg gs dec out (bad) xor push mov fs add jg insl stc xor leave or inc stos sub add adc xchg pusha xlat push (bad) popf jne add inc xchg inc adc sbb sbb sarl cmpsl enter fdivrs push push in fs shr xchg mov sbb add scas sbb clc push push fsubr mov (bad) fidiv ss push addl into rcll mov lods or das (bad) pop scas push jo and or sub lea movsl ja xor pop add jnp out icebp lret jmp outsb inc jmp inc push sbb xor push negb mov (bad) das popa addb pop gs cmp enter push ds xor add aad xor sub pop push adc push call pop ret orb int3 or and push ret (bad) enter jp lea and mov test push push mov mov scas aaa and ret in inc insb and add ret aam lret or mov add mov sbb jmp loopne add ss xchg sbbl cmc xor mov push push call fwait push sbb ret and inc push ret out popa or ljmp pop push frstor adc cmp nop mov jp lahf cmp xchg fstpl repnz add jle out push pop xchg cwtl clc add js test mov insl mov ret lahf or jo add je adc sbb xor push xchg xchg sahf nop pop js setns ja push popf pop rorb mov cmp add insb jmp cmp roll xor sti sub xlat or push std inc pop jmp add xchg cmp (bad) and xchg xor or and and add leave jle add dec scas dec test jo jnp es jecxz inc rcll jge jge (bad) or xor push cmpsb or mov xor sub nop nop or nop enter inc cmc clc addr16 jnp xchg push fistl sbb xor fildll outsb pushf push out das popa inc jmp repz xor xchg or or pusha pop sub notb add leave inc repnz add mov hlt inc push int xchg dec mov fwait subl shrl mov in and (bad) xor sbb and cld dec fisttpl push sub push pause jg (bad) dec dec outsb or shll mov or nop push into leave xor cltd mov push nop push les dec cltd bound test jo mov or inc fmulp mov xor push pop cs or fildll fcmovbe xor or mov xchg jge cld inc add pushf (bad) fmuls pop pop cli jo cmp out dec jo insl xchg mov (bad) ss or dec daa ret jg add mov push iret ja fild inc jmp push adc test mov adc call (bad) (bad) lret push dec dec sbb gs inc mov pusha std sub es or repnz jge dec mov (bad) or fdivr adc cli and fadds lods std imul out in pop xor adc bound fsubrs lret pop adc arpl push shrb shrb xor jge lds cli data16 clc test dec push pusha sbb dec pop xchg aas cmovle addr16 jb dec jg arpl push sub inc enter in pop popa mov rolb (bad) or add std push shrb bound push push cwtl fildl or cmp mov jnp lea push fcmovnb or pop rcll push bound out xor mov adc add cs das push and or cmc hlt iret jno mov sbb clc lds sub push fcmovnu push dec (bad) xor sub lock jo rorb or xorb loop dec shlb xor ficomp inc hlt mov add fnsave adc pop add popa jb add addl jnp fadds nop dec mov or mov jae xor add (bad) jo and dec adc cwtl sub or cmc nop mov xchg test add mov dec js push es jne adc lret fcmovb sarb sahf (bad) cmc and cwtl inc add adc and repz jae rorl ljmp push (bad) (bad) xor es push inc mov fwait pusha jnp sbb lock addr16 mov loopne test push stos jnp cmc sar jmp das sbb inc int rolb sub arpl test pop sahf cli inc xchg repz xor and lds cmpsb mov mov jmp setbe (bad) ret int3 jb mov adc es add fneni(8087 push sarb jns loope add daa fs mov sub neg sbb xchg or jae adc jns nop and nop pop xchg test xchg jecxz dec sbb (bad) xchg inc loop xchg mov mov int3 add cmp ss aam js xchg pop fwait add arpl fisttpl sub fsubrl aaa clc xor inc mov lea repz dec clc mov jo popa imul add pop es rcrb lods repnz fstl pop addr16 mov aas mov and inc pop cmpb pop add cmp push ror and sbb add add les loope adc les push pop cwtl jae aam cmc (bad) lock cwtl mov call pusha lahf sbb clc cs adc add mov add cwtl mov aas mov jo jns dec xchg jnp mov nop rcr sub bound movsl add sbb data16 fadd sub xchg mov pop jo ljmp push xor cmp pop dec push aam test arpl add sbb pop xchg or clc lret or es fcoms jb lods or hlt movsb add pop gs call cmp movntq cmp push dec dec mov loopne repnz negb jmp push ljmp push mov rcrl xchg fstpt fdivs js stos in call inc push inc out test je sti bswap (bad) xchg in or push orb or lcall sarl int3 in cmp cmp and enter mov xchg pop js or inc sarb inc stc es xor sub pop jle cmpsb fistl enter packssdw dec in inc fmul push mov (bad) jg mov stos add and rolb pop jp push or pushf jns mov cmp add or xchg dec test adc jp sub inc movsb xchg xchg dec cmpl and push inc fs lret cmpsl cmc fcomip mov add mov ret push out xchg mov aas cmp mov fsts xor pop inc rorb xor test dec xor sbb dec mov xor dec xchg jecxz xor into imul test mulb and pusha xchg loope jb sub dec add inc xor adc sbb hlt xchg inc xchg and fmuls es mov add mov cmp and out cli test lods inc or sub xchg test pop add inc jp xor stc dec sbb cmpsl push mov lcall and inc cwtl adc repz sbb cmc stc sub lret das adc out cmovb popa (bad) inc inc add out mov xor insl mov or fs mov int add mov mov dec mov pusha pop fild js pusha ret mov jae inc lock scas and jo les jp xchg icebp adc or out movsb add mov or repz jno add jge pop loopne cwtl push repz stc push mov lock mov push inc push mov or add adc fcoms leave add add test add ficoml lahf in cmc xlat push in lret lcall cld push dec jmp and dec adc dec repnz pop dec cmp cmpsb xor leave mov mov adc xchg clc popa icebp mov adc stos idiv mov cmp cmp add cmpsb inc add mov mov inc or sahf nop push add fsubs loope stos dec or pop loopne inc or daa dec jnp pop jl (bad) xchg (bad) iret adc lods sar (bad) call mov mov adc xor data16 (bad) in rcrb mov mov sub add popa pop shrb imul sahf stos mov sbb movl add es test repz jo test inc push in es add dec hlt arpl add dec sar movsl outsb or add adc and sbb sbb dec xchg xchg js (bad) in js cmp inc call sahf fistpl adc pop add jmp and outsl mov es (bad) in out dec or xor dec lea popf jnp jbe popa push jmp (bad) xor adc xchg mov pop push add lret test test nop xor xor mov (bad) xlat cltd xchg ret nop int3 jae add and scas loopnew je inc bound pop pop cmpsb lock mov nop push rcll jecxz stos xchg sbb push pop xrelease sub jmp xor les (bad) xor pusha dec sbb mov mov pop sahf enter cwtl and out and in ljmp test fiaddl dec frstor into pop (bad) rcl daa mov pop int3 push mov dec jmp push out cli mov pop push lock xchg or and add sbb or pusha mov sbbl mov test pusha sub and pop cmp loope jmp sub mov and dec dec lret aam insb fs call and add sbb mov inc nop scas or mov and fnop inc les (bad) ss mov popl pop adc in pop xchg adc popa add rorb andb push inc mov and mov sbb adc mov sub xchg sarl lret mov sti js xor sbb idiv push shld pop call inc pushf test sbb mov es or ret pop mov fldcw xor aad lock xchg jl pop xor movsb sub js loopne mov es movsb sbb inc push cs in into cmp pusha add fs jp ja adc mov mov mov mov sbb and fs popa sub sti xor xor or mov std (bad) or scas sahf gs ljmp jae mov jno mov and jp or mov jg xchg pusha loopne ja add sbb fstl into or popa or or idivb push sti es rolb aam dec fldlg2 xchg mov jp mov es ja insb push iret pop add xchg dec mov add notl addb pushf test in stos cmc dec (bad) scas xchg or jg dec orl mov push mov push add cmc (bad) jmp imul jno push cwtl push lock inc add lds movsb decb or or daa (bad) lahf icebp cli inc xor inc xchg xor aam outsb clc pop je or mov in les jns ss cld and push sbb int (bad) mov paddsb xchg or xor ror jmp and or out ds dec das push pop popf dec push sbbl pusha xor mov rolb mov mov push cmp pop out les call clc mov es sahf pusha les imul inc cwtl dec faddl je mov imul add cltd sub outsb pop insb inc add hlt sbb rcr xor or xor movsb data16 add jmp and add movsb jb fwait ds imul in adc xchg in fwait add cmp cmp pop mov add addr16 jbe pop xadd sub pushf iret xchg or cld arpl es mov icebp popf dec mov jo loop aas ss das add pushf enter or mov add insb push add sti shlb loop adc mov mov fisttpll shll stos xor push push or stos adcb inc mov sbb imul pop push and mov vmovddup call (bad) ss push mov add stc fisubr cmpsb pop incb sti (bad) insl xchg mulb jbe adc es cmp mov xchg add push and (bad) mov sub enter out (bad) scas dec pop hlt push add jle mov popa aaa add lahf pop push roll adc lret pop and cmpsl or into adc cmp mov xchg adc adc xchg mov pop inc adc mov dec and clc add inc jnp mov addps (bad) rcll mov pop cmp ror icebp gs xchg sbb lods add or and sub cltd xchg adc adc stc dec ret mov pop xorl pop inc (bad) enter jmp pop inc push or sbb jnp cli pop add lahf and bswap ret jle (bad) repnz loope js repnz nop inc cld push xchg and and stc orl xchg je sub jbe jae mov pop nop sar mov or pop adc lret jl adc jecxz ret lock cmpsl dec inc cmp adc mov and enter or jo fs rcll adc jae jnp loope or sbb cmp inc add mov adc pop loope pop add sbb roll sbb adcl dec movups adc loope and dec pop push adc and inc mov mov pop ds ret xchg movsl pusha mov adc pop pop push or mov adc ret int3 xor xor lret sbb jne dec push lods inc dec xor stos sti jo mov mov jbe cltd pop dec add (bad) add xlat popa and cmp loop je rep inc imul or push inc pop jae mov jb jp mov pop (bad) mov movl sub nop inc sub and movsl lods shlb adc sahf lds and push inc aad or es and mov (bad) jns xchg shr add call ret jle popf push mov jbe pop dec cmp add aad addl jo add and popa xchg add flds push sbb mov or scas mov xor add testl push sbb psllq cs add xlat mov mov ds test pusha fistpll mov mov loop ja ljmp pop pusha andb cld xlat fldl mov xchg inc dec fild loopne jl out inc xor hlt xlat lea push jno lahf icebp add int adcl dec ret cli jb or mov pusha inc nop add jnp movsb add les sbb call or mov xchg sbb fwait sbb add pop call xorb or push test insb mov xor jl icebp push insl add pop dec repnz mov movl decl jno into stos dec lcall pop outsl mov in push lahf pop add (bad) mov xorl lcall sti call xchg insb scas push mov dec sub mov xchg push sbbl stc add lea data16 add int mov clc xchg mov push mov lahf leave adc dec sbbl mov sbb insb cltd and mov sub dec add mov (bad) cltd inc sub jl cli xor mov imul pusha sbb insb add fildl cmp and fistp xchg imul enterw or cltd xchg push dec sub jo jo lcall iret loopne ss and adc out cwtl fwait pop call popa stos inc fimull test dec sub mov lods push mov mov fstpl lcall cld outsb and in dec mov fwait pop test test push shlb insb or (bad) jmp nop add inc insl ss frstor jnp add dec push inc add push out jle lods repz mov adc sti out fld dec pop popa push push ficompl dec mov leave inc dec add movsb xorb addl mov cmp push or divl nop pop add lcall shrl pusha mov mov je pop cs outsl xor add fsubp bnd and (bad) adc push mov dec add cmc orl aam sbb ret (bad) popf mov sub repnz fwait mov ja daa rclb call js lret mov sbb lods popa pop xchg gs push add adc adc js jo add sbbl ja xor cmp lock sub fwait mov clc jle inc push hlt loopne movsb or cmp lods sahf outsb dec add clc add add (bad) mov popf mov or mov sub aad lret repnz (bad) out push and sub and sahf adc sbb mov push jge leave xorl adc add lret mov rep mov dec add aam inc cwtl add push sbb mov inc sub daa in (bad) movsb movsb fcmovb sub pusha jmp or pushf add adc call push dec orl or enter jle sub lret icebp (bad) aam mov aaa cltd xor sub mov movsb xchg adcl mov push addl push dec mov and mov lock push enter cld imul xor cmp adc jp cltd push push xor push mov movsb and js cld lcall or pop in into (bad) mov insb xor dec shrb lret and rclb xor push (bad) add mov movsl test adc and jb add jns nop call mov into cmp lock mov add rcl jp ss loopne jp pop push add sti aas lock je mov fs sub stos mov in lret jmp push pusha and or inc mov inc mov sbbl aas push push test loope fmull jbe pop mov shlb scas push add sub repnz lock inc jnp je xor dec cmpsb add mov pop inc loopne hlt sbbb add and mov fs add xchg and pop mov repz push mov jne clc pop (bad) (bad) mov ror dec (bad) mov roll pushf loope jne pop mov sbb mov imul loopne std add sbb je xor loopne test adc mov imul add aam inc or in mov fs jns sbb hlt xchg inc add lahf repz out rolb fcomps mov enter sub or inc adc push and push js nop out mov add push fnop sbb or xlat add and (bad) icebp pop popa adc sbb lahf jl add add mov ja xchg (bad) dec mov lcall push lret repz and shll idivb pop add mov pop dec cmpsb inc fidivl loopne sar dec xlat add fs stos mov xorl test (bad) fwait cmp fwait loop mov pop repnz (bad) pusha inc lret orb xor and inc pop sbb aad lret dec mov xor sub add test mov xor lret add arpl ret sub mov mov inc add jp sbb xchg lahf imul cmp or adc cld jge adc imul (bad) fld1 push sub andb leave stos scas bound aas xchg mov inc pop or mov je or pop xchg or push fild lahf outsl mov mov xor mov int roll adcb lods push int3 movsl sub mov cld add sti mov lcall rorb test dec push test adc gs sub mov movsl dec or mov xorl shrb out jnp je add or pop movsb popf les add and pop push jnp pusha dec jo or jl and cmpb pop push push enter jmp enter or lahf movsl lret add inc mov pop int adc test mov pusha xchg xchg mov lods cmp xchg cmp and dec sub rcrl test push into mov push movsl lods and lcall xor add push dec jbe push mov jge test add test add push dec inc inc test sbb adc and clc jle leave push inc cmp push inc and lcall cmp add out push add mov lock mov and mov inc jno sub mov xor (bad) or mov stc mov cmp push sub ja loope sti fwait gs popa xlat (bad) test imul xor enter add and mov mov adc dec push in or adc add xor add into cwtl imul mov jb dec sbb aam fisubl push rclb and push pushf cmp test (bad) adc push int push cwtl pop in leave ss and pop mov add aam outsb add fldcw adc xor lea xchg nop pop out mov lea inc add and (bad) loopne ss icebp push cwtl push movsb adc insb sbb dec inc add or call sti jns xlat and and loopne int3 sbb push mov push mulb or add es push pop mov cmp push inc jl dec das push pop cli nop pushf fwait dec mov or andb add jo xor fnstenv push mov pop cwtl push mov sbb repnz mov pop rol push mov dec adc inc cmp mov lock (bad) or fwait stc xchg test movsb add pop push es mov lret lcall pop je inc test ficompl movsl lahf dec enter jb ljmp daa cwtl push add mov dec cmpl js subb mov stc mov (bad) movaps repz mov roll cmp sbb mov add arpl test std add adcl mov sub leave push cmpl (bad) xor cwtl enter in sar cltd push mov sbb (bad) loopne lahf push lcall push sbbb jp or adc mov push pop adc pop jmp popa sbb inc loop test rcr mov mov mov cli out adc loopne push dec mov adc inc ss call loopne lahf fisubl xbegin add xchg pop mov test sbb movsb jge cmpsb inc cmp jbe pop adc and xlat jle fyl2xp1 frstor and je movsb jmp mov jl dec push aad mov push pop repnz sub jnp dec ficoml ret xchg lcall fist icebp sbbl xor ficompl sbb sbb loop loope out dec jecxz add adc gs sbb xor xchg adc decb shr pop adc inc dec movsb add add fldcw movsl add call cmp fiadd mov sbb inc sarb mov add adc dec jge leave loope add pop xchg inc or adc rorb and dec (bad) and loopne add and xchg xchg (bad) sbb movsb mov je and insb cmc out inc lcall fs sbb insl es test pop or sbbb and sbb cwtl dec repnz dec loop push mov cli inc dec jne sbb fisttpll cmpsl jge pushf mov dec orl xchg inc pop add out in add out add add push and cld lret rcrb mov ds jb clc push divb or imul mov xchg sbb fnop and fisubrl and into or adc (bad) inc cmp dec test and xchg xchg pusha xor sahf push add sub dec gs mov xadd add sbb daa inc int3 fdivl loopne divb jle loop add cmpsb nop and dec dec clc cmp cmp mov mov pushf xor mov orl jle jl jo add and mov rclb movsb lea and mov and nop mov cltd aas dec push iret mov lea int3 sbb into loope xchg movsb lods sub mov add clc cli enter mov lret push test add jmp sbb or sub addb sbb adc leave gs xchg mov nop or inc mov sub inc lock cmp mov mov push (bad) jo cwtl ja pop aam ret inc or push push outsl cmpsl (bad) or cld xchg loop ds add pop dec in scas dec nop shrb xor lock add sbb in sub andb mov rorl inc and test sbb aas cli imul xchg push or jae add subl pop xchg push lcall insl (bad) (bad) shrb shl jmp movsb sbb and mov arpl push dec cld pusha push or decb insb dec mov inc dec dec orl std push out bound jge movsl lock (bad) jno mov mov xchg ljmp xor inc jl push mov cltd nop lock aam mov mov inc enter loope ljmp inc xor dec mov ror pop loopne sbbl jb cld mov insl mov shlb push fnsave inc pop or rclb and or je aam push inc (bad) js add call imul adc push and cmp push mov lock (bad) and jne mov inc inc cli pop add fnstcw inc arpl mov adc jo or xor cmp pop and movsl adc lds dec call push push cli lret sub mov and sbb out adc mov adc lea lods add dec adc addl or jo add jne sbb mov and mov (bad) mov fnstsw add cs test enter adc js cwtl repnz lods addb sub orl mov adc lret mov mov push mov cmpsb xor leave or pop aad push popf xchg sbb mov pop inc push arpl sbb ret cltd add mov in add ljmp cmp jno pop mov push push sbb mov adc mov add add xchg ret xchg rolb int3 sarb out test and or loope sahf and dec push pop push and dec push popf sub mov hlt sar dec cltd add jmp adcb out decl add pop mov adc push lods shll (bad) stos and in sbb cmp jae sbb push mov cli adc mov imul and and inc shrl fwait jl cli jecxz pmaxsw mov stos and and xchg jecxz jle mov (bad) and mov lods les insb scas lcall sbb call or repz test cmp fcoml loopne lods clc jp es sub and and push stc pop sub dec mov xor xchg and or es push or xchg test adcb inc or pop jae xor mov sar push mov mov nop in or test incb adc pusha pushf xor push (bad) mov add inc call xor int dec (bad) cli (bad) add mov loopne xchg insb adc sub sbb mov fnstsw cltd insb sub rclb add sub cmpsb mov push mov mov sti pop dec and lock ror rcrb add (bad) cld mov add mov xor aam pop repnz je mov and mov rolb shrb dec xchg sbb rorl dec dec enter inc jo xchg imull mov cmp mov pop and insl fwait add mov (bad) cli jb push cmp xor mov scas fcmovbe sub jge test and add push dec loopne push in add dec movsb mov jge movsb ja mov (bad) jmp aad xor xchg jno push and push pushf (bad) shll mov fs enter mov jo add ja adcb cltd outsl cmc pop push gs ror repnz xchg add adc mov int subl dec mov sahf leave xor in pusha inc nop dec xor or movlhps add outsl cmp jp cmp aaa mov jg sarb mov jg add sub add ja or sbb adcl cmp lds cmpsb hlt clc mov add add adc lea adc mov adc sbb icebp or adc xor xor cmp pushf leave and mov xor xchg (bad) je test push fimul sahf xchg outsb loopne sub rorb rorb cmp mov mov cmp jb push sahf jo push scas pop cmp je mov add mov ror loope test add mov rolb push mov sahf add mov popa mov (bad) rcrb jae mov popa sbb mov xchg xchg testl push add mov sahf or std sbb xchg or jmp mov jnp clc in fldt and rol push enter scas dec clc dec adc fildll xchg pusha cwtl push xchg jae (bad) dec pop daa sbb insb add pop push push imul adc cmp in mov int pop xchg mov loope mov sub sub push ja cltd sub pop loopne or or inc les dec jmp cmpsb jl test mov xor pop sbb xchg cmp add mov add mov and icebp mov push test out std xchg jecxz loope fistp add test pop orb leave push int mov aam sub xor test mov push nop mov pop mov or fidiv scas loopne cwtl mov push or in je pop mov testb push rcr lods mov sahf dec ja outsl jecxz test mov mov out in push push push adc jg xchg add stos ss clc adc and fcomps push push cmp pop adc push ljmp cld fsubrl cmpsb inc adc adc fwait push add jecxz lods fsub aas mov (bad) loopne jmp mov js jb insb push and and pop mov mov call add pop mov and fsubrl nop inc sub mov add dec out loopne loop rolb push mov or xor pop add jno lahf data16 aam subb (bad) xchg xlat ljmp scas add int3 add cmc push (bad) lods lock pusha pop xor lock and pop ficompl and cmpsb nop movsb mov insl adc jbe in or hlt add mov dec mov (bad) pop inc fs dec cwtl add movsb push push fmuls lahf or add sub pushf jge push mov jecxz dec adc dec out sbb jle popf (bad) xchg movnti stos mull mov pop dec cmpsl mov (bad) hlt add pop sbb inc add fldcw adc nop arpl scas push ds sub cmp sub and push out into add imul ret sbb lcall pop lret daa and std pop dec sbb fs xchg (bad) xor pusha adc pop and lods mov mov cmp test add xor nop sbb fwait ljmp sbb adc sub mov mov cld andl mov std dec adc push and mov dec popa insb fild incb mov dec add std xorps pop (bad) insl xor mov pusha rcll clc fidivrl inc fdivrs xor add adcl das xor ret mov mov ss or or movsb aam sbb je jnp cwtl mov cmpsb dec mov movsb test mov sub xor jne dec jge add jg jo data16 aas xchg push shlb aad jl mov adc sahf mov xor push sub and dec (bad) rcll adc jno sbb cmpsl cmp mov sub rolb cmp pusha xor pop decb cmp imul sub subb or test hlt out add fcmovb popf dec add push dec pusha mull divb movsb pop adc rclb in cli repz loop adc xchg lods call lea cmp repnz mov xor mov push add cld sahf dec sbb lods lds push in rcrb cmp imul mov add sbb pop int3 and lcall popa ret lods inc dec or mov rcrb xchg mov xchg xchg sbb rolb push (bad) pop or and mov hlt adc aas cmp xchg frstor lods mov fwait xlat rcr inc inc lock adc test jg push scas rclb sbb dec mov xchg pop add or bound scas dec sahf mov xchg mov sub prefetch inc mov xchg int3 test test addl mov or aaa mov mov int mov rclb mov xor pop addb mov imul add and fdivs data16 js push push push dec and add cwtl pop out repnz add mov movsb add inc lcall pop dec pusha jg loopne or cltd or adc test add sbb cmp and dec mov cmp sub nop xchg push cmp push in jo mov or and add pusha das andb iret cmp xchg push mov mov loop hlt pop fisubl icebp rcrb push addb mov or and sbb rsqrtps lcall (bad) dec push enter or mov cmp cwtl inc fcoms aas add sub add jbe dec cmpsb lods xchg or inc je and scas xor andl lock out rolb mov push iret fwait lds pusha dec push pop clc imul xor dec cmpb roll dec fwait in int3 cli in cmp push add or pop sbb adc ss inc jmp pop adc popa xchg adc add call dec push fs and lods je fild sti xor mov mov xlat mov mov clc jno push ret pushf aas and loop cld lret dec or pop (bad) aam push sbb ljmp xchg cmpsl adc js (bad) dec pusha jmp pop or outsb stos pop pop push xchg sbbb cmp pop xchg popa add pusha or loop cmp lods add dec ret xor adc sbb adc arpl or adc sbb jbe or xor xchg adc sub mov icebp inc xor test sbb js lret cwtl sbb sbb icebp pusha shlb (bad) ret adc nop nop cmp mov test and sub je sub movsb ds add out xchg cmc addr16 cmp mov xchg mov sbb (bad) sub adc enter push xor xchg inc ret mov inc mov fsubs adc dec xchg cmpsl add inc pushf sar addl adcb mov push mov or stc and fdivs add sbb adc sbb int3 push jo xchg dec int3 fist sub xchg xchg xor xor adc fnstcw mov cld icebp ljmp sahf sub loop jge add dec loop in xchg int3 bound loopne out jb mov outsl stos cmp and jp dec mov jmp xor icebp inc xchg mov pop ret rol and xchg pop dec xchg xor xchg stos pushf or cmpsb mov mov or mov dec sbb xchg sar in pop les out mov jp rorb outsb pusha les cmp xor cli pop outsb dec stos movsb jnp or ds xor mov xchg pop cmp mov xor adc pop lods cltd enter xchg xchg xchg aam cmpsb insl fistl cmp jbe sbb mov pop and inc fs adc pop clc sbb dec arpl sbb std cmpsl mov mov adc ret std inc sub repnz bound dec xchg orb fimull jno add mov nop and ljmp cmp push fmull addr16 lods inc xchg in xor arpl pop cmp fnsave jae cmpb je push sti add sub pushf ja xchg xor movb out clc xor add jmp push add inc mul les lock fwait insl jl dec mov add es push leave xor add pop cli mov xor inc (bad) (bad) mov int3 aas roll loope enter bswap sarl mov xor mov je add jle sub lcall sar call inc dec xorl or scas stos xchg mov inc fwait xchg add mov not cwtl and and addr16 dec add xchg call or sbb xor push sbb ret pop lock cmc pop jno and add adc ds enter outsl inc inc ja call and mov mov ret outsb imul leave clc adc sbb adc cmp sbb adc int3 test enter nop popf inc pop test pop push arpl add mov and cli mov jno jle mov fdivr add pop mov test in and repnz jmp aam and clc or orl and mov push sbb dec sub dec jge popf daa adc aam jno (bad) sbb inc pushf outsl inc or sti out cmp push test cmp aam ret (bad) or out add adc repnz mov aam test push inc daa mov mov push pusha adc cmp in jg sbb cmp xchg push call dec mov jecxz add pop addl cmp add mov pop jns pop pop or inc sbb inc dec ret push xor and xor leave (bad) int mov pusha xchg mov push shrb test outsb and fsubs (bad) jns xchg inc pop cmc les in sbb xchg cmp lcall mov lock mov loopne cld jns or repnz cli mov testb pushf or pusha arpl adc mov ja or and (bad) xor push pop cmc adc jbe lcall nop call test inc (bad) mov and daa or loope push lea fiadd (bad) pop push jne inc jbe mov sbb bound popa ret pop test add lret and (bad) (bad) enter subl je jmp cli js and jp repnz rcl test inc and fcompp push aam aad pcmpeqw or pop mov (bad) add mov and idivl push sbb leave sub and out clc inc rorb movsb xchg mov in and mov and sbb ljmp mov cmc xchg dec jle fs lds in cmp add fidivrl xor out xor mov and insb int pusha and push sub push addb xor dec and loope push lret inc add test pushf pushf inc push adc ret (bad) push mov icebp imul dec into sbb and rol cltd mov pop pop and xchg outsl or xor bound pop lret shlb mov mov push rclb sub out pusha mov adc or sarb and insb mov and and js dec daa mov int3 inc mov adc call ljmp js or push arpl mov dec xor lds or divl add jnp pop push (bad) (bad) push popa call js pop out mov adc push test cld jno daa inc test mov out or sarl inc add ret (bad) inc (bad) mov xchg fnop adc sbb sub lods shr icebp roll aad test cli mov jge ljmp loop fwait jecxz test dec mov and clc rcl dec add mov pusha daa sbb in lock ret loopne or clc mov int3 divl mov push push cwtl cli shrl sbb or dec rclb dec les push cli sahf pusha add mov ds les sbb hlt sbb sub push test xor psllq insl adc sbb nop mov movsb mov or xchg les push cld mov inc dec add cmp das mov adc pand add and divl mov test jno jnp mov inc mov in jmp mov jge xor or mov mov shrb dec or inc push jnp and in xchg and and pop mov jle add add push push dec enter test fldcw test movsb pop fs imul mov (bad) inc ja jge push mov sbb mov or shr xor sub mov and test loopne pusha pop test add jno push sub or and mov test mov push test mov mov cmp xor xchg lcall inc or xchg xchg jo mov and cmp and pop outsl out and dec test orb ljmp cmp jl test (bad) rol ffree cmp pop inc ret and adc fwait inc jae mov add std or jo sub push inc sub add mov push rcr add imul adc add mov xlat or push mov les pop repnz xchg mov xchg loopne add mov aam sarb fiaddl pop mov jge mov xchg loop sub jl sahf outsb xor push sub adc sbb adc jae and les cmc pop stos push fmul imul mov outsb mov dec loopne mov imul (bad) lods cltd cmc cmp add pop ficompl mov cmc std data16 mov shrb jns dec adc xchg call adc xchg je (bad) rolb xor push insl add lods loopne add sahf xchg xor rcl fiadd pop imul sub movsb adc pop pop movsb cmp cwtl adc call adc notl shlb sbb cmp lock push movsb cld test xchg add inc mov inc insb cmpsl or (bad) in popa ljmp cld mov js adc inc add imul lock push stos mov dec or sub add inc push and fdivrp and sub xchg ljmp in add in lock or mov and popf js or adc mov cmpsl insl add push xchg mov add ljmp leave (bad) lock mov ret or ret fisub mov and rclb out pop jns mov subl jnp fldl pop push or cli insl bound pop pop rolb std add cmp dec movsb dec mov add push sahf sbbb jbe shlb outsb lea lcall iret mov rolb shrl jo gs dec sbb ret and sbb push pusha pop ja or call ret repnz popa and mov fldenv add push cmp out mov mov decl xchg les fildl leave xchg and mov inc mov stos hlt sbb inc or cmp push (bad) sub jo push xchg daa mov xor pop add repnz mov push dec mov pop lret cli shrb sbb (bad) movsb out sub enter mov xchg mov mov and cli mov aam pop (bad) ud2 insl movsb push add push jb add sbb jno imul lods mov cli sub sbb add jno iret ret pop push push insb (bad) xor inc add add lods js or loopne fwait jb add fistl adc mov shl adc std pop sbbl jg pusha dec pop insb or and mov pop ss or aaa clc in pusha aad and negb cmpsl (bad) pop or lea cld add in into push rcrb xchg add hlt movsl pop out or loopne dec jmp mov xchg lret cmpsl dec add imul xor mov fs and divl hlt dec pop les out or cli inc andl jbe push dec inc xchg xor adc sbb jge add add scas xchg lea enter push fsubs or pusha pop xlat mov and ret and test lahf jge leave fdivrl jg sahf push es push orl push adc mov (bad) std add sub add lcall inc leave dec pop jb dec ret test shll popf xor push enter hlt lock fstpl dec add bound imul add jmp pop push scas mov xchg dec xor mov cld adc insl sbb add outsl scas jg fcom push adc jge push sub or mov js out hlt mov mov hlt and imul lcall push loopne pop gs sbb jmp rolb lret or adc daa pop nop in in xchg shrb lret mov lock test or ss dec stc xchg jne push ret cmpsb push mov popa mov addr16 mov in jg push and pop mov jge roll mov leave (bad) xor adc sub add inc and add or xor push ss jno push cli stos xchg dec cmc movsb sarb lock jecxz aam (bad) jo out test out mov or scas add dec popa or cmp js mul fistpl addr16 out popf test xchg push pop xchg push ret push jo inc repnz nop and push add mov hlt out clc jecxz add sar jl and stos adc vmovdqu int3 sbb mov loope and mov fistpll loop push repz aam add pop sbb push std mov aad fwait sbb or imul sti lret sbb pop outsl xchg or inc hlt sbbl adc in rorb inc imul and jp in push insl pushf mov mov xchg test adc mov xor sti movsb roll sbb nop xchg sub inc nop rclb push push ret (bad) xorb jne dec dec fdivrl aam cli imul dec test xchg adcl mov push popl rolb enter pop imul lret sub and mov jmp adc int imul jge push push push mov inc add and adc shr popl pushl dec xchg adc jmp inc pushf cltd loope sub push les sbbb or and loopne sbb push adc loopne dec add sti iret (bad) xchg mov add pavgw or xchg loopne in pop int3 dec sub jle jge push dec add and xor xor dec cwtl mov cmpb pusha push repnz ret mov push adc sti cmp ljmp test (bad) sbb aam pop out mov iret mov les js aaa add idivl mov mov or mov push aad lcall mov inc mov xor adc pop xor popl xchg add and stos mov xlat sbb rol and xchg bound adc cld imul pop enter mov add imul pop imul pop je jo notb insb cli adc xor adc inc cld mov dec imul in rol out aam popf cli fisttpll push mov jo fsubs dec xor lcall jo popf add out pop push arpl fadd (bad) std hlt pop pusha pop mov loop inc or (bad) xchg adc sbbl mov add (bad) jnp dec ret xchg in clc sub sahf xor pop outsl mov ficompl sub adc add clc inc cli or dec imulb mov jl add out sbb test jge imul fadds push add add loopne mov jb xor jo add xchg pusha jo popa lret cli sarb pop add ret repz rclb pop jg test es sub outsl push mov mov lods loope add lock aam mov jb (bad) lock cmp and push jl sbb adc call shll or shll test or (bad) lock adc scas dec enter shlb js push add insl cwtl and mov push in lock push inc call shlb sbb cs ss pushf dec mov int3 aas or mov je adc shlb loop call subb out shrl clc lods or ds pop hlt cmp call jmp cwtl in or jnp imul xchg sub inc or aas mov xor sbb in dec inc and mov inc and dec popf add and mov cli inc sub jo cld call cwtl adc shll mov int3 aad inc push lea cli adc icebp ja xor inc jl bound push cwtl je jle sbb and lret jl rorb aad (bad) lahf ja std add pop add faddl dec pushl gs loopne repz cmp out faddl xchg and jmp scas stos sbb cmp dec movsb xchg add in int adc jl repnz xchg repnz adc or dec dec add mov enter lcall sub mov push int3 cmp dec lods repz and add mov inc fadd stos or sbb stos adc mov imul test dec dec in dec pop push xchg sub shl jo jge jg sub orb jmp add insb pop out push aad (bad) mov inc in add push push jmp adc jmp xchg ja sub pusha mov outsl jl inc insb in in std test cmpsl mov jl pusha jge imul test mov adc jmp fsubr mov sub js int3 inc daa ljmp inc xor dec push mov cmp jno jge outsb ja inc (bad) rcr cmp dec dec into sub xchg add int or sbb out xor jno push in dec ja fisttpll or push pop jle outsl xor fmuls aaa jle daa and jmp sub pop dec mov xor pushf add mov mov mov mov jmp movaps inc sarb int3 mov push fcompl lock add incb jbe dec clc in dec sub movsl pop push mov cmpl stc mov add pop pop dec mov dec add es add pop fdivrl inc stc xor pop imul mov (bad) sub xor imul jle insb mov aaa pop add jnp jne jae orl (bad) icebp mov ljmp push lods inc (bad) loopne dec push fcompl adc jp mov pop movsl jmp js cmp xchg xor push imul mov jmp jp push xchg dec sbb xchg outsb in (bad) cwtl stc xor sub stos lds cmp inc clc sub dec inc pusha or scas dec adc ret sub cmp hlt es jae add xor jl nopl jle adc test push bound shlb rorl cmp sbb push cmp add leave dec push ret push mov sbb pop in sarl jno add ret insb or divl sbb add add std cmp pop cmpb dec sub es pushf adc xor jle ret aas jge and inc and dec adc sub mov inc cmp inc or fs out add enter dec mov mov jnp xchg les add in dec ds shrl nop cmp pop xchg sub dec adc push xor jmp je icebp add addr16 xchg sahf int3 andb test aam push pop call jmp push sbb adc insl dec pushf cmpb dec inc ret xor testl arpl jb mov cmc xchg enter push jmp mov aad xchg dec xchg sbb add ficompl lret loope popa xor stos jge and inc (bad) fstpl in mov or sub add inc imul xor mov dec shr outsb pop ret dec jge add xchg stc inc repz dec clc nop sbb cmp test cmc jl jo add sub movsb and jge adc inc lods push addr16 sub fnsave dec icebp fmull daa xchg pop and sbb mov mov and mov jo adc gs xor sub fisubl add popf repnz test imul push lock pop ds sub jg lock adc imul add and scas outsb and insb sub jbe lock icebp sub decb add inc ficoml pop dec sbb mov jmp shrb mov sbb in add adc jnp adc stos xchg lock cmp in sub cmp cli lcall idiv cmpsb outsb mov push sub xchg xchg adcl std fldenv jno repz lock icebp in mov jno adc call imul js mov sub dec sub inc sbb xchg mov cmp sbb add shr add sbb or mov sub pusha dec dec inc sub jmp sbb xchg std mov dec push in cmpl mov adc std adc pop sub pop jl out rol jnp push cmpl (bad) leave or sbb or fisubl std sbb pop fcom push sub (bad) mov insb ret push aaa mov dec adc mov push dec adc jbe mov add ret mov (bad) mov jbe cmp cli lds mov and add arpl push cmp pop add jo dec push inc adc or loope es (bad) in inc ret add adc mov inc jl push mov and cmp inc addb pop mov push mov arpl orb std add jb xchg or mov andl adc in inc call xor pop inc arpl jb jne mov add add fisubrl repz popf orl pop int3 and add sub and ss ret add xor sub or xlat sub sub cmp icebp in out add add mov movb mov xor outsb ss les icebp fs xchg add add pop leave mov sub sbb lea loop jl sysexit lock imul xor popf ret sub mov mov jb and xchg dec add mov mov add sub mov scas sbb sub push add adc xor es insl mov sbbb icebp and repz xor adc pusha cmp div adc (bad) std mov xor xchg sub clc push subl and and (bad) int3 sbb movsl lcall sbb sbb sub inc cwtl movsb xchg shrl rcll xchg imul inc inc cmpsb pop mov movsb int3 sub stos push add fnstcw pop rol sub jge sub clc xor sub sarl adc xchg jecxz inc xchg mov icebp push add sub push in and or pusha and mov lock and es psubq add jp and fsubrs sbb ret add (bad) enter loope test test arpl pop jmp jns test bound mov add mov mov mov fbld mov pop ret inc fucomp and nop cmp mulb inc pushf inc mov xchg mov mov cmp dec add cli outsl addb andl and mov push bound les add hlt pop xor rolb insb jno or mov and lahf xchg pop ret mov xchg and dec push shlb bound adc add mov push inc data16 dec in mov mov daa sub sub dec dec add push dec add scas xchg das jne mov cmc testb loop sti js sub push lods add mov dec shlb cmp cmp imul repnz inc or xor and jge roll mov iret mov jns cmp and scas orb xchg or mov push mov (bad) daa outsl xchg cwtl lods rclb out push ret pushf dec adc sbb addr16 adc sub dec adc dec add jp lea (bad) sbb pop push adc clc and pushf movsb push je pop lds movsl jge mov es sbb cwtl add ret repnz (bad) sub pusha loopne aas (bad) outsb push lods mov add jns fisttpll adc xchg cli add pushf mov cmp adc push jl add lods jp jns dec inc test add mov xchg stos fsub or xchg or dec arpl xchg and sub test pusha ret outsb test clc jl dec or loopne aas sub lods test dec xchg and dec push adc pop sbb gs and das mov rcrb cmp mov jo sub adc (bad) ja pop xchg inc in ss adc pxor orb push adc mov mov lods fs sbb subb or xchg stos adcb frstor cmp inc lods add mov push jae lock add scas or inc pop and fwait add jle mov cs xlat ds add mov das jns int3 xor mov inc mov jge pop jl xor mov sbb cmp xchg xchg mov out jo push cmp (bad) movsb mov out jmp xchg sarl mov rorb fcmovnu sbb incb jmp lea js cvtdq2ps imul insb (bad) sti int3 jo add pop sbb add ror mov fnstsw in in jl (bad) pop push sub xchg xor invd lea add ror inc and jl mov scas sub fucom cs xor and push adc jp test stc ss inc rcrl fwait push insb add loop or orb movsb xor jecxz cltd inc mov repnz pop mov add add sub inc clc out mov or add mov int3 jg in test lock repnz out subb mov mov mov mov push sbb xor inc pop jecxz rcrb ja test sub push mov jecxz pop mov rolb mov (bad) xor adc add pusha sub push fist jp (bad) mov in stos loop pushf xor xchg mov inc mov lret and inc xorb mov or loopne mov jl push dec xor movsl jmp ret and test or (bad) lock cmp ljmp ss movsb js add jne and add mov mov clc mov in mov in popf push add fucom fsubl out or mov test push add fmul addb loope cmp (bad) mov add mov mov cmp adc or test mov in insl add pop inc scas out mov repnz push mov sbb add sub pop and fstps int3 mov or mov jmp nop add inc inc or movsb les inc imul pop inc sbb loopne mov iret adc ss loopne add mov dec sarb adc repnz dec add in sbb inc (bad) or mov out aaa mov test add dec ficoml add scas fbld adc cmpsl dec mov js add adc sbb xor inc add ficomp push xchg cmp imul add jns hlt sub dec fnsave inc (bad) pop mov xlat push xchg mov pop dec add adc mov and add pop call add sahf cmp insb push pusha mov push fidiv xor (bad) in add pop out push mov add adc mov sub mov js sbb xchg dec push notb add (bad) mov pusha ficompl orl aaa sahf adc jnp inc cld push cmp xchg jp pop jle (bad) dec cmp mov clc mov push out test (bad) sub movsl xchg sahf add js jmp aam jne add and dec sbb lds ds push sub adc (bad) scas rcrb adc push rorl out nop in push adc int3 push sub xor (bad) mov cmp jg sbb dec js mov imul sub fldcw add pop mov decl outsb cwtl es pushf movsb push dec mov jle or adc std test jbe (bad) push dec adc lods fldl push pop or xchg or dec inc xchg int3 jge cmp push in sub imul adc jg fdivs inc adc or mov hlt add clc adc dec add push clc pop add push jbe lods ljmp pusha and or enter jle cltd xor sbb adc pusha adc mov movsl imul test mov cmpsl into sbb and sub jmp xor cmp (bad) insl jns adc adc xor mov lods dec mov cmp xchg adcb or fs imul dec add inc and sbb mov cmp orl pop add mov jecxz sub mov popa das test push inc sarb push lidtl fwait cmp lock xchg sbb andl inc add xor jnp mov xchg call jae pop jl sbb ret sbb clc orl add ret push movsl (bad) mov cli repz sbb sbb (bad) (bad) adc clc add mov push push icebp jge pop add in fwait mov adc push dec pusha and or mov es or push movsl xor test enter daa pusha les movsb and aaa insb sbb pop push adc add push inc test push and ljmp scas mov and pusha mov sarl and test fstpt mov mov and mov lds pop add pop mov rclb (bad) pop lock push sub pop mov xchg mov enter es in test daa imul mov test sahf stos shlb inc jo xor mov out mov and mov loopne pop test dec pop fs stos pop add jp jge movsb leave and test idiv out mov movsb pusha mov push mov clc sbb enter out add orl repz fidiv mov cmp adc mov scas mov icebp out jl outsb sub fdiv push sarb xchg pop pushf lcall dec sub dec jge sbb test adc xchg cmp xorb insb jecxz daa subb pop int and mov and loope push pusha int3 mov cltd and xor call xchg add xor out loopne hlt sbb push (bad) aam rorb je and or mov jle arpl mov call js jge mov jecxz fldl pusha test inc mov (bad) cld dec jmp aad push sahf popl inc mov cltd inc outsl mov aas sarb les rorb jnp jg imul popf pop jno adc (bad) or sub dec add mov or loope inc push cmp sub out jmp test mov mov xchg adc andl fmuls mov mov jmp (bad) addr16 divb fdiv adc cmp fsubl add outsb scas push mov jl dec mov inc xchg movsl xor cmpsb mov lahf cmc xchg push adc add mov add mov add xchg loope push hlt fsubl sub add jmp push arpl sub test and sbb add pusha mov dec jno or mov or push pop mov lahf adc test ficoml ret cmpsl mov jle in pusha pop mov fsubl fidiv nop rclb and call stos mov ss push jno pop adc xchg xor mov inc (bad) add mov leave add mov adc mov pop pop aaa pop pop sbb jne cmpsb pop out enter mov call lret aas dec xchg and cwtl loopne mov sahf sub cwtl in pop repz add in adc pop ja add xchg dec lock adc add xor aam (bad) mov outsl js loopne mov negb and xlat aam jo jae rcrl cmpsb pushf enter shll or sub fmull (bad) mov mov xchg ficompl mov xchg jns hlt mulb addl dec jb add pushf xchg jp add std and pop aad mov inc js es jno add xor jne cmpsb cld iret or fcomps mov jecxz icebp clc sbb sub jle or adc stos js and mov sub add jl ficoml std cwtl add repz out pop jns mov add (bad) incb push xchg or mov cltd mov test jbe jo cld dec mov cs mov paddd mov imul in cmovl subl or and jb,pn and fstps jle push sub adc je lcall cmpsb jge inc loopne add mov sub add cmpl add pop mov in or xchg xchg nop xor sbb xchg cwtl or sub sahf and pushf pop push loop loopne jle add mov subl hlt xor push xorb xorb sbb movsb cmpb rcll fdivl jo loopne mov mov cltd jle xchg je inc sbb cld sub jo push sub (bad) mov insl dec mov jle notl sbb xchg or sub popa xor jb inc cmp pop jle inc and adc ficoml xchg pop sbb rcrb cwtl adc or rcr adc sbb test pushf mov adc sbb add pop (bad) xor pushf jns adc leave inc mov les test mov xchg or lods sahf cmp js xor shlb and out aas (bad) xchg or andb adc add push repz add xchg idivb icebp mov jge sub xor push aas pusha mov (bad) scas fldl ja hlt pop enter lock sahf fnstenv rcrb ss popa jo mov (bad) adc xor hlt add or push add xchg mov daa pushl dec mov xor add movsb test nop xor mov jmp lods dec mov fsubrl add jl cmp xor jne sub sbb mov ficompl rcrb mov ficoml jl inc dec test add enter mov cmpl inc in ret xchg cld repz mov pop pop mov push clc xchg call cmpsb or mov ret adc in add jmp hlt adc movsl mov addl add mov sbbl mov mov add mov adc in inc ljmp je sahf or cmp addb mov xor mov sub inc xor mov shll pusha adc call inc jne add push mov dec xlat mov lods ret dec outsl inc mov movsb shll adc aaa jns add scas movsb fnstsw mov or mov add loop sbb mov lret add dec cmc mov rcrb movb cs (bad) es add ja jl add push pop (bad) idivl adc add mov cli dec add add test fild xor or lahf pop dec push add movsb pop sahf mov mov hlt mov sbb cmpsl gs cwtl or xchg scas sarb addr16 add ja lods or cmp (bad) jge call mov outsl add xchg loop dec pop cmpsb test sbb mov mov xchg adc inc xor lock adc lds nop adc stos leave int3 inc test sahf mov mov cwtl mov jle push push inc pop jmp sbb inc xchg in arpl and cwtl pop pushw es aaa mov shlb add unpckhps jae nop pop (bad) data16 les test or stc or mov push pusha scas jo add lods add or and (bad) mov add fs cmp repnz inc pushf mov pop inc cmp inc xchg mov xchg fs fsubrl xorb pop pusha or jl ret xor repnz mov and dec pop add or hlt sbbl sub dec mov call (bad) xor and orb adc pop insl add aam xchg roll mov adcb pop mov push cwtl insl cli shll dec andb add cmp jle movsl test jecxz add fs idivl sbb ds ss int cmp pop imul das mov pop lea or fwait jae xor clc clc jl insb adc aaa mov (bad) mov sbb les daa pop push nop mov (bad) push and int3 imul orb mov pusha pushf xor jns adc add pusha cmp xchg subl pop and sub inc mov out lcall stc mov xchg clc add mov enter jl mov cmp cli fiaddl loope pop pusha data16 dec xchg xchg xorb ds push jecxz add mov or addr16 or out pushf dec or pop add dec sbb jo mov cmp push insl or aam pop jne xchg xorl add shll (bad) push loop nop cwtl dec ljmp enter aad ret and adc pusha mov sbb xchg and inc es or sbb shlb mov xchg insb fwait lret or jnp mov addb add xchg push push in fadds in cmp ja mov mov loopne fimull cwtl cmp imul popl inc lods mov adc and cmp into je popa ret roll (bad) mov pop in mov jo pop push mov lds add jl lret cmp add mov fidivr add aad dec pmulhuw (bad) push add add xor dec repz sti or lea into xchg sbbb jae xchg and jmp cmp mov pop repnz sub and or or es mov popf and lea mov les rcll push jp mov jns adc inc and (bad) mov popa fxch mov test aad add xchg lahf sarb gs cmpsb sti add fistpl add add mov clc mov and add movsl dec dec loope lock xor into fs sub aas repnz xchg add add decl setb stos and shrb fwait sbb jo inc lock or outsb loope sub mov loope xor push lret sub push mov inc mov jecxz and sub cwtl add ret or out mov jno test sahf cltd cmp (bad) adc mov sbb sbb ficomp adc mov popf (bad) or fadds mov inc inc lcall mov pop andb inc adc push inc sbb jo xor xchg (bad) js cwtl cmp daa mov aaa add push and add adc jo sbb adc xor xchg stos cmp dec nop mov xor or adc dec inc mov fild jno shlb xor or (bad) cmpsl fdivs out or push hlt lret mov cmpsb fisttpll push out add push icebp hlt cmpsb bound cld mov add fmul clc inc cmpsl lock pop xchg push jo pop xchg loopne pop outsl cwtl jl and xchg xor mov or xor and loop jno push mov pop mov push pop or cmp call mov adc fcoml fcmovnu mov adc xchg stos mull jp sub or push xor addr16 sbb bound popa ljmp jmp pop pop sub pop pop jg ret fistpll or js inc push loope dec cmp or inc fwait jp jnp push out push push dec sarl inc sub or cmp loopne push jns xor inc cmp dec mov (bad) sub or push outsl rorb sub ljmp push push pop sbbl sub push sub adc pop jge cmp test ja xor dec sub out dec arpl loopne mov in xchg add mov pop pop add inc inc test or lahf sub nop xor or dec and mov jp add mov mov sub sar or rorl pop and cld sbb jne push cmp and (bad) movsb imul sti retw sbb lret push sub fadd inc pop push (bad) sbb pop mov movsl fdivrs sub test xchg (bad) jo test clc or jnp mov mov inc push and cmp and subl test fwait jecxz add mov sbbl dec adc addr16 sub out mov fildl push movsb add mov enter adc pop inc jo or movsl cld mov sbb sti sub push jle jnp mov test adc clc sarl sarl sub xchg or aaa or fwait mov mov add mov test add sub scas mov int3 stc inc dec push aam hlt push addb lcall in push xlat subl mov cmp xor sbb in jns and pop roll sbb mov pushf xor pop inc hlt or cmp jns sub mov pop icebp movsl xor dec cmp inc std popa ss sbb fs adc and inc dec call nop and dec js adc mov xor fdivs cmp or aaa lds push push adc test cmpsb push xor (bad) aad incb add incl in das loope ret mov int minps rcrb test or sti adc (bad) mov pop call pop add or xor xchg in mov fiadd xchg adc cmpsl jae mul inc xchg les iret xchg mov movsl dec test out (bad) mov sbbb mov or xor adc add sbb shlb bound loopne shlb jo in push adc lcall sub mov push pushf add jge sbb and push push jl lcall inc je add popa xor lds movsb adc rcr imul mov andl push ret xor scas ret adc ljmp mov sub jo movsl mov test or xchg push test fmuls loopne gs xor fmul inc add xchg addr16 mov out cwtl imul cmp in xorb push jno cs or xchg sbb cmp or pop jmp mov adc jbe sbb adcl rolb or or fs scas repnz stc repz cmp jmp and fisttpl call dec sbb xcrypt-ofb cmpsl lods (bad) xor adc cs sti push xchg cmp nop outsl or lock pop sbb loope js jl hlt mov pop mov sbb pop dec jle test cmpl adc call fbld mov push mov outsb popa jecxz test add in test inc (bad) in or inc ret icebp add sbb imull adc fwait xchg (bad) sbb dec rorb pop mov subb and mov clc mov sub dec xor mov and adc push out repnz mov adc negb push lret mov sbb cmpsl inc jns sub sub cmp add les pusha mov mov mov add and adc ds adc rolb cmpsb sbb out in fldcw out mov loopne add sbb invd mov add add or (bad) mov mov add sbb (bad) je dec movsl xchg mov inc mov jo inc or lahf add ds inc scas cmp inc lods mov sbb and jp cmc inc lret inc cwtl push ret sti enter loopne add cld aam (bad) mov loope add (bad) clc mov call add jmp xor mov cli ds inc cs add popf or sarb mov (bad) popa lret sbb xor in inc icebp outsb dec mov or pusha or insb cwtl push dec clc inc mov push test loopne (bad) hlt lods xor out push leave xchg or call xor xor jg mov rorb push out xchg test repnz negl sti and in popf int sbb sbb inc (bad) or fist test jno int3 pusha fadds rclb cwtl adc popa adc jo cmp or cmp mov or jmp fstpl sbb lock inc in shr sbb mov push subb mov leave push out mov or sub add adc sbb test adc adc in add lahf adc jo or adc mov nop sub push cmp adc je orl or mov scas js add es ret ja (bad) loope dec sub push or dec push dec dec stc (bad) xor je xchg test add aam inc sub xor scas xchg std add dec mov test add adc xchg jo movsb cmpsb dec and adc fcmovnb faddl push dec jb ljmp sub in mov adc movsb imul scas sub nop push daa xchg lret xlat mov jecxz loopne mov out push pop sub insl popa xchg xchg pop fs xor loopne lahf jl jle data16 push adc jb in mov js or mov jle xor les mov inc inc mov push or mov sbb jno push (bad) and and fyl2x cli cmp sub xchg xor jmp xchg bound hlt rclb add sub je xor push sub call je inc mov or test sub push inc std add je lods (bad) gs push xor inc xor mov sub sbb jl xchg adc and stc aaa mov and movb data16 sub sbb out notb xchg roll je adc inc hlt je lods pop push pop inc pushf push lahf cwtl in pop sub iret add out add xchg repz push in sub dec call fisttpll jno mov outsb jne inc je ret mov xchg sbb mov xor push adc or xlat push mov call push cwtl mov les (bad) (bad) into js add mov (bad) push faddl lds fcomps mov into sub test xor cmp xor cmp add pusha sbb adc inc lret or add jg int3 add add lret xor push incb add sbb and outsb es jo int in je mov loop pop push popf inc (bad) loop scas lcall sub jp cmp xor test andl (bad) xor fwait int3 pop mov popf lret xor push push jo (bad) xor jge shl aad sbb pop or pop scas mov sub add stc mov push fs fbld xor jmp test push add scas ss jae cmpl into mov addb push ss push out pop out jo xor push (bad) out lock sbb bound add and or shrb cmp xor lds ret add cltd and adc xorl or mov sub mov adc pop fdiv push clc hlt add in nop sub push mov jo ret les ret aaa push sbb shl xor loope sub xchg clc lds adc or in dec xchg xchg ret push mov loopne xor mov push add push cmc push ret decb lds aam sbb sub sbb and shl or arpl mov sub or add stc dec aas adc outsb push jo mov push pop mov mov cmp mov mov and les xor sbb rclb mov aam add std loopne xor aam and adc mov adc dec addb pop (bad) sbb or mov jle jmp cltd dec mov cmp jmp mov sbb add sub add pop mov xor movsl or fimull in dec orl jecxz (bad) iret pop sub sbb ret dec subb mov xor repnz mov mov inc cvttps2pi out push pop lret or loope aad int aam clc push (bad) or leave add sbb js insb lock (bad) adc add stos in (bad) lock sbb pop adc fmul arpl push aam adc test dec sti pushf adc pop mov and ret and push adc movsb adc (bad) or add or adc sbb les clc fmuls or (bad) loope out leavew js and rcll mov adc inc fild insl fnstsw pop jns pusha pop int add bound pushf lock fsubs cmp add mov std push mov xor and mov stos data16 (bad) call enter icebp fimul adc adc adc cmpsb xchg sbb or ljmp adc sub cmp call icebp pushf jge int inc test dec mov test lret stos out mov jne js sar pusha mov sbb iret mov rcrb push cltd lock push (bad) clc inc xchg test xchg push fmuls int3 pop or xchg les outsb adc imul pop or clc pop bound outsl aas or nop cmpsb xor or (bad) jae push dec xor xor stc ror or fcmovnb and adc arpl andl mov pop aam push and cmp mov xchg mov cmp dec or scas xlat push pop xor shrb nop cmp fisttp pop push add sub test mov clc mov je ret adc sub lock mov xchg lock xor pushl andb stos and aad or (bad) divb jecxz sub mov outsb (bad) and xor movsl dec xor cwtl rcll cmp sub test idivb dec movsb ret fild push pop lods push sub js mov sub nop les insb mov rorb sbb and iret aad mov rolb leave sbb insl clc xor or xor mov movsl in ret pusha or or jo push dec popa (bad) xor pop lret fs add mov sub pop sbb xchg pop stos and cli cmp sahf cs xchg sbb imul dec sub adc sti jmp and adc fwait sub xchg sahf je and xchg add mov mov scas dec mov scas imul mov enter dec movsb add push inc (bad) ret xor daa outsb xchg movsb inc lods sub addr16 jae js add sub pop inc sbbl jo adc xor xchg add int cs push outsb test push popa je aas fisub fbld inc sub jmp leave push rolb adc into fildl push mov sbbb js daa xchg test xor xchg ret mov add jecxz sub add out xchg add into repz test mov sarl adc loopne cwtl mov sbb rcrl mov inc in mov sarl clc dec mov sub sbb push movsl adc sbb sub mov daa gs push push pop rclb imul mov mov and lret je dec das cmp loopne sub pop outsb jge pop add and rolb mov outsl aaa mov mov mov inc adc push mov cmp ds add inc mov sti mov sar or shrl and sub adc int cs sbb inc lock aad sbb or adc ljmp push xchg jle fimul pushf sbb sbb outsb push push mov dec add stos loope lret cs mov cwtl or or cwtl or mov mov clc push or pop gs push orl sbb pushf push outsb jp in xchg bt cwtl push mov inc mov push scas add aas or pop movsl fnstsw mov add in adcb out add or movsl adc es ljmp cltd (bad) rolb (bad) jb sub out int3 pusha jb (bad) mov out cmp xchg sub adcb into notl test or adc push inc xchg or cwtl pop adc out pushf repnz mov and cmp jno mov dec jl fistl stc mulb cmp inc add push adc xchg pushf inc loopne and or insb shl in in sub cmpsl push dec fstpt js xor or cwtl (bad) xor jge push stos int3 andl adc pop flds (bad) js inc rorl mov and daa mov lock shrb xorl push push push or and cmp or xchg and aam and mov pop xor or push mov scas and mov call or xchg dec jae and push push (bad) xor add xlat pop cld sbb inc or mov inc cmpsl cmp addr16 add subl in xor mov xchg inc sub or sub and and inc add push adc or push loope enter mov push cltd scas enter fimull js xor and adc sbb movsb aam rorb add mov and and xchg add sub fild add add js js and leave xor push adc test lock jecxz (bad) adcl mov subl js xor push aam fsubrs inc out inc out jbe mov sub or jne adc or aam mov add js pusha loop das pop inc and sub add or or out sub repnz out adc adc cmp inc sbb lret sub push sub mov rolb sub pushf mov add push (bad) hlt cwtl pusha pop or sbb add (bad) pop dec sub loopne lret adc bound xor push ret rclb hlt leave rorb ds and pop inc addl jbe mov or mov (bad) stc movsb jo pop sub lods xor cmp data16 mov dec add adc fldcw jmp aaa and je jl into push scas roll nop xchg das or or jns clc inc push les movsb cmp mov or movsb xchg in mov and add xchg test (bad) dec out jb rorb fxch nop shlb lock or xchg mov or mov orb jl imul dec adc and les sbb pusha or push stos mov lret xor cmp mov lret jbe pop clc loope rcl mov pusha dec rcr loopne fildll daa sbb call push int cmpl loope and orb xchg in ret push aam pushf push (bad) fsubrs or loopne outsb fisttp jo inc dec xchg add enter nop orl (bad) or pop add leave xchg dec sbb and icebp push call cmc inc insb pusha je cmpsl enter jbe lods add jno je cmp mov and push pop sub xchg adc xchg adc adc (bad) sub cmpsb lock sbb add shr xchg sbb sbbb sbb jns pusha outsb and das or icebp push mov fisttpl leave mov mov lcall jo dec fcoml or dec or mov lret dec cwtl (bad) fimull test jmp xor int xor (bad) mov inc ffreep or aas loopne inc mov or mov fs enter ret shlb or orl scas mov adc push push and fs sarb (bad) in les cmp or inc in xchg jae cwtl sub dec lcall lods sbb cmp ret cwtl cwtl inc in jo test pop cli hlt js xchg adc jecxz or out add les rorb lds addl mov mov clc or mov cmp arpl and sub movsb or push add into sub inc push mov rorb andb jo mov jg fadd push sbb sub cmp in inc sbb push pusha das mov call dec jp daa push sub xor and pusha sub or adc xchg shrb xor cmp (bad) ja cmpsl loopne cmpb jbe sbbb mov add xor leave outsb jbe xchg int3 pop aas xchg xor cmp js cmp sarl sbb cltd scas stc push aam js sub and (bad) adc push pop mov out xor pop sbb fsubs addb in fs cwtl (bad) (bad) je jmp dec jae sub or fidivr pop add adc imul dec mov clc xchg mov xor dec cltd leave push loopne sbb or sbb ficoml loopne cmp jno cmpsb pop sar xor cmp pop in adc clc sbb xor lds call inc int3 cmp dec test lock int add xor and aaa into (bad) mov clc sub push adc adc or mov aam sub and fmuls add mov adc (bad) (bad) cmp out push push jo cmp push push jmp and jge or shl bound push gs adc lock ss bound lods and adc in xor or and rcll pusha scas inc sub dec (bad) mov into lock pop stc pop pop mov cs dec mov ret nop mov mov mov sbb jb orb mov andl mov orl xor jo flds enter jmp push mov or dec or push cmc cmp test mov cmp fsubs xor cmp mov adc add adc test repz jo dec adc cmp jecxz nop lret push or xor push jl int3 jb pusha xor pop mov (bad) repnz add adc push adc stos push push je push es inc shr div push sarl fidivr pop pop or pop mov sbb ss ret (bad) mov or cmp outsb mov bound sbb orl test fucomip stos mov jbe rorb aas int3 adc or xor add and rcll add or mov cs xchg xor jmp mov cwtl cmp xchg insb in sub into std sbb roll cmp jl mov dec mov and xor xor imul push int3 mov add into add (bad) mov lret test mov (bad) mov outsb push repz adc out mov or push add daa sbb jl hlt bnd jno pop cmp push (bad) sub je xor addb pusha jle in orl pusha xor je and xor mov cwtl adc insb and mov dec sbb cwtl mov push or cmc add or ds push dec rcrb or test rolb or lock or mov adc or (bad) enter (bad) lea inc xchg mov pop add add lods add cmp lock push pop add in inc mov lcall in mov nop jle and out (bad) or cmp mov cmp mov xor and iret pop inc hlt test incl mov rorb incb dec xlat je mov xchg push adc or outsb sbb lcall and or mov lods (bad) mov es or out inc sahf cmp sub xor xorb les cmpsb rcl js adc push aam jle sbb shl adc adc cmc xor insl adc out mov arpl sbb or xor test inc rcr push jl xchg je xor (bad) dec or sbbb icebp or mov adc mov sbb add add aad ficomp xor insl or add pop add xchg fwait sub xchg add jge push mov cmpsb jnp notb push or sbb cmpsb inc cmp shrb ss gs sbb add scas loopne int3 out dec aam adc stc xorb jbe sbbb inc xor cmpsb or add mov imul pusha pop (bad) aaa das ljmp js out push jo inc adc es or adc into dec sbb sbb int3 or cmp (bad) adc in js neg or negl (bad) (bad) jo fcmove sbb add push (bad) lock or bound bound data16 dec fs inc push inc mov xor inc fist adc adc cli sbb (bad) call ss loope sub les jle shrl xor popa pusha or push or sbbb scas cmp (bad) aas mov sahf clc lea loop mov or sbb sub scas xor sbb adc into aaa sbb cmp add (bad) sub or inc rcrl mov shl lock iret or add mov lods push mov (bad) pop or adc cmpsb inc loopne mov aaa stos inc xor (bad) inc scas mov (bad) aas inc mov adc int3 sbb sahf nop jecxz or pop scas cmp mov out or addl inc inc insb in rorl cmp dec outsb js dec fistpll js nop lods sbb fwait or lahf mov mov adc outsb lret push and clc rcll movsb xor mov push and or inc xchg lock enter jl add push sbb dec mov pop mov inc dec lods xor xor adc sbb (bad) push and (bad) enter xchg sahf or or mov out adc push and cmp adc add inc xor and jmp int3 adc jle rorl inc mov jge or mov dec out xchg mov or in add aas imul mov mov popa es mov adc sub lahf mov test and jne mov pop cld cmp pop sub or pop ljmpw pop imull loopne insl cmpsb bound pop enter sub mov sub xchg js pop cmp pop rorb push sbb (bad) mov mov add repnz fwait nop xchg pop push rcl dec and cwtl jo sbb mov push pop mov nop pop sub subl sbb out jge test es add mov and mov jl push sbb sbbl cmp add hlt sbb scas pushl dec mov sub (bad) pop inc cmp jb inc mov pop setl leave rclb movb hlt repnz ss or add sbb or add inc pop or xlat or fmuls dec sub jno fbld sbb sbb test mov xchg ljmp stc out mov fdivr in mov shlb iret jg mov mov push adc inc pop or jo fs movsb mov rclb sub nop pusha lock add loope pusha and adc or sbb xor jo and xlat push hlt insb cmpb int3 test push scas aas jo fcoms lahf or add int or movsb push mov or mov testb and (bad) pop inc pop cmp inc imul dec jns test sub xor sbb cwtl mov pop out (bad) sbb lcall and or test xchg icebp xor andb dec test dec scas movsb cmp stos mov ficom jle inc mov arpl or int adc fcmovbe sub and pop in and jo js cwtl enter xor push mov rcl mov out fyl2x mov jl dec add inc out mull cwtl inc cwtl push or in nop or mov loope dec (bad) cmc or mov mov push mov jmp push imul test mov mov (bad) fs or pop add inc pushf test sub ds test fiadd jo sti repnz out (bad) loopne and imul push adc or dec pushf and test mov mov mov int3 and adc shll fcomps (bad) sub les xlat je cs (bad) lock sbb lods add mov add cs xchg cmp adc (bad) std push mov hlt xor or fsubrs clc adc subl adc mov js sbb sbb (bad) and push inc or ja cmp sub fdivl adc or pop or mov xor jge xor or in test mov push fdivs push mov push inc and aas sahf cld push mov push adc adc or add dec sbb xor rdmsr popa loope aaa jmp push inc rcl and imul mov (bad) call jo (bad) and enter sbb arpl out mov js push or cmp in dec adc jl or sbb sahf add scas push outsl in xchg add mov js pop int3 cmpsl jecxz lods pop movsb outsb dec mov sub ret mov invd in lock add (bad) jmp dec or movb or arpl cmp or mov out dec cltd mov outsb lods pusha insb mov or ret sbb cltd dec mov add mov dec call xchg mov jne push fwait mov push pop dec in mov sub xchg ret xor mov loop cmp sub loop jae fsubs js scas adc mov inc adc mov aaa or mov jo mov sub cmp leave inc mov clc mov loopne rol sub roll adc or sbb call ss mov subl mov add or sub or dec cmpsb add movsb push outsl cmp je (bad) ret and mov daa into sub xchg int3 loopne mov (bad) dec push mov or xchg and fstl movsb mov nop mov push sbb call add and jo subb mov negb inc pop or mov cmpl js push or ds add movsb push cltd daa adc pop xor sub cmp sub jp fsts xchg les or (bad) loope and add or add pop movsb fstpt pop jecxz mov mov jmp dec cmp and je sbb sub lods or mov xchg data16 loopne nop xchg or scas adc adc pop shr (bad) cld adc or ret subb or or and cmpsb call insb dec enter and lods lcall movsl or pop insb and adc xor test and lret push rolb add xchg imul pusha xor push pop and test int3 mov inc mov dec inc sub iret cmpsl inc and jns xchg cwtl dec mov and lcall or fiaddl add cmp mov pop xchg rclb adc xor cli js dec stos add movsb add lret push dec lods add cmp push dec cmp icebp rol mov mov call dec testb out or pop imul push mov push cmpsb cmp in fimul enter das sub popa sbb or sub sarl inc das loope call push inc cmpsb xchg push inc repnz mov push arpl mov aas sbb movsl mov or cmp cmp xchg movsb mov arpl ds loope adc loope andb cwtl pop inc mov pop xchg pop sbb scas pop or fs fadd lds mov pop mov push ret les lods rcrb out test leave (bad) lret or dec daa sti (bad) mov sub mov lcall xchg loope push adc push (bad) mov cmp into movl push repz pusha loope and adc (bad) in sub shll adc add xchg ds movsl push sub push push testb (bad) testl push mov pop insl imul (bad) and fnop ljmp adc sub xor data16 sbb pop leave xor or mov mov pop decb mov jbe lock adc pop test (bad) mov sahf std pushf sbb negl sub (bad) into add inc mov int3 sahf (bad) adc xchg add aaa mov or cltd mov mov xchg adc nop xor movsb add das dec sub dec call or mov inc and dec in mov js icebp sub rclb rcr mov mov dec imul jle call (bad) (bad) aam fmuls xor inc mov sar mov push xor les push call cmp cwtl les int3 cmpsl push or and mov dec jp dec adc inc and xor pusha (bad) mov or jns les mov or add gs or pushf pop xchg lods inc fisttpl dec sub push (bad) inc cmp dec inc inc movl push mov inc mov ljmp adc movsl adc subb inc jo rol dec mov addl sub inc or mov insb inc ja dec jl jg jp call out out mov push arpl xor bound stc popa adc xchg les bnd or push fsubrl or dec test dec xor loop dec roll xlat add aad mov mull test std pop lcall movsl inc dec cmp cmp mov fcoms test lods sbb nop scas inc mov jle cwtl push and repz xor dec adc dec rcrb jbe xor stos adc push icebp pushf adc js sarb mov mov or fldt or arpl mov repz dec inc fcomps bound test cmpsl lods add inc mov ret inc sub sbb enter cmpsl dec inc add mov or jmp insb leave jl push and xor mov push and push stc and js sub dec loop loop inc ds mov dec movsl int3 add mov je inc cltd push into add sub aam lock inc jl jo movsb es scas and mov mov mov popa sub stc ljmp jo ror rcrb or pop cmp mov loope xor cwtl add and mov inc aaa push mov in mov adc add jno and nop mov sub test out cmp rcrb or push and inc js adc mov addr16 xor xor adc pushf sbb xor shr adc mov adc or or into lock jl jne ret adc adc adc dec call (bad) enter mov add dec in call xor cwtl adc in push sahf mov or push lods int3 adc dec scas adc icebp scas cmp mov mov mov xchg fsubs xor test mov jae movsl xor mov loope das aas inc cwtl fldcw mov movsl cmp sbb nop cmp mov dec push nop adc and inc mov add je mov jno pop jo sbb or aad nop or adc lock sbb sbb cli or push sbb enter stos test and notl je jbe in inc movsl push addr16 xor mov hlt enter shrb ja leave stc add mov aam pushf call xchg negl outsb mov mov or rorb (bad) enter loope in ret pop aad cwtl add jmp enter iret or sbb sub pusha insb fcoms int3 xchg in adc mov int3 xchg sbb cmp repnz lret enter jg mov pop call adc xchg sbb sbb insb cmp and xor sub fdivrs in pop add xor movsb imul ss mov or ret or adc cwtl test dec imul les cmp or int pop les mov (bad) nop rorl mov test stos push push dec cmpb mov bound rorl cmpsl push mov inc sub int3 (bad) cmp orb add xchg adcb je push scas xor mov mov lods mov or int3 sub and in and outsl (bad) mov or les add std inc or add loope cmp pop or push pop and outsb sub rcr sbb insl mov cli fistp lods ret (bad) jb mov out flds and and pop std out ret mov jmp inc and sbb add mov aad jecxz repnz add and inc int3 lods xchg or (bad) xor cmp dec insb pop add cltd je adc and rcr xchg add push jne sti inc imul or mov or mov fdivrl in jl push insl sbb arpl pop pop push movsb jo add rorb out adc std sub xlat inc ljmp outsl dec mov lret add ficom rolb push sbb out dec sbb popf pop lret mov mulb mov test mov (bad) cmp pop cltd (bad) aam fdivrs ret and int out mov arpl sbb into or push dec fistpll mov inc jo nop inc push push xor movl js nop mov imul mov shr cmpb popa and call mov inc pop push iret dec xchg xor movsl clc and rcl (bad) ficom cmp faddl cmpsb xor jno in xlat sub and jl outsl mov in dec xor loopne mov clc fwait lock add js xchg pusha sbb loopne xchg jg nop sbb push daa push and push cltd aam inc call loope fcoms mov orb roll std popa pop mov adc icebp add push xchg shl mov lods sbb movb cmpsb fucompp movsl mov (bad) jo add or stc in sbb inc pop mov or add push rorl aam popa add pop mull cli out cmpsl add xor jp aas fidivrl lahf andl push fisubr sbb sbb pop mov pop inc add fxch leave pushf clc push inc add rorb push adc adc adc cmp mov mov or push push xchg add das (bad) gs or mov mov add lret popa pop adc leave and dec or and add mov jmp xchg or cld add push pop jl mov (bad) cmp mov pop sbb xor aam enter xorb addr16 add and push add xor ret push xor (bad) or pop add xchg and test mov je push clc test push and mov test mov push fbld nop jmp adc and lret mov jnp sbbb aam mov sub in out jnp push or push insb xchg shll call add mov jecxz pop cmp ljmp pop cmovns jno les popa add mov sbbb emms sbb clc inc pusha xor inc inc xchg outsl je add dec imul push rol outsb in lds addr16 lods sbb or ss jmp addr16 rorl mov sbbb push insl std add dec xchg dec add push outsb addb ss clc mov (bad) testb dec mov mov jae xchg adc dec shrl decl sti add pop insb addr16 pop mov sbb pushl (bad) pop insb mov add cs out or push sti hlt mov fild mov lods inc push mov rclb loop mov outsb add (bad) cltd mov aam das sub jne pusha lcall or jb or fucomip hlt push incb add addr16 es popf movaps test mov pop scas adc add inc inc sbb push adc push mov push les pop push pop inc add push mov mov and sub test jns mov add add sub ljmp jne xor cmp dec add inc in jmp mov sbb adc test jmp stos cltd jne (bad) xor call inc push add aad mov sub and lahf test sbb and push push or push js push inc mov sub push sub dec pushf scas ja xor ljmp sub int3 rclb sub loope dec add mov pop adc mov cmc test ret test aam xchg les or add sub (bad) ljmp pop lock jno xor sub test call mov std adcb imul lods or in push add and mov push roll popf test sbb mov adc mov add or cmpsl mull (bad) in cmp inc fmuls sbb add in jecxz pusha add and mov es (bad) mov in mov mov clc adcl in decl loopne adcl adc push jmp je or fildll jmp add sti sbb pushl mov xchg adc (bad) mov sub adc xor mov xor pop ljmp cmp cmc jne adc loope int3 lds lret cwtl sub data16 adc adc (bad) mov sbb (bad) sbb lock aaa add fiadd add aam push jae sub pop (bad) mov (bad) or adc xor push and dec lock movsl out sbb mov aas sbb out jl add and cmp xor inc inc jo jl and sahf push add and inc stos inc loopne inc pop js push insb int3 (bad) push dec push fmuls iret outsb xchg ss sbb (bad) loop add in mov (bad) call and mov aam xchg adc jecxz mov ret lods inc pop movups add mov sahf mov mov xorl ljmp mov xor push test fisttp inc mov sbb xchg pusha xor (bad) adc adc lods xor sarl sbb test aad xchg push into or cwtl cmc lods xor std fcomip add in out out inc xor push mov aas dec mov mov dec popf pop mov jo test data16 in hlt or sub jl in mov out subl xchg test pop loope xchg fdivs xor xchg ja clc mov enter push push pop add pop dec dec or jecxz stos nop mov cltd lods mov sbb xor or lret leave popa inc jae add out sbbb sbb xchg mov mov and add push adc mov sub mov and inc out aas ds add cli (bad) ja in xchg in pop fisttp jno jp fistl mov pop fisttp sbb mov pop cmp xchg mov add fildll sub (bad) add inc sub les insb lock or mov sbb rcrl mov mov xchg xor push push pop jmp add mov push mov aas es add pop test mov cld scas stos and (bad) pop mov out in addl and sbb out mov (bad) sbb ret xor inc mov and add lods mov lods inc sub fisubrl add loop jle xchg scas pop pop ret fs cmp inc rcrb jle lds pop mov xor push jae cmp out xchg adc cmpsb lock sub loope sub aam shrb clc js mov or fsubp jp pop push or pop int3 and add subl into mov adc pusha int (bad) xchg pop loop and iret cpuid push mov clc xchg cmp (bad) and mov loopne movsb aaa cld ficoml fbstp adc out orb in xchg clc notb push clc ds or mov ret add test push lods or xchg or sbb sbbl pushf (bad) push mov lods sbb adc dec (bad) inc adc clc aas inc (bad) cmp add jmp aad cmp popa jl add xor sti pop add mov cld add es jecxz (bad) and sahf xchg sar jecxz cmp pop xchg divl fdivs clc or cld push test xor xchg orl push aas dec jmp jno lea aas push cwtl divb rcll hlt cld push dec jo enter adc sub cmp and inc mov js or mov sub pop mov xchg mov cwtl jo mov ss popf or cld pop arpl outsl add dec int3 movsl popf arpl jl lcall (bad) je sub xchg or jo pushf dec xchg mov push ss and dec push mov loopne sti rclb test or inc pusha sub and push adc mov xchg adc iret add inc jo mov std insl and dec cmp add rcll nop orb dec and xor push les popw adc test adc loopne addl mov or push lea and aas fild mov push and out rclb sbb (bad) sub adc pop scas aam test inc adc push (bad) rcll cli jecxz and les lds repz aas aaa popf popa jle mov dec mov pop or add test mov sub add cmpsb bound addr16 mov (bad) pop sbbb add dec cmpsb push adc adc mov repz sub mov sbbb ljmp inc pop out dec sahf stos jmp pop mov popf pop dec adc adc ljmp sub xchg xchg lods adc rcrb pop enter test push add adc push sbb sbb mov cmpsl int mov mov (bad) or pop mov sahf mov mov in push or push pop adc lods add push icebp negl xor push pop dec xchg mov add lods cmp hlt xor pop (bad) ljmp mov in cmp cmp lds (bad) add or push test enter mov iret xor mov mov scas inc inc mov push loope push xchg push (bad) pushf cmpsb fwait pop mov pushf xorb cmpsl divl or adc pop mov sbb movsb je aam mov pop pop xchg jecxz ret cmp ficomp sub xchg fildll mov pusha push xchg sar pop imul js adc pop xchg cmp movsl or xchg jge cmp push test or movsl push subl int3 jg insb cltd mov add xchg fcomps add gs inc (bad) jmp dec je push fsubr pop mov cwtl sahf sub inc jbe add adc pop push jl mov add xchg mov jp fsts mov dec pause push cmp sbb xor xor in js jle mov cli inc and xor adc int3 mov fadd pmuludq dec icebp ja or jb and fstl nop push les xor jmp cmp add je dec dec inc xchg sahf cmp inc (bad) xchg pop mov or xor movsb iret ss ret add mov fs arpl adcl adc movsl mov scas adc xor push rcl push rcl push lods nop push mov mov or mov pop sub sahf shr mov xor push adc cmp pop dec pop and test lea shll jl add mov mov mov add add lahf (bad) jge xor add scas cmp mov or pop insl cmpl mov adc cmp out xor (bad) mov inc xchg js out add mov rcl add (bad) sub and mov mov pusha pop push leave dec aam jno adc xchg or movsl orl mov inc push sbb push inc insb jmp push and and mov js ret out lahf mov pusha push rclb addr16 mov adc lcall gs mov movsl jl sub push fild add popa mov in outsb xorl jg ja fsubrs rclb add nop loopne xchg adcb mov dec cltd shl cmpsb clc movl push lea fdivs add or call add add andl adc xor sbb push or popa jns cltd (bad) ficompl cmp call icebp fsubp and cwtl pop mov adcl push and fdivs std add pop das iret scas pop lea jge (bad) stc test jp jmp aad inc mov fbstp out lods pushf xchg push lahf jecxz jns cmp inc call rol call (bad) mov jb inc mov mov or sub pop mov imul nop pop add add xor (bad) rcl call inc or mov mov add iret mov xchg idivb push xlat dec (bad) mov pop or das (bad) xor jg fldl aad jae xchg or push sbb in (bad) mov or test cmp pop out push pushf jmp mov xorl daa pusha pusha pop sub or and fwait jae inc add xchg sub add imul inc test (bad) cmp mov aad inc inc xor aam cmp (bad) stos cmp xor sub jmp loop ss dec push xor pop arpl pop cmp add lcall mov push or fwait lods shrb push in clc dec or add add lret das fneni(8087 sahf sbb (bad) insl xchg pop xchg and nop mov iret andl sahf xchg adc and xchg and xor test xchg and movsb or xor and mov push daa cmc clc mov ljmp adc mov dec loopne xchg clc stos fsubs cmp test in add mov js dec out mov sub add testl fldenv in cmc pop outsb jbe xor or dec (bad) inc add (bad) roll dec out cs iret loopne repnz das cwtl fnstsw jecxz cmp jmp inc dec scas sbb and xor loope sbb shrb sub shlb cs and adc clc push fimul add out jl pop cmp lea pop mov rcl cmp leave add insb jbe getsec outsb mov fwait mov inc pop es jp rolb fs js and sub pusha sub loop jbe les mov ds push dec add xchg insl aaa ds and mov testl cmp mov insw stos fucomi push int3 lock cmp mov and lret fistp je push ret iret (bad) sbb mov fildl loop adc xchg int3 mov mov push cmpsl sbb jecxz and dec movsl lods jnp cwtl sbb insl dec cmp loope add adc inc insb out test dec add lods scas xor mov add stc jecxz ficompl jg shll sbb faddl add dec (bad) outsl and test add insl gs (bad) and mov add ror sub pop in shlb xor mov xor add mov loopne xor xchg loope orl mov add fisub out xchg loopne (bad) xor ret mov cmp clc mov fcomps cmp fwait je (bad) mov mov popa xchg or cmc pop pop mov nop mov add sub adc jg add clc mov scas cli or rcrl pusha pop fstl sbb and subl lds scas sub push xor and sahf cmp rcl jnp inc in push ret and inc lret cmp cmc cmpl nop jg and sub cmp inc and sub push add loope mov pop (bad) xlat pop adc add cmpsl mov addr16 ret inc adc ret lret lock xor sub arpl loopne xor rolb popa fmull mov sbb dec aam movsb pushf dec loope adc pop pop mov sahf pop dec rcrb dec dec xor lods sub je test inc cmpsb les dec or sub jge xchg or call jae test cmc and rolb loopne lock pushf add jno mov pop dec push inc sub xor push popa cld push icebp inc adcb jecxz in xor movsl dec rcll icebp or cmp mov dec fs sbb test sub js mov bound cmp mov and ret mov ds (bad) xor movsb dec (bad) xor fistpl iret scas and push or and nop push enter dec sbb gs nop sbb (bad) cltd rcrb sbb add add push push mov leave pusha cwtl call pop xlat xchg aaa xor add cmpsb push push add popf leave pop xor inc push out pop cwtl xor vmovupd aam inc add sbb add xor pop dec xchg add sahf xchg or sbb aad and (bad) rcl xchg push add mov sbb mov lock xchg frstor pop sbb les and sub mov xchg pop push orb fsubrs adc sbb cld nop push fimul sub adc and cs add push xor push or in out pop lret test jl es pusha sti outsl pop add pop dec add cld sbb and adc add add push faddp xchg mov cwtl xor push cmp push pop pushf mov out mov xorb loope pusha pusha dec mov enter xor sub pop stos add mov add adc test (bad) xor mov xor sbb sub adc mov xchg jl test pop add mov sbb test ja mov jl and enter cmpsb cmovnp outsb add mov and mov mov push sub mov xor pop inc and pop and nop xorb out xchg and das test inc stos xchg and mov dec loopne mov out or rolb dec mov jns add out ds or aaa dec loope cmc mov divb lret cmc xor and mov cmp jl fs xchg lods mov call (bad) loopne adc inc loopne xor xor jo ret leave ficoml fs cmpsl dec andl ljmp push orb out adc adc pop (bad) mov addb push inc or (bad) test mov sti xchg rclb into (bad) push je je mov hlt add fldcw loopne mov add lods adc shrb push iret dec movsl mov roll and pusha jmp xor es xchg insb rcl jg in xchg push lock add adc (bad) xchg lret jne xchg sub xchg add dec hlt shrl nop test stos call mov xor cmpsb pop mov mov push adc fs jb add mov nop or mov aas sub xor imul stos inc sbb adc jbe xchg enter sub mov mov jle push int fst pop xor ja call pop rolb aas inc pop mov cmp cwtl and add inc mov rcrb inc sub adcb lods xchg dec add test das adc add and jo push das mov in mov pop xlat aaa inc add mov out test rcll inc and sub mov xchg mov dec add pop mov adc enter (bad) clc cmpsb inc xchg enter notl imul adc and pop (bad) roll add fsubs jne cmp add lea wrmsr xchg sub test (bad) lock mov mov add add mov das sub add add or daa xor add pop dec mov ja sbb nop xchg push jno sub in pop push sub in mov adc add hlt push cld mov dec sub orl dec in lods (bad) fdivs cmp rorb mov cmp adc pop scas ds xchg cmp jo,pn addl fwait aam cld pop mov mov jge clc repnz adc xchg mov mov pusha nop cmp pop xor subl inc xchg add jge xchg push cmp push jae scas xchg pop pop xchg dec mov stc daa and add push aam push sub nop cmp cwtl and pop jmp nop loopne and mov sar xchg cwtl mov xor stc and sets in pop push xor cmp lods mov loopne out ds addl mov xor cwtl lock sbbl iret xchg add rcrb daa sbb mov cmc add loopne dec popa sbb adc pop and jb in and jmp (bad) fldenv dec add push jge nop mov (bad) xchg mov add (bad) dec pop rclb add pop por xorl subb push add pop pop jns push sbbb jl jns inc js insb lods std jg pop sbb jne push push jle add aas or call pop mov xchg shrb pusha arpl or aam sub fldenv aad mov cmp repz test (bad) nop lret mov dec sbbl mov jg jnp popa aam lods adc mov jmp add in xchg ds mov jle jnp lock lock shl addb fisttpll mov mov lock xchg rclb push add mov inc ficoml out adc loopne icebp arpl cmp test pop xor pop add push imul mov jo cmp inc loope aaa pop cmpsl and push mov (bad) jl add out into ljmp sbb cmp sub add jl mov outsb xor mov iret and js sbb stos pusha push or imul inc mov dec dec sbb mov (bad) repz xchg test sbb add xchg data16 xor cs das mov jg js (bad) jno (bad) scas jmp and aas jle adc ss ret mov add cmp inc (bad) cs loop push stos sbb outsb add lcall out sub cltd loopne and out lcall movsb jne add dec cmp cmc pop roll lret (bad) mov adc add add push nop adc or add (bad) js aam loop mov cmc (bad) repnz jp or sub adc and rolb adc mov and inc jo xorb and xchg scas inc pushf clc sti data16 test shrb in xor nop cmp mov les add add sbb test push ficoml int3 adc hlt mov lods pusha arpl cmc mov ret sub fs sub jbe add fbstp icebp inc sub je mov sub add icebp sarl or loop push repnz mov addr16 lahf xor cs mov mov andb je push out (bad) sbb pop mov pop jne nop cwtl jle cmp xlat inc ret inc push xchg nop or rcll loopne push mov or imul (bad) das pop mov test rol mov es jae xchg mov sub jle sarl out fsubs imul sbbb mov loope popf xor cmp xorl enter xchg loop aam cmp test inc push adc sbb push adc jne pusha cwtl hlt into xchg mov mov add mov push ret hlt and aaa fild xchg inc mov push mov das test push inc int3 jl or and xor lea fsub gs mov dec adc xor add cmc stc pop sub adc cwtl cmpsb and test (bad) mov cwtl inc cmpsb les test mov lock xchg xor sub shrb sbb les das mov test loopne sbb rolb push hlt fsub lods orl into cwtl sub jp pusha stos and movb sub jne add call and hlt aaa add push mov lea pop mov add scas je mov repnz add fisttp jne popa es mov cmp push add test inc insb stos cmp ds js adc sbb iret sub nop or mov adc (bad) xor stos js,pn dec xor xchg add rclb jns dec loopne xor or pusha mov movsl jge add int3 addr16 pop leave push sbb adc cwtl pop push push in inc (bad) cmpsl xchg loope adc sbb idiv mov popf and mov jecxz lcall push inc mov cmc jmp imul jg int cwtl addl adc adc inc and ret push push in push movsb rorb scas enter out pusha lcall jne nop adc or dec repnz shrb inc mov les daa sub popf and sbb inc and mov les push aad inc jbe pusha inc sub nop jecxz push pop xor loope xlat jl bound dec add mov inc loope aam jbe sbb inc mov hlt rcrb push lods orb sbb cld mov or sbb adcl fstpl addl cmp pop add mov sub and (bad) xchg sbb mov movsb mov les mov inc jo push loopne lock std jecxz mov shll imul adc mov hlt bound in push out rorb (bad) repz push fdiv pop mov cmp mov jl pop push push in push pushf jmp sub or loopne cmp xor dec xor fidivrl pusha rolb (bad) sbb (bad) in mov es sbb icebp push xor pop pop fild orl (bad) cmp add cld push mov sbb lret inc or and and mov sbb mov movsl rorb test and sbb orb push ror sbb inc jnp mov (bad) xor inc sub xchg push hlt inc arpl dec or mov movsb mov (bad) inc cmp sbb bound mov dec lods (bad) clc mov sbb inc mov pop fistpl dec mov adc mov inc test xor mov mov or jp test lock pop xor leave js sbb add js mov xor sub and dec cmp push pusha mov add fsubl sbb mov sbb (bad) or imul xchg mov int3 (bad) pusha dec loope push adc dec mov inc aad push and mov scas (bad) aaa out inc js cwtl aam cmpb test jle shrb fldenv cmp jl ja addr16 sbb arpl mov pusha push stos xor out adc jg (bad) dec dec xor mov stos call jecxz rorl dec sub mov loop add mov add (bad) pop sub xor or daa int3 xor or jle ds push cmp out pop pop add mov or xor mov jl add inc aam cmc add xchg dec nop inc test and inc hlt mov cmp in push dec mov add pop enter add mov fs or jl jo outsl sub or popa xchg call and jl push or pusha mov xor out rorb pop cld icebp stc ret xchg fxch (bad) pcmpeqd cld cmp push lea pop and jmp movsb jo mov clc add loop out jnp addl xchg jmp add (bad) xchg in cmc sarb nop cli push repnz andl inc nop loopne in cli fsubs add lds sbb jge add pop adc movsb in repz or mov cmpsb jo pop sbb sub jo add sbb xchg mov test or das or xor and mov mov mov dec pop jb add dec pop in push fs or (bad) lock add das push hlt xor xchg adc cld or add xor jmp (bad) lock or mov scas mov insb sub push cwtl inc jmp xor mov mov mov pusha and rcrb repnz sti sub inc xchg pop pop or stos inc add xchg jne xor or test cmp push inc sub das imull cli or adc cmp iret cmp in (bad) imul mov or nop mov pushf cmc in mov in scas or cmpsl stc add jge push mov adc lock push daa test or cmpsb adc sub rorl fdivrp add xchg nop jg mov cmp push jnp xchg dec bound push add insl arpl in mov mov test enter sbb ljmp or add sbb inc add ljmp and (bad) sarb push outsl xor and cmp mov fmuls push jle pop jg mov push pop pusha xor cmp mov sti push inc aam add pop and add js movsb jo in ljmp out push cld sbb dec lods add xor xlat cmpsb add rcr jb pop mov cmc jp into mov leave xchg and mull jle,pn xor xchg push (bad) cmc loop andb pop push xor out leave add in mov cmp jns in jge xorb push imul clc hlt leave stc lock push cltd inc adc mov les pop imul aaa scas mov aam ud2 popfw sbb scas (bad) push stos inc add push out cmc int3 ret mov sub jp fimul bound mov ds test or or pusha into cs add mov fcomp movsl fs add out sub xchg push inc mov shlb insb lods adc add in sbb enter and sub pop sub fbstp jae mov jns cmc mov cltd cmp lea lods jno xor mov test lods mov jle fsubrs out pushf pusha push add imul repnz mov dec pop xchg pop jno in cmp sbb add rorl pop shlb push inc in fs push xor sbb inc mov rolb negb cld or cmp jno aam pop insl pusha and js cmp xor enter sbb xchg adc scas inc imul pop cmp das xchg jg cmpsb cmp fdiv add int3 out popl xchg add cmp fisttpll jae popf add aas test cmc jns push xchg xchg aam test inc fs xlat pop ret push fs cmpb daa add out ss jbe xor push int pusha pop add add enter push cli sbb mov jo es (bad) dec cld or add loope das push inc sub addr16 xchg loopne repz pop lods cwtl add nop test icebp pop leave jge pop (bad) pop push les gs icebp icebp enter adc push pop imull adc daa (bad) fldcw and or push mov test aad or test cmp and std out adc loopne mov rcrb sbb or jl insb daa push xchg incl pop xchg pop sub lods call divb cwtl mov push pop (bad) mov call sub jge popa in das mov push xchg int3 or int3 je mov mov nop xchg and out je mov adc push in gs roll test lock push ror hlt xchg or push hlt test cld pop mov insb jl xchg mov es push iret loope add in fsubrs sub cmp xor dec mov popa mov arpl in in pop sarl mov add in dec xchg (bad) cld adcb (bad) xchg jecxz xor add sti dec sub int3 add mov adc punpckhdq and rolb cmp out (bad) and std movsb loop stos cld outsb imul or mov push mov adcb loop int lods outsb inc add or cs mov fmull sub js inc lock imul jge add mov (bad) cmp pop fs mov sub mov ret rcrb fdivrl cmpsl add in jge pop (bad) hlt xlat push mov xor pop add fadd shl inc cmc das sub popa add xchg add add std sbb sarb test cld cmpsb cmp mov add js cmp lahf or mov bound mov scas sbb adc sub push mov sub mov mov pusha popa pusha vrsqrtps add sbb xchg andb or aaa in lahf sbb loop lods push lret adcl mov in mov inc mov imul cld aam (bad) nop xor insb cmp push in xor popa pop mov outsb cmp das int or cmp add (bad) aaa push stos xor aad scas jo popa pop cmp mov adc mov adc out cmp mov add inc (bad) adcb lods les push mov cwtl (bad) sub add push lock jno pop cwtl or cmpsb hlt cld (bad) xor sbb mov add js jnp pop dec mov and mov mov adc dec sub inc test stc ffreep or js jl sbb push sub xchg and dec cmp or sub mov add frstor pushf mov popa mov stc mov lods or aam sbb mov jge push sub orb mov pop xor mov leave fisubl mov mov mov lea or loope xor aaa aas cli repz js add and mov popf sub push rcrb shr int mov inc sub pushf das sbb pop aad mov fnsave xchg loopne sub out bound push xchg sub mov inc inc out mov jno adc (bad) arpl xor xchg xor dec pop sub cld inc push adc iret adc or icebp jmp add mov sbb jge insb lods and xchg push lea mov pop or idivl mov rolb or cltd fildl imulb repnz inc mov mov push add inc mov fnstenv shrb ja imulb add mov sbb sahf into dec in adc or pop (bad) mull rcrl mov data16 mov adc movsb cmp addps push scas xorb push fcoms mov and sub mov adc adc add punpckhbw push sbb mov sbb sub or xor lahf push and repz push (bad) add in xor cli jge nop xchg mov cmp fdivrs jmp pop mov jl push xor int3 adc adc fsubs mov mov sbb and leave pop pushf and or rorl add je int3 mov call cmp rolb les imul (bad) stos cs adc or pop push add out or into mov cltd jl andb xchg pusha js or jo mov inc push sub inc clc dec mov stc cwtl (bad) iret jp arpl dec test xchg in call pop (bad) rol push movsb call mov ds insl xor call cwtl sub les add je add mov mov adc test lods dec and jae mov push xchg and fsubs inc subb xor sub cwtl popa outsl cmp fsubs mov cmp dec shll add aas mov push sub jae inc xchg xorl pop rolb sub cmovae movsb clc cwtl shlb js mov mov ljmp icebp fucomip sbb ret push mov sarl gs es or jbe mov in hlt xor cmp xchg js add nop pop xchg fcmovne or ja push stc enter mov ret xchg in or xor fwait cwtl cmp nop add sub mov stos dec sub mov loop xor fbstp arpl repnz (bad) lods sub mov ret xorb dec outsb (bad) repnz hlt out pop mov pop shr test adc rclb lods mov nopl or push aam dec inc push ret cs les add cld adc cmpsb (bad) xchg cmp bound dec xchg xorl fs nop fsubl jmp loope add xchg inc lods fnstsw call mov clc jbe aad sbb cmp in sbb mov add pop ret mov mov insb orl and out mov sub xchg mov call adc pop (bad) sub lods bound or test mov adc das cltd sub lods inc mov sbb stc mov jp into jb daa (bad) call int xor pop push mov shlb add mov jecxz cmp mov or les mov sub pop inc cmp clc xchg sub (bad) hlt nop pushf pop jno push or adc cwtl cmp add push add hlt int3 or dec out pusha jae sbb add call dec push adc cld cmp pop fmul dec and pusha adc call dec enter sbb scas pop xor loope xor fist xor sbb sub add push jmp pop add push sub ret cmp pop fadds push and jl xchg add or xor push pop and xor inc test xchg jle add arpl and lret fsubs cmp mov scas xlat or out lret pop pop push rcll push fwait ss pop mov les xor bound jno pop or xor xlat test insb arpl mov fstps xchg hlt cmp adc iret pop sbb mov aaa dec add mov fs movsb push pop sbb jle xchg ret aam cmp pusha lock xchg iret xor in pusha pop cmp mov add xchg and rclb push cmpsl xchg add xor test clc test xor cmp movsb ds aas aad pusha js add fdivl or xchg mov addl lock rorl arpl std adc mov push fwait jo sbb adc popa pusha sbb dec dec fisub and cmpsb pop ror jb popl sub mov pop push adc push imul dec jb shlb mov add jl sbb fs push ret jns loope inc add fcoml std or inc add popa adc ja cli sbb and mov sub add sbb sbb or sbbb push les mov cmc push inc cs out push js add aaa mov imulb fcomps cmpsl inc sub mov fdiv add nop dec out xchg into repz mov push sbb fs sti adcl out dec sub or addr16 stos movsl clc data16 mov add and add push add jbe pop (bad) cmc rolb fxch (bad) adc stc adc mov xor in add sub inc repz in jbe (bad) dec mov add pusha push cld call mov mov pmuludq add adc leave fldl mov mov in xor in push je popa cmc sub add call and push add pinsrw sub outsl sbb out jbe flds (bad) xor cmc loop or inc sub por lock xchg and xor jl sti sbb aas test mov adc pop pop divl mov jmp iret xor imul cmp fiadd pop fisttp dec call lock push aam mov cmpsb dec addb pop popa adc ds push test inc push add loope xlat in mov notb push jp xchg push cmpl mov hlt cmp xor sub mov cmpb xchg sub cld or sbb pop stc and cwtl stos daa push imul add sbb cmp (bad) lods push cwtl pop jmp xor cmp sub dec push add mov mov leave inc inc push pop xchg sub test inc ret cmp adc and pop push in jge sbb cmpsl leave inc xchg hlt xchg pop add mov and jg rcr fisttp mov in adc addl adc fidivr adc dec xorl mov sub sbb test jecxz test (bad) imul pmaxsw jle xchg xchg add dec jge mov and ret pop nop sbb rclb lock fucomip pusha call clc fmuls leave lock push les sahf sbb jae (bad) lods add push add mov inc and lret xlat stos mov and cmp dec loop je les call ljmp jae add fistp les imul sbb insl aam and jl inc and (bad) repnz cmpsl dec inc adc pop pop (bad) js fcoms addr16 das add inc cmpb repz je adc sbb hlt push in cmp jge inc into mov aam add popl addl imul add scas clc ss insl mov rorl pusha lods cmc push mov cmp lock xor add out xchg outsl adc cmp mov push adc fadds lds inc cmp aam loop nop cld repz pop out push push sub cmc xchg pop testl mov (bad) daa in jne and movsb es jnp repnz les push (bad) stc xor hlt xchg in loope sub xchg inc sbb pusha mov pop sub xchg push incb mov icebp or dec fwait movsb mov pop or sub imul add jg in push add dec pop pusha pusha mov push jns sbb test in add out push subb sbb pop mov adc lock mov pop mov fisttpll dec mov and sub xchg (bad) sub subb cs shlb (bad) pop sbb push outsl and pusha and cmpb xor in inc pop inc in popa or lcall pushf mov jg dec push lods add sbb (bad) jne xchg push xor nop fmuls jno jmp shrl xchg dec or inc jecxz es adc cwtl dec in in pop subl pop add icebp scas add or or mov mov sbb hlt sub cltd add gs jge add icebp fucomi (bad) int3 add adc jmp daa mov mov lods push in mov dec icebp sbb je sub das shrl js orb sub inc sbb ja xor jno mov mov cld test xchg subb jmp pop push pop add and cmc push jle push cmp add or mov pop (bad) mov repz sub sub sbb dec sbb nop mov mov idivl data16 xor inc popf mov popa add xchg add xchg adcl add out sub xchg mov pshufw xlat and fimul lods dec add (bad) fwait jmp pop jne and and outsb cmp pop lret lock lret pop addr16 scas inc pop in jnp (bad) xor mov adc add js iret (bad) bound cmp test mov ret sbb cwtl jecxz nop mov push xchg (bad) pop or inc daa icebp dec jmp mov sub push inc or cvtpi2ps pop in (bad) je (bad) popa leave call cmp out adc jge cmp xor add push mov dec das icebp data16 std arpl xchg sbb aaa mov leave push lret das xchg movsl fsts push ds mov and cmp popa fistl test inc sbb pusha or add popa fistpll xchg mov scas imull inc mov in push imul mov jbe xor stos call (bad) fsts aam ljmp dec mov pop in push pop cwtl jl je xlat loopne cwtl xchg aam ret mov add arpl jns pop dec inc test pop cmp icebp xchg cmp das sub sub repnz out jl movsb xchg aad and push in or and out sub (bad) cmp push jne pop xor dec jo cmp pop fdivl lock in inc xchg sub test and out fnsave fs nop enter test mov (bad) xchg mov sti (bad) fcoms lret cs pop adc push add cwtl pusha pop or inc add dec push jl addr16 incb (bad) push inc dec add inc sub lds and push iret cmc jl cld jle rolb aam sbb lret inc inc fdivs sysret mov mov push mov dec test dec out pop lret ror jbe cmc sbb or push (bad) lock (bad) push movsl les mov push cmp pop in rolb inc nop xchg test test sahf sub dec sti out xchg xor les mov xchg jae and inc dec inc add sub mov call add dec jno nop shlb jo mov test or test icebp and rclb rcrb in sub xchg aam dec aam and push sbb outsb push out xor js out icebp (bad) pusha push pusha xchg shll xor test adc or jge xor or incb aam jl ss dec push idivb sti sbb adc push or cmp lods aaa adc out sbb or xchg sti mov jl mov pop push rcr cld xor int std pop faddl mov lock adc shl inc adc rcll pop and inc add xchg push jecxz pusha pop sbb add jmp push xor cli adc xlat fimull push movzbl sbb cmp pop lgs jecxz dec insb inc test ja adc inc sbb add loop leave add aas out int sub add daa faddp xor inc sbb mov test sub jmp push fmuls test imul pop loop dec mull roll in mov jg imul lock sbb mov jmp dec xchg push hlt (bad) js out pusha mov ret push inc cmp aaa (bad) icebp or lods sub lods add in daa loop or lock in bound setne addr16 pop int3 sub leave adc push and mov jecxz mov mov or out pop (bad) jns movsl pop movsb mov pop test cmp mov xchg jo dec (bad) into pop adc sbbl (bad) add pop or hlt adc add pusha icebp cld sub or je pop imull push or jl inc mov (bad) das call arpl jno jl add push int jo dec mov add xchg or loope cmc cmpl mov shlb insb test decb dec xchg xor subb mov push lds mov fild test loopne (bad) push push ret into mov out or or adc lcall push rclb cmp add jo jge orl dec cmp adcl cld arpl or add int3 cmp sbb mov pushf sub int3 add int jp out mov popf fxam pop sub sbb cmp roll call fistp or pop jmp or (bad) clc and xchg rcrb push adc in imul imul inc lahf lret push in add mov sub sub push dec rolb push sub mov jecxz test push pusha mov leave sbbb ss mov fidivl push xchg fninit add xchg adc out call fmull scas in (bad) jge jle inc dec xor insb xchg ds sub sub nop sub hlt das push leave out nop mov xchg add hlt cmp sbb xchg dec sub add push jl mov push add loop mov lea lods inc addr16 add pop pop (bad) cwtl bound inc add cmp or add add in loopne and mov int3 dec stos jnp por push cmp xchg sbb add adc mov mov (bad) rorb movl lea dec bnd es stc iret fs mov jo xor rcl push push push push pop test in xor push (bad) rcrl inc xlat fnop scas dec decl add out xor loopne fisttpll dec pop psubw push addl xchg (bad) lock loopne daa imul mov push mov jge mov clc scas xor lcall movsl push sub jge fadds mov mov je cmp and and ror dec imul add loopne xchg movl mov leave hlt jae sbb xor popw inc lods es mov fildl mov mov nop adc mov pop add jge dec test dec jb loopne dec loop mov add cmp sub xchg mov mov sbb jo cmp fwait push xor (bad) mov jp dec roll mov notb out inc and and mov int3 daa jb xchg mov mov movsl int3 push cld add rcr push sub push sbb pop jnp jbe jmp cwtl fmuls pop dec test test shlb adc scas xor pop pop cmpl cli pusha jmp or sarl js sbb inc into mov mov pop jge shrl in scas adc cmp push fdivrs or push ljmp and xchg lea (bad) lods lock dec scas lock jecxz push out xchg sub mov cmp nop add fisubr das and mov int3 roll cmpsl xchg enter pop test daa inc pushf data16 push int3 sub add pop push push sti in xlat add push (bad) enter add loop adc sar (bad) je and cmc push pop pop cwtl sbb mov stos sbb add pop sbb out rolb cmp bnd push (bad) movsl (bad) push inc and aam das (bad) add nop fmul scas pop cmp popa xchg xchg push mov inc cmp int3 mov mov test addr16 mov xor dec rorl test sub fmuls xchg dec jno or pop add lret sub pop out dec loopnew lock add test nop push dec out dec sahf pushf and mov xchg add mov or push jle and mov outsb add push mov mov jp out addb loopne jmp lret je inc pop stos adc fcmovnu nop adc cli test jns mov mov flds clc sti add imull push fndisi(8087 or push addr16 add pop bound or and in iret nop aam js sub aad orl or xor fisub and cld shlb add xor inc jg orb pop dec (bad) mov orl ja inc add addl pop xlat add inc push sub lret loop cmp jno outsb xchg push jg push sbb add fs icebp rcrb ja insl cmp jno imul cmp mov pop jns (bad) or repz data16 push out mov jno stc andb shrb inc ja ret addl or push xlat std sbb adc rcl sbb inc nop xchg call call dec cmpsb add and lcall push or jns xchg and mov dec add sahf cli addr16 fwait cmp lcall xor rorl xor dec hlt adc cld or adc dec jns gs roll hlt jo nop int3 repz pusha sub cmpl fsubrl and es xor lds pcmpgtb sub call cmc adc sub xchg dec xchg or jecxz cs cmp (bad) add lret add insb pop xor bound mov push and pushf sbb jmp decb lret insb sub adc sbb and add cli sub andl jno jp inc jns mov adc outsl inc das dec js push lods int3 adc mov aas and jg push icebp sbb mov sub add test pop fidivrl ret lds or (bad) icebp or (bad) aam arpl and (bad) je js push loop cmp push mov addr16 pop xchg pusha in call fsubrl dec loope jne mov js jmp (bad) push add push stos or and stc stc jecxz loop sbbb aam nop inc pop xlat xchg adc sbb or outsl pushf adc aam in sbb mov add cli and jno jmp and mov test ret sbb (bad) and or jns mov mov test inc or (bad) push imul pop mov xchg push repnz adc push test leave inc out pushl adc (bad) add shrl call dec xchg pop sbb and adc andl shrl or jnp jns pop fnstsw mov sbb adc addr16 loopne adc orb shlb and xor sarl jno movsb test out xchg cli mov push xor fiadd (bad) enter shll in scas pushf or divl adc fadds mov sbb pop adc xchg test xor jne outsb lock lds std cs (bad) xor mov jne outsl sbb inc xor icebp fdivrs add inc test cwtl cmp cld andb dec jno es sbb clc sbb sbbb insl outsl inc stos jne mov daa nop adc jno dec sub out je adc out add and push test sub pop xchg mov inc nop and mov in add sti mov cmp or adc faddl adc or pusha pop push adc outsl jns je in movsb mov stc jge fnstcw push adc sub and std arpl jo test dec insb xor push addb stc jb (bad) dec arpl leave pushf test in dec movsb push mov (bad) cmc cmp cmp dec jp leave and add stos dec jge inc push mov incl jb ja mov mov jl add xchg cmp dec aaa js push es add adc in and pop mov imul or stos jmp push push (bad) aaa dec add loop adc push je cmp and stos sbbb inc push stos pop push dec jp pop and shll aam inc add pop mov jge xor push or in add push enter movsb inc fdivl icebp mov je push rclb xchg test add lret sbb jp rcll sbb pop add adc jb cmp sub and dec or fdivrl (bad) xchg add test cmp mov sbb lods or mov mov xchg mov (bad) push adc or jo xchg lret pop jb pusha xchg pop insb mov mov jp sbb add jno in leave adc xor shr pop or inc bound andb notl sbb fbstp pop enter adc and pushf inc add aas mov xor mov adc loop inc add (bad) lock mov jns xor jge in or pop cmp call mov or (bad) mov cmp jns mov rcrl je test jb push dec push cs adc sahf dec cmp xor out add or jns outsl sbb pop xchg add cmp add insb mov out push data16 mov test jb dec xchg xchg and fcoms xchg aad add movsb hlt sbb mov mov in dec insl and jp mov inc xchg in test xor outsb sub jnp mov add sbb dec jnp mov xchg dec xchg or pop stos or or ja mov add mov les je jb mov push dec nop lock inc bound or cmpsb adc cltd push inc call adc and cwtl (bad) out mov adc mov mov lods fsts lock dec jp pop mov les mov lds push in (bad) mov inc stc ficoml fldcw and and add adc out mov rcl fs push addb mov cld adcb mov add mov mov in mov orl fs mov lret loop test push aaa mov sbbl out in fsub adc pusha mov pop and mov xor dec lret jl jo add cmp enter sub loop imul mov je nop push fldcw call (bad) mov mov test xlat pushf xorb and int3 shrb clc and loop pop xchg pop adc add idivl push add pop stos daa pop inc or jmp adc mov cwtl mov or jp cmpsb mov jo xchg cwtl push fldt mov jecxz push sbb pop pop and fldcw in enter cmp pop adc and xchg adc enter mov mov add ss lods mov dec and addr16 jns add pusha and aad rcr jnp (bad) cmc or lret xchg sub pop inc mov (bad) jmp fadds lret jno cmp stos jp loope and add push push pop mov xchg (bad) pusha mov xor cld or mov into push pop jne cmp lds add add dec dec scas add inc dec jno inc sbb mov ds sbb adc mov sbb dec ja ficompl mov inc mov cli push mov add add sub (bad) aad and mov mov in push (bad) aaa cli orl push fcmovnb test and mov inc loop movsl pop or roll add add cwtl mov push outsb push cs push xchg ss mov or dec shrb shlb inc cmp inc sub cmc or aam add sub push ds xor subl sbb add outsb nop mov call clc inc outsb add (bad) xor inc cmp push pop fneni(8087 mov jbe and and add ret mov xchg and stc popa (bad) cmp shr imul orb aas inc dec ret xchg push inc inc (bad) inc mov ja pushf add shrl jmp xchg cmpb aad out xchg cwtl or movsb adc icebp or sub sub cs pop inc insb jg xchg cmp ror sysret sbb lea mov sbb mov sub lods call adc lea test gs enter lock or int3 inc and scas add fdivl ret pop sbb or fisttpl add nop cwtl test rcll les push mov das push push pop cmp push call rcrb add xchg in xchg rclb xchg lods mov mov test lock enter inc addb add repz aam in inc sub or adc mov dec mov insb adc inc loopne inc or push sbb (bad) mov rcrb xchg shlb stos mov lods adc cs shlb or mov iret or jbe push or inc (bad) mov insl inc lds pop jno cltd jmp je inc fdivl sbb mov sub push or rclb sbb sub test and adcb add sbb sbb icebp movsb andb loop (bad) jne sti add push orl aam pop lea repnz (bad) jl xchg cmpb xchg shrl adc jl adc mov dec into or add xchg lock add push cmp and sbb sahf ja cmp adc stc add jb sub nop mov pusha fldl data16 dec adc mov dec xor lock into ja (bad) xor int3 add mov insb lock mov subb jns jl push and mov loopne out dec sarb xchg sbb jmp or sarb in inc push push movsb out push jae pop movb rcrb and jmp pusha sub aam and adc pop dec push sub mov push mov add mov test xor es and shl rolb push mov imul jb xor ret mov push dec jne lcall (bad) aam ja stc in adc push test gs mov add fisubr rcrb ss xlat add mov aam aaa xor pop out jb add sub lock fadds mov fwait jmp mov in mov pushf cmp inc movsb fidivrl stc mov daa mov mov inc add sub test fcoms pusha mov or das rcll dec (bad) or pop mov les xor movsl cmp push inc push mov cmp icebp add nop mov dec fiaddl push popf pop inc pop mov xor mov mov mov mov jecxz and or inc cmp test ja dec mov inc jl xor pop xor mov sbb jo pop adc (bad) cwtl andb pop add insb inc jo ret cmp jae pop sbb out xor mov test jl xchg mov shr mov jbe mov rolb enter in fwait leave push addb xchg xchg sti push inc enter cmp cmp mov ret fwait sub or push lods or les xor rolb addb cs jns ret insb ds dec sbb pop pusha ja sbb mov and idivb push out cwtl mov lahf mov cmp xchg test es inc rcrb dec bound mov cmpsb pop js cld andl frstor imul mov cmc and adc or arpl inc rcrl pusha cwtl dec sbb sbb mov mov pop push mov xchg std sub insb orl and sbb pushf sub or mov nop in leave test and sbb es iret mov or sub lock lcall loopne mov add pop addl push mov test sub test call dec mov cmp cmp pusha cmp pushf push dec pop xor je xchg ret iret test xchg and lahf jns add cmp arpl ja add xor xor stos mov enter or push adc popa sub and lds aaa xor inc adc insb pop pusha mov (bad) and bound add jo jmp fmull mov add mov bswap sub pushf sub mov sub les data16 test dec push or lods dec adc cmp rcrl leave add or mov imul sbb add in mov and and jae xchg mov sub outsb xchg les rolb dec or mov and fwait add cmp mov dec stc push pusha inc inc xchg shrb (bad) pop push sete jo lea js loopne rorb ret push sbb mov push mov add (bad) clc pusha enter sub or or mov mov mov enter inc jl cmp stos ret mov clc add rol rcll es js nop fsub rol test sub mov jnp jmp pop mov out or inc or mov pop out add fcomip mov les icebp test sbb ss add mov in lahf loopne sub sbb inc sbb jno add aad push xor shlb out jl cmp cmp mov sub es enter mov mov rorl cli adc push push mov ljmp roll xor or and mov loop cltd test adc add leave stos lcall es and push push sbb mov or jl ror sub adc cwtl inc std (bad) mov cmc mov xor (bad) jecxz call js mov cmp and arpl dec and int push incb sbb push stc sbb and xchg adc mov sub lock sbb in and add popa cmp mov jmp punpckhbw daa (bad) pop movsl dec add pop sti sub shlb in push roll mov nop add loope mov xor jecxz pop call sbb sub call insb add mov pop mov test add xchg cmp mov std ds loopne pop mov xchg sbb lret inc xchg and inc or addb negl jl sbb lods dec pusha pop aas adc pop fs faddl pusha insb sbb stc add xor inc inc xor add jge mov xor mov lods add or leave popf dec dec dec nop cmpb movsl mov int3 iret pop adc ljmp sbb add dec (bad) xchg add push loop sbb jb (bad) jae sub add inc sbb lea jge pop jo add mov rcll movsb add xor add lock lcall xadd jns aam xor add cmp inc pop insl in adc and mov aam jns out cld mov dec sbb cmp mov mov lock jg push int jmp test mov or jg xchg mov fidiv pop push and rolb mov xor sub cmp push xchg mov mov mov cmp adc xor shl idivl push outsl popa shrl pop (bad) push lret adc adc cmc in pop add les shlb adcl xor lret push dec dec test mov pop sub test xchg dec mov mov adc insb mov test cmp fadd mov repnz add sbb push xor test lahf jmp inc mov or or inc mov jns,pt or jnp frstor fistpll inc push sub inc pop xchg mov xor adc aas nop add sbb jl loope jae fcompl mov sbb xchg arpl lds movsb sar inc sub push out movsl sbb jo push xchg add in add sub or pop sbb cmpl insb jle in sub repnz or mov pusha decb jbe test mov shr dec or mov faddl jmp shll fadds sbb push push push jmp ficom xor inc inc dec add dec jg cmp inc rclb adc jne in pusha daa cmp out cmp jle stos popa dec push movsb push push out mov pop test das xchg dec nop imul movsb adcl subb or mov fcoms lahf repz xlat je dec out xchg insb jno sub movb loop push xchg and mov cwtl mov inc add xor pop sub fwait sbb or outsb pop add mov test xor stos inc sbb mov jg add add push push inc jo mov lods add fcomp xor fisttp movsl leave out mov jno pop sbb xor (bad) xor or out data16 outsb out ret sbb xor add into add sub inc xchg orl ror mov and sbb and dec or and dec adc and add aam inc in pop mov mov add cmp call mov pop push sub icebp dec insb pop sbb sub inc mov sar data16 hlt sbb popf inc aam push add xchg inc dec jns pop or inc test fdivl jg js ja pusha xor jp movsb xchg and or int3 dec and dec sbb icebp mov leave insb sub lahf clc pop jle dec jmp jb push inc lods and inc add call adc inc jns test nop nop mov inc cmp or inc sub das dec mov dec call sti faddl or jo aam std dec cmpsl movsb add pop or in sub cmp inc add mov xchg xorb inc push adc sbb cs mov fwait (bad) inc into pop jp or fidivr insl cmpsb push scas pop xchg loop loope int3 leave ja or mov add or repz mov je nop pop xor orb in int3 scas test test adcb les xor mov mov (bad) aad clc sbbl dec imul lock push cmp adc insl imul xor jge or cmp pop mov jg or sbb or push (bad) js pop add data16 dec orl xor adc jno inc cmp sbb stc orb pop fsincos xchg sbb rolb (bad) insb jp cmp imul (bad) or xchg mov mov jb and sub shr aaa insb ret bound xchg mov or jno pushf mov sub rcr mul fadds clc jl add shl hlt decb pop es hlt pop ret scas das push mov sub dec push jl add test insb add out pop inc outsb jle xor inc cmp pop adc adc dec popf mov (bad) jo sbbl cmpsl insb fidiv mov cwtl xchg xor repz add xlat in out or je adc mov movsb jle je add or sub (bad) pushf pop (bad) je push jbe sahf adc xlat inc js mov and fsub test in mov cmp xchg arpl mov lock ret add mov add fildll xor xchg pop mov lret or xorb xchg jp jne and add push imul orb pop xchg loop jno sbb xor das into enter mov pop dec bound add dec std imul add out aas push lds pop adc in cmpsb jecxz in dec je rorb test pop add inc es ret (bad) movsb xchg aam pop push dec pop or call rorb (bad) and xor data16 push or es xor or inc inc andl inc idivl push sub inc jo xchg push inc stos shrb pop das xor cmp mov fcom inc xor push add push enter mov or sbb push pusha dec or pop in mov mov mov fstps push mov sbb loop jo cmp call in rolb jo jae enter (bad) jmp mov or cmpl sbb sub adc lret mov mov push lock clc js add das adc out cmp cltd jnp add aam fwait sbb xchg inc add jo je mov fcmovb push into dec gs shll pop daa jno cmp jns xor xchg adcl stc cwtl add mov inc in insb pushf rorl loope inc jge int3 mov mov addl and pop jno fist jno and call popa das pushl jns ljmp xchg pop in insb shll mov loopne jb dec add ret lcall ss inc clc mov mov push mov xchg arpl jb add sub or xchg popf cmp in inc nop add bound enter cmpsb mov loopne js decb mov mov lahf inc cmpl loope call cld push adc xor int3 push je test and push adc inc mov jl dec xchg jne mov dec aaa cld dec sbb xlat push lock or mov pop pusha std mov cli jecxz in or icebp je std psraw jne sbb push push jbe inc into sahf addl push dec cmpl xchg mov aaa or call mov test rcrl fadds inc out push das cmc lock mov or pop popa push loopne mov pop mov iret out cs xor mov jl xchg ljmp mov mov cmp hlt xchg dec push ljmp cmp loopne xor jno iret push fiadd fistpl mov sbb cmp pop movsb sbb push pop fimul pop dec lds push (bad) out jnp and jb jle,pt add sub push jg popa sahf cmp in pusha js jp js out (bad) jmp jns insb sub out in mov add iret mov sbb ds xor xor sub cmp insb adc xchg sarb cmp inc or xor inc aam sub (bad) mov das fcoms hlt fst mov pop and loopne (bad) loop mov push mov jp mov pushf (bad) dec out pop mov sbb ret cmpb (bad) gs adc inc ds mov rolb popa adc es sub andl xchg sub pop mov lock arpl add fucomip in mov into jp pop mov (bad) or dec (bad) mov sub xorl pusha and inc sbb xchg pushf (bad) jmp add in pop jecxz out mov add call cmp jb incl fcompl adc sub repnz add cmp loopne movb nop les decb cmp dec mov mov ficom ljmp pushf mov cmp or pop popa dec in jle mov cmp add cmp cmp mov xor movsb rorb out or jns inc les pop or dec adc mov cmp ljmp mov mov inc xchg addr16 push jle lock dec inc sbb add into jno,pn add leave push jnp and xchg or add lcall jae adc lock adc nop imul push lock rcrl (bad) mov inc mov add pop out or test (bad) mov jno push sub fadds outsb inc push mov xor sbb pusha or lcall add xchg push adc iret bsf stos xchg and mov mov add xor test and pop sbb adc (bad) and add jo sbb and orb sarb push mov jl and sub inc mov ret (bad) jecxz add inc dec mov addr16 lahf xchg jae add jns cmc add leave xorl dec mov mov das jbe lods or fmuls and xor (bad) cmpsb inc add cli mov xor ret cmp fbld mov imul shll and pop cmp arpl inc cltd loop and inc adc cmp stos pop add out imull pop push xor cmp mov enter push ret sbb and adc scas and notb inc es add inc jg cmp in inc rcr imul nop sub mov push es (bad) aaa ja mov repz and xchg sbb mov rolb les sbb push iret arpl fwait jp mov add sbb inc frstor rolb or fsub jbe sbb imul rcrb xchg or mov add test jp addb or adc pop (bad) nop sahf dec dec adc sbb dec (bad) pusha fimull add cmpb nopl gs aam (bad) dec hlt jecxz mov fwait lods push pop int3 cltd sbb add and xor add xor test js add xor or add add or push pusha push jg xor mov (bad) lret test xor int3 mov stc xchg out and shlb inc pop jl sbb in or fild call cld pop jne clc xchg call pop sbb push mov xor sub push xchg dec cwtl subl jecxz fcompl jb scas mov add mov add enter dec jecxz mov outsb (bad) dec mov mov das cld call stos jae ljmp mov fcoml movsb inc mov pop movsl jg push in lods mov sub cmp jns cmp sub mov push je sbb xor test pop pop ficomp das sbb push fst inc xor divl mov sbb xor add sbb insb inc aaa decb push out inc add mov xor (bad) stos cmpb les popf sub or push push in nop in and xor and ret push les fs xor fwait nop add (bad) out push jns push fldenv and inc popf rol dec xor add or sti lahf xchg push cmp sub add cmpsl fist ret rcr or or or pusha js or jbe lock or sub cmp xor clc lock cli push ja sub adc aad xor jo sbb repz lret mov inc add adc rcrb pop or jae out pop xchg test ret enter sbb pop lods clc dec (bad) mov orl aad jmp dec add pop stos ret add into cmp push adc add mov int xor inc dec shr roll scas push push lcall movb push jmp cmp xchg push xlat rorb pop (bad) mov pop adc mov xchg or push sub js,pt jge inc ret repnz xor and mov lret test loop push xchg pop add dec pop sbb loopne out (bad) sbb jp add add push push add lods mov rcrb add movsb adc xchg leave idivb int or xchg stos adc dec out or imul inc xchg adc jae mov push nop jmp xchg add jae adc je cli iret into sub scas cmp out jle push pop xor (bad) (bad) mov mov add mov hlt fidiv xorb std ds nop add cmpsl mov mov lods test or sarb sbb int3 mov das xchg add add (bad) cmp bswap inc mov rcll cmpsb mov pop je xchg add sub scas iret xor ljmp xor adc pop mov shrl jl xchg inc or sbbb scas sbb pop out adc pop in and push add aas ret adc and rcr push mov out das add test sbb mov sarb mov jg push xchg adc test mov xor sub adc repz (bad) into cmpsb pop sub mov adc or daa jbe imull jo fisubl (bad) mov (bad) mov (bad) mov je scas cmp js enter jl mov add mov inc cmp lods je hlt inc std inc cltd shlb add fdivl cmp nop cmp and inc out add add loopne jne insb stos or fs add jecxz test or sbb fcoms subb mov adc faddl push scas daa mov out inc ret fistpll inc pusha add mov (bad) mov cmpsl jae pusha outsb inc xchg xchg std pop inc adc cmp jnp hlt lods mov enter mov adc add sti test scas xorb xor add inc pop xchg add sub mov or aad sbb pop adc sub orb and (bad) inc cmp sub aam cltd mov dec movsb push rolb es out mov jnp imul jp push (bad) daa jecxz fsubs add and xchg cmpb push test and lock lods mov sbb cmpsb iret orl and jnp test sbb push or jo (bad) cmp xor add xchg inc pusha sub jg and je repz sbb adc out in lods and (bad) ja shlb repnz and sbb jge push or shlb or ret mov les xor xchg cmp sbb sub dec cmpsl xor nop add sbb jno or mov (bad) push jae inc hlt pop stos pop sbbb jg addr16 sbb je rclb adc adc dec repnz push cmp mov mov xchg inc push xor mov hlt pop das dec dec mov out adc xlat movsb or jne jl sub call xchg (bad) fcomps add jb xor or dec mov js jbe cmp push jae ret daa test out dec or mull xchg xchg xor cmp mov xchg jge push sub jno mov in and jp and lods test movl adc js add dec mov (bad) movsb outsb mov mov sbb cmpsb sbb stos sahf cmpsl pop mov test outsl lods and popl inc pop hlt popa jo sub sbb das push mov ret insb pop les push aam test add and leave nop xchg and sbb dec sub cwtl sub das test repnz shl lock jno xor jnp jp pop mulb pop mov dec push roll aas in xchg and adcb sbb lahf or test out ss xor push nop xchg loopne and jecxz sahf xor rcll pop xchg adc test (bad) out xchg add test add add (bad) xchg cmpsb inc add xchg sub add jno jne,pt vpcmpeqb adc lods scas pop int and emms and add data16 outsb pop add or adc dec out or hlt push enter pushf adc add inc int3 add test loope mov out dec add mov cltd insl sar jb jecxz or sub dec inc lods stc or cltd mov push in add sub lret mov call cltd adc mov xlat adc xchg xor jnp bound aas jo adc adc fadds sahf rcrl jecxz push xchg stc or sub orb rcrl add jns mov push decl bound fistpll push dec and cld mov lods xor in xor test aas lret mov dec insl scas bound adc or mov xchg cmpl sub cli mov mov xchg fistl es or mov mov into add scas inc data16 push xchg inc add std pop (bad) jle sbbl (bad) adc push in pop pop pop fcompl out jbe add pop mov inc lods push dec cmp stos decb in test xchg stos jno push les sub add jl fldt decl pushw (bad) out les stos mov mov jp cmpsl dec loop mov xchg bsf iret xchg scas insb add or test enter subps loopne ror xchg clc lods loop mov lds jbe mov mov lods test inc inc std sar cld and fild call add xor or or (bad) in mov je ret or lret pop jecxz cld push adc je ds fadds fdiv adc lret outsl sahf inc sbb pop lret xchg test add nop daa scas adc jg push int3 (bad) adc push pop and jecxz mov mov das ljmp cmpsl pushf and (bad) mov push lds shlb clc cmp pop dec fcoms adc inc hlt inc pop into jecxz adc cmpsb mov sub push and or xor scas add out mov jo dec mov add xor ret add push sub jns or movsl mov cwtl loope sub jns jno movsb mov add mov jnp inc cmp sbb cld inc out lods mov add and xchg pop inc mov in enter and dec sbb push dec in push dec pop mov nop clc movsl inc daa stos jge fsubrl sub push sub mov inc stc cs add lods mov pop mov dec js sbb jp pop push cmp iret lds scas cmp adc nop add add and cs (bad) dec push rclb pop fs aad insb std pop dec add fidiv cmpsl loopne fsts add mov pop dec out add scas sbb loope and imul mov sub mov sbb jl andl subb pusha adc nop lods add popf lret shl sbb das pop insl and mov (bad) or add dec stos sbb pop and cmp sbb or add nop pop xor pop faddl pop mov add scas rcrb or add orb jmp inc loopne popa sub or xchg jne sbb xchg add dec (bad) sbb inc push movsl rcrb mov sbb xor movb xchg mov gs insb outsb in pusha mov cwtl inc cmp pusha push adc scas mov jmp cmp mov int add in cmp or int3 dec (bad) sbb xchg adc call into xchg xchg or or in ss and push loopne movsl cmpsl adc dec enter jp adc push xchg mov int3 cmp test mov outsb push inc xchg pop inc jo sbb xorb fs sbb jp jo mov rcl scas ds mov pusha pop sub xor xchg add stos pop adc mov inc mov pop test push sbb xor arpl insb add dec adc mov dec js dec int3 mov movsl mov cmp outsb lret add stos mov xorl sub insb test sbb mov add push mov outsb inc inc dec out sub cmpsb jg jae pop fist sbb cmp pusha push shrl fisubrl mov mov insb pop enter lods inc (bad) dec clc (bad) in cmpsl pop pop das jp mov mov xor mul stos add inc add aam mov shrb mov decb or xchg lea add aam int3 stos dec mov inc enter repnz test adc stos ret insb call and enter pop xor out xor adc popa sub or mov inc sub repnz xchg inc lods xor fmuls nop aam pop movaps jno fild and popa or int dec add mov imul rorb add jl mov cli push jl hlt leave mov adc (bad) mov push and iret or pop xor add dec mov mov mov (bad) pop cmpsb jbe push cwtl imul mov and pop pusha imul lahf pusha ds int3 mov push rcll dec sbb push mov xor rcll mov loopne inc mov cmp (bad) mov lock add punpckhdq popf lcall and sbb imul test sbb and pop push enter cmc mov mov jge divb jbe clc fldt adc add sbb add push inc xchg mov in mov dec lds adc push cmp ljmp add mov dec sub jae sub (bad) rcrb adc mov push sub sub jbe test outsl jl add je ss xor in cwtl mov hlt xchg xchg test mov enter jmp hlt xchg sahf add call and jl adc lock cli push je clc aam inc lret aad jnp sbb hlt push pop and cld pop or xor xchg push and sub cmp xchg enter (bad) add pop jne movsb cmpsl notb add or fistp sub xchg in pop roll ret add dec test lock xor xor arpl add jle frstor out lods sub pushf pop cmp xor test cld adc inc cmpsb add in adc repnz add imul ss dec dec cmpsb dec dec mov mov add (bad) mov test push push push sbbl hlt and or pop adc jl adc mov dec nop nop orb xchg push (bad) jle int3 xchg jp fsubr (bad) out pop mov adc scas inc (bad) lret xchg mov jl add sarl dec iret add xor sub hlt mov (bad) (bad) or pop outsl lods sahf inc jbe sub jge jae dec and dec sbb adc xor and test inc dec data16 verr xchg lock sbb in add fstp insb lret inc clc sub test test dec ror push mov inc mov mov (bad) jne jecxz dec sbb js lea mov add add stos movsb les lock dec andb pusha lods sbb mov sub in rclb xor add or push test jns js cmpsb jo pop jl mov inc push in dec dec int3 test jne in adc xchg pop and add cmc int3 jae and popa lea jl nop mov add pop dec sbbb in mov fidiv cld xchg mov in ja lcall fcoml xchg nop add cmp xor inc add pop aam push mov jl lret (bad) pop cs das mov adc clc dec cltd mov adc pop test je inc xchg jge mov fs mov dec push inc pusha ljmp dec adc adc fmull lods sbb adc mov popa hlt pop add in jp jo leave imul add out fldcw or push sub mov cmp pop call jp push jo outsl xchg inc nop and fbstp addb inc or call xchg adcl movsl lcall test outsb pop add inc add test xlat cmpsb dec jbe xor add jno mov sub rcrb pop ja mov nop adc cwtl js dec outsl adc pop add ret xchg out pop insl add mov pusha leave sbb nop adc or pop jge stos adc add int3 scas test inc jl ss pop loop dec jl add enter pop and sub xor mov aam lock outsl xchg shl cmp pushf sbb jne cmp cmpsb nop inc call jne mov sub sbb fstl addb ret dec nop pop or out xchg emms scas cmp sbb cmpl ror cmp dec pushf push pop pusha js or pop fsubrs icebp xchg dec adcl addr16 pop imul xchg aad mov neg xor sub test push in in fwait (bad) ss cmpb js negl inc pusha (bad) jo sub std pop push in push hlt add leave cmp mulb lods add scas daa dec cmpsl add mov fadds sbbb xor mov mov sub aam inc cmc mov (bad) and lock sbb inc dec mov dec mov sahf test lahf jne in mov nop sbb cmp mov dec (bad) or dec mov js inc idivb les rol clc dec in out sahf test adc add add js and xchg js dec xorl mov fcomi pop rcrb (bad) jge adc lret jl out push adc mov fs jns rclb add or je ret mov mov dec fdiv mov cmp mov push or and clc jnp adc mov int3 mov push das add jae add cmp inc push sub and faddl out push stos or ljmp jno insl int3 (bad) add fdivrs jnp dec and mov cmp jae mov mov (bad) xor int nop jl pop leave pop shll inc inc xor adc rep dec mov inc inc sub insb xor adc cli fwait or cmp and js lock imul xchg test add cwtl mov je outsb push (bad) ror dec rep jne mov jmp mov into test cs ror lock pop pop add cmp xchg push test inc cwtl inc sbb stc cwtl mov scas or and xor add xor dec loopne lods mov inc mov loopne in or mov xor scas cmp stc mov les repnz call push pop pop lcall jnp das js add push push rclb mov mov fildl pop or inc add insl sahf jno pop or pop xor mov xchg fstpt ret xchg sub jbe mov sub push shr pop bound inc lahf mov dec mov ja mov daa (bad) sbb fmuls mov aaa (bad) dec dec and ljmp gs inc mov es mov push mov sub lods rcrb mov xchg xor push jg adc pop inc mov jnp push dec pop mov cmp mov sub jb stos xchg pop aad mov inc push xchg cmp and imul mov xor leave test xchg fdivs fildll xor fcomi inc fcompl mov gs outsb inc mov fdivrp adc xorb scas xchg pop setp lahf ja (bad) push sar lods add jae dec or sub add mov and inc pop sti movsl stos arpl lds mov outsb add dec pop mov add inc das xchg iret pop xor test push jo jb add out cwtl jp push mov icebp sbb out cs sbb adc dec add mov in add and inc lea jo pop jbe cmc dec cwtl pop gs and and add sub (bad) lock test cmp mov sub rorl xlat pop jae icebp sbb xor daa je push add rol pop adc rcrl push sbbb jmp scas imul add pop loopne mov (bad) xchg icebp test jmp or popa lret xchg xchg inc les (bad) inc in movsl enter lcall dec scas push and outsb jae add subl (bad) cli inc stos inc mov pop add or mov add mov out shrb je pusha enter sub pop jnp add jge mov test pop (bad) xor and inc add dec test cmp test cmp sbb adc jl push mov jns cmp push cmp add in sbb and stos loopne inc (bad) adc sarl fidiv mov mov std add lods xor sbb nop inc cmpsl pop push mov jecxz sub xor ds mov sbb cmp loopne stos hlt outsb add adc adc pop (bad) push insl push imul fmuls int3 and addb in pushf sub data16 lret inc lret sbb aam imul pop inc jno and es pushf shrb xor lods cmp sub mov sub fwait dec (bad) pushf orl xchg add push or ds add addr16 mov subb fwait and sub movsb aad cmp popa notb (bad) cmp imul loopne lds lods js cmp js push stos pop jo sub adc movsb enter pop shlb loop sub push divl add jmp jnp mov in xchg xchg aam add enter add and jl dec aaa pminub in stc cmpsb add sub outsb add int add inc sub add gs sbb inc or and sbb add aaa in leave jo dec add xchg lods loope lea pop add sahf xlat mov stos mov inc mov sbb xchg mov sub (bad) mov cmc jo mov insl (bad) mov loop add flds mov cld inc out cmpsb jg setae mov cmp add cltd fs pop inc popa stc rcr pop sbb mov xor test (bad) jmp cmp adc testb repz inc jne sub testl (bad) cmc test pop push js into sahf mov (bad) fsubs jp add inc push out push inc or xorb push push sbb icebp fcompl je mov (bad) test push push and dec int3 fcomps mov clc outsb mov popa mov mov jo pop add rclb add arpl inc add jp cmpsb pop jnp push pop push jle rcl jmp loop add dec stos ret lret test loope jae xchg les icebp cld scas mov mov ja mov repz xor xchg cmp add or sbb cmpsl inc xor pop xlat fs loopne rolb push sub pushl adc mov xor loop loop movlps jne cltd subl das int in repz enter inc out sahf jecxz (bad) clc add pop mov add sub jmp std clc pop inc xor pop xchg dec data16 rcll outsl test xorl xchg int3 mov lock cli fdivrl loopne nop add je sarb and inc jge adc sub add jecxz out (bad) ja push test inc mov rcr add (bad) in or decb push test cwtl and pop push add test sbb xchg imul xor inc push add sbb jnp sub fadds sbb out cwtl pop or rcrl lds sub jp test push subl pop (bad) push addr16 add xor mov addl jb dec call in xor inc xlat inc sub jl dec dec add lret testl nop cli lods add cmp push adc enter outsl and add fnsave jmp lock fwait add cmp insb push add sbb xchg sub pop inc outsl push mov pop in cmovb test addl imul and push pop sub ja cmp sub or inc add mov xchg xchg xor mov adc dec add add push adc lcall insl mov test loopne cld add jae sub hlt mov stos jmp inc shrb stos (bad) sub dec andl mov (bad) rolb enter or push cmpsl xor inc cld addb adc add dec lret push test fs or xor dec adc inc xchg push sub sahf xchg or adc mov add je dec push xor mov lock mov pmaddwd adc sbb stos das (bad) xor loope cmp xor in je lods jno pop repz lret xor leave outsb out adc test mov idiv test nop inc inc sbb add call loope push and jmp dec mov nop (bad) adc jb dec sbb push imul add mov add popa adc mov and or rolb (bad) mov add push cwtl ljmp gs out sbb sarb add and enter push add mov lds push sbb sbb (bad) xor fild pop scas ror xor std in add inc fadd cmpl incb (bad) inc stc and std inc push repnz add cmp sbb add dec sbb sub js pop mov xchg mov jmp sub ficompl popa pop jae out cmpsb pusha sti cmpsl sbb in add mov mov sub pop out push mov cwtl adc xor mov aaa jno in roll add in adcb dec pop and nop xchg cltd nop sar inc cmp cli scas and mov faddl mov inc sub adc xor stos pop std mov (bad) fsts fmull int3 pop clc int sub (bad) icebp dec iret and push in adc daa sti rorl jecxz mov jae ja mov fmull push sbb add nopl addl pop outsb cmc mov cmp xor sbb mov les aaa fcoml mov out cwtl lea xor push stos add (bad) inc imul xchg jae andb sbb out popf or rorb fwait add fs jge xchg (bad) or sbb mov mov mov dec lret and (bad) push inc and cli (bad) xor xor fs sbb nop in add clc mov aas in cmpb sahf or test in add jg adc sbb cmc xorl mov test add jo les push maxps mov mov mov push test sub inc hlt shrl jo js lea mov into inc inc mov (bad) jno jp lahf outsl pop inc jno ja rorb pop clc cmp mov fisubr or cmpsb jp repnz mov xlat subl bound mov mov scas aad xorl data16 mov rorl adc fwait add sahf add mov xchg mov jbe or (bad) stos sub xbegin add mov cmpl pop mov adc adc mov dec mov rcll pop jno enter dec inc dec add hlt inc loopne jno inc mov lahf add sbb icebp out rolb dec mov and in in and cmp int dec inc adc dec mov outsl cmpsl leave int cli adc xchg fisubrl outsl inc and addr16 add inc icebp adc cwtl andb addl sbb lret loopne pop test fcompl lret out dec and mov stos pusha xchg add xchg dec sbb pusha sbbb jnp mov sub or (bad) and inc addb pop stos add dec cmpsl fbstp inc data16 or repz dec repnz xor fiaddl add mov xor cwtl orl test cltd jl sub and ljmp test int bound sqrtps fsubs mov cld mov jae sub ja add lahf push cs dec sbb xor shr gs call or cmp or loopne dec inc pusha cmp sbb pop xor cwtl or add (bad) iret fwait insb sarb sbb dec pusha sub push cld and in inc sbbb dec xor in rcrb push lret adc out js sub sbb int3 dec lods add cld dec xor adc int call mov ret cwtl ljmp sbb loopne push repnz push mov or xorl add insb in xor jecxz jbe mov mov cli add dec fadd inc or sbb ret mov scas adc xor dec add mov adc insb add lahf (bad) (bad) repz push (bad) sarb sbb lock sub shl int3 push and inc or mov lret test mov dec (bad) lods xchg jbe pop inc or xchg mov cmp lock adc add bound mov imul push addr16 andl pop cmpb and repz mov jnp add cmpl popa cmp mov cs scas imul adc xorb daa daa rcrb mov mov nop lret (bad) adc xor adc or mov mov pop stos jbe sub jb mov outsl xchg cmp mov mov inc mov cmp mov (bad) sbb call and lock add testb jp rcl xchg gs sub ss mov jo adc or (bad) icebp cld movsb jl mov pop add xor and ret mov xor movsb or dec in lcall add mov xlat (bad) lock or sbb inc xor arpl add xlat push inc dec or in dec leave adc add push xchg xor fnstcw shrl insb and das (bad) mov in jns pusha sub test nop jl inc shlb adc xor movlps inc cmp les sarl negb push movsb add add rcll xor pop xor mov inc subl imul jo aaa jmp pop mov mov mov and jl lret xor mov push pop push idivb sub push andl adc aad movsl outsb movsb cmp or repnz dec pop push dec (bad) add ss pop loopne mov push and lret pop out mov fcmovu or or cs movsb add or lret or lcall (bad) enter divb add pop cmpb rcrb add push mov adc nop sub dec out mov jbe fsubs mov add jo dec add and rorl mov xor (bad) lret mov xchg and roll sbb push jb xor jb pop int mov in add cmp sti mov (bad) in in xor fstl rolb sbb mov mov ljmp in dec cwtl (bad) pop jge mov lret adc push subb sub fisttpll (bad) dec add fsubrs sbb jb scas xlat ja inc leave inc fsubs (bad) mov (bad) icebp test push push xor out mov or jl daa cmpl and es lahf jmp hlt push jne mov push add xor dec or lret sub xor sbb cwtl aad jae pcmpeqb inc int3 pop test pop rcll inc add inc and mov call adc mov test (bad) mov mov jae xchg sub movsb mov inc addb and mov push lds jae sbb or push test pushf call pop dec adc xlat addr16 cwtl adc js or mov push dec mov loop or adc mov nop inc jl mov or xchg clc xor inc dec inc push es pop cli push int3 cmc sub adc int3 jae dec xchg imul pop aaa ficom sub mov ror xchg test or fnstcw test adc (bad) cltd rolb mov xor cmp in pop sub lret push (bad) adc (bad) xor inc sub scas lea icebp add cli mov cmp test inc faddl (bad) add sbb stos xor enter fnop add (bad) fcmovb pop add pop js push xor push inc cld jl push sbb add mov lock sbb add jl int inc in int3 mov or js in divb jmp call xchg sbb xchg fnstcw and arpl pop mov and xor add loop pop popf mov repz mov addr16 sbb adcl (bad) (bad) negb loopne mov add call (bad) fcompl dec cmp (bad) or sbb arpl movsb add jmp fwait pop adc or jecxz jmp arpl xlat add fiadd adc inc or ljmp lock int push sub inc pop add into cmp pop xor adc or test sbb jmp movq bound mov call sbb add cwtl xor add inc scas rolb popa or fcoms std fdivrl iret (bad) cld xchg and es addl les mov xchg and sbb and push repnz test jmp bound into jp mov pop add mov fnstsw fcomps push push mov xor shll aas lds scas and sub inc add pop (bad) adc mov (bad) (bad) aam les jp in gs shl dec in add push jbe pop mov mov or or sbb into pop and lahf push ret lret xchg jg out lds jns push mov roll pop (bad) shlb fisubl enter add xchg mov inc xchg adc pop pop xor rorb popa push mov pop dec jne ja mov cmpsl mov and jo inc mov imul bound add mov (bad) jbe mov lock push cmpsl mov add cmp add lock add loop sbb sbb sahf mov testl dec pop rcrl shr cmpsl (bad) (bad) xor mov jno in ljmp push push sar (bad) mov or mov cmpsl or xchg sti or out xchg ret push xchg sub mov je adcb mov cwtl add cld or and jb mov pop (bad) mov add je ja mov int test lock cmp movsb add cmpsl pop jge (bad) mov cltd pop stc adc or pop dec test test pop out xor or pushf mov xor pop ss lret imul mov enter arpl fwait add (bad) cmp jb out xchg add icebp push mov repnz mov outsb mov das jg mov xchg int3 cmp jbe sbbb ja and fldl cmpsl dec jg aam pop call lods sahf or mov aas test push repnz nop or cmp or negb ret lcall sub enter add or test cmc mov add or xor mov roll ljmp inc ds mov mov xor jp lods jge rcrb add rolb jne or fildl dec rolb daa sbb pop or les adcl push mov cmp mov inc (bad) lock add (bad) or mov push mov adc mov mov nop (bad) lret adc dec loopne push jecxz lret les sbb scas cmpsl lcall and flds adc inc dec test pop or icebp data16 or push jae xor adc stc arpl jl or ficompl jne cmc inc iret pop add in sbb sahf mov or mov mov repnz mov xor jecxz pop mov lahf shlb nop sbbl or loop pop mov pop add and mov mov call cld mov add xchg (bad) mov add mov add (bad) mov xor fmull sbb jns mov mov pop test inc outsl inc add pop incl and push arpl insb enter xor cwtl add ds or mov add mov je dec add xor repz and addb loop,pn mov push mov sbb and or or nop lods or fwait mov (bad) dec xchg add out cld add and pusha fdivl (bad) dec insl jb clc add inc sbb hlt xchg fidivl inc jmp aad mov sarl dec les adc xor xchg xchg enter jno xorb bound (bad) pop test lret js and daa mov in dec inc push and add jecxz dec pop push sbb mov popl les fisubrl bound fmuls nop or and xchg mov jl add sbb or iret into add mov push mov jbe xor add add push pop or jae mov mov dec xchg mov adc rcrb adc xchg jae inc inc loop loop or les lds ja mov mov es or and xchg adc fiaddl sub and sbb sbb mov nop movsl leave mov add pop ret repnz pushf add sub sub (bad) inc ds inc and mov inc repnz (bad) cs lds jmp push jecxz subb scas imul or enter or mov es movsb rolb (bad) pop test insb rclb cwtl enter cmp flds dec jae sub andl pusha add sub add xchg add add jae cwtl xchg mov adc cld dec or fstpl and bound das push pusha repz xchg (bad) jne cmpsl sub xchg gs mov push rcrb and xchg adcl test xor adc sub xor and fiadd rorb inc and mov push adc ds lret adc or pop mov aaa inc cwtl rolb aam pusha fucomip ljmp pop mov and sbb push andb adc jae cli dec out mov push and mov adc pop adcb xchg test adc clc jb (bad) sub outsl mov dec inc sbb add enter inc mov (bad) std push daa rorb (bad) negl sub shrb cld loop mov mov in adc push sbb addl add lcall cmpsl test xor cltd mov cmpsb or sbb imul in add jg cltd xchg pop enter les ret add repnz and or loope arpl icebp pusha add xor gs aaa cwtl inc dec inc faddl mov out daa ja inc mov insb mov ljmp test ja add repz lret (bad) fldl xor push inc cmc call push push sahf xchg dec xor cmp xchg (bad) xor add push enter not sbb aaa call and cmp sub xchg cmp movsb push movsl out dec mov xorb or jl and cli add add lock in dec outsl push shr sub bound pop pop jmp adc add or aad mov enter cmc adc rcrl iret xchg pop sub (bad) idivb add lahf in lret and rorb out stos add mov (bad) dec xchg dec mov subb adc inc dec loop fstps cltd movsb orl enter je (bad) pushf test mov rorl incl bound adc scas ljmp popf add (bad) fsts cltd fwait or lahf lret mov xor lret call enter movsl mov bswap jnp or inc in add rcll mov into xchg xor dec mov fwait and insl es add movl jl movb es xor jg add adc test sub and fs cmp lahf rorl push or shlb mov lock pop inc mov mov movb rcrb sbb test ja add jl mov push and cmp pop xlat sbb in jns adc sti mov mov sub cmp imul jnp pushf lock cmp repnz enter jmp pop push push test cmc jmp pushf and fcmovnb (bad) xchg into int3 js push iret pop inc inc adc cwtl pop inc enter (bad) in out test push out outsl mov add push cld dec mov push push mov jl loop or pop xchg int add test cs and mov loop add or xor inc adc push cmp add movsb out addr16 (bad) sahf sbb int3 mov pop or dec leave nop cmpb cmpsb jae gs sbb test mov out loop rolb sbb or into xor add rcl sahf out xor rcrl xchg inc pop aaa xchg jo insb das and sbb xchg cld jb or add sub mov sub xchg hlt mov stc mov sbb adc mov inc cmp icebp sbb jne xor sbb push cmp xchg loopne dec inc leave xchg sbb or xor in xor mov push test push scas inc rcl jp test xchg jae loopne mov mov add call push add aad xchg sbb jmp dec dec push cmp test lea sbb and inc sahf mov jne scas inc loop xchg aas test outsb adc adc add fsubs nop js add mov lock cmp lea add inc and iret inc stc sahf add and push or andl push sbb mov and mov inc inc nop loop je pop roll in dec fdivs sbb add test stos int jne leave test fmuls int mov pop cld ret mov xor ror pop pop fnstenv fimul mov pop popf mov push push xchg sbb xchg and lds xchg fs cmc mov mov sub xor add call xchg push pop repnz ret cltd or fidivrl mov wrmsr adc push pop inc cwtl pop inc clc jl mov fwait ret loope and sbb movsb icebp pop je (bad) mov sbb or lods xor test adc lcall hlt push inc stc xchg orl mov xchg andb leave (bad) hlt or pop cmpl push popa cmpsl data16 fmull adc arpl mov jl inc or mov cmp jmp add or andl push dec fnop (bad) lock adc (bad) cld cltd orl lock push mov ds cltd sete add xlat mov hlt rcrl ret aam ret pop in loopne outsl cmp dec add gs xor cmp mov into xchg or push mov sbb fs enter (bad) mov sub add mov pop inc jp or xchg out mov push stos aam lret xchg xchg jmp rcr int3 enter or sub dec test or loope mov fsubrl mov inc in js mov mov enter add mov movsl nop sub movsb ljmp loopne je xchg push dec mov mov nop mov jne mov mov cmp insl aas add lcall xor sbb pop or pop sar sahf adc test fldt fiaddl hlt shlb add or push and imul xchg sub add mov and inc outsb enter aad add xchg inc data16 add lock pop jae add xchg loope les (bad) xor xor pop mov sbb out outsb subb push pop mov insb xchg mov push iret add sbb aam movb jae sbb mov mov lock in (bad) es je aam mov push lds push les clc inc xchg not mull xchg mov in (bad) mov pop js lds push adc lock sbb notl loopne jne test lea ljmp loope xchg in mov into adc pop add or pushf test cmp sbb fs clc mov js pop test sbb rcll sbb mov ja call in add insl push mov in mov add adc scas (bad) pop fildl nop lods in push test addr16 push push add daa loop jl jbe pop es add push lods add sbb ficomp or jo das lods sub enter jecxz scas lock nop push mov cmpl xor rorb fiadd add jl adc dec add mov cmp sub subl fiadd cmpsl cmp add repnz cld mov add mov dec add (bad) pop add cmp add cwtl movsb stos or sbb jmp fiaddl dec mov xor daa and sub xchg lret push jp pop aaa mov inc aas arpl fcoml pinsrw push cmp inc xchg cmp add dec repz clc pop enter ret jno xchg add mov js ficompl pusha lret out add jns repz xlat pusha ret push pop insl mov inc adc mov mov (bad) sbb lock add xor pop ss jmp cmovl pop sub lcall sub cld push (bad) loop jl cmc js dec sbb push (bad) xor loopne mov dec sub push dec mov fs mul syscall and stc xchg aam test leave out cmp add nop xchg mov icebp sti mov pop pop fdiv in daa mov iret sub push mov dec push and ror sbb loop ljmp jl (bad) pop pop xor les in inc add xchg add and xchg sbb ljmp enter call add mov popa scas push iret adc adc and xchg lcall inc pop push xchg out dec lret and movsl addb xchg (bad) repnz roll adc add xor add xchg out in push stos pop push inc (bad) outsl mov or push xchg jecxz insb in aam or out mulb sub daa stos lret ljmp sbb lds (bad) je inc int3 sub xor scas lock xorl jmp mov out add mov jecxz jno pop jl sub lods divl (bad) popf dec jo sub mov add fcmovnu adc add sbb adc ds add insb dec add scas test cwtl adc pop ror xor loop test push xchg idivb or dec mov arpl adc jb sub add xor lock pop or fucomp enter les inc outsb (bad) mov movsb mov add lods mulb addb xor hlt and and sub jbe add inc dec in push mov sub clc js icebp adc hlt xor xor pop sbb test and jg rol pop fsubrl jb enter add scas insb stc lods add push jmp add dec subb cwtl test add or adc dec roll jo insl mov les (bad) add sub add sbb dec pop js jbe nop mov popf sub cmp cmp das stos jecxz rcrl mov std loope cwtl inc or je mov cli push daa mov shlb adc cmp jns rcrb xor sahf adc adc js subl ret insb inc test mov insb lea imul cli mov lods and mov jae cmp and les pop nop push jo mov int3 gs rcr enter adc test and jo inc and lock arpl xchg aad add pop shl sub inc inc pop sub push mov test adc jle rcr clc inc mov das sub clc rolb cld cmpb xchg jb xchg mov ds fdivl cmpsl xor mov jbe or cmp mov push shrl test cmp pushf subb rorl xchg xor jle pusha js pop test lock fidivrl popf sub add fcoml test mov std aad push inc out les mov add mov pushf dec enter punpcklwd ror repnz dec fiadd call jno and add inc stc lret adc inc add xor not mov add or sbb sahf add inc scas add xor pop jnp xor sbb jno insb hlt repnz mov xor xor mov adc pop add push nop call sti jno add rorb lock mov push add nop sub rol sub js fstpl push add xor imul pusha xchg push test sti aas mov mov les mov pcmpeqd test pop (bad) sub mov lcall enter cmp dec cld adc fwait xor and mov std scas les push add es pop mov pusha add shlb pop pop sbb popf dec icebp sub cli sbbb pop push xor lahf (bad) lcall lods jmp mov dec pop or dec clc jmp std pusha fist add shrl fdivs jg jns in scas dec int3 pop push cmp rolb ds sbb dec jno or mov jnp lret pop add mov divl or fdivrl mov cmp pcmpgtd and add out addl mov mov sarb adc and add sbb mov aad test in xor jb pop add mov fs test inc pop mov sbb push fdivrl lock mov xchg in lahf (bad) add xor mov add add icebp add mov sub cld jb mov movsl addr16 (bad) mov adc mov lods sub loopne dec fisub cmp loopne dec js ret imul and sbb das adc mov pop sbb in lods or add mov sub add or cli xchg and jo mov cli in mov loop xor fidivl lret or xchg mov jno aam jbe ficom mov loop xchg inc or sub nop (bad) or (bad) icebp inc pop jo stc cmc out pop js mov jae mov ss adc inc enter add mov cmc loop sbbb add dec pop pop cmpsl add push popa or (bad) jbe hlt in push add sbb adc test mov jl or enter and pop outsl fildl arpl aas jg shll popa cwtl cmp movsb xchg mov sub test pop push jae sub orb inc lods fs sub decl add in inc mov inc push (bad) imul and push dec or add mov mov jg arpl sub adc mov addb ja cmp mov cmp leave loop pop mov sbb push adc stc or push and cmpsb cmp scas mov fwait mov xlat push push dec sub jb fstpt xchg inc scas jecxz add lfs pop aas mov mov add push clc int3 shrb test or mov pop cmp lods clc add mov jl dec test and aas and xor cmp push and adc andb addr16 pushf pop jnp aas inc scas in out add dec or xor add cltd ja add adc test getsec lods je add daa xchg jmp out dec popa loop xlat psraw outsb aas sub pop cld dec jge jb (bad) pop ret pop adc add mov imul or (bad) loopne andl push or (bad) test inc dec dec arpl outsl push xor neg test sub push sbb imul ss mull sbb leave data16 dec pop mov jno loope cmc mov mov dec dec clc (bad) mov xchg push push add es les lcall pop lods or inc adc xchg pop cwtl cld dec and and jnp xchg push or adc cmp add adc xchg mov fild mov arpl push out nop add xchg mov add mul nop pop add mov shr mov sbb add mov mov sahf mul inc cmc and pop mov sbb shlb fldt push pop mov cmpsb popa loopne push mov fs or popf enter gs inc dec jns mov test int3 inc cmc push sti bound mov adcl imul or lret adc cltd ja cmp cmc pop inc or push insb ljmp call xchg in xchg (bad) pop add adc mov nop mov cmc subl loope in testb mov aas mov test mov cmpsb and cmpsl inc cmp xchg sub sub mov rorb xlat dec inc xor pop push add roll rcl and orb pop or pop jl or inc mov jp jmp or pop and pop cmp mov jne adc fisttpll add add pop fs je xor aas mov sbb jl xor pop loope sub adc sahf and sbb and add out enter mov cwtl cmc (bad) mov inc rcl sbb fcomps loope pop xchg test sbb jl adc cmpb fwait sbb stc or pop icebp and adc mov xlat push inc dec add aaa std into add jmp in sub xchg test lahf lcall mov (bad) xchg enter (bad) inc push inc scas hlt sbbb test lock dec and lret dec repnz dec mov add push sbb loop add les sbb insb dec or mov pop test and or push es aad inc dec push pop cmpsl or xor mov sub xor popa out push call sub dec sti fcmovnbe test and pop test cli mov jge dec imul mov adc or std int3 push mov push pop (bad) or add sbb pop out add call mov int3 pop repnz or xchg pusha mov add xchg xchg mov sar bound pushf xchg subb std es xchg cmp adc call insb adc add fwait scas fs add cmp cmp cmpsl and adc cmpsb adc cli xor test pop divl movsb aaa icebp clc popf addl sarb or mov cmp insl mov sub lds repz add popa inc xor sbb out dec dec or rclb roll mov mov adc xchg mov ret add mov push adc add mov cmpb stc dec mov lret sub loopne cmp outsl shll add add dec lods insb inc in fs mov or (bad) mov push jle or mov out lods dec xchg test fidiv and lcall or inc adc les rcrb sub mov dec psubusb mov ds out sbb push rcrb dec fptan cmp cmc sbb or jecxz xchg fs out sub add dec in and jbe sbb adc inc cmp stos mov and xchg push mov fstp jl cmp cwtl dec or or and dec sbb adc add dec add xor push out mov or mov clc and ss les stc xor lods adc add fistpl inc sbb pop nop int3 add push rclb mov xchg jg add call dec scas add push adc (bad) mov pusha and ror out jns jl fs add test scas loope push jno bound sbb call cli push dec mov add orb addr16 add cmp (bad) jbe mov mov jnp aaa pushf add push out mov inc iret cmp fs adc shld stc add lock gs or (bad) mov push cli mov push adc out cmp jle addr16 add add mov stos add or lods movsb outsl and xorl aas and mov xor sahf jns out out (bad) mov push add aas mov sbb test orb mov inc or lock std inc bound adc pop (bad) xor shl scas sti add xchg xchg push push push add xor pop and ficom inc orb add jne (bad) or jns add cmpsl mov cld ja push mov xlat pop lret cld pop cmpsl add add or mov fs add shrl call jmp inc into test lods je cmp sbb aaa hlt mov sahf pop (bad) jbe pop addl add adc sub out pusha (bad) dec or aas xchg std push (bad) mov js mov and sahf out out in sub (bad) mov jge and (bad) fcmovbe sbb shll (bad) aam dec add movsl mov cltd pop leave inc enter and and pop sub cmp (bad) cmp js add pop cmpsl sbb fsubs adc xor lds out dec dec mov repz xchg mov mov pop mov mov outsb dec cmp arpl and mov jp fidiv in js movb push or nop sbb push jo bound and sbb ret lds movsl or arpl sub loopne gs add or mov (bad) cmpsb imul jecxz in call mov pop lods inc xor sbb mov ds pop sbb cmp orl cmp adc fs add sbb dec cmp add pop sub ret and flds test cmpb cltd pop add das cmp and enter xor push (bad) mov adc enter call jns test cld movsb rorb test push mov ljmp push adc pusha inc pusha jae add sub add clc and jbe mov cmp adc or sub cmp pop sbb ret push mov fstpt fdivr mov sub out add pop push lods outsl pusha or pusha lea xor dec sub ljmp popa test xchg aam dec xor fisubl jns add jbe push (bad) outsb mov les clc js adc call cmp add pop jo adc jne je sahf shlb adc and mov mov scas add icebp adc pop shlb mov mov push fisubrl add scas std movsb inc or fs in outsb push add lret mov repz pop add stos mov in dec pop xlat xchg pop and or aad pop sbb jns jb (bad) rcrb adc mov sub hlt cmp inc add pushf out out mov pusha inc data16 outsb or mov cmp add daa rolb insb xlat inc inc fimull mov add jge icebp adc mov in rolb jns push sub in cs inc inc stos (bad) cld and or xor repz dec popf and ret jb inc es lea mov mov test lahf and add jecxz mov xor daa (bad) add cmp lret jp add (bad) fs fwait enter movsb mov pop sbb add or inc int3 sub clc enter jmp iret add popf mov pop jp std and popa repnz sub out (bad) adc push pushf jo icebp or jg mov enter rorb mov fisttpll adc hlt adc mov shlb test js bound dec lods add add cmp fcoms test add lock xlat push sub (bad) mov roll push xchg jnp pop (bad) push loopne push dec or add imul pusha test fptan mov adc pop mov jmp rol pop out loop or xchg mull gs inc pop pop mov pop pop and cmpsb pop cld sbb cmp mov or mov rorb mov inc clc add sti mov int dec daa aas lahf and int3 add push dec pushf add xor push pop ljmp fs mov js sbbb inc adc cmp es aad xchg mov inc adc sub mov pop jg or pop and adc pop mov pusha push adc loopne call or sbb out xchg mov imul mov fcomip jbe mov add jns shl repnz mov addb int3 xor add jl jno sbb aam mov xchg push push jl jp add jno jge add repnz int adc xchg and bndldx (bad) mov dec pop sub scas or push dec or mov cld mov cmp jg dec dec je jp xchg addb dec fs add sbb pop and (bad) push adc inc push pop inc fwait mov lock mov and adc stos sbb adc jbe test add pop nop rcrb adc push arpl add divl add inc adc mulb add sbb inc mov fild sbb jl cmc xchg stos popf cmp scas sbb orl add aaa add mov testb lock sahf ss sbbb imul ljmp (bad) cmp (bad) shlb adc adc sti inc adc movsb jnp sbb je or mov add arpl popf and loop add outsb sbb les ret push clc rorl in dec add call inc (bad) add cmp dec mov adc rolb mov and xchg (bad) aaa jmp sti pusha addr16 inc shrl xchg int3 xchg cwtl movsb sub sub enter mov mov ret in nopl rolb rclb push push js jl mov add xor cmpsb mov sub dec out add ret sbb xchg or inc sar fucomip add jp stos das xlat xor cltd dec (bad) or fdivrs pop mov add leave shr pop xchg adc movsl psubusb cwtl mov nop inc nop cmp in daa mov test and in or pop loopne shrb cmp (bad) lret push xchg add inc or ret xchg sub and movsb push ficoml jae (bad) fcmovnu rolb mov popa adc cltd sub jp hlt dec or loop mov cli and clc adc jno add jo push push dec cmp xor push dec out sub cmp rcrb xor push xchg add fimull jecxz pop and dec adc push test inc bnd adc enter pop aad fs std icebp and fwait adc arpl mov mov nop cmp jae (bad) addr16 jno mov push dec stos data16 in ds pop sub and sbb aam mov xchg aam or test pop enter adc pop addr16 mov into aaa mov enter (bad) xlat jmp add popa pop inc or cmc sti lcall fsubr adc leave mov jb and (bad) shlb ficoml xor mov std push pop pop mov rorl jbe dec push in or add jl mov jle mov pop js dec dec pushf rcl cmp xchg push pop rclb add sarb aas (bad) push mov dec dec mov xor xor addr16 xchg and (bad) in add adc movsb xchg sub loope mov jo aaa inc add lahf movsl loopne sub repnz cwtl adc add jb loopne daa xchg jne out cmp imul jns xchg out jbe mov mov movsl push sbb arpl lret les test test ret sahf pusha fdivrl lret push mov pop pop jl pushf loope (bad) int3 add movsb or js add bound push ja jle or adc shll dec cwtl nopl inc inc loopne or inc and dec hlt mov dec and push xchg lock lcall pop adc xchg add mov outsl xchg add cmp popf xlat pop and sub pop gs mov mov mov (bad) cmp and jle add sti test stos je shrb add mov push mov xor xchg sbb (bad) mov push add jmp mov pop leave fs out outsl mov jg mov add dec stos mov pop mov lcall cmp xor das mov or add shll cmp pop data16 sub lahf pop dec cmp adc dec fimull test or leave (bad) xlat push sbb or loopne,pt add and xchg adc fimull lret cmpl incl les int3 cmp mov mov out mov sub and push push jmp fstpt add mov ds test or mov add lods push int3 add sbb add jle jmp test call addl test mov sti clc xchg xor cmp add mov xor xor call xlat pop dec mov or data16 dec rsqrtps xchg mov cwtl (bad) addr16 insb jbe push add or push inc add dec cmc jl shl (bad) lock pop inc outsl ret and outsb mov enter jo inc int mov data16 test pusha mov add sbb (bad) lcall jo mov mov (bad) dec dec and dec in add inc mov push fs adc jp (bad) push mov jb dec push mov sbbl fisubl and popf nop icebp mov (bad) xchg pop movl push add jl out repz push add cltd push pop pop mov js test mov leave sub sbb add imul cmp inc xor cmp sub xor inc dec pop scas and push test cmp addr16 lahf cwtl push sub ds add insl mov pop movl pop mov outsb dec orb pop xchg sbb add cmp inc jnp pop jo andl addl mov pop adc add mov add in and sub mov pushf push dec adc and in xchg and sbb repnz cwtl rcrb jbe out fsubrl xlat adc lahf ljmp jnp jle cmp mov imul (bad) jbe cmpsl or popa sub cld (bad) (bad) cli lahf jg es out lock fidivl push add std and mov mov mov mov pop out add or in adc mov ficompl cmp sbb outsw test xor push adc xor or in sar add dec es cwtl mov jmp push mov dec add add cld lods and jl aas ja add pcmpgtb add mov add push (bad) icebp inc js lahf add in xor pop sub cmp int jmp ret gs (bad) sub xor addb inc js ffree pop sti add arpl fs fdivs rorl aas call cmp std rep mov (bad) xorl cs dec int3 xchg and outsl shrl cmp mov push add adc imul mov into cmc mov mov push insb stc in nop add sbb (bad) dec enter in pop push lret fdivr jae jbe mov ret int mov nop call enter es test sub inc dec add inc mov leave inc cmp aam andb add adc push pop mov pop sub bound les push push fcomps out jg add nop in inc test add je sarl cmp ret xchg outsb pop lds popa nop stos sub adc and xchg xor gs xlat mov xchg testl sub aas xchg dec dec mov std pusha lret jmp adc into adc inc cmp push dec lods enter pop sub push sub mov xchg rclb mov sub mov jae cmp stos xorl add push call jmp test add enter xchg inc add sbb xchg lahf push add push loop inc jl and (bad) push mov mov pop pop jle mov nop pop add insb jg jnp dec test ror lods sbbl lret popf mov adc je inc lods and push mov mov sbb mov add add xor xchg dec fildl pop xchg sub mov outsb mov mul das js outsl (bad) (bad) mov loopne adc inc mov dec pop aam xor pusha mov push mov sub xchg cmp pusha paddb jl cmp imul repz adc fwait inc pusha adc jmp enter add das add nop xor pop mov lret mov or xor add pusha jns sub sbb cmc jecxz jp sub push mov sbb lahf add bound jmp std addb jo add pop mov roll and add enter cmp rorb mov gs and inc hlt jbe inc fs ljmp addb scas push or adc cmpsb xchg pop mov dec sbb pop adc and in adc scas xchg push adc fdivl lcall nop add and mov xor stos leave cmp shrl mov test bound and inc test add jg sbb int3 pop dec sub ja lock jp gs dec shll in pop int pop cmpl lret lods rcrl push xor in add inc rcll add pop jecxz rcrb and popa push test mov jg sub lahf (bad) sbb push fwait push scas int3 ja fsubp dec test aas inc cs sbb test mov pop jbe or mov ljmp int3 lock add xlat ret lock mov fcoml or icebp mov ljmp mov push mov cmp sub jno ret add mov sahf cmc xor or and inc cmp add into push push pusha mov push in arpl or mov aaa dec call mov sbb lea popa or mov (bad) and or notl insl jmp cltd rcll andb xchg and pop lock in inc or xchg stos shrl pop mov adc popa sbb mov mov shl jl shlb fimull jl addl mov sub sti adc loopne add fdivrl scas push pop aam or dec add xorl push pop and and xchg and xchg rcrl and pop sub cmp imul (bad) hlt jecxz cmp cs in int3 movsb cwtl sbb inc push xorb jecxz jg push mov (bad) jne loopne mov sti pop lods adc add stc ss or mov imul insl aas inc cmpl fs and leave repz and rclb mov lods fsubs xchg dec add sub dec push addl or mov and and dec rcrl adc and repnz pusha jns add lret xchg stc outsl icebp dec or sar je xchg adc jbe scas add inc cmp xchg aad xor pusha adc inc in fnstenv mov imul (bad) cmpsb ja push test xor les pop test add int3 gs mov loopne sbb pusha add nop adc mov adc jb adc mov mov pop scas mov outsb sarb mov jmp dec pop sbb add inc jae xor imul mov hlt dec adcb add mov out inc insl and add cltd sub add mov pop dec ljmp mov adc dec or and add loop sub adc call xor cmp mov enter ficomp mov jl cmp jmp test add inc adc dec add leave pop adc and cld and or adc jb out inc jl (bad) mov push call push int add in popa adc mov repz xchg fsubs gs fildl mov or or gs add fbld ljmp in scas sub pusha adc xchg and and sti nop push rcll daa orb pop cmc (bad) out inc add stc loop xchg loop add mov sbb mov or fldenv aam mov mov mov inc mov jbe push aas cmp pop test addr16 add mov push ljmp rcr lret push xor loope das or add inc jl add xchg xor nop inc popf inc sub std (bad) stc inc clc scas cmpsl aas and popf add (bad) and cltd mov fdivr or repnz pop addr16 (bad) enter loopne aad lock push cmpsb andb das call or mov and xchg hlt dec fnstcw mov or inc cmp lahf fldl jle adc lods test int3 dec add add call ret movsb push daa hlt lcall lock cmp push inc lods jo add jno and daa pop push cmp xor das add add pop adc fsubs lret daa push cwtl das in add insl add hlt jae push loop int ja enter mov lods and mov inc mov into add dec popf mov js inc xchg clc sub clc jg (bad) fptan out fwait pop test cmpsl add mov push enter xor jge inc or in push inc pop and jl insb mov inc adc jb add lret jo dec out dec xor sbb cmc add inc lods jno xor xor pop and or inc es icebp scas xchg push lcall adc mov xchg movsb inc mov inc enter lcall daa js jae cwtl or add aad cltd xchg sub xchg js xor shll inc out mov sbb mov aam pop push (bad) mov xlat dec xchg sbb dec je into ss idivb and repnz es add lds adc mov xchg mov cmp lcall mov js pop scas push rcrb hlt sbb cmp test cmpl jmp cmpb ljmp rcrb inc mov jb sub out inc add aam aaa pop cld jp andb mov push fs adc insl sbb les xor popl or xor adc cmp stos or cmp jb stos nop and popl aad xchg cmpsl lds mov xchg nop or cwtl add (bad) daa (bad) jge je rorl push gs mov push mov and gs and pop push jb push inc orl bound ja incl out in out add mov popa push insb lds in ret shrb mov pop inc inc test mov inc movl add sub je jb add mov in cmp sahf sub les std movsl dec mov sbb mov test adcb add push call pop imul cmc add dec ficompl cld xchg (bad) pop js nop add add fsubr dec push sbb mov add add shlb adc jbe loopne sbb call push decb rclb nop and dec add (bad) mov mov add push jns aas mov sbb test mov sub or lods mov and int3 add or (bad) jb insb sub call enter inc in or repnz mov mov sub push xchg mov aaa mov lea or or loopne notb (bad) jno ret xor push mov push push clc inc loopne lahf adc pusha stos leave fs idiv add cltd xor mov inc or dec addl enter rclb mov (bad) xor add or outsb mov popa cmpsb and mov stos and jecxz inc jg stc pop jo lret sub (bad) aam lock cmpsb push add jg pop jmp inc cmpsb and pop fwait enter or sub loop mov das fisttpl je in xchg pushf sub or cld fldenv pop sub aad xor addl test stc mov add fwait notl and inc fucom test outsl mov lds xchg mov and mov sbb fidivr mov cs and pop push adc cmpsl xchg aad ljmp and cmp add (bad) sub add mov xchg dec scas mov repnz shll sbb loopne xchg xchg sbb xor adc add xchg cmp sub insb and and notl and cltd sahf sbb xlat loop jg enter fwait insb mov lret dec and scas sbb dec test je sbb or and mov enter adc mov adc rcll in sub ja mov cmp std cmp leave jo adc mov jno mov mov into mov cmp mov dec push dec sub or clc mov cmp pop daa test add inc in loop es or cmp pop and into or sub test aad leave cld xor mov mov add mov cmp int3 pop out mov adc leave loopne scas xchg pushf add and imul xchg adc cmp repz sbb jmp lcall jne jl sti ret test add divl insl mov mov lea mov fs ret out mov pushf adc dec loop pop mov xor or jl adc jbe adc push add addr16 adc addr16 adc aas call xchg cltd lods pop xchg inc cld stos pop shlb and int3 cmpb outsl sbb push mov add repnz test dec and mov or or adc add rol adc addr16 sar adc stc insb ret mov sub cs int jns sar and dec loopne fisttpll mov mov jae lahf add out mov sub aas incl and mov addr16 sub fildll lock mov test add adc push dec or div imul xchg xchg add jbe inc sti pushf and adc or push out test xchg add or push hlt xchg ret or mov cltd dec dec or push enter sbb (bad) mov sub sbb in pop jle and xchg icebp or inc jne and cmp idivb adc adc adc sub add mov cmpsl push jns inc mov and stos aad push mov das mov mov adc and aam nop xchg nop lods inc push push add push lods xchg daa add jl adc cmp (bad) mov fistpl sbb pop jecxz dec add dec (bad) notb xor push mov or cmp and sub and inc jge and add push cld mov aaa sti sarb aas mov xchg add xlat lret aam xchg sub inc pop add or adc and mov or jns nop cmp jge push xchg loop (bad) mov (bad) loopne lds jae push adc loope xchg xlat rcl add stos (bad) add das addl loopne cltd notl or mov fwait test adc adc pop test sub mov dec jg inc aam cld test enter outsb cmpsb add cs gs ds pop pop out mov xchg add pop popa inc fdivr faddl cmp xchg lret leave cmpsl pushf loop xor out sub sub mov setne lea push xchg mov cmp enter mov rcrb dec test xchg sbb xchg push shlb aas je pop dec (bad) mov movsb jae jle test adc mov sub mov mov mov cmpsb gs test inc mov xchg mov adcb out das pop rcll cmp movsb sbb add std dec add adc dec adc adc dec bound push adc lea cmc js pushf ja out cmp js dec in mov pop xor loop adc xorl and (bad) push pop call pop ss mov xor and mov push daa into faddl lods jns fwait mov nop mov jne xchg es cmp adc inc push test sub add push sti mov outsl mov lret pop push out pop sub mov dec sub cmp test dec xchg fs add add (bad) jnp dec loop nop push std stos pop sub loop rcl call mov add jnp in pop rcrb je mov push stos out mov xchg nop jne mov mov mov adc repnz mov pop xorb pusha or and push das push pop dec loopne sub cs adc leave cmp or inc dec jecxz and cmp inc das xchg js mov xor inc ret mov pop xchg add adc xchg faddl aam call add inc add stos sub dec lret jns add adc dec scas test add or daa fldl aas xorl enter or test repnz add hlt cmp add outsb cwtl (bad) xchg iret xor jge add stos pop inc dec mov outsl sub cmp xchg add xchg add mov adc dec sub add cli cmpsb aaa inc outsl mov mov rcrb and imulb xchg fbld push add (bad) movsl inc sbb dec les mov cmpsl mov add clc in add sub (bad) repnz sahf stc pushf (bad) mov subl outsb pop lahf clc stos add loop mov or mov and add adcb rorb sub addb ret movl test xor pop cld rol fdivrl mov pop loope push or add lret jecxz mov mov add add pop lods addr16 mov pop test pop pop sbb xchg jle ret daa pop mov mov pop and fiaddl pop adc pop int3 push cmp adc sahf push push (bad) dec add mov pushf pop sbb adc add imul test and cld or lock mov pop fs pop rorb fldl gs sbb imul dec adc push sub fwait aam (bad) xor lahf mov add icebp adc xor roll cwtl and leave mov jp mov inc xchg movsb js mov jbe sbb lods mov (bad) ja adc add mov add dec push test or pop jmp add push pop and lcall inc inc push outsl cmp mov lods cmp and loop enter jae,pt jp jle and cld add stc hlt and add xor scas push (bad) pop test enter add mov test lret str lock mov mov notl mov std or clc test scas sbb xlat and les add pushf test sbb adc icebp imull add sub add inc in cmp or loop insb add mov and outsb int3 in lods add pop mov cmp mov mov je mov nop negb in cltd dec icebp cwtl (bad) add pop xor aad adc sbb fwait aas shrb shlb or bound or loopne arpl aas push pop call adc testb loopne jnp add xchg jl push (bad) push je jbe divl dec mov mov add pop gs icebp sub leave pop mov das inc and mov inc in and add dec loop mov sub push inc (bad) (bad) lock dec xor std cmp sub (bad) sub mov fcompl jecxz mov xor sbb inc dec or xor adc push ret call test sbb nop ret mov in mov jne fwait ret (bad) pop push dec cmp adc test inc add in decl xor shll data16 jbe fs aas ret loopne pop inc mov add (bad) out pop xchg push pusha insl cmp sub lock int3 add jl gs das add repz xor fcmovu cmp and or xchg xor cmpsl leave stos je nop mov out add dec scas rorl push push fs xchg push loope (bad) lahf mov outsb cwtl negb mov rolb cmp cmp inc mov (bad) icebp (bad) mov cmp orb add jno pusha (bad) xchg lock test fisubrl (bad) lock rorb pusha xchg or pop std sbb sub mov loop jg add sti inc hlt mov mov and and sbb sub lea test scas xor jmp dec loope and mov adc push adc dec (bad) cmp sbb fiadd aaa iret dec jmp jge pop aad sti push dec jne xchg pop flds ds movsb test hlt adc sub jmp incl dec cli rcr pop loope jb enter jmp jg scas add aaa adc outsl jmp repnz (bad) iret ffree leave push cmp sub jmp mov mov xchg mov std (bad) pusha xchg sti rorb or ret leave je imul mov xor adc jne enter rorb addl sbbb and xchg pop inc mov sbb in jecxz lock or add xlat sbb or push mov repz ljmp ror cli push pusha hlt and std mov insb mov adc mov or and cmpsb clc add in movsl faddl cltd lcall jge add hlt aaa jae stos cmpsl inc sub jbe mov nop jl sbbb in je jge add (bad) test imul cmp add push pop sbb inc add xchg enter add outsl ljmp js mov dec test es and mov and jl xorb dec mov mov rcr shlb imul push adc xchg ret jae test and xlat rep lcall push dec lret (bad) fidivl loope jns incb fisubr xchg shrl fisubl in inc lahf fs test sub loopne repnz add inc (bad) jae int3 push pusha inc cli je inc dec out dec cs and add roll jnp ret adc in mov addl jnp and out (bad) jbe adc mov xor jmp and or push lcall cmpsl fwait mov jnp adc test push jp inc jno enter adcl outsl lock fcomi cmp in sbb data16 xchg pusha push popa sub add xor pop into lds push fildl jl cmp sarb sbb scas ljmp or adc cmp imul adcl in roll sub clc ffree out mov adc loop adc jmp adc mov or push dec aam mov add sbb jecxz (bad) jle sub dec ja mov inc fwait cwtl lcall push popf scas xor adc pop add cs faddl and add or mov push sub lret cmp (bad) jecxz in and icebp pop in and in mov in loopne xchg mov or add ret mov adc dec enter fiaddl lret lock inc jecxz dec sub add iret inc or mov je loopne jno dec ret cmp orb cwtl xchg add hlt mov dec or push lods lods int3 lock je pop test loope in cmpb ja adc sbb xchg fwait lcall loopne jns repnz xchg lods xchg or outsb mov adc fmuls hlt cmp pop sbbb jns (bad) push outsb std (bad) jnp jno aas mov sbb mov add es dec add mov add mov movsl dec add mov mov sbb arpl (bad) cmc das test movsb scas add dec sub xor xor inc faddl or push insb mov sbb ror mov jl pop jmp insl cmp (bad) mov loopne mov pop add add (bad) std (bad) push pusha inc jb loop add sbb insb xor repz cmp out test or xchg out cs jne xchg fisttp fiadd (bad) scas nop dec cwtl icebp sbb mov inc add les iret push roll jle aas (bad) mov das (bad) sbb test bound and and pop inc or jl xor (bad) roll pop add and pop in pop push pop mov xchg pop les flds xlat cld jl add cmp xchg shr into pop pop xchg mov add mov (bad) in xor sar jnp stos jb gs (bad) cwtl pop sub push orb (bad) leave push sub xchg mov mov loopne rcr mov call out lods mov add xchg dec scas clc pop nop in add mov faddl ss pop mov add sub adc pop jp sbb dec in jg stc sub call mov lds lcall jmp test cld xor pushl sub fmul insl mov dec loopne pop push or inc test push jno push fwait loopne (bad) pushf jmp add out cmp cmp xchg sub lret jno insb mov adc xchg cmpl out inc add push or pop add rorb (bad) cmp pop lods inc fs ljmp adc inc (bad) sub adc nop jne hlt and fldt jp test test and loope mov lock stos (bad) push cmpsl xchg dec mov or test sti inc push cld nop push cmpb jnp arpl lods cmp add out xor mov flds lcall jae or dec sbb xchg inc xor call out stc xor add test cmp lret shr lea icebp (bad) cld cmpsl and inc in xor push loope xor imul movsl fcoms inc mov (bad) jae add mov pop push cmp mov fbstp adc add mov ljmp dec fs ljmp lcall ds add clc and adc incl adc jnp outsb pop cwtl adc loop push (bad) jo mov mov fcoml pop outsb sbb push loopne mov mov cmpsl jg adcl fmuls mov fdivrl lods sbb in jmp jmp fistpll insb lea dec dec add lcall movsb std jne loopne adc iret sbb inc or mov mov rcll sub push scas iret adc add fstps cli sub ret adc fsub aam dec test add nop add mov xchg scas (bad) (bad) or mov mov andb ret jmp pop (bad) in mov rorb or insl mov loopne data16 and faddl (bad) add jnp xchg dec dec ret inc pushf and fisubl jl ror sub inc mov sbb test jo and sbb mov sbb (bad) adc ret add popf fldpi in mov dec ret clc mov repz inc push or pop sbb cmc or mov xchg fadd enter or sub jb jno insb enter insb ret cmp add fisubr out fidivl mov mulps add in sbb loop xor mov int3 dec rcrl cmp jnp (bad) les inc jo cmp cmpsl cmp mov mov mov movsl es dec xchg sbbb jb xor scas jecxz push mov mov fidivrl inc pop jo sarb adc xchg call jmp int3 or (bad) rolb add (bad) jp nop movsb or fs insb inc cmp (bad) inc adc dec add imul xchg std js pushf and call inc lods lock jmp and jmp adc adc pop and xchg aam sar add pop jge into in adc pop jo add ss mov push ret les push rorl mov scas loopne push sbb push or and inc out andl mov xor out dec mov movsb adc push xchg sbb js test and add dec push add add dec mov dec ret sub mov mov sbb cmp push sbb imul fcomi sarb cli lods loop add jg pop xchg js pop scas test cltd jne insl (bad) mov xor xor jmp fcoms rolb or pop sti mov sub fimull dec sub lods lea inc cmp or (bad) fisubl or mov sahf rclb lret int3 jl (bad) xor in inc sti jnp and mov arpl and idiv sbb add mov jae movsb jecxz jns and in cld cmp inc mov fcomps inc push lea xchg (bad) xchg sbb dec ret sub movsb sub fdivs pop inc cs daa ficom (bad) aaa ss add dec jno jp and xor adc mov jmp push push mov adcb int or adc dec xor push inc loope adc roll add sub mov push adc loope dec inc cwtl sub xchg push sub mov jecxz sbb into add mov pop adc pushf adc and dec insb ret and ss scas stos das fcom add push jecxz sbb push inc sub aaa nop mov in popl pushaw adc jnp fs out mov xchg in fwait test outsb dec jmp inc pushf inc scas pusha js cmp push (bad) out cmc add or pop loop pusha in cmp or decl call int add push cld dec (bad) jle pop cltd and cmpsl ss xchg nop fdivs and lret stos fsubr cli inc mov adc mov mov sbb xchg push popa xor add fnop inc add iret push idivl adc pop fs fmull lahf sub xchg push add pop xor or sub jle push cwtl (bad) mov outsb adc or adc mov addr16 xor orb jae push lret adc ret loope les inc (bad) pop sbb push int xor les or add inc orl out stos xor dec sub les ret mov repnz sbb in add clc loopne add push cmp loopne adc push stos mov subb in xchg mov cmpsl out scas push mov fmull adc (bad) dec mov in popa das xor sbb inc stos jp nop sub mov mov ret jl mov xchg sbb mov les lds sbb lcall das inc lods cld sub add aam dec jno aas jmp mov or scas and mov clc outsl pop fnsave inc and sub mov test dec push push fdivrs call push mul clc fstps (bad) adc (bad) icebp pop or jp sbb (bad) dec cltd jge mov leave mov cs test jnp mov adc jg aad dec dec pop lods imul jecxz or ret insb les add loop repnz imul sbb inc or mov sbb and adc or test adcb sub add jne test cltd dec xor or sub enter sbb xor std or fsubs popa movsl xor jo jl mov jle cmp jnp sbb cmpsb inc nop push sbb or xor jae mov dec xchg pop xor dec lahf pop icebp and lret (bad) push scas jne hlt (bad) pop pop insb adcb cmpsl in push mov setb stos sbb jmp out xor add mov in je add (bad) xor test mov pop xor adc stos sbb cmp cld lea pusha mov sar cmp xchg nop add sbb dec insb cmp jae bt (bad) int add out xchg ret inc pop in add js lds nop mov pop add mov mov sub outsl mov js dec mov mov insb mov (bad) add mov (bad) lock sub sti nop mov xchg xchg or repnz (bad) je movsb mov dec xchg and add shrl push loope fwait cmp pop cltd push pop pusha mov add xchg push cltd test fcomp jns scas in cmp pushf add fwait lds xchg add inc add dec clc lods pushf inc fldl mov fwait scas repz stos push mov jp lret and mov cmp insl mov inc pop jmp push frstor or (bad) jb cwtl repz cmp jg jl jl sbb pusha xor lds mov and add add xchg mov adc xchg dec or xor adc push fisubrl pop or call inc xor jg loope or or adcb dec xchg mov or nop (bad) scas mov loope test inc add cmp sbb add in pop fisttpl dec xchg jg enter sbb pop nop ret xlat cs xor test dec xchg jb aas iret sbb sbb sahf or clc scas addr16 clc xor jae stos mov adc data16 loope mov fild add fmul lock pop sbb mov loope rcr clc ds or popa dec out stos push dec cmpsb inc in pcmpeqw or jmp or mov scas lods jmp sarb jg add in hlt cmpb xor pop out clc aam scas pop cltd int3 sbb jo jecxz cmp sub pushf outsl mov lods cwtl jecxz test add or lea adc xor stos add cmpsb jnp mov (bad) xor dec leave sub and repnz nop sub cmp rolb arpl xchg rcrb cmp aaa sbb jp popf inc shlb adc sub mov arpl mov sbb outsl inc pop push jno (bad) pop cmp adc sub inc jno add and mov inc jno adc mov stc jns add and lds stos or mov jl sub sub and popa mov inc in cmp jae jl pushf faddl and xchg add adc test cmp in les add dec push mov pusha inc sbb mov lret cld xchg clc scas dec or inc add (bad) mov stc cmp pop and adc adc cwtl pop cmp sub mov in xchg leave jg mov in sbb mov adc add js xchg jecxz aam or xchg inc rclb cwtl dec insb stos adc xor push adc lock addl popa sub cmp pop outsl jp hlt clc pop dec jl subb stos and or jmp roll adc jb cs jo sbb adc inc fbstp fcompl ret jb mov sub fisubr pusha xor add jno in mov popa nop cmc adc add mov sbb dec or jne in mov or sti jmp jns add fstps popf adc sarb add xor and xcrypt-ofb cmpsl stos lahf jp add cmp (bad) xor icebp xor (bad) aam push in dec sbbl inc xor sub test hlt stos mov pop lods insb jp inc or cmpsb inc adc jno pop xor test cmpl out sti and pop in mov add shlb pop mov mov popa sub sbb jne dec add dec or rclb xor xchg cld add pop shlb bound (bad) or pop or add outsb stc lock ret je shll mov out pusha add and (bad) adc fisubr xor (bad) in sbb push outsb rcrl adc insl jno inc jnp push and add (bad) je xor clc (bad) aad or inc aam dec sbb or xchg add (bad) in cwtl push fs out fadds add stos xchg loop outsb mov inc mov add cld (bad) mov inc dec dec fwait rolb lock clc pusha in push and ss add ljmp dec add sub rorb add fsubrl push push out xor stos mov mov xor inc xchg and or or add jns loopne add mov loopne adc les std inc pushf insb cmp dec adc das ds rolb sbb inc fadds into lock or cmc in les push clc or add aam jg and xor mov movsl cmc add fstpt cmp add jmp std test loopne and pop jl fsub xor dec and clc fist (bad) lret popf cmc mov and and or add insb adc ja outsl insb pop rorl sbb ffree daa inc enter or movsl je jo jmp popa xor pusha add push add js jnp sub add push cli aam sub and inc xchg xchg and pop xchg mov sub roll adc or push std cmp mov add dec dec mov lcall jb punpcklbw jns add push scas call fdiv les dec push add stos mov test mov and push adc stos fldl nop mov ds pushf dec add loopne sub adc fadds mov inc xchg lock jmp inc add paddd fdivl xor xor lods in pop pop mov inc and add and add inc inc in dec xor jg (bad) and leave jmp add xlat mov andb and add test add dec jnp pop sbb out shlb jl dec cs adc inc into or add push or sub pop push loopne and jae jb xor movsb ret inc jo outsl pop (bad) dec aad (bad) fidivl xchg sub add je fidivrl lahf subb dec add sbb shr and (bad) jno inc sbb cmp xchg add or ret mov lds dec xchg xchg add rol xor jmp mov add lods pop loop sub mov inc fidivl adc sbb std sub jmp (bad) rclb and mov push add scas pop lea and jmp fucomi inc and movsb add decb sub mov fsubrp out mov jmp cwtl inc add add fsts push rorb (bad) stos popf pop jg add inc aam jle insb or ret jmp inc aad jnp lds mov add aad inc inc mov cmp push add jp leave sub dec or add cmp ret push xchg xor outsl mov outsb in or (bad) stos push and pusha insl lret int3 or inc rclb add into repnz or add or dec and clc sub fimul scas jmp xchg std push clc or inc pop mov jb popf or test cmp sbb lcall inc movsl rcll dec xor setge mov or sbb cltd (bad) mov adc cli mov call outsl inc cli lds nop xchg push inc icebp mov int pusha mov xchg or sub jo (bad) sub jecxz loopne ja insb add sti faddp arpl test ret sbb sub xor stos mov or cwtl sbb or and mov mov add sbb test fmul insl push inc or and inc and aas mov add mov xchg jnp dec add ret and insl push add je dec mov das cmp cmp add mov jbe faddl sub nop vmovapd int3 repz in mov pop or nop or mov add addr16 icebp call sub mov mov cwtl in add jnp mov loopne fisubl xchg jo pop push ja les lahf jmp insb in (bad) xor inc push cmp xchg orb xchg xchg xor out cmp xor pop fiaddl jp jb sbb jge sub mov add bound addr16 in push mov icebp daa add mov clc push fwait in add mov mov and outsl aam xor push mov xchg add sbb in lock mov loop or fnsave dec xchg addb and pop test test adc mov scas pop add and mov add (bad) sub int3 aam add mov lods sub in xchg inc mov aad push test icebp js add jae sbb xchg ror in mov fildll (bad) enter adc icebp adc dec enter adcl mov pop lret (bad) sbb xchg dec mov fs sar dec rclb pop lods clc enter cmp push js cmp rolb lds addb and xchg add stc and dec add aaa and adc xchg or mov loop add jnp sub hlt add (bad) xchg bound or pop lock das add inc inc xchg or sti sbb ds mov mov loope int3 ffreep rorb sbb mov les hlt ret xchg adc cld or inc dec pushf dec sub mov jecxz sub xor mov add (bad) movsb sbb inc lcall adc out stos inc sub mov adc orb mov and shrl dec and push mov sub divb mov or cmp add test sbb cmp insb sub add fidivl int xor sub pusha les lds inc dec jle sub sbb aaa bnd add (bad) fsubrs pop pushf mov shrb inc movsb jo cmp or lcall push nop sbb sub dec xchg pop mov sub mov and nop mov movsl ljmp cld adc mov (bad) (bad) dec dec cmp pushf adc ds sub xchg xchg pop add or fisttpll xchg add insb mov add mov outsb xor mov add or fsubl lcall ret roll push data16 mov xchg add mov cwtl lds hlt xchg aaa fisttpll jb sbb jbe add popf (bad) call and int3 jl sbb (bad) cmp pop mov jle add insl push out (bad) mov cltd les pop xor pop adc jle add adc mov add jle es inc add and add mov cld loop pop push scas fstl mov mov or cld jbe push add into shll mov xor sub sub jo test (bad) mov jbe fst push pop mov cmp mov adc fsubr jbe ret jl xchg pop stos in dec jns add dec in popa es (bad) mov xchg mov in dec xor mov rcr push mov andb es sbb pushf (bad) sbb aas sbb jl jnp,pn pop pop ret jecxz rcr and (bad) pusha ja (bad) pop scas add lods add inc loope mov adcl ret (bad) cli insb mov les cmp push xor iret jmp inc jp mov pop dec insb rol jg lcall push or les fildl cltd pop sbb dec into inc jp test popf fimull lcall mov or stos mov mov sbb pushf add jp imul cld xchg arpl std cwtl mov popf arpl add add sbb mov mov xor push jae insl cwtl (bad) add mov jge add push aas inc adc fnsave lds xchg cli xchg jl repnz or and push addb or add scas mov sbb in jp and and or insb or pushf add fisttpll add insl sub add sub dec fxch xchg pop mov les push das and sahf rol daa aaa jns jae test adc xchg or in xor adc (bad) xchg imul push sbb bound cmp jmp leave lock loopne or jecxz lahf adc dec (bad) pop dec mov cmpb jne adc int movsl pop fistl arpl addl pop ret (bad) in mov mov add and jmp push cmpsl in clc push aam and adc sbb mov add mov pop xchg cmp jae push cs inc in insb mov add pushf and and movsb in cltd jo lcall add mov and or (bad) adc cwtl or and mov cli test xchg or add push frstor jnp pop movsb in pop push (bad) add lds adc mov or ss nop or test lahf jb call jge add add (bad) push shll adc andb or add fsubl ret jb stos lods popf xchg add movsl adc das add and ss or jnp jns fs ret addr16 lock mov xor daa xchg test pop mov push or fcoml insl mov add in loopne xor fisub or mov sbbl in xorb sbb jae jp lea int3 mov push lgs mov js,pt mov (bad) rclb or add mov jne jecxz add sub dec test mov popa clc nop inc pop lock xchg xchg jecxz add or dec add popf dec or mov inc sub sub or outsl cmp xchg cli mov sbb call sub pop in in mov shlb push dec xchg aam dec pusha push ror jnp mov (bad) xor jae in call incl ret call pop sbb jo (bad) jg or (bad) fdivrs and or cltd add addl dec xor mov and addl aaa out xor inc icebp xchg jnp sbb (bad) jle pop or in test inc je push outsb or and jp add in adc xor fldenv mov add add and jnp inc stos mov cwtl mov clc inc cmp inc or in sub add insb int3 mov inc xchg sbb pop sub loopne mov ss push test pop dec adc add add lret addl call adc adc pop fld pop in dec or pop dec inc dec insb mov sub xchg imul push test jmp in std inc testb xchg mov mov ret mulb addb jecxz and jns rcrb add outsl mov add mov mov sub add in roll adc jmp inc jbe cmc xchg mov inc idivl jg je dec in push movsb out sub push xchg inc pop pop mov scas add pop sub shrb pop xchg add test in mov lret (bad) enter in jg iret lahf js xor leave add and movsb rcll xor fs pop adc das sub or cwtl and outsb add dec mov pop int (bad) jne jl inc call scas shl das (bad) test mov inc stos cmpsb movsb nop lcall ret repnz mov add pop insb add insl clc xlat add addl inc repz movsb je push xchg and add dec pushf jnp cmpsl mov fbstp inc sbb push popf mov (bad) cltd hlt (bad) cmc add and mov sbb dec dec dec or xor int3 add cmpsl jmp add rcl sub add ret mov adc test addl mov ds add jp jno add mov (bad) pop xchg sarb mov cld dec ss adc into add lds add or dec add leave or add cwtl repz and or loope les and fist roll push cltd pop adc inc insb add inc xchg jae dec mov smsw dec repnz int mov jb call sbb and jl flds jno dec fdivl push pop lods xchg aam dec pusha jb popf nop lock in or lahf lea xchg or pushf ficoml call js cmp mov push xor lcall roll ret adc ret out add xor int dec or add (bad) out (bad) clc cld jae,pn les mov test push bound lods pusha adc push std xor je mov inc (bad) (bad) cwtl jp and mov fldenv sti mov jnp add push jae dec mov pop test repz in xor xchg add push les mov into ds nop adc inc or lock (bad) and cmp (bad) mov jno jl test stos clc cmpsb sbb jmp imul and addr16 sub inc and das add add mov jmp xchg dec pop adc sub pcmpeqb mov dec or (bad) adc (bad) jno int3 int3 in mov sub mov (bad) (bad) jno lock in sub in mov and test rolb movsb lock xchg call xor loopne dec add adc xchg arpl test or push sbb les mov and dec bswap aam pop jb sbb (bad) aad mov loopne adc adc out jl (bad) in cmp nop sub mov xchg push stc mov mov repnz mov aaa jnp int3 and leave add mov jns rolb loop cwtl cmp add jnp push add in sub inc mov je dec mov das and inc in inc rorl pop mov jnp cltd mov pop dec aad xor stos pop add jmp loop adc ja xor add dec push hlt xchg inc or dec xchg adc jle fcoms in cwtl pop dec cmpsl inc push shr sahf cld inc cli pop pushf jb add sbbb loope bound mov mov sub bound lahf or mov adc xchg out add jl mov mov fisttp inc jb in xchg out or add sbb popf (bad) loopne dec insb mov xchg hlt dec div insb pop cmp inc jle lcall es xchg sub sti push and and xchg mov fadds mov outsl xchg clc sub dec mov mov (bad) mov sbb jmp pusha mov xchg push add push insb xchg dec mov or cwtl xchg stos lahf add inc fwait and dec jne lock mov push push cmp lret aas jmp pop mov xchg cmpsl clc mov in call xchg incl std lods insl sub push stos fwait leave jno jnp and rorb sbb add (bad) jge in add push jnp adc and cltd xchg xchg adc add nop (bad) push cld or mov (bad) pushl adc pop push mov push lock add je imul dec jmp sbb pop sti sbb add jnp cmpsb dec xor push arpl insb xchg push adc mov pop jo sti push cli inc out sub adc fs xchg inc adc mov jl add xor call sbb bound movsl lods lods add jae mov add cmp out ss adc push sarl mov xor sbb or or loop stc faddl scas push xor in mov mov adc or inc jae cmp jl or sbb cwtl jo test in rorb or xor clc movsl inc fs out mov iret cli push sub lock add (bad) jge and and sbb icebp movsl jne sti in nop inc add mov sbb push mov and jb xlat in dec scas (bad) clc sub inc enter jae mov fdivs out fildl sub out cld and xchg xchg inc test push ret mov (bad) xchg mov nop sti inc test pop add test add cltd hlt cmp jae shlb sarl xchg lahf xorb jns fstl shlb (bad) jo repnz loopne add adc in cmp push pop or cld jmp adc xchg int3 shrb push push inc in popf out mov ljmp inc pop fimull (bad) outsb mov ss incl fnsave mov iret sahf rorb adc dec test les daa adc cmp mov sbb xor loopne inc int3 xor add inc sbb push popa mov add sub cmp push (bad) mov aas sbb sub stos lea pop test popf jl fild lahf cmpsl icebp movb lret push cs into test gs loopne pcmpeqb rcr jo and add shrb loope xchg adc fldenv fcoms nop pop ljmp pop aas insb mov push adc mov clc add xchg dec sub xchg loop add je mov sbb cli cmp add inc test lods add jp notl sub sbb cmp mov push aas (bad) enter xor dec lret dec add or push push xchg xor repnz cmp pusha das stos mov (bad) or sbb or shll push rorl jnp jb dec push mov sti pushl and add jmp add mov sub xor push xchg lods loope (bad) jge (bad) test jno add test jo adc (bad) mov mov dec jae test jb or sbb sub rorb jecxz push movsl jmp loopne lahf stos mov push call out fist loop dec (bad) ja lods add cmp in out sub add loop test movsb aad aas (bad) sbb cmp paddusw push addb pop movsb decb test mov enter jnp aad mov mov pop add pop mov jae add out mov pop xor test or mov out fiaddl push cmovns xchg ret sbb and aam adc andl stc mov call fdivl lock (bad) das jle outsb test lock dec lret dec (bad) xchg add jge mov or adc and push mov inc (bad) jo dec sub stc pop scas mov mov cs faddl mov sub cltd adc lret xlat dec adc les js cmp insl mov or in adc xchg jae jp in sub xor fsubs loop jl subb lea push in mov pop les adc add jmp or adc (bad) in mov sub inc imul popa pop adc out gs iret mov std jl int3 cwtl or adc sarb rcrl fcoms dec pop sub mov add in add movb xchg insb in andb lods loopne fucomp and adc ror repnz test jnp xor xor add jo dec sub dec add cwtl cmp adc (bad) clc loopne rcl test dec es stos or jno scas adc mov push test test jne add xor enter pop les cltd lds add faddl les cli cwtl cld shrb xchg rolb fsub xchg imul jge fldl (bad) sub stc jmp add rorl pusha mov sbbb pushf xchg jnp cmpb fcoms add ljmp sub adc add inc jae add pop nop and and xchg inc hlt adc mov xchg jecxz int3 add pop ljmp dec test mov xchg ficompl add and or jp jb adc inc (bad) dec add mov ret movb jne cmp mov test mulb jb sub inc fwait xor cs add das sarb dec pop fstl push add sbb repnz (bad) adc jg and fdivl lahf in out (bad) call xchg je mov pop mov incb (bad) mov jns leave popf cmp fmull mov jmp and dec mov loop and add push iret mov add out mov popa or loopne adc xor add data16 xchg jb add add dec jo cld mov adcl jle loopne mov inc or (bad) in and cmp xchg loopne jmp rolb add fidivrl mov add and and sbb jns push in mov inc das adc and in mov pop lea and sub nop sbbb adc fistpll add or pop xor inc dec mov xor lcall push daa scas fidivl mov add lea (bad) test daa inc (bad) cmp enter pop test pop inc xchg mov (bad) jge sub nop (bad) lcall in in and imul cwtl cmp inc sti jne pop dec jecxz pop insb or mov adc adc xchg mov (bad) in addr16 jae mov mov incb sti xlat pop jmp jl or int pop inc insb (bad) and lcall adc xor and dec loope sub fdivrl add inc fiaddl shlb (bad) cwtl mov stc pop add sub repz cltd dec mov jge enter dec or pop xor daa iret sbb mov pop ret cs mov add rep cmp ljmp (bad) in stos xchg inc push and lock jmp movsb push or cmp adc cld loopne xchg js clc in add pop divb addr16 rclb pop push scas cmp xchg movlps sub cmp dec and int3 rorl inc lock test mov and (bad) adc and cmp lahf daa pop cmc adc sub xchg xor (bad) push out (bad) jo add dec sub inc enter xchg dec xor call int3 ret pop nop jo cmp lods sbb add lods jmp fs jns dec add aam subb jb pop iret fs and int3 jg xor lcall in inc test pop aam incl lret and add mov add cli or and cmp imul insb add fisubr sbb xor cwtl (bad) jb mov lock mov xorb lcall add test xorl aaa cli hlt cwtl dec add fbld adc jnp jo add adc test mov push adc in out orl mov inc adc jge mov jg test ror or xchg gs and into stos cmpsl push hlt cmc outsl xor test loop sahf popf mov add stos lahf xchg mov dec jne jae je aas (bad) pushf jnp and fdivs push inc adc inc fsubrs mov mov mov push push mov mov cmpsb mov pop lock mulb dec cmp les test sbb cli ja mov lret adc adcb dec mov dec nop dec js xor mov in dec xchg or add pop xchg xchg hlt je mov xchg xor popf or daa cmp sbb cmp imul ja (bad) jo test lahf push push push add std call arpl sub xchg push je lds sbb inc clc popf mov jle scas dec sbbb push xlat xchg push inc lods loope int3 out mov inc out adc jecxz in xor jae in pop xchg xchg jge add cmp fmull push jp inc std or sub add add rcll or inc dec mov add insl mov in mov cmp sub adc sbb jmp xor movsb adc or das mov addb mov loopne add fsubl add mov adc sbb popf nop pop push (bad) sub xlat fs enter stos iret and (bad) out mov enter add int3 mov cld mov mov push add push inc or push imul xchg pop adc adc mov hlt sub stos xor xor adc scas xchg xlat jge insb int3 nop push es mov adc enter mov adc shlb sbb mov jnp out rcrl inc lahf idivl sarl dec push lcall dec cmp lea sti add mov or in insb push inc sub mov pop cmp sbb rclb das adc adc mov ja out mov lock and jle sbb (bad) pusha arpl jno xchg out or adc or lcall mov lods pop dec xor and add jle int3 popf push jl arpl adc lods add mov xchg nop sbb inc out add (bad) fdivl pushf and jnp test dec hlt push inc add cli jmp std scas add add insl lea cmp or and jmp ret adc add dec bsf (bad) adc sub sbb inc ret test add mov push cmp jp xor in lea fdivrs xchg push loop mov adc fildl inc dec sub and fsubs (bad) rol loope mov jbe (bad) pusha fildll pusha pop xor pop cli movsb jge cs dec inc rclb fimull test loopne js ja popa add lea out xor mov pop push dec outsb mov cmp add sahf (bad) cli (bad) sub hlt mov shrl and mov sub add and test movsl lret xchg lods xchg call in test or nop sarl push pop mov stc icebp add push jmp add rclb in aad loope (bad) xor test repnz mov xchg fldln2 pop pop adc jno nop (bad) cld xor jnp mov dec cli popa adc (bad) jmp sub add add adc (bad) cmp fadds mov jne cld and mov mov pcmpgtb imul add loopne pop push test imul and adc push insb cmpsl sub sub ret std jmp icebp aas inc shrb xchg add in and lahf inc pop jo jnp pop push inc enter shrb lret enter and movsb mov push sti ja (bad) or popa bound jb cmp bound jle,pn jl out inc push test clc add jp add ffree jecxz clc xor cmp enter mov fistpl sarb inc and (bad) fnstenv test add mov call cmp sbb mov sub pop aad int3 mov or jl pop adc scas push xor (bad) xor push bound jo fimul adc jl or mov lods inc dec hlt mov add xlat sub adc xor jl mov sub test lods jb test jl cmp mov cld inc lret ret sbb outsl inc or fucomip std jg mov inc fdivr out cmc or (bad) jb idivb fcoml imul inc xchg mov xchg pop add fidivrl cmp and test inc sub test sub mov sub aas xchg pusha cmp xchg jno or and ds mov pop push mov mov adc pop xchg sbb aad adcl movsb sbb push clc xor adc dec cli xor cmc fiaddl xor es cwtl add in js testl iret cmpl inc ret jecxz inc repnz fdivl repz jnp arpl daa inc (bad) stos (bad) scas loop or xchg xor dec out jnp insb int3 sub jge cmp or jae pusha push test and std sub dec int inc outsl outsl adc or in mov ret mov js test sti dec xor mov cmp or test cmp adc in xchg add je mov sub lds test inc jmp dec in test insb loop push mov jg lods jl pop jecxz and mov push and add fbstp and xchg inc jl cmp xchg mov mov pop stos mov fmull lret adc pop push cwtl dec insb and pop xchg push mov ret add xchg dec loopne adc adc lods rclb add fsubrl sbb mov dec dec pusha add scas adc call aad fs push pushf xchg cld loope cld in movl and cmp cs pop and add roll jge adc mov add ss adc inc dec xchg add mov pop xchg or mov mov add pop dec call rorl jnp add mov repnz rcrb xor int3 dec pop int3 xchg mov inc add mov inc test (bad) push or xchg xor xchg lods dec mov fwait pusha negb jmp nop add adc lret cmp loopne xchg (bad) or inc inc add fstps add lods test add mov add xchg inc test jne ret lods out gs mov nop or mov or test dec sub sbb adc inc (bad) xor jle pusha inc enter out subb adc andb jmp icebp (bad) fdivrl insl mov cmp ret or mov mov jp lret add jb out add push mov lock xchg add js mov cltd inc or test add shrd fist mov mov xchg and mov adc ss adc add in test jae es xchg cld test xchg stos inc rcrb dec adc aam movsb stos add cwtl jmp test sub fcoml xchg ret sub pop int3 adc inc jb xchg mov add xchg adc mov pop add je iret int pusha jo mov cmc aas (bad) jb (bad) mov inc xchg enter jmp sarb push (bad) sub xchg pop rcll jnp jno jb jb adc out or (bad) je add js aam adc test sbb sub adc lods push push fistpl sbb in fiadd sbb inc xor les sbb xchg nop (bad) add fisttp and pusha add or pop in or jmp sbb lahf jne mov data16 lcall addr16 test ss jne arpl xor cltd add lds jmp fistp and call and lods lahf pop ret xchg inc sub lds jl test inc bound add or pusha mov or jg int3 bound dec sub mov push push pushf dec inc sbb daa jo loope ret out leave lock clc adc xchg or add in xchg adc jecxz lds enter outsb adc lock or and adc (bad) in scas ljmp in roll jnp pop cmp leave sub fs cmp js cmp std inc (bad) xchg push rolb adc aad push hlt mov mov adc mov pop imul inc je push test je inc sbb xchg dec inc and and cld add jno frstor or sbb inc int3 dec hlt test fildl out das icebp (bad) cld bound ret or aad popf sub xchg rclb movsb dec cmp xor sub fsub and or movsb shrl fcmovne xor shl pop pop js flds push xor leave ds (bad) ja mov jns rol dec push ret nop mov mov dec or push pop add or (bad) mov movl sub divl stos (bad) jl and adc lret aad rolb pop sbb imul pop add mov ret test jno xchg jns inc adc jbe xchg ljmp sub rorb aam rorl ret dec add fsts xchg add pop lret pop popf call sub lock and push addl dec cld pop nop test loop stos pop test pop dec pop add mov xchg je mov mov (bad) jo xor bnd and subl jle add cmp test sub push cld ret sub jp pop add test jl lock jl sbb or add hlt scas dec clc inc cltd jnp mov push (bad) sbb cli push clc ret adc xor out push fdivp cmc lods inc lret xor xchg xlat loopne push out inc ljmp icebp cmp mov cmp (bad) jne nop mov mov adc leave sbbl and loopne aaa loop dec cmp insb arpl stos mov jmp cld andb push fisubr mov jecxz (bad) mov push nop in add inc shlb clc adc mov orb (bad) push pop pop mov or dec sub xchg dec inc fcomps mov add rolb stos fwait sub les js push mov inc push and dec test jle sbb rcll adc jl test pop movsb add xchg in xchg rolb ret lret push pushf add inc cmp dec call mov add push loop ret insb mov sub imul cmp notb xlat cli xchg add or mov push jae cmp add jecxz insb cmp sbb ret sbb dec push in or mov mov fadd (bad) faddl pushf test subb sub leave adc add adc in ret and mov adc push in cmpsl jmp inc adc test (bad) lock mov rolb out inc or fiaddl rclb sbb sub lods out or cmpsb add sbb insb test orb sub clc push ret push adcl stos adc xor mov loopne push sub lret rol and les orb aas and or test and cmp lret inc fld1 and adc mov mov call pusha mov push rcll add mov test (bad) in add xor push test dec or fsubs mov je mov dec push add xchg add inc into rolb push in and and addr16 xchg adc jp add pcmpeqw push std xchg xor mov mov and jo (bad) cmp mov pop or jne in addl fcomip mov add jp xor loope lods inc aas sti mov pop sahf mov int3 add ret inc (bad) xor sti adc (bad) arpl pop jo fildl fdivs jno dec push lret aad inc sub movsb call and hlt loopne add fist and sbbb in xchg jle sbb fdivs sub test dec and jno lahf jns add (bad) dec (bad) dec cmpsb orb xor jl pop xor jnp ds int nop jl pushf test pop imul or fsubl dec cmp push sub in pusha jecxz decl mov or sbb cmpsl enter in lea push mov lods repz movsb adc mov adc rolb icebp divl push fwait mov xchg fdivr adc aad sub add cmp cmc push mov dec mov xlat aaa and or xchg enter add in (bad) lods mov addl sub sti sbb loope push and or inc fldenv fwait push or sbb mov push es and jo push out inc add sbb inc jl,pt pop imul cmp popa pusha xorb clc data16 push lret or and loopne xor add adc or xchg sbb dec pop push lahf lea jmp and adc pop or rolb rolb in jecxz inc cld push or fsubs test (bad) push gs jle dec mov inc push mov pop pusha dec add mov jno mov cmpsl inc mov xchg dec or xor movsb aas xlat add sarb psubusb (bad) and insb add and xor or sbb cwtl fnstenv add cmp js inc push addb orl incl je roll adc add ljmp jle add (bad) sti scas inc push repnz mov daa orb insb push rcrb add cld add jno pusha cmpsl push mov xchg jns (bad) mov push repnz stc test in nop les add pop lret shrb or bound push clc sbb inc call jnp sbb add pop pop cs pop rcll inc sub les sarb dec add aam jecxz pop popf rcll out in push add test loopne lods imul jb xchg inc popf inc push mov loop outsl shrl and cmp testl mov push pop pop xchg mov movsb cmpsl pusha sti (bad) dec adc call loope xchg js push lock pop dec mov repz push insb push pop les add in icebp add jle cwtl addr16 push inc in nop leave pop rclb or jg xchg pop leave pop mov mov or rorb and out add inc xchg jnp sub scas pop push adc movl inc mov xchg leave mov incl sbbl imul jecxz and cli xchg hlt xor (bad) cltd jl add sub pop idivl and clc push and xchg jo sbb jae shlb leave in test mov lds jge icebp cmc inc dec adc and scas xchg or add push loop wbinvd add add jno std adc dec lret jnp and cli xchg add jl sbb or frstor test push xlat cmp inc dec add pop lock add pop dec add daa out add test xchg les into adc xor mov movsb les inc xchg add jl insl add jo test add lock cli pushf fistpll or jge push jl mov cmpsb xchg clc add aad jecxz sub (bad) add sub push push rol lret js jp cmp jmp cmp (bad) bound and pop adc popf int3 add pop icebp mov inc sub push aad pop enter lods dec dec sub pop mov pop sbb sbb inc into jle adc pop adc inc js bound fs pop and push add jg jl imull sub scas cld nop and sti out cmp xor clc mov enter pop inc sbb mov xchg xor pusha xchg xor and mov push add popf (bad) das mov jl cmp push mov jnp leave pop mov xchg sub push add jo or and inc mov adc mov pushf add sti mov hlt cmovo add lock mov cltd mov or push adc call inc mov sbb jb call adc aad sub push repnz pop and add stos fs jo pop pushf out mov xchg xorl pop mov es test or mov xorb mov out adc addr16 push in xor call test clc rolb mov add test pop adc nop lret pop sbb jns adc or subb or insb test pop das pop xor mov xchg fnstcw test adc int3 xchg lds dec pusha femms pop jns leave repz hlt movsl inc jnp cmp jge fistpll dec xchg nop imul js cmp jle jnp dec fiadd aad test imul xchg add and je xchg mov mov lods push leave jb lock mov int3 sub push add dec add xchg cmp adc int3 lock xchg xchg orl add xchg jnp in mov jno add push inc or add xchg dec inc cwtl imul rclb ret sbb (bad) int3 ljmp sbb adc daa add xor push cmp jg adc sbb nop adc cmpsl cmp cmp add xchg lock jp insl xchg bound repnz sbb add nop inc inc rolb adc pop es mov hlt xchg lods rcr test adc mov loopne and inc pop xchg mov fmul and sarb xchg rcrb shlb movsl add leave push xor mov sub sub mov cmp movsb mov xchg or aam xor inc xchg mov sub lea loopne inc adc xchg repz and mov dec test inc (bad) cmpsl push and adc inc inc (bad) add (bad) pop loopne test xor setg dec inc enter sbb adc js cmpsl pop add subl mov lcall sub test mov or add push jo fdiv mov call adc cmp lahf cwtl loope sbb inc mov add xor inc ljmp (bad) jp lods addr16 sbbl mov cld xchg sbb or push adc mov mov das fmull popa cltd dec add repz roll or and xchg inc sub pop hlt or jecxz or (bad) jmp xchg or push push lods add pop aad dec repnz stos int3 xchg inc xor (bad) xor and jp mov aam mov mov add jp mov push lods xor mov inc out sub incl sub sti out mov jmp fsub sti loop pop adc and jmp adc xor add hlt pushf add test push and je xchg lock xchg cwtl call sbb rcll stc test lods adc leave push sub dec push pusha jl lea insb jne xor xor and push enter add sbb mov dec mov and adc sbb mulb add in jns push mov cli inc rorb movsb andb std aam inc repnz inc lods pop outsl xor add xchg leave mov cwtl xor adc je xchg and xchg pushf xchg pushf or pusha adc lcall pop and test fdiv stc mov pushf andb mov add mov xor enter nop jl cmpb clc lods or pushf into jg cmp mov pushf mov jne aas add pop and adc loopne nop mov aaa js addr16 cltd shlb sahf push clc rol nop cld push jp mov push test pop mov xchg xchg cwtl test or add jnp insl jns jne push rol cwtl add in xchg rcrb inc popf dec jle movsb sarl (bad) inc mov mov fcoms iret scas nop push repnz sbb xor jg lock jg insl or or or pop dec lds int3 add sub push xor or out fwait xlat push sbb jno xchg adc dec scas daa pop lods mov arpl pop add scas and fisubl dec mov cmp or adc imul outsb shll movsl add loope push jp cmp in test iret clc sbb jg push pop pop lods insb push lock pusha ds pop xor stos and push mov xchg subl mov cvtpi2ps fsts inc mov cmp pusha add xorl jge enter add adc sbb inc int3 (bad) inc popf ljmp mov lods data16 int3 lock scas subb xchg push dec test push adc and dec mov add inc mov cmp enter push lods loopne sar and (bad) ljmp lret xchg nop iret imul jp and dec push enter mov rcrb mov (bad) jp cld (bad) jae push cwtl mov orl rolb clc mov cltd sub dec scas (bad) mov rcr inc mov jle inc les jmp xchg shl and scas andl mov mov shll add hlt sbb je pusha cli jmp and xor push inc outsb inc fsts or inc jl add cmp pop sbb test in push (bad) fmull sbb std movsb dec add pop sub int3 or mov js gs cli and sahf and add dec ret add cmp push jmp lods xor (bad) mov sti pushf pop addr16 xor js inc mov pop enter or loope mov sbb fisttpll add mov and repz inc xor cwtl sbb loope lahf adc xor movsb das xorl scas cmpsl push fidiv cwtl (bad) dec iret dec leave (bad) and xchg push xchg add pop xchg bound leave adc add xchg test jb adc sub xor jmp loopne dec jg adc add mov sub jo pop add and test pop xchg enter movsb pop jns fidivrl test imul test adc push mov pop addb push notl lea xlat add (bad) and or xchg test push jno xchg shr add mov sbb adc hlt adc or and jp popf and pushf inc jle lds add pop imul xor push mov xchg js movsb (bad) icebp add cltd mov pusha xor stos push imul outsb cmp pop addb mov mov pusha add and fsubl enter push mov mov std add cmpsl dec scas cld add rolb loope aad ss sub or inc mov loop js repnz mov addl mov inc andb ljmp in and xlat dec xchg cwtl add pop and or pusha mov jae loope jmp nop fs inc xor lds fdivr icebp jg jo mov push sub or inc in mov add addr16 inc test pop or lea mov xchg cmp ret js pusha adc and push nop ret mov and push pop adc inc fnstenv push inc mov push add ret adc (bad) aaa inc sbb dec xor lahf mov sub jno add clc push (bad) add fmull push comiss jl pusha ret out scas (bad) sbb mov fmuls push mov mov add mov sub sub iret lods mov mov shlb push fstps push icebp sbb mov sub jns push mov sub xor add and cld adc decb cwtl add push lret and lock or xor lods lods push pusha dec jno out mulb shll mov lcall leave add mov test mov add in (bad) mov test test inc push int3 ret mov push mov scas pop pusha andl call push pop dec cmp or push sbb outsl fsubs (bad) sahf inc jnp xchg test push (bad) lock add call xchg add insb xor adc and sar push jl adc mulb (bad) addr16 mov nop mov test (bad) jmp and mov jo inc xor jns sbb (bad) call call adc inc adc jg jge pop push fmuls mov push and cld and pushf rol into xor dec fldt sti rcrb flds pmuludq test adc inc add (bad) imul jl negb push rclb ja incb shl add subb mov adc push jmp adc push jge dec les jae ret and sub addl lods or mov ret mov mov fs and jae add loopne sahf sarl call mov (bad) test and inc and jo push enter imul fdivp je mov push push jae pop pop subl pop mov jne xor inc in and pop dec cmpb (bad) sbb in repz ret in into inc lods out negb adc aam out cwtl call and xchg call jo mov xor cli xlat add or fsubl es jle imul mov mov xor hlt dec xlat les xchg adc add jo ja or mov cmpsl mov push adcb andl pop push clc xor inc enter xlat sub jnp data16 sbb fsts mov popf add repz cli add cmpb es daa insb fstps loopne (bad) push call mov inc push inc inc scas jl aas push jo shll test loopne je fmull jl mov fidivrl add xor pop mov add pop mov sub xor cli mov and xor mov shrb ss add add hlt adcb xchg adc mov mov pop add mov sbb cmp stc lcall out loop (bad) mov int3 jns or out sub xor loope cmpsb inc push gs adc pop add xchg jle jo jb or out push call mov pusha or in push dec or xchg rep sbb sub push pop jle lock jnp in enter xchg or or bound adc add insb leave mov cli sti lcall jbe jle stos inc add push mov mov adc test frstor or lea add sarl aam in lahf sub call sbb test xchg pop inc sarl inc adc sbb nop or jmp or add mov call fwait sub rorb jbe mov repz adc sti js mov cmp jge roll movsb adc inc les pop pop sbb pop cltd mov xchg push mov nop sbb sarl sbb dec (bad) lret push inc dec imul in icebp js mov inc xchg adc inc das dec hlt test fs dec (bad) and inc mov gs inc and sbb enter idiv jmp sub movsb add inc mov leave or cmpl or mov mov iret xchg cld push test cmp rcll sub mov adcl xchg insb cmpsl test cmp jo or test adc and leave push cmp nop or pop adc enter sbb ss pop and cmc test jno jge mov xor enter push mov pop out add (bad) bound out push sub mov out in sbb fdivp mov add movl inc push xlat popa imul xchg das and js (bad) adc sub adc mov sub add inc pop idivl push into mov faddl adc fdivs add sbb push or mov or and sarl hlt cmp xchg xchg mov insl test int3 jnp negb mov loope or (bad) vmread ret or adc dec lret or std ror in nop or shll lock add jns pop ss jecxz adc add scas cltd xchg jbe cli jmp mov push mov push lret add add pop call dec adc adc rcrb (bad) sbb cmp push and or cltd add lret add pop adc push cld int3 add push lret add inc hlt in mov ret inc iret in push jmp mov lods bound adc or (bad) outsb xchg mov das or dec es jo xchg clc pop into call dec jle lcall pushf loopne mov (bad) js and xor jnp xchg sub pusha icebp loopne into push leave dec insb and xchg cmp jge jnp test xchg sbb cld push pop (bad) add mov sub clc or loopne adc mov sbb xor andb ljmp cli xchg push call (bad) xor js add into dec mov fmull enter xlat add mov andb cmp inc or out in xor je je sub outsl pusha lock lret or mov add hlt mov sti cmp nop pop jl adc loop pop andb xchg push add mov xchg pop js add jae lcall movsb rolb adc cmp jp mov clc mov fs orl fadd xor mov pop jp dec pop and in push data16 add and or movsb push rcrb add sarl xor andl (bad) xchg dec (bad) fcomps dec test sbb inc shlb pusha mov xchg (bad) push pusha jae leave pushl adcb pop test mov jne jns add sbb outsb add out std mov mov or adc cmp movsb test mov or add mov push inc adc arpl sub imul rcrb xor (bad) insb or jl jle or test repz gs dec adc (bad) aad xchg inc fs xchg repz pushl (bad) (bad) fs inc movsb push cmp loop adc (bad) jne in mov adc push mov clc lahf pop jl add pusha mov sbb push cltd sub pop cmp push aas or or push adc cmp rolb or add popf lods (bad) pop xchg (bad) pop xor leave sbb mov jl push enter mov xchg test fdivrs xchg jp adc xchg in xchg lock adc insb xchg loopne scas dec pop cmp sub cld adc lods jae loope cmpsb lret les icebp faddp adc sub popa repnz rolb in lock pop lcall mov dec pop out dec pop lret sub jno or or push push mov adc sub pop adcb adc mov push out hlt jo or jp imul pushf loopne add aad add daa loopne pop js xchg leave mov or mov inc pop leave shll jle nop push test dec fisttp call enter bound xor sbb jl pop xor adc cs lods rcl rolb mov mov mov pop popf incb mov out stc cmpsb pop adc mov and xchg mov xacquire addr16 stos add mov mov enter (bad) lock pop add jns pushf in lods push sbb xor inc add add js lahf pop lods les pushf add jns xchg stos adc jl mov adc xor mov add push out push xor sbb ss xor jno xchg push loopne dec leave push inc dec mov lds add mov (bad) mov leave fnop adc pop orl jle sub adc inc ja aaa lea dec (bad) and test and push mov or adc xor aad push in inc inc ljmp lods orb sub or cmp add mov pop aaa add cwtl jno aam mov fnstenv inc lret sbb mov test ds xchg ja mov push int add adc dec fs jge nop pop (bad) add inc outsb and mov arpl inc add cmp cmp xchg sub dec jns add sub sbb push jnp lods mov jo cli rclb push cwtl and sbb mov xor xor xor xchg push mov js stos add adc in mov aaa (bad) loopne mov das sub pop sub daa add repnz or ret daa leave fwait stos dec int3 (bad) test in fldl xor inc jp add (bad) dec sarb repnz (bad) fs mov mov lret sbb mov pusha ds (bad) (bad) mov sbb lock mov push call (bad) enter scas clc js jmp imul stc addl out add xchg movsl dec xchg xchg add stos dec mov ret or sbb pop mov sub jmp or pop pop pop subb jo jecxz insl push jl push mov pusha roll mov adc jmp jmp cltd pushf xchg inc dec mov dec mov icebp cltd xchg inc xchg insb jb or pop (bad) mov js and (bad) repnz in sbb cmp cli lret pop adcl nop xor pop imul mov sahf nop clc push and xor out sbb lret pop xchg loop inc out enter movsb lods cmpsl cmpsb mov add adc sub inc xor mov loopne in test or push mov lahf popa icebp jb (bad) das test pop mov adc add and jno in lahf out xchg adc and mov sbb call sbb mov adc sbb in push mov xchg sbb hlt mov sbb and xor sbb sub test in test movsl dec add jno addl dec mov xchg cmp adc sbb mov mov add inc push push int3 pop or pop lods cmp sub cmpsl jae daa or cmp adc add jle repz pop jb add in in jns xchg adc loop,pn add jno sub fs leave sahf lret data16 mov lds in pusha mov xchg aad or divl lea cmpsb sbb pop xchg sbb pop adc mov leave push cli xor xchg and icebp mov bnd inc mov daa lds in mov dec or arpl cld test inc mov mov and and orl (bad) out jmp mov leave mov and inc es icebp cld mov add mov cld cmp jl pop arpl leave cmp fwait pop loop and add pop mov cli xchg add dec inc lret enter lock (bad) hlt das adc pop push or cmp cmp test sbb inc inc dec mov lods pushf mov pop xor idivb add ljmp in sub xor pop imul rolb sti xchg push sahf add add sub ficomp mov imul and rcll ficompl xor mov mov jo push lds adc inc insb push sbb lahf dec sub cmpsb pushf mov int3 sub (bad) sbbl adcb loop cmpsl leave adc mov aad jp inc lods test adc pushf jns insb nop insb mov (bad) imul out (bad) and xor add jmp insb nop dec xor jnp sbb push xor leave jb outsb pop mov in sub inc out (bad) loope sbb dec push pushf movsl mov cwtl pop (bad) in xchg imul outsb fmull xchg loope jb and adc inc clc cs cld add or inc es inc insl enter insb and xchg or out add push push (bad) dec outsb adc mov xor pusha scas xor das inc inc cwtl jo add es cwtl insb jnp in adc adc in repnz imul test jno add xor and movsl icebp add inc push pop push mov or movsb scas test add daa sti jmp sbb add adc jne or aas cmp int addr16 add insb sbb fdivl inc lretw dec mov or or add aas fyl2x jp (bad) mov cmpsl sub fcoms clc sub sbb xchg or out push dec lods push adcb push ds jb lods fistl scas mov and push cmpl mov inc xchg push cld js daa sbb add jne sbb lock pop cli pop jg inc and add ja es (bad) mov inc hlt mov or sub dec push iret jbe inc (bad) in cwtl orb int3 fdivrp or icebp mov sub push jne mov cwtl or dec lock add js loop in lock movsl or das popf pop shr int3 add nop mov inc pusha and inc or aam lret sub and stos jle test mov mov sbb jo sbb test xchg xor adc hlt jp dec xchg xchg pusha jns aas or shlb (bad) jg add frstor inc fcoml and add xor hlt pop push mov push icebp movsl sub push lock popf xchg in enter and pop pushf inc jl dec mov inc cmp movsb cmp mov or and add xchg mov shr and mov mov mov add mov sbb hlt add add cmpsb adc mov mov cmpsl mov repz mov scas add sbb lea orl fisubrl adc cwtl iret aaa cmp adcb addr16 daa fs sahf fwait push cmpsb je jns pusha push push mov mov shrb xchg mov int3 add enter mov (bad) pop inc push add or push pop inc clc pop sub je jmp lods or and push inc and testl mov in and or fnop scas ret inc imul lahf xchg cmp std std imul adc loope add mov pushf mov mov cli jge fcmovnbe adc and into or lret push subl daa cmp mov rcrb aad jp jl daa (bad) call imul lods or jo mov faddl xor or jecxz dec (bad) faddl lods mov sub dec incb inc into fs add test push in xor mov xor pop leave loopne xor sbb je inc cmp jae idivb or fiaddl test mov test data16 mov xchg pop xorb xor cltd push rorl sub cmp and inc and adc (bad) loopne and fs fsubrl pop add push loopne out jle add mov adc pop push scas test sarl sbb loope cmp jno shld pusha call out lds cld arpl fidivrl sub mov clc adc loop call pop push pushf adcl inc (bad) (bad) push pop adcl xchg sbb inc cwtl das and ret test mov fiaddl enter inc js xchg xor into sub sarb mov out xor xor loopne imul mov nop das insb dec sbb test mov mov cmpb and add call movsl inc dec iret loopne cmp scas icebp or jns or call sbb in inc dec adc adcb jp or xorl pop xchg adc arpl xor outsb mov add jle sub push (bad) pop pop dec and push nop rcrb lock imul pop mov pusha cld xchg mov fwait or js test mov xchg nop fs inc movsb test or (bad) jns and jno sub sub and stc or das js fs (bad) dec mov lods mov add add mov mov hlt aaa ror mov js mov clc (bad) sbb lods das mov (bad) or pop test mov add inc adc mov inc inc inc xchg xorl pop (bad) cmp jecxz mov or (bad) jg xchg scas adc sbb call cmp (bad) inc xor xor ljmp inc or lock mov test movsb mov pop mov inc (bad) hlt insb imul movsl xchg subl fwait pop pusha sub xchg (bad) int push decb mov je mov and add adc mov or nop add stos xor mov aad (bad) and shlb pop ss test push cwtl xor mov sahf push jne enter mov popa sarb idiv ds pop jp dec aas outsb xor dec (bad) cmp (bad) sub cmp dec test js (bad) stos imul pop sub out jnp sbb mov insl add cmp in xlat adc lret (bad) xor pushf add hlt loopne sub mov mov mov scas push pop mov mov cmp in or or push xchg (bad) movsb push mov mov aaa push lds xchg or xor sbb loop,pt ss cmp xchg dec jo pop stc enter idivb mov add fdivs mov jo and sbb pop les xor xchg inc sub xchg cmp cltd dec andb sbb fnop add in or sbb loopne and test mov inc enter lock or out xchg les fmuls mov insb mov add cbtw pop jne mov js and mov push push (bad) in sbb sbb lock add cmc push jo outsb clc mov jmp rorb add pop dec movsl addb out or inc outsb sbb in mov (bad) std and (bad) hlt and dec add adc add push shlb or xchg jne bound test fimul adc test outsl xor clc add mov movsb sub fdivr adc mov lods daa (bad) fiaddl add dec xlat popa cwtl adc sbb outsb or in sub dec push adc add jb cmovnp cwtl lahf add add and jb xchg loop add pop movsl stc mov add push or imul cmp sbb insb ss add pop dec mov rcll mov jl jl mov loope js iret inc xchg jmp add jle jb in add pop insl xchg adc inc jp adcb daa or call daa jo pop mov scas cwtl lcall imul pushl or stc add cli xchg fs inc jmp mov arpl add enter xor jecxz sub cbtw leave add (bad) stc mov popa mov nop out dec inc add dec mov cli xchg call pop out (bad) pop push mov adc dec dec mov push js mov jb cmp cmp test push push xor adc stc fsubs add adc adc xchg and sub jle decl jp add mov lock addr16 add cli fwait adcb ret cwtl mov xorl push cmp insl adc jo cld pop push adc lcall aas in cmc test ja push inc pusha mov inc mov mov or xor sbb sub mov addr16 and sbb test or hlt js add lret sbb lock int3 sub dec mov cmovno outsb insb push or sbb pop dec sub call fdiv adc cli movsl sar popa push pop xor in out add faddl sbb sub inc pop lret mov loopne xchg pop or enter adc jbe in xor insb pop sbb frstor jl mov mov ja andb (bad) int lret in in rorl loope mov std mov adc repnz cltd xchg dec lock ds xor jge jae bound test add pop pushf xchg add push mov cmc push mov lahf push add sbb loope cmp test shrl pop add adc ret cmp add lods mov incl mov mov push or xor pop xchg push push shll daa jae jge pushf sbb add jmp test data16 popa mov add jge sbb xchg aam loopne addr16 xor shrb mov sbb inc jl mov data16 push movsb sti push gs outsl or movsb cs or xchg aas adc sbb mov lock push loope (bad) ja add adc add mov xchg adc dec fxch daa inc dec ret push adc jmp pop or call andnps pop mov inc cmp xorb pop mov sbb repnz rcll jle cmp in lods ds cwtl scas shll xor add push jle nop sub or sub imul sti rclb add mov js push push mov ljmp orl xor sahf add arpl sbb xlat sub add mov sti enter adc dec and mov loope nop cwtl jmp adc je orb or repnz mov call dec jnp dec mov add cwtl mov (bad) pop or mov add dec mov lock sbb push mov or fs sarb sub sub add xchg int jecxz xlat sahf inc adc add int3 add push fcompl adc or pop mov xchg push jno dec mov jnp cmp dec cmp mov repnz cwtl dec add (bad) test hlt stos scas push aam jl pusha test fisttpl jmp jp incb mov mov loope inc or pusha int3 enter xor push inc mov xor fistp jmp jns jl mov push mov add lock mov orb or dec stc sbb push std or mov jo add push push mov nop arpl jle inc xchg adc mov jae and insb add xor mov add mov pop ret dec rcrl jno pop inc xlat sub push mov jecxz (bad) add sbb adc sub loopne or jmp jle mov dec sarb dec and or repz stos mov ficomp xor xchg mov inc pushf add sub movsl enter test cmp adc fildl add jle add pop aad jge jl lock jg or jnp xor add shr out in mov scas jle nop out adc xchg cmp cs add stos out push pop cld push add shrl mov push adc sahf mov dec fs push cld addl adcb scas lcall jae and add dec movsl divb pusha dec or fidivrl adc call loope mov in jmp ja shlb hlt test jnp sbb js (bad) fist pusha adc push nop (bad) jg add lods shr in mov sbb push adc mov insl xchg cmp jecxz nop aam xor mov lea add shl or push mov or xchg lock adc push mov test xor mov ja xchg js add stos push popa or add shrl fisttpl xor js jg cmp movb sti jbe mov push (bad) and add ret mov addl jle xchg mov and pusha adc push adc mov repnz sub nop inc addb js lret jl mov inc int3 out push cmp stos jae in sbb push mov sub (bad) fcoms dec or cwtl jecxz call (bad) mov into das xor add dec xchg pop sti das cs push xchg adc push xchg push je repnz notb xorl push int3 shrl adc mov sbbl repz cmpsl int3 inc xor movsb add lcall add add js push lock adc fwait mov (bad) clc insb jns push cwtl in adc jmp inc push fninit neg xor lcall fsubrl stos adc popa push xor dec add (bad) sti je in outsl ss insb xor mov je mov fdiv dec mov add subl add mov into rorb mov (bad) fnstcw fadds add in mov int sti add mov test je sti xor enter fwait movsb orb sbb xchg cltd add jnp mov cmp int mov dec cmc ja or xchg stc add push adc jp mov adc (bad) ja push rolb mov loopne mov pop cmpb enter mov xor in add push into call adc sub xor sbb stos push in inc jecxz xchg test mov pop mov add push xor loope add (bad) sti jge divb adc mov enter pop inc adc jns jne jecxz push movsb clc adc mov xor jo dec testb sbb outsl xlat inc clc lret mov fs in ja jp addl rolb dec fistl cwtl jg es pushf sub push ds out add jl mov call leave stos adc mov add cltd mov inc mov inc cwtl cld push addb fsubs mov cmp nop adc and test int3 sub mov fwait je in xchg cmc lret imul fldcw je fsubrl jmp mov inc or fbld les dec xchg cli clc aam rclb push add loop mov mov xor loopne in js sbb sbb fsts movsl loopne cmp addl stos pop loopne and lock add adcb push inc mov mov and push cwtl sub mov sub xchg (bad) loope jb pop and sub jbe push test jp mov push call xor mov adc addl lds (bad) fiaddl outsb mov popa cmp adc ds dec adc rol or and or xchg int3 enter es push dec out mov sbb pusha jg sub (bad) data16 daa rolb in add inc dec xor loope jmp dec (bad) call pop fdivr (bad) xor xor cmp repnz xor mov mov lea inc shl mov iret sub add add adc lea fisubrl inc in mul cltd mov lock sbb sbb push test mov xor jmp (bad) dec lea xor sbb dec dec jp adc push add add xchg and jo,pn leave or xor dec push cmp or push outsb xorb add xchg sub call aam mov and and dec or jmp cmp add push mov push push outsl cwtl mov add jo sub pop pop rorb push loope call lahf sbb addr16 mov mov and leave cmpl clc mov jle mov xchg ds cmp insb mov les sbb jge repnz jb dec and pusha in loop popa mov gs popf pop fdivp xor in mov add fs stc mov rcll insl enter daa push lcall xor cld test push dec mov aad xor jae jle sbb jb fdivrp loop mov add (bad) js and xchg cmp jl outsl repnz cld out cwtl dec jo adc into xchg dec pop mov jns roll pop movsb ret sbb dec nop bound rolb cmp test dec lret dec or push loop imul mov xchg push mov daa sub xchg xor jmp sbb inc xchg cld enter adc pop test in mov nop js jl xchg push add or inc sti fisttp loope adc or dec mov std iret xchg adc jae inc inc dec mov jbe push addr16 and mov cltd fstpt add dec leave sub xor adc addr16 add mov add adc rorl mov mov add sarw fdivs or sbb mov xor inc outsb xor pop aam add aad pop mov leave les and pushfw (bad) cmpsl jl xchg dec and bound pop int3 or gs xor mov adcb loopne xchg add jne jecxz aad rol dec ror mov ds sbb nop out (bad) js add data16 mov insl mov and in mov test aam fwait dec sub xor xor aam loope mov cmp test or adcb xchg mov call sub idiv mov jl fisub pop gs push jae mov jnp push rolb or sbb lock add or gs test add std scas sub or ror add sahf sbb mov les gs xchg lock lock cmp and and ret xorb mov pop adc mov fdivl inc mov out or lfs mov sbb pusha ds movsl cltd push lds xor push mov and fcomps popf je cmpsl roll pop mov inc mov lret lods dec inc adc adc nop xchg pop (bad) out xor gs cmp jle and mov pop or inc pushf sbb xor jbe sbb push adc in mov mov sub or and outsl jge ja addl mov pop subl add cmp push cld pop imul or cmpsb adc add mov leave ss popa sub jnp mov sbb lds xor outsl push mov push jge pop cmp pop inc mov andb dec mov add imul in sbb pusha sti loopne loope pop mov mov cwtl andb push lret sub int in daa jns shlb cwtl stc rclb jne xor push test push jl (bad) lock insb addr16 sub loopne,pt sbb test and and rol push add sub push adcb outsb pushf pop jnp mov and fbld repz jns fiaddl xorb out test xor icebp pop mov fs or push pmaxsw add or cld cmpsl cltd sub dec into jno insl clc cbtw or sbb mov dec (bad) adc ror sub inc or out inc sub push mov lock cli mov sbb (bad) push dec (bad) scas inc mov cmp add shr dec cmp mov orb pop loopne out add dec mov inc dec jecxz stos cmpl popa imull adc and nop or or sub adc push (bad) icebp decl mov icebp out xchg inc mov cmp hlt xor fs sub shr clc lcall dec dec push dec jo (bad) jb add mov lds cwtl movsb sub mov loope movsb xchg cmp sbbl dec cwtl ja cmp sub cmpsb out enter mov dec xchg push adc xor fist mov adc mov lock (bad) add push push das data16 pop sar sub adc push call jb mov pop adc or add out orb dec xlat in push sbb and movsb clc xlat sbb mov dec mov mov or mov into test mov lds jo push inc adc cmp lods cmp out ret ret add push pop xor inc std mov xchg sub push ja loopne xlat in jo es dec or add mov shrb test rolb scas or jno fsubs inc fstl icebp push add adc insb sbb lods (bad) and in nop and dec repnz fs (bad) mov cmp repnz clc xor adc dec outsl push sbbb andb mov loope add into pop repnz fs add insl mov rolb pop outsb sub push push cmp pop stc add sub push and and and mov or adc mov imul and mov or test push add pop mov lds push and add out jg add test cmp push data16 mov or sti out sub adc mov xchg rcrb jo and es movsb cld mov rcr sbb sub es xchg cmp dec faddl xchg enter sub movsb add inc out and call xlat xor adcb push and pop xchg add pop es call mov cwtl xchg cmp xor mov loopne sarb add pop incl insl (bad) push and mov and movsl js push pop adc iret and sbb mov lahf lds mov push fcompl push add push and xlat push adc cmp mov xchg fsubl dec xor dec push mov fwait loopne (bad) inc std add (bad) fmuls add jmp jbe add in ror xchg cld sbb or cmp in fdivr cmpb sbb jbe cltd sbb enter add ljmp test xchg inc mov insl xchg je stc xchg mov xor je cmp movsl addr16 pop lock jo xchg xor (bad) or inc sub cwtl sub les es sbb fmuls aam push or cltd loop pusha pop pop addr16 ret int3 mov push xchg dec dec mov adc sarl test pop xchg popa pop dec xor test cmpb sbb mov or sub movsl (bad) mov dec clc scas lcall (bad) lock add push xlat lods std int xchg add aaa stos mov add ret xchg adc mov outsb and inc cwtl mov out movsl cli loop jnp xor xor arpl les pushf dec hlt mov lds out inc jb add jmp inc outsl (bad) rolb aam xchg imul mov decb mov cmp imul sbb outsb in aas jae add ljmp or hlt or or push fisubl fsubs mov sub nop pusha sahf add test mov and sbb insb and insb add push and test into sarl add stos mov jo add add adc or in sbb out outsb addr16 lods jo xchg inc or and adc test in test fadds cld fistpl sbb or sbb fcmovnbe ret addb jo,pt add mov push orb insb popa sub inc mov xor mov or cmp clc rolb jmp int3 movsl iret and sub imul orb nop sbb rolb ret push (bad) scas push shlb xor mov push pop jnp add (bad) jecxz insb imul adc jl js into nop lds in aam push test addl mov xchg and (bad) sub add rcl in adc xchg mov or xor lods js push ds push dec add adc mov add pop dec push adc and icebp sbb sbb mov add cmp out adc int add jb xchg add inc sub shrb nop cwtl add popf xor and dec lods cmp fiadd (bad) cmc inc lock inc clc mov mov adc pushf xor and xchg push add pushw add insl popa cmp fildl xor dec jecxz adc jmp dec mov out pushf and jl dec cmp lods sub loopne add test lock or lret or inc pop add repz jo (bad) icebp fisttp jl js fs nop pop and in data16 or and lret daa jmp or leave or mov pop jo mov push add add adc enter dec aam gs push nop sbb leave mov and add setle loope cwtl adc cmp insb cwtl ret xchg mov dec cmc in lret fildl push pop cmpsl out mov jbe nop imul xchg push and int3 and imul into in loopne notl dec mov adc in push in pushf cwtl mov lret or cwtl and dec shl add mov add jnp xchg push mov lahf dec mov call nop mov cmp mov sbb js cwtl iret adc (bad) mov sbb ret dec test xor lcall inc test inc lods mov sbb dec insl push cmp or fcmovnu scas mov push adc and fmull pop push or lds and stos rolb out mov sbb mov add sbb outsb fldl pusha xchg popa (bad) jle idivb (bad) aaa dec pop xor pop mov jg fidivr mov xchg jle jmp cwtl fnstsw xor mov mov faddp sub test add xchg loopne aas cmp add add mov test fnstsw lea repnz cmp or add ret cmp pusha xchg fsubrl add cli jne fistpl roll mov cmp cmpsb mov add (bad) lret inc add or mov ror test add (bad) loopne xchg and mov or dec mov and adc repnz (bad) cli cmp xor ja xchg add sbb sub xchg lcall jnp in (bad) hlt pop xchg daa xchg les rorl dec orb push add in mov mov in adc leave ret fsubs inc pop out andl sbb andl or and add insl ds out mov loop cmp inc cmp jo xor pop sbb stc fisttpll orb stos popa sub movsb push into xchg inc add cs js cmpsb or lret lahf add fs jns dec sub dec pushf sbb mov adc add std cs subl push lock pop in push or mov repz std and sub jnp clc pop mov (bad) stc or ftst pop sbb pusha dec rol and pop aas cli sub sub pusha xchg stc cmp iret push xchg xor sub xor mov daa xchg (bad) push mov or mov xor pusha lcall daa hlt aad jmp popa std enter sahf scas mov mov jg clc subb lods (bad) mov adcb and dec xor sbb je add bound or dec inc adc jbe roll orb cmp and inc lcall add cmp cld inc test test jle insb jmp push stos push scas in add sahf and mov lds dec inc xchg cwtl inc or inc jecxz movsb add sub or jo dec xor cld xor dec cmp pop sub fisttpll sbb jo push lock lcall out repz rolb sub jnp xor lods enter pusha push mov jo lahf aas (bad) call sub mov xor stos in fisub sahf call sbb out add cmp clc adc popa push xchg inc loope jne inc add or enter jge imul je ja mov imul mov or xchg sub mov (bad) mov jl sub push nop lock cmpsb add inc dec adc jbe push out cmp jmp and sarl inc dec mov mov je push cmpsl sbb inc push xor test cmp mov fs pop loopne scas add je push sub sahf push inc aam int3 lods and or mov ds divl mov push loop cmp push repz jb imul (bad) sbb mov push test pushf test (bad) sbb insb pusha rcll or xchg jnp xor lock adc or inc inc loope cmp dec test sbb mov cwtl inc mov sbb add mov add mov sbb jp dec imul pop mov push push cld cmc add pop mov aas or and push sbb mov clc (bad) mov cli sbb lock jmp inc divb pop or mov ss rol or dec inc cmp pop cmc repnz pop and pusha push dec loop xchg or and mov aam mov addl and or and rcll in inc stos ja add fs lock dec xor and sub lret push popa aas push in js inc cmovo xor test lret fwait sar xchg inc mov das or call movsb or rolb pop push ja mov sub push jo pop aam data16 hlt je pop sti add xchg sbb and dec (bad) dec out roll xorl mov inc jmp cmc cmp lahf mov gs lds and push (bad) out andl (bad) lock xchg xchg loopne rol movsl pop in faddl add lahf xchg lea cmp or push fisub mov (bad) ja pop push test pusha in std sbb and les popa mov dec mov loope data16 enter loopne or testb cmovp lret jg fistl aad ljmp push dec int or and aas xor pushf push scas test sub rorl lock dec addl aad decb add cmp jmp fmulp or jl and adc sub adc add adc xor mov and movsl mov xchg inc push xchg cwtl or dec add push pushf ret mov shlb iret pop xor xchg cbtw mov dec pop test sbb pop aam sub push andb adc push mov int3 inc xor mov scas aam push add stc pop cld add sbb ret sbb and dec or jo xor or in int and or xchg test scas imul mov sbb lds test fwait xchg push loop add cmp and xor jne add (bad) push add fwait cmp sbb jp mov push mov pop out jmp or movsb arpl sub adc xor inc sub xchg push xchg in (bad) and les dec loopne push dec cwtl nop insb add insb xor fs in popa ljmp add iret xor jecxz nop je loope or roll push pushf add xchg repnz add adc add mov cmp sbb out ret aad insl ljmp and adc add mov and es dec cmp cmp jg (bad) mov repz xchg jb pusha lock inc dec inc lret pop and add jns aaa xor push push add inc cwtl (bad) andb cmp scas or (bad) stos sub push imul int3 add jge xchg mov xchg and rcl ret add cmp cltd inc ficomp loopne and mov inc push dec ja ds mov in adcb lds adc hlt xchg (bad) rorb xor inc (bad) out in xchg sub ds mov xchg xchg sub add mov add and inc arpl pusha sub mov push xchg lea pushf sbb jle sbb and jnp cltd inc add jb int cmp dec and in repnz push add cwtl sbb push xchg mov inc or pop push dec jae cmp fwait cld and xchg cwtl test aaa andb enter test (bad) or or addr16 lods add scas lock mov push cmpl hlt inc add test pop (bad) xchg pop sub xor push add xchg inc test mov and push add sbb ss mov jb and mov dec in insb (bad) mov xor dec pop cltd and sbb mov popa and imul jb mov xor cwtl cmp xor leave mov lods mov jns out pusha sbb inc aaa mov xchg push inc in scas inc push xchg jg fs pop push and add jae mov sub dec scas cmp lods (bad) pop push dec into cmpsb test xchg or cs or mov sub adc popa aam xor out shll cmp xor (bad) jp adc sbb adc mov enter sbb lea popa or mov xor cltd dec cmpsb cld add add push mov and adc jnp or sbb scas jl mov dec adc test jge or xor sbb sub sub in add (bad) sbb mov cmp shlb cmp roll cmc jge adc jmp or jl jge adc add and test jne jo pushf je pushf mov test push sub xchg add dec je pop in fldl inc sbb mov adc fiadd inc jnp mov insl or test or insb sbb mov push iret je (bad) sub (bad) imul movsb jp pusha mov cwtl mov cwtl jbe rol clc fs or xchg sub fdivs leave add mov pusha mov inc inc add cltd mov pusha or icebp sub push xchg inc mov es lcall (bad) sbb xchg add (bad) mov push ds jo and pop js shrb inc xchg dec addb xlat mov test or push clc xor (bad) xor mov dec iretw dec jnp mov and fdivl mov mov nop into mov les xor mov pusha or cmp xor loope sbbb pop and test cmp js add add push jecxz and push mov add mov push clc cmp add or popa decb and (bad) (bad) mov (bad) dec nop (bad) inc and sub lock stos movsl push in sbb jecxz loope pop test movsb or sbb push adc add loopne cmp xchg xlat nop or push pop add sub in xchg mov mov mov push push xor sub lea fdivs js daa cmpl fldl rolb out iret rcl inc sub push push pusha or nop mov repz adc leave (bad) shl or cwtl loopne sub ja mov adc adc cmp pop nop clc dec out aas jbe push sub and mov sahf gs xchg sbb sub frstor fcoml aaa pop jg add pop add xor dec or idivl dec mov sbb add jmp mov dec leave insl cli cmp pop xchg sbb mov xchg lock fiaddl inc add nop sbb jno es sub add divb test sub test and cmp loopne sub mov inc jl pop push dec cmp mov xor dec push inc push sbb or push push adc test mov mov mov inc cmp dec popf sbb aaa lock hlt mov mov dec fisttp adc cmp out imul es sub cwtl dec push cmp dec je loopne mov mov mov jo pop or mov test (bad) into xchg sbb testb sub xchg addr16 or cmp and daa shl pusha pop fadds dec dec leave jbe xlat push pop cmp add push ror fucom push popf adc dec es rorb outsl cltd and in adc inc and add sbb and and add test add inc loope push lcall mov sub cmp in jns movsb js shl pop jecxz cli inc and mov cmp adc lock pop or mov loope cmp test push fdivrs cmp sub pushf lcall sbb inc mov push sbbb jnp and mov add dec fistp dec std aam add push je es sbb pop jnp repnz push pop xchg into (bad) and addr16 aad mov inc cmc add (bad) push nop in or mov dec jne pop add or (bad) sbb add lahf mov push add sbb xchg mov andb pushf add dec repnz mov daa xor or cld push jmp inc nop jmp mov aam idivl mov (bad) pusha js adc fcoml aaa mov mov fidiv fisubr sahf and repnz in loopne fdivrs xchg jno xor imul or add push icebp sahf sbb hlt (bad) add lds inc adc xor lea xchg cs push push hlt and jge mov cmp test lahf jle sub fsubrl and pop lea pop lods fld and mov cmc push test sbb jns std push dec inc jno inc dec lock inc mov mov popa push or mov fidivl pop rorb mov jecxz add sub adc mov cs mov jno inc cmp xchg mov adc sub (bad) (bad) test adc test mov push js rolb cmpsl adc xchg inc adc loopne les in mov sub out imul add call xor incb repnz xchg adc test std or jecxz add fstl lds cmp in mov or (bad) cmp paddw jl fnstenv mov and fimul adc pop or cmp add sbb push mov mov iret xchg std jo adc add or add movsl flds sti cmpl dec int3 sub xor or lods cmpsb jb lds test add sbb add in ja mov xor xchg (bad) lcall andl std aaa test stc or clc mov je and movsb cmp mov pop push lock ret inc sbb or or push push mov pop mov adc iret adc cmp jl (bad) mov cld add into mov add inc jae adc bound mov int3 xchg adc xchg sub ljmp and fs cld or mov or fmul push xchg lahf mov jg sbbb scas mov dec lgs add pop jg mov adcl push pusha std or add scas aaa mov inc mov fldt data16 and scas jne enter jno,pn mov icebp mov je pop push aam aaa add or inc sub add mov add insl inc divl dec (bad) jns mov adc xor mov lret outsl add daa rcl sub andb mov in cltd mov or sbb dec shrl mov daa pop mov test dec inc shll pushf sub add subb pop mov or in lahf push imul cltd lcall mov inc mov mov cmp mov jmp loop jp add xchg ret fstps add push ja add sbb iret add xchg mov enter add xor or push cwtl lahf int mov out cmp pop daa js lock mov mov lock jnp cwtl pushf mov jg das adc js test xchg nop aaa lock xchg hlt scas pop cwtl xchg cmpsb aas add xor or les scas push or pop sbb mov test jae (bad) jnp add mov mov das lahf pop inc add lods aam jno mov mov and mov lahf jbe faddl mov std ss cs dec insb mov xor inc int dec push cmp mov cmpsb push in and sub mov mov xchg add jnp adc andnps hlt mov cmpsl in dec test nop cmp dec cs enter push lods dec fcompl mov mov sub jae pop jnp push or and mov push daa jno xchg jmp in test lcall lock (bad) lret xorb test pusha mov add adc rorb pop jns lret aas pusha mov dec add fbld mov mov cmp mov (bad) or jmp jge enter and (bad) push add aad popa setne mov fcomip add iret (bad) lea mov js test orl loopne scas or sbb vandnps loop fcoml repnz mov stc pop mov inc push (bad) (bad) ja jo out (bad) clc pop test rclb les mov mov xchg inc and xchg or sbb leave or mov and pop test outsl je xchg ror popa fimull push cmp jns cmc inc enter pop adc lds mov pop add (bad) ja add lahf mov inc and shlb sbb dec fild call inc sbb sbb add sub les jnp jbe xor and pusha scas pushf add cmpsb fwait xchg cli add fldenv clc into lock fstpl sbb jo pop dec fcompl push lock sbb push fildll mov ror mov jae ret or clc fwait movsb lock jbe push ljmp and pop enter fcomps mov int cmp roll pusha sub xor pop jo mov js cmpsl xlat or sbb movsl cmp or mov jl jg lods cmp add push mov nop das sbb lock mov add lock pop sub sbb sbb dec pop pusha movsb rolb lret push xchg add xchg or popa and loop (bad) and xchg call (bad) lret mov pop jp mov push iret inc je mov test inc in jnp xchg ja or and or loopne push nop xor xchg andl lea mov in pop addb sahf je fs mov dec popa or (bad) add inc fildll and fstl dec popf sub and fisttp cmp adc or cmc jecxz inc jae mov or mov movsl mov loop pop inc push test lods mov cld cmpsb in popa add pushl mov pop je push cmp aas arpl push mov cli inc loope sbb std seto jb or test fidivrl pop dec clc stos imull push and lret jmp pop sub fs xchg clc les mov les sub inc xor push cmp aam inc ljmp nop dec add cmp test roll shrl ret xchg mov add js outsb xor and (bad) aas inc rclb mov and faddl mov insl in daa sbb xor bound sar xchg cld push shll fdivp xchg jecxz xchg add hlt stos and loope ret lock cwtl mov sub dec scas dec or std loopne pushf test fisttpl add aaa outsb and add mov lods push mov bound call push clc push fsub pop add mov shlb nop aam pop and es (bad) shlb or je xor xor movsb enter outsb jge pusha dec in xchg pop adc pop mov lock scas cmp lods jl or xchg push es inc addb adc data16 lahf cmp test or nop fs and mov mov and nop dec mov je xchg fsubrs push dec mov cmp cs lock fiadd inc test add test gs push sub or add inc add dec rcr sbb xor repnz mov adc xchg pop int3 and push nop js cmp leave test or (bad) lock add cmp (bad) mov data16 jp add sti xor fsubrl add rcrb adc cmp inc test js incb pop je fimul outsb and shl adc dec hlt xchg sbb jo jo cmpsl (bad) mov es lahf cmp imul add call outsb fstpl mov pusha je and sarb push inc ja cltd adc mov dec loop adc adc or std pop outsb cmpsl mov add or in inc inc jbe (bad) dec add xlat pusha jns sbb inc rclb cmp sbb inc fnop dec (bad) adc xor bound outsb mov cmpsb push (bad) lods mov and loope adc or or leave rcll fisttp inc ss add mov pop jecxz pop rorl mov lods jg mov adc inc pusha subb dec fs je add (bad) pop leave loopne push test les add inc sub dec lock push dec test or in loopne,pn data16 cmp push jmp out and or cmp sub les sub movsb ficompl add rcll out pop mov mov jne push mov xor inc adc fadds enter into pop test (bad) popa push jl xchg jmp or lds or scas andb sbb lds push push icebp sbb fsubrl push and outsb push sbb outsl mov cltd xchg and loopne or dec xchg adc out and adc push sbb (bad) xor inc int3 xor cwtl adc cs les pop add dec nop je push leave or dec xchg inc les pop add add cmp sbb frstor dec dec test or data16 xor xchg daa enter push mov sar incb (bad) (bad) insb add ja ret and cwtl add cmp jle cmp fs add push push scas pop lds add sbb xchg push nop cld mov or movsl lock xchg mov shr (bad) repnz lock mov out add (bad) or popa jns add testl roll sub roll dec jg or jmp pusha or jl sub addr16 inc mov stos push stos push js adc movsb (bad) faddl lods les jnp in and cmp dec fchs shrb outsb pushf or push ljmp jle xor xorb push movsb add lock or sub xchg cmp and add and add add lock inc in mov add push out xchg insb add fsubrl clc aam mov mov jmp push cwtl push jp xchg icebp addr16 sub outsb daa (bad) sbb xorl cltd (bad) or pop add mov mov xor call mov lock lds or mov dec or in (bad) mov sub shrl mov sbbl push test cs mov sbb test push repz or mov cwtl in repz shrb inc sub xchg popa pop in in jmp in sub lret inc xor pop dec xchg in sub andb into test es movsb fldenv pop lods hlt cmp cmp sub fsubl daa and or pop mov pop or std les add push lret jnp pop arpl sub es rorb mov lock jbe dec jmp rcll cmp (bad) sbb clc push sahf add mov (bad) (bad) or pop js iret or fs fst or fcompl xchg aaa mov mov arpl daa bound xor push nop xchg loopne in push lock popa jg les mov dec stos hlt arpl lods push cld mov or sbb lock mov cwtl pop add sub sub mov add add int imul js cmp lock pop bound cwtl add jae adc pop mov add push int mov nop pop inc cmp xor orl pop fiadd fs xchg ss jne dec or pusha ljmp cmpb int inc sub lret push les inc inc jl movsb leave cmc add sbb xor or push lods das aam test mov jns cmp icebp sbbb jmp lcall sahf int3 and imul inc add leave inc inc push lods or ds jmp mov sub jno dec jnp cmp xchg jl enter xor incb daa sub test xchg xchg movsl test dec cs ret enter or add mov fucom xor (bad) les sbb add mov out movsb (bad) nop popf xlat test add pop js and add pop adc push data16 lret ss push xchg xlat jo leave mov push lods xor add lret push rol jb cmp leave add (bad) sbb sub cltd mov add stos sub push aas insl sub pop push add sti cmp aaa js mov inc in faddl xchg xchg loope inc or rol out xor xor imul movsb test movsl sbb add xor (bad) or repz push add xor fsubl jbe add xor les fstl and fmull add cltd shlb into cmpsb test movsl or add nop mov fild or and es test add aad (bad) mov push inc lods loop fcmovnbe jbe aam ljmp lds and aas cmpl mov stos ljmp fxch hlt sbb repnz popa pusha mov mov push sub cmpsl xor add and add mov adcb ss cmpsb call sbb jb test (bad) add movsl dec imul or xchg loopne fisttpl movsl sbb dec mov ds loope clc or lds jno push lods fs out into xchg pop or cmpsl add (bad) inc loope dec jl xchg sub addb cmp in xlat (bad) repnz push shlb inc mov dec inc xor (bad) js (bad) xchg adcb add nop sub or js divl je and addl es sahf push mov dec or push xor idivl test mov call inc inc adc lahf jb loopne mov dec cmpb add ds dec inc imul xorb orl push xchg cmp xchg jmp sub mov cmp movsl add loop dec test add test stos jle cmp xor sbb out (bad) sbb jno or insb rcrl movsl and rclb add xor in or jl out loop unpckhps inc test add in inc add pop sub xchg popf and add inc out sbb jp add push push and out push xorl rolb inc cmp nop dec and rclb and lds lret inc add (bad) cmp aam stos in and jne mov add mov call call mov daa imul push adc or xor xchg out and jo or cmpsb dec push ljmp push dec jmp stos xchg xchg and test lret ret add add cmpsb adc pop mov jmp nop push adc jns add mov add adc push cld jge fnstcw xchg mov pop dec repnz xor add int adc pop add lods cld mov and arpl mov movsb mov lods daa add and jo push rolb ds in jle scas inc subb loope (bad) je dec inc (bad) xor sbb dec subb adc imul (bad) outsb (bad) jno mov and arpl and repz add call mov dec xchg add or rol jbe or loopne ljmp add adc ss fimull gs mov push mov or clc pop add data16 push or add rorb jns adc sub jecxz mov divb add mov jmp add xchg dec test fstpl stos and aad mov in rcrl or and in stos adc push xchg mov cmp add pop addl push loopne sub into add dec les mov out mov lret fcompl fistpl jg pop pushf push or add mov fwait xchg in faddl dec ret loope mov insl cld lods pop jge add or pop pop add pop das mov mov adc sbb dec sar sub sub or leave adc sarb out xor and scas jbe jnp ja adc jle inc xchg bound leave in add lea add xchg inc test xchg paddusb mov sub xchg xor xchg pusha jne dec loope pop xor shlb sbb push push or xchg cld out add xor lods scas sub cmp xchg lds popa mov mov or sbb add out xchg (bad) gs adc jp fiadd sahf push in push or loop sbb xchg repnz add jmp lods mov jb add shll mov mov lret (bad) je add es mov dec xchg adc lods roll sbb icebp addr16 mov cmp jo mov out clc faddl arpl lret gs icebp sbb xlat cli xchg dec dec fsubr cmovbe jno,pn add (bad) sub iret pop push mov stos loopne lret mov mov mov cmpsb push xchg jno in xor pushf add data16 lret inc mov pop int3 (bad) ljmp icebp pusha in pop mov lods push xchg or sub add jle push rcll or aam fwait lea cmpsb aam add int3 add add iret fidivrl movl add adc lock stos leave jo add lcall lods test xchg jmp inc xorb test sti xchg and shr mov mov popa scas nop pop lock ret push mov nop cltd sti sub loopne test and pop mov mov mov adc jle add xor push lret dec iret inc sub xchg and (bad) mov adc jnp mov andb dec adc jno lahf xchg inc pushf jp pop xor sub lret (bad) jecxz pushf hlt add fs mov xchg mov bound inc mov andb adc rcl adc dec adc jmp xor enter arpl out mov inc dec cmp cmp lcall jecxz inc rclb sub or int3 test (bad) sub cwtl mov sub add adcl mov and iret dec push call mov sbb mov (bad) aad movsl adc into add jmp sbb es orl mov cmpsl (bad) inc xor shll rcrb or sub dec pop pop pop pop frstor add sub sub add insl inc and cmpsl sub push or lock dec imul add fst jb adc jl xor pop mov pop pushf fldl shrl int lods mov mov outsb out jo inc jae add leave out jecxz addl fstpt mov mov xor mov mov pop pop test xchg inc add adc push inc mov sub xchg inc xchg push or and push sub mov sti insb pop or pop sbb int3 cltd mov subl xor or add pop test sub pushf nop lock adc pop xor loop pop cltd leave pop jmp orl repz mov mov nop inc xchg sub xor adc mov test call push sub inc aaa bound mov or xor fnsave pop shlb loope inc pop push shlb jo xor cli push adc sub jp lcall mov sub and ds push adc xchg lock xchg sub cwtl pop lcall andb out adc icebp mov xor or pop inc inc sti ret push hlt shll or add dec out inc or dec add movsl test (bad) in imul pop shrl in mov sub addr16 jno dec cwtl adc or call mov rorl push sub sub sub cwtl sbb in sbb fild outsb out mov and nop sub adcb (bad) push test or fbld dec cmp mov lock add add popa mov inc inc (bad) mov sbb xor push pop sub sbb or xchg and xchg and push and ljmp aad insl hlt mov push xchg add sbb sub and scas inc cld call cltd jo movsb adc cmpb call mov stos sbb push adc stc and mov push (bad) nop inc js add or sbb add cli orl cmovs cmp outsb sub xchg add push jge test dec and sub xor jl movsb mov add shl ljmp add dec lods scas inc mov xchg pop shll jg fnstenv jl pushf sub sub adc mov arpl mov ret sbb jo leave add pop push inc cmp and imul mov fwait pop jle mov mov movsb je add mov xchg xor or adc imul push jl mov adcl ret pop movsb add or adc test test push mov xchg pusha mov pop in ret test push enter mov fsubl jne adc test inc ljmp hlt xchg loope mov adc sub pusha cmp pop or (bad) mov leave cmpsb push inc xchg pushf test sub aad es arpl xor les pusha ret ret mov sub leave das lods sub (bad) push rcrb mov jp add push inc add xchg add fistp adc add sbb cmp lods inc stos push mov js sub mov aam roll jecxz repnz pop dec adc mov sub test bound mov or dec shrb rolb fmul or jecxz ficomp mul xlat lods mov xor pushf or negb fisub stos xchg (bad) pop add inc (bad) adc and (bad) dec mov or out add pop call xor rorb push or xlat in gs xchg add ds int3 and cs push xor xchg jb pushf ja clc mov imul sub mov push jb mov xchg mov lods lock imul and clc mov add (bad) jl (bad) rol pop outsl dec hlt in mov add jo pusha fwait cwtl mov ss lea test or add mov add aaa ja xor aam lret push dec adc mov mov xchg es xor jmp add clc sub jge (bad) lock mov rol push inc xor push add pusha jns add test sub test daa fwait xor call adc rolb gs (bad) adc add bswap jecxz loope push lcall add test cli mov pop addr16 pop arpl shlb push or dec dec mov and dec mov sbb cmp mov add daa repz inc adc jle push pusha cmp loopne popa sub and aas pop je test sub sub xor adc rcrl sub (bad) jb dec dec inc add (bad) out mov sub cvttps2pi mov mov push mov mov shrb sub (bad) jl (bad) xor jne inc repnz xor insl pusha rclb push cmp scas inc add popf push dec pop dec jp sub (bad) jnp adc mov pop fnstsw fcompl and mov data16 bound xor shrl (bad) push loope scas mov push sbb and subb inc hlt mov mov (bad) jmp hlt das ret add pushl add xchg inc mov pop or inc add notl inc outsb fnstcw gs or cmpsl into mov int3 or iret mov add not sahf out cmp test or fidivl inc inc in rolb in xor loop dec sub je popf jne pop push adc andb dec xchg and sub sub cmp add adc pop pushf or mov cltd or xchg push sbb adc out add dec push ret arpl pop xor sub adc insb jmp popf fld mov and xchg adc or stc dec cmp xor inc mov xchg push mov xchg int3 fwait xor les add (bad) or sbb mov add imul push int3 pminsw test repnz mov dec rorl test or stc and mov leave adc mov push addr16 mov nop or adc mov cld ljmp iret mov mov sub pop add jecxz pushf add popa rclb lcall jo jle adc in sbb sub xor mov mov adc scas leave nop aas inc lock xor rolb sbbb push dec push xor arpl test loop and cmp test cwtl mov fimull fsubs fmul jae,pt shrb jne pusha pop mov movsb mov notb mov jecxz nop mov jno mov dec mov inc xor (bad) out sub test (bad) mov mov fiaddl mov lods cmpb pop gs sub pusha mov push imul pusha xchg add popa sub (bad) adc mov sbb sbb mov jmp xor test es or sub dec insl inc mov or xchg pop cmpsb lcall je outsl dec sbb add jbe in push clc sub inc push dec jge and push cwtl sub daa or flds and dec punpcklwd or jmp test cmc in subb sbb add sub stc pop sti jno std div cmp (bad) popa inc mov mov std addr16 xor mov add xor scas in mov pop pop arpl dec inc add jb ficompl dec mov shrb in daa pop sbbb add cmp je jb mov (bad) scas dec inc or dec divb push out test aam inc addr16 (bad) mov jp cld test mov adc adc pop jb movaps jne iret loop or xchg addb mov jb test test add fistpll faddl pop cmp cmp movsb lret jmp fs and mov dec sbb cwtl shlb or lret and sbb sbb or xchg bound push shlb add pop cmp cmp ja pop stc pop (bad) inc dec push sbb sbb add xchg mul or mov (bad) sti icebp inc xor test sbbb sbb divl enter roll dec sbb cmp lods outsb call bound popa sbb lahf std stos aas mov add add inc sub lds add loopne xor testb inc dec lcall push add es rclb sti dec adcl mov and adc lds in inc sbb ds dec dec mov add dec in or xor cld sub hlt nop push add fs xor lods daa int3 inc andl jno or jo outsb sub sub or fstpt and mov adc cmc rcrl inc adc mov lcall xchg cmp fadds adc faddl add in fisubr mov sbb mov leave mov and sarl insb push testb cmp std jl enter jo mov lds add dec cwtl mov push cmpsb sub aas pop mov or adc jmp nop dec sti push out adc xor sbb mov cltd clc stos and pushf xlat push stos sub test sub jnp rcrb pop fs mov cmp add pop inc (bad) cltd and pop xchg ret and or sbb (bad) sti sub inc mov mov mov push lds mov out xor es xor loopne xchg mov mov pop jecxz rclb (bad) mov fwait push addb dec ret mov or mov or and mov mov mov fnstenv scas es aam add bound ljmp mov shrb jne call cs and int3 jmp mov stc adc and imul ffreep adc add inc mov lods pop test mov or pop jle cwtl fidiv push not mov pextrw pop add adc dec dec in ret adc cld pop add insb or sub fbld fnstcw sbb adc xchg (bad) mov popa insb adc dec jno mov cld jno loopne fcompl xor pusha mov mov call adc sbb subl sbb dec mov adc mov stos arpl mov aaa push inc sbb and dec or lock hlt mov xor rcll cwtl mov push push sub lahf or and rcr ljmp negb insl sub xchg jbe call add jg loope clc repz jecxz push push (bad) notb pop push and lret rcl add mov cmp mov cmp mov loop nop dec mov add push ja ds add adcb (bad) push inc pop xor gs fs cltd popa or repnz cmp xchg jle test fmull xor add fwait xchg sub je mov or and ljmp mov insb dec pop roll xor pop imul pop jae add push jg fcoms adc sbb xor xor pop outsb sbb ljmp popa shrb and nop xor in push dec mov pusha mov sub jle and adc xchg ds sub jmp cmpsb daa mov mov lock push into bound out mov js add fisubl mov xlat lock dec push (bad) sbb mov pop adc xor rolb insb das adc movsl mov int insl (bad) (bad) cmpsb hlt sbbb aad sub ret add xchg pusha mov std test xchg popa scas mov jg lods adc rclb in clc stos sbb fdivs cmp cmp sbb stos sub push rcrl push popa sbb push rcrb sbb mov push sbb divl mov adc js dec stos hlt pop lock mov sar and mov fwait js pop add and out add imul or pop (bad) sbb (bad) add sub mov mov mov add jnp icebp aam push adc popf mov pop pusha ss jg sub cwtl dec es jb pop in add sub pop je call insb dec mov lret cmp push adc jl aas lcall add add pop adcl cwtl pusha xchg out nop outsl mov negl add inc fwait rolb loop sub push cmc loopne push or jl fs and scas fadd cwtl jno jae (bad) insl cmpsl popl ret inc nop inc pop insb fs adc xchg or jecxz das adc xchg pop jmp xor enter push mov push sbb and (bad) testl popf sub dec sbb shlb mov push sahf and (bad) pop add scas pop sbb or and sbb addl pop fstpl mov and mov xchg inc push cmp jb mov (bad) cmp sub lds push dec mov push inc mov frstor add outsb lock in mov xor fldenv and mov mov int3 pushf popf and aas leave cmp loop movsb es add scas (bad) fmuls adc daa insl add sti ds mov lret mov dec mov mov push add lahf and cmp mov rclb mov pushf xchg mov inc bnd and sub dec loopne,pn hlt xor mov or je sub add bound cltd ja adc pop xor add jl jns and daa popa jp (bad) and rcrl cmp in shrb and pop mov imul lock inc in pop test push sbb jg add loopne add cmpsl subb jo jnp adc fnstsw pop lret fs addr16 in out xchg roll inc imul add mov mull rcrl mov inc pop cmp dec add sub (bad) enter dec je and mov or xor xchg mov loopne push (bad) pusha dec sub insb mov adc fwait pop lret in or shlb fildll add fisubrl jmp sti mov xchg jp dec cmpb push jg push pop or insb push inc sbb out adc mov or (bad) sub jo mov sub pusha or movsb imul push je stc inc add mov loope addl mov fsubp push int packssdw cmp or dec sub mov add push addl pop xchg jmp push mov jbe in jecxz sbb xor dec cmpsl or dec lea adc inc mov mov mov mov sub sbb inc data16 mov or rsqrtps or inc xchg pop mov out ss inc test push (bad) arpl pop sub mov sbb nop lods testl add cmp and mov and push lret insb add addr16 mov xor or pop inc push mov loope and mov mov call dec xor dec pop xor fwait test les repz rcr xchg add shl addr16 xor fsubs clc inc sbb dec rcrb cwtl push mov cmp (bad) adc mov bound add and cmp dec outsl push jle in xor push mov shl loopne jmp fmul (bad) sbb mov xor adcb inc adc es jge into pop xor les push dec mov sbb mov dec iret jo pop xchg add rcrb sahf jno int fsts cmp (bad) cmp lea push into add sbb fisubrl cmp adc add cltd mov ja mov dec sbb jmp sub test loopne or clc ljmp call movsb fist stos imul aas repz pusha (bad) xor mov mov xchg pop mov aaa and loope inc lret vmwrite push push xor adc jae cmp stc (bad) and add fsubs sbb test pop fs jo xchg xlat add scas popa ljmp mov mov sbb popf lcall cmp andb jp dec mov (bad) mov into cwtl fist and cmp mov popf pop loop sbb dec inc jle sub adcb sub lock mov mov les sub lret adc mov test or adc fld mov and add inc lock imul sub loope ds ret jg push adc add mov mov inc nop xor xchg or cmp xorb mov fisttpl pop dec dec push jge adc clc lea dec div js sbb int cmp and pop (bad) sub (bad) sbb sti sub andb test mov dec push push mov mov cwtl or sbb ficom push (bad) adc push add cli add xor push daa adc push les shrb cmp popa stos sub sub enter jo cli xor fs cmc test sub rorl lret (bad) xor icebp cmpl and pop orl js or mov add in aad inc and ds and sbb xor inc int orb ja sub fs mov push mov (bad) mov mov add adcw insb xchg sub lods notb aad fadds or addr16 iret jo hlt lods rorl cld add mov loope icebp mov icebp xor adc jb,pt out or and add xchg cmp jb test add jge dec push pop adc mov rorb fmull shlb les ret or add scas cmp push cwtl add dec popf push mov push inc push sbb or inc pop repz cmp xor mov jno ror jb xor adc mov jl inc (bad) and push in cli cld arpl xorl add ud1 or fs stos enter xor cld js push cmpsb leave lret into aam cltd pop mov loop jecxz mov adcb (bad) mov lea aam fsub and lds insb sub lcall fcoml enter inc cli push mov adc stos jno mov mov icebp xor push int3 lret rolb xor sbb sbb xchg adc cli add pop std mov es xor mov stos roll xchg sub lock pop push nop lock pop dec adc insb adc mov cmp sub cmpsl sbb fwait add in clc adc push pusha mov ret ss add jle gs js (bad) and into jl sarl pop add pop mov or jbe pop mov leave xor lock rcll call ficom (bad) adc jp ror or jne,pn ss push nop lret push and and push inc add stos out or lahf pop add decb push add mov cwtl popa adc add add sub nop xchg add aas xor rcll mov popa imul fadds or test or leave mov cld ret nop fsubr cmp popf mov add std xor push fsts mov jl cwtl rclb mov cmp push mov enter icebp pop mov jb mov or in xorb cmc in shlb jg gs hlt mov ror inc push les xor je cmp in pushf push xor push cmc xchg pusha je out (bad) addr16 (bad) lock repz sbb add jg and imul aas out icebp insb sub sbb subb mov mov add icebp xor xchg or or inc orb movsb mov dec cwtl mov add cmp sbb inc aad subl push popf xchg push js jnp sbbb aaa or mov xor jnp or pop add jo jne cmp cwtl adc sbb or lock and fistpll mov clc leave lock imul dec cmpl mov shrl push je loop,pn jg nop mov xchg add pop in pop clc and (bad) lock lcall inc xlat daa xor push add mov gs aad or add es fsubp add dec cmp pop mov xchg pop nop in bound je jecxz add adc fsub dec mov or lret add call or (bad) jmp fmull (bad) xor inc xchg inc add push pop sarl insl addl cmp dec push fs movsb jl daa movsl xor mov std ret lock shrb xchg cli mov cmpsl or adc cld adc mov pop sbb scas push bound shl movsb mov sbb mov cmp push rcrl jmp sarl sbb adc out into jl mov bound and pop (bad) adc adc cmc and outsb mov sbbb pusha xor add (bad) pop popa mov in nop sbb adc cltd add aaa jge sub (bad) xor enter inc push test repz and std les xor shr (bad) fwait adc mov in xor xor jmp test sub xchg test mov inc js test clc inc add mov nop push pop test das jmp push test add xor cmpsb adc and rcl pop addb cli push cld test repz xchg loopne dec xchg sti add or (bad) jp pop jo lods dec and push (bad) xor adc int pop add test cmp dec xor in jae xchg xor xchg mov pop inc and push and ljmp loop mov popa push out dec dec rolb (bad) jno arpl cmp jns add je lret je dec rorb mull mov cmpsl (bad) or (bad) xor movsl ror mov xchg fcoms imul and mov or cmp or sub int3 mov push (bad) call test imul add scas pushf fnstsw sub out push rcll or insb push mov xor imul xor xor pop fild jns cmp or inc cltd lahf and enter std dec cltd insb add loopne adc jb les test jl push add pusha nop jns add int3 mov xor pushf jle sub cli mov cmp push cmp mov mov mov cmp cmp sbb and add nop inc lret or sub fmuls dec push add adc js clc jecxz loope rolb repz sub and sbb xchg pop fnsave or adc ds (bad) xchg inc sbb out inc mov push xlat or add mov mov push xchg sbb pop (bad) dec scas or test dec add call cmp stos mov int3 xor dec sub add scas jmp ret pusha add dec push pop cwtl cwtl les mov jo dec xchg sbb xchg add out hlt nop lock adc jo fdivs mov (bad) out aam xchg mov jmp shrb ret jl cmp xchg add xchg out adc mov push xchg mov les xchg cs and lock scas leave mov int3 mov lret dec sar (bad) fldl fxch cmp mov or sub jl mov sbb nop je xor or enter dec sub adc cwtl loopne out xor add fcomps ret and xor test lock sub mov push or bound xor imul mov (bad) lea mov and or pop sarl fs in stc mov pop xchg clc pop push dec or pusha fstpl xchg int3 xchg aam mov xor push add pop sbb sbb cwtl lea mov push mov sbb or add test sub hlt rclb js nop nop (bad) and adc or cmpb jae,pn cmpsl push cmp lea mov xchg add loop mov push pusha add jns or mov scas dec mov add jb jle arpl lods mov add adc idivb jo lea adc jno int pop insb push test subl std sub pop or adc loopne and add cmp jge push mov rolb push fs jae or mov lahf adc adcb xor add mov call and mov lret (bad) aad cmp jo add add add lock inc inc jae xchg sbb cld xor push add subb mov dec fdivrs and dec xlat xchg mov fmull fildl sbb sti and in aas dec add add xchg add mov lahf push sbb xchg sub mov or pop orl rorl in inc shl pop and aam add and mov jle inc xchg mov repz fstps movsb les and cwtl or and fnstenv cmp jecxz xchg sub in xchg (bad) mov cwtl add mov mov push or lcall sub icebp add sbb inc adc sub sub add scas (bad) mov in sub add bnd jge leave (bad) or xchg cmp sub dec data16 mov pop mov cmp xchg lods dec add mov inc push mov inc inc and fidiv out add mov (bad) jmp xchg fldenv adc and and repnz lods les inc fidivr std cli enter and adc inc add inc fisttpll clc pop xor pop movsl loopne add add xor push pop fmull cmp jno stos adc jns movsb jl adc xor mov scas dec ja or cwtl or add movsl jae add mov adc insb in cmp fdivs mov sbb mov push lcall faddl adc sbb enter cmp add int3 cmp adc adc call sbb push rol mov sbb ds stc popf jge sbb mov mov pusha add lods pusha sbb loope inc push add jb lock mov mov cli mov fstps jne dec call popl adc (bad) push rorl mov stos xchg and mov jo repnz sbb mov pusha and push push sbb fcoml andb inc or mov in sub rclb push adc mov mov mov clc jl add frstor add fs adc out cmp mov sbb lods and (bad) pushf insb cwtl mov pop out dec adc add mov or mov pusha les or cld xlat int3 add clc push mov mov mov lret fidivrl or push pop inc sbbb jb aaa jge or push in pushf push cwtl loopne or scas repz and adc xchg or sbb movsb test xchg imul mov inc in sbb xorb add pusha mov and inc dec repz or (bad) jo pusha popa add movsb scas inc inc incl hlt bound add lods mov mov pop fsubrs or xchg xchg xor adc loopne or mov in mov and and pushf shr dec xor fldt or add jbe arpl movsb sub push push mov xchg cltd rolb mov enter push and aam cs xor fmuls mov dec and xor xor pop in mov mov or jp jl dec inc push and rolb (bad) pop and or pop mov dec jo dec pop je lcall mov hlt push fdivl inc xchg je pop in xorl sub push fnstcw repz push in jo dec lret (bad) sbb imul pop fimull and xchg sub add pop adc fcomi jmp cmp adc mov sbb adc ljmp pushf xor inc (bad) outsb push jecxz xchg sbb cmpsb inc xorb cwtl xor jp dec aas cli pop adc mov iret cmpsb mov mov mov mov cmp (bad) xor push test jns (bad) or mov and mov add jg adc jo xchg add je ret xor imul aaa rorb test aas cmpsl stos mov fdivl add leave fild mov fmull lods push or popa xlat sbb addr16 and sub lret xor nop cld sti fwait jbe shrb test pop pop adc fist (bad) sub or and jl les cld call int sub add cwtl pop mov lcall xlat jmp cltd inc xchg push addb jae xor pop adc divb pop cwtl pop jbe fadd jg inc mov test or out push repz ret addr16 clc fbld cmp popa fldenv xor xlat popa pop loopne mov pushf sbb push loop and imul loop push mov jo pop lock fistpl mov xor (bad) outsl inc jne aas inc push movsb test pusha repnz xor sub pop jae sbb push push inc pushf rcll es add jb xlat popa test and iret sub enter lods stos inc jmp shlb cmp les jp clc insb add cmpxchg lahf adc fimul push push imul dec adc sub cmp fdivrs or and mov xchg dec or xor test mov cmp xchg out add rclb cli jbe inc mov orb addr16 out adc or jae in (bad) adc jo dec push push popa jo mov cmp inc fs cli ret shrl enter inc and cmc pop and in cmp rolb xchg add sti adc add inc je loop lock add ret xchg test cmpsb aam or lds pop push out push jl and cwtl push push mov xor js jns aam mov inc in notl add or mov push pop stc test inc xor fwait dec xor jno aaa xchg add les xchg andb (bad) inc repnz in adc inc add jg cmp fsubrl in mov mov stos ljmp call mov movsb call lea or scas cmp stos sbb push xchg jo in sbb ret mov int (bad) repnz (bad) mov hlt xlat adc sbb sbb loopne pop bound clc mov sub adc js adc add cmp dec sbb jl leave lock mov aas add push imul dec loopne sbb cmp pop xor pop call cmpsl dec repnz mov loope fcom inc push aas sbb pop push (bad) pop mov dec add test pop xchg push mov sbb inc mov add (bad) mov scas mov arpl pop inc popf cmp xchg lock dec call xchg sbb leave or adc mov sbb push mov sub push out ret xor xor sbb jle dec jb ret int3 xor cs mov les adc mov arpl mov mov mov or lods enter lock mov adc imul add xchg es dec mov ds aaa sarb icebp lds xchg mov or movsb aad dec in dec mov add test mov add and outsl arpl in add int3 xchg and les and roll xor add sub sbb mov push sbb test (bad) xchg inc dec push push or call and xchg rclb inc mov jno sub out adc cmp into adc and aaa enter sarb pusha fiaddl testl xor pushf arpl adc cltd js (bad) and or pop and jecxz add outsb xor adc xchg daa out andb movsb and dec xchg inc sbb clc xchg mov daa fcoms add inc inc outsl fs fadd jnp adc out aas cmp jne std test xchg mov jne out inc sbb inc aaa test fiadd aad adc mov fldl add movb icebp cwtl jp pushf outsl or inc sti lods sbb pushf pusha movl lahf bound add mov dec enter test imul add sub add adc in mov jo push push mov fsubrl and or push xorb cmpsl or push pop inc and jo sub decl ret mov cmp inc push jae rcl and cmp mov cmp add outsl push (bad) rcr addl popf sarl add push loope jo push xor inc sbb jg loopne xchg push and (bad) jnp sbb movb mov or mov or cmp stos subb add or push add push js add out lock lods aam dec cmp andl test jg push and mov sub stos mov push fistp (bad) cmp js pop pop rorl or mov aad jp js adc sbb mov push push sub add cltd cltd out and std dec inc cld push mov mov push std and rolb popa sbb rorb push dec call pop gs jbe stos adc jnp xchg adc out loop mov fiaddl test ds sbb lret sub mov mov movsb or dec nop mov test test jge add loope (bad) fxch add mov movsb dec add popf xchg out mov lock loope and mov stos clc jb and mov test sbb loopne adc add and out push jp sbb enter sbb inc jo popa pop mov and (bad) jo dec and test into (bad) xchg inc inc loopne xor inc nop fmulp lock (bad) rolb or adc adc xchg pop push sub out sub add mov add ret (bad) xor insb movsl test add repnz mov xchg aaa lods xchg xor sub inc lahf std sub shrl pop roll cwtl or test stos inc out or cmp xlat push nop mov call add sub and xlat fs arpl js or pop or scas adcl push dec or jge pop mov jmp movsb cwtl in fldenv test adc mov sbb add icebp push adc mov mov (bad) xor ret push subl pop or push out test ffreep outsb mov cmp dec mov lods sbb test and je aaa sub lret pusha rorl fwait push xchg shlb dec push xchg nop push popa (bad) xor push cmp push mov cltd and fwait or mov add sahf clc jmp mov lds push adc ds adc cmc sub add inc aaa cltd imul jns and in fs and xor daa push or das jbe test clc movsb pop (bad) shrb mov xlat add clc loope outsb ja imul dec mov loope dec jle subb movsl inc mov mov popl mov loope pop inc addb idiv scas add cvtdq2ps scas fcmove mov sarb sub rol (bad) and xchg add mov mov (bad) stos xchg dec mov dec sub arpl pop idivl les cmp and or or or adc out inc clc pop jns and pop (bad) push push inc lret or jmp fwait sub jnp push inc int cmp add scas dec sub lock out xchg cmpsb sub lcall mov and dec int3 push les fsub add jo adc enter mov call lea sbb or pop add lods or nop aaa or cltd add or inc aaa add nop loopne adc xchg pop and adc push les mov mov pop xor je mov out in movsb sbbb xor or sub repnz cmc ret add xor in adc jae cmp (bad) jae inc fdiv loopne mov cmpsb mov mov cwtl inc mov es (bad) push pavgb loop xchg and sub cwtl add std add and andb adc dec and add jno pcmpeqd pop xchg inc lods repnz mov mov push clc pop mov test and pusha fcoms nop pushf or jne jo add xor mov shrb push sub lock aas push push cwtl inc xchg adc inc dec into dec aam pop jnp sub popf jl xchg pop gs sbb lock jns adc dec or enter sub stc and xchg jb out sub jo push mov xor inc adc shrl mov int3 add rol cmpsb add mov pop dec sub mov jl scas sub lcall mov pushf jns mov into pop jno xor or shll addb and cmp int3 add je push test fadds xor stc fdivrs leave sub test rorl cmp fsubs dec aad lods or fstp lds ja sub lea xor lods xor nop nop pop pusha into mov cmpsb sub cmp add cmp cmp mov ret cmpsb scas dec pusha enter sub jbe aad gs push xlat xor js out sbb pop mov and mov movsl xor inc daa push outsl mov fbstp je or nop xor mov push and dec or or pop jbe in or sub pop dec orl jo inc push mov push or mov adc jge ret cmp movsb adc loope cmpb inc adc test (bad) pop mov or cmpsl xchg push jno push adc and jg add jp mov cmp movsb addb add or mov loope (bad) icebp or data16 and int3 mov out sub pop in enter cmpsb test mov adc jmp and or fld test mov lcall sub jo adc adc leave mov mov mov xchg mov inc xchg jae mov aam inc jno adc xchg mov loope (bad) xor fld fs add aaa shld dec icebp mov and dec xchg test xor jb leave mov (bad) adc push add les lods pop sbb psubd rcr mov xchg movsb mov clc jmp fistpl and ror push cmp addb push aad xor js fidivrl mov add movsl dec int3 in add push or and dec fwait sub xlat cwtl int3 xchg and nop dec (bad) xor ror in push jl (bad) sub mov jnp andb xor push cmp enter mov cwtl mov push enter sub out sbbl inc adc pop inc push dec jl add and addb cmp int add xor out jle,pn mov mov adc and add fs mov (bad) jo imul jbe mov insl dec or adc and (bad) fnstenv jge jns rolb inc (bad) cmp hlt dec mov or and enter (bad) pop shr push ss dec insb add stc pop in daa add mov dec xor dec (bad) in stos adcl addb leave xchg adc add int or fnstcw dec sbb fcom xor pop pusha das sub aam pop or pop xor lcall lea jg call inc xorb outsb je add jecxz rol lods (bad) jge clc and dec adc jo jnp cltd pop mov (bad) sub rclb test add or arpl in lret lahf jge sbb inc pop xor cmp jae sbb mov inc cmp pop add jmp ss lahf repz leave rorl lods ja test push jl mov movsb and inc sub lock pop movsb inc outsb add or sub pop add mov mov jno mov inc inc jo shrb pusha jno fwait scas sbb and mov mov in jmp test adc sarb jne or fdivs stc mov fsubr inc call mov xor repz adc jno test push jle jnp insb pop test or fmuls js pop fwait add sub mov es shr shrb movsb or sbbb lds jns xchg dec in imul or sbb jg orl test jecxz mov arpl mov dec aam loopne xchg adc mov and inc and push or popa jg dec adc xlat push dec or lock call lods imul add mov call jbe or roll loopne cmp adc js (bad) inc jo (bad) (bad) hlt addl scas adc jns es cmp cmp and mov jl xchg cld sub inc xlat das jb mov sub pop mov dec and mov pop push sbb test ret add ds cmp or movb mov into dec push sub enter xlat xor xchg cmpl cwtl ret cmp inc mov add inc mov and out (bad) fldl scas pop or pop push leave data16 sahf cmpsl fwait mov mov jo or sbb mov push jo xchg mov mov shlb mov xchg and xchg jecxz and rolb or sti outsl sub mov sub and xchg sbb jb or iret sti (bad) and (bad) mov fisttpl ficoml jecxz dec sbb pushf fs add fxch pop hlt lods push ret in mov push repz jno out (bad) aam cmp push add andl mov lds popf xchg mov jns (bad) lock in in (bad) popf jmp adc lcall dec push movsl test enter jge cmp cmp jo (bad) jne jge xchg add push push nop dec daa add xor sub les jb fmuls mov neg hlt daa sbb jne movsb in lea sub (bad) sub pushf (bad) sbb mov sub fcmove stc cmp jo je push ja xchg jle adc adc and xchg adc xchg mov loopne pop mov mov mov sub lahf cmpsl in xchg fsubrl test rolb call sub mov mov xor enter mov (bad) in lods movsl icebp in adcb xchg fisubr mov push mov add hlt adc adc out jbe and xchg jns (bad) xor call sarb (bad) cmp mov test add arpl sub enter add jp dec adc push and mov push xor int or pusha add cltd in imul or pushf int3 je cmp lods mov or jp fldt leave mov nop add lret sub and or mov divl popa hlt mov and ret in pop icebp add and xchg lock pop jns dec lcall mov pusha mov stos xchg enter addr16 nop cmove lock cmp dec stc push mov popf idivb pusha addb lock (bad) in mov sub dec in sub test (bad) jno inc pop xor and add pop xorb dec add xor or inc sbbb in pop (bad) adc push add lock xor xchg add push cmp (bad) xor shrd mov add or aam xchg test sub movsl push in (bad) xor icebp fsubs push ss enter jbe fdivl rorl ret cmp mov lds add inc (bad) xchg xchg pop xlat fcoml loopne sbb push cmp aaa pop decl fadds mov (bad) jne jns push movsb (bad) or loopne (bad) clc in xchg sbb push cs xlat add mov jae (bad) jno in inc mov or mov xchg mov rclb imul inc mov imul adc jecxz add inc inc sbb nop cwtl cmp fdivp or cwtl mov lret xlat andl loopne pop inc in jbe cld mov mov dec jo or stos fs mov push shlb pop in aad shl sub addl test pusha sub mov ljmp sub hlt adc pop cmp cmp ljmp nop sbb je xor subb ja sahf add cwtl in mov mov adc xchg sub cld push sbb inc dec inc mov pop and cmp or pop popf xchg test and (bad) shl das icebp cmp aas add fxch into cmp xchg insb lret and mov in mov inc clc jg addl repnz dec push dec push mov das mov ds clc xchg rcrl xor sahf mov js,pn or push cwtl add xchg cmp int3 mov mov loopne in rolb and ss cs int3 scas jge mov les fsubrs or mov mov call push std inc popl sub mov mov pop pop xchg cwtl loope scas jle fiaddl sub loopne add cli lcall add add mov inc stc adc movsb fs je stos (bad) enter cs addl inc xor cld add jbe leave adc adc xchg sub bound arpl mov xchg ds mov loopne lods jne and sbb or inc xor push iret repnz add mov sub add xor add decl push pop jbe and jmp cld inc fsubs push lods into sub pop (bad) or fildl call adc sub sbb cmp das add inc xchg test fisttpll add nop or repz testb in or add xchg lods fcmovnb (bad) jns fdivrp mov addr16 (bad) lock icebp cmp dec mov pop ja inc pop add mov xchg xchg mov xchg stc add test and and cmp pop inc daa loop or sub and or push or xchg addps add xor inc loopne or sbb push cmp cmpsb lock aam test test int adc dec movsb or test sbb aam pusha sub inc call pop mov shl mov fldenv lock and loopne jo cmp cs lods imul xchg pop or mov out xor push sub dec nop lret xchg xchg lahf push mov or xchg pop jne fisubl mov inc or rcrb popf mov xchg pop mov push pop pop pop int xor pop int3 push enter les mov inc int3 pop adc xchg loope lods add jno mov xchg adc xor inc jbe outsl add dec decl roll mov shl cmpsb fildll imul test sbb xchg lcall mov jo stc jmp sbb loopne push (bad) nop pushf movsl roll cmp aam inc movsb pop xchg les adc push mov push loope stos mov mov jp jmp mov out xchg lods into subl enter adc fmull mov or cld outsl and imul push mov mov adc leave add fwait test mov pop enter sarb stos std in mov fs pop add fild dec lcall rolb cs sub mov inc sbb mov ret jo cmp lret sub pop mov sub jae cmp sbb lea lods enterw sub jns mov popf mov loope fiaddl shlb int push inc repz sub je test call pop cmpsl adc or lahf enter int3 and sar jl add sub add enter mov and xchg cwtl mov inc loopne jg add or add out aas ret or jo sub aas sti cltd add xor pshufw in pusha xor inc ret outsb andl mov or add sarb aam push xor repz dec ret mov pop xor por push loop xchg ret mov and cltd enter xor in (bad) hlt verw sub out add test mov jo cmp inc sub or rolb loop aam ror das jbe dec sbb mov jae adc lods inc mov mov or cmp xchg cwtl inc add mov std push out inc fadds (bad) mov mov push sbb xor xor loop (bad) jo sbb shr inc ret dec adc lds sarb pop or inc cs ret pop and sub jmp mov mov shr lret out int jecxz imul out fs fisub add and inc push andb and inc or sub in add dec in add iret pop test adc mov fcomps femms in enter inc sbb and add add add sbb mov (bad) mov (bad) aam data16 into xor cwtl nop jo xchg jo adc repz fwait mov add sarb nop pushf cmp adc push xor in or enter lret ljmp inc cmp shrb sahf jbe sub lods sub scas outsl mov ret lock leave adc add loope dec orb (bad) mov ljmp data16 js mov or sbb jnp lods pop inc fwait lds add test adc add dec jnp add rolb std adc mov xchg mov add mov cmpsb push push gs aam add jo jb mov mov rolb stos cmc adcb pop push adc xor jo inc inc inc jp push add out and cmp das mov mov dec xor je jp daa or nop cli outsb into movl sbb ljmp nop and fwait mov ja pushf lcall pusha or outsl sub xor pusha jnp mov mov mov in mov call add xor and and add sub and push fs (bad) adc add xchg arpl shrb pusha inc dec sub cmp xor add inc mov pop lret add inc xchg sti lret stc or ds mov mov andb inc fcom pop ja xor and mov dec mov pusha xchg jb push mov inc or test cmpsb fs into and xchg fwait or nop jl add push mov add jbe mov push jo add inc inc fnop in (bad) mov add test sub mov rclb into pop mov push mov mov ljmp testl jp sub xor fidivr cmpl mov mov push mov push in mov insl sub push int3 stos int3 test cmp stc add loopne push pop lea loopne add rcrb leave xchg add mov xchg add pop or rolb leave mov or add mov sar or rcrb callw adc (bad) test mov movb lcall cmp jb cltd arpl (bad) adc xchg sub pop lock xchg adc sbbb push out push xchg push or xor push orb in mov shlb inc ljmp loopne cmpsl jo,pn push cmp cmp and aam ret (bad) push inc (bad) mov dec mov add je pushf xor mov enter mov adc test jle or adc (bad) mov mov xchg sbb sbb (bad) nop push pop (bad) stc push mov pop cld dec dec mov cwtl and test clc add fs dec nop test test popf jb xor xor inc or sub dec js faddp rcr mov das inc sarb inc push call movl or aam or clc push lret adc daa mov loopne in pusha pushf pop push fwait and aaa fadd dec and inc mov rcl jl sbb dec mov dec ret ret cwtl add ss test inc stos sar dec sub pusha inc add lods (bad) mov jl add pop pavgb mov lahf test cmp jae add jge jg cld nop insb adc lods xchg xchg popa mov xor push ret sub call pop mov jo push sub in lods icebp aam cltd xor je add in inc add mov jmp daa xor shld xor in shrb clc xor sub mov stos jnp mov enter inc stc dec loope sarb add jmp xor bound or jo insb add jns push mov sbb adc ret outsb inc js and shrl xchg sub sbb loope enter es push adc cltd fcom or nop pushf jns and inc or subb xor add rcl mov jmp movsb dec aam and inc mov sub xchg mov es inc movsb mov rclb shr and jno lock xor inc xchg and in and test outsb xor pop add cmp in rolb add lock sub ja and aam or clc adc in sbb mov (bad) xor and mov or add mov add dec push cmp bound mov cmp lods push cwtl inc test cwtl add repz outsl xor (bad) xor scas add sub out mov (bad) pop xchg movsb insl push pop (bad) dec cmp add (bad) cwtl loope sbb add call imulb add adc imul cwtl (bad) dec loopne (bad) push pop jne repz jmp out adc cs arpl (bad) cld cwtl (bad) lahf add adc mov sub arpl pusha xchg fsubs mov mov add cmpsb jg dec jecxz pop inc enter dec add cmp and dec mov inc (bad) int3 add rcrl adc es loopne dec or xor push outsb ljmp jge aad jl in shll xor push (bad) sbb lcall xor out and (bad) cmp scas imul inc idivb and push inc xchg fwait mov mov dec aam dec xchg or bound push dec outsb rolb pop repnz arpl cmp mov cmp addb dec sahf inc fiadd rorl call add data16 in jnp xlat or xor stos inc xor mov hlt mov cmpsl push shlb push mov cmp clc jp sub adc push test imul inc (bad) addr16 and or rcll inc or mov pusha add fnop add add scas xchg adc cmp mov fild rolb mov sub fiadd mov add mov cmp rorl fdivl fiadd fcoms mov stc sbb sub dec add shrl pushf out adc mov daa add jmp add cmp cmpsl aam mov fnsave inc (bad) data16 add addr16 jp shr mov xor lret flds or and and push adc (bad) or ds out inc mov adc sbb pop mov xchg cmpsl sub sub int3 push clc or nopl sbb and inc aam mov add fadds mov add mov ret sti pushf jo or push mov out add cmp cs or mov xchg jb in stos hlt sbb or or jnp xor cmpsb mov sbb mov xchg push mov cwtl push push mov sub mov push pop mov or add aaa sbb dec jns xchg dec mov mov orl add scas xor mov mov adc enter punpcklwd inc and mov mov lods add inc add mov pusha outsl jne jno mov mov ss insb rcrb cmp dec xchg add fadd (bad) (bad) mov fwait sbb lods inc test int adc fiadd pushf jecxz or fisttp add cmp xor cmp sbb sub inc div nop jl out push mov les xchg mov movsb add add int mov adc (bad) rcrb (bad) mov mov xor (bad) test adc dec call and fnstenv pop xor in jnp jle add mov int3 xchg shrb (bad) jo and movsl mov add jmp add or jnp ficomp test enter call or add je jle dec xorl ret add fbld and push push adc fimul sarl mov add cmp fbld cmp xor xlat sbb xor nop jbe sti sub int3 fiadd or add mov jle jp orw mov cmc xorl nop shll out dec rcll popf rcrl xchg sub dec or add mov add rcrb adc xor pop add into jg pusha jge cs test pop sbb mov xchg test stos xor pusha xor call hlt push push nop pusha cwtl dec mov push xchg inc pop jle mov xor out add cmp xor loope insb sbbb jmp insl jne xchg add (bad) sbb jae pop sub aad cmp std dec inc push mov add fmuls add mov fwait mov add push ja inc arpl ret jb lret sahf inc orl mov push push mov and or lods sbb sarb sub aad mov adc in jns push sbb pusha jno popa inc sub jbe xchg xchg pop imul xor (bad) dec icebp out (bad) sub in dec movsl mov xchg adc mov popa add inc push sbb xor xor xor or mov fwait xchg test fcomp imul jle push adc pusha pop aaa (bad) jecxz add and push cmp add loope and pop add push (bad) pop add stos ja push out hlt sbb insl push mov pop xor pop push dec lods clc sbb pop inc inc movb and repz jmp aas push mov jae insb inc pop adc (bad) xor mov push cmp xchg or pop xchg shr add pop push xor adc loopne and jbe add pop inc ffree rol decl pusha push add add sub xchg sub mov sub (bad) mov and mov pop mov lcall mov aaa cmp push push dec ss add ret push adc adc add fmuls push inc or push mov sub enter mov xchg pop pop jmp imul mov addr16 lret sbb pop jmp js pop (bad) pop pushf add ret sbb sub pop push mov or push pop push mov adc inc and adc dec sbb adc push mov inc cmp data16 sub xchg add dec jg incb mov clc inc movsb or pop push sub rcll or sub mov jge loop add sub aam xchg bound add add dec push pop dec push lods xchg adc push xor push je popa add or ret add sbb mov push rorb push ja push fadd jmp push push xchg ss jle outsl pop xor inc xor gs add or lock cmp jmp jl adcl rcrb and popf call subb jge faddl inc subb outsb jnp aad xor aaa mov jmp pop xchg clc pop js inc inc jbe js add mov sub jmp cmp xchg enter mov inc sahf loopne xchg mov inc dec adc out add pop sub outsb mov (bad) sbb sub out (bad) ret pop push test in mov ret adc pop push and adc (bad) mull insb or pop or push lcall cmp push or in and pop add incb mov hlt jno xor or enter shr aas idivl add sub rolb add mov ds addr16 jmp (bad) xor mov add jmp gs and push adc mov adc add outsb mov ficompl dec test push pop rclb add lock pop movsb sti cmp jl movsb mov push andl and orl jae and testl fsubrs pop inc mov dec sub nop cmovle outsb pop or mov mul nop dec inc jmp out es or addb sub xchg jmp daa outsl pop xchg add push nop ds mov cmpsb int3 dec popa mov jge pop icebp adc or sub jge add hlt add out mov loope sub xchg test scas mov push jb xlat popa sub pop and jmp ret inc jl,pn dec scas test in leave mov jnp push pusha dec jno fcompl notb add or xchg sub xor push fistl pop xchg push and adc jge jmp lcall test clc pop add inc (bad) fs lods jge in push inc aad push or mov pop mov mov jp add pop jo mov inc loop cld push inc outsl shl xorl int jo adcb (bad) icebp cmp std add lret pop or xchg test ret iret fcmovbe (bad) shr fistl jo mov mov imul push rclb shll loop mov pop mov pop inc loope mov inc jno cwtl add pop sub mov in dec fs adc add cmp cmp enter inc xchg js xlat into push push fs mov inc xchg cmp lea or sub push add add jne in (bad) rolb xor pop lret adc xor push cmp pop sbb sahf cltd inc inc inc push lea adc mov je adc lods add cmp test aas out movsl inc stos cmpl inc dec jecxz mov daa cld dec test lods cmp (bad) imul gs dec push push call pop ret mov dec inc push add adc pusha mov jp xchg data16 ret rcrl pop outsl inc jmp push xchg and inc push ret add inc lret fs mov mov add movl test jo into rcl xor orb clc or aad add push add pop mov inc push popa pop ret enter inc sbb push ret fild add pop and in inc jl push add ret xor sub adc into xor clc call data16 aas mov daa loopne push ret sbb ltr lret sarb xchg sbb push sub int3 mov jmp and push sub xchg fisttp mov add add je fildl push add jmp addr16 bound mov mov add xchg add pop dec les mov sbb push lret shrb adc ret pop inc inc arpl push xchg insb repnz je mov rcll add inc mov sub mov sarb cmpsb addr16 lcall loopne pop dec lret push sbb jmp mov hlt divl mov add sbb ss lret nop popa jge call mov leave adc in add mov jns xlat stos or add or add call test (bad) jg fisttpl adc loop lahf xchg lret mov in pop sub aam je or add mov pop data16 xchg or andl xchg xorb mov xchg scas sbb (bad) hlt icebp adc or and lret xchg sub push jl dec lock inc xchg sub push lret add call sub loop lock pop push mov mov test inc cmp xor sbb add pop aaa pop fsubs cwtl jp adc adc xchg sbb or sbb int dec cmp pop repz mov or adc fwait mov aam out cmp adc test movsl aam inc cmpsb or jp fnstcw inc add push xor into stos xor sub je pop test or mov adc push or mov lock adc cmp xchg dec add imul lods xor add pop mov add xchg mov mov jnp lods mov sbb cwtl pusha jo (bad) add cmp adc aam push (bad) imull lret int hlt mov call clc sahf add cmc jge fucom or cmpsb lock mov push and lock enter adc xor icebp mov add sub (bad) and add inc cld jb or addr16 add mov add jae mov add and enter xor push add fsts addl sbbl loopne or cmp or mov add xchg mov push loop mov push cltd cmp or dec inc adc add pushf popf enter shlb and add pushf orl in sbb in mov test add and fsubrs and out inc add sub mov add je xchg push add mov sbb sbb or fdivs push and (bad) add loop fs je rclb cltd dec pop arpl loopne cmp dec jg aas out sbb sub sub xor rclb shll cmpsb pop ror repnz cmp xrelease sbb stc push cmp cmp loope push fnstcw dec or or addb push xchg xor int3 cmp xor push xchg cmp sbb es mov aas jmp loope test bound adc mov in shrl push ljmp sbb xchg or jmp icebp mov jns or mov call xchg nop adcl and scas adc aam xor (bad) je add and call jmp pop repz mov push add icebp mov ret and xor xchg test dec out sub or cmp cmp lahf lods push add push leave stos stc (bad) xchg xor inc cmp imul icebp sbb mov outsb out (bad) mov fcmovbe inc mov orb xchg add rolb cwtl icebp and enter push mov jo (bad) test push dec or test lods nop inc cmc fsubrs in nop das ret stc mov jo popf aaa lods ret or and sbb push stos int3 push inc and int3 jnp xor cwtl adc cltd test sub xchg add loopne adc mov sbb iret aaa stc and paddq gs add xor xor shlb lret dec push (bad) xchg and dec orl sub sbb add (bad) and adc add out mov inc adc invd stc xchg lret sbb jbe pop lock scas in dec mov cli mov (bad) cmp mov test lcall test xchg ret cld sbb jge in ret ljmp aad por mov clc mov mov xchg mov icebp sbb mov stos and sbb mov adc xchg ljmp nop ret clc js add scas mov jne sbb loope xchg mov aam clc jo test pop adc pop jno cwtl int3 inc cs (bad) or cld sbb movsb fsubrs push rol lret mov sub stos ret dec push scas js cmp inc popf mov das daa loope sub or je and (bad) test push loop and pusha leave pop call aam mov cmp add xchg sub xchg mov and fcoms cmp sahf adc pop inc fwait push loopne movups test push mov and push pop add lock imul pop dec xchg lret mov cwtl add dec test repz fnstsw mov jno mov inc pusha adc (bad) or or pop pop xchg cltd pop int3 orb inc sub inc mov inc sbb and mov out sti inc add iret aas sub mov (bad) push hlt mov lods add repnz xchg add call movsb or stos addb scas adc lcall jo mov and add and sbb sbb mov out push pop adcb pop mov and (bad) mov enter push cmp cltd add pop inc dec and xor cmc xor push fdivs or mov fwait (bad) push lsl sbb inc jb jge movsb dec dec mov repz sbb pop and xor adc cltd inc (bad) dec loopne jnp pusha lods jno lret add xchg mov sub sub std pop test xor or or cmp xor (bad) insb xchg cmpsl mov aaa lods enter or mov xchg push inc or adc aaa mov call jb inc pushf xor sbb and inc hlt and movb subb xchg jo jge faddl push out mov sbb inc es adc out pushf add mov sahf and ds cltd sbb inc mov outsb mov (bad) sbb hlt jp mov jmp loope pop movsl sbb push aam inc mov sub xchg or xorl or insb popf sbb pop adc sbb stc xchg inc mov pop es and nop leave (bad) dec push push or inc jbe mov dec sbb jnp movsb dec or and icebp pop rclb movsb add leave xchg mov mov adc mov and mov outsb repnz call add int lods es movsb pop dec nop js pop mov adc cmp xchg xor dec int3 popf xor test lret nop inc mov call inc fdivrl jo loopne mov or xor mov test push sbb fildll pop sbbb dec adc pop sbb addb mov enter dec mov add loope,pn dec mov add inc add cmp (bad) or das nop inc mov inc or mov inc sbb mov lcall lods in subb and ljmp push aaa sbb enter lret mov call lret inc adc loopne pusha push aad mov rcl es cltd (bad) nop int3 lds loopne jo or addr16 dec mov adc (bad) (bad) int3 lcall cs sbb mov pop movsb pop sarl and mov lods nop and insb xor leave cmp mov or and stc xchg loope add jp hlt (bad) (bad) cs mov xchg jne mov les adc adc mov jo mov mov and into or and mov push dec mov loope jno xor and mov cs mov aam mov xor clc lret sub pusha fistl subb adc xor add cltd add inc rcr outsl xchg push stos call sub int3 out test in xor or js in xchg cwtl in inc das jnp push imul popa add stc int3 mov jmp in adc int dec loop xor test inc xchg icebp mov in fucomip add aaa es call xor inc clc scas adc pop jecxz adc or sub inc sbb mov sahf outsb push push jge adc pop pop clc xor fwait sbb fisttpl ljmp mov rclb out add or pop sbbb add xor cmp sbb stc dec xchg push xchg add scas sub pop mov aas lcall mov or push xorb sub dec jmp adc push jecxz inc aam inc push jb jo loope or cmp gs push icebp enter into cmp ljmp add outsl shr sbb push (bad) or adcb fs sbb (bad) movsb and sbb lds test dec add and jmp rolb or dec pop or nop insb inc xor loopne (bad) xor arpl iret cmpb mov jo cwtl mov mov xlat and or orl cmp inc jecxz add rorl push pusha (bad) dec push dec and jne arpl imul repz inc cmpsb fistpll push popf xor cmpsl inc add or mov sub push sbb sub push ss pop mov inc pop push jp in inc fcoms push (bad) sub les mov adcl mov gs mov sub je lds pusha add cmp xchg cmp inc add sub pop subb mov fldl and movsl jmp sub jno insb xor cltd je add sub mov div and or mov xchg inc (bad) out add (bad) icebp ret mov pushf xchg push (bad) rcrb das xor jns insl sub loopne shl in inc lock lea inc or adc (bad) xlat xchg fsubrl inc xor push in or lea scas add imul mov jle in inc loopne test mov test jmp adc sbb jecxz adc jns ss in push test adc dec aad mov data16 dec push ret (bad) sub and inc inc (bad) push mov andl mov pop mov out sub pop xor push jmp ds jbe xor mov mov mov pop inc xchg or (bad) stos adc add mov push push and stos cmp mov dec lds cmp in rcrl or sub orb push mov lea fs test pusha sbb xor mov popa fs xor test sbb xchg add mov loopne inc mov fadds mov popf pusha je push rcll jae addb jg mov jecxz jmp sbbb sub inc add stos pusha rolb aad test dec jnp adc cmp sub jb lea inc sub test sbb (bad) lods xor adc les inc adc push dec addb dec xor jns cld pop flds insl (bad) cwtl dec and sbb mov mov mov les push jp cmp push fsubrl add shlb fwait sub fsubrl lds sub fadds fstl aas sub push mov js sub inc xor sub ljmp push mov lea push sub in cmp insb adc inc sub xchg pop fwait dec std and pop adc into sub bound mov cmpsl addb cmp sub dec inc jp mov cwtl mov sbb pop jo add pop fnstcw andb mov popa pop xchg clc (bad) imul cmc sbb ds dec jg enter xor cmc xchg rorb rol cmpsb mov in aad loopne imul inc lahf insl movsl push add mov xchg push xor dec les push add fbstp mov call arpl aam cli mov add lcall xor lods add push jae fs mov leave or and mov add jno cld pop data16 cwtl cwtl sub add clc xchg add xchg repz nop add push fstp dec popf in dec pop dec enter enter adc mov aas jne (bad) rol inc call test fwait in shll shr sbbb xchg pop mov mov rcr repz pop inc sahf inc sbbb pop lret pusha push out push and mov mov mov aad ret (bad) cltd add jae jl int3 (bad) test add adc inc pusha jb xor je and aam adc inc xor adc in ss arpl adcb jnp and (bad) pop jo fadd cli dec orb or js add sbb xchg and jle stc push and hlt add mov les clc pop popa mov sti jbe or sahf inc outsb sbb sbb mov pusha cwtl lock sbb mov add inc (bad) pop ds (bad) mov mov rol push add je into mov aam add cltd push and pop ret add cwtl ss pop fsubrs xchg jnp cmc push int3 rcrl cwtl xor or cltd test cmp out push in cld data16 inc xor jp,pn ja out cmp sbb inc jmp jns mov icebp and add loopne sub sbb mov test insb mov sbb cmp pop sbb ss inc loopne insl add mov cmp push stc mov loope jmp hlt subps and push hlt push add add jno mov pop js cwtl push pushf fdivs jg and push fs push (bad) gs lret lock scas insb rorb insl gs pop (bad) push and inc call pop sbb jmp or jl mov rcll xchg js add (bad) jb jmp popf jne lea sub int jo push push mov icebp mov hlt les insl int loope mov shlb stc pop inc fucomi jmp (bad) sbb add jmp dec repz pop cmp xchg sbb sbb daa andl cld fs cmp cwtl adc movsl add int3 and out and pop in cmp cli mov dec pop sbb or inc jno add in xor js dec int3 dec mov out mov rol (bad) and mov mov dec out clc mov test popf out push cmp add aam push scas int3 inc mov inc leave inc adc repnz add int jge or les and pop ret jle push push lcall (bad) loopne mov scas adc lods add add xor lods adc xchg icebp inc sarb imul out or sbb loope movsb adc cmp dec adc nop lods (bad) ss dec dec and call lret sub je pop or adc xor cmp test imul add lahf sti dec mov inc aam loopne (bad) jp pop or mov xor mov and cld mov sbb leave sarb pushl dec mov add stos stc xchg in in mov pusha jns test ss inc psrld outsl stc and sbb jns mov mov icebp scas xchg jmp hlt or int3 mov sbb inc mov and mov mov lahf add fistpl pop dec sbb dec dec jbe popa adc int3 loop ret mov cwtl orl pop cmp adc sbb (bad) mov cmp call adc sbb xchg sbb adc jno inc add clc dec pop cmp or cmp or pop push rcrb inc jle push mov push ror add xor xlat pop adc clc jmp xchg sub aam dec lods jns (bad) cwtl mov push add pop loope inc or or dec movsb xchg dec inc sub sbb pop mov pop push mov inc scas cmc int3 fs popf add xor test add pop ss pop (bad) sub sbb pop mov xchg aam aaa jo dec dec movsb mov imul dec mov out pop mov xchg cli xor jb or ret jae pushf add clc cmp test sbb lods mov cmc pop out data16 pop daa inc mov mov jle push sbb pop jne dec add push std pop icebp xchg jle enter or xchg cmp pop or mov jg sub in xchg inc push test adc aas dec sti pop mov (bad) jno sub repnz addl pop cmp mov mov rolb xor in hlt jns,pt orb inc or jle push mov cmp adc or out icebp cmp inc mov add ja add mov cmp movsl jl cmpsl insb ljmp aam inc leave ss (bad) push xchg mov add jecxz lock in pusha xchg sbb xchg pusha mov mov sub sbb sbb mov push jbe xchg les add sbb add sub inc dec add repz jmp mov push jge pop inc pop bound in mov lret jns scas push ds jae mov sbb in int in jl fs ja shlb inc repnz out mov mov xchg jns push jnp pop or aad icebp fiadd das jb pusha jbe movsl inc aad sub fadds (bad) sbb dec jg les mov mov xor (bad) xchg js and add clc fwait js lock dec pop mov movsb or add xchg cmp cld inc add cmp add cwtl aam js sub mov dec xchg repz pop and add xchg sti pop mov int3 sahf add ret pushf shrl mov test stos pop mov enter xchg adc int3 mov jb xchg xchg cltd leave add (bad) pop mov and mov push cltd mov stos fadds lcall mov dec pop cwtl and mov push pop mov jns sbb push and sbb push cltd mov data16 notb sbb jmp push add push adc jb add mov aam mov add mov inc movsl add mov call in mov cmp cmp adc pop in push add and mov mov add lds cmp push repnz pop pop bound js sub xor jmp jg int3 mov incb test and std in and pusha ret jmp pop inc dec add adc lods fiadd add push inc xchg or and mov loop repz ss andl loopne in lock xchg inc pop or sub push add jbe leave in inc mov xor rorl subl add push movsb popa pop jo mov jp fldcw xchg lock pop or inc add and and enter rclb push xchg and mov and movsl mov adc call je mov dec adc add lds jnp xor dec std push addr16 ucomiss (bad) aam stc hlt inc and sbb add (bad) fsub add mov sub rcll xchg or scas rorb in inc and cmp out mov xor adc cmpsl add ret xchg pop inc mov icebp cwtl sub pop loopne dec mov jg sub add lea xor jo fsubs sbb das into and je call repnz inc dec je adc andb loop pop push fdivrl scas scas out dec shlb cli and repz sub mov jo scas (bad) or xchg dec cwtl xor mov loope lock or xor adc rcrb adc sbbl add clc stos repz mov popa stos cmp mov pop push mov fidiv add std (bad) idivl cs aam or cmpsb lock dec push sub mov mov loop test jo icebp clc cmc push iret test test mov xchg mov aas add rorl incl fsubp loope lea push adc mov call xchg dec mov jo xchg pop roll in mov rcrb xor pop push add clc sub xor push (bad) fadds mov jg fwait inc (bad) cmp test fidiv push mov push mov das or pop sbb mov add xor add dec add imul xchg pop xchg loopne addl rep (bad) mov gs jno mov adc movsl or (bad) cmp add and jp popf aad sub cwtl lods test rcr cmp xor fdivp (bad) jno add fdiv xor sar arpl fisub aas cmp sub or inc movsl cwtl and mov mov sub add cwtl adc pop arpl and cwtl aad add movsl lret imul cmp rclb out mov and cmp out pop xor sbbl and mov push xor pusha add inc and xor and sbb (bad) adc fs sbb shrb loopne movsb cmp ds pushf pop fiadd rcrb push lcall scas loopne inc jb sbb (bad) cmpsl aaa xchg test jmp pusha xorl mov lock cwtl pop nop mov arpl add mov repnz in insb bound cs repnz xchg xor sub (bad) dec sahf or cli cltd add daa outsb mov (bad) mov les cmp pop cltd adc shl daa xor xchg add lahf add xchg cmpsl pop icebp call adc (bad) sub cs lahf loop mov push mov add adc mov add add fistp dec lock aas call or dec js adc cwtl and push ficompl sti scas mov les xchg xchg adc insl add data16 xlat movsb cwtl mov and mov clc cmpsl adc rolb jle test sbb aad movsb arpl inc jl inc pusha pusha cwtl sub xor push pushf pop jg ret lret (bad) xor inc push inc into loopne fwait add lods dec dec push daa cli movsl and movsb inc insl pop sbb add xchg dec dec sub or lock add imul adc (bad) aas in push inc jns cmpl sbb mov js jmp jno je das adc xchg mov push nop lock faddl adc adc or aad das add dec rclb sub out jo imul inc clc out inc lret jecxz sub cwtl push or bound add cmpsb xchg fcmovne (bad) mov mov xchg jg xchg mov enter fwait scas add test mov fidivrl js orl ja push cwtl or iret sub hlt and cmp or hlt les mov in aam icebp adc ja xchg push cmpsb or loop xor ficom inc push add js inc and rcll xorb frstor and dec push pop cwtl push add pop sbb fwait inc cwtl inc lret add xor mov out dec arpl cmc or orb xor pop loop xor xor pop aad inc stos (bad) loopne cmpsb cmpl inc cld jmp enter in mov push (bad) clc sub test or mov mov cmpb jb or rcrl mov jnp jns dec ljmp dec push jno or sub js lahf mov bswap and cmc out xchg lock adc pop fsubrs or or inc add and xchg dec daa mov jae xchg in repz loopne repnz ror andb ds mov or mov ljmp daa or sbb in js pop jne jnp push jmp sbb xor add xchg dec mov jle xchg addb (bad) mov mov cmp insl add inc icebp xchg clc mov in dec mov add mov fninit inc cld leave push jno pushf je sbb sub call dec push cwtl add adc and imul jmp and dec jns push repnz xchg cmpb jp push int pop orb or push and pop push cmc and jle inc push enter cmpsl pop ror fiaddl inc push test xor cmp xchg cld loopne add mov pushf incb mov stos cmc sbb xchg xchg xlat mov push or fisub lock xor sbb xchg loop xchg daa push in lahf out je pushf fmull xchg cmp mov nop push lahf mov push leave xor push lea adc outsb xchg ret scas insb cmp jae int3 or and orps xchg in dec or push pop mov xor (bad) cmp das fwait mov inc push jmp mov pusha std movzwl lret cmp movsb adc ret jl push leave or and push adc mov imul stos bound aad test xchg or sbb push sbb pop lock je add out adc xchg inc jb clc lret mov std leave or pusha fs pop fs xor je inc cmp aad movsb pushf add mov clc jo clc or in add dec cmpsb mov outsb pop add idivl xor popf out je les jbe add and lahf mov xorl sbb enter pop sub imul sbb xor pop mov icebp add sbb fisubrl xor xchg xchg mov cmp add xor mov in movsb or push rclb jecxz out and cmc fsubs add sahf sub xchg add adc test lahf mov lock inc icebp push xchg outsb jle add (bad) bound add loopne add jmp sbb nop imul ret cmpsl sbb cmp add addr16 fs nop or shlb jo aas dec nop insb add pop outsb fdivs sub loopne ss inc sbb or andb popa jmp or inc and addr16 jg push andl out testb dec rorb imul jno xchg sub movb pop jge mov arpl test pusha outsl ljmp and (bad) mov decl js sbb and cld xor mov mov call subb loopne sbb pop in xor addb or and add lock dec add rep cmp testb inc je push or xchg or mov push popf add cmp inc jge sbb dec xor mov xor or (bad) int add popf cwtl cmp je inc loopne andb js dec mov xchg jne dec into dec and imul pop test (bad) mov add push sub js je add cmp pop cmp je add mov mov in fsubr add lods xchg imul pop (bad) mov orb mov aam dec rclb lds pop dec xchg cmp inc pop mov xchg incb and jg fcoms jne cli shrb and mov leave add (bad) cltd xchg xor out data16 xor es push push (bad) pop out and and sbb lret add pop lret mov mov jne jg push xchg push dec ss mov xor jp add es pop pop stos sbb adc sbb dec push orb add sahf loop lds pop jg cmp mov enter pop mov cmp mov mov jae cmp stos or mov xor pop (bad) stc sbb lahf or pop jg in xchg pusha test xchg pop cltd lret cld rcll test adcb or rcrb lods (bad) pusha mov pop call xor mov sub dec aad in pop pop or mov push rcr adcb pop sub jecxz imul dec into and loopne pop (bad) lret add mov sbb mov dec (bad) xchg cmp jge hlt (bad) lods in cmp sub or and scas sbb inc addl pop add movsl xchg in add push lds cwtl xchg idiv lods add test icebp jnp sub ret stos clc push sbb subl stos sub (bad) ljmp jno dec aaa cmp adc arpl or mov aam sbb mov stc (bad) push and lret push xchg dec add bound (bad) pop or jnp dec stc push adc cmc das add popf jg test pop or jg and and add sub push stos push lods out sub nop enter xchg js dec mov push in or xchg jno push pushf sbb mov jmp xchg mov xchg push mov iret pushf test loop lds cmp out imul jbe or cmp add add orps je inc test mov xchg inc fxrstor push mov cmp push in inc repnz mov ret sbb ss adc jl lods stc and jl mov mov sbb popf movsl or ret sub push jne add add mov aad adc imul lret aas add test out add mov sub dec push enter lahf sbb mov sbb push adc mov sbb cltd push adc inc pop cli mov rclb mov cwtl push cltd add mulb add insb jmp xor mov xchg jp inc imul addb into pop xlat js shll xchg pop lahf mov je test cmc fcomps sub xor dec sub pop xor lahf pop ss stc adc and (bad) mov add cmpsb dec and xchg cmp lods fwait insb inc xlat inc adc push mov outsl (bad) xor ljmp mov scas divl fs scas insl jecxz or sub mov sbb mov fcompl dec and sub sub add (bad) mov push fisubr and and mov jge add incl push push xchg out mov push ss (bad) mov cmp jnp out adc fcomip pop push ss dec test pop push clc lock subl lock inc fidivl push cmp inc pop add jmp fnsave rolb xchg fcmovu mov xlat push mov hlt and adc lock in adc xor pop bound outsb jae cld das xor mov adc mov subb cltd imul out ss inc adc inc sub mov xor pop dec mov or or adc adc or mov mov cmpsb sbb and insl push (bad) faddl popa cmp or lea push roll sbb inc mov iret ds mov xchg cwtl lahf xchg xchg repnz push push push jae popf inc or aam lea pusha fdivrs enter and add js cld push cmp add mov rolb sbb or leave stos lock adc popa push inc nop cmpsb sahf cmp stos adc push cwtl add xor cltd push xor lea dec fcompl lods xchg out cmp mov fisttpl push test or and movsl xor jbe push imul invd cmp pop mov dec dec fcompl aad insb cmp insl rorl sbb pop dec hlt int add in mov sub fucomip jbe or std iret nop pop fdivs aaa lds dec push sub jmp popa mov (bad) std xchg or add sbb mov ljmp xchg test call hlt (bad) bound addr16 (bad) xlat (bad) mov push (bad) ss jge cmc adc push or enter push add cmp or xchg lahf push xchg and cmp mov scas nop add fs pop lahf cmp mov xor shrb push outsl dec jo jge xor out jl fwait jne mov fadds mov outsl or outsb pop add icebp xor gs and loop sbb jns pop and push call fistl push mov and mov (bad) je rclb push or dec xchg add test and popf and lods add xchg leave sbb pusha bound lods imul mov movsl (bad) adc pop cwtl icebp add jmp (bad) fsubl cwtl sbb jne and or movsb push dec and cltd mov insl in (bad) xchg add sbb lock sbb mov outsl mov sbb movsl add in mov clc mov lcall mov ljmp pop push in sub bound adc outsb es mov add aam inc sub dec xor rcrl cld and lods jns,pt mov rolb jmp mov sub or and cmp jb cmova dec les or cmp mov call rorb fadds pop daa sub enter xchg mov jle xchg addl lret dec and sar or and mov rcrb pop adc mov adc pusha jne dec aaa mov jnp sahf inc dec inc inc es mov sub pop sub cld xor scas lods std cmp je cmpsb jle,pt push fildl sbb loop dec jno sbb (bad) jge add or mov xchg lods (bad) (bad) adc testw mov movb gs adc sti jmp and inc pop cmpsb cmp add fbstp xchg jnp add imul hlt pusha pop and test lock in je or daa and nop out or push call xor mov pusha mov mov int mov mov pop xor push aam (bad) leave adc loopne adc dec call adc pop and mov test mov and or sbb xor popa imul test and or pop call dec mov fmuls mov imul je into jns icebp fcmovbe leave cmpl pop cwtl es pop adc (bad) outsb jmp xchg mov lret in mov mov jecxz insb cwtl int3 in notl pop xor xchg movsb cmp adc add jmp xor adc rorb leave arpl dec or dec push dec mov adc popa inc or sbb mov adc js sub hlt jmp jl or xor adc movsl xchg add repz int3 fwait nop lret adc test jns movsl test xchg cwtl and loopne sbb xchg lock stc mov jae jle (bad) loopne test and cld xor or pop mov out or clc cli adc jne fdivrs into cld (bad) inc mov sbb and or les jl dec mov xor mov cmp in cld popf sbb sbb mov mov sub and fildl faddl mov shr xchg aaa sarl dec aas dec (bad) dec xchg mov sbb xor js popf lock mov add out mov inc fs and push jo sbb and inc add loopne cmpsl call sti insl fwait cmp insb movsb cld jge mov cmp or adcb je adc (bad) pusha add addl mov push fist jmp sub fmuls cwtl push sub jg xor lahf pusha jb sub inc dec cmpsl mov cmp lret or mov jbe call shll (bad) mov sbb xor loop sbb test inc addr16 or xorl mov adc (bad) ds in ds ds adc mov inc pop sub ret sbb jb ja add pop (bad) repz add sub cmp or pop pusha mov inc jmp clc js xor mov and cld cmp cmp pusha shlb outsb rorb bound jo fbld push sbb lret jmp or rcll push mov dec xchg lock enter mov js sbb scas pusha test sarl mov jo adc orb enter cwtl add xchg blcfill ficompl fsts pop sbb leave aad fistl jl (bad) xor mov ss and mov sbb jecxz sbb mov sbb addl mov adc popa add push jno sbb or sbb inc shlb movsl aam test sub dec or cmp call and cmp add jno or mov dec scas cmp mov test sbb cmp cmpsl jp mov enter rclb inc push subb movsb mov add add pop mov out je xor jecxz jecxz jecxz inc and out ds xor sub (bad) or sub push insb and mov and call sbb adc popa insl jp lock call pop add (bad) lods push add jle sbb dec mov (bad) aaa sbb mov sub pop xor dec or movsb mov adc or push mov add mov out arpl xchg dec mov shrl adc rorl popf pop sbb inc enter add push adc andb pop dec enter stos mov movsl pop sbb sbb shll rcrl push inc and cmp sub or clc push add add lods xchg out cmp mov dec cwtl mov lds les leave and xchg mov dec jp cli into inc sub and push dec pop roll mov jge jl (bad) jle js adcb inc mov add stc insl shrl xor inc adc mov or arpl leave cwtl sbb sub mov add repz lret sbb push mov mov sub loop es fnsave cmc or xlat cmp adc popa arpl push rclb or jo test pop (bad) faddl pop xchg sbb js push xor int arpl jecxz sub fiaddl in in xor add cmpsl movsb push inc inc ret (bad) scas mov push push and push inc jo inc orb mov xor mov mov xor repz scas mov bound dec adc jmp (bad) dec loop nop xor shll and out test jge lret sub cmpsb arpl add pushf mov and add cli xchg iret enter add bound les jb sahf adc je fdivrs push mov cmp dec fs or mov or arpl cmp outsl cmc in subb xor dec xchg add fsubs mov out cmp mov stc adc add jo jo xor les mov and fmull loop negl and lods (bad) loopne popf pusha rolb mov (bad) mov inc testl sbb bound mov setnp mov mov aaa js (bad) aam inc (bad) insb mov push sbb inc add pusha mov out les shll bound addb aam cmc sarl cmp dec subb rcl pusha dec pop jle int3 in and (bad) jmp mov insb or add in out adc lcall cs inc push push jno (bad) sbb pop or inc lea mov mov sahf jae stos lods and and icebp imulb jle lahf pusha adcl adc inc add pop inc pushf scas xchg xchg and jns push xor push inc pop ljmp mov es mov dec (bad) cmp add repnz outsb je inc pop or push imul xor test pop add movsl add pop mov push xor fst or mov push std and mov add mov in hlt inc mov sbbl fldl xlat inc cmp jle test sbb ret xchg rorb add sbb mov and push stc (bad) or xor pusha inc test pusha shrb and add pusha cmp or xchg xchg mov dec lcall ds dec or dec inc mov mov rclb adc fstp movsb xor mov xor scas mov sub and sub test cltd inc icebp mov xchg pop cmpsb pusha add popa sti arpl mov mov and dec js add mov les test test lock cmp inc stos inc test arpl push adc mov cli cmpsl inc and out enter push jo pop insb mov or mov xchg mov ret mov loopne pusha test xor xchg rdtsc jp pusha sbb test or shr mov xor xor add and jecxz hlt xchg nop fs xor aas inc icebp (bad) lock repz add inc int3 inc dec cmpsl js add data16 in cmpb inc test in dec les mov and out add dec dec js lock adcl lcall test pop add (bad) arpl (bad) lock in dec orl and rorb sub into adcl mov xchg sbb sub repz or ja sti mov cmp xchg outsl popf (bad) mov (bad) pusha add xor in fidivl mov lock xor into data16 je js add xor and arpl adc pop fdivs les push sbb and xor inc and pop xor (bad) cmp jbe or mov xchg or xor sbb mov cmp ret clc pusha sub dec or out mov mov lahf iret sbb adc or enter sarb xor or inc ret or jne outsb insb xchg in add movsb int mov popa and out rolb in (bad) in or pcmpgtd mov xor popa js push push shufps rolb sbb (bad) icebp (bad) aam sub xchg mov add mov ficom mov loop nop or movl ret xchg in cmp fldenv std decb in push pop in or mov icebp mov jo dec xchg push add sub mov sub nop lahf pop incl cli cld sbb scas mov add jl (bad) jmp insb imul dec std repz pop rcl mov cmpsl xchg xor xorl pop mov rcrl add das (bad) lods add cmc dec pop cs jbe jns andl les sbb scas cmp pop jp jb and fiadd outsb and pop mov xor js nop scas jl push mov jge cld mov or dec mov mov inc sub pusha push movswl and xor sub dec ja aaa pshufw mov jnp test add cmp stos jno mov js add ret jp out add lods rclb jns adc mov (bad) cmp stos in push adc cwtl cmp test add mov test das test or sbb stc mov (bad) (bad) dec pop loope push pop sahf pop mov cmc sbb jg addb movsl add jbe inc or clc sub pop sbb rol in jecxz or add mov jmp xor jnp fadd cmpsb jmp sbb ret push mov or aad add std ljmp test push pause pop imull aaa inc (bad) inc aas xor negl and std out push in outsl mov mov add jge mov movsb sbb icebp pop mov xorl inc adc andb iret subb jno and xchg sbb hlt sub punpcklbw fsubs fildl sub dec int subl cmp negb pusha lret sub add subl and push cltd ds and adc add mov push clc dec adc xlat nop mov sub pop mov add jmp xor nop sbb cmp sbb loop test cmpb gs dec jbe add jo adc cmp lahf lods shlb xchg push addb jp insb mov jbe (bad) xchg pusha xor sub (bad) enter push push aas cmc mov loope adc ljmp cmpb sar fnstenv lods and stos les pop pop (bad) dec jae je mov int mov and test dec mov nop inc or mov bound xchg and pop push mov jl in mov scas or add into add add scas adcl test inc jns push fistpll daa cmp sub subl daa cvtdq2ps inc add sub push in test or fdivl movsb xchg adc js cwtl mov sbb dec xchg rclb or lock lock (bad) je mov sub in test xchg cs mov and leave sub add nop fwait lea rcrb cmp sbb das lods pop inc add jmp leave mov out mov sarb xchg es mov test sbb in (bad) or inc cmp aas ljmp push inc data16 pusha cs mov stos ret es in and sub adc and lahf jbe pop scas cmc xor adc cs jl jmp xchg and push subb orl test inc scas cmpsl mov out repz jp sbb movsb cld xchg add pop gs (bad) ljmp xchg icebp adc xchg xlat cmp add pop jg and add lret and xor add mov jle cltd sub xor gs inc and xchg ret xchg xor daa test mov andl inc inc mov pop pop jbe addl mov mov lea aam jmp add movsl add xor xor rcrl sub movsl or punpckhbw in test cld arpl sbb incl hlt aad mov daa movsb push push pushl add mov prefetchwt1 sub pop cwtl js push mulb jb adc mov mov inc pusha push pushf pop xchg mov inc push inc hlt sbb fwait sub mov sahf dec repnz dec add push mov pusha inc jl xchg push and push hlt or nop orb xor xchg pop jmp ficom and mov adcb add (bad) jmp movsb mov mov jns addb sub test out sub and roll jo adc push outsb inc (bad) and sub add orb loope call mov cmp push xchg jbe and mov mov jl push xorps popf pop call sbb cmpsb mov shlb sbb xchg cmp cmpsl mov push stos movsb mov insb adc xchg adc xor cmp cmovae lcall adc pop ret mov xchg mov insl xor popa push and lock jns repnz sbb loopne pusha mov (bad) loopne sbb inc pop dec inc shlb mov inc dec movsl sbb jecxz sub roll inc jns sbb daa dec pop push leave sub dec mov xor pop std loopne stos fmull dec imul mov mov mov mov clc es mov or call rclb sub xor (bad) call sbb pusha dec inc decl sub es jl add adc sub pop pop inc int3 push and sbb xor jb dec rcrl sbb sub in in hlt scas es cwtl inc sbb sub dec movsb dec bound mov insb and add pop roll icebp dec lock mov or je xchg pop dec and pop outsl icebp test xor inc scas pop push pop jo or daa shrb (bad) lock mov ss xor cltd mov dec enter sub sub cld push test mov mov loopne and or (bad) in xor cltd cmpb add hlt sub ret sub mov xchg push test mov jg cmp shr lea insl hlt daa and scas (bad) je orl cmpsb mov inc faddl stc inc mov pop dec fldenv bound shrl adc and jl jecxz das sbb sbb imul cmc add mull and jmp inc and shlb leave pusha sub jl in jns lea mov rol cmovl push pop push mov nop nop and mov mov int3 jge and sub lods xchg insb sub pop sti inc ja lock push hlt jmp fcoms out add push subb jns sbb mov popa xchg pop out clc (bad) mov pushf cmpsl mov inc jg xchg outsl xchg je in xchg mov cmc dec imul mov add rorb add lea sub sbb adc sub cwtl and xchg leave mov and mov xor dec add inc sbb sub xor sbb mov inc out add mov cmpsl mov daa sbb out adc das push adc (bad) sbb jmp loop xchg fisub xchg pushf test out cwtl stos rcl jo pop adc pusha push loope dec aas out loopne aas jg (bad) pop dec add jp,pn mov or scas lahf xor scas mov pushf clc push pop dec rorb xchg xor cli (bad) scas add pop xor jl out adc cmpsb xchg mov and mov (bad) lcall cs or dec inc add jl fildll push or mov dec lahf hlt and adc inc push xor pop pusha jg (bad) push inc xchg pop in xor cld insb or test mov pop je add sbb fildll inc sahf xor or xchg jmp clc icebp dec stos daa scas mov or mov mov sub test call adc pop push adc mov es ficomp stos shll mov add sub xlat add repnz orl and push sbb jnp add cmp sub dec push sarl repz icebp sub dec mov sub pushf fs cltd insb cmp pop pop cmp bswap imul or call mov fldl jle push aas add enter cmc adc mov mov and clc lods push xchg push nop push inc (bad) cltd inc mov dec sub int3 pop test (bad) int3 lret sbb mov sub xor adc clc cmp sub pop sub add out rorb mov mov mov sbb sbb jg lock xlat sub stc nop and sub test or inc enter jb aam inc xor fidivl mov test add inc and or inc adc pop sub add imul repnz test push xor loopne jbe pushf mov (bad) or fnstcw ljmp mov xorb lret cmpsb (bad) das and into cli inc es int3 dec popa pusha sub lock mov adc push sub popa and repnz imul add (bad) mov cmp js and xchg lds mov push and dec rcll jns dec sbb mov push subl mov xchg pusha outsb imul sub pop fs or lret cmp mov inc xor cwtl jnp arpl xor mov addr16 lods daa (bad) pusha mov add sbb adc outsb call sub push popa and lcall sbb adc adc push iret andl leave mov xchg inc or nop mov push shlb and mov xor rcll cmovl cmpb xor jb jg daa add sbb mov cs mov mov clc push jl js fsubl mov insb and addl jecxz fs add cmp lds lods mov mov mov cmpsl sbb adc cmpsl xchg mov mov test and jg (bad) dec fsubrl je pop adc dec sub lret sub sub push subb jno fsubl xorl icebp mov loope adcl sar lret test cmp pop pop (bad) pushf xor aaa ror pop jge and mov cmpl out xchg cmpsl popa cmp pop add jne (bad) mov call roll add xchg inc sub xchg lcall jae fbstp dec or fwait adc testb movsb jbe ja das orb jecxz jp xchg testl mov mov or mov popa xlat fcoms sti outsl outsb dec cmp cmp push movb aaa push int3 roll xor pop mov adc xorb pop mov push mov (bad) loopne xor mov jae cs jg push rolb xadd sbb in or lods push aaa loopne (bad) icebp sbb add sub aam mov sub hlt aaa idivl or pop and add add movsl push and scas mov jbe (bad) mov insb jl or xlat lahf call std push outsl lea and loope fldl dec cli andl arpl enter inc dec push inc lods mov mov iret push lock or dec pushf jl or add insb fimul ficomp mov fpatan and pop cmp push ret xor sub sub inc pushf dec cmp int3 mov lock dec cmp mov pop xchg mov dec inc in push test gs sub (bad) mov jp loopne xor push dec jns dec mov mov xor xor in push or mov jmp das (bad) and and dec dec adc pusha mov mov cmp inc movsb sar adc lock js cwtl pop add jl xor test nop scas iret bound mov sbb jl xor fisubrl dec push jb in jle xor movsl or loop,pt test xchg paddd and dec into out add xchg cld xchg arpl inc sbb (bad) cwtl xor xor dec push xor cmpl orb cltd addr16 sbb jno push or xlat and mov fbstp mov pusha cwtl and iret mov inc and xor mov push jp flds cmpsl xor push mull lret jo mov jge call inc incb adc sub bound pop pop lods lret pusha adcb cmp decb or aaa loope fcoml mov (bad) fs jb mov add mov in call inc insb mov pop mov int mov (bad) (bad) hlt je mov xlat xchg add jge nop push adc xchg pushf enter xchg or cld push mov mov les dec sub adc add xchg rcrb adc inc pop xor add pop iret sbb mov clc inc aaa sub and add cltd int3 (bad) jecxz je leave popa mov mov and rcrb dec cs inc sbb call daa adc mov fisttp pop lods sbb inc test cmp and jmp mov pop mov je nop xchg int shlb xor loopne daa mov out loope cmpsl or mov dec push inc nop mov fxch repnz cmp dec xor lret and mov adc sub lods popa pop or (bad) ljmp call add popa hlt xor xor lds pop add mov xorb xchg bound inc mov outsl test xchg adc insb mov leave jecxz cmp fsubs and dec imul popf pop add sahf idiv adc jg or xor or add sbb add mov dec or inc and or pop lcall dec or add sbb mov sbb inc fdiv dec ljmp inc inc (bad) dec addr16 mov add les movsb lock sbb movsb pushf bound into lret fwait shrb sub fcomps sbb or mov adcl xor dec xorl sub and inc movsb jmp rcrb imul hlt sub les sar data16 adc lahf xchg add adc inc xorl jl mov or cwtl jo sbb mov lret add outsl stc loop inc and mov test mov push or add push push sarb stc lea cld adc ljmp xor push push xor lret push xchg ficoml mov cmc sbb and shrl xchg aam mov pop pusha sub push xor jbe push (bad) lock adc xor lock add movsb cmp adc dec inc shl leave add les jl daa pop sub (bad) adc add sub outsb dec xor sub sub add daa into call jb cmp push adc sti or or mov cmp adc insb or fnop sbb dec dec fwait sub fdivrs sbb sub outsl cld mov (bad) inc test mov or mov add mov add cmp shl movb xchg sar push cmp jno add insl ljmp mov addb movsb hlt aas test adc add test fidiv sub fnstenv cli xor popf mov (bad) xor fwait xor mov adc call sbb and js jmp push or enter adc xorl pushf testl (bad) (bad) push pop sbb pop fidivrl insl (bad) mulb in out pop repz lcall adc pop pop sbb rolb jg in push xor inc addl cwtl adc xchg cmp subb and mov mov stc mov xor xchg xor sbb hlt dec ret adc test cmp mov (bad) into sbb or sbb dec push or pushf test add mov pusha mov add add das and fisubr pop nop xor inc std cmp nop xor sbb test insl (bad) add das dec mov push test mov pusha insb push es out add dec mov nop enter adc fs andps nop shll nop lds adc add xchg xor add adc cmp rolb testb add push sahf imul in adc orl out xor cltd mov outsb nop sbb fnstsw rolb fs dec mov in push dec sbb xor cwtl (bad) in pop mov movsb or mov lea (bad) sbb jae dec pop dec clc mov dec aaa push add enter mov mov sbb xor loopne mov ss sub xchg test out mov mov cmpb adc mov pop addr16 test in and ret pusha xchg sbb cmp push jl push addl sub dec ja pusha xchg push dec mov jmp or add inc addr16 sbb or add scas fimull pop xchg cmp lods push sahf add mov mov mov jmp add dec cltd xor rcll and push movsb (bad) test test jb pusha daa mov or xor lea sub (bad) mov sbb mov lcall stc xor and adc fdivrs add call add fdivr sub cmpsb cwtl jecxz add push pop out sbb and push mov mov xor mov out cmpb dec push nop lock cmpsl cs (bad) in push aas dec adc cltd or (bad) into dec int (bad) inc les enter ja adc pushf mov ret mov cli psrlq test adc push push or dec cltd (bad) jb pop sbbb sub pusha and mov je jbe adc dec mov test pop add fdivl clc dec data16 cmp sbb nop loop inc (bad) xchg push and mov lds jg inc (bad) (bad) mov dec clc out push pop jbe aam sub adc scas (bad) outsl inc dec fmul cltd dec sub mov je cmp sbb mov inc inc lock jo dec dec jns fcomps das jae ret dec add ja test jbe cmc jae pop sub in das sbb inc inc (bad) mov jp sbb js add mov inc xorb jl pop and notb insb push je push cmpsl cmp mov test push push inc push leave bound lahf add xor jg daa mov xchg sub adc sbb lret xchg shll mov shrb cmpsb mov and or sbb jbe stos inc xor pop cmp je xchg inc shll sub jns int3 stos das push sub je (bad) or sub xchg add sub and test punpckldq xchg mov aaa sbb cmp wbinvd jp sbb loopne xchg jp outsb test inc out cli and dec push push and sub mov add call or rcrl mov cmpsl call jmp iret mov xor inc clc lock in ror and pushf add lahf cwtl es jnp lret pop adc add jbe or cmp shr and xchg stc enter cmp mov xchg lods jbe sbb xchg data16 push js xchg pop add cmp test shll sbb push addl pusha fucom mov (bad) jmp pop push jnp xchg sbb mov jg push sub dec sahf je std idivb and pop dec (bad) jge sbb pop das mov imul mov dec cwtl test shlb mov and or and xor mov out loop dec sub add gs pop and sbb push cwtl jp int3 mov fbstp adc subl pop jnp lcall enter or insb ja test (bad) mov dec orl mov mov or jl call or popa inc adcb xchg mov movsb sub fmuls subb cmpb js jle notb dec test lods jp mov jo pop push and and mov jp vmread movsb mov pop in adc jg rorb push mov call jl adc push and sbb int3 mov dec xchg sbb pop and xchg xchg and in int inc dec ja and sbb jnp,pn or mov or hlt pusha push addr16 hlt dec inc mov xchg and sub sub inc cwtl adc sub pop pushf (bad) mov (bad) lock or push mov inc sub call mov sub gs addb dec lahf xchg insb fstl sub loopne cmpsl mov or xor mov sbb lds (bad) add add or add dec jno and cwtl (bad) mov push add cmpl pop cmp popf add pop mov je xor addl scas add cmpb add aas daa add (bad) pusha popa add in sbbb arpl rclb out jge hlt inc pop rcrl cmpsl lock jp inc sbb pop test enter jl push mov pop sbb shll push rdtsc push jge add test (bad) cmpsb mov xchg (bad) in fmulp push dec or dec or jl add shll ds and push je sbb jle pop jg mov or mov movsl sbb sbb test jno xchg pop fsub pusha push icebp hlt push pop xorl mov subb ficompl mov inc add sbb add xor add push jb jmp jo js outsl mov pop iret out cmpsb jg adc negl add jl push (bad) add dec jne cmp or inc cltd in add or incb push sbb rolb mov cmp mov mov ficom sbb xor add aas jmp nop daa cs (bad) dec fadds out iret cmp mov into mov movsb shll lea sti xchg sub jno and pop jnp int3 fsubs push sub sub insl popa add scas add xchg mov jge or sub mov testl jae cmp incb cmpsl mov inc ds xor xor sub (bad) sub daa mov pusha hlt test xlat cli jno mov adc hlt and xchg sub inc fisubrl xor adc jno xor xchg mov test push test (bad) jbe jle std lea add xor fmuls dec add test cmc std aam inc (bad) testl add (bad) in out and mov scas imulb jl jge or inc sbb pop stos jo pop xchg nop clc je roll adc add fcompl nop sub mov mov or sbb sub mov adc xor (bad) scas adc addl jns cmp xchg rclb pop xor cmpsl pusha sti cld xchg rorl mov mov mov dec cmpb mov popa orb inc (bad) cli jp add cwtl adc inc cmpsl pushf (bad) out (bad) clc cmc and xchg mov mov adc repnz and jb push nop lret and cmc enter jnp aas rorl aaa sub ret (bad) mov xor sbb push out sbb pusha adc aam dec sub xchg int enter add (bad) sub test cmc mull cmp jo or sbb (bad) adc add and loopne mov out aas adc ja and cld cmp jle pop test push inc psllq pop int3 pop push or cmp rcll or pop mov or in cwtl into sub and faddl xor jns xor cmpxchg8b mov aam jecxz scas add jl mov xchg clc add loopne ds (bad) sub shll mov dec xchg subb ret sub clc pop sub mov pop cmp int3 sub jno js les adcl xor xor mov sbb sbb add pop and mov cmp lahf cmp lret insb mov xchg xorl test or pop nop jle push lcall test out daa nop push mov (bad) cmp push pop fmul cmp and xchg dec sbb add lock sbb sbb xchg lcall loop add mov jl int3 cwtl cltd add in andb push jnp xor xor leave add ljmp xor jno lods jl sub lea xor incb mov js inc orb add js popa push (bad) scas sahf sub prefetch in dec xchg adc jne jbe add les mov test lea dec inc outsl cmpsl cmp pushf js jge in addr16 push lcall or lahf mov aaa outsb add or clc daa pop out cmp cmp xchg lock ja or in popl jl fldcw sbb adc and add jl mov push jl cmp sti and rolb push sbb lret add mov repnz sub js adc jmp mov (bad) loope pusha xchg jg mov pop pop clc adc xchg pop or jo cmpsb xchg jecxz mov adc inc cmp in and jae and add (bad) sysexit (bad) or add divb inc jae icebp loope aaa dec and (bad) in or push sbb lds (bad) mov xchg rolb jo add and xor ljmp mov mov adc das mov cld out rorb or inc (bad) pushf outsl inc add out setle in popl test shrl add repnz clc add shlb xor mov mov rorb sub add push cmp jge pusha adc (bad) fiaddl test jns,pn or fsub popa das rcll pop xor lods xchg out sbb xchg cmp hlt ror pop jge fadds lods pusha dec sbb mov mov mov sub and pop xor leave out xchg cmp add add rcrb or dec or addr16 jbe push and or add jno xor inc in mov imul leave cmova subb repnz dec or andb mov pop mov push and xchg inc imul dec aam scas add inc lds test in xchg adc and xchg test xor (bad) bound push (bad) aas add in sarl or cmp fdivl inc das pcmpeqd pop iret enter sahf inc ret cmp dec sub jo push dec rolb inc sub mov out mov xchg sbb add in cmp cmc out shrl ss int3 jo add mov std stc cld mov out stos add dec xchg call inc dec hlt add loope xorb es jl add inc cld sarb sbbb mov mov std inc in roll mov (bad) call sub and and mov or pusha pop in jp adc adc xor adc or mov aad fild cltd aam dec imul fmull lds in clc mov dec inc mov and sbb loopne mov add xor or sbb outsb add pop (bad) mov add (bad) mov dec fcmovnu sarb es inc mov and (bad) pop int3 adc jmp hlt jb adc sub stc out and out push lods lea pop fnstenv adc mov mov adc mov dec mov (bad) mov cld shll xchg inc dec loope flds mov xchg dec nop divb jmp in push pop mov pop mov sub and mov out jge add adc (bad) call xchg enter xor fwait pusha xchg sub add (bad) lock lods cwtl test int inc add dec cmc push mov mov stc fadd xor mov or xchg inc sub pop nop adc pop jmp sub rcrb mov test cld and mov mov aam mov lods push and data16 sbb jbe push arpl (bad) (bad) aam fsubrs decl jo pop ret popf addb lock pop dec cmp enter push mov test mov dec call cmp sbb rorb cmpsl int3 jb adc sub rcrb dec mov add add js ljmp insb loop imul idivl pop adc js movsb sbb pop mov adcb sbb or fisttpl add cmpsb sahf das daa push jb add std pop mov loop insb fmulp xchg (bad) int3 and add mov mov and hlt pop and int3 add data16 or fnstcw mov add daa and sub cwtl enter icebp imul add out mov dec pushf add call push dec stos jne orl lock cmpsb add nop hlt (bad) jbe dec mov dec jo andb cwtl (bad) adc ds push inc mov add sub add test and or mov push lret js jle or inc adc orb loope loope jge out fmuls push cmpl aad inc dec mov cmpsl lea pushf mov int cwtl and cmp and dec (bad) push add cli call or push xchg les add adc pop fnop dec adc pop sbb ja,pn xchg mov jo lcall mov add std jp xchg sar ret xchg sbb test or pusha pop ja pusha outsb shr jp jp out aas add arpl add lock cmp hlt add (bad) xor pop scas stos and mov add jb pop adc xchg pop xchg or aam or and jecxz jmp xlat add into movsl (bad) pop fimull fdivl add xor pop mov push xchg mov and adc push das jl mov cmpsb sub mov add pusha inc popa loopne,pn pop bound add lcall jp stc test mov xchg bound fs dec outsb and jne aam mov in (bad) jp sbb sbb imul mov mov jg ds xor mov or faddl xchg xchg mov pop add inc dec sbb out push (bad) xor xor mov nop xor ret cmpsb jge dec subps cmp inc inc daa jno sub xchg jl iret leave subl mov pusha outsl cmp jg sbbb pop push nop aam inc inc add mov nop mov push xchg jo jb xchg ss add mov pop clc xor ds push int3 adc rep push cmc loope jp jge out inc mov ret sub movsb test cli (bad) and pop push cwtl cs mov stos jmp fs jg or cmpsl mov stos pushf and (bad) ffree xchg lahf add scas mov push arpl xor out add lcall jmp pop lret (bad) call add sbb in jecxz lret pop ficomp and mov or loope xchg lds hlt jl loopne adc nop rclb lods xchg rclb mov pop xchg movsb cmp sub xchg cltd inc push and pop in nop add idiv cld or add and daa repnz xor xchg jg cmp cmpsb push pop dec repnz aaa jp ss and sbb and repnz mov rcrl dec pop sahf call add cwtl hlt cmpsl jb movsl pop pop jge adcb add sub das xchg or sub lea cmpsl xchg roll mov adc cmp and mov xor sub mov fdivs mov mov or jno mov xor in hlt out add xchg mov (bad) jb sbb mov fdivs (bad) sarb mov cltd in fsubr adc add clc fwait lahf cmpsl icebp (bad) sub jg leave mov loopne sbb int nop mov mov lods mov and sar adc aas add repnz andl inc ret subps sahf arpl push and adc popf pop jb sub mov mov or orb and mov hlt and in data16 test (bad) fistl add arpl lods or pcmpeqw xor insl pop lods add xchg imul xor and jecxz sbb jge cwtl test inc jno add push cwtl stc mov sbb adc ja and mov fldcw int3 mov push clc lds test inc jbe push (bad) je fdivp mov xorb cmp out fwait ret push add (bad) jmp out push mov loope adc pushf lock push cmp (bad) ja call outsb iret and adc dec mov jno mov jl cltd addl jg xor std aas pop lods dec clc addr16 jae pushf add loop xchg fnstcw or adc add icebp outsl xor or in fs dec addb cmpsb mov fldl mov push cmpsb mov jns add shrl incl jne mov test xchg cwtl loop,pt push inc pop mov xchg fmull add push sti inc pusha aaa (bad) shll or push mov push pop clc cmp adc repnz movsl out mov pop jmp pusha out inc xchg sbb popf aas sbb pusha cmp (bad) cmp xchg inc and mov je add jns ja push pop add mov dec mov test movsb es (bad) jo and and in inc xchg nop xchg mov inc cwtl or daa adc pushf outsb adc adc jl test push add sbb cli lcall cmpsb adc inc mov push mov roll ljmp sub cltd mov jno mov add mov fmull (bad) movsb cs dec insb add fnstenv adc addb pop sub test lods mov xchg lret dec ret sbb adc and addb pop add test cmp add orb pop popf inc mov add sets cmp lods sub inc pop xchg pusha je ror pop mov pop shr lock loope jge jae popa add sub (bad) jno pop loopne aam add push hlt mov mov fucom mov cmovnp adc test mov movb mov (bad) sbb add (bad) xor test sub mov jg add or out ret and pop shrb sub push js rcr rolb popa rcll flds cmp cwtl mov leave (bad) mov mov jl inc pop lock bound imul nop push in in lock jmp test mov mov test (bad) xor push inc adc faddl sub mov loop loopne nop lret dec int3 or test add jno pop dec dec cmp dec ja dec nop pusha add cmp add jb loopne imul dec in pop mov mov sbb movsb or or xor xlat pop pop adc nop js dec ljmp jnp nop add pushf sti push (bad) push incl adc xor sub outsb jno add dec pop add add jl adcb jb add adcb xchg notb adc inc jo push icebp test add xorb cli aas add mov jbe iret sub hlt out cwtl fdivrp xor inc sbb pushl loop nop sub outsl inc adc mov imul call out (bad) mov or mov pop push and cmp or cmp pop inc sti leave add and cltd insl adc std ret (bad) into cwtl sbb lcall inc pop pop or jl (bad) or xchg cmp std xor dec pusha in add jmp add icebp ljmp shrb (bad) jae xlat dec outsb mov lcall outsl mov mov in pop sbb ror mov andb popf hlt adc dec (bad) outsb and add xor sub jb add scas xchg scas inc mov dec jns add fucomp popf nop pop clc add pop adc in cltd fmull and int test cmc in fsubs in inc push inc out push aaa rolb and pop adc mov cmp rcrb xor daa pop fs test rcll (bad) rol sarb push mov stos and mov add mov xor sbb jne ret pop push call bts (bad) loope add jno mov rolb or cmpsb mov or cmpsl adc rcl jp push add and mov aam jnp aas cmp rolb mov or scas dec mov add (bad) push sub push add nop (bad) pop push js popf inc adcb fist pop push (bad) inc mov test xchg notl stos hlt popa add (bad) cli or daa adc (bad) mov pop stos cs sub add adcl pushf sbb mov cmp mov stc jl mov incl or sub ds cmp add test stc sbb xchg mov jmp fadds xchg movsb outsl jmp test push dec xchg movsb mov shlb sub xchg pop pop shrb mov xor and and cmpsb aam int3 pop cmp ljmp fldl dec mov sbb ja mov jge cmp xchg dec loop adc pusha xor mov mov sbb aam push jl (bad) enter sarb adc add scas or cs jo fisttpll imul xchg push and mov outsb inc nop mov sbb jae call xchg test std pop in in sub fsubs push pop pop xchg add (bad) xor je inc dec add in stos adc and mov jno rclb push sub ret lahf jmp in sti xchg mov fstpt cmp insb push or xor add call rorl xorb cmc sbb mov arpl sbb insb repnz mov mul test cmpsl mov int3 int xor leave pop or add (bad) mov popf and movsb mov pop shlb cmp loopne add iret repz inc ret and jp sbb add push pop xchg push cmc stc mov sbb pop fild pusha enter and xchg add push add mov iret int movsb mov stos cmp hlt or mov shrl push adc xchg add fadd sub mov adc and or test or or cmp add and mov stos adc test bound sbb leave push jbe test inc mov es xchg or sub mov jl cmc idivl hlt xor mov jns inc sub lahf out add push movsl lods into test jne xor clc jb pusha and push mov stos cmp jle pushf mov add clc clc cli and call test (bad) xchg in add lret push lahf sbb cmp fldz gs add movl nop test add (bad) sbb cmpsl mov mov cmp rorb cmp add xor icebp aaa or mov outsl xor rcr xchg push dec sarb or outsl push or stos dec sbb pusha push test sub (bad) mov icebp jae push js addl (bad) sbb xchg loopne stos cmp pop and mov inc fsubr fwait stc or mov inc jb cmpsl insb aam mov push test dec scas adc sti mov js jnp cmp fnsave add xchg or adc xchg rolb clc add outsl in sub das orb or sbb push ror cmc std add scas jb pop mov mov lock cmp (bad) pop adc and add cwtl cwtl add add jne out jl pop pop test rclb jge fnstsw das leave sbb mov enter push xchg pop (bad) int push rcrb je xor pop sub andb inc xchg les mov (bad) mov in hlt xor adc push cmc pop inc in cld lcall mov cmp mov imul mov jno adc mov xor push bound push push add loopne ds sub adc push ljmp inc jg pop je jo add sbb jo add push inc popf sbbl lds mov pop adc les add (bad) mov rorl add iret sub (bad) rclb mov mov jns adc pop fcomps inc (bad) sub in inc pop rorb call add loop inc hlt dec sbb or sub enter and fisttp adc mov pusha test out mov loopne xchg rcll mov add jmp (bad) dec pop fstpt or add outsb mov popf add pushf push push sub subb sahf clc loopne pop insl add xchg cmp xor add insb jnp push mov add cs shr cwtl inc add lret cmp repz sub fwait scas add inc js test and repnz xor bound xor nop psubw cmp data16 cmp lds xchg pop lock popa cmp loopne scas cmp lock pop (bad) sbb dec testb mov or push add daa dec fcomp pop xchg dec faddl sub add std inc xchg and mov pop add inc pusha out imul in adc mov cmp lock jp adc jg sysexit ds adc pop test (bad) jns jmp push addr16 (bad) jg mov cmpsl dec (bad) sti add adc xchg daa mov nop cmpsb xchg xor out test mov iret outsb cs xchg adc es push dec add push add movsb lea sarb mov les cwtl xchg stos xchg iret in lods cmp mov bnd call jb add shl adc mov out roll int3 xor arpl test scas inc stc lock jbe adc js mov pop jge sbbb add mov ret jbe dec adcb pushl sub test dec test mov pop jo mov mov or jl xchg rcrb jb shrb ja mov bound (bad) daa aas aaa adc fcomps add cmc rcrl mov hlt sub (bad) fcoms mov sub scas bound pop adc dec sbb adcl mov lods push mov in mov inc pop sahf insl push sub int3 lgs ljmp add sbb leave push and add mov daa cmp add clc out xchg add jmp or faddl ljmp pusha or mov add test pop sub sbb stc insl adc sub andl pop or mov jo sbb ss lods cmc imul add sub add mov pop and (bad) ds test test mov sub adc mov mov arpl repnz mov sti es cmc outsl add std mov mov gs popl dec repnz cs test cmpsb rclb mov popa mov inc (bad) loopw add out lret in pop pop inc nop adc mov inc dec test xchg shlb mov fistl xchg inc and mov push fcomps out mov cmp xor js orl repnz iret push mov pop mov dec jae cld out jno xchg add add add ss adc enter xor and jl lods inc mov adc enter pusha xchg sub and gs (bad) xchg pusha das mov js pushl pop push push push or ss sub or cmp add fnstsw cmp (bad) or xchg push (bad) mov outsl add mov xchg (bad) aas test push addb sub mov mov jg mov add pop repnz push inc jg,pn dec add and out iret mov shlb out sub mov adc addb movsb fildll or enter sbb lods add add adc or sub and jno sbb or insb sub add cli pop and gs sub movntq fldt lods mov mov adc dec scas mov pusha int3 std push add dec lret pop lret les xor or mov aas dec xor inc mov sahf inc or push inc and mov aas fsubs insb out or shll int3 and test invd movl lret mov in adc add (bad) fstpt dec cmp pop ret xorb fadds mov aas jo push (bad) into pop dec add push cld add cld sub daa cwtl push in pop int add or hlt in js sub nop adc cmp rolb xchg insl stos (bad) cmc in into sub in adc sbb arpl mov dec cmc fimull cmpsb mov inc insb les sub femms and scas inc xchg pop movsb jo add (bad) dec adc jnp lea cs xchg bound lods loopne xor stos push cmp xor test mov pop sbb sub add cmc notl mov loope sub (bad) fs add add stos add or jle (bad) xor sub push nop loop rdpmc (bad) dec ret mov mov or cmc mov scas xor sbb pop int3 mov in inc scas in les aad jne xchg shlb rol scas jno sub mov push xor lods sbbb add ret loopne inc add dec inc test ret add mov jg xor repz mov lds mov push adc cmp xchg in icebp push jno (bad) aaa data16 inc les cmpsl nop push sub cs dec add insb xor sbb jbe sub xor ret popf jo mov and pop mov notb and sub jbe mov or pop mov movsb hlt or cmpsl fmuls jg lahf add mov or dec dec inc mov add sbb xchg push mov mov jg clc xchg aam data16 push fild loopne popa ja add (bad) das loope mov mov cs notl das (bad) mov lea faddl push cmpl xchg jae jae push nop pop or (bad) add loop fisttpll dec add rcrb cmp adc fwait call (bad) mov popf cltd and scas pop mov nop mov xchg adc sbb data16 add dec add or nop movsb adc add xchg lds (bad) xchg xlat sub lock dec add xchg jno addb sub shlb nop cmpsl scas (bad) pop icebp cmp and (bad) cs (bad) ss push add mov stos inc (bad) or xchg test (bad) jmp (bad) int3 mov (bad) mov xor insl pop lret iret mov lock add loopne cs mov mov xorl int pop mov outsb sbb mov pop add ljmp sbb stos fildl inc add add aam mov lock decb cmpsl add xchg rolb sub mov lret out add enter test adc pop xor fwait rolb loopne imul add dec pop dec leave out xor sbb in shrl or (bad) or sbbb inc mov adc subb add movsl xchg or clc insb add sub lret cmp popa sbb dec push cmp faddl lcall movsb add xchg cli dec add (bad) mov push sti enter pop test lcall sub lock mov mov push xor pop sub mov insb pop xchg imul inc lods lock cld pop data16 repnz pop punpckhbw ja or jecxz inc mov scas add lahf add insb mov aas in sub sbbb xorl gs bound movb and mov insb hlt pop icebp jno jecxz xor cmp (bad) pop sub out add push and jecxz fldl call cmp and sahf in outsl aaa addr16 jge dec mov jle push mov test add in fwait insb ftst adcb cwtl loope sbb dec in sarb pop je (bad) jno pop sbbb movsl or popf jo es xchg adc add (bad) sub andb mov fcmovb lea pop (bad) push incl xchg out sub fisubr or jle mov inc cmp les push mov sbb push mov jno push out add mov je outsb push add xchg fsub ljmp test cmc push jno data16 fwait pop sub cmpsl int outsl inc in jmp and icebp sub repz jnp lret mov dec sbbb pop in jbe xchg pusha (bad) int3 lahf mov or fidivrl shrb adc ds stc push dec out jno (bad) stos jae nop rorb pop cli (bad) mov inc aas pop or call add inc pop rcrl xchg xor sbb push or lock cmpsl xchg add je nop shll repnz outsl pop dec loopne sub (bad) push xchg out xor mov jb lea sbb add scas xor int shrl inc addr16 loopne ficompl pop jp pop faddl insl pop xor add das push (bad) aad inc lcall hlt lods sub decb add stos mov sbb les outsb inc jne repnz sbb adc sub xor insb push jae xor cmp sbb or or push mov data16 pop push mov add lea fwait negb sbb mov pushf dec inc int3 lret rolb int3 enter cmp pusha adc scas ficomp clc sub inc mov cmp mov fistp xchg and add out add (bad) mov imul push jecxz add cmp cmp aad in sarb aam sub dec add push jno xor jge add xlat mov dec loopne out push dec jb shrb pop test rclb ljmp xorb mov push scas dec cld aam or jno jns div add ret int cmp jae push push ds (bad) push int3 jbe imul mov xorl dec jle push xor and adc mov add push mov popa sbb add sbb xor xor cmp daa jmp data16 lock add out sub out jb sub cmp test sub sbb sbb (bad) mov jbe add adc xor jl mov leave lret or add aas neg push pop dec dec ljmp push pushf xchg rolb aas fild dec sahf pusha sub add scas leave xor sbb sarl push psubb jae push dec pop mov in or js pop sbb mov icebp push sub add movsl jb test or rclb adc or int3 sahf popf add sbb (bad) iret mov aam cs fisttpl mov mov mov add and inc push enter mov xchg inc test adc xchg xchg and jo cmc add xchg or loop and rcr lods (bad) xor inc cmpl pop (bad) lock popa push xchg add push sub out inc fisttpll mov xor iret lcall test sub jne mov fidivr xor incb test jo mov add int adc arpl loope add inc add xcrypt-ecb cmpsl dec or xor int3 mov vmovups sahf or xchg add aad mov dec imul cmp pusha adc sbb sbb xchg cmp loopne xor add hlt pusha mov and push sbb stc nop sbbb xor fsts jne or xor int push push xorb (bad) pop rolb add js push decb lock push xchg out lods xor cltd xor repnz add lds loope je add push or pusha iret xor shll mov stc xchg add addr16 in sbb sti inc test push cld or and cmp xchg inc sarb xor dec mov aam les nop inc out cld ret pop adc xor fadds xor iret add aaa dec jge and add cld xchg inc mov cmp inc (bad) ljmp mov ficom sub pusha add jae aas mov jp and mov lods sahf dec xor xchg rolb out xchg jl or rcll pop nop test cmp and pop add add lahf push lods ss sub fsubrl push add jecxz ror dec clc mov sub test scas xor cltd es and dec int3 loopne sbb insb add add mov shll fsubl loopne cmpsb lock mov lcall es push ljmp fadds test cwtl mov insb loop xor cmpsb jle add rolb daa xchg fildll sub test sbb sub adc sar cld icebp inc je scas jl sti sbb (bad) jae pop fcmovnbe mov fstpl test inc test aam mov out mov or add add lcall in loop test xor sub (bad) fildl lret out mov add cmpsl (bad) nop push mov movsl push loop movsb sub lods mov cmc loopne test hlt cmp orb pop adc inc out lidtl push mov cwtl add mov outsl int3 jnp sub sub mov int ret and sbb xor mov mov xor enter xor pop mov clc xchg cmp cld jno pop pop pop sub mov pop aad adc or add pop push roll ficomp mov jae cmp fildl pop fisttp cwtl xor aam or in int3 ficomp xor add out fmuls rcrb dec cmp out out inc int sub sarb (bad) jo pop data16 sub insl test mov hlt aas nop mov sbb xlat and rolb ret jae mov sub mov inc dec mov lods jo ret jnp jge or dec inc fs sub and mov mov cmp mov sub out fs lods push add outsb and fcmove shrb andl movb fisttp pushf mov rolb and movl dec add or adc add scas fisub jbe insb push add repz adc mov xchg popf mov pusha pusha dec xchg lock jno xor cmp rcrb lods addl shr inc fs mov xchg adc bound inc add enter test xchg or dec add mov xor inc ja lock pop push add pop cmp jg and mov dec push inc cmp aad or sub adc mov pop rclb dec add cmp fisttpl dec inc mov mov icebp ljmp adc dec jmp or ja loopne loop mov lock xchg in pop rcll fcom push popa cmp repz and xor hlt pop xor xchg cwtl or js in mov add or and sub push out push dec add sub sarb cmp (bad) dec jb add pop pop add sub mov test and pop hlt mov xchg loopne xor aaa cmp pop add inc enter add leave or in push adc aaa aad (bad) pop pop ret push xlat (bad) and sub pop popf outsb in stos and sbb jns shll xchg andb and jge mov xchg xchg add insb cmpsl sub popf dec sub and out jl add mov fiadd bound movsl cmpsb push jmp dec sarb pop sbbl outsl dec mov cmpl in inc dec hlt mov xor repz lcall movsl inc (bad) cmc insb jge dec jno add enterw add or xor xchg mov lods insb aam (bad) dec dec push cmpsb ss jle enter hlt inc rcr adc aaa sbb adc test xor popf (bad) pop mov sbb enter pop xor push xchg sbb sub test sub into pusha mov mov cli iret and add add std sti push and xchg jnp xchg add nop jns add mov jnp pop push scas sbbl or push add ljmp lcall jns hlt push js add mov inc sarb cmpsl dec shlb popf cmpsb push add shrb int3 rorl orb out add fwait add push xchg pop dec in loopne (bad) or repnz pop bound mov sbb idivl pop pop out movsl jbe add xchg sbb push mov xorl aam sub add in jp or sub mov mov and adc add add aam (bad) outsl imul inc cli or insb call mov mov push add and add mov adc dec call xchg pop lret pop jns or lcall mov add jmp inc stos add icebp in lds mov xor xor mov mov sbb rorl mov add pop cld (bad) mov pop add add cmp jb mov repz addl sbb (bad) or sub les scas inc xchg xlat ss into pop aas push pusha mov sbb cmpsl add rol orl jp mov add add xor loop pusha mov mov cli popa test push (bad) push xor icebp pop mov or pop or sbb xchg adc mov pop jmp (bad) shlb cmp mov mov (bad) jmp cmpsb add pop in inc daa (bad) jo add mov cltd gs add lret ret jns mov rclb call mov rolb pusha pop jmp jg sti into aam mov sub or mov mov mov hlt jae fwait loope mov push cmp cmp mov add jo xchg (bad) not ret icebp shl inc sar pusha xor sub ret and adc lret push cli mov fsubrp adc push add cmc adcb jbe jge inc cmp push incb bnd or dec sbb (bad) pop inc out add es cmp sar mov jo roll pusha push aaa jg add mov mov cld clc mov push xchg pusha mov les and rcrb cmp pop mov andl (bad) pop add push push mov mov cwtl lcall xchg mov adc insl and jle and popa mov pop and aas dec inc mov wrmsr mov mov movb push cmp fcoms push sar imul popa outsl inc pushf cmp push lret or call cmpsb lods pop push add xor (bad) pushf pop ljmp les push mov xchg push jg (bad) add lea mov (bad) div addr16 push test xchg ja inc add lret rolb inc sub cwtl jb push aam int aaa jne call pop shll xor daa in mov adc push fidivr add test xchg cmp inc mov shrb loop push xor pop addr16 icebp inc xor pop add enter xor fstpl mov aas adc fwait dec or mov pusha cwtl popa outsb xor add xchg add aas scas jae shr push or jecxz popa cmp or cmpsb push addr16 pop inc and (bad) jmp add loope mov or pop dec push sub pop dec sbb into ss in add stos xor pop mov mov subb cli fildl out xchg add loopne mov add and sbb clc mov push and iret (bad) lock popa stc xchg or icebp (bad) cli leave add inc fwait pop and jnp or roll fs cmp int3 (bad) clc sbb sub dec hlt adc mov mov push es mov bnd and jp add sbb aas pusha inc fsubrp mov push mov jecxz (bad) jb loope sti mov popa cmpb pusha ret test push pop mov or in fdivs add lret cltd cmp int3 out pop rorl jp jns fsubs inc (bad) mov les mov mov jl test xchg sbb mov out pop insb and ds xor sub popa fwait or fidivl pop push mov add cmp or push push push addb repnz add pop (bad) push (bad) iret adc add xor popa mov adc movq push and mov jg out fs mov cmpsl dec push (bad) repnz xorl and (bad) stos testl or jnp adc adc sbb cli leave cs cmp or testl loopne cmp sub lds icebp mov add out jo pusha jl mov xor mov jae repnz insb push and xchg add sub push add and in push add xchg pop test iret mov pop mov ret and dec call push into loopne mov adcb ss pop pop aam mov xchg cmp cmp test inc lahf rcr roll scas adc mov popf imul jb fld inc movsb or adc push xlat push repnz int3 into test stc sbb adc sbb pop pop cli sub rclb or icebp roll push mov fwait jp addr16 fisttpll add movsb loope into xorb nop cltd inc and pop adc inc or fisub push ljmp mov and add cmp push out dec movsl add mov pop adc icebp lods add sub and cmp pusha add push push mov push add cli and pop popa lret sbb rcrl jne and push sub xchg add pop add add sub add adc add and add add add add add addb add add add add add add add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add add add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add add add add add add add add add add rolb add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add cltd add add add add add mov add add or add and mov add pop lock add add add add push jp add add add add add add imul add add add push pop add aam add in add or add add add add add (bad) incl add incl add jecxz add movl add pop add clc aas add cld aas add clc pop add icebp popl add movl add incl add incl add add add add add add add add add add rolb add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add add add incl add incl add incl add pop add fcomip add fcomip add fdivp add fdivp add fdivs add fdivp add fdivp add fcomip add fcomip add rolb add incl add incl add or or add or add add add add or add add data16 and dec inc inc push js in popf jns push in (bad) aas out xor add push add rclb mov test mov mov insl lods xorb mov test (bad) pop mov jne push inc adc dec fadds lods pop leave sahf int3 jb sahf fistp xchg dec es leave fs mov gs sti mov repz cs jns inc das scas pushf pushf cmp cmp (bad) sbb nop mov or punpcklbw push push push sbb xchg sub add add pusha es adc adc push subb pop add int roll push push add pop es add lret aaa in imul addr16 pop mov xchg lea bound push cmc xor mov lea inc pop push cmp test jmp daa adc scas pop fmul xor sub add sahf repz (bad) xor xchg in push xor test lcall test fimull out xor in repnz into inc add add and call xor inc xor add or dec jmp sub and jnp fisubrl jmp test out jne add dec sbb fstpt inc mov add jbe ret enter fld js dec les aas xor cmp xor or loopne fcom pop arpl mov imul or ret ja lds cmp repz loopne and add lods fwait data16 jnp adc orl xor cmp sub adc cmp pusha rorb add repnz inc js shr lcall out push mov les scas pushf pushf cmp push outsl aaa push fmull loop and pop das (bad) fsubrl cmp jae xchg xchg cltd or or xchg sbb jns lret (bad) cmp and sarb call fsubrs jno out lods sbb xor mov push je inc adc xor insb popa lock (bad) scas mov jge int3 cltd (bad) test pop xor add lods or dec jae ljmp or dec test (bad) les loopne mov leave stos fistp mov sub out pop ret sub add push add inc add pop repnz dec jbe inc xor jl mov js xchg fs mov mov mov and dec sub out (bad) push dec paddw addr16 iret das mov mov or stc stc add imul and pop mov adc or xor fist cmp scas inc pop and inc xchg pop mov je cmp xor movsl mov int3 out cmpsb pop xchg pop jmp ret push xchg push ja push jg into stc xor mov movsb mov int3 jmp xchg lret sbb addl bndldx in fsub inc out pushf xlat add mov lods imul notl and daa (bad) jno jno cs jecxz mov sbb ret cmp lds cmp fmull (bad) sub push add into xor cmpb js mov std das push loop leave cltd ror or shl out ficomp dec dec (bad) bound cmp mov dec push jecxz out fiadd clc lods movsl sub repz call xchg loop fstps cli jns in lods and popf aaa movb jl stos sbb add hlt mov (bad) pushf adcb (bad) addr16 mov lods sub xor aaa movb ret frstor sbb xor and rolb gs addr16 rorb sbbl (bad) push outsb push push and jo cmp or mov mov sbb nop lods push (bad) mov mov pop movsl push jge or je lds fsub push aas adc aas popa inc std hlt mov pushf jle cs pop sbb jg jae rclb pop std leave rcr lods or pop std cmp loop std mov fdivp lahf dec mov xor std movsb shrb outsl add jg jg cmp iret mov and cmp out scas fsubrl lcall pushf out inc jnp std in rcrb out adc dec out fdivp sub (bad) jbe into mov arpl or fbstp jg mov testl fcoml cld xchg push inc daa mov out sti xchg sub push jb je and (bad) testb or cmp (bad) xor fcmove mov std adc shlb js inc mov in inc xor pushf ret inc scas aam dec pop pop sti push inc lea pushf or mov sbb and push cmp (bad) aaa inc inc adc mov aad mov ds cs inc movsl jge (bad) idivb mov int cpuid in xor (bad) mov dec test dec (bad) addr16 test xchg scas lret bound mov data16 cltd lcall push cmp cmp in push js call rorl cli ja fidivr xor pop adc mov inc push or jo sub add cli call jo cli int3 loope jp mov adc cmp sbb xorl js adc jp cmp dec insb hlt mov cltd fldlg2 adc pop or jno into cmpl pop pop sti in loop pop es inc out das scas jmp dec insb hlt mov lods sbb gs cld xor aaa sahf adc notb mov ror repnz add mov cmp test call mov test hlt jb jmp xchg and or mov imul outsb mov push mov dec movsl test jmp cmpsb (bad) mov mull test sbb fs js test movsl test pop dec add test xchg xor or xchg subl mov stc test loop into add out lods push push sub mov add xchg out cmp mov sti add int3 mov ja insl dec dec sbb inc cld scas xchg frstor sti lds movl and shlb (bad) int3 imull pop es or sbb mov and cmpb clc push int3 lahf cli dec movsb and imulb jle xchg bound push loopne cmpl in mov int3 mov mov sub add rcr jg mov int mov push adc das icebp mov mov xchg loop,pn into xor jge stos xchg or les repz inc mov xor add lds cltd icebp inc fdivrl or cld add insb rolb outsb xor sbb xlat inc (bad) stos pop mov fcmovb sub std jmp mov gs cmp sbb in aas inc jg pop xor das cmpsb push outsb jb sub pushf (bad) sbb xchg (bad) repz out pop int in stc adc dec jg sub jno imul icebp mov pop xchg xchg jne cmp add inc xchg hlt enter loop pop mul fcoml lock aam jo mov pusha inc icebp lahf shrl (bad) inc pop and or cwtl clc fldt test fiadd lea fwait xchg mov es mov insb ret (bad) xchg lahf and cwtl adc icebp mov out out pop lea pop test push xchg jns iret xor sbb in mov loopne mov dec test inc adc dec sbb dec decl sub insb fimull cmp xchg aad push jns or mov mov inc adc adc xor stos ds fiaddl fnstenv repz (bad) int3 xor orb add push cld sbb xlat out ljmp mov mov insl pop mov jae jno loope cld push daa aas sbb xchg ja jbe add pushf xorb dec (bad) adc mov movsb aaa xor (bad) int3 lahf mov dec sub icebp jg hlt sub mov cmpsl add (bad) jb popa pop ds add loop mov sbb jg cmp fldl2e sbb out je in clc es xor repnz ret int loop punpckldq mov bound loope xchg xlat jg in out add out or and out incb mov in adc adc icebp (bad) inc dec pop push sbb cmc pop mov sbb out or adc cmp jb or jo out mov test xlat (bad) mov stos mov lods cmp push rcll outsb sub verr push dec (bad) fstl mov xchg loopne ret (bad) sub cmp frstor lds add cmovo movl outsb out inc mov stc ret add daa into (bad) cmc pop mull cld nop scas cwtl lahf (bad) fnsave jge jle cmp fldt scas das add mov cmp jnp push arpl cmp or xor push jg adc mov daa loopne cmc pop sbb nop/reserved icebp test aaa popf lcall pushf xchg jbe ja movups xchg arpl mov scas (bad) xor push dec sbb xchg arpl and cld jmp lods mov xchg sbb hlt xchg cmp xchg mov gs cmpsb out (bad) leave lds mov aad out shll shr mov ret add loopne sarb data16 jne inc mov pop jge add shr fdivrs aas js (bad) fbld (bad) push xor in or loop fnstsw sbb ret pop dec cld mov mov dec dec sbb sub (bad) fstpl mov cmp or daa dec cli and sbb xchg (bad) xchg mov das outsb jle mov outsl sti andl rcr in pop mov jb xchg sub xlat dec std adc push loop fnstsw jns push inc push lds inc mov mov pop xchg pusha dec or mov loopne std (bad) mov repnz lahf cmp mov popw xchg jmp movb xchg push sub mov or cmp test das loope add ret out mov fnstsw in inc outsl (bad) or jl lock jl lock jns aaa (bad) cmc movsb popa ficompl push pop xlat popf adc fdivp sub mov cmp jb cmp outsb movsb lcall (bad) xor (bad) repnz outsb (bad) mov arpl sub aaa mov in roll pop dec or lret lods add adc jl es scas enter mov xchg jp push mov int (bad) icebp aad ja push inc movsb lds add arpl jecxz iret pusha (bad) xchg divl mov mov jb mov repnz add sub jmp push jmp es xor jecxz jl repnz mov cwtl loop mov lock js fildll aad nop mov aam sarb stc dec fdivrs fbstp sbb sti sub xchg dec xlat movsb outsb adc daa loopne scas dec xor (bad) je dec lea sub push dec decl and pop pop clc or out cmovnp pop add adc lock jp enter popa (bad) lret mov adc fdivrs sarl out cmc and xorb cld into or jle repz pop adc pop imulb cmp (bad) and add jl pop clc stc and outsl jecxz loop rcl pop and arpl add mov jmp adc out (bad) jno and pop jg std je enter fcmove mov cmpsl nop add dec mov add jo fdivrs add lret sahf inc stos mov rorl fcoms inc cmp mov cwtl cmp out out std sbb cmp ret call jb ficom es or imul fistpll std mov and sbb clc shl icebp hlt fbld shrb sub xor sub xchg cmp inc lret or or xor ret inc sub fcmovnb pop gs sbb popf add fstps jbe cltd jg sub loop loop mov (bad) pop xor add cmp jae fisubr jle outsl push scas inc xchg pop sbb cmp cmp inc rorl pop pusha pusha ret ds adc jle cltd cmpsl add inc push gs out les jno push fwait aad ss fisttpl inc sbb and sub pushf and pop fwait mov dec sub dec (bad) stc mov and mov pop dec sarb scas clc dec insb cmp cs dec or (bad) iret test xchg pop rcll inc mov andb (bad) jl jno xor push dec dec push mov icebp ret pop dec loop or ret xor jle repnz lea loope mov pusha xlat pop mov ja int fcoms cs xor and xor sti shl test fstpl leave sub daa and aas outsb call adc mov mov mov adc xor das jo test rcrl icebp (bad) (bad) addr16 mov gs sbb js cmp sti lret jecxz stc enter imull aam mov das pop sbb insb sarb imul loop pop push adc std popa and mov (bad) stc arpl test pop ja (bad) into mov mov push mov in lahf clc sbb js clc jno cmp mov add sbbl das out sarb add cmp hlt (bad) adc lds shr ret aam pop add lret xchg mov mov pushf andb jmp incb jns sbb clc pop shr mov inc jp (bad) mov push pop mov test dec (bad) and or add mov das loopne subl jne inc (bad) sub xorl dec incb xchg and shl or mov es mov out xor adc add pop jge inc mov inc adc shll lds rorb in enter mov movl and enter cmp (bad) and mov ret ja pop sbb sbb repnz add rorl mov adc xlat dec mov push stos push (bad) mov ljmp cmc mov leave jne enter xlat and push int3 and adc fsubrp or mov repz or das icebp sbb cmp sbb sbb fnstenv push push cli outsl jl (bad) mov icebp mov sbb pusha pop mov arpl fisubr jle add push xchg cmc or jno add sbb aas jnp lcall and or cmpsb push mov lea shlb jbe sub add pop adc xlat popf jnp sbb sub pop js sti stos idivl jg cmp out xor jp xchg sbb call iret movl jg aas xor fild stos mov test imul stc fmuls icebp jp adc insb mov sbbl cmp ja hlt mov (bad) mov xchg lret daa test rclb mov out cld leave jae and fstpl test lock xor xchg cmpl dec inc add aas xchg xchg imulb sbb add pop (bad) lods lea inc mov mov xor stc mov (bad) repz jmp xlat loop dec mov push ret pop pushf adc push test sahf adc mov mov ficomp mov jmp add jbe mov dec pop cmp clc cmc pop jbe cs cmp or pushf adc push test shrb movb sahf ror jmp jecxz xchg xchg sub jo imul psllw pop sbb int icebp mov in add mov fisubl xchg pop cmp pop cwtl aaa in dec mov loopne add sbb fdivrs cmp sub and fiadd (bad) call outsw les jnp (bad) out imul mov rorb jge add or push iret js mov add sbb push test sub mov in fwait aas xor inc pop or dec jg xor fiadd and jnp (bad) int cmpsl inc mov mov cmp xchg scas int into lods sbb (bad) (bad) sub leave mov lea or in ss (bad) push mov add and fidivr fcoms int xchg shll lret sbb mov add lods pop push pop add clc ljmp adc lds push pusha jle xor push jne cld sub xorl cmc add sub dec repnz adcb (bad) sbb dec pop mov dec sahf in ds stos (bad) cli adc cld mov int3 pop repnz pop dec out push or sub mov jcxz repz (bad) clc (bad) xor mov jle pop sub cmp cmp lods (bad) pop pushf insb cmp mov mov cmp push add jne lcall aaa into test loopne test outsl or insl stos fimull lea lahf add ret popf mov mov pop fldcw clc pop loope fcoms cli pop ljmp sub loop mov loopne add sbb ret cltd dec and movsl inc adc repnz mov or call push xor bound mov dec pop add pop fs icebp (bad) add roll cs push cmp test das dec mov int3 test mov xor clc inc in lods fisubl mov rol movsl daa out in popa mov jge fsubrl mov pop lahf jne lea lea pop dec in int3 and sbb jae cmp enter inc lds xor icebp (bad) cwtl clc pop or mov cmp inc fnstsw xor lea das fs mov cs inc and data16 sbb test faddl in mov les pop test xchg cwtl outsb push lock sub mov pushl test imul xchg ljmp jecxz lods aas mov jae int (bad) lods das adc ja mov add dec inc add pushf jg cmp sub add outsb xchg or xorl adc push sti call (bad) les xchg push mov cmc xor cs adc sahf push pop es push addr16 pop sbbb stc xor test adc stos mov insl bnd in add ror rcrb mov jnp sbb cmp pop scas iret add adc and jp in push stos call jno mov or jne inc bound popf xlat cmpsb mov sub leave nop sbb imul xorl subps mov cli mov lret push sub sbb inc imull dec inc mov fwait jl leave fs xchg nop jl pushf out sub cmp (bad) cmc jne cmpsb and push fmulp inc fldl cmpb inc inc mov ss inc mov and push dec jl shl bound mov push jbe test into pop imul jl fistpll xor (bad) lods push mov inc test inc mov insl xor in mov pushf data16 scas outsl xchg adcb mov add sub mov sbb sbb dec xor sbb add inc insl jmp cmp (bad) mov mov clc xchg enter dec dec sbb ds jp mov (bad) repnz or enter pop jp add or inc push mov out lods dec scas jns and es sbb mov jp jecxz hlt in dec sbb lods sbb fidivr add push movsb outsb add adc movsl pop scas mov mov (bad) mov out add lcall pop mov lcall stos mov sub data16 cmc in repnz push mov cmp stc bound dec or shrl notb lahf inc dec mov pop inc xor cwtl adc js mov pop pop dec into adc in pop and mov dec xor out insb mov scas scas mov dec add inc mov test bound pop fucomip sbb lock mov cmp pusha lea enter jns xor push push pop stos loop,pn push pop jae push iret aad push mov pusha (bad) orb pop movl insl mov into ljmp jne inc aam or shlb cmc in rorl jno mov and mov mov rolb shl movsb mov pop fisubl mov dec add mov fsubr sahf mov cwtl pop xchg push and roll shl enter pop jp in aam mov mov add popa mov or pop add mov sbb xchg xor jno loope mov pop mov into dec add pop or xchg aam int add outsb or rolb sbb adc in add rolb repz and jo ss cwtl leave cmp jl les daa mov dec icebp jmp or add sbb (bad) inc xchg mov vmovsd insl dec lcall push add cmc jne scas xor mov popf orb adc mov lcall pop inc xor mov rolb xlat lods outsb pop xlat xlat popf add pushf or xor std push andb add xor jmp clc and jp sbb imul addr16 cmp out add loop pop jbe shrl pop inc jae sbb xchg bound adc jae cmp insb test cmp es add jg outsl mov dec jne mov sbb xor xor shl bound loopne es sub jge loop into add pop lahf cltd dec dec jmp pop sbb stc sub mov dec pop jno orl sbb jno sbb push inc jecxz insb adc call lret pop xor daa or loopne mov fsubr out mov dec (bad) xor scas mov (bad) out subl aam mov jns mov or xlat mov push (bad) aaa inc jecxz push pushf xchg push popf addb xlat fidivrl add cmpsb (bad) xor pop jno loopne mov pop mov stos outsb xorl pusha mov (bad) es out pushf addb mov mov add xchg std jns sub inc pop jp ljmp jge jo add pop sub adc je add sbb adc push xchg and cmp cmp fprem1 jne scas xor push xor xor nop ds addb (bad) xlat bound inc dec cld cli loope pop (bad) mov into jne add push push sub cmpsl addl inc dec pop adc cltd xchg xor jl push adc in dec cmp insb cmp adc cmc in (bad) jne ret dec push add std loopne fisttpl sub sarb pushf xor jmp ficoml test add mov in jnp sbb push mov cmp loop,pn xor jae push into aad pop lea inc ret sub int3 and roll mov lods cwtl ret push es mov icebp jno lcall lcall add aam ret cmpsb ret pop xor lds mov dec pop jp dec aad inc mov add inc jge fiaddl push (bad) cmp hlt push int3 loope mov sbb add and push push scas pop pop (bad) add pop popf addb fnstsw out pop int3 adc mov lds pushf outsb cmp jo jo pop orb xor cmp aad test sub pop int3 adc sbb jecxz es insl jno subl mov add xchg dec popa nop dec out dec inc pop push pop pop loop cwtl and jmp mov (bad) mov out add shrb jo or leave insb mov fmul xchg sbb pop sbb xor ja cli push xor push add clc clc js dec fsub inc or ret push jne out imulb pop js out loopne sbb add inc add lods push sub push orl lods jo mov insb ss divl out pop or out add idivl ja test (bad) and dec sub fidivrl inc mov sbb loope clc cmp aas call in andl pop scas (bad) or clc std xlat aas andl cmp repz jmp cltd inc dec cmpsl adc pusha sbb push inc xor pop xor jae iret xchg fsubrl bound sbb jg or js cmp out cmpsl sbb jle icebp xchg sub jae jnp sbb out int3 xor push mov or cmpsb mov add pop dec inc inc push or addr16 in sets push cld inc test cmp cli and cmp daa push adc adc roll pushf cmpsb push aam test popf lcall mov add push test frstor push fist push (bad) aad hlt and push outsb push mov repz fs push cmp push and mov or sub (bad) cmpsb data16 int3 fbstp loope pop mov pusha pop inc xor inc fdiv cmp and dec setl frstor dec xor mov or and adc test push xor rolb out lcall jno xchg xor sbb push clc sub adc pop outsl ljmp cs cs outsb in shrb out jo xchg clc cmp loope pushf xor inc cmc add je lea push movsb mov outsl mov repz mov bound pop inc scas pushf mov test cmc std lds call mov xchg je inc frstor xchg xchg xor xor pop into fisttpll or cli fisubl jecxz jnp mov inc and jne push aaa ss sub jno fnsave mov sbb xchg pop xlat cmp mov inc inc jg add inc loopne in xchg fnsave shll es enter mov arpl stc sub and divl jl sub les jb fcom push mov stos dec inc jnp or cmp mov mov aam push adc inc rcrb or sub jb xor mov stos dec inc xchg sub cwtl cmp mov ffreep lcall loop or push jae stos mov pop pop jp into je loopne inc into inc pushf rcr das out stc sub and add std aad mov shr push imul lds pop pop inc rcrb or mov dec jp add push dec mov inc sbb mov outsl test int3 hlt lret jl scas mov sub jno les rcrb jg pop imul aam cmpsb repz and sbb jbe mov lcall and or leave jecxz out pop in icebp jno lret adcb add or into sbb adc movsb aam push pop (bad) lock repnz jno les add or push aaa dec inc pop ja (bad) dec pop aad mov cwtl clc and dec push jl iret mov stos frstor mov push daa mov leave leave cltd add mov aam pushf subb aad fcoms mov cwtl clc and and dec xchg iret mov mov mov sbb adc pop pop shrl adc pushf adcb shll mov pop inc rcrb dec jle add out jecxz pop or loop lea jbe and lock push sti int3 dec dec imul sub adc inc xor push dec xor add iret add push aam movb lea xchg imul mov inc xchg sbb std jmp std push pop popa jae mov cmpsl push in mov scas dec add and and mov popa int3 or pop out ret cmpb (bad) negl (bad) (bad) adc call sbb mov pop mov xor int3 or inc cs mov repz lahf lret das pushf xchg dec out shrb lods fmull arpl sbb mov pop cmp fadds test sbb mov lahf daa cmp jge xchg xor sti cmpl add mull pushf sub mov jne add push adc lods outsb mov fsubrs jbe jg out iret shll cmpsl (bad) in aaa adc jne add lahf dec mov inc and into adc (bad) loopne test jo (bad) and cmp iret mov mov xor jno test sub cmp outsl in dec dec inc ja aad fdivrs sbb xlat icebp xchg sarb int3 jl sbb jge gs icebp mov pusha push je jge xor mov (bad) repnz or (bad) rorb sbb pop xchg and loop sbb mov cmp jl jge loopne (bad) stc stc add dec add mov mov ret rcl inc and cmp pop sub cmp ret addr16 mov inc (bad) rcll pusha jb in mov inc jle addl stos loopne mov fstpt dec jno mov cmpsl fprem1 push mov jb into mov cmp mov xchg xchg or push pop jecxz je inc xor xor aad push je (bad) lock cmc push mov jo xchg daa (bad) lret jge movsl fsts scas dec mov jae pop sahf cwtl mov loopne push lea xor sub jp mov cmpsb adc std fisttp cmp jecxz mov lods ds enter fwait call xchg push or cmp in push push adc popf xorb dec dec fsubl lcall cmpsb ret scas mov (bad) aam push pop pop daa mov or inc sbb adc popf cld inc mov mov cmp rorb push ljmp mov stc dec sub xlat mov cwtl add lcall in inc xchg cwtl cmp adc loope xlat sub sbb (bad) mov out jnp je mov sar xcrypt-ecb cmpsl into xor inc dec into sbb pushf xchg add rorl cs push cld pop movsb or lret mov and fdivl fisub or add jno cltd arpl mov mov cli ja add cmp pop push sub or xlat pop outsb arpl dec inc inc sbb inc cmp mov test scas jmp das pop out jg je mov js jp addb in xor cmp pop outsl add adc adc pop jp jge lret ret in enter cmp cmp out nop cwtl nop in das pop stos mov pop inc lcall xlat daa pop pop pop cmpsl clc lea insb ds sbbb in xlat inc out fnstsw je test push cmp jbe into sbb scas jns test out mov mov fild mov data16 call icebp adc adc pop lahf mov push mov mov pop imul inc aas fwait adc adc cmp push lcall push mov cmp enter jo mov or lds in in int3 cmpl dec push (bad) pop adc (bad) lock and leave pop test test adc jle fild sub movsl aaa rolb xor add inc insb xchg sbb jecxz and mov pushl cmpsb and (bad) mov xchg hlt lcall fsubrl mov in mov inc cld adcb (bad) push fwait xchg stos adc outsl adc pop mov push push mov arpl lahf fdivl mov test lahf icebp sbb xorb and pusha ficoml sub fs loop ljmp inc sub call jmp insb cmp ret shll std loop xchg jge mov xchg inc incl pop test cmp push pushf (bad) nop out cmp pusha sti lret test adc dec sbb (bad) sbb add loopne test stos in mov adc xchg mov or lahf repz stos rolb and mov inc sbbl cmp leave cltd jecxz mov mov xchg sub add sub sbb pop std test push jo push mov dec sbb imul jp cmp icebp cli lds jns cmpsl jnp cmp cmp adc ss test in stos fsubrl lods loope movsb (bad) mov sbb push mov xlat js sub (bad) iret test dec mov ss pop jb fsubrl out mov daa mov shr mov aad jmp add or (bad) ret aam das push lods xor cmp (bad) mov push insl (bad) (bad) lea in repz (bad) jnp lcall jne addr16 add add (bad) lods dec mov pop cld nop pop movq shrl cmpl in xchg xchg test cmp add aad jns mov lahf adc jae ret jmp mov in loopne lds mov inc mov daa loopne cmpsl cld or xchg ljmp jmp or mov std test iret popf cltd mov jp inc sub xor gs mov insl pop xor add dec decb icebp pop aad mov mov cmp rcll or aas icebp add (bad) int3 mov rcr addr16 mov int (bad) cmp popf mov adc mov repz add mov test (bad) jecxz jecxz (bad) test pop or add jle lcall and sahf push pop mov imul and iret (bad) jo jno lock movsl xlat js lahf cld adc jae (bad) adc mov sub aas inc sbbb mov or xchg dec dec inc cmp push (bad) xchg inc pop lods popa loope movsb inc bound das cld sub xchg daa hlt sbb jmp imul jo jmp cmp pop mov xlat shll test es mov pop xlat (bad) cmp stc add ds fisttpll pop or je out xor lods pop jecxz xor push push and aas pop repnz adc dec inc iret popf add jg shr cs xchg test (bad) sbb loopne shlb pushf cmp and fidivr out outsl cli adc cmp and mov int3 jl lock xchg or (bad) or mov and arpl leave mov dec inc and iret push mov je and cmp dec push sahf fnstsw push xchg outsl imull mov jns jb jne jno xchg push sbb pop cld clc repnz xor outsl testl arpl lds xlat in jno ret cmova xchg jns orb or gs shrb test and xlat or add les (bad) je ret loop mov lahf test xchg push xor add lods cmpsl les sahf das push jg push dec jnp pusha hlt sbb jmp pop lret pusha mov vmovupd fisubl scas fxch push inc scas ret call popf mov idiv add lods xchg dec dec enter std or inc sbb cs mov fwait lock sub jbe sbb fbld ret outsb ret leave shll cmp xor cld pop jg pushf sbb ret push cmp or pop fidiv loop push jno push enter push sahf scas lcall inc out loop sbb jmp and push outsl mov adc mov lods dec mov dec xchg xchg adc jbe mov mov inc pop aam jno pushf addb lret cld mov pop (bad) mov ds fcomps cmc jle or pushf fwait mov add les xchg imul out jecxz fnstsw adc test lock push pusha outsb (bad) idiv mov fbld sarl and mov push icebp pop in hlt (bad) popf cli rorb cmovne in xchg scas inc pop rorl xor leave xor aas mov jp jg pop and pop das scas pop inc mov sbb ficom mov cmp pushf adc lds xchg add fsubl pop (bad) mov jae pop aam jno insb add aaa xor out mov jb (bad) cld jns push loopne subl pusha in dec test push les stc repnz mov rcr inc sahf mov pop cwtl insl push xchg adc scas loop mov jo and ja test pop jb jg and xchg (bad) pop push clc or out jg jl or inc inc pop mov hlt inc pop sub xor mov enter dec sbb inc mov lds mov xchg mov decb push dec mov daa les adc mov psrad fildll add mov ja mov jbe push pop push mulb inc fbstp out push add and int fwait mov sbb or jb pop loope movsb and cld or mov outsb lahf frstor jg cld jg jge arpl cmc lea pop fimul (bad) xchg cmp in cmp push pop push mulb dec xchg xor sbb mov out repz bound mov loop jae or sub in addr16 (bad) in jg mov fidiv push push jbe gs fmuls (bad) ds jge ret pop sub xchg add jb lods cmpsl mov fadd cwtl pushf sbb test clc push sub cmp push data16 add into out notb sbb mov jg arpl push sbb push jl popa icebp pop pop (bad) pop icebp xchg or and mov (bad) and sub push mov mov lds cmp ret les scas inc div cmp mov mov cmp aam adc jo sbb int jns pop dec icebp mov and mov add and movsb movsb inc xorl inc sub imulb xor out dec sarb lods mov nop (bad) fwait sahf cmp aaa into clc sub jo sub jmp push xchg inc aam lcall leave add lds add (bad) outsl movsl pop addr16 push dec dec push cmp push xlat jp push shrb xchg test pop push adc divb insb mov lcall outsb cmp (bad) push jge inc sbb mov pop sbb dec dec frstor mov cmp iret leave cltd (bad) jne or inc jb out jp push jmp sub xchg xchg aam jb sbb mov push cmp data16 test sbb hlt outsl fcomps jns mov or and ret insl in ja sub lahf loop aad (bad) jmp imul insb loop add popf cmpb inc pop aam or shl fwait cmp add aas mov pop xchg fs jne and js or pop xlat sub mov cmpl mov cmp out stc and clc mov insb aam add rep or into xor adcl loop fimull lea cld loop inc pusha fimul sub and lret stos pop jb lods adc mov (bad) outsl xchg push inc cld and daa cwtl xor loop mov bound (bad) frstor inc pop and mov mov adc icebp (bad) test pand loopne or sahf push sub outsb dec outsb (bad) inc inc sarl (bad) xchg bound mov xchg jno das jg sbb ss out incl movsl pop add bound ljmp xlat inc add (bad) xor pop mov js cwtl les gs mov jmp stos pop lcall pop (bad) call ja,pt cwtl jmp das arpl loop leave adc out (bad) ficomp push insl (bad) mov in sbb pusha inc rol insl mov and or cmp jbe repz arpl in loop xchg inc cmp sbb aas add fldt dec cld jns (bad) xor sti mov insl ret lret xor lods sbb jae pminsw jae int adc push es jge adc sub xor mov mov xchg mov test add xchg xor jmp push adc aaa imul add or in (bad) mov push mov jo dec pop xor inc int3 push mov leave icebp cmp fmull jl xchg adc or xor aam das (bad) je sub sub outsb pop popl inc mov push or sbb add jo sbb test jmp decl jno ret loopne imul lods sbb cmp sbbl bound lds push (bad) cli cmp cmpsl sub jg outsl fdivrs scas mov sub add sub in and sub hlt shl mov ffreep sub ret (bad) repz sbb inc xchg dec mov mov inc fild xchg xor movsb testl mov xchg push aas (bad) loope notb enter pop in push xchg (bad) or jae mov icebp gs or xchg scas xlat pop jmp jae add inc xchg les cmpsl fisttpll inc pop jg adc mov mov xlat test pop push xlat jbe fs and or sarb cmc rorb in jmp fcomip pop mov sti pop jo gs sub xchg cmp push lahf std push pushf xor jmp dec mov clc ljmp aam lret mov cmpl aad ret call cwtl shr adc movsb pop imul les sub or dec mov clc push xchg movl mov sbb jle cld je or and rorl add lret fistp or lods call adc cld jo jbe mov fldenv mov xor sti decl jns enter loop xchg sbb adc out cmp orb std loope scas iret jle addb (bad) cltd jecxz xor add pop dec dec sbb les (bad) ljmp jae mov push adc ljmp cmpsl cmp cli dec inc jg movsl jns (bad) loope leave lds pop (bad) mov fisttp jge mov push pusha repz mov cli jae pop fs pop cld je out adc sbb loope in sbb repnz cmp decl cwtl jp push cwtl xchg cld mov loop mov jle vmread jg dec cmp pop jnp lea cltd adc int xchg repz push aam jecxz dec (bad) pop in scas mov dec push xor int3 lea xor pop mov (bad) in inc pop (bad) fbld add jg in test add scas stc cmp std in out lods mov jns pop sub xor fisubrl lcall and mov or (bad) and mov fucomip xchg in add xchg pop xchg fwait std sub xor nop pop hlt sbb jecxz fwait insl pusha in mov sub mov mov or (bad) add jecxz sbb xlat xorl cmp std in lret pop jbe or jo inc (bad) jno scas std jne (bad) mov (bad) repnz add xor call in cmp movsb xor push daa ss orps (bad) cmpsl cmp aaa les nop mov xchg scas push jp (bad) lds jae jo insb jne dec jno ds cmp push pop ret fldl popf and cmc outsl mov push daa pusha js pop mov hlt loop sub add add cmc mov pop sahf push sbb pop xchg aad inc cmp add xchg in sub test bound sbb inc pop daa lock xlat lds sbb aad and xchg cmp xor stc xchg icebp or mov xor int3 test or jae xchg imul shrl inc sbbl test sbb jns arpl mov outsl and nop or inc xor sbb sbb in mov in sti pusha cmp test pusha ret lcall jb js ret jo rcrb dec aas and xchg inc sti ret cmp dec daa pop bound aas mov stos test jecxz (bad) xor inc mov ja shlb aaa lahf into dec dec jae or popf sub mov pop push mov test iret mov cmp and mov lret pusha jge adc push jnp (bad) cmp xchg ret xchg adc add xchg mov mov adc mov sbb ja je push or add in cmp xchg (bad) add test std cmp lret pushf addb add sub lods test les push fsubrs pusha shrb hlt dec sbb ret pop popa xor popf daa aad pop mov cmp mov add jle sbb (bad) jb das outsl dec push xchg insl mov ljmp lret jle rorl xchg adc jbe mov inc aas or add daa aas sbb loop add imul cmpb mov ret mov lods mov pop sti (bad) xor and adc push outsb imul xchg into xchg fidivr pop lock ret xchg push gs jmp repz js movsb xchg sbbl fwait jne jle cld lret add pop bndldx mov pusha imul (bad) lock add movd test mov aaa (bad) idivb pop mov hlt sbb popf cmp jne sbb ror pop pop lahf mov in inc cmp cmp sub lock push jmp fucomip out fnclex sub and jle gs in in into sbb test mov xchg mov sarb mov loopne gs inc jmp inc cmp push mov dec daa (bad) jno sbb jg out test stc adc add sub dec inc iret add test lods push lods pop cs aad insb movsb movsl or dec and jne add jo jo mov stc xor mov daa and sbb mov pop mov pusha sbb inc or adc xchg add jae jp aad loop pop es or fs push lods aaa out sti (bad) mov jl (bad) fbstp sbb sbb sarl sbb aaa out xor mov sti mov push jo fild pushf rorl jo ja cwtl popa les mov jb lods mov lcall mov bound dec leave std inc cmp lds call pushf and push ficomp or jns iret das pop lahf cmp mov xchg orw cs sbb arpl push adc xchg fistpll repnz dec add jae daa pusha movsb mov dec sbb cmp pop sti cmp scas and bound push stos or iret mov and or mov jmp add mov push mov mov xor int inc sbb mov pop xor (bad) hlt jmp mov jno jecxz cmp pop sub mov add out cli mov fcompl scas pop fs lds cmpsb or add pusha add mov inc mov pusha mov ljmp lock mov cmp sbb ret outsl sbb insl jle shrl pushf addr16 cmp cs inc xchg add xchg ret mov dec and sbb push test outsl sub es adc cmpsl jnp jae xchg or icebp (bad) pusha mov mov jecxz xchg or mov sub inc push mov add fiaddl add push test int cmc pusha sub adc xor and aam cmp jns add scas push pusha xlat fisubl in sbb add dec (bad) dec dec addl mov addb add xchg lret les addb sbb lcall lcall ror dec lods add dec loope xor xor xchg sub ds push pop or mov jno jno pop fwait (bad) shlb mov add add dec inc scas inc pusha (bad) sub add xor add pusha add add add add add add add add inc add inc add inc inc add inc add inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc inc add inc add inc inc add pop dec add lods outsl push sub outsb pop sub outsl mov sub outsl std sub outsl repz outsb mov sub insl pop sub dec add inc inc add inc add inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc inc add inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push sub insb sbb insl je scas outsl lret sub outsb sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl int stos insl jb movsb push inc inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc push inc inc inc add inc add inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add pushf and scas outsl xchg sub outsb repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl xchg mov inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc add inc push inc inc inc add inc add inc inc add inc add inc inc add inc inc add inc inc add xchg or insl jle scas outsl cmc sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl cmc sub outsb jp nop arpl inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc inc add cmpsl insb cs outsb iret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp insb cs inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add insl push sub outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb push inc inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc push cmp sub insl jo scas outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cmp into test (bad) cmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb jo push dec add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc add inc add inc push inc inc inc add inc push inc inc inc add insl jo scas outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp xchg stos fadd push stc idiv cli cli cli (bad) cld cld cld push div ljmp mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb jo inc inc add inc inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add inc push inc inc inc add insb push sub outsl std sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cmp ret clc idiv std std std (bad) cli cli cli (bad) std std std jmp xchg pushl clc push cli clc jmp js sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb push inc inc inc add inc inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add scas outsl repz outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp xchg jmp cmc out (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli ljmp mov ljmp cmp stc sti cli jmp repz jmp xchg ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp insb cs inc inc add inc inc add inc inc add inc add inc add inc add inc inc add xchg sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl incl sti stc (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std ljmp scas jno sub outsl ljmp outsl jmp xchg jmp repnz shrb sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp arpl inc inc add inc inc add inc inc add inc add inc add inc inc add lods outsb jle lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp mov sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli ljmp mov ljmp outsl ljmp outsl (bad) cmp call sti call scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb jp inc inc add inc inc add inc inc add inc add inc add movsb push sub outsl cmc sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp cmpsl (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std ljmp scas jo sub outsl ljmp outsl ljmp outsl pushl mov (bad) mov sti sti (bad) jg cmpsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl cmc mov inc add inc inc add inc add inc add lods outsb xchg sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp (bad) push clc idiv cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli ljmp mov ljmp outsl ljmp outsl ljmp outsl pushl ljmp pop mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl xchg inc inc inc add inc inc add inc add lods outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp je fsubr jecxz std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std ljmp scas jo sub outsl ljmp outsl ljmp outsl ljmp outsl incl jle jmp icebp (bad) fsubr jecxz xor outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp push inc inc inc add inc inc add insl jbe scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl decl std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli ljmp scas jno sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl mov decl outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp insl jb inc inc add push add scas outsl lret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cmp hlt (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld ljmp scas jo sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp jo lret (bad) out div (bad) cmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl int pop dec add lods insl push sub outsb std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp mov cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti ljmp lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp xchg (bad) cli sti cli decl outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb push sub outsb pop sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp jno fsubr out std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp in loope fsubr out cs jno sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp insl pop sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl lcall (bad) (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld ljmp lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl incl cld cld lcall mov sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl xchg sub outsl mov sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl lcall sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp jge stc cli stc lcall lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp lods outsb mov sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl call in loope cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp loope shr (bad) sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) scas outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp jp idiv clc (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl lcall sti cli (bad) cmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp xchg (bad) cld cld cld push stc clc push stc clc push cli clc push stc idiv clc cli stc push stc idiv stc sti cli push clc idiv stc cld sti push clc idiv cli cld sti push stc clc (bad) cli cld sti ljmp scas jo cs jno cs jo cs jo cs jo cs jo cs jo cs jo cs jo lods jo sub lods jo jae lahf (bad) cli cli cli jmp xchg ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp scas (bad) cli cli cli decl test sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std incl scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp stc cmc pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli ljmp lods outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl icebp sub outsl (bad) outsl ljmp outsl ljmp outsl ljmp outsl ljmp (bad) (bad) (bad) in sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std inc in ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp scas outsl (bad) scas outsl mov sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) fsubr jecxz (bad) jmp outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) stc stc stc (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) fcomi out sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp lods outsl mov sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp repz scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) ljmp ljmp outsl ljmp outsl ljmp outsl ljmp outsl xchg sub outsb pop sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp jo clc stc stc jmp lods outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) sti cld cld ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp insl pop sub insl push sub outsb sti sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) cmp std call outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsb push cmp add scas outsl lret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp jle cli cli cli jmp lods jo sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld incl jge sub outsl ljmp outsl ljmp outsl ljmp outsl lret cmp inc inc inc add insl jbe scas outsl ljmp outsl ljmp outsl ljmp outsl pushl je fcomi out cli cli cli inc call xchg sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) fsubr jecxz xor jne sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp insl je inc inc add inc add insb push sub outsb repz outsl ljmp outsl ljmp outsl ljmp outsl pushl scas jb (bad) (bad) mov lock (bad) clc sti cli lcall mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld push div decl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsb repz insb push inc inc inc add inc inc add inc push sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp cmp cld cld cld jmp lock ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) mov mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl xchg inc inc inc push inc inc inc add inc add inc add popf and scas outsl cmc sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp jo imul ljmp out decl (bad) ljmp outsl ljmp outsl ljmp outsl ljmp sti (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli jmp repnz scas jo sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl cmc das pushf and inc add inc add inc inc add inc push inc inc inc add insl jle scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl mov call div push sti stc call mov ljmp outsl ljmp outsl (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std push div call scas jae sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp insl jl inc inc add inc push inc inc inc add inc add inc add inc push cs push iret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp test mov std std (bad) (bad) in push lods outsl ljmp outsl ljmp cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) mov mov outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp or inc add inc inc add inc add inc add inc add inc inc add inc push sub outsb sub lods outsb repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp jo jno popf jmp cmc out (bad) clc stc stc (bad) mov mov ljmp outsl (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld jmp repz pushl popf ljmp lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl icebp sub inc inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add inc push sub outsb std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl mov lcall clc idiv hlt cli idiv mov scas (bad) std std std (bad) cli cli cli push cli stc lcall jbe sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub insl push inc inc inc add inc inc add inc inc add inc inc add inc add inc add inc add inc inc add inc add inc inc add inc push sub outsb std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp mov (bad) (bad) std std std (bad) cli cli cli dec jmp mov sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub insl outsb inc inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc add inc inc add dec inc push sub outsb std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp jno jae lahf pushl ljmp scas jo sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub insl outsb cmp inc inc inc add inc inc add inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add inc add inc inc add inc push sub outsb repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl icebp sub insb push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push sub outsb sub lods outsb iret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl int mov inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push cs push jle scas outsl cmc sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb jl xchg inc inc inc add inc push inc inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc inc add inc add inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add popf and scas outsl xchg sub outsb repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb xchg sub inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc add inc add inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push sub insb push sub insl jbe scas outsl lret sub outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl lret sub insl je movsb push inc inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add imul test outsb pop sub outsl xchg sub outsl (bad) scas outsl icebp sub outsl sti sub outsl icebp sub outsl mov sub outsb pop sub add inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add push add addb add add add add add add add add add add add add add add add add add add add add add add add add add push add sub add and add inc add add add add add add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lods outsb pop sub outsb popf sub outsl int scas outsl in sub outsl sti sub outsl in sub outsl int scas outsl popf sub outsb pop mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add cmpsb imul lods outsb lahf sub outsl imull outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl imull insb sub inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add inc inc add xchg fs lods outsb (bad) sub outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsb lea nop bound inc inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add cmpsb imul lods outsb aad scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp imul inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add test outsl jmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl decl lcall fdivrs ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp cmpsl insb ss inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add movsb imul scas outsl jmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl incl cmp cli sti sti (bad) cld cld cld jmp repnz mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp movsl imul inc inc add inc inc add inc inc add inc add inc add xchg fs lods outsl aad lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) js mov (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas jo cmp mov (bad) jns mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp bound inc inc inc add inc inc add inc add inc add lods outsb (bad) sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl call sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti ljmp scas jo sub outsl ljmp outsl call (bad) jmp bnd xchg aam ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb lea inc add inc inc add inc add scas outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) jle cmpsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti ljmp scas jo sub outsl ljmp outsl ljmp outsl incl cmp icebp ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub inc inc add inc add outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp xchg cmc stc idiv cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld ljmp lods outsl ljmp outsl ljmp outsl ljmp outsl call mov in div decl xchg sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp inc add scas outsl imull outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl inc out (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl decl out ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl imull mov outsb pop sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl lcall (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl pushl mov jmp repz lcall ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl popf sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl call fnop ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl popf sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl scas jb icebp div (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl incl cmp clc hlt pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl int scas outsl in sub outsl ljmp outsl ljmp outsl ljmp outsl jmp xchg (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) fsubr jecxz pop rcll sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl in sub outsl ljmp outsl ljmp outsl ljmp outsl decl sti cli push cli clc (bad) clc cli stc (bad) clc cli stc (bad) stc sti cli (bad) stc cli cli (bad) stc cli stc (bad) stc sti cli (bad) cli sti cli ljmp scas jo sub scas jo sub scas jo sub scas jo cmpsb fadd decl scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp scas outsl sti sub outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl pushl cmpsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti pushl outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsl jmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp (bad) popa ret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti call jmp ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp scas outsl int lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) call mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) call lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl lret sub outsl popf sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) clc cli stc pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) clc cli stc ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb pop sub outsl ljmp outsl ljmp outsl pushl sti cli ljmp lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld pushl scas outsl ljmp outsl ljmp outsl ljmp outsb pop cs imul sub outsl ljmp outsl ljmp jne in div ljmp mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) in div pushl jne sub outsl ljmp outsl ljmp outsl imull inc inc add outsl ljmp outsl ljmp outsl ljmp jp lods faddp (bad) jmp lock jnp movsb ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) sti sti sti ljmp jp sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb lahf inc inc inc add inc add scas outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl lcall (bad) call out jecxz int3 jmp mov sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti call in loop pop rorb sub outsl ljmp outsl ljmp outsl ljmp outsl sti sub inc inc add inc add inc add lods outsb (bad) sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp scas jno mov lods (bad) in div jmp mov ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld push div incl scas jno sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp inc add inc inc add inc add inc add xchg arpl lods outsb aad scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl incl jge mov int3 jmp repz pushl mov (bad) sti cld sti (bad) sti sti sti (bad) sti sti sti pushl jge sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp arpl inc inc add inc inc add inc add inc add inc inc add cmpsb insb sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp xchg (bad) (bad) in (bad) out (bad) cld cld cld (bad) fucomi out (bad) lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp cmpsb imul inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add test xor lods outsl jmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl mov decl (bad) mov xor outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp test inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add cmpsb imul lods outsb shrl outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp imul inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add inc inc add xchg arpl lods outsb (bad) sub outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsb (bad) xor add inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add movsl imul lods outsb lahf sub outsl imull outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl cmc sub outsb lahf sub inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lahf imul sub outsl popf sub outsl int scas outsl jmp scas outsl sti sub outsl sti sub outsl jmp scas outsl int lods outsl popf sub outsb pop sub inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add add add add add add add add add add add add inc inc inc add inc add inc add inc add inc add inc add inc add lods outsb jp scas outsl mov sub outsl sti sub outsl sti sub outsl out scas outsl mov sub inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc inc add inc inc add inc inc add movsb imul outsb stos sub outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub outsb stos sub inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add stos outsb pop sub outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl repz outsb pop inc inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add lods outsb js scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl call ljmp ffree call ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb js inc inc add inc inc add inc inc add inc add inc add stos outsb pop sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cmp enter sti (bad) sti sti sti lcall nop (bad) mov fnop (bad) cmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb pop inc inc inc add inc inc add inc add scas outsl repz outsl ljmp outsl ljmp outsl ljmp outsl incl cmp lock sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp call jmp incl cmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl repz inc inc add inc add outsl ljmp outsl ljmp outsl ljmp outsl pushl mov (bad) (bad) in sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp outsl call dec jmp pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp inc add scas outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl jmp sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl pushl jmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub lods outsb jp scas outsl ljmp outsl ljmp outsl ljmp outsl incl cmp sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl inc out incl cmp sub outsl ljmp outsl ljmp outsl ljmp outsl mov sub outsl ljmp outsl ljmp outsl lcall sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp fwait lcall scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl mov sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) (bad) in sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl mov dec jmp ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl out scas outsl sti sub outsl ljmp outsl ljmp outsl (bad) cmp sti cli (bad) stc cli cli (bad) stc cli cli (bad) stc sti cli (bad) stc sti cli (bad) cli sti cli (bad) cli sti sti ljmp scas jo sub scas outsl ljmp scas outsl inc in (bad) cmp scas outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsl sti sub outsl ljmp outsl ljmp outsl jmp xchg lcall scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti jmp xchg ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsl out scas outsl ljmp outsl ljmp outsl (bad) jge cmpsb (bad) jle cmpsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) jge cmpsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl in scas outsl mov sub outsl ljmp outsl call lds ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti decl scas outsl ljmp outsl ljmp outsl ljmp outsl mov sub outsl ljmp outsl ljmp outsl lcall xchg ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti lcall outsl ljmp outsl ljmp outsl ljmp insb and scas outsl std sub outsl ljmp outsl lcall (bad) call jmp incl scas jno sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) fnop out pop mov outsl ljmp outsl ljmp outsl std sub insb and inc inc add outsl ljmp outsl ljmp outsl pushl mov call jmp (bad) ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti push stc idiv xchg aam pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp inc add inc add scas outsl repz outsl ljmp outsl ljmp outsl ljmp outsl decl (bad) (bad) mov fadd (bad) cmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) mov mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl repz inc inc add inc add inc add stos outsb pop sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp pushf call jmp (bad) jnp movsl (bad) sti sti sti jmp bnd outsb (bad) fwait ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb pop inc inc inc add inc inc add inc add inc add inc inc add lods outsb js scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl (bad) mov pushl scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb jbe inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add stos outsb pop sub outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl repz outsb pop inc inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add movsb imul outsb stos sub outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub outsb test inc inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc add inc add inc add inc add inc add lods outsb jp scas outsl mov sub outsl sti sub outsl sti sub outsl in scas outsl mov sub inc inc add inc add inc add inc add inc add inc add inc add add add add add add add add add add add add add add inc inc inc add inc add inc inc add inc add insl xor lods outsl cltd sub outsl fldcw outsl stc sub outsl stc sub outsl fldcw insl xor inc inc add inc add inc add inc inc add inc add inc add xchg arpl lods outsb popf sub outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub outsb fwait xor inc add inc inc add inc inc add nop bound lods outsl ret sub outsl ljmp outsl ljmp outsl call mov mov fnstcw ljmp outsl ljmp outsl ljmp outsl ljmp arpl inc inc add inc add outsl ljmp outsl ljmp outsl decl cli (bad) sti sti sti pushl scas jb or incl scas outsl ljmp outsl ljmp outsl ljmp inc add insl xor outsl std sub outsl ljmp outsl (bad) jnp movsl (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld ljmp scas outsl ljmp cwtl (bad) jns mov ljmp outsl ljmp outsl std sub insl xor lods outsl cltd sub outsl ljmp outsl (bad) cmp repnz cld cld cld (bad) sti sti sti (bad) sti sti sti ljmp outsl ljmp outsl ljmp outsl lcall mov ljmp outsl ljmp outsl ljmp outsl fldt outsl ljmp outsl incl cld cld (bad) sti sti sti (bad) cld cld cld (bad) sti sti sti ljmp outsl ljmp outsl ljmp outsl decl test jg cmpsl ljmp outsl ljmp outsl ljmp outsl fldcw outsl stc sub outsl ljmp outsl (bad) mov sti cli (bad) cli sti sti (bad) cli sti cli (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl lcall scas outsl ljmp outsl ljmp outsl stc sub outsl stc sub outsl ljmp outsl lcall scas outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) fcomip call ljmp outsl ljmp outsl stc sub outsl fldcw outsl ljmp outsl lcall scas outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti push stc clc ljmp outsl ljmp outsl ljmp outsl fldcw outsl pushl scas jb scas fnop ljmp scas jno sub outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) sti sti sti (bad) cld cld cld (bad) sti sti sti (bad) clc cli stc pushl scas jb sub outsl ljmp insl xor outsl std sub outsl call xchg cmpsb fcmovnb lcall xchg ljmp outsl ljmp outsl (bad) sti sti sti (bad) cld cld cld (bad) sti sti sti dec jmp xchg sub outsl ljmp outsl std sub insl xor inc add outsb fwait sub outsl ljmp outsl ljmp outsl (bad) js mov (bad) ds (bad) sti sti sti (bad) jmp lret mov ljmp outsl ljmp outsl ljmp inc add inc add xchg fs lods outsl ret sub outsl ljmp outsl ljmp outsl (bad) cmp mov (bad) cmp outsl ljmp outsl ljmp outsl ljmp arpl inc inc add inc add inc add xchg fs lods outsb fwait sub outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub outsb fwait xor inc add inc inc add inc inc add inc add inc add inc add insl xor outsl fldcw outsl stc sub outsl stc sub outsl fldcw insl xor inc add inc add inc add inc add add add add add add add xor add add and test add add add add add add sbb add add add add adc add add add add or add add add adc adc add add sub add add add add add adc adc add add sub add add add add add adc adc add add sub add add xchg add add push add pop add inc add push add dec add pop add dec add dec add add add add add add add push add add add push add add add add add add add add hlt add add add je jb imul inc add insb add dec add data16 add rolb add add xor xor xor xor xor xor inc add add add or add inc add insb add push add jb jae imul add add xor add add add add add add add add add add jb outsl add add je push add jb jae imul add xor add add add add add add add add add add jb imul outsb add insb add imul outsb add insl add add xor xor cmp add js add add add add add add add outsb add add outsb add insb add popa add add add jo jo add js add add add add add imul inc add jae arpl jb imul imul add add dec add je add popa add add add add add add and data16 add and sub inc add push add add add outsl add jb arpl add add outsl add add add add je outsl add add add add dec add add insl add popa add jns dec add insl add add add inc add outsb add add dec add add add add inc add jb add add jb add add pusha add add add insb add outsl add jns jb imul je add inc add jo jns insb add data16 add add add add add add add add add jns and inc add outsb add add dec add add add add add add jb outsl add add je dec add insl add add add dec add je add popa add add add add add add add add add add popa add add popa add add popa add imul add add add add jb imul je add jne imul add add add and add add push add add imul inc add imul add add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add add mov pushf add add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add add add add add add add cli add add add je jb imul inc add insb add dec add data16 add (bad) add add add add add add add add bound xor add sub add add inc add insb add inc add jae arpl jb imul imul add add add add add imul push add jb jae imul add add xor sub and xor sub and cmp sub and xor add add pop add add insl add imul add arpl jb imul add inc add je outsl add je and jbe xor and push add jb imul cmp and xor sub and xor sub and cmp sub and xor add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or mov cmp jae gs bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds je jne je outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or and arpl imul and and cmp gs gs gs jb jbe insb gs or and and and gs gs gs js arpl imul insb and gs cmp outsb jbe imul and inc arpl jae cmp jae and cmp jb jno gs gs js arpl imul insb ds and and jb jno gs gs jb jbe insb gs or and jae arpl imul cmp je jne je outsb outsw ds fs outsb fs arpl or and gs outsb fs je jae gs bound or and and jae gs bound fs je je and gs xor and outsb popa insl gs jb jae data16 push imul inc outsl insl insl outsl outsb sub jb insb jae and jb imul xor xor xor and addr16 addr16 jo outsl arpl jae jb jb push je jb cmp jo bound dec gs outsl imul and xor xor xor arpl xor ds popa jae gs bound fs je je ds and fs outsb fs je jae gs bound or das fs outsb fs arpl or jae gs bound push push push call int3 pop mov inc sub sub add cmpb jne movb mov push push push push call add mov pop pop ret push mov push push push push mov mov shr mov mov test je xor add add dec jmp pop pop pop pop leave ret inc push mov lods faddl push and (bad) sub add movsb loope add jnp mov adc psubd pop and xchg sbb cmp jb jge movsl arpl sub mov xor pop push subl mov add add sub mov sub and sub shl dec xor xor xor sub push decl pop shr shr and xor mov mov 