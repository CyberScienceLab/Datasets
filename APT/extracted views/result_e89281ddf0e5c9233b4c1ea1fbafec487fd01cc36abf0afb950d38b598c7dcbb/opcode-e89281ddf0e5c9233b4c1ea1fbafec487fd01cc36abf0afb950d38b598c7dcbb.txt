xchg pcmpgtd push xchg xchg push xor sub push data16 adc add inc or data16 or je or data16 add pushw push pushw add pushw add data16 xchg pcmpgtd bound data16 or adc or data16 push push data16 push test data16 mov or data16 or and xchg pcmpgtd inc push les pcmpgtd jne sub data16 mov pcmpgtd add dec insb push data16 add test data16 xor push mov jmpw lcallw insl push dec mov pcmpgtd insb push data16 in out push inc xchg pcmpgtd fisttpll data16 imul scas lahf or add add add add dec pushf dec add pushf dec add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add push dec mov mov add add add dec gs outsl jo popa jae add add add add add add and pop add add add add add and pop add add and add add js inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add xor inc add adc add add pusha sarl push inc xor add or or add add add orb pop inc add xor add (bad) decl add add add add add add add add adc rclb inc add add addb add add add jb jne imul je add dec gs outsl jo popa jae add add add mov xchg popa dec mov sbb cli addb add add add add add add push add add add aam mov inc mov shll add add add add add add add add push and inc add inc mov or add add add mov add add and add add add js inc add add add add (bad) (bad) incl add add inc add mov add add add jns cmp inc add add add add add add add inc adc add inc adc add inc adc mov push adc dec add add add jnp je inc add pop add add add inc add (bad) (bad) incl add add add add add jnp adc inc add (bad) (bad) incl add add add adc add inc add add inc add add add inc add add add jle add (bad) (bad) incl add add push inc add dec add add add add add inc add add add and add add js inc add add add add add add add add add add mov add lods call inc add and inc add add add add inc add (bad) (bad) incl add add add add in add and (bad) (bad) (bad) incl add add push inc add inc add add inc add add add inc add add add orb pushf dec add add mov add adc add add rclb inc add add add inc add add add dec add (bad) (bad) incl add add push inc add mov add add add add add sbb add add rcrb inc add add add sbb add add clc sbb add add hlt sbb or add clc sbb add mov push sbb jo dec add add add add pop inc add pop inc add pop add add add inc add (bad) (bad) incl add add add add sbb inc in add and (bad) (bad) (bad) incl adc cmp add nop and add add int3 sbb push in add add add adc cmp add nop and add add xor add jnp test inc add add inc add add add nop and push add add jnp mov inc add add add adc inc add add add add sbb add jnp enter add add add add aam inc add add add add jnp in inc add add add adc dec add add and add add mov inc add jnp in and add add inc add add add nop and pop add add inc add jnp hlt and pop add add add add sbb js inc add inc add add inc add sbb js inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add sbb data16 insb adc jb inc add sbb js inc add inc add add inc add sbb js inc add inc add add inc add sbb js inc add inc add add inc add jg add (bad) (bad) incl add add dec add jmp inc push dec mov sub xchg or add add add int3 push inc add add or add add add add add inc add (bad) (bad) (bad) cld and mov inc add add add xchg (bad) incl add add add push inc add (bad) (bad) decl inc add add add incl add add add adc add (bad) (bad) decl inc add add add jns (bad) incl add add add adc (bad) (bad) (bad) (bad) cld and add add dec mov add add add add add add add incl add addb add add dec gs je fs jns add push arpl imul addr16 add dec imul add add dec gs outsl jo popa jae add add sbbl inc (bad) inc or es fldenv jnp call das xchg sub cmp repz xchg popa dec mov sbb cli out mov iret dec mov jle loop dec lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add sbb inc add add add add add add add and and and add add add jp add xor or stos add xchg dec jo imul je outsl outsb xor push bound je xor repnz lods xor or stos add xchg inc outsl insl insl popa outsb xor add add dec lods xor or stos add xchg dec popa bound xor add gs xor imul add add add add add sub cmp dec push push daa scas repz adc dec (bad) fisttpl clc mov (bad) aam mov inc mov shll ljmp mov adc sbb add sbb test sbbb ljmp clc cltd dec dec sahf (bad) jns jmp and inc add inc mov or insb cmp pop mov (bad) leave mov push or inc push inc push dec xor cs dec dec add add push add add insb outsl arpl gs imul bound add add and add add and dec add or je jmp push mov call jmp add add add add jb gs xor add add adc add inc gs jb outsl jb je inc insb popa jae add add cld and or inc add add xor add add add or je jmp push mov call jmp add add add add gs xor add add add je jo outsb inc insb imul push imul pop and and add add cmp dec add or je jmp push mov call jmp add add add add jne push gs jne arpl jns gs add cld and mov inc add add dec mov add or je jmp push mov call jmp add add add add add add add add add add add add add add add add add add add add jae (bad) (bad) (bad) incl add and push add xor and push add xor add add cmp inc add inc add add add lods xor or stos add xchg adc add dec add bound jb outsl add imul cmp add add adc add inc add add imul aaa add add add add add jne imul jb jb popa add add adc add inc add add jae jae outsl add jae add adc add dec add popa add insb add jae jae add add push add outsl add add add adc add inc add arpl je imul jae add add or add inc add jns popa add add inc ss dec dec add add pop pop jbe popa push je inc outsl insl jo add add jbe popa dec bound popa jb pop pop jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa push popa jb gs bound fs data16 add pop pop jbe popa dec outsb push popa jb pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push popa jb imul pop jbe popa push je inc insl jo cmp inc add add jbe popa inc outsb gs je inc outsl jne fs jb outsl jb add add jbe popa inc jns xor add pop pop jbe popa inc jns fs pop pop jbe popa dec xor jns add pop pop jbe popa push gs jb add pop pop jbe popa push jne dec ja gs add pop pop jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs bound add add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa push je push popa jb outsl jbe add jbe popa dec xor popa jb add jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc jb gs popa jb add add jbe popa push je inc outsl jo add add pop pop jbe popa inc jb gs je add add pop pop jbe popa inc jns jne add pop pop jbe popa push je dec outsl jbe add add dec xor add and inc add inc mov or push inc imul test outsb cld cmp xor or stos add xchg dec add add add add add addr16 add jne outsb add add inc add add (bad) (bad) (bad) jmp outsb add stc or add add aas add add add incl add dec xor pop mov xchg popa dec mov sbb cli out sbbl inc (bad) inc or es fnstcw dec lods xor or stos add xchg insl add add add add add jb je fs jns or gs imul inc add add (bad) (bad) (bad) jmp add outsb imul add (bad) add cmc adc add add incl sub add add add je outsl outsb xor push add add je outsl outsb xor add inc add add add add add add je outsl outsb xor push add add je outsl outsb xor add (bad) adc adc add incl sub add add insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or or adc adc add add add add pop add gs jns add add data16 add adc add incl sub add pop pop add imul add add je push add aas sete adc add add add add push add gs xor add push add gs xor add sbb jp adc add add add add push add gs xor add gs xor cmp je cli or add add dec xor add add aam mov inc mov shll sub cmp dec push push daa scas repz dec lods xor or stos add xchg das push or sub add push add ja xor or push arpl outsb add add inc add ret add add add add add add add add add add add add add add add add std pop adc andps mov fs and cli loop xor jmp int3 push fistl sahf cmpsb movsb dec insl mov add mov scas fsubs dec lock jb mov es movsl dec jne je mov cs divb sbbb cmp hlt enter push mov (bad) add js push fnop sub int ret sbb addl pop sti inc les lds cmp pop sarb dec inc sbb ljmp sub sbb cld add in or jecxz jnp pop dec jmp adc pop aam dec ret inc or push cmp mov iret xchg test (bad) cltd mov pop push add push stc sbb aaa mov push ds mov pop mov aas lahf cmp inc jo gs adc andps push pop fs mov cli fnstsw and jmp int3 push fistl sub movsb ja mov add dec popl xchg mov jb xlat xor and mov je mov cs cs divb sbbb pop ds sbb mov and add in popa cld cmp mov mov mov sbb (bad) pop es gs cmp or test rcrl xor push add sub or adc xor jp rep loope frstor aaa jno data16 ja push mov lods dec inc out out mov (bad) pop pushf jge out and jne mov insl sarb push jle cmc pop iret pop xchg cmpsl bound add hlt xchg ret pop jnp sbb push inc pop or cltd dec imul dec in ret xchg sti (bad) mov pusha arpl shrl inc popf adc aam inc xlat push outsl lret jg int3 xchg adc or adc push ljmp mov dec adcb adc je adc mov mulb dec cwtl mov add sub mov jl fs (bad) sbb js cmp sahf xchg push dec sub popf shrl xor push add add pop movsl push jg inc fwait adc outsb xor push repz movsb jp int jno fisttpll aaa (bad) push leavew lods ja out mov mov (bad) pop out fmull mov xchg cmp sarb pop pop iret push xchg cmpsl cmc nop mov inc addl xor je xchg test pop std test inc pop sbb cltd push imul jmp sub pushf iret pop or ret das popa dec add inc outsl cltd out mov inc cwtl push cmp repnz and xor insb jne cltd mov out mov in repz fidivr in and mov mov enter pop mov mov pop adc adc inc inc lds repz mov mov mov sbb (bad) xchg aas push or fistl and jmp fnstcw aad (bad) shrb int icebp scas pop movsb loope inc fisttp test rcl inc sbb pop lret testl nop push imul jge sahf fwait cmp sub mov fstl (bad) scas jo push dec xchg (bad) pusha cli xor xor sbb xchg into adc sub push std sbb mov cmp loopne stos mov sub pushf iret jmp cmp ja ret das or add outsl popa out rorl cmp bnd out adc xor dec insb xor out jne in mov repz in fcmovbe and fidiv mov pop cmp adc adc add xor inc sbb mov xchg (bad) pop aas push sbb fistl and jb,pt (bad) lods mov movsl and mov int inc scas pop loope mov rcl sub xchg xchg or insl (bad) adc pop lods lret notl dec call push dec mov scas loop xor inc cs std fstps into pop adc nop sbb and inc lcall inc xor cmp dec fsubrs fidivrl lret adc clc dec in mov pop mov sub and popl pusha mov ljmp cwtl adc mov push inc test setne push aam adc popa jp xlat cli icebp pusha sbb fwait test inc iret xlat aad pop call (bad) jno mov or and mov fistl dec (bad) cmp and sbb cmp mov push sub inc mov or dec pop xchg push loope stos cmc faddl int3 adc (bad) fbld aas leave add (bad) das repz push mov repnz sub ljmp cmp jbe jb mov dec loop pop xor inc cs frndint into pop xchg xor pop nop adc jg lcall inc rcr repnz xor dec (bad) imul (bad) fcmovb pop adc clc lret adc jle test dec xchg and dec subl or imul pop xchg push ljmp inc test push rcll mov rsm popa push push xlat adc pusha jp fwait cli or test call (bad) jno mov rcrb xor mov test mov jbe jl inc in pop jge xlat addr16 inc enter imul jmp xor stos (bad) lcall dec bound lea outsb fbld push lahf into push mov push xchg xchg add inc xchg ds mov or sub test mov pop pop cld fucomp dec or sarl out xor mov or and jecxz cmp popa movsb fsts call fnsetpm(287 jns push mov scas leave dec ljmp imul cmp test lret adc ret pop das and pop adc jno mov cmc xor iret sub fisttp sub mov ja dec add cmpsb cmp jne lods mov inc sbb adc sbb clc dec rcrl add fdivrl or xchg jg cmpsb negb in loope jae pop call lret lods mov mov add test mov (bad) xchg mov je in bound icebp mov mov dec sub cmp adc sbb pop outsl mov mov lcall jbe push ficoml sub adc pop daa add hlt sahf stc inc ret scas (bad) or add sbbl jmp mov insl inc sbb inc pminsw loopne movsb dec inc das jmp and sbb xor push adc pop shr dec rclb dec adc into push jmp push cmp xchg mov pop imul cmp test hlt pop xchg xorb ja lret loope jno test arpl adc or fnstcw cmpsb testb pop pop call lret lods or push sub pushf add test mov sbb (bad) je mov and icebp mov mov dec sub (bad) imul scas inc sbb xchg pop cmp ja sahf xchg jle lock enter jnp movl push arpl fwait test leave xlat jge movsl cmp cmp jno pop sub jo push stos mov in lods testl push sbb mov jae ljmp xor sub in cmc mov xor outsb data16 ficompl pop insl mov mov fsubl rcl sbb mov push jb ret inc mov dec aaa pushf cmp push lods and pop xchg daa jp jl adc adc dec lods mov pop mov sub dec inc jb lahf and (bad) test push les push std xchg xchg js sub (bad) jmp or cld scas pop sbb xchg xchg cmp ja pop xchg jle lock enter jnp movl push push dec xchg aas test arpl jge movsl cmp sub push mov inc and cmp mov add fs stos out mov xchg fstl imul aad addb aam out or push push push xchg sub cli xchg jb cltd jle sub cld (bad) hlt mov push inc std mov xor js inc loop and imul int pop movsb inc cltd inc pushf addr16 movsl mov (bad) test ret mov adc bound jne ret xchg inc mov dec scas dec (bad) xchg push jg je mov in cmpsl push ja jbe dec imul mov aas pushf fdivrl mov lret scas adc sahf dec xchg xchg mov lcall sbb inc test jae (bad) mov mov mov pop les fsts and cs pop into stos int movsb adc out lods popa out cmp cmp aad rolb xorb jne (bad) (bad) das mov das hlt or negl cmpl popa lock cmc pushf jnp xchg push (bad) repnz push xlat add jns inc fst sub into push ret sbb test negb inc lds (bad) pop push out pop cmp sarl dec inc arpl jmp or push add int3 push std bound in xor out push add jnp and imul test scas dec push pop mov cmp lea rclb cmp add jge imul dec push push cli sbb push aas inc mov jae (bad) jno cmp data16 loope pop adc adc push fisub and cli jecxz xor ljmp js adc mov add add icebp mov jae mov daa pusha movsl push jne je (bad) lods mov (bad) or lret divl mov clc cmc leave jnp lock rcrb jns push fst sub into inc ret sbb test negb inc lds std (bad) push out pop cmp sarl dec inc sbb jmp or sub sbb std push adc int3 loop bound add out pusha in jnp and imul test scas dec ret dec or push cmp lea rclb cmp (bad) jge imul dec push push cli sbb push aas out mov pop mov inc rcrb arpl add xor das je mov inc mov test push inc cmp add push push mov cld xor cwtl mov mov pusha cmpsb iret rorl lods mov xchg sub push xchg aam inc fadd jo adc subb sub mov ljmp sbbl adc fistpll adc mov cltd out (bad) cld cmp mov mov lea push out or pop daa ja data16 cmp or imul and push (bad) xor push add cs cmpsb movq inc push adc xor insl loop fisubr cmp addr16 mov lods dec inc lock pop pushf jge out and jbe mov sbb push push jle negb pop xchg test nop rolb xor mov ret pop jl sbb push inc or add push push mov loopne dec in les (bad) imul scas insb and adc xchg inc fcoms lret inc xchg add xchg adc or adc mov mov dec adcl sub mov mull dec cltd mov add sub lea jge gs add daa ja data16 cmp lahf xchg imul mov cmp ss add add jg inc fwait mov adc sub xchg xchg roll push adc jle lret xlat imul in push pop push jmp jge ret fwait cmp (bad) fidivr pop adc add xor xchg xor jnp add and xchg sub iret adc pop std sahf and mov stos into xor pushf rcrb gs js les bound roll call cltd push jne,pt lret jns ss and ss test lcall out hlt rolb fidivr and mov mov sbbb push cwtl (bad) mov pop adc add xor lret mov mov sbb (bad) xchg inc push or fcoml and jmp fidivrl aad (bad) mov icebp scas and stos sub mov rcl inc sbb jle lret xlat adc or push push jmp jge lahf fwait cmp movhps frstor divl adc scas jno pop dec xchg add xor add and jnp mov iret adc pop std sbb mov cmp loope stos mov sub pushf shr push pop les or add or push ds lret cltd bnd out data16 xor or inc out mov hlt mov out fcmovnbe and fidiv mov push push (bad) mov pop adc and out adc fs (bad) frstor sbb cmp cmp sti mov push sub push in cli pop xchg fucom loop lods cmc movb adc inc (bad) in pop data16 das lret rolb repz dec cmp sahf sub int3 ljmp or push mov scas jecxz aaa xor cld inc cs std ficompl iret sbb aas xor imul ret repz xor out push cmp fldcw fstpt lret adc stc dec out mov pop mov sub and sub or insb jmp je xchg push pop cltd adc mov push inc xchg outsl setbe pmullw adc xlat sti repnz sbb fwait test aad pop call (bad) jb mov or and out clc jmp adc (bad) cmp mov cmp mov push sub inc mov or dec pop xchg push loop lods cmc fldl int ret in fbld inc lret rolb das hlt dec pop mov repz sub ljmp cmp or push jecxz pop xor scas inc cs std (bad) iret sbb nop push push imul inc mov ret repz xor js mov fcmovnb pop adc stc lret adc lock test cwtl and and addr16 mov pusha pop adc cmp loopne (bad) cmc je imul jne scas dec add add lahf cmp lods loope jns dec sti mov inc sbb xorl stos dec ret stos add mov jl inc in pusha jle xlat push push add leave ret insb (bad) (bad) in jecxz or xchg loop xorb pop mov jae xchg xchg push fistl int xchg aas enter mov sub sub test ds pop cld fucomp push test (bad) aam popf out xor sarl or and in cmp bound aad call fsub jp push mov mov dec ljmp clc out cmp test lret adc les xor test (bad) or jno mov divb mov sub hlt loopne sub mov js dec add cmpsb cmp xchg loope lahf jbe lods mov inc sbb xorl stos stc dec ret stos data16 inc mov add in ja inc lds pusha mov fld pushf push insb (bad) leave in jecxz or xchg loop xorb pop outsl iret push mov mov push push int push aas enter xchg (bad) insl mov sub movsb push dec sbb lock mov test jmp out xor jnp jo mov rcll xor and cmp bound aad fiaddl scas fdivrp or push rol mov mov int3 outsb inc sbb inc dec adc pavgb movsb push inc xor mov push xchg sub jns pop push adc pop (bad) lock rcll jp das iret push ljmp cmp cwtl mov pop imul cmp pusha xchg xorl sbb loop jb test fs adc push xchg std addr16 fiaddl out fdivrl add mov lods or mov add test mov sbb shr or jne mov and repnz lea dec cs les cmp leave jg push jnp repz pop out idivb push (bad) icebp (bad) push aad sub inc fistpl jecxz add lahf cli mov scas hlt sti or cmp jle cltd rorl mov int3 outsb or jge inc dec inc jmp pop in adc loopne daa push jp in xchg sub jns push push adc rol inc lock xchg adc ljmp into (bad) cwtl aam and mov fstps nop cmc pusha cmp mov jge lret loop mov adc stos xchg std pushf in push sbbb jl adc xchg mov lods mov pop mov cs inc jb mov pusha nop sub push lds push decb xchg int call imul and (bad) xchg xchg cmp js pop xchg jg icebp jbe leave sbb test and push pop push xchg inc test pushf movsl cmp sub mov and jno bts push insl out mov scas mov addl sbb mov jae cmc popa addr16 out jmp mov iret in mov sbb dec jo ret cmp rcr sti pop push mov outsb dec xor add mov xor ficom adc ret inc add pop shlb int pop daa movsl dec lcall mov xlat test mov ficom pop data16 jbe ret xchg inc rolb out scas dec adcl mov in test js ja dec imul mov inc popf fnstsw mov lret jge scas adc pop lahf push xchg xchg mov fwait shr mov call ss add jo mov pop aas lds ficoml and cs or lods into mov lock (bad) out cmp cmp (bad) push roll adc push cmp (bad) pop stos (bad) push imul lcall pop push cld fldt mov push inc icebp mov popa mov std mov das data16 push jecxz rclb es mov xlat test mov ficom ljmp ret xchg inc inc inc outsb pusha out rorb push subb jae in test lods mov pop dec imul cmpsl or mov repnz sub fnsave jle jge xchg adc mov mov aaa roll fwait sbb mov enter je jo mov sahf aas lds dec pop inc ficoml and cmp lods into sbb (bad) out cmp cmp ficom shrl (bad) or xchg push mov push aam out push pop stos cmp or lret subl clc xor mov clc (bad) lret lock rcrb repz push fst sub iret inc les sub negl inc (bad) outsb loopne (bad) pop out pop cmp dec inc sbb insl fs sub std push adc int3 jecxz arpl add out pusha in jl and push repnz push test dec ret pop mov cmp mov rcll ds lcall insb rolb push push sti push cmp inc lock pop mov inc mov jno mov es adc imul sti fidivr and jmp (bad) xor imul adc mov nop inc inc xchg lea jae fnstenv mov sub jne (bad) lods jbe fucomi or mov das cmc clc xor mov and lret lock rcrb repz push fcom sub iret inc fstpl sub test les jb outsb idiv movl pop addb sbb insl rorb mov push add int3 pop out adc xor pusha in jl out push ljmp mov hlt outsb jecxz fisubr cmp push pop mov lods dec inc lock pop popf jle out and ja mov xchg aas sbb pop push jg mull pop xchg test fldt (bad) mov jnp inc xor mov stos mov inc or mov loope dec out lds (bad) insb mov and and adc xchg dec fsts inc xchg add or push sub mov xor dec (bad) adc pop mov loopne add cltd mov push out daa in sub sbb data16 add sub addr16 cmp bound lahf shrb aaa push xorl push add push and pushf adc mov hlt xor movsl jnp into outsb jae fimul sub leave pop push lock mov add jle nop and popf je out xchg aas sbb adc jg pop pusha rcll test fldt (bad) mov and inc xor mov stos mov inc or or loope dec out mov lds gs and adc xor jp aaa insb loope and aaa mov stos push outsb ja fwait mov out mov out cmc rolb fistpll and mov mov sbbl mov pop adc xchg jmp popl test ljmp mov mov mov sbb enter or fcoml and dec in ret fstpt (bad) mov mov repnz and adc aam inc sbb outsl push adc or fcoms stc or pop imul std mov xor nop les sbb je adc mov mulb dec cwtl add xor daa jnp mov rclb mov (bad) sbb mov fisubrl mov popf shr push pusha lds or jo call lcall repz jbe out adc and aaa or stos leave out ja out mov cmc mov out (bad) and fbstp mov push pop (bad) mov pop adc xchg jmp popl sahf fldl2e cmpsb inc movl mov xchg test mov pop sbb fcoml xchg dec in int aas jae mov (bad) (bad) cmpsl and (bad) repnz inc scas adc aam sub xchg push addl outsl fcoms xlat or pop imul xchg mov xor nop les pcmpeqb mov and cwtl add xor daa jnp mov sub mov (bad) sbb mov test sub dec out mov pop mov sub and sub or insl in mov or push inc xchg jo xchg sub aad push stos arpl fdivr repnz add (bad) jge jmp (bad) jb mov and out stc ljmp xlat cmpsl cmpsb sbb fsubp cmp daa cmp sub inc mov or imul cli lods neg inc icebp into adc mov inc lret roll xor dec sbb cmp (bad) cs lahf int clc mov sub js jae rcrb ds push in pop xor aaa (bad) (bad) rcrb xchg inc xor and push sbbl inc mov ret hlt add test pop mov fcmovnb pop adc stc lret out mov pop mov sub cwtl and and addr16 mov popa mov in cltd adc mov or xor push leave jo xchg sub arpl pop fcoms repnz pushf sti cmovb (bad) stos pop jmp (bad) jb mov xor mov (bad) scas and push adc cmpsb dec rcr cmp sbb sbb sub cld mov pop in dec inc xchg imul out into lods ret movl lds add lret (bad) mov cmc data16 das into inc xchg inc enter mov sub sub movsl mov pusha pop std fimul and fsts adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc lahf mov repnz movsl push xchg lods icebp (bad) repz cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or out sarl jp decl cld std dec hlt cmc push insb cli sbb mov cmp adc mov stc push cmp jbe into movsb repz xor push sub sti dec sbb xor stc push cmp loop cmpl jbe push jp leave jnp (bad) int3 inc insb cld push ficompl (bad) shll cmp sub ret jno mov mov fldenv cmc sub (bad) (bad) mov addl sbb and lods icebp and into (bad) dec shrl les js or int lret push repz dec and inc fwait add ds rcpps inc push adc and stos stc sbb lock inc ljmp fcompl sahf pushf and adc jbe stc push add push jb xchg in xor popa nop add jl daa inc mov push push ds sub sti dec or std js sahf xchg sub push sub dec push movb das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or iret (bad) pop sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov add jp loop daa or add add xchg clc or hlt imul out inc xor pop pushf mov pop imul cmp push cwtl adc jo add xor popa lods add inc mov push push movsb push sub rcrl js mov cwtl or das sub in or pusha xlat das push and cmpsb ret jo inc inc stos mov push clc mov jbe hlt sbb test jg xchg ss push or ja leave pop out mov pop pusha sarl ds sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and add pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and mov push push cs sub sti dec sbb std js sahf xchg cmp jecxz das dec add cs in stc (bad) mov daa js jmp jb cmp pop inc (bad) (bad) jbe ss pop xchg jg ja adc push imul sbb sar test mov jae insl ljmp enter dec repnz movsl enter and into (bad) flds mov movsl add push (bad) lock inc fwait and add aas ljmp and xlat icebp mov lock idiv inc dec aam mov xor lock jo push mov cwtl (bad) xor popa nop jns les xchg xor push xchg cs and jecxz dec sbb stc js push test add add add pusha in clc pop sbb jecxz xor and adc (bad) mov mov mov loope mov hlt sbb test (bad) and je insl ja inc inc jmp mov mov pop mov sti inc ljmp cmp push outsl js jae mov cmp into (bad) or mov jno or dec es arpl ret test inc fwait jecxz xor xor aaa xor aaa lods cvtdq2ps add jbe stos stc dec fidiv mov inc loop pop out ret and pop pushf pop stos push mov popf and jo ret sti fs aam enter (bad) aaa sbb pop dec jo lret mov decb clc popa imul adc cmpsb shr inc outsl cltd (bad) jns scas jp and cmpsb ret lock test add mov fdivrl (bad) jbe jg lock xor cmp xchg mov (bad) mov jno push adc fs nop ljmp mov aam sbb jae mov cmp into pop leave cmp xchg push loop dec mov loope or xchg push fwait mov pop mov jle loop cwtl mov xchg mov out mov ljmp out dec mov loopne lcall ret adc push jne stos aam pop cwtl in mov jmp or pop cmpsl lret xchg mov in mov enter pop pop nop cmp mov imul pusha aam ret fstp das push test inc inc dec xchg inc and pop mov test inc das xor sahf sbb int pop add stc pop cmp dec sar mov inc push or in sub xor repz (bad) dec sarl cmp cmp cmpsl add mov xor sbb ljmp push dec lods cwtl sub lock ret mov insb out out lret mov sbb jno xchg pop fist jno adc stc flds mov insl insb andl loopne,pt sub mov pop les out cmovg push pop jbe pusha xlat cmpsb in sub add mov (bad) mov bswap jb hlt xchg clc xchg adc sbb lds jmp mov aas xchg pop mov out out sub xchg jge cmp or dec mov lahf nop jne and (bad) xchg ds insb mov shll and pop adc mov lods sub aaa push lock loopne out enter or cmpsb clc jb icebp sub jne jecxz leave pushl pusha arpl movl xchg aaa test (bad) push and cmpsb sahf outsl pop mov inc sub xor mov mov rcrl adc pop push xor in in cli sbb (bad) (bad) pusha pop test ljmp stc cmp mov loope lea sbb or xor or imul mov pop mov add data16 cltd jno cmp hlt insl fnsave fcomps andl dec pop mov repnz lds add add popa sbb lcall xor inc imul push (bad) mov stc or inc popa jo jecxz inc loope push adc insb test into pop fist jno sbb xor lock sbb iret and into ss push jnp,pn mov mov sbb or or adc jbe pusha xlat movsb in sub add sub mov cmp inc cld mov call in sbb test leave arpl adc inc (bad) sbb ja jg jmp mov jle jp test cmp mov in push out imul mov adc fstpt mov fwait gs pop dec insb and jo aas mov pop xor push xchg push fisttp adc and mov add xchg push scas xlat stc or and jns mov stos pop es lret test adc push push loopne pop das jle jp iret add mov mov lret les mov fnop inc rorl es das or (bad) cmp push sub loope jle adc (bad) pop lret fdivr jmp sub cmp (bad) test jb repnz push bound test pop xor dec xchg push fildll enter mov pop mov repnz push (bad) xor mov mov negb cmc and mov in cmp (bad) cmp or dec and mull ret mov lds ds inc dec icebp (bad) repnz or scas ljmp sbb cli repnz out les fcomps pushf dec add pop aam add pop add ss stc (bad) mov and xchg mov loopne sub add dec sbb mov repnz add je push shll bound cwtl cmp mov jno (bad) cltd lods sbb dec loope clc mov mov jg mov imull lcall pop mov jnp outsb sub pop push popa mov ret test repnz (bad) xor or je inc mov jecxz xchg inc cmc jno sub (bad) xor inc fwait imul push test repnz or scas hlt movsb push fnop imul jecxz inc mov test (bad) addps push clc adc pop adc pop popa nop (bad) insl andl xchg loope fcompl jg sti aas add xchg mov jo or movsb (bad) icebp jmp (bad) xlat das loope cmp pusha push adc pop xchg in cmp xchg cmp cmc push (bad) dec add xchg nop cwtl hlt mov orb dec leave pop out daa pushf push mov jp jnp,pt outsb sub pop push xor cmp jno repz inc sarl jns or cwtl iret xor lret daa cmp cvttps2pi sbb out push jg out sbb stos inc pop sbb enter out lret mov sbb jno xchg iret adc push mov cmp pop dec int3 xor jmp pushf scas ret xchg xor push push push out sbb je pop lcall dec (bad) std add or mov or jl cmp dec hlt int int3 cmp inc jb hlt sbb popf out imul or es leave jae movsb mov mov cld incb cmp gs outsb dec in sbb mov mov enter (bad) dec fidivr xchg repz add dec adc adc pop aad imul loop fsubrs inc ja inc (bad) negl cld jno push xchg xchg cwtl and add xchg pop push inc outsb push mov dec (bad) xchg imul jae xor mov jb jnp,pn jb cltd lahf cld js sahf xchg mov insb cmp dec or sub in clc sbb (bad) (bad) pusha pop out mov inc mov inc jecxz add add pop cld mov dec cmp sbb test or mov imul xlat mov in lods insb dec (bad) test cmc push and jae bound sbb lret into adc and icebp cmp (bad) in jbe dec stos fldenv lea int3 fdivs sub imul jg sbb aad scas stos ret hlt inc dec jp rorl and sub fdiv sahf scas ffree mov push in mov add adc or test xor push popf jecxz into mov push add ja movsb xchg cmp jecxz das pop or sub push sub je sub insb push push mov mov lods out dec xchg (bad) push pop aaa pop inc adc push push jbe iret sbb add add dec add test cmc adc sarb insl sub fstl (bad) (bad) int3 dec out mov sub imul fldt outsb imul xchg gs je pop sub call stos and mov addb loope nop ja sub mul cli mov add fsubrl iret jae inc std push cmc jns (bad) mov call jno or xor adc dec push mov cmpsl mov mov icebp ret lock aaa jnp movsl fcomps adc xor sbb imul (bad) in push das add and out lds mov bound outsb add rcrb pop adc jl test pop xor fmul arpl fsubl jb shrl mov fwait and xchg imul xchg rcl ret inc push (bad) in xchg fs loope mov movsl add pusha addr16 loope jge add inc arpl xor lret int (bad) out or imul (bad) or (bad) fcmove or stos xlat xchg cltd jmp fcomip mov sysexit xor pop insb mov jne (bad) call pop lock cmp pop add push add test in mov jmp imul or pop fs scas sahf insl inc sub nop inc leave mov xchg ljmp lahf movsl lods in mov (bad) outsb pushf jecxz and mov add adc pushf jge fpatan cs sbb xlat in ljmp or leave pop (bad) stc lea xor jge cli or jmp adc cmp xor push gs xorb xchg test mov dec out dec out jge or shll or add add and inc adc mov mov (bad) aaa push repz out or or stos stos stc orb push ficomp dec cmp mov inc std add push clc push sahf pusha and jb adc and cmc sbb inc mov inc sub jl sti movl in clc jg or cmc lods cli sar jle test pop gs (bad) jne ret fwait movsl sbb stc cmp cld mov pop rcl mov sub xchg sbb test out mov sub jno lret jnp add out movsl pop mov xor jl mov je lahf add cmc or cmpsb push cli jbe jno lret es xor (bad) loope jecxz fwait mov adc outsb inc loop adc gs lods or add add mov scas shlb jp xor pop pop fadds pop fnstsw stos pop (bad) push xchg aaa hlt or (bad) sti insb jno or addr16 sarl jp xchg popf push ds jnp sti dec fs jle add push sub (bad) fsubrs cltd aad push jg cmp test dec es cmp cltd and mov jns jmp cmp pop addr16 sahf loopne xchg mov mov popf leave shl (bad) idivl sbb aad adc repnz lds ds adc inc inc mov jecxz pop test mov (bad) out popa push cltd jmp pop push test loope fs es mov xchg rcll mov mov and pop loope (bad) xor add add (bad) cmp ss cmp and test or push push aam pop xlat scas sbb popa imul or lods mov insl xchg sub push repz inc or cmp stos mov stos (bad) (bad) out sbb loop arpl jns lahf add cmpsl fs test xor in ds outsb jno push inc test xchg mov pop cmp adc inc sbb push cmc imul jge jl jns or into and xlat ja inc movsb rolb in cmp aam fldcw vpabsw push clc jp sbb addr16 pushl gs (bad) into xor ret push inc fsubl sti out add shll mov pop fildl cmc jmp ror lds fisubrl jg jmp int mov cmc cmpsl test in or test dec lcall adc xor imul fsubrl or inc push adc movsb outsl jl js xchg outsb test and std loop xlat mov or jb popf iret xchg stos test insb pop cmc lods jne test int dec push inc sbb jp mov and lock inc pushf and inc adc mov push jp popa iret in pop mov outsb test push out lea dec mov clc das pop enter dec push daa mov test and mov call xchg sarb aas xor sub jo (bad) call cld xchg insl pop les leave add add fwait outsl das cltd cmp pop movsb cs cs or dec popa cmp lret dec push cmp jne jg int3 mov cmpsl pop xchg dec sbb mov imul mov lds sub popf xchg xchg mov jle cwtl adc (bad) loop pop xor jge mov (bad) lods sbb (bad) or dec sti es out inc movsl gs fwait jecxz out ds aaa fldcw bound push mov push imul loopne mov shrl mov push adc stos adc and jb stos add iret mov lock push std iret out scas fs xchg fadd lret test cmp inc add push pop adc insb das jnp popa or fs mov (bad) js pusha test mov mov cld int push cli cmp fisub add popa das test daa sub xor xor dec jae leave sub lods add test sub outsb jno push fiadd xor adc mov mov cmp popf sbb xchg jecxz xchg cmp fidivrl jmp jbe int3 push or jecxz dec adc clc xor icebp add sub lret xchg adcl inc aam cmp ffree cli inc xor dec mov pop ficoml clc das add jge nop adc in add add test mov in xor mov int repz mov sub mov xchg cmp mov lcall loopne mov jae ds or fstpt xchg fs xchg aaa int3 push adc jae leave or add push xchg lods pop sub xor rcl mov ror jle insl jb mov and and xchg lods icebp push (bad) dec xor aas cmp sbb inc lea mov fildl jo int xor jecxz insb or pop pop jbe ret (bad) (bad) mov mov outsb std clc jb icebp rcrl negb inc and pushw xchg (bad) fcmovb mov and stos adc int mov adc test mov (bad) mov xor and cmp (bad) out or mov loop nop les jno push sub inc movsb in cmp fwait adc cmp subb cmp insb adc push mov js pop mov cmc ja in mov outsl mov jb inc je mov add add cs cld jp add int3 cmp cld icebp sub xlat push cwtl sbb mov mov adc in pusha add mov (bad) loopne fisubr mov dec xchg pop into ret fidivrl mov mov inc and adc mov insl and mov xor adc mov rcll and sub idivb xor std js ljmp xor push fistpl (bad) pusha stos sub iret and push xchg cli push mov jae repnz hlt sbb test mov mov xchg mov dec mov aam fst lods dec sub or daa mov xor nop sahf stc inc repnz es xchg mov pop popf sbb xchg jecxz push dec pop fisttp ljmp add pop fwait icebp cmp xor sbbl mov stos stos stc jle jae sahf xchg inc ljmp fcompl loopne mov xor std sar jae dec and adc fdivrs and push in cld push mov fisttpl pop rcrl (bad) hlt or ret add jo fs popa jno scas mov cmp loope clc mov add test stc and aaa int3 add cmpsl lahf stos and adc pop mov pop add sub mov rcll jne repnz sub mov add aas cmp scas jge or inc mov pop and mov mov mov out adc outsb out and ja sbb push out negb js xor and xchg fistl clc es cmpsb inc jbe cwtl gs gs add cmc or inc mov sbb outsl xorb (bad) sti lcall xchg std add test sub cltd (bad) into (bad) sub or mov dec xor dec jo inc xor xchg hlt aaa mov icebp and aaa int3 jnp jae and and cmp sub fisubr dec aad sub mov fstpt xor mov xor jbe dec fstpt cli dec sub jge les movsb (bad) mov (bad) mov mov scas hlt mov out adc stos pop xchg popf push stos jb cmp adc jg cli inc xor dec mov jns add add and mov rol test pop aas xchg or mov div pop lcall or adc push dec adc or jl sub and fnop bound jne test sub dec xor adc pop (bad) out test sti mov (bad) push (bad) out sub shll jp hlt pop (bad) in scas and push test stc ja ljmp push clc imul push sbb xchg fmuls add imul mov enter (bad) outsl shrb out std in mov andb cmp or dec mov sbb test mov and and sub adc ljmp icebp xor push sahf sub sub std sti dec sbb das or pop imul sub sti xor adc das mov jne jo inc test cmp push sub jns pop sbb test lods inc add cmc pop lret pop out sub (bad) fdivr mov cli sub push add cmpb leave lahf sbb push mov ja push mov popf enter lds lcall repz mov into inc dec xchg pop xchg push xchg sahf sub push cld push jp push insl ja scas scas js sbb dec push enter dec (bad) loopne dec popa pusha test cli gs or push jg int3 jae cwtl gs jae sbb push and xor xchg adc add jnp adc flds rolb xchg cmp mov or in loop add cmc fisubl ljmp jno into repz mov cmp cmp (bad) xlat jns mov jns jg in cmc mov jbe leave pop lcall mov xchg movsb ljmp mov sbb je std sbb idiv fmull cmc cmp lret ljmp loope and int3 xlat (bad) jno jae sahf adc lea aad inc loop cmp outsb scas stos scas (bad) out test sbb add cwtl fcompl pushf arpl cmova push pop jp push add out jb cwtl data16 push mov inc jno test jmp mov sti rorb std stos stc pop test or stos or sub icebp jmp outsl push stos push and pop add and inc (bad) mov (bad) and add add hlt sbb pop xchg push out xor xor dec mov lock sbb jp mulb xor pusha push jg nop inc insb (bad) repz data16 lock mov idiv sub lret fisttpll jmp or lahf fiaddl daa adc lret enter sub mul psubsb and movsb and xchg mull mov xor mov fmuls ljmp in or test mov adc mov clc dec sbb mov cwtl rolb outsb inc in (bad) in ja xchg adc jmp loop arpl jbe xchg cmp jle lock outsl addr16 not ffreep arpl rorb bound mov add add push mov pop sub mov pusha sbb rcrl loop sahf cmc mov rcrl cli add xchg xor inc or leave push je jl out aas mov or adc jge fs test xor sbb packssdw mov int scas xchg push imul into xor inc adc int3 mov push and pop jno add jb std inc addr16 push aaa sahf push (bad) movsl in jmp adc xchg push add or adcl std in jae aaa dec push jmp stos imul jne add lods and icebp (bad) xor rolb test cmp or push insl imul (bad) sbb and xchg stos clc mov gs gs into xchg icebp mov imul add add sbb jns pushf mov ds addr16 stos jmp popa xchg aad lret xchg add adc and ds sub dec pop mov (bad) out adc add cmpsl sbbb (bad) enter xchg imulb xor or pusha pop (bad) lahf pop push out movsl je fbld jp cwtl mov sti push std xchg push xchg repnz push in push pop imul add into aad push xchg sub jno mov into ret not and jle or out ret dec stos ds scas jno jae sub mov hlt fldl xchg dec nop sbb rolb add cld add adc pop inc mov mov (bad) stos rolb js imul adc dec clc leave ret es and push int or cmp or xchg mov add (bad) dec int3 mov jne in and addr16 mov lea leave add pop adc std imul aam mov add sahf push stc push add add mov addr16 push aaa js fstpt xchg nop or mov mulb inc mov aas push stos mov jp mov out jns add jno addr16 pusha test pop and mov jle pop ret cmp jbe test lods jbe loop ljmp (bad) imulb xor ja pop pop ret rol jg inc pop jno lods xchg inc jle push fstpt or pop push cld int3 xchg lods push jl mov addr16 mov aaa cld cmp jno ljmp add mov mov out xor ret pop lock (bad) mov divb add add add add out jo mov add cli stos leave inc jmp lock decb ret cmp adc jge xchg lods push mov loopne sarl mov adc inc (bad) pop (bad) fimull adc lret (bad) lret mov xor pop or clc and dec push ret aaa pop stos pop jbe decl adc pop jnp out fwait lret in enter mov ds stos inc jbe sbb leave inc mov ret fisttpll icebp mov sysexit pop decl push cld fildll into sub (bad) cmp add repz int xchg ljmp mov jbe ss and adc fisubr out scas push hlt out stos rcrb (bad) in or stos pusha (bad) fnsave in lahf cmp add lods decl addr16 add rcrb lods sarl and test add jb mov mov jl or lret adc sub or scas adc pushf (bad) pusha mov or push jecxz mov or cli add enter xor lret cmpsl adc add pop mov rolb jg mov ret fisttpll icebp insb dec aaa pusha jl aad pop cmc lock or sub xchg inc shl jns outsb ljmp add mov mov mov test dec push sar push push hlt inc lcall movsb sbb jno mov mov jg imul pop xor lea or bound loope mov inc je dec add insl orl adc fwait icebp (bad) hlt imul xor sub test adc mov movsl rclb xor mov cmp push dec mov xor jge xchg jnp nop aas adc rclb pop adc mov mov leave shl out aad push dec mov imul inc jle gs scas push (bad) adc sbbl push (bad) push pop gs mov repz adc pushf xor js xor cld mov push and lea out push sub repnz (bad) pop push add leave and ds mov in pushf xor jl clc data16 sti sbb dec out mov xchg cs xchg icebp mov (bad) (bad) outsl rcrl sub test pop mov daa pusha push dec mov add or pop adc fadds pusha (bad) int movsb adcl add dec push inc adc and add dec cmp xchg nop sbb jnp in rcr or mov arpl into lret xor mov enter ret mov mov adc jb dec xchg dec push icebp arpl adc pop das test cltd call mov in mov loop lcall push fcomip jecxz or pop mov dec je and sub inc mov xor sub mov into mov fildll xchg xchg scas adc push push out dec (bad) aas mov xchg xor dec mov mov sbb out sub shlb out subl xchg or push arpl movsl sbb add push mov push adc add in sub pop mov lock jae mov loope sbb sbb cmp xor jae,pn dec out popa js xor popf imul loopne jmp test jmp enter movsl add jb scas or mov ljmpw fcoml inc mov mov stc into pop cmp lock mov mov pop outsl test daa setnp (bad) sti fmuls mov ss ljmp xchg xor fiadd or rolb mov or jl jb mov xchg rcrb (bad) jmp xlat add cld insl push (bad) mov imul icebp push in or add pop in pop imul mov stc sti add push xor add add mov pop jnp in (bad) ret inc or cmp ja rcrl pop cltd dec iret test cli inc cs xor inc xchg xlat dec push xchg pop adc scas jne (bad) jb lret sub add xlat push jl movsl fldln2 xchg mov cmp (bad) sti cmpsb inc (bad) test lods mov aam add add stos sbb lods and mov and inc inc sub movsl cmp test jecxz jp rorl rcr fstpt inc mov je jmp ret pop xchg lds adc pop call and inc mov nop mov pusha and int3 xchg testb insl jae adc iret push jmp psraw mov sub add add inc cs aas mov pusha xor out cmpsl add xchg adc xchg rol test fdivs xor inc xchg add fidivr pusha enter mov js stos pop cmpsl data16 loopne jns scas ret inc (bad) into pop mov sbb es das jle xchg add mov outsb mov sub test xor push and enter jo clc ret push outsb mov pop mulb xchg aam push jmp out mov je sbb sub cs inc dec or fisubr push mov jg mov scas jge adcl orb (bad) dec pop cmp jno loop les or (bad) iret xchg adc js xchg cltd movsl inc std lods insb lods addr16 in negl cltd stos jmp popa (bad) (bad) in ret mov ret add add lock sbb mov les es dec fidivrl mov insl in imul xchg cmp mov inc cltd pushf out sarb xor push sub add pushf add inc mov std cmp mov sbbb jg fs call scas mull call shrl sub jecxz push jns xor mov jae mov push cmp push pop fs inc fcoms inc lret xchg jno cmp js pop jbe xchg and add lods xchg or jecxz dec rcrl adcl jo xor jecxz mov repz in jno push push jp and xchg mov dec enter outsb fiaddl add shlb bswap mov test pop pop and test cld mov popf sub jg sbb popa and ja sbb pop push les cs cmp je sub sti jmp mov sbb loop pop sub mov rorl cmp inc out or xor push idivl aam scas mov fwait dec jmp push cmp jl loopne xchg daa mov mov pop and sbb cmp stos pop sub jbe insl mov push xlat repz adc dec add xchg mov dec mov fistpll clc fs js jl pop cmp push jp sub fildl or shl sub mov push call out nop mov std mov fadds add inc jl xchg push pop adc push push rcpps in inc xlat dec cli or or repz mov jp mov out aaa push les out mov or or daa repz or repnz ret jno ficom (bad) sbb pushf jo fidivr call pop xchg add mov jecxz lret loope add and ret inc hlt pusha test imul movsb (bad) and push push inc test adc or (bad) mov push test push lret mov (bad) cmc out neg out es cmc jnp cmpsb sbb out mov add mov xchg addl xchg adc hlt iret bound cli js xor add sub add adc jbe sar mov pop aad pop loope sbb incl rcrl aam stos mov add push or sbb das lret xchg (bad) jne imul aam mov mov and scas or jge inc shll ds cmp in mov (bad) (bad) cmpsl pop push popf fsubs xchg lret jno sahf stos lds mov mov clc jno push inc aaa cmp test mov ffree loop outsl clc push mov out xor push aaa out push jmp pop int push pop pop leave inc (bad) cmp and (bad) cmpsl or daa aam outsl fmuls aad mov out sbb pop dec inc inc lahf cmp pop (bad) adc mov nop imul pusha ds mov in pop das mov ret and inc push ret jmp mov insl ja ljmp in enter test mov and pop jae int3 jne fsubrs pushf gs call lods fidivrl push jns clc leave ret es rorb jnp sti cmp inc or in mov aaa pop cmp xor mov push inc loope pusha dec es repz push je mov inc adc stos cmc loopne,pn pop out faddl fiadd adc stc (bad) fistpll pop pop aaa (bad) mov or outsl jae adc xchg dec jo pop enter shll xchg (bad) hlt ret jge in sbb xlat jns loopne lds stos jno cmp loope xor pop sahf test jbe mov jno add add xor sar xchg sbb pop jae mov sub cmp jg test dec inc imul lcall push jb xchg mov sbb jno (bad) pop shlb (bad) and fwait shl int inc fadds jecxz fisubr aaa imull movq lcall pop mov mov arpl push fadds shr jl add pop and mov cli xor jno jl mov cmpsl ss stos mov jne cs xchg jl sti xchg (bad) popa inc call ds out sbb add sbb dec push fs and icebp rcrb pop jp leave dec xlat sbb or adc add scas cmp add add lret ret ljmp test enter inc jnp test addr16 inc ret (bad) dec lret jmp jno xchg and shll (bad) repz sbb fdivrl push or adc lcall into stos push xchg dec flds arpl add pop paddsb or push and sub sbb in and jae pusha fs xor fs ljmp cmp mov add push add cltd (bad) dec loopne adc jmp sarl push sbb push ret dec xchg inc xchg mov lock xor aas cwtl (bad) rcr inc scas loopne cmpsb es pop mov subl adc sub outsl sbb call aaa enter sbb pop cmc imul sub mov cltd stos push movb mov pop ret inc out dec mov aaa or mov enter lahf cmp sti out loopne enter sbb insb arpl iret dec sbb add sub popf mov push stc sahf sbb mov aad inc sub sarb mov (bad) mov repz xchg push aas add mov adc jbe cs lods pusha mov outsl bound dec pushf xor add mov jge loope or xor sahf xchg fwait mov (bad) loop inc std stos push xchg pop sub hlt js (bad) shlb andl mov lea inc xchg add adc and pop pop repz jl add jecxz sub sub lods orps fwait dec or insl pushl sub cmp stc (bad) pushf xorl mov dec mov or test jnp mov lret movsl sahf in adc fsub adc daa movsb repz dec jle pop fsubrs pop dec mov pop popa loope cld sbb out jns add mov scas and xchg xchg scas ds lret dec cmp (bad) cmp mov xchg add sbb lahf xor enter mov mov je mov adc sbb mov pop xor push sub jb adc xor xchg movsl pop sbb cmp push int3 andb incb and inc int3 sbb add sub or mov xor fidiv fiadd add stc adc inc xor push adc sub fidiv xorl inc push js jmp test mov (bad) jns stc aad add xchg (bad) jg push add popa repz jae pop jbe and int lahf or mov push or int3 sub into jg mov cmp mov fsubrl faddl mov jae loopne movsb pop cmpsl ja mov scas sbb out and pop xchg jbe cwtl mov pop inc mov sbb push xchg jns push mov pop xchg pop mov dec out dec mov aaa mov lcall sub or mov push and (bad) mov and jne and push push test pop test add push jb sbb orb jmp and xor fwait stos cmp aad xchg lret sbb lods nop or xor test mov xchg and jg ret add data16 fs add xchg lods lahf adc insl jne dec mov test add inc fnsave pop jae jmp and cli push out in xor les jno mov rep cmc jecxz push push xchg (bad) cmp iret sub jo ror fiadd ret dec adc lret sbb mov or neg push cmp push push test out out jbe (bad) rorl movsb sbb arpl je (bad) clc mov fucomip xchg jl and les sbb jl ffree addr16 adc adc fldcw in jns xchg adc in repnz nop adc in divb cmp cmp mov and pop xchg pop fldenv inc stos jmp lods sti cli fist lods inc rclb mov and xor pop fwait mov shll mov ss fdivrl xor mov les in adc in or in cmpsl fcmovnu fcompp mov xor dec dec pop fisubr lahf mov outsb shlb sub xlat mov push lret xor push push pop icebp jo dec outsb sbb adc arpl in mov fild add adc stos lea iret add mov outsl pop fdivrs lret xchg cli js lock xchg xor xor imul dec aam pop in mov jmp add (bad) sub pusha push xchg cltd or dec push mov repnz pop and fidivr jnp pop arpl adc and mov fldt mov xlat data16 sub shrb ret ret inc fadds out xchg ret pop dec xchg cmpsl or xor and xor cs daa sbb int3 mov ret cwtl and jecxz adc insb gs scas fisubrl cmp or aam sbb jo sbb mov mov stos mov in cmp jp (bad) addr16 fldenv insb and jo das clc jmp insb cld mov cmpsb ljmp cmp jge mov ret xor add cmc push clc inc sub add and cmp fwait arpl add pop (bad) jb push testl pop sub adc inc jo pop sub je dec mov or fdiv adc pop (bad) dec shrl lods jbe cmp and (bad) mov pop mov bound dec mov aaa push jp xchg push lcall daa xchg scas pop jno mov inc stos sbb sub and fsubr movsl test xchg xor jp movsl sahf (bad) mov fidiv les xchg out xchg sbb xor jg imul push jle cmp in mov lret cmp add clc cwtl cmp (bad) xchg out icebp and jecxz and pushf add lds test in mov in mov adc mov das cmpsb pop sub mov add lcall into jge add popa in lret cmpsl xchg cs sbb les sub movb cs cmp js and je stos sbb sbb inc int inc rolb xchg loope dec xlat jecxz lds sbb pop outsb mov cmp and fsin or push neg sarl add (bad) rcl sbb xlat sub push mov cmc xor aas in push (bad) xor ljmp or repz mov je data16 hlt mov in loopne ds xchg dec pushf xor test and sub xor (bad) and inc mov cmp and and jbe enter ds dec scas jge push or inc xor ljmp push loop sbb add (bad) adc cmp cmp idiv xchg cmp jecxz xchg sti mov fildl sub sar inc pop dec sbb and icebp push test adc (bad) sub and add jns (bad) daa xchg pop lods je jbe sbb push fimull inc ljmp pushf push pop (bad) push jl jmp adc insl mov cmp bound push mov out gs push mov out (bad) sti pop and xchg lods add cmc jns dec mov xchg adc lea mov mov add ja,pt pop (bad) and movsl jns rcrb inc xlat insl iret in dec push jno cmc imul pop subl add jbe iret mov and and pop das pop insl or rolb add add mov jne add adc sbb dec (bad) ljmp mov outsb push repnz sbb add cmp arpl xchg mov xor aaa cmpsl adc jl bound jns mov adc mov aad fstpt pop scas jl pop sahf lods lcallw cmpb insl in pusha ss cltd adc add push dec xor inc jo cmp mov popa pop xor jecxz out outsl aaa in and subl out mov sub xchg insl fwait jno dec mov pushf xchg movsl dec push rcl repz pusha dec pop lds in stos bound mov lods dec rorl popf sub jge fincstp inc repz dec fs out dec push gs pop lcall cli cli mov call add bts sbb int3 hlt subb xor incl addr16 and adc sti sahf je cmc sbb sbb dec xchg arpl mov bound sti adc xchg aad ret push add inc (bad) in jno mov nop aaa insb das outsb xor ss add adc mov and cli pop jnp lahf ds ret addr16 or dec inc pop (bad) icebp out out popa jle sub (bad) dec repnz mov pop sub hlt js fnstenv pusha in prefetch popa lods insb test or cmp mov sub cld subl xchg mov mov or div ficomp inc xorb pop mov lret stos cwtl sbb push popa popf pop negb jl outsb int and mov mov add lods insb pop lods (bad) pminsw or push rcrl jae dec aas adc dec jo out lahf xchg cmp mov mov cmpsb fdivl lods pusha add aaa pop ds cmp loope repz dec push (bad) cmp in mov decl cmp nop cwtl es rcr into fcmovne or sub or mov adc jo mov and imul outsb test mov mov sbb mov jl std xor dec cs mov inc adc xchg dec push aam test ud1 adc and mov cmpsb fsubp pop dec cwtl jns mov add js mov sbb lods push rep nop push sti int3 add into mov sarb pop mov push sbb sub add sbb and jl jnp test mov push cmp xchg pop and ror dec cmp push fistp popf mov ljmp scas imull and int3 test add imul xor xlat dec lods add and add inc aad je or fnstsw xchg or jno decb jl adc bswap insl aaa mov sub test int out xor sbb push or enter xchg insb lds jl pop pop in fimul aaa loope lods decl adc and in (bad) cwtl jp iret pop dec push daa sahf loope and out pop lahf add fmul mov cmp call test fstp xor push adc add add mov out lods rol dec xchg pop scas popa aam push dec add nop cwtl es pusha and jmp xchg cld or or and in and in adc and lcall fdivr fistpl dec push pop sarl lea notb jbe xor jecxz inc push loopne fadd (bad) fisttp jnp fiadd and push push lea cmpsb add xchg adc sbb mov fstpl les xchg dec push es sbb adc fdivr mov data16 push fdivrs lret fwait (bad) pop xor sub dec daa mov fldcw les mov adc enter clc jno push push xor loopne fadds ret dec mov lea loopne popa xor xor fldlg2 inc les pop dec cwtl lcall pop cmpsb jb and sbb jmp xor mov call cmc imul fbld xchg lret imul std or xlat mov sbb jae dec adc xor mov int pop inc (bad) push fwait aas pop outsb scas stos stc andl mov sbb add inc xchg mul enter jno adc add jl sub ret sbb cmpsb pop pop sub jae sbb std js vpsubb aam (bad) idivl into push cmp aaa pop push jle cld (bad) fs xor dec cmc cli insl mov pop jbe cld shl xchg out ret xor dec insb xchg or lds out out fwait and jg ds addb add enter cmp test or loop cmp xchg xchg shll (bad) mov lret and repnz pop test or stos loop fwait mov call (bad) fisttp mov fsubp lods sbb test in adc leave fnsave pop or stos cmp pop lods jne fbld bound imul test lret std xor (bad) scas cmp sbb out mov dec leave clc push jecxz popa dec call es mov fnstenv rclb and mov lret dec cmp (bad) cmp int or mov scas imul ljmp (bad) test and and add sbbl sbb cmpsl mov xlat dec (bad) inc (bad) loop ja test pop fmuls ja cmpsb push out lret push int in jb add into dec and out out mov aaa dec dec scas hlt mov mov jns inc or mov inc sahf push hlt out es rclb movsb xchg out adc or jmp ljmp (bad) and mov (bad) mov mov nop push leave dec nop or jecxz push cs jp sub pop les inc push jle adc mov mov shlb aaa dec sub das cli adc cmp (bad) les movsl sbb pop std jo fistpll sub pop mov rcrl clc or shrl xchg xor ss insl sarb cmc sbb add loope fbstp jo push sti sbb push lret icebp ljmp xchg mov iret mov test repnz fs xchg sub movsl loopne outsb ss or jmp aaa cmp bound iret dec sbb int fimul push cli jnp or dec push sub jno aaa (bad) insb sbb inc loop xchg pop loop jmp aad jb mov stos mov push adc iret push ds jle jge and cmp cwtl outsl xchg bound or and das loope push mov popa stos test fucomp cltd adc bound enter imul mov pop mov push lock inc jno ror ret inc or stos loopne enter (bad) data16 imul lea outsl sub popa xchg mov xchg lret inc test fisttp mov movsb rorl dec sbb xor add mov lahf pushf and sbb mov adc in fnop aas mov cltd rcll mov xor fisub outsl dec cmp mov cmp fstl jae data16 pop mov sub cmp cmp daa in iret (bad) mov dec das mov push clc fildll add (bad) xchg cwtl xorb push imul jo mov jp jae,pt push les leave xchg xlat mov fdiv test gs lcall int3 mov jp xchg aas in nop add (bad) sbb mov test pusha loopne aam cmp lods test sbb mov push pop adc sbb aaa cmp test jne add or rolb pop dec addr16 and adc push add jp mov xor jmp test adc in add out xchg cld xor dec (bad) sub xor cltd cmp xchg xlat out fist test push out dec mov into popa pop mov lahf sub jmp in enter mov dec jmp sti test mov mov xor fstpl ljmp or outsb movsb scas addr16 arpl sarb cmp into xchg fisubr xor pop push fwait adc or repz imul push sub sbb les cwtl sbb push add inc xor dec adc decb xchg or inc nop and pop addr16 cmp je push stos jl in cmpsl clc push fsubrs inc inc loopne cmp add call add mov inc jge and lcall xlat cmpsb insb or jo pop sub cmp mov xor dec hlt jns enter or jnp ja andb lea xchg sbb mov mov pop jae loopne inc pop cmpsb (bad) (bad) sub shrb and fs dec xchg lods fimull push leave es dec fwait add mov inc or repz int pop mov mov int adc (bad) push das ss pop sub xchg dec in push adc stc mov xchg (bad) jle roll stos cwtl mov scas mov or lret xchg es push push cli movsb loop mov test sub icebp lret sub lds (bad) and stc aad mov jbe mov insb mov xchg mov mov js movsl fs add fbld add test mov mov mov in test or adc inc sbb pop cltd cmpsl lcall pop sub shrl xchg sub (bad) notl test mov rcrl popa ja rcrb jp dec and cld bound shr inc out sbb push fisttp arpl push xchg xchg cmp out push adc xor and jge inc mov inc scas add push bound jmp or jb sub mov popa jb or and mov mov lcall jle or xchg or sub or jb or pop mov sub pop pop bound add mov cmp mov cmpsl fsub fadd add jne sbb jmp insb in outsl add mov cmpsl in mov bound adc and inc mov xor hlt jl aaa les imul jnp (bad) into daa xor fiadd movsb or adc fst enter gs mov or scas repz insl popf loopne add push (bad) icebp fcoms fcompl mov int3 pop lods incl into add sbbb dec aam mov rcrl test pop adc mov lret ljmp lret cmp jae xor das enter xchg mov sub add mov fidivr sbb xor ss and and jecxz loop mov adc xor xchg push inc xlat xor xor in jae mov iret pop jg push aam pushf lret jp nop sub jbe in mov dec inc and into ficomp shlb jb in sub fldenv push movsl sub cld xchg or ret outsl outsb mov repnz jmp jp mov imul daa sahf ret mov cmp cmp rcrl push mov out jle sub bound add out loopne popf push sahf lahf cmp push and cltd push iret mov mov bnd mov sbb xlat out (bad) (bad) aas adc xchg or nopl mov or std testb lods out popf and ss add add ret sbb add stc cmp jecxz xchg (bad) aas dec lcall je stos adc pop jmp fdivrl fs out inc jl push je mov inc mov leave rcr mov inc inc mov sbb fwait mov pop sti sub mov insl sti adc inc sub arpl adc cltd or je push dec sbb jbe sti pop rcl xchg sub adc xchg inc add fild int3 shl clc inc stos mov lea fisubl (bad) mov outsl in add sahf jb add and out mov shl sub lock subl mov rolb xorl dec mov fsubr (bad) (bad) ffreep xchg (bad) cmp imul clc lea notl xor fiadd xchg rol aam fsubs das bound insb ss mov repnz sti jge scas push push bound (bad) je (bad) jp mov mov (bad) xor xchg add mov adc (bad) int pop xor push fwait (bad) pop (bad) mov scas xchg dec dec into sub in clc jle mov jno mov lret fldenv dec ss jmp leave cli push xchg dec xor pop sti jnp packuswb lods xor fstps inc rorw cltd cmpxchg mov aas jg dec leave in in xchg pop jmpw fdivl xchg adc addr16 (bad) (bad) iret xchg dec movsl cmp out shrb lahf orl jle aam sbb cmp jecxz adc push rcr push push les out (bad) sbb mov fadds shr fs sbb pop mov push sub or (bad) jbe mov sbb lods dec (bad) jb mov pop adc push adc xlat push int jecxz (bad) sub sub in xorl jecxz test cwtl fisubl gs cmp jmp lods in in lods mov packsswb or imul pop sub add lods push popf add sbb imul mov push mov fs push mov rclb mov repz inc adc std adc mov adcl mov push stos fldenv mov (bad) lret mov dec leave and pop jg pushf stos pop cmp pushf ljmp push mov dec out cld fisubr mov cmpsb movsb rolb or out int imul test adc pop sahf xchg xor cs imulb jge or adc hlt movsb das cmp lret (bad) jp add mov mov sbb mov sti xor dec push test inc ret push push popa xor out cmp lods xchg xchg push enter inc lahf mov or sub bound xor pop jle fdivp fisubr jmp sub nop xor lcall (bad) inc push push cli and and mov stos push cltd jo std mov dec add sbb inc adc push push push jno add sub sub lds popa rorl gs pusha sahf sbb jno jl mov mov lock add cld mov sarl jnp pop nop mov pop push jp fdivl sarb inc push stos (bad) jecxz pop add scas sbbb xor fstpl push loop dec (bad) push mov popa sti je cmpl sbb sub in or xchg mov jns lods (bad) pusha fldln2 (bad) lret cs mov jb cmp or daa mov daa pop dec bound mov jb mov mov and sub cvtpi2ps adcb mov mov or mov xchg mov add sub xchg cwtl pop add sbb add mov cltd xor call adc mov adc les cmp push sahf xchg or jecxz popa dec fcomp into loop mov add xor arpl add inc stos shl out cmp stos pop jbe jle ret fs sti outsb sbb push dec pushf repz push stc (bad) add mov fwait cmp bound sub call inc rcrl lret inc out mov fcmovb cmp mov jb xchg dec mov mov jl in mov jp pop stos out push sub hlt sbb leave movsb sbb sbb pop xchg lahf and jne jns outsb orl repz inc lahf fdivs pop mov shrb aas dec fwait loopne lods push ret sti dec inc mov jl out (bad) push lret push outsb mov push and or jg fmuls mov xor jge mov call imul add cmp test jge,pn pop mov dec xlat les jge sti (bad) push repnz xchg jno inc hlt jl scas enter add (bad) cli push push andl mov shrb push dec push jno arpl js and je stos sbb adc addl fsub push adc cwtl out inc lock hlt imul lcall arpl bound jne xchg daa add loopne outsl or cmp movsb outsb sti adc fsubl gs loope es aam add adc mov xlat imul pop in shll inc movsb (bad) gs or jno (bad) (bad) sub sub jbe add mov lcall cmp aas testb xor dec inc mov mov ss pushf add sbb ljmp inc pop cmc imul jo mov insb dec test jns or xchg mov mov sbb sbb (bad) xchg aam mov pop icebp stos mov jnp dec mov pop add adc sete push adc dec into or pop leave test pmaxsw lcall clc stos lea cmp push pusha nop out and in sbb jl or repnz add or mov pushf (bad) (bad) xor inc sub in sbb adc call rorl xor add test ret mov xchg out inc fbstp imull cmpsl lcall mov jg lcall dec arpl jo inc adc cmc imul sti gs xor add xchg cmp xchg stos fnsave and pushl pushf and scas inc mov mov arpl mov clc hlt and inc sti cmp scas xor jge mov aaa cmp test insl (bad) sbb decl in loopne lcall and loope fsub fistpll pop sbb dec subb xchg cmp (bad) push lods pusha add lahf and mov lret pop push cmp xor push (bad) jg push subb sub inc fistp imull mov mov push decb cld outsl sbb in sub xor or scas icebp and jbe push sarl outsb sub outsb xchg jle incb dec push adc popf out sarb daa sub add add scas xchg lock divb push fsubrs and mov in out insl in addr16 mov add and pop fs jne push (bad) (bad) mov scas mov and iret add xchg sahf outsl push add jnp js inc cli test mov and (bad) mov cmp mov and popf call mov pusha fiaddl xchg and lret jp mov push add mov lcall cmpsb push pop mov aad lods fsubrl sub push out mov lds lock inc add addb mov jecxz and xlat cli loopne push mov dec and fwait mov dec lock gs xchg call stc mov stos mov cmp adc adc sbb add fmul pop into pop faddl sbb (bad) lods pushf decl cwtl mov sti pusha add xchg gs mulb mov xor clc push fist dec (bad) je push mov das imul xorb aaa jmp inc and or jg (bad) test xor inc data16 (bad) test hlt mov xor int out popa cmp sarl jnp fnstenv movsl ja rcrb adc push pop and cmpsl and into mov sub sub inc cmp aaa ja push test dec and in push xor aaa add ficom jno xchg (bad) imul mov in pop out imul and and and jg sub pop mov add ljmp xor pop push scas fldl pop (bad) mov jbe bndstx adc ljmp in pop flds pushl xlat inc icebp repnz cmp add (bad) ret mov scas popa xchg jl hlt jbe fst (bad) ds lods xor rol mov (bad) decb dec aad (bad) (bad) jno mov test outsl roll pusha in test stos jle imul jo loop push sti xor pop out xorl jge movsl dec rorb fsubrl (bad) xor jne xor and fisubl push pop out adc pushf dec push shrl shlb mov cmp xlat add test sti dec imulb sbb mov insb imul add add dec inc sarl in mov cmp adc pop jmp cli adc sub imul out sub jmp movsb sub std shll xor ljmp xchg mov shrl add (bad) movsl fisub cs mov jmp mov or xor and xor cs leave aas pushf xor in adc mov faddl outsl inc in pop ja rcl jle cmp jnp pop cwtl adc add add ret adc (bad) jecxz fwait dec (bad) lea add adc int mov mov push es rolb ds xchg xchg (bad) hlt sbb (bad) jno cmpsb mov xor mov or sub add sub fisttp ret pop mov scas mov inc sub (bad) mov in enter add mov jae xor push cmpsl dec sub mov out xor ret iret test add lcall lds mov cmp das fisubl cmp or leave lods cltd rorb call xchg ror inc (bad) push lahf loop mulw test ljmp stc in jne mov sbb and cbtw flds push sarb and inc add lods xor and or jns (bad) xor ficomp nop aaa inc mov fwait (bad) cli stos out shrb jecxz fildl loop gs sbb or push into insl icebp flds mov inc xor jnp xchg mov mov lea jo mov sub xor add add fsubrl mov (bad) push jecxz lret cs scas bound ret inc hlt jl popa xchg pop dec out lods cwtl cltd iret or fldt mov xchg lret jne jns cmp xor xlat and dec xchg out jp pop add lret sub mov int adc sti push and and mov jne mulb and test fucomi xlat mov movl stos pop push addr16 cltd xor call sub (bad) cmp jno (bad) bound jecxz insl xor or cld sbb out pop sub in pushf xchg inc loope cli lahf mov cli dec inc pop stc outsb jb aam adc shll and add ffreep xor cwtl or jl sarl push nop (bad) arpl inc xchg clc mov jge xchg (bad) xchg adc scas adc dec (bad) es fwait cs mov xchg out das fdivp pop cmp cli add aam add jae mov sarb xlat insl mov sbb pop lcall lods stos stc pop icebp lret mov scas ficom mov mov popf pushf and inc and mov mov mov shrl cmpl pop lcall nop add lock cmpsl sti pop xor cmpsl add lea rcll add push sbb jb inc xchg cmpl arpl sub lods sbbl rorl cld dec add fisttp sub fwait or sbb das mov jo lret add fisubrl jl ja in mov cmp mov mov repnz in rcl xchg fwait sub test test or pop mov and sete fdivrl add and dec mov mov pop cmc loopne jge pushf in xor ss lods jp (bad) addr16 rcrl (bad) repnz ds dec stc jns sahf ret push mov jmp or enter (bad) jecxz iret mov mov push dec insb sbb fadds pop push jmp iretw and shrb push clc or movsb icebp sub test adcl aad inc add and xor mov clc in cmp idivb xchg xor pop add (bad) mov mov out out ss pop cmp add pop loop outsl icebp fisubr in push mov icebp pop mov mov test mov dec lock (bad) aaa (bad) xor add sub pop xor and xchg leave mov outsl ljmp es das out mov enter pop add or ss pop mov lods dec or xchg out xor xchg in or add cmp outsb call adc push mov mov dec daa mov push inc jae test fisttp mov push fsqrt jb int mov data16 mov push repnz loop pop and inc int repz and lods test (bad) icebp inc pop leave out jb xchg sub or stc (bad) jnp (bad) (bad) imull add arpl outsl mov cwtl clc (bad) jnp mov push sbb ljmp cmpl pop lcall sbb jnp add adc or xor cmp mov cmp faddl mov xchg add movq stos jne or push das sub out adc inc mov xchg cmp mov in ss cmpsl lret add add call fdivl fidivl test inc xor movsb aaa (bad) adc jge push loopne cmpb js add mov xor lret mov sbb push movsl pop cwtl (bad) stos pop sub cmp stc inc pushf test adc loopne iret jno jne jge jns (bad) daa xchg pop es insl dec notb xor add sub cltd pop xor (bad) or sbb test add push jbe std cld xchg popa cmp jns movb jmp bound cltd xor push ret in lret sub jecxz std gs and xchg loop andl scas fcom test xchg pusha xchg jg push dec jb (bad) (bad) ja sbb ret aas imul mov jns pop pop sar incl mov xchg (bad) jp lcall cli out and jecxz clc pop jg aam sbbl or pop inc pop fiadd sbb push mov adc adc sbb cmp leave test pop (bad) mov lea cmp cwtl in mov sahf js jae setnp mov adc xchg stos clc popa pop add add subb cltd mov cmp cmpsb lds stos adc ret cmp mov xchg mov mov ffreep jno aad xchg jle mov rclb push xchg dec aaa (bad) dec lea aaa pop push enter rolb push adc sub push jne or xchg lock lods mov or int fdivrl rep test add mov add add outsb mov jae lds loopne int pushf pop nop xor ljmp jb push (bad) in pop cmpl mov push (bad) adc aad je mov and or xor les out mov push push or cmp jb mov add sahf dec pusha pusha mov pop add (bad) les adc aas loop xchg mov mov in mov jb jg mov (bad) insl sub scas xchg and mov addr16 adc sar dec push leave ficoml inc das fdivp pop dec pop xchg lods ret push repnz mov ret xchg push enter sbb gs inc (bad) ss out stos pop scas adc fwait pop aad sbb mov pop sbbl jne clc and pop push addr16 cmp mov subl insb xor fs rcrl pop sarl jbe pop ror mov sarl mov mov dec pop pop sarl fcomps iret lahf scas dec cmp xchg dec cmp test push inc arpl lods mov leave in enter (bad) test leave pop mov jbe push push mov push sub and sbb andl in jae shlb jecxz mov jg insb shll cmpl int3 dec and mov cmpsb jge in cmp fwait test fisubr cmp out cmp adc mov idivl push fnsave jle mov shlb jae and or mov and pop lds fldt sub adc (bad) jg aad ljmp add lretw sbb cwtl out (bad) fcomps out mov std (bad) lret cmp pop mov in enter and sahf xchg fwait mov (bad) fwait fwait pop lret int mov xchg pop xor add add jl popa xchg pop dec out mov lahf xor lret fadd or jl jb mov sbb push dec adc loopne jbe pop mov test sub (bad) sti stos (bad) push add mov pop cmp sbb adc and clc push jns mov mov je lea clc adc repz xchg mov dec inc cmpsl test sti dec fwait loop std (bad) xchg sbb add cmpb mov insl pop mov push push std jecxz int das mov movsl and or clc jecxz and movsl dec mov jg xlat sub pop fistpll (bad) sub (bad) mov pushf lret sbb jmp call jle push (bad) or push test je ja cmp les mov add add lcall xor jb call dec or jl push xor insb scas stos test push mov dec pop in xchg int3 test pop (bad) and aas jmp xor pop sbb sub mov push pusha call lahf adc sub push mov push sub js pop push sub push cmpsb jns outsb mov push sub jmp and sub lret or jbe dec pop jg add lret mov or and sub push adc data16 sar rcll pusha in test xchg movsl or sub cmp das rol in fiaddl jecxz or lahf mov mov out mov pusha aam pop mov test add movsb jne insb dec mov xchg dec pop dec outsb mov arpl lret and pop pop xor pop leave mov jns fdivrs call and (bad) jg adc shl mov adc in lds (bad) bound stc jp xor dec std jge imul mov dec jbe (bad) or pop jle push xor (bad) xlat xor add sub cltd mov ds or negl repnz cmpsl adc jae cmp xchg add roll pop test roll xchg sahf sbb adc movsb gs imul jo pop mov cmp or or movsb mov jle or lds pop rorb mov imulb push and sete jp mov pop addr16 jmp add add mov clc es cwtl sbb pop cmp popa sbb addr16 and or imul and clc nop cltd enter mov pop rcl mov dec xchg arpl and jmp sar lahf aaa dec xor int3 out mov inc xacquire int3 adc mulb xchg divb mov cmp cmpsl lcall add and sub les cltd pop lods adc push clc jp or xchg sbb lret aas jle jb xchg test jae mov sarb jb push in pop dec jecxz adc gs mov xorl in mov push inc int loopne lds push xchg (bad) lcall push sti sbb sub add idiv aad (bad) xor ret movsl daa or jne es adc lcall mov push xchg pop dec (bad) pusha xlat sbb test (bad) jno xchg out ret pop into pop clc mov mov out insb outsb addr16 adc add mov push mov cmp int pop insl jle shll mov mov bound mov mov in dec jbe mov lds mov pop pop adc mov data16 daa jb and push test jns sbb loopne mov and push sbb (bad) xor sbb xor mov jae (bad) (bad) push inc jno enter sahf outsl pop mov inc push imul out movsl mov mov add cmp push sub push and and push pusha xlat (bad) sahf into fdivr jmp cmp mov out loop cltd pop xor movsl in outsl sarb loopne cmpsb cli cmpl repz out lods jae jle,pt imul pop push inc in sbb movsb int3 rolb push adc sub xor lds movsb call inc nop and ds outsl leave push cmp pop jp mov stc jnp insb dec push sahf and (bad) rolb xor ret (bad) xchg popf pop xchg push push dec mov fwait push mov xchg push cltd and jo into add pop popa nop xchg pusha fidivrl pusha sahf sbb dec xchg arpl mov ret sti dec inc lods xor scas add add ret sub mov movsb das and mov test xor cmp push mov xchg or xor cmp out (bad) mov int3 fst in cmc jmp sub lds outsb pop cmp mov rolw sbb into pop (bad) mov jne jno lds push shrl adc mov cltd ljmp stos aaa inc add inc sub clc sub xor int3 andb in test pop outsl inc xor jbe cmc fadds and pop adc inc jo dec dec jnp dec xchg and cmp pop xchg push dec sub (bad) (bad) in jae mov loope test jmp dec inc ss jmp fadd pop enter sbbl ljmp pop fsubrl imul or aam (bad) test (bad) dec ljmp jns ljmp dec cld adc inc lea mov or lea dec (bad) jecxz fadds mov dec mov int3 xchg addr16 push aas ss pop arpl mov jns inc lods push mov jno cmp xchg mov inc enter insb lret jno pop aam lock cli push sahf push scas lods shlb jae and sbb mov lds in sbb loop ror inc popf out xchg adc lds sti ja mov pop in mov rclb mov int3 in push (bad) mov rcll cmp int enter or pop icebp pop push test sbb lahf adc mov or jbe push push mov dec insl jae cmpsl mov add push mov ljmp dec lcall mov jp xchg xchg lret popa add jb loop jp aas lds leave mov inc mov bound sub cmpsl push mov stc mov cmp clc or jae mov xor pop leave fisub pop and rolb sub jge (bad) pminsw fsubs xchg sub lea rcll fwait int cmp dec cmp les xchg inc movsb (bad) pusha fimull clc stos adc pop (bad) in xor fwait std sar xchg lods je sub jo mov xchg add sbb cmp mov mov jo jle pushf sub movsl jmp sahf ja gs repnz adc and sbb dec xchg aam xchg cmp jae add jno (bad) xor cmp adc nopl mov pusha flds inc dec adc fildl imul ljmp and pop mov cmpsl es pop push fdivl lods shlb mull adc cltd mov xor insl inc (bad) idivb jbe adc xchg les mov jle adc lea into lahf mov outsl add jmp and ljmp pushf and and mov fnstenv adc aad jns add and popa arpl mov mov mov scas into (bad) push push (bad) mov cmp mov fcmove call out ss les les cmp sarl mov add add sub mov mov shrb xchg fnstcw push jbe xor insl (bad) push mov sahf pop adc lea dec sti test sbb out push into femms and or sti bound mov icebp aaa pop (bad) or data16 enter outsl les mov sbb ret aas xor loope clc mov mov xlat mov hlt pusha dec mov add leave adcb sub mov xchg call sub or xchg dec sbbb adc in mov mov movsb cltd mov jno xchg adc (bad) xchg scas out pop imul outsl adc adc jp popa or and pop leave scas loopne int3 cmpb mov pop pushf lret add add (bad) sahf cmp or lea mov xor and sti jmp enter xor add push push cs cs cli xor dec adc sub mov int sub jno jl (bad) pop pop jnp fildl pop cmpsl (bad) ror xor aas xor ds sub stos hlt call cmp pop adc push or insl push inc add stos pop addr16 mov (bad) pop fwait and scas or lods lahf mov call enter lret sub pop pop sbb popf (bad) sbb xchg cmp push lea iret or arpl pop repnz pop push sub rorb aad push icebp lret push lock mulb sub or and mov and dec int loopnew std adc xchg (bad) lcall mov add cmp mov aam add mov lret popf sarb insl push (bad) sub std js rcrl cwtl mov fwait or sub jno call cs xchg cltd mov add subl sub push adc fwait mov mov sti cltd jp neg mov mov test adc jb mov pop insl mov mov and jbe mov pop adc xchg xorb or andb mov dec or mov ret imul lret je xor sbb js imul pop js mov ja mov fwait lcall add xor popa mov sbb arpl jl outsl or or lods sub (bad) jp add add add mov scas call call pop mov je push pop (bad) xor dec std or push fdivs or gs mov in mov xchg sub xchg rorl cld dec (bad) jge pop fisttp idivb or movsb inc fisubr mov jns popf cmp jns hlt pop adc cltd sti sub xor inc jns inc addr16 loopne pop and adc lock aam push jp out adc jbe movsb data16 mov xchg mov or lcall call popa jb and frstor negl enter cwtl sub gs jmp push and add insl nop sti dec in inc jle cmp jo xchg xchg jg in add lahf ret scas (bad) sub stos adc xorb cmp add movsb in xor lcall test jnp push cld test adc out enterw pop mov (bad) dec imul cmp dec xor (bad) pop add jae repz jmp aas xor sbb iret lds or xor jno lahf outsl sbb fwait iret cmp cli pop add aad test jno das scas mov stos pop mov mov leave je jne arpl adc test rol lea push or jb sbb mov sti push sub lret xchg cli jg push mov sbb and cmp jne cltd cmp xlat cli lahf fidivl cli pop dec jle or or loope cmp pop dec and (bad) mov clc sbb cmp mov mov stos int3 xchg lds data16 dec out jg cmp bound insb roll in ret lods cli push sbb inc arpl cmp lret jne xchg int push sbb sub mov test push jp or neg rcrl jo loope push push outsb mov cmpsl aaa xor or jns (bad) pop dec mov push and movsl ljmp dec lock and and xchg cld push mov jbe cmp cld xchg mov mov cwtl ja sub roll xor inc loop mov push mov sbb mov nop in sub imull push mov imul push xchg jge cli cmpb xor adc inc outsl inc cmp add and jecxz fmull shrl mov hlt xlat pushf and xchg mov or test adc insl lea into cli insb jb mov outsb scas daa jl in xchg fcoml sbb imul je pop nop jne jns or (bad) std movsl push mov test pusha test jp lock and ret or cs (bad) es cld aas mov dec jle sarl cltd cmp adc loope js fisubl gs cmp loope pop cld fimull popa xchg nop ds cmp or and jbe mov popa sahf inc sub (bad) into mov lcall mov aaa adc cmp ja rorb movsl insl sbb cmpsb (bad) dec sarl mov push mov inc pushf xor add pop mov push gs loop out divb aas cmp inc cli cmp repnz xchg pop jmp mov mov fwait jge cld (bad) fild lret movsl loop sbb mov cs xchg cli js jae test mov (bad) cld jecxz mov imul mov xchg iret jp mov add push ret mov inc and hlt hlt popf gs nop in (bad) mov daa dec cmpsb jl aas lahf sub cmpsl adc or iret (bad) roll add pushf sbb xchg ret mov cld loop cmpsl int3 mov jo mov xchg loopne jno pop ja pushf mov (bad) movsl xor dec mov pushl das add add es sub cmp push sub pop pushf je dec mov mov add addr16 cli and fcmovb rcll lds inc (bad) jmp movsl pop (bad) xchg xchg aas add pop sbb mov or cmp adc inc pusha mov dec push ret out push push jecxz das (bad) std mov das (bad) pop cmpsl repnz lret xor sub and test jbe sbb inc lock movsl and inc lret jmp push push mov push jae mov rcrb xor std or outsl sbb push pop cmpsb mov test inc stos mov test or push push inc mov cmp mov daa jae loope loopne cmp add add jecxz inc mov call mov dec sbb test mov push outsl in xor out lds arpl lock mov jg rcll es int mov sub dec or pop inc lock mov adc sub sahf mov test shlb add adc pop sub lock adc adc inc jle jle mov ret iret (bad) or popa xor pop (bad) leave cmp pusha cmp dec aaa cltd or std loop sub mov push xchg aad sub movsl mov ljmp bswap adc addr16 imul mov pushf shl add clc mov and mov loope mov outsb in xlat mov add sub inc pop cmpsl (bad) imul inc sahf addr16 imul rcll push (bad) adc cmp popf (bad) ss sbb jb aas pop mov jbe test jns call mov aaa or ret cli cwtl bound stos inc jbe add pop or xchg xchg and (bad) je sbb dec fstps imul out pop mov hlt xor pop fs mov (bad) mov adc push pop push mov inc dec test mov adc subps das aas mov iret dec or push cmp out jne mov aad lods mov faddl in cmpl add and fwait push add jl fcoms or add jp add and out xor xlat add pop scas xchg mov lret dec (bad) std jo fistpll xlat xor aaa lahf push pop cmp xsave mov add pop arpl outsl jmp sarl cmovle lods jl dec xor and test jno mull pop in icebp les shrb sub adc and (bad) ss or out insl xchg or sbb out mov pop mov fisub mov jns push sbb sub pop popa leave push mov pop mov pop add mov jbe pop pop (bad) mov jmp pop dec aam pop in inc push cmpsb push adc push or or mov aas scas mov (bad) je (bad) jbe (bad) sbb faddp nop cwtl es cmp and cmp cmc popa sub jle mov pop xlat add mov movsl xchg pop jle sub je fdivs push cmp std movsb xor ds jb inc or xlat jg aam push repz add movsl pop sub push push mov ret pushf repnz push mov xchg and sub pop outsb or and mov ficomp or xchg mov pop mov (bad) out stc aad vmread addl cmp push testl (bad) fsubrs out fwait cwtl xchg xchg add push mov and mov andb inc jbe cmp or pop push popf sbb add mull jbe and data16 lahf nop insb jae leave push jl (bad) icebp test adc jecxz cmpsl int3 jb jo xchg pop push sub and sbb or sbb dec rorl repz (bad) push jp loop fs ja js xchg push sub mov mov jne insb pop dec pop jo or mov push imul cmp repnz pop cmpsb xor add xchg mov mov sahf fisub addr16 cmp outsb inc (bad) or repnz cmp push xchg pop popf rcll pusha jmp rorl mov rolb fbstp xchg (bad) (bad) dec add (bad) nop cwtl hlt lds cmp fisubrl jne mov incl maxps sub sar push jge clc mov (bad) add add inc pop sbb es sarb dec xchg icebp mov and push sbb mov jbe fadd pop pop push mov push stc mov fistpl dec in pop in cmpsb fiaddl lret adc popf test rcll push sub popf push jb fldcw pop adc xchg mov (bad) dec dec popf push hlt lea lock sbb std sti bound outsb cmp mov rorl jo fiaddl push jmp push pusha and xchg jbe test add jns lahf scas cmp and cmp ds dec mov dec movsb call jle inc dec fnsave and sbb push adc into dec push jp jmp dec pop cmp add cltd bound jecxz and dec gs aad pop jbe sbb xchg pop sti mov sub mov mov xor sbb xor aad xchg or and sbb push sbb roll (bad) fsincos xchg mov cld push jge xchg roll cld cltd sahf xchg cmp idivl lret lea xchg xor pop (bad) iret ss rclb hlt data16 bound (bad) mov push scas add dec lds outsl fnsave push add ss xor int push sbb push sti (bad) adc scas mov sub cmp test adc mov xlat lods sbb frstor sub lds mov pop sub jecxz fldt faddl setl dec add add mov jmp jecxz es dec adc add fmul lret dec adc jne jns leave outsl jmp adc mov lods outsb adc ljmp sub or test std cs dec pop push jecxz jns sbb jle dec or (bad) mov int3 jnp pusha pop mov jl cld in add jbe xchg sbb inc jnp pop jae je popa xor bswap (bad) repnz push sub roll jle,pt imul mov mov adc rorl test into addr16 jle (bad) xchg ds test out dec fild out pop adc mov loopne repnz jbe dec adc inc ds mov jmp pop dec mov stos divb mov (bad) sbb (bad) add add es pop test lds pop movsw add sbb and inc imul outsl in aas inc ret pop mov pop loopne cmp stos push (bad) pop sub test xchg add cmpsb stos cli mov rclb sub insb xor cwtl cmpb push xchg cmpsl jge sbb stos inc jbe aad std ror jg sub push lods enter and mov movsl insl jp (bad) or aad lea sar sbb xor outsb or outsl ds fs enter mov push jae outsb scas std xchg jecxz lock adc sahf xchg popf pop lds addl push stos fcomp std gs bound sar mov loop cwtl arpl rcll stos (bad) pop (bad) lods adc pushf xchg cmp sbb lea push adcl push lahf and mov aas xor mov stos pop (bad) jecxz pop test and inc sub jne xchg add int mov aad subl push jmp stos ljmp mov adc pop stos dec or fstps cmp dec push lods iret lds and lds dec cld out (bad) pop aam push adc lock arpl push push mov out addr16 in adc leave fnsave xchg loop xchg gs mov jne fild fdivs ja add inc lock mov jmp stos mov xchg outsl insl sahf cld (bad) stos frstor push add adcb mov rcrl loope jne adc (bad) mov aad jb push or or jns fs test xor or test mov test mov mov jge (bad) addr16 pop pusha jge jle shrl mov adc push ret sbbl and lret (bad) scas push (bad) icebp mov jbe lcall jne out (bad) insb in in scas stos stc js cmpsb orl incl xor sbb xchg movsb xor (bad) ss jmp fist out in push mov imul outsb jecxz or pop dec sub dec sbb stos das mov ds dec (bad) sub sbb imul fdivrl int3 ss inc stos cmp fdivrp xor xlat aam xchg lods jo scas adc mov test cs or sub mov pop (bad) jns cli andb pushf in sub mov and lcall lds dec xchg cmp jp dec bound cld lcall inc mov jbe pop jp sub xor inc call push push jns pop or and xchg push lock (bad) (bad) out jae cld and push xlat mov cmpsl xchg push jmp or mov push push sbb movsl adc adc inc add out sub lcall test push inc push in push cmc cli movsl (bad) jbe aad jge push or dec mov jmp dec and arpl test mov out mov outsb fdivrl push out push mov cwtl pusha das jne mov dec dec inc push push cmpsl dec incb fnstcw add xchg loopne add test push sahf sub jb sub adc or mov out inc cmpb clc adc mov dec es xchg mov (bad) sbb daa jmp mov fmull outsl sti xor leave cs push in inc jge dec shrb jb mov push enter cwtl mov test mov xor sti arpl jno push pushf shrl xlat (bad) std jo fistpll sub pop mov rcrl clc or sub and lods xlat xchg cmp (bad) xor add add movsl data16 outsb sub push iret dec icebp inc sarl sub sbb adc push iret lds (bad) mov sahf fdivp push ret xor pop sub addr16 dec test test ja xchg dec adc cmp arpl sbb (bad) lock add mov ficomp pop popa sbb jne loop pushl sbb xchg (bad) cmc (bad) jp inc popf in js int insb xor sub cltd cmp xchg lds cmp lods leave mov jge sub test cmp adc pop loopne rorb jae call addl movsl int3 inc jle pop loop pusha lret or aam xor pop mov sub pop cmp jecxz add dec leave jnp fs call lret sub (bad) aad (bad) ss por (bad) sbb inc stos jge pop int mov and mov je xchg fcoms add adc cmp adc test fninit loope stos and das xchg movsb add pop sahf jl into xchg (bad) push in xchg mov add inc mov and into fildl test test jnp ficompl insb fstl lret xor dec cli scas push clc dec xor jge xor loop fwait in xlat ret sbb fldenv xchg xor (bad) iret or lods push adc leave mov push iret lds aas pushf xor lea mov sbb xchg aam push sub rcl inc pop dec inc mov mov add add mov xchg pop dec in or out inc (bad) mov iret iret scas add mov add push pop adc push add stos and cld sarl loop fcomp lods adc xchg push ljmp sti dec dec fldcw jmp push and bound das push jae adc sub jbe sarb xchg xchg hlt sbb icebp nop cmp pop enter cmp nop sub pop leave pop out dec (bad) repz jbe sub mov mov clc mov xor lahf sbb lds std sbb adc (bad) jns or xchg iret inc shlb and data16 mov jb lret cmpsb mov pop mov adc popa stc mov push fistl pxor sbb inc sub sub rorl mov jns add push call aam outsl lock in jo sub mov outsb loop ss stc aad lods add loopne aad clc popa int pop jecxz push adc enter clc jno cmpsb xchg xor push mov mov vcmpneq_uspd or push or insb fstpt lret inc adc inc and inc or mov and cmp fldl imul fwait and push mov dec add pop cmpsl add call stos push cmpsb mov iret mov sbb xchg xchg pusha daa scas sub rol or mov pushf test out inc mov les push sbb mov push add sbb mov add outsb ljmp test add mov pushf pushf xchg (bad) mov cli clc nop mov (bad) pusha push out cmp mov jmp adc mov in xchg movsl je ds scas insb clc cmp ds nop sysret leave adc lea sub les je pop xorb gs sub clc cli adc mov xchg aam aam mov cmc or jno jp inc push ds fcmovnb sub in lcall push or xchg push push or andb mov frstor mov loopne outsb pop fwait inc and (bad) fbld mov adc in jns mov mov (bad) xchg cld adc fisttpll xchg xchg inc mov xchg mov xchg pop leave fdivr xchg hlt cwtl sbb mov mov jns js xchg nop xchg ficompl outsb cmpsb pop outsb repnz test cmpsl adc test clc mov pop push mov mov ret dec and fisttpl gs (bad) scas (bad) in gs fwait sub inc xor sub (bad) aaa int fsub fimul test pushf xor leave (bad) fisubl sbb or mov icebp loop dec mov push push popa sbb ja movsb (bad) stc sbb scas icebp lcall popf fwait jge sti (bad) fistpll jb decb idiv outsl sti subl mov sbb (bad) adc mov cmc mov (bad) or (bad) fiadd roll insl push pop mov lahf mov cmp dec pop and add (bad) test lods xchg push mov nop cwtl mov add int3 adc dec (bad) adc flds mov pusha mov xchg adc cmpsb dec aaa pusha inc pshufw push lcall imul test lds mov xor scas test fimul dec es repz dec fisttpl mov (bad) mov push mov xor sub jne int xchg dec stos fisttpl push and sahf outsl (bad) dec and inc sub loope nop aam imul loope lea xchg (bad) hlt mov lea popf push fistl sahf sub cltd xchg dec or cmp pop add push dec insb call lds mov nop (bad) cmc pop mov fldt jmp add sub js xchg jle jnp ljmp push mov nop add lcall (bad) jb xchg js sbb jb add xchg ror cmova dec gs adc inc adc jnp notb xor mov loopne pop outsb inc ljmp fcoml jne xor test or (bad) sti clc or fiaddl mov popa nop add xchg lea repz fisubrl in test sbb outsb js sahf (bad) cmp pop dec dec aam les inc movsb (bad) stos xchg aas cmpsl lcall jge ret jb sarl (bad) jbe in test mov in outsb dec nop test jnp cmp shrl icebp pop adc sub cli js add jl mov xlat ret cmp fcomip cmp in adc add add xchg imul mov mov xor cmp scas std xchg cmp repnz adc ss sub push andb sahf iret jmp jecxz cmp ficom icebp (bad) and arpl sbb out lock mov lea lods pop fwait add add js jo jp sbb nop sbb inc fldl mov lock sti shr adc aad push sbbb push out mov lahf fdivr cmp xor lock sbb stos pop add das int3 jno pushf xchg push imul int3 pop loopne repnz push and sub jne dec pop call jmp xor (bad) (bad) in (bad) xchg xchg mov out icebp cs mov jmp jne cli cli aam or add add push adc xlat out (bad) xor arpl jb dec and arpl (bad) out inc in xor (bad) imulb lret adc mov mov out jo cwtl insb addr16 repz jmp movsl inc add in popf fisub decb popl (bad) fist cmpsl mov rcll mov pop push lahf mov popa and cltd imul jbe shlb std (bad) sbb cmpsl hlt dec xchg xchg je enter pop ds jbe cmpsl adc fidivrl and movsb (bad) mov and mov mov cltd repnz adc fildl ds fnstsw das fisubl out sbb lahf sbb inc xchg in stos inc ss rclb push dec adc leave or xchg and jp adc sub mov xor mov sarl outsb sbb add lea ret mov lcall and jb jbe dec movsl push ret add xchg (bad) jle or bound add sub mov cmp adc pop lock pop xchg sbb enter pop out xchg jbe sbb push jnp in cld icebp pop mov and add and fnstsw mov mov xor lcall shrl ja fnstsw push mov in xchg mov sub cmp aaa outsl pushf mov mov gs (bad) sbb pop stc lea mov xor scas add and dec mov mov and jle daa aam mov push jmp add xchg mov jge cs adc add call push cmp sbb and in and lahf mov addr16 adc (bad) hlt data16 xor pop mov scas push xor insl pop arpl mov xor or mov in je loopne pop rorl and adc xchg stos clc mov mov insb lahf sbb sbb xor je sbbb pop lret inc mov pushf add dec sub cmp daa adc and or xchg ret in test push push mov cld add aaa pop mov fldln2 mov out cmp outsb das lahf and xchg push call or mov repz mov push add add and pop dec xchg stos cs es adc int hlt mov aad sub mulb jne popa addb inc std lahf scas xchg cltd sbb mov loopne jbe das ret sbb jg xchg ss cmc dec ja fucomi or lcall stc push mov out roll pop test xor inc xchg sbb adc cmpsb or xor sbb add xor std movsl xor push fwait or aas mov push pop insl jle xchg jg icebp out mov mov xor inc ret stos (bad) int3 cmpb and je test pop or sub fadd xchg pop loop outsl xor in jge jp mov xchg adc outsb sbb rorb cmpsl jg stos and jo ficoml xchg push les add dec nop mov mov iret or mov stos jno add inc jae stos pop fisttp sub int3 jle xchg mov xchg xorl in mov aas loope shrl push mov add push ss movsl icebp mov xlat lods sbb xor or mov (bad) fwait dec stos or pop scas outsb push mov mov sbb cmp imul stc ret fildll xchg cmp hlt lcall or loopne lds mov push mov inc jnp jo imul pop popa sbb push dec pop fdivp mov dec ja (bad) and sbb cmp imul dec dec jge aam clc adc inc movsb ret stos stos aas cmpsb fldenv rorl clc loop mov repz sbb xlat cmp or xor out and and sbb ds xchg sub decl ffree inc jmp test lcall inc push out xor push sti sbb fnsetpm(287 stos add stos loopne dec push sbb shlb mov xchg int sbb outsb les sar xchg stos lods xor sbb test popf cmp mov xchg push push (bad) adc add cwtl sahf outsl push add and cmpsb in inc (bad) test mov dec sahf pop incl shrb push adc sub sbbb mov cmp in je repnz cmp pop lcall outsb ljmp jge loopne cmpsb and pop jae inc or cwtl lods pop add les insl jnp pop (bad) loop sahf jnp push and js jnp cli mov sbb push or test inc (bad) iret dec stos cmc (bad) out dec gs xor (bad) xor add mov loope push dec es imull cmp adc add leave aam fldenv inc movzbl xchg sbb pop clc push add sbb push push in add jl int data16 push out pop fwait push ret add fwait inc add cld inc cwtl cmp dec (bad) cmpsb imul pop adcl pusha pop sub popa cmp mov les gs stc mov and fsts jnp in lahf outsb cmp nop sub dec leave pop out dec js mov jno aad sub fwait gs ret loop mov dec inc sbb movsb jno stc imul enter popf loope test add insb dec repz inc sbb repnz outsb xchg aaa add fs push jne ljmp dec jae mov icebp (bad) mov addr16 jne outsl pop pop fist js cmp add add push int push xor mov mov jb hlt jg mov clc lods (bad) hlt push pop in pop fiadd cmp xchg and lret xor test (bad) or mov sbb test nop push adc test hlt mov or in stos inc rcr push cmpsl jns (bad) ret adc shrl xchg xchg pop cmp imul fstps mov iret or push je jg mov xchg add pushf imul sbb mov iret mov stc and push and popa ret cmp icebp or dec outsb shrb shlb fwait lods popf and and test inc adc (bad) fbld jle adc sub test sub loope ja (bad) sub loope incb std das out insb push (bad) cld xor (bad) mulb test xor push lahf sub (bad) mov sub add ja add ljmp xchg imull cs lcall adc push scas lea and aam (bad) arpl repnz ret mov jo sub les cmp std or iret and icebp xor js xchg lcall inc mov inc notb or outsb inc jge hlt add jnp dec adc stc adc fmull push popa jb outsb sub and mov in sub cwtl mov sti mov add xor loope lods sbb jae mov mov sub adc aam mov (bad) aam aas sahf sub xchg inc shr ret hlt ds pushf out mov movsb divb add pushf mov lds sbb and mov dec pushf jecxz jp neg or mov push out mov vmaskmovdqu stc negl gs jb mov lods mov mov (bad) mov stc sbb pop lcall sbb xchg sti mov enter or out xchg hlt cmp sbb pop adcl incb addr16 frstor sbb jge push cmpsb pop lods mov jcxz xchg popa nop add adc inc add pop push (bad) xchg and aad daa js adc mov mov sbb aad adc pusha test aaa ror shrb je mov push aaa pop pop jl xlat jbe push adc xor sbb mov out leave pop mov mov and mov test cmp in and outsb and sbb dec (bad) js pushf push jge mov mov repz and adc xlat out out shl aam mov lahf xchg adc fisub inc les imul mov pop rcr arpl push cmp repnz movsl pushf adcl lret shlb jb add add out icebp les add shlb mov sbb aam adc pusha test aaa ror iret scas ds cmp cmpsl negl xor and cs mov pop cli scas mov dec and jle call and add je out pusha in push or lods sbb adc push orb jno arpl movsl mov ficomp adc xlat cmp mov dec pop leave call cmc cmpsl cmp stos loopne int3 cmpb mov (bad) frstor repz xor (bad) mov pop fdiv repz imull ss adc sbb push and pop dec xchg stc dec sbb xchg push mov aad sub mulb add arpl cli aaa mov xor outsb stos pop rolb pop fnsave xor shlb cmp lods xor mov lret add sbb fimul jmp leave repnz (bad) or insl test cwtl fsubs lds les add out cmp popw jmp lcall mov sub les pop pop outsb mov add je ret sub (bad) and pop or mov adc fsub and test pop cwtl shll das insl cmp mov mov rcrb xchg inc in rcll mov jg xlat cmpsb push inc lcall mov dec bound addl imul roll or push or in mov cmpsl push test adc add clc (bad) cmp inc inc jne sub mov dec inc ret lds pop pop cmc (bad) or jo adc (bad) mov (bad) sub inc (bad) mov out ss and pop xor jp mov jae and xlat out clc or lock mov cmpsl mov inc (bad) jne sub inc stos push mov sub decl shr bound and (bad) xchg mov adc sub xchg notb mov mov ja fs rorb xchg dec pop xchg xchg and stos cmp mov (bad) clc push je and ds push or or cs ret mov imul adc sbb add add xchg push lods add push insl jle imul and sbbl push leave popf ret or (bad) lods add cmp aaa xchg xchg pop das daa imul xchg jge fbstp mov pusha xchg jecxz mov push lock stc jmp xchg mov push mov mov jge insl (bad) fimul and jae je imul jmp (bad) cmpsl mov inc pop push outsl in aad je mov imulb mov cmpsb outsl test cmp loope,pn and jb xchg das cmp repz js cmpsb xchg out or inc rcl jge mov jnp mov enter out and hlt insb push call pop mov inc leave out and and cmp mov nop sahf dec inc repnz pushf aaa rolb adc and dec xchg dec sarl add and xor add pop repnz inc inc xchg addr16 adc mov push je jle jne sbb adc sbb mov stc or or xchg adc cmpsb (bad) adc outsb movsb arpl mov sarl jns cmp (bad) jns mov ret mov sti sub mov les xchg lods rcrl (bad) sar cmp iret out ret das out jmp mov les mov (bad) js outsb push jne add mov les add (bad) dec mov cltd sub cmp in enter push imul pop pop movsb xor mov jb insl sbb call jns dec in pop cmpsb and or mov popf ret push lea sbb dec sub mov add int3 aam pop add ret psrad popa popf sbb cmp sbb ds outsb mov (bad) adc or test inc cmp adc ud1 cmp mov pop or roll (bad) xor jle outsb mov sub push es push arpl jns sbb cmpsl fcoms xchg or (bad) jo or mov and ret shll std mov aas cmp ret mov insb out and sbb adc rcr enter scas ficomp leave out test or cmp cmpsb out icebp cmp dec mov adc jmp lea repz pushl push (bad) shl cmp push scas into xchg jge inc jb pop mov mov or jecxz jg jne stos ret out xchg scas incb fcompl ja fnstsw lods cmp outsb jbe and mov sbb fisubl xor sbb test and addr16 lods xchg add and (bad) cmpsl sti pop arpl add jno in insb xlat jns paddusb cmp jbe mov mov pushf sbb out in in outsb dec nop jl aas mov fldenv mov jb (bad) push or shrl (bad) das sub sar or mov iret sub sub in dec shrl rcrl lea add iret dec mov inc xchg inc cmpsl popf pop xor inc jo les sbb inc pop push push sub xor addr16 stc pushf pop (bad) call fldl les mov or add enter addr16 cmp int cmp push fisub mov std mov add dec into (bad) clc popa int imul adc clc insl (bad) aas inc xchg mov lahf lahf scas cwtl hlt data16 mov push or popa and push inc mov jns inc insb lea sub test nop imul icebp xchg fild sbb es jae inc jne loopne nop frstor shr mov in stc xor repnz cs fistp mov push or xorl adc jae xlat out shr jmp fstps icebp push loop stc adc dec xorb inc jl out xor inc outsb mov arpl sub repz pop sub xchg add mov stos jl push dec dec test in dec jae push mov and or leave cld jnp push xchg gs mov cmp adc cmp dec adc scas add dec cwtl ds ret (bad) loope scas loope adc hlt jecxz fildl stos jle and add pop and mov mull jbe enter ds movsb mov call enter mov adc cwtl test push lret in and stos ljmp mov lret jge pop jb dec mov test sbb and hlt out xchg out enter dec mov test movsb sbb add fsub sub stos sub or repz int cs int3 outsb adc pop in stc cli es (bad) hlt adc daa imul psrld adc cmp add mov in aas mov lret sub ret jb shrl (bad) jbe inc je test mov pop lea dec ja lcall jbe cmc subb in add cmp repz icebp pop inc aaa pusha xchg or and arpl insb or lahf mov cmp dec inc mov or inc jns test ror addr16 mov loopne xor fwait push push leave or lock xor xor imul enter and clc sbb stos addr16 lea sbb fidivrl fcompl sub jbe lea es scas mov mov pop and lahf sub push test in xor pop or je cs adc pop add fnsaves cltd add add cmp jae dec add test mov aam inc jbe call cmpsb jne sarl and loope,pt test call cmc imul or and mov xor xor mov mov outsb sbb adc mov in mov ret mov movsb jmp es sti fidiv inc outsb mov cmp mov loopne arpl add jae mov (bad) cmc test lea cmpsb adc insl int or mov jmp idivb jle in flds in or lock mov cmpsl es add cltd cmp pop imul movsl xchg scas xor stc cs fdivs xlat mov pop jmp das div xchg fwait cmp cwtl push fstpl jae icebp add add lret add xchg stos lods test mov enter cld pop pop inc sbb push jecxz push jp cs and dec stc jno sub mov sti mov je,pt out sub push jp imul (bad) insb dec gs push stos ds add adc mov and or mov leave xor fistp pop aas (bad) loopne fildll repz jp or in fwait mov adc mov es xor mov push cltd adc pop call lahf les adc test jbe or mov cli xor enter andb lret shrl mov sar cmpsb cmpsl mov jge ret inc dec cmp push bndldx xchg mov sbb cmp xor mov mov lea xor out mov cmpsl imul lret test test andl and imul imul adc mov pop cmpsl js ljmp xchg shlb mov sahf outsl push jmp int shl push cmpsl and push cmp add cld mov test sbb mov push jg iret fmull in enter inc push ret cli fs jge and imull in ds push inc nop in pop mov test jle cmp cmpl sbb xchg xlat xor xor imul cmc int fldl (bad) iret mov mov test lea mov arpl and insb leave dec sub push js inc adc out add xchg std push jmp pop push hlt lcall add fcomps adc mov sbb bswap sbb dec loopne lods test sbb movsl pop cltd add mov xor mov js aad stc sti dec pop loope fdiv popa imul in clc int3 lret rcll loop mov and xchg xor ss xchg inc fstl dec mov fs jbe jb hlt pop das add cltd cwtl addb jg xchg (bad) out lahf mov dec roll mov fimull inc icebp xchg inc aaa pusha pop inc push pusha push push and into dec mov cmp dec inc ja or iret dec and push aaa mov arpl mov imul repz lods xor jno adc inc negb push fisttpll xor add stos and jae mov adc xchg sbb outsb mov mov fcompl aad mov or dec scas mov mov pop xor scas ret mov adc cmp stos pop mov in xchg nop divl mov ljmp and inc jbe call loop adc fistpl jb mov popf subl mov pushf push add pop pop jp add xchg mov xor cmpsl add jecxz fdivp inc shrb xlat mov xchg mov cmp neg push out imul stos dec xchg shrb rcr push lahf pop cmpsl or ljmp xchg mov sub fistpl jl sahf outsl int test cmp int3 adc adc and lock std mov cld push test sbb mov push cmpsb inc cmpsl push jae iret fsub sbb mov mov test add push stos movsb subl jl in sbb xchg push jle sub sub cmp pop loopne xlat sbb mov xchg xor push cwtl in int roll (bad) icebp sar mov lea test ja xor and cwtl enter mov xor out inc loopne mov jmp pop push hlt lret add jle movsb sbb sbb fcmove sbb inc loope lods mov sbb movsl jge jo mov xor sub push shrl add in sbb imul fmul hlt mov and sub cmp imul mov cmpsb ret cmp mov lahf mov adc adc pop jnp mov repnz repz femms frstor push jae push push push adc mov add push stos lods in dec jle (bad) jo xchg fucom xchg add imul loopne jns push sti jno je hlt and int stc mov jbe pop iret ret sub lods mov loope insb dec and mov pop xchg dec xchg inc ljmp and arpl lock test push aas (bad) clc xchg stos jb inc cltd repz int3 test fs xchg lret in fidivrl in in (bad) sti add clc pop adc sti xchg (bad) pop imul jmp loope bound push outsl push add add out and cli lahf popa (bad) jno add std lds rorb insl or div popa pusha mov xor push imul or rol fwait aam xchg inc rol inc (bad) icebp bndldx popf mov fisubr adc xor sub ss mov cmpsb add divl cmpsb adc aam aad push jp addr16 jmp fsubrs das mov mov adc add pop cmpsl add mov xchg test decl pop imul or push scas and jb push add (bad) cld and int3 pop inc test adc addr16 cmpsl push inc xchg iret faddl and loop fs jge mov adc add add in mov push or cmpsl out in popf jle and xorl repz xchg xlat jo mov xchg xor addr16 leave mov and (bad) pop cltd clc mov add pusha xchg xor and test dec mov (bad) ficomp icebp out subb push jmp push push hlt nop mov dec push movsb sbb leave xchg fcomps cmp mov ljmp out pop lods dec stc sub mov xor lret movsl call add cld pop shrl lock loope sar imul sub int3 lret rcll in gs mov xchg mov inc mov cmp es pop out fs add std push mov xchg cwtl xor sub xchg lea out in jmp mov jg add add call inc icebp mov pusha adc mov push push fildl arpl inc mov inc dec cli or iret dec xchg sar outsb mov mov (bad) mov dec push xor or mov xor adc sbb pop jecxz arpl add add movsb and out push add out jbe adc (bad) jl mov fcompl ljmp add clc fwait xchg cmp mov cmpsl sub aas lahf sub push cmp cmp cmp stos pop shrl adc xchg nop pop jg jmp dec js test aas gs adc and lods inc jbe pop ret mov testb lea xchg pop cmc imul or ja rol xor into cmp std jbe iret dec out add mov mov (bad) mov into lods test addr16 push into movsb fisttp sub cld or jne dec outsb mov cmp gs inc cmp lock jg mov (bad) cmc jl lea cmpsb adc and mov out shll (bad) jecxz cmp loope add adcl mov test adc mov and inc cmpsl push pop xchg iret fdivrl and xorb jge das mov in mov in mov push or cmpsl out call aam sub adc test test pop in inc mov push int cmp (bad) mov inc xchg lahf outsl lcall sbb pop mov add into lods test xchg push pop into movsb cmp daa fucompp inc fidiv dec outsb mov cmp andl mov data16 (bad) cmc cwtl lods lea cmpsb adc lods xor xchg (bad) jmp xor jle loope add xchg movsb sbb sub push and push mull inc ror clc cs stos cmp out mov sub pop jnp sbb xor cli add fisttpll pop jae stc vpaddq cltd movl inc jle and lods or sbb shl push jbe,pt jae,pn mov cld jns jno sub mov or fincstp mov aas je xlat int enter cmpsl leave xchg or insb dec cltd xchg sti adc mov addl add add jb (bad) idivb pushf and jns or data16 (bad) adc push push adc inc sub fs vphsubbw (bad) jecxz mov arpl mov stc xchg movl and (bad) lahf sub sbb cli lahf jne hlt data16 (bad) push mov push inc outsl or call cli add enter fidivrl adc sub add and mov stos pop mov sub cmp in bndldx mov jecxz je jno jo cltd mov add repnz mov ja out mov icebp iret fs xlat mov mov push jmp fsubrp std push cmp movsl icebp out jecxz adc add pop cmpsl sub mov (bad) sbb jecxz add add pop imul sbb push bound sbbl add push out (bad) cld loope sbb inc test pop adc push scas nop iret fmull inc dec push ret push lods xchg jge sub push insb add stos ljmp mov mov cmpsl data16 je jle enter (bad) (bad) (bad) pop sub je int3 hlt xchg xor gs or test or je pop aas int3 clc mov roll cltd xor and mov jo aaa xchg push sbb out push xchg xchg std push jmp push push hlt xchg mov push or sbb cmp fcomps and mov pop mov repz pop in pop lods out cmp push lret movsl rcr subl pop xor cmp shrl mov add xor loope test popa imul mov xlat rcll mov mov xchg adc mov cmp mov fs jbe out hlt sbb add add int3 xchg lea push lock pop adc (bad) les pop stos lods enter ffreep rcl loopne or and mov mov mov test cld (bad) divl jb,pn das or and cmp and sub fisttpl scas scas leave xchg add push pop out mov or pushf (bad) ljmp cli mov or aam pop aas (bad) sbb fildll repz sti adc dec popa jl dec mov in and (bad) xlat add aas pop adc clc xchg (bad) cmp jp jmp fisttpll adc call add add cli lahf sbb out add rol mov (bad) dec push dec outsb or test jne enter push and pop add mov test cmp ret inc xorl mov shrl jo xor or add out jb pop cmpsl add xchg mov icebp add mov popa aam push shll andl cmp das xchg lock jge xchg or mov pop cmpsl cmp ljmp xchg mov notb sahf outsl pop jmp int rcr push push and jge cs (bad) sbb cld xchg clc mov test push adc push mov cmp push dec push ret cli bound push or add incl or cmpsl push mov cld pop sub jge (bad) sub aad (bad) je xor fs inc std das stos int add (bad) jno clc mov or (bad) lds inc cwtl xor and test dec gs std mov sbb out push ds mov jmp push push hlt push bts push (bad) cs inc and sbb jne pop enter adc pop lods orl pop lret movsl in push jmp add mov xchg adc cmp aad xchg cld dec sbb js cld popa imul (bad) (bad) rcll in ss sub rclb xchg inc cltd pop cmp out lds jbe mov add pop jnp out xor xchg ret aaa scas neg sbb push fstl pop jae xor dec call add add xor lods cmp jle ffreep adc fucom inc push pop and mov mov mov sub jns xor add or xor mov ja pop aas enter mov cmp xchg adc insb dec xchg out loop mov test mov xchg push rdtsc mov jns popf fwait cs (bad) sub (bad) repz sti adc int or iret in pop bound in dec pop mov add xor pop adc call gs rorl inc imul out jo cli lahf sbb xor cmp adc dec push imul outsl mov xor fcomp sub lret cltd movsb adc stos in xor sarl test xchg xor je mov sbb mov out je ja jo add pop (bad) jno in fiaddl test xor cmpsl mov icebp mov fbld lret xchg add xor ficomp jge jecxz das (bad) mul (bad) mov pop sub mov pop cmpsl xor mov add sbb and sbb mov sahf outsl dec mov sub push mov add mov mov cld test (bad) adc mov xchg out mov push mov iret faddl and push ret cmp push jecxz mov lret dec nop pop nop in fbstp mov lock sub jge jno sub mov add in dec lock movsl int adc call js inc xchg xchg pusha xchg lahf xor and aam dec add add add mov xchg decl ds mov repz hlt fidiv dec outsb mov cmp in loopne adc lock jp mov (bad) cmc cld test je cmpsb adc lods xor xchg jmp jmp aaa cmp in add ja fdivr xchg fsubl cltd cmp cmpsl xlat and cmpsb icebp pushf scas mov push dec push sbb adc loopne jnp out aaa repnz aaa xor push push fucomp pop jae cmc add ret add sbb mov enter push pcmpgtd and mov mov lds jns xchg icebp jno das inc sti pushf or cmp mov dec je or sub mov xchg sub sub mov or mov add add push mov and mov xor fildll repz sti adc aad leave fs stos into in mov (bad) mov inc push (bad) xchg (bad) or cmpsb jmp movsl mov mov idivl lahf xchg inc and dec movsl mov out add cld push das add cwtl cmpb xchg mov dec rcr je pop pop push movsl jb add in fdiv inc icebp ds aaa pusha xchg adc imul sti ds mov cmp dec inc sar or xor fwait mov sar sbb mov xchg imul rcrb xor xchg (bad) or pop xchg popa arpl mov push dec enter and leave es cmp shl mov adc xchg adc js mov fcompl add mov sarb add shlb pop out cmp ret sub in cmp pop inc stos xchg xor pop mov ds cltd pop jns nop scas or pop lock in test cli rcrl sub test loopne mov (bad) ss xchg mov test out xchg pop cmc imul subl lret stc add inc cmp xor pop mov icebp pcmpgtb jne mov faddl xor fisubr das and mov inc sub mov pop cmpsl test ljmp xchg adc dec push pop imul loop adc push push and inc insl add add fbstp (bad) cld loope das outsl inc test adc mov push sub cmpsl push das xchg iret fmull xchg lea ret loop xchg jge sub shrb in adc mov cmpsl push fwait push jle dec pop sub jge jno sub sbb int xchg xor popa in or adc mov loopne inc xchg xchg popf xor and cmp dec pcmpeqb icebp out lret xchg jmp push push hlt insl clc and (bad) rorb movsb sbb push or fcomps mov lea pop lods dec sti repz lret movsl ljmp mov push dec shrl mov sbbl mov and int3 lret rcll cltd push mov sub xchg fs inc and cmp bound xor xchg mov xchg cwtl orb adcb inc adc aad mov sub call inc icebp and pusha shrl leave xchg jb push push add inc (bad) cmp dec inc daa cld or idivl push sbbb mov sar jmp adc and xor push push ror push jge xor mov mov negb bound lcall mov sarb out mov inc mov outsb fdivrl mov fcompl scas xor sti lea sahf fnsave mov rclb cli in jae pop (bad) cmp jae in aas mov cmp jno or stos pop add push jp nop cwtl test add je lock nop imulb shrl and stos inc jbe in and (bad) xor mov jo ja pop cmc imul movb push cmp mov xchg out fwait gs push (bad) adc mov leave lods test or push into movsb ja es out stos lahf insl fidiv dec outsb mov ja frstor loopne pop cmpsl mov mov sbb insb fdivs (bad) pop imul ljmp push out and or lcall pop inc test adc mov inc cmpsl push and sbb dec push ret push mov mov loopne pop jnp jg sti gs inc fcoml mov sub movsl jbe pop fadd jns cmp add add inc icebp jb aaa pusha sbb lret ds and imul mov cmp dec inc xchg std or enter sbbb mov (bad) mov leave cmp mov test icebp push xor xchg push push jge insl fisubrl push arpl negb arpl imul xchg mov dec (bad) out mov pusha nop ret outsb sub fidivrl fcompl loop je lea sbb mov in adc push cmp outsl ret mov pusha insl in xchg ficompl stos pop cld add adc xchg nop pop jg cwtl lock and test mov mov and stos inc jbe loopne sbb sarl sub dec pminub bound in dec and roll add mov scas sti cmc lds arpl add sbb in je mov fildl or dec movsl push lock (bad) xchg ja ret sub aaa in pop xor or xchg adc sarl mov sbb movsl bt push js mov xor jmp xor pop out fnstenv clc lret push jle test ret push push sbb adc repz imul frstor (bad) cli popa xchg mov clc mov pop mov fstl aaa call iret or push mov mov popa movsb fisttpl jmp (bad) jnp fucomip xor sub mov push mov jo push leave ss push mov fcomip push fwait stos cmpsl or out out mov jb adc mov add add imul xor lds add scas mov mov xchg jecxz pop inc pop mov mov jge lods incl (bad) in xor xor addb xchg xor or stc aad mov mov mov jmp in into jg xsha1 cmpsb dec jmp jae mov cmp test mov lock mov inc dec mov scas fnstcw (bad) in jecxz dec add repnz and push pop test inc mov int3 enter add cmp ja aam jae cmp in in imul xchg out in movsl loop xor fcmovnbe xchg mov shrl das (bad) movsb xor mov aas adc test leave fcmovb es (bad) dec mov mov inc ljmp add add scas in fnsave xchg mov clc push push (bad) lock into add sub les xor dec jmp sbb std nop stc out imul jo dec dec xsha256 cmpsb adc in jae and cmc mov lret loopne scas ds mov or push inc push movsb dec mov or outsl scas adc (bad) movsl dec leave pop mov (bad) adcl inc adc movsl mov xorl dec sub loop fisttpll fninit dec in or mov repnz jns repz mulb mov jle fs jb mov mov sub jno in push ficom arpl enter out mov int3 jne bound lock jmp mov cmp add pop lcall push mov pop push fwait movsl sbb jnp add sub lods sub jl jae (bad) arpl cmpsb arpl and cmc mov lret add scas sbb icebp jmp push test dec xchg ret sbb xchg nop jae fldt ss popa faddl fnstenv bnd mov cmp rorb dec xor sbb lret (bad) lret rcr cmp cmp mov push sbb mov repnz cltd sub mov inc pop leave push fisubl xchg (bad) xchg nop dec sbb and aaa xchg inc pop fmull push movsb clc jp lock mov push jne (bad) jae push and aaa js test mov cs aad int3 cmp movsl repnz add xchg xor xchg xchg adc rcll fimul sub jmp pop cmpsl clc and inc push ret push adc push aas neg sub test or mov cmp ret pop lods adc add fimul testl jmp sbb mov lahf repnz in cs push fcmovnbe cltd fsubs adc cvtps2pi push test lock pushf rorb fmulp imul push in pop mov enter xchg pop jns dec (bad) mov mov icebp std ret sub sbb xchg xchg pop popf pop lret inc add out jbe and stos push jp fneni(8087 mov mov mov loope jle inc (bad) jle in dec sbb das out mov cld adc push push adc sub mov ret dec fdivr lahf add in test pop ja mov adc mov ds lret notl push ds loop cmpsl adc or jle (bad) stc sub sahf test icebp mov gs jno dec (bad) imul mov push cmp jno jg aaa outsl inc aad cli mov mov mov mov push lahf fisubr mov nop jne inc outsb mov add cmc enter (bad) mov xchg enter mov add fmulp stos insb adc sarl jp sub mov push mov xchg aaa and scas nop das or mov negb xchg (bad) xchg iret dec add mov pop inc pop jb pop jecxz sbb jns loopne insb outsl aaa sub into add adc pop leave inc jge pop push mov addr16 jecxz xlat jae adc pusha in fldl insl pop cmc sbb xor mov cmp div jno (bad) push leave jecxz fwait jecxz clc lea gs adc add out push jbe or push mov jns nop or fist jns (bad) mov mov mov clc add dec adc mov mov pop loop sbb sub leave (bad) dec repz nop pop outsl imul (bad) jmp inc push jmp pop hlt mov frstor sub das push dec add pop cmp xchg xor outsl mov cltd sti sarb out cmp cwtl jmp sbb inc jle insb les xor lods add mul and movb add add ret mov pop push hlt lcall loopne es or (bad) rcrb stc rorb fwait jmp je loop xchg ljmp push and push out adc loope rorb (bad) inc push and pop subb push sbb jge mov pushf jo je loop jbe xchg xchg dec jmp sahf insl sbb cwtl dec shlb in jbe mov sahf fwait imul mov adc push add cmp jp aad in add cmp xlat and lret fs ds out sub cmc cmp cmp pop lcall cmp lahf pop push aaa xor iret in mov or sarl imul loop icebp lea inc lcall int3 loopne jo pop jp add add jp cmp mov (bad) push ret fs loopne test sub mov push das cmp lcall movsb rcrb mov or pop push shlb push call xor adc sti ficomp inc push int3 in arpl or dec test js sub adc (bad) cld sbb rcl mov fwait ds (bad) notb cmp repnz sub fcomps fsub aas jmp jle aam hlt pushf fisubr mov mov dec leave or jg and out inc aam xchg sbb ret inc push int3 push (bad) bndldx mov pushf push pop je jo (bad) loop add lea loop adc fsubr out iret sub push and rcr add xchg aas (bad) cltd sbb xchg sub jle pusha jbe scas push xchg clc leave negb inc dec push sarl es mov test xor mov add jg jmp sahf shrl ds jo cmp movsb sub sti sub pop std mov jmp pop sahf scas je negb jne inc sub (bad) mov adc inc inc cld insb divl mov sub xchg in cmp xlat push insl xor stos inc bound cmp and inc stos shl (bad) mov cmp out pop xchg and push xchg or scas dec push sub push jp or dec jg outsb add mov push ret leave cli aas mov or lret addr16 out neg (bad) in xchg push hlt xchg or out adc in cltd out inc add (bad) dec sbb mov inc jno dec (bad) fildll lret movsl or cmp out es fwait push jbe stc aad jp mov fldcw pop sahf jl push (bad) cmp adc pop jnp iret fcoml dec cmp ret jb or mov pop xchg ljmp xor test hlt mov stos inc add jno mov mov out jmp add std in mov imul addr16 mov movb xchg fs pop ljmp daa fs dec push sub xchg das xor push jle jae xor dec jnp in adc adcl ror and cwtl mov mov push add decl nop mov movsl ljmp xor cwtl std xor fimul stc test repz nop jg imul in cmp rol mov xor push lahf sub pop bound dec mov push ret scas push jge mov mov xor lahf cmp push imul mov pop dec xchg incl call mov mov lahf dec (bad) repnz mov std fisubrl (bad) mov xor cld jb or cmpsl add xor adc icebp mov mov xchg adc loop pop cwtl fisubr aaa imull and adc shrb add mov adc add dec mov adc jle aas inc jo adc mov movsl addb mov dec jp in sub fsubrl je incl add add push dec pusha add popa dec sarb test int xlat (bad) push lods fdivr ss xor fnstcw jge nop pop jnp int3 xchg fistp ja leave cmpsl fisubl dec rcl jle or jns sub (bad) ret in imul fidivr xchg (bad) push push jge es sub shlb push mov repz sub sysenter daa testb ret cmpsl pop dec gs out adc int push rcrb ss or mov out and pop inc mov add lahf pop fist scas cmp popa push and ljmp rolb arpl mov inc cmp adc das hlt test jmp test ljmp scas insb mov in ret add mov sub mov push or fisubrl lahf lea mov dec nop jl cmp pop stc mov rcrb shll insl jg pop sub arpl or pop pop call jo push sti sub lret adc test mov push push adc (bad) pop aam push sub and push xchg push sar sbb push inc outsb jbe movhlps push aas mov dec dec jne (bad) lock movsb xchg push adc mov sbb add mov adc pop xchg sbb out (bad) pop jecxz ret add inc lods mov cmp addb jge jnp pushf sub and ret inc sub jne cs mov mov pop jbe add dec mov xchg cmp scas push or push xchg rorl cld dec add fisttp push xchg int movsl ss xor cvttps2pi xchg inc add pop dec sub call or cs mov mov jbe imulb push pop jb dec xchg ret rcll push daa mov sti jnp arpl lret xor iret pushf and dec or or mov sbb rolb bound popa jge (bad) lods push jbe inc jl (bad) (bad) outsl xchg cmpsl xchg ds dec xlat push mov jp imul inc mov lods push mov push stos inc xchg bound pop das xchg xor cmp repz adc push xor mov push cmp ds xor (bad) out pop xor inc sbb in add add jecxz aaa xor lea movaps xchg inc add pop dec sub call ljmp test inc adc pop hlt mov pop mov outsl test jns out fs (bad) insb and aas fcompl ja in test cli stos or xchg outsb pop inc test data16 gs sbb mov add inc mov inc dec movsl add je,pn sbb push cmc adc jmp fnsave push (bad) or jns push sub sti cmp push push sub jmp add insb xchg lret cmp push rcrb scas into jae loopne pushf aam adc push cli ljmp push pop in xor jne mov push fdecstp je xchg (bad) mov outsw sub jecxz jb rcrb movsl dec dec (bad) out jmp cld push mov test fsubrs sub or frstor out sete sbb jnp inc call mov dec lock repnz or jae push sbb lods xor mov adc push loope es xor mul jb stc jae pop adc out movsb adc repz jmp dec hlt mov fnsave sbb mov xor and cmp jno sub jbe sarb std shll jge inc pop jnp cmp xchg fcmovne or mov inc mov dec les out fidiv test lds sbb mov adc inc fisubl sub sub fwait inc in inc lret push push lahf add pop add dec popf int xchg ljmp mov dec push aad inc push mov pop mov push mov jno cmp mov nop mov out sti add pop mov es jae dec bound push ljmp add (bad) lea push xchg std dec jge push fidivrl ret insl in fwait icebp jp repnz cmpsb pop (bad) sbb movsl mov adc jmp push flds fdivs pop enter faddl add faddl add divb outsl stos (bad) pop mov cltd ds frndint xor jge jge jns loop sub js (bad) mov xor sbb ja je lahf adc push test dec je mov ret cmp dec cmova repz lret sahf icebp out arpl sti mov outsb cs mov lret adc mov add out pushf lret adc movsb xchg push adc (bad) (bad) mov stos sub add mov daa mov jns pop inc cmp add lock xchg pop in movl mov (bad) lahf loope aas dec fdivr or lods xor test nop sub popa rcrl pop jl dec push xchg inc (bad) mov or pop (bad) idivl into ja adc add inc mov and aaa pusha jb sub pop call jo mov inc dec add sub or cmpsl inc dec dec inc fs push out jg lret sub push andb xchg inc frstor lock cmpb or lcall loope dec lcall divb ficom mov (bad) add pop iret adc outsb cwtl flds add push add mov in and lods push ret add dec lods mov pop roll sub pop cltd repz cs sub int3 ret int sahf xchg sbb popa xor push lahf sub xchg sbb stc fs push imul jbe dec sub dec (bad) mov push in cmc call jle bound lahf repnz lds lods push push outsl xor sub cmp pop ja pushf cli jl inc inc jae enter pop imul mov and rcrb push push scas jecxz test inc xchg add mov jne add outsb (bad) sub jmp and lea cltd in adc inc add jae xchg repz push mov dec jo adc (bad) incb add push and add lods sub jnp and dec xor fidivrl mov xor jbe loop sub inc adc (bad) mov xor into (bad) pop sub dec cli inc std jb aam push xor inc fiaddl sub jo js popa test ds popa push mov aaa cmp push in cld push mov daa jle cmp lds jp and push fist jg ds lret cmp push bound cli stos add cld jb mov ficoml inc fdivl out (bad) gs adc dec and inc fimull mov adc mov inc (bad) aaa push sub push push mov inc pop push test add jno xchg mov xchg xchg lods pop push sbb sbb fisubr movl dec inc out popa iret jno jne fisttpll or add xchg add xchg lods (bad) sbb ret pop dec and jno sub stos out cmp addl mov clc icebp xor aam and or mov sbb jecxz lret enter icebp add outsb shrb or pop adc scas loop lret ljmp mov jb jo mov sahf xor test les enter jge push inc sub mov pop mov dec movsl test sub lods add adc push inc mov cwtl fimull add sahf jne out add or push or aas paddd adc test ljmp sbb jnp out popa cmpsl jno gs jmp push fisttpl stos repz insb pop call jmp dec sub call or ret test push movl imul test gs (bad) push adc jg add adc push cmpsl mov jno push repnz sub mov rolb xchg jns mov sbb and dec sub fxch sub xlat xchg sarl inc or ret sub cmp jb xor pushf jns stos xor or lods inc insl jb jmp jg adc inc subb loopne sub or inc adc add call add add je (bad) inc addr16 ss in icebp fstpt xchg dec cmp lret cmp cwtl mov mov rcrl out xchg sub xlat pop call pop xchg push stc xchg or pop out or push lods add mulb pop jne and cmp push lea pusha adc or pop fidivrl sbb inc or add lock mov jmp dec hlt mov jmp lret stos cltd cmp in xor js test and das xor mov jecxz adc mov out cmp adcl ds or in pop lret pop pop pushf or jbe neg push aas call add inc cmc fwait js inc rorb loope scas add add data16 mov movsl sub mov out push pop jb sbb lahf rorb jge cmp test rorb sti sub cmpsb sub xchg rorl (bad) sub test aam in cmp adc call fdivr and mov push xchg imul insl push into sbb scas orb loope repz push (bad) mov cli fsubs push push xor mov mov in mov mov mov outsl (bad) enter push imul mov pop scas mov shrl adc les mov mov xchg pusha xchg cli cmpsl dec jmp into dec cmp jns or lock sti mov push inc sbb or bound inc sub cmp jbe in sub in push loop mov divl call cld dec jbe pop xchg and jb iret (bad) or sar adc dec ficoml int3 in sarb imul js pop (bad) xor popf popa dec fsubs cltd mov (bad) in push xchg iret fdiv (bad) lahf pop cmp push and ljmp jae pop jp mov loop or enter cmp (bad) pop jae xor jle sub hlt mov int add dec and jmp xor in mov cmc xlat lods pop (bad) and test add decb jno dec dec inc xor cld addb mov icebp loop js mov jne out out add bound into and add arpl clc mov and inc jo or hlt xor clc adc jbe movsb xchg movsb repz test mov testb out push fisttpll mov mov rcl pusha push jne and dec in rclb adc (bad) add test incb mov inc das or push mov scas mull adc inc leave enter adc xchg push out pop mov sarb inc jle repz leave addr16 dec pop jbe jo inc dec les xchg add dec mov add fidiv mov lahf jg stc dec xchg (bad) hlt fisubr jecxz sbb out aaa (bad) rolb scas xor push jmp and mov ljmp jmp lods (bad) int test mov pushf outsl sti push add add fs push outsb std cmp mov inc jbe jnp inc pop out add std xchg movl out cwtl cmp and dec arpl push ret cmp aas stc fildll inc stc or adc mov imul jle in jo insb jecxz stc mov shr push mov pop add mov loop xchg in pushf cld mov fnsave mov sbb mov pushf lahf mov bound inc dec gs les jnp jns jge rcll lock xchg jo add cmp mov ljmp lahf insl or (bad) fucomip push cs (bad) (bad) ljmp mov lahf loopne shrl stos test add pop push mov push add add add popf (bad) fisubl rcl adc aaa and mov xorb cmp pop in cmp cmpsb imul sbb out push mov mov repz cmpsb adc rorl pop insl (bad) or cli jae mov ret add arpl jo jmp xor (bad) out pop (bad) add xchg inc (bad) insl jge lds cltd fs out rorb imul pusha dec and in mov add jge fisubr adc (bad) pop insl fstpl (bad) sti push scas jp cmp pop adc imulb mov xchg push out cmpsl mov jnp add shr pop nop fs imul mov iret inc pop negb insl dec pushf mov sahf outsl xchg fucomip or jo fiaddl add mov int3 call aad mov lods xchg adc xchg pop or sub test cs ss xchg dec ds dec adc mov push sbb call ljmp lea rcll jns dec dec insl jb,pn popf add lret or xor mov je mov rcrb ss popa cmp add lret lods xor mov jmp pushf xor fidiv data16 insl lea aad insl xor outsb mov or cmpsb sti mov lock imul pop and repnz test cmp movsb imul inc pop push stos inc cwtl or sub int movsb stos jne push es cmp in mov mov jge sldt add incb sub data16 push (bad) pop and dec cli pop xchg rolb je jne rolb les sbb popf fstps sbb sbb lock sti pop cltd xor icebp mov jp jmp jb and push jnp jp fnstcw popa insb xchg loop jno sbbb push push js dec cmp pushf xor fidiv pop sbb xor sbb push rcll bound addr16 mov inc rol sub inc dec insl inc (bad) idivb je sar sbb jbe in jno mov enter xor leave arpl sbb pop das sahf inc (bad) mov push aam or popa sbb shll jae push mov pop mov pop mov dec or aas call jg inc pop jnp ror adc add fcomip or jo es addr16 cld stc xchg lods into or and out int3 push subb xor icebp cmpsb push jp ljmp adc test (bad) mov popa jb add (bad) lret add ret (bad) (bad) dec sub push stos push in mov or inc fdivl mov call ror leave movsb icebp mov mov ss popf ret push shlb xor sub push fsubrs or cmp lds fcomps pop enter fsubrl sbb loop sub inc aad test push mov or inc jbe clc mov add rorl add test aaa (bad) jo es sub dec fldcw (bad) cmp aam jmp add add dec pop std or movsl sub repnz dec mov mov test and xchg push int3 jo test xchg dec iret sub into and stc inc lds mov stos jo out xchg mov stos sub out ret outsb sti adc out dec and jle int loope inc lea notb mov jg sbb and and jge bound dec in rcll out mov (bad) pusha mov aas popf (bad) mov adc pop jnp out mov in enter fdivp out mov cmpsl mov sbb inc jbe (bad) pop ret fld add mov or out aaa pusha jl std inc addr16 cmc lock nop jne jo pop mov cmp xor pop std xchg ljmp push rol dec gs mov mov add iret fildll out pusha pop hlt out loop pop mov movsb adc mov ret sub cwtl push lock cmp fisubr push repnz in mov dec xor inc adc in jmp test add xchg mov cmpsl sti gs cmp test lahf sub mov cwtl sbb ficompl mov xor lods jbe loop sub daa pop jb inc adc (bad) mov mov cld xor (bad) lock pop repz inc push jno movsl jp jle pand or sub and xchg in rorl push and popw out rorb mov sbb push loope xchg push int3 jo cmp xchg dec (bad) lret movsb sbb and popa xor fldl add sub mov cmp shrb addr16 cmp lds and xchg sub dec insl xchg push xchg xchg mov clc popa repnz es hlt mov movsb cltd mov out pop ss xchg push stos cmpb mov test int movsb leave mov mov mov mov push xor add cli scas mov leave repnz dec sarb pop jae jbe cli inc (bad) dec mov sub fcomip bound outsl popf test out pop cmc xor xchg or push mov xchg pushf xor and aam adc fstpt mov xchg xchg mov cmp out push int3 pop or xchg inc mov stos insl mov arpl cli rorl mov jns or call aam popa jno or add push jno jmp out push mov xchg (bad) adc push add cmp mov sti lods cltd cmp xlat inc imul stc lahf fs mov ret pop mov and ja or jl and in enter push aas mov mov into jbe repz push jecxz call in test movsb and cmpsb adc and dec in mov pushf add and and dec sub or jp icebp xchg adc aad scas int3 sub lods sbb addr16 neg lret fildll out or or lcall lock mov xchg je stos lea adc movsl sahf outsl pop orl xor int3 jge mov sbb aad xchg xchg adc fwait icebp mov imul push mov add add mov pop sti push jecxz lahf sub or cmpsb outsl lahf scas ds das push mov fcoms call lcall sbb (bad) paddd mov xchg shl cmp push add roll call adc xor popa in sbb push fcmovnbe test (bad) das rol push aaa hlt test jno rorl push out rcl mov sub lods sbb jg out neg cmc cmp or push insl nop jge dec outsb mov add lock mulb mov jbe fildll lret movsl sahf (bad) lea jnp mov in jmp test add xchg mov repnz mov hlt mov movsb mov mov rclb cmp insb aad mov mov pop repz pop faddl add divb cmp cmpsb adc ds aad scas addl int3 ret adc add popa in push cwtl jmp js add pop dec sub call mov lret mov shl cmpsb jno push fucomi mov inc sbb xor test xchg dec outsb and add cli stos add jae push add fimull inc fsubl lret jo push movsl sahf sbb incl int aaa adc adc cmpsl cs jge jp mov fnstcw cmp add mov (bad) rol lods mov mov add inc mov rclb xchg xchg cltd lret movsb dec push mov es popf stos pop jbe ja hlt pushf mov xchg cmp cmp test jecxz sbbb fs lret jl add pop test push fcmovne pusha outsl cltd mov xchg inc test xor popf push cmp cwtl ja cmpsl ljmp jb sbb xlat (bad) jmp test mov inc insb dec sbb adc ret imul incb pop jmp jne loope iret fidiv push ja neg adc xor je jmp insl jp pop xor testl stc pop out push mov lock js popa mov jecxz lock fisubr cltd mov mov fimull push add jge sbb in xchg daa push lcall decb xor pushf stc ljmp (bad) dec (bad) pushf or js decb add (bad) clc in lret add cld (bad) pusha fldz jb mov mov mov enter in icebp std (bad) divl add out call mov enter and (bad) (bad) into jbe in sub fdivl mov (bad) divb add push in lods cmp dec or jle push push repnz push shll pop xorl xchg std push inc je jno inc dec repnz fwait icebp dec and mov scas popa popa sbb movsb imul out xorl scas aaa dec cmp movsl cmp fsubrl cmp sarl inc jbe bound paddd sub test ljmp mov mov push mov dec fisttpll xor cmp dec jp fwait inc in inc lret mov add aaa add push mov add add jp das cs mov addr16 dec mov and cmp cwtl popf push pop jg cs sbb pop cmpsb cmp push bound sbb in xor (bad) sbb cmpsl or mov adc mov leave nop add das (bad) jb xchg push cmpsb mov (bad) sub arpl insl (bad) repnz out popa cs imul xor inc push push stos inc hlt or (bad) mov cmp out pop cmp lods jbe faddl pop add jo outsl cmpsb jle cmp pop test ljmp sbb jnp mov dec cli push (bad) jo enter imul out lret js push xchg in mov jl xor sbb test and inc or test push fucomi cld mov aaa fiaddl sbb jge daa fistp nop (bad) ret rcrb push or (bad) mov sub jne cli stos or pop inc loopne sbb dec xchg pop data16 gs mov (bad) cmc rcr sub dec inc xchg pusha mov out xchg and pop adc xchg (bad) push and mov bound lods sub fdivr lahf or mov mov sahf add push jecxz out xor out cli push in enter push paddd mov ds aad mov ljmp ret inc out rol aaa pusha in sub push push fcmovnbe movsb loope pop jb mov repz int xchg ljmp mov jbe es sub push and out test int xchg push cltd cmp inc adc pushf jle ja mov jns rcl add add push sub jmp pop stos lea sahf outsl sti (bad) cmc clc movsl and mov cmpsb dec insl push cwtl adc xchg xor pop add mov je test testl mov add and sub jno sbb sbb into fildl sub andl xchg mov add sub mov inc jg std or push push mov mov lods jl push cwtl fbld ds aad jno icebp push sbb dec and scas std inc outsb pop mov xor mov dec jne dec dec push jp push test jno sbb xchg stos in pop out inc pop fidivl out arpl dec jbe loopne ret sbb aas jb mov cmp jl in add add xlat lock jl mov cmp adc xchg push push add cmp imulb sub fistl jecxz and repz ficom dec mov mov push outsl sub test cmp push and push cmp mov lock jle repnz out les xchg xlat mov add add test int cmc iret sub push mov cmp repz xchg ret xchg mov int popf pop aas mov inc pop sub (bad) sub fnop xchg (bad) xchg dec sti inc xor shld fmull orl xchg mov fadds shr and add xor inc jmp mov push arpl mov or (bad) pop mov cmp add ret sub bound out jmp or dec cmc inc push loope repz adc mov push xchg adc sub bswap inc push aaa pushf mov sbb adc clc roll loope cs fistpl xor insl les jle add and sbb jle (bad) mov loopnew rol push fsts xor and xchg mov xlat div aam mov mov sub insb dec lods xchg clc inc (bad) data16 add and sbb je and sub outsb push add jmp cwtl or push sahf outsl xchg jo push test mov mov outsl ljmp cs adc jmp cmp pop shrb jge cmpsl sbb imul dec test adc mov mov add adc jbe std insl sbb mov in add fisttpll cmp dec mov mov push mov imul inc cmp je jle sysenter or push push fwait mov cwtl cmc faddp into addr16 mov mov aas out add adc (bad) pop daa adc das into popf aaa mov out jl insb shrb sbb push fisubrl imul insb and jbe mov inc popf jmp and decl dec mov movsl loop adc dec inc jnp clc inc jb fmuls ret jbe test mov pop cmc imul jle mov hlt insb sub jmp mov xor pusha push inc cld jecxz (bad) dec xorl repnz test out push jbe in insl outsl addr16 mov loopne or add add jae mov cli jg sub sarl aad cld lods fisubl push push clc jp or lahf enter dec sub fidivr rorb sbb lahf sbb inc xchg in push (bad) xor aaa add xor ds and test outsb cmp out adc pushf lret ljmp push clc fdivr es (bad) jb cwtl test mov fidivrl outsl jne stos xchg inc sub fsts insl mov rcl outsb sub sahf xchg cmc xchg push out push and insb addr16 jno mov (bad) int out lea stos mov hlt jecxz js xchg int3 cmp add lahf mov dec je jg cmpsl test mov ss call pop mov pusha inc or pusha xchg inc mov mov cmp jb jno (bad) repnz inc icebp jecxz clc cmp lcall mov jb jb xchg push repz push xchg adc mov inc add dec iret iret dec fdivr push jne xchg test out push jb lret mov add jge int nop lret xchg mov cs and dec jb xchg jge jbe jp add arpl insb sub mov fistl jecxz aaa sub jo aaa cmp jb ret pop xchg push mov mov mov rcll je cmpsb push pop add cmp mov xchg mov lret cs xchg imull sub rorb sbb mov push adc cmp xchg out mov roll add sbb icebp loop push iret subb aas fisttpl mov add jno out inc jl push je mov inc roll xor pop iret lret dec mov push jne pop push sub inc jno hlt stc push lods lcall leave pop outsb orl pop sbb push sbb pop xor or add popa imul dec sbb ljmp xor xor roll out pop aas dec mov cmp sbb jp pusha loop xor aaa cmpsb push push fcompl out and lods mov or adc adc dec call sbb (bad) mov cmc pop cmc iret hlt js jae out cmpsb jle das (bad) cmp rcrb fdivp push push and add fistl movsb xchg sbb dec in push xor xchg jmp mov pop adc stc fisub inc xor mov nop mov std lea decb add lea fiaddl jb aaa outsl jno xorl xchg jb jmp dec movl adc popa ret sbb xlat gs add nop ss or dec pusha mov xor (bad) imul adc lds xchg mov cmp fiadd jb in fstpl jnp xor imul xchg (bad) lahf movsl xor fisttp cld scas jb mov rcll sbbl dec or push sbb xchg mov gs xchg lret xlat mov xor insb dec and push jl insl idivl pop mov bound mov ljmp add jecxz rorb pop cs mov pushf int fmuls xor popa adc mov adc ficom adc inc flds repz aaa pop (bad) sub pop (bad) cmpsl rorl loop bound dec xlat in push ret lds xor sbb frstor pop xor mov push out jbe call nop call pop sub into jge arpl xor sbb pusha xchg (bad) lock sti (bad) mov aas rorl mov pushf xor leave in adc clc loop gs mov sbb enter out hlt jb inc xor cmp rclb fcomip arpl dec dec pushf xor or push sub sbb cli add xchg dec pop mov add (bad) xor or stc xchg dec inc pop addb (bad) stc xchg jl test ljmp xchg iret mov or mov (bad) (bad) push cmc jmp mov add nop cwtl fdivrl jle or sahf xor push lea loop cmp jge lods call test addr16 jle push out div adc bnd push imul jle lds cmpb or lock clc mov icebp mov popa fstps sub inc or or mov ljmp xchg sub mov out pop add pop negb xor outsb mov push xchg push push sbb sub pop jo add popa cli add add sbb xchg ljmp sbb xchg js sahf xchg roll (bad) hlt mov add pop lods jae ja xchg das add jne popa ljmp (bad) or mov leave mov push outsl or jb jno imul mov pop lret jns push stc scas sub push ds xorl adc in icebp dec mov cmp test dec fnstcw push shl movsl mov gs cld add cmp mov jg fsts sbb push shrl xor out aaa cmp sub imul lock cltd (bad) dec cmp mov push jge mov popa adc out and cmp sub lods push ret add fwait loop and addb test or fistpl xchg iret test cmp inc xchg inc cld fucompp add add mov cwtl inc pop jnp dec sbb inc test or mov add pop adcl inc mov mov xlat ret cmp fcomip cmp in adc push test dec mov push lds inc dec in mov xor dec movups ljmp enter push adc cmpsb frstor daa scas inc jge out xchg ret imul (bad) clc fnsave test and pop push (bad) fild lcall xchg push adc jp mov xor int3 in sarb mov mov sub dec outsl arpl xchg adc or cmp adc cmpsb or add cwtl sub or and das sub bound pop dec leave pop outsl sub add add loopne fnstenv cli ljmp cmp (bad) xor aaa stos jb or jno imul dec or jge lea lods vmread push inc sbb inc rcll lock adc cmp adc mov scas sar xor (bad) negb (bad) sub mov out and push ficomp push mov push sbb jecxz xor (bad) mov dec inc lret pop in jb (bad) mov in sbb in js xchg cld xor cmp int3 scas sub pop xlat es pop addr16 push sub mov mov std ret mov jbe mov test jg and dec xchg add stos sbb (bad) lock sarl (bad) jns loop mov insl inc cmp mov mov add inc rcrl lcall and movsb push lea and and ret xor pop lahf push xor add stc (bad) out dec shlb out hlt flds inc xor xor add push pop out inc push jne jecxz jne or jl add push and lahf mov movsl adc push and fs dec pop icebp int3 in into lods and scas mov dec std sub not cmp cmp mov sub and or push sub lret bound scas ds jle je mov push xchg mov call or repz mull popa and fldenv scas mov mov jg,pn lcall push xchg xor fwait ja push mov shrb movntps addr16 pop jle rclb lods ret jg arpl add add add icebp mov (bad) xor bound loop push push aaa adc xchg push arpl inc mov sub mov pushf pushf mov (bad) jae pop (bad) jo mov sbb in lret outsl imul inc mov push push (bad) aaa data16 jl outsb sub mov data16 jnp nop jnp mov sbb fidivl sub inc inc out jmp mov push nop add add nop cwtl pop pop insl jbe scas aas fdivl adc hlt sub mov (bad) cs (bad) lock jne jns add and sahf ja add loop fwait and iret fdivl push dec out repz (bad) cltd arpl xchg sbb xlat xchg clc aam mov sbb xchg pop leave or add push push xchg or xchg ret imul arpl out popa push (bad) jb and daa (bad) pusha add (bad) jbe loopne adc in sar sub adc xor (bad) or out mov cmpsb mov xchg jge pop ljmp (bad) push in outsb sub sbb cmc xchg cmpl mov (bad) imul int push scas popa adc jbe out push adc dec xchg sub test out lret mov mov jle aas xchg mov add mov aad rcr (bad) inc cwtl pushf int jmp in dec mov push push int3 or mov bswap in pop pop mov cmp mov xor inc loop rorl add sar jno sub pop aam (bad) cmc rcrb mulb es jge pop add mov cmp push push dec push sbb lods xor dec mov cmpsb cmpb xchg ret sub lods sbb pop jbe fs xchg push sbb cmp lods lods in (bad) icebp and (bad) in stos xchg pop jmp mov sub stos xor mov out dec xlat shrb jg lods sub or ds cmpsb ds pop fild xor sub subl rorl jle test mov pop sbb dec jae es pop sarb or lock stc mov push inc fs and jbe jb push enter imul push test cmc loopne loope loop,pt iret nop mov daa iret fnsave add push pop daa stc push add enter addr16 mov jge and jb add add loope (bad) jbe aad xchg jnp pop add fldt cmpb hlt daa ljmp sahf sahf cs rclb push ds sub mov mov mov add out mov js adc mov jbe and jl es loope jmp insl sub out test addr16 je movsl or cwtl jo mov and jb in int or aaa mov bound dec gs xor ss pop or jmp es les lahf dec movsb das adc into and ljmp jb lods push inc test pop pop xor in cmp mov jmp jmp jnp fcoms fnstenv negl dec or push push add add sub sahf movsb lcall scas ds aaa pop pop jo push loope in jbe cmc push in mov subb adc mov lea mov enter adc jae popf jno ja,pt sub and lcall mov mov lcall sub in imul xchg add mov pop lret sbb aam push repz xchg lods test out mov out mov jno xchg notb gs fstpl xchg mov add add and jne repnz arpl incl sbb and js xchg sbb mov clc push jecxz mov test pop lcall push fdivr cmp inc mov inc jecxz cmp icebp add add jbe ds cmp add xchg cwtl cmpb sti xchg mov dec rorl je pop fwait cmc stc sbb call inc icebp out dec aaa pusha push in add pop and ret inc lret mov cmp dec inc arpl or iret add mov rclb sahf xchg imul dec adc adc sub pop (bad) popa arpl add push push enter and test add mov popa fadd outsb cwtl js mov fcompl sub mov popf lret clc adc mov outsb sub pop pop xchg cmp inc ret cmp pop mov sbb pop sbb jbe xor das hlt in lock push imulb or and stos add inc jbe enter mov divl (bad) sti ds mov out xchg pop cmc imul or rol mov jns mov sub out addr16 xor mov in mov leave lods test test movsb mov cli mov fidiv dec outsb mov cmp add loopne mov lock mov (bad) cmc sbb jl cmpsb adc hlt or add pop loopne rcrl push push adc jle out add mov mov xchg (bad) hlt mov sub shll imul push sahf scas ds (bad) mov mov push clc mov pop jnp jmp fcomip xchg imul notl ja push fisttpll lds adc sbb add arpl mov loopne or add inc sbb mov cmp push jno out mov sub int lock imul sub jbe push imul mov insb dec pop dec push stos mov inc mov mov int3 push setns ficom aas (bad) nop mov stos jb adc fcomip outsb sti adc sub bswap in push outsw dec in (bad) arpl xor xchg (bad) lret sub bound cmp call lahf xor inc ret mov clc dec push (bad) imul call cli sub lahf xchg mov jno adc jo rcrl jae lret xchg lods (bad) ret inc xorl mov push and in jne jo push repz cmp dec inc ja or iret dec add dec sbbb mov rclb mov stos push xor das dec mov adc inc into test mov ljmp xchg mov stos lea cmpsb adc imul loopne shrl push or jle out add mov mov xchg ljmp cltd cmp das push cmpsb add popa xchg push gs cld jecxz jnp test pop repnz cmp scas idivl ja push (bad) pop jae mov sti imul jae stos lods and jle push hlt sti push fucom pop or insl mov mov mov loopne jns test xchg jecxz or or mov mov pop pop lret sub lcall fisubr outsb scas stos add mov rclb into and xchg cmpsb mov sub fist aas (bad) inc (bad) fildll repz int test int3 in push outsw dec in (bad) mov mov add imul (bad) cmovle aad push addr16 outsl call lahf push (bad) jno add mov mov clc dec push push push jecxz mov mov xor pop loope mov mov xlat inc mov (bad) (bad) cmc add sbb je cmp sbb mov fisubr pop je jo aad cmp in ret repz dec insb adc inc pop cmpsb leave adc je in jno adc inc and push icebp push sub mov nopl and mov fistp mov enter add aam rcll test dec sub sub stos push xchg push rol iret xchg and mov pop les sub rcll add and and xchg icebp gs push mov mov and repnz out xor sub scas xor dec adc adc adc in mov test cmp cmp sbb mov dec or xchg (bad) cmp mov sahf pop std js xchg adc adc xor xlat xor jb sub loop out jl jnp cltd xchg push and mov cld loop or icebp (bad) mov addr16 nop aad jns pusha iret xor push psllq pop popf push push add scas fidivrl in add lock mov fprem cld add outsl jecxz test ja (bad) xor (bad) leave iret faddl notb inc loop fmul jbe push icebp jbe call jg inc enter pop cmp std fwait mov icebp cmp cld cmp ja cmp jae cmp in mov push fldcw sbb xchg cmc imul add jle frstor dec clc mov icebp das imul sub lods stos jne pop inc popa xchg rcrl inc mov hlt out xchg fnop inc addr16 out inc pusha and scas pop jb loop daa jecxz mov push rclb (bad) xor cmp fcmove xchg fwait (bad) rcrl stc test fwait iret icebp cmc inc xchg sbb orb ja add add std rclb xchg int add mov cmp push clc mov cwtl (bad) or insl inc sbb jo les mov loopne stos scas push jmp push das xor xchg jno jnp pop shll fsubs (bad) and (bad) jns test int push decl les les mov sahf jge jo lods test or fisttpll mov push lahf push push push xchg add rcll dec rcll adc imulb arpl cmp push jne jns les stc addr16 sti or pop pusha mov sub sbb aad xchg jnp pop es xchg pop sbb orb es sub add lahf push out push sbb or ret jno dec xor loop rcrb sub add add test por sub imul sbb push clc mov fnop aas jge cmp gs insl mov cwtl enter mov dec lea fimull inc ret imul les arpl pusha mov pop push adc sub push outsl sbb outsb dec es div scas jecxz int dec enter jb add outsl xchg stc mul xchg push sbb inc scas add dec lods and xor nop add sub adc sbb adc sub mov sub clc dec pop jbe jmp sub lret and xchg lahf add pop cmp mov mov lds add push xchg and movsl sbb bnd add add rorl leave int mov or test (bad) mov test sub xchg jne cmp rorl lahf movsl xor adc sbb mov jge pop out cmpsl add out dec dec and inc lret sbb call lret mov sbb jl insb shlb out fwait test add push push cli rcrl mov xor fistpll jne enter cwtl outsl lock cmp push cmpl (bad) lret das adc lods movsl push ret add xchg fidivr or imul outsl arpl insb sub pop and and cmp push mov xor pop jns pop jbe repz cmpb test outsl or lea pop ljmp jae cmp and adc leave rorl jle (bad) and (bad) xchg add add (bad) repnz mov xlat popf xchg xchg inc mov out rclb (bad) daa adc sbb ja test or es push push mov icebp jno mov mov (bad) stos jo loopne pop out mov mov xor enter lret lods xlat and push adc (bad) int lahf xor mov popa frstor sbb adc (bad) rol sbb hlt mov jne push (bad) pusha xlat jns pop ja and cltd push mov push push sbb pop add mov cmpb fisub int dec data16 rorl fdivrs xchg dec xchg xchg sub xlat pushf jno aaa pusha inc loopne std sbb cmpsl dec xchg insb cmp jb iret bound iret mov add mov inc (bad) jno fsubrl xchg adc iret les aaa sub cmpsb add loopne add pop inc mov inc sbb aaa mov jns aas cmpsl sbb lahf inc and enter dec (bad) xor (bad) mov stc aad je rcrl repz push int in pop hlt mov cmpsb imul jecxz adc js fnstcw add and (bad) mov and jecxz outsb mov nop cwtl adc scas cmp and mov xchg (bad) or cmpsl sub mov sbbl in loopne shlb fisttpl or sbb xchg out enter insb daa or xchg int jp int3 or mov incl xchg mov es push fist add adc bound add push cli rcrl loopne pop or jbe sahf push xchg push push mov divb push push xchg fs arpl xchg outsl in sub scas jg sbb mov pop sahf cmpsl sti subb call data16 das push jecxz movsb pop xorl loope aad (bad) jbe xor sub sub or into cmp shrl ja enter int push popl rorl mov es addl sub data16 mov cmc rcl stc movsl insl lods out psrld cmp mov aad jle push je jl push mov mov mov loop and rep and jae inc xor xchg cwtl add pushf pop (bad) cli sub and nop xor outsb inc inc fist add xchg xorl mov jns push adc lea mov in out xchg out jae or into std es js enter xchg (bad) sub jbe hlt int3 nop lahf into push cmp mov cwtl fadds aad (bad) dec push fisub or jp das adc outsl addr16 dec out mov imul seto cmc add jno sbb push out sub scas mov test pop cmc sbb cmpl lock loopne push loopne mov hlt or sahf mov js lret (bad) enter mov sbb and popa sbb adc mov lahf loope bound cltd lret popf or lea mov inc jne dec icebp mov in arpl add add sub push imul cmp orb mov push mov pop roll js dec push mov bnd stos (bad) fnstcw mov cmpb and dec sbb mull jbe sub daa and add xchg sub push and test cmp or sub sbb xor cld jb or add xor int3 or inc rorb xchg aaa popa mov mov cwtl add cli jecxz xchg std and jecxz movsb xchg dec stc and pop mov pop ja dec lret iret dec or iret repnz push jle (bad) inc jo xor push jo bound cmp sahf ret int3 in fildll icebp jbe pop mov dec dec inc in clc jg rol cmp adc add add inc xchg mov add scas mov dec mov push ret in add cld ficompl roll outsb xor inc pop fist lahf ret adc dec pusha loop add adc not stos xlat test pop add mov mov mov xchg push push call cmp (bad) out jno decb dec mov (bad) mov aaa pop sbb xchg push cmpsl repnz leave push and push hlt out xchg pop mov and adc lcall nop scas jp mov add mov arpl incl sbb xchg sbb inc fldl or pusha inc dec rcrl mov pusha or xor sub push sti push and cmp (bad) cmp xchg pop das xchg sub ja xor add add add mov outsl sub xor fisttpll aas daa cmpsb pop dec out mov pushf loopne cmc cwtl arpl sarl lods jge rcrb push out push or repz mov mov push or dec dec cmova repnz nop mov adc jmp (bad) pop dec sbb subl push add and arpl jmp push cwtl adc (bad) mov lcall dec inc lret mov jb negb cmp push sbb in js fwait cld xchg test cmp mov sub mov sub cmp cmp dec in arpl cltd mov dec repnz sarb mov add ss push mov jae bswap aad jno add push sbb sub jl clc sub (bad) push mov xor jo mov xchg inc or ret jo cmpb jb or and pop mov cld mov pop inc pop adc xchg dec adc pop jnp cltd xchg push and push inc jne mov pop mov mov pop fimull xchg dec push xchg or (bad) push mov pop fimull roll dec or mov in jle movsl push aad jbe mov clc idivb push lds jnp xchg sbb jne in jb mov xchg imul std fisubl jge dec pop jnp in lahf jge or imul jae loopne movsb mov cli sbb and mov add lcall add pop push adc mov cmp sti cmp out lahf xchg ja fs gs dec scas aaa enter add int add out adc sete mov mov arpl fnsave lock or aas stos lods (bad) stc gs sub in (bad) mov pop xor inc notl aad jl pop out add (bad) dec push shrb scas popa nop mov sbb iret jp adc cmp push dec mov pop fidivr out scas or imul xor mov cmp mov dec fbstp movsl mov push cmp rcr repz mov js gs movsb iret repz out sub fistl cmp lods jns (bad) ret or ja cld xchg add or sbbb push xchg adc adc cmp ljmp inc mov (bad) and pop pop pop adc push sub sbb pusha fisttpl adc or orl rcrl jae pop cs mov dec jno mov dec fcmovnb cld xor sbb adc and fidivl loopne,pn das push lret inc sub cltd push ret xchg mov aas xchg cmc sbb test cmp addb and mov xchg add cmp enter adc and icebp xchg mov inc mov cmc fwait or inc lret push push popf add pop add js int xchg ljmp cmpsb mov push rol push iret cmpsl fimul dec int lods xor iret lahf (bad) pop add add jg sbb lock stos or jbe push sbb dec xchg cmp sub (bad) loop pop pop sbb dec inc inc int adc mov mov mov enter inc push mov mov push clc mov mov cmpsb pop aam mov das (bad) pusha pusha scas inc jmp push clc fild mov jg in add push cmpsl insb movsb addr16 add mov cwtl arpl aad rcrb xchg sbb mov cmovo push les (bad) mov jmp popa ror fisttpl sbbl fs mov jbe mulb jae mov aas cld mov (bad) or gs cs sub sbb inc imul inc (bad) sub test jno add enter adc frstor insb xor out jns sub jo mov cmp imul insl icebp int3 push jns mov xchg fiaddl mov orl pop push push test mov inc ljmp int xchg mov or sbb andl orb add imull ficompl and pop xor test cmp push repz push cld adcl mov mov nop out add jb addr16 mov addl mov cltd dec dec jb es sarl (bad) (bad) into jbe in sub mov stos (bad) mov sbb int pop lds loop push fs xchg or jp add adc bound jge les push aam movb add add icebp inc ds sahf bound fiaddl mov orl pop push push stos cs cmpsb out andl out xor jo sbb mov or pusha cmpsl insl cmpsb cmp push mov out loope das (bad) pop cmp xchg stos mov pop xor mov (bad) stc xchg xor test xlat insb pop clc sbb mov popa scas push fdiv (bad) lock ljmp push mov push pop inc loopne iret xchg into ja je rcll pop int3 jo jmp dec out sti xor insl mov es jae dec dec xchg stos jo push into sub adc fnstsw xor (bad) lea jnp std outsl jge push repnz mov imul or sub pop neg sbb add in xchg (bad) cmp scas inc xchg aaa dec sub xchg loopne mov jge push cmp stos out insb pop pop outsb je popa lcall and mov mov imulb sbb mov push out pop insl xlat or jge push pop inc (bad) lcall repnz jg sub mov dec jmp pop mov xor and xchg inc out or bound xchg adc mov loop ds outsl in imul adc inc into test mov adc mov ret and int3 mov pop orl mov mov adc cmp gs mov call leave sti push and mov lds cmp pusha dec out int xchg jmp sbb test mov adc outsb fisubr push mov loop add insb mov pop jae cmp sbb mov xor inc fcmovb cmp push es js dec xchg in mov sbb aam jmp rcrl cld push out into out adc aad push rorb test clc or insl nop lods mov sbb or rclb cmc div inc (bad) sub cmc mov cmp push test (bad) push shll pop (bad) cmc rcr arpl call sbb scas mov popa pop fld gs mull outsb mov test popf jmp jb gs jecxz int mov out inc mov xor jbe loop sub cmp paddd xor push mov addb xchg ss jmp sub inc add out and jbe repnz inc sahf push jae int3 fcomps xlat or mov xchg sub xor mov mov out or bound loop jp sbb xchg pop dec sub pop ret stos (bad) into sbb stos leave fnsave mov adc mov incl movsl xor rcl sti adc inc cmp fistp insb mov mov push clc sbb fs test lds dec jecxz icebp pop or clc jecxz call idivl adc (bad) mov and or or paddd sub (bad) popa cmp xchg xchg and imul fldt stos ljmp insb sahf xor je test push sub fdiv lock call ljmp test insl loope adc mov das pushf and sti outsl test inc mov (bad) fs add mov pop leave test mov xchg pcmpgtd gs xor mov outsb mov sti mov cli jbe jno repnz fwait icebp inc push push jno mov mov fs and and adc cld jecxz (bad) insl daa and pop xor adc out add bound cld icebp pop mov loop int js mov ds out aad daa es pop pushf or dec mov jns cmp scas push pop lahf jae ljmp push fwait push shlb pushf add pop add push int xchg ljmp push add clc addr16 dec mov iret scas in ja insb jge push and xor jns pop mov mov jne int3 jae iret loope out aad fist jge daa aam outsl fdivrs (bad) push adcl cld insl jno dec inc xchg add into mov inc sbbb je inc sahf mov fsubs mov mov xchg pop das xchg std pop int movsb test xchg movsb xchg lods pop or cmp sub lods scas shll cmp scas nop sbb jecxz,pt adc mov lret adc adc jns movb mov fldenv rclb dec sub bound iret dec mov mov push mov sub jp sub or sbb and jno pop outsb ljmp add add popa sbb or sub jne cli stos or pop push loopne sbb stc mov xor mov out ja sub dec inc xchg sbb cmp gs out call add and pop inc arpl sbb pop das mov mov inc jmp and xchg xchg lods jle scas or xor dec popl jne scas sarl jge sub jl pop jg insl stos clc mov xchg or adc out fmulp repnz mov inc lret push pop mov ljmpw cmp std push ljmp outsl cmp sbb cmc cmp mov jae or pushf pop xorl cli stos or pop popa loopne sbb dec xchg sub add gs in cmp fucom fdivs cmp push mov scas stos sbb jecxz imul (bad) or mov mov cmpsb pop faddl xor ret mov stc pop hlt in push movsl dec cmp ja test cmp or stos (bad) xor inc aam int xlat mov cmp mov push test leave ficompl xor mov sbb add jmp scas add adc mov push jp aad outsb clc mov sbb cmpsl fimull dec cmc cmp mov nop movsl scas rcrb push sub (bad) mov sbb jns fsqrt jg jae inc dec mov xor cs (bad) gs push push bound jnp add push pop add add add popf ret gs dec repnz mov (bad) adc movsl mov nop mov mov xchg std xor jne ss sub cmpb mov xor mov dec loope sub jp lods jle ret cmp or lret pop les sbb cwtl fsubs andl aam stc mov movsl daa inc xchg jg daa bound decb xchg rorl sbb cmpsl in leave dec (bad) rcll inc repnz outsb jg es (bad) lret cmp push push push lds (bad) jae dec push mov xchg push aam loopne aaa cmpsl (bad) gs in aad mov mov xchg imul xchg push jp jbe mov clc test mov cmpsb pop (bad) add ficom mov and add push lcall jno inc aad cmp fdivrs sbb fstpt in cld icebp pop mov data16 leave pop out bnd inc fbstp (bad) js hlt and mov cmp add rcll ja roll fldenv xor into adc xchg andb addr16 or and scas pop fidiv sub cs out arpl stc mov cmp (bad) hlt out imul adc (bad) adc lods and test cmp ss jmp or sbb add (bad) in xor ficoml dec sbb sbb je pop (bad) xchg test push push xor sub push sti push and cmp cmc cmp mov das xchg push and cmp sbb ljmp or out cmp dec push inc adc es ljmp push lcall and xlat mov in or xchg mov push lea ja test and aas cmp ss mov into fimul adc out cmp outsl test inc xor dec jge dec ror add push mov ror sbb mov and jmp jo push and enter sahf outsl (bad) sahf je pop mov adc pop das loopew je std or iret adc jecxz,pt xchg rcl mov imul and (bad) pop lret add out div mov scas mov clc (bad) in mov test lret mov loopne js mov sbb movsb add mov addr16 scas xchg mov int gs inc and pop dec jae pusha inc repnz repnz test push pop cs mov xor popl add out mov jp jmp inc outsb mov test dec addl sete sub mov std inc lds dec mov jns aaa lods dec xchg ss movsl jge push pop sbb sbb popf icebp mov sbb cmp pushf push mov test xchg pusha popa and movsb test orl pop stos add fdivr cmp xchg pop das inc fcoml ret fsubs mov inc (bad) aam out sbb in enter and xor jbe pop mov call jbe jbe mov test in add lock mov add movsb ljmp and cs xchg pushf xor sbb out pop cmp pop lret sub xor sti lcall mov (bad) mov arpl mov jne cli stos or dec pop data16 data16 fldt xor pop sbb and dec and mov imul cmpsl mov popf ret pop mov rcrl adc fs fs data16 arpl adc sub mov int lods lds sahf jns out sub dec push inc adc cmp ds aad xor pop pop pushf or insl (bad) rol sub cmp jnp xor cmp lock cmp cmp or out mov icebp and sahf jmp cmp jecxz pop dec cwtl sbb lahf fdivl insb inc rcll jb jo (bad) xchg loop ja arpl into and inc clc mov and cs (bad) mov sbb xchg add stc inc sub out leave xchg xor jns in imul and lods das mov insb (bad) pop int3 lret rcll (bad) jae aam inc cwtl sub xchg pusha inc or push xor out out xor out sbb adc out int pop push mov jo adc bound scas xor jl cld js sub (bad) mov fistp mov and sub aaa je mov mov push jns in mov jb fstl xor in sbbl test scas int3 sub lods repz repnz out negb enter out xchg in sub (bad) sub and or scas roll lea not sbb and ret lret movsl outsb push or jl push mov pop loope (bad) mov ret add xchg mov imul jge rcr mulb addb int or data16 dec fs push dec push add pop push mov jo call repnz enter pop adcl subl jns loop fdivrs mov loopne or xor (bad) into rol cmp out lea call leave mov (bad) mov (bad) push (bad) push sbb orb and xchg data16 sahf mov push jnp lret and int3 xchg xchg leave sub mov (bad) shr pop mov lods jmp das jecxz add shll or xorl jge scas loope jmp sub add add (bad) shll sub hlt int3 inc or pusha and test and (bad) (bad) lahf bound and stos mov pop roll jbe jb hlt sbb or in out add mov jb jo inc popa push mov subl mov insl call xor in mov imul sbb xchg out dec pop data16 std or or lods xchg mov mov dec gs adc or rcrb ss push jae or pushf xor jne cli stos or pop jge mov mov sbb sbb pop cmp sbb and push and mov jge push aam sub sbb add mov out fs pop fxch gs repz push bound push sbb or jno jo test int3 out pop mov adc mov fdiv add cmp scas push add mov dec adc add sarb idivb xor sub cmp xchg adc out (bad) xchg inc add pop dec sub call or std push loopne aad outsb ret or dec (bad) push je icebp mov mov sbb push or loopne inc jnp bswap add pop ret or mov push lret movsl ljmp sub lret repz and sbb pushl dec jo push aas popa imul cmp hlt aaa sub mov cmp xlat inc imul add icebp jns shll (bad) mov xchg jge or jns lcall scas cmp ss mov and pop test xor dec mov enter lret mov repz movsl push mov push push cli inc mov inc xchg call or mov loope adc mov int push iret push cmovne imul fdivrs xchg mov inc adc cs ror push testb xor stos pop mov adc data16 pop lock popa js cmc cmpl cli dec popa inc xor dec ds cmp jmp push sbb xchg dec and push xor adc lret pop cmpsb mov aas inc pusha iret fcoml ss mov jmp jmp fmull mov sub add in cmp add popa mov leave popa mov clc push inc cld inc dec (bad) push push push mov inc test daa inc jle xchg test adc dec adc push cmp dec xchg sub push iret gs xchg jbe mov cmp aaa push sbb cmpsl add shlb pop scas fldt imul (bad) aaa cs xchg push and mov pop adc std mov jno fwait mov cld out or icebp mov sbb mov shrl stc adc jne pop adcb (bad) push mov rcll mov incl xor mov cmp mov stos lea jecxz shll cmc addr16 lahf scas jge cmp pop stc pop push xlat push pop sub cmpsb mov add add jle cmc mov icebp addr16 (bad) cli push lret outsb movsb scas addr16 fstps jp negl pop mov ljmp push ret sub arpl inc test xor cmpsb cmpsb sbb loopne int3 cmpb mov pop pushf jmp ds xchg cmp add sti add fisttpl outsb icebp xchg add mov and arpl mov rorl stc adc jne pop adcb icebp mov cltd scas bound fildl adc or push inc fidiv mov insl repz sbb (bad) push imul fs mov enter sub pop cmp dec mov inc outsb dec aaa adc in sbb dec mov popl sbb and xchg out dec add push cmpsl add or adc and cmpsb mov mov or imul inc sbb and shl jg cs sbb push mov into and ljmp or lods pop sub add inc sahf outsl pop outsb mov enter adc rcrl (bad) repnz ds dec std adc leave (bad) rcrl pop (bad) hlt and mov (bad) xor xchg pop iret faddl (bad) push mov mov mov mov cmpsl hlt push adcl xor scas cmp sub pop mov dec or aas std xchg push lods ljmp jns fstps cmp mov lods repz add jmp add aaa cmp push in rorl push jp aad add add mov pop mov andb sbb and jns sub popa mov or ja or cmpsl push jo sti sub mov cmpsb sahf jecxz xor push jle imul aad stc test std jnp sub jmp cmp cmpsl xchg pop rcll add nop mov mov jo pop sub cmp cmpl out mov and sub inc and bound bound ja cld sub out push ja pop sub or add dec scas jge push mov push loope xor push push imul pop cs sub sbb jno cli shll inc fwait jecxz adc bnd adc loop neg xchg hlt out out outsl mov add movsb aaa int mov out bound dec test add jae push and inc mov sbb in scas inc jp adc mov jl outsl test repz xchg imul insl nop ret in clc jg or mov push sub cmp cli in sbb and shl in les leave stos lea add xchg nop adc nop pop adc adc test repnz pop sub mov pop (bad) incl ds inc fdivr xchg out xchg adc cmp (bad) push push cmp lahf sbb xchg xor xor dec jb je mov js xchg sbb addr16 pop test adc stc scas hlt leave jnp xor xchg movsl or dec je sub xchg pop fucomip lea fild add add nop sti sahf insb jp dec hlt popf jg in jmp mov (bad) push mov scas call mov mov fcoms lahf scas test cmpl and test bnd xlat test insb or aaa dec push or and cltd stos inc rolb sti loopne and aad (bad) lock jne imul push out mov sahf mov (bad) and shlb xchg lret jno mov cmp or xchg int add (bad) loop adc out xor pop push dec inc loop jnp dec xchg loop or push push mov call and adc pop and and imul and repnz jns (bad) in jp inc mov fwait loopne in inc cmp add add add rcrb push jge cmpsl sbb adc jmp stos pushf inc sub cmpsb ret mov pop mov test mov mov xor dec lea pop out sub inc or scas push hlt jge cli ljmp outsl in jle mov (bad) lock pop bound popa jb cs or pop dec repz scas ret mov aas sbbb test in lret ds stc adc insb dec mov clc push sub xchg jo cmpsb or dec je sub xlat mov test shr cmp sub lea pop xor push cmp pop cs pop xchg cmpsb xchg dec cwtl es adc int insb jmp jo mov jmp cmc (bad) (bad) pusha mov cli adc mov mov push in jbe das lret stos xchg sub out cmp bound movsl int mov mov mov dec out jg cmp bound dec mov movsb or adc out add xchg shlb fwait xchg nop cmp (bad) jp inc jne hlt movsb mov inc fwait mov adc test jb,pn push or out xor cwtl push push popa or mov push adc fwait in mov nop cmpsl mov mov divb mov test lods ss popa cli push mov pop xor mov in mov in dec jp popa int clc pusha aaa lea sub std fwait jmp cltd cmp pcmpeqd jmp por sbb inc cwtl imul mov or mov mov fstpl int3 push sbbl push add mov adc xchg xlat xor inc jne mov push repnz inc repnz cs adc jge dec (bad) mov sub mov sub inc mov lock xchg fs adc mov scas rcl push stc test add xchg popa sub stc or mov in stc fidivr ja adc dec (bad) hlt addr16 jge pmuludq jb into add dec sahf outsl push add and (bad) ljmp popf (bad) repnz and mov dec aam xor adc fistpl popa dec add dec xchg and sub mov dec nop adc xchg movsb dec mov xorb push xchg mov fstpt mov or push add insl inc cwtl xor je pop pop stos in sbb std fwait and pop jle das aam xchg sbb repnz out inc movsl test fwait jecxz shrb lock adc mov stc sub insb dec popl lcall divb aaa popa pop jb cmp pop add arpl stos lea jo and popa jns adc jp lods out push sub add nop and popa mov xor int repnz xchg cltd sbb dec push mov pop jl sub bound cwtl adc push or xor lret mov cmc or mov fwait (bad) imul sbb imul test push fldenv cmc lds and xor mov add aaa rorl inc xchg push (bad) mulb js xchg mov int3 cld cmpsl mov sub stc inc test cs stos fsubrs cld adc lock adc gs mov push mov push sub inc inc add mov insl imul lret xchg xor stc jge ljmp xchg adc xchg (bad) popa dec rol sahf adc mov sbb rclb scas ds dec xor pop mov pop add push jnp loop addr16 mov inc sub (bad) mov cmp lods and push clc enter jg or ret loop icebp xchg les data16 pop (bad) icebp mov fs mov jmp jne repz xor stos jae mov mov xlat and add lea mov pop leave cmpsb movsl es sub rclb sar inc xor mov std dec sbb add inc adc decl fs sti mov insl je pop xor fistpl push xlat (bad) push mov ds cmp pop (bad) dec shll call test fsubs adc sub inc stos mov add or fst jg ds jne lcall int rcr aam rcll and mov cli andl cmp jg insl pop jle jmp inc ja adc xchg gs mov cmp push sub jb leave aam fdivrs (bad) mov or push push push pop icebp push xchg dec outsb shrb or add add iret and loope dec aad add add xlat decb ret roll mov imul cmp arpl faddl jne mov dec push test in in jae mov les (bad) ss cli ret mov cmp test jae pop or push pop mov xchg jg,pn mov imul inc jno mov subl insl jae pop enter pushf lcall sbb nop cmc imul or pop pop test or push std or daa stos fdiv mov xor gs aam jle xchg fmulp icebp out mov sbbl push push jb dec lcall movsb rcrb mov mov mov std fcomi js ficomp add pop push (bad) adc add add add sahf outsl xchg insb insl mov xor mov popa lock insb test mov out fdivrs jb jl scas sub cwtl xchg mov push or lahf scas inc mov sub inc mov push cld adc push lret mov mov leave mov mov out popa gs sub imul mov (bad) aad mov aaa int3 in mov test fisttpl or cmp inc dec insl icebp mov xor mov and fdiv sbb cmp divb cmpb out adc sete scas adc inc (bad) xor jp inc out jnp pop aaa in lods decl js jge mov adc jp mov push push (bad) stc int aad cmp sbb adc add or fdiv push (bad) lds adc xor and push inc (bad) mov cmp dec push (bad) or ljmp in lcall (bad) (bad) hlt add call in jo ljmp insl test std insl sub xchg je lcall mov (bad) adc fs jecxz das add (bad) (bad) push test sbb test mov adc push (bad) fsts (bad) daa adc push call xor cmp sbb leave leave out les fisubrl dec mov and add leave fldt mov adc (bad) int pop xor ljmp js add ret repz mov shrl in subl xchg jns cli xor add add mov ret in rol inc lcall xchg hlt hlt inc mov enter aad pop in addr16 leave pop mov dec fnstcw (bad) cmp sub imul mov in (bad) gs cmc push sub dec sarl incb inc xchg mov cmpsl lds xor jecxz xchg iret dec gs aam push mov divb mov test out imul sbb dec xor pop pop sbb mov ljmp adc push jb sbb cwtl add jl mov xor popa push xlat test cmpsb dec sbb cmp adc les cmp mov xor popf (bad) in rclb push push hlt xchg dec push and mov rcr je mov jmp xor add int3 push iret rolb mov jno mov mov ds inc imul call xorl cltd bound movsl into (bad) dec push mov dec lea add inc push pushf xor push inc pop add dec movsl sub lock ss and push push and lock pop or lcall jne inc pop add jmp and lret jno nop add stc loope mov sbb xchg inc sbb aad (bad) sti dec fbld mov mov jg rcr in jae sbb mov sub pop xor add pop cmp jmp popf test jbe jbe hlt fldt xchg nop cwtl dec xor mov rclb pop jae mov repnz mov add call xor mov pop lahf icebp mov xchg lods mov in aas cmp scas cmp jo jno cmpsl add movsb dec call jecxz adc ss lret sub jp and insb xchg fldcw insl jl in xchg xchg xchg inc ljmp sbb int3 adc in jmp and lret jns nop add stc inc fdivrs sbb xchg ljmp dec fbld sarl add mov in jae sbb push popf sub and and pop cmp jmp cmp xchg hlt fldt xchg nop cwtl xor adc or call leave pop out or sarl stc jg adc mov sub add stos dec aaa (bad) sbb xor push shlb into dec into and cmp jns lret or iret dec and ret mov imul addr16 out neg lret mov outsb imul xor push sbb mov pop cmpsl inc je mov ficomp xchg call push jb pop imul jmp test sarl push and adc es mov cld xor or test adc mov (bad) cmpsl push pop xchg iret fsubl push (bad) mov out dec push ret mov xchg jge sub test in push int3 push or cmpsl mov pusha pop sub sbb cli subb xor xchg xlat pop mov mov lcall in (bad) dec sar mov in mov pusha xchg push inc fwait and inc rorl aam add add out jne xchg mov jmp push push hlt lock sbb sbb fdivl xchg fdivs jo push mov hlt adc movsl lods add add pop xor mov nop clc aad cmp js stc popa imul sub int3 lret rcll lcall sub xchg cmp inc cmc pop cmp scas lods add jbe call add xchg cwtl adcb (bad) xchg mov dec shrl mov jbe mov ja jl inc icebp lret pusha dec in add pop and dec mov cmp dec inc paddb sub popa push sbbb mov rcrb loop mov and nop push push (bad) or sub mov add add pop mov jge jne add mov inc jo (bad) mov adc nop ret outsb mov fidivrl fcompl or testb clc fwait arpl scas mov std loope jae pop mov xchg ret aas mov mov cmp stos pop pop and xchg xor push mov lock mov mov pusha stos inc jbe dec xchg jle mov sub sub mov xchg pop cmc imul or cltd (bad) jns mov mov mov sbb insb (bad) repz mov movsb lahf dec es daa pop mov dec outsb mov cmp and (bad) or pushf lock jns mov decl pop imul sahf outsl pushf out test roll push and push add mov cld je dec dec inc test adc mov push sbb adc mov sti dec push ret repnz jge sub test mov xor (bad) pop imul pop pop mov sub push cmp call (bad) je xor pusha in lahf sbb movsl int stc push (bad) or clc mov mov iret lds scas pushf xor and jo dec gs xchg aaa xchg jmp sbb (bad) mov jmp push push hlt fwait cli sub movsb sbb mov fnop sbb fnsave xchg fsubrs xchg mov loopne lret movsl dec arpl add pop xor fcomps shrl jae cmp cmp pushf sbb cmp add pop (bad) mov cmpsb js mov mov pop sahf idivb scas xchg das lods jne add adc mov pop insl and jge repnz push mov lds (bad) dec jmp push leave lahf stos or fwait in scas test cli inc stos cwtl jo sub test enter sub shrl (bad) lret into dec push adc jns inc add cmpsl lds push sbb dec cmc jg pop outsb loopne and (bad) and pusha xchg jb mov movsl mov ret pushf add xor add jo fcomp je pop lret adc dec sahf push aas push lock jb fstpl xchg dec and ss and push sbb mov xchg enter imul nop (bad) hlt int3 inc sub fistl sarl and jo aaa push add add add dec stos mov pusha adc jge add jnp out jg lcall mov lods notl adc or jae adc fisttpll negl (bad) sbb pop movsl into pop jp push ror lds cmp mov cmp out ljmp mov pop jle cmp adc lcall xor push push push hlt insb cld xchg ret cltd mov adc inc dec insb int3 sbb xchg mov jns mov in cmp and movsl push push push mov jb jg loop jmp adc je mov loope mov call iret lds xchg xor arpl adc sub lock nop pushf mov sbb xchg xchg lods inc pop scas or sbb add or paddd sbb (bad) pop add pop cmp dec cli push test xor cwtl cmp nop stc xchg and lret imul dec and inc mov inc xor aas sub popa xor (bad) movsb test sarb daa fist insl nop lods cltd rcrb ds nop (bad) mov and xchg out adc add loopne sbb and xor fmul cltd outsb sti xor les notb sub cs jbe ret std xchg mov mov ss fninit push adc (bad) jp and fcmovnbe jg mov inc std sbb shll jp das je or or jo and push lds iret add call add add xorl sbb jne fildll aam xor sti shrb popa pop or xor jbe scas lcall fcmovnbe lret sub icebp mov fucomp xchg mov es hlt sub mov ds das cmp stos ljmp mov sub add and inc jb (bad) push jnp ljmp push lcall xchg (bad) jle jge jno mov mov push fstps push jne (bad) mov inc jo push inc inc jecxz pop rclb loope mov in and sbb xchg inc cmpsb xor out dec arpl jbe aad orl xchg or je dec std ja sub sbb xor inc add add add jns mov cmp stos push movhps adc sbb cmp inc push fldt pop xorl hlt sub xchg call sbb aaa cmp imul lock sub jmp fstpl mov lock movsl loop sbb lock (bad) jg push push decb stc aad cmpsb enter ds arpl cmp movsb lds call mov lret int3 fimul add int push jmp addl and out xor or test rclb stos loopne pushf add xorl push adc mov aad mov cltd pusha outsl insl test addr16 cmc iret and test dec cmp pop dec inc pop xor inc push and add jmp lret sub mov xor scas (bad) xchg jbe je cmp hlt out enter ljmp (bad) pop inc pop or outsb inc mov jmp (bad) pop (bad) lret xor push dec push mov pop pushf push add clc aad cld popf dec sbb cmp push in pop (bad) fbld jl cwtl outsl adc lcall fdivl mov xor test mov adcl cwtl cld icebp pop mov and (bad) stc out xchg js mov add push pop sub mul adc add mov stos mov mov push test arpl mov data16 ds push (bad) jno sub lods cmp test push fwait sub fist inc loop loope push outsl xor sbb lock sbb lret je inc sbb (bad) cld mov jns mov add fdiv outsl addr16 or xchg dec mov jae jmp push adc cmc mov in cmp cwtl mov mov xchg and mov mov test lahf and or jbe std gs int3 add push enter sub lret ss cwtl rcrl cmpsl ss in pop roll lods pop push in shll and sbb cmc jecxz je test (bad) cmp jp popw (bad) push pushf xor ja xlat adc gs adc xlat mov loope jge es inc test aad out xchg dec outsb mov adc jns add sub daa and jne enter addr16 add add add fidivrl push push aad outsl ljmp lods mov pop loopne mov cmp inc or mov fsubl das cmp sub pop lcall push jns jbe,pt hlt xchg insl pushf xchg nop cwtl mov scas dec jns lods (bad) mov jno in sub xor jg ds mov xchg mov int lea (bad) push (bad) clc mov and fistpl pop and cmp dec gs out inc xchg pushl icebp out clc mov mov jmp push push hlt or inc jo (bad) rorb movsb sbb sbb adc std sbb lahf jmp bound lret movsl rcrl mov xor cmovs shrl push js clc popa imul add ss lret rcll cwtl mov cmp rclb xchg inc sub into cld add xor adc lret or pushf in xchg lea xchg mov dec rcl jbe pop cmp add ljmp dec aaa pusha xchg sub jb push push cmpsb in rorl jmp andb xchg sarl xchg fidivrl clc push inc lock testb add rcll mov push push push jb mov push test sbb adc mov subl popf and cld insb jg loop adc push lcall repnz ds rcr stc and int3 or repz mov das clc repnz push movsl adc leave mulb adc fdivs cmp iret add sub out data16 leavew mov and cmp xchg fidivr mov ss popf mov adc cmpsl xchg cmp roll je or shrl dec addl cld xlat pushf and xchg mov outsl loopne ret ja leave lods sub divb jecxz jl push push pop fidiv lods nop pushf mov inc bound jne (bad) lret mov add lea cltd shr xchg (bad) fistp cmc lock out mov cmpsb mov mull xor sub (bad) and clc in les push mov (bad) jl pop and adc mov add lods jnp (bad) push cwtl out insb outsl xor fldl xor adc loopne pusha push mov jbe dec out jg cmp lcall ret inc or popf lds and xchg lods icebp ja es push shlb push nop js jno int push arpl add out data16 fwait divl pop aas mov dec adcw insb rol scas push mov sbb cmp shrb xchg push pop pusha sbb cmp inc popf negb lea jg adc ljmp (bad) fildll and pop clc stc pop arpl int3 mov test add dec sub push and cwtl cmp pcmpeqd jmp adc cmp and pop pop ret dec (bad) mov push xor icebp nop xchg lret in mov sbb cmpsb in adc add mov sub (bad) dec or (bad) (bad) call add imul repnz xor sub mov js or xchg lock test and mov insb add ret imul testb inc pop hlt jae xor gs stos not pop xor scas leave addr16 lock fimul decb andb in sub (bad) loope inc adc loope inc in mov dec cmc and in lahf mov pop sbb rcll popa dec xor lock dec lds dec mov and cs ja inc cmp test pop and out leave hlt fnop mov pop aas jge cmp push mov call jns pop mov push lahf movsl dec mov into lret repnz jecxz jo adc cli dec adc sbbb pop xchg sbb jb fs loopne ss pop jae aaa cmp fcomip out imulb jne (bad) hlt insb cld out fwait mov jae aas fstpl pushf lret sub mov add add rolb movsl xor mov adc pusha and inc loope (bad) or ret mov ja mov and shll cmp lret sti lahf add loop cmp and sbb xchg enter push xor jge sub gs xchg and jle insl lods xlat xchg test mov imul arpl sbb inc lret pushfw popa int cld dec jns scas mov mov xchg mov add (bad) nop jnp push lods test imul add (bad) push lahf xchg out push (bad) jbe test outsl dec pushf shll dec je and fistp stos pop shll add in mov ja adc mov cs jg push loope inc ret push ret add jb xchg js pop sbb add rcrb sub fcmovb cltd cmp cmpsb das enter pop inc mov xlat loopne aad mov jno (bad) jb jecxz inc js insb adc inc imull dec repnz jae les lret cmp lods hlt cli jl ljmp cmp inc jle mov lcall lods mov mov sti sub mov xor add pop adc sti pop out rorb popf shrb add out insl mov loopne movsb mov (bad) inc std loopne add add lret ljmp adc stos lea pusha add mov push cwtl jg or jmp test loop nop cld subb cmp sbb pop (bad) mov xor xchg fdivrs lahf scas xchg and mov push mov or xor cwtl or fistpl mov push inc inc jbe pop (bad) mov les jg mov lods fwait ja jbe or adc (bad) sbb (bad) cmp es pop std or ret sbb inc push fs aam fstps lods test mov cmp fisubr jp fucomip pop icebp (bad) jns outsb enter sbb pop je dec arpl sub iret sbb out iret mov jae fbld insl fs fldenv add add popf push es sub add in into in stc popa pop call in (bad) jg aad daa or mov mov loope xor mov imulb inc or mov add add pop (bad) xor mov add inc push adc mov jp xlat dec (bad) sub insl push jnp cmp mov xor add jbe dec aas inc into dec cmp adc xchg adc stos dec gs pop outsb enter sub or jno int push mov pushf xor mov pop sbb sbb leave inc add into outsb fdivr shr mov push (bad) push pop lea nop add stos lahf outsl (bad) (bad) jo insb inc and fwait mov in outsl xchg add cmpb pusha cmp dec or push adc in pop xor and dec pop ret mov sar push xor mov ss neg mov mov fnsave adc imul in mov clc enter mov fildll lea (bad) push xchg enter ret xor jle add jo sub ljmp add imul lret ja shlb mov sbb int xchg nop loopne (bad) or icebp add xor mov je mov mov add xchg clc test fist mov popf (bad) pusha xlat das push and cmpsb ret mov add jmp loope clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg ficom push faddl jo fidivl push arpl jmp test mov push push scas out sub (bad) sti dec sbb sbb add or icebp sub popf pop jne pusha push aas push mov jno ret mov lods inc stos mov inc ja hlt sbb test jg adc xor xor add add dec scas pop mov mov xchg addb dec mov mov repnz movsl jb aam pop mov (bad) dec sarl xchg jns or (bad) mov xchg push or aas (bad) lcall pop loop adc (bad) mov outsb clc stos scas or xor pop out fldt sbb jbe lret inc push bound fldcw add jl jne cmpsb int xor push push cs sub sti dec sbb std js sahf xchg push add cmp in sub mov adc or and cmpsb lahf mov cmp add loopne sbb sbb jg adc and cmp dec mov push cltd mov mov lahf sbbb dec mov add jae mov repnz mov cmp push mov (bad) add push xor (bad) dec arpl mov pop xor aaa jp inc loop pop inc jo lock stos stc or daa (bad) es xchg xchg and sub fmuls repz repnz inc popf xor dec pusha adc int dec or fcoms sbb outsb pop int loop sub gs mov mov jo ss cmpsb fidivr push inc add jp in in jae (bad) (bad) push xlat ja inc and cmp daa cmpsb mov popf cmp gs out (bad) add pop outsl and adc or cmp pop andb mov mov pop add btc js cmp mull jae stos popl sarl mov jns or fcmovb hlt add push push fwait mov aas jecxz dec xor aaa add loop adc out jecxz subl ljmp fsubl mov lods pop fist clc push gs push pop pop cwtl in jns add insl test ret (bad) lret les inc outsl mov jbe xchg cwtl cmp xchg push jae xlat dec jp dec fs dec pop test and dec push and shll mov cmpb clc in (bad) adc insb outsl or adc cmp cmp dec lods pop andl les repnz cli in and mov xchg jmp kmovb mov dec sbbl mov cmc jbe xor out mov jle sbb push jp loop data16 add pop push test daa ror jns xchg pop (bad) sub fwait xor pop pushf into push and adc mov pop push pop ret ss loopne sub ja jae mov mov or inc cwtl outsb in loopne bound push in mov mov addl sbb sbb mov jmp xchg pop popf call push add pop popa dec int3 or or cmp fsubr pop mov les insl sub mov mov lahf jmp popf inc aam ljmp into sbb jg stos aad lods adc inc fwait xchg jne,pt (bad) inc push mov push xor cli (bad) mov icebp fisttp fdecstp sub inc faddl mov add add mov pop xchg push and push adc in push pop cmp test ret xor bound mov sti sub pop mov cmp jecxz sub in jae fistl push and add add popa stos mul xor std (bad) pop xchg test lods test outsl add adc cmp and dec sahf pop mov sbb fwait sub jae dec sub movsb je mov lahf push gs repnz movsl arpl mov movsl push std lds dec gs and (bad) lcall or popa adc cli mov outsb mov pop mov inc ljmp fdivl clc and mov dec xchg outsl jo push jb aad push pop adc add add xlat lret loop jg jg mov jbe mov std pop pop repz pop add cmp imull popf (bad) (bad) (bad) inc push and xor sub cmp cmp in (bad) jbe mov outsl movq pop int3 cmp dec leave pop mov mov mov xchg sbbb outsl mov mov repnz dec mov cmp or (bad) xchg dec dec push addr16 mov lcall xor push adc cld mov outsb int xchg or lock aas out inc dec faddl lds sub xchg push jb dec push add pop adc pusha inc ror (bad) xor ss pop jnp sti cmp inc std sbb out sbb sub jns in sub clc fistl pusha xlat das push and xor xor sbb clc out add push outsl addr16 adc cmp and dec movsl pop mov pop mov xchg orb jg jmp lahf ja das repnz movsl gs lods icebp ja mov cmp or (bad) repz xchg dec jg fstpl cmp adc std mov outsb jecxz mov push pop mov inc test cmp fiadd fsubrl repz mov push lods pop fist lret push ss push xor in pop pop push nop ja sbb aad imul pop jnp sti cmp es js fstl dec out sub cld (bad) (bad) adc inc push and or mov cmp add stos fndisi(8087 cmp mov jbe mov xchg adc or adc pop dec mov push fmull add sub pop pop sub call lahf ja inc repnz inc mov cmp push inc ret arpl fwait xchg dec jne rcrl jp loop adc iret mov outsb iret stos lea js imul out inc push fsubrl std and jne xchg push popa jo push pop pop (bad) in jnp adc inc inc or xor ja xchg inc jnp sti dec sbb std and fcoms dec jmp pop in int aam or add jae arpl imul mov cmp or cli (bad) adc add adc cmp dec mov push lret mov mov add dec mov mov repnz movsl js lods icebp js mov mov xlat jns or (bad) popf arpl (bad) dec jne ficompl cmp loop adc loopne mov or add divb out inc push fsubrl lock mov push xchg push outsl jo push sbb in pop pop aaa nop insl jmp test (bad) lret in sbb push cs push dec jnp sti sbb sbb repnz push add outsl dec out sub popf (bad) cmpsl adc push push ret mov mov stos in and jns in or push inc jg mov and mov xor mov pop or (bad) mov arpl inc cmp xorl mov xchg div imul test cwtl out ds int fldt test mov fwait xchg dec jno rcrl jp loop adc cld mov outsb shrl mov inc test das out inc inc fdivl stc and mov pop scas push xchg push outsl jo push pop pop ljmp jmp test iret lret sti xor push mov pop jnp sti cmp jp sub ljmp dec in dec in fbstp (bad) inc xlat pop push and cmpsb ret mov cmp cmp in (bad) dec xchg fistpl test addr16 adc int3 push or sbb pop fwait mov mov mov xchg pop pop sub bnd mov lahf outsb gs shlb inc mov mov sahf jns or lds xlat add push and out push xor aaa aaa jp loop adc fbstp stc or imul mov aas stc repnz ds mov mov adc sti sahf dec sub notb int3 mov jns mov sbb mov daa idiv dec ja pop data16 push lock cltd or dec add add lods ret mov cmp push clc repnz push xchg pushf jae lock or xor data16 push ds xor out int jle ds out lea sbb jmp pop and gs repnz icebp dec mov cmp or (bad) pushf arpl fwait (bad) dec arpl out lcall and jge daa and stc mov outsb scas stos fmull push aaa mov inc xor out inc pop fdivl out and data16 xchg push gs push add in push pop seto adc jecxz arpl bound in pop jnp sti sub pop lock dec add and in cltd jae (bad) adc inc push and rcrl mov fidivrl sub xchg hlt sbb test outsl cmp adc sub imul mov xor ds addb dec mov scas lahf jae sub cld movsl jns xor mov cmp push ret (bad) mov dec dec push sub cmc lcall and popa adc iret mov outsb fsubrl add sub mov pushf pushf and xor xchg push jp dec push push pop hlt in push pop cmp test lret clc xor jge addl cmp push std pop pop clc xchg push add outsb dec icebp sub repz (bad) pusha xlat das push and pusha and sub cmp cmp in pop xchg test mov jg adc or adc pop mov fcoml xor xchg orb sbb enter xor lds dec mov cmp or (bad) xchg arpl fwait xchg dec jg aad inc xor aaa aaa jp loop adc std mov outsb scas stos fmull push aaa mov inc xchg xor popf inc pop faddl fisub mov js lods pop mov jo push add in push pop or push inc add dec mov push push (bad) mov push sbb adc jmp push add outsb dec lock out fildl (bad) cmp pop push and aaa rcrl scas mov cmp cmp out pop xchg hlt sbb test outsl cmp adc and dec lods pop popf mov mov stos sbbb mov mov repnz mov cmp push loop ret arpl fwait xchg dec jg aad inc xor aaa aaa jp loop adc std mov outsb scas stos stc or sbb jbe mov push fdivl stc and mov push xchg pop lods push clc push add push add in ja push nop imul int3 lret lret xor jne addl sub inc std pop pop lock add cmp add sub icebp fildl (bad) adc add and cmp jno ret mov cmp es aad xor test outsl add adc sbb xor adc pop popf mov xor stos sbbb mov mov repnz mov cmp or (bad) shll dec inc push and mov aas fcompl xor adc iret mov outsb ret or add sub xchg inc insl fsubrl out and mov data16 push jo,pn push sbb icebp in xor popa nop and jne (bad) xor push movsl push jle mov std sbb add cmp sub hlt fildl (bad) adc jae jb imul mov cmp add loope clc aad es xchg test outsl push jg adc and or dec mov push lret mov mov add inc mov mov repnz xchg enter loopne and push cmp or (bad) mov push xor lret lcall sub push mov outsb (bad) sbb pop out inc adc insb pushf shlb mov push mov push je push push push pop icebp in pop pop adc pop inc ror xor jo mov push jnp sti cmp push std pop pop clc xchg push add outsb dec icebp sub repz (bad) pusha xlat das push and pusha and sub cmp sub xchg sbbl jg adc adc imul add mov (bad) jle mov add push mov xchg lahf aas gs cltd movsl or jmp cmp arpl mov jns or (bad) fwait arpl fwait ret dec inc aas rcrl jp loop adc cld mov outsb (bad) or jnp mov pop fdivl repnz mov jge mov mov jo push add in pop pop seto jl add lret xor jns mov inc jnp sti and dec std adc cli xchg sbb cmp jns in sub (bad) fistl (bad) or inc push and or mov cmp sbb out sbb cmp adc int3 cmp cmp dec mov push lret mov mov add dec mov test add sub cmc movsl push xchg (bad) push mov cmp or (bad) popf arpl fwait nop dec dec aas cmc lcall daa loop adc cli mov outsb repnz test mov inc xor out inc inc faddl mov jne xchg pop lods push movsb push dec jo push sbb stc in inc pop add inc inc dec (bad) outsb push js test pop jnp sti sub push std sbb add cmp imull repz push and adc mov cmp js mov sbb test push jg adc int3 push dec mov mov mov iret subb or lea lds push mov cmp or (bad) add add push inc fwait mov jno (bad) lcall push loop adc cmc mov outsb ret or inc mov inc mov inc jns pop pushf pushf and adc pop adcl push jae push push inc pop mov push pop or test lock ficomp push cs sub sbb jmp cmp mov jae mov aam adc jnp jl cmp sti fmuls in rolb hlt sbb iret pop pop cmp inc addr16 test push cmp mov cmp repnz pop pop pop cmp aaa ds hlt dec push and in sahf push out into (bad) sbb es jle mov iret dec and xor xchg dec jl ficompl popa jp loop adc pushl add add outsb ret stos xchg or sbb xor mov fsubrl mov sub ficomp push xchg push jae push push inc pop mov push pop or test pop outsl jnp jno outsl inc sbb std js in in push pop cmp icebp pop dec popf in jae fistl lsl ds cmpsb ret mov dec sub cmpsl ljmp lock adc bound and fs lods ficom xor cmpsl sbb mov mov or mov imulb jae jmp addl (bad) rorl mov fstpt or (bad) xchg arpl fwait mov aas mov sub aaa sbb adc (bad) mov outsb jmp movsl or mov inc xor out inc push faddl shll and add mov mov cltd push and push sbb in push pop pop nop imul test xor push (bad) mov push sbb std or ret add cmp in sub aam or adc pop push and cmp mov cmp ss std (bad) sbb insb outsl aaa jg adc cmp add dec mov mov pop mov mov test daa pop cmp jge (bad) je mov lahf push gs repnz arpl scas (bad) pop (bad) jb stos push loop lret add push das fwait xchg dec jle xlat lcall das loop adc xchg mov outsb std stos mov pop lock mov inc stos (bad) or mov pushf repz mov xchg push inc jo push add in push pop sub gs test mov add add mov sti or je cmp add cmp imulb in cmp xor inc push and xor push cmpsb mov stos loope sbb iret (bad) and outsl and adc aas or pop andl mov cltd addb outsl mov pushf lahf dec gs lret movsl dec xchg icebp icebp bound pop cmp or (bad) nop arpl lret dec push xor aaa push jp loop adc cld mov outsb fsubrl cmp cmpsl inc fdivp push fcompl pushf pushf and data16 xchg push inc jo push es fucomp push jmp test enter push push ja xchg push inc jnp sti sbb imul insb add cmp (bad) sub add add mov (bad) or inc push and shll mov stos xchg loope clc out sbb insb outsl addr16 adc int3 and or dec mov push lret mov lahf xorb push mov stos lahf jnp xor cld movsl cmp icebp icebp push mov cmp or (bad) lret dec gs add (bad) lcall jbe dec adc and stos rorb lock mov inc test push fsubl pushf scas and and xchg pop ljmp push aaa pop fucomp dec pop popa nop add das test in ret xor cs outsl jnp sti add or xor add sub clc fistl (bad) adc and rcrl ret mov cmp add clc (bad) aaa xchg cmpsb sbb test outsl and pop adc aas or imul mov sub (bad) jle ds orb pop mov cmpsb lahf inc gs cld movsl jle fdiv push mov (bad) dec shrl stos push lret add push inc fwait mov pop aas cmc lcall adc dec adc stos mov outsb lret stos lcall inc lahf idivb out inc pop fsubrl and mov xchg push outsl jo push dec pop scas in xor popa nop push jmp test (bad) lret (bad) xor inc mov sti cmp inc std sbb out dec add jle out inc in (bad) jae fstpt (bad) and push push and and pop cmpsb lods mov cmp push clc (bad) (bad) xor sub adc cmp dec mov add push fmuls (bad) popf xorb pop mov cmpsb lahf jno and xchg lods icebp add jb stos push loop lret add push xor aas ficompl and loop adc and mov outsb std stos mov pop lock mov inc stos (bad) or mov pushf repz mov xchg push push jo push adc in pop pop seto sbb xchg xor pop mov sti or je cmp add cmp jmp inc in xorl xlat dec push and and pop cmpsb lods mov cmp xor hlt sbb test aas xor or sub dec mov push fisttp push ds adcb arpl enter inc repnz outsl xchg fcomip dec mov cmp push loop lret add arpl dec bound call xlat (bad) dec xor inc aaa sbb xchg gs les pushf dec jo push mov inc scas mov xchg scas xor jp out and mov jbe scas pop stos push lret push xor push push pop hlt in pop pop popa nop inc cltd add mov jns lea or std sub notb dec repnz stc fisttpl (bad) or das push push ja and aad insl xor shll add jmp or push push popa push mov ja in pop pushf mov sub mov (bad) fwait sub jae sbb pop mov out jle and in movsl or cld stos jge push adc outsb movsl in fstl mov push ss xchg inc dec loope jb mov push and push mov outsb icebp stos mov js sbb xor mov faddl jmp and lods pop mov xchg push add push sbb pop ds jno jne stc xor jnp addl and pop in xchg push add or sub jmp xlat pop push and add add cmp sbb int3 (bad) and sbb jg adc jo push imul mov cmp mov pop sbb dec mov xchg lahf pop gs xchg out icebp dec mov cmp or lds dec jge push fwait xchg dec pusha aas jmp aaa jp,pt loop adc loope mov add stos nop or push mov inc mov aas out inc push fdivrl jmp jne xchg ja push push pop pop cld in push pop adc test ror xor push sbb lcall std loopne add outsl cs dec sub in jae scas adc push mov push inc ja xor jno mov (bad) loope clc in sbb push outsl addr16 adc int3 push or cmp pop mov mov mov mov pop add pop mov cmpsl lahf ja xor in movsl jle enter loop imul cmp or (bad) xchg arpl fwait mov aas mov sub aaa ja xor and mov outsb ret or lock sub mov fdivrl out and mov jge add mov push jb inc push sbb sti in push pop adc inc inc fcmove hlt xor ja lea inc jnp sti cmp dec std adc in xchg dec add or sub out fstpt (bad) and pop push and xor push cmpsb (bad) mov cmp cmp ljmp test outsl or adc or imul mov sub mov addb pop mov enter cmp hlt movsl xchg lods icebp and jecxz sub push cmp or (bad) shll dec dec push sub sahf lcall sub adc loopne stc outsb mov dec mov inc iret imulb out inc jne jle call jne xchg push data16 push cs fldlg2 push pop add dec inc xlat lret in add add push dec jnp sti dec sbb std pop pop in xchg add cmp in sub cli fildl (bad) pusha xlat das push and xor push cmpsb mov xchg daa clc in (bad) adc test jg adc push or imul mov add xchg addb adc scas lahf sbb repnz xchg (bad) icebp jo mov xchg push lret lds dec dec push aas fwait mov aas ficompl push jp loop adc mov outsb ret or movzbl inc (bad) imulb out inc xor pop pushf enter jbe xchg push xchg push outsl jo push or in xor xor jbe (bad) lret in insl push jae xchg push sub sti and pop icebp xchg dec add or sub add popf jae fildl push and and mov cmp add xchg xchg test outsl adc int3 add cmp dec mov push lret mov mov cli sub and add dec mov cmpsl lahf push movsl or mov cmp or (bad) xchg dec jb sub jecxz dec xor aaa and loop adc divl stos or or idivb out inc push faddl aad and mov push dec jo push sbb in push jmp test xlat lret (bad) xor jg addl pop sbb sbb add cmp out sub in jae fildl (bad) adc pop push and push (bad) jno xchg mov cmp push clc add add (bad) add (bad) sbb test outsl addr16 adc pop or imul push int pop mov xchg orb cmp (bad) je mov lahf dec gs repnz dec mov cmp or (bad) andb and adc scas dec inc aas jecxz or aaa aaa jp loop adc mov outsb std stos mov dec lock sub fwait inc inc fdivrl pushf shlb sub xchg pop fist stos push dec jo push and in popa pop adc and xor and jnp sti cmp push std sbb add cmp sub enter add and xor sbb cmpsb mov cmp sbb (bad) inc xchg aam mov jg adc int3 push or imul mov add aam cmp fiaddl or dec mov mov repnz movsl inc xchg stc icebp je out (bad) push rorl push rol add push inc fwait lods dec pop aas out jnp hlt aaa add loop adc divb mov push lock or fwait inc inc fsubrl stc and mov pop sahf push test and push add in inc pop inc nop dec jmp test (bad) lret xchg xor push pop cs sti push jae or sti xchg dec add inc dec (bad) sub mov xlat dec push and cmpsb xchg mov cmp xor sti (bad) add dec outsl xor adc push or imul mov xor ds sbbb sbb iret je mov lahf jg inc repnz add cltd movsl inc xchg stc icebp jo sahf popl rcrl lods push ffree ret arpl fwait jecxz inc aas cld lcall push loop adc out fldcw stos mov dec lock xor mov fcompl pushf aad add (bad) pop (bad) push xchg push jb push push jb enter xor jne ret xor popa mov pop jnp sti js es js xlat xchg jbe sub pop dec mov jae fistl push and arpl jno ret mov cmp add xchg xchg sbb test outsl adc adc xor imul fcoms or sahf jle ds addb pop mov mov repnz movsl cmp popf popl shrl xchg push out (bad) andb dec push xor aas mov sub aaa sbb adc and mov outsb (bad) add jecxz mov pop out inc jl pop pushf int3 and jne xchg push outsl jo push push pop cwtl in jp das nop push jmp test xor gs push inc jnp sti sbb std xor lret add cmp dec shrb out fistl (bad) (bad) pop push and cmpsb xchg mov cmp xor cli (bad) add test outsl add adc int3 push or sbb pop fwait mov mov mov xchg pop pop sub bnd mov lahf outsb gs into movsl arpl mov cmp push rol in xchg dec push push and in dec xor aaa and loop adc iret mov outsb (bad) stos add xchg or add out cltd idivb mov push fsubrl and xchg push push jo push adc in dec pop adc dec inc dec (bad) xor jns (bad) push inc jnp sti das sbb and rcll dec in sub popf (bad) pusha xlat jl pop and and mov cmp sbb loopne adc test outsl or adc or sbb dec scas pop xchg add aam fisubr pop and dec mov cmpsl lahf jne sub lds dec mov cmp or (bad) xchg dec dec push sub loopne inc xor aaa es loop adc divb nop or sbb xor cwtl inc inc faddl shll sub mov add add jo push pop pop test push jmp test int3 lret clc xor dec cs pop jnp sti sub dec std adc sti xchg dec add inc dec imull repnz (bad) or das push and or mov cmp adc std (bad) push xchg ficompl test outsl aaa jg adc int3 and or dec sti pop lods mov sbb aam xchg mov xchg lahf pop gs in movsl jns ret mov cmp or (bad) mov pushf dec jne and popf lcall inc loop adc iret mov outsb (bad) stos lea jl inc mov inc xchg aaa out inc adc insb pushf shlb mov xchg push gs push cs cli in pop pop adc test (bad) lret out xor jb xchg push sub sti sbb adc out xchg cmp inc cmp in mov (bad) pusha xlat arpl and and mov cmp daa clc out adc or jg adc or imul mov push mov mov or pusha mov fwait lahf imul xchg (bad) icebp inc mov cmp push rol in lahf arpl fwait movsl dec fs ret lcall xor imul and mov outsb fisubrl imul out inc inc fsubrl std and mov push xchg push jae dec push and in push pop or dec inc ret xor push cs push pop jnp sti sbb inc std or ljmp dec icebp sub rcr pop (bad) adc pop push and roll mov xchg push clc mov cmp sbb jg adc and push imul call sbb mov push sub int aaa mov lahf outsb gs mulb and into (bad) sbb pop cmp or lds dec inc push xor nop dec addr16 fcompl push jp loop adc repnz outsb (bad) sbb or xchg inc push fsubrl jmp sub xchg push dec jo push and in push pop adc test (bad) lret lret xor jp test pop jnp sti and inc std ds lret add dec dec (bad) sub (bad) fildl push and and jno ret mov pop xor mov add jbe into xor test push or xor imul pop lret push in pop mov lahf sbbb mov enter xor cld movsl js xor mov cmp or (bad) scas arpl fwait xchg dec jno (bad) lcall sub insb adc xchg mov outsb (bad) or sbb faddl clc and xchg pop cmc push clc push and cmp lcall sbb dec and sbb pop mov sbb std pop pop in xchg add cmp repnz (bad) adc or pop push and cmpsb mov stos shl clc std (bad) adc push outsl adc xor or imul mov add add mov mov insl sub aam and gs repnz movsl inc xchg ret mov cmp or (bad) pushf arpl fwait (bad) dec bound (bad) lcall xor push adc pushl nop or sbb movntq pushf repz mov jl ficomp push stos push outsl jo push push pop out in push pop adc arpl in sub dec cs inc jnp sti sub pop in xchg add dec shrb repnz push and pusha and sub cmp sbb call sbb test outsl adc int3 and cmp dec mov push in or mov addb js loopne and je stos movsl add add cltd icebp mov cmp push mov arpl dec adc dec cmp xor aaa adc loop adc and stos mov mov inc (bad) imulb iret inc pop fdivrl (bad) and jne xchg push imul in pop pop or test in (bad) xor jae sahf push inc jnp sti sbb push pop out push add or sub rcr (bad) or inc push and cmp sbb cmp cmp in adc add jg adc int3 sub cmp dec leave pop out mov add xchg orb push mov xchg lahf push movsl outsl xchg ret icebp push mov cmp or lds dec dec push add jecxz xor xor aaa cmp loop adc cli mov outsb ret or sbb ds inc push fdivl std and mov jge lock cmpsl push xchg push insb jo push jb mov nop inc jmp test lret pushl pop push dec cs sub sti sbb dec std or sti xchg dec add outsl dec jecxz pop in in jae fisttpl xlat pop push and cmp pop cmpsb cmpsl mov cmp push clc iret (bad) add or jg adc and push imul mov cmp fwait addb jp cmc je mov lahf jnp xor ljmp mov cmp or (bad) andb push push sub mov sub aaa push jp loop adc out scas outsb iret stos mov add mov inc test inc (bad) fdivl cli and mov outsb xchg inc jo push sbb in push pop cmp test int3 lret loop jne bound xchg push sub sti dec sbb std pop pop in xchg add dec out pop in test fildl movb inc push and and mov cmp xor cli (bad) push xchg mov mov jg adc and add push dec mov push xchg mov mov cli or add xor jp aad push mov lahf jne cmp lds dec mov cmp or (bad) popf arpl fwait nop dec dec aas cmc lcall and jp jge divb test mov inc xor out inc insl fsubrl and mov push lods pop lods push add (bad) push js dec push push pop cwtl in xor inc nop ja and (bad) xor cs push pop jnp sti cmp jp or sti xchg dec add cmp lock in or or das push and pusha and sub cmp cmp out (bad) sbb or jg adc and sbb dec mov push rorl fild sub push mov lahf jl das repnz push mov cmp or lds dec inc push inc fwait (bad) dec arpl out lcall data16 adc in mov leave stos cwtl or add jecxz mov sbb fdivl cmc and mov and mov jo push push pop jmp push jmp test xor add add sti das sbb push pop out push add or sub rcr (bad) xor jg arpl insl pusha xor sbb cmp and xchg xchg sbb test outsl dec jg adc or ja leave pop out mov add xchg addb pop mov mov repnz mov cmp or (bad) andb pop push sub mov push xor aaa push jp loop adc out mov or cmp xor mov fsubrl and js arpl clc push add push add in jae push nop inc jmp test dec in jle bound nop push inc jnp sti sub pop fstl dec out dec in cltd jae fildl add add (bad) push xlat pop push and sub add cmp adc std (bad) push xchg hlt sbb test adc push or imul mov xor addb sub mov in lahf imul xchg enter lods (bad) sbb dec cmp or (bad) repz dec add xor mov lcall and outsl adc repnz outsb (bad) pop mov inc test cmp lea fsubrl and inc jne xchg push insb jo push add in pop pop dec nop outsb jmp test mov push dec roll jnp sti and jp sbb call dec icebp sub jmp xlat dec push and aaa roll xor loopne sbb add outsl or int3 and xor dec cltd pop mov pop mov xchg sbbb cmp (bad) je mov lahf outsb gs repnz movsl pop xchg ret mov cmp or (bad) popf arpl fwait mov inc aas out lcall and adc mov outsb iret stos sahf or mov inc ljmp fdivl (bad) and mov push in pop fwait push movsb push dec jo push xor int3 in fs cmp test xlat lret out xor push inc jnp sti dec sbb std or ret add sub jmp add cmp popa push and cmp add cmp cmp loopne jbe rcrl test outsl sub adc adc and pop mov cmp add orb pop mov enter inc repnz icebp bound dec cmp or lds dec jne add (bad) lcall data16 adc ret mov outsb loop nop or add pop out inc xor cmp jne xchg push inc jo push push pop std in push jmp test (bad) lret divb outsl push ja mov sti cmp push std adc ljmp dec in sub mov xlat popa push and and add sub clc out (bad) add add adc int3 cmp cmp dec leave pop out mov add test pop sbb dec mov lods lahf inc gs repnz add icebp bound arpl mov jns or (bad) cmpsl arpl fwait orl xor aaa ja xor and mov outsb lret stos mov js movzbl out inc pop fsubrl sti and xchg push outsb jo push sbb in push jmp test (bad) lret (bad) xor pop cs push pop jnp sti push sbb push pop out push add or sub out fstpt (bad) das xlat dec push and jno and xor shl clc test sbb test jg adc xor dec xchg pop mov mov mov popl inc sub (bad) je mov lahf aas gs lds dec mov cmp or (bad) shll dec jne pop fwait add dec push aas lret lcall xor push adc cli mov outsb lret stos mov ja or (bad) or mov pushf pushf and pusha jne xchg push dec jo push or in pop pop or test (bad) lret in jbe jg mov dec jnp sti push sbb or sti xchg cmp push sub rcr adc or and push (bad) jno nop mov cmp and call sbb test add int3 jle xor sbb pop mov (bad) push rorb and cmpsb cmpb dec mov cmpsb lahf imul xchg lods icebp ja mov cmp or (bad) mov push sub rcrb xor loop adc out lea stos mov add mov inc cltd imulb out inc pop fdivl out and jne xchg push add push add in push pop add addr16 test xor gs push pop jnp sti sbb adc sahf xchg cmp and push rcrl cltd es adc adc dec push je jno push rcrl xor in (bad) push xchg xchg sbb test outsl add pop adc int3 jne and sub pop xchg xor pushf sbbb dec mov lods lahf je xor lock imul (bad) dec sarl push out rolb arpl fwait mov aas loopne inc xor aaa es loop adc divb cwtl or das mov inc xor (bad) fdivrl jmp cmp cwtl pop xchg clc push add pop lret in push pop adc dec inc int in sbb cmp lret jnp sti and es sub loopne add aaa jno sub sarl das push inc jbe es add ret mov cmp or fcmovbe adc and jg adc and imul mov aas mov cli sub jae dec sub fnsave mov bnd gs leave icebp add lea mov lret jns or (bad) andb push push das fwait xchg aas rcrl jp loop adc iret mov outsb iret stos (bad) or sbb ds inc xor pop pushf mov jne xchg push outsb jo push pop pop (bad) in push pop pop nop imul test lret repnz ja mov add add cwtl sti das sbb pop sahf xchg cmp dec cmp fisubr cld fistl adc imul rorl jmp stos (bad) cmp mov jbe rcrl test outsl xor inc adc or imul fcoml das mov lahf sbbb push mov enter xor lds inc mov cmp or (bad) xchg arpl fwait int fs lret lcall arpl jge push and mov outsb fisubr cmp das out inc xor dec pushf stc and mov data16 push sub push add in inc pop adc or icebp xor data16 add sbb std push pop ljmp dec lods sub cmc fistl movb adc pop push and pusha jle jno stos mov cmp es mov pop xchg fistpl test jg adc or xor fwait pop stos mov jb scas jle ds adcb jns iret je mov lahf sbb repnz mov cmp call arpl fwait jecxz xor xor aaa sub loop adc in mov or lock out inc pop fsubrl stc and mov xchg push add push add in inc pop add inc inc xlat lret out xor push inc jnp sti dec sbb std or ret add cmp shrl iret fstpt (bad) pop xlat dec push and aaa roll sub mov jbe mov pushf test jg,pn adc push or imul mov pop mov pushf sbbb dec mov (bad) lahf jb sub ljmp mov cmp or (bad) pushf arpl fwait lea aas (bad) lcall arpl jge push and mov outsb fisubrl sub testb lea fsubrl stc and mov jne xchg push and pop iret in pop pop seto or aam ja jg addl push sbb sbb call cmp imulb mov add add pop push and cmpsb xchg mov cmp cmp ljmp test jg adc and and dec mov push hlt mov or xchg addb dec mov mov repnz movsl das xchg fdivp js cltd (bad) sbb pusha cmp or (bad) mov push adc cli lcall inc loop adc iret mov outsb std stos cmpsb or aas mov inc (bad) notb out inc js pop pushf mov jne xchg push imul in xor push nop ja and out xor push inc jnp sti dec sbb std or ret add sub cld fisttpl movb jae push roll lahf mov cmp es loopne sbb insb outsl addr16 adc or imul mov pop popf (bad) dec dec data16 pop jo cmc shlb pop std test mov add mov test cmp xchg mov cmp fsubs in jl mov (bad) cmc insb mov or incb (bad) fldcw stos enter ret mov negb add mov jle mov das outsl push xor cmpb jo push mov scas cmp divl test inc ror lret xor push gs sti sbb add sti xchg cmp push daa sub in jae fildl (bad) sbb dec push and cmpsb in mov cmp push clc mov push xchg nop sbb test jg adc int3 push jge add cmp sub mov outsl rcl mov sub notb gs jno inc int3 test lret data16 jo add into (bad) xchg mov mov inc fsubrl and pop sti sahf cltd into in push loop inc xchg repz xor mov mov jge leave sbb add scas (bad) ficoml or xor push mov rclb in jle out adc addr16 jne push xchg in sub add cmpl sahf xchg cmp pop inc xor pop aam enter fcmovnu pop popf ljmp push rorl rorb loope clc lods (bad) add test outsl dec jg adc or ja leave pop out mov pop mov fwait shlb sbb mov mov ljmp stos mov pop mov fisttpl lods cmpsl enter adc out ret gs xchg stos adc jbe jae,pn add fidivrl push xchg sbb add add add add outsl lret mov adc ja out add out data16 mov pop or icebp (bad) push xor adc mov cmp xchg jno push xchg cltd cmp mov popa ljmp and add out jns (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov mov das or fwait (bad) push pushf cmpsl sbb xor xchg mov cltd lds dec sarl cmp mov sub mov outsl mov mov popf in stos test or es pushf xor mov movsl mov xor xchg out mov in adc add test jae jmp pop mov push sti and mov dec sahf decl adc das xchg imul add ja and and (bad) or ja arpl jmp pop sub arpl mov mov not cmp adc jmp xchg and push std push adc mov lods xchg push mov or mov mov rcrb and popa mov inc shrl imul sbb (bad) xlat mov stc cmpsb jb mov add sbb xor (bad) mov dec mov dec jl rcrl int3 pop loop and cmc inc in loope cmpsb mov dec and out inc adc push mov cs push repnz sbb cwtl xchg xchg adc sbb sub je mov repnz add lcall xchg cwtl clc inc cmpsb imul jnp loop pop add mov ficompl enter xor or pop pop adc and mov fisub test int3 in stos mov int3 lcall popa mov fs xchg sub test sbb push pop cld xor daa jp xor popf loope mov and clc sbb loop adc fisttpll sub sbb loopne mov sahf daa sub call add xor mov xchg scas (bad) dec insb or (bad) dec xor out pusha mov mov jae xchg sub out jbe mov dec inc or dec out rcll jge pop xor fsubl in lcall std leave cmp fs push pop jns xor loopne mov sbb adc jb jns add aas cmpb inc data16 nop ror das push pop dec fwait mov incb push aad jae cmpsl dec xchg lahf mov lret sub je jbe fs adc fisubr jle je fisubl mov dec pushf cmp addr16 test enter jbe pop push stc adc push sub add sahf add adc mov fs negl xchg jle xor mov xor fidivrl mov sbbb mov repz xchg add mov test mov loop nop jmp mov (bad) stos pop xor and pop xor jp pusha leave pop add xchg jne test scas fisubrl mov pop xchg pushf dec dec out cltd imul mov xor push pop dec add mov or jle and push pop andl (bad) mov lret and je sbb cmp pop cmp addr16 (bad) or jb das sarb mov popa js rorl inc jmp inc movsb inc jecxz dec cld mov stos jb mov or dec cmpb aam out xor mov or inc mov fsubl adc mov add and cwtl sub jg sti jge lahf rcl cmp stos xchg ja jmp adc test lods sarl addr16 pushf ss push or ja leave pop inc lea pop mov add add sub jae insl sub sub lahf lcall xchg lods icebp and xchg dec (bad) jae lds (bad) mov lds dec jae inc fwait sti sbb sub aaa push jp loop adc and stos or inc xor out int fsubl mov fstp push clc roll jo aad pop cwtl in movsb aad nop lcall dec in sbb cmp jnp sbb jge pop sahf adc add aas fild jae dec addr16 pusha xlat das push and and flds loope mov mov icebp nop outsb sub bound xchg arpl jns sbb leave pop in mov cmp dec xchg repnz sub adc dec dec mul pop and mov repnz cmpsl inc repz andl add add cmp jmp cmpsl add pop xor dec sti decl aam sbb adc dec pop cmp mov stos (bad) or and clc aaa adcl fdivl fisttp in sbb mov mov (bad) add push xor fistpl dec test icebp inc sub scas xchg xor sbb xchg sti add push lods cmpsb adc dec (bad) sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock add add negb incb fcompl pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and btr dec repz jno es js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push add jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti add es js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test imul movsl andl out pop enter les sbb pop sub mov sub xchg mov (bad) and and xor loop mov dec movsb lds sbb xchg push cmp aad out scas and mov ljmp add imul lret ja leave mov repnz and dec subl std rorl cmpsl mov push aam loop mov test in sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push add xor add cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test add addr16 adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli addb add sub pop insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into popl add dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock add pop out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb add nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb es js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and add add cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg add or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec roll aas cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub add add aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out add add inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std add sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and add push (bad) jno ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc add aaa int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae add insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp add add add push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa add push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc add add fcompl pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor add add add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and add add ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub add xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push add lds dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp add push adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor add add pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg add add add or sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and mov roll repnz sub sbbl sbb jge fisttp cmp push pop lea adc mov sbb scas dec xchg or fimul cmp mov jne scas lret mov lock pushf mov inc arpl jmp dec jns stc sub (bad) cmc sub cld addr16 out sub movb cmpsl ficom add rcrb mov hlt adc mov push outsl lea cmp (bad) lods enter cmp xchg scas lret call js mov jmp and pop jp mov in or inc popa jle mov repz mov dec imul mov xor vpaddd cmp mov cmp xchg mov jmp and pop jnp add dec gs lahf mov dec push clc adc movsb rcr push xor mov cmp (bad) stos enter cmp (bad) lods leave in pop cmp xchg lods lret and jne scas lret call ja mov jmp jns mov out or inc popa jge mov lock pushf mov inc sbbb dec add mov xor mov dec outsl mov or (bad) notb xor mov xor xchg xor mov push insb mov xor jb stos enter cmp (bad) stos enter cmp (bad) lods enter cmp nop lods leave out pop cmp xchg lods lret and jne scas lret jmp add or pop jp mov in or fwait mov icebp or pushf mov inc arpl movntps sbbl mov xor xchg xor mov xor insl mov xor ret loopne sbb push outsl mov cmp (bad) lods enter cmp nop lods leave in pop cmp xchg lods lret and lret call pop jnp mov in or inc pop jl mov icebp or popf mov inc sbbl sahf mov dec sbbw dec andl adc dec insb mov xor insl mov test xor mov xor mov rcrl push xchg rorb add add inc sbbl lahf mov dec add movsl rcr pop xor insl mov ss outsl mov cmp stos (bad) jecxz and jbe scas int3 jmp js mov ljmp mov jmp and mov in or inc pop jl mov out or inc popa jge mov dec data16 lahf mov dec test notb das dec push notl dec push mov sbb push jo test cmp xchg scas lret and int3 call ja mov jmp jns mov jmp and pop jp mov in or mov icebp push sub sbbl sahf mov dec push notl dec push cmpsb ret sbb outsb mov add jbe mov jmp and pop jp mov in or inc pop jnp mov out add sub mov dec push notb das dec push notl push insb mov xor outsb mov xor (bad) repnz lds inc jg jmp and mov out or inc bound mov cmpsb ret loopne sbb push outsl mov cmp xchg lods lret and pop ja mov ljmp mov in or add (bad) sahf mov dec insb mov xor outsb mov ss outsl mov jmp and mov in or inc pop jl mov out or inc pop jl mov inc sbbl mov xor mov xor xchg xor xchg add add (bad) push xor mov aaa push jo test loop sbb push jo stos (bad) jecxz sbb cmp int3 call ja mov in or mov lock pushf mov dec gs sahf mov dec data16 lahf mov dec test stc adc movsb rcr pop xor mov cmp lea cmp (bad) stos enter cmp xchg in das addr16 rolb adc jmp jbe mov cmp xchg mov in or inc bound mov dec sbbl mov xor mov push insl mov cmp mov cmp xchg scas lret and jne scas lret out and jne scas add sar cmp add add pop cmp jp mov in or pop jp mov in or inc pusha jl mov out or inc rorb add mov and scas int3 call js mov ljmp mov dec sbbl sahf mov dec data16 lahf mov dec test notl xor mov xor insl mov xor insl mov xor insl mov xor outsb mov xor (bad) loopne sbb push jae xchg mov ljmp mov ljmp mov jmp and pop jns mov in or mov in or mov lock fwait in bound jle mov dec sbbl lahf mov dec push add add clc adc dec push mov cmp stos (bad) jecxz sbb push jb stos enter cmp (bad) lods enter cmp xchg add inc pop jns mov jmp and pop jl add mov sub jg mov inc sbbb dec gs sahf mov dec sbbw dec push negl xor (bad) loopne sbb push outsl mov cmp stos (bad) in sbb lods leave in push cmp xchg scas lret and jne mov ljmp xor rcrb fwait mov icebp or popf mov dec sbbw dec push notb xor test loop sbb push jno stos (bad) jecxz sbb lods enter cmp jne scas lret out and int3 jmp add push and pop js mov ljmp mov lock pushf mov rorl xchg divl jo test cmp ja and lret and shr or inc pusha jl mov out or inc pusha jge mov out or inc popa jge mov out or inc bound mov lock pushf mov dec push notl dec imul xchg xor xchg dec insb mov lods jmp in or mov aam push sub sbbb dec sbbl lahf mov dec data16 lahf mov dec push mov xor xchg dec imul xor mov xor add add cmpsb ret (bad) sbb ret cmovns jns mov in or mov in or inc pop jnp mov out or inc pusha jge mov lock inc add lahf mov dec insb mov xor mov xor ret loopne sbb aam dec test mov cmp mov ljmp mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or mov in or inc arpl push sub iret push cmp ja jecxz push lea in or inc popa jle mov lock popf mov dec data16 lahf rcr sbb outsb mov ss outsl mov cmp stos (bad) in push cmp nop add lods leave out pop cmp jne scas int3 call jp mov in or inc pop jge mov lock pushf mov dec sbbl mov xor add sbb lods lret pop cmp jne scas lret call js mov ljmp mov jmp and pop jp mov in or inc pop jl mov dec gs sahf mov lahf out fs fcomps insl mov imul xor mov xor insl mov cmp nop lods leave in push cmp nop lods lret or mov in or inc pop jl mov in or inc pop jl mov out or inc pusha sbbb dec gs sahf mov dec sbbl lahf mov das dec test notb das dec push notl xor mov xor insl mov xor insb mov xor insl mov xor insl mov xor scas lret call jbe scas lret out and lret out and lret out and jbe scas lret call jbe scas int3 jmp jp mov in or inc pusha jge mov out or inc pusha jl mov out or inc popa jle mov out or inc bound mov lock inc popa jle mov cvttss2si (bad) sahf mov dec data16 lahf mov add mov dec insb mov dec insb mov xor or jae repz dec imul xchg push insl add add fist dec outsl mov ds ja mov jmp js mov ljmp mov ljmp mov ljmp mov ljmp mov out or add (bad) sahf mov dec sbbl sahf mov dec data16 lahf mov dec gs sahf mov dec imul xchg xor xchg dec imul xor mov dec insb mov aaa push jo test loope sbb push outsl mov aaa push jo stos movl pop js mov jmp ja mov jmp js mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jge mov add shr or inc popa jge mov out or inc popa jle mov out or dec sbbl sahf mov dec mov cs nop (bad) lock dec (bad) mov sbb sti sub daa pop nop sar ja icebp es lea fisttpll dec xorl adc adc jle lock mov mov ret (bad) aaa outsl movsl out sub leave das insb mov sub int inc mov gs lahf mov dec imul mov ss jo test aas pop (bad) int3 sbb (bad) lahf mov dec test notb xor add ss outsl mov aaa push jb stos enter ds ja mov ljmp mov jmp and pop sti das dec push add xchg xor std dec cmpl add cmp aam add cs andl adc dec push notl dec push mov xor mov push insl mov cmp mov cmp xchg scas lret pop cmp jne scas lret call ja mov ljmp mov ljmp mov out or inc bound mov inc sbbb dec andw dec push notl xor xchg xor mov ss jo test cmp mov cmp mov cmp xchg lods lret pop cmp xchg scas lret and pop jp mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov lock inc bound adc dec push (bad) sbb (bad) loopne sbb push outsl mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) jecxz sbb mov jmp js mov jmp and pop mov jmp dec mov sbb int inc jg repnz call sbb fistp pop xchg into add inc test cmc ss (bad) or mov mov dec jl loopne inc ja fmuls cmp cmp push push nop lret adc aaa outsb stos ficomp push mov clc dec xorl sti sbb outsb mov ss jno stos (bad) jecxz sbb push jb mov jmp js mov jmp and pop jp mov in or add js icebp xor rcrl dec cmpl adc inc jle lock fwait aad push xchg int add jge jmp pusha mov fsts push xchg xlat pop push xchg into or icebp and pop cwtl fsubrs pop nop fsubs jp sti cmp jmp daa pop movsb fmuls inc mov or scas jmp or mov pop inc jnp in sbb pop add insl cmpsb ficom (bad) adc into or sti cmp lock out popa pushf fcomps push xchg rorl inc mov add jle clc xor sub out sub cwtl ficomp pop xchg rorl inc jg imull pop xchg iret pop cmp mov sub and cli inc jg cmc xor sbb rcll dec cltd aad dec mov add mov imulb xor fist add add clc xor xlat or jo rolb aas outsl test push ja decl mov mov sbb xorl cli xor loope pop add xchg mov in or inc pusha jge mov out or inc popa jle mov lock mov xor xchg xor xchg push insl mov xor insl mov xor (bad) loopne sbb push jae lods enter cmp nop lods leave in push cmp (bad) lods enter cmp jne scas lret and int3 call fmuls inc jnp call es xchg into or jns stc xor aam push sub sbbb dec test notl xor xchg cmp (bad) stos enter cmp nop lods leave out pop cmp jne aad add add pop fwait mov dec test notb das dec push notl dec outsb mov aaa push jo test cmp mov and pop js mov jmp and pop jp mov in or inc pusha jge mov out cvttps2pi (bad) lahf mov dec push clc adc movsb rcr pop xor insl mov cmp stos (bad) in sbb scas int3 jmp js mov jmp and pop jnp mov in or inc pusha jge mov out or inc bound mov dec gs lahf mov dec imul xor insl mov xor vpaddd aaa push jo test cmp (bad) stos enter cmp nop lods leave call jns mov jmp and pop jp mov in or inc add add cltd mov out or inc bound mov icebp or popf mov dec test xor xchg xor mov ss fwait rcr (bad) sbb push jno stos (bad) in sbb lods leave out pop cmp jns mov in or mov in or inc pop jl mov out or inc arpl adc sbbw dec imul inc arpl mov dec sbbl lahf mov dec gs sahf mov dec andl adc push insl mov xor (bad) loopne sbb push jo test cmp mov cmp mov cmp (bad) lods leave call js mov ljmp mov in or add add jp mov in or inc pop jl mov out or inc bound mov icebp or lahf mov dec push sti pop xor outsb mov cmp nop lods leave out and mov out or inc popa jge mov out or mov cs test clc adc movsb rcr push xor mov xor vpaddd cmp out cmp lcall arpl mov dec sbbl mov das dec imul xchg ss jo test aaa push jo stos (bad) jecxz sbb lods enter cmp nop lods lret pop cmp jne scas lret out and shr or inc pop jnp mov out or inc arpl mov aad push sub sbbb test notl xor mov xor (bad) loopne sbb push outsl mov cmp stos (bad) jecxz sbb push jae lods leave out pop cmp jne xchg mov jmp and pop jns mov out or inc arpl mov inc arpl adc gs lahf mov dec push mov xor mov xor (bad) in push cmp xchg lods lret and jne scas lret out and pop ja mov in or mov in or inc arpl adc dec push mov xor outsb mov cmp stos (bad) loop sbb push jb stos enter cmp nop scas int push and pop jns mov lock inc bound adc andl fdecstp adc dec imul xchg dec insb mov xor jno stos enter cmp xchg mov jmp ja mov ljmp mov in or inc xchg lret popa popf in adc xor mov push jb stos leave out pop cmp jne scas lret call ja mov ljmp mov in or mov out or inc popa sbbl mov xor xchg xor mov xor insl mov ss outsl mov cmp xchg scas lret out and pop jns mov in or mov out or inc popa jge mov lock inc bound mov xchg ret or xchg mov in or inc pop jl mov out or inc popa add add mov lock pushf mov dec sbbl sahf mov dec imul xchg xor mov xor insl mov aaa push jno stos (bad) jecxz sbb push jb xchg mov in or pop jnp mov in or inc pop jnp mov out or inc pusha jge mov lock inc arpl adc imul out and jp mov out or inc pusha jl mov out or inc popa jge mov lock inc bound mov inc sbbb dec cltd iret add mov pop jne scas lret and int3 jmp jns mov jmp and pop jp mov in or mov out push sub sbbb dec sbbl add adc mov dec push notl dec imul xchg ss jno stos (bad) jecxz sbb push jb stos (bad) in sbb lods enter cmp nop lods leave out pop cmp jne mov jmp jnp add dec test notl xor xchg dec insb mov xor insl mov aaa push jno stos (bad) out and pop ja sub rolb push jne scas lret call ja mov jmp jns mov in or inc pop jl mov out or inc pusha jl mov dec imul mov push insl mov xor (bad) ss jo stos (bad) jecxz sbb pop jbe scas int3 jmp js mov jmp add or pop jp mov out or inc pusha jge mov out or inc arpl mov dec sbbl mov xor mov xor (bad) loopne sbb push outsl mov cmp (bad) stos enter cmp xchg mov jmp add shr or inc popa jle mov lock pushf mov dec sbbl pushf cli sub test xor mov ss jno stos (bad) jecxz sbb lods lret and int3 jmp jns mov jmp sub jg mov dec gs lahf mov dec push stc push xor mov cmp stos enter cmp xchg mov jmp and mov out or inc add fwait mov dec andw dec imul mov aaa push je lods lret and pop js mov in or inc popa jle mov icebp push sub sbbl mov lods out dec xorb add cmp jne scas lret out add mov in or inc pop jnp mov out or inc pusha jge mov out or inc popa jge mov out or gs sahf mov dec test notb das dec imul xchg xor xchg xor mov mov mov xor mov push outsb mov cmp mov cmp xchg lods lret and mov in or inc pop jl add add inc pusha jge mov out or inc popa jle mov lock fwait mov dec gs sahf mov dec imul xchg xor mov xor insl mov ss outsl mov ja jecxz imul inc arpl mov add test das dec push notl dec imul xor mov cmp mov cmp (bad) stos enter cmp xchg lods lret and jne scas lret out and int push and pop jnp mov out or inc pusha jl mov out or inc insl mov and leave add insl mov ss jo test cmp stos (bad) in and pop js mov ljmp add add mov in das imul fwait out mov pop pop xchg into add cwtl enter xchg int sub sub (bad) hlt sub xchg leave std jo,pt fisttpll adc mov in sbb lods enter cmp nop lods leave out pop cmp xchg mov in or mov out or and add es cmpsb ret loopne sbb push jo test cmp (bad) lods leave jmp and pop jp mov in or mov in or inc pop jl mov out or inc popa jle mov inc sbbb dec data16 xor xchg dec insb mov xor (bad) loopne sbb push jo test cmp mov cmp jne scas lret out and add add scas int3 call ja mov jmp jns mov jmp and pop jp mov in or inc pop jnp mov lock popf mov dec gs sahf mov dec sbbw dec test notb das dec push notl xor mov xor insl mov ss jo test cmp xchg scas lret out and int3 call ja mov in or inc pop jl mov out or inc popa jge mov out or inc popa jle mov lock inc bound cvttps2pi sbbl mov xor xchg xor xchg xor mov xor mov xor insl mov cmp (bad) stos enter cmp add add nop lods leave out pop cmp xchg scas lret out and pop jns mov in or inc popa jge mov lock inc bound mov dec test notl dec push mov xor mov xor insl mov ss outsl mov push ja mov jmp js mov ljmp mov out or inc popa jge mov add test das dec imul mov xor (bad) aaa push jo test cmp (bad) lods leave in push cmp jne scas lret and pop ja mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov inc arpl mov inc arpl movntps xchg xor add push mov xor mov dec insb mov xor insl mov xor (bad) add stos enter cmp nop lods leave out pop cmp jne scas lret out and jbe mov jmp js mov ljmp mov out or inc pusha jge mov out or inc popa jle mov repnz sub sbbl lahf mov xor mov aaa push jo test cmp mov cmp (bad) lods enter cmp xchg lods lret pop cmp jne scas int3 jmp jns mov out or inc bound mov inc bound mov inc sbbl lahf mov dec andl adc dec insb mov xor add add mov aaa push jo test aaa push jo test cmp mov cmp mov inc pop jns mov jmp and pop jp mov in or inc pop jge mov out or inc pusha jge mov out or insl nop lods lret and jbe mov jmp and pop jnp mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jge mov lock inc arpl mov cs push movsb rcr push xor mov xor insl mov xor (bad) sbb push jae lods enter cmp jne scas int3 jmp and mov out or inc pusha jge mov out or inc popa jg mov dec sbbl sahf mov add cld push cmp jbe scas int3 add add xchg mov in or mov out or inc popa jle mov icebp push sub sbbb dec andw push insl mov ss outsl mov cmp nop lods leave out pop cmp jne scas int3 call js mov jmp and popa jle mov lock popf mov dec gs lahf mov dec sbbw dec andl adc dec imul mov xor insb mov xor insl mov xor insl mov xor insl mov xor (bad) in sbb lods enter cmp (bad) lods enter cmp nop lods leave in pop mov pushf add or xchg scas lret call jl popf mov add add movntps sbbl mov cs push notb xor mov xor test xor ret loopne sbb (bad) ss outsl mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb scas lret call jbe scas lret call ja mov jmp ja mov jmp js mov ljmp mov jmp daa inc pusha jge mov out or inc popa jle mov lock inc bound mov lock fwait mov lock pushf mov inc arpl mov dec push notb das dec push notl xor mov xor mov xor add sbb jno test add add loop add cmp int3 call ja mov jmp js mov ljmp mov jmp and pop jp mov out or inc pusha jge mov out or inc popa jle mov out or inc popa jle mov lock pushf mov inc arpl push sub test das dec push notb xor mov xor xchg xor xchg xor xchg aaa push jo test cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) in sbb push jb stos enter cmp (bad) scas lret call jbe scas int3 jmp js mov ljmp mov ljmp mov ljmp mov add or add sti xor ret dec add fs mov mov fisttpl dec test int3 add add xor mov lods out pop mov clc sub leave add imul roll xor or dec imul mov xor sub sbbl mov xor mov xor xchg push insb mov xor lret pop cmp jne scas int3 jmp js mov jmp and jns mov jmp and pop jnp mov in or inc pop jl mov out or xchg push outsb mov cmp into jmp es pop jnp mov lock inc bound mov dec test add add cmp xchg scas lret call add mov dec sbbw dec push mov xor mov ss jb scas lret out and into in or inc bound mov dec push stc push xor mov cmp (bad) lods leave in push inc pop jns mov in or mov out or inc pop jl mov icebp push sub sbbl mov xor xchg push jno stos (bad) in push cmp xchg lods leave out and pop ja mov jmp jns mov in or inc pop jl mov lock inc popa sbbl mov xor mov ss outsl mov aaa push jno stos (bad) in push cmp nop lods lret add add aas pop ja add inc pusha jge mov out or sub mov dec test notb das dec push notl xor xchg xor (bad) aaa push jo stos (bad) jecxz sbb push je lods lret and int3 jmp jp mov in or inc arpl adc mov stos loope imul mov dec data16 lahf mov dec andl adc dec push std sbb push jo test cmp stos (bad) in push cmp nop lods leave in sbb lods lret and jbe scas lret call sbb jmp pusha mov das jle mov dec push mov xor xchg xor mov add xor insl mov cmp add inc pop jnp mov in add sub sbbb dec push notb xor xchg xor mov xor mov xor ret loopne sbb ret loopne sbb ret (bad) sbb leave out pop cmp xchg scas lret pop cmp jne scas lret and lret call ja mov jmp js mov ljmp mov dec gs sahf mov dec push notb cs push notb das dec imul xchg xor insl mov xor ret (bad) sbb ret loop sbb push jno stos enter cmp xchg scas lret add ficoml dec xorb sbb std sub xchg int3 cli das bound fs ret repnz scas fstl lahf ret (bad) sbb ret loope and int3 jmp js mov ljmp mov ljmp mov in or inc pop jl mov out or inc popa jle mov dec data16 sahf mov dec andl adc dec andl adc dec xchg clc xor in and int3 jmp jl mov out or inc pop jl mov out or inc pusha jl mov out or inc pusha jge mov out or inc popa jge mov cmp je fnop adc dec push mov xor mov dec insb mov xor insl mov xor add ss jb stos (bad) in sbb lods enter cmp pop js mov ljmp mov shr or inc popa jle mov lock pushf mov dec push notl xor mov xor xchg xor xchg xor mov dec insb mov aaa push jno stos (bad) jecxz sbb push jb stos (bad) in sbb stos enter cmp nop lods leave in push cmp nop lods leave out pop ds ja mov ljmp mov jmp and pop jp mov in or mov in or inc pop jl mov out or inc pusha jl mov icebp push sub sbbb dec sbbl sahf mov dec data16 fcomi adc dec imul add mov xor xchg xor (bad) loopne sbb push outsl mov push cmp xchg lods lret pop cmp add ljmp gs rorb pop sbbb push mov xor mov push insb mov xor (bad) ss outsl mov cmp lods lret and int push and pop js mov ljmp mov in or mov in or mov in or inc bound mov inc sbbb sbbl bound mov inc arpl cvttps2pi xchg xor xchg dec insb mov xor mov xor insl mov add add loopne sbb push outsl mov cmp nop lods leave out pop cmp xchg scas lret and nop fistl dec add cs sbbw xor mov push jb lods enter cmp nop lods leave in push cmp push pop xchg fmull sub jg mov inc sbbb dec andw push insl mov ss outsl mov cmp mov pop jne scas lret call nop lods leave out pop cmp sahf or mov test or outsb cmpsl fstl inc jnp out dec jp inc (bad) (bad) lock gs mov dec imul mov cmp (bad) lods enter cmp nop lods lret pop cmp xchg scas lret call ja mov jmp add add aas jp fcoml ja loopne inc outsl stos fist dec xchg out pop push cmpl out daa pop cltd rolb jnp mov jecxz pop mov add jnp mov int3 (bad) xor cmovbe push push mov es xchg rorb inc jg out and movl add or sbb mov adc pop pop xchg (bad) cld aaa jo fcompl dec mov les inc jne fcompl push xchg in dec xorl fwait roll aaa outsb mov cwtl movb arpl ficom xor mov xor adc mov mov ss outsl mov cmp xchg mov ljmp mov ljmp mov jmp and pop jp mov in or jnp mov in or inc pop jnp mov out or inc arpl movntps sbbl sahf mov dec sbbw xor mov add test cmp jne scas int3 jmp ja mov ljmp mov in or mov out or inc pusha jl mov lock lahf mov dec test notb das dec push clc adc dec push mov xor xchg dec imul ss outsl mov aaa push jo test cmp mov cmp (bad) lods enter cmp nop lods int3 call jbe mov in or inc pop jnp mov out or inc je ljmp dec imul add add outsb mov aaa push jo stos (bad) jecxz and pop js mov ljmp mov in or mov out or inc bound mov add test xor mov push cmp nop lods leave out and jne scas lret call ja mov jmp js mov ljmp mov lock inc gs sahf mov mov sbb lods in and int pop and pop jl mov out or inc arpl mov dec gs lahf rcr sbb insl mov ss outsl mov cmp stos (bad) jecxz sbb push jb stos enter cmp roll xchg (bad) cmc xor sti dec jne mov ljmp mov jmp and pop jns mov jmp and add pop jns mov in or mov in or mov inc sbbb arpl or fwait mov inc bound mov out add sub mov dec imul sti sbb outsb mov ss outsl mov ss outsl mov ss outsl mov aaa push jo lods leave in push cmp nop lods leave in push cmp nop lods leave out push cmp nop lods leave in and jne scas lret and jne scas lret pop aas pop js mov ljmp mov jmp and jns mov jmp and pop jns mov jmp and pop jp mov jmp and mov out or inc popa jge mov out or inc bound mov lock inc bound mov lock add or fwait mov inc arpl mov inc andl adc dec push notb das dec push cmc adc dec test notb das dec push notb das dec add ret sbb push jno stos movb add cmp je scas int3 call js mov jmp ja mov jmp ja mov jmp ja mov in or inc pop jnp mov in or inc pop jnp mov in or inc pop jnp mov in or mov in or inc pop jnp mov in or inc bound mov lock inc popa jle mov lock inc popa jge mov lock inc popa jge mov out or inc popa jge mov out or inc bound mov dec sbbl adc mov dec sbbw add mov dec sbbw dec andw dec imul xor xchg xor outsb mov xor (bad) loopne sbb push outsl mov ss outsb mov and lret out and inc pop jp mov jmp and pop jp mov dec push notb das dec push notl das dec push cli pop xor mov dec insb mov dec insb mov dec imul xor mov mov in das dec insb mov xor (bad) aaa push jo test cmp mov cmp nop lods leave ljmp mov in or mov out or inc pusha jge mov out or inc bound mov inc arpl movntps test xor xchg xor sar xchg int inc popa jge mov lock aam inc pop jp mov in or mov cs test notb xor mov xor outsb mov cmp mov cmp (bad) lods enter cmp xchg mov jmp jp mov jmp and pop jp mov in or mov in or mov in or inc popa jle mov repz sbbl sahf mov dec sbbl popf mov dec sbbl aam cmp push jo test loope sbb push jo test add sbb push jo test cmp lea cmp mov ds ja mov jmp ja mov jmp jns mov jmp and pop jns mov jmp and pop jp mov in or pop jp mov lock inc add lahf mov dec test fdivrp pop xor mov ss jo test ss outsl mov cmp (bad) stos (bad) in sbb stos (bad) in sbb lods leave out pop (bad) icebp push sub sbbl mov jl mov dec data16 mov das dec push notl xor xchg xor mov push insl mov ss jae lods enter cmp xchg scas lret call js add mov ljmp mov jmp and mov in or inc pop jl mov icebp push sub sbbl lahf mov dec push clc adc movsl ret sbb outsb mov ss jo xchg mov ljmp pushf mov dec sbbl mov xchg add je loopne sbb push jo stos lret call js mov ljmp mov ljmp mov jmp and pop jns mov in or sti ss test and add lret push push fcoml pop movsb loopne jno push lcall dec cwtl rorl pop test sbb jl add movsb fisub imul stos enter cmp add push je lods leave out pop cmp xchg lods lret pop cmp xchg lods lret pop cmp xchg lods into jmp and pop jns mov jmp and pop jp mov in or pop jnp mov out or inc pusha jl mov out or inc pusha jge mov out or inc sbbb xor mov lret and pop jp mov in or inc pusha jl mov lock popf mov dec test sti pop xor insl mov xor insl mov xor ret loopne sbb push outsl mov aaa cmpl rolb aaa insl test sub movsl rcr pop xor stos fist dec xchg add inc xchg fstl dec test add push aam inc nop iret or xchg aam pop fldenv jno incl aad dec cltd mov mov setge sub divl jle sub es pop jl mov out or inc pusha jl mov out or data16 lahf mov dec sbbw dec andw dec andl adc dec push notl dec push sti pop xor insb mov test cmp add cmp jne scas lret out and int3 call jbe mov jmp jl mov in or inc pop jl mov out or inc popa jge mov out or inc popa jge mov lock inc bound mov inc sbbb test notb das dec push notl xor mov xchg fsubs fwait in arpl loopne arpl jbe mov or lds push add hlt sub push sbb xchg xlat pop pop scas fsubrs push mov rcr pop xor mov cmp nop lods leave in push cmp nop lods leave out pop cmp xchg lods lret and jbe mov jmp ja mov ljmp mov out or inc pusha (bad) add sub jp fadds adc (bad) cmp insb mov xor (bad) aaa push jno scas int3 call ja mov jmp xor cli arpl int xor arpl cvttps2pi (bad) lahf mov dec insb mov xchg std sbb push outsl mov cmp test cmp mov cmp xchg scas lret and pop jnp mov in or inc pop jl add sub jle mov out or pushf mov dec sbbl sahf mov dec push mov xor xchg push insb mov xor insl mov ss outsl mov aaa push je lods lret pop cmp jne scas lret call pop jnp mov in or sub gs lahf mov dec data16 lahf mov dec push cli pop xor insl mov xor (bad) jecxz sbb push jno stos ljmp inc pop jp mov in or inc pusha jge mov lock mov xor mov add insb lahf out pop cmp int push and jns mov in or mov in or inc sbbl add adc dec test notb popa mov pop xchg vmovaps mov lods fisttpll ss sti sub sbbl lahf mov dec test notb das dec push lcall add pop inc jne fstl inc jnp loop dec jl loop dec xorl or loopne dec addb lock sub (bad) sti pusha cltd into push data16 loope dec mov ret pop xchg (bad) clc sub (bad) sti das arpl pushf roll or jb fimull inc ja ficom inc jns loope dec jge ljmp push mov mov ret pop xchg (bad) popa xchg lret (bad) xor into add cmp (bad) or jno fstl inc js fist inc jp add lods loop dec jl in dec xorl xchg leave (bad) cmp in push nop (bad) clc xor rorb cmp roll inc jno fstpl dec jge fisttpll inc jo (bad) add adc shr or inc bound mov inc sbbb dec gs sahf mov dec imul xor mov loope gs add in or jb mov popa cmpsl add dec test (bad) push xor mov cmp nop lods leave out pop cmp xchg lods lret and int3 jmp movsl idivb bound mov inc andb dec imul xchg xor mov push jo test aaa push jo stos (bad) jecxz sbb pop jne scas lret out add cmp int3 jmp ja scas int3 call js mov ljmp mov ljmp mov out or inc pusha jge mov out or inc popa jge mov lock inc popa jge mov out or inc popa jle mov lock inc arpl mov inc andw dec push clc adc movsb rcr adc mov xor lods leave in push cmp (bad) lods enter ds jbe scas lret jmp ja mov jmp and pop jns mov jmp and pop jns mov jmp and pop jp mov in or mov lock inc bound mov dec sbbb inc sbbl lahf mov dec data16 lahf mov dec imul mov dec imul xor xchg dec push mov xor xchg dec imul ss outsl mov cmp (bad) stos enter cmp nop lods enter cmp (bad) mov push xchg (bad) push mov lret pop inc cmpl mov mov rorb adc add add insb add sti xor lods call in sub ficompl push mov add or stos fist inc jns fist inc je aad xor (bad) stc sub mov jmp dec js xlat push outsl mov mov iret in or inc pusha jge mov movntsd sbbl jb lods into jmp add and pop jp mov in inc mov pusha mov push mov ds ja mov ljmp mov jmp and pop jp mov in or dec sbbl popf mov dec sbbl popf mov dec data16 lahf mov dec sbbw dec push mov xor mov xor mov xor mov ss outsl mov pop cmp ja mov ljmp mov in or mov in or inc pop jl mov out or inc pusha jl mov out or push cmpsl or jae lods enter cmp xchg scas lret and pop jbe scas int3 call ja mov ljmp mov in or pop test push dec add add out push add cmp mov mov loopne and and xchg (bad) push fmuls inc je in inc je aad insl pushf int3 add arpl add jae in sub loopne push mov add jae jmp adc sar popa nop ret arpl movsb loope stos jecxz dec add sub sub ret repz cmpsl ficoml inc jb in pop fwait xlat add push mov add js testl inc jl std cmp lock and mov loope jno out outsb scas out sub aaa jb ljmp mov loopne arpl ljmp mov add int3 or xchg lret add mov ret stc sub xchg lret imul add push xchg (bad) stc xor in sub test sub rolb das popa cltd fcoms cmp (bad) pop jae lock xchg leave cld cs ret lock jbe mov lock sub sbbl lahf mov dec test notb das dec push inc pushf ret pop xor insl mov cmp (bad) lods enter cmp nop lods cld xor or cmp (bad) or jge icebp sub mov push mov add pop xchg fcoml and jne scas lret call ja mov ljmp mov jmp and pop jns mov movntsd sbbb iret add je fstl test mov xor (bad) loopne sbb push jo test add add loope pop cmp jne scas lret out and lret call ja scas int3 call ja scas int3 call jbe scas int3 call ja mov in or mov out or inc pusha jge in and (bad) imulb pop xchg lret jb cld sbb push jno stos (bad) jecxz sbb push jb stos enter aas pop js mov ljmp mov in or mov out or inc pusha jl mov out or inc test aam push add dec insb mov add push jb stos (bad) in sbb stos (bad) in sbb stos enter cmp nop lods leave in push cmp xchg lods lret and mov in or inc pop jnp mov out or inc pusha jge mov out or inc popa jge mov lock fimull xchg mov add add or adc mov dec data16 lahf mov dec data16 lahf mov dec data16 lahf mov dec andl adc cmpl (bad) cmc adc dec push movsl rcr sbb (bad) jecxz sbb push jb stos enter cmp xchg scas int3 call js mov lock inc bound mov inc sbbb dec sbbl mov das dec push notl xor add jmp and pop jns mov shr or inc pusha jge mov or xchg popf mov dec sbbl lahf mov dec insb mov xor mov xor insl mov xor insl mov xor add ret loopne sbb enter push aam cmp sbb push jo test cmp mov cmp (bad) lods enter cmp scas repnz fistl inc jle add sbbl mov xor mov xor xchg xor mov push jno stos (bad) jecxz sbb push jb lods leave in pop cmp jne scas lret call ja mov jmp jns mov jmp and pop jp mov lock inc add lahf mov dec add movsb rcr pop xor mov xor (bad) aaa push jno stos leave in pop cmp js mov ljmp mov in or inc pusha jl mov out or inc popa jle mov dec sbbw cmc adc dec push cld sbb (bad) in sbb lods enter cmp xchg scas int3 jmp js mov jmp and pop jp mov in or mov dec push notl dec push mov xor insl mov ss jo test cmp (bad) lods leave in pop inc popa jg mov dec sbbl dec push jbe std pop cmp jbe mov jmp and pop jp mov in or inc pusha jl mov dec imul jb lods leave add pop and pop jp mov in or inc pusha jge mov lock pushf mov dec imul cmp mov cmp mov fstl dec test enter cmp jbe scas int3 jmp jns mov in or mov lock inc arpl mov dec gs sahf mov mov out es nop leave stc ss or inc pop jl mov out or inc pusha jge mov out or inc bound mov dec sbbl movsl ret pop xor outsb add sbb stos enter cmp (bad) lods enter cmp pop jns mov in or lahf mov dec push notl dec push mov xor mov xor mov xor (bad) loopne sbb stos enter cmp je lods leave out and int3 call ja mov jmp jns mov in or inc pusha jl mov add sub andl dec imul xchg push insl mov cmc adc dec imul lea cmp xchg scas int3 jmp jns mov in or mov out or inc arpl adc dec imul mov cmp (bad) stos add call js mov jmp and mov in or inc pusha jl sahf mov dec imul test cmp iret jmp and pop jp mov in or inc arpl adc andl dec imul (bad) stos enter cmp int or mov icebp push sub sbbl mov xor mov add (bad) loop sbb pop ja mov in or inc pusha jl mov movntsd sbbl out dec xorl insb mov mov icebp and stos loope inc ja out and add sub into or mov and inc xorb adc mov sbb mov cld xor sahf aam aas outsl mov mov stos fimul aas insl movsl fistl mov dec je scas lret stc push (bad) fldl add cmp xchg mov add push sub sbbl mov xor mov xor mov push insl mov cmp (bad) lods enter cmp xchg scas lret out and int pop and jp mov lock adc es xchg (bad) (bad) cmp hlt adc dec push clc adc movsb rcr pop xor (bad) loopne sbb push outsl mov cmp (bad) lods leave in and jns mov out or inc popa jle mov icebp push sub sbbb dec gs lahf mov dec test notl movsb (bad) cmp or (bad) cmp xchg scas lret and add mov in or inc pusha jge mov lock inc arpl mov add mov add push jne scas lret call js mov in or mov out or inc bound mov dec andl push outsl mov cmp nop lods lret and into out or inc popa jge mov icebp adc data16 sahf mov add cs push cld sbb push jb lods enter cmp xchg mov ljmp mov jmp and or movsb fmuls jne loopne push mov adc pop js mov jmp and pop jnp mov out or inc popa jle mov inc sbbb dec data16 xor mov cmp int3 jmp jns mov out or inc sbbl mov ss outsl test (bad) daa inc andw xor lods lret and pop js mov jmp and mov out or inc arpl cvttps2pi (bad) lahf mov push outsb mov cmp nop lods lret and int or pop jnp mov out or inc popa jle mov add cvttss2si andl push insb mov ss jo stos (bad) jecxz sbb scas lret out and pop js mov in or inc pusha jge mov icebp cvttps2pi xchg xor mov ss outsl mov cmp xchg scas lret and pop jns mov in or inc pusha jge mov icebp adc mov push outsb mov cmp xchg scas lret call jp pushf mov dec push stc push xor mov cmp jns mov in or inc add mov dec imul mov aaa push jno stos enter cmp shr or inc popa jle mov dec sbbl mov xor mov add loope sbb push jno stos enter aas pop jp mov in or inc bound mov dec test notl dec imul xor (bad) in sbb scas iret in or inc pusha jge mov lock mov xor outsb mov cmp nop scas int3 jmp jnp mov out or inc arpl adc dec insb mov cmp xchg scas int3 jmp jp mov out or inc add mov xor jo lods leave out and jnp mov out or add test add push jno lods lret call jp mov out push sub xchg cmp int or inc fs sahf mov dec push movsl ret sbb push je lods lret and pop js mov in or sub jg mov dec push movsl (bad) sbb scas int or inc arpl cvttps2pi enter xchg ret push xchg mov cmp xchg mov lock popf mov dec imul mov sub sbbl dec push mov xor mov cmp mov cmp jbe scas int3 jmp jns mov jmp and pop add mov dec test cli pop xor outsb mov cmp pop jbe scas int3 jmp popa jle mov dec test inc jbe repz jg push push mov outsb mov ss jo mov adc mov push dec pushf aam pop add cli xor in xor stc xor scas divl jl call jmp test or fwait xlat sub sbb stos ljmp or mov in or inc pusha jl mov cmc adc xor mov xor ret loopne sbb push outsl mov ss outsl mov aaa push jno stos (bad) jecxz pop cmp jne scas lret call ja mov ljmp mov jmp and pop jp mov in or pushf mov dec sbbl movsb rcr push xor jo stos (bad) jecxz sbb add xchg mov ljmp mov jmp and pop jns mov in or mov lock pushf mov dec sbbl mov mov dec push clc adc dec push movsb rcr sbb push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out pop cmp jne scas lret and shr or inc pop jl mov out or inc pusha jge mov out or inc popa sbbb sbbw dec push notb xor mov ss outsl mov aaa push jno stos (bad) jecxz sbb push jb stos enter cmp (bad) lods enter and pop js mov out or inc popa jle mov clc cmp jp mov in add andl xor insl mov aaa push jo test cmp nop lods leave jmp and pop jp mov in or mov out or inc popa jg mov add icebp cvttps2pi sbbl dec test cli push xor insl lea cmp (bad) lods enter cmp nop lods leave out pop cmp jne scas lret out and int3 jmp js mov ljmp mov out or inc arpl adc mov dec push mov xor mov xor outsb mov cmp xchg scas lret out fwait into push xor xchg iret adc dec imul out push arpl xchg ret imulb add fist dec icebp sub mov mov push dec jnp jmp dec jnp add sbb (bad) pushl add xchg lret pushf fmuls cmp cmc and or sub (bad) mov das dec push clc adc xor mov xor (bad) sbb push jb stos leave in and jns mov jmp and pop jp mov in or inc pop jl mov out or inc popa jge mov lock inc arpl push sub sbbl movsl ret sbb push outsl mov mov addr16 cmp aaa jbe in sbb jg fist inc jnp or cmp out push (bad) add xchg mov ljmp mov in or mov out or inc pusha jge mov movntsd dec jno stos (bad) in sbb lods leave in pop cmp xchg scas lret add mov in add sub (bad) sahf mov dec sbbw dec imul xor mov xor outsl mov aaa push jo mov cmp icebp xor sub xchg aaa push jo test cmp (bad) stos enter cmp nop scas lret out and int3 jmp jns mov in or mov and push mov add or aam dec jge fmull pop dec xorl (bad) ret pop xchg (bad) pushfw rolb add mov dec andl adc dec push stc push xor mov xor insl mov cmp pop jbe scas int3 call js mov jmp and pop jp mov in or sub jg mov xor xchg xor xchg push outsl lea cmp (bad) stos add add in sbb lods leave in push cmp xchg lods lret pop cmp jbe scas int3 call jnp mov out or inc bound mov inc sbbb dec gs sahf mov dec push notb xor mov xor insl mov xor outsb mov aaa push jno stos enter cmp nop lods leave out and jbe mov jmp jns mov out or inc bound mov icebp or popf mov dec test xor mov xor outsb mov cmp jbe scas add in or inc popa jge mov lock inc sbbb dec push loope sbb pop jne xchg mov out or inc bound adc dec imul adc add add mov xor adc dec jp fbld int imul std inc (bad) mov icebp or stos hlt sub cmp loope xchg stc push xor jecxz imul xchg push insl mov cmp nop lods leave in pop cmp jne scas lret call js mov ljmp mov in or mov out or inc pusha jge mov dec gs fistl dec lcall test cltd in push cltd (bad) push xor mov aaa push jno stos (bad) jecxz sbb mov jmp popa jge mov out or inc bound mov inc arpl mov das dec imul jo test cmp xchg lods lret pop add cmp je scas lret and pop js mov ljmp mov in or jne in dec test add cltd mov out or inc popa sbbl lahf mov dec andl adc dec push movsb rcr push xor mov cmp lea cmp ficoml pop sbbb dec data16 lahf mov dec andl adc dec test notb das dec insb mov xor outsb mov xor (bad) loopne sbb (bad) ss outsl mov cmp lea cmp int3 call pop jnp mov in or inc pusha jge mov lock inc bound mov add adc mov xor mov aaa push jo add cmp lea cmp mov cmp mov mov sbb mov adc push jo stos (bad) jecxz sub movsl fnstenv pop js mov jmp and pop jp mov in or inc pop jl mov out or inc popa jle mov icebp or mov das dec push notb xor mov int or inc popa jle mov lock inc bound mov inc arpl adc dec imul test xor xchg xor xchg push insl mov xor jno stos (bad) in sbb fdecstp adc xor mov xor insl mov xor ret loopne add lods enter and jge mov add add or inc popa jle mov inc sbbb inc sbbb insl xchg scas lret call jbe mov jmp jnp mov in or inc pop jnp mov out or inc pop jnp mov in or inc pusha jl mov out or inc pop jl mov out or inc pusha jge mov dec gs lahf mov dec sbbw dec push notb xor mov xor xchg xor (bad) loopne sbb push outsl mov aaa push jo test gs int3 or aam jne out xor int3 add mov or cwtl mov xor out cvttps2pi (bad) lahf mov dec add aam inc mov adc cmpsl call push mov add cwtl (bad) sbb add sub stc inc popa scas add ss add mov adc daa movsb fsubl pusha lcall dec pushf fisttpl xor jno clc inc test stc push xchg into push pop xchg jecxz aaa push jno stos (bad) in sbb lods lret lret out and pop js mov jmp and mov out or inc bound mov dec push notl xor xchg xor mov cmovbe and into add pop push xchg fdivrp sbb data16 jmp mov dec sbbl lahf mov dec andl adc add mov mov push dec mov jmp outsl ret add xchg int pop xchg fistp pop lods shr cmp sti jns,pt or adc out cs in imul add add and (bad) lock or aam mov (bad) lods enter cmp jne scas int3 jmp jp mov in or inc pop jl mov dec gs sahf mov dec data16 mov rorl inc js std xor fstl push xchg into push push cltd fcoms dec cltd out cmp out and lcall sub into or mov xchg mov in es jp mov in or inc pusha jge mov lock aad andl dec push notl xor xchg xor xchg xor xchg aaa push jo add inc pop jns mov jmp and mov in or mov in or inc pop jl mov out or inc popa jge mov out or inc bound jle mov dec data16 lahf mov dec andw dec test notb das dec push notl dec imul mov ss outsl mov aaa push jo test cmp stos (bad) in sbb stos enter cmp nop lods int3 call js mov ljmp pop pop test in sbb lods leave in and jne scas lret out and lret call jnp mov in or inc pop jl mov out or inc pusha jl mov out or inc popa jle mov lock inc bound mov lock andl aaa push jo test cmp mov cmp mov lock fwait mov inc arpl push add inc andl dec push notl dec imul xchg or jo (bad) sub (bad) sahf mov dec data16 lahf mov dec imul xor mov dec insb mov xor insl mov xor insl mov xor (bad) in sbb stos leave in push cmp nop lods leave out pop cmp xchg scas lret and jne scas lret out and jbe scas int3 call jp mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jl mov out or inc popa jle mov lock inc bound lahf mov add mov cmp (bad) stos enter cmp nop lods leave in push cmp xchg scas lret out and jne scas add lret out and iret in or mov in or mov out or inc pusha jle mov lock inc bound mov lock pushf mov dec test notb das dec push clc adc dec imul xor insl mov cmp stos (bad) in sbb push jae mov jmp js jecxz dec adc push cmp nop lods leave in push cmp nop lods lret and jne scas lret call jbe mov in or inc pop jl mov xor leave pushl cwtd leave add outsb mov xor aad inc mov push jno stos (bad) jecxz xor jmp fdivrp sbb add fstpl (bad) aaa push jno stos (bad) jecxz sbb push jb stos (bad) in sbb lods enter cmp add jne scas lret call jnp mov in or inc pop jnp mov in or inc pusha jl mov lock inc bound mov icebp or pushf mov inc subl js mov ljmp mov in or mov in or mov out or inc pusha jge mov out or dec andl adc dec test notb xor mov xor xchg xor xchg push insb mov cmp stos (bad) jecxz sbb push jb stos (bad) in sbb stos enter cmp nop lods leave out and jbe scas lret call jns mov in or pushf mov xor xchg xor xchg xor (bad) loopne add sbb push outsl mov cmp (bad) lods leave out pop cmp xchg lods leave out pop cmp jne scas lret out and pop ja mov jmp js mov jmp and pop jns mov icebp or pushf mov inc sbbb dec sbbl sahf mov dec andl adc dec imul xor jno stos (bad) jecxz sbb push jb out and leave push dec push movsb ret sbb insl mov ss outsl mov cmp jne scas lret call ja mov ljmp mov add cmpsl fldt pop jl mov out or inc popa jle mov dec push clc adc dec push lea add pop js mov jmp and pop jns mov in or mov out or pushf mov dec imul xchg xor mov xor (bad) ss outsl mov cmp xchg scas lret call jbe scas int3 call ja mov jmp js mov jmp jns mov ljmp mov in or inc bound mov inc sbbb inc gs sahf mov dec test notl xor mov xor xchg xor insl mov ss outsl mov ss jo test aaa push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb pop jne scas lret and lret call pop jp add dec gs sahf mov dec data16 sbbl dec test clc adc movsb rcr push xor mov xor (bad) aaa push jo test cmp (bad) stos enter cmp xchg mov ljmp mov jmp and pop jns mov jmp and mov in or mov out or inc popa jge mov out or dec andl adc dec push js adc dec insb mov xor (bad) sbb push jno stos (bad) jecxz sbb push jb mov ljmp mov inc jg out es mov dec test lcall cmp xchg mov ljmp mov jmp and pop jp mov inc arpl push sub sbbb xor add sbb push outsl mov test loope sbb push jo stos (bad) jecxz sbb pop je lods lret and jne scas lret out and jne scas int3 jmp js mov ljmp insb pushf mov dec andl push xor mov xor mov xor mov xor insl mov lods cld and pop jp mov in or inc bound mov inc arpl push sub sbbb inc sbbb dec sbbl mov das dec push notl xor mov xor xchg xor xchg xor xchg xor (bad) sbb push jo test aaa push jo test pop cmp add mov add jmp and mov in or mov icebp or fwait mov inc arpl mov inc arpl mov inc arpl push sub sbbb test notb das dec push notl dec imul test xor xchg xor xchg push outsl mov aaa push jo test cmp test cmp stos (bad) jecxz sbb push jno test cmp lods lret pop cmp jne scas lret and jne scas lret and pop jbe scas int3 call jbe scas int3 call ja mov jmp jp mov out or inc pop jl mov in or inc popa jge mov lock sub add xor mov dec imul ss outsl mov ss outsl mov ss outsl mov ss outsl mov aaa push jo test loope sbb push jae lods leave in pop cmp xchg scas lret and jne scas lret and jge cmp (bad) cmp cmp inc jb fmuls push xchg int3 add insb sahf into add insb mov popf (bad) or imul rorl xchg fistp push mov add jbe loope pop xchg lret or pop insb mov cmpsb ficom jle icebp and and mov enter mov mov (bad) cmpsl loopne dec test std inc xchg cli xor fimull aas outsl mov cltd enter xor stc xor jbe ljmp push xor mov push jae lods lret pop cmp jne scas lret and jbe scas int3 call js mov ljmp mov jmp daa inc popa jge mov lock inc bound mov inc sbbb dec sbbl sahf mov dec andw adc fiadd pop cmp jne scas int3 jmp ja mov ljmp mov jmp and pop jp mov in or mov dec sbbl lahf mov dec andl adc dec imul xchg xor (bad) loopne sbb push outsl mov ss outsl mov aaa push add test pop cmp jne scas add in or inc pop jnp mov icebp or pushf mov dec data16 lahf mov dec sbbw dec push notb das dec push notl dec insl mov xor (bad) loopne sbb push outsl mov aaa push jo stos (bad) jecxz sbb push jb stos enter cmp xchg lods lret and pop js mov ljmp mov in or inc bound loopne dec jns fisttpl aas outsb movsl sbb mov das addr16 sar xor adc lods jmp pop pop stc xor fistl dec cmpb mov dec data16 mov xor xchg dec insb mov cmp (bad) stos enter cmp nop lods leave out pop cmp xchg scas lret and add add jbe scas lret call ja cwtl mov in or add sbbl mov xor xchg xor mov xor insl mov xor (bad) sbb push je lods lret and jne scas int3 call js mov jmp es out jno shr or inc pusha jge mov out or inc popa jge mov repz gs sahf mov dec sbbw dec andw dec push testb das xchg mov bound fistp pop ret cmc sub sub mov (bad) outsb nop lods lret cmpl cmpl pop push mov add cwtl iret pop pop xchg loop dec imul sbb push jo test add add sbb push jb stos enter cmp xchg lods lret or add jae lods leave out pop cmp jne scas lret and lret call ja mov sbb push dec xchg fisubr dec test sti sbb (bad) loopne sbb push outsl mov aaa push jno stos (bad) in sbb lods enter cmp nop lods leave out pop cmp jne mov jmp and pop jns mov in or mov in or mov out or inc bound mov lock fwait mov dec test notl xor xchg xor insl mov cmp (bad) stos enter cmp xchg lods lret and pop js mov out or inc bound adc movsb rcr sbb add outsl mov cmp (bad) lods lret and jbe scas lret jmp pusha jg mov xor mov push outsb mov aaa push jo test cmp xchg mov jmp jns mov jmp sub jle mov dec andl dec push movsb rcr sbb push jno lods leave out pop cmp xchg mov jmp and mov icebp cvttps2pi andl dec imul cmp test divl adc dec imul xor mov (bad) repz and int push and jns mov in or mov out or inc popa jle mov icebp push sub test xor xchg push insl mov add (bad) sbb (bad) ss outsl mov cmp stos (bad) jecxz add pop jp mov aam push sub sbbl lahf mov dec test notl xor mov xor xchg xor (bad) loopne sbb push outsl mov cmp (bad) stos enter jne hlt cmp fisttp inc test cmp jo (bad) sbb push outsl mov ss outsl mov aaa push jo test cmp stos (bad) in sbb stos (bad) in sbb scas lret call ja mov jmp ja mov jmp ja mov jmp js mov ljmp mov ljmp mov out or inc pop jl mov in or add inc pusha jl mov out or inc pop jnp mov in or inc pop jl mov out or inc popa jge mov xor mov cmp mov cmp mov cmp stos (bad) loop sbb push jno stos (bad) in sbb pop jbe scas lret call jbe scas int3 jmp ja mov adc sbb push jo test cmp stos (bad) in sbb scas int3 jmp ja mov ljmp mov out or inc pusha jge mov out or inc bound mov icebp push sub jg mov dec push notl dec imul xchg xor in dec sbb insb mov int push daa inc popa jle mov inc arpl mov add sub sbbb dec sbbl sahf mov dec data16 sahf mov dec push mov sbb lods enter cmp xchg fcoml dec xorl inc pop jl mov in or inc pop jl mov repnz sub sbbl popf mov dec sbbl sahf mov xor xchg xor mov xor insl mov xor ret (bad) sbb outsb mov xor ret (bad) sbb (bad) loopne sbb push jno stos (bad) jecxz sbb push jno stos (bad) loop sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jno lods lret pop cmp lahf fcoml dec (bad) mov add add sub add dec jl fstl dec ja xlat or push dec jns aad xor test rorb inc jns loope push mov iret add inc je ficom (bad) mov push push mov jno stos (bad) in sbb lods shr or inc pusha jl out sub xchg scas lret out and pop ja mov jmp loopne gs mov dec cltd out push movsl add movntsd andl mov xor xchg dec imul xor rcrb mov out or inc pusha jge mov dec sbbw dec test notl xor xchg xor xchg xor mov push outsl mov cmp add stos (bad) jecxz sbb stos add jmp ja mov ljmp mov jmp and jns mov out or inc pusha jge mov out or inc popa jle mov lock pushf mov dec sbbl mov das dec push stc push xor mov xor insl mov xor ret loopne sbb vpaddd cmp mov and pop jp mov jmp and mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jge mov dec gs lahf mov dec andw dec push notb das dec push notl xor mov xor mov xor add outsb mov aaa push jo test add jne scas lret out and int3 call jbe mov jmp and mov in or inc pop jl mov out or inc popa jle mov lock popf mov dec sbbl mov xor xchg xor mov xor insl mov popa xchg lret cmpl ret add cmp jne scas lret out and lret call jbe scas int3 call jbe mov jmp ja mov jmp js mov in or inc pusha jge mov out or inc popa jge mov lock fwait mov icebp or pushf mov inc arpl comiss test adc dec imul xchg xor add sbb push outsl mov cmp xchg lods int push and pop js mov ljmp mov ljmp mov jmp and pop jnp mov in or mov in or inc arpl push sub sbbb dec gs sahf mov dec andw dec test notb das dec push std sbb push outsl add pop cmp int3 jmp js mov jmp and pop jns mov jmp and pop jp mov in or mov lock inc bound mov inc sbbb dec sbbl sahf mov add dec data16 lahf mov dec insb mov add add xor insl mov xor (bad) sbb push jo test pop cmp int3 jmp js mov out or inc pusha jge mov lock pushf mov dec sbbl mov cs push mov out or inc popa jle mov lock fwait mov icebp or fwait mov dec sbbb dec sbbl mov xor add aaa push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos (bad) in sbb lods enter ds ja mov std aas jns adc dec push mov xor xchg dec insb mov xor mov ss jae lods leave add add cmp aam dec mov icebp or pushf mov dec gs sahf mov dec data16 adc movsl shl sbb push jno stos (bad) jecxz sbb push jb stos (bad) in sbb cmovl dec test notl xor xchg xor lea cmp (bad) stos enter cmp jbe scas int3 call js mov ljmp mov in or mov lock sahf mov dec add mov xor xchg dec insb mov ss outsl mov aaa push jno lods lret and jbe scas int3 call jp mov in or mov out or inc pusha jge mov out or inc bound mov lock add lahf mov dec test notl dec push mov xor mov xor les in push cmp xchg lods int pop and jns mov in or mov in or inc pop jl mov out or inc popa jle mov lock fwait mov dec push clc adc dec imul xor mov xor (bad) loopne sbb push outsl mov cmp mov ds ja mov jmp and pop jp mov add or popf mov dec data16 lahf mov dec andl adc dec push cmpsb ret (bad) sbb push outsl mov aaa push jno test cmp nop scas lret and int3 jmp js mov jmp and add lcall bound mov inc sbbb dec gs sahf mov dec push notb das dec add cmpsb ret sbb push jb stos (bad) in sbb lods leave out pop cmp jne scas lret out and int3 call js mov ljmp mov lock inc arpl movntps sbbl mov xor mov xor xchg ss outsl mov aaa push jb stos (bad) in sbb xchg mov jmp js mov jmp and pop jp mov in or mov icebp or popf mov dec sbbl lahf mov dec test notl dec push mov add xor mov jo stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos enter cmp (bad) lods enter cmp nop lods leave out add inc pop jl mov out or inc pusha jl mov out or inc pusha jl mov out or inc bound mov lock pushf mov inc arpl adc dec test notb das dec imul xchg xor xchg xor xchg xor mov cmp mov cmp (bad) lods enter and pop js mov ljmp mov jmp and pop jp mov out or inc popa jle mov lock inc bound mov lock fwait mov inc arpl movntps sbbl add add sub rcr push xor mov xor mov xor insl mov ss outsl mov aaa push jno loop push mov stos enter cmp nop lods lret pop cmp xchg scas lret and lret call js mov ljmp mov out or inc popa jg mov inc arpl adc dec push notl dec imul xchg xor mov xor (bad) ss outsl mov cmp mov scas lret call jbe scas int3 call ja mov jmp jp mov in or inc pop jnp mov in or inc pusha jl mov out or inc popa jle mov dec sbbw add adc dec test cli pop xor mov xor insl mov xor (bad) ss outsl mov aaa push jo test cmp jne scas int3 call pusha jge mov out or inc popa jge mov out or inc popa jle mov inc arpl push sub sbbb dec push notl xor mov xor mov xor ret (bad) sbb (bad) loopne sbb enter cmp jne scas lret and jne scas lret out and int3 call pop jnp mov in or inc scas out xchg mov lock inc bound mov lock inc bound mov lock sbbl mov add xor mov aaa push jno stos (bad) jecxz sbb push jb stos enter cmp (bad) stos enter cmp nop lods leave in sbb lods leave in sbb scas int3 call ja mov jmp pop jl mov out or inc pop jl mov out or inc pusha jge mov out or inc pusha jl mov out or inc sbbl jno (bad) dec jge loopne outsl popf rorl dec jnp loopne inc jp (bad) jp ljmp outsb lods loope push (bad) mov mov rcrb inc pusha jl mov out or inc popa jle mov lock fwait mov das dec push notl push outsb mov ss outsl mov aaa push jno stos (bad) jecxz sbb push jno stos (bad) in sbb lods add add out pop cmp jne scas lret and pop jp mov in or mov in or mov in or inc pop jl mov out or inc pusha jl mov out or inc popa sbbb dec data16 lahf mov add mov xor insl mov ss outsl mov aaa push jo test cmp nop lods leave out pop cmp xchg lods lret and int3 call ja mov jmp jp mov in or mov lock pushf mov inc sbbb dec sbbl lahf mov add mov push jo test aaa push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp add push cmp xchg lods lret and js mov jmp and pop jns mov jmp and pop jns mov in or mov in or inc pop jnp mov out or inc pusha jg mov inc arpl cvttps2pi sbbl xchg xor xchg dec imul aaa push jo stos (bad) in push cmp nop lods leave in pop cmp jne mov jmp jns mov jmp and pop jns mov sbb jle out push pop clc sub enter popf rolb insl mov movsb xlat or jae ficoml inc jbe loopne andl dec add cmpsl ret loopne push cmp nop scas lret pop cmp jne scas lret call jbe mov jmp ja mov jmp add xchg mov jmp jns mov out or inc pusha jl mov out or inc popa jge mov out or inc bound mov lock pushf mov inc cltd loopne dec test rcr push xor mov xor (bad) push cmp nop lods leave out pop cmp jne lods lret and jbe scas lret call jnp mov in or inc pusha jge mov lock inc bound mov clc sub mov mov sbb xchg (bad) repz lock (bad) hlt daa bound mov xor cmovbe mov lret pop xchg enter xchg lret jns mov mov mov into pushl bound stos fistp dec mov add add and xor mov mov aam cmp push mov add (bad) icebp and mov (bad) xor fsts inc jp fimul aas jb int and add bound ja sar sub mov or push dec jbe iret sti daa push add insb cltd (bad) mulb subb enter (bad) mov or imul cs mov sahf lret clc es test mov sbb inc scas ljmp daa jno daa jns or xorl mov hlt sub pushf rorl cmp mov sub fdivr push popa fwait std push cmp jne scas lret in or add sbbb lret sub lcall popa jle mov lock add sub cmpsb fisttpl cmp int inc arpl push das dec imul xchg dec insb mov xor mov xor insl mov xor insl mov cmp (bad) stos enter cmp nop lods enter xorb push and sahf mov dec test notb das dec insb mov xor insl mov ss outsl mov aaa push jo test cmp mov cmp (bad) lods enter ds ja mov ljmp mov jmp and pop jp mov in or mov in or inc pusha jl mov out or inc bound mov dec add movsb rcr pop xor mov xor (bad) (bad) sbb push jo test cmp stos (bad) in sbb scas int3 call js mov ljmp mov jmp and pop jp mov in or mov in or inc pusha jl mov repnz sub sbbb dec sbbl mov das dec imul outsb mov cmp xchg scas lret adc and mov in cmp lods loop dec cwtl mov dec imul xor mov xor insl mov cmp nop lods leave in pop cmp jne scas int push and pop jns mov jmp and pop jns mov in or mov out or inc arpl adc mov xor mov xor add add ret sbb insl mov ss outsl mov cmp xchg lods lret and jbe mov jmp js mov ljmp mov in or mov in or inc pop jg mov inc arpl mov dec sbbl sahf mov dec andl cli push xor mov cmp mov cmp (bad) lods enter cmp mov in or inc pop jl mov out or inc pusha jl mov out or inc popa jge mov hlt adc mov dec sbbw dec test clc adc dec push mov sbb ret loopne sbb enter cmp xchg scas lret out and jne scas lret out and add add xchg scas lret out and add in or mov in or inc popa jle mov lock fwait mov lock sub sbbb arpl push sub sbbb inc andb dec test notb das dec push notb das dec test cmc adc dec push daa pop xchg int3 adc rcr sbb push jb stos enter cmp (bad) lods enter cmp nop lods leave out pop cmp jne scas lret pop cmp jne scas int3 call ja mov in or inc pop jl mov out or inc pusha jge mov lock fwait mov lock pushf mov cs test notb xor mov xor insl mov xor les add std sbb push outsl mov aaa push jo test pop cmp je scas int and mov out or inc popa jle mov inc arpl movntps sbbl sahf mov dec xchg cli pop xor mov xor insl mov xor ret loopne sbb push outsl mov cmp (bad) lods leave in and pop js mov ljmp mov jmp and pop jp mov in or mov in or inc pop jnp mov in or inc pusha jl mov dec gs lahf mov dec sbbw dec test notb das dec push notl dec push add ss jae lods lret and int push and pop js mov add into jmp and pop jns mov in or mov in or inc pop jnp pushf mov dec push notl dec push mov xor xchg push insb mov xor outsb mov ss outsl mov cmp nop lods leave out pop cmp xchg lods lret pop cmp jne scas lret call ja mov jmp jns mov jmp daa inc pusha jge mov out or inc popa jle mov lock inc bound mov inc arpl mov dec sbbl sahf mov dec imul xor mov xor insl mov xor (bad) ss jno stos (bad) jecxz add ds jp mov in or mov in or inc pusha jl add add sub jle mov inc arpl push sub sbbl mov xor ret loopne sbb push outsl mov aaa push jno stos (bad) jecxz sbb push jb stos enter cmp xchg scas int3 jmp ja mov ljmp mov jmp and pop jp mov in or mov in or inc pop jge mov out or dec sbbl lahf mov dec andl adc dec push notl xor mov xor xchg push outsb mov ss outsl mov aaa push jno test cmp mov cmp (bad) lods enter cmp add es pop jl mov out or inc add pusha jge mov out or inc popa jle mov dec gs lahf mov dec imul add push cmp nop lods leave out pop cmp xchg lods lret pop cmp jne scas lret out and pop ja mov jmp and pop jp mov out or inc arpl mov dec data16 lahf mov dec andl adc dec imul xchg xor vpaddd aaa push jno stos (bad) in sbb lods enter cmp xchg lods leave out pop cmp xchg lods lret and jbe scas iret jmp and pop jp mov in or inc pop jl mov out or inc bound mov lock fwait mov inc arpl cvtps2pi xchg sbb (bad) add add push jo stos (bad) in sbb stos enter cmp int3 jmp js mov ljmp mov out add sub mov dec andl adc dec push mov xor mov xor movl pushf mov dec sbbl lahf mov dec push notb xor mov xor (bad) ss outsl mov cmp mov cmp mov cmp nop lods leave out pop cmp jne mov jmp and pop jnp mov in or inc pusha jl mov out or inc popa jge mov out or inc bound mov lock pushf mov dec test notb xor push outsl mov add loope sbb push jo test cmp stos (bad) in sbb lods leave out pop cmp xchg lods int push and jp mov in sub push xor mov xor outsb mov ss outsl mov cmp stos (bad) in and pop js mov jmp and mov in or inc pop jl mov out or inc popa jle mov lock pushf mov inc andl mov xor mov xor insl mov xor (bad) sbb push jno stos (bad) in sbb mov jmp js mov jmp and pop jnp mov in or inc pop jl mov out or inc popa jge mov lock inc bound mov dec test notl xor dec add cmpsl ret loopne sbb push jo test cmp stos (bad) in sbb lods lret jmp jge mov lock popf mov dec add mov xor xchg dec insb mov xor insl mov cmp xchg scas lret call ja mov ljmp mov jmp and pop jp mov in or inc pop jl mov out or inc popa jle mov dec test notl dec push mov xor mov xor insl mov ss outsl mov aaa push je lods lret and jne scas lret call ja mov ljmp mov in or inc pop jl mov out or inc bound mov dec push notl add xor xchg sbb push jo test cmp (bad) lods leave out and jbe scas int3 call js mov in or inc pop jl mov out or inc popa jge mov add adc dec test notb xor mov xor (bad) cmp nop lods lret and int3 jmp js mov ljmp mov in or inc pop jnp mov out or inc popa jle mov hlt adc mov dec imul xor insl mov xor (bad) aaa push jo test cmp xchg scas lret out and int3 jmp js mov ljmp mov in or inc pusha jl mov out or inc bound mov dec test testl adc dec push movsl ret loopne sbb push outsl add pop cmp jne scas lret call ja mov jmp and pop jp mov icebp cmp stos fcoml inc jns jecxz dec cmpl inc add fwait mov icebp push sub sbbl mov xor (bad) loop sbb push jb stos enter cmp xchg scas lret out and pop js mov jmp and pop jp mov in or inc pusha jl mov movntsd sbbl mov xor xchg xor mov xor vpaddd dec fwait (bad) or cmp (bad) lods leave out inc jl clc push jbe mov jmp js mov in or mov in or inc pop jnp mov movntsd sbbl add add dec gs sahf mov dec andl cli push xor mov xor insl mov aaa push jo lods leave in pop cmp xchg lods lret and jbe mov jmp and pop jns mov aam or pushf mov inc sbbb push notl dec push mov xor mov push insb mov xor mov xor insl mov cmp (bad) stos enter cmp (bad) lods leave in push cmp xchg lods lret pop cmp je scas lret and jne scas lret and jns mov jmp and pop jp mov in or mov in or inc pop jnp mov in or inc pusha jge mov lock inc bound mov dec push add das dec push notb xor mov xor push insl mov xor outsb mov xor outsl mov cmp nop lods leave out push cmp nop lods lret pop cmp xchg lods lret pop add jp mov in or inc pop jnp mov in or inc bound mov icebp or lahf mov dec sbbw dec andl adc dec push clc adc dec push mov xor (bad) aaa push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp nop lods lret pop cmp dec mov repz adc mov dec imul xor (bad) sbb push jb stos enter cmp xchg mov add add out or inc popa jge mov lock inc bound mov dec sbbl xchg xor mov cmp mov cmp xchg lods lret pop cmp jne scas lret call ja mov ljmp lcall arpl mov dec push notl dec push mov xor mov xor (bad) cmp stos (bad) in sbb scas lret call ja mov ljmp mov in or mov out or inc pusha jge mov lock inc bound mov dec push mov xor mov xor (bad) loopne sbb push jo test cmp (bad) stos enter cmp xchg add mov ljmp mov in or inc pop jl mov out or inc popa jle mov inc arpl notl xor xchg xor (bad) sbb push jb stos enter cmp xchg scas lret and int push and pop jns mov shr or inc bound mov dec push clc adc movsb rcr pop xor insl mov ss outsl mov cmp stos (bad) in sbb mov jmp and mov in or inc pusha jle mov lock popf mov dec sbbw dec push notl xor insl mov aaa push jo test cmp mov cmp xchg scas lret out and pop ja mov jmp and pop jp add add sub sbbb dec gs lahf mov dec test notb xor mov xor outsl mov cmp xchg scas lret call js mov in or mov out or inc popa jle mov movntsd (bad) sahf mov dec add ret sbb push jno lods enter cmp xchg lods lret out pop lahf fisttpl inc js loop imul cmp ja mov jmp js mov lock sub sbbb dec gs sahf mov dec data16 lahf mov ja mov jmp and pop jp mov in or mov icebp push sub sbbb sbbl lahf mov dec test notl xor xchg add adc test loope sbb push jo stos (bad) jecxz sbb push jno stos (bad) in sbb stos enter cmp xchg lods lret and add mov out or inc bound mov inc sbbb dec data16 lahf mov dec push notl dec imul outsl (bad) lods leave out pop cmp jbe scas int3 jmp ja mov in or mov out or inc pusha jge mov out or inc bound mov lock lahf mov lds xor int3 cld aaa imul add jo fisttpl dec xchg loopne imul aas pop jns mov dec andw dec imul mov xor insl mov ss outsl mov add test loope sbb pop je scas lret and pop js mov ljmp mov in or mov in or inc pusha jge mov out or jp in dec add mov cmp mov cmp nop lods leave out pop cmp xchg lods lret and jbe scas int3 call ja mov out add sub sbbl lahf mov dec andl adc dec push notl dec push mov xor mov ss outsl mov aaa push jo test cmp mov cmp mov cmp nop lods leave jmp js mov ljmp mov in or mov in or inc pop jl mov out or inc pusha jl add add inc popa sbbb dec gs lahf mov dec andl adc dec push notb das dec imul xchg xor lods leave in push cmp nop lods leave out pop cmp jne scas lret call ja mov jmp js mov ljmp mov lock inc bound andl dec push mov xor xchg dec imul xor insl mov fcompl dec test fsubl pusha jge mov out or inc bound mov dec sbbl lahf mov dec test cld sbb vpaddd aaa push cwtl roll cmp cmc aas pop jl mov lock inc bound mov inc add add mov dec imul mov push insl mov ss outsl mov aaa push jo test cmp xchg lods lret and pop jns mov add or inc bound mov inc sbbb dec gs lahf mov out insb movsl (bad) aaa push jno scas lret out and int out or inc popa jle mov lock pushf mov dec sbbl mov xor mov xor (bad) aaa push jo test cmp mov cmp nop lods leave out pop cmp jne scas lret jmp and pop jnp mov out or inc pusha jge mov out or inc bound mov inc arpl adc add dec data16 lahf mov dec xchg cli pop xor outsb mov cmp nop lods leave out and int3 jmp imul (bad) jecxz sbb lods leave out and jns mov in or inc add jmp cvttsd2si (bad) lahf mov dec imul mov ss jae mov push mov cld xor rcrb pop js cltd mov out or inc popa jle mov lock fwait mov icebp or (bad) aaa jno fisttpl cmp into cld daa push subb ficom arpl lods out dec cmpl test mov sbb les push lahf cli push nop shr dec add xchg rclb pop fwait lret cli sub mov loope mov add pop xor mov xor lret and pop ja mov jmp js mov ljmp out insl mov cmp mov cmp xchg mov out or inc pusha jge mov out or inc bound mov inc arpl push sub sbbl mov xor jo stos (bad) in sbb lods enter cmp jne scas lret out and pop ja mov jmp jns mov jmp and pop jp mov icebp or popf mov dec gs sahf mov dec test notb xor mov xor xchg xor mov aaa push jno stos movb add xchg mov jmp jns mov in or jnp mov in or sub sbbb dec push notl movsb rcr push xor mov aaa push jo stos (bad) jecxz sbb push jb stos enter cmp nop lods int3 jmp jns mov jmp and pop jp mov in or inc pop jl mov out or inc popa jge mov out or inc arpl clc adc dec insl mov ss outsl mov cmp stos (bad) in sbb lods leave in pop cmp xchg scas lret and int3 jmp repz cmp nop lods leave in push cmp xchg scas lret and int3 jmp js mov ljmp mov out or inc bound mov lock test xor xchg adc dec push mov xor outsl mov cmp nop lods lret pop cmp jne scas lret out and lret call js mov ljmp mov jmp and pop jp mov out or inc popa jle mov lock inc bound mov inc arpl mov dec sbbl lahf mov xor mov ss outsl mov aaa push jo test cmp stos (bad) in sbb lods enter cmp nop lods leave call js mov ljmp mov jmp and pop (bad) xlat or and enter lcall fs sahf mov push insl mov xor ret loopne add lods lret pop cmp add pop jne scas lret pop cmp jbe scas lret call pop jp mov out or inc popa jle mov lock fwait mov inc arpl mov dec sbbl sahf mov dec imul xchg xor xchg xor xchg xor mov xor mov and lret call jbe scas int3 call jbe scas int3 call ja mov jmp ja mov ljmp mov out or inc bound mov lock fwait mov icebp push sub sbbb sbbb inc sbbb insl mov and aad adc dec push notb das add mov add loopne sbb push outsl mov aaa push jo test cmp xchg mov in or mov in or inc pop jl mov out or inc pusha jl mov out or inc bound mov inc arpl push cs test notb das dec push clc adc mov xor cmpsl repz movsb rcr push xor mov xor outsb mov and pop ja mov jmp js mov jmp jns mov jmp and pop jns mov jmp and pop jp mov in or inc arpl mov inc sbbl lahf mov dec test notb das dec push notl dec push mov test mov ss outsl mov add add int3 jmp jns mov jmp and mov in or inc add adc dec push mov xor mov xor insl mov xor (bad) loop sbb push jno stos lret and pop ja mov jmp js mov jmp and pop jp mov in or mov out or inc pusha jl mov out or inc fs sahf mov xor xchg push insb mov ss outsl mov cmp (bad) lods enter cmp xchg lods lret and pop jns mov in or inc pop jnp mov out or inc popa jle mov lock inc bound mov inc sbbl mov xor xchg xor xchg add push xor mov test cmp (bad) stos (bad) in sbb lods leave out pop ds js mov add or inc popa jge mov lock inc bound mov inc sbbb dec gs lahf mov dec push cli pop xor mov xor (bad) loopne sbb push jo stos (bad) jecxz sbb lods enter cmp nop lods leave out and iret in or pushf mov dec sbbl sub cwtl fldt pop jns mov in or mov in or inc arpl push sub sbbl mov cs test notb das dec push notb xor mov xor outsb mov xor ret add add cld sbb ret loopne sbb cmp nop lods leave out pop cmp xchg lods leave out pop cmp js mov jmp and pop add mov inc arpl cvttps2pi (bad) sahf mov dec andl adc dec push notl xor outsb mov ss outsl mov aaa push jo test cmp mov cmp (bad) lods leave in push cmp xchg mov ljmp (bad) add aaa push jo test cmp mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push je lods lret pop cmp xchg lods lret out and jne scas lret out and lret out and int3 call jbe scas int3 call jp mov in or add mov in or mov out or inc pop jnp add inc arpl push sub andl mov push xor mov xor mov dec imul xor mov push outsl mov aaa push jo test loope sbb lret pushl popfw repz dec test notb das dec push notl xor mov xor outsb mov add nop lods leave out pop cmp jne scas lret out and jne scas lret out and int3 call jp mov in or mov in or inc pop jnp mov in or inc pusha jl mov out or inc popa jle mov lock inc bound mov hlt adc mov add add test cs test notl das dec imul outsb mov ss outsb mov cmp nop lods leave in push add pop jns mov in or mov in or inc popa jge mov out or inc popa jge mov out or dec sbbl popf mov dec gs sahf mov dec gs sahf mov dec sbbw dec sbbl adc movsb rcr adc add aaa push jo stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb pop jne scas lret call ja mov jmp ja mov jmp ja mov jmp ja mov jmp jbe mov jmp and mov add add or inc pop jnp mov in or inc pop jnp mov out or inc pop jl mov out or add sbbl mov xor test xor add sbb ret loopne sbb (bad) loopne sbb (bad) cmp (bad) lods leave out push cmp nop lods leave out pop cmp jne scas lret and jne scas lret call jbe scas int3 call jbe mov jmp and pop jnp mov in or mov add push sub sbbl sahf mov dec gs sahf mov dec imul xchg xor xchg dec insb mov push insb mov xor insl mov cmp add add sbb push jb stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jb xchg mov jmp jl mov out or inc pusha jl cld cmp clc adc mov ss jo test aaa push jno stos (bad) jecxz sbb push jb stos int3 jmp js mov jmp and pop jns mov in or mov in or inc pop jnp mov in or inc pusha jl mov out or inc sbbl lahf mov dec andl cli pop xor insb mov xor insl mov cmp stos (bad) jecxz pop cmp jne scas lret call jns mov in or mov out or inc pusha jl mov lock fwait mov dec andl add add notl dec push mov xor mov push insl mov xor (bad) sbb push jo add inc pop jnp mov in or inc pusha jl mov out or inc bound mov repnz mov dec push notl xor xchg ss outsl iret or sbb cmp (bad) decl leave pop addr16 rcll pop mov (bad) imul inc nop lret mov adc xchg shll pop cwtl aad popa cmpsl repz out outsb mov out outsl scas jmp cmp mov or (bad) in and pop js mov jmp and pop jns mov in or mov in or inc pop jnp mov out or inc popa jge mov out or inc bound add dec sbbw leave repz dec test notb das dec push notb xor mov xor flds pop dec jge loop inc jl loopne inc jl out cmp (bad) push fs rolb cmp adc dec push mov xor mov xor stos (bad) in sbb lods lret and jne scas lret out and int3 call ja mov jmp js mov in or inc pop jl mov out or inc popa jge mov out or inc popa jle mov das dec imul xchg xor mov ss outsl mov ss outsl mov aaa push jo test aaa push jno stos (bad) in sbb lods add enter ds js mov ljmp mov jmp and pop jns mov jmp and mov in or mov out or inc pusha jl mov xor mov xor xchg xor xchg aaa push jo test cmp stos (bad) jecxz sbb pop je lods lret and pop ja mov ljmp mov jmp and inc mov fldcw fs xlat pop pop mov xor mov push push xchg rcrb push mov lret and lret call add mov in or inc pusha jge mov out or inc popa (bad) sahf mov jns jmp test sbb mov punpcklbw in jg std dec mov adc fistl popa lcall add add xor fwait mov inc sbbl lahf mov dec push notl dec imul xchg push jo add ds ja ljmp add clc dec pushf jmp mov daa inc pusha jge mov lock inc bound mov dec imul xor mov aaa push jo stos (bad) jecxz sbb push jb lods leave in inc jl lock cltd mov lock mov xor les push popf in outsb mov inc (bad) lds inc pop jp mov out or add sbbl lahf mov dec imul xor mov dec mov push push nop aam pop stos ljmp (bad) or xchg rcll mov push pop xchg aam cmp icebp sub mov sbb sahf ljmp adc movsl ret dec pop sti xor fldt andl test add push xor mov rcr sbb (bad) aaa push jo test and jbe scas ljmp mov dec andl adc dec test clc adc movsb rcr push xor mov xor mov cmp mov cmp nop lods leave out pop cmp xchg scas lret and jne scas lret call pop jnp mov in or inc (bad) vucomiss in sub lock mov pop push movsb (bad) lock popf mov dec sbbw add pop xchg lret xchg jecxz arpl adc mov pop inc xchg iret or into xor lods out pop xchg in cmp or jle sti xor loop pop xchg cmc sbb push outsl mov mov xor add notb xor mov xor xchg dec insb mov sbb push jno lods leave in push cmp mov ljmp mov jmp and mov out or inc pusha jge mov out or inc popa jge loop dec (bad) mov ss sti cmp repnz mov in inc (bad) rolb push mov rsqrtps (bad) and dec jle (bad) cmp add or and jmp dec xchg cmova loopne insl stos jecxz outsl mov in xor movsb icebp sub in add add mov stos loopne dec mov and out bound adc adc xchg shrb or xchg aad insb mov add mov xor sahf rolb cmp pop xchg xlat or mov sub rolb sbb xlat adc aam push xchg in xor ljmp in sub std push mov loop pusha mov cmp cli dec lahf ficoml pop test inc cwtl rorb inc xchg rorb imul push lahf aam pop xchg shll arpl mov pusha jge mov out or js stc dec (bad) (bad) jo out pop sahf out imul inc cmpl or fwait loop push lcall insl mov dec (bad) int3 sbb in xor cmpsl divl jno add enter int3 push dec xchg iret sbb add add insl scas out insb mov aas jge std dec cmpl movsb loope addr16 pop lods jmp das push lcall inc cltd divb imul pop cmpsb loop jbe jmp jae stc inc jle or scas add in or mov out or inc pusha jl mov out or inc popa jle mov lock inc bound mov lock dec andl adc dec push notb xor mov xor xchg dec imul test aaa push jo lods leave out pop cmp xchg lods lret and jne scas lret out and lret call ja mov jmp js mov jmp and pusha jge mov out or inc popa jg mov inc arpl mov inc addb add popf mov inc sbbb dec data16 lahf mov dec push movsb rcr push xor mov xor insl mov xor (bad) loopne sbb push jo test cmp lods lret pop cmp jne scas lret call pop jnp mov out or inc pusha jge mov out or inc popa jle mov lock inc add cs jmp jl mov out or inc popa jge mov lock pushf mov inc arpl cvttps2pi (bad) sahf mov xor mov ss outsl mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) in sbb lods enter cmp (bad) lods leave out and pop js mov jmp and pop jns mov in or mov in or inc pop jp mov in or inc pop jnp mov in or inc pop jl mov inc arpl adc data16 lahf mov dec sbbw dec test notb das dec push notl push insl mov xor insl mov xor lods enter cmp xchg scas lret and jne scas lret call js mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov lock fwait mov dec sbbl mov xor (bad) cmp stos (bad) in sbb or sbb cmpsb icebp sub testb repnz je clc dec mov adc jg repz (bad) rcrb push mov es fwait jmp data16 or ret or dec movsl icebp es stos jecxz or dec (bad) mov sub xlat adc fwait ret xchg pop pop scas jmp cmp xchg mov ljmp xchg (bad) ds sbb imul adc imul out and sub hlt add mov sub roll push jmp sub and mov or arpl outsl cmpsl in pop jnp mov in or inc pusha jge mov out or inc popa jle mov inc arpl sbb and jns mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov dec test notl dec imul add add movsb rcr push xor mov xor insl mov xor (bad) jecxz sbb lods enter cmp nop lods leave out pop cmp jne scas lret call jbe mov jmp js mov in or inc bound mov inc arpl movntps sbbl mov xor insl mov ss outsl mov shr or inc bound mov inc sbbb dec gs lahf mov dec test notl xor xchg push add scas lret call ja mov ljmp mov jmp and mov in or inc pop jl mov out or inc sbbl mov xor xchg add add clc adc movsb rcr pop xor mov xor (bad) push cmp xchg scas int3 call ja mov ljmp mov in or inc pop jl mov out or inc popa jge mov lock inc bound mov dec test notl dec imul xor mov add push je scas lret out and int3 jmp jnp mov out or inc pusha jge mov lock inc bound mov inc fs sahf mov dec test notb das dec imul nop lods leave out push and pop jns mov in or mov out or inc popa jle mov dec gs lahf mov dec push sti sbb (bad) loop push cmp xchg scas lret call ja mov in or inc pusha jl mov dec data16 lahf mov dec imul xor outsl mov aaa push jno lods leave in and pop ja mov ljmp mov jmp es pop jl mov hlt adc dec push sti pop xor insl mov cmp nop lods lret and pop jns mov add or lahf mov dec insl mov cmp xchg mov ljmp mov in or inc pusha jge mov icebp movntps andl push insl mov cmp xchg mov in or inc arpl clc adc lods lret ljmp mov lock sub push cli push xor insl mov cmp shr or inc popa jle mov add adc mov push jo lods enter cmp xchg scas int3 jmp jge mov dec push add cmp xchg mov in or inc arpl pop xor outsl mov cmp nop lods lret and pop jg mov dec push notl test loope sbb push jo lods enter cmp xchg mov jmp or inc andw push jns mov in or inc popa jle mov dec insb mov cmp js mov icebp push sub rcr sbb push ja mov jmp sub (bad) lahf mov dec imul pop cmp jbe mov ljmp mov icebp movntps (bad) lahf mov dec imul aaa push jno stos (bad) in push cmp add xchg scas lret and pop ja mov jmp jl mov out or inc arpl adc dec outsl mov cmp xchg scas int3 ljmp mov out or inc arpl mov dec test stc adc movsb ret loopne sbb push xchg out cs stc pop mov cmp (bad) lods enter cmp jne scas lret call ja mov ljmp lahf rcr pop xor insl mov aaa push jb stos (bad) in push cmp nop lods lret and int pop and jp mov in or inc arpl adc mov dec imul jo stos (bad) jecxz imul test cmp (bad) lods int3 jmp jns mov jmp and add pop jp mov out or inc pusha jl mov lock pushf mov dec sbbl mov xor mov xor (bad) sbb push jb stos enter cmp xchg scas int3 jmp js mov jmp sub jg mov dec gs sahf mov dec andw dec imul mov push add scas lret jmp js mov jmp push cmpsl in pop xchg int3 (bad) xor int3 add scas jmp stc sub int3 add pop lea test adc mov pop push mov movsl ret sbb push outsl mov push cmp xchg lods lret and jne scas lret out and shr or inc pusha jge mov lock add inc popa jle mov lock pushf mov dec data16 lahf mov dec sbbw dec imul xor outsb mov ss outsl mov cmp test cmp stos (bad) jecxz sbb push jb lods enter aas pop js mov jmp and pop jp mov in or inc popa jle mov inc fs sahf mov dec push notl dec insl mov and pop jp mov in or mov out or inc pusha jle mov lock pushf mov dec sbbl mov jno stos (bad) jecxz sbb push jb stos enter cmp jne scas int3 add or inc pop jnp mov lock popf mov dec imul add add mov xor (bad) loopne sbb push jb lods leave call jns mov jmp and pop jnp mov repz sbbw dec test notl dec insb mov xor insl mov cmp jbe scas lret call jnp mov out or inc pusha jl mov out or inc bound mov dec sbbl mov das dec push movsb ret (bad) push cmp nop lods add out or inc sbbb dec sbbw dec push stc push xor mov ss jo test cmp je scas lret and jnp mov in or inc pusha jle cmc inc jl ljmp inc test notb das dec imul lea add (bad) jecxz sbb push jb stos enter cmp xchg scas lret and jne scas lret jmp js mov jmp and mov dec sbbl mov das dec push stc push xor mov ss outsl mov cmp xchg scas lret and jbe scas lret call jbe mov jmp js mov in or mov in or inc pusha jge mov dec sbbl mov ss outsl mov cmp nop lods leave in pop cmp xchg scas lret out and iret jmp and pop jnp mov out or inc arpl movntps andl dec imul sbb push test xlat or xchg add pop mov enter cwtl leave clc daa popa xchg (bad) push test roll aaa push gs into add xor dec mov sbb into adc jbe fcomps push mov (bad) ss ljmp pop xchg (bad) sti das arpl rolb jg cld aaa je ficom xor in sub dec test fistl dec jle jmp push xchg int cmp loopne push nop lret je out push xchg ficom push mov cld xor inc ja mov pop push mov stc xor fistl dec cmpb or js in daa pop lcall and fcoml push mov std xor pop cwtl xlat pop push mov or mov out push (bad) lds cmp out pop xchg lret aas je out push xchg movl in push mov sti xor sub xchg (bad) imul hlt sub inc jbe loope push xchg fistl xor movsb fcoml inc jnp ljmp push cmpl stos out pop xchg into or mov sub dec mov std xor rorl cmp push mov imulb cwtl iret add insl movsb fmuls jne out pop xchg lret imul ficom inc jne roll cmp loop pop cltd rcll dec xorl xchg int3 add jae ficom inc jp jecxz dec xchg ljmp outsl movsb fimull dec (bad) mov daa pop xchg (bad) cli xor ficoml (bad) mov in pop xchg rorl sub loope push test (bad) sti das add cmovg add add push inc cmpb cmp mov sub xlat pop push xchg rorb dec mov incl roll cmpl or movl dec mov or push xchg es stos pop sbb add pop mov cmpsl fcoms inc je aad cmp test or jns in pop pop sti das fs aad inc jns loopne push mov adc cmpsl ret loopne sbb push outsl mov cmp stos (bad) jecxz sbb push jbe scas int3 call ja mov jmp js mov add or inc arpl mov inc sbbb fisttpll dec cwtl mov icebp adc dec addr16 and mov jmp and pop jp mov in or inc pop jnp mov out or inc pusha jge mov out or inc sbbl add mov aaa push jo stos (bad) jecxz sbb push jb lods enter cmp nop out xor sub aas jnp mov dec xchg int3 push inc xchg cld dec xchg mov out or inc arpl mov dec sbbl mov das dec imul jo stos lret add pop jp mov in or mov out or inc pusha jl popf mov dec gs sahf mov dec data16 lahf mov dec push movsb rcr adc mov xor mov xor mov xor ret loopne sbb ret loopne sbb push jb stos (bad) in sbb lods leave in push cmp nop lods leave in push cmp xchg lods lret call jbe mov ljmp add add jns mov out or inc popa jle mov out or inc popa jle mov out or inc popa jge mov out or inc pusha jge mov out or inc pusha jge mov out or dec sbbl mov cs andw dec andl adc dec sbbl stc push xor mov push add lods leave out pop cmp xchg scas lret call jne scas lret add or mov sub fiadd sbb lods leave in and pop jns mov jmp and mov in or inc pusha jl mov out or inc popa sbbb gs sahf mov dec andw dec push mov xor mov dec insb mov xor insl mov push cmp dec add cmp jp mov in or inc pop jnp mov out or inc pusha jl mov out or inc bound mov lock pushf mov dec sbbl mov xor mov xor insl mov xor vpaddd aaa push jno stos (bad) jecxz add cmp shr or sti add xchg mov ljmp mov in or mov aam push sub sbbb dec gs sahf mov dec imul xor mov xor mov xor mov xor (bad) loopne sbb (bad) in sbb stos enter cmp nop lods leave in push cmp xchg lods lret and jne scas lret add and pop nop jmp push inc jne (bad) and int push and pop js mov ljmp mov jmp and pop jns mov jmp and mov inc arpl mov dec sbbl sahf mov xchg loopne sub sbbl sahf add push outsb mov add push jb stos enter cmp nop lods enter cmp nop add aas pop js mov ljmp mov in or inc pop jnp mov in or inc jb lock pop xor vpaddd aaa push jo stos (bad) jecxz sbb push jb stos enter aas pop js mov jmp and pop jp mov in or mov in or inc pop jl mov out or add inc pusha jge jecxz push mov stos fadds jmp gs fmuls inc jbe jecxz push xchg xbegin push inc jbe loope bound mov cmp xor pop mov pop pop mov lcall push jae lods leave out and jbe scas int3 call js mov jmp and mov in or dec add mov xor xchg sbb (bad) loopne sbb push jo test cmp pop jne scas lret out and iret jmp and pop jp mov in or mov in or inc pop jnp mov in or inc pop jnp mov in or inc pusha jl mov out or inc arpl mov inc arpl cvttps2pi sbbl rcll pop jle mov add lock pushf mov inc arpl xor xchg xor mov xor mov xor insl mov xor insl mov aaa push jo test aaa push jo test aaa jb hlt sub daa dec gs lahf mov dec test sub popf in sub mov adc add clc ja,pt (bad) and add mov icebp or popf mov dec data16 lahf mov xor cmpsb in push mov sub xor aam cmp pop jge mov lock inc bound mov fildll jae loop imul fs lahf mov dec imul xchg dec insb mov add cmc xor popf mov dec xchg xor mov dec imul js push dec nop leave sbb push je lods leave out pop cmp jne scas lret and pop jnp mov in or jne jecxz andb dec imul xor outsb mov xor (bad) aaa push jo test cmp jne add inc pop jp mov in or sub jg mov inc fs lahf mov dec test movsl ret (bad) sbb (bad) jecxz sbb push jb lods enter cmp nop lods leave in push cmp xchg lods lret pop cmp jne scas lret and int3 jmp jp mov in or inc pop jl mov out or inc popa jge mov out or add add jle mov lock pushf mov inc arpl mov dec push clc adc dec push movsb rcr pop xor mov xor outsb mov xor (bad) loopne sbb push jae lods leave in pop cmp xchg scas lret and pop ja mov ljmp mov jmp and pop jns mov and mov sub sbb into adc aam push add dec push notl dec imul outsb mov aaa push jo test pop cmp jne mov jmp and pop jns mov jmp and pop jp mov in or mov in or inc pop jl mov out or inc pusha jge mov out or dec gs sahf mov dec sbbl adc dec test testb add das dec push notl xor xchg xor xchg push outsl mov cmp mov cmp (bad) lods enter cmp nop lods lret pop cmp jne scas lret and jns mov jmp and pop jns mov in or mov in or mov out or inc popa jge mov lock inc bound mov repz mov dec add (bad) push xor mov sbb push jno stos (bad) jecxz sbb push jae lods enter cmp js mov out or inc pusha jl mov out or inc popa jge mov lock inc bound mov inc arpl movntps sbbl mov xor xchg push insb mov ret sbb insl mov xor (bad) loopne sbb push outsl mov cmp nop lods lret pop cmp jne scas lret call jp mov in or mov in or mov out or inc arpl mov inc sbbl sahf mov dec data16 lahf mov dec push notl xor mov xor insl mov xor les in push cmp (bad) lods enter cmp pop js mov ljmp mov in or mov fdiv adc mov dec push notl xor mov xor xchg xor mov aaa push jno stos leave in pop cmp xchg lods lret call jbe scas int3 jmp js mov in or inc pusha jl mov lock pushf mov mov into out or inc popa jle mov dec sbbl mov xor xchg xor lea cmp (bad) lods enter cmp xchg lods lret and pop ja mov jmp js mov jmp and mov out push sub sbbb dec sbbw add mov xor add call ja mov ljmp mov icebp push sub dec imul xchg xor mov xor (bad) loopne sbb push outsl mov ret (bad) xor in push test mov pop push add test mov shr push mov repnz mov fcoms dec mov or mov and mov aam inc je out pop pushf (bad) cs loope popa mov aad push nop int3 or ss cli cmp repz call sbb into adc add imul pop push cmpl out and ret outsb movsl fistl dec test cmp pushl addr16 aas mov cmp mov cmp popl scas int3 call ja mov jmp cmpl mov test xor xchg push insb mov xor (bad) aaa pop jne mov jmp hlt daa bound add leave imull push xchg xchg (bad) cmc and mov and int inc jle hlt xor jmp sti cmp jmp add push xorl xlat pop cmp fcoml inc ja pop test mov aaa pushf fcompl xchg in pop pop out sbb xorl dec xchg int3 add imul xlat push popa andl dec insb mov xor lret call ja mov ljmp mov in or pushf mov dec sbbl xchg ss jo ljmp add pop cmp int3 jmp push sub sub xor xchg dec insb mov cmp (bad) lods enter add add cmp jbe scas lret call ja mov ljmp mov jmp es pop jl mov out or dec cmpb cld sbb vpaddd aaa push jo test cmp mov cmp (bad) lods enter cmp xchg mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or inc pop jnp mov in or inc outsb fbld pop imulb bound mov adc xchg mov aaa adc dec add mov sbb mov adc dec mov andl cmpsb ret sbb cmp (bad) lods enter test ss decb fdivl pop jge mov lock fwait mov notb das dec push mov dec imul xchg xor mov dec imul xor mov aaa push jno stos (bad) jecxz sbb push jno stos (bad) in sbb stos enter cmp nop lods lret pop cmp jbe scas lret out and jp mov in or mov in or inc pusha jge mov out or inc pusha jge mov lock inc bound mov lock lahf mov dec andl adc dec push notl mov add push outsl mov aaa push jo add inc pop jp imull daa pop xchg (bad) bound pushf iret add sub mov dec push notl dec push mov aaa push jo add sbb push jb stos enter cmp jne scas lret out insl mov mov push and pop js mov ljmp mov out or inc popa jle mov out or inc bound mov lock fwait mov inc sbbb dec gs sahf mov dec push mov xor mov ss outsl mov cmp stos (bad) jecxz sbb push jb stos enter cmp iret in or mov in or inc pop jl mov out or inc popa jge mov out or inc bound add test notb add jo stos (bad) jecxz sbb push jb lods leave out pop cmp xchg add xchg roll cmp das dec imul xchg add add push jo test cmp stos (bad) jecxz sbb push jb lods leave in push cmp nop lods leave out pop cmp xchg scas lret and iret jmp and mov in or inc pop jnp mov out or inc popa jle mov lock pushf mov dec mov stc cs xchg out sbb push jae lods enter int3 sbb (bad) hlt sub xchg lret cld xor in cvttps2pi sbbl dec push notl dec imul addr16 inc jb loop arpl push sub sbbl lahf mov add mov xor insl mov and mov xor outsb mov xor lods enter cmp nop lods leave in pop cmp xchg scas lret and add add xchg mov ljmp mov jmp and mov out or inc popa jge mov out or fwait mov inc bound mov ss or dec push notb das dec test notb das dec push notb das dec push notl dec push mov xor mov xor (bad) ss outsl mov aaa push outsl mov ss outsl mov mov and (bad) icebp push sub sbbl cmp loope push xchg loop pop cmp jbe scas int3 call jns mov in add popf mov dec imul std sbb push outsl mov cltd rolb cmp push sub sbbb sbbl add andl mov xor xchg dec insb mov or jne or data16 lahf mov cmpsb hlt and pop js mov out or inc pop jl mov out or inc pusha jge mov out or inc pusha jge mov out or inc bound mov lock pushf mov dec imul test xor xchg xor xchg dec insb mov cli push xor mov cmp (bad) stos enter cmp nop lods leave in sbb lods leave in sbb xchg mov jmp js mov ljmp mov out or inc pusha jl mov out or inc pusha add adc dec push notb cs test notb add xor mov xor mov xor insl mov xor insl mov xor insl mov xor (bad) xor loop popa jle mov icebp or pushf mov inc arpl cvttps2pi (bad) sahf mov dec data16 lahf mov dec andw dec imul xor xchg xor xchg push insb mov xor ret loopne sbb (bad) in sbb lods leave in push cmp (bad) lods leave in push cmp nop lods leave in push cmp add and pop jns mov jmp daa inc pusha jge mov out or inc popa jle mov lock inc popa jle add sbbl adc dec test add dec test clc adc mov xor mov dec imul xor mov xor insl mov cmp mov cmp mov cmp (bad) stos enter cmp (bad) stos enter cmp nop lods leave in push cmp nop lods int pop and jns mov in or mov in or mov in or inc pop jnp mov out or inc pusha jl mov out or inc arpl mov inc sbbb dec data16 lahf mov dec andw dec test add pop xor mov cmp stos (bad) jecxz sbb lods enter cmp nop lods leave in add inc pop jns mov jmp and pop jns mov jmp and pop jns mov out or inc pusha jge mov out or inc popa jle mov lock inc bound mov lock pushf mov dec gs lahf mov dec imul test xor xchg insb test adc sbb vpaddd push jno stos lret call js mov ljmp test movntps sbbl lahf mov dec andl adc dec push sti pop xor insl mov xor outsb mov ss outsl mov aaa push jo test aaa push jo xchg scas lret and jns mov in or mov in or mov in or add inc arpl push sub sbbb sbbw dec imul xchg xor xchg xor mov push jno stos (bad) jecxz sbb push jae lods enter cmp (bad) lods enter cmp nop lods leave out push cmp xchg lods lret pop cmp jne scas lret jmp and pop jp mov in or mov in or inc pop jnp mov in or mov in or mov in or mov lock inc bound adc gs sahf mov dec andl adc dec andl adc dec push add sbb push jo test cmp mov cmp (bad) lods enter cmp nop lods leave in add add inc pop js mov ljmp mov out or inc pusha jge mov out or inc popa jge mov lock pushf mov inc arpl mov dec sbbb dec push notl xor mov xor xchg dec imul xor insl mov ss outsl mov cmp nop lods leave in push cmp xchg scas lret pop cmp jbe scas lret out and jne scas lret out and int3 call jp mov in or mov in or inc pop jnp mov out or inc pusha jl mov out or inc pusha jl mov out or inc pusha jge mov out push sub push notl xor mov cmovo aam inc xchg mov out or dec lcall add add (bad) sahf mov xor insl mov ss outsl lea cmp mov cmp (bad) lods enter push mov xor mov push insb mov xor (bad) aaa push jo test cmp mov inc pop jp mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov icebp or pushf mov dec test xor mov xor xchg xor xchg xor xchg dec insb mov push outsl mov ss jno stos (bad) jecxz sbb push jb stos enter cmp pop ja mov jmp ja mov jmp and pop jns mov out or add jle mov lock inc bound test xor mov xor xchg xor xchg xor mov aaa push jo test aaa push jo stos (bad) loop sbb push jno stos enter cmp xchg lods lret and pop ja scas int3 in or mov out or inc popa jge mov out or inc popa jle mov out or inc bound mov repnz sub sbbl mov xor xchg xor xchg push insb mov xor insl mov xor ret loopne sbb push jb stos enter cmp xchg scas lret and jne scas int3 call ja mov shr or inc pusha jge mov lock fwait mov add adc dec push notl dec imul sbb push jae lods enter cmp je lods lret and int push and pop jnp mov out or inc popa jge mov lock inc bound mov dec sbbl mov xor xchg push jno stos (bad) in push cmp nop lods leave out pop cmp xchg lods leave out and int push and pop jns mov in cmp ficom dec jl loop dec test mov fist inc jnp imulb addr16 dec xchg in pop xchg rorb jle repnz jns ljmp pop xchg into add js lock movsb loope push (bad) enter mov sub fcoms inc jle hlt sub in push (bad) lret ja in es mov add push dec mov or lods call pop push mov or mov scas out pop xchg out pop xchg into or lret and pop js mov ljmp mov lock inc bound mov icebp or pushf mov inc sbbb dec data16 lahf mov dec test stc push xor mov xor mov xor insl mov xor outsb mov xor (bad) loopne sbb push jae lods leave out pop cmp nop lods leave out pop cmp nop lods leave out pop cmp xchg scas lret out and int3 call jbe scas iret in or inc pusha jge mov out sub fcoms jne lret call jbe scas int3 jmp ja mov ljmp icebp sub fbstp add nop vmovaps push dec jl jecxz dec or sbb add jae push push popf out push nop (bad) cmc sub int3 add mov xor xlat or mov xor mov xor (bad) cmp stos (bad) in push cmp nop lods leave ljmp mov in or mov out or inc popa jle mov lock inc bound mov inc arpl adc test xor mov xor insl mov xor (bad) ss outsl mov add sub sbbl mov xor xchg push outsb mov aaa push jo test inc (bad) int3 add popf add lock add add or inc sbbw dec test cld dec test repz shr or inc pusha add adc mov dec xchg dec imul xor mov xor insl mov xor ret loopne sbb push outsl mov cmp lret call ja mov jmp js mov ljmp mov jmp and add iret add cmp shr or mov out or inc popa jge mov out or mov add mov xor (bad) loopne sbb push outsl mov cmp int3 jmp jns mov es mov in or inc pop jl mov std inc jl adc insl mov add add and pop ja mov jmp js mov ljmp and loopne cmp (bad) stos enter and pop js mov ljmp mov lock sub sbbb fs fmuls inc jnp out sub mov adc push xchg lret mov jnp divl imul fdivrp pop xor insl mov ss outsl mov aaa push jo test cmp (bad) (bad) dec (bad) lret cld sub xchg iret or test pop jno scas lret call jns mov jmp and pop jp mov in or inc pusha jge mov lock pushf mov dec test xor xchg xor xchg push insl mov mov movsl ret sbb add push outsb mov cmp pop js mov ljmp mov in or inc pop jl mov out or inc pusha jge mov out or inc popa add adc dec push cli push xor mov xor (bad) loopne sbb push outsl mov mov sti ss ret loope sbb push jo test cmp int3 stc aas jno add aas pop js mov ljmp mov jmp and pop jp das push pushfw lret cld sub xchg iret push pusha lods jae or lock sti aas pop jnp mov out or inc popa jge mov lock inc arpl mov dec sbbl movsl ret sbb insl mov ss outsl mov aaa push jo test cmp mov add lods leave call ja add inc popa jge mov out or inc popa jle mov lock fwait mov inc arpl mov xor mov xor insl mov ss outsl mov ss outsl mov cmp stos (bad) jecxz sbb push jb stos enter cmp int3 jmp js mov ljmp mov jmp and pop jp mov in or mov in or inc pop jl mov inc sbbb sbbl mov das dec push clc adc movsb rcr pop xor jo test cmp stos (bad) jecxz sbb push jb stos (bad) in sbb stos enter cmp xchg lods add lret pop cmp jne scas lret ljmp mov out or sub mov dec push notl dec imul xor insl mov add xchg mov in or mov in or inc popa jg mov inc arpl cvttps2pi (bad) sahf mov dec andl adc push outsb mov cmp (bad) lods leave in push cmp nop lods lret and int3 call js mov jmp and pop jnp mov cvttss2si (bad) sahf mov dec andw dec imul mov xor mov ss jae lods lret pop cmp jne scas lret call ja mov jmp and mov out or inc popa jle add add inc sbbb dec imul mov sbb lods leave in and jbe scas int3 jmp js mov ljmp mov xor mov xor (bad) loopne sbb push jno stos (bad) out and pop jns mov in or mov icebp push sub imul mov ss jo test cmp mov cmp jne scas lret out and int or inc pusha jl mov out or inc popa jle mov icebp or pushf mov dec push stc adc cmpsb ret loopne sbb push outsl mov pop jne scas int3 call jns mov out or inc bound adc dec test add add dec imul xor leave in pop cmp into ljmp sahf mov dec test stc push xor mov cmp nop lods leave out and pop jp add dec andl adc dec push movsl ret sbb (bad) loop sbb push jno lods leave in pop cmp into or jnp add mov xor mov cmp (bad) lods enter cmp xchg mov ljmp mov out or dec data16 lahf mov dec push notl dec imul xor insl mov aaa push jo test cmp (bad) lods leave jmp jns mov in or inc pop jl mov out or inc popa jle mov cvttsd2si sbbl mov dec push cli sbb push outsl (bad) lods leave out and jbe mov jmp jns mov in or sub sbbb dec push clc adc movsl rcr sbb push jb stos (bad) in sbb xchg mov jmp and mov out or inc popa jle mov icebp cvttps2pi andl dec imul mov cmp (bad) lods enter cmp jbe mov ljmp mov out or inc popa jle mov lock lahf mov dec test xor (bad) in push cmp xchg scas int3 jmp jp mov lock sahf mov push outsl mov cmp xchg lods lret and into jmp and pop jnp mov add add out or inc popa jle mov dec data16 lahf mov push insl mov aaa push jno stos (bad) in push cmp xchg scas lret call js mov jmp and mov out or inc bound adc add mov cmp (bad) lods leave in pop cmp jbe mov jmp popa jg mov dec sbbw dec insb mov ss jo test cmp nop lods lret and pop js mov jmp and mov out or inc arpl adc dec imul mov cmp (bad) lods leave out and int push and pop jnp mov out or inc arpl adc dec imul xor (bad) sbb push jb lods leave add in pop cmp jbe mov jmp jns mov in or inc sbbl mov xor insl mov aaa push jo stos (bad) in push cmp xchg scas lret call js mov lock inc arpl add xor mov xor (bad) aaa push jo test and int3 jmp jl mov out or inc popa jle mov inc arpl andps mov (bad) idivl cmpsb fcoml inc jge or movsb rcr pop xor mov xor (bad) aaa push jo test cmp (bad) stos enter cmp xchg scas lret and jns mov in or inc pop jnp mov out or inc popa jge mov lock add add jg mov dec sbbl lahf mov dec insb mov ss outsl mov cmp mov cmp nop lods lret and jbe scas lret call jl mov out or inc popa jge mov lock sub mov dec push movsb rcr pop xor mov sbb lods enter jo stos (bad) jecxz sbb push jb stos enter cmp nop lods leave in pop cmp jne scas lret call jns mov in or mov movntsd sbbl push cmpsl int3 jmp jns mov jmp and mov out or inc bound mov dec push movsb rcr pop xor insl mov ss jo test cmp add (bad) lods enter cmp xchg scas lret call ja mov ljmp mov out or inc bound mov dec gs sahf mov dec imul mov xor insl mov cmp (bad) lods leave out pop cmp jne scas add in or mov out or inc popa jle mov lock add xor mov xor (bad) sbb push jno in and les ss jo stos (bad) jecxz sbb lods lret and shr or inc pusha jl mov out or inc bound mov inc sbbb dec data16 lahf mov dec push clc adc cmpsl (bad) aaa push jo test cmp (bad) lods leave out add cmp jne scas lret out and jns std inc jl fisttp inc pop sbbl mov xor mov xor mov xor (bad) ss jo test cmp xchg lods lret and int push and jns add inc bound movntps (bad) sahf mov dec data16 sbb push outsl mov aaa push jo stos (bad) jecxz sbb push jno stos (bad) in sbb lods lret pop cmp jbe mov jmp jl mov lock pushf mov dec sbbl lahf mov dec push notl xor xchg xor (bad) sbb push jno stos (bad) jecxz sbb add add lods leave out pop cmp jne lods lret and int3 call js mov out or inc popa jle mov lock fwait mov dec sbbl mov xor mov xor ret loope sbb push jo test cmp (bad) lods leave out and inc pop jp mov in or inc pusha jge mov lock lahf mov ss outsl mov cmp stos enter cmp nop lods leave out pop cmp xchg scas lret and jbe scas int3 jmp jnp mov out or inc bound mov inc arpl push sub sbbl mov xor mov push jo test cmp xchg lods lret and pop js mov in or mov out or inc pusha jl mov out or inc popa jle mov dec push notl xor xchg xor mov cmp mov cmp (bad) lods leave out pop cmp jns mov in or inc pop jl mov out or inc popa jg mov dec push (bad) sbb insl mov cmp mov ds jp add inc sbbw dec imul mov xor (bad) jecxz sbb push je mov ljmp mov in or inc pusha jl mov out or inc popa jg mov dec andw dec imul mov cmp nop lods leave out and add xchg scas lret call ja mov jmp jns mov in or mov icebp push sub andl cmc sub out sub mov dec imul xchg xor insl mov cmp int3 jmp inc popf loope inc jle out test notb xor add aaa push jno stos enter cmp cltd mov lock andl dec push mov xor outsb mov aaa push jo stos (bad) jecxz sbb push jb lods leave in and pop js mov jmp and pop jp mov in or mov out or inc popa jle mov repnz sub sbbb dec gs mov xor xchg xor add ret sbb push outsl mov cmp (bad) lods leave in pop cmp xchg mov jmp jl mov out or inc sbbl mov xor xchg xor mov ss jno stos (bad) out and into jmp and pop jp mov out or inc popa jge mov lock inc bound movntps dec imul lea cmp xchg lods lret add mov in or inc pusha jl mov out or inc bound mov dec test notl push insl mov aaa push jo stos (bad) jecxz sbb mov es xchg in cmp (bad) lods enter cmp xchg lods lret pop cmp jbe scas int3 out or inc popa jge mov lock jg mov inc andl dec test notl xor movsb rcr pop xor mov cmp (bad) stos enter cmp nop lods leave out and into in or mov inc xchg stc arpl insl mov aaa push jo test cmp nop lods lret and int pop and jnp mov add adc rcr sbb test (bad) push xor mov stos (bad) in push cmp xchg scas lret call js mov in or inc pusha jge mov lock mov xor xchg push outsl mov aaa push jb stos enter cmp jne mov jmp jp mov lock pushf mov add dec andl adc dec push movsb jmp adc push insb mov ss jo test cmp xchg mov ljmp mov in or inc pusha jl mov out or inc bound cvtps2pd pop clc xor ficom dec xorl jge fisttp or add imull pop mov ret arpl sahf add push inc jp jmp clc sub (bad) imull pop xchg enter lcall stc sub rorb aas js out inc ja loope dec test add jae loop insb test into or jp in inc js xlat or imul (bad) stc das lcallw lods fisttp inc jae fisttpl cmp roll insl movsb xlat or or add add adc mov aad dec mov stc cs test out popa sahf fmuls dec jl in daa arpl out dec xorb xor push xchg cld xor aad dec mov add sbb dec mov add jne call add das outsl mov xor fsts dec cmpl add daa arpl out bound mov into or out daa bound sti xor jmp add in sub push xchg lret jp hlt xor ficoml inc ja jmp cmovnp mov jmp pop fstpl push xchg rcll dec xchg (bad) cmp loop push xchg rorl dec (bad) (bad) (bad) aaa je lock push add aam push xchg into pop aas jp lock loopne pusha lahf loop pop lcall cmp icebp sub ficompl push lcall xor ljmp (bad) rorl test and rorl inc js jmp gs xlat cmovne cmc xor sub pop cwtl shrl pop cltd rorb dec add inc jge jmp push mov (bad) (bad) xor dec test or (bad) insb add adc lds je repz pushfw xlat adc push dec test fistp mov add jae jmp sbb aad inc add cmp out arpl movb jae in push nop iret push dec test add jae jmp and loop pop xchg rorb add add leave add jl out sub fsts push xchg int dec (bad) int3 or mov sub addr16 push mov or mov cmp xor out push xchg xlat sbb roll and int dec test aad jb,pt loope dec xchg cli xor add (bad) std xor pop fwait xlat or xor fcoml inc jg icebp sub pop xchg rclb dec mov pop inc jg cld aaa jno loopne push xchg lret or mov lret add inc jns jmp in and pop (bad) imul fild add (bad) cmp roll popa xchg (bad) sti sub cltd rclb dec xchg lock adc adc mov push inc js out sub push inc jnp out push mov add jno in sub rcll xchg aam dec (bad) mov xor cld cmp in and popa mov ficomp push mov sti cmp hlt das imul cmp icebp addr16 push xchg aam inc cmpl or enter mov mov ficoml mov daa arpl lds aaa jae loope dec xchg int inc jne in push mov (bad) ss sahf roll xor xor cwtl rolb (bad) das bound (bad) stc sub xchg vmovaps ret add (bad) imull pop mov repz pop mov cld xor inc js jmp int3 add insl cmpsl jecxz push test lret pushl cmp fisttpl inc jns jecxz dec xorb and mov or jne loop push mov int3 add add add push mov cld xor roll cmp inc jnp (bad) ret popfw aam inc (bad) mov lret insl mov mov and (bad) pushl insl movsb ficoml inc jp loop dec xorb in and mov aam inc jbe loop push xchg or adc es nop (bad) sti xor iret add insl mov test mov into push cmp fcoml dec mov testl or scas in push mov cmc sub lret push rorl cmp inc jns jecxz dec xorl in and mov sbb mov adc adc scas loop dec jp ficom inc jne (bad) cmp mov pushf into add fs lret pusha xchg (bad) imulb pop mov cmc daa pop mov cmc sub gs int3 add cmp rolb cmp or cmp aas jb (bad) inc jae fstl inc jne fmull inc js fist inc js fmull inc je fcoml dec jl in dec xorl movb js in dec test int3 or lods loop dec jg in and ret popa xchg iret add outsb enter clc inc test adc sub icebp sub mov push sahf icebp daa pop xchg rolb cmp int3 add mov jmp push xorb fist aas jno aam cmp aad push xor mov xor vpaddd aaa push jo test loope and pop js mov out or inc popa jle mov lock fwait mov lock fwait mov inc arpl movntps (bad) lahf mov add add outsb mov xor (bad) aaa push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp nop lods int3 jmp jns mov in or mov out or inc pusha jge mov out or inc popa jle mov lock fwait mov inc andw dec push notb das dec push stc adc movsb rcr push xor mov dec insb mov and jbe scas lret call jbe scas int3 call ja mov jmp js mov jmp and pop jns mov jmp and pop jnp mov lock fwait mov inc arpl cvttps2pi sbbl lahf mov dec data16 or add add mov add adc gs sahf mov dec sbbw dec push notl dec imul mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) in sbb lods leave in push cmp xchg lods lret pop cmp jne scas lret and pop jns mov jmp and pop jp mov in or mov in or inc pusha jge mov out or inc bound mov inc sbbb xor insl mov xor (bad) ss outsl mov aaa push jno stos (bad) in sbb lods leave out and pop jnp mov out or inc pusha jl mov out or inc popa jle mov lock inc bound mov inc fs das pusha mov add (bad) icebp push das dec imul outsl mov aaa push jno stos (bad) in sbb lods lret cwtl jmp adc movsb rcr sbb push jb stos (bad) in sbb lods lret and jne scas lret out and lret call jbe scas lret call ja mov in or mov in or inc pop jl mov out or inc pusha jge mov lock inc bound mov inc bound mov dec andl add xor mov xor insl mov xor ret loopne sbb (bad) sbb push jno stos (bad) out and lret call ja mov ljmp mov ljmp mov in or pop jp add add inc pop jle mov icebp push sub sbbb xor mov xor xchg sub mov dec imul lea cmp mov cmp xchg scas lret out and int3 call ja mov ljmp mov out or inc popa jge mov out or inc bound mov inc arpl cvttps2pi sbbl sahf mov dec imul xor add sbb lods enter cmp nop lods leave out pop cmp jne scas int3 call js mov in or inc pusha jl mov out or inc popa jle mov lock pushf mov inc sbbb dec add add adc mov dec insb mov xor push jno stos (bad) in sbb lods enter cmp nop lods leave out pop cmp jne scas lret call jns mov jmp and mov in or mov out or inc pusha jge mov lock inc bound mov inc arpl adc dec push notb das dec push notl dec imul mov xor (bad) loopne sbb push jae lods enter jo test add int3 jmp js mov ljmp mov in or mov out push sub adc cmp jmp dec sbbl mov xor mov ss add add stos (bad) in sbb mov in or inc pop jl mov out or popf mov xor xchg mov xor xchg push insl lea cmp xchg scas lret out and pop ja mov jmp and pop jl mov lock popf mov dec andw push outsb mov aaa push jno stos (bad) in sbb lods lret and int or pop jp mov or inc pop jl mov cvtsd2si (bad) lahf mov dec imul jno stos (bad) in push cmp xchg scas lret call js mov jmp and pop jp mov icebp or pushf mov dec gs sahf mov dec push notl dec push movsb roll add fdivrp pop xor insl mov cmp nop lods leave out pop cmp jne scas int3 call jp mov in add sub sbbl mov xor xchg push jno stos (bad) in push cmp xchg scas lret call ja mov ljmp iret in or mov out or inc bound mov dec imul mov xor (bad) aaa push jno stos (bad) in push cmp xchg mov jmp and bound adc mov dec insb mov sbb push jae lods leave in pop cmp jbe scas int3 call js mov lock sahf mov dec push clc adc movsb ret sbb (bad) loop add sbb push jb stos enter cmp jne mov jmp and pop jp mov out or inc bound mov dec gs lahf mov xor mov xor (bad) sbb push je scas lret out and int pop and jns mov in or inc pusha jl mov out or pushf mov dec sbbl movsb rcr sbb push outsl mov cmp xchg scas lret call js mov in or mov out or inc xchg push outsb mov cmp jbe scas int3 jmp jns add inc andl inc ja in dec test into or push imul imul xchg movsb rcr push xor (bad) cmovae sub mov cmp stos (bad) jecxz sbb push jae lods enter cmp int pop add inc popa jge mov out or inc popa jle mov out cvttps2pi sbbl mov xor xchg xor mov push outsb mov cmp (bad) scas int3 call js mov jmp and mov in or inc pop jnp mov in or inc popa jle mov lock popf mov dec push clc adc dec push mov xor xchg dec insb mov cmpsb (bad) lock inc popa jle mov lock mov xor mov xor xchg xor mov sbb insl mov aaa push jo test cmp xchg lods lret and jbe mov ljmp mov jmp and pop jnp mov out or add sbbb inc sbbl mov xor xchg xor mov xor mov ss jo test cmp xchg scas int3 call ja mov jmp ja mov ljmp mov jmp and pop jns mov jmp and pop jns mov out or inc popa jle mov lock fwait mov inc bound mov inc bound mov das dec push cmc adc dec push mov es xchg (bad) stc sub lret cld dec jno lods leave in pop cmp jne scas int3 add add xchg mov jmp and mov in or dec gs sahf mov dec push notl dec push mov xor mov xor add in pop cmp xchg scas int pop and jp mov in or inc pusha jge mov out or inc bound mov inc sbbb dec push clc adc dec insl mov ss jo stos (bad) jecxz sbb lods leave in pop cmp xchg mov ljmp mov jmp and pop jp mov in or inc bound mov dec sbbl mov xor xchg xor add sbb push jb scas lret call js mov ljmp mov jmp and pop jp mov shr or inc pop jl mov out or inc popa jge mov lock dec data16 lahf mov dec test notb das dec imul ss jo test cmp nop lods lret and mov repz mov dec imul xchg push insl mov xor vpaddd cmp scas lret call js mov jmp and pop jp mov in or inc popa jle mov xchg (bad) ss and jp mov in or test (bad) sbb push jae lods leave out pop cmp jne scas lret call js mov jmp and mov in add pushf mov dec push notl xor xchg xor xchg add push insl mov xor (bad) loopne sbb push jae lods leave in push cmp nop lods leave out pop cmp xchg scas lret and lret call ja mov ljmp mov (bad) movntsd sbbl lahf mov dec andl adc dec addr16 clc sub cmc adc dec imul mov aaa push jno stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out pop cmp mov push jae scas int3 jmp js mov jmp and pop jp mov out or inc pusha jge mov out or inc bound mov inc sbbl mov ss jo test cmp mov add push cmp xchg lods lret call ja mov jmp js mov out or inc popa jle mov icebp or pushf mov dec sbbl mov das dec push clc adc cmpsl ret add add lods leave in push cmp xchg scas lret and int3 call ja mov jmp jns mov in or inc popa jle mov dec sbbl mov xor xchg xor mov xor insl mov cmp (bad) lods enter cmp xchg lods lret and int3 call js mov ljmp mov in or inc bound mov das dec imul xchg fdivr push xor mov xor insl mov ss outsl mov cmp xchg lods lret and int push and jns int3 add insb movsb (bad) or ja in dec jnp jmp scas lret out and shr or sub gs sahf mov dec andl adc dec push notl xor xchg xor mov aaa push jo stos (bad) jecxz sbb push jno stos (bad) jecxz sbb lods leave in dec insb mov xor vpaddw ss jo test cmp jne scas lret and int3 jmp mov rcr pop xor outsb mov aaa push jo test cmp add in or inc pusha jl mov out or inc add popa jge mov lock inc bound mov inc arpl adc gs lahf mov dec push mov xor mov xor mov xor (bad) loopne sbb (bad) aaa push jae lods enter cmp add and jns mov in or pop jp mov in or mov in or inc pop jnp mov icebp or pushf mov dec sbbl mov das dec push notl xor xchg xor mov xor (bad) loopne sbb push outsl mov aaa push jo test cmp (bad) lods enter cmp nop lods lret and pop js mov ljmp cltd mov out or sub lcall popa jle mov icebp or pushf mov dec push mov xor outsb mov ss outsl mov aaa push jo stos (bad) loop sbb push jno stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret out and pop js mov jmp or inc popa jge mov out or inc bound mov inc arpl push sub sbbb dec push notl dec imul mov xor insl mov xor ret loopne sahf into jmp sub jle mov lock fwait mov inc arpl mov lock pushf mov dec sbbb inc arpl adc mov dec addw add cs test cmc adc dec test cmc adc dec andl adc dec imul xor xchg dec push mov xor xchg xor xchg sbb push outsl mov add lcall sbbb dec gs lahf mov dec push notl dec push mov sbb push je lods lret and jbe scas lret call ja mov ljmp mov in or inc pop jnp mov out or inc popa jge mov repz data16 lahf mov dec test notl xor mov xor mov xor (bad) aaa push jo lods lret pop cmp jne scas lret call add add pop ja mov jmp js mov in or and push dec test or loop pop mov ss outsl mov cmp mov and ret nop rclb push movsl loope outsb scas jecxz jg add pusha stos out jae out sub test notl dec push movsl ret sbb push jo test cmp (bad) lods leave out pop pop jnp mov out or inc popa add adc out jo aad sub cwtl fildll imul in and shr or inc popa jle mov dec imul sub repnz jb rorb inc pushf xlat sbb lock jbe incl leave pop pop (bad) fisttp adc jae add in pop lahf fmuls inc jge or jbe scas int3 jmp jns mov in or mov in or inc pusha jl mov out or inc popa andl (bad) lea inc popa jge mov lock pushf mov dec gs sahf mov dec andl sti sbb push jb stos enter cmp xchg scas lret and pop ja mov ljmp mov in or inc pusha jl mov out or inc bound clc xor add jge mov lock pushf mov dec gs lahf mov dec push clc adc movsl rcr pop cmp mov cmp nop lods lret and jbe scas int3 call ja mov ljmp mov in or inc pusha jl mov cvttsd2si (bad) sahf mov add adc dec test notb das dec imul xchg int cmp and fild sbb out es mov add insl cmpsl loop jno mov out or inc arpl mov dec gs sahf mov dec test notl xor outsl add and int3 jmp js mov in or mov out or inc popa jle mov lock pushf mov dec push (bad) sbb (bad) sbb push jb stos enter cmp lret jle lock popf mov dec imul xor (bad) aaa push jno stos (bad) in push cmp xchg scas lret inc xorb mov jmp jp mov inc addl add pop cltd rorb inc mov adc mov sbb test out popa cltd rcll pop stos in sub cli push jp divl ja add fcoms push fwait loop jb mov dec sbbl mov jae repnz mov pop inc test minps stos out cmp movl cmp add ss movsl loop jo divb pop mov enter mov aaa jne push dec jge ljmp jo xchg lods lret push mov cmc dec mov ss jo test cmp lea cmp (bad) stos int3 jmp ja mov jmp ja mov jmp ja mov jmp hlt xor mov dec imul ss jo test add add loope sbb push outsl mov xor (bad) loopne sbb ret (bad) sbb ret sbb insl mov ss outsl mov xor (bad) sbb push outsl mov ss outsl mov ss outsl mov cmp (bad) stos (bad) in sbb add xchg mov jmp js mov jmp ja mov ljmp mov ljmp mov in or inc pop jnp mov out or inc add mov inc arpl mov xchg lock mov cmpsl aad xor mov pop inc jo aad inc jge ljmp mov int3 add mov cld xor aam jne,pt fist dec jg out push xchg mov mov aad pushf roll adc stos fist push lcall jnp std xor test pushl jb fist movsb out sub push in and jle clc xor jmp outsb mov or loope pop movsl loop jno add enter int pop xchg loopne gs add xor sub imulb push lods loope sbb push jae lods lret and int3 jmp jle mov lock pushf mov dec gs add or mov fs and pop jl mov out or inc popa jle mov icebp push sub andl sahf mov dec sbbw dec push notl xor mov xor xchg aaa push jo add aaa push jo stos enter cmp (bad) stos enter cmp nop lods leave out pop cmp jne scas lret and jbe scas iret in or mov in or mov out or inc pusha jl mov out or inc bound mov lock fwait mov inc andw dec test notb das dec imul cld sbb (bad) ss outsl mov cmp mov cmp jne scas lret call jbe scas int3 call ja cwtl mov in or inc pusha jl mov out or inc pusha jge mov out or inc popa jge mov dec andl adc dec push notb das dec imul xchg xor xchg add add mov cmp stos (bad) jecxz sbb lods leave out and lret call js mov ljmp mov out or inc popa jge mov out or inc popa jle mov icebp or popf mov dec mov add xchg sub fdivrp push lahf xlat cmp xchg mov jmp and pop jp fsubrl jno out add xor mov xor xor (bad) icebp push sub mov xor xchg call rorl inc jl push add sbb push cltd fcoms mov mov sub mov ljmp push xchg xlat push pop lods out sub mov sub and enter int pop jle mov push mov add daa test xor insl mov xor (bad) aaa push outsl mov aaa push jo test cmp stos (bad) jecxz and jne scas lret out and (bad) aad sub sbbl lahf mov dec push push mov cld dec imul cmp (bad) lods enter cmp nop lods leave in push cmp nop add inc pop jns mov jmp and pop jns mov in or inc bound mov inc fs loop outsb fwait mov dec data16 lahf mov hlt add mov push (bad) rcrb pop popf lock or leave lock dec push clc adc xchg int pop cltd in xor idivl int3 or jecxz push scas out dec jb lods lret and lret call add cwtl mov out or inc pusha jge mov out or inc popa jge mov out or pushf mov inc sbbb dec sbbl mov xor xchg test adc add cmp jbe mov cmp es lcall (bad) sbb ret loopne sbb push outsl mov ss outsl mov cmp add and int push and pop jns repnz insb mov ss outsl mov aaa push jo test cmp mov and int3 jmp js mov out or inc pusha jge mov out or inc bound mov inc arpl push sub sbbb dec sbbl (bad) cvttss2si test xor xchg xor xchg xor mov dec imul xor insb mov cmp mov cmp lret and jne scas lret pop cmp jne scas lret out and jne scas lret jmp ja mov in or inc pop jnp mov in or inc pop jnp and enter in push bound loopne add and sub mov loope dec jns ljmp movsl fbld pop fwait rorl inc xorb outsl stos cli sub addb mov dec imul mov ret loopne sbb push jo test cmp cmovs mov das dec imul add dec lcall mov ljmp mov in or inc jge add xchg rcll pop js mov jmp and mov in or inc pop jl mov dec sbbb dec sbbb dec sbbl sahf mov dec gs sahf mov dec imul xor mov dec insb mov xor mov xor insl add in and mov inc sbbb dec sbbl lahf mov dec andl adc dec add ret pop xchg leave add scas lret call js mov ljmp mov in or mov in or inc pop jnp add bound mov add jg mov dec sbbl lahf mov dec push clc adc movsb rcr pop xor jno stos (bad) jecxz sbb push jb lods enter cmp xchg scas lret and int3 jmp in and xchg pop ss jo scas lret and jbe scas lret call jbe scas int3 call ja mov testb cmp pop xchg iret adc jge mov lock dec sbbl adc dec test notl dec imul xchg xor mov xor insl add and lret call ja mov ljmp mov jmp and pop jp mov in or add inc pop jnp mov in or inc pop jg mov inc sbbb inc sbbb dec sbbl sahf mov dec andl adc dec push mov xor xchg dec imul xor mov xor mov xor insl mov cmp (bad) stos (bad) in sbb stos (bad) in sbb stos enter cmp (bad) lods enter cmp nop lods leave add push and jl mov out or inc pop jl mov out or inc popa jle mov inc arpl push sub sbbb dec sbbl push inc jl or dec test notb das dec push notl xor xchg add movsb rcr push xor lea cmp mov cmp (bad) lods enter cmp xchg lods lret pop cmp jne scas lret out and int3 jmp jnp mov in or inc pop jnp mov in or inc pusha jl mov out or inc pusha jge mov out or inc popa cmpsl lret and int3 in or mov out or inc pusha jge mov lock pushf mov cmpl jnp mov out or inc pusha jge add dec imul xchg push insb mov xor insl mov xor insl mov cmp mov and aas outsl hlt and cld sub (bad) pop xchg int ss mov roll cmp push cmp push mov push cmp fstl sbb test int xor roll jne,pt loopne inc jle out push xorb adc (bad) dec mov push jp push popa shlb pop cwtl int3 std sub mov imul scas lret call add cwtl mov out or inc bound das dec push notl xor mov pop gs (bad) sbb mov dec push mov xor xchg aaa push jo test cmp mov cmp mov cmp mov cmp (bad) lods enter cmp xchg mov jmp ja mov jmp js mov ljmp mov jmp and add jns mov jmp and pop jns mov jmp daa inc pusha jge mov out or inc popa jle mov lock inc popa jge mov out or inc popa jge mov out or inc pusha jge mov out or inc popa jge mov dec data16 lahf mov dec sbbl adc mov dec andl adc add mov push outsl mov aaa push jo test aaa push jno stos (bad) loop sbb add xchg lods lret pop cmp xchg scas lret pop cmp xchg scas lret and pop jns mov jmp and pop js mov jmp and pop jns mov jmp and pop jns mov ljmp mov ljmp mov out or inc pusha jge mov out or inc pusha jge mov out or inc popa jle mov add out or inc popa jle mov out or inc popa jle mov out movntps sbbl lahf mov dec data16 lahf mov dec test cmc adc dec andl adc dec push sti pop xor insl mov xor ret loopne sbb ret loopne sbb ret loopne sbb push outsl mov lods leave in push cmp lret call jbe scas int3 jmp ja mov jmp js add mov sbb ret sbb outsb mov cmp nop lods leave out pop cmp xchg lods lret pop cmp jne scas lret and jne scas lret out and lret call jns mov jmp and pop jns mov jmp and pop jp mov jmp and pop jns add and mov in or mov lock fwait mov inc sbbb inc sbbb dec sbbl push mov dec imul xchg xor mov xor insl mov xor (bad) loopne sbb push outsl mov and pop ja mov ljmp mov jmp js mov jmp and pop jns mov add or pushf mov inc arpl mov dec imul xchg xor xchg push insb mov xor insl mov cmp mov cmp nop lods leave in push cmp xchg lods leave out push add add pop je lods lret pop cmp xchg lods lret pop cmp xchg lods into jmp and pop jp mov in or mov in or mov in or mov in or inc pop jp mov in or inc bound mov icebp or fwait mov inc arpl mov inc arpl cvttps2pi sbbl lahf mov add mov ss outsl mov aaa push jo test cmp mov cmp pop jbe mov jmp ja mov sbb popf fbld inc pusha jge mov lock fwait mov lock pushf mov inc sbbl mov xor xchg dec imul xor add add in cs xchg vmovntps ret pop lea (bad) repnz mov mov mov adc scas out dec jl in dec js xlat or mov sbb mov mov pop dec test fistl inc js jmp cli imul jmp mov cltd (bad) hlt and sahf fstl inc jbe in and das pop mov cmpsb aad add push mov adc test xor xchg xor insl mov ss outsl add and in or inc pop jnp mov in or inc pusha jge mov out or inc popa jge mov out or inc popa jge mov lock inc arpl adc dec andl adc or ficompl pop xchg lret add add add test aaa push jo test into (bad) xor mov dec push test loope sbb push jno stos (bad) jecxz sbb lods leave in push cmp nop lods leave out pop cmp xchg lods lret and jne scas lret out and jp mov in or mov in or inc (bad) ret sti xor (bad) and jns mov in or mov out or inc popa jle mov dec test add pop xor insl mov xor vpaddd aaa push jno stos (bad) in sbb lods leave out pop and jl mov out or inc popa jle std das scas shr or jp ljmp iret adc stos (bad) jecxz sbb lods leave in and jnp mov in or inc pop jl mov and pop jp mov in or mov in or inc pop jl mov out or inc pusha jge mov out or enter mov movntsd (bad) sar (bad) mov ljmp mov jmp and mov mov adc (bad) call js mov lock inc bound mov inc arpl push sub sbbb dec data16 das dec test notb das dec imul xor mov sbb push jo test cmp stos (bad) jecxz sbb lods leave out pop cmp nop lods leave ljmp cltd mov out or inc popa jge mov lock inc bound mov lock fwait mov lock pushf mov inc arpl adc dec andl adc dec push mov das dec push clc adc mov xor xchg push outsl mov aaa push jo test cmp mov cmp (bad) lods enter cmp mov cmp (bad) scas lret call jbe scas int3 jmp ja mov jmp js mov ljmp mov ljmp mov jmp and pusha jl mov out or inc pusha jge mov out cmp cs xchg loope and pop js mov ljmp mov ljmp mov icebp push sub add xor mov xor xchg xor xchg dec imul xor mov cmp stos (bad) jecxz sbb push add jb stos (bad) in push cmp nop lods enter cmp nop lods leave in push cmp nop lods leave in and pop ja mov jmp jns mov ljmp mov in or mov in or inc pop jnp mov in or inc pop jnp mov icebp or pushf mov inc sbbb dec sbbl mov cs test notb das dec insb mov xor insl mov xor les in push cmp (bad) lods leave in push cmp nop lods leave in pop cmp xchg scas int or inc pop jnp mov add push sub sbbb dec sbbl mov cs test cmc adc dec xchg stc push xor mov add add ret loopne sbb (bad) loopne sbb push outsl mov aaa push outsl mov cmp nop lods leave out pop cmp nop lods lret pop mov cmp stos (bad) in sbb stos (bad) in sbb lods leave in and pop ja mov ljmp mov jmp and pop jp mov in or mov in or inc popa jle mov out or inc bound mov dec sbbw dec imul xchg cmpsl (bad) loopne sbb push jo test cmp mov cmp xchg scas lret call jmp dec mov pop (bad) hlt das arpl mov cmpsb in push test sub push jge mov icebp adc jnp testb lcall add sub sbbb dec gs sahf mov dec andw dec push notb xor mov xor (bad) aaa push jo test aaa push jno stos (bad) in sbb lods enter cmp nop lods leave jmp js mov ljmp mov jmp and pop jp mov in or mov in or inc pusha jl mov out or inc popa (bad) lahf mov dec andw dec test cmc adc dec push add sbb insl mov xor lds dec (bad) mov adc jb fmuls push enter addl out inc mov rcr sbb (bad) loopne sbb push jo test aaa push movsb fisttpl inc jbe inc jns push add inc pop jl mov out or movsl fcoms dec jnp repz xchg scas lret call js mov ljmp mov icebp or sahf mov dec sbbw dec push clc adc dec imul xor mov (bad) xor pop js mov ljmp mov in or mov in or inc pop jl mov out or inc popa jge mov lock inc arpl mov dec push notl xor mov xor xchg xor mov aaa push jo test cmp xchg scas lret out and int push and pop js mov (bad) lock inc bound mov dec sbbl lahf mov dec push mov add movsb rcr push xor mov xor (bad) loopne sbb push jo test cmp mov cmp int3 call ja mov ljmp inc jnp out and pop ja mov jmp and mov in or dec sbbl mov xor mov xor mov xor (bad) sbb push jo stos lret and into jmp and pop jp mov in or inc pop jl mov out or inc pusha jge mov out or sub mov dec insb mov aaa push jo test cmp mov add pop js mov ljmp mov in or pop jl mov lock mov add fprem1 adc dec imul xchg push insb mov ss outsl mov ss jo lods leave in pop cmp xchg scas lret and rolb xor adc dec push notl dec imul xor outsl mov and (bad) add cmp lahf into (bad) xor or pop stos (bad) in push cmp xchg scas int3 call jns mov in or inc pop jl mov out adc dec imul mov push outsb mov ss outsl mov cmp (bad) stos enter and pop js mov out cmp adc xlat clc adc mov xor insl mov sbb lods enter cmp nop lods lret and or add popf roll jbe and jge mov out or inc popa jle mov out or popf mov dec sbbb dec push movsb rcr push xor mov dec imul xor mov xor insb mov push push test and mov dec insb mov xor insb mov xor outsb mov ss outsl mov aaa push jo test cmp xchg scas lret and jne scas int3 jmp js mov ljmp mov ljmp mov jmp and pop jp mov add or lahf mov dec test notb das dec push clc adc dec push mov sbb push jo test pop add sub add sbbl sahf mov dec sbbw dec test notl xor mov xor mov xor (bad) ss outsl mov aaa push jo test cmp mov cmp (bad) stos (bad) in and pop js mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or mov in or inc pop jnp mov icebp or pushf mov dec sbbl lahf mov dec andl adc dec push notl xor add sbb lods enter cmp xchg lods lret pop cmp lret call ja cwtl mov out or inc popa jge mov dec push add add push xor mov push insl mov xor outsb mov aaa push jo stos (bad) jecxz sbb push jb stos enter cmp int3 jmp js mov jmp and pop jp mov in or mov in or inc pusha cltd aad aas jae in jno in and vcomisd leave add ja mov jmp and pop jns mov in or mov in or inc pop jl mov out or inc popa jge mov dec test notb das dec push stc adc movsb rcr pop xor mov xor insl mov cmp (bad) stos enter and pop ja mov ljmp mov in or mov out or inc popa jge mov add adc dec push out sub add add add add or into ljmp mov jmp and pop jp mov out or inc pusha jl mov out or inc popa jge mov and pop js mov out or inc pusha jge mov out or inc bound mov lock pushf mov dec sbbl lahf mov dec push mov xor insl mov xor ret loopne sbb (bad) ss outsl mov aaa push jo stos (bad) jecxz pop cmp jne scas lret out and int3 jmp ja mov jmp js mov add ds ja mov ljmp mov out or inc bound mov inc sbbb dec sbbl lahf mov dec test and add add add outsl stos loope inc jnp ljmp inc pop jnp mov out or inc popa jle mov dec gs sahf mov dec push (bad) sbb push jae lods leave out pop cmp jne scas int3 jmp js mov ljmp mov out or inc pusha jge mov lock popf mov dec imul mov ss outsl mov cmp mov cmp nop lods lret and shr or inc popa jge mov lock popf mov dec andl adc dec imul mov push jno stos enter cmp xchg lods lret and int pop and pop jnp mov out or inc bound mov dec add gs mov xor mov push outsl mov and jbe mov ljmp mov out or inc arpl mov xor mov aaa push jno stos (bad) in sbb lods leave out pop cmp int push and jp mov out or inc popa jge mov repz dec push clc adc dec imul xor (bad) sbb push jb lods lret and into ljmp mov lock inc arpl mov dec andw dec imul mov aaa push jno stos (bad) in push cmp int push and jns mov in or inc pop jl mov out or inc arpl mov dec sbbw dec add add mov xor (bad) sbb push jno stos (bad) in push cmp add and mov out or inc popa jle mov icebp or mov sbb vpaddd aaa push jno stos (bad) in push cmp xchg scas lret out and pop ja mov jmp and mov out or dec sbbl mov xor xchg xor mov aaa push jo stos (bad) in sbb lods int pop and jp mov in or inc pop jl mov out or inc bound mov dec data16 lahf mov dec imul lea cmp nop lods leave out and jns mov in or inc pop jl mov out or inc bound adc dec push clc sbb outsb mov aaa push jo stos (bad) in sbb scas lret out and inc pop jl mov out or lea or dec insb mov cmp add sub fwait mov dec gs lahf mov dec push mov xor outsb mov cmp xchg scas int3 jmp jns mov in or mov out or inc bound mov dec test clc adc movsl ret sbb push jae lods leave out and int pop and pop jp mov out or inc popa jle mov dec gs lahf mov dec imul mov cmp jbe scas int3 jmp jp mov in or inc popa jle mov icebp push sub add (bad) lahf mov dec insb mov ss jo test cmp nop lods leave out and into jmp or inc arpl adc mov push outsl mov cmp pop ja mov in or inc pop jl mov out or inc bound adc rcr push xor mov cmp xchg scas lret call js mov jmp and mov out or inc bound mov dec je cmc xor test adc mov (bad) ds rcr sbb (bad) aaa push jo fdivr sbb push outsl mov aaa push jo stos (bad) jecxz sbb stos enter inc pop jns mov jmp and pop jp mov in or inc pop jl mov out or inc popa jge loop push mov dec jnp fiaddl xor lea sahf fcomps push nop movl sbb mov (bad) lcallw movsb (bad) or add mov push dec data16 cmp sub jmp mov lock pushf mov dec sbbl lahf mov dec push mov xor mov xor insl mov xor vpaddd aaa push jo test aaa push jo lods leave out pop cmp jne scas lret out and jne scas lret and int push and pop jns mov ljmp mov in or mov lock inc bound mov inc bound mov inc arpl push sub add adc mov dec push mov xor mov push insl mov xor insl mov add nop lods leave in push cmp xchg mov jmp ja mov ljmp lcall sbbl lahf mov dec sbbl adc movsb rcr adc movsb rcr push xor mov push mov cld xor fidivr push jae lods leave out pop cmp xchg mov jmp and pop jns mov in or pop jp mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jl mov out or inc sbbl popf mov dec sbbl popf mov dec sbbl sahf mov xchg leave std xor notl movsl ret pop xor insl mov xor insl mov aaa push outsl mov push cmp xchg mov jmp and jns mov jmp and jns mov ljmp lcall popa jle mov lock and jmp and pop jp mov in or pop jp mov in or mov in or inc pop jnp mov out or inc popa jge mov lock inc andw dec test notb das dec push notb das dec push notl dec push mov xor mov push jo stos (bad) loop sbb push jno stos (bad) loop sbb push jno stos (bad) jecxz sbb push jno stos add (bad) jecxz sbb push add add cmp nop lods into jmp and pop jns mov jmp and pop jnp mov out or inc pusha jl mov out or inc pusha jl mov out or inc pusha jl mov out or sub test das dec push notb das dec push notl dec add cmpsl (bad) loopne sbb push outsl mov ss outsl mov cmp (bad) lods enter cmp (bad) lods leave in pop cmp xchg scas lret out and int pop and pusha jl mov lock lahf mov dec sbbl adc dec push sbb push outsl mov cmp mov cmp mov cmp mov jmp es pop jnp mov out or inc popa jge mov lock inc bound mov add add push sub sbbl lahf mov dec imul xor mov xor (bad) loop sbb push jno stos (bad) in sbb stos enter cmp xchg mov shr or inc pusha jge mov out or inc arpl mov dec sbbl mov push insb mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) in sbb lods leave in push cmp xchg lods lret and int3 ljmp mov repnz sub sbbl mov xor xchg xor mov xor insl mov aaa push jae lods leave out pop cmp jne scas lret call ja mov ljmp mov iret jmp and pop jp mov in or inc pop jl mov out adc mov dec andl adc dec push cli push xor mov ss jo test cmp (bad) scas lret call pop jp mov in or inc pusha jge mov repz gs sahf mov dec addw ret sbb lods leave out and iret in or mov in or inc pusha jge mov out or inc bound mov lock pushf mov dec sbbw dec insb mov xor mov cmp (bad) scas lret and int3 ljmp mov jmp and mov lock sahf mov dec imul xchg add rcr push xor mov xor mov cmp nop lods leave out js mov in or inc pop jl or cltd mov out or inc bound mov dec test cs mov (bad) sbb push jo add inc pop jns mov in or inc pop jl mov out or fwait mov das dec push xchg (bad) push outsb mov ss outsl mov ss outsl mov aaa push (bad) rorb pop lahf fidivl cmc xor lock movsl divl jg int3 jmp push test sub stc cmp cmp (bad) lods leave out pop cmp jne scas lret out and lret out and or pushf mov dec lods jmp in or add pop jnp mov out or inc pusha jl mov out or inc outsl mov sbb adc into sbb fstps push sahf loopne insb stos jmp ja or aam pusha (bad) scas lret out and pop stos loope pop cmpsb (bad) sbb push jae mov jmp jbe (bad) lock pushf add dec imul and jns mov jmp and pop jp fwait mov dec imul xchg xor mov xor insl mov ss outsl mov cmp stos (bad) in and pop ja mov jmp jns mov jmp and pop jp mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov dec sbbw dec push notl xor add xchg xor mov xor mov cmp mov cmp (bad) stos leave in pop cmp xchg lods lret and jbe scas int3 call js mov ljmp mov out or inc arpl cvttps2pi (bad) sahf mov xor xchg push insb mov xor outsb mov push cmp xchg mov ljmp pusha xchg ret repz mov mov adc jbe fidivr adc into xor sbbb dec insb mov xor mov ss outsl mov aaa push jo test cmp test cmp xchg scas lret out and int3 call ja mov call add xchg mov ljmp mov jmp and pop jp mov in or inc popa jge mov out or inc bound mov inc arpl mov inc sbbb dec sbbl lahf mov dec push mov xor xchg ss jo test cmp mov cmp (bad) lods leave in push cmp jnp mov out or inc pusha jge mov xor sahf aad pop lcall fwait rorb pop nop scas lret out and jbe ficom push pushf ficomp repz daa jns repnz andw dec imul xchg dec insb mov ljmp fistp jae call xor mov add cltd out imul ss (bad) or xchg lret imul lods leave ljmp insb (bad) lods leave in pop cmp xchg scas lret out and jne scas lret call ja mov jmp ja mov ljmp mov lock pushf mov inc arpl mov das dec push notb das dec push notl dec push mov xor lods leave out push cmp xchg lods lret pop cmp jne scas lret out and int3 jmp cmc and pop ja mov ljmp mov out or inc popa jge mov lock pushf mov inc arpl mov inc sbbb andb dec push notl dec push add xor mov xor mov xor (bad) cmp nop lods leave out pop cmp jne scas lret out and int3 call ja mov jmp ja mov ljmp (bad) jmp dec js sar sub mov or outsl stos fstl das insb mov scas add das gs rorl cmp fsts inc jp fist push lea mov iret add mov cmp int3 call ja mov ljmp aaa push jo test aaa push jo scas lret call jne scas lret call js mov ljmp mov jmp and pop jns mov jmp and pop js mov incb (bad) jecxz sbb push jb stos (bad) jecxz sbb push add jb stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jb stos (bad) in push cmp nop lods enter ds ja mov jmp js mov jmp js mov ljmp ljmp das dec push notb das dec push cld sbb fcomps jnp or lret ljmp or jl mov cmp add sub sbbl cmpsb ret (bad) sbb daa add std push test push (bad) aas mov sbb jecxz xchg cli pop xor mov xor sub cli xor inc mov pop push cwtl jecxz dec xchg adc fwait loop ja rcr push xor mov xor (bad) add cmp nop lods leave out pop cmp xchg lods lret pop cmp jne scas lret out and int3 call ja mov ljmp pop jnp mov add movntps sbbl sahf mov dec data16 sahf mov dec andl adc dec push cli pop xor insl mov xor (bad) loopne sbb push outsl mov aaa push jo xchg lods lret and jne scas lret out and iret in or mov in or inc pop jnp mov out or inc popa jge mov aas jae loop arpl adc mov dec push mov xor cwtl mov out or inc bound mov dec andl adc dec imul (bad) lods enter cmp xchg add add cmp int3 call ja mov ljmp mov jmp and pop jns mov lock pushf mov das dec push clc adc dec imul xor mov xor mov xor jo stos (bad) jecxz sbb push jb lods leave out pop cmp nop lods lret pop cmp jbe scas int3 call sbbb xor xchg xor outsb mov xor les dec jle out jb mov dec test add mov das dec test notb das dec insb mov xor mov xor mov xor mov xor mov xor insl mov aaa push jo test add sbb push outsl mov ss outsl mov aaa push jo test sbbb dec sbbl movsb rcr push xor jno stos (bad) loop sbb push jno stos (bad) jecxz sbb stos enter cmp (bad) stos enter cmp xchg mov ljmp mov ljmp mov in or mov in or inc pop jl mov out add sub sbbl mov xor xchg xor xchg xor ret loopne sbb (bad) ss outsl (bad) lods enter cmp nop lods lret pop cmp jne lods lret and lret out and int3 jmp jns mov in or inc popa jle mov lock add inc bound mov inc arpl push sub sbbb dec sbbl mov xor mov push insl mov sbb lods enter cmp nop lods leave out pop cmp xchg lods lret pop cmp js mov jmp js mov jmp and pusha jge mov lock sub sbbb dec sbbl xchg xor ret loopne sbb push outsb mov ss jo test cmp nop lods lret pop cmp jne scas lret jmp ja mov in or mov out or inc pusha jl mov out or inc popa jge mov lock inc bound mov dec sbbl mov notl dec push mov xor mov ss jo test cmp jbe scas lret call ja mov in or inc popa jge mov lock popf mov dec add movsl ret pop xor insb mov ss outsl mov cmp xchg mov jmp js mov jmp and pop jp mov in or inc pusha jge mov out or inc bound mov dec data16 sbb push jae lods leave in push cmp int pop and pop jl mov out or inc bound mov dec data16 lahf mov push insb mov cmp stos enter cmp xchg lods lret pop cmp jne mov jmp and mov icebp or popf mov dec jo test add sub dec test push cmp xchg scas lret out and into jmp and pop jp mov out or dec gs lahf mov dec andl adc dec push clc adc mov cmp (bad) lods leave out pop cmp jne scas lret jmp and mov in or inc pusha jl mov out or inc popa jge mov lock pushf mov inc sbbl mov sbb push jo test cmp nop lods leave out pop cmp xchg scas lret call ja mov jmp jns mov jmp sub jle mov inc sbbl sahf mov dec andl adc dec imul mov add aaa push jno stos (bad) in sbb lods lret and jne scas lret call ja mov jmp and pop jp mov in or inc arpl movntps test xor xchg push outsb mov push cmp xchg scas lret call js mov jmp sub lcall sbbl lahf mov dec imul ss outsl mov cmp mov inc pop jns lcall test notl dec push movsb rcr push xor mov cmp (bad) lods leave out pop cmp shr or inc popa jle mov lock lahf mov dec push outsb cmpsb loop push je lods leave out pop cmp jbe mov out add sub jg mov dec sbbl mov xor insl mov ss outsl mov cmp xchg mov ljmp mov out or inc bound mov dec data16 xor add sbb push jae lods lret out and jp mov out or mov xor mov push insl mov cmp nop lods leave out pop cmp (bad) lock dec imul jb lods enter cmp jne scas int pop and pop jl mov icebp push sub (bad) lahf mov dec imul cmp xchg scas lret call ja mov in or inc pusha jge mov inc sbbl adc mov add dec imul ss outsl mov ss jo test cmp (bad) stos enter cmp nop lods enter cmp xchg mov call js mov ljmp mov in or inc pusha jge mov out or inc sbbl mov cmp jne scas lret and into jmp daa inc pusha jl mov dec push notb xor cmpsl (bad) loopne sbb push jo test inc pop jns mov jmp and popf mov dec gs sahf mov dec test notl das dec push mov xor mov aaa push jo test cmp (bad) lods leave out pop cmp xchg scas lret out and int3 jmp jl mov out push sub sbbl dec push movsb rcr sbb push jo stos enter cmp xchg scas lret jmp jns mov out or dec push add cmp jbe mov jmp and popa sbbb andl sbb push jno lods lret and mov in or inc bound adc push jo test aaa push jo scas lret and int3 call jns mov in or inc bound mov dec push notb movsl rcr sbb add stos enter ds jbe scas lret call js mov jmp and pop jp mov repnz sub test das dec push stc push xor mov aaa push jno stos enter cmp jbe scas int3 add jmp jl mov out or inc arpl adc dec imul mov dec imul ss jo test pop jne mov jmp jns mov ljmp mov jmp and pusha jle mov dec test notb mov cmp shr or inc popa jg mov dec gs lahf mov dec imul mov cmp xchg scas int or in dec jl (bad) inc lcall mov add jbe lock sub sbbl mov das dec insl mov ss jo stos (bad) jecxz sbb push jb stos (bad) in sbb stos (bad) in push cmp (bad) lods leave out pop add cmp xchg scas lret out and mov in or inc pusha jl mov out or inc pusha jl mov lock fwait mov inc arpl mov mov fnop adc movsb rcr pop xor insl mov xor outsb mov aaa push jo test cmp stos (bad) jecxz sbb add xchg mov in or mov in or inc pusha jl mov out or inc popa jge mov lock inc arpl mov inc sbbb dec imul xchg dec insb mov sbb push jb stos enter cmp xchg lods lret and js mov ljmp mov jmp es pop jnp mov in or inc pusha jl mov out or inc popa jle mov lock or pushf mov dec andl adc dec imul xchg xor outsb mov ss outsl mov cmp lods lret pop cmp jne scas lret out and int3 jmp ja mov jmp and pop jp mov in or mov out or inc sbbb xor mov xor xchg xor mov xor insl mov xor ret jecxz sbb push je lods leave out pop cmp xchg lods lret and jne scas lret call add mov in or inc pop jl mov out or inc popa sbbb dec gs sahf mov dec test notb das dec imul xchg add fdivr adc movsb rcr sbb push outsl mov cmp mov cmp (bad) stos enter cmp nop scas lret and int3 jmp js mov in or inc pusha jge mov lock pushf mov dec data16 mov das dec push notl dec push movsl ret sbb push jae lods enter cmp pop jns mov in or inc pop jl mov out or inc popa jge mov lock pushf mov dec sbbl mov xor mov aaa push jo test cmp mov and pop ja mov jmp and pop jp mov lock pushf jecxz push xchg into sbb iret jmp and mov in or inc pop jnp add es pop jl mov out push sub sbbb dec gs sahf mov dec test notb das dec push notb dec imul xchg xor (bad) aaa push outsl mov cmp stos (bad) jecxz sbb push jae lods enter cmp nop lods leave in push ds js mov ljmp add jg or mov scas loop dec jl out and xchg int3 cld xor stc and jl mov cmc adc dec push clc adc dec imul xor insl mov ss outsl mov aaa add xchg scas lret and shr or inc pop jl mov out or inc popa jg mov inc sbbl add andl adc dec imul mov cmp mov cmp nop lods lret out and int push and jns mov in or inc pop jl mov dec sbbl mov xor mov mov dec push mov xor mov cmp (bad) lods leave in pop cmp xchg scas add in or mov in or inc pusha jge mov out or inc bound mov inc test xor xchg xor mov xor (bad) cmp (bad) stos enter cmp js mov jmp sub fwait mov icebp or pushf mov dec gs sahf mov dec test add notl movsb rcr pop xor outsb mov cmp nop lods leave out pop cmp jbe scas int3 jmp js mov jmp and pop jp mov in or inc pusha jge mov lock mov das dec push clc adc dec push movsb rcr pop xor insl mov xor vpaddd aaa push jno stos (bad) jecxz and int3 ljmp mov in or inc add mov dec imul mov cmp mov ds js mov jmp and pop jp mov in or inc pusha jge mov lock inc arpl cvttps2pi (bad) lahf mov xor mov aaa push jno stos (bad) in sbb bound mov add add (bad) sbb pop jne scas lret jmp pop cmpsl (bad) pop xor mov mov xor mov ss outsl mov cmp stos (bad) in sbb lods leave out pop cmp jbe mov in or inc pop jl mov out or inc popa jle mov cvttss2si (bad) lahf mov dec imul mov aaa push jno stos (bad) in push cmp xchg scas lret call ja mov ljmp fwait mov dec sbbl mov xor mov ss jo test cmp nop lods lret and call ficom mov and xchg in xor insl nop lods add ljmp mov jmp and pop jp mov in or inc pop jnp mov shr or inc pusha jge mov hlt adc mov dec push mov xor mov dec insb mov mov rcr pop xor mov xor insl mov cmp nop lods leave out pop cmp jne lods lret out dec imul xor mov xor mov xor mov aaa push jo test aaa push jno stos (bad) loop sbb push jno stos add call jne scas lret out and int3 call jp mov jmp and pop jp mov in or inc pop jnp mov in or mov inc arpl push sub jg mov dec add mov xor xchg push insb mov add rcr pop xor insb mov xor mov xor (bad) jecxz sbb push jb stos (bad) in push cmp xchg scas lret pop cmp jne scas lret and pop ja mov jmp js mov in or mov out or inc pop jl mov lock inc popa jle mov lock inc arpl mov inc arpl xchg push jo test aaa push jo test cmp (bad) stos enter cmp (bad) stos (bad) in sbb stos (bad) in sbb scas lret call ja mov call ja scas int3 add or inc pop jnp mov in or inc pop jl mov in or inc pop jl mov in or inc bound mov lock fwait mov lock inc bound mov lock pushf mov inc arpl mov inc andl mov das dec push notb das dec push clc adc dec imul insl mov aaa push jo test aaa push jno stos (bad) jecxz sbb push jb stos (bad) in sbb stos (bad) in sbb stos (bad) jecxz sbb push jb stos lret pop cmp je lods lret pop cmp nop lods leave out push cmp xchg scas lret out and jne scas lret and jbe scas lret call jns mov ljmp mov jmp and pop jns mov jmp and inc popa jle mov out or inc popa jg mov lock inc bound mov repz sbbl sahf mov dec gs add sahf mov dec gs sahf mov dec gs mov into sbb imul mov dec imul xor mov xor mov add push jno stos (bad) jecxz and jne scas lret out and int3 call jbe scas int3 call jbe scas int3 call ja mov call ja mov in or mov in or mov jmp and pop jp mov in or mov in or mov in or inc popa jge mov out or inc popa jge mov out or inc popa jge mov out or inc popa add adc gs sahf mov dec test stc adc mov xor xchg add add xor xchg xor mov dec imul xor mov aaa push outsl mov cmp test aaa push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno xchg scas lret jmp and jns mov jmp and pop jns mov in or pop jp mov in or mov in or mov in or inc pop jle mov lock fwait mov inc bound mov lock pushf mov inc sbbb sbbb dec push notb das dec push notb das dec push notb das dec push (bad) pop xor mov xor (bad) sbb push jo test cmp mov add lcall cmp stos (bad) jecxz sbb push jb stos enter cmp nop lods leave in push cmp int3 call js mov ljmp mov jmp jns mov jmp and pop jns mov jmp and pop js mov add push sub sbbb sbbb sbbl sahf mov dec gs sahf mov dec imul xchg xor test lods in dec je into add pop xchg cmpsl aam dec xorb add jb (bad) push mov imull dec jl call idivb jae (bad) cmovae push inc addl push xor (bad) or js loope inc lods cld cmp sub mov icebp adc add dec andw dec push mov xor mov xor (bad) and int push and jp mov in or inc pusha jl mov out or inc bound mov dec sbbl movsb rcr add push jb lods enter cmp xchg scas lret call jns mov in or arpl or inc arpl mov dec imul xor insl mov xor ret loopne sbb vpaddd ss jo test cmp stos (bad) out and jne scas lret call js mov jmp js mov ljmp mov jmp and pushf mov dec test xor mov xor add mov aaa push jno stos (bad) jecxz sbb lods leave out and jbe scas int3 jmp jl mov out or inc popa jle mov icebp push sub sbbl mov das dec imul mov push jo stos add out and pop ja mov jmp jns mov in or inc pusha jl mov out or inc xchg into add ja notl test loop sbb push jno stos (bad) jecxz sbb lods enter cmp nop lods leave out pop cmp jne scas lret call js mov out or inc pusha jl mov out or inc popa jle mov lock fwait mov inc arpl cvttps2pi (bad) sahf mov xor mov ss jo test sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb lods enter cmp xchg scas lret and pop jns mov jmp and pop jp mov in or inc (bad) mov mov call pushf mov dec sbbw dec insl mov loop pop scas icebp xor nop int push xchg jecxz arpl adc aam push lods jmp test (bad) cmp add mov out or inc pusha sbbl mov das dec imul xchg xor mov add inc mov sbb in jb adc iret sbb ljmp sar ja mov jmp and pop jp mov in or inc pop jl mov out or inc add mov xor xchg ret pop xor insl mov xor (bad) loopne sbb push outsl mov cmp stos (bad) jecxz pop cmp jbe scas lret call ja mov jmp jns mov in or mov in or inc pusha jl mov out or inc popa jge mov dec sbbl xchg xor xchg push xchg lret add mov cmp (bad) lods enter aas pop js mov ljmp mov jmp and pop jp mov in or mov in or inc pop jl mov out or inc pusha jg mov dec sbbl lahf mov dec andl adc dec imul xchg xor stos enter add push jae stos leave in push cmp nop lods leave in pop cmp xchg lods lret and int3 call js mov in or inc pusha jl mov out or inc popa jge mov lock inc bound mov dec sbbw dec test notb das dec insb mov xor insl mov ss outsl mov lods leave out pop cmp jne scas lret and int3 jmp jns mov out or inc bound mov lock pushf mov inc sbbl lahf mov dec push notb xor movsl ret sbb vpaddd aaa push jo test cmp mov cmp (bad) lods leave out pop cmp jne scas lret and jns mov in aaa outsl test daa jns out test xor mov ss outsl mov cmp mov ds js mov jmp and pop jnp mov in or inc pusha jl mov out or inc popa jle mov icebp push sub loop jo (bad) cmp enter (bad) adc fistpl push mov cmp out pop scas iret in add inc add inc mov or nop leave adc push xchg pushl jo add rorl push pushf ficoml dec nop fcoms jno pop pop mov sti arpl (bad) add add push pop pop repz std sub mov mov mov mov in and dec cmpl inc jl lock lcall add dec jle loope inc jg fisttp fstl inc je fimul inc jle out push mov rolb push inc jp out dec (bad) mov and xor enter mov scas fimul inc jo sar das pusha nop (bad) repnz mov adc jbe xlat push ss (bad) cmc es mov cmc sub mov mov mov mov mov sbb mov mov lret cbtw leave stc sub mov mov adc (bad) pop cmp leave stc sub mov mov push push mov clc sub aaa outsb mov sar je hlt sub inc jnp ljmp ja out pop xchg rclb push mov add scas in push mov (bad) cmp cmc xor out arpl (bad) imull movsb fstl push mov push inc jl add cmp in pop xchg int inc mov add push fstl dec mov in pop xchg fcompl pop xchg aam inc cmpb and fstpl pop xchg rorl inc ja in sub add cmp pop dec test ret (bad) xor (bad) cld cmp fcoml inc jne in push mov sti xor adc inc jnp fisttpl out push nop enter lahf aam cmp inc xchg (bad) in push cmp xchg scas lret and pop js mov ljmp mov in or mov out or inc popa jge mov hlt adc dec push notl dec push mov xor mov xchg hlt jae std dec jnp fisttpll push cmpsb ficompl pop mov or jno add mov aam jae scas int3 jmp js cwtl mov out or inc popa jle mov dec sbbw icebp push cmp shr or inc pusha jge mov icebp push sub sbbb dec test notb xor mov xor mov ss je lods lret pop cmp jne scas lret call js mov ljmp mov in or pushf mov dec gs sahf mov dec imul xor outsb mov aaa push jno stos (bad) in sbb lods leave out pop cmp xchg scas lret out and shr or inc popa jle mov lock sub sbbb dec imul xor (bad) jecxz sbb push jb stos enter aas add pop jns mov in or mov out or inc arpl mov das dec imul mov jnp ljmp sbb outsb mov ss outsl mov cmp stos (bad) in sbb lods leave out pop cmp jne scas lret call jge mov lock pushf mov dec gs sahf mov dec push notl xor xchg sbb push jo test cmp jne scas lret and int pop and pop jp mov in or inc pusha jl mov out or inc popa jle mov lock lahf mov dec push clc adc dec push movsb rcr pop xor insl mov aaa push jo test cmp (bad) lods leave in add pop ds js mov jmp and pop jnp mov in or inc pusha jge mov lock inc add mov xor xchg xor (bad) push cmp xchg lods lret and int3 jmp jns mov jmp and mov out or inc pusha jge mov lock lahf mov dec imul mov xor outsl mov cmp mov cmp add daa inc pusha jge mov lock inc arpl mov dec andw dec imul mov xor insl mov cmp nop lods leave out pop cmp jbe mov jmp js mov jmp es pusha jge mov push loopne bound add ss mov dec imul mov xor outsb mov add xchg scas lret and int push and pop jl mov out or inc pusha jge mov out or inc arpl mov dec sbbl sahf mov dec sbbw dec imul xor outsb mov ss outsl mov aaa push jo stos (bad) jecxz sbb lods leave out pop cmp jns mov out or inc popa jle mov lock inc bound mov dec gs lahf mov dec push mov push nop mov out push sub sbbl lahf mov dec insb mov xor (bad) cmp stos (bad) in push cmp xchg mov ljmp dec jp flds xor xor xchg xor (bad) add cmp jne scas int3 jmp jp mov dec sbbl mov cs test notb das dec imul xchg xor mov xor vpaddd aaa push jno stos (bad) jecxz sbb push jb lods leave out pop cmp xchg lods lret and jbe scas lret jmp and inc popa jle mov lock inc bound mov inc sbbl lahf mov dec test notb das dec imul fdecstp adc dec imul mov xor (bad) cmp mov add cmp xchg mov jmp and pop jp mov in or fwait mov inc sbbb dec gs sahf mov dec gs lahf mov dec push movsb rcr push xor mov xor mov xor insl mov xor (bad) loopne sbb push outsl mov cmp popl mov jmp jns mov jmp and pop jp mov in or mov in or inc pop jnp mov out or inc sbbb dec sbbl lahf mov dec imul xchg xor xchg xor (bad) aaa push jo test cmp mov cmp mov cmp add jae lods leave out pop cmp xchg mov ljmp mov in or mov aam push sub sbbb dec gs sahf mov dec sbbw dec imul xor outsb mov aaa push jo test cmp mov cmp nop lods lret and jbe mov jmp and pop jp mov in or sub sbbb data16 lahf mov dec test clc adc dec push mov xor mov xor vpaddd aaa push jo stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret and int or mov out or inc pusha jge mov lock inc popa jle mov lock inc bound mov add add sbbb test xor xchg xor xchg add test cmp nop lods lret and pop ja mov ljmp mov in or inc pusha jge mov lock inc popa jle mov lock pushf mov dec sbbl sahf mov dec insb mov xor insl mov stos (bad) in sbb lods leave out pop cmp xchg scas lret and jbe scas lret call jp mov in or inc pop jl mov out or inc popa jge mov out or inc bound mov inc sbbb dec sbbl cmpsb ret (bad) sbb ret loopne sbb (bad) sbb push jno stos (bad) in add lods leave out pop cmp jne mov in or mov out or inc arpl mov dec gs lahf mov xor mov xor mov aaa push jo test cmp (bad) lods enter cmp nop lods leave out pop cmp jne lods lret and int3 jmp js mov out or inc pusha jge mov out or inc popa jle mov das dec push clc adc dec imul xchg push outsl mov aaa push jo test cmp mov cmp nop lods leave out pop cmp jne scas lret call ja mov jmp sub jle mov dec push mov xor xchg ss jo test add add sbb push jno stos (bad) in sbb scas int3 jmp jns mov in or inc pop jnp mov out or inc bound mov dec add movsb rcr pop xor insl mov xor (bad) in sbb lods leave out pop inc pop jp mov in or inc pusha jge mov repnz sub sbbb dec gs sahf mov dec imul xor mov cmp lods add jmp and mov inc sbbb andw dec push movsb rcr pop xor mov xor insl mov out pop cmp je lods lret pop cmp jbe mov ljmp mov repnz sub sbbb dec andl adc mov add movsl rcr pop xor mov cmp nop lods lret and pop js mov jmp and pop jp mov in or mov in or sub sbbl mov xor mov xor mov push insl mov xor insl mov ss outsb mov cmp nop lods leave out pop cmp xchg mov jmp ja mov ljmp lcall bound mov lock popf mov dec push mov xor mov xor ret loopne sbb push jo stos (bad) loop sbb stos (bad) in sbb scas int3 jmp js mov jmp jns mov jmp and mov add or inc popa jle mov lock inc arpl mov dec push mov xor mov dec insb mov xor outsb mov cmp sti add inc pop jp mov inc arpl mov inc arpl push sub (bad) sahf mov dec data16 lahf mov dec test notb das dec imul xor mov xor (bad) loopne sbb push outsl mov push cmp xchg scas lret call ja scas int3 jmp and pop jp mov in or mov in or mov in or inc pop jnp mov in or inc pop jl mov out or inc arpl adc dec imul xchg dec insb mov rcr sbb insl mov xor (bad) loopne sbb push jb stos enter cmp (bad) stos enter cmp xchg lods lret pop cmp jne scas lret out and lret call pop jl mov lock fwait mov inc arpl movntps sbbb dec gs mov (bad) (bad) cld imul jmp js mov ljmp mov jmp and pop jp mov in or pushf mov dec sbbl mov xor test xor xchg xor xchg xor mov dec imul aaa push jno stos (bad) jecxz sbb lods leave out pop cmp jne add add ds ja mov jmp js mov ljmp mov out or inc pusha jl mov out or inc pusha jle mov lock inc bound push sub (bad) sahf mov dec push loop sbb push jno stos (bad) jecxz sbb push jb stos enter cmp (bad) stos enter cmp xchg lods lret pop cmp xchg lods lret pop cmp js mov ljmp mov ljmp mov jmp and pop jns mov jmp and pop jns mov jmp or inc popa jle mov dec push notl xor mov xor xchg xor xchg dec insb mov xor mov cmp mov cmp mov cmp add lods enter cmp nop lods leave out pop cmp xchg lods lret and pop jns mov ljmp mov jmp and pop jp mov jmp and pop jp mov jmp and pop jp mov in or mov hlt adc xor xchg xor xchg xor xchg xor xchg xor mov dec outsb mov xor insl mov xor insl mov aaa push jo test aaa push jo test cmp xchg scas lret out and mov out or inc bound mov lock dec sbbl lahf mov dec andl adc dec test cli push xor mov xor insl mov add ret loopne sbb ret loopne sbb outsb mov cmp mov cmp jne scas lret and pop ja mov jmp and mov out or inc pusha jge mov lock inc arpl mov dec push add ss jo stos (bad) in sbb lods leave in push cmp xchg scas lret and iret jmp and mov lock pushf mov inc arpl adc dec sbbw dec push movsb rcr pop xor mov and pop js mov in or inc pop jle mov dec test clc adc movsl ret sbb vpaddd aaa push jo stos lret and int3 ljmp mov out or add inc arpl adc dec test clc adc movsb rcr push xor xchg scas int push and jnp mov out or inc arpl adc cmpsl (bad) sbb mov ljmp mov jmp daa inc popa jge in pop lcall ljmp or inc pusha jl mov out or inc arpl adc mov dec imul xor mov push insb mov xor insl mov xor (bad) loopne sbb push outsl mov add pop ja mov ljmp mov ljmp mov in or inc bound push dec jns or xchg (bad) mulb push (bad) ret push nop (bad) cld aaa insb cmpsl fistl inc jbe fisttpl inc jb xlat or jae (bad) push cmp out sub fimull cmp inc xorb pop jbe mov pop lcall (bad) adc cmpsb ret pop xor outsb mov cmp mov cmp nop scas lret and jp mov in or mov in or sub sbbb gs sahf mov dec andw dec test notl xor mov ss outsl mov ss outsl mov cmp mov cmp nop lods leave in push cmp nop mov ljmp lcall push mov xor mov push insl mov aaa push jo test cmp xchg scas lret and inc js faddl add sub int3 jmp jns mov in or mov out or inc pusha jl mov repz cmp mov cmp nop lods leave out and pop jns mov in or inc pop jl mov lock sub sbbl cmpsl ret loopne sbb push jo test cmp pop ja mov imul int push and jp mov in or mov inc (bad) mov fstl inc js fmull jns,pt cmc and pop js mov ljmp mov in or mov in or inc popa jle mov dec push add sbb (bad) sbb push jno stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out pop cmp js mov jmp and pop jp mov in or inc pop jl mov out or inc popa jge mov lock pushf mov dec andw dec imul xor insl mov aaa push jo stos (bad) jecxz sbb stos lret pop cmp jne scas lret jmp js mov in or inc popa jle mov lock pushf mov das dec imul xchg xor mov aaa push jo test cmp xchg lods lret and jne scas lret call ja mov jmp jns mov in or inc pop jnp mov icebp push sub sbbl xchg xor (bad) loopne sbb push jo test cmp mov mov dec imul xor xchg xor mov push insl mov ss outsl mov cmp xchg scas lret call ja mov jmp js mov jmp and pop jp mov in or inc pusha jl mov out or inc popa jge mov dec andl adc dec push test pop jl mov (bad) cvttss2si (bad) lahf mov dec push notl dec insl mov ss outsl mov cmp jl,pt jns (bad) jecxz sbb push jae lods lret and jbe scas int3 call ja mov lock sub sbbb dec gs sahf mov xor mov xor insl mov xor (bad) movb addr16 roll aaa push add add imul outsl cmpsb roll xor (bad) pusha xchg enter mov ficomp push xchg enter lret pop xchg lret add adc mov aad inc jne (bad) or jo sar xor in dec (bad) mov mov (bad) pop xchg rcll dec (bad) lret mov add cmp leave add cmpb sub stos ljmp lahf fstpl pusha mov out xor idivl jl add mov loope push mov (bad) push mov (bad) xor int inc add inc jg mov push outsl mov aaa push jo test cmp mov and int3 call ja mov jmp js mov in or inc pusha jge mov add or inc bound mov icebp or pushf mov dec sbbl lahf mov dec xchg cli push xor mov pop jbe scas int3 call js mov jmp js mov jmp and pop jp mov in or mov icebp push sub sbbb dec fs ljmp fdivrp pop xor xchg std add fmull inc jge or dec imul mov aaa push jo stos (bad) jecxz sbb stos enter cmp nop lods leave in push cmp nop lods leave out pop cmp js mov ljmp mov ljmp mov jmp and pop add mov lock sub sbbb dec gs sahf mov dec imul add add add fnop adc mov xor xchg xor insb mov xor insl mov ss jo lods enter cmp nop lods leave in push cmp xchg scas lret and jne scas lret and jbe scas lret call jbe scas int push and jnp mov in or inc pusha jl mov out or inc bound mov lock pushf mov inc arpl mov das dec push sti pop xor insl mov xor ret (bad) sbb das push outsl mov aaa push jo test cmp stos (bad) loop pop cmp jbe scas lret call jbe scas lret call ja mov ljmp pop xchg rorl cmovs dec insb mov cmp push jae lods leave in push cmp nop lods leave out pop cmp xchg scas lret out and int3 jmp js mov ljmp mov lock fwait mov dec data16 sahf mov dec andw dec push notl dec push mov xor (bad) loopne sbb push outsl mov aaa push jo test cmp stos (bad) jecxz sbb push jno stos add out and iret in or mov in or mov in or inc pop jnp mov out or inc bound mov lock inc bound mov lock dec sbbl sahf mov dec sbbl out or inc pusha jge mov lock sub sbbb dec add add adc dec imul xchg jns mov jmp and pop jp mov in or mov in or inc pusha jge mov out or inc popa jge mov out or inc bound mov cmc adc dec test notb das dec push notl xor mov xor xchg dec insb mov xor (bad) jecxz sbb push jb stos enter cmp nop lods leave in push cmp xchg lods lret and jne scas lret call ja mov shr or pushf mov dec sbbl lahf mov dec test notb das dec push notl dec push cmpsb ret loopne sbb push outsl mov aaa push jo test cmp add (bad) lods enter cmp xchg lods lret pop cmp jne scas lret call jp add inc arpl cvttps2pi sbbl lahf mov jg mov inc arpl mov dec test notb das dec push notb das dec push notl dec imul xchg xor mov aaa push jno test cmp mov cmp (bad) lods enter cmp nop lods lret and lret call add mov inc arpl movntps sbbl mov xor mov xor xchg xor (bad) ss outsl mov cmp mov cmp xchg scas int3 jmp js mov ljmp mov out or inc add sahf mov enter (bad) out and jne scas lret call lock lods fimull xchg shr inc jb rorl inc jns in push mov ret stc xor (bad) dec jg in and mov fist jp fistp jp (bad) aas xchg mov icebp push sub sbbl arpl mov mov notb das dec push notb xor xchg xor add in push cmp xchg lods lret pop cmp jne scas lret and jbe scas lret out and int3 call ja mov in or mov in or inc pusha jge mov out or add daa inc pusha jl mov lock fwait mov inc sbbb andl adc dec addl rcr push xor xchg dec insb mov xor mov xor insl mov cmp nop lods leave in pop cmp nop lods leave out and jne scas lret and jbe scas int3 call js mov ljmp mov out or inc pusha jl mov out or inc popa jge mov icebp or popf mov dec gs sahf mov dec imul mov add push jno stos (bad) loop sbb push jb stos (bad) jecxz sbb lods enter cmp (bad) lods enter cmp shr or inc pop jp mov in or mov add add or mov in or inc pop jl mov in or inc popa jle mov dec data16 sahf mov dec andw xor outsb mov cmp mov cmp nop lods enter insl cmpsb loope inc jl sbb push jb stos enter cmp nop lods leave out pop cmp xchg lods lret pop cmp jne scas lret out and jne scas int3 call ja mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jge mov out or inc popa jle mov lock lahf mov dec push fdivrp pop xor insb mov xor ret (bad) sbb ret (bad) sbb (bad) jecxz sbb push jb stos enter cmp nop lods add add out pop cmp xchg scas lret out and iret in or mov in or mov out or inc bound mov repnz sub addb mov jge call adc jecxz jno in es xchg int3 add ja repz loope fstpl pop pop hlt inc jbe ficom inc mov (bad) cmp repnz cld ss add jge cld cmp and mov dec gs sahf mov dec push notl xor test xor xchg xor xchg push outsl mov aaa push jo test pop cmp jne scas int3 call jbe scas int3 call ja mov jmp jns mov out or inc pusha jl mov out or inc popa jge mov out or inc bound mov inc sbbb gs sahf mov dec push mov xor xchg push insl mov sbb push jb stos out pop mov push insb mov xor jno stos enter cmp nop lods enter cmp nop lods leave out pop cmp jne scas lret and jne scas lret call ja scas int3 jmp jp mov in or inc pop jnp mov out or inc bound mov lock pushf mov inc sbbb dec fs ficoml jg cli sbb outsb mov ss outsl mov pop cmp xchg scas lret call ja mov jmp js mov jmp sub jg mov inc arpl add popf mov dec sbbl lahf mov dec andl adc dec push cld sbb ret loopne sbb push outsl mov aaa push outsl mov pop cmp jne scas lret out and int3 call jp mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov lock inc bound mov repz gs lahf mov dec test notb das dec push clc adc dec push mov xor mov xor jo test cmp mov cmp nop lods leave in push cmp pop js mov ljmp mov in or inc pop jnp mov out push sub sbbb dec add fbld push pop sti inc jo test cmp mov cmp mov cmp xchg mov jmp js mov ljmp mov ljmp mov jmp add inc bound mov icebp or pushf mov dec andl adc dec push notb das dec push notb das dec push notl dec imul xchg xor outsb mov xor (bad) loopne sbb push outsl mov aaa push jno test cmp stos (bad) jecxz sbb pop je scas lret call js mov ljmp mov ljmp add inc popa sbbl lahf mov dec imul add xor mov dec insb mov xor mov xor insl mov ss outsl mov push je lods lret out and int push and pop js mov ljmp lcall arpl push cs push stc adc sbb mov push cmp les pop xchg lret sbb mov lret and jbe scas lret out es pop jnp mov in or inc pusha jl mov out or inc pusha jge mov out or inc bound mov inc arpl push sub sbbb dec andl adc dec test notb das dec push notb xor mov ss outsl (bad) push cmp xchg mov ljmp pop jns mov jmp and pop jp mov in or inc pop jl mov out or inc pusha jge mov lock fwait mov dec push clc adc movsb rcr push xor mov ss jo test cmp xchg scas lret call ja mov in or mov out or popf mov dec push notl dec push mov xor mov xor jno stos (bad) in push cmp nop lods leave out pop cmp jne scas lret call jbe scas int3 ljmp mov jmp and mov icebp push sub sbbb dec sbbl or cwtl lret push cmp iret sti add bound scas loop push mov mov add add mov pop push xchg (bad) pop mov icebp and mov adc mov push dec xorl lret pusha mov ficompl dec lods ljmp push xchg stos fcoml inc je aad imul das bound movsb or call sub (bad) mull push mov repnz pop imulb pop mov iret add insl stos fist inc ja fcoml dec xorb cld xor enter xchg leave cld cs xchg iret or mov mov mov leave add insb lahf rolb xor cwtl lret imul int3 (bad) xor rolb cmp (bad) adc mov mov mov sub add insb sahf iret add gs jecxz dec test add add int3 pushl arpl cltd int3 add push into add jns loop dec jg in push mov imulb pop mov stc xor lret std xor movsl (bad) inc ja fimull dec cmpl ret (bad) cmp movsl fmuls cmp mov lcall sub (bad) incl lock mov (bad) divb lcallw test or inc jae fisttpll inc je jecxz imul lret jb sbb (bad) imull leave add gs aad cmp sahf rolb xor xchg leave add lcall pop inc js loopne dec jle jmp stc sub xchg (bad) cld xor or mov and add scas in dec test (bad) sti xor in push mov stc xor roll add mov add test adc sub into cmp add pop xchg iret push cmp sbb sar push aam aas jae ficom ret pop mov gs jl pop dec xchg sub shll cmova test mov (bad) push inc jge out push mov int inc jge icebp xor fistp push mov add outsl movsl fistl dec test (bad) or stos out pop cltd rorl inc cmpb cmp sbb (bad) imulb data16 aam inc ja loop push (bad) leave add outsb sahf rorl cmp rolb xor cmp aam cmp add sub into add insl int push sub sbbl mov cs test mov stc sub rolb jno mull inc popa mov xor mov xor (bad) loopne sbb xor inc mov sub cwtl int3 add jae ficom inc cmpb in dec jle jmp pop cltd aad pop lcall fcomi adc dec push mov xor mov mov lock lea (bad) mov or lock aad inc xchg clc sub sahf fstps push (bad) add and push test hlt xor cmc es nop (bad) repnz enter mov dec test loopne inc je add jbe in and (bad) imulb mov sbb rorl inc add (bad) lock pushf mov inc sbbb inc sbbb dec gs sahf mov add add add loop pop xchg into add jp repz stos loopne dec (bad) mov xlat adc nop lret add fcoms inc jnp lock lret add inc jp out push xchg int3 add inc jle out cmp fcoms push test ficompl lahf fstpl pop nop lret jl call adc mov and iret add adc mov ficomp push mov pushl je out pop mov add je repnz pop xchg enter movsl loop push xchg int cmp ljmp jg jmp imulb bound pop add jo fisttpl push xchg rclb push xchg into or hlt xor call stc xor aam inc js call divl insl mov add add (bad) insl pop xchg int3 pushl jno fcoml jl and iret or mov fistp push xchg rorb inc xorb cmp mov sub lret pushl push mov cld ss jmp pusha popf aad dec xchg sti cmp call or sar jl hlt xor xor in and push mov add mov loop pop xchg rorl dec xchg cld aaa jno in fs loop pop xchg rcll dec mov pop dec mov or idivb jae out sub loop popa fsts push nop lret jle hlt xor mov das imul sbb or push inc xchg add xor cmpsb loopne pop xchg aad dec (bad) add mov divb jne in daa bound pushf aad dec mov sti add add popa xchg enter movsl ficoml inc js in fs (bad) or lret es popa jg mov dec sbbl mov xor mov cmp (bad) lods leave in pop cmp cltd out pop xchg vcomiss lret jb ficom push mov cmc sub aad dec mov push pop mov notl dec imul xchg xor ret or jbe jmp add sub in and push mov cld cmp mov ljmp mov in or mov out or sub sbbl lahf mov enter in sub push xchg lret jge sti cmp stc xor loope push mov add mov add add add add add jmp bound leave push inc cmpl fstpl (bad) rorb inc cmpb sub movsl loop push xchg iret or inc jnp jmp push lcall dec test loope push xchg rorb dec test daa jnp loop dec jge loop dec cmpsl out sub fs out pop xchg fcoms (bad) leave add mov sub daa mov into or cli xor out arpl aam dec mov add jp divb outsl mov das outsb stos ljmp xchg iret or mov add mov ficoml dec xchg add jge divb pop xchg fistpl pusha lcall cmp mov xor scas ljmp (bad) iret or sub lock dec jg in mov add add add add mov ljmp (bad) mov in sub mov iret or cli cmp sub loop pop lcall cmp jae hlt xor in inc xchg fsubs pop xchg leave add jne jmp adc cmp in sub jmp sbb int3 or movb jnp cmc xor icebp sub push xchg rorl jp hlt xor out sub loop pop xchg int3 or mov jmp sub call and xlat adc mov add (bad) sar ja repz push lahf aad aas je loope add fstpl pop lcall push (bad) int inc jns loopne inc jae aad inc test scas fisttpll add push jno add loopne add daa pop xchg enter roll xor leave add popa xchg ret hlt sub push cmp int xor lret add jo xlat or jo and vmovntps aam jno fist inc jbe fistp push xchg mov loopne dec mov mov sbb jg call call out gs loopne inc js loope dec jp fisttpl aas jo aam inc jne loop dec jp ljmp jb loope pop mov xor fisubl push mov into pop inc jns out pop cltd rorl inc jns jecxz push mov hlt sub ficom dec cmpl clc xor jecxz daa pop cltd lret jo rolb xor (bad) repz and mov mov mov adc jae roll add push rolb xor xor int inc add loop inc ja fmuls aaa xchg vcvtsi2sdl (bad) stc sub xchg ret imull pop pop hlt daa pop mov jmp in dec jp jecxz aas insb cwtl lret bound xchg (bad) imull data16 int sub pop out and mov adc jbe out dec test mov and inc jne out push nop (bad) sti xor adc mov xor stos (bad) loop sbb push jno stos enter cmp (bad) lods enter cmp xchg mov ljmp mov in or inc pusha jl mov out or inc pusha jge mov out or inc popa jle mov out or inc bound mov lock xchg xor xchg xor xchg xor mov add xor insl mov aaa push jo test cmp jne xchg mov in or pop jns mov jmp and pop jp mov in or inc popa jge mov out or popf mov dec outsl mov aaa push jo test cmp mov cmp nop lods lret pop cmp jne scas lret out and pop ja mov ljmp shl push cmp xchg scas lret out and into jmp and mov out or inc popa jle mov icebp push sub sbbb dec imul xor (bad) sbb lods leave out pop cmp jne mov jmp jnp mov out or inc push outsl mov mov iret and test xor mov add add dec push mov cvtps2pi andl mov enter and pop jnp mov in or inc popa jge mov lock inc bound xabort gs int3 cld das bound iret push inc jbe add cwtl mov inc js repz mov dec push notl dec imul lea cmp nop lods leave in push cmp xchg scas lret and pop ja mov ljmp mov jmp and pop jp mov in or inc bound mov inc arpl mov inc arpl movntps (bad) sahf mov dec gs sahf mov dec data16 mov xor mov test cmp mov sbb sub in or add fwait mov repnz fstl jno repz into add imul mov xor mov cmp test aaa push jo test cmp xchg mov jmp js mov ljmp mov ljmp mov ljmp mov ljmp mov ljmp mov in or inc pusha jge mov out or inc pusha jge mov out or inc pusha jl mov out or inc pusha jge mov out or inc pusha jge mov dec sbbw dec test notb push (bad) (bad) std dec jp into pop inc mov dec imul mov hlt xor fistl add shrl push outsb mov aaa push jo stos movl add jecxz sbb stos enter cmp jne scas lret call jge mov lock inc bound mov add mov xor mov push insb mov xor enter cmp jne scas lret out and int push and pop js mov ljmp mov in or inc pop jl mov out or inc sbbl mov xor xchg xor mov xor insl mov ss outsl mov cmp xchg scas lret out and pop ja mov ljmp mov in or mov out or inc popa jle mov icebp or mov xor movsb rcr sbb add lods leave in push cmp xchg scas add out and int push and jnp mov in or dec sbbl mov xor mov and int pop and pop jnp mov in or inc popa jge mov repz mov dec imul mov xor (bad) jecxz sbb push jae lods leave out pop cmp jne mov in or inc pusha jl mov out or inc bound mov dec data16 lahf mov dec imul xchg push jno stos (bad) jecxz push cmp nop lods lret out insl cmpsb or stc sbb insl mov ss jo test cmp stos (bad) jecxz pop nop (bad) imul pop jp mov in or pushf mov add push sub sbbl sahf mov mov sub test xor xchg xor xchg xor push jno stos (bad) jecxz sbb push jb stos enter cmp nop lods leave call ja mov jmp jns mov jmp and (bad) repnz sub sbbl lahf mov dec andl push xor mov xor insl mov xor (bad) in sbb lods enter mov std outsb movsb fistl dec mov add imul movsl ret sbb sbb (bad) mov sbb rcr push xor mov xor (bad) aaa pop jne scas lret out and lret call jbe mov jmp add or inc pusha jge mov out or inc popa jge mov out or inc bound mov repz mov dec push notl dec imul outsb mov ss outsl mov aaa push jb scas or xchg adc jnp,pn rcr sbb push jo test aaa push jno test cmp stos (bad) in sbb mov ljmp mov jmp and jns mov jmp and pop jns mov in or mov in or mov out or inc arpl mov inc arpl mov inc sbbb sbbl sahf mov dec test stc adc movsb rcr adc movsl rcr push xor add add cmpsb ret add stos enter cmp nop lods leave in push cmp xchg scas int3 jmp js mov ljmp mov jmp and pop jns mov in or fwait mov inc arpl adc dec imul mov push insl mov xor (bad) sbb push jno stos (bad) jecxz sbb mov jmp jns mov jmp and pop jnp mov in or inc pusha jge mov out or inc arpl push sub (bad) lahf mov mov sub xlat hlt adc mov dec sbbl adc dec andl adc dec push notb das dec imul mov aaa push jo test add cmp (bad) stos enter cmp js mov jmp and pop jns mov jmp and pop jl mov out or inc popa jg mov lock inc bound mov icebp or pushf mov inc sbbb xor xchg xor vpaddw cmp stos (bad) jecxz sbb push jb lods enter cmp xchg scas lret and int3 jmp jns mov out or inc pop jl mov out or inc popa jge (bad) xor ret popa xchg rcll inc mov or mov aaa push jo stos lret and int3 jmp js mov jmp cwtl rorl jp out and shlb inc popa jle mov lock pushf mov push insl mov xor (bad) loopne add add sbb push outsl mov cmp (bad) stos enter and jp mov in or inc ja lock int3 call js mov in or mov out or inc pusha jge mov out or inc bound mov icebp add cs test cli pop xor mov xor vpaddd cmp mov bound mov out or inc pusha jge mov out or dec gs sahf mov dec andl inc jp push dec cmpl hlt cmp out or inc popa jg mov dec andl cmpsl (bad) loopne sbb push jo test jp mov stc push xor mov xor insl mov ss xchg imull xchg int3 add insb lahf fstpl jns add add add (bad) jecxz sbb push jae lods leave out pop pop xchg (bad) cmc and push mov aaa pop jge mov lock mov xor xchg push insl mov push cmp xchg lods lret and into jmp and pop jp mov lock popf mov dec sbbw dec push mov xor mov aaa push jno stos (bad) in push cmp fsts dec cwtl mov dec insb mov xor outsb mov aaa push jo test cmp mov cmp xchg scas lret in or inc pop jl mov out or inc bound mov dec sbbl mov xor outsl mov cmp xchg scas int3 jmp jns mov in or es pop jl mov out or inc bound mov dec andw dec push mov mov or inc bound mov dec gs lahf mov dec imul jo stos (bad) jecxz sbb lods lret and shr or inc pusha jge mov lock popf mov dec andl adc dec imul ss jo test cmp int pop and jp mov in or inc pusha jge mov icebp push sub sbbl mov xor outsl lea aas pop js mov jmp and mov out or inc bound adc dec add ret sbb push outsl mov cmp xchg mov jmp and mov add (bad) lock popf mov dec test notl dec imul jp in dec push sti pop xor insl mov aaa push jno stos (bad) in sbb scas lret call add mov out or inc fs adc mov and out and jp mov out or inc popa jle mov icebp or popf mov dec data16 lahf mov dec push mov xor lea cmp (bad) stos enter cmp nop lods leave out and jne scas int3 call js mov jmp and pop jp mov in or popf mov dec sbbw dec push cmp in dec test (bad) sbb outsb mov les sub jg mov add inc sbbl mov xor mov xor outsb mov ss jo test cmp xchg scas lret out and int3 jmp jp mov in or inc pusha jge mov add adc mov dec insb mov xor (bad) aaa push xchg lret add cwtl mov dec push notl dec push mov xor enter cmp nop lods leave out pop cmp jne scas lret and int3 call ja mov ljmp sbbb dec push mov xor mov xor outsb mov ss outsl mov aaa push jo add cmp iret jmp and pop jp add mov in or mov out or inc data16 (bad) outsl sahf int sub xorl xchg (bad) mulb adc jne into ljmp pop mov cmpsl xlat pop aaa addr16 (bad) or je call (bad) push xor ret push add outsb popf int cmp leave stc sub rorb cmp enter test mov mov cmpsl xlat push ss (bad) repnz mov sbb (bad) insb pushf lret sti sub (bad) mulb push test iret push ss (bad) mulb push xorl fimul ds popf lret sti sub mov mov push inc je roll bound xorl popa xchg (bad) lock or xorb mov push outsl mov nop add mov mov push inc jne fmull insb fwait lret sti xor mov mov sbb stos fisttpl xor (bad) imulb pop mov mov adc jb iret ljmp pop mov mov adc outsl sahf fmuls cmp leave sti cs fwait in push xor add and pop js mov ljmp mov in or mov out or inc arpl mov dec sbbw dec imul mov cmp mov pop jne scas int3 jmp jnp mov icebp or popf mov dec push lret add aad push sub sbbl mov xor xchg xor insl mov xor mov ljmp pop and jns mov in or inc pusha jge mov out or inc arpl adc mov dec test notl push outsb mov ss jo stos (bad) jecxz sbb push jb stos fcomps pop cmpsl lret call js mov jmp and pop jnp mov out or add xchg outsb mov enter dec push mov xor mov sbb mov and mov out or inc pusha jge mov repz mov dec test notb xor mov xor xchg xor xchg push outsl mov cmp stos (bad) in sbb lods leave out pop cmp xchg scas lret call jns mov in or inc pusha jge mov out push sub add dec imul xchg push insl mov xor (bad) sbb push jno stos (bad) in sbb mov jmp test cmp (bad) lods enter cmp nop lods lret and int3 jmp js mov in or inc bound stc adc movsb rcr push xor mov xor outsb mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) in and pop ja mov jmp jl mov out or inc popa jge mov lock pushf mov inc sbbb in outsl mov ds js mov jmp and mov out or inc popa jle mov icebp push sub sbbb dec gs lahf mov dec add add mov sbb push outsl mov aaa push jo stos (bad) jecxz sbb push jno stos (bad) in sbb and (bad) cmp scas lret and pop ja mov jmp js mov ljmp mov in or inc pop jnp mov in or inc pusha jl mov out or dec gs lahf mov xor mov push insb mov xor (bad) loopne sbb push outsl mov cmp mov ds ja mov jmp jns mov in or push aad inc bound mov lock pushf mov inc sbbl mov xor xchg xor mov push insl mov xor vpaddd aaa ja add das xchg cli sub sar cmp pop jns mov sub shr or inc pusha jge mov icebp push sub sbbl mov xor mov cmp (bad) lods leave in pop cmp jne scas int3 ljmp mov in or inc pusha jge mov lock inc arpl mov dec imul xor lods leave out pop cmp jbe mov ljmp mov in or mov out or inc popa jle mov dec sbbw dec push stc push xor mov mov std sbb push jo test cmp nop lods lret and pop jnp mov out or inc popa jge mov lock pushf mov ficom inc jb jecxz dec xorb mov (bad) adc outsb mov mov sbb imulb pop nop vmovntps (bad) mull jl roll gs lds cmp (bad) cmp rcrb ja mov out or inc popa jle mov icebp or popf mov dec andw dec imul xchg ss outsl mov cmp popl mov ljmp mov in or mov out or inc bound mov inc andl mov xor mov push outsb mov cmp mov cmp (bad) lods leave out pop aas pop jns mov in or inc popa jge mov lock lahf mov dec imul ss outsl mov cmp add push jae lods leave call ja mov jmp and pop jnp mov add adc data16 lahf mov dec imul xor mov aaa push jno lods lret and int3 jmp js mov ljmp mov in or inc pusha jl mov dec andw push insl mov aaa push jno stos (bad) jecxz push cmp pop js mov in or inc pop jge mov lock popf mov dec andw push insb mov aaa push jo stos (bad) jecxz sbb push jb lods leave out pop cmp jne scas int3 call js mov in or mov lock popf mov dec imul mov xor (bad) loop sbb add mov aas pop jns mov jmp and mov lock sub addl adc cmpsb ret (bad) sbb (bad) sbb push jb lods int or mov out or inc popa jle mov icebp or sahf mov dec push notl xor xchg xor mov cmp stos (bad) jecxz push cmp jbe scas int3 jmp pop jl mov out or inc bound mov dec push notl xor mov xor (bad) aaa push jo test cmp xchg scas lret and int3 jmp jns ficoml dec xchg mov xor outsb mov ss jno stos (bad) in push cmp nop lods leave out add cmp lret call jl mov out or inc popa jge mov out or inc popa jle mov cs test notb das dec push notl dec push mov sub sub vcvtsi2sdl into sbb mov dec imul mov ss outsl mov cmp int pop and jp mov in or inc arpl mov xor xchg xor mov xor enter cmp xchg scas lret and into jmp and pop jp mov out or inc arpl cvttps2pi (bad) lahf mov lds mov or ficomp jnp mov push insl mov ss jo stos (bad) jecxz bound inc jbe ficom push stos iret in or or cmp fisubl push insl mov ss outsl mov aaa push jno stos add out and int3 call js mov ljmp mov lock pushf mov xchg shr or inc popa jge mov lock pushf mov dec xchg xor mov lcall cmp jne scas int3 call js add inc pusha jge mov lock pushf mov dec imul mov dec test notb das dec push clc push xor mov xor insl mov cmp (bad) stos enter cmp nop lods lret pop cmp jne scas lret out and add int3 jmp js mov in or mov inc arpl movntps sbbl lahf mov xor mov push insb mov cmp mov cmp xchg lods lret pop cmp jne scas lret call jbe scas lret call jbe scas int3 call jp mov in or mov in or inc pusha jl mov lock inc popa jg mov dec add mov test repz stos jecxz pop xchg fldenv shl sbb push movsl loopne imul dec (bad) lret sbb int3 jmp jp mov in or dec sbbl mov xor xchg xor mov add xor (bad) ss jo test cmp lret call jbe mov jmp jns mov jmp and pop jp mov in add sub sbbb test notl das dec imul mov push insl mov xor (bad) loopne sbb push jo stos (bad) jecxz pop cmp jbe scas int3 call ja mov jmp jns mov in or mov out or inc add sahf mov dec andl sbb outsb mov ss jno stos (bad) jecxz sbb push jb stos (bad) in push cmp xchg scas lret out and pop js mov in or inc bound mov inc arpl adc sbbl mov add adc dec imul mov cmp xchg lods lret out and int pop and pop js mov jmp and mov in or inc pusha jl popf mov dec data16 xor mov xor (bad) sbb push jb stos enter cmp jne lods lret and jbe mov jmp jnp mov in or inc pusha jl mov out or inc popa jle mov lock inc bound mov dec gs sahf mov xor outsb mov cmp mov cmp nop lods leave in pop popa stos loopne push cmpl lods leave out pop cmp jne scas int3 jmp jge mov lock inc bound mov inc arpl movntps (bad) sahf mov add add adc gs lahf mov dec sbbw dec imul xor mov xor (bad) ss jo stos (bad) jecxz sbb push jb stos enter add jp mov lock jo call lret pop cmp jne scas lret or push insl mov xor xchg dec insb mov cmp mov cmp nop lods leave out pop and ficompl dec imul mov push insb mov cmp jne scas lret out and pop ja mov ljmp mov aam or pushf mov dec gs sahf mov dec imul pop jbe scas int3 call js mov ljmp add add pusha jl mov out or pushf mov dec push clc adc dec push mov xor jno stos (bad) in push cmp xchg lods lret and pop js mov jmp and pop jnp mov icebp push sub (bad) lahf mov dec push notl dec push mov xor mov aaa push jno stos enter cmp xchg mov jmp and pusha jl mov out or inc arpl cvttps2pi sbbl dec imul mov ds ja mov jmp and mov out or inc popa jle mov dec addl sbb outsb mov ss jo lods lret and pop js mov jmp and mov out or inc pusha jge add mov out or inc bound mov dec sbbl movsb rcr pop xor (bad) loop sbb push jb lods leave out add pop jp mov in or inc pop jl mov out or inc bound mov push insb mov aaa push jo test cmp nop lods lret and shr or inc pusha jl mov out or inc popa jle mov dec push movsb rcr push xor mov ss outsl mov cmp stos (bad) jecxz sbb push jb lods enter ds ja mov jmp jns mov in or pop jnp mov in or inc pop jl mov in or add (bad) mov xor mov aaa push jo test imul sub test mov dec push notl xor xchg xor mov aaa push jo test aaa push jo stos (bad) jecxz sbb push jb lods add jmp js mov jmp and pop jp mov in or inc bound mov lock popf mov dec sbbl and fdivr sbb push outsl mov ss jo lods leave out pop cmp nop lods lret pop cmp jne scas lret and jne scas lret pop cmp jne scas lret out and jne scas lret call jns mov jmp and pop jns mov jmp and pop jp mov in or pop jp mov in or add inc arpl mov dec sbbw dec push notb das dec add push notl dec imul xchg xor mov ss outsl mov aaa push jo test cmp test and jne scas lret and jbe scas lret out and jns mov ljmp mov jmp and pop jns mov jmp and pop jp mov jmp and pop jnp mov out or inc pusha jl mov inc arpl movntps sbbl popf mov dec sbbw mov and sti sbb push jno stos (bad) in sbb stos enter cmp jmp jae mov out or inc popa jge mov out or inc popa jle add imul xor mov xor insl mov add ret (bad) sbb (bad) loopne sbb push outsl mov aaa push jo test movsl (bad) xlat repz mov xor mov xor (bad) ss jo xchg lods lret and jne scas lret call jl mov out or inc bound out andl push outsl mov cmp mov cmp xchg lods lret and jp mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov icebp or pushf mov dec test cli pop xor mov xor outsb mov ss outsl mov cmp mov cmp xchg lods lret and inc pop jge mov lock sub sbbb dec data16 add add das dec push clc adc movsl rcr sbb push mov cmpsl fisttpl jo iret cld sub mov or insb lahf aad inc jle ljmp jb jmp or test sbb pop xchg ret cld sub mov scas loope dec cmpl cld cs lcall xor rolb xor lcall (bad) dec xchg out xor test aaa push jo test cmp mov cmp mov cmp (bad) stos enter cmp nop lods leave out push cmp nop scas lret call jbe mov jmp js mov ljmp mov jmp and pop jns mov in or inc pop jnp mov out or inc bound andl dec push notl add dec imul mov xor mov aaa push jo test in sbb lods leave in push cmp nop lods leave out pop cmp jne scas lret and jbe scas lret call ja mov add or inc popa sbbl sahf mov dec sbbw dec test notb das dec push clc adc dec imul mov xor insl mov ss outsb mov ss outsl mov ss outsl mov aaa push outsl mov pop jbe scas int3 call jbe scas lret call jbe mov ljmp mov jmp and pop jns mov jmp and pop jl mov add cvttps2pi sbbl add movntps sbbl sahf mov dec sbbw dec andw dec insb mov xor mov xor insl mov xor mov xor (bad) loopne sbb scas int3 jmp ja mov jmp js mov ljmp mov jmp and pop jns mov ljmp mov in or inc bound mov dec sbbl sahf jmp add test xor xchg xor mov ss outsl mov ss outsl mov cmp stos (bad) loop sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz pop cmp jne scas lret out and inc pop jp add add and mov in or mov in or inc pop jl mov in or inc pusha jl mov dec fs sahf mov dec gs sahf mov dec sbbw dec sbbw dec sbbw push insb mov test cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb stos enter cmp (bad) lods enter cmp lret call ja mov jmp js mov in or mov in or mov in or mov lock inc bound mov lock fwait mov inc sbbb dec gs lahf mov dec andl adc mov xor add imul sbb push outsl mov aaa push jo test cmp (bad) stos enter cmp (bad) scas lret call jbe scas int3 call jbe scas int3 call ja mov jmp and pop jns mov jmp and pop jns mov jmp and pusha jle mov lock sub mov dec test cmc adc dec push mov xor xchg xor insl mov aaa push jo test cmp stos (bad) in sbb stos (bad) in sbb lods leave in push cmp nop lods leave out pop cmp js mov ljmp mov jmp and pop jns mov in or mov lock aad movntps (bad) lahf mov dec imul xor outsb mov xor lods leave out pop cmp jne scas lret out and lret call jns mov lock pushf mov inc sbbb dec sbbl out arpl mov das dec imul mov and int push and pop jns mov jmp and pop jnp mov in or inc pusha jl mov out or inc sbbb dec sbbl lahf mov dec push stc adc movsb rcr push xor mov aaa push jno stos (bad) jecxz sbb push jb stos (bad) in sbb lods enter cmp xchg scas lret and lret call jns mov in or add xchg mov in or inc pop jnp mov add push sub sbbb dec sbbl jbe mov out or inc popa jge mov out or inc popa jle mov lock inc popa jle mov out or inc popa jle mov lock inc popa jle mov lock lahf mov dec push notl add insl mov xor insl mov xor insl mov xor insl mov cmp test cmp test cmp stos (bad) in sbb push jb stos enter cmp (bad) stos enter cmp (bad) scas int3 call jbe scas int3 jmp ja mov ljmp mov in or mov in or inc pop jnp mov in or inc arpl hlt sub add pusha mov popa jge mov lock fwait mov cs test cmc adc dec test dec xchg test add pop xchg clc xor loopne dec cmpb add push aad mov add insb mov popf mov dec push sti aaa ja clc pop xor mov test jo add jbe ret loopne sbb push jo stos (bad) jecxz sbb lods leave out pop cmp jbe mov out or inc popa jle mov icebp or sahf mov dec test clc adc dec imul xor vpaddd cmp scas lret and out or inc popa jle mov lock popf mov dec data16 xor xchg push jo fiaddl adc or inc popa jge mov lock pushf mov dec add push xor mov xor enter cmp jne scas lret call ja mov jmp js mov in or mov out or inc popa jge mov lock inc andw dec imul xor outsb mov push cmp xchg scas lret and int3 jmp js mov in or inc arpl cvttps2pi andl dec imul mov push sub mov dec push mov cmp nop lods leave out pop cmp jne scas lret call ja mov jmp jns mov jmp and mov in or inc pusha jle mov fdiv adc dec test notl xor mov xor mov push add lods leave out pop cmp jbe mov jmp jnp mov out or inc bound mov dec sbbl lahf mov dec push clc adc dec push movsb shl sbb push jno stos (bad) in sbb lods leave out pop cmp ja mov add push sub sbbl mov xor mov aas jo (bad) inc jns loop dec xorb pop push xchg mov ret mov loop sbb push jb mov jmp jns mov jmp and mov out or inc popa jle mov icebp push sub sbbl mov xor add add mov cmp (bad) lods enter cmp jne scas lret call ja mov ljmp lcall andl dec insl mov aaa push jb stos enter cmp xchg scas lret call js mov jmp and pop jnp mov in or inc popa jle mov dec test notl xor mov xor (bad) jecxz add cmp int push and pop jns mov in or inc bound mov dec gs lahf mov dec imul mov ss outsl mov cmp xchg mov in or inc bound mov dec gs sahf mov dec push stc push xor mov xor (bad) loop sbb add pop jne mov jmp and pop jp mov in or inc bound mov inc arpl adc sbbw add mov cmp xchg scas lret and int pop and pop jp mov out or inc pusha jge mov out or inc popa test lcall cmp shr or inc pusha jge mov lock inc bound mov dec sbbl mov sbb push outsl mov cmp xchg scas lret and int3 jmp js mov jmp daa inc pusha jge mov out adc jmp ljmp pop mov (bad) cld xor in and popa test std cmp nop lods leave out and int3 jmp jge sti xor add gs sahf mov dec andl adc dec imul push and jp mov in or inc pusha jge mov out or sub andl movsl ret pop xor insl mov ss outsl mov cmp xchg scas lret and jne scas lret call jp mov out or inc bound mov inc arpl push sub sbb iret in or pushf mov dec xchg xor mov out jo scas lret call adc or inc pusha jge mov lock inc bound mov dec push mov xor xchg xor xchg dec insb mov xor mov sti sbb insl mov aaa push jo test cmp mov cmp mov cmp (bad) stos (bad) in sbb push jb stos (bad) in sbb xchg mov in or inc pop jnp mov in or inc pop jl mov icebp push sub sbbb arpl cvttps2pi cmp fwait mov icebp push sub sbbl mov xor mov add push jno stos enter cmp xchg scas lret and pop jnp mov out or inc popa jle mov icebp push sub sbbl test pop movsl (bad) cmp mov aas pop jnp mov out or inc popa jle add dec data16 lahf mov dec andl adc dec push add add notl dec push mov xor (bad) loopne sbb push jo test cmp (bad) stos (bad) in sbb lods leave out and jbe scas int3 call jp mov out or inc pusha jl mov out or inc bound mov dec andl mov xor xchg xor ret loopne sbb vpaddd aaa push jo stos (bad) in push cmp xchg scas lret and add divl repz gs lahf mov push jo test cmp mov cmp nop lods leave out pop cmp jne scas lret out and pop ja mov jmp jnp mov out or inc bound mov lock test das dec push clc adc movsb rolb add add cli push xor mov aaa push jo test cmp (bad) lods push bound sub sbbl mov xor mov push jae lods leave in pop cmp xchg scas lret out and int3 jmp ja mov jmp and pop jp mov in or inc pop jl mov repnz sub sbbl lahf mov dec push notl dec push mov xor mov sbb scas lret call popf out dec cmpl fdecstp adc dec imul xchg push insl mov cmp xchg mov jmp jns mov in or add dec data16 xor add add sbb push outsl mov cmp jne scas lret call js mov ljmp mov out or inc bound mov dec gs sahf mov dec test cld sbb (bad) aaa push jno stos (bad) jecxz sbb lods leave out pop cmp jne mov jmp jns mov pop cmpsb (bad) out and int3 jmp ja mov jmp and mov in or inc pop jl mov out or inc pop jl mov out or sub data16 xor xchg xor xchg xor mov push insl mov xor ret loopne sbb push jb stos (bad) in sbb xor fistp push xchg jmp pop xchg add add push mov pop mov notb das dec insb mov xor jb stos enter cmp nop lods leave out pop dec xchg enter movsb ljmp mov dec sbbl lahf mov dec insb mov xor insl mov xor ret loopne sbb (bad) ss jo test cmp lods lret and jne scas lret call jbe mov jmp ja mov ljmp mov jmp and pop jp mov aaa jb add sbb ja out push jae lods lret and int3 jmp jp mov in or inc pusha jl mov out or inc bound mov dec push mov xor mov aaa push jno stos (bad) in add add mov jmp and mov out or inc fs sahf mov dec test notl xchg lret jp mov in or inc pusha jle mov icebp push sub (bad) lahf mov dec push std sbb push jo stos (bad) in push cmp xchg scas lret call js mov jmp and mov out or inc bound mov dec push movsb rcr pop xor outsb mov cmp stos movl mov mov and mov dec data16 lahf mov push insl mov stos (bad) in push cmp xchg lods lret and jbe scas int3 call jns mov jmp and pop jp mov out or inc pusha jge mov call ja mov ljmp mov jmp and mov add in add sub sbbb sbbl mov xor xchg xor mov sub fldcw ja add push outsl mov aaa push jo test cmp int3 call jbe scas lret call ja mov jmp jns mov ljmp mov ljmp mov out or inc pusha jge repz lret jo jecxz insl add mov dec imul xchg xor stos (bad) jecxz sbb add stos (bad) jecxz sbb push jb stos enter cmp (bad) stos enter cmp (bad) lods enter cmp (bad) lods leave in and pop ja mov jmp enter (bad) in and int push and add aas pop js mov jmp or inc popa jle mov lock inc bound jb loop inc je aam xor xchg enter mov adc pop pop fwait aam inc ja adc sti mov dec test cld sbb (bad) ss outsl mov aaa push jo test loope sbb push jo test cmp stos (bad) loop sbb pop jne scas lret jmp js mov ljmp mov jmp and pop jns mov jmp and pop jp (bad) adc leave adc stos (bad) jecxz sbb push jae lods enter and pop js mov ljmp mov ljmp mov jmp and pop jns mov in or mov out or inc popa jge mov icebp or pushf mov cltd add sbb jp mov in or fwait mov inc arpl dec (bad) mov cmp or mov dec test notb das dec push imulb ficom inc js loopne inc mov out and int pop and jns mov in or inc pusha jl mov out or inc bound mov inc sbbl mov xor insl mov ss outsl mov cmp mov cmp xchg lods lret and jbe scas int3 jmp jl mov repz lcall add pop cmp int3 jmp js mov jmp and pop jp mov in or inc pusha jl mov dec test notb bound shll ret (bad) sbb (bad) sbb push jb lods enter and pop js mov out or inc bound mov dec sbbl mov xor mov mov sbb push js mov out or inc bound call ret sbb push jo test cmp (bad) lods leave out and jbe scas int3 jmp or inc bound mov dec imul mov cmp stos enter cmp xchg scas lret call ja mov jmp and mov dec gs lahf mov dec imul jno stos (bad) out and jbe scas int3 jmp js mov out or inc bound mov dec data16 lahf mov dec imul add mov xor mov aaa push jo stos (bad) in sbb cwtl mov out or inc bound mov dec andw dec push mov xor mov aaa push jo stos (bad) jecxz sbb mov jmp and pop jnp mov out or inc popa jle mov dec sbbl mov xor mov cmp (bad) lods enter cmp jbe mov jmp jp mov out or inc popa jle mov icebp push sub sbbl movsl ret sbb (bad) sbb lods leave out and mov out or xchg fdivr sbb push outsl mov cmp (bad) mov ljmp mov in or mov out or sub jle mov lock pushf mov dec sbbl add aaa push jo test aaa push jno stos (bad) jecxz sbb push jae lods enter cmp xchg scas lret call ja mov in or mov out or inc bound mov inc sbbb dec gs sahf mov dec test notl dec push cmpsb ret sbb (bad) aaa push jno stos enter cmp nop lods lret pop cmp jne scas lret and ja mov jmp daa inc pusha jl mov out or inc scas in and repnz sub sbbb xor mov xor (bad) aaa push jno scas int3 call ja mov ljmp mov add in or mov out or inc pusha jge mov out or inc bound mov dec test add sbb (bad) loopne sbb insb movsl fisttpl insb fwait int3 stc es subl mov mov daa lcallw mov aad pop cmp xchg lods lret and lret out and int3 call js mov ljmp mov out or inc pusha jge mov inc bound mov inc sbbl and pop js mov add mov sub lret (bad) mov pusha fwait int3 (bad) cmp cmpsl (bad) aaa push jo test aaa push jo xchg scas lret call ja mov jmp jnp mov out or inc pusha jl mov out or inc popa add jge mov out or inc popa jle mov out or inc popa jle mov lock pushf mov dec push notb xor push insl mov xor insl mov ss (bad) inc arpl push sub sbbb dec push mov xor xchg dec insb mov xor mov xor insl mov xor insl mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos leave out pop cmp xchg lods lret and lret call jp mov in or mov in or mov in or mov in or inc pop jnp pushf mov dec sbbl mov das dec push mov add add add add clc adc mov xor xchg xor xchg xor xchg cmp stos (bad) jecxz sbb add xchg mov jmp ja mov ljmp mov in or mov out or inc sbbl lahf mov dec imul xor mov xor (bad) sbb push jb lods enter aas pop js mov jmp jp mov in or inc test push xor (bad) jecxz sbb push jb stos (bad) in sbb lods leave out and pop js mov ljmp mov jmp and mov in or inc pusha jl mov out or inc pusha jge popf mov dec data16 mov xor xchg xor mov xor (bad) cmp stos (bad) jecxz sbb push jae lods leave in pop ds ja mov ljmp mov in or inc add lahf mov dec data16 lahf mov mov xlat sbb rolb xor mov push mov std xor mov add lods leave out and int push and pop jns mov in or mov out or dec data16 lahf mov dec test notb xor mov xor mov ss outsl mov cmp cld xor rolb xor enter test icebp sub (bad) repz dec mov or imul leave cli sub add clc sub cld xor in es mov add add stos in insb mov aaa push jno stos (bad) jecxz sbb lods enter cmp xchg scas shr or inc popa jle mov lock sub sbbl xchg sub (bad) data16 shr or inc pop jl call movntsd mov xor (bad) loopne sbb push outsl mov ss outsl mov aaa push jo test cmp (bad) stos enter cmp lret call js mov jmp js mov jmp es pusha jl mov out or inc pusha jge mov lock inc bound adc pop sbbl mov xor mov ss outsl mov aaa push jo add inc pop jp mov add or mov out or inc bound mov icebp push sub sbbb andw dec insl mov aaa push jo stos (bad) in and jne scas lret jmp add mov lock sahf mov dec push movsb rcr sbb push outsl mov aaa push jo test cmp stos (bad) in sbb lods lret pop cmp jne scas lret pop cmp js mov out or inc pusha jge mov repnz sub gs sahf mov dec push clc adc mov xor outsb mov ss jb stos leave in and into in or inc arpl adc dec push clc adc dec push movsl rcr pop xor insl mov cmp pop jp mov add out or inc popa jge mov lock inc arpl adc dec imul mov cmp mov cmpsb ret (bad) sbb (bad) aaa push jno stos (bad) jecxz sbb push jb add inc pop jns mov ljmp mov repz mov dec push clc adc mov xor mov xor insl mov cmp xchg scas int3 jmp jp mov in or inc pusha jl mov lock inc bound mov icebp or lahf mov dec push clc sbb insl mov ss jo lods enter cmp nop lods leave out pop cmp jne scas lret cmc pop xchg enter sahf fldenv dec test std sbb push jno stos add call js mov jmp and mov lock popf mov dec test stc adc test loop sbb push jb stos leave out pop cmp jne scas lret call js mov jmp and pop jnp fwait mov dec gs lahf mov push insl mov ss jo test cmp xchg lods lret and outsl xchg mov in or inc pusha jge mov out or inc popa jle mov dec test cmc adc dec imul xchg xor mov xor mov aaa push cltd mov out or inc popa jge mov icebp push sub sbbl sahf mov inc popa jle mov inc arpl adc dec imul add add test xor xchg xor xchg push insb mov xor insl mov xor insl mov cmp (bad) lods enter cmp jne scas lret pop cmp jne scas lret call jbe mov jmp js mov ljmp mov out or inc pusha jge mov lock inc bound mov lock pushf mov inc sbbb dec gs lahf mov dec push mov xor xchg push insb mov xor insl mov aaa push jo test cmp xchg (bad) pop mov ss outsl mov ss outsl mov cmp add and pop ja mov jmp jnp mov add or inc pop jl mov out or inc pusha jge mov lock popf mov dec gs sahf mov dec data16 lahf mov dec imul mov xor (bad) jecxz sbb push jb stos enter cmp xchg lods leave out pop cmp xchg mov in or inc pusha jge mov out or inc popa jge mov inc arpl mov dec andl adc dec test clc adc push outsb mov ss outsl mov aaa push jo test cmp nop lods leave in push cmp jne scas iret out or inc popa jg mov dec push mov xor mov cmp mov cmp mov scas in pop push lcall cmpb add inc jnp push dec xchg jmp push (bad) sub lret or aad insl mov cs cmp (bad) cmp lret adc cmpl and jl mov out or inc pusha jge mov out or inc popa jle mov dec sbbl movsb rcr push xor mov xor outsb mov aaa push jo test cmp add lret popf lock jg adc data16 out inc pop add jg mov (bad) pop xchg call and and lock mov sbb loop lods in sub out dec pushf ljmp nop mov sub scas clc mov pop mov adc ret push xchg in outsl scas repnz xchg add add or (bad) lret xchg call mov cmovs in insb stos in jl (bad) dec xchg or rolb cmp lock mov inc pop cmpsl loop addr16 add aam push test xor std inc mov and aam imul std outsb mov dec movsb or sahf fisubl mov add lods sbb mov fmuls inc js loopne push xchg int3 or mov xor jnp repnz pop pushf rorb pop popf fldenv pop xchg lret adc lret jne adc push mov mov ljmp push jle std cmp in arpl sti aaa xchg adc ficomp insl cmpsl jmp lahf mov dec push notl das dec push notl xor jb add add push cmp nop lods leave out pop cmp jne scas lret and int3 call js mov ljmp mov in or inc popa jge mov sub cmp xlat or adc test fidivrl mov mov push dec jp in dec xchg lret bound cwtl iret ljmp sub (bad) imulb mov mov and in dec (bad) ret stc xor aam inc jne loop push jg jecxz dec ja loopne inc jle jmp cli outsl movsl fistl dec jp call out es mov sbb xchg iret add (bad) ljmp mov inc arpl push sub sbbb gs sahf mov dec gs sahf mov dec data16 mov add ss outsl mov ss jo test int3 out or inc popa jle mov lock inc arpl mov dec sbbb dec imul test xor xchg xor xchg xor xchg xor mov aaa push jo test aaa push jo test aaa push jo test aaa push jo test cmp mov cmp jne lods lret pop cmp je lods lret and int3 jmp js mov ljmp mov jmp js mov out or inc bound mov lock inc bound mov lock pushf mov dec fs loopne mov (bad) xor fist add push test (bad) xor test xchg (bad) adc dec xchg add or cmp out bound aam push inc mov add xor mov inc test push xchg rcrb pop cltd jmp loop imul lds and push test and xlat xor imul scas jmp insb movsb fist insb cmpsb jecxz push add imul addr16 das pusha xchg lret imul adc popf aam pop fwait call adc pop mov lock cmpsb out adc pop aas pop jp mov in or mov out or inc popa jle mov dec imul mov xor (bad) aaa push jo stos (bad) in push cmp xchg scas lret call ja mov add into out or inc popa jle mov lock test xor mov xor mov xor (bad) aaa push jb scas int3 call js mov jmp and pop jp mov in or inc pusha jl mov lock inc bound mov inc sbbl movsb rcr push xor mov ss jo test cmp mov cmp xchg lods lret and iret in or inc pop jl mov lock pushf mov dec gs lahf mov dec push clc adc dec push mov xor lea cmp int3 jmp jns mov in or mov lock pushf mov dec sbbl add add cmc adc movsl ret sbb vpaddd pop cmp jne mov ljmp mov in or inc bound mov dec test stc push xor outsb mov aaa push jo stos (bad) jecxz push cmp xchg scas int push data16 das pusha jle mov dec push notl xor insl mov ss aad push push test lahf iret add xchg ret repnz mov sbb jle in push lods push dec cmpl dec imul xor mov ss jo test cmp mov cmp xchg lods lret pop cmp jne scas into jmp and pop jp mov in or mov in or inc popa jge mov icebp push sub sbbb dec andw adc dec insb mov xor (bad) loopne sbb push outsl mov pop cmp jne scas lret out and int push and jns mov jmp daa inc bound mov dec gs sahf mov dec push clc adc mov xor outsb mov aaa push jo lods leave out and int3 call js mov ljmp mov out or inc bound mov cmpl inc movsb dec scas out and movb nop mov jmp es pop jl mov out or inc pusha jge mov out or inc bound mov inc sbbb jmp push jle std sbb push jae lods leave in pop cmp jne out pop test cmp in xor dec xchg fcompl pop movsl in ja add add cmp sti aaa jnp decb int3 daa arpl cld push mov cmp roll cmp scas loop pop mov mov in cs imul cmp (bad) lods enter cmp jbe scas int3 call js mov pop cmp jne scas lret out and int3 jmp js mov out or mov into popa pushf mov dec sbbw lock sbb push jo test loop sbb push jo scas lret call jns mov jmp es pop jnp mov in or inc popa jle mov lock inc popa jle mov lock inc arpl movntps test das dec push notl xor xchg xor xchg dec imul add add add mov cmp jne scas lret call js mov in or pop jp mov in or inc pop jl popf mov dec sbbl mov xor mov xor (bad) cmp stos (bad) jecxz sbb push jb stos (bad) in push cmp xchg mov jmp sub sbbb dec gs sahf mov dec push notl dec push mov xor mov xor outsb mov cmp xchg fimull push push sub testb popf mov dec data16 lahf mov dec push mov xor mov cmp xchg lods lret pop cmp jbe scas lret call ja mov ljmp mov ljmp add add inc pusha jl mov out or inc popa jge mov lock inc bound mov cvttsd2si sbbl dec push fdivrp sbb push jo test cmp nop lods leave out pop cmp xchg lods lret and int3 jmp ja mov jmp jns mov jmp and pop jp mov out or inc popa jge mov out or pushf mov inc sbbb inc sbbl lahf mov dec insb mov xor mov xor insl mov xor insl mov xor insl mov xor insl mov cmp nop lods leave out pop cmp jne lods lret and jbe scas lret call ja mov in or cwtl mov out or inc arpl cvttps2pi mov mov cmp (bad) lods enter cmp nop lods lret pop cmp jne add inc pop jle mov lock fwait mov inc arpl push sub sbbb dec sbbw dec andl adc movsl ret pop xor insl mov xor (bad) ss outsl mov cmp (bad) stos enter cmp xchg mov ljmp mov out or inc pusha jle mov lock inc bound mov inc sbbl sahf mov dec imul ss jo test loopne dec mov adc lret ljmp hlt xor or fisttpll add add test xor ja sbb jmp imul and pop jp mov out or inc pusha jge mov out or inc popa lods add dec jns mov in or inc pusha jl mov out or inc pusha jl mov in or inc pusha jl mov out or inc popa jge mov out or inc bound mov lock mov dec push outsb mov lahf mov dec test notb das dec push notl dec insb mov cmp mov cmp nop lods leave out pop cmp xchg scas lret and lret call js mov jmp and popa jge mov out or inc popa jle mov dec sbbw dec andl adc dec push add push push (bad) loope sbb mov ljmp mov jmp and mov in or mov out or inc pusha jge mov add loop inc jns out pop (bad) rolb cmp inc pop jnp mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov out or inc bound mov dec addr16 xor xchg scas int3 call js mov jmp and pop jnp mov in or inc pusha jge mov lock inc bound mov dec push mov xor mov xor (bad) sbb push jb stos enter cmp xchg scas lret and shr or inc popa jle mov icebp push sub sbbl mov xor mov add sti sbb outsb mov cmp nop lods lret and jbe mov jmp jp mov out or inc bound mov dec sbbw dec push cld sbb push outsl mov lods leave out pop cmp int3 jmp js mov in or inc pusha jge mov lock pushf mov dec insb mov enter pop jnp mov in or inc pop jnp mov in or inc pop jnp mov in or sub jg mov inc arpl adc dec imul xchg sub mov lock fwait mov inc bound mov inc bound mov dec test cmc adc dec test cmc adc dec push notl das dec push stc push add add dec imul xor mov ss outsb mov aaa push jo stos (bad) jecxz sbb push jb lods enter cmp nop lods leave out push cmp xchg lods lret and inc popa jge mov out or inc popa jge mov lock inc bound mov inc arpl mov inc sbbb dec andl dec imul xor mov xor mov xor insl mov add push jb stos (bad) in sbb scas int push and pop ja mov ljmp mov jmp and pop jp mov in or inc pop jge mov out or inc popa jge mov cvttsd2si sbbl lahf mov dec andl adc dec imul add adc mov xor mov ss jo rorb je scas lret and lret call ja scas int3 jmp js mov jmp jns mov out or sub mov dec sbbw dec andl adc dec test cmc adc dec test notb xor mov xor mov xor insl mov ss outsl mov aaa push jo test push cmp nop lods int3 jmp ja mov jmp jns mov jmp and pop jns mov jmp and mov in or mov in or mov out or inc popa jge mov lock sbbl mov add add dec push notl dec imul mov xor insl mov xor mov xor insl mov ss outsl mov cmp xchg lods lret out and mov out or inc popa jle mov lock fwait mov inc sbbb dec sbbl mov mov in or mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jl mov out add sub imul xchg xor mov push outsb mov xor (bad) loopne sbb push outsl mov cmp (bad) stos enter cmp (bad) lods enter cmp nop lods leave in push cmp add jae lods lret pop cmp xchg lods lret pop cmp js mov jmp js mov in or inc pop jl mov out or inc pusha jl mov out or inc pusha jl mov out or inc popa jle mov lock mov dec data16 adc movsb rcr push xor mov dec insb mov xor insl mov cmp test cmp nop lods leave in push cmp nop scas lret pop cmp jne scas lret and int3 jmp add movntps sbbb dec sbbl mov xor movsb rcr pop xor outsb mov mov mov xor xchg xor xchg push xor mov xor (bad) loopne sbb push jae lods leave in push cmp xchg lods lret and int3 jmp js mov ljmp mov in or mov lock sub sbbb dec data16 lahf mov xor (bad) loopne sbb push outsl mov aaa push jno stos (bad) in push cmp xchg mov jmp js mov jmp and mov out or inc pusha jge mov out or inc bound mov inc arpl mov imul or jae (bad) adc xchg mov push insl mov ss jo test jb xor inc jle call jb lods leave out and int3 call js mov ljmp add pop jp mov in or inc pusha jl mov lock inc bound mov out or inc mov cmp int push and pop jns mov in or mov out or inc popa jle mov dec imul xchg dec insb mov stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out pop cmp xchg lods lret and jns mov jmp and pop jp mov in or inc pop jnp mov in or inc pusha jl mov out or inc popa jle mov movntsd test jle in and js mov dec sbbl sahf mov dec andl jne notl pop xchg rolb inc or pop jns mov in or inc pop jl mov out or inc popa jle mov icebp or popf mov dec test or (bad) lret into in or inc pusha jge mov lock inc bound mov inc arpl loopne sbb push jb stos enter cmp (bad) lods int fs notb xor movsb rcr push xor mov add push je lods lret and pop ja mov jmp js mov jmp sub sbbb gs mov add xchg sbb stos jecxz ja clc aaa mov or cld inc add or test out cmp repz jg or rcrl add sbb xor add sbb and dec (bad) mov in outsl mov xor enter aad mov divl add ficoml push fwait mov in sub idivl mov or fbld outsl fldenv ja adc sub repnz stos out cmp fstps imul and xchg es push rorl inc cltd lds inc adc push ja std xor mov add add pop mov es lcall imul mov inc add inc xchg into adc cwtl frstor dec xchg shll push xlat adc lret mov and scas jmp inc jle xor sar cs roll aas jle pop add in daa popa mov sub push dec xchg lret pop push nop int3 push cmpsb ficom push mov inc jl stc cmp loop pop fwait loopne push mov or xlat pop pop pop or mov std xor mov das jo loop xchg idivl (bad) mov sbb mov (bad) sbb push jo test cmp nop lods leave out and jbe scas lret call ja mov ljmp mov in or mov inc sbbl mov xor xchg aaa push jno stos (bad) in push cmp xchg scas lret call jnp mov out or sti push cmp xchg scas lret call jbe scas int3 call jns mov jmp and pop jp mov in or dec sbbw dec sbbl adc dec push fdivrp pop cltd iret pop inc (bad) (bad) pop cmp jne scas lret call ja mov pop inc jg jecxz jg sti sub xor cmp add imul add sbb push jns mov sub mov push and jle mov mov xor ret loopne sbb push outsl mov aaa push jo test cmp stos (bad) in push cmp nop lods int pop and pop jp mov in or inc pusha jge mov lock lahf mov dec andl sti sbb push jo test mov or mov mov popf into (bad) sub xor dec mov push cmp lret pop mov mov push popa xchg lret pop xchg xbegin and leave mulb push addl jle divb push xchg int xor dec xchg add bound cmpsb fistl lds imul push xorl divl jno loopne xorb pop movsl repnz or outsl test mov xor (bad) aaa push jo stos (bad) jecxz sbb out and imul push xchg fcompl imul sbb out sub or in add push adc lret or je add shll movsl icebp aas jne add jl sub xchg dec jge out push xchg add jp or add jb jmp jp adc sbb sub cmpsb ret or lds cwtl mov add mov out dec ja incb ret adc cwtl rcrb arpl loope sbb push jae lods leave out add pop cmp jne scas int3 call js mov jmp and pop jp mov in or inc pusha jge mov hlt adc mov dec imul mov cmp (bad) lods enter cmp jne mov jmp jl mov cvttss2si (bad) lahf mov dec imul xor outsb mov cmp nop scas lret call jns lcall test notl dec push mov xor insl mov cmp jbe mov jmp jp mov icebp push sub (bad) sahf mov push outsl mov cmp nop scas loop (bad) xchg in and fimull jo push fs or int push jl mov out or inc arpl push xor insl mov add add mov lret xchg mov icebp push sub sbbb dec sbbl dec push std sbb push jo test cmp mov cmp xchg scas int3 call ja mov in or mov out or inc gs sahf mov dec push notl dec push mov xor mov xor (bad) cmp mov and mov out or inc popa jle mov icebp push sub sbbl mov xor mov ss outsl mov pop jbe scas int3 jmp js mov in or inc pop jl mov out or inc popa jle mov add adc movsb rcr pop xor jo stos (bad) jecxz sbb add aas pop js mov in or mov out or inc popa jle mov dec sbbl movsl rcr pop xor insl mov aaa push jb lods leave in pop cmp xchg scas lret out and pop jns mov in or inc pop jnp mov dec sbbl mov xor xchg push insl mov aaa push jno stos (bad) in sbb xchg mov out or inc popa jg mov dec sbbw dec imul mov ss jo stos (bad) out and pop js mov ljmp mov lock popf mov dec imul mov stos leave in pop cmp jne mov in or inc pop jl add add inc bound mov dec data16 xor in and sub gs lahf mov dec insb mov xor mov xor insl mov xor (bad) loopne sbb push outsl mov cmp stos leave in push cmp xchg lods leave out pop cmp jne scas lret and lret call ja mov call js mov in or mov out or sub gs sahf mov dec sbbw dec push movsb rcr push xor mov dec push movsb rcr sbb push outsl mov aaa push jno stos (bad) jecxz sbb stos enter cmp nop lods leave out pop cmp xchg scas lret add pop jns mov out or inc pusha add jge mov lock inc bound loopne sbb push jno stos (bad) jecxz sbb push jae lods leave out pop cmp xchg scas lret out and pop jnp mov in or inc popa jle mov lock popf mov dec gs lahf mov dec imul xchg cmp stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret out and pop ja mov jmp js mov ljmp mov dec gs sahf mov xor mov cmp stos (bad) jecxz sbb stos enter cmp xchg scas int3 jmp jl mov dec test notb dec push mov xor xchg dec insb mov xor movb push and pop jns add and mov lock inc arpl cvttps2pi sbbl mov xor mov aaa push jo test cmp (bad) lods enter cmp jne scas lret call ja mov jmp js mov ljmp mov out or inc popa jge mov dec gs sahf mov dec test notl xor mov push outsb mov cmp shr or inc popa add adc dec imul mov push insl mov ss jb scas int3 call js mov ljmp pop jl mov out or inc arpl cvttps2pi (bad) sahf mov dec test cli push xor add push insb mov aaa push jo stos (bad) jecxz sbb lods lret and jne scas int3 call js mov in or mov lock pushf mov dec data16 push xor mov aaa push jno stos leave out pop cmp jbe mov jmp jg mov dec gs mov pop xor insl mov aaa push jno stos enter cmp xchg scas lret call js mov repnz sub gs lahf mov dec test notl xor mov xor mov xor vpaddd cmp xchg mov jmp and pop jp mov in or inc popa jge mov lock sub sbbb dec gs lahf mov dec test cld sbb add add mov cmp (bad) lods leave out pop cmp xchg scas lret out and pop jns mov in or mov cvttsd2si (bad) mov xor xchg xor mov add push jae lods leave in pop cmp xchg scas int pop and pop jp mov in or inc bound mov dec gs lahf mov dec imul jae lods (bad) lea push cmp nop lods leave out es pop jl mov lock popf mov dec test notl xor xchg push insl mov aaa push jno stos lret and int push and jns mov in or inc pusha jge mov lock pushf mov dec gs sahf mov dec insb add sbb push jo stos (bad) jecxz sbb push jae lods leave out pop cmp jne scas lret call jns mov in or mov out push sub sbbl mov das dec imul jb lods enter cmp xchg scas lret out and shr or inc arpl cvttps2pi (bad) lahf mov dec push (bad) sbb push jno stos (bad) in pop cmp int3 jmp jl mov out or inc bound mov dec test clc adc movsl rcr sbb outsb mov cmp lods enter aas pop js mov jmp and mov out or inc arpl mov dec push sti sbb (bad) sbb push jae add add and pop jns mov in or mov out or inc bound mov cwtl aam inc jp push addr16 repz dec xchg shr dec jne iret cld sub les aaa insl cmpsb fisttpll inc jp ficoml push (bad) leave pushl cwtd add adc cmpl icebp daa pop xchg ret cmc and inc xchg sub rcr push xor outsb mov xor (bad) loopne add cmp nop lods leave out pop cmp jne scas lret out and jp mov in or in push dec jnp or mov mov dec addr16 es test notb xor mov imulb gs fsts dec xorb and pop jnp mov out or inc bound mov dec data16 lahf mov dec imul add xchg aaa push jno stos (bad) in push cmp xchg lods lret and int pop and pop jnp mov out or inc popa jle mov dec test xor mov xor outsb mov aaa push jno stos (bad) in sbb xchg mov jmp and pop jp mov in or dec gs sahf mov dec imul mov xor (bad) jecxz add cmp int pop and pop jp mov lock sub arpl mov mov mov adc mov and imul jb roll cmp adc cmpsb (bad) dec (bad) mov pop cwtd leave cli sub xchg enter lcall push aaa imul add cmp aam dec jg divl jno loop push mov mov (bad) cmc es fimull cmp aam pusha cltd rorl cmp pop jnp mov icebp or mov xor xchg cltd int sub out and jbe scas lret call jbe scas add in or inc pop jnp mov out push sub sbbl lahf mov dec andl mov cmp xchg lods add jmp and mov in or inc sbbb sbbl andl dec imul xor (bad) sbb push jno scas int3 jmp jns mov in or mov out or inc popa jge mov lock inc bound mov dec add add (bad) lahf mov dec imul xor (bad) jecxz sbb push jb stos enter mov push cmp xchg lods lret pop cmp jne scas lret out and add jbe loop imul ds ja mov ljmp mov jmp and pop jnp mov in or inc add sahf mov dec imul xor insl mov data16 (bad) sbb push jno test cmp add and pop jnp mov out or inc pusha jl mov out or inc popa jle mov lock inc arpl mov inc arpl jp in or inc popa jge mov dec push notb das dec push notb das dec push notb das dec push clc adc add xchg push outsb mov xor ret loopne sbb (bad) loopne sbb push outsl mov cmp test cmp test cmp xchg scas lret out and lock iret in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov lock sub rcr push xor mov xor outsb mov ss outsl mov ss outsl mov aaa push jo xchg scas lret and pop jns mov jmp and pop jp mov out or inc pusha jge mov lock popf mov dec gs sahf mov dec test stc push xor mov xor mov ss outsl mov aaa push jno test add lcall push jno lods enter inc pop jns mov in or mov in or mov cmc pop scas (bad) adc movsl rcr push xor mov xor mov cmp (bad) lods enter cmp nop lods leave out pop cmp nop lods leave out and jne scas lret call jbe scas int3 call bound mov lock pushf mov inc sbbl push dec nop jmp push mov add jb lock xor (bad) sbb push jno stos (bad) jecxz sbb lods leave in push cmp xchg scas lret and jns mov jmp and pop jp mov out or inc jno lock (bad) sbb rcrl adc or (bad) std sbb push jo stos (bad) jecxz sbb push xchg (bad) adc (bad) sbb lods leave out pop cmp jne scas lret out and int3 jmp js mov ljmp mov lock sahf mov dec test notb loop and jbe scas lret call ja scas int3 jmp js mov ljmp add dec and pop xchg jecxz xor mov xor ret loopne sbb (bad) loopne sbb push outsl mov inc pop jns mov jmp and mov in or mov in or pop jp mov in or inc pop jl mov in or inc arpl mov inc sbbb inc arpl adc gs lahf mov add add mov dec sbbw dec push mov xor xchg dec imul ss outsl mov ss outsl mov aaa push jb stos enter cmp mov cmp nop lods leave out push cmp xchg lods lret pop jp mov in or inc pusha jge mov out or inc sbbl test xor xchg dec imul ss jo test aaa push jno stos (bad) out jae hlt sub add xor lret fwait mov dec imul cmp (bad) lods leave in and int or inc scas cli cmp mov dec test notb das dec push notl xor add imul mov (bad) cli inc outsb mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos enter cmp nop lods lret pop cmp jne mov jmp and pop stos out and ret repnz dec jle fimul icebp sbb sbb mov and xbegin adc xor adc scas ljmp sub (bad) std xor adc pop xchg sti xor inc mov inc mov mov push jg fimul aas xchg clc aas jle adc fdiv add xor mov xor insl mov xor ret loopne sbb pop mov pushl cmpsb fistl inc jge in sub add ds jbe mov jmp js mov ljmp add add inc pop jns mov in push xchg lret add outsl movsl fistl inc jp negl xor mov xor (bad) aaa push outsl mov aaa push jo test aaa push jo test ds ja scas int3 jmp ja mov jmp js mov jmp and pop jp mov in or mov in or inc pop jnp mov icebp or or popf rcr ja add xor ljmp pop jl mov out or mov sbb pop je scas lret out and (bad) lock inc bound mov add mov xor xchg push insl mov xor vpaddd cmp jne scas lret call ja mov jmp and pop jnp mov out or inc add add fwait mov icebp or popf mov dec sbbw dec insb mov xor (bad) jecxz sbb push jae lods leave out pop cmp jne scas lret call and leave (bad) xor clc daa popa mov vmovddup dec push notl xor xchg xor xchg dec imul xor mov cmp stos (bad) jecxz sbb push jno stos movl pop jbe mov call js mov ljmp mov in or inc bound mov icebp or popf mov dec add mov mov cltd leave clc es movsl (bad) dec lcall ss mov lods loop dec js in and xchg mov pop dec jg cmc add pop mov imull bound jmp push test fcoms inc jns loopne inc jl loop push xchg leave add jbe add cmp jne scas lret call ja mov ljmp mov in or inc pusha jge mov dec test notb xor mov xor mov xor (bad) sbb push jb stos (bad) in push ds ja mov ljmp mov in or mov in add sub sbbl mov xor mov push jno stos (bad) jecxz sbb push jb stos enter cmp add and mov out or inc mov adc push insb mov cmp mov cmp nop lods leave out pop cmp jne scas add out and lret call js mov ljmp mov in or inc pop jl mov in or inc pop jnp mov in or inc pusha jge mov lock inc bound mov inc arpl mov dec imul xchg xor xchg push insl mov xor insl mov ss jo test cmp jbe scas lret out and lret out and int add es popa jge mov out or inc popa jle mov out or inc gs sahf mov dec andl adc dec push mov xor add sbb push jo test cmp nop lods leave out and pop js mov jmp and pop jge pop push xchg rorl cmp add or dec insl mov xor (bad) loopne sbb push outsl mov cmp int3 jmp mov movsl rcr pop xor insl mov ss jo test cmp mov ds ja mov call ja mov jmp jns mov ljmp mov jmp and mov in or inc pop jg mov inc arpl mov dec andl adc dec push stc adc lea cmp (bad) stos enter aas pop js mov jmp es bound mov cmc adc cmpsb fstpl dec mov or dec add mov xor xchg cmpsb loopne push lcall push movsb rcr sbb add test cmp (bad) lods enter cmp xchg scas lret out and int or inc popa jle mov icebp or sahf mov dec push stc push xor mov cmp xchg scas lret call mov repz dec imul cmp jno lods enter cmp xchg scas lret out and int3 jmp jl mov out or inc pusha jl mov lock inc arpl push sub sbbl add stos fisttpll sub sbbl pop (bad) (bad) stos loopne mov stos or push push fisttpl add mov clc xor aam inc jl lock nop ret xchg mov cvttsd2si sbbl add push cld sbb push outsl mov cmp nop lods lret and jl mov cmp push xor mov ss jo test cmp nop lods lret pop cmp jbe mov jmp jg mov dec data16 lahf mov mov add mov mov cmp mov cmp xchg scas lret in or inc popa jge mov lock popf mov dec andw add mov aaa push jno stos (bad) in sbb mov ljmp mov out or inc bound mov dec gs lahf mov dec imul lea inc pop jnp mov out or inc arpl add dec imul aaa push jo stos (bad) in push cmp xchg scas lret and iret lock pushf mov dec gs lahf mov dec imul xor insl mov cmp nop lods lret call js mov out or inc bound mov dec push movsb ret add scas lret call ja mov jmp and pop jl mov lock mov xor mov xor (bad) jecxz sbb lods lret or mov lock inc arpl pop xor outsb mov sub mov xor (bad) jecxz sbb lods lret call js mov in or inc pusha jge mov icebp push das dec imul mov ret sbb add xchg scas lret and pop jns mov in or inc popa jle mov icebp push sub (bad) sahf mov push outsb mov cmp xchg scas lret call jp mov out or inc popa jg mov dec push clc adc test cmp (bad) lods leave in pop ds js mov out or inc add mov xor mov ss outsl mov cmp shr or inc bound adc andw dec push movsb rcr pop xor push jb lods lret and pop js mov out or inc bound mov dec andw dec insb mov aaa push jno stos enter cmp shr or inc pusha jge mov dec imul add cli pop xor insl mov pop cmp jbe scas int pop and pop jnp loope imul in dec jl out sub sbb lret add jb loopne push mov adc mov cmp stos (bad) in sbb lods enter cmp jne scas lret call jl mov out or inc arpl cvttps2pi sbbl xchg dec insb mov xor insl mov cmp xchg scas lret call rorl inc mov loop sbb push jo stos (bad) jecxz sbb push jae lods enter and pop js mov jmp sub jle mov icebp or popf mov dec data16 das dec push notl dec push mov xor mov push jo add cmp test cmp add and jbe loopne sbb push jno stos (bad) loop sbb push jno lods lret pop cmp nop lods leave out pop cmp nop lods leave out pop cmp xchg lods lret and enter xchg xlat or lock mov (bad) stc sub add jb aad aaa imul lods call jmp sub sbbb dec gs mov xor (bad) aaa push jo test aaa push jno test cmp stos (bad) jecxz sbb push jno stos add out and shr or mov out or inc pusha jl mov out or inc fs sahf mov dec gs sahf mov dec sbbw dec push mov add stc adc movsb rcr push xor mov xor stos (bad) jecxz sbb push jae lods enter cmp (bad) lods leave call ja scas int3 jmp js mov jmp and pop jns mov jmp and pop jp mov in or inc pusha jl mov out or inc pusha sbbb sbbl sahf mov dec test notl xor push outsb mov cmp stos clc dec xchg rcr sbb ret loopne sbb push jo test aaa push jo test cmp mov cmp stos add call jns mov in or cmp fcoms dec jge call lcall cmp mov cmp nop lods leave out pop cmp xchg lods iret in add or mov in or mov in or inc popa jge mov out or add sbbl dec test notb das dec imul xor mov push insl mov ss outsb mov cmp test cmp stos (bad) jecxz and pop ja mov jmp js mov ljmp mov jmp and pop jp mov in or sub sbbb andl mov stos clc and pop jl mov in or inc pusha jge mov out or fwait mov icebp or pushf add push insb mov xor mov push pop mov std ss fcoms pusha xchg mov jmp and mov in or inc pop jnp add add mov test das dec push notb das dec push notb xor push insl mov mov lahf mov push outsl mov aaa push jo test cmp mov out or inc pusha jge mov out or inc popa jle mov lock mov xor xchg dec imul xor insl mov xor outsb mov sbb lods enter ds jp mov in or mov in or inc pusha jge mov out or inc popa jle mov lock inc arpl mov inc arpl sti pop xor insl mov xor (bad) sbb push jo test cmp mov cmp add call jnp mov in or inc pop jl mov out or inc pusha jge mov cmp call js mov jmp or inc bound mov dec data16 dec imul xor mov xor outsb mov xor insl mov ss jo test loope sbb stos (bad) in sbb stos enter cmp (bad) stos (bad) in sbb lods enter cmp (bad) lods enter and pop js mov out or inc pusha jl mov out or inc pusha jl mov out or inc pusha jge mov out or inc popa jle mov stos ficom xchg scas lret sub jle sahf mov pop popf roll cmp sub mov adc insb cltd enter stos loope push nop (bad) sti xor lcall add add add adc mov adc mov and leave std aaa jo rolb push (bad) movsb rcr pop nop (bad) outsb movsl fistl dec test ss jecxz mov push je lods lret es pop jl mov out or inc pusha jge mov out or fwait mov inc arpl mov inc sbbb dec sbbl mov xor mov (bad) cld dec push movsb rcr push xor mov xor insl mov push aas pop jns mov jmp and pop jp mov in or inc pusha jge mov lock popf mov dec data16 das dec imul mov lods lret and int3 jmp js mov ljmp mov in or inc add cltd mov lock inc bound adc dec test notl dec push movsb rcr and mov shr sub jg mov add xchg aaa push jno stos (bad) in sbb lods leave out pop cmp jne scas lret call js mov jmp and mov in or inc pusha jge mov dec sbbw fdivrp sbb push jo test cmp (bad) stos enter cmp xchg scas lret and add cvttsd2si (bad) sahf mov dec push notl dec push mov xor outsb mov cmp stos (bad) in sbb mov ljmp add dec gs sahf mov dec andl adc dec push add add dec imul aaa push jno stos (bad) in sbb scas lret and pop js mov jmp and pop jp mov in or inc popa jge mov dec add mov aaa push jo stos (bad) in sbb scas lret and pop js mov ljmp mov in or inc pusha jge mov lock mov xor leave push aas jne cmp xchg scas lret out and lret out and jne scas lret out and lret out and add mov inc arpl movntps sbbl mov das dec push imulb xchg fstl dec nop (bad) stc sub and mov adc add xchg into (bad) xor lret push jl in push dec jl in inc ja (bad) cmp popf iret push xor cmp jecxz dec cmpl (bad) repnz scas in push test rolb xor cltd rolb cmp mov xor jg jmp ljmp cmp xlat adc add dec jg in dec jle cmc sub push mov push jno stos (bad) in push aas pop jp mov in or mov out or inc popa jle mov inc sbbl mov push outsb mov cltd notl add push jb stos enter cmp nop lods leave out pop cmp xchg scas lret out and int push and jp mov in or inc sbbb dec sbbl test xor xchg mov dec push movsb rcr push xor mov cmp mov sbb call sub (bad) rorl pusha stos out pop cmpsl loop jl mov lahf ficom dec mov or mov dec add jb ljmp mov fcoms pop movsb jecxz jbe push inc test adc jecxz dec (bad) mov and push push xchg int pop cwtl (bad) push pop cltd rcll (bad) loop pop jp mov outsl scas out ss add jnp or (bad) adc fistp gs or test call sub scas jmp add push mov sbb and loopne bound out cmp cli ss fdivrp dec add jb repnz repz loop pop xchg rolb inc jle lock add es test sub loopne add adc sub push lahf fstl cmp mov add jo out xor sub test cmc xor sbb lret add pop xchg enter icebp and inc cmpl testb outsl cmpsl icebp cmp sub or fstps push nop loope pop movsb int3 adc push mov call add js clc sub fwait rorb inc (bad) mov fistp push xchg lret add test or rorb dec fldcw outsb mov xor cmp (bad) xchg shll jns ljmp add and push push nop iret es cmpsb out sub xchg in pop xchg rcll push cltd aam inc jnp or mov jmp adc divb popa jle mov add add add test xor xchg xor mov cmp (bad) stos enter cmp nop lods leave out pop cmp xchg lods lret and jne scas lret call ja mov jmp js mov in or inc pusha jge popf mov dec sbbw loop pop jp mov in or inc popa jle mov icebp or sahf mov dec imul xor insl mov ss outsl mov cmp (bad) lods leave out and jbe scas int3 call js mov out or inc bound mov dec add movsb rcr pop xor outsl mov cmp cli cs xchg (bad) hlt and and (bad) (bad) xor rorl inc cmpl add lods leave out and add add add mov in or mov in or inc pusha jl mov out or dec gs sahf mov dec push notl xor mov xor xchg jmp jb mov jmp and pop jp mov movntsd sbbl xchg xor mov ss outsl mov ss jo test cmp lods lret and jbe scas int3 call ja mov jmp js mov jmp es pop jl mov out or inc popa jle mov icebp adc dec push notb das dec push add sbb (bad) ss outsl mov ss jno stos (bad) jecxz sbb scas lret call ja mov ljmp mov add or jb loop push add sbb adc cli xor repnz stos in cmp incb rcll jg in push push cmpsb fdivrp sbb push jno loop pop lods jmp inc xchg aam push sar sbb pop cwtl fistl daa bound and data16 ficoml dec xchg aam dec (bad) int3 pop dec mov (bad) cmp or enter ret add (bad) push pop mov adc imulb imul sbb xchg fistp cmpsl in pusha mov cmp repz call jbe sti dec cmpl aas js pop inc jp or or movl loopne cmp mov lcall arpl cvttps2pi (bad) sahf rcr pop xor mov xor outsb mov add add std sbb push jo test add jne add inc pop jnp mov out or inc arpl movntps sbbl movsb rcr push xor mov xor (bad) ss jo test cmp xchg scas lret pop mov imulb bound mov icebp push sub (bad) sahf in es mov fistl dec test mov push outsl mov cmp mov cmp xchg scas lret and arpl push xor insl mov ss je lods lret pop cmp jne scas lret call ja mov ljmp mov in or mov out or inc popa jge mov repz sbbw dec push add fcomi adc dec push loope pop mov sbb push jo test pop add jns mov jmp and pop jle mov inc arpl push sub (bad) std cmp sbb mov or scas int3 jmp ja mov jmp js mov out or inc popa jle mov lock inc bound mov inc arpl mov dec sbbl sahf mov dec xchg stc push xor mov push insb mov xor (bad) loopne sbb push jno stos (bad) jecxz sbb push jb stos enter ds ja mov jmp js mov ljmp mov jmp and mov in or mov out or inc popa jle or movsb rcr push xor outsb mov add sbb push jo test cmp (bad) stos enter cmp popl mov call pop jnp mov icebp or pushf mov inc arpl push sub sbbl sahf mov dec data16 sahf mov dec test xor xchg xor test xor xchg xor xchg xor mov aaa push jo test cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos enter cmp nop lods leave in push cmp xchg mov ljmp mov jmp and pop jp mov in or mov in or mov in or inc pop jl mov out or inc sbbl mov add add add dec push mov xor xchg push outsl mov pop cmp add sub jle mov lock inc bound mov inc arpl adc dec test notb das dec imul pop nop ret pop xchg (bad) pop nop ret repz pop nop ret bound xchg (bad) imulb pusha xchg (bad) stc sub nop sar pop xchg int3 (bad) sub aaa outsb sahf shll pop mov clc sub xchg lret std xor aam inc outsl popf iret add imul pop cmp pop xchg (bad) pushl imul js loope push xchg loop xor mov xor (bad) loopne sbb push jno stos (bad) jecxz sbb push jae lods enter cmp xchg mov jmp and js mov add into ljmp mov out or inc pusha jge mov out or inc popa jle mov lock inc bound mov xor push jo test cmp lods leave out pop cmp xchg lods lret and into jmp and pop js mov inc mov cmp xchg mov jmp es pop jnp mov sbb roll std sub pop lods rorl dec test adc ficoml jb cli inc cmpb inc cmpl add ret mov sbb loop pop scas lock imul les push (bad) loopne pop stos in js notb xchg mov jmp and pop jp mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc arpl adc dec add add adc dec imul mov xor insl mov xor insl mov add pop ja add inc popa jge mov out or inc popa jle mov dec popf (bad) adc dec imul push dec test clc adc dec jo test cmp nop lods lret and int3 call js mov jmp and pop jnp mov out or inc popa sbbb dec insb mov cmp nop lods leave in pop cmp jne scas lret out and pop js mov in or mov out or inc popa jle mov dec test stc push xor mov aaa push jo stos leave in and shr or inc pusha jl mov lock inc andw add das dec imul mov cmp nop lods lret call ja mov in or inc pusha jge mov out cvttps2pi (bad) add sbb push jb stos enter cmp xchg mov in or inc pusha jl mov dec andw push outsb mov cmp nop lods lret and pop js mov in or inc arpl cvttps2pi test xor mov cmp xchg mov jb,pn in pop cmp xchg scas lret call jns fsubs pop pop sti aas xchg aaa push jb stos enter cmp xchg scas shr or inc popa jle mov inc data16 xor mov xor (bad) cmp stos (bad) in push cmp xchg mov pop push xchg int jbe,pt idivl xchg repz dec imul mov ss outsl lea pop jnp mov out or je mov xor mov or ljmp lds inc fwait repnz add dec cltd rolb pop xchg mov das (bad) mov or xchg push pop mov (bad) cmp movb cwtl mov cli pop lcall xchg mov ljmp mov in or inc fs and mov lret pop cmp jne scas lret call jbe scas lret call ja mov jmp js mov out or inc popa jle mov lock inc bound mov icebp push sub (bad) lahf mov dec andw dec push notl dec imul add add add add cld sbb ret loopne sbb ret loopne sbb push outsl lea cmp mov cmp nop lods leave in and pop js mov in or pushf mov xor mov xor insl mov xor outsb mov aaa push jo test cmp jne scas lret out and pop ja mov ljmp mov jmp daa inc popa jge mov icebp push sub sbbl cmpsb ret loopne sbb (bad) sbb push jb stos (bad) in sbb cmp xor xchg xor mov mov and pop jp mov out or inc popa jge mov lock popf (bad) cmp jbe negl pushf into adc (bad) pop xchg jecxz xor push outsb movsb jecxz pop stos out push mov sbb push xchg aam push xchg rorl aas jnp (bad) pop cmp out and in xchg inc jns add inc pop jnp mov out or inc arpl andl xor outsb mov cmp stos (bad) in push cmp xchg scas int3 jmp sbbb dec gs lahf mov dec push mov xor mov cmp (bad) stos enter cmp xchg mov in or inc popa jle mov dec imul mov cmp mov cmp xchg lods lret and pop jns mov icebp push sub test testl insl mov ss jo test cmp (bad) lods lret and add in or inc popa jle mov icebp push sub sbbb dec andl dec imul mov fidivl jne mov out or inc bound mov inc sbbl outsb mov cmp mov cmp nop lods leave in push ds jp mov out or inc popa jge mov lock inc arpl or sahf mov dec andl adc dec imul mov aaa push jb scas lret and jbe scas int3 call jbe scas lret call ja mov ljmp mov in or sbb push pop mov push outsb mov ss jo test loope sbb push jo test add lcall cmp xchg scas lret and jne scas lret out and int3 jmp ja mov jmp daa inc bound mov dec andl cmpsl (bad) cmp mov cmp mov add push sub sbbb dec gs sahf mov dec imul xor (bad) loopne sbb push jno stos (bad) jecxz push cmp xchg scas lret and int pop and pop jns mov out or inc bound mov dec fs lahf mov dec imul mov push outsb mov cmp scas lret and pop js mov jmp and pop jp mov in or inc popa jge mov lock mov mov movsb rolb add (bad) sub mov fcoms dec mov cli sub sahf xlat or dec mov shrb pop js push cmpsb lret out and int push and mov clc xor or mov inc cmpl cmp lock sub sbbl outsb mov add (bad) lahf mov sub les insl les popa mov xor rolb adc mov mov xor mov dec (bad) (bad) hlt sub out or dec data16 lahf mov dec push notl dec imul mov xor outsb mov ss outsl mov cmp nop lods leave out pop cmp jne scas lret and int3 jmp js mov jmp and add pusha sbbb dec gs sahf mov dec test notb xor xchg loopne outsl lea cmp (bad) stos enter dec mov mov xor int3 call ja mov jmp js mov shr or add sbbl sahf mov dec push mov xor xchg dec imul xor xchg xor xchg xor mov xor ret (bad) sbb (bad) loopne sbb push jo test cmp stos (bad) loop sbb push jo test cmp nop lods leave in push cmp xchg scas lret out and jne scas lret and jbe scas lret call add mov jmp jnp mov in or inc pop jl mov out or inc pop jnp mov out or inc pop jl mov out or inc pusha jge mov out or inc popa jge mov out push sub sbbb sbbl popf mov dec sbbl xchg test loope sbb push outsl mov cmp nop lods enter cmp (bad) lods leave in push cmp xchg lods lret and int3 call lret inc pop jns mov out or inc bound mov dec fs sahf mov dec sbbw dec push notb xor mov das dec insb mov push outsl mov cmp stos (bad) jecxz sbb push jb stos (bad) in sbb add add cmp xchg scas lret and pop jns mov in or inc pusha jge mov out or inc bound mov lock pushf mov inc arpl mov inc arpl adc mov dec imul xor xchg dec imul sbb push jae xchg mov ljmp mov out or inc popa jle mov out or inc bound mov dec test notl dec push mov xor mov cmp (bad) stos enter cmp xchg scas int3 call jbe scas int pop and pop jp mov out or inc bound adc imul xchg xor insl mov and (bad) and fcoml jae roll xor add cwtl lret std xor cld xor into add pop cmp roll arpl iret or jns hlt xor loop pop sahf fsubrl jp mov out or inc popa jge mov icebp or mov xor xchg push outsl mov cmp stos pop inc js loope inc sbb je xchg mov jmp or andw dec imul xchg xor insl mov ss jo test cmp mov cmp int3 jmp jp mov in or inc pusha jl mov out or inc popa jge mov icebp push sub sbbl mov xor xchg xor mov xor outsb mov xor add add mov cmp stos (bad) jecxz pop cmp ja mov jmp gs sbb push je lods leave out and mov mov add cvttps2pi (bad) lahf mov dec andl sbb push outsl mov cmp stos enter cmp nop lods leave in push cmp nop lods lret pop cmp jne scas int3 call jp mov add jl idivb pusha jge mov out or inc pusha jge mov out or inc pusha jge mov dec add adc dec push mov cmp popf fmuls sub fwait mov inc arpl cvttps2pi sbbl mov xor ret or mov enter enter mov ss jo test aaa push jo test cmp xchg scas int3 call js mov ljmp mov in or and cmpsl (bad) add pop je scas lret jmp jns mov icebp push sub sbbl mov xor mov aaa push jo stos (bad) jecxz sbb lods leave in pop aas pop jns mov jmp and mov out or inc bound mov dec andw dec imul sbb lods leave jmp jns mov in or inc pop jnp mov out or inc pusha jge mov out or inc bound mov scas call xor fsts push mov cmp ljmp std sbb push jo test ss outsl mov add (bad) sbb push outsl mov ss outsl mov cmp (bad) stos enter cmp nop lods leave out pop cmp xchg scas int3 call ja mov jmp ja mov lcall cmp nop lods enter cmp int3 call ja mov ljmp mov out or inc pusha jge mov out or inc popa jge sbb mov out or mov dec test notb das dec push clc adc movsl rcr pop xor mov ss add int3 jmp js mov ljmp xor add cli dec mov sbb in imul cmpsb ret sbb jb lods lret pop cmp jbe scas lret call ja mov call js add mov ljmp mov in or mov out or pushf mov dec sbbw dec test cmc adc dec push notl xor xchg add outsb mov cmp nop lods leave in pop cmp int or mov in or inc pusha jl mov lock fwait mov dec push notb das dec push notb xor xchg xor mov xor (bad) add cmp nop scas lret jmp or inc andb pop xchg lret jno ficoml push mov repnz inc cmpsl (bad) sbb push jno stos (bad) jecxz sbb push jb stos (bad) jmp js mov jmp and mov in or adc add add loop dec andl adc dec push notl dec insl mov ss outsl mov aaa push jo stos (bad) jecxz sbb xchg int push test xor xchg xor mov cmp xchg lods lret pop cmp je lods lret pop cmp jne scas lret and jbe scas int3 call ja mov jmp jl mov out or inc pusha jge mov lock inc bound mov lock pushf mov inc sbbb dec sbbl mov xor insl mov xor (bad) loopne sbb push jo test aaa push jo stos (bad) jecxz sbb push jb scas repnz out and iret pop aas test mov jnp out push push test out sub xlat or scas in dec mov sbb sbbl movsb rcr pop xor mov pop push xchg mov out or xchg fist xor xchg xor mov cmp pop ja mov ljmp mov in or inc pop cmpsl fstpl push movsl (bad) icebp push sub sbbl lahf mov push outsb mov push xchg lds mov dec push movsb rcr push xor mov ss outsl mov or ret xchg int3 or add mov sbb aam inc jge lock into or mov lock popf mov dec andw push outsb mov aaa push jno stos enter cmp add add and pop js mov jmp and mov out or inc popa jle mov dec test notl xor xchg xor mov ss jo test xchg shll dec gs sahf mov dec insl mov push cmp nop lods lret and int3 jmp jns mov in or mov inc andl mov xor mov cmpsl add (bad) cmc daa pusha sahf in or inc bound mov dec gs sahf mov push insb mov ss add int3 call js mov jmp and mov out or inc popa jle mov dec andl mov xor mov add (bad) sbb push jno stos enter cmp xchg scas lret out and int push and jge mov lock popf mov dec sbbw dec push clc adc cmpsb (bad) loopne sbb push jno stos (bad) out and pop js mov jmp and pushf mov dec gs sahf mov dec test notl dec push movsb rcr sbb leave out pop cmp jbe scas int3 call js mov jmp and pop jnp mov out or inc arpl adc dec push clc adc test loope sbb push jno stos (bad) in add aas pop js mov in or inc pusha jge mov lock pushf mov dec gs sahf mov dec push mov xor mov sti sbb (bad) in sbb mov ljmp mov out or inc bound adc dec test notl xor mov push jo stos (bad) jecxz sbb push jb lods enter ds js mov jmp sub fwait mov icebp push sub sbbb xor mov xor (bad) aaa push jno stos (bad) in push cmp xchg scas iret in or mov out or inc bound mov dec andl clc jge,pn mov dec test notl xor outsb mov aaa test sti sub adc add mov ss outsl mov cmp nop lods leave out and jbe mov in or inc pop jl mov out or inc bound add jle mov inc fs sahf mov dec andl adc dec imul mov aaa push jo stos (bad) in sbb lods leave out and jbe scas int3 call jp mov in or inc pusha jge mov repz mov dec push movsb rcr add push jae lods lret and pop ja mov ljmp mov in or inc popa sbbl mov xor mov xor mov xor (bad) aaa push jo test cmp jne scas lret call ja mov ljmp mov add or popf mov dec data16 lahf mov dec test sti sbb outsb mov ss add outsl mov cmp (bad) lods leave in push cmp xchg scas lret out and into jmp and mov dec gs lahf mov dec push stc push xor mov xor (bad) loop sbb push je lods lret and jp mov out or inc popa jg mov dec sbbl mov push outsl mov cmp mov ds ja mov jmp and pop jnp mov lock popf mov dec push notl dec imul xor jae lods lret and int3 jmp jns mov in or inc pusha jge sahf mov dec test notl dec push mov roll outsl cmpsl (bad) cmp add xor push and pop jns mov in or inc popa jle mov cvttsd2si (bad) sahf mov dec test cld sbb vpaddd aaa push jno stos (bad) jecxz sbb lods lret and jo fisubl inc pop jp mov in sub pusha jle mov lock inc bound mov lock pushf mov cs push notb xor xchg xor mov mov or mov ss outsl mov cmp jmp daa inc popa jle mov inc sbbb xchg int3 pop cmp aam xor xchg shr dec jnp (bad) add pop xchg test add stc sub rolb inc jl repz (bad) cld xor movsl fistl inc add sbb xor scas hlt sub pop (bad) ret arpl mov push push mov stc xor leave add xor (bad) sti sub sub out and xor fsts inc jle lock xchg sub sub imul (bad) lods enter cmp nop lods leave out pop cmp jne scas lret out and inc pop jnp mov in or inc pop cmpsl in das dec imul cmp nop lods enter cmp nop lods lret pop cmp xchg scas lret call jbe scas int3 call js mov in or mov lock inc bound mov dec sbbl lahf mov dec add (bad) push xor mov cmp test add sbb lods leave out and jne scas lret call jp mov in or mov lock inc arpl mov dec test xor mov dec insb mov ss jo test cmp xchg scas int3 call jge mov repnz mov dec imul xor mov xor push jb lods leave out pop cmp jne scas lret and pop jns mov out or inc bound mov lock sub sbbb dec sbbw dec andl adc dec imul mov aaa push jno lods leave out and lret call js push dec insb mov test cmp (bad) mov ljmp add mov in or mov out or inc popa jle mov lock popf mov inc arpl xor mov xor ret loopne sbb push jo test cmp (bad) stos enter cmp (bad) stos enter cmp xchg scas lret jmp and pop jns mov in or fcoms dec jge lock add std daa inc popa jge mov dec add push xor mov ds ja mov ljmp mov in or mov out or inc popa jle mov lock popf mov dec push movsb rcr sbb push outsl mov cmp (bad) lods enter cmp xchg scas lret out and int3 jmp popa jle mov dec insb add mov xor outsb mov aaa push jo test aaa push jno stos (bad) in sbb lods leave out pop cmp xchg mov in or mov out or inc bound mov dec data16 lahf mov dec push notb xor xchg xor (bad) sbb push jb stos leave out pop cmp int3 jmp ja mov jmp and pop jp mov in or sub jg mov dec test notb xor mov xor mov aaa push jo test cmp (bad) stos enter cmp out push sub sbbl mov xor xchg xor mov cmp lods enter cmp pop jge mov add aam or sahf mov dec test notl dec imul xor insl mov aaa push jo stos (bad) in and into jmp and mov repnz sub sbbl mov xor mov xor leave out and jbe mov jmp jnp mov out or inc bound mov dec gs lahf mov dec push movsb rcr pop add push ja mov jmp and mov movntsd (bad) lahf mov dec push mov push mov loopne inc sbbl movsb rcr push xor mov push insl mov xor ret loopne sbb (bad) sbb push jno stos lret add add pop jp mov in or (bad) sbb push jno stos (bad) in sbb lods leave in pop cmp xchg scas lret pop cmp jp mov in or inc pusha jge mov out or inc popa jge mov out or inc bound mov lock fwait mov inc arpl adc dec test notb das dec push notl xor mov xor mov xor mov xor movl pop jbe scas int3 jmp push xor insl mov ss jo test cmp nop lods leave out pop cmp jne scas lret and mov in or inc pop jnp mov out or inc pusha jl mov out or inc popa jge mov out or inc bound mov lock add andl add mov xor insl mov xor (bad) aaa push jo test loop sbb push jo andl push insb mov aaa push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp nop in xor lahf iret std xor aad inc jne xlat or insb stos jecxz popa jle mov lock inc bound mov inc sbbb dec sbbl mov sbb (bad) aaa push jo test aaa push jo test aaa push jo test cmp mov cmp jne scas lret out and int3 jmp ja mov jmp sub outsb mov cmp fild add push xchg roll aas jp out or inc bound andl dec push notl xor mov xor xchg xor xchg ss outsl mov mov pop inc cmpl into jmp and pop jp fisubl pop xchg call jge mov lock inc bound mov dec imul add ds ja mov ljmp mov in add sub sbbl xchg ss outsl mov cmp stos (bad) jecxz sbb lods leave adc out push dec xorb jl repz imul mov out or inc bound mov dec sbbl test repz push add xor mov fnop adc movsl rcr pop xor insl mov ss outsl mov ss outsl mov aaa push jo stos (bad) in and pop ja mov jmp js mov ljmp mov in or inc pop jnp mov in or inc (bad) sar sbb push jo test ds js mov ljmp mov in or mov in or inc pop jnp mov out or add mov in and pushf mov dec sbbl lahf mov dec push notb xor mov xor xchg ss outsl mov aaa push jno stos (bad) jecxz sbb push jb stos (bad) in push cmp nop lods leave in push cmp add leave out push ds ja mov jmp jp mov in or inc pop jl mov out or inc pusha jge adc scas int3 jmp jns mov in or mov dec push notl dec imul aaa push jo stos (bad) in sbb lods lret and int push es pusha jge mov icebp push sub sbbl mov xor xchg push insl mov pop cmp xchg scas into jmp and pushf jbe mov dec sbbb dec sbbl popf mov dec sbbl movsb rcr push xor mov xor insl mov xor insl mov ss outsl mov add add loop sbb push jo test cmp xchg lods lret pop cmp jbe scas lret call jbe scas int3 jmp ja mov jmp js mov ljmp mov out or inc pusha jl mov out or inc popa jge mov lock inc bound push sub sbbb inc sbbb dec imul test lret add arpl mov mov lret (bad) xor int add pop pop imull pop xchg (bad) pop mov (bad) repnz mov adc mov push insl mov xor insl mov xor (bad) cmp xchg scas xchg mov icebp or or lahf rolb xor lock dec push mov xor xchg movsb rcr pop xor insb mov cmp mov cmp (bad) lods enter cmp int dec xchg xchg push insb mov xor leave in pop cmp xchg lods lret pop cmp je scas lret out and lret out and pop jbe scas int3 call ja mov jmp jnp mov in or mov adc dec push notl xor mov xor test or inc arpl cld sbb (bad) loopne sbb cmp nop lods leave in push cmp nop lods leave in push cmp xchg lods lret and jne scas lret out and pop js mov ljmp mov out or inc pusha jge mov out or inc pusha jge mov out or inc popa jle mov lock inc popa jle mov repz gs sahf mov dec sbbl adc dec push notl dec imul xchg ss outsl mov ss outsl mov aaa push jo test loope sbb push jo test cmp lea mov (bad) imull pop mov push inc js icebp push sub sbbb bound fdivrp sbb push outsl mov aaa push jo test cmp add in or inc fs out push (bad) pop test adc movsb (bad) inc ja jmp push xchg (bad) (bad) cmp loop pop xchg vmovaps lret xlat clc adc sub (bad) cli dec xchg adc aaa push jo test cmp (bad) stos enter cmp nop lods lret and jnp mov in or inc pop jl mov out or inc popa jle mov insl xchg mov out or inc popa jle mov icebp push sub sbbb dec andl sbb push jno stos (bad) jecxz sbb push jb stos (bad) in sbb push jb stos enter cmp (bad) stos enter cmp nop lods leave in push cmp int push and pop jns mov jmp and pop jns mov jmp and arpl int3 add xor (bad) ljmp pop nop (bad) repz add push aas outsb mov mov mov dec push movsb rcr pop xor outsb mov aaa push jno stos (bad) in sbb mov in or mov out or inc popa jle mov lock pushf mov add push sub sbbl mov xor mov push insb mov xor (bad) mov pop js mov jmp and pop jp mov in or inc sbbl lahf mov dec push notb xor xchg xor xchg xor mov cmp stos (bad) jecxz sbb push jb stos (bad) in sbb lods leave in push cmp nop lods leave out pop cmp jne scas lret out and iret jmp and pop jnp mov add push sub sbbb dec add mov xor xchg xor xchg push outsl mov aaa push jo test cmp (bad) stos enter cmp add (bad) lods leave in cmp es pop jl mov out or inc sbbb dec sbbl lahf mov dec andl adc dec push notb das dec test stc adc movsb rcr adc mov xor xchg int3 (bad) xor aad inc jae fstpl ja mov out fsts test rolb xor cmp iret add insb mov mov aaa push jo test in dec outsb mov cmp jne scas lret out and int3 jmp pop jnp mov out or inc pusha add adc gs sahf mov dec test stc push xor mov push insb mov xor outsb mov add std sbb push outsl mov fadds and int3 jmp jge mov out or inc pusha jge mov out or inc pop loopne push cmpsl loope dec jge loope aas je iret add gs (bad) push jg in dec xchg divb (bad) jecxz sbb push jno stos enter cmp xchg lods lret pop cmp xchg lods lret sbb adc mov push insl mov xor insl mov nop rolb cmp or add lods leave out pop cmp jne scas int3 jmp (bad) adc add gs leave cli sub xchg lret imull pop add jg loop inc ja call mov (bad) stc sub (bad) sti sub mov mov in daa pop lea mov add add ljmp dec mov add mov es cwtl int3 or leave inc xorb lock mov (bad) imull pop xchg leave xor jmp push mov inc nop int3 pushl fs leave std xor lret mov sbb and int3 jmp jns mov in or mov sti das pop pop imull bound data16 mov cs test push test fs call stc sub inc jge out sub jg adc (bad) sahf mov dec andl adc dec push (bad) sbb outsb mov push cmp nop lods leave out pop cmp jp mov in or inc pop jnp mov out or inc pusha jl mov out or add inc popa jge mov lock fwait mov inc arpl mov dec test notl xor mov mull inc arpl mov dec gs in imul sbbl movsb rcr pop xor mov xor (bad) ss outsl mov cmp test cmp mov cmp jbe scas lret call ja mov jmp js mov ljmp popa cwtl iret pop pop andl dec push test loop sbb push jno stos (bad) jecxz sbb push jb stos enter cmp xchg lods lret pop and jns mov jmp and add fwait mov lcall jb (bad) inc stos add in pop cmp add add scas lret out and int3 ljmp mov jmp and pop jle mov inc arpl movntps sbbl sahf mov dec push notb xor mov xor outsb mov xor vpaddd aaa cmp cwtl mov out or inc bound mov dec gs lahf mov dec test std sbb push jo adc or jp jecxz inc js ljmp pop js mov ljmp mov in or inc pop jnp mov repz retw sub mov dec imul mov cmp xchg scas lret call js add dec push clc adc movsb rcr sbb outsb add sbb cmp pop jp mov out or inc popa jle mov lock dec push clc adc movsb rcr pop xor insl mov aaa push jno stos (bad) in sbb scas lret and shr or inc pusha jge mov lock inc bound mov adc mov push sub sbbl sahf mov push insb mov xor outsb into add daa pop nop (bad) repz nop (bad) cli xor rolb imul push outsb mov cmp int pop and jp mov in or inc pop jl mov out or inc bound mov add xchg xor mov cmpsb cmc dec fwait (bad) in push cmp xchg scas lret and jbe scas int3 call ja mov jmp js mov jmp and pop jp mov lock pushf mov jmp push mov and mov dec push notl dec push mov mov icebp push sub pop ja mov ljmp mov das jae (bad) repz mov dec push notl dec push mov aaa push jno stos (bad) jecxz sbb lods enter cmp xchg scas lret and int3 call ja mov ljmp mov out or inc pusha jge mov out or inc popa jle mov lock pushf mov inc sbbl mov ss add lret and jbe scas lret add add add xchg mov jmp jns mov jmp and pop jp mov in or mov inc movsb call loopne dec jnp fisubr pop jl mov out or inc popa jge mov lock inc bound mov icebp or popf mov dec push mov xor mov xor outsb mov xor (bad) aaa push jo stos (bad) jecxz sbb scas lret call ja mov jmp jns mov in or inc pusha inc rcrl push mov enter mov mov lret jns fisttpl addr16 lret cld das arpl pushf int3 add imul push test lcall (bad) imull pop mov mov add (bad) std cmp jmp imul clc sub vmovaps mov (bad) inc jns out push mov stc sub mov mov (bad) stc xor fistl daa pop cwtl into or jbe icebp sub fmull dec add dec jg loope push pop std aas jbe fimull lahf iret std cs add jne push inc jno int sub mov or in sbb movsl roll xor in sbb int3 stc es xorl lret push test xchg shr dec jne sar sub mov adc insb lcall cmovbe out sub rolb cmp push mov mov rorl inc cmpb pop pop add enter test dec mov sbb push and jns add es pop jl mov out or inc popa jle mov dec sbbl lahf rcr pop xor outsb mov aaa push jno jnp popf mov dec andl adc dec push mov xor mov cmp nop lods lret pop cmp jne scas lret call js cltd mov lock inc arpl mov dec sbbl movsb shl sbb push jno stos (bad) in sbb lods lret and jbe scas int3 jmp jl mov out or inc popa jle mov icebp or mov xor xchg xor mov ss jo test cmp xchg lods lret and mov out or dec gs sahf mov dec imul xchg in outsb mov aaa push jno stos (bad) in sbb lods lret and shr or inc bound mov dec sbbl mov cmp (bad) lods enter cmp jbe scas int3 jmp jl mov out or inc bound mov dec test loopne sbb push jo test cmp (bad) lods leave out pop cmp jbe insb xchg mov jmp and pop jp mov in or inc pop jnp mov out or inc pusha jge mov out or inc arpl cvttps2pi (bad) sahf mov dec push movsb rcr pop xor insl mov push inc js fisttpl cmp fwait sbb lods fimul jo call jns mov jmp and add fwait mov dec imul add xor xchg xor xchg xor mov dec insb mov xor jo test cmp stos (bad) in sbb push jb stos (bad) in add ds ja mov jmp js jmp push jecxz arpl dec sbbl mov das dec push clc add xor (bad) aaa push jo test cmp mov cmp int3 call add cmp xchg scas lret out and int3 call js add jne ficom jnp fistl inc (bad) fs das andl dec imul xchg xor mov xor mov and jbe mov call ja mov ljmp mov jmp and pop jp mov in or inc pop jnp mov in or inc pop jnp mov lock inc bound mov lock pushf mov inc addb mov dec imul xchg xor insl mov xor add pushf mov dec sbbl xchg xor xchg push jo stos (bad) loop sbb push jb stos (bad) jecxz sbb stos enter cmp nop lods leave out pop cmp xchg scas lret call ja mov in or inc pop jnp mov in or inc pusha jl mov out or inc popa jge mov lock fwait mov inc sbbb out and add sbbl mov xor xchg push insl mov ss outsl mov cmp (bad) lods lret call jns mov in or mov out or movsl fistpl push movsl out sub xchg (bad) push test mov outsb lods lret call jge mov lock lea jge or outsl mov or in and pop jns add inc arpl adc andw push outsl (bad) fstl dec scas out and jns mov in or inc pusha jl mov lock pushf mov dec data16 sub sbbl sahf mov dec data16 lahf mov dec andl adc dec test notb das dec imul test add push jb stos (bad) in sbb lods leave in push cmp nop lods leave in pop cmp xchg lods lret pop cmp xchg scas sti xor cmpsl ficom inc jnp stc inc jns fist pusha cwtl mov icebp cvttps2pi sbbl leave call pusha jl mov out or inc bound mov dec push je mov dec andl fsts loop sbb push jb lods add ljmp mov in or inc fs sahf mov dec push notl dec push movsb rcr push xor mov ss outsl mov cmp (bad) lods lret and jp mov in or inc pusha jge mov out or popf mov dec andw dec imul add add cltd mov hlt adc add push and mov out or inc popa jle mov inc sbbl mov das dec imul mov cmp (bad) stos enter cmp xchg scas lret call js add inc popa jle mov icebp push sub test xor xchg xor mov xor outsb mov ss jno add ds ja mov in or inc pusha jge mov lock inc bound mov dec sbbl mov xor xchg notl push jo test cmp nop lods leave out and jbe mov jmp jns mov in or mov out or add add inc bound mov dec push notl xor (bad) jecxz sbb lods lret and int push and jns mov in or inc pop xchg mov dec gs lahf mov dec imul inc pusha jge mov lock inc popa jle mov fdiv adc dec andl push xor mov xor mov xor mov xor insl mov xor add in push cmp nop mov jmp js mov ljmp mov jmp and pop jnp mov in or inc pop jnp mov in or inc pop jnp mov in or inc sbbb dec gs sahf mov dec data16 lahf mov dec sbbw dec push add dec push cli push xor mov xor add lods enter cmp jne scas lret jne fcoms push ja mov jmp ja mov jmp jnp mov in or inc pop jl mov out or inc pusha jge mov lock pushf mov dec sbbl test xor insl mov xor ret loopne sbb ret loopne sbb (bad) loopne sbb push outsl mov and jns mov ljmp ja mov ljmp mov jmp js mov ljmp mov jmp ja mov out or inc pusha jge mov out or inc pusha jge mov out or inc popa jge mov out or inc popa jle mov add add or inc popa jge mov out or inc sbbl sahf mov add mov xor xchg xor xchg xor xchg xor ret loopne sbb vpaddw ss outsl mov ss outsl mov aaa push jo test pop cmp jne mov ljmp mov ljmp stos in dec (bad) mov and xchg test or push push mov xchg enter popf into add arpl lods in dec test sbb lret imul out pop push xchg mov and fcoms push pop (bad) cmp out sub loope popa sahf fistpl pop xchg into add mov int3 add add scas in sub push cmpl jo adc push dec jge call add xor fdivr adc cmpsb ret sbb (bad) stos hlt adc dec jo test cmp stos (bad) jecxz sbb lods enter cmp nop lods leave out pop cmp xchg scas lret call ja mov shr or pushf mov dec gs sahf mov dec andl adc dec push notl movsl ret pop xor insl mov and pop js mov jmp and pop jp mov in or push sub gs lahf mov dec push addr16 js ret pop cmp (bad) lods enter cmp xchg scas lret out and pop ja mov ljmp add add inc pop jnp mov out or inc pusha jge mov repz call jp mov in or inc pusha jge sahf mov dec imul xor (bad) cmp mov aas pop js mov in or inc pusha jge mov lock inc arpl cvttps2pi (bad) lahf mov dec push mov xor je scas lret call js mov jmp scas out pusha jl mov out or inc bound mov ljmp (bad) scas lret call jg add push notl dec push movsb rcr push xor mov xor (bad) cmp stos enter aas pop jns mov jmp and pop jp mov lock inc bound mov push xchg clc pop xor outsb mov aaa push jo test ds js mov jmp and pop jp mov in or inc pusha jl mov out or sub mov dec push mov xor mov cmp stos (bad) in sbb lods leave out pop cmp jne scas int3 call js mov ljmp mov in or inc pop mov xor mov lods jecxz push cltd int push jb stos enter jg decl mov ss outsl mov aaa push jo test cmp mov in or inc pop jl mov out or inc pusha jge mov lock inc popa jle mov lock fwait mov mov inc ja fisttpll inc jb (bad) popf iret add bound rolb xchg (bad) repnz fwait rorl inc jp ljmp jg fcoml or jns stc sbb (bad) sbb push jb stos enter cmp xchg scas lret or mov out or inc bound cvttps2pi xchg xor mov xor outsb mov ss outsl mov aaa push jno stos (bad) jecxz sbb push jae lods leave out and pop js mov shr or inc popa jle mov lock pushf mov dec sbbl push (bad) aaa push jno mov ljmp add inc arpl cvttps2pi (bad) lahf mov dec push clc adc dec push movsb rcr push ss jo test cmp (bad) lods leave sub rorl aas ja lods loope dec cmpb mov in or inc pusha jge mov lock inc sub lea cmp (bad) stos enter cmp nop lods enter cmp jne scas lret out or mov in or inc pop jnp mov in or inc bound mov inc sbbb inc sbbl sahf mov dec sbbw dec test cli pop xor mov sbb push jb stos (bad) in push cmp nop lods leave in push cmp nop lods lret pop cmp jne scas lret out and jp mov in or add dec sbbl sahf mov dec andw dec addr16 or mov and pop jnp mov in or inc pusha add mov out or cmp out sbb pop and pop jns mov jmp and mov dec sbbl lahf mov dec test notl xor push insl mov sbb sub cmp dec gs lahf mov dec push notl dec push mov xor mov ss jo test cmp xchg mov jmp js mov add or inc arpl mov dec gs lahf mov dec imul mov cmp nop lods leave out and into add or inc arpl mov dec gs lahf mov dec push clc adc cmpsb (bad) jecxz sbb push jae lods leave out pop cmp jbe add add and jns mov out or inc popa jle mov dec data16 lahf mov dec scas divb push jb lods enter cmp xchg scas lret je out or popf mov dec gs lahf mov xor mov cmp (bad) lods enter cmp nop lods leave out pop cmp xchg lods lret pop cmp jne scas lret and int pop and js mov out or inc bound mov inc arpl stc push xor dec insl mov cmp mov cmp nop lods leave out pop inc pop jnp mov lock inc bound mov dec add movsb rcr push xor mov ss outsl mov cmp nop lods leave jmp jns mov in or add pop jl mov out or inc popa jge mov lock sahf out xor mov xor xlat hlt adc dec push (bad) sbb push jno stos (bad) jecxz sbb lods leave out and int pop and pop jp mov out or inc add mov xor mov cmp xchg scas int3 jmp ret stos fs lahf mov dec push clc adc dec push movsb rcr push xor jo mov jmp jns mov in or mov out or inc popa jle mov inc sbbb dec andw push insb mov ss outsl mov cmp xchg scas lret call js mov jmp and jg mov dec gs mov xor outsb mov add loope sbb push jb lods leave out pop cmp jne scas int3 call jp mov in or inc pusha jge mov icebp push sub test xor add push cmp xchg mov ljmp mov lock sahf mov dec push (bad) sbb push jae scas lret out and into jmp and pop jp mov in or inc pusha jl mov lock inc arpl adc ret lcall scas into jmp es pusha jge mov hlt adc dec push stc push xor mov xor outsb xlat push dec sbb gs roll fprem1 adc dec push clc adc movsb ret sbb insl mov aaa push jae sbb push and jle mov lock add add adc data16 mov xor mov xor mov push outsb mov cmp push mov cmp mov scas int3 jmp js mov in or inc pop jl mov lock inc arpl sub sbbb insb mov mov leave xor pushf mov dec sbbl mov aad inc mov hlt adc dec push loopne sbb push jo stos enter cmp xchg scas cli dec xchg aaa push jo stos (bad) in push cmp xchg scas lret and mov lock sub sbbl movsb rcr pop xor insl scas stc sbb push jae lods leave out pop cmp xchg lods into jmp and pop jp add xchg mov out or inc pusha jge mov out or inc popa jle mov inc arpl push sub sbbl movsl rcr pop xor insl mov ss jo xchg lods lret and jne scas lret call js mov ljmp mov out push sub sbbl fdivrp pop xor insl mov ss jo test cmp mov cmp (bad) lods enter cmp xchg mov in or inc pop jnp mov (bad) repz gs lahf mov dec test notb xor xchg xor xchg push outsb mov ss jno stos (bad) in sbb lods lret and jne scas int pop and pop jp mov out or inc popa jle mov dec add add mov xor mov xor test test mov stos (bad) in push cmp xchg scas lret call jle mov icebp push sub sbbl add xor xchg dec insb mov xor outsb mov cmp std inc pusha jge mov movntsd (bad) lahf mov inc pop jp mov in or mov out or inc pusha jge mov dec test notl dec add test loope sbb push jb lods leave in and pop ja mov ljmp mov in or inc bound mov dec sbbl mov xor mov xor mov cmp stos (bad) in and add pop jns mov in or mov in or inc popa jge mov lock pushf mov dec sbbw dec imul mov cmp (bad) lods enter cmp idivb xchg cmp nop lods leave in push cmp xchg lods lret es pusha jl mov out or inc arpl mov dec sbbl mov xor xchg xor mov cmp (bad) lods enter cmp xchg add inc pop jp mov in or inc pop jl mov out or inc bound adc dec imul cmp fmuls outsb mov mov xchg (bad) ljmp arpl mov mov (bad) mulb add (bad) repz mov mov mov mov and mov mov xor mov movsb fcoml inc jb in and (bad) mov out dec jle fimull cmp (bad) icebp and (bad) xor iret add add dec jle in push mov movl xor fcoml dec (bad) sar arpl pop inc jne loop dec jge fist inc jl out es cltd int dec xchg sub push pop xchg aam dec xchg (bad) push dec (bad) int3 push inc jl clc cmp add add rolb dec mov adc (bad) or mov sbb lret insb lahf rolb cmp loop push mov (bad) or mov and xchg fnstsw data16 xor mov xor (bad) cmp popl add stos in jge mov dec push notl dec push mov xor mov push insl mov xor (bad) in push cmp nop lods lret scas out pop mov cli cs xchg ficom xor (bad) add jne scas lret call ja mov out or inc bound mov jmp and mov out or inc bound mov dec test notl xor xchg cmp (bad) lods leave out pop cmp jne scas lret call ja mov jmp pusha jge mov lock pushf mov dec test cli push xor mov xor (bad) sbb push jno stos (bad) in push cmp xchg scas lret and jbe scas int3 jmp add aas pop jl mov lock inc bound mov dec sbbl mov das dec push notl xor xchg ss jo test loop sbb push jb lods enter cmp jbe scas int3 jmp jns mov in or sub jg mov dec imul xor (bad) aaa push jo test jno stos enter cmp xchg scas lret and int push and jge mov lock inc bound mov inc sbbb dec sbbw ljmp mov in or inc pop jnp mov dec data16 lahf mov dec andl adc dec push stc push xor mov xor mov add add aaa push jno stos (bad) jecxz sbb push jb stos enter cmp nop lods lret pop cmp jne scas lret out and int3 call ja mov in or inc pop jnp mov out or inc arpl adc mov dec push movsb ret sbb lods enter cmp xchg mov ljmp mov in or mov out or inc pusha jge mov lock popf mov sub sub notl movsl ret sbb vpaddd cmp stos (bad) in push cmp xchg scas add in or mov lock mov xor xchg push insl mov ss jo stos (bad) jecxz push cmp xchg scas lret out and add pop js mov jmp daa inc popa jle mov aam push sub sbbl mov xor xchg dec imul xor nop lods lret and jbe scas int3 call js mov jmp and and mov dec imul pushf faddl adc mov push arpl push xor mov ss outsl mov cmp mov cmp xchg lods lret and shr or inc pop jl mov out or mov decl mov cmp nop lods leave out mov xor fild push push xorl (bad) (bad) xor into push aas jne fisttpll cmp sub mov leave idivl ret loopne sbb push jo stos (bad) in sbb add cmp nop lods lret and jl mov out or inc arpl mov inc sbbl lahf mov dec test notb xor mov xor outsb mov aaa push jo test cmp (bad) lods enter cmp nop lods leave out and jne scas lret call jp pushf mov dec sbbl lahf mov dec test (bad) dec xchg out adc dec push movsb rcr pop xor outsb mov cmp jne scas lret call ja mov ljmp mov in or mov out or inc pusha jge sahf mov dec push movsb rcr pop xor insl mov xor (bad) aaa push jo stos (bad) jecxz sbb push jb lods add add in push cmp xchg scas lret call jp mov in or inc pusha jl mov lock popf mov dec gs lahf mov dec push notl dec push cmpsb ret loopne sbb push outsl mov cmp (bad) lods enter cmp xchg scas int3 jmp js mov jmp and pop jnp mov in or inc arpl notb das dec push notl dec push movsb rcr pop xor mov ss jno stos (bad) in sbb lods lret and pop jns mov in or inc pop jl mov out or inc popa jle mov repnz sub mov xor insl mov aaa add xchg mov jmp and mov out or inc bound mov lods fnop adc movsb rcr pop xor add push insl mov ss jo test cmp jne scas lret call ja mov jmp and mov in or inc pusha jge mov out or inc bound mov dec test notl xor xchg xor mov xor (bad) aaa push jno stos (bad) in sbb lods leave in and pop js mov ljmp fwait mov inc sbbl mov xor xchg push outsb mov cmp xchg lods lret and jbe scas int3 jmp js mov jmp and pop jp mov in or inc pop jl mov out or inc add mov xor mov ss jo test cmp nop lods leave out pop add cmp jne scas lret call js mov in or inc pusha jge mov lock in daa jl (bad) aaa outsb cmpsl cmp lods lret and sub hlt push jnp mov out or inc popa jge mov icebp adc dec imul mov xor outsb mov ss outsl mov cmp mov cmp (bad) scas int3 call js mov ljmp lcall arpl adc mov dec imul lea cmp (bad) lods enter cmp xchg scas lret out and int cmp fisttpl aas js hlt adc dec imul add pop cmp jbe scas int3 jmp outsb add cmpl mov in or add add inc pop jnp mov in or inc pusha jge mov add lret jmp jns mov jmp and pop jp mov in or inc pop jl mov out or inc bound mov inc sbbb dec push mov xor mov xor (bad) aaa push jo stos (bad) jecxz sbb dec imul mov pop jbe mov jmp popa jg mov dec gs lahf mov dec imul mov cmp ja mov jmp and pop jl mov out or inc bound mov dec andw dec push movsb rcr pop xor insl mov cmp xchg scas add in or inc pusha jge mov lock popf loopne pop cmp add jne scas lret call ja mov jmp and pop jp mov dec gs mov das dec imul mov cmp stos enter cmp xchg scas lret call jl mov out or inc bound adc mov dec imul add xchg mov jmp and mov out and mov pop inc jnp ficom inc leave sbb add cwtl lret jb jecxz inc test inc jl call in push push test loop push mov add dec mov stc xor in pop cmp jne scas lret call jbe scas lret call jp mov out or inc pusha jl mov add cvttps2pi (bad) lahf mov dec push mov mov inc jo stos enter cmp (bad) lods enter aas pop jns mov jmp and mov in or inc pop jl mov out or inc pusha jge mov lock pushf mov dec test xor mov xor xchg adc scas call mov dec andw dec push stc sbb push outsl xchg fistl dec test push cmp cmpsl (bad) ss outsl mov push cmp xchg lods leave out pop cmp jne in ds movsl rcr push xor test cmp std imul rcr pop xor insl mov cmp mov cmp xchg lods lret and pop jp mov in or mov aam or pushf mov repnz sub sbbb dec sbbl mov das dec push notb xor mov xor test xor lcallw scas loopne inc ja fist inc jle out push mov clc sub loopne push mov pop inc jbe stc xor movsl out pop xchg ror in jae call or jnp divl addr16 push mov cmc and js,pt loope dec addb add fidiv xchg clc sub push pop add mov sub movsb fimull inc jnp divb outsb movsb fistl dec mov add jl out push xchg into pop cmp push xchg rorl inc add xor and push mov push inc jns repnz push lcall adc into or mov xor in sub add add add adc ret add jl repnz loop dec jle clc xor cmpsb in pusha movsl loopne push xchg add adc (bad) sti xor sti cmp jecxz push mov add sub into or clc das insb fdivrs mov or mov and loope push xchg lret add sub pop nop int3 or cmp mov and fsts dec mov add jbe hlt sub push (bad) leave cmovl mov das insl cmpsb ficomp pop cwtl rorb dec mov add inc add xor out pop xchg fistl dec mov pop inc jp out das push fmuls inc jge pop aas js cld cmp out bound enter mov out mov sub and into push inc test cli xor ljmp mov cmovns cmpl jg add and (bad) mov adc insb lahf into cli sub sar pusha (bad) mov mov adc test ret add outsl mov cmpsl in dec jp bound (bad) mov mov fwait lret sti sub mov stos fimull or imul dec jns in inc ja (bad) cmp into adc add lcallw (bad) mov stos fmull cmp lret sti sub mov (bad) hlt and add xchg (bad) icebp sub fsts pop xchg iret push inc js add sub rolb cmp (bad) cmp aam cmp (bad) or sbb mov iret or push aam inc ja out daa pop mov add jns repz mov and sbb idivl jno in pusha mov (bad) (bad) jl,pt divb imul mov sub pop cwtl add sbb ficom cmp data16 (bad) adc cmp jecxz push cltd int3 sbb into pushl jl hlt xor fwait aam push (bad) divl push xchg fisubr movsb ficom dec test and rorb dec cmpl pushl cmpl or test and xlat cmovp mov nop enter cmpsl fistp pop xchg iret or rcrb push lcall push mov (bad) sub mov xlat sbb in and pop test ss repz jmp (bad) lret mov sti push xlat or cmpb ljmp pop cltd roll cmova mov and add cmpl aam dec mov sti xor mov xor jmp pop xchg rorb aas jbe in add (bad) push mov cli xor sub fstpl push mov push inc jnp repz fistp pop fwait aad dec mov add mov sub out push (bad) int3 or mov xor loop pusha popf fmuls inc fwait aam bound lods loop dec xchg in push xchg aam dec cmpl imul add mov push add mov loope pop xchg rclb mov inc test in push xchg into das imul add jge hlt sub test sbb fsts xchg aad dec mov adc iret adc iret rcpps ret js repnz mov pop fwait roll adc mov push lahf fistp pop lcall push nop aad dec mov push jno jecxz dec xchg add lods fist inc add add cmp mov or iret or mov or pop lcall pop cltd fcompl pop pop pop jne jmp push pop or jge and mov ficoml dec test jecxz push mov or scas in sub xlat adc xchg enter cmpsb in push mov sub pop xchg leave (bad) xor cmovp add call and in and (bad) std xor add inc jg sti xor mov jne scas lret call js mov in or inc pop jnp mov out or inc andw dec imul add mov xor mov sbb push jae lods leave out pop cmp jbe scas int3 jmp js mov jmp sub jg mov dec andw add mov ss jo test cmp (bad) lods enter cmp xchg mov ljmp mov out or inc popa jle mov dec gs sahf mov dec push clc adc dec push mov xor mov cmp (bad) lods enter cmp xchg scas lret out and pop ja mov ljmp fwait mov test or mov cmp mov xor xchg push insl mov aaa push jo test cmp nop lods leave out pop cmp jbe scas iret in or inc pop jl add mov out or inc jbe or inc sbbl mov push insl mov ss jo stos add mov clc adc movsb rcr pop xor mov add push jb stos (bad) in sbb lods leave in pop cmp xchg scas int3 jmp jnp mov out or inc bound mov inc arpl movntps sbbl lahf mov dec je repz jg (bad) adc xorl jg mov dec data16 lahf mov dec imul jno stos (bad) in push cmp int mov pop jne scas lret call ja mov ljmp mov in or inc pusha jge mov out or inc bound add adc dec push notl dec imul xor mov stos enter cmp nop lods lret and rcll push insl mov xor jno jecxz push test aam push ds popf into (bad) sub xchg enter mov mov jmp and aam dec test add jp repz ljmp mov cmp cli cmp in arpl ret incl mov and mov and aad aas jae fbld bound lock rcll dec cmpl cmove test fstl dec xchg add jno ficoml dec mov pushl ja divl insl mov sub fistp push xchg rclb push mov cmovl mov xor loop arpl add add rclb dec xchg or divl insl test (bad) push cmp mov mov in outsl lods out sub xor stc cmp pop mov lret jle cli cmp jecxz pop pushf (bad) push inc mov add inc add jmp xchg adc cli xor mov ficoml push fwait (bad) push dec mov push jge,pt (bad) cmp sub sahf fistp dec mov js jmp dec mov add mov or call pop dec xchg push dec mov push xchg leave or mov cli xor mov sub and push xchg xlat adc dec test movb jnp in and pop dec (bad) iret or cmp lock fisub pusha fwait aad inc (bad) mov ljmp mov or sti cmp add jmp outsb stos in pop popf fcoml mov or jge cmc xor imul jmp pop cwtl (bad) or scas in push xchg rcll xchg into push dec mov incl mov jmp pop mov (bad) adc lret dec mov adc enter sar jge icebp sub in and push mov pop inc jle jmp push mov clc das gs sbb xchg fcoms dec mov add xor in pop xchg aad push (bad) leave push push mov add cmpb and fsts xchg int3 add cmpl in pop pushf fcoms xchg xbegin stc cmp divb ja incb mov add jle std cmp jnp incl add xchg pop dec mov or lret adc add fistpl pop popf frstor bound xor mov inc jg incl movb xchg pop dec (bad) rcll inc ja cmc add insl movsb fcompl pop cwtl shll je pop arpl mov cmpsb (bad) cmovns lret add ja sbb mov mov sub jb in mov or in bound lds inc jg out push (bad) divl cmpsl call or rorl inc js fist dec (bad) into or jo xlat or adc mov sbb mov adc jbe fmuls dec mov sbb jge mov lock pushf mov dec gs sahf mov dec push clc adc add cmp jbe scas int3 jmp js mov in or mov out or inc bound mov inc sbbl movsb rcr pop xor insl mov aaa push jo test cmp (bad) lods enter cmp xchg add inc pop jnp mov icebp push sub sbbl mov xor xchg push outsb mov pop cmp sbb (bad) pop cmp pop jp mov in or inc pusha jge mov lock inc arpl adc mov dec imul mov cmp nop lods lret and int pop and pop jp mov in or inc pusha jge mov icebp push sub sbbb dec push mov xor insl mov aaa push jo stos (bad) in sbb xchg mov jmp and pop jnp mov out or inc popa jle mov cmc adc dec push clc adc movsl ret sbb (bad) aaa push jno stos enter cmp xchg scas lret out and pop js mov out or inc popa jle mov icebp push inc bound mov dec sbbl mov xor xchg push jno stos enter and pop js mov jmp and mov out or inc bound mov dec andw dec imul mov cmp (bad) lods enter cmp jne scas lret call jp mov in or inc pusha jge mov lock mov xor xchg in or inc popa jge mov lock pushf mov dec add mov add stc adc movsl ret sbb enter cmp xchg scas lret out and int push and pop jns mov jmp and mov out or inc popa jle mov icebp adc mov dec imul mov xor vpaddd aaa push jno stos (bad) in sbb mov ljmp mov add push sub (bad) sahf mov dec test notb xor xchg push insb mov xor leave in and int3 jmp jns mov jmp and mov out or inc popa jge mov lock popf mov dec push mov xor mov xor (bad) aaa push jno stos enter add add and pop jp mov in or inc pop jl mov dec gs lahf mov dec push stc push xor mov xor vpaddd aaa push jno stos (bad) jecxz sbb mov jmp js mov jmp and pop jnp mov out or inc popa jle mov icebp xor sub sbbb dec imul xor (bad) pop cmp int3 jmp jp mov in or inc popa jle mov dec sbbl movsb rcr pop xor outsb mov aaa push jno stos enter cmp jne scas lret call js mov jmp and pop jnp mov dec gs lahf mov dec push cli sbb (bad) sbb push jb add add add (bad) stos enter add pop jns mov in or mov dec andw dec push mov xor mov ss jo test cmp (bad) lods enter aas pop js mov jmp and mov out or inc popa jle mov dec gs lahf mov dec imul mov cmp mov cmp xchg scas add in or inc pop jl mov out or inc bound mov dec test notb xor mov ss jno stos enter cmp xchg scas lret call ja mov ljmp mov in or inc bound mov push jb lods leave out pop cmp jbe scas int3 call test sub aas jne add adc lahf rolb cmp fimul add lods loopne inc jg std xor test sbb mov ficoml outsb scas loop push xchg enter mov out sub lret (bad) mov aaa andl ret pop xor insb mov xor mov xor ret (bad) sbb ret loopne sbb push jb stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jb stos add or daa ja mulb pop jl mov out or inc bound sub ret sbb (bad) cmp mov cmp xchg scas lret call js mov jmp and pop jnp mov out push sub (bad) lahf mov dec imul mov aaa push add add test cmp (bad) lods leave out and mov icebp or popf mov dec andw dec push movsb rcr pop xor outsb mov aaa push jo stos (bad) in sbb mov ljmp mov in or inc pusha jge mov out or inc bound mov dec sbbw dec imul mov cmp mov cmp xchg scas lret call pusha jge mov lock popf mov dec andl pop xor mov ss jo stos (bad) jecxz sbb lods leave out pop cmp jbe scas int3 jmp jns mov in or mov jb scas lret call jbe scas int3 call ja xchg mov jmp js mov ljmp mov jmp sub dec data16 lahf mov dec andl adc dec push clc adc dec push mov xor xchg push lahf in pop jnp mov out or inc pusha jl mov out or inc pusha jge mov out or inc pusha jge mov out or inc bound mov inc arpl adc dec push notb das dec push notl xor mov xor push insl mov xor ret (bad) sbb enter cmp (bad) lods enter cmp nop lods leave out push cmp nop aam dec mov adc push insb mov xor (bad) in push cmp xchg lods lret and jne fcoml cwtl aad popa jle mov add icebp push sub sbbb dec andl adc dec push int3 adc test and int3 jmp js mov ljmp mov in or inc pop jl mov out or inc pusha jge mov dec sbbw dec push notl xor xchg xor xchg dec insl mov ss jb lods leave out pop cmp xchg scas lret call ja mov jmp js mov jmp and inc popa jle mov icebp or popf mov dec imul mov xor insl mov ss outsl mov aaa push jo stos (bad) jecxz sbb scas lret call ja mov jmp js mov jmp and add jp mov in or inc pop jl mov out or inc popa jle mov lock lahf mov add mov xor outsb mov ss outsl mov cmp mov cmp (bad) lods lret call ja mov jmp js mov jmp and pop jp mov in or mov in or inc pop jl mov out or sahf mov dec andl adc dec push stc adc movsb rcr pop xor mov sbb push jb lods enter cmp int pop and jns mov in or inc pop jl mov out or inc bound mov dec gs lahf mov dec andl push xor mov xor outsb mov add sbb push jno stos lret and jbe scas int3 jmp js mov ljmp mov out or inc popa jge mov das dec push clc adc movsb rcr push xor mov aaa push jo stos (bad) out and int3 call js mov ljmp mov in or mov in or inc pop jl mov out or inc popa (bad) lahf mov dec andl adc movsb rcr pop xor mov xor (bad) loopne sbb add nop lods leave out and pop js mov ljmp mov jmp and mov in or inc pop jl mov out or inc bound mov icebp push sub sbbb dec imul xchg add push xor mov xor insl mov ss outsl mov cmp xchg mov jmp and mov out or inc add sahf mov dec jne (bad) pop sbbl sahf mov dec push (bad) sbb push jno stos cld cmp fisttpll aaa push sahf mov int3 clc sub mov push dec xchg loopne and fistl movb imul mov xor les dec stos in test inc pusha jl add dec push mov test into jmp and pop jp mov xor adc je iret add addr16 sarl insb mov mov stos in push ficom xorb and fwait rolb cmp clc xor push dec imul xor mov xor jp mov out or inc xchg xor xchg scas int3 jmp jns lcall arpl adc mov dec imul cmp mov cmp xchg scas int3 call jp mov in or inc pusha jge mov lock inc arpl adc rcr push xor mov ss jo stos (bad) jecxz sbb lods leave out and ja mov ljmp mov in or test xor mov ss jo stos (bad) in push cmp xchg scas lret jmp jp mov in or inc pusha jge mov dec andw dec imul add add push xor mov ss jo stos (bad) in push cmp ds sbb imul cmp mov cmp xchg lods lret mov cli xor lret lcall lods leave out pop cmp jbe scas int3 jmp jp mov dec sbbl mov das dec push (bad) in sbb lods leave out pop cmp jne scas lret out and pop jp mov in or mov lock inc bound mov inc fs sahf mov dec data16 sahf mov dec push cli pop add push jo stos (bad) jecxz sbb push jno stos enter cmp xchg fdivrp sbb (bad) ss outsl mov aaa push jb lods leave out and pop js mov jmp add add add add and pop jp mov in or mov in or inc pop jnp mov out or inc pusha jge mov out movntps (bad) lahf mov mov sbb xchg add xchg mov jmp and pushf mov dec sbbl lahf rcr sbb (bad) loopne sbb push jo test in or inc pop jl mov out or inc bound mov icebp or popf mov dec imul xor (bad) sbb push jae lods leave out pop cmp jne scas int3 jmp jns mov in or mov dec sbbl (bad) cld xor push jo test cmp xchg scas lret out and int push and pusha mov and fstl push mov add or inc pusha jge mov lock inc arpl mov inc push jne scas int3 ljmp mov repnz sub sbbl mov xor xchg xor add push cmp xchg scas lret out and pop jp mov out cmp into jmp and nop enter xchg into ss mov enter mov lcall push clc adc dec push mov xor mov xor (bad) loopne sbb push jo test cmp stos (bad) out and int3 call pop jnp mov out or inc pusha jge mov out or inc bound mov dec gs lahf mov dec xchg stc push xor mov movsb rcr pop xor mov xor (bad) in sbb lods leave out pop cmp jne mov ljmp mov dec sbbl lahf mov dec test notb das dec add cmpsl ret loopne sbb push jo stos leave out pop cmp jne scas lret jmp js mov ljmp mov in or mov in or inc pop jl mov lock lahf mov dec push stc push xor mov ss aam andl dec imul mov cmp (bad) lods enter cmp xchg add pusha jge mov out or inc bound fcomps push mov mov jmp and bound mov add inc bound mov inc arpl (bad) fsts fwait mov dec gs push lcall imul xor outsb mov ss outsl mov ss jo test aaa push jo test add jbe scas lret call jnp mov in or inc pop jnp mov out or inc popa jge mov out or inc popa jg mov inc sbbb dec sbbl mov xor mov xor xchg xor mov xor mov xor mov ss outsl mov aaa push jno add cmp jne scas lret and lret call jbe loopne pop pushf in and add pop ja mov jmp js mov ljmp mov in or mov in or inc pusha jl mov out or dec test adc mov xor adc scas call notb xor mov xor mov xor add scas fiadd mov xor insl mov ss jo stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret out and int3 in or mov out or inc pusha jge mov out or inc popa jle mov lock sahf mov dec andw dec xchg cli push xor mov xor insl mov xor lods leave in push cmp nop lods lret pop cmp jne mov jmp jnp add add es pop jl mov out or inc pusha jge mov lock inc bound mov inc arpl mov inc arpl adc dec push notl dec push mov xor xchg xor mov dec insb mov xor push je lods lret and jbe scas int3 call ja mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov hlt adc mov dec test notb das dec imul xchg xor mov xor jae repnz push loope push xchg rclb pop xchg in push jno add ds js mov jmp and pop jp mov out adc dec andl adc dec push stc push xor mov je scas lret and jbe scas int3 call ja xlat hlt adc dec mov or js sti test ss jo test push lock dec push notl dec push mov test sti xor pop lcall aad push sub sbbl mov xor mov add push cmpsb fstl dec cmpl sbb (bad) sbb push jno stos (bad) in push cmp nop lods leave out and pop jp mov in or inc pop jl mov out or inc pusha jge mov xlat repz mov dec (bad) (bad) (bad) cmp or pop push add (bad) (bad) icebp and mov add xchg mov jmp and pop jp mov in or mov in or inc pop jl mov out or inc popa jge mov dec andl adc dec push clc adc dec push mov xor xchg push insb mov jae in sub adc rorb mov aaa push jo stos (bad) jecxz sbb lods lret pop cmp jbe scas lret call ja mov sub fistpl push test (bad) lock inc bound mov inc arpl movntps sbbl lahf mov push insb mov xor outsb mov ss outsb mov sub cmpsb add daa inc pusha jl mov out or inc popa jge mov lock inc data16 das dec imul scas lret out and int3 call js mov ljmp adc test loope sbb push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp (bad) lods enter cmp nop lods leave in push ds js add pop mov int inc jg stc aaa jae loop sbb push jb lods enter cmp jbe scas int3 jmp and (bad) sbb push jno stos (bad) in sbb lods leave out pop cmp jne scas lret call ja mov ljmp mov out push sub gs sahf mov dec test notl dec push movsb rcr pop xor outsb mov and jbe mov idivl add push xchg lret push inc mov aaa push jno stos (bad) in sbb stos enter cmp (bad) lods enter cmp nop lods leave out pop cmp xchg lods int pop and pop jp mov in or mov out or inc pusha jl mov out or inc popa jle mov lock pushf mov inc andw dec test notb das dec push notl xor mov xor xchg xor xchg push outsb mov ss outsl mov ss jo test aaa push jo test cmp mov cmp xchg scas lret and int push and pop jns mov jmp and pop jns mov jmp and pop jp mov add or pushf mov add icebp or lahf mov dec sbbw dec test notb das dec push notl xor mov xor mov xor (bad) sbb lret scas loopne inc jo rorl aas jo aam aaa push xlat or jl adc mov dec imul cmp (bad) stos enter cmp nop lods leave in pop cmp jne scas lret call ja add lea aas xchg (bad) cld xor in adc dec imul xor mov xor insl mov (bad) mulb mov scas std pop cmp jne scas lret call jl mov out or inc bound mov dec sbbl mov das dec imul outsl mov add cmp xchg scas lret out and int push and pop js mov in or inc pusha jge mov out or inc arpl mov dec data16 mov xor mov push insl mov ss jo stos (bad) jecxz sbb push jae lods leave out and int3 jmp jl mov out or inc popa jge mov lock pushf mov dec data16 lahf mov dec test notl xor xchg ss jo test cmp mov cmp xchg scas lret call ja mov ljmp mov in or inc pusha sbbb dec gs lahf mov dec push clc adc dec imul xor lock popf mov add adc xor mov xlat adc icebp adc cmpsl ret (bad) sbb (bad) aaa push jno stos (bad) in sbb lods enter inc pop jp mov in or inc pop jl mov out or inc popa jge mov lock pushf mov inc arpl adc mov (bad) mov sbbl lahf mov dec test notb xor mov xor xchg ss outsl mov cmp stos (bad) jecxz sbb push jb mov xor movsl loop pop jbe scas int3 jmp js mov ljmp mov out or inc popa jge xlat pop dec mov adc iret in or inc pusha jl mov out or inc popa jle mov lock pushf fcomps push mov jmp pusha jl mov out or inc popa jge mov lock inc bound mov inc arpl cvttps2pi sbbl mov xor xchg dec imul xor mov push insb mov xor insl mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp xchg lods lret and jne scas lret out and lret call jbe mov call ja mov jmp ja mov ljmp mov in or inc pusha jl mov out or inc pusha jl mov lock inc bound mov lock fwait mov add add sub sbbb dec test movsl rcr pop xor mov xor mov xor insl mov xor ret (bad) sbb push jno stos (bad) in sbb push jno stos (bad) in sbb push jno stos (bad) in sbb stos (bad) jecxz sbb stos enter cmp (bad) stos lret and pop ja mov jmp ja mov jmp ja mov jmp jns mov jmp and jns mov in or mov lock inc popa jle mov lock sahf mov dec andw dec andl adc dec test insb movsl (bad) aaa push jo stos (bad) jecxz sbb push jb stos (bad) in sbb lods enter cmp jbe mov xor (bad) sbb insl mov cmp mov cmp pop ja mov jmp js mov ljmp mov jmp and jns mov in or pusha jl mov in or inc pop jl mov out or inc pusha jge mov out or inc pusha jge mov out or inc pusha jge mov out or inc pusha jge mov movntsd sbbl sahf mov dec sbbw dec data16 lahf mov dec sbbl adc dec xchg clc adc dec imul xor xchg dec imul xor mov xor mov ss outsb mov xor (bad) ss outsl mov ss outsl mov aaa push outsl mov add add std sbb push jno lods leave in push cmp xchg scas lret and pop js mov shr or inc pusha jge mov out or inc pusha jl mov out or inc pusha jge mov adc xchg xor mov push insl mov xor (bad) aaa push jo test aaa push jo stos lret and int push and jns mov jmp and pop jp mov in or mov out or inc pop jl mov out or inc arpl push sub sbbb dec sbbl lahf mov dec test notb das dec push cli pop xor mov xor insl mov xor vpaddd aaa push outsl mov aaa push jo stos (bad) jecxz sbb push jae scas lret call ja mov jmp js mov ljmp cltd mov out or inc pusha jge mov out or inc popa jle mov out or nop rorl pop sbbb dec sbbl lahf mov dec andl adc dec push notb xor cmpsb ret sub push pop sahf add xchg mov ljmp mov jmp and pop jp mov in or mov in or mov repz gs sahf mov (bad) clc sub popf pop insl mov sbb cmpl fistpll mov sbb icebp and mov push outsb mov test sbb push jo test cmp (bad) stos enter cmp xchg lods leave out pop cmp add pop je lods leave out and in or pop jp mov jmp and pop jp mov in or pushf mov inc arpl mov dec sbbb dec push clc adc dec push mov xor xchg xor xchg dec insb mov mov xchg mov jmp and pop jp mov in or inc lcall jg out and test into hlt adc dec push notb xor cmpsl (bad) loopne sbb push outsl mov aaa push jo test aaa push jo stos (bad) jecxz sbb push jno lods enter cmp nop lods enter ds ja mov call ja mov jmp js mov jmp (bad) sar xchg mov in or inc pusha add add shr or inc bound mov dec push mov xor mov xor insl mov xor add stos (bad) in sbb lods enter ds js mov jmp and pop jp mov in or mov out or inc popa jle mov icebp or pushf mov dec sbbl mov xor xchg xor mov ss outsl mov cmp mov cmp xchg scas lret call jbe scas lret call ja mov ljmp mov jmp and pop jp mov out or inc popa jge mov lock sbbw dec imul mov xor insl mov xor outsb mov xor (bad) jecxz sbb push jae lods leave out pop cmp jne scas lret call ja mov jmp js mov ljmp lcall test cmc adc dec push notl dec push mov xor mov push insl mov aaa push jo test cmp xchg scas lret and int3 call ja mov jmp jns mov in or mov in or inc pop jg mov inc arpl movntps sbbl sahf mov dec data16 lahf mov dec data16 xor jecxz pop mov sahf rolb xor int3 add loop ja fstl adc roll add add loopne pop scas in test int3 pushl dec (bad) mov fstpl mov push pop xchg into or mov and cs (bad) cli add in push (bad) (bad) cld arpl add mov mov leave add cmp roll aaa insb mov scas in pop xchg into add imul sub cltd int3 or push cmp ficom es xchg (bad) (bad) das bound test movb xchg in or dec sbbw dec push notl dec push mov xor mov xor (bad) loopne sbb push jo test cmp jbe scas lret call jns mov jmp and mov in or inc popa jle mov icebp add add sub sbbl mov xor mov xor (bad) sbb push jno stos (bad) jecxz sbb push jb stos enter cmp nop lods lret pop es pusha jl mov out or inc popa jle mov lock pushf mov dec data16 lahf mov dec test notb xor mov xor insl mov ss outsl mov aaa push jo stos (bad) in sbb lods leave out and into jmp and popa jle mov lock pushf mov dec andl dec push movsl shl sbb push outsl mov cmp (bad) lods leave out and mov lock sahf mov dec sbbw dec push testl add add dec push mov xor mov cmp mov cmp (bad) lods leave in and jbe scas int3 call ja mov ljmp mov in or inc bound add push clc adc movsb rcr push xor mov cmp jmp push push nop fdivr sbb pop jne scas lret out and into jmp and pop fwait loopne push outsl mov cmp (bad) stos enter cmp (bad) lods leave out and shr or inc pop jl mov in or inc pop jl mov out or inc popa jge mov lock inc bound mov inc arpl adc dec push notl dec imul xor insl mov xor movb jecxz sbb push jb lods enter cmp xchg mov ljmp mov jmp and mov in or inc pop jl mov icebp push sub sbbb dec gs sahf mov dec imul je lods leave out pop cmp cmp into ljmp mov in or inc popa jge mov out adc mov dec push dec cltd mov dec push mov xor mov xor (bad) add mov jmp and mov out or inc pusha jge mov out or inc bound mov dec sbbl sahf mov dec push xlat or cmp lods lret out and pop ja mov ljmp mov in or inc pop jl (bad) aaa jno lock and int pop and pop jp mov out or inc popa jle add loopne sbb push jno stos (bad) in push cmp xchg lods lret and jp mov out or inc popa jle lahf mov xor mov aaa push jno stos (bad) in push cmp xchg scas add in or inc arpl adc dec push mov xor mov cmp mov cmp jne scas lret call jp mov in or inc popa jle mov dec push stc adc movsl ret sbb push jo test cmp nop lods lret and int pop and bound mov dec andw dec imul ss jo test (bad) jecxz sbb lods lret and into out or inc bound mov dec andw dec imul xor jno stos leave out pop cmp jbe mov jmp jp mov dec sbbw add mov pop cmp jne scas int3 jmp jge mov icebp or test ss jne scas lret call js mov out or inc arpl mov dec test notl dec imul xor (bad) jecxz and pop js mov jmp es popa jle mov icebp push sub (bad) mov xor xchg push outsl mov cmp (bad) scas int3 jmp jp mov out or inc bound mov dec gs lahf mov add fdecstp adc dec imul ss outsl mov cmp xchg mov in or inc pusha jl mov lock popf mov dec push cli pop xor insl mov cmp mov aas pop jns mov in or inc pusha jge mov repnz push insl add pop cmp xchg scas int or pop jnp mov out or add test xor (bad) jecxz sbb lods leave out and pop ja mov out or inc bound mov dec sbbl cmpsl (bad) aaa push jno stos (bad) in push cmp xchg scas int3 jmp jns mov in or mov out or inc bound mov dec imul mov aaa push jno mov add add add jmp and pop jnp mov in or inc arpl adc dec insb mov cmp jbe mov out or inc data16 lahf mov push insl mov aas pop jns mov in or inc bound mov dec insb mov aas pop js mov in or inc bound mov xor outsb mov cmp xchg mov jmp jle mov or das dec imul lea cmp xchg mov jmp es pusha jge mov dec test stc adc stos enter cmp iret in or inc pop jl mov out or inc arpl adc dec push stc push xor mov cmp xchg mov jmp and pusha jge mov lock popf mov add add cmc adc dec imul mov cmp nop lods leave out and jge mov icebp push sub sbbl dec insb mov aaa push jno stos enter cmp jbe mov ljmp mov icebp cvttps2pi andl dec push movsb ret sbb push add lret add or inc popa jle mov dec test stc push xor lea scas int3 call jns mov out or inc arpl mov dec push clc adc cmpsb ret loopne sbb push jno stos enter aas pop jns mov in or mov out or sahf mov dec test clc adc dec imul ss outsl mov aas pop js mov in or inc pusha jl mov out or inc arpl adc dec push clc adc movsl ret sbb push je lods lret and int pop and pop jnp mov out or inc popa jle mov icebp push sub sbbl mov ss jo stos enter cmp xchg scas lret out and pop jns mov in or sub push loopne sbb push jo test cmp nop lods int3 jmp popa jle mov icebp push sub sbbl mov ss outsl mov cmp xchg scas int3 call sti xor pop js mov jmp and mov out or inc popa jge mov inc sbbl sahf mov dec imul mov add xor mov xor vpaddd aaa push jno stos (bad) jecxz sbb stos enter cmp int add mov or cmpsl fmull dec jle stc arpl mov jo sub inc test lock sahf mov dec test notb xor xchg add push jno add aas pop jns mov in or inc pop jg mov dec add cmpsb ret imul add stos flds cmp fnop pop xchg (bad) or mov and dec jne mov in or inc pusha jl mov out xor out and int3 jmp js mov jmp and pop jp mov in or mov inc arpl push sub sbbb dec sbbb dec sbbl lahf mov dec push mov xor xchg xor xchg xor xchg xor mov dec insb mov push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno xchg scas lret out or mov in or mov lock inc bound add imul test xor xchg xor xchg xor insl mov xor ret loopne sbb ret loopne sbb push outsl mov ss outsl mov ss outsl mov cmp (bad) lods enter cmp nop lods leave in push cmp nop lods leave add mov es pushf rolb cmp enter push insl mov popf lock xchg mov in or mov out or inc bound mov dec sbbl mov das dec insl mov aaa push jo test cmp mov cmp nop lods lret and add mov add or popf mov dec push clc adc add cmp stos enter jmp imull pusha scas sbb sub and pop sbbl sub mov push outsl ficomp push lahf into cmp pusha nop ret push xorl ss cli pop xor insl mov cmp xchg lods lret and pop js mov ljmp mov jmp and mov in or inc pop jl mov out or inc sbbl sahf mov dec test notl xor mov xor xchg xor mov ss outsl mov cmp mov cmp (bad) stos enter cmp cmc sub (bad) hlt and or dec mov pushl cwtl rolb cmp xlat or jo xlat or add mov mov (bad) imulb xor ficoml dec mov int inc jnp ljmp dec jg loope inc je xlat or jo rorb bound outsl popf lret push jge xlat add out aas imul push jg fadds add pop mov mov rcr push xor mov xor (bad) loopne sbb push je scas lret and jne scas lret call jbe mov call ja mov ljmp mov jmp and mov lock pushf mov dec gs sahf mov dec andl adc dec push notl dec imul push jae mov jmp js mov ljmp mov (bad) lock pushf xor insl mov dec sbbw pop jnp mov in or pop ja scas lret sbb test loopne pop xor add cmp int pop and pop jp mov push movsl rcr pop add xor xchg sub arpl sub imul push jo test cmp (bad) stos enter cmp nop lods lret es pop jnp pop dec jge call lock add gs (bad) repz mov mov adc rolb xor imull pop nop mov mov adc mov and movl and lret inc (bad) mov sbb mov and lret pop cwtl roll sbb movl add jb loope dec xchg loop pop nop movb add mov daa pop xchg iret push inc add cmp divl data16 fcoms inc add xor fstl push (bad) into push dec (bad) mov ficomp push xchg leave push inc add cmc sub push (bad) iret or mov aas jbe add out sub call add jbe repnz in bound sar jo roll xor push cmp ficom dec xorb ficom dec cmpb std xor dec xorb jl call test call adc lods in pop xchg aad dec jl gs (bad) or movsl fistl dec test and ret stc xor or outsb test nop leave add outsl lods out pop or mov push dec add cmp ljmp cld cmp in sub sbb mov sbb and xchg lret insl cmpsl jecxz popa sahf ficoml jge out push mov clc daa push mov into add jo jecxz push test repnz lods fimul aas jb aad dec mov add pop mov repz mov aad push xchg jmp cmp mov cmp nop lods leave out pop cmp jne scas lret call js mov ljmp mov inc pop jns mov in or inc pop jnp mov out or inc pusha jge mov out or inc bound mov lock pushf mov dec andl adc dec push notl movsl ret pop xor insl mov ss outsl mov aaa push jno stos leave add pop and add fwait mov icebp push sub sbbb dec gs sahf mov xor mov aaa push jo test cmp nop lods lret pop cmp jne scas lret call ja mov jmp jbe mov dec imul add insl mov ds ja mov icebp das test dec push imul popf fisubrl dec insb mov xor insl mov cmp xchg lods lret out and lret idivb jno out or inc bound mov inc arpl cvttps2pi (bad) sahf mov dec imul xor mov xor insl mov aaa push jo test cmp mov cmp xchg scas lret call pop add add jae call lods leave in push cmp nop lods leave out add inc pop jp mov in or inc pop jl std xor repz js mov dec insb mov xor outsb mov aaa push jo jmp mov add add dec insb mov ss jae lods leave out pop cmp jne scas int3 jmp js mov jmp and mov out or inc popa jle mov inc sbbl movsb rcr push xor mov aaa push jo stos inc popa jge mov in or pop ja scas lret out push cmp mov dec andl movsl rcr pop xor outsb mov aaa push jo stos enter cmp xchg scas lret and int pop and jge mov lock sub movsl rcr sbb (bad) jecxz sbb push jae lods leave out and inc pop jnp mov out or inc bound mov dec push notl dec push movsb rcr pop xor insl mov aaa push jo stos (bad) jecxz add lods lret and shr or inc popa jle mov icebp or popf mov dec andl adc dec push mov xor outsb mov cmp nop scas lret and pop js mov in or inc pop jl mov out or inc bound mov dec gs lahf mov dec push sti sbb vpaddd aaa push jno stos enter cmp xchg scas lret call jns mov in or mov out or inc bound adc dec push loopne add scas lret and int pop and jns mov aam push sub sbbl movsb rcr pop xor insl mov aaa push jno stos enter cmp xchg scas lret add call ja mov ljmp mov lock sahf mov dec test divl enter inc pop jl mov out or inc bound mov dec sbbl movsl ret sbb push outsl mov cmp (bad) lods enter cmp xchg scas lret out and into ljmp mov lock popf mov dec sbbw in cmp mov jmp and pop jp mov out or inc popa jge mov lock dec push aas outsl test and andl mov cmp mov cmp xchg add inc pop jl mov dec andw dec push movsb rcr sbb vpaddd sbb push jno stos (bad) in push cmp xchg lods lret and shr or inc popa jge mov icebp or pushf mov dec gs lahf mov dec andl adc dec push cld sbb push outsb mov ss outsl mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) in sbb lods leave in push cmp xchg add aam sbb push jno stos (bad) in sbb lods leave in push cmp xchg lods lret and int3 jmp js mov out or inc popa jge mov lock pushf mov dec sbbl xchg dec imul xor mov cmp mov cmp nop lods enter cmp jne scas lret and int3 call ja mov in or inc pop jnp mov out or inc popa jle mov lock popf mov inc sbbl sahf mov dec xchg stc adc movsb rcr pop xor mov ss jo test cmp mov cmp (bad) lods enter cmp mov out or inc pusha jl mov out or inc popa jle mov lock fwait mov inc sbbl mov xor mov push insb mov xor ret loopne sbb push outsl mov pop cmp jne scas lret out and shr or mov in or inc pusha jl mov out or add add lcall bound mov inc sbbb dec push notl xor mov xor mov push insb mov xor (bad) loopne sbb push outsl mov cmp nop lods leave in pop cmp jne scas lret out and int push and jns mov jmp and pop jp mov in or inc bound mov lock test xor mov xor xchg xor mov xor (bad) jecxz sbb stos enter cmp nop lods leave out pop cmp xchg scas lret out and int push and add cltd mov add (bad) call jns mov in or mov in or inc pop jl cwtl mov out or inc pusha jl mov out or inc popa jle mov lock sahf mov dec sbbw dec andl adc dec push notl dec imul xchg push jo test pushf roll inc xchg adc popf mov dec gs lahf mov dec test notb das dec push sti sbb insl mov mov add adc dec push notl dec push mov xor mov push insb mov cmp nop lods leave in push cmp xchg lods lret and int3 jmp js mov ljmp mov in or sub jg mov dec andl adc dec imul add dec imul xor mov xor insl mov ss jb lods enter cmp xchg lods lret pop cmp jne scas lret jmp js mov jmp and pop jp mov in or mov icebp or popf mov dec sbbl mov das dec push notl dec push mov xor mov ss outsl mov cmp jbe scas lret call ja mov jmp js mov jmp and pop jns mov in or inc bound mov inc arpl push sub sbbl lahf mov dec test notb xor add cmp stos (bad) jecxz sbb lods leave out add pop cmp jne scas lret and int3 call js mov ljmp fnop adc movsb rcr push xor mov xor insl mov aaa push jo stos (bad) loop sbb push jno stos (bad) in and int3 call jbe mov jmp js mov ljmp mov jmp and pop jp mov in or inc pop jl mov inc arpl push sub sbbl xchg xor xchg dec insb mov xor mov cmp (bad) lods enter cmp nop lods leave out and jne scas lret out and int3 jmp ja mov in or add sbbb sbbl add add adc dec test notb das dec push js mov jmp and pop jns mov in or pushf mov inc arpl movntps sbbb dec sbbl dec test notb cs test cli push xor mov push insb mov xor insl mov xor ret jecxz mov mov out or dec sbbl sahf mov dec gs lahf mov xchg lret pop inc xchg mov dec sbbw dec andl push xor mov xor mov xor insl mov xor (bad) loopne sbb push outsl mov aaa push jae lods enter and pop js mov ljmp add add pop jns mov in or inc pop jnp mov out or inc pop jl mov out or inc nop leave stc and cmp stc sub andl dec imul xchg xor mov xor (bad) add lods leave in pop cmp xchg lods lret pop cmp jne scas lret call ja mov jmp js mov ljmp dec (bad) loope push cmp nop lods lret and jbe scas lret call ja mov shr or inc pusha jl mov out or inc popa or (bad) cmp stos (bad) in push cmp xchg scas lret and int push and pop js mov jmp and mov in or inc arpl cvttps2pi (bad) add add stc adc movsl rcr pop xor (bad) loopne sbb push jo test cmp (bad) lods enter ds ja mov ljmp mov in or mov out or inc popa jge mov lock popf mov dec lds and mov adc stos loopne inc jae xlat or imul (bad) cmc sub fisubr pop jp mov in or inc popa jge mov lock dec imul mov xor (bad) aaa push jo stos add call ja mov jmp and pop jp mov icebp push sub sbbl mov xor mov ss outsl mov cmp (bad) lods leave out pop cmp lret add cmp xchg leave sti sub nop sar arpl push cli push xor mov xor (bad) cmp xchg scas lret and int3 jmp js mov jmp and mov out or inc bound mov dec sbbw dec imul xor outsb mov cmp stos (bad) in push cmp xchg lods lret and int3 jmp jnp mov out or inc popa jle mov icebp push sub sbbb dec test notb xor add ss outsl mov cmp hlt xor mov dec push notl dec push movsb rcr sbb outsb mov aaa push jno stos (bad) in sbb mov stc inc jnp in sub add cmp add inc pop jns mov in or inc pusha jge mov or mov icebp push xor xchg xor mov ss jo stos (bad) jecxz jo xlat hlt adc mov dec push movsb rcr sbb enter cmp xchg scas lret call js mov jmp and mov out or inc popa jle mov dec sbbl movsb rcr pop xor (bad) cmp (bad) lods leave out pop cmp jne scas int3 call js cltd mov lock mov xor xchg xor mov ss jae lods leave out and jbe mov jmp jns mov in or inc bound mov add add (bad) lahf mov dec push loopne sbb push jo stos (bad) jecxz sbb scas lret and into out or inc bound mov dec gs lahf mov dec push clc adc movsl ret sbb (bad) sbb push jb mov jmp jns mov in or inc pusha jl mov lock pushf mov dec andw dec push mov ss jo test cmp nop lods leave out and int pop and pop jp mov in or inc pusha jge mov icebp or test xor (bad) aaa push jno stos enter fnsave fmull scas jmp adc (bad) stc xor push xchg lret pop inc cmpb cmp mov and dec test call adc add jae out popa fcoms dec mov or les push mov pop inc test (bad) cmp aad xor pop inc jo enter jle or xchg shr dec js sar sub adc popf leave mulb push xorl ret lock dec jp (bad) add popa (bad) mov cmpsl (bad) add out inc insl lcall xlat add bound jge fimull jae in pop xchg (bad) push dec lods shr or inc sbbb dec test notl dec push mov xor add and pop js mov jmp and pop jnp mov out or inc pusha jge mov out or inc arpl cvttps2pi (bad) lahf mov dec imul fdivrp pop xor insl mov ss outsl mov cmp (bad) lods add ljmp mov in or mov cvttsd2si (bad) lahf mov dec test notb xor mov xor mov push insl mov ss outsl (bad) lods lret and int pop and jns mov in or mov out or inc popa jle mov inc sbbb dec imul xor insl mov aaa push jo test cmp nop lods leave out pop cmp jne scas lret call ja mov in or sub sbbl mov xor xchg push outsb mov aaa push jno stos enter cmp xchg mov add add jmp and pop jp mov out or inc popa jle mov lock sahf mov dec add ret sbb outsb mov cmp jbe scas int3 call js mov jmp and pop jp mov in or inc pusha jl mov out or inc bound mov dec sbbw dec insb mov ss outsl lea cmp (bad) lods enter cmp xchg scas lret and int push and pop jl mov out or inc popa jle mov lock popf mov dec test notl xor xchg xor mov cmp (bad) lods add jmp jns mov jmp and mov out or inc popa jge mov lock sahf mov dec test add rcr pop xor mov ss outsl mov cmp (bad) lods enter cmp xchg scas lret or mov out or inc sbbb dec data16 lahf mov dec push clc adc dec push movsb rcr pop xor mov ss adc mov jmp and mov in or inc popa jge mov out or inc popa jle mov lock inc bound mov lock inc bound mov icebp push sub test das dec test sbb xor push and jns mov in or inc pop jnp mov out or inc popa jle mov and out imul int push and jnp mov lock popf mov fdiv adc dec push movsb rcr sbb add xchg scas lret call js mov jmp and mov out or inc popa jle mov dec data16 mov xor push outsb mov cmp xchg scas lret out and pop jns mov in or inc popa jle mov dec gs sahf mov rcr push xor mov cmp xchg scas lret and int pop and jp mov in or inc pusha jge mov lock inc bound mov dec sbbl movsb rcr pop xor insl mov aaa push jo stos (bad) jecxz sbb push jb lods enter cmp xchg scas lret out and pop jp mov in or inc pusha jge mov lock cs test notl dec push mov xor mov xor add add loop pop cmp jne scas int3 call js mov in or mov out or inc popa jle mov icebp push sub sbbb dec add movsb (bad) cmp (bad) lods enter cmp jbe scas int3 jmp jns mov in or inc pop jl mov lock sahf mov dec imul xor (bad) aaa push jno stos (bad) in push cmp xchg scas lret call ja mov ljmp mov in or popf mov andl adc movsl rcr pop xor insl mov ss outsl lea cmp nop lods int3 jmp jns mov jmp and mov add adc mov dec push clc adc cmpsl les add add std sbb push je scas int3 jmp js mov in or inc pusha jge mov lock pushf mov dec test notb xor mov add push je scas jecxz push sub (bad) lahf mov dec imul xchg push insl mov aaa push je scas lret and loopne pop xchg leave pop pop test xor mov xor (bad) sbb push jb stos iret sbb dec mov add cmp xchg scas lret out and int pop and pop jp mov sub stc push xor mov cmp xchg lods lret and int3 jmp js mov (bad) lock pushf mov dec gs sahf mov add adc dec push sti sbb outsb mov aaa push jno stos (bad) in push cmp xchg lods lret and int3 jmp jns mov in or mov xor xchg xor mov xor (bad) sbb push jb stos enter cmp xchg lods lret out and pop jp mov out or inc pusha jge mov out or inc bound mov dec gs sahf mov dec imul mov cmp mov cmp nop lods leave out and jbe scas int3 call jp mov in or inc pop jl mov out or inc sbbw dec push clc adc dec push movsb rcr pop xor add stos enter cmp xchg scas lret call add cmp into ljmp mov icebp or mov das dec push clc adc dec insb mov xor (bad) sbb push jb scas iret and jns mov in or inc pop jl mov out or inc popa jle mov dec andl adc dec imul lea cmp nop lods leave out pop cmp mov out or inc bound mov inc sbbl mov xor mov ss jo stos (bad) jecxz sbb lods lret and ja mov ljmp mov in or inc jnp or xchg cmp (bad) lods leave in pop cmp jne xchg mov in or inc pop jl mov out or inc add push jnp mov lock popf mov dec push movsb rcr pop xor (bad) sbb push jb stos enter cmp xchg mov jmp jp mov in or inc arpl adc mov dec push movsb rcr pop xor outsb mov cmp mov cmp jne scas lret call jnp mov out or inc popa jle mov icebp or test xor mov xor (bad) jecxz sbb mov ljmp mov in or inc pusha jge mov lock popf mov dec andw dec push mov xor lea cmp pop jns mov in or mov (bad) repz mov dec imul mov cmp nop lods lret and into jmp and pop jp mov in or inc popa jle mov icebp push sub sbbl cmpsb ret loopne sbb push jo test cmp nop lods lret and int pop and pop jp mov in or inc pusha jge mov lock mov xor xchg xor mov push cmp xchg scas lret call jns mov in or inc pusha jge mov repz mov dec imul mov ss outsl mov cmp nop lods leave out and jbe mov in or inc pusha jge mov add adc dec push notl dec add test add push je lods lret and pop ja mov jmp and popa jle mov dec sbbl mov xor mov ss outsl mov cmp (bad) lods leave jmp jnp mov out or inc popa jle mov icebp push sub sbbl mov xor mov xor leave out pop cmp jbe scas int3 jmp jns mov in or popf mov dec test notl dec push movsb rcr pop aaa push jno stos enter cmp xchg scas lret call js mov jmp es pop jl mov out or inc bound mov dec andw push insl mov cmp add and jns mov in add add sub sbbl mov xor mov aaa push jno stos (bad) in sbb scas lret and pop ja mov in or mov out or inc bound mov dec push clc adc movsl ret sbb push outsl mov cmp nop lods leave out and jbe mov ljmp mov icebp or popf mov dec andl adc dec push movsb rcr (bad) sbb push jb stos enter cmp jne scas int3 call jnp mov lock inc arpl mov dec gs lahf mov dec push clc adc cmpsl (bad) loopne sbb push jo stos (bad) jecxz and int3 jmp jns mov in or sub sbbl add sub movsl ret sbb (bad) sbb push jb lods int3 jmp jns mov in or mov out or inc bound mov dec test notl dec imul xor jno stos enter cmp xchg scas int3 jmp js mov in or inc pusha jge mov lock popf mov dec andw push outsl mov cmp (bad) lods enter cmp jne scas int3 call jp fwait mov dec gs sahf mov dec push cld sbb (bad) sbb push jb lods enter cmp jne scas int3 call js mov jmp and mov out or inc gs sahf mov dec push clc adc dec imul sbb push jae lods leave out pop add jnp mov out or inc popa jle mov icebp adc dec push clc adc dec imul xor outsb mov cmp mov cmp xchg scas int3 jmp jnp mov icebp push sub (bad) lahf mov dec imul ss outsl mov cmp xchg scas lret call js mov jmp and mov dec gs lahf mov dec push clc adc movsl ret sbb cmp nop lods leave out and jbe scas int3 jmp jl mov out or inc bound mov dec gs lahf mov dec push clc adc cmpsb ret loopne sbb push outsl mov pop jbe scas int3 jmp js mov in or add add inc add popf mov dec imul jno stos (bad) in push cmp xchg mov jmp and mov icebp push sub sbbl mov xor mov xor inc add push jp mov out or inc popa jge mov lock popf mov dec test sbb arpl adc mov dec insb mov xor (bad) sbb push jno stos enter cmp xchg lods lret and mov out or inc popa jle mov dec push incb sar jle mov dec gs lahf mov dec push notl dec push movsb rcr push xor mov (bad) mov out or inc bound add dec data16 pop xor outsb mov aas (bad) sar adc dec push test jecxz sbb push jb stos enter cmp xchg lods lret and into jmp and pop jp mov in or inc pusha jge mov out or dec gs lahf mov dec push notl dec push movsb rcr pop xor insl mov xor (bad) sbb push jno stos (bad) out and pop ja mov ljmp mov icebp push sub sbbl mov xor mov ss outsl (bad) lods leave in pop cmp xchg scas int3 jmp jns mov in or mov out or inc arpl mov dec sbbl mov xor mov add sti sbb outsb mov aaa push jb xchg scas int3 jmp js mov jmp or inc bound mov dec test notl xor xchg xor insl mov ss outsl mov cmp nop lods lret and shr or dec mov mov sbb xorb in or inc pop jl mov out or inc popa jge mov lock pushf mov dec imul xor mov xor (bad) aaa push jo test cmp add cmp js mov jmp jns mov ljmp mov in or mov in or inc pop jl mov out or inc bound mov dec andl adc dec push add add adc dec imul xchg sbb push jo test add pop jne mov ljmp mov jmp and mov in or mov in or inc pusha jge mov out or inc bound mov dec test notb xor xchg xor mov xor mov xor insl mov ss jo test cmp xchg scas lret and int3 call js mov ljmp mov jmp and pop jp mov in add lahf mov dec test notb das dec imul xchg xor xchg xor xchg push outsb mov add push outsl mov aaa push jo test cmp mov and pop movsl (bad) jecxz sbb push jb stos add jmp and pop jp mov jmp and pop jp mov jmp and pop jp mov jmp and pop jp mov in or inc pop jnp mov out or inc popa sbbb inc arpl cvttps2pi sbbl popf mov inc sbbb inc arpl adc dec sbbw dec test notb das dec push notl xor mov xor mov xor mov aaa push jo stos (bad) jecxz sbb push jno stos (bad) in sbb stos enter cmp nop lods leave in push cmp nop lods leave out push ds ja mov jmp or pop jnp mov in or inc pop jnp mov in or inc pop jnp mov in or inc pop jnp pushf mov inc arpl mov xor xchg xor mov xor mov xor insl mov xor insl mov jmp jle mov icebp or lahf mov dec push mov xor mov aaa push jno stos leave out pop cmp jbe fbld insb mov push outsb mov aaa push jo test cmp add (bad) call ja mov jmp js mov jmp sub test notl xor xchg xor xchg and mov lock inc bound mov dec imul add or dec andl adc dec push notb das dec test cmc adc dec andl adc add mov ss outsl mov push cmp (bad) lods enter cmp nop lods leave out push cmp nop lods leave out push cmp nop lods leave in push cmp nop lods int3 jmp ja mov call ja mov ljmp mov ljmp mov jmp ja mov jmp jp mov in or mov in or mov out or inc popa jle mov lock fwait mov icebp push sub jg mov dec data16 push xor mov dec imul xor insl mov xor ret (bad) sbb insl lea add lods leave out pop cmp xchg lods lret and jne scas lret and jne scas lret out and int3 call jbe xchg mov in or inc bound mov lock sub mov dec data16 lahf mov dec andl adc dec push notb das dec push cli push xor mov dec insb mov dec insb mov push insb mov ss outsb mov ss jno stos (bad) jecxz sbb lods leave out pop cmp jne lods lret pop cmp xchg scas lret out and lret call jbe scas lret ljmp mov shr or inc pusha jge mov out or inc pusha jle mov lock inc bound mov lock pushf mov add (bad) lahf mov dec test cmc adc dec insb mov xor insb mov xor insl mov xor mov pop cmp nop lods lret pop cmp pop jns mov ljmp mov ljmp mov in or inc pop jge mov out or inc popa jle mov dec data16 das dec push mov xor mov xor mov xor mov xor mov sub rcll cmp rolb xor rolb aaa imul cmc das push xchg iret push inc jns in dec cltd rorl add str ret xchg iret or mov and (bad) cmovs cwtl iret or es xchg into pop inc add mov or mov dec data16 jle,pn mov dec imul xor outsb mov ss outsl mov aaa push jo stos (bad) jecxz add inc pop jl mov out or inc popa jle sahf mov dec test sbb sbb xchg iret pop xchg std xor dec test sbb xchg stc mov rolb jmp push mov cmova or add dec push lahf jmp jae scas int3 call jg mov inc sbbb cld sub jg loopne dec jg loope inc ja and mov sbb and mov sbb push dec jl out and nop les pop cmp loopne inc aad cmp into add push jne fmull inc ja clc add js out push nop (bad) bound mov rolb xor fwait rolb (bad) cs nop vmovaps mov mov adc adc ficom inc jno scas in dec jl loope inc jb fstl add mov and fwait iret add lcallw movsl ficom dec cmpl mov fsts inc jne ficom inc jbe fstl inc jl out pop xchg rorl inc cmpl mov fistl sbb mov and add insl mov (bad) repz (bad) imulb pop nop (bad) imull pop mov (bad) cmc sub add jbe in inc jbe (bad) sub roll xor inc jnp loopne dec jl loope push push cmpl pushl inc jp jmp add add add mov and lods ficom mov add jne fisttpl aas je fmull push xchg rcll dec xchg cld imul ljmp mov adc or jo aad push icebp adc xor mov push outsb mov shrb push test inc andw sahf call fimull shr push sahf out js jmp icebp cmp xchg mov jmp js mov ljmp push clc adc stos enter cmp xchg scas lret out and xor insl mov ss jo stos movl pop js mov jmp and mov out or dec sbbl inc mov inc jb lods leave out and int3 jmp js add and mov out or sbbw dec test std popa lcall stc imul push rolb cmp fistl inc jl in push mov push outsl mov aaa push jo test cmp mov cmp (bad) lods enter cmp xchg scas lret and pop jp mov in or mov in or inc pusha jge mov out or inc bound lahf mov dec test notb das dec imul mov xor (bad) loopne sbb push jo test cmp add and pop ja mov jmp jnp mov in or inc pusha jl mov out or inc pusha jge mov out or inc bound mov add inc sbbb dec andw dec imul xor mov xor insl mov xor (bad) loopne sbb push jo test aaa push jo lods leave out pop cmp jne scas lret call ja mov ljmp mov ljmp popa pop repnz (bad) aaa push jae lods leave out push cmp nop lods leave out pop cmp jne scas lret and lret call pop jp mov in or mov in or inc bound mov inc arpl or pushf mov inc arpl movntps dec push notl das dec push cli pop xor mov dec insb mov dec insb mov add insb mov xor insl mov cmp mov cmp mov cmp (bad) stos enter cmp mov cmp (bad) lods enter cmp (bad) lods lret call jbe mov jmp js mov ljmp mov jmp and pop jp mov jmp and pop sar xchg mov in or dec sbbl sahf mov dec test notb xor xchg xor add aaa push jno stos lret and in or ljmp imul sbb push jo stos (bad) jecxz sbb push add mov xor fistl dec nop lret bound mov lock inc bound mov lock fwait mov add rcll push movsl int push and jns mov in or inc sbbl lahf mov lret out and int3 call ja mov jmp ja mov ljmp mov out or inc pusha jl mov out or inc bound mov inc bound mov icebp or pushf mov inc arpl mov dec andl adc dec andl adc dec test notb das dec push notl xor mov sbb insl mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos (bad) in sbb lods add ljmp mov in or inc pop jl mov out or cwtl iret add (bad) lods leave out pop add add jne scas lret and jne scas lret out and shr or mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov out or inc sbbb arpl movntps sbbb dec sbbl popf mov dec sbbb data16 lahf mov dec sbbw dec data16 lahf mov dec andl adc dec test cmc add cmpsl (bad) loopne sbb ret loopne sbb push outsl mov cmp test aaa push jo test aaa push jo test and pop js mov ljmp mov jmp and pop jp mov jmp and pop jns mov jmp and pop jns mov in or mov out or inc popa mov mov out or inc bound mov inc sbbb dec andw dec push cld sbb cmpsb clc push cmp xchg scas lret out and pop ja mov ljmp das push loope xchg push insb mov cmp (bad) stos enter cmp sar mov add cmp jne scas lret out and lret out and int3 jmp jbe mov aam or pushf mov dec sbbl sahf mov dec sbbw dec sbbw dec push mov sbb push jo test cmp stos (bad) jecxz add push jb stos enter cmp (bad) lods leave in push cmp (bad) lods enter cmp int3 call ja mov jmp and pop jp mov jmp and jns mov sub in sbb lods leave out and pop jns mov jmp and js mov jmp and pop jns mov jmp and pop jp mov in or mov inc ja aad xor fwait int xor mov (bad) stc sub xchg (bad) stc sub sbb cli ss repz mov clc xor ret pop nop ret sti sub xchg lret bound mov in and repnz iret pushl imul pop cwtl roll aas ja jecxz inc jnp loop pop cltd lret arpl (bad) (bad) repz add out dec jle ljmp inc jnp call lock pop cwtl lret pop mov lock mov roll cmpsb ficoml dec jnp jecxz push xchg rclb push (bad) rcll cmpl mov sbb or je ficom dec test push cmp dec cmpb and or jg cmc xor jecxz pop xchg int3 or mov sub pop cmpsb in popa mov fcoms inc cmpb sub fcoml (bad) mov (bad) push outsb mov ss jo test cmp (bad) mov ljmp add inc bound mov fisubrl push je scas lret and int3 jmp jns mov in or popf mov dec add movsb rcr pop xor add add mov aaa push jo stos (bad) jecxz sbb lods leave out pop cmp jne mov in or mov cmp scas ljmp clc adc inc ja mov in or mov pop mov add pop cmp pusha jl mov out or inc popa jge mov lock inc popa jle mov lock inc bound mov dec gs sahf mov dec imul xor mov xor (bad) ss jo test aaa push jno stos (bad) jecxz sbb push jb lods enter aas xchg add (bad) cmp jl cli aaa push in push sub (bad) lahf mov dec push clc adc movsl ret sbb lret and pop ja mov jmp and add add mov dec sbbw dec imul mov cmp cmc xor mov cmp (bad) lods enter cmp xchg scas lret call ja mov ljmp mov out or dec gs lahf mov dec push clc adc movsb rcr pop xor outsb iret sub aad push sub sbbl dec imul mov cmp xchg scas lret call js mov jmp and mov out or inc popa jle mov dec test clc push xor mov push cmp xchg scas lret call js mov jmp and mov out or inc sbbb dec imul xor outsb mov add jecxz add ds ja mov jmp and pop jp mov out or inc popa jle mov dec test xor mov ss jo test cmp nop lods leave out and pop js mov jmp and mov out or dec andw dec push movsb ret sbb (bad) sbb push jae lods leave out and int pop and pop jnp mov cvttsd2si (bad) lahf mov dec imul mov aaa push jno stos (bad) in push cmp xchg scas lret call jl mov out or inc arpl adc xor jno sub xchg scas int3 call js mov jmp and pop jp mov in or dec gs lahf mov dec push add notl dec push mov sbb push jb stos enter cmp xchg scas lret out and pop ja mov in or inc pusha jge mov lock pushf mov dec test notl dec push movsb ret loope sbb push jno stos (bad) in sbb add mov dec imul xor insl mov aaa push jo test cmp (bad) lods leave in pop cmp out pop lods (bad) pop xor outsb mov aaa push jo stos (bad) jecxz sbb push jb lods leave in push cmp xchg scas lret and int3 jmp jge mov lock inc bound mov dec gs lahf mov xor mov xor (bad) aaa push jo test ds js mov ljmp jp mov in or inc pop jl mov lock cs test notl dec push frstor hlt adc ret pop xor insl mov ss outsl mov cmp stos (bad) in push cmp nop lods lret pop cmp jne scas int3 in or mov out or inc pusha jge mov lock inc arpl cvttps2pi sbbl mov xor cmpsb ret sbb (bad) sbb push jo test cmp stos (bad) jecxz sbb push jb stos (bad) in sbb lods leave out and pop js mov jmp and pop jp mov in or inc pusha jl mov out or inc add sahf mov dec andl adc dec push stc push xor mov cli pop xor mov xor insl mov add nop lods lret and int3 call jp mov in or inc pusha jl mov out or inc popa jge mov out or inc bound mov lock fwait mov dec sbbl mov xor test xor xchg xor xchg popf mov dec andw push insb mov ss jo test cmp mov cmp nop lods leave out pop cmp xchg lods lret pop cmp jbe mov jmp and pop jns mov in or mov out or inc pusha jge mov out or add (bad) sahf mov dec andl adc dec imul xor mov xor mov xor hlt es mov (bad) hlt sub mov xchg vmovaps or inc sbbl sahf mov dec sbbw dec andw dec push cli push xor mov xor insl mov xor call je add dec sbbl shl sbb push jae lods add icebp push cmpsl in and jbe scas int3 jmp js mov ljmp mov ljmp mov icebp push sub sbbb arpl movntps sbbl sahf mov xor xchg xor mov xor add push outsb mov xor (bad) loopne sbb push outsl mov ss outsl mov pop cmp jne scas lret and pop js mov ljmp mov ljmp mov jmp and jns mov jmp and pop jp mov jmp and mov icebp or pushf mov inc arpl push sub sbbl sahf mov dec data16 lahf mov dec imul xor xchg dec insl mov xor ret loopne sbb ret loopne sbb (bad) add stos (bad) in sbb lods leave in push cmp xchg lods leave out pop cmp jbe scas lret call add mov dec mov and bound mov add push sub jg mov inc sbbb dec sbbl popf mov add xchg xor insl mov xor (bad) loopne sbb push outsl mov ss outsl mov xor (bad) aaa push jo lods enter cmp xchg scas lret pop cmp je lods lret pop cmp je lods lret pop cmp je scas lret and jne scas lret and jns mov in or mov out or inc arpl push sub sbbl mov xor xchg cmp stos (bad) in sbb lods enter cmp nop lods leave in pop cmp xchg scas lret out and jbe scas add in or inc bound add add inc arpl push sub sbbl lahf mov dec sbbw dec test sbb push jo test cmp mov cmp (bad) lods leave in push cmp nop lods leave and xchg mov jmp and pop jle mov dec sbbw dec andl adc dec test notb das dec push clc adc mov xor (bad) loopne sbb push outsl mov aaa push jo stos (bad) loop sbb push jo test pop movsl jecxz jne fdiv adc dec push cld sbb push outsl mov cmp mov cmp xchg scas lret out and into jmp and pop jp mov in or sub add push notl dec push mov xor mov xor vpaddd cmp mov cmp nop lods lret add inc bound mov dec gs sahf mov dec test notl dec push mov xor mov xor enter cmp xchg scas lret and pop ja mov jmp js mov jmp and pop jp mov in or inc pusha jge mov lock dec sbbw dec push cmp mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno scas lret call jbe scas int3 call ja mov jmp ja mov jmp ja mov jmp jns xor mov add (bad) sbb push jno stos (bad) jecxz sbb stos enter cmp nop lods leave in push cmp xchg scas lret and jbe scas lret call lods add xchg push outsb mov aaa push jno stos (bad) in push cmp xchg scas lret and int push and jp mov inc sbbl mov xor mov push outsb mov aaa push jo stos (bad) jecxz sbb mov jmp jns mov in or mov out or inc bound mov dec sbbw dec push mov aaa push jo test cmp nop lods leave out and jbe scas int3 jmp jns mov jmp add sbbl push mov in or inc pop jnp mov in or inc pusha jge mov lock inc bound mov inc arpl push sub sbbb test notb das dec imul xchg xor xchg xor xchg xor xchg push outsl mov ss outsl mov ss outsl lea aaa push jno stos (bad) jecxz sbb push jno stos (bad) in sbb push jne lods lret pop cmp jne scas lret and ja mov jmp ja mov jmp js mov jmp and pop jp mov in or inc popa jle mov lock inc bound mov dec gs lahf mov dec push notb das dec imul jo lods leave out pop cmp xchg scas lret and int3 jmp js mov ljmp mov jmp and pop jp mov in or inc bound mov inc arpl cvttps2pi (bad) lahf mov dec push testb sub dec mov loop inc je in jl,pt or jle mov dec sbbl movsb rcr pop xor outsl mov cmp (bad) lods int3 jmp jns mov in or mov out or inc bound mov dec gs sahf mov dec test clc adc test cmp (bad) lods enter cmp xchg scas lret call js mov jmp and pop jp mov in or inc popa jge mov add roll cmc adc dec imul xor vpaddd cmp mov cmp xchg scas lret and int pop and jp mov lock popf mov dec sbbw dec push movsb rcr push xor insl mov aaa push jo stos (bad) jecxz sbb mov ljmp mov in or inc pusha jge mov lock popf mov dec push mov xor outsb mov cmp xchg scas int3 ljmp mov out or inc popa jg mov dec sbbw dec imul minps sbb push jo stos (bad) in pop cmp jbe mov jmp and mov icebp push sub (bad) lahf mov dec imul aaa push jno xchg mov jmp and pop jl mov lock sahf mov dec imul mov cmp xchg scas iret in or mov out or inc arpl adc dec imul mov cmp xchg scas int3 call jge mov icebp push sub sbbl mov xor outsb mov cmp nop lods lret and pop jns mov in or dec gs lahf mov dec imul mov cmp (bad) lods enter cmp jne scas int3 jmp jns mov lock sahf mov dec push stc push xor call in or inc pusha jge mov lock pushf mov (bad) cvttss2si xchg add stos (bad) jecxz push cmp xchg lods lret out and pop jnp mov out or inc bound mov dec xchg xor mov ss outsl mov aaa push jo stos (bad) in push cmp nop lods leave out pop cmp loopne push mov or lret jmp es pusha jge mov lock sub sbbl mov xor mov xor push xchg (bad) ss ja mov jmp jp mov in or inc pop jl mov out or inc outsb mov cmp into jmp and pop jp mov out or inc sbbl mov xor xchg xor mov xor (bad) ss jo test cmp xchg scas lret out and pop ja cwtl mov in or inc popa jle mov lock pushf mov dec gs sahf mov dec push cli pop xor insl mov ss outsl mov cmp (bad) lods leave out and jbe mov jmp bound push aaa push jb lods leave in pop cmp jne scas lret call js mov jmp and mov out or inc popa jle mov icebp push sub sbbl cmpsb ret sbb (bad) aaa push jo test cmp nop lods leave out and int push and jl mov out or inc bound mov repnz sub gs lahf mov dec push clc adc dec imul xor add insl mov cmp (bad) lods leave in push cmp xchg scas lret and inc pop jl mov out or inc bound mov dec test notl dec push movsb ret loope sbb push jo stos (bad) jecxz sbb lods enter cmp xchg scas lret and int3 jmp jns mov in or inc arpl cvttps2pi (bad) sahf mov dec push clc adc dec imul xor outsb mov aaa push jno stos (bad) jecxz and into ljmp mov in or inc pusha jge mov out or inc sahf cli sbb push jno stos (bad) in push cmp xchg lods lret and pop jnp mov out or inc pusha jge mov lock sahf mov dec andl adc dec imul stc push xor mov cmp nop lods lret and int pop and pop add mov dec data16 lahf mov dec imul mov cmp mov cmp xchg scas lret call js mov jmp and pop jp mov out or inc popa jge mov lock gs sahf mov dec push clc adc movsl rcr sbb outsb mov cmp (bad) lods enter cmp xchg mov jmp and mov out or inc bound mov dec sbbl mov xor xchg push sahf mov dec imul mov xor (bad) sbb push jno lods leave out pop cmp xchg mov in or inc bound mov dec push mov xor (bad) or outsl lahf roll aaa add rolb cmp xlat or outsl cmpsl ficom dec jge in sub rcll inc jp in dec jp fisttp aas jns in dec test leave cld xor int3 add cmp loopne dec xorl push inc jp out sub aam inc jbe jmp push cmp dec cmpb lcall push je scas lret call jns mov out or mov push insl mov cmp xchg scas lret call jns mov out or inc bound mov dec push cld sbb push jo stos enter cmp ja mov jmp and mov icebp cvttps2pi andl dec insb add sbb push jno scas lret call jp mov out or inc bound or imul stc sub arpl mov pushf int3 cli cs xchg leave cli jae,pn loop jns mov dec imul xor outsb mov aaa push jo test cmp (bad) lods leave in pop inc pop jp mov in or inc pusha jl mov out or popf mov dec gs sahf mov dec push notl xor xchg ss outsl mov cmp (bad) mov sar sub pop jl mov lock sub sbbl movsl out sub fistl xorb (bad) cmp (bad) lods leave out and adc mov jmp and add pop jl mov out or inc bound xor mov xor (bad) sbb push jae lods lret and pop ja mov add or inc arpl sub iret add xchg (bad) cmc sub hlt inc lea inc pop jp mov in or inc pusha jge mov lock pushf mov dec andl movsb ret pop xor insl mov xor (bad) aaa push jo test cmp mov inc jbe lock push jo test mov stos fisttpl rcll dec xchg adc lahf mov dec imul mov cmp int or mov out or inc popa jle mov inc gs inc pop jnp add mov dec sbbl movsb rcr pop xor outsb mov aaa push jno stos (bad) in sbb lods leave out and jbe scas int3 add or inc pusha jge mov dec push clc adc dec imul xor insl (bad) repz je mov ljmp mov out or inc popa jle mov cmc adc dec test stc adc cmpsl (bad) aaa push jo stos (bad) jecxz sbb push jb stos enter cmp xchg lods lret and shr or mov out or inc popa jle mov inc sbbl mov xor xchg xor insl mov aaa push jo test cmp nop lods leave out and int3 jmp pop js mov in or inc popa jle mov dec sbbl mov xor mov xor mov cmp (bad) stos enter add pop jge mov out or pushf mov dec gs mov das dec push clc adc dec imul xor mov cmp nop scas lret and jbe scas int3 jmp jl mov lock inc arpl adc mov dec push cld sbb outsb mov cmp xchg fsubrs pop jge mov icebp push sub (bad) lahf mov dec imul mov cmp (bad) lods enter cmp jne scas lret call ja mov ljmp mov add or mov out or inc andw dec imul xor outsb mov cmp (bad) lods enter ds jp mov in or inc pop jl mov icebp adc dec add (bad) sbb push jno stos (bad) in push cmp xchg scas lret out and int pop and pop jnp mov icebp or sahf mov dec insb mov xor outsb mov aaa push jo stos (bad) in sbb lods leave out and int push and pusha jge mov lock sub sbbl lahf mov dec test notl xor xchg push outsb mov cmp nop lods lret and pop js mov jmp and pop jp mov in or inc pusha jl mov add add sub mov sbb mov fisubr dec push movsl rcr pop xor insl mov aaa push jo stos (bad) jecxz sbb lods lret and int3 jmp jge mov lock test xor mov xor (bad) aaa push jno stos (bad) in sbb lods leave out and pop js mov jmp and pop jp mov in or inc pusha jge mov out or inc arpl mov stc inc push mov xor lea cmp (bad) lods leave out and jne scas lret call ja mov ljmp mov in or mov out or inc sbbb dec data16 lahf mov dec test notl xor mov adc movsb rcr pop xor insl mov cmp mov push je lods lret and int3 jmp js mov pusha mov ss jo stos (bad) in and pop jns mov in or popf mov dec push notl dec push movsb rcr pop xor mov ss outsl mov pop jbe mov ljmp mov out or inc pusha jge mov icebp push sub sbbb dec test notl push outsb mov aaa push jno stos (bad) in push cmp xchg scas lret call js mov ljmp mov in or inc pusha jge mov hlt adc dec push notl dec imul xor mov aaa push jno stos add in sbb scas int3 jmp jns mov icebp push sub sbbl inc lods loopne cmp dec jnp loop dec xorl xchg push inc jns fcompl int3 add lods out push fisttpl cmp iret add scas inc jbe fstl dec xchg add jbe pop xchg (bad) cli cmp jg mov dec insb mov xor xorl lods lret call js mov jmp and mov out or inc arpl mov dec push movsb rcr pop xor outsb mov aaa push jno stos in insl mov cmp xchg mov jmp and mov cvttsd2si test xor mov ss outsl lea cmp xchg lods lret out and pop js mov jmp and mov dec push stc adc cmpsl (bad) cmp (bad) stos enter cmp jbe mov jmp jp mov out or inc sbbl jmp ucomiss mov sbb push jo stos (bad) jecxz sbb lods lret and shr or inc bound mov fdecstp adc dec imul mov xor (bad) sbb push jae lods leave out and pop jnp mov in or inc pusha jl mov out or inc popa jle mov icebp or pushf mov dec gs lahf mov dec andw push insl mov cmp (bad) lods enter cmp xchg lods lret and add int3 jmp js mov ljmp mov lock popf mov dec andw dec insb mov xor outsl mov aaa push jb stos (bad) out and int3 call ja mov ljmp mov jmp add inc arpl adc dec push notl dec push cmpsb ret loopne sbb push jo test inc pusha jge mov icebp or xor mov lock pushf mov call or mov ret loop sbb push jb stos (bad) in push cmp nop lods leave out pop cmp jne scas lret call ja mov ljmp mov lock inc bound mov dec gs lahf mov dec sbbw add add fdivr push xor mov dec insb mov aaa push jo test cmp stos enter cmp nop lods leave in pop cmp jne scas lret out and int3 call js mov in or inc pop jnp mov outsl test push inc je icebp sub enter cmp nop lods leave out pop cmp jne scas int3 pop dec xchg (bad) in pop cmp xchg mov in or mov out or add (bad) sahf mov dec test notb das dec push notl dec push mov mov stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz jnp mov in or inc pop jnp mov in sub pop push mov lcall push jae lret pop dec shll jno lods leave out jbe cli sbb push jo test add add loop sbb add xchg mov jmp jns mov jmp and mov dec sbbw dec push clc adc movsl ret sbb insl mov ss jo test cmp xchg scas lret out and int pop and jns mov in or mov lock pushf mov dec test xor xchg push insl mov push cmp nop lods lret and int pop and jns mov in or sbbw sahf mov dec test notl dec push mov xor mov push insl mov cmp (bad) lods leave in pop ljmp inc sbbl mov add clc push xor mov sbb lods leave in pop cmp xchg mov jmp and pop jp mov in or inc pop jl mov out or inc popa jle mov mov lock fsts jle in cmp lahf mov dec push notl dec imul dec jle mov dec sbbw dec test notb xor mov aaa push jo stos (bad) jecxz sbb push jb stos enter cmp pop ja mov jmp js mov ljmp mov in or inc popa jle mov lock pushf mov inc sbbb dec sbbl lahf mov dec test stc adc movsb rcr push xor mov xor add add cmpsl (bad) loopne sbb push outsl mov aaa add xchg scas lret and iret jmp and pop jns mov in or mov in or inc pop jl mov out or inc popa jge mov inc sbbb dec push notl xor mov xor xchg xor mov xor insl mov mov or push clc adc movsb rcr push xor mov dec add test aaa push jo test aaa push jo test cmp xchg lods leave out pop cmp xchg scas lret call jbe scas int3 call ja scas int3 call ja mov ljmp mov in or inc pop jl mov in or inc pop jl mov (bad) lock inc bound mov inc arpl push sub push clc adc movsb rcr push xor mov xor mov xor mov xor mov xor (bad) in sbb lods leave out pop cmp xchg lods lret and jne scas lret call ja mov jmp jnp mov in or inc arpl mov dec data16 lahf mov dec test notb das dec imul outsl mov aaa push jo test cmp nop lods leave out pop cmp jbe scas lret call jbe mov jmp ja mov jmp fimull (bad) mov out or dec sbbl mov das dec add mov xor mov push insl mov xor lods int push and pop js mov ljmp mov in or mov out or inc popa jge mov lock inc bound mov icebp push sub test das dec push notb xor mov xor xchg dec imul xor mov push outsl mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos (bad) in add aas pop jns mov in or mov dec sbbl lahf mov dec push notb das dec push notb das dec imul lea cmp nop lods leave out pop add pop je lods leave out and int push and jp mov in or mov lock cs test notl dec push movsb rcr push xor mov xor aam sbb scas lret out and jne scas lret and mov in or mov lock fwait mov icebp or sahf mov dec sbbw dec data16 xor insb mov ss outsl mov ss jo test cmp stos (bad) jecxz add cmp lret call jl mov out or dec gs sahf mov dec sbbw dec test notb das dec push notl dec insl mov cmp mov cmp jne add xchg scas lret out and pop ja mov ljmp mov in or inc pop jge mov out or inc gs lahf mov xor mov ss jo test aaa push jo test cmpsb jmp ret sbb outsb mov cmp jbe scas int3 jmp jns add xchg mov in or mov lock inc sbbl popf mov push outsb mov cmp push push mov fdivrp pop xor mov aaa push jo stos (bad) jecxz add cmp shr or inc bound mov inc xchg leave cld cmp mov inc jne mov in or inc popa jge mov lock pushf mov dec mov mov xor xchg movsb rcr sbb (bad) aaa push jo stos (bad) jecxz sbb push jb stos enter cmp xchg mov jmp and mov add push sub test xor xchg push insl mov cmp stos (bad) jecxz sbb scas int3 call js mov jmp and pop jp call out push lods leave in pop cmp xchg scas lret out and lret jmp and pop jp mov dec xchg hlt and and sti sub mov (bad) hlt daa pop mov imull pop fwait iret push cmp adc leave pop pop scas loop inc mov cmp xchg scas lret call js mov in or inc pop jl mov lock sahf mov dec imul mov in push cmp xchg scas lret call jp mov in or inc pusha jl mov icebp or sahf mov push insb mov aaa push jo stos enter and pop jns mov in or mov out or inc bound mov dec data16 lahf mov push outsb mov cmp (bad) stos enter cmp int pop and pop jnp mov out or inc bound mov inc test xor xchg push insl mov cmp nop lods lret and pop js mov jmp and mov out or dec add pop xor mov aaa push jo stos (bad) jecxz sbb lods leave out pop cmp jbe mov ljmp mov lock popf mov add repz jne loop dec cmpb imull addr16 sub data16 lahf mov dec push (bad) sbb push jno stos (bad) in sbb lods enter and pop js mov in or mov in or inc pusha jge mov icebp or mov xor xchg xor (bad) ss jo test aaa push jo test cmp mov cmp sub lock mov dec test outsl mov pop jnp mov in or inc pusha jl mov out or dec xor int3 add outsl mov (bad) cmc xor and lret call jp mov in or inc pop jl mov lock mov add xor xchg xor xchg xor mov xor ret loopne sbb ret jecxz sbb push jb xor push dec test (bad) cmp in cmp jns mov jmp and push ja mov sub lock int pop and pop jp mov in or mov out or inc popa jle mov icebp or pushf mov dec sbbl mov xor mov xor xchg xor mov aaa push jo test cmp mov mov pop ja xchg mov in or inc pop jge mov out or inc jno add (bad) cmc and scas loop outsb int jp jmp outsb scas adc add daa pop (bad) das addr16 (bad) sbb cmpsl aam cvttps2pi sbbl sahf mov dec gs lahf mov push outsb mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz add cmp lret call ja mov call fwait mov dec push notl xor mov xor movsb rcr adc movsb rcr push xor mov push outsl mov adc scas out xor push subl ret loopne sbb push outsl mov cmp stos (bad) jecxz sbb scas int3 call ja mov ljmp cwtl mov out or inc pusha jl mov out or inc popa jge mov out or inc popa jle mov lock dec test add das dec push notb xor mov xor xchg xor xchg dec insb mov aaa push jo test cmp (bad) stos enter cmp (bad) ret loope sbb add xchg scas int3 jmp jp mov out or inc popa andl dec push notl dec imul mov xor insl mov xor (bad) loopne sbb push jae lods leave in pop cmp xchg lods lret and jne scas lret out and lret call js mov jmp and pop jp mov lock pushf mov inc arpl notb das dec push js lret and into ljmp mov lock add sub sbbb dec sbbw dec sbbw dec sbbw dec sbbl adc dec xchg clc adc mov xor mov xor mov xor jo test aaa push jno stos (bad) jecxz pop cmp je lods lret and int3 call ja mov jmp js mov in or mov in or inc pop jl mov dec imul xchg xor xchg dec insb mov xor insl mov xor push mov mov (bad) icebp and scas in sbb or inc popa jle mov inc sbbl add cmp stos leave in pop cmp xchg scas lret out and int3 jmp js mov ljmp mov xor ss outsl mov aaa push outsl mov aaa push jno stos (bad) loop sbb push jno stos (bad) in sbb xchg scas lret jmp jle mov dec sbbl mov xor xchg xor xchg dec insb mov cmp stos (bad) jecxz sbb push jae lods enter cmp xchg lods lret pop cmp jne scas int3 call ja mov jmp js mov out or inc pusha jge mov out or inc popa jle mov icebp or pushf add push notl dec imul add add add sub call repz (bad) lahf mov dec insl scas iret in or mov in or inc pusha jl mov out or inc pusha jge mov out adc data16 lahf divb outsl movsl repnz movsb rcr push xor mov push insl mov xor outsl mov lods leave in push cmp xchg mov ljmp mov negl adc test xlat adc mov inc popa jge mov lock pushf testb add in or inc xchg fisttpl inc jge out push xchg fild push cmp xchg scas lret and jne scas lret out and popa lcall lret and lret call jbe sar sbb (bad) add push je lods leave out pop cmp xchg lods lret add out and jns mov jmp and pop jns mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jge mov movntsd sbbl dec test cld cmp in gs lahf mov dec push movsb rcr push xor mov sbb pop ja mov jmp js mov jmp and pop jp mov in or inc pusha jl mov out or inc bound mov icebp push sahf (bad) push xor mov (bad) lock popf mov dec gs lahf mov dec push (bad) (bad) cmp xor mov cmp (bad) lods leave in pop aad and pop js mov jmp and pop jns mov jmp and pop jp mov in or inc pop jnp mov add in or inc sbbb dec gs sahf mov dec data16 lahf mov dec push notb das dec push notl xor mov xor mov xor vpaddd ss outsl mov aaa push jo test cmp mov cmp xchg scas int3 call ja mov jmp js mov ljmp cltd mov out or inc popa jge mov out or inc bound mov lock sub mov xor mov xor mov xor insl mov xor (bad) loopne sbb push outsl mov mov add cmp into jmp and mov out or inc bound mov dec gs lahf mov das dec push add inc adc ret data16 in or inc pusha jge mov push mov rorl aas jae jecxz push sti pop xor outsb mov pop je lods lret and jne scas lret call jbe scas int3 call ja mov jmp jns mov jmp and pusha jge mov out or inc popa jge mov lock inc bound mov inc arpl notl xor mov xor xchg ss outsl mov sub add sbb push jno stos (bad) jecxz sbb push jb stos (bad) in sbb stos enter cmp nop lods enter cmp mov jmp and pop jns mov jmp and mov in or inc pop jl mov out or inc pusha jl mov add out or inc pusha jge mov repnz mov adc arpl lcall push outsb mov add jl add aas pop jns mov jmp and sahf loopne insb mov aaa push jno stos (bad) jecxz sbb push jb stos enter cmp xchg lods lret pop cmp jne scas lret call jns mov jmp sub lcall bound mov dec sbbl mov pop xor insl mov xor (bad) jecxz sbb jno out push mov add aad push sub sbbl lahf mov dec test notl xor mov inc (bad) movb jg lcall lods leave out pop cmp xchg lods lret pop cmp jne lods lret add out and lock dec imul aaa push jo stos (bad) jecxz sbb push jo test cmp nop lods leave out pop jge repz ret push nop fdivrp sbb push jno scas lret call jbe mov jmp js mov sub cli ss fstl inc cmpb ret loopne sbb (bad) cmp jne scas lret out and jne scas lret call jbe scas lret call jbe mov jmp jbe xchg mov in or mov out or inc popa jle mov lock pushf mov sub mov dec test cmc adc mov dec imul xor xchg dec push mov xor xchg xor xchg xor xchg xor mov xor insl mov xor insl mov xor ret (bad) sbb push outsb mov ss outsl (bad) stos enter cmp (bad) stos (bad) in sbb stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz push dec scas jmp out and mov xlat or mov adc mov jb loope dec nop in daa bound mov in inc pushf jmp (bad) repz dec test notl xor xchg push insb add sbb push jno stos (bad) jecxz sbb push jb stos (bad) in sbb scas int3 call jbe mov jmp js mov sub fcoml pop sbbl add sbbw dec data16 lahf mov push insl mov xor (bad) loopne inc jns fistl sbb lods enter cmp nop lods lret and shr or inc pusha jl mov xor add scas in and xchg lret jg mov dec gs sahf mov lret and jne scas iret in or aas outsl mov mov push outsl mov lret jo stc pop scas imulb cmpsl fistp pop xchg lret cmp add push mov das movb jae (bad) lret jmp push push cmpsb add notl dec push mov xor insl mov aaa push jbe scas int3 jmp icebp xor adc dec imul xchg cli pop xor mov push test and jg mov inc arpl push sub sbbb dec sbbl lahf mov outsl mov cmp nop lods leave out pop cmp nop lods lret pop cmp jne scas lret and jne scas lret and jbe scas lret call jbe scas iret in or mov xor fist mov aam cmp cmpsl jecxz dec xchg mov dec gs lahf mov mov negb add pop jne scas lret call ja mov ljmp mov in or fwait mov inc arpl cvttps2pi (bad) sahf mov dec push mov xor mov xor outsb mov ss outsl mov cmp (bad) stos idivb js out cvtps2pi andl dec push mov xor mov ss jo stos (bad) jecxz sbb lods leave out pop cmp xchg mov jmp and pop jp mov in or inc pop jl mov out or inc pusha jge mov lock inc bound mov inc arpl movntps test xor xchg xor mov xor insl mov ss jo test jg lock (bad) sbb stos enter cmp lock lret add cmpsb xlat or mov mull pop add mov cmpsl (bad) inc js call in dec jge loope dec jle out inc jbe loopne inc jne icebp add add add mov lods cld dec subl scas out xorl ljmp push mov into or stos loope dec jg repnz scas out arpl mov lcall stos (bad) jecxz sbb push jae lods leave out pop cmp xchg lods lret and int3 call ja mov ljmp mov lock fwait mov inc bound mov dec sbbl mov sub mov dec push mov add push outsl mov push cwtl fsts push mov pop ja mov ljmp lcall bound mov cmc adc dec andl adc dec test notl xor mov add notb das dec push notl xor xchg xor mov xor (bad) loopne sbb push outsl mov aaa push jo test aaa push jo test cmp (bad) lods enter cmp int3 jmp js mov ljmp mov ljmp mov ljmp mov jmp and pop jp mov out or inc popa jle mov lock inc popa jle mov lock pushf mov inc arpl mov inc arpl push sub mov dec test movsl rcr pop fsts dec jp stc sub push inc ja add mov xor outsb mov cmp jbe mov jmp js mov jmp and pop jns add inc pop jnp mov in aaa xchg int cmovs mov sbb bound mov fistp push xchg int inc (bad) ret incb stc ss icebp push cwtl iret or mov xor aad push (bad) leave add scas in push (bad) movb jp divb insl cmpsb fstpl push nop (bad) (bad) cmp out sub bound mov in pop nop int3 add cmp ljmp xchg into adc out sub rorl outsl stos out pusha mov out push mov sub loopne dec xchg (bad) (bad) xor scas in dec jle loopne sbb scas loope dec jle call repnz inc (bad) mov inc scas testl inc stos out dec test cld ss int3 pop inc test std cmp out sub add mov into or xchg add jns jecxz push nop idivl jno fist (bad) sub test int inc js sub int push (bad) cs ret mulb push xchg sti cmp call in daa mov (bad) or leave or les inc jge hlt xor jmp sbb iret or sar jb call repz pop nop lret call (bad) sub stc inc jge xorps mov xor push xchg in cs imul fistl dec (bad) mov mov ficoml inc jp out push mov stc xor ficom inc jne mov adc and call out and cmp inc jno add adc movsl aad aaa push mov add mov push pop xchg cld xor add bound int3 (bad) repz (bad) mov adc xor fisttpl cmp adc jp in and (bad) std aaa xchg jmp outsl scas ljmp cmp in es fwait add fyl2xp1 push xor (bad) lods enter cmp xchg lods lret pop cmp jne scas lret call sub (bad) sahf mov dec test notl dec imul mov nop (bad) ja cmc adc dec push mov xor mov push outsb movsl es mov sub jmp lret and int3 jmp js mov jmp and add fwait mov icebp or popf mov dec gs sahf mov dec imul sbb push jo test cmp add (bad) lods enter cmp cwtl jecxz xchg stc adc movsb rcr push xor mov aaa push jno stos (bad) in sbb lods leave in push cmp nop lods leave out pop cmp xchg cld inc jge repnz insl mov cmp xchg scas lret and jbe scas lret call ja mov ljmp mov jmp and mov in or inc pop jl mov inc sbbb dec sbbl mov das dec push notl dec push mov xor (bad) aaa push jo test cmp lea cmp ja mov ljmp mov jmp and pop jp mov lock pushf mov das dec push add add dec push mov xor mov push insb mov xor (bad) jecxz sbb push jb lods leave in pop cmp je lods lret pop cmp jne scas lret call jbe scas int3 call ja mov jmp jl mov out or inc pusha jge mov out or inc popa jle mov dec sbbl sahf mov dec data16 mov xor xchg xor xchg xor mov adc xlat sbb scas int3 jmp jp mov in or dec sbbl lahf mov dec push notl xor xchg sbb push outsl mov cmp (bad) stos lret call js mov jmp and inc popa add mov lock pushf mov dec sbbl lahf mov dec push movsb rcr push xor mov xor outsl mov aaa push jno test cmp mov cmp nop lods leave out and pop js mov ljmp mov in or mov in or inc pop jl mov out or inc popa jle mov dec gs mov xor xchg xor mov xor mov aas pop js mov ljmp mov jmp and mov inc sbbb dec subl mov xor xchg loop pop mov or inc bound mov dec imul mov aaa push add scas lret out and pop ja mov ljmp mov jmp and pop jl mov out or inc popa jge or (bad) mov (bad) push xor fnstenv ja mov in or mov in or inc pop jl mov out adc dec (bad) (bad) mull pop xchg rclb pop pushf icebp sbb push je lods add ljmp mov in or inc pop jl mov out or inc popa jge mov lock dec test notb das dec push notl dec push mov xor xchg xor mov dec insb mov cmp mov cmp (bad) lods enter xchg ret pop xchg rorb mov xchg mov jmp and mov out cvttps2pi sbbl add adc movsb out addl in and pop cmp hlt sub les jns sbb loop dec xorl sbb pushf aad inc jp ljmp test ret popa cwtl rorb inc xchg (bad) push cmp xchg lods lret and mov in or inc pusha jge mov lock pushf add push notl dec imul mov cmp repz out sub test adc jg call out and pop ja mov jmp js mov jmp and pop jp mov dec sbbl lahf mov dec test notb xor mov xor xchg push outsl mov cmp add add stos (bad) jecxz sbb push jae lods leave or pop inc arpl test xor mov xor xchg ss outsl mov aaa push pushf mov dec imul xor mov xor vpaddd aaa push je scas lret and jne scas lret call ja mov jmp js cltd mov out or inc bound mov lock popf mov dec imul xchg xor xchg dec insl mov xor ret loopne sbb push outsl mov cmp xchg scas lret out and int3 call ja mov jmp js mov jmp and pop jns mov in or mov dec sbbl lahf mov dec push notb add push insl mov xor insl mov cmp (bad) stos enter cmp nop lods leave in pop cmp xchg scas lret and jne scas into jmp and pop jp mov in or mov lock fwait mov fldenv inc pop jl mov out or inc popa jle mov fdiv adc dec andl adc dec push std sbb push outsl mov aaa push jno stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out pop cmp jne scas lret call jns mov in or mov out or inc popa jge mov lock (bad) sbb ret popf aad inc jns fisttpll adc ret je in add add jp add mov dec andw dec imul xchg sbb (bad) loopne push cmp (bad) lods enter cmp xchg lods lret pop cmp je lods lret pop cmp jne scas lret out and jbe scas int3 call js mov in or inc pop jnp mov in or mov in pop xchg in das dec imul outsl mov cmp stos lret punpckhwd cmp inc arpl cvttps2pi sbbl lahf mov dec andl adc dec outsb mov ss outsl mov aaa push jo test cmp mov cmp (bad) stos enter cmp nop lods leave out and pop js xchg mov ljmp mov jmp and pop jns mov jmp and mov out or inc pusha jge mov (bad) cvttss2si (bad) mov xor xchg xor xchg xor mov dec insb mov xor mov aaa push jo test cmp mov cmp nop lods leave out push cmp nop lods lret pop cmp aam add out and mov movntsd (bad) sahf mov dec test notb das dec push clc adc dec imul xor mov xor enter cmp xchg lods lret and jbe mov jmp push xchg enter fwait mov inc arpl movntps xchg add fnop adc dec push mov xor xchg dec imul xor mov xor add in and pop js mov ljmp mov in or mov in or inc pop jnp mov in or inc pop jl mov out or inc popa jle mov dec sbbw dec test notb cs push notl das dec imul xchg cmpsl vpaddd aaa push je lods leave out pop cmp jbe scas int3 jmp js mov ljmp mov ljmp xor xor insl mov cmp nop lods leave out pop cmp nop lods lret pop cmp xchg aam dec fwait mov dec test clc adc dec imul add add push jb stos (bad) in sbb lods leave in push cmp xchg lods lret pop cmp jne scas lret call js mov ljmp mov aaa push jo test cmp mov cmp (bad) lods leave in push cmp nop lods leave out pop cmp jne scas lret and iret in or mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov lock fwait add imul xor mov xor (bad) aaa push jo test loope sbb push jo stos (bad) jecxz sbb push jno scas lret call ja mov jmp ja mov ljmp mov in or mov in or inc pusha jl mov out add add sub sbbl sahf mov dec data16 lahf mov dec andl adc dec push clc adc dec imul add nop lods leave in push cmp xchg lods lret pop cmp xchg scas lret and int push and pop js mov ljmp mov lock inc bound ljmp pushf fcoml dec jle loope xchg shlb or call (bad) pop xor insl mov and jns mov in or mov out or inc popa jle mov lock pushf mov dec sbbl mov xor xchg xor mov xor mov ss outsl mov aaa push jo test add loop pop cmp xchg scas lret and lret call jbe mov call ja mov jmp js mov ljmp mov out or inc popa jle add dec andw dec push notl xor xchg mov and sbb push jne scas int3 call js mov ljmp mov in or pop jns mov in or mov in or inc pop jnp mov out or pushf add dec push notl dec imul xchg mov es mov ret negb (bad) mov xchg fnstcw popa jle mov inc arpl mov dec sbbl mov ss xchg repz cwtl lret jns cli xor mov dec data16 lahf mov stc pop xor insl mov xor (bad) and int3 jmp add shr or inc popa jle mov lock pushf mov inc sbbb dec test xor mov xor insl mov ss outsl mov cmp stos (bad) jecxz sbb lods enter ds ja repz movsb rcr push xor mov xor mov xor (bad) loopne sbb push outsl mov cmp xchg lods lret and jne scas lret out and lret call ja mov ljmp mov add or mov lock inc bound mov inc arpl push sub sbbb dec gs sahf mov dec sbbw dec push mov xor mov add xchg loope gs fidivr popa jg mov inc arpl movntps sbbl mov xor mov xor insl mov xor outsb mov xor ret loopne sbb (bad) in sbb stos enter cmp pop js aam or pushf mov dec sbbl sahf mov dec push mov xor xchg dec insb mov xor insl mov ss outsl mov add sbb push jb stos enter cmp int3 jmp ja mov jmp js mov jmp js mov jmp and pop jp mov in or inc pop jl mov inc andb dec imul outsl mov aaa push jo test cmp mov cmp jne scas lret out and int3 jmp js mov ljmp mov jmp and jns mov in or mov lock inc jno push dec xchg int3 sbb push clc add ss jo test cmp mov cmp jne scas lret call ja mov out or inc arpl mov dec data16 lahf mov dec test notl xor xchg add add xor mov cmp (bad) lods leave in pop cmp xchg scas lret out and pop js mov ljmp mov in or inc pop jl mov out or inc bound mov dec test notl xor mov push insl mov pop cmp xchg scas lret call fs sahf mov dec insb mov xor (bad) aaa push jo test aaa push jb stos (bad) jecxz sbb stos enter cmp (bad) lods enter ds ja mov jmp js mov ljmp lcall bound mov inc outsb mov ss outsl mov cmp (bad) lods enter cmp (bad) lods leave in pop cmp je lods lret and jne or add add sbb jo test ds js mov ljmp mov in or mov out or inc pusha jge mov lock pushf mov dec fs mov xor xchg xor mov mov scas add sub pushf mov dec sbbl mov xor icebp daa mov xor mov ljmp mov add ljmp out dec jne (bad) or jo iret add popf sar sub mov lods fisttpl cmp lahf int inc js loop inc je stos loope inc js out push mov pushl lahf fsts dec cmpl inc jns fist dec test and stos in (bad) sar jno call or cltd rorb add add mov and aad inc cmpl xor fstpl dec mov add mov xor ljmp mov add ja ljmp pop xchg aam dec mov add jo in and push nop lret or enter mov arpl (bad) stos out pop mov xchg pushl sahf ficompl js repz pop xchg rorb dec (bad) int3 or mov ficom aas js out push mov xor add jg sbb xor int fs fsts mov pop push (bad) (bad) lock mov loopne dec cmpb dec test sti aaa add mov sub cmpsl loop pop xchg rorb dec nop lret adc enter cmpsb fstl dec mov (bad) cmp jecxz push mov sbb cmp add add or mov in sub pop mov fcompl pop xchg rorl dec mov add mov in pop xchg leave add pushf rolb adc sub or je in sub (bad) cli xor int3 add xor lret jo fimull inc jle out daa pop xchg int3 (bad) add (bad) pop mov fldt dec andw dec push mov aam push sub sbbl mov xor mov ss je scas lret and pop ja mov jmp and pop jnp mov out or inc popa jle mov xor xchg push outsb mov cmp jbe scas int3 jmp jns mov in or inc pusha jge mov lock test xor mov xor leave in pop cmp jbe clc ss adc mov lret add jae repz dec push notl xor mov xor xchg aaa push jo test adc mov push mov adc cs push es cmpsb loop push fwait (bad) ss ljmp xchg repnz jg ljmp mov out or inc popa jle mov inc sbbb dec andw dec imul cmp (bad) lods leave in pop cmp jbe scas int3 call js mov jmp and pop jnp add dec gs lahf mov dec insl mov aaa push jno stos (bad) in sbb scas lret out and pop js mov add add in or add sbbl mov xor outsb mov aaa push jno stos (bad) in pop cmp jne divb gs int3 add jl repnz hlt sub stos enter cmp jbe mov out or inc popa jle mov inc sbbl mov xor mov (bad) adc test sbb inc xchg and xor cmc adc dec imul mov ss outsl mov cmp xchg lods lret sub jle mov dec gs lahf mov dec push clc adc movsl ret sbb push add lret and pop ja mov out or inc bound mov dec andw dec imul add stc push xor mov sbb lods lret and shr or inc pusha jge mov lock popf mov dec push clc adc movsl ret sbb (bad) pop cmp jne scas int3 jmp jns mov in or inc pusha jge mov lock popf mov dec push stc adc test cmp nop lods lret and into ljmp mov out or inc popa jle mov dec gs lahf mov add pushf ret loopne sbb push jo enter lahf aam cmp mov mov mov mov adc mov xor jne in sub add fcompl pop xchg int3 add jno loopne pop mov notl dec imul add add xor vpaddd cmp stos movl pop js mov lock pushf mov dec gs lahf mov dec push stc push xor mov xor vpaddd aaa push je scas lret and int push and jns mov in or inc pop jl mov out or inc bound mov dec sbbw dec insb mov xor (bad) sbb push jno stos enter cmp xchg scas lret out and int push and pop jns mov out or inc arpl adc data16 lahf mov dec push push gs leave out and jbe mov jmp sbbl mov xor mov add sbb push outsl mov cmp (bad) lods leave out pop cmp jbe xchg mov in or popf mov dec andl adc dec push movsb rcr pop xor insl mov aaa push jno stos (bad) in sbb mov ljmp mov out or inc popa jle mov icebp push sub sbbl mov xor mov xor leave in and int push and jns mov in or inc pusha jge mov lock inc arpl adc dec push sti sbb push jo test cmp nop lods leave out and int push and jp mov in or inc pusha jge mov lock mov sbb (bad) sbb push jb stos enter pop cmp jne scas int3 call jns mov in or mov out or add mov mov imul pop jnp mov out or inc popa jle mov icebp or popf mov ret bound mov int or inc pusha jge mov lock lret adc fiadd and pop jnp mov out or inc popa lahf ficomp jb icebp inc xchg int3 cmp push sub sbbl mov xor xchg push insb mov cmp nop lods leave out pop cmp xchg scas lret call jbe scas int3 jmp ja mov jmp js mov ljmp mov out or inc add mov dec gs sahf mov add adc mov dec sbbw dec sbbl adc dec push mov sbb push outsl mov cmp lea cmp mov cmp mov lods divb xor mov xor (bad) aaa push jo test cmp stos enter cmp nop lods leave out pop cmp xchg scas int push and jns mov jmp and pop jp mov in or mov out or inc popa jle mov lock inc bound mov inc andl adc dec push notl dec push mov xor xchg dec insb mov xor insl mov cmp mov and pop js mov ljmp add push and jns mov jmp and pop jp mov out or inc popa jge mov out or inc popa jle mov dec data16 push xor mov push insb mov xor ret loopne sbb push jno stos enter cmp lret call ja mov jmp js mov ljmp mov in or inc pop jnp mov out or inc pusha jge mov repnz sub (bad) lahf mov dec andl adc dec push notl jbe std jp,pt or push jo stos (bad) in sbb mov ljmp mov jmp and pop jns mov in or mov in or inc pop jl mov out or inc popa sbbl mov xor xchg cmpsl (bad) loopne add add add std sbb push outsl mov aaa push jo stos (bad) in sbb push fwait aam inc pusha jge mov cmc adc dec imul jo test cmp nop lods lret and int push and jns mov in or inc pusha jge mov dec test notl movsl ret sbb (bad) sbb push jb stos enter cmp int pop and popa jge mov icebp push sub (bad) sahf mov dec push clc adc movsl ret sbb (bad) sbb push jb lods leave jmp jns mov in or inc pop jl mov lock inc arpl adc dec push clc adc movsl rcr sbb enter mov push pusha nop scas int3 jmp add aas add cltd mov out or inc popa jle mov icebp or popf mov dec sbbw push insl mov ss outsl mov pop cmp xchg scas lret out and int push and pop jns mov jmp and mov inc sbbb dec gs lahf mov dec test notb xor mov xor xchg xor jno stos (bad) jecxz sbb push jb stos enter cmp jne scas lret out and int push and pop js mov jmp and pop jp mov lock sub fnop adc movsl ret sbb (bad) cmp (bad) lods enter cmp xchg scas lret out and shr or inc bound mov add add cvttps2pi (bad) lahf mov xor mov ss jo stos (bad) jecxz push cmp xchg scas lret and pop jp mov in or inc pusha jge mov lock test xor mov ss jo test js add loop sub mov dec imul xor vpaddd cmp stos (bad) in push cmp xchg scas lret call ja mov out or inc popa jle mov icebp push sub andl mov adc jne fisttpl push rolb cmp aad ja,pt fisttp sbb int3 add test scas sbb out sbb jnp ficom push repz adc stos fist js fimull cmp rcll inc js repz (bad) add add add out dec cmpl out add mov rorb inc jle divb insb lods jmp or mov das popa sahf rorl push (bad) mov sbb mov and aad cmp rolb adc stos ficom dec mov fsts dec cmpl stos loope dec xchg pop dec (bad) mov sbb mov int cmp rolb ss rolb push inc cmpb insb test repnz test mov iret add arpl or dec jge loop dec xorb and mov repnz mov lret imul sbb scas out pop mov daa pop xchg int3 push inc je push dec xchg int push xchg aaa jno rorb dec xchg mov (bad) fstl push mov sub add add aaa jno loopne dec jg call add xor movsb loopne push mov add outsl movsl fist push nop (bad) imull aaa push xlat push dec xchg (bad) pop xor insl mov ss outsl mov pop cmp jbe scas int3 call js mov jmp and popa jle mov inc push pop xor outsl mov cmp stos (bad) jecxz sbb stos enter cmp nop lods enter cmp xchg mov ljmp mov jmp and pop jp mov in or mov out or inc pusha jge mov lock pushf mov dec push notl dec imul xchg dec insb mov xor mov out test std sbb push jo add cmp nop lods leave in pop cmp jne scas lret call pop add mov lods enter sbb mov xchg mov sti push mov add insl cmpsb repz (bad) lahf aad inc jbe icebp movntps (bad) sahf add dec push movsb rcr push xor mov cmp (bad) stos enter jnp call xor (bad) push pop mov cmpsb ret (bad) sbb (bad) ss jo test cmp int3 jmp js mov ljmp mov jmp and mov in or inc pop jl mov out or inc arpl movntps sbbl lahf mov dec andl pop sahf out dec insb mov sbb mov sar xchg mov in or add add mov lock jp mov out or inc bound mov dec addl push xor mov cmp xchg scas lret jmp js mov in or mov out or inc bound sbb sbb push jb lods leave in pop cmp jne mov out or inc pusha jge mov out or inc bound mov inc sbbb dec sbbl mov cs imul xor mov xor (bad) loopne sbb push outsl mov cmp mov cmp (bad) lods enter ds ja mov ljmp mov jmp and pop jp mov in or mov in or inc pusha jl mov out or inc bound add add cmc adc dec test notb xor mov xor xchg xor mov sub add (bad) xor aas pop jns mov in or mov out or inc popa jge mov lock inc bound mov inc sbbl xchg xor (bad) sbb push jno stos (bad) jecxz sbb lods leave out pop cmp jne scas lret out and ljmp jg add adc sbb loop inc cmpb popf (bad) adc jb loop pop jge mov lock pushf mov jge sti jg rcr push xor test push cmp std xor (bad) addr16 lret addr16 rolb xor lret cli sub ret stc add sub int inc jp ljmp xchg (bad) push cmpl es in jge jmp loope dec test adc mov xbegin add gs enter lea add sahf mov sbb cmpsb ret loope sbb push jo stos (bad) jecxz and jp mov out or inc bound mov dec andw dec push mov xor fstpl push outsb mov cmp xchg lods lret and jne scas lret call ja or inc mov fstl inc jge repz pop push mov jecxz dec (bad) mov push pop nop enter test stos loopne inc jge loopne inc jp in daa popa lcall jo add jbe cli aaa outsl mov xchg mov js out cs lock xor insl movsl ficom add inc xor jae pop push cwtl (bad) push inc (bad) shll inc pop sbbb dec sbbw dec push push lea rcll jb loopne inc jle sbb lret insl rclb dec mov sbb pop js mov lock inc bound mov lock fwait mov inc arpl or jle sub fwait into pop inc jp in push xchg clc cmp rolb jno icebp pop fwait aam cmp mov stc sub bound jmp and mov out or inc popa jle mov icebp or test aaa push jo test push jae hlt xor fdivrp pop xor insl mov int3 pop push jl mov out or inc popa jle mov lock sub test xor xchg push insl mov ss outsl mov aaa push jo (bad) adc fist pop ja mov lock inc bound mov inc sbbl lahf mov xor mov push insl mov xor enter cmp nop lods leave out and jne scas lret call ja mov jmp jns mov xor cmp mov and out and pop js mov ljmp mov jmp and pop jns lret ja out and mov dec push mov xor jae lods lret pop cmp jne scas lret and int3 call ja mov jmp ja mov jmp add js mov ljmp rclb das dec imul mov cmp stos enter pusha mov adc stos jmp push arpl cmp mov cmp xchg lods lret and jne scas lret jmp pop jl mov out or inc pusha jge mov lock lahf mov dec andl adc dec push notl dec push mov xor roll aas pop jns mov in or mov dec sbbl lahf mov dec push inc (bad) int3 jmp and mov in or inc pusha jl mov xor mov xor mov xor insl mov xor ret loopne sbb push outsl add sbb push jae lods leave in push cmp xchg lods lret and jbe scas int3 call ja mov jmp ja mov ljmp mov in or inc pop jl mov out push sbb or pushf mov dec gs sahf mov xor mov push insl mov cmp add mov xchg mov ljmp mov jmp and mov in or inc pusha jl mov lock inc bound adc dec push notl xor mov xor xchg xor mov ss jo test cmp xchg lods lret or inc pop jnp mov out or inc pusha jge mov lock inc bound mov dec gs sahf mov dec sbbw ljmp mov in or mov out or inc pusha jge mov out or inc bound mov icebp or pushf mov dec test (bad) lahf mov dec imul mov push outsb mov and jbe scas int3 jmp jge mov lock mov std cmp inc je in nop fcoms dec cmpl icebp push sub sbbl cmpsb ret (bad) sbb (bad) loopne sbb push outsl mov aaa push jo test cmp mov cmp (bad) stos enter cmp int3 call pop jge mov out or inc pusha jge mov out or inc bound mov lock add fwait mov inc bound mov dec data16 lahf mov dec andl adc dec push notl xor mov fwait in es pusha jge mov repz gs sahf mov dec data16 lahf mov dec data16 lahf mov dec sbbw dec andl stc push xor mov ss outsl mov aaa push jo test aaa push jo test aaa push jo test fiadd sbb mov jmp and mov out or mov inc mov cmp nop lods leave out pop cmp nop lods leave out pop cmp xchg scas lret and pop jp mov in or pop jp add inc sbbb inc sbbb jb fcoml dec test or lods lret and pop jp mov in or pop jp mov in or mov in or inc pusha jl mov out or test add cmp int3 jmp jnp mov in or inc pop jnp mov out or inc pop jnp mov out or inc pusha jge mov out or inc pop jl mov out or testb aaa pop je lods lret and int3 jmp ja mov jmp js mov jmp and pop jns mov in or mov out or inc bound mov dec sbbl lahf mov dec andl adc dec imul mov ss outsl mov cmp (bad) stos add ljmp movsl in pop jp mov shr or inc popa jge mov icebp or mov xor xchg xor mov push insb mov xor outsl mov aaa push jo test cmp xchg lods lret and jne scas lret call ja mov jmp js mov jmp insb mov xor (bad) and inc pop jp mov in or inc pop jl mov out or inc popa jle mov icebp or pushf mov dec sbbl mov xor mov ret dec push notl dec imul xor outsb mov aaa push jno stos (bad) call jns mov in or inc pusha jge mov lock inc arpl mov xor xchg add xor mov xor insl mov cmp mov cmp nop lods leave out pop cmp jbe scas lret call js mov jmp and mov hlt inc movsb (bad) sbb push jb lods enter cmp xchg scas lret call ja mov jmp and mov in or inc pusha jle mov lock mov sbb push outsl mov cmp (bad) stos enter cmp xchg scas lret and pop ja mov ljmp mov lock pushf mov dec andw dec imul mov xor (bad) sbb push jno scas lret and pop ja mov ljmp mov ljmp add add or popf mov xchg icebp sub or jne out push mov cld xor aad inc jge add aas pop js mov ljmp jg mov dec test notl dec push movsl (bad) jecxz sbb push jb lods enter cmp nop lods leave out pop cmp je lods lret and pop js mov ljmp xchg mov mov sbb mov xlat add add addr16 int3 cld sub xchg int3 add arpl lret jbe ljmp in or inc pusha jge mov out or inc popa jle mov icebp or popf mov addr16 inc jge testl cld sbb push outsl mov in pop push xchg mov push push (bad) mov sbb (bad) or push add lret incb xor xchg rorl cmp mov pop push mov add jbe jecxz dec jle in inc jns fimull cmp rorb add xor add mov dec data16 lahf mov dec test cli push xor (bad) stos enter cmp (bad) xor sub lahf mov dec imul mov xor (bad) cmp xchg mov jmp jns mov add or inc bound mov inc arpl movntps sbbl lahf mov dec imul xor mov xor insl mov aaa push jo test cmp stos (bad) jecxz sbb scas int3 jmp js mov jmp fcompl rolb sbb lods leave add out and aam dec add stos (bad) jecxz sbb push jno stos (bad) jecxz and pop ja mov ljmp mov ljmp mov ljmp mov ljmp mov jmp js mov out or inc pusha jge mov out or inc popa jge mov out or inc popa jge mov out or inc popa jle mov lock inc popa jle mov out or dec gs sahf mov dec gs add into or jo lods lret pop cmp jbe scas int3 call js mov in or mov out adc mov dec test notb das dec push notb dec push mov xor xchg xor xchg ss outsl mov aaa push jo test cmp mov cmp mov and pop js mov ljmp mov out or inc popa jle mov lock inc arpl mov inc arpl movntps sbbl sahf mov dec push movsb rcr push xor jmp lods leave out pop cmp xchg scas lret and pop ja mov ljmp mov jmp sub jg mov inc arpl mov dec add adc lods imull insb mov rclb dec mov adc mov ds ja mov jmp jns pop mov mov xor mov ss jo test jmp sbb mov out or inc pusha jge mov out or inc popa jle iret add add add cmove cmp sub jle mov lock test xor repz mov dec push mov xor xchg dec imul xor mov push jo test cmp lea cmp mov cmp nop lods leave in push cmp fcompl push mov sub and int push and pop jns mov jmp and pop jnp mov aad push sub sbbb dec gs adc push insl mov cmp mov cmp nop lods leave in push cmp xchg lods lret pop cmp jne scas lret and pop ja mov jmp js mov in or inc popa jge testb add mov add add dec imul xor (bad) sbb push jno stos enter and jg mov dec sbbl mov das dec push notl dec push mov xor mov push jo stos (bad) jecxz sbb push jae lods leave out pop cmp lret call ja mov ljmp mov jmp and pop jnp mov inc bound mov inc arpl cvttps2pi sbbl xor mov xor insl mov cmp (bad) lods enter cmp enter mov xor mov ss outsl mov cmp (bad) lods leave out pop cmp jns mov in or inc pusha jge mov lock popf mov dec data16 lahf mov dec push clc adc movsl rcll ret add scas lret out and pop ja mov addr16 sbb insl movsb ficoml push xchg jmp jnp mov out or mov dec imul mov xor outsb mov ss outsl mov aaa push jo test cmp jne scas lret out and int3 jmp js mov ljmp pushf mov inc sbbb dec push mov xor xchg dec insb mov jnp in and movsl ret sbb outsb mov aaa push jo lock fwait mov inc sbbl add sub mov dec push mov mov xor mov cmp mov and pop jbe mov jmp jns sbb jmp insb mov ss outsl mov notb das dec imul mov push dec mov icebp daa pop lahf fimul mov int3 sbb cwtl mov out or inc popa jle mov repnz sub fcoms dec jl mov inc arpl movntps sbbl add cs je lods lret pop cmp jp mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov lock pushf mov dec push notl das dec push add add add add or int3 ljmp xor ret hlt and mov mov into das pop test xor mov lret sti sub mov pop xchg (bad) hlt es mov dec movsb jmp push add pop jnp mov out or data16 lahf mov dec test notb cs test notl dec push mov xor mov xor mov push outsl mov ss outsl mov xor (bad) loopne sbb ret loop sbb push jo test aaa push je lods leave out pop cmp xchg lods lret push cmp xchg lods lret push cmp nop lods leave in push cmp (bad) lods enter cmp (bad) stos enter cmp int push and pop add add mov jmp ja mov ljmp mov pop mov mulb pop nop lret add jae flds add pop mov icebp and test xchg mov fnsave jecxz sbb lods lret and int push and jns mov icebp push sub sbbb dec andl dec push stc adc movsl ret mov hlt adc dec push cld sbb outsb mov xor (bad) loopne sbb push outsl mov aaa push jo test aaa push jo test cmp nop lods leave out pop cmp je lods leave out pop cmp je lods leave out pop cmp nop lods leave in push cmp nop lods lret pop cmp imulb pop jnp mov push push mov add inc popa jge mov lock pushf mov inc sbbb dec gs sahf mov dec insb mov add cmp int3 call js mov ljmp mov jmp and pop jp mov in or mov lock pushf mov dec sbbl sahf mov dec andw dec push notl xor cmpsb ret sbb insl mov xor (bad) loopne sbb push outsl mov aaa push jo test cmp lea cmp int3 jmp ja mov push xchg fdivrp sbb xchg mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jl mov dec sbbw cmc adc or imul jmp dec jl jmp jmp pop mov repz pop pop imull fs enter or xchg sti aaa jo add mov push inc js out and lahf loopne dec (bad) mov mov ret (bad) mov mov adc stos fist inc jl loop dec jg in push mov (bad) sti xor aad inc jg std cmp jecxz pop xchg enter scas lock rolb jae fimull inc cmpb inc js in push xchg into push inc jl stc cmp lock cmpsl fist push xchg int3 or cmp fistp dec xchg or mov adc push xchg aad pop fwait xlat adc jb std cmp pop fwait aad dec test (bad) cmp (bad) adc mov push inc ja fisttpl dec mov add add dec xchg jmp xor (bad) loop sbb push jb stos enter cmp xchg scas lret out and int3 jmp jg mov dec sbbl outsl mov cmp (bad) lods enter cmp xchg scas lret call ja mov ljmp mov out or inc popa jle mov lock popf mov dec data16 lahf mov dec push clc adc test loop sbb push jno stos enter cmp xchg lods lret and pop ja mov jmp jns mov in or mov out or inc sbbl xor int push and pop jns mov jmp and pop jnp mov in or mov in or mov add inc arpl punpckhwd out sub fcoml inc jns fstl arpl sub sbbb data16 xor (bad) aaa add pop jp mov out or inc popa jle mov dec gs lahf mov dec push movsb rcr pop aaa push jno stos (bad) in sbb lods lret and into jmp and pop jnp mov out or inc arpl adc dec push cld sbb push outsl mov cmp (bad) lods leave out pop mov add mov sub mov mov adc adc jns fisttpl aas jo aad outsl mov mov fwait int3 std cs xchg enter test mov mov ret pop (bad) (bad) repnz sub nop (bad) stc sub nop (bad) stc xor aad aas jbe loope dec jge loop dec jl jecxz dec jge out dec xorl mov mov adc sbb mov sbb add lret lcallw lahf roll cmp cmpsb fisttpl inc jp loopne inc jns fisttpl inc jb fimull inc je ficom inc jp ficom inc js ficom inc js ficom inc jge jmp cmc es xchg int3 add outsb mov scas loop push mov add popf rclb push test mov movl xor cltd lret sti sub leave add outsb cmpsb jecxz dec jle loop inc jg in es nop lret add insl movsl fsts dec jg lock lret add push (bad) inc jnp in dec mov (bad) or sub lcall add imul (bad) mov ficom inc jnp in dec xorl out push mov mov adc insl mov subl mov scas loopne (bad) xlat and cmpsb out mov mov sbb test mov and ret jo sbb loop jo xor stos ljmp push insl mov cmp nop lods lret and int3 jmp add (bad) adc mov in es pusha jge mov lock inc arpl mov dec gs sahf mov dec push clc adc dec outsl mov cmp (bad) lret pop push nop ret cld aaa jno in or inc popa jle mov inc sbbb dec test bound add add mov dec imul xor insl mov ss jo mov dec imul xor (bad) and dec xchg mov push insb mov xor (bad) add and jns mov in or inc pop jnp mov out or inc bound adc dec imul mov xor outsb mov sub aas outsb lahf aam inc je loope inc js out dec xorl xchg enter popf into or test mov lods jmp pop enter out dec test lods loopne dec (bad) mov es nop (bad) pop pop repnz mov rolb outsl movsb loope dec cmpl sti cs xchg lret add jo ficom dec jle cmc sub rolb cmp mov sub rolb sbb sub rorb je or int3 add mov int3 sbb fwait mov dec imul xchg push outsb mov cmp add xchg mov in or inc pusha jl mov lock mov xor xchg push stos std inc test shr or inc bound mov dec sbbw dec insl mov aaa push jo stos (bad) in push cmp xchg scas lret and mov aam adc dec test notb das dec push cld sbb (bad) aaa push jo test cmp (bad) lods enter cmp nop lods leave out pop cmp jne scas add call jns mov in or inc pop jnp mov out or inc pusha jge mov out or inc popa jle mov inc sbbl lahf mov dec imul xchg xor xchg xor mov add jbe fisttpll cmp pop jl,pt loopne dec jge in push mov xor push jae lods leave out and jbe scas int3 jmp jns mov jmp and pop sbbb dec data16 sub data16 mov ss jo test cmp nop lods lret and shr or inc bound mov dec gs sahf mov dec test clc adc movsl ret sbb (bad) aaa push je scas lret and pop ja mov jmp and pop jp mov in or inc pusha jge adc mov sbb movsb ficom inc jns loopne cmp xchg (bad) std mov je in dec jns fisttpl cmp jo,pt int xor rolb xor (bad) lock add pusha xchg (bad) pushl popf (bad) adc movb xchg sti xor call out daa pop cltd lret cli cs xchg (bad) imull pop xchg (bad) cli cs cmpsl fist dec xchg mov imul mov sub into add push roll pop pushf aad inc jg stc das outsl mov mov and mov repnz mov and (bad) pusha xchg leave (bad) cmp jmp adc mov xlat cmovb add fmuls jne,pt fist mov pop aas jns jmp fs (bad) adc ret add movsl fistl pop (bad) ret (bad) cmp arpl add jns repnz test pop pop cltd roll cmp imul jle loop inc je (bad) add cli sub (bad) icebp and add sbb xor rorb xor aad inc jl hlt sub pushf aam inc jnp in and xchg rorl inc jbe out pop xchg leave add outsb cmpsb fstl xor fcoms dec jg lock pop xchg into push jbe,pt sub mov out and mov enter (bad) hlt es mov int3 push cmp ljmp lock nop mov ret jo rolb xor cwtl roll cmp xchg inc mov or add (bad) inc stos (bad) repz test repnz sub sbbl fdivrp sbb (bad) sbb push jno stos enter cmp xchg lods lret and jge mov out or inc bound mov lock pushf mov inc arpl pop js mov in or mov out or andw dec test notl xor xchg xor xchg dec imul sbb push jno stos lret and or inc jae scas lret call js mov in or mov out or inc bound mov dec imul mov xor insl mov xor ret loopne sbb push outsl mov add loop sbb push jno stos enter and pop jp mov in or inc pop jl mov out push jo lock mov mov test popf into (bad) cs xchg int xor iret add imul mov (bad) repnz mov adc push cmp roll cmp aad cmp rorl cmp into add xchg (bad) stc sub imulb pop mov repnz mov mov pop inc jnp cli cs xchg leave cli sub mov stos fimull add test or jno in pop xchg into or out sub (bad) adc mov loopne dec test enter mov stos fcoml inc add cmp cmova sti cmp ficomp pop sahf ficomp pop sahf fstpl push xchg rclb push cltd aam push (bad) pop inc add add add divb jno in sub test out add jae lock insb test and out pop xchg ret repz push mov cmova jmp sub (bad) cmp aam dec test cli jp,pt divb sar mov dec test clc adc movsl ret sbb push outsl mov ds js mov ljmp mov in or mov out or inc popa jle mov inc sbbl lahf mov aaa push jno stos (bad) jecxz sbb push jb stos enter jne pop sub sbbb dec test clc adc dec push movsb rcr pop popf hlt adc dec imul xor insl mov aaa push jno xor into jmp add add mov in or inc pop jl mov dec data16 push xor mov xor insl mov aaa push jo test cmp mov je clc xor lret out or inc bound mov dec sbbl mov xor mov xor stos loope inc mov adc test notl xor xchg xor mov ss outsl mov cmp stos (bad) in sbb mov ljmp lcall bound mov dec sbbl mov xor xchg ss jo test cmp mov mov sub jge mov add add push sub sbbb dec andw push outsl mov push cmp xchg lods lret pop cmp xchg lods lret and lret call ja mov jmp jnp mov in or inc pusha jge mov sbb cvttps2pi (bad) lahf mov dec push notl dec push sbb rcll pop xchg int cmp aad cmp push jae lods leave out and jbe scas int3 jmp jnp mov in or inc popa jle mov icebp or popf mov dec push movsb rolb (bad) sbb push jno stos (bad) in sbb lods leave out and jbe scas int3 jmp js mov in or mov dec gs lahf mov dec push notl dec push mov add stc push xor mov ss outsl mov cmp xchg scas int3 call js add inc popa jle mov lock and jecxz and cmpsl loop inc jbe aam push (bad) adc fmull inc js (bad) or sahf int3 in or inc pusha jl add sahf mov dec push cmp ret (bad) sbb (bad) loopne and jbe scas lret out and pop ja mov jmp js mov jmp and jns mov in or inc pop jnp mov in or inc pop jnp mov inc arpl verw dec push notl xor xchg xor xchg cmpsl loopne imul notl dec imul mov xor outsb mov add std sbb push jo test mov ljmp mov out or inc bound mov dec data16 lahf add (bad) push xor mov push insl mov ss jo test cmp xchg scas lret out and xorb sbb mov push push mov es bound mov dec gs lahf mov push insl mov xor (bad) aaa push jo test cmp (bad) lods leave in pop cmp xchg mov jmp jns mov out or inc popa jle mov idivl pop jnp mov out or sub sbbl mov xor mov xor mov cmp (bad) stos enter cmp xchg scas lret and int3 add add add xchg mov ljmp mov in or mov icebp or popf mov dec andl stc push xor mov sub pop xor mov aaa push jno scas int3 jmp js mov in or mov out or inc popa jle mov dec sbbl mov das dec insb mov jbe out sub mov inc arpl or mov out or inc arpl cli pop xor outsb mov cmp xchg fsts dec cmpl and jle add imul xchg xor mov cmp xchg scas lret call js sbb into in or inc pusha jge cltd mov out or inc arpl movntps sbbl movsl ret pop xor insl mov insb stos out jl mov xor (bad) ss jo test cmp nop mov jmp and pop jnp mov in or inc pusha jge mov out or inc bound mov inc movsb (bad) in sbb lods leave out lcall test notl xor xchg xor mov push insl mov aaa push jo test cmp xchg scas lret call ja mov jmp jns mov in or pushf mov dec sbbl mov xor insl mov xor (bad) loop sbb push jb stos enter add add cmp xchg lods lret and int3 jmp js mov out or inc popa jge mov lock pushf mov dec gs lahf mov dec add ret pop xor insl mov inc js and iret in or inc pusha jl mov out or inc popa jle mov lock pushf mov inc sbbb or imul mov movsb xlat or push lret popa xchg enter jbe scas lret call js mov jmp and mov out or inc pusha andl mov iret out or inc popa jle mov lock add das dec imul mov cmp (bad) stos enter cmp xchg scas lret call add pop ja mov jmp jns mov jmp and mov in or inc bound mov dec sbbl mov cmpsl fistp pop lcall add (bad) sbb (bad) aaa pop jne scas lret call ja mov ljmp mov sub sbb scas lret call ja mov ljmp mov in cvttps2pi andl dec push notb xor mov xor xchg xor mov xor (bad) jecxz sbb push jb stos enter cmp xchg lods lret and jne scas lret call ja cwtl mov out or inc popa jle mov lock lahf mov dec push notl dec push movsb rcr push xor mov xor (bad) loopne sbb (bad) push cmp nop lods leave out pop cmp jne scas lret call ja mov jmp jp mov in or inc add pushf mov dec test xor mov xor xchg dec insb mov xor insb mov xor outsb mov cmp nop lods leave out pop cmp jne scas lret out and int3 jmp js mov jmp and pop jp mov in or inc pop jl mov inc sbbb dec sbbw cld sbb (bad) ss outsl mov and jne scas lret call jnp mov out or inc pusha jge mov out or add sub fwait mov dec sbbl sahf mov dec andl adc movsb rcr push xor mov xor insl mov xor arpl (bad) xor xchg aaa push jo test aaa push jno stos (bad) in sbb lods leave in push cmp nop lods leave out pop cmp jne int3 add daa dec sbbw dec push notl xor mov xor xchg out inc arpl adc dec push std sbb push jo stos (bad) jecxz sbb rcrl push jbe mov ljmp mov in or inc pop jl mov out or sub mov push insl mov ss jo test add add lcall push jae lods leave out and or nop fldl push cmp xchg scas lret call jl mov out or inc popa jge mov out or inc popa jle mov lock inc bound mov inc sbbb jne scas lret or inc bound mov xor jo frstor arpl test push outsl mov cmp mov cmp nop lods lret and jl mov out or inc bound mov inc sbbl mov das dec push clc adc dec push mov xor (bad) aaa push jo test cmp xchg lods lret and jbe scas int3 call js mov jmp add inc popa sbbl lahf mov add dec test notb das dec imul mov xor vpaddd lods leave out pop cmp xchg scas int3 jmp js mov ljmp mov in or mov in or inc bound mov int3 (bad) das pusha xchg xabort pop mov clc sub nop (bad) sti xor cld sub sbbb dec sbbl lahf mov push insb mov xor (bad) loopne sbb push outsl mov aaa push jo test aaa push jno stos (bad) jecxz sbb push lcall call js mov jmp and mov icebp push sub sbbl mov xor mov and pop js mov jmp and add cwtl mov out or inc bound mov pop lcall push xor outsb mov rolb jl out sub jbe ljmp mov add inc js call push cmp add outsb test adc mov ljmp lahf fsts inc jl in mov imulb pop pushf xlat push pop xchg stc aaa outsl test pop push pop imulb push jae aad inc test sti xor fmuls inc jl in sub in daa mov iret or add int dec xorb sub test cmp mov cmp xchg lods lret and jne scas int3 call js mov jmp and pop jns mov in or inc pop jl mov icebp push sub push testl add add add dec imul xchg dec imul xor insl mov ss jb stos (bad) in sbb lods leave out pop cmp jne scas lret out and int3 jmp js mov jmp and pop jns mov repnz scas in pop cmp jne scas add in or inc pop jl mov out or inc bound mov inc sbbb dec sbbl movsb rcr push xor mov fwait loope push cld sbb ret loopne sbb ret loopne sbb push jo test cmp jne scas int3 call ja mov jmp js mov ljmp mov in or mov in or inc bound mov lock add andl adc dec andw dec test sti cmp in push cmpsb ret sbb push jo test cmp xchg lods lret pop cmp je lods leave out pop cmp nop lods leave out push mov stc cmp roll xor adc dec imul cmp nop lods lret and inc pop jl mov out or inc arpl mov dec test clc adc dec imul xor leave out ja ljmp scas add xchg mov jmp js mov ljmp mov ljmp mov lock fwait mov inc addb mov dec imul mov push insb mov xor insl mov cmp add push jno lret or lea cmp (bad) stos enter cmp (bad) lods leave add pop and jns mov jmp and mov inc arpl cvttps2pi (bad) sahf mov dec sbbw dec test notb xor mov xor mov xor (bad) sbb push jo test cmp stos (bad) jecxz sbb lods enter cmp xchg lods lret and pop jns mov in or mov out or inc pusha jle mov out or inc bound mov lock pushf mov inc andl ret add jb fstl dec xchg add bound inc pusha jl mov out or inc xchg lods lret and jne scas lret call jge add add inc popa jle mov lock pushf mov inc sbbb dec add mov xor xchg aaa push jo test cmp mov cmp (bad) lods leave in push cmp nop lods leave out pop cmp xchg lods lret and jns mov in or mov out or inc popa jge mov out or inc popa jle mov lock inc bound mov inc arpl mov dec sbbw dec push fdivr adc movsl ret sbb push jo stos (bad) jecxz sbb iret in or mov dec sbbw dec push notl xor (bad) cmp stos (bad) in push cmp nop lods lret pop aas pop js xchg mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or mov add or fwait mov dec test notb xor xchg xor xchg dec push mov xor mov dec outsl mov aaa push jo test aaa push jno stos (bad) jecxz sbb push jb stos (bad) in sbb stos (bad) in sbb stos enter cmp int3 jmp stc sbb push jb stos enter cmp nop lods leave out and int3 jmp js mov jmp sub jle mov lock fwait mov inc sbbb xor mov mov sbbl add add xor mov xor insl mov ss outsl mov ss jo test loop sbb push jo add aas pop js mov jmp and pop jp mov in or mov in or inc pop jnp mov out or inc pop jl mov out or inc pusha jge mov dec sbbl popf mov dec sbbl adc sbbl movsb rcr push xor mov xor mov xor insl stos in sbb xchg enter lea cmp (bad) mov ljmp or sub stos fsts mov int das scas add sbb and ret pop nop int3 sub add add (bad) xor daa pop xchg ret push xchg or push mov negl cmp stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jno stos (bad) in or inc pusha jl mov out or inc popa jge mov out or inc bound mov lock pushf mov inc arpl push sub (bad) mov xor xchg xor xchg xor xchg xor xchg xor mov xor mov xor insl mov xor mov xor mov xor mov xor mov cmp stos (bad) jecxz sbb push jno add outsb mov lds inc lahf loopne push insl mov push cmp xchg lods lret add cmp shr or inc popa jle mov lock inc popa jle mov lock inc bound mov lock pushf mov mov sbb cmpl add sbb push outsl mov cmp (bad) stos enter cmp nop lods leave out and jne scas lret call jbe mov jmp jl mov out or inc xchg or (bad) data16 leave sbb jl mov lock pushf mov inc sbbl movsb rcr push xor mov xor jo test cmp mov cmp mov pop ja mov ljmp sub sar jg jmp mov dec push notl xor insl mov sbb push outsl mov pop jbe scas int3 call icebp or aas bound mov dec andw dec imul mov cmp pop ja mov jmp js mov jmp and mov in or inc pop jl mov out or inc pusha jge mov out cvttps2pi sbbl lahf mov dec test notl dec push mov xor insl mov ss outsl mov cmp nop lods leave out pop cmp jne scas lret and jne scas lret call ja mov jmp js mov jmp and mov out or inc bound mov inc arpl cvttps2pi (bad) lahf mov dec push testl add xor insl mov cmp (bad) lods enter cmp xchg scas lret and int3 jmp js mov jmp and pop jns mov in or mov lock inc bound mov fdiv adc dec test cmc adc dec imul xchg xor mov push jo test cmp and jg mov dec gs sahf mov dec push cli push xor mov ds js mov jmp and pop jp mov in or mov in or inc pusha jge mov out or inc popa jle mov out or inc bound mov cmc adc dec test notl xor mov xor xchg dec insb mov xor insl add add mov ljmp mov jmp and mov in or mov out or inc popa jge mov lock inc arpl mov dec imul mov cmp jne scas lret out and pop js mov jmp and pop jp mov in or inc pop jl mov dec data16 lahf mov dec test notb das dec push clc adc dec push mov xor mov xor enter cmp nop lods leave out pop cmp jne scas lret call ja mov ljmp mov in or mov lock xlat and (bad) lahf mov dec test notl xor xchg xor mov add cli pop xor insl mov and lret jmp ja mov ljmp mov jmp and mov jmp and pop jp mov in or mov lock fwait mov lock inc popa jle mov fdiv adc mov dec push notl dec push notl push insl mov ss jo test aaa push jo test aaa push jo test cmp mov cmp mov cmp lret call ja mov ljmp mov ljmp mov jmp and pop jp mov in or mov out or inc bound mov inc bound mov lock fwait mov lock inc bound add lcall bound mov repz mov xor xchg xor fdivrp sbb xchg (bad) cli sub fmuls cmp insl (bad) hlt es nop leave add insl fwait lret sti sub ret hlt es mov add out dec jg jecxz dec xchg mov (bad) push xchg ret imulb cmp xlat or mov sbb ret imull dec mov fcoms dec (bad) mov sbb ret xchg jecxz push scas out push cmpl or fildl test xor mov xor xchg jle call (bad) sbb push jno stos (bad) jecxz sbb push jae lods leave in pop cmp xchg lods lret pusha xchg movl add add jne icebp cs fnstenv lea (bad) adc or mov mov das dec push stc push xor mov mov cvttsd2si andl push outsl mov cmp stos (bad) in sbb lods enter add pop jns mov ljmp mov in or inc pop jnp mov inc sbbl popf mov dec data16 lahf mov dec sbbw dec push notl das dec insb mov xor (bad) ss outsl mov cmp mov cmp mov cmp nop lods leave call ja mov jmp js mov in or mov in or inc pop jnp add mov out or inc pusha jge mov out or inc popa sbbl lahf mov xor mov push insl mov ss outsl mov aaa push jo test cmp jne mov or mov pop push mov les push jae lods leave out add inc pop js mov jmp and mov out or data16 lahf mov dec push notb xor mov xor xchg xor mov xor insl mov cmp nop lods leave out pop cmp je scas lret out and lret call jbe scas int3 call ja mov jmp jnp mov in or inc popa jge mov out or inc popa jle mov dec sbbl repz mov dec andl push xor mov xor insl mov sbb stos enter cmp (bad) lods lret and jne scas lret out and iret in or mov in or gs icebp sub mov mov mov add and mov or addr16 (bad) sti pop fwait call ljmp dec jge out dec jnp in dec test mov adc mov pop push mov aas fwait rorb jne,pt fstl dec mov std addr16 inc jle hlt xor into pushl imul shr dec js aad xor out inc insl pushf lret cli daa push test lahf int3 sti sub mov adc mov adc stos fimull cmp popf aam inc jge lock and ret imull lahf fistpl push mov stc das xchg lret jae fist js (bad) sbb in push (bad) add mov aas js call shr or inc pop jl mov out adc mov dec sbbw dec test notb das dec push notb das dec push fdivrp sbb insl mov cmp (bad) stos (bad) in sbb gs lret cli daa pop movsb (bad) jecxz sbb push jae lods leave in dec subb rorb test xor jge mov out or inc arpl mov inc sbbb dec gs lahf mov dec test notb xor (bad) loopne sbb push outsl mov aaa push jo stos (bad) jecxz sbb add add push jae lods leave in push mov imulb stos add test push jb stos enter fcoml mov in dec add mov push pushf sti inc test repnz mov fcompl push xchg iret adc add mov in sub loop pop xchg rorb test add push pop mov ret gs aad ss in and fcoms push mov or cmp repnz push mov or iret adc (bad) sbb adc xchg int3 add (bad) (bad) cmp imulb dec xorl xor iret add sub dec test in pusha sahf xlat push inc jp add jne jecxz xchg hlt das push xchg lret pushl xchg int add jp imulb push in daa popa popf fstpl pop xchg rcll mov or mov incb mov in and popa popf ficompl pop xchg int3 or rolb dec cmpl insl test rolb js cli aas (bad) ret jns clc cmp dec xchg lret cmpl movb xorl mov enter lods in pop mov in cs fistpl pop xchg iret add xchg iret push inc test add je icebp sub ljmp mov or jns,pt hlt xor jmp sbb rorb dec mov add inc mov add jle imulb push mov idivl jnp lock scas ljmp xchg xlat adc nop rorb dec jg out das outsl test fstpl pop xchg rorb inc add scas out sub fcomps push pop add mov in and xchg lret cmovnp mov xor in pushf add mov loope dec test int3 add imul add ret cld aaa jp pushl ja cmc xor jmp popa ficompl dec mov cld cmp jb in pop pushf aad inc xchg xlat add pop xchg rclb push (bad) jl repz leave pushl imul mov divl insl lods jmp pop popf loopne pop xchg into adc into or (bad) jo divl push in daa pop mov ficompl xchg into adc movb mov mov out popf fadds cmp aam cmp lret pop mov out and mov add push add ljmp add mov cmp divl jnp add add pop push xchg out cmp clc aaa ja cmc xor mov cs jmp xor repnz jnp sti cmp mov add ret test add mov cmovg ficomp push lods out sub jne out dec mov add outsb mov rorb cmp pusha xchg xlat adc sarb add sub ficom dec cmpb or mov adc repnz pop xchg aam dec jle in dec xchg lret (bad) cs xchg ret push xchg out inc jns loop pop xchg ret imulb pop mov sub push add (bad) imulb pop nop ret stc sub xchg leave pushl cmp test les jb pop pop pop cli sub out sub pushf xlat or xchg add mov icebp push xchg aam inc je cli xor mov sbb push outsl mov cmp (bad) lods enter test daa imul ljmp mov jmp and mov cmp mov adc xchg enter movsl fisttpll adc lods loope inc outsl sahf int3 cli sub mov adc fimul fdivr sbb insl mov ss outsl mov pop cmp xchg mov in or mov out or inc pusha jge mov icebp or test xor xchg xor xchg push jo test cmp stos (bad) jecxz sbb lods enter and pop js mov in or mov in or inc pop jl mov icebp push sub sbbb add dec sbbl sahf mov dec andw dec test notl xor movsl ret sbb outsb mov ss outsb mov aaa push jo test cmp stos (bad) jecxz sbb push jno stos (bad) in and jne scas lret jmp js mov ljmp mov jmp and mov in or mov in or add jg mov dec andl adc dec andl adc dec imul outsb mov ss outsb mov cmp (bad) lods enter cmp nop lods leave out pop cmp jne scas lret pop add jp mov in or inc pop jnp mov out or inc pusha jl mov repnz mov add add adc dec push notb xor mov xor mov xor insl mov ss jae lods leave out pop cmp xchg scas lret out and jne scas lret out and int3 call jbe scas int3 in inc (bad) mov jmp and pop jle mov inc arpl cvttps2pi (bad) sahf mov dec test stc push xor mov scas in arpl jp mov out or inc pusha jl mov lock fwait mov dec sbbl xchg xor mov aaa push jo test cmp stos (bad) in sbb stos enter cmp js mov ljmp mov in or inc pop jnp mov icebp or add sbbb sbbl lock jb lods leave in push cmp xchg lods lret and jbe scas lret in or inc pop jl mov out or outsl (bad) lods leave out pop cmp jne scas lret out and jne mov jmp jbe scas int3 call jbe mov in or inc pop jnp mov in or mov out or cwtl rorl inc mov xor mov xor insl mov cmp add fsubs pop xchg fistl pop movsl (bad) sbb push jno stos (bad) in push cmp add (bad) fdivr sbb push jb stos enter inc pop jns mov in or mov out or inc pusha jge mov out or inc popa jle add push stc adc test loope add add aaa push jo stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out pop cmp jne scas lret call ja mov ljmp mov lock pushf mov dec sbbl mov xor xchg xor xchg push jno stos (bad) jecxz sbb lods lret pop cmp jbe scas lret call js mov ljmp mov in or mov das dec imul xchg push insb mov xor lods leave out pop cmp jne scas lret call jp mov out or inc pusha jge mov lock pushf mov inc sbbb xor xchg push insl mov add loop sbb push jb stos enter cmp xchg lods lret and int3 jmp js mov jmp and pop jp mov in or inc arpl adc dec test clc adc movsl rcr pop xor insl mov xor (bad) cmp xchg mov jmp jl mov icebp or popf mov dec imul xchg push insb mov ss outsl mov cmp jne add inc pop jnp mov out or popf mov dec andl add xor outsl mov aaa push je lods lret and pop js mov ljmp mov lock sub sbbb dec data16 lahf add fdivrp pop jl stc sub add mov scas fist aas jno iret add fs out inc jae (bad) add stos fimull or push lret pop mov in daa pop cltd into add jns ljmp jno aad cmp (bad) or jnp in sub fstl push nop lret or jg repnz fstps nop leave add sub in pop lcall das addr16 pop xchg rorb dec mov stc xor push mov add je out pop lcall xor add loop push cwtl rcll mov (bad) aaa outsb scas call adc roll jge divl add jmp adc enter sar imul lock xchg rolb jb,pt (bad) jno,pt (bad) or insl mov outsl movsb add add or jbe out daa pusha fwait iret add inc jp cmc xor sub adc rclb push nop leave pop inc add roll cmp mov sub rcrl xor rorb test cli ss in and cltd fsts push (bad) int3 or sar je in sub icebp sub pop popf fstps pop xchg rclb dec mov stc sub inc jae fstl inc ja jecxz pop xchg lret jle repz lret addr16 into add xchg (bad) cld cs (bad) (bad) cli sub xchg enter xchg enter test in push test stos fmuls cmp decb mov pop mov movsl aad add lret or jae or (bad) sbb push jo stos (bad) in push cmp xchg lods lret and jge sbb mov sbb fstl add add cmpsl xlat add icebp and mov mov scas in sub int xor cmpsl fisttpll stos fisttpl fimul mov and mov mov (bad) push push xchg test (bad) imul mov lods fisttpll push cmpsl loop inc jb roll xor nop sar pop mov jecxz inc jbe rorb cmp and iret or mov push push (bad) (bad) outsb test sbb jl,pt out and (bad) push iret add push jo in and mov iret or jo ljmp cmpb movsw add sub pop pop xchg rorb inc (bad) (bad) outsl scas hlt xor pop cwtl rorl inc cmpl into or add add (bad) aaa insb movsb in and stos repz fstpl popa test cmp mov loope push xchg enter leave (bad) cmp pop cwtl (bad) jnp call push arpl push arpl or jg repnz mov sbb inc jg adc sub lods out pop xchg lret push inc jl out das outsb mov aas mov and fimull xor or jne ficomp dec xorl cmp xchg mov in or mov out or inc gs lahf mov dec test notl xor mov sbb (bad) loopne sbb push jo test aaa push jb stos (bad) in add pop jp mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov lock add sub jg mov dec andl mov ss outsl mov cmp (bad) stos enter cmp nop lods leave in push cmp xchg scas lret and jnp mov in or inc pusha jl mov out or inc popa jle mov inc arpl mov dec sbbl lahf mov dec push mov xor mov push insb mov xor vpaddd aaa push jo test cmp lods lret and int3 jmp ja mov jmp pusha jge mov out or inc popa jge mov out or pushf mov dec push fdivrp pop xor mov xor insl mov ss outsl mov loope sbb push jo test cmp mov and pop jp mov out or inc popa jle mov lock pushf mov dec sbbb dec sbbl mov xor mov xor insl mov xor vpaddd aaa push jno stos (bad) in push cmp xchg lods lret and jp mov in or inc pop jl mov out or inc pusha jge mov inc sbbl mov das dec imul mov ss outsl mov aaa push jno xchg scas lret out and int3 jmp js mov jmp sub jg mov xor xchg push jo stos (bad) jecxz xchg add add roll xor lret add data16 int dec sbbl push insb mov xor add jbe or inc sbbl lahf mov dec push notl dec imul mov cmp (bad) stos enter cmp xchg lods int3 call js mov jmp and pop jnp mov out or inc popa jle mov dec test notl dec push movsb rcr pop xor mov aaa push jo test cmp xchg lods lret and jp mov in or inc pusha jge mov out or inc arpl mov dec gs lahf mov dec push stc adc mov add fwait mov dec (bad) rorl pop mov cmp xchg scas int3 add push and jp mov in or inc bound mov dec imul xor outsb mov aaa push jb stos enter cmp xchg scas lret out and pop ja mov jmp and pop jp mov icebp push sub (bad) sahf loop mov test adc mov sub andl dec insb mov cmp mov sub hlt adc dec imul mov xor vpaddd cmp stos (bad) in sbb lods leave in and shr or inc pusha jge mov out or inc bound mov dec sbbl lahf mov dec push notl xor push jno stos (bad) in add iret add je repz std xor fsts add push int3 adc jmp out inc mov mov ds ret or jae clc push mov andw dec imul xor insl mov ss jo stos (bad) in push cmp xchg mov jbe clc adc aas pop jl mov lock inc arpl adc mov dec insb mov ss jne scas int3 jmp js mov jmp and mov out or inc popa jle mov rcr sbb push jo test cmp xchg mov in or inc pusha jge mov icebp push sub sbbl mov das dec imul mov cmp ljmp sub push stc push xor mov add add sbb push jo test cmp out aaa jne adc cmpsb ret in pop cmp cmpsl ficom dec jg out es mov sbb sub push and jp mov in or inc popa jge mov icebp movntps mov xor insl mov aaa push jo stos (bad) in push cmp xchg scas int3 jmp jp mov out or inc bound mov dec push clc adc movsl rcr pop xor outsb mov aaa push jno stos (bad) in push cmp xchg scas lret out and or cmp enter mov lock ljmp mov cmp pusha scas divb insl cmpsb fist dec xchg and lea mov sub ret add xor into add aas jbe out xor (bad) add add sbb aad push xchg rorb dec xchg pop inc add bnd stc xor mov sub jmp fisttpll xor ficompl dec test fsts mov or mov or test clc aaa jbe jmp je hlt xor add lds inc xchg add je repnz ljmp (bad) ret push xchg in push test add and loope push xchg aad inc xchg add jno loope pop cltd rolb cmp ficom jbe,pt loop push cltd rorl inc mov add add imulb push jmp sbb mov adc int3 or cmp jno repz mov cs sahf loopne add rolb inc (bad) les cmp ljmp pop lcall inc jg divb mov jecxz pop xchg int3 push dec xchg out das jno jmp sbb aad dec test pop inc jl std cmp repnz out push xchg lret mov std cmp cli aaa ja divl push hlt das push xchg ficompl push mov adc add cmpl in sub cld xor dec (bad) lret add jg add jae cli xor popa lcall aas (bad) mov repz cmc sub popfw fistp pop xchg int3 pop dec xchg lock movsb in push mov pop inc js repnz cmpsb in bound ret js jmp push mov clc xor rorl aas ja clc xor jno icebp add add imul lcall inc xchg cld xor gs out pusha mov into adc jg fisttpl or je in sub int3 or int cmp in pop jns mov push cwtl fsubl push mov hlt and stc adc cmpsb ret loopne sbb push jo stos (bad) in push cmp xchg scas lret call jns mov in or inc pusha jge mov dec push clc adc movsl ret sbb sub lcall and pop jl mov out or inc arpl mov dec outsb mov cmp nop lods lret and sub jbe mov ljmp mov in or inc pusha jge mov hlt adc mov dec imul add stc pop add push jb lods leave add pop and pop jp mov out or inc popa jle mov icebp push sub test xor xchg push insb mov aaa push jo stos enter cmp (bad) lods in cmp xlat or lahf (bad) or cmp enter test jmp jns mov in or inc popa jle mov icebp cvttps2pi (bad) lahf mov dec imul (bad) stos leave sub cmp movsb roll xor iret add popf iret add lcall push aaa push iret add imul ret adc push jno lods lret and into jmp and mov out or inc bound mov dec gs lahf mov push insl mov aaa push jo stos (bad) jecxz sbb add add push jae lods leave in add inc pop jns mov aam sbb int3 (bad) ss loopne sbb push jo stos (bad) out and pop ja mov ljmp mov out adc rclb dec lods int pop and pop jnp mov out or inc bound mov dec mov push cltd iret add outsb movsb fcomps push xorb in push cmpl push jge and inc jns call (bad) lock movsb (bad) aaa pop jne scas int3 jmp jns mov in or inc pusha jge mov icebp cvttps2pi (bad) mov xor xchg cmp mov cmp xchg lods lret and jbe mov jmp jp mov in or inc pusha jge mov out or inc bound adc mov add das dec push stc push xor mov push cmp js mov jmp and pop jp mov in or inc sbbl jnp ss (bad) icebp and mov jmp push xchg mov pop dec jl loopne inc jbe fstl inc js fisttpl pop lea cmp rorl cmp fistl inc jno jecxz pop mov aam inc outsl mov (bad) hlt sub xchg (bad) push mov push cmp fistl xorl movsb ficoml mov mov mov rorb cmp dec sahf ficomp dec jg jmp repz fistp pop mov cmpsl (bad) inc jge loopne push xorl mov es cwtl aam dec xchg clc xor add cmpsb loopne push (bad) (bad) (bad) cmp out es xchg in aaa mov cwtl fsts mov and out sub (bad) loopne sbb push jb stos enter cmp ja mov jmp es pop jl mov icebp or sahf mov sbbl cmpsb ret loope sbb push jno stos (bad) in push cmp xchg scas lret out and pop ja mov ljmp mov in or inc pusha jle mov dec imul mov mov sub andw dec imul mov mov mov icebp push sub sbbl aam push sub sbbb dec push clc adc stos (bad) icebp push sub andl movsl ret add fdivrp sbb (bad) sbb push jb lods enter push xlat cmovns lods shr or inc add mov xor outsb mov cmp nop lods lret and js mov in or inc pusha jge mov lock ret inc jp sbb xchg (bad) stc xor das arpl add es cld sub sub and lods fstl and mov mulb push xchg fstps push mov adc (bad) or (bad) aas jbe out sub lahf jecxz cmpsl out imul loop movsb ficomp pop cwtl rorl dec mov pushl cs mov (bad) stc imul sti jle,pt icebp xor push fcoml dec cmpb push xchg rorl inc jl jmp outsb test add push dec test call sbb lret or les inc cmpl mov and rcll push xchg lret push dec (bad) rclb dec xchg icebp xor adc (bad) and adc (bad) incl movb cmpl sar jg add js divb jb out es cltd lret sti sub loop push mov add mov in push cwtl fcoms dec test in xor lods jecxz imul int inc jl add imul and sti dec jle jmp dec test cld xor xlat adc stos jecxz imul adc enter mov stos or test imulb insl stos out pop mov aam dec add inc jl add mov add jbe in sub stos jecxz pop lahf (bad) inc js repz jecxz addr16 pop lcall inc test add repz out xor jecxz bound enter mov out pop nop fcomps push mov or ret cld xor in and dec mov push inc test add ja imull fwait roll cmp test push dec xorl ficoml dec (bad) rorb dec add jbe,pt repnz push fcomps pop cltd rcll push pop add scas jmp push mov or in das imul ret add je icebp xor and popa fwait rorb cmp imul sbb into or ret sti jle,pt stc xor sub in pop pushf fcompl push nop rorb dec (bad) mov divb mov add xchg rolb adc ret add js clc cmp add sbb hlt xor into add mov cmc ss and lock mov or sar jns sbb hlt ss cmc xor idivl lds inc test sub pop dec (bad) into or int push xchg rclb push xchg aam pop lahf add es int3 or icebp xor icebp pop xchg icebp xor movsb testb adc fildl lret sub cmpsl ficoml push test sbb loop insb scas lock aad dec (bad) loopne popa movsb in bound int scas out pusha sahf (bad) cmp dec jle cld cmp lods in jge divl lods pop inc add xor fcomps pop xchg lret lods in pop (bad) or mov jecxz push mov idivl je or inc add mov add or dec scas jmp mov adc or insb sahf add or mov sbb and popf iret add xchg xbegin repz jbe cld xor in push mov fist inc jb xlat or in jge out push xchg lret add cwtl (bad) adc mov fmull aas add cli xor repnz xchg mov in or inc popa jle mov dec test notl dec imul ss je scas lret call jns mov in or mov out or inc arpl movntps sbbl dec imul mov cmp xchg lods lret call js mov jmp and mov icebp push sub sbbl add mov aaa push jo stos lret mov mov std inc jge dec push mov cmp mov cmp xchg lods lret and mov out or inc popa jg mov mov xchg mov in or inc pusha jge mov icebp push sub (bad) lahf mov dec imul cmp add and mov out or inc bound mov dec gs lahf mov dec imul mov cmp (bad) stos enter cmp jne scas lret call js mov jmp and mov lock pushf mov dec test notl dec push mov xor mov xor insl mov ss outsl mov add sbb push jne scas int3 call ja mov jmp and inc popa jle mov lock pushf mov xor xchg xor mov aaa push jno stos (bad) jecxz push cmp xchg lods divl imul xchg mov cmp xchg mov in or inc pop jl mov out or mov dec add (bad) sbb insl mov ss jo test aaa push jo test cmp mov cmp int3 jmp js mov ljmp mov in or mov in or inc pusha jge mov out or inc gs ret gs lahf mov dec push clc adc dec push mov xor mov xor outsb mov add add aaa push je scas lret out and pop js mov jmp and pop jp fwait mov inc fs sahf mov xor mov push insl mov cmp (bad) stos enter cmp xchg scas lret and push dec mov push xor mov xor mov add call jg mov dec gs sahf mov xor mov push insl mov ss outsl mov ss outsl mov cmp nop lods lret pop cmp jne scas lret and lret call ja mov jmp js mov ljmp mov out or inc popa jle mov lock inc bound mov inc arpl movntps sbbl add sbbb dec push clc adc dec imul xor mov sbb push jno stos (bad) in sbb xchg mov jmp jns mov jmp sub jge mov lock inc bound mov lock popf mov dec gs sahf mov dec test notb das dec push cli push xor mov xor outsb mov stos enter cmp (bad) lods enter cmp xchg scas lret and jne scas lret jmp jl mov sub xchg scas int3 jmp jns mov cmp icebp push xchg lret add test xlat repz mov push jno stos enter cmp xchg scas lret call js mov jmp and pop jnp mov out or inc popa jle mov icebp push sub sbbl cmpsb ret loopne sbb push jno stos (bad) in sbb xchg mov in or inc pusha jge mov out or sub mov dec insb mov xor ret loopne sbb push outsl mov cmp (bad) lods leave out pop cmp jbe scas int pop and pop jp mov in or popf mov dec data16 lahf mov dec add ret sbb push outsl mov cmp nop lods leave out pop cmp jne mov jmp and sti cmp std and jbe mov jmp jl sbb lahf mov dec imul mov cmp xchg scas lret and int3 call ja mov jmp and pop jp add add es pop jl mov out or inc arpl cvttps2pi (bad) lahf mov dec lods idivl shr or sub sbbl mov sbb push jo scas lret call jns mov in or inc pusha jge mov lock popf mov dec test notl dec imul xor jno stos enter cmp jne scas int3 jmp jns mov in add popf mov dec andw dec imul aaa push jno stos (bad) in pop cmp jne scas int3 jmp jns mov in or mov out or inc arpl adc rcr pop xor outsb mov cmp mov outsl mov sub add add pop cmp jne scas lret call (bad) pop xchg in cmp ja mov ljmp cmp sbb mov jmp and mov add adc dec push stc adc mov aas pop jns mov jmp inc mov out or inc popa jle mov inc sbbl aaa push jo stos (bad) loop sbb push jno stos int3 call ja mov jmp js mov ljmp mov shr or inc pusha jl mov out or inc popa jle mov inc sbbw dec push notl xor mov xor xchg dec insb mov xor mov cmp mov cmp nop lods lret out and int3 jmp and pop js mov ljmp mov jmp and mov lock inc bound mov icebp or pushf mov dec sbbl mov xor insl mov sbb scas int3 call ja mov jmp and mov out or inc popa jle mov icebp push sub sbbl pop lods in and mov push inc jns loope dec jbe out dec jg loopne dec test ret sub nop (bad) repnz xor out bound mov aam dec xchg mov mov sbb ret cli xor ficoml inc jne cmc sub xor fmuls inc jnp jmp push test mov leave pushl push out daa pusha lcall add ss fsts inc jle jmp pusha fldenv addr16 push mov cmc sub out and mov adc (bad) popa stos loop dec test add (bad) and add pushf mov dec gs sahf mov cmp and pop js mov ljmp mov in or mov in or mov out or inc popa jle mov hlt adc dec push notl xor mov xor mov push insl mov stos (bad) in sbb lods leave out pop cmp jbe mov jmp and mov in or inc pop jnp mov out or inc bound mov inc arpl mov dec andw dec imul clc daa pop mov repnz xchg negl aaa push jno add mov cmp xchg scas lret and into jmp and pop mov mov (bad) stos enter cmp xchg lods leave out pop cmp xchg scas lret call sti sbb stos enter mov sub adc add mov inc test inc stos stc sbb push jo test cmp stos (bad) in sbb lods lret and shr or inc pusha jge mov lock pushf mov inc sbbb dec gs lahf add dec imul xor lea cmp (bad) stos leave out pop cmp jne scas lret call ja mov jmp jns mov in or mov lock sahf mov push dec xchg ret sbb add add push outsl mov aaa push jno test cmp call xchg push jb stos enter cmp xchg scas lret and lret call js mov ljmp mov add or inc bound mov dec push (bad) sbb (bad) sbb push jb stos enter cmp jne scas int3 call ja mov ljmp mov out or inc bound (bad) lock adc push insl mov pop cmp jbe scas int3 jmp popa jle mov icebp push sub xchg xor outsb mov aaa push jno stos (bad) in push cmp xchg scas lret and pop ja mov ljmp mov in or loop dec test hlt adc mov add adc dec push mov xor mov dec insb mov xor insl mov and xchg rorb popa sbbl mov das dec imul xchg dec insb mov sbb push jbe mov jmp jns cltd mov out or inc bound mov inc sbbl lahf mov dec test notb xor insl mov xor (bad) add lods fmull inc jle icebp cmp sub imul outsl mov cmp xchg mov ljmp mov in or inc pop jl mov out or inc popa jge mov lock inc arpl mov dec sbbl mov xor add insb mov scas (bad) icebp push sub (bad) mov das dec push clc adc movsb rcr sbb push jno stos (bad) in sbb lods leave in pop cmp fstl dec xchg ret clc xor pop popa xchg int3 std xor int3 add arpl cmpsl add sub xlat or jmp scas jecxz add mov xor mov sbb mov add mov pop xchg lret int3 or dec jle in push test cld cmp test sbb (bad) imull cmp loopne push mov stc sub pushf ficom inc jp fist add mov fistl dec xorl stc xor mov cmc aaa je repz mov fstps push nop lret or ljmp pop jnp mov out or inc bound add add mov inc sbbl mov xor xchg xor mov cmp (bad) stos enter cmp (bad) lods enter cmp nop lods leave out pop cmp xchg scas lret and jbe scas int3 call ja mov aam push sub sbbb add mov xor xchg xor xchg xor xchg xor outsb mov insb mov insl cmpsl ficom dec test mov ljmp inc arpl adc andw cmp (bad) lods leave in push cmp xchg scas lret out and int3 jmp ja mov call ja mov jmp js mov out or inc add lcall bound mov lock pushf mov inc sbbl sahf mov dec imul xor insl mov xor (bad) loopne sbb push jo test aaa push jo stos (bad) in and jbe scas iret in or fwait mov inc arpl notl xor test xor xchg dec insb (bad) sbb push jb scas lret out and js mov jmp and pop jns mov jmp and xorl mov dec andw jnp or dec gs lahf mov dec push stc adc movsl ret sbb (bad) sbb push jb stos jmp cltd fsubs inc sbbl add hlt adc mov dec test notb das dec push notl dec push movsb rcr push xor mov cmp lods enter cmp xchg lods lret pop cmp add mov ficompl pop jge mov lock inc bound mov dec xchg xor mov sar jbe adc dec test notb xor mov xor xchg push jno stos (bad) in sbb scas int3 call jns mov jmp and mov out or inc pop jl mov out or inc popa jle mov icebp adc xor xchg push insl mov xor (bad) jecxz inc ja aad js,pt clc das gs pop and pop jp mov out or dec sbbl mov xor xchg xor mov xor (bad) sbb push jno stos leave out and int3 jmp js mov ljmp add mov lcall cmp (bad) stos enter cmp xchg scas lret jmp and pop jp mov out or inc popa jge mov lock sub sbbb sbbl mov das dec push cli pop xor insl mov ss outsl mov aaa push jo test cmp nop lods leave in push cmp nop lods lret and pop js add inc arpl mov inc sbbl sbb lcall fs or add add mov sub shr or inc (bad) lret jb roll push outsl mov cmp (bad) mov jmp js mov lock fwait mov inc sbbb dec sbbl xchg xor mov aam dec mov add ret sbb (bad) ss outsl mov aaa push jo test cmp clc and pop jnp mov in or inc arpl mov inc arpl cvttps2pi (bad) sahf mov dec data16 sahf mov mov dec imul mov cmp xchg scas lret out and int3 jmp js mov in or mov in or inc pop jl mov add add out push sub sbbl sahf mov dec test notb das dec imul xchg xor insl mov cmp (bad) lods leave in pop cmp mov jmp jnp mov out or add fcoml inc jbe fmull inc jb or addr16 rolb xor imull pop lea hlt xor fs enter mov lods fimul aas jae aad aaa addr16 lret gs lret pop nop (bad) repnz mov mov mov adc test or jb xlat pop cmp rolb cmp (bad) jb xlat or je aad cmp into add pusha nop ret sub out and mov pop inc js fmull outsb mov xchg (bad) imulb pop pop icebp and add push mov ret hlt and mov mov mov mov mov mov (bad) imulb pop xchg vcvtsi2sdl enter mov mov fwait roll ss mov test mov mov mov jb fmuls inc jno into cld xor sub mov mov adc ja xlat or imul (bad) imull pop mov scas ficom inc outsl fwait cmc es mov mov stos fisttpl outsb sahf into (bad) das pop nop (bad) lock mov lods fimul inc jb roll clc sub mov sbb xorl xlat pop cmp leave stc sub add hlt and pop inc jp fisttpl outsl mov or rolb xor mov adc adc test cmovae mov pop pop imull pop pop clc sub mov lods fmull add fs (bad) push xchg mov adc or addr16 enter mov in inc jne (bad) cmp cltd leave clc es test jbe xlat add std sub mov scas loop inc je aad ss enter mov rolb js cli inc (bad) jmp out dec jle fmull jb rolb xor ret push ret add or outsl movsl or lods fisttpll inc outsb popf lret cli sub push inc jns std sub fs (bad) pusha xchg (bad) cmc sub sub rolb cld cs mov (bad) stc sub mov adc jne aad aaa gs (bad) cmc and add add mov stc sub jl fimul aas jae aad xor xabort pop mov scas in inc jne roll xor shr dec jp (bad) cmp roll xor (bad) cmc and cmp (bad) or insb mov lcall repnz mov adc fisttpll or outsl mov fwait int3 pushl pop nop (bad) lock dec jg out inc js fisttpl cmp iret (bad) das popa xchg (bad) repnz xorl aam xor sub mov stos fisttpl cmp lret pop mov test mov fwait enter jge (bad) add pop mov lahf int sub mov or gs shr dec ja sar sub pop mov popf lret push subb add add cmp ret repnz stos fimul imul xor pop out sbb or mov mov mov add pop nop mov movsb rolb xor push dec jp flds ss (bad) lock dec jl fmull push push xorl rorl inc jne fimul iret cs cmc sub fwait int xor ss mov movsl fimull inc jns loopne (bad) (bad) xor fstl push mov daa pop nop ret imulb xchg lret popf aam push nop in and sub (bad) divl fs int gs pushl addr16 rolb ss insl sahf rolb add cmp aad dec xchg int xor ret jle pushf xlat sbb xor add scas in dec add add imulb xchg leave std xor or cmp cmpsb fmuls je fstl inc jns loope inc jp loopne dec jl loop dec xorb icebp and xor adc xor inc jl in inc mov sbb test mov dec mov adc lock sub aaa test add out and (bad) cmc sub add imul or stos loopne inc jl in push test ret pop pop clc xor roll cmp fstl inc jle jmp push mov (bad) arpl fwait rorb aas je fist pop push mov imull pushf fdivs pushfw aam inc jne loopne dec jge out push xchg lret inc jbe loope dec jge add and add (bad) (bad) mull rorb inc jne fcoml dec jg cmc sub int3 add insb mov mov sbb mov pop mov cli xor daa pop xchg lret pushl mov lods jecxz dec (bad) mov lret add outsl movsb fistl dec jle sbb mov lret add inc jg jmp cmc sub xchg lret add insl mov scas out pop xchg lret add jo iret add pop cwtl int3 add outsb lods loop push cmpl add jno fstl dec jl call hlt sub cmc sub int3 add ja in pop nop vmovaps (bad) repz and mov sbb scas fist inc jns push push (bad) mov adc adc jp fistl test or jecxz dec jp fisttpll inc je (bad) jo rolb imul add add pushl fs leave sti sub xor leave sti sub es mov ljmp cmp cmp iret add cwtl lret std sub mov scas out dec jns lock xchg add fs vmovaps imulb pop lea mov mov mov sbb mov sbb in and mov push dec jnp loopne add mov sbb mov sbb movsl xlat or insb pushf lret cld sub lods fisttpll insb pushf lret push xchg (bad) cs mov add push aam inc ja fmull insl lcall sti sub mov adc jo int3 cli sub mov inc jo in inc outsl popf lret stc daa push (bad) mov or cli sub into add popa cmpsl clc cs add xchg xbegin incb arpl xchg (bad) cmc sub icebp sub lahf in pusha mov sbb fisttpll cld sub pushf iret add fs (bad) hlt and test movsb roll fs int das pop mov icebp and mov pop inc ja rolb xor and mov sbb scas loopne inc jbe fimull jno,pt dec jg loope inc jbe ficoml inc je (bad) jb,pt aad cmp int3 incb aaa push popa xchg vmovaps mov mov mov pop dec jp fisttpl aas jo (bad) cmp rolb xor lock (bad) loopne dec jns fisttpll inc jno aad cmp add fs lret pusha xchg ret cmc sub mov mov sbb bound ficom inc je fmuls cmp push inc jae sbb adc add add and and add lret fs enter mov adc cmovo jmp push subl push int xor vmovaps mov mov scas loopne inc jne fmuls cmp pushf int3 add fs xbegin out and mov sbb lods ficom inc jae (bad) push aaa addr16 enter xchg (bad) jne fisttp imul lods fiaddl add push dec jp aad xor xchg (bad) icebp sbb or addr16 ret icebp pop dec jl loope aas insl pushf int3 cli sub mov mov mov cs xchg (bad) stc sub (bad) imull pop mov out dec cmpb in and mov mov mov mov mov repz imull pop nop shrl mov mov add add gs leave sti sub imulb pop pop hlt and mov das gs lret std xor cld arpl xchg leave mull or in pop push mov sbb add pop mov ret xchg int push mov sub (bad) stc inc jp ficom inc ja in test daa pop (bad) (bad) imulb xchg mov mov mov mov mov mov and mov mov (bad) hlt daa pop lea mov adc ficom inc js fist add int xor xor sti sub lret stc and push xor mov movsb aam aaa imul xor mov add add sbb or push enter jns sar sub lods fadds cmp ret xchg mov xchg ret dec jp sar daa push jle xlat or and mov mov fimull inc jnp loop dec jns jecxz dec xorl xchg mov mov and sar imul inc jbe (bad) add in sbb movsl roll sub adc insl fwait leave mull or push lret pop (bad) mov lods fisttpll outsb mov imul mov scas fist ja fimull mov xorb sbb jnp (bad) cmp lahf roll ss leave stc daa pop mov icebp and mov dec lcall jp fisttpl add add imul push xchg out and mov sti sub (bad) cld cs pop repnz mov mov sbb test loop dec mov or scas or mov lahf roll cmp into add addr16 incb fimull insb lahf rolb xor (bad) cmc es mov lock mov mov sbb mov pop inc jbe fisttpll inc mov out sbb or pop ss fimull imul movsb aam cmp ficom inc test out sub stos or mov sbb mov sbb scas in inc cmpsb out jl loope inc add loop inc jp ficom inc js fisttpll adc ja fimull cmp lahf roll aaa imul add add fs enter xchg ret imulb pop xchg (bad) cli sub (bad) repz pop pop imulb pop xchg lret pop mov mov sbb stos fisttpll inc je xlat pop cmp add addr16 int xor stc sub sub loopne inc jnp fisttpll outsl mov popf roll xor cltd lret pusha xchg ret mulb pop mov mov mov sbb stos ficom inc jno xlat push cmp add sub out and mov mov sbb mov sbb lods loopne inc je fnstcw jle repnz lret std sub xor vmovaps pusha (bad) mov scas adc loope inc je (bad) push aaa imul add (bad) cli sub jle in mov cli inc mov arpl xchg ret cmc daa push mov add pop and push mov mov adc jne xlat or push roll xor xchg lret fs lret cld das arpl nop ret imull popa cwtl lret cli sub ret imull popa xchg (bad) cmc and mov and mov sbb or mov test adc stos loopne inc jl call out and mov (bad) imull xor (bad) repnz nop (bad) icebp and es xchg leave pushl gs (bad) stc sub mov lods loopne inc je xlat or insl sahf into (bad) cs xchg (bad) cmc and sbb lods fisttp aas jb sti sub es xchg xorb fmull aas jo rolb xor sub mov scas loop sbb lods fisttpll or insl sahf int cs nop (bad) icebp and mov sbb add dec jl fist inc jno roll xor cmc and sbb jg in dec jl fist dec test mov sbb stos fmull cmp lret pop mov lods fmull imul mull pop mov stos fmull cmp xor (bad) cmc es subl mov nop (bad) clc daa push xchg scas loopne inc jo roll xchg or imul pop nop (bad) repnz (bad) mov adc movsl (bad) pop cmp enter test out push (bad) leave pushl xchg (bad) idivl and xchg (bad) das popa xchg (bad) hlt and sbb out dec mov scas fist outsb lahf roll xor mov mov addr16 adc push inc test ljmp out pop add add mov mov sbb stos fisttpl outsb lahf into (bad) xor cmc es xchg mov test or imul mov mov adc mov lcall or pop nop sar popa xchg (bad) cmc es test (bad) or imul (bad) stc sub mov lods fmull inc jne (bad) pop cmp int3 std bound mov mov adc movsb (bad) add imulb pop mov lods fisttpll inc jae (bad) or imul cmc and mov or push (bad) repz scas fiaddl xor and push xorl adc fimull aaa gs mov mov mov jle and movb sbb dec jp add xchg ret dec jge dec xchg jno rolb repnz scas fisttpll (bad) sub adc ljmp sbb or gs ret icebp and scas fimul cmp daa push xchg mov xchg (bad) push xorl aam xor xchg iret push inc js in dec or lret addr16 pop inc jg sti cmp adc inc jae aam aas jb (bad) inc jp fist mov fimull jae fcoml inc jbe push inc jne sbb fidivrl (bad) fs int cmp and push cmp inc jl loop xorl mov ret pop mov imull xchg (bad) imull pop xchg (bad) stc arpl add lods loope dec add add sbb mov pop nop (bad) clc sub xchg (bad) stc cs xchg lret add aaa outsb movsl and jne icebp sub xchg lret lret add lahf aam aas jae fimull inc jne ficom dec jle ljmp pop xchg (bad) fs adc out push mov xor fcoms dec stos repz xchg into add jno fmull inc jl sbb mov or and ret stc das gs sbb mov (bad) cld xor fmuls inc jbe in push mov cmc sub int3 add outsb mov lods loopne dec mov cs (bad) sar jge add mov inc jnp imull xchg fcoms and lret xor add xchg (bad) ss (bad) dec fwait xlat or mov add inc ja mov sbb add dec test ret clc sub int3 add cmp fistl inc jnp out push mov es hlt pop xchg into push aas je fist dec jle jmp pop xchg lret insl mov mov and ret imul mov cld xor mov mov pop push mov jmp inc jle jmp cli xor aam inc jp call mov (bad) divl data16 aad inc jbe out push mov rorb aas jne jecxz push mov clc xor roll cmp test push dec xorl sub jne,pt in push mov imull arpl lock rorb add mov inc mov sbb fist js ficom dec jnp loope inc jns fldl add add inc add fimul inc jb roll cld sub pop repz pop mov in dec jp fist inc jns loope dec jl and lahf fsts mov sub mov mov mov push dec jnp ficom inc jne fimull jae (bad) jb fmuls cmp or jno aam xor xchg ret pop mov rorb inc (bad) mov imull pop pop hlt daa pop mov fist inc jae fist inc jne fisubl pusha xchg ret push xchg mov mov sbb lock pop pushf fdivrs jne fcoml inc je in dec xor dec js fmull cmp sbb loope add dec jl fisttpl cmp (bad) cmc and xorl iret std das (bad) lds push mov mov sbb jge jmp dec jnp fmull cmp jecxz pop fbld mov std xor (bad) repnz mov push cmp xor mov ljmp mov cwtl enter or sub icebp and mov scas fisttp xchg mov sbb scas loope inc jp fiadd in push test mov adc mov mov mov adc stos fmull or jno (bad) or insl lahf rolb add fs xabort pop mov mov mov in sub jmp cs xchg (bad) cmc daa pop mov out fs in (bad) mov add (bad) hlt sub mov out pop xchg leave (bad) xor enter nop ret jl loop adc js fisttpll inc jne fimull outsl mov lahf roll pushl bound nop (bad) repnz mov mov sbb mov push dec jl loop inc ret push mov mov push push (bad) mov pop dec jl loop inc jbe xlat or outsb mov int xor int3 std xor (bad) cli sub cld sub sub mov push mov mov sbb loop inc ja fisttpll inc jb fcoms inc jne fmull inc jne fmuls cmp xlat sbb xchg iret push xor xor rolb cmp fmuls inc jg add and aam inc jne out pop (bad) xor int inc jbe loope cmp lcall jecxz inc outsb popf int sub enter test mov mov add xor enter rolb xor ficoml lahf fcoml pop pop imull sub vmovntps vucomiss loopne inc jns in dec jge jecxz fs vmovaps mov and lahf add cwtl lret popa xchg vcvtsi2sdl out and mov adc insb iret sbb call in dec jge adc pop mov aaa jp jmp push xchg (bad) cli sub (bad) mov mov mov mov xor lret push xorl loope inc js ficom inc jae xlat or (bad) fcoml jmp push (bad) (bad) es cltd int xor xbegin stc sub xchg enter int inc jle cld inc movsl loopne dec add mov stos fadds xor rclb pop mov add mov test or or adc test or or mov lahf lret (bad) xor add push iret add imul sub imull xchg (bad) cld cs xchg enter nop (bad) imull pop pop imulb cs mov mov (bad) popa xchg enter xchg (bad) push mov mov adc sahf into (bad) xor mov mov adc popf int cs xchg lods loope inc jae (bad) or outsl mov movsl (bad) jbe,pt jecxz dec jle loope push jg loop dec test mov xchg loope inc jge std xor (bad) bound cmpsl (bad) adc mov adc scas loope add push mov imulb xchg into add inc pop stc xor cli das pop lea out dec xorl (bad) notl cli sub xchg leave push cmp cmp mov scas loope jns out sub out cmpl xchg lret std push cltd cld dec test mov rorl outsl popf rolb imul jns out pop xchg int3 add insb popf roll cmp jecxz dec test ret dec jl hlt adc mov dec insb mov xor insl mov xor ret loopne sbb (bad) aaa push jo test cmp jne scas lret jmp and pop jp mov in or inc bound outsb mov ss outsl mov cmp jns mov in add add and mov icebp movntps sbbl mov das dec push notl dec push movsb rcr pop xor insl mov xor (bad) in sbb lods leave in pop cmp int push and pop js mov ljmp mov in or inc pop jl mov out or inc sbbl mov xor mov xor insl mov xor (bad) aaa push jno stos lret and pop ja mov jmp js mov ljmp mov in or mov out or inc pusha jge mov lock add xchg xor xchg xor xchg dec imul xor les add add pop es pop jl mov out cvttps2pi (bad) lahf mov dec imul mov xor ret loopne sbb push jno lods enter cmp jne mov jmp and pop lcall cltd mov out or pushf mov inc sbbl lahf mov dec test sti pop xor insl mov cmp stos (bad) jecxz sbb push je lods lret and int3 jmp jp mov in or inc sbbb dec andl adc dec imul mov xor (bad) sbb scas aam jns (bad) cmc adc dec push movsb rcr push xor mov xor insl mov xor les add add std sbb push add ja mov ljmp mov out or inc bound mov je loop push mov aas pop js mov jmp and pop jp mov in or inc pop jl mov js ljmp push insl mov ss outsl mov ss outsl mov push cmpsl int3 jmp jns mov lock fwait mov inc sbbb xchg sti inc jo stos (bad) in sbb lods lret and int3 jmp jle mov lock sub sbbb dec fs lahf mov dec outsl fsubs push mov (bad) repz mov sbb xorl add xor lcall es cwtl rorl jo,pt fisttpl pop xchg mov out or add add inc pusha jge mov out or inc add imul mov cmp nop lods leave in push cmp xchg lods lret pop cmp xchg scas lret call ja mov push (bad) sub jecxz push sahf mov dec insb mov xor loope push pushf xlat and push movsb rcr pop xor insl mov cmp scas int3 jmp jns mov inc data16 xor xchg xor xchg push insb mov and fidivr jnp icebp sub mov sbb int3 and int3 ljmp mov negl les jae,pt in daa pop xchg lret insb mov rorb push jge mov add mov xor mov cmp mov add add push cmp xchg scas lret call js mov add repz dec imul mov xor (bad) jecxz sbb push jb stos enter cmp jne scas int3 jmp jl mov inc sbbb dec andl adc dec push clc adc movsl rcr pop xor insl mov xor enter cmp jne scas lret out and int3 jmp js mov ljmp mov out or inc pop jl mov icebp push sub sbbb dec data16 lahf mov dec sbbw dec andl adc dec imul mov aaa push jo test and jne scas lret cmc push lahf rcr sbb add push outsl mov cmp (bad) lods lret and pop jns mov add clc adc movsl ret sbb (bad) loop sbb push jb lods enter cmp jne scas int3 call js mov in or inc sbbl mov xor (bad) in sbb mov in or inc pusha jge mov lock popf mov dec push movsl ret sbb (bad) cmp scas lret out and pop js mov in or inc popa jge mov dec imul mov cmp xchg scas lret jmp js mov in or mov cvttsd2si (bad) lahf mov dec insl mov ss jb stos enter and jns mov in or add xchg mov in or inc pop jnp mov out or inc pusha jge mov out cvttps2pi (bad) add test cmp mov cmp int3 jmp ja mov jmp and push test jge sti sbb outsb mov ss jo test cmp mov cmp (bad) lods enter cmp xchg lods lret and jne mov ljmp mov ljmp mov jmp and mov in or mov in or inc pop jnp mov out or inc sbbl popf mov dec andw dec sbbl adc dec test notb das dec push stc push xor mov push jo add cmp pop jne lods lret and jne scas lret out and lret out and pop jp mov in or add dec push notb cs test notl das dec push notl xor mov xor xchg xor insl mov xor ret loopne sbb ret (bad) sbb ret loop sbb push jb stos (bad) jecxz sbb push jb scas lret out and int3 call jbe mov ljmp mov dec insl mov xor (bad) cmp jbe scas lret out and lret call jbe mov call ja mov jmp js mov in or pop jp mov out or inc popa jge mov out or inc bound mov add add cs andl adc dec andl adc dec push clc adc dec insl mov ss outsl mov add ds mov jecxz dec cltd mov dec imul mov xor leave in pop cmp jne adc push (bad) (bad) hlt sub inc xchg mov dec imul xor (bad) in jp jecxz inc outsl movsb xlat or xlat hlt adc mov dec test and rclb pop fwait xlat notb das dec push notl (bad) loop sbb push jo stos (bad) jmp cltd out dec gs mov das dec push notl dec imul xchg cmp stos (bad) in sbb add add inc pop jp mov in or mov in or lock mov lret cmpsl (bad) sbb push jb stos enter or inc pusha jl mov out or inc popa jg mov inc arpl cvttps2pi (bad) sahf mov (bad) adc dec imul mov xor insl mov aaa push outsl mov cmp mov cmp lret call jbe scas lret call jbe scas int3 call ja mov jmp ja mov jmp ja mov in or pusha jl mov out or inc pusha jl mov out or inc popa jle mov inc bound mov dec sbbl mov das dec test cmc adc dec test notl add in pop cmp xchg scas lret and pop ja scas int3 call jnp mov in or inc pusha jge mov out or add dec imul xchg xor mov xor ljmp icebp push sub sbbb dec sbbl lahf mov dec gs sahf mov dec sbbl xor hlt adc mov dec push notl dec push mov dec xorb add mov jmp and pop jp mov out or inc pusha jl mov out or outsb mov dec imul mov xor insl lea cmp mov add add add lods mov repnz mov sbb clc adc dec push mov xor xchg xlat notb xor mov xor xchg xor xchg dec insb mov xor outsb mov cmp lea cmp mov and int3 jmp ja mov jmp js mov ljmp pop aas jbe fnsave outsl mov cmp (bad) lods enter cmp nop lods leave in push cmp xchg lods lret pop cmp je lods lret pop cmp pop jl mov inc bound mov icebp or pushf mov xor cltd int xor rclb dec mov out outsl lods in push loope pop fwait rcll dec mov add cmp lock out sub jecxz pop sahf fsts xchg lret add inc cmpb cmp aad cmp into std sub out pop ficoml add inc xchg std inc (bad) mov fmull cmp lahf fcompl push mov sti cmp call adc movl sub fstpl push xchg add inc jl sti cmp in sub jecxz pop xchg ficompl push (bad) rorb cmp aaa jb icebp das addr16 es fistpl push (bad) int inc jg add jae stc xor popa lahf fstpl push nop iret or add jbe repz into adc adc ret jnp repnz call repnz or jb fistl dec jge call hlt es nop aam cmp (bad) or mov and rorb xor in fs fcomps push (bad) or mov loope pop xchg lret add mov out push xchg iret cmovl sar jg hlt sub fistp dec test (bad) sti xor in and fist push xchg rorl inc xchg clc aaa jns out sub movsw out sub out pop cltd pop push mov or sti cmp jge cli cmp out (bad) lret cmp out push mov clc sub pop xchg lret adc lret mov add jle cli cmp repz call pop push mov or mov in sub pop pop xchg rorl inc jle incb aas ja fmuls aaa insb test and rorb inc jle call add inc test (bad) xor out push xor mov xor lret add add add cmp int3 jmp jns mov jmp and pop jns mov in or mov in or inc pop jl mov out or inc arpl cvttps2pi sbbl sahf mov dec sbbw dec andl adc dec imul mov xor xchg mov lock add xor xchg dec insb mov xor enter cmp xchg lods lret pop cmp jne scas lret pop cmp je lods lret push jb lods leave in pop cmp xchg lods lret and pop jns mov jmp or inc bound mov lock popf mov dec add (bad) movntsd sbbl add xchg xor mov dec imul xor mov xor outsb mov mov mov push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb ficomp xchg xlat adc lods aam cvttps2pi andl dec push cmp cmpsl ret loopne sbb (bad) cmp stos (bad) jecxz sbb push jno xchg scas lret call jbe mov jmp ja mov in or inc pusha jl push mov ds ja mov jmp and pop jnp mov out or inc pusha jge mov out or inc bound mov inc push notl dec imul outsl mov cmp mov and pop js mov ljmp mov jmp sub lcall arpl mov push inc jbe in dec jl call cmc adc dec imul xchg aaa push jo test cmp mov cmp mov cmp (bad) lods leave in sbb or int sbb int pop and jns mov jmp and pop jns mov out or inc pusha lods in add add xchg mov in or inc pop jnp mov icebp push sub sbbl push sub jg mov dec sbbl mov das dec push cld sbb arpl pop ja mov ljmp mov out or inc pusha jge mov fdiv adc dec push add dec outsl mov cmp (bad) stos enter ds js mov jmp and pop jp mov in or inc pusha jge mov lock sub sbbb dec push mov xor mov ss outsl mov cmp (bad) lods leave in pop cmp xchg scas lret call ja mov in or inc bound mov dec sbbl mov das dec push fdivrp sbb insl mov xor (bad) jecxz sbb push jb stos enter cmp xchg lods lret and int3 call ja mov ljmp mov out or inc pusha jge mov out or inc popa jle mov fdiv adc dec test notb xor xchg xor push outsl add add aaa push jno lods leave out pop cmp xchg scas lret out and gs lahf mov dec imul mov jg loopne sbb jne scas iret xor lock mov sti xor fnop adc movsb rcr pop xor mov lds cmp stos enter cmp mov out je mov push push cmpsb ret sbb outsb mov aaa push jo or dec imul outsl mov cmp int3 jmp js mov ljmp mov jmp and pop jp mov in or mov in or inc pop jl mov inc arpl cvttps2pi sbbl xor mov xor (bad) add sbb push add lods leave out pop cmp xchg mov jmp js mov ljmp mov in or mov out or inc pusha jl mov out or inc popa jle mov dec data16 lahf mov dec test notb das dec andl adc dec imul (bad) lahf mov dec mov sti pop xor insl mov aaa push jo test cmp stos (bad) jecxz sbb push jno stos (bad) jecxz add cmp jne scas lret out and jns mov jmp and pop jns mov jmp and jnp mov out or inc pusha jge mov out or inc bound mov lock pushf mov dec sbbw dec andw add mov dec imul add add loopne sbb push outsl mov pop cmp xchg mov jmp and pop jns mov dec mov clc adc movsl rcll (bad) clc adc cmpsb ret sbb (bad) aaa pop ja mov imul jne aam inc jae sar aaa jo ljmp inc ja loope inc jae fisttp inc jb xlat adc ret add dec mov sbb mov sbb (bad) mov lret pop ja,pt fist dec jp loop push mov add add push imul inc pop jns mov in or mov in or inc pop jl mov out or inc bound mov lock fwait mov inc stos out outsb xchg scas int3 jmp js mov ljmp mov jmp or inc popa jge mov (bad) lock inc bound mov inc arpl andl outsl mov and loopne sub andl dec push notb das dec push mov xor loopne fs hlt and pop jl mov lock pushf mov dec sbbw addr16 sub jg mov dec sbbl mov xor mov push outsb mov xor (bad) aaa push jo stos (bad) sbb (bad) pop mov shr push mov hlt sub enter fimull inc jne xlat pop aaa fs pop imul dec mov lret jge add ja divl pop mov aam dec xchg add jl hlt sub ljmp dec mov cld xor rorl xchg mov sub in pop lahf aad jne,pt repz into or es mov mov call and aam dec mov cmovns mov mull or mov lock loop pop fwait (bad) adc mov add xor dec mov or ret cmpl (bad) pop xchg rcll inc jge divb movsl fcompl dec mov sti xor pusha lahf fistl add aad dec test pop inc jge cld cmp hlt xor out pop cltd fsts xchg rcll dec mov push aas (bad) lds insl scas in and popf loope pop fistpl push xchg (bad) adc enter roll push pop xchg rcll dec test add mov add data16 loope pop xchg fistl xchg add mov pushl add repnz data16 jecxz push xchg aam dec mov add das data16 loope pop nop lret or mov ss fist push xchg int3 add cmpb xor loop pop xchg lret outsb movsb fcoml dec xorb and (bad) adc into adc enter ret jnp icebp xor ljmp lcall dec xchg daa push cwtl rorb inc ja in mov jecxz pop fistl add aas jle add inc jnp clc xor ljmp (bad) rorl mov add jle cli xor push fwait xlat adc lret test (bad) hlt xor adc inc jbe fistl dec cmpb add add scas loopne dec mov and fs or mov and pop cli aas jo fimull inc jg out sub xlat or imul ret cmc sub lret add dec jnp fsts inc jno aad addr16 or outsb movsb aam aas outsl sahf into add arpl mov pushf iret or mov xor fiaddl or cmpl scas lock pop (bad) ret cli cmp fistl inc je out push xchg (bad) cli xor into add xchg push outsb mov cmp (bad) mov ljmp fwait mov dec gs lahf mov dec imul mov (bad) repz fisubl outsb movsl repz cmp int3 jmp ja mov ljmp xchg mov jmp and pop jp mov in or inc add pushf mov dec sbbl movsl roll lcall cmp stos (bad) in sbb lods leave in push cmp xchg lods testl sub lods into ljmp mov jmp and pop jnp mov in or inc pusha jge mov lock sub sbbb dec sbbl mov xor mov xor xchg xor xchg loopne inc js (bad) add cli cs xchg (bad) cmp inc arpl adc mov dec push mov sbb push jno stos hlt inc mov xor in sbb lret out and int add xchg mov add int push and pop ja mov ljmp mov ljmp mov ljmp mov out or inc popa jge mov sub repz dec push mov xor mov dec imul xor mov cmp mov cmp (bad) lods leave out push cmp nop lods leave out pop dec lods sbb je scas lret and shr or inc bound mov test into or scas int push and pop js mov jmp and pop jns mov jmp and pop jg mov inc sbbl xor outsb mov cmp stos (bad) jecxz add xchg mov jmp js sub sahf mov dec push movsb rcr pop add xor outsb mov cmp (bad) lods enter cmp xchg scas lret and int or inc pusha jge mov lock sub sbbl mov das dec push clc adc cmp jbe scas lret call jl mov out or inc pusha jge mov out or inc pusha jl mov out or inc pusha jge mov out or inc pusha jl mov out or push xchg aam push mov inc insl mov ss outsl mov add jne scas lret call ficomp pop cwtl or and sub nop (bad) cli xor repnz mov leave (bad) xor mov mov and mov (bad) or mov sub gs int push test scas lret call js mov ljmp xchg mov jmp and pop jnp mov in or inc pusha jl mov out or inc rorb inc xchg (bad) sti xor repz rorl mov dec push mov xor mov xor mov imul and jns mov jmp and pop jp mov in or inc pusha jge mov out or inc popa jle mov lock mov xor xchg xor mov aaa push mov xor xor mov cmp (bad) mov jmp jns mov in or inc pop jl mov out or inc bound mov inc sbbb dec data16 pop xor jo stos (bad) in push cmp xchg scas int3 jmp jns mov in or inc pusha jl mov out or inc bound mov inc sbbl movsb rcr push xor mov aaa push jo test cmp (bad) lods enter cmp xchg scas lret out and shr or inc pusha jge mov lock pushf mov dec gs sahf mov dec push movsb rcr pop xor mov cmp (bad) lods leave out pop cmp jne scas lret call pop cmp sar cmp pushf ficomp dec (bad) mov pop jp mov out or dec sbbw dec test notl xor mov push xchg loopne and xchg enter xchg leave (bad) sub add into add mov add mov and mov cmp mov sbb mov adc fisubr bound cltd rolb cmp fimull inc ja in push test cld xor fcoml inc jae fstl inc js ficom dec xorl out and out and cs jns fstl sbb mov adc mov out insl mov jae mov in or inc pusha jge mov icebp or popf mov dec imul xor vpaddd cmp stos (bad) jecxz sbb stos enter and pop js mov jmp and pop jp mov in or pushf mov inc sbbb dec sbbl mov xor mov xor xchg sbb push jb add add cmp nop lods leave out pop cmp xchg lods lret and jbe scas adc addr16 shrb dec imul cmp nop lods leave out and adc stc inc sbbl mov das dec push add mov fdivr push xor mov xor ret loopne sbb push outsl mov ss outsl mov cmp ret clc sub stos divb andl jecxz sbb push jb lods leave in push cmp mov mov add push jb stos (bad) in sbb lods int pop and pop jns mov in or mov in or inc pusha jl mov push inc mov add jl mov out or inc pusha jl mov out or sbbw stc push xor mov fstpl push lods leave in push cmp (bad) lods leave in push cmp nop lods leave out pop cmp xchg mov repz mov aas pop js mov inc lods pop imul mov cmp (bad) lods enter cmp nop lods leave ljmp mov ljmp mov jmp and jns mov jmp and pop jp mov jmp and pop jp mov in or inc pop jle mov inc arpl mov inc arpl mov inc bound mov inc sbbb das dec push notl xor mov xor (bad) aaa push jo test aaa push jo test cmp stos (bad) jecxz sbb push jb scas lret out and add pop ja add pop jl mov icebp or pushf mov dec gs lahf mov dec data16 lahf mov dec imul xchg xor xchg xor mov push insl mov xor insl mov cmp mov cmp mov cmp (bad) stos enter cmp xchg lods lret pop cmp jne scas lret and pop jp mov mov mov dec data16 lahf mov dec test notl xor xchg xor add push aas pop js mov jmp and mov out or inc arpl cvttps2pi (bad) lahf mov dec test notb xor mov xor add add mov aaa add xchg scas lret call js mov jmp and pop jnp mov in or inc pusha jl mov out or inc bound adc dec test notb xor xchg jbe add inc bound mov inc sbbl lahf rcr push jo test cmp mov cmp rcll inc jle or inc pusha jge mov lock fwait mov icebp or mov xor mov and jo mov dec test notb das dec imul mov xor add and int3 in push shrl movsl ret sbb (bad) sbb push jno stos enter cmp xchg scas lret and add add out or inc pusha jge mov out or inc pusha add adc mov dec push notl xor mov stos ficom inc jno roll xor aam xor cltd iret (bad) cmp rolb aaa imul rolb xor movsb loopne dec cwtl (bad) out and pop ja mov out or inc bound mov inc arpl mov inc sbbb dec gs sahf mov xchg decl mov cmp (bad) lods enter cmp jbe scas lret call ja mov call ja mov jmp jns mov jmp and xchg lret add jge add notl dec imul ss jo stos enter cmp xchg scas int3 jmp (bad) sbb nop aam bound je in add stc pop stos aad adc mov dec imul sbb xchg rcll dec mov adc sub into add je clc pop xor mov xor hlt pop xor insl mov xor ret incl mov es xor cld inc jg add inc pusha jge mov lock mov das dec push notl dec imul xchg xor xchg dec insb mov cmp mov cmp nop lods leave in push cmp nop lods leave out pop cmp xchg lods lret and jne scas lret call jns mov in or sub jle mov lock fwait mov inc sbbb dec sbbl sahf mov xlat hlt adc dec imul xor (bad) sti xor fmuls inc jne lods fstl inc jae (bad) add aaa jo xlat or jae rep out das test bound pop dec (bad) rorb inc add xor bound sahf int cmp push xchg add jle out arpl int3 or ret imul add ja jecxz push xchg rolb cmp out sub mov fsts dec mov push inc add inc cmpb sub push jmp and fcoms push xchg into or fsts push (bad) lret cmpb adc xchg aad pop xchg rorl dec xchg add or xchg cld xor jmp cmovp scas jmp imul or add add out outsl stos jecxz bound lret or sar jp lock push add ret add mov xor and sbb rorb inc add cmp mov sub cmpsb in pop xchg testl (bad) sahf add jg jmp push pop repnz mov notb bound pop jbe mov ljmp mov out or inc bound mov dec xchg loopne dec mov loopne outsb xchg mov out or inc pusha jge mov out or inc bound mov dec andw dec test notb xor mov xor mov ss outsl mov pop cmp xchg lods lret and jne scas int3 call out sbb jnp fisttpll cmp leave clc sub (bad) imulb pop mov mov jmp pop pop clc sub and dec addl xchg repnz sub mov sbb daa pop mov aas jp stc xor scas out jb adc rorb inc lret and outsl stos cmovns and rolb mov sub int3 add jo fmuls jl ljmp push jae loope push mov imulb pop xchg (bad) cld xor (bad) xor and (bad) lock pop pushl dec (bad) mov sbb sub cmovns in push dec jge call add pushfw rorb inc cmpl aas jnp push pop xchg idivl add leave out mov cld xor lods call jnp mov sub data16 and (bad) lret or ret fcomps fcomps loopne push cwtl int3 or enter mov sti cmp clc cmp in sbb and add ret add ja hlt mov mov fcompl arpl xor mov ss outsl lea cmp nop mov in or mov out or inc popa jle mov lock inc bound mov inc bound mov inc arpl push sub test das dec imul xchg xor xchg xor mov push insb mov aaa push jo test aaa push jo test cmp pop jbe scas int3 call js mov ljmp add pop jl mov out or inc popa sbbl lahf mov dec test notb das dec push notl xor mov sbb (bad) cmp xchg lods lret and lret out and int3 jmp js mov ljmp mov jmp and pop jp mov lock inc popa jge mov lock inc bound mov inc arpl mov inc arpl mov inc arpl push sub test xor mov xor mov xor xchg xor mov xor mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) in sbb push jb stos add call ja mov jmp add ds ja mov ljmp mov out or inc pusha jl mov out or inc pusha fstpt push jno stos (bad) loop sbb cmp jne lods lret dec gs sahf mov dec push movsb rcr push xor mov ss outsl mov aaa push jo test aaa push jo test aaa push jo test cmp jne scas lret and mov in or inc pop jl mov in or inc pop jnp mov in or inc pop jnp mov out or inc pusha jge mov dec gs sahf mov dec gs sahf mov dec sbbl lahf mov dec imul mov xor outsb mov ss jo stos (bad) in sbb lods enter cmp (bad) lods leave in push cmp nop lods int3 ljmp mov jmp and pop jp mov in or mov in or inc pusha jge mov (bad) repz mov dec push movsb rcr pop xor mov ss jo test cmp stos (bad) jecxz sbb push jb stos (bad) jecxz sbb lods leave in and pop ja mov jmp ja mov add or inc popa jle mov lock fwait mov dec gs sahf mov dec data16 mov xor xchg xor mov xor outsl mov aad push sub (bad) lahf mov dec push std sbb push outsl mov cmp nop lods leave out pop cmp ficom pop xchg scas int3 call add add xchg mov in or mov in or inc sbbb dec sbbl lahf mov dec andl adc dec test movsl rcr pop xor insl mov cmp stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret and int3 call ja mov jmp jnp mov out or inc pusha jl mov adc movsb rolb (bad) sbb push jo stos (bad) jecxz sbb push jae lods leave in push cmp nop lods lret and pop js mov ljmp mov in or mov in or inc pusha jl mov out or inc pusha jge mov lock inc bound mov dec andw dec push notb das dec imul add dec push movsb rcr push xor mov xor jo test cmp mov cmp nop lods leave in push cmp xchg lods lret dec xchg push sub test notl xor outsb mov ss outsl mov cmp stos (bad) jecxz sbb lods leave out and int3 call ja mov in or inc pop jnp mov in or inc popa jge mov lock inc arpl test das dec push clc adc dec push mov xor mov aaa push jo test cmp mov cmp xchg lods lret pop cmp jne scas lret call ja mov and mov dec gs sahf mov dec sbbw dec push add add dec imul mov aaa push jo test cmp mov jae jecxz dec mov in push cmp nop lods lret and int3 jmp popa (bad) lahf mov xchg rorb mov sbbb dec sbbl mov pusha mov cvttsd2si (bad) mov xor xchg dec imul xor insl mov sbb lods enter cmp nop lods leave in push ds ja mov jmp js mov ljmp mov jmp and pop jp mov in or inc pop jnp mov in or inc pusha jl mov repnz sub sbbb dec sbbl lahf mov hlt adc mov dec test notb xor movsl ret pop xor insl mov xor insl mov ss outsl mov ss outsl mov cmp stos (bad) jecxz pop add jns mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov lock sahf mov dec andl adc dec push notl xor mov xor pop movsb loope pop lahf loop ss jno stos (bad) jecxz sbb pop jbe scas int3 call ja mov ljmp inc popa jge mov out or inc popa jle mov lock fwait mov inc andl adc dec push notl xor mov xor dec push mov xor xchg dec insb mov ss outsl mov aaa push jno test cmp mov cmp (bad) stos enter cmp nop lods leave out pop cmp xchg mov ljmp lcall xlat hlt adc mov dec sbbw dec andl adc dec imul mov aaa push jo test aaa push jo test cwtl rcll imul test cmp (bad) stos enter aas pop js mov ljmp mov jmp outsb test leave out pop cmp jne scas lret call ja mov jmp js mov lock adc dec andl adc dec push mov dec push mov xor mov xor enter cmp xchg lods lret and jne scas lret call js mov ljmp mov in or mov out or inc arpl cvttps2pi push mov xor mov xor insl mov aaa push jo test cmp mov ds ja mov ljmp mov jmp and pop jnp mov in or inc pusha jge mov out or inc bound sbbl dec imul mov ss outsl lea cmp mov cmp xchg lods lret pop cmp jne scas lret call jnp mov in or inc popa jge mov lock add pushf mov dec gs lahf mov dec test notb das dec imul mov aaa push jo test cmp nop lods leave out pop cmp jne scas lret call ja mov ljmp mov lock fwait mov das dec push notl dec push mov xor mov xor (bad) loopne sbb lods leave out pop cmp jne scas lret call ja mov jmp jns mov jmp and pop jp mov in add mov xor mov xor xchg push insl mov xor vpaddd aaa push jo stos (bad) jecxz sbb pop jne scas lret call ja mov ljmp add mov in or inc pop jl mov out or inc popa jge mov lock inc bound mov dec test notb xor mov xor xchg push insl mov ss jo stos (bad) jecxz sbb push jne scas lret call ja mov ljmp lcall bound mov dec sbbl mov xor mov xor insl mov ss outsl mov aaa push jo lods leave in pop cmp xchg scas lret out and mov lock pushf mov inc sbbl lahf mov dec push notl dec push mov xor mov aaa push jo stos (bad) jecxz sbb add add (bad) lods enter cmp xchg scas lret out and pop ja mov jmp js mov out or inc bound mov icebp or pushf mov dec sbbl mov xor xchg xor mov cmp (bad) stos enter cmp nop lods divl add std inc arpl cvttps2pi sbbl sahf mov dec imul xor mov xor lret push ss outsl mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) in and pop add shr or inc pusha jge mov out or jbe out jo mov sbb xchg mov jmp js mov ljmp mov icebp push sub out jp cld ss fdivrp sbb add add outsb mov ss outsl mov dec nop in and pop jns mov jmp and pop test in pop cmp jbe mov ljmp mov in or inc pop jl mov out or inc bound jl mov out or inc andw dec push notl dec push mov xor push outsb mov ss jo stos (bad) jecxz sbb push jb stos (bad) in and int3 call ja mov ljmp mov jmp and pop jp mov in or fisttpll aas jns xlat pop cmp sbb push jae add inc pop jns mov in or inc pop jl mov out or inc popa jge mov icebp or pushf mov dec data16 lret call js mov jmp and pop jnp mov in or dec gs sahf mov dec push clc adc cmpsb (bad) in sbb lods leave out pop cmp cmpsl jecxz push xchg (bad) repz mov dec sbbw dec push notb xor int3 or (bad) or dec andw dec push notb xor mov xor aaa push jo test cmp jbe mov jmp ja mov ljmp mov jmp and pop jp mov in or mov in or inc pop jnp mov icebp or pushf mov das dec push notl dec imul xchg xor xchg xor mov xor add add loopne sbb ret loopne sbb ret loop sbb push jno test cmp mov cmp jne lods sbb vmovapd mov pop dec (bad) mov mov mov in inc jp out push (bad) mov sub rolb cmp int xor pop mov in es add jle or push insl mov sbb lods leave in pop cmp xchg scas lret in or inc pusha xchg fisubr arpl adc mov dec push notl dec push mov xor mov cmp stos (bad) jecxz sbb push jae lods add jmp jp mov in or mov out or inc pusha jge mov out or inc popa jle mov dec andw add fprem1 adc dec push notl xor xchg xor mov xor insl mov xor enter cmp nop lods leave out pop cmp xchg scas lret and lret call ja mov jmp js mov icebp push sub sbbl sahf mov dec data16 lahf mov dec sbbw xor mov xor (bad) in sbb stos enter cmp xchg scas lret and jne scas lret call jbe scas int3 call ja scas int3 jmp jnp mov in or inc pusha jl mov out or add sbbl mov das dec push notl dec push mov xor insl mov add add xor (bad) loopne sbb push jo test cmp (bad) stos enter cmp xchg scas lret and js mov jmp and mov out or inc popa jge mov lock inc bound mov inc arpl push sub sbbb dec push mov xor xchg push insl mov xor (bad) aaa push jo add idivb jl out push xchg mov ret loope inc jnp out jbe in mov mov stos loopne inc jnp jmp loop dec test (bad) cmc sub sub (bad) imulb pop mov mov mov movsb (bad) cmovbe aad xor pop repnz (bad) insb add movsb or jecxz push xchg lock pushf aam inc jne roll xor cmp test push jbe,pt in sub je call add lret or bound mov adc pushf enter jbe iret cli es jle aad mov pop dec ja int and or push push jg fisttp inc jo iret add outsl test cmovne jmp jmp pop add (bad) (bad) cmp loope push xchg into add insb mov mov and adc insl fwait enter jg loopne cmp (bad) repz lods fisttpl cmp into cld sub mov or push into add fs iret push cmp fstl dec addl out push dec jg in push xchg (bad) (bad) xor repnz mov sbb mov and fdivrp sbb (bad) sbb push jb stos enter cmp xchg scas lret and pop ja mov ljmp mov call cvttps2pi andl dec test notb das dec push sub ficompl push movsb leave out and in or inc pop jnp mov in or inc pusha jl mov adc iret in or mov in or inc pop jl mov out or inc pusha add adc dec imul xchg push insl mov ss jo test cmp mov cmp jne scas lret out and int3 jmp js mov ljmp lcall arpl movntps sbbl add add adc dec imul mov xor insl mov xor (bad) loopne sbb push outsl mov aaa push jne scas lret and int push and pop js mov jmp and pop jp mov in or inc pop jl mov out or inc popa jge mov dec push notb das dec imul xchg dec insb mov xor outsl mov aaa push jo lods lret or mov in or inc pop jl mov out or inc bound adc gs sahf mov dec andw dec imul xor mov xor insl mov aaa push jo test and jbe scas int3 jmp ja mov add shr or inc pusha jl mov out or inc arpl mov dec data16 lahf mov dec push notl xor mov xor mov aaa push jo test aaa push jno stos (bad) in sbb lods lret and jbe scas int3 call ja mov jmp jl mov das dec imul mov push cmp nop lods lret and int push and pop jns mov lock inc bound mov inc sbbl popf mov add jo test aaa push jo test cmp xchg lods lret pop cmp je lods lret aas jg repnz (bad) push xor mov xor insl mov aaa push add lods lret inc test add cmp xchg scas lret out and lret call ja mov ljmp push outsb mov cmp nop lods leave out and jbe scas lret call jbe scas lret call ja mov jmp js mov jmp jp mov out or inc bound mov lock fwait mov dec addl adc dec imul xchg xor inc pop jnp mov in or inc pusha jl mov out or inc popa jle mov lock andl dec imul mov ss outsl mov cmp (bad) stos enter cmp nop lods leave in push cmp xchg lods lret pop cmp add scas int3 in or mov in or inc pop jnp mov in or inc pop jl mov out or inc popa jge mov out or push popf fcoms dec mov out or inc data16 lahf mov dec push clc adc movsb rcr pop xor xlat add xchg mov in or inc pop jl mov out cvttps2pi (bad) lahf mov jo or inc pusha jge mov lock popf mov xor xchg xor mov cmp stos (bad) jecxz sbb lods leave out pop cmp xchg scas lret out and int3 jmp add mov icebp or popf mov dec imul xchg xor mov xor outsb mov ss outsl mov (bad) sbb push je lods lret out and int push and pop js mov ljmp mov jmp and pop jp mov in or inc pop jl mov out or popf mov dec data16 lahf mov dec push notl das dec push notl xchg rorl inc jae aad cmp bound mov inc sbbb dec sbbl lahf mov xor mov xor insl mov cmp out xor mov out or inc pusha jge mov out or cmpb adc jp add add mov push rcrl dec jge fisttpl cmp mov clc sub mov bound pop ja mov jmp js into adc int push and bound mov dec sbbl lahf mov dec andl adc dec push notl dec imul mov ss outsl mov aaa push jo test cmp shlb dec gs mov das dec push notl xor insl mov xor mov xor mov xor insl mov cmp xchg scas lret out and iret jmp and pop jp mov in or mov in or inc pop jnp mov in or inc pop jnp mov in or inc pusha jl mov xlat hlt das jb hlt xor repz data16 lahf mov dec sbbw dec andl xor repnz add jnp mov dec andl movsb rcr pop xor insl mov or bound mov dec sbbl lahf mov dec imul xor mov xor insl mov xor (bad) aaa push jo test aaa push je lods lret and jne scas lret out and pop ja mov jmp ja mov jmp ja mov ljmp lcall andw dec push clc adc pusha test jp mov in or inc pop jl mov out or inc popa jge mov lock movsl ret sbb (bad) loopne sbb push outsl mov cmp mov cmp push jae lods enter cmp xchg mov ljmp mov jmp and pop jnp iret adc ret xchg int xor push xchg lret add jne add and or test adc pushf mov dec data16 lahf mov dec push notl dec push ret jno negl xor (bad) loopne sbb insl scas ljmp push and pop jns mov jmp and mov out or inc pusha jge mov out or inc pop idivl jne testl clc adc movsb rcr push xor mov xor mov xor (bad) loopne sbb je call sbb push jbe mov add or inc bound mov icebp or pushf mov dec xchg rclb pop xchg into or mov dec ja mov jmp and bound mov inc arpl mov inc arpl cvttps2pi sbbl lahf mov dec andl adc movsb rcr push xor mov dec imul xor mov xor (bad) loopne sbb (bad) in sbb lods enter cmp (bad) stos enter cmpl ret (bad) sbb (bad) aaa push jo stos (bad) out or pop jnp mov out or inc pusha jl mov out or inc popa jle mov lock inc bound mov inc andl and mov add pop push mov add scas lret call js repnz push cld sub fiadd sbb stos (bad) in sbb lods leave out and pop jp mov in or mov cmp mov cs xor xchg xor xchg xor xchg jmp and mov in or inc pusha jge mov out or inc bound mov icebp or sahf mov dec data16 lahf mov (bad) movb xchg mov lock pushf mov inc arpl cvttps2pi sbbl lahf mov dec xchg sbb push jb stos (bad) in sbb stos enter cmp nop lods leave in push cmp xchg movb mov ss outsl mov pop jne scas lret or mov in or inc pusha jl mov out or add inc bound mov icebp push sub sbbb dec push clc adc fistp push xchg loope and mov in or inc pusha jl mov out or inc popa jle mov lock inc bound or nop rcrl cmp (bad) lods enter cmp nop lods leave out pop cmp jne scas lret call ja stc push je scas lret call ja mov out or inc popa jge mov lock pushf mov inc sbbb dec sbbw dec test notb das dec insb mov xor lods leave in push cmp xchg lods lret and int3 jmp js mov ljmp mov jmp sub lcall bound mov xor mov xor add add cmpsb ret (bad) sbb (bad) aaa push jo lods leave out pop cmp xchg scas lret and lret call ja mov ljmp mov in or inc pop jnp mov out or inc sbbb dec andw dec push inc jl icebp sub mov lock fwait mov dec gs lahf mov dec imul xor (bad) loopne pop xchg int3 add jns lock mov rorb xchg cli pop xor jno stos enter cmp xchg scas int3 add or inc pop jnp mov out or inc pusha movsb fistp inc jg adc jg mov notl push add dec sbbw dec andl add xor insl mov add sbb (bad) loopne sbb push outsl mov aaa push je lods lret pop cmp jne scas lret out and lret call ja mov jmp jns mov pop push loopne sbb push outsl mov pop je scas lret pop cmp jne scas lret and lret out and lret call jbe scas lret call jnp mov in or inc pop jnp mov in or inc pop jnp mov out or in pop xchg lret add sub push xchg fsubs bound push jo stos (bad) jecxz sbb push je lods lret pop and pop jp mov in aas jnp out cs cmovnp push mov xor mov aaa push jno stos (bad) jecxz sbb push jb cld xor add add add repz mov dec push notl xor in dec jbe mov jmp ja mov jmp ja mov jmp js mov ljmp jne scas lret out and jp mov in or inc pop jnp mov in or inc pop jl mov out or inc popa jge mov out or inc bound mov lock fwait mov dec test notb das dec test notb das dec push notl dec imul xchg xor mov xor insl mov xor outsb mov push cmp nop lods lret pop cmp xchg lods leave out pop cmp xchg lods leave out and xlat adc mov xor in pop cltd aam dec (bad) pop pop mov add cmp pop js mov in or mov out or inc pusha jge mov hlt adc dec andl adc dec push notl xor xchg mov cmpsb loop pop xchg jmp je cld sbb push jb scas jmp adc int or mov in or inc pusha jge mov out or inc bound mov shr or inc popa jle mov cmc adc dec push clc adc movsb rcr push xor mov xor insl mov ss outsl mov aaa push jo lods leave out pop cmp xchg scas lret and int3 jmp pusha jl mov out or inc bound mov icebp or pushf mov dec push notl dec imul xchg add rcr push xor mov sbb lods lret and jne scas into in or mov out or inc popa jge mov lock inc bound mov inc sbbb dec sbbl movsb rcr push xor mov xor insl mov xor (bad) aaa push jo test cmp stos (bad) in and hlt aas arpl adc repz jle mov dec sbbw push outsb mov and das jl jmp mov aad push mov and sbb push jo test cmp nop lods leave add pop and pop jnp mov out or inc popa jle mov icebp or movsl icebp sub pop jbe mov jmp jns add xchg mov in or pop pop scas clc xor jl stc xor lods in pop xchg int3 or mov das dec imul adc dec test idivb ja loopne push test mov xor mov cmp nop lods enter cmp nop lods leave out pop cmp xchg scas lret and int3 add jge out sub rorl (bad) movl push stc push xor mov xor outsb mov ss outsl mov ss jo test aaa push jno lods lret and jbe scas int3 call js mov ljmp mov in or pushf mov inc mov pop dec xchg (bad) aaa jle das xchg push outsb mov aaa push jo test cmpl mov xor outsb mov cmp xchg mov ljmp ss outsl mov aaa push jo test aaa push jo test aaa push jo test aaa push je lods lret and jne scas lret and jne scas lret and lret call jbe scas iret jmp and pop jp mov jmp sub cltd mov out or inc popa jle mov lock inc bound mov lock pushf mov inc arpl mov inc arpl adc dec andl adc dec andl adc dec push notb das dec push mov sbb push outsl mov cmp nop lods leave out pop cmp nop scas lret add cmp jne scas lret out and pop js mov ljmp mov ljmp lcall sbbl popf mov dec sbbl nop lods leave out and jbe scas int3 call jge mov lock popf mov dec andw dec imul mov xor outsb mov cmp xchg scas lret out and pop ja mov ljmp mov in or inc pusha jge mov icebp push sub sbbl mov xor insl mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) in sbb lods lret out and inc pop jp mov in or mov inc arpl mov add cvttsd2si (bad) lahf mov dec push notl xor mov xor xchg cmpsl (bad) push cmp xchg lods lret pop cmp jne scas lret and int3 call ja mov jmp jp mov jmp and pop jge mov lock inc arpl mov dec sbbl mov das dec push notl xor mov xor insl mov ss jo test loop sbb push jno stos (bad) jecxz sbb stos enter cmp nop lods leave out pop cmp jne mov ljmp mov jmp and pop jp mov in or inc popa jge mov lock inc arpl push sub (bad) sahf add push outsb mov xor add loop sbb push jo test cmp mov cmp (bad) stos enter cmp nop lods enter es pusha jge mov icebp or pushf mov inc sbbl mov cltd iret add pusha test ficoml and jns mov in or mov in or inc pusha jl mov out or inc pusha jge mov out or inc popa jle mov dec andw dec push notb das dec push notl xor mov xor xchg xor xchg xor (bad) loopne sbb push outsl mov aaa push jo test aaa push jo test cmp (bad) lret jmp jns mov out or inc popa add add fdiv adc dec andl add xor mov xor outsb mov sub rorb ja fcoml inc js fstpl (bad) mov push dec xorb push cmp xchg scas lret and cmp loopne pop mov pop jnp mov out or inc pusha (bad) sahf mov dec cmpw push xchg mov icebp movntps sbbl sahf mov dec add jae clc push cmp (bad) lods leave out pop cmp jbe scas int3 call ja mov ljmp or sbb lods fisttpl push mov or scas out xchg mov adc lret sub jle mov aaa jne in xor test adc cwtl mov icebp push sub sbbl mov test (bad) add add add add aaa add xchg scas lret and lret add or mov push push stos lret call ja mov ljmp mov lock pushf mov inc sbbl popf mov dec sbbl sahf mov dec push mov xor xchg (bad) les cmp in push (bad) (bad) pop xchg xabort gs (bad) or jnp and mov push sub (bad) lahf mov dec sbbw dec andl adc dec test notb das dec imul xchg xor ret loopne sbb ret loopne sbb ret loopne sbb (bad) loopne sbb push outsb mov cmp nop lods enter push cmp (bad) lods enter and pop ja scas lret call jbe xchg mov in or inc pop jnp mov out or inc pop jnp mov lock pushf mov inc arpl adc sbbl sahf mov dec gs sahf mov dec imul xchg xor xchg xor test xor xchg xor xchg xor mov xor mov dec imul xor xchg xor xchg xor mov ss outsl mov cmp pushf mov dec gs sahf mov dec test notl dec insl iret or fldt push outsl add sbb push jo stos (bad) in add cmp iret jmp and pop jp add inc bound mov adc add jle ljmp pop xchg into pop inc js loopne inc jns out pop xchg (bad) imulb arpl sar mov and fistl mov lcall push jb lods enter cmp nop lret add mov or leave push dec mov ljmp or imul mov xor mov pcmpgtd mov daa pop test pop je lods lret and jne scas lret and divb imul jle mov inc sbbl mov shr or inc bound mov inc sbbb dec imul add clc adc movsl ret pop xor outsb mov push cmp nop lods leave in pop cmp xchg add inc pop jp mov in or inc bound mov inc sbbb dec sbbl lahf mov dec push notb das dec push cli pop xor insl mov xor (bad) loopne sbb push outsl mov aaa push jo test cmp (bad) stos enter cmp jbe scas int3 call ja mov ljmp mov jmp and pop jns mov in or mov in or inc pop jl mov repnz sub sbbb dec gs sahf mov dec andw dec andl adc dec imul mov add movsl ret sbb outsb mov aaa push outsl mov aaa push jno xchg scas lret call ja mov jmp pop jl mov (bad) push mov hlt dec popf loope inc pusha jl mov out or inc pusha jge mov out or inc bound push sub sbbb dec fs icebp and mov push push mov stc sub enter sbbl dec imul mov ss jo stos (bad) call js mov jmp and pop jp mov in or mov out or inc pusha jge mov out or inc bound mov lock lahf mov dec imul xchg dec imul xor mov xor insl mov add sbb push jb stos enter cmp nop lods leave out pop cmp jne scas lret call ja add pusha jge mov out or add sbbl dec imul xor mov xor mov ss outsb mov ss outsl mov cmp xchg lods lret and jne scas lret out and int3 call ja mov ljmp mov ljmp mov lock inc bound mov dec sbbl lahf mov dec sbbw dec andl adc dec push dec xchg add cmp int push and jns mov in or mov out or inc popa jle mov inc addb add popf mov dec imul xor mov xor outsb mov add mov jb push jo,pt movsl roll xlat repz and xchg (bad) icebp and imull imul popa xchg divl xchg lret mov mov in or mov icebp or popf mov dec imul xor mov xor (bad) ss jo lret push pop mov cmp mov cmp xchg mov ljmp mov jmp and pop jns mov in or mov lock inc popa jle mov lock fwait mov dec gs sahf mov dec data16 lahf mov dec data16 lahf mov dec gs sahf int dec add dec insl mov add cld sbb leave out pop cmp jne scas lret call ja mov ss sti xor push and jns mov in add inc bound mov dec push and notb das dec push notl dec imul xchg xor mov push jo test cmp mov cmp (bad) stos enter cmp (bad) lods leave in push cmp nop lods leave out pop cmp jne scas lret and jp mov in or mov in or mov out or inc pusha jge mov out or inc popa jle mov lock inc bound adc mov dec push notl xor mov xor xchg xor add mov xor (bad) loopne sbb push jo test aaa push jo test cmp stos (bad) in sbb push jb stos enter and pop ja mov in or pushf mov inc arpl movntps sbbl sahf mov dec sbbl dec push mov xor xchg xor mov (bad) jbe scas int3 call ja mov jmp js mov out or inc popa jle mov inc bound mov lock pushf mov inc mov out dec jb stos enter cmp xchg mov ljmp mov ljmp xchg leave cld xor xchg lret arpl out dec jl fimul add cmp stos loop pop mov xor loopne dec jp fist inc jl jecxz dec xorl ljmp push xchg int xor aaa insb sahf aad cmp jle cld aaa insb lcall jmp add vucomiss mov mov sbb mov sbb xorb clc xor aam cmp push mov sti xor (bad) inc js call add jo fist dec xchg imull popa pushf aam inc js jmp imull popf aam stos jmp jo in push ficom push pop cmc daa pop mov (bad) push xchg mov rorb cmp mov lret lret (bad) xor inc jg ficom dec jg out push push xchg roll cs xchg popf leave cmc and rolb sub mov add add stos loopne mov dec xorb or cmp std aaa gs (bad) repnz mov ret pop mov sti sub push je lods leave out pop inc pop add mov lock pushf mov das dec push notl dec imul xchg xor mov push jo test cmp mov cmp mov cmp (bad) stos enter cmp nop lods leave in push cmp xchg mov ljmp mov ljmp mov in or mov in or inc pop jnp mov in or inc pop jl mov out push sub sbbb dec sbbl sahf mov dec andl adc add add test das dec push cli pop xor mov xor insl mov xor insl mov xor (bad) loopne sbb push jo test cmp xchg lods lret pop and jns mov jmp and pop add mov out or inc popa jle mov lock inc bound mov inc arpl mov dec push notb xor xchg xor xchg xor xchg dec insb mov xor mov aaa push jo test cmp (bad) stos enter sbb jmp hlt sub sti ds jp mov in or inc pop jl mov dec sbbl sahf mov dec data16 lahf mov dec data16 lahf mov dec data16 sahf mov dec imul test xor xchg xor xchg xor xchg xor mov push outsl mov sbb stos enter cmp ja mov jmp jns mov jmp and pop jns mov jmp and pusha jge mov out or inc bound mov lock inc popa jle mov lock inc popa jle mov lock inc popa jge mov lock inc popa jge mov movntsd sbbl sahf mov dec sbbl dec sbbl adc dec andl adc dec xchg clc adc movsb rcr push xor xchg dec imul xor add xchg xor mov ss outsl mov cmpl in push cmp nop lods lret and jne scas int3 call ja mov jmp js mov lock inc arpl mov das dec push clc adc dec push mov sbb push outsl mov cmp stos (bad) jecxz sbb pop jne scas lret out and int push and pop js mov ljmp mov in or mov in or mov icebp or pushf mov inc sbbl sahf mov dec andl adc dec push notl xor movsl ret sbb insl mov xor (bad) ss outsl mov add sbb push jo stos (bad) jecxz sbb lods enter ds ja mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or mov in or inc pop jl mov cmpsb xlat and lock push mov rcr sbb outsb mov add jne scas lret call js mov jmp and sbbb dec data16 sahf mov dec test cmc adc dec test notl dec push mov xor mov push jno stos (bad) jecxz sbb push jb lods enter cmp nop lods leave out pop cmp jbe scas int3 call ja mov ljmp mov lock inc bound mov inc sbbb inc sbbb add add repz gs sahf mov push mov sub leave ljmp mov in or mov in or inc pop jl mov out or inc popa jge mov out or inc popa jle mov icebp or mov cs test notl dec imul jo test aaa push jo xchg fildll bound xchg leave (bad) xor cmc sub int cmp fstl dec cmpl in or inc pop jl mov out or inc popa jle mov lock pushf mov dec imul mov dec insb mov xor insl mov ss jo test cmp fstl jle and jnp mov in or inc pop jl mov out or inc popa jle mov lock add sub ret jge lock mov dec imul mov cmp call lods leave in pop cmp xchg lods lret and lret out and int3 call jl mov out or inc pusha jle mov lock pushf mov das dec push notl dec push mov ss outsl mov cmp xchg lods lret and jbe scas lret call ja sub mov dec test notl xor xchg xor (bad) aaa push jo test and jne scas lret call js mov ljmp mov in or inc bound mov dec sbbl lahf mov sub mov dec test notb xor mov xor (bad) loopne sbb push outsl mov aaa push jo test cmp stos (bad) jecxz sbb stos add jmp ja mov in or inc pusha jl mov out or inc bound mov das dec imul xchg xor mov push outsl mov aaa push jo test cmp mov cmp (bad) lods enter mov add sub sbbb dec push mov xor mov aaa push jo test cmp stos (bad) jecxz sbb push jno stos (bad) in sbb scas lret call ja mov ljmp mov add add pop and pop jns mov in or pop jp mov in or mov in or popf mov dec andw dec push notb das dec imul xchg add push outsl mov cmp nop lods lret pop cmp jne scas lret call jbe cwtl mov in or inc pusha jl mov out or inc pusha jl mov out or inc arpl insl mov cld sub (bad) xchg hlt push sahf (bad) push inc jp out jo imul jmp ja mov ljmp mov lock popf mov dec sbbl test xor mov xor xchg xor or into in or inc popa jle mov add add icebp push sub sbbl mov xor xchg xor rorl pop je scas lret and lret call or push outsl mov cmp (bad) stos enter and lcall bound mov inc arpl adc mov xor mov xor mov cmp stos (bad) in sbb stos enter cmp (bad) lods enter cmp xchg scas lret call jbe scas int3 call jnp mov out or inc pusha jge mov out or inc popa jle mov lock inc bound (bad) lahf mov dec test notb das dec test notl xor mov xor ret add loopne sbb push outsl mov ss outsl mov aaa push jo test cmp lods lret pop cmp jne scas lret notl dec imul xchg dec imul xor mov xor scas int3 call ja mov jmp js mov ljmp mov add or inc arpl mov dec sbbl mov das dec push notl dec imul xchg push insb mov xor insl lea cmp (bad) lods leave in push cmp nop lods leave out pop cmp jbe scas lret add or mov in or inc pop jnp mov in or inc sbbl add add sub mov dec andl adc dec test notb das dec test stc push xor mov xor outsb mov xor ret loopne sbb push outsl mov ss outsl mov ss jae lods enter and pop js mov ljmp mov jmp and pop jnp mov in or add sbbb sbbb dec test notb das dec push notl das dec push notl xor mov xor mov push insb mov aaa push jno stos (bad) jecxz sbb push jno stos (bad) in sbb lods leave in push add pop js mov ljmp mov jmp daa inc pusha jge mov out or add inc popa jle mov lock fwait mov inc arpl movntps sbbl lahf mov dec push mov xor mov xor (bad) ss outsl mov cmp stos (bad) jecxz sbb pop jne scas lret call pop jl mov out or inc popa jge mov lock inc arpl mov dec addl adc dec imul mov aaa push jo test aaa push jo test cmp mov cmp (bad) stos enter cmp xchg mov jmp jns mov jmp and jns mov jmp and pop jp mov in or fwait mov inc sbbl mov add dec insb mov push jae lods leave out pop cmp xchg scas lret and jbe scas int3 call ja mov jmp jl mov out or inc popa jge mov lock inc arpl mov inc sbbb dec sbbl lahf mov dec imul sbb push jno stos (bad) jecxz sbb push jb lods enter cmp xchg lods lret pop cmp pop jns mov in or mov inc sbbb dec sbbl lahf mov dec test notb das dec push cld sbb push outsl mov aaa push jno stos (bad) loop sbb push jl and shrb push outsb mov ss add lods leave in pop cmp xchg mov in or add mov out or inc popa jge mov lock inc bound mov icebp push sub sbbb sbbl mov xor xchg dec imul xor insl mov xor (bad) aaa push jo test cmp xchg lods lret and mov in or inc pop jl mov out or inc popa jge mov lock pushf mov das dec push cli pop xor mov xor vpaddd aaa push jo test cmp stos (bad) jecxz sbb push jno stos (bad) jecxz and int push and pop js mov ljmp mov in or mov out or inc popa sbbb dec imul (bad) pop xor outsb mov add cmp xchg scas lret and int3 call ja mov jmp jns mov jmp and pop jp mov lock pushf mov inc sbbb dec gs lahf mov dec push notb das dec push notl xor mov xor (bad) push cmp xchg lods lret pop cmp jne scas lret call ja mov ljmp lcall data16 lahf mov dec test notb das dec push notb dec push cmpsl ret loopne sbb push outsl mov aaa push jae scas lret call jns mov in or mov in or inc pop jl mov out or inc popa jle mov lock inc bound andl add fdecstp push xor mov xor outsb mov ss outsl mov aaa push jo test cmp stos (bad) jecxz sbb push jb scas lret out and int push and pop js mov ljmp mov out or inc pusha jge mov out or inc popa jle mov lock lahf mov dec test notb xor mov ss outsl mov cmp roll jnp mov out or inc pusha add das dec imul xchg xor fsts push mov icebp push sub sbbl mov xor (bad) jecxz sbb push jb stos enter cmp nop lods leave out and int3 jmp js mov ljmp add and add sahf mov dec andw dec push clc adc mov dec mov sbb mov into jmp and mov cvttsd2si (bad) lahf mov dec test notb das dec imul mov push insl mov xor (bad) in sbb lods leave out pop cmp jne scas lret out add mov out or inc pusha jge mov lock inc bound mov dec add fdivrp sbb outsb mov aaa push jo test cmp mov cmp nop lods leave out pop cmp xchg scas iret in or inc pop jnp mov out or inc bound mov inc sbbb dec gs sahf mov dec addl add add das dec insb add sbb push jno stos (bad) in sbb lods lret and jbe scas int3 call js notb popf mov dec andl ficomp pusha sbbb dec gs sahf mov dec imul xchg push insb mov cmp nop lods leave in pop cmp xchg scas lret call ja mov add or inc popa jge mov lock sub sbbl mov xor push jo test cmp test cmp mov cmp (bad) stos (bad) in push cmp xchg divl cmp into add jae aam xor inc jae aad cmp aam cmp rclb dec jnp in dec jl in add add dec popf (bad) adc mov sbb scas fiadd adc jne aam xor cmp add jp sbb (bad) in push cmp xchg scas lret call js mov in or mov dec test clc adc movsl ret sbb (bad) sbb push jae lods leave out and int push and jge mov lock inc arpl mov dec gs lahf mov dec imul jo test cmp nop lods leave out daa inc pusha jge mov icebp add das dec imul mov out dec jl in dec (bad) mov and mov jle,pt cmp xchg scas lret call js mov in or inc popa jge mov lock sahf mov dec andl adc dec push mov ss jo add cmp jne scas lret call ja mov ljmp mov jmp and mov in or inc pop jg mov inc arpl cmc adc movsb rcr pop xor insl mov aaa push jo stos (bad) jecxz push cmp xchg scas lret call jl mov out or inc popa jle mov lock pushf mov dec addl adc dec push movsb rcr push xor mov cmp stos (bad) in add ds ja mov jmp jns mov jmp and pop jns mov pop arpl pushf roll cmp call fisttpll jp loope dec xchg cmpsl (bad) loopne sbb push jo test cmp mov cmp (bad) stos enter ds ja mov jmp pusha jge mov out or inc popa jge mov lock inc arpl mov inc sbbl mov xor xchg xor mov dec insb mov xor insl mov xor vpaddd cmp nop lods leave in pop cmp nop lods leave out pop cmp jne scas lret and jne scas lret call pop jnp mov in or inc pusha jl mov repnz sub sbbb dec add adc mov xor mov push insl mov xor jno stos (bad) jecxz sbb push jb lods enter cmp nop lods lret pop cmp jne or jne clc pop xor push test mov xlat inc lods push push jb lods leave out and mov out or inc popa jle mov dec gs lahf mov dec push mov xor mov cmp jne scas lret call ja mov ljmp mov in or mov out or inc popa jle mov repz rcr push xor mov xor (bad) aaa push jno stos (bad) in sbb xchg mov ljmp mov out or inc arpl mov dec gs sahf mov xor mov xor (bad) sbb push jno stos (bad) jecxz sbb mov jmp jns mov in or mov out or inc bound mov inc sbbl mov xor mov xor (bad) add pop cmp xchg scas lret out and int pop and jp mov lock xchg cmp (bad) stos enter cmp nop lods lret pop cmp jne scas lret test enter test (bad) std xor loopne dec jle repnz ret pop xchg rolb jb xlat pop cmp inc jns fisttpll inc jae fmull je out add (bad) imulb pop mov rorb inc jns out dec xorb push aas js mov rorb inc jp in sub push cmp loope dec (bad) mov and inc jnp hlt lods in popa popf fildl out dec (bad) mov es mov add mov aaa jb in pop xchg int3 or mov out push xchg rorb fs fcoms or mov ficomp push xchg int cmp jmp pop fwait (bad) cmovbe fcomps push mov and push mov std cmp loop movsl or in push xchg rorl dec cmpl push nop iret or push dec xchg out pusha cltd rorl dec test sti xor out pop xchg iret or jg repnz hlt xor sbb mov add ja in es sahf fiaddl sbb mov add sub rorb inc test clc xor sbb add mov ficompl push (bad) movb jbe out daa pusha lahf fsts dec xchg (bad) cmp mov sub rcll dec test fistl add add jne out pop xchg rorb jg cli xor ficomp pop nop leave add mov loop pop xchg int inc jl repz sahf fistl push mov add push fcoml cmp push adc dec mov (bad) cmp out pop xchg leave std xor mov pop cmp mov lods jecxz dec test and test lods call daa pop xchg rcll mov push outsb mov push mov push inc jg add cwtl roll jno,pt fcoml dec jg divl adc pop xchg (bad) aaa xchg fldenv jne fisttpll cmpsl in dec add mov das dec push notl dec imul loope push fistpl (bad) add mov and xor adc popa cmpsb (bad) jns ljmp add pop cwtl into divps out js,pn out aas xchg out or pushf mov dec push movsb rcr push jnp lock pop add jnp (bad) ds leave jmp js mov in or clc xor insl lcall jb in pop xchg out inc mov and mov dec push clc adc movsl ret cmpb ret sbb jb add mov lock popf mov dec sbbw dec imul mov xor cmp clc jbe notl movsb rcr pop xor insl mov ss jo test cmp mov cmp xchg mov shr or inc bound mov inc arpl add jg mov dec sbbl mov das dec imul mov ss outsl mov cmp mov cmp nop lods lret and int push and pop jns mov lock inc bound mov inc sbbb dec data16 lahf mov dec push clc adc dec push mov xor mov cmp (bad) lods enter cmp jne scas lret out and int push and pop jns mov in or inc pop jge mov out cvttps2pi (bad) lahf mov xor mov xor outsb mov cmp mov cmp jne scas lret out and iret in or pushf mov dec add mov dec data16 lahf mov dec imul push xchg aam push outsb mov cmp xchg scas lret call ja mov jmp js mov ljmp mov in or inc pusha mov daa ja mov out or outsl ret adc repnz inc pop jl mov lock lcall push and jp mov in or inc pusha jge mov lock mov xor add outsl mov inc pushf (bad) in push cmp nop lods leave in push cmp nop lods leave in push cmp xchg lods lret pop cmp jp mov in or fwait mov inc arpl mov inc bound mov inc sbbb dec sbbl lahf mov xor add add movsb rcr push xor mov xor mov xor mov push insb mov cmp mov cmp add push mov ficomp push xchg int inc jp stc cmp loop push mov imull imul or mov fstl dec mov adc mov out and (bad) dec (bad) iret or into or add jne out cmp out xor in sub stos call or leave add jle clc ss cld cmp xor in pop mov rorl dec mov hlt xor out sub push pop cltd add sbb into adc leave or mov cmovl aam dec mov add jge add jl clc xor outsl scas out sub pop cmp pop pop nop (bad) cli xor loope dec test (bad) or jge testl xorl jmp and out sub in push in sub fistp pop (bad) pop inc jle hlt xor arpl xlat pop push mov add mov or jb fstpl dec xorl mov sub fstpl dec test in and mov push cmp lcall adc push mov push push sahf das popf out sub fisttpll outsb movsb adc ja loopne dec xorl add jecxz push in cmp stos in cmp xchg int3 maxps adc add mov ss outsl mov rcrb pop js mov jmp and mov dec data16 lahf mov dec test movsl rcr pop xor insl mov xor (bad) aaa push jo test mov adc fmuls cmp cmp sub or mov push (bad) cmpsl (bad) cmp mov cmp xchg scas lret call jl mov out or inc bound mov inc sbbl sahf mov enter mov jecxz sbb mov ljmp mov ljmp mov in or mov out or inc popa jge mov lock inc arpl mov dec andl adc dec imul xchg test loope sbb push jo test cmp mov cmp xchg mov ljmp inc jnp (bad) sbb push jno stos (bad) jecxz sbb xchg mov jmp js mov jmp and pop jp mov in or mov dec andw dec push notl dec imul mov xor insl mov cmp in push mov and pop jns mov jmp and pop jl mov out or inc pusha jge mov out or inc test cmc arpl scas shr or inc pop jnp mov out or inc pusha jge mov out or inc bound mov inc arpl mov adc inc popa jle mov cmc adc dec test notb das dec push notl xor mov sbb (bad) aaa push jo test lcall adc add dec test jmp and mov out or inc popa add adc dec test notb xor mov ss outsl mov cmp (bad) stos enter cmp nop lods lret pop cmp jne scas lret call jbe scas int3 jmp notb push insl mov xor insl mov xor ret loopne sbb push outsl mov aaa push outsl mov xchg adc cmpsl fist adc or jnp fmull sub sub mov (bad) cli bound fbld mov add outsb stos fistp xchg lret jbe fstl bound icebp sub push inc jno aam cmp add insl movsl ficom imul mov mov and rorb cmp mov ss jecxz dec cmpb ficom inc outsb pushf rolb mulb daa push in push fisttpl sub xchg mov jmp and mov in or inc pusha jge mov out or inc bound mov dec push mov xor mov xor insl mov ss jo test aaa push jo test cmp xchg scas lret and jbe scas lret call jbe scas int3 call push cwtl lock lods leave out pop cmp xchg scas lret out and jnp mov in or inc pop jnp mov in or inc pop jnp xor lds jno,pt (bad) cmp mov je fisttpl cmp mov movsb fidivl data16 movsb rcr sbb (bad) aaa push jo test cmp (bad) stos enter add pop js mov ljmp mov jmp daa inc popa jge mov lock pushf mov mov sbb sbbb sbbl mov xor mov ss outsl mov aaa push jo test aaa push jo test dec ja pop out jae enter inc repnz movsl or into (bad) dec sarl cmp push mov cmpsl add arpl dec and inc fwait jecxz adc mov sub aaa push jp loop adc and stos stc or lock out inc xor pop pushf pushf and jne xchg pop fist clc push add push jb cwtl in xor popa nop add jl and xor push push cs sub sti dec sbb std js sahf xchg cmp push sub popf (bad) pusha xlat das push and cmpsb ret mov cmp push clc mov jbe hlt sbb test jg adc int3 push or ja leave pop out mov pop mov cli sub jae insl sub xorl jnp out inc inc inc test cmp test cmp cmp mov test cmp test cmp cmp mov test test cmp test test mov cmp test cmp cmp test jmp cmp cmp test test test cmp cmp nop cmp cmp xor test test cmp cmp test test cmp test test cmp ret call test cmp cmp test cmp mov cmp test test test cmp mov cmp nop cmp cmp test inc test cmp cmp test test mov cmp test test cmp test mov cmp cmp test cmp cmp ret pop test test test cmp cmp clc adc nop cmp cmp test test jmp and sbb ja adc mov jno mov mov dec xchg outsl and sarl (bad) ud1 sti jns add push mov xor dec cld xor jne adc aas insl call cmp cmp test test cmp jmp test test cmp test cmp pop cmp test cmp cmp test add test test cmp cmp nop mov cmp cmp test test cmp mov inc cmp test test cmp test test cmp test cmp cmp dec test cmp cmp test test test cmp cmp nop cmp dec cmp test test cmp cmp test test cmp test test dec cmp test cmp cmp test cmp cmp test test test dec cmp cmp nop cmp cmp test nop cmp test test xor test cmp cmp test test test cmp cmp test or cmp cmp nop test test test cmp cmp test call test test cmp cmp test cmp cmp nop test test push test cmp cmp test test test cmp cmp test test jne mov cmp cmp nop test test add test cmp cmp test mov test test cmp cmp test add cmp cmp nop test test call test cmp cmp test jmp test test cmp cmp test pop cmp cmp nop test test push test cmp cmp test push test test cmp cmp test push cmp cmp nop test test mov test cmp cmp test call test test cmp cmp test pop cmp cmp nop test test cmp jl test cmp cmp test mov test test cmp cmp test sub cmp cmp nop test test mov test cmp cmp test sub test test cmp cmp test call cmp cmp nop test test mov test cmp cmp test push test test cmp test cmp mov test cmp cmp test test push test test test test cmp push test cmp cmp cmp test push nop test test test cmp call nop test test test test jmp test cmp test cmp cmp pop cmp test nop test test inc test cmp nop test test push test test test cmp test pop cmp cmp cmp test nop inc test test test cmp nop or test test test test test call cmp test cmp cmp cmp mov test nop test test test cmp jne cmp nop test test test mov test test cmp test cmp cmp cmp test nop test dec test test cmp nop test dec test test test test cmp dec test cmp cmp cmp test dec nop test test test cmp pushl nop test test test test test cmp test cmp cmp cmp test nop test test test cmp nop test test test test test cmp test cmp cmp cmp test nop test test test cmp nop test test test test test cmp test cmp cmp cmp test nop test test test cmp cmp test cmp test test cmp cmp test cmp test test cmp test cmp cmp cmp test cmp cmp test test nop cmp cmp xor test cmp cmp test test nop cmp cmp test cmp cmp test test nop cmp cmp test cmp cmp test test nop cmp cmp test cmp cmp test test nop cmp cmp test cmp cmp test test nop cmp cmp test cmp cmp test test nop cmp cmp test cmp pop cmp test test nop cmp cmp test cmp cmp test test nop cmp cmp test cmp cmp test test nop cmp cmp test cmp cmp test test nop cmp cmp or test cmp cmp test test test jne nop cmp cmp test cmp jmp cmp test test nop cmp enter and sti repz jecxz pop fnop sub add push in jb loopne push call lret mov or cmp mov mov mov jae lds dec inc pop adc adc sub sub ss jg xor pop pop sbb pop lret or dec push sbb xor jg pop aam ficomp daa jo loopne inc es popa ret and shrb xchg scas fs gs cmp xchg push iret jbe out mov add insb sub push push imul and shrl sbb ja adc jmp out jno dec mov dec xchg outsl and sarl (bad) (bad) ud1 sti jns add push mov fisttpll xor jne adc aas loope pop bound and sti repz jecxz pop fnop sub push in jb loopne push call lret jnp inc movsb ds dec push add cmp mov cmp add outsb fldenv sti mov fisub rcll mov test nop cmp cmp test pushl cmp cmp test test nop pop cmp cmp test cmp cmp mov test test nop cmp cmp mov test cmp test test cmp push cmp test cmp test test mov cmp test test cmp test mov cmp cmp cmp cmp test mov cmp cmp test test cmp cmp jne cmp test cmp test test mov cmp test cmp cmp cmp cmp jne cmp test cmp cmp test pop test cmp cmp test cmp mov test test cmp test cmp mov cmp cmp cmp test cmp mov cmp test test cmp cmp add test cmp test test cmp mov test cmp cmp cmp cmp mov test cmp cmp test test add cmp cmp test cmp test mov test cmp test cmp cmp add cmp cmp test cmp cmp lods test test cmp cmp test test je cmp test test cmp test add cmp cmp cmp cmp test mov cmp cmp test test cmp cmp jne cmp test cmp test test mov cmp test cmp cmp cmp cmp jne cmp test cmp cmp test mov test cmp cmp test cmp push test test cmp test cmp pop cmp cmp cmp test cmp push cmp test test cmp cmp push test cmp test test cmp push test cmp cmp cmp test push test test test cmp push cmp test cmp test test push test cmp cmp test cmp push test test test cmp cmp push test cmp test test test call cmp cmp test cmp test add test test cmp cmp test ret mov mov jae stc popa dec dec inc pop adc adc sub sub ss jg xor pop pop sbb pop lret push hlt dec push sbb out pop aam ficomp daa jo loopne inc es popa ret and shrb popf xchg fs gs cmp xchg push iret jbe out mov add insb sub push push imul and sub sbb ja adc mov jno mov mov dec xchg outsl and call cmp xchg push iret jbe out mov add insb sub fwait push push imul and inc (bad) ss inc int loope inc repz cmp mov loope inc mov jl mov jg (bad) adc xchg jne jmp (bad) gs mov arpl xchg jne scas test mov jg lahf cltd push inc mov jle mov adc mov adc mov adc xchg mov mov je push and ud1 sti jns add push mov xor dec cld xor jne adc aas insl enter and sti repz jecxz pop fnop sub add push in jb loopne push call lret mov or cmp mov mov mov jae lds dec inc pop adc adc sub sub ss jg xor pop pop sbb pop lret or dec push sbb xor jg pop aam ficomp daa jo loopne inc es popa ret and shrb xchg scas fs gs cmp xchg push iret jbe out mov add insb sub push push imul and shrl sbb ja adc call lea loopne fs inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc lea push inc fs loope in mov push pusha int3 hlt dec fs loope in mov push repnz and addr16 xor and loope fwait mov fs mov and loope add daa push movsl cltd gs push and or and jmp ja and loope fwait mov fs fwait mov fs insb and loope fs lods arpl jg shrb or lds loope cmpsb sbb mov or fs mov xor je ss je ss je ss je ss je ss je ss je ss je ss je ss je ss je ss je ss je ss je ss je ss je ss je ss push loope ds outsl fs loope xor mov addr16 loope pusha dec loope fidivl loop push or and shlb mov loope cmp and loope ds pusha fs loope in loope fs sbb mov out or mov mov addr16 loopne cmpsb sbb mov out or out adc loope mov and loope nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop rcll xchg nop inc push push and mov xchg pushf adc gs and loope imul in and lahf sub and insb inc gs or dec and out lods movsb aaa lea push dec fs loope in pusha movsl in sub or dec and out lods movsb sub dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec mov dec push pusha int3 sub (bad) scas and addr16 pusha test pop dec and in lods movsb pop out push loope ds bound loop and in mov loope ds bound loop and addr16 push loope ds bound loop and addr16 push loope ds bound loop and addr16 push loope ds bound loop and addr16 push loope ds bound loop and lea addr16 addr16 pusha fisttpll jno hlt jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb xor jb lahf hlt lods fs fs xchg imul out and in push lods jecxz push fs loope adc pop fs and or loope xor cli jnp and loope divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl jb divl sbb mov push xor and int jns and loope ficompl cwtl lods out add and push imul and loope xor cmpsb jl and sbb mov push xor and int jns and es and loope fidivl and loope in loope fs loopne fs bnd loope lea lret addr16 mov and pop fs sbb ss xor and addr16 test jcxz data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 in ficom sahf insb bound out cmp popa pop pop push adc and fs movsb imul addr16 (bad) hlt cmp addr16 pop in out cmp loope fs addr16 daa mov daa mov and test mov mov scas mov inc in loope arpl loop mov jne xor cmpsb packsswb int3 adc fs ljmp cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs jb addr16 and movsb xor fucom push fwait adc out and and test push and in in and push out jge out push adc pop and (bad) out push icebp xor jnp in push add mov pusha add mov dec mov fsubp arpl fnstenv out leave bound xchg movsb cltd arpl ret mov dec loope pusha and xor mov adc mov movsb out pop in in sub push pop and out push scas scas push in push in sub call out pop in out popf cmpsb and in push in popa push ja push out cmc loope lods scas and and popa bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound out bound (bad) addr16 pop lcall dec mov movsb dec lea addr16 lahf popa fldz fs call outsl fwait push in or pusha dec loope fs loope adc je gs out loop fistpl cwtl (bad) fdivrp addr16 sub jp and push cwtl in pusha aad sub loope mov sbb fwait lods cmpsb jg int jge and inc jp and or out push loope ds lcall loope lea xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor mov icebp xor outsl (bad) repnz addr16 mov mov fs xchg inc fs fbld in and jmp addr16 ficompl adc scas outsl fwait adc mov mov and and xor cmpsb and scas mov fwait pop push xor sbb mov or in fisub adc addr16 dec mov ficoml push cwtl push fidivl and loope fs loope push and jge fs loope push and lea and loope fwait push in xor stc in and daa fs data16 arpl and sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge aas sti jge and mov adc push adc mov fwait pop push xor imul and loope push and lds insb fcmovbe cwtl xor mov loope jae push bound add movsb and fisttp cmp lcall adc addr16 xor jg cmp mov xor stc in and loope add add push je loopne fs in popf loope fs loope out push loope ds popf ficompl adc outsl fwait push in mov sbb mov push jl dec addr16 jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov jns mov mov and out in out jp in out and outsl xor pop push mov fucom push fs mov addr16 mulb push mov int sahf ficompl adc outsl fwait push in mov sbb mov or and loope fs loope fs mov fwait pop push repnz and push addr16 loope out gs in or and icebp xchg loope fs lods arpl jg sbb ficompl or (bad) movsb and fs push addr16 rcrl fs fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fistpl pop fisttpl (bad) movsb and fs push addr16 loope aaa scas mov fwait pop push xor or out xor sub fs and fs push addr16 loope aaa scas mov fwait pop push xor or cmpsl popf loope fs cli aam loope in in fs push push fwait jb mov scas jl fs mov sub loope fs mov fwait pop push xor jae and (bad) aaa fwait nop push addr16 rcrl gs or jg loope mov jecxz and loope jb divl xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor jno xor pusha int3 sbb and push cwtl in mov push pusha je mov pusha (bad) in sub or mov dec jo and lea fwait cmc bound and addr16 and xchg ss and jmp jecxz and out and push loope ds xchg fisubrl add mov cwtl push fidivl in sub or jae loope mov pop cwtl fwait dec loope mov sbb cmpsl push loopne fs data16 icebp ficoml jp cwtl push fidivl and jmp fs lods outsl (bad) loop addr16 pushf xchg ficompl mov mov enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter loop loope cmp loope xor xor pushf and loope out push loope ds xchg fisubrl call fsubl cwtl and addr16 pop push mov lcall fs push cwtl out sbb push fs lods arpl jg rclb loope fs mov fwait pop push mov push loope ds xchg fisubrl sbb loope out push loope ds xchg fisubrl sbb addr16 (bad) in fs popa fs or addr16 and data16 and loope mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor or push lods sbb and addr16 jbe gs loopne fs loop and addr16 mov fcompl loopne loopne sbb popf mov out jecxz and addr16 stos loope movsb sub gs loope imul mov loopne loopne fs addr16 jecxz and addr16 out loope fs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs sub fs loope imul icebp fs in movsl xchg adc loope movsb push mov push xchg dec faddl dec add add movsl out jecxz and addr16 loopnew movsb push scas pop popa and push fs popa push fs (bad) in mov and and repnz loope ficoml gs loopne fidivl gs push cwtl push and fldcw fs cwtl sarl push repz loopne fs cmp sbb sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb pop popf sbb dec in gs sar and addr16 xchg jne fs loope (bad) jecxz cwtl fwait dec jecxz gs loope fwait xchg jne fs loope lea shlw loope pushf xor push cwtl out loope loopne pop cwtl fwait lods sbb cmpsl push loopne fs arpl xchg arpl jp cwtl push fidivl and and gs push shl and addr16 xchg popa fs insb fcmovbe cwtl icebp mov addr16 jecxz gs loope fwait xchg jne fs loope frstor bound outsb fidivl and loope mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov (bad) cmp mov lods sbb cmpsl push loopne fs data16 xchg gs in loope out jp cwtl push fidivl and push cwtl push and rcrl mov push in and bound gs loope fs mov in and push lea fs outsl fs xchg js xchg jo xchg push or test bound movsl daa xchg pop sub push out and inc in sbb pusha mov or loope movsb es loope fs loopne fs pushf imul loope fs mov push xor addr16 punpckldq scas cmp in mov ja xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor ss xor fldcw push and pusha mov xchg orl aas in mov or lods jl test int3 jecxz movsl lods lods jae daa or fwait inc push imul insb inc fdivs popf loopne fs bound sub loope mov cwtl fwait scas mov bound addr16 dec loope mov and push and mov and push xor daa in sbb push aaa xor je gs or fs sbb ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp pushf lahf ficomp out pushf cmpsb and and in and fidivl and mov xor mov pop gs push insb scas movsb imul lods bound adc pop lcall jnp lds cmp lods pop out and loope fs loopne fs jecxz fs mov in jecxz lahf out icebp or sub push es lods xor and pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop fcmovu cwtl pop out pushf and gs loope push in imul jecxz js bound fs push add and add (bad) adc arpl loope lea or and adc gs in push and arpl loope movsl daa xchg out pop in out lcall or dec loope dec loope fs push addr16 lret fs loop and out addr16 mov mov fs mov lods scas std outsl in cmp es jmp test push icebp addr16 cmp loope out pop in out lcall cmp imul sbb imul in mov jecxz cltd push jecxz lcall mov xor in (bad) fs loope cmp in js popa pushf fs jmp cmpsb data16 adc fs mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or or dec mov or in sbb push outsb fs loope fs push rcrb lods cwtl rcr in fidivl fs pop gs cli in sub or and or mov dec jecxz fwait cmc push outsl fs mov dec loope fidivl imul adc out fs push cwtl xor imul push adc push in (bad) mov cmp out js daa and loope out jecxz lahf and pop inc gs add fs loope out ds lea fs push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc push push adc and out ds addr16 and cwtl rorl loope fidivl and loopne lods fs gs loope aas scas cli in sbb test push and jmp jnp push sbb movsl and je loope js xchg insl out adc out push xor lea addr16 jo push lods scas mov in xor es cmp adc push adc adc loope fs pusha fs pusha inc or and push addr16 mov push add add push push gs loope push cmpsb and out mov out out icebp or loop dec and addr16 mov pop addr16 loope stc sbb std outsl imul jnp lods std jo orl rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll adc rcll iret loope fs loope fs insb dec gs sbb push push inc and addr16 incb gs mov push addr16 and or mov mov in fbld fs loope in jo fbld loope in pusha mov adc jo in sub push js sbb xor push mov fistpl cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall cltd lcall or and imul lods jl xchg out loopne data16 sbb pusha das bound adc push inc and pop int3 xchg es in lods fs pop outsl popf xchg sahf in ljmp xor sub lods sbb cmpsl push loopne fs daa or icebp addr16 cwtl fwait mov addr16 in addr16 mov mov fwait ja push add or inc xchg adc inc mov push pop loope dec into push cwtl fbld add mov and fs in jmp das insb lods out in sub push arpl cmpsb or int mov add push fs add and loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs loope fs add add dec loope xchg std push cwtl aaa inc xchg and push mov fs mov push dec test push pop loope imul cwtl sub add push xchg push or or push cwtl addr16 cmp sub and or and push and push mov adc mov xchg xor dec xchg add dec xchg adc inc lea add adc mov push mov pop dec mov lea loopne fs mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov jae fisubrl push adc mov adc xor inc xchg push or (bad) loopne push cwtl sub add dec mov add push test add push sub xchg add push test add mov add adc (bad) and inc (bad) adc test dec lea pop inc xchg add dec xchg adc inc lea add adc fs rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb rolb or add or jno adc mov add and push mov pop adc adc mov add fwait imul or pop adc adc mov test daa dec mov add dec test fs (bad) fidivl or inc xchg adc pusha mov or add and push and push movsb pop or inc mov or adc and push and inc adcb jne or inc xchg adc and push and inc xchg add inc xchg aaa push dec (bad) add push stos push or or pop mov fs imul mov es mov es mov es mov es mov es mov es mov es mov es mov es mov es mov es mov mov test adc xor mov push xchg mov fwait jae adc xor mov add and push sub inc test or pop mov cwtl fwait jae adc and pusha cltd lea loopne fs cmc divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb jae divb push xor push movsl add push xchg adc adc sbbl xchg add inc mov adc movhps add (bad) fisubl or test push inc xchg adc int sbbb xchg push or adc push loope (bad) negl cwtl aaa dec test adc or sbb and dec xchg push or and inc xchg add push test adc push and inc adcb arpl (bad) sbb push cwtl xor adc arpl das mov push and dec xchg add popl or (bad) aas lret aaa insl mov add dec xchg add push mov fs and (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf pop (bad) pushf or mov push xor sub pop fs mov ficoml push push and push xor push cmpsl push or adc push mov xor push xor or or cwtl fwait jbe add dec movsb pop add adc jb popl push cwtl and sub dec xchg add dec test fs mov fidivl or dec (bad) add push loope push inc xchg and pop test divb adc inc mov xor xchg rdpmc and loope jbe repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz aaa repz int xchg fidivrl insb fs push sub add xchg inc ss xchg adc inc shrl pop xchg push jbe adc getsec dec test or test adc add dec pop mov pop push mov adc mov add inc dec sub or sbb inc sub mov add push adcb push mov inc xchg cmp dec popl or cmp push xchg adc add push or xor pop inc mov cwtl fwait pop in insl xor xor inc lea dec ja add push mov add cwtl dec inc and push inc dec pop mov and cmp pop dec mov add dec ss popl and push arpl (bad) mov and adc fs mov (bad) addr16 push addr16 push cwtl fs mov dec test add pop test out or push inc mov add mov push cwtl fwait ja add add scas push or (bad) jmp push cwtl sub cmp int xchg fiaddl add inc loope sub push cwtl push int xor mov fs push popf fs push cwtl (bad) xor addr16 lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf mov lahf iret xlat aam rol (bad) xor and out call movsb nop aad jmp pop out mov mov lcall jmp pop xchg and es out cmp test and roll jb add (bad) repz mov sub test daa (bad) divb push cs lret pop jbe mov add cmpsl jns xchg add cmp jns dec sti mov inc push bound pop pop (bad) je pop rcrl stos push ret inc cltd stos add mov jge inc out popa jg fsubrs fidivrl leave ret insl clc (bad) in in or test mov insl addl add lock xlat xchg jne mov sti jbe out fs call out cs dec jno dec xor vpunpckhwd pop adc jo out div fwait mov icebp fist js inc fcoml pop pop or mov mov fdivrp push lcall ret test ljmp dec inc sbb pop inc movsl adc xor in push inc enter and pop xchg adc jp pop push rol inc lock xchg push add dec pop jmp mov xchg cwtl aad and pop mov xchg push test sbb mulb js lret sbb jle lret cmpsl gs and seta sbb cli loop je sbb push add sub lods mov mov add mov scas sbb ret xlat xchg (bad) mov or jbe out fs call out lods clc dec fnstcw dec cs imul push (bad) pop jo jl hlt or mov (bad) add js push fcoml pop pop sub or mov fdivrp or push rol mov or bound jge inc dec adc psraw movsl push inc xor mov pop xchg sub push adc pop (bad) lock rcll inc out mov sbb (bad) jo mov dec jbe ret fsubl pop push ret cld or xor aaa fnstsw and xchg sbb mov imul inc add ds scas cmp and dec cwtl sub sarb insl dec lods mov pop push push aas mov sub dec inc (bad) xor popa nop push stos js push push add pushf mov mov pop jmp cltd gs fcmovnbe push jle lahf (bad) mov sbb test xchg pop cmp xor mov ja lret loope sti enter cmpsl pop test gs xchg popf test and and sub add shrd lea jecxz (bad) inc (bad) lock xor rcrl mov je in bound out mov mov shr (bad) mov dec jo ret jo cmp ret cld pop outsl mov mov frstor rcl sbb mov insb daa adc les jne cmp and or dec adc pop adc mov lret insl inc pop mov das push and mov mov popa nop sub js push push push (bad) pushf push out mov add mov into cltd jmp push jle (bad) mov sbb inc (bad) xchg xchg cmp test hlt pop xchg xorb ja lret loope mov test and push pop push xchg inc test popf cmpsb cmp sub pop sub add shrd lea push fxch sbb data16 add cmp ficom insl cmp pop mov push aad out push (bad) stos cmp imul sti xchg adcb push pop and fdiv divb mov xor mov addr16 pop shlb into pop pop sub push mov stos int xor lea fist addr16 sub popa xchg inc rolb out mov sbbl mov out test test insb mov out mov roll fnstsw mov int3 jle scas adc cwtl xchg mov pushf aam movsb roll (bad) sbb inc xchg jne leave mov mov mov pop aas (bad) xchg (bad) dec dec inc fistl and das push fnstcw sbb or lods iret mov lock arpl loope mov push in insl cmp xlat pop rorl (bad) aad pop push (bad) push cmp out nop sbb sub sti xchg jae lcall pop push std fsubrl mov push inc repnz bound mov addr16 pop rclb cmpsb daa fwait inc pop push popf jge loopne stos mov outsb int adc addr16 ja ret jb xchg inc dec inc outsl popa out rorb push xorl mov js dec insb jns cltd test out mov repz ds pop mov push insl shrb pop and pop lock aaa jne fdivs cmp data16 imul adc push mov and cld in xor in adc xor iret insb jp adc mov xchg inc add repnz je mov sub push ja jbe nop scas mov fcomi or int3 xorl stc ss pushf and stc (bad) lret icebp push rcrl hlt jp push (bad) sub rolb sub or pop std inc (bad) outsl loope enter pop ds orl jns outsb fs sub incb adc int out lar out popa out jge and imul aad pop xchg dec les mov cmp mov rcrl ds fwait mov pop insl rolb pop push inc lock pusha mov inc mov jb addr16 adc push and cli mov cld fistpll and in in xor insb adc adc test mov inc inc mov lea je fidivl mov sub jbe nop scas ja fucomi or mov xor stc ss (bad) pushf sub and lret icebp stc loope pushf mov ja adc repnz lcall movsb sub push sub mov pop out or pop sub addr16 cmp lea lahf rcrl daa and in aaa or push das popf cmpsl adc inc pop adc xor cmc outsb in fildll cmp push pop mov icebp jmp pop sahf jg lock mov inc sbb adc xorb rcrb gs roll xor jnp inc xor mov stos mov inc or mov loop dec out (bad) cltd std fld enter bound rol mov and adc (bad) xchg dec ficoml inc xchg (bad) (bad) into xchg push sti or pop sub mov xor pop inc fsubr dec adcl pop mov loope add lcall lock cmp movsl movsb push xchg push mov jle data16 add sub addr16 cmp arpl lahf shrl aaa pop test rcpps push das and popf adc jno mov cmc xor iret outsb jae fisttp sub leave pop push icebp mov pop jmp cld sahf jne lock inc sbb adc xorb rclb stos clc xchg rcrl inc test jnp inc xor mov stos mov inc or fisubrl sub sahf shlb or push (bad) xor ret dec jno jmp lcall hlt cmp call mov stos push outsb js pushf mov lock mov loopne fsubr and mov mov (bad) pop mov mov pop adc nop add (bad) inc inc (bad) xor lret mov das mov sti sbb enter or cs fildl mov movsb test iret (bad) repz cmpsb in dec loope stos sub mov aam inc sbb fadds stc or pop insb push ljmp mov xchg lds sbb mov fist add cwtl add xor sub out aad rcll shrb in add daa mov cmp jecxz lods movsl xor (bad) sub sahf shr imul xor jno jmp fwait push aas mov int hlt cmp call mov and aaa or stos leave lock out mov (bad) mov out (bad) and loopne mov lret (bad) pop cmp mov pop adc nop add (bad) cmpsl inc movl mov sti mov or add xchg lods cmp cs fildl mov xlat test rol rep and adc aam sub inc orb fsts or pop insb dec ljmp rcrb aas lahf mov mov dec xor sbb inc xor push push (bad) inc pushf imul dec ss test fisubrl fdivrl int3 lds cli dec out mov pop mov sub xchg xorl push shrb mov or push inc xchg jo xchg sub (bad) jmp or cld repz add (bad) jle ljmp xor loop pop jg mov out stc jmp fstl dec fdivrs test cmpsl sbb fucomip cmp sub push std mov pop sub inc mov push out dec pusha xchg insb out sti lods neg inc repnz adc mov inc lret add roll xor dec sbb cmp mull sbb mov push mov jnp or pop test mov dec xor add (bad) rcrl xchg inc xor and push (bad) sbb inc inc mov ret loopne cmc add test and fadd pop adc int3 out mov pop mov sub push xorl push shrb mov in lcall xchg push aad lret xchg sub (bad) jmp or push repz cld cmovae (bad) stos pop ljmp ja (bad) jne and pop push lods addr16 les stos push add js jle inc out bound fidivrl lret push outsb clc mov in or xchg jg xchg outsl dec fs jo data16 std or je xchg xchg pop fcoml iret inc cwtl inc leave lea psubusw push sbb sbb icebp popa pop (bad) fucomip push test fcom jl call (bad) jno mov or and in cmp xchg pop xchg (bad) sub fucom jnp push pusha sti mov fwait insl gs mov push in nop pop xchg scas sub stc out cmp xchg int ret xor into orl pop push add lea divl mov sub das (bad) int3 pop imul jns dec add jecxz mov jb inc pop cld adc xlat (bad) jne and pop push lods cli push les stos addr16 push fidivr inc out js dec (bad) imul sahf push outsb clc lret push or xor xchg xchg (bad) mov loope (bad) std or insb movsb mov jmp push push iret inc pop inc leave xor (bad) fldcw mov cmpsb push dec sbb icebp popa mov test aad lahf call (bad) jno mov sarb push fcoml or movl mov (bad) or pop rol mov or outsl inc sbb inc dec adc adc out push inc xor mov and sbb enter dec ret dec dec sbb pop in rclb cmp and rcrb add stos aaa mull (bad) xor jns int3 sbb jecxz jae xchg gs adc sets push lahf test fnstsw jecxz je int push and movsb mov mov roll nop add mov fdivs mov daa cld jmp pusha mov das stc lds cmp lret push pop adc jno out clc mov push add loopne push xlat adc fcompl movl mov idiv or cmp addb ret mov mov outsb adc out mov xchg jecxz (bad) inc enter mov into ret mov jne in arpl out mov mov shr clc mov les cmp ret fsubl pop outsl mov mov fisub rcl sbb mov insl daa adc dec mov dec cmp and cltd sub dec adc pop adc mov int3 outsb inc pop rcrb push xor and je mov bound push push push (bad) popf pop out popl pop xchg jp das iret lcall data16 fildl mov push mov nop cwtl xchg cmp pusha xchg xorl sbb test and pushf push sbb inc stos in fiaddl sub pop sub adc out mov loope mov roll push inc into ret mov jne mulb cli out in ss shr mov sbb les cmp jecxz mov jge ret fwait sbbb imul (bad) fdiv divl mov xor fidivl movsb aas jp inc in es insb in pop shrl iret pop pusha sub imul stos into lds lea loopne pop addr16 js,pn les xchg inc roll out mov test lret mov out test test lcall sub hlt rolb fidivr mov mov sbbb xchg (bad) mov mov movsl rolb (bad) sbb jbe leave mov mov mov pop inc (bad) xchg orl fistl and xor fidivrl sbb or lods iret mov icebp scas fs push in insl cmp fcoms aam sbb ret xlat push cmp lock sbb in mov je fwait sbbb pop push pop pop (bad) fsubrl mov push inc repz arpl mov push in rcll cmpsl sub test sahf jle loope stos mov outsb into loopne in addr16 js les xchg inc dec inc outsl (bad) out rorl (bad) mov lret cwtl aaa ss out test and jns lcall clc sti hlt mov sub fidiv mov cltd push (bad) mov mov cmp add mov leave inc popa mov mov lahf inc (bad) pop orl fistl and jb,pt or lods iret sbb mov and in mov nop jp outsl or and dec jb jno mov add and xor jge sbb hlt icebp lds in push mov sar out jne dec fxch daa loope aas rclb xor repnz clc inc shrl ret ss cmp jl inc ds out or scas xchg (bad) pop jp stc add jmp or cs dec out xor rclb adc mov adc xor movsb int3 xchg cmpsb (bad) and mov pop addr16 add push negb arpl sbb jmp xor sarl aaa jo inc insl pusha bound adc or cli gs and in fidivl push push out mov or or push fwait add mov and std mov nop jp outsl or das jb sbb cmpsl lock mov add icebp repz jge and sbb lds add ja xchg push cld out fstpl jne aas fsts (bad) xor sbbb shrl ret fdivrl add jl push ds out inc push or jp stc add jmp push cld ficomp js ljmp adc push rcl dec mov adc adc pop push movsb xor and les jns mov push sbb scas sbb cmp xor pop dec sarl lea xorb test jbe inc sub js push movsl mov cli orl dec xor (bad) clc sarl pop pusha and mov pushf cmc inc lcall rorl (bad) cmp xchg adc add dec adc out mov adc cs push cmp in jge adc mov fmull cld lods outsl repz stc in inc add and xor mov adc popa loope sti sbb jae bound cmp fwait xchg gs jg or mov aaa call or add sub or cwtl (bad) imul push lock fisub outsb xor or xor push arpl test mov inc sti pop in (bad) jmp push cmp cmp iret jnp pop pop int3 push (bad) movsb repnz addb xor jno test adcl xchg dec xor fisttpll xchg push mov lret cmc inc imul lcall (bad) cmp xchg adc notb and out dec inc adc cs mov xlat cmp push adc or lods mov sbb stc in inc add pop fbstp mov adc popa loope sti sbb jae push push clc ret (bad) cmp add xor sub outsl inc call mov lahf mov stos sbb fidivr inc fmull es nop iret roll xchg push jg jnp (bad) rorl hlt add dec adc dec in stc test sub sub fldenv repz push sti lods insl icebp sbb sti pop divl inc add sahf loope rclb pop fist and aaa in fst cmpsl mov daa lret call je shrb cld add pop in mov cmp xor jecxz bound dec imul jmp aas ljmp loop xlat into push cmc (bad) mov pop cmp adc xchg mov xor in inc ret movb cs sub negb push std fmuls and cmp sarl int out lahf sbb lret stos or fdivp scas fmul shll sbb jnp push psrld (bad) adc dec in lea cmp jp mov fldenv or mov lods repz sbb xchg sti insl divl inc add sahf loope rclb pop (bad) cli sbb lcall aaa in pop aad lret call je fs sub add insb pop dec or cmp xor jecxz out or bound mov movsl dec jmp pop ljmp loop xlat into ds cli cwtl movsl or int3 aam jns in xor faddl push jp mov loop hlt out pop fmuls dec sarl mov (bad) xor and sbb scas pop push and or dec pop mov fdivp test fnstcw in leave push mov (bad) lret (bad) pop into sti sub inc adc aaa and sub repnz xchg add sbb pop xor inc sub cli (bad) stc lret adc cmp push gs jl xchg and inc inc mov mov jmp cmp data16 mov xlat mov (bad) ljmp mov sub and dec jle sbb add mov pop xchg dec out rcpps sub rclb imul or pop or aam out pop ja cwtl (bad) or push aam movsl push in xor fmul push jp mov pop mov loop adc sarl fsubs mov xor pop ss scas pop and push call or negb fabs in leave test ret fmull lret (bad) pop (bad) sti sub inc adc mov icebp popa aaa mov sub repz test sbb pop cmp fildll xor (bad) stc inc adc cli sub cmp sbb sbb and inc xchg inc mov jmp fildl add inc aad (bad) xlat mov (bad) mov inc ljmp dec xchg jnp dec sub arpl pop mov pop int out scas repnz sub fmull repnz push test je dec std sbb mov jb stos test cmp sarl pop sbb push dec cmpsl cmc dec mov add fnstcw inc jmp fs mov aad cwtl push push dec pop test xchg cli das jp jg dec xchg arpl lea and adc add push adc add add and add add or test add add add sbb add add add push add fimul add adc add add or push sldt sub add and add inc add add add add add add add add add add push or adc or adc or adc adc add adc adc push sbb add sbb add sbb sbb and and add and add and sub sub add sub xor add xor cmp add ss add cmp add cmp add das add xor inc cmp add xor inc cmp add xor inc cmp add sub inc cmp add and inc xor add adc dec cs add or dec sub add add dec sub add add push sub add pop xor add add pop xor add push add add or pop cmp add or pusha cmp add push add adc arpl adc arpl adc arpl add add add push add pop add sbb inc sbb inc sbb gs sbb inc sbb inc push add add and pop inc add sub push inc add xor push inc xor push inc xor push inc xor add cmp push dec cmp push dec add add add inc add inc add inc add dec add dec add dec add push add push add add dec add inc add inc add (bad) incl jo xor add sub jno sub jb sub jae sub je sub jne sub add xor jp xor jp xor jnp add add cmp jle cmp jg cmp andb (bad) inc add push inc add insl dec add outsb dec add outsl push add jo add jb add jne add jns add jnp add jg add andl fwait andl test popf xchg sahf mov lahf mov mov mov mov nop jnp lahf nop jge mov xchg jl test xchg jg stos cwtl jg stos cwtl addb cltd addl mov test mov xchg add add mov (bad) cmp mov mov mov mov mov lea mov mov mov nop add movsb xchg add movsb cltd add movsb lahf add movsl mov add test cmpsl add lods cmpsb add mov add scas pushf add mov add mov add mov add mov add mov add mov add mov add mov add mov mov add mov mov lret (bad) mov int3 ret mov add (bad) mov add leave les into lret into int3 lret int add iret into add rcl add rcl add aam add aad add xlat xlat add (bad) add fcmovnu add fstp add (bad) add (bad) add loopne add loope add loop add jecxz add in add out add out add jmp ljmp in in add out out add out out add lock add icebp lock repnz add repnz repz repz add cmc testb idiv add clc stc add stc cli add sti sti add cld cld add std std add std std add or or push add add or (bad) fldz out neg call adc adc or (bad) xchg (bad) loop loopne loop jmp hlt idiv std std std stos shlb (bad) pop push pop scas ret ror into rcl fsub loop out lock stc std std movsb cmpsl xchg nop mov mov enter enter xlat fsub loop out div std std std std lahf mov push push (bad) enter mov rcl (bad) loopne out out div idiv std std cltd cltd (bad) (bad) pop dec pop mov mov into rcl fsub call idiv std std std xchg xchg jbe dec xchg into mov mov mov (bad) xlat (bad) fsub loop out stc std std std std std std xchg mov mov mov mov mov enter mov rcl rcl rcl (bad) loop std std mov mov mov mov cmpsl cmpsl xchg mov rcl fstpl mov (bad) mov mov (bad) (bad) (bad) pop pop pop push adc push push scas rcl rcr (bad) adc xchg pop push push push push push push push push push push push sbb rol rcl fldl mov (bad) pusha pop pusha push push sbb sbb push pop pop mov cmpsl rol (bad) pop pop test mov imul scas mov std std std std std std std xchg mov adc inc mov int3 xlat fsub call stc stc div div out out stc nop mov (bad) fcoml jle mov call div out out out not mov rcl or outsb outsb outsb imul div hlt out out call movsb mov test jae js outsb js std std hlt out out out out call lahf lahf cmpsl cmpsl mov inc imul arpl and std imul jmp loop (bad) mov mov ds dec and and and and and fdivr call xchg mov pop or cmp inc sub sub and and jmp loopne xlat xchg cltd cmpsl pop or imul (bad) call outsb std loopne ffree jnp mov pop or jle enter call pop dec jbe shr fcoml mov jb xor cmp loop jmp sub outsb js (bad) fdivrl test lcall xor mov call outsb outsb outsb imul jle test pop jb xor inc ds idivl imul jb jnp jle test jbe cmp sub imul jae jbe jnp test xor cmp cmp inc inc imul jbe jnp jle push push outsb je cmp cmp ds inc inc inc xchg jae jbe jnp dec push outsb je cmp cmp cmp je inc imul js dec push imul xor sub xor xor xor cmp inc inc inc imul test mov mov mov xchg cltd cltd lcall cltd lcall lahf lahf lahf lahf lahf lahf lahf lahf pushf lcall cmpsl cmpsl stos mov add sub add sbb add xor add add or add add mov add add add add xor (bad) cmp xor cmp add push add adc dec cmp add sub push cmp add add cmp fs adc fs sbb imul pop inc add sub pop inc sub inc inc add aaa add cmp add add cmp dec inc add xor push dec cmp add cmp bound add daa add add add and add sub imul imul jae add xor jp xor add cmp dec inc inc add inc add inc add inc add dec add dec add add push add inc add inc add dec add add dec add dec add dec add dec add add push add push add inc add dec add dec add cmp jg dec add push add push add pop add pop add push add push add push add pop add add add pop add add push add insl add outsb add ja andb andl add outsl dec add imul jo add jae add jbe add pop add ja add jp add jge add insb add jge add add outsb add (bad) add subl test xchg pushf mov xchg test xchg mov lcall add xchg mov xchg mov cmp jle lcall add lea mov (bad) jns cmpsb xchg jns cmpsl xchg jle test jge lods cltd jg xchg lea add xchg mov lahf xchg mov popf lcall stos lcall lods fwait test scas popf xchg cmpsb xchg mov movsl cltd mov stos popf mov mov xchg mov mov mov fwait xchg add popf nop add mov xchg add movsb xchg add cmpsb sahf add movsl nop add cmpsb xchg add test add stos lcall stos cwtl add lods lcall cmpsb mov add stos movsl add lods movsl add lods test mov test mov mov add (bad) cmp mov lods add mov add mov add mov mov mov mov add mov scas add mov mov sarb add mov mov mov add sarb enter enter into (bad) mov add mov int3 mov add leave lds ror lds ror leave add into int3 add ror add rcl add aad add (bad) rolb fcom aad fstp rolb fcmovu (bad) add (bad) add fcmovu add (bad) add fstp add fstp add (bad) add loopne add loope add loop add in add in add out add call call add in ljmp out out add icebp icebp add repz add cmc testb stc stc add cld cld (bad) cmp add push sub adc adc add add pop xor fwait int out clc cli repz lods push sbb adc push (bad) mov fsubp out repz sti std std std mov test xor mov fneni(8087 out repz sti std (bad) (bad) cmpsl jns dec xor jge mov (bad) fucom ljmp (bad) xchg insl inc cmp mov enter jecxz lock cld (bad) (bad) decb mov mov mov rcl fsubrp repz test mov mov xchg (bad) (bad) jle popaw inc ss (bad) movsl push jbe mov movsb mov inc cmp adc fldenv pushf arpl aaa sub cmp mov into mov mov cwtl lods mov repnz stc sti divl mov xchg push jae ret repnz cmp sti sti cli cli stc call ret pop and push pop imul cli stc cmc cmc lret stos ret jbe and sub push pop mov cmc icebp in cmpsb mov pusha es adc push cmp cli hlt lock xlat test sub es or or adc sbb repnz xchg outsb sub pop jo cmpsb (bad) (bad) dec and xchg jne xchg pop sub mov shlb daa push lret pusha pop push jne bound pop and pop jns lock or mov imul pop and call es lret fs push push pop pop imul and scas (bad) sbb test sub pop pop inc adc push add jae or or sub push pop ds cmp add cmp push and and sub and insl push daa daa daa daa daa push push daa daa daa daa sub push push push push pop pop pusha inc adc lahf xchg xchg lcall lcall cmpsl stos scas mov jb add add add add add add add add add add add add add add add add add mov lcall mov xchg mov xchg stos xchg jnp mov xchg scas popf test mov mov mov mov mov popl mov mov inc add daa add pop xor add add (bad) gs add add pop xor add cmp inc adc push dec sbb je and add sbb dec add or insb dec push add sbb push and add ljmp je and outsl dec push add push and xchg add jae add sub add cmp add sbb push daa add xchg jnp add (bad) incl dec sub add xor jno sbb into int add xor nop jbe add jno cmp daa add xor add add lods sahf xchg add (bad) incl hlt hlt testb jbe add dec push add jecxz add jbe add xchg mov jge cmp sub mov mov mov mov add (bad) add std incl out out icebp add or add (bad) lret jae add mov shrb add or pop adc dec xor add adc add add cmp add pop dec xor loop fild call jle add cwtl addb mov add cmp add push and andb xchg add and cwtl mov out out out add jmp add in in add cwtl jle mov mov sarb xor mov scas add adc xchg add mov testl lock out add lock lock aad add cwtl add iret leave add inc add mov push mov pushf add lret loopne aam in loope std cld incb mov mov add mov add addb mov mov jo push add sub xor and add and add inc cmp jae push add mov lods add fmul add inc add test mov mov stos add (bad) jbe popf mov jg add add dec add cmp cmp xor jecxz ret add fcmovne add xor add dec xor cwtl nop mov (bad) sarb sarb add lds add fxch add in add in in ljmp add jnp add inc add push add mov mov lods add sarb fcmovnu fiaddl out out div testl cli sti sti add mov nop add jb pop push inc add movb rcl add lret leave add int3 leave add aad add loopne add ljmp stc cli stc add push add sbb add and sub and and adc add add add daa and pop push push add lods lods add iret into add out add hlt hlt add rol loopne loop in out call in jno rcl rcl aad xlat fcomp fcmovu (bad) (bad) xor ret (bad) (bad) enter int3 int into iret (bad) mov mov mov mov (bad) xor stos stos lods lods scas scas mov (bad) cmp xchg xchg xchg cwtl cltd lcall mov mov xor xor nop xchg xchg xchg jns jnp jge jg addl insl outsb sub xor jae jne ja pop pop pop pop pusha popa bound fs dec dec dec dec push push push push push push push push pop pop pop pop cmp ds inc inc inc inc inc inc inc inc dec dec dec dec sub xor xor ss sub sbb and and es sub sub sub movups adc adc sbb sbb add add or or or and add popa imul xor mov add add add incl jg add jle add add (bad) (bad) incl add add push inc add (bad) (bad) incl add add jle add add add jle add jle add jle add add add add add add js inc add (bad) (bad) incl add add jle add add add jle add jle add jle add add add add add les add (bad) (bad) incl add add jle add add add jle add jle add jle add add add add add add js inc add (bad) (bad) incl add add jle add (bad) (bad) incl add add inc add and pop mov add inc add mov add inc add mov add inc add and fs add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl mov xor cmp mov mov mov mov mov mov mov mov mov mov mov mov jne mov push push call jmp mov mov mov push push call fnclex cmp jge mov push push push push call jmp mov mov test jne push push call mov mov push push call fnclex test jge push push push push call mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov push push push lea push call add push call lea call lea call call mov mov lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call mov test jne push push call mov mov lea push push call fnclex test jge push push push push call cmpw je push push push call mov push add jo push push push push push push call mov add push push push call push push call push push call mov mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call mov test je cmpw jne mov mov mov sub cmp jb call mov lea jmp call mov mov mov mov lea call mov cmp jne push push call mov lea call lea push call lea mov movl mov call mov push push push call push push call push push call push push push push push push mov call mov lea call push push call mov neg sbb inc lea neg call test jne mov cmp jle push lea push lea push movl mov call mov mov call mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea lea mov call mov push push call push push call mov mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push lea push mov call push call mov mov test jne push push call mov push lea push call push push lea push call push call add push jmp lea call lea call lea call ret mov lea call mov lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret call nop nop nop xor ret nop nop nop nop nop nop nop nop nop nop nop nop nop sahf sahf sahf sahf int3 pushf or (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc popf or add add rcrb or ljmp add sahf or sbb or cmp or pop sahf or outsb sahf or xchg or movsb sahf or mov or les or or sahf or out sahf or add or sub or ds or dec lahf or pop lahf or xor add sbbb add lahf or ret add lahf or enter hlt lahf or add or sub or dec mov or data16 or mov or add subb or lret add add fisubl or cld mov or sbb or sub or mov or add add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add jnp pop pop jbe popa inc jns jne add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add pop pop jbe popa push popa jb imul popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb push popa jb test pop popa fs imul xor jae pop pop jbe popa inc jns fs cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 popa inc outsb gs je inc outsl jne fs jb outsl jb add pop pop jbe popa push je inc insl jo or pop pop jbe popa push jne dec ja gs add jns pop pop jbe popa inc jns xor add pop pop jbe popa dec bound popa jb or inc insb insb inc jne arpl outsb inc popa insb insb add pop pop jbe popa push gs jb add mov pop popa fs data16 je outsb add add jbe popa dec popa je dec fs popa insb insb dec add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add lods add fs imul xor add stos add fs imul iret add jbe popa dec xor popa jb add add jbe popa dec popa je dec gs inc popa insb insb add xor bound je inc outsl insl jo add pop pop jbe popa push popa jb gs bound fs data16 push add dec popa je outsb add add jbe popa push je dec outsl jbe add lret pop jbe popa dec xor jns mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound add 